{
    "filepath": "/corpus/benign/ntoskrnl.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "f67b8e5ee9e83cfcd3aff93e715be6c6"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "popl %ebp;popl %ds;addb %dl, (%eax);popl %esi;popl %ds": 3,
                "popl %ds;addb %dl, (%eax);popl %esi;popl %ds;addb %bl, (%esi)": 3,
                "popl %ds;addb %bl, %al;pushal;popl %ds;addb %dh, %ah": 3,
                "popl %ds;addb %bh, -(%eax);popal;popl %ds;addb %bl, %ah": 3,
                "popl %ds;addb %dh, %dl;popal;popl %ds;addb %cl, (%edx)": 3,
                "popl %ds;addb %ch, (%ebx);addb %al, -(%edx);arpl %bx, (%edi);addb %dh, -(%eax)": 3,
                "arpl %bx, (%edi);addb %bh, %dl;arpl %bx, (%edi);addb %dl, (%edx);popl %ds": 3,
                "popl %ds;addb %al, -(%esi);popl %ds;addb %ch, (%eax);addb %al, (%eax)": 2,
                "sbbb %dl, (%edi);popl %ss;popl %ss;popl %ss;popl %ss": 1,
                "decl %ebp;popl %esp;incl %esp;decl %ecx;pushl %ebx": 1,
                "decl %ecx;pushl %ebx;decl %ebx;addb %dl, (%eax);jbe  <FsRtlLegalAnsiCharacterArray+>": 1,
                "popl %es;popl %es;popl %es;movl $, %eax;outb %al, $": 1,
                "insb %dx, %es:(%edi);subl %eax, (%eax);nop;nop;nop": 1,
                "addb %al, (%eax);andb %al, (%eax);andb %al, (%eax);andb %al, (%eax);andb %al, (%eax)": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax)": 26,
                "addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %ah, (%eax)": 1,
                "adcb %al, (%eax);addl $, (%ecx);addl $, (%ecx);addl %eax, (%ecx);addl %eax, (%ecx)": 1,
                "adcb %al, (%eax);addb $-, (%ecx);addl %eax, -(%edx);addl %eax, (%edx);addl %eax, (%edx)": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb $, %al;adcb %al, (%eax);adcb %al, (%eax)": 1,
                "addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addl %eax, (%ecx)": 1,
                "addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addl %eax, (%ecx);popl %edi": 1,
                "bound (%bx,%si), %eax;nop;nop;popl %edi;jns  <FsRtlLegalAnsiCharacterArray+>": 1,
                "jns  <FsRtlLegalAnsiCharacterArray+>;outsl (%esi), %dx;je  <FsRtlLegalAnsiCharacterArray+>;nop;popl %edi": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;outsl (%esi), %dx;jb  <FsRtlLegalAnsiCharacterArray+>;nop": 1,
                "addb %dl, (%eax);addb %dh, (%eax);ja  <FsRtlLegalAnsiCharacterArray+>;js  <FsRtlLegalAnsiCharacterArray+>;addb %cl, (%eax,%eax)": 1,
                "addb %ch, (%bx,%di);outsb (%esi), %dx;addb %ah, (%ecx);insb %dx, %es:(%edi);addb %al, (%esi)": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);pushl %eax;addb %dh, (%edx);outsl (%esi), %dx": 4,
                "jae  <FsRtlLegalAnsiCharacterArray+>;imull $, (%eax), %eax;addb %al, (%eax);nop;nop": 1,
                "incl %esp;addb %cl, (%edi);pushl %ebx;addb %al, (%eax);addb %dl, (%edi)": 1,
                "addb %al, (%eax);pushl %edi;addb %cl, (%ecx);decl %esi;addb %dh, (%ecx)": 1,
                "pushl %edi;addb %cl, (%ecx);decl %esi;addb %dh, (%ecx);addb %dh, (%esi)": 1,
                "decl %edi;addb %cl, (%esi);incl %ebp;addb %al, (%eax);addb %dl, (%eax)": 1,
                "addb %bl, (%eax);popl %edi;addb %cl, (%ebx);incl %ebp;addb %bl, (%ecx)": 1,
                "incl %esp;addb %al, (%ebp);popl %eax;addb %bl, (%edi);pushl %esp": 1,
                "addb %al, (%ecx);pushl %esp;addb %al, (%ebx);decl %eax;addb %bl, (%edi)": 3,
                "addb %al, (%ebp);popl %edi;addb %cl, (%ecx);incl %esp;addb %ch, (%eax)": 2,
                "addb %cl, (%ecx);incl %esp;addb %ch, (%ecx);addb %al, (%eax);addb %cl, (%ebp)": 1,
                "incl %edi;addb %al, (%ebp);popl %edi;addb %cl, (%ecx);incl %esp": 1,
                "addb %al, (%ecx);incl %edi;addb %dl, (%ebx);popl %edi;addb %cl, (%esi)": 1,
                "addb %dl, (%eax,%eax);addb %bl, (%edi);incl %edx;addb %cl, (%ecx);decl %esi": 1,
                "decl %esp;addb %al, (%ebp);popl %edi;addb %dl, (%esi);incl %ebp": 1,
                "decl %ecx;addb %cl, (%esi);popl %edi;addb %dl, (%eax);pushl %edx": 1,
                "incl %esp;addb %dl, (%ebp);incl %ebx;addb %dl, (%eax,%eax);addb %dl, (%esi)": 2,
                "decl %ecx;addb %cl, (%edi);decl %esi;addb %al, (%eax);addb %al, (%edx)": 1,
                "decl %ecx;addb %cl, (%eax,%eax);addb %bl, (%edi);pushl %esi;addb %al, (%ebp)": 2,
                "addb %bl, (%edi);decl %esp;addb %cl, (%edi);incl %edi;addb %cl, (%ecx)": 1,
                "incl %ebp;addb %dl, (%edx);incl %ecx;addb %cl, (%eax,%eax);addb %cl, (%ecx)": 1,
                "decl %esi;addb %al, (%ebx);decl %esp;addb %dl, (%ebp);incl %esp": 1,
                "decl %ebp;addb %bl, (%edi);pushl %esp;addb %al, (%ecx);incl %edi": 2,
                "addb %al, (%ecx);incl %edi;addb %cl, (%ecx);incl %esp;addb %al, (%eax)": 3,
                "addb %cl, (%eax,%eax);addb %al, (%ebp);pushl %esp;addb %bl, (%ecx);pushl %eax": 1,
                "addb %al, (%edi);pushl %ebx;addb %al, (%eax);addb %dl, (%eax);addb %cl, (%ebp)": 1,
                "pushl %ebx;addb %al, (%edx);pushl %ebp;addb %cl, (%ecx);decl %esp": 1,
                "addb %dl, (%edx);incl %ebp;addb %dl, (%esi);decl %edi;addb %dl, (%ebx)": 1,
                "popl %edi;addb %cl, (%eax,%eax);addb %cl, (%esi);incl %edi;addb %dl, (%ebp)": 1,
                "addb %al, (%edi);incl %ebp;addb %al, (%eax);addb %dl, (%eax);addb %bl, (%edi)": 1,
                "incl %esp;addb %al, (%ecx);pushl %esp;addb %al, (%ebp);addb %al, (%eax)": 1,
                "incl %ebp;addb %al, (%ebx);decl %ebx;addb %dl, (%ebx);pushl %ebp": 1,
                "pushl %edx;addb %al, (%esi);decl %ecx;addb %cl, (%eax,%eax);addb %al, (%eax,%eax)": 1,
                "incl %esp;addb %al, (%ecx);pushl %esp;addb %al, (%ecx);popl %edi": 1,
                "addb %dl, (%edx);decl %ecx;addb %cl, (%esi);incl %edi;addb %al, (%eax)": 1,
                "addb %al, (%ebp);decl %esp;addb %dl, (%eax);popl %edi;addb %al, (%ebx)": 1,
                "addb %cl, (%ebx);popl %edi;addb %dl, (%eax,%eax);addb %bl, (%eax);pushl %esp": 1,
                "incl %edx;addb %cl, (%eax,%eax);addb %cl, (%ebp);popl %edi;addb %al, (%eax,%eax)": 1,
                "addb %al, (%ecx);decl %ebp;addb %al, (%ebp);addb %al, (%eax);decl %edi": 1,
                "addb %al, (%eax);nop;nop;pushl %edi;addb %cl, (%ecx)": 1,
                "incl %ebx;addb %dl, (%eax,%eax);addb %cl, (%edi);decl %esi;addb %al, (%eax)": 1,
                "addb %al, (%eax);nop;nop;decl %esp;addb %al, (%ecx)": 1,
                "pushl %edx;addb %al, (%eax);addb %al, (%esi);decl %esp;addb %al, (%ecx)": 1,
                "incl %edi;addb %bl, (%edi);pushl %edx;addb %al, (%ebp);incl %esi": 1,
                "popl %edi;addb %dl, (%edx);incl %ebp;addb %al, (%esi);addb %al, (%eax)": 2,
                "addb %cl, (%ecx);decl %esi;addb %al, (%edi);popl %edi;addb %al, (%esi)": 1,
                "addb %al, (%edi);popl %edi;addb %al, (%esi);decl %ecx;addb %cl, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %al, (%ebp);popl %eax;addb %al, (%ebp);addb %al, (%eax)": 1,
                "addb %al, (%eax);nop;nop;incl %edx;addb %ch, (%edi)": 1,
                "addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %dl, (%eax);addb %dh, (%eax)": 1,
                "addb %dl, (%edx);incl %ebp;addb %al, (%edi);decl %ecx;addb %dl, (%ebx)": 19,
                "outsl (%esi), %dx;addb %dh, (%ebx);outsl (%esi), %dx;addb %ah, (%esi);je  <FsRtlLegalAnsiCharacterArray+>": 1,
                "movl %esp, %eax;subl %edx, %eax;cli;movl %eax, %esp;movl $, %eax": 3,
                "incl %edi;addb %ah, -(%esi);pushw $;pushw $;incl %eax": 3,
                "movl $, %eax;movw %ax, %ss;pushw $;pushw $;pushw (%ebx)": 1,
                "movl (%ebx), %ebx;popl %ds;popl %es;popl %fs;popl %gs": 1,
                "pushw %es;pushw %fs;pushw %gs;pushw %ax;pushfw": 1,
                "movw %ax, %ds;movw %ax, %es;xorl %eax, %eax;movw %sp, %ax;addw %fs:(%di), %ax": 2,
                "xorl %eax, %eax;movw %sp, %ax;addw %fs:(%di), %ax;orb %al, (%eax);addb %al, (%eax)": 2,
                "pushl %edi;movl %eax, ;movl %ebx, ;movl %ecx, ;movl %edx, ": 1,
                "xorl %esi, %esi;incl %esi;movl %edx, %ecx;shll %cl, %esi;notl %esi": 1,
                "pushl %ecx;calll *;cmpl $, %eax;jge  <KiIpiServiceRoutine+>;movl $, %ecx": 1,
                "nop;nop;nop;movl %edi, %edi;pushl %ebp": 4599,
                "leave;retl;nop;nop;nop": 87,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 393,
                "popl %ebx;leave;retl;movl (%esp), %edx;movb (%edx), %al": 1,
                "retl $;leal (%ecx), %ecx;movl (%esp), %edx;movw (%edx), %ax;retl $": 1,
                "movl (%esp), %edx;movb (%esp), %al;movb %al, (%edx);lock;orl %edx, (%esp)": 1,
                "movl (%ebp), %ecx;jecxz  <RtlGetCallersAddress+>;movl %edi, (%ecx);popl -;popl %edi": 1,
                "popl %edi;popl %edi;popl %esi;popl %ebx;popl %ebp": 1,
                "notl %ecx;cmpl $, %ecx;jbe  <RtlInitString+>;movl $, %ecx;movw %cx, (%edx)": 1,
                "movl %edi, (%edx);orl %edi, %edi;je  <RtlInitUnicodeString+>;orl $-, %ecx;xorl %eax, %eax": 1,
                "orl $-, %ecx;xorl %eax, %eax;repne  scasw %es:(%edi), %ax;notl %ecx;shll %ecx": 1,
                "movw %cx, (%edx);decl %ecx;decl %ecx;movw %cx, (%edx);popl %edi": 1,
                "movw %fs, (%eax);movw %gs, (%eax);movw %ss, (%eax);movl $, (%eax);pushl $": 1,
                "movl %esp, %eax;pushl %eax;calll - <RtlRaiseException+>;nop;nop": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx": 437,
                "popl %esi;popl %ebx;popl %ebp;retl $;pushl %edi": 3,
                "movl %eax, %ebx;movl (%esp), %ecx;movl (%esp), %edx;movl (%esp), %eax;shrl %ebx": 3,
                "mull (%esp);movl %eax, %ecx;movl (%esp), %eax;mull %esi;addl %ecx, %edx": 4,
                "incl %ebp;movl (%esp), %edx;negl %eax;negl %edx;sbbl $, %eax": 1,
                "orl %eax, %eax;jne  <_alldvrm+>;movl (%esp), %ecx;movl (%esp), %eax;xorl %edx, %edx": 1,
                "divl %ecx;movl %eax, %esi;movl %ebx, %eax;mull (%esp);movl %eax, %ecx": 2,
                "subl (%esp), %eax;sbbl (%esp), %edx;xorl %ebx, %ebx;subl (%esp), %eax;sbbl (%esp), %edx": 2,
                "testl %eax, (%eax);xchgl %esp, %eax;movl (%eax), %eax;pushl %eax;retl": 1,
                "pushl %ecx;leal (%esp), %ecx;subl $, %ecx;subl $, %eax;testl %eax, (%ecx)": 1,
                "movl (%esp), %eax;orl %eax, %eax;jge  <_allrem+>;incl %edi;movl (%esp), %edx": 1,
                "sbbl (%esp), %edx;decl %edi;jns  <_allrem+>;negl %edx;negl %eax": 1,
                "negl %eax;sbbl $, %edx;popl %edi;popl %ebx;retl $": 1,
                "movl %edx, %eax;sarl $, %edx;andb $, %cl;sarl %cl, %eax;retl": 1,
                "pushl %esi;movl (%esp), %eax;orl %eax, %eax;jne  <_aulldiv+>;movl (%esp), %ecx": 1,
                "movl %edx, %eax;xorl %edx, %edx;jmp  <_aullrem+>;movl %eax, %ecx;movl (%esp), %ebx": 1,
                "xchgl %ecx, %eax;mull (%esp);addl %ecx, %edx;jb  <_aullrem+>;cmpl (%esp), %edx": 1,
                "addl %ecx, %edx;jb  <_aullrem+>;cmpl (%esp), %edx;ja  <_aullrem+>;jb  <_aullrem+>": 1,
                "incl %ebx;xorb %dh, (%eax);pushl %ebp;movl %esp, %ebp;subl $, %esp": 2,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%ebx);movl (%ebx), %esi": 1,
                "je  <_except_handler+>;leal (%esi,%esi,), %ecx;cmpl $, (%edi,%ecx,);je  <_except_handler+>;pushl %esi": 1,
                "jmp  <_except_handler+>;movl $, %eax;jmp  <_except_handler+>;pushl %ebp;movl (%ebx), %ebp": 1,
                "popl %esi;popl %edi;leave;retl;pushl %ebp": 2,
                "incl %ecx;negl %ecx;movb (%ebp), %al;movl %edx, %edi;rep  stosb %al, %es:(%edi)": 1,
                "movb (%edx), %cl;incl %edx;xorb %bl, %cl;je  <memchr+>;decl %eax": 2,
                "decl %eax;je  <memchr+>;testl $, %edx;jne - <memchr+>;subl $, %eax": 1,
                "popl %ebx;retl;pushl %ebp;movl %esp, %ebp;pushl %edi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edi;movl %ecx, %eax;movl %ecx, %edx;addl %esi, %eax": 2,
                "movl %ecx, %edx;addl %esi, %eax;cmpl %esi, %edi;jbe  <memcpy+>;cmpl %eax, %edi": 1,
                "shrl $, %ecx;andl $, %edx;cmpl $, %ecx;jb  <memcpy+>;rep  movsl (%esi), %es:(%edi)": 1,
                "jmpl *(,%edx,);nop;andl %ecx, %edx;movb (%esi), %al;movb %al, (%edi)": 2,
                "movl %edi, %edi;nop;subl (%eax), %eax;cwtl;subl (%eax), %eax": 1,
                "leal -(%ecx,%esi), %esi;leal -(%ecx,%edi), %edi;testl $, %edi;jne  <memcpy+>;shrl $, %ecx": 1,
                "jmpl *(,%ecx,);nop;xorb %ch, (%eax,%eax,);addb %dl, (%eax);incl %eax": 1,
                "decl %esi;shrl $, %ecx;decl %edi;cmpl $, %ecx;jb - <memcpy+>": 1,
                "nop;movb (%esi), %al;andl %ecx, %edx;movb %al, (%edi);movb (%esi), %al": 2,
                "subb $, %al;addb %dl, %ah;subb $, %al;addb %bl, %ah;subb $, %al": 1,
                "jmpl *(,%ecx,);nop;nop;nop;nop": 1,
                "addl %ecx, (%eax);addb %cl, %al;jmp ;addl $, %esi;addl $, %edi": 1,
                "jmpl *(,%edx,);movl %edi, %edi;shrb (%esi);incl %eax;addb %bl, %al": 1,
                "jb - <memmove+>;std;rep  movsl (%esi), %es:(%edi);cld;jmpl *(,%edx,)": 3,
                "addl %ecx, %eax;movl %edx, %ecx;andl $, %edx;shrl $, %ecx;je  <memset+>": 1,
                "andl $, %edx;shrl $, %ecx;je  <memset+>;rep  stosl %eax, %es:(%edi);testl %edx, %edx": 1,
                "testl $, %ecx;jne - <strcat+>;movl (%ecx), %eax;movl $, %edx;addl %eax, %edx": 1,
                "movl (%ecx), %eax;movl $, %edx;addl %eax, %edx;xorl $-, %eax;xorl %edx, %eax": 2,
                "testb %al, %al;je  <strcat+>;testb %ah, %ah;je  <strcat+>;testl $, %eax": 1,
                "je  <strcat+>;movb (%ecx), %dl;incl %ecx;testb %dl, %dl;je  <strcat+>": 1,
                "movl (%esp), %edx;movl (%esp), %ecx;testl $, %edx;jne  <strcmp+>;movl (%edx), %eax": 1,
                "orb %ah, %ah;je  <strcmp+>;shrl $, %eax;cmpb (%ecx), %al;jne  <strcmp+>": 1,
                "addl $, %ecx;addl $, %edx;orb %ah, %ah;jne - <strcmp+>;movl %edi, %edi": 1,
                "jne - <strcmp+>;movl %edi, %edi;xorl %eax, %eax;retl;nop": 1,
                "shll %eax;incl %eax;retl;nop;movl %edi, %edi": 1,
                "retl;movl (%esp), %ecx;pushl %edi;testl %ecx, %ecx;je  <strncat+>": 1,
                "movl %ecx, %ebx;shrl $, %ecx;je  <strncat+>;jmp  <strncat+>;jmp  <strncat+>": 1,
                "jmp  <strncat+>;jmp  <strncat+>;movb (%esi), %dl;incl %esi;testb %dl, %dl": 1,
                "testb %dl, %dl;je  <strncat+>;movb %dl, (%edi);incl %edi;decl %ecx": 1,
                "je  <strncat+>;decl %ecx;jne - <strncat+>;movb %cl, (%edi);popl %ebx": 1,
                "popl %ebx;popl %esi;popl %edi;retl;movl %edx, (%edi)": 1,
                "addl $, %edi;decl %ecx;je - <strncat+>;movl $, %edx;movl (%esi), %eax": 1,
                "movl $, %edx;movl (%esi), %eax;addl %eax, %edx;xorl $-, %eax;xorl %edx, %eax": 2,
                "testl $, %edx;jne - <strncat+>;movl %edx, (%edi);movl (%esp), %eax;popl %ebx": 1,
                "jne - <strncat+>;movl %edx, (%edi);movl (%esp), %eax;popl %ebx;popl %esi": 1,
                "decl %ecx;decl %ecx;notl %ecx;movl %ecx, %eax;popl %ebx": 1,
                "notl %ecx;movl %ecx, %eax;popl %ebx;popl %esi;popl %edi": 1,
                "movb %al, (%edi);incl %edi;decl %ecx;je  <strncpy+>;testl $, %edi": 1,
                "addl $, %edi;decl %ecx;je - <strncpy+>;movl $, %edx;movl (%esi), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %edi;movl (%ebp), %edi;xorl %eax, %eax": 1,
                "pushl %eax;pushl %eax;pushl %eax;movl (%ebp), %edx;leal (%ecx), %ecx": 1,
                "retl;xorl %eax, %eax;retl;leal (%esp), %esp;retl": 1,
                "retl;leal (%ecx), %ecx;retl;leal (%esp), %esp;xorl %eax, %eax": 1,
                "movl , %eax;retl;movl %edi, %edi;pushl %ebp;movl %esp, %ebp": 1,
                "calll *;movl %ebx, %eax;popl %ebx;retl $;leal (%esp), %esp": 1,
                "leal (%ecx), %ecx;incl -;movl %esp, %ebp;movl (%edi), %eax;pushl %eax": 1,
                "je  <KeSynchronizeExecution+>;movl (%edi), %ecx;calll *;movl %eax, (%esp);movl (%edi), %eax": 1,
                "cmpb %cl, (%edi);je  <KeSynchronizeExecution+>;movl %eax, %esi;movl (%esp), %ecx;calll *": 1,
                "je  <KeSynchronizeExecution+>;cmpw $, (%edi);je  <KeSynchronizeExecution+>;movl %eax, %ebp;movl (%edi), %edi": 1,
                "subl $, %edi;cmpl $, (%esp);jne  <KeSynchronizeExecution+>;jmp - <KeSynchronizeExecution+>;subl $, %edi": 1,
                "je - <KeSynchronizeExecution+>;movl $, (%esp);calll *;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movl (%esp), %ecx;pushl %ecx;pushl %eax;movl (%edi), %ecx;calll  <IoWMIDeviceObjectToInstanceName+>": 1,
                "pushl %ecx;calll *;orl %eax, %eax;je  <KeSynchronizeExecution+>;subl $, %esp": 2,
                "jmp - <KeSynchronizeExecution+>;movl %eax, %edx;movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl %ecx": 2,
                "pushl %edi;subl $, %esp;movl %esp, %ebp;movl %eax, (%esp);movl %ecx, (%esp)": 2,
                "movl %edx, (%esp);testl $, (%esp);jne  <KeSynchronizeExecution+>;cmpw $, (%esp);je  <KeSynchronizeExecution+>": 1,
                "movl (%edi), %ecx;movl %ebx, %dr;movl %ecx, %dr;jmp - <KeSynchronizeExecution+>;leal (%ecx), %ecx": 1,
                "movl (%ebp), %edx;movw %ax, (%ebp);movw %bx, (%ebp);movw %cx, (%ebp);movw %dx, (%ebp)": 21,
                "int;int;int;int;int": 17818,
                "movl %edx, (%esp);movl %ecx, %eax;mull ;movl %edx, (%esp);xorl %ebx, %ebx": 1,
                "mull ;movl %edx, (%esp);xorl %ebx, %ebx;addl (%esp), %eax;adcl $, %ebx": 1,
                "movl (%esp), %edi;movl (%esp), %ecx;movb (%esp), %al;movb %al, %ah;shll $, %eax": 1,
                "movb %al, %ah;cld;movl %ecx, %edx;andl $, %edx;shrl $, %ecx": 1,
                "decl %edi;rep  movsb (%esi), %es:(%edi);cld;jmp - <RtlMoveMemory+>;nop": 1,
                "rep  movsb (%esi), %es:(%edi);cld;jmp - <RtlMoveMemory+>;nop;pushl %ebp": 1,
                "movl (%ebp), %ecx;movl (%esi), %eax;cld;movl %ecx, %edx;andl $, %ecx": 3,
                "movl %ecx, %edx;andl $, %ecx;shrl $, %edx;je  <RtlMoveMemory+>;decl %edx": 3,
                "prefetchnta -(%esi);decl %edx;je  <RtlMoveMemory+>;prefetchnta (%esi);movl (%esi), %eax": 1,
                "orl %ecx, %ecx;je  <RtlMoveMemory+>;rep  movsb (%esi), %es:(%edi);popl %ebx;popl %edi": 2,
                "movl %ecx, %edx;retl;movl (%esp), %eax;addl (%esp), %eax;movl (%esp), %edx": 1,
                "popl %edi;popl %esi;retl $;nop;movl %edi, %edi": 1,
                "testl $, %esi;je  <RtlExtendedMagicDivide+>;negl (%ebp);negl (%ebp);sbbl $, (%ebp)": 1,
                "movl (%ebp), %eax;mull (%ebp);xorl %ecx, %ecx;addl -(%ebp), %eax;adcl $, %ecx": 1,
                "testl $, %esi;je  <RtlExtendedMagicDivide+>;negl %edx;negl %eax;sbbl $, %edx": 1,
                "negl (%ebp);movl (%ebp), %eax;mull (%ebp);pushl %edx;movl %eax, %ecx": 1,
                "negl %eax;negl %ecx;sbbl $, %eax;addl $, %esp;popl %esi": 1,
                "popl %esi;movl %eax, %edx;movl %ecx, %eax;popl %ebp;retl $": 1,
                "popl %ebp;retl $;movl %edi, %edi;movl (%esp), %ecx;andl $, %ecx": 1,
                "retl $;movl (%esp), %eax;xorl %edx, %edx;shrl %cl, %eax;retl $": 1,
                "movl (%esp), %edx;negl %edx;negl %eax;sbbl $, %edx;retl $": 1,
                "retl $;decl (%ecx);je  <ExAcquireFastMutexUnsafe+>;incl (%ecx);pushl %ecx": 1,
                "cli;movl (%esp), %eax;movl (%esp), %ecx;movl (%eax), %edx;movl %edx, (%ecx)": 1,
                "movl %ecx, (%edx);popfl;retl $;movl $, %edx;jmp  <ExiInterlockedExchangeUlong+>": 1,
                "xorl %ebx, %ebx;xorl %esi, %esi;xorl %edi, %edi;pushl (%esp);pushl (%esp)": 1,
                "pushl (%esp);pushl (%esp);pushl (%esp);pushl (%esp);calll  <ExiInterlockedExchangeUlong+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl %edx;pushl %fs:": 1,
                "movl (%ecx), %eax;movl %eax, (%edx);movl $, %eax;retl $;movl (%esp), %ecx": 2,
                "movl %edi, (%ebx);jmp  <RtlCaptureContext+>;movl %edi, %edi;pushl %ebx;movl (%esp), %ebx": 1,
                "movl (%esp), %ecx;movl %eax, (%ecx);movl %fs:, %eax;movl (%esp), %ecx;movl %eax, (%ecx)": 1,
                "xorl %eax, %eax;incl %eax;leal (%ecx), %edx;decl %esi;movl %eax, (%edx)": 1,
                "movw %si, (%ecx);sti;pushl %edx;pushl (%ecx);calll  <KeSetEventBoostPriority>": 1,
                "pushl %esi;pushl %edi;movl %fs:, %eax;cli;movw (%ecx), %dx": 1,
                "movw (%ecx), %dx;testb %dl, %dl;jns - <IoGetStackLimits+>;decl (%ecx);jne  <ExReleaseResourceLite+>": 1,
                "leal (,%ecx,), %edx;jne - <KiIpiServiceRoutine+>;movl (%edx), %esi;movl %edx, (%eax);movl %esi, (%eax)": 1,
                "orl %eax, ;popl %edi;popl %esi;popl %ebx;leave": 1,
                "calll *;popl %ecx;jmpl *;cmpb $, %cl;jge - <ExReleaseResourceLite+>": 1,
                "movl (%ebx), %edi;movl $, (%ebx);movl %esi, (%ebx);movb %cl, (%edi);movl %edi, %ecx": 1,
                "cmpl (%eax), %eax;je  <KiDispatchInterrupt+>;pushl %ebp;pushl (%ebx);movl $, (%ebx)": 1,
                "movl %eax, %esi;movl (%ebx), %edi;movl $, (%ebx);movl %esi, (%ebx);movl %edi, %ecx": 1,
                "orb %cl, %cl;movb $, %es:(%esi);pushfl;movl (%ebx), %ecx;cmpl $, (%ebx)": 1,
                "cmpl $, ;jne  <KiDispatchInterrupt+>;movl %cr, %ebp;movl %ebp, %edx;movb (%esi), %cl": 1,
                "movl (%esi), %ecx;subl $, %eax;movl %ecx, (%ebx);movl %eax, (%ebx);xorl %ecx, %ecx": 1,
                "movl (%esi), %eax;movl %eax, (%ebx);sti;movl (%edi), %eax;cmpl (%esi), %eax": 1,
                "popfl;jne  <KiDispatchInterrupt+>;movb $, %al;retl;movb $, %cl": 1,
                "movl %eax, (%ebp);movl $, %eax;movl (%ebx), %ebp;movl (%edi), %ecx;movl %ecx, (%ebp)": 1,
                "pushl $;calll  <KeBugCheck>;retl;pushl %ebx;pushl %esi": 1,
                "movl (%ebx), %ecx;movl (%ebx), %ebx;movl (%esi), %edx;movl (%esi), %eax;cmpxchgb (%esi)": 1,
                "andl $, %eax;movl %eax, %cr;orl $, %eax;movl %eax, %cr;retl": 1,
                "cmpw %ax, (%edx);je  <KiDispatchInterrupt+>;movl -, %ecx;movl (%edx), %eax;movl %eax, (%ecx)": 1,
                "movl %eax, (%ecx);movl %eax, %cr;movw (%edx), %ax;movw %ax, (%ecx);retl $": 1,
                "movl $, (%ebx);cmpl (%ebp), %ebp;jne - <KiDispatchInterrupt+>;addl $, %esp;retl": 1,
                "calll  <IoWMIDeviceObjectToInstanceName+>;jmp - <KiDispatchInterrupt+>;leal (%ecx), %ecx;movl , %eax;movl (%esp), %edx": 1,
                "movl (%esp), %edx;movl (%eax), %eax;testl $, (%edx);jne  <KiDispatchInterrupt+>;subl $, %eax": 1,
                "nop;nop;nop;orl %edx, (%ecx);movl (%ecx), %eax": 1,
                "cmpb $, (%eax);jne  <KeQueryTimeIncrement+>;movl (%ecx), %ecx;testl %ecx, %ecx;jne  <IoQueueWorkItem+>": 1,
                "movsbl %dl, %ecx;pushl %edi;movl (%ebp), %edi;addl %ecx, %edi;cmpb $, (%eax)": 1,
                "movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);popl %esi;popl %ebx": 1,
                "movl %eax, -(%ebp);movb (%esi), %al;movb %al, %dl;andb $, %dl;cmpb $, %dl": 1,
                "je  <ExFreeToPagedLookasideList+>;cmpb $, %al;je  <RtlCopyUnicodeString+>;movl -(%ebp), %edx;leal -(%ebp), %eax": 1,
                "cmpl $, (%esi);movl (%ebx), %eax;jg - <KiDispatchInterrupt+>;popl %edi;movl -(%ebp), %ecx": 1,
                "popl %ebx;leave;retl;movl (%ecx), %eax;leal -(%ebp), %edx": 1,
                "jmp - <KiDispatchInterrupt+>;movl -, %ecx;movl -, %edx;cmpl -, %ecx;jne  <DbgBreakPointWithStatus+>": 1,
                "je  <KiDispatchInterrupt+>;movl (%esi), %eax;movl (%esi), %edx;cmpl -(%ecx), %edx;ja  <KiDispatchInterrupt+>": 1,
                "cmpl -(%ecx), %eax;jb  <DbgBreakPointWithStatus+>;cmpl %edi, %ecx;movl (%ecx), %edx;leal (%esi), %eax": 1,
                "popl %ebp;retl $;nop;nop;nop": 722,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;jge  <IoAllocateIrp+>;movl -, %ecx": 1,
                "cmpb $, (%esi);movl %edx, -(%ebp);leal (%esi), %edi;jne  <IoSetFileOrigin+>;calll *": 1,
                "jge  <KeDelayExecutionThread+>;movl , %eax;movl (%ebp), %edx;movl %eax, (%esi);movb (%ebp), %al": 1,
                "je  <PsGetProcessId+>;cmpl $, %eax;jne  <KeDelayExecutionThread+>;xorl %eax, %eax;popl %edi": 1,
                "popl %esi;popl %ebx;leave;retl $;movl %ecx, -(%ebp)": 2,
                "jmp  <KeDelayExecutionThread+>;nop;nop;nop;nop": 1,
                "movl %edx, %ecx;shll %cl, %eax;pushl $;popl %ecx;decl %eax": 1,
                "movl (%esi), %edi;jne  <wcscmp+>;pushl %ebx;movsbl (%esi), %ebx;xorl %edx, %edx": 1,
                "cmpb $, (%esi);movl %edx, -(%ebp);leal (%esi), %edi;leal (%esi), %eax;jne  <RtlFindNextForwardRunClear+>": 1,
                "jne - <KeDelayExecutionThread+>;movl (%ebx), %eax;testl %eax, %eax;jg  <IoQueueWorkItem+>;cmpl (%ebx), %esi": 1,
                "cmpb $, (%esi);jne  <RtlFindNextForwardRunClear+>;testl %edx, %edx;je - <KeDelayExecutionThread+>;movl (%edx), %eax": 1,
                "subl $, %esp;calll *;movb %al, -(%ebp);movl , %eax;movl -, %ecx": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);jne  <KeWaitForSingleObject+>;movl , %eax;pushl %ebx": 1,
                "pushl %esi;movl (%ebp), %esi;movl %eax, -(%ebp);subl %esi, %eax;cmpl $, %eax": 1,
                "movl -(%ecx), %edi;cmpl -(%ebp), %edi;ja  <KeWaitForSingleObject+>;jb  <KeWaitForSingleObject+>;movl -(%ecx), %edi": 1,
                "popl %esi;popl %ebx;leave;retl $;pause": 1,
                "leave;retl $;pause;jmp - <KeWaitForSingleObject+>;nop": 1,
                "jne  <IoAllocateIrp+>;pushl (%ebp);movl (%ebp), %edi;movl (%ebp), %ebx;pushl (%ebp)": 1,
                "calll - <KiDispatchInterrupt+>;testl %eax, %eax;je  <IoAllocateIrp+>;movb -(%ebp), %cl;calll - <ExReleaseResourceLite+>": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <KeSetTimerEx>": 1,
                "movb %dl, -(%ebp);movl %ecx, -(%ebp);movl , %eax;movl -, %ecx;cmpl -, %eax": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);jne  <KeInsertQueueDpc+>;pushl %ebx;pushl %esi": 1,
                "andl $, -(%ebp);cmpl %ecx, %eax;je  <KeInsertQueueDpc+>;leal -(%ebp), %ebx;leal -(%eax), %esi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;jne  <IoSetFileOrigin+>;movl %ebx, -(%ebp);leal -(%ebp), %esi": 1,
                "pushl -(%esi);calll *%edi;cmpl $, -(%ebp);jne  <IoSetFileOrigin+>;incl %ebx": 1,
                "cmpl $, -(%ebp);jne  <IoSetFileOrigin+>;incl %ebx;addl $, %esi;cmpl -(%ebp), %ebx": 1,
                "je  <IoSetFileOrigin+>;movb -(%ebp), %cl;calll *;popl %edi;popl %esi": 1,
                "pushl %eax;pushl (%ebp);calll  <RtlDeleteElementGenericTableAvl+>;leal -(%ebp), %ecx;orl %eax, %eax": 1,
                "je  <ExRaiseException+>;pushl $;pushl %ecx;calll  <ZwConnectPort+>;jmp  <ExRaiseException+>": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movl %ebx, (%eax)": 1,
                "nop;pushl $;jmp  <ZwYieldExecution+>;pushl $;jmp  <ZwYieldExecution+>": 1,
                "testl $, (%ebp);je  <ZwYieldExecution+>;movl %dr, %ebx;movl %dr, %ecx;movl %dr, %edi": 5,
                "pushl $;pushl %ebp;pushl %ebx;pushl %esi;pushl %edi": 3,
                "pushl %ebp;pushl %ebx;pushl %esi;pushl %edi;pushl %fs": 21,
                "movb %bl, (%esi);movl %esp, %ebp;movl (%esi), %ebx;movl %ebx, (%ebp);movl %ebp, (%esi)": 2,
                "movl (%esi), %ebx;movl %ebx, (%ebp);movl %ebp, (%esi);cld;movl (%ebp), %ebx": 2,
                "movl %ebx, (%ebp);movl %edi, (%ebp);testb $-, (%esi);jne - <ZwYieldExecution+>;sti": 2,
                "orb $, (%esp);jmp  <ZwYieldExecution+>;movl -, %ecx;movl (%ecx), %esp;pushl $": 1,
                "pushl $;pushl %edx;pushfl;pushl $;addl $, %edx": 1,
                "pushl -;pushl $;pushl %ebp;pushl %ebx;pushl %esi": 1,
                "pushl %esi;pushl %edi;movl -, %ebx;pushl $;movl (%ebx), %esi": 1,
                "pushl $;subl $, %esp;subl $, %ebp;movb $, (%esi);cmpl %esp, %ebp": 1,
                "subl $, %ebp;movb $, (%esi);cmpl %esp, %ebp;jne - <ZwYieldExecution+>;andl $, (%ebp)": 1,
                "movl (%edi,%eax,), %ebx;subl %ecx, %esp;shrl $, %ecx;movl %esp, %edi;cmpl , %esi": 1,
                "pushl %ebx;pushl $;pushl $;calll  <KiDeliverApc>;popl %ecx": 3,
                "cmpw $, (%ebp);je  <ZwYieldExecution+>;leal (%ebp), %esp;popl %fs;leal (%ebp), %esp": 1,
                "iretl;testb $, (%esp);jne - <ZwYieldExecution+>;popl %edx;addl $, %esp": 1,
                "jne - <ZwYieldExecution+>;popl %edx;addl $, %esp;andb $-, (%esp);popfl": 1,
                "movb $, (%ebx);cmpb $, (%ebx);je  <ZwYieldExecution+>;movl %ebp, %ebx;movl $, %ecx": 1,
                "movl (%esp), %eax;cmpw $, (%ebp);je  <ZwYieldExecution+>;leal (%ebp), %esp;popl %gs": 1,
                "pushl %ds;pushl %es;pushl %gs;movw $, %ax;subl $, %esp": 19,
                "movl %eax, %ds;movl %eax, %es;movl %esp, %ebp;testl $, (%esp);jne - <ZwYieldExecution+>": 1,
                "movl %edi, (%ebp);testb $-, -;jne - <ZwYieldExecution+>;sti;xorl %eax, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %ecx;movl (%ebp), %edx;pushl %eax;pushl %eax": 1,
                "pushl %eax;pushl %edx;pushl %ecx;pushl %ebx;calll  <PsIsThreadImpersonating+>": 1,
                "addl $, %eax;pushl %fs;pushl %ecx;pushl %eax;movl $, %ecx": 1,
                "iretl;testl $, (%ebp);jne  <ZwYieldExecution+>;testl $, (%ebp);je  <ZwYieldExecution+>": 1,
                "movl (%edi), %ecx;movl %ebx, %dr;movl %ecx, %dr;jmp  <ZwYieldExecution+>;leal (%ebx), %ebx": 1,
                "movl -, %ebx;movb $, (%ebx);cmpb $, (%ebx);je  <KeiEoiHelper+>;movl %ebp, %ebx": 1,
                "jne  <KeiEoiHelper+>;testl $, (%esp);jne  <KeiEoiHelper+>;testw $, (%esp);je  <KeiEoiHelper+>": 1,
                "popl %edx;popl %ecx;popl %eax;leal (%ebp), %esp;popl %edi": 1,
                "movzwl %sp, %esp;iretl;xorl %ecx, %ecx;calll  <KeiEoiHelper+>;xorl %edx, %edx": 1,
                "xorl %ecx, %ecx;calll  <KeiEoiHelper+>;xorl %edx, %edx;movl $, %ecx;calll  <KeiEoiHelper+>": 1,
                "movl $, %ecx;calll  <KeiEoiHelper+>;xorl %edx, %edx;movl $, %ecx;calll  <KeiEoiHelper+>": 1,
                "testl $, (%ebp);je  <KeiEoiHelper+>;movl $, %eax;jmp  <KeiEoiHelper+>;movl (%ebp), %eax": 1,
                "pushl %eax;pushl %ebp;pushl $;pushl %ecx;calll  <PsGetProcessDebugPort+>": 1,
                "pushl %ecx;calll  <PsGetProcessDebugPort+>;movl %ebp, %esp;jmp - <KeiEoiHelper>;popl %ebx": 1,
                "movl $, %eax;jmp - <KeiEoiHelper+>;movl -, %ebx;movl (%ebx), %ebx;cmpl $, (%ebx)": 3,
                "cmpl $, %ecx;je - <KeiEoiHelper+>;testl $, (%ebp);jne  <KeiEoiHelper+>;testw $, (%ebp)": 1,
                "jne - <KeiEoiHelper>;jmp - <KeiEoiHelper+>;jmp - <KeiEoiHelper>;movl , %eax;movl $, -": 1,
                "movw (%eax), %cx;movl %ecx, -;pushfl;andl $, (%esp);popfl": 1,
                "pushl $;pushl $;pushl $;pushl $;pushl (%eax)": 2,
                "pushl (%eax);pushl (%eax);pushl (%eax);pushl (%eax);pushl -": 1,
                "cmpb $, ;je  <KeiEoiHelper+>;calll  <KeEnterKernelDebugger>;jmp - <KeiEoiHelper+>;incl ": 1,
                "jne  <KeiEoiHelper+>;movl , %eax;cmpw $, (%eax);je  <KeiEoiHelper+>;addl $, %esp": 1,
                "nop;testl $, (%ebp);jne  <KeiEoiHelper+>;testl $, (%ebp);je  <KeiEoiHelper+>": 6,
                "jne - <KeiEoiHelper+>;cmpb $, ;jne  <KeiEoiHelper+>;lock;incl ": 1,
                "movl $, %ecx;movl $, %eax;calll - <KeiEoiHelper+>;movl -, %ebx;movl (%ebx), %ebx": 1,
                "jmp - <KeiEoiHelper+>;jmp - <KeiEoiHelper>;movl %edi, %edi;testl $, (%ebp);jne  <KeiEoiHelper+>": 1,
                "jmp  <KeiEoiHelper+>;nop;movl (%ebp), %eax;movl (%ebp), %ebx;movl (%ebp), %ecx": 2,
                "movl $, (%eax);movl %edx, (%eax);movl $, (%eax);leal (%eax), %eax;movl (%esp), %edx": 1,
                "movl %ecx, (%eax);movl (%esp), %ebx;movl (%esp), %ecx;movl (%esp), %esi;movl (%esp), %edi": 1,
                "movl (%esp), %edi;movl (%esp), %edx;movl %ebx, (%eax);andl $, %esi;movl %ecx, (%eax)": 1,
                "movl (%eax), %edi;movl (%eax), %ebp;pushl %ebx;pushl %esi;pushl %edi": 1,
                "movl (%eax), %edx;movl (%eax), %ecx;movl $, -;andl $, %edi;orl $, %edi": 1,
                "movl %edi, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl -, %edi;movl %edi, (%esp)": 1,
                "movl $, %ebx;movl %ebx, %fs;movl %esp, %ebp;cld;testb $-, -": 1,
                "movl %dr, %ebx;movl %dr, %esi;movl %dr, %edi;movl %ebx, (%ebp);movl %esi, (%ebp)": 2,
                "movl %dr, %ebx;movl %dr, %esi;movl %dr, %edi;movl %ebx, (%ebp);xorl %ebx, %ebx": 2,
                "pushl %ebp;calll  <SeTokenIsAdmin+>;jmp  <KeiEoiHelper+>;movl $, -;popal": 1,
                "addl $, %esp;popal;pushl $;subl $, %esp;movw $, (%esp)": 1,
                "jne - <KeiEoiHelper+>;movl -, %ecx;movl (%ecx), %ecx;cmpl $, (%ecx);je  <KeiEoiHelper+>": 1,
                "testl $, (%ebp);je - <KeiEoiHelper>;movl -, %ebx;movb $, (%ebx);cmpb $, (%ebx)": 2,
                "cmpl , %esi;jb  <KeiEoiHelper+>;movl , %esi;movl $, %ecx;pushl %ebp": 1,
                "jmp - <KeiEoiHelper+>;popl -;addl $, %esp;movl (%ebp), %ebx;movl $, %eax": 1,
                "addl $, %esp;popl %ebp;testl $, (%ebp);jne - <KeiEoiHelper+>;pushl %ebp": 1,
                "testb $-, -;jne - <KeiEoiHelper+>;movl , %eax;movl -, %ecx;testl $, (%ecx)": 1,
                "je  <KeiEoiHelper+>;fxsave (%esi);jmp  <KeiEoiHelper+>;fnsave (%esi);movb $, (%edx)": 1,
                "fnsave (%esi);movb $, (%edx);testb $, ;je  <KeiEoiHelper+>;fxrstor (%ecx)": 1,
                "sti;testl $, %ebx;je - <KeiEoiHelper>;clts;cli": 1,
                "je  <KeiEoiHelper+>;addl $-, %edx;cmpb $, %al;je  <KeiEoiHelper+>;addl $, %edx": 2,
                "je  <KeiEoiHelper+>;addl $-, %edx;cmpw $, %ax;je  <KeiEoiHelper+>;cmpb $-, %al": 2,
                "movl $, %eax;jmp  <KiCoprocessorError+>;testb $-, -;je  <KeiEoiHelper+>;pushl %ebx": 1,
                "je  <KeiEoiHelper+>;pushl %ebx;pushl %edi;pushl %esi;movl %dr, %ebx": 1,
                "movl %ebx, %dr;movl %esi, %dr;popl %esi;popl %edi;popl %ebx": 1,
                "sti;addl $, %esp;addl $, %ebp;movl (%ebp), %ebx;movl $, %edx": 1,
                "calll *;sti;movl %eax, %edi;calll  <KeiEoiHelper+>;pushl %eax": 1,
                "pushl %eax;movl %edi, %ecx;calll *;cli;popl %eax": 1,
                "cli;popl %eax;testb $, %al;jne - <KeiEoiHelper>;jmp  <KeiEoiHelper+>": 1,
                "jbe  <KeiEoiHelper+>;cmpl $, %eax;jae  <KeiEoiHelper+>;sti;movl (%ebp), %ebp": 1,
                "movl (%ebp), %ebx;movl $, %eax;jmp - <KeiEoiHelper+>;cmpb $, %al;je - <KeiEoiHelper+>": 1,
                "jmp  <KeiEoiHelper+>;cmpw $, (%ebp);je  <KeiEoiHelper+>;movl $, (%ebp);jmp  <KeiEoiHelper+>": 1,
                "popl %ebp;movl (%esp), %esp;iretl;movl $, %eax;testb $, (%ebp)": 1,
                "movl $, %edi;repne  scasb %es:(%edi), %al;popl %ecx;jne  <KeiEoiHelper+>;loop -": 1,
                "jmp  <KeiEoiHelper+>;cmpb $, %al;je  <KeiEoiHelper+>;cmpb $, %al;je  <KeiEoiHelper+>": 1,
                "jmp - <KeiEoiHelper>;leal (%ecx), %ecx;cmpl $, %ecx;jne  <KeiEoiHelper+>;movb $, %al": 1,
                "je  <KeiEoiHelper+>;movl $, (%ebp);movl $, %eax;movl %eax, (%ebp);jmp - <KeiEoiHelper>": 2,
                "jmp - <KeiEoiHelper>;movl (%ebp), %ecx;shrl %ecx;andl , %ecx;testl $, (%ebp)": 1,
                "jne  <KeiEoiHelper+>;movl -, %esi;movl (%esi), %esi;cmpl $, (%esi);je  <KeiEoiHelper+>": 1,
                "movl %eax, %esi;pushl %edi;pushl %ecx;pushl %ebp;calll  <SeTokenIsAdmin+>": 1,
                "testb $, %al;jne  <KeiEoiHelper+>;movl %esi, %eax;movl (%ebp), %esi;cmpl $, %eax": 1,
                "movl $, %eax;movl %esi, %ebx;movl %ecx, %edx;movl %edi, %esi;jmp - <KeiEoiHelper+>": 1,
                "je  <KeiEoiHelper+>;movl -, %ebx;testb $-, (%ebx);je  <KeiEoiHelper+>;andl $, (%ebp)": 1,
                "je  <KeiEoiHelper+>;pushl %ebp;pushl $;pushl $;pushl %eax": 1,
                "movl $, -;sti;movl (%ebp), %ebx;movzwl (%ecx), %eax;movl %eax, %edx": 1,
                "movl (%ebx), %ebx;cmpl $, (%ebx);je - <KeiEoiHelper+>;movl %cr, %ebx;andl $-, %ebx": 1,
                "cli;movl -, %edi;movl (%edi), %esi;cmpb $, (%esi);je  <KiCoprocessorError+>": 1,
                "movl %eax, ;movl (%ebp), %eax;pushl %edx;pushl %ebx;pushl $": 1,
                "je - <ZwYieldExecution+>;jmp - <ZwYieldExecution+>;jmp - <ZwYieldExecution+>;leal (%ecx), %ecx;subl $, %esp": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;orl %eax, %eax;je  <ExInterlockedFlushSList+>;movl %edx, %ecx": 1,
                "movl %edi, %edi;pushl %ebx;pushl %ebp;movl %ecx, %ebp;movl (%ebp), %edx": 1,
                "movl %ecx, %ebp;movl (%ebp), %edx;movl (%ebp), %eax;orl %eax, %eax;je  <InterlockedPopEntrySList+>": 1,
                "leal -(%edx), %ecx;movl (%eax), %ebx;cmpxchgb (%ebp);jne - <InterlockedPopEntrySList+>;popl %ebp": 1,
                "nop;movl (%esp), %eax;movl (%eax), %eax;retl $;leal (%ecx), %ecx": 1,
                "movl %ecx, %ebp;movl (%edx), %ebx;movl (%edx), %ecx;movl (%esp), %edx;movl (%edx), %eax": 3,
                "calll  <_CIsqrt+>;addl $, %esp;retl;leal (%esp), %edx;calll  <_CIsqrt+>": 1,
                "jne - <_CIsqrt+>;andl $, %eax;je - <_CIsqrt+>;fstp %st();fldt ": 1,
                "fstp %st();retl;movl (%esp), %edx;andl $, %edx;orl $, %edx": 1,
                "retl;cmpw $, (%esp);je  <_CIsqrt+>;fldcw (%esp);popl %edx": 1,
                "retl;movw (%esp), %ax;cmpw $, %ax;je  <_CIsqrt+>;andw $, %ax": 1,
                "andw $, %ax;je  <_CIsqrt+>;wait;fnstsw %ax;andw $, %ax": 1,
                "wait;fnstsw %ax;andw $, %ax;je  <_CIsqrt+>;movl $, %eax": 2,
                "jne  <_CIsqrt+>;wait;fnstsw %ax;andw $, %ax;je  <_CIsqrt+>": 1,
                "calll  <_CIsqrt+>;popl %edx;retl;calll  <_CIsqrt+>;popl %edx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, (%eax);addb %al, (%eax)": 1,
                "jg  <_CIsqrt+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);jmp  <_CIsqrt+>;pushl %ebp": 1,
                "pushl %edx;calll  <wcstombs+>;addl $, %esp;fldl -(%ebp);cmpw $, (%ebp)": 1,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "pushl %esi;incl %ebx;xorb (%eax), %dh;popl %eax;incl %ebx": 1,
                "pushl %ebx;calll  <FsRtlCheckLockForWriteAccess+>;addl $, %esp;orl %eax, %eax;je  <_except_handler+>": 1,
                "je  <_except_handler+>;leal (%esi,%esi,), %ecx;movl (%edi,%ecx,), %eax;orl %eax, %eax;je  <_except_handler+>": 1,
                "jmp  <_except_handler+>;movl (%ebp), %eax;orl $, (%eax);movl $, %eax;jmp  <_except_handler+>": 1,
                "movl $, %eax;retl;pushl %ebx;pushl %esi;pushl %edi": 1,
                "pushl %edi;movl (%esp), %eax;pushl %ebp;pushl %eax;pushl $-": 1,
                "movl (%ebp), %ecx;movl %ecx, (%ebx);movl %eax, (%ebx);movl %ebp, (%ebx);pushl %ebp": 1,
                "pushl %ebp;pushl %ecx;pushl %eax;popl %eax;popl %ecx": 1,
                "inb $, %al;decl %edx;addb %al, (%edi);pushl %edi;addb %dh, -": 1,
                "addb %cl, %ch;cmpl (%edx), %ecx;subb %bl, (%ecx);decl %ebx;addb %bh, %bh": 1,
                "popl %edi;incl %ecx;addb %ch, (%edi);decl %ecx;addb %bl, %ch": 1,
                "pcmpgtw (%ebx), %mm;cmpb $, %al;pushl %edi;addb %bl, (%eax);daa": 1,
                "addl $, %eax;decl %ebp;addb %ah, -(%eax);decl %edx;addb %al, -(%ebx)": 1,
                "jne  <_abnormal_termination+>;addb %bl, (%eax);decl %ebp;addb %ah, (%ecx,%eax,);pushl %eax": 1,
                "addb %ah, (%ecx,%eax,);pushl %eax;addb %cl, %ch;incl %ecx;popl %eax": 1,
                "xorb (%esi), %dl;pushl %eax;movl $, %ebp;decl %ebx;addb %al, -(%ecx)": 1,
                "movb %cl, -(%eax,%eax);inl %dx, %eax;pushl %esp;addb %bh, (%edi);lretl": 1,
                "addb %ch, %al;pushl %es;pushl %eax;addb %ch, -(%edx);decl %ecx": 1,
                "addb %al, (%eax,%edi,);addb %ch, -(%ebp);decl %ecx;addb %ah, (%eax);jae  <_abnormal_termination+>": 1,
                "das;cmpb %dl, (%eax);leave;andb $, %al;addb %cl, %dh": 1,
                "xlatb;pushl %eax;pushl %ebp;addb %dh, %ah;pushl %eax": 1,
                "pushl %ebp;addb %cl, -(%eax);decl %ebx;incl %esi;addb %dl, (%ecx)": 1,
                "inb %dx, %al;popl %ebp;popl %eax;addb %dl, -(%edi);decl %edi": 1,
                "addb %bl, (%ecx);decl %ebp;addb %al, (%eax);js  <_abnormal_termination+>;addb %bl, (%edi)": 1,
                "addb %al, (%ebx);popl %eax;addb %cl, -(%edx);decl %ecx;addb %al, (%ebx,%eax,)": 1,
                "incl %ecx;decl %esp;addb %bl, -(%eax);sbbb (%edi), %dl;fisttpll (%ebx)": 1,
                "addb %cl, %dl;subl %edx, (%edi);subl $, (%ebx);addb %al, %cl;movb %dl, (%ebp)": 1,
                "addb %ah, %bl;subb $, %al;addb %dh, %ch;xchgl %ecx, %eax;pushl %ebp": 1,
                "pushl %ebp;addb %ah, %al;movb $, %dl;addb %al, -(%ebp);ja  <_abnormal_termination+>": 1,
                "orl %eax, %eax;jne  <_abnormal_termination+>;movl (%ebx), %eax;movl %eax, ;pushl (%ebx)": 1,
                "jne  <_abnormal_termination+>;movl (%ebx), %eax;movl %eax, ;pushl (%ebx);movl (%ebx), %edx": 1,
                "pushl (%ebx);movl (%ebx), %edx;pushl %edx;movl (%ebx), %esi;pushl %esi": 1,
                "movl %ecx, (%esi);subl $, %esp;movl %esp, %ebp;movl $, %ecx;leal (%esp), %edi": 1,
                "nop;pushl %esi;pushl %edi;movl -, %edx;movl (%esp), %edi": 1,
                "subl %ecx, %eax;addl %edi, %eax;movl %eax, (%edx);subl %esp, %ecx;subl %ecx, %edi": 1,
                "movl , %eax;movl (%eax), %ecx;cmpl $, %ecx;je  <_abnormal_termination+>;movl (%eax), %ebx": 1,
                "movl %edi, (%ebx);movl (%ecx), %ebx;movl %esi, (%ebx);movl (%ecx), %ebx;cli": 1,
                "movl %esi, (%ebx);movl (%ecx), %ebx;cli;movl -, %esi;movl %ebx, (%eax)": 1,
                "movl (%esi), %edx;movl %edx, (%ebx);testl $, (%eax);movl %ebx, -;movl (%ecx), %edi": 1,
                "movl , %eax;movl , %edx;movl , %ecx;addl %eax, %edx;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %esi;cmpl %edx, %esi;jne - <_abnormal_termination+>;movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "jne - <_abnormal_termination+>;movl (%ebp), %eax;movl %esi, (%eax);movl %ecx, (%eax);popl %esi": 1,
                "cli;movl (%ecx), %eax;addl %edx, (%ecx);popfl;retl $": 1,
                "movl (%ecx), %eax;orl %eax, %eax;je  <ExfInterlockedPopEntryList+>;movl (%eax), %edx;movl %edx, (%ecx)": 1,
                "subl $, (%ecx);lahf;andl $, %eax;retl;movl %edi, %edi": 1,
                "movl %edi, %edi;movl $, %eax;xaddl %eax, (%ecx);decl %eax;retl": 1,
                "cmpw $, (%esp);je  <_CIcos+>;fldcw ;fcos;wait": 1,
                "fldcw ;fcos;wait;fnstsw %ax;sahf": 1,
                "fxch %st();fprem;wait;fnstsw %ax;sahf": 2,
                "fstp %st();fcos;jmp - <_CIcos+>;calll - <_CIsqrt+>;jmp  <_CIcos+>": 1,
                "calll - <_CIsqrt+>;jmp  <_CIcos+>;testl $, %eax;jne - <_CIcos+>;cmpl $, (%esp)": 1,
                "fldt ;movl $, %eax;cmpl $, ;jne - <_CIsqrt+>;movl $, %edx": 2,
                "fimull (%edi);leave;incl %eax;subl $, %esp;fstl (%esp)": 1,
                "jne - <_CIsin+>;fstp %st();fldt ;movl $, %eax;cmpl $, ": 1,
                "je  <strstr+>;movl %edi, %esi;movl (%esp), %ecx;movb (%edi), %al;incl %esi": 1,
                "jne - <strstr+>;popl %esi;popl %ebx;popl %edi;xorl %eax, %eax": 1,
                "incl %esi;cmpb %dh, %al;jne - <strstr+>;leal -(%esi), %edi;movb (%ecx), %ah": 1,
                "cmpb %dh, %al;jne - <strstr+>;leal -(%esi), %edi;movb (%ecx), %ah;testb %ah, %ah": 1,
                "retl;movl %edi, %eax;popl %esi;popl %ebx;popl %edi": 1,
                "movl %ecx, (%ebx);movl %edx, (%ebx);movl %eax, %ebx;movl %eax, %ecx;movl , %edx": 1,
                "movl %edx, (%ebx);movl %eax, %ebx;movl %eax, %ecx;movl , %edx;addl $, %ecx": 1,
                "movl %edx, ;pushl %eax;movl , %eax;addl $, %eax;jae  <KeUpdateSystemTime+>": 1,
                "incl %eax;incl %ebx;andl $, %eax;leal (,%eax,), %ecx;movl (%ecx), %edx": 1,
                "cmpl -(%edx), %esi;jb  <KeUpdateSystemTime+>;ja  <KeUpdateSystemTime+>;cmpl -(%edx), %edi;jb  <KeUpdateSystemTime+>": 1,
                "jne  <KeUpdateSystemTime+>;cli;incl (%ecx);movl %edx, (%eax);movl %ebx, (%eax)": 1,
                "movl (%eax), %edx;movl %ecx, (%eax);subl %edx, %ecx;addl (%eax), %ecx;shrl %ecx": 1,
                "jne  <KeUpdateRunTime+>;movl , %ecx;movl %ecx, (%eax);movl , %ecx;cmpl (%eax), %ecx": 1,
                "cmpl $, ;je  <KeProfileInterruptWithSource+>;movl (%esp), %ecx;movl (%ebp), %edx;calll ": 1,
                "movl (%esp), %ecx;movl (%ebp), %edx;calll ;movl (%esp), %ebp;incl ": 1,
                "jne - <KeProfileInterruptWithSource+>;movl %edi, %edi;retl $;nop;shll $, %ecx": 1,
                "retl $;nop;shll $, %ecx;addl %ecx, %ebx;jmp - <KeProfileInterruptWithSource+>": 1,
                "int;retl;movl %edi, %edi;int;retl": 2,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "cmpw $, (%esi);jne  <PsGetCurrentProcess+>;orb $-, (%esi);xorl %eax, %eax;incl %eax": 1,
                "movl %edi, (%esi);movl %eax, (%esi);movw %ax, (%esi);sti;popl %edi": 1,
                "movl (%ebp), %eax;andl $, (%eax);popl %ebp;retl $;nop": 2,
                "movl (%ebp), %ecx;movl %ecx, %eax;shrl $, %eax;movl $, %edx;andl %edx, %eax": 1,
                "movl %ecx, %eax;shrl $, %eax;movl $, %edx;andl %edx, %eax;subl $, %eax": 1,
                "testb %al, %al;js  <MmIsAddressValid+>;shrl $, %ecx;andl $, %ecx;subl $, %ecx": 1,
                "calll *;testb %al, %al;jne  <PsGetProcessId+>;cmpb %bl, ;jne  <IoSetFileOrigin+>": 1,
                "pushl %edi;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);jne  <IoGetRelatedDeviceObject+>": 1,
                "incl %eax;orl %eax, (%esi);movl %eax, -(%ebp);movb (%ebp), %cl;calll *": 1,
                "jne  <KeCancelTimer+>;cmpl %ebx, -(%ebp);jne  <KeCancelTimer+>;movl -(%ebp), %eax;cmpl %ebx, %eax": 1,
                "movl , %eax;movl , %ecx;imull $, %eax, %eax;shrl $, %ecx;xorl %edx, %edx": 5,
                "movl , %ecx;imull $, %eax, %eax;shrl $, %ecx;xorl %edx, %edx;divl %ecx": 5,
                "pushl %ecx;calll *;movl (%ebp), %ecx;movb %al, -(%ebp);pushl -(%ebp)": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;leal (%esi), %ecx": 5,
                "leal -(%ebp), %edx;calll - <KeAcquireInStackQueuedSpinLockAtDpcLevel>;movl (%ebp), %edi;movl (%ebp), %eax;movb $, %bl": 1,
                "nop;nop;movl %fs:, %eax;decl (%eax);retl": 1,
                "nop;movl %fs:, %eax;incl (%eax);jne  <KeLeaveCriticalRegion+>;leal (%eax), %ecx": 1,
                "jne  <KeInsertHeadQueue+>;retl;cmpb $, (%ebp);je  <KeWaitForMultipleObjects+>;cmpb $, (%esi)": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);leal (%edi), %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "testl %eax, %eax;movl %eax, (%ebp);jne  <KeInsertQueueDpc+>;incl (%esi);addl $, (%esi)": 1,
                "jne  <KeInsertQueueDpc+>;cmpb $, (%edi);jne  <KeInsertQueueDpc+>;movl (%esi), %eax;cmpl (%esi), %eax": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);popl %edi;sete %al;popl %esi": 1,
                "jne  <RtlNumberOfSetBits+>;cmpb $, (%edi);je  <KeRemoveQueueDpc+>;cmpl $, (%edi);jg  <RtlCopyUnicodeString+>": 1,
                "jne  <IoSetFileOrigin+>;movl (%ebp), %edx;cmpl %edi, %edx;jne  <PsGetThreadProcess+>;movl %ebx, (%ecx)": 1,
                "movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);movl (%eax), %eax": 1,
                "calll - <KeDelayExecutionThread+>;cmpl $, %eax;je  <RtlCopyUnicodeString+>;popl %edi;popl %esi": 1,
                "pushl -(%ebp);calll - <KiDispatchInterrupt+>;testl %eax, %eax;jne - <KeSetTimer+>;jmp - <KeQuerySystemTime+>": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl %ecx, %esi;movb (%esi), %cl": 1,
                "movl (%esi), %eax;testw $, %ax;jne  <IoFreeIrp+>;movl (%esi), %edi;cmpl %ebx, %edi": 1,
                "movl (%esi), %eax;movl (%eax), %eax;pushl (%edi);pushl %esi;pushl %eax": 1,
                "jmp - <IofCompleteRequest+>;nop;nop;nop;nop": 4,
                "movl (%ebp), %esi;leal (%esi), %ecx;leal -(%ebp), %edx;calll - <KeAcquireInStackQueuedSpinLockAtDpcLevel>;leal (%esi), %eax": 2,
                "leal (%esi), %ecx;leal -(%ebp), %edx;calll - <KeAcquireInStackQueuedSpinLockAtDpcLevel>;movl (%ebp), %eax;movb $, %bl": 1,
                "movl (%ebp), %eax;movb $, %bl;cmpb %bl, (%esi);je  <ExInitializeZone+>;movb %bl, (%esi)": 1,
                "movl %esi, (%edi);jne  <KeAreApcsDisabled+>;movl (%edi), %eax;pushl %esi;pushl %edi": 1,
                "movb (%eax), %al;movb %al, (%esi);jmp - <KiDispatchInterrupt+>;nop;nop": 1,
                "cmpl $, ;je - <IoStartPacket+>;pushl %ebx;pushl %esi;pushl %edi": 1,
                "calll *(%esi);decl %ebx;movl (%esi), %esi;jmp - <IoStartNextPacket+>;movl , %ecx": 1,
                "incl %edx;cmpl %ecx, (%ebp);movl %ebx, (%edi);movw %cx, (%edi);movw %dx, (%edi)": 2,
                "movl %esi, (%edi);movl %ecx, (%esi);je  <KeInsertQueue+>;leal (%esi), %eax;movl %eax, (%edi)": 1,
                "movl %edi, (%eax);movl %eax, (%esi);movl %eax, (%esi);movb (%ebp), %al;testb %al, %al": 2,
                "movb (%ebp), %al;testb %al, %al;movb $, (%esi);movb %al, (%esi);movb $, (%esi)": 3,
                "testb %al, %al;movb $, (%esi);movb %al, (%esi);movb $, (%esi);movl %ecx, (%esi)": 3,
                "movl (%eax), %ecx;cmpl %ecx, %ebx;movl %ebx, (%eax);jne  <PsIsThreadTerminating+>;decl (%ebx)": 1,
                "cmpl %ecx, %ebx;movl %ebx, (%eax);jne  <PsIsThreadTerminating+>;decl (%ebx);leal (%ebx), %ecx": 1,
                "testl %edx, %edx;jne  <_wcsicmp+>;cmpl $, (%ebp);leal (%ebx), %eax;movl (%eax), %ecx": 1,
                "pushl %edi;movl %eax, -(%ebp);movl %fs:, %eax;movl (%ecx), %esi;leal (%ecx), %edi": 1,
                "leal (%ecx), %edi;cmpl %edi, %esi;je  <KeInitializeDpc+>;movl (%ecx), %edi;cmpl (%ecx), %edi": 1,
                "je  <_wcsicmp+>;movl %eax, %ecx;calll - <ExReleaseResourceLite+>;movl -(%ebp), %eax;popl %edi": 1,
                "andl $-, %ecx;addl $, %ecx;andl $, %eax;xorl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %eax, (%ebp);jne - <ExQueueWorkItem+>;orl $, (%ebx)": 1,
                "movl (%edi), %ecx;movl (%edi), %eax;pushl %ecx;movl %eax, -(%ebp);movl %ecx, (%ebp)": 1,
                "calll - <KeSetEvent>;jmp - <ExQueueWorkItem+>;nop;nop;nop": 1,
                "retl;cmpl $, %eax;je  <IoSetFileOrigin+>;decl (%ebx);jne  <IoQueueWorkItem+>": 1,
                "movl %fs:, %eax;movb (%eax), %al;orl $-, -(%ebp);cmpl %esi, (%ebp);movl %ebx, -(%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %edi;pushl (%ebp);pushl %eax": 2,
                "cmpl %esi, %eax;jl  <MmCreateSection+>;movl -(%ebp), %eax;movl (%eax), %ecx;movl (%eax), %ebx": 1,
                "movl (%eax), %ecx;movl (%eax), %ebx;movl %ecx, -(%ebp);movl (%eax), %ecx;movl , %eax": 1,
                "movl (%edx), %eax;movzwl (%eax), %eax;movl (%edx), %ecx;shll $, %eax;leal (%ebp), %edx": 1,
                "jne - <KeSetEvent+>;movzwl (%esi), %edx;movl (%esi), %ecx;pushl $;pushl (%ebp)": 1,
                "movb %bl, %dl;cmpb (%ecx), %dl;movb $, (%ecx);jne  <PsGetCurrentThread+>;pushl %esi": 1,
                "testl %eax, %eax;je  <PsGetCurrentProcess+>;movb $, (%eax);movl %eax, (%esi);popl %esi": 1,
                "movb $, (%eax);movl %eax, (%esi);popl %esi;jmp - <KeClearEvent+>;nop": 1,
                "popl %esi;popl %ebx;leave;retl;movb %al, %cl": 1,
                "popl %ebx;leave;retl;movb %al, %cl;calll *": 1,
                "calll *;incl (%esi);orl $, (%esi);xorl %ecx, %ecx;cmpl %ecx, (%esi)": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;calll *;movl (%ebp), %esi;movb %al, %bl;movl (%esi), %eax": 1,
                "jne  <ExSystemTimeToLocalTime+>;incl (%esi);cmpl $, (%esi);jne  <KeReleaseMutant+>;cmpl $, (%ebp)": 1,
                "jne  <KeReleaseMutant+>;leal (%edi), %eax;cmpl %eax, (%eax);jne  <IoSetFileOrigin+>;andl $, (%esi)": 1,
                "movl %edx, %edi;leal (%esi), %eax;cmpl %edi, (%eax);movl %esi, -(%ebp);je  <KeQueryTimeIncrement+>": 1,
                "cmpl %edi, %ecx;jne  <FsRtlLookupPerStreamContextInternal+>;popl %edi;popl %esi;leave": 1,
                "movzbl (%ebx), %eax;decl %eax;pushl %esi;movb %dl, (%ebx);je  <PsIsSystemThread+>": 1,
                "calll - <KeDelayExecutionThread+>;testl %eax, %eax;jne  <KeCancelTimer+>;popl %esi;popl %ebx": 1,
                "movb $, (%esi);movb %bl, (%esi);movb %cl, (%esi);jmp - <KiDispatchInterrupt+>;movsbl %dl, %edx": 1,
                "je  <KeSetEventBoostPriority+>;movl %esi, (%eax);movb (%edi), %al;subb %al, (%edi);movb %dl, (%edi)": 1,
                "cmpb $, (%esi);jge  <KeSetEventBoostPriority+>;movb $, (%esi);xorl %edx, %edx;movl %esi, %ecx": 1,
                "incl %eax;decl %edi;movl %eax, (%esi);movl %eax, (%ecx);movw %ax, (%ecx)": 1,
                "movl (%ebp), %edi;cmpl %ebx, %edi;jne  <FsRtlRemoveLargeMcbEntry+>;cmpl %ebx, -(%ebp);je  <MmForceSectionClosed+>": 1,
                "je  <MmForceSectionClosed+>;pushl (%esi);calll  <KeCancelTimer+>;cmpl %ebx, %edi;je - <MmIsAddressValid+>": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi": 1,
                "jne  <CcPurgeCacheSection+>;movl -(%ebp), %eax;testb $, (%eax);jne  <IoSetFileOrigin+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %esi;andl $, (%esi);pushl %edi;leal (%ebp), %eax;pushl %eax": 2,
                "testl %edi, %edi;jne  <IoCsqInsertIrp+>;pushl (%ebp);pushl %esi;calll *(%esi)": 1,
                "pushl (%ebp);pushl %esi;calll *(%esi);movl %edi, %eax;popl %edi": 1,
                "movl %edi, %eax;popl %edi;popl %esi;leave;retl $": 20,
                "nop;nop;jmp  <KeQueryInterruptTime+>;nop;nop": 1,
                "sbbb $, %al;addb %ch, -(%edi);nop;nop;nop": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movb (%eax), %al;popl %ebp": 3,
                "movb $, (%esi);jmp - <KeLeaveCriticalRegion+>;movb (%ecx), %dl;jmp  <KeInitializeApc+>;movl , %ecx": 1,
                "movb %al, %cl;cmpb %bl, -(%ebp);jne  <IoSetFileOrigin+>;cmpl $, -(%ebp);je  <PoRegisterSystemState+>": 1,
                "jne  <IoSetFileOrigin+>;cmpl $, -(%ebp);je  <PoRegisterSystemState+>;movl $, %edi;cmpl %edi, ": 1,
                "calll  <KeQueryTickCount+>;cmpl %ebx, -(%ebp);setge -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "movl %esp, %ebp;cmpb $, (%ebp);pushl $;jne  <PoRegisterSystemState+>;cmpb $, ": 1,
                "testl %ebx, %ebx;jne  <KeReadStateTimer+>;popl %edi;popl %esi;popl %ebx": 1,
                "popl %edi;popl %esi;popl %ebx;retl;movl %edx, %edi": 1,
                "movl %edi, %ebx;jmp - <KeReadStateTimer+>;andl $, (%ebx);pushl $;pushl %ebx": 1,
                "movb %bl, -(%ebp);movl %ebx, -(%ebp);calll *;movb %al, %cl;movb %cl, -(%ebp)": 1,
                "jne  <KeReadStateTimer+>;xorl %edx, %edx;cmpl %edx, (%esi);je  <KeReadStateTimer+>;testl $, %eax": 1,
                "cmpl %edx, (%esi);je  <KeReadStateTimer+>;testl $, %eax;jne  <KeQueryTickCount+>;cmpl %edx, -(%ebp)": 1,
                "jae  <KeQueryTickCount+>;cmpl %edx, (%esi);je  <KeQueryTickCount+>;movl (%esi), %eax;orl (%esi), %eax": 1,
                "subl $, %esi;movl %esi, -(%ebp);cmpb $, -(%ebp);jne  <KeQueryTickCount+>;movl %esi, -(%ebp)": 1,
                "jmp - <KeReadStateTimer+>;nop;nop;nop;nop": 4,
                "incl %ebp;fmuls -(%ebx);jne  <IoSetFileOrigin+>;movb -(%ebp), %cl;calll *": 1,
                "movl (%edi), %esi;incl (%esi);movl %esi, %ecx;calll - <InterlockedPopEntrySList>;testl %eax, %eax": 4,
                "movl %esi, %ecx;calll - <InterlockedPopEntrySList>;testl %eax, %eax;je  <KeAreApcsDisabled+>;movl $, %edx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %edx;cmpl $, %edx": 1,
                "cmpl %ebx, (%ebx);jne  <FsRtlInitializeFileLock+>;leal (%esi), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax": 1,
                "leal (%esi), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax;jne  <KeInitializeDpc+>;leal -(%ebp), %ecx": 1,
                "cmpb $, (%eax);je  <IoSetFileOrigin+>;cmpl $, (%eax);movsbl (%eax), %edx;pushl %ebx": 1,
                "pushl %edi;movl (%ecx,%edx,), %edi;movb (%eax), %dl;jne  <KeInitializeDpc+>;movsbl %dl, %esi": 1,
                "cmpl %esi, %edi;popl %edi;popl %esi;popl %ebx;jne  <KiDeliverApc+>": 1,
                "jmp - <KeInitializeApc+>;cmpb $, %dl;jne - <KiDeliverApc+>;cmpb $, (%ecx);jne - <KiDeliverApc+>": 1,
                "xorl %edx, %edx;cmpl %edx, (%eax);jne  <PsGetProcessJob+>;pushl %edx;movl $, %edx": 1,
                "jne  <PsGetProcessJob+>;pushl %edx;movl $, %edx;pushl -(%ebp);calll - <KiDispatchInterrupt+>": 1,
                "xorl %esi, %esi;cmpl %esi, ;je  <MmAllocateContiguousMemory+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;calll - <KeWaitForMultipleObjects>;subl %esi, %eax;jne  <IoSetFileOrigin+>;calll  <KeInsertQueueApc+>": 1,
                "jmp - <KeInsertQueueApc+>;nop;nop;nop;nop": 7,
                "incl ;cmpl $, ;je  <PsGetThreadProcess+>;retl;nop": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;movl , %ecx;pushl %ebx": 3,
                "testl %edi, %edi;je  <KeInsertQueueApc+>;cmpl $, -(%ebp);je  <KeInsertQueueApc+>;cmpl $, -(%ebp)": 1,
                "addb %ch, -(%ecx);pushl %ecx;addb %al, -(%edx);arpl %ax, (%eax,%eax);jmp - <KeDelayExecutionThread+>": 1,
                "jmp - <KeDelayExecutionThread+>;movl -(%ebp), %eax;movl %eax, ;jmp - <KeInsertQueueApc+>;pushl $": 1,
                "cmpl %ebx, %ecx;jne  <IoSetFileOrigin+>;movl (%ebp), %ecx;testb $, %cl;jne  <IoSetFileOrigin+>": 1,
                "leal (%esi), %eax;pushl %eax;pushl (%ebp);pushl -(%ebp);pushl -(%ebp)": 2,
                "movl (%ebp), %eax;cmpl %ebx, %eax;jne  <IoSetFileOrigin+>;movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "incl %ebp;addb %bh, %bh;jmpl *%edi;pushl %cs;incl %ebp": 1,
                "addb %bh, %bh;jmpl *%edi;pushl %cs;incl %ebp;addb %dh, %dl": 1,
                "jmpl *%edi;pushl %cs;incl %ebp;addb %dh, %dl;pushl %cs": 1,
                "incl %ebp;addb %dl, -(%eax);movl %edi, %edi;pushl %ebp;movl %esp, %ebp": 1,
                "jne  <KeInsertQueueApc+>;movl (%esi), %edx;movl (%esi), %edi;movl %edx, (%edi);movl %edi, (%edx)": 1,
                "movl (%esi), %edx;movl (%esi), %edi;movl %edx, (%edi);movl %edi, (%edx);movb %bl, (%esi)": 1,
                "movb $, (%ebp);movb %al, %cl;calll *;cmpb %bl, (%ebp);je  <KeInsertQueueApc+>": 1,
                "popl %ebp;retl $;movl (%ebp), %ecx;movl %ebx, (%ecx);jmp - <KeInsertQueueApc+>": 1,
                "movl (%ebp), %ecx;movl %ebx, (%ecx);jmp - <KeInsertQueueApc+>;nop;nop": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl %eax, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "movl (%ebp), %edx;pushl %esi;pushl %edx;calll - <KeInitializeDpc+>;movl (%edx), %ecx": 1,
                "je  <FsRtlCheckLockForWriteAccess+>;movl (%ebp), %eax;movl %eax, (%edx);cmpb $, %bl;popl %esi": 1,
                "movl (%ebx), %edx;movl %eax, %ecx;andl %edi, %ecx;andl %edi, %edx;cmpl %edx, %ecx": 1,
                "movl %ecx, (%ebx);movl (%esi), %ecx;movl %ecx, (%ebx);testl %eax, %edi;movl (%esi), %eax": 1,
                "jne  <IoSetFileOrigin+>;andl $, %eax;cmpb $, (%ebp);je  <KeInitializeDpc+>;orl $, %eax": 1,
                "movl %eax, (%ebx);je  <KeInitializeDpc+>;cmpl $, %eax;jb  <IoSetFileOrigin+>;pushl (%esi)": 1,
                "movl $, %eax;andl %eax, %ecx;cmpl %eax, %ecx;jne  <KeInitializeDpc+>;testl %edi, (%ebx)": 1,
                "movl $, %eax;andl %eax, %ecx;cmpl %eax, %ecx;jne  <KeInitializeDpc+>;movl (%esi), %eax": 1,
                "cmpl %eax, %ecx;je  <RtlAppendUnicodeToString+>;movl (%ebp), %ecx;movl $, %eax;andl %eax, %ecx": 1,
                "andl %edx, %eax;testl %eax, %eax;movl (,%edi,), %ecx;movl %eax, (%ebx,%ecx);jne  <toupper+>": 1,
                "jne  <IoSetFileOrigin+>;movl (%esi), %eax;leal (%ebx), %ecx;andl $, %eax;leal (%ebp), %edx": 1,
                "leal (%ebx), %ecx;andl $, %eax;leal (%ebp), %edx;movl %eax, (%ecx);calll  <KeInitializeDpc+>": 1,
                "je  <KeInitializeDpc+>;movl %fs:, %eax;movb (%ebp), %cl;cmpb (%eax), %cl;jne  <toupper+>": 1,
                "cmpb $, %cl;popl %edi;popl %esi;popl %ebx;jb  <KeInitializeSemaphore+>": 1,
                "movl %eax, (%ecx);popl %ebp;retl $;nop;nop": 6,
                "testb $, (%eax);jne  <IoSetFileOrigin+>;testb $, (%eax);je  <MmForceSectionClosed+>;movl (%eax), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 128,
                "andl %ecx, %edx;cmpl %ecx, %edx;jne  <KeInitializeDpc+>;movl (%edi), %ecx;movl %ecx, (%ebx)": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx)": 4,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movb -(%ebp), %cl;cmpb $, %cl": 1,
                "addb %al, (%eax);andb %al, (%eax);addb %al, (%eax);andb $, %al;addb %al, (%eax)": 1,
                "pushl -(%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll  <KeInitializeDpc+>": 1,
                "cmpb $, (%ecx);jne - <KiDeliverApc+>;cmpb $, (%ecx);je  <KeGetRecommendedSharedDataAlignment+>;movb $, (%ecx)": 1,
                "pushl $;movl $, %edx;jmp - <KeInsertQueueApc+>;cmpb $, (%ebp);jne - <KiDeliverApc+>": 1,
                "movl (%edi), %ecx;movl %ecx, -(%ebp);movl (%edi), %ecx;movl %ecx, -(%ebp);movl (%edi), %ecx": 1,
                "movl (%ebp), %ebx;testb $, %bl;movl %eax, -(%ebp);movl (%ebp), %eax;pushl %esi": 1,
                "pushl -(%ebp);calll - <KeInitializeDpc+>;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "leal -(%ebp), %edx;calll *;movsbl (%ebp), %eax;leal (%eax,%esi), %eax;movb (%eax), %bl": 1,
                "leal -(%ebp), %ecx;calll *;popl %esi;movb %bl, %al;popl %ebx": 2,
                "pushl $;pushl $;calll - <_CIsqrt+>;movl , %eax;movl %eax, -(%ebp)": 42,
                "movl %eax, (%ebx);movl $, (%ebx);andl $, (%ebx);movl -(%ebp), %ecx;testl $, %ecx": 1,
                "andl $, (%ebx);movl -(%ebp), %ecx;testl $, %ecx;jne  <IoSetFileOrigin+>;andl $, %ecx": 1,
                "movl %eax, -(%ebp);cmpb $, (%eax);jne  <PoRegisterDeviceForIdleDetection+>;movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl -(%esi), %edx;movw -(%esi), %cx;movzwl -(%esi), %ebx;movl %edx, %eax;subl (%esi), %eax": 1,
                "movl -(%esi), %edx;movl %edx, %edi;subl (%esi), %edi;movl %edx, (%esi);cmpl $, %edi": 1,
                "movb -(%ebp), %cl;calll *;popl %esi;leave;retl $": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;calll *": 20,
                "pushl $;calll - <ExQueueWorkItem>;retl $;nop;nop": 2,
                "movl (%esi), %eax;movl %eax, -(%ebp);jmp - <KeRemoveQueue+>;nop;nop": 1,
                "decl %ecx;pushl %ebx;addb %al, (%edx);pushl %ebx;addb %bh, %bh": 1,
                "subl $, %esp;pushl %ebx;movl %edx, %ebx;movl , %edx;leal (%ecx,%ecx,), %eax": 1,
                "andl $, %edi;testl %eax, %eax;movl %ebx, -(%ebp);movl %ecx, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "movl (,%eax,), %eax;movl (%eax), %ecx;decl (%eax);movl (%esi), %edx;movl %ecx, -(%ebp)": 1,
                "je  <IoAllocateIrp+>;leal (%edx,%edx,), %eax;movl , %edx;movl %ecx, (%edx,%eax,);movl -(%ebp), %edx": 1,
                "nop;movl %ecx, %edx;movl , %ecx;leal (%edx,%edx,), %eax;shll $, %eax": 2,
                "ja  <IoAllocateIrp+>;pushl $;popl %eax;retl;cmpl $, %ecx": 1,
                "jb  <IoAllocateIrp+>;cmpl $, %ecx;jb  <PsGetThreadTeb+>;cmpl , %ecx;jb  <IoAllocateIrp+>": 1,
                "cmpl , %eax;ja  <IoAllocateIrp+>;xorl %eax, %eax;incl %eax;popl %ebp": 1,
                "je  <IoAllocateIrp+>;xorl %edx, %edx;movl %esi, %ecx;calll - <KiDispatchInterrupt+>;testl %edi, %edi": 1,
                "movl %eax, (%ecx);movl %ecx, (%eax);jmp - <KeSetTimerEx+>;movl -, %ecx;movl -, %edx": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl $;pushl $;pushl (%ebp)": 2,
                "movw (%esi), %ax;xorl %ebx, %ebx;cmpw %bx, %ax;ja  <KeQueryRuntimeThread+>;movl (%esi), %eax": 1,
                "andl $, %eax;cmpl $, ;pushl %edi;movl (,%eax,), %edi;movl (%edi), %eax": 1,
                "movl %eax, (%ebx,%edx,);xorl %ebx, %ebx;cmpl $-, %eax;je  <KeFlushEntireTb+>;movl , %edx": 1,
                "jg  <KeResetEvent+>;movl , %eax;cmpl , %eax;je  <IoSetFileOrigin+>;cmpl , %eax": 1,
                "decl (%edi);decl ;movl $, %edi;jmp - <KeResetEvent+>;decl ": 1,
                "pushl %eax;addb %bh, -(%edx);pushl %eax;addb %dl, -(%eax);cmpl $, ": 1,
                "calll - <ExReleaseResourceLite+>;movb %bl, %cl;calll - <ExReleaseResourceLite+>;testl %esi, %esi;jne - <KeResetEvent+>": 1,
                "testl %esi, %esi;jne - <KeResetEvent+>;popl %edi;popl %esi;popl %ebx": 1,
                "je - <KeDelayExecutionThread+>;jmp  <IoSetFileOrigin+>;calll - <KeInitializeDpc+>;jmp - <KeDelayExecutionThread+>;nop": 1,
                "movl (%eax), %edi;andl $, -(%esi);cmpl , %edi;je  <ExAllocatePoolWithQuotaTag+>;xorl %eax, %eax": 1,
                "popl %ebx;leave;retl $;movl %edi, -(%ebp);andl $-, %ebx": 1,
                "pushl %edi;movl (%ebp), %edi;shll $, %edi;leal (%edi,%ecx), %esi;movl (%esi), %eax": 1,
                "subl -(%ebp), %ebx;movl %ecx, -(%ebp);cmpl $, %ebx;movl %esi, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl (%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;jne  <RtlSetBit+>;movl (%ebp), %eax": 1,
                "jne  <RtlSetBit+>;movl (%ebp), %eax;movl (%ebp), %ecx;leal (%eax,%ecx,), %eax;movl %eax, (%ebp)": 1,
                "cmpl , %eax;je  <IoSetFileOrigin+>;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "shll $, %esi;addl (%eax), %esi;pushl %edi;movl (%esi), %eax;movl %esi, -(%ebp)": 1,
                "cmpl %esi, (%ebp);movl %esi, -(%ebp);ja  <_snwprintf+>;movl (%ebp), %edx;leal (%edx,%ebx,), %eax": 1,
                "leal (%ecx,%eax), %esi;leal (%edx,%ebx,), %eax;movl %eax, (%ebp);movl (%eax), %eax;movl %esi, (%ebp)": 1,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %esi;movl (%esi), %edx": 2,
                "jne  <PsGetProcessJob+>;movl (%esi), %eax;cmpl %edi, %eax;jne  <PsGetProcessJob+>;movl (%esi), %esi": 1,
                "testb $, ;jne  <IoSetFileOrigin+>;andl $, (%esi);pushl $;movl %esi, %edx": 1,
                "addb %cl, -(%edx);lcalll *-(%esi);popl %ebx;pushl %edx;addb %dl, -(%eax)": 1,
                "incl (%eax);addb %al, (%eax);addb %bh, %al;outsb (%esi), %dx;pushl %edx": 1,
                "incl (%ebx);movl (%eax), %ecx;testl %ecx, %ecx;je  <IoSetFileOrigin+>;movl (%eax), %edx": 1,
                "je  <IoSetFileOrigin+>;movl %ecx, (%edx);movl %edx, (%ecx);andl $, (%eax);movb (%esi), %cl": 1,
                "jne  <PsIsThreadTerminating+>;leal (%ebx), %ecx;movl (%ecx), %edx;leal (%esi), %eax;movl %ecx, (%eax)": 1,
                "popl %ss;pushl %edx;addb %bl, (%edx);pushl %edx;addb %bh, %bh": 1,
                "popl %ss;pushl %edx;addb %bh, %bh;sbbb %dl, (%edx);orb $, %al": 1,
                "movl (%ebp), %esi;xorl %edx, %edx;movl %eax, -(%ebp);movl (%esi), %eax;incl %edx": 1,
                "pushl %ebx;movl (%ebp), %ebx;testb $, %bl;pushl %esi;pushl %edi": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);testl %edx, %edx;je  <mbtowc+>;pushl $": 1,
                "pushl %ebx;calll - <PsIsThreadTerminating+>;movl $, %edi;cmpl %edi, (%esi);je  <KeInitializeMutant+>": 1,
                "cmpl (%ebx), %eax;jbe  <PsIsThreadTerminating+>;movl %eax, (%ebx);cmpl $, %ebx;je - <IoAllocateIrp+>": 1,
                "orl $, %eax;movl %eax, %edi;movl (%ebp), %eax;cmpl $, (%eax);je  <PsIsThreadTerminating+>": 1,
                "pushl %esi;pushl %edi;calll  <PsGetProcessJob+>;movl %edi, %esi;movl (%ebp), %eax": 1,
                "jne  <ExLocalTimeToSystemTime+>;movl %eax, (%esi);incw (%esi);movl (%esi), %eax;incl (%esi)": 1,
                "cmpl %ecx, (%ebp);movl %eax, (%esi);jne  <CcScheduleReadAhead+>;orl %ecx, %eax;movl %ebx, %edi": 1,
                "xorl %ecx, (%esi);movl , %ecx;popl %edi;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax": 1,
                "cmpl (%eax), %ecx;jb  <PsIsThreadTerminating+>;cmpl (%eax), %ecx;jbe - <PsIsThreadTerminating+>;movl (%eax), %eax": 1,
                "movl (%esi), %eax;movl $, %edx;andl %edx, %ecx;pushl %edi;movl (%esi), %edi": 1,
                "movl $, %edx;andl %edx, %ecx;pushl %edi;movl (%esi), %edi;orl $, %ecx": 1,
                "testl %eax, %eax;je  <PsIsThreadTerminating+>;testb $, %al;je  <IoSetFileOrigin+>;xorl %eax, %eax": 1,
                "cmpl %ecx, %eax;jge  <PsGetThreadProcess+>;movl %ecx, %eax;movb %bl, (%esi);cmpl %eax, %edx": 1,
                "popl %edi;movl %esi, %eax;popl %esi;popl %ebx;leave": 38,
                "calll - <KeQueryTimeIncrement+>;jmp - <PsGetThreadProcess+>;movb -(%ebp), %cl;calll - <ExReleaseResourceLite+>;jmp - <PsGetThreadProcess+>": 1,
                "jmp - <PsGetThreadProcess+>;movb -(%ebp), %cl;calll - <ExReleaseResourceLite+>;jmp - <PsGetThreadProcess+>;movzbl (%esi), %ecx": 1,
                "movsbl , %ecx;leal (%ecx,%ecx,), %eax;pushl %ebx;movl %eax, -(%ebp);movl , %eax": 1,
                "movl %edx, %eax;subl (%ecx), %eax;movl %edx, (%ecx);movl (%ecx), %edx;movl %edx, %esi": 2,
                "jae  <PsGetProcessId+>;subl $, %edi;cmpl $, %edi;jge  <PsGetThreadProcess+>;pushl $": 1,
                "movl %eax, %edi;subl (%ecx), %edi;leal (%ecx), %edx;movl %ebx, %esi;subl (%edx), %esi": 1,
                "subl (%edx), %esi;movl %ebx, (%edx);movw (%ecx), %bx;movl %esi, %eax;subl %edi, %eax": 1,
                "movl %esi, %eax;subl %edi, %eax;cmpl -(%ebp), %esi;movzwl (%ecx), %edi;jae  <FsRtlRemoveLargeMcbEntry+>": 1,
                "pushl $;popl %edi;movw %di, (%ecx);addl $, %ecx;decl -(%ebp)": 1,
                "leal (%esi), %eax;movl %eax, (%ecx);pushl (%edx);leal (%esi), %edi;pushl (%edx)": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);xorl %edi, %edi;jmp - <KeWaitForMultipleObjects+>": 1,
                "pushl %edi;jmp  <wcscmp+>;movw (%esi), %cx;movzwl (%edx), %eax;movzwl %cx, %edi": 1,
                "subl %edi, %eax;je  <wcscmp+>;testl %eax, %eax;popl %edi;popl %esi": 1,
                "incl %eax;popl %ebp;retl;testw %cx, %cx;je - <wcscmp+>": 1,
                "je - <wcscmp+>;incl %edx;incl %edx;incl %esi;incl %esi": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;jmp - <KeInsertQueueApc+>;andl $, (%esi);jmp - <KiDispatchInterrupt+>": 1,
                "jge - <KeInsertQueueApc+>;jmp  <IoSetFileOrigin+>;nop;nop;nop": 1,
                "cmpl $-, %eax;je  <wcscmp+>;movl , %edx;leal (%eax,%eax,), %ecx;movl %edi, (%edx,%ecx,)": 1,
                "movl %edi, ;orl $-, (%esi);andb $-, (%esi);movl %eax, (%esi);movl (%esi), %eax": 1,
                "cmpl , %eax;je  <IoSetFileOrigin+>;cmpl , %eax;je  <IoSetFileOrigin+>;movl , %eax": 1,
                "pushl %ebx;xorl %ebx, %ebx;incl %ebx;testl %eax, %eax;jne  <IoSetFileOrigin+>": 1,
                "xorl %ebx, %ebx;incl %ebx;testl %eax, %eax;jne  <IoSetFileOrigin+>;testb $, (%esi)": 1,
                "shrl $, %eax;jne  <KeQueryRuntimeThread+>;movl (%esi), %eax;andl $, %eax;orl $, %eax": 1,
                "andl $, (%esi);jmp - <KeDelayExecutionThread+>;movb $, (%esi);jmp - <KeWaitForMultipleObjects+>;incl ": 1,
                "shll $, %eax;xorl (%esi), %eax;andl $, %eax;xorl %eax, (%esi);cmpl $, %ebx": 1,
                "andl $, %eax;xorl %eax, (%esi);cmpl $, %ebx;movl (%esi), %eax;jg  <wcscmp+>": 1,
                "xorl %eax, (%esi);cmpl $, %ebx;movl (%esi), %eax;jg  <wcscmp+>;movl , %eax": 1,
                "orl $-, (%esi);incl (%eax);popl %edi;popl %esi;popl %ebx": 1,
                "xorl %ecx, %ecx;incl %ecx;testb %cl, (%esi);jne  <RtlSetBit+>;testb %al, %cl": 1,
                "je  <wcscmp+>;subl , %eax;cmpl $, %eax;jne - <wcscmp+>;cmpb $, ": 1,
                "calll - <KeFlushEntireTb>;jmp  <RtlClearBits+>;movl %edx, (%edi);jmp - <wcscmp+>;movl %ecx, (%edi)": 1,
                "movl %edx, (%edi);jmp - <wcscmp+>;movl %ecx, (%edi);jmp - <KeResetEvent+>;nop": 1,
                "leal -(%ebp), %eax;pushl %eax;calll ;xorl %ebx, %ebx;cmpl %ebx, -(%ebp)": 1,
                "movl $, -(%ebp);pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "pushl %esi;calll  <KeFlushEntireTb+>;movl %eax, %esi;movl %esi, %ecx;calll *": 1,
                "pushl %edi;movl %eax, %edi;shrl $, %edi;movl $, %ebx;je - <KeFlushEntireTb+>": 1,
                "movl %eax, %edi;shrl $, %edi;movl $, %ebx;je - <KeFlushEntireTb+>;movl (%esi), %ecx": 1,
                "movl %ecx, (%eax);shll $, %eax;popl %ebx;popl %ebp;retl $": 1,
                "cmpl %ecx, %edx;movl %esi, -(%ebp);movl %edx, -(%ebp);ja  <IoSetFileOrigin+>;movl -(%ebp), %eax": 1,
                "jne - <KeFlushEntireTb+>;movl , %esi;pushl $;xorl %edx, %edx;movl %esi, %eax": 1,
                "movl , %ecx;leal (%eax,%eax,), %eax;cmpl %eax, %ecx;ja  <IoSetFileOrigin+>;xorl %eax, %eax": 1,
                "shrl $, %eax;andl $, %eax;cmpl %ecx, %eax;jne  <CcSetAdditionalCacheAttributes+>;pushl (%esi)": 1,
                "addb %al, (%eax);addb %bl, (%ecx);popl %es;pushl %ebx;addb %ah, (%edi,%eax)": 1,
                "movl %ecx, -(%ebp);jbe  <IoSetFileOrigin+>;subl -(%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl , %ecx;movl (%ebp), %eax": 3,
                "movl (%eax), %ecx;andl $, %ecx;orl $, %ecx;movl %ecx, (%eax);movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl (%ebx), %esi;andl $, -(%ebp);subl $, %eax": 1,
                "subl $, %eax;shrl $, %eax;subl $, %esi;andl %edi, %eax;shrl $, %esi": 1,
                "movl $, %ecx;je  <RtlSetBit+>;movl %eax, %edx;andl %ecx, %edx;cmpl %ecx, %edx": 1,
                "movl %eax, %edx;andl %ecx, %edx;cmpl %ecx, %edx;jne  <RtlSetBit+>;andl $, %eax": 1,
                "subl $, %esi;incl ;jmp - <RtlSetBit+>;movl (%ebx), %eax;movl -(%eax), %ecx": 1,
                "andl $, %eax;cmpl $, %eax;je  <RtlSetBit+>;movl %edi, %ecx;calll - <KeResetEvent+>": 1,
                "movl %eax, (%edi);incl (%edi);orl $, (%edi);testb $, (%edi);jne  <RtlSetBit+>": 1,
                "calll - <IoAllocateIrp+>;movl (%ebp), %ecx;movl %eax, %esi;calll - <IoAllocateIrp+>;movl %esi, %ecx": 1,
                "je  <IoSetFileOrigin+>;orl , %eax;pushl (%ebp);movl %eax, (%ebx);pushl (%ebp)": 1,
                "decl -(%ebp);movw %di, (%ecx);je - <PsGetThreadProcess+>;movl -(%ebp), %ebx;jmp - <RtlSetBit+>": 1,
                "movw %di, (%ecx);je - <PsGetThreadProcess+>;movl -(%ebp), %ebx;jmp - <RtlSetBit+>;imull $, %eax, %eax": 1,
                "testl %ecx, %ecx;je  <RtlSetBit+>;movl (%ecx), %edx;movw (%ecx), %bx;movzwl (%ecx), %edi": 1,
                "movl %edx, (%ecx);movl -(%ebp), %edx;imull $, %edx, %edx;cmpl %edx, %esi;jae  <RtlSetBit+>": 1,
                "cmpl $, %edi;jge  <RtlSetBit+>;pushl $;popl %edi;movl -(%ebp), %ebx": 1,
                "testl %eax, %eax;je  <RtlCopyUnicodeString+>;movl %eax, %edi;cmpl $, (%edi);je  <IoGetRelatedDeviceObject+>": 1,
                "je  <RtlCopyUnicodeString+>;movl %eax, %edi;cmpl $, (%edi);je  <IoGetRelatedDeviceObject+>;testb $-, (%esi)": 1,
                "calll  <IoGetAttachedDevice>;movl %eax, %edi;movl %edi, %eax;popl %edi;popl %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;testb $, (%eax);movl (%ebp), %eax": 1,
                "jne  <KeInitializeEvent+>;movb (%esi), %al;testb $, %al;je  <PsGetProcessId+>;testb $, %al": 1,
                "xorl %eax, %eax;cmpb %bl, (%esi);je  <IoGetAttachedDevice+>;movl %ebx, %eax;movl (%edx,%eax,), %edi": 1,
                "movl (%edx,%eax,), %edi;movw (%edi), %cx;incl (%edi);cmpw (%edi), %cx;jae  <RtlCopyUnicodeString+>": 1,
                "jae  <RtlCopyUnicodeString+>;movb (%esi), %al;testb %al, %bl;jne  <RtlEqualString+>;movl %esi, %edx": 1,
                "je  <RtlFindNextForwardRunClear+>;xorl %ebx, %ebx;xorl %edx, %edx;movl %edx, -(%ebp);movb %dl, -(%ebp)": 1,
                "movl %ds:, %eax;movl %eax, %edi;movb , %al;cmpb %al, (%ebp);jg  <PsGetProcessId+>": 1,
                "je  <PsGetProcessId+>;cmpb $, (%ebp);je  <IoFreeIrp+>;movb $, %bl;addl $, %edi": 1,
                "incb %al;movb %al, (%edx);movl %fs:, %eax;movl %eax, %esi;movb (%esi), %al": 1,
                "movb (%esi), %al;movb %al, (%edx);leal (%edx), %eax;movl %eax, (%eax);movl %eax, (%eax)": 2,
                "addb $, %al;je  <ExLocalTimeToSystemTime+>;movl (%esi), %ecx;andl $, %eax;movl %eax, %edi": 1,
                "leal (%edx), %eax;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 14,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp - <IoGetAttachedDevice+>;nop;nop": 1,
                "orl $-, -(%ebp);pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi": 2,
                "movl (%eax), %ecx;movl (%ebp), %edx;addl $, %ecx;calll - <ExInterlockedAddLargeStatistic>;popl %ebp": 3,
                "calll - <ExInterlockedAddLargeStatistic>;popl %ebp;retl $;pushl (%ebx);calll - <KeInitializeEvent+>": 1,
                "jne  <ExIsResourceAcquiredExclusiveLite+>;incb %dl;sti;movb %dl, %al;popl %ebp": 1,
                "pushl %edi;movl (%eax), %edi;testl %edi, %edi;jne  <RtlInsertElementGenericTableAvl+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;popl %edi;leave;retl $;nop": 2,
                "addb %al, (%eax);addb %al, (%eax);adcl %ebx, %eax;pushl %ecx;addb %dl, -(%eax)": 1,
                "addb %bh, (%eax);pushl %ebp;adcb %cl, (%edi);testl %edi, (%edx);addl (%eax), %eax": 1,
                "addl (%eax), %eax;movl %eax, (%ecx);jmp  <IoAllocateMdl+>;pushl %esi;calll - <KeClearEvent+>": 1,
                "pushl %esi;movl (%ebp), %esi;andl $-, %esi;movw (%esi), %ax;cmpw $, %ax": 1,
                "movw (%esi), %ax;cmpw $, %ax;je  <IoSetFileOrigin+>;cmpw $, %ax;je  <FsRtlInsertPerStreamContext+>": 1,
                "pushl %ebx;addb %dh, (%edx);pushl %ebx;addb %bh, %bh;incl -(%esi)": 1,
                "incl -(%esi);pushl %ss;pushl %ebx;addb %bh, %bh;pushl %ss": 1,
                "pushl %ss;pushl %ebx;addb %bh, %bh;pushl %ss;pushl %ebx": 1,
                "jmp  <RtlDelete+>;movl (%ebp), %eax;jmp  <KeSaveFloatingPointState+>;pushl $;popl %ecx": 1,
                "movl , %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %eax, (%ecx);movl %eax, -(%ebp)": 1,
                "calll - <ExReleaseResourceLite+>;jmp - <KeSetKernelStackSwapEnable+>;nop;nop;nop": 1,
                "movl %esp, %ebp;subl $, %esp;testb $, ;jne  <KeSetKernelStackSwapEnable+>;movl (%ebp), %eax": 1,
                "movl $, %edx;andl %edx, %esi;movl $, %ecx;andl %edx, %ebx;subl %ecx, %ebx": 1,
                "shll $, %ecx;movl %ecx, %edx;movl %esi, %ecx;subl %edx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %eax, %ecx;andl $, %eax;orl $, %eax;movl %eax, -(%ebp);shrl $, %ecx": 1,
                "movl -(%ebp), %eax;movl %edi, -(%ebp,%eax,);calll - <wcscmp+>;subl $, %esi;incl -(%ebp)": 1,
                "movl %edi, -(%ebp,%eax,);jb  <KeSetKernelStackSwapEnable+>;subl $, %esi;subl $, %edi;jmp - <KeSetKernelStackSwapEnable+>": 1,
                "jb - <KeSetKernelStackSwapEnable+>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "jae  <PsReturnProcessNonPagedPoolQuota+>;cmpl $, ;jne  <IoSetFileOrigin+>;movl , %eax;addl $, %eax": 1,
                "addl $, %eax;cmpl %eax, ;jae  <PsGetProcessJob+>;leal (%ebx), %ecx;movl %ecx, -(%ebp)": 1,
                "testb $, %cl;jne  <FsRtlRemoveLargeMcbEntry+>;cmpl $, %ecx;je  <KeSetKernelStackSwapEnable+>;andl $, -(%ebp)": 1,
                "movl (%ebp), %edx;cmpl , %edx;ja  <KeSetKernelStackSwapEnable+>;movl , %eax;shrl $, %edx": 1,
                "leal (%eax,%edx,), %eax;incw (%eax);movl -(%ebp), %eax;testb $, %al;jne  <IoSetFileOrigin+>": 1,
                "orl $, %ecx;shll $, %eax;shrl %ecx;andl $, %eax;orl %eax, %ecx": 2,
                "andl $, %eax;orl %eax, %ecx;movl %ecx, (%esi);movl , %ebx;xorl %edi, %edi": 1,
                "shrl $, %edi;andl $, %edi;subl $, %edi;calll *%ebx;testb $, (%edi)": 1,
                "shrl $, %edi;leal (%edi,%edi,), %eax;leal (%ecx,%eax,), %edi;cmpw $, (%edi);jne  <KeSetKernelStackSwapEnable+>": 1,
                "jne  <KeSetKernelStackSwapEnable+>;cmpl $, (%edi);je  <KeSetKernelStackSwapEnable+>;incl ;movb (%ebp), %cl": 1,
                "je  <KeSetKernelStackSwapEnable+>;calll *%ebx;movb %al, %bl;movw (%edi), %ax;cmpw $, %ax": 1,
                "je  <IoSetFileOrigin+>;movl , %eax;addl $, %eax;cmpl %eax, ;jb  <IoSetFileOrigin+>": 1,
                "pushl (%ebp);leal (%ebp), %eax;pushl %esi;pushl %ebx;pushl %eax": 1,
                "andl $, %eax;cmpl $, %eax;je  <MmCreateMdl+>;movl %esi, %ecx;calll - <PsIsThreadTerminating+>": 1,
                "je  <FsRtlGetNextFileLock+>;movl (%edi), %eax;testl $, %eax;jne  <IoSetFileOrigin+>;movl $, %ecx": 1,
                "shrl $, %esi;cmpl (%edi), %edx;movl %esi, %edx;ja  <KeInsertHeadQueue+>;subl %ecx, %edx": 1,
                "subl %ecx, %edx;leal (%eax,%edx,), %eax;testl %eax, %eax;pushl $;popl %ecx": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi;xorl %esi, %esi": 5,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);je - <KeFlushEntireTb+>;movl (%ebp), %ebx;shrl $, %ebx": 1,
                "movl (%ebp), %eax;pushl (%ebp);leal -(%ebp), %edx;pushl %edx;pushl %eax": 1,
                "je  <IoSetFileOrigin+>;movl (%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ebp), %edx;movl %esi, %ecx;calll - <IoAllocateIrp+>;testl %eax, %eax;jne  <_snwprintf+>": 1,
                "je  <KeSetKernelStackSwapEnable+>;orl $, %eax;cmpl $, (%ebp);movl %eax, (%esi);jne  <KeSetKernelStackSwapEnable+>": 1,
                "jne  <KeSetKernelStackSwapEnable+>;pushl $;pushl %ebx;pushl %esi;pushl (%ebp)": 1,
                "pushl %esi;pushl (%ebp);calll - <KeSetKernelStackSwapEnable+>;testl %eax, %eax;je  <IoSetFileOrigin+>": 1,
                "andl $-, %eax;testb $, %ah;je  <PsGetProcessJob+>;popl %edi;popl %esi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax;movl (%ebp), %ecx": 1,
                "ja  <RtlFindClearBitsAndSet+>;decl ;jmp - <KeSetKernelStackSwapEnable+>;nop;addb %al, (%ecx)": 1,
                "jg - <KeSetKernelStackSwapEnable+>;addb %al, (%eax);addb %bh, %bh;clc;lock": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, %edx;andl $, %eax;pushl %edi": 2,
                "movl %eax, %edx;andl $, %eax;pushl %edi;shrl $, %edx;addl (%ecx), %edx": 2,
                "movl %eax, (%ebp);movl (%esi), %eax;movl %ecx, (%eax);movl (%ebp), %eax;invlpg (%eax)": 1,
                "movl %esi, -(%ebp);ja  <IoSetFileOrigin+>;movl %esi, %eax;subl %ebx, %eax;movl %ebx, (%ebp)": 1,
                "addb %bh, (%edx);movb $, %ch;addb %dl, -(%eax);movl %edi, %edi;pushl %ebp": 1,
                "cmpl , %eax;je  <RtlMapSecurityErrorToNtStatus+>;pushl %ebx;pushl %esi;movl (%eax), %esi": 2,
                "pushl %esi;movl (%eax), %esi;addl $, %esi;movl (%esi), %ebx;pushl %edi": 2,
                "cmpl %eax, %edi;movl %eax, -(%ebp);ja  <_snwprintf+>;movl (%ebp), %edx;leal (%edx), %eax": 1,
                "cmpl (%edx), %ecx;movl %edx, %eax;je  <PsGetThreadTeb+>;movl %esi, (%eax);jmp  <PsReturnProcessNonPagedPoolQuota+>": 1,
                "jbe  <PsGetThreadTeb+>;movb (%edi), %cl;orb %cl, (%edx);incl %edx;leal -(%eax), %esi": 1,
                "testl %esi, %esi;jbe  <RtlSetBits+>;movb (%esi), %al;jmp  <RtlSetBits+>;testl %eax, %eax": 1,
                "jmp  <RtlSetBits+>;testl %eax, %eax;je  <ExIsProcessorFeaturePresent+>;movsbl (%eax), %edx;jmp - <IoQueueWorkItem+>": 1,
                "movl %eax, (%edi);calll *;cmpl $, -(%ebp);jne  <PsGetThreadTeb+>;andl $, %ebx": 1,
                "xorl %edx, %edx;incl %edx;cmpb %dl, (%ebp);pushl %esi;movl (%ebp), %esi": 1,
                "popl %ebx;popl %esi;popl %ebp;retl $;movl %edx, (%ebp)": 1,
                "je  <IoSetFileOrigin+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);shrl $, -(%ebp)": 1,
                "jne  <RtlEqualString+>;cmpl $, %esi;je  <IoSetFileOrigin+>;cmpl $, %esi;je  <IoSetFileOrigin+>": 1,
                "testl %edi, %edi;je - <KeSetKernelStackSwapEnable+>;movl -(%ebp), %ecx;calll *;cmpl $, -(%ebp)": 1,
                "andl $, %ebx;andl $, -(%ebp);jmp - <PsGetThreadTeb+>;movl (%ebp), %ecx;shrl $, %eax": 1,
                "shrl $, %eax;andl $, %eax;movl %eax, (%ecx);jmp - <KeSetKernelStackSwapEnable+>;movl %ecx, %eax": 1,
                "shrl $, %eax;andl $, %eax;testb $, %ch;movl %eax, -(%ebp);je - <PsGetThreadTeb+>": 1,
                "cmpl %edx, %eax;jne  <PsGetProcessJob+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl %eax;pushl (%ebp);calll - <KeSetKernelStackSwapEnable+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <IoSetFileOrigin+>;movl -(%ebp), %eax;jmp - <PsGetThreadTeb+>;testb $, %ah": 1,
                "calll - <IoAllocateIrp+>;andl $, (%esi);movl (%ebp), %eax;jmp - <PsGetThreadTeb+>;cmpl $, (%ebp)": 1,
                "movb %al, -(%ebp);movl (%ebp), %eax;movl (%eax), %ebx;movl %eax, %edi;shll $, %edi": 1,
                "movl (%ebp), %eax;invlpg (%eax);movl (%ebp), %esi;movl (%esi), %eax;testb $, %al": 1,
                "testb $, %al;je  <RtlDelete+>;cmpl $, ;jne  <IoSetFileOrigin+>;movb -(%ebp), %cl": 1,
                "movl (%esi), %edi;movl %ecx, %eax;shrl $, %eax;andl $, %eax;xorl %edx, %edx": 1,
                "andl $, %eax;xorl %edx, %edx;leal -(%edi), %ebx;divl %ebx;movl (%esi), %eax": 1,
                "testb $, (%esi);jne  <IoSetFileOrigin+>;movl (%esi), %eax;testb $, %al;jne  <RtlEqualString+>": 1,
                "testb $, %al;jne  <RtlEqualString+>;cmpl $, ;je  <IoSetFileOrigin+>;andl $, %eax": 1,
                "movl , %ecx;movl %ecx, (%esi);movl %eax, %ecx;shll $, %ecx;xorl (%esi), %ecx": 1,
                "decl (%esi);jmp - <KiDispatchInterrupt+>;nop;nop;nop": 1,
                "testl %eax, %eax;je  <RtlLookupElementGenericTableFullAvl+>;popl %esi;popl %ebp;retl $": 1,
                "pushl %esi;leal -(%ecx), %esi;pushl %edi;movl (%esi), %edi;movl %esi, -(%ebp)": 1,
                "addb %ah, (%esp,%esi,);addb %bh, %bh;pushl (%esi);pushl %ecx;addb %cl, -(%ecx)": 1,
                "fstl (%ecx);addl %esi, %ebx;pushl %ecx;addb %cl, (%esi,%ebx,);pushl %ecx": 1,
                "adcl $, %eax;pushl %edx;addb %bh, %bh;jmpl *-(%ebp);adcl $, %eax": 1,
                "adcl $, %eax;int;adcl $, %eax;pushl %edx;addb %dl, -(%eax)": 1,
                "cmpb $, (%ebp);pushl %esi;movl %ebx, -(%ebp);jne  <KeTerminateThread+>;movzwl , %eax": 1,
                "pushl %edi;pushl (%ebp);leal (%esi), %edi;pushl %edi;calll  <ObReferenceObjectByPointer+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%ebp), %eax;pushl %esi": 1,
                "pushl $;popl %ecx;movl %edx, %esi;movl %eax, %edi;rep  movsl (%esi), %es:(%edi)": 5,
                "popl %ecx;movl %edx, %esi;movl %eax, %edi;rep  movsl (%esi), %es:(%edi);movl (%edx), %esi": 1,
                "pushl %edi;calll *;movl (%esi), %edi;decw (%edi);cmpw $, (%edi)": 1,
                "cmpw $, (%edi);movb %al, -(%ebp);je  <IoSetFileOrigin+>;leal (%esi), %ebx;leal (%esi), %eax": 1,
                "je  <IoSetFileOrigin+>;leal (%esi), %ebx;leal (%esi), %eax;pushl %ebx;pushl %eax": 1,
                "leal (%esi), %eax;pushl %eax;pushl (%ebp);pushl %edi;pushl %esi": 2,
                "calll - <ObReferenceObjectByPointer+>;popl %edi;popl %esi;popl %ebp;retl $": 1,
                "retl $;xorb %al, %al;jmp - <ExAcquireResourceExclusiveLite+>;orl $, (%esi);jmp  <CcInitializeCacheMap+>": 1,
                "cmpl %esi, (%ecx);jne  <RtlSplay+>;andl $, (%ecx);pushl %eax;jmp  <RtlDelete+>": 1,
                "leal (%eax), %ecx;jmp - <RtlSplay+>;nop;nop;addb %al, (%eax)": 1,
                "nop;nop;movl $, %esi;pushl %edx;decl %edx": 1,
                "pushl (%esi);pushl %edx;addb %cl, -(%edi,%ebx);cmpb $, %al;pushl %edx": 1,
                "addb %bl, %ch;pushl %ds;pushl %edx;addb %bh, %bh;sbbb $, %al": 1,
                "sbbb $, %al;addb %bh, %ch;sbbb $, %al;addb %bh, %bh;decl %edx": 1,
                "addb %bh, %bh;decl %edx;sbbb $, %al;addb %dl, %bl;sbbb $, %al": 1,
                "decl (%ebx);pushl %edx;addb %ah, (%ecx);pushl %edx;addb %bh, %bh": 1,
                "pushl (%edi);calll - <ExAcquireResourceSharedLite>;testb $-, (%edi);je  <IoSetFileOrigin+>;movl (%edi), %ecx": 1,
                "movl %eax, ;movl , %eax;incl %eax;cmpl , %eax;movl %eax, ": 5,
                "incl %eax;cmpl , %eax;movl %eax, ;ja  <_snwprintf+>;movl (%ecx), %eax": 2,
                "addl %eax, %edx;cmpl , %edx;movl %edx, ;jbe - <IoGetAttachedDevice+>;movl %edx, ": 1,
                "jmp  <MmMapLockedPagesSpecifyCache+>;addl $, %eax;andl $, %eax;jmp - <RtlDelete+>;addl $, %ecx": 1,
                "jne - <RtlDelete+>;jmp  <IoSetFileOrigin+>;movl (%ebp), %edx;cmpl (%ecx), %edx;movl %ecx, %esi": 1,
                "movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);movb $, (%esi);jmp - <KeRemoveByKeyDeviceQueue+>": 1,
                "cmpl %eax, (%edx);je  <PsGetProcessJob+>;xorl %edx, %edx;incl %edx;cmpl %edx, %esi": 1,
                "jmp  <RtlDelete+>;addl $, %ecx;cmpl %eax, (%ecx);je  <PsGetProcessJob+>;incl %edx": 1,
                "incl (%ecx);pushl %esi;calll *(%ecx);jmp - <KeReadStateTimer+>;incl (%edi)": 1,
                "jmp - <PsGetThreadTeb+>;nop;nop;nop;andb $-, %al": 1,
                "jl  <RtlDelete+>;pushl $;popl %ecx;movb %cl, %dl;subb %al, %dl": 1,
                "jmp  <KeSaveFloatingPointState+>;cmpl %ebx, %eax;je  <MmGrowKernelStack+>;pushl %ebx;pushl %eax": 1,
                "je  <MmGrowKernelStack+>;pushl %ebx;pushl %eax;calll  <ExFreePoolWithTag>;jmp  <MmGrowKernelStack+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;xorb %bl, %bl;calll *": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;testl %edx, %edx;je  <RtlDelete+>;testb $, (%edx)": 1,
                "negl %ecx;shrl $, %eax;incl %edi;addl %eax, %ecx;andl %edi, %ebx": 1,
                "movl , %eax;movl , %edx;shll $, %eax;subl %eax, %edx;andl $, (%ebp)": 1,
                "pushl %esi;movl (%ebp), %esi;jne  <IoSetFileOrigin+>;cmpl $, %ebx;je  <ExAllocatePoolWithTagPriority+>": 1,
                "jne - <ExAllocatePoolWithTagPriority+>;movl (%ebp), %edx;cmpl %edx, %edi;ja  <IoSetFileOrigin+>;testl %edi, %edi": 1,
                "movl (%ebp), %edx;cmpl %edx, %edi;ja  <IoSetFileOrigin+>;testl %edi, %edi;jne  <IoSetFileOrigin+>": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %ecx;pushl %ebx;pushl %esi": 3,
                "andl $, -(%ebp);movl %eax, -(%ebp);xorl %ecx, %ecx;cmpl %ecx, -(%ebp);jne  <_stricmp+>": 1,
                "movl %edx, %ecx;shrl $, %ecx;movl %ebx, -(%ebp);movl (%ebp), %edx;movl (%edx), %edi": 1,
                "orb $-, %al;shll $, %ecx;movl %ecx, (%ebp);nop;nop": 1,
                "nop;nop;movzbl %al, %eax;movsbl (%eax), %ecx;movzbl %dl, %ebx": 1,
                "movsbl (%ebx), %eax;cmpl %esi, %eax;jae  <RtlFindClearBits+>;movl -(%ebp), %ecx;addl $, (%ebp)": 1,
                "cmpl %ecx, (%ebp);movb %dl, %al;jae  <MmUnlockPages+>;movb (%edi), %dl;incl %edi": 1,
                "pushl %es;addl $, %eax;addl (%ebx), %eax;addl (%edx), %eax;addb (%edx), %al": 2,
                "movl (%esi), %ecx;movl $, %eax;andl %eax, %ecx;cmpl %eax, %ecx;je  <RtlFindClearBits+>": 1,
                "movl $, %eax;andl %eax, %ecx;cmpl %eax, %ecx;je  <RtlFindClearBits+>;xorl %edi, %edi": 1,
                "calll  <PsChargeProcessNonPagedPoolQuota>;testl %eax, %eax;jl  <IoSetFileOrigin+>;testb $-, (%esi);jne  <RtlFindClearBits+>": 1,
                "je  <RtlFindClearBits+>;movl (%esi), %eax;subl (%esi), %eax;leal (,%eax,), %eax;pushl %eax": 1,
                "shrl $, %eax;andl %ecx, %eax;andl %ecx, %edi;cmpl %eax, %edi;movl %eax, -(%ebp)": 1,
                "shrl $, %eax;movl (%edx,%eax,), %eax;movl %edi, %ecx;andl $, %ecx;shrl %cl, %eax": 3,
                "pushl %edi;pushl %ebx;calll - <PsGetThreadTeb+>;testl %eax, %eax;jl  <IoSetFileOrigin+>": 1,
                "calll - <PsGetThreadTeb+>;testl %eax, %eax;jl  <IoSetFileOrigin+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "testl %ecx, %ecx;movl %esi, (%ebx);jne  <IoSetFileOrigin+>;leal (%ebx), %edx;movl %esi, %ecx": 1,
                "movl -, %ebx;movl %ebx, %eax;orl $, %eax;movl %eax, ;movl , %eax": 1,
                "movzbl %bl, %ecx;orl $-, %ecx;andl %ecx, -;cmpl $-, %eax;popl %ebx": 1,
                "shll $, %eax;movl %eax, (%ecx);xorl %eax, %eax;popl %edi;popl %esi": 1,
                "movl %esi, -(%ebp);cmpl %eax, %esi;movl %eax, (%ebp);jbe  <PsChargeProcessNonPagedPoolQuota+>;movl (%ebp), %eax": 1,
                "jmp - <PsChargeProcessNonPagedPoolQuota+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "andl $, -(%ebp);pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;testb $, %al": 1,
                "cmpl $, %eax;je  <PsChargeProcessNonPagedPoolQuota+>;movl (%ebp), %edx;movl %edx, (%ecx,%eax,);movl (%ecx), %eax": 1,
                "movl (%ecx), %eax;movl (%ebp), %edx;movl %edx, (%ecx,%eax,);incl (%ecx);movl , %eax": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;popl %edi;popl %esi": 4,
                "nop;cmpl $, (%ebx);jne  <PsChargeProcessNonPagedPoolQuota+>;addl $, (%ebp);addl $, %edi": 1,
                "calll - <RtlClearBits+>;movl -(%ebp), %ecx;xorl %eax, %eax;cmpw %ax, (%ecx);je  <PsChargeProcessPagedPoolQuota+>": 1,
                "popl %ebx;leave;retl $;movl -(%ebp), %eax;decw (%eax)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;cmpl , %eax;je  <PsReturnProcessNonPagedPoolQuota+>": 1,
                "nop;nop;nop;nop;movl (%ecx), %eax": 13,
                "shll $, %ebx;subl %ebx, %edx;movl (%ebp), %ebx;addl %ecx, %edx;cmpl (%ebx), %edx": 2,
                "subl %eax, %edx;leal (%ecx,%edx,), %eax;movl (%ebp), %ecx;movl %ebx, %edx;movl %eax, (%ebp)": 2,
                "movl (%eax), %eax;leal (%eax,%ecx,), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl -(%ebp);pushl (%ebp)": 3,
                "movl (%ebp), %ebx;movl %ebx, %edx;negl %edx;movl %edx, (%ebp);movl (%ebp), %eax": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);testb $, (%edi);jne  <_snwprintf+>;subl %ebx, (%edi)": 1,
                "testb $, (%edi);jne  <_snwprintf+>;subl %ebx, (%edi);leal (%edi), %ebx;cmpl (%ebx), %esi": 1,
                "decl (%edi);testb $, (%esi);jne - <KeAttachProcess+>;addl $, %edi;cmpl %esi, (%edi)": 1,
                "jne  <ExInitializeZone+>;movl -(%ebp), %eax;addl $, %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "addl $, %eax;xorl %ecx, %ecx;movw (%eax), %cx;movzwl %cx, %ebx;andl , %ebx": 1,
                "movl , %ecx;leal (%ebx,%ebx,), %eax;cmpl $-, (%ecx,%eax,);je  <RtlNtStatusToDosErrorNoTeb+>;movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;calll - <PsIsThreadTerminating+>;movl %eax, %edi;testl %edi, %edi;je  <RtlNtStatusToDosErrorNoTeb+>": 1,
                "movl -(%ebp), %ebx;incl (%ebx);incl ;pushl $;leal (%edi,%edi,), %eax": 1,
                "incl (%ebx);incl ;pushl $;leal (%edi,%edi,), %eax;pushl %esi": 1,
                "leal (%ecx,%eax,), %eax;pushl %edi;movl %eax, (%ebp);calll - <PsIsThreadTerminating+>;movb (%ebp), %cl": 1,
                "testb $, %bh;jne  <MmUnlockPages+>;testw $, %bx;je  <IoSetFileOrigin+>;movl %ebx, %eax": 1,
                "pushl %esi;pushl (%ebp);pushl (%ebp);calll - <KeSetKernelStackSwapEnable+>;cmpl $, -(%ebp)": 1,
                "je  <FsRtlGetNextFileLock+>;movl , %edi;movl $, %esi;cmpb $, (%esi);je  <KeIsAttachedProcess+>": 1,
                "je  <FsRtlGetNextFileLock+>;andl $, ;movl $, %ecx;calll - <ExReleaseResourceLite>;movb -(%ebp), %cl": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp)": 21,
                "cmpl %ecx, %eax;jne - <PsReturnProcessNonPagedPoolQuota+>;testb $, %bh;jne  <KeConnectInterrupt+>;testb %bl, %bl": 1,
                "movl (%edi), %ebx;cmpl , %ebx;je  <RtlFindClearBitsAndSet+>;testb $, %bl;je  <RtlFindClearBitsAndSet+>": 1,
                "je  <RtlFindClearBitsAndSet+>;movl , %ecx;shrl $, %eax;movl %eax, -(%ebp);leal (%eax,%eax,), %eax": 1,
                "leal -(%ebp), %ecx;movl %ecx, -(%ebp,%eax,);movl -(%ebp), %ecx;movl %edi, %eax;shll $, %eax": 1,
                "cmpl $, -(%ebp);popl %edi;popl %ebx;jne  <RtlFindClearBitsAndSet+>;cmpl $, (%ebp)": 1,
                "je  <InbvNotifyDisplayOwnershipLost+>;movl %esi, ;movl $, %ecx;calll - <ExReleaseResourceLite>;movb -(%ebp), %cl": 1,
                "retl $;movb %bl, %cl;movl %ebx, -(%ebp);calll *;cmpl %ebx, (%ebp)": 1,
                "jb - <KeSetKernelStackSwapEnable+>;cmpl , %ecx;jae  <KeGetRecommendedSharedDataAlignment+>;decl ;jmp - <KeSetKernelStackSwapEnable+>": 1,
                "jne  <IoSetFileOrigin+>;movl (%ebp), %eax;movl %eax, (%edi);jmp - <RtlFindClearBitsAndSet+>;nop": 1,
                "movl , %ecx;shrl $, %eax;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %edi;testb $, (%edi)": 1,
                "movl %eax, (%ecx);jmp - <RtlFindClearBitsAndSet+>;calll - <wcscmp+>;jmp - <RtlFindClearBitsAndSet+>;movl , %eax": 1,
                "movl , %eax;movl %eax, (%esi);jmp - <RtlFindClearBitsAndSet+>;testb $, %ah;jne  <IoSetFileOrigin+>": 1,
                "movl (%edx), %edi;cmpl (%edi), %ecx;movl %edi, %ecx;je  <RtlFindClearBitsAndSet+>;movl %eax, (%ecx)": 1,
                "movl %esi, (%edx);jmp - <PsReturnProcessNonPagedPoolQuota+>;cmpl %edi, (%edx);je  <RtlFindClearBitsAndSet+>;movl (%edx), %edx": 1,
                "andl %ecx, %edx;leal -(%edi), %eax;shll $, %eax;orl %edx, %eax;movl %eax, (%esi)": 2,
                "movl (%ebp), %ecx;leal (%esi,%edi,), %eax;shll $, %ecx;orl %ecx, %edx;popl %edi": 2,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movw (%edx), %ax;movw %ax, (%ecx);incl %ecx": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);addl %eax, -(%ebp);cmpl %edi, -(%ebp);jbe - <PsReturnProcessNonPagedPoolQuota+>": 1,
                "calll *-(%edx);decl %ecx;addb %ch, -(%eax);decl %ecx;addb %bh, %bh": 1,
                "movw %cs, (%ecx);xorl $, %eax;incl %edx;leal (%ecx), %ecx;aad $-": 1,
                "leal (%ecx), %ecx;aad $-;decl %ecx;addb %bh, %bh;jmpl *%edx": 1,
                "cmpl $, %eax;movl (%ecx), %ecx;orb %cl, -(%esi);decl %ecx;addb %bh, %bh": 1,
                "salc;popl %es;enter $, $;enter $, $-;pushl %ecx": 1,
                "addb %bh, %bh;pushl (%eax);subl %edx, (%edx);incl %esi;subl %edx, (%edx)": 1,
                "subl (%edx), %edx;ldsl (%ebx), %ebp;pushl %edx;addb %bh, %bh;subb (%edx), %dl": 1,
                "addb %bh, %bh;lcalll *(%ecx);jnp  <FsRtlInitializeFileLock+>;addb %ch, (%edi);jnp  <FsRtlInitializeFileLock+>": 1,
                "jp  <FsRtlInitializeFileLock+>;addb %bh, %bh;calll *%ecx;jnp  <FsRtlInitializeFileLock+>;addb %ah, %bh": 1,
                "pushl (%ebp);decl %ecx;addb %cl, -(%ebx);ljmpl *-(%ebx);jl  <FsRtlInitializeFileLock+>": 1,
                "lcalll *(%eax);decl %ecx;addb %ch, (%esi);decl %ecx;addb %bh, %bh": 1,
                "decl %ecx;addb %ch, (%esi);decl %ecx;addb %bh, %bh;pushl %ebp": 1,
                "addb %dh, (%edi,%edi,);addb %bh, %bh;lcalll *-(%edi);orl $, (%ecx);incl %ebx": 1,
                "rcrb -(%eax);pushl %edx;addb %bh, %bh;cwtl;pushl %edx": 1,
                "pushl %ebx;addb %al, -(%edi);nop;nop;nop": 1,
                "pushw %bx;addb %dl, -(%eax);jmpl *-(%edi);decl %edx;pushl %ebx": 1,
                "incl %ecx;pushl %ebx;addb %bh, %bh;incl (%edx,%eax,);pushl %ebx": 1,
                "incl (%edx,%eax,);pushl %ebx;addb %al, (%ebx);addb %al, (%eax);addb %ch, (%edx)": 1,
                "movl (%ebx), %ecx;movl %ecx, %edx;movl $, %eax;andl %eax, %edx;cmpl %eax, %edx": 2,
                "movl (%ebx), %eax;cmpl %esi, %eax;jne  <FsRtlInitializeFileLock+>;cmpl %esi, %edi;je  <FsRtlInitializeFileLock+>": 1,
                "pushl %eax;calll - <KeSetEvent>;movl (%ebx), %eax;movl %eax, (%edi);testb $-, (%ebx)": 1,
                "cmpb $, -(%ebp);jne  <FsRtlInitializeFileLock+>;movl %edi, %ecx;calll - <ObfDereferenceObject>;calll - <_CIsqrt+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl -(%ebp), %edi": 1,
                "movl %edx, -(%ebp);jne  <PsGetProcessJob+>;movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, (%eax)": 1,
                "calll - <KeInsertQueueApc>;jmp - <IofCompleteRequest+>;cmpb (%esi), %cl;jg - <IofCompleteRequest+>;orb $, (%eax)": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;pushl %eax": 1,
                "pushl %ebx;pushl $;pushl $;pushl %eax;pushl (%esi)": 1,
                "pushl %edi;calll - <KeInitializeApc>;movsbl -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 2,
                "pushl %edi;movl (%edx), %edi;movl %edi, (%ebp);ja  <KeGetRecommendedSharedDataAlignment+>;movl %eax, %ecx": 1,
                "shrl $, %ecx;movw %ax, (%edx);rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx;andl $, %ecx": 1,
                "cmpw (%edx), %cx;popl %edi;popl %esi;popl %ebx;jae  <RtlCopyUnicodeString+>": 1,
                "movl (%ebp), %ecx;shrl %eax;andw $, (%ecx,%eax,);popl %ebp;retl $": 1,
                "movl (%edx), %ecx;testb $, (%ecx);jne  <_wcsupr+>;movl (%edx), %ebx;testb %bl, %bl": 1,
                "pushl %ecx;addb %dl, (%ecx,%edx);pushl %ecx;addb %bh, %bh;jmpl *": 1,
                "addb %bh, %bh;jmpl *;adcb (%ecx), %dl;nop;nop": 1,
                "pushl %eax;addb %al, %dh;fistl (%eax);jo - <RtlCopyUnicodeString+>;pushl %eax": 1,
                "addb %dh, (%esp,%ebx,);addb %bh, %bh;decl (%eax);fcoml (%eax);sbbl %esp, %ebx": 1,
                "incl %edx;adcb %al, (%edi);je - <KeInitializeEvent+>;pushl -(%ebp);pushl (%ebp)": 1,
                "jmp - <KeInitializeEvent+>;nop;nop;nop;nop": 1,
                "testb $, (%ecx);je  <PoStartNextPowerIrp+>;movl %ecx, %edi;testb $, (%edi);jne  <IoSetFileOrigin+>": 1,
                "addb %bh, %bh;notb (%eax);decl %ebx;notb (%eax);leave": 1,
                "addb %bh, %bl;ficoms (%eax);testb $, (%esi);jne  <RtlCopyUnicodeString+>;movl (%esi), %eax": 1,
                "addb %bh, %bh;jmpl *-(%edi);addl $, %eax;testb %al, (%esi);pushl %ecx": 1,
                "movl -, %esi;movl %esi, (%eax);cmpl -, %ecx;popl %esi;jne  <IoSetFileOrigin+>": 1,
                "andl $, %esi;shrl $, %edi;addl %edi, %esi;jmp - <RtlCopyUnicodeString+>;incl (%edi)": 1,
                "movl %edx, -(%ebp);jmp - <IoFreeIrp+>;nop;nop;nop": 1,
                "movl (%ebp), %edi;xorl %ebx, %ebx;cmpl %ebx, %edi;jne  <IoSetFileOrigin+>;pushl %ebx": 1,
                "calll *(%ecx);jmp  <IoFreeMdl+>;incl (%esi);movl (%ebp), %eax;movl (%eax), %esi": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;incl (%esi);movl %esi, %ecx;calll - <InterlockedPopEntrySList>": 1,
                "pushl %edi;leal (%esi), %eax;incl (%eax);movl (%eax), %eax;pushl $": 1,
                "incl (%eax);movl (%eax), %eax;pushl $;xorl %edx, %edx;popl %edi": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 5,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;leal (%ebx), %edi;movl (%edi), %esi": 2,
                "pushl %esi;pushl %edi;leal (%ebx), %edi;movl (%edi), %esi;andl $, %eax": 1,
                "je  <MmGrowKernelStack+>;cmpw $, (%edi);jne  <FsRtlUninitializeFileLock+>;incl (%ebx);incw (%edi)": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %esi;andl $-, %esi;leal -(%esi), %eax;movl %ebx, -(%ebp)": 2,
                "movl %eax, (%ecx);sti;popl %ebp;retl $;nop": 1,
                "pushl %ebx;pushl %edi;movl (%ebp), %edi;shrl $, %edi;movl $, %edx": 1,
                "movl %edi, -(%ebp);je  <IoGetBaseFileSystemDeviceObject+>;movb $, %al;popl %edi;popl %ebx": 1,
                "cmpl $, %ebx;movl %edi, (%eax);movl %edi, (%eax);je  <KeQueryTickCount+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);calll *;movb %al, %cl;movl (%ebp), %eax;movl (%eax), %esi": 1,
                "jne  <_snwprintf+>;testl %esi, %esi;jne  <CcFlushCache+>;movl (%ebp), %edi;pushl $": 1,
                "movl (%edi), %eax;testl %eax, %eax;jl  <IoSetFileOrigin+>;xorl %edi, %edi;cmpl %edi, %esi": 1,
                "cmpl %edi, -(%ebp);jne  <IoSynchronousPageWrite+>;calll *;decl (%esi);movb %al, %bl": 1,
                "movl $, (%esi);movl %eax, -(%ebp);movl $, -(%ebp);jmp - <CcFlushCache+>;cmpl %edi, -(%ebp)": 1,
                "testb $, (%esi);je  <IoSetFileOrigin+>;testb $, %bl;je  <MmSetAddressRangeModified+>;xorl $, %ebx": 1,
                "jmp  <IoSetFileOrigin+>;cmpl %edi, -(%ebp);je  <MmMapLockedPagesSpecifyCache+>;cmpl %edi, %ebx;jne  <MmMapLockedPagesSpecifyCache+>": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 15,
                "cmpl %edi, (%eax);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);popl %edi": 3,
                "andl $, (%esi);movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <IoGetBaseFileSystemDeviceObject+>;movzbl (%ebp), %edx;subl $, %edx;je  <MmMapLockedPagesSpecifyCache+>": 1,
                "decl %edx;je  <MmMapLockedPagesSpecifyCache+>;decl %edx;je  <ExLocalTimeToSystemTime+>;decl %edx": 1,
                "testl %eax, %eax;jne  <IoSetFileOrigin+>;popl %esi;popl %ebp;retl $": 2,
                "leave;retl $;movl %edi, %eax;shrl $, %eax;andl %edx, %eax": 1,
                "shrl $, %eax;pushl %esi;movl , %esi;leal (%eax,%eax,), %eax;leal (%esi,%eax,), %eax": 1,
                "andl $, %eax;addl , %eax;andl $, %ecx;leal (%eax,%ecx,), %ecx;movl %ecx, %esi": 1,
                "movl , %eax;cmpl $, %eax;jb  <IoSetFileOrigin+>;movl %esi, %ecx;calll - <KeResetEvent+>": 1,
                "jb  <IoGetBaseFileSystemDeviceObject+>;cmpl , %eax;jbe  <FsRtlResetLargeMcb+>;andl $, (%ebp);movb $, %cl": 1,
                "andl $, %ecx;xorl %edi, %ecx;movl $, %ebx;movl %ecx, (%eax);movl (%esi), %edi": 1,
                "pushl %ebx;calll - <PsIsThreadTerminating+>;testl %eax, %eax;movl %eax, -(%ebp);je  <IoSetFileOrigin+>": 2,
                "movb -(%ebp), %cl;calll *;testl $, %edi;je  <IoGetBaseFileSystemDeviceObject+>;cmpl $, -(%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $": 26,
                "testb %al, %al;jne  <ExAcquireSharedStarveExclusive+>;jmp  <ExAcquireSharedStarveExclusive+>;nop;nop": 1,
                "cmpl -(%ebp), %eax;jae  <KeQueryTickCount+>;subl %eax, -(%ebp);orl $, (%esi);incl (%esi)": 1,
                "movb -(%ebp), %cl;calll *;movl %ds:, %eax;movl %eax, -(%ebp);movl (%eax), %edi": 1,
                "xorl %ebx, %ebx;movl %edi, -(%ebp);movl %ebx, -(%ebp);calll *(%eax);testb %al, %al": 1,
                "movl %ebx, -(%ebp);jne  <KeQueryTickCount+>;leal -(%ebp), %ecx;calll *;movl , %edi": 1,
                "calll *%edi;cmpl $, (%esi);movb %al, -(%ebp);jne  <FsRtlResetLargeMcb+>;cmpl $, (%esi)": 1,
                "cmpl %edi, %ebx;je  <MmUnlockPages+>;jmp  <IoSetFileOrigin+>;cmpl $, -(%ebp);jae  <MmMapLockedPagesSpecifyCache+>": 1,
                "je - <KeQueryTickCount+>;cmpl %edx, (%esi);je - <KeQueryTickCount+>;pushl $;pushl %edx": 1,
                "je - <KeQueryTickCount+>;pushl $;pushl %edx;pushl $;pushl %eax": 1,
                "cmpl %esi, -(%ebp);je  <FsRtlResetLargeMcb+>;movl , %eax;movl %eax, -(%ebp);movl , %ecx": 1,
                "movl , %ecx;movl %ecx, -(%ebp);movl %eax, (%ecx);movl %ecx, (%eax);movl -(%ebp), %eax": 1,
                "movl %edi, (%ecx);movl %edi, (%eax);movl %edx, -(%ebp);movb $, -(%ebp);jmp - <KeQueryTickCount+>": 1,
                "movl %edx, (%eax);jmp  <MmSetAddressRangeModified+>;cmpl $, %ecx;je - <KeQueryTickCount+>;jmp - <KeQueryTickCount+>": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);sete %al;pushl %eax;leal (%edi), %eax": 1,
                "jmp - <KeQueryTickCount+>;nop;nop;nop;nop": 2,
                "movl -(%ebp), %ecx;cmpl %ebx, %edi;je  <FsRtlLookupLargeMcbEntry+>;movl (%esi), %eax;leal (%eax,%ecx,), %edx": 1,
                "addb %dl, -(%eax);movl -(%ebp), %eax;movl (%eax), %ecx;calll *;retl": 3,
                "andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 9,
                "subl %edx, %eax;sarl %eax;je  <FsRtlLookupLargeMcbEntry+>;movl (%esi), %edx;movl (%ebp), %ebx": 1,
                "cmpl %edx, (%ebp);jbe  <FsRtlLookupLargeMcbEntry+>;incl %eax;movl %eax, -(%ebp);cmpl %ecx, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movb $, %al;jmp - <FsRtlLookupLargeMcbEntry+>;movl -(%edx), %edx": 1,
                "movl %eax, -(%ebp);xorl %eax, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl %esi, %ecx": 1,
                "movb (%eax), %al;movb %al, (%edx);leal (%edx), %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "leal (%edx,%eax,), %eax;movl %eax, (%edx);movb (%ebp), %al;popl %edi;movb %al, (%edx)": 1,
                "pushl %edi;movl %fs:, %eax;cli;movl (%ebp), %ecx;cmpl %eax, (%ecx)": 1,
                "movl (%ebp), %ecx;cmpl %eax, (%ecx);je  <FsRtlLookupPerStreamContextInternal+>;cmpl %eax, (%ecx);je  <ExIsResourceAcquiredSharedLite+>": 1,
                "movl (%ecx), %edi;jmp - <ExIsResourceAcquiredSharedLite+>;nop;nop;nop": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testb $, (%esi)": 11,
                "subl $, %esp;movl (%ebp), %eax;testl %eax, %eax;js  <IoSetFileOrigin+>;andl $, -(%ebp)": 1,
                "testl %eax, %eax;js  <IoSetFileOrigin+>;andl $, -(%ebp);pushl %ebx;pushl %edi": 1,
                "testl %eax, %eax;popl %esi;je  <IoSetFileOrigin+>;leal (,%ebx,), %ecx;movw %cx, (%eax)": 1,
                "movl %ecx, (%eax);movw -(%ebp), %cx;xorl %edx, %edx;movw %cx, (%eax);movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 3,
                "subl (%ecx), %edi;subl (%ecx), %edi;testl %esi, %esi;je  <RtlFindNextForwardRunClear+>;movl (%ecx), %edx": 1,
                "testl %esi, %esi;je  <RtlFindNextForwardRunClear+>;movl (%ecx), %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "movl (%ebp), %edx;andl $, %edx;leal (%edx,%esi), %esi;movl %edx, (%eax);movswl (%eax), %edx": 1,
                "andl $, %edx;leal (%edx,%esi), %esi;movl %edx, (%eax);movswl (%eax), %edx;subl $, %edx": 1,
                "shrl $, %esi;shrl $, %edx;cmpl %esi, %edx;jb  <IoSetFileOrigin+>;andw $, (%eax)": 1,
                "jb  <IoSetFileOrigin+>;andw $, (%eax);pushl %ebx;xorl %ebx, %ebx;movw (%ecx), %bx": 1,
                "andw $, (%eax);pushl %ebx;xorl %ebx, %ebx;movw (%ecx), %bx;xorl %edx, %edx": 1,
                "andl $, %ebx;orl %edx, %ebx;orl $, %ebx;movw %bx, -(%eax);movl (%ecx), %edx": 1,
                "movl (%ebp), %edx;leal (%ecx,%edx,), %ecx;popl %ebx;jbe  <IoBuildPartialMdl+>;subl %ecx, %eax": 1,
                "jne - <IoBuildPartialMdl+>;popl %edi;popl %esi;popl %ebp;retl $": 1,
                "movl %eax, %ecx;movl (%eax), %eax;incl %edx;movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %edi, -(%ebp);calll - <ExfInterlockedCompareExchange>;movb $, %al;popl %ebx;popl %edi": 1,
                "xorb %al, %al;jmp - <IoBuildPartialMdl+>;nop;nop;nop": 1,
                "jmp - <IoBuildPartialMdl+>;nop;nop;nop;nop": 1,
                "leal (%esi), %edi;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl (%edi), %ecx": 1,
                "movl %ecx, -(%ebp);movl (%edi), %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %edx": 1,
                "movl %edx, (%eax);movl (%ecx), %edx;movl %edx, (%eax);movl -(%ebp), %eax;incl %eax": 1,
                "cmpl -(%ebp), %eax;jne - <IoBuildPartialMdl+>;cmpl -(%ebp), %edx;jne - <IoBuildPartialMdl+>;movl (%ebp), %edx": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;addl (%esi), %eax;movl (%esi), %ecx;shrl $, %ebx": 1,
                "andl $, %ebx;leal (%eax,%ecx), %edi;shrl $, %edi;subl $, %ebx;testb $, (%esi)": 1,
                "jne  <IoSetFileOrigin+>;pushl $;pushl %edi;pushl %ebx;calll ": 1,
                "retl $;pushl (%ebp);pushl %ebx;calll  <MmAdjustWorkingSetSize+>;jmp - <MmUnmapLockedPages+>": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;addl (%ebx), %eax;cmpb $, (%ebp);pushl %esi": 1,
                "cmpb $, (%ebp);pushl %esi;pushl %edi;jne  <IoSetFileOrigin+>;leal (%ebx), %ecx": 1,
                "pushl %esi;pushl %edi;jne  <IoSetFileOrigin+>;leal (%ebx), %ecx;movl %ecx, %esi": 1,
                "pushl %edi;calll ;testl %eax, %eax;movl %eax, (%ebp);je  <IoSetFileOrigin+>": 1,
                "jne  <IoSetFileOrigin+>;movl (%ebp), %eax;movl (%eax), %eax;cmpl $-, %eax;je  <MmMapLockedPagesSpecifyCache+>": 1,
                "movl %esi, (%eax);movl -(%ebp), %edi;addl $, (%ebp);movl (%ebp), %eax;addl $, (%ebp)": 1,
                "je  <PoSetSystemState+>;incl (%eax);cmpl $, (%eax);jne - <RtlDelete+>;orl $, (%eax)": 1,
                "incl (%eax);cmpl $, (%eax);jne - <RtlDelete+>;orl $, (%eax);xorl %eax, %eax": 1,
                "je - <RtlDelete+>;movl %ebx, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "incl (%esi);movl %eax, -(%ebp);calll *;movl %fs:, %eax;testb $, (%ebp)": 1,
                "movb %al, -(%ebp);calll - <IoGetAttachedDevice+>;pushl %edi;pushl %edi;calll - <IoGetAttachedDevice+>": 1,
                "testb $, %al;jne  <IoSynchronousPageWrite+>;cmpl %ebx, -(%ebp);je  <MmMapLockedPagesSpecifyCache+>;movl %ecx, -(%ebp)": 1,
                "notb %cl;leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl %eax, -(%ebp);andl $, %ecx;movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl (%eax), %eax;movl %ecx, -(%ebp);movl (%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);calll *": 1,
                "movl (%ebp), %eax;cmpl %ebx, (%esi);movl %eax, -(%ebp);je  <IoSetFileOrigin+>;incl (%esi)": 1,
                "addl $, (%ebp);cmpl %ebx, -(%ebp);jne  <MmMapLockedPagesSpecifyCache+>;movl (%ebp), %eax;cmpl -(%ebp), %eax": 1,
                "addl -(%ebp), %ecx;adcl -(%ebp), %esi;cmpl %edx, %esi;jb  <MmMapLockedPagesSpecifyCache+>;ja  <RtlFindNextForwardRunClear+>": 1,
                "movl (%ebp), %esi;movl %ebx, (%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 24,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeWaitForSingleObject>;testb $, (%edi);jne  <MmSetAddressRangeModified+>": 1,
                "calll - <KeWaitForSingleObject>;testb $, (%edi);jne  <MmSetAddressRangeModified+>;movl (%esi), %eax;cmpl $, %eax": 1,
                "movl %eax, -(%ebp);calll *;movl (%ebp), %ecx;testw $, %cx;movb %al, (%ebp)": 1,
                "je  <MmMapLockedPagesSpecifyCache+>;cmpl (%ebp), %esi;jne  <MmCanFileBeTruncated+>;movl -(%ebp), %ecx;decw (%ecx)": 1,
                "movl (%ecx), %eax;testl $, %eax;movw (%ecx), %dx;jne  <RtlFindNextForwardRunClear+>;movb (%ebp), %cl": 1,
                "cmpl $, (%eax);jb  <MmMapLockedPagesSpecifyCache+>;movl (%eax), %edx;testl %edx, %edx;jne  <IoSetFileOrigin+>": 2,
                "movl (%eax), %eax;jmp - <IoGetBaseFileSystemDeviceObject+>;cmpl $, (%eax);jb  <MmMapLockedPagesSpecifyCache+>;movl (%eax), %edx": 1,
                "je  <MmUnlockPages+>;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %ecx;jmp  <IoSynchronousPageWrite+>;movl %ebx, %eax;negl %eax;sbbl %eax, %eax": 1,
                "pushl $;pushl $;calll - <_CIsqrt+>;xorl %esi, %esi;movl %esi, -(%ebp)": 36,
                "testl %ecx, %ecx;jne  <KeAreApcsDisabled+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;testl %eax, (%ecx)": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);leal (%ebx), %eax;cmpl %eax, (%eax);jne  <MmMapLockedPagesSpecifyCache+>": 1,
                "jne  <MmMapLockedPagesSpecifyCache+>;movl (%ecx), %eax;movl %eax, (%ebx);leal -(%ebp), %ecx;calll *": 1,
                "shldl $, %eax, %edx;shll $, %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx)": 1,
                "shll $, %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl (%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax": 5,
                "pushl %edi;calll - <IoGetRelatedDeviceObject>;movl %eax, %ebx;movb (%ebx), %al;movb %al, (%ebp)": 2,
                "movl (%ebp), %eax;movl (%eax), %esi;movl %esi, (%ecx);movl (%eax), %eax;movl %eax, (%ecx)": 3,
                "movl %esi, (%ecx);movl (%eax), %eax;movl %eax, (%ecx);movl %edi, (%ecx);movl %ebx, %ecx": 1,
                "cmpl %ebx, -(%ebp);je  <IoSynchronousPageWrite+>;movl (%ebp), %eax;addl $, (%edi);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %eax, -(%ebp);movl (%edi), %eax;shll $, %edx;cmpl %edx, %eax": 1,
                "cmpl %edx, %eax;je - <PsGetThreadTeb+>;cmpl %ebx, -(%ebp);je  <FsRtlGetNextLargeMcbEntry+>;cmpw %cx, (%esi)": 1,
                "cmpw %cx, (%esi);jne  <IoSynchronousPageWrite+>;cmpl %ebx, (%esi);je  <IoSynchronousPageWrite+>;incl ": 1,
                "movl (%ebp), %eax;xorl %ecx, %ecx;movl %eax, -(%ebp);incl %ecx;jmp - <IoSynchronousPageWrite+>": 1,
                "movl (%edi), %eax;movl (%edi), %edx;movb $, %cl;calll - <_allshr>;movl %eax, (%ebp)": 1,
                "shrl $, %esi;addl (%ebp), %esi;movl %ebx, %edi;cmpl %eax, %esi;jb - <MmMapLockedPagesSpecifyCache+>": 1,
                "subl %eax, %esi;movl (%edi), %eax;testl %eax, %eax;je - <MmMapLockedPagesSpecifyCache+>;movl %eax, %edi": 1,
                "jae  <IoSynchronousPageWrite+>;movl -(%ebp), %eax;movl (%eax), %eax;movl , %ecx;leal (%eax,%eax,), %eax": 1,
                "cmpw $, %dx;jne  <FsRtlGetNextLargeMcbEntry+>;cmpl $, (%eax);jb  <IoSynchronousPageWrite+>;decl ": 1,
                "pushl %esi;movl %ecx, %esi;cmpw $, (%esi);jne  <IoSynchronousPageWrite+>;leal (%esi), %eax": 1,
                "cmpl %eax, -(%ebp);je - <MmMapLockedPagesSpecifyCache+>;cmpl %eax, -(%ebp);jne - <MmMapLockedPagesSpecifyCache+>;leal -(%ebp), %edx": 1,
                "cmpl %eax, -(%ebp);jne - <MmMapLockedPagesSpecifyCache+>;leal -(%ebp), %edx;pushl %edx;leal (%ebp), %edx": 1,
                "pushl %esi;calll - <MmMapLockedPagesSpecifyCache+>;testb %al, %al;je - <CcFlushCache+>;movl (%ebp), %ebx": 1,
                "je - <KeSetKernelStackSwapEnable+>;movl (%ebp), %ecx;addl -(%ebp), %ecx;pushl $;popl %eax": 1,
                "addl $, %eax;shrl $, %eax;addl %eax, ;xorb %al, %al;movl (%ebp), %edi": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;jg  <PoRegisterSystemState+>;jl  <IoSynchronousPageWrite+>;movl -(%ebp), %eax": 1,
                "jmp - <CcFlushCache+>;cmpl $, ;je - <CcFlushCache+>;calll  <KeAreApcsDisabled+>;jmp - <CcFlushCache+>": 1,
                "leal (%ebx), %eax;xorl %esi, %esi;movl %eax, (%ebp);movl %eax, (%ebp);movl $, %eax": 1,
                "movl %eax, (%ebp);movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;movl $, %edx": 1,
                "cmpl $, (%ebx);ja  <MmSetAddressRangeModified+>;movl (%ebp), %eax;movl (%ebx), %ecx;shrl $, %eax": 1,
                "movl (%ecx), %eax;incw (%eax);movl (%ecx), %eax;addl $, %eax;movl (%eax), %edx": 1,
                "movl (%ebp), %edi;movl %edi, (%ebp);movl $, %eax;movl (%ebp), %ecx;movl $, %edx": 1,
                "movl $, %ecx;shrl $, %edi;movl %eax, -(%ebp);movl $, %eax;andl %ecx, %esi": 1,
                "movl %eax, -(%ebp,%ecx,);addl $, (%ebp);addl $, %esi;cmpl %edi, %esi;jbe - <MmSetAddressRangeModified+>": 1,
                "je  <MmSetAddressRangeModified+>;cmpl $, %edi;je  <MmSetAddressRangeModified+>;cmpl $, %edi;jne  <MmSetAddressRangeModified+>": 1,
                "pushl %edi;pushl (%edi);calll - <MmUnmapLockedPages>;jmp - <MmMapLockedPagesSpecifyCache+>;testb $, (%esi)": 1,
                "pushl (%edi);calll - <MmUnmapLockedPages>;jmp - <MmMapLockedPagesSpecifyCache+>;testb $, (%esi);je - <IoSynchronousPageWrite+>": 1,
                "movl -(%ebp,%esi,), %edx;xorb %cl, %cl;calll - <KiDispatchInterrupt+>;incl %esi;cmpl %edi, %esi": 1,
                "jmp - <MmSetAddressRangeModified+>;cmpl %esi, %edi;jbe - <MmSetAddressRangeModified+>;jmp - <MmSetAddressRangeModified+>;leal (%ebx), %eax": 1,
                "jmp - <MmSetAddressRangeModified+>;leal (%ebx), %eax;movl (%eax), %ecx;orl (%eax), %ecx;je  <MmSetAddressRangeModified+>": 1,
                "leal (%ebx), %eax;cmpl %eax, %ecx;jne - <MmSetAddressRangeModified+>;cmpl $, -(%ebp);jne - <MmMapLockedPagesSpecifyCache+>": 1,
                "movl (%eax), %ecx;cmpl %esi, %ecx;jbe - <KeQueryTickCount+>;subl %esi, %ecx;movl %ecx, (%eax)": 1,
                "addl $, %eax;adcl $, %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);leal -(%ebp), %eax": 1,
                "movl (%edi), %edx;movl %edx, (%ecx);jmp  <MmSetAddressRangeModified+>;cmpl %edi, (%ebp);jne - <CcFlushCache+>": 1,
                "addl (%edx), %ecx;adcl (%edx), %eax;cmpl (%edi), %eax;jl - <MmSetAddressRangeModified+>;jg  <MmSetAddressRangeModified+>": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je - <MmSetAddressRangeModified+>": 1,
                "subl $, %edi;cmpw $, (%esi);jne  <MmSetAddressRangeModified+>;movl (%esi), %eax;movl (%esi), %ebx": 1,
                "jmp - <MmSetAddressRangeModified+>;movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movl (%ebp), %eax;movw (%eax), %cx;testb %cl, %cl;js  <IoSetFileOrigin+>;movl (%ebp), %edx": 1,
                "xorl %esi, %esi;leal (%eax), %ecx;incl %esi;cmpl %edx, (%ecx);jne  <IoSetFileOrigin+>": 1,
                "cmpw %bx, (%eax);jne  <ExReleaseResourceForThreadLite+>;xorl %edx, %edx;movw (%eax), %dx;cmpw %bx, %dx": 1,
                "jl - <CcFlushCache+>;jg  <ExReleaseResourceForThreadLite+>;cmpl %edi, %ecx;jbe - <CcFlushCache+>;movl (%edx), %eax": 1,
                "cmpl (%edi), %eax;jg - <MmSetAddressRangeModified+>;jl  <ExReleaseResourceForThreadLite+>;movl (%edx), %eax;cmpl (%edi), %eax": 1,
                "testl %edx, %edx;jne - <MmSetAddressRangeModified+>;jmp - <MmSetAddressRangeModified+>;nop;nop": 1,
                "cmpl (%ebp), %eax;jne  <CcGetDirtyPages+>;cmpl %ebx, (%edi);je  <CcGetDirtyPages+>;incl (%edi)": 1,
                "leal -(%ebp), %edx;calll *;movl (%edi), %esi;subl $, %esi;movl %esi, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%esi), %ebx;movl %ebx, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "pushl $;movb $, %dl;calll - <FsRtlUninitializeFileLock+>;andl $, -(%ebp);pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 60,
                "je - <IoGetBaseFileSystemDeviceObject+>;cmpl $, (%ebp);je - <IoGetBaseFileSystemDeviceObject+>;pushl %ebx;leal (%edi), %ecx": 1,
                "cmpl %ebx, (%esi);jne  <CcGetDirtyPages+>;cmpb %bl, (%esi);je - <MmSetAddressRangeModified+>;cmpl %ebx, (%esi)": 1,
                "cmpl %ebx, (%esi);je  <CcGetDirtyPages+>;movl (%esi), %ecx;calll - <FsRtlUninitializeFileLock+>;movl %ebx, (%esi)": 1,
                "jmp - <FsRtlUninitializeFileLock+>;leal (%esi), %eax;jmp  <CcGetDirtyPages+>;nop;nop": 1,
                "movl (%ebp), %eax;orb $, (%eax);sti;popl %ebp;retl $": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl (%esi), %ecx;pushl %edi": 3,
                "movl (%esi), %eax;movl (%esi), %ecx;pushl %edi;xorl %ebx, %ebx;addl $, %eax": 1,
                "popl %esi;movl %eax, (%ecx);movb -(%ebp), %al;popl %ebx;leave": 1,
                "popl %ebx;leave;retl $;movb $, -(%ebp);jmp - <ExDisableResourceBoostLite+>": 1,
                "jmp - <ExDisableResourceBoostLite+>;nop;nop;nop;nop": 4,
                "addl $, -(%ebp);movl -(%ebp), %ecx;incl -(%ebp);xorl %eax, %eax;incl %eax": 2,
                "incl %eax;xorl %edx, %edx;calll - <_allshl>;movl (%ebp), %ebx;cmpl %edx, %ebx": 1,
                "movl (%ebp), %eax;movl -(%ebp), %ecx;decl -(%ebp);movl %ebx, %edx;calll - <_allshr>": 1,
                "andl %edx, %ebx;cmpl $, -(%ebp);jne - <ExDisableResourceBoostLite+>;movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl (%ebp)": 41,
                "movl %eax, %ecx;movl (%ecx), %eax;orl (%ecx), %eax;popl %ebp;retl $": 1,
                "movl %esp, %ebp;xorl %eax, %eax;cmpl %eax, (%ebp);jne  <ExDisableResourceBoostLite+>;movl (%ebp), %eax": 1,
                "subl $, %ebx;cmpl $, -(%ebp);jne - <ExDisableResourceBoostLite+>;pushl -(%ebp);pushl %edi": 1,
                "calll - <ExDisableResourceBoostLite+>;testl %eax, %eax;je  <IoSetFileOrigin+>;popl %edi;popl %esi": 1,
                "popl %ebx;leave;retl $;cmpl %eax, (%esi);jbe - <ExDisableResourceBoostLite+>": 1,
                "jne  <FsRtlRemoveLargeMcbEntry+>;movl (%ebp), %eax;movl %ebx, (%eax);movl (%ebp), %edi;movl %ebx, (%edi)": 1,
                "movl %ebx, (%edi);movl (%ebp), %eax;andl $, %eax;movl %eax, -(%ebp);movl (%ebp), %ebx": 1,
                "je  <ExSetResourceOwnerPointer+>;testb $, (%esi);je  <RtlNumberOfSetBits+>;movl -(%ebp), %esi;cmpl $, (%esi)": 1,
                "retl $;nop;addb %al, (%eax);addb %al, (%eax);inl %dx, %eax": 1,
                "movl (%ebp), %ecx;leal (%eax,%ecx), %eax;shrl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "testl %eax, %eax;je - <ExAcquireSharedStarveExclusive+>;movb $, (%esi);leal -(%eax), %edi;pushl $": 1,
                "movl %ecx, -(%ebp);movl (%ebx), %edx;movl %edx, -(%ebp);movl -(%ebp), %eax;subl %ecx, %eax": 1,
                "andl %edx, %ecx;addl %ecx, %eax;movl %eax, -(%ebp);addl %ecx, -(%ebp);cmpb $, (%ebp)": 1,
                "je - <KeSetKernelStackSwapEnable+>;addl $, %eax;movl $, %ecx;andl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne - <ExAcquireSharedStarveExclusive+>;pushl (%edi);pushl $;pushl -(%ebp)": 1,
                "addl $, %ecx;leal -(%ebp), %edx;calll *;cmpl $, (%esi);jne  <ExSetResourceOwnerPointer+>": 1,
                "movl %eax, (%esi);andl $, -(%ebp);leal -(%ebp), %ecx;calll *;jmp - <ExAcquireSharedStarveExclusive+>": 1,
                "leal -(%ebp), %ecx;calll *;jmp - <ExAcquireSharedStarveExclusive+>;nop;nop": 1,
                "movl (%ebp), %ebx;pushl %edi;movl (%esi), %edi;addl $, (%ebp);leal (%edi), %ecx": 1,
                "jg  <CcSetDirtyPinnedData+>;jl  <RtlFindLastBackwardRunClear+>;movl (%ebx), %eax;cmpl %ecx, %eax;jb  <RtlFindLastBackwardRunClear+>": 1,
                "cmpl (%edi), %eax;jge  <RtlNumberOfSetBits+>;leal -(%ebp), %ecx;calll *;movl (%ebp), %eax": 1,
                "jb  <FsRtlInitializeLargeMcb+>;testl %eax, %eax;jns  <FsRtlResetLargeMcb+>;movl %eax, %ecx;shrl $, %ecx": 1,
                "leal (%edi,%edi,), %eax;cmpl $-, (%ecx,%eax,);je  <RtlNtStatusToDosErrorNoTeb+>;movl %edi, %ecx;calll - <PsIsThreadTerminating+>": 1,
                "andl $, (%esi);orl $, (%esi);calll - <IoAllocateIrp+>;movl %eax, %edi;movl (%esi), %eax": 1,
                "movl %eax, %edi;movl (%esi), %eax;shrl $, %eax;andl $, %eax;jmp - <IoGetBaseFileSystemDeviceObject+>": 1,
                "movl (%esi), %eax;shrl $, %eax;andl $, %eax;jmp - <IoGetBaseFileSystemDeviceObject+>;cmpl %esi, -(%ebp)": 1,
                "pushl (%ebp);pushl %eax;pushl -(%ebp);calll  <SeCreateClientSecurity+>;cmpl %esi, %eax": 1,
                "movl (%edi), %eax;jne  <MmCreateMdl+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %ebx, (%eax)": 1,
                "andl $, %eax;cmpb $, (%ebp);jne  <IoSetFileOrigin+>;pushl $;movl %eax, (%ebx)": 1,
                "andl $, %eax;jmp - <KeInitializeDpc+>;nop;nop;nop": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 12,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl $, -(%ebp)": 2,
                "decl -(%ebp);js  <IoSetFileOrigin+>;movl -(%ebp), %eax;movb $, (%eax);movl %esi, %eax": 2,
                "cmpl $, %eax;jge  <IoPageRead+>;cmpl $, %eax;jg  <_snwprintf+>;jne  <InbvEnableBootDriver+>": 1,
                "pushl $;pushl $;addl $, %eax;pushl %eax;calll - <KeSetEvent>": 6,
                "xchgl %edx, %eax;pushl %edx;addb %bh, %bh;ljmpl *(%edi);xchgl %edx, %eax": 1,
                "pushl %edx;addb %al, -(%edx);pushl %edx;addb %bh, %bh;lcalll *-(%edi)": 1,
                "movl $, %ebx;pushl %edx;addb %dl, -(%eax);pushl $;pushl $": 1,
                "cmpl %ebx, %esi;movl %esi, -(%ebp);je  <IoSetFileOrigin+>;leal (%esi), %eax;movb $, (%esi)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);movl (%ebp), %eax;addl $, %eax;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne  <IoSetFileOrigin+>": 1,
                "movw %dx, (%ecx);movw %ax, (%ecx);movw %bx, (%ecx);sti;pushl %ebx": 1,
                "pushl %eax;pushl %ebx;pushl (%ecx);calll - <KeReleaseSemaphore>;jmp - <ExReleaseResourceLite+>": 1,
                "jmp - <ExReleaseResourceLite+>;cmpw $, %dx;jne  <IoSetFileOrigin+>;subl %ecx, %eax;pushl $": 1,
                "cmpb $, ;je  <KeRestoreFloatingPointState+>;leal (%ebx), %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "movl %eax, (%edi);movb (%ebx), %al;movb %al, (%esi);movzbl (%esi), %eax;orl (%edi), %eax": 1,
                "cmpl %ecx, %eax;jne  <IoSetFileOrigin+>;sti;movb (%ebx), %al;testb $, %al": 1,
                "movb $, (%ebx);xorl %eax, %eax;popl %ebx;leave;retl $": 1,
                "movl %eax, %edx;movl (%edx), %eax;cmpl %esi, %eax;movl $, %edi;jne  <IoMakeAssociatedIrp+>": 1,
                "jne  <IoMakeAssociatedIrp+>;movl -(%ebp), %eax;fnstcw (%eax);cmpb $, ;je  <KeSaveFloatingPointState+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;stmxcsr (%eax);movl (%edx), %eax;andl $-, %eax": 1,
                "je  <KeSaveFloatingPointState+>;cmpb $, ;je  <KeSaveFloatingPointState+>;leal -(%ebp), %eax;movl %eax, (%ebp)": 1,
                "cmpb $, ;je  <KeSaveFloatingPointState+>;leal -(%ebp), %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "pushl %edi;movl %fs:, %eax;movl %eax, %esi;calll *;movb %al, (%esi)": 1,
                "orl %eax, ;calll - <KeDelayExecutionThread+>;xorl %ebx, %ebx;popl %edi;popl %esi": 1,
                "andl $, %edx;orl %edx, %ecx;orl $, %ecx;cmpl %ebx, %edi;movl -(%ebp), %edi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi": 12,
                "cmpl %ecx, (%esi);je - <PsGetCurrentProcess+>;incl (%esi);cmpl %ecx, (%esi);je  <KeSaveFloatingPointState+>": 1,
                "addl (%esi), %edx;shll $, %edx;cmpl $, %edx;ja - <RtlDelete+>;addl $, %edx": 1,
                "pushl -(%ebp);pushl %eax;pushl (%ebp);calll  <RtlGeneratedotName+>;movl %eax, -(%ebp)": 1,
                "jb - <IoGetBaseFileSystemDeviceObject+>;movl (%eax), %eax;jmp - <IoGetBaseFileSystemDeviceObject+>;nop;nop": 1,
                "popl %eax;outb %al, %dx;pushl %eax;addb %ch, -(%esi);pushl %eax": 1,
                "jne  <MmCommitSessionMappedView+>;cmpl %ebx, -(%ebp);je - <MmIsAddressValid+>;cmpl %ebx, -(%ebp);jne - <MmIsAddressValid+>": 1,
                "cmpl $, %esi;jb  <MmUnlockPages+>;andl $, -(%ebp);leal -(%esi), %eax;shrl $, %eax": 1,
                "cmpl -(%ebp), %eax;jae  <KeSaveFloatingPointState+>;testb %dl, %dl;je  <KeSaveFloatingPointState+>;movl -(%ebp), %ecx": 1,
                "jae  <KeSaveFloatingPointState+>;testb %dl, %dl;je  <KeSaveFloatingPointState+>;movl -(%ebp), %ecx;andl $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;andl $, -(%ebp);movb %dl, (%ebp);shll $, %ecx;incl -(%ebp)": 1,
                "pushal;notl (%eax);jb - <KeSaveFloatingPointState+>;pushl %eax;addb %bh, %bh": 1,
                "clc;pushl %eax;addb %bh, %bh;clc;pushl %eax": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);movl (%ebp), %ebx;movl (%ebp), %edx;jne  <KeSaveFloatingPointState+>": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%esi);jne  <IoSetFileOrigin+>;cmpl %ebx, (%ebp);je  <KeSaveFloatingPointState+>": 1,
                "movl %ebx, (%esi);jmp - <IofCompleteRequest+>;nop;jge - <KeSaveFloatingPointState+>;pushl %eax": 1,
                "addb %cl, (%esp,%eax,);pushl %eax;addb %dl, -(%eax);incl %ebp;pushl %ebx": 1,
                "outl %eax, %dx;orb $-, %al;addb $, %al;leal (%ecx,%eax,), %esi;movl (%esi), %ecx": 1,
                "calll *;cmpb $, (%esi);movb %al, -(%ebp);je  <KeUnstackDetachProcess+>;cmpb $, (%esi)": 1,
                "je  <IoSetFileOrigin+>;cmpl $, (%ebx);leal (%esi), %eax;pushl %eax;jne  <IoSetFileOrigin+>": 1,
                "je  <KeStackAttachProcess+>;calll *;cmpb $, (%esi);movb %al, (%ebp);jne  <IoSetFileOrigin+>": 1,
                "fidivs -(%edi);pushl %ecx;addb %dl, -(%eax);movl %edi, %edi;pushl %ebp": 1,
                "pushl %ecx;addb %bl, -(%ecx);pushl %ecx;addb %bh, %bh;ljmpl *-(%ebp)": 1,
                "addb %al, -(%eax);jmpl *%ebx;movb $, %dh;addb %dh, %dh;movb $, %dh": 1,
                "decl (%ebx);movl $, %eax;pushl %edx;addb %bh, %bh;movl $, %eax": 1,
                "pushl %edx;addb %bh, %bh;movl $, %eax;pushl %edx;addb %bh, %bh": 1,
                "addb %bh, %bh;movl $, %eax;pushl %edx;addb %bh, %bh;jmpl *%ecx": 1,
                "nop;movl $, %edi;jle  <PsGetProcessJob+>;addb %dl, -(%eax);incl -(%ebx)": 1,
                "addb %ch, %dl;movsb (%esi), %es:(%edi);pushl %edx;addb %bh, %bh;pushl (%ebx)": 1,
                "decl -(%ecx);movsb (%esi), %es:(%edi);pushl %edx;addb %dh, %dh;lesl (%edi,%ecx), %eax": 1,
                "testb $, %ah;je - <KeSetKernelStackSwapEnable+>;movl (%edx), %esi;testl %esi, %esi;je - <KeSetKernelStackSwapEnable+>": 1,
                "cmpl %ecx, (%esi,%edx,);je  <PsGetProcessJob+>;incl %edx;cmpl %edi, %edx;jae  <IoSetFileOrigin+>": 1,
                "je  <PsGetProcessJob+>;incl %edx;cmpl %edi, %edx;jae  <IoSetFileOrigin+>;cmpl %eax, %edx": 1,
                "leal (%eax,%ecx,), %esi;movl (%esi), %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx;leal (%eax,%ecx,), %ebx": 1,
                "movl %ecx, %esi;shrl $, %esi;andl $, %esi;subl $, %esi;movl %ecx, (%ebx)": 1,
                "pushl (%ebp);pushl %edi;pushl %ecx;calll - <FsRtlInitializeFileLock+>;jmp - <PsGetProcessJob+>": 2,
                "leal -(%edi), %edx;testl %edx, %edx;je - <PsIsThreadTerminating+>;movl (%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "je - <PsIsThreadTerminating+>;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx;shll $, %esi": 1,
                "addl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);cmpl -(%ebp), %eax;jbe - <MmMapLockedPagesSpecifyCache+>": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);cmpl -(%ebp), %eax;jbe - <MmMapLockedPagesSpecifyCache+>;jmp - <MmMapLockedPagesSpecifyCache+>": 1,
                "jmp  <IoSetFileOrigin+>;incl ;jmp - <wcscmp+>;pushl %edi;pushl %eax": 1,
                "jmp - <ExDeleteResourceLite+>;pushl %ebx;calll - <KiDispatchInterrupt+>;jmp - <KeInitializeDpc+>;movl (%edx), %edi": 1,
                "shrl $, %eax;andl $, %eax;addl , %eax;movl %ecx, %edx;andl $, %edx": 1,
                "jne  <IoSetFileOrigin+>;movl %eax, -(%ebp);cmpl $, (%ebx);je - <KeSetKernelStackSwapEnable+>;jmp  <IoSetFileOrigin+>": 1,
                "jmp  <IoSetFileOrigin+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);xorl %edi, %edi": 1,
                "pushl %edi;pushl (%ebp);movl %edi, -(%ebp);pushl %ebx;pushl (%ebp)": 1,
                "nop;movl %edi, %edi;pushl %ebx;pushl %esi;movl (%ecx), %esi": 1,
                "movl (%ecx), %esi;movl (%esi), %ebx;testl $, %ebx;leal (%esi), %eax;jne  <IoSetFileOrigin+>": 1,
                "je  <RtlFindNextForwardRunClear+>;movl (%ecx), %edi;cmpl %esi, %edi;jb  <RtlFindNextForwardRunClear+>;movl (%eax), %ebx": 1,
                "movl (%esi), %eax;cmpl $, %eax;jne - <PsGetProcessJob+>;movl %edi, %ecx;calll - <wcscmp+>": 1,
                "movl , %ebx;pushl %esi;xorl %esi, %esi;pushl %edi;movl %esi, -(%ebp)": 1,
                "testb $, (%edi);jne  <IoSetFileOrigin+>;incl (%edi);movb -(%ebp), %cl;incl (%edi)": 1,
                "ja  <MmCreateMdl+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx)": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;cmpl %eax, -(%ebp);movl %eax, -(%ebp);ja  <_snwprintf+>": 1,
                "cmpl %esi, %eax;jl  <IoSetFileOrigin+>;xorl %edi, %edi;incl %edi;pushl %edi": 1,
                "cmpl %esi, (%ebx);movl %eax, -(%ebp);je  <PsChargeProcessPagedPoolQuota+>;movl (%ebx), %eax;movl (%ebx), %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll  <FsRtlGetFileSize>;movl %eax, %edi": 1,
                "pushl -(%ebp);calll  <FsRtlGetFileSize>;movl %eax, %edi;cmpl %esi, %edi;jl  <IoSetFileOrigin+>": 1,
                "movl -(%ebp), %eax;orl -(%ebp), %eax;movl (%ebp), %edi;je  <IoSetFileOrigin+>;cmpl %esi, -(%ebp)": 1,
                "cmpl %esi, -(%ebp);je  <PsChargeProcessPagedPoolQuota+>;pushl %esi;calll - <IoSetTopLevelIrp>;pushl -(%ebp)": 1,
                "movl (%edi), %eax;movl (%edi), %ecx;movl %eax, %edx;orl %ecx, %edx;jne - <FsRtlInitializeFileLock+>": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);jmp - <MmCreateSection+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);jmp - <MmCreateSection+>;cmpl %esi, %ebx;jne  <CcSetReadAheadGranularity+>": 1,
                "jne  <CcSetReadAheadGranularity+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl ": 30,
                "leal (%ebp), %eax;pushl %eax;pushl -(%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);calll - <KeSaveFloatingPointState+>;leave;retl $": 1,
                "jne  <PsChargeProcessPagedPoolQuota+>;movl (%ebp), %ebx;movb %al, %cl;calll *;movl (%edi), %eax": 1,
                "movl (%ebp), %ebx;movb %al, %cl;calll *;movl (%edi), %eax;testb $, (%eax)": 1,
                "calll *;movl (%edi), %eax;testb $, (%eax);je  <RtlFindClearRuns+>;movl (%eax), %ecx": 1,
                "cmpb $, -(%ebp);jne  <PsChargeProcessPagedPoolQuota+>;popl %edi;popl %esi;popl %ebx": 1,
                "calll - <KeSaveFloatingPointState+>;jmp - <PsChargeProcessPagedPoolQuota+>;orb $, (%esi);jmp  <CcInitializeCacheMap+>;addl $, %esi": 1,
                "movl (%ebp), %ebx;addl %ecx, %edx;cmpl (%ebx), %edx;movl %edi, %ebx;ja  <KeAreApcsDisabled+>": 1,
                "calll - <PsReturnProcessPagedPoolQuota+>;testl %eax, %eax;je  <KeAreApcsDisabled+>;movl (%eax), %ecx;movl (%eax), %eax": 1,
                "subl $, %esi;calll *;movb %al, -(%ebp);andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "testl %eax, %eax;jne - <PsChargeProcessPagedPoolQuota+>;movl $, -(%ebp);jmp - <PsChargeProcessPagedPoolQuota+>;cmpl -(%ebp), %edx": 1,
                "incl (%eax);incl %edx;jmp - <PsChargeProcessPagedPoolQuota+>;incl -(%ebp);jmp - <RtlFindClearBits+>": 1,
                "calll - <PsChargeProcessNonPagedPoolQuota+>;jmp - <PsChargeProcessNonPagedPoolQuota+>;testl %eax, %eax;jne  <PsChargeProcessPagedPoolQuota+>;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jne - <KeSetKernelStackSwapEnable+>;jmp - <KeSetKernelStackSwapEnable+>;nop;nop": 1,
                "calll *;movb %al, %cl;movl , %eax;subl , %eax;movb %cl, (%ebp)": 3,
                "testl %eax, %eax;jne  <IoSetFileOrigin+>;xorl %eax, %eax;popl %ebx;popl %edi": 1,
                "movl %ecx, (%esi);subl $, %esi;jmp - <MmGrowKernelStack+>;nop;nop": 1,
                "subl $, %esi;jmp - <MmGrowKernelStack+>;nop;nop;nop": 1,
                "movl %edi, (%edx);movl %edi, (%esi);movl , %eax;incl %eax;je  <MmGrowKernelStack+>": 1,
                "incl %eax;je  <MmGrowKernelStack+>;pushl %ebx;movl (,%edi,), %eax;movl (%eax), %ebx": 1,
                "addl %eax, (%esi);movl , %eax;incl %edi;incl %eax;cmpl %eax, %edi": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl , %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl (%ebp), %eax;movl , %ecx;movl %ecx, (%eax)": 1,
                "jmp - <MmGrowKernelStack+>;xorb %al, %al;jmp - <MmIsAddressValid+>;cmpl $, %esi;jb  <IoSetFileOrigin+>": 1,
                "cmpl $, %eax;jne - <KeSetKernelStackSwapEnable+>;jmp  <MmCreateMdl+>;movl , %eax;movl %eax, (%esi)": 1,
                "jne  <IoSetFileOrigin+>;pushl $;pushl -(%ebp);pushl -(%ebp);pushl %edi": 1,
                "decw (%esi);movb %al, (%ebp);leal (%esi), %eax;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "calll *;movl , %ebx;movb %al, (%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "movl , %edx;movl %eax, %edi;movl %edi, %ecx;calll - <KeSetKernelStackSwapEnable+>;pushl $": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);je  <MmGrowKernelStack+>;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl (%ecx), %eax;cmpl %eax, %edx;jb  <MmGrowKernelStack+>;movl (%ecx), %ecx;leal (%eax,%ecx,), %eax": 1,
                "shrl $, %eax;andl %edi, %eax;cmpl $, %eax;jne  <IoSetFileOrigin+>;movl (%esi), %eax": 1,
                "leal (%ebx,%ebx,), %eax;leal (%esi,%eax,), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %esi;movl %ecx, %edi;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %edi, -(%ebp);movl %esi, -(%ebp);movl %edx, (%ebp);movl %edx, -(%ebp)": 1,
                "testl %eax, %eax;je  <FsRtlRemoveLargeMcbEntry+>;movl (%eax), %ecx;cmpl %ecx, %edi;jb  <FsRtlRemoveLargeMcbEntry+>": 1,
                "cmpl , %edx;movl %edx, ;ja  <FsRtlLookupPerStreamContextInternal+>;cmpl $, (%ebp);je  <MmForceSectionClosed+>": 1,
                "movl (%ecx), %eax;cmpl %eax, (%ebp);ja  <MmForceSectionClosed+>;popl %ebp;retl $": 1,
                "cmpl %edi, (%ebp);je - <MmGrowKernelStack+>;cmpl $, (%ebp);jne  <RtlLookupElementGenericTableAvl+>;movl %edi, (%ebp)": 1,
                "popl %ebp;retl $;pushl (%esi);calll  <FsRtlReleaseFile>;jmp - <MmGrowKernelStack+>": 1,
                "pushl -(%ebp);pushl %ecx;pushl %edi;calll - <KeSaveFloatingPointState+>;movl %eax, -(%ebp)": 1,
                "pushl %ecx;pushl %edi;calll - <KeSaveFloatingPointState+>;movl %eax, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl (%ebp), %edx;movl %edx, %eax;andl $, %eax;movl (%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "jae  <IoSetFileOrigin+>;movl , %esi;cmpl $, %esi;je  <FsRtlLookupPerStreamContextInternal+>;addl $-, %esi": 1,
                "movw $, (%esi);incl (%edi);movl (%ebp), %eax;movb (%eax), %cl;calll *": 1,
                "movl (%edi), %ecx;sbbl -(%ebp), %ecx;movl %ecx, -(%ebp);jne  <MmGrowKernelStack+>;cmpl $, %eax": 1,
                "jl  <IoSetFileOrigin+>;orl $-, -(%ebp);calll  <MmGrowKernelStack+>;cmpl $, (%edi);jl  <MmGrowKernelStack+>": 1,
                "movl (%ecx,%eax,), %ebx;testl %ebx, %ebx;jne  <IoSetFileOrigin+>;movl %edi, (%esi);movl -(%ebp), %eax": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl %ebx;calll - <MmGrowKernelStack+>": 1,
                "leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);movl (%ebp), %eax;movl %eax, (%esi)": 2,
                "jne  <KeAreApcsDisabled+>;movl (%ebx), %eax;movl (%eax), %esi;cmpl %edi, %esi;jne  <CcSetReadAheadGranularity+>": 1,
                "movl $, (%ebx);calll - <KeInitializeSpinLock>;leal (%ebx), %eax;leal (%esi), %ecx;movl (%ecx), %edx": 1,
                "je  <CcInitializeCacheMap+>;movb (%ebp), %cl;calll *;cmpl %edi, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;movl (%ecx), %ecx;decl %eax": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;decl %eax;movl %eax, (%ecx);popl %ebp": 1,
                "calll *-(%edx);movl $, %eax;aam $-;incl (%ebx);addb %dl, (%ecx)": 1,
                "leal (%esi), %eax;cmpl %eax, %edx;jne  <CcUninitializeCacheMap+>;andw %bx, (%edx);andl %ebx, (%ebp)": 1,
                "testl %esi, %esi;je - <swprintf+>;movl (%ebp), %ecx;testl %ecx, %ecx;jne  <FsRtlTruncateLargeMcb+>": 1,
                "jne  <FsRtlTruncateLargeMcb+>;movl (%esi), %eax;testb $, %ah;jne  <IoSetFileOrigin+>;movl (%ebp), %ecx": 1,
                "testb $, %al;je  <CcUninitializeCacheMap+>;testb $, %al;jne  <CcUninitializeCacheMap+>;cmpl $, (%esi)": 1,
                "pushl %esi;pushl (%ebp);pushl %ebx;pushl (%ebx);calll - <KeSaveFloatingPointState+>": 1,
                "retl $;pushl $;pushl $;calll - <ExQueueWorkItem>;jmp - <CcUninitializeCacheMap+>": 1,
                "movl (%eax), %edi;testl %edi, %edi;movl %edi, -(%ebp);jne  <FsRtlFastUnlockAll+>;movl $, %eax": 1,
                "jne  <CcSetAdditionalCacheAttributes+>;pushl %esi;calll  <RtlRealSuccessor>;movl %eax, %edi;movl (%ebp), %eax": 1,
                "jne - <FsRtlFastUnlockAll+>;movl -(%ebp), %edi;leal (%edi), %ebx;movl (%ebx), %esi;testl %esi, %esi": 1,
                "andl %edx, %eax;popl %ebp;retl $;nop;nop": 1,
                "movl (%ebp), %eax;addl $, %eax;pushl %edi;movl (%eax), %edi;testl %edi, %edi": 1,
                "jne  <FsRtlResetLargeMcb+>;movw (%esi), %ax;cmpw $, %ax;je  <RtlAppendUnicodeToString+>;cmpw $, %ax": 1,
                "movl -(%ebp), %ecx;movl $, %edx;cmpxchgl %edx, (%ecx);cmpl (%ebp), %eax;jne  <IoSetFileOrigin+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;movl %edx, -(%ebp);movl %ecx, %edx;shrl $, %edx": 1,
                "jbe  <MmUnlockPages+>;movl %edx, (%esi);addl $, %ecx;andl $, %ecx;movl %ecx, -(%ebp)": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);je  <MmProbeAndLockPages+>;orb $-, (%edi);orb $, (%edi)": 1,
                "testb $, (%eax);je  <IoSetFileOrigin+>;movl -(%ebp), %ecx;testb $, (%ecx);je  <IoSetFileOrigin+>": 1,
                "shrl %cl, %eax;andl $, %eax;movl -(%ebp), %ecx;testl %eax, %eax;je  <KeInsertHeadQueue+>": 1,
                "testl %eax, %eax;je  <KeInsertHeadQueue+>;leal (%ecx,%ecx,), %eax;movl , %ecx;leal (%ecx,%eax,), %ecx": 1,
                "jne  <MmProbeAndLockPages+>;cmpl $, (%ecx);je  <MmProbeAndLockPages+>;incl ;incw (%ecx)": 1,
                "je  <PsGetProcessId+>;cmpl %ebx, -(%ebp);jbe - <MmProbeAndLockPages+>;movb -(%ebp), %cl;calll *": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;xorl %eax, %eax;movw (%edi), %ax;testb $, %al": 1,
                "jne  <MmUnlockPages+>;testb $, -(%ebp);jne  <IoSetFileOrigin+>;leal (%edx,%edi,), %ecx;movl %ecx, -(%ebp)": 1,
                "testb $, -(%ebp);jne  <IoSetFileOrigin+>;leal (%edx,%edi,), %ecx;movl %ecx, -(%ebp);movl (%edx), %eax": 1,
                "cmpl %ebx, %ecx;jb - <MmProbeAndLockPages+>;jmp  <IoSetFileOrigin+>;testb $, (%eax);je - <MmProbeAndLockPages+>": 1,
                "shll $, %edx;leal (%eax), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax;jne  <KeInsertHeadQueue+>": 1,
                "jne  <KeInsertHeadQueue+>;movl -(%ebp), %ecx;jmp - <MmProbeAndLockPages+>;movl %edi, %eax;negl %eax": 1,
                "movl %edi, %eax;negl %eax;addl $, %esi;movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "subl $, %ebx;addl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);jmp - <MmProbeAndLockPages+>": 1,
                "movl (%eax), %esi;testl %esi, %esi;movl %esi, (%edx);je  <MmUnlockPages+>;movl %edx, (%esi)": 2,
                "movl %esi, (%edx);je  <MmUnlockPages+>;movl %edx, (%esi);movl (%edx), %esi;testl %esi, %esi": 1,
                "cmpl %edx, %ecx;jne  <MmUnlockPages+>;movl (%eax), %ecx;testl %ecx, %ecx;movl %ecx, (%edx)": 1,
                "testl %eax, %eax;jne - <ExAllocatePoolWithQuotaTag+>;jmp - <ExAllocatePoolWithQuotaTag+>;pushl (%ebp);incl (%ecx)": 1,
                "cmpl %ecx, (%edi);je  <MmUnlockPages+>;leal (%esi), %edi;movl %eax, (%edi);movl %edx, (%eax)": 1,
                "jmp - <MmUnlockPages+>;movl %eax, (%edx);jmp  <RtlLookupElementGenericTableFullAvl+>;movl %edx, (%esi);jmp  <MmUnlockPages+>": 1,
                "jne  <MmUnlockPages+>;movl (%eax), %esi;testl %esi, %esi;movl %esi, (%ecx);jne  <MmUnlockPages+>": 1,
                "cmpl %ecx, (%edi);jne  <MmUnlockPages+>;movl %eax, (%edi);movl %edx, (%eax);movl %eax, (%edx)": 1,
                "je  <IoSetFileOrigin+>;movl %ebx, %eax;shrl $, %eax;andl $, %eax;addl , %eax": 1,
                "cmpl , %ecx;jae  <PoRegisterDeviceForIdleDetection+>;testl %eax, %eax;je  <MmUnlockPages+>;testb $, (%ebp)": 1,
                "movl (%ebp), %ecx;shrl $, %ecx;andl $, %ecx;subl $, %ecx;movl (%ecx), %eax": 2,
                "andl $, (%ecx);popl %esi;popl %ebp;retl $;subl -(%ebp), %eax": 1,
                "movl -(%ebp), %ebx;incl -(%ebp);cmpl $, -(%ebp);jae  <_stricmp+>;movl -(%ebp), %eax": 1,
                "shll $, %edx;leal (,%ecx,), %ecx;orb $-, %al;cmpl %edx, %ecx;movl %edx, -(%ebp)": 1,
                "subl $, %eax;leal (%esi,%eax), %ebx;cmpl -(%ebp), %ebx;jbe - <RtlFindClearBits+>;jmp - <MmUnlockPages+>": 1,
                "addb %bh, %bh;decl (%edx);std;pushl %eax;addb %bl, -": 1,
                "xorl %eax, %eax;jmp - <MmMapLockedPagesSpecifyCache+>;nop;nop;nop": 1,
                "cmpl %edi, %eax;movl %eax, -(%ebp);je  <IoSetFileOrigin+>;movl , %ebx;calll *%ebx": 1,
                "leal (%ebp), %eax;pushl %eax;pushl %ebx;pushl (%ebp);xorl %edi, %edi": 1,
                "jmp - <MmMapLockedPagesSpecifyCache+>;nop;addb %al, (%eax);addb %al, (%eax);pushl %ds": 1,
                "pushl %eax;addb %al, (%eax);addb %al, (%eax);addb %dl, -(%ecx);pushl %eax": 1,
                "movl %ecx, (%esi);jmp - <CcSetDirtyPinnedData+>;movl (%esi), %eax;cmpl %edi, %eax;movl %eax, (%ebp)": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;pushl %edi;calll *": 4,
                "jne  <IoSetFileOrigin+>;movl (%ebp), %edx;testl %edx, %edx;je  <FsRtlLookupPerStreamContextInternal+>;leal (%esi), %ecx": 1,
                "addb %al, (%eax);addb %al, (%eax);movb %al, ;orb %cl, (%ebx);cld": 1,
                "calll *;andl $, -(%ebp);cmpb $, (%ebp);jne - <ExAcquireSharedStarveExclusive+>;leal (%esi), %eax": 1,
                "movl (%esi), %ecx;testl %ecx, %ecx;pushl %ebx;movl %ecx, -(%ebp);je  <MmCreateMdl+>": 1,
                "leal (%ecx,%eax,), %ebx;movl %eax, -(%ebp);addl $, %ecx;jmp - <FsRtlLookupPerStreamContextInternal+>;cmpw %bx, (%esi)": 1,
                "shrl $, %eax;andl $, %eax;andl $, %edi;shll $, %edi;orl %edi, %eax": 1,
                "subl %eax, %esi;jmp  <CcCopyWrite+>;movl %ecx, %edx;shrl $, %edx;andl $, %edx": 1,
                "pushl %ebx;leal -(%ebp), %edx;movl %edi, %ecx;calll - <MmGrowKernelStack+>;jmp  <IoSetFileOrigin+>": 1,
                "jmp  <RtlLookupElementGenericTableFullAvl+>;andl $, (%ecx);jmp - <MmMapLockedPagesSpecifyCache+>;nop;nop": 1,
                "andl $, (%ecx);jmp - <MmMapLockedPagesSpecifyCache+>;nop;nop;nop": 1,
                "movl %esi, (%ecx);jmp - <MmMapLockedPagesSpecifyCache+>;nop;nop;nop": 1,
                "jg  <KeAreApcsDisabled+>;movl -(%ebp), %eax;cmpl (%esi), %eax;ja  <KeAreApcsDisabled+>;incl (%esi)": 1,
                "movl %eax, -(%ebp);jne  <FsRtlResetLargeMcb+>;cmpb %bl, (%ebp);je  <IoSetFileOrigin+>;movl -(%ebp), %edx": 1,
                "popl %esi;popl %ebx;leave;retl $;movl (%eax), %edx": 2,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;pushl %ebx": 1,
                "pushl %edi;movl (%ebp), %edi;movl %eax, -(%ebp);leal -(%ebp), %eax;xorl %ebx, %ebx": 2,
                "movl %eax, (%edx);leal -(%ebp), %eax;movl %eax, (%edx);movb $, (%ecx);movl %edi, (%ecx)": 1,
                "movl %eax, %esi;cmpl $, %esi;je  <IoSetFileOrigin+>;cmpl %ebx, %esi;jl  <IoSetFileOrigin+>": 1,
                "calll *;cmpl %ebx, %edi;jne  <PsGetProcessCreateTimeQuadPart+>;cmpl %ebx, %esi;jne  <FsRtlTruncateLargeMcb+>": 1,
                "jne  <PsGetProcessCreateTimeQuadPart+>;cmpl %ebx, %esi;jne  <FsRtlTruncateLargeMcb+>;xorb %al, %al;movzbl %al, %eax": 1,
                "testl %esi, %esi;je  <KeAreApcsDisabled+>;movl (%esi), %eax;subl %eax, ;movl (%esi), %eax": 1,
                "movl (%edx), %eax;movl (%edx), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);movl (%edx), %edi": 1,
                "jne - <KeCancelTimer+>;movl -(%ebp), %eax;testb $, (%eax);movl -(%ebp), %ebx;jne  <IoSetFileOrigin+>": 1,
                "je  <CcPurgeCacheSection+>;movl %ebx, %esi;calll *%edi;testl %ebx, %ebx;je  <CcPurgeCacheSection+>": 1,
                "je  <CcPurgeCacheSection+>;movl (%esi), %edx;movl (%esi), %edi;movl %edx, (%edi);movl %edi, (%edx)": 1,
                "shll $, %edx;cmpl $, %edx;ja  <PsGetThreadFreezeCount+>;addl $, %edx;andl $-, %edx": 1,
                "movl %ebx, (%eax);jmp - <MmIsAddressValid+>;nop;nop;nop": 1,
                "movl (%eax), %edi;xorl %esi, %esi;movl %edi, %eax;movl %ebx, %edx;movb $, %cl": 1,
                "leal -(%ebp), %edx;calll *;movl (%edi), %ebx;cmpl %esi, %ebx;je  <CcPurgeCacheSection+>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %ebx;calll  <CcPurgeCacheSection+>;movl %eax, %esi": 1,
                "jl  <CcPurgeCacheSection+>;cmpl %eax, -(%ebp);jb  <CcPurgeCacheSection+>;movl (%esi), %eax;xorl %ecx, %ecx": 1,
                "orl %edx, (%eax);shll %edx;je  <CcPurgeCacheSection+>;addl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "cmpl (%edi), %ecx;jbe  <CcPurgeCacheSection+>;movl %ecx, (%edi);movl %eax, (%edi);testl %edx, %edx": 1,
                "movl (%eax), %edi;jne  <KeAreApcsDisabled+>;cmpl %edi, (%ebp);jne  <KeAreApcsDisabled+>;popl %edi": 1,
                "andb $, %al;popl %ebp;retl $;nop;nop": 2,
                "movl -(%ebp), %ecx;movl $, %eax;testl %ecx, %eax;jne  <CcCopyWrite+>;cmpl $, (%ebp)": 1,
                "movl (%eax), %esi;testb $, (%esi);je  <IoSetFileOrigin+>;movl (%esi), %ecx;calll *": 1,
                "movl %eax, -(%ebp);movl (%esi), %ecx;calll *;movl -(%ebp), %esi;movl -(%ebp), %eax": 1,
                "testl %esi, %esi;jg  <CcCopyWrite+>;jl  <CcCopyWrite+>;testl %eax, %eax;ja  <_snwprintf+>": 1,
                "movb %bl, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %edi": 1,
                "cmpl (%ecx), %esi;jb  <_snwprintf+>;xorl %ecx, %ecx;incl %ecx;cmpl %edx, %eax": 1,
                "pushl %esi;calll  <CcCopyWrite+>;movl %eax, -(%ebp);testl %eax, %eax;jl  <IoSetFileOrigin+>": 1,
                "movb %dl, (%ecx);shrl %eax;movl %eax, (%ecx);movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "movb $, %cl;calll - <_allshr>;addl %eax, %esi;movl %esi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);testb $, %al;jne  <IoSetFileOrigin+>;testb $, %ah;jne  <CcCopyWrite+>": 1,
                "movl %eax, -(%ebp);incl ;leal (%eax,%eax,), %eax;movl , %ecx;cmpl $-, (%ecx,%eax,)": 1,
                "xorl %ecx, %ecx;shll $, %ecx;xorl -(%ebp), %ecx;andl $, %ecx;xorl -(%ebp), %ecx": 1,
                "cmpl $, -(%ebp);je  <CcCopyWrite+>;testl %edi, %edi;jns - <FsRtlLookupPerStreamContextInternal+>;movl %edi, %esi": 1,
                "pushl -(%ebp);pushl %esi;calll - <IoGetAttachedDevice+>;xorl %ecx, %ecx;movl (%esi), %esi": 1,
                "pushl %esi;calll - <IoGetAttachedDevice+>;xorl %ecx, %ecx;movl (%esi), %esi;testb $, (%esi)": 1,
                "movb $, (%eax);andl $, (%ecx);movl (%ebp), %eax;movl (%ebp), %ecx;leal (%ecx,%eax), %edi": 1,
                "andl $, (%ecx);movl (%ebp), %eax;movl (%ebp), %ecx;leal (%ecx,%eax), %edi;movl $, -(%ebp)": 1,
                "nop;nop;nop;das;enter $, $": 1,
                "testl %esi, -;incl %ebx;orb $-, %al;addb (%edi), %cl;testl %ecx, (%esi)": 1,
                "orl $, %eax;movl %eax, (%ebx);incl (%ebx);movl (%ebx), %eax;shrl $, %eax": 1,
                "andl $, %eax;movl %eax, -(%ebp);xorl %ecx, %ecx;calll - <IoAllocateIrp+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;orl (,%ecx,), %eax;shll $, %edi;orl %edi, %eax;orl $, %eax": 1,
                "orl $, %eax;jmp - <CcCopyWrite+>;nop;nop;nop": 1,
                "addb %al, (%eax);incl %edi;inl %dx, %eax;incl %ecx;addb %dl, -(%eax)": 1,
                "movl -(%eax,%edi,), %eax;cmpl %ebx, %eax;ja  <FsRtlRemoveLargeMcbEntry+>;testl %edi, %edi;je  <FsRtlAddLargeMcbEntry+>": 1,
                "cmpl %ebx, %eax;ja  <FsRtlRemoveLargeMcbEntry+>;testl %edi, %edi;je  <FsRtlAddLargeMcbEntry+>;movl (%esi), %ecx": 1,
                "decl %eax;incl %eax;cmpl %ebx, %eax;jne  <FsRtlRemoveLargeMcbEntry+>;pushl $": 1,
                "pushl %edi;movl (%ebp), %edi;leal (%ecx,%edx), %eax;cmpl (%edi), %eax;ja  <RtlClearAllBits+>": 1,
                "ja  <RtlClearAllBits+>;testl %ecx, %ecx;je  <RtlClearAllBits+>;decl %eax;movl %eax, %esi": 1,
                "ja  <FsRtlRemoveLargeMcbEntry+>;testl %ecx, %ecx;je  <FsRtlRemoveLargeMcbEntry+>;decl %eax;movl %eax, %esi": 1,
                "leal -(%eax), %edx;testl %edx, %edx;je  <FsRtlLookupLastLargeMcbEntry+>;movl -(%ecx,%eax,), %edx;movl (%esi), %eax": 1,
                "pushl $;calll - <_CIsqrt+>;movl (%ebp), %ebx;movl %ebx, -(%ebp);movl (%ebx), %ecx": 1,
                "calll *;xorl %edi, %edi;movl %edi, -(%ebp);movl (%ebp), %esi;cmpl %edi, %esi": 1,
                "retl;movl (%esi), %eax;testl %eax, %eax;je - <IoGetRelatedDeviceObject+>;pushl %eax": 1,
                "testl %eax, %eax;je - <IoGetRelatedDeviceObject+>;pushl %eax;pushl %edi;calll  <FsRtlInsertPerStreamContext+>": 1,
                "pushl %eax;pushl %edi;calll  <FsRtlInsertPerStreamContext+>;testb %al, %al;je - <IoGetRelatedDeviceObject+>": 1,
                "jne  <FsRtlTruncateLargeMcb+>;cmpw $, (%ebx);jne  <IoSetFileOrigin+>;testl %esi, %esi;leal (%ebx), %edi": 1,
                "calll - <MmIsAddressValid>;testb %al, %al;je  <FsRtlTruncateLargeMcb+>;movl (%esi), %esi;testl %esi, %esi": 1,
                "calll - <MmMapLockedPagesSpecifyCache+>;testl %eax, %eax;je  <PoSetSystemState+>;movl (%edi), %eax;movl (%ebp), %ecx": 1,
                "movl %edi, -(%ebp);calll - <MmMapLockedPagesSpecifyCache+>;testl %eax, %eax;je  <MmAllocateContiguousMemory+>;movl (%ebp), %eax": 1,
                "orw $, (%ebx);leal (%eax,%esi,), %eax;movl %eax, -(%ebp);movl $, (%ebp);movb $, (%ebp)": 1,
                "je  <FsRtlTruncateLargeMcb+>;incl (%edi);cmpl %edx, (%edi);jne  <KeAreApcsDisabled+>;movl (%ebp), %esi": 1,
                "je  <FsRtlRemoveLargeMcbEntry+>;movl (%ebp), %eax;movl (%eax), %ecx;testb $, %cl;jne  <MmAllocateContiguousMemory+>": 1,
                "jb - <FsRtlTruncateLargeMcb+>;cmpl $, (%ebp);je - <CcPurgeCacheSection+>;decl (%edi);je  <KeAreApcsDisabled+>": 1,
                "decl (%edi);je  <KeAreApcsDisabled+>;movb -(%ebp), %cl;calll *;andl $, (%ebp)": 1,
                "movl (%edx), %eax;cmpl $, %eax;je  <MmAllocateContiguousMemory+>;decl %eax;movl %eax, (%edx)": 1,
                "movl %eax, (%esi);movl (%ecx), %eax;movl %eax, (%esi);jmp - <CcUninitializeCacheMap+>;cmpl %edi, -(%ebp)": 1,
                "jmp - <CcUninitializeCacheMap+>;cmpl %edi, -(%ebp);je  <IoSetFileOrigin+>;movl -(%ebp), %ebx;movl %edi, -(%ebp)": 1,
                "movl (%esi), %eax;movl (%esi), %edx;movb $, %cl;calll - <_allshr>;movl %eax, (%ebp)": 1,
                "testb $, (%ebx);jne  <IoSetFileOrigin+>;movl $, %eax;movl (%ebp), %ecx;testl %eax, (%ecx)": 1,
                "bound (%eax), %ebp;incl %esp;addb %ch, (%ebx);incl %esp;addb %dh, %dh": 1,
                "testl %eax, %eax;je  <RtlLookupElementGenericTableFullAvl+>;movl %eax, %esi;jmp - <FsRtlTruncateLargeMcb+>;xorl %eax, %eax": 1,
                "pushl (%ebp);calll - <FsRtlTruncateLargeMcb+>;cmpl $, %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movb $, (%eax);cmpb $, (%esi);jne  <RtlLookupElementGenericTableFullAvl+>;incl (%esi);jmp  <RtlLookupElementGenericTableFullAvl+>": 1,
                "cmpb $, (%esi);jne  <RtlLookupElementGenericTableFullAvl+>;incl (%esi);jmp  <RtlLookupElementGenericTableFullAvl+>;movl %ebx, (%eax)": 1,
                "movl %ebx, (%eax);jmp  <RtlInsertElementGenericTableFullAvl+>;nop;nop;nop": 1,
                "movl %ecx, (%esi);jmp - <RtlLookupElementGenericTableFullAvl+>;nop;nop;nop": 1,
                "cmpb $, %bl;je  <_snwprintf+>;movl (%esi), %edi;pushl %edi;calll - <RtlLookupElementGenericTableFullAvl+>": 1,
                "jne - <RtlLookupElementGenericTableFullAvl+>;movb %bl, (%esi);jmp - <RtlLookupElementGenericTableFullAvl+>;cmpb %cl, (%eax);jne - <RtlLookupElementGenericTableFullAvl+>": 1,
                "popl %ebx;popl %ebp;retl $;pushl $;jmp - <FsRtlTruncateLargeMcb+>": 1,
                "jmp - <RtlInsertElementGenericTableFullAvl+>;nop;nop;nop;nop": 1,
                "movl %edi, (%eax);movl (%esi), %eax;movb %cl, (%eax);movl (%esi), %eax;movb $, (%eax)": 1,
                "movl (%esi), %eax;movb %cl, (%eax);movl (%esi), %eax;movb $, (%eax);movl (%esi), %eax": 1,
                "shrl $, %edx;andl $, %ecx;andl $, %edx;rep  stosb %al, %es:(%edi);andl $, -(%edx)": 1,
                "jmp - <FsRtlInitializeLargeMcb+>;nop;nop;nop;nop": 3,
                "movw %di, (%esi);jne  <FsRtlResetLargeMcb+>;movl (%esi), %eax;cmpl %edi, %eax;jne  <FsRtlResetLargeMcb+>": 1,
                "movl %edi, (%esi);movw %di, (%esi);movw %di, (%esi);addl $, %esi;pushl %esi": 1,
                "calll - <KeInitializeSpinLock>;popl %edi;xorl %eax, %eax;popl %esi;popl %ebp": 1,
                "calll - <_CIsqrt+>;movl (%ebp), %eax;movl (%eax), %ebx;testl %ebx, %ebx;jne  <IoSetFileOrigin+>": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <FsRtlUninitializeLargeMcb+>": 1,
                "cmpl $, (%esi);jne  <KeSetBasePriorityThread+>;pushl (%esi);pushl $;calll - <ExFreeToPagedLookasideList>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;pushl %ebx;movl (%ecx), %ebx": 1,
                "pushl %ebx;movl (%ecx), %ebx;testl %ebx, %ebx;pushl %esi;pushl %edi": 1,
                "orb $-, %dl;cmpl %edi, (%eax);jne  <RtlDeleteElementGenericTableAvl+>;movb $, %dl;movl %eax, %edi": 1,
                "jmp - <RtlDeleteElementGenericTableAvl+>;pushl %esi;calll - <RtlLookupElementGenericTableFullAvl+>;negb %bl;xorl %eax, %eax": 1,
                "calll - <IoGetStackLimits>;calll - <IoGetStackLimits+>;andl $, -(%ebp);movl %eax, %ebx;cmpl $-, %ebx": 1,
                "movl %eax, %ebx;cmpl $-, %ebx;je  <IoSetFileOrigin+>;pushl %esi;movl (%ebp), %esi": 1,
                "movl %edi, %eax;xorl %ecx, %ecx;subl %ecx, %eax;je  <IoSetFileOrigin+>;decl %eax": 1,
                "movl (%ebp), %edi;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <IoSetFileOrigin+>;subl -(%ebp), %edi;xorl %edx, %edx;testl %esi, %esi;jl  <RtlDeleteElementGenericTableAvl+>": 1,
                "testl %esi, %esi;jl  <RtlDeleteElementGenericTableAvl+>;leal (%esi,%edx), %ecx;sarl %ecx;movl (%eax,%ecx,), %ebx": 1,
                "popl %esi;popl %ebx;leave;retl $;xorb %al, %al": 4,
                "xorl %edi, %edi;cmpl %edi, %esi;jne  <RtlUnwind+>;movl (%ebp), %eax;leal -(%ebp), %esi": 1,
                "pushl %eax;movl $, -(%ebp);calll - <RtlCaptureContext+>;movl (%ebp), %eax;addl $, -(%ebp)": 1,
                "movl (%ebp), %eax;addl $, -(%ebp);movl %eax, -(%ebp);calll - <IoGetStackLimits+>;movl %eax, %ebx": 1,
                "cmpl %edi, (%ebp);je  <RtlUnwind+>;cmpl %ebx, (%ebp);jb  <IoSetFileOrigin+>;cmpl -(%ebp), %ebx": 1,
                "pushl (%ebx);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ecx, %ecx;cmpl %ecx, (%ebp);pushl %edi": 1,
                "xorl %ecx, %ecx;cmpl %ecx, (%ebp);pushl %edi;je  <FsRtlRemoveLargeMcbEntry+>;cmpl %ecx, (%ebp)": 1,
                "decl %ebx;pushl %ebx;pushl %esi;calll  <RtlDeleteNoSplay+>;cmpl $, (%ebp)": 1,
                "pushl %esi;calll - <RtlUnwind+>;orl $-, -(%ebp);calll  <FsRtlRemoveLargeMcbEntry+>;calll - <_CIsqrt+>": 1,
                "jmp - <RtlAreBitsSet+>;xorb %al, %al;jmp - <RtlAreBitsSet+>;movl (%esi), %eax;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;jbe - <RtlUnwind+>;movl (%esi), %edx;movl (%ebp), %edi;cmpl -(%edx,%eax,), %edi": 1,
                "cmpl %ebx, %eax;jae  <RtlDeleteNoSplay+>;cmpl -(%ebp), %ecx;jae  <RtlDeleteNoSplay+>;pushl $": 1,
                "movl %eax, (%ebp);jmp - <FsRtlTruncateLargeMcb+>;movl $, (%ebp);calll *;movb %al, -(%ebp)": 1,
                "jmp  <IoSetFileOrigin+>;imull $, %eax, %eax;xorl %edx, %edx;divl %esi;movl %eax, %edx": 1,
                "movl (%ebp), %ecx;shrl $, %ecx;cmpl -(%ebp), %ecx;jne  <FsRtlRemoveLargeMcbEntry+>;cmpl %edi, (%ebp)": 1,
                "je  <FsRtlRemoveLargeMcbEntry+>;testb $, (%ebx);jne  <FsRtlRemoveLargeMcbEntry+>;movl (%ebp), %ecx;andl $, %ecx": 1,
                "andl $, %ecx;movl $, %ebx;subl %ecx, %ebx;movl %ebx, -(%ebp);cmpl (%ebp), %ebx": 1,
                "movl $, %ebx;subl %ecx, %ebx;movl %ebx, -(%ebp);cmpl (%ebp), %ebx;jbe  <FsRtlRemoveLargeMcbEntry+>": 1,
                "andl $, %edx;addl (%eax), %edx;movl %edx, -(%ebp);cmpl %edi, (%esi);jne  <IoSetFileOrigin+>": 1,
                "calll - <KeSaveFloatingPointState+>;jmp  <CcFastCopyWrite+>;pushl -(%ebp);pushl -(%ebp);pushl %eax": 1,
                "andl $-, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <FsRtlRemoveLargeMcbEntry+>;andl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %esi, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;movl (%edx), %eax": 1,
                "movl %ebx, %ecx;movb %al, -(%ebp);calll - <IoAllocateIrp+>;testl %eax, %eax;jne  <FsRtlRemoveLargeMcbEntry+>": 1,
                "movb -(%ebp), %cl;calll *;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "pushl %edi;leal (%eax,%ecx,), %edi;movl (%ebp), %ecx;leal (%ecx,%ecx,), %ecx;leal (%eax,%ecx,), %esi": 1,
                "movl (%ebp), %ecx;leal (%ecx,%ecx,), %ecx;leal (%eax,%ecx,), %esi;andl $, (%esi);movl (%ebp), %eax": 1,
                "shrl $, %eax;andl $, %eax;je  <FsRtlRemoveLargeMcbEntry+>;movl (,%eax,), %eax;andl $, %eax": 1,
                "movl (,%eax,), %eax;andl $, %eax;shll $, %eax;movl %eax, (%esi);shrl $, %eax": 1,
                "incl (%esi);shrl $, %edi;andl $, %eax;andl $, %edi;orl $, %eax": 1,
                "xorl %ebx, %ebx;calll *;movl (%ebp), %esi;movb %al, %cl;movl (%esi), %eax": 1,
                "movl %eax, %ebx;jmp - <PsChargeProcessPagedPoolQuota+>;pushl -(%ebp);calll  <FsRtlRemoveLargeMcbEntry+>;jmp - <PsChargeProcessPagedPoolQuota+>": 1,
                "calll  <NtAllocateVirtualMemory+>;negl %eax;sbbl %eax, %eax;negl %eax;popl %ebp": 1,
                "retl;addb %al, (%eax);addb %dl, (%eax);je - <PsReturnProcessPagedPoolQuota+>;leal (%esi), %eax": 1,
                "calll - <ExReleaseFastMutexUnsafe>;jmp - <KeCancelTimer+>;nop;nop;nop": 1,
                "leal (%ecx), %edi;movl (%edi), %eax;testl %eax, %eax;jns  <FsRtlResetLargeMcb+>;movl %eax, %esi": 1,
                "movl (%edi), %eax;testl %eax, %eax;jns  <FsRtlResetLargeMcb+>;movl %eax, %esi;shrl $, %esi": 1,
                "testb %al, %al;je  <IoSetFileOrigin+>;movl -(%ebp), %eax;leave;retl": 1,
                "calll - <FsRtlRemoveLargeMcbEntry+>;jmp - <FsRtlRemoveLargeMcbEntry+>;nop;nop;nop": 1,
                "retl $;xorb %bl, %bl;jmp - <MmDisableModifiedWriteOfSection+>;nop;nop": 1,
                "sbbl $, %eax;pushl %ebx;addb %al, %bh;incl %esi;addb $, %al": 1,
                "pushl %ebx;addb %al, %bh;incl %esi;addb $, %al;addb %al, (%eax)": 1,
                "movl (%edi), %edi;movl (%edi), %ebx;leal (%esi), %edx;movl %ebx, (%edx);movl %edi, (%edx)": 1,
                "jmp - <KeInitializeMutant+>;movl %fs:, %eax;pushl (%eax);calll - <PsIsThreadTerminating+>;cmpl %eax, (%esi)": 1,
                "addb %bl, (%ebx,%eax,);addb %al, (%eax);addb %al, (%eax);addb %bh, (%ebx,%eax,);pushl %ebx": 1,
                "addb %bh, (%ebx);incl %esp;pushl %ebx;addb %ah, (%ecx);addl %eax, (%eax)": 1,
                "addb %cl, (%ebx);sarl $, %edx;movb %dl, (%eax);movl %ecx, %eax;jmp - <FsRtlLookupPerStreamContextInternal+>": 1,
                "jae  <PoSetSystemState+>;xorl %ecx, %ecx;xorl %edx, %edx;incl %ecx;calll - <KeFlushEntireTb+>": 1,
                "pushl $;pushl %ebx;pushl %eax;movl %eax, -(%ebp);movl $, (%ebx)": 1,
                "calll - <PsIsThreadTerminating+>;movb (%ebp), %cl;calll *;movl %ebx, %ecx;movl $, -(%ebp)": 1,
                "shll $, %ecx;movl %ecx, (%ebp);movl %edx, %ecx;subl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "jbe  <KeInitializeMutant+>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);cmpl (%esi), %edx": 1,
                "jne - <PsIsThreadTerminating+>;jmp  <IoSetFileOrigin+>;xorl %eax, %eax;jmp - <PsIsThreadTerminating+>;nop": 1,
                "nop;outl %eax, %dx;orb (%ebp), %al;addb (%ebx), %cl;incl %ebp": 1,
                "movw , %dx;movw %dx, (%ecx);movw , %dx;movw %dx, (%ecx);movw %ax, (%ecx)": 1,
                "movl (,%eax,), %edx;movl (%ebp), %ecx;cmpl $, %ecx;jbe  <KeInitializeMutant+>;movl %ecx, %eax": 1,
                "xorl %eax, %eax;incl %eax;jmp - <KeInitializeMutant+>;cmpl $-, %eax;je - <KeInitializeMutant+>": 1,
                "nop;movb $, %ch;pushl %ebx;addb %cl, %al;adcl %edx, (%ebx)": 1,
                "nop;nop;nop;nop;incb (%edx,%edx,)": 1,
                "addb %al, (%eax);addb %al, (%eax);js - <KeInitializeMutant+>;decl %edx;addb %bh, (%ecx)": 1,
                "jne - <FsRtlLookupPerStreamContextInternal+>;movb (%ebx), %cl;calll *;cmpl %edi, (%ebp);je  <RtlMapSecurityErrorToNtStatus+>": 1,
                "movl %eax, %esi;xorl %eax, %eax;cmpl %edi, %esi;je - <FsRtlLookupPerStreamContextInternal+>;movl $, %ecx": 2,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);calll *;movb %al, (%ebx);movl , %eax": 1,
                "pushl %esi;movl (%ebx), %esi;xorl %eax, %eax;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "movl (%edi), %eax;andl $, %eax;pushl %eax;pushl %ebx;movl , %eax": 1,
                "pushl %edi;pushl %ebx;calll - <MmSizeOfMdl+>;pushl $;pushl %edi": 1,
                "pushl %ebx;calll - <ExDisableResourceBoostLite+>;testl %eax, %eax;jne - <MmSizeOfMdl+>;xorl %edi, %edi": 1,
                "movl -(%ebp,%eax), %esi;movl -(%ebp,%eax), %eax;pushl %esi;pushl %ebx;movl %edi, (%esi,%eax,)": 1,
                "pushl %ebx;movl %edi, (%esi,%eax,);calll - <MmSizeOfMdl+>;pushl -(%ebp);pushl %esi": 1,
                "pushl %edx;calll - <FsRtlInitializeFileLock>;movl %edx, %eax;popl %ebp;retl $": 1,
                "jne  <IoSetFileOrigin+>;movb -(%ebp), %cl;calll *;pushl %ebx;calll - <FsRtlAllocateFileLock+>": 1,
                "jg - <CcGetDirtyPages+>;cmpl %ecx, (%ebp);jae - <CcGetDirtyPages+>;cmpl $, (%esi);pushl %edi": 1,
                "jae - <CcGetDirtyPages+>;cmpl $, (%esi);pushl %edi;jne  <IoSetFileOrigin+>;movl (%esi), %eax": 1,
                "calll - <ExReleaseResourceLite+>;popl %edi;popl %esi;retl $;nop": 1,
                "pushl %ebp;pushl %ebx;addb %bl, (%ebp);pushl %ebx;addb %dl, -(%eax)": 1,
                "leal -(%ebp), %edx;calll *;movl , %eax;movl %eax, (%esi);cmpb $, ": 1,
                "movl $, (%esi);jne  <_snwprintf+>;leal (%esi), %eax;movl (%eax), %ecx;movl (%eax), %eax": 1,
                "movsbl (%ebp), %ecx;movl (%ebp), %eax;pushl %esi;leal (%eax,%ecx,), %esi;cmpl %esi, (%esi)": 1,
                "calll *;movb %al, %bl;movl (%ebp), %eax;leal (%eax), %ecx;movsbl (%ecx), %esi": 1,
                "leal (%eax), %ecx;movsbl (%ecx), %esi;leal (%eax), %edx;movsbl (%edx), %edi;addl %edi, %esi": 1,
                "calll *;movl (%ebp), %edx;addl $, %edx;movb (%edx), %bl;movb %al, %cl": 1,
                "subl $, %ebx;incl -(%ebp);cmpl %esi, -(%ebp);movl %ebx, -(%ebp);jb - <KeTerminateThread+>": 1,
                "calll *;leal (%esi), %edx;cmpb $, (%edx);je  <ExLocalTimeToSystemTime+>;movb %al, %cl": 1,
                "movl %eax, -(%ebp);pushl %edi;jne  <RtlAppendUnicodeToString+>;movl (%ebx), %esi;subl $, %esi": 1,
                "movw $, (%esi);movl $, (%esi);leal -(%esi), %edi;leal -(%edi), %ecx;leal -(%ecx), %eax": 1,
                "movl %edx, -(%esi);addl $-, %eax;movb %dl, (%ebx);movl (%ebp), %edx;movl %edx, (%edi)": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %esi;movb (%esi), %al;movb %al, (%edi)": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;movb (%esi), %al;movb %al, (%edi);movb %al, (%edi)": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movb $, (%edi);movb (%esi), %al;movb %al, (%edi)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;movl -(%ebp), %ecx;movl (%ebp), %esi": 1,
                "cmpl %edx, %ecx;jae  <IoSetFileOrigin+>;movb (%ecx), %dl;movb %dl, (%ecx);jmp - <MmProbeAndLockPages+>": 1,
                "movb %dl, (%ecx);jmp - <MmProbeAndLockPages+>;decl %ebx;xorb (%edx), %dl;cmpb $, %al": 1,
                "jne  <IoSetFileOrigin+>;movw $, -(%ebp);movw %dx, -(%ebp);movw %dx, -(%ebp);movl %edx, -(%ebp)": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, -(%esi);orl $-, (%esi);movl %eax, (%esi)": 1,
                "incl %eax;movl %eax, -(%esi);orl $-, (%esi);movl %eax, (%esi);movb %al, (%ebx)": 1,
                "pushl %edx;addb %dl, -(%eax);movl %fs:, %eax;xorl %ecx, %ecx;pushl %ecx": 1,
                "je - <KeInitializeDpc+>;pushl $;calll - <KiCoprocessorError+>;addl $, %esi;movl $, %ecx": 1,
                "pushl $;calll - <KiCoprocessorError+>;addl $, %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "addl $, %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);andl $-, (%ebx);movl , %eax": 1,
                "rep  movsl (%esi), %es:(%edi);andl $-, (%ebx);movl , %eax;andl %eax, (%ebx);movl %fs:, %eax": 1,
                "jmp  <IoSetFileOrigin+>;nop;nop;nop;decl %ecx": 1,
                "addb %bl, %ch;fimull (%edi);addb %cl, %dh;fisttpl (%edi);pushfl": 1,
                "addb %cl, %dh;fisttpl (%edi);pushfl;fmull (%edi);movsl (%esi), %es:(%edi)": 1,
                "calll *;movl (%ebp), %ecx;movb %al, -(%ebp);leal (%ecx), %eax;movb (%eax), %dl": 1,
                "movb %dl, (%eax);jne  <RtlAppendUnicodeToString+>;cmpb $, (%ecx);jne  <RtlAppendUnicodeToString+>;incl (%ecx)": 1,
                "cmpl %ecx, %edx;jae  <RtlImageNtHeader+>;cmpl %ecx, %eax;jae  <PsGetJobUIRestrictionsClass+>;leal (%eax), %edx": 1,
                "retl $;xorl %edx, %edx;movl %esi, %ecx;calll - <PsGetCurrentProcess+>;testl %eax, %eax": 1,
                "pushl %ebx;leal (%esi), %eax;pushl $;pushl %eax;movl %eax, -(%ebp)": 1,
                "movl , %ecx;subl , %ecx;pushl $;popl %edx;cmpl %edx, %ecx": 1,
                "xaddl %eax, (%ecx);movl %edx, -(%ebp);xorl %edx, %edx;xorl %ecx, %ecx;addl $, %edi": 1,
                "xorl %ecx, %ecx;addl $, %edi;calll - <IoAllocateIrp+>;movl , %ecx;andl , %ecx": 1,
                "sbbl %esi, %esi;negl %esi;shrl $, %eax;addl %eax, %esi;movl $, -(%ebp)": 1,
                "popl %ds;pushl %edx;addb %dl, -(%eax);movl %edi, %edi;pushl %ebp": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl $;pushl %edi": 1,
                "calll *;movl (%edi), %ebx;movl (%ebp), %eax;cmpl %ebx, %eax;jne  <KeQueryRuntimeThread+>": 1,
                "movl (%edi), %ebx;movl (%ebp), %eax;cmpl %ebx, %eax;jne  <KeQueryRuntimeThread+>;testb $, (%eax)": 1,
                "orl %esi, %eax;testl $, %eax;movl %eax, (%edi);leal (%edi), %esi;jne  <CcScheduleReadAhead+>": 1,
                "movl %eax, (%edi);leal (%edi), %esi;jne  <CcScheduleReadAhead+>;testb $, (%esi);jne  <PsGetProcessSectionBaseAddress+>": 1,
                "cmpl %ecx, %eax;jne - <FsRtlInitializeLargeMcb+>;cmpl $, (%ebp);je  <PsGetProcessSectionBaseAddress+>;pushl (%ebp)": 1,
                "calll  <PsGetProcessSectionBaseAddress+>;testl %eax, %eax;je  <RtlEqualString+>;cmpl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl $, %ecx;movl %eax, %edx;andl %ecx, %edx;cmpl %ecx, %edx;je  <IoPageRead+>": 2,
                "pushl %eax;calll  <PsGetProcessSectionBaseAddress+>;testl %eax, %eax;jne  <PsGetProcessSectionBaseAddress+>;movl %esi, %eax": 1,
                "pushl (%esi);calll - <MmUnmapLockedPages>;jmp - <PsGetProcessSectionBaseAddress+>;cmpl $, (%ebp);jne  <PsGetProcessSectionBaseAddress+>": 1,
                "cmpl $, (%ebp);jne  <PsGetProcessSectionBaseAddress+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%ebp), %edx": 1,
                "movl %eax, -(%ebp);je  <FsRtlGetNextFileLock+>;cmpl %ebx, %edx;je - <FsRtlInitializeLargeMcb+>;movl %fs:, %eax": 1,
                "andl $, %ebx;xorl %ecx, %ebx;decl (%edi);leal (%edx), %ecx;movl %ebx, (%eax)": 1,
                "calll *;xorl %ebx, %ebx;movl , %eax;cmpl %ebx, %eax;jne  <IoSetFileOrigin+>": 1,
                "xorl %ebx, %ebx;movl , %eax;cmpl %ebx, %eax;jne  <IoSetFileOrigin+>;movl %ebx, -(%ebp)": 1,
                "testl %eax, %eax;jl  <IoSetFileOrigin+>;pushl (%ebp);orl $-, -(%ebp);pushl -(%ebp)": 1,
                "pushl (%ebp);orl $-, -(%ebp);pushl -(%ebp);leal (%ebp), %eax;pushl %eax": 1,
                "orl $-, -(%ebp);pushl -(%ebp);leal (%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "movl %eax, (%ebp);je  <PsGetProcessSectionBaseAddress+>;incl (%edi);jne  <PsGetProcessSectionBaseAddress+>;leal (%edi), %eax": 1,
                "movl (%esi), %ecx;movl (%esi), %edi;leal (%esi), %ebx;movl %ecx, (%ebp);jle  <PsGetProcessSectionBaseAddress+>": 1,
                "pushl (%ebp);pushl %edi;pushl (%ebp);calll  <IoPageRead+>;jmp - <PsGetThreadTeb+>": 1,
                "je - <PsGetProcessSectionBaseAddress+>;movl , %ecx;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax;movl (%eax), %ecx": 1,
                "testb $, %cl;je  <PsGetProcessSectionBaseAddress+>;andl $-, %ecx;testb $, (%eax);movl %ecx, (%eax)": 1,
                "movl %edx, -(%ebp);jne - <PsGetProcessSectionBaseAddress+>;cmpl $, (%ebp);jne  <KeGetRecommendedSharedDataAlignment+>;cmpl $, (%edi)": 1,
                "cmpl $, (%ebp);jne  <KeGetRecommendedSharedDataAlignment+>;cmpl $, (%edi);jne  <PsGetProcessSectionBaseAddress+>;movw (%edi), %ax": 1,
                "jne  <PsGetProcessSectionBaseAddress+>;movw (%edi), %ax;cmpw $, %ax;je  <PsGetProcessSectionBaseAddress+>;cmpw $, %ax": 1,
                "jne  <IoSetFileOrigin+>;pushl -(%ebp);calll  <PsGetProcessSectionBaseAddress+>;cmpl $, (%ebp);jne  <PsGetProcessSectionBaseAddress+>": 1,
                "cmpl $, -(%ebp);je  <IoSetFileOrigin+>;movl %esi, %eax;jmp - <KeSetKernelStackSwapEnable+>;nop": 1,
                "decl %eax;jne  <PsGetProcessSectionBaseAddress+>;movl (%esi), %eax;testl $, %eax;jne  <CcScheduleReadAhead+>": 1,
                "movzwl , %eax;cmpl , %eax;jae  <CcScheduleReadAhead+>;andl $, (%esi);andl $, (%esi)": 1,
                "calll *;movl %eax, %edx;testl %edx, %edx;je  <IoSetFileOrigin+>;movl (%edx), %ecx": 1,
                "pushl (%ebp);calll - <KeSetKernelStackSwapEnable+>;jmp - <PsGetProcessSectionBaseAddress+>;leal (%ebp), %eax;pushl %eax": 1,
                "movl %edx, -(%ebp);leal (%esi), %eax;cmpl (%ebp), %eax;movl %eax, -(%ebp);jae  <IoPageRead+>": 1,
                "incl ;shrl $, %eax;addl %eax, ;testb $, (%ebx);je  <IoPageRead+>": 1,
                "addl -(%ebp), %edx;adcl -(%ebp), %eax;cmpl -(%ebp), %eax;jb  <IoPageRead+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi)": 2,
                "movl %eax, (%esi);movl $, %eax;popl %edi;popl %ebx;popl %esi": 1,
                "movl (%eax), %eax;testl %eax, %eax;movl %edx, -(%ebp);movl %eax, (%ebp);jle  <IoPageRead+>": 1,
                "subl $, %ebx;movl %eax, (%esi);testb $, (%ebx);je  <IoSetFileOrigin+>;movl (%ebx), %eax": 2,
                "movl , %ecx;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax;incl (%eax);addl $, %edx": 1,
                "cmpl $, (%ebp);movl %edx, -(%ebp);jg - <IoPageRead+>;popl %edi;popl %esi": 1,
                "movl %edx, -(%ebp);jg - <IoPageRead+>;popl %edi;popl %esi;popl %ebx": 1,
                "andl $, %esi;shll $, %eax;orl %eax, %esi;addl , %esi;movl %esi, -(%ebp)": 1,
                "testb $, %cl;jne - <IoPageRead+>;movl , %edx;addl %edx, %edx;cmpl %edx, -(%ebp)": 1,
                "andl $, %edx;orl %eax, %edx;movl , %eax;subl %edx, %eax;movl %eax, -(%ebp)": 1,
                "jne  <IoPageRead+>;movl -(%ebp), %ecx;testb $, %cl;jne  <_snwprintf+>;movl -(%ebp), %ebx": 1,
                "movl %ecx, -(%ebp);xorl %ecx, %ecx;cmpw %cx, %bx;movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "cmpw %cx, %bx;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp);je - <IoPageRead+>": 1,
                "je - <IoPageRead+>;pushl %esi;pushl %edi;pushl $;popl %esi": 1,
                "je - <IoPageRead+>;movl -(%ebp), %ecx;jmp - <IoPageRead+>;nop;nop": 1,
                "pushl %es;addb %al, (%ecx);addb %al, (%eax);adcb %al, (%eax);addl (%esi), %eax": 1,
                "addb %al, (%eax);addb %cl, (%eax);pushal;pushl $;addb %al, (%eax)": 1,
                "orb %al, (%eax);addb %al, (%edi);addb %al, (%eax);orb %cl, (%eax);addb %al, (%eax)": 1,
                "orb %cl, (%eax);addb %al, (%eax);orb %al, (%eax);orb %al, (%eax);popl %es": 1,
                "je  <IoSetFileOrigin+>;cmpl $, (%ebp);jle  <IoPageRead+>;decl (%ebp);xorl %eax, %eax": 1,
                "orl $, -(%ebp);jmp - <IoPageRead+>;orl $, -(%ebp);jmp - <IoPageRead+>;orb $-, -(%ebp)": 1,
                "orl $, -(%ebp);negl -(%ebp);jmp - <IoPageRead+>;addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "andb $, -(%ebp);movl %ecx, -(%ebp);jmp - <IoPageRead+>;cmpw $, %ax;je - <IoPageRead+>": 1,
                "addl $, %ebx;orl $, -(%ebp);xorl %edi, %edi;cmpl %edi, -(%ebp);leal -(%ebp), %eax": 1,
                "jge  <IoPageRead+>;movl %esi, -(%ebp);jmp  <IoPageRead+>;movw %ax, -(%ebp);leal -(%ebp), %eax": 1,
                "jmp - <IoPageRead+>;movl , %eax;movl %eax, -(%ebp);leal (%eax), %edx;movb (%eax), %cl": 1,
                "movl %eax, -(%ebp);leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl": 2,
                "jne  <IoPageRead+>;leal -(%ebp), %eax;pushl %eax;calll *;popl %ecx": 2,
                "popl %ecx;cmpb $, -(%ebp);jne  <IoPageRead+>;orb $, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jmp - <IoPageRead+>;movw $, -(%ebp);movl $, -(%ebp);jmp - <IoPageRead+>": 1,
                "addb %ch, (%esi);xorb $, %al;addb %ch, (%ecx);incl %edx;addb %bl, (%ebx)": 1,
                "incl %ebx;addb %dh, (%esi);decl %edx;incl %ebx;addb %ch, %dh": 1,
                "movl %esi, (%ebp);calll  <RtlAnsiCharToUnicodeChar>;movl (%ebp), %ecx;movw %ax, (%ecx);movl (%ebp), %eax": 1,
                "jne  <_snwprintf+>;xorl %edx, %edx;testb $, %bl;jne  <_snwprintf+>;testl %esi, -(%ebp)": 1,
                "cmpl $, %ecx;movl %ebx, -(%ebp);movl %eax, %ebx;movl %edx, %edi;jg  <mbtowc+>": 1,
                "movb %cl, (%esi);decl %esi;jmp - <mbtowc+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "jle - <IoPageRead+>;pushl -(%ebp);movl -(%ebp), %eax;leal -(%ebp), %esi;calll - <IoPageRead+>": 1,
                "movzwl %bx, %eax;subl $, %eax;je - <IoPageRead+>;subl $, %eax;je - <IoPageRead+>": 1,
                "leal (%ebx), %eax;pushl %eax;calll  <mbtowc+>;movb $, (%esi);jmp - <KeSetKernelStackSwapEnable+>": 1,
                "calll - <KeFlushEntireTb+>;testl %eax, %eax;je  <mbtowc+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;pushl %ebx;movl %eax, -(%ebp);calll *;movl $, %ebx": 1,
                "incl ;calll - <PsIsThreadTerminating+>;movl (%ebp), %edi;pushl $;movl %eax, %esi": 1,
                "pushl %esi;movl %ebx, (%edi);calll - <PsIsThreadTerminating+>;movb -(%ebp), %cl;calll *": 1,
                "calll *;movl %edi, %ecx;calll - <IoAllocateIrp+>;movl %esi, %ecx;shll $, %ecx": 1,
                "jb  <mbtowc+>;je  <mbtowc+>;pushl $;pushl %edi;pushl %esi": 1,
                "orl $, (%eax);testb $, (%edi);jne  <KeIsAttachedProcess+>;xorl %eax, %eax;incl %eax": 1,
                "jne  <KeIsAttachedProcess+>;xorl %eax, %eax;incl %eax;popl %edi;popl %esi": 1,
                "pushl %esi;movl (%eax), %esi;movl (%esi), %edx;pushl %edi;movl (%esi), %edi": 1,
                "shll $, %ecx;addl $, %eax;andl $, %eax;leal (%ecx), %edi;cmpl %eax, %edi": 1,
                "addl $, %eax;andl $, %eax;leal (%ecx), %edi;cmpl %eax, %edi;movl %ecx, -(%ebp)": 1,
                "je  <mbtowc+>;testw $, %di;je  <mbtowc+>;andl $, -(%ebp);testb $, (%edi)": 1,
                "pushl $;pushl %ebx;calll - <PsIsThreadTerminating+>;cmpl $, (%esi);jne - <PsIsThreadTerminating+>": 1,
                "testb $, (%ebx);je  <IoSetFileOrigin+>;xorl %ebx, %ebx;jmp - <mbtowc+>;nop": 1,
                "retl $;testb $-, -(%ebp);movl $, -(%ebp);je - <mbtowc+>;jmp - <IoPageRead+>": 1,
                "pushl %esi;movl %ecx, %esi;jne  <IoSetFileOrigin+>;movb , %al;popl %esi": 1,
                "addb %bh, %bh;jmpl *-(%edi);cmc;pushl %ecx;addb %bh, %bh": 1,
                "jmpl *-(%edi);cmc;pushl %ecx;addb %bh, %bh;cmc": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %ebx;calll  <RtlImageDirectoryEntryToData+>": 1,
                "movzwl (%ebp), %edx;movl (%ebp), %ecx;cmpl (%ecx), %edx;jae  <_snwprintf+>;movl (%ecx,%edx,), %eax": 1,
                "je  <_snwprintf+>;pushl %esi;movl , %esi;pushl %edi;movl (%ebp), %edi": 1,
                "je  <InbvNotifyDisplayOwnershipLost+>;addl %edi, %eax;popl %edi;popl %esi;popl %ebp": 1,
                "incl (%eax);addb %al, (%eax);addb %dl, (%edi);addb %al, (%eax);addb %ch, -(%ecx)": 1,
                "movl $, %eax;addb $, %al;addb %bh, %bh;ljmpl *;addl %edx, (%edx)": 1,
                "pushl %edx;addb %cl, -(%eax);decl %esi;addb $, %al;addb %dl, %bh": 1,
                "testl %eax, %eax;jne - <IoAllocateMdl+>;jmp  <IoSetFileOrigin+>;pushl $;pushl %esi": 1,
                "jne - <IoAllocateMdl+>;jmp  <IoSetFileOrigin+>;pushl $;pushl %esi;calll  <ExFreePoolWithTag>": 1,
                "pushl $;pushl %esi;calll  <ExFreePoolWithTag>;jmp - <IoFreeMdl+>;pushl -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl , %edx;movl (%ebp), %ecx;pushl %ebx": 1,
                "orl %ecx, %eax;orl $, %eax;cmpl , %edi;jbe  <RtlImageDirectoryEntryToData+>;cmpl $, %edi": 1,
                "jbe  <RtlImageDirectoryEntryToData+>;cmpl $, %edi;jb  <RtlImageDirectoryEntryToData+>;cmpl , %edi;jbe  <RtlImageDirectoryEntryToData+>": 1,
                "popl %edi;leal (%ecx,%eax,), %eax;incl (%eax);popl %esi;popl %ebx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <MmUnlockPages+>;jmp - <RtlImageDirectoryEntryToData+>;nop": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <MmCreateMdl+>;cmpl $, (%eax)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;addl $, %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 12,
                "testb $, (%esi);jne  <MmCommitSessionMappedView+>;popl %edi;movl %esi, (%eax);popl %esi": 1,
                "movl $, (%ebp);movl (%ebp), %esi;pushl $;movl %esi, %eax;shll $, %eax": 1,
                "calll - <ExReleaseResourceLite+>;sti;xorl %esi, %esi;cmpl %esi, -(%ebp);jne  <ExInitializeZone+>": 1,
                "jmp - <FsRtlLookupPerStreamContextInternal+>;andl %ecx, -(%ebp);jmp - <FsRtlLookupPerStreamContextInternal+>;nop;nop": 1,
                "pushl %edi;sti;movl $, %esi;xorl %edi, %edi;pushl %esi": 1,
                "pushl %edi;calll  <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, -(%ebp);je  <IoSetFileOrigin+>": 1,
                "pushl %esi;calll - <MmCreateMdl+>;jmp - <ExAcquireResourceSharedLite+>;xorb %al, %al;jmp - <ExAcquireResourceSharedLite+>": 1,
                "movl %eax, ;jmp - <CcPurgeCacheSection+>;cmpw $, (%ebx);je - <CcPurgeCacheSection+>;cmpl %esi, (%ebx)": 1,
                "movl (%esi), %ecx;testb $, %cl;je  <MmCreateMdl+>;testb $, (%ebp);jne  <MmCreateMdl+>": 1,
                "addl %edx, %eax;jmp - <PsChargeProcessPagedPoolQuota+>;cmpb $, (%ebp);jne  <MmCreateMdl+>;cmpl , %ecx": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;popl %ebp;retl $;cmpb %al, -(%ebp)": 1,
                "popl %ebp;retl $;cmpb %al, -(%ebp);jne - <FsRtlLookupPerStreamContextInternal+>;cmpb $, (%ebp)": 1,
                "calll - <ExAllocatePoolWithQuotaTag>;movl %eax, %edx;movl %edx, -(%ebp);orl $-, -(%ebp);testl %edx, %edx": 1,
                "pushl %eax;calll  <ExAllocatePoolWithTag>;movl %eax, %edx;jmp - <PsGetProcessId+>;orb $, (%edx)": 1,
                "jmp - <IoFreeIrp+>;movl %eax, (%esi);jmp  <ExLocalTimeToSystemTime+>;movl , %eax;jmp  <ExLocalTimeToSystemTime+>": 1,
                "cmpl (%esi), %eax;ja  <ExLocalTimeToSystemTime+>;popl %edi;popl %esi;jmpl *": 1,
                "cmpl %edi, %ecx;je - <RtlFindClearBitsAndSet+>;cmpl %edi, (%ecx);jne  <PsGetProcessId+>;movl %ecx, (%edx)": 1,
                "je - <RtlFindClearBitsAndSet+>;cmpl %edi, (%ecx);jne  <PsGetProcessId+>;movl %ecx, (%edx);movl (%ecx), %edx": 1,
                "addl $, %eax;cmpl %edi, %eax;jbe - <PsGetProcessId+>;jmp  <IoSetFileOrigin+>;subl -(%ebp), %eax": 1,
                "nop;adcb %fs:(%ebx), %dl;jns  <PsGetProcessId+>;pushl %ebx;addb %ch, -(%ecx)": 1,
                "cmpl %esi, %edi;jle - <PsGetThreadProcess+>;movl %esi, %edi;jmp - <PsGetThreadProcess+>;movl %ds:, %eax": 1,
                "movl (%ecx), %ebx;movl %ebx, (%edx);movl (%ecx), %edx;jmp - <PsGetProcessId+>;nop": 1,
                "addb %al, -(%ebx);shll $, %ebx;movl %ebx, %edi;shll $, %edi;cmpl (%ebp), %edi": 1,
                "movb %bl, %cl;calll *;movl (%ebp), %eax;andb $-, (%eax);jmp - <MmUnlockPages+>": 1,
                "pushl %edi;calll - <CcUninitializeCacheMap+>;jmp - <ObfDereferenceObject+>;cmpw $, %cx;je  <IoSetFileOrigin+>": 1,
                "movb %al, %cl;movb %cl, -(%ebp);movl , %eax;subl , %eax;cmpl %ebx, %eax": 1,
                "movl -(%ebp), %ebx;movw (%edx), %cx;movzwl %cx, %eax;cmpl , %eax;jae  <KeInsertHeadQueue+>": 1,
                "movw (%edx), %cx;movzwl %cx, %eax;cmpl , %eax;jae  <KeInsertHeadQueue+>;cmpw $, %cx": 1,
                "jmp  <IoSetFileOrigin+>;cmpl $, -(%edx);je - <PsGetProcessId+>;incl ;jmp - <PsGetProcessId+>": 1,
                "cmpw %dx, %cx;jne  <IoSetFileOrigin+>;sti;popl %ebp;retl $": 1,
                "pushl %edi;movl %esi, (%ebp);movl %eax, -(%ebp);jne  <RtlFindNextForwardRunClear+>;movl (%ebp), %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;movl %edi, (%ebp);movl %eax, -(%ebp);jne  <ExLocalTimeToSystemTime+>": 1,
                "shrl $, %esi;incl %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %ebx, (%eax);movb (%ebp), %cl;movl , %ebx;calll *%ebx;xorl %esi, %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;addl $-, %eax": 4,
                "addl (%esi), %eax;movb $, (%edx);movl %eax, (%edx);movl (%ebp), %eax;movl %eax, (%edx)": 1,
                "movl %eax, (%ecx);movl %edi, (%ecx);movl (%ebp), %ecx;calll *;movl $, %ecx": 1,
                "orl $, (%eax);movl , %edi;movl $, -(%ebp);movl $, -(%ebp);pushl $": 1,
                "pushl %eax;pushl $;calll - <KeWaitForMultipleObjects>;cmpl %ebx, ;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, ;movl %eax, -(%ebp);je  <ExLocalTimeToSystemTime+>;xorl %eax, %eax;movl (,%eax,), %ecx": 1,
                "calll *;movl , %ecx;cmpl %ebx, %ecx;movb %al, -(%ebp);je  <IoSetFileOrigin+>": 1,
                "leal (%eax,%eax,), %edx;leal (%ecx,%edx,), %edx;testb $, (%edx);jne  <FsRtlResetLargeMcb+>;cmpl $, ": 1,
                "pushl %eax;pushl %edx;calll  <ExLocalTimeToSystemTime+>;addl %eax, -(%ebp);xorl %esi, %esi": 1,
                "addl %eax, -(%ebp);xorl %esi, %esi;cmpl %esi, ;jne  <IoSetFileOrigin+>;cmpl $, -(%ebp)": 1,
                "cmpl , %ecx;jbe  <ExLocalTimeToSystemTime+>;cmpl $, -(%ebp);jae - <PsGetProcessJob+>;movl , %ecx": 1,
                "cmpl $, -(%ebp);jae - <PsGetProcessJob+>;movl , %ecx;xorl %ebx, %ebx;testl %ecx, %ecx": 1,
                "andl $, %eax;andl $, %ecx;shll $, %eax;orl %eax, %ecx;movl , %eax": 1,
                "movl %ecx, -(%ebp);movl (%ecx), %ebx;movl (%ebx), %eax;testb $, %al;jne  <KeInitializeQueue+>": 1,
                "testb $, %al;jne  <ExLocalTimeToSystemTime+>;movl , %eax;shll $, %eax;movl %eax, %ecx": 1,
                "testb %al, %al;je  <IoSetFileOrigin+>;andl $, -(%ebp);movl %esi, %edx;subl $, %esi": 1,
                "movw $, (%esi);movl , %ecx;leal (,%ecx,), %ecx;movw %cx, (%esi);cmpw %ax, (%edi)": 1,
                "leal (%edi,%eax,), %eax;movl %eax, %edx;movl %eax, (%ebp);movl $, %eax;andl %eax, %edx": 1,
                "ja  <RtlFindNextForwardRunClear+>;movl -(%ebp), %eax;addl $, %edi;addl $, %eax;cmpl $, ": 1,
                "xorl %eax, %eax;popl %edi;popl %ebx;leave;retl $": 3,
                "movl (%ebx), %eax;movl %eax, ;movl %ecx, (%eax);cmpl $, ;movl (%ebx), %esi": 1,
                "addl %edi, (%esi);cmpl $, %eax;jb  <IoSetFileOrigin+>;movl -(%ebp), %eax;xorl %ecx, %ecx": 1,
                "xorl %ecx, %ecx;shldl $, %eax, %ecx;movl %ecx, -(%ebp);shll $, %eax;movl %eax, -(%ebp)": 1,
                "je  <ExLocalTimeToSystemTime+>;cmpl -(%ebp), %ecx;movl , %edi;leal (%eax,%eax,), %edx;leal (%edi,%edx,), %edi": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);leal (%eax), %ecx;andl $, %ecx;shll $, %ecx": 1,
                "andb %ch, -(%ebx,%edi,);xorl %esi, %esi;xorb %cl, %cl;movl %esi, ;calll *": 1,
                "cmpl %ebx, %eax;je - <ExAcquireSharedWaitForExclusive+>;cmpl %edi, (%eax);jne - <FsRtlRemoveLargeMcbEntry+>;incl (%eax)": 1,
                "jmp - <ExAcquireSharedWaitForExclusive+>;nop;nop;nop;nop": 2,
                "movl -(%esi), %ecx;subl (%esi), %ecx;movl (%esi), %eax;addl -(%esi), %ecx;cmpl , %ecx": 1,
                "jb  <RtlFindNextForwardRunClear+>;movl (%ebp), %eax;movl (%eax), %eax;addl , %eax;movl %eax, (%esi)": 1,
                "pushl %edi;pushl -(%ebp);pushl $;pushl %eax;calll - <IoGetBaseFileSystemDeviceObject+>": 6,
                "pushl $;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <IoGetBaseFileSystemDeviceObject+>": 5,
                "jne  <IoSetFileOrigin+>;movl $, -(%ebp);movb $, -(%ebp);cmpb $, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "andl $, -(%ebp);cmpl $, -(%ebp);je  <ExLocalTimeToSystemTime+>;movl -(%ebp), %eax;cmpw $, (%eax)": 1,
                "movl -(%ebp), %eax;cmpw $, (%eax);ja  <IoSetFileOrigin+>;leal -(%ebp), %eax;pushl %eax": 2,
                "incl ;addl %eax, ;incw (%ebx);incl (%ebx);xorl %ecx, %ecx": 1,
                "popl %esi;jmp - <ExLocalTimeToSystemTime+>;nop;nop;nop": 2,
                "cmpl $, (%ebx);jb  <RtlFindNextForwardRunClear+>;movl (%ebx), %eax;testl %eax, %eax;je  <RtlFindNextForwardRunClear+>": 1,
                "ja  <IoSetFileOrigin+>;leal -(%ebp), %eax;pushl %eax;calll - <IoGetBaseFileSystemDeviceObject+>;movl -(%ebp), %eax": 1,
                "jb - <IoGetBaseFileSystemDeviceObject+>;movl (%eax), %eax;jmp - <IoGetBaseFileSystemDeviceObject+>;cmpl $, (%eax);jb  <ExLocalTimeToSystemTime+>": 1,
                "movl (%eax), %eax;jmp - <IoGetBaseFileSystemDeviceObject+>;movl %ecx, (%ebp);jmp - <ExLocalTimeToSystemTime+>;nop": 1,
                "movb $, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);xorl %ebx, %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;calll - <KeWaitForSingleObject>": 5,
                "pushl %ebx;pushl $;pushl $;calll - <KeWaitForSingleObject>;calll *": 1,
                "testb $, (%eax);jne  <IoSetFileOrigin+>;leal (%esi), %eax;pushl %eax;leal (%esi), %ebx": 1,
                "testl %eax, %eax;jl  <KeInsertHeadQueue+>;leal (%esi), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %ebx;pushl %esi;pushl $;leal (%esi), %eax;pushl %eax": 1,
                "pushl %esi;pushl (%ebp);movl %edi, %eax;shll $, %eax;pushl %eax": 1,
                "shrl $, %ecx;andl %ebx, %ecx;testb $, -(%ecx);je  <ExLocalTimeToSystemTime+>;testb $, (%edi)": 1,
                "leal -(%ebp), %eax;pushl $;pushl %eax;calll - <RtlClearBits+>;movl (%ebp), %ecx": 1,
                "leal (%eax,%eax,), %eax;leal (%edx,%eax,), %eax;cmpl $, (%eax);je  <IoSetFileOrigin+>;cmpl $, -(%ebp)": 1,
                "xorl %ebx, %ebx;pushl %ebx;pushl %edi;pushl %esi;pushl %eax": 1,
                "popl %ebp;retl $;pushl %edi;pushl %eax;pushl (%ebp)": 1,
                "movl (%ebp), %esi;movl %esi, (%ebx);shrl $, %esi;andl $, %esi;subl $, %esi": 1,
                "pushl %eax;pushl (%ebp);calll  <ExLocalTimeToSystemTime+>;movb %bl, %cl;calll *": 1,
                "pushl (%ebp);calll  <ExLocalTimeToSystemTime+>;movb %bl, %cl;calll *;popl %ebx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);movl (%ebp), %eax": 5,
                "movb %al, -(%ebp);movl (%ebp), %eax;addl $, %edi;movl (%edi), %ebx;addl %eax, %ecx": 1,
                "testl %esi, %esi;movl , %eax;je  <ExLocalTimeToSystemTime+>;movl , %eax;testl %eax, %eax": 1,
                "testb %al, %al;jne - <PsChargeProcessPagedPoolQuota+>;jmp  <PoRegisterDeviceForIdleDetection+>;cmpl $, %ebx;je  <ExLocalTimeToSystemTime+>": 1,
                "rolb $, (%eax,%eax);subb $, %al;addb %al, %al;nop;nop": 1,
                "movl , %esi;movl $, (%edx);movl %esi, (%edx);movl %edx, (%esi);movl %edx, ": 1,
                "jmp - <KeInitializeTimer+>;nop;nop;nop;nop": 1,
                "pushl $;pushl $;pushl $;pushl (%ebp);pushl (%ebp)": 2,
                "pushl (%ebp);calll - <MmMapLockedPagesSpecifyCache>;popl %ebp;retl $;xorl %eax, %eax": 1,
                "testb %al, %al;js - <MmCreateMdl+>;testl %ecx, %ecx;je  <IoSetFileOrigin+>;movl (%esi), %eax": 1,
                "andl $, %edi;jne - <ExLocalTimeToSystemTime+>;cmpl $, ;jne  <IoSetFileOrigin+>;testl %edi, %edi": 1,
                "je  <wcsstr+>;movw (%ecx), %dx;testw %dx, %dx;je  <PoRegisterDeviceForIdleDetection+>;movzwl (%eax,%ecx), %ebx": 1,
                "cmpw $, (%ecx);je  <PoRegisterDeviceForIdleDetection+>;incl %edi;incl %edi;movw (%edi), %dx": 1,
                "jne - <wcsstr+>;jmp - <wcsstr+>;nop;pushl %eax;subl %edx, (%ebx)": 1,
                "nop;pushl %eax;subl %edx, (%ebx);arpl %bp, (%ecx);pushl %ebx": 1,
                "jne  <IoSetFileOrigin+>;movb (%esi), %al;testb $, %al;je  <wcsstr+>;orb $, %al": 1,
                "movb (%esi), %al;testb $, %al;je  <wcsstr+>;orb $, %al;movb %al, (%esi)": 1,
                "calll *;calll *;movl , %ecx;subl , %ecx;movl (%ebp), %edx": 1,
                "subl %edx, ;movl $, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "xorl %edx, %edx;movl %edi, %ecx;calll - <IoAllocateIrp+>;xorl %eax, %eax;movw (%edi), %ax": 2,
                "calll *;movl (%ebp), %eax;movl %eax, (%ebx);movl , %esi;movl (%ebp), %eax": 1,
                "pushl -(%ebp);pushl %edi;calll - <RtlFindClearBitsAndSet+>;movl (%ebp), %ecx;movl %esi, (%eax)": 1,
                "shrl $, %ecx;andl $, %ecx;movl %esi, (%eax,%ecx,);shrl $, %eax;andl $, %eax": 1,
                "movl $, %edx;jne  <IoSetFileOrigin+>;movl , %edi;movl %edi, %esi;shrl $, %esi": 1,
                "andl %ebx, %esi;subl %edx, %esi;movl $, %ecx;subl %esi, %ecx;sarl $, %ecx": 1,
                "leal (,%ebx,), %ecx;movl %ecx, %ebx;shrl $, %ecx;leal (%eax,%edi,), %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);cmpl $, ": 1,
                "rep  movsb (%esi), %es:(%edi);cmpl $, ;jne  <IoSetFileOrigin+>;movl $, %esi;leal (%eax), %edi": 1,
                "arpl %ax, (%eax);addb %al, (%eax);movl (%edx), %edx;leal (%eax), %ecx;movl %esi, (%ecx)": 1,
                "cmpl $, %edx;leal (%esi), %ecx;jae  <IoSetFileOrigin+>;cmpl %ebx, %edx;je  <wcsstr+>": 1,
                "movb %cl, (%esi);movb (%eax), %al;movb %al, (%esi);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %esi;pushl (%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %eax, %edi;movl -(%ebp), %eax;movl %eax, (%esi);calll - <KeDetachProcess>;movl %edi, %eax": 1,
                "lock;andl %ecx, (%eax);movl $, %ecx;lock;orl %ecx, (%eax)": 1,
                "lock;orl %ecx, (%eax);xorl %ecx, %ecx;incl %ecx;movl %ecx, (%esi)": 1,
                "movl %eax, (%eax);leal (%esi), %eax;movl %ecx, (%esi);movl %ebx, (%esi);movl %ebx, (%esi)": 1,
                "movb %cl, (%esi);movb $, (%esi);movl %ebx, (%esi);movl %eax, (%eax);movl %eax, (%eax)": 1,
                "leal (%esi), %eax;pushl %eax;calll - <KeQuerySystemTime>;movl , %eax;movl %eax, (%esi)": 1,
                "movl $, -(%ebp);movl (%ecx), %eax;pushl $;shrl $, %eax;pushl %ecx": 1,
                "movl %eax, -(%ebp);movl $, (%ecx);calll - <PsIsThreadTerminating+>;movl -(%ebp), %ecx;calll - <IoAllocateIrp+>": 1,
                "calll  <PsSetProcessWindowStation+>;leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);cmpl %ebx, ": 1,
                "movl %eax, (%ebp);movl (%edi), %eax;movzwl %ax, %eax;addl %ecx, %eax;xorl %edx, %edx": 1,
                "je  <wcsstr+>;movl , %eax;pushl %esi;movl (%eax), %esi;pushl %edi": 1,
                "addl %ecx, -(%ebp);movl -(%ebp), %ecx;cmpl (%ebp), %ecx;jbe  <FsRtlIsTotalDeviceFailure+>;movl $, -(%ebp)": 1,
                "pushl %eax;calll  <ExFreePoolWithTag>;testl %esi, %esi;jne  <wcsstr+>;movl -(%ebp), %esi": 1,
                "jmp  <wcsstr+>;pushl (%ebp);pushl %esi;pushl %ebx;calll  <SeTokenIsWriteRestricted+>": 1,
                "pushl %ebx;calll  <SeTokenIsWriteRestricted+>;xorl %eax, %eax;movl %eax, (%ebx);movl %edi, (%ebx)": 1,
                "movl %eax, (%ebx);movw %ax, (%ebx);movw %ax, (%ebx);cmpl , %esi;jne  <wcsstr+>": 1,
                "calll - <wcsstr+>;movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $;nop": 1,
                "pushl %esi;calll - <PsIsThreadTerminating+>;movl %eax, %edi;movl %edi, -(%ebp);movl (%ebp), %eax": 1,
                "movl %ecx, -(%ebp);cmpl (%ebp), %ecx;jbe - <wcsstr+>;movl $, -(%ebp);leal (%ebx), %eax": 1,
                "incl %eax;testb %dl, %dl;jne - <wcsstr+>;subl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "jbe  <FsRtlIsTotalDeviceFailure+>;movl $, -(%ebp);jmp - <wcsstr+>;nop;nop": 1,
                "movl %edx, (%esi);movl (%edi), %eax;mull ;movl %eax, (%esi);movl %edx, (%esi)": 2,
                "movl %edx, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 1,
                "movsbl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax": 2,
                "movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);xorl %eax, %eax": 2,
                "popl %esi;popl %ebp;retl $;leal -(%ebp), %ecx;calll *": 1,
                "movl -(%ebp), %edi;movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "pushl %esi;calll  <PsSetProcessWindowStation+>;movl %eax, -(%ebp);testl %eax, %eax;jl  <FsRtlIsTotalDeviceFailure+>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jl  <FsRtlIsTotalDeviceFailure+>;movl -(%ebp), %eax;movzwl (%eax), %esi": 1,
                "movl %esi, -(%ebp);testl %esi, %esi;je - <wcsstr+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <wcsstr+>;incl (%ebx);movl -(%ebp), %eax": 1,
                "nop;nop;repne  popl %ds;pushl %ebx;addb %al, (%edi)": 1,
                "pushl %ecx;addb %bh, %bh;incl -(%eax,%ebp,);pushl %ecx;addb %bh, %bh": 1,
                "addb %bh, %bh;jmpl *-(%eax);pushl %ecx;addb %ch, -(%ecx);pushl %ecx": 1,
                "calll *;popl %esi;jmp  <SeTokenIsWriteRestricted+>;movl $, %edi;jmp - <PsGetProcessId+>": 1,
                "je - <PsReturnProcessNonPagedPoolQuota+>;jmp - <PsGetProcessInheritedFromUniqueProcessId+>;movl %edi, (%edx);jmp - <PsReturnProcessNonPagedPoolQuota+>;movsbl %dl, %ebx": 1,
                "movsbl %dl, %ebx;movb $, (%ecx);leal (%edi,%ebx,), %edi;movl (%edi), %ebx;leal (%eax), %esi": 1,
                "je  <RtlEnumerateGenericTableAvl+>;andl $, (%eax);leal (%eax), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %ecx;pushl %eax;calll - <RtlEnumerateGenericTableWithoutSplayingAvl>;popl %ebp;retl $": 1,
                "cmpl %eax, (%eax);je  <RtlEnumerateGenericTableAvl+>;movl (%ebp), %edx;calll - <KiDispatchInterrupt+>;movb (%ebp), %cl": 1,
                "pushl %edi;movl %fs:, %eax;movl (%eax), %ebx;movl %ebx, -(%ebp);movl $, %eax": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl (%ebp), %edi;movl (%edi), %eax": 1,
                "andl $, %ecx;calll - <wcscmp+>;movl (%edi), %ecx;calll - <wcscmp+>;movl (%edi), %esi": 1,
                "calll - <wcscmp+>;movl , %ecx;leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %eax;movl (%eax), %ecx": 1,
                "leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %eax;movl (%eax), %ecx;orl $, (%eax);andl $, %ecx": 1,
                "je  <RtlEnumerateGenericTableAvl+>;pushl %edi;calll - <PsGetProcessInheritedFromUniqueProcessId+>;calll  <RtlEnumerateGenericTableAvl+>;popl %edi": 1,
                "movl (%ebp), %esi;pushl %edi;leal (%esi), %edi;movl (%edi), %eax;testb $, %al": 1,
                "leal (%esi), %ecx;andl %ebx, %edi;subl $, %edi;movl %ecx, -(%ebp);calll *": 1,
                "orl %ecx, (%eax);pushl %esi;calll  <SeTokenIsWriteRestricted+>;movl , %eax;movl (%eax), %eax": 1,
                "movl (%esi), %edi;testl %edi, %edi;je  <RtlEnumerateGenericTableAvl+>;pushl %edi;calll - <PsReturnProcessNonPagedPoolQuota+>": 1,
                "je  <RtlEnumerateGenericTableAvl+>;pushl %edi;pushl %esi;calll - <PsGetProcessJob+>;pushl $": 1,
                "popl %esi;leave;retl $;leal (%edi), %eax;cmpl %eax, (%eax)": 1,
                "leal (%edi), %eax;cmpl %eax, (%eax);je - <KeTerminateThread+>;jmp  <IoSetFileOrigin+>;nop": 1,
                "jb - <RtlEnumerateGenericTableAvl+>;popl %ebx;cmpl %edx, %esi;jne  <IoSetFileOrigin+>;popl %edi": 1,
                "pushl %eax;movl (%edi), %eax;shll $, %eax;pushl %eax;calll - <PsChargeProcessNonPagedPoolQuota+>": 1,
                "pushl %eax;calll - <PsChargeProcessNonPagedPoolQuota+>;movb (%ebp), %cl;calll *;jmp - <RtlEnumerateGenericTableAvl+>": 1,
                "cmpl , %eax;ja  <RtlEnumerateGenericTableAvl+>;movl (%ebp), %edx;addl $, %edx;cmpl $, (%edx)": 1,
                "movb -(%ebp), %cl;calll *;leave;retl $;pushl %esi": 1,
                "movl %edx, (%ebp);movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);testb $, (%esi)": 1,
                "jne  <IoSetFileOrigin+>;cmpl %edi, %eax;jne  <IoSetFileOrigin+>;movl , %edi;shrl $, %edi": 1,
                "andl %ebx, %edi;subl $, %edi;calll *;pushl $;pushl $-": 1,
                "andl %ebx, %eax;subl $, %eax;pushl %eax;pushl %esi;calll - <ExLocalTimeToSystemTime+>": 1,
                "calll *;popl %ebx;jmp - <RtlEnumerateGenericTableAvl+>;nop;nop": 1,
                "pushl (%ebp);movl %ecx, (%eax);calll *(%ebp);movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movzbl (%esi), %eax;decl %eax;je  <FsRtlGetNextFileLock+>": 1,
                "pushl %eax;pushl (%esi);movl (%ebp), %esi;pushl %esi;calll - <FsRtlFastUnlockAll>": 1,
                "movl %esp, %ebp;movl , %edx;movl (%ebp), %eax;xorl %ecx, %ecx;addl %edx, %eax": 2,
                "testb $, %al;jne  <MmForceSectionClosed+>;testb $, %al;jne  <IoSetFileOrigin+>;movl -(%ebp), %edx": 1,
                "jmp  <MmForceSectionClosed+>;nop;nop;nop;nop": 1,
                "pushl %eax;pushl %ebx;pushl (%ebp);pushl $;calll - <MmUnlockPages+>": 1,
                "calll *;movb %al, (%ebp);movl (%ebp), %eax;subl $, %eax;je  <IoSetFileOrigin+>": 1,
                "je  <IoSetFileOrigin+>;decl %eax;jne  <IoSetFileOrigin+>;movl (%edi), %eax;andl $, %eax": 1,
                "calll *;jmp  <IoSetFileOrigin+>;xorb %al, %al;jmp - <CcGetFlushedValidData+>;movb $, (%eax)": 1,
                "movb $, (%eax);movl (%eax), %eax;cmpl %edi, %eax;jne - <MmForceSectionClosed+>;movl %esi, (%esi)": 1,
                "jmp - <KeInitializeDpc+>;pushl $;popl %eax;jmp - <KeInitializeDpc+>;andl $, (%edi)": 1,
                "movl %eax, (%edi);jmp - <KeInitializeDpc+>;testb $, (%edi);je - <KeInitializeDpc+>;jmp - <KeInitializeDpc+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);movl (%ebp), %eax;pushl (%ebp)": 2,
                "movl %esp, %ebp;pushl (%ebp);movl (%ebp), %eax;pushl (%ebp);movzwl (%eax), %ecx": 1,
                "movzwl (%eax), %ecx;pushl %ecx;pushl (%eax);pushl $;calll  <_vsnprintf+>": 1,
                "calll  <_vsnprintf+>;popl %ebp;retl $;nop;cli": 1,
                "movb $, -(%ebp);movl %esi, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %esi;xorl %eax, %eax;cmpl %eax, -(%ebp);je  <FsRtlGetNextFileLock+>;movl -(%ebp), %ebx": 1,
                "je  <FsRtlGetNextFileLock+>;movl -(%ebp), %ebx;movl $, -(%ebp);cmpl -(%ebp), %ebx;jae  <MmForceSectionClosed+>": 1,
                "jne  <MmForceSectionClosed+>;movl (%ebx), %eax;testb $, %al;jne  <IoSetFileOrigin+>;testb $, %ah": 1,
                "shrl $, %eax;movl %eax, -(%ebp);leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %esi;xorl %eax, %eax": 1,
                "testb $, (%esi);je  <MmForceSectionClosed+>;testb $, (%esi);jne - <PsGetProcessId+>;orl $, (%esi)": 1,
                "pushl %esi;calll - <MmForceSectionClosed+>;jmp - <KeCancelTimer+>;orl $, (%esi);cmpl %eax, -(%ebp)": 1,
                "calll - <MmForceSectionClosed+>;jmp - <KeCancelTimer+>;orl $, (%esi);cmpl %eax, -(%ebp);jne - <MmForceSectionClosed+>": 1,
                "jmp - <KeCancelTimer+>;orl $, (%esi);cmpl %eax, -(%ebp);jne - <MmForceSectionClosed+>;jmp - <MmForceSectionClosed+>": 1,
                "jne  <IoSetFileOrigin+>;movl %edi, -(%ebp);movb -(%ebp), %al;popl %esi;jmp - <MmFlushImageSection+>": 1,
                "movb -(%ebp), %al;popl %esi;jmp - <MmFlushImageSection+>;testb $, (%ebp);jne  <MmForceSectionClosed+>": 1,
                "testb $, (%ebp);jne  <MmForceSectionClosed+>;cmpl %edi, (%ebp);jne  <MmForceSectionClosed+>;movl (%ebp), %ecx": 1,
                "pushl %ebx;movl (%ecx), %ebx;movl %edi, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax": 1,
                "jg  <wcsncmp+>;leal (%ebx,%eax,), %ebx;movl (%ebp), %eax;movl %eax, (%ebx);movw -(%ebp), %ax": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movw -(%ebp), %ax;movw %ax, (%ebx);movb (%ebp), %al": 1,
                "testl %esi, %esi;je - <IoGetBaseFileSystemDeviceObject+>;leal (%esi), %ecx;calll  <wcsncmp+>;jmp - <IoGetBaseFileSystemDeviceObject+>": 1,
                "movl %ebx, -(%ebp);movl (%ebx), %esi;pushl $;popl %edx;movl %esi, %eax": 1,
                "movl %esi, %eax;andl %edx, %eax;addl %edx, %eax;cmpl %edx, %eax;movl %esi, -(%ebp)": 1,
                "leal -(%ebx), %eax;movl %eax, (%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;movl (%ebp), %edx": 3,
                "jl  <MmForceSectionClosed+>;movl (%ebp), %ecx;addl $, %ecx;testl %esi, %esi;je  <IoSetFileOrigin+>": 1,
                "addl $, %ecx;testl %esi, %esi;je  <IoSetFileOrigin+>;orl $, %esi;movl %esi, (%ecx)": 1,
                "movl , %ecx;movb %al, %bl;leal (%esi), %eax;movl $, (%eax);movl %ecx, (%eax)": 1,
                "pushl (%esi);leal (%esi), %eax;pushl (%esi);pushl %eax;calll - <KeSetTimer>": 2,
                "calll - <KeSetTimer>;pushl %esi;pushl (%esi);calll - <MmForceSectionClosed+>;cmpl $, (%esi)": 1,
                "jne  <MmForceSectionClosed+>;calll - <KeResetEvent+>;movl %esi, %edx;movl $, %ecx;calll - <wcscmp+>": 1,
                "pushl %ecx;pushl %esi;movl %ecx, %esi;cmpl $, (%esi);movl %edx, -(%ebp)": 1,
                "decl (%ebp);je  <wcsncmp+>;movw (%ecx), %ax;testw %ax, %ax;je  <wcsncmp+>": 1,
                "pushl %ecx;movl %ecx, %edx;cmpl $, (%edx);movl %edx, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "cmpl $, (%edx);movl %edx, -(%ebp);jne  <IoSetFileOrigin+>;movl $, %eax;movl -(%ebp), %ecx": 1,
                "je - <PsGetThreadTeb+>;movl %eax, %ecx;shrl $, %ecx;testl %eax, %eax;jns  <wcsncmp+>": 1,
                "addl , %ecx;movl %ecx, -(%ebp);jmp - <PsGetThreadTeb+>;pushl (%ebp);movl (%esi), %eax": 1,
                "movl -(%ebp), %ecx;movl $, %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;jne  <IoSetFileOrigin+>": 1,
                "movl %ebx, (%edi);calll - <InterlockedPushEntrySList>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <wcsncmp+>;pushl $;pushl $": 1,
                "calll *;cmpl %ebx, (%esi);movb %al, %dl;jne  <IoSetFileOrigin+>;andl $, (%edi)": 1,
                "movl %ecx, (%edi);movl %ebx, (%edi);movl %edi, (%ebx);movl %edi, (%ecx);incl (%esi)": 1,
                "incl (%esi);leal (%esi), %ecx;movl %edi, (%esi);calll *;jmp - <MmForceSectionClosed+>": 1,
                "movl (%ebp), %esi;pushl %edi;pushl (%esi);calll  <wcsncmp+>;leal (%esi), %edi": 1,
                "leal (%esi), %eax;pushl %eax;calll - <KeSetEvent>;pushl %edi;calll  <RtlRemoveUnicodePrefix+>": 1,
                "movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;andl $, -(%ebp);addl $, %eax": 1,
                "cmpl %ecx, %eax;movl %eax, -(%ebp);ja  <wcsncmp+>;jmpl *(,%eax,);movl , %ecx": 1,
                "jmpl *(,%eax,);movl , %ecx;andl $, -(%ebp);movzbl %bl, %eax;testb $-, (%ecx,%eax,)": 1,
                "jmp - <wcsncmp+>;popl %edi;popl %esi;movl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <wcsncmp+>;addl $, %esp": 4,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %ebx;movl (%ebp), %edi;int $": 1,
                "pushl $;calll - <_CIsqrt+>;movl , %eax;movl %eax, -(%ebp);movl (%ebp), %edi": 2,
                "je  <IoSetFileOrigin+>;movl -(%ebp), %ecx;calll - <IoQueueWorkItem+>;calll - <_CIsqrt+>;retl $": 1,
                "pushl $;calll - <vDbgPrintExWithPrefix>;popl %ebp;retl;nop": 2,
                "movl %eax, -(%ebp);jge - <wcsncmp+>;orl $-, -(%ebp);jmp - <wcsncmp+>;cmpb $, (%ecx)": 1,
                "jne  <DbgPrint+>;incl %ecx;incl %ecx;andb $, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <DbgPrint+>;movl $, %eax;cmpl %eax, -(%ebp);jle  <DbgPrint+>": 1,
                "movl $, %eax;cmpl %eax, -(%ebp);jle  <DbgPrint+>;movl %eax, -(%ebp);movl $, %eax": 1,
                "je  <DbgPrint+>;movw -(%ebp), %cx;movw %cx, (%eax);jmp  <DbgPrint+>;movl -(%ebp), %ecx": 1,
                "jmp  <DbgPrint+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl $, -(%ebp);jmp - <wcsncmp+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl $, -(%ebp);jmp - <wcsncmp+>;negl %eax": 1,
                "movl %ecx, (%eax);movl $, -(%ebp);jmp - <wcsncmp+>;negl %eax;adcl $, %edx": 1,
                "movl $, -(%ebp);jmp  <PoRegisterDeviceForIdleDetection+>;jmp  <PoRegisterDeviceForIdleDetection+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %ecx;incl %ebx;addb %ah, (%ebx,%edi,);incl %edx;addb %ah, -(%eax)": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);calll *;movb %al, (%ebp);movl (%ebp), %eax": 1,
                "jne  <CcScheduleReadAhead+>;movb (%ebp), %cl;calll *;popl %edi;popl %ebx": 1,
                "movl %eax, (%ecx);movl $, ;movl -(%ebp), %ecx;testl %ecx, %ecx;jne  <IoSetFileOrigin+>": 1,
                "movl , %ebx;calll *%ebx;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;calll *%esi": 1,
                "movl , %ecx;andl , %ecx;incl ;jmp - <IoPageRead+>;testb $, (%esi)": 1,
                "movl -(%ebp), %edx;incl (%edx);movb %al, %cl;calll *;movl $, %edx": 1,
                "movl %esi, (%ebx);calll - <KeReadStateTimer+>;jmp - <CcScheduleReadAhead+>;movl %ecx, (%esi);jmp - <CcScheduleReadAhead+>": 1,
                "sbbl %ebx, %ebx;incl %ebx;movl %ebx, -(%ebp);movl (%esi), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp,%edx,), %esi;movl %esi, -(%ebp);movl %ebx, %edx;movl %edx, -(%ebp);movl %ecx, %eax": 1,
                "incl %ebp;fcoml -(%eax);incl %ebp;loopne ;pushl -(%ebp)": 1,
                "calll - <FsRtlUninitializeFileLock+>;negb %al;sbbl %eax, %eax;incl %eax;orl %eax, -(%ebp)": 7,
                "subl %eax, %esi;movl %esi, -(%ebp);addl %eax, -(%ebp);adcl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;calll - <FsRtlUninitializeFileLock+>;andl $, -(%ebp);jmp - <CcScheduleReadAhead+>;movl (%edi), %esi": 1,
                "subl %edi, %eax;movl -(%ebp), %edi;sbbl %ebx, %edi;cmpl %ecx, %eax;jne - <CcScheduleReadAhead+>": 1,
                "addl %ecx, %edi;movl $, %ecx;addl $, %edi;andl %ecx, %eax;movl %edx, (%esi)": 1,
                "cmpl %eax, ;movb %cl, -(%ebp);jb  <KeDisconnectInterrupt+>;movl , %edx;subl , %edx": 1,
                "jl  <KeDisconnectInterrupt+>;movl (%ebp), %ebx;movl (%ebx), %esi;testl %esi, %esi;je  <CcScheduleReadAhead+>": 1,
                "pushl $;cltd;popl %ecx;idivl %ecx;movl %eax, -(%ebp)": 1,
                "movl (%edx), %edx;andl $-, %edx;movl %edx, -(%ebp);je  <CcScheduleReadAhead+>;testl %eax, %eax": 1,
                "je  <CcScheduleReadAhead+>;movl $, %eax;cmpl %eax, ;jb  <CcScheduleReadAhead+>;movl , %edx": 1,
                "incl %edx;movw %dx, (%eax);movl -(%ebp), %eax;testb $, (%eax);jne  <CcScheduleReadAhead+>": 1,
                "movl -(%ebp), %eax;testb $, (%eax);jne  <CcScheduleReadAhead+>;calll - <IoAllocateIrp+>;movl , %edx": 1,
                "cmpw $, (%edi);jne  <CcScheduleReadAhead+>;cmpl $, (%edi);je  <CcScheduleReadAhead+>;incl ": 1,
                "xorl %ecx, %edi;movl -(%ebp), %ecx;movl %edi, (%eax);subl -(%ebp), %eax;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %edi;sarl $, %eax;movl %edx, (%ebx,%eax,);movl -(%ebp), %eax;addl $, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %edx, -(%ebp);ja  <CcScheduleReadAhead+>;movl (%ebx), %edx;addl (%ebx), %edx": 1,
                "addl (%ebx), %edx;movl (%ebx), %eax;andl $, %edx;leal (%edx,%eax), %edx;shrl $, %edx": 1,
                "movl -(%ebp), %edx;subw %dx, (%ecx);incl ;addl %edx, ;movl %eax, -(%ebp)": 1,
                "leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax;movl (%eax), %ecx;testb $, %cl;je  <CcScheduleReadAhead+>": 1,
                "movl %edx, -(%ebp);jne - <CcScheduleReadAhead+>;andl $, ;cmpl $, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "jmp - <CcScheduleReadAhead+>;movl %edx, %eax;shrl $, %eax;andl $, %eax;subl $, %eax": 1,
                "subl $, %eax;testb $, (%eax);movl %eax, -(%ebp);je  <IoSetFileOrigin+>;movl (%eax), %eax": 1,
                "jne  <CcScheduleReadAhead+>;cmpl $, (%esi);je  <CcScheduleReadAhead+>;incl ;incw (%esi)": 1,
                "movl (%edi), %eax;cmpl -(%ebp), %eax;jne  <KeDisconnectInterrupt+>;subl $, %edi;cmpl -(%ebp), %edi": 1,
                "jne  <KeDisconnectInterrupt+>;subl $, %edi;cmpl -(%ebp), %edi;jae - <CcScheduleReadAhead+>;movw -(%ebp), %cx": 1,
                "cmpl %ebx, (%ebp);leal (%ecx), %eax;movb %bl, (%ecx);movb $, (%ecx);movl %ebx, (%ecx)": 1,
                "movzbw (%esi), %ax;movw %ax, (%edi);incl %edi;incl %edi;movl %edi, -(%ebp)": 1,
                "testl %eax, %eax;je  <FsRtlGetNextFileLock+>;jmp  <IoSetFileOrigin+>;nop;nop": 1,
                "movl %edx, (%esi);movl %esi, (%ebx);movb %al, %cl;movl %esi, (%edx);calll *": 1,
                "cmpb $, ;pushl %esi;movl (%ebp), %esi;jne  <IoSetFileOrigin+>;leal -(%ebp), %eax": 1,
                "movl (%esi), %ecx;pushl %esi;pushl (%ecx);calll *%eax;movb $, %al": 1,
                "calll *;movb %al, %cl;movl (%esi), %eax;cmpl %ebx, %eax;movb %cl, -(%ebp)": 1,
                "cmpl %ebx, %eax;movb %cl, -(%ebp);je  <IoSetFileOrigin+>;movsbl (%esi), %ecx;pushl %ebx": 1,
                "movl (%edi), %ecx;cmpl (%eax), %ecx;ja  <IoCancelIrp+>;jb  <IoCancelIrp+>;movl (%edi), %ecx": 1,
                "jmp - <IoCancelIrp+>;nop;nop;nop;nop": 2,
                "retl $;testb $, (%esi);jne - <FsRtlTruncateLargeMcb+>;cmpl %ebx, (%esi);jne - <FsRtlTruncateLargeMcb+>": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movb $, -(%ebp);movb -(%ebp), %cl;calll *": 1,
                "jne  <RtlFindNextForwardRunClear+>;movl -(%ebp), %ecx;cmpl (%eax), %ecx;jne  <RtlFindNextForwardRunClear+>;pushl %eax": 1,
                "cmpl (%eax), %ecx;jne  <RtlFindNextForwardRunClear+>;pushl %eax;calll - <RtlRealSuccessor>;testl %eax, %eax": 1,
                "pushl (%ebp);movl -(%ebp), %eax;calll *(%eax);calll *;movl (%ebx), %edi": 1,
                "calll *;movl (%ebx), %edi;testl %edi, %edi;movb %al, -(%ebp);je  <FsRtlFastCheckLockForRead+>": 1,
                "je  <FsRtlFastCheckLockForRead+>;jmp  <IoSetFileOrigin+>;movl (%esi), %eax;pushl %ebx;pushl (%ebp)": 1,
                "pushl (%ebp);movl %eax, -(%ebp);movl (%esi), %eax;pushl %edi;movl %eax, -(%ebp)": 1,
                "pushl (%ebx);calll - <RtlEnumerateGenericTableAvl+>;movl -(%ebp), %esi;testl %esi, %esi;jl  <IoSetFileOrigin+>": 1,
                "jl  <IoSetFileOrigin+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, (%edi);jmp  <IoGetDriverObjectExtension+>": 1,
                "movl %esi, (%ebx);je  <IoSetFileOrigin+>;pushl %ebx;pushl -(%ebp);calll - <MmUnlockPages+>": 1,
                "je  <IoSetFileOrigin+>;pushl %ebx;pushl -(%ebp);calll - <MmUnlockPages+>;movb (%ebp), %cl": 1,
                "calll - <ObfDereferenceObject>;movl (%ebp), %eax;cmpl %esi, %eax;je - <MmCreateSection+>;jmp  <IoSetFileOrigin+>": 1,
                "pushl %ebx;calll *;movl (%ebp), %ecx;movb %al, %bl;calll - <wcscmp+>": 1,
                "movl (%ebp), %ecx;movb %al, %bl;calll - <wcscmp+>;movb %bl, %cl;calll *": 1,
                "movl %fs:, %eax;movl %eax, %ebx;movl , %eax;cmpl (%eax), %ebx;je  <IoSetFileOrigin+>": 1,
                "cmpl (%eax), %ebx;je  <IoSetFileOrigin+>;movb $, %cl;calll *;movb %al, -(%ebp)": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl %fs:, %eax;movl , %ecx;movl %eax, (%ecx);jmp - <PsGetProcessSectionBaseAddress+>": 2,
                "jmp - <PsGetProcessSectionBaseAddress+>;movl , %eax;movl %ebx, (%eax);movl , %ecx;addl $, %ecx": 1,
                "addl $, %ecx;jmp - <FsRtlInitializeLargeMcb+>;movl , %eax;addl $, %eax;movl (%eax), %edx": 1,
                "movl %edx, (%eax);jmp - <IoPageRead+>;movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "jne - <MmForceSectionClosed+>;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;movl $, %edx": 1,
                "je - <KeSetKernelStackSwapEnable+>;jmp  <IoSetFileOrigin+>;movl (%ebp), %ecx;movl $, -(%ebp);calll - <PsReturnProcessNonPagedPoolQuota+>": 1,
                "jmp - <FsRtlGetNextFileLock+>;nop;nop;nop;nop": 2,
                "movb $, (%esi);movl (%eax), %ecx;movl %eax, (%ebx);movl %ecx, (%ebx);movl %ebx, (%ecx)": 1,
                "movl %esi, %ecx;movb $, (%esi);calll - <KeQueryTimeIncrement+>;jmp - <PsGetProcessId+>;nop": 1,
                "movl (%ebp), %eax;andl $, (%eax);movb $, (%eax);movb $, (%eax);leal (%eax), %ecx": 1,
                "movl (%ebp), %ecx;andl $, (%eax);testl %ecx, %ecx;je  <KeInitializeQueue+>;movl %ecx, (%eax)": 1,
                "movl %esp, %ebp;pushl %edx;addb %bl, (%ebp);cld;addb $, %al": 1,
                "jmp - <PsIsThreadTerminating+>;xorl %esi, %esi;jmp - <PsGetProcessSectionBaseAddress+>;cmpl $, %ebx;jne - <wcscmp+>": 1,
                "nop;nop;nop;nop;fstpl (%ebx,%edx,)": 1,
                "calll *(%eax);sbbl $, %eax;pushl %ebx;addb %dl, -(%eax);movl %edi, %edi": 1,
                "pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jne  <KeInitializeQueue+>;movl (%esi), %edx": 1,
                "movl (%esi), %edx;movl (%esi), %eax;cmpl %eax, %edx;jg  <IoSetFileOrigin+>;pushl %ebx": 1,
                "leal (%esi), %eax;pushl (%esi);pushl %eax;calll - <KeSetTimer>;movl %edi, %ecx": 1,
                "shrl $, %eax;movl $, %ebx;andl %ebx, %eax;testb $, -(%eax);je - <MmCreateMdl+>": 1,
                "testl %eax, %esi;jne - <MmCreateMdl+>;testb $, %ah;je - <MmCreateMdl+>;shrl $, %eax": 1,
                "andl %ebx, %eax;andl $, -(%eax);calll *;movl (%ebp), %eax;popl %ebx": 1,
                "addb %al, -(%ebx);nop;nop;nop;nop": 1,
                "movl (%ebp), %ebx;leal (%ebx), %edx;movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %edi;je  <IoSetFileOrigin+>;leal (%edi), %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "jne  <IoReleaseRemoveLockEx+>;movl (%esi), %eax;movl (%eax), %edx;movl (%eax), %edi;andl $, %edx": 1,
                "orl $, %ecx;pushl %ecx;pushl $;pushl %eax;calll - <IoReleaseRemoveLockEx+>": 1,
                "movl %esi, %eax;popl %esi;popl %ebp;retl $;movl (%ebp), %eax": 1,
                "movl (%esi), %edx;cmpl (%ebx), %edx;jne - <MmForceSectionClosed+>;testl %ecx, %ecx;je  <IoSetFileOrigin+>": 1,
                "testl $, %ecx;popl %edi;popl %esi;jne  <IoSetFileOrigin+>;testl $, %ecx": 1,
                "leave;retl $;movl %esi, %ecx;movl (%ebp), %esi;movl %eax, %edi": 1,
                "jmp  <IoBuildDeviceIoControlRequest+>;movl %esi, %edx;jmp  <IoBuildDeviceIoControlRequest+>;nop;nop": 1,
                "popl %ebp;retl $;movb $, (%esi);jmp - <PsGetProcessInheritedFromUniqueProcessId+>;movl %eax, %edx": 1,
                "movb %al, (%ecx);jmp  <KeSetBasePriorityThread+>;nop;nop;nop": 1,
                "addb %al, (%eax);incl (%ecx);addb %al, (%eax);incl (%ebx);addb %al, (%eax)": 2,
                "addb %al, (%eax);incl (%ebx);addb %al, (%eax);incl (%edi);addb %al, (%eax)": 2,
                "decl (%edi);addb %al, (%eax);lcalll *(%edi);addb %al, (%eax);addb %al, (%eax)": 2,
                "leal (%esi,%ecx,), %edx;movl %eax, %ecx;pushl %edi;andl $, %ecx;movl (,%ecx,), %edi": 1,
                "shrl %cl, %edx;testb $, %dl;jne  <RtlFindLastBackwardRunClear+>;decl %edi;jmp - <RtlFindLastBackwardRunClear+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx": 15,
                "movl (%eax), %eax;xorl %esi, %esi;testl %ecx, %ecx;jbe  <RtlNumberOfClearBits+>;movb (%eax), %dl": 1,
                "movb (%eax), %dl;movzbl %dl, %edx;movsbl (%edx), %edx;incl %eax;addl %edx, %esi": 1,
                "pushl %edi;movl (%ebp), %edi;movl %edi, %ebx;xorl (%ebp), %ebx;andl $, %ebx": 1,
                "xorl (%ebp), %ebx;andl $, %ebx;movl %ebx, (%ebp);je  <RtlNumberOfClearBits+>;pushl %esi": 1,
                "notl %edx;andl %edx, %ebx;testl %esi, %esi;movl %ecx, %edx;movl %ebx, (%ebp)": 1,
                "testl %ebx, %ebx;jne - <RtlNumberOfClearBits+>;popl %esi;popl %edi;popl %ebx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl , %eax;testl %eax, ": 1,
                "cmpl $, %eax;jmp - <RtlNumberOfClearBits+>;nop;nop;nop": 1,
                "movl %esi, (%ebp);je  <PoRegisterSystemState+>;movl (%ebp), %eax;movl (%ebp), %ecx;xchgl %eax, (%ecx)": 1,
                "pushl (%ebp);calll - <RtlNumberOfClearBits+>;pushl $;calll - <RtlNumberOfClearBits+>;movl %esi, %eax": 1,
                "orl $, %esi;jmp - <MmMapLockedPagesSpecifyCache+>;cmpl $, %edx;je - <MmForceSectionClosed+>;jmp  <IoSetFileOrigin+>": 1,
                "cmpl $, %edx;je - <MmForceSectionClosed+>;jmp  <IoSetFileOrigin+>;movl , %eax;movl -, %ecx": 1,
                "movl %edi, (%esi);movl %edx, (%esi);movl %esi, (%edx);movl %esi, (%edi);movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movzwl (%ecx), %eax;pushl %ebx;pushl %esi": 2,
                "pushl %esi;movzwl (%edx), %esi;cmpl %esi, %eax;pushl %edi;je  <RtlEqualString+>": 1,
                "pushl %es;pushl %ebx;addb %ch, %cl;pushl %es;pushl %ebx": 1,
                "je  <IoSetFileOrigin+>;orl $-, %eax;cmpl %eax, -(%edx);je  <RtlEqualString+>;leal -(%ebx), %eax": 1,
                "movl (%esi), %eax;movl -(%eax,%ebx,), %edx;movl (%esi), %eax;leal (%eax,%edi), %ecx;movl -(%ecx), %eax": 1,
                "movl %esp, %ebp;testb $, ;pushl %esi;movl (%ebp), %esi;jne  <IoSetFileOrigin+>": 1,
                "shrl $, %eax;andl $, %ecx;andl $, %eax;movw %cx, -(%esi);movl -(%esi), %esi": 1,
                "je  <RtlEqualString+>;andl $, %ecx;shll $, %ecx;pushl %ecx;andl $, %eax": 1,
                "calll *;pushl (%ebp);movl (%ebp), %eax;pushl %ebx;movl %ebx, (%eax)": 1,
                "jmp - <PsGetThreadTeb+>;movb -(%ebp), %cl;calll *;jmp - <IoGetBaseFileSystemDeviceObject+>;movl , %ecx": 1,
                "movl %eax, ;popl %ebp;retl $;nop;nop": 6,
                "movb -(%ebp), %cl;movl %eax, (%ebp);calll *;movl (%ebp), %ecx;movl %esi, %edx": 1,
                "calll  <_snwprintf+>;calll *;jmp - <wcsstr+>;andl $, -(%ebp);jmp - <wcsstr+>": 1,
                "movb %al, (%esi);leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);movsbl %bl, %eax": 1,
                "movl %ecx, %eax;jmp - <RtlFindClearBits+>;orl $-, %eax;jmp - <RtlFindClearBits+>;nop": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl %eax, (%edx);movl %ecx, (%edx);movl %edx, %eax": 1,
                "pushl %ebx;addb %bh, %bh;ljmpl *-(%ebp);incl %ebp;pushl %ebx": 1,
                "leal -(%ecx,%eax,), %eax;movl -(%ebp), %ecx;addl %ecx, (%eax);jmp - <FsRtlAddLargeMcbEntry+>;cmpb %al, (%ebp)": 1,
                "cmpb $, ;movw %ax, (%ebx);je - <KeSaveFloatingPointState+>;movl (%edx), %eax;movl %eax, (%ebx)": 1,
                "movl (%edx), %eax;movl %eax, (%ebx);jmp - <KeSaveFloatingPointState+>;testl %eax, %eax;je  <IoMakeAssociatedIrp+>": 1,
                "cmpb $, ;movl %ecx, -(%ebp);je - <IoMakeAssociatedIrp+>;movl -(%ebp), %eax;fxsave (%eax)": 1,
                "movl %esi, (%edx);jmp - <KeSaveFloatingPointState+>;nop;nop;nop": 1,
                "je  <wcsncpy+>;xorl %eax, %eax;shrl %ecx;rep  stosl %eax, %es:(%edi);adcl %ecx, %ecx": 1,
                "pushl %edi;leal (%esi), %edi;pushl %edi;movb $, -(%ebp);calll - <IoAcquireVpbSpinLock>": 1,
                "pushl %edi;movb $, -(%ebp);calll - <IoAcquireVpbSpinLock>;xorl %edx, %edx;cmpl %edx, (%ebp)": 1,
                "testl %eax, %eax;jl  <IoSetFileOrigin+>;popl %ebp;retl $;nop": 1,
                "pushl %eax;addb %ah, (%edx);lretl $;nop;nop": 1,
                "pushl %ebx;addb %bh, %bh;decl -(%ebp);aas;pushl %ebx": 1,
                "addb %dh, (%ebx);pushl %ebx;addb %bh, (%edi,%edi);addb %bh, %bh;decl (%edi)": 1,
                "addb %dl, -(%eax);incl (%eax);addb %al, (%eax);addb %al, %bl;int $": 1,
                "jmp  <IoSetFileOrigin+>;movl (%edi), %edi;subl %eax, (%ebp);testl %edi, %edi;je  <IoSetFileOrigin+>": 1,
                "pushl %es;addl $, %eax;addb $, %al;pushl %es;addl $, %eax": 3,
                "addl $, %eax;addb $, %al;addl $, %eax;addl (%ebx), %eax;addb , %al": 3,
                "addl (%edx), %eax;addb (%ecx), %al;pushl %es;addl $, %eax;addb $, %al": 1,
                "jmp - <FsRtlCheckOplock+>;cmpb $, (%edi);je  <KeRundownQueue+>;cmpl $, (%edi);jg - <KeWaitForMultipleObjects+>": 1,
                "cmpl $, (%edi);jg - <KeWaitForMultipleObjects+>;movb $, -(%ebp);jmp - <KeWaitForMultipleObjects+>;nop": 1,
                "movb (%eax), %dl;movb %dl, %cl;andb $, %cl;cmpb $, %cl;jne  <KeRundownQueue+>": 1,
                "popl %esi;popl %ebx;leave;retl;jg  <RtlNumberOfSetBits+>": 1,
                "movl %eax, (%edi);jmp - <CcSetDirtyPinnedData+>;movb $, (%ebp);jmp - <ExDisableResourceBoostLite+>;leal -(%ebp), %eax": 1,
                "nop;nop;nop;nop;xchgb %dl, (%ebx)": 1,
                "nop;nop;nop;movb $, %bl;pushl %ebx": 1,
                "pushl %edi;movl (%edx), %edi;movl %ecx, %edx;shrl $, %ecx;xorl %eax, %eax": 1,
                "addb (%eax), %al;addl %eax, (%eax);decl %ebx;nop;pushl %ebx": 1,
                "bound (%ebx), %edx;salc;bound (%ebx), %edx;xorb %al, %al;jmp - <RtlAreBitsClear+>": 1,
                "movl %eax, (%ebp);calll *;xorl %edx, %edx;movb %al, (%esi);movl %edi, (%esi)": 1,
                "jne  <RtlClearAllBits+>;cmpb $, (%esi);jne  <RtlClearAllBits+>;cmpb (%esi), %cl;jg  <RtlClearAllBits+>": 1,
                "cmpb (%esi), %cl;jg  <RtlClearAllBits+>;pushl $;pushl $;movl $, %edx": 1,
                "movb $, (%eax);jmp - <RtlClearAllBits+>;nop;nop;nop": 1,
                "cmpl %eax, (%eax);movl (%ebp), %ecx;je  <RtlSubtreePredecessor+>;cmpl %eax, (%ecx);je  <RtlSubtreePredecessor+>": 1,
                "je  <RtlSubtreePredecessor+>;movl (%eax), %edx;cmpl %ecx, %edx;pushl %esi;jne  <RtlSubtreePredecessor+>": 1,
                "movl (%eax), %edx;cmpl %ecx, %edx;pushl %esi;jne  <RtlSubtreePredecessor+>;movl (%ecx), %edx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <RtlSubtreePredecessor+>": 1,
                "je  <RtlSubtreePredecessor+>;movl %ecx, %eax;jmp - <RtlSubtreePredecessor+>;popl %ebp;retl $": 1,
                "movl %edx, (%ecx);popl %edi;jmp - <RtlClearAllBits+>;cmpl %eax, (%esi);je  <RtlSubtreePredecessor+>": 1,
                "jmp - <RtlSubtreePredecessor+>;movl %eax, %edx;movl %ecx, %eax;movl %edx, %ecx;jmp - <RtlClearAllBits+>": 1,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %ecx;movsbl (%ecx), %edi": 1,
                "movsbl (%ecx), %edi;movb %al, -(%ebp);movl (%ecx), %eax;movl (%eax), %esi;movsbl (%esi), %eax": 1,
                "movl (%ebp), %eax;cltd;xorl %edx, %eax;subl %edx, %eax;cmpl $, %eax": 1,
                "movsbl (%ecx), %eax;cmpl %eax, %edx;movb $, (%ecx);movb $, (%ecx);popl %ebx": 1,
                "movb %al, (%ecx);calll - <KeQueryTimeIncrement+>;jmp - <KeSetBasePriorityThread+>;movb $, %dh;pushl %ebx": 1,
                "sbbb (%ebx), %dl;decl %edi;sbbl (%ebx), %edx;sbbl %gs:(%ebx), %edx;popl %es": 1,
                "jmp - <mbtowc+>;pushl $;pushl (%esi);calll  <ExFreePoolWithTag>;jmp - <FsRtlUninitializeLargeMcb+>": 1,
                "addb %al, (%eax);subb (%ecx), %ah;addb %dl, -(%eax);movl %edi, %edi;pushl %ebp": 1,
                "movl (%ebp), %eax;addl %eax, %eax;movl %eax, -(%ebp);pushl %esi;leal (%ebp), %eax": 1,
                "retl;nop;nop;nop;movb $-, %dl": 1,
                "addb %ah, %bh;ldsl (%edx), %edx;popal;je - <_snwprintf+>;pushl %edx": 1,
                "je - <_snwprintf+>;pushl %edx;addb %cl, (%ebx);movl %eax, (%ebp);movl $, %eax": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp - <PsReturnProcessPagedPoolQuota+>;cmpl $, (%esi)": 1,
                "jmp - <PsReturnProcessPagedPoolQuota+>;cmpl $, (%esi);je - <KiDeliverApc+>;movl (%esi), %esi;jmp - <KiDeliverApc+>": 1,
                "nop;nop;nop;nop;fldcw -(%ecx)": 1,
                "jmp - <CcCopyWrite+>;movl (%esi), %edi;jmp - <RtlLookupElementGenericTableFullAvl+>;negb %bl;movb %bl, (%ecx)": 1,
                "je  <_snwprintf+>;leal (%esi), %eax;cmpl %eax, (%eax);jne  <RtlFindNextForwardRunClear+>;cmpb $, (%esi)": 1,
                "testb $, %ch;jne - <IoPageRead+>;xorl %eax, %eax;incl %eax;testb %cl, %al": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je - <RtlRealSuccessor+>;movl %ecx, %eax;jmp - <_snwprintf+>": 1,
                "pushl %ebx;pushl %esi;calll - <KeSaveFloatingPointState+>;jmp - <KeQueryTickCount+>;movl , %edx": 1,
                "cmpb $, (%ebp);jne  <_strnicmp+>;cmpb $, (%ebp);jne  <IoSetFileOrigin+>;movl , %eax": 1,
                "pushl %edi;pushl %edi;leal -(%ebp), %ecx;pushl %ecx;pushl %esi": 1,
                "pushl $;pushfl;pushl %es;incl %eax;addb %ch, %cl": 1,
                "cmpl $, %ecx;je  <PsGetProcessDebugPort+>;cmpl $, %ecx;jne  <_strnicmp+>;movl (%ebp), %eax": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;jmp - <PsGetProcessDebugPort+>;nop;nop;nop": 1,
                "je  <_strnicmp+>;movl (%ebp), %esi;movl (%ebp), %edi;movb $, %bh;movb $, %bl": 1,
                "movb $, %bl;movb $, %dh;leal (%ecx), %ecx;movb (%esi), %ah;orb %ah, %ah": 1,
                "movb (%edi), %al;je  <_strnicmp+>;orb %al, %al;je  <_strnicmp+>;incl %esi": 1,
                "je  <_strnicmp+>;orb %al, %al;je  <_strnicmp+>;incl %esi;incl %edi": 1,
                "retl;movb $, (%ebx);movl $, (%esi);jmp - <IoQueueWorkItem+>;movl (%esi), %eax": 1,
                "cmpb $, (%ecx);jne  <IoSetFileOrigin+>;movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, (%edx)": 1,
                "movl %edx, (%eax);andl $, (%ecx);leal (%ecx), %eax;cmpl %eax, (%eax);movl $, (%ecx)": 1,
                "incl %edx;calll - <KiDispatchInterrupt+>;jmp - <_strnicmp+>;movb -(%ebp), %cl;calll - <ExReleaseResourceLite+>": 1,
                "movl %edi, %ecx;calll - <wcscmp+>;movl (%ebp), %eax;decl (%eax);jmp - <PsChargeProcessNonPagedPoolQuota+>": 1,
                "jmp - <PsReturnProcessPagedPoolQuota+>;calll - <wcscmp+>;jmp - <PsChargeProcessNonPagedPoolQuota+>;calll - <wcscmp+>;jmp - <_strnicmp+>": 1,
                "je  <IoSetFileOrigin+>;cmpb $, ;jne  <toupper+>;leal -(%ebp), %esi;andl $-, %esi": 1,
                "cmpb $, ;leal (%edi), %esi;je - <KeInitializeDpc+>;pushl $;calll - <KiCoprocessorError+>": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %edi;jmp - <KeInitializeDpc+>;movb $, %cl": 1,
                "pushl %ebx;calll *;testb %al, %al;jne - <PsGetProcessDebugPort+>;pushl %edi": 1,
                "movl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %edi;andl $-, %edi;subl %eax, %edi": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %edi;subl %esi, %edi;movl %edi, -(%ebp);pushl $": 1,
                "movb %al, %cl;negb %cl;sbbl %ecx, %ecx;andl $, %ecx;addl $, %ecx": 2,
                "movl %ecx, (%ebx);movl %ecx, (%ebx);negb %al;sbbl %eax, %eax;andl $, %eax": 1,
                "movl $, (%esi);cmpb $, (%ebp);jne - <PsGetProcessDebugPort+>;leal -(%ebp), %eax;pushl %eax": 1,
                "incl %eax;cmpl $, %eax;jb - <_strnicmp+>;jmp - <KeInitializeDpc+>;movl $, -(%ebp)": 1,
                "testb %al, %al;je  <_strnicmp+>;testb $, %cl;jne  <IoSetFileOrigin+>;movl , %eax": 1,
                "testb $, %cl;jne  <IoSetFileOrigin+>;movl , %eax;cmpl %eax, -(%ebp);jae  <IoSetFileOrigin+>": 1,
                "movl %ecx, -(%ebp);cmpl %edi, %ecx;je  <_strnicmp+>;cmpl %edi, %esi;jne  <IoSetFileOrigin+>": 1,
                "cmpl , %ecx;ja  <IoSetFileOrigin+>;movl $, %ecx;movl -(%ebp), %esi;leal -(%ebp), %edi": 1,
                "pushl -(%ebp);calll - <KeInitializeDpc+>;andb $-, (%ebx);pushl (%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl %ebx;calll - <PsGetProcessDebugPort+>": 1,
                "calll - <_CIsqrt+>;retl $;nop;nop;shrb (%ebx)": 1,
                "movb %al, -(%ebp);xorl %edi, %edi;pushl %edi;pushl -(%ebp);calll *": 1,
                "movl %ecx, (%eax);andl $, %ecx;movl %ecx, -(%ebp);jne - <PoRegisterSystemState+>;cmpl %edi, %esi": 1,
                "ja - <IoReleaseRemoveLockEx+>;pushl $;pushl %edx;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl %fs:, %eax;movl %eax, (%ebx);movb $, %cl": 1,
                "addl $, %edx;movl (%edx), %edi;movl %edi, (%esi);movl %edx, (%esi);movl %esi, (%edi)": 3,
                "movb %al, %cl;movl %esi, (%edx);calll *;popl %edi;popl %esi": 2,
                "movl %esp, %ebp;pushl $;pushl (%ebp);calll  <ExFreePoolWithTag>;popl %ebp": 1,
                "movl (%ebp), %eax;leal (%eax), %ecx;cmpl $, %ecx;jbe  <IoSetFileOrigin+>;popl %ebp": 1,
                "jmp - <PsChargeProcessNonPagedPoolQuota+>;xorl %eax, %eax;jmp - <PsGetThreadTeb+>;movl $, %eax;jmp - <PsGetThreadTeb+>": 1,
                "movl (%ebp), %esi;testl %esi, %esi;je  <ExNotifyCallback+>;pushl %ebx;pushl %edi": 1,
                "leal (%esi), %edi;movl (%edi), %esi;cmpl %edi, %esi;jne  <ExNotifyCallback+>;movb (%ebp), %dl": 1,
                "pushl (%esi);calll *(%esi);movl (%esi), %esi;jmp - <ExNotifyCallback+>;movl %eax, -(%ebp)": 1,
                "incl %eax;cmpb %bl, -(%ebp);jne  <PoSetSystemState+>;movl %edi, %esi;movl %esi, -(%ebp)": 1,
                "calll - <_CIsqrt+>;movl %ebp, -(%ebp);movl -(%ebp), %esi;movl %esi, -(%ebp);xorl %ebx, %ebx": 1,
                "nop;pushal;cli;incl %esp;addb %ch, -(%ecx)": 1,
                "movl (%ebp), %esi;movl %eax, (%edx);cmpl %esi, (%ecx);ja  <IoSetFileOrigin+>;cmpl %eax, %esi": 1,
                "popl %ebp;retl $;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;calll *;pushl (%ebp)": 5,
                "pushl $;pushl (%ebp);pushl $;pushl $;pushl $": 2,
                "jne  <IoSetFileOrigin+>;leal -(%ebp), %ecx;calll *;movb (%ebp), %al;popl %edi": 1,
                "cli;movl (%ebp), %eax;movl (%eax), %esi;testl %esi, %esi;jne  <IoSetFileOrigin+>": 1,
                "jne  <IoSetFileOrigin+>;sti;xorl %eax, %eax;testl %esi, %esi;setne %al": 1,
                "testl %eax, %eax;jle  <PoSetSystemState+>;cmpl $, %eax;je  <IoSetFileOrigin+>;decl (%edi)": 1,
                "jle  <PoSetSystemState+>;cmpl $, %eax;je  <IoSetFileOrigin+>;decl (%edi);jne  <KeRemoveQueueDpc+>": 1,
                "movzbl (%edi), %eax;subl %eax, (%esi);cmpb $, (%edi);movl %esi, (%edi);je  <IoSetFileOrigin+>": 1,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %edi;leal (%edi), %edx": 1,
                "popl %ebx;popl %ebp;retl $;leal (%esi,%esi), %ecx;movzwl (%ecx), %eax": 1,
                "addl $, %eax;movl %esi, (%eax);movl %edx, (%eax);movl %eax, (%esi);movl %eax, (%edx)": 1,
                "jne - <KeQueryTimeIncrement+>;jmp  <IoSetFileOrigin+>;decl (%esi);jmp - <CcGetDirtyPages+>;nop": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "nop;cmpb $, ;jne ;retl;cmpl %ebx, (%esi)": 1,
                "leal -(%edi,%edx), %edi;movl %edx, %esi;shrl $, %esi;movl $, %ecx;shrl $, %edi": 2,
                "xaddl %eax, (%ecx);decl %eax;cmpl $, %eax;jb  <IoSetFileOrigin+>;jne  <MmUnlockPagableImageSection+>": 1,
                "cmpl $, %eax;jb  <IoSetFileOrigin+>;jne  <MmUnlockPagableImageSection+>;calll *;movb %al, (%ebp)": 1,
                "xorl %eax, %eax;cmpl %eax, ;jne  <IoSetFileOrigin+>;incl (%ebx);je - <KeQueryRuntimeThread+>": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl %esi, ;calll *;movl , %edi;movb %al, -(%ebp)": 1,
                "movl , %edi;movb %al, -(%ebp);movl (%ebp), %eax;subl (%ebp), %eax;addl $, %eax": 1,
                "testb %al, -(%esi);addl %eax, (%eax);decl %edx;movw %dx, (%eax);jmp - <MmUnlockPagableImageSection+>": 1,
                "movl (%eax), %eax;cmpl $, %eax;jl  <MmUnlockPagableImageSection+>;cmpl $, %eax;jle  <MmUnlockPagableImageSection+>": 1,
                "pushl (%eax);pushl %eax;calll - <MmGrowKernelStack+>;movb -(%ebp), %cl;calll *": 1,
                "jmp - <MmGrowKernelStack+>;movl %ebx, %ecx;calll - <wcscmp+>;jmp - <MmGrowKernelStack+>;nop": 1,
                "jmp - <MmGrowKernelStack+>;nop;movb $-, %bl;pushl %ecx;addb %al, %dh": 1,
                "pushl %eax;pushl -(%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 2,
                "xorb %dl, %dl;cmpl $, %ecx;pushl %esi;jg  <MmProbeAndLockSelectedPages+>;je  <RtlInsertElementGenericTableAvl+>": 1,
                "jne  <IoSetFileOrigin+>;addl $, %edi;movl %edi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl %fs:, %eax;cmpl $, (%ebp);movl (%eax), %esi;movl %esi, -(%ebp);jne  <RtlInsertElementGenericTableAvl+>": 1,
                "cmpl $, (%ebp);movl (%eax), %esi;movl %esi, -(%ebp);jne  <RtlInsertElementGenericTableAvl+>;leal (%esi), %ecx": 1,
                "movl %eax, %ecx;je  <IoSetFileOrigin+>;pushl %ecx;pushl (%ebp);pushl %edi": 1,
                "cmpl $, %ebx;je  <RtlInsertElementGenericTableAvl+>;testb $, (%ebx);jne  <RtlInsertElementGenericTableAvl+>;pushl %ebx": 1,
                "je  <RtlInsertElementGenericTableAvl+>;movl $, (%edx,%ecx,);xorl %esi, %esi;popl %edi;cmpl $, (%ebp)": 1,
                "popl %edi;cmpl $, (%ebp);jne  <RtlInsertElementGenericTableAvl+>;cmpl $, %ebx;je  <IoSetFileOrigin+>": 1,
                "jmp - <RtlInsertElementGenericTableAvl+>;cmpw $, (%eax);ja - <RtlInsertElementGenericTableAvl+>;jmp - <RtlInsertElementGenericTableAvl+>;nop": 1,
                "nop;nop;nop;nop;imull $, (%ecx), %esp": 1,
                "addb (%eax), %al;addb %al, (%ebx);adcl %eax, (%ecx,%ecx,);incl %edi;orb $, %al": 1,
                "orb $, %al;testl %ecx, (%eax);addb %al, (%eax);testb $, %al;jne  <RtlInsertElementGenericTableAvl+>": 1,
                "movl -(%ebp), %edi;movl %ebx, -(%ebp);jmp - <RtlInsertElementGenericTableAvl+>;nop;nop": 1,
                "jne  <RtlInsertElementGenericTableAvl+>;movl (%edi), %eax;subl , %eax;movl %eax, %esi;andl $, %esi": 1,
                "calll *;xorl %edx, %edx;cmpl %edx, (%ebp);movb %al, %cl;movb %cl, (%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl , %ecx;movl (%eax), %eax;addl $, %ecx": 1,
                "movl -(%ebp), %ecx;calll - <wcscmp+>;movb (%ebp), %cl;calll *;xorl %eax, %eax": 1,
                "movl %eax, (%esi);movl (%esi), %eax;movl %eax, (%esi);movl %fs:, %eax;pushl $": 1,
                "xorl %ebx, %ebx;pushl %edi;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %edi;leal (%edi,%edi,), %esi;movb %al, -(%ebp);shll $, %esi;pushl $": 1,
                "shll $, %esi;pushl $;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "pushl $;pushl %ebx;calll - <RtlFindClearBits+>;testl %eax, %eax;jl  <RtlInsertElementGenericTableAvl+>": 1,
                "addl %edi, %eax;movl (,%eax,), %edx;movl (%ebp), %edi;movl %ebx, %eax;shrl $, %eax": 1,
                "cmpl %esi, %edx;movl %edx, (%ebp);movl %eax, -(%ebp);jne  <RtlInsertElementGenericTableAvl+>;pushl $": 1,
                "jne  <RtlInsertElementGenericTableAvl+>;pushl $;pushl $;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "movl (%ebp), %ecx;orl (,%ecx,), %eax;movl -(%ebp), %ecx;shll $, %ecx;orl %ecx, %eax": 1,
                "shll $, %ecx;orl %ecx, %eax;testb $, %al;movl %eax, (%ebp);je  <RtlInsertElementGenericTableAvl+>": 1,
                "calll - <RtlInsertElementGenericTableAvl+>;testl %eax, %eax;je  <IoSetFileOrigin+>;movl (%ebp), %ecx;addl $, %ecx": 1,
                "jne  <RtlInsertElementGenericTableAvl+>;pushl $;pushl (%ebp);pushl %edi;calll - <KeSetKernelStackSwapEnable+>": 1,
                "leal (%edi,%edi,), %eax;leal (%ecx,%eax,), %edi;movl (%ebp), %eax;movl , %ecx;shrl $, %eax": 1,
                "je  <RtlFindNextForwardRunClear+>;movl (%ebp), %ecx;incw (%esi);movl %ecx, (%eax);calll *": 1,
                "incl (%edi);movb %al, %cl;calll *;movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "calll *;movl (%ebp), %eax;movl (%ebp), %ecx;addl $, (%ebp);andl $, %eax": 1,
                "jne  <IoSetFileOrigin+>;incl %edi;cmpl %esi, %edi;jb - <RtlInsertElementGenericTableAvl+>;jmp - <RtlInsertElementGenericTableAvl+>": 1,
                "incl %edi;cmpl %esi, %edi;jb - <RtlInsertElementGenericTableAvl+>;jmp - <RtlInsertElementGenericTableAvl+>;nop": 1,
                "addl %ebx, (%eax);movl (%eax), %eax;leal (%esi), %ecx;cmpl (%ecx), %eax;ja  <RtlInsertElementGenericTableAvl+>": 1,
                "cmpl (%ecx), %eax;ja  <RtlInsertElementGenericTableAvl+>;movl (%ebp), %eax;movl %edx, (%eax);xorl %eax, %eax": 1,
                "cmpw $-, (%ebp);je  <RtlInsertElementGenericTableAvl+>;cmpw $, (%ebp);jae  <RtlInsertElementGenericTableAvl+>;movzwl (%ebp), %eax": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;pushl (%eax);calll - <MmMapLockedPagesSpecifyCache+>;cmpl $, -(%ebp)": 1,
                "movl %eax, (%esi);jmp - <CcCopyWrite+>;cmpb $, (%ebp);jne - <CcCopyWrite+>;jmp  <IoSetFileOrigin+>": 1,
                "nop;nop;nop;sbbb %dl, %cs:(%ebx);incl %ebx": 1,
                "testb $-, (%ecx);movb %dl, -(%ebp);movl %eax, (%ebp);jne  <IoSetFileOrigin+>;movb (%esi), %cl": 1,
                "movl (%eax), %ecx;movl %ecx, %edx;andb $-, %dl;cmpb $, %dl;je  <PoCallDriver+>": 1,
                "jne - <PoCallDriver+>;jmp - <PoCallDriver+>;nop;nop;nop": 1,
                "movl %eax, %esi;calll *;movb %al, %bl;movl (%ebp), %eax;leal (%esi), %ecx": 1,
                "testl %eax, (%ecx);je  <IoSetFileOrigin+>;movb %bl, %cl;calll - <ExReleaseResourceLite+>;popl %edi": 1,
                "testl %eax, (%ecx);je  <IoSetFileOrigin+>;popl %edi;popl %esi;movb %bl, %cl": 1,
                "calll - <IoGetAttachedDeviceReference>;movl %eax, %ebx;xorl %eax, %eax;movb (%ebx), %al;addb $, %al": 1,
                "movl $, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 18,
                "movl (%ebp), %eax;cmpl $, %eax;je  <IoSetFileOrigin+>;cmpl $, (%ebp);je  <IoSetFileOrigin+>": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;popl %esi;popl %ebx;leave": 2,
                "jne  <PoRequestPowerIrp+>;cmpl %ecx, %edx;je  <PoRequestPowerIrp+>;leal -(%edx), %esi;testb $, (%esi)": 1,
                "pushl %esi;movl (%eax), %esi;pushl %edi;movl %eax, (%ebp);movl %fs:, %eax": 1,
                "movb %al, %cl;jne  <IoSetFileOrigin+>;incl (%esi);calll *;testb $, (%edi)": 1,
                "jne  <IoSetFileOrigin+>;pushl (%ebp);pushl (%ebp);calll - <KeStackAttachProcess>;xorl %eax, %eax": 1,
                "movl (%eax), %esi;calll *;leal (%esi), %edx;decl (%edx);testb $, (%esi)": 1,
                "movl %esi, %ecx;calll *;movl -(%ebp), %eax;calll *(,%eax,);orl %eax, -(%ebp)": 1,
                "nop;nop;nop;nop;pushl %es": 1,
                "pushl %ebx;pushl %esi;movl $, %esi;movl %esi, %ecx;calll *": 4,
                "pushl %esi;movl $, %esi;movl %esi, %ecx;calll *;testb $-, ": 1,
                "je  <PoRequestPowerIrp+>;andb $, ;pushl $;pushl $;calll - <ExQueueWorkItem>": 1,
                "pushl %esi;calll - <PoRequestPowerIrp+>;testl %eax, %eax;jl  <PoRequestPowerIrp+>;leal -(%ebp), %eax": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%eax), %esi": 5,
                "movl (%eax), %eax;pushl %edi;movl $, %ecx;movl %eax, -(%ebp);xorl %edi, %edi": 1,
                "jne  <IoSetFileOrigin+>;pushl $;pushl -(%ebp);calll - <IoReleaseRemoveLockEx+>;movl %eax, %ebx": 2,
                "pushl $;pushl -(%ebp);calll - <IoReleaseRemoveLockEx+>;movl %eax, %ebx;testl %ebx, %ebx": 2,
                "movl $, %ebx;movl %ebx, %ecx;calll *;movl (%edi), %ecx;movl (%edi), %edi": 1,
                "movl (%edi), %edi;movl %ecx, (%edi);movl %edi, (%ecx);movb %al, %dl;movl %ebx, %ecx": 1,
                "movl (%ebp), %edx;calll - <IofCallDriver>;movl %eax, -(%ebp);movl -(%ebp), %eax;popl %esi": 1,
                "movb %al, %cl;calll *;movl (%ebp), %eax;xorl %ecx, %ecx;cmpw %cx, (%eax)": 1,
                "jne  <_wcsupr+>;movb $, %al;leal -(%ebp), %edx;pushl %edx;pushl -(%ebp)": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;je  <PoStartNextPowerIrp+>;pushl $;pushl %eax": 1,
                "jne  <IoSetFileOrigin+>;popl %ebx;popl %edi;popl %esi;leave": 1,
                "addl $, %edx;jmp - <PoStartNextPowerIrp+>;nop;nop;nop": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;leal -(%ebp), %eax;pushl %eax": 3,
                "movl (%ebp), %eax;movb (%eax), %al;movl (%esi), %ecx;incb %al;movb %al, (%ecx)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %eax": 8,
                "testl %eax, %eax;je  <IoSetFileOrigin+>;testb $, (%eax);jne  <IoSetFileOrigin+>;pushl %ebx": 1,
                "negl %eax;sbbl %eax, %eax;incl %eax;movl %eax, (%ebp);jne  <IoReportTargetDeviceChangeAsynchronous+>": 3,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;movw (%esi), %ax;cmpw $, %ax;jb  <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 10,
                "rep  movsb (%esi), %es:(%edi);andl $, (%ebx);movl %eax, (%ebx);movl (%ebp), %eax;pushl $": 1,
                "jmp - <IoReportTargetDeviceChangeAsynchronous+>;movl $, %eax;jmp - <IoReportTargetDeviceChangeAsynchronous+>;nop;nop": 1,
                "adcl , %eax;lretl;lock;incl %esi;rclb (%ecx)": 9,
                "movl (%eax), %esi;pushl %edi;movl (%esi), %edi;movl $, %ebx;movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;calll *;movb %al, (%ebp);movl (%ebp), %eax;movl (%eax), %eax": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <IoAcquireVpbSpinLock>;movl (%ebp), %esi": 1,
                "setne %cl;cmpl %ecx, (%eax);jne  <IoSetFileOrigin+>;movl (%eax), %ecx;cmpl %eax, (%ecx)": 1,
                "jne  <PoRegisterDeviceForIdleDetection+>;andb $-, (%eax);movl %ebx, (%eax);pushl -(%ebp);calll - <IoReleaseVpbSpinLock>": 1,
                "pushl %esi;movl %eax, %esi;cmpl $, (%ebp);jg  <_snprintf+>;popl %esi": 1,
                "decl %eax;je - <DbgPrint+>;subl $, %eax;jne  <IoGetLowerDeviceObject+>;movl -(%ebp), %ecx": 1,
                "subl $, %eax;jne  <IoGetLowerDeviceObject+>;movl -(%ebp), %ecx;cmpl $-, %ecx;jne  <PoRegisterDeviceForIdleDetection+>": 1,
                "cmpl $-, (%esi);jne - <PoRegisterDeviceForIdleDetection+>;popl %esi;popl %ebx;popl %ebp": 1,
                "movl (%esi), %eax;testb $, %al;jne  <PoRegisterDeviceForIdleDetection+>;testb $, (%esi);jne  <PoRegisterDeviceForIdleDetection+>": 1,
                "movl (%esi), %ecx;shrl $, %ecx;andl $, %ecx;orl (,%ecx,), %eax;movl -(%ebp), %ecx": 2,
                "orl %ebx, %eax;movl %eax, (%ecx);xorl %eax, %eax;cmpl %eax, (%ebp);je  <PoRegisterDeviceForIdleDetection+>": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);je  <PoRegisterDeviceForIdleDetection+>;decl ;testb $, (%esi)": 1,
                "cmpl %ebx, (%ebp);jne - <RtlFindClearBitsAndSet+>;jmp  <IoSetFileOrigin+>;orb $, (%ebx);jmp - <KeInitializeDpc+>": 1,
                "xorl %eax, %eax;incl %eax;jmp - <KeSetBasePriorityThread+>;nop;nop": 1,
                "addb %bh, -(%ebx);orl %edx, (%ebx);addb %al, (%eax);addb %al, (%eax);pushl %ebx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%edi);pushl %ebx;addb %bl, (%edx)": 1,
                "orb (%ebx), %dl;subb $, %al;pushl %ebx;addb %al, (%eax);addb %al, (%eax)": 1,
                "nop;nop;movl %ebp, ;pushl %ebx;addb %bh, %bh": 1,
                "leal -(%ebp), %ecx;calll *;movl (%ebp), %eax;popl %edi;jmp - <RtlSetBit+>": 1,
                "nop;orb $-, %al;pushl %edx;addb %bl, (%edi);lretl $": 1,
                "addb %bh, %bh;lcalll *-(%eax);int $;addb %bh, %bh;lretl": 1,
                "movl $, %esi;pushl %edx;addb %bh, %bh;decl %esp;movl $, %esi": 1,
                "incl -(%ebx);pushl %edx;addb %dl, -(%esi);pushl %edx;addb %dl, -(%eax)": 1,
                "movl , %esi;movl (%ebp), %edx;addl $, %edx;movl $, (%edx);movl %esi, (%edx)": 1,
                "movb $, -(%ebp);movl %esi, (%ebx);jmp - <FsRtlInitializeFileLock+>;nop;movb $, %bh": 1,
                "jne  <toupper+>;addb %cl, (%ebx);sbbb %cl, (%ecx);movl %ecx, (%eax);movl (%ebx), %eax": 1,
                "je - <RtlCopyUnicodeString+>;jmp - <RtlCopyUnicodeString+>;nop;nop;nop": 1,
                "negl %eax;sbbl %eax, %eax;andl %ecx, %eax;popl %esi;jmp - <RtlEnumerateGenericTableWithoutSplayingAvl+>": 1,
                "cmpl %edi, %edx;jae  <IoSetFileOrigin+>;cmpl %edx, %eax;jne  <PoSetSystemState+>;jmp  <PoSetSystemState+>": 1,
                "calll *;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "nop;nop;nop;salc;incl %esp": 1,
                "decl %esp;pushl %edx;addb %bh, %bh;incl (%ecx);pushl %edx": 1,
                "addb %bh, %bh;decl %ebx;decl %ecx;pushl %edx;addb %bl, %dh": 1,
                "cld;std;incl (%eax);addb %al, (%eax);je  <IoSetFileOrigin+>": 1,
                "pushl $;calll - <KiCoprocessorError+>;cmpb $, ;jne  <IoSetFileOrigin+>;movw (%esi), %ax": 1,
                "andl $, %eax;movl %eax, (%ebx);movw (%esi), %ax;movw %ax, (%ebx);movl (%esi), %eax": 1,
                "pushl $;xorl %eax, %eax;popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 11,
                "movl $, (%ebp);jmp  <toupper+>;movb (%eax,%edi), %cl;movb %cl, (%edx,%edi);incl %edi": 1,
                "cwtl;pushl %edx;addb %bh, (%eax,%ebx,);pushl %edx;addb %bh, %bh": 1,
                "cmpl $, %edi;je  <InbvInstallDisplayStringFilter+>;cmpb %bl, ;jne - <toupper+>;calll *": 1,
                "jmp  <toupper+>;movb $, -(%ebp);movl %edi, -(%ebp);jmp  <toupper+>;jmp  <toupper+>": 1,
                "jmp  <toupper+>;jmp  <toupper+>;jbe - <toupper+>;incl %ebx;addb %ch, -(%ecx)": 1,
                "incl %edx;addb %bh, %dh;repne  incl %edx;addb %cl, (%ecx);rep  incl %edx": 1,
                "movl %esi, (%esi);je  <IoAttachDeviceToDeviceStackSafe+>;movl (%eax), %eax;movl (%eax), %eax;cmpl $, (%eax)": 1,
                "movl (%edi), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax;jne - <toupper+>;movl (%edi), %eax": 1,
                "jne  <InbvDisplayString+>;movb -(%ebp), %cl;calll *;cmpl %esi, %ebx;jne  <InbvDisplayString+>": 1,
                "movb $, ;calll - <KeSetEvent>;movb %bl, %cl;calll *;pushl $": 1,
                "jne - <IoInvalidateDeviceRelations+>;jmp - <IoInvalidateDeviceRelations+>;nop;nop;nop": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 67,
                "calll  <ExFreePoolWithTag>;movl (%edi), %eax;cmpl %ebx, %eax;movl %ebx, (%edi);movb $, (%ebp)": 1,
                "je  <IoInvalidateDeviceRelations+>;andl $, -(%ebp);movb $, %cl;calll *;cmpl $, (%ebp)": 1,
                "cmpl $, (%esi);jne  <IoInvalidateDeviceRelations+>;cmpl $, (%esi);je  <IoSetFileOrigin+>;movl (%ebx), %ecx": 1,
                "invlpg (%eax);movl (%esi), %eax;testb $, %al;je  <KeGetRecommendedSharedDataAlignment+>;movl %edi, %ecx": 1,
                "cmpl (%ebp), %ebx;jbe - <IoInvalidateDeviceRelations+>;popl %edi;movb -(%ebp), %cl;movl , %esi": 1,
                "movb (%edi), %dl;incl %esi;incl %edi;cmpb %dl, %cl;movb %cl, (%ebp)": 1,
                "je - <IoInvalidateDeviceRelations+>;pushl (%ebp);calll  <RtlUpperChar>;pushl (%ebp);movb %al, %bl": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);jne  <ExInitializeNPagedLookasideList+>;movl $, (%eax)": 1,
                "jne  <ExInitializeNPagedLookasideList+>;movl $, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);pushl $": 1,
                "leal (%eax), %edx;movl $, %ecx;calll - <ExfInterlockedInsertTailList>;popl %ebp;retl $": 2,
                "movl %edx, (%eax);jmp - <ExInitializeNPagedLookasideList+>;movl %edx, (%eax);jmp - <ExInitializeNPagedLookasideList+>;nop": 1,
                "pushl %ecx;addb %dl, -(%eax);decl -(%eax);pushl %ecx;addb %dl, -(%ecx)": 1,
                "ja  <ExInitializeNPagedLookasideList+>;pushl %ebx;pushl %edi;movl $, %edi;movl (%esi), %ebx": 1,
                "shrl $, %ecx;andl $, %ecx;orl (,%ecx,), %eax;movl -(%ebp), %ecx;andl $, %ebx": 1,
                "orl (,%ecx,), %eax;movl -(%ebp), %ecx;andl $, %ebx;movl %ecx, %edx;orl %ebx, %eax": 1,
                "jbe - <ExInitializeNPagedLookasideList+>;popl %edi;popl %ebx;movb (%ebp), %cl;calll *": 1,
                "addl $, %esp;testl %esi, %esi;movl %eax, %edi;je  <sprintf+>;decl -(%ebp)": 1,
                "movl %eax, %edi;je  <sprintf+>;decl -(%ebp);js  <IoSetFileOrigin+>;movl -(%ebp), %eax": 1,
                "cmpb $, %bl;jne - <wcsncmp+>;orb $, -(%ebp);jmp - <wcsncmp+>;cmpl $, -(%ebp)": 1,
                "je  <IoSetFileOrigin+>;pushl $;leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;pushl ": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl ;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;leal -(%ebp), %ecx;calll - <PoRegisterDeviceForIdleDetection+>;cmpl $, -(%ebp);popl %ecx": 1,
                "jne - <wctomb+>;jmp - <PoRegisterDeviceForIdleDetection+>;cmpl $, %eax;jge - <DbgPrint+>;cmpl $, %eax": 1,
                "jne  <KeSetIdealProcessorThread+>;testb $, %bl;movl -(%eax), %eax;jne  <_snprintf+>;xorl %edx, %edx": 1,
                "je - <DbgPrint+>;testb $, -(%ebp);movswl (%eax), %eax;movl %ecx, -(%ebp);je  <ExAllocatePool+>": 1,
                "movl -(%ebp), %eax;movl $, -(%ebp);testl %ecx, %ecx;je  <wctomb+>;decl %ecx": 1,
                "incl %eax;incl %eax;jmp - <wctomb+>;subl -(%ebp), %eax;sarl %eax": 1,
                "sarl %eax;jmp - <PoRegisterDeviceForIdleDetection+>;nop;nop;nop": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <wctomb+>": 2,
                "pushl $;movl $, %edi;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;calll *": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);xorl %esi, %esi": 1,
                "incl %esi;movb %dl, %cl;calll *;movl %esi, %eax;popl %esi": 1,
                "nop;movl , %eax;retl;cmpl $, (%esi);je  <KeGetRecommendedSharedDataAlignment+>": 1,
                "retl;cmpl $, (%esi);je  <KeGetRecommendedSharedDataAlignment+>;movb $, %cl;calll *%edi": 1,
                "calll - <KeSetKernelStackSwapEnable+>;calll *;movl $, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "calll *;movl $, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 2,
                "decl ;jmp - <KeSetKernelStackSwapEnable+>;nop;nop;nop": 2,
                "je - <PoRegisterSystemState+>;pushl %edi;movl %esi, %edi;stosl %eax, %es:(%edi);popl %edi": 1,
                "cmpl $, (%ecx);jb  <KeGetRecommendedSharedDataAlignment+>;decl ;decw (%ecx);cmpl $, (%ebp)": 1,
                "pushl -(%ebp);calll - <PsGetProcessSectionBaseAddress+>;xorl %eax, %eax;jmp - <KeSetKernelStackSwapEnable+>;decl ": 1,
                "nop;jo  <MmQuerySystemSize+>;pushl %ecx;addb %al, -(%ebx);jns  <MmQuerySystemSize+>": 1,
                "nop;nop;nop;nop;movb , %al": 4,
                "calll - <IoAllocateIrp+>;movl %edi, %ecx;calll - <wcscmp+>;movl (%ebp), %ecx;movl (%ebp), %eax": 1,
                "movb %bl, %cl;calll *;movl (%ebp), %edi;jmp - <RtlFindClearBitsAndSet+>;nop": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;xorl %edx, %edx;leal (%eax), %ecx": 1,
                "retl $;leal (%esi), %eax;movl (%eax), %esi;cmpl %eax, %esi;movl %eax, -(%ebp)": 1,
                "cmpb $, (%esi);movb %al, (%ebp);movl (%esi), %eax;jne  <IoSetFileOrigin+>;movl (%esi), %esi": 1,
                "movl (%esi), %esi;cmpl -(%ebp), %esi;jne - <RtlInitializeGenericTable+>;jmp - <ExNotifyCallback+>;nop": 1,
                "leal (%esi), %eax;pushl %eax;movl (%ebp), %eax;addl $, %eax;pushl %eax": 1,
                "testb %al, %al;jne  <IoAllocateController+>;pushl %ebx;pushl $;pushl (%esi)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;addl $, %esi;jmp  <IoFreeController+>": 1,
                "andb $, (%ebp);xorl %eax, %eax;cmpl %eax, (%ebp);je  <IoSetFileOrigin+>;shrl (%ebp)": 1,
                "movzbl (%ebp), %eax;shll %cl, %eax;cltd;orl (%ebp), %edx;orl (%ebp), %eax": 1,
                "je  <IoSetFileOrigin+>;pushl %edi;pushl $;popl %ecx;xorl %eax, %eax": 1,
                "testl %eax, %eax;jne  <RtlVerifyVersionInfo+>;testb $, (%ebp);pushl %ebx;movl $, %edi": 1,
                "testb $, (%ebp);pushl %ebx;movl $, %edi;je  <RtlCopyString+>;movw (%esi), %ax": 1,
                "testw %ax, %ax;je  <RtlCopyString+>;andl $, -(%ebp);movzwl %ax, %ebx;movl -(%ebp), %ecx": 1,
                "jmp  <RtlCopyString+>;cmpb %al, -(%ebp);je - <RtlVerifyVersionInfo+>;jmp  <RtlCopyString+>;cmpb %al, -(%ebp)": 1,
                "jmp - <RtlVerifyVersionInfo+>;nop;nop;nop;nop": 1,
                "movl %eax, %ebx;andl $, %ebx;jne  <VfIsVerificationEnabled+>;testl $, %eax;jne  <VfIsVerificationEnabled+>": 1,
                "pushl $;pushl (%esi);movb %al, (%ebp);calll  <RtlNtStatusToDosErrorNoTeb+>;testl %eax, %eax": 1,
                "pushl $;movl %edi, %edx;movl $, %ecx;movl %eax, (%edi);movl %esi, (%edi)": 1,
                "calll - <ExfInterlockedInsertTailList>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);incl %eax": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);incl %eax;cmpl $, %eax;jne  <IoWMIWriteEvent+>": 1,
                "jne  <IoWMIWriteEvent+>;andl $-, (%eax);movb %dl, (%eax);jmp  <IoWMIWriteEvent+>;testb $, (%eax)": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $": 7,
                "testl %edx, %edx;leal (%edx,%edx,), %eax;leal (%ebx,%eax,), %eax;je - <IoWMIWriteEvent+>;cmpl $, %edx": 1,
                "je - <IoWMIWriteEvent+>;incl %edx;cmpl $, %edx;jb - <IoWMIWriteEvent+>;cmpb $, (%ebx)": 1,
                "movb $, -(%ebp);je  <IoWMIWriteEvent+>;movl $, -(%ebp);movl $, %ebx;cmpl $, (%ebp)": 1,
                "pushl $;popl %ecx;movl %ebx, %edi;leal -(%ebp), %esi;xorl %eax, %eax": 2,
                "decl %ecx;decl %ecx;cmpl $, (%ebp);pushl %esi;je  <wcsncat+>": 1,
                "incl %ecx;incl %ecx;incl %esi;incl %esi;testw %dx, %dx": 1,
                "nop;nop;movl %fs:, %eax;xorl %ecx, %ecx;cmpb $, (%eax)": 1,
                "calll - <PsIsThreadTerminating+>;movl %eax, %edi;calll - <PsGetCurrentProcessSessionId>;cmpl %eax, %edi;jne - <PoRequestPowerIrp+>": 1,
                "movb $, (%esi);jmp - <PsReturnProcessNonPagedPoolQuota+>;nop;nop;nop": 1,
                "cmpl %esi, %edx;movl %edx, (%ebp);jb  <ExInitializeZone+>;pushl %edi;movl (%eax), %edi": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;pushl %esi;calll  <FsRtlAcquireFileExclusive>": 1,
                "cmpl $, -(%ebp);jne  <InbvNotifyDisplayOwnershipLost+>;cmpl $, (%esi);je  <ExInitializeZone+>;pushl $": 1,
                "jne  <InbvNotifyDisplayOwnershipLost+>;cmpl $, (%esi);je  <ExInitializeZone+>;pushl $;pushl $": 1,
                "retl $;nop;xchgl %ecx, %eax;cmpl %edx, (%ebx);cmpsl %es:(%edi), (%esi)": 1,
                "movl %eax, -(%ebp);movl , %eax;movl %ebx, (%ebp);shrl $, %esi;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl , %ebx;movb %dl, %cl": 1,
                "andl , %ecx;incl %edx;movl %edx, (%eax);calll - <PsIsThreadTerminating+>;movl -(%ebp), %edi": 1,
                "movl (%edi), %ecx;incl -(%ebp);cmpl %ecx, %eax;jb  <ExInitializeZone+>;movl %ecx, %esi": 1,
                "jb  <ExInitializeZone+>;movl %ecx, %esi;je  <ExInitializeZone+>;movl , %ecx;pushl $": 1,
                "pushl $;addl $, %ecx;pushl %ecx;pushl %esi;pushl %eax": 1,
                "movl %eax, (%edx);movl %eax, (%ecx);jmp - <KeInsertDeviceQueue+>;movl (%eax), %ecx;movl (%ecx), %edx": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);movl %eax, (%edx);movl %ecx, %esi;movb $, (%ecx)": 1,
                "jmp - <MmCreateMdl+>;pushl %esi;pushl -(%ebp);calll  <ExFreePoolWithTag>;jmp - <MmCreateMdl+>": 1,
                "leal (%ecx,%edx,), %ecx;cmpl %ecx, %edi;jb  <IoGetDriverObjectExtension+>;testl %eax, %eax;jns  <IoSetFileOrigin+>": 1,
                "movl (%eax), %eax;testb $, %al;jne  <IoGetDriverObjectExtension+>;testl %eax, %ebx;jne  <IoGetDriverObjectExtension+>": 1,
                "jmp  <IoGetDriverObjectExtension+>;calll *;jmp  <IoSetFileOrigin+>;nop;nop": 1,
                "movl (%ecx,%esi,), %ecx;shrl $, %eax;andl $, %eax;movl %ecx, -(%ebp);movl -(%eax), %ecx": 1,
                "jmp  <PsGetJobUIRestrictionsClass+>;decl -(%ebp);jne  <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;cmpl -(%ebp), %esi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ebp), %eax;movl %eax, (%ecx)": 1,
                "je  <IoSetFileOrigin+>;testb $, (%eax);jne  <IoSetFileOrigin+>;pushl %edx;addl $, %eax": 1,
                "negb %al;sbbl %eax, %eax;andl $, %eax;addl $, %eax;popl %ebp": 1,
                "movb %al, -(%ebp);je  <PsGetJobUIRestrictionsClass+>;pushl %ebx;leal -(%ecx), %eax;movl (%eax), %ebx": 1,
                "movl (%eax), %edx;jne  <PsGetJobUIRestrictionsClass+>;testb $, (%eax);jne  <PsGetJobUIRestrictionsClass+>;addl $, %eax": 1,
                "jne  <PsGetJobUIRestrictionsClass+>;testb $, (%eax);jne  <PsGetJobUIRestrictionsClass+>;addl $, %eax;cmpl %eax, %edx": 1,
                "retl $;movl (%ecx), %ecx;cmpl %esi, %ecx;je - <PsGetJobUIRestrictionsClass+>;jmp - <PsGetJobUIRestrictionsClass+>": 1,
                "pushl %esi;movl (%eax), %esi;movl (%esi), %eax;movl $, %ebx;pushl %edi": 1,
                "movb %al, %dl;movl (%ebp), %eax;subl $, %eax;movb %dl, -(%ebp);je  <MmAllocateContiguousMemory+>": 1,
                "je  <IoAllocateErrorLogEntry+>;cmpl $, %eax;jne  <PoSetPowerState+>;movl %eax, -(%ebp);movl (%ebp), %edx": 1,
                "movl (%ebp), %esi;pushl %edi;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 1,
                "addl $, %esp;testl %esi, %esi;movl %eax, %edi;je  <vsprintf+>;decl -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movzbl (%eax), %eax;shrl $, %eax": 1,
                "jmp - <PoSetPowerState+>;testl %eax, %eax;jne - <PoStartNextPowerIrp+>;cmpl %ebx, (%esi);je - <PoStartNextPowerIrp+>": 1,
                "jbe  <MmGetPhysicalAddress+>;movl (%ebp), %edx;leal (%ecx,%edx), %eax;pushl %ebx;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edx;subl %edx, %edi;cmpl %ecx, %edi;ja - <MmGetPhysicalAddress+>;popl %esi": 1,
                "testl %eax, %eax;je - <qsort+>;cmpl %esi, %edi;jae  <qsort+>;movl -(%ebp), %eax": 1,
                "subl %eax, %edi;cmpl %ecx, %edi;jl  <IoAllocateErrorLogEntry+>;cmpl %esi, %eax;jae  <qsort+>": 1,
                "je - <qsort+>;movl (%ebp), %edx;movl %edi, %ecx;subl %esi, %ecx;movl %edx, -(%ebp)": 1,
                "decl %edx;movl %edx, -(%ebp);jne - <qsort+>;jmp - <qsort+>;cmpl %esi, %ebx": 1,
                "movl %ebx, %ecx;subl %esi, %ecx;movl %edx, -(%ebp);movl %edi, %edi;movb (%ecx,%eax), %dl": 1,
                "jbe - <qsort+>;pushl %edi;pushl %esi;calll *(%ebp);addl $, %esp": 1,
                "je - <qsort+>;movl (%ebp), %edx;movl %ebx, %ecx;subl %edi, %ecx;movl %edx, -(%ebp)": 1,
                "ja  <IoSetFileOrigin+>;pushl $;pushl %ebx;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "leal (%ecx), %eax;andl $, (%eax);pushl %ebx;pushl %eax;movl $, (%eax)": 1,
                "movl %esi, %ecx;calll *;jmp - <PoStartNextPowerIrp+>;nop;nop": 1,
                "retl $;cmpl %edx, %ebx;jae  <IoAllocateErrorLogEntry+>;movl -(%ebp), %ecx;movl %ebx, -(%ebp,%ecx,)": 1,
                "leal (%esi), %eax;movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);cmpb %bl, ": 1,
                "movl (%ebp), %edi;leal -(%ebp), %ebx;andl $, -(%ebp);cmpw $, (%edi);movb $, (%ebp)": 1,
                "cmpw $, %ax;jae  <RtlIpvStringToAddressW+>;pushl $;pushl %eax;calll - <RtlInsertElementGenericTableAvl+>": 1,
                "cmpl $, -(%ebp);jne  <IoSetFileOrigin+>;xorl %esi, %esi;movw (%edi), %si;testw %si, %si": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <IoSetFileOrigin+>;cmpl $, -(%ebp)": 1,
                "addl $, %ebx;incl %edi;incl %edi;cmpb $, (%ebp);jne - <RtlIpvStringToAddressW+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);leal -(%ebp), %eax;subl %eax, %ebx;addl $, %ebx": 1,
                "je  <RtlIpvStringToAddressW+>;cmpl $, %ebx;jne  <IoSetFileOrigin+>;movl %ebx, %eax;decl %eax": 1,
                "cmpl %eax, %ebx;ja  <IoSetFileOrigin+>;movl -(%ebp), %ecx;cmpl %eax, %ecx;ja  <IoSetFileOrigin+>": 1,
                "movl -(%ebp), %ecx;cmpl %eax, %ecx;ja  <IoSetFileOrigin+>;movl -(%ebp), %esi;cmpl %eax, %esi": 1,
                "calll  <InbvCheckDisplayOwnership+>;calll  <InbvCheckDisplayOwnership+>;calll - <InbvCheckDisplayOwnership>;testb %al, %al;jne - <InbvCheckDisplayOwnership+>": 1,
                "nop;movl %edi, %edi;pushl %ebx;movb , %bl;movl $, %ecx": 1,
                "nop;movl , %eax;pushl %edi;xorl %edi, %edi;subl %edi, %eax": 1,
                "movl , %eax;pushl %edi;xorl %edi, %edi;subl %edi, %eax;je  <InbvCheckDisplayOwnership+>": 1,
                "je  <_strupr+>;decl %eax;jne  <_wcsupr+>;movl , %eax;movl %eax, %ecx": 1,
                "calll  <InbvCheckDisplayOwnership+>;movl , %eax;pushl $;pushl $;pushl $": 2,
                "pushl %esi;leal (,%eax,), %eax;pushl %eax;pushl $;calll  <InbvCheckDisplayOwnership+>": 2,
                "testb $, %al;je  <InbvCheckDisplayOwnership+>;shrl $, %eax;jmp - <MmGetPhysicalAddress+>;xorl %eax, %eax": 1,
                "movl , %ecx;pushl %ebx;movl (%ebp), %ebx;leal (%ebx,%ebx,), %eax;pushl %esi": 1,
                "leal (%ecx,%eax,), %esi;movl (%esi), %eax;shrl $, %eax;andl $, %eax;pushl %edi": 1,
                "leal (%ecx,%eax,), %ecx;movl (%ecx), %eax;cmpl %ebx, %eax;je  <InbvCheckDisplayOwnership+>;movl , %edx": 1,
                "je  <IoSetFileOrigin+>;decl (%ecx);movl , %eax;cmpl , %eax;popl %edi": 1,
                "movl %ecx, (%edi);jmp - <InbvCheckDisplayOwnership+>;movl , %eax;testl %eax, %eax;jne  <IoSetFileOrigin+>": 1,
                "movl , %eax;testl %eax, %eax;jne  <IoSetFileOrigin+>;jmp - <InbvCheckDisplayOwnership+>;movl %eax, (%edi)": 1,
                "movl (%esi), %eax;movl %eax, (%ecx);jmp - <InbvCheckDisplayOwnership+>;nop;nop": 1,
                "calll *(%ebx);decl %eax;pushl %ecx;addb %bl, (%eax,%ecx,);pushl %ecx": 1,
                "addb %bl, (%eax,%ecx,);pushl %ecx;addb %al, -(%ebx);addb %al, (%eax);addb %cl, (%ebx)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <RtlInsertElementGenericTableAvl+>;cmpl %edi, %eax": 1,
                "calll - <RtlInsertElementGenericTableAvl+>;cmpl %edi, %eax;je  <_wcsupr+>;movswl %di, %eax;testl %eax, %eax": 1,
                "cmpl %edi, %eax;je  <_wcsupr+>;movswl %di, %eax;testl %eax, %eax;je  <MmMapIoSpace+>": 1,
                "calll - <KeFlushEntireTb>;pushl $;calll - <RtlInsertElementGenericTableAvl+>;jmp - <MmMapIoSpace+>;nop": 1,
                "jne  <IoSetFileOrigin+>;movl -(%ebp), %ecx;pushl $;popl %edx;calll  <MmMapIoSpace+>": 1,
                "cmpl %edi, %ebx;je  <InbvInstallDisplayStringFilter+>;movl %edx, (%esi);movl %edi, (%esi);movl %esi, (%edx)": 1,
                "movl %edi, (%esi);movl %esi, (%edx);movb %al, %cl;movl %esi, (%edi);calll *": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpw $, (%eax)": 6,
                "jae  <IoSetFileOrigin+>;incl %ecx;incl %ecx;cmpw $, (%ecx);jne - <_wcsupr+>": 1,
                "pushl $;pushl (%ebp);pushl $;calll  <ExAllocatePoolWithTag>;movl %eax, (%esi)": 1,
                "je  <IoSetFileOrigin+>;cmpl $, (%ebp);je  <IoSetFileOrigin+>;movl $, (%esi);jmp  <IoBuildAsynchronousFsdRequest+>": 1,
                "jmp - <ExInitializeNPagedLookasideList+>;movl -(%ebp), %eax;invlpg (%eax);jmp - <ExInitializeNPagedLookasideList+>;nop": 1,
                "pushl $;addl $, %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl %fs:, %eax": 11,
                "pushl -(%ebp);movl , %ecx;pushl (%ebp);movl %eax, (%ecx);calll  <IoGetDriverObjectExtension+>": 1,
                "calll  <IoGetDriverObjectExtension+>;testl %eax, %eax;jl  <IoSetFileOrigin+>;calll *;movb %al, %cl": 1,
                "pushl $;movl %esi, %ecx;jmp - <MmMapIoSpace+>;decl %eax;je - <InbvCheckDisplayOwnership+>": 1,
                "pushl %eax;calll - <KeSetEvent>;jmp - <toupper+>;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);jmp - <RtlFindClearBitsAndSet+>;movl (%ebp), %esi;movl (%esi), %edx;movl (%esi), %esi": 1,
                "leal (%edi,%eax,), %eax;incl %esi;xorl %ebx, %ebx;xorl %edx, %edx;cmpl %eax, %edi": 1,
                "cmpl %eax, %edi;movl %eax, (%ebp);movl %esi, (%ebp);jae  <_wcsupr+>;movl (%edi), %eax": 1,
                "movl (%edi), %eax;shrl $, %eax;testl %ebx, %ebx;movl %eax, %esi;jne  <ExIsProcessorFeaturePresent+>": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);movl %fs:, %ebx": 1,
                "rep  movsl (%esi), %es:(%edi);movl (%ebp), %esp;addl $, %esp;movl (%eax), %ecx;movl %edi, (%ecx)": 1,
                "nop;orb %dh, (%eax);addb %bl, (%ebx);jo  <_wcsupr+>;addb %dl, -(%eax)": 1,
                "movl , %eax;movl -(%ebp), %ecx;subl %ecx, (%eax);movl , %eax;andl $, (%eax)": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);xorl %eax, %eax;popl %edi;popl %esi": 2,
                "pushl %edi;pushl %eax;movl %eax, (%ebp);calll  <ExInitializePagedLookasideList+>;xorl %ebx, %ebx": 1,
                "calll  <ExInitializePagedLookasideList+>;xorl %ebx, %ebx;cmpl %ebx, (%esi);jne  <IoSetFileOrigin+>;pushl (%ebp)": 1,
                "popl %ebx;leave;retl $;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "je  <_wcsupr+>;movb -(%ebp), %cl;calll *;xorl %eax, %eax;incl %eax": 1,
                "popl %edi;popl %ebx;jmp - <RtlInsertElementGenericTableAvl+>;movl %edi, (%esi);jmp  <_wcsupr+>": 1,
                "popl %ebx;jmp - <RtlInsertElementGenericTableAvl+>;movl %edi, (%esi);jmp  <_wcsupr+>;nop": 1,
                "popl %ebp;retl $;leal -(%ebp), %eax;pushl %eax;pushl %esi": 2,
                "jne  <ExRegisterCallback+>;movl %ebx, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 1,
                "jne  <IoSetFileOrigin+>;cmpl %edi, %ebx;jl  <IoSetFileOrigin+>;pushl %esi;calll - <_wcsupr+>": 1,
                "pushl %esi;calll - <_wcsupr+>;cmpb $, ;je  <IoEnumerateDeviceObjectList+>;pushl $": 1,
                "jne ;retl;nop;nop;nop": 1,
                "movl %eax, (%esi);calll  <RtlCheckRegistryKey+>;pushl -(%ebp);calll  <ExInitializePagedLookasideList+>;pushl (%esi)": 1,
                "cmpl %ebx, %edi;jl  <IoSetFileOrigin+>;movl -(%ebp), %ecx;calll - <_wcsupr+>;pushl %ebx": 1,
                "pushl %ebx;pushl $;pushl %esi;calll - <toupper+>;xorl %eax, %eax": 1,
                "pushl %esi;calll - <toupper+>;xorl %eax, %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "orl %eax, (%eax);lretl;lock;incl %esi;rclb (%ecx)": 1,
                "movb -(%ebp), %cl;calll *;jmp - <_wcsupr+>;nop;nop": 1,
                "movl %edx, %edi;shrl $, %edi;andl $, %edi;movl -(%edi), %edi;movl %edi, %ebx": 1,
                "jne - <_wcsupr+>;movl %edx, %ecx;shrl $, %ecx;shrl $, %edi;andl $, %ecx": 1,
                "addl %edi, %ecx;cmpl (%ebp), %ecx;leal (%ecx,%eax), %ebx;movl %ecx, %edi;movl %ebx, (%ebp)": 1,
                "ja - <_wcsupr+>;movl %edi, %eax;subl %ecx, %eax;shll $, %eax;addl %edx, %eax": 1,
                "calll - <_allshr>;movl (%ebp), %edx;movl %eax, %esi;movl (%ebp), %eax;movb $, %cl": 1,
                "ja  <IoSetFileOrigin+>;pushl -(%ebp);pushl (%ebp);pushl %esi;pushl %eax": 1,
                "pushl %edi;pushl %esi;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl %edx, %eax;jmp - <_wcsupr+>": 1,
                "pushl %edx;pushl (%ebp);calll - <IoAllocateMdl>;movl %eax, (%ebx);cmpl %edi, %eax": 1,
                "pushl %eax;calll - <MmProbeAndLockPages>;orl $-, -(%ebp);jmp - <IoBuildDeviceIoControlRequest+>;nop": 1,
                "movb %al, %bl;movl (%ebp), %eax;movl (%eax), %eax;xorl %esi, %esi;testb $, (%eax)": 1,
                "pushl (%edi);pushl (%edi);calll *(%edi);movl %eax, %ebx;testl %ebx, %ebx": 1,
                "pushl (%edi);calll *(%edi);movl %eax, %ebx;testl %ebx, %ebx;jne - <CcScheduleReadAhead+>": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jne - <CcScheduleReadAhead+>;jmp  <IoSetFileOrigin+>;nop": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl $, %esi;pushl %edi": 2,
                "movl (%ebp), %ecx;xchgl %eax, (%ecx);cmpb $, (%edi);jne  <IoSetFileOrigin+>;pushl (%ebp)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx);testl %eax, %eax;je  <IoSetFileOrigin+>": 1,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);testl %eax, %eax;je  <IoSetFileOrigin+>;pushl %edi": 1,
                "pushl $;pushl %esi;calll - <KeInitializeEvent+>;xorl %eax, %eax;cmpl %eax, (%ebx)": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebx);jl - <RtlCopyUnicodeString+>;jmp  <IoSetFileOrigin+>;testb $, %bh": 1,
                "shrl $, %eax;andl $, %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl , %esi": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl , %esi;andl $, %eax;andl $, -(%eax)": 1,
                "rep  movsl (%esi), %es:(%edi);movl , %esi;andl $, %eax;andl $, -(%eax);movb -(%ebp), %cl": 1,
                "andl $, %eax;andl $, -(%eax);movb -(%ebp), %cl;calll *%esi;calll *": 1,
                "andl %edi, %ecx;andl $, %edx;shll $, %edx;orl %edx, %ecx;movl %ecx, (%esi)": 1,
                "andl %edi, %ecx;orl %edx, %ecx;movl %ecx, (%ebx);xorl %esi, %esi;popl %edi": 1,
                "pushl $;pushl $;movb $, ;movl $, ;movl %ebx, ": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;jne  <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;andl $-, %eax": 1,
                "leave;retl $;movl (%ebp), %esi;orl $, (%esi);movl , %eax": 1,
                "ja  <IoSetFileOrigin+>;movl (%esi), %ecx;cmpl %eax, %ecx;ja  <IoSetFileOrigin+>;movl (%esi), %eax": 1,
                "jmp - <RtlFindClearBitsAndSet+>;movl , %eax;movl %esi, (%eax);movl , %ecx;addl $, %ecx": 1,
                "calll - <wcscmp+>;jmp - <RtlFindClearBitsAndSet+>;calll - <wcscmp+>;jmp - <MmQuerySystemSize+>;nop": 1,
                "addb %bh, %bh;lcalll *(%eax);xchgl %edi, %eax;pushl %ecx;addb %ch, (%esi)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %esi;calll - <KeSaveFloatingPointState+>;jmp - <ExInitializeZone+>": 1,
                "testb $, %al;jne  <InbvNotifyDisplayOwnershipLost+>;testb $, %al;je  <IoSetFileOrigin+>;testb $, %al": 1,
                "jne  <InbvNotifyDisplayOwnershipLost+>;testb $, %al;je  <IoSetFileOrigin+>;testb $, %al;je  <IoSetFileOrigin+>": 1,
                "je  <IoSetFileOrigin+>;testb $, %al;je  <IoSetFileOrigin+>;movl $, %eax;xorl %edx, %edx": 1,
                "movb (%ebp), %cl;calll *;cmpb $, -(%ebp);je - <PoStartNextPowerIrp+>;jmp  <IoSetFileOrigin+>": 1,
                "movl %esp, %ebp;pushl %esi;calll *;movl (%ebp), %ecx;movl (%ecx), %edx": 1,
                "je  <InbvNotifyDisplayOwnershipLost+>;cmpl %esi, (%edx);jne  <InbvNotifyDisplayOwnershipLost+>;cmpl %esi, (%edx);jne  <InbvNotifyDisplayOwnershipLost+>": 1,
                "calll - <KeSetEvent>;movl , %eax;movl (,%eax,), %eax;movl (%eax), %eax;movl , %ecx": 1,
                "movl (%eax), %eax;movl , %ecx;movl %ecx, (%eax);movl %esi, (%eax);movl %eax, (%ecx)": 2,
                "movl %esi, (%eax);movl , %eax;movl (,%eax,), %eax;movl (%eax), %eax;movl , %ecx": 1,
                "movl , %eax;movl (,%eax,), %eax;movl (%eax), %ecx;movl (%eax), %eax;addl $, ": 1,
                "calll *;incl ;movb %al, %cl;jmpl *;nop": 1,
                "movl , %ecx;cmpl %ecx, (%ebp);jae - <MmUnlockPages+>;andl $, (%ebp);jmp - <MmUnlockPages+>": 1,
                "leal (%eax,%ecx), %eax;movzwl (%ecx), %ecx;pushl %esi;xorl %esi, %esi;testl %ecx, %ecx": 1,
                "jb  <InbvNotifyDisplayOwnershipLost+>;movl (%eax), %edi;addl %edx, %edi;cmpl %edi, (%ebp);jb  <InbvNotifyDisplayOwnershipLost+>": 1,
                "popl %ebx;jne  <IoSetFileOrigin+>;xorl %esi, %esi;testl %esi, %esi;jne  <IoSetFileOrigin+>": 1,
                "testl %esi, %esi;jne  <IoSetFileOrigin+>;popl %edi;popl %esi;popl %ebp": 1,
                "jae  <InbvNotifyDisplayOwnershipLost+>;movb (%esi,%ecx,), %al;je  <InbvNotifyDisplayOwnershipLost+>;testl $, %esi;je  <InbvNotifyDisplayOwnershipLost+>": 1,
                "leal -(%esi,%ebx,), %esi;jmpl *(,%ebx,);adcl %edx, %eax;movl (%esi), %edx;adcl %edx, %eax": 1,
                "cmpl %eax, (%ebx);movsl (%esi), %es:(%edi);cmpl %eax, (%ebx);movb , %al;cmpl %eax, (%ebx)": 1,
                "decl -(%ebp);jmp - <InbvNotifyDisplayOwnershipLost+>;nop;nop;nop": 1,
                "decl -(%ebp);cmpl %ebx, -(%ebp);jne - <InbvNotifyDisplayOwnershipLost+>;leal (%eax), %esi;movl %esi, -(%ebp)": 1,
                "cmpl %ebx, %eax;jbe  <InbvNotifyDisplayOwnershipLost+>;movb (%esi,%eax), %dl;cmpb $, %dl;je  <InbvNotifyDisplayOwnershipLost+>": 1,
                "retl $;cmpl %ebx, %ecx;jne - <InbvNotifyDisplayOwnershipLost+>;jmp  <IoSetFileOrigin+>;nop": 1,
                "je  <InbvNotifyDisplayOwnershipLost+>;movl %esi, %eax;notl %eax;pushl %esi;andl %eax, %edi": 1,
                "movl %esi, %eax;notl %eax;pushl %esi;andl %eax, %edi;calll - <KeSetSystemAffinityThread>": 2,
                "movl (%ebp), %ecx;addl $, %eax;cmpb $, (%ebp);je  <InbvNotifyDisplayOwnershipLost+>;notl %ecx": 1,
                "testl %edi, %edi;jne - <InbvNotifyDisplayOwnershipLost+>;popl %esi;popl %ebx;popl %edi": 1,
                "popl %esi;popl %ebx;popl %edi;popl %ebp;retl $": 9,
                "pushl $;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %eax;movl (%eax), %eax;pushl %esi": 1,
                "movl (%eax), %edi;addl $, %edi;movl (%edi), %esi;cmpl %edi, %esi;jne  <IoSetFileOrigin+>": 1,
                "testb %al, %al;je  <InbvDisplayString+>;pushl %edi;calll  <IoReportResourceUsage+>;popl %edi": 1,
                "movl (%ebp), %edi;movl (%edi), %ecx;movl (%ecx), %edx;testl %edx, %edx;jne  <KeDisconnectInterrupt+>": 1,
                "testl %edx, %edx;jne  <KeDisconnectInterrupt+>;movl (%edi), %ecx;movl (%ecx), %ecx;movl %ecx, (%esi)": 1,
                "movl (%edi), %ecx;movl %esi, (%ecx);movb $, -(%ebp);movb %al, %cl;calll *": 1,
                "calll *;cmpb $, -(%ebp);popl %ebx;je  <IoSetFileOrigin+>;movl (%ebp), %eax": 1,
                "popl %ebx;je  <IoSetFileOrigin+>;movl (%ebp), %eax;addl $, %esi;movl %esi, (%eax)": 1,
                "je  <IoSetFileOrigin+>;movl (%ebp), %eax;addl $, %esi;movl %esi, (%eax);xorl %eax, %eax": 1,
                "movl %esi, (%eax);xorl %eax, %eax;popl %edi;popl %esi;leave": 4,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl %edi, %ecx;calll - <ObfReferenceObject>": 7,
                "calll  <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;je  <IoSetFileOrigin+>;movl (%ebp), %eax": 1,
                "movl (%ecx), %edi;movl %ecx, (%esi);movl %edi, (%esi);movl %esi, (%edi);movb $, (%ebp)": 1,
                "movl %eax, (%esi);pushl $;movl %esi, (%eax);pushl $;leal (%edi), %eax": 1,
                "pushl $;leal (%edi), %eax;pushl %eax;calll  <IoReportResourceForDetection+>;pushl $": 1,
                "calll  <IoReportResourceForDetection+>;pushl $;pushl (%edi);calll  <ExFreePoolWithTag>;pushl $": 1,
                "movb %al, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movb (%ebp), %al;movb %al, (%esi)": 1,
                "movb (%ebp), %al;movb %al, (%esi);movb (%ebp), %al;movb %al, (%esi);movb (%ebp), %al": 1,
                "movl (%edi), %ebx;movl %ebx, (%edx);addl $, %edi;addl $, %edx;cmpl $, %edi": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll  <KeInitializeInterrupt+>": 1,
                "movl (%eax), %eax;movw %di, (%ecx,%eax);popl %edi;popl %esi;popl %ebx": 1,
                "movl %esp, %ebp;movb (%ebp), %al;popl %ebp;retl $;nop": 1,
                "subl $, %eax;jne  <IoSetFileOrigin+>;pushl (%ebp);calll *;movzbl %al, %eax": 1,
                "movl %eax, (%ebp);calll *;movl (%edi), %ecx;pushl (%ebp);movzbl %al, %eax": 1,
                "cmpb %al, (%esi);jb  <KeConnectInterrupt+>;cmpb %bl, (%esi);jne  <KeConnectInterrupt+>;xorl %eax, %eax": 1,
                "je - <IoPageRead+>;subl $, %eax;jne - <IoPageRead+>;testw $, -(%ebp);jne - <IoPageRead+>": 1,
                "orl $, -(%ebp);jmp - <IoPageRead+>;testl %eax, %eax;je - <IoPageRead+>;andl $, -(%ebp)": 1,
                "jle - <IoPageRead+>;movb (%eax), %cl;testb %cl, %cl;je - <IoPageRead+>;movl , %esi": 1,
                "jmp - <IoPageRead+>;nop;popl %esi;addb %ah, -(%esi);orb (%edx), %al": 1,
                "movl %ebx, (%esi);movb %dl, %cl;calll *;pushl %ebx;pushl -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %edx, %edi;jb  <IoSetFileOrigin+>;movl $, %eax;cmpl %eax, %edi": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);calll - <IoBuildSynchronousFsdRequest>;cmpl %ebx, %eax;je  <HalExamineMBR+>": 1,
                "movl %eax, %edx;calll - <IofCallDriver>;cmpl $, %eax;jne  <HalExamineMBR+>;pushl %ebx": 1,
                "movb %cl, ;popl %ebp;retl $;nop;nop": 1,
                "movl %ecx, ;movl %eax, ;popl %ebp;retl $;nop": 1,
                "movb %al, %bl;calll  <KeIoSetAccessProcess+>;movl %eax, %esi;movl %esi, %ecx;calll - <ObfReferenceObject>": 1,
                "xorl %eax, %eax;movb , %al;pushl %edi;pushl -(%ebp);pushl %eax": 1,
                "pushl -(%ebp);pushl %eax;pushl ;calll  <RtlCopyLuid+>;movb $, -(%ebp)": 1,
                "jmp - <toupper+>;movb $, -(%ebp);jmp - <toupper+>;xorl %eax, %eax;jmp - <toupper+>": 1,
                "movl %esp, %ebp;pushl %ebx;xorl %ebx, %ebx;cmpb %bl, ;je  <InbvInstallDisplayStringFilter+>": 1,
                "movb $, %al;popl %ebx;popl %ebp;retl $;cmpl $, %edi": 1,
                "das;adcb (%ebx), %dl;incl %edx;adcb (%ebx), %dl;pushl %ebx": 1,
                "addb %dl, -(%eax);int;int;int;int": 1,
                "movl %ebx, -(%ebp);jmp - <_stricmp+>;xorb %al, %al;jmp - <RtlDeleteElementGenericTableAvl+>;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ebx;xorl %esi, %esi;incl %esi;testb $, (%ebp);movb $, -(%ebp)": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;testl %eax, %eax;movl %ecx, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%eax), %eax;movl (%eax), %ecx;cmpl $, %ecx;je  <RtlCopyString+>;cmpl $, %ecx": 1,
                "pushl %esi;pushl %edi;movl %edx, %esi;movl %ecx, %edi;jne  <IoSetFileOrigin+>": 1,
                "pushl %esi;leal (,%eax,), %eax;pushl %eax;pushl $;jmp  <IoAttachDeviceToDeviceStack+>": 1,
                "movl %edx, (%esi);movb (%ebp), %dl;movl $, %ecx;calll *;movl (%esi), %eax": 1,
                "popl %ebx;popl %ebp;retl $;subl $, %eax;je - <DbgPrint+>": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %ebx;pushl %edi;movb $, %cl": 1,
                "movl $, %edi;movl %edi, %ecx;movb %al, -(%ebp);calll - <KiAcquireSpinLock>;movl (%ebp), %eax": 1,
                "testl %eax, %eax;je  <MmIsDriverVerifying+>;movl (%eax), %eax;shrl $, %eax;andl $, %eax": 1,
                "jne  <InbvInstallDisplayStringFilter+>;cmpl %ebx, -(%ebp);jne  <InbvInstallDisplayStringFilter+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "testl %eax, ;setne %al;popl %ebp;retl $;cmpl $, ": 1,
                "nop;nop;addb $-, (%edx);adcl %edi, (%esi);loop ": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx;pushl $": 7,
                "calll *;movl $, %ebx;movl %ebx, %ecx;movb %al, -(%ebp);calll - <KiAcquireSpinLock>": 1,
                "cmpb $, (%ecx);je - <KeConnectInterrupt+>;movl (%ecx), %eax;cmpl (%esi), %eax;jne - <KeConnectInterrupt+>": 1,
                "movl $, (%esi);jmp - <KeInitializeInterrupt+>;movl -(%ebp), %edi;jmp - <KeInitializeInterrupt+>;movl %edi, (%ebx)": 1,
                "movb (%esi), %al;movb %al, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%esi)": 1,
                "calll - <KeInitializeInterrupt+>;cmpl $, -(%ebp);je  <IoSetFileOrigin+>;pushl -(%ebp);pushl (%esi)": 1,
                "movl %ebx, %eax;popl %ebx;retl;andl $, -(%ebp);jmp - <wcsncmp+>": 1,
                "jne - <IoAllocateDriverObjectExtension+>;jmp - <IoAllocateDriverObjectExtension+>;movl (%esi), %esi;jmp  <IoGetDriverObjectExtension+>;xorl %eax, %eax": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl (%edx), %eax;movl (%eax), %ecx;movl $, %eax": 1,
                "retl $;pushl $;pushl %ecx;calll - <KeInitializeInterrupt+>;movl -(%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);movb %cl, -(%ebp);movb %cl, -(%ebp);movl %ecx, -(%ebp)": 1,
                "calll *;movb %al, -(%ebp);movl %ds:, %eax;movb -(%ebp), %cl;movl %eax, %ebx": 1,
                "jne  <IoSetFileOrigin+>;leal (%ebx), %eax;movl $, %ecx;lock;andl %ecx, (%eax)": 1,
                "setne %al;movb %al, ;movb -(%ebp), %al;movb %al, ;movb -(%ebp), %al": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx": 5,
                "divl %ecx;pushl %ebx;pushl %edi;xorl %ebx, %ebx;movl %eax, %edi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;movl %ecx, -(%ebp);subl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;shll $, %eax;leal (%ecx,%eax), %esi;movb (%ebp), %al": 1,
                "popl %ebx;leave;retl $;movb %bl, -(%esi);jmp - <KeIoSetAccessProcess+>": 1,
                "cmpb $, ;pushl %edi;movl (%ebp), %edi;jne  <KeIoSetAccessProcess+>;cmpb %bl, (%edi)": 1,
                "jb  <IoSetFileOrigin+>;cmpb $, %dl;ja  <IoSetFileOrigin+>;cmpb $, (%ecx);ja  <IoSetFileOrigin+>": 1,
                "pushl $;xorl %edx, %edx;popl %ebx;divl %ebx;xorl %ebx, %ebx": 1,
                "leal -(%eax), %ecx;movl %ecx, %eax;shll $, %eax;addl %edi, %eax;orl $-, (%eax)": 1,
                "movb %bl, (%eax);popl %edi;movb %cl, (%eax);xorl %eax, %eax;popl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %edi;movl %ds:, %eax": 2,
                "movl %esi, (%eax);movl $, %edi;je  <IoSetFileOrigin+>;leal (%edx), %esi;pushl %ebx": 1,
                "andl %ecx, (%eax);popl %edi;xorl %eax, %eax;popl %esi;popl %ebp": 1,
                "popl %ebx;cmpl %ebx, (%ebp);ja  <IoSetFileOrigin+>;movl (%ebp), %esi;testl %esi, %esi": 1,
                "jne - <KeIoSetAccessProcess+>;movl , %eax;testl %eax, %eax;jne  <IoSetFileOrigin+>;movl (%ebp), %eax": 1,
                "jne  <IoSetFileOrigin+>;movl (%ebp), %eax;movl %eax, ;calll - <KeRevertToUserAffinityThread>;xorl %eax, %eax": 1,
                "ja  <IoSetFileOrigin+>;testb $, ;jne  <IoSetFileOrigin+>;pushl %edi;pushl %esi": 1,
                "movl $, %edi;movl $, %esi;je  <KeIoSetAccessProcess+>;pushl %eax;movl , %eax": 1,
                "movl $, %esi;je  <KeIoSetAccessProcess+>;pushl %eax;movl , %eax;shrl $, %eax": 1,
                "je  <KeIoSetAccessProcess+>;pushl %eax;movl , %eax;shrl $, %eax;andl %edi, %eax": 1,
                "decl -(%ebp);testl %eax, %eax;jg  <KeIoSetAccessProcess+>;movl %ebx, %eax;orl %edi, %eax": 1,
                "jne  <KeIoSetAccessProcess+>;popl %ebp;retl $;movl %ecx, %eax;jmp - <KeIoSetAccessProcess+>": 1,
                "popl %ebp;retl $;movl %ecx, %eax;jmp - <KeIoSetAccessProcess+>;nop": 1,
                "orl $, -(%ebp);jmp - <KeIoSetAccessProcess+>;cltd;jmp - <wctomb+>;testl %edx, %edx": 1,
                "je - <PoRegisterDeviceForIdleDetection+>;jmp - <DbgPrint+>;movl (%ebp), %ecx;movb (%ebp), %al;decl (%ebp)": 1,
                "pushl %esi;pushl $;leal -(%ebp), %eax;calll - <PoRegisterDeviceForIdleDetection+>;addl $, %esp": 1,
                "movl %ecx, %eax;movl $, %esi;divl %esi;xorl %edx, %edx;pushl %edi": 1,
                "movl $, %ebx;movl %eax, %esi;imull $, %eax, %eax;addl %eax, %ecx;movl %ecx, %eax": 1,
                "divl %edi;movl %ecx, %edi;imull $, %edi, %edi;xorl %edx, %edx;pushl $": 1,
                "orl %ecx, (%edx);orb (%edx), %cl;orb (%edx), %cl;orb (%edx), %cl;orb (%edx), %cl": 2,
                "orb (%ebx), %cl;orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx": 2,
                "orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx": 22,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl $;pushl ": 1,
                "pushl %esi;calll - <RtlExtendedMagicDivide>;movl (%ebp), %ecx;movl %eax, (%ecx);imull $, %eax, %eax": 1,
                "movb (%esi), %bl;movb %al, -(%ebp);movb (%ebp), %al;cmpb , %al;jge  <IoSetFileOrigin+>": 1,
                "testb $, %bl;je  <IoEnumerateDeviceObjectList+>;movswl -(%eax), %eax;jmp - <_snprintf+>;nop": 1,
                "popl %ebp;retl;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl $;pushl $;movl $, ;calll - <ExQueueWorkItem>;popl %ebp": 1,
                "movl %edx, ;movl %esi, (%edx);movb %al, %cl;calll *;movl %edi, %eax": 1,
                "addl $, %eax;leal (%edx), %ecx;movl (%ecx), %esi;movl %ecx, (%eax);movl %esi, (%eax)": 1,
                "leal (%edx), %esi;movl %esi, -(%ebp);movl %eax, -(%ebp);movl %eax, (%esi);movl %eax, %edi": 1,
                "popl %eax;lock;andl %eax, (%esi);movl , %eax;testl %eax, %eax": 1,
                "movl (%eax), %eax;movl %edx, (%eax);movl %eax, (%edx);movb $, (%ecx);calll - <ExReleaseResourceLite+>": 3,
                "movl $, -(%ebp);jmp  <MmProbeAndLockSelectedPages+>;nop;nop;nop": 1,
                "movl %eax, %ecx;andl $, %ecx;negl %ecx;sbbl %ecx, %ecx;shrl $, %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax;andl $, %ecx;cmpl $, (%ebp)": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %esi;cmpl , %esi;ja  <MmProbeAndLockSelectedPages+>;movl (%ebx), %esi": 1,
                "movl %esi, -(%ebp);orb $, (%eax);cmpl %edx, %ecx;leal (%eax), %esi;movl %esi, -(%ebp)": 1,
                "ja  <IoSetFileOrigin+>;movl %edi, %edx;shrl $, %edx;andl $, %edx;leal -(%edx), %esi": 1,
                "movl %ecx, (%eax);je - <KeSetIdealProcessorThread+>;cmpb $, -(%ebp);je  <MmProbeAndLockSelectedPages+>;movl -(%ebp), %eax": 1,
                "cmpl , %edx;jae  <IoSetFileOrigin+>;movl , %edx;subl , %edx;testl %edx, %edx": 1,
                "cmpl $, (%ecx);je  <MmProbeAndLockSelectedPages+>;incl ;incw (%ecx);movl -(%ebp), %eax": 1,
                "pushal;pushl %es;jg - <MmProbeAndLockSelectedPages+>;andl $, -(%ebp);jmp - <MmProbeAndLockSelectedPages+>": 1,
                "movl (%esi), %ecx;movl %eax, (%ecx);pushl %edi;movl %ecx, (%eax);movl (%esi), %edi": 1,
                "movl %ecx, (%eax);movl (%esi), %edi;leal (%edi), %ebx;pushl %ebx;calll - <IoAcquireVpbSpinLock>": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movb (%edi), %al;negb %al;pushl %edi": 1,
                "calll  <MmProbeAndLockSelectedPages+>;jmp - <RtlInsertElementGenericTableAvl+>;nop;nop;nop": 1,
                "orb $, %al;std;incl %edx;orb %al, (%eax);nop": 1,
                "nop;cmpb $, -(%ebp);jne  <IoSetFileOrigin+>;retl;testb %cl, %cl": 1,
                "calll - <ExAcquireFastMutexUnsafe>;movb $, -(%ebp);xorl %edx, %edx;movl %edx, -(%ebp);movl (%esi), %ecx": 1,
                "cmpl (%eax), %edi;je - <MmProbeAndLockSelectedPages+>;testw $, %cx;jne - <MmProbeAndLockSelectedPages+>;movl (%esi), %edi": 1,
                "movl (%esi), %eax;testb $, %al;je  <IoSetFileOrigin+>;orl $, %eax;movl %eax, (%esi)": 1,
                "testb $, (%eax);jne  <IoSetFileOrigin+>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "addb %cl, (%ebx);orb %dh, %bh;sarl $, -(%edi);je  <MmProbeAndLockSelectedPages+>;testb $, (%edi)": 1,
                "movzbl (%eax), %ecx;testl %ecx, %ecx;je  <MmProbeAndLockSelectedPages+>;cmpl $, %ecx;je  <MmProbeAndLockSelectedPages+>": 1,
                "pushl $;calll  <ExAllocatePoolWithTag>;movl %eax, %esi;movl %esi, -(%ebp);movl (%ebp), %edi": 1,
                "movl %esi, -(%ebp);movl (%ebp), %edi;movl %edi, (%esi);movl (%ebp), %ecx;movl %ecx, (%esi)": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "movl %ecx, (%esi);cmpl $, (%ebp);je  <MmProbeAndLockSelectedPages+>;pushl %edi;pushl %ecx": 1,
                "pushl %ecx;calll *(%ebp);andl $, (%edi);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "calll *(%ebp);andl $, (%edi);leal (%ebx), %eax;movl %eax, -(%ebp);movl (%eax), %ecx": 1,
                "movl %eax, (%esi);movl %ecx, (%esi);movl %esi, (%ecx);movl %esi, (%eax);leal (%edi), %esi": 1,
                "cmpl %esi, (%ebp);je  <IoSetFileOrigin+>;movl (%edi), %edi;movb (%edi), %al;orb $, %al": 1,
                "retl $;nop;addb %al, (%eax);addb %al, (%eax);loop ": 1,
                "jne  <IoSetFileOrigin+>;movl %fs:, %eax;incl (%eax);jne  <MmProbeAndLockSelectedPages+>;leal (%eax), %ecx": 1,
                "movl %fs:, %eax;incl (%eax);jne  <MmProbeAndLockSelectedPages+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "pushl $;pushl $;calll - <_CIsqrt+>;andl $, -(%ebp);movl (%ebp), %esi": 5,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);andl $, (%esi);xorl %eax, %eax;movb (%esi), %al": 1,
                "movl %eax, -(%ebp);movl (%ecx), %ecx;movl %ecx, -(%ebp);movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "addb %al, (%eax);addb %dh, %al;decl %ecx;incl %esp;addb %cl, (%esi)": 1,
                "addb %al, (%ebp);movl %ss, %eax;adcl %edi, (%esi);loop ;das": 1,
                "popal;popl %ss;stosb %al, %es:(%edi);pushl %ecx;addb %ah, (%eax)": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);addb %ch, (%ecx);addb %dh, (%di);jb  <MmProbeAndLockSelectedPages+>": 2,
                "addb %ch, (%edi);outsb (%esi), %dx;addb %al, (%eax);addb %al, (%ebp);insl %dx, %es:(%edi)": 1,
                "outsb (%esi), %dx;addb %al, (%eax);addb %al, (%ebp);insl %dx, %es:(%edi);addb %ah, (%edx)": 1,
                "pushl %esp;addb %dh, (%edx);popal;addb %ah, (%ebx);addb %al, %gs:(%ecx)": 1,
                "addb %ch, (%edi);arpl %ax, (%eax);imull $, (%eax), %eax;addb %dl, (%edi);decl %ebp": 1,
                "addb %dl, (%edx);addb %al, (%eax);nop;nop;pushl %ebx": 1,
                "pushl %edx;addb %dl, (%eax,%eax);addb %dl, (%eax);addb %cl, (%edi);pushl %edx": 1,
                "pushl %esp;addb %dl, (%edx);incl %ebp;addb %al, (%ecx);decl %ebp": 1,
                "addb %al, (%eax,%eax);addb %cl, (%edi);addb %al, (%eax);nop;nop": 2,
                "addb %al, (%esi);decl %ecx;addb %al, (%edi);addb %al, (%eax);nop": 1,
                "addb %al, (%edi);addb %al, (%eax);nop;nop;incl %esp": 1,
                "nop;incl %esp;addb %cl, (%ebp);decl %ecx;addb %cl, (%edi)": 1,
                "addb %cl, (%edi);addb %al, (%eax);nop;nop;pushl %eax": 1,
                "nop;pushl %eax;addb %al, (%ebx);decl %ecx;addb %al, (%eax)": 1,
                "incl %esi;addb %al, (%ebp);pushl %esp;addb %al, (%ebx);decl %eax": 1,
                "addb %dl, (%eax);addb %dh, (%edx);addb %dl, (%eax,%eax);addb %cl, (%ebp);incl %ebp": 1,
                "addb %al, (%eax);addb %dl, (%eax);addb %al, (%ebp);pushl %eax;addb %al, (%eax)": 1,
                "decl %ecx;addb %al, (%eax);addb %al, (%edx);pushl %ebp;addb %dl, (%edx)": 1,
                "incl %ebp;addb %al, (%eax);addb %al, (%esi);decl %esp;addb %dl, (%eax,%eax)": 1,
                "nop;incl %ecx;addb %dl, (%ebp);pushl %esp;addb %cl, (%edi)": 1,
                "incl %ebx;addb %cl, (%eax);decl %ebx;addb %al, (%eax);addb %dl, (%edx)": 1,
                "addb %cl, (%ecx);incl %ecx;addb %cl, (%eax,%eax);addb %dl, (%eax);addb %al, (%ebx)": 1,
                "addb %dl, (%eax);addb %dl, (%eax);decl %ebp;addb %al, (%edi);pushl %edx": 1,
                "addb %dl, (%eax);decl %ebp;addb %al, (%edi);pushl %edx;addb %al, (%eax)": 1,
                "addb %al, (%ebx);decl %eax;addb %cl, (%edi);pushl %ebx;addb %dl, (%eax,%eax)": 1,
                "pushl %ebx;addb %dl, (%eax,%eax);addb %dl, (%esi);decl %ecx;addb %al, (%eax,%eax)": 1,
                "decl %eax;addb %al, (%ecx);decl %esp;addb %cl, (%ecx);incl %ecx": 1,
                "addb %cl, (%ecx);addb %al, (%eax);nop;nop;incl %ecx": 1,
                "addb %al, (%edx);addb %al, (%eax);nop;nop;pushl %esp": 1,
                "addb %cl, (%ebx);addb %al, (%eax);nop;nop;decl %ebp": 1,
                "incl %esp;addb %al, (%ebx);decl %esp;addb %al, (%ecx);pushl %ebx": 1,
                "nop;nop;incl %ebx;addb %cl, (%eax,%eax);addb %dl, (%ebx)": 1,
                "addb %cl, (%eax,%eax);addb %dl, (%ebx);pushl %ebx;addb %dl, (%eax);decl %esi": 1,
                "decl %ebp;addb %al, (%eax);addb %al, (%ebx);incl %esp;addb %al, (%ecx)": 1,
                "addb %al, (%eax);nop;nop;pushl %ebx;addb %al, (%ebp)": 1,
                "pushl %ebx;addb %al, (%eax);addb %dl, (%eax);addb %cl, (%esi);xorb (%eax), %al": 1,
                "imull $, (%eax), %eax;andb %al, (%eax);incl %esi;addb %ch, (%ecx);insb %dx, %es:(%edi)": 1,
                "incl %esp;addb %ah, (%ebp);bound (%eax), %eax;jne  <MmProbeAndLockSelectedPages+>;addb %ah, (%bx)": 2,
                "addb %ch, (%edi);addb %dh, %fs:(%ebp);insb %dx, %es:(%edi);addb %ah, (%ebp);decl %ebp": 1,
                "addb %al, (%eax);incl %esp;addb %ah, (%ebp);bound (%eax), %eax;jne  <MmProbeAndLockSelectedPages+>": 1,
                "addb %dl, (%eax);jb  <MmProbeAndLockSelectedPages+>;imull $, (%eax), %eax;imull $, (%eax), %eax;pushl %ebx": 1,
                "addb %ah, %gs:(%esi);outsl (%esi), %dx;addb %dh, (%edx);addb %al, %gs:(%ebx);outsl (%esi), %dx": 1,
                "addb %ch, (%ecx);arpl %ax, (%eax);jns  <MmProbeAndLockSelectedPages+>;pushl %ebx;addb %ch, (%ecx)": 1,
                "addb %ah, (%edi);addb %cl, %gs:(%ebp);popal;addb %dh, (%ebx);imull $, (%eax), %eax": 1,
                "outsb (%esi), %dx;addb %ch, (%ecx);je  <MmProbeAndLockSelectedPages+>;jns  <MmProbeAndLockSelectedPages+>;addb %al, (%eax)": 1,
                "addb %ah, (%di);insl %dx, %es:(%edi);addb %ah, (%ebp);outsb (%esi), %dx;addb %dh, (%eax,%eax)": 4,
                "jns  <MmProbeAndLockSelectedPages+>;decl %esp;addb %ah, (%ecx);jp  <MmProbeAndLockSelectedPages+>;jns  <MmProbeAndLockSelectedPages+>": 1,
                "popal;addb %ah, (%edx);insb %dx, %es:(%edi);addb %ah, (%ebp);addb %al, %fs:(%eax)": 5,
                "addb %ah, (%edx);insb %dx, %es:(%edi);addb %ah, (%ebp);addb %al, %fs:(%eax);addb %dl, (%eax)": 2,
                "addb %al, %fs:(%eax);addb %dl, (%eax);addb %ah, (%edi);imull $, (%eax), %eax;jb  <MmProbeAndLockSelectedPages+>": 1,
                "jns  <MmProbeAndLockSelectedPages+>;decl %esp;addb %ch, (%edi);addb %dl, (%bp,%di);imull $, (%eax), %eax": 1,
                "nop;pushl %ebx;addb %ah, (%ebp);jae  <MmProbeAndLockSelectedPages+>;jae  <MmProbeAndLockSelectedPages+>": 4,
                "addb %ch, (%esi);addb %dh, (%di);popal;addb %ah, (%edi);addb %al, %gs:(%eax)": 3,
                "addb %al, (%eax,%eax);addb %ah, (%esi);popal;addb %dh, (%ebp);insb %dx, %es:(%edi)": 8,
                "addb %al, (%eax);nop;nop;pushl %edi;addb %ch, (%ecx)": 2,
                "outsb (%esi), %dx;addb %ah, (%eax,%eax);addb %dh, (%edi);jae  <MmProbeAndLockSelectedPages+>;addb %al, (%eax)": 1,
                "bound (%eax), %eax;insb %dx, %es:(%edi);addb %ah, (%ebp);addb %al, %fs:(%eax);addb %al, (%edx)": 1,
                "insl %dx, %es:(%edi);addb %ch, (%ebp);imull $, (%eax), %eax;outsl (%esi), %dx;addb %dh, (%eax,%eax)": 1,
                "addb %ch, %gs:(%esi);je  <MmProbeAndLockSelectedPages+>;pushl %edx;addb %ah, (%ebp);jae  <MmProbeAndLockSelectedPages+>": 1,
                "addb %dh, (%ebp);jb  <MmProbeAndLockSelectedPages+>;arpl %ax, (%eax);addb %al, %gs:(%ebx);pushl $": 1,
                "decl %ecx;addb %dh, (%edx);jo  <MmProbeAndLockSelectedPages+>;pushl %ebx;addb %dh, (%eax,%eax)": 1,
                "addb %dh, %gs:(%edx);popal;addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx": 1,
                "addb %cl, (%ecx);das;addb %cl, (%edi);andb %al, (%eax);pushl %ebx": 1,
                "addb %cl, %gs:(%ecx);outsb (%esi), %dx;addb %dh, (%ebx);addb %ch, %gs:(%esi);jae  <MmProbeAndLockSelectedPages+>": 1,
                "addb %cl, %gs:(%ecx);addb %ch, %fs:(%eax,%eax);addb %al, (%eax);addb %dl, (%eax);addb %dh, %gs:(%edx)": 1,
                "jae  <MmProbeAndLockSelectedPages+>;jns  <MmProbeAndLockSelectedPages+>;incl %ecx;addb %ah, (%eax,%eax);addb %ch, (%ebp)": 1,
                "popal;addb %dh, (%eax);popal;addb %ah, (%ebx);imull $, (%eax), %eax": 1,
                "addb %ah, (%ebp);jb  <MmProbeAndLockSelectedPages+>;addb %al, (%eax,%eax);addb %ah, (%ebx);jb  <MmProbeAndLockSelectedPages+>": 3,
                "addb %ch, (%eax,%eax);addb %ah, (%ebp);addb %al, (%eax);pushl %eax;addb %ah, (%ebp)": 2,
                "addb %ch, %gs:(%esi);je  <MmProbeAndLockSelectedPages+>;decl %ebp;addb %ch, (%edi);addb %ch, %fs:(%ecx)": 2,
                "addb %ch, (%eax,%eax);addb %dh, (%edx);addb %dh, %gs:(%ecx);jne  <MmProbeAndLockSelectedPages+>;addb %ch, %gs:(%esi)": 1,
                "addb %ch, %gs:(%esi);arpl %ax, (%eax);jns  <MmProbeAndLockSelectedPages+>;incl %esp;addb %ah, (%ebp)": 1,
                "insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %al, (%eax);addb %dl, (%eax);addb %dh, (%edx)": 1,
                "arpl %ax, (%eax);addb %ch, %gs:(%esi);je  <MmProbeAndLockSelectedPages+>;addb %al, (%eax);decl %ecx": 1,
                "insl %dx, %es:(%edi);addb %ch, (%edi);je  <MmProbeAndLockSelectedPages+>;addb %dl, %gs:(%eax,%eax);addb %ch, (%ebp)": 1,
                "addb %ch, %fs:(%eax,%eax);addb %al, (%eax,%eax);addb %ah, (%esi);popal;addb %dh, (%ebp)": 2,
                "addb %dh, (%ebp);insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %ah, (%ebp);insl %dx, %es:(%edi)": 1,
                "insl %dx, %es:(%edi);addb %ch, (%edi);je  <MmProbeAndLockSelectedPages+>;addb %dl, %gs:(%eax);addb %dh, %gs:(%edx)": 1,
                "nop;nop;decl %ecx;addb %ah, (%eax,%eax);addb %ah, (%ebp)": 6,
                "addb %ah, (%ebp);incl %esi;addb %dh, (%edx);outsl (%esi), %dx;addb %ch, (%ebp)": 2,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %ch, (%ebp);xorb %al, (%eax);incl %esp": 1,
                "addb %dh, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;addb %dh, %gs:(%edx);addb %al, (%eax)": 1,
                "jae  <MmProbeAndLockSelectedPages+>;addb %ah, %gs:(%ebx);jne  <MmProbeAndLockSelectedPages+>;jb  <MmProbeAndLockSelectedPages+>;addb %al, %gs:(%edi)": 1,
                "jae  <MmProbeAndLockSelectedPages+>;je  <MmProbeAndLockSelectedPages+>;pushl %ebx;addb %bh, (%ecx);jae  <MmProbeAndLockSelectedPages+>": 1,
                "je  <MmProbeAndLockSelectedPages+>;pushl %ebx;addb %bh, (%ecx);jae  <MmProbeAndLockSelectedPages+>;je  <MmProbeAndLockSelectedPages+>": 1,
                "addb %ch, (%eax,%eax);addb %ch, (%ecx);jae  <MmProbeAndLockSelectedPages+>;popal;addb %ah, (%edx)": 1,
                "addb %ah, (%ecx);je  <MmProbeAndLockSelectedPages+>;addb %al, %gs:(%eax);addb %dl, (%eax);addb %ch, (%edx)": 1,
                "addb %al, %gs:(%eax);addb %dl, (%eax);addb %ch, (%edx);jne  <MmProbeAndLockSelectedPages+>;jae  <MmProbeAndLockSelectedPages+>": 1,
                "addb %al, %gs:(%eax);addb %dl, (%eax);addb %ah, (%ebx);pushl %ecx;addb %dh, (%ebp)": 1,
                "addb %ch, (%ecx);js  <MmProbeAndLockSelectedPages+>;addb %al, (%eax);incl %ecx;addb %ah, (%eax,%eax)": 1,
                "addb %ah, (%ecx);jns  <MmProbeAndLockSelectedPages+>;addb %ah, %gs:(%eax,%eax);addb %ch, (%edi);jb  <MmProbeAndLockSelectedPages+>": 1,
                "addb %ah, (%di);jb  <MmProbeAndLockSelectedPages+>;popl %esp;addb %al, (%ebp);js  <MmProbeAndLockSelectedPages+>": 1,
                "jne  <MmProbeAndLockSelectedPages+>;je  <MmProbeAndLockSelectedPages+>;imull $, (%eax), %eax;addb %al, (%eax);decl %ebp": 1,
                "nop;pushl %esi;addb %ah, (%ebp);jb  <MmProbeAndLockSelectedPages+>;imull $, (%eax), %eax": 1,
                "jb  <MmProbeAndLockSelectedPages+>;jae  <MmProbeAndLockSelectedPages+>;addb %al, (%eax);pushl %esp;addb %dh, (%edx)": 1,
                "jae  <MmProbeAndLockSelectedPages+>;addb %al, (%eax);nop;nop;pushl %eax": 1,
                "addb %dh, %gs:(%edx);jb  <MmProbeAndLockSelectedPages+>;jne  <MmProbeAndLockSelectedPages+>;outsb (%esi), %dx;addb %dh, (%ebx)": 1,
                "outsb (%esi), %dx;addb %dh, (%ebx);addb %al, (%eax);pushl %eax;addb %ch, (%edi)": 1,
                "addb %ah, (%ebp);popal;addb %dh, (%edx);pushl %eax;addb %ah, (%ecx)": 1,
                "je  <MmProbeAndLockSelectedPages+>;addb %ch, %fs:(%edi);ja  <MmProbeAndLockSelectedPages+>;outsb (%esi), %dx;addb %al, (%eax)": 1,
                "pushl $;addb %dl, (%eax);addb %ah, (%eax,%eax);addb %ah, (%esi);imull $, (%eax), %eax": 1,
                "addb %ah, (%ecx);addb %ah, (%di);decl %esp;addb %ch, (%ecx);addb %ah, (%ebp)": 1,
                "addb %ch, (%ecx);addb %ah, (%ebp);addb %al, (%eax);nop;nop": 1,
                "jns  <MmProbeAndLockSelectedPages+>;pushl %esp;addb %ch, (%eax);jb  <MmProbeAndLockSelectedPages+>;addb %dh, %gs:(%ebx)": 2,
                "addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx;addb %al, (%esi);jb  <MmProbeAndLockSelectedPages+>": 1,
                "addb %dh, (%ebx);jae  <MmProbeAndLockSelectedPages+>;imull $, (%eax), %eax;pushl %eax;addb %ch, (%edi)": 1,
                "je  <MmProbeAndLockSelectedPages+>;addb %ch, %gs:(%ebp);pushl %esi;addb %ch, (%ecx);addb %dh, %gs:(%edi)": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);pushl %eax;addb %ah, (%ecx);addb %ah, (%di)": 1,
                "outsl (%esi), %dx;addb %ch, (%edi);insb %dx, %es:(%edi);addb %dl, (%ecx);jne  <MmProbeAndLockSelectedPages+>": 1,
                "imull $, (%eax), %eax;pushl %edx;addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%eax,%eax)": 1,
                "popal;addb %ch, (%eax,%eax);addb %ch, (%eax,%eax);addb %ah, (%edi);addb %al, (%eax)": 1,
                "addb %ch, (%eax,%eax);addb %ch, (%eax,%eax);addb %ah, (%edi);addb %al, (%eax);nop": 1,
                "insl %dx, %es:(%edi);addb %ah, (%ebp);decl %ecx;addb %dh, (%ebx);pushl %ebp": 1,
                "nop;nop;pushl %esp;addb %ch, (%ecx);insl %dx, %es:(%edi)": 1,
                "addb %dh, (%ebp);addb %ch, %fs:(%ecx);je  <MmProbeAndLockSelectedPages+>;incl %edx;addb %ah, (%ecx)": 2,
                "incl %edx;addb %ah, (%ecx);jae  <MmProbeAndLockSelectedPages+>;addb %al, %gs:(%eax,%eax);addb %dh, (%edx)": 1,
                "addb %ch, (%edx);calll - <KeReadStateTimer+>;jmp - <MmCanFileBeTruncated+>;movl , %ecx;movl %ecx, (%eax)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;pushl %ebx": 1,
                "pushl %esi;pushl %edi;movl $, %esi;pushl %esi;movl $, %edi": 1,
                "movl %eax, ;je  <IoSetFileOrigin+>;movl $, %eax;movl %eax, ;movl %eax, ": 1,
                "popl %esi;movl %ebx, %eax;movb %cl, ;movb $, ;movl %ecx, ": 1,
                "movb $, ;movl %ecx, ;movb %cl, ;movb $, ;movl %ecx, ": 2,
                "leal (%esi), %ecx;pushl %ecx;pushl %eax;calll - <KeSetPriorityThread>;movl , %edi": 1,
                "pushl %esi;pushl (%ebp);calll  <IoGetBootDiskInformation+>;cmpl %edi, %eax;jl  <IoReadDiskSignature+>": 1,
                "incl %edx;cmpl $, %edx;jb - <IoReadDiskSignature+>;movl (%ebp), %edx;notl %ecx": 1,
                "movl %eax, %esi;pushl %edi;pushl %ebx;calll  <ExFreePoolWithTag>;movl %esi, %eax": 1,
                "jmp - <KeDisconnectInterrupt+>;nop;nop;nop;nop": 1,
                "calll - <IoInvalidateDeviceRelations+>;movl %eax, %esi;testl %esi, %esi;je  <InbvInstallDisplayStringFilter+>;incb %bl": 1,
                "movl (%esi), %eax;andl $-, (%eax);movl (%esi), %eax;movl (%eax), %ecx;pushl (%ecx)": 2,
                "calll - <toupper+>;movl %edi, %eax;popl %edi;popl %esi;popl %ebp": 1,
                "jne  <InbvInstallDisplayStringFilter+>;movl -(%ebp), %eax;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);je  <InbvInstallDisplayStringFilter+>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, -(%ebp);je  <InbvInstallDisplayStringFilter+>;testb $, -(%ebp);jne  <InbvInstallDisplayStringFilter+>": 1,
                "testb $, -(%ebp);jne  <InbvInstallDisplayStringFilter+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "jne  <InbvInstallDisplayStringFilter+>;movl (%eax), %esi;movl -(%ebp), %edi;addl %eax, %esi;cmpw %bx, (%esi)": 1,
                "addl %eax, %esi;cmpw %bx, (%esi);je  <InbvInstallDisplayStringFilter+>;cmpw %bx, (%edi);je  <InbvInstallDisplayStringFilter+>": 1,
                "popl %ecx;jne  <InbvInstallDisplayStringFilter+>;pushl %esi;calll - <wcslen>;pushl %edi": 1,
                "popl %ecx;leal (%edi,%eax,), %edi;jne - <InbvInstallDisplayStringFilter+>;cmpw %bx, (%esi);jne  <InbvInstallDisplayStringFilter+>": 1,
                "calll  <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);jne  <IoSetFileOrigin+>;testb $, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "jne - <MmIsDriverVerifying+>;jmp  <IoSetFileOrigin+>;movl %ebx, -(%ebp);jmp - <InbvInstallDisplayStringFilter+>;orb $, -(%ebp)": 1,
                "incl %esp;addb %al, (%eax);addb %al, (%eax);addb %dl, -(%esi);movb $, %dh": 1,
                "xorl %ebx, %ebx;cmpb %bl, ;movb %bl, -(%ebp);jne  <IoSetFileOrigin+>;movb -(%ebp), %al": 1,
                "cmpb $, (%ebp);je  <KdPollBreakIn+>;sti;popl %ebp;retl $": 1,
                "jne  <IoSetFileOrigin+>;pushl %ebx;pushl %esi;pushl %edi;pushl $": 1,
                "movl %ecx, (%esi);cmpl -, %eax;jne  <IoSetFileOrigin+>;cmpl $, (%ebp);movl (%ebp), %edi": 1,
                "movl (%edi), %edi;sbbl (%esi), %edi;addl %ebx, ;movb -(%ebp), %cl;movl %edi, -(%ebp)": 1,
                "movl (%edi), %esi;cmpl %edi, %esi;jne  <IoSetFileOrigin+>;addl $, %edi;decl (%ebp)": 1,
                "incl %esi;decl %edi;jne - <KeIAllocateGdtSelectors+>;popl %edi;movb %al, %cl": 1,
                "popl %ebp;retl $;movl $, %eax;jmp - <KeIAllocateGdtSelectors+>;nop": 1,
                "addl $, %edx;pushl %edx;leal (%edx), %ecx;movl $, (%ecx);pushl %ecx": 1,
                "movl $, (%ecx);pushl %ecx;pushl $;pushl %eax;calll - <KeInitializeDpc+>": 1,
                "movl %eax, (%edx);movl %cr, %eax;movl %eax, (%edx);movl %ecx, (%edx);testl $, ": 1,
                "testl $, ;je  <KeIAllocateGdtSelectors+>;movl %cr, %eax;movl %eax, (%edx);movl %dr, %eax": 1,
                "movl %eax, (%edx);movl %dr, %eax;movl %eax, (%edx);movl %dr, %eax;movl %ecx, %dr": 1,
                "movl (%edx), %eax;movl %eax, %cr;movl (%edx), %eax;movl %eax, %dr;movl (%edx), %eax": 1,
                "incl %eax;subb $, %al;incl %esp;orb $, %al;sbbb %bl, (%eax)": 1,
                "orb $, %al;sbbb %cl, (%eax);orb %cl, (%esp,%eax);orb %cl, (%eax);addb $, %al": 1,
                "adcb %cl, (%eax);addb %cl, (%eax);addb $, %al;orb $, %al;orb %al, (%eax,%edx)": 1,
                "orb $, %al;orb $, %al;orb $, %al;orb $, %al;xorb %dl, (%eax)": 1,
                "orb $, %al;xorb %dl, (%eax);orb $, %al;orb $, %al;orb $, %al": 1,
                "adcb $, %al;adcb $, %al;adcb $, %al;adcb $, %al;adcb $, %al": 1,
                "orb $, %al;andb $, %al;sbbb %dl, (%esp,%eax);orb %cl, (%esp,%edx);orb %cl, (%eax)": 1,
                "addb %dl, (%eax);adcb %al, (%esp,%eax);orb %dl, (%eax,%edx);orb %cl, (%eax);adcb %dl, (%esp,%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);cmpl $, -(%ebp);jne - <MmMapIoSpace+>;jmp  <IoSetFileOrigin+>": 1,
                "jne - <MmMapIoSpace+>;jmp  <IoSetFileOrigin+>;andl $-, %esi;orl $, %esi;jmp - <MmMapIoSpace+>": 1,
                "orl $, %esi;jmp - <MmMapIoSpace+>;xorl %eax, %eax;jmp - <MmMapIoSpace+>;nop": 1,
                "pushl %ecx;movl , %eax;pushl %ebx;movl (%ebp), %ebx;cmpl %eax, %ebx": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 9,
                "pushl %ecx;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 7,
                "pushl -(%ebp);pushl $;pushl $;pushl %eax;pushl $": 1,
                "cmpl %ebx, %eax;jne  <IoSetFileOrigin+>;calll - <KeDetachProcess>;xorl %eax, %eax;jmp - <wcsstr+>": 1,
                "xorl %eax, %eax;jmp - <wcsstr+>;nop;nop;nop": 1,
                "jmp - <PoCallDriver+>;orl $, %ecx;movl %ecx, (%eax);movl , %ecx;leal (%ebx), %eax": 1,
                "movl %eax, (%ecx);movb -(%ebp), %dl;incl ;movl %edi, %ecx;movl %eax, ": 1,
                "incl ;movl %edi, %ecx;movl %eax, ;calll *;movl $, %eax": 1,
                "jmp - <PoCallDriver+>;cmpl $-, (%ebp);movl (%ebp), %ecx;movl %edi, -(%ebp);jne  <MmAllocateContiguousMemory+>": 1,
                "calll - <IoAttachDeviceToDeviceStack+>;movl %eax, %esi;cmpl %edi, %esi;je - <PoRegisterDeviceForIdleDetection+>;movl $, %ebx": 1,
                "je - <PoRegisterDeviceForIdleDetection+>;movl $, %ebx;movl %ebx, %ecx;calll *;movzbl (%esi), %edi": 1,
                "movl %ebx, %ecx;calll *;movzbl (%esi), %edi;andl $, (%esi);movb %al, %dl": 1,
                "movl $, (%ecx);movl %eax, (%ecx);movl %ecx, (%eax);movl %ecx, ;movl %ebx, %ecx": 1,
                "movl (%ebp), %eax;xorl %edx, %edx;movl %eax, %ecx;pushl %ebx;orl %edx, %ecx": 1,
                "movl (%ebp), %edx;pushl %esi;je  <IoSetFileOrigin+>;movl %eax, %ecx;andl $, %ecx": 1,
                "xorl %esi, %esi;orl %esi, %ecx;movl %eax, %ecx;je  <IoSetFileOrigin+>;andl $, %ecx": 1,
                "andl $, %ecx;orl %esi, %ecx;je  <RtlFindLeastSignificantBit+>;xorb %bl, %bl;movzbl %bl, %ecx": 1,
                "xorb %bl, %bl;movzbl %bl, %ecx;calll - <_aullshr>;movzbl %al, %eax;movb (%eax), %al": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi;incl %edi": 2,
                "calll  <RtlAddAccessAllowedAce>;pushl ;pushl %ebx;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp);movl $, -(%ebp)": 1,
                "movl %esi, -(%ebp);calll  <RtlCopyLuid+>;pushl %esi;pushl -(%ebp);calll  <ExFreePoolWithTag>": 1,
                "cmpw %cx, %ax;je  <VfIsVerificationEnabled+>;movzwl %ax, %ecx;cmpl $, %edi;jb  <IoSetFileOrigin+>": 1,
                "cmpl $, %ecx;jae  <VfIsVerificationEnabled+>;cmpl $, (,%ecx,);jne  <IoSetFileOrigin+>;testl %ebx, %ebx": 1,
                "je  <_strupr+>;movb (%edx), %cl;cmpb $, %cl;jge  <IoSetFileOrigin+>;incl %edx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;movzbl (%ebp), %esi": 1,
                "movzbl (%ebp), %ecx;shll $, %ecx;movzbl (%ecx), %eax;pushl %esi;movzbl (%ebp), %esi": 1,
                "leal (%esi), %edi;cmpl $, ;movzbl %bl, %eax;jg  <IoSetFileOrigin+>;movl , %ecx": 1,
                "cmpb $, %bl;je - <_strupr+>;xorl %edx, %edx;orl $-, %eax;divl (%ebp)": 1,
                "jae  <_strupr+>;orl $, (%ebp);cmpl %edx, -(%ebp);jae  <IoSetFileOrigin+>;movl -(%ebp), %eax": 1,
                "incl %esi;cmpl $, %ecx;movl %ecx, %edx;je  <atol+>;cmpl $, %ecx": 1,
                "leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax;movzbl (%esi), %ecx;incl %esi;jmp - <atol+>": 1,
                "movl (%ebp), %ecx;movl (%ebp), %esi;movb %al, -(%ebp);movl (%ecx), %eax;shrl $, %esi": 1,
                "movl (%ebp), %eax;movl %edi, (%eax);jbe  <IoEnumerateDeviceObjectList+>;movl $, -(%ebp);testl %esi, %esi": 1,
                "testl %esi, %esi;movl (%ecx), %edi;jbe  <IoEnumerateDeviceObjectList+>;pushl %ebx;movl (%ebp), %ebx": 1,
                "popl %ebx;movb -(%ebp), %cl;calll *;movl -(%ebp), %eax;popl %edi": 1,
                "cmpl $-, (%edx);jne - <RtlFindLastBackwardRunClear+>;subl $, %edx;subl $, %eax;jmp - <IoEnumerateDeviceObjectList+>": 1,
                "movzbl , %eax;movl , %ecx;cmpl %ecx, %eax;je  <IoEnumerateDeviceObjectList+>;movzbl , %eax": 1,
                "cmpl %ecx, %eax;je  <IoEnumerateDeviceObjectList+>;movzbl , %eax;addl %ecx, %eax;cmpl $, %eax": 1,
                "retl;cmpb $, ;jne - <IoEnumerateDeviceObjectList+>;jmp - <IoEnumerateDeviceObjectList+>;nop": 1,
                "nop;nop;movb , %al;testb %al, %al;jne  <IoSetFileOrigin+>": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, (%ecx);movl , %ecx;movl %eax, (%ecx)": 1,
                "pushl $;calll  <IoEnumerateDeviceObjectList+>;pushl %edi;pushl $;pushl $": 1,
                "pushl (%esi);pushl $;calll  <KeFindConfigurationNextEntry+>;jmp - <IoEnumerateDeviceObjectList+>;nop": 1,
                "calll - <FsRtlLegalAnsiCharacterArray+>;movl $, %edi;addl %edi, %eax;cmpl %eax, %esi;je  <IoEnumerateDeviceObjectList+>": 1,
                "movb $, %dh;leal (%ecx), %ecx;movb (%esi), %ah;incl %esi;movb (%edi), %al": 1,
                "cmpb %bl, %al;ja  <IoEnumerateDeviceObjectList+>;addb %dh, %al;cmpb %al, %ah;jne  <IoEnumerateDeviceObjectList+>": 1,
                "ja  <IoEnumerateDeviceObjectList+>;addb %dh, %al;cmpb %al, %ah;jne  <IoEnumerateDeviceObjectList+>;decl %ecx": 1,
                "addb %dh, %al;cmpb %al, %ah;jne  <IoEnumerateDeviceObjectList+>;decl %ecx;je  <IoEnumerateDeviceObjectList+>": 1,
                "jmp - <IoEnumerateDeviceObjectList+>;jmp  <IoEnumerateDeviceObjectList+>;movl $, %ecx;jb  <IoEnumerateDeviceObjectList+>;negl %ecx": 1,
                "calll - <KeInitializeSpinLock>;pushl $;calll - <KeInitializeSpinLock>;calll - <FsRtlLegalAnsiCharacterArray+>;movzbl (%ebp), %ecx": 1,
                "movzwl (%eax), %eax;andl $, %ecx;leal (%ecx,%eax), %esi;calll - <FsRtlLegalAnsiCharacterArray+>;movl %eax, %edi": 1,
                "addl %esi, %edi;calll - <FsRtlLegalAnsiCharacterArray+>;pushl $;movl $, %esi;pushl %esi": 1,
                "orl %ecx, %edx;movl (%eax), %ecx;andl $, %ecx;orl %ecx, %edx;movl %esi, %ecx": 1,
                "pushl $;pushl $;calll  <IoEnumerateDeviceObjectList+>;pushl $;pushl (%esi)": 1,
                "movl (%esp), %esi;movl %eax, (%esi);movl (%esp), %esi;movl %ebx, (%esi);movl (%esp), %esi": 1,
                "movl (%esp), %esi;movl %ecx, (%esi);movl (%esp), %esi;movl %edx, (%esi);popl %esi": 1,
                "pushl %esi;movl %eax, -(%ebp);pushl %edi;movl %ebx, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "cmpl %esi, -;movl %eax, %edi;jne  <IoSetFileOrigin+>;pushl $;calll - <InbvInstallDisplayStringFilter+>": 1,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);cmpl %ebx, %edi;je  <IoEnumerateDeviceObjectList+>;pushl %ebx": 1,
                "pushl %eax;calll  <PsCreateSystemThread>;movb $, ;cmpb %bl, ;je  <IoEnumerateDeviceObjectList+>": 1,
                "pushl (%ebp);calll - <InbvCheckDisplayOwnership+>;calll - <InbvCheckDisplayOwnership+>;popl %ebp;retl $": 1,
                "nop;addb %al, (%eax);popl %ds;addb %bh, (%ebx);addb %bl, (%edx)": 1,
                "jle - <wctomb+>;jmp - <DbgPrint+>;cmpb $, %al;je - <DbgPrint+>;jmp - <DbgPrint+>": 1,
                "subl $, %eax;movl %eax, (%ebp);movl (%ebx), %eax;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movb (%ebx), %al;cmpb -(%ebp), %al;je  <IoEnumerateDeviceObjectList+>;movb $, -(%ebp);cmpl , %ebx": 1,
                "pushl $;popl %ecx;leal -(%ebp), %esi;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi)": 4,
                "subl $, %esp;pushl %ebx;pushl %esi;pushl %edi;movl $, %ebx": 2,
                "movl %esi, -(%ebp);calll - <ExAllocateFromPagedLookasideList>;movl %eax, %edi;cmpl %esi, %edi;movl %edi, -(%ebp)": 1,
                "movl %eax, %edi;cmpl %esi, %edi;movl %edi, -(%ebp);je  <IoSetFileOrigin+>;pushl $": 1,
                "xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl , %edi;movl $, -(%ebp);testl %edi, %edi": 1,
                "addl %esi, (%ecx);addl %ecx, (%edi);outsb (%esi), %dx;addl %eax, (%eax);addb %dh, (%ebx)": 1,
                "sete %cl;pushl %ecx;pushl %edi;pushl %eax;calll - <MmProbeAndLockPages>": 1,
                "orl $-, -(%ebp);jmp  <IoBuildAsynchronousFsdRequest+>;nop;nop;nop": 1,
                "pushl %esi;pushl %edi;movswl %dx, %esi;movswl %cx, %edi;movl %ecx, -(%ebp)": 1,
                "testl %edx, %edx;je  <RtlTimeFieldsToTime+>;movl (%ebp), %eax;pushl $;xorl %edx, %edx": 1,
                "imull $, %ecx, %ecx;addl -(%ebp), %ecx;addl %eax, %esi;imull $, %ecx, %ecx;addl -(%ebp), %ecx": 1,
                "pushl %edx;pushl %eax;calll - <RtlExtendedIntegerMultiply>;movl (%ebp), %ecx;popl %edi": 1,
                "orl %eax, (%edi);testb $, (%edi);jne  <IoSetFileOrigin+>;movl %fs:, %eax;cmpl $, (%ebx)": 1,
                "movb $, (%edi);calll - <ExReleaseResourceLite+>;pushl %edi;calll - <PoSetSystemState+>;calll *": 1,
                "pushl %ecx;pushl %esi;pushl ;calll - <IoGetBaseFileSystemDeviceObject+>;movl %eax, %esi": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <PoSetSystemState+>;cmpl $, (%esi);je  <IoSetFileOrigin+>": 1,
                "movb $, %cl;calll *%edi;jmp - <FsRtlIsTotalDeviceFailure+>;movl $, %eax;jmp - <IoPageRead+>": 1,
                "movl %eax, -(%ebp);leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %esi;testb $, (%esi);jne  <PoSetSystemState+>": 1,
                "cmpl $, %eax;je  <MmCommitSessionMappedView+>;decl %eax;movl %eax, (%edx);cmpw $, (%esi)": 1,
                "orl (%esi), %edx;pushl %ebx;addb %ah, (%eax);pushl %ss;pushl %ebx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;shrl $, %eax;leal (%eax,%eax,), %eax;movl , %ecx": 1,
                "incl ;incw (%eax);movl (%esi), %ecx;testl %ecx, %ecx;jns  <RtlFindNextForwardRunClear+>": 1,
                "leal (%ecx), %edx;xorl %ecx, %edx;andl $, %edx;xorl %ecx, %edx;movl %edx, (%eax)": 1,
                "andl $, %edx;xorl %ecx, %edx;movl %edx, (%eax);decl (%edi);movb -(%ebp), %cl": 1,
                "jne  <IoSetFileOrigin+>;leal (%edi), %ecx;addl $, %edi;movl (%edi), %eax;movzbl (%ecx), %esi": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movb %al, %cl;andb $, %cl": 1,
                "movb %al, %cl;andb $, %cl;movl -(%ebp), %esi;movb %cl, (%esi);shrl %eax": 1,
                "incl %edi;pushl %edi;pushl -(%ebp);calll ;movl $, -(%ebp)": 1,
                "calll ;movl $, -(%ebp);calll *;movb %al, -(%ebp);andl $-, (%ebx)": 1,
                "orl %ecx, %eax;orl $, %eax;movl , %ecx;notl %ecx;andl %ecx, %eax": 1,
                "decl ;decw (%eax);cmpl $, -(%ebp);jge - <CcCopyWrite+>;jmp  <IoSetFileOrigin+>": 1,
                "jmp - <PsGetProcessJob+>;movl %ebx, %ecx;calll - <wcscmp+>;jmp - <PoSetSystemState+>;movb -(%ebp), %cl": 1,
                "movl (%ebp), %eax;incl (%eax);jmp - <PoSetSystemState+>;nop;nop": 1,
                "movl (%eax), %eax;cmpl %ebx, %eax;je  <PoSetSystemState+>;cmpl %ebx, (%eax);jne - <toupper+>": 1,
                "movl %ecx, (%eax);calll - <KeReadStateTimer+>;movb (%ebp), %cl;calll *;cmpb %bl, -(%ebp)": 1,
                "movb (%ebp), %cl;calll *;cmpb %bl, -(%ebp);je  <PoSetSystemState+>;leal -(%ebp), %eax": 1,
                "movl $, -(%ebp);jmp - <CcFlushCache+>;movl (%esi), %esi;movl (%esi), %eax;movl (%eax), %edx": 1,
                "leal (,%eax,), %eax;cmpl %eax, (%eax);jne  <PoSetSystemState+>;xorl %ebx, ;movb $, %al": 1,
                "movl (%esi), %eax;movl (%eax), %eax;movl (%eax), %eax;andl %edx, %eax;cmpl %edx, %eax": 1,
                "cmpl %edx, %eax;pushl %edi;jne  <PoSetSystemState+>;testl %edx, %edx;je  <PoSetSystemState+>": 1,
                "jne  <IoSetFileOrigin+>;movzbl (%esi), %ecx;movl (,%ecx,), %edi;testl %edx, (%edi);je  <IoSetFileOrigin+>": 1,
                "leave;retl;cmpb $, (%esi);je  <IoSetFileOrigin+>;jmp - <PoSetSystemState+>": 1,
                "movb %al, %bl;calll - <PoSetSystemState+>;movb %bl, %cl;movl %eax, %esi;calll - <ExReleaseResourceLite+>": 1,
                "subl $, %esp;movl , %ecx;pushl %ebx;movl (%ebp), %ebx;cmpl %ecx, %ebx": 1,
                "leal (%eax,%ecx), %edx;cmpl %edx, %ebx;jae  <MmCommitSessionMappedView+>;subl %ebx, %eax;addl %ecx, %eax": 1,
                "movl %esi, %edx;shrl $, %edx;andl %eax, %edi;andl %eax, %edx;subl %edx, %edi": 1,
                "addl $, %ecx;sarl $, %edi;movl %ecx, -(%ebp);movl (%ecx), %ecx;incl %edi": 1,
                "cmpl %eax, %ebx;movl %ebx, -(%ebp);jae  <IoSetFileOrigin+>;xorl %edx, %edx;movl %edi, %ecx": 1,
                "movl %edi, %ecx;movl %esi, %ebx;calll - <PsGetCurrentProcess+>;cmpl $, %eax;jne  <IoSetFileOrigin+>": 1,
                "subl (%ebp), %edi;movl %edi, (%ebp);testl %edi, %edi;je  <MmCommitSessionMappedView+>;addl %edi, (%eax)": 1,
                "movl %edi, (%ebp);testl %edi, %edi;je  <MmCommitSessionMappedView+>;addl %edi, (%eax);movl (%ebp), %eax": 1,
                "pushl (%ebp);xorl %edi, %edi;orl $, %eax;incl %edi;pushl %esi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;jbe  <MmCommitSessionMappedView+>;pushl %edi;movl (%esi), %edx": 1,
                "addl $, %esi;xorl %ebx, %ebx;cmpl %ebx, -(%ebp);movl %esi, -(%ebp);ja - <MmCommitSessionMappedView+>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);je  <MmCommitSessionMappedView+>;movl , %ecx;leal (%ecx), %eax": 1,
                "je  <MmCommitSessionMappedView+>;movl (%esi), %ecx;movl -(%ecx,%ebx,), %ecx;movl -(%eax), %edi;subl %ecx, %edi": 1,
                "movb $, (%eax);movb $, (%eax);movl $, (%eax);movl %ecx, (%ecx);movl %ecx, (%ecx)": 1,
                "nop;nop;nop;arpl %dx, %ss:(%ecx);decl %ecx": 1,
                "decl %ecx;arpl %dx, (%ecx);nop;nop;nop": 1,
                "andl %edi, %eax;movl %ecx, -(%ebp);movl %eax, (%ebp);cmpl %esi, %eax;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;jne  <IoSetFileOrigin+>": 1,
                "cmpxchgl %edx, (%ecx);cmpl %esi, %eax;jne  <IoSetFileOrigin+>;popl %edi;movl %esi, %eax": 1,
                "leave;retl $;pushl %edx;calll  <NtFindAtom+>;jmp - <RtlEnumerateGenericTableAvl+>": 1,
                "incl %ecx;movl (%eax), %edx;cmpl , %edx;je - <ExInitializeZone+>;addl $, %eax": 1,
                "movl (%eax), %edx;cmpl , %edx;je - <ExInitializeZone+>;addl $, %eax;decl %ecx": 1,
                "movb -(%ebp), %cl;calll *;movl -(%ebp), %ecx;movl , %eax;addl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl %esi, %eax;jne - <PsGetJobUIRestrictionsClass+>;pushl ;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);movl (%ebp), %eax;decl (%eax);decl (%eax);pushl %esi": 1,
                "calll - <MmIsAddressValid+>;popl %esi;leave;retl $;movl (%ebp), %ecx": 1,
                "jne  <FsRtlFastUnlockSingle+>;pushl $;calll - <ExAllocateFromPagedLookasideList>;testl %eax, %eax;je  <FsRtlFastUnlockSingle+>": 1,
                "movl %edi, (%ebp);rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi;pushl %eax;leal (%esi), %eax": 2,
                "testb %al, %al;je  <FsRtlFastUnlockSingle+>;movl (%ebp), %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl (%esi), %eax;xorl %ecx, %ecx;cmpl %ecx, %edx;ja  <IoGetDriverObjectExtension+>;jb  <IoGetDriverObjectExtension+>": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;testl %eax, %eax;jne - <FsRtlCheckLockForReadAccess+>;movb %al, (%ebp)": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <FsRtlCheckLockForReadAccess+>;movb %al, (%ebp);movl -(%ebp), %eax": 1,
                "movb %al, (%ebp);movl -(%ebp), %eax;pushl %eax;leal -(%eax), %edi;calll - <RtlRealSuccessor>": 1,
                "cmpl -(%ebp), %edx;movl (%esi), %ecx;jb  <FsRtlCheckLockForReadAccess+>;jbe - <CcSetAdditionalCacheAttributes+>;movl %ecx, -(%ebp)": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;testl %eax, %eax;movb $, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "pushl %ecx;leal (%ebp), %ecx;pushl %ecx;leal (%edi), %ebx;pushl %ebx": 1,
                "pushl (%esi);movl %esi, -(%ebp);calll - <FsRtlCheckLockForReadAccess+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "andl $, (%ecx);movl %ecx, (%ecx);movb $, (%eax);movl %edi, (%eax);movl %edi, (%eax)": 1,
                "pushl %cs;calll -;pushl %eax;addb %bh, %bh;pushl -(%ebx)": 1,
                "pushl -(%ebx);pushl %eax;addb %al, -(%esi);jmpl *(%edi);ljmpl $, $": 1,
                "movl (%esi), %ecx;cmpl -(%ebp), %ecx;ja  <FsRtlFastUnlockSingle+>;movl (%esi), %edx;cmpl %edx, -(%ebp)": 1,
                "movl (%eax), %eax;movl %edi, -(%ebp);movl %eax, -(%ebp);addl $, %esi;calll *": 1,
                "movl (%eax), %ebx;orl (%eax), %ebx;je  <IoSetFileOrigin+>;movl (%ebp), %eax;cmpl (%eax), %edx": 1,
                "je  <IoSetFileOrigin+>;movl (%ebp), %eax;cmpl (%eax), %edx;ja  <IoSetFileOrigin+>;jae  <IoSetFileOrigin+>": 1,
                "jb  <FsRtlFastUnlockSingle+>;ja  <IoSetFileOrigin+>;cmpl (%ebx), %esi;ja  <IoSetFileOrigin+>;testl %edi, %edi": 1,
                "je  <FsRtlFastUnlockSingle+>;pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %ebx": 1,
                "ja  <FsRtlFastUnlockSingle+>;cmpl %edi, %esi;jb  <KeInsertHeadQueue+>;movl (%ecx), %eax;movl (%ecx), %edi": 1,
                "movl (%ebp), %eax;cmpl (%eax), %edx;ja  <FsRtlRemovePerStreamContext+>;testl %ecx, %ecx;popl %edi": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jne  <KeInsertHeadQueue+>;cmpl $, -(%ebp);jne  <KeInsertHeadQueue+>": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%esi), %eax;pushl %eax;leal (%esi), %eax": 1,
                "leal (%esi), %eax;pushl %eax;leal (%esi), %eax;pushl %eax;pushl (%edi)": 1,
                "jne  <IoSetFileOrigin+>;movl (%ebp), %eax;cmpl %ecx, %eax;jne  <KeInsertHeadQueue+>;movl %esi, (%edi)": 1,
                "calll - <FsRtlFastUnlockSingle+>;jmp - <FsRtlPrivateLock+>;pushl $;calll - <ExAllocateFromPagedLookasideList>;testl %eax, %eax": 1,
                "movl (%ebp), %esi;pushl %eax;leal (%esi), %eax;pushl %eax;calll - <FsRtlFastUnlockSingle+>": 1,
                "calll - <FsRtlFastUnlockSingle+>;movl (%ebp), %ecx;jmp - <IoGetDriverObjectExtension+>;xorb %al, %al;jmp - <IoGetDriverObjectExtension+>": 1,
                "cmpl $, (%ebp);je  <FsRtlFastUnlockSingle+>;testb $, (%ebx);jne  <FsRtlFastUnlockSingle+>;movl %esi, %eax": 1,
                "testb $, (%ebx);jne  <FsRtlFastUnlockSingle+>;movl %esi, %eax;andl $, %eax;movl $, %ebx": 1,
                "andl $, %edi;movb (%ebp), %cl;calll *;pushl %edi;pushl %ebx": 1,
                "movb (%ebp), %cl;calll *;pushl %edi;pushl %ebx;pushl (%ebp)": 1,
                "cmpl $, (%esi);jne  <FsRtlFastCheckLockForRead+>;movb $, %al;popl %esi;leave": 1,
                "jne - <FsRtlGetNextFileLock+>;pushl %esi;calll - <FsRtlFastUnlockSingle+>;jmp - <FsRtlFastUnlockAll+>;cmpl %edx, (%esi)": 1,
                "movl (%edx), %edi;adcl %edi, %ecx;addl $-, %eax;movl %eax, -(%ebp);adcl $-, %ecx": 2,
                "movl (%ecx), %eax;testl %eax, %eax;movl (%ebp), %esi;je - <FsRtlGetNextFileLock+>;cmpl (%eax), %edi": 1,
                "je  <RtlFindNextForwardRunClear+>;movl (%ebp), %edx;pushl %ebx;movl (%edx), %ebx;addl %ebx, %eax": 1,
                "movl %ebx, -(%ebp);ja  <FsRtlFastCheckLockForWrite+>;jb  <KeAreApcsDisabled+>;cmpl %esi, %ecx;jbe  <KeAreApcsDisabled+>": 1,
                "cmpl (%eax), %ebx;jb - <FsRtlFastCheckLockForWrite+>;cmpl (%eax), %ecx;ja - <FsRtlFastCheckLockForWrite+>;jae  <RtlFindNextForwardRunClear+>": 1,
                "jne - <FsRtlFastCheckLockForWrite+>;movl (%esi), %eax;cmpl -(%ebp), %eax;jne - <FsRtlFastCheckLockForWrite+>;movl (%esi), %eax": 2,
                "cmpb $, (%ebp);jne  <FsRtlFastCheckLockForWrite+>;cmpl $, (%ebx);jne  <IoSetFileOrigin+>;pushl %esi": 1,
                "cmpl %edx, (%ebx);je  <IoSetFileOrigin+>;movl %edi, %edx;andl %eax, %edx;movl $, %esi": 1,
                "je  <FsRtlFastCheckLockForWrite+>;movl -(%ebp), %eax;cmpl (%ebx), %eax;jg  <KeAreApcsDisabled+>;jl  <FsRtlFastCheckLockForWrite+>": 1,
                "pushl %ebx;calll - <CcPurgeCacheSection+>;addl %esi, -(%ebp);adcl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "cmpl (%ebp), %esi;ja  <FsRtlFastCheckLockForWrite+>;movl (%esi), %ecx;testb $, %cl;jne - <FsRtlFastCheckLockForWrite+>": 1,
                "movl %edi, -(%ebp);jne - <FsRtlFastCheckLockForWrite+>;movl %esi, %edi;shrl $, %edi;andl $, %edi": 1,
                "pushl (%ebp);pushl %edi;calll - <PsIsThreadTerminating+>;testl %eax, %eax;jne  <KeAreApcsDisabled+>": 1,
                "jne  <KeAreApcsDisabled+>;addl $, %edi;movl %edi, %esi;shll $, %esi;jmp - <FsRtlFastCheckLockForWrite+>": 1,
                "movl %esi, (%edi);movl , %esi;movl $, (%ecx);movl %esi, (%ecx);movl %ecx, (%esi)": 1,
                "movl (%ebx), %eax;movl (%eax), %esi;movl %esi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebx), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl %edi, -(%ebp);pushl $": 1,
                "pushl (%ebp);pushl %esi;calll - <CcCopyWrite+>;calll - <_CIsqrt+>;retl $": 1,
                "addb %al, (%ebp);incl %esp;addb %al, ;cmpl %ecx, %eax;jb - <CcFastCopyWrite+>": 1,
                "je  <CcFastCopyWrite+>;testb $, %cl;je  <CcFastCopyWrite+>;xorl %edx, %edx;incl %edx": 1,
                "testb $, (%esi);je  <FsRtlInsertPerStreamContext+>;movl (%esi), %ecx;calll *;movl (%ebp), %ecx": 1,
                "movl $, %eax;jmp - <FsRtlInsertPerStreamContext+>;nop;nop;nop": 1,
                "nop;nop;addb %al, (%eax);addb %al, (%eax);popfl": 1,
                "incl %ebp;aam $-;movb , %al;nop;nop": 1,
                "aam $-;movb , %al;nop;nop;nop": 1,
                "jmp - <CcRemapBcb+>;orl $-, %eax;jmp  <FsRtlInsertPerStreamContext+>;xorl %eax, %eax;incl %eax": 1,
                "movb %cl, -(%ebp);movl %eax, (%ebp);jne  <FsRtlResetLargeMcb+>;calll *;jmp - <MmFlushImageSection+>": 1,
                "pushl (%ebp);pushl %eax;calll  <RtlCompareUnicodeString>;popl %ebp;retl $": 1,
                "pushl %eax;calll  <RtlCompareUnicodeString>;popl %ebp;retl $;addl $, %eax": 1,
                "jmp - <swprintf+>;nop;nop;nop;nop": 1,
                "movl %esp, %ebp;calll *;movl (%ebp), %edx;pushl %ebx;cmpl (%ebp), %edx": 1,
                "pushl %ebx;pushl (%edi);calll - <CcPurgeCacheSection>;jmp - <MmGrowKernelStack+>;nop": 1,
                "pushl (%edi);calll - <CcPurgeCacheSection>;jmp - <MmGrowKernelStack+>;nop;nop": 1,
                "movl (%ebx), %esi;pushl (%esi);andl $-, (%esi);orl $, (%esi);pushl %esi": 1,
                "andl $-, (%esi);orl $, (%esi);pushl %esi;movl $, (%esi);calll - <MmGrowKernelStack+>": 1,
                "pushl $;calll - <_CIsqrt+>;movl (%ebp), %edi;movb (%edi), %al;movb %al, -(%ebp)": 1,
                "subl $, %ebx;movl (%ebp), %eax;movb %al, (%ebx);cmpl $, %eax;je  <IoBuildAsynchronousFsdRequest+>": 1,
                "addb %bh, (%ebp);incl %esp;addb %al, -(%ebx);movl (%edi), %eax;testb $, %al": 1,
                "testb $, %al;jne - <IoEnumerateDeviceObjectList+>;movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "addl $, -(%ebp);movl -(%ebp), %eax;movl -(%eax), %eax;testl %eax, %eax;je - <IoPageRead+>": 1,
                "testl %ecx, %ecx;je - <IoPageRead+>;testb $, -(%ebp);movswl (%eax), %eax;movl %ecx, -(%ebp)": 1,
                "pushl $;movl %ecx, (%eax);pushl %edx;movl %eax, (%ecx);calll  <IoBuildAsynchronousFsdRequest+>": 1,
                "movl %eax, (%ecx);calll  <IoBuildAsynchronousFsdRequest+>;jmp - <FsRtlInsertPerStreamContext+>;nop;nop": 1,
                "movl (%ecx), %edx;addl $, %eax;movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx)": 3,
                "testl %ebx, %ebx;pushl %esi;pushl %edi;je  <IoBuildAsynchronousFsdRequest+>;cmpb $, (%ebx)": 1,
                "movl (%edi), %eax;movl (%edi), %ecx;pushl (%ebp);movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "je  <RtlDeleteNoSplay+>;cmpl %ebx, %eax;jne  <RtlDeleteNoSplay+>;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "leal (%ecx), %edx;cmpl %esi, (%edx);jne  <RtlDeleteNoSplay+>;movl %eax, (%edx);movl (%esi), %ecx": 1,
                "cmpl %esi, (%edx);jne  <RtlDeleteNoSplay+>;movl %eax, (%edx);movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);popl %edi;popl %esi;popl %ebx": 1,
                "leal (%ecx), %edx;jmp - <RtlDeleteNoSplay+>;movl %eax, (%eax);movl %eax, (%edi);jmp - <RtlDeleteNoSplay+>": 1,
                "jmp - <RtlDeleteNoSplay+>;testl %ebx, %ebx;je  <KeAreApcsDisabled+>;movl -(%eax), %edx;cmpl %edi, %edx": 1,
                "jae  <KeAreApcsDisabled+>;cmpl %edi, (%eax);je  <KeAreApcsDisabled+>;movl %edi, (%eax);jmp - <RtlUnwind+>": 1,
                "jae  <RtlFindClearRuns+>;cmpl %edi, %edx;je  <RtlFindClearRuns+>;movl (%ecx), %eax;cmpl %esi, %eax": 1,
                "cmpl %esi, %eax;jbe - <FsRtlTruncateLargeMcb+>;jmp  <IoSetFileOrigin+>;cmpl $, -(%ebp);je  <KeAreApcsDisabled+>": 1,
                "je  <KeAreApcsDisabled+>;movl -(%edx), %eax;cmpl %ebx, %eax;je - <RtlEqualString+>;cmpl $, -(%ebp)": 1,
                "movl (%esi), %ecx;movl %ebx, (%edi,%ecx);movl (%esi), %ecx;movl %eax, (%ecx,%edi);jmp - <FsRtlAddLargeMcbEntry+>": 1,
                "jne - <KeReadStateTimer+>;orl $, (%esi);incl (%esi);movb -(%ebp), %cl;calll *": 1,
                "jmp - <IoMakeAssociatedIrp+>;cmpl $, %eax;jae  <RtlDeleteNoSplay+>;addl %eax, %eax;pushl %edi": 1,
                "movl %ecx, %eax;shrl $, %ecx;movl %edi, -(%ebp);rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 2,
                "nop;nop;addb %al, (%eax);inl $, %eax;ljmpl $-, $": 1,
                "addl $, %eax;jns  <RtlDeleteNoSplay+>;addl %eax, (%eax);addb %al, (%eax);addl (%eax), %eax": 1,
                "jns  <RtlDeleteNoSplay+>;addl %eax, (%eax);addb %al, (%eax);addl (%eax), %eax;addb %al, -(%eax)": 1,
                "addl %eax, (%eax);popl %eax;addl $, %eax;jne  <RtlDeleteNoSplay+>;jne  <RtlDeleteNoSplay+>": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %al, (%eax);addb (%eax), %al;addb %al, (%eax)": 6,
                "addb %bl, ;addb %al, (%eax);addb %al, -;addb %al, (%eax);addb %al, ": 1,
                "addb %al, ;addb %al, (%eax);addb %bh, (%edx);addb %al, (%eax);pushl %es": 1,
                "pushl %edi;addb %dh, (%ecx);jnp  <RtlDeleteNoSplay+>;addb (%eax), %al;movb $, %bh": 1,
                "addb %dl, (%edi);addb %al, (%eax);pushl %edi;addb %al, (%eax);addb %bl, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %dh, (%eax);addb %al, (%eax);jo  <RtlDeleteNoSplay+>;addb %al, (%eax)": 1,
                "addb %al, (%eax);jo  <RtlDeleteNoSplay+>;addb %al, (%eax);jo  <RtlDeleteNoSplay+>;addb %al, (%eax)": 1,
                "addb %al, (%eax);adcl $, %eax;popl %es;addb %al, (%eax);movw %es, (%eax)": 1,
                "nop;addb %al, (%eax);rclb $, -(%ecx);addb %al, %al;xchgl %ebx, %eax": 1,
                "addb %al, %al;xchgl %ebx, %eax;addb %al, (%eax);rclb $, (%eax,%eax);addb %dl, (%esi)": 1,
                "addl %eax, (%eax);addb %ch, (%ebp);addb %al, (%eax);addb %dl, ;addl $, %eax": 1,
                "addl $, %eax;addb %al, (%eax);outl %eax, $;outl %eax, $;outb %al, $": 1,
                "pushl %edi;addb %al, (%ebx);addb %ah, (%eax);addb $-, %al;addl -(%ebp,%eax), %edx": 1,
                "roll $, (%eax);addb %dh, (%esi);jle  <RtlDeleteNoSplay+>;movb $, %dh;jg  <RtlDeleteNoSplay+>": 1,
                "sti;addl (%ebp), %ebp;outsb (%esi), %dx;addl $, %eax;pushl %edi": 1,
                "pushl %es;cld;pushl %es;std;pushl %es": 1,
                "addb %al, (%edi);addl %eax, (%edi);imull $, (%ebx,%eax,), %eax;lesl (%edi,%ebx,), %eax;addl $, %eax": 1,
                "adcl %eax, (%edi);adcb (%edi), %al;jb  <RtlDeleteNoSplay+>;cmpl (%eax), %eax;cmpl (%eax), %eax": 1,
                "cmpl (%eax), %eax;cmpl (%eax), %eax;popl %ss;popl %es;pushl $": 1,
                "addb (%eax), %al;shrb $, (%ebx);addb %al, %al;aad $;xchgl %edx, %eax": 1,
                "addb $-, %al;addb $-, %al;addb $-, %al;addb $-, %al;addb %dl, %ah": 1,
                "addb %dl, %ah;addb $, %al;addl $, %eax;andb (%esi,%esi,), %al;addb %bh, (%edi)": 1,
                "pushl $;adcb %ch, (%ebx);sbbb (%eax), %ah;sbbl (%eax), %esp;sbbb $, %al": 1,
                "adcb %ch, (%ebx);sbbb (%eax), %ah;sbbl (%eax), %esp;sbbb $, %al;addl %eax, (%eax)": 1,
                "sbbb (%eax), %ah;sbbl (%eax), %esp;sbbb $, %al;addl %eax, (%eax);calll *(%eax)": 1,
                "orl %eax, -(%eax);cmpl (%ebx), %eax;orl %eax, -(%eax);cmpl $, %eax;addl (%ecx), %ecx": 1,
                "addl -(%eax), %eax;orl %eax, (%ebx);addl -(%eax), %eax;orl (%ebx), %eax;addl (%eax), %eax": 1,
                "orl %eax, (%eax);inb %dx, %al;addb $-, %al;addb $-, %al;addb $-, %al": 1,
                "pushl %es;enter $-, $;lretl;pushl %es;int": 1,
                "salc;pushl %es;xlatb;pushl %es;fadds (%esi)": 1,
                "filds (%esi);loopne ;loope ;loop ;jecxz  <RtlDeleteNoSplay+>": 1,
                "testb $-, (%esi);pushl %es;andl (%edi), %eax;andb $, %al;andl $, %eax": 1,
                "arpl %bx, (%ebx);sbbl %fs:(%ebp), %esp;sbbw (%edi), %sp;pushl $;sbbl (%esi), %ecx": 1,
                "sbbl -(%edx), %edx;adcl -(%eax), %esi;adcl -(%ebx), %esi;adcl -(%esi), %esi;adcl -(%ecx), %edi": 1,
                "adcl -(%ecx), %edi;adcl (%ebx,%edx), %edi;rclb $, (%ebx);adcl %edx, %eax;adcl %ebx, %eax": 1,
                "movb $, %ah;movb $, %ch;movb $, %dh;movb $, %bh;movl $, %ecx": 1,
                "popl %ebx;popl %esi;popl %edi;popl %ebp;retl $": 4,
                "addl $, %eax;nop;nop;nop;addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb (%eax), %al;addb %al, (%eax);addb %al, (%ecx);addb %al, (%esi)": 1,
                "addb %al, (%eax);addb %al, (%ecx);addb %cl, (%eax,%eax);addb %al, (%eax);addb %al, (%ecx)": 1,
                "addb %al, (%ecx);addb %cl, (%eax,%eax);addb %al, (%eax);addb %al, (%ecx);addb %dh, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%ecx);addb %dl, (%esi);addb (%eax), %al;addb %al, (%ecx)": 1,
                "orl (%eax), %eax;addb %al, (%eax);orl $, %eax;addb %al, (%ecx);addb %bl, (%edx)": 1,
                "addl (%ecx), %ecx;addb $, (%ebx);addl %eax, (%eax);andb %al, (%ebx);orl %eax, (%eax)": 1,
                "addb $, (%edx);addl %eax, (%eax);incl %edi;addl (%ecx), %ecx;addb $, (%ecx)": 1,
                "addl %eax, (%eax);adcl (%eax), %eax;addl %eax, (%eax);addb %al, %al;orl (%eax), %eax": 1,
                "addb %al, (%eax);rolb $, (%ecx);addl %eax, (%eax);xorb (%eax), %al;addb %al, %al": 1,
                "rolb $, (%eax,%eax);addb %bl, %cl;addb %al, (%eax);rolb $, (%edx);addl %eax, (%eax)": 1,
                "rorb $, (%ecx);addl %eax, (%eax);jb  <RtlDeleteNoSplay+>;addb %al, %al;popl %es": 1,
                "popl %es;addb %al, (%ecx);addb %bh, (%edx);addb %al, %al;orl $, %eax": 1,
                "addb (%eax), %al;rolb $, (%ecx);addl %eax, (%eax);andb %al, (%edx);addb %al, %al": 1,
                "pushl %ebx;addb (%eax), %al;rolb $, (%ecx);addl %eax, (%eax);pushl %edi": 1,
                "rolb $, (%ecx);addl %eax, (%eax);pushl $;addb %al, %al;addl %eax, (%eax)": 1,
                "addl %eax, (%eax);ldsl (%edx), %eax;addb %al, %al;addl (%eax), %eax;addl %eax, (%eax)": 1,
                "addb (%eax), %al;rolb $, -;addb %al, %al;addb (%eax), %al;addl %eax, (%eax)": 1,
                "rolb $, -;addb %al, %al;addb (%eax), %al;addl %eax, (%eax);aam $": 1,
                "sbbl $, %eax;addb %al, (%edx);rolb $, (%ecx);addl %eax, (%eax);andl %eax, (%eax)": 1,
                "orb %al, %al;addl (%eax), %eax;addl %eax, (%eax);pushl %es;addb %cl, (%edx)": 1,
                "addb %al, (%ecx);addb %dl, (%ebx);rclb $, (%eax);addl %eax, (%eax);adcb (%eax), %al": 1,
                "rclb $, (%eax);addl %eax, (%eax);adcb (%eax), %al;adcl %eax, %eax;addl $, %eax": 1,
                "addb %cl, (%esi);addb %dl, ;addb %al, (%ecx);addb %bl, (%eax);addb %cl, (%eax)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl $, %eax": 2,
                "cmpl $, %ecx;je  <IoSetFileOrigin+>;pushl %esi;xorl %ecx, %ecx;xorl %esi, %esi": 1,
                "xorl %esi, %esi;pushl %ebx;cmpl (,%ecx,), %eax;jb - <RtlDeleteNoSplay+>;movzwl (,%ecx,), %edx": 1,
                "movzwl (,%ecx,), %edx;movzwl (,%ecx,), %ebx;imull %ebx, %edx;addl %edx, %esi;incl %ecx": 1,
                "andl $, -(%ebp);pushl %ebx;leal (%ecx,%ecx,), %eax;movl , %ecx;pushl %esi": 1,
                "decl (%ecx);pushl %ecx;calll - <RtlNtStatusToDosErrorNoTeb+>;cmpl $, -(%ebp);movl (%esi), %eax": 1,
                "cmpl $, %eax;je  <IoSetFileOrigin+>;decl %eax;movl %eax, (%edx);leave": 1,
                "retl;xorl %ebx, %ebx;jmp - <CcSetDirtyPinnedData+>;movl %edi, %ecx;calll - <IoAllocateIrp+>": 1,
                "calll - <IoAllocateIrp+>;movb -(%ebp), %cl;movl %eax, %ebx;calll *;movl %edi, %edx": 1,
                "movl -(%ebp), %ecx;calll - <IoAllocateIrp+>;movl %eax, %edi;movb -(%ebp), %cl;calll *": 1,
                "je  <IoSetFileOrigin+>;movl %eax, %ecx;calll - <IoAllocateIrp+>;movl %edi, %ecx;shll $, %ecx": 1,
                "orl $, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);shll $, %ecx;calll *": 1,
                "movl -(%ebp), %eax;testb $, (%eax);je  <IoSetFileOrigin+>;movl (%esi), %eax;testb $, %al": 1,
                "nop;nop;nop;cmpl %ebx, (%edi);addb %cl, (%edi)": 1,
                "decl %esp;addb %ah, (%ecx);decl %esp;addb %cl, (%ebx);jl - <RtlNtStatusToDosErrorNoTeb+>": 1,
                "calll - <KeRemoveQueueDpc>;leal (%esi), %eax;pushl %eax;calll - <IoGetAttachedDeviceReference+>;movb $, -(%ebp)": 3,
                "movb $, -(%ebp);jmp - <RtlCopyUnicodeString+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;jmp - <RtlCopyUnicodeString+>": 1,
                "cmpl %ecx, %eax;je - <RtlNumberGenericTableElementsAvl+>;movl (%eax), %edx;cmpl (%ebp), %edx;je  <RtlNtStatusToDosErrorNoTeb+>": 1,
                "xaddl %eax, (%ecx);testb $-, (%edx);jne  <IoSetFileOrigin+>;popl %ebp;retl $": 1,
                "popl %esi;popl %ebp;retl;rcll (%ecx);movl $, %edi": 1,
                "jne - <RtlNtStatusToDosErrorNoTeb+>;jmp  <IoSetFileOrigin+>;nop;nop;nop": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;pushl $": 9,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %ecx;subl , %ecx": 1,
                "movl $, %edx;jmp - <PsGetProcessId+>;movb %bl, %cl;calll - <ExReleaseResourceLite+>;movb (%esi), %al": 1,
                "shrl $, %ebx;movl %ecx, %esi;andl $, %esi;pushl %edi;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %edx;xorl %edi, %edi;xorl %esi, %esi;cmpl %edi, %edx;movl %eax, -(%ebp)": 1,
                "xorl %esi, %esi;cmpl %edi, %edx;movl %eax, -(%ebp);movl (%ebp), %eax;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);jbe  <RtlFindClearRuns+>;leal (%eax), %ecx;movl %edi, (%ecx);addl $, %ecx": 1,
                "subl %edi, %ecx;addl $, %ecx;movl %ecx, -(%ebp);movsbl (%esi), %ecx;movb (%ecx), %cl": 1,
                "movl %ecx, -(%ebp);movsbl (%esi), %ecx;movb (%ecx), %cl;movl $, %edx;subl %edi, %edx": 1,
                "testl %edi, %edi;ja  <RtlFindClearRuns+>;movl %esi, %eax;popl %edi;popl %esi": 1,
                "movl -(%ebp), %edx;movzbl %bl, %ecx;movsbl (%ecx), %ecx;cmpl %ecx, (%edx);jae - <RtlFindClearRuns+>": 1,
                "movb (%ebp), %bl;decl %esi;subl $, %ecx;jmp - <RtlFindClearRuns+>;incl %edx": 1,
                "movl %edx, (%ecx);movl -(%ebp), %edx;addl %edx, %esi;cmpb $, (%ebp);movl %esi, (%ecx)": 1,
                "je  <RtlFindClearRuns+>;pushl $;pushl -(%ebp);pushl -(%ebp);pushl %ebx": 1,
                "pushl $;pushl -(%ebp);pushl -(%ebp);pushl %ebx;calll - <ExDisableResourceBoostLite+>": 1,
                "leal -(%ecx), %eax;movl %eax, (%ecx);jne - <RtlFindClearRuns+>;movl %edx, (%ecx);movl %ecx, (%edx)": 1,
                "jne  <IoSetFileOrigin+>;incl ;movl , %edx;incl ;cmpl $-, %edx": 1,
                "movl , %edx;incl ;cmpl $-, %edx;je  <IoSetFileOrigin+>;leal (%edx,%edx,), %edi": 2,
                "movl , %eax;movl (%eax), %ecx;decl ;movl %ecx, ;jmp - <MmCreateMdl+>": 1,
                "cmpl $, (%esi);jne - <PsChargeProcessPagedPoolQuota+>;leal (%esi), %eax;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movl %eax, ;movb $, ;jne - <PsChargeProcessPagedPoolQuota+>;jmp  <IoSetFileOrigin+>;movl (%edi), %eax": 1,
                "movb $, ;jne - <PsChargeProcessPagedPoolQuota+>;jmp  <IoSetFileOrigin+>;movl (%edi), %eax;orb $, (%eax)": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl %ecx, %esi;pushl %edi": 1,
                "pushl %ecx;pushl %esi;movl %ecx, %esi;pushl %edi;movl (%esi), %edi": 1,
                "sbbl (%esi), %eax;movl (%edi), %edx;movl %eax, -(%ebp);movl (%esi), %eax;pushl %ebx": 1,
                "pushl %ebx;leal (%esi), %ebx;subl (%ebx), %eax;cmpl %edx, %eax;jbe  <FsRtlResetLargeMcb+>": 1,
                "popl %esi;leave;retl;movl (%esi), %eax;movl %eax, (%esi)": 1,
                "testb %al, %al;je - <FsRtlResetLargeMcb+>;jmp - <FsRtlResetLargeMcb+>;movl %edi, %edx;movl %esi, %ecx": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <CcPurgeCacheSection+>;jmp - <IoSynchronousPageWrite+>": 1,
                "incw (%esi);sti;jmp - <FsRtlResetLargeMcb+>;cmpl %ebx, (%eax);jne  <IoSetFileOrigin+>": 1,
                "movl (%esi), %edx;decl %edx;cmpl %edx, %ebx;jne  <KeAreApcsDisabled+>;subl %ecx, (%eax)": 1,
                "xorl %ecx, %ecx;incl %ecx;cmpl %ecx, %edx;jbe - <ExReinitializeResourceLite+>;movl %edi, (%eax,%ecx,)": 1,
                "incl %ecx;cmpl %edx, %ecx;jae - <ExReinitializeResourceLite+>;jmp - <FsRtlResetLargeMcb+>;movb $, (%eax)": 1,
                "testb $, (%esi);jne - <KeQueryTickCount+>;jmp - <KeQueryTickCount+>;incl ;movl (%esi), %eax": 1,
                "jne - <KeQueryTickCount+>;jmp - <KeQueryTickCount+>;incl ;movl (%esi), %eax;addl $, %eax": 1,
                "adcl (%eax), %edx;pushl $;pushl %edx;pushl %ecx;calll - <_allmul>": 1,
                "je  <KeAreApcsDisabled+>;movb %al, %cl;calll *%ebx;pushl (%esi);calll  <FsRtlReleaseFile>": 1,
                "jmp - <KeQueryTickCount+>;movl %esi, %eax;andl %ecx, %eax;movl %eax, (%ebp);jmp - <ExLocalTimeToSystemTime+>": 1,
                "movl , %esi;movl , %edi;movb %al, %cl;calll *;jmp - <KeInsertQueueApc+>": 1,
                "cmpl $, ;movl %eax, %esi;jne - <RtlNtStatusToDosErrorNoTeb+>;jmp  <IoSetFileOrigin+>;movl , %edx": 1,
                "movl %eax, (%edi);movl %ecx, -(%ebp);movl , %ecx;leal (%ebx,%ebx,), %eax;leal (%ecx,%eax,), %esi": 1,
                "testb $, (%esi);je  <KeAreApcsDisabled+>;decl ;movl %ebx, %ecx;calll - <RtlNtStatusToDosErrorNoTeb+>": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne - <RtlNumberOfClearBits+>;cmpb $, (%edx)": 1,
                "incl %edx;movl %edx, (%eax);jmp - <IoPageRead+>;movl , %ecx;movl %eax, %edx": 1,
                "jmp - <IoPageRead+>;movl , %ecx;movl %eax, %edx;shrl $, %edx;andl $, %eax": 1,
                "jmp - <IoGetBaseFileSystemDeviceObject+>;movl (%esi), %edx;cmpl %edx, -(%ebp);movl (%esi), %ecx;jl - <CcScheduleReadAhead+>": 1,
                "jl - <CcScheduleReadAhead+>;jg  <FsRtlResetLargeMcb+>;cmpl %ecx, -(%ebp);jb - <CcScheduleReadAhead+>;movl (%ebx), %eax": 1,
                "movl (%esi), %eax;jl  <FsRtlResetLargeMcb+>;jg  <IoSetFileOrigin+>;movl (%ebp), %ebx;movl (%ebx), %ebx": 1,
                "jne  <IoSetFileOrigin+>;movl (%esi), %eax;testl %eax, %eax;je  <FsRtlResetLargeMcb+>;cmpl %eax, %edi": 1,
                "movl %edi, (%eax);movl $, (%eax);incw (%esi);sti;movl (%esi), %edx": 1,
                "jmp - <CcCanIWrite+>;cmpl $, %ecx;jne  <IoSetFileOrigin+>;cmpl $, %ecx;je  <RtlFindNextForwardRunClear+>": 1,
                "orl $, %eax;movl %eax, (%esi);jmp - <ExLocalTimeToSystemTime+>;testb $, (%esi);jne - <ExLocalTimeToSystemTime+>": 1,
                "jmp  <IoSetFileOrigin+>;pushl $;pushl %esi;pushl %esi;calll - <KeDelayExecutionThread>": 1,
                "jne  <IoSetFileOrigin+>;xorb %al, %al;jmp - <ExAcquireSharedWaitForExclusive+>;nop;nop": 1,
                "nop;nop;nop;movl (%ecx), %eax;testb $, (%eax)": 1,
                "nop;nop;movl (%ecx), %eax;testb $, (%eax);pushl %ebx": 1,
                "jmp - <PsReturnProcessPagedPoolQuota+>;movl (%ecx), %ecx;jmp - <IoGetAttachedDevice+>;movl (%ebp), %ecx;shrl $, %ebx": 1,
                "calll - <ExAcquireFastMutexUnsafe>;movl (%esi), %eax;decl (%eax);movl (%esi), %eax;cmpl %ebx, (%eax)": 1,
                "andl $, (%eax);movl %edi, %ecx;calll - <ExReleaseFastMutexUnsafe>;testl %ebx, %ebx;je  <KeInsertHeadQueue+>": 1,
                "jmp - <FsRtlResetLargeMcb+>;movl (%ebx), %ecx;addl %edi, %ecx;cmpl %eax, %ecx;jbe - <RtlFindClearBits+>": 1,
                "pushl %ebx;calll - <IoGetRequestorProcess+>;jmp - <FsRtlFastCheckLockForWrite+>;decl %eax;movl %eax, (%esi)": 1,
                "testl %ecx, %ecx;je - <FsRtlFastUnlockSingle+>;jmp - <FsRtlFastUnlockSingle+>;cmpb %cl, (%ebp);jne  <FsRtlRemovePerStreamContext+>": 1,
                "pushl %ecx;pushl %esi;pushl %eax;calll - <FsRtlFastUnlockSingle+>;testl %eax, %eax": 1,
                "movl (%ebp), %edx;testl %edx, %edx;je  <KeInsertHeadQueue+>;movl %ecx, (%edx);testl %eax, %eax": 1,
                "testl %edx, %edx;je  <IoSetFileOrigin+>;leal (%esi), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax": 1,
                "movl %edi, %eax;popl %edi;popl %ebx;popl %esi;popl %ebp": 1,
                "incl (%eax);addb %al, (%eax);addb %cl, %cl;movl $, %ebx;sbbb %al, (%eax)": 1,
                "cmpl %edi, -(%ebp);je - <CcInitializeCacheMap+>;jmp  <IoSetFileOrigin+>;decl (%esi);xorl %esi, %esi": 1,
                "jmp - <FsRtlResetLargeMcb+>;cmpl $, (%esi);jae  <RtlFindNextForwardRunClear+>;decw (%esi);jmp - <ExLocalTimeToSystemTime+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;xorl %eax, %eax;testl $, (%ebp)": 1,
                "jg  <KeAreApcsDisabled+>;cmpl %edx, %edi;jbe  <KeAreApcsDisabled+>;testl %ecx, %ecx;movl $, %eax": 1,
                "jbe  <KeAreApcsDisabled+>;testl %ecx, %ecx;movl $, %eax;jg  <KeAreApcsDisabled+>;jl  <KeAreApcsDisabled+>": 1,
                "movl %edi, %ecx;movl %ecx, -(%ebp);movl %edx, -(%ebp);jl  <KeAreApcsDisabled+>;jg  <IoSetFileOrigin+>": 1,
                "movl %ecx, -(%ebp);movl %edx, -(%ebp);jl  <KeAreApcsDisabled+>;jg  <IoSetFileOrigin+>;cmpl %eax, %edi": 1,
                "movl %edx, %ecx;andl $, %ecx;cmpl $, -(%ebp);rep  stosb %al, %es:(%edi);jne  <IoSetFileOrigin+>": 1,
                "leal (%ebx), %eax;cmpl %eax, -(%ebp);je  <KeAreApcsDisabled+>;cmpl $, -(%ebp);je  <KeAreApcsDisabled+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;xorl %esi, %esi;movl %eax, (%ebx)": 1,
                "ja  <KeAreApcsDisabled+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl %esi, -(%ebp);jmp - <KeAreApcsDisabled+>;jae - <FsRtlResetLargeMcb+>;cmpl $-, (%eax);je - <FsRtlResetLargeMcb+>": 1,
                "movl -(%ecx,%eax,), %eax;movl (%esi), %ecx;leal (%ecx,%edi), %ebx;movl -(%ebx), %ecx;addl -(%ebx), %ecx": 1,
                "pushl %eax;pushl %esi;calll - <RtlDeleteNoSplay+>;jmp - <FsRtlAddLargeMcbEntry+>;leal -(%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;calll - <IoAcquireVpbSpinLock>;movl %ebx, (%esi);jmp - <IoStartPacket+>": 1,
                "calll - <RtlFindClearBitsAndSet+>;andl $, -(%ebp);jmp - <RtlFindClearBitsAndSet+>;subl %eax, ;jmp - <ExLocalTimeToSystemTime+>": 1,
                "pushl (%esi);calll - <KeCancelTimer+>;jmp - <wcscat+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "jmp - <wcscat+>;movl (%esi), %eax;movl (%eax), %eax;movl %edi, (%eax);jmp - <KeAreApcsDisabled+>": 1,
                "decl (%edi);jmp - <RtlCopyUnicodeString+>;pushl %esi;pushl (%esi);calll - <MmUnlockPages+>": 1,
                "calll - <MmUnlockPages+>;jmp - <KeAreApcsDisabled+>;pushl %edi;calll - <IoAllocateIrp+>;jmp - <KeCancelTimer+>": 1,
                "movl %fs:, %eax;movl (%esi), %ecx;movl (%eax), %eax;andl %ebx, %ecx;pushl %ecx": 2,
                "leal -(%eax,%edx), %eax;cmpl %edi, %eax;je - <RtlDeleteNoSplay+>;pushl $;jmp - <RtlUnwind+>": 1,
                "calll - <MmSetAddressRangeModified>;jmp - <FsRtlFastCheckLockForWrite+>;incl (%esi);movl (%edi), %esi;incl (%esi)": 1,
                "incl (%esi);movl %esi, %ecx;calll - <InterlockedPopEntrySList>;testl %eax, %eax;jne - <KeReadStateTimer+>": 1,
                "movw (%ebx), %ax;movw %ax, (%edi);xorl %eax, %eax;movw %ax, (%edi);movw %ax, (%edi)": 1,
                "movw %ax, (%edi);movw %ax, (%edi);movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi)": 1,
                "jmp - <KeRestoreFloatingPointState+>;movb $, %al;jmp - <FsRtlFastCheckLockForWrite+>;cmpb %al, (%ebp);je  <IoSetFileOrigin+>": 1,
                "movl $, (%eax);jmp - <FsRtlPrivateLock+>;andl $, (%ebx);pushl $;pushl %ebx": 1,
                "je - <MmMapLockedPagesSpecifyCache+>;jmp  <IoSetFileOrigin+>;movl (%ebp), %eax;movl (%eax), %esi;movl (%eax), %edi": 1,
                "movl %edi, %edx;movb $, %cl;calll - <_allshr>;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);jg - <MmMapLockedPagesSpecifyCache+>;jl  <KeAreApcsDisabled+>;movl -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "jne - <KeAreApcsDisabled+>;movl (%esi), %edx;cmpl %edi, %edx;je  <KeAreApcsDisabled+>;movl %ebx, %ecx": 1,
                "calll  <KeAreApcsDisabled+>;movl (%esi), %edi;testl %edi, %edi;je - <KeAreApcsDisabled+>;movl (%edi), %eax": 1,
                "movl (%esi), %edi;testl %edi, %edi;je - <KeAreApcsDisabled+>;movl (%edi), %eax;cmpl $, %eax": 1,
                "jmp - <KeAreApcsDisabled+>;nop;nop;nop;nop": 2,
                "jne - <FsRtlResetLargeMcb+>;movl (%ecx), %eax;jmp - <FsRtlResetLargeMcb+>;cmpl $, ;jb - <KeReadStateTimer+>": 1,
                "cmpl %eax, %edi;jbe  <KeAreApcsDisabled+>;jmp  <KeAreApcsDisabled+>;testl %ecx, %ecx;movl %esi, -(%ebp)": 1,
                "jbe  <KeAreApcsDisabled+>;jmp  <KeAreApcsDisabled+>;testl %ecx, %ecx;movl %esi, -(%ebp);movl $, (%ebp)": 1,
                "movl (%ebp), %ecx;incl -(%ebp);xorl %eax, %eax;incl %eax;xorl %edx, %edx": 1,
                "movl (%ebp), %esi;movl -(%ebp), %eax;movl (%ebp), %edi;movl (%ebp), %ecx;subl $, %esi": 1,
                "shrb $, %al;andb $, %al;cmpb $, (%ebp);movb %al, -(%ebp);movl %edi, %ecx": 1,
                "je  <KeAreApcsDisabled+>;leal -(%edi), %esi;movl (%esi), %eax;addl %eax, -(%ebp);cmpl %eax, -(%ebp)": 1,
                "cmpl (%eax), %ecx;jg - <CcPurgeCacheSection+>;jl  <KeAreApcsDisabled+>;cmpl (%eax), %esi;jae - <CcPurgeCacheSection+>": 1,
                "testl %edx, %edx;je - <CcPurgeCacheSection+>;movl (%edx), %eax;movl (%edx), %ecx;movl %eax, (%ecx)": 1,
                "movl %edx, %eax;jmp - <CcPurgeCacheSection+>;testl %edx, %edx;jne - <KeAreApcsDisabled+>;movl %eax, %edx": 1,
                "movl %edx, -(%ebp);jmp - <CcPurgeCacheSection+>;leal -(%ebp), %ecx;calll *;jmp - <CcPurgeCacheSection+>": 1,
                "jmp - <CcPurgeCacheSection+>;xorl %esi, %esi;calll *;movl , %ecx;shll $, %ecx": 1,
                "adcb $-, %al;loopne ;cmpl $, %eax;jbe - <MmAllocateContiguousMemory+>;addl $, %eax": 1,
                "movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, ;movl , %eax": 2,
                "pushl %edi;movl (%ebp), %edi;leal (%edi), %eax;movl (%eax), %ebx;cmpl %eax, %ebx": 1,
                "jne  <KeAreApcsDisabled+>;movl (%esi), %ecx;movl %ebx, %eax;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movl %ebx, %eax;movl %eax, (%ecx);movl %ecx, (%eax);cmpl $, (%edi);jl  <KeAreApcsDisabled+>": 1,
                "jg  <KeAreApcsDisabled+>;cmpl $, (%edi);ja  <KeAreApcsDisabled+>;cmpl $, (%esi);jne  <IoSetFileOrigin+>": 1,
                "cmpb $, (%esi);je  <KeAreApcsDisabled+>;movl (%esi), %ecx;shrl $, %ecx;subl %ecx, ": 1,
                "movl %ecx, %edx;shrl $, %edx;leal (%eax,%edx,), %edx;cmpl %esi, %edx;pushl %edi": 1,
                "cmpl (%ebx), %edi;jae  <RtlFindNextForwardRunClear+>;movl (%ebx), %eax;movl %edi, %ebx;shrl $, %ebx": 1,
                "cmpl $, (%edx);jne  <RtlFindNextForwardRunClear+>;addl $, %edx;addl $, %eax;jmp - <RtlFindNextForwardRunClear+>": 1,
                "addl $, %edx;addl $, %eax;jmp - <RtlFindNextForwardRunClear+>;movl (%ebx), %edx;cmpl %edx, %eax": 1,
                "jae  <RtlFindNextForwardRunClear+>;movl (%ebx), %esi;movl %eax, %ebx;shrl $, %ebx;movl (%esi,%ebx,), %ebx": 1,
                "movl (%ebx), %esi;movl %eax, %ebx;shrl $, %ebx;movl (%esi,%ebx,), %ebx;movl %eax, %ecx": 1,
                "cmpl %edx, %eax;jb - <RtlFindNextForwardRunClear+>;movl (%ebp), %ecx;movl %edi, (%ecx);subl %edi, %eax": 1,
                "movl (%ebp), %ecx;movl %edi, (%ecx);subl %edi, %eax;popl %edi;popl %esi": 1,
                "pushl ;pushl $;calll - <KeSetTimerEx>;jmp  <RtlFindNextForwardRunClear+>;decl ": 1,
                "movl %edx, (%esi);movl %eax, (%esi);movl %edx, (%esi);movl -(%esi), %eax;movl $, %ecx": 1,
                "andl $, (%esi);testl %edx, %edx;jne  <RtlFindNextForwardRunClear+>;movl %edi, (%edi);movb (%ebp), %al": 1,
                "orb $, (%eax);calll *%esi;movl %fs:, %eax;movb $, (%eax);movl %fs:, %eax": 1,
                "movb %al, (%ebp);jmp - <MmMapLockedPagesSpecifyCache+>;nop;nop;nop": 1,
                "cmpw %bx, %dx;jne - <MmMapLockedPagesSpecifyCache+>;pushl %ebx;pushl %ebx;andl $, %eax": 1,
                "jl  <RtlFindNextForwardRunClear+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %ebx;calll - <KeWaitForSingleObject>;movl %eax, %esi;movl %esi, -(%ebp);orl $-, -(%ebp)": 1,
                "movl $, %esi;testl %eax, (%eax);sbbl %ecx, (%eax);incl (%eax);jmp - <IoFreeIrp+>": 1,
                "orl $, %ecx;movl %ecx, (%esi);jmp - <RtlCopyUnicodeString+>;nop;nop": 1,
                "incl %ecx;cmpl $, %ecx;jl - <RtlFindNextForwardRunClear+>;cmpl $, %esi;jl  <RtlFindNextForwardRunClear+>": 1,
                "jl - <RtlFindNextForwardRunClear+>;cmpl $, %esi;jl  <RtlFindNextForwardRunClear+>;cmpl %edi, ;jne  <RtlFindNextForwardRunClear+>": 1,
                "movl %ecx, %edi;movl %edx, %esi;jmp - <RtlFindNextForwardRunClear+>;xorl %eax, %eax;xorl %edx, %edx": 1,
                "je  <RtlFindNextForwardRunClear+>;pushl %esi;pushl %esi;pushl $;movb $, ": 1,
                "jmp - <ExLocalTimeToSystemTime+>;movl %esi, ;jmp - <ExLocalTimeToSystemTime+>;movl $, %edi;jmp - <KeWaitForSingleObject+>": 1,
                "cmpl %ebx, %edx;je - <PsGetProcessId+>;jmp  <IoSetFileOrigin+>;movl (%eax), %edx;movl $, %ecx": 1,
                "andl %ecx, %edx;cmpl %ecx, %edx;jne - <ExLocalTimeToSystemTime+>;pushl %eax;calll - <IoFreeIrp>": 1,
                "cmpl $-, %eax;je  <RtlFindNextForwardRunClear+>;movl $, ;jmp - <ExLocalTimeToSystemTime+>;movb $, ": 1,
                "movb $, ;calll - <KeSetEvent>;retl $;nop;nop": 1,
                "movl (%ecx), %ecx;shldl $, %eax, %edx;shll $, %eax;cmpl $, -(%ebp);movl %ecx, (%esi)": 1,
                "xorl %eax, %eax;jmp - <PsGetThreadTeb+>;decl %edi;jmp - <PsGetThreadProcess+>;nop": 1,
                "jbe  <RtlFindNextForwardRunClear+>;xorl %edx, %edx;shll $, %edx;xorl %ecx, %edx;andl $, %edx": 1,
                "movb $, %cl;calll *;pushl $;pushl %edi;pushl %ebx": 1,
                "jmp  <IoSetFileOrigin+>;movl %edi, -(%ebp);jmp - <RtlFindNextForwardRunClear+>;xorl %edx, %edx;incl %edx": 1,
                "jne - <ExIsProcessorFeaturePresent+>;andl $-, %eax;orl $, %eax;jmp - <RtlInsertElementGenericTableAvl+>;pushl $": 1,
                "jmp - <RtlInsertElementGenericTableAvl+>;pushl $;popl %edi;jmp - <RtlInsertElementGenericTableAvl+>;movl %eax, %edi": 1,
                "calll - <KeSetKernelStackSwapEnable+>;movl (%edi), %eax;movl , %ecx;shrl $, %eax;leal (%eax,%eax,), %eax": 1,
                "andl $, %eax;leal (%ecx,%eax,), %esi;movl (%ebp), %eax;jmp - <RtlInsertElementGenericTableAvl+>;xorl %edx, %edx": 1,
                "calll *;movl (%ebx), %edi;xorl %edx, %edx;andl $, %edi;orl $, %edi": 1,
                "andl $, %edi;orl $, %edi;leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "shll $, %eax;movb $, -(%ebp);movb $, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "pushl %eax;pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax": 6,
                "jmp - <RtlSetBit+>;leal -(%eax), %esi;movl %esi, %ecx;calll - <ObfReferenceObject>;movb -(%ebp), %cl": 1,
                "movb $, -(%ebp);movb -(%ebp), %cl;calll *%ebx;cmpb $, -(%ebp);je  <RtlFindNextForwardRunClear+>": 1,
                "calll - <ObfDereferenceObject>;calll *%edi;movl -(%ebp), %ecx;addl $, %ecx;jmp - <KeSetPriorityThread+>": 1,
                "movl %eax, (%edx);cmpw $, (%edi);jne  <RtlFindNextForwardRunClear+>;movl %edi, %ecx;calll - <KeResetEvent+>": 1,
                "pushl $;calll - <IoGetAttachedDeviceReference+>;pushl %esi;calll  <IoGetDeviceProperty+>;pushl $": 1,
                "pushl %esi;calll  <IoGetDeviceProperty+>;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "retl $;leal (%esi), %eax;cmpl %eax, (%eax);je  <IoSetFileOrigin+>;pushl $": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %eax, (%ebp);jne - <RtlFindNextForwardRunClear+>": 1,
                "popl %ebx;leave;retl $;xorl %eax, %eax;jmp - <FsRtlGetNextFileLock+>": 1,
                "jmp - <IoFreeIrp+>;movl %edi, ;jmp - <RtlFindNextForwardRunClear+>;cmpb $, -(%ebp);jne - <ExLocalTimeToSystemTime+>": 1,
                "jmp - <ExLocalTimeToSystemTime+>;cmpb $, -(%ebp);jne - <ExLocalTimeToSystemTime+>;movl %ecx, -(%ebp);jmp - <ExLocalTimeToSystemTime+>": 1,
                "pushl $;calll - <PoRequestPowerIrp+>;retl $;movl (%ebx), %edi;movl (%ebx), %ebx": 1,
                "movl %ebx, %edx;movb $, %cl;calll - <_allshr>;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "adcl (%ebx), %edx;movl $, %esp;jmpl *%ebx;adcl (%ebx), %edx;outb %al, %dx": 1,
                "addl $, %ebx;jmp - <CcPurgeCacheSection+>;calll - <wcscmp+>;jmp - <KeSaveFloatingPointState+>;leal (%edi), %ecx": 1,
                "cmpl %ecx, %eax;jne  <IoSetFileOrigin+>;addl $, %eax;movl (%eax), %edx;cmpl %eax, %edx": 1,
                "movl (%eax), %edx;cmpl %eax, %edx;jne  <IoSetFileOrigin+>;xorl %eax, %eax;movl (%esi), %ecx": 1,
                "jne  <IoSetFileOrigin+>;xorl %eax, %eax;movl (%esi), %ecx;movl %eax, (%ecx);jmp - <MmUnlockPages+>": 1,
                "je - <MmForceSectionClosed+>;jmp  <IoSetFileOrigin+>;cmpl , %esi;jb - <FsRtlGetNextFileLock+>;cmpl , %esi": 1,
                "jb - <FsRtlGetNextFileLock+>;cmpl , %esi;jae - <FsRtlGetNextFileLock+>;movl (%ebp), %edi;movl $, (%edi)": 1,
                "jmp - <IoReleaseRemoveLockEx+>;movl (%edi), %eax;orl (%edi), %eax;jne - <PsChargeProcessPagedPoolQuota+>;jmp  <IoSetFileOrigin+>": 1,
                "cmpl (%eax), %ecx;jbe  <IoSetFileOrigin+>;movl (%eax), %eax;cmpl %edx, %eax;jne - <IoSetFileOrigin+>": 1,
                "jne - <IoReleaseRemoveLockEx+>;jmp  <IoSetFileOrigin+>;decl ;movl (%edx), %ebx;jmp - <IoReleaseRemoveLockEx+>": 1,
                "jmp - <MmForceSectionClosed+>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx": 2,
                "pushl %edi;pushl %eax;calll - <IoSetFileOrigin+>;jmp - <PsGetThreadTeb+>;nop": 1,
                "calll *(%edx);cmpb (%edx), %dl;subb %bh, (%edx);pushl %edx;addb %bh, %bh": 1,
                "pushl %esp;pushl $;pushl -;movl %esp, -;xorl %eax, %eax": 2,
                "cmpb $-, %al;je  <IoSetFileOrigin+>;andl $, %eax;orl %eax, %ecx;movl %edi, (%esi)": 1,
                "jmp - <IoSetFileOrigin+>;retl;movw (%esi), %ax;calll  <IoSetFileOrigin+>;addl $, %esi": 1,
                "subb $, %ah;andb $, %ah;movb %ah, %al;shrb %ah;addb %ah, %al": 1,
                "andl $, %eax;shrl $, %eax;movl , %ecx;movl (%eax,%ecx), %ecx;movl %ecx, (%ebx)": 1,
                "je - <IoSetFileOrigin+>;movb $-, %dl;jmp - <IoSetFileOrigin+>;movl (%esi), %ebx;movw (%esi), %cx": 1,
                "shll $, %ecx;movb %ah, %ch;je  <IoSetFileOrigin+>;orl %ebx, %ebx;jns  <IoSetFileOrigin+>": 1,
                "cmpl $, %ecx;jge  <IoSetFileOrigin+>;orl %esi, %esi;setne %cl;jmp  <IoSetFileOrigin+>": 1,
                "movb $-, %cl;jmp  <IoSetFileOrigin+>;orl %ebx, %ebx;jne  <IoSetFileOrigin+>;orl %esi, %esi": 1,
                "movb $, %bl;jmp  <IoSetFileOrigin+>;movw $, %bx;movw %bx, -(%ebp);fldcw -(%ebp)": 2,
                "andl $, %ecx;movl %edx, %ebx;addl %eax, %ebx;addl $, %ebx;jmpl *(%ebx)": 2,
                "movb $, -(%ebp);fxch %st();movb -(%ebp), %cl;fxam;wait": 1,
                "faddl ;retl;fxch %st();fstpt -(%ebp);fldt -(%ebp)": 1,
                "jmp  <IoSetFileOrigin+>;movb $, -(%ebp);faddp %st();retl;fstpt -(%ebp)": 1,
                "movl , %edx;movl %eax, (%edx);popl -;addl $, %esp;popl %ebp": 1,
                "movl %eax, %gs;pushl %ds;popl %es;retl;movl (%eax), %eax": 1,
                "movl (%edi), %edi;xorl %esi, %esi;jmp - <KeAreApcsDisabled+>;jmp - <KeAreApcsDisabled+>;jmp - <KeAreApcsDisabled+>": 1,
                "xorl %esi, %esi;jmp - <KeAreApcsDisabled+>;jmp - <KeAreApcsDisabled+>;jmp - <KeAreApcsDisabled+>;pushl (%esi)": 1,
                "pushl %esi;calll  <ExFreePoolWithTag>;jmp - <KeAreApcsDisabled+>;xorb %al, %al;jmp - <CcCopyWrite+>": 1,
                "jbe  <IoSetFileOrigin+>;movl %eax, %ecx;subl %esi, %ecx;xorl %eax, %eax;movl %esi, %edi": 1,
                "xorl %eax, %eax;movl %esi, %edi;movl %ecx, %esi;shrl $, %ecx;rep  stosl %eax, %es:(%edi)": 1,
                "pushl %eax;pushl -(%ebp);calll  <IoSetFileOrigin+>;retl;nop": 3,
                "pushl %eax;calll - <KeWaitForSingleObject>;jmp - <CcGetFlushedValidData+>;movl %esi, -(%ebp);jmp - <CcGetFlushedValidData+>": 1,
                "movb -(%ebp), %cl;calll *;leal (%esi), %ecx;leal -(%ebp), %edx;calll *": 1,
                "movl %eax, ;movb $, ;jne  <IoSetFileOrigin+>;pushl %ebx;calll - <KeReadStateTimer+>": 1,
                "calll *;jmp - <CcGetFlushedValidData+>;movl (%esi), %eax;movl (%eax), %esi;jmp - <CcRemapBcb+>": 1,
                "movl (%esi), %esi;cmpl $, (%esi);je - <IoSetFileOrigin+>;movl (%esi), %edi;movl (%esi), %edx": 1,
                "jle - <KeAreApcsDisabled+>;jmp - <MmSetAddressRangeModified+>;leal -(%ebp), %ecx;calll *;pushl $": 1,
                "movl -(%ebp), %esp;movl (%ebp), %edi;movl -(%ebp), %ebx;movl (%edi), %ecx;movl (%ecx), %esi": 1,
                "movl (%ecx), %esi;subl $, %esi;cmpw $, (%ecx);jne  <IoSetFileOrigin+>;movl (%ecx), %ebx": 1,
                "calll - <CcSetDirtyPinnedData>;jmp - <MmSetAddressRangeModified+>;pushl %edi;cli;movl (%esi), %edx": 1,
                "movl %ebx, (%esi);jmp  <IoSetFileOrigin+>;movl (%ebp), %edi;sti;cmpl %ebx, %edx": 1,
                "jmp - <CcCopyWrite+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "calll - <KeSaveFloatingPointState+>;movl -(%ebp), %eax;jmp - <CcCopyWrite+>;pushl $;pushl %eax": 1,
                "nop;nop;nop;movl -(%ebp), %esp;cmpl $, -(%ebp)": 20,
                "movl %ecx, -(%ebp);pushl (%ebx);pushl (%ebx);pushl %esi;calll  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "jmp - <ExAcquireSharedStarveExclusive+>;calll - <ExAcquireResourceExclusiveLite>;jmp - <ExDisableResourceBoostLite+>;jmp - <ExDisableResourceBoostLite+>;cmpb $, (%ebp)": 1,
                "pushl %eax;calll - <ExAcquireSharedStarveExclusive>;testb %al, %al;je - <MmQuerySystemSize+>;incl (%esi)": 1,
                "leal -(%ebp), %eax;pushl %ebx;pushl %edi;pushl %eax;movl (%esi), %eax": 1,
                "adcl %ecx, -(%ebp);subl %edi, -(%ebp);je - <PoRegisterSystemState+>;jmp - <IoSetFileOrigin+>;jmp - <PoRegisterSystemState+>": 1,
                "movl $, -(%ebp);jmp - <PoRegisterSystemState+>;pushl %edi;calll - <KeReadStateTimer+>;jmp - <CcFlushCache+>": 1,
                "pushl %ecx;pushl $;calll  <IoRaiseInformationalHardError>;movl (%esi), %eax;addl $, %eax": 1,
                "pushl %ebx;pushl -(%ebp);calll  <ExFreePoolWithTag>;jmp - <KeQueryTickCount+>;testb $, (%esi)": 1,
                "calll  <CcGetLsnForFileObject+>;jmp - <KeQueryTickCount+>;cmpl $, %eax;je  <IoSetFileOrigin+>;cmpl $, %eax": 1,
                "nop;nop;movl -(%ebp), %esi;jmp - <CcGetDirtyPages+>;pushl $": 1,
                "cmpl %ebx, (%edx);je  <IoSetFileOrigin+>;jmp - <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;movl -(%ebp), %eax": 1,
                "jmp - <MmGrowKernelStack+>;leal (%esi), %ecx;cmpl %ecx, %eax;je - <MmGrowKernelStack+>;pushl %ebx": 2,
                "pushl %edi;pushl -(%ebp);calll  <ExFreePoolWithTag>;jmp - <CcInitializeCacheMap+>;jmp - <CcInitializeCacheMap+>": 1,
                "movl (%esi), %eax;addl $, %eax;movl %eax, (%eax);movl %eax, (%eax);jmp - <CcInitializeCacheMap+>": 1,
                "pushl -(%ebp);pushl %esi;calll - <KeAreApcsDisabled+>;jmp - <CcInitializeCacheMap+>;pushl %edi": 1,
                "pushl %edi;pushl %edi;pushl %edi;pushl (%esi);movl %edi, (%ebp)": 1,
                "movl %eax, -(%ebp);jmp  <IoSetFileOrigin+>;pushl %edi;pushl -(%ebp);calll  <ExFreePoolWithTag>": 1,
                "jne  <IoSetFileOrigin+>;calll *;movb %al, (%ebp);xorl %edi, %edi;cmpl %edi, -(%ebp)": 1,
                "jmp - <CcInitializeCacheMap+>;calll *;movb %al, (%ebp);movl $, (%ebp);jmp - <CcInitializeCacheMap+>": 1,
                "movl $, (%ebp);jmp - <CcInitializeCacheMap+>;andl $-, %eax;movl (%eax), %ebx;pushl %edi": 1,
                "jmp - <CcInitializeCacheMap+>;jmp - <FsRtlTruncateLargeMcb+>;leal (%esi), %eax;movl (%eax), %edx;movl %edx, (%ecx)": 1,
                "cmpl $, (%esi);jne - <KeAreApcsDisabled+>;leal (%esi), %eax;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "pushl $;pushl $;calll  <KeBugCheckEx>;int;movb %bl, ": 1,
                "movl -(%ebp), %edi;jmp - <KeReadStateTimer+>;jmp - <KeReadStateTimer+>;jmp - <KeReadStateTimer+>;pushl $": 1,
                "jmp - <ExDisableResourceBoostLite+>;movl %edx, (%ebp);xorl %ebx, %ebx;jmp - <ExDisableResourceBoostLite+>;incl -(%ebp)": 1,
                "xorl %eax, %eax;leal -(%edx,%ecx), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);jmp - <KeAreApcsDisabled+>": 1,
                "jl - <IoSetFileOrigin+>;jg  <IoSetFileOrigin+>;movl -(%ebp), %ecx;cmpl (%ebx), %ecx;jae  <IoSetFileOrigin+>": 1,
                "jmp  <IoSetFileOrigin+>;movl (%ebx), %ecx;jmp  <IoSetFileOrigin+>;cmpl -(%ecx), %edi;jg  <IoSetFileOrigin+>": 1,
                "movl (%ebx), %ecx;jmp  <IoSetFileOrigin+>;cmpl -(%ecx), %edi;jg  <IoSetFileOrigin+>;jge  <IoSetFileOrigin+>": 1,
                "jl  <IoSetFileOrigin+>;movl -(%ebp), %ecx;cmpl -(%ebp), %ecx;jae - <KeAreApcsDisabled+>;leal (%ebx), %ecx": 1,
                "jl - <IoSetFileOrigin+>;jg - <KeAreApcsDisabled+>;movl -(%ebp), %edx;cmpl -(%ebp), %edx;jae - <KeAreApcsDisabled+>": 1,
                "cmpl -(%ebp), %edx;jae - <KeAreApcsDisabled+>;jmp - <IoSetFileOrigin+>;leal -(%ebp), %ecx;calll *": 1,
                "movl %edi, %edx;calll - <_allshr>;orl %edx, %eax;jne - <IoSetFileOrigin+>;movl -(%ebp), %eax": 1,
                "jne - <IoSetFileOrigin+>;movl -(%ebp), %eax;movl -(%ebp), %edi;cmpl %edi, %eax;jbe - <KeAreApcsDisabled+>": 1,
                "pushl %eax;calll - <FsRtlLookupPerStreamContextInternal+>;testl %eax, %eax;je - <IoSetFileOrigin+>;cmpl $, %edi": 1,
                "pushl %edi;movl %ecx, (%eax);pushl %esi;movl %eax, (%ecx);calll - <RtlEqualString+>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je - <FsRtlLookupPerStreamContextInternal+>;movl -(%ebp), %ecx": 1,
                "movl %esi, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 3,
                "cmpl $, %eax;je - <FsRtlLookupPerStreamContextInternal+>;leal -(%eax), %esi;jmp - <IoSetFileOrigin+>;movl -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);leal -(%ebx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 3,
                "pushl %esi;calll  <RtlAddAtomToAtomTable+>;calll *;movl (%ebp), %ecx;movb %al, (%ecx)": 2,
                "cmpl $, (%ebx);jne  <IoSetFileOrigin+>;leal (%ebx), %eax;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movl (%ebp), %edi;movl -(%ebp), %esi;jmp - <MmGrowKernelStack+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "jmp - <FsRtlRegisterFileSystemFilterCallbacks+>;movl (%esi), %eax;cmpl $, %eax;jb  <IoSetFileOrigin+>;cmpl %ecx, (%esi)": 1,
                "jb  <IoSetFileOrigin+>;cmpl %ecx, (%esi);jne  <IoSetFileOrigin+>;cmpl $, %eax;jb - <ExLocalTimeToSystemTime+>": 2,
                "movl (%edi), %eax;movl (%eax), %ebx;movl (%eax), %eax;movl (%eax), %esi;movb $, -(%ebp)": 6,
                "jmp - <ExLocalTimeToSystemTime+>;movl (%esi), %eax;cmpl $, %eax;jb  <IoSetFileOrigin+>;cmpl $, (%esi)": 2,
                "jne - <ExLocalTimeToSystemTime+>;cmpl $, %eax;jae - <RtlFindNextForwardRunClear+>;jmp - <ExLocalTimeToSystemTime+>;movl %edi, %ecx": 1,
                "jae - <RtlFindNextForwardRunClear+>;jmp - <ExLocalTimeToSystemTime+>;movl %edi, %ecx;calll - <ObfDereferenceObject>;jmp - <ExLocalTimeToSystemTime+>": 1,
                "jmp - <RtlFindNextForwardRunClear+>;calll - <ExAcquireResourceExclusiveLite>;jmp - <FsRtlResetLargeMcb+>;testb %bl, %bl;jne  <IoSetFileOrigin+>": 1,
                "je  <IoSetFileOrigin+>;movl (%esi), %edi;movl (%esi), %ecx;calll - <ExReleaseResourceLite>;testl %edi, %edi": 1,
                "calll - <ExReleaseResourceLite>;testl %edi, %edi;je - <RtlFindNextForwardRunClear+>;jmp - <FsRtlResetLargeMcb+>;pushl %edi": 1,
                "andl $, (%esi);calll *;popl %esi;jmp - <FsRtlResetLargeMcb+>;jmp - <ExFreeToPagedLookasideList+>": 1,
                "nop;nop;nop;xorl %edi, %edi;jmp - <RtlLookupElementGenericTableFullAvl+>": 1,
                "nop;nop;xorl %edi, %edi;jmp - <RtlLookupElementGenericTableFullAvl+>;movl -(%ebp), %eax": 1,
                "nop;xorl %edi, %edi;jmp - <RtlLookupElementGenericTableFullAvl+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "jmp - <RtlLookupElementGenericTableFullAvl+>;movl -(%ebp), %eax;movl (%eax), %eax;cmpl %edi, %eax;je - <RtlLookupElementGenericTableFullAvl+>": 1,
                "andl $, -(%ebp);andl $, -(%ebp);movl (%ebp), %ebx;jmp - <RtlFindClearRuns+>;cmpl (%esi), %edi": 1,
                "jmp - <FsRtlAddLargeMcbEntry+>;testl %ecx, %ecx;jne  <IoSetFileOrigin+>;xorl %eax, %eax;jmp  <IoSetFileOrigin+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax,%edi);jmp - <FsRtlAddLargeMcbEntry+>;orl $-, %ecx;jmp - <KeAreApcsDisabled+>": 1,
                "movl -(%ebp), %ebx;movl (%esi), %ecx;decl %ecx;cmpl %ecx, %eax;jb  <IoSetFileOrigin+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%edx);pushl $;jmp - <KeAreApcsDisabled+>;testl %eax, %eax": 1,
                "leal -(%edi,%edx), %edx;orl $-, %edi;cmpl %edi, %edx;je - <RtlUnwind+>;cmpl (%ebp), %ebx": 1,
                "orl $-, %edi;cmpl %edi, %edx;je - <RtlUnwind+>;cmpl (%ebp), %ebx;jae - <KeAreApcsDisabled+>": 1,
                "je - <RtlUnwind+>;jmp - <RtlDeleteNoSplay+>;jmp - <RtlUnwind+>;cmpl $-, (%eax);je  <IoSetFileOrigin+>": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;movl %ecx, (%edi,%eax);movl (%esi), %eax;orl $-, (%eax,%edi)": 1,
                "addl (%edi), %edx;movl -(%ebp), %ecx;addl %edx, (%edi);andl $, (%ebp);movl %ecx, (%ebp)": 1,
                "je  <IoSetFileOrigin+>;leal -(%ebx), %edx;testl %edx, %edx;jne  <IoSetFileOrigin+>;xorl %ecx, %ecx": 1,
                "movl %ecx, (%edi,%edx);movl (%esi), %ecx;leal (%ecx,%edi), %edi;addl %eax, (%edi);jmp - <RtlUnwind+>": 1,
                "movl %ecx, -(%ebp);jmp  <IoSetFileOrigin+>;movl (%ebp), %ebx;movl (%ebp), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %ebx;movl (%eax), %esi;movl (%ebp), %edx;cmpl (%edx), %esi;jne  <IoSetFileOrigin+>": 1,
                "jne - <KeInsertHeadQueue+>;movl (%ecx), %edx;cmpl %ebx, %edx;jne - <KeInsertHeadQueue+>;movl (%ebp), %edx": 1,
                "je  <IoSetFileOrigin+>;movl -(%ebp), %eax;jmp - <FsRtlGetNextFileLock+>;cmpl $, -(%ebp);je - <FsRtlGetNextFileLock+>": 1,
                "testl %ebx, %ebx;je  <IoSetFileOrigin+>;movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpl %ebx, -(%ebp)": 1,
                "jmp - <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;movl (%ebx), %ebx;testl %ebx, %ebx;jne  <IoSetFileOrigin+>": 1,
                "sbbb %al, %al;incb %al;jmp - <IoCancelIrp+>;xorb %al, %al;jmp - <IoCancelIrp+>": 1,
                "pushl $;leal -(%ebp), %ecx;pushl %ecx;leal (%esi), %edi;pushl %edi": 1,
                "pushl -(%ebp);calll - <RtlSplay>;andl $, -(%ebp);movl %eax, (%ebx);jmp - <FsRtlFastUnlockSingle+>": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $;leal (%ebp), %ecx": 1,
                "je  <IoSetFileOrigin+>;movl (%edi), %eax;movl %eax, (%ebx);movl (%edi), %esi;leal (%esi), %eax": 1,
                "cmpb $, (%esi);movl -(%ebp), %eax;movzbl (%eax), %eax;pushl %eax;je  <IoSetFileOrigin+>": 1,
                "movl %ecx, (%edi);cmpl %edi, %ecx;movl (%esi), %edx;movl %edx, (%ecx);jne  <IoSetFileOrigin+>": 1,
                "leal (%ebx), %eax;cmpl $, (%eax);je  <IoSetFileOrigin+>;pushl -(%ebp);pushl %eax": 1,
                "pushl (%ebp);pushl %edi;pushl %ebx;calll - <RtlRealSuccessor+>;jmp - <FsRtlFastCheckLockForWrite+>": 1,
                "calll - <RtlSplay>;movl %eax, (%esi);jmp - <FsRtlCheckLockForReadAccess+>;leal -(%eax), %esi;movl (%esi), %ecx": 1,
                "cmpl (%ecx), %eax;jb  <IoSetFileOrigin+>;ja  <IoSetFileOrigin+>;movl (%ecx), %eax;cmpl %eax, -(%ebp)": 1,
                "movl (%ecx), %ecx;testl %ecx, %ecx;movl %eax, (%ebp);je  <IoSetFileOrigin+>;jmp - <IoSetFileOrigin+>": 1,
                "movl (%eax), %ecx;cmpl (%esi), %ecx;ja  <IoSetFileOrigin+>;jb  <IoSetFileOrigin+>;movl (%eax), %eax": 1,
                "ja  <IoSetFileOrigin+>;jb  <IoSetFileOrigin+>;movl (%eax), %eax;cmpl (%esi), %eax;ja  <IoSetFileOrigin+>": 1,
                "movl (%ebx), %eax;cmpl (%esi), %eax;jb  <IoSetFileOrigin+>;ja  <IoSetFileOrigin+>;movl (%ebx), %eax": 1,
                "cmpl (%esi), %eax;jb  <IoSetFileOrigin+>;ja  <IoSetFileOrigin+>;movl (%ebx), %eax;cmpl (%esi), %eax": 1,
                "ja  <IoSetFileOrigin+>;movl (%ebx), %eax;cmpl (%esi), %eax;jbe  <IoSetFileOrigin+>;cmpb $, (%ebx)": 1,
                "movl %eax, (%esi);movl (%ebx), %eax;movl %eax, (%esi);pushl -(%ebp);pushl %edi": 1,
                "je - <FsRtlCheckLockForReadAccess+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax;pushl %esi": 3,
                "adcl -(%ebp), %ecx;addl $-, %eax;movl %eax, -(%ebp);movl (%esi), %eax;adcl $-, %ecx": 1,
                "movl %eax, -(%ebp);movb (%esi), %al;shrb %al;andb $, %al;movb %al, -(%ebp)": 1,
                "calll - <FsRtlCheckLockForReadAccess+>;testb %al, %al;movb %al, -(%ebp);je  <IoSetFileOrigin+>;leal (%ebx), %eax": 1,
                "calll *;movl -(%ebp), %ecx;calll - <ObfReferenceObject>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;pushl %ebx;pushl (%edi);movl (%ebp), %ebx;pushl (%ebx)": 1,
                "movl %eax, -(%ebp);calll  <FsRtlLookupMcbEntry+>;jmp  <IoSetFileOrigin+>;movl %edi, -(%ebp);movl -(%ebp), %eax": 1,
                "calll  <FsRtlLookupMcbEntry+>;jmp  <IoSetFileOrigin+>;movl %edi, -(%ebp);movl -(%ebp), %eax;movl (%eax), %edi": 1,
                "testl %edi, %edi;jne - <IoSetFileOrigin+>;popl %esi;popl %ebx;jmp - <RtlRealSuccessor+>": 1,
                "movl (%ebp), %edx;cmpl %edx, (%esi);je - <FsRtlCheckLockForReadAccess+>;jmp - <CcSetAdditionalCacheAttributes+>;jmp - <FsRtlCheckLockForReadAccess+>": 1,
                "jb - <FsRtlCheckLockForReadAccess+>;ja  <IoSetFileOrigin+>;cmpl -(%ebp), %eax;jbe - <FsRtlCheckLockForReadAccess+>;movl %eax, -(%ebp)": 1,
                "cmpb $, (%edi);je  <IoSetFileOrigin+>;xorl %edi, %edi;xorl %eax, %eax;movb (%edi), %al": 1,
                "pushl (%eax);calll - <RtlEnumerateGenericTableAvl+>;calll *;movl (%ebp), %ebx;pushl %esi": 1,
                "movb %al, -(%ebp);calll  <FsRtlLookupMcbEntry+>;jmp  <IoSetFileOrigin+>;movl %esi, %ebx;movl (%ebx), %esi": 1,
                "jmp - <FsRtlPrivateLock+>;cmpl $, (%ebp);je  <IoSetFileOrigin+>;pushl $;calll - <ExAllocateFromPagedLookasideList>": 1,
                "movl (%ebp), %edx;movl %edx, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);movl (%edx), %eax;movb (%eax), %cl;orb $, %cl": 1,
                "movb %cl, (%eax);andl $, (%esi);cmpl $, (%edi);jne  <IoSetFileOrigin+>;movl %esi, (%edi)": 1,
                "movb -(%ebp), %al;movb %al, (%edx);pushl %edx;pushl $;calll  <FsRtlLookupMcbEntry+>": 1,
                "cmpl $, (%edi);jl - <FsRtlGetNextFileLock+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %esi, (%edi);calll - <IofCompleteRequest>;movl %esi, -(%ebp);jmp - <FsRtlProcessFileLock+>;pushl (%ebp)": 1,
                "pushl %esi;calll - <FsRtlFastUnlockSingle>;jmp - <FsRtlProcessFileLock+>;movl %ebx, -(%ebp);andl $, (%eax)": 1,
                "andl $, (%eax);movl (%ebx), %ecx;calll - <ExAcquireFastMutexUnsafe>;andl $, -(%ebp);leal (%ebx), %eax": 1,
                "andl $, (%edi);pushl (%esi);pushl (%esi);calll *(%esi);pushl $": 1,
                "movl (%eax), %esi;cmpl %eax, %esi;je  <IoSetFileOrigin+>;addl $-, %esi;movl %esi, -(%ebp)": 1,
                "movl %eax, (%ecx);leal (%esi), %edi;pushl %edi;calll - <IoAcquireVpbSpinLock>;leal (%esi), %eax": 1,
                "movb (%edi), %al;pushl %eax;calll - <IoReleaseVpbSpinLock>;movl $, (%esi);andl $, (%esi)": 1,
                "nop;movl (%ebx), %ecx;calll - <ExReleaseFastMutexUnsafe>;retl;leal (%esi), %ebx": 1,
                "pushl %eax;calll - <IoReleaseVpbSpinLock>;movl $, (%edi);movl (%esi), %eax;andl $, (%eax)": 1,
                "movl (%ecx), %ecx;movl %ecx, (%esi);movl %eax, (%esi);andl $, -(%ebp);jmp - <RtlInsertElementGenericTableAvl+>": 1,
                "movl %ecx, (%esi);movl %eax, (%esi);andl $, -(%ebp);jmp - <RtlInsertElementGenericTableAvl+>;pushl (%esi)": 1,
                "andl $, -(%ebp);jmp - <RtlInsertElementGenericTableAvl+>;pushl (%esi);calll  <FsRtlNormalizeNtstatus+>;jmp - <RtlInsertElementGenericTableAvl+>": 1,
                "movb $, -(%ebp);movl -(%ebp), %ecx;calll - <ExReleaseFastMutexUnsafe>;pushl %edi;pushl $": 1,
                "calll - <ExReleaseFastMutexUnsafe>;pushl %esi;pushl %esi;pushl %esi;pushl %esi": 1,
                "movl $, (%edi);movb $, %dl;movl %edi, %ecx;calll - <IofCompleteRequest>;movl $, (%esi)": 1,
                "je  <IoSetFileOrigin+>;cmpl $, %ecx;je  <IoSetFileOrigin+>;cmpl $, %ecx;je  <IoSetFileOrigin+>": 1,
                "cmpl $, %ecx;je  <IoSetFileOrigin+>;cmpl $, %ecx;je  <IoSetFileOrigin+>;cmpl $, (%eax)": 1,
                "testb %dl, %dl;jne - <MmProbeAndLockSelectedPages+>;jmp - <RtlInsertElementGenericTableAvl+>;movl (%edi), %ecx;cmpl (%eax), %ecx": 1,
                "jmp - <RtlInsertElementGenericTableAvl+>;jmp - <MmProbeAndLockSelectedPages+>;pushl %eax;calll  <FsRtlNormalizeNtstatus+>;jmp - <IoGetBaseFileSystemDeviceObject+>": 1,
                "andl $, (%ecx);andl $, (%esi);jmp - <IoGetBaseFileSystemDeviceObject+>;movl %edx, (%ecx);jmp - <KeSaveFloatingPointState+>": 1,
                "cmpw (%esi), %ax;jae  <IoSetFileOrigin+>;movzwl %ax, %edi;shll $, %edi;addl (%esi), %edi": 1,
                "shll $, %edi;addl (%esi), %edi;incl %eax;movw %ax, (%esi);xorl %eax, %eax": 1,
                "je  <IoSetFileOrigin+>;movl (%esi), %edx;movl %edx, (%edi);movl (%esi), %edx;movl %eax, (%edi)": 1,
                "jmp - <KeSaveFloatingPointState+>;cmpb $, (%ebp);jne  <IoSetFileOrigin+>;cmpb $, (%ebp);jne  <IoSetFileOrigin+>": 1,
                "cmpb $, (%ebp);jne  <IoSetFileOrigin+>;cmpb $, (%ebp);jne  <IoSetFileOrigin+>;andl $, -(%ebp)": 1,
                "orl $, (%esi);movl %eax, %ebx;jmp - <IoGetBaseFileSystemDeviceObject+>;testl %edi, %edi;je - <IoGetBaseFileSystemDeviceObject+>": 1,
                "movl %eax, %ebx;jmp - <IoGetBaseFileSystemDeviceObject+>;testl %edi, %edi;je - <IoGetBaseFileSystemDeviceObject+>;decw (%esi)": 1,
                "jmp - <IoGetBaseFileSystemDeviceObject+>;cmpb $, (%ebp);jne  <IoSetFileOrigin+>;pushl %eax;pushl %eax": 1,
                "calll  <ExFreePoolWithTag>;movl $, %ebx;jmp - <FsRtlRegisterFileSystemFilterCallbacks+>;leal (%ebp), %eax;pushl %eax": 1,
                "jne - <MmProbeAndLockSelectedPages+>;movl %edi, -(%ebp);movl %edi, -(%ebp);leal (%ebx), %eax;movl (%eax), %ecx": 1,
                "calll - <MmMapLockedPages>;movl %eax, -(%ebp);movl (%edi), %edi;movl %edi, -(%ebp);movl (%ebx), %eax": 1,
                "movl (%ebx), %esi;movl -(%ebp), %eax;movl %eax, %edi;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);pushl -(%ebp);calll  <FsRtlIsNtstatusExpected>": 1,
                "je - <MmProbeAndLockSelectedPages+>;movl %edi, (%ebx);movl %edi, (%ebx);movl %edi, (%ebx);movl %edi, (%ebx)": 1,
                "pushl (%esi);calll *%edi;movzbl %al, %eax;pushl %eax;pushl (%esi)": 1,
                "movzbl %al, %eax;pushl %eax;pushl (%esi);pushl $;calll  <KeBugCheckEx>": 1,
                "pushl %edi;movl %edi, (%ebx);calll  <RtlUpperString+>;cmpl %esi, %eax;movl %esi, (%ebx)": 1,
                "shll %eax;cltd;movl $, %esi;idivl %esi;cmpl %ecx, %eax": 1,
                "xorl %esi, %esi;movl %eax, %edi;calll - <RtlIpvStringToAddressW+>;movl , %eax;leal (%esi,%eax), %ecx": 1,
                "pushl $;movb $, ;calll - <InbvInstallDisplayStringFilter>;pushl $;calll - <IoEnumerateDeviceObjectList+>": 1,
                "pushl %esi;pushl $;pushl %ebx;calll  <InbvSolidColorFill>;pushl $": 2,
                "calll  <InbvSolidColorFill>;pushl $;calll - <InbvInstallDisplayStringFilter+>;pushl $;jmp  <IoSetFileOrigin+>": 1,
                "calll - <InbvInstallDisplayStringFilter+>;movl %eax, -(%ebp);jmp - <IoEnumerateDeviceObjectList+>;pushl $;pushl $": 1,
                "movl $, %edi;pushl %edi;movl $, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "jmp - <InbvCheckDisplayOwnership+>;jmp - <IoEnumerateDeviceObjectList+>;retl;movl $, %eax;jmp - <IoAllocateDriverObjectExtension+>": 1,
                "pushl (%eax);addl $-, %eax;pushl $;pushl (%eax);pushl %eax": 1,
                "pushl $;pushl $;pushl %esi;pushl $;calll  <KeBugCheckEx>": 2,
                "pushl (%ebp);pushl %esi;calll ;jmp - <IoInitializeIrp+>;incl (%esi)": 1,
                "calll ;jmp - <IoInitializeIrp+>;incl (%esi);pushl $;pushl %edx": 1,
                "jmp - <IoStartPacket+>;cmpb $, (%esi);je  <IoSetFileOrigin+>;movb (%ebp), %al;andl $, (%esi)": 1,
                "calll *%ebx;jmp - <IoStartPacket+>;pushl (%ebp);calll - <IoReleaseVpbSpinLock>;jmp - <IoStartPacket+>": 1,
                "pushl (%ebp);calll - <IoReleaseVpbSpinLock>;jmp - <IoStartPacket+>;movl (%esi), %eax;orl %edx, (%eax)": 1,
                "orl %edx, (%eax);movl (%esi), %eax;movl %edi, (%eax);jmp - <IoReleaseRemoveLockEx+>;pushl %edi": 1,
                "pushl %edi;pushl (%ebp);pushl %esi;calll  <IoSetDeviceToVerify+>;jmp - <IoReleaseRemoveLockEx+>": 1,
                "jmp  <IoSetFileOrigin+>;movl -(%ebp), %eax;jmp - <RtlImageDirectoryEntryToData+>;xorl %eax, %eax;jmp - <IoAllocateMdl+>": 1,
                "movl -(%ebp), %eax;movl $, (%eax);movl %eax, %esi;jmp - <IoBuildAsynchronousFsdRequest+>;nop": 1,
                "orl $-, -(%ebp);jmp - <_wcsupr+>;cmpl %edi, (%ebp);je  <IoSetFileOrigin+>;pushl %edi": 1,
                "calll  <ExFreePoolWithTag>;pushl %esi;calll - <IoFreeIrp>;orl $-, -(%ebp);jmp - <InbvNotifyDisplayOwnershipLost+>": 1,
                "pushl %eax;pushl %esi;calll ;testb %al, %al;je - <IoCancelIrp+>": 1,
                "pushl -(%ebp);pushl %esi;calll  <RtlVolumeDeviceToDosName+>;jmp - <IofCompleteRequest+>;jmp - <IofCompleteRequest+>": 1,
                "jmp - <IofCompleteRequest+>;calll *;pushl %edi;pushl %esi;calll  <RtlVolumeDeviceToDosName+>": 1,
                "pushl %esi;calll *(%esi);jmp - <IoCsqInsertIrp+>;pushl (%ebp);pushl %edi": 1,
                "pushl (%ebp);pushl %edi;jmp - <IoCsqRemoveNextIrp+>;jmp - <IoCsqRemoveNextIrp+>;andl $, (%eax)": 1,
                "jmp - <IoCsqInsertIrp+>;movl (%edi), %esi;jmp - <InbvNotifyDisplayOwnershipLost+>;pushl $;pushl %esi": 1,
                "pushl %esi;pushl %eax;calll - <InbvNotifyDisplayOwnershipLost+>;movl (%esi), %esi;jmp - <InbvNotifyDisplayOwnershipLost+>": 1,
                "cmpl %edi, -(%ebp);je  <IoSetFileOrigin+>;orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi;movl $, -(%ebp)": 1,
                "movzwl %di, %eax;pushl $;pushl %eax;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "pushl (%ebp);pushl %eax;pushl %ecx;calll ;jmp - <FsRtlInitializeFileLock+>": 1,
                "nop;movl -(%ebp), %esp;cmpl $, -(%ebp);je - <IoSetFileOrigin+>;orl $-, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %edi;xorl %esi, %esi;jmp - <FsRtlInitializeFileLock+>;jmp - <FsRtlInitializeFileLock+>": 1,
                "jne  <IoSetFileOrigin+>;movl (%eax), %eax;testl %eax, %eax;jne - <IoSetFileOrigin+>;testl %esi, %esi": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <IoSetFileOrigin+>;testl %esi, %esi;movl %esi, %eax": 1,
                "orl $, %eax;movl %eax, (%edi);jmp - <InbvNotifyDisplayOwnershipLost+>;cmpb $, (%ebp);leal -(%ebp), %eax": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);movl %edi, -(%ebp);leal -(%ebp), %eax;je  <IoSetFileOrigin+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp);calll - <ExQueueWorkItem>": 1,
                "jmp - <KeInitializeEvent+>;movl (%ebp), %esi;cmpl $, (%esi);jne - <RtlCopyUnicodeString+>;testb $, (%esi)": 1,
                "pushl (%ebx);pushl $;pushl $;calll  <ExAllocatePoolWithTag>;movl %eax, %esi": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);leal (%esi), %eax;pushl %eax;calll - <KeQueryTickCount>": 1,
                "jne  <IoSetFileOrigin+>;pushl $;pushl $;addl $, %ebx;pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %ebx, %esi;calll - <KeQueryTickCount>;testl %ebx, %ebx": 1,
                "jmp  <IoSetFileOrigin+>;movl %eax, (%ebx);calll  <ExFreePoolWithTag>;movl (%ebx), %esi;jmp  <IoSetFileOrigin+>": 1,
                "movl %esi, %ebx;movl (%esi), %esi;testl %esi, %esi;jne - <IoSetFileOrigin+>;movb (%ebp), %cl": 1,
                "leal (%edi), %edx;movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "calll  <PoShutdownBugCheck+>;jmp - <IoInvalidateDeviceRelations+>;jmp - <IoInvalidateDeviceRelations+>;pushl %ecx;pushl %ecx": 1,
                "pushl $;calll  <KeBugCheckEx>;int;pushl %edx;pushl %edx": 2,
                "movb $, %cl;movb $, (%eax);calll *;jmp - <_wcsupr+>;movzwl %ax, %edx": 1,
                "jmp - <_wcsupr+>;testl %ecx, %esi;jne - <IoInvalidateDeviceRelations+>;orl %esi, (%eax);pushl $": 1,
                "movb $, (%ebp);jmp - <IoInvalidateDeviceRelations+>;cmpl , %edi;je - <IoInvalidateDeviceRelations+>;movl $, %eax": 1,
                "calll  <IoCsqRemoveIrp+>;movl (%esi), %eax;cmpl %ebx, %eax;je  <IoSetFileOrigin+>;movswl (%eax), %ecx": 1,
                "pushl $;pushl $;calll  <KeBugCheckEx>;int;pushl %ebx": 2,
                "int;pushl %ebx;calll  <IoReportTargetDeviceChange+>;pushl $;pushl %esi": 1,
                "jmp - <_wcsupr+>;calll  <IoReportTargetDeviceChange+>;jmp - <_wcsupr+>;xorl %eax, %eax;cmpl $, %ebx": 1,
                "jmp - <InbvInstallDisplayStringFilter+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll - <ZwSetValueKey>;jmp - <InbvInstallDisplayStringFilter+>;leal (%eax), %ecx": 1,
                "insl %dx, %es:(%edi);addb %dh, (%eax);popal;addb %dh, (%eax,%eax);addb %ah, (%edx)": 4,
                "addb %ah, (%edx);insb %dx, %es:(%edi);addb %ah, (%ebp);decl %ecx;addb %al, (%eax,%eax)": 7,
                "addb %al, (%bp);insb %dx, %es:(%edi);addb %ah, (%ecx);addb %dh, (%bp,%di);addb %al, (%eax)": 3,
                "pushl (%ebp);pushl (%ebp);pushl %esi;pushl %edi;calll ": 2,
                "pushl $;calll  <wcstombs+>;testl %eax, %eax;jne  <IoSetFileOrigin+>;movb $, -(%ebp)": 1,
                "leal -(%esi), %eax;cmpb $, (%eax);movl (%esi), %esi;je - <KeSetTimeIncrement+>;movl (%eax), %edx": 1,
                "cmpb $, (%eax);movl (%esi), %esi;je - <KeSetTimeIncrement+>;movl (%eax), %edx;addl $, %eax": 1,
                "jmp - <KeQueryIoAccessMap+>;movl (%ebp), %edi;movl $, %ecx;orl $-, %eax;rep  stosl %eax, %es:(%edi)": 1,
                "jmp - <KeQueryIoAccessMap+>;xorb %al, %al;jmp - <KeIoSetAccessProcess+>;movl $, %esi;jmp - <KeIoSetAccessProcess+>": 1,
                "leal -(%edi), %ecx;movsbl (%ecx), %edx;addl (%ebp), %edx;pushl $;popl %ebx": 1,
                "cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;movl %eax, -(%ebp);jne - <IoSetFileOrigin+>;calll - <KeResetEvent+>": 2,
                "jmp - <KeDetachProcess+>;movb $, %cl;movb $, (%esi);calll *;jmp - <KeDetachProcess+>": 1,
                "movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);cmpb $, (%ebx)": 1,
                "movl %eax, (%edi);movl %eax, %ebx;movl (%ebp), %eax;movl $, %ecx;movl (%ebp), %edx": 1,
                "movzbl (%esi), %eax;pushl %eax;pushl (%esi);pushl %edi;pushl $": 1,
                "pushl $;calll  <KeBugCheckEx>;int;movl %fs:, %eax;pushl %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl %edi;pushl %esi;calll - <ObReferenceObjectByPointer+>": 1,
                "je  <IoSetFileOrigin+>;cmpb $, (%esi);movl $, -(%ebp);jl  <IoSetFileOrigin+>;movl %ecx, -(%ebp)": 1,
                "movl , %ecx;movl %ecx, (%esi);jmp - <KeDelayExecutionThread+>;movb (%esi), %cl;cmpb $, %cl": 1,
                "calll - <ExReleaseResourceLite+>;pushl $;calll - <ExRaiseStatus>;movl -(%ebp), %edx;jmp - <KeWaitForMultipleObjects+>": 1,
                "pushl $;calll - <ExRaiseStatus>;movl -(%ebp), %edx;jmp - <KeWaitForMultipleObjects+>;jmp - <RtlNumberOfSetBits+>": 1,
                "jmp - <KeWaitForMultipleObjects+>;jmp - <RtlNumberOfSetBits+>;movb $, (%esi);movl $, %edi;jmp - <KeLeaveCriticalRegion+>": 1,
                "movb $, ;je - <IoEnumerateDeviceObjectList+>;jmp - <IoEnumerateDeviceObjectList+>;xorl %edi, %edi;jmp - <MmForceSectionClosed+>": 1,
                "je - <IoEnumerateDeviceObjectList+>;jmp - <IoEnumerateDeviceObjectList+>;xorl %edi, %edi;jmp - <MmForceSectionClosed+>;movsbl (%esi), %eax": 1,
                "jne - <IoGetAttachedDeviceReference+>;testb %cl, %cl;jne  <IoSetFileOrigin+>;movb %cl, (%edx);jmp - <IoGetAttachedDeviceReference+>": 1,
                "movb $, (%edx);jmp - <IoGetAttachedDeviceReference+>;movb $, %cl;movb $, (%edi);calll *": 1,
                "pushl %edi;pushl $;calll  <KeBugCheckEx>;int;cmpl $, (%edi)": 1,
                "movl %eax, (%edi);jmp - <KeSetSystemAffinityThread+>;cmpl %ebx, %eax;jge  <IoSetFileOrigin+>;movl %ebx, %eax": 1,
                "calll  <KeSaveStateForHibernate+>;movb %al, (%esi);movb %al, (%edi);popl %edi;jmp - <KeSetIdealProcessorThread+>": 1,
                "jmp - <KeInitializeDpc+>;movb $, (%edi);movl , %eax;addl $, %edi;movl %edi, -(%ebp)": 1,
                "movl %eax, (%ebp);pushl %ebx;movl %eax, (%edi);movl %eax, %ebx;movl (%ebp), %eax": 1,
                "leal (%eax), %ecx;cmpl (%ecx), %edx;jne - <FsRtlGetNextFileLock+>;leal (%eax), %edx;pushl %edx": 1,
                "testl %eax, %eax;setne %al;jmp - <FsRtlGetNextFileLock+>;testb $, (%edi);jne - <KeInitializeDpc+>": 1,
                "jmp - <KeInitializeDpc+>;cmpb $, ;je - <KeInitializeDpc+>;andl , %eax;orl , %eax": 1,
                "jmp - <KeInitializeDpc+>;orl $, %eax;jmp - <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax;movl %eax, (%ebx)": 1,
                "jmp - <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax;movl %eax, (%ebx);jmp - <KeInitializeDpc+>;movl %esi, %eax": 1,
                "shrl %ecx;incl %edx;shll %cl, %edx;orw %dx, (%ebx);jmp - <toupper+>": 1,
                "movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);xorl %eax, %eax": 2,
                "orl %eax, (%ecx);jmp - <KeInitializeDpc+>;movl %fs:, %eax;movl (%eax), %eax;cmpl $, (%eax)": 1,
                "andl $, %edx;movzbl (%edx), %edx;jmp  <IoSetFileOrigin+>;leal (%esi), %eax;pushl %eax": 1,
                "movl %fs:, %eax;movl (%eax), %eax;testb $, (%eax);jne  <IoSetFileOrigin+>;testb $-, ": 1,
                "cmpl $, -(%ebp);jne  <IoSetFileOrigin+>;movl -(%ebp), %edi;movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "calll  <RtlNtStatusToDosError+>;testb %al, %al;jne - <PsGetProcessDebugPort+>;pushl $;pushl %edi": 1,
                "pushl %edi;pushl %ebx;pushl (%esi);pushl (%esi);pushl $": 1,
                "subb %al, ;movb $, ;jmp - <IoEnumerateDeviceObjectList+>;movl $, %eax;jmp - <KeSaveFloatingPointState+>": 1,
                "pushl $;pushl $;calll  <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%ebx)": 1,
                "orb $, (%ebx);testb $, %al;movb (%ebx), %cl;je  <IoSetFileOrigin+>;addl $, %eax": 1,
                "andl $, (%eax);movl (%ebx), %eax;movl (%edx), %ecx;movl %ecx, (%eax);jmp - <KeSaveFloatingPointState+>": 1,
                "pushl $;calll *;movzbl %al, %eax;pushl %eax;movzbl (%ebx), %eax": 1,
                "jmp - <IoEnumerateDeviceObjectList+>;orb $, %al;movl $, (%esi);jmp - <KeInitializeDpc+>;movb %al, %cl": 1,
                "jmp - <KiDeliverApc+>;jmp - <KiDeliverApc+>;calll *%esi;movzbl %al, %ecx;jmp - <KeSetTargetProcessorDpc+>": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <_strnicmp+>;jmp - <RtlSetBit+>": 1,
                "jne - <PoSetSystemState+>;movzbl (%esi), %ecx;movl (,%ecx,), %edi;testl %edx, (%edi);jne - <PoSetSystemState+>": 1,
                "incl %edx;xorl %ecx, %ecx;calll - <KeDelayExecutionThread+>;testl %eax, %eax;je - <KeQueryTimeIncrement+>": 1,
                "jmp - <RtlAppendUnicodeToString+>;movl $, (%esi);movb $, (%ebx);jmp - <RtlAppendUnicodeToString+>;movl $, (%esi)": 1,
                "jmp - <RtlAppendUnicodeToString+>;movl $, (%esi);movl $, (%esi);jmp - <KeInitializeTimer+>;cmpb $, ": 1,
                "shll $, %eax;shrl %esi;andl $, %eax;orl %eax, %esi;testb $-, %cl": 1,
                "pushl %edx;pushl %eax;pushl (%ebp);jmp  <IoSetFileOrigin+>;calll *": 1,
                "jmp  <IoSetFileOrigin+>;calll *;xorl %eax, %eax;jmp - <RtlInsertElementGenericTableAvl+>;jmp - <RtlInsertElementGenericTableAvl+>": 1,
                "movl %fs:, %eax;movl (%eax), %eax;testb $-, (%eax);je - <RtlInsertElementGenericTableAvl+>;shll $, %ebx": 1,
                "addl $, %eax;shrl $, %eax;andl $, %eax;jmp - <RtlInsertElementGenericTableAvl+>;cmpb $, (%ecx)": 1,
                "andl $, %eax;jmp - <RtlInsertElementGenericTableAvl+>;cmpb $, (%ecx);je - <RtlInsertElementGenericTableAvl+>;movb $, (%ecx)": 1,
                "je - <RtlInsertElementGenericTableAvl+>;movb $, (%ecx);jmp - <RtlInsertElementGenericTableAvl+>;leal (%edx,%edi,), %eax;jmp - <RtlInsertElementGenericTableAvl+>": 1,
                "andb $-, (%ebx);movl -(%ebp), %eax;movl -(%ebp), %ecx;incl (%esi);cmpl %eax, (%ecx)": 1,
                "je - <RtlInsertElementGenericTableAvl+>;movl (%ebp), %edx;pushl $;movl %eax, %ecx;calll - <PsGetProcessJob+>": 1,
                "movl %eax, %ecx;calll - <PsGetProcessJob+>;jmp - <RtlInsertElementGenericTableAvl+>;jmp - <RtlInsertElementGenericTableAvl+>;movl (%esi), %ecx": 1,
                "movl %fs:, %eax;movl , %ecx;movl %eax, (%ecx);jmp - <RtlInsertElementGenericTableAvl+>;movl (%ecx), %eax": 1,
                "movl (%eax), %eax;andl $, %eax;leal (%eax,%eax,), %eax;testl %ebx, (%edx,%eax,);jne - <RtlInsertElementGenericTableAvl+>": 1,
                "pushl $;pushl %esi;calll  <MmIsNonPagedSystemAddressValid+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <PsIsThreadTerminating+>;pushl (%ebp);pushl %esi;calll  <KeSaveStateForHibernate+>;calll *%edi": 1,
                "pushl (%ebp);pushl %esi;calll  <KeSaveStateForHibernate+>;calll *%edi;movb %al, %cl": 1,
                "movl %fs:, %eax;pushl ;pushl (%eax);pushl %esi;pushl %edi": 1,
                "pushl ;pushl (%eax);pushl %esi;pushl %edi;pushl %ebx": 1,
                "testl %eax, %eax;je - <mbtowc+>;movl -(%ebp), %edx;movl %ebx, -(%ebp);jmp - <mbtowc+>": 1,
                "movl -(%ebp), %edx;movl %ebx, -(%ebp);jmp - <mbtowc+>;jmp - <mbtowc+>;movl %fs:, %eax": 1,
                "calll ;jmp - <KeIAllocateGdtSelectors+>;movl , %esi;jmp - <MmMapIoSpace+>;decl %eax": 1,
                "movl (%ebx), %eax;andl $, %eax;orl $, %eax;movl %eax, (%ebx);cmpb $, ": 1,
                "cmpb $, ;jne  <IoSetFileOrigin+>;andl $-, %esi;orl $, %esi;jmp - <_wcsupr+>": 1,
                "jne  <IoSetFileOrigin+>;andl $-, %esi;orl $, %esi;jmp - <_wcsupr+>;movl (%ebx), %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;pushl -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "pushl %esi;movl %edi, -(%ebp);calll  <KeSaveStateForHibernate+>;jmp - <MmMapIoSpace+>;pushl %esi": 1,
                "movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);popl %edi;popl %esi": 2,
                "jmp - <_wcsupr+>;subl (%ebp), %eax;jmp - <_wcsupr+>;pushl %esi;calll - <RtlInsertElementGenericTableAvl+>": 1,
                "addl $, %eax;jmp - <MmFreeContiguousMemory+>;movl , %eax;leal (%eax), %ecx;movl (%eax), %eax": 1,
                "incl %edi;movb $, %cl;movl %edi, -(%ebp);movl %eax, -(%ebp);calll *": 1,
                "movl , %eax;movl (%eax), %eax;leal (%eax,%ebx,), %eax;orl $, (%eax);movl , %eax": 1,
                "cmpw $, %ax;je  <IoSetFileOrigin+>;decl %eax;movw %ax, (%esi);jmp - <MmUnlockPagableImageSection+>": 1,
                "jmp - <MmUnlockPagableImageSection+>;movl %esi, %eax;subl , %eax;pushl $;cltd": 1,
                "jmp - <MmUnlockPagableImageSection+>;jmp - <MmUnlockPagableImageSection+>;movl , %eax;incl (%eax);jmp - <PoRegisterDeviceForIdleDetection+>": 1,
                "calll  <MmIsNonPagedSystemAddressValid+>;calll  <MmMapUserAddressesToPage+>;pushl $;jmp  <IoSetFileOrigin+>;calll  <MmIsNonPagedSystemAddressValid+>": 1,
                "jae  <IoSetFileOrigin+>;movl %eax, %esi;jmp - <IoSetFileOrigin+>;incl ;testb $, (%ebx)": 1,
                "pushl $;calll - <KeFlushEntireTb>;pushl $;calll - <RtlInsertElementGenericTableAvl+>;jmp - <MmMapLockedPagesSpecifyCache+>": 1,
                "jmp - <MmMapLockedPagesSpecifyCache+>;cmpl , %eax;ja  <IoSetFileOrigin+>;movl , %edi;movl %eax, %edx": 1,
                "movl %edx, -(%ebp);jne - <MmMapLockedPagesSpecifyCache+>;movl -(%ebp), %edi;shll $, %eax;andl $, %esi": 1,
                "cmpl $, %edx;je  <IoSetFileOrigin+>;incl ;cmpb $, ;jne - <IoSetFileOrigin+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlGetCallersAddress>;pushl (%ebp);pushl -(%ebp)": 1,
                "calll  <KeSaveStateForHibernate+>;movl %ebx, %edx;jmp - <MmUnlockPages+>;jmp - <MmUnlockPages+>;movl %edx, -(%ebp)": 1,
                "leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %esi;orl %edi, (%esi);movl (%esi), %eax;testb $, %ah": 1,
                "pushl $;jmp  <IoSetFileOrigin+>;movb $, (%edx);jmp - <RtlAppendUnicodeToString+>;nop": 1,
                "incl ;pushl -(%ebp);calll - <ExRaiseStatus>;jmp - <MmProbeAndLockPages+>;testb $, %ah": 1,
                "shrl %cl, %edx;andl $, %edx;movl %edx, -(%ebp);je  <IoSetFileOrigin+>;movl (%ebp), %ecx": 1,
                "cmpw $, %dx;jne  <IoSetFileOrigin+>;cmpl $, (%ecx);je  <IoSetFileOrigin+>;incl ": 1,
                "cmpl $, (%ecx);je  <IoSetFileOrigin+>;incl ;incw (%ecx);jmp  <IoSetFileOrigin+>": 1,
                "movzbl (%ebx), %ecx;movl (%ebx), %eax;leal (%ecx,%eax,), %eax;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "leal -(%ebp), %eax;cmpl %eax, -(%ebp);je  <IoSetFileOrigin+>;pushl $;pushl -(%ebp)": 1,
                "cmpl %edx, %eax;movl %edx, (%ebp);je - <MmProbeAndLockSelectedPages+>;movl (%eax), %edx;testb $, (%edx)": 1,
                "jmp - <MmProbeAndLockSelectedPages+>;movl (%ecx), %eax;andl $, %eax;cmpl $, %eax;je - <MmProbeAndLockSelectedPages+>": 1,
                "cmpl %ecx, %eax;je  <IoSetFileOrigin+>;jmp - <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;xorl %eax, %eax": 1,
                "incl ;movl $, (%ebp);movb -(%ebp), %cl;calll *;jmp - <IoSetFileOrigin+>": 1,
                "movl %eax, %esi;movl (%esi), %eax;testl %eax, %eax;jne - <IoSetFileOrigin+>;pushl %esi": 1,
                "ja - <MmFlushImageSection+>;jb  <IoSetFileOrigin+>;cmpl %eax, %esi;jae - <MmFlushImageSection+>;movl %eax, (%edi)": 1,
                "movl (%eax), %eax;pushl $;addl $, %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "addl $, %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll  <RtlUnicodeStringToAnsiString>": 1,
                "jmp - <CcPurgeCacheSection+>;pushl %ebx;pushl %ebx;addl $, %esi;pushl %esi": 1,
                "jmp - <KeCancelTimer+>;movl %ebx, %ecx;calll - <PsGetCurrentProcess+>;jmp - <KeCancelTimer+>;cmpl $, %eax": 1,
                "jmp - <KeCancelTimer+>;cmpl $, %eax;je - <KeSaveFloatingPointState+>;jmp  <IoSetFileOrigin+>;jmp - <KeCancelTimer+>": 1,
                "pushl %eax;pushl %ecx;pushl $;pushl $;calll  <KeBugCheckEx>": 12,
                "movb (%ebp), %cl;calll *;calll *%esi;cmpw %bx, (%edi);movb %al, (%ebp)": 1,
                "pushl %esi;calll - <RtlRealSuccessor+>;pushl $;pushl %esi;pushl %esi": 2,
                "pushl %esi;pushl %esi;calll - <KeDelayExecutionThread>;incl -(%ebp);calll *": 1,
                "incl -(%ebp);calll *;movl %ebx, %ecx;movb %al, (%ebp);calll - <PsGetCurrentProcess+>": 1,
                "movl $, -(%ebp);movl %esi, %ecx;calll - <KeResetEvent+>;andl $-, (%esi);cmpw $, (%esi)": 1,
                "xorl %esi, %esi;addl -(%ebp), %ecx;adcl -(%ebp), %esi;cmpl %edx, %esi;jb  <IoSetFileOrigin+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%edi);movl %esi, -(%ebp);calll - <IoSynchronousPageWrite>": 1,
                "pushl (%edi);movl %esi, -(%ebp);calll - <IoSynchronousPageWrite>;cmpl %esi, %eax;jl  <IoSetFileOrigin+>": 1,
                "je  <IoSetFileOrigin+>;cmpl $, -(%ebp);je  <IoSetFileOrigin+>;cmpl $, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "decl (%ebp);movl (%ebp), %eax;testl %eax, ;je  <IoSetFileOrigin+>;pushl $": 2,
                "calll - <PsGetCurrentProcess+>;movl -(%ebp), %eax;testl %eax, %eax;jge  <IoSetFileOrigin+>;cmpl %ebx, %eax": 1,
                "cmpl $, -(%ebp);ja  <IoSetFileOrigin+>;leal -(%ebp), %eax;jmp  <IoSetFileOrigin+>;movl -(%ebp), %eax": 1,
                "movl (%ebx), %ecx;testb $, %ch;jne  <IoSetFileOrigin+>;testb $, %ch;je  <IoSetFileOrigin+>": 1,
                "addl $, %esi;cmpl -(%ebp), %esi;jb - <IoSetFileOrigin+>;movl -(%ebp), %eax;andl $, -(%ebp)": 1,
                "movl %esi, -(%ebp);je - <MmForceSectionClosed+>;cmpl %ecx, (%esi);jne - <MmForceSectionClosed+>;jmp - <IoSetFileOrigin+>": 1,
                "pushl %eax;pushl %ebx;pushl %edi;pushl $;pushl $": 1,
                "testl $, %eax;je - <KeSaveFloatingPointState+>;movl $, -(%ebp);jmp - <KeSaveFloatingPointState+>;pushl %esi": 1,
                "pushl %eax;calll - <KeSetEvent>;jmp - <MmIsAddressValid+>;pushl %ebx;pushl %ebx": 1,
                "jne  <IoSetFileOrigin+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <IoSetFileOrigin+>;movb $, %cl": 2,
                "calll  <CcUnpinData+>;jmp - <MmForceSectionClosed+>;decl %eax;jne - <wcscat+>;calll  <MmMapMemoryDumpMdl+>": 1,
                "jne - <IoSetFileOrigin+>;movl %edi, (%ebp);jmp - <MmCommitSessionMappedView+>;incl (%ebp);jmp - <MmCommitSessionMappedView+>": 1,
                "movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);jmp - <MmCommitSessionMappedView+>;movl $, %esi": 1,
                "movl %edi, (%ebp);calll - <ExReleaseFastMutexUnsafe>;movl -(%ebp), %ecx;movl (%ecx), %ecx;calll *": 1,
                "movl %esi, %eax;jmp - <MmCommitSessionMappedView+>;leal (%esi), %edx;movl (%edx), %ecx;jmp  <IoSetFileOrigin+>": 1,
                "movl %eax, (%ecx);jmp - <MmCommitSessionMappedView+>;movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, (%eax)": 1,
                "xorl %eax, %eax;jmp - <KeInitializeQueue+>;orb $, (%ebp);jmp - <MmCreateSection+>;movl $, %eax": 1,
                "jmp - <KeInitializeQueue+>;orb $, (%ebp);jmp - <MmCreateSection+>;movl $, %eax;jmp - <MmCreateSection+>": 1,
                "movl $, %eax;jmp - <MmCreateSection+>;testb $, (%eax);je - <MmCreateSection+>;movl (%ebx), %eax": 1,
                "movl %eax, %edi;pushl %esi;pushl -(%ebp);calll  <ExFreePoolWithTag>;movl -(%ebp), %ecx": 1,
                "calll  <ExFreePoolWithTag>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp  <IoSetFileOrigin+>;orl $, %eax": 1,
                "addl $, %eax;pushl %eax;calll - <KeSetEvent>;jmp - <CcSetDirtyPinnedData+>;testb $, (%eax)": 1,
                "movl (%ebp), %ebx;pushl $;popl %ecx;pushl -(%ebp);movl %ebx, %esi": 1,
                "leal -(%ebp), %eax;leal -(%ebp), %edi;pushl %eax;rep  movsl (%esi), %es:(%edi);calll  <RtlGeneratedotName+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);jmp - <KeSaveFloatingPointState+>": 1,
                "movl %esi, %ecx;jmp - <IoSetFileOrigin+>;pushl $;pushl $;xorl %edi, %edi": 1,
                "movl %edi, (%esi);calll *;leal (%esi), %edx;movl , %esi;movl $, (%edx)": 1,
                "cmpl %eax, (%eax);jne  <IoSetFileOrigin+>;pushl %ecx;pushl %ecx;addl $, %eax": 2,
                "movl %ecx, (%esi);movl %esi, (%ecx);movl %esi, (%eax);movl $, (%esi);incl ": 1,
                "movl %fs:, %eax;movl (%edi), %ecx;movl (%eax), %eax;andl $, %ecx;pushl %ecx": 1,
                "jmp - <ExLocalTimeToSystemTime+>;movl $, -(%ebp);movl -(%ebp), %edi;jmp - <ExLocalTimeToSystemTime+>;cmpb $, (%esi)": 1,
                "movl -(%ebp), %edi;jmp - <ExLocalTimeToSystemTime+>;cmpb $, (%esi);jne - <ExLocalTimeToSystemTime+>;andl $, (%esi)": 1,
                "movl %ebx, ;movl %ecx, (%ebx);decl ;xorb %cl, %cl;calll *": 1,
                "movl -(%ebp), %eax;subl %edi, %eax;addl %eax, (%esi);cmpl %ecx, -(%ebp);jne  <IoSetFileOrigin+>": 1,
                "cmpl $, ;je - <ExLocalTimeToSystemTime+>;movl , %eax;cmpl $-, %eax;je - <ExLocalTimeToSystemTime+>": 1,
                "jmp - <ExLocalTimeToSystemTime+>;movb -(%ebp), %cl;xorl %esi, %esi;movl %esi, ;calll *%edi": 1,
                "pushl %esi;pushl $;pushl $;calll - <KeWaitForSingleObject>;calll *": 1,
                "je - <RtlDelete+>;movl , %ecx;shrl $, %eax;leal (%eax,%eax,), %eax;movl (%ecx,%eax,), %eax": 1,
                "andl $, %eax;cmpl $, %eax;jb - <RtlDelete+>;cmpl $, (%ebp);je - <MmMapLockedPagesSpecifyCache+>": 1,
                "cmpl %esi, (%ebp);jmp - <MmMapLockedPagesSpecifyCache+>;movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx)": 1,
                "jmp  <IoSetFileOrigin+>;cmpw $, %cx;je  <IoSetFileOrigin+>;decl %ecx;movw %cx, (%eax)": 1,
                "andl $, %eax;subl (%edi), %eax;addl %eax, (%esi);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "leal (%edx), %eax;movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, ": 1,
                "movl (%edx), %eax;addl (%edx), %eax;shll $, %eax;cmpl $, %eax;jbe  <IoSetFileOrigin+>": 1,
                "je - <FsRtlTruncateLargeMcb+>;movl %ecx, %eax;movl (%eax), %ecx;jmp - <FsRtlTruncateLargeMcb+>;jmp - <FsRtlTruncateLargeMcb+>": 1,
                "calll *;calll *%esi;jmp - <FsRtlResetLargeMcb+>;cmpl $, %eax;je - <FsRtlTruncateLargeMcb+>": 1,
                "pushl %ecx;pushl $;pushl $;jmp  <IoSetFileOrigin+>;pushl %ecx": 1,
                "jmp - <InbvNotifyDisplayOwnershipLost+>;movl %edi, %ecx;calll - <PsReturnProcessNonPagedPoolQuota+>;testl %eax, %eax;jge - <InbvNotifyDisplayOwnershipLost+>": 1,
                "jmp  <IoSetFileOrigin+>;movl (%edx), %eax;pushl $;shrl $, %eax;andl $, %eax": 1,
                "leal (%eax,%ebx,), %esi;movl %esi, %ebx;shrl $, %ebx;andl $, %ebx;subl $, %ebx": 1,
                "incw (%eax);movl (%esi), %ecx;cmpl , %ecx;je  <IoSetFileOrigin+>;movl %ecx, %edx": 1,
                "andl $, %eax;andl $, -(%eax);shrl $, %ecx;calll - <wcscmp+>;movl %esi, %ecx": 1,
                "cmpw $, (%eax);jne - <ExLocalTimeToSystemTime+>;pushl $;pushl $;pushl %esi": 1,
                "pushl $;pushl %esi;pushl (%ebp);pushl (%ebp);pushl %ecx": 1,
                "cmpl $, %eax;je - <KeTerminateThread+>;movl (%edx), %eax;pushl $;shrl $, %eax": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp)": 17,
                "pushl $;pushl $;calll  <KeBugCheckEx>;pushl %ebx;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpb $, (%ebx);je - <PoSetSystemState+>;pushl %esi;movl , %esi;calll *%esi": 1,
                "movl $, %edi;andl %edi, %edx;movl $, %ebx;orl %ebx, %edx;movl %edx, (%ecx)": 1,
                "leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax;movb -(%ebp), %cl;incl (%eax);calll *%edi": 1,
                "leal (%esi), %edx;cmpl $, (%edx);jbe  <IoSetFileOrigin+>;movl (%edx), %ebx;movl (%edx), %ecx": 1,
                "cmpl $, (%edx);jbe  <IoSetFileOrigin+>;movl (%edx), %ebx;movl (%edx), %ecx;movl %ebx, (%ecx)": 1,
                "movl $, (%edx);movb %al, %cl;calll *%edi;andl $, (%esi);andl $, (%esi)": 1,
                "cmpl $, %eax;je - <RtlEnumerateGenericTableAvl+>;jmp  <IoSetFileOrigin+>;movl -(%ebp), %ecx;calll - <PsIsThreadTerminating+>": 1,
                "jmp  <IoSetFileOrigin+>;movl -(%ebp), %ecx;calll - <PsIsThreadTerminating+>;movl %eax, -(%ebp);jmp - <RtlEnumerateGenericTableAvl+>": 1,
                "notl %ecx;andl %ecx, %eax;jmp - <RtlSetBit+>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <MmUnmapLockedPages>;jmp - <RtlFindNextForwardRunClear+>": 1,
                "pushl -(%ebp);pushl %ebx;pushl -(%ebp);pushl -(%ebp);pushl $": 1,
                "movb %al, %cl;calll *;movl %esi, %ecx;calll *;movl $, %eax": 1,
                "shrl $, %esi;subl %edx, %ecx;movl (%ecx), %ecx;leal (%eax,%esi,), %esi;movl %ecx, (%esi)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);addl $, %eax;pushl %eax;calll - <KeInitializeSpinLock>": 1,
                "calll  <ExFreePoolWithTag>;movl $, %eax;jmp - <wcsstr+>;movl (%eax), %eax;movl (%eax), %eax": 1,
                "pushl %eax;pushl $;calll  <MmProbeAndLockProcessPages+>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, (%ebp);je - <wcsstr+>;pushl (%ebp);calll - <RtlFindClearBits+>;jmp - <wcsstr+>": 1,
                "calll - <RtlFindClearBits+>;jmp - <wcsstr+>;cmpl %ebx, -(%ebp);jne - <wcsstr+>;movl $, %ecx": 1,
                "incl %eax;cmpb %bl, %cl;jne - <IoSetFileOrigin+>;calll - <KeDetachProcess>;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl %edi;pushl %esi;pushl (%ebp);calll  <MmUnmapViewInSystemSpace+>": 1,
                "shrl $, %eax;andl %esi, %eax;pushl %ebx;movl %ecx, -(%ebp);andl $, -(%eax)": 2,
                "pushl %ebx;movl %ecx, -(%ebp);andl $, -(%eax);pushl $;leal -(%ebp), %eax": 2,
                "movl , %ecx;movl -(%ebp), %edx;shrl $, %ecx;movl %edx, (%eax,%ecx,);shrl $, %eax": 1,
                "shrl $, %eax;andl %esi, %eax;movl %ecx, -(%ebp);andl $, -(%eax);movl , %ecx": 1,
                "shll $, %ebx;movl %eax, (%edi);movl %esi, (%edi);movl $, (%edi);movl %ebx, (%edi)": 1,
                "movl $, (%edi);movl %ebx, (%edi);movl $, %ecx;leal (%edi), %eax;lock": 1,
                "movb %al, %dl;addl $, %esi;movl (%esi), %eax;leal -(%ecx,%eax), %eax;movl %eax, ": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movl %eax, (%esi);movl %fs:, %eax;movl %eax, %edi": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;incl (%edi);jne - <RtlEnumerateGenericTableAvl+>;leal (%edi), %eax": 1,
                "jne - <RtlEnumerateGenericTableAvl+>;leal (%edi), %eax;cmpl %eax, (%eax);je - <RtlEnumerateGenericTableAvl+>;movb $, %cl": 1,
                "pushl %eax;calll  <MmMapUserAddressesToPage+>;jmp - <RtlEnumerateGenericTableAvl+>;negl %eax;movl %eax, -(%ebp)": 1,
                "calll  <MmMapUserAddressesToPage+>;jmp - <RtlEnumerateGenericTableAvl+>;negl %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpl %edi, (%eax);je - <RtlEnumerateGenericTableAvl+>;cmpl $, (%eax);jne - <RtlEnumerateGenericTableAvl+>;movl (%eax), %eax": 1,
                "pushl (%eax);pushl (%eax);pushl $;calll  <KeBugCheckEx>;cmpl %edi, ": 1,
                "cmpl %eax, %edi;je  <IoSetFileOrigin+>;movl (%edi), %eax;movl (%edi), %ecx;movl %edi, %edx": 1,
                "calll  <ExFreePoolWithTag>;andl $, (%esi);jmp - <RtlEnumerateGenericTableAvl+>;nop;incl %ecx": 1,
                "jb  <IoSetFileOrigin+>;orb %cs:(%eax), %al;int;int;int": 1,
                "andl $, %edx;subl $, %edx;testb $, (%edx);je  <IoSetFileOrigin+>;xorl %eax, %eax": 1,
                "incl %eax;retl;movl (%eax), %eax;shll $, %ecx;subl , %ecx": 1,
                "retl;movl (%eax), %eax;shll $, %ecx;subl , %ecx;shrl $, %ecx": 1,
                "andl $, %eax;incl %eax;retl;movl $, %eax;jmp - <FsRtlGetNextFileLock+>": 1,
                "movl %ebx, -(%ebp);jne  <IoSetFileOrigin+>;movl , %eax;movl %ebx, (%eax);movl , %ecx": 1,
                "addl $, %ecx;calll - <ExReleaseResourceLite>;movb $, %cl;calll *%edi;jmp  <IoSetFileOrigin+>": 1,
                "movl $, -(%ebp);pushl $;pushl %ebx;pushl %ebx;calll - <KeDelayExecutionThread>": 1,
                "pushl %edi;pushl %esi;calll  <MmMapMemoryDumpMdl+>;jmp - <FsRtlGetNextFileLock+>;movl (%ebp), %edx": 1,
                "movl %ecx, (%edx);jmp - <KeSetKernelStackSwapEnable+>;movl (%ebp), %edx;movl %ecx, (%edx);jmp - <KeSetKernelStackSwapEnable+>": 1,
                "movl %ecx, (%edx);jmp - <KeSetKernelStackSwapEnable+>;cmpl , %esi;ja - <MmGrowKernelStack+>;jmp - <FsRtlGetNextFileLock+>": 1,
                "shll $, %eax;pushl %eax;pushl (%edi);pushl %ebx;pushl $": 3,
                "jmp - <RtlFindNextForwardRunClear+>;movl %edi, %ecx;calll - <PsReturnProcessNonPagedPoolQuota+>;testl %eax, %eax;jl  <IoSetFileOrigin+>": 1,
                "jge - <FsRtlRemoveLargeMcbEntry+>;movl %ebx, %eax;shll $, %eax;pushl %eax;pushl (%edi)": 1,
                "pushl (%ebp);pushl %ebx;pushl %esi;pushl (%ebp);calll  <MmMapMemoryDumpMdl+>": 1,
                "decl ;jmp - <RtlFindNextForwardRunClear+>;cmpl $, ;jbe - <RtlFindNextForwardRunClear+>;movl %ebx, %ecx": 1,
                "andl $, %ecx;movl %eax, %edi;subl %ecx, %edi;subl %edi, %eax;decl %edi": 1,
                "cmpl $-, -(%ebp);movl %eax, -(%ebp);jne  <IoSetFileOrigin+>;movl (%ebp), %ecx;cmpl , %ecx": 1,
                "cmpl $, (%eax);jae  <IoSetFileOrigin+>;calll - <PsIsThreadTerminating+>;testl %eax, %eax;je  <IoSetFileOrigin+>": 1,
                "shrl $, %edx;movl %eax, %ecx;calll - <PsReturnProcessPagedPoolQuota+>;testl %eax, %eax;je  <IoSetFileOrigin+>": 1,
                "subl %ecx, %eax;sarl $, %eax;cmpl -(%ebp), %eax;jae  <IoSetFileOrigin+>;movl %eax, -(%ebp)": 1,
                "testl %edi, %edi;jne  <IoSetFileOrigin+>;andl %edi, (%ebp);cmpl $, (%ebp);je - <RtlFindNextForwardRunClear+>": 1,
                "andl $, %edx;addl $, %edx;andl $, %ecx;xorl %edx, %ecx;movl -(%ebp), %edx": 1,
                "testl %eax, %eax;jne - <IoSetFileOrigin+>;movl (%ebp), %edx;movl %edi, %ecx;subl %eax, %ecx": 1,
                "shrl $, %edi;decl %edi;shll $, %edi;andl $, %edx;orl %edi, %edx": 1,
                "decl %edi;shll $, %edi;andl $, %edx;orl %edi, %edx;movl -(%ebp), %edi": 1,
                "jne - <IoSetFileOrigin+>;movl -(%ebp), %edx;subl %eax, %edx;subl -(%ebp), %eax;addl %edx, %ecx": 1,
                "subl %eax, %edx;subl -(%ebp), %eax;addl %edx, %ecx;cmpl $, %ecx;leal (%ebx,%eax,), %eax": 1,
                "movw %bx, (%edi);movl -(%ebp), %ebx;andl $, %eax;pushl %esi;movl %eax, (%edi)": 1,
                "pushl %esi;movl %eax, (%edi);movl %ecx, (%edi);movl %edx, (%edi);movw $, (%edi)": 1,
                "cmpl %eax, -(%ebp);jne  <IoSetFileOrigin+>;andl $, %ebx;orl $, %ebx;shll $, %ebx": 1,
                "shll $, %ebx;jmp  <IoSetFileOrigin+>;movl (%esi), %eax;subl , %eax;movl %eax, %ebx": 1,
                "cmpl , %edi;jb  <IoSetFileOrigin+>;cmpl , %edi;jae  <IoSetFileOrigin+>;xorl %eax, %eax": 1,
                "pushl %esi;pushl (%ebp);pushl %edi;calll  <MmMapMemoryDumpMdl+>;movl $, (%ebp)": 1,
                "jmp - <PsGetThreadTeb+>;orl $, %edx;jmp - <wcsncmp+>;movl $, %eax;jmp - <IoPageRead+>": 1,
                "movl -(%ebp), %eax;addl $, %ecx;adcl $, %eax;cmpl %edx, %eax;jb  <IoSetFileOrigin+>": 1,
                "movl -(%ebp), %edx;movb $, %cl;calll - <_allshr>;movl %eax, %edi;addl (%ebx), %edi": 1,
                "movl %esi, %ecx;calll - <KeResetEvent+>;incw (%esi);movl (%esi), %eax;incl (%esi)": 1,
                "movl (%esi), %eax;incl (%esi);movl (%ebp), %ebx;andl $, %eax;orl $, %eax": 1,
                "decl ;jmp - <IoPageRead+>;testb $, %cl;jne  <IoSetFileOrigin+>;movl -(%ebp), %edx": 1,
                "jmp - <PsGetProcessSectionBaseAddress+>;jmp - <PsGetProcessSectionBaseAddress+>;movl (%eax), %eax;cmpl $, %eax;je  <IoSetFileOrigin+>": 1,
                "addl $, %edx;cmpl %esi, %edx;ja - <PsGetProcessSectionBaseAddress+>;jmp - <IoSetFileOrigin+>;jmp - <PsGetProcessSectionBaseAddress+>": 1,
                "jmp - <RtlEqualString+>;movb $, %cl;movb $, (%edi);calll *;jmp - <KeGetRecommendedSharedDataAlignment+>": 1,
                "jmp - <RtlEqualString+>;cmpw $, (%esi);jne - <RtlEqualString+>;andl $, %eax;movl %eax, (%esi)": 1,
                "movb $, %cl;calll *;jmp  <IoSetFileOrigin+>;testb $, %ah;je - <PsGetThreadTeb+>": 1,
                "leal (%edi,%edi,), %eax;leal (%ebx,%eax,), %ebx;movl (%ebx), %eax;andl %edx, %eax;orl $, %eax": 1,
                "movl (%ebp), %ecx;shll $, %edi;orl %edi, %eax;movl %eax, (%ecx);jmp - <PsGetThreadTeb+>": 1,
                "jmp  <IoSetFileOrigin+>;movl %eax, %esi;movb $, %cl;calll *;jmp - <PsGetThreadTeb+>": 1,
                "movb %al, %cl;calll *;movl (%ebp), %eax;andl %esi, (%ebp);cmpl $, (%ebp)": 1,
                "addl $, %ecx;calll - <ExReleaseResourceLite>;movb $, %cl;calll *;andl %esi, (%ebp)": 1,
                "testb $, (%eax);je - <PsGetProcessSectionBaseAddress+>;movl $, -(%ebp);calll *;movl %eax, -(%ebp)": 1,
                "calll *;movl %eax, -(%ebp);movl %edx, -(%ebp);jmp - <PsGetProcessSectionBaseAddress+>;movl %eax, (%ebx)": 1,
                "movl %eax, (%esi);calll - <KeSetEvent>;jmp - <PsGetProcessSectionBaseAddress+>;testb $, %al;jne - <PsGetProcessSectionBaseAddress+>": 1,
                "testb $, %al;jne - <PsGetProcessSectionBaseAddress+>;movl (%ebp), %eax;movl $, (%eax);andl $-, (%edi)": 1,
                "movl (%esi), %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;jle  <IoSetFileOrigin+>;decl %esi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %esi;jle  <IoSetFileOrigin+>;decl %esi;shrl $, %esi": 1,
                "movl (%edi), %ecx;calll - <wcscmp+>;addl $, %edi;decl %esi;jne - <IoSetFileOrigin+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll ;jmp - <PsGetProcessSectionBaseAddress+>": 1,
                "movl %eax, (%ecx);jmp - <PsGetProcessSectionBaseAddress+>;movb %bl, %cl;calll *;xorl %edi, %edi": 1,
                "cmpl %edi, %eax;jl  <IoSetFileOrigin+>;calll *;movb %al, %bl;incl %edi": 1,
                "je - <PsIsThreadTerminating+>;calll *;jmp - <PsIsThreadTerminating+>;movb -(%ebp), %cl;calll *": 1,
                "calll *;jmp - <PsIsThreadTerminating+>;movb -(%ebp), %cl;calll *;jmp - <MmGrowKernelStack+>": 1,
                "jmp - <MmGrowKernelStack+>;calll *;movb %al, -(%ebp);jmp - <MmGrowKernelStack+>;movl $, -(%ebp)": 1,
                "movl , %esi;pushl %edi;movl , %edi;movl $, %ebx;movb -(%ebp), %cl": 1,
                "calll *%esi;cmpl $, -(%ebp);jne  <IoSetFileOrigin+>;movl , %eax;andl $, (%eax)": 1,
                "andl $, (%eax);movl , %ecx;addl $, %ecx;jmp  <IoSetFileOrigin+>;andl $, ": 2,
                "calll *%esi;xorl %eax, %eax;pushl %eax;pushl %eax;pushl -(%ebp)": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl %fs:, %eax;movl , %ecx;movl %eax, (%ecx);jmp  <IoSetFileOrigin+>": 1,
                "pushl $;pushl $;calll  <KeBugCheckEx>;int;jmp - <RtlNtStatusToDosErrorNoTeb+>": 1,
                "pushl $;calll  <KeBugCheckEx>;int;jmp - <RtlNtStatusToDosErrorNoTeb+>;cmpl $, %eax": 1,
                "movl %ecx, -(%ebp);movl %edi, %ebx;jmp - <RtlInsertElementGenericTableAvl+>;cmpl $, (%ebp);jmp  <IoSetFileOrigin+>": 1,
                "pushl %eax;pushl $;calll - <DbgPrint>;addl $, %esp;testb $, ": 1,
                "jo  <IoSetFileOrigin+>;subb (%eax), %ah;je  <IoSetFileOrigin+>;popal;je  <IoSetFileOrigin+>": 1,
                "pushl %ebp;andb %ah, (%ebx);jb  <IoSetFileOrigin+>;jne  <IoSetFileOrigin+>;je  <IoSetFileOrigin+>": 1,
                "imull $, (%esp), %ebp;andb %dh, (%ebx);outsl (%esi), %dx;jo  <IoSetFileOrigin+>;imull $, (%esi), %ebp": 1,
                "andb %ah, (%esi);insb %dx, %es:(%edi);insb %dx, %es:(%edi);jns  <IoSetFileOrigin+>;bound %gs:(%ebp), %esi": 1,
                "subb (%edx), %ch;subb (%edx), %ch;subb (%edx), %ch;subb (%edx), %ch;orb (%eax), %al": 4,
                "jne  <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;movl (%ebp), %ebx;decl (%ebx)": 1,
                "jmp  <IoSetFileOrigin+>;movl (%ebp), %ebx;decl (%ebx);jne  <IoSetFileOrigin+>;movl , %edi": 1,
                "incl %edx;cmpl , %edx;movl %edx, ;jbe  <IoSetFileOrigin+>;movl %edx, ": 1,
                "movl %edi, ;jbe  <IoSetFileOrigin+>;movl %edi, ;movl (%ebx), %ebx;cmpl %esi, %ebx": 1,
                "cmpl %esi, %ebx;movl %ebx, (%ebp);jne - <IoSetFileOrigin+>;movl $, %esi;jmp - <KeSaveFloatingPointState+>": 1,
                "pushl %eax;pushl %eax;pushl %eax;movl (%ebp), %eax;pushl $": 1,
                "calll *%ebx;incl (%esi);movb %al, -(%ebp);jne  <IoSetFileOrigin+>;leal (%esi), %eax": 1,
                "shrl %cl, %eax;movl , %ecx;leal -(%ecx), %edx;cmpl %edx, %eax;jbe  <IoSetFileOrigin+>": 1,
                "leal -(%ecx), %edx;cmpl %edx, %eax;jbe  <IoSetFileOrigin+>;leal -(%ecx), %eax;jmp  <IoSetFileOrigin+>": 1,
                "movl $, %eax;jmp - <RtlInsertElementGenericTableAvl+>;incl ;jmp - <IoSetFileOrigin+>;pushl %eax": 1,
                "movl (%ebp), %eax;movl -(%ebp), %ecx;movb $, (%eax);calll - <ExReleaseFastMutexUnsafe>;pushl $": 1,
                "decl %eax;movw %ax, (%esi);jmp - <CcScheduleReadAhead+>;movl %esi, %eax;subl , %eax": 1,
                "movl %eax, %ecx;calll - <wcscmp+>;jmp - <CcScheduleReadAhead+>;cmpw $, %dx;je  <IoSetFileOrigin+>": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %eax;jmp - <CcScheduleReadAhead+>;jmp - <CcScheduleReadAhead+>;movl -(%ebp), %eax": 1,
                "movl (%eax), %edi;movl -(%ebp), %eax;testl %eax, %eax;movl %edi, (%ebp);je  <IoSetFileOrigin+>": 1,
                "movl (%eax), %eax;movl , %edx;leal (%eax,%eax,), %eax;movl (%edx,%eax,), %eax;movl %eax, (%esi)": 1,
                "movl (%edx,%eax,), %eax;movl %eax, (%esi);leal (%ebx), %eax;movl -(%ebp), %edx;movl (%edx), %edx": 1,
                "cmpl %eax, %edx;movl %edi, -(%ebp);je  <IoSetFileOrigin+>;movl -(%ebp), %edi;cmpl %edi, (%edx)": 1,
                "shll $, %eax;addl %eax, (%ebx);subw %di, (%ecx);orl $-, %eax;subl %edi, %eax": 1,
                "addl %eax, -(%ebp);jmp - <CcScheduleReadAhead+>;movswl (%ebx), %ecx;movl %ecx, %eax;shrl $, %ecx": 1,
                "movw %ax, (%ebx);jmp - <CcScheduleReadAhead+>;jmp - <CcScheduleReadAhead+>;movb -(%ebp), %cl;calll *": 1,
                "jmp - <CcScheduleReadAhead+>;jmp - <CcScheduleReadAhead+>;movb -(%ebp), %cl;calll *;movl -(%ebp), %edi": 1,
                "testl %esi, %esi;movl %esi, %eax;je - <CcScheduleReadAhead+>;jmp - <IoSetFileOrigin+>;movl (%edi), %eax": 1,
                "decl %esi;shrl $, %esi;incl %esi;movl (%ebx), %eax;movl , %ecx": 1,
                "je - <CcScheduleReadAhead+>;jmp - <IoSetFileOrigin+>;jmp - <CcScheduleReadAhead+>;xorl %eax, %eax;incl %eax": 1,
                "incl %eax;pushl %eax;movl %eax, ;calll  <MmTrimAllSystemPagableMemory+>;calll *": 1,
                "movb (%ebp), %cl;movb %bl, ;calll *;movl %ebx, ;movl %esi, ": 1,
                "pushl %ebx;calll  <MmTrimAllSystemPagableMemory+>;pushl $;calll  <MmIsNonPagedSystemAddressValid+>;jmp - <KeInsertQueueApc+>": 1,
                "pushl %eax;calll - <KeQuerySystemTime>;calll *;movl , %esi;movl $, %ebx": 1,
                "cmpl %eax, %ecx;jne  <IoSetFileOrigin+>;movl (%esi), %ecx;cmpl -(%ebp), %ecx;jne  <IoSetFileOrigin+>": 1,
                "pushl -(%ebp);leal (%esi), %eax;movl %ecx, (%eax);movl %ebx, (%eax);movl %eax, (%ecx)": 1,
                "calll  <MmIsNonPagedSystemAddressValid+>;pushl -(%ebp);pushl %esi;calll  <MmIsNonPagedSystemAddressValid+>;calll *": 1,
                "movb %al, -(%ebp);jne  <IoSetFileOrigin+>;movl , %eax;movl %ebx, (%edi);movl %eax, (%edi)": 1,
                "movl %ebx, (%edi);movl %eax, (%edi);movl %edi, (%eax);movl %edi, ;jmp  <IoSetFileOrigin+>": 1,
                "movl %edi, (%eax);movl %edi, ;jmp  <IoSetFileOrigin+>;pushl $;pushl $": 1,
                "jmp  <IoSetFileOrigin+>;pushl $;pushl $;pushl %esi;calll - <KeSetEvent>": 1,
                "movl %eax, ;movl -(%ebp), %eax;movl %eax, ;calll *;xorl %esi, %esi": 1,
                "popl %ebx;jmp - <KeInsertQueueApc+>;addl $, %esi;movl %esi, -(%ebp);jmp - <MmCommitSessionMappedView+>": 1,
                "jmp - <MmCommitSessionMappedView+>;movb -(%ebp), %cl;calll *;xorl %esi, %esi;pushl %esi": 1,
                "cmpl $, %eax;je - <PoSetSystemState+>;jmp  <IoSetFileOrigin+>;cmpl , %eax;je - <MmCommitSessionMappedView+>": 1,
                "pushl $;calll  <KeBugCheckEx>;int;nop;nop": 2,
                "calll  <KeBugCheckEx>;int;nop;nop;addb %al, (%ebx)": 1,
                "shrl $, %eax;andl $, %eax;pushl %eax;pushl %ebx;pushl $": 1,
                "shrl $, %eax;leal (%eax,%eax,), %eax;leal (%edx,%eax,), %eax;pushl (%eax);movl , %edx": 1,
                "pushl $;calll  <KeBugCheckEx>;int;movl -(%ebp), %ecx;calll - <PsGetCurrentProcess+>": 1,
                "jmp - <IoGetBaseFileSystemDeviceObject+>;jmp - <IoGetBaseFileSystemDeviceObject+>;andl $, ;movl $, %ecx;calll - <ExReleaseResourceLite>": 1,
                "jmp  <IoSetFileOrigin+>;movl (%esi), %eax;shrl $, %eax;pushl $;andl %edi, %eax": 1,
                "jmp  <IoSetFileOrigin+>;calll - <PsGetCurrentProcess+>;testl %eax, %eax;je  <IoSetFileOrigin+>;movb %bl, %cl": 1,
                "je  <IoSetFileOrigin+>;movb %bl, %cl;calll *;jmp - <IoGetDriverObjectExtension+>;movl (%esi), %eax": 1,
                "andl $, %esi;andl $, %edi;shll $, %esi;orl %esi, %edi;addl , %edi": 1,
                "jmp - <CcCopyWrite+>;jmp - <RtlNtStatusToDosErrorNoTeb+>;movl -(%ebp), %edx;movl %edi, %ecx;calll - <_snwprintf+>": 1,
                "je - <PoSetSystemState+>;movb $, (%esi);movb $, %cl;calll *;jmp - <PoSetSystemState+>": 1,
                "movb $, %cl;calll *;jmp - <PoSetSystemState+>;testb $, %al;jne - <PoSetSystemState+>": 1,
                "jmp - <PoSetSystemState+>;testb $, %al;jne - <PoSetSystemState+>;orl $, -(%ebp);andl $-, %eax": 1,
                "orl $, -(%ebp);andl $-, %eax;movl %eax, (%esi);jmp - <PoSetSystemState+>;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %edi;jmp - <PoSetSystemState+>;xorl %eax, %eax;leal (%edx,%esi), %edi;movl %ecx, %esi": 1,
                "jmp - <PoSetSystemState+>;orb $, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movw (%ebx), %ax": 1,
                "jne  <IoSetFileOrigin+>;cmpl %edi, (%ebx);jb  <IoSetFileOrigin+>;decl ;decw (%ebx)": 1,
                "decl ;decw (%ebx);jmp - <PoSetSystemState+>;cmpw %di, %ax;je  <IoSetFileOrigin+>": 1,
                "movl %ebx, %eax;subl , %eax;cltd;pushl $;popl %ecx": 1,
                "subl , %eax;cltd;pushl $;popl %ecx;idivl %ecx": 2,
                "andl $, ;movl %edi, %ecx;calll - <ExReleaseResourceLite>;movb -(%ebp), %cl;movl , %edi": 1,
                "subl %ecx, %eax;cltd;pushl $;popl %esi;idivl %esi": 1,
                "cltd;pushl $;popl %esi;idivl %esi;movl %eax, %ebx": 1,
                "movl %ebx, %ecx;calll - <wcscmp+>;movl (%esi), %eax;shrl $, %eax;andl $, %eax": 1,
                "pushl $;pushl %esi;pushl $;pushl $;calll  <KeBugCheckEx>": 1,
                "calll  <KeBugCheckEx>;movl $, -(%ebp);jmp - <MmGrowKernelStack+>;pushl $;pushl $": 1,
                "jmp - <MmGrowKernelStack+>;leal (%eax), %esi;jmp - <KeInsertHeadQueue+>;leal (%esi), %eax;jmp - <PsReturnProcessPagedPoolQuota+>": 1,
                "pushl %esi;calll  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;pushl $;pushl (%esi)": 1,
                "movl (%eax), %edi;pushl $;pushl $;pushl %eax;shrl $, %esi": 1,
                "pushl $;pushl %edi;pushl (%ebp);pushl %esi;calll  <MmMapMemoryDumpMdl+>": 1,
                "xaddl %eax, (%ecx);calll *;subl %esi, %edi;addl %edi, ;movb %al, %cl": 1,
                "subl %esi, %edi;addl %edi, ;movb %al, %cl;calll *%ebx;jmp - <ExInitializeZone+>": 1,
                "jmp - <PoRequestPowerIrp+>;cmpl %esi, %ebx;jne - <PoRequestPowerIrp+>;movl %edi, (%ebp);jmp - <PoRequestPowerIrp+>": 1,
                "jmp - <PsGetJobUIRestrictionsClass+>;jmp - <_wcsupr+>;xorl %eax, %eax;jmp - <_wcsupr+>;movl $, %eax": 1,
                "jmp - <_wcsupr+>;movl , %edi;calll *%edi;movl , %eax;incl ": 1,
                "calll - <ExReleaseResourceLite>;movb (%ebp), %cl;calll *%edi;negl %esi;movl %esi, (%ebp)": 2,
                "incl ;jmp  <IoSetFileOrigin+>;incl ;movl , %eax;movl , %ecx": 1,
                "divl %edi;cmpl %ecx, %eax;ja  <IoSetFileOrigin+>;calll  <MmTrimAllSystemPagableMemory+>;jmp  <IoSetFileOrigin+>": 1,
                "xorl %eax, %eax;cmpl $, (%ebp);setne %al;incl %eax;testl %ebx, %ebx": 1,
                "testl %esi, %esi;je  <IoSetFileOrigin+>;leal (,%eax,), %eax;incl (%eax);movl , %eax": 1,
                "movl , %eax;cmpl $, %eax;jb  <IoSetFileOrigin+>;cmpl $, ;jl  <IoSetFileOrigin+>": 1,
                "cmpl %eax, %edi;sbbl %eax, %eax;andl $, %eax;addl %edx, %eax;addl %eax, %ecx": 1,
                "movl %ebx, -(%ebp);movb $, -(%ebp);calll  <MmMapMemoryDumpMdl+>;testl %eax, %eax;je  <IoSetFileOrigin+>": 1,
                "testl %eax, %eax;je  <IoSetFileOrigin+>;cmpl $, -(%ebp);je  <IoSetFileOrigin+>;testl %edi, %edi": 1,
                "calll *;jmp - <PsGetCurrentProcess+>;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%edi);jmp - <PsGetCurrentProcess+>": 1,
                "jmp - <PsGetCurrentProcess+>;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%edi);jmp - <PsGetCurrentProcess+>;movl , %eax": 1,
                "xorl %edx, %edx;divl %ecx;imull $-, %eax, %eax;addl %eax, %esi;pushl %esi": 1,
                "jmp - <PsGetCurrentProcess+>;calll  <MmTrimAllSystemPagableMemory+>;jmp  <IoSetFileOrigin+>;calll  <MmTrimAllSystemPagableMemory+>;incl ": 1,
                "xorl %eax, %eax;jmp - <PsGetCurrentProcess+>;addl $, %ecx;cmpl %eax, %ecx;jb - <PsGetCurrentProcess+>": 1,
                "jmp - <PsGetCurrentProcess+>;testl %ebx, %ebx;jne - <KeFlushEntireTb+>;jmp  <IoSetFileOrigin+>;cmpl , %esi": 1,
                "incl ;jmp - <IoSetFileOrigin+>;movl %edx, (%eax);jmp - <KeIoSetAccessProcess+>;orl $, %ecx": 1,
                "pushl $;pushl (%ebp);pushl %ecx;pushl (%ebp);pushl $": 1,
                "pushl $;jmp  <IoSetFileOrigin+>;movl (%ebp), %ecx;calll - <KeiEoiHelper+>;cmpb $, %al": 2,
                "calll - <ExReleaseResourceLite>;movb -(%ebp), %cl;calll *;movl $, %eax;jmp - <KeSetKernelStackSwapEnable+>": 1,
                "pushl (%ebp);pushl %ebx;jmp - <IoSetFileOrigin+>;movl %fs:, %eax;testb $, (%eax)": 1,
                "movl %fs:, %eax;testb $, (%eax);jne - <PsReturnProcessNonPagedPoolQuota+>;pushl $;pushl $": 1,
                "cmpb $, %al;je - <IoSetFileOrigin+>;pushl $;pushl (%ebp);pushl (%ebp)": 1,
                "je - <IoSetFileOrigin+>;pushl $;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "andl $, (%ebx);jmp - <KeSetKernelStackSwapEnable+>;testb $, %cl;jne  <IoSetFileOrigin+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp - <KeSetKernelStackSwapEnable+>;calll *;movb %al, %cl;calll *": 1,
                "jmp - <KeSetKernelStackSwapEnable+>;movl $, -(%ebp);jmp - <KeSetKernelStackSwapEnable+>;xorl %eax, %eax;incl %eax": 1,
                "shll $, %eax;andl $, %edx;orl %edx, %eax;testl %ecx, %ecx;movl %eax, (%esi)": 1,
                "jmp - <KeSetKernelStackSwapEnable+>;pushl ;pushl %ebx;pushl (%ebp);pushl %esi": 1,
                "pushl $;pushl $;pushl $;calll - <KeDelayExecutionThread>;jmp - <KeSetKernelStackSwapEnable+>": 1,
                "leal -(%ebx), %eax;movl (%eax), %ebx;pushl $;pushl %eax;calll  <ExFreePoolWithTag>": 1,
                "leal (%esi,%edi), %edx;leal -(%edi), %eax;leal -(%edx), %esi;shll $, %ecx;notl %eax": 1,
                "calll  <KeBugCheckEx>;movl %esi, %eax;subl , %eax;pushl $;popl %ecx": 1,
                "popl %ecx;cltd;idivl %ecx;pushl %eax;pushl ": 1,
                "testb $, (%eax);movl %eax, -(%ebp);je  <IoSetFileOrigin+>;pushl $;popl %eax": 1,
                "pushl $;popl %eax;cmpl %eax, ;jae - <IoAllocateIrp+>;movl %eax, -(%ebp)": 1,
                "movl (%eax), %eax;andl $, -(%ebp);movl , %esi;xorl %ebx, %ebx;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);incl %ebx;movl -(%ebp), %eax;andl $, (%eax);movb %bl, %cl": 1,
                "calll *%esi;movl %ebx, -(%ebp);pushl $;pushl $;pushl $": 1,
                "jne  <IoSetFileOrigin+>;movl , %eax;testl %eax, %eax;jne  <IoSetFileOrigin+>;cmpb %al, ": 1,
                "shrl $, %eax;subl , %eax;pushl $;pushl %eax;pushl ": 1,
                "jmp  <IoSetFileOrigin+>;cmpl $, -(%ebp);je  <IoSetFileOrigin+>;movb %bl, %cl;calll *": 1,
                "shrl $, %edx;cmpl %edx, %ecx;movl , %edx;pushl $;jb  <IoSetFileOrigin+>": 1,
                "andb %al, (%eax);addb %ah, ;andb %ah, ;orb (%eax), %al;int": 1,
                "xorl (%esi), %ebx;movl %ecx, (%esi);andl $, %ebx;xorl %ebx, (%esi);jmp - <wcscmp+>": 1,
                "movl -(%ebp), %edx;orb $, (%esi);incl ;pushl $;movl $, %edi": 1,
                "calll - <KeSetEvent>;jmp - <wcscmp+>;pushl %eax;pushl ;pushl %edi": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;jmp - <InbvCheckDisplayOwnership+>;movl %edx, (%ecx);jmp - <InbvCheckDisplayOwnership+>;movl , %eax": 1,
                "movw $, %dx;movl %esi, %ecx;calll  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx;jmp - <IoAllocateIrp+>": 1,
                "calll  <MmIsNonPagedSystemAddressValid+>;jmp - <IoAllocateIrp+>;testb $, (%eax);je - <wcscmp+>;movw $, %dx": 1,
                "movl %esi, %ecx;calll  <MmTrimAllSystemPagableMemory+>;jmp - <wcscmp+>;andl $, (%esi);andl $, %eax": 1,
                "andl $, %eax;movl %eax, (%esi);jmp - <wcscmp+>;orl $, %eax;movl %edi, %edx": 1,
                "popl %esi;jmp - <wcscmp+>;movl , %eax;andl $, (%eax);jmp - <wcscmp+>": 1,
                "pushl $;pushl $;calll  <KeBugCheckEx>;incl ;pushl %ecx": 1,
                "andl $, %ecx;addl %ecx, %eax;jmp - <KeSaveFloatingPointState+>;shrl $, %eax;andl $, %eax": 1,
                "cmpl $, %eax;je - <wcscmp+>;incl ;pushl %ebx;pushl %ebx": 1,
                "incl ;pushl %ebx;pushl %ebx;calll - <KeFlushEntireTb>;jmp - <wcscmp+>": 1,
                "jmp - <wcscmp+>;jmp - <wcscmp+>;xorl %eax, %eax;retl;movl , %eax": 1,
                "jae  <IoSetFileOrigin+>;cmpl %edx, ;jbe  <IoSetFileOrigin+>;movl %eax, %ecx;negl %ecx": 1,
                "subl %eax, %edx;negl %ecx;shrl $, %edx;addl %edx, %ecx;movl %ecx, ": 1,
                "je  <IoSetFileOrigin+>;shrl $, %eax;pushl $;andl %edi, %eax;pushl %ecx": 1,
                "jmp - <PsChargeProcessNonPagedPoolQuota+>;cmpl %ebx, %ecx;je  <IoSetFileOrigin+>;pushl ;pushl %ebx": 1,
                "pushl (%ebp);movl %ebx, -(%ebp);pushl -(%ebp);calll - <PsIsThreadTerminating+>;cmpl %ebx, -(%ebp)": 1,
                "calll - <PsIsThreadTerminating+>;movl %eax, %edi;cmpl $, (%ebp);movl , %eax;movl (%ebp), %ecx": 1,
                "testl %eax, %eax;je - <PsChargeProcessNonPagedPoolQuota+>;movl (%ebp), %esi;xorl %edi, %edi;shrl $, %esi": 1,
                "movl (%ebp), %esi;xorl %edi, %edi;shrl $, %esi;incl %edi;andl $, %esi": 1,
                "jmp - <PsChargeProcessNonPagedPoolQuota+>;movl %edi, %eax;jmp - <PsChargeProcessNonPagedPoolQuota+>;cmpl $, %eax;je - <_strnicmp+>": 1,
                "movl %esi, -(%ebp);andl $, -(%ebp);andl $, -(%ebp);xorl %ecx, %ecx;andl %ecx, -(%ebp)": 1,
                "andl $, -(%ebp);andl $, -(%ebp);xorl %ecx, %ecx;andl %ecx, -(%ebp);jmp  <IoSetFileOrigin+>": 1,
                "shrl $, %ecx;andl $, %ecx;andl $, -(%ebp);movl %edx, -(%ebp);jmp - <PsGetJobUIRestrictionsClass+>": 1,
                "cmpl -(%ebp), %edx;jb  <IoSetFileOrigin+>;movl -(%ebp), %edx;movl (%edx), %eax;testl %eax, %eax": 1,
                "jmp - <PsGetProcessJob+>;movl %ecx, %eax;jmp - <mbtowc+>;movl (%esi), %eax;testb $, %al": 1,
                "movl (%esi), %eax;testb $, %al;je  <IoSetFileOrigin+>;testb $, %ah;jne  <IoSetFileOrigin+>": 1,
                "je  <IoSetFileOrigin+>;testb $, %ah;jne  <IoSetFileOrigin+>;andl $, %eax;decl (%ebp)": 1,
                "shrl $, %edx;cmpl %eax, %edx;jne  <IoSetFileOrigin+>;leal (%eax), %edx;cmpl $-, %edx": 1,
                "calll - <FsRtlInitializeFileLock+>;jmp - <ExLocalTimeToSystemTime+>;calll - <PsReturnProcessNonPagedPoolQuota+>;testl %eax, %eax;jge  <IoSetFileOrigin+>": 1,
                "jge  <IoSetFileOrigin+>;pushl %edi;pushl (%esi);pushl (%ebp);pushl $": 1,
                "calll  <KeBugCheckEx>;movl (%ebp), %ecx;jmp - <PsGetProcessJob+>;pushl (%ebp);pushl %edi": 1,
                "movl (%ebp), %ecx;jmp - <PsGetProcessJob+>;pushl (%ebp);pushl %edi;pushl %ecx": 1,
                "jmp - <IoAllocateIrp+>;jmp - <PsReturnProcessNonPagedPoolQuota+>;movl $, %eax;jmp - <InbvNotifyDisplayOwnershipLost+>;movl %eax, %edx": 1,
                "jae  <IoSetFileOrigin+>;movl (%ebp), %ebx;subl %eax, %ebx;cmpl %ebx, (%ebp);jae  <IoSetFileOrigin+>": 1,
                "jae  <IoSetFileOrigin+>;movl (%ebp), %eax;decl %edi;notl %edi;andl %ecx, %edi": 1,
                "andl %ecx, %edi;movl %edi, (%eax);jmp - <InbvNotifyDisplayOwnershipLost+>;movl %edx, %ecx;jmp  <IoSetFileOrigin+>": 1,
                "jmp  <IoSetFileOrigin+>;movl (%eax), %ecx;cmpl %esi, %ecx;jae  <IoSetFileOrigin+>;movl (%edx), %ebx": 1,
                "cmpl %ebx, (%ebp);movl %eax, (%ebp);ja  <IoSetFileOrigin+>;cmpl %ecx, %esi;jbe  <IoSetFileOrigin+>": 1,
                "movl (%edx), %eax;cmpl (%ebp), %eax;ja  <IoSetFileOrigin+>;movl (%ebp), %ecx;movl %ecx, %edx": 1,
                "movl (%ebp), %ecx;movl %ecx, %edx;calll  <NtSetEvent+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl %ecx, %edx;calll  <NtSetEvent+>;testl %eax, %eax;movl %eax, (%ebp);jne - <IoSetFileOrigin+>": 1,
                "cmpl $, (%ebp);je  <IoSetFileOrigin+>;testb $, %cl;jne  <IoSetFileOrigin+>;testb $, %ch": 1,
                "movl (%ebp), %esi;jmp - <MmDisableModifiedWriteOfSection+>;addl %eax, %esi;movl %esi, -(%ebp);pushl $": 1,
                "pushl %ebx;calll  <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;jne - <FsRtlRemoveLargeMcbEntry+>;xorl %eax, %eax": 1,
                "cmpl $, %eax;jne - <FsRtlRemoveLargeMcbEntry+>;xorl %eax, %eax;jmp - <FsRtlRemoveLargeMcbEntry+>;orl $, %eax": 1,
                "testb $-, (%eax);je - <PoStartNextPowerIrp+>;movl (%esi), %eax;movl %eax, -(%ebp);pushl $": 1,
                "je - <PoStartNextPowerIrp+>;movl (%esi), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "jmp - <PoStartNextPowerIrp+>;movl , %ecx;movl (%ecx), %edx;movl (%ebp), %eax;addl $, %eax": 1,
                "testl %esi, %esi;je  <IoSetFileOrigin+>;movl (%esi), %edi;movl -(%edi), %eax;subl $, %edi": 1,
                "testl %esi, %esi;je  <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;jmp  <IoSetFileOrigin+>;movl (%ebp), %edi": 1,
                "movl %eax, %ebx;xorl %eax, %eax;cmpl %eax, %ebx;je  <IoSetFileOrigin+>;movl %eax, ": 1,
                "movl (%esi), %eax;movl (%eax), %eax;movl $, %ecx;testl %ecx, (%eax);jne  <IoSetFileOrigin+>": 1,
                "movl (%ebx), %ebx;movl %eax, (%ebx);movl %ebx, (%eax);movl (%esi), %eax;movl (%eax), %eax": 1,
                "cmpl -(%ebp), %eax;jne - <InbvNotifyDisplayOwnershipLost+>;xorl %ebx, %ebx;andl %ebx, (%ebp);jmp - <PoStartNextPowerIrp+>": 1,
                "movl %edx, (%ecx);movl %eax, (%ebp);movl (%eax), %eax;movl (%eax), %eax;orb $, (%eax)": 1,
                "xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax;pushl (%ebp)": 6,
                "calll  <KeBugCheckEx>;orl $, %ecx;jmp - <MmAllocateContiguousMemory+>;orl $, %ecx;movl %ecx, (%eax)": 1,
                "jmp - <MmAllocateContiguousMemory+>;orl $, %ecx;movl %ecx, (%eax);movl $, (%esi);movl , %ecx": 1,
                "pushl (%ebp);calll  <PoCancelDeviceNotify+>;movl (%esi), %eax;movl (%esi), %ecx;movl (%ebx), %ebx": 1,
                "movl -(%ebp), %eax;addl $, %eax;cmpl %eax, %ebx;jne - <IoSetFileOrigin+>;movl -(%ebp), %edi": 2,
                "movl %ecx, (%edx);pushl $;movl %edx, (%ecx);movl $, %edi;pushl %eax": 1,
                "movl -(%ebp), %edi;andl $, (%edi);andl $, (%edi);jmp - <IoReportTargetDeviceChangeAsynchronous+>;movl $, %ecx": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl %ebx, (%ebp);andl $, (%ebp);cmpl $, (%ebp)": 1,
                "jns  <IoSetFileOrigin+>;pushl %ebx;pushl %eax;pushl (%ebp);calll  <PoCancelDeviceNotify+>": 1,
                "movb -(%ebp), %dl;movl $, %ecx;calll *;jmp - <InbvNotifyDisplayOwnershipLost+>;cmpb %bl, ": 1,
                "pushl $;calll  <KeBugCheckEx>;int;leal (%esi), %edi;cmpl %edi, (%edi)": 1,
                "calll  <KeBugCheckEx>;int;leal (%esi), %edi;cmpl %edi, (%edi);jne  <IoSetFileOrigin+>": 1,
                "movl %edi, (%edi);movl %edi, (%edi);jmp - <PoRegisterDeviceForIdleDetection+>;jmp - <PoRegisterDeviceForIdleDetection+>;testb $-, %bh": 1,
                "testb $-, %bh;je  <IoSetFileOrigin+>;movzbl %bh, %eax;movsbl (%eax), %ecx;addl $, %ecx": 1,
                "movzbl %bh, %eax;movsbl (%eax), %ecx;addl $, %ecx;jmp - <RtlNumberOfClearBits+>;testl $, %ebx": 1,
                "je - <PoSetSystemState+>;pushl $;popl %eax;movl $, %ecx;lock": 1,
                "pushl $;calll - <RtlNumberOfClearBits+>;movb %bl, %cl;popl %ebx;jmpl *": 1,
                "calll - <RtlNumberOfClearBits+>;movb %bl, %cl;popl %ebx;jmpl *;movb %bl, (%edi)": 1,
                "movl %eax, (%ecx);jmp - <KeIoSetAccessProcess+>;orl $-, (%esi);jmp - <KeIoSetAccessProcess+>;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);jmp - <KeIoSetAccessProcess+>;movb %bl, %al;decb %al;movb %al, -(%esi)": 1,
                "movl (%edi), %eax;movl %eax, (%esi);movl %edx, (%esi);jmp - <FsRtlResetLargeMcb+>;orl $-, (%eax)": 1,
                "movl $, %ecx;addl $, %eax;lock;orl %ecx, (%eax);jmp - <KeIoSetAccessProcess+>": 1,
                "lock;orl %ecx, (%eax);jmp - <KeIoSetAccessProcess+>;movl %ebx, (%ebp);jmp - <KeIoSetAccessProcess+>": 1,
                "jmp - <IoEnumerateDeviceObjectList+>;movl , %eax;testl %eax, %eax;je  <IoSetFileOrigin+>;pushl %eax": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;pushl $": 3,
                "movzbl (%eax), %eax;subl %ebx, %eax;je  <IoSetFileOrigin+>;decl %eax;je  <IoSetFileOrigin+>": 1,
                "incl %eax;jmp  <IoSetFileOrigin+>;movl $, %ecx;cmpl %ecx, %eax;jbe  <IoSetFileOrigin+>": 1,
                "movl %ecx, (%esi);jmp  <IoSetFileOrigin+>;movzbl (%esi), %ebx;pushl $;popl %eax": 1,
                "je  <IoSetFileOrigin+>;movzbl (%esi), %ebx;jmp  <IoSetFileOrigin+>;testb $, %dl;je  <IoSetFileOrigin+>": 1,
                "je  <IoSetFileOrigin+>;xorl %ebx, %ebx;movzbl (%esi), %ecx;cmpl %ecx, %ebx;jae  <IoSetFileOrigin+>": 1,
                "movzbl (%esi), %ecx;cmpl %ecx, %ebx;jne  <IoSetFileOrigin+>;testb $, %dl;je - <InbvNotifyDisplayOwnershipLost+>": 1,
                "movl %ebx, -(%ebp);subl (%esi), %ebx;cmpl , %ebx;movl %ebx, -(%ebp);jb  <IoSetFileOrigin+>": 1,
                "pushl %esi;calll  <PoUnregisterSystemState+>;movl -(%ebp), %ecx;movl %edi, (%ebp);shll $, %edi": 1,
                "cmpb (%ecx), %al;jb - <IoSetFileOrigin+>;movzbl (%esi), %eax;cmpl %eax, (%ebp);popl %edi": 1,
                "movzbl %al, %ebx;movl %ebx, %edi;pushl $;shll $, %edi;pushl %edi": 1,
                "movl %ebx, %eax;movb -(%ecx), %dl;movb %dl, -(%edi);testb $, (%ecx);je  <IoSetFileOrigin+>": 1,
                "jb  <IoSetFileOrigin+>;movb %al, -(%ebp);cmpb -(%ebp), %al;jbe  <IoSetFileOrigin+>;movzbl %al, %edx": 1,
                "calll  <ExFreePoolWithTag>;jmp  <IoSetFileOrigin+>;movb $, -(%ebp);andl $, (%ebx);leal (%edi), %ebx": 1,
                "jne - <IoSetFileOrigin+>;movb %al, ;movb $, ;movb $, ;jmp - <KeIoSetAccessProcess+>": 1,
                "nop;nop;movl -(%ebp), %esp;jmp - <PoRequestPowerIrp+>;jmp - <PoRequestPowerIrp+>": 1,
                "calll - <PsGetJobUIRestrictionsClass+>;movl %eax, %esi;testl %esi, %esi;je - <PoRequestPowerIrp+>;leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl , %edi;movl $, %esi": 1,
                "andl $, -(%ebp);movl , %ecx;movb %al, %dl;movl $, -(%ebp);movl $, %ebx": 1,
                "jae  <IoSetFileOrigin+>;movl %eax, -(%ebp);movl (%ecx), %ecx;cmpl %ebx, %ecx;jne - <IoSetFileOrigin+>": 1,
                "calll - <IoCancelIrp>;movl (%edi), %edi;cmpl %ebx, %edi;jne - <IoSetFileOrigin+>;movb -(%ebp), %dl": 1,
                "movl %ds:, %eax;movl %eax, %esi;testb $, (%esi);jne  <IoSetFileOrigin+>;shll %ebx": 1,
                "calll  <PoUnregisterSystemState+>;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "pushl %eax;pushl %ebx;calll - <ExLocalTimeToSystemTime+>;incl %ebx;addl $, %edi": 1,
                "addl $, %edi;cmpl $, %ebx;jle - <IoSetFileOrigin+>;movb (%ebp), %cl;calll *": 1,
                "calll  <ExFreePoolWithTag>;popl %edi;popl %ebx;jmp - <_wcsicmp+>;movb $, (%ebp)": 1,
                "jmp - <PsChargeProcessPoolQuota+>;movl %eax, -(%ebp);jmp - <PsChargeProcessPoolQuota+>;movl %ebx, -(%ebp);jmp - <RtlSetBit+>": 1,
                "leal (%eax,%edx), %edi;movl %ebx, -(%ebp);cmpl %eax, %edi;jmp - <PsGetThreadTeb+>;andl $, -(%ebp)": 1,
                "testb $, %al;je  <IoSetFileOrigin+>;xorl %eax, %eax;pushl $;popl %ecx": 1,
                "andb $, %al;movzbw %al, %ax;movw %ax, (%ecx);movl (%esi), %eax;movl (%eax), %eax": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %eax;movl %ebx, (%esi);orb $, (%eax)": 1,
                "movl %ebx, (%esi);orb $, (%eax);movb %bl, (%ebp);popl %edi;jmp - <PoRegisterDeviceForIdleDetection+>": 1,
                "movl -(%ebp), %ecx;cmpl (%ebp), %ecx;jb - <RtlFindClearRuns+>;jmp  <IoSetFileOrigin+>;jmp - <RtlFindClearRuns+>": 1,
                "movl %edx, %esi;je  <IoSetFileOrigin+>;andl $, %esi;xorl %ecx, %ecx;orl %esi, %ecx": 1,
                "orl %edx, %ecx;jne  <IoSetFileOrigin+>;orb $-, %al;jmp - <RtlFindLeastSignificantBit+>;movb $, %bl": 1,
                "calll  <RtlLookupElementGenericTable+>;movl %eax, (%esi);jmp - <RtlDeleteElementGenericTableAvl+>;xorl %edx, %edx;jmp - <VerSetConditionMask+>": 1,
                "andl %edi, %ecx;xorl %eax, %eax;orl %ecx, %eax;jne  <IoSetFileOrigin+>;movl (%ebp), %esi": 4,
                "shrdl $, %eax, %esi;shrl $, %eax;andl $, %esi;jmp  <IoSetFileOrigin+>;movl $, %eax": 1,
                "andl $, %esi;jmp  <IoSetFileOrigin+>;movl $, %eax;jmp - <RtlVerifyVersionInfo+>;pushl $": 1,
                "pushl (%eax);pushl %esi;calll  <RtlEnumerateGenericTableLikeADirectory+>;testb %al, %al;je - <RtlVerifyVersionInfo+>": 2,
                "cmpl $, %esi;jne  <IoSetFileOrigin+>;movl %ebx, %ecx;andl %edi, %ecx;xorl %eax, %eax": 3,
                "jne  <IoSetFileOrigin+>;movl (%ebp), %esi;andl $, %esi;jmp  <IoSetFileOrigin+>;pushl $": 1,
                "movl (%ebp), %esi;movl %esi, %eax;movl %ebx, %ecx;shrdl $, %ecx, %eax;shrl $, %ecx": 1,
                "movl %ebx, %ecx;shrdl $, %ecx, %eax;shrl $, %ecx;andl $, %eax;jmp  <IoSetFileOrigin+>": 1,
                "andl %edi, %ecx;xorl %eax, %eax;orl %ecx, %eax;jne  <IoSetFileOrigin+>;andl $, %esi": 1,
                "andl $, %esi;movl %esi, %eax;jmp  <IoSetFileOrigin+>;pushl $;pushl %ebx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;movzbl -(%ebp), %ecx;pushl %ecx;movl -(%ebp), %ecx": 1,
                "shll $, %ecx;subl %eax, %ecx;movzwl %si, %eax;leal (%eax,%ecx), %eax;cmpl -(%ebp), %eax": 1,
                "movl %edi, (%eax);movl $, %eax;jmp - <RtlIpvStringToAddressW+>;movl -(%ebp), %esi;movl $, %eax": 1,
                "movl $, %eax;jmp - <RtlDeleteNoSplay+>;movzbl (%edi), %eax;movl %eax, (%ebp);movswl (,%eax,), %eax": 1,
                "lock;jne - <RtlDeleteElementGenericTableAvl+>;jmp - <RtlDeleteElementGenericTableAvl+>;testl %ecx, %ecx;je - <RtlDeleteElementGenericTableAvl+>": 1,
                "jne - <RtlDeleteElementGenericTableAvl+>;jmp - <RtlDeleteElementGenericTableAvl+>;testl %ecx, %ecx;je - <RtlDeleteElementGenericTableAvl+>;leal -(%ecx), %esi": 1,
                "pushl %ebx;pushl $;pushl (%ebp);pushl %esi;calll  <RtlTraceDatabaseAdd+>": 1,
                "calll  <RtlTraceDatabaseAdd+>;jmp - <RtlDeleteElementGenericTableAvl+>;andl $-, (%esi);andl $, -(%ebp);jmp - <RtlDeleteElementGenericTableAvl+>": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);calll - <RtlRaiseException>;jmp - <RtlUnwind+>;movl -(%ebp), %ebx": 1,
                "jb  <IoSetFileOrigin+>;movl %ds:, %eax;cmpl $, (%eax);movl (%eax), %ecx;je  <IoSetFileOrigin+>": 1,
                "movl %ds:, %eax;cmpl $, (%eax);movl (%eax), %ecx;je  <IoSetFileOrigin+>;cmpl %ecx, %edi": 1,
                "ja  <IoSetFileOrigin+>;leal -(%ecx), %eax;cmpl %eax, %ebx;jb  <IoSetFileOrigin+>;movl %ecx, -(%ebp)": 1,
                "jmp - <RtlUnwind+>;cmpl $-, (%ebp);popl %ebx;leal -(%ebp), %eax;pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %eax;jne  <IoSetFileOrigin+>;calll - <ZwConnectPort+>": 1,
                "cmpb %bl, (%ebp);je - <IoQueueWorkItem+>;movb $, (%ebp);jmp - <IoQueueWorkItem+>;pushl %edi": 1,
                "pushl %edi;movl (%ebp), %edi;cmpl %ebx, %edi;jne  <IoSetFileOrigin+>;leal -(%ebp), %edi": 1,
                "incl %ebx;pushl %ebx;pushl %ebx;pushl ;pushl ": 1,
                "pushl ;pushl ;pushl $;pushl %edi;calll  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "leal (,%eax,), %eax;movl %eax, -(%ebp);pushl $;addl $, %eax;pushl %eax": 1,
                "movl %esi, ;jmp  <IoSetFileOrigin+>;calll  <SeTokenIsAdmin+>;testl %esi, %esi;je  <IoSetFileOrigin+>": 1,
                "leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <IoSetFileOrigin+>;movb $, %cl;movb $, (%eax)": 2,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <IoSetFileOrigin+>;leal (%eax), %ecx": 1,
                "calll *%esi;movl %ebx, %eax;popl %ebx;jmp - <RtlDelete+>;pushl %esi": 1,
                "movl %ebx, %eax;popl %ebx;jmp - <RtlDelete+>;pushl %esi;pushl -(%ebp)": 1,
                "jmp - <RtlDelete+>;pushl %esi;pushl -(%ebp);calll  <ExFreePoolWithTag>;jmp - <RtlFindLeastSignificantBit+>": 1,
                "pushl %esi;pushl -(%ebp);calll  <ExFreePoolWithTag>;jmp - <RtlFindLeastSignificantBit+>;movl (%ebp), %eax": 1,
                "calll  <ExFreePoolWithTag>;jmp - <RtlFindLeastSignificantBit+>;movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx)": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);jmp - <RtlDelete+>;movl $, (%ebp);movl (%ebp), %eax": 1,
                "popl %edx;xorl %ecx, %ecx;calll ;jmp - <VfIsVerificationEnabled+>;pushl $": 1,
                "je - <VfIsVerificationEnabled+>;movl (%ebp), %ecx;calll ;jmp - <VfIsVerificationEnabled+>;pushl (%ebp)": 1,
                "jmp - <IoWMIWriteEvent+>;xorb %dl, %dl;movl %esi, %ecx;calll  <WmiGetClock+>;jmp - <VfIsVerificationEnabled+>": 1,
                "jmp - <ExReleaseResourceLite+>;pushl $;jmp  <IoSetFileOrigin+>;jmp - <ExReleaseResourceLite+>;pushl $": 1,
                "incl %esi;decl %edi;movl %esi, (%edx);movl %esi, (%eax);movw %si, (%eax)": 1,
                "decl %edi;movl %esi, (%edx);movl %esi, (%eax);movw %si, (%eax);movw %di, (%eax)": 1,
                "jne  <IoSetFileOrigin+>;movzbl (%edx), %ecx;movl %ecx, (%ebp);movl (%eax), %ecx;movl (%ecx), %edi": 1,
                "movl (%ecx), %edi;cmpl %edi, (%ebp);jae  <IoSetFileOrigin+>;movl (%ebp), %ebx;leal (%ecx,%ebx,), %ebx": 1,
                "movl (%ebp), %eax;popl %edi;movl %eax, (%ecx);popl %ebx;jmp - <ExSetResourceOwnerPointer+>": 1,
                "addl $, %ecx;cmpl %edx, %ecx;jb - <IoSetFileOrigin+>;pushl $;pushl %ebx": 1,
                "jge - <KeAreApcsDisabled+>;movb %dl, %cl;subb %al, %cl;addb %cl, (%ebx);movl %ebx, %ecx": 1,
                "jmp - <KeAreApcsDisabled+>;movl %edi, -(%ebp);jmp - <KeAreApcsDisabled+>;movl %ebx, %ecx;calll - <KeAreApcsDisabled+>": 1,
                "calll - <KeDelayExecutionThread>;jmp - <FsRtlGetNextLargeMcbEntry+>;pushl %ebx;pushl %esi;calll  <ExFreePoolWithTag>": 1,
                "pushl %ebx;pushl %esi;calll  <ExFreePoolWithTag>;jmp - <FsRtlGetNextLargeMcbEntry+>;pushl $": 1,
                "jmp - <FsRtlGetNextLargeMcbEntry+>;jmp - <ExAcquireSharedStarveExclusive+>;jmp - <FsRtlResetLargeMcb+>;cmpl %ebx, (%esi);je  <IoSetFileOrigin+>": 1,
                "movl (%esi), %edx;movl %esi, %ecx;calll - <PsGetCurrentProcess+>;cli;leal (%ebp), %eax": 1,
                "xorl %ebx, %ebx;incl %ebx;movl %edi, (%eax);movl %ebx, (%eax);jmp - <ExAcquireSharedWaitForExclusive+>": 1,
                "jmp - <ExIsProcessorFeaturePresent+>;movl , %ecx;calll *;movl , %eax;movb (%eax), %al": 1,
                "movl , %eax;movb (%eax), %al;jmp - <ExIsProcessorFeaturePresent+>;jmp - <ExIsProcessorFeaturePresent+>;movl , %ecx": 1,
                "jmp - <PsGetThreadProcess+>;movl %esi, %edi;jmp - <PsGetThreadProcess+>;decl %edi;jmp - <PsGetThreadProcess+>": 1,
                "jmp - <KeInitializeMutant+>;movl (%edi), %ecx;movl %ecx, (%esi);movl (%edi), %ecx;movl %ecx, (%esi)": 1,
                "movl %ecx, (%esi);testb $, (%edi);je  <IoSetFileOrigin+>;movl %eax, (%esi);jmp  <IoSetFileOrigin+>": 1,
                "movl , %eax;movl $, %ecx;jmp  <IoSetFileOrigin+>;movw -(%eax), %dx;movw %dx, (%esi)": 1,
                "movl (%edx), %edx;addl $, %esi;cmpl %eax, %edx;jne - <IoSetFileOrigin+>;movb (%ebp), %cl": 1,
                "movw -(%edx), %ax;movw %ax, (%esi);movl -(%edx), %eax;movl %eax, (%esi);movl -(%edx), %eax": 1,
                "movl -(%edx), %eax;movl %eax, (%esi);movl -(%edx), %eax;movl %eax, (%esi);movl -(%edx), %eax": 2,
                "pushl $;calll - <KeSetKernelStackSwapEnable>;jmp - <ExQueueWorkItem+>;movl %eax, %ecx;shrl $, %ecx": 1,
                "shrl $, %ecx;cmpl -(%ebp), %ecx;ja - <ExQueueWorkItem+>;pushl $;calll - <KeSetKernelStackSwapEnable>": 1,
                "movb %bl, (%eax);movb (%ecx), %al;movb %al, (%ecx);jmp - <KeInsertQueueApc+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);movb %bl, (%esi);calll - <KeCancelTimer>": 1,
                "movl %ecx, (%edx);movl %edx, (%ecx);movl %ebx, (%eax);jmp - <KeInsertQueueApc+>;movl %esi, %ecx": 1,
                "orl $-, -(%ebp);jmp - <KeInsertQueueApc+>;nop;nop;nop": 1,
                "incl %ebx;pushl %eax;movl %esi, %ecx;movl %ebx, -(%ebp);calll - <ExfInterlockedCompareExchange>": 1,
                "jg - <_strupr+>;subb $, %cl;movb %cl, (%edx);jmp - <_strupr+>;leal -(%ebp), %eax": 1,
                "xorl %eax, %eax;jmp - <_strupr+>;pushl $;pushl %eax;calll  <wcstombs+>": 1,
                "jmp - <_strupr+>;movl %ecx, (%ebp);jmp - <_strupr+>;cmpb $, %bl;jl  <IoSetFileOrigin+>": 1,
                "jne  <IoSetFileOrigin+>;cmpl %ecx, %esi;jbe - <_strupr+>;orl $, (%ebp);jmp - <_strupr+>": 1,
                "pushl %ecx;pushl %eax;calll - <KeSetIdealProcessorThread+>;popl %ecx;popl %ecx": 1,
                "jmp - <wcsncmp+>;orl %eax, (%esi);retl;movl (%ebp), %eax;addl %eax, (%esi)": 1,
                "cmpw $, %ax;jb  <IoSetFileOrigin+>;addl $, %ecx;cmpw %cx, %ax;jb - <RtlInsertElementGenericTableAvl+>": 2,
                "movl (%ebp), %ebx;jmp - <RtlNumberGenericTableElementsAvl+>;pushl %eax;pushl %edi;calll - <wcscpy>": 1,
                "movl , %eax;testl %eax, %eax;je - <PoSetSystemState+>;testb $, (%eax);je - <PoSetSystemState+>": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);jmp - <IoSetFileOrigin+>;movl $, %eax;jmp - <MmForceSectionClosed+>": 1,
                "jmp - <MmForceSectionClosed+>;jmp - <MmForceSectionClosed+>;jmp - <wcsncmp+>;jmp - <MmForceSectionClosed+>;leal (%esi), %ecx": 1,
                "movl (%eax), %edx;movl %ecx, (%edx);movl %edx, (%ecx);andl $, (%eax);jmp - <KeSetKernelStackSwapEnable+>": 1,
                "leal (%edi), %esi;movl %esi, -(%ebp);movl %eax, -(%ebp);movl %eax, (%esi);movl %eax, %edi": 1,
                "insb %dx, %es:(%edi);lodsl (%esi), %eax;pushl %ebx;addb %al, (%ebp,%ebp,);addb %al, (%eax)": 1,
                "inb $, %al;pushl %ebx;addb %bh, %ah;movb $, %cl;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ch, (%eax);jae  <IoSetFileOrigin+>;rcrl $, (%edi)": 1,
                "subl $, %eax;movb %al, ;movl $, %ecx;pushl $;jle - <IoSetFileOrigin+>": 1,
                "salc;pushl %eax;repne  addw %di, (%eax);decl %edx;movb $, %cl": 1,
                "subl %ecx, %esp;addl (%eax), %ebx;pushl %esi;sbbl (%edx), %esi;xchgl %ebp, %eax": 1,
                "addb %ch, (%ebx);loop ;das;pushl $-;decl %ebp": 1,
                "das;insb %dx, %es:(%edi);lock;lretl;loopne -": 1,
                "jmp -;into;adcl %edi, (%edi);loope ;sbbb %ch, -(%edi)": 1,
                "rorl $, (%eax);subl %ecx, %esp;addl (%eax), %ebx;jne - <IoSetFileOrigin+>;decl %ebp": 1,
                "subl %ecx, %esp;addl (%eax), %ebx;ja - <IoSetFileOrigin+>;decl %ebp;andl $, %eax": 1,
                "inb %dx, %al;rcll (%ecx);movb $-, %dh;addb %al, %al;decl %edi": 1,
                "cld;adcb $, (%esi);pushl %ebx;pushl %esp;addb %al, (%eax)": 1,
                "decl %esp;decl -(%eax);imull $, -(%eax,%ebp,), %ebx;lodsl (%esi), %eax;outsl (%esi), %dx": 1,
                "incl %ecx;movb , %al;movb $, %al;lcalll $-, $;xorb %al, -(%esi)": 1,
                "aad $-;subb %dh, %dh;incl %ebp;xchgl %esp, %eax;xorb $-, %ah": 1,
                "movb , %al;stosb %al, %es:(%edi);insb %dx, %es:(%edi);pushl %es;faddl (%ebx)": 1,
                "movw -(,%eax,), %cs;movb %bh, (%edx);insb %dx, %es:(%edi);outsl (%esi), %dx;js - <IoSetFileOrigin+>": 1,
                "pushal;xchgl %edi, %eax;adcl -, %eax;pushl %ebx;movl $, %edi": 1,
                "pushl %ebx;movl $, %edi;repne  addb %ah, -(%eax);je - <IoSetFileOrigin+>;movw (%ecx), %gs": 1,
                "repne  addb %ah, -(%eax);je - <IoSetFileOrigin+>;movw (%ecx), %gs;addb %ah, -(%eax);je - <IoSetFileOrigin+>": 1,
                "xlatb;jns - <IoSetFileOrigin+>;xorl -(%eax,%edx,), %esi;testl $, %eax;addb %ah, -(%eax)": 1,
                "addb %ah, -(%eax);adcl -, %eax;retl $-;rcll (%ecx);movl $, %ebp": 1,
                "movl $, %esi;loop ;das;movb -(%eax), %ah;rclb (%ecx)": 1,
                "pushl %es;movb $, %dl;testb %al, (%ebx);leal (%edx), %edi;addl $, %eax": 1,
                "lahf;scasl %es:(%edi), %eax;rclb (%ecx);xchgl %edx, %eax;jmp ": 1,
                "movb $-, %al;jmp - <IoSetFileOrigin+>;adcb %dh, -(%ebp);addb %ah, -(%eax);pushl %esp": 1,
                "clc;jbe - <IoSetFileOrigin+>;jge - <IoSetFileOrigin+>;rclb (%ecx);xchgl %edx, %eax": 1,
                "aaa;addb %al, (%eax);clc;jne  <IoSetFileOrigin+>;sarl -(%edx)": 1,
                "outb %al, %dx;arpl %bx, (%ecx);lesl -(%edi), %eax;decl %eax;jb  <IoSetFileOrigin+>": 1,
                "decl %ecx;repne  outsl %gs:(%esi), %dx;rorb $, (%ecx);lock;decl %eax": 1,
                "jmp - <IoSetFileOrigin+>;popl %edi;addb %cl, %ch;outsl (%esi), %dx;orb -(%edx,%eax,), %bh": 1,
                "addb %ah, (%eax);stc;movl $, %esi;adcl %edx, -(%edi);incl %eax": 1,
                "incl %eax;pushl %edx;cli;aad $-;pushal": 1,
                "aad $-;pushal;rcrb %cl, %ch;rclb %cl, (%ecx);xchgl %edi, %eax": 1,
                "fnstcw %cs:(%edx);popl %ss;popal;decl %edi;sbbl %edx, %ebx": 1,
                "decl %edi;sbbl %edx, %ebx;adcl %edx, -(%edi);incl %eax;pushl %edx": 1,
                "addb %bh, %bh;pushl (%ecx,%edi,);pushl %ebx;addb %cl, -(%ecx);pushl %ebx": 1,
                "pushl %es;pushl %esp;addb %dl, %bh;pushl %es;pushl %esp": 1,
                "addb %al, (%eax);addb %bh, %bh;orb %dl, -(%eax,%eax);orb %dl, -(%eax,%eax);lcalll *": 1,
                "addb %bh, %bh;orb %dl, -(%eax,%eax);orb %dl, -(%eax,%eax);lcalll *;orl -(%eax,%eax), %edx": 1,
                "orb %dl, -(%eax,%eax);orb %dl, -(%eax,%eax);lcalll *;orl -(%eax,%eax), %edx;pushl (%edx)": 1,
                "jmpl *%ebx;andl $, %eax;pushl %esp;addb %bh, %bh;daa": 1,
                "andl $, %eax;pushl %esp;addb %bh, %bh;daa;pushl %esp": 1,
                "decl %edi;popl %ecx;addb %ah, %bh;decl %edi;popl %ecx": 1,
                "orl %ecx, -(%ecx);popl %edx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "popl %edx;addb %bl, %ch;movw (%edx), %ds;popl %ecx;bound (%edi), %ecx": 1,
                "movl $, %ecx;pushl %esp;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "pushl %esp;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;ljmpl *(%edi)": 1,
                "addb %bh, %bh;calll *%eax;calll *-(%eax);pushl %esp;addb %ah, -(%ebx)": 1,
                "addb %al, (%eax);addb %dl, (%eax);jns - <IoSetFileOrigin+>;incl %eax;movb $-, %ah": 1,
                "incl %eax;movb $-, %ah;int;pushl %esp;addb %al, (%eax)": 1,
                "fstl (%eax,%eax);insl %dx, %es:(%edi);js  <IoSetFileOrigin+>;inl %dx, %eax;fists -(%eax,%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;pushl %esp;addb %dl, -(%edx);outl %eax, $": 1,
                "addb %dh, (%edi);std;pushl %esp;addb %bh, %bh;ljmpl *-(%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl (%edi);pushl %ebp": 1,
                "addb %bh, %bh;pushl (%edi);pushl %ebp;addb %cl, (%edx);addb %al, (%eax)": 1,
                "nop;nop;decl %esi;subb (%ebp), %dl;popal": 1,
                "decl %esi;subb (%ebp), %dl;popal;subb (%ebp), %dl;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %es;xorl %edx, (%ebp)": 1,
                "addb %al, (%eax);addb %bh, %bh;incl %esp;popl %es;popl %ecx": 1,
                "addb %dl, -(%eax);calll *(%edi);popl %ecx;addb %ah, (%eax);popl %ecx": 1,
                "addb %ah, (%eax);popl %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;pushl ;je  <IoSetFileOrigin+>;addb %bh, %bh;jmpl *(%edi)": 1,
                "addb %bh, (%edx);ja  <IoSetFileOrigin+>;addb %bh, %bh;jmpl *(%esi,%esi,);addb %dh, (%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *(%ebx);movb $, %al": 1,
                "addb %al, (%eax);addb %bh, %bh;calll *(%ebx);movb $, %al;addb %ah, (%esi)": 1,
                "addb %al, (%eax);addb %cl, %bl;ldsl (%ebp), %edx;addb %al, (%eax);addb %al, (%eax)": 1,
                "cmpsl %es:(%edi), (%esi);ldsl (%ebp), %edx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl %ebp;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, (%eax)": 1,
                "pushl %esi;addb %bh, %bh;jmpl *(%edx);orb (%esi), %dl;xorl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *-(%edx);decl %edi": 1,
                "addb %bh, %bh;jmpl *-(%edx);decl %edi;pushl %esi;addb %al, (%eax)": 1,
                "pushl %esi;addb %dh, (%ecx,%edx,);pushl %esi;addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl %ecx;pushl %esi;addb %al, (%edx,%edx,);pushl %esi;addb %al, (%eax)": 1,
                "addb %ch, (%eax);pushl %ebp;pushl %esi;addb %bh, %bh;decl (,%edx,)": 1,
                "pushl %esi;addb %dl, (%esi);pushl %esi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dl, -(%eax);decl %edx;pushl %edi": 1,
                "pushl %esi;addb %ch, -;cmc;pushl %esi;addb %cl, (%eax)": 1,
                "addb %bh, %bh;pushl %esi;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "andb %ch, (%edx);andb %ch, (%edx);andb %ch, (%edx);orb (%eax), %al;addb %al, (%eax)": 34,
                "addb %al, (%eax);subb (%eax), %ah;subb (%edx), %cl;addb %al, (%eax);addb %al, (%eax)": 15,
                "subb (%edx), %cl;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 16,
                "addb %al, (%eax);subb (%eax), %ah;subb (%eax), %ah;subb (%eax), %ah;subb (%eax), %ah": 24,
                "subb (%eax), %ah;subb (%eax), %ah;decl %eax;incl %ecx;decl %esp": 23,
                "adcb $-, (%esi);adcb $, (%esi);addb %al, (%eax);addb %bh, %bh;calll *%edx": 1,
                "jecxz  <IoSetFileOrigin+>;cmpb (%ebp), %al;decl %edi;scasb %es:(%edi), %al;cld": 1,
                "fmull (%edi);sbbl $, %eax;testb $, %al;addb %ch, %bh;je  <IoSetFileOrigin+>": 1,
                "movl %edi, %esi;outl %eax, %dx;incl %eax;incl %esp;into": 1,
                "outl %eax, %dx;incl %eax;incl %esp;into;imull $-, (%esp,%ebx,), %ebx": 1,
                "xchgl %edx, %eax;movl , %eax;aad $-;loopne ;xorb $-, %al": 1,
                "addb %ch, %bl;incl %eax;popl %ecx;addb %al, (%eax);addb %al, (%eax)": 1,
                "calll *(%edx,%eax,);popl %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, -(%ebp);pushl %esi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;incl (%eax);addb %al, (%eax);addb %bh, %cl;incl %ebx": 1,
                "addb %bh, %bh;pushl -(%eax);adcb $, %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl %edi;addb %ch, (%ebp,%ebx);addb %bh, %bh;ljmpl *(,%ebx);pushl %edi": 1,
                "pushl %edi;addb %dh, %al;andb (%edi), %dl;xlatb;pushl %edi": 1,
                "pushl %edi;addb %bh, %bh;jmpl *(%edi);pushl %edi;addb %dh, (%eax)": 1,
                "pushl %edi;addb %dh, ;addb %al, (%eax);addb %bh, %bh;pushl -(%edi)": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %al, (%ebp);incl %ebx;addb %dl, (%ebp)": 1,
                "je  <IoSetFileOrigin+>;pushl $;addb %dh, (%eax,%eax);addb %ah, (%ebx);popal": 1,
                "arpl %ax, (%eax);jb  <IoSetFileOrigin+>;outsl (%esi), %dx;addb %dh, (%ebx);outsl (%esi), %dx": 1,
                "addb %dl, (%edi);imull $, (%eax), %eax;outsl (%esi), %dx;addb %dh, (%edi);jae  <IoSetFileOrigin+>": 1,
                "imull $, (%eax), %eax;outsl (%esi), %dx;addb %dh, (%edi);jae  <IoSetFileOrigin+>;andb %al, (%eax)": 1,
                "pushl %esi;addb %ah, (%ebp);jb  <IoSetFileOrigin+>;jae  <IoSetFileOrigin+>;imull $, (%eax), %eax": 1,
                "jae  <IoSetFileOrigin+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%esi);decl %edi;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, -(%eax);pushl %esp;imull $, (%edi), %edx;insb %dx, %es:(%edi);pushl %edi": 1,
                "ljmpl *(%ecx);pushl %edi;addb %dh, (%edx);pushl %edi;addb %al, (%eax)": 1,
                "pushl %edi;addb %bh, %bh;calll *-(%ecx);jo  <IoSetFileOrigin+>;addb %bh, %bh": 1,
                "jo  <IoSetFileOrigin+>;addb %bh, %bh;pushl %edi;addb %al, (%ebx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, (%eax);addb %bh, %bh;decl (%eax);movl $, %eax": 1,
                "addb %bh, (%ebp);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, -(%eax)": 1,
                "popl %eax;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *(%edi)": 1,
                "popl %eax;addb %ah, (%esp,%eax,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);nop": 1,
                "movl %eax, (%edx);jne  <IoSetFileOrigin+>;movl (%ecx), %eax;cmpl $, (%eax);jb  <IoSetFileOrigin+>": 1,
                "jne  <IoSetFileOrigin+>;movl (%ecx), %eax;cmpl $, (%eax);jb  <IoSetFileOrigin+>;movl (%eax), %eax": 1,
                "calll - <ExfInterlockedInsertTailList>;calll - <KeAreApcsDisabled+>;calll *;cmpb %bl, ;movb %al, (%ebp)": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;addl $, %ecx": 1,
                "movl $, %ebx;cmpl %ebx, %eax;movb $, -(%ebp);ja  <CcRepinBcb+>;movb (%esi), %bl": 1,
                "movl (%ecx), %eax;testl %eax, %eax;movb %bl, -(%ebp);je  <CcRepinBcb+>;movl (%eax), %eax": 1,
                "addl (%edx), %esi;movl %ecx, %edx;shrl $, %ecx;addl $, %ebx;movl %ebx, %edi": 1,
                "addb %al, (%eax);addb %cl, %ah;int;int;int": 73,
                "nop;xorl %eax, %eax;retl $;int;int": 5,
                "cmpl $, %edi;jne  <CcUnpinRepinnedBcb+>;pushl %ebx;pushl %esi;calll - <CcSetDirtyPinnedData>": 1,
                "pushl %ebx;movb $, %dl;movl %esi, %ecx;calll - <FsRtlUninitializeFileLock+>;movl %ebx, (%edi)": 1,
                "jmp  <CcIsThereDirtyData+>;testb $, (%esi);jne  <CcIsThereDirtyData+>;movl (%esi), %edx;movl (%edx), %ecx": 1,
                "andl $, -(%ebp);calll *%edi;andl $-, (%esi);subl $, (%esi);movl (%ebx), %esi": 1,
                "jl  <CcGetLsnForFileObject+>;cmpl -(%ebp), %esi;jae  <CcGetLsnForFileObject+>;movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %edx;cmpl -(%ebp), %edx;jl  <CcGetLsnForFileObject+>": 1,
                "movl (%eax), %edx;cmpl -(%ebp), %edx;jbe  <CcGetLsnForFileObject+>;movl (%eax), %edx;movl (%eax), %eax": 1,
                "je  <CcGetLsnForFileObject+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;pushl %esi;leal (%ebx), %esi": 1,
                "testl %ecx, %ecx;je  <CcSetDirtyPageThreshold+>;movl (%ebp), %edx;movl %edx, (%ecx);movl (%eax), %ecx": 1,
                "movl %esp, %ebp;pushl %esi;xorl %esi, %esi;calll *;movl (%ebp), %ecx": 1,
                "jge  <CcGetFileObjectFromBcb+>;movl %eax, -(%ebp);jmp  <CcGetFileObjectFromBcb+>;pushl (%esi);leal -(%ebp), %eax": 1,
                "jne  <CcGetFileObjectFromBcb+>;testb $, (%edi);jne  <CcGetFileObjectFromBcb+>;cmpl %esi, (%edi);jne  <CcGetFileObjectFromBcb+>": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;pushl %eax;calll - <IoFreeMdl>;testl %esi, %esi": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;pushl %edi;movl (%ebp), %edi": 2,
                "pushl %edi;movl (%ebp), %edi;testb $, (%edi);movb $, -(%ebp);je  <CcMdlWriteAbort+>": 1,
                "je  <CcMdlWriteAbort+>;calll *;decl (%esi);movb %al, %bl;jne  <CcMdlWriteAbort+>": 1,
                "calll - <KeSaveFloatingPointState+>;movl %ebx, -(%ebp);movl (%ebp), %edi;movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "movl (%edi), %ecx;movl %ecx, -(%ebp);andl $, -(%ebp);cmpl $, (%ebp);je  <CcPrepareMdlWrite+>": 1,
                "movl -(%ebp), %edi;addl %edi, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %edx;adcl %edx, %eax": 1,
                "testl %edi, %eax;jne  <CcPrepareMdlWrite+>;cmpl $, -(%ebp);jb  <CcPrepareMdlWrite+>;movl $, -(%ebp)": 1,
                "sbbl -(%ebp), %edi;movl %edi, -(%ebp);leal -(%ebp), %ecx;calll *;testl %edi, %edi": 1,
                "pushl %edi;pushl %edi;pushl -(%ebp);pushl -(%ebp);calll - <IoAllocateMdl>": 1,
                "movl %edi, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb $, (%eax);pushl $": 1,
                "movb %cl, (%eax);andl $, -(%ebp);leal -(%ebp), %edx;leal (%esi), %ecx;calll *": 1,
                "cmpl (%esi), %eax;jbe  <CcPrepareMdlWrite+>;movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%esi)": 1,
                "movl -(%ebp), %ecx;calll - <FsRtlUninitializeFileLock+>;andl $, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %eax": 2,
                "calll - <FsRtlUninitializeFileLock+>;andl $, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %eax;testl %eax, %eax": 2,
                "addl %ecx, -(%ebp);subl %ecx, (%ebp);movl (%ebp), %edi;movl -(%ebp), %ebx;jmp - <CcPrepareMdlWrite+>": 1,
                "nop;calll - <_abnormal_termination>;testl %eax, %eax;je  <CcPrepareMdlWrite+>;testl %ebx, %ebx": 1,
                "pushl %eax;pushl %esi;calll - <CcPurgeCacheSection+>;movl (%edi), %eax;movl (%eax), %ecx": 1,
                "addl %ecx, -(%ebp);adcl $, -(%ebp);pushl %eax;calll - <IoFreeMdl>;movl %ebx, (%edi)": 1,
                "calll - <InterlockedPopEntrySList>;movl %eax, %esi;testl %esi, %esi;jne  <CcWaitForCurrentLazyWriterActivity+>;pushl (%edi)": 1,
                "movb $, (%esi);andl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, (%esi);calll *;movb %al, %bl;movl , %eax;movl $, (%esi)": 1,
                "calll *;movb %al, %bl;movl , %eax;movl $, (%esi);movl %eax, (%esi)": 1,
                "jmp  <CcWaitForCurrentLazyWriterActivity+>;incl %ecx;movl (%eax), %eax;subl $, %eax;cmpl $, %ecx": 1,
                "subl $, %eax;cmpl $, %ecx;jbe - <CcWaitForCurrentLazyWriterActivity+>;pushl (%ebp);pushl (%ebp)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jl  <CcWaitForCurrentLazyWriterActivity+>": 2,
                "pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jl  <CcWaitForCurrentLazyWriterActivity+>;jg  <CcWaitForCurrentLazyWriterActivity+>": 2,
                "cmpl $, (%esi);jbe  <CcWaitForCurrentLazyWriterActivity+>;movl (%esi), %eax;andl $, %eax;pushl %eax": 1,
                "jmp  <FsRtlMdlReadComplete+>;pushl %esi;pushl (%ebp);pushl %edi;calll - <FsRtlMdlReadCompleteDev>": 1,
                "xorl %ecx, %ecx;movl (%ebp), %eax;cmpl $-, (%eax);setne %cl;decl %ecx": 2,
                "je  <FsRtlGetNextMcbEntry+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movl %edx, (%ecx);movl -(%ebp), %ecx": 1,
                "jmp  <FsRtlSplitLargeMcb+>;movl -(%ebp), %ebx;movl %ebx, %edi;shll $, %edi;movl (%esi), %eax": 1,
                "movl %ebx, %edi;shll $, %edi;movl (%esi), %eax;leal (%eax,%edi), %edx;cmpl $-, (%edx)": 1,
                "jne  <FsRtlSplitLargeMcb+>;orl $-, %eax;jmp  <FsRtlSplitLargeMcb+>;leal -(%ebx), %ecx;testl %ecx, %ecx": 1,
                "leal (%eax,%edi), %ecx;movl -(%ecx), %eax;addl -(%ecx), %eax;subl -(%ebp), %eax;decl %eax": 1,
                "movl %ecx, (%eax);movl (%esi), %ecx;movl (%ebp), %eax;movl %eax, (%edi,%ecx);movl (%esi), %ecx": 1,
                "movl (%eax), %ecx;calll *;retl;addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl (%ebp);pushl %eax;pushl (%ebp);pushl %eax;pushl (%ebp)": 1,
                "calll - <FsRtlAddLargeMcbEntry>;popl %ebp;retl $;int;int": 1,
                "testb %al, %al;je  <FsRtlLookupMcbEntry+>;movl -(%ebp), %ecx;movl (%ebp), %edx;incl %ecx": 1,
                "movl (%eax), %ecx;cmpl %edi, %ecx;je  <FsRtlLookupMcbEntry+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl %ecx, -(%ebp);movl (%esi), %ecx;movl %esi, %eax;movb $, (%esi);movl %ecx, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl (%eax), %edx;movl (%ecx), %edi;movl (%eax), %eax;movl (%ecx), %ecx": 1,
                "cmpl %ebx, (%esi);movl %edx, -(%ebp);movl %eax, -(%ebp);movl %edi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "pushl $;calll - <ExAllocateFromPagedLookasideList>;movl %eax, %ebx;xorl %eax, %eax;cmpl %eax, %ebx": 1,
                "jb  <FsRtlLookupMcbEntry+>;movl (%edi), %eax;cmpl -(%ebp), %eax;ja  <FsRtlLookupMcbEntry+>;movl (%edi), %ecx": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%ebp);movl (%edi), %edi": 1,
                "movl %eax, (%esi);movl %edi, (%ebp);movl (%edi), %edi;testl %edi, %edi;jne - <FsRtlLookupMcbEntry+>": 1,
                "movl %edi, (%ebp);movl (%edi), %edi;testl %edi, %edi;jne - <FsRtlLookupMcbEntry+>;movl -(%ebp), %eax": 1,
                "jne  <FsRtlLookupMcbEntry+>;movl %edi, (%eax);jmp  <FsRtlLookupMcbEntry+>;pushl %eax;calll - <RtlRealSuccessor>": 1,
                "jne  <FsRtlLookupMcbEntry+>;movb $, (%esi);jmp  <FsRtlLookupMcbEntry+>;movb $, -(%ebp);movl %ebx, %esi": 1,
                "calll - <FsRtlLookupMcbEntry+>;jmp  <FsRtlLookupMcbEntry+>;calll *;popl %edi;popl %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;cmpl $, %eax;je  <FsRtlIsNtstatusExpected+>;cmpl $, %eax": 1,
                "movl (%edi), %eax;movl (%edi), %edi;movl %eax, (%edi);movl %edi, (%eax);movb (%esi), %al": 1,
                "movl %esi, %ecx;movl $, (%esi);sbbl %eax, %eax;andl $, %eax;movl %eax, (%esi)": 1,
                "andl $, %eax;movl %eax, (%esi);calll - <IofCompleteRequest>;popl %edi;popl %esi": 1,
                "movl (%edi), %ecx;calll - <ExAcquireFastMutexUnsafe>;xorl %edx, %edx;incl %edx;movb %dl, -(%ebp)": 1,
                "testb $, (%edi);je  <FsRtlNormalizeNtstatus+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%ebp), %esi": 1,
                "xorl %ecx, %ecx;movb (%eax), %cl;orl %edx, %ecx;movb %cl, (%eax);andl $, (%esi)": 1,
                "movl $, -(%ebp);jmp  <FsRtlNormalizeNtstatus+>;movl $, %esi;movl (%ebp), %ecx;movl %esi, (%ecx)": 1,
                "nop;nop;cmpb $, -(%ebp);je  <FsRtlNormalizeNtstatus+>;movl (%edi), %ecx": 2,
                "je  <FsRtlNormalizeNtstatus+>;movl (%edi), %ecx;calll - <ExReleaseFastMutexUnsafe>;retl;nop": 2,
                "nop;addb %al, (%eax);addb %al, (%eax);popl %ebp;pushl %esp": 1,
                "movl (%ebp), %ecx;movl %esi, (%ecx);movb $, %dl;calll - <IofCompleteRequest>;movl %esi, %eax": 2,
                "movb (%eax), %cl;orl %ebx, %ecx;movb %cl, (%eax);andl $, (%esi);leal (%esi), %eax": 1,
                "movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);movb $, -(%ebp)": 1,
                "movl $, -(%ebp);xorl %esi, %esi;jmp  <FsRtlNormalizeNtstatus+>;movl (%edi), %eax;testb $, %ah": 1,
                "jmp - <FsRtlNormalizeNtstatus+>;cmpb $, -(%ebp);je  <FsRtlNormalizeNtstatus+>;movl (%edi), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl %esi, (%ecx);calll - <IofCompleteRequest>;orl $-, -(%ebp);calll  <FsRtlNormalizeNtstatus+>;movl -(%ebp), %eax": 1,
                "movl (%esi), %esi;movl %esi, -(%ebp);pushl -(%ebp);calll - <MmProbeAndLockSelectedPages+>;movl (%esi), %esi": 1,
                "pushl $;calll - <_CIsqrt+>;movl (%ebp), %edx;movl (%edx), %esi;movl %esi, -(%ebp)": 1,
                "calll - <IoReleaseVpbSpinLock>;movl (%esi), %ecx;calll *;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, (%esi);movl (%esi), %ecx;calll - <ObfDereferenceObject>;movl %ebx, (%esi);movl $, (%esi)": 1,
                "pushl %ecx;calll - <MmProbeAndLockSelectedPages+>;jmp - <FsRtlNormalizeNtstatus+>;movl %edi, -(%ebp);jmp  <FsRtlNormalizeNtstatus+>": 1,
                "cmpb $, (%eax);jne  <FsRtlNormalizeNtstatus+>;testb $, (%eax);je  <FsRtlNormalizeNtstatus+>;movl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);calll  <FsRtlNormalizeNtstatus+>;movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "pushl (%eax);pushl (%ebp);pushl %esi;calll *(%eax);decw (%esi)": 1,
                "subl $, %eax;je  <FsRtlNormalizeNtstatus+>;decl %eax;je  <FsRtlNormalizeNtstatus+>;decl %eax": 1,
                "decl %eax;je  <FsRtlNormalizeNtstatus+>;decl %eax;je  <FsRtlNormalizeNtstatus+>;decl %eax": 3,
                "jne  <FsRtlCreateSectionForDataScan+>;pushl $;calll - <IoSetTopLevelIrp>;movl %fs:, %eax;decl (%eax)": 1,
                "jge  <FsRtlCreateSectionForDataScan+>;movl %fs:, %eax;incl (%eax);jne  <FsRtlCreateSectionForDataScan+>;leal (%eax), %ecx": 1,
                "movb $, (%eax);calll *;pushl %edi;calll - <IoSetTopLevelIrp>;cmpl %edi, %ebx": 1,
                "jmp  <FsRtlCreateSectionForDataScan+>;pushl (%ebp);calll - <PsChargeProcessPagedPoolQuota+>;movl -(%ebp), %ecx;calll - <ObfReferenceObject>": 1,
                "pushl %edi;pushl (%ebp);pushl %edi;pushl -(%ebp);calll  <ObInsertObject>": 1,
                "cmpl %edi, %esi;jl  <FsRtlCreateSectionForDataScan+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 6,
                "jmp  <FsRtlCreateSectionForDataScan+>;movl $, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "retl $;decl %esp;int;int;int": 1,
                "xorl %edi, %edi;cmpl %edi, (%ebp);jne  <FsRtlLookupPerFileObjectContext+>;xorl %eax, %eax;jmp  <FsRtlLookupPerFileObjectContext+>": 1,
                "jmp  <FsRtlLookupPerFileObjectContext+>;cmpl %edx, (%eax);je - <FsRtlLookupPerFileObjectContext+>;movl (%eax), %eax;cmpl %ecx, %eax": 1,
                "movl %esi, %ecx;calll *;movl %edi, %eax;popl %ebx;popl %esi": 2,
                "leal (%esi), %ecx;movl (%ecx), %eax;jmp  <FsRtlRemovePerFileObjectContext+>;movl (%eax), %ebx;cmpl (%ebp), %ebx": 1,
                "movl (%eax), %ecx;cmpl %eax, %ecx;je  <FsRtlRemovePerFileObjectContext+>;movl %ecx, %edi;testl %edi, %edi": 1,
                "xorl %edi, %edi;cmpl %edi, %ebx;jne  <FsRtlInsertPerFileObjectContext+>;movl $, %eax;jmp  <FsRtlInsertPerFileObjectContext+>": 1,
                "pushl $;pushl %edi;calll  <ExAllocatePoolWithTag>;movl %eax, %esi;cmpl %edi, %esi": 1,
                "pushl %edi;calll  <ExAllocatePoolWithTag>;movl %eax, %esi;cmpl %edi, %esi;jne  <FsRtlInsertPerFileObjectContext+>": 1,
                "xorl %ecx, %ecx;incl %ecx;movl %ecx, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "xorl %eax, %eax;popl %esi;popl %edi;popl %ebx;popl %ebp": 11,
                "pushl (%esi);calll *(%esi);cmpl $, %esi;pushl $;jne  <FsRtlInsertPerFileObjectContext+>": 1,
                "cmpb %bl, (%ebp);jne  <FsRtlInsertPerFileObjectContext+>;pushl $;calll - <ExRaiseStatus>;pushl %ebx": 1,
                "movl %eax, -(%ebp);je  <FsRtlPostPagingFileStackOverflow+>;pushl %esi;pushl $;pushl %ebx": 1,
                "pushl %ebx;pushl -(%ebp);movb %bl, (%esi);movb $, (%esi);movl %ebx, (%esi)": 1,
                "pushl -(%ebp);movb %bl, (%esi);movb $, (%esi);movl %ebx, (%esi);pushl $": 1,
                "pushl %edx;pushl %eax;calll - <_allmul>;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "nop;nop;movl %edi, %edi;jmp - <FsRtlPostPagingFileStackOverflow+>;int": 1,
                "nop;nop;retl $;int;int": 4,
                "je  <InbvSolidColorFill+>;cmpl %ebx, ;jne  <InbvSolidColorFill+>;pushl %esi;calll - <RtlIpvStringToAddressW+>": 1,
                "movl %eax, ;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl %eax, ;movl (%ebp), %eax;movl %eax, ": 1,
                "movl (%ebp), %ecx;movb %al, (%ecx);xorl %eax, %eax;popl %ebp;retl $": 1,
                "movb (%eax,%ecx), %al;testb %al, %al;je - <IoCheckQuerySetFileInformation+>;movsbl %al, %eax;cmpl %eax, (%ebp)": 1,
                "jae  <IoCheckQuerySetVolumeInformation+>;movb (%eax,%ecx), %al;testb %al, %al;je  <IoCheckQuerySetVolumeInformation+>;movsbl %al, %eax": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, %eax;pushl %esi;je  <IoCreateStreamFileObjectEx+>": 1,
                "je  <IoCreateStreamFileObjectEx+>;movl (%eax), %esi;jmp  <IoCreateStreamFileObjectEx+>;movl (%ebp), %esi;pushl %edi": 1,
                "pushl %ebx;movl %ebx, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 3,
                "movl (%ebp), %eax;movw $, (%eax);movl (%ebp), %eax;movl %esi, (%eax);movl (%ebp), %eax": 1,
                "movl $, (%eax);movl (%ebp), %eax;movb $, (%eax);movl (%ebp), %eax;movb $, (%eax)": 1,
                "pushl $;pushl $;pushl %ebx;pushl (%ebp);calll  <ObInsertObject>": 1,
                "orb $, (%eax);movl (%esi), %esi;cmpl %ebx, %esi;je  <IoCreateStreamFileObjectEx+>;pushl $": 1,
                "pushl $;calll - <_CIsqrt+>;movb $, -(%ebp);movl (%ebp), %ecx;testb $, (%ecx)": 1,
                "jmp  <IoGetInitialStack+>;nop;nop;nop;nop": 1,
                "pushl %ebx;pushl $;leal -(%ebp), %esi;pushl %esi;pushl (%eax)": 1,
                "pushl $;int;int;int;nop": 1,
                "je  <IoRaiseHardError+>;pushl $;pushl $;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "cmpl %esi, %ecx;pushl %edi;je  <IoRaiseInformationalHardError+>;movl (%ecx), %eax;jmp  <IoRaiseInformationalHardError+>": 1,
                "movl (%ecx), %eax;jmp  <IoRaiseInformationalHardError+>;movl %fs:, %eax;movl (%eax), %eax;shrl $, %eax": 1,
                "jne  <IoRaiseInformationalHardError+>;cmpl $, (%ebp);je  <IoRaiseInformationalHardError+>;cmpl $, (%ebp);je  <IoRaiseInformationalHardError+>": 1,
                "pushl %esi;pushl $;pushl %esi;pushl $;pushl %esi": 2,
                "pushl %esi;pushl (%ebp);pushl %edi;calll - <KeInitializeApc>;pushl %esi": 3,
                "calll - <KeInsertQueueApc>;jmp  <IoRaiseInformationalHardError+>;calll *;pushl $;movb %al, (%ebp)": 1,
                "cmpw (%eax), %di;jne  <IoRaiseInformationalHardError+>;movzwl %di, %ecx;movl (%eax), %edi;movl %edx, %esi": 1,
                "pushl $;pushl $;movb $, ;calll - <ExQueueWorkItem>;movb (%ebp), %cl": 1,
                "cmpl %esi, %eax;je  <IoRaiseInformationalHardError+>;pushl %esi;pushl %eax;calll  <ExFreePoolWithTag>": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);popl %ebp;retl $": 3,
                "xorl %ebx, %ebx;cmpb %bl, (%ebp);pushl %esi;je  <IoSetDeviceToVerify+>;leal -(%ebp), %eax": 1,
                "andl $, -(%ebp);pushl %esi;pushl %edi;movl %fs:, %eax;leal (%eax), %edi": 1,
                "andl $, %ecx;movl %ecx, (%eax);movl (%eax), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx": 6,
                "pushl %ecx;pushl $;pushl $;addl $, %eax;pushl %eax": 1,
                "pushl %eax;calll - <IoAcquireVpbSpinLock>;movl (%esi), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl %eax, (%ecx);movl %eax, %ecx;calll - <ObfReferenceObject>;xorl %esi, %esi;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx;leal -(%ebp), %eax": 3,
                "movw $, -(%ebp);movw %bx, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);calll - <ZwSetValueKey>": 1,
                "jne  <IoValidateDeviceIoControlAccess+>;xorl %eax, %eax;jmp  <IoValidateDeviceIoControlAccess+>;movzbl (%eax), %ecx;movl %ecx, %eax": 1,
                "subl (%ebp), %eax;negl %eax;sbbl %eax, %eax;andl $, %eax;jmp  <IoValidateDeviceIoControlAccess+>": 1,
                "movl -(%esi), %ecx;addl $-, %esi;testl %ecx, %ecx;je  <IoFreeErrorLogEntry+>;calll - <ObfDereferenceObject>": 1,
                "testl %ecx, %ecx;je  <IoFreeErrorLogEntry+>;calll - <ObfDereferenceObject>;movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "movl (%esi), %ecx;testl %ecx, %ecx;je  <IoFreeErrorLogEntry+>;calll - <ObfDereferenceObject>;movzwl (%esi), %eax": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 4,
                "movl %edi, %ecx;calll - <ObfDereferenceObject>;cmpl %esi, %ebx;jne - <IoFreeErrorLogEntry+>;popl %edi": 1,
                "jmp  <IoCsqRemoveIrp+>;pushl %edi;pushl %esi;calll *(%esi);andl $, (%ebx)": 1,
                "shrl $, %eax;andl $, %eax;leave;retl;int": 1,
                "andl $, %eax;leave;retl;int;int": 1,
                "andl $, %edi;shrl $, %esi;je  <IoCsqRemoveIrp+>;cmpl $, %edi;jb  <IoCsqRemoveIrp+>": 1,
                "movl (%ebp), %eax;andw $, (%ebp);pushl %ebx;pushl %esi;pushl %edi": 1,
                "movl $, %ebx;movl (%ebx), %edi;cmpl %edi, %esi;jae  <IoCsqRemoveIrp+>;movl -(%ebx), %ecx": 1,
                "movl %esi, (%ecx);movl %edx, (%ecx);movb $, %al;jmp  <IoCsqRemoveIrp+>;xorb %al, %al": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpw $-, ": 1,
                "jae  <IoCsqRemoveIrp+>;movzwl (%esi), %eax;movl (%ebp), %ecx;movl (%eax,%ecx), %eax;cmpl (%ebp), %eax": 1,
                "je  <IoCsqRemoveIrp+>;pushl (%ebp);calll - <IoCsqRemoveIrp+>;popl %ecx;pushl (%ebx)": 1,
                "pushl (%ebp);calll - <IoCsqRemoveIrp+>;popl %ecx;pushl (%ebx);pushl (%ebx)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl (%eax), %ecx": 2,
                "movl (%eax), %ecx;testl %ecx, %ecx;pushl %edi;je  <IoCsqRemoveIrp+>;pushl $": 1,
                "movl %eax, %esi;addl $, %edi;movl (%edi), %eax;addl %esi, %eax;cmpl (%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;subl %esi, %eax;addl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "pushl %eax;pushl %edi;pushl (%esi);calll - <IoCsqRemoveIrp+>;jmp  <IoCsqRemoveIrp+>": 2,
                "pushl (%esi);movl %edx, -(%ebp);calll - <IoCsqRemoveIrp+>;movl (%esi), %eax;xorl %ecx, %ecx": 1,
                "je  <IoCsqRemoveIrp+>;xorl %eax, %eax;jmp  <IoCsqRemoveIrp+>;movl $, %eax;popl %edi": 1,
                "movl $, %eax;popl %edi;popl %esi;leave;retl $": 4,
                "calll - <MmGetPhysicalAddress>;pushl (%ebp);movb $, %cl;calll - <_allshr>;pushl %eax": 1,
                "calll - <IoCsqRemoveIrp+>;testb %al, %al;je  <IoCsqRemoveIrp+>;movzwl (%esi), %eax;incl -(%ebp)": 1,
                "leal (%ebx,%eax), %ebx;cmpl %edi, %esi;jne - <IoCsqRemoveIrp+>;movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;movl %ebx, (%eax);xorl %eax, %eax": 1,
                "movl $, %eax;jmp - <IoCsqRemoveIrp+>;nop;int;int": 2,
                "testb %al, %al;je  <IoCsqRemoveIrp+>;movzwl (%ebx), %eax;pushl %eax;pushl (%ebx)": 1,
                "shrl %eax;movl %eax, (%edi);movl (%ebx), %esi;movl %eax, %ecx;movl (%ebp), %eax": 1,
                "calll - <RtlImageNtHeader>;movl (%eax), %edx;movl (%ebp), %ecx;movl %edx, (%ecx);movl (%eax), %eax": 1,
                "movl %ecx, -(%eax);movl (%ebp), %eax;movl (%ebp), %edx;addl $, (%ebp);movl %eax, %ecx": 1,
                "addl $, %ecx;andl $-, %ecx;addl $, %ecx;addl %eax, %ecx;cmpl (%ebp), %ecx": 1,
                "jne  <IoCsqRemoveIrp+>;movl %eax, (%edx);incl (%edx);incl %edi;addl $, %esi": 1,
                "addl (%ebp), %ebx;pushl %esi;pushl %edi;movl %eax, %edi;shll $, %edi": 1,
                "pushl %esi;pushl %edi;movl %eax, %edi;shll $, %edi;addl %ebx, %edi": 1,
                "shll $, %edi;addl %ebx, %edi;testl %eax, %eax;movl $, %esi;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;movl (%esi), %eax;cltd;movl %eax, (%ebx)": 1,
                "movl %edi, %eax;subl (%ebp), %eax;movl %edx, (%ebx);movl %eax, (%ebx);movl (%esi), %ecx": 1,
                "movl (%esi), %ecx;subl (%esi), %ecx;addl $, -(%ebp);movl %ecx, (%ebx);movl (%esi), %esi": 1,
                "je  <IoCsqRemoveIrp+>;movl %eax, -(%ebp);cmpl -(%ebp), %ebx;je  <IoCsqRemoveIrp+>;testb $, %bl": 1,
                "jne - <IoCsqRemoveIrp+>;cmpl %eax, (%esi);jne - <IoCsqRemoveIrp+>;cmpl $, %ecx;jne - <IoCsqRemoveIrp+>": 1,
                "nop;movsb (%esi), %es:(%edi);jge  <IoCsqRemoveIrp+>;addb %ch, -(%ebp);int": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ecx), %edx;addl (%ebp), %edx": 1,
                "calll  <KdPowerTransition+>;xorl %esi, %esi;cmpl %esi, %ebx;movl %eax, -(%ebp);jne  <KeCapturePersistentThreadState+>": 1,
                "movl %eax, -(%ebp);jne  <KeCapturePersistentThreadState+>;xorl %eax, %eax;jmp  <KeCapturePersistentThreadState+>;cmpl %esi, (%ebp)": 1,
                "movzwl , %eax;movl %eax, (%ebx);movl , %eax;shrl $, %eax;movl %eax, (%ebx)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%ebx);movl , %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 11,
                "calll - <IoCsqRemoveIrp+>;movl (%ebp), %edx;movb %al, (%ebx);movl %esi, (%ebx);movl %esi, (%ebx)": 1,
                "movl -, %edi;movl %edi, (%ebx);movl -, %edi;movl %edi, (%ebx);movl $, (%ebx)": 1,
                "movl %esi, (%ebx);movl , %edi;movl %edi, (%ebx);movl %eax, (%ebx);movl %esi, (%ebx)": 1,
                "movl %edi, (%ebx);movl %eax, (%ebx);movl %esi, (%ebx);movl $, (%ebx);orl %ecx, (%ebx)": 1,
                "movl %edx, %esi;movl $, %eax;movl $, (%ebx);rep  movsl (%esi), %es:(%edi);movl %eax, (%ebp)": 1,
                "movl $, (%ebx);leal (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "leal (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 6,
                "movl %edi, (%ebp);jmp  <KeCapturePersistentThreadState+>;movl (%ebp), %edi;leal (%edi), %esi;andl $-, %esi": 1,
                "movl (%ebp), %ecx;movl %eax, %esi;movl %ecx, %eax;shrl $, %ecx;leal (%edx,%ebx), %edi": 1,
                "shrl $, %ecx;leal (%eax,%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "testb %al, %al;je  <KeCapturePersistentThreadState+>;movl (%ebp), %ecx;orl $, (%ebx);movl %esi, %eax": 1,
                "je  <KeCapturePersistentThreadState+>;movl (%ebp), %ecx;orl $, (%ebx);movl %esi, %eax;movl (%ebp), %esi": 1,
                "sbbl %eax, %eax;andl %edx, %eax;movl $, %ecx;cmpl %ecx, %eax;jb  <KeCapturePersistentThreadState+>": 1,
                "movl %eax, (%ebx);movl %esi, (%ebx);rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "orl $, (%ebx);movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ebx);movl (%ebp), %eax": 1,
                "movb (%ebp), %cl;calll *;addl $, %edi;andl $-, %edi;pushl %edi": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movb (%esi), %al;testb $, %al": 1,
                "jmp  <KeCapturePersistentThreadState+>;testb $, %al;je  <KeCapturePersistentThreadState+>;pushl (%edi);movl $, (%edi)": 1,
                "testb $, %al;je  <KeCapturePersistentThreadState+>;pushl (%edi);movl $, (%edi);movl , %eax": 1,
                "testb $, %al;je  <KeCapturePersistentThreadState+>;movl $, (%edi);movl , %eax;movl (%eax), %eax": 1,
                "pushl %eax;calll - <InbvNotifyDisplayOwnershipLost+>;addl (%ebp), %eax;movl (%esi), %ecx;movl (%esi), %esi": 1,
                "movl %ecx, %edi;jmp  <KeCapturePersistentThreadState+>;movl %edx, -(%ebp);movl %eax, %edi;cmpl %edi, %ebx": 1,
                "movl %ecx, -(%ebp);jmp  <KeCapturePersistentThreadState+>;movl (%ebp), %ebx;andl $, -(%ebp);jmp  <KeCapturePersistentThreadState+>": 1,
                "jae  <KeCapturePersistentThreadState+>;movl -(%ebp), %edx;movl %ecx, -(%ebp);jmp  <KeCapturePersistentThreadState+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %edx, %ebx;movl (%ebp), %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;movl %eax, -(%ebp);pushl %ebx;addl %edi, %eax;pushl %eax": 1,
                "movl %eax, %ebx;divl %ecx;xorl %edi, %edi;cmpl %edi, (%esi);movl %edi, (%ebp)": 1,
                "movl %edi, -(%ebp);movl (%esi), %edx;movl %edi, %eax;shrl $, %eax;movl (%edx,%eax,), %eax": 1,
                "incl (%ebp);movl (%ebp), %eax;xorl %edx, %edx;divl -(%ebp);addl $, -(%ebp)": 1,
                "divl %ebx;pushl %eax;pushl (%ebp);pushl $;calll - <IoCsqRemoveIrp+>": 1,
                "pushl $;calll - <IoCsqRemoveIrp+>;addl $, %esp;calll - <IoCsqRemoveIrp+>;pushl %edi": 1,
                "addl $, %esp;calll - <IoCsqRemoveIrp+>;pushl %edi;pushl (%ebp);pushl (%ebp)": 1,
                "jl  <KeCapturePersistentThreadState+>;incl %edi;cmpl (%esi), %edi;jb - <KeCapturePersistentThreadState+>;xorl %eax, %eax": 1,
                "cmpl (%esi), %edi;jb - <KeCapturePersistentThreadState+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "movl (%eax), %ecx;addl (%eax), %ecx;pushl %esi;movl %ecx, (%esi);movl $, (%esi)": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%ebp), %eax;pushl %edi": 1,
                "jg  <KeCapturePersistentThreadState+>;cmpl (%esi), %ebx;jbe  <KeCapturePersistentThreadState+>;movl (%esi), %ebx;movl (%ebp), %eax": 1,
                "jbe  <KeCapturePersistentThreadState+>;movl (%esi), %ebx;movl (%ebp), %eax;pushl %ebx;pushl %edx": 1,
                "leal (%esi), %edi;pushl %edi;calll *(%ebp);testl %eax, %eax;jl  <KeCapturePersistentThreadState+>": 2,
                "je  <KeCapturePersistentThreadState+>;movl (%ebp), %ecx;movl (%ebp), %ebx;andl $, %ecx;cmpl %ebx, (%ebp)": 1,
                "movl (%esi), %ebx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%ebp), %ecx;pushl %ebx": 1,
                "movl , %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 14,
                "movl (%ebp), %edi;movl %edi, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "andl $, (%eax);movl (%ebp), %eax;cmpl $, %eax;jb  <KeCapturePersistentThreadState+>;cmpl %eax, (%ebp)": 1,
                "movl , %eax;testl %eax, %eax;je  <KeCapturePersistentThreadState+>;cmpl $, ;je  <KeCapturePersistentThreadState+>": 1,
                "cmpl $, ;je  <KeCapturePersistentThreadState+>;movl %edi, -(%ebp);leal (%edi), %ebx;movl %ebx, -(%ebp)": 1,
                "je  <KeCapturePersistentThreadState+>;cmpl $, (%ebp);je  <KeCapturePersistentThreadState+>;testb $, %al;je  <KeCapturePersistentThreadState+>": 1,
                "addl %ecx, %eax;cmpb $, (%esi);jne - <KeCapturePersistentThreadState+>;cmpl %eax, (%esi);jne - <KeCapturePersistentThreadState+>": 1,
                "jne - <KeCapturePersistentThreadState+>;cmpl $, %ecx;jne - <KeCapturePersistentThreadState+>;pushl %edx;calll - <MmIsAddressValid>": 1,
                "testw $, %ax;jne - <KeCapturePersistentThreadState+>;pushl %ecx;pushl %eax;calll - <IoCsqRemoveIrp+>": 1,
                "je - <KeCapturePersistentThreadState+>;movl %esi, (%ebx);movl -(%ebp), %eax;leal (%eax), %ecx;andl $, %ecx": 1,
                "movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl $, (%eax);movl , %ecx": 1,
                "movl -(%ebp), %edi;jmp - <KeCapturePersistentThreadState+>;nop;nop;nop": 1,
                "movb $, (%eax);orl $-, -(%ebp);movl -(%ebp), %ebx;jmp - <KeCapturePersistentThreadState+>;xorl %eax, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %ecx;pushl %esi": 1,
                "pushl %esi;pushl %esi;calll - <KeCapturePersistentThreadState+>;cmpl %esi, %eax;jge  <KeCapturePersistentThreadState+>": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;xorl %eax, %eax;pushl $": 1,
                "movl %eax, %edi;jmp  <KeCapturePersistentThreadState+>;orl %esi, (%ebx);calll  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx": 1,
                "movb (%ebp), %dl;testb $, %dl;je  <KeCapturePersistentThreadState+>;leal (%edi), %eax;cmpl %ecx, %eax": 1,
                "movl %edi, (%ebx);movl %ecx, (%ebx);movl %eax, %edi;jmp  <KeCapturePersistentThreadState+>;orl %esi, (%ebx)": 1,
                "leal (%ecx,%ecx,), %eax;movl (%ebp), %ecx;leal (%ecx,%eax,), %eax;andl $-, %eax;je  <KeCapturePersistentThreadState+>": 1,
                "je  <KeCapturePersistentThreadState+>;movl (%ebx), %eax;movl (%ebx), %ecx;pushl $;pushl $": 1,
                "addl %eax, %edi;movl %ds:, %eax;movl $, %ecx;movl %eax, %esi;rep  movsl (%esi), %es:(%edi)": 1,
                "movl (%ebx), %ecx;movl (%ebx), %esi;leal -(%eax,%ebx), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%ebx), %ecx;testl %ecx, %ecx;je  <KeCapturePersistentThreadState+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %ecx;xorl %ebx, %ebx;cmpl %ebx, ;setne %al;movb %al, (%ecx)": 1,
                "testb $, %al;pushl %edi;je  <KeCapturePersistentThreadState+>;cmpl %ebx, ;movl $, ": 1,
                "jne  <KeCapturePersistentThreadState+>;pushl %esi;calll - <InbvNotifyDisplayOwnershipLost+>;cmpl , %eax;je  <KeCapturePersistentThreadState+>": 1,
                "cmpl , %eax;je  <KeCapturePersistentThreadState+>;movl $, ;xorb %al, %al;jmp  <KeCapturePersistentThreadState+>": 1,
                "movl %edi, (%ebx);movl %cr, %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %cr, %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl %eax, (%ebx);movl , %eax": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, -(%ebp);jmp  <KeCapturePersistentThreadState+>;movl , %eax": 1,
                "movb (%esi), %cl;movb %cl, (%edx,%esi);incl %esi;testb %cl, %cl;jne - <KeCapturePersistentThreadState+>": 1,
                "movl $, (%ebx);xorl %esi, %esi;movl %esi, (%ebx);movl %esi, (%ebx);movl (%edx), %ecx": 1,
                "leal (%ebp), %eax;movl %esi, (%ebx);movl %esi, (%ebx);movb (%edi), %cl;pushl %eax": 1,
                "movb (%edi), %cl;pushl %eax;movsbl %cl, %eax;pushl %eax;calll - <InbvNotifyDisplayOwnershipLost+>": 1,
                "orb $, -(%ebp);movl %eax, -(%ebp);movl (%edi), %edi;movl $, %eax;pushl $": 1,
                "subl %eax, (%ebp);addl %eax, (%ebp);xorl %ecx, %ecx;subl %eax, (%esi);sbbl %ecx, (%esi)": 1,
                "movzbl %al, %eax;pushl %eax;pushl (%edi);movl (%edi), %eax;subl $, %eax": 1,
                "movl (%eax), %eax;shll $, %eax;testb $, (%edi);movl %eax, (%ebp);je  <KeCapturePersistentThreadState+>": 1,
                "pushl %ecx;addl $, %eax;pushl %eax;pushl -(%ebp);addl $, %ebx": 1,
                "sbbl -(%ebp), %eax;xorl %edx, %edx;cmpl %edx, %eax;ja  <KeCapturePersistentThreadState+>;jb  <KeCapturePersistentThreadState+>": 1,
                "addl $, %esp;movl , %eax;pushl %ebx;addl $, %eax;pushl %eax": 1,
                "pushl %ecx;calll - <IoCsqRemoveIrp+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl $;popl %ecx;sbbl %ecx, (%esi);addl %ebx, (%eax);adcl %ecx, (%eax)": 1,
                "popl %ecx;xorl %esi, %esi;pushl %esi;pushl (%ebp);leal -(%ebp), %eax": 1,
                "xorl %esi, %esi;pushl %esi;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 1,
                "calll - <KeCapturePersistentThreadState+>;pushl $;pushl %esi;pushl %esi;calll - <IoCsqRemoveIrp+>": 1,
                "pushl $;pushl %esi;pushl %esi;calll - <IoCsqRemoveIrp+>;calll *-(%ebp)": 1,
                "popl %esi;popl %ebx;leave;retl $;andl $, %eax": 2,
                "calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 34,
                "pushl %edi;calll  <ExFreePoolWithTag>;jmp - <RtlVolumeDeviceToDosName+>;movl -(%ebp), %ecx;movl %eax, %edx": 1,
                "movl -(%ebp), %ecx;xorl %eax, %eax;movw (%edi), %ax;subw $, %ax;movw %ax, (%ecx)": 1,
                "movl %esp, %ebp;movl , %eax;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "cmpl %ebx, %eax;jne  <RtlVolumeDeviceToDosName+>;movl $, %eax;jmp  <RtlVolumeDeviceToDosName+>;xorl %ecx, %ecx": 1,
                "jne  <RtlVolumeDeviceToDosName+>;movl $, %eax;jmp  <RtlVolumeDeviceToDosName+>;xorl %ecx, %ecx;movb (%ebp), %cl": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;xorl %ecx, %ecx;movb (%ebp), %cl;addb (%ebp), %cl;addb $, %cl": 1,
                "cmpl %ebx, (%ebp);movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl (%eax), %edi;jmp  <RtlVolumeDeviceToDosName+>;xorl %edi, %edi;movl , %esi;calll *%esi": 1,
                "jne  <RtlVolumeDeviceToDosName+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;pushl %esi;calll - <IoFreeIrp>": 1,
                "nop;nop;nop;movl %edi, %edi;cli": 1,
                "movb $, ;xorb %al, %al;sti;retl;int": 1,
                "calll *;cmpb $, (%ebp);movb %al, -(%ebp);je  <RtlVolumeDeviceToDosName+>;movl $, -(%ebp)": 1,
                "pushl %ebx;pushl %esi;pushl %edi;jle  <RtlVolumeDeviceToDosName+>;movl %eax, -(%ebp)": 1,
                "xorl %edi, %edi;movl %ebx, %edx;movl (%edx), %esi;movl (%esi), %eax;andl -(%ebp), %eax": 1,
                "andl $-, %eax;orl $, %eax;movl %eax, (%esi);movl (%edx), %edx;testl %edx, %edx": 1,
                "incl -(%ebp);movl -(%ebp), %eax;cmpl (%ebp), %eax;jge  <RtlVolumeDeviceToDosName+>;jmp - <RtlVolumeDeviceToDosName+>": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <RtlVolumeDeviceToDosName+>;movl %ebx, (%eax);movl -(%ebp), %eax": 1,
                "movl (%ecx,%eax,), %edx;movl (%edx), %esi;andl $-, (%esi);movl (%edx), %edx;testl %edx, %edx": 1,
                "movl $, (%ebp);movl $, %eax;movl (%ebp), %ecx;xchgl %eax, (%ecx);cmpl $, %eax": 1,
                "pushl $;pushl %eax;pushl $;calll - <KeSetEvent>;popl %ebp": 1,
                "pushl $;calll - <KeSetEvent>;popl %ebp;retl $;int": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <RtlVolumeDeviceToDosName+>;movl %eax, (%ecx);movb $, %al": 1,
                "je  <RtlVolumeDeviceToDosName+>;pushl %edi;pushl $;leal (%esi), %edi;popl %ecx": 1,
                "popl %ecx;leal (%edx), %esi;xorl %eax, %eax;rep  cmpsl %es:(%edi), (%esi);popl %edi": 1,
                "testl %eax, %eax;je - <RtlVolumeDeviceToDosName+>;andl $, (%eax);jmp - <RtlVolumeDeviceToDosName+>;xorb %al, %al": 1,
                "movl (%ebp), %edx;pushl $;addl $, %edx;popl %ecx;calll - <RtlCopyUnicodeString+>": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;leal (%esi), %eax;movl %eax, -(%ebp);movw (%esi), %ax;movw %ax, -(%ebp)": 1,
                "testl %eax, %eax;je  <RtlVolumeDeviceToDosName+>;movl (%eax), %eax;testl %eax, %eax;je  <RtlVolumeDeviceToDosName+>": 1,
                "je  <RtlVolumeDeviceToDosName+>;pushl (%ebp);pushl %eax;calll - <RtlVolumeDeviceToDosName+>;testb %al, %al": 1,
                "calll - <ObfDereferenceObject>;xorl %eax, %eax;popl %ebx;popl %esi;leave": 1,
                "movl %esp, %ebp;pushl $;pushl $;pushl (%ebp);calll - <KeInitializeEvent+>": 1,
                "movl %edi, %ecx;calll - <ObfDereferenceObject>;xorl %eax, %eax;jmp  <RtlVolumeDeviceToDosName+>;pushl %ebx": 1,
                "pushl %ebx;movl (%ebp), %ebx;movb %cl, (%ebx);jmp  <RtlVolumeDeviceToDosName+>;movl (%edx), %esi": 1,
                "movl (%ebp), %edx;movl , %eax;cmpl %eax, %edx;jb  <RtlVolumeDeviceToDosName+>;movl (%eax), %ecx": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %esi;movl %esi, -(%ebp)": 1,
                "calll  <ExRaiseAccessViolation>;pushl $;movzwl -(%ebp), %eax;pushl %eax;pushl $": 2,
                "movzwl -(%ebp), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithQuotaTag>;movl %eax, -(%ebp)": 2,
                "movzwl -(%ebp), %ecx;movl -(%ebp), %esi;movl %eax, %edi;movl %ecx, %edx;shrl $, %ecx": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <ZwUnloadDriver>;movl %eax, %esi;pushl %ebx": 1,
                "calll  <RtlSubAuthoritySid+>;movl %eax, %esi;pushl %ebx;pushl -(%ebp);calll  <ObCloseHandle>": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 5,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax": 4,
                "jl  <RtlVolumeDeviceToDosName+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "cmpl %ebx, %eax;jge  <RtlVolumeDeviceToDosName+>;cmpb %bl, -(%ebp);je  <RtlVolumeDeviceToDosName+>;movl %fs:, %eax": 1,
                "cmpb %bl, -(%ebp);je  <RtlVolumeDeviceToDosName+>;movl %fs:, %eax;movl (%eax), %eax;cmpl , %eax": 1,
                "movl %ebx, -(%ebp);pushl $;pushl %eax;calll - <ExQueueWorkItem>;pushl %ebx": 1,
                "testb $, (%eax);je  <RtlVolumeDeviceToDosName+>;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "je  <RtlVolumeDeviceToDosName+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 2,
                "pushl $;movl %esi, -(%ebp);movl %edi, -(%ebp);movl %edx, -(%ebp);calll ": 1,
                "movl %esi, %ecx;calll - <IofCompleteRequest+>;movl , %eax;testl %eax, %eax;je  <RtlVolumeDeviceToDosName+>": 1,
                "calll - <RtlVolumeDeviceToDosName+>;popl %ebp;retl $;pushl %edx;pushl %edx": 1,
                "testl %edi, %edi;jne  <IoRequestDeviceEject+>;calll *;movb %al, %cl;movb %cl, (%ebp)": 1,
                "jmp  <IoRequestDeviceEject+>;movl (%ebx), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%esi), %eax;andb $-, (%eax);pushl (%ebp);calll - <IoReleaseVpbSpinLock>;pushl %edi": 1,
                "calll  <RtlCheckRegistryKey+>;movl (%ebx), %esi;testl %esi, %esi;je  <IoRequestDeviceEject+>;movl (%esi), %eax": 1,
                "movl (%esi), %edi;je  <IoRequestDeviceEject+>;andl $-, %eax;movl %eax, (%esi);cmpl $, (%esi)": 1,
                "incl -(%ebp);movl (%eax), %eax;testl %eax, %eax;jne - <IoRequestDeviceEject+>;andl %eax, (%ebp)": 1,
                "calll  <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp);je  <IoRequestDeviceEject+>;movl (%ebp), %edi": 1,
                "pushl (%ebp);calll  <ExFreePoolWithTag>;andl $, (%ebp);pushl $;pushl -(%ebp)": 1,
                "shrl $, %eax;andl $, %eax;pushl %eax;pushl %ebx;calll  <IoReportTargetDeviceChange+>": 1,
                "testb $, (%ebx);pushl %edi;je  <IoRequestDeviceEject+>;pushl $;jmp  <IoRequestDeviceEject+>": 1,
                "testb $, (%ebx);je  <IoRequestDeviceEject+>;cmpl $, (%ebp);je  <IoRequestDeviceEject+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);je  <IoRequestDeviceEject+>;cmpl $, (%ebp);jne  <IoRequestDeviceEject+>;pushl %ebx": 1,
                "divl %edi;movl %edx, (%ecx);movb %bl, %dl;movl %esi, %ecx;calll *": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;decl %eax;cmpl $, %eax": 1,
                "addb (%edx), %al;addb (%ecx), %al;addb %al, (%edx);addl %eax, (%edx);addb %al, (%edx)": 1,
                "addb %al, (%edx);addl %eax, (%edx);addb %al, (%edx);addl %eax, (%edx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %al, (%edx);addl %eax, (%edx);addb (%edx), %al": 1,
                "movb -(%ebp), %dl;movl %edi, %ecx;calll *;leal (%esi), %eax;movl (%eax), %ecx": 1,
                "pushl %edi;je  <IoRequestDeviceEject+>;movl (%ebp), %edi;testl %edi, %edi;je  <IoRequestDeviceEject+>": 1,
                "decl %eax;jne  <IoRequestDeviceEject+>;cmpl %ebx, ;je  <IoRequestDeviceEject+>;pushl (%ebp)": 1,
                "calll ;addl $, %esp;popl %ebx;popl %ebp;retl $": 1,
                "jmp  <IoRequestDeviceEject+>;movl (%eax), %eax;subl %esi, %eax;je  <IoRequestDeviceEject+>;decl %eax": 1,
                "pushl %esi;movl $, %esi;xorl %ebx, %ebx;pushl %edi;movl %esi, %ecx": 1,
                "pushl $;pushl $;pushl $;pushl %ebx;leal -(%ebp), %eax": 11,
                "cmpl %ebx, %edi;je  <IoRequestDeviceEject+>;movl , %eax;movl %edi, %esi;movl $, %edx": 1,
                "cmpl %edx, %eax;jne - <IoRequestDeviceEject+>;movl $, %ecx;calll *;cmpl %edi, %esi": 1,
                "movl %ebx, (%esi);leal -(%ebp), %eax;pushl %eax;subl %edi, %esi;sarl $, %esi": 1,
                "jns  <IoRequestDeviceEject+>;popl %esp;addb %cl, (%ebp);popal;addb %ah, (%ebx)": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);addb %ch, (%ecx);addb %al, (%si);incl %edx": 4,
                "addb %al, (%eax);incl %ebp;addb %ch, (%edx);addb %ah, %gs:(%ebx);je  <IoRequestDeviceEject+>": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %cl, %ah;int;int": 1,
                "movl %eax, (%esi);xorl %eax, %eax;movl %edx, (%esi);leal (%esi), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "pushl %ebx;calll ;popl %edi;popl %esi;popl %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax": 2,
                "movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl %eax, (%ecx)": 1,
                "addl $, %esi;addl $, %ecx;decl %edi;jne - <IoRequestDeviceEject+>;popl %edi": 1,
                "je  <KdPowerTransition+>;jle  <KdPowerTransition+>;cmpl $, (%ebp);jg  <KdPowerTransition+>;calll  <wcstombs+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll ;pushl $": 1,
                "pushl $;pushl %ebx;pushl %eax;pushl $;pushl (%ecx)": 1,
                "movl , %eax;addl -(%ebp), %eax;cmpl %edi, %eax;movl %eax, ;jb  <KdPowerTransition+>": 1,
                "pushl %eax;movl (%ebp), %eax;movl (%eax), %eax;pushl $;pushl $": 1,
                "pushl %ebx;movl $, %ebx;pushl %ebx;addl %esi, %eax;pushl $": 1,
                "movl -(%ebp), %eax;addl %esi, %eax;movl %eax, -(%ebp);jmp  <KdPowerTransition+>;movl $, %ebx": 1,
                "cmpl %edi, ;jb  <KdPowerTransition+>;movl %ebx, ;incl ;movl $, %ecx": 1,
                "pushl %eax;pushl %ebx;pushl (%esi);calll ;testl %eax, %eax": 2,
                "calll ;testl %eax, %eax;jl  <KdPowerTransition+>;movl -(%ebp), %eax;cmpl %eax, ": 1,
                "calll ;testl %eax, %eax;jl  <KdPowerTransition+>;cmpb $-, (%ebp);movl (%ebp), %eax": 1,
                "decl %eax;pushl %esi;pushl %eax;calll ;testl %eax, %eax": 1,
                "pushl (%ebp);pushl (%ebp);calll ;movb %al, (%ebp);movl %ds:, %eax": 1,
                "leal (%eax), %esi;pushl %esi;calll - <KeIAllocateGdtSelectors+>;movl $, %edi;pushl %edi": 3,
                "calll ;pushl %esi;calll - <KeIAllocateGdtSelectors+>;pushl (%ebp);calll ": 1,
                "je  <KdPowerTransition+>;testl %eax, %eax;jl - <KdPowerTransition+>;xorb %al, %al;jmp - <KdPowerTransition+>": 1,
                "movl (%ebp), %eax;movl %eax, ;popl %ebp;retl $;int": 1,
                "movl %ebx, (%ebp);movl %edx, (%ebp);movl (%ebp), %edx;testl %edx, %edx;popl %ebx": 1,
                "movl %esp, %ebp;movsbl , %ecx;movl (%ebp), %eax;cmpl %ecx, %eax;jae  <KeSetDmaIoCoherency+>": 1,
                "calll - <KeSetTargetProcessorDpc+>;movb $, %al;leave;retl $;nop": 1,
                "je  <KeReleaseInterruptSpinLock+>;calll *;movb %al, %cl;movb (%edi), %al;cmpb $, %al": 1,
                "popl %ebp;retl $;calll - <ExReleaseResourceLite+>;xorl %eax, %eax;jmp - <KeReleaseInterruptSpinLock+>": 1,
                "nop;movl -(%ebp), %esp;movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl $;jmp - <KeReleaseInterruptSpinLock+>": 1,
                "pushl $;jmp - <KeReleaseInterruptSpinLock+>;movl $, -(%ebp);calll *;orl $-, -(%ebp)": 1,
                "nop;decl %esi;movb $, %bh;addb %dl, -(%edi);incl %ebp": 1,
                "addb %cl, -;int;int;int;int": 1,
                "pushl %ecx;movl %eax, %edi;pushl %eax;jmp  <KeReleaseInterruptSpinLock+>;movl -(%ebp), %edi": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;addl $, %edi": 1,
                "calll - <sprintf>;addl $, %esp;cmpl $, (%ebp);jbe  <KeReleaseInterruptSpinLock+>;pushl -(%ebp)": 1,
                "popl %edi;popl %esi;popl %ebx;movl -(%ebp), %ecx;calll - <IoQueueWorkItem+>": 1,
                "xorl %edi, %edi;pushl %esi;calll - <MmIsAddressValid>;testb %al, %al;je  <KeDeregisterBugCheckCallback+>": 1,
                "movl -(%ebp), %eax;cmpl %eax, (%ebx);jne  <KeDeregisterBugCheckCallback+>;movl (%ebx), %ecx;movl (%ebx), %edx": 1,
                "movl (%ebx), %edx;movl (%ebx), %esi;movl (%ebx), %eax;addl %esi, %eax;addl %edx, %eax": 1,
                "calll *%esi;movb $, (%ebx);jmp  <KeDeregisterBugCheckCallback+>;nop;nop": 1,
                "jne  <KeDeregisterBugCheckReasonCallback+>;movl %ebx, %esi;movl %esi, -(%ebp);movl %ebx, %edi;andl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jb - <KeDeregisterBugCheckReasonCallback+>;movl -(%ebp), %eax;cmpl %eax, (%ebx);jne  <KeDeregisterBugCheckReasonCallback+>": 1,
                "jne - <KeDeregisterBugCheckReasonCallback+>;cmpl %eax, (%esi);jne - <KeDeregisterBugCheckReasonCallback+>;cmpl $, %ecx;jne - <KeDeregisterBugCheckReasonCallback+>": 1,
                "movb $, (%esi);orl $-, -(%ebp);jmp - <KeDeregisterBugCheckReasonCallback+>;nop;nop": 1,
                "jne  <KeDeregisterBugCheckReasonCallback+>;calll - <KeDeregisterBugCheckCallback+>;pushl $;calll *;calll - <KiCoprocessorError+>": 1,
                "calll - <KeDeregisterBugCheckCallback+>;pushl $;calll *;calll - <KiCoprocessorError+>;movl %ds:, %eax": 1,
                "jne  <KeDeregisterBugCheckReasonCallback+>;movl %ecx, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %esi;movl -(%ebp), %edx": 1,
                "movl (%ebp), %eax;movl -(%ebp), %esi;movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %eax, ": 1,
                "je  <KeDeregisterBugCheckReasonCallback+>;movl (%ebp), %eax;subl $, %eax;je  <KeDeregisterBugCheckReasonCallback+>;subl $, %eax": 1,
                "movl (%eax), %esi;leal -(%ebp), %eax;pushl %eax;pushl $;leal -(%ebp), %eax": 1,
                "calll - <KeReleaseInterruptSpinLock+>;movb -(%ebp), %bl;movl %eax, -(%ebp);jmp  <KeDeregisterBugCheckReasonCallback+>;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;movb $, %bl;movl -(%ebp), %edi;pushl %edi;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "movl -(%ebp), %edi;pushl %edi;calll  <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;jne  <KeDeregisterBugCheckReasonCallback+>": 1,
                "movl $, ;jmp  <KeDeregisterBugCheckReasonCallback+>;movl %esi, ;movl (%ebx), %eax;movl %eax, ": 1,
                "movl %eax, ;jmp  <KeDeregisterBugCheckReasonCallback+>;cmpl , %ecx;jb  <KeDeregisterBugCheckReasonCallback+>;cmpl , %ecx": 1,
                "jae  <KeDeregisterBugCheckReasonCallback+>;movl $, ;jmp  <KeDeregisterBugCheckReasonCallback+>;cmpl , %ecx;jb  <KeDeregisterBugCheckReasonCallback+>": 2,
                "pushl $;calll - <DbgPrint>;addl $, %esp;cmpb $, ;jne  <KeDeregisterBugCheckReasonCallback+>": 1,
                "cmpb $, ;jne  <KeDeregisterBugCheckReasonCallback+>;cmpl %esi, ;je  <KeDeregisterBugCheckReasonCallback+>;leal -(%ebp), %eax": 1,
                "je  <KeDeregisterBugCheckReasonCallback+>;cmpl %esi, -(%ebp);je  <KeDeregisterBugCheckReasonCallback+>;pushl -(%ebp);calll - <DbgPrint>": 1,
                "je  <KeDeregisterBugCheckReasonCallback+>;pushl -(%ebp);calll - <DbgPrint>;popl %ecx;pushl $": 1,
                "pushl %esi;pushl %esi;pushl %esi;pushl $;movl %eax, -(%ebp)": 1,
                "movb $, -(%ebp);calll - <HeadlessDispatch>;pushl %esi;pushl %esi;pushl $": 1,
                "pushl %eax;pushl $;calll - <HeadlessDispatch>;calll - <InbvIsBootDriverInstalled>;testb %al, %al": 1,
                "pushl %esi;calll - <InbvSolidColorFill>;pushl $;calll - <InbvSetTextColor>;pushl %esi": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl ;calll - <KeReleaseInterruptSpinLock+>": 1,
                "calll - <InbvNotifyDisplayOwnershipLost+>;pushl $;calll - <InbvDisplayString>;pushl %esi;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeReleaseInterruptSpinLock+>;jmp  <KeDeregisterBugCheckReasonCallback+>;cmpl %esi, -(%ebp)": 1,
                "movl %ds:, %eax;movl $, %ebx;leal (%eax), %edi;movl %ebx, %ecx;leal -(%ebp), %esi": 1,
                "je  <KeDeregisterBugCheckReasonCallback+>;decl %eax;je  <KeDeregisterBugCheckReasonCallback+>;subl $, %eax;jne  <KeDeregisterBugCheckReasonCallback+>": 1,
                "subl $, %eax;jne  <KeDeregisterBugCheckReasonCallback+>;movl -(%ebp), %eax;cmpb $, (%eax);movl %eax, -(%ebp)": 1,
                "testb $, (%eax);je  <KeDeregisterBugCheckReasonCallback+>;movzwl (%eax), %edx;orl $, %edx;jmp - <KeDeregisterBugCheckReasonCallback+>": 1,
                "orb $, ;movl , %eax;movl $, %edi;movl $, %esi;pushl %edi": 1,
                "pushl %edi;andl %esi, %eax;pushl %eax;calll - <IoCsqRemoveIrp+>;movl , %eax": 4,
                "leal -(%ebp), %eax;pushl %eax;pushl ;pushl ;pushl ": 1,
                "pushl ;calll - <KeCapturePersistentThreadState+>;xorl %esi, %esi;calll - <KeDeregisterBugCheckCallback+>;cmpb $, -(%ebp)": 1,
                "insl %dx, %es:(%edi);andb %al, (%ebp);jb  <KeDeregisterBugCheckReasonCallback+>;jb  <KeDeregisterBugCheckReasonCallback+>;andb %dh, (%eax)": 1,
                "js  <KeDeregisterBugCheckReasonCallback+>;xorb %bh, (%eax);insb %dx, %es:(%edi);js  <KeDeregisterBugCheckReasonCallback+>;andb %ah, (%eax)": 1,
                "js  <KeDeregisterBugCheckReasonCallback+>;andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax)": 1,
                "addb %al, (%edx,%esi,);jbe  <KeDeregisterBugCheckReasonCallback+>;jb  <KeDeregisterBugCheckReasonCallback+>;popal;je  <KeDeregisterBugCheckReasonCallback+>": 1,
                "decl %edi;pushl %eax;cmpb (%eax), %ah;xorb %bh, (%eax);xorb %bh, (%eax)": 1,
                "pushl %edi;leal (%esi,%eax), %ebx;calll *;andl $, (%ebp);movb %al, (%ebp)": 1,
                "movl (%edi), %edi;leal -(%esi), %ecx;cmpl %ecx, %edx;jbe  <KeBugCheckEx+>;cmpl %ebx, %edx": 1,
                "cmpl %esi, %edx;jb  <KeBugCheckEx+>;cmpl %ebx, %edx;jb  <KeBugCheckEx+>;cmpl %eax, %edi": 1,
                "jb  <KeBugCheckEx+>;cmpl %ebx, %edx;jb  <KeBugCheckEx+>;cmpl %eax, %edi;jne - <KeBugCheckEx+>": 1,
                "popl %esi;popl %ebx;popl %ebp;retl $;pushl %ebx": 4,
                "nop;xorl %eax, %eax;incl %eax;retl $;nop": 4,
                "calll *;movb %al, %bl;movl %ds:, %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;calll - <FsRtlLegalAnsiCharacterArray+>;movzwl (%ebp), %ecx;addl %ecx, %eax": 1,
                "addl %ecx, %eax;testb $-, (%eax);je  <KeBugCheckEx+>;xorl %ecx, %ecx;movb (%eax), %ch": 1,
                "incl %eax;cmpb $, ;movl %eax, -(%ebp);jne  <KeIGetLid+>;movl $, %eax": 1,
                "calll  <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi;movl %edi, ;jne  <KeIGetLid+>": 1,
                "xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl , %edi;pushl %ebx;pushl %esi": 1,
                "movl (%ebp), %eax;movw %si, (%eax);jmp - <KeIGetLid+>;cmpw $, (%ebp);je  <KeIGetLid+>": 1,
                "calll *;movzwl (%ebp), %edx;movl , %ecx;shll $, %edx;leal (%edx,%ecx), %esi": 1,
                "jne - <KeIReleaseLid+>;andl $, (%edx);jmp - <KeIReleaseLid+>;movl $, %esi;movb %al, %cl": 1,
                "movl (%eax), %esi;pushl %edi;movl (%eax), %edi;movl %esi, -(%ebp);pushl -(%ebp)": 1,
                "pushl %eax;calll - <FsRtlLegalAnsiCharacterArray+>;popl %edi;xorl %eax, %eax;popl %esi": 1,
                "xorl %eax, %eax;popl %esi;leave;retl $;int": 4,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %edi;calll *": 1,
                "pushl %esi;movl (%ebp), %esi;movzwl %cx, %ebx;movzwl (%esi), %edx;movl , %ecx": 1,
                "movb %bl, (%edx);movb %bh, (%edx);movl (%edx), %ecx;andl $, %ecx;orl $, %ecx": 1,
                "orl $, %ecx;xorl %edi, %edi;movl %ecx, (%edx);incl %edi;cmpb $, ": 1,
                "cmpb %dl, (%esi);je  <KeRemoveByKeyDeviceQueueIfBusy+>;leal (%esi), %eax;movl (%eax), %ecx;cmpl %eax, %ecx": 1,
                "popl %edi;je  <KeRemoveByKeyDeviceQueueIfBusy+>;movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx)": 1,
                "movb (%eax), %cl;movsbl %cl, %edi;testl %edi, %edi;je  <KeRemoveEntryDeviceQueue+>;decb %cl": 1,
                "cmpb $, (%ecx);jne  <KeRemoveEntryDeviceQueue+>;movsbl (%ecx), %edx;addl (%ebp), %edx;movsbl %al, %eax": 1,
                "incl (%eax);popl %edi;popl %esi;jne  <KeQueryPriorityThread+>;leal (%eax), %ecx": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %fs:, %eax;movl , %esi": 1,
                "je  <KeQueryPriorityThread+>;cmpb $, (%esi);jne  <KeQueryPriorityThread+>;leal (%esi), %ecx;movb (%ecx), %al": 1,
                "movsbl %al, %edx;incb %al;testl %edx, %edx;movb %al, (%ecx);jne  <KeQueryPriorityThread+>": 1,
                "jb  <KeRaiseUserException+>;movb $, (%ecx);movb (%eax), %cl;movb %cl, (%eax);movb (%eax), %cl": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);orl $-, -(%ebp);pushl %eax;pushl %esi": 1,
                "movl %eax, (%esi);movl %edi, %eax;jmp  <KeRaiseUserException+>;nop;nop": 1,
                "movl %edi, %eax;jmp  <KeRaiseUserException+>;nop;nop;nop": 1,
                "cli;rolb %cl, (%ebp);int;int;int": 1,
                "rolb %cl, (%ebp);int;int;int;int": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);calll - <RtlCaptureContext>;pushl (%ebp)": 1,
                "movl $, (%esi);jmp  <KeSaveStateForHibernate+>;andl $, (%esi);jmp  <KeSaveStateForHibernate+>;movl $, (%esi)": 1,
                "jmp  <KeSaveStateForHibernate+>;andl $, (%esi);jmp  <KeSaveStateForHibernate+>;movl $, (%esi);jmp  <KeSaveStateForHibernate+>": 1,
                "imull %eax, %edx;movl -(%ebp), %eax;incl %eax;imull %eax, %edx;movl %edx, (%esi)": 1,
                "decl %eax;notl %eax;andl %eax, %edx;cmpb $, ;jbe  <KeSaveStateForHibernate+>": 1,
                "movb (%ecx), %cl;xorl %esi, %esi;incl %esi;shll %cl, %esi;movl -(%ebp), %ecx": 1,
                "nop;nop;nop;nop;calll  <KeSaveStateForHibernate+>": 1,
                "calll  <KeSaveStateForHibernate+>;calll  <KeSaveStateForHibernate+>;jmp - <IoEnumerateDeviceObjectList+>;int;int": 1,
                "movb (%eax), %al;xorl %ebx, %ebx;cmpl %ebx, (%ecx);movb %al, -(%ebp);je  <KeSaveStateForHibernate+>": 1,
                "orb %dl, %al;testl $, %ecx;jne  <KeSaveStateForHibernate+>;orb $, %al;orl $, %ecx": 1,
                "testl $, %ecx;jne  <KeSaveStateForHibernate+>;orb $, %al;orl $, %ecx;movl %ecx, (%esi)": 1,
                "movl %eax, (%esi);cmpb %al, -(%ebp);je  <KeSaveStateForHibernate+>;movb %al, %cl;calll - <KiDispatchInterrupt+>": 1,
                "pushl %esi;pushl %edi;movl %ds:, %eax;movl (%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "movzbw -(%ebp), %dx;xorl %edi, %edi;shrl $, %ecx;shll $, %eax;subl %edi, %ecx": 1,
                "subl %edi, %ecx;movb $, %bl;je - <KeSaveStateForHibernate+>;decl %ecx;decl %ecx": 1,
                "movb $, %bl;je - <KeSaveStateForHibernate+>;decl %ecx;decl %ecx;je  <KeSaveStateForHibernate+>": 1,
                "movb $, %bl;jne  <KeSaveStateForHibernate+>;movl -(%ebp), %eax;pushl $;popl %edi": 1,
                "cmpl $, -(%ebp);jb - <KeSaveStateForHibernate+>;popl %edi;popl %esi;popl %ebx": 1,
                "xorl %eax, %eax;jmp  <KeSaveStateForHibernate+>;addl $, %eax;movl $, %edi;movl %eax, %esi": 1,
                "addl $, %eax;movl $, %edi;movl %eax, %esi;movb (%esi), %dl;movb %dl, %cl": 1,
                "movb %dl, %cl;cmpb (%edi), %dl;jne  <KeSaveStateForHibernate+>;incl %esi;incl %esi": 1,
                "decl %eax;je  <KeSaveStateForHibernate+>;movl -(%ebp), %eax;movsbl (%eax), %eax;movl (%ebp), %ecx": 1,
                "leal (%eax,%eax,), %eax;shll $, %eax;movb $, (%eax,%ecx);movb $, %bl;jmp  <KeSaveStateForHibernate+>": 1,
                "pushl $;calll - <IoEnumerateDeviceObjectList+>;movl -(%ebp), %eax;andl $, %eax;cmpl $, %eax": 1,
                "andl $, %eax;cmpl $, %eax;jbe  <KeSaveStateForHibernate+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl $, %eax;cmpl %eax, %esi;jb  <KeSaveStateForHibernate+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "jb  <KeSaveStateForHibernate+>;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %eax;calll - <IoEnumerateDeviceObjectList+>;movl -(%ebp), %eax;testb $-, %ah;je  <KeSaveStateForHibernate+>": 1,
                "je  <KeSaveStateForHibernate+>;shrl $, %eax;andl $, %eax;jmp  <KeSaveStateForHibernate+>;incb %al": 1,
                "jb  <KeSaveStateForHibernate+>;pushl (%ebp);calll - <KeSaveStateForHibernate+>;jmp  <KeSaveStateForHibernate+>;leal -(%ebp), %eax": 1,
                "calll - <KeSaveStateForHibernate+>;jmp  <KeSaveStateForHibernate+>;leal -(%ebp), %eax;pushl %eax;pushl %eax": 1,
                "pushl %esi;pushl %esi;calll - <IoEnumerateDeviceObjectList+>;cmpl $, -(%ebp);jb  <KeSaveStateForHibernate+>": 1,
                "pushl %esi;calll - <IoEnumerateDeviceObjectList+>;cmpl $, -(%ebp);jb  <KeSaveStateForHibernate+>;cmpl $, -(%ebp)": 1,
                "pushl (%ebp);shrl $, %ebx;incb %bl;calll - <KeSaveStateForHibernate+>;movl -(%ebp), %eax": 1,
                "shrl %cl, %eax;xorl %ecx, %ecx;xorl %edi, %edi;incl %edi;movb (%eax), %cl": 1,
                "movl (%ecx), %ebx;cmpl (%esi), %ebx;jne  <KeSaveStateForHibernate+>;movb (%ecx), %cl;xorl %ebx, %ebx": 2,
                "nop;nop;nop;nop;jmp  <IoUnregisterShutdownNotification+>": 1,
                "je  <KeSaveStateForHibernate+>;movw $, (%esi);movw $, (%esi);movb $, (%esi);jmp  <KeSaveStateForHibernate+>": 1,
                "movw $, (%esi);movb $, (%esi);jmp  <KeSaveStateForHibernate+>;movl (%esi), %ebx;testl %ebx, %ebx": 1,
                "leal (%ebx), %ecx;leal -(%ebp), %edx;calll *;cmpb $, (%esi);je  <KeSaveStateForHibernate+>": 1,
                "pushl %ebx;xorl %eax, %eax;pushl %edi;xorl %ebx, %ebx;movw %bx, -(%ebp)": 1,
                "andb $, %al;cmpb $, %al;je  <KeSaveStateForHibernate+>;xorb %al, %al;jmp  <KeSaveStateForHibernate+>": 1,
                "calll *;cmpb $, (%ebp);je  <KeSaveStateForHibernate+>;testl $, %edi;jne  <KeSaveStateForHibernate+>": 1,
                "cmpb $, (%ebp);je  <KeSaveStateForHibernate+>;testl $, %edi;jne  <KeSaveStateForHibernate+>;pushl $": 1,
                "movzbl -(%ebp), %ecx;movzwl -(%ebp), %edx;shll $, %eax;orl %ecx, %eax;movzwl -(%ebp), %ecx": 1,
                "orl %ecx, %eax;movzwl -(%ebp), %ecx;shll $, %eax;orl %ecx, %eax;movl %edi, %ecx": 1,
                "shll $, %eax;orl %ecx, %eax;movl %edi, %ecx;andl %esi, %ecx;orl %edx, %ecx": 1,
                "incl %ebx;testb $, %dl;je  <KeSaveStateForHibernate+>;pushl $;popl %ebx": 1,
                "movl %eax, (%edx);movl (%ebp), %eax;movl %ecx, (%eax);movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "movl %ecx, %cr;movw (%ebp), %ax;movw %ax, (%edx);movw (%ebp), %ax;movw %ax, (%esi)": 1,
                "pushl $;pushl $;calll - <_CIsqrt+>;movb $, -(%ebp);movb $, -(%ebp)": 3,
                "movb %al, -(%ebp);sti;andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "jbe  <KeSaveStateForHibernate+>;movb $, -(%ebp);cmpb $, -(%ebp);jne - <KeSaveStateForHibernate+>;leal -(%ebp), %eax": 1,
                "orl $-, -(%ebp);jmp  <KeSaveStateForHibernate+>;incl -(%ebp);jmp - <KeSaveStateForHibernate+>;nop": 1,
                "jmp - <KeSaveStateForHibernate+>;nop;nop;nop;nop": 1,
                "nop;movl -(%ebp), %esp;orl $-, -(%ebp);movl (%ebp), %edi;cli": 1,
                "jmp  <KeSaveStateForHibernate+>;cmpb $, %bl;jne  <KeSaveStateForHibernate+>;movl %fs:, %eax;movzbl (%eax), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%edi);movl (%edi), %ecx;andl $, %ecx;movzwl %ax, %eax": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);cmpb (%eax), %bl;je  <KeSaveStateForHibernate+>;cmpb (%eax), %bl": 1,
                "movl %esi, -(%ebp);xorl %edx, %edx;incl %edx;movb %bl, %cl;shll %cl, %edx": 1,
                "jne  <KeSaveStateForHibernate+>;calll - <KeSaveStateForHibernate+>;xorl %ebx, %ebx;movb %al, %bh;leal -(%ebp), %eax": 1,
                "calll - <KeSaveStateForHibernate+>;movb %al, -(%ebp);movsbl %al, %eax;movl %eax, -(%ebp);addl -(%ebp), %esi": 1,
                "movl %esi, -(%ebp);cmpl $, (%edi);jne  <KeSaveStateForHibernate+>;testb $, (%edi);je  <KeSaveStateForHibernate+>": 1,
                "testb $, (%edi);je  <KeSaveStateForHibernate+>;movl , %eax;cmpl %eax, %esi;jb  <KeSaveStateForHibernate+>": 1,
                "popl %esi;loope ;addb %ah, -(%edi);incl %ebp;addb %bh, %bh": 1,
                "addl $, %ecx;shrl %cl, %eax;movb (%eax), %al;addb %cl, %al;popl %ebp": 1,
                "movl (%ebx), %esi;movl (%ebp), %eax;movl (%eax), %edx;movl %edx, -(%ebp);xorl %ecx, %ecx": 1,
                "movl %eax, -(%ebp);movb (%eax), %cl;movb %cl, -(%ebp);testb %cl, %cl;je  <KeSaveStateForHibernate+>": 1,
                "cmpb $-, (%esi);jne  <KeSaveStateForHibernate+>;movl (%esi), %eax;leal (%eax,%esi), %edi;movl %edi, -(%ebp)": 2,
                "movl (%esi), %eax;leal (%eax,%esi), %edi;movl %edi, -(%ebp);pushl $;pushl %edi": 2,
                "cmpb $-, %al;jne  <KeSaveStateForHibernate+>;cmpb $-, (%esi);jne  <KeSaveStateForHibernate+>;cmpw $, (%esi)": 1,
                "movl %eax, (%ecx);movl (%ebp), %eax;movl %edi, (%eax);movl %edi, (%ebx);movl $, -(%ebp)": 1,
                "subl $, %esp;cmpb $, ;pushl %ebx;pushl %esi;je  <KeSaveStateForHibernate+>": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl $, %esi": 1,
                "calll *;movb %al, %bl;leal -(%ebp), %eax;pushl %eax;calll  <KeISetGdtSelector+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <KeISetGdtSelector+>;movb %bl, %dl;movl %esi, %ecx": 1,
                "je  <KeSaveStateForHibernate+>;movl $, %esi;movl %esi, %ecx;calll *;pushl $": 1,
                "movl (%ebp), %ebx;cmpl $, %ebx;jb  <KeSaveStateForHibernate+>;movl $, %eax;testl %ebx, %eax": 1,
                "testl %ecx, %ecx;jne  <KeSaveStateForHibernate+>;pushl %ecx;pushl %edx;pushl %ebx": 1,
                "jne  <KeSaveStateForHibernate+>;testl %edx, %eax;jne  <KeSaveStateForHibernate+>;xorl %eax, %eax;pushl $": 1,
                "movb $, -(%ebp);movb $, -(%ebp);je  <KeSaveStateForHibernate+>;decl %eax;je  <KeSaveStateForHibernate+>": 1,
                "cmpb $, -(%ebp);movb %al, -(%ebp);je  <KeSaveStateForHibernate+>;leal -(%ebp), %eax;pushl %eax": 1,
                "stosb %al, %es:(%edi);je  <KeSaveStateForHibernate+>;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "pushl %eax;calll  <KeISetGdtSelector+>;movl -(%ebp), %esi;cmpb $, -(%ebp);je  <KeSaveStateForHibernate+>": 1,
                "je  <KeSaveStateForHibernate+>;leal -(%ebp), %eax;pushl %eax;calll  <KeISetGdtSelector+>;movb -(%ebp), %dl": 1,
                "xorl %edi, %edi;testb $, (%ebp);je  <KeSaveStateForHibernate+>;andl $-, (%ebp);jmp  <KeSaveStateForHibernate+>": 1,
                "jmp  <KeSaveStateForHibernate+>;incl %edi;pushl -(%ebp);pushl $;pushl $": 1,
                "cmpl -(%ebp), %edi;je  <KeSaveStateForHibernate+>;cmpl $, -(%ebp);jne - <KeSaveStateForHibernate+>;cmpl $, %ebx": 1,
                "calll - <RtlInsertElementGenericTableAvl+>;movl (%ebp), %eax;subl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "movl %ecx, -(%ebp);movl %esi, -(%ebp);cmpl $, (%ebp);je  <KeSaveStateForHibernate+>;cmpl $, -(%ebp)": 1,
                "je  <KeSaveStateForHibernate+>;cmpl $, -(%ebp);jge  <KeSaveStateForHibernate+>;cmpl $, -(%ebp);jbe  <KeSaveStateForHibernate+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;pushl %ebx": 3,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%ebp), %eax;movl (%esi), %ebx": 1,
                "movl (%ebp), %eax;movl (%esi), %ebx;pushl %edi;pushl (%eax);shll $, %ecx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;testl %eax, %eax;pushl %edi;movl %eax, (%ebp)": 1,
                "testl %eax, %eax;pushl %edi;movl %eax, (%ebp);jne  <KeSaveStateForHibernate+>;movl , %eax": 1,
                "popl %ebx;popl %ebp;retl $;pushl (%edi);pushl %ebx": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;testl %ebx, %ebx;pushl %esi": 1,
                "movl %eax, (%edi);movl (%ebp), %eax;subl %eax, (%esi);movl %edx, %edi;movl (%edx), %edx": 1,
                "subl %eax, (%esi);movl %edx, %edi;movl (%edx), %edx;cmpl %esi, %edx;jne - <KeSaveStateForHibernate+>": 1,
                "je  <KeSaveStateForHibernate+>;pushl (%ebx);pushl (%ebx);pushl (%ebp);pushl $": 1,
                "pushl (%ebp);pushl $;pushl $;calll - <KeBugCheckEx>;pushl %eax": 1,
                "pushl $;pushl %edi;calll  <ExFreePoolWithTag>;popl %edi;xorl %eax, %eax": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax": 4,
                "movl , %eax;movl (%eax), %esi;testl %esi, %esi;jne  <KeSaveStateForHibernate+>;xorl %eax, %eax": 2,
                "xorl %esi, %esi;movb %al, %cl;calll *;movl %esi, %eax;popl %edi": 2,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%esi), %eax": 2,
                "movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;shll $, %esi;cmpl %edi, %ebx": 1,
                "jne  <KeSaveStateForHibernate+>;testl %ebx, %ebx;je  <KeSaveStateForHibernate+>;testb $, (%ebx);jne  <KeSaveStateForHibernate+>": 1,
                "testb $, (%ebx);jne  <KeSaveStateForHibernate+>;cmpl %edi, ;jne  <KeSaveStateForHibernate+>;movl (%edx), %eax": 1,
                "cmpl %eax, (%edx);jne  <KeSaveStateForHibernate+>;movl (%edx), %eax;cmpl (%ebx), %eax;jne  <KeSaveStateForHibernate+>": 1,
                "pushl $;calll - <KeBugCheckEx>;pushl %edi;pushl %ebx;pushl %edx": 1,
                "pushl %edi;pushl %ebx;pushl %edx;pushl $;jmp - <KeSaveStateForHibernate+>": 1,
                "pushl %eax;pushl (%edx);pushl %edx;pushl $;jmp - <KeSaveStateForHibernate+>": 2,
                "movl (%ebp), %eax;movb (%ebp), %cl;subl %eax, ;calll *;testl %edi, %edi": 1,
                "movl $, %ecx;jae  <KeSaveStateForHibernate+>;calll - <InterlockedPopEntrySList>;xorl %ecx, %ecx;jmp  <KeSaveStateForHibernate+>": 1,
                "testl %eax, %eax;jne  <KeSaveStateForHibernate+>;movb $, ;retl;cmpl $, %ecx": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <KeSaveStateForHibernate+>;pushl %esi;movl (%eax), %esi": 1,
                "cmpl %eax, %ecx;je - <KeSaveStateForHibernate+>;movl %ecx, %edx;cmpl $, %edx;movl %eax, -(%ebp)": 1,
                "jb  <KeSaveStateForHibernate+>;movl (%edx), %ebx;addl %eax, %ebx;cmpl %ebx, %esi;jae  <KeSaveStateForHibernate+>": 1,
                "addl (%ecx), %edi;movl (%ecx), %ecx;movl $, %esi;cmpl %esi, %ecx;jne - <KeSaveStateForHibernate+>": 1,
                "movl -(%ebp), %eax;popl %esi;leave;retl $;int": 5,
                "leal (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;addl (%esi), %eax;pushl %edi": 1,
                "movl (%ebp), %eax;movl %eax, (%ebp);pushl $;leal (%esi), %eax;pushl $": 1,
                "pushl $;leal (%esi), %eax;pushl $;movl %eax, -(%ebp);calll - <KeFlushEntireTb>": 1,
                "orl $, %ebx;jmp  <MmMapLockedPagesWithReservedMapping+>;pushl %ecx;pushl %eax;pushl %edi": 1,
                "movl , %edi;movl %edx, %eax;shrl $, %eax;movl (%edi,%eax,), %eax;movl %edx, %ecx": 1,
                "andl $, %ecx;subl $, %ecx;je  <MmMapLockedPagesWithReservedMapping+>;decl %ecx;je  <MmMapLockedPagesWithReservedMapping+>": 1,
                "cmpb $, ;jne - <MmMapLockedPagesWithReservedMapping+>;andl $-, %ebx;orl $, %ebx;jmp  <MmMapLockedPagesWithReservedMapping+>": 1,
                "orl $, %ebx;jmp  <MmMapLockedPagesWithReservedMapping+>;cmpl $, (%ebp);je  <MmMapLockedPagesWithReservedMapping+>;incl ": 1,
                "movl %ebx, (%ecx,%eax);addl $, %eax;decl (%ebp);movl %eax, -(%ebp);jne - <MmMapLockedPagesWithReservedMapping+>": 1,
                "je  <MmMapLockedPagesWithReservedMapping+>;calll *;orb $, (%esi);movw (%esi), %ax;testb $, %al": 1,
                "subl $, %eax;pushl %ebx;andl $-, %edx;cmpl %edx, %ecx;pushl %esi": 1,
                "andl $-, %edx;cmpl %edx, %ecx;pushl %esi;pushl %edi;leal -(%eax), %ebx": 1,
                "pushl (%ebp);pushl $;jmp  <MmUnmapReservedMapping+>;movl (%ebx), %ecx;shrl %ecx": 1,
                "jmp  <MmUnmapReservedMapping+>;movl (%ebx), %ecx;shrl %ecx;cmpl $, %ecx;ja  <MmUnmapReservedMapping+>": 1,
                "cmpl $, %ecx;ja  <MmUnmapReservedMapping+>;pushl %ecx;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl $;jmp  <MmUnmapReservedMapping+>;movl (%ebp), %edx;movl (%edx), %esi": 1,
                "pushl $;jmp  <MmUnmapReservedMapping+>;testb $, (%edx);je  <MmUnmapReservedMapping+>;addl (%edx,%esi,), %esi": 1,
                "testb $, (%edx);je  <MmUnmapReservedMapping+>;addl (%edx,%esi,), %esi;movl %esi, %edx;shll $, %edx": 1,
                "cmpl %ecx, %eax;jb - <MmUnmapReservedMapping+>;pushl ;leal (%ebx), %edi;pushl %edx": 1,
                "pushl %edi;calll - <RtlFillMemoryUlong>;cmpl $, %esi;jne  <MmUnmapReservedMapping+>;movl , %eax": 1,
                "movl , %eax;movl %eax, (%edi);movl (%ebp), %eax;invlpg (%eax);jmp  <MmUnmapReservedMapping+>": 1,
                "subl %edx, %ebx;cmpl %ebx, %ecx;jae  <MmAdvanceMdl+>;subl %ecx, %eax;addl %ecx, %edx": 1,
                "jmp  <MmAdvanceMdl+>;movl (%ebp), %edi;testl %ecx, %ecx;je  <MmAdvanceMdl+>;subl %ecx, (%esi)": 1,
                "movl %ecx, %eax;shll $, %eax;addl %eax, (%esi);andl $, %edx;addl %ecx, %edi": 1,
                "je  <MmAdvanceMdl+>;cmpl $, ;jne  <MmAdvanceMdl+>;pushl %edi;pushl %esi": 1,
                "testl %eax, %eax;movw (%esi), %cx;leal (%esi), %ebx;movl %ebx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "testl %edi, %edi;movb %al, (%ebp);jbe  <MmAdvanceMdl+>;movl -(%ebp), %eax;andl $, %eax": 1,
                "testb $, %ah;movl (%edi), %ecx;jne  <MmAdvanceMdl+>;testb $, %cl;jne  <MmAdvanceMdl+>": 1,
                "jne  <MmAdvanceMdl+>;cmpl $, (%edi);jb  <MmAdvanceMdl+>;decl ;decw (%edi)": 1,
                "movl %eax, %ecx;calll - <wcscmp+>;movl (%ebp), %edi;addl $, %ebx;decl -(%ebp)": 1,
                "movl %esi, %edi;movl %esi, %ecx;shrl $, %edi;andl $, %ecx;andl $, %edi": 1,
                "je  <MmProtectMdlSystemAddress+>;pushl $;pushl $;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "movl %eax, -(%ebp);jne  <MmProtectMdlSystemAddress+>;movl $, %eax;jmp  <MmProtectMdlSystemAddress+>;movl %ebx, %ecx": 1,
                "je  <MmProtectMdlSystemAddress+>;movl %ecx, %esi;movl $, -(%ebp);shrl $, %esi;movl %ecx, (%ebp)": 1,
                "shrl $, %esi;xorl %eax, (%ebp);cmpl $, -(%ebp);jne  <MmProtectMdlSystemAddress+>;movl (%ebp), %eax": 1,
                "movl -(%ebp), %ecx;orl (,%ecx,), %eax;shll $, %esi;orl %esi, %eax;testb $, %cl": 1,
                "movl -(%ebp), %eax;cmpl $, %eax;je  <MmProtectMdlSystemAddress+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp,%eax,)": 1,
                "cmpl %esi, %ecx;jne - <MmProtectMdlSystemAddress+>;movl -(%ebp), %ecx;movl %edx, (%ecx);movl %esi, (%ecx)": 1,
                "calll *;testl %ebx, %ebx;je  <MmProtectMdlSystemAddress+>;pushl $;pushl -(%ebp)": 1,
                "pushl -(%ebp);jmp  <MmProtectMdlSystemAddress+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, (%ecx)": 1,
                "jmp - <MmProtectMdlSystemAddress+>;jmp  <MmProtectMdlSystemAddress+>;movl (%ecx), %ebx;movl (%ecx), %esi;movl %esi, (%ebx)": 1,
                "movl (%ebp), %ebx;cmpl (%ecx), %ebx;jb  <MmProtectMdlSystemAddress+>;cmpl (%ecx), %ebx;jb  <MmProtectMdlSystemAddress+>": 1,
                "cmpl (%ecx), %ebx;jb  <MmProtectMdlSystemAddress+>;cmpl (%ecx), %ebx;jb  <MmProtectMdlSystemAddress+>;movl (%ecx), %ecx": 1,
                "jne - <MmProtectMdlSystemAddress+>;movl %esi, %ecx;calll *;xorl %eax, %eax;popl %esi": 1,
                "andl $, %esi;shll $, %eax;addl %esi, %eax;popl %esi;popl %ebp": 1,
                "addl %esi, %eax;popl %esi;popl %ebp;retl $;nop": 3,
                "movl (%ebp), %edx;andl $, %ecx;addl $, %edx;shll $, %ecx;pushl %esi": 1,
                "pushl %esi;movl (%edx), %eax;movl , %esi;leal (%eax,%eax,), %eax;leal (%esi,%eax,), %eax": 1,
                "movl (%eax), %esi;andl $, %esi;orl %ecx, %esi;addl $, %edx;decl (%ebp)": 1,
                "pushl %edi;movl %ebx, %edi;shll $, %edi;shrl $, %ecx;negl %esi": 1,
                "movl %eax, -(%ebp);movl %eax, (%ebx);calll - <KiDispatchInterrupt+>;addl $, (%ebp);addl $, %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "leal (%ecx,%edx), %esi;shrl $, %esi;testl %eax, %eax;movl %edi, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %esi, -(%ebp);je  <MmMapMemoryDumpMdl+>;pushl $;popl %eax;movl (%ebp), %ecx": 1,
                "popl %eax;movl (%ebp), %ecx;addl %ecx, %eax;movl (,%eax,), %eax;cmpl $, %eax": 1,
                "rep  stosl %eax, %es:(%edi);movl (%esi), %eax;orb $, (%esi);andl $, %eax;orl $, %eax": 1,
                "jbe  <MmMapMemoryDumpMdl+>;movl , %eax;addl $, %eax;cmpl %eax, %edi;ja  <MmMapMemoryDumpMdl+>": 1,
                "movl , %ecx;shrl $, %eax;leal (%ecx,%eax,), %eax;incw (%eax);movl (%edi), %edx": 1,
                "cmpw $, -(%ebp);je  <MmMapMemoryDumpMdl+>;cmpl , %edx;ja  <MmMapMemoryDumpMdl+>;movl , %ebx": 1,
                "movl %edx, %ecx;andl $, %ecx;shrl %cl, %edi;andl $, %edi;movl %edi, -(%ebp)": 1,
                "je  <MmMapMemoryDumpMdl+>;decl %edx;je  <MmMapMemoryDumpMdl+>;decl %edx;jne  <MmMapMemoryDumpMdl+>": 2,
                "andl $-, %eax;orl $, %eax;jmp  <MmMapMemoryDumpMdl+>;cmpl $, (%ebp);je  <MmMapMemoryDumpMdl+>": 1,
                "cmpl $, -(%ebp);jne - <MmMapMemoryDumpMdl+>;pushl -(%ebp);pushl %ebx;calll  <KeISetGdtSelector+>": 1,
                "movl -(%ebp), %eax;movl %ecx, (%eax);calll - <ObfReferenceObject>;addl $, -(%ebp);movl (%esi), %esi": 1,
                "addl $, -(%ebp);movl (%esi), %esi;cmpl %edi, %esi;jne - <MmMapMemoryDumpMdl+>;movb -(%ebp), %cl": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;xorl %eax, %eax;pushl %esi": 2,
                "shrl $, %esi;xorl %edx, %edx;divl %esi;cmpl %ecx, %eax;ja  <MmMapMemoryDumpMdl+>": 1,
                "xorl %edx, %edx;divl %esi;cmpl %ecx, %eax;ja  <MmMapMemoryDumpMdl+>;cmpl $, ": 1,
                "testb $, -(%ebp);jne  <MmMapMemoryDumpMdl+>;calll *;movl , %ebx;movl $, %edi": 1,
                "andl $, (%esi);pushl %eax;calll - <KeCancelTimer+>;jmp  <MmMapMemoryDumpMdl+>;cmpl $-, (%esi)": 1,
                "pushl $;addl $, %esi;pushl %esi;calll - <KeSetEvent>;calll *": 1,
                "movl %edi, ;calll *%ebx;pushl $;calll - <CcRepinBcb+>;cmpl $, %eax": 1,
                "movb -(%ebp), %cl;calll *;andl $, -(%ebp);jmp - <MmMapMemoryDumpMdl+>;testb $, %al": 1,
                "testb $, %al;je  <MmMapMemoryDumpMdl+>;movl , %eax;orl $, ;movl %eax, (%ebx)": 1,
                "movl %ebx, (%eax);movl , %eax;incl %eax;cmpl , %eax;movl %ebx, ": 3,
                "movl , %eax;incl %eax;cmpl , %eax;movl %ebx, ;movl %eax, ": 3,
                "movl %eax, ;movl (%esi), %eax;addl (%esi), %eax;shll $, %eax;cmpl $, %eax": 3,
                "jl  <MmMapMemoryDumpMdl+>;pushl $;calll - <IoSetTopLevelIrp>;leal -(%ebp), %eax;pushl %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp);calll - <MmMapLockedPagesSpecifyCache+>": 1,
                "pushl -(%ebp);calll - <MmMapLockedPagesSpecifyCache+>;testl %eax, %eax;jne  <MmMapMemoryDumpMdl+>;movl -(%ebp), %eax": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);jae  <MmMapMemoryDumpMdl+>;cmpl -(%ebp), %esi;je  <MmMapMemoryDumpMdl+>": 1,
                "jmp  <MmMapMemoryDumpMdl+>;testb $, %ah;je  <MmMapMemoryDumpMdl+>;movl , %ecx;shrl $, %eax": 1,
                "je  <MmMapMemoryDumpMdl+>;movl , %ecx;shrl $, %eax;movl %eax, %ebx;leal (%ebx,%ebx,), %eax": 1,
                "movl (%edx), %eax;cmpl $, %eax;je  <MmMapMemoryDumpMdl+>;decl %eax;movl %eax, (%edx)": 1,
                "calll - <RtlNtStatusToDosErrorNoTeb+>;movb -(%ebp), %cl;calll *;pushl $;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll  <ExFreePoolWithTag>;andl $, -(%ebp);jmp - <MmMapMemoryDumpMdl+>;addl $, %eax": 1,
                "calll - <KeSaveFloatingPointState+>;movl , %eax;movb -(%ebp), %cl;movl $, (%edi);movl %eax, (%edi)": 2,
                "calll *%ebx;jmp  <MmMapMemoryDumpMdl+>;cmpl %ecx, (%ebx);je  <MmMapMemoryDumpMdl+>;orb $, ": 1,
                "movl (%esi), %edx;cmpl $, %edx;jne  <MmMapMemoryDumpMdl+>;movl (%esi), %eax;testl $, %eax": 1,
                "incl -(%ebp);jmp - <MmMapMemoryDumpMdl+>;movl %ecx, -(%ebp);xorl %edi, %edi;movb -(%ebp), %cl": 1,
                "calll *%ebx;pushl %edi;pushl %esi;calll - <MmForceSectionClosed+>;jmp - <MmMapMemoryDumpMdl+>": 1,
                "calll - <KeBugCheckEx>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "jbe  <MmMapMemoryDumpMdl+>;movl (%eax), %edx;movl (%edx), %edx;cmpl (%ebp), %edx;je  <MmMapMemoryDumpMdl+>": 1,
                "popl %ebx;je  <MmMapMemoryDumpMdl+>;movl (%ebp), %ecx;calll  <MmTrimAllSystemPagableMemory+>;movb (%ebp), %cl": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movb (%ebp), %cl;calll *;leave;retl $": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (,%ebx,), %esi;pushl %edi;calll *": 1,
                "pushl %edi;pushl (%esi);movb %al, (%ebp);pushl (%esi);calll - <RtlClearBits>": 1,
                "movl (%esi), %eax;movl (%esi), %edi;cmpl %edi, %eax;je  <MmMapMemoryDumpMdl+>;cmpl %ecx, (%esi)": 1,
                "movl %eax, %edx;subl %ecx, %edx;cmpl %edi, %edx;movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "cmpl %ebx, (%eax);jbe  <MmMapMemoryDumpMdl+>;xorl %ebx, %ebx;testl %ebx, %ebx;jne  <MmMapMemoryDumpMdl+>": 1,
                "pushl (%esi);movl %ebx, (%esi);calll - <RtlSetBits>;movb -(%ebp), %cl;calll *": 1,
                "pushl $;shll $, %ebx;pushl $;movl %ebx, -(%ebp);pushl (%esi)": 1,
                "shll $, %ebx;pushl $;movl %ebx, -(%ebp);pushl (%esi);calll  <IoSetInformation>": 1,
                "pushl (%esi);calll  <IoSetInformation>;movl , %ecx;movl -(%ebp), %eax;incl %eax": 1,
                "movl , %ecx;movl -(%ebp), %eax;incl %eax;cmpl , %eax;movl %eax, -(%ebp)": 1,
                "pushl %edi;xorl %ecx, %ecx;xorl %esi, %esi;xorl %edi, %edi;testl %eax, %eax": 1,
                "movl %ecx, %edx;shrl $, %edx;shrl $, %ecx;addl %ecx, %edx;cmpl %esi, %edx": 1,
                "movl (%ecx), %esi;cmpl (%ecx), %esi;ja  <MmMapMemoryDumpMdl+>;incl %edx;cmpl %eax, %edx": 1,
                "cmpl (%ecx), %esi;ja  <MmMapMemoryDumpMdl+>;incl %edx;cmpl %eax, %edx;jb - <MmMapMemoryDumpMdl+>": 1,
                "cmpl %eax, %edx;jne  <MmMapMemoryDumpMdl+>;calll  <MmTrimAllSystemPagableMemory+>;jmp  <MmMapMemoryDumpMdl+>;movl , %esi": 1,
                "movl %fs:, %eax;cmpl $, (%eax);jne  <MmMapMemoryDumpMdl+>;xorl %eax, %eax;jmp  <MmMapMemoryDumpMdl+>": 1,
                "pushl %edi;pushl (%ebp);calll - <KeWaitForSingleObject>;xorl %eax, %eax;incl %eax": 1,
                "nop;addb %bh, (%esi);adcb $-, %al;int;int": 1,
                "movl %eax, ;calll *;movl , %edx;movl $, %esi;movl %edx, ": 1,
                "cmpl (%ebp), %ebx;jbe - <MmMapMemoryDumpMdl+>;popl %edi;popl %esi;movl (%ebp), %eax": 1,
                "jne  <MmMapMemoryDumpMdl+>;xorl %eax, %eax;jmp  <MmMapMemoryDumpMdl+>;movl , %ecx;pushl %esi": 1,
                "jb  <MmMapMemoryDumpMdl+>;cmpl (%eax), %esi;jb  <MmMapMemoryDumpMdl+>;decl %ecx;incl %edi": 1,
                "jb - <MmMapMemoryDumpMdl+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebp": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%esi), %eax;movl %eax, (%ebp)": 1,
                "shll $, %eax;movw %bx, %ax;rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx": 2,
                "testb $, (%esi);movl %eax, -(%ebp);je  <MmMapMemoryDumpMdl+>;movl (%ebp), %edi;movl (%ebp), %ebx": 1,
                "leal (%eax,%eax,), %eax;xorl %ebx, %ebx;leal (%ecx,%eax,), %edi;calll *;movb %al, (%ebp)": 1,
                "leal (%ecx,%eax,), %edi;calll *;movb %al, (%ebp);movl (%edi), %eax;shrl $, %eax": 1,
                "movl (%ebp), %eax;movl (%esi), %ebx;movl (%eax), %eax;andl $, %ebx;andl $, %eax": 1,
                "calll *;movb %al, (%ebp);movl (%ebp), %edi;testl %edi, %edi;je  <MmMapMemoryDumpMdl+>": 1,
                "je  <MmMapMemoryDumpMdl+>;testb $-, (%edi);je  <MmMapMemoryDumpMdl+>;pushl (%ebp);pushl %edi": 1,
                "testb $-, (%edi);je  <MmMapMemoryDumpMdl+>;pushl (%ebp);pushl %edi;calll - <IoSetFileOrigin+>": 1,
                "pushl $;calll - <KeBugCheckEx>;movl (%esi), %eax;cmpl $, %eax;je  <MmMapMemoryDumpMdl+>": 1,
                "movl (%esi), %eax;cmpl $, %eax;je  <MmMapMemoryDumpMdl+>;decl %eax;movl %eax, (%esi)": 1,
                "shll $, %ecx;calll - <PsGetCurrentProcess+>;movl %eax, %ebx;movl (%esi), %eax;movl , %ecx": 1,
                "leal (%ecx,%eax,), %eax;cmpw $, (%eax);jne  <MmMapMemoryDumpMdl+>;cmpl $, (%eax);je  <MmMapMemoryDumpMdl+>": 1,
                "cmpw $, (%eax);jne  <MmMapMemoryDumpMdl+>;cmpl $, (%eax);je  <MmMapMemoryDumpMdl+>;incl ": 1,
                "calll *;movb %al, %bl;movl (%esi), %eax;movl , %ecx;shrl $, %eax": 2,
                "calll - <wcscmp+>;testl %edi, %edi;popl %edi;popl %esi;jne  <MmMapMemoryDumpMdl+>": 1,
                "jne  <MmMapMemoryDumpMdl+>;movb %bl, %cl;popl %ebx;jmpl *;popl %ebx": 1,
                "leal (%ecx,%eax,), %esi;movl (%ebp), %eax;movl %esi, %ecx;movl %esi, (%eax);calll - <PsGetCurrentProcess+>": 1,
                "calll - <PsGetCurrentProcess+>;movl (%esi), %ecx;testb $, %cl;popl %esi;jne  <MmMapMemoryDumpMdl+>": 1,
                "subl %ecx, %eax;jmp  <MmMapMemoryDumpMdl+>;testl %ecx, %ecx;jns  <MmMapMemoryDumpMdl+>;movl %ecx, %eax": 1,
                "cmpl , %esi;jb  <MmIsNonPagedSystemAddressValid+>;cmpl , %esi;jae  <MmIsNonPagedSystemAddressValid+>;xorb %al, %al": 1,
                "nop;movl %ecx, ;retl;int;int": 2,
                "je  <MmIsNonPagedSystemAddressValid+>;calll  <PsIsThreadImpersonating+>;jmp  <MmIsNonPagedSystemAddressValid+>;testb $, (%edi);je  <MmIsNonPagedSystemAddressValid+>": 1,
                "movl %ebx, %ecx;calll - <PsGetCurrentProcess+>;testl %eax, %eax;jne  <MmIsNonPagedSystemAddressValid+>;cmpl %ebx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movb (%eax), %al": 1,
                "testb $, (%eax);je  <MmIsNonPagedSystemAddressValid+>;movl -(%ebp), %eax;movl (%eax), %ebx;movl %ebx, %eax": 1,
                "xaddl %eax, (%ecx);pushl %edi;pushl %esi;calll - <PsGetThreadTeb+>;orl $-, -(%ebp)": 1,
                "calll - <PsGetThreadTeb+>;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <MmIsNonPagedSystemAddressValid+>;nop": 1,
                "jne  <MmIsNonPagedSystemAddressValid+>;movl , %edi;calll *;movb %al, (%ebp);movl (%ebp), %eax": 1,
                "calll - <RtlFillMemoryUlong>;movb (%ebp), %cl;calll *;addl $, (%ebp);addl $, %esi": 1,
                "nop;nop;movl , %eax;cmpl , %eax;jb  <MmIsNonPagedSystemAddressValid+>": 1,
                "pushl $-;popl %ecx;leal (%esi), %edx;lock;andl %ecx, (%edx)": 1,
                "cmpl , %esi;popl %esi;je  <MmIsNonPagedSystemAddressValid+>;calll - <KeDetachProcess>;jmp  <MmIsNonPagedSystemAddressValid+>": 1,
                "popl %esi;je  <MmIsNonPagedSystemAddressValid+>;calll - <KeDetachProcess>;jmp  <MmIsNonPagedSystemAddressValid+>;movl , %eax": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;movl (%esi), %eax": 1,
                "je  <MmIsNonPagedSystemAddressValid+>;movl (%esi), %eax;testb %al, %bl;jne  <MmIsNonPagedSystemAddressValid+>;testb $, (%esi)": 1,
                "movl (%esi), %esi;cmpl %esi, %ecx;jbe  <MmIsNonPagedSystemAddressValid+>;subl %esi, %ecx;movl %ecx, %eax": 1,
                "jbe  <MmIsNonPagedSystemAddressValid+>;movl %ecx, %edx;movl (%ebp), %ecx;testl %ecx, %ecx;je  <MmIsNonPagedSystemAddressValid+>": 1,
                "movl (%ebp), %esi;testb $, (%ebx,%esi,);je - <MmIsNonPagedSystemAddressValid+>;testl %edx, %edx;je  <MmIsNonPagedSystemAddressValid+>": 1,
                "movl %ebx, %ecx;shrl $, %ecx;movl %ecx, -(%ebp);andl $, %ecx;subl $, %ecx": 1,
                "movl %ecx, -(%ebp);andl $, %ecx;subl $, %ecx;movl (%ecx), %edx;testb $, %dl": 1,
                "jmp  <MmIsNonPagedSystemAddressValid+>;movl -(%ebp), %ecx;andl $, %ecx;cmpb $, %cl;jae  <MmIsNonPagedSystemAddressValid+>": 1,
                "movl -(%ebp), %ecx;andl $, %ecx;cmpb $, %cl;jae  <MmIsNonPagedSystemAddressValid+>;movl -(%ebp), %edx": 1,
                "decl (%ebp);jne - <MmIsNonPagedSystemAddressValid+>;incl %esi;movl %esi, (%edi);movl (%edi), %edx": 1,
                "movl %eax, (%ebp);movl %ecx, -(%ebp);jmp  <MmIsNonPagedSystemAddressValid+>;cmpl $, %esi;jbe  <MmIsNonPagedSystemAddressValid+>": 1,
                "jbe  <MmIsNonPagedSystemAddressValid+>;incl %ebx;movl %ebx, %edx;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "ja  <MmIsNonPagedSystemAddressValid+>;movl %edx, %ebx;cmpl (%ebp), %edx;jae  <MmIsNonPagedSystemAddressValid+>;movl (%ebp), %edx": 1,
                "cmpl -(%ebp), %ebx;movl %ebx, %edx;ja  <MmIsNonPagedSystemAddressValid+>;cmpl (%ebp), %edx;jae  <MmIsNonPagedSystemAddressValid+>": 1,
                "movl %eax, -(%ebp);jb - <MmIsNonPagedSystemAddressValid+>;movl -(%ebp), %eax;cmpl %eax, (%ebp);jae  <MmIsNonPagedSystemAddressValid+>": 1,
                "movl -(%ebp), %ecx;movl (%edi), %eax;shll %cl, %edx;addl $, %eax;cmpl %edx, %eax": 1,
                "popl %edi;popl %esi;popl %ebx;leal (%ecx,%ecx), %ecx;shrl %cl, %eax": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl %edi;leal -(%ebp), %eax": 2,
                "cmpl $, (%ebp);movl , %eax;movl , %ecx;movl , %edx;jne  <MmIsNonPagedSystemAddressValid+>": 1,
                "movl , %eax;movl , %ecx;movl , %edx;jne  <MmIsNonPagedSystemAddressValid+>;leal (%edx,%ecx), %esi": 1,
                "movl %eax, (%eax);movl %eax, (%eax);addl $, %eax;decl %ecx;jne - <MmIsNonPagedSystemAddressValid+>": 1,
                "cmpl $, %eax;ja - <MmIsNonPagedSystemAddressValid+>;cmpl $, %ecx;ja  <MmIsNonPagedSystemAddressValid+>;testl %eax, %eax": 1,
                "jne - <MmIsNonPagedSystemAddressValid+>;xorl %ecx, %ecx;leal -(%ebp), %eax;cmpl %eax, (%eax);jne  <MmIsNonPagedSystemAddressValid+>": 1,
                "addl $, %eax;cmpl $, %ecx;jl - <MmIsNonPagedSystemAddressValid+>;movl -(%ebp,%ecx,), %eax;movl %ecx, %edi": 1,
                "jge  <MmIsNonPagedSystemAddressValid+>;movl %edi, %edx;shll $, %edx;leal -(%ebp,%ecx,), %eax;cmpl %eax, (%eax)": 1,
                "nop;movl %edi, %edi;pushl %ebx;calll *;xorl %ebx, %ebx": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;pushfl;popl %eax;movl %eax, -(%ebp);testb $, -(%ebp)": 1,
                "movl %esi, %ecx;calll - <ExReleaseResourceLite>;movb -(%ebp), %cl;calll *;movl $, %eax": 1,
                "movl $, ;movl %eax, ;movl %fs:, %eax;movl , %esi;movb $, %cl": 1,
                "movl (%ebp), %ebx;andl $, (%ebx);pushl %edi;movl (%ebp), %edi;cmpl $, %edi": 1,
                "movb %bl, %cl;calll *;xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl %fs:, %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;pushl $;pushl $;pushl $;calll - <KeDelayExecutionThread>": 1,
                "pushl $-;popl %ecx;addl $, %esi;lock;andl %ecx, (%esi)": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movb %bl, %cl;calll *;calll  <MmTrimAllSystemPagableMemory+>;jmp - <MmTrimAllSystemPagableMemory+>": 1,
                "calll *;movl %edi, %eax;popl %edi;jmp  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;xorl %eax, %eax;pushl %esi;pushl %edi": 1,
                "movl %eax, ;movl %edi, (%eax);jne  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;incl %eax": 1,
                "pushl %eax;pushl $;pushl %esi;calll - <MmIsNonPagedSystemAddressValid+>;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl %edi, %esi;je  <MmTrimAllSystemPagableMemory+>;jmp - <MmTrimAllSystemPagableMemory+>;jmp  <MmTrimAllSystemPagableMemory+>;movl , %ecx": 1,
                "movl %eax, ;popl %ebx;movb -(%ebp), %cl;calll *;cmpl $, (%ebp)": 1,
                "andl $, %esi;subl $, %esi;movl (%esi), %eax;shrl $, %eax;leal (%eax,%eax,), %eax": 2,
                "pushl %eax;movl (%esi), %eax;shrl $, %eax;pushl %eax;pushl $": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;cmpl $, (%edi);jb  <MmTrimAllSystemPagableMemory+>;decl ;decw (%edi)": 1,
                "andl $, %edi;pushl $;xorl %eax, %eax;subl $, %edi;pushl $": 2,
                "cmpl (%esi), %edi;jne  <MmTrimAllSystemPagableMemory+>;andl $-, (%esi);decl %edi;movb %al, %cl": 1,
                "pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>;cmpl $, (%esi)": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>;cmpl $, (%esi);je  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $, %eax;movb -(%eax), %al;andb $-, %al;subb $-, %al;negb %al": 2,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx;movl %cr, %eax": 1,
                "pushl -(%ebp);calll - <MmGetVirtualForPhysical>;movl %eax, %ecx;shrl $, %ecx;andl $, %ecx": 1,
                "negb %cl;sbbl %ecx, %ecx;incl %ecx;pushl %ecx;pushl $": 1,
                "movl (%ebp), %eax;pushl %eax;calll *(%eax);leave;retl $": 1,
                "jle  <MmTrimAllSystemPagableMemory+>;pushl %esi;movl (%ebp), %esi;xorl %eax, %eax;movl (,%eax,), %eax": 1,
                "jl - <MmTrimAllSystemPagableMemory+>;popl %esi;popl %ebx;popl %ebp;retl $": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;andl $, -(%ebp);pushl %ebx": 2,
                "calll - <MmTrimAllSystemPagableMemory+>;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;popl %esi;popl %ebp": 1,
                "movl %ecx, (%ebx);movl (%edx), %ecx;movl %ecx, (%ebx);cmpl $, (%edx);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %ecx, (%ebx);cmpl $, (%edx);je  <MmTrimAllSystemPagableMemory+>;movl (%edx), %ecx;movl %ecx, (%eax)": 1,
                "popl %ecx;cmpw %cx, (%ebx);jbe  <MmTrimAllSystemPagableMemory+>;movw %cx, (%ebx);cmpw %cx, -(%eax)": 1,
                "movw %cx, -(%eax);movzwl -(%eax), %ecx;movl %eax, -(%eax);movl (%edx), %esi;movl %ecx, %edx": 1,
                "movl , %eax;shrl $, %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl %edx, %eax": 2,
                "xorl %eax, %eax;incl %eax;testb %cl, %al;jne  <MmTrimAllSystemPagableMemory+>;testb $, %ch": 1,
                "cmpl (%ebp), %esi;movl %ecx, (%edx);je  <MmTrimAllSystemPagableMemory+>;addl $, %edx;movl (%edx), %ecx": 1,
                "xorl %ebx, %ebx;pushl %edi;movl %ebx, -(%ebp);calll *%esi;cmpl %ebx, ": 1,
                "pushl %edi;movl %ebx, -(%ebp);calll *%esi;cmpl %ebx, ;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "calll - <wcscmp+>;incl ;movl $, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "cmpl %esi, %edi;je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl %edi;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %edi;calll - <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %edi, -(%ebp)": 2,
                "cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %edi, -(%ebp);movl (%ebp), %edi;pushl %ebx": 1,
                "movl %edi, -(%ebp);movl (%ebp), %edi;pushl %ebx;movl (%esi), %ebx;cmpl %ebx, %edi": 1,
                "movl (%ebp), %edi;pushl %ebx;movl (%esi), %ebx;cmpl %ebx, %edi;je  <MmTrimAllSystemPagableMemory+>": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl %ebx, -(%ebp);cmpl $, (%ebp);popl %ebx;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "popl %ebx;jne  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;movl %eax, (%edi);movl %esi, (%edi)": 1,
                "pushl %edi;movl (%esi), %edi;xorl %ebx, %ebx;cmpl %esi, %edi;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl %edi;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;cmpl $, -(%ebp);popl %edi;popl %esi;popl %ebx": 1,
                "popl %ebx;je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>": 1,
                "xaddl %eax, (%ecx);movl , %eax;addl $, %eax;movl %eax, (%ebp);movl $, %eax": 4,
                "movb $, -(%ebp);leal (,%ebx,), %edi;movl (%edi), %esi;jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, ": 1,
                "pushl $;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;movl %esi, %ecx;shrl $, %ecx": 1,
                "cmpl %edi, %esi;je  <MmTrimAllSystemPagableMemory+>;jmp - <MmTrimAllSystemPagableMemory+>;jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, ": 1,
                "movl $, -(%ebp);pushl %esi;calll - <ExAllocatePoolWithTagPriority+>;orl $-, %ebx;incl %ebx": 1,
                "pushl %ecx;movl , %eax;leal -(%eax), %ecx;cmpl %ecx, ;ja  <MmTrimAllSystemPagableMemory+>": 1,
                "jbe  <MmTrimAllSystemPagableMemory+>;calll *;xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl , %eax": 1,
                "testw $, %ax;je  <MmTrimAllSystemPagableMemory+>;andl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>;andl $, %eax": 1,
                "pushl (%ebp);calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmTrimAllSystemPagableMemory+>;leal (%edi), %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;orl $-, %eax;popl %ebp;retl $;popl %ebp": 1,
                "xorl %esi, %esi;incl %esi;cmpl %esi, %ecx;ja  <MmTrimAllSystemPagableMemory+>;cmpl $, %edx": 1,
                "cmpl %esi, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %esi, %eax;jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);jne  <MmTrimAllSystemPagableMemory+>;addl $, %edx;jmp  <MmTrimAllSystemPagableMemory+>;addl $, %edx": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;addl $, %edx;cmpl %edx, %edi;jge - <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;incl ;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;movl %eax, %ecx;shll $, %ecx;xorl %edx, %edx;cmpl %edx, (%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl , %eax;movl (%eax), %ebx;pushl %edi": 1,
                "movb %al, (%ebp);movl (%ebp), %eax;addl %esi, %eax;cmpl %eax, %esi;jae  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %eax, %ecx;andl $, %ecx;shrl %cl, %edx;testb $, %dl;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %edi;movl , %edi;movl %eax, %esi;movl %edi, %ecx;movl %ebx, %edx": 1,
                "cmpl %edi, %eax;jae  <MmTrimAllSystemPagableMemory+>;pushl %edx;pushl %ecx;pushl %esi": 1,
                "pushl %ecx;pushl %esi;pushl $;jmp  <MmTrimAllSystemPagableMemory+>;subl , %eax": 1,
                "subl , %eax;sarl $, %eax;movl %eax, %edi;calll *;movl , %ecx": 1,
                "movl (%ebx), %ecx;movl (%esi,%ecx), %edx;movl -(%ebp), %ecx;shrl %cl, %edx;testb $, %dl": 1,
                "retl $;pushl -(%ebp);subl %edi, %esi;shll $, %esi;addl -(%ebp), %esi": 1,
                "testl %esi, %esi;je  <MmTrimAllSystemPagableMemory+>;leal -(%esi), %ecx;pushl %ebx;movl , %ebx": 1,
                "andl $, %ecx;shrl %cl, %ebx;movl %ecx, -(%ebp);testb $, %bl;je  <MmTrimAllSystemPagableMemory+>": 1,
                "shrl %cl, %ebx;testb $, %bl;jne  <MmTrimAllSystemPagableMemory+>;leal -(%esi), %ecx;xorl %esi, %esi": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;orl $, %eax;shrl $, %ecx;andl $, %ecx": 1,
                "orl $, %eax;shrl $, %ecx;andl $, %ecx;movl %eax, -(%ecx);movl (%ebp), %eax": 1,
                "andl $, %ecx;movl %eax, -(%ecx);movl (%ebp), %eax;invlpg (%eax);popl %ebp": 1,
                "subl $, %esp;cmpl $, ;jne  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %eax;movl (%ebp), %edx;andl $, -(%ebp);pushl %ebx": 1,
                "movl (%ebp), %edx;andl $, -(%ebp);pushl %ebx;pushl %esi;pushl %edi": 1,
                "calll *;cmpb $, %al;ja  <MmTrimAllSystemPagableMemory+>;andl $, -(%ebp);cmpl , %ebx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;cmpl $, (%eax);je  <MmTrimAllSystemPagableMemory+>;xorl %edi, %edi;incl %edi": 1,
                "pushl (%ebp);calll  <ProbeForWrite>;jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, (%ebp);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl -(%ebp), %eax;jmp  <MmTrimAllSystemPagableMemory+>;xorl %edi, %edi;incl %edi;pushl %ebx": 1,
                "cmpl %edi, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl;calll *;cmpl %edi, -(%ebp)": 1,
                "movb -(%ebp), %cl;calll *;cmpl %edi, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>;movl , %eax": 1,
                "calll *;cmpb $, %al;jbe  <MmTrimAllSystemPagableMemory+>;movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $, -(%ebp);movl (%ebp), %esi;cmpl %esi, -(%ebp);jae  <MmTrimAllSystemPagableMemory+>;movb (%ecx), %dl": 1,
                "jae  <MmTrimAllSystemPagableMemory+>;movb (%ecx), %dl;movl -(%ebp), %edi;movb %dl, -(%ebp,%edi);incl %ecx": 1,
                "movb %cl, (%eax);movl , %ecx;cmpl %ecx, (%ebp);jb  <MmTrimAllSystemPagableMemory+>;leal -(%ebp), %ecx": 1,
                "nop;nop;nop;lock;incl %ebx": 1,
                "incl %esi;addb %cl, -(%ebp);pushl ;incl %esi;incl %esi": 1,
                "leal (%eax), %esi;movl %esi, %ecx;movb $, -(%ebp);calll *;movl (%ebp), %ecx": 1,
                "movl $, %edi;testl %edi, (%ebx);jne  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;calll - <PsIsThreadTerminating+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl %fs:, %eax;movl (%eax), %esi;movb (%eax), %al;movb %al, -(%ebp)": 1,
                "movl (%ebp), %ebx;cmpl %ecx, %ebx;jbe  <MmTrimAllSystemPagableMemory+>;movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, %edi;jbe  <MmTrimAllSystemPagableMemory+>;orl $-, -(%ebp);movl $, %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "jbe  <MmTrimAllSystemPagableMemory+>;movl (%eax), %eax;cmpl %ecx, %eax;je  <MmTrimAllSystemPagableMemory+>;jmp - <MmTrimAllSystemPagableMemory+>": 2,
                "subl $, %ebx;movl %ebx, %edi;movl %edi, -(%ebp);movl %esi, %eax;shll $, %eax": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %edi;movl -(%ebp), %eax;andl $, -(%ebp);movl %eax, %ebx": 1,
                "andl $, -(%ebp);movl %eax, %ebx;shrl $, %ebx;movl (%edx), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl -(%ebp);pushl %edx;calll  <RtlClearBit>;testb $, (%edi);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "calll  <RtlClearBit>;testb $, (%edi);jne  <MmTrimAllSystemPagableMemory+>;pushl -(%ebp);pushl $": 1,
                "testb $, (%edi);jne  <MmTrimAllSystemPagableMemory+>;pushl -(%ebp);pushl $;pushl -(%ebp)": 1,
                "addl %eax, -(%ebp);movl %ecx, %esi;movl %esi, %eax;shrl $, %eax;andl $, %eax": 1,
                "movl %esi, %eax;shll $, %eax;movl %eax, (%ebp);jmp  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax": 1,
                "orl $, %eax;movl %eax, (%ebx);testb $, (%ebx);jne  <MmTrimAllSystemPagableMemory+>;testb $, %al": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;pushl (%ebx);calll - <IoAllocateIrp+>;andl $, (%ebx);cmpl $, -(%ebp)": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl %esi, %eax;shrl $, %eax;andl $, %eax;subl $, %eax": 1,
                "subl $, %eax;movl %eax, -(%ebp);incl -(%ebp);addl $, (%ebp);cmpl -(%ebp), %esi": 1,
                "calll - <ObfDereferenceObject>;cmpl $, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>;movl %esi, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;cmpl %eax, -(%ebp);je  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl $;pushl -(%ebp);calll  <ExFreePoolWithTag>;movl -(%ebp), %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "incl %esi;addb %bh, (%esi);incl %esi;addb %cl, %ah;int": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi": 4,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi;movl (%ebp), %edi": 3,
                "cmpl $-, (%ebp);movl (%eax), %ebx;jne  <MmTrimAllSystemPagableMemory+>;movl %ebx, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "calll  <ObReferenceObjectByHandle>;testl %eax, %eax;movl (%ebp), %ecx;movl %ecx, -(%ebp);jl  <MmTrimAllSystemPagableMemory+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl (%eax), %edx;testb $-, (%edx);je  <MmTrimAllSystemPagableMemory+>;cmpl (%eax), %edi": 1,
                "cmpl %ecx, %eax;je  <MmTrimAllSystemPagableMemory+>;jmp - <MmTrimAllSystemPagableMemory+>;jmp  <MmTrimAllSystemPagableMemory+>;movl (%eax), %ebx": 1,
                "pushl (%eax);movl %esi, (%ebp);calll - <RtlClearBits>;cmpl -(%ebp), %edi;jbe  <MmTrimAllSystemPagableMemory+>": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;leal (%eax), %edi;shll $, %edi;movl %edi, %eax;shll $, %eax": 1,
                "je  <MmTrimAllSystemPagableMemory+>;testb $, %al;je  <MmTrimAllSystemPagableMemory+>;movl , %ecx;shrl $, %eax": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;popl %ebx": 1,
                "calll - <ObfDereferenceObject>;movl %esi, %eax;popl %ebx;popl %esi;popl %edi": 1,
                "popl %ebx;popl %esi;popl %edi;leave;retl $": 9,
                "popl %esi;popl %edi;leave;retl $;nop": 4,
                "popl %edi;popl %esi;leave;retl;int": 5,
                "movl %esi, %ecx;calll - <wcscmp+>;cmpl $, ;jne  <MmTrimAllSystemPagableMemory+>;pushl %esi": 1,
                "calll - <wcscmp+>;cmpl $, ;jne  <MmTrimAllSystemPagableMemory+>;pushl %esi;pushl ": 1,
                "pushl $;addl $, %eax;pushl %eax;movl $, (%esi);calll - <KeSetEvent>": 1,
                "pushl %eax;pushl -(%esi);calll - <RtlCompareMemory>;cmpl (%esi), %eax;je  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl -(%esi);calll - <RtlCompareMemory>;cmpl -(%esi), %eax;jne  <MmTrimAllSystemPagableMemory+>;incl %edi": 1,
                "calll - <RtlCompareMemory>;cmpl -(%esi), %eax;jne  <MmTrimAllSystemPagableMemory+>;incl %edi;addl $, %esi": 1,
                "shrl $, %ecx;testb $, (%ebx);je  <MmTrimAllSystemPagableMemory+>;movl -(%eax), %esi;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "movb -(%ebp), %cl;calll *;pushl (%ebp);calll - <KeBugCheckEx+>;leave": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movb $, %cl;calll *;cmpb $-, (%esi);pushl %ebx": 1,
                "leal (%ecx,%eax,), %esi;calll *;movw (%ebp), %cx;addw %cx, (%esi);movb %al, %cl": 1,
                "incl (%esi);movb %al, %bl;movl (%esi), %eax;testb $, %al;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movb %al, %bl;movl (%esi), %eax;testb $, %al;jne  <MmTrimAllSystemPagableMemory+>;cmpl $, (%esi)": 1,
                "calll - <PsReturnProcessPagedPoolQuota+>;movl (%edi), %edx;movl %edi, %ecx;movl %eax, %esi;calll - <PsReturnProcessPagedPoolQuota+>": 1,
                "movl (%edi), %edx;movl %edi, %ecx;movl %eax, %esi;calll - <PsReturnProcessPagedPoolQuota+>;movl %eax, %edi": 1,
                "jns  <MmTrimAllSystemPagableMemory+>;orl $, %ecx;movl %ecx, (%ebx);movl $, (%ebx);movl (%esi), %eax": 1,
                "andl $, %eax;shrl $, %edx;orl %eax, %edx;movl %edx, (%esi);movl (%edi), %eax": 1,
                "movl , %ecx;movl (%ebp), %edx;movl %ecx, (%esi);movl (%ebp), %ecx;movl %ecx, (%esi)": 1,
                "movl (%ebp), %edx;movl %ecx, (%esi);movl (%ebp), %ecx;movl %ecx, (%esi);movw $, (%esi)": 1,
                "incl (%edx);movb %al, %cl;calll *;cmpl $, (%ebp);je  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %ecx;pushl %ebx;movl (%ebp), %ebx;decl (%ebx);pushl %esi": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;jne  <MmTrimAllSystemPagableMemory+>;leal (%edi), %edx": 1,
                "movl (%eax), %esi;leal (%esi), %eax;movl $, (%ebp);movl %eax, -(%ebp);movl $, %eax": 1,
                "calll *;jmp  <MmTrimAllSystemPagableMemory+>;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%edi);calll *": 1,
                "pushl $;cltd;popl %ecx;idivl %ecx;movl (%esi), %edx": 1,
                "testb $, %al;je  <MmTrimAllSystemPagableMemory+>;testb $, (%edi);jne - <MmTrimAllSystemPagableMemory+>;movl (%edi), %ecx": 1,
                "ja  <MmTrimAllSystemPagableMemory+>;movl , %ebx;movl %ecx, %eax;shrl $, %eax;movl (%ebx,%eax,), %eax": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;shrl $, %ebx;cmpl %eax, %ebx;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl (%edi);pushl %eax;calll - <IoGetAttachedDevice+>;movb $, %cl;calll - <_allshr>": 1,
                "andl $-, %ecx;orl $, %ecx;movl %ecx, (%esi);movl %edx, (%esi);subl , %eax": 1,
                "movl %ecx, %ebx;andl $, %ebx;movl %ebx, (%esi);cmpl , %ecx;jb  <MmTrimAllSystemPagableMemory+>": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;cmpl , %ecx;jb  <MmTrimAllSystemPagableMemory+>;cmpl , %edx;jbe  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl %edx, %ecx;jb  <MmTrimAllSystemPagableMemory+>;cmpl , %ecx;jae  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl (%edi), %ecx;movl $, %edx;andl %edx, %ecx;cmpl $, %ecx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl (%edi), %ecx;testb $, %cl;je  <MmTrimAllSystemPagableMemory+>;testb $, %cl": 1,
                "andl $-, %eax;orl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl (%edi), %ecx;andl $, %ecx": 1,
                "xorl %eax, %eax;movl $, %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);calll *%ebx": 1,
                "movb %al, -(%ebp);addl $, %esi;cmpl -(%ebp), %esi;jb - <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl": 1,
                "calll ;addl $, %esi;cmpl %edi, %esi;jb - <MmTrimAllSystemPagableMemory+>;popl %edi": 1,
                "incl %ecx;cmpl $, %ecx;jb - <MmTrimAllSystemPagableMemory+>;movl $, %edi;xorl %edx, %edx": 1,
                "pushl $;pushl %esi;pushl %eax;calll - <RtlCompareMemory>;cmpl $, %eax": 1,
                "jb - <MmTrimAllSystemPagableMemory+>;xorb %al, %al;popl %ebp;retl $;movb $, %al": 1,
                "calll *;movb %al, %bl;leal (%esi), %eax;shrl $, %eax;andl $, %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl (%eax), %edx;movl %edx, (%ecx);jmp  <MmTrimAllSystemPagableMemory+>;movl %eax, %ecx": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl %eax, %ecx;movl (%eax), %eax;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>": 1,
                "jae  <MmTrimAllSystemPagableMemory+>;movl (%esi), %ecx;movl $, %eax;cmpl %eax, %ecx;jae  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %edi;movl %esi, (%ebx);movl %fs:, %eax;movl (%eax), %esi;addl $, %esi": 1,
                "outsl (%esi), %dx;arpl %sp, (%ecx);pushl %eax;outsl (%esi), %dx;outsl (%esi), %dx": 6,
                "cmpw $, ;jne  <ObDereferenceObject+>;xorb %al, %al;jmp  <ObDereferenceObject+>;pushl %esi": 1,
                "pushl %esi;movl $, %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <ObDereferenceObject+>;int;int;int;int": 1,
                "setne %al;movb %al, (%ecx);movl %esi, %ecx;calll *;xorl %eax, %eax": 1,
                "popl %esi;jmp  <ObIsDosDeviceLocallyMapped+>;movl $, %eax;popl %edi;popl %ebp": 1,
                "pushl %esi;movl (%ecx), %esi;movl %edx, (%esi);movl %esi, (%edx);orl $-, (%eax)": 1,
                "movl (%ecx), %esi;movl %edx, (%esi);movl %esi, (%edx);orl $-, (%eax);xorl %edx, %edx": 1,
                "calll  <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;jne  <PoCancelDeviceNotify+>;movl $, %esi": 1,
                "movl %eax, (%ecx);movl (%ebp), %eax;movl %esi, (%eax);xorl %esi, %esi;movb -(%ebp), %dl": 1,
                "xorl %edi, %edi;testb $, (%ebx);je  <PoCancelDeviceNotify+>;movl (%ebx), %eax;cmpl %edi, (%eax)": 1,
                "je  <PoCancelDeviceNotify+>;movl (%ebx), %eax;cmpl %edi, (%eax);je  <PoCancelDeviceNotify+>;cmpl $, (%ebp)": 1,
                "movl (%edx), %ecx;jmp  <PoCancelDeviceNotify+>;movl (%ecx), %ecx;cmpl %ebx, (%ecx);je  <PoCancelDeviceNotify+>": 1,
                "movl $, (%edi);movl %ebx, (%edi);leal -(%ebx), %eax;movl (%eax), %edx;leal (%edi), %ecx": 1,
                "movl %ecx, (%eax);incl (%ebx);movl (%esi), %eax;movl (%eax), %eax;andb $-, %al": 1,
                "movl $, %ecx;calll *;pushl (%ebp);pushl %ebx;pushl %esi": 1,
                "testl %edi, %edi;je  <PoCancelDeviceNotify+>;pushl $;pushl %edi;calll  <ExFreePoolWithTag>": 1,
                "movl (%ebp), %ecx;pushl %edi;pushl %edi;pushl %edi;pushl %ebx": 1,
                "movl %eax, %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;jne  <PoCancelDeviceNotify+>;movl $, %eax": 1,
                "movl (%ebp), %eax;addl $, %esi;cmpl (%edi), %eax;jb - <PoCancelDeviceNotify+>;movl -(%ebp), %esi": 1,
                "pushl %ebx;pushl %edi;calll  <ExFreePoolWithTag>;movl %esi, %eax;popl %edi": 1,
                "je  <PoRegisterDeviceNotify+>;cmpl %eax, (%ebp);je  <PoRegisterDeviceNotify+>;cmpl %eax, (%ebp);je  <PoRegisterDeviceNotify+>": 2,
                "pushl (%ebp);pushl %ebx;pushl %esi;calll - <PoCancelDeviceNotify+>;movl %eax, %esi": 1,
                "pushl %ebx;pushl %esi;calll - <PoCancelDeviceNotify+>;movl %eax, %esi;movl %edi, %ecx": 1,
                "addl %ebx, %eax;popl %ebx;leave;retl $;nop": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;leal (%esi), %ecx": 1,
                "pushl %ebx;movl $, %edx;movl %esi, %ecx;calll  <PoUnregisterSystemState+>;pushl %ebx": 2,
                "je  <PoUnregisterSystemState+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %esi": 3,
                "popl %ebx;popl %ebp;retl $;testb $, (%ebp);je  <PoUnregisterSystemState+>": 1,
                "nop;nop;xorl %eax, %eax;movb %al, ;movb %al, ": 1,
                "movl (%ebp), %edi;pushl $;popl %ecx;je  <PoUnregisterSystemState+>;pushl $": 1,
                "cmpl %edx, %eax;je  <PoUnregisterSystemState+>;cmpl %ecx, %eax;je  <PoUnregisterSystemState+>;cmpl $, %eax": 1,
                "movl %edx, %eax;andl $, %eax;negl %eax;sbbl %eax, %eax;negl %eax": 1,
                "je  <PoUnregisterSystemState+>;pushl $;pushl %edi;calll - <IoCsqRemoveIrp+>;cmpl $, (%ebp)": 1,
                "pushl %eax;calll - <IoCsqRemoveIrp+>;movl (%ebx), %eax;testl %eax, %eax;movl $, %edi": 1,
                "movl , %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 8,
                "pushl $;leal -(%ebp), %eax;leal -(%ebp), %ecx;pushl %eax;movl $, -(%ebp)": 5,
                "calll - <ZwQueryValueKey>;testl %eax, %eax;jl  <PoUnregisterSystemState+>;cmpl $, -(%ebp);jne  <PoUnregisterSystemState+>": 1,
                "jne  <PoUnregisterSystemState+>;cmpb $, -(%ebp);sete %al;movb %al, ;pushl -(%ebp)": 1,
                "popl %esi;retl;nop;int;int": 7,
                "xorl %esi, %esi;pushl %edi;movb $, %cl;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "shll -(%ebp);notl %eax;andl %eax, %esi;movb $, %cl;movl %esi, -(%ebp)": 1,
                "pushl $;popl %ecx;divl %ecx;xorl %edx, %edx;andl $, -(%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx;movb $, %cl": 1,
                "jbe  <PoUnregisterSystemState+>;testl %eax, %eax;je  <PoUnregisterSystemState+>;imull $, %eax, %eax;subl %edx, %ecx": 1,
                "imull %ecx, %eax;xorl %edx, %edx;divl %edi;popl %edi;popl %esi": 1,
                "pushl %eax;pushl $;pushl %edx;pushl %ecx;calll - <_allmul>": 1,
                "pushl $;pushl $;pushl %edx;pushl %eax;calll - <_allmul>": 3,
                "movl (%esi), %ecx;movl %ecx, (%esi);movl (%esi), %ecx;popl %edi;movl %ecx, (%esi)": 1,
                "movb %al, -(%ebp);jbe  <PoUnregisterSystemState+>;movl %edx, %esi;movb -(%ebp), %dl;cmpb (%ebp), %dl": 1,
                "cmpb (%ebp), %dl;jbe  <PoUnregisterSystemState+>;movb (%esi), %al;cmpb %dl, %al;jb  <PoUnregisterSystemState+>": 1,
                "calll *;movl (%ebp), %eax;testl %eax, %eax;je  <PoUnregisterSystemState+>;movb %bl, (%eax)": 1,
                "movl %ds:, %eax;movl (%eax), %ecx;addl (%eax), %ecx;movl (%eax), %eax;movl (%eax), %edx": 1,
                "movl (%eax), %edx;leal (%esi), %eax;testb $, (%eax);jne  <PoUnregisterSystemState+>;movzbl (%ebp), %eax": 1,
                "andl $, (%esi);movb %al, (%esi);movb (%ebp), %al;movb %al, (%esi);movl (%ebp), %eax": 1,
                "movb %al, (%esi);movl (%ebp), %eax;movl %edx, (%esi);movl %ecx, (%esi);movl %ecx, (%esi)": 1,
                "pushl $;addl $, %eax;pushl %eax;calll - <KeInitializeDpc+>;popl %ebp": 1,
                "shll %esi;testl %edi, %edi;jne - <PoUnregisterSystemState+>;calll - <KeRevertToUserAffinityThread>;popl %esi": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);movl (%ecx), %eax;movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movl (%ecx), %ecx;subl $, %eax;movl %ecx, -(%ebp);movb (%eax), %cl;movb %cl, -(%ebp)": 1,
                "je  <PoUnregisterSystemState+>;pushl %eax;calll - <wcslen>;cmpl $, %eax;popl %ecx": 1,
                "jmp  <PoUnregisterSystemState+>;pushl %esi;calll - <KeSetSystemAffinityThread>;movl %esi, %eax;notl %eax": 1,
                "shll %esi;movb $, %cl;movl %edi, -(%ebp);movl %esi, -(%ebp);calll *": 1,
                "je  <PoUnregisterSystemState+>;movb %al, (%esi);calll - <InbvNotifyDisplayOwnershipLost+>;movb -(%ebp), %cl;calll *": 1,
                "nop;nop;nop;xorl %eax, %eax;pushl %eax": 7,
                "nop;xorl %eax, %eax;pushl %eax;pushl %eax;pushl $": 1,
                "pushl $;movb %al, ;calll - <KeSetEvent>;movl $, %eax;movl $, %ecx": 1,
                "xchgl %eax, (%ecx);retl $;nop;nop;nop": 1,
                "pushl $;calll - <KeCancelTimer>;testb %al, %al;jne  <PoUnregisterSystemState+>;pushl $": 1,
                "nop;pushl $;calll - <KeResetEvent>;movl $, %eax;movl $, %ecx": 1,
                "pushl %ebx;pushl %edi;leal (%eax,%eax,), %edi;shll %edi;calll *": 1,
                "sbbl (%esi), %eax;movl (%esi), %edx;xorl %edi, %edi;cmpl %edi, %eax;jb  <PoUnregisterSystemState+>": 1,
                "jb  <PoUnregisterSystemState+>;ja  <PoUnregisterSystemState+>;cmpl %edx, %ecx;jb  <PoUnregisterSystemState+>;movb $, -(%ebp)": 1,
                "movl %edx, (%esi);jmp  <PoUnregisterSystemState+>;movl (%ebp), %ecx;subl (%esi), %ecx;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;sbbl (%esi), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax;jb  <PoUnregisterSystemState+>": 1,
                "addl %edx, %eax;movl %eax, %edx;xorl %ecx, %edx;jl  <PoUnregisterSystemState+>;subl %eax, -(%ebp)": 1,
                "movl %ecx, (%esi);jmp  <PoUnregisterSystemState+>;andb $-, (%esi);movl $, (%esi);movb %al, %dl": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %esi;movl , %esi;cmpl $, %esi": 1,
                "je  <PsGetVersion+>;movl , %ecx;movl %ecx, (%eax);movl , %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;xorl %ebx, %ebx;testb $, (%esi);movb %bl, -(%ebp)": 1,
                "movb $, -(%ebp);pushl -(%ebp);calll - <IoReleaseVpbSpinLock>;cmpb %bl, -(%ebp);je  <PsGetCurrentThreadStackLimit+>": 1,
                "calll - <IoReleaseVpbSpinLock>;movl (%edi), %eax;movl (%eax), %eax;andl $-, (%eax);cmpl %ebx, (%edi)": 1,
                "cmpb %bl, %al;jne  <PsGetCurrentThreadStackLimit+>;pushl %ebx;pushl (%ebp);calll - <KeReleaseMutex>": 1,
                "jne  <PsGetCurrentThreadStackLimit+>;pushl %ebx;pushl (%ebp);calll - <KeReleaseMutex>;popl %edi": 1,
                "movl %eax, -(%ebp);movl %ecx, %eax;pushl %esi;leal (%eax), %esi;movb (%eax), %dl": 1,
                "subl %esi, %eax;movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);calll  <RtlTraceDatabaseAdd+>": 1,
                "jmp - <KeInitializeMutant+>;int;int;int;int": 1,
                "popl %ebx;testl %edx, %edx;jne  <vDbgPrintEx+>;cmpw %si, %di;ja  <vDbgPrintEx+>": 1,
                "jne  <vDbgPrintEx+>;cmpw %si, %di;ja  <vDbgPrintEx+>;testw %di, %di;jne  <vDbgPrintEx+>": 1,
                "movl (%edx), %edx;movl %ecx, %eax;shrl $, %eax;movsbl (%eax,%edx), %eax;andl $, %ecx": 1,
                "movl %ecx, -(%ebp);jmp  <RtlFindSetBits+>;testl %eax, %eax;je  <RtlFindSetBits+>;addl $, %eax": 1,
                "movl %eax, -(%ebp);jbe  <RtlFindSetBits+>;movl %ecx, -(%ebp);xorl %eax, %eax;andl %eax, (%ebp)": 1,
                "jbe  <RtlFindSetBits+>;movl %ecx, -(%ebp);xorl %eax, %eax;andl %eax, (%ebp);andl %eax, -(%ebp)": 1,
                "movl %edi, -(%ebp);movb %cl, (%ebp);ja  <RtlFindSetBits+>;xorb %bl, %bl;shll $, %eax": 1,
                "movl (%ebp), %eax;subl %ebx, %eax;leal (%esi,%eax), %ebx;cmpl -(%ebp), %ebx;jbe  <RtlFindSetBits+>": 1,
                "movb (%edi), %cl;incl %edi;jmp - <RtlFindSetBits+>;cmpl $, %esi;jae  <RtlFindSetBits+>": 1,
                "incl %edi;jmp - <RtlFindSetBits+>;cmpl $, %esi;jae  <RtlFindSetBits+>;leal (,%eax,), %edi": 1,
                "cmpl $, %esi;jae  <RtlFindSetBits+>;leal (,%eax,), %edi;movl -(%ebp), %eax;shll $, %eax": 1,
                "subl $, %eax;leal (%esi,%eax), %ecx;cmpl -(%ebp), %ecx;jbe  <RtlFindSetBits+>;xorl %eax, %eax": 1,
                "movb (%ebp), %cl;movb -(%ebp), %al;addl $, %edi;cmpl -(%ebp), %edi;movb %cl, -(%ebp)": 1,
                "jb - <RtlFindSetBits+>;incl -(%ebp);cmpl $, -(%ebp);jb - <RtlFindSetBits+>;orl $-, %eax": 1,
                "cmpl -(%ebp), %ecx;jb  <RtlFindSetBits+>;xorl %ecx, %ecx;movb -(%ebp), %cl;xorl %ebx, %ebx": 1,
                "notl %ecx;andl %edx, %ecx;movsbl (%ecx), %ecx;notl %ebx;andl %edx, %ebx": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;leal (%ebx,%ecx,), %ecx;cmpl %esi, %ecx;jb  <RtlFindSetBits+>": 1,
                "jmp - <RtlFindSetBits+>;nop;int;int;int": 1,
                "andl $, %ecx;orl %esi, %ecx;je  <RtlFindMostSignificantBit+>;movb $, %bl;jmp  <RtlFindMostSignificantBit+>": 1,
                "xorl %esi, %esi;orl %esi, %ecx;je  <RtlFindMostSignificantBit+>;movb $, %bl;jmp  <RtlFindMostSignificantBit+>": 1,
                "xorb %bl, %bl;movzbl %bl, %ecx;calll - <_aullshr>;movzbl %al, %ecx;movb %bl, %al": 1,
                "jne  <RtlFindFirstRunClear+>;movl $, %eax;pushl (%ebp);pushl -(%ebp);pushl %esi": 1,
                "subl $, %eax;je  <RtlFindFirstRunClear+>;decl %eax;je  <RtlFindFirstRunClear+>;subl $, %eax": 1,
                "cmpb (%eax), %ah;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb (%edx), %ch": 1,
                "jb  <RtlFindFirstRunClear+>;subb $, %al;je  <RtlAssert+>;jb  <RtlAssert+>;imull $, (%esi), %ebp": 1,
                "movl (%edx), %ecx;movl (%ebp), %ebx;addl %ecx, (%ebp);movl %ecx, (%ebx,%eax,);incl %eax": 1,
                "popl %edx;movl $, (%ecx);addl $, %ecx;decl %edx;jne - <RtlCaptureStackBackTrace+>": 1,
                "movsw (%esi), %es:(%edi);popl %edi;movb $, (%eax);movb $, (%eax);movl $, (%eax)": 2,
                "movl $, (%eax);popl %esi;popl %ebp;retl $;nop": 2,
                "pushl %eax;movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp)": 3,
                "pushl %eax;calll  <RtlSetOwnerSecurityDescriptor>;testl %eax, %eax;jl  <RtlCaptureStackBackTrace+>;leal -(%ebp), %eax": 1,
                "calll - <ZwSetSecurityObject>;pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;jne  <RtlSubtreeSuccessor+>;popl %ebp": 1,
                "jmp - <RtlSubtreeSuccessor+>;jmp - <RtlSubtreeSuccessor+>;nop;int;int": 1,
                "jne  <RtlInsertElementGenericTableFull+>;movl %ebx, (%eax);jmp  <RtlInsertElementGenericTableFull+>;movl %ebx, (%eax);movl %eax, (%ebx)": 1,
                "je  <RtlGetElementGenericTable+>;decl %esi;movl (%eax), %eax;je  <RtlGetElementGenericTable+>;jmp - <RtlGetElementGenericTable+>": 1,
                "je  <RtlGetElementGenericTable+>;movl %ebx, %edx;decl %edx;movl (%eax), %eax;je  <RtlGetElementGenericTable+>": 1,
                "movl %ebx, %edx;decl %edx;movl (%eax), %eax;je  <RtlGetElementGenericTable+>;jmp - <RtlGetElementGenericTable+>": 1,
                "testl %edx, %edx;leal (%ecx), %eax;je  <RtlGetElementGenericTable+>;decl %edx;movl (%eax), %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <RtlEnumerateGenericTableWithoutSplaying+>": 1,
                "je  <RtlEnumerateGenericTableWithoutSplaying+>;pushl %ecx;calll - <RtlRealSuccessor>;testl %eax, %eax;je  <RtlEnumerateGenericTableWithoutSplaying+>": 1,
                "je  <RtlEnumerateGenericTableWithoutSplaying+>;movl %eax, (%esi);leal (%eax), %ecx;negl %eax;sbbl %eax, %eax": 1,
                "jmp  <RtlEnumerateGenericTableWithoutSplaying+>;leal (%esi), %eax;pushl %eax;pushl (%ebp);pushl %edi": 1,
                "je  <RtlEnumerateGenericTableWithoutSplaying+>;movl %eax, %esi;jmp - <RtlEnumerateGenericTableWithoutSplaying+>;cmpl $, %eax;jne  <RtlEnumerateGenericTableWithoutSplaying+>": 1,
                "pushl %eax;pushl (%ebp);calll - <RtlEnumerateGenericTableWithoutSplaying+>;testl %eax, %eax;je  <RtlDeleteElementGenericTable+>": 1,
                "movl %eax, (%ecx);movl %ecx, (%eax);decl (%edi);andl $, (%edi);pushl %esi": 1,
                "movl %ecx, (%eax);decl (%edi);andl $, (%edi);pushl %esi;leal (%edi), %eax": 1,
                "pushl (%ebp);calll - <RtlEnumerateGenericTableWithoutSplaying+>;testl %eax, %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "addl $, %eax;jmp  <RtlLookupElementGenericTableFull+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "testl %esi, %esi;je  <RtlEnumerateGenericTable+>;pushl %esi;calll - <RtlSplay>;movl %eax, (%edi)": 1,
                "calll - <RtlSplay>;movl %eax, (%edi);movl %esi, %eax;addl $, %esi;negl %eax": 1,
                "decl %edi;je  <RtlGetElementGenericTableAvl+>;jmp - <RtlGetElementGenericTableAvl+>;jmp  <RtlGetElementGenericTableAvl+>;movl (%esi), %eax": 1,
                "cmpl (%edi), %eax;je  <RtlEnumerateGenericTableLikeADirectory+>;xorl %esi, %esi;movl %esi, -(%ebp);cmpl %ebx, %esi": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);cmpl %ebx, %esi;jne  <RtlEnumerateGenericTableLikeADirectory+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;cmpl %ebx, (%ebp);je  <RtlEnumerateGenericTableLikeADirectory+>;pushl %esi;calll - <RtlRealSuccessor>": 1,
                "je  <RtlEnumerateGenericTableLikeADirectory+>;pushl %esi;calll - <RtlRealSuccessor>;movl %eax, %esi;jmp  <RtlEnumerateGenericTableLikeADirectory+>": 1,
                "movl %eax, %ebx;cmpl $, %ebx;jne  <RtlEnumerateGenericTableLikeADirectory+>;pushl %esi;calll - <RtlRealSuccessor>": 1,
                "testb $, (%ebp);movl , %eax;pushl %edi;movl (%ebp), %edi;movl %eax, -(%ebp)": 1,
                "calll - <sprintf>;pushl (%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "jmp  <RtlEnumerateGenericTableLikeADirectory+>;sbbl %eax, %eax;sbbl $-, %eax;xorl %edx, %edx;movl %eax, %ecx": 1,
                "movl (%ebp), %edx;cmpl %ecx, %edx;sete %al;movb %al, (%edi);movl (%ebp), %eax": 1,
                "setle %al;jmp  <RtlEnumerateGenericTableLikeADirectory+>;xorl %eax, %eax;cmpl %edx, %ecx;setl %al": 1,
                "movl %edx, (%esi);jne  <RtlEnumerateGenericTableLikeADirectory+>;cmpl (%ecx), %eax;jb  <RtlEnumerateGenericTableLikeADirectory+>;pushl %eax": 1,
                "cmpw %dx, %cx;jne  <RtlIpvAddressToStringA+>;movw (%esi), %ax;cmpw %dx, %ax;je  <RtlIpvAddressToStringA+>": 1,
                "addl $, %esp;jmp  <RtlIpvAddressToStringA+>;cmpw $-, %cx;jne  <RtlIpvAddressToStringA+>;cmpw %dx, (%esi)": 1,
                "cmpw %dx, (%esi);jne  <RtlIpvAddressToStringA+>;movzbl (%esi), %eax;pushl %eax;movzbl (%esi), %eax": 1,
                "pushl %edi;xorl %edi, %edi;testw $, (%esi);movl %edx, (%ebp);movl %edx, -(%ebp)": 2,
                "cmpw %dx, (%ecx);jne  <RtlIpvAddressToStringA+>;movl (%ebp), %ebx;subl -(%ebp), %ebx;movl %eax, %edx": 1,
                "jle  <RtlIpvAddressToStringA+>;movl %edi, -(%ebp);movl %eax, (%ebp);xorl %edx, %edx;incl %ecx": 1,
                "je  <RtlIpvAddressToStringA+>;cmpl (%ebp), %edi;je  <RtlIpvAddressToStringA+>;pushl $;pushl %ebx": 1,
                "pushl %ebx;calll - <sprintf>;popl %ecx;popl %ecx;addl %eax, %ebx": 1,
                "movl %ebx, %eax;popl %ebx;popl %esi;leave;retl $": 7,
                "nop;addb %al, (%eax);addb %al, (%eax);cmpb (%eax), %al;addb %al, (%eax)": 2,
                "cmpb (%eax), %al;addb %al, (%eax);cmpb (%edx), %bh;andl $, %eax;andl $, %eax": 1,
                "pushl (%ebp);pushl $;pushl %esi;calll - <sprintf>;addl $, %esp": 1,
                "calll - <IoQueueWorkItem+>;leave;retl $;popl %ebx;addb %al, (%eax)": 2,
                "addb %al, (%eax);addb %ah, ;addb %al, (%eax);addb %bl, (%ebp);andl $, %eax": 1,
                "addl (%ebp), %eax;popl %ebp;retl $;nop;andl $, %eax": 1,
                "movl $, %eax;jmp  <RtlIpvAddressToStringExA+>;movl %edx, %ecx;movl %ecx, %eax;shrl $, %ecx": 1,
                "jmp  <RtlIpvAddressToStringExA+>;movl %edx, %ecx;movl %ecx, %eax;shrl $, %ecx;leal -(%ebp), %esi": 1,
                "jmp  <RtlIpvAddressToStringExA+>;movl $, %eax;movl -(%ebp), %ecx;popl %edi;popl %ebx": 1,
                "pushl %eax;pushl $;pushl %esi;calll - <swprintf>;addl $, %esp": 5,
                "movl %esi, %ecx;movl %ebx, -(%ebp);cmpw %dx, (%ecx);jne  <RtlIpvAddressToStringW+>;movl (%ebp), %ebx": 1,
                "subl %edi, %edx;cmpl %ebx, %edx;jle  <RtlIpvAddressToStringW+>;movl %edi, -(%ebp);movl %eax, (%ebp)": 1,
                "cmpl %edx, -(%ebp);jg  <RtlIpvAddressToStringW+>;jmp  <RtlIpvAddressToStringW+>;jmp  <RtlIpvAddressToStringW+>;movl %eax, %edi": 1,
                "pushl $;pushl %edi;calll - <swprintf>;movl (%ebp), %ebx;popl %ecx": 1,
                "calll - <swprintf>;movl (%ebp), %ebx;popl %ecx;popl %ecx;decl %ebx": 1,
                "popl %ecx;popl %ecx;leal (%edi,%eax,), %edi;movw (%esi,%ebx,), %ax;movb %al, %ch": 1,
                "addb %al, (%eax);cmpb (%eax), %al;cmpb (%eax), %al;andl $, %eax;addb %ah, ": 1,
                "andl $, %eax;addb %ah, ;addb %ah, ;addb %ah, ;addb %ah, ": 1,
                "addb %bh, (%edx);addb %dh, (%eax);addb %bh, (%edx);addb %ah, ;addb %ah, ": 1,
                "je  <RtlIpvAddressToStringExW+>;testl %edi, %edi;je  <RtlIpvAddressToStringExW+>;testl %ebx, %ebx;je  <RtlIpvAddressToStringExW+>": 2,
                "movl (%ebp), %esi;pushl %ecx;movzbl (%eax), %ecx;pushl %ecx;movzbl (%eax), %ecx": 1,
                "testl %edi, %edi;je  <RtlIpvAddressToStringExW+>;testl %ebx, %ebx;je  <RtlIpvAddressToStringExW+>;pushl %esi": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll - <RtlIpvAddressToStringW>;cmpw $, (%ebp)": 1,
                "retl $;nop;cmpb (%eax), %al;andl $, %eax;addb %cl, %ah": 1,
                "movl %edx, -(%ebp);jne  <RtlIpvStringToAddressA+>;jmp  <RtlIpvStringToAddressA+>;jmp  <RtlIpvStringToAddressA+>;xorl %edx, %edx": 1,
                "je  <RtlIpvStringToAddressA+>;incl -(%ebp);jmp  <RtlIpvStringToAddressA+>;pushl %esi;calll  <isprint+>": 1,
                "cmpb $, %bl;jne  <RtlIpvStringToAddressA+>;cmpl $, -(%ebp);ja  <RtlIpvStringToAddressA+>;cmpl $, -(%ebp)": 1,
                "ja  <RtlIpvStringToAddressA+>;leal (%edi), %eax;cmpb %bl, (%eax);jne  <RtlIpvStringToAddressA+>;cmpl $, -(%ebp)": 1,
                "pushl $;movl %ecx, -(%ebp);popl %ecx;addl %ecx, -(%ebp);jmp  <RtlIpvStringToAddressA+>": 1,
                "cmpb %bl, (%eax);jne  <RtlIpvStringToAddressA+>;movl -(%ebp), %edi;movl (%ebp), %esi;incl -(%ebp)": 1,
                "movb (%edi), %bl;testb %bl, %bl;jne - <RtlIpvStringToAddressA+>;movl (%ebp), %eax;movl %edi, (%eax)": 1,
                "movl %edi, (%eax);movl -(%ebp), %edi;xorl %eax, %eax;cmpl %eax, %edi;je  <RtlIpvStringToAddressA+>": 1,
                "jne  <RtlIpvStringToAddressA+>;incl -(%ebp);movl -(%ebp), %esi;cmpl %eax, %esi;jne  <RtlIpvStringToAddressA+>": 1,
                "cmpl $, -(%ebp);jne  <RtlIpvStringToAddressA+>;cmpl $, -(%ebp);jne  <RtlIpvStringToAddressA+>;cmpl %eax, %edi": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %edx;leal (%edi,%ecx,), %ecx;movb %al, (%ecx,%edx);jmp  <RtlIpvStringToAddressA+>": 1,
                "pushl %ecx;leal (%eax,%esi,), %eax;pushl %edi;pushl %eax;calll - <memmove>": 1,
                "xorl %ecx, %ecx;cmpl %ecx, %eax;pushl %esi;pushl %edi;je  <RtlIpvStringToAddressExA+>": 1,
                "calll  <islower>;testl %eax, %eax;popl %ecx;je  <RtlIpvStringToAddressExA+>;pushl $": 4,
                "subl %eax, %ecx;leal (%ebx,%ecx), %eax;movl %eax, -(%ebp);incl %esi;movb (%esi), %al": 1,
                "movw -(%ebp), %ax;movb %al, %ch;movb %ah, %cl;movl (%ebp), %eax;movw %cx, (%eax)": 2,
                "testl %eax, %eax;popl %ecx;je  <RtlIpvStringToAddressA+>;pushl %esi;calll  <isprint+>": 1,
                "testl %eax, %eax;popl %ecx;je  <RtlIpvStringToAddressA+>;pushl %esi;calll  <islower>": 1,
                "jmp  <RtlIpvStringToAddressA+>;pushl $;movl -(%ebp), %ecx;popl %eax;shll $, %ecx": 1,
                "addl $, %edi;incl %ebx;cmpb $, (%ebp);je  <RtlIpvStringToAddressA+>;jmp - <RtlIpvStringToAddressA+>": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);movl $, %eax;jmp  <RtlIpvStringToAddressA+>;movl -(%ebp), %edi": 1,
                "ja - <RtlIpvStringToAddressA+>;movl -(%ebp), %edx;cmpl %eax, %edx;ja - <RtlIpvStringToAddressA+>;andl %eax, %ecx": 1,
                "andl %eax, %ecx;shll $, %edi;orl %edi, %ecx;shll $, %ecx;andl %eax, %esi": 1,
                "jmp  <RtlIpvStringToAddressA+>;movl -(%ebp), %esi;movl $, %eax;cmpl %eax, %esi;ja - <RtlIpvStringToAddressA+>": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebp);pushl %edi;je  <RtlIpvStringToAddressExA+>": 1,
                "movl $, (%ebp);jne  <RtlIpvStringToAddressExA+>;incl %edi;movb (%edi), %al;cmpb $, %al": 1,
                "jmp  <RtlIpvStringToAddressExA+>;pushl $;movzwl (%ebp), %ecx;popl %eax;shll $, %ecx": 1,
                "jne - <RtlIpvStringToAddressExA+>;cmpb %bl, (%ebp);je  <RtlIpvStringToAddressExA+>;movl $, %eax;popl %edi": 1,
                "movl %esi, (%ebp);movw (%ebp), %ax;movb %al, %ch;movb %ah, %cl;movl (%ebp), %eax": 1,
                "movb %ah, %cl;movl (%ebp), %eax;movw %cx, (%eax);xorl %eax, %eax;jmp - <RtlIpvStringToAddressExA+>": 1,
                "ja  <RtlIpvStringToAddressW+>;cmpl %edx, -(%ebp);ja  <RtlIpvStringToAddressW+>;leal (%edi), %eax;cmpw %si, (%eax)": 1,
                "jne  <RtlIpvStringToAddressW+>;movl (%ebp), %esi;pushl $;popl %ecx;movw %dx, (%esi,%ebx,)": 1,
                "movl (%ebp), %esi;pushl $;popl %ecx;movw %dx, (%esi,%ebx,);movl $, -(%ebp)": 1,
                "pushl -(%ebp);calll  <wcstombs+>;movb %al, %ch;addl $, %esp;movb %ah, %cl": 2,
                "xorl %edx, %edx;movw (%edi), %si;cmpw %dx, %si;jne - <RtlIpvStringToAddressW+>;movl (%ebp), %eax": 1,
                "cmpl $, -(%ebp);jne  <RtlIpvStringToAddressW+>;movl (%ebp), %ecx;movw %ax, (%ecx,%ebx,);movl -(%ebp), %eax": 1,
                "pushl %edx;leal (%ecx,%eax,), %eax;pushl %edi;pushl %eax;calll - <memmove>": 1,
                "movw (%edi), %si;testw %si, %si;movl %eax, -(%ebp);jne - <RtlIpvStringToAddressExW+>;cmpw $, (%edi)": 2,
                "movl $, (%ebp);jne  <RtlIpvStringToAddressExW+>;addl %ecx, %edi;movw (%edi), %ax;cmpw $, %ax": 1,
                "addl %ecx, %edi;movw (%edi), %ax;cmpw $, %ax;movl $, (%ebp);je  <RtlIpvStringToAddressExW+>": 1,
                "movl $, %eax;cmpw %ax, %si;jae  <RtlIpvStringToAddressExW+>;pushl %eax;pushl %esi": 2,
                "jne - <RtlIpvStringToAddressExW+>;cmpw $, (%edi);jne  <RtlIpvStringToAddressExW+>;cmpb $, (%ebp);jne  <RtlIpvStringToAddressExW+>": 1,
                "movzwl %bx, %ecx;imull %ecx, %eax;movzwl %si, %ecx;leal -(%eax,%ecx), %eax;cmpl $, %eax": 1,
                "ja  <RtlIpvStringToAddressExW+>;movl (%ebp), %eax;imull %ebx, %eax;leal -(%eax,%esi), %ebx;jmp  <RtlIpvStringToAddressExW+>": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi;movl %ebx, %eax": 2,
                "jne  <RtlLargeIntegerDivide+>;pushl $;calll  <RtlTraceDatabaseAdd+>;movl (%ebp), %edx;movl (%ebp), %eax": 1,
                "movl %edx, (%ecx);popl %ebx;popl %ebp;retl $;nop": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;pushl $;pushl ": 2,
                "pushl (%ebp);movl (%ebp), %edi;pushl %edi;calll *(%esi);movl %eax, %ecx": 1,
                "incl (%ecx);xorl %edx, %edx;divl (%esi);movl (%esi), %eax;movl (%eax,%edx,), %edx": 1,
                "movl (%esi), %eax;movl (%eax,%edx,), %edx;jmp  <RtlTimeToSecondsSince+>;cmpl (%edx), %edi;jne  <RtlTimeToSecondsSince+>": 1,
                "je  <RtlTimeToSecondsSince+>;movl (%edx), %edx;testl %edx, %edx;jne - <RtlTimeToSecondsSince+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <RtlTimeToSecondsSince+>;movl %edx, (%eax);movb $, %al": 1,
                "calll  <ExAllocatePoolWithTag>;popl %ebp;retl $;nop;int": 1,
                "movl (%ebp), %esi;pushl %esi;calll - <RtlTimeToSecondsSince+>;movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "jmp  <RtlTraceDatabaseEnumerate+>;incl (%eax);movl (%eax), %ecx;cmpl (%esi), %ecx;jae  <RtlTraceDatabaseEnumerate+>": 1,
                "movl %ecx, (%esi);movl (%ebp), %ecx;pushl $;movl %ecx, (%esi);movl %edi, (%esi)": 1,
                "pushl $;movl %ecx, (%esi);movl %edi, (%esi);movl %eax, (%esi);movl %eax, (%esi)": 1,
                "popl %ecx;xorl %eax, %eax;movl $, (%esi);movl $, (%esi);leal (%esi), %edi": 1,
                "andl $, %eax;int;int;int;int": 16,
                "jmp  <RtlTraceDatabaseValidate+>;movl (%eax), %eax;testl %eax, %eax;jne - <RtlTraceDatabaseValidate+>;addl $, %ecx": 1,
                "incl (%eax);testl %ecx, %ecx;je  <RtlTraceDatabaseFind+>;movl %eax, (%ecx);incl (%edi)": 1,
                "incl (%edi);movb $, %al;jmp  <RtlTraceDatabaseFind+>;movl (%edi), %eax;movl (%eax), %edx": 1,
                "testl %eax, %eax;je - <RtlTraceDatabaseFind+>;leal (%eax), %ecx;movl %ecx, (%eax);leal (%eax), %ecx": 1,
                "shll $, %eax;pushl %eax;pushl (%ebp);pushl (%esi);calll - <memmove>": 1,
                "movl (%edi), %ecx;movl %ebx, %eax;shll $, %eax;movl (%eax,%ecx), %ecx;movl %ecx, (%esi)": 1,
                "movl (%eax,%ecx), %ecx;movl %ecx, (%esi);movl (%edi), %ecx;movl %esi, (%eax,%ecx);movl (%ebp), %eax": 1,
                "pushl %esp;jb  <RtlTraceDatabaseLock+>;arpl %sp, (%ebp);popal;je  <RtlTraceDatabaseUnlock+>": 1,
                "imull $, %eax, %eax;pushl $;pushl %eax;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "leal (%ecx,%eax), %edi;pushl $;popl %ecx;rep  movsl (%esi), %es:(%edi);movl , %ecx": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movl , %ecx;movl (%ebp), %esi;leal (%eax,%ecx), %edi": 1,
                "movl , %ecx;movl (%ebp), %esi;leal (%eax,%ecx), %edi;movl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax;pushl $;leal (%ebp), %eax": 1,
                "jmp  <RtlTraceDatabaseAdd+>;cmpl %ebx, (%ebp);jne  <RtlTraceDatabaseAdd+>;pushl $;popl %ecx": 1,
                "addl %ebx, %eax;cmpb $, (%esi);movl %eax, (%esi);jne  <RtlTraceDatabaseAdd+>;movl (%ebp), %eax": 1,
                "pushl %edi;movl %ecx, -(%ebp);jne  <RtlTraceDatabaseAdd+>;leal (%esi), %edi;movl (%edi), %eax": 1,
                "jne  <RtlTraceDatabaseAdd+>;leal (%esi), %edi;movl (%edi), %eax;addl $-, %ecx;cmpl %eax, %ecx": 1,
                "movl $, %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl $;pushl $;leal -(%ebp), %ecx;pushl %ecx;pushl $": 1,
                "jmp  <RtlTraceDatabaseAdd+>;pushl %ebx;pushl (%ebp);pushl %edi;calll - <memmove>": 1,
                "calll - <memmove>;andl $, (%edi);andl $, (%edi);addl $, %esp;incl (%esi)": 1,
                "movl -(%ebp), %eax;movl %edi, -(%eax);movl %edi, %eax;popl %edi;popl %esi": 1,
                "je  <RtlTraceDatabaseAdd+>;calll - <RtlTraceDatabaseAdd+>;movl %eax, %ecx;testl %ecx, %ecx;je  <RtlTraceDatabaseAdd+>": 1,
                "leal (%esi), %eax;pushl %eax;calll - <RtlCompareMemory>;cmpl %edi, %eax;je  <RtlTraceDatabaseAdd+>": 2,
                "pushl %eax;calll - <RtlTraceDatabaseAdd+>;movl %eax, %esi;movl %esi, -(%ebp);testl %esi, %esi": 2,
                "pushl %edi;je  <RtlTraceDatabaseAdd+>;movl (%eax), %edi;jmp  <RtlTraceDatabaseAdd+>;movl (%edi), %esi": 1,
                "addl $, %ebx;cmpl (%esi), %eax;jb - <RtlTraceDatabaseAdd+>;movl (%edi), %edi;testl %edi, %edi": 1,
                "pushl %ecx;movl (%ebp), %eax;movzwl (%eax), %edx;andw $, (%eax);xorl %ecx, %ecx": 1,
                "movl %ecx, (%edx);cmpl $, %esi;popl %ebx;jbe  <RtlTraceDatabaseAdd+>;movl %ecx, (%edx)": 1,
                "cmpl $, %esi;popl %ebx;jbe  <RtlTraceDatabaseAdd+>;movl %ecx, (%edx);movl %ecx, (%edx)": 1,
                "movl %ecx, (%edx);movl %ecx, (%edx);cmpl $, %esi;jbe  <RtlTraceDatabaseAdd+>;movl %ecx, (%edx)": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);movw %cx, (%eax);movw %cx, (%eax);je  <RtlTraceDatabaseAdd+>": 1,
                "pushl (%ebp);movl %eax, %esi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);calll - <RtlTraceDatabaseAdd+>;testb %al, %al": 1,
                "rep  movsb (%esi), %es:(%edi);calll - <RtlTraceDatabaseAdd+>;testb %al, %al;popl %edi;popl %esi": 1,
                "addl $, %esp;movl $, %eax;jmp  <RtlTraceDatabaseAdd+>;pushl (%ebp);pushl %ecx": 1,
                "pushl (%ebp);pushl %ecx;pushl $;pushl $;pushl $": 1,
                "popal;insb %dx, %es:(%edi);imull $, (%edx), %edi;pushl $;jb  <RtlTraceDatabaseAdd+>": 1,
                "jb  <RtlTraceDatabaseAdd+>;popal;insb %dx, %es:(%edi);imull $, (%edx), %edi;imull $, (%ecx), %esp": 1,
                "jne  <RtlTraceDatabaseAdd+>;movl -(%ebp), %ebx;movl (%ebx), %ebx;movl (%edx), %ecx;subl $, %ebx": 1,
                "pushl %edi;calll  <RtlTimeToElapsedTimeFields+>;movb $, %al;jmp  <RtlTraceDatabaseAdd+>;pushl $": 1,
                "pushl $;calll - <DbgPrintEx>;addl $, %esp;pushl %edi;calll  <RtlTimeToElapsedTimeFields+>": 1,
                "jo  <RtlTraceDatabaseAdd+>;jb  <RtlTraceDatabaseAdd+>;imull $, (%edi), %ebp;insb %dx, %es:(%edi);jne  <RtlTraceDatabaseAdd+>": 1,
                "xorl %edx, %edx;cmpl %eax, %edi;jne  <RtlTraceDatabaseAdd+>;movl (%ecx), %eax;cmpl %edx, %eax": 1,
                "subl $, %eax;je  <RtlTraceDatabaseAdd+>;pushl $;pushl $;pushl $": 1,
                "xorb %al, %al;jmp  <RtlTraceDatabaseAdd+>;pushl $;jmp - <RtlTraceDatabaseAdd+>;movl (%ebp), %eax": 1,
                "retl $;nop;pushl %ebp;outsb (%esi), %dx;jb  <RtlTraceDatabaseAdd+>": 1,
                "popal;jb  <RtlTraceDatabaseAdd+>;popal;jae  <RtlTraceDatabaseAdd+>;xorb (%eax), %al": 1,
                "jae  <RtlTraceDatabaseAdd+>;xorl %eax, (%eax);addb %al, (%eax);decl %eax;decl %edi": 1,
                "pushl (%eax);pushl $;calll - <_vsnprintf+>;popl %ebp;retl $": 1,
                "xorl %esi, %esi;incl %esi;pushl %esi;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "nop;nop;movl -(%ebp), %esp;orl $-, -(%ebp);calll - <_CIsqrt+>": 5,
                "je  <RtlTraceDatabaseAdd+>;andl $, (%eax);retl;nop;int": 1,
                "jmp  <RtlTraceDatabaseAdd+>;jmp  <RtlTraceDatabaseAdd+>;movl -(%ebp), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl , %ebx;calll *%ebx;movl %fs:, %eax;movl %eax, -(%ebp);testb $, (%eax)": 1,
                "jmp  <RtlTraceDatabaseAdd+>;movl (%ebp), %eax;cmpb $, (%eax);jne  <RtlTraceDatabaseAdd+>;movl , %esi": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jl  <RtlTraceDatabaseAdd+>;movl , %eax;testb $, %al": 1,
                "testb $, %cl;je  <RtlTraceDatabaseAdd+>;movl (%esi), %eax;testl $, %eax;jne  <RtlTraceDatabaseAdd+>": 2,
                "movl %eax, (%esi);jmp  <RtlTraceDatabaseAdd+>;nop;nop;nop": 1,
                "movl (%eax), %esi;movl %esi, -(%ebp);leal (%esi), %ecx;movl %ecx, -(%ebp);calll *": 1,
                "jne  <RtlTraceDatabaseAdd+>;movl %ebx, (%ecx);leal (%esi), %eax;movl (%eax), %edx;cmpl %eax, %edx": 1,
                "jmp - <RtlTraceDatabaseAdd+>;movl -(%ebp), %edi;movb -(%ebp), %cl;calll *;cmpl %ebx, -(%ebp)": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, %ecx;movl $, %edx;lock": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp)": 6,
                "calll - <RtlTraceDatabaseAdd+>;leal (%esi), %ecx;calll *;calll - <_CIsqrt+>;retl $": 1,
                "calll  <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <RtlTraceDatabaseAdd+>;pushl %ebx;pushl %esi": 1,
                "movb (%ebp), %cl;negb %al;sbbl %eax, %eax;andl $, %eax;addl $, %eax": 1,
                "leal (%eax), %edx;cmpl (%ebp), %edx;movl %eax, %esi;je  <RtlTraceDatabaseAdd+>;movl (%eax), %eax": 1,
                "je  <RtlTraceDatabaseAdd+>;jmp - <RtlTraceDatabaseAdd+>;jmp  <RtlTraceDatabaseAdd+>;movl (%ebp), %esi;cmpl %ecx, %eax": 1,
                "movl (%esi), %ecx;xorl %edx, %edx;cmpb %dl, (%esi);leal (%esi), %eax;pushl %edi": 1,
                "calll - <KeSaveStateForHibernate+>;testb %al, %al;jne  <RtlTraceDatabaseAdd+>;xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "leal (%esi), %eax;pushl %eax;calll - <KeSaveStateForHibernate+>;testb %al, %al;je  <RtlTraceDatabaseAdd+>": 1,
                "jmp  <RtlTraceDatabaseAdd+>;movb $, (%esi);popl %ebx;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "popl %ebx;movl -(%ebp), %ecx;testl %ecx, %ecx;popl %edi;je  <RtlTraceDatabaseAdd+>": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <RtlTraceDatabaseAdd+>;calll - <ObfDereferenceObject>;movl (%ebp), %ecx": 1,
                "cmpl %eax, %ebx;jne  <RtlTraceDatabaseAdd+>;movl $, %eax;jmp  <RtlTraceDatabaseAdd+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);testb $, (%ebp);je  <RtlTraceDatabaseAdd+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "movl -(%ebp), %ecx;shll %cl, %eax;movl %eax, -(%ebp);testl %eax, %eax;jne  <RtlTraceDatabaseAdd+>": 1,
                "movl (%ebx), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl (%ecx), %eax;movl %eax, (%ecx);movl , %eax;cmpl %eax, %edx;jb  <RtlTraceDatabaseAdd+>": 1,
                "movl (%edx), %eax;movl %eax, (%edx);orl $-, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "cmpl $, %ecx;jae  <RtlTraceDatabaseAdd+>;movl $, %ecx;jmp  <RtlTraceDatabaseAdd+>;leal (%ecx,%ecx,), %ecx": 1,
                "pushl %esi;pushl %edx;calll - <ZwSetTimer+>;movl -(%ebp), %ecx;movl , %eax": 1,
                "movl , %eax;cmpl %eax, %ecx;jae  <RtlTraceDatabaseAdd+>;shrl %ecx;jmp  <RtlTraceDatabaseAdd+>": 1,
                "pushl ;pushl $;pushl -(%ebp);calll  <ObReferenceObjectByHandle>;movl %eax, %esi": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);testl %esi, %esi;jge  <RtlTraceDatabaseAdd+>;movl %edi, %ecx": 1,
                "cmpl %ecx, %eax;jne  <RtlTraceDatabaseAdd+>;xorl %esi, %esi;cmpl %esi, -(%ebp);jne  <RtlTraceDatabaseAdd+>": 1,
                "pushl $;pushl -(%ebp);calll - <PsChargePoolQuota>;orl $-, -(%ebp);pushl $": 1,
                "calll - <PsChargePoolQuota>;orl $-, -(%ebp);pushl $;popl %ecx;xorl %eax, %eax": 1,
                "leal (%ebx), %eax;pushl %eax;calll - <KeInitializeDpc>;jmp - <RtlTraceDatabaseAdd+>;nop": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);pushl $;pushl -(%ebp)": 2,
                "leal (%esi), %eax;cmpb $, (%eax);jne  <RtlTraceDatabaseAdd+>;movb $, (%eax);xorl %esi, %esi": 1,
                "jmp  <RtlTraceDatabaseAdd+>;cmpl $, -(%ebp);jne  <RtlTraceDatabaseAdd+>;movl -(%ebp), %eax;orl %edi, (%eax)": 1,
                "movl -(%ebp), %eax;jmp  <RtlTraceDatabaseAdd+>;nop;nop;nop": 2,
                "pushl $;pushl $;calll - <VfIsVerificationEnabled>;testb %al, %al;je  <VfFailSystemBIOS+>": 1,
                "pushl %ecx;cmpb $, ;je  <VfFailDriver+>;leal (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);calll ;leave;retl;nop": 1,
                "jmp - <VfFailDriver+>;int;int;int;int": 2,
                "movl (%ecx), %ecx;cmpl %esi, %ecx;jne - <VfFailDriver+>;movb %al, %dl;movl %edi, %ecx": 1,
                "jne  <VfFailDriver+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "je  <VfFailDriver+>;pushl %edi;leal (%esi), %edi;movl %edi, %ecx;calll *": 1,
                "calll *;pushl (%ebp);movb %al, (%ebp);pushl $;leal (%esi), %eax": 1,
                "cmpl $-, %eax;je  <VfFailDriver+>;movl (%esi), %ecx;movl (%ecx,%eax,), %ebx;movb (%ebp), %dl": 1,
                "movl %ebx, %eax;popl %edi;jmp  <VfFailDriver+>;xorl %eax, %eax;popl %esi": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax;je  <VfFailDriver+>;movl (%ebp), %ecx": 1,
                "movb %al, (%ebp);calll - <RtlClearBits>;movb (%ebp), %dl;movl %esi, %ecx;calll *": 1,
                "calll - <RtlClearBits>;movb (%ebp), %dl;movl %esi, %ecx;calll *;xorl %eax, %eax": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <VfFailDriver+>;xorl %esi, %esi": 1,
                "movl (%ecx), %ecx;testl %ecx, %ecx;je  <VfFailDriver+>;movl %ecx, %eax;movl (%eax), %ecx": 1,
                "pushl %esi;movl (%eax), %ecx;testl %ecx, %ecx;je  <VfFailDriver+>;movl (%eax), %esi": 1,
                "je  <VfFailDriver+>;movl (%eax), %esi;movl %esi, (%ecx);movl (%eax), %eax;cmpl %edx, %eax": 1,
                "pushl $;calll - <DbgPrint>;pushl $;calll - <DbgPrint>;pushl %esi": 5,
                "andb %cl, %fs:(%ecx);pushl %ecx;decl %esp;andb %ch, ;andb %ah, %fs:": 2,
                "pushl %edi;movl %eax, (%ebp);movl (%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "calll - <DbgPrint>;pushl $;calll - <DbgPrint>;addl $, %esp;cmpl %ebx, (%esi)": 2,
                "pushl %eax;calll ;cmpb $, (%ebp);jne  <VfFailDriver+>;movl , %eax": 1,
                "calll - <DbgPrint>;pushl $;calll - <DbgPrint>;pushl (%esi);movl (%ebp), %ebx": 1,
                "pushl $;incl %eax;pushl %eax;calll ;popl %edi": 1,
                "leave;retl $;nop;nop;incl %ecx": 1,
                "nop;nop;incl %ecx;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 1,
                "outsb (%esi), %dx;jns  <VfFailDriver+>;insl %dx, %es:(%edi);popal;jo  <VfFailDriver+>": 3,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);imull $, (%esi), %ebp;andb %ch, (%ebp)": 1,
                "movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;pushl %ebx;negl %eax": 1,
                "retl $;nop;incl %esi;jb  <VfFailDriver+>;andb %dh, %fs:(%edi,%ebp,)": 2,
                "pushl %edi;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 2,
                "calll - <DbgPrint>;pushl %ebx;calll - <DbgPrint>;pushl $;calll - <DbgPrint>": 2,
                "pushl $;incl %eax;pushl %eax;calll ;popl %ebx": 1,
                "andb %ch, (%ebp);outsb (%esi), %dx;jns  <VfFailDriver+>;arpl %bp, (%edi);insl %dx, %es:(%edi)": 1,
                "pushl %esi;pushl %ebx;pushl $;calll - <DbgPrint>;pushl $": 3,
                "jae  <VfFailDriver+>;insl %dx, %es:(%edi);popal;jo  <VfFailDriver+>;cmpb %fs:(%eax), %ah": 1,
                "jns  <VfFailDriver+>;jae  <VfFailDriver+>;insl %dx, %es:(%edi);jne  <VfFailDriver+>;je  <VfFailDriver+>": 2,
                "insl %dx, %es:(%edi);jne  <VfFailDriver+>;je  <VfFailDriver+>;outsb (%esi), %dx;outsl %gs:(%esi), %dx": 2,
                "jne  <VfFailDriver+>;movzbl , %eax;movl %eax, ;cmpl (%esi), %edi;je  <VfFailDriver+>": 1,
                "xorl %eax, %eax;cmpl (%esi), %edi;pushl $;sete %al;pushl $": 1,
                "pushl $;pushl %eax;calll ;popl %ebx;popl %edi": 1,
                "retl $;incl %esp;jb  <VfFailDriver+>;jbe  <VfFailDriver+>;jb  <VfFailDriver+>": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $-, ": 1,
                "addl $, %esp;pushl $;pushl $;pushl (%ebp);calll ": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);andl %esp, %fs:(%eax);decl %ebp;incl %esp": 1,
                "arpl %bp, (%ebx);andl %esp, %fs:(%eax);decl %ebp;incl %esp;decl %esp": 1,
                "pushl %edi;movl %ecx, (%eax);leal (%esi), %edi;movl %edi, %ecx;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl %eax, %edi;movl , %eax;cmpl $-, %eax": 1,
                "pushl $;pushl $;pushl %eax;calll ;movl $, %ebx": 1,
                "je  <VfFailDriver+>;outsl (%esi), %dx;outsb (%esi), %dx;andb %ch, (%edx);andb %ch, (%edx)": 4,
                "subb (%eax), %ah;subb (%edx), %cl;addb %al, (%eax);addb %al, (%eax);subb (%eax), %ah": 7,
                "movl (%ebp), %eax;movl (%ebp), %ecx;andl $, -(%ebp);andl $, -(%ebp);pushl %ebx": 1,
                "movl %esi, -(%ebp);movl %eax, -(%ebp);jmp  <VfFailDriver+>;movl -(%ebp), %ecx;movl (%ecx), %ecx": 1,
                "cmpl (%ebp), %ecx;jb  <VfFailDriver+>;cmpl -(%ebp), %ecx;jae  <VfFailDriver+>;movl , %ecx": 1,
                "incl -(%ebp);addl $, %esi;incl %eax;cmpl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jae  <VfFailDriver+>;jmp - <VfFailDriver+>;jmp  <VfFailDriver+>;movl , %eax": 1,
                "xorl %esi, %esi;jmp  <VfFailDriver+>;movl -(%ebp), %eax;movl %ebx, %ecx;negl %ecx": 1,
                "shll $, %ecx;addl %ecx, %esi;movl (%ebp), %ecx;subl %ebx, %eax;testl %ebx, %ebx": 1,
                "movl (%esi), %eax;subl %eax, (%ebp);addl $, %esi;decl %ebx;jne - <VfFailDriver+>": 1,
                "popl %esi;popl %ebx;leave;retl $;subb (%eax), %ah": 2,
                "incl %esp;jb  <VfFailDriver+>;jbe  <VfFailDriver+>;jb  <VfFailDriver+>;imull $, (%ebx), %esi": 1,
                "jb  <VfFailDriver+>;jbe  <VfFailDriver+>;jb  <VfFailDriver+>;imull $, (%ebx), %esi;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;subb %ah, %gs:(%di);jo  <VfFailDriver+>;andl $, %eax;pushl $": 1,
                "calll - <DbgPrint>;pushl (%ebx);movl (%ebp), %eax;pushl (%eax);pushl $": 1,
                "jae  <VfFailDriver+>;outsl (%esi), %dx;andb %cl, (%ebp);decl %esp;andb %ah, ": 1,
                "jge  <VfFailDriver+>;movl (%ebp), %ecx;pushl $;popl %edx;calll ": 1,
                "pushl $;pushl $;jmp  <VfFailDriver+>;movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "jl  <VfFailDriver+>;cmpl %ebx, (%eax);jne  <VfFailDriver+>;cmpl %ebx, ;je  <VfFailDriver+>": 1,
                "je  <VfFailDriver+>;pushl %eax;pushl (%ebp);pushl $;pushl $": 1,
                "cmpl %ebx, (%eax);jl  <VfFailDriver+>;movl (%eax), %esi;cmpl %ebx, %esi;je  <VfFailDriver+>": 1,
                "cmpl %ebx, (%esi);movl %ebx, (%ebp);jbe  <VfFailDriver+>;leal (%esi), %ebx;movl (%ebx), %edi": 1,
                "leal (%esi), %ebx;movl (%ebx), %edi;pushl $;popl %edx;movl %edi, %ecx": 1,
                "movl %edi, %ecx;calll ;testb %al, %al;jne  <VfFailDriver+>;leal (%ebp), %edx": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;incl (%ebp);movl (%ebp), %eax;addl $, %ebx": 1,
                "testb %al, %al;je  <VfFailDriver+>;cmpl $, ;je  <VfFailDriver+>;pushl (%ebp)": 1,
                "addb %al, (%eax);addl %eax, (%eax);addb %al, (%ecx);addb (%esi), %al;pushl %es": 1,
                "pushl %ecx;pushl %ecx;subl $, %ecx;pushl %esi;pushl %edi": 1,
                "movl $, -(%ebp);movzwl (%edi), %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl (%edi), %esi": 1,
                "testl $, %esi;jne  <WmiGetClock+>;movl $, -(%ebp);jmp  <WmiGetClock+>;movw (%edi), %di": 1,
                "movl %edx, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl $, %eax": 2,
                "xaddl %eax, (%ecx);movl $, %eax;jmp  <WmiGetClock+>;testl $, %esi;je  <WmiGetClock+>": 1,
                "subl $, %ecx;movl %ecx, -(%ebp);subl %eax, %ebx;movl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "orl $-, -(%ebp);jmp  <WmiGetClock+>;testl %eax, %eax;jbe  <WmiGetClock+>;cmpb $, -(%ebp)": 1,
                "calll  <ExRaiseAccessViolation>;movl -(%ebp), %ecx;leal -(%ebp), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%edi), %eax;subl $, %eax;cmpl %eax, %ebx;ja  <WmiGetClock+>;testb $, -(%ebp)": 1,
                "cmpb $, %al;jae  <WmiGetClock+>;pushl $;pushl %edi;calll  <IoWMIExecuteMethod+>": 1,
                "movl $, -(%ebp);jmp - <WmiGetClock+>;testb $, -(%ebp);je  <WmiGetClock+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edx;movl %edx, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movw %bx, (%edx);andl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jge  <WmiGetClock+>;shll $, %eax": 1,
                "testb $, -(%ebp);je  <WmiGetClock+>;movl -(%ebp), %eax;movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "je  <WmiGetClock+>;testb $, (%edx);jne  <WmiGetClock+>;movl -(%ebp), %eax;calll *(%eax)": 1,
                "calll *(%eax);movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl %ecx, %edx": 1,
                "testl %eax, %eax;je  <WmiGetClock+>;movl (%eax), %ecx;movl %ecx, (%edx);movl (%eax), %ecx": 1,
                "movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx)": 5,
                "testl %ecx, %ecx;movl %ecx, -(%ebp);jne  <WmiGetClock+>;movl $, %eax;jmp  <WmiGetClock+>": 1,
                "leal (%edx), %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 2,
                "movl %edi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl (%edx), %ebx": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl $, %eax;popl %edi": 1,
                "xaddl %eax, (%ecx);movl $, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %eax;movl %ebx, %ecx;calll ;movl %eax, %edi;testl %edi, %edi": 1,
                "xaddl %eax, (%ecx);movl $, %eax;jmp - <WmiGetClock+>;movl (%esi), %eax;movl %eax, (%edi)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movl %ebx, %edx": 2,
                "jmp - <WmiGetClock+>;int;int;int;int": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl $, %edx;cmpw %dx, (%ebp);jne  <WmiTraceMessageVa+>": 1,
                "movl %ecx, -(%ebp);cmpl %esi, %ecx;jle - <WmiTraceMessageVa+>;addl %ecx, -(%ebp);jmp - <WmiTraceMessageVa+>": 1,
                "jmp  <WmiTraceMessageVa+>;leal (%ecx), %eax;testb $, (%eax);je  <WmiTraceMessageVa+>;testb $, (%ecx)": 1,
                "movzwl %si, %edx;calll ;movl %eax, -(%ebp);testl %eax, %eax;jne  <WmiTraceMessageVa+>": 1,
                "andl $, %ebx;movw %bx, (%eax);movw (%ebp), %dx;movw %dx, (%eax);leal (%eax), %ebx": 1,
                "movl %ebx, -(%ebp);cmpl $, -(%ebp);je  <WmiTraceMessageVa+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl %ebx, -(%ebp);movl (%eax), %eax;movl %eax, (%ebx);addl $, %ebx;movl %ebx, -(%ebp)": 1,
                "andl $, -(%ebp);addl $, -(%ebp);movl -(%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "rep  movsb (%esi), %es:(%edi);movl %eax, -(%ebp);addl %eax, %ebx;movl %ebx, -(%ebp);jmp - <WmiTraceMessageVa+>": 1,
                "xaddl %eax, (%ecx);jmp - <NtTraceEvent+>;movl $, %edx;leal (,%ebx,), %eax;movl %eax, -(%ebp)": 1,
                "jb  <NtTraceEvent+>;cmpl , %eax;jbe  <NtTraceEvent+>;calll  <ExRaiseAccessViolation>;pushl %edi": 1,
                "nop;nop;outsb (%esi), %dx;inb %dx, %al;incl %esi": 1,
                "outsb (%esi), %dx;inb %dx, %al;incl %esi;addb %al, -(%ecx);int": 1,
                "negl %eax;andw $, (%esi);jmp  <IoWMIDeviceObjectToInstanceName+>;andl $, (%esi);andl $, (%esi)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 8,
                "movzwl (%eax), %eax;popl %ebp;retl $;nop;int": 2,
                "pushl %edi;movl (%ebp), %edi;calll *;movl , %esi;movb %al, (%ebp)": 1,
                "insb %dx, %es:(%edi);js  <ExGetSharedWaiterCount+>;subl %esp, (%eax);arpl %bp, (%edi);je  <ExGetSharedWaiterCount+>": 1,
                "arpl %bp, (%edi);je  <ExGetSharedWaiterCount+>;imull $, (%esi), %ebp;incl %ebp;pushl %edx": 1,
                "decl %edi;pushl %ebp;pushl %edx;incl %ebx;incl %ebp": 1,
                "andb %dh, %gs:(%eax,%ebp,);je  <ExGetSharedWaiterCount+>;pushl $;outsl (%esi), %dx;je  <ExGetSharedWaiterCount+>": 1,
                "movl %fs:, %eax;cli;movl (%ebp), %ecx;xorl %edx, %edx;cmpw %dx, (%ecx)": 1,
                "sti;movb %dl, %al;popl %ebp;retl $;int": 1,
                "movb %dl, %al;popl %ebp;retl $;int;int": 1,
                "shll $, %edx;xorl %eax, %edx;movzbl (%ebp), %eax;shll $, %edx;xorl %eax, %edx": 1,
                "movl (%edx,%eax), %esi;calll *;movl %esi, %eax;popl %edi;popl %esi": 1,
                "movl $, %eax;jmp - <ExGetSharedWaiterCount+>;int;int;int": 1,
                "jmp - <ExGetSharedWaiterCount+>;int;int;int;int": 1,
                "movl (%ebp), %eax;pushl %esi;movb $, (%eax);calll - <MmTrimAllSystemPagableMemory+>;jmp  <ExQueryPoolBlockSize+>": 1,
                "jmp  <ExQueryPoolBlockSize+>;movl (%ebp), %edx;xorl %eax, %eax;movw -(%esi), %ax;xorl %ecx, %ecx": 1,
                "movl (%ebp), %edi;testw $, %di;jne  <ExQueryPoolBlockSize+>;xorl %ebx, %ebx;cmpl %ebx, ": 1,
                "cmpl %edi, (%esi);je  <ExQueryPoolBlockSize+>;incl %ebx;addl $, %esi;cmpl %edx, %ebx": 1,
                "movl (%ebp), %eax;incl (%eax);movl (%ebp), %eax;addl $, (%eax);movl (%eax), %eax": 1,
                "addl $, (%eax);movl (%eax), %eax;cmpl %eax, (%ebp);jae  <ExQueryPoolBlockSize+>;movl $, %eax": 1,
                "calll *;incl %esi;cmpl , %esi;jae  <ExQueryPoolBlockSize+>;jmp - <ExQueryPoolBlockSize+>": 2,
                "movb %al, -(%ebp);cmpl $, ;jbe  <ExQueryPoolBlockSize+>;xorl %esi, %esi;leal -(%ebp), %edi": 1,
                "movl %ebx, (%eax);leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %eax": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %eax;pushl $": 3,
                "andb $, (%ebp);movl (%ebp), %eax;cmpl , %eax;jne  <ExQueryPoolBlockSize+>;calll - <DbgBreakPoint>": 1,
                "shll $, %esi;xorl %eax, %esi;movzbl (%ebp), %eax;movl , %ebx;shll $, %esi": 1,
                "sarl $, %esi;movl %esi, -(%ebp);pushl %edi;calll *;movl , %edi": 1,
                "pushl %esi;pushl $;movb %al, -(%ebp);calll ;movb -(%ebp), %cl": 1,
                "movl %ecx, %edx;shrl $, %ecx;movl %eax, -(%ebp);xorl %eax, %eax;movl %esi, %edi": 1,
                "movl -(%ebp), %edx;addl %ecx, %edx;movl (%edx), %ecx;testl %ecx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;pushl %ebx;shrl $, %eax": 1,
                "pushl %ebx;shrl $, %eax;pushl %esi;movl %eax, -(%ebp);pushl %edi": 1,
                "pushl $;pushl %edi;pushl $;movb %al, -(%ebp);calll ": 1,
                "movb %al, -(%ebp);calll ;movb -(%ebp), %cl;movl %eax, %ebx;calll *": 1,
                "movb %al, %bl;calll ;movb %bl, %cl;movl %eax, %edi;calll *%esi": 1,
                "pushl %edi;movl $, %esi;pushl %esi;calll - <ExGetSharedWaiterCount+>;movl -(%ebp), %eax": 1,
                "movl %ecx, (%eax);incl %esi;movb -(%ebp), %cl;calll *;popl %edi": 1,
                "movl %esp, %ebp;cmpl $, ;pushl %esi;movl (%ebp), %esi;je  <ExQueryPoolBlockSize+>": 1,
                "pushl (%ebp);pushl (%ebp);calll - <ExQueryPoolBlockSize+>;testl %eax, %eax;jne  <ExQueryPoolBlockSize+>": 1,
                "calll  <ExFreePoolWithTag>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;popl %edi;popl %esi": 1,
                "movl %edx, (%edi);movb %al, %cl;movl %edi, (%edx);calll *;movl $, (%esi)": 1,
                "calll *;movl $, (%esi);jmp  <ExDeletePagedLookasideList+>;pushl %eax;calll *(%esi)": 1,
                "movl (%ebp), %eax;cmpl %ebx, (%eax);ja  <ExExtendZone+>;movl (%eax), %edx;movl %edx, (%ecx)": 1,
                "cmpl %esi, %edx;jb  <ExExtendZone+>;movl (%eax), %edx;movl %edx, (%ecx);movl (%eax), %edx": 1,
                "pushl (%ebp);movb %al, %bl;pushl (%ebp);pushl (%ebp);calll - <ExExtendZone>": 1,
                "xorl %edx, %edx;movl $, -(%ebp);pushl $;popl %esi;movl %esi, -(%ebp)": 1,
                "pushl $;popl %esi;movl %esi, -(%ebp);andl %edx, -(%ebp);movl (%ebp), %eax": 1,
                "jb  <ExInterlockedExtendZone+>;movl (%ebx), %ecx;subl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);addl $, %eax": 1,
                "calll  <ExInterlockedExtendZone+>;movl (%ebp), %eax;testl %eax, %eax;je  <ExInterlockedExtendZone+>;movl %ecx, (%eax)": 1,
                "nop;nop;addb %al, (%eax);addb %al, (%eax);xorl %edi, %ebp": 1,
                "nop;addb %al, (%eax);addb %al, (%eax);xorl %edi, %ebp;incl %esi": 1,
                "xorl %esi, %esi;cmpl %esi, ;jne  <ExInterlockedExtendZone+>;movl $, %eax;jmp  <ExInterlockedExtendZone+>": 1,
                "movl %edi, (%eax);addl %esi, %eax;movl %eax, -(%ebp);addl %esi, %ecx;decl %edx": 1,
                "addl (%eax), %ecx;movl (%eax), %eax;movl (%eax), %eax;pushl $;popl %edx": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);movsbl (%eax), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "cmpl %edi, %edx;jb  <ExGetCurrentProcessorCounts+>;cmpl %ebx, %edx;jb  <ExGetCurrentProcessorCounts+>;movl (%edx), %edx": 1,
                "testl %edx, %edx;jne - <ExGetCurrentProcessorCounts+>;addl $, %eax;addl $, %esi;cmpl $, %eax": 1,
                "calll - <ExReleaseResourceLite+>;popl %ebp;retl $;pushl %ebx;pushl %edi": 1,
                "popl %esi;popl %ebp;retl $;cmpl $, (%ebp);jne  <XIPDispatch+>": 1,
                "jne  <XIPDispatch+>;movl (%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);jmp - <XIPDispatch+>;cmpl $, (%ebp);je - <XIPDispatch+>;movl $, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);je  <XIPDispatch+>;movb $, (%ecx)": 1,
                "movl %esp, %ebp;cmpl $, (%ebp);je  <XIPDispatch+>;movb $, (%ecx);incl %ecx": 1,
                "movb (%esi), %dl;movb (%ecx), %al;movb %dl, (%ecx);decl %ecx;movb %al, (%esi)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);je  <_itoa+>": 1,
                "cmpl $, (%ebp);je  <_itoa+>;movw $, (%ecx);addl $, %ecx;negl %eax": 1,
                "testl %eax, %eax;ja - <_itoa+>;andw $, (%ecx);decl %ecx;decl %ecx": 1,
                "je  <_strlwr+>;movb (%edx), %cl;cmpb $, %cl;jl  <_strlwr+>;cmpb $, %cl": 1,
                "addb $, %cl;movb %cl, (%edx);incl %edx;cmpb $, (%edx);jne - <_strlwr+>": 1,
                "movl %eax, %esi;js  <_vsnwprintf+>;movl -(%ebp), %eax;movb $, (%eax);incl -(%ebp)": 1,
                "movb $, (%eax);incl -(%ebp);jmp  <_vsnwprintf+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;calll - <KeSetIdealProcessorThread+>;popl %ecx;popl %ecx;movl %esi, %eax": 1,
                "movw (%ecx), %si;incl %ecx;incl %ecx;testw %si, %si;jne - <_wcsrev+>": 1,
                "testl %eax, %eax;je  <_wcsrev+>;incl %esi;jmp - <_wcsrev+>;pushl %ebx": 1,
                "xorl %edx, %edx;cmpl $, %edi;jl  <_wcsrev+>;cmpl $, %edi;jg  <_wcsrev+>": 1,
                "jl  <_wcsrev+>;cmpl $, %edi;jg  <_wcsrev+>;subl $, %edi;jmp  <_wcsrev+>": 1,
                "jmp  <_wcsrev+>;orl $-, %edi;cmpl $-, %edi;je  <_wcsrev+>;pushl $": 1,
                "movl (%ebp), %eax;movl , %ecx;movzbl (%ecx,%eax,), %eax;andl $, %eax;popl %ebp": 5,
                "pushl %ebp;movl %esp, %ebp;cmpl $, ;jle  <islower+>;pushl $": 1,
                "popl %ebp;retl;nop;nop;int": 1,
                "movl %esp, %ebp;cmpl $, ;jle  <isdigit+>;pushl $;pushl (%ebp)": 1,
                "jle  <isxdigit+>;pushl $;pushl (%ebp);calll  <wcstombs+>;popl %ecx": 1,
                "popl %edi;popl %esi;popl %ebp;retl;int": 1,
                "pushl %esi;pushl %edi;je  <wcscspn+>;movl (%ebp), %ebx;xorl %edi, %edi": 1,
                "movl (%ebp), %ebx;xorl %edi, %edi;movw (%ebx), %di;testw %di, %di;movl %ebx, %edx": 1,
                "movl %edi, %edx;testw %dx, %dx;je  <wcsspn+>;incl %esi;incl %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp);calll  <RtlUnicodeToMultiByteN>": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);calll  <RtlUnicodeToMultiByteN>;jmp  <wcstombs+>": 1,
                "pushl (%ebp);calll  <RtlUnicodeToMultiByteN>;jmp  <wcstombs+>;pushl (%ebp);calll - <wcslen>": 1,
                "movl -(%ebp), %eax;decl %eax;jmp  <wcstombs+>;movl $, ;orl $-, %eax": 1,
                "calll - <_strupr+>;addl $, %esp;popl %ebp;retl;int": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi;xorl %esi, %esi": 3,
                "pushl %esi;pushl %edi;xorl %esi, %esi;movw (%ebx), %si;leal (%ebx), %edi": 1,
                "jne  <wcstombs+>;movw (%edi), %si;incl %edi;incl %edi;movl (%ebp), %eax": 1,
                "cmpw $, %ax;je  <wcstombs+>;movl $, (%ebp);jmp  <wcstombs+>;movl %ebx, (%ebp)": 1,
                "movl %ebx, (%ebp);cmpl %ebx, (%ebp);jne  <wcstombs+>;pushl %esi;calll - <RtlInsertElementGenericTableAvl+>": 1,
                "incl %edi;xorl %esi, %esi;movw (%edi), %si;incl %edi;incl %edi": 1,
                "xorl %edx, %edx;divl (%ebp);movl %edx, -(%ebp);movl %eax, %ebx;pushl %esi": 1,
                "ja  <wcstombs+>;cmpw $, %si;jb  <wcstombs+>;cmpw $, %si;ja  <wcstombs+>": 1,
                "movzwl %si, %eax;subl $, %eax;jmp  <wcstombs+>;movzwl %si, %eax;addl $-, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlAnsiCharToUnicodeChar>;testw %ax, %ax;jne - <wcstombs+>": 1,
                "pushl %esi;movl (%ebx), %esi;movl (%esi), %eax;decl %eax;pushl %edi": 1,
                "jmp  <wcstombs+>;movl $, -(%ebp);jmp  <wcstombs+>;movl $, -(%ebp);pushl %ecx": 1,
                "leal (%esi), %edi;pushl %edi;pushl -(%ebp);calll  <wcstombs+>;addl $, %esp": 1,
                "pushl %edi;leal (%esi), %ecx;pushl %ecx;pushl %eax;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlRaiseException>;popl %esi;leave": 1,
                "movl (%ebp), %esi;movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movb (%ebp), %al": 1,
                "movl %eax, (%esi);movl %eax, (%esi);movb (%ebp), %al;testb $, %al;pushl %edi": 1,
                "je  <wcstombs+>;orl $, (%esi);movl $, (%ebp);movl (%ebp), %edi;movl (%edi), %eax": 1,
                "notl %eax;xorl (%esi), %eax;andl $, %eax;xorl %eax, (%esi);calll  <wcstombs+>": 1,
                "cmpl $, %eax;je  <wcstombs+>;cmpl %ecx, %eax;jne  <wcstombs+>;orl $, (%esi)": 1,
                "movl %eax, (%esi);jmp  <wcstombs+>;andl $-, (%esi);movl (%edi), %eax;movl $, %ecx": 1,
                "andl $, %eax;orl $, %eax;jmp  <wcstombs+>;movl (%edi), %eax;andl $, %eax": 1,
                "xorl %ebx, %ebx;movl %eax, %esi;andl $, %esi;incl %ebx;testb $, %al": 1,
                "je  <wcstombs+>;testb %bl, (%ebp);je  <wcstombs+>;pushl %ebx;calll  <wcstombs+>": 1,
                "je  <wcstombs+>;pushl %ebx;calll  <wcstombs+>;popl %ecx;andl $-, %esi": 1,
                "fcompl ;fnstsw %ax;testb $, %ah;jne  <wcstombs+>;fldl ": 2,
                "xorl %esi, %esi;testb $, %al;je  <wcstombs+>;movl %ebx, %esi;fldl ": 1,
                "testb $, %al;je  <wcstombs+>;movl %ebx, %esi;fldl ;pushl %edi": 1,
                "pushl %ecx;pushl %ecx;fstpl (%esp);calll  <wcstombs+>;movl -(%ebp), %ecx": 1,
                "movb -(%ebp), %al;andl $, %eax;orl $, %eax;movw %ax, -(%ebp);movl $, %eax": 1,
                "testl %esi, %esi;popl %edi;je  <wcstombs+>;pushl $;calll  <wcstombs+>": 1,
                "popl %edi;je  <wcstombs+>;pushl $;calll  <wcstombs+>;popl %ecx": 1,
                "je  <wcstombs+>;pushl $;calll  <wcstombs+>;popl %ecx;andl $-, -(%ebp)": 1,
                "pushl $;calll  <wcstombs+>;popl %ecx;andl $-, %esi;xorl %eax, %eax": 1,
                "calll  <wcstombs+>;popl %ecx;andl $-, %esi;xorl %eax, %eax;testl %esi, %esi": 1,
                "popl %esi;sete %al;popl %ebx;leave;retl": 1,
                "sete %al;popl %ebx;leave;retl;int": 1,
                "movl %esp, %ebp;cmpl $, (%ebp);je  <wcstombs+>;jle  <wcstombs+>;cmpl $, (%ebp)": 1,
                "pushl %ecx;fnstsw -(%ebp);fnclex;movswl -(%ebp), %eax;leave": 1,
                "je  <wcstombs+>;wait;fnstsw %ax;fldt ;fstpl -(%ebp)": 1,
                "calll - <wcstombs+>;popl %ecx;retl;nop;int": 1,
                "addb %dl, (%eax);addb %ah, (%ebx);insb %dx, %es:(%edi);addb %dh, (%ebp);jae  <wcstombs+>": 1,
                "imull $, (%eax), %eax;addb %ch, (%edi);ja  <wcstombs+>;outsb (%esi), %dx;addb %al, (%eax)": 1,
                "movl $, %esi;pushl %esi;calll - <_snwprintf>;addl $, %esp;testl %eax, %eax": 1,
                "testl %eax, %eax;jge  <wcstombs+>;andw $, ;movl %esi, %eax;popl %esi": 1,
                "nop;nop;nop;xorb %al, (%eax);js  <wcstombs+>": 1,
                "cmpl $, (%ebp);jne  <wcstombs+>;movb %bl, %al;andb $, %al;cmpb $, %al": 1,
                "andb $, %al;cmpb $, %al;je  <wcstombs+>;leal (%ebp), %eax;pushl %eax": 1,
                "je  <wcstombs+>;leal (%ebp), %eax;pushl %eax;calll - <wcstombs+>;cmpl $, (%ebp)": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;movb %bl, %al;andb $, %al;cmpb $, %al": 1,
                "andl $, (%ecx);movl (%ecx), %eax;movl %esi, (%edx,%eax,);incl (%ecx);movl (%ebp), %eax": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi;cmpl %esi, %ebx": 3,
                "jne  <wcstombs+>;cmpl %esi, (%ebp);je  <wcstombs+>;movl (%ebp), %ebx;movl $, %edi": 1,
                "je  <wcstombs+>;pushl $;pushl (%ebp);pushl %ebx;calll  <RtlGetAce+>": 1,
                "calll - <wcslen>;popl %ecx;pushl (%ebp);leal (%esi,%eax,), %esi;pushl (%ebp)": 1,
                "pushl %ebx;calll  <RtlGetAce+>;testl %eax, %eax;movl %eax, (%ebp);jne - <wcstombs+>": 1,
                "incl %esi;incl %esi;cmpl %eax, (%ebp);je  <wcstombs+>;movl (%ebp), %eax": 1,
                "jmp  <wcstombs+>;movl (%ebp), %eax;movl %esi, (%eax);pushl $;jmp  <wcstombs+>": 1,
                "leal (%eax,%eax), %eax;pushl %eax;calll  <RtlGetAce+>;cmpl %esi, %eax;movl %eax, (%ebp)": 1,
                "pushl %eax;calll  <RtlGetAce+>;cmpl %esi, %eax;movl %eax, (%ebp);jne  <wcstombs+>": 1,
                "calll - <wcscpy>;popl %ecx;popl %ecx;xorl %ebx, %ebx;jmp  <wcstombs+>": 1,
                "movl (%ebp), %ebx;pushl %ebx;calll - <wcsncpy>;movl -(%ebp), %eax;addl $, %esp": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp);movl %edx, -(%ebp);pushl $": 1,
                "movl %edx, -(%ebp);pushl $;leal -(%ebp), %eax;popl %ebx;movl %eax, (%ebp)": 1,
                "leal -(%ebp), %eax;popl %ebx;movl %eax, (%ebp);jmp  <wcstombs+>;pushl $": 1,
                "jmp  <wcstombs+>;pushl $;pushl %edi;pushl %esi;calll  <RtlGetAce+>": 1,
                "movl %ecx, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <wcstombs+>;movl (%ebp), %ecx": 1,
                "testl %eax, %eax;je  <wcstombs+>;movl (%ebp), %ecx;movl %ecx, (%eax);cmpl $, (%ebp)": 1,
                "movl %esp, %ebp;popl %ebp;jmp - <READ_REGISTER_UCHAR>;int;int": 1,
                "popl %ebp;jmp - <WRITE_REGISTER_UCHAR>;int;int;int": 1,
                "movl (%esi), %eax;addl $, %eax;pushl %eax;calll *;testb $, %al": 1,
                "orb $, (%esi);popl %esi;movb %bl, %al;popl %ebx;popl %ebp": 1,
                "pushl (%ebp);pushl %esi;calll *;movl (%ebp), %eax;movl (%edi), %esi": 1,
                "calll *;movl (%edi), %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jne  <wcstombs+>": 1,
                "pushl %ebx;movb (%ebp), %bl;negb %bl;pushl %edi;sbbl %ebx, %ebx": 1,
                "movb (%ebp), %bl;negb %bl;pushl %edi;sbbl %ebx, %ebx;andl $, %ebx": 1,
                "testb $, %al;je  <wcstombs+>;testb $, %al;jne  <wcstombs+>;cmpb $, (%ebp)": 1,
                "testb $, (%esi);je  <wcstombs+>;movl (%esi), %eax;addl $, %eax;pushl %eax": 1,
                "popl %esi;popl %ebp;retl $;movb $, (%edi);movw $, %ax": 1,
                "pushl (%esi);calll *;popl %esi;popl %ebp;retl $": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %esi;pushl (%ebp);leal (%eax,%eax,), %esi": 1,
                "movl (%ebp), %eax;pushl $;pushl $;pushl (%ebp);leal (%eax,%eax,), %eax": 1,
                "pushl %eax;calll *;popl %esi;popl %ebp;retl $": 1,
                "calll - <wcstombs+>;testb %al, %al;je  <wcstombs+>;xorl %esi, %esi;incl %esi": 1,
                "je  <wcstombs+>;pushl $;popl %esi;movl $, %eax;jmp  <wcstombs+>": 1,
                "pushl %eax;calll - <MmMapIoSpace>;movl $, ;movl $, ;jmp  <wcstombs+>": 1,
                "jmp  <wcstombs+>;movl $, ;movl $, ;pushl (%ebp);pushl %eax": 1,
                "movb %al, %cl;jne  <wcstombs+>;movl (%ebp), %eax;movl $, (%eax);jmp  <wcstombs+>": 1,
                "movl (%esi), %eax;movl (%eax), %esi;testl %esi, %esi;jne - <wcstombs+>;testl %edx, %edx": 1,
                "jmp  <wcstombs+>;testl %esi, %esi;je - <wcstombs+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl (%ebp), %esi;pushl %esi;calll  <KeFindConfigurationNextEntry+>;testb %al, %al;je  <wcstombs+>": 2,
                "movl (%ebp), %ecx;addl %esi, %eax;cmpl (%eax), %ecx;jb  <wcstombs+>;xorl %eax, %eax": 1,
                "addl %esi, %eax;addl %eax, %ecx;leal (%ecx), %eax;movl (%ecx), %ecx;addl %esi, %ecx": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, %eax": 1,
                "movl (%ebp), %edx;cmpl %ecx, %edx;je  <wcstombs+>;movb %cl, -(%ebp);movb %cl, -(%ebp)": 1,
                "calll - <IoSetFileOrigin+>;movb %bl, %cl;calll *;popl %esi;popl %ebx": 1,
                "shll $, %ecx;orl %eax, %ecx;movl %ecx, %esi;calll *;movl (%ebp), %ecx": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %edi;calll - <KeSaveStateForHibernate+>": 1,
                "andl $, %eax;addl $, %eax;movw %ax, -(%ebp);calll *;movl -(%ebp), %edx": 1,
                "leal (%esi), %eax;je  <wcstombs+>;cmpl %edi, %ecx;je  <wcstombs+>;movl (%ecx), %edx": 1,
                "movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);jmp  <wcstombs+>": 1,
                "movl $, %eax;cmpl %eax, %edx;je  <wcstombs+>;movswl (%esi), %ecx;cmpl %ecx, (%edx)": 1,
                "je  <wcstombs+>;movl (%edx), %edx;cmpl %eax, %edx;jne - <wcstombs+>;movl -(%ebp), %edx": 1,
                "cmpl %eax, %edx;jne - <wcstombs+>;movl -(%ebp), %edx;movl %edi, -(%ebp);xorl %eax, %eax": 1,
                "movl %edi, -(%ebp);xorl %eax, %eax;movl %ebx, %ecx;shrl $, %ecx;movl %edx, %edi": 1,
                "xorl %eax, %eax;movl %ebx, %ecx;shrl $, %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "rep  stosb %al, %es:(%edi);movswl (%esi), %eax;movl %eax, (%edx);movl , %eax;movl %eax, (%edx)": 1,
                "addl $, %ecx;testl %eax, %eax;jne - <wcstombs+>;movl (%edx), %eax;movl (%esi), %ecx": 1,
                "calll *%ebx;cmpl $, -(%ebp);popl %esi;je  <wcstombs+>;pushl $": 1,
                "movl $, %ecx;movb %al, -(%ebp);calll - <KiAcquireSpinLock>;movl (%ebp), %esi;xorl %ebx, %ebx": 1,
                "movl (%eax), %eax;movl %ecx, (%eax);movl %eax, (%ecx);movl , %ecx;movswl (%esi), %edx": 1,
                "je  <wcstombs+>;decl (%edi);jne  <wcstombs+>;orl %ebx, %edx;shrl %ecx": 1,
                "andl %edx, (%eax);jne  <wcstombs+>;movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx)": 1,
                "jne  <wcstombs+>;movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx);movl %edx, (%ecx)": 1,
                "testl %ebx, (%eax);je  <wcstombs+>;movswl (%esi), %eax;pushl %eax;calll *": 1,
                "pushl -(%ebp);calll  <ExFreePoolWithTag>;movb -(%ebp), %al;leave;retl $": 1,
                "incl %edi;cmpb (%edx,%edi,), %dh;decl %edx;movl $, %edi;xchgl %ebx, %eax": 1,
                "movl $, %edi;xchgl %ebx, %eax;aaa;jb  <wcstombs+>;addb %al, (%eax)": 1,
                "pushl %esi;pushl %edi;movl %ebx, -(%ebp);je  <POOLMI+>;testb $, (%ebp)": 1,
                "movl , %eax;movl , %ecx;andl $, -(%ebp);shll $, %eax;subl %eax, %ecx": 1,
                "addl , %eax;movl %eax, (%ebp);pushl $;movl %ebx, %eax;shll $, %eax": 1,
                "testb $, (%ebp);jne  <POOLMI+>;addl %ebx, (%esi);movl (%ebp), %eax;popl %edi": 1,
                "movl , %ecx;andl $, -(%ebp);testl %ecx, %ecx;jne  <POOLMI+>;testb $, ": 1,
                "calll - <RtlFindClearBitsAndSet+>;cmpl $, -(%ebp);jne  <POOLMI+>;subl %ebx, ;movl %ebx, %eax": 1,
                "andl %edx, (%eax);subl %ebx, (%esi);subl %ebx, (%esi);pushl %ebx;pushl %edi": 1,
                "retl $;leal (%edi), %eax;movl %eax, (%esi);jmp - <POOLMI+>;movl %edi, (%esi)": 1,
                "cmpl $, ;ja  <POOLMI+>;cmpl $, ;jl  <POOLMI+>;movl -(%ebp), %eax": 1,
                "addl %eax, ;movl %eax, (%ebp);movl %esi, %eax;subl , %eax;pushl $": 1,
                "shll $, %eax;popl %ecx;subl %eax, %ecx;addl %ecx, %edi;cmpl $, ": 1,
                "je  <POOLMI+>;movl (%edi), %eax;testb $, %al;je  <POOLMI+>;shrl $, %eax": 1,
                "movl %edx, (%esi);movl %esi, (%edx);movl %esi, (%eax);shll $, %ecx;addl %ebx, %ecx": 1,
                "shll $, %ecx;addl %ebx, %ecx;movl %esi, (%ebx);addl $, %ebx;cmpl %ecx, %ebx": 1,
                "movl -(%ebp), %eax;jmp - <POOLMI+>;xorl %esi, %esi;jmp - <POOLMI+>;xorl %eax, %eax": 1,
                "movl %ecx, %eax;andw $, %ax;xorl %edi, %edi;cmpb $-, %al;je  <POOLMI+>": 1,
                "jne  <POOLMI+>;cmpl $, %ebx;jne - <POOLMI+>;orl $, (%edx);addl %ebx, ": 1,
                "cmpl $, ;movl -(%ebx), %esi;je  <POOLMI+>;movl (%esi), %eax;cmpl $, %eax": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);movl (%ebp), %eax": 2,
                "jmp - <POOLMI+>;cmpl $, ;movl (%esi), %esi;je  <POOLMI+>;jmp - <POOLMI+>": 1,
                "jb  <POOLMI+>;xorl %edi, %edi;incl %edi;pushl %edi;pushl %ebx": 1,
                "movl %esi, -(%ebp);je  <POOLMI+>;xorl %edx, %edx;movl %ebx, %ecx;calll - <KeFlushEntireTb+>": 1,
                "nop;nop;nop;movl , %ecx;andl , %ecx": 1,
                "addl %ecx, %eax;xorl %esi, %esi;jmp - <POOLMI+>;leal (%ebx,%ebx,), %eax;leal -(%edx,%eax,), %edx": 1,
                "shrl $, %ecx;addl %ecx, %eax;movl , %ecx;xorl %edi, %edi;cmpl , %ebx": 1,
                "addl %ecx, %eax;jmp - <POOLMI+>;addl $, %esi;jmp - <POOLMI+>;cmpl $, (%esi)": 1,
                "je  <POOLMI+>;movl , %eax;movl , %ecx;imull $, %eax, %eax;shrl $, %ecx": 1,
                "calll - <KeFlushEntireTb+>;testl %eax, %eax;je  <POOLMI+>;movl (%esi), %ecx;movl (%esi), %eax": 1,
                "andl $, %ecx;subl %ecx, %eax;addl $, %eax;movl %edi, %ecx;shll $, %ecx": 1,
                "movl %eax, %edx;jne  <POOLMI+>;movl -(%ebp), %eax;movl , %ecx;shrl $, %eax": 1,
                "shrl $, %eax;andl $, %eax;movl %edx, (%ecx,%eax,);movl -(%ebp), %eax;sarl $, %eax": 1,
                "movl -(%ebp), %eax;pushl $;shll $, %eax;pushl $;pushl %eax": 1,
                "addl $, -(%ebp);addl $, -(%ebp);decl %edi;jne  <POOLMI+>;testl %edi, %edi": 1,
                "pushl $;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;jmp - <POOLMI+>;pushl (%eax)": 1,
                "shrl $, %esi;xorl %edx, %edx;divl %esi;cmpl %ecx, %eax;jbe  <POOLMI+>": 1,
                "pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;jmp - <POOLMI+>;orb $, (%edx);jmp - <POOLMI+>": 1,
                "incl ;incl ;jmp - <POOLMI+>;movl , %eax;subl %ecx, %eax": 1,
                "movl %eax, (%ebp);movl , %ecx;subl , %ecx;cmpl %eax, %ecx;jl  <POOLMI+>": 1,
                "movb %al, %cl;calll *;pushl -(%ebp);movl %edi, %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);shll $, %eax;pushl (%esi);subl %eax, (%esi);calll - <RtlSetBits>": 1,
                "subl %eax, (%esi);calll - <RtlSetBits>;negl %edi;movl %edi, (%ebp);movl (%ebp), %eax": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl , %eax;movl -(%ebp), %ecx;pushl $;pushl -(%ebp)": 1,
                "movl , %ecx;movl (%ecx), %edx;cmpl (%edx), %eax;jb  <POOLMI+>;movl (%edx), %edx": 1,
                "leal (%eax,%ecx,), %eax;orl $, (%eax);movl , %eax;andl $, (%eax);movl , %ecx": 1,
                "calll - <RtlSetBit>;jmp - <POOLMI+>;pushl %edi;pushl ;calll - <RtlSetBit>": 1,
                "incl %edx;movl %ebx, %ecx;calll - <KeFlushEntireTb+>;jmp - <POOLMI+>;leal (%edx), %eax": 1,
                "pushl $;pushl $;pushl %ebx;pushl $;jmp - <POOLMI+>": 2,
                "pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;jmp - <POOLMI+>;pushl $;pushl $": 1,
                "jmp - <POOLMI+>;movl (%ecx), %ecx;addl %ecx, %eax;movl (%eax), %edx;movl -(%ebp), %ecx": 1,
                "pushl %eax;movl -(%ebp), %eax;shll $, %eax;pushl %eax;calll - <KeSaveStateForHibernate+>": 1,
                "shll $, %eax;pushl %eax;pushl %ebx;calll - <RtlFillMemoryUlong>;cmpl $, (%ebp)": 1,
                "jb  <MISYSPTE+>;cmpl $, %ecx;movl (%eax), %edx;jb  <MISYSPTE+>;shll $, %edx": 1,
                "leal (%eax), %esi;addl $, %edx;cmpl %edx, (%esi);ja  <MISYSPTE+>;pushl %edi": 1,
                "movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "cmpl , %ebx;popl %ebx;je  <MISYSPTE+>;testb $, ;jne  <MISYSPTE+>": 1,
                "leal (%esi), %ecx;movl %ecx, -(%ebp);movl (%ecx), %ecx;shrl $, %ecx;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ebx;cmpl %ecx, %ebx;jae  <MISYSPTE+>;subl %ebx, %ecx;cmpl $, %ecx": 1,
                "je  <MISYSPTE+>;movl %esi, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl $;pushl (%ebp);pushl %esi;calll - <MISYSPTE+>;testl %eax, %eax": 1,
                "pushl %esi;calll - <MISYSPTE+>;testl %eax, %eax;jne - <MISYSPTE+>;jmp  <MISYSPTE+>": 1,
                "movl (%edx), %eax;testb $, %al;movl %eax, -(%ebp);jne  <MISYSPTE+>;movl (%edx), %edi": 1,
                "movl %eax, (%ebx);movl (%ebp), %ecx;movl (%ebp), %eax;leal (%ebx,%eax,), %edx;cmpl %ecx, %edx": 1,
                "jne  <MISYSPTE+>;movl (%ecx), %edx;movl (%ebx), %esi;andl $, %edx;andl $, %esi": 1,
                "jb  <MISYSPTE+>;jmp - <MISYSPTE+>;pushl $;pushl $;calll - <KeFlushEntireTb>": 1,
                "pushl $;pushl $;calll - <KeFlushEntireTb>;jmp - <MISYSPTE+>;movl -(%ebp), %edi": 1,
                "pushl $;calll - <KeFlushEntireTb>;jmp - <MISYSPTE+>;movl -(%ebp), %edi;cmpl $, %edi": 1,
                "jbe - <MISYSPTE+>;movl %ebx, %edx;jmp - <MISYSPTE+>;pushl %edi;calll  <MISYSPTE+>": 1,
                "leal (,%esi,), %esi;pushl $;pushl $;pushl (%esi);calll - <MISYSPTE+>": 1,
                "pushl $;pushl (%esi);calll - <MISYSPTE+>;testl %eax, %eax;je  <MISYSPTE+>": 1,
                "movb -(%ebp), %cl;subl %ebx, (%edi);calll *;jmp - <MISYSPTE+>;subl %ecx, %eax": 1,
                "subl %ebx, (%edi);calll *;jmp - <MISYSPTE+>;subl %ecx, %eax;leal (%esi,%ecx,), %edi": 1,
                "orl %edx, %eax;cmpl $, %ebx;movl %eax, (%esi);jne  <MISYSPTE+>;orl $, %eax": 1,
                "cmpl $, %ebx;movl %eax, (%esi);jne  <MISYSPTE+>;orl $, %eax;movl %eax, (%esi)": 1,
                "orl $, (%edi);jmp  <MISYSPTE+>;andl $-, (%edi);addl $, %edi;movl (%edi), %edx": 1,
                "jmp  <MISYSPTE+>;cmpl $, %ebx;jne  <MISYSPTE+>;orl $, (%esi);jmp  <MISYSPTE+>": 1,
                "cmpl $, %ebx;jne  <MISYSPTE+>;orl $, (%esi);jmp  <MISYSPTE+>;movl -(%ebp), %eax": 1,
                "orl %edx, %ecx;movl %ecx, (%eax);movl (%ebp), %eax;subl %eax, (%edi);movb -(%ebp), %cl": 1,
                "incl (%ebx);cmpw (%ebx), %cx;jb  <ExFreePoolWithTag+>;movl -(%ebp), %ecx;movl (%ecx,%eax), %ecx": 1,
                "testb $, ;je  <ExFreePool+>;leal (%edi), %ebx;cmpl $, (%ebx);jge  <ExFreePool+>": 1,
                "movl -(%ebp), %eax;movl (,%eax,), %edi;andw $, %cx;movw %cx, (%esi);movl -(%ebp), %ecx": 1,
                "incl (%ebx);cmpw (%ebx), %cx;jae  <ExAllocatePoolWithTag+>;incl (%ebx);movl %ebx, %ecx": 1,
                "testb $, %al;movl %edi, -(%ebp);jne  <ExFreePool+>;movl (%ebp), %ecx;andl $, %ecx": 1,
                "movb $, -(%ebp);ja  <ExAllocatePoolWithTag+>;testl %esi, %esi;je  <ExFreePool+>;movl (%ebp), %esi": 1,
                "jne  <ExFreePool+>;leal (%esi), %eax;andl $, (%eax);popl %ebx;popl %edi": 1,
                "leal (%esi), %eax;andl $, (%eax);popl %ebx;popl %edi;popl %esi": 1,
                "retl $;cmpl %edi, -(%ebp);je  <ExAllocatePoolWithTag+>;andl $, -(%ebp);movl (%ebp), %eax": 1,
                "andl $, -(%ebp);movl (%ebp), %eax;andl $, %eax;andl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "jmp  <ExAllocatePoolWithTag+>;movzwl (%esi), %eax;shrl $, %eax;movl (,%eax,), %edi;jmp - <ExFreePoolWithTag+>": 1,
                "jmp - <ExFreePoolWithTag+>;movl (%esi), %eax;testl %eax, %eax;movl %eax, (%ebp);je - <ExFreePoolWithTag+>": 1,
                "calll - <PsReturnPoolQuota>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;jmp - <ExFreePoolWithTag+>;movl -(%ebp), %ecx": 1,
                "calll - <IoAllocateIrp+>;movl , %esi;movl %eax, %ebx;cmpl $, %ebx;je  <ExAllocatePoolWithTag+>": 1,
                "movl , %esi;movl %eax, %ebx;cmpl $, %ebx;je  <ExAllocatePoolWithTag+>;movl (,%ebx,), %esi": 1,
                "movb , %al;testb $, %al;jne  <ExFreePool+>;subl %ebx, (%esi);testb $, (%esi)": 1,
                "jne  <ExFreePool+>;movb -(%ebp), %cl;calll *;jmp - <ExAllocatePoolWithTag+>;cmpl %esi, %ebx": 1,
                "leal (%ebx), %eax;cmpl %eax, %esi;jne - <ExAllocatePoolWithTag+>;xorl %eax, %eax;incl %eax": 1,
                "pushl %esi;pushl -(%ebp);calll - <POOLMI+>;cmpl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);jne  <ExAllocatePoolWithTag+>;testb $, (%ebx)": 1,
                "je  <ExAllocatePoolWithTag+>;movl (%ebx), %ecx;calll *;cmpl %esi, (%esi);je  <ExFreePool+>": 1,
                "andl %edi, %eax;cmpl %edx, %eax;movl %ecx, (%ebp);je  <ExAllocatePoolWithTag+>;subl %edx, %ecx": 1,
                "leal (%esi,%edx,), %ecx;testw $, %cx;je  <ExAllocatePoolWithTag+>;movw (%ecx), %cx;xorw %dx, %cx": 1,
                "andw %di, %cx;movw %cx, (%ebp);leal (%esi,%edx,), %ecx;movw (%ebp), %dx;xorw %dx, (%ecx)": 1,
                "xorl %edx, %edx;movw (%esi), %dx;andw %di, %cx;xorw %cx, (%esi);movzbw -(%ebp), %cx": 1,
                "movw (%esi), %cx;movzbw %al, %ax;andw %di, %cx;shll $, %eax;orl %ecx, %eax": 1,
                "movw %ax, (%esi);incl (%ebx);testb $, (%ebx);je  <ExAllocatePoolWithTag+>;movl (%ebx), %ecx": 1,
                "andl %edi, %ecx;leal (%eax,%ecx,), %ecx;testw $, %cx;movl %ecx, (%ebp);je - <ExAllocatePoolWithTag+>": 1,
                "andw %di, %dx;jmp - <ExAllocatePoolWithTag+>;movl $, %ecx;testl %eax, %ecx;jne  <ExFreePool+>": 1,
                "incl %eax;movl -(%ebp), %esi;movl (,%esi,), %esi;movl (%esi), %esi;cmpl %eax, (%esi)": 1,
                "movl (%esi), %esi;cmpl %eax, (%esi);jne  <ExFreePool+>;movl -(%ebp), %eax;movl (,%eax,), %ebx": 1,
                "jmp - <ExAllocatePoolWithTag+>;movl %eax, -(%ebp);movl %eax, ;jmp - <ExAllocatePoolWithTag+>;cmpl $, ": 1,
                "jmp - <ExAllocatePoolWithTag+>;cmpl $, %ebx;jne  <ExFreePool+>;calll *;movb %al, -(%ebp)": 2,
                "movl %eax, -(%ebp);cmpl %edx, -(%ebp);jne - <ExAllocatePoolWithTag+>;jmp - <ExAllocatePoolWithTag+>;testb $, (%esi)": 1,
                "pushl %edi;incl %ecx;xorl %edi, %edi;cmpl , %esi;movl %ecx, -(%ebp)": 1,
                "cmpw $, %bx;movl $, -(%ebp);je  <ExFreePool+>;movl (%ecx), %edx;movl (%ecx), %ebx": 2,
                "movl %ebx, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;movl $, %edx;cmpxchgl %edx, (%ecx)": 1,
                "movl %eax, -(%ebp);movl %esi, (%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "je  <ExFreePool+>;movl (%esi), %ecx;calll *;movl , %ecx;calll *": 1,
                "jmp - <ExFreePool+>;cmpl $, %esi;jne  <ExFreePool+>;calll *;movb %al, -(%ebp)": 1,
                "jne  <ExFreePool+>;calll *;movb %al, -(%ebp);movl -(%ebp), %edx;incl (%edi)": 1,
                "je  <ExFreePool+>;andw %cx, (%esi);xorl %eax, %eax;movw (%esi), %ax;andl %ecx, %eax": 1,
                "movl (%esi), %ecx;leal -(%ebp), %edx;calll *;jmp - <ExFreePool+>;jmp - <ExFreePool+>": 1,
                "calll *;jmp - <ExFreePool+>;jmp - <ExFreePool+>;jmp - <ExFreePool+>;jmp - <ExFreePool+>": 1,
                "jmp - <ExFreePool+>;jmp - <ExFreePool+>;leal -(%ebp), %ecx;calll *;calll *": 1,
                "je - <ExAllocatePoolWithTag+>;movl (%ebp), %ecx;xorl %eax, %eax;leal -(%ecx), %esi;movw (%esi), %ax": 1,
                "movw (%esi), %bx;andl $, %ebx;shll $, %ebx;testb $, ;je  <ExFreePool+>": 1,
                "pushl %ebx;pushl %esi;calll - <KeBugCheckEx+>;testb $, ;je - <ExFreePoolWithTag+>": 1,
                "movl %eax, %edi;testl %edi, %edi;jns  <ExFreePool+>;movl (%ebp), %ecx;movl $, %eax": 1,
                "calll - <ExGetSharedWaiterCount+>;jmp - <ExAllocatePoolWithTag+>;movl (%esi), %ecx;leal -(%ebp), %edx;calll *": 1,
                "je - <ExAllocatePoolWithTag+>;pushl %edi;pushl (%ebp);calll - <ExGetCurrentProcessorCounts+>;jmp - <ExAllocatePoolWithTag+>": 1,
                "pushl %edi;pushl (%ebp);calll - <ExGetCurrentProcessorCounts+>;jmp - <ExAllocatePoolWithTag+>;jmp - <ExFreePoolWithTag+>": 1,
                "jmp - <ExFreePoolWithTag+>;pushl (%ebp);pushl (%esi);pushl $;jmp - <ExFreePool+>": 1,
                "movl (%esi), %eax;testl %eax, %eax;movl %eax, -(%ebp);jns  <ExFreePool+>;movl (%ebp), %ecx": 1,
                "movzwl (%esi), %esi;xorl %edx, %edx;movw (%eax), %dx;addw %dx, %si;movl $, %ebx": 1,
                "movl , %ebx;jne  <ExFreePool+>;cmpl $, ;jbe  <ExFreePool+>;leal -(%ebp), %ecx": 1,
                "calll *;pushl %esi;calll - <POOLMI+>;testb $, (%edi);je - <ExAllocatePoolWithTag+>": 1,
                "testb $, %al;je  <ExFreePool+>;testb $-, (%ebp);jne  <ExFreePool+>;leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %eax;calll ;jmp - <ExAllocatePoolWithTag+>;andb $, (%ebp)": 1,
                "andb $, (%ebp);testb $, %al;je - <ExAllocatePoolWithTag+>;pushl (%ebp);pushl %esi": 1,
                "xorl %edx, %edx;incl %edx;jmp - <ExAllocatePoolWithTag+>;andl $, -(%ebp);testl %edi, %edi": 1,
                "cmpl $, -(%ebp);jne - <ExAllocatePoolWithTag+>;pushl %edi;pushl (%ebp);pushl -(%ebp)": 1,
                "jmp - <ExAllocatePoolWithTag+>;pushl (%ebp);andl %edi, %eax;shll $, %eax;pushl %eax": 2,
                "movl , %ecx;cmpl %ecx, %eax;movl %eax, -(%ebp);jb  <ExFreePool+>;decl %ecx": 1,
                "movl (%eax), %ecx;jmp - <ExAllocatePoolWithTag+>;jmp - <ExAllocatePoolWithTag+>;movb -(%ebp), %cl;calll *": 1,
                "incl %ebx;addb %cl, (%ecx);incl %edx;addb %dh, (%ebp);jae  <PAGE+>": 1,
                "addb %cl, (%ecx);incl %edx;addb %dh, (%ebp);jae  <PAGE+>;addb %al, (%eax)": 1,
                "addb %cl, (%ebp);incl %ebp;addb %al, (%edx);jne  <PAGE+>;jae  <PAGE+>": 1,
                "incl %ebp;addb %al, (%edx);jne  <PAGE+>;jae  <PAGE+>;addb %al, (%eax)": 1,
                "addb %al, (%edx);jne  <PAGE+>;jae  <PAGE+>;addb %al, (%eax);addb %al, (%eax)": 4,
                "addb %al, (%eax);pushl %eax;addb %cl, (%esi);pushl %eax;addb %al, (%edx)": 1,
                "pushl %edx;addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %cl, %ah": 5,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "decl %eax;addb %dh, (%eax);jo  <RtlEqualUnicodeString+>;popl %ebx;addb %dl, -(%eax)": 1,
                "addl %esi, %eax;cmpb $, (%ebp);movl %eax, %edx;movl %edx, (%ebp);je  <ObCreateObject+>": 1,
                "cmpl %esi, %eax;je  <RtlEqualUnicodeString+>;movl (%eax), %edi;movb (%ebp), %cl;movzwl (%eax), %eax": 1,
                "movl %esi, %ecx;incl %edi;shrl %ecx;leal (%esi,%esi,), %edx;addl %edx, %ecx": 1,
                "shrl %ecx;leal (%esi,%esi,), %edx;addl %edx, %ecx;incl %edi;cmpw $, %ax": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;leal (%ecx,%eax), %ebx;movl (%ebp), %eax;cmpb $, (%eax)": 1,
                "jne  <SeDeleteAccessState+>;pushl -(%ebp);pushl %eax;pushl %ecx;calll - <RtlEqualUnicodeString>": 1,
                "testl %esi, %esi;je  <SeTokenType+>;cmpl %edi, %ebx;jne  <ObDereferenceSecurityDescriptor+>;movl (%esi), %esi": 1,
                "je  <RtlEqualUnicodeString+>;leal (%esi), %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl (%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax": 8,
                "jne  <RtlEqualUnicodeString+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoWMIRegistrationControl+>;popl %ebx": 1,
                "cmpb $, (%eax);jne  <SeSetAccessStateGenericMapping+>;testb $, (%ebp);jne  <NtQueryInformationFile+>;movb (%ebp), %al": 1,
                "pushl (%ebp);pushl %edi;pushl %edi;pushl (%ebp);calll  <ObReferenceObjectByHandle>": 1,
                "cmpw %di, (%ebx);je  <IoCheckFunctionAccess+>;cmpl %edi, %eax;je  <IoCheckFunctionAccess+>;cmpb $, -(%ebp)": 1,
                "movl %edi, -(%ebp);je  <RtlEqualUnicodeString+>;cmpw $, (%ecx);jne  <RtlEqualUnicodeString+>;incl %ecx": 1,
                "jne  <RtlEqualUnicodeString+>;incl %ecx;incl %ecx;addw $-, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);je  <RtlEqualUnicodeString+>;cmpw $, (%ecx);je  <RtlEqualUnicodeString+>": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %esi;movl (%esi), %ecx;calll - <ObfDereferenceObject>;andl $, (%esi)": 2,
                "leal -(%ebp), %eax;pushl (%ebp);pushl %eax;pushl %ebx;pushl (%ebp)": 1,
                "pushl (%ebp);pushl %eax;pushl %ebx;pushl (%ebp);pushl -(%ebp)": 1,
                "cmpl $, %eax;movl $, %edi;je  <ObCreateObject+>;cmpl %edi, %eax;je  <ObCreateObject+>": 1,
                "calll - <RtlEqualUnicodeString+>;testl %eax, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 2,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);pushl %esi;movl (%ebp), %esi": 3,
                "movl %eax, (%esi);pushl %edi;calll - <PsReferencePrimaryToken>;popl %edi;movl %eax, (%esi)": 1,
                "movl %eax, (%esi);popl %esi;popl %ebp;retl $;nop": 2,
                "popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);leal (%ebx), %edi;pushl %edi": 1,
                "movl %esi, %edi;rep  stosl %eax, %es:(%edi);leal (%ebx), %edi;pushl %edi;pushl (%ebp)": 1,
                "rep  stosl %eax, %es:(%edi);leal (%ebx), %edi;pushl %edi;pushl (%ebp);movl %esi, (%ebx)": 1,
                "movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl %eax, (%ebx);leal (%ebx), %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ecx)": 1,
                "movl (%ebp), %ecx;movw (%ebp), %dx;movw %bx, (%ecx);movw %dx, (%ecx);movl %eax, (%ecx)": 1,
                "addl %ebx, %ecx;cmpl %ebx, %ecx;jb  <NtCreateFile+>;cmpl %eax, %ecx;ja  <NtCreateFile+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);shrl %ebx": 3,
                "popl %ecx;xorl %eax, %eax;movl (%ebp), %ebx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "jne  <SeSetAccessStateGenericMapping+>;movl (%ebx), %ecx;testb $, %cl;jne - <RtlEqualUnicodeString+>;movw (%ebx), %dx": 1,
                "movw (%ecx), %ax;cmpw , %ax;jne - <RtlEqualUnicodeString+>;calll  <SeTokenType+>;movl %eax, %esi": 1,
                "jmp - <SeDeleteAccessState+>;movl %edi, %edx;movl %esi, %ecx;calll - <PsGetProcessInheritedFromUniqueProcessId+>;jmp - <RtlEqualUnicodeString+>": 1,
                "movl %esi, %ebx;movl (%esi), %esi;testl %esi, %esi;jne - <RtlEqualUnicodeString+>;jmp - <RtlEqualUnicodeString+>": 1,
                "movb (%esi), %al;cmpb %bl, %al;jne  <NtWaitForSingleObject+>;xorl %edx, %edx;addl $, %ecx": 1,
                "movl %ecx, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movb (%esi), %cl": 1,
                "calll - <ExFreePoolWithTag>;leave;retl;nop;nop": 1,
                "movl (%ebp), %esi;movb -(%esi), %al;movl -(%esi), %ecx;addl $-, %esi;andb $, %al": 1,
                "movb -(%esi), %al;movl -(%esi), %ecx;addl $-, %esi;andb $, %al;negb %al": 1,
                "retl $;movl (%esi), %eax;cmpl %ebx, %eax;je - <SeDeleteAccessState+>;movl (%eax), %ecx": 1,
                "cmpw (%ecx), %di;jae  <RtlAreAnyAccessesGranted+>;calll - <InterlockedPushEntrySList>;jmp - <SeDeleteAccessState+>;nop": 1,
                "calll - <KeSetBasePriorityThread>;leal -(%ebp), %eax;pushl %eax;calll - <KeInitializeTimer>;leal -(%ebp), %eax": 1,
                "movl $, %esi;popl %ebx;cmpl $, (%esi);ja  <RtlRandom+>;movl (%esi), %eax": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movb -(%esi), %al": 1,
                "movl (%ebp), %esi;movb -(%esi), %al;addl $-, %esi;xorl %ebx, %ebx;cmpb %bl, %al": 1,
                "cmpb %bl, (%ebp);je  <NtAdjustPrivilegesToken+>;testl $, %edi;je  <SeAccessCheck+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;jne  <SeAccessCheck+>;movl (%esi), %eax;pushl $": 1,
                "calll  <NtWaitForSingleObject+>;testb %al, %al;je  <SeAccessCheck+>;testl $, %edi;jne  <NtOpenThreadToken+>": 1,
                "testb %bl, %bl;popl %ebx;je  <NtSetInformationProcess+>;movl (%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "pushl %esi;je  <IoCheckFunctionAccess+>;pushl %ebx;pushl (%ebp);calll - <SeUnlockSubjectContext+>": 1,
                "movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;movl %eax, %esi;movl %esi, -(%ebp);movl (%esi), %eax": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);movl (%esi), %eax;testb $, %al;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;addl $, %eax;movl %eax, (%ecx);xorl %eax, %eax;popl %edi": 1,
                "shrl $, %ecx;andl $, %ecx;movl %ecx, -(%ebp);movl %fs:, %eax;decl (%eax)": 1,
                "movl %ecx, -(%ebp);movl %fs:, %eax;decl (%eax);pushl $;imull $, %ecx, %ecx": 1,
                "movl (%edi), %eax;leal (%ecx,%eax), %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;xorl %esi, %esi": 1,
                "leal (%edi), %esi;xorl %edx, %edx;cmpl %edx, (%esi);jne  <ObReferenceObjectByHandle+>;cmpb %dl, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);jne  <IoSetDeviceInterfaceState+>;movl %esi, -(%ebp);movl $, %eax": 1,
                "movl (%ecx), %edx;incl %edx;movl %edx, (%ecx);jne  <ObReferenceObjectByHandle+>;leal (%eax), %ecx": 1,
                "movl %edx, (%ecx);jne  <ObReferenceObjectByHandle+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>": 1,
                "addl $-, %eax;pushl %edi;xorl %edi, %edi;cmpl %edi, (%ebp);movb $, -(%ebp)": 1,
                "movl (%ebp), %esi;testl $, %esi;movl %eax, -(%ebp);jne  <CcSetLogHandleForFile+>;movl %fs:, %eax": 1,
                "pushl (%eax);pushl (%ebp);calll - <ObReferenceObjectByHandle+>;cmpb $, (%edi);movl %eax, (%ebp)": 1,
                "testl %esi, %esi;jne  <RtlDeleteAtomFromAtomTable+>;testb $, ;jne  <IoCheckFunctionAccess+>;movl %ebx, -(%ebp)": 1,
                "je  <ObReferenceObjectByHandle+>;cmpl $, (%eax);ja  <SeAppendPrivileges+>;cmpl $, (%ebp);jne  <SeReleaseSecurityDescriptor+>": 1,
                "jne  <CcSetLogHandleForFile+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "xorl %ebx, %ebx;movl %ecx, -(%ebp);movb (%eax), %cl;cmpb %bl, %cl;pushl %esi": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);movl (%eax), %eax;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;jne - <ObInsertObject+>;testb $-, (%esi)": 1,
                "je  <ObInsertObject+>;leal (%esi), %eax;movl %eax, -(%ebp);movl %fs:, %eax;movb (%eax), %al": 1,
                "movl (%edi), %ecx;pushl %eax;movl %ecx, (%eax);calll - <PAGE+>;cmpl %ebx, %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movl (%ebp), %eax": 1,
                "movzbl (%eax), %eax;pushl (%edi);shrb %al;notb %al;andl $, %eax": 1,
                "pushl (%edi);pushl -(%ebp);pushl (%edi);calll - <RtlEqualUnicodeString+>;cmpl %ebx, %eax": 1,
                "jl  <ObCheckCreateObjectAccess+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <ObCheckCreateObjectAccess+>;cmpl (%ebp), %ecx": 1,
                "movl $, -(%ebp);je  <IoRegisterDeviceInterface+>;cmpl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;movl $, (%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;addl $-, %eax": 1,
                "pushl %eax;pushl (%ebp);leal -(%ebp), %eax;pushl -(%ebp);pushl %eax": 1,
                "movl %ebx, (%eax);movl (%ebp), %eax;movl %eax, -(%ebp);cmpl %ebx, %esi;je  <ObInsertObject+>": 1,
                "incl (%ecx);cmpw (%ecx), %dx;jae  <RtlUnicodeToMultiByteSize+>;movl %edi, %edx;calll - <InterlockedPushEntrySList>": 1,
                "movl %edi, %edx;calll - <InterlockedPushEntrySList>;leal -(%ebp), %eax;cmpl %eax, (%ebp);jne  <ObInsertObject+>": 1,
                "testl $, %edx;jne  <IoCheckFunctionAccess+>;testb $, (%ebp);jne  <ObReferenceObjectByName+>;testb $, (%ebp)": 1,
                "cmpl %ebx, %eax;je  <NtMapViewOfSection+>;movl , %ecx;cmpl %ecx, %eax;jae  <IoCheckFunctionAccess+>": 1,
                "pushl %edx;leal -(%ebp), %eax;pushl (%ebp);pushl %eax;pushl (%ebp)": 1,
                "calll - <_CIsqrt+>;retl $;movl %fs:, %eax;movl (%eax), %eax;cmpl , %eax": 1,
                "movl %fs:, %eax;movl (%eax), %eax;cmpl , %eax;je  <NtCreateSection+>;movl $, -(%ebp)": 1,
                "negl %ebx;movl %eax, (%ebp);movb (%edi), %al;sbbl %ebx, %ebx;andl $, %ebx": 1,
                "movl (%ebp), %eax;addl %eax, %ecx;pushl %ecx;pushl %edx;calll - <ExAllocatePoolWithTag>": 1,
                "jne  <IoRegisterBootDriverReinitialization+>;testl %ecx, %ecx;jne  <ObCreateObject+>;movb $, (%edx);cmpl $, (%ebp)": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);movl (%esi), %esi;cmpl (%edi), %esi;ja  <RtlUpcaseUnicodeString+>": 1,
                "retl $;pushl $;pushl %ebx;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 2,
                "xorl %ecx, %ecx;cmpb %cl, (%ebp);jne  <ObCreateObject+>;cmpl %ecx, (%ebp);je  <SeTokenIsRestricted+>": 1,
                "je  <RtlUpperChar+>;movb $, %al;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;testl %edx, %edx;pushl %ebx;movl (%ebp), %ebx": 1,
                "movl (%ebp), %edx;testl %edx, %edx;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "testl %edi, %edi;leal (%ecx), %esi;jbe  <ObCreateObject+>;cmpl $, (%ebx);je  <ObCreateObject+>": 1,
                "testb %al, %al;je  <ObCreateObject+>;cmpl $, (%ebp);jne  <IoCheckFunctionAccess+>;movl (%esi), %eax": 1,
                "cmpl $, (%ebp);jne  <IoCheckFunctionAccess+>;movl (%esi), %eax;notl %eax;andl %eax, (%ebx)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %ebx;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl %ecx, -(%ebp);jne  <ObCreateObject+>": 1,
                "xorl %eax, %eax;movw (%edi), %ax;movl %eax, %ecx;andl $, %ecx;je  <CcSetLogHandleForFile+>": 1,
                "movl $, %esi;testl %ebx, %esi;jne  <NtWaitForSingleObject+>;movl -(%ebp), %eax;xorl %esi, %esi": 1,
                "jne  <NtWaitForSingleObject+>;movl -(%ebp), %eax;xorl %esi, %esi;cmpw %si, (%eax);je  <IoCheckFunctionAccess+>": 1,
                "andl $, %eax;movl %eax, -(%ebp);jne  <NtOpenThreadToken+>;cmpb $, (%ebp);jne  <NtOpenThreadToken+>": 1,
                "pushl %ebx;calll - <ObCreateObject+>;cmpl $, (%esi);jne  <ProbeForWrite+>;pushl %edi": 1,
                "calll - <ObCreateObject+>;cmpl $, (%esi);jne  <ProbeForWrite+>;pushl %edi;calll  <SeTokenIsRestricted>": 1,
                "cmpl %ebx, -(%ebp);ja  <IoWMIRegistrationControl+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl %esi, (%eax);movl -(%ebp), %eax;movl %ecx, (%eax);testl %esi, %esi": 1,
                "jne  <NtAdjustPrivilegesToken+>;movl -(%ebp), %ecx;movb -(%ebp), %al;popl %edi;popl %esi": 1,
                "cmpl -(%ecx), %edx;jne - <SeUnlockSubjectContext+>;movl (%eax), %edx;cmpl -(%ecx), %edx;jne - <SeUnlockSubjectContext+>": 1,
                "pushl $;calll - <_CIsqrt+>;xorl %eax, %eax;movl %eax, -(%ebp);movl (%ebp), %edi": 1,
                "movl %eax, (%edi);movl (%ebp), %ebx;cmpw %ax, (%ebx);je  <RtlUnicodeStringToAnsiString+>;movl (%ebx), %ecx": 1,
                "testl %edi, %edi;je  <ObCreateObject+>;movl %edi, %eax;shrl %eax;movl (%esi), %ecx": 1,
                "je  <IoCheckFunctionAccess+>;movzwl (%ebx), %eax;addl %edi, %eax;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "cmpl $, %eax;ja  <IoCheckFunctionAccess+>;movl %eax, -(%ebp);movl (%ebp), %ecx;movw (%ecx), %dx": 1,
                "ja  <IoCheckFunctionAccess+>;movl %eax, -(%ebp);movl (%ebp), %ecx;movw (%ecx), %dx;cmpw %ax, %dx": 1,
                "retl $;movzbl %al, %ecx;movl %esi, %eax;subl %ecx, %eax;jmp - <SeDeleteAccessState+>": 1,
                "addb %bl, %cl;addb (%ebp), %cl;movb %cl, (%edx);jmp - <NtCreateSection+>;movl -(%ebp), %ecx": 1,
                "movb %cl, (%edx);jmp - <NtCreateSection+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp - <RtlEqualUnicodeString+>": 1,
                "movl %ecx, (%ebp);jne  <SeTokenImpersonationLevel+>;movl (%esi), %eax;movl %eax, (%ebp);movl %eax, %edi": 1,
                "je  <SeOpenObjectAuditAlarm+>;movl (%esi), %ebx;orl (%esi), %ebx;cmpb $, (%ebp);pushl -(%ebp)": 1,
                "testb %al, %al;jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp)": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;pushl (%ebp);movl -(%eax), %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%esi);pushl (%esi);pushl $": 2,
                "pushl -(%ebp);calll  <ObReleaseObjectSecurity>;movb (%ebp), %al;popl %ebx;popl %edi": 1,
                "movl (%eax), %edi;movl %eax, -(%ebp);cmpl %ebx, %edi;movl %edi, -(%ebp);je - <SeDeleteAccessState+>": 1,
                "je  <ObReleaseObjectSecurity+>;leal -(%ebx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movb %bl, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl (%esi), %edi;movl $, -(%ebp)": 1,
                "leal (%esi), %eax;pushl %eax;movl $, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%ebp), %eax;addl $-, %eax;cmpl %ebx, (%eax);jne  <ObDereferenceSecurityDescriptor+>;testb $, (%eax)": 1,
                "jne  <ObDereferenceSecurityDescriptor+>;leal -(%ebp), %eax;pushl %eax;calll  <FsRtlNotifyFilterChangeDirectory+>;movl -(%ebp), %eax": 1,
                "andl $-, %eax;movl %edi, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;je  <IoCheckFunctionAccess+>;movl %edi, -(%ebp)": 1,
                "movl %eax, (%ebx);movl (%edi), %eax;movl %eax, (%esi);movl %esi, (%edi);jmp - <RtlEqualUnicodeString+>": 1,
                "cmpxchgl %edx, (%ecx);cmpl $, %eax;je - <ObDereferenceSecurityDescriptor+>;jmp - <RtlEqualUnicodeString+>;cmpl $, -(%ebp)": 1,
                "movl %eax, (%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl (%edi), %ebx": 1,
                "jne  <IoCheckFunctionAccess+>;leal (%ebx), %eax;movl %eax, (%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "jmp - <SeDeleteAccessState+>;movl (%ebx), %eax;testl %eax, %eax;je - <SeDeleteAccessState+>;pushl $": 1,
                "movl %eax, (%ebx);movw %ax, (%ebx);movw %ax, (%ebx);jmp - <SeDeleteAccessState+>;movzbl %al, %edx": 1,
                "movl %esi, %eax;subl %edx, %eax;movl %eax, -(%ebp);je - <SeDeleteAccessState+>;movl %eax, -(%ebp)": 2,
                "cmpb %bl, %al;je  <NtWaitForSingleObject+>;movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %esi": 1,
                "xorl %ebx, %ebx;testb $-, (%eax);pushl %edi;je  <NtAdjustPrivilegesToken+>;movl (%eax), %ecx": 1,
                "pushl %ebx;pushl %esi;calll  <NtWaitForSingleObject+>;cmpb %bl, %al;movb %al, (%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;movzbl (%ebx), %eax;andl $, (%ebp);leal (,%eax,), %eax;movl %eax, (%ebp)": 1,
                "movzbl (%ebx), %eax;andl $, (%ebp);leal (,%eax,), %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "movzbl (%edi), %eax;movl (%ebp), %ecx;leal (,%eax,), %eax;cmpl %eax, %ecx;je  <NtWaitForSingleObject+>": 1,
                "popl %ebx;popl %ebp;retl $;movl %ebx, %esi;xorl %eax, %eax": 1,
                "pushl ;pushl ;calll  <NtWaitForSingleObject+>;testb %al, %al;je - <ObCreateObject+>": 1,
                "testb %al, %al;je - <ObCreateObject+>;orl %esi, (%ebp);andl $, %ebx;incl -(%ebp)": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <SeUnlockSubjectContext+>": 1,
                "je  <ProbeForWrite+>;movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;decl %ecx": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <IoCheckFunctionAccess+>;andl $, -(%ebp);movl (%ebp), %ebx": 1,
                "cmpl %ebx, %eax;jl  <ProbeForWrite+>;xorl %eax, %eax;incl %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);pushl %ebx;pushl %ebx;pushl %eax;pushl %esi": 1,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;jmp - <ObCreateObject+>;nop": 1,
                "movl %esi, (%eax);calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;je  <IoCheckFunctionAccess+>": 1,
                "movl %edx, (%esi);movl %edi, (%ebx);movl , %eax;movl (%ebp), %ebx;je  <ProbeForWrite+>": 1,
                "movl (%ebp), %eax;movl (%esi), %ecx;pushl %eax;movl %edx, %eax;shll $, %eax": 1,
                "calll - <RtlFillMemoryUlong>;xorl %eax, %eax;popl %edi;popl %ebx;popl %esi": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %edx;leal (%esi,%edx), %ecx;cmpl %edx, %ecx;jb  <IoGetDeviceProperty+>": 1,
                "pushl %eax;pushl %ecx;calll - <SeUnlockSubjectContext+>;movl %eax, -(%ebp);movl %eax, %esi": 1,
                "xaddl %eax, (%ecx);incl -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp,%ebx);movl (%esi), %eax": 1,
                "leal (%eax,%esi), %eax;movl %eax, -(%ebp,%ebx);pushl -(%ebp);pushl -(%ebp);calll - <ObReferenceObjectByHandle+>": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <KeWaitForMultipleObjects>": 1,
                "movl (%edi), %ecx;leal (%eax,%ecx), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 2,
                "je - <ObReferenceObjectByHandle+>;jmp  <IoCheckFunctionAccess+>;movl (%ebp), %ebx;testl %ebx, %ebx;je  <ProbeForWrite+>": 1,
                "movl (%ebx), %esi;testl %esi, %esi;je  <ProbeForWrite+>;movb -(%esi), %al;testb %al, %al": 1,
                "testl %esi, %esi;je  <ProbeForWrite+>;movb -(%esi), %al;testb %al, %al;je  <ProbeForWrite+>": 1,
                "je  <NtConnectPort+>;pushl %ebx;pushl %esi;pushl %edi;pushl (%ebp)": 1,
                "movl %ebx, (%eax);movl , %ecx;testl %ecx, (%edi);movl (%edi), %ecx;jne  <RtlAreAllAccessesGranted+>": 1,
                "jne  <RtlAreAllAccessesGranted+>;andl $, %ecx;movl %ecx, (%eax);jmp - <ObReferenceObjectByHandle+>;andl $, %ecx": 1,
                "andl $, %ecx;movl %ecx, (%eax);jmp - <ObReferenceObjectByHandle+>;andl $, %ecx;orl $, %ecx": 1,
                "orl $-, -(%ebp);xorl %eax, %eax;incl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $;nop": 1,
                "je - <RtlAreAllAccessesGranted+>;calll  <KeUserModeCallback+>;movl %eax, (%esi);orl $-, -(%ebp);movl %edi, %eax": 1,
                "nop;nop;movl %fs:, %eax;movl (%eax), %eax;testb $, (%eax)": 2,
                "movl (%eax), %eax;testb $, (%eax);jne  <RtlSelfRelativeToAbsoluteSD+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "nop;movl %fs:, %eax;decl (%eax);cmpl $, ;pushl $": 1,
                "cmpw (%edi), %ax;ja  <IoCheckFunctionAccess+>;movzwl (%esi), %edx;pushl $;shrl %edx": 1,
                "movl %ecx, (%ebp);je  <RtlUpcaseUnicodeString+>;pushl %ebx;movl (%esi), %eax;movw (%eax,%ecx,), %ax": 1,
                "movw %ax, (%ebx,%ecx,);incl %ecx;cmpl %edx, %ecx;movl %ecx, (%ebp);jb - <RtlUpcaseUnicodeString+>": 1,
                "popl %esi;popl %ebp;retl $;movzwl %ax, %eax;jmp - <RtlUpcaseUnicodeString+>": 1,
                "movzwl %ax, %eax;jmp - <RtlUpcaseUnicodeString+>;cmpl %eax, %edx;jae  <IoCheckFunctionAccess+>;movl (%edx), %ecx": 1,
                "movl %edx, -(%ebp);leal -(%ebp), %ecx;movl %ecx, (%ebp);jmp - <ProbeForWrite+>;cmpl $-, (%ebp)": 1,
                "movl %ecx, (%ebp);jmp - <ProbeForWrite+>;cmpl $-, (%ebp);jne  <RtlUpcaseUnicodeString+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;cmpl , %eax;jne  <SeCaptureSecurityDescriptor+>;movl (%esi), %esi;movl (%esi), %ecx": 1,
                "movl %ecx, %eax;notl %eax;testl %eax, (%ebp);jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 2,
                "notl %eax;testl %eax, (%ebp);jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;cmpl %ebx, %eax": 2,
                "movl (%ebp), %eax;cmpl %ebx, %eax;leal -(%esi), %edx;movl %edx, -(%ebp);jne  <RtlDeleteAtomFromAtomTable+>": 1,
                "movl %esi, (%edi);jmp - <ObReferenceObjectByHandle+>;cmpl $-, (%ebp);jne  <FsRtlOplockIsFastIoPossible+>;movl (%ebp), %eax": 1,
                "je  <RtlxUnicodeStringToOemSize+>;cmpl $, (%ecx);jne  <RtlxUnicodeStringToOemSize+>;pushl %esi;movl %fs:, %eax": 1,
                "decl (%eax);leal (%ecx), %esi;movl %esi, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "popl %ebp;retl $;xorl %eax, %eax;jmp - <RtlUpcaseUnicodeString+>;addl $, (%ebx)": 1,
                "jge  <FsRtlNotifyFilterChangeDirectory+>;jmp  <IoCheckFunctionAccess+>;movb $, -(%ebp);jmp  <FsRtlIsNameInExpression+>;andl $, -(%ebp)": 1,
                "movl $, %ebx;jmp  <IoCreateStreamFileObjectLite+>;movl %ecx, (%eax);movl %ebx, (%eax);jmp - <RtlUpcaseUnicodeString+>": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <NtQueryInformationThread+>;movl , %eax;movl (%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl %esi": 1,
                "pushl %esi;leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %eax": 1,
                "cmpl %esi, %eax;jl  <RtlUpcaseUnicodeString+>;pushl -(%ebp);pushl -(%ebp);pushl %ecx": 1,
                "cmpl %esi, (%eax);jne  <NtQueryInformationThread+>;addl $-, %eax;movl %eax, -(%ebp);movl (%eax), %esi": 1,
                "movl (%eax), %edi;movl %edi, -(%ebp);movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %ecx": 2,
                "movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp);pushl %eax": 2,
                "movl %esi, %ecx;calll *;popl %esi;retl $;nop": 1,
                "calll *;popl %esi;retl $;nop;nop": 1,
                "movl $, %ecx;calll *;movl , %eax;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <RtlUpcaseUnicodeString+>;pushl %ebx;pushl %esi;pushl %edi": 1,
                "movl $, %ecx;calll *;leave;retl;leal (%esi), %eax": 1,
                "calll - <_wcsicmp>;testl %eax, %eax;popl %ecx;popl %ecx;jne  <RtlUpcaseUnicodeString+>": 1,
                "popl %ecx;popl %ecx;jne  <RtlUpcaseUnicodeString+>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "xorl %ecx, %ecx;movw (%eax), %cx;incl %ecx;movw %cx, (%eax);movl (%ebp), %ecx": 1,
                "movw %ax, (%ecx);movl %edi, -(%ebp);orl $-, -(%ebp);pushl (%ebp);calll - <RtlUpcaseUnicodeString+>": 1,
                "jae  <IoCheckFunctionAccess+>;testb $, %al;jne  <IoCheckFunctionAccess+>;movb (%eax), %cl;movb %cl, (%eax)": 4,
                "jne  <IoCheckFunctionAccess+>;movb (%eax), %cl;movb %cl, (%eax);movb (%eax), %cl;movb %cl, (%eax)": 2,
                "calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp);cmpl %esi, %eax;jne - <ProbeForWrite+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movl %eax, -(%ebp);cmpl %esi, %eax;jne - <ProbeForWrite+>;jmp  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <ProbeForWrite+>;testl %eax, %esi;je  <NtAllocateVirtualMemory+>": 1,
                "andl %ecx, %edx;cmpl %ecx, %edx;je  <NtAllocateVirtualMemory+>;pushl (%ebp);movl %eax, %ecx": 1,
                "andl $, %ecx;addl , %ecx;andl $, %eax;leal (%ecx,%eax,), %eax;pushl %eax": 1,
                "cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;shrl $, %eax;movl $, %edx": 1,
                "calll *;cmpl $, -(%ebp);je  <RtlAddAtomToAtomTable+>;pushl -(%ebp);pushl %esi": 1,
                "cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;cmpl $-, (%ebp);jne  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 2,
                "movl (%ebp), %edx;movl %ecx, (%edx);movl (%ebp), %ecx;movl %eax, (%ecx);orl $-, -(%ebp)": 1,
                "pushl (%ebp);calll *%eax;pushl %ebx;calll - <SeDeleteAccessState+>;addl $, %esi": 1,
                "shrl $, %eax;andl $, %eax;cmpl $, (%esi,%eax,);jne  <ExWaitForRundownProtectionRelease+>;addl $, %esi": 1,
                "movl %esi, (%ebp);movl (%esi), %edi;movl (%ebp), %eax;movl %edi, -(%ebp);movl %edi, (%eax)": 1,
                "pushl (%ebp);pushl %ebx;calll - <RtlAddAtomToAtomTable+>;incl (%edi);je  <CcSetLogHandleForFile+>": 1,
                "jne  <SeTokenIsWriteRestricted+>;testb $, ;jne  <IoCheckFunctionAccess+>;notl %eax;andl %ecx, %eax": 1,
                "andl %ecx, %eax;pushl %edi;movl (%ebp), %edi;pushl %edi;pushl (%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;movl %fs:, %eax;pushl (%ebp);pushl -(%ebp);pushl %esi": 1,
                "pushl -(%ebp);pushl %esi;pushl (%eax);calll - <RtlAddAtomToAtomTable+>;movl (%ebp), %ecx": 1,
                "leal (%esi), %eax;cmpl %eax, (%eax);jne  <NtFindAtom+>;cmpb $, -(%ebp);jne  <CcSetLogHandleForFile+>": 1,
                "cmpl $, %ecx;je  <NtClose+>;cmpl $, (%ebp);pushl %ebx;pushl %esi": 1,
                "jbe  <NtClose+>;movl (%ecx), %edi;leal (%ecx), %eax;movl (%eax), %ebx;movl %ebx, %edx": 1,
                "leal (%edi), %eax;movl %edi, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "cmpxchgl %edx, (%ecx);cmpl %edi, %eax;jne  <IoCheckFunctionAccess+>;incl (%esi);jne  <NtClose+>": 1,
                "incl (%esi);jne  <NtClose+>;leal (%esi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "subl $, %esp;movl (%ebp), %eax;cmpl , %eax;je  <FsRtlOplockIsFastIoPossible+>;cmpl $, (%ebp)": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl (%ebp), %eax;jne  <IoCheckFunctionAccess+>": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);jne  <RtlCreateSecurityDescriptor+>;movl (%ebp), %ecx": 1,
                "cmpl $, (%ebp);jne  <RtlCreateSecurityDescriptor+>;movl (%ebp), %ecx;pushl %edi;xorl %eax, %eax": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movb $, (%ecx)": 1,
                "jne  <ObAssignSecurity+>;movl (%eax), %edx;testl $, %edx;popl %esi;jne  <SeAssignSecurity+>": 1,
                "movl %eax, (%ebp);movl $, %edi;je  <RtlCopySid+>;cmpl %edi, %eax;je  <RtlCopySid+>": 1,
                "calll *;movb %al, (%ebp);leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;leal (%ebx), %eax": 1,
                "calll - <FsRtlInitializeFileLock+>;movb (%ebp), %cl;calll *%esi;cmpb $, (%ebp);je  <RtlCopySid+>": 1,
                "je - <RtlAddAtomToAtomTable+>;xorl %eax, (%ebp);movl , %eax;cmpl %eax, %ebx;movl , %edi": 1,
                "jae  <IoCheckFunctionAccess+>;leal (%ebx), %eax;movl -(%ebp), %esi;movl %eax, %edi;movsl (%esi), %es:(%edi)": 1,
                "leal (%ebx), %eax;movl -(%ebp), %esi;movl %eax, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "leal (,%ecx,), %ecx;rep  cmpsb %es:(%edi), (%esi);sete %al;popl %edi;popl %esi": 1,
                "retl $;movl (%edx), %eax;addl (%edx), %eax;movl (%edx), %edx;jmp - <SeDeleteAccessState+>": 1,
                "retl $;nop;nop;outb %al, $;addb %al, (%eax)": 1,
                "jl - <RtlEqualUnicodeString+>;movl (%ebp), %ecx;movl %esi, (%ecx);jmp - <RtlEqualUnicodeString+>;nop": 1,
                "je  <FsRtlNotifyVolumeEvent+>;movl %edi, %ecx;calll *%ebx;cmpb $, -(%ebp);je  <ObReferenceObjectByName+>": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %esi;testl %esi, %esi;je  <SeTokenType+>": 1,
                "testl %esi, %esi;je  <SeTokenType+>;incl (%esi);movl %edi, %ecx;calll *": 1,
                "jne  <SeQueryAuthenticationIdToken+>;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;retl;movl (%ebp), %eax": 1,
                "movl %fs:, %eax;incl (%eax);jne  <SeTokenType+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "movl (%ebp), %eax;pushl (%eax);pushl (%eax);addl $, %eax;pushl %eax": 1,
                "je  <IoCheckFunctionAccess+>;pushl $;pushl $;pushl %esi;calll - <ExAllocatePoolWithTag>": 1,
                "movl %ebx, (%ebp);calll - <SeCreateAccessState>;testl %eax, %eax;movl %eax, (%ebp);jl  <ObOpenObjectByName+>": 1,
                "calll - <InterlockedPushEntrySList>;andl $, (%edi);movl (%ebx), %eax;movl (%edi), %ecx;testl %eax, (%ecx)": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);cmpl %ebx, (%ebp);jne  <ObOpenObjectByName+>;pushl (%ebp)": 1,
                "cmpl %ebx, (%ebp);jne  <ObOpenObjectByName+>;pushl (%ebp);calll - <SeDeleteAccessState>;leal (%ebx), %esi": 1,
                "jne  <ObOpenObjectByName+>;pushl (%ebp);calll - <SeDeleteAccessState>;leal (%ebx), %esi;movl (%esi), %eax": 1,
                "calll - <ExFreePoolWithTag>;popl %edi;movl (%ebp), %eax;popl %esi;popl %ebx": 2,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;movw (%eax), %si;pushl %edi": 1,
                "movl (%ebp), %ebx;pushl %esi;movw (%eax), %si;pushl %edi;movl (%eax), %edi": 1,
                "shrw %si;movl %eax, (%ebp);testw %si, %si;je  <ObOpenObjectByName+>;cmpw $, (%ebp)": 1,
                "movzwl %ax, %ecx;movzwl (%ebp), %eax;subl %ecx, %eax;jne  <ObOpenObjectByName+>;movl $, %eax": 1,
                "movl (%ebx), %eax;pushl %ecx;pushl %ebx;pushl (%ebp);movl %eax, -(%ebp)": 1,
                "cmpl %edi, -(%ebp);je  <RtlFreeUnicodeString+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax": 1,
                "movw %bx, -(%eax);xorl %ebx, %ebx;incl %edx;movl %ecx, -(%eax);addl $, %eax": 1,
                "jmp - <ObOpenObjectByName+>;cmpl $, %edx;jae  <ObOpenObjectByName+>;movl %esi, (%eax);jmp  <ObOpenObjectByName+>": 1,
                "cmpb $, (%ebx);jne  <IoCheckFunctionAccess+>;movl (%ebx), %esi;cmpl %edi, %esi;je - <RtlEqualUnicodeString+>": 1,
                "je  <ObOpenObjectByName+>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "cmpl , %eax;jne  <IoCheckFunctionAccess+>;cmpl %ebx, ;movl (%ebp), %eax;jne  <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <ObOpenObjectByName+>;movl %eax, -(%ebp);calll - <ObOpenObjectByName+>": 1,
                "cmpl %ebx, (%ebp);jl  <ObOpenObjectByName+>;cmpl $, -(%ebp);movl -(%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "jne  <ObOpenObjectByName+>;testb $, %al;jne  <RtlQueryAtomInAtomTable+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "xorl %edi, %edi;incl %edi;leal (%ebx), %ecx;xorl %esi, %esi;testl %edi, %edi": 1,
                "addl $, %eax;pushl %eax;pushl %ecx;calll - <ObOpenObjectByName+>;testl %eax, %eax": 1,
                "testl %eax, (%edi);je  <ObOpenObjectByName+>;jmp  <IoCheckFunctionAccess+>;movl (%ebp), %esi;jmp  <ObOpenObjectByName+>": 1,
                "movl (%ebp), %esi;jmp  <ObOpenObjectByName+>;movl (%ebx), %eax;cmpw $, (%eax);je  <NtSetInformationProcess+>": 1,
                "incl %ecx;jmp  <ObOpenObjectByName+>;nop;nop;nop": 1,
                "movl (%eax), %eax;movl (%eax), %ecx;andl $, -(%ebp);pushl %ebx;movl %eax, -(%ebp)": 1,
                "movl (%eax), %eax;imull $, %eax, %eax;xorl %edx, %edx;movl $, %ecx;divl %ecx": 1,
                "movl (%eax), %eax;testl %eax, %eax;movl %eax, -(%ebp);jne - <ObOpenObjectByName+>;cmpb $, -(%ebp)": 1,
                "testl %esi, %esi;movl %esi, (%ebp);jge - <ObOpenObjectByName+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "jge - <ObOpenObjectByName+>;movl (%ebp), %eax;movl (%eax), %eax;testb $, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;pushl %eax;calll  <ObOpenObjectByName+>;testb %al, %al;je  <IoCheckFunctionAccess+>": 1,
                "cmpl $, (%edi);jne  <IoCheckFunctionAccess+>;pushl %edi;calll  <ObOpenObjectByName+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movl (%ebp), %ecx;movl %edi, (%eax);movl (%edi), %eax;movl %eax, (%ecx);movl (%edi), %eax": 1,
                "movl (%edi), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);jmp - <ObOpenObjectByName+>;cmpw $, (%ebx)": 1,
                "movl %ecx, (%eax);movw %bx, (%eax);incl %edx;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;incl %eax;popl %edi;movl %eax, (%ecx);popl %esi": 1,
                "incl %eax;popl %edi;movl %eax, (%ecx);popl %esi;movl %edx, %eax": 1,
                "movl %eax, (%ecx);popl %esi;movl %edx, %eax;popl %ebx;leave": 1,
                "movl (%ebp), %ecx;cmpl %eax, %ecx;jae  <IoCheckFunctionAccess+>;movl (%ecx), %edx;movl %edx, -(%ebp)": 3,
                "movl , %esi;movl (%esi), %eax;testl %eax, %eax;jne  <RtlAreAnyAccessesGranted+>;movl %esi, %eax": 1,
                "movl %eax, (%edx);movl %edx, (%eax);movl , %eax;movl %eax, (%ecx);movl $, (%ecx)": 1,
                "movl , %edx;movl $, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, ": 1,
                "xorl %eax, (%ecx);popl %ebp;retl $;testb $, %al;je - <ObOpenObjectByName+>": 1,
                "je - <ObOpenObjectByName+>;andl $, (%ebp);movl %ecx, %eax;decl %eax;cmpb $, -(%ebp)": 1,
                "jne  <PsGetContextThread+>;testl $, %ecx;jne  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;calll - <IoQueueWorkItem+>": 1,
                "movl , %eax;leal -(%eax), %ecx;cmpl %ecx, %ebx;ja  <IoCheckFunctionAccess+>;movl %eax, %ecx": 1,
                "subl $, %ecx;cmpl %edi, %ecx;jb  <IoCheckFunctionAccess+>;cmpl %esi, %edi;je  <IoCheckFunctionAccess+>": 1,
                "cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;leal -(%edi,%ebx), %eax;orl $, %eax;movl %eax, -(%ebp)": 1,
                "cmpl (%ebx), %eax;jb  <RtlUnicodeToMultiByteSize+>;movl (%ebx), %ecx;cmpl %ecx, -(%ebp);ja  <RtlUnicodeToMultiByteSize+>": 1,
                "jb  <RtlUnicodeToMultiByteSize+>;movl (%ebx), %ecx;cmpl %ecx, -(%ebp);ja  <RtlUnicodeToMultiByteSize+>;movl -(%ebp), %eax": 1,
                "je  <RtlUnicodeToMultiByteSize+>;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;testb $-, -(%ebp);je  <NtAllocateVirtualMemory+>": 1,
                "orl $, %eax;movl %eax, -(%ebp);testb $, -(%ebp);jne  <IoCheckFunctionAccess+>;andl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);shrl $, %edx;movl $, %ecx;andl %ecx, %edx;movl $, %eax": 1,
                "xorl %eax, %ecx;andl $, %ecx;xorl %eax, %ecx;movl %ecx, (%ebx);leal (%esi), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;leal (%eax,%edi), %ecx;xorl %edx, %edx;calll - <PsGetCurrentProcess+>": 1,
                "cmpl $, %eax;jne  <IoCheckFunctionAccess+>;cmpl $, -(%ebp);jne  <NtAllocateVirtualMemory+>;movl $, %ecx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;je  <NtAllocateVirtualMemory+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;cmpl (%eax), %ecx;jbe  <NtAllocateVirtualMemory+>;movl (%eax), %eax;jmp - <NtAllocateVirtualMemory+>": 1,
                "movl (%edi), %eax;testb $, %al;movl $, %esi;je - <RtlAddAtomToAtomTable+>;movl %eax, %ecx": 1,
                "orl $-, -(%ebp);movl , %eax;testl %eax, %eax;je - <NtAllocateVirtualMemory+>;jmp  <IoCheckFunctionAccess+>": 2,
                "incl -(%ebp);cmpl $, -(%ebp);jne - <NtAllocateVirtualMemory+>;pushl $;pushl %esi": 1,
                "andl $, (%eax);calll - <ObfDereferenceObject>;movl %esi, %eax;popl %esi;leave": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %edi;testb %al, %al;je  <NtSetEvent+>": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;testl %edi, %edi;jne  <IoCheckFunctionAccess+>;orl $-, -(%ebp)": 1,
                "movl (%ebp), %edx;jmp - <NtAllocateVirtualMemory+>;nop;nop;nop": 1,
                "shrl $, %esi;shrl $, %ecx;testl %eax, %eax;pushl %edi;movl $, %ebx": 1,
                "movl $, %edi;je  <IoCheckFunctionAccess+>;movl (%eax), %eax;movl %eax, %edx;shll $, %eax": 1,
                "je  <PsSetProcessWinProcess+>;incl -(%ebp);cmpl $, -(%ebp);je  <FsRtlTeardownPerStreamContexts+>;movl (%edi), %eax": 1,
                "movl $, %eax;andl %eax, %ecx;je  <PsGetContextThread+>;cmpl %eax, %ecx;je  <PsGetContextThread+>": 1,
                "testb %al, %al;movl (%ebp), %eax;je - <NtSetEvent+>;movl , %ecx;cmpl %ecx, %eax": 1,
                "orl $, %edi;movl %edi, -(%ebp);andl $, %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);leal (%esi), %ecx;movl %ecx, -(%ebp);calll *;testb $, (%esi)": 1,
                "cmpl -(%ebp), %eax;jb  <IoCheckFunctionAccess+>;movl (%ebx), %ecx;testl %ecx, %ecx;jns  <ExUuidCreate+>": 1,
                "andl $, -(%ebp);movl %ebx, %ecx;calll - <NtSetEvent+>;movl %eax, -(%ebp);movl %ebx, %ecx": 1,
                "calll - <NtSetEvent+>;movl %eax, -(%ebp);movl %ebx, %ecx;calll - <NtSetEvent+>;movl %eax, -(%ebp)": 1,
                "calll - <NtSetEvent+>;movl %eax, -(%ebp);testb $-, (%ebp);je - <RtlAddAtomToAtomTable+>;cmpl $, -(%ebp)": 1,
                "calll - <PsReturnProcessNonPagedPoolQuota+>;pushl -(%ebp);pushl -(%ebp);pushl %esi;pushl %edi": 1,
                "subl %edi, (%esi);movl -(%ebp), %eax;subl %eax, (%esi);leal (%esi), %ecx;calll *": 1,
                "calll - <ExFreePoolWithTag>;xorl %ebx, %ebx;incl %ebx;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "movl %edi, -(%ebp);addl $, %eax;cmpl %ebx, (%ebp);jne  <IoCheckFunctionAccess+>;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;shrl $, %eax;addl %eax, %edi;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp)": 7,
                "movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;andl $, %eax;orl $-, %eax": 1,
                "movl -(%ebp), %eax;andl $, %eax;orl $-, %eax;shll $, %eax;movl (%ecx), %edx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;leal -(%ecx,%eax), %ebx;orl $, %ebx;cmpl -(%ebp), %ebx": 1,
                "movl %eax, (%edi);movl %ebx, %eax;shrl $, %eax;movl %eax, (%edi);leal (%esi), %ecx": 1,
                "movl %ebx, %eax;shrl $, %eax;movl %eax, (%edi);leal (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>": 1,
                "addl %ebx, (%eax);movl (%eax), %edx;leal (%esi), %ecx;cmpl (%ecx), %edx;jbe  <NtFreeVirtualMemory+>": 1,
                "xorl %edi, %edi;incl %edi;cmpl %edi, -(%ebp);je  <ObReferenceObjectByName+>;cmpl $-, (%ebp)": 1,
                "incl %edi;cmpl %edi, -(%ebp);je  <ObReferenceObjectByName+>;cmpl $-, (%ebp);jne  <ObReferenceObjectByName+>": 1,
                "je  <RtlUnicodeStringToAnsiString+>;movl (%ebp), %eax;movl %eax, %ecx;shrl $, %ecx;andl $, %ecx": 1,
                "calll - <PsIsThreadTerminating+>;cmpl %edi, -(%ebp);jne - <NtFreeVirtualMemory+>;cmpl $, -(%ebp);jne  <RtlUnicodeStringToAnsiString+>": 1,
                "calll - <PsIsThreadTerminating+>;cmpl %edi, -(%ebp);jne - <NtFreeVirtualMemory+>;movl %edi, -(%ebp);cmpl -(%ebp), %ebx": 1,
                "subl %edx, %ecx;movl %ecx, %edx;movl (%eax), %ecx;addl %ecx, %edx;cmpl (%eax), %edx": 1,
                "addl %ecx, %edx;cmpl (%eax), %edx;ja  <CcZeroData+>;movl -(%ebp), %eax;shrl $, %eax": 1,
                "movl , %edx;movl -(%ebp), %ecx;calll - <PsIsThreadTerminating+>;movl , %ecx;leal (%ecx,%eax,), %eax": 1,
                "pushl %ebx;calll - <PsGetThreadTeb+>;addl $, %ebx;movl %ebx, -(%ebp);jmp - <NtFreeVirtualMemory+>": 1,
                "calll - <ExReleaseFastMutexUnsafe>;xorl %eax, %eax;calll - <_CIsqrt+>;retl $;movl (%eax), %ecx": 1,
                "cmpl %eax, %ecx;jne - <NtFreeVirtualMemory+>;jmp - <NtFreeVirtualMemory+>;movl -(%ebp), %edx;movl %edx, (%ecx)": 1,
                "jmp - <NtAllocateVirtualMemory+>;movl %ebx, %eax;shrl $, %eax;andl $, %eax;movl , %ecx": 1,
                "shrl $, %eax;andl $, %eax;movl , %ecx;leal (%ecx,%eax,), %eax;incw (%eax)": 1,
                "jne  <NtFreeVirtualMemory+>;andw $, %dx;cmpb $-, %dl;je  <RtlUnicodeStringToAnsiString+>;movl , %eax": 1,
                "cmpb $-, %dl;je  <RtlUnicodeStringToAnsiString+>;movl , %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "andl $, %eax;xorl %eax, (%ebx);jmp - <NtFreeVirtualMemory+>;negl %eax;movl %eax, -(%ebp)": 1,
                "jmp - <NtAllocateVirtualMemory+>;movl %ebx, %eax;shrl $, %eax;andl $, %eax;subl $, %eax": 1,
                "pushl $;pushl %esi;pushl %eax;calll - <KeSetKernelStackSwapEnable+>;jmp - <NtFreeVirtualMemory+>": 1,
                "andl $, -(%ebp);testb $, (%esi);je  <RtlCompareUnicodeString+>;pushl $;movzwl (%esi), %eax": 1,
                "pushl (%ebp);calll - <RtlUpcaseUnicodeChar>;jmp - <ObOpenObjectByName+>;nop;nop": 1,
                "movl %ebx, (%ebp);je  <RtlAreAnyAccessesGranted+>;cmpl $-, %ebx;je  <RtlAreAnyAccessesGranted+>;andl $-, %ebx": 1,
                "pushl $;pushl $;calll - <_CIsqrt+>;xorl %esi, %esi;movw %si, -(%ebp)": 3,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);cmpl %esi, ;jne  <IoCheckFunctionAccess+>;movl (%ebp), %edi": 1,
                "movl %ebx, -(%ebp);cmpl %esi, ;jne  <IoCheckFunctionAccess+>;movl (%ebp), %edi;cmpl %esi, %edi": 1,
                "jne  <IoCheckFunctionAccess+>;movl $, -(%ebp);cmpb $, %bl;jne  <CcSetLogHandleForFile+>;movl (%ebp), %edx": 1,
                "jbe  <NtFreeVirtualMemory+>;movzwl -(%ebp), %eax;movl %eax, %ecx;shrl %ecx;movl -(%ebp), %edx": 1,
                "movzwl -(%ebp), %eax;movl %eax, %ecx;shrl %ecx;movl -(%ebp), %edx;cmpw $, -(%edx,%ecx,)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl (%esi);calll  <NtFreeVirtualMemory+>;movl %eax, -(%ebp)": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;cmpl $, ;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "cmpl $, ;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $": 1,
                "testb $, (%esi);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "cmpl $, (%edi);jne  <IoGetDeviceProperty+>;popl %edi;popl %ebp;retl $": 1,
                "je  <RtlAreAnyAccessesGranted+>;calll - <ObOpenObjectByName+>;movl (%ebp), %eax;movl (%eax), %eax;testb $, (%eax)": 1,
                "jne  <IoCheckFunctionAccess+>;xorb %al, %al;movl (%ebp), %ecx;cmpl %ebx, %ecx;jne  <NtQueryInformationToken+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);ja  <NtFreeVirtualMemory+>": 1,
                "movl (%esi), %edi;testl %edi, %edi;jne  <IoGetDeviceProperty+>;popl %edi;calll - <RtlUpcaseUnicodeChar+>": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;pushl $": 1,
                "je  <SeRegisterLogonSessionTerminatedRoutine+>;movl (%eax), %ecx;cmpw %bx, %si;je  <SeQuerySecurityDescriptorInfo+>;cmpl %ebx, %ecx": 1,
                "movl (%eax), %ecx;cmpw %bx, %si;je  <SeQuerySecurityDescriptorInfo+>;cmpl %ebx, %ecx;je  <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %edx;testb $, %dl;je  <SeQuerySecurityDescriptorInfo+>": 1,
                "movl %eax, -(%ebp);testb $, %dl;je  <SeQuerySecurityDescriptorInfo+>;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "je  <SeQuerySecurityDescriptorInfo+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <SeQuerySecurityDescriptorInfo+>;movzbl (%ecx), %ecx": 1,
                "leal (,%ecx,), %ecx;movl %ecx, -(%ebp);addl $, %ecx;andl $-, %ecx;addl %ecx, %eax": 1,
                "addl $, %ecx;andl $-, %ecx;addl %ecx, %eax;movl %eax, -(%ebp);testb $, %dl": 1,
                "je  <SeQuerySecurityDescriptorInfo+>;movzwl (%edi), %ecx;addl $, %ecx;andl $-, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);addl %ecx, %eax;movl %eax, -(%ebp);testb $, %dl;je  <SeQuerySecurityDescriptorInfo+>": 1,
                "je  <NtAdjustPrivilegesToken+>;pushl -(%ebp);pushl -(%ebp);pushl %edi;calll - <memmove>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %edi;calll - <memmove>;addl $, %esp": 2,
                "orl %ecx, %eax;movw %ax, (%esi);movl -(%ebp), %eax;addl $, %eax;andl $-, %eax": 2,
                "movl %edi, %eax;subl %esi, %eax;movl %eax, (%esi);movl %ebx, %eax;andl $, %eax": 1,
                "jne  <RtlGeneratedotName+>;calll - <RtlUpcaseUnicodeChar+>;movl (%ebp), %ecx;movl (%ecx), %esi;testb $, (%esi)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %eax;subl %ebx, %eax;je  <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);calll - <RtlUpcaseUnicodeChar+>;movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "cmpl $, %eax;jb  <NtSetInformationProcess+>;addl $, %eax;movb $, %dl;movl (%ebp), %esi": 1,
                "andl $, -(%ebp);xorl %eax, %eax;cmpl $, (%ebp);sete %al;movl %eax, -(%ebp)": 1,
                "je  <RtlDeleteAtomFromAtomTable+>;pushl $;popl %ecx;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %esi": 1,
                "movl -(%ebp), %ecx;leal (%ecx), %eax;cmpl %ebx, (%eax);jne  <SeQuerySecurityDescriptorInfo+>;movl %esi, (%eax)": 1,
                "pushl %ebx;calll - <ExFreePoolWithTag>;movl %edi, %eax;orl $, %eax;calll - <_CIsqrt+>": 1,
                "cmpl $, (%ebp);movl (%eax), %edi;movl %edi, (%ebp);jne  <SeQuerySecurityDescriptorInfo+>;leal (%edi), %ecx": 1,
                "calll *;testb $, (%edi);jne  <IoCheckFunctionAccess+>;testb $, %bl;je  <MmLockPagableImageSection+>": 1,
                "leal (%eax), %edi;movl (%edi), %ecx;testl $, %ecx;je  <MmLockPagableImageSection+>;andl $, %ecx": 1,
                "testl %eax, %eax;jne  <RtlUpperChar+>;movb (%edx), %al;movb %al, (%esi);pushl %ecx": 1,
                "je  <IoCheckFunctionAccess+>;popl %ebp;jmp - <RtlSetBit+>;movl , %edx;movb $, (%ebp)": 1,
                "movl , %edx;movb $, (%ebp);jmp - <PsSetProcessPriorityByClass+>;nop;nop": 1,
                "cmpl $, (%ebp);je  <RtlMultiByteToUnicodeN+>;movzbl (%edx), %eax;shll %eax;movw (%eax), %si": 1,
                "je  <RtlMultiByteToUnicodeN+>;movzbl (%edx), %eax;shll %eax;movw (%eax), %si;decl %edi": 1,
                "movzbl (%edx), %eax;shll %eax;movw (%eax), %si;decl %edi;decl (%ebp)": 1,
                "movw (%eax), %si;decl %edi;decl (%ebp);testw %si, %si;je  <RtlMultiByteToUnicodeN+>": 1,
                "andw $, (%ecx);incl %ecx;incl %ecx;movl (%ebp), %eax;testl %eax, %eax": 1,
                "decl %ebx;addb %bl, -(%ebx);addl $, %eax;decl %ebx;addb %dl, %bl": 1,
                "addb %bl, -(%ebx);addl $, %eax;decl %ebx;addb %dl, %bl;addl $, %eax": 1,
                "decl %ebx;addb %bh, (%edi,%edx);addb %bl, -(%ecx);popl %ss;decl %ebx": 1,
                "addb %bl, (%esi);popl %ss;decl %ebx;addb %dl, (%edx);popl %ss": 1,
                "je  <FsRtlTeardownPerStreamContexts+>;pushl $;pushl (%ebp);leal -(%ebp), %eax;pushl %edi": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <IoGetBaseFileSystemDeviceObject+>;movl %eax, -(%ebp)": 1,
                "je  <RtlRemoveUnicodePrefix+>;cmpl $, -(%ebp);jl  <RtlMultiByteToUnicodeN+>;cmpl $, -(%ebp);je  <RtlMultiByteToUnicodeN+>": 1,
                "jne  <IoCheckFunctionAccess+>;testl %ebx, %ebx;je  <FsRtlTeardownPerStreamContexts+>;cmpl $, (%ebx);jb  <FsRtlTeardownPerStreamContexts+>": 1,
                "cmpl $, (%ebx);jb  <FsRtlTeardownPerStreamContexts+>;movl (%ebx), %ebx;testl %ebx, %ebx;je  <FsRtlTeardownPerStreamContexts+>": 1,
                "testl %ebx, %ebx;je  <FsRtlTeardownPerStreamContexts+>;pushl %edi;pushl (%ebp);calll *%ebx": 1,
                "calll - <IoGetBaseFileSystemDeviceObject+>;leal -(%ebp), %eax;pushl %eax;pushl $;pushl $": 2,
                "testl %esi, %esi;jne  <IoCheckFunctionAccess+>;testl %ebx, %ebx;je  <RtlMultiByteToUnicodeN+>;cmpl $, (%ebx)": 1,
                "je  <RtlRemoveUnicodePrefix+>;cmpl $, -(%ebp);je  <RtlMultiByteToUnicodeN+>;movl -(%ebp), %eax;cmpw $, (%eax)": 1,
                "pushl %eax;calll - <IoGetBaseFileSystemDeviceObject+>;movl %fs:, %eax;incl (%eax);popl %edi": 2,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movb $, -(%ebp);orl $-, -(%ebp);calll  <CcSetBcbOwnerPointer+>": 1,
                "movl (%ebp), %ebx;testb $, %bl;jne  <IoCheckFunctionAccess+>;cmpw $, (%ebx);je  <IoCheckFunctionAccess+>": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %fs:, %eax;movl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "je  <RtlSetGroupSecurityDescriptor+>;movl %ebx, -(%ebp);movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <CcUnpinDataForThread+>": 1,
                "je  <CcUnpinDataForThread+>;testb $, (%ebp);jne  <IoCheckFunctionAccess+>;movl , %eax;movl (%ebp), %esi": 1,
                "cmpl %ebx, %eax;jl  <PsGetProcessExitTime+>;cmpl %ebx, (%ebp);je  <CcUnpinDataForThread+>;movswl -(%ebp), %eax": 1,
                "jl  <PsGetProcessExitTime+>;cmpl %ebx, (%ebp);je  <CcUnpinDataForThread+>;movswl -(%ebp), %eax;movzwl (%edi), %ecx": 1,
                "movl (%edi), %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp);testl %ebx, %ebx;je  <IoCheckFunctionAccess+>": 1,
                "andl $, ;movl %esi, %ecx;calll *;cmpl $, (%ebp);je  <CcUnpinDataForThread+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <PsLookupProcessThreadByCid>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%ebx), %eax;pushl %eax;calll  <CcUnpinDataForThread+>": 1,
                "pushl -(%ebp);pushl -(%ebp);calll  <PsLookupProcessThreadByCid+>;movl -(%ebp), %ecx;calll - <ObfReferenceObject>": 1,
                "movl -(%ebp), %ecx;calll - <ObfReferenceObject>;movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "calll - <ObfReferenceObject>;movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movl %edi, (%eax)": 1,
                "movl %edi, (%ecx);andb $-, %al;movb %al, (%edx);movl %edi, ;movl %esi, %ecx": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ebx;pushl (%ebp);pushl $": 1,
                "popl %ecx;movl %ecx, -(%ebp);movw (%edi), %ax;andw $, %ax;cmpw $, %ax": 1,
                "andw $, %ax;cmpw $, %ax;je  <ObReferenceObjectByName+>;cmpw %cx, %ax;je  <CcUnpinDataForThread+>": 1,
                "leal (%edi), %eax;pushl %eax;leal (%edi), %eax;pushl %eax;pushl (%ebp)": 3,
                "je  <CcUnpinDataForThread+>;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $;movl , %eax;jmp - <CcUnpinDataForThread+>": 1,
                "je  <CcUnpinDataForThread+>;movl (%edx), %eax;stosl %eax, %es:(%edi);movl (%edx), %eax;stosl %eax, %es:(%edi)": 1,
                "stosl %eax, %es:(%edi);movl (%edx), %eax;stosl %eax, %es:(%edi);addl $, %esi;jmp  <CcUnpinDataForThread+>": 1,
                "rep  movsl (%esi), %es:(%edi);popl %edi;popl %esi;retl $;nop": 1,
                "andw $, %ax;cmpw $, %ax;je  <IoCheckFunctionAccess+>;movl %ebx, %ecx;movl %edi, ": 1,
                "cmpw $, %ax;je  <IoCheckFunctionAccess+>;movl %ebx, %ecx;movl %edi, ;calll *": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll  <SeReleaseSecurityDescriptor+>;xorl %eax, %eax": 1,
                "calll - <ObDereferenceSecurityDescriptor>;xorl %eax, %eax;popl %ebp;retl $;addl $, %eax": 1,
                "popl %ebp;retl $;addl $, %eax;jmp - <SeDeleteAccessState+>;nop": 1,
                "movl (%ecx), %ebx;movl %ecx, -(%ebp);testb $, %bl;jmp  <ExAcquireRundownProtection+>;movl %ebx, -(%ebp)": 1,
                "testb $, %bl;jmp  <ExReleaseRundownProtection+>;movl %ebx, -(%ebp);jne  <IoCheckFunctionAccess+>;leal -(%ebx), %eax": 1,
                "movl %edx, %ebx;movl %edi, -(%ebp);movl (%edi), %esi;movl %esi, %eax;xorl %ebx, %eax": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;jne - <ExReleaseRundownProtection+>": 1,
                "cmpxchgl %edx, (%ecx);cmpl %esi, %eax;jne - <ExReleaseRundownProtection+>;popl %edi;popl %esi": 1,
                "testl %eax, %eax;jne  <IoCheckFunctionAccess+>;movl , %ecx;calll ;testl %eax, %eax": 2,
                "testl %eax, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>;cmpl $, (%eax);je  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;je - <RtlAddAtomToAtomTable+>;jmp  <IoCheckFunctionAccess+>": 1,
                "je  <NtQueryInformationThread+>;decl %eax;jne  <IoCheckFunctionAccess+>;cmpl $, %esi;jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl $, %esi;jne  <IoCheckFunctionAccess+>;pushl %edx;leal -(%ebp), %eax": 1,
                "pushl %eax;movl -(%ebp), %esi;pushl (%esi);calll - <_allmul>;movl %eax, -(%ebp)": 2,
                "pushl %eax;pushl (%esi);calll - <_allmul>;movl %eax, -(%ebp);movl %edx, -(%ebp)": 2,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);pushl %esi;calll - <KeReadStateTimer>;testb %al, %al": 1,
                "andl $, -(%ebp);movl %esi, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp);pushl $": 1,
                "decl %eax;decl %eax;jne  <IoCheckFunctionAccess+>;cmpl %ecx, %esi;jne  <IoCheckFunctionAccess+>": 1,
                "je - <NtQueryInformationThread+>;jmp  <IoCheckFunctionAccess+>;nop;nop;nop": 1,
                "pushl (%ebp);calll  <IoSetIoCompletion>;movl (%ebp), %ecx;movl %eax, %esi;calll - <ObfDereferenceObject>": 1,
                "retl $;movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %edi;movl %edi, -(%ebp)": 1,
                "movl (%ebp), %eax;cmpl %esi, %eax;jne  <IoCheckFunctionAccess+>;jmp - <RtlUpcaseUnicodeString+>;nop": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl $, -(%ebp);movl %ds:, %eax;movl %eax, %edi": 1,
                "pushl %eax;pushl (%ebp);calll - <KeInsertQueue>;movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "movl -(%ebp), %eax;pushl %esi;movb $, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%esi), %eax;subl $, %eax;movb $, (%eax);movl %ebx, (%eax);leal -(%ebp), %eax": 1,
                "movl %esi, %edx;calll - <IofCallDriver>;cmpl $, %eax;je  <RtlAreAnyAccessesGranted+>;movb $, %cl": 1,
                "testb $-, (%ebx);jne  <IoCreateFileSpecifyDeviceObjectHint+>;cmpb $, (%ebp);movl (%ebx), %esi;jne  <IoSetIoCompletion+>": 1,
                "jne  <IoSetIoCompletion+>;pushl %ebx;calll  <IoSetIoCompletion+>;negb %al;sbbb %al, %al": 1,
                "calll - <KeInitializeEvent+>;cmpl %edi, -(%ebp);popl %esi;je  <IoSetIoCompletion+>;cmpl %edi, -(%ebp)": 1,
                "cmpl %edi, -(%ebp);popl %esi;je  <IoSetIoCompletion+>;cmpl %edi, -(%ebp);je  <IoSetIoCompletion+>": 1,
                "cmpl %edi, -(%ebp);je  <IoSetIoCompletion+>;pushl %ebx;calll  <IoSetIoCompletion+>;negb %al": 1,
                "xorl %ebx, %ebx;cmpl $, (%ebp);jne  <IoSetIoCompletion+>;testb $, (%edi);jne  <RtlUnicodeStringToAnsiString+>": 1,
                "calll - <IoGetRelatedDeviceObject>;orb $, (%edi);cmpl %ebx, (%ebp);movl %eax, (%ebp);movl (%edi), %eax": 1,
                "subl $, %eax;movb $, (%esi);movl %ebx, (%esi);movl $, (%esi);movb $, %cl": 1,
                "movb $, %cl;calll *;movl (%ebx), %ecx;movl (%ebx), %edx;movl %edx, (%ecx)": 1,
                "andl $, -(%ebp);movb $, -(%ebp);movl %fs:, %eax;movl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %eax;andl $, (%eax);testl %edi, %edi": 1,
                "movl , %ecx;addl $, %ecx;pushl %ecx;pushl %eax;calll - <RtlMapGenericMask>": 1,
                "addl $, %ecx;pushl %ecx;pushl %eax;calll - <RtlMapGenericMask>;movl , %eax": 1,
                "pushl $;pushl $;calll - <ExAcquireResourceSharedLite>;testb $, (%esi);je  <IoSetShareAccess+>": 1,
                "calll - <ExAcquireResourceSharedLite>;testb $, (%esi);je  <IoSetShareAccess+>;movb $, -(%ebp);cmpb $, -(%ebp)": 1,
                "pushl %eax;pushl $;pushl $;pushl $;leal (%esi), %eax": 1,
                "calll - <ExReleaseResourceLite>;incl (%ebx);je  <IoSetShareAccess+>;cmpb $, -(%ebp);je  <IoSetIoCompletion+>": 1,
                "je  <IoSetIoCompletion+>;cmpb $, -(%ebp);jne  <IoSetIoCompletion+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);je  <IoSetIoCompletion+>;pushl %eax;calll - <IoGetAttachedDevice>": 1,
                "movw %cx, (%eax);movw (%edi), %cx;movw %cx, (%eax);leal -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %edx, (%esi);movl %edx, (%esi);movl %edx, (%esi);cmpb $, -(%ebp);je  <FsRtlIncrementCcFastReadWait+>": 1,
                "popl %ecx;xorl %eax, %eax;movl %ebx, %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %eax": 1,
                "testb $, (%edi);jne  <IoCreateFileSpecifyDeviceObjectHint+>;testb $, (%ebx);je  <IoSetIoCompletion+>;movb $, (%ebx)": 1,
                "calll - <RtlCopyUnicodeString>;cmpb $, (%edi);jne  <FsRtlIncrementCcFastReadWait+>;movb $, (%ebx);movb $, (%ebx)": 1,
                "addl $, %edx;movl (%edx), %ecx;movl %ecx, (%edi);movl %edx, (%edi);movl %edi, (%ecx)": 1,
                "movl (%edx), %ecx;movl %ecx, (%edi);movl %edx, (%edi);movl %edi, (%ecx);movl %edi, (%edx)": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "xorl %edi, %edi;movl -(%ebp), %eax;movl (%ebp), %esi;movl %eax, (%esi);cmpl %edi, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);je  <RtlRemoveUnicodePrefix+>;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "movl (%ebx), %eax;cmpl %edi, %eax;jne  <RtlAreAnyAccessesGranted+>;cmpw %di, (%ebx);je  <NtDeviceIoControlFile+>": 1,
                "jne  <IoSetIoCompletion+>;movl (%ebp), %ecx;testb $, (%ecx);je  <IoSetIoCompletion+>;pushl %ebx": 1,
                "movl %edi, (%ebp);jne  <IoCheckFunctionAccess+>;xorl %ebx, %ebx;incl %ebx;cmpl %ebx, (%ebp)": 1,
                "incl %ebx;cmpl %ebx, (%ebp);jne  <FsRtlNotifyFilterChangeDirectory+>;andl $, %edi;je  <IoSetIoCompletion+>": 1,
                "pushl %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <SePrivilegeCheck>;testb %al, %al": 2,
                "movl (%ebx), %ecx;shrl %edx;subw %ax, -(%ebp);leal (%ecx,%edx,), %ecx;jmp - <RtlEqualUnicodeString+>": 1,
                "adcb (%eax), %al;pushl %ss;addl %edx, (%edx);addb %ah, -(%eax);addl %ebx, (%edi)": 1,
                "cmpw (%esi), %cx;jne  <NtSetInformationProcess+>;pushl %ebx;pushl %edi;movzwl %cx, %edi": 1,
                "je  <CcSetLogHandleForFile+>;testl $, (%ebp);jne  <FsRtlRegisterUncProvider+>;testl $, (%ebp);jne  <FsRtlRegisterUncProvider+>": 1,
                "jne  <FsRtlRegisterUncProvider+>;testl $, (%ebp);jne  <FsRtlRegisterUncProvider+>;movl (%ebp), %edi;cmpl $, %edi": 1,
                "ja  <FsRtlRegisterUncProvider+>;movl (%ebp), %ecx;testl $, %ecx;jne  <FsRtlRegisterUncProvider+>;movl %ecx, %eax": 1,
                "testb $, %cl;jne  <NtOpenFile+>;testl %ecx, %esi;jne  <IoCheckFunctionAccess+>;testb $, %cl": 1,
                "cmpl %edx, %eax;jg  <FsRtlCurrentBatchOplock+>;jl  <IoCheckFunctionAccess+>;cmpl %edx, -(%ebp);jb  <IoCheckFunctionAccess+>": 1,
                "calll - <KeInitializeEvent+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl (%ebp)": 1,
                "pushl %edi;pushl -(%ebp);pushl %edi;pushl (%ebp);calll - <ObOpenObjectByName>": 1,
                "jl  <CcSetLogHandleForFile+>;popl %esi;popl %ebx;leave;retl $": 1,
                "incl %ecx;movl %ecx, (%edx);movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "orb $, (%edx);jmp - <NtCreateSection+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl %eax;pushl (%ebp);pushl %edi;calll - <IoCreateFile+>;movl %eax, -(%ebp)": 2,
                "popl %ebp;retl $;testb $, %cl;jne - <FsRtlCurrentBatchOplock+>;testl $, %ecx": 1,
                "orl %edx, %esi;movl %esi, (%eax);jmp - <RtlMapGenericMask+>;decl (%ecx);jmp  <IoRemoveShareAccess+>": 1,
                "movl $, -(%ebp);jmp - <SeDeleteAccessState+>;nop;nop;nop": 3,
                "retl $;decl (%ecx);jmp - <IoRemoveShareAccess+>;nop;nop": 1,
                "je  <IoSetShareAccess+>;movl (%ebp), %ecx;movl %ebx, (%ecx);movzbl (%eax), %edx;movl %edx, (%ecx)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <RtlUpperString+>;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "movl %ecx, %edx;andl $, %edx;je  <RtlUpperString+>;testb %ch, %ch;jns  <RtlUpperString+>": 1,
                "jns  <RtlUpperString+>;movl (%eax), %ecx;testl %ecx, %ecx;je  <RtlUpperString+>;addl %ecx, %eax": 1,
                "movl (%ebp), %ebx;testb $, (%esi);jne  <RtlUpperString+>;movb (%esi), %al;testb %al, %al": 1,
                "testb %al, %al;je  <RtlUpperString+>;movb $, %al;popl %edi;popl %esi": 1,
                "retl $;pushl $;pushl $;movl -(%ebp), %eax;pushl (%eax)": 1,
                "pushl $;pushl $;movl -(%ebp), %eax;pushl (%eax);calll - <IoSetShareAccess+>": 1,
                "je  <FsRtlGetFileSize+>;cmpl $, %esi;jae  <IoCheckFunctionAccess+>;movb (%esi), %al;testb %al, %al": 2,
                "pushl %ebx;leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl ": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl ;pushl %eax": 8,
                "pushl -(%ebp);pushl ;pushl %eax;pushl (%ebp);calll - <ObReferenceObjectByHandle>": 8,
                "movb $, -(%ebp);cmpl $, %esi;jne  <NtQueryVolumeInformationFile+>;testb $, (%ebx);jne  <NtQueryVolumeInformationFile+>": 1,
                "calll *(%ebx);pushal;addb %dl, -(%ebx);clc;movb $-, %cl": 1,
                "orl $-, -(%ebp);orw $, (%esi);movl (%ebp), %eax;movl %eax, (%edi);movl (%ebp), %eax": 2,
                "pushl -(%ebp);pushl %eax;calll  <NtDeleteAtom+>;jmp - <NtQueryVolumeInformationFile+>;movl (%ebp), %eax": 1,
                "cmpw (%ecx), %dx;jae  <IoCheckFunctionAccess+>;movl %edi, %edx;calll - <InterlockedPushEntrySList>;cmpl %ebx, %esi": 1,
                "calll - <ObfDereferenceObject>;jmp  <NtQueryVolumeInformationFile+>;nop;nop;nop": 1,
                "leal -(%esi), %ebx;andl $, %eax;orl %ebx, %eax;testb $, (%ebp);pushl %edi": 1,
                "movl (%ebx), %edi;movb $, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %edi, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl %edi, %esi;shrl $, %esi": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %edx, (%edi);jne  <NtQueryVolumeInformationFile+>;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;testl $, %eax;jne  <IoCheckFunctionAccess+>;testb $-, (%ecx)": 1,
                "jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);jne  <MmAllocateMappingAddress+>;leal (%edi), %eax;movl %eax, -(%ebp)": 1,
                "movl %esi, %eax;movl %eax, -(%ebp);imull $, %eax, %eax;movl (%edi), %ecx;leal (%eax,%ecx), %ecx": 1,
                "movl %edx, (%ecx);jne  <NtQueryVolumeInformationFile+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>": 1,
                "jl  <NtCreateEvent+>;movl -(%ebp), %ecx;movb (%ebp), %al;movb %al, (%ecx);movb $, (%ecx)": 1,
                "pushl %ebx;pushl %ebx;pushl (%ebp);pushl %ebx;pushl %ecx": 2,
                "movl %eax, %esi;movl %esi, -(%ebp);movl (%esi), %eax;movzbl (%esi), %ebx;leal (%ebx,%eax,), %ebx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ecx);pushl (%ecx)": 1,
                "movb (%edx,%ecx), %cl;movb %cl, -(%ebp);addl $, -(%ebp);movl %edi, -(%ebp);jmp - <CcMapData+>": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;movb $, %dl;testb %bl, %dl": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;movl (%ebp), %ecx;movl (%ebp), %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp);calll - <RtlInitializeBitMap+>": 1,
                "movzwl (%esi), %eax;addl $, %esi;testl %eax, %eax;jbe  <ObReferenceObjectByName+>;movl %eax, (%ebp)": 1,
                "testb %al, %al;jne  <IoCheckFunctionAccess+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;movl (%esi), %esi": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);xorl %edi, %edi;pushl (%ebp)": 2,
                "cmpl %edi, %esi;jl  <MmLockPagableSectionByHandle+>;movl (%ebp), %eax;cmpl %edi, %eax;jne  <ObOpenObjectByPointer+>": 1,
                "pushl %edi;pushl (%ebp);pushl %edi;pushl %eax;pushl %edi": 1,
                "cmpl $, %eax;jle  <PsLookupProcessByProcessId+>;subl $, %eax;jne  <NtQueryInformationToken+>;cmpl %edx, %edi": 1,
                "movl $, -(%ebp);movl %edi, (%esi);testl %ebx, %ebx;jne  <RtlNtStatusToDosError+>;orl $-, -(%ebp)": 1,
                "jne  <RtlNtStatusToDosError+>;orl $-, -(%ebp);xorl %eax, %eax;calll - <_CIsqrt+>;retl $": 1,
                "je  <NtSetInformationProcess+>;cmpl $, %eax;je  <PsSetProcessWinProcess+>;cmpl $, %eax;je  <PsSetProcessWinProcess+>": 1,
                "cmpl $, %eax;je  <PsSetProcessWinProcess+>;cmpl $, %eax;je  <PsSetProcessWinProcess+>;pushl $": 1,
                "movl (%ebp), %eax;pushl $;popl %ecx;orl $-, %edx;cmpl $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;decl %eax;jne  <IoOpenDeviceInterfaceRegistryKey+>;cmpl %ecx, %ebx;jne  <IoCheckFunctionAccess+>": 1,
                "movl (%edi), %ebx;movl %ebx, -(%ebp);orl $-, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "pushl %ecx;movl (%ebp), %ecx;movl (%ecx), %edx;pushl %ebx;xorl %ebx, %ebx": 1,
                "xorl %eax, %eax;movw (%edi), %ax;pushl %eax;calll - <RtlUpcaseUnicodeChar>;imull $, %ebx, %ebx": 1,
                "movzwl (%ebx), %eax;addl (%ebp), %eax;movl %eax, (%edi);movb $, %al;popl %edi": 1,
                "xorb %dl, %dl;jmp - <SeQuerySecurityDescriptorInfo+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "cmpl $, (%ebp);je - <ObOpenObjectByName+>;jmp - <ObOpenObjectByName+>;movl (%ebx), %ecx;movl (%ecx), %edi": 1,
                "movl (%ecx), %edx;movzwl (%ecx), %ecx;pushl %ebx;pushl %esi;movl (%eax), %esi": 1,
                "jb - <RtlCompareUnicodeString+>;popl %esi;popl %ebp;retl $;movw (%esi), %ax": 1,
                "ja  <IoCheckFunctionAccess+>;movzwl %dx, %edx;subl $, %edx;cmpw $, %cx;jae  <RtlUnicodeStringToAnsiString+>": 1,
                "movl , %eax;pushl %esi;movzwl %dx, %ecx;pushl %edi;movl %ecx, %esi": 2,
                "pushl %esi;movzwl %dx, %ecx;pushl %edi;movl %ecx, %esi;shrl $, %esi": 2,
                "movzwl %ax, %eax;popl %esi;jmp - <RtlUpcaseUnicodeChar+>;nop;nop": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;subl %eax, %ecx;leal (%eax), %esi;movl %ecx, (%ebp)": 1,
                "cmpl (%ebp), %eax;jb - <RtlCompareUnicodeString+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %ebx, (%eax)": 1,
                "cmpl %ebx, %esi;jl  <NtOpenProcessTokenEx+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "movl (%ebp), %eax;subl %esi, %eax;jne  <IoOpenDeviceRegistryKey+>;cmpl $, (%ebp);jb  <IoCheckFunctionAccess+>": 1,
                "movl (%ebp), %edi;pushl %edi;calll - <ProbeForWrite>;movl (%ebp), %ecx;cmpl %esi, %ecx": 1,
                "jae  <RtlCreateHeap+>;movl %eax, %edx;andl %ebx, %edx;cmpl %esi, %edx;je  <RtlCreateHeap+>": 1,
                "cmpl $-, (%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;andl $, -(%ebp);leal (%esi), %ecx;calll *;testb $, (%esi)": 1,
                "je  <IoGetDeviceProperty+>;andl %ebx, %edx;movl %edx, -(%ebp);movl %edx, -(%ebp);movl (%esi), %eax": 1,
                "shrl $, %ecx;andl $, %ecx;movl (,%ecx,), %ecx;movl %ecx, -(%ebp);testl %eax, %eax": 1,
                "cmpl $, (%ebp);je  <IoOpenDeviceRegistryKey+>;movl -(%ebp), %ebx;leal (%ebx), %ecx;calll - <ExAcquireFastMutexUnsafe>": 1,
                "leal (%ebx), %ecx;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%ebx);leal -(%ebp), %eax;pushl %eax": 1,
                "incl %esi;shll $, %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;subl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal (%ebx), %ecx;calll *;cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "pushl $;popl %ecx;leal -(%ebp), %esi;rep  movsl (%esi), %es:(%edi);movl $, -(%ebp)": 1,
                "jne  <NtOpenProcessTokenEx+>;orl $-, -(%ebp);xorl %eax, %eax;calll - <_CIsqrt+>;retl $": 1,
                "orl $-, -(%ebp);xorl %eax, %eax;calll - <_CIsqrt+>;retl $;cmpl %eax, %ecx": 1,
                "xorl %eax, %eax;calll - <_CIsqrt+>;retl $;cmpl %eax, %ecx;jb - <NtOpenProcessTokenEx+>": 1,
                "jmp - <NtOpenProcessTokenEx+>;nop;nop;nop;nop": 11,
                "subl $, %esp;movl (%ebp), %ecx;andl $, -(%ebp);pushl %ebx;pushl %esi": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi;movl %edi, %esi": 2,
                "movl $, -(%ebp);andl $, %ebx;movl %eax, (%ecx);andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "jne - <NtOpenProcessTokenEx+>;leal -(%ebx), %ecx;cmpl $, (%ecx);jne  <NtOpenProcessTokenEx+>;movl (%ebp), %esi": 1,
                "subl %edx, %ecx;addl %ebx, %ecx;cmpl (%esi), %ecx;ja  <IoCheckFunctionAccess+>;shrl $, %edi": 2,
                "testl %eax, %eax;movl %eax, (%ebp);je  <NtOpenProcessTokenEx+>;movl (%esi), %esi;testl $, %esi": 1,
                "movl (%esi), %eax;testl $, %eax;movl $, -(%ebp);jne  <NtDeleteAtom+>;pushl $": 1,
                "movl $, -(%ebp);jne  <NtDeleteAtom+>;pushl $;pushl (%ebp);leal -(%ebx), %eax": 1,
                "movl (%esi), %ecx;movl %eax, %edx;shll $, %edx;movl %ecx, (%ebp);subl %edx, %ecx": 1,
                "pushl (%ebp);pushl %eax;calll - <FsRtlInitializeFileLock+>;testl %eax, %eax;jne - <NtOpenProcessTokenEx+>": 1,
                "movb $, %cl;calll *;jmp  <RtlDeleteAtomFromAtomTable+>;nop;nop": 1,
                "jmp - <NtQueryInformationToken+>;movl (%esi), %edx;movl (%edx), %ebx;movzbl (%ebx), %ebx;leal (%eax,%ebx,), %eax": 1,
                "addl $, %edx;decl %ecx;je  <ObReferenceObjectByName+>;jmp - <NtQueryInformationToken+>;nop": 1,
                "pushl %eax;pushl -(%ebp);pushl ;pushl %esi;pushl (%ebp)": 12,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp - <NtQueryInformationToken+>;pushl $": 1,
                "movl %eax, -(%ebp);movl (%edx), %eax;movzbl (%eax), %eax;leal (%ebx,%eax,), %ebx;addl $, %edx": 1,
                "addl %ebx, %eax;movl -(%ebp), %ecx;leal (%eax,%ecx), %eax;movl $, -(%ebp);movl (%ebp), %ecx": 1,
                "jae  <NtQueryInformationToken+>;movl (%esi), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;jmp  <RtlDeleteAtomFromAtomTable+>": 1,
                "jmp  <RtlDeleteAtomFromAtomTable+>;movl $, -(%ebp);movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax;movl %eax, (%edi);movl %ebx, (%edi)": 1,
                "movl %eax, (%edi);movl (%esi), %eax;movl %eax, (%edi);pushl %esi;calll - <SeTokenIsRestricted>": 1,
                "addl %eax, %ecx;addl %ebx, %ecx;movl %ecx, (%edi);movl (%esi), %ecx;leal (%eax,%ecx,), %edx": 1,
                "movl %ecx, %eax;shll $, %eax;subl %eax, %ebx;pushl %ebx;pushl (%esi)": 1,
                "pushl %edx;calll - <RtlCompareUnicodeString+>;pushl (%edi);pushl (%esi);pushl (%esi)": 1,
                "incl %esi;cmpl $, %esi;jle  <NtQueryInformationToken+>;leal -(,%esi,), %eax;jmp  <NtQueryInformationToken+>": 1,
                "cmpl %eax, (%ebp);jae  <NtQueryInformationToken+>;movl $, %esi;movl -(%ebp), %ecx;jmp  <ProbeForRead+>": 1,
                "movl %eax, -(%ebp);movl %esi, (%edi);testl %esi, %esi;je  <NtQueryInformationToken+>;movl %edx, %ecx": 1,
                "movl %ecx, (%edi,%eax,);incl %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;andl %esi, %ecx": 1,
                "nop;movl -(%ebp), %eax;jmp - <NtQueryInformationToken+>;ldsl (%esi), %esi;addb %cl, (%edx)": 1,
                "jg  <NtQueryInformationToken+>;addb %bl, -(%esi);decl %ebx;addb %dh, %dl;movl %eax, ": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax;movl %eax, (%edi);orl $-, -(%ebp)": 1,
                "je  <PsSetProcessWindowStation+>;movl $, -(%ebp);movl %eax, (%esi);testl %ebx, %ebx;je - <NtQueryInformationProcess+>": 1,
                "jmp  <NtQueryInformationToken+>;movl $, (%eax);jmp  <RtlNtStatusToDosError+>;nop;nop": 1,
                "nop;movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <NtQueryInformationProcess+>": 1,
                "movl -(%ebp), %eax;jmp - <NtQueryInformationProcess+>;subl $, %eax;jne  <IoWMIQueryAllData+>;cmpl %edx, %edi": 1,
                "nop;nop;movl -(%ebp), %eax;jmp  <NtQueryInformationToken+>;jmp - <NtQueryInformationProcess+>": 1,
                "pushl $;pushl (%ebp);calll  <PoSetHiberRange+>;jmp - <NtQueryInformationProcess+>;pushl -(%ebp)": 1,
                "movl -(%ebp), %edi;orl $-, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp - <NtQueryInformationToken+>": 1,
                "calll - <ObfDereferenceObject>;jmp - <NtQueryInformationToken+>;movl $, -(%ebp);movl (%esi), %edi;movl %edi, -(%ebp)": 1,
                "movl (%ebp), %esi;leal (%esi), %ebx;xorl %edi, %edi;pushl %edi;leal -(%ebp), %eax": 1,
                "cmpl %edi, %edx;je  <NtQueryInformationToken+>;movl $, -(%ebp);movl %edi, (%esi);movl (%edx), %eax": 1,
                "leal (%eax,%eax,), %ecx;shll $, %ecx;leal (%ecx,%edx), %esi;pushl $;popl %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%ebx);movl %esi, (%ebx);leal (%ebx), %edi;pushl $": 1,
                "jne  <NtQueryInformationToken+>;movl $, %eax;jmp  <NtQueryInformationToken+>;decl %eax;movl %eax, -(%ebp)": 1,
                "jne - <NtQueryInformationToken+>;leal -(%ebp), %eax;pushl %eax;calll  <MmUnmapViewInSystemSpace+>;testl %eax, %eax": 1,
                "jne  <NtQueryInformationToken+>;testb $, %al;je  <ObCheckCreateObjectAccess+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);pushl -(%ebp);pushl %esi;calll  <NtQueryInformationToken+>;cmpl $, (%esi)": 1,
                "je  <NtQueryInformationToken+>;movl -(%ebp), %eax;incl (%eax);cmpl $, (%esi);je  <NtQueryInformationToken+>": 1,
                "calll - <ExReleaseFastMutexUnsafe>;movl (%ebx), %eax;movl %eax, -(%ebp);addl %edi, %eax;movl %eax, -(%ebp)": 1,
                "addl -(%ebp), %eax;movl %eax, -(%ebp);cmpl %ecx, %eax;jb  <ObCheckCreateObjectAccess+>;orl $-, -(%ebp)": 1,
                "andl $, %edx;shll $, %eax;addl (%ecx,%edx,), %eax;pushl %edi;leal (%esi), %edi": 1,
                "shll $, %eax;addl (%ecx,%edx,), %eax;pushl %edi;leal (%esi), %edi;movl (%edi), %ecx": 1,
                "movl %esi, (%edx);movl (%ecx), %edx;movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx)": 1,
                "addl $, -(%ebp);testl %eax, %eax;jne - <NtQueryInformationToken+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "addl $, %eax;movl (%esi), %ebx;xorl %edx, %edx;cmpw %dx, (%ebx);jbe  <NtQueryInformationToken+>": 1,
                "incl %eax;incl %edx;cmpw (%ebx), %dx;jb - <NtQueryInformationToken+>;movl (%esi), %eax": 1,
                "jmp - <NtQueryInformationToken+>;movl (%esi), %eax;addl $, %eax;jmp - <NtQueryInformationToken+>;movl %edi, %eax": 1,
                "addw %cx, -(%ebp);jmp - <NtQueryInformationToken+>;pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "pushl %edi;calll - <ExFreePoolWithTag>;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "movl (%edx,%esi,), %edx;andl $, %edi;shll $, %edi;andl $, %eax;addl (%edx,%edi), %eax": 1,
                "cmpl $, (%ecx);popl %edi;popl %esi;je  <IoCheckFunctionAccess+>;addl $, %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <NtQueryInformationToken+>;andw $, (%eax)": 1,
                "calll *(%eax);testl %eax, %eax;movl %eax, (%edi);je  <NtAdjustPrivilegesToken+>;movl (%esi), %eax": 1,
                "movl (%ebp), %edx;movl , %eax;cmpl %ebx, %edx;je  <NtQueryInformationToken+>;cmpl %eax, %edx": 1,
                "cmpl %ebx, %ecx;je  <NtQueryInformationToken+>;movl , %eax;cmpl %eax, %ecx;jae  <IoCheckFunctionAccess+>": 1,
                "pushl $;pushl $;calll - <_CIsqrt+>;xorl %esi, %esi;movb $, -(%ebp)": 1,
                "jne - <NtQueryInformationToken+>;jmp - <NtQueryInformationToken+>;movl %eax, %esi;calll - <ObfDereferenceObject>;movl %esi, %eax": 1,
                "movl %eax, %esi;calll - <ObfDereferenceObject>;movl %esi, %eax;jmp - <NtQueryInformationProcess+>;cmpl $, %edi": 1,
                "movl %eax, -(%ebp);movzwl %ax, %ecx;leal (%ecx), %eax;movl %eax, -(%ebp);pushl $": 1,
                "movl (%ebp), %eax;cmpl %edx, %eax;jb  <NtDeleteAtom+>;movl %ecx, (%edi);addl $-, %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %esi;addl $, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%eax), %esi;addl $, %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "jne  <RtlAnsiCharToUnicodeChar+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %esi;movl %esi, -(%ebp)": 2,
                "cmpl %edi, ;jne  <IoCheckFunctionAccess+>;movl $, -(%ebp);cmpb $, %bl;jne  <FsRtlOplockFsctrl+>": 1,
                "cmpl $, ;jne  <IoCheckFunctionAccess+>;cmpl $, -(%ebp);jl  <NtQueryInformationToken+>;pushl %edi": 1,
                "calll - <NtQueryInformationToken+>;movl %eax, -(%ebp);orl $-, -(%ebp);movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "nop;nop;xorl %esi, %esi;cmpl %esi, -(%ebp);jne  <RtlUnicodeStringToAnsiString+>": 1,
                "nop;xorl %esi, %esi;cmpl %esi, -(%ebp);jne  <RtlUnicodeStringToAnsiString+>;cmpl %esi, -(%ebp)": 1,
                "je  <NtQueryInformationToken+>;decl %eax;je  <NtQueryInformationToken+>;decl %eax;je  <NtQueryInformationToken+>": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;testb $, (%ebx);pushl %esi": 1,
                "cmpl $, %esi;movl %edx, (%ebp);jb  <FsRtlOplockFsctrl+>;movl (%ebx), %edi;movl (%ebp), %eax": 1,
                "jb  <FsRtlOplockFsctrl+>;movl (%ebx), %edi;movl (%ebp), %eax;movl %edi, (%eax);movl (%ebx), %edi": 1,
                "je  <IoCheckFunctionAccess+>;movzwl (%ebx), %ecx;pushl %ecx;addl $, %ebx;pushl %ebx": 1,
                "calll - <RtlCompareUnicodeString+>;movl (%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%eax), %edi;pushl %edi;pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "movl -(%ebp), %esi;calll - <RtlUpcaseUnicodeChar+>;movl %esi, %eax;calll - <_CIsqrt+>;retl $": 1,
                "calll *(%edi);testl %eax, %eax;je  <NtQueryInformationToken+>;pushl %ebx;pushl %eax": 1,
                "calll  <NtQueryInformationToken+>;movl %eax, %ebx;movl (%edi), %eax;testl %eax, %eax;jne  <NtQueryInformationToken+>": 1,
                "popl %ebx;popl %ebp;retl $;pushl (%esi);pushl %edi": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, -(%ebp);cmpl %esi, %eax;jl  <NtQueryInformationToken+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);jl  <NtQueryInformationToken+>;pushl %esi;pushl (%ebp)": 1,
                "calll - <NtQueryInformationToken+>;movl %eax, -(%ebp);movl %edi, %ecx;calll - <ObfDereferenceObject>;xorl %esi, %esi": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %eax;pushl (%ebp);xorl %eax, %eax": 1,
                "pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, -(%ebp)": 4,
                "calll - <_CIsqrt+>;movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);xorl %ecx, %ecx": 3,
                "xorl %ecx, %ecx;cmpb %cl, %al;je  <IoInitializeRemoveLockEx+>;movl %ecx, -(%ebp);movl (%ebp), %esi": 1,
                "je  <IoInitializeRemoveLockEx+>;movl %ecx, -(%ebp);movl (%ebp), %esi;movl , %eax;cmpl %eax, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ecx;pushl (%ebp);pushl %ecx": 3,
                "andl $, %eax;subl -(%ebp), %eax;leal (%ecx,%eax,), %eax;pushl %esi;pushl %eax": 1,
                "pushl -(%ebp);calll - <PsIsThreadTerminating+>;cmpl %edi, -(%ebp);je - <NtFreeVirtualMemory+>;jmp - <NtQueryInformationToken+>": 1,
                "movb $, -(%ebp);movb $, -(%ebp);calll - <ObOpenObjectByName+>;movl (%ebp), %edi;testb $, (%edi)": 1,
                "leal (%ecx,%eax,), %eax;pushl %eax;calll - <memmove>;movl -(%ebp), %eax;movl (%ebx), %ecx": 1,
                "addw $, %ax;addl $, %esp;addw %ax, (%ebx);movl -(%ebp), %ecx;movl -(%ebp), %esi": 1,
                "movl (%ebx), %ecx;shrl %eax;andw $, (%ecx,%eax,);cmpb $, -(%ebp);popl %ebx": 1,
                "jne  <IoCheckFunctionAccess+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;movl , %eax;movl %eax, -(%ebp)": 1,
                "subl %ecx, %edi;addl %edi, %edx;movl (%ebp), %ecx;andl $, (%ebp);movl %edx, (%ecx)": 1,
                "jl  <IoWMISetNotificationCallback+>;testb $, (%ebx);je  <NtDeleteAtom+>;movzwl (%ebx), %ecx;pushl %ecx": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %edi;movb $, -(%ebp);calll  <NtDuplicateObject+>": 1,
                "movb $, -(%ebp);calll  <NtDuplicateObject+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl %fs:, %eax": 1,
                "calll - <KeUnstackDetachProcess>;pushl %edi;calll  <NtDuplicateObject+>;movl %ebx, %esi;movl -(%ebp), %ecx": 1,
                "cmpl $, (%ebp);je - <SeTokenIsRestricted+>;jmp - <ObReferenceObjectByHandle+>;movl -(%ebp), %ebx;pushl %esi": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %ecx, -(%ebp);movl %eax, -(%ebp);jne  <MmUnmapViewInSessionSpace+>": 1,
                "movl (%esi), %edi;orl $, %edi;andl (%ebp), %edi;notl %ebx;testl %ebx, %edi": 1,
                "movl %eax, -(%ebp);cmpb $, -(%ebp);jne  <PsLookupProcessByProcessId+>;testb $, (%ebp);jne  <RtlAreAnyAccessesGranted+>": 1,
                "cmpl $, -(%ebp);jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;testl %eax, %eax;jne  <IoWMIRegistrationControl+>": 1,
                "testb $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %esi, %esi;jne  <IoWMIRegistrationControl+>;pushl (%ebp);calll  <NtDuplicateObject+>;pushl (%ebp)": 1,
                "leal (%esi), %ebx;pushl %edi;movl %ebx, %ecx;xorl %edi, %edi;calll - <ExAcquireRundownProtection>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll  <PsLookupThreadByThreadId+>;leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;cmpl %esi, %ecx;je  <FsRtlOplockFsctrl+>;testb $, %cl": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %eax, %ecx;jae  <IoCheckFunctionAccess+>;movl (%ecx), %eax;movl %eax, -(%ebp)": 2,
                "calll - <SeSinglePrivilegeCheck>;testb %al, %al;jne  <RtlNtStatusToDosError+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "pushl %eax;pushl -(%ebp);pushl -(%ebp);calll - <ObOpenObjectByPointer>;movl %eax, %edi": 2,
                "movl %edi, %ecx;calll - <ObReferenceObjectByPointer+>;testb %al, %al;je  <PsLookupProcessByProcessId+>;movl (%ebp), %eax": 1,
                "jne  <PsLookupProcessByProcessId+>;leal (%esi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "calll - <KeUnstackDetachProcess>;jmp - <NtQueryInformationToken+>;je - <NtQueryInformationToken+>;subl $, %eax;jne  <NtFindAtom+>": 1,
                "movl (%ebp), %edi;rep  movsl (%esi), %es:(%edi);testl %ebx, %ebx;je - <NtQueryInformationProcess+>;movl $, (%ebx)": 1,
                "pushl %ecx;movl %edx, %esi;movl %ecx, -(%ebp);xorl %edi, %edi;calll - <MmIsAddressValid>": 1,
                "calll - <ExReleaseFastMutexUnsafe>;xorl %ebx, %ebx;xorl %eax, %eax;pushl %eax;pushl %eax": 1,
                "testl $, %eax;jne  <IoCheckFunctionAccess+>;movl (%ebx), %ecx;testl %ecx, %ecx;js  <NtAdjustPrivilegesToken+>": 1,
                "js  <NtAdjustPrivilegesToken+>;movl (%ebp), %edx;testb $, %dh;jne  <IoOpenDeviceRegistryKey+>;movl (%ebx), %eax": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;ja  <PsLookupProcessByProcessId+>;cmpl $, (%eax);je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;movl %fs:, %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movb (%eax), %al": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);movb (%eax), %al;movb %al, -(%ebp);testb %al, %al": 1,
                "subl %ecx, %eax;cmpl %edx, %eax;jb  <IoCheckFunctionAccess+>;testl %edx, %edx;je  <IoCheckFunctionAccess+>": 1,
                "pushl %edi;pushl -(%ebp);pushl %ebx;pushl %esi;calll - <NtFreeVirtualMemory+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "jb  <IoCheckFunctionAccess+>;pushl $;pushl %eax;pushl (%ebp);calll - <ProbeForWrite>": 1,
                "pushl %eax;pushl (%ebp);calll - <ProbeForWrite>;movb -(%ebp), %dl;movl (%ebp), %eax": 1,
                "calll - <ExAllocatePoolWithQuotaTag>;movl %eax, -(%ebp);leal (%eax), %edx;movl %esi, %ecx;movl %edi, %esi": 1,
                "movl %eax, -(%ebp);leal (%eax), %edx;movl %esi, %ecx;movl %edi, %esi;movl %edx, %edi": 1,
                "rep  movsb (%esi), %es:(%edi);movl %eax, -(%ebp);movw %bx, (%eax);movw %bx, (%eax);leal (%eax), %ecx": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %edi;cmpl %esi, %edi;jl  <IoCheckFunctionAccess+>": 1,
                "testb $, (%ebx);je  <FsRtlRegisterUncProvider+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "pushl %eax;calll - <IoAllocateIrp>;movl %eax, %esi;movl %esi, -(%ebp);cmpl %edi, %esi": 1,
                "pushl %esi;pushl %edi;movl %eax, -(%ebp);movb $, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "movl %edi, -(%ebp);movl %edx, -(%ebp);je  <FsRtlIsNameInExpression+>;movl (%ebx), %ebx;movzwl %di, %eax": 1,
                "movl (%ebx), %ebx;movzwl %di, %eax;shrl %eax;cmpl $, %ecx;movzwl (%ebx,%eax,), %ebx": 1,
                "cmpw $, %bx;je  <RtlMultiByteToUnicodeSize+>;cmpw $, %bx;je  <FsRtlNotifyFilterChangeDirectory+>;cmpb $, -(%ebp)": 1,
                "cmpb $, -(%ebp);jne  <FsRtlIsNameInExpression+>;cmpw $, %bx;je  <FsRtlIsNameInExpression+>;cmpb $, (%ebp)": 1,
                "movw (%eax,%ecx,), %ax;addl $, -(%ebp);movw %ax, -(%ebp);xorl %ecx, %ecx;cmpl %ecx, -(%ebp)": 1,
                "je  <RtlCreateAtomTable+>;andw $, -(%ebp);andl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "andl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal (%edi,%edi), %eax;leal -(%ebp), %esi": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <FsRtlIsNameInExpression+>;pushl (%ebp);pushl %edi": 1,
                "cmpl %ebx, %eax;jl  <FsRtlIsNameInExpression+>;pushl (%ebp);pushl %edi;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <KeInitializeSemaphore>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "cmpb %bl, -(%ebp);je  <FsRtlIsNameInExpression+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $;movl (%ebp), %esi": 3,
                "movl (%ebp), %esi;jmp - <FsRtlIsNameInExpression+>;movl -(%ebp), %eax;movl %eax, (%esi);jmp - <FsRtlIsNameInExpression+>": 1,
                "jmp - <FsRtlIsNameInExpression+>;cmpb $, -(%ebp);jne - <FsRtlIsNameInExpression+>;cmpw $, -(%ebp);jne - <FsRtlIsNameInExpression+>": 1,
                "movzwl -(%ebp), %ebx;movl (%ebp), %eax;movl (%eax), %eax;shrl %ebx;cmpw $, (%eax,%ebx,)": 1,
                "movl (%ebp), %eax;movw -(%ebp), %bx;cmpw (%eax), %bx;jb - <FsRtlIsNameInExpression+>;jmp - <FsRtlIsNameInExpression+>": 1,
                "movl (%eax), %ecx;movb $, -(%ebp);testl %ecx, %ecx;jbe  <RtlGeneratedotName+>;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeQuerySystemTime>;movl -(%ebp), %eax;movl %eax, (%edi)": 3,
                "calll  <FsRtlInitializeOplock+>;jmp - <FsRtlIsNameInExpression+>;nop;nop;nop": 1,
                "jne  <FsRtlIsNameInExpression+>;cmpl $, %ecx;sbbb %cl, %cl;incb %cl;cmpb $, %cl": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <FsRtlIsNameInExpression+>;pushl -(%ebp);pushl %eax": 1,
                "je  <RtlAreAnyAccessesGranted+>;movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "cmpw $, -(%ebp);ja  <IoGetDeviceProperty+>;testb $, -(%ebp);jne  <IoGetDeviceProperty+>;cmpl $, %ebx": 1,
                "shrl %ecx;cmpw %si, -(%eax,%ecx,);je  <IoGetDeviceProperty+>;movl -(%ebp), %edi;movl (%edi), %eax": 1,
                "jl  <FsRtlIsNameInExpression+>;pushl %ebx;pushl (%ebp);pushl (%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%edi);calll - <FsRtlIsNameInExpression+>;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl (%ebp);pushl %eax;calll - <IoGetBaseFileSystemDeviceObject+>;movl %eax, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;testl %eax, %eax;je  <FsRtlIsNameInExpression+>": 1,
                "popl %ebx;jne  <FsRtlReleaseFile+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);testl %eax, %eax;jl  <NtQueryInformationFile+>;testb $, (%ecx)": 1,
                "je  <IoCreateFileSpecifyDeviceObjectHint+>;movl %eax, %edx;addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "jne  <FsRtlGetFileSize+>;movl %edx, %ecx;calll - <ObfReferenceObject>;movb $, %al;testb %al, %al": 1,
                "movl %eax, -(%ebp);movb $, -(%ebp);movl %eax, (%edi);movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx);movl -(%ebp), %ecx;xorl %eax, %eax": 2,
                "cmpl $, %esi;pushl %ebx;jne  <IoCreateStreamFileObjectLite+>;leal (%ecx), %edx;movl -(%ebp), %ecx": 1,
                "pushl %edi;movl %ds:, %eax;movl (%eax), %ecx;movw (%ecx), %di;incl (%ecx)": 1,
                "calll - <_CIsqrt+>;movl (%ebp), %ecx;movl %ecx, -(%ebp);movl %fs:, %eax;movl %eax, %ebx": 2,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;cmpl (%ebp), %ecx;jbe  <CcCopyRead+>;movl (%ebp), %ecx": 1,
                "movb $, (%ebx);movl %edi, (%ebx);pushl %edi;pushl -(%ebp);calll - <FsRtlUninitializeFileLock+>": 2,
                "movl %eax, (%ebp);cmpb $, (%ebp);je  <NtAdjustPrivilegesToken+>;cmpl %edi, %eax;jne  <NtAdjustPrivilegesToken+>": 1,
                "jne  <NtAdjustPrivilegesToken+>;pushl %edi;movl -(%ebp), %eax;movl -(%ebp), %edx;movb $, %cl": 1,
                "xorl %edx, %edx;addl (%ebx), %eax;adcl (%ebx), %edx;movl %eax, (%esi);movl %edx, (%esi)": 1,
                "movl %edi, (%eax);movl %ecx, (%eax);movb $, %al;calll - <_CIsqrt+>;retl $": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movb -(%ebp), %al;movb %al, (%esi);cmpb $, -(%ebp)": 4,
                "movb $, (%edi);movl -(%ebp), %ecx;movl %ecx, (%edi);movl (%ebp), %ecx;movl %ecx, (%esi)": 1,
                "je  <IoCreateFileSpecifyDeviceObjectHint+>;movl (%ebp), %eax;movl %eax, (%esi);movb $, %cl;calll *%ebx": 1,
                "movl %eax, (%esi);movb $, %cl;calll *%ebx;movb %al, %bl;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <CcCopyRead+>;cmpl %ebx, (%ecx);jne  <IoCheckFunctionAccess+>": 1,
                "cmpl %ebx, (%ecx);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "xorl %eax, %eax;movb $, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, (%edi)": 1,
                "calll - <ObfReferenceObject>;movb $, %cl;calll *;movl (%esi), %edx;leal (%esi), %ecx": 1,
                "jne  <RtlGetFirstRange+>;movl (%edi), %eax;movl (%edi), %edx;movl %eax, %ecx;shll $, %ecx": 1,
                "testl $, %ecx;movl %eax, -(%ebp);jne  <PsImpersonateClient+>;movl %edi, %ecx;calll - <NtSetEvent+>": 1,
                "leal (%esi), %ecx;movl %eax, (%ebp);calll - <ExAcquireFastMutexUnsafe>;pushl %edi;movb $-, (%esi)": 1,
                "popl %esi;popl %ebx;je  <RtlGetFirstRange+>;movl (%ebp), %eax;leave": 1,
                "movl (%edi), %eax;xorl %edx, %edx;addl (%esi), %eax;movb $, %cl;adcl (%esi), %edx": 1,
                "jne  <CcCopyRead+>;cmpl $, (%ebp);jne  <FsRtlNotifyVolumeEvent+>;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "pushl $;popl %edi;pushl ;pushl %edi;pushl $": 1,
                "movl (%ebp), %ecx;movl %edi, (%esi);movl (%ecx), %eax;movl (%ecx), %edx;movb $, %cl": 1,
                "xorl %edi, %eax;andl $, %eax;xorl %edi, %eax;movl %eax, (%esi);movl $, %eax": 1,
                "movl (%ebp), %eax;andl $, %eax;cmpb $, %al;je  <RtlSetGroupSecurityDescriptor+>;movl (%esi), %eax": 1,
                "cmpl %ecx, (%eax);jne  <CcCopyRead+>;movl -(%ebp), %eax;cmpl %ecx, (%eax);je  <NtMapViewOfSection+>": 1,
                "movl (%eax), %ecx;andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);jne  <ExUuidCreate+>;movl $, %eax;testl %eax, (%esi);jne  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %eax;pushl %ebx;movl (%eax), %ebx;pushl %edi": 1,
                "pushl %ebx;calll - <CcCopyRead+>;movl %eax, %esi;movl (%ebp), %ecx;calll *": 1,
                "testl $, (%ebp);jne  <IoCheckFunctionAccess+>;testb $, (%ebp);jne  <FsRtlDeleteKeyFromTunnelCache+>;andl $, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;testb $, (%ebp);jne  <FsRtlDeleteKeyFromTunnelCache+>;andl $, -(%ebp);movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;shrl %cl, %edx;cmpl %edx, %eax;ja  <IoCheckFunctionAccess+>;pushl $": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl $, (%ebp);jne  <NtMapViewOfSection+>;movl %edi, %esi;addl -(%ebp), %esi": 1,
                "movl %eax, (%ecx);orl $-, -(%ebp);jmp - <NtCreateSection+>;movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "je - <CcCopyRead+>;addl $, %esi;movl %esi, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "popl %ebp;retl $;pushl -(%ebp);pushl -(%ebp);calll - <PsChargeProcessPagedPoolQuota+>": 1,
                "pushl %ebx;calll - <IoGetRelatedDeviceObject>;movl %eax, %edi;movl (%edi), %eax;movl (%eax), %eax": 1,
                "cmpb $, -(%ebp);jne - <NtQueryInformationFile+>;jmp - <NtQueryInformationFile+>;movl (%ebp), %edi;jmp - <NtQueryVolumeInformationFile+>": 1,
                "orl $, (%ebx);jmp - <IoSetIoCompletion+>;notl %eax;andl %eax, (%esi);movl (%ebp), %eax": 1,
                "shrl $, %eax;xorl %edx, %edx;leal (%ecx,%eax,), %eax;movl %edi, %ecx;incl %edx": 1,
                "shll %cl, %edx;notl %edx;andl %edx, (%eax);incl %edi;cmpl %ebx, %edi": 1,
                "subl %esi, (%edi);jmp - <NtSetEvent+>;movl %ebx, %esi;subl %edi, %esi;incl %esi": 1,
                "jmp - <NtSetEvent+>;movl %ebx, %esi;subl %edi, %esi;incl %esi;jmp - <FsRtlGetFileSize+>": 1,
                "je  <FsRtlGetFileSize+>;orl $, %eax;testb $, %cl;jne  <ObFindHandleForObject+>;testb $, %cl": 1,
                "movl -(%ebp), %eax;movl %eax, (%edx);pushl -(%ebp);calll - <FsRtlGetFileSize+>;movl %eax, (%edx)": 1,
                "movzbl (%ecx), %edx;addl %edx, (%eax);movzbl (%ecx), %edx;addl %edx, (%eax);movzbl (%ecx), %edx": 3,
                "pushl (%ebp);pushl (%ebp);calll - <ProbeForWrite>;cmpl %esi, (%ebx);jne  <NtConnectPort+>": 1,
                "pushl (%ebp);calll - <ProbeForWrite>;cmpl %esi, (%ebx);jne  <NtConnectPort+>;movl (%ebp), %eax": 1,
                "calll - <ProbeForWrite>;cmpl %esi, (%ebx);jne  <NtConnectPort+>;movl (%ebp), %eax;cmpl %esi, %eax": 1,
                "xchgl %eax, (%ecx);testl %eax, %eax;jne  <RtlSetGroupSecurityDescriptor+>;movl %ebx, %ecx;calll - <ObfReferenceObject>": 1,
                "calll - <ObfReferenceObject>;movb $, %al;testb %al, %al;je  <IoCheckFunctionAccess+>;cmpl $, (%ebp)": 2,
                "jne  <NtAdjustPrivilegesToken+>;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, (%edi);orl $-, -(%ebp);cmpl %esi, (%ebp);jne  <IoCheckFunctionAccess+>;leal (%ebx), %eax": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);testl %esi, %esi;je  <IoCheckFunctionAccess+>;movl %ebx, (%esi)": 2,
                "movl %eax, (%esi);movl %edi, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 2,
                "subl $, %edi;pushl $;popl %edx;movl %edx, (%edi);movl %ebx, (%edi)": 1,
                "calll - <RtlCopySid+>;jmp - <NtReadFile+>;calll - <KeSaveFloatingPointState+>;jmp  <IoCheckFunctionAccess+>;movb $, -(%ebp)": 1,
                "jmp  <IoCheckFunctionAccess+>;movb $, -(%ebp);jmp - <FsRtlIncrementCcFastReadWait+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "cmpl $, (%eax);jbe - <IoSetIoCompletion+>;cmpl $, (%eax);je - <IoSetIoCompletion+>;decb (%esi)": 1,
                "movl (%edi), %ecx;movl (%eax), %eax;movl %eax, (%ecx);orl $-, -(%ebp);movl -(%ebp), %eax": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <IoSetIoCompletion+>;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 5,
                "leal (%edx), %ebx;movl %ebx, -(%ebp);movl , %eax;movl %eax, (%edx);movl $, (%edx)": 1,
                "movl %ebx, -(%ebp);movl , %eax;movl %eax, (%edx);movl $, (%edx);movl (%ebp), %edi": 1,
                "movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);testb %al, %al;je  <FsRtlIncrementCcFastReadWait+>": 1,
                "movl (%ebp), %ecx;testb $, %al;pushl %ebx;setne %bl;testb $, %al": 1,
                "testb $, %al;pushl %ebx;setne %bl;testb $, %al;setne %dl": 1,
                "movb %al, -(%ebp);movb %al, (%ecx);jne  <RtlUnicodeStringToCountedOemString+>;testb %bl, %bl;movl (%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <SePrivilegeCheck>;testb %al, %al;je - <IoSetIoCompletion+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movw (%eax), %cx;testw %cx, %cx;pushl %esi": 1,
                "movl (%ebp), %eax;movw (%eax), %cx;testw %cx, %cx;pushl %esi;je  <FsRtlDoesNameContainWildCards+>": 1,
                "je  <FsRtlDoesNameContainWildCards+>;movl (%eax), %eax;movzwl %cx, %ecx;shrl %ecx;leal -(%eax,%ecx,), %ecx": 1,
                "jmp - <FsRtlDoesNameContainWildCards+>;movl , %esi;movzwl %dx, %edx;movzbl (%edx,%esi), %edx;andl $, %edx": 1,
                "movl , %esi;movzwl %dx, %edx;movzbl (%edx,%esi), %edx;andl $, %edx;movl %edx, (%ebp)": 1,
                "movl %edx, (%ebp);je - <FsRtlDoesNameContainWildCards+>;movb $, %al;popl %esi;popl %ebp": 1,
                "popl %ebp;retl $;xorb %al, %al;jmp - <FsRtlDoesNameContainWildCards+>;addl $-, %eax": 1,
                "jmp - <FsRtlDoesNameContainWildCards+>;addl $-, %eax;cmpw %bx, %ax;movw %ax, (%edi);ja - <ObOpenObjectByName+>": 1,
                "xorl -(%ebp), %eax;testl $, %eax;jne  <CcFastCopyRead+>;movl (%ebp), %ecx;andl $, %ecx": 1,
                "testl $, %eax;jne  <CcFastCopyRead+>;movl (%ebp), %ecx;andl $, %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %esi;pushl -(%ebp);pushl -(%ebp);cmpl %edi, (%ebp);jne  <RtlQueryAtomInAtomTable+>": 1,
                "movl (%esi), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "addl %ebx, %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %edi, (%eax);movl %ebx, (%eax)": 1,
                "cmpl %ebx, %eax;jb  <PsGetContextThread+>;cmpl , %eax;ja  <PsGetContextThread+>;orl $-, -(%ebp)": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp);orl $-, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp);orl $-, -(%ebp);movl -(%ebp), %edi": 1,
                "movl %ecx, -(%ebp);orl $-, -(%ebp);movl -(%ebp), %edi;testb $, (%edi);jne  <PsGetContextThread+>": 1,
                "orl $-, -(%ebp);pushl (%ebp);calll - <KeInitializeEvent+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "orb %dl, (%eax);cmpb %al, (%eax);addb %al, (%eax);orb $, %al;addb %cl, (%eax)": 1,
                "movb %bl, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 3,
                "movl %eax, (%ecx);movl (%ecx), %eax;movl %eax, (%ecx);movl (%ebp), %edi;cmpl %esi, (%ebp)": 1,
                "movl (%ecx), %eax;movl %eax, (%ecx);movl (%ebp), %edi;cmpl %esi, (%ebp);je  <NtWriteFile+>": 1,
                "movl (%ebp), %ebx;cmpl %esi, %ebx;jne  <NtConnectPort+>;testb $, (%ecx);jne  <ObFindHandleForObject+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;andb $, %al;cmpb $, %al;je  <IoCheckFunctionAccess+>": 1,
                "testb $, %al;je  <FsRtlNotifyFilterChangeDirectory+>;leal (%edx), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "pushl %ecx;pushl (%ebp);pushl -(%ebp);xorl %edi, %edi;incl %edi": 1,
                "cmpl $, (%eax);jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;movl (%ebp), %edx;movl %ebx, (%edx)": 1,
                "pushl -(%ebp);calll - <ObReferenceObjectByHandle+>;incl (%esi);jne  <NtWriteFile+>;leal (%esi), %eax": 1,
                "movsbl (%eax), %eax;pushl %eax;calll - <IoAllocateIrp>;movl %eax, %ebx;movl %ebx, -(%ebp)": 5,
                "pushl %eax;calll - <IoAllocateIrp>;movl %eax, %ebx;movl %ebx, -(%ebp);cmpl %esi, %ebx": 1,
                "movl %esi, (%ebx);movb -(%ebp), %al;movb %al, (%ebx);movb $, (%ebx);movb $, (%ebx)": 1,
                "movb -(%ebp), %al;movb %al, (%ebx);movb $, (%ebx);movb $, (%ebx);movl %esi, (%ebx)": 1,
                "subl $, %edi;movl %edi, -(%ebp);movl $, (%edi);movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;testb $, %al;jne  <IoCheckFunctionAccess+>;movl %esi, (%ebx)": 1,
                "movl (%ecx), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);leal -(%ebp), %esi": 1,
                "je  <IoCreateStreamFileObjectLite+>;decl %eax;movl %eax, (%edi);movl (%ebp), %eax;movl (%eax), %eax": 1,
                "subl %edx, %ecx;movl -(%ebp), %eax;sbbl -(%ebp), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax": 2,
                "orl $-, -(%ebp);calll  <CcPinMappedData+>;movb -(%ebp), %al;calll - <_CIsqrt+>;retl $": 1,
                "nop;nop;nop;cmpb %bl, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "movl %ebx, -(%ebp);movl %fs:, %eax;movl %eax, %edi;movl (%ebp), %esi;cmpl (%esi), %edi": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);leal -(%ebp), %eax;cmpl %eax, %esi;jne  <CcPinRead+>": 1,
                "orl $-, -(%ebp);calll  <CcPinRead+>;movb -(%ebp), %al;calll - <_CIsqrt+>;retl $": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);jmp - <SeDeleteAccessState+>;testb $, %cl;jne  <CcPinRead+>": 1,
                "cmpb $, (%ebx);je  <IoCheckFunctionAccess+>;movzwl %ax, %eax;addl %eax, %esi;movl %esi, -(%ebp)": 1,
                "testl %eax, %eax;jne  <IoCheckFunctionAccess+>;movl (%ebx), %edi;addl $, %edi;andl $-, %edi": 1,
                "andl $-, %edi;movl %edi, -(%ebp);cmpl -(%ebp), %esi;ja  <ExUuidCreate+>;leal (%esi,%edi), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl $, (%ebx);jne  <CcPinRead+>;movb $, -(%ebp);movl $, -(%ebp)": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <NtAdjustPrivilegesToken+>;andl $, -(%ebp);movl (%ebp), %eax": 1,
                "subl %edi, %eax;je  <NtSetInformationThread+>;subl %edi, %eax;je  <NtSetInformationThread+>;subl $, %eax": 1,
                "cmpl %eax, %ecx;jg  <IoWMIQueryAllData+>;je  <RtlUnicodeStringToAnsiString+>;movl %ecx, %eax;subl %edi, %eax": 1,
                "decl %eax;jne  <PsSetProcessWindowStation+>;cmpl $, %ebx;jne  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "calll - <_CIsqrt+>;xorl %ebx, %ebx;movb %bl, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, %esi;je  <PsAssignImpersonationToken+>;movl -(%ebp), %ecx;cmpl %eax, (%ecx);jne  <IoCheckFunctionAccess+>": 1,
                "lock;andl %eax, (%ebx);movl (%edi), %edi;movl -(%ebp), %ebx;movl %ebx, (%ebp)": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %ecx;xorl %eax, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebx), %ecx;xorl %eax, %eax;cmpl %eax, (%ebp);pushl %esi": 1,
                "movb %al, -(%ebp);movb %al, -(%ebp);movl %ecx, (%ebp);je  <IoCheckFunctionAccess+>;leal (%ebx), %edi": 1,
                "cmpl $, -(%ebp);jl  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax), %edi;testl %edi, %edi": 1,
                "andl $, (%ebp);pushl $;popl %eax;lock;orl %eax, (%ebx)": 1,
                "movb %al, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %esi;movl %esi, (%ebp)": 1,
                "jne  <PsImpersonateClient+>;leal (%edi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;movl (%ebp), %ecx": 1,
                "pushl %ebx;pushl %edi;calll - <PsImpersonateClient+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl %edi, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movb $, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "calll - <RtlCreateSecurityDescriptor>;leal -(%ebp), %ebx;movw (%ebx), %ax;movb %al, %cl;shrb $, %al": 1,
                "leal (%esi,%eax,), %esi;movl -(%ebp), %eax;pushl %eax;movzbl (%eax), %eax;pushl %esi": 1,
                "movl (%ebx), %eax;movl $, %edx;andw %dx, %si;jne  <FsRtlNotifyCleanup+>;testl %eax, %eax": 1,
                "testl %eax, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>;testw %si, %si;movl (%ebx), %eax": 1,
                "testb $, %dl;jne  <IoCheckFunctionAccess+>;xorl %ecx, %ecx;testl %edi, %edi;jne  <FsRtlNotifyFilterChangeDirectory+>": 1,
                "pushl %esi;calll  <MmUnmapViewOfSection+>;movl %eax, %esi;testl %esi, %esi;jge  <IoCheckFunctionAccess+>": 1,
                "testl %esi, %esi;jne  <FsRtlNotifyFilterChangeDirectory+>;xorl %ecx, %ecx;leal -(%ebp), %esi;pushl %esi": 1,
                "pushl (%ebp);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl (%ebp)": 2,
                "andl $, %ebx;pushl %ebx;pushl (%ebp);pushl %eax;pushl %edx": 1,
                "jne  <MmUnmapViewOfSection+>;testb $, (%ebp);jne  <IoCheckFunctionAccess+>;movw (%edi), %ax;movb %al, %cl": 1,
                "leal (,%eax,), %eax;leal (%eax), %esi;andl %ebx, %esi;movl %eax, (%ebp);movl %esi, (%ebp)": 1,
                "xorl %ecx, %ecx;movl -(%ebp), %eax;andl $, %eax;movl %ecx, (%ebp);movl %eax, -(%ebp)": 1,
                "je  <NtQuerySecurityObject+>;movl -(%ebp), %eax;movzwl (%eax), %eax;addl $, %eax;andl %ebx, %eax": 1,
                "andl %ebx, %eax;movl %eax, (%ebp);addl %ecx, %eax;addl %esi, %eax;pushl $": 1,
                "leal (%eax,%edx), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>": 9,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %edx;pushl $;pushl %edx;calll - <RtlCreateSecurityDescriptor>": 1,
                "pushl %edx;calll - <RtlCreateSecurityDescriptor>;movw -(%ebp), %ax;orw %ax, (%edx);testl %edi, %edi": 1,
                "movl (%ebp), %ecx;cmpl %eax, %ecx;ja  <IoCheckFunctionAccess+>;movl -(%ebp), %esi;movl %ebx, %eax": 1,
                "cmpl %edi, -(%ebp);je  <MmUnmapViewOfSection+>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl %esi, %eax;popl %edi;popl %esi": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, (%edi);je  <FsRtlNotifyCleanup+>": 1,
                "jne  <FsRtlNotifyFilterChangeDirectory+>;pushl (%ebp);pushl (%ebp);pushl %edx;pushl (%ebp)": 1,
                "jne  <FsRtlNotifyCleanup+>;movl (%ebp), %ecx;cmpl %ebx, %ecx;jne  <FsRtlNotifyFilterChangeDirectory+>;movl -(%ebp), %ecx": 1,
                "jne  <RtlValidSid+>;movl (%ecx), %eax;movl (%eax), %edx;pushl %esi;movl (%eax), %esi": 1,
                "pushl %esi;movl (%eax), %esi;movl (%esi,%edx,), %edx;movl (%ebp), %esi;movl %edx, (%esi)": 1,
                "addl %ecx, %edx;testl %edx, %edx;je  <RtlLengthSecurityDescriptor+>;movzbl (%edx), %edx;leal (,%edx,), %edx": 1,
                "movl (%ebp), %eax;movb %dl, (%eax);xorl %edx, %edx;andw $-, %cx;movb %dl, (%eax)": 1,
                "je  <SeReleaseSecurityDescriptor+>;cmpb $, (%ebp);jne  <SeReleaseSecurityDescriptor+>;cmpl %eax, (%ebp);je  <SeReleaseSecurityDescriptor+>": 1,
                "movl %eax, (%ecx);jmp - <ObInsertObject+>;cmpb $, (%ebp);je - <SeReleaseSecurityDescriptor+>;jmp - <SeReleaseSecurityDescriptor+>": 1,
                "cmpl %ecx, %esi;je  <RtlDeleteAtomFromAtomTable+>;movl (%esi), %ecx;cmpl -(%ebp), %ecx;movl %esi, -(%ebp)": 1,
                "xaddl %eax, (%ecx);movl (%ebx), %esi;andl $-, %esi;leal -(%esi), %eax;andl $-, %eax": 1,
                "cmpl $, -(%ebp);movl %eax, (%ecx);jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;popl %edi": 1,
                "pushl %edi;pushl $;leal (%eax), %ecx;leal (%esi), %edi;pushl %edi": 1,
                "pushl (%eax);pushl (%ebp);calll - <SeAssignSecurity>;testl %eax, %eax;jl  <ObAssignSecurity+>": 1,
                "movl %esi, %eax;popl %edi;popl %esi;leave;retl $": 7,
                "xorl %eax, %eax;movb (%edi), %al;pushl $;pushl %eax;pushl (%edi)": 1,
                "calll - <SeReleaseSecurityDescriptor>;movl (%ebp), %eax;movl %ebx, (%edi);movl %ebx, (%eax);cmpl %ebx, (%ebp)": 1,
                "cmpb %bl, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %edi;cmpl %ebx, %edi;jne  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %edi;cmpl %ebx, %edi;jne  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %ebx, %esi;jne  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "cmpl %ebx, %esi;jne  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;leal -(%ebp), %eax": 1,
                "calll - <SeDeleteAccessState>;jmp - <NtQueryVolumeInformationFile+>;nop;nop;nop": 1,
                "cmpw $, (%ebx);pushl %esi;leal (%ebx), %esi;jbe  <ObAssignSecurity+>;pushl %edi": 1,
                "pushl %esi;leal (%ebx), %esi;jbe  <ObAssignSecurity+>;pushl %edi;cmpb $, (%esi)": 1,
                "cmpb $, (%esi);ja  <ObAssignSecurity+>;testb $, (%esi);jne  <ObAssignSecurity+>;pushl (%ebp)": 1,
                "leal (%ecx,%eax,), %edi;movl %fs:, %eax;decl (%eax);pushl $;movl $, %ebx": 2,
                "cmpl (%esi), %eax;jne  <ObAssignSecurity+>;movl (%ecx), %edx;cmpl (%esi), %edx;jne  <ObAssignSecurity+>": 1,
                "movl (%eax), %ecx;orl (%eax), %ecx;je  <ObAssignSecurity+>;pushl $;pushl %eax": 2,
                "jne  <IoCheckFunctionAccess+>;movl (%esi), %eax;testl %eax, %eax;je  <ObAssignSecurity+>;pushl %eax": 1,
                "calll - <ExFreePoolWithTag>;popl %esi;popl %ebp;retl $;leal (%eax), %ecx": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi;andl $, %eax": 1,
                "jne  <ObAssignSecurity+>;movl (%ebx), %edx;cmpl (%eax), %edx;jne  <ObAssignSecurity+>;incl (%eax)": 1,
                "retl $;movl (%eax), %eax;testl %eax, %eax;jne - <ObAssignSecurity+>;jmp  <IoCheckFunctionAccess+>": 1,
                "addl $, %eax;pushl %eax;pushl %ebx;pushl %eax;pushl %edi": 2,
                "cmpl %edi, %eax;movl %eax, (%ebp);jl  <IoCheckFunctionAccess+>;leal (%ebx), %eax;pushl %eax": 1,
                "movl %ecx, (%ebx);movl (%eax), %ecx;movl %ecx, %edx;shrl $, %ecx;leal (%eax), %esi": 1,
                "calll - <ObOpenObjectByPointer>;jmp  <SeCreateClientSecurity+>;movl %eax, %edi;movl %edi, (%ebp);jmp - <SeOpenObjectAuditAlarm+>": 1,
                "jne  <PsLookupProcessThreadByCid+>;leal (%esi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;testl %edi, %edi": 1,
                "je  <PsLookupProcessThreadByCid+>;cmpl (%eax), %edx;jne  <PsLookupProcessThreadByCid+>;movb $, %al;retl $": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;andb $, %cl;cmpb $, %cl;ja  <NtQuerySystemInformation+>": 1,
                "movl (%eax), %ecx;andb $, %cl;cmpb $, %cl;ja  <NtQuerySystemInformation+>;addl $, %eax": 1,
                "popl %ebp;retl $;movl %ebx, %ecx;calll *;movl %fs:, %eax": 2,
                "calll *;movl %fs:, %eax;movl %eax, ;jmp - <CcUnpinDataForThread+>;movl %eax, -(%ebp)": 1,
                "movl %fs:, %eax;movl %eax, ;jmp - <CcUnpinDataForThread+>;movl %eax, -(%ebp);movl %edi, (%esi)": 1,
                "movl %fs:, %eax;movl %eax, %ebx;movl %ebx, -(%ebp);testb $, (%ebx);jne  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;testw %ax, %ax;jne  <IoCheckFunctionAccess+>;orb $, -(%ebp);movb %al, -(%ebp)": 1,
                "movl , %eax;movl %eax, (%esi);incl ;je  <IoCheckFunctionAccess+>;andl $, (%esi)": 1,
                "xorl %esi, %esi;movl %esi, ;movl $, %ecx;calll *;cmpl %esi, -(%ebp)": 1,
                "testl %eax, %eax;je  <RtlMultiByteToUnicodeSize+>;movl %edi, -(%ebp);movl (%ebp), %eax;cmpl %edi, %eax": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;movl $, (%ebp);je  <PsLookupThreadByThreadId+>;pushl %edi": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%esi);pushl (%esi);pushl (%ebp)": 1,
                "pushl $;sete %al;pushl %eax;pushl (%ebp);pushl $": 1,
                "movw %di, (%esi);movl %edi, (%esi);je - <PsLookupThreadByThreadId+>;pushl %ebx;movl (%ebp), %ebx": 1,
                "cmpw $, (%ebx);je  <IoCheckFunctionAccess+>;movl %edi, (%ebp);cmpl %eax, %edi;jae - <PsLookupThreadByThreadId+>": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpl %esi, (%esi);jne  <FsRtlDeleteKeyFromTunnelCache+>": 1,
                "pushl $;calll - <_CIsqrt+>;movl (%ebp), %edi;pushl %edi;calll - <RtlUpcaseUnicodeString+>": 1,
                "testb $, (%eax);jne  <IoCheckFunctionAccess+>;decw (%eax);cmpw %bx, (%eax);je  <ObCheckCreateObjectAccess+>": 1,
                "pushl -(%ebp);pushl (%ebp);calll  <RtlDeleteAtomFromAtomTable+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "leal (%edx,%edx,), %eax;leal (,%eax,), %eax;movl %eax, (%ebp);movl %fs:, %eax;movl %eax, %esi": 1,
                "movl %eax, (%ecx);jmp - <ObLogSecurityDescriptor+>;movl $, %eax;jmp - <ObLogSecurityDescriptor+>;leal (%ebx), %esi": 1,
                "movl (%esi), %ecx;testl $, %ecx;jne  <MmLockPagableImageSection+>;orb $, (%ebx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl %edi, (%ebx);orl $, %esi;movl %esi, -(%ebp)": 1,
                "orl $, %esi;movl %esi, -(%ebp);cmpl $, (%ebp);jne  <RtlDeleteAtomFromAtomTable+>;movl -(%ebp), %ecx": 1,
                "movl (%esi), %ecx;calll - <ObfDereferenceObject>;andl $, (%esi);jmp - <ObReferenceObjectByHandle+>;incl (%eax)": 1,
                "jne  <IoOpenDeviceRegistryKey+>;cmpl %ebx, %esi;je  <RtlDeleteAtomFromAtomTable+>;movl %esi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl $, -(%ebp);orl $-, -(%ebp);cmpl %ebx, -(%ebp);jne - <RtlDeleteAtomFromAtomTable+>;cmpl %ebx, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);jne - <RtlDeleteAtomFromAtomTable+>;cmpl %ebx, -(%ebp);jne  <IoOpenDeviceRegistryKey+>;xorl %eax, %eax": 1,
                "movl %eax, (%ebp);jmp - <NtQueryInformationToken+>;movb $, -(%ebp);jmp - <ObReferenceObjectByHandle+>;movzwl %ax, %eax": 1,
                "movb $, -(%ebp);jmp - <ObReferenceObjectByHandle+>;movzwl %ax, %eax;jmp - <IoSetIoCompletion+>;movl %ecx, (%eax)": 1,
                "jmp - <ObReferenceObjectByHandle+>;movzwl %ax, %eax;jmp - <IoSetIoCompletion+>;movl %ecx, (%eax);movl %ebx, (%eax)": 1,
                "jmp - <CcSetLogHandleForFile+>;movl (%ebx), %eax;cmpl %edi, %eax;jge  <CcSetLogHandleForFile+>;movl %eax, %esi": 1,
                "testb $, %bl;jne - <IoCreateFile+>;cmpl , %ebx;jne - <IoCreateFile+>;jmp - <IoCreateFile+>": 1,
                "jne - <IoCreateFile+>;cmpl , %ebx;jne - <IoCreateFile+>;jmp - <IoCreateFile+>;movl (%ebx), %eax": 1,
                "je - <RtlAddAtomToAtomTable+>;jmp  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;andl $, %eax;orl (%ecx), %eax": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jmp - <ObOpenObjectByName+>;movl (%ebp), %eax": 1,
                "jmp - <ObOpenObjectByName+>;movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "jge  <NtQuerySystemInformation+>;jmp  <NtQuerySystemInformation+>;andl $, -(%ebp);jmp - <ObCreateObject+>;movl (%ebp), %eax": 1,
                "nop;nop;orl $, (%edx);nop;nop": 1,
                "movl %esp, %ebp;pushl $;pushl (%ebp);pushl $;calll - <ExAllocatePoolWithTag>": 5,
                "movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax;je  <RtlFreeUnicodeString+>;pushl %eax": 1,
                "popl %ebp;retl $;leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <RtlFreeUnicodeString+>": 1,
                "calll - <IoGetRelatedDeviceObject>;pushl (%ebp);movl %edi, (%esi);pushl (%ebp);pushl %esi": 1,
                "movl %edx, -(%ebp);movl (%eax), %eax;cmpl %ecx, %eax;je  <FsRtlRegisterUncProvider+>;movl %eax, -(%ebp)": 1,
                "je  <FsRtlRegisterUncProvider+>;movl %eax, -(%ebp);leal (%eax), %edx;pushl $;popl %ecx": 1,
                "jmp  <FsRtlRegisterUncProvider+>;testb $, (%eax);je - <IoSetIoCompletion+>;jmp  <IoCheckFunctionAccess+>;cmpb $, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %edi;pushl $;leal (%edi), %edx;popl %ecx": 1,
                "pushl %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 2,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ObCreateObject>;cmpl %ebx, %eax;movl (%ebp), %esi": 1,
                "xorl %eax, %eax;popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %edi": 1,
                "je  <IoCreateStreamFileObjectLite+>;pushl $;leal (%edi), %edx;popl %ecx;calll - <RtlCopyUnicodeString+>": 1,
                "pushl %esi;movl %ecx, %edx;movl %ds:, %eax;movl (%eax), %ecx;movw (%ecx), %si": 1,
                "movl %ecx, %edx;movl %ds:, %eax;movl (%eax), %ecx;movw (%ecx), %si;incl (%ecx)": 1,
                "jmp  <IoCheckFunctionAccess+>;cmpb %dl, (%ebp);jne - <IoSetShareAccess+>;testb %cl, %cl;jne - <IoSetShareAccess+>": 1,
                "cmpb %dl, (%ebp);jne - <IoSetShareAccess+>;testb %cl, %cl;jne - <IoSetShareAccess+>;cmpb %cl, -(%ebp)": 1,
                "movb $, %al;jmp - <CcPinMappedData+>;testb %al, %al;movb %bl, -(%ebp);jne - <CcPinMappedData+>": 1,
                "jne  <IoCheckFunctionAccess+>;movl %ebx, %eax;jmp - <ObReferenceObjectByHandle+>;movl $, %eax;cmpl %eax, %esi": 1,
                "testl %edx, %edx;jne - <NtQueryInformationFile+>;jmp  <IoCheckFunctionAccess+>;shrl $, %esi;shll $, %esi": 1,
                "shll $, %esi;jmp - <NtQueryInformationFile+>;nop;nop;nop": 1,
                "movl (%ebp), %edi;movl (%edi), %ecx;movl , %ebx;calll *%ebx;movb $, -(%ebp)": 1,
                "movl %esi, -(%ebp);pushl %esi;calll *(%esi);movl (%edi), %ecx;calll *%ebx": 1,
                "movl (%edx), %eax;cmpl (%eax), %edx;je  <FsRtlTeardownPerStreamContexts+>;movl %ecx, (%eax);movl (%ecx), %eax": 2,
                "jmp - <FsRtlTeardownPerStreamContexts+>;cmpl %esi, %eax;jne  <FsRtlTeardownPerStreamContexts+>;cmpl (%edx), %ecx;jne  <FsRtlTeardownPerStreamContexts+>": 1,
                "testl %esi, %esi;je  <FsRtlTeardownPerStreamContexts+>;movl %ecx, (%esi);movl (%eax), %esi;movl %esi, (%edx)": 2,
                "movl %esi, (%edx);movl (%eax), %esi;testl %esi, %esi;je  <FsRtlTeardownPerStreamContexts+>;movl %edx, (%esi)": 2,
                "cmpl (%edx), %ecx;jne - <FsRtlTeardownPerStreamContexts+>;cmpl %edi, %edx;je  <NtDeleteAtom+>;movl (%edx), %eax": 1,
                "cmpl %edi, %edx;je  <NtDeleteAtom+>;movl (%edx), %eax;movl %eax, (%ecx);movl (%edx), %eax": 1,
                "movl %ecx, (%eax);jmp - <FsRtlTeardownPerStreamContexts+>;movl (%edx), %esi;movl %esi, (%eax);movl (%edx), %esi": 1,
                "je  <FsRtlTeardownPerStreamContexts+>;movl %eax, (%esi);jmp - <FsRtlTeardownPerStreamContexts+>;movl %eax, (%esi);jmp - <FsRtlTeardownPerStreamContexts+>": 1,
                "cmpl %edi, %edx;je  <NtQuerySystemInformation+>;movl (%edx), %esi;movl %esi, (%eax);movl (%edx), %esi": 1,
                "movl (%edi), %eax;movl %eax, (%edi);movl , %eax;movl %eax, -(%ebp);leal -(%ebp), %ecx": 2,
                "cmpl %eax, %ecx;jne  <FsRtlTeardownPerStreamContexts+>;movzwl (%eax), %eax;movl %eax, -(%ebp);cmpw $, %ax": 1,
                "movl %eax, -(%ebp);cmpw $, %ax;jb  <FsRtlTeardownPerStreamContexts+>;leal (%edi), %eax;movl %eax, -(%ebp)": 1,
                "cmpw $, %ax;jb  <FsRtlTeardownPerStreamContexts+>;leal (%edi), %eax;movl %eax, -(%ebp);andl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);cmpb $, (%eax);jne  <FsRtlTeardownPerStreamContexts+>;movb (%eax), %al;cmpb $, %al": 1,
                "movl (%ebp), %ebx;cmpl %esi, %ebx;je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);je  <FsRtlNotifyCleanup+>": 1,
                "movl %ebx, -(%ebp);andl $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl , %eax;cmpl %eax, %ebx": 1,
                "jne  <SeCaptureSecurityDescriptor+>;cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;orl $-, -(%ebp);xorl %eax, %eax": 1,
                "movl (%ebx), %eax;andl $, %edx;jne  <FsRtlNotifyCleanup+>;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "andw $, %ax;movw %ax, -(%ebp);orl $-, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "testl %eax, %eax;jne  <SeCreateClientSecurity+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;addl %ecx, %eax": 1,
                "movl %ebx, %edi;andl $, %edi;je  <IoGetDeviceProperty+>;movl (%eax), %ecx;cmpl %edx, %ecx": 1,
                "je  <IoGetDeviceProperty+>;movl (%eax), %ecx;cmpl %edx, %ecx;jne  <IoGetDeviceProperty+>;testb $, %bl": 1,
                "leal (%esi,%ebx), %eax;cmpl %ebx, %eax;jb  <IoRegisterFileSystem+>;cmpl , %eax;ja  <IoRegisterFileSystem+>": 1,
                "movl -(%ebp), %ecx;movw %cx, (%eax);addl %ecx, %eax;movl %eax, -(%ebp);jmp - <SeCaptureSecurityDescriptor+>": 2,
                "movl %eax, -(%ebp);cmpl %esi, %eax;jl  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movb %al, (%ebx);jmp - <SeDeleteAccessState+>;testb $, (%ecx);je - <PAGE+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>": 3,
                "pushl %ebx;calll  <RtlAnsiCharToUnicodeChar+>;movl %eax, %esi;movl (%ebp), %ecx;calll - <ExReleaseRundownProtection>": 1,
                "popl %ebx;popl %ebp;retl $;movl (%eax), %ecx;calll - <ExReleaseResourceLite>": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne - <SeUnlockSubjectContext+>;leal (%eax), %ecx": 1,
                "jne - <SeUnlockSubjectContext+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je - <SeUnlockSubjectContext+>;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl (%eax);calll - <ExAcquireResourceSharedLite>;jmp - <SeLockSubjectContext+>;cmpl %ebx, %eax;je - <RtlUpcaseUnicodeString+>": 1,
                "pushl %edi;pushl $;popl %edi;movl %edi, -(%ebp);movzbl (%eax), %ecx": 1,
                "cmpw %bx, (%edx,%ecx,);setne %bl;incl %ebx;pushl %ebx;pushl %eax": 1,
                "movl -(%ebp), %esi;movl %esi, -(%ebp);movl %eax, -(%ebp);jmp - <NtQueryInformationToken+>;testb $, (%ebx)": 1,
                "calll - <NtQueryInformationToken+>;movl %eax, -(%ebp);jmp - <NtQueryInformationToken+>;nop;nop": 1,
                "movl $, %eax;movl %eax, %edi;cmpl %eax, (%ebp);ja  <RtlAnsiCharToUnicodeChar+>;movl (%ebp), %edi": 1,
                "ja  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);jb  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "cmpl %ecx, -(%ebp);jne  <RtlAnsiCharToUnicodeChar+>;cmpb $, (%ebp);je  <RtlAnsiCharToUnicodeChar+>;movl $, -(%ebp)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);leal -(%ebp), %eax": 4,
                "calll - <KeUnstackDetachProcess>;subl %ebx, -(%ebp);addl %ebx, -(%ebp);addl %ebx, -(%ebp);jmp - <RtlAnsiCharToUnicodeChar+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);xorl %eax, %eax;calll - <_CIsqrt+>;retl $": 2,
                "jne  <RtlAnsiCharToUnicodeChar+>;leal (%edi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "jmp - <PsReferenceImpersonationToken+>;andl $, (%ebp);jmp - <RtlAnsiCharToUnicodeChar+>;calll - <ObfDereferenceObject>;jmp - <SeReleaseSubjectContext+>": 1,
                "je  <SeImpersonateClientEx+>;movb (%ecx), %al;movb %al, (%ebp);movl (%ebp), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <SeImpersonateClientEx+>;movl %fs:, %eax;pushl (%ecx)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;leal (,%eax,), %eax;popl %ebp": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movb -(%ebp), %cl;movb %cl, (%eax);orl $-, -(%ebp)": 2,
                "movb %cl, (%eax);orl $-, -(%ebp);cmpb $, (%ebp);je  <SeCreateClientSecurity+>;pushl -(%ebp)": 2,
                "movl -(%ebp), %eax;subl %ebx, %eax;movl %eax, (%ebx);jmp - <SeCaptureSecurityDescriptor+>;movl $, -(%ebp)": 1,
                "cmpl , %eax;ja  <IoRegisterFileSystem+>;orl $-, -(%ebp);addl $, %esi;andl $-, %esi": 1,
                "jmp - <SeCaptureSecurityDescriptor+>;cmpb $, (%ebp);je  <RtlGeneratedotName+>;movl $, -(%ebp);incl %eax": 1,
                "pushl $;pushl $;calll - <_CIsqrt+>;xorl %ecx, %ecx;movl %ecx, -(%ebp)": 4,
                "pushl %eax;pushl -(%ebp);pushl ;pushl $;popl %ebx": 2,
                "jl  <SeCreateClientSecurity+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;calll - <SeCreateClientSecurity+>;cmpl %esi, %eax": 1,
                "pushl %eax;pushl %edi;pushl $;pushl -(%ebp);pushl (%ebp)": 2,
                "cmpl %edi, %ecx;je  <IoCheckFunctionAccess+>;movl (%eax), %ecx;cmpw %di, %dx;je  <SeCreateClientSecurity+>": 1,
                "cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %edi;movl %edi, -(%ebp);leal -(%ebp), %esi": 1,
                "pushl -(%ebp);pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;calll - <SeReleaseSubjectContext>;pushl $": 1,
                "pushl %eax;calll - <SeReleaseSubjectContext>;pushl $;pushl -(%ebp);pushl -(%ebp)": 3,
                "calll - <SeReleaseSubjectContext>;pushl $;pushl -(%ebp);pushl -(%ebp);calll - <SeReleaseSecurityDescriptor>": 3,
                "movl %eax, (%ecx);xorl %esi, %esi;movl %esi, -(%ebp);orl $-, -(%ebp);cmpb $, (%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <SeCreateClientSecurity+>;calll - <ObfDereferenceObject>": 1,
                "testl %ecx, %ecx;je  <SeCreateClientSecurity+>;calll - <ObfDereferenceObject>;cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "movl %esp, %ebp;xorl %eax, %eax;pushl %eax;pushl (%ebp);pushl (%ebp)": 2,
                "xorl %eax, %eax;pushl %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 2,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %eax;pushl %eax": 2,
                "pushl %ecx;pushl %eax;calll  <PsDisableImpersonation>;movb %al, -(%ebp);cmpb %bl, -(%ebp)": 1,
                "leal -(%ebp), %ecx;andl %ecx, %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "jl  <SeCreateClientSecurity+>;movl -(%ebp), %ecx;calll - <ObfReferenceObject>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpb %bl, -(%ebp);je  <SeCreateClientSecurity+>;movl %fs:, %eax": 1,
                "jl  <SeCreateClientSecurity+>;movl $, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %edi, %eax;jmp - <NtOpenThreadTokenEx+>;movl (%ebp), %ecx;cmpl %ebx, (%ecx);jle  <IoCheckFunctionAccess+>": 1,
                "xorl %eax, %eax;jmp - <RtlInitializeBitMap+>;pushl $;pushl -(%ebp);pushl %esi": 1,
                "pushl %edi;je  <RtlGeneratedotName+>;movl (%ebp), %edi;movl (%ebp), %ebx;pushl (%ebp)": 1,
                "pushl %esi;pushl %esi;pushl %ebx;calll  <SeCreateClientSecurity+>;movl , %eax": 1,
                "subl $, %esp;pushl %edi;pushl (%ebp);movl (%ebp), %edi;pushl %edi": 2,
                "pushl %esi;movb $, %cl;calll *;movb %al, (%ebp);leal -(%ebp), %eax": 1,
                "movb (%ebp), %cl;calll *;movl (%edi), %eax;testl %eax, %eax;popl %esi": 1,
                "movl %edi, %ecx;andl %eax, %ecx;cmpl %eax, %ecx;je  <NtConnectPort+>;pushl %edi": 1,
                "je  <SeCreateClientSecurity+>;pushl %edi;pushl %esi;calll *%eax;pushl %edi": 1,
                "pushl %edi;pushl %esi;calll - <RtlInitializeBitMap+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "je  <SeCreateClientSecurity+>;movl (%eax), %ecx;addl $, %ecx;cmpl %ecx, (%ecx);je  <ObCheckCreateObjectAccess+>": 1,
                "calll  <SeCreateClientSecurity+>;testb %al, %al;je  <SeCreateClientSecurity+>;movb $, (%esi);popl %edi": 1,
                "movl (%ebp), %esi;movl $, %eax;movl %esi, %ecx;andl %eax, %ecx;cmpl %eax, %ecx": 1,
                "leal (%ecx), %esi;andl $-, %esi;andl $-, %edx;subl $, %esi;testl %edx, %edx": 1,
                "nop;cmpb $, ;jne  <SeCreateClientSecurity+>;cmpb $, ;je  <SeCreateClientSecurity+>": 1,
                "testl %eax, %eax;je  <SeCreateClientSecurity+>;cmpl $, (%esi);je  <IoCheckFunctionAccess+>;addl $-, %eax": 1,
                "orl $-, -(%ebp);pushl %ebx;pushl %esi;pushl %edi;xorl %edi, %edi": 2,
                "movl %edi, -(%ebp);calll - <SeCreateClientSecurity+>;testb %al, %al;je  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "movl (%ebp), %edi;cmpl $, %edi;jbe  <ObCheckCreateObjectAccess+>;cmpl $, (%esi);jb  <SeCreateClientSecurity+>": 1,
                "cmpl %ecx, %edi;jae  <SeCreateClientSecurity+>;cmpl %edx, %edi;movl $, -(%ebp);ja  <SeCreateClientSecurity+>": 1,
                "jae  <SeCreateClientSecurity+>;cmpl %edx, %edi;movl $, -(%ebp);ja  <SeCreateClientSecurity+>;movl $, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %eax;testl %eax, %eax;je  <SeCreateClientSecurity+>;pushl %edi": 1,
                "pushl %esi;calll - <NtQueryInformationToken+>;cmpl %eax, (%ebp);ja  <RtlGetDefaultCodePage+>;movl %edi, -(%ebp)": 1,
                "andl $, -(%ebp);cmpl $, -(%ebp);jne  <ObCheckCreateObjectAccess+>;movl -(%ebp), %eax;popl %ebx": 1,
                "cmpl $, -(%ebp);movl %esi, -(%ebp);jae  <IoCheckFunctionAccess+>;cmpl %edi, %eax;ja  <IoCheckFunctionAccess+>": 1,
                "cmpl %edi, %eax;ja  <IoCheckFunctionAccess+>;cmpl $, %esi;ja  <IoCheckFunctionAccess+>;cmpl -(%ebp), %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;cmpl %edi, %ebx;je  <IoCheckFunctionAccess+>": 5,
                "cmpl %edi, %ebx;je  <IoCheckFunctionAccess+>;movl , %eax;movl %esi, %ecx;shll $, %ecx": 1,
                "je  <IoCheckFunctionAccess+>;movl , %eax;movl %esi, %ecx;shll $, %ecx;movl %ecx, (%ebp)": 1,
                "movl , %eax;movl %esi, %ecx;shll $, %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx": 1,
                "movl %esi, %ecx;shll $, %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movl %ecx, (%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx;movl (%ecx), %esi;movl %eax, -(%ebp)": 1,
                "jae  <SeCreateClientSecurity+>;movl (%ebp), %eax;addl $, %eax;andl $, %eax;movl %eax, (%ebp)": 1,
                "leal (%esi), %eax;leal (%ecx), %edx;cmpl %edx, %eax;movl %eax, (%ebp);jae  <SeCreateClientSecurity+>": 1,
                "movl %eax, (%ebp);jae  <SeCreateClientSecurity+>;movl %eax, %edx;subl %ecx, %edx;movl %edx, %ecx": 1,
                "subl %ecx, %edx;movl %edx, %ecx;shll $, %ecx;shrl $, %edx;andl $, %ecx": 2,
                "andl $, %ecx;movl %edx, (%ebx);movl -(%ebp), %edx;orl $, %ecx;movl %edx, (%ebx)": 1,
                "movl %ecx, (%ebx);cmpl $, (%eax);jne  <RtlCreateHeap+>;movl %edx, (%ebx);movl (%ebx), %ecx": 1,
                "movl %edx, (%ebx);movl (%ebx), %ecx;andl $, -(%ebp);andl $, -(%ebp);movl %ecx, (%eax)": 1,
                "shll $, %edx;orl %edx, %ecx;movl -(%ebp), %edx;subl -(%ebp), %edx;movl %ecx, (%eax)": 1,
                "subl %eax, %edx;movl %edx, %ecx;shll $, %ecx;shrl $, %edx;andl $, %ecx": 1,
                "movl (%edi), %eax;addl $, %esp;addl %eax, (%esi);popl %edi;popl %esi": 1,
                "movb (%esi), %al;addl $, %edi;pushl %eax;movl (%ebp), %eax;pushl $": 1,
                "popl %ecx;je  <IoCreateFileSpecifyDeviceObjectHint+>;pushl $;popl %ecx;movl (%ebp), %eax": 1,
                "movl $, (%ebx);jmp - <IoSetIoCompletion+>;pushl %ebx;calll  <IoCreateFileSpecifyDeviceObjectHint+>;jmp - <IoSetIoCompletion+>": 1,
                "pushl %esi;pushl (%ebp);calll - <FsRtlTruncateLargeMcb+>;movl %eax, %esi;testl %esi, %esi": 1,
                "popl %ebp;retl $;movl %ebx, (%esi);leal -(%ebp), %eax;movl %eax, (%esi)": 1,
                "movl %eax, (%eax);movb $, -(%ebp);jmp - <CcCopyRead+>;nop;nop": 1,
                "cmpl $, %ecx;jb  <IoRegisterFileSystem+>;addl %esi, %eax;cmpb $, (%eax);jne  <IoRegisterFileSystem+>": 2,
                "movl (%esi), %eax;testl %eax, %eax;je  <SeValidSecurityDescriptor+>;movl %eax, %ecx;leal (%ecx), %edx": 2,
                "movb (%esi), %al;testb $, %al;jne  <IoCheckFunctionAccess+>;movzwl (%esi), %ecx;movl (%ebp), %eax": 1,
                "movw %ax, (%edi,%ecx,);movl %edi, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "je  <IoCheckFunctionAccess+>;testb $, (%ebx);jne  <IoCheckFunctionAccess+>;movzwl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl %ebx;pushl %esi;calll - <SeValidSecurityDescriptor+>;movl %eax, -(%ebp)": 1,
                "jae  <RtlFreeHeap+>;xorl %ecx, %ecx;movb (%eax), %cl;andl $, %ecx;movb %cl, (%eax)": 1,
                "incl %edi;shll %cl, %edi;movl %edi, -(%ebp);leal (%edx,%esi), %ecx;xorl %edx, %edx": 1,
                "movl -(%ebp), %eax;addl %eax, (%esi);orl $-, -(%ebp);calll  <RtlFreeHeap+>;movb -(%ebp), %al": 1,
                "nop;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;retl;movzwl (%esi), %eax": 1,
                "andb $, %al;testb $, %al;movb %al, (%esi);jne  <ObReferenceObjectByName+>;movzwl (%esi), %ecx": 1,
                "jmp - <RtlFreeHeap+>;movl (%ecx), %ecx;jmp - <RtlFreeHeap+>;pushl %ecx;pushl %eax": 1,
                "movl %esi, %ebx;movl %ebx, -(%ebp);andl $, -(%ebp);movb $, -(%ebp);movl (%ebp), %eax": 1,
                "testl %eax, %eax;jne  <RtlAllocateHeap+>;movl (%edi), %eax;movl %eax, -(%ebp);addl $, %edi": 3,
                "movl (%esi), %edx;movl %edx, -(%ebp);movl (%edx), %edi;cmpl (%ecx), %edi;jne  <RtlAllocateHeap+>": 1,
                "movl %eax, -(%ebp);movb $, (%eax);movzwl (%eax), %edx;movl -(%ebp), %ecx;subl %ecx, %edx": 1,
                "movb (%eax), %al;movb %al, (%esi);movw %dx, (%esi);testb $, %cl;jne  <RtlRandom+>": 1,
                "movl %eax, -(%ebp);movb (%eax), %cl;testb $, %cl;je  <IoCheckFunctionAccess+>;movw %dx, (%eax)": 1,
                "movl %eax, -(%ebp);movb (%eax), %dl;movb %dl, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, (%edi);movl %edi, (%ecx);cmpl -(%ebp), %ecx;jne  <RtlAllocateHeap+>;movzwl (%eax), %ecx": 1,
                "movl %ecx, -(%ebp);movzbl (%ecx), %ecx;xorl %edi, %ecx;movl -(%ebp), %edi;movb %cl, (%edi)": 1,
                "movb %cl, (%eax);movb $, (%eax);jmp - <RtlAllocateHeap+>;movl %ecx, -(%ebp);movl %eax, %edx": 1,
                "testw $, %ax;je  <RtlAllocateHeap+>;andl $, %edx;je  <RtlAllocateHeap+>;movsbl (%edx), %eax": 1,
                "je  <RtlAllocateHeap+>;movsbl (%edx), %eax;leal (%ecx,%eax,), %eax;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "addl $, %eax;jmp - <RtlAllocateHeap+>;leal (%esi), %ecx;jmp - <RtlAllocateHeap+>;movzwl %dx, %eax": 1,
                "jne  <RtlAllocateHeap+>;movzwl (%esi), %ecx;movl %ecx, %eax;shrl $, %eax;movl %eax, -(%ebp)": 1,
                "movzbl (%eax), %eax;orl -(%ebp), %eax;movl -(%ebp), %ecx;movb %al, (%ecx);leal (%esi), %eax": 2,
                "jmp - <RtlAllocateHeap+>;xorl %ecx, %ecx;movw (%eax), %cx;incl %ecx;movw %cx, (%eax)": 1,
                "testl %ecx, %ecx;je  <NtAddAtom+>;leal (%ebx), %esi;andl $-, %esi;xorl %edi, %edi": 1,
                "je  <NtAddAtom+>;testb $, %cl;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;leal (%ebx,%ecx), %eax": 1,
                "leal (%ebx,%ecx), %eax;cmpl %ecx, %eax;jb  <NtAddAtom+>;cmpl , %eax;ja  <NtAddAtom+>": 1,
                "pushl $;calll - <_CIsqrt+>;xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi;andl $, %esi;movl %esi, -(%ebp)": 1,
                "cmpl %ebx, %ecx;jne  <NtDeviceIoControlFile+>;movl %ebx, (%ebp);orl $-, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %ebx, (%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jne - <RtlUpcaseUnicodeString+>;cmpb $, -(%ebp);je  <NtAddAtom+>;movl (%ebp), %eax;shrl $, %eax": 1,
                "cmpl %ebx, (%ebp);jne  <NtFsControlFile+>;testb $, (%esi);je  <NtAddAtom+>;leal (%esi), %eax": 1,
                "testb %al, %al;je  <IoWMIQueryAllData+>;movb $, -(%ebp);testb $, (%esi);jne  <ObReferenceObjectByName+>": 1,
                "xorl %eax, %eax;movb (%edi), %al;pushl %eax;calll - <IoAllocateIrp>;movl %eax, %ebx": 1,
                "movl %eax, %ebx;movl %ebx, -(%ebp);testl %ebx, %ebx;je  <IoCheckFunctionAccess+>;movl %esi, (%ebx)": 1,
                "je  <IoCheckFunctionAccess+>;movl %esi, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);xorl %eax, %eax": 1,
                "movl %ecx, (%ebx);movl (%ebp), %ecx;movl %ecx, (%ebx);movl (%ebp), %ecx;movl %ecx, (%ebx)": 2,
                "movl %edi, -(%ebp);xorl %ecx, %ecx;cmpb %cl, (%ebp);setne %cl;addl $, %ecx": 1,
                "movb (%ebp), %dl;negb %dl;sbbl %edx, %edx;andl $, %edx;movl %edx, -(%ebp)": 1,
                "movl $, -(%ebp);cmpl %eax, %ecx;jne  <NtFsControlFile+>;cmpl %eax, (%ebp);jne  <NtFsControlFile+>": 1,
                "cmpl %eax, (%ebp);jne  <NtFsControlFile+>;movl %eax, (%ebx);movl %eax, (%ebx);orl $-, -(%ebp)": 1,
                "andb $, %al;orb %al, (%edi);movb (%edi), %al;movb -(%ebp), %cl;andb $, %cl": 1,
                "cmpb $, (%ebp);sete %al;pushl %eax;pushl %esi;pushl %ebx": 1,
                "calll - <RtlCopySid+>;calll - <_CIsqrt+>;retl $;movb $, -(%ebp);jmp - <NtAddAtom+>": 1,
                "cmpl $, (%ebp);je  <NtFsControlFile+>;movl (%ebp), %ecx;movl (%ebp), %esi;movl %eax, %edi": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%edi);jmp - <NtAddAtom+>": 1,
                "cmpl %eax, %ecx;je - <NtAddAtom+>;jmp  <IoCheckFunctionAccess+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "je - <IoSetIoCompletion+>;movb $, -(%ebp);jmp - <IoSetIoCompletion+>;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;movl %edi, %ebx;pushl (%ebp);pushl (%ebp);pushl (%ebx)": 1,
                "movl %edx, -(%ebp);ja  <IoCheckFunctionAccess+>;andl $, -(%ebp);testl %esi, %esi;ja  <RtlFindUnicodePrefix+>": 1,
                "testl %esi, %esi;ja  <RtlFindUnicodePrefix+>;movl -(%ebp), %ebx;cmpl %esi, %ebx;jne  <NtFsControlFile+>": 1,
                "cmpw $, %ax;je  <RtlFindUnicodePrefix+>;cmpw %ax, (%ebp);jae  <RtlFindUnicodePrefix+>;xorl %eax, %eax": 1,
                "incl %eax;decl %ecx;je  <NtFsControlFile+>;movl (%edx), %edx;cmpw $, (%edx)": 1,
                "cmpw $, (%esi);jle  <RtlUpcaseUnicodeToOemN+>;leal (%esi), %ebx;testl %ebx, %ebx;je  <NtDeviceIoControlFile+>": 1,
                "calll - <ExAllocatePoolWithQuotaTag>;movl %eax, (%ebx);movl (%ebp), %ecx;movl (%ebp), %esi;movl %eax, %edi": 2,
                "movl %eax, (%ebx);movl (%ebp), %ecx;movl (%ebp), %esi;movl %eax, %edi;movl %ecx, %eax": 2,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl $, (%ebx);movl -(%ebp), %edi": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;xorl %eax, %eax;cmpl %eax, (%ebp);je - <NtAddAtom+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl %fs:, %eax;testb $, (%eax)": 1,
                "cmpxchgl %edx, (%ecx);xorl %ebx, %ebx;cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;popl %ebx;leave": 1,
                "cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne  <IoCheckFunctionAccess+>;decl (%edi);je  <ExRundownCompleted+>": 1,
                "pushl %edi;movl %fs:, %eax;movl , %ebx;movb $, %cl;movl %eax, %edi": 1,
                "movb %al, -(%ebp);cmpl %esi, %edi;jne  <IoGetDeviceProperty+>;movl (%ebp), %esi;andl $, -(%ebp)": 1,
                "movl , %edi;movl $, -(%ebp);addl $, %esi;cmpl %esi, (%esi);movb -(%ebp), %cl": 1,
                "testb $, %bl;jne  <ExWaitForRundownProtectionRelease+>;testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>;andl $, ": 1,
                "jne  <ExWaitForRundownProtectionRelease+>;testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>;andl $, ;movl %edi, %ecx": 1,
                "orl $-, -(%ebp);pushl %esi;pushl %edi;movl (%ebp), %edi;leal (%edi), %esi": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;leal (%edi), %esi;testb $, (%esi)": 1,
                "je  <IoCheckFunctionAccess+>;pushl %esi;calll  <ExWaitForRundownProtectionRelease+>;movl (%esi), %ebx;cmpl %edi, %ebx": 1,
                "pushl %esi;xorl %ebx, %ebx;pushl %edi;movl %ebx, -(%ebp);movl %fs:, %eax": 2,
                "movl %eax, (%eax);movl %ebx, (%eax);movw %bx, (%eax);movl %eax, %esi;cmpl %ebx, %esi": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;je  <IoCheckFunctionAccess+>;movl %ebx, (%esi);movl %ebx, (%esi)": 2,
                "pushl %edi;leal (%esi), %eax;pushl %eax;calll - <CcUnpinDataForThread+>;movl $, %ecx": 1,
                "jne  <LpcRequestPort+>;pushl $;popl %edx;movl %esi, %ecx;calll - <CcUnpinDataForThread+>": 1,
                "movl %edx, (%esi);movl %edx, (%ebx);leal (%edi), %eax;movl (%eax), %ecx;movl %ecx, (%esi)": 1,
                "movl %ecx, (%esi);movl %eax, (%esi);movl %esi, (%ecx);movl %esi, (%eax);decl (%ebx)": 1,
                "jne  <PsGetContextThread+>;incl (%ebx);jne  <LpcRequestPort+>;leal (%ebx), %eax;cmpl %eax, (%eax)": 1,
                "pushl %edi;pushl %esi;calll - <KeAttachProcess>;leal (%esi), %ebx;movl %ebx, %ecx": 1,
                "pushl %edi;movb $-, (%esi);calll - <PsReturnProcessNonPagedPoolQuota+>;pushl (%ebp);movl (%ebp), %eax": 1,
                "movl %ebx, -(%ebp);testl %ebx, %ebx;je  <LpcRequestPort+>;testb $, %bl;jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;leal (%ebx), %eax;cmpl %ebx, %eax;jb  <RtlxUnicodeStringToOemSize+>;cmpl , %eax": 1,
                "cmpl , %eax;ja  <RtlxUnicodeStringToOemSize+>;movl (%ebx), %eax;cmpl (%esi), %eax;je  <IoCheckFunctionAccess+>": 1,
                "je  <LpcRequestPort+>;cmpl $-, (%ebp);je  <LpcRequestPort+>;movb (%esi), %al;pushl $": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;pushl %edi;pushl %esi": 1,
                "sbbl %eax, %eax;andl $, %eax;addl $, %eax;testb %bl, %bl;movl %eax, %esi": 1,
                "testb $, %bl;movl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;leal -(%ebx), %eax;movl %eax, (%ebp)": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne  <ObSetHandleAttributes+>": 1,
                "cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;movb %bl, %al;popl %ebx;popl %edi": 1,
                "movl %eax, %esi;xorl %ebx, %ebx;cmpb %bl, (%esi);je  <IoCheckFunctionAccess+>;cmpl %ebx, ": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);cmpb %bl, (%esi);jne  <PsSetThreadWinThread+>;xorl %eax, %eax": 1,
                "pushl %ebx;pushl %edi;calll - <ObReferenceObjectByPointer+>;movl , %eax;cmpl %ebx, %eax": 1,
                "calll - <_CIsqrt+>;xorl %eax, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpl $, (%ebp);setne %al;decl %eax;andl $-, %eax;addl $, %eax": 1,
                "pushl $;popl %eax;testl %esi, %esi;je  <NtQuerySystemInformation+>;andl $, (%esi)": 1,
                "jl  <NtQuerySystemInformation+>;testl %esi, %esi;jne  <RtlSetGroupSecurityDescriptor+>;orl $-, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl %ebx;calll  <RtlCompressBuffer+>;jmp  <ObReferenceObjectByName+>;nop;nop": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jge  <ObReferenceObjectByName+>;jmp - <NtQuerySystemInformation+>;jmp  <ObReferenceObjectByName+>": 1,
                "pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;pushl %ebx;pushl %eax": 1,
                "jmp  <SeTokenIsWriteRestricted+>;jmp  <ObReferenceObjectByName+>;pushl $;popl %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <RtlRemoveUnicodePrefix+>;movb $, (%eax);movb $, %cl": 1,
                "calll - <ExInterlockedExtendZone+>;jmp  <ObReferenceObjectByName+>;cmpl $, %edi;jb - <NtQuerySystemInformation+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl %edi;pushl %ebx;pushl $;jmp  <NtQuerySystemInformation+>": 1,
                "pushl %ebx;calll  <ExReleaseRundownProtectionEx+>;jmp  <ObReferenceObjectByName+>;cmpl $, %edi;jb - <NtQuerySystemInformation+>": 2,
                "pushl $;popl %eax;cmpl %eax, %edi;jb  <NtQuerySystemInformation+>;movl %eax, -(%ebp)": 1,
                "jmp  <SeTokenIsWriteRestricted+>;movl %ebx, -(%ebp);movb , %cl;movb %cl, (%ebx);movb , %cl": 1,
                "movb , %cl;movb %cl, (%ebx);jmp  <RtlSetGroupSecurityDescriptor+>;pushl $;popl %edx": 1,
                "movb %cl, (%ebx);jmp  <RtlSetGroupSecurityDescriptor+>;pushl $;popl %edx;cmpl %edx, %edi": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movsbl , %ecx;cmpl %ecx, -(%ebp);jae  <NtQuerySystemInformation+>": 1,
                "movl %ecx, -(%ebp);testl %ecx, %ecx;je  <NtQuerySystemInformation+>;addl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl %edi;pushl %ebx;calll  <MmAddVerifierThunks+>;jmp  <ObReferenceObjectByName+>": 1,
                "pushl %edi;pushl %ebx;calll  <ExReleaseRundownProtectionEx+>;jmp  <ObReferenceObjectByName+>;leal -(%ebp), %eax": 1,
                "pushl %ebx;calll  <ExReleaseRundownProtectionEx+>;jmp  <ObReferenceObjectByName+>;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %esi, %esi;je  <NtQuerySystemInformation+>;movl %eax, (%esi);cmpl %eax, %edi;jb - <NtQuerySystemInformation+>": 1,
                "cmpl %eax, %edi;jb - <NtQuerySystemInformation+>;movl , %ecx;jmp  <RtlSetGroupSecurityDescriptor+>;jmp  <ObReferenceObjectByName+>": 1,
                "decl %esp;decl %edx;addb %bh, %dh;decl %esp;decl %edx": 1,
                "addb %al, (%edi,%ecx,);addb %ah, (%eax);decl %edx;addb %dh, (%ebx);decl %edx": 1,
                "addb %al, (%ecx);decl %ebp;decl %edx;addb %cl, (%esi);orl (%eax), %edx": 1,
                "addb %ah, (%ebx);decl %ebp;decl %edx;addb %bl, %dl;pushl %ecx": 1,
                "addb %bh, (%esi);decl %edx;addb %bl, %ch;decl %esp;decl %edx": 1,
                "xorl %edx, %edx;movl %edx, -(%ebp);xorl %esi, %esi;movl %esi, -(%ebp);xorl %edi, %edi": 1,
                "movl %edi, -(%ebp);xorl %ecx, %ecx;movl %ecx, -(%ebp);andl %ecx, -(%ebp);movsbl , %eax": 1,
                "cmpl %eax, -(%ebp);jae  <NtQuerySystemInformation+>;movl -(%ebp), %eax;movl (,%eax,), %eax;movl %eax, -(%ebp)": 1,
                "addl (%eax), %edx;movl %edx, -(%ebp);addl (%eax), %esi;movl %esi, -(%ebp);addl (%eax), %edi": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl , %eax;movl %eax, -(%ebp);movl , %eax": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl $": 4,
                "rep  stosl %eax, %es:(%edi);movw $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);xorl %edi, %edi": 1,
                "movl (%ebp), %ecx;cmpl %eax, %ecx;ja  <NtQuerySystemInformation+>;movl %ecx, %eax;leal -(%ebp), %ebx": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl -(%ebp), %eax;cmpl %edi, %eax;jbe  <NtQuerySystemInformation+>": 1,
                "pushl %eax;pushl (%ebp);calll - <KeStackAttachProcess>;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "jmp  <IoCheckFunctionAccess+>;cmpl %edx, %edi;jne - <NtQueryInformationToken+>;pushl $;leal -(%ebp), %eax": 1,
                "testl %eax, %eax;jl - <NtQueryInformationProcess+>;movl -(%ebp), %edi;addl $, %edi;movl %edi, %ecx": 1,
                "leal (%edi), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx)": 1,
                "xaddl %eax, (%ecx);addl %edx, %eax;jmp - <NtClose+>;movl $, %eax;cmpl %eax, %edi": 1,
                "movl %esi, %ecx;calll - <InterlockedPopEntrySList>;movl %eax, %edi;testl %edi, %edi;jne - <ObCreateObject+>": 1,
                "pushl (%esi);calll *(%esi);movl %eax, %edi;testl %edi, %edi;jne - <ObCreateObject+>": 1,
                "incl (%ecx);cmpw (%ecx), %ax;jb - <ObOpenObjectByName+>;pushl (%ebp);incl (%ecx)": 1,
                "movl %esi, %edx;andl $, %edx;movl %edx, %eax;negl %eax;sbbl %eax, %eax": 1,
                "movl -(%ebp), %edx;calll - <PsLookupProcessThreadByCid+>;testb %al, %al;je  <IoCheckFunctionAccess+>;xorl %esi, %esi": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;xorl %esi, %esi;incl %esi;movl %esi, -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <PsLookupProcessThreadByCid+>;movl -(%ebp), %ecx;calll - <ObfReferenceObject>": 2,
                "testb $, %al;je  <NtQuerySystemInformation+>;leal (%edx), %ecx;movl (%ecx), %edi;cmpl -(%ebp), %edi": 1,
                "cmpl %ecx, %eax;jne  <IoCheckFunctionAccess+>;movb $, (%esi);movl %ebx, %esi;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "jg  <IoCheckFunctionAccess+>;movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx;jae  <IoCheckFunctionAccess+>": 1,
                "pushl ;pushl $;popl %edi;pushl %edi;pushl (%ebp)": 1,
                "pushl %ecx;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %esi": 1,
                "movl %eax, %edi;movl %esi, %ecx;calll - <ObfDereferenceObject>;cmpb %bl, -(%ebp);je  <NtDuplicateToken+>": 1,
                "je  <NtDuplicateToken+>;leal -(%ebp), %eax;pushl %eax;calll - <NtQuerySystemInformation+>;cmpl %ebx, %edi": 1,
                "movl (%ebp), %eax;andl $, %eax;negl %eax;sbbl %eax, %eax;andl $, %eax": 1,
                "popl %ebp;retl $;jmpl *(,%edi,);jmp - <RtlUnicodeToMultiByteN+>;testl %esi, %esi": 1,
                "movw (%edx,%ecx,), %cx;addl $, (%ebp);movw %cx, %dx;shrw $, %dx;testb %dl, %dl": 1,
                "decl %edx;addb %bh, (%eax);bound (%edx), %ecx;bound %cs:(%edx), %ecx;andb $, %al": 1,
                "xorl %ebx, %ebx;cmpb %bl, ;pushl %edi;movl (%ebp), %edi;movl %ebx, -(%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;movl %ebx, -(%ebp);jne  <IoCheckFunctionAccess+>;movzwl (%edi), %eax": 1,
                "cmpl $, (%ebp);jne - <NtFreeVirtualMemory+>;movl -(%ebp), %edi;testl %edi, %edi;je - <NtFreeVirtualMemory+>": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;movl (%ecx), %eax;leal (%eax,%edi), %edx": 1,
                "movl (%eax), %eax;leal (%esi), %ecx;cmpl (%ecx), %eax;jbe - <NtFreeVirtualMemory+>;movl %eax, (%ecx)": 1,
                "movl -(%ebp), %eax;movl %eax, %ecx;shll $, %ecx;xorl (%edi), %ecx;andl $, %ecx": 1,
                "je  <PsSetProcessWinProcess+>;cmpl $, (%ebp);jb  <IoCheckFunctionAccess+>;pushl $;leal -(%ebp), %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl (%eax), %edx;pushl $;popl %ecx;movl (%edx), %esi": 1,
                "movl %esp, %ebp;subl $, %esp;movl %fs:, %eax;movl (%eax), %ecx;movl %fs:, %eax": 3,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;testl $, %eax;leal (%esi), %ecx": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%esi), %eax;movl (%ebp), %esi;cmpl $, (%esi)": 1,
                "leal -(%edi,%eax), %ecx;orl $, %ecx;cmpl $, %eax;movl %eax, -(%ebp);movl %ecx, (%ebp)": 1,
                "ja  <RtlUnicodeStringToAnsiString+>;movl %edx, %esi;subl %eax, %esi;subl $, %esi;cmpl %edi, %esi": 1,
                "calll - <FsRtlRemoveLargeMcbEntry+>;testl %eax, %eax;jne  <RtlUnicodeStringToAnsiString+>;pushl ;pushl $": 1,
                "xorl %eax, %eax;cmpl $, (%ebp);movl (%ebp), %ecx;sete %al;shll $, %eax": 1,
                "andl $, %eax;xorl %eax, (%esi);movl %edi, %ecx;movl $, (%esi);calll - <ExAcquireFastMutexUnsafe>": 1,
                "movl %edi, %ecx;movl $, (%esi);calll - <ExAcquireFastMutexUnsafe>;pushl %esi;movb $-, (%ebx)": 1,
                "movl (%ecx), %eax;movl (%eax), %eax;cmpb %dl, (%eax);je  <RtlUnicodeStringToAnsiString+>;movw (%eax), %ax": 1,
                "cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;cmpl $, (%ebp);je  <FsRtlDeleteKeyFromTunnelCache+>;movl (%esi), %eax": 1,
                "calll - <RtlUnicodeStringToAnsiString+>;jmp - <MmMapViewOfSection+>;cmpl -(%ebp), %edi;jne - <NtMapViewOfSection+>;cmpl $, %esi": 1,
                "pushl -(%ebp);pushl %ebx;calll - <RtlUnicodeStringToAnsiString+>;jmp - <NtMapViewOfSection+>;cmpl $, (%ebp)": 1,
                "jne - <NtMapViewOfSection+>;movl (%ebx), %eax;movl (%eax), %eax;testb $, (%eax);je - <NtMapViewOfSection+>": 1,
                "testb $, (%ebx);jne  <RtlInitializeRangeList+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "movl %eax, (%ebp);jmp - <RtlUnicodeStringToAnsiString+>;movl , %edx;movl (%ebp), %esi;jmp - <RtlUnicodeStringToAnsiString+>": 1,
                "negb %al;sbbl %eax, %eax;incl %eax;orl %eax, -(%ebp);movl %esi, %ecx": 2,
                "incl %eax;orl %eax, -(%ebp);movl %esi, %ecx;movl -(%ebp), %esi;movl (%ebp), %edi": 2,
                "jmp - <RtlUnicodeStringToAnsiString+>;movl %ecx, -(%ebp);movl %ecx, %esi;jmp - <RtlUnicodeStringToAnsiString+>;movl (%ebx), %esi": 1,
                "pushl %esi;pushl %edi;movl %fs:, %eax;movl (%ebp), %ebx;movl %eax, %edi": 1,
                "cmpl %esi, %eax;jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;testl %eax, %eax;je - <RtlUnicodeStringToAnsiString+>": 1,
                "pushl %eax;pushl $;pushl (%ebp);pushl $;pushl -(%ebp)": 4,
                "pushl $;pushl -(%ebp);pushl ;pushl (%ebp);calll - <ObOpenObjectByName>": 4,
                "pushl (%ebp);calll - <ObSetHandleAttributes>;movl %eax, -(%ebp);movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "movw %ax, (%ecx);movw , %ax;movw %ax, (%ecx);orl $-, -(%ebp);movl %edx, %eax": 1,
                "movl %ebx, (%ecx);popl %ebx;popl %ebp;retl $;cmpl $, %eax": 1,
                "xorl %eax, %eax;testb %bl, %bl;setne %al;pushl %eax;pushl -(%ebp)": 1,
                "setne %al;pushl %eax;pushl -(%ebp);calll - <PsSetProcessPriorityByClass>;movl -(%ebp), %ecx": 1,
                "decl %eax;decl %eax;je  <IoCheckFunctionAccess+>;decl %eax;je  <IoCheckFunctionAccess+>": 3,
                "movl $, -(%ebp);movl (%edi), %edi;movl %edi, -(%ebp);movl %edx, -(%ebp);pushl %edi": 1,
                "jne - <NtFsControlFile+>;cmpl %eax, %edx;jbe - <NtFsControlFile+>;movl (%ebx), %esi;cmpw $, (%esi)": 1,
                "movl %edi, -(%ebp);xorl %ecx, %ecx;cmpl %ecx, (%ebx);jne  <RtlRandom+>;movl (%edi), %ecx": 1,
                "cmpw (%eax), %dx;ja  <PsGetContextThread+>;leal (%esi), %eax;movl %eax, -(%ebp);movl (%ecx), %edi": 1,
                "jne - <SeDeleteAccessState+>;jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl %esi, (%eax);jmp - <SeQuerySecurityDescriptorInfo+>": 1,
                "jmp  <RtlRemoveUnicodePrefix+>;incl (%ebp);addl $, -(%ebp);cmpl $, (%ebp);jge  <RtlRandom+>": 1,
                "movl %ecx, -(%ebp);jg  <RtlRandom+>;cmpl %ecx, -(%ebp);jl  <RtlRemoveUnicodePrefix+>;jmp - <RtlRandom+>": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi,%eax,), %eax;movl %eax, -(%ebp);movb (%esi), %al": 1,
                "je  <RtlRandom+>;cmpl $, %eax;ja  <CcZeroData+>;movl %eax, %ebx;movb (%ebp), %al": 1,
                "jne  <IoCheckFunctionAccess+>;cmpw $, %bx;jb  <IoCheckFunctionAccess+>;xorl %edx, %edx;cmpl %edx, (%edi)": 1,
                "testb $, (%ebp);jne  <RtlRandom+>;movw %dx, (%esi);popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;leal (%esi,%eax), %edx;cmpl %eax, %edx;jb  <RtlRandom+>;movl (%ebp), %eax": 1,
                "leal (%esi,%eax), %edx;cmpl %eax, %edx;jb  <RtlRandom+>;movl (%ebp), %eax;leal (%esi,%eax), %ecx": 1,
                "jb  <RtlRandom+>;movl (%ebp), %eax;leal (%esi,%eax), %ecx;cmpl %eax, %ecx;jb  <RtlRandom+>": 1,
                "cmpl %eax, %ecx;jb  <RtlRandom+>;movl , %eax;cmpl %eax, %edx;ja  <RtlRandom+>": 1,
                "ja  <RtlRandom+>;movl (%ebp), %ebx;testl %ebx, %ebx;je  <RtlRandom+>;andl $, -(%ebp)": 1,
                "testl %ebx, %ebx;je  <RtlRandom+>;andl $, -(%ebp);movl , %eax;cmpl %eax, %ebx": 1,
                "calll - <ObfDereferenceObject>;testl %ebx, %ebx;je  <RtlRandom+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "calll - <_CIsqrt+>;retl $;movl $, %eax;jmp - <RtlRandom+>;movl (%ebp), %ebx": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, -(%ebp);testl %eax, %eax;jne  <SeQueryAuthenticationIdToken+>": 1,
                "pushl -(%ebp);pushl (%ebp);pushl (%edi);calll - <SeCaptureSecurityDescriptor+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;testl %ebx, %ebx;jne  <IoOpenDeviceRegistryKey+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <SeQueryAuthenticationIdToken+>;testl %eax, %eax;jl - <SeTokenType+>": 1,
                "testl %esi, %esi;je  <SeQueryAuthenticationIdToken+>;incl (%esi);movl %edi, %ecx;calll *": 1,
                "incl (%esi);movl %edi, %ecx;calll *;testl %esi, %esi;jne - <SeTokenType+>": 1,
                "jne - <SeTokenType+>;jmp - <SeTokenType+>;calll - <ObfDereferenceObject>;jmp - <SeTokenType+>;nop": 1,
                "calll - <ObfDereferenceObject>;jmp - <SeTokenType+>;nop;nop;nop": 1,
                "cmpl (%esi), %ecx;jne  <IoOpenDeviceRegistryKey+>;movl (%esi), %eax;andl $, -(%ebp);testl %eax, %eax": 1,
                "testl %eax, %eax;je  <IoOpenDeviceRegistryKey+>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edi, %ecx": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "jne  <SeQueryAuthenticationIdToken+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "movb (%eax), %al;movb %al, -(%ebp);andl $, -(%ebp);testb %al, %al;je  <SeQueryAuthenticationIdToken+>": 1,
                "pushl $;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "pushl %ebx;movl (%ecx), %ebx;pushl %esi;pushl %edi;movl %ecx, -(%ebp)": 1,
                "orl %ecx, %eax;shll %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "cmpl %esi, %ebx;movl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;testb $, %bl;leal -(%ebp), %eax": 1,
                "popl %ebx;leave;retl;leal (%edx), %eax;cmpl $, (%eax)": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);jmp - <ExfAcquirePushLockExclusive+>;nop;nop": 1,
                "andl $, -(%ebp);andl $, -(%ebp);cmpb $, (%ebp);leal -(%ebp), %ecx;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp);movl %ecx, -(%ebp);je  <ExfAcquirePushLockExclusive+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <ZwQueryValueKey>;movl %eax, %esi": 5,
                "movw , %ax;movw %ax, (%esi);orl $-, -(%ebp);movl %edi, %eax;calll - <_CIsqrt+>": 1,
                "movl (%ebp), %edi;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;andl $, -(%ebp)": 10,
                "calll - <IoQueueWorkItem+>;leave;retl $;decl %ebp;addb %dh, (%ebp)": 1,
                "andw $, -(%ebp);movl (%ebp), %eax;testl %edi, %edi;jne  <CcZeroData+>;xorl %edx, %edx": 1,
                "calll - <IoQueueWorkItem+>;calll - <_CIsqrt+>;retl $;nop;xorb %al, (%eax)": 1,
                "addb %al, (%ebp);incl %esi;addb %dl, -(%eax);movl %edi, %edi;pushl %ebp": 1,
                "movl %eax, -(%ebp);calll - <RtlValidSid>;cmpb $, %al;jne  <IoCheckFunctionAccess+>;cmpb %al, (%esi)": 1,
                "leal -(%ebp), %edi;jne  <IoCheckFunctionAccess+>;cmpb %al, (%esi);jne  <IoCheckFunctionAccess+>;movzbl (%esi), %eax": 1,
                "pushl %ecx;addl $, %edi;pushl %eax;movw %di, -(%ebp);calll - <RtlCopyUnicodeString>": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edi;jmp - <NtQueryInformationToken+>;movl (%ebp), %edi;jmp - <NtOpenProcessTokenEx+>": 1,
                "calll - <ZwOpenProcessTokenEx>;testl %eax, %eax;jl  <RtlFormatCurrentUserKeyPath+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl %esi;calll - <RtlAppendUnicodeToString>;movw -(%ebp), %ax;movl (%esi), %ecx": 1,
                "andb $-, %al;movb %al, (%ecx);movl -(%ebp), %eax;movl -(%ebp), %ecx;subl %eax, %ecx": 1,
                "subl %eax, %ecx;movl %ecx, %esi;leal (%eax,%edx), %edi;xorl %eax, %eax;shrl $, %ecx": 1,
                "movl %ebx, %ecx;calll - <ObfReferenceObject>;testb $, (%ebx);jne  <PsSetProcessWindowStation+>;andl $, -(%ebp)": 1,
                "cmpl %edi, %esi;je  <IoCheckFunctionAccess+>;movl %ebx, (%esi);movl %fs:, %eax;cmpb $, (%ebp)": 1,
                "movl (%ebp), %ecx;movl %ebx, (%eax);orl $, (%esi);movl %ecx, (%esi);movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);movb $, %cl;calll *;movl (%esi), %edx": 2,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl %edi, %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %edi;movl -(%ebp), %ecx;movl %ecx, (%eax);movzwl (%ebx), %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);addl -(%ebp), %eax": 1,
                "movl %edx, (%ecx);movl (%ebp), %ecx;subl %ecx, %eax;movl %eax, -(%ebp);leal -(%eax), %edx": 1,
                "movw %ax, (%ecx);orl $-, -(%ebp);calll  <IoQueryFileInformation+>;movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "nop;nop;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "movl %eax, -(%ebp);cmpl %esi, %eax;jl  <IoQueryFileInformation+>;movl -(%ebp), %edx;leal -(%ecx), %esi": 1,
                "jne  <IoCheckFunctionAccess+>;movl $, -(%ebp);pushl $;popl %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <NtAdjustPrivilegesToken+>;orl $-, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "testl %ecx, %ecx;jne  <ObQueryNameString+>;xorl %edx, %edx;cmpl %edx, %ebx;je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;cmpl %edx, (%ebx);je  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl , %eax": 1,
                "decl %eax;je  <IoCheckFunctionAccess+>;xorl %ebx, %ebx;movl %ebx, -(%ebp);cmpl , %esi": 2,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);cmpl , %esi;je  <ObQueryNameString+>;testl %esi, %esi": 2,
                "cmpl $, %edi;ja  <IoCheckFunctionAccess+>;leal (%edi), %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "je - <ObQueryNameString+>;movl $, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl $, -(%ebp);decl %eax;decl %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebx), %esi;movl %esi, -(%ebp);testl %esi, %esi;je  <ObQueryNameString+>": 2,
                "movl -(%ebp), %eax;movw $, (%eax);testl %ebx, %ebx;je  <IoCheckFunctionAccess+>;cmpl $, (%ebx)": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;cmpl %esi, %ecx;je  <ObQueryNameString+>;calll - <ObfDereferenceObject>": 1,
                "cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $": 1,
                "nop;testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>;cmpl $, -(%ebp);je  <ObQueryNameString+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %eax;pushl (%ebp)": 7,
                "je  <SeTokenIsWriteRestricted+>;testb $, (%edi);jne  <SeTokenIsWriteRestricted+>;leal (%edi), %eax;cmpl $, (%eax)": 1,
                "decl %esi;jne - <PsSetProcessWinProcess+>;testl %edx, %edx;je  <PsSetProcessWinProcess+>;xorl %ecx, %ecx": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);xorl %eax, %eax;popl %edi;jmp - <IoCreateFile+>": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *%ecx": 2,
                "pushl %esi;movl $, %esi;movl %esi, %ecx;calll *;movl (%ebp), %eax": 1,
                "calll - <_local_unwind>;popl %ecx;popl %ecx;movl %esi, %eax;jmp - <IoQueryFileInformation+>": 1,
                "nop;nop;movl -(%ebp), %ebx;jmp - <IoQueryFileInformation+>;movl (%edi), %ecx": 1,
                "movl %eax, -(%ebp);calll - <FsRtlRemoveLargeMcbEntry+>;cmpl $, %eax;jne - <CcCopyRead+>;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp - <NtSetEvent+>;cmpl $, (%ebp);jmp - <RtlUnicodeStringToAnsiString+>;xorl %eax, %eax;incl %eax": 1,
                "cmpl $, (%ebp);jmp - <RtlUnicodeStringToAnsiString+>;xorl %eax, %eax;incl %eax;jmp - <NtSetInformationProcess+>": 1,
                "xorl %eax, %eax;incl %eax;jmp - <NtSetInformationProcess+>;xorl %eax, %eax;jmp - <PsSetProcessWinProcess+>": 1,
                "jmp - <NtSetInformationProcess+>;xorl %eax, %eax;jmp - <PsSetProcessWinProcess+>;nop;nop": 1,
                "je  <PsDereferencePrimaryToken+>;orb $-, (%edi);testb $, (%eax);jne  <IoCheckFunctionAccess+>;testb $, (%eax)": 1,
                "orb $-, (%edi);testb $, (%eax);jne  <IoCheckFunctionAccess+>;testb $, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "testb $, (%eax);jne  <IoCheckFunctionAccess+>;testb $, (%eax);jne  <IoCheckFunctionAccess+>;movl (%eax), %ecx": 1,
                "movl (%ecx), %ecx;testb $, (%ecx);jne  <IoCheckFunctionAccess+>;testl %ebx, %ebx;je - <RtlUnicodeStringToAnsiString+>": 1,
                "popl %edi;popl %esi;popl %ebp;retl $;movl $, -(%ebp)": 1,
                "movl %eax, %esi;jmp - <ObQueryNameString+>;xorl %ebx, %ebx;jmp - <ObQueryNameString+>;movb $, %cl": 1,
                "jmp - <ObQueryNameString+>;movb $, %cl;movl (%ebp), %edx;movl %eax, (%edx);movb %cl, %al": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);popl %ebp;retl $;calll - <ObfDereferenceObject>": 1,
                "calll - <ObfDereferenceObject>;movl %ebx, %eax;jmp - <NtSetInformationThread+>;movb $, %dl;movl %ebx, %ecx": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %esi;pushl $;pushl %ebx;pushl %esi": 1,
                "retl $;cmpl $, %edi;je  <IoCheckFunctionAccess+>;leal (%ebx), %eax;movl %eax, (%ebp)": 1,
                "cmpl %edi, %eax;jne  <RtlUnicodeToMultiByteSize+>;movl %ebx, %ecx;calll - <ObfReferenceObject>;movl %edi, (%ebx)": 1,
                "movl %esp, %ebp;subl $, %esp;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;pushl %esi": 3,
                "movl (%eax), %eax;testb $, (%eax);je  <PsSetProcessWindowStation+>;calll - <PsGetCurrentProcessSessionId>;cmpl %eax, (%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl %edx, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp)": 2,
                "movl (%ebp), %eax;movl %ecx, -(%ebp);movb (%ebp), %cl;movb %cl, -(%ebp);movl (%ebp), %ecx": 1,
                "pushl (%ebp);pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi": 4,
                "xorl %eax, %eax;movl %ecx, (%esi);leal (%esi), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ecx), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl %esi, (%ebx);leal (%ebx), %eax;movl %eax, (%eax);movl %eax, (%eax);pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);cmpl %esi, (%ebp);jne  <IoCheckFunctionAccess+>;cmpl %esi, %edi": 1,
                "je  <PsSetProcessWindowStation+>;pushl %edi;pushl %ebx;calll  <SeTokenIsWriteRestricted+>;cmpl %esi, (%ebp)": 1,
                "orl %eax, (%ecx);movl -(%ebp), %eax;movl %eax, (%ebx);xorl %eax, %eax;movb (%ebx), %al": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl $": 5,
                "pushl %eax;pushl -(%ebp);pushl $;pushl %ebx;calll  <PsSetProcessWindowStation+>": 1,
                "movb (%edi), %cl;cmpb $, %cl;je  <RtlInitializeRangeList+>;cmpb $, %cl;je  <RtlInitializeRangeList+>": 1,
                "cmpb $, %cl;je  <RtlInitializeRangeList+>;cmpb $, %cl;je  <RtlInitializeRangeList+>;pushl %ebx": 1,
                "pushl %eax;calll - <PsSetProcessWindowStation+>;movl %eax, %edi;cmpl %esi, %edi;jl  <PsSetProcessWindowStation+>": 1,
                "jl  <PsSetProcessWindowStation+>;movl %esi, -(%ebp);cmpl %esi, (%ebp);je  <IoRegisterBootDriverReinitialization+>;leal (%ebx), %eax": 1,
                "pushl %ebx;calll  <PsSetProcessWindowStation+>;movl %eax, %edi;cmpl %esi, %edi;jl  <PsSetProcessWindowStation+>": 1,
                "calll  <PsSetProcessWindowStation+>;movl %eax, %edi;cmpl %esi, %edi;jl  <PsSetProcessWindowStation+>;movb $, -(%ebp)": 1,
                "leal (%edi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;cmpl %esi, -(%ebp);je  <PsSetProcessWindowStation+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %esi, -(%ebp);je  <PsSetProcessWindowStation+>;movl , %eax;cmpl %eax, -(%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <ObInsertObject>": 1,
                "calll - <ObInsertObject>;movl %eax, %edi;movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal (%ebx), %ecx;calll - <ExReleaseRundownProtection+>;pushl -(%ebp);pushl -(%ebp);calll - <ObReleaseObjectSecurity>": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;cmpl %esi, %ecx;je  <PsSetProcessWindowStation+>": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;cmpl %esi, %ecx;je  <PsSetProcessWindowStation+>;calll - <ObfDereferenceObject>": 1,
                "pushl ;pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %ebx": 6,
                "jl - <PsSetProcessWindowStation+>;movl -(%ebp), %ecx;movl %esi, (%ecx);jmp - <PsSetProcessWindowStation+>;nop": 2,
                "movl , %edi;je  <PsSetProcessWindowStation+>;movl (%eax), %edi;pushl %ebx;movl $, %ebx": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;movl $, %ecx;calll - <ExReleaseFastMutexUnsafe>;incl (%esi)": 1,
                "pushl %edi;calll - <ProbeForWrite>;movl (%ebp), %ecx;cmpl %ebx, %ecx;jne  <IoOpenDeviceRegistryKey+>": 1,
                "nop;nop;xorb %al, (%eax);addb %al, (%eax);xorb %al, (%eax)": 1,
                "addb %al, (%eax);addb $, %al;addb %al, (%eax);adcb $, %al;addb %al, (%eax)": 1,
                "adcb $, %al;addb %al, (%eax);addb $, %al;addb %al, (%eax);orb %al, (%eax)": 1,
                "movl (%ebp), %eax;testb $, (%eax);je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %esi": 1,
                "movl $, %edi;pushl %edi;movl $, %esi;pushl %esi;pushl $": 1,
                "calll - <ObQueryNameString>;movl %eax, %esi;testl %esi, %esi;jl  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "leal (%ecx), %eax;pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi": 1,
                "movl %eax, %esi;subl , %esi;leal (%ecx,%ecx,), %ecx;subl %edx, %esi;sarl $, %esi": 1,
                "subl %edx, %esi;sarl $, %esi;shrl $, %ecx;movl , %ebx;leal (%ecx,%ecx,), %ecx": 1,
                "movl $, %ebx;subl %ecx, %ebx;movl %eax, %ecx;subl %esi, %ecx;subl %edx, %ecx": 1,
                "movl %eax, %ecx;subl %esi, %ecx;subl %edx, %ecx;sarl $, %ecx;movl %ecx, (%edi)": 1,
                "shll $, %edx;movl %edx, (%eax);addl $, %eax;incl %ecx;cmpl %ebx, %ecx": 1,
                "movl (%ebp), %esi;pushl %esi;calll - <KeAttachProcess>;pushl $;popl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;pushl ;calll - <MmMapViewOfSection>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl (%esi), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;movl , %ecx;movl %ecx, (%eax)": 2,
                "movl -(%ebp), %ecx;movw %ax, (%ecx);movl -(%ebp), %eax;movl %edi, (%eax);movl -(%ebp), %eax": 1,
                "movw %cx, (%eax);cmpl %ebx, (%esi);je  <PsSetProcessWindowStation+>;pushl %esi;calll - <PsIsThreadTerminating+>": 1,
                "orl $-, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;pushl (%eax);calll - <RtlImageNtHeader>": 1,
                "leal -(%ebp), %eax;pushl %eax;addl $, %edi;calll - <KeQueryTickCount>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%edi);jmp  <NtAdjustPrivilegesToken+>;nop;nop": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %ebx, -(%ebp);jge - <PsSetProcessWindowStation+>;jmp - <PsSetProcessWindowStation+>": 1,
                "subl $, %esp;pushl %esi;pushl %edi;xorl %edi, %edi;movl %edi, -(%ebp)": 2,
                "movl %edi, -(%ebp);movl %fs:, %eax;decl (%eax);movl , %esi;andl $-, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %ebx;calll - <MmMapViewOfSection>": 1,
                "movl %ebx, %ecx;movl %eax, %esi;calll - <ObfDereferenceObject>;cmpl %edi, %esi;popl %ebx": 1,
                "jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;popl %esi;leave;retl $": 1,
                "movl (%ebp), %esi;jmp - <NtQuerySystemInformation+>;movl %eax, (%ebx);testl %esi, %esi;je - <NtQuerySystemInformation+>": 1,
                "je - <NtQuerySystemInformation+>;jmp - <NtQuerySystemInformation+>;pushl %ebx;pushl %edi;pushl $": 1,
                "testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;popl %edi;movl %esi, (%ecx)": 1,
                "movl %eax, (%eax);movb (%ebp), %al;movb %al, (%ecx);movl (%ebp), %eax;movl %eax, (%ecx)": 1,
                "cltd;idivl %esi;movw $, (%ecx);popl %esi;movb %dl, (%ecx)": 1,
                "popl %esi;movb %dl, (%ecx);popl %ebp;retl $;nop": 1,
                "movl %eax, (%esi);jmp - <RtlUnicodeStringToAnsiString+>;nop;nop;nop": 2,
                "calll - <NtDuplicateObject+>;testl %eax, %eax;je  <PsSetProcessWindowStation+>;pushl (%ebp);movl (%eax), %esi": 1,
                "testl %esi, %esi;je  <RtlInitializeRangeList+>;pushl %edi;pushl %esi;calll - <PsReferencePrimaryToken>": 1,
                "je  <IoCheckFunctionAccess+>;movl %edi, (%esi);movl %fs:, %eax;movl (%ebp), %ecx;movl %eax, (%esi)": 1,
                "pushl (%ebp);calll - <ObInsertObject>;cmpl %esi, %eax;jl  <PsSetProcessWindowStation+>;movl (%ebp), %ecx": 1,
                "movb %dl, (%ecx);movl (%ebp), %ecx;movl (%ebp), %edx;movl %edx, (%ecx);popl %esi": 1,
                "movsbl , %eax;cmpl %eax, -(%ebp);jae  <SeTokenIsWriteRestricted+>;movl -(%ebp), %eax;movl (,%eax,), %ecx": 1,
                "movl -(%ebp), %eax;movl (,%eax,), %ecx;movl %ecx, -(%ebp);testl %ecx, %ecx;je  <SeTokenIsWriteRestricted+>": 1,
                "movl %edi, (%ebx);jmp - <NtQuerySystemInformation+>;cmpl $, (%ebp);setne %al;movb %al, -(%ebp)": 1,
                "pushl -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "andl $, (%eax);movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %ebx;pushl %ebx": 1,
                "movl (%edi), %eax;mull ;movl %eax, (%esi);movl %edx, (%esi);movsbl (%edi), %eax": 1,
                "subl $, %esp;movl , %eax;pushl %ebx;movl %eax, -(%ebp);movl (%ebp), %eax": 12,
                "leal (%ecx,%edx,), %ebx;movw -(%ebp,%ebx), %bx;movw %bx, -(%ebp,%edx,);incl %edx;cmpl %eax, %edx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <ExRundownCompleted+>;movb %al, -(%ebp);negb %al": 1,
                "jne  <IoCheckFunctionAccess+>;addl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %edi;subl (%eax), %edi;movl -(%ebp), %esi;sbbl (%eax), %esi;cmpl (%eax), %esi": 1,
                "je  <SeTokenIsWriteRestricted+>;movl %edi, %ecx;calll - <SeTokenType+>;popl %edi;popl %esi": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx);movl %eax, %esi;andl $-, %esi": 1,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);movl %eax, %esi;andl $-, %esi;je  <SeTokenIsWriteRestricted+>": 1,
                "andl $-, %esi;je  <SeTokenIsWriteRestricted+>;andl $, %eax;jbe  <SeTokenIsWriteRestricted+>;movl %eax, %edx": 1,
                "decl (%edi);movl $, %ebx;movl %ebx, %ecx;calll - <ExAcquireFastMutexUnsafe>;movl (%esi), %ecx": 1,
                "calll - <ExReleaseFastMutexUnsafe>;incl (%edi);je  <ExRundownCompleted+>;xorl %ebx, %ebx;leal (%esi), %edi": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl %ebx, (%edi);leal (%esi), %edi;movl (%edi), %eax": 2,
                "je  <SeTokenIsWriteRestricted+>;calll - <ObfDereferenceObject>;movl %ebx, (%edi);leal (%esi), %edi;movl (%edi), %ecx": 1,
                "pushl %esi;calll  <ExRundownCompleted+>;pushl %esi;calll  <ExRundownCompleted+>;cmpl %ebx, (%esi)": 1,
                "movl %edi, %ecx;calll  <ExRundownCompleted>;movl (%esi), %edi;testl %edi, %edi;je  <SeTokenIsWriteRestricted+>": 1,
                "movl (%esi), %edi;testl %edi, %edi;je  <SeTokenIsWriteRestricted+>;pushl %ebx;pushl $": 1,
                "testl %edi, %edi;je  <SeTokenIsWriteRestricted+>;pushl %ebx;pushl $;calll - <IoSetThreadHardErrorMode>": 1,
                "movl (%ebp), %eax;andl $, (%eax);pushl $;pushl %edi;calll  <ExRundownCompleted+>": 1,
                "pushl %ecx;movl , %eax;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl $, %ecx;leal (%eax), %edx;lock": 1,
                "decl (%esi);movl $, %edi;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %eax": 1,
                "incl (%esi);jne  <SeTokenIsWriteRestricted+>;leal (%esi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "jne - <RtlAddAtomToAtomTable+>;jmp  <IoCheckFunctionAccess+>;nop;nop;nop": 2,
                "jne  <SeTokenIsWriteRestricted+>;pushl $;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpb $, (%ebp);je  <ExRundownCompleted+>;testb $, (%edi);jne  <IoCheckFunctionAccess+>;movl (%edi), %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;xorl %ecx, %ecx;movb (%eax), %cl;pushl $": 1,
                "pushl -(%ebp);calll - <RtlEnumerateGenericTableAvl+>;movl , %eax;cmpl (%eax), %esi;jb  <IoCheckFunctionAccess+>": 1,
                "cmpl $, (%eax);je  <SeTokenIsWriteRestricted+>;pushl %eax;calll  <SeTokenIsWriteRestricted+>;popl %ebp": 1,
                "pushl %edx;calll - <_wcsicmp+>;popl %ebp;retl $;movl , %edx": 1,
                "pushl $;popl %eax;lock;orl %eax, (%ecx);pushl $": 1,
                "calll - <RtlUnicodeStringToAnsiString+>;movl %eax, %esi;testl %esi, %esi;je  <SeTokenIsWriteRestricted+>;andl $, (%ebp)": 1,
                "pushl (%ebp);calll - <PsReturnProcessPagedPoolQuota>;popl %ebp;retl $;pushl %edi": 1,
                "movl %ebx, %edx;calll - <ExReleaseRundownProtection+>;cmpl $, (%edi);jne  <IoCheckFunctionAccess+>;pushl %edi": 1,
                "movl %eax, %esi;testl %esi, %esi;jne - <ExRundownCompleted+>;popl %ebx;popl %edi": 1,
                "testl %esi, %esi;jne - <ExRundownCompleted+>;popl %ebx;popl %edi;popl %esi": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne  <ExRundownCompleted+>;pushl (%ebp)": 1,
                "pushl %esi;calll *(%ebp);jmp - <ExRundownCompleted+>;pushl %esi;pushl (%ebp)": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);cmpl %eax, %ecx;jne  <ExRundownCompleted+>;jmp - <ExWaitForRundownProtectionRelease+>": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx": 2,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx;movl (%esi), %ecx": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;popl %ebx;leave;retl $;nop": 1,
                "addl $, %ecx;movl (%ecx), %eax;movl %eax, %esi;orl %edx, %esi;lock": 1,
                "movl (%ecx), %eax;movl %eax, %esi;orl %edx, %esi;lock;cmpxchgl %esi, (%ecx)": 1,
                "retl $;movl (%eax), %esi;pushl %eax;calll - <SeFreePrivileges>;pushl %esi": 1,
                "calll - <KeReadStateTimer>;testb %al, %al;jne - <ExRundownCompleted+>;movl %ebx, %ecx;calll - <ObReferenceObjectByPointer+>": 1,
                "cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;pushl %eax;pushl %eax": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl %eax;pushl %ebx": 3,
                "jmp - <ExRundownCompleted+>;orl $-, (%ebp);movb $, -(%ebp);jmp - <SeTokenIsWriteRestricted+>;cmpl $, (%ebp)": 1,
                "testl %eax, %eax;je  <ExRundownCompleted+>;movl (%esi), %eax;cmpl $, %eax;jb  <ExRundownCompleted+>": 1,
                "leal (%esi), %eax;pushl %eax;calll  <ObReferenceObjectByName+>;testb %al, %al;je  <IoCheckFunctionAccess+>": 3,
                "pushl %esi;leal -(%edi,%eax,), %eax;pushl %eax;calll  <ObReferenceObjectByName+>;testb %al, %al": 1,
                "leal -(%edi,%eax,), %eax;pushl %eax;calll  <ObReferenceObjectByName+>;testb %al, %al;je  <IoCheckFunctionAccess+>": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;cmpl $, %eax;ja  <IoCheckFunctionAccess+>": 1,
                "leal (%edx,%eax,), %edx;pushl %esi;leal (%edx), %eax;pushl %eax;calll  <ObReferenceObjectByName+>": 2,
                "pushl %esi;leal (%edx), %eax;pushl %eax;calll  <ObReferenceObjectByName+>;testb %al, %al": 2,
                "ja  <IoCheckFunctionAccess+>;cmpl $-, %eax;jne - <ExRundownCompleted+>;movl (%ebp), %eax;cmpl -(%edi), %eax": 1,
                "movl (%edi), %edx;addl -(%ebp), %edx;pushl %ebx;pushl %esi;pushl %edx": 1,
                "leal -(%eax,%edx), %eax;pushl %eax;calll  <ObReferenceObjectByName+>;testb %al, %al;je  <ExRundownCompleted+>": 1,
                "movl (%edi), %edx;addl -(%ebp), %edx;andl $, (%ebp);testl %eax, %eax;jbe  <ExRundownCompleted+>": 1,
                "testl %eax, %eax;jbe  <ExRundownCompleted+>;pushl (%ebp);leal (%edx), %eax;pushl %esi": 1,
                "je  <ExRundownCompleted+>;movw (%edx), %ax;cmpw $, %ax;jae  <ExRundownCompleted+>;pushl (%ebp)": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;movzwl (%ecx), %ecx;shrl %ecx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;movzwl (%ecx), %ecx;shrl %ecx;leal (%edx,%ecx,), %ecx": 1,
                "movl %edi, %ecx;subl %edx, %ecx;addl %eax, %ecx;cmpl (%ebp), %edi;jae  <ExRundownCompleted+>": 1,
                "leal (%ecx,%eax,), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax": 1,
                "pushl -(%ebp);calll - <swprintf>;addl $, %esp;movl %edi, %ecx;calll - <ExReleaseResourceLite>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;pushl $;popl %ebx": 4,
                "xorl %edi, %edi;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %edi;leal -(%ebp), %eax": 1,
                "calll - <ZwReadFile>;movl %eax, %esi;cmpl %edi, %esi;jl  <ExRundownCompleted+>;leal (%ebp), %eax": 1,
                "calll - <ZwClose>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %edi, %esi": 1,
                "addb %ah, ;addb %ch, ;addb %bh, (%eax);addb %bl, (%eax);addb %ah, %cs:": 1,
                "movl $, %eax;jmp  <SeQueryInformationToken+>;movb $, %cl;movb $, (%eax);calll *": 1,
                "jmp  <SeQueryInformationToken+>;movl %fs:, %eax;decl (%eax);movl (%ebp), %esi;pushl $": 4,
                "leal (%eax,%eax,), %eax;pushl $;leal (,%eax,), %eax;pushl %eax;pushl $": 1,
                "pushl (%esi);pushl (%esi);calll  <MmUnmapViewInSessionSpace+>;movl (%esi), %ecx;calll - <ExReleaseResourceLite>": 1,
                "testl %eax, %eax;je  <ExRundownCompleted+>;movzwl (%eax), %esi;addl $, %esi;pushl $": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;jmp - <ExRundownCompleted+>;cmpl $, (%ebx);leal (%eax), %edi": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <ExRundownCompleted+>;andl $, (%eax)": 1,
                "jmp  <SeQueryInformationToken+>;pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>": 2,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je - <ExRundownCompleted+>;movl (%ebp), %esi;movl %eax, %edi": 1,
                "movl %eax, %edi;testl %edi, %edi;je - <ExRundownCompleted+>;movl %fs:, %eax;decl (%eax)": 1,
                "calll - <ExAcquireResourceSharedLite>;movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax;movl %eax, (%edi)": 1,
                "decl %edx;addb %al, %bl;retl $;incl %ecx;retl": 1,
                "movl (%eax), %eax;movzbl (%eax), %ebx;pushl $;leal (,%ebx,), %ebx;pushl %ebx": 1,
                "pushl %edi;pushl %ebx;pushl (%esi);pushl $;calll - <RtlCompareUnicodeString+>": 1,
                "pushl %ebx;pushl (%esi);pushl $;calll - <RtlCompareUnicodeString+>;movl (%esi), %ecx": 1,
                "incl (%eax);je  <SeQueryInformationToken+>;movl (%ebp), %eax;movl %edi, (%eax);xorl %eax, %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl %edi, (%esi);cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "cmpl $, (%esi);jne - <IoSetIoCompletion+>;jmp  <IoCheckFunctionAccess+>;movw $, (%eax);movl %eax, (%ecx)": 1,
                "movl %edi, (%esi);movw %ax, (%esi);leal (%esi), %edi;xorl %edx, %edx;movl %edi, (%edi)": 1,
                "movw %ax, (%esi);leal (%esi), %edi;xorl %edx, %edx;movl %edi, (%edi);movl %edx, (%edi)": 1,
                "movl %edx, (%edi);movl (%ecx), %ebx;movl %ecx, -(%ebp);cmpw %ax, (%ebx);jg  <RtlInsertUnicodePrefix+>": 1,
                "movl %eax, (%ecx);movl %esi, (%eax);movb $, %al;popl %edi;popl %esi": 2,
                "jmp - <RtlInsertUnicodePrefix+>;movl %ebx, -(%ebp);movl (%ebx), %ebx;jmp - <RtlInsertUnicodePrefix+>;nop": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %eax;movswl (%eax), %ecx": 1,
                "je  <FsRtlRegisterUncProvider+>;xorb %al, %al;movl -(%ebp), %ecx;movl (%ecx), %ecx;movl (%ecx), %ecx": 1,
                "movl %edi, -(%ebp);xorl %edx, %edx;incl %edx;movl %edx, -(%ebp);cmpl %edi, %ecx": 1,
                "pushl $;pushl %edi;calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp);cmpl %edi, %eax": 3,
                "movl -(%ebp), %ecx;movl -(%ebp), %esi;movl (%ebp), %eax;movl (%eax), %edi;movl %ecx, %eax": 1,
                "pushl $;pushl %edi;pushl %ebx;pushl %edi;calll - <IoSetIoCompletion+>": 1,
                "movl -(%ebp), %ecx;movl $, %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;jne  <IoCheckFunctionAccess+>": 5,
                "jne  <IoCheckFunctionAccess+>;pushl %ebx;calll  <RtlRemoveUnicodePrefix+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "incl (%esi);jne - <NtClose+>;leal (%esi), %eax;cmpl %eax, (%eax);je - <NtClose+>": 2,
                "leal (%esi), %eax;cmpl %eax, (%eax);je - <NtClose+>;jmp  <IoCheckFunctionAccess+>;leal (%esi), %edi": 1,
                "andb $, %al;movb %al, (%ebp);je  <IoCheckFunctionAccess+>;xorl %edi, %edi;movl %edi, -(%ebp)": 1,
                "testl %ecx, %ecx;movl %ebx, %edi;je - <RtlRemoveUnicodePrefix+>;movl %ecx, %ebx;jmp - <RtlRemoveUnicodePrefix+>": 1,
                "calll - <ObReferenceObjectByHandle+>;xorb %al, %al;leave;retl $;andl $-, %eax": 1,
                "xaddl %eax, (%ecx);pushl (%ebp);pushl (%ebp);calll - <ObReferenceObjectByHandle+>;testb $, ": 1,
                "testb $, ;jne  <IoCheckFunctionAccess+>;movl , %eax;movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movb $, %al;popl %edi;popl %esi;jmp - <RtlRemoveUnicodePrefix+>;nop": 1,
                "je  <RtlRemoveUnicodePrefix+>;cmpl $, (%ebx);jne  <RtlRemoveUnicodePrefix+>;andl $, (%edi);movl (%esi), %eax": 1,
                "pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl , %ecx;leal (%esi), %eax;movl %ecx, (%eax)": 1,
                "pushl %esi;calll - <ObReferenceObjectByHandle+>;incl (%esi);jmp - <RtlRemoveUnicodePrefix+>;testl %eax, %eax": 1,
                "movl %ebx, -(%ebp);jmp - <NtDuplicateObject+>;pushl (%esi);pushl $;pushl -(%ebp)": 1,
                "je - <RtlMultiByteToUnicodeN+>;movl (%ebp), %eax;movl (%eax), %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %eax;cmpl %edx, %eax;je  <IoCheckFunctionAccess+>;cmpl $, (%eax);ja  <IoCheckFunctionAccess+>": 1,
                "calll - <_CIsqrt+>;movl %fs:, %eax;movb (%eax), %al;xorl %ebx, %ebx;cmpb %bl, %al": 3,
                "retl $;movl (%ebp), %edx;movzwl %ax, %ecx;leal (%ecx), %eax;movl %eax, (%edx)": 1,
                "jmp  <NtAdjustPrivilegesToken+>;movb $, -(%ebp);jmp  <NtAdjustPrivilegesToken+>;leal -(%ebx), %eax;movl (%ebx), %ebx": 1,
                "pushl %edx;pushl (%ebp);leal (%esi), %eax;pushl (%ebp);pushl %edx": 1,
                "pushl %edx;pushl %eax;calll - <KeWaitForSingleObject>;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "cmpl $, %eax;movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;cmpl $, %eax;jne - <RtlRemoveUnicodePrefix+>": 1,
                "retl $;movl %fs:, %eax;movl %eax, -(%ebp);decl (%eax);pushl $": 1,
                "leal (%eax), %ecx;addl $, %esi;movl %ecx, (%ebp);jmp  <IoCheckFunctionAccess+>;popl %edi": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %eax;testl %eax, %eax;je  <RtlRemoveUnicodePrefix+>": 1,
                "ja  <IoCheckFunctionAccess+>;pushl $;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "movl %ebx, %edi;movl %ecx, %edx;shrl $, %ecx;rep  stosl %eax, %es:(%edi);movl %edx, %ecx": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);pushl $": 2,
                "testl %esi, %esi;jl  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl %fs:, %eax;decl (%eax)": 1,
                "decl (%eax);leal (%ecx), %edi;movl %edi, -(%ebp);movl (%edi), %esi;andl $-, %esi": 1,
                "movl (%edi), %esi;andl $-, %esi;movl %esi, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "cmpb $, (%ebp);jne  <MmUnmapViewInSessionSpace+>;movl (%ecx), %eax;movl %eax, -(%ebp);orl $-, -(%ebp)": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 3,
                "addl $, %ecx;movw %cx, (%ebx);movl -(%ebp), %ecx;movl %ecx, (%ebx);movl (%esi), %ecx": 1,
                "movzwl (%ecx), %ecx;incl %ecx;incl %ecx;movw %cx, (%ebx);movl (%esi), %ecx": 1,
                "incl -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;incl -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;cmpb $, (%ebp)": 1,
                "addl (%ebp), %ecx;movl %ecx, (%eax);movzwl (%eax), %edx;addl %ebx, %edx;movl %edx, -(%ebp)": 1,
                "addl $, %eax;jmp - <RtlRemoveUnicodePrefix+>;movl $, -(%ebp);cmpl $, -(%ebp);jl - <RtlRemoveUnicodePrefix+>": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);xorl %esi, %esi": 1,
                "pushl %eax;pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "pushl %edi;calll - <ExAllocatePoolWithTag>;incl %esi;movl %esi, -(%ebp);movl %eax, %edx": 1,
                "incl %esi;movl %esi, -(%ebp);movl %eax, %edx;cmpl %edi, %edx;movl %edx, -(%ebp)": 1,
                "movl %ebx, (%eax);movl -(%ebp), %edx;xorl %eax, %eax;pushl $;popl %ecx": 1,
                "popl %ecx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi);andl $, (%ebx);movl %edx, (%ebx)": 1,
                "movb $, %cl;movl (%ebx), %edi;movb %cl, (%edi);movw (%eax), %di;movl (%ebx), %ecx": 1,
                "movl %ecx, (%eax);orl $, (%edx);movl (%edx), %eax;xorl %ecx, %ecx;incl %ecx": 1,
                "xorl %ecx, %ecx;incl %ecx;cmpl $, -(%ebp);movl %ebx, (%edx);movl %ecx, (%edx)": 1,
                "testb $, %ah;jne  <IoForwardIrpSynchronously+>;movl (%ebp), %ecx;movl (%ecx), %eax;testb $, (%eax)": 1,
                "orb $, (%eax);movl %ecx, (%eax);movl %eax, (%esi);movl -(%ebp), %eax;testw $, %ax": 1,
                "movl -(%ebp), %ecx;orl $, %edi;andl $, -(%ebp);orl $, %edi;cmpl $, %edx": 1,
                "orl $, %edi;cmpl $, %edx;movl %edi, (%ebx);jb  <RtlSubAuthoritySid+>;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;movzwl (%edx), %eax;leal (%ecx,%ecx,), %ecx;shll $, %ecx": 1,
                "andl $, %edi;addl $, %eax;addl %ecx, %edi;leal (%edi,%eax), %edi;cmpl -(%ebp), %edi": 1,
                "movl %ecx, -(%ebp);ja  <IoCheckFunctionAccess+>;leal (%eax,%edx), %edi;testl %edi, %edi;je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;xorl %eax, %eax;cmpl %eax, -(%ebp);je  <RtlSubAuthoritySid+>;movl -(%ebp), %ecx": 1,
                "andl $, (%esi);movl %eax, (%esi);movl -(%edi), %eax;addl -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "subl %eax, -(%ebp);shrl $, %ecx;movl %ecx, (%esi);movl (%edi), %edx;movl -(%edi), %eax": 1,
                "movl %ecx, (%esi);movl (%edi), %edx;movl -(%edi), %eax;addl %edx, %eax;addl -(%ebp), %eax": 1,
                "shll $, %eax;shrl $, %edx;movl %eax, (%esi);subl %ecx, %edx;movl %eax, -(%ebp)": 1,
                "shrl $, %eax;movl %ecx, %edx;andl $, %edx;andl $, %eax;orl %eax, %edx": 2,
                "movl -(%edi), %eax;pushl (%edi);addl %ecx, %eax;movl %eax, -(%ebp);calll  <RtlRemoveUnicodePrefix+>": 1,
                "addl %ecx, %eax;movl %eax, -(%ebp);calll  <RtlRemoveUnicodePrefix+>;andl $, %edx;andl $, %eax": 1,
                "movl %eax, %edx;movl %edx, -(%ebp);andl $, %edx;cmpl $, (%edi);movl %edx, -(%ebp)": 1,
                "cmpl $, -(%ebp);jae  <RtlRemoveUnicodePrefix+>;movl -(%ebp), %edx;movl -(%ebp), %esi;movl $, %ecx": 1,
                "incl %eax;movl -(%ebp), %ecx;andl $, -(%ebp);testb $, (%ecx);jne  <FsRtlNotifyInitializeSync+>": 1,
                "calll - <MmCreateMdl+>;xorl %ebx, %ebx;cmpl %ebx, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %edi": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;movl (%ebp), %edx;cmpxchgl %edx, (%ecx)": 1,
                "testl %edx, %edx;je  <RtlSubAuthoritySid+>;movl (%ebx), %ecx;leal -(%ecx), %esi;testl %esi, %ecx": 1,
                "jmp - <RtlRemoveUnicodePrefix+>;incl %eax;jmp - <RtlRemoveUnicodePrefix+>;movl , %eax;subl %esi, %eax": 1,
                "andl $, %eax;orl %eax, %edi;jmp - <RtlRemoveUnicodePrefix+>;movl , %eax;subl %esi, %eax": 1,
                "jmp - <RtlRemoveUnicodePrefix+>;movl , %eax;subl %esi, %eax;movl %eax, %ecx;shll $, %ecx": 1,
                "calll *;movb $, -(%ebp);movl , %ebx;movl $, %ecx;cmpl %ecx, %ebx": 1,
                "movl (%esi), %edi;addl (%ebp), %edi;cmpl %ebx, (%edi);jne  <RtlRemoveUnicodePrefix+>;incl -(%ebp)": 1,
                "jb - <RtlRemoveUnicodePrefix+>;pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>;movl (%esi), %ecx": 1,
                "movl %edi, (%eax);calll - <ExFreePoolWithTag>;jmp - <RtlRemoveUnicodePrefix+>;movl (%edi), %eax;cmpl %ebx, %eax": 1,
                "calll - <ExFreePoolWithTag>;jmp - <RtlRemoveUnicodePrefix+>;movl (%edi), %eax;cmpl %ebx, %eax;je  <RtlRemoveUnicodePrefix+>": 1,
                "movl (%edi), %edi;cmpl %ebx, %edi;je - <RtlRemoveUnicodePrefix+>;jmp  <IoCheckFunctionAccess+>;popl %edi": 1,
                "jmp - <RtlRemoveUnicodePrefix+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl %edi": 1,
                "movl $, %eax;cmpl %eax, %ecx;ja  <RtlRemoveUnicodePrefix+>;movl (%esi), %edi;cmpl $, %edi": 1,
                "calll  <ObReferenceObjectByName+>;testb %al, %al;je  <IoCheckFunctionAccess+>;movl (%esi), %edx;pushl %ebx": 1,
                "calll  <ObReferenceObjectByName+>;testb %al, %al;je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %esi": 1,
                "je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %esi;leal -(%edx,%edi,), %eax;pushl %eax": 1,
                "je  <IoCheckFunctionAccess+>;pushl $;xorl %edi, %edi;xorl %ecx, %ecx;leal (%esi), %eax": 1,
                "xorl %ecx, %ecx;leal (%esi), %eax;popl %edx;addl (%eax), %ecx;addl $, %eax": 1,
                "cmpl %edi, (%esi);je  <IoCheckFunctionAccess+>;cmpl %edi, (%esi);movl %edi, (%ebp);jbe  <RtlRemoveUnicodePrefix+>": 1,
                "cmpl %edi, (%esi);movl %edi, (%ebp);jbe  <RtlRemoveUnicodePrefix+>;pushl (%ebp);movl (%edx), %edi": 1,
                "movl %eax, (%ebx);movl (%ecx), %edx;cmpl %ecx, %edx;leal (%edi,%eax,), %eax;je  <RtlRemoveUnicodePrefix+>": 1,
                "addl %eax, %ecx;cmpl (%ebp), %ecx;movl %ecx, -(%ebp);ja - <RtlRandom+>;movl (%edx), %ecx": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);incl (%ebx);cmpl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "pushl %ebx;movl %eax, (%ebx);calll - <RtlRemoveUnicodePrefix+>;negb %al;sbbl %eax, %eax": 1,
                "popl %ebp;jmp - <RtlRemoveUnicodePrefix+>;nop;nop;nop": 1,
                "incl -(%ebp);movl -(%ebp), %eax;addl $, -(%ebp);cmpl (%esi), %eax;jae  <RtlRemoveUnicodePrefix+>": 1,
                "movl (%eax), %eax;cmpl %edx, %eax;je - <RtlRemoveUnicodePrefix+>;pushl %eax;calll - <wcslen>": 1,
                "xorl %edi, %edi;cmpl %ecx, %eax;je  <RtlRemoveUnicodePrefix+>;movl %eax, %ebx;movl (%ebx), %ebx": 1,
                "movl %edx, -(%ebp);je - <RtlRandom+>;movzwl %dx, %ecx;cmpl (%ebx), %ecx;jae - <RtlRandom+>": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;movl %edx, -(%eax);movw -(%ebp), %dx;movw %dx, (%eax)": 1,
                "leal (%edi,%eax,), %eax;jmp - <RtlRemoveUnicodePrefix+>;movl (%esi), %eax;addl -(%ebp), %eax;cmpl %ecx, (%eax)": 1,
                "calll - <wcslen>;testl %eax, %eax;popl %ecx;jbe - <RtlRemoveUnicodePrefix+>;movl -(%ebp), %ecx": 1,
                "leal (%edi,%eax,), %edx;addl %ebx, %ecx;cmpl %ecx, %edx;ja - <RtlRemoveUnicodePrefix+>;movl -(%ebp), %esi": 1,
                "andl $, %ecx;xorw %cx, -(%edi);movl (%esi), %esi;leal (%eax,%eax), %ecx;movl %ecx, %eax": 1,
                "jmp - <RtlRemoveUnicodePrefix+>;addl %edi, %edx;movl %edx, -(%ebp);pushl $;addl $, %edx": 1,
                "addl $, %esi;leal (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi;movl (%esi), %eax": 1,
                "cmpl %ecx, %eax;movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;movl %edi, %eax;subl %ebx, %eax": 1,
                "movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;movl %edi, %eax;subl %ebx, %eax;movl %eax, (%ebx)": 1,
                "movl %eax, -(%ebp);movl $, %eax;movl $, (%esp);pushl %eax;pushl $": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <RtlRemoveUnicodePrefix+>;movl -(%ebp), %esi;andl $, (%edi)": 1,
                "testl %ebx, %ebx;je  <RtlRemoveUnicodePrefix+>;movl -(%ebp), %esi;andl $, (%edi);testl %esi, %esi": 1,
                "jl  <RtlRemoveUnicodePrefix+>;movzwl (%esi), %eax;shrl %eax;leal (%eax,%eax), %esi;movl %eax, -(%ebp)": 1,
                "movl %eax, %ecx;movl -(%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebx), %ecx": 1,
                "movl $, -(%ebp);calll - <KeWaitForSingleObject>;cmpw $, (%edi);je  <RtlRemoveUnicodePrefix+>;incl -(%ebp)": 1,
                "je  <RtlRemoveUnicodePrefix+>;incl -(%ebp);movl -(%ebp), %eax;cmpl (%edi), %eax;jle - <RtlRemoveUnicodePrefix+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;leal (%edi), %ecx;calll - <wcsncmp+>;popl %edi": 1,
                "testb $, %al;leal (%edx), %esi;jne  <RtlRemoveUnicodePrefix+>;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);jne  <RtlRemoveUnicodePrefix+>;pushl %eax;pushl %esi": 1,
                "jl  <IoCheckFunctionAccess+>;pushl (%esi);pushl %esi;calll - <IoGetAttachedDevice+>;pushl %esi": 1,
                "movl %edx, -(%ebp);ja  <RtlRemoveUnicodePrefix+>;jb  <IoGetDeviceProperty+>;cmpl %eax, %edi;jb  <IoGetDeviceProperty+>": 1,
                "movl %eax, -(%ebp);xorl %eax, %eax;cmpl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "sbbl -(%ebp), %ebx;shrdl $, %ebx, %edi;leal (%eax,%edi,), %eax;shrl $, %ebx;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);calll - <MmForceSectionClosed+>;movl -(%ebp), %ebx;pushl $;pushl %ebx": 1,
                "shrdl $, %ebx, %edi;leal (%eax,%edi,), %eax;shrl $, %ebx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "je  <RtlRemoveUnicodePrefix+>;pushl (%esi);pushl %esi;calll - <IoGetAttachedDevice+>;pushl %esi": 1,
                "jne - <RtlRemoveUnicodePrefix+>;cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ebx;movl $, %esi": 1,
                "je - <RtlRemoveUnicodePrefix+>;movl (%eax), %eax;movl (%esi), %ecx;cmpl (%eax), %ecx;je - <RtlRemoveUnicodePrefix+>": 1,
                "pushl %edi;pushl %eax;calll  <MmPrefetchPages+>;movl %eax, %ebx;jmp - <SeTokenIsWriteRestricted+>": 1,
                "jmp  <MmPrefetchPages+>;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb $, (%ebp);movl %ebx, -(%ebp)": 1,
                "shll $, %eax;pushl %eax;xorl %esi, %esi;pushl %esi;calll - <ExAllocatePoolWithTag>": 2,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);jbe  <MmPrefetchPages+>;movl (%ebp), %ebx;movl %eax, %esi": 1,
                "jne - <MmPrefetchPages+>;cmpl $, -(%ebp);jne  <IoGetDeviceProperty+>;pushl $;pushl -(%ebp)": 1,
                "movl %esp, %ebp;movl , %eax;pushl %esi;movl (%ebp), %esi;leal (%esi,%esi), %ecx": 1,
                "cmpl %edi, %eax;je  <IoCheckFunctionAccess+>;cmpl %edi, ;je  <MmPrefetchPages+>;movl (%eax), %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <MmPrefetchPages+>;pushl %edi;pushl %edi": 1,
                "retl $;movl $, %esi;jmp - <MmPrefetchPages+>;xorl %esi, %esi;cmpl %esi, -(%ebp)": 1,
                "xorl %esi, %esi;cmpl %esi, -(%ebp);jne  <MmPrefetchPages+>;movl (%ebp), %eax;pushl $": 1,
                "jl - <RtlRemoveUnicodePrefix+>;movl $, -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;movl (%ebp), %eax;addl $, %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;xorl %esi, %esi": 1,
                "pushl %esi;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %esi;leal -(%ebp), %eax": 6,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 34,
                "andb $, %al;movb %al, (%ecx);xorl %edi, %edi;pushl (%ebp);calll - <ZwClose>": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi;popl %esi": 2,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 30,
                "pushl %ebx;pushl %ebx;pushl $;pushl %esi;pushl -(%ebp)": 1,
                "cmpl $, %edi;jne - <MmPrefetchPages+>;jmp - <MmPrefetchPages+>;nop;nop": 1,
                "pushl %edi;xorl %edi, %edi;cmpl $, %eax;movl %edi, -(%ebp);jae  <RtlUpperString+>": 1,
                "movl $, %ebx;pushl %edi;movl $, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl (%edi);leal -(%ebp), %eax;pushl -(%ebp);movl $, -(%ebp);pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);movl $, -(%ebp);pushl -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl -(%ebp);movl $, -(%ebp);pushl -(%ebp);movl %esi, -(%ebp);pushl %esi": 1,
                "jl  <IoCheckFunctionAccess+>;pushl %esi;leal (%ebp), %eax;pushl %eax;pushl %esi": 1,
                "cmpl %esi, -(%ebp);jl  <IoCheckFunctionAccess+>;movl (%edi), %eax;pushl %esi;leal (%ebp), %ecx": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl %esi, (%ecx);pushl (%eax);calll - <ZwClose>": 1,
                "movl %eax, (%eax);popl %edi;popl %ebp;retl $;nop": 1,
                "addl $, %eax;movl (%eax), %ecx;movl %ecx, (%ebx);movl (%eax), %ecx;movl %ecx, (%ebx)": 1,
                "shll $, %esi;pushl %esi;pushl $;movl $, (%ebx);calll - <ExAllocatePoolWithTag>": 1,
                "je  <IoCheckFunctionAccess+>;movl %edi, (%ebx);movl %edx, %edi;movl %esi, %ecx;movl %ecx, %edx": 1,
                "addl %eax, %ecx;addl %ecx, %eax;addl %esi, %edx;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "pushl %ecx;pushl %eax;movl %eax, -(%ebp);calll - <wcsncmp+>;testl %eax, %eax": 1,
                "movl %eax, (%ebx);movb %al, (%ebp);jne  <MmPrefetchPages+>;testb $, (%esi);je  <MmPrefetchPages+>": 1,
                "je - <MmPrefetchPages+>;cmpb $, (%ebp);jne - <RtlRemoveUnicodePrefix+>;testl %edi, %edi;je  <MmPrefetchPages+>": 1,
                "movl %ebx, (%edx,%ecx);movl -(%ebp), %edx;movl %edx, (%ecx);movl -(%ebp), %edx;movl %eax, (%edx,%ecx)": 1,
                "cmpl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl -(%ebp);calll - <MmPrefetchPages>": 1,
                "calll - <MmPrefetchPages>;movl %eax, (%ebp);cmpl $, -(%ebp);je  <MmPrefetchPages+>;movl -(%ebp), %ecx": 1,
                "movl -(%esi), %ecx;addl %ebx, %ecx;pushl %ecx;pushl (%eax);calll - <MmPrefetchPages+>": 1,
                "xorl %eax, %eax;popl %ebx;popl %edi;leave;retl $": 2,
                "movl %ebx, -(%ebp);jbe  <MmPrefetchPages+>;movl %ebx, -(%ebp);leal (%eax), %ebx;movl -(%ebx), %esi": 1,
                "testl %eax, %eax;jl  <MmPrefetchPages+>;movl -(%ebp), %eax;cmpl (%ebx), %eax;jne  <RtlUpperString+>": 1,
                "movl %edx, (%ecx);jl  <RtlUpperString+>;movl -(%ebp), %eax;testl %eax, %eax;je  <RtlUpperString+>": 1,
                "movl (%ebp), %esi;leal -(%eax), %ecx;movw %cx, (%esi);je  <RtlOemToUnicodeN+>;pushl %eax": 1,
                "pushl %eax;movzwl (%esi), %eax;pushl %eax;pushl (%esi);calll  <RtlOemToUnicodeN>": 1,
                "popl %edi;sbbl %eax, %eax;popl %esi;andl $, %eax;popl %ebx": 5,
                "jmp  <IoCheckFunctionAccess+>;movl %esi, %edi;jmp - <RtlOemToUnicodeN+>;testl %esi, %esi;movl (%ebp), %ecx": 1,
                "jmp  <RtlOemToUnicodeN+>;andw $, (%ecx);movl (%ebp), %esi;incl %ecx;incl %ecx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je - <RtlOemToUnicodeN+>;subl %ebx, %ecx;movl %ecx, (%eax)": 1,
                "decl %edx;addb %bl, (%eax,%eax);addb %dl, (%eax);decl %ebx;addb %al, (%eax,%eax)": 1,
                "movw %bx, (%ecx);movzbl (%eax), %ebx;movw (%edx,%ebx,), %bx;movw %bx, (%ecx);jmp - <RtlOemToUnicodeN+>": 1,
                "movw (%edx,%ebx,), %bx;movw %bx, (%ecx);jmp - <RtlOemToUnicodeN+>;nop;nop": 1,
                "andl $, -(%ebp);pushl $;popl %ecx;movl (%ebp), %esi;leal -(%ebp), %edi": 1,
                "jne  <FsRtlDeleteKeyFromTunnelCache+>;cmpl %edi, -(%ebp);je  <IoWMIRegistrationControl+>;cmpl %edi, -(%ebp);je  <IoWMIRegistrationControl+>": 1,
                "movl %eax, (%edi);movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "pushl %edi;calll - <SePrivilegeCheck>;movb %al, (%esi);movzbl %al, %eax;popl %edi": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %eax, %eax;cmpb %al, (%esi);je  <RtlOemToUnicodeN+>": 1,
                "movb (%ebx), %al;movb %al, (%ebx);movb (%ebx), %al;movb %al, (%ebx);movl (%ebp), %ecx": 4,
                "movb %al, (%ebx);movl (%ebp), %ecx;testl %ecx, %ecx;je  <RtlOemToUnicodeN+>;movl , %eax": 1,
                "cmpl $, (%ebp);jne  <IoCheckFunctionAccess+>;cmpl $, (%ebp);jne  <IoCheckFunctionAccess+>;pushl $": 1,
                "movl (%edi), %esi;subl %ecx, %esi;movl (%edi), %edi;sbbl %eax, %edi;movl -(%ebp), %ecx": 1,
                "shrl %eax;movl -(%ebp), %ecx;andw $, (%ecx,%eax,);movl %edx, (%ebx);orl $-, -(%ebp)": 1,
                "andw $, (%ecx,%eax,);movl %edx, (%ebx);orl $-, -(%ebp);pushl -(%ebp);calll - <RtlUpcaseUnicodeString+>": 1,
                "movl -(%ebp), %ecx;calll - <IoQueueWorkItem+>;calll - <_CIsqrt+>;retl $;movl (%ebp), %ecx": 1,
                "je - <SeQuerySecurityDescriptorInfo+>;pushl -(%ebp);pushl %ecx;calll *%eax;jmp - <SeQuerySecurityDescriptorInfo+>": 1,
                "pushl %ecx;pushl %edx;calll *%eax;orl $-, (%ebx);jmp - <NtFreeVirtualMemory+>": 1,
                "calll *%eax;orl $-, (%ebx);jmp - <NtFreeVirtualMemory+>;movb $, -(%ebp);jmp  <FsRtlNotifyFilterChangeDirectory+>": 1,
                "subl -(%ebp), %ecx;cmpl $, %ecx;jmp - <ObOpenObjectByName+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "cmpl $, %ecx;jmp - <ObOpenObjectByName+>;pushl -(%ebp);pushl -(%ebp);calll - <KeSaveFloatingPointState+>": 1,
                "je - <NtOpenProcessTokenEx+>;movl $, -(%ebp);shrl $, %eax;andl $, %eax;movl (,%eax,), %eax": 1,
                "jmp - <NtDeleteAtom+>;movzbl (%edx), %esi;movw (%ecx,%esi,), %si;movw %si, (%eax);jmp  <NtDeleteAtom+>": 1,
                "jmp  <NtDeleteAtom+>;movzbl (%edx), %esi;movw (%ecx,%esi,), %si;movw %si, (%eax);jmp - <NtDeleteAtom+>": 1,
                "leal (%ebx), %eax;movl %eax, (%eax);movl %eax, (%eax);movb $, -(%ebp);movl %esi, (%edi)": 1,
                "pushl %eax;calll - <IoAllocateIrp>;movl %eax, %esi;xorl %ecx, %ecx;cmpl %ecx, %esi": 1,
                "movl %edi, (%eax);pushl $;pushl -(%ebp);pushl -(%ebp);pushl %ecx": 1,
                "pushl %eax;pushl (%ebp);calll - <KeWaitForSingleObject>;cmpl $, %eax;je  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %eax;cmpl %edi, %esi;jg  <NtAdjustPrivilegesToken+>;cmpl $-, %esi": 1,
                "cmpl %ecx, (%ebp);movl %ecx, (%edx);jb  <IoCheckFunctionAccess+>;movl (%esi), %ecx;movzwl %ax, %eax": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movzwl (%esi), %eax;movl %eax, (%edi);movzwl (%esi), %eax": 1,
                "movzwl (%esi), %eax;movl %eax, (%edi);movzwl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax": 1,
                "movl %eax, %ecx;shrl $, %ecx;leal (%ebx), %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "shrl $, %ecx;leal (%ebx), %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx": 7,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %edi;movl -(%ebp), %esi;jmp - <NtQueryInformationToken+>": 1,
                "pushl (%ebp);calll  <NtAdjustPrivilegesToken+>;popl %ebp;retl $;andl $, (%ebx)": 1,
                "movl (%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);jmp - <NtClose+>;cmpl %esi, (%eax)": 1,
                "jmp - <IoCheckShareAccess+>;xorl %eax, %eax;jmp - <RtlAreAllAccessesGranted+>;movl $, %edx;movl %edx, -(%ebp)": 1,
                "je  <ObReferenceObjectByName+>;pushl -(%ebp);pushl %esi;calll *%eax;jmp  <ObReferenceObjectByName+>": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;jmp - <NtWriteFile+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;jmp - <NtWriteFile+>;cmpl %esi, (%ebp);je - <NtWriteFile+>": 1,
                "je - <NtWriteFile+>;jmp  <IoCheckFunctionAccess+>;cmpl %esi, (%ebp);je - <NtReadFile+>;jmp  <IoCheckFunctionAccess+>": 1,
                "testl %eax, %eax;jbe  <ProbeForRead+>;movzbl , %esi;movl (%edx), %edx;movsbl (%edx,%ecx), %edi": 1,
                "jbe  <ProbeForRead+>;movzbl , %esi;movl (%edx), %edx;movsbl (%edx,%ecx), %edi;cmpl %esi, %edi": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, (%edi);orl $-, -(%ebp);xorl %esi, %esi": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je - <RtlUpcaseUnicodeString+>;movl (%ebp), %ecx;addl %ecx, %ecx": 1,
                "jmp - <RtlUpcaseUnicodeString+>;movl $, -(%ebp);jmp - <RtlLookupAtomInAtomTable+>;movl (%ebp), %eax;cmpl %ebx, %eax": 1,
                "cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %eax": 1,
                "testl %eax, %eax;jne  <IoCheckFunctionAccess+>;xorb %al, %al;popl %ebx;leave": 1,
                "xorb %al, %al;popl %ebx;leave;retl $;pushl $": 1,
                "xorl %ecx, %ecx;jmp - <RtlAreAnyAccessesGranted+>;cmpl $, (%ebp);je - <ProbeForWrite+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movw (%ecx), %ax;incl (%ecx);cmpw (%ecx), %ax;jb - <SeDeleteAccessState+>;incl (%ecx)": 1,
                "movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %edi;jae  <IoCheckFunctionAccess+>;movl (%edi), %eax": 1,
                "movl (%edi), %eax;movl %eax, (%edi);orl $-, -(%ebp);cmpl %ebx, (%ebp);jle  <IoCheckFunctionAccess+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %ebx, -(%ebp);jl  <RtlAreAnyAccessesGranted+>": 1,
                "movl (%ebp), %edi;movl %ecx, (%edi);movl (%ebx), %ecx;movl %ecx, (%edi);movl %edx, (%edi)": 2,
                "movzwl -(%ebp), %ecx;movl -(%ebp), %edx;addl %edx, %ecx;cmpl %edx, %ecx;jb  <IoGetDeviceProperty+>": 1,
                "cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;je  <RtlAreAnyAccessesGranted+>;cmpl $-, %eax;je  <RtlAreAnyAccessesGranted+>;cmpl $-, %eax": 1,
                "movl $, %edi;jmp - <RtlAddAtomToAtomTable+>;movl (%ebp), %eax;movl (%eax), %edx;testl %edx, %edx": 1,
                "testl %edx, %edx;movl %edx, (%ebp);jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;jmp - <RtlAreAllAccessesGranted+>": 1,
                "jl  <IoOpenDeviceRegistryKey+>;cmpl %ebx, %eax;ja  <IoOpenDeviceRegistryKey+>;movl (%ebp), %ecx;pushl %esi": 1,
                "cmpl $-, %eax;jne  <FsRtlNotifyFilterChangeDirectory+>;testb $, (%esi);jne - <RtlRandom+>;popl %esi": 1,
                "calll  <ObCheckCreateObjectAccess+>;andl $, (%esi);jmp - <ObOpenObjectByName+>;leal (%ecx), %eax;jmp  <ObCheckCreateObjectAccess+>": 1,
                "pushl %esi;pushl %edi;je  <RtlAreAnyAccessesGranted+>;cmpw $, %cx;jne  <IoCheckFunctionAccess+>": 1,
                "testl %eax, %eax;je  <ObCheckCreateObjectAccess+>;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl (%ebp);movl (%ebp), %esi": 2,
                "calll - <ObOpenObjectByName+>;movl %eax, %edi;movl (%esi), %eax;testl %eax, %eax;je  <RtlAreAnyAccessesGranted+>": 1,
                "pushl (%ebp);pushl %esi;calll *%eax;xorl %eax, %eax;testl %edi, %edi": 1,
                "testb $, (%eax);jne  <PsGetProcessExitTime+>;pushl (%ebp);pushl %ebx;movl (%ebp), %esi": 1,
                "incl %ecx;addl $, %edx;cmpl (%esi), %ecx;jb - <RtlAreAnyAccessesGranted+>;movl (%ebp), %ebx": 1,
                "andl $-, %eax;addl $, %eax;movl %eax, %edi;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "pushl %ebx;pushl %ecx;calll *%eax;jmp - <NtFreeVirtualMemory+>;movl (%ebp), %eax": 1,
                "calll *%eax;jmp - <NtFreeVirtualMemory+>;movl (%ebp), %eax;pushl %ebx;pushl %eax": 1,
                "movl %eax, (%esi);movl (%ebp), %ebx;testb $, %bl;jne  <IoCheckFunctionAccess+>;movl , %eax": 2,
                "movl %eax, -(%ebp);movl -(%ebp), %ebx;cmpl %edi, (%ebx);jne  <IoCheckFunctionAccess+>;orl $-, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;pushl %ebx;calll - <IoGetRelatedDeviceObject>;movl %eax, %edi;movl %edi, -(%ebp)": 2,
                "movl %edi, -(%ebp);movl (%edi), %eax;movl (%eax), %eax;testl %eax, %eax;je  <IoGetDeviceProperty+>": 1,
                "pushl %eax;pushl -(%ebp);pushl ;xorl %edi, %edi;pushl %edi": 1,
                "pushl ;xorl %edi, %edi;pushl %edi;pushl (%ebp);calll - <ObReferenceObjectByHandle>": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);orl $-, -(%ebp);movl -(%ebp), %ebx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);movl -(%ebp), %ecx;pushl (%ecx)": 1,
                "je  <NtUnlockFile+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "movw %si, (%eax);movzbl (%edx), %esi;movw (%ecx,%esi,), %si;movw %si, (%eax);jmp  <NtUnlockFile+>": 1,
                "movzbl (%edx), %esi;movw (%ecx,%esi,), %si;movw %si, (%eax);jmp  <NtUnlockFile+>;movzbl (%edx), %esi": 3,
                "jmp - <NtUnlockFile+>;subl %edi, %ebx;subl $, %eax;movl %edi, %esi;subl %edi, %edx": 1,
                "testl %ebx, %ebx;je - <RtlDeleteAtomFromAtomTable+>;movl (%ebx), %eax;testl $, %eax;jne - <RtlDeleteAtomFromAtomTable+>": 1,
                "shrl $, %ecx;cmpl (%ebx), %ecx;jb - <RtlDeleteAtomFromAtomTable+>;movl -(%ebp), %ecx;shrl $, %ecx": 1,
                "cmpl (%ebx), %ecx;ja - <RtlDeleteAtomFromAtomTable+>;shrl $, %eax;andl $, %eax;cmpl $, %eax": 1,
                "cmpl $, %eax;je - <SeQuerySecurityDescriptorInfo+>;cmpl $, (%ebp);je  <RtlGetFirstRange+>;cmpl $, %eax": 1,
                "movl %esi, %edi;shrl $, %edi;andl $, %edi;subl $, %edi;shrl $, %esi": 1,
                "andl $, %edi;subl $, %edi;shrl $, %esi;movl $, %ecx;andl %ecx, %esi": 1,
                "shrl $, %esi;movl $, %ecx;andl %ecx, %esi;movl $, %edx;subl %edx, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp);pushl %edi": 4,
                "calll - <_CIsqrt+>;andl $, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb (%eax), %al": 2,
                "movl %esi, -(%ebp);cmpl %ebx, %esi;je  <FsRtlNotifyCleanup+>;movw (%esi), %ax;orw $, %ax": 1,
                "movl %eax, (%ecx);leal (%esi), %edx;movl %edx, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "je  <FsRtlNotifyCleanup+>;movl (%esi), %eax;movl %eax, -(%ebp);pushl %ebx;pushl %esi": 1,
                "popl %esi;popl %ebx;popl %ebp;retl $;xorb %al, %al": 5,
                "pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <MmUnmapViewOfSection+>;cmpb $, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl %ebx, (%edi);jmp - <MmUnmapViewOfSection+>;incl -(%ebp);cmpl $, -(%ebp)": 1,
                "jmp - <MmUnmapViewOfSection+>;testl %eax, %eax;je - <MmUnmapViewOfSection+>;addl %ebx, %eax;jmp - <MmUnmapViewOfSection+>": 1,
                "je - <SeAssignSecurity+>;cmpb %bl, -(%ebp);je - <SeAssignSecurity+>;jmp - <SeAssignSecurity+>;nop": 1,
                "cmpw %di, (%ecx);movl %edx, -(%ebp);movl %edi, -(%ebp);leal (%ecx), %ebx;jbe  <FsRtlNotifyCleanup+>": 1,
                "decl %eax;je  <IoCheckFunctionAccess+>;decl %eax;jne  <FsRtlNotifyCleanup+>;cmpb $, (%ebp)": 1,
                "notb %cl;andb %cl, (%eax);movl (%ebp), %eax;incw (%eax);movl %eax, %esi": 1,
                "movl (%ebp), %eax;incw (%eax);movl %eax, %esi;movl -(%ebp), %eax;addl %eax, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);jae  <FsRtlNotifyCleanup+>;xorl %edi, %edi;jmp - <FsRtlNotifyCleanup+>;cmpl $, %edx": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %edi;calll - <RtlValidSid>;testb %al, %al": 1,
                "cmpb $, %al;ja  <FsRtlNotifyCleanup+>;movl (%ebp), %ecx;cmpl $, %ecx;ja  <FsRtlNotifyCleanup+>": 1,
                "ja  <FsRtlNotifyCleanup+>;movb %cl, (%ebp);movl (%ebp), %eax;andl $-, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "addl $, %eax;pushl %edi;pushl %eax;movzbl (%edi), %eax;leal (,%eax,), %eax": 1,
                "movl $, %eax;jmp - <FsRtlNotifyCleanup+>;movl $, %eax;jmp - <FsRtlNotifyCleanup+>;nop": 1,
                "calll - <FsRtlNotifyCleanup+>;popl %ebp;retl $;nop;nop": 3,
                "movl (%edi), %eax;movl %eax, (%ebx);movb (%edi), %al;movb %al, (%ebx);movb (%edi), %al": 1,
                "je  <IoCheckFunctionAccess+>;xorl %eax, %eax;popl %ebp;retl $;nop": 1,
                "movl (%eax), %eax;movl (%eax), %ebx;movl , %eax;movzbl (%eax), %eax;addl %ecx, %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl %edi, -(%ebp);testb $, %bl;jne  <IoCheckFunctionAccess+>;movl , %eax": 1,
                "pushl %edi;pushl %esi;calll - <ObReferenceObjectByHandle>;cmpl %edi, %eax;jl  <PsRestoreImpersonation+>": 1,
                "je  <IoCheckFunctionAccess+>;movl %edi, ;movl %esi, %ecx;calll *;testb $-, (%ebx)": 1,
                "movl %esi, %ecx;calll *;testb $-, (%ebx);je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax": 1,
                "jl  <PsRestoreImpersonation+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %ecx;cmpl %esi, (%ecx);jne  <PsRestoreImpersonation+>;pushl $": 1,
                "je  <PsRestoreImpersonation+>;movl $, %edi;pushl -(%ebp);pushl %esi;pushl %edx": 1,
                "jbe  <PsRestoreImpersonation+>;leal (%eax,%ecx,), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "pushl -(%ebp);pushl (%ebp);pushl (%ebp);pushl (%eax);pushl -(%ebp)": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax": 5,
                "andl $, -(%ebp);jmp - <CcUnpinDataForThread+>;nop;nop;nop": 1,
                "andb $, %cl;cmpb $, %cl;jbe  <PsRestoreImpersonation+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "jbe  <PsRestoreImpersonation+>;movl (%eax), %eax;testl %eax, %eax;je  <NtAdjustPrivilegesToken+>;leal (%eax), %ecx": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;andl $, %esi;pushl %edi": 1,
                "je - <NtRequestWaitReplyPort+>;jmp  <IoCheckFunctionAccess+>;movswl -(%ebp), %eax;movswl -(%ebp), %ecx;subl $, %ecx": 1,
                "jb  <IoCheckFunctionAccess+>;movswl -(%ebp), %eax;addl (%ebp), %eax;cmpl %edx, %eax;jae - <NtRequestWaitReplyPort+>": 1,
                "movl -(%ebp), %ecx;pushl (%ecx);pushl (%ebp);pushl (%eax);jmp - <PsRestoreImpersonation+>": 1,
                "jae  <IoCheckFunctionAccess+>;movb (%ecx), %al;movb %al, (%ecx);orl $-, -(%ebp);movl (%ebp), %eax": 1,
                "decl (%eax);pushl $;pushl (%edi);calll - <ExAcquireResourceSharedLite>;movl %fs:, %eax": 1,
                "movl (%esi), %eax;pushl (%eax);movl (%edi), %eax;pushl (%eax);calll - <RtlEqualSid>": 1,
                "pushl (%eax);calll - <RtlEqualSid>;testb %al, %al;je  <PsRestoreImpersonation+>;movl (%esi), %eax": 1,
                "testb %al, %al;jne  <PsRestoreImpersonation+>;movl (%esi), %eax;decl %eax;pushl %eax": 1,
                "decl %eax;pushl %eax;movl (%esi), %eax;addl %ebx, %eax;pushl %eax": 1,
                "je  <PsRestoreImpersonation+>;pushl (%esi);pushl (%esi);pushl (%edi);pushl (%edi)": 1,
                "movl %fs:, %eax;incl (%eax);jne  <PsRestoreImpersonation+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "incl (%eax);jne  <PsRestoreImpersonation+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>": 1,
                "testb %al, %al;jne - <PsRestoreImpersonation+>;jmp - <PsRestoreImpersonation+>;nop;nop": 1,
                "cmpl -(%eax), %edx;jne  <PsRestoreImpersonation+>;movl (%esi,%eax), %edx;cmpl (%eax), %edx;jne  <PsRestoreImpersonation+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);testb %al, %al;je  <NtFindAtom+>;testl %edi, %edi": 1,
                "je  <NtFindAtom+>;testl %edi, %edi;je  <NtFindAtom+>;andl $, -(%ebp);movl , %eax": 1,
                "cmpl %eax, %edi;jae  <IoCheckFunctionAccess+>;movw (%edi), %ax;movw %ax, (%edi);orl $-, -(%ebp)": 1,
                "jl  <NtFindAtom+>;testl %edi, %edi;je  <NtFindAtom+>;movl $, -(%ebp);movw -(%ebp), %ax": 1,
                "testl %edi, %edi;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %edi;testl %edi, %edi;je - <RtlQueryAtomInAtomTable+>": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %edi;testl %edi, %edi;je - <RtlQueryAtomInAtomTable+>;movzwl %ax, %eax": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl %eax, %ecx;leal -(%ebp), %esi;movl %ecx, %edx": 1,
                "nop;andl (%eax), %eax;andl $, %eax;addb %cl, %ah;int": 1,
                "pushl %esi;pushl %edi;movb $, -(%ebp);movl %fs:, %eax;movl (%eax), %edi": 1,
                "calll - <NtFindAtom+>;testb %al, %al;je  <IoCheckFunctionAccess+>;movl $, -(%ebp);jmp - <NtAllocateVirtualMemory+>": 1,
                "jne  <RtlGeneratedotName+>;cmpl $, %edi;jne - <NtQueryInformationToken+>;pushl $;leal -(%ebp), %eax": 1,
                "shll $, %eax;movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax": 1,
                "xorl %edi, %edi;xorl %esi, %esi;cmpl %edi, (%ebp);jbe  <NtFindAtom+>;movl (%ebp), %eax": 1,
                "popl %esi;popl %ebp;retl $;cmpw $, %ax;movzwl -(%ebp), %eax": 1,
                "cmpw $, %ax;movzwl -(%ebp), %eax;jne  <NtAdjustPrivilegesToken+>;movl (%edi,%eax,), %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl %esi;calll *(%esi);testl %eax, %eax;je  <NtAdjustPrivilegesToken+>": 1,
                "movl %eax, (%ebp);pushl (%ebp);pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "pushl (%ebp);pushl %esi;calll *%eax;jmp  <ObCheckCreateObjectAccess+>;movb $, %cl": 1,
                "movb $, %cl;movb $, (%esi);calll *;jmp - <RtlAddAtomToAtomTable+>;cmpl $, (%eax)": 1,
                "leal (%eax,%eax), %esi;andl $-, %esi;movl $, %ebx;pushl %ebx;addl $, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <ZwQueryValueKey>;movl %eax, %esi": 1,
                "cmpl $, %esi;jne  <RtlValidSecurityDescriptor+>;pushl %ebx;pushl -(%ebp);pushl $": 1,
                "pushl %ebx;pushl -(%ebp);pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %edi": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %edi;pushl $;pushl %eax": 3,
                "leal -(%ebp), %eax;pushl %edi;pushl $;pushl %eax;pushl (%ebp)": 1,
                "pushl %ecx;andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;leal -(%ebp), %eax": 1,
                "shrl $, %eax;movw %ax, (%esi);orw $, %ax;movw %ax, (%esi);movb $, %al": 1,
                "movl -(%ebp), %eax;movl %ebx, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <NtFindAtom+>": 1,
                "movl %ebx, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <NtFindAtom+>;movw (%ebx), %cx": 1,
                "pushl %eax;calll - <SeCreateAccessState>;cmpl %esi, %eax;jl  <NtOpenThread+>;pushl -(%ebp)": 1,
                "calll - <SeSinglePrivilegeCheck>;testb %al, %al;je  <NtOpenThread+>;movl -(%ebp), %eax;testl $, %eax": 1,
                "je  <ObReferenceObjectByName+>;leal -(%ebp), %eax;pushl %eax;cmpl %esi, -(%ebp);jne  <ObReferenceObjectByName+>": 1,
                "cmpl %esi, -(%ebp);jne  <ObReferenceObjectByName+>;pushl -(%ebp);calll - <PsLookupThreadByThreadId>;movl %eax, %edi": 1,
                "calll - <PsLookupThreadByThreadId>;movl %eax, %edi;cmpl %esi, %edi;jl  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "je  <NtOpenThread+>;andl $, %eax;decl %eax;je  <NtOpenThread+>;decl %eax": 1,
                "je  <NtOpenThread+>;decl %eax;jne  <NtOpenThread+>;movl (%esi), %eax;pushl %edi": 1,
                "calll - <ExFreePoolWithTag>;pushl %edi;pushl %esi;calll - <ExFreePoolWithTag>;popl %edi": 1,
                "movl %esi, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp);movl (%esi), %ecx;movl (%ecx), %ecx": 1,
                "pushl %esi;calll - <NtOpenThread+>;pushl %esi;calll - <NtOpenThread+>;calll - <_CIsqrt+>": 1,
                "pushl %esi;calll - <NtOpenThread+>;calll - <_CIsqrt+>;retl $;cmpl $, (%ebp)": 1,
                "andb $, (%eax);pushl %ebx;movl , %ebx;jmp - <NtOpenThread+>;nop": 1,
                "movl %eax, (%eax);leal (%esi), %eax;movl %esi, (%edi);pushl %eax;movl %edi, (%esi)": 1,
                "movl %edx, (%esi);movl %eax, (%esi);movl (%ebp), %edi;leal (%esi), %eax;movl (%eax), %ecx": 1,
                "je  <NtQueryInformationAtom+>;movl %eax, (%eax);movl %eax, (%eax);movb $, %cl;calll *": 1,
                "movl %eax, (%eax);movb $, %cl;calll *;testl %ebx, (%edi);movb %al, %cl": 1,
                "movl $, %eax;andl %eax, %ecx;cmpl %eax, %ecx;je - <NtOpenThread+>;movl $, %eax": 1,
                "pushl $;pushl $;pushl (%ebp);calll  <NtOpenThread+>;popl %ebp": 1,
                "pushl %edi;movl %ebx, (%esi);calll - <ExAllocatePoolWithQuotaTag>;movl %eax, %ecx;cmpl %ebx, %ecx": 1,
                "je  <NtQueryInformationAtom+>;movl %fs:, %eax;cmpb $, (%eax);je  <IoCheckFunctionAccess+>;movl %fs:, %eax": 1,
                "je  <NtVdmControl+>;movl %ebx, -(%ebp);pushl $;pushl $;movl (%ebp), %esi": 1,
                "calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;jl  <NtOpenThread+>;movl %ebx, -(%ebp);cmpb $, -(%ebp)": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb (%eax), %al": 1,
                "movl (%edi), %eax;movl %eax, (%edi);movl (%edi), %eax;movl %eax, (%edi);cmpl %esi, (%ebp)": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;cmpl %esi, %eax;jl  <NtNotifyChangeDirectoryFile+>;movl -(%ebp), %ebx": 1,
                "cmpl %esi, (%ebx);jne  <IoCheckFunctionAccess+>;cmpl %esi, (%ebp);je  <NtNotifyChangeDirectoryFile+>;pushl %esi": 1,
                "movb %al, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%esi);movl (%ebp), %eax": 1,
                "movl %eax, (%edi);movl (%ebp), %eax;movl %eax, (%edi);cmpb $, (%ebp);jne - <RtlGetDefaultCodePage+>": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);xorl %edx, %edx;cmpl %edx, %esi;jne  <FsRtlNotifyFilterChangeDirectory+>": 1,
                "jne  <FsRtlNotifyFilterChangeDirectory+>;pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;movl %esi, -(%ebp);pushl $": 2,
                "movl %eax, %esi;movl %esi, -(%ebp);pushl $;popl %ecx;xorl %eax, %eax": 2,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %edx": 1,
                "movzbw (%esi), %ax;cmpw %ax, (%ecx);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "cmpw %ax, (%ecx);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %eax, (%esi);cmpb $, (%ebp)": 1,
                "jne  <FsRtlNotifyFilterChangeDirectory+>;movl (%edx), %eax;movl %eax, (%esi);movl (%ebx), %eax;movl (%eax), %eax": 1,
                "movl (%edx), %eax;movl %eax, (%esi);movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esi)": 1,
                "movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esi);leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl $, (%esi);xorl %edx, %edx;movl %esi, (%ebx);movl (%ebx), %eax;movb (%eax), %cl": 1,
                "orb $, %cl;movb %cl, (%eax);leal (%ebx), %eax;movl %eax, -(%ebp);leal (%esi), %ecx": 1,
                "andl $, (%ecx);calll - <ExReleaseFastMutexUnsafe>;xorl %edi, %edi;cmpl %edi, (%ebp);jne  <RtlUnicodeToMultiByteSize+>": 1,
                "movl (%ebx), %edi;testl %edi, %edi;jne  <IoCheckFunctionAccess+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "pushl (%esi);pushl (%esi);calll - <PsReturnProcessPagedPoolQuota>;movl (%esi), %eax;cmpl (%ebx), %eax": 1,
                "andl $, (%edi);andl $, (%edi);leal (%edi), %esi;movl (%esi), %ecx;movl (%esi), %eax": 1,
                "pushl %ebx;movl %ecx, (%esi);pushl %edi;movl %esi, (%ecx);andl $, (%eax)": 1,
                "movl -(%ebp), %eax;cmpl %esi, %ebx;je  <IoCheckFunctionAccess+>;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movb -(%ebp), %al;movb %al, (%ebx)": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movb -(%ebp), %al;movb %al, (%ebx);cmpb $, -(%ebp)": 2,
                "movb -(%ebp), %al;movb %al, (%ebx);cmpb $, -(%ebp);je  <FsRtlNotifyFilterChangeDirectory+>;movl %esi, (%ebx)": 1,
                "orw $, (%ebx);movl -(%ebp), %edi;movl (%ebp), %eax;movl %eax, (%edi);movl (%ebp), %eax": 1,
                "cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %edx;cmpl $, %edx;je  <RtlGeneratedotName+>": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebx), %edi;movl -(%ebp), %eax;cmpl $, (%eax);jne  <PsGetContextThread+>": 1,
                "jne  <PsGetContextThread+>;movl (%edi), %eax;pushl $;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl ;pushl $;pushl %eax;calll - <ObReferenceObjectByHandle>;movl %eax, %esi": 2,
                "xorl %esi, %esi;andl $, (%ebx);movl %esi, (%ebx);cmpl $, %esi;je  <IoCheckFunctionAccess+>": 1,
                "cmpl $, %esi;je  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);je  <FsRtlNotifyFilterChangeDirectory+>;movl (%ebp), %eax": 1,
                "movl -(%ebp), %ecx;calll - <IofCallDriver>;movl %eax, %esi;cmpb $, -(%ebp);jne - <FsRtlNotifyFilterChangeDirectory+>": 1,
                "movl %eax, (%eax);movb $, -(%ebp);jmp - <FsRtlNotifyFilterChangeDirectory+>;movl %edi, (%ebx);leal -(%ebp), %eax": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <FsRtlNotifyFilterChangeDirectory+>;nop": 1,
                "movl (%ebx,%edi,), %esi;testl %esi, %esi;je  <IoReportResourceUsage+>;pushl $;calll - <IoSetThreadHardErrorMode>": 1,
                "movl %edi, -(%ebp);pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "testl %eax, %eax;movl %eax, (%ebp);jl  <IoCheckFunctionAccess+>;pushl (%ebp);calll - <IoSetThreadHardErrorMode>": 1,
                "movl %ecx, -(%ebp);cmpl %esi, %eax;jl  <IoCheckFunctionAccess+>;movl %esi, (%ecx);jmp - <NtWriteFile+>": 1,
                "addl $, %ecx;xorl %ecx, %eax;andl $, %eax;negl %eax;sbbb %al, %al": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;cmpl %esi, %eax;je - <NtWriteFile+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl $-, (%ebp);je  <IoCheckFunctionAccess+>;cmpl $-, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax;addl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "addl %eax, (%ebp);xorl %edi, %edi;orl $-, -(%ebp);movl -(%ebp), %eax;subl %eax, (%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <KeSaveFloatingPointState+>;movl -(%ebp), %esi;jmp - <CcFastCopyRead+>": 1,
                "movl -(%ebp), %edx;cmpl %edi, %edx;je - <CcFastCopyRead+>;leal (%esi), %ecx;andl $, %ecx": 1,
                "decl -(%ebp);subl %eax, -(%ebp);addl %eax, (%ebp);addl %eax, -(%ebp);xorl %edi, %edi": 2,
                "movl -(%ebp), %esi;movl -(%ebp), %eax;jmp - <FsRtlNotifyFilterChangeDirectory+>;movl %edx, -(%ebp);jmp - <FsRtlNotifyFilterChangeDirectory+>": 1,
                "cmpl %ecx, %eax;ja  <NtMakePermanentObject+>;movl %eax, (%ebx);pushl %edi;pushl %esi": 1,
                "calll *;movl %edi, %ebx;negl %ebx;movl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp  <IoCheckFunctionAccess+>;movw (%esi), %cx;testb $, %cl;je - <MmUnmapViewOfSection+>;testb %ch, %ch": 1,
                "jne  <ObCheckCreateObjectAccess+>;testb $, (%ecx);jne  <MmLockPagableImageSection+>;testl %eax, %eax;jne  <ObCheckCreateObjectAccess+>": 1,
                "je - <SeAssignSecurity+>;jmp  <IoCheckFunctionAccess+>;decl (%ecx);jmp - <IoRemoveShareAccess+>;movl (%ebx), %eax": 1,
                "cmpb $, (%eax);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %eax, (%edi);jmp  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %esi;addl $, %esi;jmp  <FsRtlAddToTunnelCache+>;movl (%esi), %esi;jmp  <FsRtlFindInTunnelCache+>": 1,
                "orl $, (%ebx);jmp - <IoSetIoCompletion+>;cmpl $, (%ebp);je - <IoSetIoCompletion+>;cmpl $, (%ebp)": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;incl %edi;cmpl (%esi), %edi;jb - <FsRtlNotifyFilterChangeDirectory+>": 1,
                "pushl %edi;addl $, %eax;xorl %edi, %edi;cmpl %edi, (%esi);movl %eax, %ebx": 1,
                "movl %eax, (%esi);jmp  <RtlGeneratedotName+>;movl $, %eax;jmp  <RtlGeneratedotName+>;nop": 1,
                "pushl %eax;movb $, -(%ebp);calll - <KeQuerySystemTime>;movl , %eax;movl -(%ebp), %ebx": 1,
                "cmpl %edi, %ecx;jl  <FsRtlNotifyFilterChangeDirectory+>;jg  <FsRtlNotifyFilterChangeDirectory+>;cmpl %ebx, %edx;jb  <FsRtlNotifyFilterChangeDirectory+>": 1,
                "movzwl (%eax), %eax;cmpl , %eax;ja  <IoCheckFunctionAccess+>;popl %edi;popl %esi": 1,
                "cmpl , %eax;ja  <IoCheckFunctionAccess+>;popl %edi;popl %esi;popl %ebx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movb %al, -(%ebp);movb %al, (%esi);jne  <FsRtlFindInTunnelCache+>": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);jne  <FsRtlFindInTunnelCache+>;testb $, (%edi)": 1,
                "jne  <FsRtlFindInTunnelCache+>;testb $, (%edi);je  <FsRtlNotifyFilterChangeDirectory+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);pushl (%ebp);pushl %esi;calll  <IoCheckEaBufferValidity+>;testb %al, %al": 1,
                "jne  <PsGetProcessExitTime+>;movl -(%ebp), %eax;movl %eax, -(%ebp);cmpb $, -(%ebp);jne  <FsRtlFindInTunnelCache+>": 1,
                "jne  <FsRtlFindInTunnelCache+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "retl $;movl (%ebp), %edi;movl (%ebp), %esi;jmp - <FsRtlNotifyFilterChangeDirectory+>;nop": 1,
                "movl %eax, -(%ebp);leal (%ebx), %edi;jbe  <FsRtlNotifyFilterChangeDirectory+>;leal (%ebp), %eax;pushl %eax": 1,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 5,
                "calll - <FsRtlNotifyFilterChangeDirectory+>;cmpl $, %eax;je  <IoCheckFunctionAccess+>;testl %eax, %eax;jl  <FsRtlNotifyFilterChangeDirectory+>": 1,
                "movzbl %al, %eax;cmpl %eax, -(%ebp);ja  <FsRtlNotifyFilterChangeDirectory+>;movl %eax, -(%ebp);leal (%ebp), %eax": 1,
                "calll  <MmUnmapViewInSystemSpace+>;cmpl %ebx, %eax;jl  <IoCheckFunctionAccess+>;pushl %edi;movl (%ebp), %edi": 1,
                "addl $, %edi;pushl %edi;calll - <SeLockSubjectContext>;cmpl %ebx, (%ebp);je  <ObCheckCreateObjectAccess+>": 1,
                "cmpl %ebx, (%ebp);jge - <ObInsertObject+>;cmpb %bl, -(%ebp);jne  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>;nop;nop;nop": 5,
                "addl $, %edi;movl %edi, (%eax);movl %edx, (%esi);movb $, %al;popl %ebx": 1,
                "shrl $, %ecx;leal -(%eax), %edx;notl %edx;leal (%ecx,%eax), %ecx;andl %edx, %ecx": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <FsRtlNotifyFilterChangeDirectory+>": 1,
                "pushl (%ebp);calll - <FsRtlNotifyFilterChangeDirectory+>;testl %eax, %eax;setge %al;popl %ebp": 1,
                "retl $;pushl (%ebp);pushl %edi;calll - <ObCheckCreateObjectAccess+>;testb %al, %al": 1,
                "jmp - <SeCreateClientSecurity+>;pushl (%eax);pushl %esi;calll  <ObCheckCreateObjectAccess+>;testl %eax, %eax": 1,
                "je  <IoCheckFunctionAccess+>;orl $-, -(%ebp);testl %ebx, %ebx;jl  <ObCheckCreateObjectAccess+>;movl (%esi), %eax": 1,
                "calll - <RtlAreAnyAccessesGranted+>;jmp - <SeCreateClientSecurity+>;nop;nop;nop": 1,
                "pushl %ebx;pushl %edi;movl (%ebp), %edi;leal (%ebp), %eax;pushl %eax": 2,
                "pushl %esi;calll - <SeLockSubjectContext>;movl (%ebp), %ecx;movl (%edi), %eax;movl (%eax,%ecx,), %eax": 1,
                "calll - <SeFreePrivileges>;jmp - <RtlDeleteAtomFromAtomTable+>;nop;nop;nop": 1,
                "cmpl $-, %eax;movl %eax, (%ebp);je  <ObCheckCreateObjectAccess+>;movl %eax, %ebx;pushl %ebx": 1,
                "je  <ObCheckCreateObjectAccess+>;movl -(%ebp), %ecx;movl (%ecx), %eax;testl %eax, %eax;je  <ObCheckCreateObjectAccess+>": 1,
                "jne  <ObCheckCreateObjectAccess+>;testb $, (%edi);jne  <RtlSubAuthoritySid+>;testl %edi, %edi;jne - <ObOpenObjectByName+>": 1,
                "jmp - <ObCheckCreateObjectAccess+>;movl -(%ebp), %ecx;movl (%ecx), %eax;testl %eax, %eax;je - <ObOpenObjectByName+>": 1,
                "jbe  <ObCheckCreateObjectAccess+>;movl (%ebp), %edi;addl $, %edi;movl %edi, (%ebp);cmpl $, -(%edi)": 1,
                "movl %edi, (%ebp);cmpl $, -(%edi);je  <ObCheckCreateObjectAccess+>;pushl (%edi);pushl %esi": 1,
                "orl $-, %eax;jmp - <ObCheckCreateObjectAccess+>;cmpl $, (%ebp);je - <ObCheckCreateObjectAccess+>;cmpl $-, -(%ebp)": 1,
                "cmpb $, (%eax);jne  <IoOpenDeviceRegistryKey+>;cmpl , %esi;je  <LdrFindResource_U+>;pushl (%ebp)": 1,
                "cmpl $, %eax;movl %eax, (%ebp);je - <ObOpenObjectByName+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "orl $-, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 3,
                "pushl (%ebp);pushl (%ebp);calll - <RtlAreAnyAccessesGranted+>;testl %eax, %eax;jne - <ObCheckCreateObjectAccess+>": 1,
                "jmp - <NtSetInformationProcess+>;testb $, (%edi);jne  <RtlSetGroupSecurityDescriptor+>;testl %edi, %edi;je  <IoCheckFunctionAccess+>": 1,
                "pushl (%ebp);pushl %esi;calll  <ObCheckCreateObjectAccess+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "movl %edi, %esi;shrl %esi;testw %ax, %ax;je  <RtlGeneratedotName+>;pushl (%ebp)": 1,
                "pushl %ebx;pushl %esi;pushl (%ebp);pushl (%ebp);calll - <RtlAreAnyAccessesGranted+>": 1,
                "jl  <ObCheckCreateObjectAccess+>;movl %esi, (%ebp);movl %edi, %eax;subl (%ebp), %eax;cmpl $, %eax": 1,
                "xorl %ecx, %ecx;testl %eax, %eax;setg %cl;leal -(%ecx,%ecx), %ecx;movl %ecx, %eax": 1,
                "movl %ecx, %eax;jmp - <RtlAreAnyAccessesGranted+>;movl %esi, %edi;jmp - <ObCheckCreateObjectAccess+>;cmpb $, (%esi,%eax)": 1,
                "movl %ecx, (%ebp);cmpl %edi, (%ebp);jbe - <RtlAreAnyAccessesGranted+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movw (%eax,%edi,), %bx;movzbw (%esi,%edi), %ax;pushl %eax;calll - <RtlUpcaseUnicodeChar>;movzwl %ax, %eax": 1,
                "pushl %eax;calll - <RtlUpcaseUnicodeChar>;movzwl %ax, %eax;pushl %ebx;movl %eax, (%ebp)": 1,
                "jne - <ObCheckCreateObjectAccess+>;incl %edi;cmpl (%ebp), %edi;jb - <ObCheckCreateObjectAccess+>;movl (%ebp), %ebx": 1,
                "jmp - <RtlAreAnyAccessesGranted+>;pushl $;xorl %edi, %edi;popl %ecx;xorl %eax, %eax": 1,
                "movl %eax, %edi;movl (%esi), %eax;testl %eax, %eax;je  <ObCheckCreateObjectAccess+>;pushl %ebx": 1,
                "je  <IoCheckFunctionAccess+>;testl %eax, %eax;je  <ObCheckCreateObjectAccess+>;jl  <ObCheckCreateObjectAccess+>;pushl %esi": 1,
                "pushl %esi;pushl %ebx;pushl %edi;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %ebx;pushl %edi;pushl (%ebp);pushl (%ebp);calll - <RtlAreAnyAccessesGranted+>": 1,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;andl $, -(%ebp);cmpl $, (%eax);jbe  <ObCheckCreateObjectAccess+>": 1,
                "movl (%eax), %eax;movl -(%ebp), %edx;movl %ecx, (%eax,%edx,);incl -(%ebp);incl -(%ebp)": 1,
                "testl %eax, %eax;je  <ObCheckCreateObjectAccess+>;pushl -(%ebp);pushl %esi;calll *%eax": 1,
                "orb $, %al;movb %al, (%edi);calll - <ObOpenObjectByName+>;cmpb $, -(%ebp);movl (%ebp), %edi": 1,
                "je  <ObCheckCreateObjectAccess+>;pushl %edi;cmpl $, (%esi);jne  <ObCheckCreateObjectAccess+>;pushl %esi": 1,
                "movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);andl $, %esi;movl %eax, ": 1,
                "xorl %edx, %edx;movl $, %ecx;divl %ecx;movl %edx, %eax;xorl %edx, %edx": 3,
                "calll - <ObCheckCreateObjectAccess+>;popl %ebp;retl $;nop;nop": 1,
                "pushl %edi;je  <IoCheckFunctionAccess+>;movl $, %edi;movl %edi, %ecx;calll - <ExAcquireFastMutexUnsafe>": 1,
                "je  <IoCheckFunctionAccess+>;movl $, %edi;movl %edi, %ecx;calll - <ExAcquireFastMutexUnsafe>;movl $, %esi": 1,
                "movl $, %edi;movl %edi, %ecx;calll - <ExAcquireFastMutexUnsafe>;movl $, %esi;movl , %ecx": 1,
                "je  <RtlUnicodeStringToInteger+>;movl (%ecx), %eax;movl %eax, ;movl %esi, (%eax);leal -(%ecx), %esi": 1,
                "movl %edx, %eax;xorl %edx, %edx;divl ;cmpb $, (%ebp);jne - <ObCheckCreateObjectAccess+>": 1,
                "jne - <ObCheckCreateObjectAccess+>;movl , %eax;shll $, %edx;movl (%edx,%eax), %esi;movl %esi, %eax": 1,
                "movl %eax, -(%ebp);jbe  <ObCheckCreateObjectAccess+>;cmpw $, (%eax);je  <RtlUpperString+>;cmpw %bx, -(%ebp)": 1,
                "je  <RtlUpperString+>;cmpw %bx, -(%ebp);je  <ObCheckCreateObjectAccess+>;xorl %edi, %edi;cmpw %bx, -(%ebp)": 1,
                "xorl %edi, %edi;cmpw %bx, -(%ebp);movl %eax, %esi;jbe  <ObCheckCreateObjectAccess+>;xorl %eax, %eax": 1,
                "cmpw %bx, -(%ebp);movl %eax, %esi;jbe  <ObCheckCreateObjectAccess+>;xorl %eax, %eax;movw (%esi), %ax": 1,
                "xorl %eax, %eax;movw (%esi), %ax;cmpw $, %ax;je  <ObCheckCreateObjectAccess+>;pushl %eax": 2,
                "movl $, (%esi);movl %ebx, (%esi);movl %eax, (%edi);calll - <ObOpenObjectByName+>;pushl (%ebp)": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;je  <RtlUpperString+>;movl (%ebx), %eax;shrl $, %eax": 1,
                "testl %ebx, %ebx;je  <RtlUpperString+>;movl (%ebx), %eax;shrl $, %eax;incl %eax": 1,
                "movl %eax, (%esi);movw (%edi), %ax;movw %ax, (%esi);movw (%edi), %ax;movw %ax, (%esi)": 3,
                "movw (%edi), %ax;movw %ax, (%esi);movw (%edi), %ax;movw %ax, (%esi);movl (%edi), %eax": 3,
                "andl $, %ecx;xorl %eax, %ecx;movl %ecx, (%esi);movb (%edi), %al;movb %al, (%esi)": 3,
                "xorl %edi, %edi;cmpb $, (%ebp);je  <IoCheckFunctionAccess+>;testl %eax, %eax;movb $, (%esi)": 1,
                "movb %al, (%esi,%edi);movzwl -(%ebp), %eax;incl %edi;cmpl %eax, %edi;jb - <ObCheckCreateObjectAccess+>": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;movl (%edi), %eax;movl (%ebp), %ecx;movl (%eax,%ecx,), %eax": 1,
                "addl %eax, %edi;testl %ecx, %ecx;movl %ecx, (%ebp);movl %eax, (%ebp);movl $, %ebx": 1,
                "movl (%ebp), %ebx;cmpw %di, (%ebx);je  <PsGetProcessExitTime+>;movl (%ebx), %eax;movl (%ebp), %esi": 1,
                "calll - <ObCheckCreateObjectAccess+>;cmpl %edi, (%esi);je  <IoCheckFunctionAccess+>;movl (%ebp), %edi;addl $, %edi": 1,
                "cmpl %edi, (%esi);je  <IoCheckFunctionAccess+>;movl (%ebp), %edi;addl $, %edi;andl $, %edi": 1,
                "movl (%ebp), %edi;addl $, %edi;andl $, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "ja  <IoGetDeviceProperty+>;andl $, -(%ebp);movl (%esi), %eax;leal (%eax), %ecx;pushl %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%esi), %eax;movl (%eax), %ebx;movl (%eax), %eax": 1,
                "subl $, %edi;andl $, -(%ebp);movl %ebx, -(%ebp);cmpl %eax, %ebx;jae  <ObCheckCreateObjectAccess+>": 1,
                "movl %ebx, (%eax);cmpb $, (%ebp);je  <IoOpenDeviceRegistryKey+>;movl $, %eax;addl %eax, %edi": 1,
                "addl %eax, %ebx;cmpl -(%ebp), %ebx;jb - <ObCheckCreateObjectAccess+>;movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "testl %eax, %eax;je - <ObCheckCreateObjectAccess+>;pushl -(%ebp);pushl %esi;calll *%eax": 1,
                "leal (%eax), %ecx;movl %ecx, (%ecx);movl %ecx, (%ecx);leal (%edx), %ecx;pushl %esi": 1,
                "pushl %esi;calll *%eax;movl (%ebp), %ebx;cmpl $-, %ebx;je - <ObCheckCreateObjectAccess+>": 1,
                "addl -(%ebp), %edi;jmp - <ObCheckCreateObjectAccess+>;movl %edi, -(%ebp);jmp - <ObCheckCreateObjectAccess+>;orl $-, (%edi)": 1,
                "movl %eax, (%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %edi;pushl %edi;pushl %eax": 1,
                "movl (%ebp), %edi;pushl %edi;pushl %eax;movzwl (%eax), %eax;decl %eax": 1,
                "testl %eax, %eax;je  <ObCheckCreateObjectAccess+>;jge  <ObCheckCreateObjectAccess+>;pushl %edi;pushl (%ebp)": 1,
                "je - <ObCheckCreateObjectAccess+>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl %ebx, (%edi);movl -(%ebp), %edi": 1,
                "je  <IoCheckFunctionAccess+>;pushl %edi;pushl %eax;movzwl (%eax), %eax;decl %eax": 1,
                "jge - <ObCheckCreateObjectAccess+>;movl %ebx, (%edi);movl -(%ebp), %edi;jmp - <ObCheckCreateObjectAccess+>;nop": 1,
                "jl  <NtAdjustPrivilegesToken+>;xorl %eax, %eax;testl %edi, %edi;setne %al;leal (,%eax,), %eax": 1,
                "shll $, %esi;leal (%esi), %eax;andl $-, %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "andl $-, %eax;movl (%ebp), %ecx;movl %eax, (%ecx);cmpb %bl, (%ebp);je  <NtAdjustPrivilegesToken+>": 1,
                "movl (%ebp), %ecx;leal (%ecx,%esi), %eax;cmpl %ecx, %eax;jb  <RtlSetGroupSecurityDescriptor+>;cmpl , %eax": 1,
                "pushl (%ebp);calll - <ExAllocatePoolWithTag>;movl (%ebp), %edx;movl %eax, (%edx);cmpl %ebx, %eax": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);xorl %eax, %eax": 2,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ecx;xorl %edx, %edx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ecx;xorl %edx, %edx;movl %edx, (%eax)": 1,
                "jbe  <NtAdjustPrivilegesToken+>;pushl %ebx;pushl %esi;pushl %edi;movl (%ecx), %eax": 1,
                "andl $, -(%ebp);cmpl $, (%ebp);movb $, (%ebp);jbe  <NtAdjustPrivilegesToken+>;movl %edx, %eax": 1,
                "movb $, (%ebp);jbe  <NtAdjustPrivilegesToken+>;movl %edx, %eax;movl -(%ebp), %edx;incl %edx": 1,
                "movl %edx, -(%ebp);cmpb $, (%ebp);jne  <NtAdjustPrivilegesToken+>;movl -(%ebp), %edi;cmpl -(%edx), %edi": 1,
                "movl -(%ebp), %ecx;cmpl (%ebp), %ecx;jb  <RtlSetGroupSecurityDescriptor+>;cmpl %edx, (%eax);ja  <NtAdjustPrivilegesToken+>": 1,
                "ja  <NtAdjustPrivilegesToken+>;cmpl %edx, (%ebp);jne  <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax;leave": 1,
                "testl %eax, %eax;jne - <NtAdjustPrivilegesToken+>;addl $, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "jne - <NtAdjustPrivilegesToken+>;addl $, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);jmp - <NtAdjustPrivilegesToken+>;movl $, -(%ebp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);orl $-, -(%ebp);testl %edi, %edi;je - <NtAdjustPrivilegesToken+>": 1,
                "movl , %eax;cmpl %eax, (%ebp);jae  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "movl (%ebx), %esi;xorl %edi, %edi;incl %edi;cmpl %edi, %esi;movl %eax, (%ebx)": 1,
                "cmpl %edi, %esi;movl %eax, (%ebx);jbe  <NtAdjustPrivilegesToken+>;movl (%ebx), %eax;leal (%eax,%edi,), %eax": 1,
                "incl (%ebp);addl $, %edx;jmp - <NtAdjustPrivilegesToken+>;nop;nop": 1,
                "movl -(%ebp), %edx;addl %edx, %ecx;cmpl %edx, %ecx;jb  <NtAdjustPrivilegesToken+>;cmpl %eax, %ecx": 1,
                "cmpl %eax, %ecx;ja  <NtAdjustPrivilegesToken+>;movzwl %si, %ebx;movl %ebx, -(%ebp);testb $, %bl": 1,
                "je  <NtAdjustPrivilegesToken+>;pushl $;leal (%ebx), %eax;pushl %eax;pushl $": 1,
                "pushl $;leal (%ebx), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 5,
                "movw %si, (%eax);movl (%edi), %eax;leal (%eax), %ecx;movl %ecx, (%eax);testw %si, %si": 1,
                "leal (%eax), %ecx;movl %ecx, (%eax);testw %si, %si;je  <NtAdjustPrivilegesToken+>;movl %ebx, %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);calll - <_CIsqrt+>;retl $": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %ecx;andl $, -(%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %ecx;andl $, -(%ebp);pushl %esi": 1,
                "cmpb $, (%ebp);movb %al, (%ebp);je  <NtAdjustPrivilegesToken+>;pushl (%ebp);leal -(%ebp), %eax": 1,
                "movb %al, (%ebp);je  <NtAdjustPrivilegesToken+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movb (%ebp), %al;popl %esi;leave;retl $;nop": 1,
                "cmpl %esi, (%ebp);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "jne  <ObReferenceObjectByName+>;cmpl %ebx, (%ebp);je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);calll - <IoQueueWorkItem+>;testb %al, %al;jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;calll - <SeUnlockSubjectContext>;movl $, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;cmpb $, %al;je  <IoCheckFunctionAccess+>;cmpb $, %al;jne  <NtAdjustPrivilegesToken+>": 1,
                "jmp - <NtDeleteAtom+>;xorb %al, %al;jmp - <NtAdjustPrivilegesToken+>;leal (%esi), %eax;pushl %eax": 1,
                "jmp - <NtAdjustPrivilegesToken+>;calll  <ExRaiseAccessViolation>;jmp - <NtAdjustPrivilegesToken+>;movl (%ebp), %edi;cmpb $, (%ebp)": 1,
                "pushl %esi;pushl %ebx;calll  <RtlGeneratedotName+>;movl %eax, %esi;orl $-, %eax": 1,
                "movl -(%ebp), %ebx;jmp - <SeQuerySecurityDescriptorInfo+>;cmpb %bl, (%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "jle - <NtDeleteAtom+>;jmp - <NtDeleteAtom+>;testb $, (%ebp);je - <FsRtlCurrentBatchOplock+>;jmp  <FsRtlRegisterUncProvider+>": 1,
                "pushl -(%ebp);calll - <ObQueryNameString>;movl %eax, -(%ebp);jmp - <IoQueryFileInformation+>;movl (%ecx), %ecx": 1,
                "movl (%ecx), %ecx;jmp - <PsLookupProcessThreadByCid+>;testl %ecx, %ecx;je - <SeQueryAuthenticationIdToken+>;jmp - <SeQueryAuthenticationIdToken+>": 1,
                "movl (%ebp), %edi;jmp - <IoQueryFileInformation+>;movl (%eax), %edi;jmp - <NtWaitForSingleObject+>;movl (%eax), %esi": 1,
                "movl $, %edi;jmp  <ObSetSecurityObjectByPointer+>;pushl $;popl %edi;orl $-, %edx": 1,
                "jmp  <IoCheckFunctionAccess+>;cmpl $, (%ebp);jne - <NtQueryInformationToken+>;pushl $;leal -(%ebp), %eax": 1,
                "cmpl $, (%ebp);jne - <NtQueryInformationToken+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;jl - <NtQueryInformationToken+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "jmp - <ObCheckCreateObjectAccess+>;movl -(%ebp), %ecx;calll - <FsRtlUninitializeFileLock+>;jmp - <NtAdjustPrivilegesToken+>;testl %ebx, %ebx": 1,
                "calll - <FsRtlUninitializeFileLock+>;jmp - <NtAdjustPrivilegesToken+>;testl %ebx, %ebx;je - <RtlAreAnyAccessesGranted+>;pushl %esi": 1,
                "pushl %esi;pushl (%ebp);calll  <SeCreateClientSecurityFromSubjectContext+>;jmp - <RtlAreAllAccessesGranted+>;movl $, (%ebp)": 1,
                "pushl $;calll - <_CIsqrt+>;movl %fs:, %eax;movl %eax, -(%ebp);xorl %esi, %esi": 1,
                "movl %eax, (%esi);testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl , %eax;movl %eax, (%esi)": 1,
                "leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);andl $, (%esi);leal (%esi), %eax": 1,
                "andl $, (%esi);leal (%esi), %eax;pushl %eax;calll - <KeInitializeSpinLock>;leal (%esi), %eax": 1,
                "calll - <ExAcquireRundownProtection>;testb %al, %al;je  <IoCheckFunctionAccess+>;cmpl $, (%ebp);jne  <NtAdjustPrivilegesToken+>": 1,
                "pushl %eax;pushl $;pushl %ecx;pushl %esi;calll  <NtAdjustPrivilegesToken+>": 1,
                "movl -(%ebp), %eax;incl (%eax);jne  <NtAdjustPrivilegesToken+>;addl $, %eax;cmpl %eax, (%eax)": 1,
                "jne  <IoCheckFunctionAccess+>;leal (%ebx), %ecx;calll - <ExReleaseRundownProtection>;testl %edi, %edi;je - <PsSetProcessWindowStation+>": 1,
                "jl  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <ObGetObjectSecurity>": 1,
                "calll - <ObReleaseObjectSecurity>;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;orl $, (%edi);pushl %esi": 1,
                "movl (%ebp), %esi;movb $, (%esi);movb $, (%esi);leal (%esi), %eax;movl %eax, (%eax)": 1,
                "movl %esi, (%eax);addl $, %eax;decl %ecx;jne - <NtAdjustPrivilegesToken+>;movl (%ebp), %ecx": 1,
                "movb %al, (%esi);movb $, (%esi);movb $, (%esi);movl $, (%esi);leal (%esi), %eax": 1,
                "cmpl %ebx, %eax;jne  <NtAdjustPrivilegesToken+>;pushl %ebx;pushl %ebx;calll - <KeTerminateThread+>": 1,
                "calll - <KeTerminateThread+>;cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;movb $, -(%ebp);movl %eax, (%esi)": 1,
                "movl %eax, (%esi);movl %eax, (%esi);addl $, %eax;movl %eax, (%esi);movl %ebx, -(%ebp)": 1,
                "movb %bl, (%esi);movl $, (%esi);xorl %eax, %eax;calll - <_CIsqrt+>;retl $": 1,
                "andl $, (%esi);jmp - <PsReferencePrimaryToken+>;nop;nop;nop": 1,
                "calll - <_CIsqrt+>;andl $, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);cmpb $, (%eax)": 1,
                "cmpl %eax, %ebx;jae  <IoCheckFunctionAccess+>;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %ecx": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl %edx;pushl (%ebp)": 1,
                "movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax);jmp - <NtAdjustPrivilegesToken+>;nop": 1,
                "negb %al;sbbl %eax, %eax;andl $, %eax;retl;nop": 1,
                "movl %esi, (%ebp);jb  <IoCheckFunctionAccess+>;movl %ecx, %eax;shrl $, %eax;movl %eax, -(%ebp)": 1,
                "leal -(%eax), %esi;notl %esi;incl %edx;andl %esi, %edx;movl %esi, (%ebp)": 1,
                "testl %esi, %esi;je  <IoCheckFunctionAccess+>;pushl %edi;movl (%esi), %edi;testl %edi, %edi": 1,
                "pushl (%ebp);pushl (%esi);pushl $;pushl $;pushl $": 1,
                "leal -(%edi,%eax), %edi;notl %ebx;andl %ebx, %edi;cmpl %ecx, %edi;jae  <NtAdjustPrivilegesToken+>": 1,
                "popl %esi;leave;retl $;shrl $, %eax;movl %eax, %ebx": 1,
                "movl (%ebp), %eax;shrl $, %eax;cmpl %ebx, %eax;jbe  <NtAdjustPrivilegesToken+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl %ecx, %esi;calll - <NtSetEvent+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;pushl $;pushl $": 3,
                "leal (%ebx), %ecx;pushl %edi;movl %eax, (%esi);movl $, (%esi);movl %ecx, (%ebp)": 1,
                "movl (%ebp), %edi;movl , %eax;pushl %edi;pushl (%ebx);addl $, %eax": 1,
                "calll *;testl %ebx, %ebx;jl  <IoCheckFunctionAccess+>;movl %ebx, %eax;popl %edi": 1,
                "pushl $;calll - <_CIsqrt+>;movl (%ebp), %esi;pushl %esi;calll - <KeAttachProcess>": 1,
                "calll - <NtAdjustPrivilegesToken+>;movl %eax, %edi;testl %edi, %edi;jl  <IoCheckFunctionAccess+>;andl $, -(%ebp)": 1,
                "testl %edi, %edi;jl  <IoCheckFunctionAccess+>;andl $, -(%ebp);movl -(%ebp), %eax;orl $-, (%eax)": 1,
                "orl $-, (%eax);movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %eax;movl %eax, (%eax)": 1,
                "testl %ecx, %ecx;jne  <IoCheckFunctionAccess+>;cmpl %ecx, (%eax);jne  <IoCheckFunctionAccess+>;movl (%eax), %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %ecx, (%eax);jne  <IoCheckFunctionAccess+>;movl (%eax), %ecx;movl -(%ebp), %edx": 1,
                "movl $, -(%ebp);pushl %esi;calll - <RtlAppendUnicodeToString+>;orl $-, -(%ebp);testb $, (%esi)": 1,
                "calll - <RtlAppendUnicodeToString+>;movl (%ebp), %ecx;testl %ecx, %ecx;je  <NtAdjustPrivilegesToken+>;movl %eax, (%ecx)": 1,
                "movl %esi, %eax;shrl $, %eax;andl %ecx, %eax;subl %ebx, %eax;movl %eax, (%ebp)": 1,
                "pushl %eax;calll - <PsIsThreadTerminating+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;cmpl $, (%ebp)": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;cmpl $, (%ebp);jne  <IoOpenDeviceRegistryKey+>;cmpl $, (%esi)": 1,
                "calll - <NtAllocateVirtualMemory+>;testl %eax, %eax;jne  <IoOpenDeviceRegistryKey+>;addl $, -(%ebp);addl $, %esi": 1,
                "jne  <IoOpenDeviceRegistryKey+>;addl $, -(%ebp);addl $, %esi;cmpl %edi, %esi;jbe  <RtlxUnicodeStringToOemSize+>": 1,
                "orl $-, -(%ebp);xorl %edi, %edi;cmpl %edi, (%ebp);je  <NtDeviceIoControlFile+>;pushl %edi": 1,
                "cmpb $, -(%ebp);jne  <IoCheckEaBufferValidity+>;cmpl %edi, (%esi);jne  <RtlCopyLuid+>;movl %esi, %ecx": 1,
                "jmp  <IoWMIQueryAllData+>;movl %esi, (%ebp);movl (%esi), %esi;jmp - <RtlFindUnicodePrefix+>;cmpl %ecx, (%edi)": 1,
                "jne - <IoSetIoCompletion+>;testl $, -(%ebp);jne - <IoSetIoCompletion+>;cmpb %cl, -(%ebp);movb $, -(%ebp)": 1,
                "jbe  <NtDeviceIoControlFile+>;cmpl $, %eax;jne - <IoSetIoCompletion+>;orb $, (%ebx);jmp - <IoSetIoCompletion+>": 1,
                "calll - <SeAccessCheck>;movb %al, -(%ebp);cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp)": 2,
                "cmpb $, -(%ebp);je  <NtDeviceIoControlFile+>;movl -(%ebp), %eax;orl %eax, (%esi);orl $, %eax": 2,
                "pushl (%ebp);pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <SeOpenObjectAuditAlarm>": 1,
                "pushl -(%ebp);pushl $;pushl -(%ebp);movl -(%ebp), %eax;pushl (%eax)": 1,
                "je  <RtlIntegerToChar+>;decl %eax;decl %eax;je  <RtlIntegerToChar+>;subl $, %eax": 1,
                "leal -(%eax), %ecx;movw %cx, (%esi);jne  <PsGetProcessExitTime+>;cmpw (%esi), %cx;jae  <IoCheckFunctionAccess+>": 1,
                "cmpw (%esi), %cx;jae  <IoCheckFunctionAccess+>;movzwl (%edi), %eax;pushl %eax;pushl (%edi)": 2,
                "pushl %eax;pushl $;pushl (%ebp);pushl (%ebp);calll - <RtlIntegerToChar>": 1,
                "calll - <RtlIntegerToChar>;testl %eax, %eax;jl  <RtlIntegerToUnicodeString+>;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "subl %edx, %eax;movw %ax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "movl %eax, %esi;jae  <RtlIntegerToUnicodeString+>;movl %edx, %esi;pushl $;popl %ecx": 1,
                "cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl %edx, -(%ebp);cmpl %eax, %edx;jae  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;movb (%edx), %al;movb %al, (%edx);movb (%edx), %al;movb %al, (%edx)": 1,
                "xorl %esi, %esi;cmpl %esi, %ebx;je  <RtlIntegerToUnicodeString+>;movl , %eax;cmpl %eax, %ebx": 1,
                "cmpl %esi, %ecx;je  <RtlIntegerToUnicodeString+>;movl , %eax;cmpl %eax, %ecx;jae  <IoCheckFunctionAccess+>": 2,
                "jae  <RtlIntegerToUnicodeString+>;movl (%ebp), %eax;movl %eax, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "calll  <ObReferenceObjectByName+>;movl %eax, -(%ebp);testl %eax, %eax;jl  <RtlSetGroupSecurityDescriptor+>;orl $-, -(%ebp)": 1,
                "testl %eax, %eax;jl  <RtlSetGroupSecurityDescriptor+>;orl $-, -(%ebp);xorl %ebx, %ebx;leal -(%ebp), %eax": 1,
                "movl (%ecx), %eax;cmpl %ebx, %eax;je  <RtlSetGroupSecurityDescriptor+>;pushl %eax;calll - <PsReferencePrimaryToken>": 1,
                "je  <RtlIntegerToUnicodeString+>;pushl $;pushl -(%ebp);pushl -(%ebp);calll  <ObReferenceObjectByName+>": 1,
                "popl %ecx;xorl %eax, %eax;movl -(%ebp), %ebx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi)": 2,
                "movl %fs:, %eax;movl (%eax), %esi;leal (%ebx), %edi;pushl $;pushl %ecx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp);testl %eax, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);movl %esi, (%ebx);movl %esi, %ecx;calll - <ObfReferenceObject>": 1,
                "testb $, (%eax);jne  <IoCheckFunctionAccess+>;movl %edi, (%ebx);movl , %eax;movl %eax, (%ebx)": 1,
                "movl , %eax;movl %eax, (%ebx);incl ;je  <IoCheckFunctionAccess+>;movl (%ebx), %eax": 1,
                "pushl %edi;pushl $;pushl $;pushl (%eax);calll - <KeReleaseSemaphore>": 1,
                "incl (%esi);jne  <RtlIntegerToUnicodeString+>;leal (%esi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "calll - <KeWaitForSingleObject>;movl %eax, -(%ebp);cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %esi": 1,
                "cmpl %edi, %eax;je  <RtlIntegerToUnicodeString+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx": 1,
                "movzwl (%eax), %esi;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "cmpl %edi, %eax;jl  <RtlIntegerToUnicodeString+>;movl $, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "xorl %edi, %edi;cmpl %edi, (%ebp);je  <RtlIntegerToUnicodeString+>;movl -(%ebp), %esi;addl $, %esi": 1,
                "movl -(%ebp), %esi;addl $, %esi;movl (%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movb -(%esi), %al;cmpb %bl, %al;je  <ObReferenceObjectByName+>;movzbl %al, %eax;subl %eax, %esi": 1,
                "cmpb %bl, %al;je  <ObReferenceObjectByName+>;movzbl %al, %eax;subl %eax, %esi;subl $, %esi": 1,
                "je  <ObReferenceObjectByName+>;pushl %edi;movl (%ebp), %edi;pushl %edi;pushl %ebx": 1,
                "movl %ecx, (%eax);calll - <ObfReferenceObject>;jmp - <PsLookupProcessThreadByCid+>;movl %edi, %ecx;calll - <ObfDereferenceObject>": 1,
                "movl %edi, %ecx;calll - <ObfDereferenceObject>;jmp - <PsLookupProcessThreadByCid+>;nop;nop": 1,
                "movl (%ebp), %esi;pushl %edi;leal (%esi), %edi;pushl %edi;calll - <SeLockSubjectContext>": 1,
                "pushl (%eax);movl (%esi), %eax;orl (%esi), %eax;pushl %eax;pushl %edi": 1,
                "orl (%esi), %eax;pushl %eax;pushl %edi;pushl %ebx;pushl (%ebp)": 1,
                "movb (%eax), %al;movb %al, -(%ebp);testb %al, %al;je  <IoOpenDeviceRegistryKey+>;xorl %esi, %esi": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;xorl %eax, %eax;movl %eax, (%ecx);movl %eax, (%edi)": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl $;pushl $;pushl %ecx": 2,
                "movl %fs:, %eax;movl (%eax), %ecx;movl %ecx, (%ebx);calll - <ObfReferenceObject>;cmpl $, -(%ebp)": 1,
                "jl  <ObReferenceObjectByName+>;movl $, -(%ebp);cmpl %edi, (%ebp);jne  <NtQueryInformationAtom+>;movl (%ebp), %eax": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %ecx, (%eax);movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);cmpl %edi, (%ebp)": 1,
                "je  <RtlSubAuthoritySid+>;movl -(%ebp), %eax;movl %eax, (%ebx);movl $, %esi;movl %esi, %ecx": 1,
                "movl %esi, %ecx;calll *;movl %fs:, %eax;movl %eax, ;movl -(%ebp), %eax": 2,
                "calll *;movl %fs:, %eax;movl %eax, ;movl -(%ebp), %eax;movl -(%ebp), %ecx": 2,
                "movl %fs:, %eax;movl %eax, ;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "movl %edi, ;movl %esi, %ecx;calll *;movl %edi, -(%ebp);orl $-, -(%ebp)": 1,
                "cmpl %edi, %ecx;je  <ObReferenceObjectByName+>;calll - <ObfDereferenceObject>;cmpl %edi, -(%ebp);jne  <ExUuidCreate+>": 1,
                "movw %cx, (%edi);movw %ax, (%edi);movl %eax, %ecx;leal (%edx), %esi;addl $, %edi": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %eax;movl $, %esi": 1,
                "je  <ObReferenceObjectByName+>;movl (%ecx), %ecx;movl %ecx, -(%ebp);leal (%eax), %ebx;movl (%ebx), %eax": 1,
                "cmpl %esi, %ecx;je  <ObReferenceObjectByName+>;calll - <ObfDereferenceObject>;movl (%esi), %eax;andb $, %al": 1,
                "cmpb $, %al;je  <ObReferenceObjectByName+>;pushl %esi;calll  <ObReferenceObjectByName+>;popl %edi": 1,
                "cmpl %edi, %eax;jne  <ObReferenceObjectByName+>;movl (%esi), %eax;movl %eax, %ecx;andb $, %cl": 1,
                "cmpb $, %cl;je  <ObReferenceObjectByName+>;popl %ebp;retl $;andl $, ": 1,
                "retl $;andl $, ;movl %edi, %ecx;calll *;jmp - <ObReferenceObjectByName+>": 1,
                "leal (%edi), %ebx;movl (%ebp), %eax;cmpl (%ebx), %eax;jae  <ObReferenceObjectByName+>;calll - <ObOpenObjectByName+>": 1,
                "pushl %eax;pushl %esi;calll - <NtFreeVirtualMemory+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "cmpl %esi, (%ebp);jne  <ObReferenceObjectByName+>;movl %fs:, %eax;movb (%eax), %bl;movb %bl, -(%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%edi);calll - <ObReferenceObjectByName+>;movl %eax, -(%ebp)": 1,
                "jae  <IoCheckFunctionAccess+>;movw (%eax), %cx;movw %cx, (%eax);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "leal (%ecx,%eax), %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;testl %edi, %edi;je - <PsSetProcessWinProcess+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %eax;movw (%eax), %cx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %eax;movw (%eax), %cx;movw %cx, (%ebx)": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <ObReferenceObjectByName+>;movzwl (%eax), %eax;movl %eax, (%ecx)": 1,
                "andl $, %ecx;imull $, %ecx, %ecx;movl (%eax), %eax;leal (%eax,%ecx), %ecx;calll - <ExReleaseResourceLite>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $;leal -(%ebp), %eax": 1,
                "calll - <_CIsqrt+>;retl $;leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;jmp - <NtFreeVirtualMemory+>;movl %esi, %ecx": 2,
                "jmp - <NtAllocateVirtualMemory+>;leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;jmp - <NtAllocateVirtualMemory+>": 2,
                "movl %eax, -(%ebp);cmpl %edi, %eax;jge  <ObReferenceObjectByName+>;movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "pushl %esi;pushl %edi;jne  <IoCheckFunctionAccess+>;movl $, %edi;movl %edi, %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;movl $, %edi;movl %edi, %ecx;calll *;movl %fs:, %eax": 1,
                "pushl %esi;calll - <ObReferenceObjectByName+>;xorl %ebx, %ebx;movl %edi, %ecx;movl %ebx, ": 1,
                "rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;calll - <KeQuerySystemTime>;movl , %eax": 1,
                "leal -(%ebp), %esi;movl %ebx, %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;pushl $;pushl %esi": 3,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl %esi, %ecx;movl (%ebp), %esi": 3,
                "leal (%ebp), %eax;pushl %eax;pushl -(%ebp);movl (%ebp), %eax;addl $-, %eax": 1,
                "movl %eax, (%esi);jmp - <NtQuerySystemInformation+>;movl (%ebp), %eax;cmpl %esi, %eax;jne  <PsGetProcessExitTime+>": 1,
                "movl (%ebp), %ecx;addl %ecx, %eax;cmpl %eax, (%ebp);jae  <ObReferenceObjectByName+>;movb $, %al": 1,
                "calll - <ObReferenceObjectByName+>;jmp - <SeCreateClientSecurity+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl %edi, %ecx;shll $, %ecx;movl %ecx, %ebx;cmpl -(%ebp), %ebx;jbe  <IoCheckFunctionAccess+>": 1,
                "pushl (%esi);pushl %edi;calll *(%edi);testl %eax, %eax;je - <NtQueryInformationToken+>": 1,
                "pushl (%esi);jmp - <NtQueryInformationToken+>;movl (%ebp), %esi;jmp - <NtQueryInformationToken+>;pushl $": 1,
                "movl %eax, %esi;testl %esi, %esi;movl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;movl %edi, -(%ebp)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);movl %eax, %edi": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <PsLookupProcessThreadByCid>;jmp - <NtOpenThread+>": 1,
                "jmp - <NtOpenThread+>;movl $, %eax;jmp - <NtOpenThread+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <ObfDereferenceObject>;jmp - <NtOpenProcess+>;pushl $;pushl -(%ebp);pushl -(%ebp)": 1,
                "calll - <ObInsertObject>;movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <ObReferenceObjectByName+>;movl $, -(%ebp)": 1,
                "jmp - <NtOpenThreadToken+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;jmp - <NtOpenThreadToken+>;orb $, -(%ebp)": 1,
                "movl (%ebp), %esi;pushl %esi;xorl %ebx, %ebx;calll - <NtAdjustPrivilegesToken+>;jmp - <PsSetProcessWindowStation+>": 1,
                "movzbl (%esi), %eax;movl (%ebx,%eax,), %eax;movl %esi, (%eax);jmp - <RtlFreeHeap+>;movl -(%ebp), %eax": 1,
                "popl %ebp;retl $;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, (%ebp)": 1,
                "jmp  <RtlGeneratedotName+>;cmpl %esi, (%eax);jae - <IoCheckShareAccess+>;jmp - <NtConnectPort+>;cmpb $, -(%ebp)": 1,
                "addl $, %edi;movl (%edi), %ecx;testl %ecx, %ecx;je - <ObReferenceObjectByName+>;calll - <ObfDereferenceObject>": 1,
                "testl %edi, %edi;movl %edi, %eax;jne - <MmPrefetchPages+>;jmp - <MmPrefetchPages+>;movl $, %esi": 1,
                "leal (%edi), %eax;cmpl , %eax;jae  <IoCheckFunctionAccess+>;movzwl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);cmpb $, (%ebp);je  <ObReferenceObjectByName+>": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %edi;cmpl %esi, %edi;jl  <IoGetDeviceObjectPointer+>": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl %edi, %eax;jmp  <IoCheckEaBufferValidity+>": 1,
                "popl %ebp;retl $;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "jmp - <FsRtlCurrentBatchOplock+>;leal (%esi), %eax;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;testl %esi, %esi": 1,
                "movl (%eax), %eax;andl %eax, -(%ebp);cmpl %esi, -(%ebp);jne  <IoCheckEaBufferValidity+>;andl $, -(%ebp)": 1,
                "movzbl (%esi), %ecx;leal (,%ecx,), %ecx;movl %ecx, %edx;shrl $, %ecx;movl %eax, %edi": 2,
                "movl (%ecx), %edx;subl %edx, %eax;cmpl %eax, %ebx;jb  <MmLockPagableImageSection+>;movl %eax, %ebx": 1,
                "jne  <IoCheckEaBufferValidity+>;testl %ebx, %ebx;je  <IoCheckEaBufferValidity+>;movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "jmp - <IoCheckEaBufferValidity+>;nop;nop;nop;nop": 1,
                "movl (%ebp), %ecx;cmpb (%ecx), %dl;pushl %esi;pushl %edi;jne  <RtlInitializeSid+>": 1,
                "cmpb (%ecx), %dl;pushl %esi;pushl %edi;jne  <RtlInitializeSid+>;movb (%eax), %dl": 1,
                "jg - <FsRtlNotifyFilterChangeDirectory+>;jge  <FsRtlFindInTunnelCache+>;movl (%esi), %esi;testl %esi, %esi;jne - <FsRtlFindInTunnelCache+>": 1,
                "orl $-, -(%ebp);calll  <FsRtlFindInTunnelCache+>;movb -(%ebp), %al;calll - <_CIsqrt+>;retl $": 1,
                "jmp  <FsRtlIsFatDbcsLegal+>;cmpb %al, (%esi);je  <FsRtlIsFatDbcsLegal+>;jmp  <FsRtlIsFatDbcsLegal+>;movb (%ebp), %al": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movzbl (%eax), %eax;leal -(%ebx,%eax,), %ebx;movb $, (%edi)": 3,
                "cmpb $, (%ebp);je - <NtAdjustPrivilegesToken+>;cmpb $, (%esi);ja  <FsRtlFindInTunnelCache+>;cmpl $, (%esi)": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;shrl %edx;cmpb $, ;pushl %esi": 1,
                "cmpb $, ;pushl %esi;pushl %edi;movl %edx, (%ebp);jne  <RtlUnicodeToOemN+>": 1,
                "movl (%ebp), %edi;decl (%ebp);cmpl $, %edi;jb  <RtlUnicodeToOemN+>;movb %dl, (%eax)": 1,
                "movb %cl, (%eax);incl %eax;decl (%ebp);decl (%ebp);jne - <RtlUnicodeToOemN+>": 1,
                "je - <RtlUnicodeToOemN+>;subl (%ebp), %eax;movl %eax, (%ecx);jmp - <RtlUnicodeToOemN+>;loop -": 1,
                "addb %ah, -(%esi);scasl %es:(%edi), %eax;decl %ebx;addb %dl, -(%edx);scasl %es:(%edi), %eax": 1,
                "jg  <FsRtlIsFatDbcsLegal+>;addb %bl, -(%edi);nop;nop;nop": 1,
                "pushl %edi;movw (%ebp), %di;xorl %ebx, %ebx;cmpw %bx, %di;movb %bl, -(%ebp)": 1,
                "jl  <FsRtlIsFatDbcsLegal+>;movl , %ebx;movzbl %al, %edx;movzbl (%edx,%ebx), %edx;movb (%ebp), %bl": 1,
                "je - <FsRtlFindInTunnelCache+>;xorl %ebx, %ebx;cmpb $, %al;je  <FsRtlIsFatDbcsLegal+>;cmpb $, %al": 1,
                "pushl %ebp;movl %esp, %ebp;cmpb $, ;pushl %ebx;pushl %edi": 2,
                "movl (%ebp), %esi;movw %ax, (%esi);jne  <IoCheckFunctionAccess+>;cmpw (%esi), %ax;ja  <IoCheckFunctionAccess+>": 1,
                "movw %ax, (%esi);jne  <IoCheckFunctionAccess+>;cmpw (%esi), %ax;ja  <IoCheckFunctionAccess+>;movzwl (%edi), %eax": 1,
                "movl (%eax), %edi;movl %edi, -(%ebp);movl , %ecx;jmp - <PsLookupProcessByProcessId+>;testb $, (%ecx)": 1,
                "movl %ecx, (%ebx);movl %eax, (%ebx);movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <FsRtlInsertPerStreamContext+>;popl %edi;popl %esi": 1,
                "jbe  <IoCheckFunctionAccess+>;pushl $;pushl %esi;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "pushl (%ebp);movl %eax, -(%ebp);pushl (%ebp);pushl %eax;calll - <FsRtlInsertPerStreamContext+>": 1,
                "movl (%esi), %esi;movl (%ebx), %edi;movl (%ebp), %edx;movzwl %ax, %ecx;movl %ecx, %eax": 1,
                "movl (%ebp), %edx;movzwl %ax, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %eax, -(%ebp);jmp - <NtWriteFile+>;addl $, %esi;jmp  <RtlUnicodeStringToInteger+>;nop": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;xorl %ecx, %ecx": 1,
                "je  <RtlHashUnicodeString+>;movl %eax, (%ebp);movl , %eax;pushl %ebx;movw (%esi), %dx": 1,
                "movzwl %dx, %ecx;jb  <RtlHashUnicodeString+>;cmpw $, %dx;ja  <IoCheckFunctionAccess+>;subl $, %ecx": 1,
                "incl (%ebx);cmpl $, (%ebx);ja  <CcZeroData+>;movl (%ebx), %eax;movl $, -(%ebp)": 1,
                "pushl $;xorl %edx, %edx;popl %ecx;divl %ecx;leal (%edx), %ecx": 1,
                "leal -(%ebp), %eax;subl %ecx, %eax;movl %ecx, -(%ebp);movb (%ebx), %cl;testb %cl, %cl": 1,
                "movzwl %dx, %edx;shrl %edx;leal (%ebx), %esi;leal (%edi,%edx,), %edi;rep  movsw (%esi), %es:(%edi)": 1,
                "leal (%ebx), %esi;leal (%edi,%edx,), %edi;rep  movsw (%esi), %es:(%edi);movw (%ebx), %cx;shlw %cx": 1,
                "leave;retl $;movw (%edi), %si;orl $-, -(%ebp);andl $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;cmpl -(%ebp), %ecx;jae  <RtlGeneratedotName+>;movb (%ebx), %dl;cmpb $, %dl": 1,
                "movl %esi, %eax;jne  <RtlGeneratedotName+>;movzbl (%ebx), %eax;cmpl $, %eax;jbe  <IoCheckFunctionAccess+>": 1,
                "movl (%ebx), %ecx;cmpl $, %ecx;jae  <RtlGeneratedotName+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "je - <RtlGeneratedotName+>;jmp  <IoCheckFunctionAccess+>;cmpb $, (%ebp);je  <RtlGeneratedotName+>;jmp  <RtlGeneratedotName+>": 1,
                "movl (%ebp), %esi;pushl %edi;movzwl (%ebx), %eax;shrl %eax;xorl %edi, %edi": 1,
                "jne  <RtlUnicodeToMultiByteSize+>;cmpw $, %di;jb  <RtlGeneratedotName+>;cmpw $, %di;ja  <RtlGeneratedotName+>": 1,
                "cmpw $, %ax;je - <RtlGeneratedotName+>;pushl (%ebp);pushl $;jmp - <RtlGeneratedotName+>": 1,
                "movl %eax, -(%ebp);jne  <RtlUnicodeToMultiByteSize+>;testb $, %cl;jne  <RtlUnicodeToMultiByteSize+>;cmpl $, (%eax)": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;movl (%edi), %edx;addl $, %eax;adcl $, %edx": 1,
                "cmpl %eax, %edx;jb - <FsRtlNotifyFilterChangeDirectory+>;movl %eax, %ecx;subl %ecx, %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);addl %ecx, (%esi);subl %ecx, %eax;movl %eax, (%esi);movl %ecx, %eax": 1,
                "shrl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %ecx, -(%ebp);shll $, %eax": 1,
                "addl $, %eax;popl %ecx;leal -(%ebp), %edi;andl $, %eax;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);rep  movsl (%esi), %es:(%edi);leal -(%ebp), %ecx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %edi, (%esi);movl %ecx, %edx;movl %edi, (%esi);movl -(%ebp), %edi;movl %edi, %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %edx;movl (%edx), %eax;movl (%edx), %edi;movl %eax, %ecx": 1,
                "addl %ecx, %eax;movl %ecx, (%edx);movl -(%ebp), %ecx;adcl $, %ecx;movl %eax, -(%ebp)": 1,
                "movl (%esi), %edi;jb  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %edx": 1,
                "cmpl $, -(%ebp);jne  <RtlGeneratedotName+>;calll - <RtlUpcaseUnicodeChar+>;retl;nop": 1,
                "calll - <SeCreateClientSecurity+>;testb %al, %al;je  <RtlGeneratedotName+>;cmpl $-, -(%ebp);jne  <RtlGeneratedotName+>": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;pushl (%edi);pushl %ebx;calll - <SeCreateClientSecurity+>": 1,
                "pushl %ebx;calll *(%ebx);movl %eax, -(%ebp);testl %eax, %eax;je  <RtlGeneratedotName+>": 1,
                "calll *%ecx;testb %al, %al;je - <ObReferenceObjectByName+>;movl -(%ebp), %eax;popl %esi": 1,
                "leave;retl $;movw (%esi), %ax;movw %ax, -(%ebp);movw %ax, -(%ebp)": 1,
                "testl $, %eax;movl $, -(%ebp);movl %ecx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "subl $, %eax;cmpl $, (%eax);movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %ebx;pushl ": 1,
                "je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);movl (%ebp), %eax;pushl %esi;jne  <RtlGeneratedotName+>": 1,
                "cmpb $, (%ebp);movl (%ebp), %eax;pushl %esi;jne  <RtlGeneratedotName+>;movl (%eax), %esi": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <RtlGeneratedotName+>;leal (%eax), %ecx": 1,
                "popl %esi;popl %ebp;retl $;movl %ecx, -(%ebp);shrl $, %ecx": 1,
                "decl %ecx;movl %ecx, -(%ebp);cmpl $, %ecx;jae  <RtlGeneratedotName+>;cmpl %ecx, %edi": 1,
                "movl %eax, -(%ebp);movl (%eax), %edx;addl $, %edx;andl $, -(%ebp);leal (%eax), %esi": 1,
                "movl %ecx, -(%ebp);addl -(%ebp), %esi;movl %esi, -(%ebp);addl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "andl %edx, (%eax);jmp - <RtlGeneratedotName+>;nop;nop;nop": 1,
                "movl (%ebp), %eax;shrl $, %eax;decl %eax;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%edi), %eax;testl %eax, %eax;jne  <RtlGeneratedotName+>;pushl %ebx;pushl %edi": 1,
                "je  <IoCheckFunctionAccess+>;movl (%eax), %edi;movl (%ebp), %ebx;andl $-, %edi;leal (%edi), %eax": 1,
                "movl %ebx, %ecx;leal (%esi,%edi), %eax;shll %cl, %edx;popl %edi;popl %esi": 1,
                "shll %cl, %edx;popl %edi;popl %esi;popl %ebx;orl %edx, (%eax)": 1,
                "movl (%eax), %esi;pushl %edi;pushl (%ebp);movl %edi, %ebx;shrl $, %ebx": 1,
                "pushl %ecx;calll *%eax;jmp - <RtlGeneratedotName+>;shrl $, %eax;cmpl $, %eax": 1,
                "movsbl (%eax), %eax;addl $, %eax;movl %eax, -(%ebp);jmp - <RtlGeneratedotName+>;shrl $, %ecx": 1,
                "addl $, %eax;movl %eax, -(%ebp);jmp  <RtlGeneratedotName+>;shrl $, %eax;cmpl $, %eax": 1,
                "testl %eax, %eax;jne  <RtlGeneratedotName+>;pushl (%ebp);pushl %edi;calll - <NtQueryInformationToken+>": 1,
                "je  <RtlGeneratedotName+>;jb  <RtlGeneratedotName+>;movl (%ebp), %eax;orl $-, %ebx;pushl %ebx": 1,
                "pushl (%ebp);cmpl $, %eax;je  <NtDeleteFile+>;pushl (%ebp);pushl %esi": 1,
                "ja  <RtlGeneratedotName+>;cmpl $, (%eax);je  <IoCheckFunctionAccess+>;movl (%edi), %eax;addl %eax, (%ecx)": 1,
                "cmpl $, (%eax);je  <IoCheckFunctionAccess+>;movl (%edi), %eax;addl %eax, (%ecx);movl %ecx, %edi": 1,
                "addl %ebx, %esi;movl %esi, -(%ebp);cmpl %edi, (%ebp);ja - <RtlGeneratedotName+>;movl %edi, %eax": 1,
                "movl %edi, %eax;shrl $, %eax;decl %eax;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "decl %eax;movl %eax, -(%ebp);cmpl $, %eax;jae - <RtlGeneratedotName+>;cmpl %eax, (%ebp)": 1,
                "cmpl $, %eax;jae - <RtlGeneratedotName+>;cmpl %eax, (%ebp);jne - <RtlGeneratedotName+>;pushl %esi": 1,
                "sbbl %ebx, %ebx;movl %ecx, (%ebp);leal -(%eax), %ecx;andl %ecx, %ebx;subl %eax, %edi": 1,
                "je  <RtlGeneratedotName+>;movl -(%ebp), %edx;jmp - <RtlGeneratedotName+>;movzbl (%ebp), %eax;movsbl (%eax), %edi": 1,
                "shrl $, %eax;decl %eax;cmpl $, %eax;jae - <RtlGeneratedotName+>;pushl (%ebp)": 1,
                "pushl %edi;pushl %eax;pushl %ebx;calll  <RtlGeneratedotName+>;cmpl $-, %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jne  <RtlGeneratedotName+>;movl (%ebx), %eax;xorl %ecx, %ecx": 1,
                "pushl %eax;pushl (%ebp);calll - <RtlGeneratedotName+>;negl (%esi);movl (%ebp), %eax": 1,
                "pushl (%ebp);calll - <RtlGeneratedotName+>;negl (%esi);movl (%ebp), %eax;popl %edi": 1,
                "jne - <RtlGeneratedotName+>;movl %ebx, %eax;negl %eax;shll $, %eax;addl %edi, %eax": 1,
                "cmpl $-, %eax;jne  <RtlGeneratedotName+>;testl %edi, %edi;je  <RtlGeneratedotName+>;addl $, %edi": 1,
                "calll *(%edi);testl %eax, %eax;je  <RtlGetFirstRange+>;leal -(%esi), %ecx;cmpl (%ebp), %ecx": 1,
                "popl %ebx;popl %ebp;retl $;pushl (%ebp);pushl %edi": 1,
                "calll - <RtlGeneratedotName+>;movzwl %ax, %eax;addl $, %eax;pushl %eax;pushl %edi": 2,
                "testl %eax, %eax;jl  <IoCheckFunctionAccess+>;xorl %eax, %eax;calll - <_CIsqrt+>;retl $": 1,
                "retl $;pushl -(%ebp);pushl %edi;calll *%eax;jmp - <RtlGeneratedotName+>": 1,
                "leal -(%eax,%ecx), %ecx;decl %eax;notl %eax;andl %eax, %ecx;movl $, %eax": 1,
                "decl %eax;notl %eax;andl %eax, %ecx;movl $, %eax;xorl %edx, %edx": 1,
                "popl %ebp;retl $;pushl (%ebp);pushl %esi;calll *(%esi)": 1,
                "retl $;pushl (%ebp);pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "movl (%esi), %eax;testl %eax, %eax;je - <SeCreateClientSecurity+>;pushl %ecx;pushl %esi": 1,
                "je - <SeCreateClientSecurity+>;pushl %ecx;pushl %esi;calll *%eax;jmp - <SeCreateClientSecurity+>": 1,
                "calll *(%eax);testl %eax, %eax;je  <RtlGeneratedotName+>;andb $-, (%esi);movl (%eax), %ecx": 1,
                "testl %eax, %eax;je  <RtlGeneratedotName+>;andb $-, (%esi);movl (%eax), %ecx;addl (%eax), %ecx": 1,
                "xorl %eax, %eax;movl (%ebp), %ecx;orl $-, (%ecx);jmp - <ObCheckCreateObjectAccess+>;pushl (%ebp)": 1,
                "pushl (%esi);calll - <ExFreePoolWithTag>;andb $-, (%esi);jmp - <RtlGeneratedotName+>;orb $, (%esi)": 1,
                "movl %eax, (%esi);jmp - <SeTokenIsRestricted+>;cmpl $, (%ebp);jae - <RtlGeneratedotName+>;cmpl $, (%ebp)": 1,
                "pushl %edi;calll - <RtlGeneratedotName+>;movl -(%ebp), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "andw $, (%ebx);andl $, (%ebx);jmp  <RtlGeneratedotName+>;nop;nop": 1,
                "movl (%ebp), %ecx;movl %eax, -(%ebp);andl $, %eax;leal (%ecx,%eax,), %eax;movl (%eax), %ecx": 1,
                "jne  <RtlGetFirstRange+>;movl -(%ebp), %esi;cmpl (%edx), %esi;jne  <RtlGetFirstRange+>;movl %esi, %ecx": 1,
                "movl %esi, %ecx;movl (%ebp), %esi;leal (%edx), %edi;xorl %ebx, %ebx;rep  cmpsb %es:(%edi), (%esi)": 1,
                "movl %eax, %esi;shrl $, %esi;shll $, %eax;orl %eax, %esi;addl (%edx), %esi": 1,
                "popl %esi;popl %ebp;retl $;decl %eax;je - <SeQuerySecurityDescriptorInfo+>": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %eax;cmpl %ebx, (%eax);jne  <RtlGeneratedotName+>;pushl (%ebp)": 1,
                "jne  <RtlGeneratedotName+>;cmpw $, (%edi);je  <IoCheckFunctionAccess+>;movl %edi, (%ebp);movl $, (%ebp)": 1,
                "js  <RtlGetFirstRange+>;movzwl (%edi), %eax;cmpl %eax, %esi;jne  <RtlGeneratedotName+>;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ebx;shrl $, %ebx;leal (%edi,%ebx,), %eax;cmpl $, (%eax);movl %ebx, -(%ebp)": 1,
                "orl $-, %eax;pushl %eax;pushl %ebx;pushl $;pushl %esi": 1,
                "testl %eax, %eax;jne - <RtlGeneratedotName+>;movl (%esi), %eax;cmpl $, %eax;jb - <RtlGeneratedotName+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);xorl %eax, %eax;popl %esi;popl %edi": 1,
                "pushl $;pushl %esi;pushl (%ebp);calll - <SeAccessCheck>;pushl %esi": 1,
                "pushl (%ebp);pushl %edi;pushl %ebx;calll - <ObCheckCreateObjectAccess+>;cmpl $-, %eax": 1,
                "movl (%ebp), %eax;shrl $, %eax;cmpl $, %eax;je  <RtlGetFirstRange+>;testb $, (%esi)": 1,
                "jb - <RtlGeneratedotName+>;movl (%ebp), %ecx;movzwl (%ecx), %eax;cmpl %eax, (%esi);jb  <RtlUnicodeStringToInteger+>": 1,
                "movzwl (%ecx), %eax;cmpl %eax, (%esi);jb  <RtlUnicodeStringToInteger+>;testb $, (%ecx);jne  <IoRegisterDeviceInterface+>": 1,
                "movl (%ebp), %eax;pushl (%eax);pushl (%ebp);calll - <ObCheckCreateObjectAccess+>;movl %eax, %ebx": 1,
                "movl %eax, (%esi);calll - <ObOpenObjectByName+>;leal (%esi), %ecx;movl %ecx, -(%ebp);movl (%esi), %eax": 1,
                "movl %ecx, -(%ebp);movl (%esi), %eax;addl $, %eax;movl %eax, -(%ebp);movl (%eax), %edx": 1,
                "movl %edx, (%ecx);movl %ecx, (%edx);movl %ecx, (%eax);movl %edi, (%esi);calll - <ObOpenObjectByName+>": 2,
                "movl %ecx, (%edx);movl %ecx, (%eax);movl %edi, (%esi);calll - <ObOpenObjectByName+>;movl , %eax": 1,
                "pushl (%eax);pushl %edi;pushl %edi;pushl -(%ebp);pushl %edi": 1,
                "calll - <SeDeassignSecurity>;cmpl %edi, -(%ebp);jl  <IoCheckFunctionAccess+>;pushl $;pushl (%ebx)": 1,
                "xorl %edi, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);orl $-, -(%ebp);movl %edi, -(%ebp)": 1,
                "je  <PsSetLegoNotifyRoutine+>;movl $, -(%ebp);pushl %eax;pushl %esi;calll *(%esi)": 1,
                "pushl %esi;calll *(%esi);movl %eax, %ebx;movl %ebx, -(%ebp);cmpl %edi, %ebx": 1,
                "movw (%eax), %ax;cmpw %di, %ax;ja  <MmUnmapViewInSessionSpace+>;movl $, -(%ebp);movl , %eax": 1,
                "pushl %edi;pushl $;pushl %edi;pushl (%ebp);pushl %edi": 1,
                "movl %edi, (%esi);movl (%ebp), %eax;cmpw %di, (%eax);ja  <MmUnmapViewInSessionSpace+>;movw $, (%ebx)": 1,
                "ja  <MmUnmapViewInSessionSpace+>;movw $, (%ebx);movw (%ebp), %ax;movw %ax, (%ebx);leal -(%ebp), %eax": 1,
                "jmp  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;pushl (%ecx);pushl %esi;calll *%eax": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;addl $, %esi;pushl %edi": 1,
                "movl (%esi), %edi;cmpl %esi, %edi;je  <RtlGeneratedotName+>;subl $, %edi;pushl %edi": 1,
                "calll *%eax;jmp - <RtlGeneratedotName+>;pushl (%ebp);pushl %esi;calll *%eax": 1,
                "jmp - <RtlGeneratedotName+>;testb $, (%edi);jne - <ObOpenObjectByName+>;testb $, (%edi);jne - <ObOpenObjectByName+>": 1,
                "testl %ebx, %ebx;popl %ebx;jne - <ObOpenObjectByName+>;jmp - <ObOpenObjectByName+>;pushl (%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %ebx;pushl %edi;movl %eax, -(%ebp)": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <RtlGeneratedotName+>;pushl %ebx;pushl %edi": 1,
                "pushl %ecx;pushl -(%ebp);movzwl -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "je  <RtlGeneratedotName+>;pushl (%ebp);pushl %edi;calll *%eax;shrl $, %ebx": 1,
                "js  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;movl -(%ebp), %edx;leal (%ecx,%edx,), %ecx;decl (%ecx)": 1,
                "leal (%esi,%eax,), %esi;shll $, %ecx;pushl %ecx;leal (%esi), %eax;pushl %eax": 2,
                "cmpb $, -(%ebp);je  <RtlGeneratedotName+>;cmpw $, -(%ebp);ja  <IoCheckFunctionAccess+>;movb %bl, %al": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl %ebx": 2,
                "testb %al, %al;movl (%esi), %eax;je  <IoCheckFunctionAccess+>;testl %eax, %eax;je  <RtlGeneratedotName+>": 1,
                "pushl %esi;calll *%eax;movl (%edi), %eax;cmpl $-, %eax;jne  <MmUnmapViewInSessionSpace+>": 1,
                "testb $, (%edi);jne  <RtlGeneratedotName+>;cmpl $, (%edi);ja  <MmUnmapViewInSessionSpace+>;testb $, (%edi)": 1,
                "jne  <RtlGeneratedotName+>;cmpl $, (%edi);ja  <MmUnmapViewInSessionSpace+>;testb $, (%edi);jne  <MmUnmapViewInSessionSpace+>": 1,
                "ja  <MmUnmapViewInSessionSpace+>;testb $, (%edi);jne  <MmUnmapViewInSessionSpace+>;pushl (%ebp);pushl (%edi)": 1,
                "setne %al;popl %edi;popl %esi;popl %ebx;leave": 2,
                "calll *%eax;movl (%ebx), %eax;addl (%ebx), %eax;je - <RtlGeneratedotName+>;testb $, (%edi)": 1,
                "testb $, (%edi);jne  <RtlGeneratedotName+>;cmpl $, (%edi);ja  <MmUnmapViewInSessionSpace+>;pushl (%ebp)": 1,
                "pushl (%ebp);pushl %esi;calll - <RtlGeneratedotName+>;negb %al;sbbl %eax, %eax": 1,
                "pushl -(%ebp);pushl %edi;calll *(%edi);movl %eax, %ebx;testl %ebx, %ebx": 1,
                "movl -(%ebp), %ecx;movl (%eax), %eax;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl (%eax), %eax;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);orb $, (%esi)": 1,
                "orl $-, -(%ebp);orl $-, -(%ebp);pushl %esi;movl (%ebp), %esi;pushl %edi": 2,
                "andl $, (%ebp);cmpl $, (%esi);jbe  <RtlSelfRelativeToAbsoluteSD+>;addl $, %eax;movl %eax, -(%ebp)": 1,
                "je  <RtlGeneratedotName+>;movl (%esi), %eax;testl %eax, %eax;je  <RtlGeneratedotName+>;pushl -(%ebp)": 1,
                "xorl %edi, %edi;xorl %ebx, %ebx;cmpl %edi, ;jne  <IoCheckFunctionAccess+>;movl %fs:, %eax": 2,
                "je  <IoCheckFunctionAccess+>;movl , %eax;cmpl %edi, %eax;je  <RtlGeneratedotName+>;movl (%esi), %ecx": 1,
                "cmpl (%eax), %ecx;je  <IoCheckFunctionAccess+>;movl (%esi), %eax;testb $-, (%eax);jne  <RtlGeneratedotName+>": 1,
                "cmpl %eax, %edi;jae  <IoCheckFunctionAccess+>;movl (%edi), %ebx;movl %ebx, -(%ebp);cmpl %esi, %ebx": 1,
                "cmpl %esi, %eax;je  <IoCheckFunctionAccess+>;movl %edi, %ecx;movl (%ebp), %esi;movl %eax, %edi": 1,
                "movb -(%ebp), %bl;cmpl %esi, -(%ebp);je  <RtlGeneratedotName+>;pushl %esi;pushl -(%ebp)": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl %esi, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "pushl $;movl $, (%eax);addl $, %eax;popl %edx;orb $, -(%eax)": 1,
                "movzbl (%eax), %ebx;movw (%edx,%ebx,), %bx;movw %bx, (%ecx);jmp - <RtlUnicodeStringToInteger+>;movl %eax, (%esi)": 1,
                "andl $, (%ebp);cmpw $, (%ebx);jbe - <NtQueryInformationToken+>;movl (%ebp), %esi;movl (%ebp), %edi": 1,
                "calll *%eax;jmp - <NtQueryInformationToken+>;pushl (%ebp);pushl %esi;calll *%eax": 1,
                "pushl %esi;movl (%eax,%ecx,), %esi;testl %esi, %esi;je  <RtlUnicodeStringToInteger+>;cmpb $, ": 1,
                "incl %ecx;cmpl $, %ecx;jb - <RtlUnicodeStringToInteger+>;cmpl $-, %eax;je  <IoCheckFunctionAccess+>": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);calll - <ZwCreateEvent>;cmpl %edi, %eax": 1,
                "pushl %ecx;pushl %edi;pushl %edi;pushl %esi;pushl %eax": 1,
                "movl %eax, -(%ebp);je  <RtlUnicodeStringToInteger+>;pushl %esi;pushl %edi;movl $, %ecx": 1,
                "xorl %edi, %edi;cmpl %edi, (%ebx);je  <RtlUnicodeStringToInteger+>;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%esi), %ecx;cmpl (%esi), %ecx;jne  <IoCheckFunctionAccess+>;movl %eax, (%esi);incl %ecx": 1,
                "movl %eax, -(%ebp);cmpl %edi, (%ebp);jne  <CcZeroData+>;cmpl %edi, (%ebx);je  <CcZeroData+>": 1,
                "andl $-, %eax;movl %eax, -(%ebp);pushl $;pushl %edi;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitializeBitMap>;xorl %edi, %edi;pushl %edi": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "xorl %edi, %edi;movl (%ebx), %eax;addl $, %eax;pushl %eax;pushl %edi": 1,
                "je  <IoCheckFunctionAccess+>;cmpb $, (%ebx);je  <RtlUnicodeStringToInteger+>;movl (%ebx), %eax;shll $, %eax": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebx);movb $, -(%ebp);je  <RtlUnicodeStringToInteger+>": 1,
                "cmpl %esi, (%ebx);je  <RtlUnicodeStringToInteger+>;movl (%ebx), %ecx;calll - <ExAcquireFastMutexUnsafe>;cmpl %esi, (%ebx)": 1,
                "movl $, %esi;subl %esi, %edi;js  <RtlUnicodeStringToInteger+>;pushl %edi;pushl %ebx": 1,
                "movl (%eax), %ecx;testb $, %cl;je  <RtlUnicodeStringToInteger+>;testb $, %cl;jne  <IoCheckFunctionAccess+>": 1,
                "je  <RtlUnicodeStringToInteger+>;testb $, %cl;jne  <IoCheckFunctionAccess+>;andl $-, %ecx;movl %ecx, %esi": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;leal -(%eax,%ecx), %ecx;pushl %ecx;pushl %eax": 2,
                "jge  <RtlUnicodeStringToInteger+>;pushl (%ebp);pushl %ebx;calll - <RtlInitializeBitMap+>;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;andl $-, (%eax);movl (%ebp), %edx;cmpl (%esi), %edx": 1,
                "andl $-, (%eax);movl (%ebp), %edx;cmpl (%esi), %edx;movl (%eax), %ecx;jne  <IoCheckFunctionAccess+>": 1,
                "pushl %esi;pushl %ebx;calll  <RtlStringFromGUID+>;testl %eax, %eax;je  <RtlUnicodeStringToInteger+>": 1,
                "testl %edi, %edi;jge - <RtlUnicodeStringToInteger+>;cmpb $, -(%ebp);je  <RtlStringFromGUID+>;movl (%ebx), %ecx": 1,
                "jge - <RtlUnicodeStringToInteger+>;cmpb $, -(%ebp);je  <RtlStringFromGUID+>;movl (%ebx), %ecx;calll - <ExReleaseFastMutexUnsafe>": 1,
                "je  <RtlStringFromGUID+>;movl (%ebx), %ecx;calll - <ExReleaseFastMutexUnsafe>;popl %edi;popl %esi": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);leal (%edi), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movzwl (%edi), %eax;cmpl , %eax;jae  <NtQuerySecurityObject+>;movb $, -(%ebp)": 1,
                "jae  <RtlUnicodeStringToInteger+>;pushl %esi;pushl %ecx;calll - <RtlInitializeBitMap+>;testl %eax, %eax": 1,
                "shll $, %eax;addl %edi, %ecx;leal (%eax,%ecx), %esi;movl (%ebx), %eax;andl $, %esi": 1,
                "movl %esi, -(%ebp);calll *(%ebx);testb %al, %al;je  <RtlStringFromGUID+>;movl -(%ebp), %eax": 1,
                "andl %edi, %eax;pushl %ebx;movl %eax, -(%ebp);calll *(%ebx);testb %al, %al": 1,
                "incl (%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %ebx;addl $, %esi": 1,
                "movl -(%ebp), %esi;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %esi": 1,
                "pushl %ebx;calll *(%ebx);xorl %edi, %edi;pushl %edi;pushl %esi": 1,
                "movb %al, (%ebp);calll - <ExFreePoolWithTag>;cmpb $, (%ebp);je  <RtlStringFromGUID+>;pushl %edi": 1,
                "pushl $;pushl $;pushl %ebx;calll *(%ebx);testb %al, %al": 1,
                "movl %edx, -(%ebp);cmpl $, (%ebp);jge  <RtlUnicodeStringToInteger+>;cmpl %ebx, (%ebp);jne  <RtlUnicodeStringToInteger+>": 1,
                "movl (%ebp), %edi;leal (,%ecx,), %ecx;leal (,%edi,), %edi;movl %ecx, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl (%eax), %eax;movl $, %esi;cmpl %esi, (%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "cmpl %ebx, (%edi);jne  <RtlUnicodeStringToInteger+>;leal (%edi), %eax;pushl %eax;pushl %edi": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %ebx;pushl %ebx;pushl (%edi)": 1,
                "pushl -(%ebp);pushl %ebx;pushl %ebx;pushl (%edi);pushl -(%ebp)": 1,
                "pushl (%edi);pushl -(%ebp);calll - <ZwWriteFile>;cmpl %ebx, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "ja  <IoCheckFunctionAccess+>;cmpl %esi, -(%ebp);jb - <RtlUnicodeStringToInteger+>;movb $, (%ebp);movl $, %esi": 1,
                "movl $, %esi;cmpl %ebx, (%esi);je  <RtlUnicodeStringToInteger+>;movl (%esi), %ecx;calll - <ObfDereferenceObject>": 1,
                "je  <RtlUnicodeStringToInteger+>;movl (%esi), %ecx;calll - <ObfDereferenceObject>;pushl (%esi);calll - <ZwClose>": 1,
                "movl (%esi), %ecx;calll - <ObfDereferenceObject>;pushl (%esi);calll - <ZwClose>;addl $, %esi": 1,
                "movl $, %ecx;calll - <ExReleaseFastMutexUnsafe>;movb (%ebp), %al;popl %edi;popl %esi": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;cmpl %eax, %ebx;movl %eax, -(%ebp)": 1,
                "testb $, %dl;jne  <RtlUnicodeStringToInteger+>;incl %ebx;cmpl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "andl $, %ecx;addl %eax, %ecx;movl %eax, -(%ebp);movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl (%ebp), %ecx;leal (%esi), %eax;movl %eax, (%ecx);movl (%ebp), %ecx": 1,
                "movl %ecx, (%eax);movl (%ebp), %eax;movl %ebx, (%eax);movb $, %al;popl %edi": 1,
                "retl $;movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %eax;orl $-, (%eax)": 1,
                "je  <IoCheckFunctionAccess+>;testb $, %al;jne  <IoCheckFunctionAccess+>;movl (%ecx), %eax;movl %eax, %ecx": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;pushl %edi;leal -(%ebp), %eax": 1,
                "cmpl %edi, %eax;movl %eax, (%ebp);jl  <RtlQueryRegistryValues+>;movl %esi, -(%ebp);andl $, -(%ebp)": 1,
                "je  <RtlQueryRegistryValues+>;movl (%edi), %eax;testb $, %al;jne  <IoGetDeviceProperty+>;testb $, %al": 1,
                "pushl %eax;calll - <RtlInitUnicodeString>;andl $, (%ebp);movl (%ebp), %eax;incl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %esi;pushl $": 3,
                "popl %ebx;je  <RtlQueryRegistryValues+>;cmpl $, -(%ebp);je  <RtlQueryRegistryValues+>;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "calll - <ZwOpenKey>;popl %ebx;jmp  <RtlQueryRegistryValues+>;nop;nop": 1,
                "calll - <ExFreePoolWithTag>;movl (%ebp), %eax;testl %eax, %eax;je  <RtlQueryRegistryValues+>;pushl $": 1,
                "andl $, (%ecx);pushl %ebx;movl (%ebp), %ebx;cmpl $-, (%ebx);movl %eax, -(%ebp)": 1,
                "jne - <RtlQueryRegistryValues+>;jmp  <IoCheckFunctionAccess+>;cmpl $, %esi;je  <PsSetLegoNotifyRoutine+>;pushl (,%esi,)": 1,
                "pushl %eax;calll - <RtlAppendUnicodeToString>;movl %eax, %esi;cmpl %ebx, %esi;jl  <IoCheckFunctionAccess+>": 1,
                "addb %ah, (%ebp);addb %ch, (%bx,%di);jae  <RtlQueryRegistryValues+>;je  <RtlQueryRegistryValues+>;jb  <RtlQueryRegistryValues+>": 3,
                "jae  <RtlQueryRegistryValues+>;addb %dh, %gs:(%edx);popl %esp;addb %ch, (%esi);addb %al, (%eax,%eax)": 1,
                "addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <RtlQueryRegistryValues+>;jns  <RtlQueryRegistryValues+>;popl %esp": 2,
                "addb %dh, (%edx);addb %bl, %gs:(%eax,%eax);addb %ch, (%ecx);arpl %ax, (%eax);jb  <RtlQueryRegistryValues+>": 1,
                "outsl (%esi), %dx;addb %dh, (%edi);jae  <RtlQueryRegistryValues+>;andb %al, (%eax);decl %esi": 1,
                "andb %al, (%eax);decl %esi;addb %dl, (%eax,%eax);addb %al, (%ebx);jne  <RtlQueryRegistryValues+>": 1,
                "je  <RtlQueryRegistryValues+>;addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);jne  <RtlQueryRegistryValues+>": 2,
                "jb  <RtlQueryRegistryValues+>;jb  <RtlQueryRegistryValues+>;addb %ch, %gs:(%esi);je  <RtlQueryRegistryValues+>;incl %ebx": 2,
                "jb  <RtlQueryRegistryValues+>;addb %ch, %gs:(%esi);je  <RtlQueryRegistryValues+>;incl %ebx;addb %ch, (%edi)": 2,
                "addb %ch, (%eax,%eax);addb %dl, (%eax);addb %ah, (%ebp);addb %ch, (%bx,%di);jae  <RtlQueryRegistryValues+>": 1,
                "movl (%ebp), %edx;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);xorl %eax, %eax;pushl %edi;movl (%ebp), %edi;movl %eax, (%edi)": 1,
                "calll - <IoQueueWorkItem+>;leave;retl $;nop;incl %esp": 1,
                "imull $, (%eax), %eax;jb  <IoGetDeviceProperty+>;addb %al, (%eax);addb %al, (%eax);nop": 1,
                "cmpl $, %edx;pushl %ebx;pushl %esi;pushl %edi;je  <IoOpenDeviceRegistryKey+>": 1,
                "je  <IoOpenDeviceRegistryKey+>;cmpl $, %edx;je  <IoOpenDeviceRegistryKey+>;movl (%ebp), %ecx;cmpl $, %ecx": 1,
                "movl %eax, %ecx;movl %ecx, %edx;shrl $, %ecx;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %ecx, %edx;shrl $, %ecx;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);andw $, (%ebx,%eax);jmp  <IoCreateController+>;leal -(%ebp), %eax": 1,
                "testl %eax, %eax;jl  <IoCreateController+>;movl -(%ebp), %eax;cmpl $-, %eax;je  <IoCreateController+>": 1,
                "calll - <IoRequestDeviceEject+>;jmp  <RtlSelfRelativeToAbsoluteSD+>;lodsl (%esi), %eax;addl %ecx, (%edi);testb %al, (%edx)": 1,
                "lodsl (%esi), %eax;addl %ecx, (%edi);testb %al, (%edx);decl %esp;addb %bl, (%ebp)": 1,
                "decl %ecx;addb %al, (%eax,%eax);addb %al, (%eax);addb %al, (%ebx);insb %dx, %es:(%edi)": 1,
                "jae  <IoGetDeviceProperty+>;jae  <IoGetDeviceProperty+>;addb %al, (%eax);incl %ebx;addb %ch, (%eax,%eax)": 1,
                "addb %ah, (%ecx);jb  <IoGetDeviceProperty+>;addb %dh, %fs:(%edi);popal;addb %dh, (%edx)": 1,
                "testl %eax, %eax;je  <LdrFindResourceDirectory_U+>;movl (%ebx), %ecx;addl %ecx, %eax;addl %ebx, %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebx), %ecx;andw $, (%eax,%ecx);movl (%ebp), %ecx;leal (%ecx,%eax), %edi": 1,
                "je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);movl , %eax;jne  <IoGetDeviceProperty+>;movl , %eax": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl %esi, (%esi)": 1,
                "movl (%eax), %eax;movl %eax, (%esi);leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "cmpl %eax, %ecx;jb  <IoCheckFunctionAccess+>;cmpl $, ;jne  <IoGetDeviceProperty+>;cmpl %ebx, ": 1,
                "calll  <IoGetDeviceProperty+>;testl %eax, %eax;jl  <IoGetDeviceProperty+>;cmpl $, -(%ebp);movl , %edi": 1,
                "movl %eax, %esi;testl %esi, %esi;jl  <IoGetDeviceProperty+>;movl %edi, %ecx;calll - <ObfDereferenceObject>": 1,
                "addb %dh, (%esi);addb %dh, %gs:(%edx);jns  <IoGetDeviceProperty+>;outsl (%esi), %dx;addb %ch, (%esi)": 1,
                "incl %ecx;addb %ch, (%esi);outsl (%esi), %dx;addb %ch, (%esi);jns  <IoGetDeviceProperty+>": 1,
                "addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <IoGetDeviceProperty+>;jns  <IoGetDeviceProperty+>;popl %esp": 1,
                "movl (%ebp), %ecx;movl %eax, -(%ebp);movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx": 2,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);calll - <RtlInitUnicodeString>;leal -(%ebp), %eax": 1,
                "jb - <IoGetDeviceProperty+>;cmpl $, -(%ebp);je  <IoGetDeviceProperty+>;pushl -(%ebp);calll - <CcScheduleReadAhead+>": 1,
                "calll *%ebx;movl (%esi), %edi;leal -(%edi), %edx;xorl %edi, %edx;andl $, %edx": 1,
                "jmp - <MmPrefetchPages+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>;jmp - <IoGetDeviceProperty+>": 1,
                "je  <PoQueueShutdownWorkItem+>;movl $, -(%ebp);calll  <IoGetDeviceProperty+>;jmp - <IoGetDeviceProperty+>;movl %fs:, %eax": 1,
                "movl %edx, -(%ebp);cmpl (%ebx), %eax;ja  <IoGetDeviceProperty+>;addl $, %eax;andl $, %eax": 1,
                "leal -(%ebx), %esi;movl (%esi), %eax;andl $-, %eax;orb $, (%eax);movl (%esi), %ecx": 1,
                "movl %edx, -(%ebp);movl %eax, -(%ebp);jae - <IoGetDeviceProperty+>;jmp - <IoGetDeviceProperty+>;movl -(%ebp), %eax": 1,
                "jmp - <IoGetDeviceProperty+>;movl -(%ebp), %eax;movl (%edx), %edi;movl (%eax), %eax;andl $-, %edi": 1,
                "pushl $;sarl $, %edi;pushl $;movl %eax, -(%ebp);incl %edi": 1,
                "pushl $;movl %eax, -(%ebp);incl %edi;calll - <PsGetProcessSectionBaseAddress+>;movl %eax, %esi": 1,
                "movl $, -(%ebp);jmp - <IoGetDeviceProperty+>;nop;nop;nop": 3,
                "calll - <RtlQueryRegistryValues>;movl (%ebp), %esi;movl %eax, %edi;cmpl %ebx, %edi;movl %ebx, (%esi)": 1,
                "addb %dh, (%eax);addb %ch, ;addb %dh, (%eax);addb %dh, (%eax);addb %dh, (%eax)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <IoGetDeviceProperty+>;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "pushl %eax;calll - <IoGetDeviceProperty+>;xorl %ebx, %ebx;cmpl %ebx, %eax;movl %eax, (%ebp)": 1,
                "movsl (%esi), %es:(%edi);movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl %eax, (%ecx);movl (%edx), %edi;addl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "cmpl , %esi;jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;popl %edi;popl %esi": 1,
                "movzwl %ax, %eax;shll $, %ecx;addl %eax, %ecx;incl %esi;incl %edx": 1,
                "testw %cx, %cx;jne  <IoGetDeviceProperty+>;movb $, %al;popl %esi;popl %ebp": 1,
                "popl %ebx;movw %ax, (%esi);pushl %ebx;leal (%ebp), %eax;pushl %eax": 1,
                "calll - <IoGetDeviceProperty+>;testb %al, %al;je  <IoCheckFunctionAccess+>;movb (%ebp), %al;pushl $": 7,
                "je  <IoCheckFunctionAccess+>;movb (%ebp), %al;movb %al, (%esi);xorl %eax, %eax;popl %ebx": 1,
                "leal (%ebx), %edi;leal -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);addl $, %eax": 1,
                "leal (%ebx), %eax;pushl $;movsl (%esi), %es:(%edi);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);pushl %eax;movw $, (%ebx);calll - <wcscpy>;movl (%ebx), %eax": 1,
                "xorl %edx, %edx;testl %ecx, %ecx;jbe  <IoGetDeviceProperty+>;movl (%ebp), %esi;movl (%esi,%edx,), %esi": 1,
                "addb %al, (%esi);decl %edi;addb %al, (%eax);addb %cl, %ah;int": 1,
                "calll - <IoGetAttachedDeviceReference+>;movl (%ebp), %esi;movl (%esi), %eax;cmpl %esi, %eax;movl %eax, (%ebp)": 1,
                "je  <ObCreateObjectType+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <IoCheckFunctionAccess+>;leal (%eax), %ecx": 1,
                "movl (%esi), %ecx;movl %ecx, %edx;xorl %eax, %eax;shrl $, %ecx;movl %ebx, %edi": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %edx;pushl %esi": 1,
                "movl %eax, -(%ebp);je  <IoGetDeviceProperty+>;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "pushl -(%ebp);pushl (%ebp);calll - <IoGetDeviceProperty+>;cmpl $, -(%ebp);je  <IoGetDeviceProperty+>": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;cmpl %eax, (%ecx);pushl %esi": 1,
                "movl (%ebx), %eax;cmpl %eax, (%ecx);pushl %esi;pushl %edi;je - <IoGetDeviceProperty+>": 1,
                "movl %esi, (%eax,%edx,);incl (%ecx);popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ebx), %eax;movl %eax, (%edi);movl (%ebp), %eax;testl %eax, %eax;jne  <IoGetDeviceProperty+>": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <IoCheckFunctionAccess+>;pushl (%ebp);movl (%ebp), %eax": 1,
                "pushl (%eax);pushl %ebx;pushl (%ebp);pushl (%ebp);pushl %esi": 1,
                "movl %esi, (%ecx);movl %edx, (%ecx);movl %ecx, (%esi);movl %ecx, (%edx);jl  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %esi;movl (%ebp), %ebx;movl (%ebp), %eax;incl -(%ebp);movl -(%ebp), %ecx": 1,
                "pushl %esi;pushl $;movl %eax, -(%ebp);calll - <KeReleaseMutex>;cmpl %esi, -(%ebp)": 1,
                "cmpl %esi, (%ebp);jne  <IoWMIRegistrationControl+>;testl %ebx, %ebx;jne  <IoWMIRegistrationControl+>;testl %esi, %esi": 1,
                "calll  <IoGetDeviceProperty+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <IoCheckFunctionAccess+>;movl (%ebp), %esi": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;cmpl $, (%ebp);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "xorl %eax, %eax;cmpl %eax, -(%ebp);jl  <IoCheckFunctionAccess+>;movl -(%ebp), %esi;pushl %eax": 1,
                "addl $, %edi;pushl %edi;movl %eax, (%esi);movl %eax, (%esi);calll  <IoGetDeviceProperty+>": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;popl %ebx": 1,
                "pushl $;pushl %edi;calll - <ExFreePoolWithTag>;jmp - <IoGetDeviceProperty+>;calll - <IoGetDeviceProperty+>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl , %ecx": 1,
                "jmp  <IoGetDeviceProperty+>;movl -(%ebp), %eax;movzbl (%eax), %eax;movl %eax, -(%ebp);pushl %eax": 1,
                "calll - <KeAttachProcess>;pushl -(%ebp);calll - <ZwClose>;calll - <KeDetachProcess>;movl -(%ebp), %eax": 1,
                "movl %edi, (%eax);jmp  <IoGetDeviceProperty+>;nop;nop;nop": 1,
                "int;xorl %eax, %eax;cmpw %cx, (%edx);sete %al;jmp - <IoGetDeviceProperty+>": 1,
                "xorl %ebx, %ebx;cmpl $, (%ebp);jne  <IoGetDeviceProperty+>;pushl %esi;movl (%ebp), %esi": 1,
                "movl %eax, -(%ebp);movl %ecx, (%ebp);jne - <RtlQueryRegistryValues+>;cmpl $, %eax;je  <LdrFindResourceDirectory_U+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <SeQuerySecurityDescriptorInfo>;cmpl $, (%ebp)": 1,
                "calll - <ObDereferenceSecurityDescriptor>;movl %esi, %eax;popl %esi;popl %ebp;retl $": 1,
                "nop;nop;addl %eax, (%eax);addb (%eax), %al;addb (%eax), %al": 2,
                "popl %ecx;movl (%ebx), %esi;movl (%ebp), %eax;movl %eax, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "leave;retl $;movl $, %eax;jmp - <IoGetDeviceProperty+>;nop": 1,
                "movl $, %eax;jmp - <IoGetDeviceProperty+>;nop;nop;nop": 2,
                "cmpl %eax, %edi;movl %edi, -(%ebp);je - <IoGetDeviceProperty+>;movl -(%ebp), %edi;jmp - <IoGetDeviceProperty+>": 1,
                "movl %ebx, -(%ebp);pushl %esi;movl -(%ebp), %esi;pushl %edi;pushl $": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $;calll - <ExAllocateFromPagedLookasideList>": 1,
                "movl %eax, %esi;xorl %ecx, %ecx;cmpl %ecx, %esi;je  <IoGetDeviceProperty+>;leal (%esi), %eax": 1,
                "addl %eax, %esi;subl %eax, %edi;testl %eax, %eax;jne - <IoGetDeviceProperty+>;popl %edi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;cmpl (%ebp), %ecx": 2,
                "movl (%ebp), %eax;andl $, (%eax);jmp - <IoGetDeviceProperty+>;movl $, %eax;jmp - <IoGetDeviceProperty+>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %esi;calll  <IoGetDeviceProperty+>;movl %eax, %edi": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <IoGetDeviceProperty+>;movl (%esi), %eax;movl %eax, %ebx": 1,
                "leal (%esi,%ebx), %ecx;movl %ecx, -(%ebp);addl $, %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "movl %ebx, -(%ebp);jmp  <IoGetDeviceProperty+>;nop;nop;nop": 1,
                "cmpl %edx, %esi;ja  <IoGetDeviceProperty+>;testl %ecx, %ecx;je  <IoGetDeviceProperty+>;cmpl $, %ecx": 1,
                "addl $, %eax;cmpl $, -(%eax);ja  <IoGetDeviceProperty+>;cmpl $, (%eax);ja  <IoGetDeviceProperty+>": 1,
                "movl %eax, -(%ebp);calll  <IoGetDeviceProperty+>;movl %eax, %ebx;testl %ebx, %ebx;je  <IoGetDeviceProperty+>": 1,
                "popl %ebx;popl %ebp;retl $;xorl %esi, %esi;jmp - <IoGetDeviceProperty+>": 1,
                "jmp - <IoGetDeviceProperty+>;pushl %ebx;addb %al, (%ecx);decl %ebp;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, (%ebp);pushl %ebx;addb %al, (%ebp);pushl %edx": 1,
                "decl %esp;addb %dl, (%eax,%eax);addb %al, (%eax,%eax);addb %al, (%esi);incl %ecx": 1,
                "addb %dl, (%eax,%eax);addb %dl, (%ebx);decl %edi;addb %al, (%esi);pushl %esp": 1,
                "movl %eax, (%edx);leal -(%ecx), %esi;movl %esi, -(%ebp);movl (%esi), %ecx;testl $, %ecx": 1,
                "jne  <IoGetDeviceProperty+>;movl %edi, -(%ebp);movl (%esi), %eax;movl (%eax), %eax;movl $, (%eax)": 1,
                "movl (%esi), %eax;movl (%eax), %eax;movl %edi, (%eax);orl $-, -(%ebp);movl (%esi), %eax": 1,
                "movl $, %eax;jmp - <ProbeForWrite+>;movl %esi, -(%ebp);jmp - <RtlAreAnyAccessesGranted+>;calll  <ExRaiseAccessViolation>": 1,
                "jmp - <RtlAreAnyAccessesGranted+>;addw $-, -(%ebp);je - <FsRtlIsNameInExpression+>;jmp - <FsRtlIsNameInExpression+>;movl $, -(%ebp)": 1,
                "addl $, %eax;movl %eax, (%ecx);jmp - <ObCheckCreateObjectAccess+>;movl (%edi), %eax;subl $, %eax": 1,
                "andl $, (%ebp);shrl $, %eax;andl $, %eax;movl %eax, (%edi);cmpl $, (%esi)": 1,
                "je  <IoCheckFunctionAccess+>;movl (%eax), %ecx;testb $, %cl;je  <IoWMIRegistrationControl+>;andl $, %ecx": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);jne  <IoGetDeviceProperty+>;cmpl %eax, (%ebx);je  <IoGetDeviceProperty+>": 1,
                "pushl $;leal (%eax,%eax,), %eax;shll $, %eax;pushl %eax;pushl $": 1,
                "leal (%eax,%eax,), %eax;shll $, %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "movl , %eax;pushl %ebx;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %edx;pushl %esi;movl (%eax), %esi": 1,
                "je - <IoGetDeviceProperty+>;movl $, %eax;cmpl %eax, %ebx;ja  <FsRtlOplockFsctrl+>;je  <RtlUpcaseUnicodeStringToOemString+>": 1,
                "subl $, %ebx;je  <IoCheckFunctionAccess+>;subl $, %ebx;je  <IoCheckFunctionAccess+>;subl $, %ebx": 6,
                "movl %esp, %ebp;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;xorb %al, %al": 1,
                "movl (%ebp), %esi;movl %eax, -(%ebp);movl (%esi), %eax;xorl %ebx, %ebx;testb $, %al": 1,
                "movl (%esi), %ecx;pushl %ebx;movl %eax, (%ecx);pushl $;movl %ecx, (%eax)": 1,
                "cmpl $, %eax;je  <RtlxUnicodeStringToOemSize+>;cmpl $, %eax;jne  <IoGetDeviceProperty+>;pushl %esi": 1,
                "calll - <KeReleaseMutex>;movl -(%ebp), %ecx;popl %esi;popl %ebx;calll - <IoQueueWorkItem+>": 1,
                "calll - <IoQueueWorkItem+>;leave;retl $;pushl %edx;calll - <CcUnpinDataForThread+>": 1,
                "calll - <RtlGeneratedotName+>;testb %al, %al;jne - <MmUnmapViewOfSection+>;movl $, %esi;jmp - <MmUnmapViewOfSection+>": 1,
                "jne  <IoCheckFunctionAccess+>;pushl (%ebp);pushl %ebx;pushl %esi;calll - <SeReleaseSecurityDescriptor+>": 1,
                "je  <IoGetDeviceProperty+>;movl (%ebp), %esi;pushl $;popl %ecx;leal (%edx), %edi": 1,
                "calll - <IoGetAttachedDeviceReference+>;xorl %eax, %eax;cmpl %eax, %edi;movb $, -(%ebp);movb $, (%ebp)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl ;pushl $": 3,
                "pushl $;pushl ;pushl $;pushl %eax;calll - <ObReferenceObjectByHandle>": 4,
                "movb $, -(%ebp);movl -(%ebp), %ecx;incl -(%ebp);movl %edi, (%ebx,%ecx,);cmpl %eax, (%edi)": 1,
                "andl $-, %eax;addl %eax, -(%ebp);incl -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax": 1,
                "cmpl -(%ebp), %edi;jb - <IoGetDeviceProperty+>;movb (%ebp), %al;orb -(%ebp), %al;jne  <RtlValidRelativeSecurityDescriptor+>": 1,
                "movl (%ebp), %ecx;xchgl %eax, (%ecx);cmpb $, (%esi);jne  <IoCheckFunctionAccess+>;movl (%esi), %esi": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%esi), %esi;orb $, (%esi);movl $, -(%ebp);pushl $": 1,
                "orb $, (%esi);movl $, -(%ebp);pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "cmpl %esi, -(%ebp);jbe  <IoGetDeviceProperty+>;movl (%ebx,%esi,), %ecx;calll - <ObfDereferenceObject>;incl %esi": 1,
                "andl $, -(%eax);movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx);movl %edx, (%ecx)": 1,
                "movl %ecx, (%edx);movl %edx, (%ecx);movl (%eax), %eax;jmp - <IoGetDeviceProperty+>;popl %esi": 1,
                "jb  <IoCheckFunctionAccess+>;cmpl $, %edi;jb  <IoCheckFunctionAccess+>;addl $-, %edx;shrl $, %edx": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx);testl %eax, %eax;jne  <FsRtlOplockFsctrl+>": 1,
                "movl (%ebp), %eax;movl %eax, (%edi);movl (%ebp), %eax;movl %eax, (%edi);movl (%edi), %esi": 1,
                "cmpb $, (%ebp);jne  <FsRtlOplockFsctrl+>;cmpb $, (%ebp);je  <IoGetDeviceProperty+>;orb $, (%esi)": 1,
                "pushl $;calll - <ExAllocatePoolWithQuotaTag>;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "movl (%eax), %esi;shll $, %esi;subl %ecx, %esi;movl -(%ebp), %ecx;addl $, %ecx": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);jne  <RtlCreateHeap+>;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;jne - <MmLockPagableSectionByHandle+>": 1,
                "pushl %esi;xorl %esi, %esi;xorl %ebx, %ebx;cmpl %esi, (%ebp);pushl %edi": 1,
                "popl %ebp;retl $;pushl $;pushl %esi;pushl %ebx": 1,
                "calll - <RtlImageNtHeader>;movzwl (%eax), %ecx;andl $, -(%ebp);leal (%ecx,%eax), %ecx;movzwl (%eax), %eax": 1,
                "addl %edx, %eax;cmpl %eax, %edi;jb  <MmLockPagableImageSection+>;addl $, %ecx;incl -(%ebp)": 1,
                "incl (%esi);jne  <MmLockPagableImageSection+>;leal (%esi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "popl %esi;popl %ebx;je  <IoCheckFunctionAccess+>;popl %edi;leave": 1,
                "movl (%ecx), %eax;orb $, (%eax);jmp - <IoCheckEaBufferValidity+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "jmp - <IoCheckEaBufferValidity+>;xorl %edx, %edx;incl %edx;jmp - <FsRtlNotifyFilterChangeDirectory+>;nop": 1,
                "addb %al, (%eax);addb %al, (%ecx);addl %edi, (%ecx);popl %ebp;lock": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);je - <MmLockPagableImageSection+>;jmp  <IoCheckFunctionAccess+>;movb $, %al": 1,
                "jmp - <MmLockPagableImageSection+>;nop;nop;nop;nop": 1,
                "cmpb $, %al;ja  <MmLockPagableImageSection+>;cmpb $, %al;je  <MmLockPagableImageSection+>;testb $, (%esi)": 1,
                "testb $, (%esi);je  <MmLockPagableImageSection+>;pushl $;pushl $;pushl %ebx": 1,
                "movl %edx, (%ecx);leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <MmLockPagableImageSection+>;cmpl $, (%ebp)": 1,
                "cmpl %ecx, (%ecx);je  <MmLockPagableImageSection+>;cmpl $, (%ebp);jne  <MmLockPagableImageSection+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;addl $, %ecx;calll *;pushl $;pushl %esi": 1,
                "subl $, %esi;jmp - <MmLockPagableImageSection+>;andb $-, (%edi);testb $, (%edi);jne - <MmLockPagableImageSection+>": 1,
                "jne - <MmLockPagableImageSection+>;movl (%eax), %ecx;testl %ecx, %ecx;js - <MmLockPagableImageSection+>;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>": 7,
                "orl $, %ecx;movl %ecx, (%esi);movl (%ebx), %ecx;movl %ecx, (%eax);leal (%ebx), %ecx": 1,
                "addl $, %eax;movl %ecx, %edx;movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx)": 1,
                "je  <IoCheckFunctionAccess+>;leal (%ecx,%eax), %edi;testl %edi, %edi;movl %edi, -(%ebp);jne  <RtlPrefixUnicodeString+>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %ebx;calll - <PsImpersonateClient+>;movl %eax, -(%ebp)": 3,
                "movb $, (%eax);movl -(%ebp), %ecx;calll - <ExReleaseFastMutexUnsafe>;movl (%ebp), %edi;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %ecx;calll - <ExReleaseFastMutexUnsafe>;movl (%ebp), %edi;movl -(%ebp), %esi;jmp - <SeQuerySecurityDescriptorInfo+>": 1,
                "movl -(%ebp), %esi;jmp - <SeQuerySecurityDescriptorInfo+>;movzbl %al, %edx;movl %ecx, %eax;subl %edx, %eax": 1,
                "movl (%ebp), %eax;testb $, (%eax);jne - <RtlGeneratedotName+>;jmp  <IoCheckFunctionAccess+>;cmpl $, %edi": 1,
                "jmp  <RtlStringFromGUID+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;jmp - <RtlDeleteAtomFromAtomTable+>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <RtlGetFirstRange+>;leal (%eax), %ecx": 2,
                "movl (%edi), %eax;movl (%edi), %edx;movl (%esi), %ebx;movb $, %cl;calll - <_allshr>": 1,
                "subl %edx, %ebx;addl -(%ebp), %ebx;cmpl (%esi), %ebx;jbe  <RtlGetFirstRange+>;movl %edi, %edx": 1,
                "movl %edi, %edx;movl %esi, %ecx;calll - <KeInsertHeadQueue+>;movl (%ebp), %ebx;jmp  <RtlPrefixUnicodeString+>": 1,
                "pushl %esi;calll - <KeStackAttachProcess>;movl $, -(%ebp);jmp - <CcCopyRead+>;leal -(%ebp), %eax": 1,
                "calll - <KeUnstackDetachProcess>;jmp - <CcCopyRead+>;cmpl %ebx, (%ebp);jne  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movl %ebx, %eax;subl %edx, %eax;movl %eax, %edi;andl %ecx, %edi;negl %edi": 1,
                "andl $, -(%ebp);jmp - <NtFreeVirtualMemory+>;nop;nop;nop": 1,
                "cmpb $, (%ebp);pushl %esi;movl %edx, (%ebp);je  <IoCheckFunctionAccess+>;testl %edx, %edx": 1,
                "movl , %eax;movw (%edi), %dx;movw (%ebx), %si;incl %edi;incl %edi": 1,
                "cmpw $, %dx;jae  <IoCheckFunctionAccess+>;movzwl %dx, %edx;cmpw $, %si;movzwl %si, %ecx": 1,
                "jmp - <RtlPrefixUnicodeString+>;xorb %al, %al;jmp - <RtlPrefixUnicodeString+>;nop;nop": 1,
                "orl $, %ebx;movl %eax, (%edi);cmpl , %eax;movl %esi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "cmpl , %ecx;jae  <IoCheckFunctionAccess+>;movl (%ebp), %esi;cmpl %esi, %eax;movb $, -(%ebp)": 1,
                "orl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl %eax, %ebx;movl (%esi), %ecx": 1,
                "ja  <RtlSubAuthoritySid+>;movl (%esi), %eax;cmpl $, (%eax);movl %eax, -(%ebp);je  <RtlSubAuthoritySid+>": 1,
                "pushl %eax;pushl $;pushl (%ebp);pushl %ebx;calll - <PsIsThreadTerminating+>": 1,
                "movl (%edi), %edx;movl (%esi), %eax;movl %edx, %ebx;shrl $, %ebx;andl $, %ebx": 1,
                "calll - <RtlMultiByteToUnicodeN+>;movl %eax, %esi;testl %esi, %esi;jl  <RtlPrefixUnicodeString+>;pushl (%ebp)": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <IoCheckFunctionAccess+>;xorl %ecx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl (%edi), %edx;movl %edx, -(%ebp);orl $-, -(%ebp);movl , %eax;cmpl %eax, %ecx": 1,
                "pushl %eax;pushl -(%ebp);calll - <RtlPrefixUnicodeString+>;movl %eax, -(%ebp);movl -(%ebp), %ecx": 1,
                "calll - <RtlPrefixUnicodeString+>;movl %eax, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "movl %esi, -(%ebp);jne  <SeRegisterLogonSessionTerminatedRoutine+>;xorl %ecx, %ecx;movl -(%ebp), %edi;testl %edi, %edi": 1,
                "jne  <RtlStringFromGUID+>;movl (%ebp), %edi;leal (%ebx), %eax;movl %eax, (%ebp);movw -(%ebp), %ax": 1,
                "orw %ax, (%ebx);cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %esi;movzwl (%esi), %ecx": 1,
                "movl %ecx, %eax;pushl (%ebp);shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 2,
                "movl %edx, (%ebx);jne  <RtlPrefixUnicodeString+>;movl (%ebp), %eax;movl (%eax), %eax;movzbl (%eax), %eax": 1,
                "orw %ax, (%ebx);movl (%ebp), %eax;movl %ebx, (%eax);xorl %edi, %edi;cmpb $, -(%ebp)": 1,
                "xorl %edi, %edi;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl %ecx;pushl %eax;pushl (%ebp)": 2,
                "je  <SeSetSecurityDescriptorInfo+>;movl $, (%eax);testb $, (%ebp);je  <SeSetSecurityDescriptorInfo+>;orb $, (%eax)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <SeSetSecurityDescriptorInfo+>;movl %fs:, %eax": 1,
                "pushl (%ebp);calll - <SeCaptureSecurityDescriptor>;movl %eax, %esi;testl %esi, %esi;jl  <NtSetSecurityObject+>": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movb $, -(%ebp);movl %esi, (%ebx)": 1,
                "movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%esi);movl %ebx, (%eax);movb $, %cl": 1,
                "jne  <ObSetSecurityObjectByPointer+>;cmpl $, %edi;je - <NtAdjustPrivilegesToken+>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl %ebx, %ecx": 1,
                "incl (%esi);je  <IoCheckFunctionAccess+>;movl %edi, %eax;calll - <_CIsqrt+>;retl $": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movzbl (%eax), %eax;leal (,%eax,), %eax": 1,
                "je  <IoCheckFunctionAccess+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 5,
                "leal (%ebp), %eax;pushl %eax;calll - <IoCreateFileSpecifyDeviceObjectHint>;jmp - <RtlGeneratedotName+>;pushl %esi": 1,
                "movl %fs:, %eax;movl %eax, %esi;testb $, (%esi);jne  <IoCheckFunctionAccess+>;movl %fs:, %eax": 1,
                "testb $, (%esi);jne  <IoCheckFunctionAccess+>;movl %fs:, %eax;movl (%ebp), %ecx;xorl %edx, %edx": 1,
                "movl $, %ebx;testw %dx, %bx;je  <RtlSetOwnerSecurityDescriptor+>;orl %ebx, %eax;movl (%ebp), %ebx": 1,
                "je  <RtlSetOwnerSecurityDescriptor+>;orl %ebx, %eax;movl (%ebp), %ebx;movw %ax, (%ecx);movswl (%ecx), %eax": 1,
                "movswl (%ecx), %ecx;cmpl %ecx, %eax;jbe  <IoQueryDeviceDescription+>;pushl $;calll - <ExAllocateFromPagedLookasideList>": 1,
                "je  <RtlSetOwnerSecurityDescriptor+>;movl %edi, (%eax);movw %di, (%eax);movl %eax, (%eax);movl %eax, (%eax)": 1,
                "cmpl %ecx, %edi;je  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;leal (%esi), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;leal (%esi), %eax;pushl %eax;movl (%ebp), %eax;pushl %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %edx, (%esi);jne  <IoCheckFunctionAccess+>;movl %edx, (%edi);movl (%ebx), %eax": 1,
                "movl %eax, -(%ebp);andl $, -(%ebp);cmpl $, -(%ebp);je  <IoQueryDeviceDescription+>;movl (%ebx), %eax": 1,
                "movl %eax, (%ebp);jne  <IoQueryDeviceDescription+>;movl (%eax), %eax;movl %eax, (%edi);movl (%ebx), %ecx": 1,
                "movl (%ebx), %ecx;cmpl %edx, %ecx;movl %ecx, (%ebp);movl %ecx, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "movl %edx, (%edi);movl %ecx, (%esi);movl %edx, (%esi);movl (%eax), %ecx;movl %ecx, (%edi)": 1,
                "addl $, %eax;movl %eax, (%edi);movl %edi, (%ecx);movl %edi, (%eax);movl (%ebp), %eax": 1,
                "leal (%esi), %edi;movl %ecx, (%edi);movl %eax, (%edi);movl %edi, (%ecx);movl %edi, (%eax)": 2,
                "movl %ebx, (%esi);movl $, %ecx;movl %edx, ;calll *;movl (%ebp), %eax": 1,
                "movl $, %ecx;movl %edx, ;calll *;movl (%ebp), %eax;testb $, (%eax)": 1,
                "pushl $;pushl $;pushl (%ebp);calll - <KeReleaseSemaphore>;incl (%esi)": 1,
                "calll - <ObfDereferenceObject>;movl (%ebp), %eax;popl %ebx;popl %edi;popl %esi": 1,
                "pushl (%ebp);pushl (%ebp);calll - <RtlSetOwnerSecurityDescriptor+>;popl %ebp;retl $": 2,
                "testl %eax, %eax;je  <FsRtlNotifyUninitializeSync+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "calll - <NtWaitForSingleObject+>;testb %al, %al;je - <SeCreateClientSecurity+>;jmp  <IoCheckFunctionAccess+>;nop": 1,
                "pushl %eax;pushl %ecx;pushl %esi;calll  <FsRtlNotifyInitializeSync+>;testl %eax, %eax": 1,
                "pushl %eax;pushl %esi;calll - <SeValidSecurityDescriptor+>;pushl -(%ebp);movl %eax, %edi": 1,
                "pushl %esi;calll - <RtlRandom+>;movl %edi, %eax;popl %edi;popl %esi": 1,
                "je  <IoCheckFunctionAccess+>;cmpl $, (%ebx);jne  <FsRtlNotifyInitializeSync+>;movl (%ebx), %ecx;testl %ecx, %ecx": 1,
                "orl $, %eax;jmp - <RtlRemoveUnicodePrefix+>;orl $, %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "xaddl %eax, (%ecx);jmp - <RtlRemoveUnicodePrefix+>;testb $, -(%ebp);jne - <RtlRemoveUnicodePrefix+>;movl %eax, -(%ebp)": 1,
                "cmpl $, -(%ebp);jbe - <FsRtlNotifyInitializeSync+>;movl -(%ebp), %edx;movl %eax, %ecx;subl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);jmp  <FsRtlNotifyInitializeSync+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "cmpl (%ebp), %edx;je  <FsRtlNotifyInitializeSync+>;addl $, (%ebp);incl -(%ebp);movl -(%ebp), %eax": 1,
                "incl -(%ebp);movl -(%ebp), %eax;cmpl (%ebx), %eax;jb - <FsRtlNotifyInitializeSync+>;movl -(%ebp), %edi": 1,
                "movl %edi, %eax;je - <FsRtlNotifyInitializeSync+>;movl (%ebp), %esi;pushl $;popl %ecx": 1,
                "leal (%eax), %edi;movl %ecx, (%eax);movl %edi, (%eax);movl (%ebx), %ecx;movl , %esi": 1,
                "movl %ecx, (%eax);movl %edi, (%eax);movl (%ebx), %ecx;movl , %esi;movl %ecx, (%ebp)": 1,
                "movl %edi, (%eax);movl (%ebx), %ecx;movl , %esi;movl %ecx, (%ebp);leal (%esi), %ecx": 1,
                "jae  <FsRtlNotifyInitializeSync+>;subl %esi, %eax;movl %eax, %ecx;shll $, %ecx;shrl $, %eax": 1,
                "orl %edx, %edi;movl , %edx;subl %edi, %edx;jmp - <FsRtlNotifyInitializeSync+>;movl , %edx": 1,
                "andl $, %ecx;andl $, %edx;orl %edx, %ecx;jmp - <FsRtlNotifyInitializeSync+>;nop": 1,
                "movl %eax, %ebx;cmpl %esi, %ebx;je  <IoCheckFunctionAccess+>;xorl %edx, %edx;pushl %edi": 1,
                "movl %eax, (%ebx);leal -(%ebp), %eax;movl %eax, (%ebx);movl %fs:, %eax;movb $, %cl": 1,
                "popl %ecx;subl $, %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx;movl %ebx, %edx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;movb $, -(%ebp);movb $, -(%ebp)": 3,
                "xorl %edi, %edi;cmpl %edi, %eax;movl %eax, -(%ebp);jl  <FsRtlNotifyInitializeSync+>;movl -(%ebp), %eax": 1,
                "calll - <ExFreePoolWithTag>;cmpl %edi, %esi;je  <IoCheckFunctionAccess+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;popl %edi;movl -(%ebp), %ecx;popl %esi": 1,
                "popl %ebx;calll - <IoQueueWorkItem+>;leave;retl $;xorl %esi, %esi": 2,
                "xorl %esi, %esi;jmp - <FsRtlNotifyInitializeSync+>;movl -(%ebp), %eax;jmp - <NtDuplicateToken+>;movl (%esi), %ecx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %ebx;pushl %esi;leal (%eax), %ebx": 1,
                "nop;movl %fs:, %eax;xorl %ecx, %ecx;cmpb %cl, (%eax);setne %cl": 1,
                "addl %ecx, %eax;jmp - <IoCheckEaBufferValidity+>;movb $, %cl;movb $, (%eax);calll *": 1,
                "movl (%ebp), %eax;testl %eax, %eax;movl %ecx, -(%ebp);je  <RtlUpcaseUnicodeToOemN+>;movl %ecx, (%eax)": 1,
                "movl (%ebp), %edx;movb %cl, -(%edx);jmp  <RtlUpcaseUnicodeToOemN+>;movzwl -(%edi), %ecx;movzbl (%ecx,%eax), %ecx": 1,
                "jmp  <RtlUpcaseUnicodeToOemN+>;movzwl -(%edi), %ecx;movzbl (%ecx,%eax), %ecx;movl , %edx;movzwl (%edx,%ecx,), %ecx": 1,
                "movl , %ecx;movzwl %si, %edx;movl %edx, %edi;shrl $, %edi;movzwl (%ecx,%edi,), %edi": 2,
                "movl , %ecx;movl %edx, %esi;shrl $, %esi;movzwl (%ecx,%esi,), %esi;movl %edx, %ebx": 30,
                "shrl $, %esi;movzwl (%ecx,%esi,), %esi;movl %edx, %ebx;shrl $, %ebx;andl $, %ebx": 30,
                "addw %cx, (%ebp);jmp  <RtlUpcaseUnicodeStringToOemString+>;movzwl (%ebp), %edx;movl , %ecx;movl %edx, %esi": 3,
                "movl %ecx, %edi;shrl $, %edi;movzwl (%eax,%edi,), %edi;movl %ecx, %ebx;shrl $, %ebx": 10,
                "andl $, %ebx;addl %ebx, %edi;movzwl (%eax,%edi,), %edi;andl $, %ecx;addl %ecx, %edi": 8,
                "andl $, %ecx;addl %ecx, %edi;addw (%eax,%edi,), %si;movl (%ebp), %edi;movzwl %si, %eax": 2,
                "addb %al, %ch;pushl %ecx;decl %esp;addb %dl, (%esi);pushl %ecx": 1,
                "decl %esp;addb %dl, (%esi);pushl %ecx;decl %esp;addb %bh, (%eax)": 1,
                "decl %esp;addb %dh, (%eax);pushl %edx;decl %esp;addb %bl, (%esi)": 1,
                "movb (%ecx,%eax), %cl;movb %cl, -(%edx);jmp - <RtlUpcaseUnicodeStringToOemString+>;movzwl -(%edi), %ecx;movzbl (%ecx,%eax), %ecx": 1,
                "je  <ExInitializePagedLookasideList+>;testl %esi, %esi;jne  <IoOpenDeviceRegistryKey+>;movl (%ebp), %ebx;testl %edi, %edi": 1,
                "pushl %edi;calll - <ProbeForWrite>;movl (%ebp), %eax;cmpl $, %eax;ja  <RtlUpcaseUnicodeStringToOemString+>": 1,
                "cmpl $, %eax;ja  <RtlUpcaseUnicodeStringToOemString+>;jmpl *(,%eax,);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);movl $, %edi;movb , %al;cmpb %bl, %al;jne  <IoCheckFunctionAccess+>": 1,
                "pushl $;jmp - <RtlUpcaseUnicodeStringToOemString+>;testl %esi, %esi;je  <RtlUpcaseUnicodeStringToOemString+>;testl %edi, %edi": 1,
                "calll - <ExRaiseStatus>;movl , %eax;jmp  <IoWMIRegistrationControl+>;testb $, ;je  <RtlUpcaseUnicodeStringToOemString+>": 1,
                "rep  movsl (%esi), %es:(%edi);calll  <IoOpenDeviceRegistryKey+>;pushl $;calll - <PoRequestPowerIrp+>;jmp  <IoWMIRegistrationControl+>": 1,
                "cmpl $, ;je  <RtlUpcaseUnicodeStringToOemString+>;cmpl $, (%esi);je  <RtlUpcaseUnicodeStringToOemString+>;pushl $": 1,
                "calll - <ExRaiseStatus>;movl (%esi), %eax;movl %eax, ;movl (%esi), %eax;movl %eax, ": 1,
                "calll - <IoGetDeviceProperty+>;pushl %esi;pushl %esi;pushl $;leal -(%ebp), %eax": 1,
                "calll  <IoInitializeCrashDump+>;movl %eax, -(%ebp);andl $, -(%ebp);jmp - <RtlUpcaseUnicodeStringToOemString+>;nop": 1,
                "testl %esi, %esi;je  <RtlUpcaseUnicodeStringToOemString+>;pushl $;calll - <ExRaiseStatus>;movl $, -(%ebp)": 2,
                "je  <RtlUpcaseUnicodeStringToOemString+>;pushl $;calll - <ExRaiseStatus>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "addb %cl, (%esi);popl %esp;decl %esp;addb %bh, (%edi);decl %esp": 1,
                "pushl %edi;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl ": 2,
                "jl  <RtlUpcaseUnicodeStringToOemString+>;leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);jbe  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl (%eax), %eax;xorl %esi, %esi;cmpl %esi, -(%ebp);movl %eax, (%ebx);movl %esi, (%ebx)": 1,
                "cmpl %esi, -(%ebp);movl %eax, (%ebx);movl %esi, (%ebx);je  <IoWMIQueryAllData+>;pushl %ebx": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %ebx;calll  <RtlUpcaseUnicodeStringToOemString+>;testb $, (%ebx)": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb - <RtlUpcaseUnicodeStringToOemString+>;movl -(%ebp), %edx;testl %edx, %edx": 1,
                "cmpl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx": 1,
                "addl $, %esi;pushl %edi;andl $-, %esi;movl %eax, -(%ebp);calll  <RtlUpcaseUnicodeStringToOemString+>": 1,
                "subl %ebx, %eax;movl %eax, (%ecx);addl $, %ecx;movl %ecx, -(%ebp);movl (%edi), %ecx": 1,
                "incl %eax;incl -(%ebp);leal (%eax,%eax), %ecx;movw %cx, (%esi);leal (%esi,%eax,), %esi": 1,
                "incl -(%ebp);leal (%eax,%eax), %ecx;movw %cx, (%esi);leal (%esi,%eax,), %esi;movl -(%ebp), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;pushl %esi;pushl $": 5,
                "andl $, -(%ebp);movl (%ebp), %esi;movb $, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %edx, (%eax);movb $, (%eax);movl (%esi), %eax;movl $, %edi;movl %edi, (%esi)": 1,
                "calll - <IoGetDeviceProperty+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl (%ebp), %eax;popl %edi": 1,
                "cmpl $, (%ebp);jb  <RtlUpcaseUnicodeStringToOemString+>;movl (%ebp), %eax;movl (%eax), %ecx;testb $, %cl": 1,
                "pushl %ebx;movl (%eax), %ebx;xorl %eax, %eax;cmpl %eax, %ebx;pushl %esi": 1,
                "movl (%eax), %ebx;xorl %eax, %eax;cmpl %eax, %ebx;pushl %esi;pushl %edi": 1,
                "movl (%ecx), %edi;movl (%ebp), %ecx;movl (%ecx), %ecx;pushl %eax;movl %edi, (%ebp)": 1,
                "pushl %eax;movl %edi, (%ebp);movl %ecx, -(%ebp);movl %eax, (%ebp);calll - <IoGetAttachedDeviceReference+>": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);pushl %esi;pushl %edi": 1,
                "calll - <RtlUpcaseUnicodeStringToOemString+>;movl %eax, (%ebp);movl (%esi), %esi;jmp - <RtlUpcaseUnicodeStringToOemString+>;testl %esi, %esi": 1,
                "movl %ecx, -(%ebp);pushl $;popl %ecx;movl %ecx, -(%ebp);cmpl %eax, ": 1,
                "movl %ecx, -(%ebp);cmpl %eax, ;je  <RtlUpcaseUnicodeStringToOemString+>;movl $, -(%ebp);cmpl %eax, ": 1,
                "cmpl %eax, ;je  <RtlUpcaseUnicodeStringToOemString+>;movl $, -(%ebp);cmpl %eax, ;jne - <RtlUpcaseUnicodeStringToOemString+>": 1,
                "movl %eax, -(%ebp);movl , %eax;subl , %eax;imull $, %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;subl (%ebp), %eax;movl $, %ebx;cltd;movl %ebx, %ecx": 1,
                "movw (%eax), %ax;movw %ax, (%ebp);movl (%ebp), %ecx;movl %edi, %eax;subl %esi, %eax": 1,
                "movl (%ebp), %eax;subl %ecx, %eax;cltd;movl $, %ebx;idivl %ebx": 1,
                "movl %eax, (%esi);je  <RtlUpcaseUnicodeStringToOemString+>;shll $, %eax;pushl %eax;pushl %ecx": 1,
                "jne  <RtlCreateHeap+>;movl , %eax;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jne  <RtlCreateHeap+>": 3,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <ZwQuerySystemInformation>;testl %eax, %eax": 1,
                "je  <IoCheckFunctionAccess+>;addl $, %ecx;andl %edx, %ecx;movl %ecx, (%ebp);cmpl %ecx, %eax": 1,
                "movl $, -(%ebp);testb $, (%ebp);je  <IoCheckFunctionAccess+>;cmpl %ebx, (%ebp);jne  <NtQueryInformationAtom+>": 1,
                "je  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);je  <RtlCreateHeap+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %esi;addl $, %esi;andl $-, %esi;movl %esi, %eax": 1,
                "movl -(%ebp), %eax;movb $, (%eax);movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %ecx": 1,
                "andw $, (%eax);movl %edi, %ecx;movl -(%ebp), %eax;subl %eax, %ecx;movw %cx, (%eax)": 1,
                "movb $, (%eax);movl -(%ebp), %eax;movl (%ebp), %ecx;addl %eax, %ecx;pushl %ecx": 1,
                "movl %ecx, (%eax);movl -(%ebp), %eax;shrl $, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "cmpl %eax, -(%ebp);jne  <NtQueryInformationAtom+>;movl $, %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi)": 1,
                "calll - <RtlFindClearBitsAndSet>;cmpl $-, %eax;je  <IoOpenDeviceInterfaceRegistryKey+>;shll $, %eax;addl (%esi), %eax": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax), %edx;testl %edx, %edx": 1,
                "sbbl %esi, %esi;negl %esi;shrl $, %eax;addl %eax, %esi;cmpl $, %esi": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax), %ecx;pushl -(%ebp);movl %ecx, %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;pushl -(%ebp);movl %ecx, %eax;andl $, %eax": 1,
                "pushl -(%ebp);movl %ecx, %eax;andl $, %eax;negl %eax;sbbl %eax, %eax": 1,
                "testl %eax, %eax;movl %eax, (%ebp);jl  <IoCheckFunctionAccess+>;cmpl $, %edi;je  <RtlCreateHeap+>": 1,
                "jl  <IoCheckFunctionAccess+>;cmpl $, %edi;je  <RtlCreateHeap+>;movl , %eax;andl $, (%eax)": 1,
                "calll - <ExReleaseResourceLite>;movb (%ebp), %cl;calll *;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "calll *;movl (%ebp), %eax;movl %ebx, (%eax);xorl %eax, %eax;popl %ebx": 1,
                "movl %ebx, (%eax);xorl %eax, %eax;popl %ebx;popl %edi;popl %esi": 1,
                "calll - <RtlCreateHeap+>;popl %ebp;retl $;nop;nop": 1,
                "movl %eax, (%ecx);pushl %ebx;pushl (%ebp);calll - <IoGetDriverObjectExtension+>;movl , %eax": 1,
                "calll - <RtlGeneratedotName+>;movl %eax, -(%ebp);cmpl $-, %eax;jne - <RtlGeneratedotName+>;jmp  <PsSetLegoNotifyRoutine+>": 1,
                "je - <MmUnmapViewInSessionSpace+>;movl (%esi), %eax;testl %eax, %eax;je  <MmUnmapViewInSessionSpace+>;pushl (%edi)": 1,
                "movl (%ebp), %eax;pushl (%eax,%ebx,);pushl %esi;calll - <SeCreateClientSecurity+>;testb %al, %al": 1,
                "movl (%esi), %eax;testl %eax, %eax;jne  <MmUnmapViewInSessionSpace+>;pushl -(%ebp);pushl %esi": 1,
                "testl %eax, %eax;jl - <NtQueryInformationToken+>;movl -(%ebp), %ecx;cmpl $, (%ecx);jne - <NtQueryInformationToken+>": 1,
                "movl $, %eax;jmp - <NtAdjustPrivilegesToken+>;nop;nop;nop": 5,
                "movl (%ebp), %eax;je  <RtlValidRelativeSecurityDescriptor+>;movl (%eax), %ecx;testl %ecx, %ecx;pushl $": 1,
                "popl %ebx;pushl %ebx;pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax": 1,
                "leal (%ebp), %eax;pushl %eax;calll - <RtlMapGenericMask>;jmp - <NtQueryInformationToken+>;pushl $": 1,
                "jmp - <RtlRemoveUnicodePrefix+>;movb $, -(%ebp);jmp - <NtQueryVolumeInformationFile+>;xorb %al, %al;jmp - <NtQueryVolumeInformationFile+>": 1,
                "cmpl %edx, (%ebp);jg - <MmUnmapViewInSessionSpace+>;jge  <RtlAbsoluteToSelfRelativeSD+>;cmpl , %edi;jb - <IoCreateStreamFileObjectLite+>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%eax), %ecx;movl %ecx, (%edx)": 1,
                "movw %cx, (%edx);movw (%eax), %cx;movw %cx, (%edx);movzwl (%eax), %ecx;movl (%eax), %esi": 1,
                "cmpb %bl, %al;je  <PsSetProcessSecurityPort+>;movl %ebx, -(%ebp);movl (%ebp), %edi;movl , %eax": 1,
                "cmpl %ebx, (%ebp);jne  <PsSetProcessSecurityPort+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "pushl -(%ebp);calll - <ObCreateObject>;movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <MmUnmapViewInSessionSpace+>": 1,
                "pushl $;leal (%esi), %eax;pushl %eax;calll - <KeInitializeDpc>;pushl (%ebp)": 1,
                "calll - <KeInitializeSpinLock>;movb %bl, (%esi);movb %bl, (%esi);movl %ebx, (%esi);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <MmUnmapViewInSessionSpace+>;cmpb %bl, -(%ebp);je  <PsSetProcessSecurityPort+>": 1,
                "movl (%ebp), %ecx;leal (%ecx,%esi), %eax;cmpl %ecx, %eax;jb  <FsRtlRegisterUncProvider+>;cmpl , %eax": 1,
                "movl (%ebp), %esi;pushl %esi;pushl $;calll - <ExAllocatePoolWithQuotaTag>;movl %eax, (%ebx)": 1,
                "movl %esi, (%ebx);movl %esi, %ecx;movl (%ebp), %esi;movl %eax, %edi;movl %ecx, %eax": 1,
                "cmpl %ebx, %esi;jne  <RtlSetGroupSecurityDescriptor+>;movl (%ebp), %eax;cmpl %ebx, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "movsl (%esi), %es:(%edi);movl (%ebp), %esi;movl %esi, -(%ebp);jmp - <RtlIntegerToUnicodeString+>;movl (%ebp), %esi": 1,
                "movl (%ebp), %esi;jmp - <RtlUnicodeStringToAnsiString+>;movl -(%ebp), %eax;movl %eax, (%esi);jmp - <RtlUnicodeStringToAnsiString+>": 1,
                "movl %eax, (%edi);jmp - <MmUnmapViewInSessionSpace+>;nop;nop;nop": 1,
                "addl $, (%ebp);movl (%ebp), %eax;incl %ebx;incl %ebx;cmpl -(%ebp), %eax": 1,
                "testl %eax, %eax;je - <NtQueryInformationToken+>;pushl -(%ebp);pushl %esi;calll *%eax": 2,
                "testb %al, %al;je  <RtlGetNtGlobalFlags+>;movzwl -(%ebp), %esi;movl -(%ebp), %ebx;incl %esi": 1,
                "incl %esi;cmpw $, (%ebx);jne  <RtlGetNtGlobalFlags+>;xorl %eax, %eax;cmpl %eax, -(%ebp)": 1,
                "pushl (%edi);pushl %eax;calll *%ecx;jmp - <RtlGetNtGlobalFlags+>;movl (%ebx), %eax": 1,
                "jmp  <RtlGetNtGlobalFlags+>;movb $, -(%ebp);jmp - <NtQueryInformationToken+>;movl -(%ebp), %eax;movzwl (%eax), %eax": 1,
                "pushl %eax;calll - <RtlUpcaseUnicodeChar>;movw %ax, %bx;movl -(%ebp), %eax;movzwl (%eax), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);testl %eax, %eax;je  <RtlGetNtGlobalFlags+>": 1,
                "pushl (%ebp);calll - <SeQuerySecurityDescriptorInfo>;movl %eax, %edi;cmpl $, -(%ebp);je - <ObSetSecurityObjectByPointer+>": 1,
                "jne - <ObOpenObjectByName+>;pushl -(%ebp);calll - <ObOpenObjectByName+>;jmp - <ObOpenObjectByName+>;nop": 1,
                "movl (%ebp), %eax;addl $-, %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl (%ecx), %edx;retl;testb $, (%ebp);jne - <RtlAreAnyAccessesGranted+>;pushl (%ebp)": 1,
                "retl;testb $, (%ebp);jne - <RtlAreAnyAccessesGranted+>;pushl (%ebp);pushl %ebx": 1,
                "calll - <KeSetEvent>;movl -(%ebp), %eax;jmp - <RtlIntegerToUnicodeString+>;addl $, %edx;pushl %edx": 1,
                "cmpl %ebx, %eax;jge - <CcUnpinDataForThread+>;jmp - <CcUnpinDataForThread+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "xorl %edi, %edi;jmp - <NtQuerySystemInformation+>;calll - <ObfDereferenceObject>;jmp  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl $;pushl (%esi);calll - <ExAcquireResourceSharedLite>;movl (%esi), %ecx;leal -(,%ecx,), %edx": 1,
                "addl $, %eax;decl %ecx;movl (%eax), %ebx;movzbl (%ebx), %ebx;leal (%edx,%ebx,), %edx": 1,
                "jmp - <RtlDeleteAtomFromAtomTable+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ecx, (%ebp);je  <RtlSetGroupSecurityDescriptor+>;movl $, -(%ebp);pushl $;pushl (%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;addl $-, %eax;pushl %eax": 2,
                "movl $, %edi;jmp  <PsGetProcessExitTime+>;cmpl %edi, %esi;je  <PsGetProcessExitTime+>;testb $, (%esi)": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%esi), %esi;jmp - <PsGetProcessExitTime+>;movl $, %eax;movl $, %ecx": 1,
                "jmp - <FsRtlNotifyFilterChangeDirectory+>;movl (%ebp), %esi;jmp - <ObReferenceObjectByName+>;movl %eax, %ecx;jmp - <RtlUpcaseUnicodeToOemN+>": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;movb %bl, (%ecx,%eax);xorl %eax, %eax;popl %esi": 2,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;xorl %eax, %eax;jmp - <NtSetInformationThread+>;nop": 1,
                "movl (%ebp), %edi;movl (%edi), %ecx;andl $-, %eax;testl %ecx, %ecx;jne  <RtlUnicodeStringToOemString+>": 1,
                "je  <ExEnumHandleTable+>;movl %esi, -(%ebp);movl (%esi), %ebx;testb $, %bl;movl %ebx, -(%ebp)": 1,
                "pushl (%ebp);pushl -(%ebp);pushl %esi;calll *(%ebp);pushl %esi": 1,
                "pushl %esi;pushl (%ebp);movb %al, -(%ebp);calll - <ObReferenceObjectByHandle+>;cmpb $, -(%ebp)": 1,
                "calll  <SeCreateClientSecurityFromSubjectContext+>;jmp - <RtlUnicodeStringToOemString+>;movl (%ebp), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "pushl %ebx;cmpl $, (%esi);jne - <RtlUnicodeStringToOemString+>;addl $, -(%ebp);pushl -(%ebp)": 1,
                "jne - <RtlUnicodeStringToOemString+>;addl $, -(%ebp);pushl -(%ebp);pushl (%ebp);calll - <SeUnlockSubjectContext+>": 1,
                "pushl (%ebp);xorl %ebx, %ebx;calll - <NtDuplicateObject+>;cmpl %ebx, %eax;je  <ObFindHandleForObject+>": 1,
                "movw (%eax), %cx;cmpw %si, %cx;je  <ObFindHandleForObject+>;movzwl %cx, %eax;decl %eax": 1,
                "je - <RtlRemoveUnicodePrefix+>;movl %eax, %ecx;movl (%ecx), %eax;pushl $;movl %eax, ": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;leal -(%ebx), %eax;movb (%eax), %cl": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;testb %cl, %cl;movl $, -(%ebp)": 1,
                "cmpl %edi, (%ebp);movb $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;movl , %eax;movl %eax, -(%ebp);cmpl %edi, %eax;je  <ObFindHandleForObject+>": 1,
                "movl %eax, -(%ebp);cmpl %edi, %eax;je  <ObFindHandleForObject+>;testb $, -(%ebp);jne  <ObFindHandleForObject+>": 1,
                "cmpl %edi, %ecx;je  <ObFindHandleForObject+>;movw , %ax;cmpw %ax, -(%ebp);jb  <ObFindHandleForObject+>": 1,
                "incl %esi;incl %esi;addw $-, -(%ebp);jne - <ObFindHandleForObject+>;movw -(%ebp), %ax": 1,
                "addw $-, -(%ebp);jne - <ObFindHandleForObject+>;movw -(%ebp), %ax;subw %ax, -(%ebp);je  <ObFindHandleForObject+>": 1,
                "pushl -(%ebp);calll - <ObGetObjectSecurity>;testl %eax, %eax;jl  <IoRegisterBootDriverReinitialization+>;pushl $": 1,
                "movl -(%eax), %ecx;cmpl , %ecx;jne  <ObFindHandleForObject+>;movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movb -(%esi), %al;testb %al, %al;jne  <IoRegisterBootDriverReinitialization+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);xorl %edi, %edi;movw -(%ebp), %di": 1,
                "xorl %edi, %edi;movw -(%ebp), %di;xorl %esi, %esi;testb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "movw -(%ebp), %ax;movw %ax, (%ebx);movzwl %di, %edi;pushl $;pushl %edi": 1,
                "pushl %eax;pushl $;pushl (%ebp);pushl $;pushl %ebx": 1,
                "movl (%ebp), %eax;movb -(%eax), %cl;pushl %ebx;addl $-, %eax;xorl %ebx, %ebx": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %ebx, %esi;je  <ObFindHandleForObject+>;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "movl %edi, -(%ebp);movl %ecx, -(%ebp);jne  <ObFindHandleForObject+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);jne  <ObFindHandleForObject+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %esi, -(%ebp)": 1,
                "movzbl %al, %eax;subl %eax, %esi;subl $, %esi;je - <ObFindHandleForObject+>;jmp  <IoCheckFunctionAccess+>": 1,
                "cmpl %ecx, %edx;jb  <IoCheckFunctionAccess+>;cmpl %eax, %edx;ja  <IoCheckFunctionAccess+>;movl (%ebp), %ecx": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <ObMakeTemporaryObject+>;leal (%eax), %ecx": 1,
                "calll - <ObMakeTemporaryObject>;testb $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "retl $;pushl (%ebp);calll  <ObMakeTemporaryObject+>;jmp - <ObDereferenceSecurityDescriptor+>;nop": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %ebx;testl %ebx, %ebx;movl (%ebp), %eax": 1,
                "pushl %edi;leal -(%eax), %edi;movl %fs:, %eax;decl (%eax);movl (%edi), %eax": 1,
                "jbe  <IoCreateDevice+>;cmpl $, %esi;je  <IoCreateDevice+>;cmpl $, %esi;je  <IoCreateDevice+>": 1,
                "je  <IoCreateDevice+>;movl -(%ebp), %eax;addl $, %eax;pushl %eax;calll - <KeInitializeDeviceQueue>": 1,
                "movl %esi, %ecx;calll - <ObfReferenceObject>;movl -(%ebp), %eax;pushl $;movl %esi, (%eax)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %esi": 8,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, %esi;jne  <IoReportResourceUsage+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;cmpl $, %eax;jbe  <IoCreateDevice+>;cmpl $, %eax;je  <IoCreateDevice+>": 1,
                "jmp - <IoCreateDevice+>;nop;nop;nop;nop": 10,
                "calll - <ProbeForWrite>;orl $-, -(%ebp);movl -(%ebp), %eax;cmpl %ebx, %eax;jl  <IoCreateDevice+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;cmpl %ebx, %eax;jl  <IoCreateDevice+>;movl , %eax": 1,
                "movl %ecx, (%eax);movl , %eax;cmpb %bl, (%eax);jne  <IoCreateDevice+>;movl %ebx, (%eax)": 1,
                "pushl %ebx;movl , %eax;addl $, %eax;pushl %eax;calll - <KeWaitForSingleObject>": 1,
                "movl , %eax;addl $, %eax;pushl %eax;calll - <KeWaitForSingleObject>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl , %eax;cmpl %ebx, -(%ebp);jl  <IoCreateDevice+>;cmpl $, -(%ebp)": 1,
                "movl %ebx, (%eax);movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $;nop": 2,
                "pushl (%ebp);pushl (%ebp);calll - <RtlCompareMemory>;cmpl $, %eax;sete %al": 1,
                "pushl $;pushl %edi;movl $, (%edi);movl %edi, (%edi);calll - <ExQueueWorkItem>": 1,
                "calll - <KeSetEvent>;movl %esi, %ecx;movb %bl, ;calll *;jmp  <IoCreateDevice+>": 1,
                "jmp  <IoCreateDevice+>;jmp  <IoCreateDevice+>;pushl %esi;calll - <IoCreateDevice+>;movl %eax, %ebx": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jl  <IoCreateDevice+>;pushl (%esi);addl $, %esi": 1,
                "pushl %esi;xorl %ebx, %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "addl $, %eax;pushl %eax;calll - <KeWaitForSingleObject>;testl %eax, %eax;jl - <IoCreateDevice+>": 1,
                "ja  <IoCreateDevice+>;jmpl *(,%eax,);leal -(%ebp), %eax;pushl %eax;calll  <RtlCheckRegistryKey+>": 1,
                "calll  <RtlCheckRegistryKey+>;movl %eax, %ebx;cmpl $, %ebx;je  <IoCreateDevice+>;pushl %ebx": 1,
                "movl (%edi), %eax;movw (%eax), %ax;testb $, %al;jne  <IoCheckFunctionAccess+>;andl $, -(%ebp)": 1,
                "cmpl %edx, %eax;jne  <FsRtlBalanceReads+>;movl -(%ebp), %eax;movl %edx, -(%ebp);movsbl (%eax), %eax": 1,
                "movl -(%ebp), %eax;movl %edx, -(%ebp);movsbl (%eax), %eax;addb %cl, %al;pushl %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl (%esi), %eax;movl $, (%esi);movb $, (%esi)": 1,
                "movl %eax, -(%ebp);calll - <RtlCopyUnicodeString+>;movl $, %ecx;calll - <ExReleaseResourceLite>;movl %esi, %edx": 1,
                "jl  <RtlCreateRegistryKey+>;movl $, %ecx;calll - <ExReleaseResourceLite>;cmpb $, (%ebp);jne  <IoCreateDevice+>": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;jne  <IoCheckFunctionAccess+>;pushl (%esi);calll  <ExInitializePagedLookasideList+>": 1,
                "calll - <IoDeleteDevice+>;movl (%ebp), %ecx;movl %eax, (%ecx);jmp - <IoCreateDevice+>;leal -(%ebp), %eax": 1,
                "movl , %eax;pushl %ebx;pushl %esi;pushl %edi;leal -(%ebp), %ecx": 1,
                "pushl -(%ebp);movsl (%esi), %es:(%edi);calll - <IoReportTargetDeviceChangeAsynchronous>;xorl %esi, %esi;movl -(%ebp), %ecx": 1,
                "popl %eax;movl %eax, (%edx);movl %ebx, (%edx);movl %ecx, (%edx);movw (%esi), %cx": 1,
                "leal (%edx), %edi;rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx;andl %eax, %ecx;rep  movsb (%esi), %es:(%edi)": 1,
                "andl %eax, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %esi;movzwl (%esi), %ecx;movl %edx, %edi": 1,
                "movl %edx, %edi;subl %ecx, %edi;movl -(%ebp), %ecx;addl %ecx, %edi;movl %edi, (%edx)": 1,
                "calll *;movl $, %esi;cmpl %esi, %ebx;je  <IoCheckFunctionAccess+>;pushl $": 1,
                "cmpl %ecx, (%ecx);je  <FsRtlNotifyVolumeEvent+>;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "xorl %ebx, %ebx;pushl %ebx;pushl %ebx;pushl %ebx;leal (%esi), %eax": 2,
                "movl %ecx, -(%ebp);movl %eax, (%ebp);ja  <CcZeroData+>;jne  <FsRtlNotifyVolumeEvent+>;leal (%esi), %eax": 1,
                "movl %eax, (%ebp);ja  <CcZeroData+>;jne  <FsRtlNotifyVolumeEvent+>;leal (%esi), %eax;pushl %eax": 1,
                "pushl %eax;pushl (%edi);movzwl (%ebp), %eax;pushl %eax;pushl -(%ebp)": 2,
                "movw %cx, (%eax);movl (%ebp), %eax;orl $, (%eax);pushl (%edi);movl (%ebp), %eax": 1,
                "addl $, %eax;pushl %eax;calll - <FsRtlNotifyVolumeEvent+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "movl %eax, %esi;movl (%ebp), %eax;addl $, (%eax);pushl $;pushl %esi": 1,
                "addl $, (%eax);pushl $;pushl %esi;calll - <FsRtlNotifyVolumeEvent>;movl %esi, %ecx": 1,
                "pushl $;popl %ecx;rep  movsl (%esi), %es:(%edi);orb $, (%eax);movl (%edx), %eax": 1,
                "orb $, (%eax);movl (%edx), %eax;andl $, -(%eax);subl $, %eax;movl $, (%eax)": 1,
                "popl %edi;popl %esi;popl %ebp;retl $;cmpl $, (%esi)": 1,
                "popl %ebp;retl $;cmpl $, (%esi);jne - <FsRtlNotifyVolumeEvent+>;jmp  <IoCheckFunctionAccess+>": 1,
                "testb $, (%eax);jne  <FsRtlNotifyVolumeEvent+>;pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "movl %ebx, (%ecx);calll - <IofCompleteRequest>;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebp;retl $;pushl (%ebp);pushl %ecx": 1,
                "jmp - <FsRtlNotifyVolumeEvent+>;movl , %eax;pushl %esi;pushl %esi;pushl %esi": 1,
                "movl (%ebx), %eax;movl , %ecx;cmpl %eax, (%ecx);jae  <FsRtlNotifyVolumeEvent+>;pushl $": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %esi, %esi;pushl $": 1,
                "calll - <KeSetEvent>;movl , %eax;pushl %esi;pushl $;pushl %esi": 1,
                "movl %esi, (%ecx);movl , %eax;movl %esi, (%eax);jmp - <IoCreateDevice+>;nop": 1,
                "testl %ecx, %ecx;jne  <IoCheckFunctionAccess+>;cmpl $, (%eax);jne  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl (%esi);pushl (%esi);calll - <FsRtlNotifyVolumeEvent+>;pushl (%ebp);pushl (%ebp)": 1,
                "andl $, %ecx;negl %ecx;sbbl %ecx, %ecx;andl $, (%ebp);shrl $, %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl $, %edi;movl %edi, %ecx;movl %eax, (%ebp)": 1,
                "jmp - <FsRtlNotifyVolumeEvent+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl %ebx": 1,
                "pushl %edi;movl %fs:, %eax;movl (%ebp), %edi;pushl $;movl %eax, %esi": 2,
                "movl (%ebp), %ecx;leal (%ecx), %eax;testb $, (%eax);jne  <FsRtlNotifyVolumeEvent+>;decl (%edi)": 1,
                "orl %edx, (%eax);pushl %ecx;pushl %edi;calll  <FsRtlNotifyVolumeEvent+>;movl %ebx, %ecx": 1,
                "movl %eax, %esi;decl (%esi);leal (%ebx), %eax;pushl $;pushl %eax": 1,
                "decl (%esi);leal (%ebx), %eax;pushl $;pushl %eax;movl %eax, (%ebp)": 1,
                "movl (%edi), %edi;leal (%esi), %eax;cmpl (%eax), %edi;ja  <IoCheckFunctionAccess+>;movl (%ebp), %ecx": 1,
                "pushl %esi;pushl %edi;movb $, (%eax);movl %fs:, %eax;movl (%eax), %esi": 1,
                "pushl %esi;calll - <PsReferencePrimaryToken>;movl (%eax), %ecx;movl (%eax), %edi;movl (%eax), %ebx": 1,
                "movl %edi, %ecx;calll *;leal (%ebx), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "jge - <SeTokenType+>;jmp - <SeTokenType+>;movl $, %eax;jmp - <SeQueryAuthenticationIdToken+>;decl %eax": 1,
                "movl %eax, %esi;movl (%ebp), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl %eax, (%ebp)": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %edi;leal (%ebx), %edi;movl %edi, (%ebp)": 1,
                "calll - <FsRtlNotifyInitializeSync+>;movl %eax, %ebx;movl %edi, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;popl %edi;movl %ebx, %eax;popl %ebx": 1,
                "movb $, -(%ebp);jmp - <RtlPrefixUnicodeString+>;movsbl (%eax), %eax;pushl $;pushl %eax": 1,
                "popl %edx;movl %esi, %ecx;calll - <DbgBreakPointWithStatus+>;orl $, %esi;movl %esi, -(%ebp)": 1,
                "movb (%eax), %al;xorl %ebx, %ebx;cmpl %ebx, (%ebp);movb %al, -(%ebp);jne  <FsRtlNotifyVolumeEvent+>": 1,
                "jne  <FsRtlNotifyVolumeEvent+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <FsRtlNotifyVolumeEvent+>": 2,
                "calll - <FsRtlNotifyVolumeEvent+>;movl %eax, %edi;cmpl %ebx, %edi;jl  <IoWMIRegistrationControl+>;cmpb %bl, -(%ebp)": 2,
                "cmpl %ebx, (%ebp);jne  <IoWMIRegistrationControl+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %esi;calll - <ObGetObjectSecurity>": 1,
                "movl (%esi), %edi;xorl %edx, %edx;cmpb %dl, (%edi);je  <IoCheckFunctionAccess+>;movl (%edi), %ecx": 1,
                "movl $, %edi;jmp  <IoCheckFunctionAccess+>;movb $, (%esi);jmp - <FsRtlNotifyFilterChangeDirectory+>;movb $, (%esi)": 1,
                "orl $-, -(%ebp);shrl (%ebx);movl (%eax), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;pushl %esi;pushl %edi;movl %fs:, %eax;decl (%eax)": 4,
                "pushl %edi;movl %fs:, %eax;decl (%eax);movl (%ebp), %eax;subl $, %eax": 1,
                "movl %fs:, %eax;decl (%eax);movl (%ebp), %eax;subl $, %eax;jne  <RtlCopyLuid+>": 1,
                "subl $, %eax;jne  <RtlCopyLuid+>;pushl $;pushl $;calll - <ExAcquireSharedWaitForExclusive>": 1,
                "jne  <FsRtlOplockFsctrl+>;testl %esi, %esi;je  <FsRtlOplockFsctrl+>;movl %esi, %ecx;calll - <ObfReferenceObject>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %ecx;movl (%ebp), %eax": 1,
                "jmp - <FsRtlOplockFsctrl+>;leal (%edi), %eax;cmpl %eax, (%eax);je - <MmLockPagableSectionByHandle+>;jmp  <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlValidSecurityDescriptor+>;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "pushl (%ebp);movl %edi, (%ebp);calll - <IoGetRequestorSessionId+>;cmpl %ebx, %edi;je  <FsRtlOplockFsctrl+>": 1,
                "movl %edi, (%ebp);calll - <IoGetRequestorSessionId+>;cmpl %ebx, %edi;je  <FsRtlOplockFsctrl+>;movl (%edi), %eax": 1,
                "pushl %edi;movl $, %esi;calll - <FsRtlOplockFsctrl+>;testb %al, %al;je  <FsRtlOplockFsctrl+>": 1,
                "testl %ecx, %eax;jne  <FsRtlOplockFsctrl+>;testl $, %ecx;jne  <IoCheckFunctionAccess+>;cmpl $, (%edi)": 1,
                "movl %esi, (%eax);popl %esi;popl %ebp;retl $;orl $, %esi": 1,
                "movw %cx, -(%ebp);movl %ecx, %edx;shrl $, %ecx;movw %si, -(%ebp);movl -(%ebp), %esi": 1,
                "pushl %eax;calll - <SeDeleteAccessState>;jmp - <NtOpenProcess+>;movb $, -(%ebp);jmp - <NtOpenProcess+>": 1,
                "je  <IoWMIOpenBlock+>;cmpl %edi, %ebx;je  <RtlValidSecurityDescriptor+>;movl (%ebp), %eax;pushl %edi": 1,
                "pushl %ebx;pushl %edi;movl %eax, %esi;calll - <KeReleaseMutex>;cmpl %ebx, %esi": 1,
                "leave;retl $;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;testb %bl, %bl": 1,
                "retl $;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;testb %bl, %bl;je  <IoCheckFunctionAccess+>": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl , %eax;movsbl (%eax), %eax": 1,
                "incb %al;pushl $;pushl %eax;calll - <IoAllocateIrp>;movl %eax, %esi": 1,
                "movl %fs:, %eax;pushl %ebx;pushl (%ebp);movl %eax, (%esi);pushl (%ebp)": 1,
                "pushl (%ebp);movl (%ebp), %eax;pushl (%eax);calll - <ObCloseHandle>;movl $, (%ebp)": 2,
                "pushl (%ebp);pushl %esi;calll - <IoGetDeviceProperty+>;xorl %ecx, %ecx;cmpl %ecx, %eax": 1,
                "jbe  <IoCheckFunctionAccess+>;movl %ebx, %eax;subl $, %eax;je  <FsRtlOplockFsctrl+>;subl $, %eax": 1,
                "pushl %ebx;pushl %esi;pushl %edi;xorl %ebx, %ebx;movl %fs:, %eax": 3,
                "movl %edi, -(%ebp);jl  <FsRtlOplockFsctrl+>;movl (%edi), %eax;pushl %ebx;movl %eax, -(%ebp)": 1,
                "calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;movl %eax, (%ebp);jl  <IoCheckFunctionAccess+>;movl (%ebp), %ebx": 1,
                "leal (%edi), %eax;pushl %ebx;movl %eax, -(%ebp);calll - <PsIsThreadTerminating+>;movl -(%ebp), %ecx": 1,
                "testl %eax, %eax;leal (%ebx), %ecx;jne  <IoCheckFunctionAccess+>;calll - <ExReleaseRundownProtection>;pushl %ebx": 1,
                "pushl %edi;calll - <FsRtlOplockFsctrl+>;testl %eax, %eax;movl %eax, (%ebp);jl  <IoCheckFunctionAccess+>": 1,
                "jl  <IoCheckFunctionAccess+>;movl -(%ebp), %edi;cmpl $, (%edi);jne  <IoCheckFunctionAccess+>;xorl %eax, %eax": 1,
                "xorl %eax, %eax;cmpl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>": 1,
                "jmp - <NtFreeVirtualMemory+>;movl $, (%ebp);jmp - <NtQueryInformationToken+>;movl (%ebp), %edi;jmp - <NtQueryInformationToken+>": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);calll - <ZwOpenKey>;leave": 1,
                "andl $, %ecx;testl %edx, %edx;rep  movsb (%esi), %es:(%edi);jne  <RtlSelfRelativeToAbsoluteSD+>;shrl %ebx": 1,
                "pushl %edi;movl %esi, %ebx;jae  <RtlUpperChar+>;cmpw $, (%ebx);je  <RtlUpperChar+>": 1,
                "jb - <RtlUpperChar+>;movl (%ebp), %eax;subl %esi, %ebx;testl %eax, %eax;je  <RtlUpperChar+>": 1,
                "jmp - <MmUnmapViewInSessionSpace+>;movb $, (%edi);jmp - <IoQueryFileInformation+>;xorl %ebx, %ebx;xorl %edx, %edx": 1,
                "movb $, (%edi);jmp - <IoQueryFileInformation+>;xorl %ebx, %ebx;xorl %edx, %edx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, (%edx);orl $-, (%edx);leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %edx;calll - <ObInsertObject>;movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "retl $;pushl %esi;movl %esi, -(%ebp);calll - <IoGetAttachedDeviceReference+>;addl $, %edi": 1,
                "movl %ecx, (%eax);movl , %eax;movl %eax, %ecx;movl (%eax), %eax;movl %eax, (%edx)": 1,
                "pushl %ebx;pushl $;calll - <IoGetAttachedDeviceReference+>;movl (%ebp), %ecx;addl $, %ecx": 1,
                "leal (%esi), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax;je  <RtlSubAuthoritySid+>;movl (%eax), %edx": 1,
                "movl (%eax), %eax;jmp - <RtlSubAuthoritySid+>;pushl %ebx;pushl %edi;calll - <KeReleaseMutex>": 1,
                "pushl %ebx;pushl %edi;calll - <KeReleaseMutex>;cmpb %bl, (%ebp);jne - <FsRtlOplockFsctrl+>": 1,
                "calll - <KeReleaseMutex>;cmpb %bl, (%ebp);jne - <FsRtlOplockFsctrl+>;xorl %esi, %esi;jmp - <FsRtlOplockFsctrl+>": 1,
                "movb -(%ebp), %cl;movb %cl, (%eax);xorl %ecx, %ecx;cmpb %cl, -(%ebp);setne %cl": 1,
                "calll - <PsSetProcessPriorityByClass>;xorl %esi, %esi;movl -(%ebp), %ebx;movl %ebx, %ecx;jmp - <RtlSubAuthoritySid+>": 1,
                "jmp - <RtlPrefixUnicodeString+>;movl %esi, %ecx;calll - <KeInsertHeadQueue+>;jmp - <RtlPrefixUnicodeString+>;cmpl $, (%ebp)": 1,
                "movl %esi, %ecx;calll - <KeInsertHeadQueue+>;jmp - <RtlPrefixUnicodeString+>;cmpl $, (%ebp);jae - <RtlPrefixUnicodeString+>": 1,
                "jl - <NtSetInformationProcess+>;movl -(%ebp), %esi;movsbl (%esi), %eax;cmpl %eax, %ebx;jle  <RtlSubAuthoritySid+>": 1,
                "movl %edi, %eax;jmp - <NtSetInformationProcess+>;xorl %eax, %eax;incl %eax;jmp - <IoCheckEaBufferValidity+>": 1,
                "cmpl %ecx, -(%ebp);jbe  <RtlSubAuthoritySid+>;movl %eax, %esi;imull $, %edi, %edi;addl -(%ebp), %edi": 1,
                "pushl (%esi);pushl %ebx;calll *%eax;cmpl $, -(%ebp);je  <RtlSubAuthoritySid+>": 1,
                "je  <RtlSubAuthoritySid+>;movl (%ebx), %eax;testl %eax, %eax;je  <RtlSubAuthoritySid+>;pushl (%edi)": 1,
                "testl %eax, %eax;je  <RtlSubAuthoritySid+>;pushl (%edi);pushl %ebx;calll *%eax": 1,
                "pushl (%edi);pushl %ebx;calll *%eax;retl;orl $-, -(%ebp)": 1,
                "cmpb $, %al;je  <IoCheckFunctionAccess+>;movl (%ebx), %eax;cmpl %eax, (%ebx);pushl %esi": 1,
                "movl (%ebp), %edi;movl %edi, (%eax);movl (%ecx), %edx;movl %edx, (%eax);pushl (%ecx)": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);pushl (%ecx);calll - <RtlGeneratedotName+>;movl -(%ebp), %esi": 1,
                "movl %edx, (%ecx);movl %ecx, (%edx);movl %ecx, (%eax);movl (%ebx), %eax;testl %eax, %eax": 1,
                "shll $, %ecx;movl %edi, (%ecx,%edx);movl (%eax), %eax;movl %esi, (%ecx,%eax);incl (%ebx)": 1,
                "je  <RtlSubAuthoritySid+>;movl (%esi), %eax;testl %eax, %eax;jne  <RtlSubAuthoritySid+>;movl $, %eax": 1,
                "cmpl $-, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>;pushl %eax;pushl %ebx": 1,
                "testl %eax, %eax;jne  <RtlSubAuthoritySid+>;pushl %esi;calll - <RtlLengthSecurityDescriptor>;movw $, (%edi)": 1,
                "jne  <IoCheckFunctionAccess+>;pushl (%edi);calll  <RtlSubAuthoritySid+>;testl %eax, %eax;je  <RtlSubAuthoritySid+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);addw $-, -(%ebp)": 1,
                "addw $-, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $;pushl $": 1,
                "cmpl $-, -(%ebp);jne  <RtlSubAuthoritySid+>;testb $, (%ebp);jne  <RtlSubAuthoritySid+>;pushl %ebx": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);decl (%eax);pushl %esi;pushl %esi;pushl %esi": 1,
                "calll - <RtlEqualUnicodeString>;testb %al, %al;jne  <RtlSetGroupSecurityDescriptor+>;movl (%edi), %edi;jmp - <RtlSubAuthoritySid+>": 1,
                "je  <RtlSubAuthoritySid+>;movl $, -(%ebp);movl $, (%ebp);movl (%ebp), %ecx;movl -(%ebp), %eax": 1,
                "movl (%ebx), %edi;addl (%ebp), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "popal;addb %ah, (%edi);addb %dl, %gs:(%eax);popal;addb %dh, (%eax,%eax)": 2,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;jl  <RtlSelfRelativeToAbsoluteSD+>;movl -(%ebp), %edi;cmpl %ebx, (%edi)": 1,
                "movl (%ebp), %esi;movw $, (%esi);movl (%edi), %eax;addl %edi, %eax;movl (%eax), %eax": 1,
                "calll - <ExFreePoolWithTag>;pushl $;pushl %edi;calll - <ExFreePoolWithTag>;xorl %eax, %eax": 1,
                "popl %esp;addb %al, (%eax);addb %al, (%eax);addb %dl, -(%eax);movl %edi, %edi": 1,
                "calll - <NtQueryInformationToken+>;cmpl $, %eax;je  <RtlSubAuthoritySid+>;cmpl $, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "jl  <RtlSetGroupSecurityDescriptor+>;movw (%esi), %ax;movw %ax, -(%ebp);movl -(%ebp), %ecx;movzwl %ax, %eax": 1,
                "movw %cx, -(%ebp);movzwl %cx, %ecx;movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "pushl $;calll - <IoInvalidateDeviceRelations+>;cmpb %bl, (%ebp);je  <RtlSubAuthoritySid+>;cmpl %ebx, ": 1,
                "cmpl $, %edi;je  <RtlSubAuthoritySid+>;pushl $;leal (%edi), %eax;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlSubAuthoritySid+>": 1,
                "pushl ;pushl -(%ebp);calll - <ObCreateObject>;cmpl %ebx, %eax;movl -(%ebp), %esi": 1,
                "pushl -(%ebp);calll - <ObCreateObject>;cmpl %ebx, %eax;movl -(%ebp), %esi;movl %eax, -(%ebp)": 1,
                "je  <RtlSubAuthoritySid+>;movw -(%ebp), %cx;movw %cx, (%edi);movw -(%ebp), %cx;movw %cx, (%edi)": 1,
                "movl (%edi), %ecx;movl %eax, (%ecx);movl (%edi), %eax;cmpl %ebx, (%eax);je  <RtlSubAuthoritySid+>": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %edi;pushl -(%ebp);pushl %edi;calll *(%edi)": 1,
                "cmpl $, -(%ebp);jbe - <RtlSubAuthoritySid+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "jl  <RtlSetGroupSecurityDescriptor+>;pushl %ebx;pushl $;calll - <IoInvalidateDeviceRelations+>;cmpl %ebx, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %edi;cmpl %ebx, %edi;jl  <RtlSetGroupSecurityDescriptor+>;pushl %ebx": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;testl %eax, %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl %ebx, -(%ebp)": 3,
                "cmpl %esi, %ebx;je  <RtlSubAuthoritySid+>;pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;jl  <RtlSubAuthoritySid+>;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %esi, %esi;jne  <MmAllocateMappingAddress+>;popl %edi;popl %esi;movb %bl, %al": 1,
                "popl %ebx;retl;leal (%eax), %ecx;cmpl %ecx, (%ecx);je - <RtlSubAuthoritySid+>": 1,
                "pushl $;popl %edx;je  <MmPageEntireDriver+>;cmpl %edx, (%eax);je  <MmPageEntireDriver+>": 1,
                "movzwl (%eax), %edx;pushl %esi;movzwl (%eax), %esi;addl $, %edx;testl %esi, %esi": 1,
                "je  <IoCheckFunctionAccess+>;movl %eax, -(%ebp);movl (%edx), %eax;addl %ebx, %eax;cmpl -(%ebp), %eax": 1,
                "cmpl -(%ebp), %eax;jbe  <RtlSubAuthoritySid+>;movl -(%ebp), %ebx;decl -(%ebp);leal -(%eax,%ebx), %eax": 1,
                "shll $, %eax;addl %esi, %eax;jmp  <RtlSubAuthoritySid+>;addl $, (%ebp);decl (%ebp)": 1,
                "movl (%ecx), %eax;movl (%ecx), %esi;movl (%ecx), %edx;movl %esi, -(%ebp);movl %eax, %esi": 1,
                "shrl $, %edx;shrl $, %eax;andl $, %edx;shll $, %esi;orl %edx, %esi": 1,
                "shldl $, %esi, %edx;xorl %edi, %edi;orl %edi, %edx;shll $, %esi;orl %eax, %esi": 1,
                "shrdl $, %edi, %eax;andl $, %eax;shrl $, %edi;movl %edx, %edi;shll $, %edi": 1,
                "shrdl $, %ebx, %edi;shll $, %eax;andl $, %edi;orl %edi, %eax;shrl $, %ebx": 1,
                "andl $, %edi;orl %edi, %eax;shll $, %eax;andl $, %esi;shrl $, %edx": 1,
                "movl %eax, %edi;andl %edx, %edi;leal (%esi,%edi,), %edi;sarl $, %edi;xorl %eax, %edi": 1,
                "rorb (%eax,%eax);into;decl %esp;addb %bh, %cl;iretl": 1,
                "pushl %ebx;pushl %esi;pushl %edi;je  <RtlSubAuthoritySid+>;movl (%ebp), %esi": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;je  <IoCheckFunctionAccess+>;movl (%esi), %edi;leal -(%ebp), %eax": 1,
                "cmpl %ebx, -(%ebp);je  <RtlSubAuthoritySid+>;movl (%ebp), %eax;subl %edi, %eax;cltd": 1,
                "movl (%ecx), %eax;subl %eax, -(%ebp);pushl %edi;pushl -(%ebp);leal (%ecx), %ebx": 1,
                "movl (%ecx), %ecx;addl (%ebp), %ecx;leal -(%eax), %esi;pushl %ebx;shrl %esi": 1,
                "movl %ecx, -(%ebp);movl (%ecx), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl %eax, -(%ebp)": 1,
                "movl %eax, %edx;shrl $, %edx;andl %esi, %edx;subl %ebx, %edx;cmpl %ecx, %edx": 1,
                "cmpl $, -(%ebp);jne - <RtlSubAuthoritySid+>;cmpl %edi, %edx;jne - <RtlSubAuthoritySid+>;movl -(%ebp), %ecx": 1,
                "shrl $, %eax;andl %esi, %eax;subl %ebx, %eax;cmpl %edx, %eax;jne  <RtlSubAuthoritySid+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;testl %ecx, %ecx;je  <RtlSubAuthoritySid+>": 1,
                "movl (%ebp), %edx;movl (%ebp), %esi;incl %eax;shrl $, %edx;andl $, %esi": 1,
                "decl %ecx;movl %edx, (%ebp);jne - <RtlSubAuthoritySid+>;popl %esi;movl (%ebp), %eax": 1,
                "leal (%edi), %eax;shrl %eax;pushl %eax;pushl (%ebp);pushl $": 1,
                "shrl %eax;pushl %eax;pushl (%ebp);pushl $;calll - <RtlSubAuthoritySid+>": 1,
                "addl %edi, %eax;subl %edx, %eax;negl %eax;sbbl %eax, %eax;popl %edi": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);pushl (%ebp);pushl $;pushl $": 1,
                "jl  <RtlSubAuthoritySid+>;movl %esi, -(%ebp);movl %esi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll - <RtlImageNtHeader>;movl %eax, -(%ebp);cmpl %esi, %eax;je  <IoRegisterBootDriverReinitialization+>": 1,
                "pushl $-;calll - <ZwUnmapViewOfSection>;leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>": 1,
                "cmpl $, %ebx;jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;incl %eax;cmpl %eax, ": 1,
                "cmpw $, ;jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "movl , %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx": 1,
                "movl -(%ebp), %edx;movb (%edx), %bl;movb %bl, %dl;cmpb (%edi), %bl;jne - <RtlSubAuthoritySid+>": 2,
                "movb (%edx), %bl;movb %bl, %dl;cmpb (%edi), %bl;jne - <RtlSubAuthoritySid+>;addl $, -(%ebp)": 1,
                "movb (%edx), %bl;movb %bl, %dl;cmpb (%edi), %bl;jne  <RtlSubAuthoritySid+>;testb %dl, %dl": 1,
                "movl (%ebp), %eax;movl (%edx,%eax), %edx;addl %edx, %eax;cmpl %ecx, %eax;movl -(%ebp), %edx": 1,
                "orl %eax, -(%ebp);pushl $;pushl %edi;calll - <_strnicmp>;addl $, %esp": 1,
                "xorl %eax, %eax;incl %eax;orl %eax, -(%ebp);je  <RtlSubAuthoritySid+>;cmpl %ebx, -(%ebp)": 1,
                "pushl %esi;pushl $;pushl %edi;calll - <_strnicmp>;addl $, %esp": 3,
                "je - <RtlSubAuthoritySid+>;pushl %esi;pushl $;pushl %edi;calll - <_strnicmp>": 1,
                "jl  <IoCheckFunctionAccess+>;movl (%ebp), %esi;cmpl %ebx, %esi;jne  <KeAddSystemServiceTable+>;movl -(%ebp), %eax": 1,
                "jmp - <RtlSubAuthoritySid+>;ja  <RtlSubAuthoritySid+>;outsb (%esi), %dx;xorl (%edx), %esi;imull $, (%eax), %eax": 1,
                "outsb (%esi), %dx;xorl (%edx), %esi;imull $, (%eax), %eax;js  <RtlSubAuthoritySid+>;jo  <RtlSubAuthoritySid+>": 1,
                "imull $, (%eax), %eax;pushl $;popl %ebp;fmuls (%ebx);cmpl $, -(%ebp)": 1,
                "addl $, -(%ebp);movl -(%ebp), %eax;movl (%eax), %edi;cmpl %ebx, %edi;jne - <RtlSubAuthoritySid+>": 1,
                "movl %ebx, (%ebp);jbe  <RtlSubAuthoritySid+>;leal (%esi), %eax;movl %eax, %ecx;movl %edx, (%ebp)": 1,
                "je  <RtlSubAuthoritySid+>;cmpl $, %edi;jne  <IoGetConfigurationInformation+>;pushl %ebx;pushl %esi": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;movl (%ebp), %esi;movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);testb $, ;je  <RtlSubAuthoritySid+>;movl $, -(%ebp)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;pushl %esi": 6,
                "je  <RtlSubAuthoritySid+>;orb $, ;cmpl $, %eax;je  <IoCheckFunctionAccess+>;cmpl %esi, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax": 1,
                "andl $, %eax;cmpl $, %eax;je  <IoCheckFunctionAccess+>;cmpl %esi, (%ebp);jne  <RtlSubAuthoritySid+>": 1,
                "jne  <RtlSubAuthoritySid+>;incl -(%ebp);pushl $;pushl -(%ebp);calll - <KeInitializeDeviceQueue+>": 1,
                "movl -(%ebp), %ecx;andl $, %ecx;shll $, %eax;orl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movl %esi, -(%ebp);movl $, %ecx;movl -(%ebp), %esi": 1,
                "calll - <CcGetFlushedValidData+>;cmpl %esi, -(%ebp);jne  <NtVdmControl+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %edi;negl %edi;sbbl %edi, %edi;andl $, %edi;addl $, %edi": 1,
                "addl $, %edi;movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);pushl -(%ebp)": 2,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);pushl -(%ebp);pushl $;pushl $": 2,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %edi;leal -(%ebp), %eax": 6,
                "leal -(%ebp), %eax;pushl %eax;calll - <ZwCreateSection>;movl %eax, -(%ebp);cmpl %esi, %eax": 1,
                "pushl -(%ebp);calll - <ZwClose>;cmpl %esi, -(%ebp);jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "cmpl %esi, -(%ebp);jne  <RtlSubAuthoritySid+>;movl (%eax), %eax;movl -(%ebp), %ecx;cmpl (%ecx), %eax": 1,
                "calll - <ZwCreateSection>;cmpl %esi, %eax;jl  <RtlSubAuthoritySid+>;pushl %esi;leal -(%ebp), %eax": 1,
                "calll - <ObfDereferenceObject>;movl %edi, -(%ebp);pushl -(%ebp);pushl (%ebp);movl (%ebp), %edi": 1,
                "testb $, ;je  <MmAllocateMappingAddress+>;cmpl %esi, -(%ebp);jne  <RtlSubAuthoritySid+>;movl -(%ebp), %ecx": 1,
                "cmpl %esi, -(%ebp);jl  <IoCheckFunctionAccess+>;movl $, -(%ebp);cmpl %esi, -(%ebp);jne  <RtlCreateRegistryKey+>": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);movl (%ebp), %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "jne  <RtlCreateRegistryKey+>;movzwl -(%ebp), %eax;movl -(%ebp), %ecx;leal (%eax,%ecx), %eax;pushl $": 1,
                "movw %cx, (%edx);jmp - <RtlRemoveUnicodePrefix+>;pushl $;pushl %esi;pushl %eax": 1,
                "calll - <IoInvalidateDeviceRelations+>;xorl %eax, %eax;jmp  <RtlSubAuthoritySid+>;nop;nop": 1,
                "movl %esp, %ebp;pushl %ecx;testb $, ;jne  <RtlSubAuthoritySid+>;movl (%ebp), %eax": 1,
                "movzwl (%ebx), %eax;movzwl (%ebx), %ecx;leal (%eax,%ebx), %edi;xorl %eax, %eax;xorl %esi, %esi": 1,
                "je  <RtlSubAuthoritySid+>;testl %eax, %eax;jne - <RtlSubAuthoritySid+>;addl $, %edi;decl -(%ebp)": 1,
                "movl (%esi), %ecx;andl $, -(%ebp);andl $, %ecx;orl $, %ecx;movl %ecx, (%esi)": 1,
                "movl (%edi), %eax;movl -(%edi), %ecx;leal (%ecx,%eax), %esi;cmpl %eax, %esi;jb  <IoCheckFunctionAccess+>": 1,
                "leal (%ecx,%eax), %esi;cmpl %eax, %esi;jb  <IoCheckFunctionAccess+>;cmpl -(%edi), %eax;jne  <IoCheckFunctionAccess+>": 1,
                "decl -(%ebp);jne - <RtlSubAuthoritySid+>;jmp - <RtlRemoveUnicodePrefix+>;pushl %ebx;pushl %esi": 1,
                "calll - <ExFreePoolWithTag>;pushl $-;popl %esi;jmp - <RtlSubAuthoritySid+>;movl (%ebp), %edx": 1,
                "testl %eax, %eax;jl - <RtlSubAuthoritySid+>;movl , %esi;movl $, %ebx;cmpl %ebx, %esi": 1,
                "movl (%ebp), %eax;movl $, %esi;pushl %esi;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "pushl %edi;calll - <RtlLookupElementGenericTableAvl>;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;pushl %edi": 1,
                "popl %ecx;popl %ecx;je  <IoCheckFunctionAccess+>;incl %esi;incl %esi": 1,
                "movl %eax, -(%ebp);je  <RtlSubAuthoritySid+>;movzwl -(%ebp), %ecx;movl %eax, %edi;movl %ecx, %eax": 1,
                "movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);pushl $": 1,
                "shrl $, %ecx;rep  movsl (%esi), %es:(%edi);pushl $;movl %eax, %ecx;pushl $": 2,
                "jae  <RtlGetAce+>;movl (%ebp), %eax;xorl %esi, %esi;cmpl %esi, (%ebp);leal (%ecx), %edx": 1,
                "cmpl (%ebp), %esi;movl %edi, (%eax);jb - <RtlGetAce+>;movzwl (%ecx), %edx;addl %ecx, %edx": 1,
                "andl $, %eax;addl $, %eax;popl %edi;popl %esi;popl %ebp": 1,
                "retl $;xorl %eax, %eax;jmp  <RtlGetAce+>;nop;nop": 1,
                "cmpw $, %cx;pushl $;popl %eax;jb  <RtlGetAce+>;pushl $": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;xorl %eax, %eax;rep  movsb (%esi), %es:(%edi)": 1,
                "pushl $;je  <RtlGetAce+>;andl $, (%ebp);leal (%ebp), %eax;pushl %eax": 1,
                "pushl (%ebp);calll - <ZwClose>;jmp  <RtlGetAce+>;nop;nop": 1,
                "subl $, %esp;pushl %edi;movl (%ebp), %edi;pushl %edi;pushl $": 1,
                "movl %eax, %esi;calll - <ZwClose>;testl %esi, %esi;jl  <IoRegisterBootDriverReinitialization+>;pushl %ebx": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;jne  <RtlGetAce+>;cmpb %bl, (%ebp);jne  <RtlGetAce+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %edx;testl %edx, %edx;je  <RtlGetAce+>": 1,
                "pushl (%ebp);pushl (%esi);calll - <RtlNumberGenericTableElementsAvl+>;testl %eax, %eax;je  <RtlGetAce+>": 1,
                "leal -(%ebp), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);xorl %ebx, %ebx": 1,
                "je  <RtlGetAce+>;orl $, -(%ebp);pushl %ebx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "retl $;movl -(%ebp), %edi;testl %edi, %edi;jne  <IoCheckFunctionAccess+>;jmp - <RtlGetAce+>": 1,
                "jmp - <RtlGetAce+>;nop;nop;nop;nop": 13,
                "testl %edi, %edi;movl $, %ebx;jl  <RtlGetAce+>;pushl %esi;movl %fs:, %eax": 1,
                "jne  <RtlGetAce+>;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %eax;pushl (%ebp);pushl (%esi);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl (%esi);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);calll - <RtlGetAce+>": 1,
                "calll - <RtlGetAce+>;movl %eax, %esi;cmpl $, %esi;je  <IoAssignDriveLetters+>;cmpl $, %esi": 1,
                "calll - <IoQueueWorkItem+>;leave;retl $;jae  <RtlGetAce+>;leal -(%eax), %esi": 1,
                "leal (%esi,%eax,), %eax;movl (%eax), %edi;je  <RtlGetAce+>;movl (%eax), %eax;movl %eax, (%ecx)": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl $, %esi;je  <IoCheckFunctionAccess+>": 1,
                "pushl %eax;pushl (%edi);pushl %esi;pushl (%ebp);pushl %ebx": 1,
                "pushl %esi;pushl (%ebp);pushl %ebx;calll  <RtlGetAce+>;testl %eax, %eax": 1,
                "calll - <RtlGetAce+>;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;xorl %esi, %esi;cmpl %esi, -(%ebp)": 1,
                "popl %ebp;retl $;xorl %eax, %eax;jmp - <RtlGetAce+>;nop": 1,
                "cmpl %ebx, %edi;jl  <RtlGetAce+>;cmpb %bl, (%ebp);movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;jne  <IoCheckFunctionAccess+>;pushl %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <NtFindAtom+>;pushl -(%ebp);movl %eax, %edi": 1,
                "pushl %ebx;calll  <RtlGetAce+>;movl %eax, %edi;cmpl %ebx, %edi;jl  <RtlGetAce+>": 1,
                "cmpl $, (%eax);jb  <RtlGetAce+>;movl (%eax), %ecx;movl (%eax,%ecx), %ecx;movl %ecx, -(%ebp)": 2,
                "jb  <RtlGetAce+>;movl (%eax), %ecx;movl (%eax,%ecx), %ecx;movl %ecx, -(%ebp);pushl %ebx": 2,
                "cmpl %ebx, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);jbe  <RtlGetAce+>;pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl %ebx;pushl (%ebp)": 1,
                "pushl (%ebp);calll  <RtlGetAce+>;testl %eax, %eax;jl  <RtlGetAce+>;leal -(%ebp), %eax": 1,
                "movl %eax, %edi;calll - <ExFreePoolWithTag>;cmpl %ebx, %edi;je  <IoCreateSymbolicLink+>;movl (%edi), %eax": 1,
                "cmpl %ebx, %esi;je  <RtlGetAce+>;movl (%esi), %eax;andl $, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "testl %eax, %eax;jl  <RtlGetAce+>;movl -(%ebp), %eax;cmpl $, (%eax);jne  <RtlGetAce+>": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll  <RtlValidSecurityDescriptor+>;testl %eax, %eax;jl  <RtlGetAce+>": 1,
                "incl %ecx;pushl %ecx;pushl (%eax);leal -(%ebp), %eax;pushl $": 2,
                "pushl (%eax);leal -(%ebp), %eax;pushl $;pushl $;pushl %eax": 2,
                "pushl $;pushl %eax;pushl -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 5,
                "pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <NtFindAtom+>": 5,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <NtFindAtom+>;movl %eax, %edi": 2,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 2,
                "int;int;int;pushl $;leal -(%ebp), %ecx": 1,
                "calll - <RtlGetAce+>;movl %edi, (%esi);movl (%esi), %eax;cmpl %edi, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "movl (%esi), %eax;cmpl %edi, %eax;jne  <IoCheckFunctionAccess+>;popl %edi;popl %esi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;cmpl (%eax), %ecx;jae  <IoCheckFunctionAccess+>;movl (%eax), %eax": 1,
                "pushl %eax;movw %di, (%esi);movl %eax, (%esi);movl %ecx, (%esi);calll  <RtlGetAce+>": 1,
                "pushl %eax;leal -(%ebp), %esi;leal -(%ebp), %ebx;calll - <RtlInitUnicodeString>;leal -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movw $, -(%ebp);calll - <RtlUpcaseUnicodeString>": 1,
                "testl %ecx, %ecx;stosl %eax, %es:(%edi);popl %edi;jle  <RtlGetAce+>;movw (%ebx), %ax": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%eax), %edi;movl (%eax), %eax": 1,
                "movzwl (%eax), %edx;addl %eax, %edx;leal (%ecx,%ecx,), %ebx;leal (%edx,%ebx,), %edx;xorl %eax, %eax": 1,
                "pushl %eax;calll - <RtlFindClearBitsAndSet+>;movl %eax, %esi;pushl $;pushl %esi": 1,
                "andl $, -(%ebp);movl %edx, %ecx;movl -(%ebp), %esi;leal (%ebx), %edi;movl %ecx, %eax": 1,
                "movl %edi, %ecx;calll - <ObfDereferenceObject>;jmp - <RtlSubAuthoritySid+>;pushl $;pushl (%ebp)": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);jmp - <IoCreateDevice+>;pushl %ebx;pushl -(%ebp)": 1,
                "jne - <IoCreateDevice+>;movl , %eax;movzwl (%eax), %eax;pushl $;pushl %eax": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);movb $, (%ebp);pushl $;pushl %ebx": 1,
                "xorl %eax, %eax;incl %eax;jmp - <RtlGetAce+>;xorl %eax, %eax;jmp - <RtlGetAce+>": 1,
                "jmp - <RtlGetAce+>;movl (%esi), %eax;leal (%eax,%eax,), %eax;movl %ebx, (%esi,%eax,);jmp  <RtlGetAce+>": 1,
                "pushl %edi;calll - <RtlGetAce+>;addl %esi, %eax;addl %ebx, %eax;popl %esi": 1,
                "jne - <RtlGetAce+>;pushl (%ebp);pushl (%ebp);calll - <RtlGetAce+>;movl %eax, %esi": 1,
                "pushl (%ebp);pushl (%ebp);calll - <RtlGetAce+>;cmpl %esi, %eax;jae - <RtlGetAce+>": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <RtlGetAce+>;pushl %esi;pushl (%ebp)": 1,
                "pushl %esi;pushl (%ebp);calll - <RtlGetAce+>;cmpw (%ebp), %ax;je  <RtlGetAce+>": 1,
                "pushl (%ebp);calll - <RtlGetAce+>;cmpw (%ebp), %ax;je  <RtlGetAce+>;pushl %esi": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;pushl $;popl %eax;jmp  <RtlGetAce+>": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je - <RtlGetAce+>;pushl %esi": 1,
                "andw $, %ax;cmpw $, %ax;jne - <RtlGetAce+>;pushl %esi;pushl (%ebp)": 1,
                "cmpw $, %ax;jne - <RtlGetAce+>;pushl %esi;pushl (%ebp);calll - <RtlGetAce+>": 1,
                "pushl (%ebp);calll - <RtlGetAce+>;movl %eax, %ecx;leal (%esi), %eax;cmpl %ecx, %eax": 1,
                "leal (%esi), %edi;rep  stosl %eax, %es:(%edi);pushl %esi;movl $, (%esi);calll - <RtlGetAce+>": 1,
                "movl $, (%esi);calll - <RtlGetAce+>;movl %eax, %edi;cmpl %ebx, %edi;movl %edi, (%ebp)": 1,
                "pushl %esi;movl %ebx, (%esi);calll - <RtlGetAce+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;je  <RtlGetAce+>;cmpl $, (%esi);je  <RtlGetAce+>": 1,
                "movl %esi, (%ebp);calll - <RtlGetAce+>;andw $, %ax;cmpw $, %ax;jne  <IoCheckFunctionAccess+>": 2,
                "jne  <IoCheckFunctionAccess+>;pushl $;leal (%ebp), %eax;pushl %eax;pushl (%ebp)": 3,
                "pushl %ebx;pushl %edi;pushl (%ebp);movl (%ebp), %edi;pushl %edi": 2,
                "testl %esi, %esi;jne  <RtlGetAce+>;movl -(%ebp), %eax;popl %esi;popl %edi": 1,
                "calll - <RtlGetAce+>;movl %eax, %esi;testl %esi, %esi;je  <RtlGetAce+>;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $-;pushl -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %eax;pushl $-;pushl -(%ebp);movl %esi, -(%ebp);calll - <ZwMapViewOfSection>": 1,
                "pushl %esi;calll - <RtlGetAce+>;pushl %esi;calll - <RtlGetAce+>;popl %esi": 1,
                "calll - <_CIsqrt+>;andl $, -(%ebp);movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%esi), %eax;testl %eax, %eax;je  <RtlGetAce+>;pushl %eax": 1,
                "cmpl %esi, %ebx;jl  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;movl %edi, %eax;negl %eax": 1,
                "calll  <IoWMIRegistrationControl+>;popl %edi;popl %esi;movl %ebx, %eax;popl %ebx": 1,
                "pushl $;calll - <KeReleaseMutex>;popl %ebp;retl $;nop": 1,
                "movl , %eax;movl $, (%esi);movl %eax, (%esi);pushl $;movl %esi, (%eax)": 1,
                "xaddl %eax, (%ecx);incl %eax;cmpl $, %eax;je  <SeRegisterLogonSessionTerminatedRoutine+>;xorl %eax, %eax": 1,
                "calll - <ExFreePoolWithTag>;movl %edi, %eax;popl %edi;popl %esi;popl %ebx": 8,
                "movl %esi, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %eax, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp);cmpl %edi, (%ebx)": 1,
                "movl -(%ebp), %edx;addl $, %ebx;cmpl (%ecx), %edx;jb - <IoWMIRegistrationControl+>;movl (%ebp), %edx": 1,
                "testl %eax, %eax;jl  <IoWMIRegistrationControl+>;movl -(%ebp), %ebx;movzwl -(%ebp), %esi;addl $, %ebx": 1,
                "jl  <IoWMIRegistrationControl+>;movl -(%ebp), %ebx;movzwl -(%ebp), %esi;addl $, %ebx;andl $-, %ebx": 1,
                "movl -(%ebp), %ebx;movzwl -(%ebp), %esi;addl $, %ebx;andl $-, %ebx;movl %ebx, %eax": 1,
                "movsl (%esi), %es:(%edi);movl $, (%eax);movl -(%ebp), %eax;addl %ecx, %eax;leal (%ebx), %edx": 1,
                "movl %eax, (%edx);popl %edi;popl %esi;popl %ebx;leave": 1,
                "cmpb %bl, ;movl %ebx, (%ebp);je  <IoDisconnectInterrupt+>;leal (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, -(%ebp);calll  <IoWMIRegistrationControl+>;cmpl %ebx, (%ebp);jl  <IoDisconnectInterrupt+>;cmpl %ebx, (%edi)": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);jne  <IoCheckFunctionAccess+>;cmpl %eax, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpb $, -;jne  <IoCheckFunctionAccess+>;popl %edi;popl %esi": 1,
                "testb $-, (%ecx);jne  <IoCheckFunctionAccess+>;movb $, %al;popl %ebp;retl $": 1,
                "je  <IoWMIRegistrationControl+>;movl (%esi), %esi;testl %esi, %esi;jne  <IoWMIRegistrationControl+>;movb $, %al": 1,
                "popl %ebp;retl $;pushl (%ebp);pushl %esi;calll - <IoWMIRegistrationControl+>": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp);je - <IoWMIRegistrationControl+>;pushl (%esi)": 1,
                "testb $, (%eax);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl (%edi), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl (%edi), %eax;cmpl $, (%eax)": 1,
                "addb %al, (%eax,%eax);addb %ch, (%ecx);jbe  <IoWMIRegistrationControl+>;addb %dh, %gs:(%edx);popl %esp": 1,
                "movzwl (%esi), %eax;addl %esi, %eax;movl %eax, -(%ebp);jmp - <FsRtlNotifyCleanup+>;movb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp - <FsRtlNotifyCleanup+>;movb $, -(%ebp);jmp  <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl %ebx, -(%ebp);pushl $;pushl $": 1,
                "movl %ebx, -(%ebp);pushl $;pushl $;pushl %ebx;calll - <ExAllocatePoolWithQuotaTag>": 1,
                "pushl %esi;pushl %edi;jne  <IoCheckFunctionAccess+>;cmpb $, (%ebp);movl , %edi": 1,
                "pushl %edi;jne  <IoCheckFunctionAccess+>;cmpb $, (%ebp);movl , %edi;jne  <IoCheckFunctionAccess+>": 1,
                "movl , %edi;jne  <IoCheckFunctionAccess+>;movl , %esi;pushl $;pushl %edi": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <IoWMIRegistrationControl+>;cmpl %ebx, %edi;je - <ObCreateObject+>": 1,
                "cmpl %edi, %esi;je  <IoCheckFunctionAccess+>;pushl $;popl %ecx;xorl %eax, %eax": 2,
                "je  <IoCheckFunctionAccess+>;pushl $;popl %ecx;xorl %eax, %eax;movl %esi, %edi": 4,
                "rep  stosl %eax, %es:(%edi);incl %eax;movl %eax, (%esi);movl %eax, (%esi);movl (%ebx), %eax": 1,
                "movl %eax, (%esi);movl , %eax;movl %eax, (%esi);movl , %eax;movl %eax, (%esi)": 6,
                "movl %eax, (%esi);movl , %eax;movl %eax, (%esi);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl $, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "cmpl $, %eax;jne  <IoCheckFunctionAccess+>;pushl %esi;calll - <toupper+>;xorl %edi, %edi": 1,
                "movl %ebx, (%edi);jmp - <FsRtlNotifyVolumeEvent+>;cmpl %ebx, (%ebp);jne  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <IoSetIoCompletion+>": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <IoSetIoCompletion+>;cmpl $, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <IoGetDeviceProperty+>;jmp - <CcUnpinDataForThread+>": 1,
                "cmpw $, (%eax);jne - <ObFindHandleForObject+>;movzwl (%eax), %eax;pushl %eax;calll - <RtlUpcaseUnicodeChar>": 1,
                "movl %eax, (%ecx);jmp - <ObFindHandleForObject+>;movl -(%ebp), %eax;movb (%eax), %cl;testb %cl, %cl": 1,
                "addl $, %eax;movl (%eax), %esi;movl %eax, -(%ebp);testl %esi, %esi;movl %esi, -(%ebp)": 1,
                "jne - <ObFindHandleForObject+>;jmp  <IoCheckFunctionAccess+>;movl -(%ecx), %eax;cmpl , %eax;jne - <ObFindHandleForObject+>": 1,
                "jmp  <IoCheckFunctionAccess+>;movl -(%ecx), %eax;cmpl , %eax;jne - <ObFindHandleForObject+>;movl (%ecx), %eax": 1,
                "movl %esi, %ecx;calll *;jmp  <IoCheckFunctionAccess+>;movl %esi, %ecx;calll *": 2,
                "calll *;jmp  <IoCheckFunctionAccess+>;movl %esi, %ecx;calll *;jmp - <ObFindHandleForObject+>": 1,
                "movl $, -(%ebp);xorl %edi, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %fs:, %eax": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb (%eax), %cl": 1,
                "testb %cl, %cl;jne  <IoCheckFunctionAccess+>;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "cmpl $, %eax;je  <NtQueryInformationAtom+>;cmpl $, %eax;je  <IoInitializeCrashDump+>;cmpl $, %eax": 1,
                "testb $, %bl;jne  <IoCheckFunctionAccess+>;leal (%esi,%ebx), %eax;cmpl %ebx, %eax;jb  <IoCheckFunctionAccess+>": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;jne  <IoCheckFunctionAccess+>;pushl %esi;movl , %esi": 1,
                "subl $, %eax;je  <RtlUpperString+>;pushl $;popl %ecx;subl %ecx, %eax": 1,
                "pushl $;popl %ecx;subl %ecx, %eax;je  <RtlSelfRelativeToAbsoluteSD+>;subl $, %eax": 1,
                "subl $, %eax;je  <IoOpenDeviceInterfaceRegistryKey+>;subl %ecx, %eax;je  <NtVdmControl+>;subl %ecx, %eax": 1,
                "decl %eax;jne  <IoCheckFunctionAccess+>;cmpl $, (%esi);jne  <IoCheckFunctionAccess+>;xorl %ebx, %ebx": 1,
                "retl $;testl %esi, %esi;jne - <RtlUpcaseUnicodeStringToOemString+>;movl , %eax;andl $, %eax": 1,
                "cmpl $, ;pushl $;movl %eax, %esi;movl $, %edi;setge -(%ebp)": 1,
                "decl (%esi);pushl %edi;calll - <ExAcquireResourceExclusiveLite>;cmpl %ebx, ;jne  <IoWMIRegistrationControl+>": 1,
                "pushl %edi;calll - <ExAcquireResourceExclusiveLite>;cmpl %ebx, ;jne  <IoWMIRegistrationControl+>;movl $, %eax": 1,
                "movl $, %eax;cmpb $, -(%ebp);je  <IoWMIRegistrationControl+>;cmpl $, %eax;je  <IoCheckFunctionAccess+>": 1,
                "jne  <IoWMIRegistrationControl+>;popl %ebp;jmp - <ZwFsControlFile+>;movl (%ebp), %eax;cmpw $, %ax": 1,
                "jb  <IoInitializeCrashDump+>;cmpb $, ;je  <IoCheckFunctionAccess+>;addl $, %eax;testw %ax, %ax": 1,
                "movzbl (%esi), %eax;pushl %eax;movzwl (%esi), %eax;pushl %eax;movzwl (%esi), %eax": 2,
                "calll - <RtlInitUnicodeString>;pushl $;xorl %eax, %eax;popl %ecx;leal -(%ebp), %edi": 3,
                "pushl %ecx;movl $, -(%ebp);sbbl %eax, %eax;andl $, %eax;xorl %edi, %edi": 1,
                "movl $, -(%ebp);sbbl %eax, %eax;andl $, %eax;xorl %edi, %edi;addl $, %eax": 1,
                "pushl %edi;pushl %eax;movl $, -(%ebp);calll  <IoCheckFunctionAccess+>;movl %eax, %esi": 1,
                "addb %dh, (%eax,%eax);js  <IoWMIOpenBlock+>;subl $, %eax;addb %dh, (%eax,%eax);js  <IoWMIOpenBlock+>": 1,
                "subl $, %eax;addb %dh, (%edx);addb %bh, (%eax);andl $, %eax;addb %bh, (%eax)": 8,
                "andl $, %eax;addb %bh, (%eax);andl $, %eax;addb %bh, (%eax);addb %al, (%eax)": 3,
                "je  <RtlCopyLuid+>;orl $, %eax;movl %eax, (%esi);pushl -(%esi);pushl ": 1,
                "cmpl , %esi;je  <RtlCopyLuid+>;cmpl , %esi;je  <RtlCopyLuid+>;addl $, %eax": 1,
                "addl %ecx, %edx;movl %edx, -(%ebp);movzbl (%eax), %eax;pushl %eax;calll - <RtlLengthRequiredSid>": 1,
                "addl $, %eax;andl %ebx, %eax;leal (%eax,%ecx), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "xorl %ecx, %ecx;movl %ecx, (%ebx);movl %ecx, (%ebx);movl (%esi), %eax;movl %eax, (%ebx)": 1,
                "movl %ecx, (%ebx);movl %ecx, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax": 1,
                "movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movl (%ebp), %esi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movb %cl, (%ebx)": 1,
                "movl (%ebp), %eax;subl -(%ebp), %eax;xorl %esi, %esi;cmpl %esi, (%ebp);movl %eax, (%ebx)": 1,
                "addl %eax, %edi;movl (%ebp), %eax;cmpl %esi, %eax;je  <RtlCopyLuid+>;movl %edi, (%ebx)": 1,
                "calll - <ObfDereferenceObject>;movl %edi, %eax;jmp  <RtlCopyLuid+>;nop;nop": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <RtlCopyLuid+>;andl $, -(%ebp);movl (%ebp), %esi": 1,
                "cmpl $, %edi;jne  <IoCheckFunctionAccess+>;movl $, %eax;cmpl $, %edi;je  <RtlCopyLuid+>": 1,
                "je  <IoCheckFunctionAccess+>;movl %fs:, %eax;decl (%eax);pushl $;pushl (%esi)": 2,
                "calll - <ExAcquireResourceSharedLite>;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %edi;movl (%esi), %ecx": 1,
                "incl (%eax);jne  <RtlCopyLuid+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>": 2,
                "orl %edi, %eax;jne  <IoCheckFunctionAccess+>;movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;orl %ebx, %edi;je  <RtlCopyLuid+>": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;orl %ebx, %edi;je  <RtlCopyLuid+>;pushl $": 1,
                "andl $, -(%ebp);movl -(%ebp), %eax;cmpl (%ebp), %eax;jae  <RtlCopyLuid+>;movl %eax, %esi": 1,
                "movl %eax, (%esi);pushl %ecx;calll - <RtlLengthRequiredSid>;movl %eax, (%esi);testl %eax, %eax": 1,
                "orl $-, -(%ebp);cmpl $, -(%ebp);jl  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "pushl (%ebp);calll - <ExAllocatePoolWithTag>;movl (%ebp), %ecx;movl %eax, (%ecx);testl %eax, %eax": 1,
                "calll - <ExAllocatePoolWithTag>;movl (%ebp), %ecx;movl %eax, (%ecx);testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "movl %eax, (%ecx);testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;cmpb $, (%ebp)": 1,
                "movl %ecx, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp);cmpl (%ebp), %ecx;jae  <RtlCopyLuid+>": 1,
                "addl %ecx, %eax;movl %eax, -(%ebp);movl (%eax), %ecx;movl (%eax), %esi;movl %ebx, %edi": 1,
                "movl (%eax), %ecx;movl (%eax), %esi;movl %ebx, %edi;movl %ecx, %edx;shrl $, %ecx": 1,
                "leal (%edx,%ecx), %esi;movl %ebx, (%esi);movl (%eax), %eax;addl $, %eax;andl $-, %eax": 1,
                "movb (%eax), %al;movb %al, -(%ebp);cmpb %bl, %al;je  <RtlCopyLuid+>;movl %ebx, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;movl , %eax;cmpl %eax, -(%ebp);jae  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp)": 2,
                "jae  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);je  <RtlCopyLuid+>;testb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "pushl %edi;pushl %esi;calll - <NtQuerySystemInformation+>;cmpl %ebx, %eax;jl  <RtlCopyLuid+>": 1,
                "calll - <RtlCopyLuid>;movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "pushl %esi;pushl %ebx;pushl %ebx;pushl %edi;pushl %ecx": 2,
                "calll - <RtlCopyLuid+>;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jl  <RtlCopyLuid+>;movl -(%ebp), %eax": 1,
                "pushl %eax;calll - <NtAdjustPrivilegesToken+>;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);cmpl %ebx, %eax;je  <RtlCopyLuid+>;leal -(%ebp), %ecx": 1,
                "movsl (%esi), %es:(%edi);orl $-, -(%ebp);cmpl %ebx, -(%ebp);jl  <RtlCopyLuid+>;movb -(%ebp), %al": 1,
                "je  <RtlCopyLuid+>;pushl $;pushl -(%ebp);pushl -(%ebp);calll - <ObReferenceObjectByName+>": 4,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movl %ecx, (%edx);orl $-, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl (%ebp), %ebx;cmpl %ecx, %ebx;jae  <IoCheckFunctionAccess+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ecx, %ebx;jae  <IoCheckFunctionAccess+>;movl (%ebx), %eax;movl %eax, -(%ebp);xorl %edx, %edx": 1,
                "movl %esi, %edi;cmpl %eax, %edx;sbbl %esi, %esi;andl %edi, %esi;addl $, %esi": 1,
                "ja  <RtlCopyLuid+>;orl $-, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "cmpl %eax, %ecx;ja  <RtlCopyLuid+>;orl $-, -(%ebp);cmpl $, %esi;jb  <RtlCopyLuid+>": 1,
                "movl %edi, -(%ebp);movl (%ebx), %ebx;movl %ebx, -(%ebp);orl $-, -(%ebp);pushl -(%ebp)": 1,
                "movl (%esi), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne - <RtlCopyLuid+>": 1,
                "incl (%eax);jne - <RtlCopyLuid+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je - <RtlCopyLuid+>": 1,
                "je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %esi;calll - <PsSetProcessWindowStation+>;jmp - <RtlCopyLuid+>": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;je  <RtlCopyLuid+>;movb (%ebp), %al": 1,
                "cmpl $, (%esi);je  <RtlCheckRegistryKey+>;pushl %edi;pushl $;pushl %esi": 1,
                "movl (%esi), %esi;pushl %eax;calll *(%ebp);jmp - <RtlCopyLuid+>;popl %esi": 1,
                "cmpl %esi, %edi;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp)": 1,
                "incl %esi;testb $, %dh;jne  <RtlCopyLuid+>;movl (%ebx), %ecx;addl $, %ecx": 1,
                "cmpl $, %ecx;ja  <IoRegisterBootDriverReinitialization+>;movzbl (%ecx), %ecx;jmpl *(,%ecx,);cmpb $, (%ebp)": 1,
                "je  <RtlCopyLuid+>;decl %eax;jne  <RtlCopyLuid+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jne  <IoOpenDeviceRegistryKey+>;cmpl -(%ebp), %ebx;je  <RtlCopyLuid+>": 1,
                "je  <RtlCheckRegistryKey+>;cmpl %edx, (%ebx);je  <IoOpenDeviceRegistryKey+>;movl (%ebx), %ebx;cmpl -(%ebp), %ebx": 1,
                "pushl %edi;pushl -(%ebp);pushl $;pushl (%ebp);pushl (%ebp)": 2,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl (%ebp);pushl ": 1,
                "jne - <RtlCopyLuid+>;pushl %edi;pushl -(%ebp);pushl $;pushl (%ebp)": 1,
                "pushl (%ebp);pushl ;calll - <RtlCopyLuid+>;incl -(%ebp);cmpl $, -(%ebp)": 1,
                "calll - <RtlCopyLuid+>;incl -(%ebp);cmpl $, -(%ebp);jae  <RtlCopyLuid+>;movl (%ebx), %eax": 1,
                "imull $, %eax, %eax;pushl $;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 2,
                "jmp  <RtlCopyLuid+>;jmp  <RtlCopyLuid+>;jmp  <RtlCheckRegistryKey+>;movl $, %eax;jmp - <RtlCopyLuid+>": 1,
                "incl %eax;incl %eax;cmpl -(%ebp), %ebx;je  <RtlCopyLuid+>;jmp - <RtlCopyLuid+>": 1,
                "jmp - <RtlCopyLuid+>;jmp  <RtlCopyLuid+>;movl -(%ebp), %eax;movzwl (%eax), %ecx;movl (%eax), %esi": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;leal -(%ebp), %eax": 5,
                "jmp - <RtlCopyLuid+>;cmpl $, -(%ebp);je  <RtlCopyLuid+>;pushl $;pushl -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl $, %eax;jmp - <RtlCopyLuid+>;jp - <RtlCopyLuid+>;decl %ebp": 1,
                "addb %al, (%ecx);outb %al, %dx;decl %ebp;addb %dh, %cl;andl (%ebp), %ecx": 1,
                "decl %edi;addb %bl, (%eax);decl %ebp;addb %ch, (%ebp);addl %eax, (%edx)": 1,
                "pushl $;calll - <ExAcquireResourceExclusiveLite>;jmp - <FsRtlOplockFsctrl+>;pushl %ebx;calll - <IoInvalidateDeviceRelations+>": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;andl $-, (%eax);addl $, %eax;pushl %eax": 1,
                "movl $, %ecx;movl %eax, %esi;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 1,
                "movl %eax, %esi;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);je  <IoCheckFunctionAccess+>": 1,
                "pushl %ecx;pushl (%ebp);calll - <RtlCopyLuid+>;cmpb %cl, (%ebp);je  <RtlCopyLuid+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;pushl %esi;pushl %edi": 1,
                "leal (%eax), %ecx;xorl %edi, %edi;cmpl %edi, (%ecx);je  <IoCheckFunctionAccess+>;movl (%ecx), %eax": 1,
                "movl %ecx, (%eax);movl %eax, (%ebx);incl (%esi);cmpl (%esi), %edi;jb  <IoRegisterDeviceInterface+>": 1,
                "movl %eax, (%ebx);incl (%esi);cmpl (%esi), %edi;jb  <IoRegisterDeviceInterface+>;movl %edi, (%esi)": 1,
                "je - <RtlUnicodeStringToInteger+>;movl (%ebx), %eax;testl %eax, %eax;je  <IoRegisterDeviceInterface+>;pushl -(%ebp)": 1,
                "calll  <IoQueryDeviceDescription+>;testb %al, %al;je  <IoCheckFunctionAccess+>;pushl %ebx;xorl %ebx, %ebx": 1,
                "movl %esi, (%eax);jmp - <RtlSubAuthoritySid+>;orl $, %eax;movl %eax, (%ebp);incl %edi": 1,
                "movzwl (%eax,%ecx,), %ecx;movl , %eax;movl %ecx, (%ebp);movzwl %cx, %ecx;movl %ecx, %edx": 2,
                "movl %ecx, (%ebp);movzwl %cx, %ecx;movl %ecx, %edx;shrl $, %edx;movzwl (%eax,%edx,), %edx": 2,
                "movw (%eax,%edx,), %ax;addw (%ebp), %ax;movl (%ebp), %ecx;movl (%ebp), %edx;jmp - <RtlUpcaseUnicodeString+>": 1,
                "pushl (%ebp);calll - <ZwClose>;movl %esi, %eax;popl %esi;leave": 3,
                "cmpl $, (%ebp);je  <RtlCheckRegistryKey+>;cmpl $, (%ebp);jl - <RtlQueryRegistryValues+>;andl $, (%ebp)": 1,
                "lock;orl %eax, (%esi);xorb %al, %al;jmp - <CcCopyRead+>;movl $, -(%ebp)": 1,
                "int;xorl %esi, %esi;jmp - <RtlGetAce+>;nop;nop": 1,
                "je  <MmResetDriverPaging+>;cmpl $, %eax;je  <MmResetDriverPaging+>;cmpl $, %eax;je  <MmResetDriverPaging+>": 1,
                "leal -(%edi,%ecx), %ecx;shrl $, %ecx;andl $, %ecx;pushl $;subl $, %ecx": 1,
                "pushl $;pushl %esi;calll - <MmLockPagableSectionByHandle+>;testl %eax, %eax;je  <MmPageEntireDriver+>": 1,
                "pushl %edx;leal -(%ecx,%eax,), %eax;pushl %eax;pushl %ecx;calll - <IoInvalidateDeviceRelations+>": 1,
                "calll - <IoInvalidateDeviceRelations+>;movl %esi, %eax;popl %esi;popl %ebp;retl $": 1,
                "jbe  <IoGetConfigurationInformation+>;leal (%eax), %ecx;leal (%esi), %eax;movl %eax, %edx;movl (%edx), %eax": 1,
                "cmpw $, %si;jb  <RtlPinAtomInAtomTable+>;movl %esi, %eax;andl $, %eax;pushl %eax": 1,
                "movb %cl, (%eax);orl $-, -(%ebp);pushl (%ebp);calll - <RtlUpcaseUnicodeString+>;movl -(%ebp), %eax": 1,
                "rep  stosb %al, %es:(%edi);pushl %esi;movl %ebx, (%esi);calll - <RtlPinAtomInAtomTable+>;testb %al, %al": 1,
                "addl %ecx, %eax;jmp - <RtlLengthSecurityDescriptor+>;movl (%ecx), %ecx;jmp - <RtlCreateAtomTable+>;cmpl %ecx, %edx": 1,
                "testb $, (%ebp);jne  <IoCheckFunctionAccess+>;movw (%esi), %ax;testb $, %al;jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;andl $, (%ebp);movzwl (%esi), %esi;movl %esi, %eax;andl $, %eax": 1,
                "jmp  <IoCheckFunctionAccess+>;testb %ch, %ch;jns  <SeRegisterLogonSessionTerminatedRoutine+>;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "incl %esi;leal -(%ebp), %eax;movl %ecx, -(%ebp);addw $-, -(%ebp);incl %esi": 1,
                "pushl %eax;movl %esi, -(%ebp);calll - <FsRtlDoesNameContainWildCards>;testb %al, %al;jne - <FsRtlIsNameInExpression+>": 1,
                "testb %al, %al;jne - <FsRtlIsNameInExpression+>;addl $-, %edi;cmpw %di, %bx;jb - <FsRtlIsNameInExpression+>": 1,
                "subl %ecx, %eax;shrl %eax;cmpb $, (%ebp);je  <IoCheckFunctionAccess+>;movw -(%ebp), %cx": 1,
                "je  <IoCheckFunctionAccess+>;movw -(%ebp), %cx;andl $, -(%ebp);shrw %cx;movw %cx, -(%ebp)": 1,
                "movw %cx, -(%ebp);je - <FsRtlIsNameInExpression+>;movl (%ebp), %ecx;movl (%ecx), %edx;movzwl -(%ebp), %ecx": 1,
                "je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <FsRtlNotifyCleanup+>": 1,
                "jae  <RtlAddAce+>;movb (%eax), %dl;cmpb $, %dl;ja  <IoCheckFunctionAccess+>;movzwl (%eax), %edx": 1,
                "jbe  <RtlAddAce+>;movzwl (%esi), %edi;cmpl %edi, %edx;jae  <RtlAddAce+>;movzwl (%ecx), %ebx": 1,
                "addl %ebx, %ecx;incl %edx;cmpl (%ebp), %edx;jb - <RtlAddAce+>;subl %ecx, %eax": 1,
                "popl %ebx;popl %esi;leave;retl $;movl $, %eax": 1,
                "movl $, %eax;jmp - <RtlAddAce+>;movl $, %eax;jmp - <RtlAddAce+>;nop": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;decl %eax;movl (%ebp), %ecx": 1,
                "movb %dl, (%ecx);incl %ecx;decl %edi;jne - <RtlAddAce+>;popl %edi": 1,
                "movw (%edx), %ax;addl %esi, %edx;jmp - <RtlUnicodeStringToInteger+>;negl %esi;jmp - <RtlUnicodeStringToInteger+>": 1,
                "jae  <IoCheckFunctionAccess+>;movl (%ecx), %ebx;movzwl (%ebx,%edx,), %ebx;jmp - <MmMapViewInSessionSpace+>;subl $, %ecx": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <RtlSetGroupSecurityDescriptor+>;leal (%eax), %ecx": 2,
                "jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;popl %edi;popl %ebx;popl %esi": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %ebx, (%eax);movl (%ebp), %eax;movl %ebx, (%eax);jmp - <NtAdjustPrivilegesToken+>": 1,
                "movl %ebx, (%eax);jmp - <NtAdjustPrivilegesToken+>;calll  <ExRaiseAccessViolation>;jmp - <NtAdjustPrivilegesToken+>;cmpb %bl, -(%ebp)": 1,
                "movl $, -(%ebp);jmp - <RtlIntegerToUnicodeString+>;movl %eax, %esi;jmp  <IoCheckFunctionAccess+>;xorl %ebx, %ebx": 1,
                "calll - <ExNotifyCallback>;popl %ebp;retl $;nop;nop": 1,
                "movl (%esi), %ebx;movl %ebx, -(%ebp);movl , %eax;negl %eax;xorl %edx, %edx": 2,
                "movl %edi, %ecx;movl %eax, %edi;movl %ecx, %edx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 3,
                "xorl %edi, %edi;cmpl %edi, %esi;jl  <IoCheckFunctionAccess+>;pushl (%ebp);pushl -(%ebp)": 2,
                "pushl %eax;calll - <SeQueryAuthenticationIdToken>;movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "pushl $;pushl $;calll  <IoOpenDeviceRegistryKey+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "incl %edx;movl %ecx, (%ebp);movw (%ebp), %cx;cmpw (%ebp), %cx;je - <RtlSetGroupSecurityDescriptor+>": 1,
                "movzwl (%ebp), %edx;movzwl %cx, %eax;subl %edx, %eax;jmp - <RtlCompareUnicodeString+>;cmpl $, %edi": 1,
                "incl %ebp;addb %dh, (%edx);jb  <RtlSetGroupSecurityDescriptor+>;outsl (%esi), %dx;addb %dh, (%edx)": 1,
                "addb %dh, (%edx);incl %ebx;addb %ch, (%edi);outsb (%esi), %dx;addb %dh, (%eax,%eax)": 3,
                "pushl ;pushl %ebx;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;pushl -(%ebp)": 2,
                "pushl %ebx;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "jl  <RtlSetGroupSecurityDescriptor+>;pushl -(%ebp);calll - <KeGetRecommendedSharedDataAlignment+>;movl -(%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "movl $, %ebx;cmpl %ebx, %edi;jne  <IoRegisterFileSystem+>;movl $, %ecx;calll - <ExReleaseResourceLite>": 1,
                "calll - <RtlCopyUnicodeString+>;popl %edi;popl %esi;popl %ebx;popl %ebp": 2,
                "popl %ecx;leal (%eax,%eax), %edi;movl %edi, (%esi);movl %edi, %eax;popl %edi": 1,
                "popl %ecx;addb %dl, (%ebx);addb %al, (%eax);int;int": 1,
                "int;int;int;movl (%ebx), %edi;addl (%ebp), %edi": 1,
                "movl $, (%esi);jne  <RtlGetVersion+>;movzbw , %ax;movw %ax, (%esi);movb , %al": 1,
                "movw %ax, (%esi);movw , %ax;movw %ax, (%esi);leal (%ebp), %eax;pushl %eax": 1,
                "andl $, -(%ebp);pushl %edi;pushl (%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <ZwClose>;movl %edi, %eax;popl %edi;leave;retl $": 2,
                "movl %eax, %esi;pushl $;decl %esi;popl %ebx;leal (%ebp), %eax": 1,
                "calll - <wcslen>;popl %ecx;incl %eax;popl %edi;popl %ebp": 1,
                "incl %edi;cmpl %ebx, %edx;movl %ebx, -(%ebp);jbe  <IoCreateUnprotectedSymbolicLink+>;leal (%ebp), %eax": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <IoGetDeviceProperty+>": 2,
                "leal (%edi,%eax), %edi;incl %ebx;cmpl -(%ebp), %ebx;leal (%eax,%ecx), %eax;movl %eax, (%ebp)": 1,
                "testl %esi, %esi;jbe  <IoCreateUnprotectedSymbolicLink+>;movl (%ebp), %eax;movl %ebx, (%edi,%eax,);movl (%ebp), %eax": 1,
                "pushl %ecx;pushl %eax;pushl (%ebp);calll - <IoCreateUnprotectedSymbolicLink+>;leal (%ebx,%eax,), %ebx": 1,
                "movb %al, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %ecx;cmpb %bl, %al": 1,
                "cmpb %bl, %al;je  <IoCreateUnprotectedSymbolicLink+>;movl , %eax;cmpl %eax, %ecx;jae  <IoCheckFunctionAccess+>": 1,
                "movl %esi, %edi;rep  stosl %eax, %es:(%edi);leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax)": 2,
                "movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, ;movl %edi, %ecx;calll *": 1,
                "jl  <IoCreateUnprotectedSymbolicLink+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl %edx, -(%ebp)": 1,
                "addl %esi, %eax;cmpl %esi, %eax;jb  <IoOpenDeviceRegistryKey+>;cmpl , %eax;ja  <IoOpenDeviceRegistryKey+>": 1,
                "andl $-, %edi;movb $, -(%ebp);testb $-, -(%ebp);jne  <IoCheckFunctionAccess+>;andl $, %edi": 1,
                "movl $, %ecx;testl %ebx, %ecx;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;cmpl %edx, %eax": 1,
                "jne  <IoCheckFunctionAccess+>;testb $, (%esi);jne  <IoCheckFunctionAccess+>;pushl %esi;calll  <IoCreateUnprotectedSymbolicLink+>": 1,
                "leal (%ecx), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "testl %ecx, %ecx;movl (%ebp), %eax;pushl %ebx;pushl %esi;pushl %edi": 1,
                "leal (%eax), %edi;cmpl %edi, %esi;jne  <IoCheckFunctionAccess+>;xorl %ebx, %ebx;cmpl $, (%ebp)": 1,
                "movl (%ebp), %ebx;pushl %edi;pushl $;pushl %ebx;calll - <IoCreateUnprotectedSymbolicLink+>": 1,
                "pushl %ebx;calll - <IoCreateUnprotectedSymbolicLink+>;movl %eax, %edi;testl %edi, %edi;jne  <IoCheckFunctionAccess+>": 1,
                "testl %edi, %edi;jne  <IoCheckFunctionAccess+>;popl %edi;popl %ebx;popl %ebp": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <IoOpenDeviceRegistryKey+>;movl (%ebp), %eax;decl %eax": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <IoGetDeviceProperty+>": 1,
                "pushl %eax;pushl %ebx;calll - <IoGetDeviceProperty+>;movl %eax, %edi;testl %edi, %edi": 1,
                "addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);jne  <IoOpenDeviceRegistryKey+>;jb  <IoOpenDeviceRegistryKey+>": 2,
                "jb  <IoOpenDeviceRegistryKey+>;jb  <IoOpenDeviceRegistryKey+>;addb %ch, %gs:(%esi);je  <IoOpenDeviceRegistryKey+>;incl %ebx": 2,
                "je  <IoOpenDeviceRegistryKey+>;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx;addb %dh, (%eax,%eax)": 2,
                "pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax;movl %ebx, -(%ebp)": 2,
                "pushl %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb %bl, -(%ebp)": 2,
                "movl %eax, (%ebp);calll - <ZwClose>;movl (%ebp), %eax;cmpl %ebx, %eax;jl  <IoOpenDeviceRegistryKey+>": 1,
                "movl (%eax), %ecx;addl %eax, %ecx;cmpl %ebx, ;movl %ecx, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <NtFindAtom+>;pushl -(%ebp);calll - <ZwClose>": 2,
                "pushl -(%ebp);calll - <ZwClose>;cmpl %ebx, -(%ebp);je  <IoOpenDeviceRegistryKey+>;pushl %edi": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);calll - <NtFindAtom+>;movl -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movl %ebx, -(%ebp)": 2,
                "pushl %ebx;movl %esi, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp);calll - <RtlQueryRegistryValues>": 1,
                "decl %ecx;addb %al, (%eax,%eax);addb %dl, (%eax);jb  <IoOpenDeviceRegistryKey+>;outsl (%esi), %dx": 1,
                "jae  <IoOpenDeviceRegistryKey+>;addb %al, (%eax);addb %al, (%eax);pushl %ebx;addb %ah, (%ebp)": 1,
                "cmpb $, (%ebp);jne - <RtlCopyLuid+>;cmpb $, (%ebp);jne  <FsRtlBalanceReads+>;pushl -(%ebp)": 1,
                "jne - <RtlCopyLuid+>;cmpb $, (%ebp);jne  <FsRtlBalanceReads+>;pushl -(%ebp);pushl (%ebp)": 1,
                "pushl -(%ebp);pushl (%ebp);pushl %ebx;calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax": 1,
                "xorl %eax, %eax;movb , %al;pushl %edx;pushl %edx;pushl %eax": 1,
                "jmp  <IoOpenDeviceRegistryKey+>;nop;nop;nop;incl %ecx": 1,
                "pushl %eax;pushl %ebx;calll - <IoWMIRegistrationControl+>;testl %eax, %eax;jl  <IoOpenDeviceRegistryKey+>": 1,
                "cmpl %ecx, (%eax);ja  <IoCheckFunctionAccess+>;movl , %ecx;leal (%ebx), %eax;cmpl %ecx, (%eax)": 1,
                "ja  <IoCheckFunctionAccess+>;movl , %ecx;leal (%ebx), %eax;cmpl %ecx, (%eax);jb  <IoCheckFunctionAccess+>": 1,
                "leal (%ebx), %eax;pushl %eax;calll - <IoOpenDeviceRegistryKey+>;pushl $;leal (%ebx), %eax": 1,
                "cmpb $, ;jne  <IoOpenDeviceRegistryKey+>;movb $, (%ebx);xorl %edx, %edx;cmpl %edx, (%ebx)": 1,
                "cmpl %edx, %eax;je  <IoOpenDeviceRegistryKey+>;pushl $;popl %ecx;cmpl %ecx, %eax": 1,
                "pushl %edi;je  <IoOpenDeviceRegistryKey+>;movl $, -(%ebp);movl $, %ebx;movl $, %edi": 1,
                "movl $, %ebx;movl $, %edi;cmpl %edi, (%ebp);jb  <IoCheckFunctionAccess+>;ja  <IoCheckFunctionAccess+>": 1,
                "movl $, -(%ebp);movl $, %ebx;jmp - <IoOpenDeviceRegistryKey+>;cmpl %edi, %esi;je  <IoCheckFunctionAccess+>": 1,
                "movl $, %ebx;jmp - <IoOpenDeviceRegistryKey+>;cmpl %edi, %esi;je  <IoCheckFunctionAccess+>;cmpl $, %esi": 1,
                "jne  <IoOpenDeviceRegistryKey+>;testb %bl, %bl;jne  <IoOpenDeviceRegistryKey+>;pushl $;popl %esi": 1,
                "jg  <IoCheckFunctionAccess+>;cmpl $, %esi;je  <IoOpenDeviceRegistryKey+>;cmpl $, %esi;jne - <IoOpenDeviceRegistryKey+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 20,
                "calll - <ZwOpenKey>;cmpl %edi, %eax;jl  <IoOpenDeviceRegistryKey+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl %esi": 4,
                "nop;nop;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 2,
                "addb %ah, (%ebp);jae  <IoOpenDeviceRegistryKey+>;jae  <IoOpenDeviceRegistryKey+>;imull $, (%eax), %eax;andb %al, (%eax)": 1,
                "pushl $;calll - <_CIsqrt+>;movl , %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax;jl  <IoOpenDeviceRegistryKey+>;pushl $;leal -(%ebp), %eax": 1,
                "testl %eax, %eax;jl  <IoCheckFunctionAccess+>;subl $, -(%ebp);pushl -(%ebp);leal -(%ebp), %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl %edi;calll - <IoWMIWriteEvent+>": 1,
                "addb %al, (%eax);addb %al, (%eax);incl %esp;addb %ah, (%ebx);pushl %eax": 1,
                "movb (%eax), %cl;leal (%eax,%edx), %edi;cmpb (%edi), %cl;jne  <MmIsVerifierEnabled+>;testb %cl, %cl": 1,
                "rep  movsl (%esi), %es:(%edi);jne  <IoOpenDeviceRegistryKey+>;pushl $;calll - <PoRequestPowerIrp+>;cmpb $, -(%ebp)": 1,
                "xorl %edi, %edi;testb $, ;movl %edi, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "leave;retl;movb $, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;nop": 1,
                "pushl %ebx;pushl ;leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp)": 2,
                "jl  <IoOpenDeviceRegistryKey+>;pushl %ebx;leal (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %ebx;leal (%ebp), %eax;pushl %eax;pushl %ebx;pushl ": 6,
                "movl (%ebx), %esi;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);pushl $;addl $, %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;retl;xorb %al, %al": 1,
                "movl %edx, %edi;jmp - <IoGetDeviceProperty+>;movl %edx, (%ebp);jmp - <IoGetDeviceProperty+>;movl (%ebp), %eax": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ebx), %ebx;movl %edi, %ecx": 1,
                "testl %ebx, %ebx;je - <IoGetDeviceProperty+>;jmp  <IoCheckFunctionAccess+>;pushl $;pushl %esi": 1,
                "pushl $;calll *(%ebx);movl %eax, %edx;testl %edx, %edx;je  <RtlxUnicodeStringToOemSize+>": 1,
                "movl %edx, (%ecx);movl %ecx, (%eax);testl %esi, %esi;jmp  <RtlStringFromGUID+>;andl $, -(%ebp)": 1,
                "pushl %esi;calll  <IoOpenDeviceRegistryKey+>;testb %al, %al;jne  <IoOpenDeviceRegistryKey+>;jmp  <IoCheckFunctionAccess+>": 1,
                "testb $, %bl;jne  <IoCheckFunctionAccess+>;orl $-, (%edi);jmp  <IoOpenDeviceRegistryKey+>;pushl $": 1,
                "testl %ebx, %ebx;je  <IoCheckFunctionAccess+>;movl %ebx, ;movw (%ebx), %ax;cmpw $, %ax": 1,
                "movl %edx, -(%ebp);movl (%eax), %edi;movl %edi, %esi;negl %esi;movl %esi, -(%ebp)": 1,
                "negl %esi;movl %esi, -(%ebp);testl %edi, %edi;jge  <IoCheckFunctionAccess+>;movl (%ecx), %edi": 1,
                "testl %edi, %edi;jge  <IoCheckFunctionAccess+>;movl (%ecx), %edi;addl %edx, %esi;cmpl %edi, %esi": 1,
                "je  <IoCheckFunctionAccess+>;orl $-, -(%ebp);calll - <IoOpenDeviceRegistryKey+>;movb $, %al;calll - <_CIsqrt+>": 1,
                "addl $, %ecx;cmpl %eax, %ecx;ja  <LdrFindResource_U+>;cmpw $, (%edi);jne  <IoCheckFunctionAccess+>": 1,
                "calll  <IoOpenDeviceRegistryKey+>;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;pushl (%ebp);pushl %esi": 1,
                "cmpl %eax, %ecx;movl %edi, ;je  <IoCheckFunctionAccess+>;cmpl $, (%edi);ja - <IoOpenDeviceRegistryKey+>": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi;je  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "xorl %ebx, %ebx;movl %eax, (%edi);movl %ebx, (%edi);movb %bl, (%edi);movl %edi, %esi": 1,
                "pushl (%esi);pushl (%ebp);pushl (%ebp);calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%esi), %ecx;cmpl (%eax), %ecx;jb  <IoOpenDeviceRegistryKey+>": 1,
                "je  <IoCheckFunctionAccess+>;andl $, (%esi);movl %eax, (%esi);movl -(%esi), %eax;movl %eax, (%esi)": 1,
                "pushl %ebx;xorl %ebx, %ebx;orl $-, ;movl %eax, ;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;movl %ebx, -(%ebp);movl %ebx, ": 1,
                "pushl %esi;calll - <IoOpenDeviceRegistryKey+>;testb %al, %al;je  <IoCheckFunctionAccess+>;pushl %edi": 1,
                "movl %eax, -(%ebp);jae  <IoOpenDeviceRegistryKey+>;testl %eax, %eax;movl (%esi), %ecx;movl %ecx, -(%ebp)": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl (%ebp), %edi;cmpl $, (%edi)": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ebx), %ecx;addl %edi, %esi;leal (%ebx,%ecx), %eax;cmpl %eax, %esi;jb - <IoOpenDeviceRegistryKey+>": 1,
                "cmpl %eax, %esi;jb - <IoOpenDeviceRegistryKey+>;popl %edi;movb -(%ebp), %al;popl %esi": 1,
                "movw %cx, (%eax);movl %ecx, (%eax);popl %ebp;retl $;nop": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);pushl %edi;jne  <IoCheckFunctionAccess+>;cmpl %ebx, (%ebp)": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, (%esi);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "movl (%esi), %eax;addl $, %eax;pushl %esi;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "movl %eax, ;calll - <ExReleaseFastMutexUnsafe>;movl (%ebp), %eax;movl %esi, (%eax);xorl %eax, %eax": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);xorl %eax, %eax;popl %esi;popl %edi": 1,
                "cmpl $, %eax;je  <IoCheckFunctionAccess+>;cmpl $, %eax;je  <IoCheckFunctionAccess+>;cmpl %edi, %eax": 1,
                "movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);sete %al;movb %al, (%ebx)": 1,
                "notb %al;andb $, %al;movb %al, (%ebp);movl (%ebp), %eax;cmpl %edi, %eax": 1,
                "andb $, %al;movb %al, (%ebp);movl (%ebp), %eax;cmpl %edi, %eax;movl %edi, (%ebx)": 1,
                "movl %eax, %esi;testl %esi, %esi;movl %esi, -(%ebp);je  <IoOpenDeviceRegistryKey+>;pushl (%esi)": 1,
                "calll - <RtlCreateSecurityDescriptor+>;movzwl %ax, %eax;testb $, (%ebx);movl %eax, (%ebp);je  <IoOpenDeviceRegistryKey+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);je  <IoOpenDeviceRegistryKey+>;movw %si, (%ecx);movw %si, (%ecx)": 1,
                "calll - <RtlCompareUnicodeString+>;movl (%ebp), %eax;shrl %ebx;leal (%eax,%ebx,), %ebx;movl -(%ebp), %eax": 1,
                "incl %ebx;testb $, (%eax);je  <IoCheckFunctionAccess+>;movzwl (%eax), %ecx;pushl %ecx": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %al, (%ebp);incl %edi;addb %cl, (%ecx)": 1,
                "incl %edi;addb %cl, (%ecx);pushl %ebx;addb %dl, (%eax,%eax);addb %bl, (%ecx)": 16,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;pushl $;leal -(%ebp), %eax": 5,
                "jne  <RtlUpperString+>;leal -(%ebp), %ecx;pushl %ecx;pushl %edi;pushl %ebx": 1,
                "addl $, -(%ebp);pushl -(%ebp);leal -(%ebp), %eax;pushl %ecx;pushl $": 1,
                "jae  <IoOpenDeviceRegistryKey+>;je  <IoOpenDeviceRegistryKey+>;addb %ch, %gs:(%ebp);popl %esp;addb %ah, (%ebx)": 1,
                "je  <IoOpenDeviceRegistryKey+>;addb %ch, %gs:(%ebp);popl %esp;addb %ah, (%ebx);jne  <IoOpenDeviceRegistryKey+>": 1,
                "jb  <IoOpenDeviceRegistryKey+>;jb  <IoOpenDeviceRegistryKey+>;addb %ch, %gs:(%esi);je  <IoOpenDeviceRegistryKey+>;arpl %ax, (%eax)": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <IoCheckFunctionAccess+>;pushl %edi;movl (%ebx), %edi": 1,
                "pushl %esi;calll *(%esi);testl %eax, %eax;movl %eax, -(%ebp);je  <IoOpenDeviceRegistryKey+>": 1,
                "movl (%eax), %edi;cmpl -(%ebp), %edi;jne - <IoOpenDeviceRegistryKey+>;cmpb $, (%ebp);jne  <IoOpenDeviceRegistryKey+>": 1,
                "movl (%ebp), %esi;cmpl , %esi;movb $, -(%ebp);je  <IoCheckFunctionAccess+>;andl $, ": 1,
                "pushl (%eax);pushl (%ebp);pushl %esi;calll - <IoOpenDeviceRegistryKey+>;movl %edi, (%esi)": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebx), %ecx;shll $, %ecx;movl %eax, %edi;movl %ecx, %eax": 1,
                "movl (%ebx), %ecx;shll $, %ecx;movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "rep  movsb (%esi), %es:(%edi);je - <RtlSubAuthoritySid+>;pushl $;pushl (%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl -(%ebp);pushl %eax;pushl (%ebp);pushl (%ebp);pushl -(%ebp)": 1,
                "testb $, (%esi);jne  <IoCheckFunctionAccess+>;cmpl (%esi), %edi;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "pushl %eax;calll *(%eax);movl (%ebp), %eax;orb $, (%esi);pushl %eax": 1,
                "orl $-, (%esi);movl %eax, (%esi);xorl %eax, %eax;movl %eax, (%esi);movl %eax, (%esi)": 1,
                "movw %ax, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%ebp), %eax;pushl %ebx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movw (%ebp), %ax;movl (%esi), %ecx;movzwl %ax, %edx": 1,
                "shrl $, %eax;movl %eax, (%ebp);cmpl %ecx, (%esi);movl %ebx, (%esi);jne  <IoOpenDeviceRegistryKey+>": 1,
                "movl %ebx, (%esi);jne  <IoOpenDeviceRegistryKey+>;pushl $;leal (%edi), %eax;andl $-, %eax": 1,
                "movl (%ebp), %ecx;cmpl -(%ebp), %ecx;movl %edi, (%eax);movl %esi, (%eax);jne  <IoOpenDeviceRegistryKey+>": 1,
                "movl %esi, (%eax);jne  <IoOpenDeviceRegistryKey+>;movl %esi, %ecx;orl $, %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %edi;cmpb $, (%edi);jne  <IoOpenDeviceRegistryKey+>;pushl -(%ebp);pushl %esi": 1,
                "calll - <IoOpenDeviceRegistryKey+>;testb %al, %al;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;popl %edi": 1,
                "testl %esi, %esi;jl  <IoOpenDeviceRegistryKey+>;cmpl %ebx, (%ebp);jbe  <IoOpenDeviceRegistryKey+>;pushl $": 1,
                "pushl %eax;pushl %ebx;pushl %edi;calll - <ObCheckCreateObjectAccess+>;movl %eax, %esi": 1,
                "calll - <NtQueryInformationToken+>;pushl %ebx;pushl %edi;calll - <RtlInitializeBitMap+>;testl %eax, %eax": 1,
                "decl %eax;pushl %eax;pushl %ebx;calll - <FsRtlNotifyFilterChangeDirectory+>;testb %al, %al": 1,
                "je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;testl %esi, %esi;movl -(%ebp), %ebx": 1,
                "jb - <IoOpenDeviceRegistryKey+>;testl %esi, %esi;jl - <IoOpenDeviceRegistryKey+>;movl -(%ebp), %esi;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "cmpl %ebx, %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %eax, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "movb $, %bl;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;pushl -(%ebp);calll - <ZwClose>": 1,
                "pushl $;pushl $;movl $, %edi;pushl %edi;calll *(%ebx)": 1,
                "pushl %esi;leal (%ebp), %eax;pushl %eax;xorl %edi, %edi;pushl %edi": 1,
                "movl (%esi), %eax;cmpl $, %eax;ja  <IoOpenDeviceRegistryKey+>;cmpl %edi, %eax;je  <IoOpenDeviceRegistryKey+>": 1,
                "popl %ebp;retl $;pushl $;popl %eax;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "je  <IoCheckFunctionAccess+>;cmpl %ebx, (%ebp);jne  <PsSetLegoNotifyRoutine+>;cmpl %ebx, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %eax;movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp);movl %eax, -(%ebp)": 5,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <_wcsnicmp>;addl $, %esp": 1,
                "pushl (%ebp);sbbl %esi, %esi;pushl (%ebp);andl $-, %esi;addl $, %esi": 1,
                "pushl (%ebp);calll - <ZwCreateFile>;cmpl $, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "jl  <IoInitializeCrashDump+>;movl (%ebp), %eax;movl -(%ebp), %ecx;pushl %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl %ebx;pushl -(%ebp);calll - <KeWaitForSingleObject>;cmpl %ebx, -(%ebp)": 1,
                "calll - <ZwClose>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "xorl %eax, %eax;movb (%edi), %al;pushl %ebx;pushl %eax;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 8,
                "cmpb %bl, (%eax);jne  <IoOpenDeviceRegistryKey+>;calll - <FsRtlInitializeOplock+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "movzwl (%edi), %eax;pushl $;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 2,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl (%esi), %ecx;movl %eax, (%ecx);movl (%esi), %eax": 2,
                "movl (%ebp), %esi;movw %cx, (%eax);movl (%esi), %esi;movl (%esi), %eax;testb $, (%eax)": 1,
                "nop;addb %cl, %cs:(%eax,%eax);addb %al, (%edi);addb %al, (%eax);int": 1,
                "movl %esi, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);pushl %edi;pushl (%esi)": 1,
                "movl %eax, (%ebx);pushl %edi;pushl (%esi);pushl %ebx;calll - <IoGetDeviceProperty+>": 1,
                "testl %edi, %edi;jl  <IoOpenDeviceRegistryKey+>;pushl (%esi);pushl (%ebx);calll - <IoOpenDeviceRegistryKey+>": 1,
                "shrl %eax;leal (%eax,%eax), %esi;pushl $;leal (%esi), %eax;pushl %eax": 1,
                "movl %eax, (%edx);je  <IoOpenDeviceRegistryKey+>;movl %eax, %edi;movl %esi, %ecx;movl (%ebx), %esi": 1,
                "movl (%edx), %eax;movl (%ebp), %ecx;andw $, (%eax,%ecx);movw (%ebx), %ax;movw %ax, (%edx)": 1,
                "andw $, (%eax,%ecx);movw (%ebx), %ax;movw %ax, (%edx);movw (%ebx), %ax;addw $, %ax": 1,
                "addw $, %ax;movw %ax, (%edx);movl $, %ecx;calll - <ExReleaseFastMutexUnsafe>;movl $, %ecx": 1,
                "pushl %eax;pushl $;calll - <ExfAcquirePushLockExclusive+>;testl %eax, %eax;jge  <IoCheckFunctionAccess+>": 1,
                "retl $;decl %ebp;addb %dl, (%ebp);decl %ecx;addb %cl, (%eax,%eax)": 1,
                "subl $, %esp;movl , %eax;pushl %edi;movl (%ebp), %edi;testl $, %edi": 1,
                "pushl %esi;movl $, -(%ebp);movl %ecx, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwQueryValueKey>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "jl  <IoOpenDeviceRegistryKey+>;cmpb %bl, (%ebp);je  <IoOpenDeviceRegistryKey+>;pushl %edi;calll - <IoOpenDeviceRegistryKey+>": 1,
                "movl %esi, %eax;popl %esi;popl %ebx;movl -(%ebp), %ecx;popl %edi": 1,
                "addb %ah, -(%esi);clc;incl %ecx;jae  <IoCheckFunctionAccess+>;cmpw $, %ax": 1,
                "cmpw $, %ax;jb - <IoOpenDeviceRegistryKey+>;jmp  <IoCheckFunctionAccess+>;movl %edi, ;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "movl (%ecx), %edx;movl %edx, -(%ebp);movl (%ecx), %esi;movl %esi, -(%ebp);movl %edx, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;movzwl %dx, %ecx;movl -(%ebp), %esi;addl %esi, %ecx;movl %ecx, -(%ebp)": 1,
                "leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;movw %dx, (%ebx)": 1,
                "movb (%eax), %bl;movb %bl, -(%ebp);pushl -(%ebp);pushl ;pushl ": 6,
                "calll - <IoOpenDeviceRegistryKey+>;movl %eax, %esi;cmpl %edi, %esi;jl  <IoCheckFunctionAccess+>;movl %edi, -(%ebp)": 1,
                "ja  <IoOpenDeviceRegistryKey+>;leal -(%ebp), %eax;movl %eax, -(%ebp);andl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);andl $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movzwl %ax, %esi": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;calll  <ExRaiseAccessViolation>;jmp - <IoOpenDeviceRegistryKey+>;movl %fs:, %eax;incl (%eax)": 1,
                "calll - <IoOpenDeviceRegistryKey+>;popl %ebp;retl $;nop;nop": 1,
                "pushl %edi;pushl (%ebp);movl (%eax), %edi;pushl (%ebp);pushl (%ebp)": 1,
                "popl %ebp;retl $;cmpl $, (%ebp);je - <IoOpenDeviceRegistryKey+>;jmp  <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %ecx;pushl %ecx;xorl %ebx, %ebx;pushl %ebx;leal -(%ebp), %ecx": 1,
                "pushl %ebx;pushl %ebx;pushl ;pushl %esi;calll - <ObOpenObjectByName>": 2,
                "testb $, (%ebp);jne  <IoCheckFunctionAccess+>;pushl (%esi);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl ;pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;cmpl %edi, %eax": 2,
                "subl %eax, %edi;je  <IoOpenDeviceRegistryKey+>;leal (%edi), %eax;movl (%eax), %esi;movl %eax, -(%ebp)": 1,
                "pushl $;leal (%esi,%eax), %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;testl %edi, %edi": 2,
                "incl (%esi);movl %edi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 1,
                "movl %eax, -(%ebp);jl  <IoOpenDeviceRegistryKey+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);jl  <IoOpenDeviceRegistryKey+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "decl (%eax);pushl $;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;xorl %eax, %eax": 1,
                "movl (%esi), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl (%esi), %eax;cmpl $, %eax": 1,
                "jae  <IoOpenDeviceRegistryKey+>;popl %esp;addb %ah, ;addb %bh, (%eax);subl $, %eax": 1,
                "addb %ch, (%eax,%eax);addb %ah, (%edx);popal;addb %ch, (%eax,%eax);addb %bh, (%edi)": 1,
                "addb %ch, (%eax,%eax);addb %bh, (%edi);addb %al, (%eax);addb %cl, %ah;int": 1,
                "pushl -(%ebp);calll - <MmProbeAndLockPages>;orl $-, -(%ebp);jmp - <PsLookupProcessByProcessId+>;pushl (%ebp)": 1,
                "movl (%eax), %eax;jmp - <SeCreateClientSecurity+>;pushl $;leal -(%ebx,%ebx,), %eax;leal (,%eax,), %eax": 1,
                "leal -(%ebx,%ebx,), %eax;leal (,%eax,), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "leal (,%eax,), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax": 6,
                "leal (%eax,%eax,), %eax;shll $, %eax;movl %edi, (%esi,%eax);movl , %edi;movl %edi, (%esi,%eax)": 1,
                "pushl %esi;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $": 2,
                "movl $, %esi;jmp - <IoOpenDeviceRegistryKey+>;testb $, %al;jne  <IoCheckFunctionAccess+>;movl , %ecx": 1,
                "movl %edi, %ecx;shrl $, %ecx;andl $, %ecx;movl , %edx;leal (%edx,%ecx,), %ecx": 1,
                "pushl %eax;addl $, %ebx;pushl %ebx;calll - <NtAdjustPrivilegesToken+>;movl %eax, %edi": 1,
                "pushl $;pushl $;popl %edx;calll - <IoGetDriverObjectExtension+>;pushl %ebx": 1,
                "movl -(%ebp), %eax;jmp  <IoOpenDeviceRegistryKey+>;jmp - <PsSetProcessWindowStation+>;movl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "pushl -(%edi);calll - <_allmul>;movl %eax, -(%ebp);movl %edx, -(%ebp);xorl %eax, %eax": 1,
                "calll *;pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "jmp  <IoOpenDeviceRegistryKey+>;leal (%edi), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movb $, -(%ebp)": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne  <IoOpenDeviceRegistryKey+>;decl (%edi);movl (%ecx), %ecx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);calll - <ExSystemExceptionFilter>;retl;nop": 60,
                "movb $, %cl;calll *;jmp  <IoOpenDeviceRegistryKey+>;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "andl $, -(%ebp);decl (%esi);pushl $;leal (%ebx), %eax;pushl %eax": 1,
                "je  <IoOpenDeviceRegistryKey+>;xorl %eax, %eax;movl %eax, -(%ebp);movl (%edi), %edx;testl %edx, %edx": 1,
                "testl %edx, %edx;jbe  <IoOpenDeviceRegistryKey+>;leal (%edx), %eax;movl %eax, -(%ebp);movl (%edi), %ecx": 1,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);testl %edx, %edx": 1,
                "movl %ecx, %eax;movl %eax, -(%ebp);addl $, %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "addl $, -(%ebp);movl %eax, -(%ebp);movl (%edi), %ecx;movl %ecx, (%eax);movl (%edi), %ecx": 1,
                "je  <IoOpenDeviceRegistryKey+>;movb $, (%esi);movb $, %cl;calll *;movb $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jl  <IoOpenDeviceRegistryKey+>;movl $, -(%ebp);pushl $;popl %ecx": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ebx;jmp  <IoOpenDeviceRegistryKey+>;movl $, %esi;movl %esi, %ecx": 1,
                "calll *;leal -(%ebp), %eax;jmp  <IoOpenDeviceRegistryKey+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movzbl (%ebx), %eax": 1,
                "testl %eax, %eax;je  <IoOpenDeviceRegistryKey+>;movl -(%ebp), %ecx;movl %ecx, (%eax);orl $-, -(%ebp)": 1,
                "movl %esp, %ebp;pushl $;pushl (%ebp);calll - <PoRequestPowerIrp+>;popl %ebp": 1,
                "jmp - <RtlCopyLuid+>;xorl %esi, %esi;cmpl %esi, (%ebp);ja  <IoCheckFunctionAccess+>;jmp - <RtlCopyLuid+>": 1,
                "jmp - <RtlCopyLuid+>;movl -(%ebp), %eax;cmpl %eax, -(%ebp);jbe  <IoOpenDeviceRegistryKey+>;movl $, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;addl $, -(%ebp);jmp  <IoOpenDeviceRegistryKey+>;nop;nop": 1,
                "jne  <IoCheckFunctionAccess+>;testb $, (%ebp);je  <IoCheckFunctionAccess+>;movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %eax, %ecx;ja  <IoCheckFunctionAccess+>;subl %ecx, %eax;cmpl %edi, %eax;jb  <IoCheckFunctionAccess+>": 1,
                "jb  <IoCheckFunctionAccess+>;cmpl %ebx, %edi;je  <IoCheckFunctionAccess+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;leal (%ebx), %eax;cmpl (%esi), %eax;ja  <IoCheckFunctionAccess+>;leal (%esi), %ecx": 1,
                "movl (%eax), %eax;subl -(%ebp), %eax;leal (%eax,%ebx), %eax;cmpl %eax, (%esi);jb  <IoCheckFunctionAccess+>": 1,
                "cmpl %edi, %ecx;ja  <IoOpenDeviceRegistryKey+>;movl (%ecx), %edx;addl $, %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %ebx;pushl -(%ebp);calll - <PsIsThreadTerminating+>;cmpl $, -(%ebp);jne - <IoOpenDeviceRegistryKey+>": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %edi;pushl $;leal -(%ebp), %eax": 2,
                "pushl %esi;pushl $;pushl %eax;pushl -(%ebp);calll - <NtFreeVirtualMemory+>": 8,
                "pushl -(%ebp);calll - <NtFreeVirtualMemory+>;pushl -(%ebp);movl %eax, %ebx;calll - <NtClose>": 1,
                "pushl %edi;pushl %esi;calll - <ExFreePoolWithTag>;popl %esi;popl %edi": 1,
                "cmpl %edi, %esi;je  <IoCheckFunctionAccess+>;cmpl %edi, (%ebp);pushl %ebx;movl (%ebp), %ebx": 1,
                "je - <IoOpenDeviceRegistryKey+>;addl $, (%ebp);incl (%ebp);movl (%ebp), %ecx;cmpl (%ebp), %ecx": 1,
                "popl %esi;popl %ebx;leave;retl $;movl (%ebx), %eax": 2,
                "jmp - <IoOpenDeviceRegistryKey+>;incl -(%ebp);addl $, %edx;movl %edx, -(%ebp);movl -(%ebp), %edx": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %ecx": 1,
                "pushl %esi;pushl %edi;leal (%ebx), %esi;pushl %esi;movl %esi, -(%ebp)": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;movl %eax, (%ebx);xorl %eax, %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movl (%esi), %eax;leal (%ebx), %edi;pushl %edi;movl %eax, (%ebx)": 1,
                "addl %eax, %edi;movl (%esi), %eax;cmpl (%ebp), %eax;ja  <IoOpenDeviceRegistryKey+>;movl (%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl %edi;pushl -(%ebp);pushl (%esi)": 1,
                "pushl (%esi);pushl (%esi);calll - <RtlCompareUnicodeString+>;movl %eax, (%ebp);movl (%esi), %eax": 1,
                "addl %eax, %ecx;movl %ecx, (%ebx);movl (%edx), %esi;movl (%edx), %ecx;subl (%edx), %esi": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %ebx, (%eax);movl (%ebp), %eax;popl %edi": 1,
                "orl $-, -(%ebp);cmpl %esi, %edi;jl  <IoOpenDeviceRegistryKey+>;xorl %ecx, %ecx;cmpl %esi, -(%ebp)": 1,
                "movl %eax, %edi;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %esi, %edi;jl  <IoOpenDeviceRegistryKey+>": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <IoOpenDeviceRegistryKey+>;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "addl %ecx, %edi;movl %esi, %ebx;andl $, %ebx;movl (,%ebx,), %ebx;addl %esi, %ebx": 1,
                "movl (,%ebx,), %ebx;addl %esi, %ebx;xorl %ebx, %edi;subl %edi, %edx;decl -(%ebp)": 1,
                "jns - <IoOpenDeviceRegistryKey+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <ZwClose>;incl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "testl %ebx, %ebx;je - <RtlUpcaseUnicodeStringToOemString+>;cmpl $, %ebx;sbbl %eax, %eax;andl $-, %eax": 1,
                "je  <IoOpenDeviceRegistryKey+>;pushl %ebx;pushl %esi;pushl $;pushl $": 2,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax;andl $, %ecx;addl $-, %eax": 2,
                "andl $, %ecx;addl $-, %eax;rep  movsb (%esi), %es:(%edi);movw %ax, (%ebx);jmp - <IoGetDeviceProperty+>": 1,
                "pushl %edx;pushl (%ebp);pushl %eax;pushl (%ebp);calll  <RtlValidSecurityDescriptor+>": 1,
                "leave;retl $;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl %ebx, (%eax)": 1,
                "calll - <SeSinglePrivilegeCheck>;testb %al, %al;je  <IoCheckFunctionAccess+>;pushl $;leal -(%ebp), %eax": 3,
                "andl $, %esi;movl -(%ebp), %ecx;jmp - <RtlSubAuthoritySid+>;nop;nop": 1,
                "pushl %ebp;movl %esp, %ebp;xorl %eax, %eax;testb $, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "pushl %edi;movl (%ebp), %edi;xorl %edx, %edx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "cmpb $, ;jne  <IoCheckFunctionAccess+>;movl %esi, %ecx;movl , %esi;calll *%esi": 2,
                "pushl %edi;pushl %eax;calll - <IoGetDeviceInterfaces>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "shrl %eax;leal (%esi,%eax,), %esi;jmp - <IoRegisterPlugPlayNotification+>;decl %eax;jne  <IoRegisterPlugPlayNotification+>": 1,
                "calll - <PsGetJobUIRestrictionsClass+>;testl %eax, %eax;jne - <RtlSetGroupSecurityDescriptor+>;andl $, (%edi);movl -(%ebp), %eax": 1,
                "andl $, (%edi);movl -(%ebp), %eax;movl (%eax), %eax;movl $, %esi;movl %esi, %ecx": 1,
                "jne  <IoCreateController+>;movl %esi, %ecx;movl , %esi;calll *%esi;movl %ebx, %ecx": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp);je  <IoRegisterBootDriverReinitialization+>;movzwl (%edi), %ecx": 1,
                "incl -(%ebp);cmpl $, -(%ebp);je - <IoOpenDeviceRegistryKey+>;movw %cx, (%edx);incl %edx": 1,
                "jmp - <IoRegisterPlugPlayNotification+>;jmp - <IoOpenDeviceRegistryKey+>;cmpw %di, %cx;je - <IoOpenDeviceRegistryKey+>;cmpw $, %cx": 1,
                "testw %cx, %cx;je  <IoRegisterPlugPlayNotification+>;jmp - <IoRegisterPlugPlayNotification+>;jmp  <IoRegisterPlugPlayNotification+>;incl %eax": 1,
                "incl %eax;incl %eax;jmp  <IoRegisterPlugPlayNotification+>;movw %cx, (%edx);incl %edx": 1,
                "jmp - <IoRegisterPlugPlayNotification+>;jmp - <IoOpenDeviceRegistryKey+>;xorl %edi, %edi;incl %edi;cmpl %edi, (%esi)": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;xorl %edi, %edi;incl %edi;cmpl %edi, (%esi);jne - <IoOpenDeviceRegistryKey+>": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax;movl %eax, (%ebp);je  <IoRegisterBootDriverReinitialization+>;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %esi;pushl $": 1,
                "pushl %esi;pushl $;pushl %edi;pushl %ebx;calll - <RtlQueryRegistryValues+>": 1,
                "jge - <IoOpenDeviceRegistryKey+>;pushl %esi;pushl (%ebp);calll - <ExFreePoolWithTag>;movl %esi, (%ebp)": 1,
                "pushl $;pushl $;jmp  <IoRegisterPlugPlayNotification+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;jmp  <IoRegisterPlugPlayNotification+>;leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "addb %dh, (%edx);insl %dx, %es:(%edi);addb %ah, (%ecx);je  <IoRegisterPlugPlayNotification+>;imull $, (%eax), %eax": 2,
                "int;int;int;movl (%ebp), %edi;jmp  <IoQueryDeviceDescription+>": 1,
                "movl (%ebp), %eax;orl $-, -(%ebp);testl %eax, %eax;je  <IoCheckFunctionAccess+>;andw $, -(%ebp)": 1,
                "calll - <RtlAppendUnicodeStringToString>;pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "leal (%ebp), %eax;pushl %eax;calll - <FsRtlOplockFsctrl+>;movl %eax, %esi;testl %esi, %esi": 1,
                "andl $, (%eax);andl $, (%eax);pushl %esi;pushl %edi;pushl %eax": 1,
                "pushl %edi;pushl %eax;pushl $;pushl (%ebp);leal (%eax), %esi": 1,
                "calll - <NtFindAtom+>;testl %eax, %eax;jl  <IoQueryDeviceDescription+>;xorl %eax, %eax;popl %edi": 1,
                "decl %ebp;addb %bh, (%esi,%ebp,);decl %ebp;addb %dl, (%esi,%ebp,);decl %ebp": 1,
                "lodsl (%esi), %eax;decl %ebp;addb %ch, -(%eax);decl %ebp;addb %bh, -(,%ebp,)": 1,
                "addb %dh, -(%esp,%ebp,);decl %ebp;addb %ch, -(%eax);decl %ebp;addb %al, -(%eax)": 1,
                "addb %al, -(%eax);decl %ebp;addb %ah, (%eax);lodsb (%esi), %al;decl %ebp": 1,
                "decl %ebp;addb %cl, (%ebx,%ecx,);addb %ah, %gs:(%ecx);insb %dx, %es:(%edi);addb %cl, (%ebp)": 1,
                "nop;pushl %ebx;addb %bh, (%ecx);jae  <IoQueryDeviceDescription+>;je  <IoQueryDeviceDescription+>": 1,
                "insl %dx, %es:(%edi);addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx);insb %dx, %es:(%edi)": 2,
                "jb  <IoQueryDeviceDescription+>;pushl %eax;addb %ah, (%ebp);jb  <IoQueryDeviceDescription+>;imull $, (%eax), %eax": 1,
                "addb %ah, (%eax,%eax);addb %ch, (%ebp);pushl %eax;addb %ah, (%ebp);jb  <IoQueryDeviceDescription+>": 1,
                "addb %dh, %gs:(%edx);popal;addb %ch, (%eax,%eax);addb %dl, (%eax);addb %ch, (%edi)": 1,
                "jns  <IoQueryDeviceDescription+>;incl %esp;addb %ch, (%ecx);jae  <IoQueryDeviceDescription+>;imull $, (%eax), %eax": 1,
                "jae  <IoQueryDeviceDescription+>;imull $, (%eax), %eax;addb %ah, (%ebp);jb  <IoQueryDeviceDescription+>;imull $, (%eax), %eax": 1,
                "addb %ch, (%eax,%eax);addb %dl, (%eax);addb %ch, (%eax);addb %dh, %gs:(%edx);incl %ebx": 1,
                "incl %ecx;addb %dh, (%ebp);addb %ch, %fs:(%ecx);outsl (%esi), %dx;addb %al, (%ebx)": 1,
                "addb %al, (%eax);decl %ebx;addb %ah, (%ebp);jns  <IoQueryDeviceDescription+>;bound (%eax), %eax": 1,
                "nop;incl %ebx;addb %ah, (%eax,%eax);addb %ch, (%edi);insl %dx, %es:(%edi)": 1,
                "addb %dh, (%edx);addb %al, (%eax);nop;nop;decl %ebp": 1,
                "je  <IoQueryDeviceDescription+>;imull $, (%eax), %eax;incl %ecx;addb %ah, (%eax,%eax);addb %dh, (%eax)": 1,
                "addb %al, (%eax);pushl %esp;addb %ah, (%ebx);incl %ecx;addb %ah, (%eax,%eax)": 1,
                "jo  <IoQueryDeviceDescription+>;je  <IoQueryDeviceDescription+>;addb %dh, %gs:(%edx);addb %al, (%eax);pushl %ebx": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);addb %ah, %fs:(%ecx);jb  <IoQueryDeviceDescription+>;jns  <IoQueryDeviceDescription+>": 3,
                "jb  <IoQueryDeviceDescription+>;imull $, (%eax), %eax;jb  <IoQueryDeviceDescription+>;jns  <IoQueryDeviceDescription+>;incl %esp": 1,
                "imull $, (%eax), %eax;jb  <IoQueryDeviceDescription+>;jns  <IoQueryDeviceDescription+>;incl %esp;addb %al, (%ebx)": 1,
                "cmpl $, %eax;je  <IoQueryDeviceDescription+>;cmpl $, %eax;jne  <IoQueryDeviceDescription+>;pushl %esi": 1,
                "je  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);movl %ebx, -(%ebp);jl  <IoQueryDeviceDescription+>;pushl %esi": 1,
                "jl  <IoQueryDeviceDescription+>;cmpb %bl, (%ebp);je  <IoQueryDeviceDescription+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "calll - <wcsncmp>;addl $, %esp;testl %eax, %eax;je - <IoRegisterPlugPlayNotification+>;movl -(%ebp), %eax": 2,
                "pushl %eax;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll - <FsRtlOplockFsctrl+>": 1,
                "pushl -(%ebp);calll - <IoQueryDeviceDescription+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <IoQueryDeviceDescription+>": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl %ebx, -(%ebp);movl (%esi), %eax": 1,
                "pushl %esi;calll  <IoQueryDeviceDescription+>;movl %eax, -(%ebp);jmp - <IoQueryDeviceDescription+>;movl -(%ebp), %eax": 1,
                "calll  <IoQueryDeviceDescription+>;movl %eax, -(%ebp);jmp - <IoQueryDeviceDescription+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp - <IoQueryDeviceDescription+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jae  <IoQueryDeviceDescription+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>;movl %eax, %ebx;cmpl %edi, %ebx": 2,
                "calll - <RtlAppendUnicodeStringToString>;movl %eax, %ebx;cmpl %edi, %ebx;jl  <IoQueryDeviceDescription+>;pushl %edi": 2,
                "movl (%eax), %eax;pushl (,%eax,);leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeToString>": 2,
                "jl  <IoQueryDeviceDescription+>;movl (%esi), %eax;cmpl %edi, %eax;jne  <IoDisconnectInterrupt+>;pushl %edi": 2,
                "movl %edi, -(%ebp);calll - <ExFreePoolWithTag>;movl %edi, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl %edi, -(%ebp);cmpl %edi, -(%ebp);je  <IoQueryDeviceDescription+>": 3,
                "retl $;popl %esp;addb %al, (%eax);addb %cl, -(%ebp);jne - <IoQueryDeviceDescription+>": 1,
                "pushl %ebx;pushl %ebx;pushl ;calll - <ZwWaitForSingleObject>;testl %eax, %eax": 1,
                "testl %eax, %eax;jl  <IoQueryDeviceDescription+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "calll - <ZwOpenProcess>;testl %eax, %eax;jl  <IoQueryDeviceDescription+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jl  <IoQueryDeviceDescription+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl $": 1,
                "movl %ebx, ;movb -(%ebp), %al;popl %edi;popl %esi;popl %ebx": 1,
                "je  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>;nop;popl %esp;addb %dl, (%ebx)": 1,
                "jmp  <IoCheckFunctionAccess+>;nop;popl %esp;addb %dl, (%ebx);addb %cl, %gs:(%eax,%eax)": 1,
                "incl %ebx;addb %ch, (%edi);insl %dx, %es:(%edi);addb %ch, (%ebp);popal": 1,
                "addb %ch, (%ebp);popal;addb %ch, (%esi);addb %dl, %fs:(%eax);outsl (%esi), %dx": 1,
                "jne  <IoCheckFunctionAccess+>;jmp - <RtlSetOwnerSecurityDescriptor+>;movl $, (%ebp);jmp - <RtlSetOwnerSecurityDescriptor+>;movl (%ebp), %ecx": 1,
                "movl $, (%ebp);jmp - <RtlSetOwnerSecurityDescriptor+>;movl (%ebp), %ecx;cmpl %eax, %ecx;jne  <IoCheckFunctionAccess+>": 1,
                "decl %eax;je  <MmAllocateMappingAddress+>;decl %eax;jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %edx": 1,
                "popl %ebp;retl $;pushl %edi;leal (%esi), %eax;pushl %eax": 1,
                "movl (%esi), %esi;cmpl %ebx, %esi;movl %esi, -(%ebp);je  <RtlPrefixString+>;movl -(%ebp), %esi": 1,
                "movl %eax, %ecx;leal -(%ebp), %eax;pushl %eax;pushl $;andl $, %ecx": 1,
                "movl %eax, -(%ebp);pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <MmPrefetchPages+>": 1,
                "pushl $;leal -(%ebp), %eax;pushl $;xorl %esi, %esi;pushl %eax": 1,
                "pushl ;xorl %edi, %edi;incl %edi;pushl %edi;leal -(%ebp), %eax": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;movw %si, -(%ebp);movl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;pushl -(%ebp);calll  <RtlUpperString+>": 1,
                "pushl $;popl %edi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "incl %eax;movl %eax, (%ecx);jne  <RtlPrefixString+>;movl %fs:, %eax;movl %eax, %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <MmPrefetchPages+>;movl -(%ebp), %edx;movl -(%ebp), %ebx": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll - <MmPrefetchPages+>;testl %eax, %eax": 1,
                "pushl %eax;calll - <MmPrefetchPages+>;testl %eax, %eax;jl  <RtlPrefixString+>;movl -(%ebp), %edi": 1,
                "movl %eax, -(%esi);movl -(%ebp), %eax;addl %eax, -(%ebp);incl -(%ebp);addl $, %esi": 1,
                "cmpl -(%ebp), %ebx;je  <IoDisconnectInterrupt+>;cmpl -(%ebp), %ebx;je  <IoOpenDeviceInterfaceRegistryKey+>;incl %ebx": 1,
                "cmpl %esi, -(%ebp);je  <RtlPrefixString+>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "outsl (%esi), %dx;addb %cl, (%ecx);outsb (%esi), %dx;addb %ch, (%ecx);je  <RtlPrefixString+>": 2,
                "addl $, %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>": 2,
                "incl %eax;pushl $;incl %eax;pushl %eax;pushl $": 7,
                "andl $, %eax;addl $, %eax;popl %esi;popl %ebp;retl $": 1,
                "subl $, %esp;movl , %eax;pushl %ebx;movl (%ebp), %ebx;xorl %ecx, %ecx": 1,
                "je  <RtlGUIDFromString+>;orl (%eax), %esi;movl (%eax), %eax;jmp - <RtlPrefixString+>;pushl $": 1,
                "subl $, %esp;movl (%ebp), %edx;pushl %ebx;movl %eax, %ebx;movw (%edx), %ax": 1,
                "jb  <RtlPrefixString+>;cmpw $, %ax;ja  <RtlPrefixString+>;movzwl %ax, %eax;leal (%esi,%esi,), %ecx": 1,
                "jne - <RtlPrefixString+>;addl %edi, %edx;movl %edx, (%ebp);xorl %eax, %eax;testl %esi, %esi": 1,
                "ja  <IoForwardIrpSynchronously+>;movzwl %cx, %ecx;leal -(%eax,%ecx), %eax;jmp - <RtlPrefixString+>;cmpb %dl, (%ebp)": 1,
                "movl (%ebp), %esi;movl , %eax;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "leal (%esi), %ecx;pushl %ecx;movzwl (%eax), %ecx;movl (%eax), %eax;pushl %esi": 1,
                "movb %cl, (%esi,%eax);incl %eax;cmpl $, %eax;jb - <RtlGUIDFromString+>;xorl %eax, %eax": 1,
                "movzwl -(%ebp), %edx;addl $, -(%ebp);cmpl -(%ebp), %edx;movl -(%ebp), %ebx;jb - <RtlGUIDFromString+>": 1,
                "addl %ecx, %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "je  <RtlGUIDFromString+>;cmpb $, -(%ebp);jne  <IoIsWdmVersionAvailable+>;movw %dx, (%edi);movw %dx, (%edi)": 1,
                "movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl (%ebp), %eax;pushl (%eax)": 1,
                "movl -(%ebp), %eax;pushl -(%ebp,%eax,);calll - <NtFindAtom+>;movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "calll - <RtlGUIDFromString+>;cmpb $, -(%ebp);movb %al, -(%ebp);jne  <RtlGUIDFromString+>;andl $, -(%ebp)": 1,
                "pushl %eax;andl $, %esi;movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "popal;addb %dh, (%edx);popal;addb %ah, (%ebx);je  <RtlGUIDFromString+>": 1,
                "jne  <IoReportResourceUsage+>;testl %ebx, %ebx;jne  <IoReportResourceUsage+>;cmpl $, -(%ebp);popl %edi": 1,
                "je  <IoReportResourceForDetection+>;movw %ax, (%ecx);incl %edx;incl %edx;incl %ecx": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jl  <RtlGUIDFromString+>;pushl %edi;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <NtFindAtom+>;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>": 1,
                "movl $, -(%ebp);calll - <NtFindAtom+>;cmpl %edi, %eax;movl %eax, -(%ebp);jl  <RtlGUIDFromString+>": 1,
                "jl  <RtlGUIDFromString+>;pushl %edi;pushl (%ebp);pushl (%ebp);pushl -(%ebp)": 1,
                "pushl %edi;pushl (%ebp);pushl (%ebp);pushl -(%ebp);pushl %edi": 1,
                "pushl (%ebp);pushl (%ebp);pushl -(%ebp);pushl %edi;pushl (%ebp)": 1,
                "movl %eax, -(%ebp);jl  <IoSynchronousInvalidateDeviceRelations+>;movl (%ebp), %eax;cmpl %edi, %eax;je  <IoSynchronousInvalidateDeviceRelations+>": 1,
                "popl %esi;popl %ebx;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;popl %edi": 1,
                "je  <RtlGUIDFromString+>;addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);jne  <RtlGUIDFromString+>": 1,
                "addb %dh, %gs:(%ebx);addb %al, (%eax);int;int;int": 5,
                "int;int;int;int;pushl (%esi)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl (%esi);calll - <RtlPrefixString+>;movl (%esi), %eax": 1,
                "calll  <RtlGUIDFromString+>;testl %eax, %eax;jge  <IoRegisterBootDriverReinitialization+>;orl $-, (%ebx);movl $, (%edi)": 1,
                "incl -(%ebp);jmp - <RtlGUIDFromString+>;negb %bl;sbbl %ebx, %ebx;andl -(%ebp), %ebx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movw $, -(%ebp)": 1,
                "andb %al, (%eax);pushl %eax;addb %ah, (%ecx);jb  <RtlGUIDFromString+>;popal": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %esi;je  <IoInitializeRemoveLockEx+>;cmpl $, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "popl %ebx;popl %ebp;retl $;leal -(%ecx), %edi;jmp  <IoInitializeRemoveLockEx+>": 1,
                "jl  <IoCheckFunctionAccess+>;jle  <IoReportResourceUsage+>;leal (%ecx), %edx;movl %edx, -(%ebp);cmpl -(%ebp), %edi": 1,
                "jbe  <IoReportResourceUsage+>;movl -(%ebp), %ecx;addl %eax, %ecx;cmpl %ecx, %esi;jb  <IoCheckFunctionAccess+>": 1,
                "pushl %esi;movl (%ebp), %esi;pushl $;pushl (%esi);calll - <IoInitializeRemoveLockEx+>": 1,
                "leave;retl $;nop;incl %esp;insb %dx, %es:(%edi)": 1,
                "shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;leal -(%ebp), %eax;pushl %eax": 5,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 4,
                "cmpl %ebx, %esi;jl  <IoCheckFunctionAccess+>;pushl $;pushl -(%ebp);movl $, -(%ebp)": 1,
                "calll - <IoInitializeRemoveLockEx+>;movl %eax, %esi;cmpl %ebx, %esi;jge - <RtlSubAuthoritySid+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;testl %eax, %eax;je - <MmPrefetchPages+>": 1,
                "movl %ecx, (%eax);movl (%ebp), %eax;testl %eax, %eax;je - <MmPrefetchPages+>;cmpl $-, -(%ebp)": 1,
                "cmpl %ecx, (%eax);jb  <IoCheckFunctionAccess+>;jne - <MmPrefetchPages+>;jmp  <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "pushl %ebp;addb %cl, (%ecx);decl %esi;addb %dh, (%ebp);insl %dx, %es:(%edi)": 3,
                "addb %al, (%eax);addb %al, (%eax);testb %dl, %dl;je  <IoInitializeRemoveLockEx+>;movl -(%ebp), %edx": 1,
                "testb %dl, %dl;je  <IoInitializeRemoveLockEx+>;movl -(%ebp), %edx;movb (%edx), %bl;movb %bl, %dl": 1,
                "movl (%ebx), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %ecx;leal (%eax,%ecx,), %eax": 1,
                "testl %edi, %edi;je  <IoCheckFunctionAccess+>;pushl %esi;movl (%ebp), %esi;movl %esi, %ecx": 1,
                "movl %esi, %ecx;movl %esi, (%edi);calll - <ObfReferenceObject>;movl %edi, %edx;movl $, %ecx": 1,
                "popl %ebp;retl $;movl $, %ecx;jmp - <IoRegisterFileSystem+>;movl $, -(%ebp)": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);jne  <PsSetLegoNotifyRoutine+>;movl $, (%eax)": 1,
                "cmpl %ecx, %edx;jne  <PsSetLegoNotifyRoutine+>;movl $, (%eax);movl %ecx, (%eax);movl %ecx, (%eax)": 1,
                "movl %edi, (%eax);movb $, (%eax);movb $, (%eax);xorl %edi, %edi;movl $, (%esi)": 1,
                "incl %edi;pushl %esi;movb %cl, (%eax);movl %edi, (%eax);calll - <IoQueueThreadIrp>": 1,
                "movl %eax, %esi;cmpl $, %esi;jne  <ExInitializePagedLookasideList+>;pushl %ebx;pushl %ebx": 1,
                "cmpl $, %esi;jne  <ExInitializePagedLookasideList+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "jl  <ExInitializePagedLookasideList+>;pushl $;leal -(%ebp), %eax;pushl %eax;movb $, ": 1,
                "popl %esi;movw %cx, (%eax);movw %cx, (%eax);movw %cx, (%eax);movw %cx, (%eax)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $;movl %eax, -(%ebp)": 2,
                "movl %eax, %ebx;testl %ebx, %ebx;jl  <IoCreateController+>;testb $, (%ebp);movl (%edi), %eax": 1,
                "jne  <ExInitializePagedLookasideList+>;andl $-, (%esi);movl (%ebp), %eax;testb $, %al;jne  <ExInitializePagedLookasideList+>": 1,
                "testb $, %al;jne  <IoCheckFunctionAccess+>;movl %ebx, %eax;popl %esi;popl %edi": 1,
                "incl %eax;jmp - <RtlGUIDFromString+>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "calll - <ExFreePoolWithTag>;jmp  <RtlCheckRegistryKey+>;cmpl $, %edi;jne  <RtlCheckRegistryKey+>;xorl %edi, %edi": 1,
                "jmp  <FsRtlBalanceReads+>;movl (%esi), %ecx;testb $, %cl;jne - <ExInitializePagedLookasideList+>;orl $, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;leal (%ebp), %eax;pushl %eax;pushl $": 3,
                "jl  <RtlCheckRegistryKey+>;pushl (%ebp);calll - <ZwClose>;xorl %eax, %eax;popl %ebp": 1,
                "andl $, -(%ebp);movl (%ebp), %ecx;movl %eax, -(%ebp);movl , %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;pushl %ebx;movl (%ebp), %ebx;jne  <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "cmpl %ebx, %eax;jne  <RtlInitializeRangeList+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl %ebx, -(%ebp);calll - <NtFindAtom+>;testl %eax, %eax;jl  <RtlCheckRegistryKey+>;movl -(%ebp), %eax": 1,
                "pushl %eax;movb $, -(%ebp);calll - <NtFindAtom+>;testl %eax, %eax;jl  <RtlCheckRegistryKey+>": 1,
                "pushl -(%ebp);movl %eax, %edi;calll - <ZwClose>;cmpl %ebx, %edi;jl  <RtlCheckRegistryKey+>": 2,
                "jl  <RtlCheckRegistryKey+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);pushl %eax;calll - <NtFindAtom+>;pushl -(%ebp)": 4,
                "jge  <IoRegisterBootDriverReinitialization+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <RtlCheckRegistryKey+>;calll - <ObfDereferenceObject>": 1,
                "jl  <RtlCheckRegistryKey+>;movl (%ebp), %eax;pushl $;pushl %eax;movl %eax, (%esi)": 1,
                "je  <RtlCheckRegistryKey+>;cmpl %edi, (%ebp);je  <RtlCheckRegistryKey+>;pushl (%ebp);calll - <wcslen>": 1,
                "je  <RtlCheckRegistryKey+>;pushl (%ebp);calll - <wcslen>;pushl (%ebp);movl %eax, %esi": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl %esi;pushl %ebx": 1,
                "movl (%ebp), %edi;leal (%edi), %esi;addl $, %esp;cmpl $, (%esi);jne  <IoCheckFunctionAccess+>": 1,
                "pushl %eax;pushl (%ebp);pushl %edi;calll  <RtlValidSecurityDescriptor+>;testl %eax, %eax": 1,
                "jl  <RtlCheckRegistryKey+>;xorl %esi, %esi;incl %esi;cmpl %esi, (%ebx);je  <RtlCheckRegistryKey+>": 1,
                "addb %dh, (%bp,%si);popal;addb %dh, (%eax,%eax);addb %ah, (%eax,%eax);addb %al, (%eax)": 4,
                "pushl %esi;leal (%ebx), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %eax;pushl $;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movl %fs:, %eax;incl (%eax);je  <IoCheckFunctionAccess+>;xorl %esi, %esi;cmpl %esi, -(%ebp)": 1,
                "popal;addb %dh, (%edx);addb %ch, %gs:(%esi);je  <RtlCheckRegistryKey+>;decl %ecx": 2,
                "setl %cl;movl %ecx, %esi;jmp - <RtlCopyLuid+>;pushl %ebx;calll - <_wcsupr+>": 1,
                "subl $, %esp;pushl %esi;pushl %edi;pushl (%ebp);calll - <IoGetAttachedDevice>": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);calll - <IoGetAttachedDevice>;movl %eax, (%ebp)": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp);pushl $": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl , %eax;movl (%ebp), %edx;pushl %ebx;pushl %esi;movl (%ebp), %esi": 2,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %eax": 2,
                "xorl %ebx, %ebx;pushl %edx;movl %ebx, (%esi);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "jmp - <RtlCheckRegistryKey+>;pushl %esi;calll - <IoCreateDevice+>;jmp - <IoCreateDevice+>;movl (%edi), %eax": 1,
                "incl (%edi);jmp - <RtlCopyLuid+>;movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl $;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl (%ebp), %esi": 2,
                "pushl %edi;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl (%esi), %edi": 1,
                "movl $, (%eax);movl (%esi), %eax;andl $, (%eax);movl (%esi), %eax;andl $, (%eax)": 1,
                "addl $, %eax;movl %eax, (%eax);movl %eax, (%eax);movl (%esi), %esi;addl $, %esi": 1,
                "pushl %eax;pushl -(%ebp);leal (%ebp), %eax;pushl %eax;movw $, -(%ebp)": 9,
                "movw $, -(%ebp);movl $, -(%ebp);calll - <NtFindAtom+>;movl %eax, %ebx;testl %ebx, %ebx": 4,
                "movl %eax, %ebx;testl %ebx, %ebx;jl  <RtlCheckRegistryKey+>;jmp  <IoCheckFunctionAccess+>;nop": 1,
                "jmp  <IoCheckFunctionAccess+>;nop;decl %esp;addb %ch, (%edi);addb %al, (%bp,%di)": 1,
                "addb %al, (%bp,%di);outsl (%esi), %dx;addb %ch, (%esi);addb %al, (%eax);addb %cl, (%edi)": 1,
                "addb %ch, (%esi);addb %al, (%eax);addb %cl, (%edi);jbe  <RtlCheckRegistryKey+>;addb %dh, %gs:(%edx)": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;andl $, (%edi);andl $, (%eax)": 1,
                "jne  <RtlCheckRegistryKey+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl $;pushl (%ebp);calll  <RtlCheckRegistryKey+>;movl %eax, %ebx;cmpl $, (%ebp)": 1,
                "movl %esi, (%ebx);movl %eax, -(%ebp);movl %esi, (%eax);xorl %eax, %eax;cmpl %esi, (%ebp)": 1,
                "movl (%eax), %eax;movl %edx, -(%ebp);movl %eax, -(%ebp);je  <RtlCheckRegistryKey+>;leal -(%ebp), %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;movl (%ecx), %esi;movl (%esi), %ecx;movl %eax, %edi": 1,
                "pushl -(%ebp);calll - <RtlCheckRegistryKey+>;testl %eax, %eax;jge  <IoDisconnectInterrupt+>;movl -(%ebp), %edi": 1,
                "movl %eax, (%ebx);jne  <IoCheckFunctionAccess+>;movl %esi, (%edi);xorl %eax, %eax;movl -(%ebp), %ecx": 1,
                "movl %esi, (%ebx);xorl %edi, %edi;jmp - <RtlCheckRegistryKey+>;movl %esi, (%edi);movl %esi, (%ebx)": 1,
                "andl $, %esi;movl %edi, %ecx;addl $, %esi;calll *;testl %esi, %esi": 1,
                "pushl %esi;pushl %ebx;pushl (%ebp);leal (%ebp), %eax;pushl %eax": 1,
                "jl  <RtlCheckRegistryKey+>;testb $, -(%ebp);jne  <IoCheckFunctionAccess+>;testb $, -(%ebp);jne  <IoRegisterBootDriverReinitialization+>": 1,
                "xorl %eax, %eax;popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);andl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);calll - <FsRtlNotifyInitializeSync+>;testl %eax, %eax;jge  <RtlCheckRegistryKey+>;andl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <IoRegisterBootDriverReinitialization+>;pushl %eax;calll - <wcslen>;leal (%eax,%eax), %eax": 1,
                "pushl $;pushl %ebx;calll - <_wcsupr+>;pushl $;pushl $": 1,
                "movl (%esi), %eax;andl $, %eax;jne  <IoCheckFunctionAccess+>;xorl %edi, %edi;cmpl %edi, %eax": 1,
                "cmpl $, -(%ebp);sete -(%ebp);calll - <NtFindAtom+>;testl %eax, %eax;jl  <IoRegisterBootDriverReinitialization+>": 1,
                "jne  <IoRegisterBootDriverReinitialization+>;cmpl %edi, %eax;jne  <IoRegisterBootDriverReinitialization+>;pushl %edi;pushl %edi": 1,
                "incl (%eax);je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl %esi;calll  <RtlCheckRegistryKey+>": 1,
                "cmpb $, -(%ebp);jne  <RtlUpperString+>;movl (%esi), %eax;andl $, %eax;jne  <IoRegisterBootDriverReinitialization+>": 1,
                "jne  <IoRegisterBootDriverReinitialization+>;movl %fs:, %eax;decl (%eax);pushl $;movl $, %edi": 1,
                "pushl %eax;pushl %esi;calll  <RtlCheckRegistryKey+>;movl %edi, %ecx;calll - <ExReleaseResourceLite>": 1,
                "calll  <RtlCheckRegistryKey+>;pushl $;pushl -(%ebp);pushl -(%ebp);calll - <RtlCheckRegistryKey+>": 1,
                "jne  <IoRegisterBootDriverReinitialization+>;cmpb %bl, -(%ebp);jne  <IoRegisterBootDriverReinitialization+>;pushl -(%ebp);pushl $": 1,
                "pushl %edi;movl %fs:, %eax;decl (%eax);pushl $;movl $, %esi": 3,
                "calll - <NtFindAtom+>;movl %eax, %edi;testl %edi, %edi;jl  <FsRtlBalanceReads+>;pushl %esi": 1,
                "cmpl %esi, %edi;jl - <ExInitializePagedLookasideList+>;movl -(%ebp), %eax;cmpl $, (%eax);movl $, %edi": 1,
                "leal (%ebp), %eax;pushl %eax;movl $, %esi;pushl %esi;pushl (%ebp)": 1,
                "jmp - <RtlCheckRegistryKey+>;pushl %ecx;jmp  <RtlCheckRegistryKey+>;nop;nop": 1,
                "pushl (%edi);calll - <RtlCheckRegistryKey+>;xorl %ecx, %ecx;cmpl %ecx, %eax;movl %eax, (%ebp)": 1,
                "movl $, %eax;jmp  <RtlCheckRegistryKey+>;cmpl $, %ecx;je  <RtlCheckRegistryKey+>;movl $, (%ebp)": 1,
                "incl %esi;addb %ch, (%edi);jb  <RtlCheckRegistryKey+>;arpl %ax, (%eax);addb %ah, %gs:(%eax,%eax)": 1,
                "movl %edi, (%ebx);movl %edi, (%esi);je  <IoCheckFunctionAccess+>;cmpl $, (%ebp);je - <RtlCheckRegistryKey+>": 1,
                "addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx": 4,
                "addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx;addb %ah, (%esi);imull $, (%eax), %eax": 4,
                "pushl $;leal (%ecx), %esi;decl %eax;xorl %edx, %edx;popl %ecx": 3,
                "divl %ecx;incl %eax;movl %eax, (%ebp);xorl %edi, %edi;testb $, -(%esi)": 1,
                "movl (%eax), %edi;testb $, (%edi);jne  <IoRegisterBootDriverReinitialization+>;movl $, %ebx;cmpl $, (%esi)": 1,
                "jne  <IoRegisterBootDriverReinitialization+>;movl $, %ebx;cmpl $, (%esi);jne  <RtlCheckRegistryKey+>;movl (%edi), %eax": 1,
                "je  <IoRegisterBootDriverReinitialization+>;pushl %edi;calll  <RtlDeleteOwnersRanges+>;cmpl $, (%edi);je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;movl (%edi), %edi;cmpl $, %edi;sbbl %eax, %eax;notl %eax": 1,
                "sbbl %eax, %eax;notl %eax;andl %edi, %eax;movl %eax, -(%esi);movl (%ebp), %eax": 1,
                "andl $, %eax;addl $, %eax;leave;retl $;leal -(%ebp), %eax": 1,
                "pushl %edi;leal (%esi,%esi,), %eax;shll $, %eax;pushl %eax;pushl $": 1,
                "addl $, %ecx;addl $, %eax;decl -(%ebp);jne - <RtlCheckRegistryKey+>;cmpl $, -(%ebp)": 1,
                "pushl %edi;pushl %esi;calll  <RtlCheckRegistryKey+>;testl %esi, %esi;jbe  <RtlCheckRegistryKey+>": 1,
                "incl -(%ebp);cmpb $, -(%ebp);je - <RtlCopyLuid+>;movb -(%ebp), %al;jmp - <RtlCopyLuid+>": 1,
                "movb $, (%esi);movb $, (%esi);popl %esi;leave;retl $": 1,
                "movl %edi, %ecx;calll - <ObfReferenceObject>;movl (%edi), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;je  <IoCheckFunctionAccess+>": 2,
                "movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);calll - <IoCreateDevice+>;testb %al, %al": 1,
                "movl %eax, (%ebx);calll - <IoCreateDevice+>;testb %al, %al;movl -(%ebp), %eax;leal (%ebx), %edi": 1,
                "popl %edi;andl $, %eax;andl $, %ecx;pushl %edi;orl %eax, %ecx": 1,
                "movl (%esi), %esi;movl %esi, -(%ebp);cmpl $-, %esi;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "popl %esi;jne  <IoCreateController+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "je  <RtlCheckRegistryKey+>;cmpl %ebx, (%esi);jne  <RtlCheckRegistryKey+>;pushl %edi;movw $, -(%ebp)": 1,
                "calll *;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <RtlCheckRegistryKey+>;orl $, (%esi)": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;popl %esi": 2,
                "int;int;pushl %eax;pushl (%ebp);calll - <ZwDeleteValueKey>": 2,
                "int;pushl %eax;pushl (%ebp);calll - <ZwDeleteValueKey>;jmp - <RtlCheckRegistryKey+>": 2,
                "pushl $;movl $, %edi;pushl %edi;calll - <ExAcquireResourceSharedLite>;cmpl $, (%ebp)": 1,
                "movl %eax, (%esi);movl %edi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 1,
                "movl %fs:, %eax;incl (%eax);popl %edi;je  <IoCheckFunctionAccess+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);popl %esi;popl %ebx;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "incl %edx;addb %ah, (%ecx);jae  <RtlCheckRegistryKey+>;imull $, (%eax), %eax;outsl (%esi), %dx": 1,
                "addb %ch, (%ecx);addb %dl, (%bp);addb %ah, %gs:(%ebx);je  <RtlCheckRegistryKey+>;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);addb %al, (%eax);int;int": 4,
                "calll - <ZwDeleteValueKey>;jmp - <RtlCheckRegistryKey+>;nop;nop;nop": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;pushl %edi;movl %eax, -(%ebp);leal (%eax,%eax,), %eax": 1,
                "calll - <RtlCheckRegistryKey+>;cmpl $, -(%ebp);movl %eax, -(%ebp);je  <RtlCheckRegistryKey+>;cmpl $, (%esi)": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <RtlDeleteOwnersRanges+>;movl (%eax), %eax;movl (%eax), %edi": 1,
                "je  <RtlDeleteOwnersRanges+>;addl $, %esi;decl %edi;jne - <RtlCheckRegistryKey+>;movl -(%ebp), %edi": 1,
                "popl %esi;popl %ebx;jne  <RtlCheckRegistryKey+>;pushl $;pushl $": 1,
                "xorl %edi, %edi;xorl %ebx, %ebx;cmpl %edi, (%ebp);movl %eax, -(%ebp);jbe  <RtlCheckRegistryKey+>": 1,
                "jne  <IoForwardIrpSynchronously+>;movl -(%ebp), %eax;movl %edi, (%esi,%eax);incl %ebx;addl $, %esi": 1,
                "pushl %edi;pushl %eax;leal (%ebp), %eax;pushl %eax;calll - <RtlCheckRegistryKey+>": 1,
                "popl %esi;calll - <IoQueueWorkItem+>;leave;retl $;leal -(%ebp), %eax": 1,
                "xorl %eax, %eax;movl %esi, -(%ebp);cmpl %esi, %eax;jge - <RtlCheckRegistryKey+>;jmp - <RtlCheckRegistryKey+>": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <RtlCreateRegistryKey+>;cmpl $-, %eax;jne  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "pushl $;movl %eax, %ebx;decl (%ebx);pushl $;calll - <KeWaitForSingleObject>": 1,
                "cmpl $, %ecx;ja  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;addl %esi, %eax;shrl $, %eax;movl %esi, %ecx": 1,
                "pushl (%ebp);movl %eax, -(%ebp);calll - <KeInitializeDeviceQueue+>;testb $, ;jne  <RtlCreateRegistryKey+>": 1,
                "movl %eax, -(%ebp);calll - <KeInitializeDeviceQueue+>;testb $, ;jne  <RtlCreateRegistryKey+>;movl (%edi), %eax": 1,
                "leal (%edi), %eax;pushl %eax;calll  <RtlAbsoluteToSelfRelativeSD+>;movl -(%ebp), %eax;testb $, (%edi)": 1,
                "pushl $;pushl ;shrl $, %esi;andl $, %esi;pushl %eax": 1,
                "movl %edx, (%ebp);movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);xorl %esi, %esi": 1,
                "testl %eax, %eax;jne  <IoCheckFunctionAccess+>;pushl $;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;popl %edi;popl %esi;xorl %eax, %eax": 1,
                "je - <IoCreateDevice+>;jmp  <IoCheckFunctionAccess+>;nop;nop;nop": 1,
                "subl %ecx, %eax;pushl %eax;calll - <MmUnlockPagableImageSection+>;popl %esi;popl %ebp": 1,
                "popl %ebp;retl $;testb $, %dl;jne - <RtlCreateHeap+>;testb $, %dh": 1,
                "testb $, (%eax);jne  <RtlCreateRegistryKey+>;addl $, %eax;testb $, (%ebp);jne  <RtlCreateRegistryKey+>": 1,
                "addl $, %eax;testb $, (%ebp);jne  <RtlCreateRegistryKey+>;movl (%ebp), %edx;shll $, %edx": 1,
                "testl %eax, %eax;jne  <RtlCreateRegistryKey+>;addl $, %ebx;cmpl (%ebp), %ebx;jb - <RtlCreateRegistryKey+>": 1,
                "cmpl (%ebp), %ebx;jb - <RtlCreateRegistryKey+>;pushl %esi;pushl %edi;calll  <MmAllocatePagesForMdl+>": 1,
                "movl (%eax), %esi;testb $, (%esi);movl %ecx, -(%ebp);movl %esi, -(%ebp);leal (%esi), %eax": 1,
                "movl %ecx, -(%ebp);movl %esi, -(%ebp);leal (%esi), %eax;jne  <IoCheckFunctionAccess+>;pushl %esi": 1,
                "jl  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;xorl %edx, %edx;calll - <PsGetCurrentProcess+>;testl %eax, %eax": 1,
                "xorl %edx, %edx;calll - <PsGetCurrentProcess+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "calll - <PsGetCurrentProcess+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, %ebx;movl , %eax;andl $, (%eax);movl , %ecx;addl $, %ecx": 1,
                "addl $, %ecx;calll - <ExReleaseResourceLite>;movb (%ebp), %cl;calll *;testl %ebx, %ebx": 1,
                "movl -(%ebp), %ecx;decl %edi;movl %edi, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebx), %ecx;movl %eax, (%ecx);movl %edi, %eax": 1,
                "je  <RtlCreateRegistryKey+>;movl (%eax), %eax;jmp - <RtlCreateRegistryKey+>;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "incl %edx;jmp - <MmPageEntireDriver+>;cmpl $, %edx;jne  <RtlCreateRegistryKey+>;cmpl $, (%ecx)": 1,
                "je  <IoCheckFunctionAccess+>;movl , %eax;addl $, %eax;movl %eax, -(%ebp);jmp - <RtlSubAuthoritySid+>": 1,
                "leal (%ecx), %edx;movl %eax, (%ebp);pushl (%edx);calll - <RtlRemoveUnicodePrefix+>;testb $, %al": 1,
                "cmpl %ecx, (%ebp);movl %eax, (%ebx);movl (%ebp), %eax;movl %ecx, (%ebx);movl %eax, (%ebx)": 1,
                "movw %ax, (%ebx);movw (%ecx), %ax;movw %ax, (%ebx);movl , %eax;movl $, %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;testl %ecx, %ecx;jne  <IoOpenDeviceInterfaceRegistryKey+>;movl (%edi), %eax": 1,
                "jb - <RtlCreateRegistryKey+>;movl (%edi), %ecx;addl %eax, %ecx;cmpl %ecx, %esi;ja - <RtlCreateRegistryKey+>": 1,
                "movl (%edi), %ecx;addl %eax, %ecx;cmpl %ecx, %esi;ja - <RtlCreateRegistryKey+>;movl %ecx, %esi": 1,
                "pushl %ebx;pushl %esi;calll - <RtlCreateRegistryKey+>;testl %eax, %eax;jl  <RtlCreateRegistryKey+>": 1,
                "andl %ebx, %eax;subl $, %eax;movl %eax, -(%ebp);movl %esi, -(%ebp);jmp - <RtlSubAuthoritySid+>": 1,
                "movl (%eax), %edx;cmpl %esi, %edx;jne  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>;movl (%edi), %ecx": 1,
                "movl (%edx), %eax;cmpl %esi, %eax;je  <RtlCreateRegistryKey+>;movl (%edi), %ebx;cmpl %ebx, %eax": 1,
                "movl (%edx), %edx;addl %edx, %eax;cmpl %ebx, %eax;jae  <RtlCreateRegistryKey+>;addl %edx, -(%ebp)": 1,
                "testl %esi, %esi;je  <IoCheckFunctionAccess+>;pushl %edi;pushl $;popl %ecx": 2,
                "movl %fs:, %eax;movl (%eax), %eax;movl %edx, (%eax);movl %fs:, %eax;movl $, %ecx": 1,
                "cmpl %ecx, %eax;jae  <IoCheckFunctionAccess+>;movb (%eax), %cl;movb %cl, (%eax);leal (%eax), %ecx": 1,
                "je  <IoCheckFunctionAccess+>;leal -(%ebp), %ecx;pushl %ecx;addl $, %eax;pushl %eax": 1,
                "movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;testl %eax, %ebx": 1,
                "jmp - <RtlSubAuthoritySid+>;pushl -(%ebp);calll  <IoOpenDeviceInterfaceRegistryKey+>;jmp - <RtlCreateRegistryKey+>;addl $, %ebx": 1,
                "jmp - <RtlCreateRegistryKey+>;addl $, %ebx;jmp - <RtlSubAuthoritySid+>;nop;nop": 1,
                "addl $, %ebx;jmp - <RtlSubAuthoritySid+>;nop;nop;nop": 1,
                "pushl %ecx;pushl %ecx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 5,
                "calll - <ZwSetValueKey>;leave;retl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl ;calll - <NtVdmControl+>;movl %esi, %ecx;movl %eax, %edi": 1,
                "movl %eax, %edi;calll - <ExReleaseResourceLite>;movl %fs:, %eax;movl %eax, %ecx;movl %fs:, %eax": 1,
                "insl %dx, %es:(%edi);addb %ah, (%ebp);addb %al, (%eax);int;int": 3,
                "pushl %esi;calll  <NtVdmControl+>;popl %edi;popl %esi;popl %ebx": 1,
                "subl $, %esp;pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax": 2,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ZwOpenEvent>": 1,
                "movl %esi, -(%ebp);calll - <ZwOpenEvent>;cmpl %esi, %eax;movl %eax, -(%ebp);jge  <IoCheckFunctionAccess+>": 1,
                "addb %ah, %gs:(%eax,%eax);addb %ah, (%edx);pushl $;addb %ah, %gs:(%ebx);je  <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;jae  <NtVdmControl+>;popl %esp;addb %dl, (%eax);jb  <NtVdmControl+>": 1,
                "addb %ch, (%ebp);addb %dh, %gs:(%eax,%eax);addb %dh, (%edx);jae  <NtVdmControl+>;incl %ebx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %esi;pushl $;pushl %eax": 2,
                "movl %eax, %esi;calll - <ExReleaseResourceLite>;testl %esi, %esi;jl  <NtVdmControl+>;incl (%ebx)": 1,
                "addb %dl, (%ebx);addb %ah, %gs:(%ebx);je  <NtVdmControl+>;imull $, (%eax), %eax;jae  <NtVdmControl+>": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);decl %ebp;addb %ah, (%ecx);js  <NtVdmControl+>": 1,
                "imull $, (%eax), %eax;incl %ecx;addb %dh, (%eax);jo  <NtVdmControl+>;decl %esp": 1,
                "movl (%ebp), %ecx;pushl %ebx;pushl %esi;xorl %ebx, %ebx;movl $, %eax": 1,
                "pushl %ebx;pushl %esi;xorl %ebx, %ebx;movl $, %eax;xorl %esi, %esi": 1,
                "retl $;xorl %esi, %esi;leal (%ecx), %edx;cmpw %bx, (%edx);je  <NtVdmControl+>": 1,
                "cmpl $, %edi;jae  <NtVdmControl+>;jmp  <NtVdmControl+>;testl %edi, %edi;jb  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;cmpl $, (%ecx,%ebx,);jge  <NtVdmControl+>;cmpl $, -(%edx);ja  <NtVdmControl+>": 1,
                "movl (%edx), %edi;jl  <NtVdmControl+>;jle - <NtVdmControl+>;testl %esi, %esi;jg  <NtVdmControl+>": 1,
                "ja  <NtVdmControl+>;cmpl %edx, (%ecx);ja  <NtVdmControl+>;xorl %eax, %eax;popl %edi": 1,
                "jne  <RtlValidSecurityDescriptor+>;movw -(%ebp), %ax;jmp  <RtlValidSecurityDescriptor+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <ProbeForWrite+>;movl (%esi), %ebx;movl %edi, %eax;incl %edx;cmpl %ebx, %edx": 1,
                "jmp  <ExUuidCreate+>;pushl -(%ebp);pushl %esi;calll - <PsGetThreadTeb+>;movl -(%ebp), %edx": 1,
                "je - <NtFreeVirtualMemory+>;jmp  <IoCheckFunctionAccess+>;retl;movl (%edi), %eax;cmpl %eax, %ecx": 1,
                "jb - <RtlUnicodeStringToAnsiString+>;cmpl $, (%ebp);jne - <RtlUnicodeStringToAnsiString+>;movl %fs:, %eax;movb (%eax), %al": 1,
                "je  <IoCheckFunctionAccess+>;decl %eax;jne  <IoCheckFunctionAccess+>;pushl $;popl %eax": 1,
                "pushl $;popl %eax;xorl %ecx, %ecx;pushl -(%ebp);pushl %ecx": 1,
                "andl %edx, %ecx;shrl $, %edi;shrl $, %esi;subl %eax, %ecx;andl $, %edi": 1,
                "subl %eax, %ecx;andl $, %edi;andl %edx, %esi;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "subl %eax, %esi;testl %eax, (%ecx);jne  <IoCheckFunctionAccess+>;xorl %ebx, %ebx;movl %ebx, (%ebp)": 1,
                "movl %ebx, (%ebp);movl %ebx, (%ebp);leal (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "cmpl %ebx, (%ebp);jne - <IoOpenDeviceInterfaceRegistryKey+>;cmpl -(%ebp), %esi;ja  <IoOpenDeviceInterfaceRegistryKey+>;testw $, %si": 1,
                "movl %eax, %edi;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %ecx;incl %ecx;shrl $, %ecx": 1,
                "movl -(%ebp), %eax;movb $-, (%eax);pushl %eax;pushl %ebx;pushl -(%ebp)": 1,
                "xorl %ecx, (%ebx);subl %eax, %esi;movl -(%ebp), %eax;xorl (%eax), %esi;andl %edi, %esi": 1,
                "movb %al, %bl;movl , %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "movl %ecx, (%eax);movl , %eax;andl $, (%eax);movl , %ecx;addl $, %ecx": 1,
                "pushl $;pushl $;pushl %esi;calll - <KeInitializeDpc>;leal (%esi), %edi": 1,
                "popl %esi;retl;calll - <IoOpenDeviceInterfaceRegistryKey+>;xorb %al, %al;jmp  <IoWMIQueryAllData+>": 1,
                "calll - <_wcsnicmp>;addl $, %esp;testl %eax, %eax;je  <IoCheckFunctionAccess+>;cmpw $, (%esi)": 1,
                "je  <IoOpenDeviceInterfaceRegistryKey+>;cmpw $, (%esi);jbe  <IoOpenDeviceInterfaceRegistryKey+>;pushl $;pushl $": 2,
                "popl %ebp;retl $;movl %edi, %eax;jmp - <IoOpenDeviceInterfaceRegistryKey+>;pushl %ebp": 1,
                "addb %bl, (%eax,%eax);addb %dl, (%eax);incl %ebx;addb %cl, (%ecx);popl %esp": 1,
                "pushl %esi;calll - <IoOpenDeviceInterfaceRegistryKey+>;cmpl -(%ebp), %esi;jne  <IoCheckFunctionAccess+>;movb (%ebp), %al": 1,
                "insl %dx, %es:(%edi);addb %ch, (%edi);jbe  <IoOpenDeviceInterfaceRegistryKey+>;popal;addb %ch, (%eax,%eax)": 1,
                "movl $, (%esi);movl (%esi), %eax;movl %edx, (%eax);movl (%esi), %eax;movl %edx, (%eax)": 1,
                "pushl $;movl $, (%esi);movl $, (%esi);movl %ebx, (%esi);pushl %eax": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;movl %edi, (%esi);je  <IoCheckFunctionAccess+>;pushl $": 1,
                "movl %esp, %ebp;movb (%ebp), %al;movl (%ebp), %ecx;cmpb %al, (%ecx);je  <MmIsVerifierEnabled+>": 1,
                "retl $;movb $, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;nop;nop": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movb (%ebp), %cl;notb %cl": 1,
                "notb %cl;xorl %eax, %eax;andb %cl, (%eax);addl $, %eax;cmpl $, %eax": 1,
                "testl %eax, %eax;jne  <IoCheckFunctionAccess+>;popl %ebp;retl $;leal -(%esi,%ebx,), %edi": 1,
                "pushl (%ebp);calll  <ObSetSecurityDescriptorInfo+>;popl %ebp;retl $;testb $, (%edi)": 1,
                "movl $, (%ebp);jmp - <RtlQueryRegistryValues+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jmp - <RtlUnicodeStringToAnsiString+>;calll  <ExRaiseAccessViolation>": 1,
                "jbe  <LdrFindResource_U+>;leal (%ebx), %eax;movl %eax, (%ebp);jmp  <LdrFindResource_U+>;testb $, ": 1,
                "jmp  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %eax, ;movl (%ebp), %eax;pushl (%eax)": 1,
                "pushl %esi;calll - <IoOpenDeviceRegistryKey+>;testb %al, %al;je  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "je  <LdrFindResource_U+>;cmpw $, %cx;jne  <IoCheckFunctionAccess+>;movzwl (%eax), %eax;addl %eax, (%ebp)": 1,
                "movl (%ebp), %eax;cmpl %eax, (%edi);je - <IoOpenDeviceRegistryKey+>;jmp  <IoCheckFunctionAccess+>;nop": 1,
                "pushl %esi;movl (%ebp), %esi;movl %edx, (%eax);movl %esi, (%eax);movl %ecx, (%eax)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);addl $, %eax;jmp - <LdrFindResource_U+>;cmpl $, %esi": 1,
                "pushl $;calll *(%eax);movl %eax, %edx;testl %edx, %edx;je  <LdrFindResource_U+>": 1,
                "movl , %eax;pushl %ebx;pushl %esi;xorl %ebx, %ebx;pushl %edi": 1,
                "pushl %esi;xorl %ebx, %ebx;pushl %edi;movl $, %edi;xorl %esi, %esi": 1,
                "movb %bl, -(%ebp);movb $, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp)": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, -(%ebp);movl %eax, -(%ebp);je  <LdrFindResource_U+>;cmpl %ebx, -(%ebp)": 1,
                "addl %ecx, %eax;leal (,%eax,), %eax;pushl %edi;pushl %eax;pushl %esi": 1,
                "leal (,%eax,), %eax;pushl %edi;pushl %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "pushl %esi;calll - <RtlAddAccessAllowedAce>;cmpl %ebx, %eax;jl  <LdrFindResource_U+>;leal -(%ebp), %eax": 1,
                "orb $, (%eax);pushl %edi;movl -(%ebp), %edi;leal (%edi), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;leal (%eax), %edx;movl %edi, %ecx;movl %edx, %edi": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlCreateSecurityDescriptor>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "pushl -(%ebp);calll - <RtlSetDaclSecurityDescriptor>;movl %eax, %esi;cmpl %ebx, %esi;pushl %ebx": 1,
                "movl -(%ebp), %eax;pushl %esi;pushl %esi;movl %eax, -(%ebp);pushl %edi": 2,
                "movl $, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl %esi, -(%ebp);calll - <ZwCreateKey>": 2,
                "pushl -(%ebp);calll - <ZwSetValueKey>;pushl $;leal -(%ebp), %eax;pushl %eax": 14,
                "pushl %eax;movw %si, -(%ebp);movw $, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax": 1,
                "movw $, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax;jl  <LdrFindResource_U+>;movzwl -(%ebp), %eax": 1,
                "calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax;jl  <LdrFindResource_U+>;movzwl -(%ebp), %eax;incl %eax": 1,
                "calll - <RtlInitUnicodeString>;pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;pushl $": 1,
                "pushl ;calll  <IoInitializeCrashDump+>;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%eax,%eax);addb %dh, (%edi);jae  <LdrFindResource_U+>": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);incl %ebx;addb %dh, (%ebp)": 2,
                "je  <LdrFindResource_U+>;pushl %esp;addb %bh, (%ecx);jo  <LdrFindResource_U+>;addb %al, %gs:(%eax)": 1,
                "jo  <LdrFindResource_U+>;addb %al, %gs:(%eax);addb %al, (%esi);addb %al, %gs:(%eax);addb %al, (%eax)": 1,
                "addb %ah, ;addb %al, (%eax);addb %al, (%ebx);pushl %ebx;addb %al, (%eax,%eax)": 1,
                "addb $-, %al;orb %cl, (%ecx);movl %eax, (%ecx);jmp - <IoRegisterFileSystem+>;nop": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;je  <IoCheckFunctionAccess+>;pushl (%ebp);leal -(%ebp), %eax": 1,
                "andl $, -(%ebp);leal (%esi), %eax;pushl %eax;leal (%esi), %edi;pushl %edi": 1,
                "leal (%esi), %edi;pushl %edi;pushl $;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl (%ebp), %edi;movl %edx, (%ecx);movl (%ebp), %ecx;movl %ecx, (%eax);movl %esi, (%eax)": 1,
                "movl %edi, (%eax);jne  <IoCheckFunctionAccess+>;popl %edi;movb $, %al;popl %esi": 1,
                "je  <IoCheckFunctionAccess+>;pushl %esi;movl $, %esi;addl $, %eax;movb (%eax), %dl": 1,
                "sbbl %eax, %eax;sbbl $-, %eax;testl %eax, %eax;popl %esi;je  <IoCheckFunctionAccess+>": 1,
                "calll - <RtlAppendUnicodeStringToString>;pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>;leal -(%ebp), %eax": 1,
                "movw (%edi), %di;addw %di, -(%ebp);addw %di, -(%ebp);jmp - <RtlSubAuthoritySid+>;pushl %esi": 1,
                "jmp - <RtlSubAuthoritySid+>;pushl $;pushl $;pushl %edi;calll - <_strnicmp>": 1,
                "pushl %eax;pushl %ebx;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 3,
                "movl (%eax), %ebx;movl $, %eax;shrl $, %ebx;andl %eax, %ebx;subl $, %ebx": 1,
                "pushl %edi;calll - <RtlFillMemoryUlong>;xorl %ecx, %ecx;xorl %edx, %edx;incl %ecx": 1,
                "xaddl %eax, (%ecx);movl , %eax;movl (%eax), %ecx;subl , %ecx;movl (%eax), %eax": 1,
                "movl , %eax;movl (%eax), %ecx;subl , %ecx;movl (%eax), %eax;movl (%edi), %edx": 1,
                "movl $, %ebx;pushl %ebx;leal (,%eax,), %eax;pushl %eax;pushl $": 1,
                "je  <KeAddSystemServiceTable+>;movl , %ecx;shrl $, %ecx;pushl %ecx;leal (%eax), %ecx": 3,
                "calll - <RtlClearBits>;movl , %eax;shrl $, %eax;addl $, %eax;shrl $, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ": 6,
                "movl $, %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax": 2,
                "movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;jmp - <RtlQueryRegistryValues+>": 1,
                "je  <PsSetLegoNotifyRoutine+>;pushl %ebx;pushl %edi;pushl %esi;calll *(%esi)": 1,
                "je  <PsSetLegoNotifyRoutine+>;pushl %edi;pushl %esi;calll *%eax;pushl $": 1,
                "addb %dh, (%ebp);jb  <PsSetLegoNotifyRoutine+>;jb  <PsSetLegoNotifyRoutine+>;addb %ch, %gs:(%esi);je  <PsSetLegoNotifyRoutine+>": 1,
                "movl %esp, %ebp;pushl %ebx;xorl %ebx, %ebx;pushl %ebx;pushl $": 1,
                "movb %al, ;movb (%ebp), %al;cmpb %bl, %al;movl $, ;movl %ebx, ": 1,
                "movb (%ebp), %al;cmpb %bl, %al;movl $, ;movl %ebx, ;movl %ebx, ": 1,
                "cmpb %bl, %al;movl $, ;movl %ebx, ;movl %ebx, ;movb %al, ": 1,
                "cmpl %ebx, %eax;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;cmpl $, %eax;ja  <IoCheckFunctionAccess+>": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;movl %ebx, (%esi);movl %edi, (%esi);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "addb %ch, (%ecx);insb %dx, %es:(%edi);addb %ch, (%esi);addb %dh, (%ebx);jns  <PsSetLegoNotifyRoutine+>": 1,
                "addb %al, (%ebp);popl %esp;addb %dl, (%ebx);decl %edi;addb %al, (%esi)": 1,
                "addb %dl, (%edx);incl %ebp;addb %bl, (%eax,%eax);addb %cl, (%ecx);incl %ebx": 1,
                "decl %edi;addb %dl, (%ebx);decl %edi;addb %al, (%esi);pushl %esp": 4,
                "movl $, %esi;movl %esi, %ecx;movl %edi, %edx;calll - <ExfInterlockedRemoveHeadList>;testl %eax, %eax": 1,
                "calll - <ExfInterlockedRemoveHeadList>;testl %eax, %eax;je - <KeAddSystemServiceTable+>;leal -(%eax), %ecx;movl (%ecx), %eax": 1,
                "calll *(%eax);jmp - <PsSetLegoNotifyRoutine+>;nop;nop;nop": 1,
                "popl %ebp;retl $;cmpb $, (%esi);je  <IoCheckFunctionAccess+>;movl $, %ecx": 1,
                "retl $;cmpb $, (%esi);je  <IoCheckFunctionAccess+>;movl $, %ecx;movb $, (%esi)": 1,
                "calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;cmpl , %ebx;movl %eax, -(%ebp)": 1,
                "movb $, -(%ebp);je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <RtlAppendStringToString>;pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 2,
                "movzwl -(%ebp), %eax;movl -(%ebp), %ecx;shrl %eax;cmpw $, -(%ecx,%eax,);jne  <PsSetLegoNotifyRoutine+>": 2,
                "movl %edi, (%esi);movb $, (%esi);movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 1,
                "cmpl $, %esi;je  <PsSetLegoNotifyRoutine+>;pushl -(%ebp);calll - <PsTerminateSystemThread>;movl -(%ebp), %ecx": 1,
                "xorb (%eax), %al;popl %esp;addb %al, (%ebx);outsl (%esi), %dx;addb %ch, (%esi)": 2,
                "pushl %edi;leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;movb %bl, ;movw $, -(%ebp);movw %bx, -(%ebp)": 1,
                "movl $, %eax;movl %eax, ;movl %eax, ;movl $, %eax;movb $, ": 1,
                "movl %eax, ;movl $, %eax;movb $, ;movb $, ;movl %ebx, ": 1,
                "pushl $;pushl %ebx;pushl %ebx;pushl %ebx;pushl $": 5,
                "movb %bl, ;movl %ebx, -(%ebp);xorl %esi, %esi;cmpl %ebx, (%esi);jne  <PsSetLegoNotifyRoutine+>": 1,
                "pushl %eax;pushl (%esi);leal -(%ebp), %eax;pushl %ebx;pushl %eax": 2,
                "movb $, ;calll  <PsSetLegoNotifyRoutine+>;movl -(%ebp), %ecx;popl %edi;popl %ebx": 1,
                "calll  <PsSetLegoNotifyRoutine+>;movl -(%ebp), %ecx;popl %edi;popl %ebx;calll - <IoQueueWorkItem+>": 1,
                "nop;popl %esp;addb %dl, (%ebx);jns  <PsSetLegoNotifyRoutine+>;jae  <PsSetLegoNotifyRoutine+>": 2,
                "jb  <PsSetLegoNotifyRoutine+>;imull $, (%eax), %eax;popl %esp;addb %dl, (%ebx);incl %ecx": 1,
                "subl $, %eax;addb %dh, ;addb %bh, (%eax);addb %al, (%eax);addb %cl, %ah": 1,
                "addb %dh, ;addb %bh, (%eax);addb %al, (%eax);addb %cl, %ah;int": 1,
                "pushl $;leal (%ebx), %eax;movl %eax, (%ebx);leal (%ebx), %eax;pushl $": 1,
                "leal (%ebx), %eax;movl %eax, (%ebx);leal (%ebx), %eax;pushl $;pushl $": 1,
                "testb %al, %al;je  <PsSetLegoNotifyRoutine+>;leal (%ebx), %eax;pushl %eax;pushl $": 2,
                "movl $, %edi;cmpl %edi, %eax;jne  <PsSetLegoNotifyRoutine+>;pushl %esi;pushl %esi": 1,
                "pushl %esi;pushl %esi;pushl -(%ebp);calll - <ZwWaitForSingleObject>;movl -(%ebp), %eax": 1,
                "je  <PsSetLegoNotifyRoutine+>;pushl $;pushl $;pushl %esi;calll - <ExAllocatePoolWithTag>": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%edi), %eax;movl %eax, (%ebx);movl (%edi), %eax;movl %eax, (%ebx)": 1,
                "pushl %edi;calll - <IoGetRelatedDeviceObject>;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);movb $, -(%ebp);pushl $;movb $, -(%ebp);movl %esi, -(%ebp)": 2,
                "pushl %edi;pushl %eax;movl %eax, -(%ebp);calll - <wcsstr>;cmpl %esi, %eax": 2,
                "je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl $;pushl -(%ebp);calll - <swprintf>": 1,
                "calll - <ObfDereferenceObject>;jmp  <IoCheckFunctionAccess+>;movl $, %edi;jmp - <PsSetLegoNotifyRoutine+>;popl %esp": 1,
                "addb %ch, (%ecx);jbe  <PsSetLegoNotifyRoutine+>;addb %dh, %gs:(%edx);jae  <PsSetLegoNotifyRoutine+>;popl %esp": 2,
                "pushl $;pushl (%ebp);pushl (%ebp);calll - <PsSetLegoNotifyRoutine+>;popl %ebp": 1,
                "jae  <PsSetLegoNotifyRoutine+>;popl %esp;addb %ah, (%eax,%eax);addb %dh, (%ebx);imull $, (%eax), %eax": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl %edi;leal -(%ebp), %eax": 6,
                "pushl %edi;pushl -(%ebp);movl %eax, %ebx;calll - <ObCloseHandle>;cmpl %edi, %ebx": 1,
                "jns  <PsSetLegoNotifyRoutine+>;jae  <PsSetLegoNotifyRoutine+>;je  <PsSetLegoNotifyRoutine+>;addb %ch, %gs:(%ebp);popl %esp": 1,
                "incl %esp;addb %dh, (%ebp);insl %dx, %es:(%edi);addb %dh, (%eax);incl %esi": 1,
                "addb %dh, (%ebp);insl %dx, %es:(%edi);addb %dh, (%eax);incl %esi;addb %ch, (%ecx)": 1,
                "pushl $;popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movb -(%ebp), %al": 1,
                "shrl $, %eax;movl %eax, (%esi);movl , %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "movl %eax, (%esi);je  <IoCheckFunctionAccess+>;pushl %eax;calll - <MmGetPhysicalAddress>;movb $, %cl": 1,
                "je  <IoCheckFunctionAccess+>;pushl %eax;calll - <MmGetPhysicalAddress>;movb $, %cl;calll - <_allshr>": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;pushl (%ebp);xorl %ebx, %ebx": 1,
                "movl , %eax;pushl %esi;pushl ;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;xorl %esi, %esi;pushl $;leal -(%ebp), %eax;pushl %eax": 6,
                "pushl -(%ebp);calll - <PsSetLegoNotifyRoutine+>;cmpl $, ;je  <PsSetLegoNotifyRoutine+>;jmp  <IoCheckFunctionAccess+>": 1,
                "xorb %al, (%eax);cmpl %eax, (%eax);addb %al, (%eax);int;int": 1,
                "pushl $;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %edi;cmpl $, (%edi);je  <IoUnregisterFileSystem+>": 1,
                "je  <IoCheckFunctionAccess+>;movzwl -(%ebp), %eax;addl %ebx, %eax;cmpl %ebx, %eax;jb  <LdrFindResourceDirectory_U+>": 1,
                "calll  <IoUnregisterFileSystem+>;jmp - <IoWMIRegistrationControl+>;nop;nop;nop": 1,
                "pushl ;calll - <SeSinglePrivilegeCheck>;testb %al, %al;je  <IoCheckFunctionAccess+>;movl %ebx, -(%ebp)": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;jl  <IoQueryVolumeInformation+>;pushl ;calll - <RtlLengthSid>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;pushl $;pushl %esi": 1,
                "pushl $;pushl %esi;pushl %eax;calll - <RtlCreateAcl>;movl %eax, %edi": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movb $, %cl;calll - <_allshr>;movl %eax, -(%ebp)": 4,
                "movl -(%ebp), %edi;cmpl %ebx, %edi;jl  <IoQueryVolumeInformation+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl $;pushl $;pushl %esi;calll - <IoQueryVolumeInformation>": 1,
                "rep  stosl %eax, %es:(%edi);movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "pushl (%esi);leal (%eax), %ecx;pushl %ecx;pushl %eax;calll - <RtlInitializeBitMap>": 1,
                "andb $, %al;movb %al, (%esi);movl $, %ecx;calll *;movl , %edi": 1,
                "movl %edi, (%esi);calll - <InbvNotifyDisplayOwnershipLost+>;cmpl %ebx, %edi;jne  <IoQueryVolumeInformation+>;calll - <InbvNotifyDisplayOwnershipLost+>": 1,
                "movl (%eax), %eax;testb $, (%eax);je  <IoQueryVolumeInformation+>;pushl -(%ebp);calll  <IoInitializeCrashDump>": 1,
                "pushl %esi;pushl %edi;xorl %ebx, %ebx;xorl %eax, %eax;pushl $": 1,
                "stosl %eax, %es:(%edi);pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <MmCreateMdl>": 1,
                "testb $, -(%ebp);movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movb %bl, -(%ebp)": 1,
                "calll - <ObReferenceObjectByHandle>;movl %eax, %edi;cmpl %esi, %edi;jl  <IoQueryVolumeInformation+>;movl -(%ebp), %eax": 1,
                "pushl %edx;leal -(%ebp), %edx;pushl %edx;pushl %eax;calll - <InbvNotifyDisplayOwnershipLost+>": 1,
                "movl -(%ebp), %eax;jg  <IoQueryVolumeInformation+>;cmpl %eax, %ecx;ja  <IoQueryVolumeInformation+>;pushl $": 1,
                "jne  <IoCheckFunctionAccess+>;jmp - <IoQueryVolumeInformation+>;nop;nop;nop": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl ;pushl %edi": 2,
                "cmpl %edi, %eax;jl  <IoCheckFunctionAccess+>;movl , %eax;movl (%eax), %eax;pushl $": 1,
                "pushl $;pushl $;pushl %edi;movb $, (%eax);calll - <ExAllocatePoolWithTag>": 1,
                "je  <IoCheckFunctionAccess+>;pushl $;pushl $;pushl %edi;calll - <KeInitializeEvent+>": 1,
                "pushl %edi;calll - <KeInitializeEvent+>;popl %edi;popl %esi;popl %ebx": 1,
                "calll - <KeInitializeEvent+>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "movl (%esi), %eax;jmp - <IoInitializeCrashDump+>;pushl $;movl %esi, %edx;popl %ecx": 1,
                "calll - <KeSetEvent>;movl -(%ebp), %esi;incl (%esi);jne  <IoInitializeCrashDump+>;leal (%esi), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl $, (%ebp);jmp - <IoCreateDevice+>": 2,
                "cmpxchgl %edx, (%ecx);testl %eax, %eax;jne  <IoCheckFunctionAccess+>;pushl %edi;calll - <InbvNotifyDisplayOwnershipLost+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <IoInitializeCrashDump+>;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "testl %eax, %eax;jl - <IoWMIRegistrationControl+>;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;movl %edi, -(%ebp)": 1,
                "retl;cmpl %ecx, ;jne - <LdrFindResource_U+>;calll - <IoInitializeCrashDump+>;movl %eax, ": 1,
                "movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <ZwSetInformationFile>;movl $, %edi;cmpl %edi, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "jl  <IoInitializeCrashDump+>;cmpl %esi, -(%ebp);jl  <IoInitializeCrashDump+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%ebp)": 6,
                "cmpl %esi, (%ebp);jl  <IoInitializeCrashDump+>;movl -(%ebp), %edx;movl (%edx), %eax;movl (%edx), %ecx": 1,
                "jl  <IoInitializeCrashDump+>;movl -(%ebp), %edx;movl (%edx), %eax;movl (%edx), %ecx;movl %eax, %edi": 1,
                "je  <IoInitializeCrashDump+>;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %edx, %eax;movl %edx, %ecx": 1,
                "cmpl (%eax), %ecx;jb  <IoInitializeCrashDump+>;movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl (%ecx), %edx;movb $, %cl;calll - <_allshr>;pushl (%ebx);movl %eax, (%ebx)": 1,
                "pushl $;calll - <InbvNotifyDisplayOwnershipLost+>;movl %eax, (%ebx);xorl %esi, %esi;cmpl %esi, -(%ebp)": 1,
                "movl (%ebp), %eax;leave;retl $;movl -(%ebp), %eax;jmp - <IoInitializeCrashDump+>": 1,
                "cmpb %bl, ;movb $, ;je  <IoCheckFunctionAccess+>;pushl %ebx;calll - <KeAddSystemServiceTable+>": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, %ecx;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %ecx;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx": 1,
                "pushl %eax;movl %edi, -(%ebp);pushl %esi;leal -(%ebp), %eax;xorl %edi, %edi": 1,
                "je  <IoInitializeCrashDump+>;cmpl %esi, %eax;jne  <IoCheckFunctionAccess+>;calll *-(%ebp);cmpl %esi, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "decl %esi;addb %dl, -(%eax);movl %edi, %edi;pushl %esi;xorl %esi, %esi": 1,
                "addw -(%ebp), %ax;pushl $;movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlAppendStringToString>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl (%esi);calll - <ZwFsControlFile>;cmpl $, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "cmpl $, (%ebp);jbe - <IoCreateStreamFileObjectLite+>;leal (%esi), %ecx;andl $-, %ecx;addl %ecx, %esi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;xorl %edx, %edx;movl $, (%eax)": 1,
                "leal (%eax), %ecx;movl %edx, (%eax);movl %ecx, (%ecx);movl %ecx, (%ecx);movw %dx, (%eax)": 1,
                "calll - <IoBuildDeviceIoControlRequest>;cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;movl %eax, %edx": 4,
                "movl %eax, %edx;calll - <IofCallDriver>;cmpl $, %eax;jne  <FsRtlBalanceReads+>;pushl %ebx": 1,
                "movzbl (%ebx), %ecx;movzbl (%ebx), %edx;shll $, %ecx;addl %edx, %ecx;movzbl (%ebx), %edx": 3,
                "addl %edx, %ecx;movzbl (%ebx), %edx;shll $, %ecx;addl %edx, %ecx;movzbl (%ebx), %edx": 2,
                "movzbl (%ebx), %edx;shll $, %ecx;addl %edx, %ecx;je  <IoCheckFunctionAccess+>;movb $, -(%ebp)": 1,
                "jmp - <IoCreateDevice+>;movl $, -(%ebp);jmp - <IoCreateDevice+>;cmpl (%eax), %ebx;je - <IoCreateDevice+>": 1,
                "testl %eax, %eax;je  <FsRtlBalanceReads+>;movl (%ebx), %ecx;movl %ecx, (%eax);leal -(%ebp), %ecx": 1,
                "jl  <IoCheckFunctionAccess+>;movl %edi, %ecx;calll *;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "movl (%ebx), %ebx;pushl -(%ebp);calll  <IoConnectInterrupt+>;cmpl -(%ebp), %ebx;je - <FsRtlNotifyVolumeEvent+>": 1,
                "leal -(%ebp), %eax;jmp - <FsRtlBalanceReads+>;pushl -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll - <wcslen>;popl %ecx;leal (%eax,%eax), %eax": 6,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 3,
                "cmpl %ecx, (%ecx);je - <ObDereferenceSecurityDescriptor+>;jmp  <IoCheckFunctionAccess+>;movl (%eax), %edi;addl $, %edi": 1,
                "je - <ObDereferenceSecurityDescriptor+>;jmp  <IoCheckFunctionAccess+>;movl (%eax), %edi;addl $, %edi;movl (%edi), %esi": 1,
                "jne  <FsRtlBalanceReads+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>;andl $, (%esi)": 1,
                "andl $, (%esi);movl -(%ebp), %edi;movb $, (%esi);jmp - <RtlEqualUnicodeString+>;calll - <ObfDereferenceObject>": 1,
                "sbbl %edi, %ebx;cmpl %ecx, %ebx;ja  <RtlInitializeUnicodePrefix+>;jb  <RtlInitializeUnicodePrefix+>;cmpl %edx, %eax": 1,
                "jb  <RtlInitializeUnicodePrefix+>;cmpl %edx, %eax;ja  <RtlInitializeUnicodePrefix+>;movl %eax, %edi;xorl %eax, %eax": 1,
                "cmpl %edx, %eax;ja  <RtlInitializeUnicodePrefix+>;movl %eax, %edi;xorl %eax, %eax;pushl %eax": 1,
                "ja  <RtlInitializeUnicodePrefix+>;movl %eax, %edi;xorl %eax, %eax;pushl %eax;pushl (%ebp)": 1,
                "movl %eax, %edi;xorl %eax, %eax;pushl %eax;pushl (%ebp);pushl %ebx": 1,
                "pushl %eax;pushl (%ebp);pushl %ebx;pushl %edi;calll - <_aullrem>": 2,
                "subl $, %esp;movl (%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %ecx;andl $, -(%ebp)": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;leal -(%ebp), %eax;pushl %edi": 1,
                "subl $, %esi;cmpl %ecx, %edi;jne - <RtlInitializeUnicodePrefix+>;movl -(%ebp), %edx;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %ecx, (%eax);pushl (%ebp);movl $, %esi;pushl %esi": 1,
                "incl (%esi);jmp  <RtlDeleteOwnersRanges+>;movl (%esi), %edi;jmp - <RtlPrefixUnicodeString+>;movl %ecx, %esi": 1,
                "movl $, -(%ebp);orl %edx, %ebx;jmp - <IoWMIRegistrationControl+>;movb %cl, (%eax);jmp - <IoWMIRegistrationControl+>": 1,
                "jmp - <IoWMIRegistrationControl+>;movb %cl, (%eax);jmp - <IoWMIRegistrationControl+>;andl $, %ecx;orl $, %ecx": 1,
                "jmp - <IoWMIRegistrationControl+>;andl $, %ecx;orl $, %ecx;orl %ecx, %eax;jmp - <RtlGetAce+>": 1,
                "movb (%ebp), %al;movb %al, (%esi);leal (%esi), %eax;movl $, (%esi);movl %eax, (%eax)": 1,
                "xorl %eax, %eax;incl %eax;jmp - <IoCheckEaBufferValidity+>;addl $, %esi;movl %esi, (%edi)": 1,
                "jne  <RtlInitializeUnicodePrefix+>;outsb (%esi), %dx;decl %ecx;outsb (%esi), %dx;je  <RtlInitializeUnicodePrefix+>": 1,
                "insb %dx, %es:(%edi);addb %al, (%eax);addb %al, (%eax);pushl %esi;pushl $": 1,
                "calll *(%esi);testl %eax, %eax;jl  <RtlInitializeUnicodePrefix+>;cmpl $, (%edi);jne - <RtlInitializeUnicodePrefix+>": 1,
                "movl (%ebp), %eax;movl %ecx, -(%ebp);movl (%eax), %ecx;movl (%ecx), %ecx;movl (%ecx), %ecx": 1,
                "popl %ebx;calll - <IoQueueWorkItem+>;leave;retl $;movb -(%ebp), %cl": 1,
                "pushl %esi;shll $, %edx;pushl %edi;movzbl (%eax), %edi;addl %edi, %edx": 1,
                "movb $, %al;popl %edi;popl %esi;jmp  <RtlInitializeUnicodePrefix+>;nop": 1,
                "movl (%ebp), %eax;cmpb $, (%eax);jne - <RtlInitializeUnicodePrefix+>;movb $, %al;popl %ebp": 1,
                "leal (%eax), %ecx;movl -(%ebp), %eax;cmpl %eax, %ecx;ja  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "cmpl %eax, %ecx;ja  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax), %eax;movl -(%ebp), %ecx": 1,
                "je  <RtlInitializeUnicodePrefix+>;movb (%ebx), %al;shrb $, %al;movb %al, (%esi);movb (%ebx), %al": 1,
                "movl -(%ebp), %eax;movzbl (%ebx), %ecx;movzbl (%ebx), %edx;shll $, %ecx;addl %edx, %ecx": 1,
                "pushl %edi;pushl -(%ebp);movl %edx, (%esi);pushl %ecx;pushl %eax": 1,
                "addl %ecx, %eax;movzbl (%ebx), %ecx;pushl %edi;pushl -(%ebp);shll $, %eax": 1,
                "jle - <RtlInitializeUnicodePrefix+>;jmp  <IoCheckFunctionAccess+>;xorl %eax, %eax;movb $, (%esi);movb $, (%esi)": 1,
                "incl %eax;movl %eax, (%ecx);je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %esi": 1,
                "decl -(%ebp);jmp - <RtlInitializeUnicodePrefix+>;nop;nop;nop": 1,
                "movl %eax, %edx;calll - <IofCallDriver>;movl %eax, %edi;cmpl $, %edi;je  <IoCheckFunctionAccess+>": 3,
                "movl (%ebp), %eax;pushl %ebx;pushl (%eax);pushl -(%ebp);pushl -(%ebp)": 1,
                "movb $, -(%ebp);calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "cmpl %eax, -(%ebp);movl %edx, -(%ebp);movb $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "jb  <IoCheckFunctionAccess+>;movl -(%ebp), %edi;cmpl (%esi), %edi;ja  <IoCheckFunctionAccess+>;movl (%ebp), %edi": 1,
                "pushl %edi;pushl %esi;calll - <ObCheckCreateObjectAccess+>;cmpl $-, %eax;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi;calll - <RtlGetNtGlobalFlags+>": 4,
                "pushl %esi;calll - <RtlSelfRelativeToAbsoluteSD+>;testl %eax, %eax;movl %eax, -(%ebp);je  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "leal -(%ebp), %eax;addl $, %esp;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 2,
                "pushl %eax;pushl %esi;calll - <ObCheckCreateObjectAccess+>;movl %eax, %ebx;cmpl %edi, %ebx": 1,
                "addb %ah, (%ebx);je  <RtlSelfRelativeToAbsoluteSD+>;addb %al, (%eax);addb %al, (%eax);incl %ebx": 1,
                "addb %ch, %gs:(%esi);je  <RtlSelfRelativeToAbsoluteSD+>;addb %al, (%eax);int;int": 1,
                "pushl %eax;calll - <IoGetDeviceObjectPointer>;testl %eax, %eax;jl  <RtlSelfRelativeToAbsoluteSD+>;movl -(%ebp), %eax": 1,
                "pushl (%eax);calll - <IoGetAttachedDeviceReference>;movl -(%ebp), %ecx;movl %eax, -(%ebp);calll - <ObfDereferenceObject>": 1,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;testl %ebx, %ebx;movl (%ebp), %ebx": 1,
                "incl %edi;cmpl %ebx, %edi;jb - <RtlSelfRelativeToAbsoluteSD+>;xorl %ecx, %ecx;testl %ebx, %ebx": 1,
                "jb - <RtlSelfRelativeToAbsoluteSD+>;xorl %ecx, %ecx;testl %ebx, %ebx;popl %edi;jbe  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "popl %esp;addb %al, (%ecx);jb  <RtlSelfRelativeToAbsoluteSD+>;arpl %ax, (%eax);decl %esi": 1,
                "addb %dh, (%eax,%eax);addb %ch, (%eax);addb %dh, (%eax);addb %ch, (%ecx);addb %ah, (%eax,%eax)": 1,
                "addb %dh, (%eax);addb %ch, (%ecx);addb %dh, (%edx);addb %ch, %fs:(%ecx);jae  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "imull $, (%eax), %eax;addb %ah, ;addb %al, (%eax);addb %cl, %ah;int": 1,
                "pushl %ebx;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 6,
                "pushl (%ebp);calll - <IoGetDeviceObjectPointer>;xorl %ebx, %ebx;cmpl %ebx, %eax;jl  <RtlSelfRelativeToAbsoluteSD+>": 2,
                "jne  <IoCheckFunctionAccess+>;leal -(%ebp), %ecx;movl %ecx, -(%ebp);movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "jne - <IoGetDeviceProperty+>;cmpl %eax, %esi;je - <IoGetDeviceProperty+>;movl $, %eax;jmp - <IoGetDeviceProperty+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp - <RtlUpperChar+>": 1,
                "jmp  <RtlDeleteOwnersRanges+>;movl (%ebp), %ecx;movl %esi, (%ecx);movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "leal (%esi), %edi;movl (%edi), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax;je  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "movl %ebx, (%edi);movl (%esi), %eax;movl %eax, %ecx;andl $, %ecx;cmpl $, %ecx": 1,
                "andl $, %eax;movl %eax, (%esi);addl $, %esi;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "je  <IoDeleteSymbolicLink+>;jmp  <IoCheckFunctionAccess+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je - <RtlCheckRegistryKey+>": 1,
                "cmpw $, (%esi);je  <IoCheckFunctionAccess+>;incl -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %ebx;jmp - <SeQueryAuthenticationIdToken+>;movl $, %eax;jmp - <SeQueryAuthenticationIdToken+>;movl , %eax": 1,
                "movl (%ebp), %edi;jmp - <RtlUnicodeStringToAnsiString+>;nop;nop;nop": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl $, %edi;xorl %esi, %esi": 1,
                "pushl %eax;pushl %edi;leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp)": 6,
                "jge  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;popl %edi;popl %esi;calll - <IoQueueWorkItem+>": 1,
                "movl (%ebp), %esi;pushl %edi;pushl $;popl %ecx;leal -(%ebp), %edi": 2,
                "calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax;jl  <RtlSelfRelativeToAbsoluteSD+>;pushl $;leal -(%ebp), %eax": 1,
                "addb %dh, %gs:(%edx);jb  <RtlSelfRelativeToAbsoluteSD+>;imull $, (%eax), %eax;jae  <RtlSelfRelativeToAbsoluteSD+>;addb %al, (%eax)": 1,
                "movl (%ebp), %ebx;jmp - <NtAdjustPrivilegesToken+>;movl (%ebp), %ecx;jmp - <PsSetProcessWinProcess+>;movl $, %eax": 1,
                "movl %edx, (%ecx);jmp - <IoReadPartitionTable+>;movl (%ebp), %ecx;movl %edx, (%ecx);jmp - <IoReadPartitionTable+>": 1,
                "movl (%ebp), %ecx;movl %edx, (%ecx);jmp - <IoReadPartitionTable+>;cmpl %ecx, (%eax);jne  <IoDeleteSymbolicLink+>": 1,
                "movl %eax, -(%ebp);jmp - <RtlConvertSidToUnicodeString+>;decl %ecx;jne  <IoCheckFunctionAccess+>;pushl (%ebp)": 1,
                "jmp - <RtlConvertSidToUnicodeString+>;decl %ecx;jne  <IoCheckFunctionAccess+>;pushl (%ebp);calll  <IoReportResourceForDetection+>": 1,
                "movl %eax, (%edi);movl $, %eax;jmp  <IoWMIQueryAllData+>;xorl %eax, %eax;pushl %eax": 1,
                "movl (%esi), %eax;movl %eax, (%ebp);jmp - <RtlUpcaseUnicodeStringToOemString+>;movl $, %eax;movl %eax, (%ebp)": 1,
                "movl (%esi), %eax;pushl (%eax,%ebx,);calll - <wcslen>;incl %ebx;cmpl (%esi), %ebx": 1,
                "popl %ecx;leal (%edi,%eax,), %edi;jb - <RtlSelfRelativeToAbsoluteSD+>;jmp - <IoRegisterFileSystem+>;testb $, %dl": 1,
                "jb - <RtlSelfRelativeToAbsoluteSD+>;jmp - <IoRegisterFileSystem+>;testb $, %dl;je - <RtlUpcaseUnicodeStringToOemString+>;andl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;movl (%eax,%ecx,), %eax;pushl %eax;movl %eax, -(%ebp)": 1,
                "movw %ax, (%esi);incl %esi;incl %esi;pushl %esi;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;jae - <RtlUpcaseUnicodeStringToOemString+>;jmp  <RtlSelfRelativeToAbsoluteSD+>;movl -(%ebp), %ecx": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;jmp  <RtlStringFromGUID+>;movl -(%ebp), %edx;jmp  <RtlStringFromGUID+>": 1,
                "testb %al, %al;jns  <MmGetSystemRoutineAddress+>;movl $, %eax;movl %eax, (%esi);movl %eax, %edi": 1,
                "pushl %ecx;pushl (%ebx);calll - <RtlUpcaseUnicodeStringToOemString+>;xorl %ecx, %ecx;cmpl %ecx, %eax": 1,
                "movl %ecx, -(%ebp);jmp  <RtlSelfRelativeToAbsoluteSD+>;movl $, -(%ebp);pushl %eax;calll - <IoGetDeviceProperty+>": 1,
                "movl %ecx, (%ebp);calll - <IoGetDeviceProperty+>;movl -(%ebp), %eax;movl (%ebx), %ecx;leal (%ecx,%ebx), %edx": 1,
                "pushl -(%ebp);jmp  <MmGetSystemRoutineAddress+>;pushl $;pushl $;pushl $": 1,
                "movl (%edi), %edi;cmpl %ecx, %edi;je  <RtlSelfRelativeToAbsoluteSD+>;pushl %ecx;pushl $": 1,
                "pushl %ecx;pushl $;pushl (%ebp);pushl %esi;pushl (%ebp)": 1,
                "popl %ecx;popl %ecx;je  <RtlSelfRelativeToAbsoluteSD+>;movl $, %eax;popl %ebp": 1,
                "pushl %eax;addb %cl, (%esi);pushl %eax;addb %ah, (%eax);addb %al, (%edx)": 2,
                "leal (%edx,%eax), %edi;movl (%edi), %esi;cmpl %ecx, %esi;movl %esi, (%ebx);ja  <IoCheckFunctionAccess+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl %ebx, -(%ebp)": 2,
                "rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %esi;pushl $": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlUnicodeStringToOemString>;pushl -(%ebp)": 1,
                "calll  <ExRaiseAccessViolation>;jmp - <RtlSelfRelativeToAbsoluteSD+>;xorl %eax, %eax;jmp  <IoCheckFunctionAccess+>;movl $, %esi": 1,
                "jmp - <KeQueryActiveProcessors+>;nop;nop;nop;nop": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebx);subb %al, (%ebx);addl %edi, (%ecx)": 1,
                "cmpl %esi, %ebx;je  <RtlSelfRelativeToAbsoluteSD+>;pushl %edi;leal (%ebx), %edi;movl (%edi), %esi": 1,
                "popl %ecx;je - <RtlSelfRelativeToAbsoluteSD+>;movl (%esi), %esi;jmp - <RtlSelfRelativeToAbsoluteSD+>;pushl %ebx": 1,
                "calll - <IoGetDeviceProperty+>;testl %eax, %eax;jl  <RtlSelfRelativeToAbsoluteSD+>;orl $, (%esi);testb $, (%ebx)": 1,
                "movzwl (%edi), %ecx;movl %ecx, %edx;shrl $, %ecx;leal (%ebx), %eax;leal (%edi), %esi": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movzwl (%ecx), %ecx": 1,
                "movl $, %eax;jmp - <IoGetDeviceProperty+>;movl -(%ebp), %ecx;testl %ecx, %ecx;movb $, -(%ebp)": 1,
                "movzwl -(%ebp), %ecx;movl -(%ebp), %edi;addl %ecx, %eax;movw $, (%eax);incl %eax": 1,
                "movw $, (%eax);incl %eax;incl %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "addl (%ebp), %ecx;addl (%ebp), %edx;andl $, -(%ebp);pushl %edi;movl (%eax), %edi": 1,
                "movl (%eax), %edi;movl (%ebp), %eax;movl (%eax), %eax;pushl %ebx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);decl %edi;movl %eax, -(%ebp);pushl %esi;movl -(%ebp), %eax": 1,
                "leal (%ecx), %eax;movl (%ecx), %ecx;shll $, %ecx;addl %eax, %ecx;cmpl %ecx, %eax": 1,
                "jne - <RtlSelfRelativeToAbsoluteSD+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;movb -(%ebp), %al;popl %esi": 1,
                "movb -(%ebp), %al;popl %esi;leave;retl $;leal -(%ebp), %eax": 1,
                "jae - <RtlCheckRegistryKey+>;jmp - <RtlCheckRegistryKey+>;nop;nop;nop": 1,
                "pushl %eax;calll - <KeQuerySystemTime>;movl -(%ebp), %eax;subl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "sbbl -(%ebp), %ecx;pushl $;pushl $;pushl %ecx;pushl %eax": 2,
                "pushl %edi;pushl %ebx;calll - <RtlSelfRelativeToAbsoluteSD+>;cmpb $, %al;jne  <RtlDeleteOwnersRanges+>": 1,
                "calll  <IoReportTargetDeviceChange+>;jmp  <RtlDeleteOwnersRanges+>;nop;nop;nop": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp - <RtlSelfRelativeToAbsoluteSD+>;movl (%ebp), %eax": 1,
                "xorl %esi, %esi;pushl %eax;movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <RtlInitUnicodeString>": 2,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 3,
                "jl  <RtlSelfRelativeToAbsoluteSD+>;pushl $;popl %ecx;pushl $;xorl %eax, %eax": 1,
                "pushl $;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);popl %eax": 2,
                "calll - <ZwClose>;xorl %eax, %eax;cmpl %esi, %edi;popl %edi;setge %al": 1,
                "popl %esi;leave;retl $;nop;decl %ecx": 2,
                "pushl $;leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);movb $, -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <ZwEnumerateKey>;incl -(%ebp);cmpl %ebx, %eax": 1,
                "popl %esp;addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "jae  <RtlSelfRelativeToAbsoluteSD+>;arpl %ax, (%eax);jb  <RtlSelfRelativeToAbsoluteSD+>;imull $, (%eax), %eax;imull $, (%eax), %eax": 1,
                "popl %esp;addb %dl, (%ebx);jns  <RtlSelfRelativeToAbsoluteSD+>;jae  <RtlSelfRelativeToAbsoluteSD+>;je  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "addb %ah, (%esi);jne  <RtlSelfRelativeToAbsoluteSD+>;outsb (%esi), %dx;addb %ah, (%ebx);je  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "addb %ah, (%eax,%eax);addb %dh, (%eax);je  <RtlSelfRelativeToAbsoluteSD+>;addb %dh, %gs:(%edx);addb %al, (%eax)": 1,
                "pushl $;calll - <IoGetAttachedDeviceReference+>;cmpb $, ;jne  <RtlSelfRelativeToAbsoluteSD+>;pushl $": 1,
                "movl (%ebp), %eax;cmpl %edx, (%eax);pushl %esi;pushl %edi;jb  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "movl , %ecx;movl %eax, %esi;orl %ecx, %esi;je  <IoCheckFunctionAccess+>;pushl $": 1,
                "calll - <MmMapIoSpace>;testl %eax, %eax;je  <RtlSelfRelativeToAbsoluteSD+>;movl , %ecx;movl (%ebp), %edi": 1,
                "shrl $, %ecx;movl %eax, %esi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 2,
                "pushl ;pushl %eax;calll - <MmUnmapIoSpace>;xorl %eax, %eax;movl , %ecx": 1,
                "calll - <IoGetDeviceObjectPointer>;testl %eax, %eax;jl  <RtlSelfRelativeToAbsoluteSD+>;pushl %ebx;movl (%ebp), %ebx": 1,
                "retl $;cmpl $, -(%ebp);je  <RtlSelfRelativeToAbsoluteSD+>;pushl $;pushl -(%ebp)": 1,
                "pushl %eax;calll - <RtlInitUnicodeString>;pushl $;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <RtlSelfRelativeToAbsoluteSD+>;incl %esi;cmpl (%edi), %esi;jb - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "pushl %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "movl %esp, %ebp;subl $, %esp;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "movl (%ebp), %ecx;testb $, (%ecx);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>;pushl %esi;pushl $": 1,
                "calll - <ExAllocatePoolWithTag>;pushl %esi;pushl $;pushl %ebx;movl %eax, -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlAnsiStringToUnicodeString>;pushl $": 6,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %ecx;movl (%eax,%ecx,), %edi;pushl %edi;leal -(%ebp), %eax;pushl $": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlSelfRelativeToAbsoluteSD+>;testl %eax, %eax": 3,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlSelfRelativeToAbsoluteSD+>;testl %eax, %eax;jl  <IoAssignDriveLetters+>": 1,
                "jbe  <IoAssignDriveLetters+>;arpl %sp, (%ebp);popl %esp;pushl %eax;pushl $": 1,
                "addb %dh, (%edx);addb %ah, %fs:(%eax,%eax);addb %dh, (%ebx);imull $, (%eax), %eax;addb %ah, (%eax,%eax)": 8,
                "addb %ah, (%eax,%eax);addb %dl, (%eax);popal;addb %dh, (%edx);je  <IoAssignDriveLetters+>": 6,
                "imull $, (%eax), %eax;outsl (%esi), %dx;addb %ch, (%esi);andl $, %eax;addb %al, (%eax)": 5,
                "je  <IoAssignDriveLetters+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;incl -(%ebp)": 1,
                "movl (%eax,%ecx,), %ebx;pushl %ebx;leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %eax;calll - <swprintf>;addl $, %esp": 1,
                "cmpl $, -(%ebp);je  <IoAssignDriveLetters+>;cmpl $, -(%ebp);jne  <IoAssignDriveLetters+>;cmpl $, -(%ebp)": 1,
                "je  <IoAssignDriveLetters+>;incl %esi;jmp - <IoAssignDriveLetters+>;movl %esi, -(%ebp);jmp - <IoAssignDriveLetters+>": 1,
                "movl (%ebp), %edi;movl $, %esi;movl %esi, %ecx;movl %edi, -(%ebp);calll *": 1,
                "jne  <IoAssignDriveLetters+>;cmpl %edi, (%eax);jb  <IoAssignDriveLetters+>;movl (%eax), %ecx;movl (%eax,%ecx), %ecx": 1,
                "jbe  <IoAssignDriveLetters+>;movl $, %ebx;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "decl (%eax);pushl $;pushl %ebx;calll - <ExAcquireResourceSharedLite>;pushl %edi": 1,
                "calll - <ExAcquireResourceSharedLite>;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "calll - <ZwDeleteKey>;xorl %esi, %esi;cmpl %esi, -(%ebp);je  <IoAssignDriveLetters+>;addw $-, -(%ebp)": 1,
                "je  <IoAssignDriveLetters+>;addw $-, -(%ebp);movzwl -(%ebp), %eax;movl -(%ebp), %ecx;shrl %eax": 1,
                "movzwl -(%ebp), %eax;movl -(%ebp), %ecx;shrl %eax;movw %si, (%ecx,%eax,);pushl %edi": 1,
                "incl %ecx;addb %cl, (%ecx);decl %esp;addb %al, (%ebp);incl %esp": 5,
                "popl %esi;calll - <IoQueueWorkItem+>;leave;retl $;xorl %esi, %esi": 1,
                "addb %al, (%eax);addb %al, (%ebx);testl %eax, %ebp;addl (%eax), %eax;addb %cl, -(%ebx)": 1,
                "movl (%eax), %ecx;addl %eax, %ecx;pushl %ecx;calll - <RtlUpperChar+>;movw -(%ebp), %ax": 1,
                "movw %cx, -(%ebp);movl (%eax), %ecx;addl %eax, %ecx;movl %ecx, -(%ebp);jmp  <IoAssignDriveLetters+>": 1,
                "movl (%eax), %ecx;addl %eax, %ecx;movl %ecx, -(%ebp);jmp  <IoAssignDriveLetters+>;nop": 1,
                "movl (%ebp), %eax;xorl %ebx, %ebx;cmpb %bl, (%ebp);pushl %esi;movl (%ebp), %esi": 1,
                "jl  <IoCheckFunctionAccess+>;pushl %ebx;pushl %ebx;pushl %edi;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);calll - <ZwClose>;cmpl %ebx, -(%ebp);jl  <IoCheckFunctionAccess+>": 2,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 8,
                "movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 8,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);calll - <RtlUpperChar+>;movb %al, -(%ebp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll  <RtlValidSecurityDescriptor+>;testl %eax, %eax;jl  <IoAssignDriveLetters+>": 2,
                "pushl $;incl %eax;pushl %eax;pushl $;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %edi;movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 4,
                "movw $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);calll - <ZwSetValueKey>;pushl $": 3,
                "pushl $;pushl %esi;calll - <RtlGetAce+>;testl %eax, %eax;jl  <IoAssignDriveLetters+>": 1,
                "jl  <IoAssignDriveLetters+>;leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 2,
                "calll - <NtFindAtom+>;testl %eax, %eax;movl -(%ebp), %eax;jge - <IoAssignDriveLetters+>;cmpw %bx, -(%ebp)": 1,
                "movl $, -(%ebp);calll - <ZwSetValueKey>;movl -(%ebp), %eax;cmpl %ebx, %eax;jne - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "jne  <IoAssignDriveLetters+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "movl %eax, -(%ebp);je  <IoAssignDriveLetters+>;movl %fs:, %eax;decl (%eax);pushl $": 1,
                "jl  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <IoAssignDriveLetters+>": 1,
                "addb %ah, (%bx,%di);arpl %ax, (%eax);jns  <IoAssignDriveLetters+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "arpl %ax, (%eax);jns  <IoAssignDriveLetters+>;incl %esp;addb %dh, (%edx);imull $, (%eax), %eax": 1,
                "addb %al, (%esi);cmpb %al, (%eax);aaa;addb %dh, ;addb %al, (%eax,%eax)": 1,
                "imull $, (%eax), %eax;incl %esp;addb %ah, (%ebp);jae  <IoAssignDriveLetters+>;arpl %ax, (%eax)": 1,
                "cmpl %ebx, %esi;jge  <IoCheckFunctionAccess+>;cmpl $, %esi;je  <IoAssignDriveLetters+>;cmpl $, %esi": 1,
                "movl -(%ebp), %eax;movzwl (%eax), %ecx;incl %ecx;incl %ecx;pushl %ecx": 2,
                "calll - <ZwSetValueKey>;pushl -(%ebp);calll - <ZwClose>;incl -(%ebp);pushl $": 1,
                "outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%ecx);arpl %ax, (%eax);je  <IoAssignDriveLetters+>": 1,
                "int;movl -(%ebp), %eax;movzwl (%eax,%ecx,), %eax;movl -(%ebp), %ecx;cmpl (%ecx), %eax": 1,
                "pushl %eax;calll - <RtlEqualUnicodeString>;testb %al, %al;je - <RtlSelfRelativeToAbsoluteSD+>;incl -(%ebp)": 1,
                "je - <RtlSelfRelativeToAbsoluteSD+>;incl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%esi)": 1,
                "addb %dh, (%eax,%eax);addb %dh, (%ebx);imull $, (%eax), %eax;addb %ch, (%esi);insb %dx, %es:(%edi)": 5,
                "imull $, (%eax), %eax;addb %ch, (%esi);insb %dx, %es:(%edi);addb %ch, (%esi);addb %ah, (%ebp)": 5,
                "movl $, %ecx;calll - <ExReleaseResourceLite>;incl (%edi);jne  <MmGetSystemRoutineAddress+>;leal (%edi), %eax": 1,
                "incl (%edi);jne  <MmGetSystemRoutineAddress+>;leal (%edi), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "jmp  <MmGetSystemRoutineAddress+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %ecx;leal (%eax,%eax,), %eax": 1,
                "movl -(%ebp), %eax;movzbl -(%ebp), %edx;xorl %ecx, %ecx;cmpl $, %edx;ja  <MmGetSystemRoutineAddress+>": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl (%ebp);pushl $;calll - <MmGetSystemRoutineAddress+>": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %ebx": 1,
                "addb %al, (%eax);pushl %ebp;orb %ch, -(%eax);testb %ah, (%ebp);addb %ah, (%eax)": 1,
                "pushl %ebp;orb %ch, -(%eax);testb %ah, (%ebp);addb %ah, (%eax);addl %eax, (%eax)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%edx), %edx;orl (%ebp), %edx;movl %edx, -(%ecx)": 1,
                "jne - <MmGetSystemRoutineAddress+>;movl -(%ebp), %edx;testb $, (%ebp);je  <MmGetSystemRoutineAddress+>;movw -(%ebp), %cx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <IoReadPartitionTable+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;addl %eax, %ecx;addl -(%ebp), %ecx;movl (%ebp), %eax;leal (%ecx,%esi), %ecx": 1,
                "xorl %edx, %edx;subl %edx, %ecx;pushl %edi;jne  <IoCheckFunctionAccess+>;movl (%esi), %edi": 1,
                "jl - <RtlAbsoluteToSelfRelativeSD+>;leal (%esi), %eax;pushl %eax;calll - <KeQuerySystemTime>;testl %ebx, %ebx": 1,
                "jne - <RtlAbsoluteToSelfRelativeSD+>;xorl %ecx, %ecx;testl %ebx, %ebx;jbe  <RtlAbsoluteToSelfRelativeSD+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%esi,%ecx,), %edx;movl %eax, (%esi,%ecx,);leal (%edx,%eax), %eax;andl $-, %eax": 1,
                "andl $-, %eax;incl %ecx;cmpl %ebx, %ecx;movl %eax, -(%ebp);jb - <RtlAbsoluteToSelfRelativeSD+>": 1,
                "pushl %ecx;pushl %eax;calll - <RtlSelfRelativeToAbsoluteSD+>;movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movb $, %al": 1,
                "cmpl %edi, %edx;movl %edx, ;je  <RtlAbsoluteToSelfRelativeSD+>;xorl %eax, %eax;movl $, %ecx": 1,
                "movl %edx, ;je  <RtlAbsoluteToSelfRelativeSD+>;xorl %eax, %eax;movl $, %ecx;movl %edx, %edi": 1,
                "movl $, %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);xorl %edi, %edi;movl %eax, ": 1,
                "rep  stosl %eax, %es:(%edi);xorl %edi, %edi;movl %eax, ;jmp  <RtlAbsoluteToSelfRelativeSD+>;nop": 1,
                "pushl %edi;xorl %edi, %edi;cmpw %di, (%esi);je  <RtlAbsoluteToSelfRelativeSD+>;cmpl %edi, ": 1,
                "xorl %edi, %edi;cmpw %di, (%esi);je  <RtlAbsoluteToSelfRelativeSD+>;cmpl %edi, ;je - <RtlAbsoluteToSelfRelativeSD+>": 1,
                "leal (%ecx,%eax,), %ebx;pushl %ebx;calll - <RtlFreeUnicodeString>;movzwl (%esi), %eax;pushl $": 1,
                "movl -(%ebp), %ebx;leal (%ebx), %ecx;jmp  <RtlAbsoluteToSelfRelativeSD+>;cmpl %eax, (%ebp);jbe - <MmUnmapViewInSessionSpace+>": 1,
                "cmpl %esi, %eax;jb - <RtlAbsoluteToSelfRelativeSD+>;jmp - <NtQueryInformationFile+>;xorl %esi, %esi;incl %esi": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;je  <IoReportResourceForDetection+>": 1,
                "movl (%esi), %eax;movl (%eax), %eax;cmpl %ebx, %eax;jne  <IoReportResourceForDetection+>;pushl (%ebp)": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;testl %ebx, %ebx;movl %ebx, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <ZwQuerySystemInformation>;cmpl %ebx, %eax": 1,
                "movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <IoCheckFunctionAccess+>;cmpl %ecx, %edx;jae  <IoCheckFunctionAccess+>": 1,
                "leal -(%eax,%edx), %edx;decl %eax;notl %eax;andl %eax, %edx;movl -(%ebp), %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %edi;movl %edx, (%ebp)": 1,
                "calll - <ZwPowerInformation+>;cmpl %ebx, %eax;jl  <IoReportResourceForDetection+>;movl -(%ebp), %eax;addl %eax, (%esi)": 1,
                "popl %edi;popl %ebx;leave;retl $;movb %bl, (%ebp)": 1,
                "pushl (%ebp);pushl %esi;calll - <IoReportResourceForDetection+>;testl %eax, %eax;jl  <IoReportResourceForDetection+>": 1,
                "pushl %esi;calll - <IoReportResourceForDetection+>;testl %eax, %eax;jl  <IoReportResourceForDetection+>;andl $, -(%ebp)": 1,
                "pushl %eax;pushl %esi;calll  <IoReportResourceForDetection+>;orl $-, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl %edi, %eax;movl -(%ebp), %ecx;calll - <IoQueueWorkItem+>": 1,
                "movl (%ebp), %eax;andl $, (%eax);andl $, (%eax);andl $, (%eax);pushl %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "calll - <IoGetAttachedDeviceReference+>;pushl $;pushl (%ebp);calll - <RtlUpcaseUnicodeStringToOemString+>;movl %eax, %esi": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;testl %edi, %edi;movl %edi, %eax;jne - <IoReportResourceForDetection+>": 1,
                "jmp  <IoDeleteSymbolicLink+>;movl -(%ebp), %eax;movl %eax, (%edi);jmp  <IoReportResourceForDetection+>;pushl $": 1,
                "movl (%ebp), %edi;movl %eax, (%ebx);movl (%edi), %eax;cmpl %esi, %eax;je  <IoCheckFunctionAccess+>": 1,
                "popl %eax;subl %esi, %eax;movl %eax, %esi;jmp - <IoCreateDevice+>;movw $, (%ecx)": 1,
                "pushl %eax;calll  <RtlValidSecurityDescriptor+>;jmp - <RtlGUIDFromString+>;pushl (%ebp);pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlValidSecurityDescriptor+>;jmp - <RtlGUIDFromString+>;movl -(%ebp), %ecx": 1,
                "pushl (%esi);calll - <RtlCompareMemory>;cmpl %edi, %eax;je  <IoReportResourceForDetection+>;pushl %edi": 1,
                "calll - <RtlCompareMemory>;cmpl %edi, %eax;je  <IoReportResourceForDetection+>;pushl %edi;pushl $": 1,
                "movw (%esi), %ax;subw $, %ax;movw %ax, -(%ebp);movw (%esi), %ax;subw $, %ax": 1,
                "addb %bl, (%eax,%eax);addb %cl, (%eax,%eax);addb %al, (%edx);incl %ecx;addb %cl, (%eax,%eax)": 1,
                "addb %cl, (%eax,%eax);addb %bh, (%edi);addb %bl, (%eax,%eax);addb %cl, %ah;int": 1,
                "pushl (%ebp);calll - <RtlGetAce+>;movb $, -(%ebp);jmp - <RtlGetAce+>;leal -(%ebp), %eax": 1,
                "xorl %ebx, %ebx;pushl %ebx;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "popl %esi;movw %dx, (%ecx);popl %ebx;leave;retl $": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;xorl %edi, %edi;movl %eax, -(%ebp)": 1,
                "pushl %edi;pushl %edi;pushl %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, %esi;cmpl %edi, %esi;jl  <RtlDeleteOwnersRanges+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <IoReportResourceForDetection+>": 1,
                "cmpl %edi, %esi;jl  <IoReportResourceForDetection+>;pushl %edi;pushl $;movl $, %ebx": 1,
                "cmpl %edi, %esi;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;cmpl $, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "je  <IoReportResourceForDetection+>;pushl -(%ebp);calll - <ZwClose>;cmpl %edi, %esi;jl  <RtlDeleteOwnersRanges+>": 1,
                "je  <IoReportResourceForDetection+>;popal;addb %ch, (%esi);arpl %ax, (%eax);addb %al, %gs:(%eax)": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);je  <IoReportResourceForDetection+>;jb  <IoReportResourceForDetection+>;outsl (%esi), %dx": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);calll - <IoReportResourceForDetection+>;movl %esi, %ecx": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);je  <IoCreateController+>;testl %edi, %edi": 1,
                "je  <IoCreateController+>;testl %edi, %edi;jl  <IoCheckFunctionAccess+>;movl %edi, %eax;popl %edi": 1,
                "pushl $;pushl $;pushl (%ebp);pushl (%ebp);calll - <ZwSetValueKey>": 3,
                "movl %eax, %edi;movl %edi, %eax;popl %edi;popl %esi;leave": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);calll - <IoSetDeviceInterfaceState+>;movl %eax, %esi": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;popl %ebx;movl %esi, %eax": 1,
                "addb %ah, (%ebp);popl %esp;addb %dl, (%ebx);jns  <IoSetDeviceInterfaceState+>;jae  <IoSetDeviceInterfaceState+>": 1,
                "addb %al, (%ebx);outsl (%esi), %dx;addb %ch, (%esi);je  <IoSetDeviceInterfaceState+>;jb  <IoSetDeviceInterfaceState+>": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);je  <IoSetDeviceInterfaceState+>;jb  <IoSetDeviceInterfaceState+>;outsl (%esi), %dx": 1,
                "imull $, (%eax), %eax;decl %ecx;addb %ch, (%esi);jae  <IoSetDeviceInterfaceState+>;je  <IoSetDeviceInterfaceState+>": 1,
                "pushl %edi;addl $, %esi;testl %eax, %eax;jne  <IoIsWdmVersionAvailable+>;pushl %esi": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <IoSetDeviceInterfaceState+>;pushl $;pushl %esi": 1,
                "jl  <IoSetDeviceInterfaceState+>;pushl $;pushl %esi;calll - <RtlAppendUnicodeToString>;leal -(%ebp), %eax": 1,
                "calll - <RtlAppendUnicodeStringToString>;movl (%ebp), %ebx;testl %ebx, %ebx;jne  <IoIsWdmVersionAvailable+>;movl (%ebp), %ebx": 1,
                "pushl %esi;xorl %esi, %esi;cmpw %si, (%eax);je  <IoSetDeviceInterfaceState+>;movl %eax, -(%ebp)": 1,
                "je  <IoSetDeviceInterfaceState+>;movw (%ecx), %dx;cmpw $, %dx;jb  <IoSetDeviceInterfaceState+>;cmpw $, %dx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movzwl (%ebx), %edi;movl (%ebx), %esi": 1,
                "addl $, %esi;jmp - <IoSetDeviceInterfaceState+>;nop;decl %esp;addb %al, (%ebp)": 1,
                "cmpw $, %cx;ja  <IoCheckFunctionAccess+>;cmpw $, %cx;je  <IoCheckFunctionAccess+>;movw %cx, (%eax)": 1,
                "pushl %edx;calll - <RtlUpcaseUnicodeString>;movl (%ebp), %esi;xorl %eax, %eax;pushl %eax": 1,
                "pushl %eax;calll - <RtlSubAuthoritySid+>;jmp - <RtlSubAuthoritySid+>;calll  <ExRaiseAccessViolation>;jmp - <RtlSubAuthoritySid+>": 1,
                "jne - <IoQueryDeviceDescription+>;jmp - <IoQueryDeviceDescription+>;movl (%eax), %eax;cmpl (%edi), %eax;je - <IoQueryDeviceDescription+>": 1,
                "jmp - <IoQueryDeviceDescription+>;movb (%edi), %al;testb %al, %al;je  <IoCheckFunctionAccess+>;movzbl %al, %ecx": 1,
                "movzbl %al, %ecx;movl %edi, %eax;subl %ecx, %eax;andl $, (%eax);jmp - <RtlAddAtomToAtomTable+>": 1,
                "cmpl %esi, (%edi);jne  <IoCheckFunctionAccess+>;cmpl %esi, %ecx;jne  <IoCheckFunctionAccess+>;movb $, -(%ebp)": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);movb (%eax), %al;movl (%ebp), %ecx;andb $, %al": 4,
                "movl (%ebp), %ecx;movl %eax, %esi;movl (%ebp), %eax;pushl %ebx;movl %esi, (%eax)": 1,
                "calll - <IoWMIRegistrationControl+>;movl %eax, %ebx;testl %ebx, %ebx;jl - <RtlInitializeUnicodePrefix+>;andb $-, (%esi)": 1,
                "testl %edx, %edx;jne  <IoInitializeTimer+>;pushl $;pushl $;pushl %edx": 1,
                "testl %edx, %edx;je  <IoCheckFunctionAccess+>;pushl %edi;pushl $;popl %ecx": 1,
                "pushl %edi;pushl $;popl %ecx;xorl %eax, %eax;movl %edx, %edi": 3,
                "movl %eax, (%edx);movl (%ebp), %eax;movl %eax, (%edx);pushl $;addl $, %edx": 1,
                "movl , %eax;andl (%ebp), %eax;pushl %esi;movl %edx, -(%ebp);movb %dl, %cl": 1,
                "decl %eax;imull $, %eax, %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "movl %esi, %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "popl %edi;popl %ebx;jl  <IoConnectInterrupt+>;movl -(%ebp), %eax;popl %esi": 1,
                "pushl (%ebp);calll - <ZwCreateKey>;jmp - <FsRtlOplockFsctrl+>;movl (%ebp), %esi;pushl $": 1,
                "addl $, %esi;pushl %esi;pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx": 3,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;je - <IoGetDeviceProperty+>;pushl %edi": 1,
                "movw (%esi), %ax;je  <IoCheckFunctionAccess+>;popl %esi;popl %ebp;retl $": 1,
                "pushl (%ebp);movl %eax, %edi;calll - <ZwClose>;testl %edi, %edi;jl  <IoConnectInterrupt+>": 1,
                "cmpl $, %eax;je  <IoCheckFunctionAccess+>;cmpl %ecx, (%ebp);je  <IoCheckFunctionAccess+>;movl (%ebx), %eax": 1,
                "jmp - <RtlCheckRegistryKey+>;decl %eax;jne  <IoConnectInterrupt+>;movl (%ebp), %eax;movw (%eax), %dx": 1,
                "movl (%eax), %eax;jmp  <IoConnectInterrupt+>;nop;nop;nop": 1,
                "cmpl %edi, %eax;jl  <IoConnectInterrupt+>;pushl %ebx;pushl %esi;pushl (%ebp)": 1,
                "pushl %esi;movw %cx, -(%ebp);movl (%eax), %ecx;pushl $;addl %eax, %ecx": 1,
                "pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;pushl %edi;pushl %eax": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl $, %esi": 1,
                "movl $, -(%ebp);calll - <RtlQueryRegistryValues>;movl %eax, %edi;testl %edi, %edi;jl  <IoConnectInterrupt+>": 2,
                "jae  <IoConnectInterrupt+>;incl %edi;addb %dl, (%ebp);decl %ecx;addb %al, (%eax,%eax)": 1,
                "addb %ch, (%edi);ja  <IoConnectInterrupt+>;addb %dh, %gs:(%edx);incl %esi;addb %ch, (%ecx)": 1,
                "addb %al, (%eax);pushl %ebx;addb %ah, (%ebp);jb  <IoConnectInterrupt+>;jbe  <IoConnectInterrupt+>": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);pushl %ebp;addb %dh, (%eax);jo  <IoConnectInterrupt+>": 1,
                "movl (%ebp), %eax;movl %ebx, (%ecx);movl %ebx, (%eax);movl $, %eax;jmp - <RtlGetNextRange+>": 1,
                "subl $, %eax;jmp - <RtlGetNextRange+>;movl (%esi), %eax;leal (%edx), %ecx;movl %esi, (%ecx)": 1,
                "pushl %ecx;pushl %edx;calll - <RtlInitializeUnicodePrefix+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "je - <FsRtlBalanceReads+>;movl (%edi), %eax;cmpl %edi, %eax;jne  <IoConnectInterrupt+>;xorb %al, %al": 1,
                "xorb %al, %al;jmp  <IoConnectInterrupt+>;cmpb %cl, (%eax);jne - <IoConnectInterrupt+>;cmpb $, %cl": 1,
                "movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %eax;decl %eax;pushl %esi": 1,
                "jl  <ObCreateObjectType+>;cmpl $, %esi;movl -(%ebp), %ecx;movl (%ecx), %eax;movb (%eax), %al": 1,
                "movb %al, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;pushl %esi;pushl %edi": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;pushl %esi;pushl %edi;movl %eax, (%ecx)": 1,
                "movl $, %esi;pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi": 1,
                "pushl $;shll $, %eax;pushl %eax;pushl %esi;calll - <ExAllocatePoolWithTag>": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;subl %edi, %esi;movl %esi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;addl %edi, %esi;pushl %esi;pushl %edi;pushl (%ebx)": 1,
                "pushl %esi;pushl %edi;pushl (%ebx);pushl -(%ebp);pushl (%eax)": 1,
                "pushl -(%ebp);pushl (%eax);calll *(%eax);testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "je  <IoConnectInterrupt+>;movl %eax, -(%ebp);incl (%ebp);movl (%ebp), %eax;addl $, %edi": 1,
                "movl -(%ebp), %esi;jmp - <IoConnectInterrupt+>;cmpb $, -(%ebp);movl $, %esi;je  <IoDeleteSymbolicLink+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx;movl %ecx, (%eax);leal (%eax), %ecx;xorl %esi, %esi": 1,
                "xorl %esi, %esi;movl %esi, (%eax);movl %esi, (%eax);movl %edx, (%ecx);movl -(%ebp), %edx": 1,
                "movl %ecx, -(%ebp);movl %esi, (%ebp);ja  <IoConnectInterrupt+>;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edi;subl %esi, %edi;cmpl $, (%edi,%esi);je  <IoConnectInterrupt+>": 1,
                "addl $, %esi;cmpl (%ebx), %eax;jb - <IoConnectInterrupt+>;pushl $;pushl -(%ebp)": 1,
                "popl %edi;popl %esi;jmp  <IoConnectInterrupt+>;nop;nop": 1,
                "cmpl %edx, %ecx;movl %ecx, -(%ebp);movl %edx, (%ebp);je  <RtlFreeRangeList+>;pushl $": 1,
                "movl %ebx, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, (%ebx);movl (%ebp), %eax": 1,
                "cmpl %eax, -(%ebp);movl %eax, (%ebp);jne - <RtlFreeRangeList+>;movl -(%ebp), %eax;jmp  <RtlFreeRangeList+>": 1,
                "movl %eax, -(%ebp);je  <RtlFreeRangeList+>;movl (%ebp), %edx;pushl $;popl %ecx": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esi);movl (%ebx), %eax": 1,
                "movl (%edi), %eax;jmp - <RtlCopyRangeList+>;xorl %eax, %eax;popl %edi;popl %ebx": 1,
                "pushl %ecx;pushl %eax;pushl (%ebp);pushl (%ebp);calll - <RtlCopyRangeList+>": 1,
                "jl  <IoCheckFunctionAccess+>;incl (%edi);incl (%edi);popl %edi;movl %ebx, %eax": 1,
                "incl (%edi);popl %edi;movl %ebx, %eax;popl %ebx;popl %esi": 1,
                "retl $;orb $, (%esi);jmp - <RtlAddRange+>;movl $, %eax;jmp - <RtlAddRange+>": 1,
                "incl (%edi);movl -(%ebp), %eax;addl $, -(%ebp);movl %ecx, (%eax);movl -(%ebp), %eax": 1,
                "movl %edx, (%ecx);movl %eax, (%ecx);movb (%esi), %al;testb %al, %al;js  <IoCreateController+>": 1,
                "leal (%ecx), %edx;movl %edx, (%eax);xorl %edx, %edx;cmpl $, (%edi);sete %dl": 1,
                "shll $, %esi;leal (%esi,%ecx,), %edi;pushl $;addl %eax, %edi;pushl %edi": 1,
                "movl (%ebp), %ecx;movl %eax, (%ebx);movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, (%ebx);xorl %eax, %eax": 1,
                "movl %esi, (%eax);movl (%ebp), %eax;pushl %edi;movl (%eax), %edi;movl (%edi), %eax": 1,
                "decl %eax;pushl %ebx;leal (%edi), %edx;movl %eax, -(%ebp);js - <RtlAddRange+>": 1,
                "cmpl %edx, %eax;jae - <RtlAddRange+>;movb (%eax), %dl;movzbl %dl, %ebx;subl $, %ebx": 1,
                "je  <IoCreateController+>;testb $, (%eax);je  <RtlAddRange+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "andb $-, (%edx);pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;pushl %edi": 1,
                "movl (%ecx), %eax;cmpl %eax, (%edx);jb  <RtlAddRange+>;ja  <RtlAddRange+>;movl (%edx), %eax": 1,
                "movl (%ecx), %eax;cmpl (%edx), %eax;ja  <RtlDeleteOwnersRanges+>;jb  <RtlAddRange+>;movl (%ecx), %eax": 1,
                "jle  <RtlAddRange+>;cmpl $, %ecx;jne - <RtlAddRange+>;popl %ebp;retl $": 1,
                "pushl $;calll - <RtlAddRange+>;movl %eax, %edi;jmp - <IoConnectInterrupt+>;movl (%esi), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;je  <RtlAddRange+>": 1,
                "cmpb $, (%ebp);jne  <IoRegisterBootDriverReinitialization+>;cmpl $, (%esi);jne  <RtlAddRange+>;cmpl (%eax), %edi": 1,
                "ja - <RtlInitializeUnicodePrefix+>;movl (%ebp), %eax;jb  <RtlFindRange+>;cmpl %eax, (%ebp);ja - <RtlInitializeUnicodePrefix+>": 1,
                "cmpl $, (%ebp);je - <RtlInitializeUnicodePrefix+>;movb (%ebp), %al;movb %al, %cl;andb $, %al": 1,
                "pushl %esi;pushl %eax;calll - <RtlAddRange+>;testb %al, %al;je - <RtlInitializeUnicodePrefix+>": 1,
                "je - <RtlInitializeUnicodePrefix+>;movl (%ebp), %eax;movl %esi, (%eax);movl %ebx, (%eax);xorl %eax, %eax": 1,
                "movl %esi, (%eax);movl %ebx, (%eax);xorl %eax, %eax;popl %edi;popl %esi": 1,
                "xorl %ebx, %ebx;pushl %edi;movl (%ebp), %edi;movw %bx, (%eax);movl %ebx, (%eax)": 1,
                "movl %eax, %ecx;cmpl %ebx, %ecx;jge  <IoCreateController+>;movl %ecx, %eax;subl $, %eax": 1,
                "addb %dh, (%eax,%eax);addb %dl, -(%eax);movl %edi, %edi;pushl %ebp;movl %esp, %ebp": 1,
                "pushl %edi;pushl $;leal -(%ebp), %ecx;pushl %ecx;xorl %edi, %edi": 1,
                "cmpb $, (%eax);je  <RtlFindRange+>;movzwl (%ebx), %eax;movl (%ebx), %edx;movl %eax, %ecx": 1,
                "pushl %esi;pushl -(%ebp);leal -(%ebp), %eax;pushl $;movl %eax, -(%ebp)": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %ecx;cmpl $, (%ebp);jne  <RtlFindRange+>": 1,
                "movl (%ecx), %edi;subl $, %ecx;subl $, %edi;leal (%ecx), %edx;cmpl %edx, %esi": 1,
                "ja  <RtlDeleteOwnersRanges+>;movl (%esi), %ecx;leal (%esi), %edx;movl %edx, %eax;leal (%eax,%ecx,), %ecx": 1,
                "leal (%esi), %eax;pushl %eax;calll - <qsort>;addl $, %esp;jmp - <RtlDeleteOwnersRanges+>": 1,
                "calll *(%eax);cmpl %ebx, %eax;jl  <RtlDeleteOwnersRanges+>;movb (%esi), %cl;andb $-, %cl": 1,
                "movl (%esi), %esi;jmp - <RtlDeleteOwnersRanges+>;orb $, (%esi);popl %edi;popl %esi": 1,
                "movl (%ebp), %edi;pushl %esi;leal -(%ebp), %eax;pushl %edi;pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %ebx;movl %esi, (%esi);movl %esi, (%esi)": 1,
                "cmpl %ebx, %edi;movl %edi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %esi;pushl $": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "je  <RtlDeleteOwnersRanges+>;movl (%eax), %eax;cmpl %ecx, %eax;jne - <RtlDeleteOwnersRanges+>;movl (%esi), %esi": 1,
                "cmpl %ecx, %eax;jne - <RtlDeleteOwnersRanges+>;movl (%esi), %esi;cmpl %ebx, %esi;jne - <RtlDeleteOwnersRanges+>": 1,
                "retl $;movl (%eax), %eax;cmpl %ebx, %eax;je - <RtlDeleteOwnersRanges+>;movl (%ebp), %ecx": 1,
                "je - <RtlDeleteOwnersRanges+>;movl (%ecx), %ecx;movl -(%ebp), %edi;pushl %edi;pushl %ecx": 1,
                "pushl -(%ebp);pushl (%eax);calll *(%eax);cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %eax, (%ecx);je  <IoReportResourceUsage+>;popl %ebp;retl $;nop": 1,
                "subl $, %esp;movl , %eax;andl $, -(%ebp);pushl %ebx;movl %eax, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;pushl $;pushl %ebx;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "movl %edx, (%esi);movl (%edi), %edx;movl %edx, (%esi);movl -(%ebp), %edx;movl %edx, (%esi)": 1,
                "jbe  <RtlDeleteOwnersRanges+>;addl $, %edx;movl %edx, -(%ebp);movl (%edx), %eax;cmpb $, (%eax)": 1,
                "movl %edx, -(%ebp);movl (%edx), %eax;cmpb $, (%eax);movl %eax, -(%ebp);je  <IoDisconnectInterrupt+>": 1,
                "movl (%edx), %eax;cmpb $, (%eax);movl %eax, -(%ebp);je  <IoDisconnectInterrupt+>;movl (%eax), %ecx": 1,
                "movw $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "jo  <RtlDeleteOwnersRanges+>;decl %ebp;addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx)": 1,
                "addb %dh, (%edi);addb %al, (%eax);addb %al, (%eax);nop;nop": 1,
                "movl (%ecx), %edi;pushl %eax;calll - <RtlCheckRegistryKey+>;pushl %eax;pushl (%esi)": 1,
                "pushl $;movl $, %ebx;pushl %ebx;calll - <ExAcquireResourceSharedLite>;movl $, %esi": 2,
                "pushl %eax;pushl %edi;calll - <IoGetDeviceProperty+>;movl %eax, %edi;testl %edi, %edi": 1,
                "jl  <RtlDeleteOwnersRanges+>;pushl $;pushl $;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl (%ebp);calll - <ZwSetValueKey>;pushl (%ebp);movl %eax, %edi": 1,
                "movl (%ebp), %edx;cmpl $, (%edx);movl (%ebp), %eax;movl (%eax), %ecx;movb $, -(%ebp)": 1,
                "andl $, -(%ebp);leal (%ecx), %esi;movl (%ecx), %ecx;testl %ecx, %ecx;movl %ecx, -(%ebp)": 1,
                "leal (%ecx), %esi;movl (%ecx), %ecx;testl %ecx, %ecx;movl %ecx, -(%ebp);jbe - <RtlDeleteOwnersRanges+>": 1,
                "movl (%edx), %ebx;andl $, (%ebp);testl %ebx, %ebx;leal (%edx), %ecx;jbe  <RtlDeleteOwnersRanges+>": 1,
                "pushl $;pushl %edx;pushl %esi;calll - <qsort>;addl $, %esp": 1,
                "movl (%eax), %edx;pushl %esi;movl (%ecx), %esi;cmpl %edx, %esi;jne  <IoIsWdmVersionAvailable+>": 1,
                "movb (%ecx), %dl;andl $, -(%ebp);pushl %ebx;pushl %esi;pushl %edi": 1,
                "ja  <IoRegisterBootDriverReinitialization+>;movl (%ebp), %eax;movl (%eax), %eax;subl $, %eax;leal (%eax), %ebx": 1,
                "movl (%ecx), %eax;movl (%ecx), %ecx;cmpl (%edi), %ecx;jb  <RtlDeleteOwnersRanges+>;ja  <IoRegisterBootDriverReinitialization+>": 1,
                "movb (%edi), %al;testb $, %al;jne - <RtlDeleteOwnersRanges+>;xorl %eax, %eax;popl %edi": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;movb (%esi), %cl": 1,
                "cmpl (%edi), %eax;jae  <IoCheckFunctionAccess+>;pushl (%ebp);pushl (%ebp);pushl %ebx": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl , %eax;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "movl , %eax;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "cmpl %ebx, %eax;je  <IoCreateController+>;pushl $;pushl %ebx;pushl %eax": 1,
                "subl $, %eax;negl %eax;sbbl %eax, %eax;incl %eax;movl %eax, -(%ebp)": 4,
                "jmp  <ObCreateObjectType+>;xorl %edi, %edi;jmp - <RtlCheckRegistryKey+>;movl -(%ebp), %edi;jmp - <RtlCheckRegistryKey+>": 1,
                "pushl %eax;pushl -(%ebp);pushl -(%ebp);pushl $;pushl -(%ebp)": 1,
                "jl - <IoReportResourceForDetection+>;cmpl %edi, -(%ebp);je - <IoReportResourceForDetection+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "cmpl %edi, -(%ebp);je - <IoReportResourceForDetection+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %edi, %esi;jl  <RtlDeleteOwnersRanges+>;pushl $;popl %esi;pushl %esi": 1,
                "movl $, -(%ebp);calll - <ZwSetValueKey>;cmpl %edi, -(%ebp);pushl -(%ebp);movl %eax, %esi": 1,
                "cmpl %edi, -(%ebp);je - <IoReportResourceForDetection+>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl $, (%edx);movl %ebx, (%edx);leal (%edx), %edi": 1,
                "movl %ebx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movzwl (%eax), %eax;shrl %eax": 2,
                "leal (%esi), %eax;cmpl $, -(%eax);jne  <RtlDeleteOwnersRanges+>;pushl %eax;leal -(%esi), %eax": 1,
                "pushl %eax;calll  <RtlDeleteOwnersRanges+>;testb $, (%esi);jne  <RtlDeleteOwnersRanges+>;cmpl $, (%esi)": 1,
                "cmpl $, (%esi);jne - <RtlCheckRegistryKey+>;movl $, (%esi);jmp - <RtlCheckRegistryKey+>;nop": 1,
                "xorl %edx, %edx;pushl $;leal (%ecx), %esi;popl %ecx;divl %ecx": 1,
                "testb %al, %al;jne  <IoDisconnectInterrupt+>;addl $, %esi;decl (%ebp);jne - <RtlDeleteOwnersRanges+>": 1,
                "leave;retl $;movl %ebx, (%esi);jmp - <IoConnectInterrupt+>;movl (%ebp), %esi": 1,
                "jae  <IoDeleteSymbolicLink+>;movl (%eax), %ecx;cmpl %edi, %ecx;jb - <RtlAddRange+>;ja  <IoDeleteSymbolicLink+>": 1,
                "cmpb %cl, (%ebp);jne - <RtlInitializeUnicodePrefix+>;movb (%ebp), %dl;testb %dl, (%eax);jne - <RtlAddRange+>": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %esi;calll - <RtlFreeRangeList+>;testl %eax, %eax": 1,
                "jmp - <RtlDeleteOwnersRanges+>;movl -(%ebp), %ecx;movl %ecx, (%esi);andl $, (%edi);incl -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp - <IoConnectInterrupt+>;movl -(%ebp), %esi;pushl $;popl %ecx": 1,
                "jmp - <IoConnectInterrupt+>;leal (%edx), %esi;movl %esi, (%ecx);movl (%edx), %edx;subl $, %edx": 1,
                "jmp - <RtlFindRange+>;cmpl %edi, %ebx;movl %ebx, %eax;jae - <RtlCheckRegistryKey+>;leal -(%edi), %edx": 1,
                "movl %ebx, %eax;jae - <RtlCheckRegistryKey+>;leal -(%edi), %edx;testb $, (%eax);jne  <IoDeleteSymbolicLink+>": 1,
                "subl $, %edx;jmp - <IoDeleteSymbolicLink+>;xorl %esi, %esi;jmp  <IoDeleteSymbolicLink+>;nop": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $": 1,
                "calll - <FsRtlOplockFsctrl+>;cmpl %edi, %eax;je  <IoDeleteSymbolicLink+>;movl (%eax), %eax;movl (%eax), %eax": 1,
                "popl %ecx;addb %al, (%eax);addb %cl, %ah;int;int": 1,
                "testl %esi, %esi;pushl %edi;movl $, %edi;je  <IoCheckFunctionAccess+>;movl (%esi), %eax": 1,
                "pushl %esi;movl %fs:, %eax;decl (%eax);xorl %esi, %esi;pushl %esi": 1,
                "cmpl %esi, %eax;movl %eax, -(%ebp);jl  <IoDeleteSymbolicLink+>;pushl %ebx;movl -(%ebp), %ebx": 1,
                "testl %eax, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %edi": 1,
                "retl $;movl (%ecx), %eax;movl (%eax), %eax;pushl %esi;movl (%ecx), %esi": 1,
                "pushl %esi;movl (%ecx), %esi;pushl (%esi);pushl (%esi);pushl (%esi)": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;cmpl %edi, %eax": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;cmpl %edi, %eax;movl (%eax), %ecx": 1,
                "movb $, %dl;je  <IoReportResourceUsage+>;cmpl %edi, %ecx;jne  <RtlUpperString+>;testb %dl, %dl": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %ecx;xorl %ebx, %ebx;xorl %esi, %esi": 1,
                "cmpl %ebx, (%edi);movl %eax, -(%ebp);movl %ebx, (%ebp);jbe  <IoReportResourceUsage+>;cmpl %ebx, (%ebp)": 1,
                "leal (%ecx), %edi;movb $, (%ecx);movb (%edx), %al;movb %al, (%ecx);movb (%edx), %al": 1,
                "movb %al, (%ecx);movw (%edx), %ax;movw %ax, (%ecx);movb %bl, (%ecx);movw %bx, (%ecx)": 1,
                "xorl %ebx, %ebx;jmp - <IoReportResourceUsage+>;movl (%ebp), %edi;xorl %ebx, %ebx;incl (%ebp)": 1,
                "xorl %edi, %edi;incl %ecx;cmpl %eax, %esi;je  <IoReportResourceUsage+>;movl (%eax), %edx": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%ebp), %edi;movl (%ebx), %ebx": 1,
                "addl %ebx, %edi;movl (%esi), %esi;cmpl %esi, (%ebp);je  <IoReportResourceUsage+>;cmpl $, (%esi)": 1,
                "shll $, %eax;addl (%esi), %eax;addl $, %edi;cmpl %eax, (%ebp);jb - <IoReportResourceUsage+>": 1,
                "popl %ebx;leave;retl $;jmp  <IoReportResourceUsage+>;movl (%ebp), %eax": 1,
                "ja  <RtlUpperString+>;jmpl *(,%eax,);pushl %esi;calll *(%esi);movl %eax, %edi": 1,
                "cmpl %ebx, %edi;jl  <IoReportResourceUsage+>;movl (%ebp), %eax;cmpl %ebx, %eax;je  <IoReportResourceUsage+>": 1,
                "pushl (%esi);calll - <KeSetEvent>;movl %edi, %eax;popl %edi;popl %esi": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;pushl (%edi);pushl (%edi)": 1,
                "movl (%ebp), %eax;andl $, (%ebp);andl $, -(%ebp);movl (%eax), %esi;cmpl %esi, (%ebp)": 1,
                "popl %ebx;popl %ebp;retl $;cmpb %bl, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "jmp  <IoReportResourceUsage+>;pushl %eax;pushl (%ebp);calll - <ZwDeleteValueKey>;jmp - <RtlDeleteOwnersRanges+>": 1,
                "jmp - <IoReportResourceUsage+>;movl (%ebp), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %edx, -(%ebp);pushl $;jmp  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;inl $, %eax": 1,
                "pushl %edx;jmp  <IoReportResourceUsage+>;movl $, %eax;jmp  <IoReportResourceUsage+>;nop": 1,
                "cmpl %ebx, %eax;movb $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);jne  <IoReportResourceUsage+>;movl (%esi), %eax;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);pushl %edi;cmpl %ebx, -(%ebp);movl -(%ebp), %ecx;je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ecx), %eax;cmpl $-, %eax;movl (%ecx), %edx;movl %eax, -(%ebp)": 1,
                "movl (%ecx), %eax;cmpl $-, %eax;movl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %edx, %ecx;pushl %esi;movb %bl, -(%ebp);movl %ecx, (%eax);calll - <IoReportResourceUsage+>": 1,
                "movb %bl, -(%ebp);movl %ecx, (%eax);calll - <IoReportResourceUsage+>;pushl %ebx;pushl %ebx": 1,
                "movl $, %edi;pushl %edi;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <RtlFreeUnicodeString>;leal (%ebx,%ebx), %eax;movw %ax, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <RtlFreeUnicodeString>;leal (%ebx,%ebx), %eax;movw %ax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;movl $, %esi;pushl %eax;movw %si, -(%ebp);calll - <RtlUpcaseUnicodeString>": 1,
                "addb %cl, (%ebx);addb $, %al;jne  <IoCheckFunctionAccess+>;movb $, -(%ebp);jmp - <RtlPrefixString+>": 1,
                "movb $, -(%ebp);jmp - <RtlPrefixString+>;addl $, %eax;movl %eax, -(%ebp);movl (%edi), %edx": 1,
                "movl (%edx), %eax;pushl -(%ebp);movl (%eax), %eax;movl (%esi), %ecx;pushl %eax": 1,
                "calll  <IoReportResourceUsage+>;movl (%edi), %ecx;calll - <ObfDereferenceObject>;pushl $;pushl %edi": 1,
                "movzwl %ax, %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;leal -(%ebp), %eax": 1,
                "jge  <IoRegisterBootDriverReinitialization+>;cmpl $, %esi;je  <IoReportResourceUsage+>;cmpl $, %esi;jne  <IoReportResourceUsage+>": 1,
                "movl %ecx, (%eax);xorl %ecx, %ecx;movl %ecx, (%eax);cmpl %ecx, (%edi);jne  <IoRegisterBootDriverReinitialization+>": 1,
                "xorl %ecx, %ecx;movl %ecx, (%eax);cmpl %ecx, (%edi);jne  <IoRegisterBootDriverReinitialization+>;movl %eax, (%edi)": 1,
                "movl %edi, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp);jne  <IoRegisterBootDriverReinitialization+>;cmpl $, (%ebp)": 1,
                "pushl %ebx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 2,
                "pushl $;movl %eax, -(%ebp);popl %edi;jne - <IoReportResourceUsage+>;cmpb %al, (%ebp)": 1,
                "popl %edi;jne - <IoReportResourceUsage+>;cmpb %al, (%ebp);jne  <IoReportResourceUsage+>;leal (%ebp), %eax": 1,
                "cmpb %al, (%ebp);jne  <IoReportResourceUsage+>;leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "popl %esp;addb %al, (%eax,%eax);addb %ch, (%ecx);jbe  <IoReportResourceUsage+>;addb %dh, %gs:(%edx)": 1,
                "setne %al;pushl %eax;pushl %edi;pushl (%ebp);calll - <RtlSubAuthoritySid+>": 1,
                "pushl %eax;calll - <IoSetDeviceInterfaceState+>;cmpl %edi, %eax;movl %eax, -(%ebp);jne - <IoReportResourceUsage+>": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movb $, -(%ebp)": 1,
                "movl %eax, (%ecx);movb $, -(%ebp);jmp - <RtlGUIDFromString+>;pushl %ebx;pushl -(%ebp)": 1,
                "calll - <IoCreateDevice+>;movl %eax, %ebx;testl %ebx, %ebx;je - <RtlGUIDFromString+>;movb $, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;jmp - <RtlGUIDFromString+>;pushl -(%ebp);calll - <ZwClose>;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "movl %eax, %edi;movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp - <ObSetSecurityObjectByPointer+>;nop": 1,
                "calll - <ObfDereferenceObject>;jmp - <ObSetSecurityObjectByPointer+>;nop;nop;nop": 1,
                "jmp - <ObSetSecurityObjectByPointer+>;nop;nop;nop;nop": 4,
                "movl %edi, %ecx;calll - <ObfReferenceObject>;movl %esi, %ecx;calll - <ObfDereferenceObject>;testl %edi, %edi": 1,
                "testl %edi, %edi;movl %edi, %esi;jne - <IoReportResourceUsage+>;popl %edi;popl %esi": 1,
                "movl %esp, %ebp;pushl %edi;pushl (%ebp);calll - <IoAttachDeviceToDeviceStack+>;movl %eax, %edi": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;movl %edi, %ecx;calll - <IoInvalidateDeviceRelations+>;movl %eax, %esi": 1,
                "pushl $;leal -(%ebp), %eax;andl $, %ecx;pushl %eax;rep  movsb (%esi), %es:(%edi)": 2,
                "pushl (%ebp);pushl $;pushl -(%ebp);calll *(%edx);movl (%ebp), %edx": 1,
                "movw $, (%eax);movl (%ebp), %eax;addl $, %ebx;movw %bx, (%eax);movl (%ebp), %eax": 1,
                "incl %esp;addb %ah, (%ebp);jbe  <IoCreateController+>;imull $, (%eax), %eax;incl %esp": 1,
                "popal;addb %ch, (%ebp);addb %al, %gs:(%eax);addb %al, (%eax);addb %cl, (%ebp)": 1,
                "int;int;int;int;cmpl $, (%ebp)": 1,
                "addb %ah, ;addb %ch, (%eax,%eax);addb %al, (%eax);addb %cl, %ah;int": 1,
                "movl %edi, %ecx;calll *;pushl -(%ebp);movl (%esi), %esi;calll - <IoConnectInterrupt+>": 1,
                "pushl -(%ebp);movl (%esi), %esi;calll - <IoConnectInterrupt+>;jmp - <RtlDeleteOwnersRanges+>;pushl $": 1,
                "jmp - <RtlCheckRegistryKey+>;movl %eax, %edi;testl %edi, %edi;jge - <RtlCheckRegistryKey+>;jmp - <RtlCheckRegistryKey+>": 1,
                "testl %ebx, %ebx;je  <IoCreateController+>;movl %eax, %esi;movl %ebx, %edi;movsl (%esi), %es:(%edi)": 1,
                "je  <IoCreateController+>;movl (%eax), %edx;movl %edx, (%ecx);pushl $;pushl %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %edx;movb $, (%eax);addl $, %eax;jmp - <RtlAddRange+>": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;addl $, %esi;jmp - <RtlAddRange+>;pushl %ebx": 1,
                "jmp - <RtlAddRange+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <IoCreateController+>": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <RtlUpperChar+>": 1,
                "xorl %eax, %eax;jmp - <RtlAddRange+>;testl %esi, %esi;je - <RtlAddRange+>;jmp - <RtlAddRange+>": 1,
                "cmpl -(%ebp), %eax;je  <IoCheckFunctionAccess+>;incl %esi;addl $, %eax;jmp - <IoCreateController+>": 1,
                "jmp - <IoCreateController+>;movl %esi, (%ecx);cmpl -(%ebp), %esi;jae - <RtlAddRange+>;cmpb $-, (%esi)": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);jne  <IoCreateController+>;cmpl $, (%eax);jb  <IoCreateController+>": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl $, %edi;pushl %edi;pushl %esi": 1,
                "pushl %esi;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>": 2,
                "pushl $;pushl %esi;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "testl %eax, %eax;jl  <IoCreateController+>;pushl $;pushl $;pushl %esi": 1,
                "jl  <IoCreateController+>;pushl $;pushl $;pushl %esi;leal -(%ebp), %eax": 1,
                "popl %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;movl %eax, -(%ebp)": 3,
                "addb %al, (%eax);addb %al, (%esi);imull $, (%eax), %eax;ja  <IoCreateController+>;popal": 1,
                "ja  <IoCreateController+>;popal;addb %dh, (%edx);addb %al, %gs:(%eax,%eax);addb %dh, (%ebx)": 1,
                "addb %al, %gs:(%eax,%eax);addb %dh, (%ebx);popal;addb %ah, (%edx);insb %dx, %es:(%edi)": 2,
                "xorl %edi, %edi;incl %edi;movw %di, (%esi);movl %edi, (%esi);movw $, (%esi)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;pushl %eax": 2,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movb $-, (%ecx);movb $-, (%edx);movb $, (%ecx)": 1,
                "movw %ax, (%ecx);pushl $;addl $, %ecx;pushl %esi;pushl %ecx": 1,
                "addl $, -(%ebp);addl $, %esp;addl $, %esi;decl %edi;jne - <IoCreateController+>": 1,
                "cmpl %eax, (%ebp);je  <IoCreateController+>;pushl $;pushl %eax;pushl (%ebp)": 1,
                "incl %eax;movl %eax, -(%ebp);je - <IoCreateController+>;cmpl , %ebx;je  <IoDisconnectInterrupt+>": 1,
                "jmp - <RtlCheckRegistryKey+>;addl $, %esi;movl (%esi), %ecx;movl $, %eax;andl %eax, %ecx": 1,
                "je  <IoDisconnectInterrupt+>;movl %esi, (%ebp);pushl (%ebp);leal -(%ebp), %eax;movb %bl, -(%ebp)": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);calll - <IoGetAttachedDeviceReference>": 1,
                "cmpl %ebx, %edi;jl  <IoGetDmaAdapter+>;cmpl %ebx, -(%ebp);je  <IoGetDmaAdapter+>;pushl (%ebp)": 1,
                "je  <IoGetDmaAdapter+>;movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "popl %ebx;leave;retl $;pushl (%ebp);pushl (%ebp)": 2,
                "movl %eax, (%edi);jmp - <RtlGUIDFromString+>;movl $, -(%ebp);jmp - <RtlGUIDFromString+>;movl -(%ebp), %eax": 1,
                "subl %edi, %eax;movl %eax, -(%ebp);subl %ecx, %eax;movw %ax, -(%ebp);movw %ax, -(%ebp)": 1,
                "jmp - <IoSetDeviceInterfaceState+>;cmpw $, (%ebx);je - <IoSetDeviceInterfaceState+>;pushl $;pushl %esi": 1,
                "pushl %ss;subw -(%ebp), %dx;decl %edx;decl %edx;jmp - <IoReportResourceForDetection+>": 1,
                "cmpl , %esi;jb  <IoDisconnectInterrupt+>;movl $, %esi;movl %ebx, %ecx;calll *": 1,
                "calll - <IoIsWdmVersionAvailable+>;testl %eax, %eax;jl - <IoGetDeviceProperty+>;pushl $;popl %ecx": 1,
                "movl %ebx, (%edi);movl $, %ebx;pushl %esi;movl %esi, (%edi);movw $, (%edi)": 1,
                "movl (%edx), %eax;movl %eax, (%ecx);movl (%edx), %eax;movl %eax, (%edi);jmp - <IoReportResourceUsage+>": 1,
                "movl %eax, (%ecx);movl (%edx), %eax;movl %eax, (%edi);jmp - <IoReportResourceUsage+>;nop": 1,
                "pushl (%ebp);calll - <RtlQueryRegistryValues+>;testl %eax, %eax;jl  <RtlDeleteRegistryValue+>;pushl %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <ZwDeleteValueKey>;testb $, (%ebp)": 1,
                "jl  <IoCheckFunctionAccess+>;addl %eax, (%esi);movl (%esi), %eax;shll $, %eax;addl $, %ebx": 1,
                "jmp - <IoReportResourceUsage+>;pushl (%edi);calll - <RtlFreeRangeList>;jmp - <IoReportResourceUsage+>;nop": 1,
                "cmpl $, (%eax);je  <IoCheckFunctionAccess+>;movl (%esi), %edx;movl (%edx), %edx;testl %edx, %edx": 1,
                "je  <RtlDeleteRegistryValue+>;cmpl %edi, %edx;je  <RtlDeleteRegistryValue+>;testb $, (%esi);jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;pushl %esi;pushl %edi;calll *(%edi);testb %al, %al": 1,
                "pushl $;andl $, %ecx;leal (%ecx,%ecx), %ecx;pushl %ecx;xorl %ecx, %ecx": 1,
                "movb (%eax), %cl;pushl %ecx;pushl (%eax);pushl (%eax);pushl (%eax)": 1,
                "movl (%eax), %edx;movl (%ebp), %ecx;andl $, (%ecx);movl %edx, (%ecx);movl (%eax), %ecx": 1,
                "movl (%ebp), %eax;calll *(%eax);testl %eax, %eax;jl  <RtlDeleteRegistryValue+>;movl (%ebp), %eax": 1,
                "calll *(%eax);testl %eax, %eax;jl  <RtlDeleteRegistryValue+>;movl (%ebp), %eax;andl $, (%esi)": 1,
                "movl %edi, %ecx;sbbl %edx, %ecx;addl $, %eax;adcl $, %ecx;xorl %edx, %edx": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);pushl %ebx;leal (%ecx), %eax": 1,
                "leal -(%ebp), %eax;cmpl %eax, %ebx;je  <RtlDeleteRegistryValue+>;pushl %esi;pushl %edi": 1,
                "je  <RtlDeleteRegistryValue+>;pushl %esi;pushl %edi;leal -(%ebx), %esi;cmpb $, (%esi)": 1,
                "pushl %ecx;leal (%esi), %edi;movl %edi, -(%ebp);movl (%esi), %eax;pushl $": 1,
                "popl %edi;popl %esi;movl -(%ebp), %eax;popl %ebx;leave": 1,
                "calll - <IoReportResourceUsage+>;movl %eax, %ecx;cmpl %edi, %ecx;movl %ecx, -(%ebp);je  <RtlDeleteRegistryValue+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %edx, -(%ebp);movl %ecx, -(%ebp);calll - <RtlAddRange+>": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%esi);je  <IoCheckFunctionAccess+>;movl (%ebp), %esi": 1,
                "retl $;xorl %esi, %esi;jmp - <RtlDeleteRegistryValue+>;movl $, %ebx;jmp - <RtlDeleteRegistryValue+>": 1,
                "jmp - <RtlDeleteRegistryValue+>;movl $, %ebx;jmp - <RtlDeleteRegistryValue+>;nop;nop": 1,
                "movl $, %ebx;jmp - <RtlDeleteRegistryValue+>;nop;nop;nop": 1,
                "movl (%edi), %eax;movl (%edi), %esi;leal (%eax,%eax,), %eax;shll $, %eax;addl %esi, %eax": 1,
                "movl (%esi), %ecx;cmpl $, %ecx;je  <RtlUpperString+>;cmpl $, %ecx;je  <RtlUpperString+>": 1,
                "movl (%esi), %ecx;cmpl (%eax), %ecx;movl (%eax), %ebx;jb  <RtlUpperString+>;ja  <RtlDeleteRegistryValue+>": 1,
                "cmpl %ecx, %ebx;ja  <RtlUpperString+>;movl (%esi), %ebx;xorl %eax, %eax;decl %ebx": 1,
                "movl -(%ebp), %ecx;cmpl (%edi), %eax;je  <RtlUpperString+>;movl %eax, (%edi);movl %ebx, (%edi)": 1,
                "cmpl (%ecx), %esi;jae  <RtlDeleteRegistryValue+>;jmp  <RtlDeleteRegistryValue+>;nop;nop": 1,
                "jae  <RtlDeleteRegistryValue+>;jmp  <RtlDeleteRegistryValue+>;nop;nop;nop": 1,
                "testl %esi, %esi;movb %dl, (%ebp);jne  <IoCheckFunctionAccess+>;movl (%ebp), %edi;movl (%edi), %esi": 1,
                "cmpl %esi, (%ecx);movl (%eax), %edi;ja  <RtlDeleteRegistryValue+>;jb  <RtlDeleteRegistryValue+>;cmpl %edi, (%ecx)": 1,
                "movl (%ecx), %edx;movl (%eax), %ebx;ja  <RtlDeleteRegistryValue+>;jb  <RtlDeleteRegistryValue+>;cmpl %ebx, %edx": 1,
                "popl %ebx;leave;retl $;subl (%ebp), %eax;sarl $, %eax": 1,
                "movl (%ebp), %edi;pushl %edi;calll - <KeDisconnectInterrupt>;pushl $;leal (%edi), %esi": 1,
                "pushl $;leal (%edi), %esi;popl %ebx;movl (%esi), %eax;testl %eax, %eax": 1,
                "movl (%esi), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;addl $, %esi;decl %ebx": 1,
                "retl $;movl (%eax), %eax;movl %eax, -(%ebp);incl %eax;movl %eax, -(%ebp)": 1,
                "jmp - <IoGetDmaAdapter+>;shll $, %esi;addl , %esi;pushl %edi;movl (%ebp), %edi": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);xorl %esi, %esi;popl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;movb $, (%eax)": 3,
                "jmp - <RtlPrefixString+>;pushl %edi;calll - <IoReportResourceUsage+>;pushl %ebx;pushl %ebx": 1,
                "pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlDeleteOwnersRanges+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <IoConnectInterrupt+>;movl %eax, %ebx;cmpl %esi, -(%ebp)": 1,
                "calll - <RtlCheckRegistryKey+>;pushl %eax;pushl (%edi);pushl %edi;calll - <RtlDeleteOwnersRanges+>": 1,
                "jne  <IoCheckFunctionAccess+>;jmp - <IoWMIRegistrationControl+>;movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %edx, (%eax)": 1,
                "cmpl %esi, %eax;movl %eax, (%ebx);je  <IoCheckFunctionAccess+>;movl (%edi), %ecx;movl -(%ebp), %esi": 1,
                "pushl $;pushl -(%ebp);andl $, %ecx;rep  movsb (%esi), %es:(%edi);calll - <ExFreePoolWithTag>": 2,
                "testl %eax, %eax;jl - <RtlCheckRegistryKey+>;pushl (%edi);leal -(%ebp), %eax;pushl (%ebx)": 1,
                "jl - <RtlCheckRegistryKey+>;pushl (%edi);leal -(%ebp), %eax;pushl (%ebx);movw $, -(%ebp)": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <IoDisconnectInterrupt+>;pushl $;pushl %eax": 1,
                "jmp - <RtlCheckRegistryKey+>;movl , %ecx;cmpl (%ecx), %ebx;je - <IoOpenDeviceRegistryKey+>;movl (%eax), %ecx": 1,
                "cmpl $, -(%ebp);jne  <IoDisconnectInterrupt+>;cmpl %edx, %edi;je  <IoDisconnectInterrupt+>;movl (%edi), %ecx": 1,
                "cmpl $, %ecx;movl %edi, (%ebp);jb - <RtlGetFirstRange+>;movl (%ebx), %esi;movl (%ebp), %edi": 1,
                "movl %edi, (%ebp);jb - <RtlGetFirstRange+>;movl (%ebx), %esi;movl (%ebp), %edi;addl $-, %ecx": 1,
                "movl (%ebx), %esi;movl (%ebp), %edi;addl $-, %ecx;cmpl %eax, %ecx;movl %esi, (%edi)": 1,
                "movl %esi, (%edi);movl %eax, (%edi);movl %eax, %esi;jl  <IoCheckFunctionAccess+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jbe - <SeQuerySecurityDescriptorInfo+>;cmpb $, %dl;je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "pushl (%ebp);calll - <NtSetInformationProcess+>;testb %al, %al;je  <IoCheckFunctionAccess+>;cmpl $, -(%ebp)": 1,
                "movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "ja  <IoCheckFunctionAccess+>;movl (%esi), %ecx;movl -(%ebp), %edx;testl %edx, %edx;movl %ecx, (%eax)": 1,
                "incl %edx;movl %edx, (%ebp);movl (%ecx), %edi;leal (%ecx), %edx;shll $, %edi": 1,
                "andw $, (%edx);movb $, (%edx);movb $-, (%edx);movb $, (%edx);movb $, (%edx)": 1,
                "jmp  <IoDisconnectInterrupt+>;movb (%esi), %dl;andl $, -(%ebp);movzbl %dl, %eax;subl $, %eax": 1,
                "je - <IoDisconnectInterrupt+>;testb %dl, %dl;je - <IoDisconnectInterrupt+>;cmpb $, %dl;jae - <IoDisconnectInterrupt+>": 1,
                "jne  <IoDisconnectInterrupt+>;movl (%esi), %edi;movl (%esi), %ecx;andl $, -(%ebp);movl (%esi), %edx": 1,
                "movl (%eax), %ecx;movl %edx, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "jne  <IoForwardIrpSynchronously+>;movl -(%ebp), %ecx;incw (%ecx);testb $, (%eax);movb $-, (%eax)": 1,
                "movb $, (%eax);addl $, %eax;decl (%ecx);jmp - <IoDisconnectInterrupt+>;movl $, -(%ebp)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;pushl %edi": 2,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;pushl %edi;pushl (%ebp)": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, %esi;movl %edi, (%ebx);movl %edi, -(%ebp)": 1,
                "je  <IoForwardIrpSynchronously+>;movl (%ecx), %edx;testl %edx, %edx;je  <IoForwardIrpSynchronously+>;addl $, %ecx": 1,
                "je  <IoForwardIrpSynchronously+>;addl $, %ecx;testl %edx, %edx;jbe  <IoForwardIrpSynchronously+>;movl %edx, (%ebp)": 1,
                "movl %edx, (%ebp);movl (%ecx), %edx;addl %edx, -(%ebp);addl $, %ecx;testl %edx, %edx": 1,
                "movl (%ecx), %edx;addl %edx, -(%ebp);addl $, %ecx;testl %edx, %edx;jbe  <IoDisconnectInterrupt+>": 1,
                "decl %ecx;leal (%eax), %esi;js  <IoDisconnectInterrupt+>;leal (%ecx), %edi;movl (%esi), %ecx": 1,
                "leal (%eax), %esi;js  <IoDisconnectInterrupt+>;leal (%ecx), %edi;movl (%esi), %ecx;leal (%esi), %edx": 1,
                "movl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ecx), %eax;andw $, (%ecx);movl %eax, -(%ebp)": 1,
                "movl (%ecx), %eax;andw $, (%ecx);movl %eax, -(%ebp);leal (%ecx), %edx;shll $, %eax": 1,
                "movl (%ebp), %esi;pushl $;movl %edx, %edi;popl %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "pushl $;pushl %esi;calll - <ExFreePoolWithTag>;movl %edi, %eax;popl %edi": 1,
                "je  <IoDisconnectInterrupt+>;cmpl $, (%eax);je - <RtlCheckRegistryKey+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl -(%ebp);calll - <IoDisconnectInterrupt+>": 1,
                "cmpl %esi, -(%ebp);movl %eax, %edi;je  <IoDisconnectInterrupt+>;pushl %esi;pushl -(%ebp)": 2,
                "pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %esi, %edi;jl  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %eax;jne  <IoDisconnectInterrupt+>;cmpb $, -(%ebp);je  <IoDisconnectInterrupt+>;cmpl $, (%eax)": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <RtlCheckRegistryKey+>": 1,
                "cmpl %edi, %ebx;movl %edi, (%eax);je  <IoCheckFunctionAccess+>;cmpl %edi, (%ebx);je  <IoCheckFunctionAccess+>": 1,
                "cmpl %edi, %ebx;je  <IoDisconnectInterrupt+>;cmpl %edi, (%ebx);je  <IoDisconnectInterrupt+>;cmpl %edi, %eax": 1,
                "pushl $;movl %eax, (%ebp);calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;je  <IoCheckFunctionAccess+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebx), %ebx;movl (%ebp), %ecx;subl %ebx, %ecx": 1,
                "movl (%ebp), %ecx;subl %ebx, %ecx;leal (%eax,%ebx), %edi;movl %ecx, %ebx;shrl $, %ecx": 1,
                "movl %ecx, %ebx;shrl $, %ecx;leal (%edx), %esi;rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx": 1,
                "popl %esi;popl %ebx;popl %ebp;retl $;cmpl %edi, (%eax)": 1,
                "leal (%ebp), %eax;pushl %eax;calll - <PsCreateSystemThread>;cmpl %ebx, %eax;jl  <IoDisconnectInterrupt+>": 1,
                "je  <RtlUpperString+>;pushl $;popl %edi;pushl %ebx;leal (%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl %ebx;pushl ;pushl $": 3,
                "movl %eax, %esi;cmpl %ebx, %esi;jl  <IoDisconnectInterrupt+>;pushl %edi;pushl (%ebp)": 1,
                "calll - <KeSetBasePriorityThread>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;pushl (%ebp);calll - <ZwClose>": 1,
                "popl %esi;popl %ebp;retl $;movzbl (%eax), %esi;jmp - <IoDisconnectInterrupt+>": 1,
                "cmpb $, (%edx);je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %esi;movl (%edx), %esi": 1,
                "movb %bl, (%eax);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%edx), %eax": 1,
                "popl %ebx;leave;retl $;movl -(%ebp), %eax;orw $-, (%ecx)": 1,
                "jmp - <IoDisconnectInterrupt+>;testb $, (%ebp);je - <RtlCheckRegistryKey+>;movl $, %eax;jmp - <RtlCheckRegistryKey+>": 1,
                "jmp - <RtlCheckRegistryKey+>;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;jmp - <IoDeleteSymbolicLink+>": 1,
                "calll - <IoGetDeviceProperty+>;testl %eax, %eax;jl - <RtlCheckRegistryKey+>;leal -(%ebp), %eax;pushl %eax": 1,
                "je - <RtlCheckRegistryKey+>;jmp  <IoCheckFunctionAccess+>;incl %esp;addb %ah, (%ebp);jbe  <IoForwardIrpSynchronously+>": 1,
                "addb %dh, (%edx);je  <IoForwardIrpSynchronously+>;addb %ah, %gs:(%eax,%eax);addb %cl, %ah;int": 1,
                "andl $, (%eax,%ebx);jmp - <RtlCreateRegistryKey+>;pushl $;jmp - <IoWMIRegistrationControl+>;pushl %ebx": 1,
                "movl (%ebx), %edx;cmpl %esi, %edx;je  <IoCheckFunctionAccess+>;pushl $;popl %ecx": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %esi;addl $, %edi;movl (%edi), %eax;movl %eax, (%esi)": 1,
                "addl $, %esi;cmpl -(%ebp), %ebx;jb - <IoForwardIrpSynchronously+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <KeIoSetAccessProcess+>;movl -(%ebp), %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "calll - <IoOpenDeviceRegistryKey+>;jmp - <RtlUpcaseUnicodeStringToOemString+>;cmpw $, %cx;jb  <IoForwardIrpSynchronously+>;cmpw $, %cx": 1,
                "movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp - <IoDisconnectInterrupt+>": 1,
                "jmp - <SeDeleteAccessState+>;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp - <IoInitializeRemoveLockEx+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);jmp - <IoInitializeRemoveLockEx+>;cmpb %cl, -(%ebp);movb $, -(%ebp)": 1,
                "cmpl %ecx, %edi;movl %edi, %eax;jae  <IoForwardIrpSynchronously+>;pushl %ebx;pushl %esi": 1,
                "incl %eax;cmpl %ecx, %eax;jb - <IoForwardIrpSynchronously+>;popl %esi;popl %ebx": 1,
                "leal (%esi), %eax;ja  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;subl %eax, %ecx;pushl %ecx": 1,
                "pushl %ecx;movzwl (%eax), %ecx;pushl %ecx;pushl %eax;calll - <IoForwardIrpSynchronously+>": 1,
                "movl $, %eax;jmp - <RtlDeleteAce+>;movl (%ebp), %ecx;movl (%ecx), %ecx;testb $, (%ecx)": 1,
                "movl %ecx, (%eax);movl %eax, %edx;movl $, %ecx;calll - <KeDisconnectInterrupt+>;popl %ebp": 2,
                "movb $, (%ebp);jmp - <RtlRemoveUnicodePrefix+>;movl -(%ebp), %ecx;cmpl -(%ebp), %ecx;jne - <MmPrefetchPages+>": 1,
                "pushl %esi;pushl ;calll - <RtlEqualSid>;testb %al, %al;je - <RtlGetAce+>": 1,
                "pushl %eax;calll - <SeCaptureSecurityDescriptor>;movl %eax, -(%ebp);cmpl %esi, %eax;jl - <RtlGUIDFromString+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <RtlGUIDFromString+>;andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "jl  <MmAllocateMappingAddress+>;cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <RtlGetSaclSecurityDescriptor>": 1,
                "movl %edi, %ecx;subl %eax, %ecx;movl (%ecx), %ecx;cmpl %edx, %ecx;jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %edx, %ecx;jne  <IoCheckFunctionAccess+>;movb $, -(%ebp);jmp - <NtQueryVolumeInformationFile+>": 1,
                "movl %ecx, (%eax);jmp - <NtQueryVolumeInformationFile+>;nop;nop;nop": 1,
                "movl %eax, ;xorl %edi, %edi;movl %esi, %ecx;calll *;movl %edi, %eax": 1,
                "pushl %ebx;pushl %edi;calll - <KeSetEvent>;jmp - <RtlPrefixString+>;pushl $": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <PoQueueShutdownWorkItem+>;calll - <KeInitializeEvent+>": 1,
                "calll - <KeInitializeEvent+>;movb $, %cl;movl , %ebx;calll *%ebx;movb %al, -(%ebp)": 1,
                "calll *%ebx;movl (%esi), %edx;cmpl %edx, %esi;jne  <PoQueueShutdownWorkItem+>;movb %al, %cl": 1,
                "addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <PoQueueShutdownWorkItem+>;jns  <PoQueueShutdownWorkItem+>": 1,
                "je  <PoQueueShutdownWorkItem+>;jb  <PoQueueShutdownWorkItem+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%esi)": 1,
                "addb %ch, (%eax,%eax);addb %al, (%esi);imull $, (%eax), %eax;pushl %ebx;addb %bh, (%ecx)": 2,
                "movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);calll *;cmpl $, %eax": 3,
                "movl (%eax), %eax;shrl %eax;cmpw %bx, -(%ecx,%eax,);jne  <IoRegisterBootDriverReinitialization+>;addw $-, %dx": 1,
                "cmpw %bx, -(%ecx,%eax,);jne  <IoRegisterBootDriverReinitialization+>;addw $-, %dx;movw %dx, -(%ebp);pushl $": 1,
                "pushl %eax;pushl (%ebp);calll - <RtlEqualUnicodeString>;testb %al, %al;je  <IoRegisterBootDriverReinitialization+>": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);leal (%ebp), %eax": 3,
                "calll - <ZwClose>;cmpl %ebx, (%ebp);jge  <IoCheckFunctionAccess+>;cmpl %ebx, (%ebp);jne  <IoRegisterBootDriverReinitialization+>": 1,
                "jne  <IoRegisterBootDriverReinitialization+>;movb $, (%edi);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <NtFindAtom+>;testl %eax, %eax;jge  <IoRegisterBootDriverReinitialization+>;cmpb $, (%edi);jne  <IoRegisterBootDriverReinitialization+>": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);pushl (%ebx)": 1,
                "addb %al, (%eax);addb %ah, ;addb %bl, (%eax,%eax);addb %dh, (%edi);popl %edx": 1,
                "jmp - <RtlQueryRegistryValues+>;movl $, (%ebp);jmp - <RtlQueryRegistryValues+>;pushl -(%ebp);pushl $": 1,
                "movl $, %eax;jmp - <IoGetDeviceProperty+>;nop;decl %esp;addb %ch, (%edi)": 1,
                "addb %al, (%eax);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "jae  <IoRegisterBootDriverReinitialization+>;je  <IoRegisterBootDriverReinitialization+>;addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx)": 2,
                "je  <IoRegisterBootDriverReinitialization+>;addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);jne  <IoRegisterBootDriverReinitialization+>": 2,
                "addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);jne  <IoRegisterBootDriverReinitialization+>;jb  <IoRegisterBootDriverReinitialization+>": 2,
                "insb %dx, %es:(%edi);addb %dl, (%ebx);addb %dh, %gs:(%eax,%eax);addb %cl, (%eax);popal": 8,
                "addb %dh, %fs:(%edi);popal;addb %dh, (%edx);addb %ah, %gs:(%eax);addb %dl, (%eax)": 13,
                "jb  <IoRegisterBootDriverReinitialization+>;outsl (%esi), %dx;addb %ah, (%esi);imull $, (%eax), %eax;jae  <IoRegisterBootDriverReinitialization+>": 1,
                "leal (%eax), %ecx;cmpl %ecx, (%ecx);je - <IoSetDeviceInterfaceState+>;jmp  <IoCheckFunctionAccess+>;nop": 1,
                "movl %edx, ;movl $, %edx;xorl %ecx, %ecx;incl %ecx;movl %eax, ": 1,
                "incl %ecx;movl %eax, ;movl %eax, ;movl %eax, ;movl %eax, ": 1,
                "movl %eax, ;movl %eax, ;movl $, %edx;movl %eax, ;movl %eax, ": 1,
                "movl $, %edx;movl %eax, ;movl %eax, ;movl %eax, ;movl $, %eax": 1,
                "movb %cl, ;movb $, ;movl %edx, ;movl %edx, ;movl %ecx, ": 1,
                "movl %eax, (%ecx);movl (%edx), %eax;movl (%edx), %ebx;leal -(%eax,%ebx), %eax;movl %eax, (%edi)": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movzwl -(%ebp), %eax;pushl $": 1,
                "cmpl $, %edi;jne - <RtlCheckRegistryKey+>;jmp  <IoCheckFunctionAccess+>;pushl $;popl %ebx": 1,
                "popl %ebx;movb $, -(%ebp);jmp - <RtlCheckRegistryKey+>;testb $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "je - <RtlCheckRegistryKey+>;cmpl %edi, %eax;je - <RtlCheckRegistryKey+>;cmpl $, (%esi);jne - <RtlCheckRegistryKey+>": 4,
                "je - <RtlCheckRegistryKey+>;cmpl $, (%esi);je - <RtlCheckRegistryKey+>;cmpl %edi, %eax;je - <RtlCheckRegistryKey+>": 3,
                "jmp - <ExInitializePagedLookasideList+>;andl $, (%ebp);movl (%ebp), %eax;jmp - <ExInitializePagedLookasideList+>;movl (%ebp), %eax": 1,
                "andl $, (%ebp);movl (%ebp), %eax;jmp - <ExInitializePagedLookasideList+>;movl (%ebp), %eax;andl $, (%eax)": 1,
                "movb %al, -(%ebp);je - <IoConnectInterrupt+>;jmp - <IoConnectInterrupt+>;movl , %edi;jmp - <IoConnectInterrupt+>": 1,
                "movb -(%ebp), %cl;movb %cl, (%eax);movl %eax, (%eax);movl %eax, (%eax);movl -(%ebp), %ecx": 1,
                "movl %ecx, (%eax);movl %edi, (%eax);leal (%edi), %ecx;movl (%ecx), %edx;movl %ecx, (%eax)": 1,
                "cmpl $, -(%ebp);jne - <IoConnectInterrupt+>;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "movl %esi, -(%ebp);calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax;movl %eax, ;je  <IoCheckFunctionAccess+>": 1,
                "movl %eax, ;je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %edi;pushl %esi": 1,
                "pushl %ebx;pushl %edi;pushl %esi;addl $, %eax;pushl %eax": 1,
                "movl %esi, (%eax);movl , %eax;movl %esi, (%eax);movl , %eax;movb $, (%eax)": 1,
                "movl %esi, (%eax);movl , %eax;movb $, (%eax);movl , %eax;movb $, (%eax)": 1,
                "movl , %eax;addl $, %eax;movl $, %ebx;pushl %ebx;movl %eax, (%eax)": 1,
                "addl $, %eax;movl $, %ebx;pushl %ebx;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "movl , %eax;pushl $;pushl %esi;movl $, (%eax);calll - <ExAllocatePoolWithTag>": 1,
                "movl , %ecx;movl %eax, (%ecx);movl , %eax;cmpl %esi, (%eax);je  <IoCheckFunctionAccess+>": 1,
                "jmp - <FsRtlBalanceReads+>;nop;nop;nop;nop": 1,
                "calll - <RtlGetAce+>;movl %eax, %edi;testl %edi, %edi;jl  <IoRegisterBootDriverReinitialization+>;leal (%ebp), %eax": 1,
                "jl  <IoRegisterBootDriverReinitialization+>;movl (%ebp), %eax;cmpl $, (%eax);jne  <IoRegisterBootDriverReinitialization+>;cmpl $, (%eax)": 1,
                "subl $, %esp;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %ah, (%esi);imull $, (%eax), %eax;addb %al, (%eax)": 5,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);movl $, (%eax);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;movl $, (%eax);jmp - <IoOpenDeviceRegistryKey+>;movl $, %edi;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "movl $, %edi;jmp - <IoOpenDeviceRegistryKey+>;movl $, (%eax);jmp - <IoOpenDeviceRegistryKey+>;cmpl %edx, (%eax)": 1,
                "movl $, %edi;jmp - <IoOpenDeviceRegistryKey+>;nop;nop;nop": 2,
                "movl (%ebp), %ecx;andl $, (%ecx);movl %edx, (%ecx);movl (%eax), %eax;movl (%ebp), %ecx": 2,
                "divl (%ecx);popl %ebp;retl $;nop;nop": 1,
                "movw (%ecx), %dx;movw %dx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl (%ecx), %ecx": 1,
                "movl $, ;movl $, ;movl $, ;movl $, ;movl $, ": 10,
                "movl $, ;movl $, ;calll  <RtlCreateUnicodeString+>;retl;nop": 1,
                "outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax);addb %dl, (%edx);outsl (%esi), %dx": 5,
                "movl %edx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax)": 1,
                "movl $, -(%ebp);jmp - <RtlSubAuthoritySid+>;cmpl %esi, ;je - <IoReportResourceUsage+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movb $, (%ebp);jmp - <RtlEqualUnicodeString+>;pushl $;popl %ebx;movl %edx, -(%ebp)": 1,
                "jmp - <RtlEqualUnicodeString+>;pushl $;popl %ebx;movl %edx, -(%ebp);movl %edx, (%ebp)": 1,
                "movl %ebx, (%ebp);jmp - <NtCreateSection+>;andw $, (%edx);movl %fs:, %eax;movl (%eax), %eax": 1,
                "popl %ecx;popl %ecx;jne  <ObCreateObjectType+>;movl $, (%ebx);jmp  <ObCreateObjectType+>": 2,
                "jmp  <ObCreateObjectType+>;nop;pushl %edi;addb %ah, (%ecx);imull $, (%eax), %eax": 1,
                "jmp  <IoRegisterBootDriverReinitialization+>;decw (%ecx);jmp - <ObFindHandleForObject+>;xorl %esi, %esi;jmp - <IoWMIRegistrationControl+>": 1,
                "xorl %ebx, %ebx;jmp - <ObFindHandleForObject+>;testl %edi, %edi;jne  <NtQueryInformationAtom+>;jmp - <ObFindHandleForObject+>": 1,
                "testl %edi, %edi;jne  <NtQueryInformationAtom+>;jmp - <ObFindHandleForObject+>;movl -(%ebp), %esi;cmpl %edi, %esi": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;jne  <IoCheckFunctionAccess+>;movl %esi, (%eax);cmpl $, (%ebp)": 1,
                "movl , %ecx;movl (%ecx), %ecx;movl -(%ebp), %ebx;cmpl %ecx, %ebx;jne  <IoCheckFunctionAccess+>": 1,
                "cmpl %ecx, %ebx;jne  <IoCheckFunctionAccess+>;addl $, %eax;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %edi, %ecx;movl %esi, (%eax);calll *;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "leave;retl $;movl -(%ebp), %eax;jmp - <IoRegisterBootDriverReinitialization+>;andl $, (%edi)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);jmp - <PsSetProcessWindowStation+>;movl $, -(%ebp);jmp  <ObSetSecurityDescriptorInfo+>": 1,
                "pushl %esi;movl (%ebp), %esi;cmpw $, (%esi);pushl %edi;movl $, %ebx": 1,
                "movl %eax, ;cmpw $, (%esi);setne %al;movb %al, ;movw (%esi), %ax": 1,
                "cmpl (%eax), %edx;jb - <RtlDeleteOwnersRanges+>;ja - <RtlDeleteOwnersRanges+>;movl (%ecx), %edx;cmpl (%eax), %edx": 1,
                "jmp - <RtlDeleteOwnersRanges+>;movl (%eax), %edx;movl %edx, -(%ebp);jmp - <RtlDeleteOwnersRanges+>;movl (%edx), %esi": 1,
                "movl %eax, (%esi);movl %eax, (%edx);movb (%ebp), %dl;jmp - <RtlDeleteOwnersRanges+>;movl $, %eax": 1,
                "jmp - <RtlDeleteOwnersRanges+>;movl %eax, (%edi);movl %ecx, (%edi);jmp - <RtlDeleteOwnersRanges+>;movl %eax, (%ecx)": 1,
                "movl %ecx, (%edi);jmp - <RtlDeleteOwnersRanges+>;movl %eax, (%ecx);movl %eax, (%ecx);movl (%ebp), %ecx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <RtlGetFirstRange>": 1,
                "pushl $;andl $, %eax;andl $, %ecx;pushl %ecx;pushl %eax": 1,
                "andl $, %eax;andl $, %ecx;pushl %ecx;pushl %eax;pushl (%ebp)": 1,
                "jge  <IoCheckFunctionAccess+>;negl %eax;cmpl %ecx, %eax;jae - <IoGetDeviceProperty+>;jmp  <IoCheckFunctionAccess+>": 1,
                "xorl %ecx, %ecx;cmpl %ecx, (%ebp);notl %eax;jbe  <RtlUpperString+>;movl (%ebp), %edx": 1,
                "xorl (,%edx,), %eax;incl %ecx;cmpl (%ebp), %ecx;jb - <RtlUpperString+>;notl %eax": 1,
                "notl %eax;popl %ebp;retl $;nop;nop": 1,
                "orl $, %eax;shrl (%ebx);cmpb (%eax), %al;ficoms -(%ecx);pushl %ecx": 1,
                "movl $, %edi;andl %esp, %eax;movb $, %bl;cltd;xchgl %ebp, %eax": 1,
                "je  <RtlUpperString+>;movl $, %esp;aam $;movsl (%esi), %es:(%edi);fisttps -(%edx)": 1,
                "movl $, %esp;aam $;movsl (%esi), %es:(%edi);fisttps -(%edx);xchgl %ebp, %eax": 1,
                "cmpl $, %eax;movb $, %ah;cmpl -(%ebp,%edi,), %ebx;lodsl (%esi), %eax;insb %dx, %es:(%edi)": 1,
                "movl $, %edi;addl (%edx), %ebx;incl %edi;aad $-;scasl %es:(%edi), %eax": 1,
                "decl (%ecx);xchgl %ebx, %eax;daa;scasb %es:(%edi), %al;addb %cl, (%edx)": 1,
                "calll ;xchgl %ebx, %eax;shll (%ecx);pushl %edx;repne  fisttps -(%edi)": 1,
                "jp  <RtlUpperString+>;incl %ecx;retl;outl %eax, %dx;pushal": 1,
                "jns - <RtlUpperString+>;imull $, -(%esi), %eax;andl $-, -(%esi);shrb %cl, (%edi);loop ": 1,
                "movb $, %bl;cmpsl %es:(%edi), (%esi);calll *%edi;retl $-;sbbl $, %eax": 1,
                "cmpsl %es:(%edi), (%esi);calll *%edi;retl $-;sbbl $, %eax;retl $-": 1,
                "retl $-;repne  arpl %bp, %sp;pushfl;movl %eax, ;insl %dx, %es:(%edi)": 1,
                "pushl %cs;jmp - <RtlUpperString+>;popl %es;jb  <RtlUpperString+>;pushl %edi": 1,
                "jb  <RtlUpperString+>;pushl %edi;addb %al, -;adcb $, %al;movl $, %eax": 1,
                "jnp  <RtlUpperString+>;sbbl -(%esi), %esi;xchgl %edx, %eax;orl $, %eax;outl %eax, %dx": 1,
                "imull $, -(%ecx), %ecx;pushl $-;scasb %es:(%edi), %al;fcompl -(%edx);fldenv (%esi)": 1,
                "movb $, %bl;cmpsb %es:(%edi), (%esi);movl %eax, ;sarb -(%edx);subl %edx, -(%edi)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;cmpl %esi, (%eax);je  <RtlUpperString+>;pushl %esi": 1,
                "jmp  <RtlGetDaclSecurityDescriptor+>;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <RtlUpperString+>;cmpl $, (%eax)": 1,
                "retl $;testb $, (%eax);jne - <RtlUpperString+>;jmp  <IoCheckFunctionAccess+>;nop": 1,
                "calll - <ObCreateObject>;cmpl %ebx, %eax;jl  <RtlUpperString+>;movl -(%ebp), %ecx;movl %ebx, (%ecx)": 1,
                "popl %esi;popl %ebp;retl $;xorl %eax, %eax;jmp - <RtlUpperString+>": 2,
                "pushl %esi;pushl $;pushl %eax;pushl (%ebp);calll - <ZwQueryValueKey>": 2,
                "movl (%ebx), %ecx;movl (%ebp), %edx;shll $, %eax;movl %edx, (%eax,%ecx);movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl %edx, (%eax,%ecx);movzwl (%ebx), %eax;movl (%ebx), %ecx;movl (%ebp), %edx": 1,
                "movl %edx, (%eax,%ecx);incw (%ebx);xorl %eax, %eax;popl %edi;popl %ebx": 1,
                "shll $, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 5,
                "testl %eax, %eax;jne  <IoCheckFunctionAccess+>;andw $, (%esi);andw $, (%esi);andl $, (%esi)": 1,
                "movl %ebx, -(%ebp);jmp - <RtlDeleteRegistryValue+>;movl %ebx, -(%ebp);movl %eax, -(%ebp);jmp - <RtlDeleteRegistryValue+>": 1,
                "movl %eax, -(%ebp);jmp - <RtlDeleteRegistryValue+>;cmpl (%edi), %ebx;jne - <RtlDeleteRegistryValue+>;cmpl (%edi), %edx": 1,
                "jl - <RtlPrefixString+>;movl -(%ebp,%edi,), %ecx;cmpl %ecx, %eax;ja  <RtlUpperString+>;movl %eax, %ecx": 1,
                "movl -(%ebp,%edi,), %ecx;cmpl %ecx, %eax;ja  <RtlUpperString+>;movl %eax, %ecx;addl %ecx, -(%ebp)": 1,
                "cmpl $, ;jne - <KeQueryActiveProcessors+>;pushl $;pushl $;pushl %ebx": 1,
                "movb %bl, (%eax);movb $, (%eax);movl %ebx, (%eax);pushl $;leal (%eax), %ecx": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;pushl %ebx;jl  <IoCheckFunctionAccess+>;leal (%ebp), %eax": 1,
                "jl  <RtlUpperString+>;pushl $;pushl (%ebp);calll - <KeSetPriorityThread>;movl (%ebp), %ecx": 1,
                "pushl (%ebp);calll - <KeSetPriorityThread>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;pushl -(%ebp)": 1,
                "popl %eax;cmpl %eax, (%ebp);jb  <IoCheckFunctionAccess+>;movl (%ebp), %esi;pushl $": 1,
                "jmp - <MmPrefetchPages+>;movl $, %eax;jmp - <MmPrefetchPages+>;andl $, (%ecx);cmpl $, -(%ebp)": 1,
                "movl (%esi), %eax;pushl (%eax);calll - <SeCreateClientSecurity+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);jne  <RtlUpperString+>;jb  <RtlUpperString+>": 4,
                "jb  <RtlUpperString+>;addb %ch, %gs:(%esi);je  <RtlUpperString+>;incl %ebx;addb %ch, (%edi)": 5,
                "incl %edx;addb %al, (%eax);addb %al, (%ebx);jne  <RtlUpperString+>;jb  <RtlUpperString+>": 1,
                "movl (%ebp), %esi;cmpl %edx, %eax;movb %cl, ;movl %esi, ;movl (%ebp), %esi": 1,
                "jmp - <RtlUpperString+>;movl (%ebp), %eax;movb $, (%eax);movl (%ebp), %eax;movw %bx, (%eax)": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;pushl (%ebp);pushl %ebx;calll - <RtlGeneratedotName+>;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl %esi;calll *(%esi);movl %eax, %edi;testl %edi, %edi;je - <RtlSubAuthoritySid+>": 2,
                "cmpl %ebx, (%ebp);jne - <IoOpenDeviceRegistryKey+>;jmp  <IoCheckFunctionAccess+>;movl %edi, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "decl %esi;addb %bl, (%edi);decl %esi;addb %dl, (%eax,%eax);addb %ch, (%esi)": 1,
                "addb %ah, (%eax,%eax);addb %dh, (%esi);insl %dx, %es:(%edi);addb %ah, (%ecx);imull $, (%eax), %eax": 1,
                "movl $, %eax;addb %dl, (%ebx);jns  <RtlUpperString+>;jae  <RtlUpperString+>;je  <RtlUpperString+>": 1,
                "pushl %es;subb %dl, (%edi);cmpl $, %eax;rclb (%ecx);movl $, %esi": 1,
                "addb %ch, (%ecx);popal;addb %dh, (%ebx);addb %al, (%eax);addb %al, (%eax)": 3,
                "jb  <RtlUpperString+>;addb %cl, %fs:(%esi);popal;addb %ch, (%ebp);addb %al, %gs:(%eax)": 1,
                "addb %al, %fs:(%edx);imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);pushl %ebx": 1,
                "addb %al, (%eax);addl $, %eax;outsl (%esi), %dx;addb %ch, (%esi);arpl %ax, (%eax)": 1,
                "addb %dh, (%ebp);imull $, (%eax), %eax;addb %al, (%eax);nop;nop": 1,
                "addb %dl, (%eax,%eax);addb %bl, (%ecx);addb %al, (%eax);popl %esp;popl %ecx": 1,
                "incl %ebp;addb %bl, (%eax,%eax);addb %al, (%ecx);pushl %edx;addb %al, (%eax,%eax)": 2,
                "addb %al, (%ecx);pushl %edx;addb %al, (%eax,%eax);addb %al, (%ecx);pushl %edx": 2,
                "popl %esp;addb %dl, (%ebx);popl %ecx;addb %dl, (%ebx);pushl %esp": 10,
                "decl %ebp;addb %al, (%ecx);pushl %eax;addb %al, (%eax);addb %dl, (%eax)": 2,
                "addb %bl, (%eax,%eax);addb %al, (%ebp);pushl %ebx;addb %cl, (%edi);pushl %ebp": 1,
                "addb %al, (%ecx);pushl %eax;addb %al, (%eax);addb %ch, (%ebx,%ebx,);addb %bl, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %ch, (%ebx,%ebx,);addb %bl, (%eax,%eax);addb %al, (%ebp);incl %edi": 1,
                "addb %ch, (%ebx,%ebx,);addb %bl, (%eax,%eax);addb %al, (%ebp);incl %edi;addb %cl, (%ecx)": 1,
                "decl %esi;addb %dl, (%ebp);decl %ebp;addb %al, (%eax);addb %dh, (%eax)": 1,
                "decl %ebp;addb %al, (%eax);addb %dh, (%eax);decl %edi;addb %dl, (%eax)": 1,
                "addb %dh, (%eax);decl %edi;addb %dl, (%eax);addb %dl, (%edx);incl %ebp": 1,
                "addb %bl, (%eax,%eax);addb %al, (%ebp);pushl %edx;addb %dl, (%esi);decl %ecx": 1,
                "decl %esi;addb %dl, (%eax,%eax);addb %cl, (%edi);decl %esp;addb %bl, (%eax,%eax)": 3,
                "incl %edx;addb %cl, (%edi);decl %edi;addb %dl, (%eax,%eax);addb %bl, %al": 1,
                "decl %edi;addb %cl, (%esi);andb %al, (%eax);decl %ebp;addb %al, (%ecx)": 1,
                "andb %al, (%eax);decl %ebp;addb %al, (%ecx);decl %esi;addb %al, (%ecx)": 2,
                "decl %ebp;addb %al, (%ecx);decl %esi;addb %al, (%ecx);incl %edi": 2,
                "incl %edi;addb %al, (%ebp);decl %ebp;addb %al, (%ebp);decl %esi": 1,
                "addb %cl, (%ecx);decl %esi;addb %al, (%ebp);popl %esp;addb %al, (%ebx)": 1,
                "pushl %eax;pushl (%ebp);calll - <KeSaveStateForHibernate+>;orb %al, %al;je  <RtlUpperString+>": 1,
                "movzbl (%edi), %ecx;movl %ecx, %eax;andl $, %eax;cmpl $, %eax;je  <RtlUpperString+>": 1,
                "andl $, %eax;cmpl $, %eax;je  <RtlUpperString+>;movzbl %ss:(%ecx), %eax;movl $, %ebx": 1,
                "movl $, %ebx;incl %ss:(,%eax,);calll *%ss:(,%eax,);addl $, %esp;popl %ebp": 1,
                "shll $, %eax;movw (%ebp), %ax;pushl %eax;xorl %eax, %eax;movl $, %ecx": 4,
                "pushl %edx;calll  <KeSetTimeUpdateNotifyRoutine+>;retl;pushl %ebp;pushl %ebx": 3,
                "testl $, %ebx;je  <RtlUpperString+>;movl $, %eax;movzwl (%ebp), %ecx;movzwl (%ebp), %edx": 3,
                "movzwl (%ebp), %ecx;movzwl (%ebp), %edx;pushl %ecx;pushl $;pushl %eax": 3,
                "movzbl (%edi), %ecx;incl %eax;movl %eax, (%esi);calll  <RtlUpperString+>;testb $-, %al": 1,
                "pushl %ebx;pushl $;pushl $;pushl %ecx;calll  <KeSetTimeUpdateNotifyRoutine+>": 4,
                "movl (%esi), %eax;andl $, %eax;testl $, ;jne  <RtlUpperString+>;testl $, ": 1,
                "popl %eax;retl;testl $, %eax;jne - <RtlUpperString+>;jmp - <RtlUpperString+>": 1,
                "movl %ecx, %eax;andl $, %eax;shll $, %eax;popl %eax;jmp - <RtlUpperString+>": 1,
                "jmp - <RtlUpperString+>;pushl %ebp;pushl %edx;pushl %ebx;pushl %esi": 2,
                "pushl $;pushl -;movl %esp, -;movl %esp, %ebp;subl $, %esp": 1,
                "testb $-, %al;je  <RtlUpperString+>;movl (%esi), %eax;calll  <RtlUpperString+>;testb $-, %al": 1,
                "testb $-, %al;je  <RtlUpperString+>;movl -(%ebp), %esi;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);cmpw $, (%ebp);jne  <RtlUpperString+>": 1,
                "calll  <RtlUpperString+>;jmp - <RtlUpperString+>;movl (%ebp), %eax;cmpl $, %ebx;jne  <RtlUpperString+>": 1,
                "movl (%ebp), %eax;cmpl $, %ebx;jne  <RtlUpperString+>;andl $, (%eax);movl (%eax), %eax": 1,
                "popl %esi;addl $, %esp;cmpl , %ebx;jae - <RtlUpperString+>;movl (%ebp), %eax": 1,
                "addl $, %esp;cmpl , %ebx;jae - <RtlUpperString+>;movl (%ebp), %eax;calll - <RtlUpperString+>": 1,
                "subl $, %edx;addl %ebx, %edx;movl (%ebp), %esi;movl (%ebp), %ecx;movl %eax, (%edx)": 1,
                "movl %ecx, (%edx);movl (%ebp), %ecx;movl (%ebp), %eax;movl (%ebp), %esi;movl %ecx, (%edx)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;movl (%ebp), %esi;movw %cx, (%edx);movw %ax, (%edx)": 1,
                "movl (%ebp), %eax;movl (%ebp), %esi;movw %cx, (%edx);movw %ax, (%edx);movw %si, (%edx)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %ebp": 1,
                "leal (%eax,%ecx,), %eax;cmpl , %eax;jae  <RtlUpperString+>;movl (%ebp), %edi;testl $, (%esi)": 1,
                "jmp  <RtlUpperString+>;cmpl (%esi), %edi;jae  <RtlUpperString+>;movl (%esi), %ebx;testl $, (%eax)": 1,
                "testl $, ;je  <RtlUpperString+>;andl $, (%esi);leal , %ebx;andl $, (%ebx)": 1,
                "popl %esi;popl %edi;popl %ebx;retl;xorl %eax, %eax": 1,
                "shll $, (%esi);orl $, (%esi);movl $, %eax;retl;xorl %eax, %eax": 1,
                "movl (%esi), %eax;testl $, (%esi);je  <RtlUpperString+>;andl (%esi), %eax;movl %eax, (%esi)": 2,
                "testl $, (%esi);je  <RtlUpperString+>;subl %ecx, %eax;cmpl (%esi), %eax;jae  <RtlUpperString+>": 1,
                "movl (%esi), %eax;movw %ax, (%edi);movzwl (%edi), %eax;popl -;addl $, %esp": 1,
                "pushl $;pushl -;movl %esp, -;incw (%edi);popl -": 1,
                "pushl %ebp;pushl %ebx;pushl %esi;pushl %edi;pushl %ecx": 1,
                "pushl -;movl %esp, -;movl $, %eax;mull %ecx;movl -, %edi": 1,
                "movl -, %edi;movl (%edi), %edi;cmpl , %edi;jae  <RtlUpperString+>;movl (%edi), %edi": 1,
                "popl %esi;popl %ebx;popl %ebp;retl;movl (%esp), %esp": 1,
                "pushl %edi;pushl %esi;testl $, (%esi);je  <RtlUpperString+>;cmpl $, %ecx": 1,
                "movw %ax, (%edx,%ebx);subw $, %dx;movw (%esi), %ax;movw %ax, (%edx,%ebx);movl (,%ecx,), %eax": 1,
                "movw (%esi), %ax;movw %ax, (%edx,%ebx);movl (,%ecx,), %eax;popl -;addl $, %esp": 1,
                "movl (,%ecx,), %eax;popl -;addl $, %esp;popl %ebp;pushl %eax": 1,
                "pushl -;movl %esp, -;movl (%esp), %eax;movw %ax, (%edx,%ebx);movl (%esp), %eax": 1,
                "movw %ax, (%edx,%ebx);movl (%esp), %eax;movw %ax, (%edx,%ebx);popl -;leal (%esp), %esp": 1,
                "pushl -;movl %esp, -;movl %eax, (%edx,%ebx);movzwl (%esi), %eax;movl %eax, (%edx,%ebx)": 1,
                "pushl %ecx;movzwl (%esi), %eax;calll - <RtlUpperString+>;popl %ecx;testb $-, %al": 1,
                "movzwl (%esi), %eax;calll - <RtlUpperString+>;popl %ecx;testb $-, %al;je  <RtlUpperString+>": 1,
                "cmpl , %edi;jb  <RtlUpperString+>;movl , %edi;movl (%edi), %edi;addl %eax, %edi": 1,
                "cmpl , %edi;jb  <RtlUpperString+>;movl , %edi;movl (%esi), %eax;testl $, (%edi)": 1,
                "movl $, %eax;popl %esi;popl %edi;popl %ebx;retl": 1,
                "movl %eax, -(%ebp);jge  <IoCheckFunctionAccess+>;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "leal (%edx), %edi;movl -(%edi), %esi;movl (%edi), %eax;addl -(%ebp), %esi;cmpl -(%ebp), %eax": 1,
                "movl (%edi), %eax;addl -(%ebp), %esi;cmpl -(%ebp), %eax;jbe  <RtlUpperString+>;subl -(%ebp), %eax": 1,
                "calll - <wcscmp>;testl %eax, %eax;popl %ecx;popl %ecx;je - <RtlUpperString+>": 4,
                "movl -(%ebp), %esi;leal (%edx,%esi,), %edx;incl (%edx);testb $, (%eax);je - <RtlUpperString+>": 1,
                "je - <RtlUpperString+>;movl (%ebp), %eax;movl -(%ebp), %edx;leal (%eax,%edx,), %eax;incl (%eax)": 1,
                "addb %dl, (%ebx);pushl %esp;addb %al, (%ebp);decl %ebp;addb %dh, (%ebx)": 4,
                "pushl %ebx;addb %dl, (%ebx);addb %al, %cs:(%ebp);popl %eax;addb %al, (%ebp)": 1,
                "addb %al, (%ebp);addb %al, (%eax);addb %al, (%eax);popl %esp;addb %dl, (%ebx)": 2,
                "addb %al, (%ebp);addb %al, (%eax);int;int;int": 4,
                "cmpb $, (%ebp);je  <RtlUpperString+>;jmp  <RtlUpperString+>;leal (%ecx,%ecx,), %eax;movl (%ebp), %ecx": 1,
                "jmp  <RtlUpperString+>;leal (%ecx,%ecx,), %eax;movl (%ebp), %ecx;leal (%ecx,%eax,), %eax;movl (%eax), %edx": 1,
                "testb $, %dl;movl (%eax), %ecx;jne  <RtlUpperString+>;testb $, %dl;je  <RtlUpperString+>": 1,
                "incl %edi;testb $, %dl;je  <RtlUpperString+>;incl (%ebp);cmpl $-, %ecx": 1,
                "movl (%ebp), %eax;addl $, %edx;cmpl (%ebx), %eax;movl %edx, (%ebp);jae - <RtlUpperString+>": 1,
                "addl $, %edx;cmpl (%ebx), %eax;movl %edx, (%ebp);jae - <RtlUpperString+>;movl (%edx), %eax": 1,
                "jmp - <RtlUpperString+>;pushl $;pushl -(%ebp);pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "pushl %eax;calll - <NtFindAtom+>;movl %eax, %esi;cmpl %ebx, %esi;jl  <RtlUpperString+>": 1,
                "je  <RtlUpperString+>;pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>;cmpb $, -(%ebp)": 1,
                "pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;xorl %edi, %edi": 1,
                "jge  <RtlUpperString+>;jmp  <RtlCreateUnicodeString+>;nop;nop;nop": 1,
                "jmp  <RtlCreateUnicodeString+>;nop;nop;nop;nop": 1,
                "pushl %ebx;pushl %ebx;pushl (%edi);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "leal (%edi), %eax;pushl %eax;calll - <RtlUpperString+>;pushl %esi;calll - <RtlUpperString+>": 1,
                "movl %ebx, -(%ebp);calll - <ZwOpenKey>;movl %eax, %esi;cmpl %ebx, %esi;jl  <RtlCreateUnicodeString+>": 2,
                "leal (%eax,%ecx), %eax;cmpl %eax, (%ebp);jb - <RtlUpperString+>;movl -(%ebp), %esi;pushl %ebx": 2,
                "addl %esi, %eax;shrl %ecx;cmpw %bx, -(%eax,%ecx,);jne  <IoCheckFunctionAccess+>;leal (%ebp), %ecx": 2,
                "calll - <RtlUpperString+>;movl %eax, %esi;cmpl %ebx, %esi;jl  <RtlCreateUnicodeString+>;pushl %ebx": 1,
                "movzbl -(%ebp), %eax;cmpl (%edi), %eax;je  <RtlCreateUnicodeString+>;movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx;addb %cl, (%edi);jb  <RtlUpperString+>": 1,
                "jmp - <RtlUpperString+>;cmpl $, (%esi);jne  <IoCheckFunctionAccess+>;cmpl %edi, (%esi);jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %eax, (%esi);jne  <IoCheckFunctionAccess+>;cmpl $, (%esi);ja  <IoCheckFunctionAccess+>": 1,
                "movl %eax, (%ebx);je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;shll $, %ecx;decl %ecx": 1,
                "movl (%ebx), %eax;movl %ecx, (%eax);movl (%ebx), %eax;movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl (%ebx), %eax;movl (%esi), %ecx;movl %ecx, (%eax);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl (%esi), %ecx;movl %ecx, (%eax);movl (%ebx), %eax;movl (%eax), %eax": 1,
                "testl %eax, %eax;jl  <IoCheckFunctionAccess+>;addl $, %esi;pushl %esi;pushl %ebx": 1,
                "calll *(%ebx);testl %eax, %eax;movl %eax, (%ebp);je  <IoCheckFunctionAccess+>;movl %edi, %ecx": 1,
                "pushl %esi;movl $, %ecx;movl %esi, %edi;pushl %ebx;rep  stosl %eax, %es:(%edi)": 1,
                "movl %edi, %esi;movl %esi, -(%ebp);movl %eax, -(%ebp);jae - <RtlUpperString+>;movl -(%ebp), %edx": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;cmpl %ecx, %esi;movl %esi, (%eax)": 1,
                "movl %edx, (%eax);movl (%ecx), %edx;movl %edx, (%eax);orl $, (%eax);movl $, %eax": 1,
                "xorl %eax, %eax;movw (%edi), %ax;movl %eax, -(%ebp);movzwl %ax, %eax;shrl %eax": 1,
                "movw %ax, (%edi);movb $, %al;popl %esi;popl %ebx;popl %edi": 1,
                "je  <RtlUpperString+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;leal -(%ebp), %eax;pushl %eax": 2,
                "calll - <ExFreePoolWithTag>;leal -(%ebp), %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx": 1,
                "pushl %eax;xorl %ebx, %ebx;pushl %ebx;pushl $;pushl $": 1,
                "pushl $;pushl $;pushl %ebx;pushl $;pushl ": 2,
                "pushl ;calll - <IoCreateDevice>;movl %eax, %esi;cmpl %ebx, %esi;jl  <RtlUpperString+>": 1,
                "movl -(%ebp), %eax;orb $, (%eax);movl -(%ebp), %eax;movl (%eax), %eax;orl $, (%eax)": 1,
                "pushl -(%ebp);calll - <toupper+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "calll - <toupper+>;cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl (%eax);calll - <RtlCheckRegistryKey+>;testl %eax, %eax;movl -(%ebp), %eax;leal (%eax), %ecx": 1,
                "jmp - <RtlUpperString+>;nop;nop;nop;nop": 4,
                "movl -(%ebp), %ecx;movl (%ebp), %edi;addl %eax, %ebx;cmpl %ebx, %eax;movl %ecx, (%edi)": 1,
                "movl (%eax), %eax;movl (%eax), %eax;pushl %edi;pushl (%ebp);pushl $": 1,
                "popl %esi;leave;retl $;xorl %eax, %eax;jmp - <RtlUpperString+>": 1,
                "retl $;xorl %eax, %eax;jmp - <RtlUpperString+>;nop;nop": 1,
                "jmp - <RtlUpperString+>;pushl %edi;calll  <RtlInitCodePageTable+>;popl %esi;jmp - <RtlUpperString+>": 1,
                "calll  <RtlInitCodePageTable+>;popl %esi;jmp - <RtlUpperString+>;xorl %eax, %eax;jmp  <RtlUpperString+>": 1,
                "leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp);pushl $": 1,
                "movl %edx, (%ecx);movl (%eax), %edx;movl %edx, (%ecx);movl (%eax), %edx;pushl %esi": 1,
                "calll  <RtlUpperString+>;jmp - <RtlCheckRegistryKey+>;nop;nop;nop": 1,
                "pushl $;xorl %ebx, %ebx;movl %eax, -(%ebp);pushl %ebx;leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movw %bx, -(%ebp);movw %bx, -(%ebp);movl %ebx, -(%ebp);movw %bx, -(%ebp)": 3,
                "pushl %eax;calll  <RtlValidSecurityDescriptor+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <RtlUpperString+>": 1,
                "pushl (%ebp);calll - <NtFindAtom+>;testl %eax, %eax;jl  <RtlUpperString+>;movl (%edi), %eax": 1,
                "pushl %eax;calll - <RtlGUIDFromString+>;movl (%edi), %ecx;movl (%ecx), %edi;addl %esi, %edi": 1,
                "movl %edi, -(%ebp);cmpl %edi, %esi;movl %eax, -(%ebp);je  <RtlUpperString+>;cmpw %bx, (%eax)": 1,
                "jmp - <RtlUpperString+>;nop;pushl %ebx;addb %bh, (%ecx);jae  <RtlUpperString+>": 1,
                "nop;pushl %ebx;addb %bh, (%ecx);jae  <RtlUpperString+>;je  <RtlUpperString+>": 1,
                "popal;addb %dh, (%ebx);addb %al, %gs:(%eax);addb %cl, (%eax);popal": 1,
                "addb %al, (%eax);addb %al, (%ebx);outsl (%esi), %dx;addb %ch, (%ebp);jo  <RtlUpperString+>": 1,
                "addb %ah, (%ebp);decl %ecx;addb %al, (%eax,%eax);addb %al, (%eax);addb %ch, (%ebx)": 1,
                "decl %ecx;addb %al, (%eax,%eax);addb %al, (%eax);addb %ch, (%ebx);incl %ebp": 1,
                "pushl %ebx;pushl %ebx;jmp  <RtlUpperString+>;pushl %ebx;pushl %eax": 1,
                "pushl -(%ebp);calll - <ZwClose>;cmpl %ebx, -(%ebp);je  <RtlUpperString+>;pushl %ebx": 1,
                "jmp  <RtlUpperString+>;movl %eax, -(%ebp);jmp  <RtlUpperString+>;cmpb $, (%ebp);jmp  <RtlUpperString+>": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, (%ebp);pushl %esi;movl $, %esi": 1,
                "jl  <RtlUpperString+>;pushl %edi;leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <IoCheckFunctionAccess+>;movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "pushl %eax;pushl %esi;pushl (%ebp);pushl $;pushl (%ebp)": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl (%ebp);pushl -(%ebp)": 1,
                "pushl (%ebp);pushl -(%ebp);calll - <ZwEnumerateValueKey>;movl %eax, %edi;xorl %ebx, %ebx": 1,
                "addl %eax, %ecx;pushl %ecx;calll - <RtlUpperChar+>;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "testl %eax, %eax;jne  <IoCheckFunctionAccess+>;cmpl $, (%ebp);je  <RtlUpperString+>;pushl -(%ebp)": 1,
                "pushl %eax;pushl %eax;xorl %edi, %edi;pushl %edi;pushl $": 1,
                "pushl %eax;xorl %edi, %edi;pushl %edi;pushl $;calll *%esi": 1,
                "movl %eax, (%edx);je  <RtlUpperString+>;movl (%ebx), %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "leave;retl $;movl (%ebp), %edx;cmpl (%ecx), %edx;ja  <RtlUpperString+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;cmpl (%ebp), %eax;pushl %ebx;pushl %esi": 1,
                "movl (%ebp), %eax;cmpl (%ebp), %eax;pushl %ebx;pushl %esi;pushl %edi": 1,
                "je  <IoCheckFunctionAccess+>;movw (%ebx), %dx;testw %dx, %dx;jbe - <RtlUpperString+>;movl (%ebx), %ecx": 1,
                "movl (%ecx), %edi;cmpl %edi, (%ebp);ja  <RtlUpperString+>;jb  <RtlUpperString+>;movl (%ecx), %edi": 2,
                "jmp - <RtlUpperString+>;cmpl %edx, (%ebp);jb - <RtlUpperString+>;ja  <RtlUpperString+>;cmpl %esi, (%ebp)": 1,
                "movl (%ebp), %esi;movl %edx, (%eax);movl (%ebp), %edx;addl $-, %edx;adcl $-, %esi": 1,
                "movzwl %dx, %eax;shrl %eax;je  <ObCreateObjectType+>;movw (%ecx), %dx;decl %eax": 1,
                "pushl $;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax": 3,
                "movl %eax, (%ebx);movl -(%ebp), %eax;addl $, %ebx;movl %eax, (%ebx);xorl %eax, %eax": 1,
                "movl %ecx, (%ebx);calll - <ExFreePoolWithTag>;movl (%ebp), %eax;pushl $;leal (%ebx), %edi": 1,
                "movl %eax, %esi;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %esi;movl %esi, (%ebx);testb $, ": 1,
                "cmpw $, -(%ebp);je - <IoRegisterBootDriverReinitialization+>;cmpw $, -(%ebp);je - <IoRegisterBootDriverReinitialization+>;andl $, (%ebx)": 1,
                "je  <ObCreateObjectType+>;movl , %ecx;movl (%ecx), %edx;addl $, %ecx;movl %ecx, (%eax)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll - <ObCheckCreateObjectAccess+>;testb %al, %al": 1,
                "movb $, -(%ebp);movb %bl, -(%ebp);calll - <FsRtlNotifyInitializeSync+>;popl %edi;movl -(%ebp), %ecx": 1,
                "calll - <FsRtlNotifyInitializeSync+>;popl %edi;movl -(%ebp), %ecx;popl %ebx;calll - <IoQueueWorkItem+>": 1,
                "leal -(%ebp), %eax;movl $, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movw $, -(%ebp)": 1,
                "cmpl %eax, %ecx;movl %eax, (%ebp);je  <ObCreateObjectType+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ebx;calll - <RtlDeleteRegistryValue+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %esi;movl -(%ebp), %edi;andl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movb $, -(%ebp);je  <ObCreateObjectType+>;cmpl $, -(%ebp);je  <ObCreateObjectType+>;cmpl %ecx, %edi": 1,
                "pushl %eax;calll - <_aullrem>;orl %edx, %eax;jne  <ObCreateObjectType+>;subl -(%ebp), %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll *(%ebx);movl %eax, %esi": 2,
                "movl %ecx, (%ebx);xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "jne  <ObCreateObjectType+>;pushl $;movl $, %esi;jmp - <RtlInitializeUnicodePrefix+>;decl %eax": 1,
                "movl %esi, (%eax);jmp - <RtlInitializeUnicodePrefix+>;cmpl %edi, (%esi);je - <ObCreateObjectType+>;cmpl %edi, (%esi)": 1,
                "cmpb $, -(%ebp);jbe - <IoConnectInterrupt+>;jmp  <IoCheckFunctionAccess+>;pushl $;pushl $": 1,
                "leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);movb -(%ebp), %al;movl %esi, (%esi)": 1,
                "movl $, %eax;jmp - <IoConnectInterrupt+>;movl (%eax), %ecx;testb $, %ch;jne  <ObCreateObjectType+>": 1,
                "cmpl $, (%eax);je - <ObCreateObjectType+>;xorl %eax, %eax;popl %ebp;retl $": 1,
                "movl (%ebp), %eax;andl $, (%eax);pushl %esi;movl $, %esi;pushl %esi": 1,
                "popl %esi;leave;retl $;pushl %ebx;addb %bh, (%ecx)": 1,
                "addb %bh, (%ecx);jae  <ObCreateObjectType+>;je  <ObCreateObjectType+>;addb %ch, %gs:(%ebp);popl %esp": 1,
                "popl %esp;addb %al, (%ebx);jne  <ObCreateObjectType+>;jb  <ObCreateObjectType+>;jb  <ObCreateObjectType+>": 1,
                "int;int;int;cmpl %edi, %ebx;jae - <RtlCheckRegistryKey+>": 1,
                "jae - <RtlCheckRegistryKey+>;movl %edi, %eax;subl %ebx, %eax;pushl $;decl %eax": 2,
                "cmpl $, (%ecx);je  <ObCreateObjectType+>;orl $, (%ecx);movl $, (%ecx);addl $, %ecx": 1,
                "je  <ObCreateObjectType+>;pushl $;popl %ebx;pushl %ebx;pushl %eax": 1,
                "calll - <RtlCompareMemory>;subl %ebx, %eax;negl %eax;sbbl %eax, %eax;incl %eax": 6,
                "incl %eax;movl %eax, -(%ebp);je - <IoOpenDeviceRegistryKey+>;movl (%esi), %esi;movl $, (%esi)": 1,
                "testb $, %dl;jne  <ObCreateObjectType+>;testb $, (%esi);je  <IoCheckFunctionAccess+>;addl $, %ecx": 1,
                "decl %eax;jne - <ObCreateObjectType+>;movl (%ebp), %esi;jmp - <RtlCheckRegistryKey+>;pushl %edi": 1,
                "rep  stosb %al, %es:(%edi);leal (%ebx), %ecx;movl %ecx, (%ecx);movl %ecx, (%ecx);movl (%esi), %edx": 1,
                "movl (%ecx), %ecx;movl (%ebp), %ebx;movl %ecx, (%eax);movl -(%ebp), %ecx;addl $, %eax": 1,
                "popl %ebx;pushl %edi;pushl %ecx;calll - <ExFreePoolWithTag>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);movl (%ebp), %eax;popl %esi;popl %edi": 1,
                "pushl %eax;calll - <RtlInitAnsiString>;cmpl %ebx, -(%ebp);movl %ebx, -(%ebp);jbe  <IoGetBootDiskInformation+>": 1,
                "jbe  <IoGetBootDiskInformation+>;pushl -(%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <IoReadPartitionTableEx>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "jbe  <IoGetBootDiskInformation+>;arpl %sp, (%ebp);decl %eax;popal;jb  <IoGetBootDiskInformation+>": 3,
                "popal;jb  <IoGetBootDiskInformation+>;imull $, (%ecx,%ebp,), %esi;addb %bh, (%eax);popfl": 1,
                "incl %ebx;addl %eax, (%eax);cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitAnsiString>;xorl %esi, %esi": 1,
                "testl %eax, %eax;jl  <IoGetBootDiskInformation+>;movl -(%ebp), %eax;movl (%eax), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitAnsiString>;pushl %esi": 1,
                "andl $, %eax;aam $-;leal -(%ebp), %eax;pushl -(%ebp);pushl $": 1,
                "pushl %eax;calll - <RtlEqualString>;testb %al, %al;movl -(%ebp), %esi;jne - <IoRegisterBootDriverReinitialization+>": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);je  <IoCheckFunctionAccess+>;cmpl %ebx, %edi;je  <IoGetBootDiskInformation+>": 1,
                "cmpl %esi, %ebx;je  <IoGetBootDiskInformation+>;pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "cmpl %esi, %edi;je  <IoGetBootDiskInformation+>;pushl %esi;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "pushl %esi;pushl $;movl %eax, (%ebx);movl %edx, (%ebx);calll - <ExAllocatePoolWithTag>": 1,
                "movb $, -(%ebp);pushl $;movl %ebx, -(%ebp);calll - <IoBuildSynchronousFsdRequest>;cmpl %ebx, %eax": 2,
                "subl $, %ecx;movl (%ebp), %ecx;movl %eax, %edx;calll - <IofCallDriver>;cmpl $, %eax": 2,
                "pushl %esi;movl (%ebp), %esi;pushl (%esi);xorl %ebx, %ebx;pushl %ebx": 1,
                "jl  <IoGetBootDiskInformation+>;movl (%esi), %eax;movl (%ebp), %ecx;orl $-, (%ecx);cmpw $, (%eax)": 1,
                "movl (%ebp), %ecx;orl $-, (%ecx);cmpw $, (%eax);jne  <IoGetBootDiskInformation+>;cmpb $-, (%eax)": 1,
                "testb %al, %al;jne  <IoGetBootDiskInformation+>;pushl $;pushl ;pushl ": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;pushl ;pushl $": 3,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;cmpl $, %ebx;jge  <IoGetBootDiskInformation+>": 1,
                "xorl %edi, %edi;pushl %edi;pushl %edi;pushl %edi;pushl $": 4,
                "pushl %edi;pushl %edi;pushl %edi;pushl $;movl $, %esi": 3,
                "pushl %esi;calll - <KeWaitForSingleObject>;leal (,%ebx,), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;jne - <IoGetBootDiskInformation+>;movl (%eax), %edx;movl (%ebp), %ecx;movl %edx, (%ecx)": 1,
                "movl (%eax), %edx;pushl $;pushl %edi;movl %ecx, (%edx);pushl %esi": 1,
                "movl %ecx, (%eax);calll - <KeReleaseSemaphore>;movl %fs:, %eax;incl (%eax);je  <IoCheckFunctionAccess+>": 1,
                "calll  <RtlInitCodePageTable>;pushl %esi;pushl (%ebp);calll  <RtlInitCodePageTable>;pushl %esi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movw (%ecx), %ax;movzwl %ax, %edx": 1,
                "movzwl %ax, %edx;pushl %ebx;pushl %esi;movw (%ecx), %si;leal (%ecx,%edx,), %edx": 1,
                "movw (%ecx), %si;movw %si, (%eax);pushl %edi;leal (%ecx), %esi;leal (%eax), %edi": 1,
                "ja  <IoCheckFunctionAccess+>;movw %si, (%eax);movl %esi, (%eax);movzwl %bx, %edx;popl %edi": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi": 4,
                "leave;retl $;addl $, -(%ebp);cmpl %ebx, -(%ebp);je - <IoRegisterBootDriverReinitialization+>": 1,
                "movl (%esi), %ebx;testl %ebx, %ebx;leal (%esi), %ecx;movl $, (%ebp);movl %ecx, -(%ebp)": 1,
                "leal (%esi), %ecx;movl $, (%ebp);movl %ecx, -(%ebp);jbe  <RtlInitCodePageTable+>;movl %ebx, -(%ebp)": 1,
                "incl %esi;cmpl %edi, %esi;jl - <RtlInitCodePageTable+>;popl %edi;popl %esi": 1,
                "popl %ebp;retl $;movl , %ebx;movl %ebx, (%edx);movb , %bl": 1,
                "movb %bl, (%edx);movl , %ebx;movl %ebx, (%edx);cmpb %cl, ;jg  <IoCheckFunctionAccess+>": 1,
                "movl $, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl $, (%esi);movl %edi, (%esi)": 1,
                "cmpw %bx, -(%ebp);je  <IoCheckFunctionAccess+>;xorl %esi, %esi;incl %esi;pushl %esi": 1,
                "popl %eax;movl %eax, ;movl %eax, ;movl , %esi;cmpl $, %esi": 1,
                "pushl %ebx;calll - <RtlTimeToTimeFields>;movl (%ebp), %esi;cmpw $, (%esi);jne  <IoCheckFunctionAccess+>": 1,
                "movw (%esi), %ax;movb $, (%ebp);movl %eax, -(%ebp);je  <RtlInitCodePageTable+>;andw $, -(%ebp)": 1,
                "movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;movw $, %di": 1,
                "pushl %eax;movw %di, -(%ebp);movw %bx, -(%ebp);calll - <RtlTimeFieldsToTime>;testb %al, %al": 1,
                "jle  <RtlInitCodePageTable+>;movl %ecx, %edi;subl %eax, %edi;addl $, %edi;movw %di, -(%ebp)": 1,
                "incl (%ebp);movl %eax, -(%ebp);movw (%ebp), %ax;cmpw -(%ebp), %ax;jl - <RtlInitCodePageTable+>": 1,
                "leave;retl $;cmpw -(%ebp), %ax;jl  <RtlInitCodePageTable+>;jg - <RtlInitCodePageTable+>": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;xorb %bl, %bl;cmpl $, (%ebp)": 1,
                "cmpl $, (%esi);jne  <RtlInitCodePageTable+>;pushl (%esi);pushl $;calll - <ObCreateObjectType+>": 1,
                "pushl $;movl %eax, -(%ebp);calll - <KeInitializeSpinLock>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll  <RtlInitCodePageTable+>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;pushl %esi;pushl $": 1,
                "calll  <KeISetGdtSelector>;orw $-, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl (%eax), %eax;pushl %ebx;xorl %ecx, %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %eax;movzwl , %eax;pushl %eax;calll  <KeISetGdtSelector>;popl %edi": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;shrl %ecx;andw $, (%eax,%ecx,);addl $, %eax": 1,
                "testl %esi, %esi;jl  <RtlInitCodePageTable+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "addb %ah, (%esi);jne  <RtlInitCodePageTable+>;outsb (%esi), %dx;addb %ah, (%ebx);je  <RtlInitCodePageTable+>": 1,
                "imull $, (%eax), %eax;addb %dh, %gs:(%edx);addb %al, (%eax);addb %al, (%eax);pushl %eax": 2,
                "cmpl $, %esi;jne  <RtlInitCodePageTable+>;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <RtlInitCodePageTable+>;leal -(%ebp), %eax;pushl %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %esi, %esi;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl $, %esi;jmp - <RtlInitCodePageTable+>;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "int;int;int;movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "pushl %eax;pushl -(%ebp);calll - <RtlCheckRegistryKey+>;cmpl $, %eax;je  <IoCheckFunctionAccess+>": 1,
                "jne  <IoReportDetectedDevice+>;pushl -(%ebp);pushl %edi;pushl -(%ebp);calll - <IoRegisterBootDriverReinitialization+>": 1,
                "pushl $;pushl $;calll - <ExAcquireResourceSharedLite>;cmpl %ebx, %edi;jl  <IoCheckFunctionAccess+>": 1,
                "pushl $;pushl %eax;calll - <_snwprintf>;addl $, %esp;addl %eax, %eax": 1,
                "addl %eax, %eax;movl %eax, -(%ebp);movw %ax, -(%ebp);movl $, %esi;pushl %esi": 1,
                "movl %eax, -(%ebp);movw %ax, -(%ebp);movl $, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "jl  <IoCheckFunctionAccess+>;movzwl -(%ebp), %eax;movl -(%ebp), %ecx;addl $, -(%ebp);shrl %eax": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll  <RtlValidSecurityDescriptor+>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "decl %edi;addb %dl, (%eax,%eax);addb %ah, ;addb %ah, ;addb %dh, (%ebp)": 1,
                "addb %dl, (%eax,%eax);addb %ah, ;addb %ah, ;addb %dh, (%ebp);addb %al, (%eax)": 1,
                "addb %ah, ;addb %ah, ;addb %dh, (%ebp);addb %al, (%eax);addb %al, (%eax)": 1,
                "movl %esi, ;jbe  <IoReportDetectedDevice+>;xorl %edx, %edx;andl $, (%edx,%eax);movl , %eax": 1,
                "je  <IoReportDetectedDevice+>;addl $-, %eax;movl %eax, (%ebp);pushl $;addl %edi, %eax": 1,
                "testl %eax, %eax;je  <IoReportDetectedDevice+>;movl (%eax), %ecx;movl (%ecx), %edi;cmpl $, (%esi)": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;cmpl %esi, %eax;je  <IoCheckFunctionAccess+>;cmpl $, -(%ebp)": 1,
                "addl %ebx, %eax;leal (%eax,%eax,), %eax;pushl $;shll $, %eax;pushl %eax": 1,
                "leal (%edx,%edx,), %edx;leal (%eax,%edx,), %eax;movl %eax, (%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;calll - <ObfDereferenceObject>;subl $, -(%ebp);cmpl %esi, -(%ebp)": 1,
                "cmpl %esi, -(%ebp);jae - <IoReportDetectedDevice+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>": 1,
                "cmpl $, (%esi);movl (%ebx), %eax;movl %eax, (%edi);je  <IoCheckFunctionAccess+>;testb $, (%ebx)": 1,
                "pushl %esi;calll - <KeWaitForSingleObject>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 2,
                "calll - <KeWaitForSingleObject>;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <RtlDeleteRegistryValue+>": 1,
                "jmp  <IoReportDetectedDevice+>;cmpb $, -(%ebp);jne - <RtlUpcaseUnicodeStringToOemString+>;testl %edi, %edi;jne - <RtlUpcaseUnicodeStringToOemString+>": 1,
                "jae - <RtlUpcaseUnicodeStringToOemString+>;movl -(%ebp), %ebx;shll $, %ebx;cmpl $, (%ebx);jne - <IoRegisterBootDriverReinitialization+>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movb $, (%ebx)": 1,
                "movb $, (%ebx);movb $, (%ebx);movb $, (%ebx);xorl %ecx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl -(%ebp), %eax;subl %ecx, %eax;je - <RtlUpcaseUnicodeStringToOemString+>": 1,
                "je - <IoRegisterBootDriverReinitialization+>;decl %eax;je - <IoReportDetectedDevice+>;subl $, %eax;jne  <IoReportDetectedDevice+>": 1,
                "jne  <IoReportDetectedDevice+>;movl $, -(%ebp);cmpb $, (%ebx);je  <IoReportDetectedDevice+>;movl -(%ebp), %eax": 1,
                "jmp - <RtlUpcaseUnicodeStringToOemString+>;pushl $;jmp - <RtlUpcaseUnicodeStringToOemString+>;movl (%ebp), %eax;pushl (%eax)": 1,
                "pushl (%eax);pushl (%ebp);calll - <RtlEqualSid>;testb %al, %al;jne - <RtlCopyLuid+>": 1,
                "movl %eax, -(%ebp);movb $, -(%ebp);incl %esi;cmpl (%ebp), %esi;jb - <IoReportDetectedDevice+>": 1,
                "incl %esi;cmpl (%ebp), %esi;jb - <IoReportDetectedDevice+>;jmp  <IoCheckFunctionAccess+>;nop": 1,
                "cmpl (%ebp), %esi;jb - <IoReportDetectedDevice+>;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %esi;cmpl %edi, %esi;jne  <IoCheckFunctionAccess+>": 1,
                "cmpl %edi, %esi;jne  <IoCheckFunctionAccess+>;popl %edi;popl %esi;popl %ebp": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl , %esi;movl $, %edi;cmpl %edi, %esi;je  <IoRegisterFsRegistrationChange+>;movl (%esi), %ecx": 3,
                "popl %eax;jmp  <IoRegisterFsRegistrationChange+>;movl (%ebx), %esi;cmpl $, %esi;jae  <IoRegisterFsRegistrationChange+>": 1,
                "cmpl %edx, %eax;je  <IoRegisterFsRegistrationChange+>;movl $, -(%ebp);cmpl %edx, (%ebx);jne  <IoRegisterFsRegistrationChange+>": 1,
                "movzbl -(%ebp), %eax;shll $, %eax;cmpl %esi, %eax;ja  <IoRegisterFsRegistrationChange+>;testb $, %cl": 1,
                "jne  <IoRegisterFsRegistrationChange+>;movl $, -(%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <IoRegisterFsRegistrationChange+>;nop;nop;nop;nop": 2,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <IoRegisterFsRegistrationChange+>": 2,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <IoWMIExecuteMethod+>;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <IoWMIExecuteMethod+>;movl %eax, -(%ebp);xorl %esi, %esi": 1,
                "pushl ;pushl %esi;pushl %eax;calll - <ObReferenceObjectByHandle>;movl %eax, -(%ebp)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%ebx)": 1,
                "je  <IoRegisterFsRegistrationChange+>;orb $, (%ebx);movl (%eax), %ecx;movl %ecx, (%ebx);movl (%eax), %ecx": 1,
                "movl %ecx, (%ebx);movl (%eax), %ecx;testl %ecx, %ecx;jbe  <IoRegisterFsRegistrationChange+>;movl %ecx, (%ebx)": 1,
                "orl $-, %ecx;pushl %ecx;movl $, %ecx;pushl %ecx;pushl %edx": 1,
                "pushl %ecx;pushl %edx;pushl %eax;calll - <_allmul>;pushl $": 1,
                "pushl %eax;calll - <_allmul>;movl %eax, (%ebx);movl %edx, (%ebx);jmp  <IoRegisterFsRegistrationChange+>": 1,
                "pushl %ebx;calll  <IoWMIExecuteMethod+>;movl %eax, ;negl %eax;sbbl %eax, %eax": 1,
                "addl %esi, %eax;movl %eax, -(%ebp);js  <IoRegisterFsRegistrationChange+>;pushl $;leal (%ebx), %eax": 1,
                "cmpl $, (%ebx);je  <IoRegisterFsRegistrationChange+>;cmpb $, -(%ebp);je  <IoRegisterFsRegistrationChange+>;pushl $": 1,
                "cmpb $, -(%ebp);je  <IoRegisterFsRegistrationChange+>;pushl $;movzwl (%ebx), %eax;incl %eax": 1,
                "testw %cx, %cx;jbe  <IoRegisterFsRegistrationChange+>;cmpb $, -(%ebp);je  <IoRegisterFsRegistrationChange+>;movl (%esi), %eax": 1,
                "pushl $;popl %esi;movl %esi, -(%ebp);pushl %esi;pushl %ebx": 1,
                "leal (%ebx), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "je  <IoRegisterFsRegistrationChange+>;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>;pushl %edi": 2,
                "calll - <ExFreePoolWithTag>;pushl %edi;pushl %ebx;calll - <ExFreePoolWithTag>;movl -(%ebp), %edx": 1,
                "movl %esi, %eax;jmp  <IoRegisterFsRegistrationChange+>;movl (%ebx), %eax;movl -(%ebp), %esi;movl %eax, (%esi)": 1,
                "pushl (%ebx);pushl (%ebx);calll - <_alldiv>;pushl %edi;pushl $": 1,
                "movl %eax, (%esi);cmpl %edi, -(%ebp);movzwl -(%ebp), %eax;jne  <IoRegisterFsRegistrationChange+>;movl $, %eax": 1,
                "movl %eax, (%eax);movl %eax, (%eax);movb $, (%ebx);movb $, (%ebx);movl %edi, (%ebx)": 1,
                "pushl %eax;calll - <ObCloseHandle>;movl %edi, (%esi);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "calll - <PsCreateSystemThread>;movl %eax, -(%ebp);cmpl %edi, %eax;jl  <IoRegisterFsRegistrationChange+>;pushl -(%ebp)": 1,
                "leal (%ebx), %eax;pushl %eax;calll - <KeResetEvent>;cmpl %edi, (%ebx);jl  <IoRegisterFsRegistrationChange+>": 1,
                "calll - <KeWaitForSingleObject>;leal (%ebx), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl $, %eax": 1,
                "xaddl %eax, (%ecx);movl (%ebx), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %ebx, (%eax)": 1,
                "movl -(%ebp), %eax;movl %eax, ;pushl $;popl %esi;movl %esi, %ecx": 1,
                "movl (%ebx), %ebx;testl %ebx, %ebx;je  <IoRegisterFsRegistrationChange+>;movl (%ebx), %eax;movl -(%ebp), %ecx": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);pushl $;pushl -(%ebp)": 1,
                "jmp  <IoRegisterFsRegistrationChange+>;pushl %ebx;calll  <IoWMIExecuteMethod+>;movl $, %eax;jmp  <IoRegisterFsRegistrationChange+>": 1,
                "calll - <IoQueueWorkItem+>;calll - <_CIsqrt+>;retl $;decl %esi;addb %dl, (%eax,%eax)": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);je  <RtlCreateUnicodeString+>;pushl %edi;movl %ebx, %ecx": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jl  <RtlCreateUnicodeString+>;jmp - <RtlUpperString+>;movl (%ebp), %esi": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);jne  <RtlCreateUnicodeString+>;cmpl $, (%eax);jb  <RtlCreateUnicodeString+>": 2,
                "jmp - <RtlUpperString+>;pushl -(%ebp);calll - <IoDeleteDevice>;jmp  <IoCheckFunctionAccess+>;nop": 1,
                "xorl %esi, %esi;pushl %esi;pushl $;pushl $;pushl $": 1,
                "movl $, ;movl $, ;calll  <RtlCreateUnicodeString+>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "movl (%ebp), %esi;pushl %edi;pushl $;pushl $;pushl $": 1,
                "movl %ebx, (%eax);movl (%esi), %eax;pushl $;movl $, %edi;addl $, %eax": 1,
                "jne  <RtlCreateUnicodeString+>;movl $, (%esi);cmpl %edi, (%esi);jne  <RtlCreateUnicodeString+>;movl $, (%esi)": 11,
                "jne  <RtlCreateUnicodeString+>;movl $, (%esi);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "nop;nop;andl $, ;pushl %esi;pushl %edi": 1,
                "nop;andl $, ;pushl %esi;pushl %edi;pushl $": 1,
                "jne - <RtlCheckRegistryKey+>;movb %bl, -(%ebp);jmp - <RtlCheckRegistryKey+>;cmpl %ebx, -(%ebp);movb %bl, -(%ebp)": 1,
                "movb %bl, -(%ebp);jne  <IoCheckFunctionAccess+>;jmp - <RtlCheckRegistryKey+>;testb $, %al;je  <RtlInitializeRangeList+>": 1,
                "jmp - <ExInitializePagedLookasideList+>;pushl $;jmp - <RtlInitializeRangeList+>;nop;nop": 1,
                "movb , %al;pushl $;pushl $;pushl %eax;pushl ": 1,
                "jmp - <RtlInitializeRangeList+>;movl $, %eax;jmp - <RtlInitializeRangeList+>;nop;nop": 1,
                "pushl %eax;calll  <RtlInitializeRangeList+>;movl %eax, %edi;jmp - <IoOpenDeviceRegistryKey+>;nop": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "calll - <ExAcquireResourceExclusiveLite>;pushl %ebx;pushl %ebx;pushl $;pushl $": 1,
                "movl %eax, -(%ebp);jl  <RtlInitializeRangeList+>;movl -(%ebp), %edx;xorl %eax, %eax;movl %edi, %ecx": 1,
                "movw %bx, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);calll - <RtlAppendStringToString>": 1,
                "rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx;movl %eax, (%ecx);movl $, %ecx;calll - <ExReleaseResourceLite>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl $, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "calll - <RtlCreateUnicodeString+>;retl;pushl %edx;addb %ch, (%edi);outsl (%esi), %dx": 2,
                "movb (%esi), %al;pushl %eax;pushl (%esi);pushl (%esi);pushl (%esi)": 1,
                "pushl (%esi);pushl (%esi);pushl (%esi);pushl (%esi);pushl (%ebx)": 2,
                "calll  <RtlInitializeRangeList+>;testb %al, %al;jne  <IoCheckFunctionAccess+>;popl %edi;popl %esi": 1,
                "pushl $;pushl %esi;pushl %esi;pushl ;calll - <RtlAddRange>": 1,
                "addl $, %eax;adcl %edi, %edx;testl %edx, %edx;popl %edi;popl %esi": 1,
                "jl  <RtlInitializeRangeList+>;movl $, %ecx;jg  <RtlInitializeRangeList+>;cmpl %ecx, %eax;ja  <RtlInitializeRangeList+>": 1,
                "cmpl $, -(%ebp);je - <RtlUnicodeStringToAnsiString+>;testl $, %eax;jne - <RtlUnicodeStringToAnsiString+>;pushl %esi": 1,
                "calll - <RtlImageNtHeader>;movl %eax, -(%ebp);testl %eax, %eax;je  <RtlInitializeRangeList+>;movl (%eax), %ecx": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);orl $-, -(%ebp);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "andw $, (%ecx,%eax,);movw $, (%ebx);movl , %eax;movl $, (%ebx);movl %eax, (%ebx)": 1,
                "calll - <RtlUnicodeStringToAnsiString>;testl %eax, %eax;jl  <RtlInitializeRangeList+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %esi;pushl %edi;pushl $;popl %ecx;movl $, %edi": 1,
                "popl %ecx;movl $, %edi;leal (%ebx), %esi;xorl %eax, %eax;rep  cmpsl %es:(%edi), (%esi)": 2,
                "xorl %eax, %eax;rep  cmpsl %es:(%edi), (%esi);jne  <RtlInitializeRangeList+>;calll - <IoGetDeviceProperty+>;pushl (%ebx)": 1,
                "pushl %edi;xorl %edi, %edi;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;pushl %esi;pushl $": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;jne  <IoCheckFunctionAccess+>;leal (%edi), %esi": 1,
                "pushl %edi;movl %fs:, %eax;movl (%eax), %edi;movl (%edi), %ecx;movl (%ebp), %esi": 1,
                "movb $, (%esi);movl %ecx, (%esi);movl %eax, (%eax);movl %eax, (%eax);leal (%esi), %eax": 1,
                "cmpl %esi, %eax;ja  <IoCheckFunctionAccess+>;cmpl $, ;je  <IoCheckFunctionAccess+>;popl %edi": 1,
                "calll  <RtlQueryTimeZoneInformation+>;cmpl %ebx, %eax;jl  <RtlQueryTimeZoneInformation+>;movl (%ebp), %edx;pushl %esi": 1,
                "nop;nop;nop;nop;incl %esp": 1,
                "pushl $;leal -(%ebp), %eax;pushl $;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl $, %esi;pushl %esi;movl $, -(%ebp);movl $, -(%ebp);calll - <RtlQueryRegistryValues>": 1,
                "movl -(%ebp), %eax;cmpl (%ebp), %eax;jne  <IoCheckFunctionAccess+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl $, (%ebx);jmp - <RtlInitCodePageTable+>;movl $, %eax;jmp - <IoOpenDeviceRegistryKey+>;nop": 1,
                "movl %ebx, -(%ebp);pushl %eax;calll - <RtlImageNtHeader>;movl %eax, -(%ebp);cmpl %ebx, %eax": 3,
                "cmpl %ebx, %eax;je  <RtlQueryTimeZoneInformation+>;movl (%eax), %eax;movl %eax, -(%ebp);orl $-, -(%ebp)": 2,
                "calll - <PsSetProcessWindowStation+>;cmpl %ebx, %eax;leal -(%ebp), %eax;pushl %eax;pushl (%esi)": 1,
                "pushl %eax;calll  <PsRemoveLoadImageNotifyRoutine+>;jmp - <NtAdjustPrivilegesToken+>;cmpl %ebx, (%esi);je  <RtlQueryTimeZoneInformation+>": 1,
                "lock;cmpxchgl %edi, (%edx);jne - <RtlQueryTimeZoneInformation+>;movl %ebx, -(%ebp);testb %al, %cl": 1,
                "cmpxchgl %edi, (%edx);jne - <RtlQueryTimeZoneInformation+>;movl %ebx, -(%ebp);testb %al, %cl;jne  <RtlQueryTimeZoneInformation+>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;je  <RtlQueryTimeZoneInformation+>;movl (%eax), %ecx;addl (%eax), %ecx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp  <RtlQueryTimeZoneInformation+>;nop;nop": 1,
                "je  <RtlQueryTimeZoneInformation+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <ZwOpenFile>;cmpl %ebx, %eax": 1,
                "pushl %eax;calll - <ZwOpenFile>;cmpl %ebx, %eax;jge  <RtlQueryTimeZoneInformation+>;movl %ebx, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);pushl $;leal -(%ebp), %eax": 2,
                "calll - <ObCloseHandle>;cmpl %ebx, %esi;je - <NtAdjustPrivilegesToken+>;movl $, -(%ebp);movl %ebx, (%esi)": 1,
                "orl $-, -(%ebp);jmp - <NtAdjustPrivilegesToken+>;nop;nop;nop": 1,
                "movl $, -(%ebp);xorl %eax, %eax;incl %eax;movl %eax, -(%ebp);pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll  <KeFlushQueuedDpcs+>;jmp - <NtAdjustPrivilegesToken+>": 1,
                "addb %ah, (%eax);decl %edi;addb %dl, (%eax,%ebx,);addb %bh, (%eax);popl %eax": 1,
                "decl %edi;addb %dh, %ah;fimuls (%edi);decl %edi;addb %al, %ah": 1,
                "addb %al, %ah;fimuls (%edi);movb $-, %al;decl %edi;addb %ah, (%esi,%ebx,)": 1,
                "addb %dh, (%eax,%eax);addb %al, (%ebx);addb %ch, %gs:(%esi);je  <RtlQueryTimeZoneInformation+>;addb %dh, %gs:(%edx)": 1,
                "je  <RtlQueryTimeZoneInformation+>;addb %dh, %gs:(%edx);addb %al, (%eax);nop;nop": 1,
                "addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx);insb %dx, %es:(%edi);addb %ah, (%eax)": 1,
                "popal;addb %ch, (%eax,%eax);addb %ah, (%eax);addb %al, (%edx);jne  <RtlQueryTimeZoneInformation+>": 2,
                "je  <RtlQueryTimeZoneInformation+>;jb  <RtlQueryTimeZoneInformation+>;jns  <RtlQueryTimeZoneInformation+>;popl %esp;addb %cl, (%ebp)": 1,
                "jl  <IoCheckFunctionAccess+>;calll - <ZwClose>;movzwl -(%ebp), %eax;pushl $;pushl %eax": 1,
                "rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;pushl %edi;pushl %ebx;calll *-(%ebp)": 1,
                "pushl %ebx;calll *-(%ebp);movl %eax, %esi;cmpl %edi, %esi;jl  <IoCheckFunctionAccess+>": 1,
                "calll  <LdrFindResourceDirectory_U+>;jmp - <ObReferenceObjectByName+>;nop;nop;nop": 1,
                "pushl %edi;movl %edx, -(%ebp);movl %edx, (%ebp);jbe  <IoCheckFunctionAccess+>;addl $, -(%ebp)": 1,
                "addl $, %ecx;cmpl %esi, -(%ebp);leal (%eax), %edi;movl %ebx, (%eax);movl %edi, (%eax)": 1,
                "cmpl $, %eax;je  <LdrFindResourceDirectory_U+>;calll - <MmIsThisAnNtAsSystem>;testb %al, %al;jne  <LdrFindResourceDirectory_U+>": 1,
                "movl $, %esi;andl $, %edi;cmpl $, %edi;je  <LdrFindResourceDirectory_U+>;cmpl $, %edi": 1,
                "cmpl $, %esi;movl $, %edi;movsw (%esi), %es:(%edi);sete %al;cmpb $, (%ebp)": 1,
                "movl $, %edx;cmpl %edx, %eax;je  <LdrFindResourceDirectory_U+>;movb (%eax), %bl;negb %bl": 1,
                "inb $, %al;xorl $, %eax;pushl ;calll - <SeSinglePrivilegeCheck>;testb %al, %al": 1,
                "movl $, %eax;lock;orl %eax, (%edx);jmp - <NtSetInformationProcess+>;calll  <ExRaiseAccessViolation>": 1,
                "cmpl $, %esi;jne  <LdrFindResourceDirectory_U+>;xorl %eax, %eax;incl %eax;movl %eax, -(%ebp)": 1,
                "incl %eax;movl %eax, -(%ebp);movl (%ebx), %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebx), %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp);pushl %ebx": 1,
                "jmp - <IoGetDeviceInterfaces+>;calll  <ExRaiseAccessViolation>;jmp - <IoUnregisterFileSystem+>;pushl $;calll  <IoAttachDevice+>": 1,
                "jmp - <IoUnregisterFileSystem+>;pushl $;calll  <IoAttachDevice+>;jmp - <IoWMIRegistrationControl+>;calll  <ExRaiseAccessViolation>": 1,
                "movl $, %eax;jmp - <IoWMIRegistrationControl+>;movl %edi, -(%ebp);jmp - <IoWMIRegistrationControl+>;cmpl %eax, %edi": 1,
                "retl $;movl , %eax;movl , %ecx;pushl %esi;movl (%eax), %esi": 1,
                "calll  <MmMapUserAddressesToPage+>;jmp - <SeTokenIsWriteRestricted+>;nop;nop;nop": 1,
                "incl (%esi);popl %esi;jne  <LdrFindResourceDirectory_U+>;leal (%edi), %eax;cmpl %eax, (%eax)": 1,
                "xorl %ebx, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ebx": 3,
                "pushl (%ebp);movl %ebx, (%edi);pushl $;movb %bl, -(%ebp);movb $, -(%ebp)": 1,
                "jmp  <LdrFindResourceDirectory_U+>;xorb %al, %al;jmp  <LdrFindResourceDirectory_U+>;nop;nop": 1,
                "movl (%ebp), %ecx;pushl %edi;movl %edx, -(%ebp);movl %eax, -(%ebp);je  <LdrFindResourceDirectory_U+>": 1,
                "calll - <wcslen>;pushl -(%ebp);movl %eax, -(%ebp);calll - <wcslen>;cmpl -(%ebp), %eax": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);calll - <wcslen>;cmpl -(%ebp), %eax;popl %ecx": 1,
                "cmpl -(%ebp), %edi;jb  <LdrFindResourceDirectory_U+>;movl (%esi), %eax;addl -(%ebp), %eax;cmpl %eax, %edi": 1,
                "movb $, -(%ebp);movl (%esi), %esi;cmpl -(%ebp), %esi;jne  <LdrFindResourceDirectory_U+>;xorl %esi, %esi": 1,
                "movl (%ebp), %esi;je  <IoCheckFunctionAccess+>;pushl (%ebp);movzbl (%ebp), %eax;pushl ": 1,
                "movl %eax, -(%ebp);jl  <LdrFindResourceDirectory_U+>;leal -(%ebp), %eax;movl %eax, -(%ebp);leal (%ebp), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %edi;cmpl %ebx, %edi;jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "andl $-, %esi;testl %ebx, %ebx;pushl %edi;je - <LdrFindResourceDirectory_U+>;cmpl %esi, %edx": 1,
                "testb $, %al;movl (%ebp), %ecx;je  <IoWMIQuerySingleInstance+>;movl (%ebx), %eax;movl %eax, (%ecx)": 1,
                "pushl $;pushl ;pushl %esi;pushl (%ebp);calll - <ObReferenceObjectByHandle>": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;pushl %esi;movl $, (%ebp)": 1,
                "cmpl %esi, (%ebx);jbe  <IoWMIQuerySingleInstance+>;leal (%ebx), %eax;movl (%eax), %ebx;cmpl %eax, %ebx": 1,
                "cmpl %esi, %edi;jne  <IoCheckFunctionAccess+>;movzwl -(%ebp), %eax;pushl $;addl $, %eax": 1,
                "movl %eax, %edi;cmpl %esi, %edi;je  <IoWMIQuerySingleInstance+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl $;pushl %edi;calll - <swprintf>;movl (%ebp), %ecx;addl $, %esp": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;popl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "decl (%esi);pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %eax;cmpl %ebx, (%eax);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %eax;cmpl %ebx, (%eax);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "cmpl %eax, (%eax);je - <IoWMIQuerySingleInstance+>;jmp  <IoCheckFunctionAccess+>;leal (%esi), %eax;cmpl %eax, (%eax)": 1,
                "calll - <ExAllocatePoolWithTag>;pushl %edi;pushl (%ebp);movl %eax, (%esi);calll - <wcslen>": 1,
                "pushl %ecx;calll - <wcscpy>;pushl (%ebp);pushl (%esi);calll - <wcscpy>": 1,
                "pushl $;movl %esi, (%ecx);calll - <KeReleaseMutex>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "cmpl %eax, %ebx;je  <IoCheckFunctionAccess+>;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "jl  <IoWMIQueryAllData+>;movl (%esi), %ecx;testb $, %ch;jne  <IoCheckFunctionAccess+>;testb $, %cl": 1,
                "pushl ;pushl $;pushl %eax;calll - <ObReferenceObjectByPointer>;jmp - <RtlUpcaseUnicodeStringToOemString+>": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl $;leal (%eax,%esi), %esi;xorl %edi, %edi": 1,
                "addl %ebx, %eax;decl %ecx;decl %ecx;movw %cx, (%eax);movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;decl %ecx;decl %ecx;movw %cx, (%eax);leal (%eax), %edi": 1,
                "pushl %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 2,
                "pushl $;calll - <NtConnectPort>;testl %eax, %eax;jl - <IoOpenDeviceInterfaceRegistryKey+>;cmpl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);calll - <IoWMIQueryAllData+>;testb %al, %al;je  <IoWMIQueryAllData+>;pushl %esi": 1,
                "leal -(%ecx), %edx;addl $-, %ecx;movl %edx, -(%ebp);movl %ecx, %edx;shrl $, %ecx": 1,
                "movl (%eax), %ecx;movl %ecx, (%ebx);movw $, (%ebx);cmpw $, (%eax);movl %eax, -(%ebp)": 1,
                "leal (%ecx,%ebx), %ecx;movl -(%ebp), %esi;andl $, -(%ebp);leal (%ecx), %edi;andl $-, %edi": 1,
                "decl %edx;cmpw $, (%edx);movl $, -(%ebp);je  <IoWMIQueryAllData+>;cmpl -(%ebp), %edx": 1,
                "subl $, -(%ebp);addl $-, %esi;cmpl %esi, -(%ebp);ja  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;movzwl -(%ebp), %ecx;leal -(%esi), %edx;cmpl %edx, %ecx": 1,
                "addl %edx, -(%ebp);incw (%ebx);subl %edx, %ecx;movl %edx, -(%ebp);leal (%eax), %edx": 1,
                "calll  <NtRequestPort>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %esi;movzwl (%esi), %eax": 1,
                "movl -(%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "movl (%esi), %ecx;testl %ecx, %ecx;je  <IoWMIQueryAllData+>;calll - <ObfDereferenceObject>;cmpl $, -(%ebp)": 1,
                "calll - <IoQueueWorkItem+>;leave;retl $;nop;addb %al, (%eax)": 1,
                "incl (%esi);cmpw (%esi), %ax;jb - <NtQueryInformationThread+>;jmp  <IoCheckFunctionAccess+>;nop": 1,
                "leal (%eax), %ecx;movl %ecx, (%eax);orl $-, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;pushl $": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;pushl $;pushl $": 1,
                "pushl $;pushl $;movl %ecx, (%eax);calll - <KeReleaseMutex>;xorl %eax, %eax": 1,
                "cmpl (%ebp), %eax;jb  <IoWMISetNotificationCallback+>;testb $, %cl;jne  <IoWMISetNotificationCallback+>;movl %eax, (%edx)": 1,
                "jne  <IoWMISetNotificationCallback+>;movl %eax, (%edx);movb $, %al;popl %ebp;retl $": 1,
                "retl $;xorb %al, %al;jmp - <IoWMISetNotificationCallback+>;nop;nop": 1,
                "jne  <IoCheckFunctionAccess+>;pushl %ebx;movw (%esi), %bx;testb %bh, %bh;jns  <IoCheckFunctionAccess+>": 1,
                "je  <RtlValidRelativeSecurityDescriptor+>;leal (%esi,%edi), %eax;movzwl (%eax), %ecx;cmpl %ecx, (%ebp);jb  <RtlValidRelativeSecurityDescriptor+>": 1,
                "jb  <RtlValidRelativeSecurityDescriptor+>;pushl %eax;calll - <FsRtlTeardownPerStreamContexts+>;testb %al, %al;je  <RtlValidRelativeSecurityDescriptor+>": 1,
                "movl %ecx, (%eax);jbe  <RtlValidRelativeSecurityDescriptor+>;cmpb $, (%ebp);movl (%ebp), %eax;movl (%eax,%ebx,), %edi": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %eax;testl %eax, %eax;je  <RtlValidRelativeSecurityDescriptor+>;pushl $": 1,
                "movl -(%ebp), %edi;cmpl %edi, %ecx;ja  <IoCheckFunctionAccess+>;andl $, -(%ebp);andl $, (%ebp)": 1,
                "ja  <IoCheckFunctionAccess+>;andl $, -(%ebp);andl $, (%ebp);cmpb $, (%ebp);movl %esi, %eax": 1,
                "andl $, (%eax);movl (%ebp), %eax;subl %edi, %esi;movl %esi, (%eax);jmp - <IoGetDeviceProperty+>": 1,
                "subl %edi, %esi;movl %esi, (%eax);jmp - <IoGetDeviceProperty+>;cmpl %eax, (%edi);je - <IoGetDeviceProperty+>": 1,
                "addl $, %eax;andl $-, %eax;cmpl (%ebx), %eax;ja  <IoCheckFunctionAccess+>;pushl $": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;andl $, (%ebx);andl $, (%ebx)": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;andl $, (%ebx);andl $, (%ebx);movl %eax, (%ebx)": 1,
                "pushl %edi;movl (%ebx), %edi;leal (%edi,%ecx), %edx;andl $-, %edx;cmpl (%ebx), %edx": 1,
                "ja  <IoCheckFunctionAccess+>;addl %eax, %edi;movl (%ebx), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %edi;xorl %esi, %esi;pushl %esi": 1,
                "jl  <IoCheckFunctionAccess+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;cmpl %edi, %ebx;movl %ebx, %eax": 1,
                "orl %edx, %ecx;pushl (%ebp);movl %ecx, (%eax);pushl (%ebp);pushl (%ebp)": 1,
                "testb %bl, %bl;movl %eax, %edi;je  <RtlValidRelativeSecurityDescriptor+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "andl $, %edx;addl %edx, %edi;addw (%ecx,%edi,), %si;movl (%ebp), %edi;movl (%ebp), %edx": 1,
                "movb (%ecx,%eax), %cl;movb %cl, -(%edx);movzwl -(%edi), %ecx;movzbl (%ecx,%eax), %ecx;movl , %edx": 1,
                "pushl %eax;addb %dh, -;addl (%eax), %edx;popal;addl (%eax), %edx": 1,
                "jmp - <RtlQueryAtomInAtomTable+>;nop;nop;nop;nop": 2,
                "je  <IoCheckFunctionAccess+>;movl %ebx, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb (%eax), %al": 1,
                "movw %cx, (%esi);movw -(%ebp), %cx;movw %cx, (%esi);movw -(%ebp), %cx;movw %cx, (%esi)": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <NtQueryInformationAtom+>": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;addl $, %ecx;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "calll - <ZwClose>;jmp - <NtQueryInformationAtom+>;orl $-, -(%ebp);cmpl %ebx, %esi;jl  <IoCheckFunctionAccess+>": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <NtQueryInformationAtom+>;movl -(%ebp), %eax;leal (%ebx,%eax,), %eax": 1,
                "xchgl %eax, (%ecx);jmp  <ObSetSecurityDescriptorInfo+>;cmpl $, %eax;je  <IoCheckFunctionAccess+>;jmp  <ObSetSecurityDescriptorInfo+>": 1,
                "jmp - <RtlEqualUnicodeString+>;movl $, %esi;movl %esi, %ecx;calll *;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $-": 5,
                "pushl -(%ebp);calll - <toupper+>;jmp - <IoWMIRegistrationControl+>;cmpl $, %edi;jne - <NtQuerySystemInformation+>": 1,
                "movl , %eax;movl %eax, (%ebx);movl , %eax;movl %eax, (%ebx);movb , %al": 1,
                "pushl $;movl $, %ebx;pushl %ebx;calll - <RtlEnumerateGenericTableAvl>;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <NtQueryInformationAtom+>;cmpl $, (%eax);jne  <IoCheckFunctionAccess+>;pushl $": 1,
                "jb  <NtQueryInformationAtom+>;movl (%ebp), %eax;pushl $;pushl %ebx;movl %eax, (%ebp)": 1,
                "calll - <RtlEnumerateGenericTableAvl>;testl %eax, %eax;je  <NtQueryInformationAtom+>;pushl %edi;cmpl $, (%eax)": 1,
                "popl %edi;movl (%ebp), %eax;movl %esi, (%eax);xorl %esi, %esi;movl $, %ecx": 1,
                "cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "pushl %ebx;calll  <RtlValidSecurityDescriptor+>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;pushl (%ebp)": 1,
                "calll - <IoGetRequestorSessionId+>;movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "popl %ebx;leave;retl $;pushl %eax;movw %ax, (%esi)": 1,
                "movl %eax, (%esi);jne - <RtlUnicodeStringToOemString+>;jmp  <IoCheckFunctionAccess+>;orl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movb $, (%edx);movl (%esi), %edx;movl %eax, (%edx);movl (%esi), %eax;addl $, %eax": 1,
                "movl %ecx, (%eax);jmp - <SeQueryInformationToken+>;movl (%eax), %eax;jmp - <NtQueryInformationAtom+>;nop": 1,
                "movl (%eax), %eax;jmp - <NtQueryInformationAtom+>;nop;nop;nop": 1,
                "jl  <NtQueryInformationAtom+>;testb $, (%edi);leal (%ebx), %eax;je  <NtQueryInformationAtom+>;movl %esi, %ecx": 1,
                "subl %ebx, %eax;movl %eax, (%ebx);testb $, (%edi);je  <NtQueryInformationAtom+>;orb $, (%ebx)": 1,
                "pushl -(%ebp);calll - <MmMapViewOfSection>;movl %eax, -(%ebp);testl %eax, %eax;jl  <NtQueryInformationAtom+>": 2,
                "cmpl $, -(%ebp);popl %edi;popl %esi;je  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx": 1,
                "lock;orl %eax, (%ecx);testb $, (%esi);jne  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "pushl %ebx;leal (%esi), %ebx;movl %ebx, %ecx;calll *;leal (%esi), %eax": 1,
                "calll - <ExReleaseResourceLite>;incl (%edi);popl %ebx;je  <IoCheckFunctionAccess+>;testl %esi, %esi": 1,
                "addl $, %esi;cmpl $, %esi;jb - <NtDeleteFile+>;popl %esi;leave": 1,
                "pushl %esi;calll - <IoCheckEaBufferValidity+>;testb %al, %al;je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl $-, -(%ebp);je  <NtDeleteFile+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %ecx;addl $, %ecx;cmpl $-, -(%ebp);movl %ecx, (%eax);je  <NtDeleteFile+>": 1,
                "addl $, %ecx;cmpl $-, -(%ebp);movl %ecx, (%eax);je  <NtDeleteFile+>;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <NtDeleteFile+>;movl (%edi), %eax;testl %eax, %eax;movb $, -(%ebp);je  <NtDeleteFile+>": 1,
                "addl $, -(%ebp);andl $-, %eax;movl %eax, (%edi);movl -(%ebp), %eax;cmpl (%ebp), %eax": 1,
                "cmpl (%ebp), %eax;movl %ecx, (%edi);jb - <NtDeleteFile+>;pushl $;pushl %esi": 1,
                "pushl %ebx;calll - <RtlCreateSecurityDescriptor+>;movl (%ebp), %edi;movw %ax, (%edi);movzwl (%esi), %eax": 2,
                "movw $, (%edi);popl %edi;popl %ebx;popl %esi;popl %ebp": 1,
                "movl (%ebp), %ecx;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %esi;andl $, (%esi);movl %esi, -(%ebp)": 1,
                "cmpl %eax, %ecx;je  <NtDeleteFile+>;movl (%edi), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "je  <NtDeleteFile+>;pushl (%ebp);pushl %edi;calll *(%edi);testl %eax, %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;incl %eax;cmpl (%ebp), %eax;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);je - <NtDeleteFile+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;xorl %ecx, %ecx": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;addl %ecx, %eax;cmpl %eax, %edx;ja  <IoCheckFunctionAccess+>": 1,
                "movb $, -(%ebp);jmp - <NtDeleteFile+>;movb $, -(%ebp);cmpl $, -(%ebp);popl %edi": 1,
                "movb $, -(%ebp);cmpl $, -(%ebp);popl %edi;popl %esi;popl %ebx": 1,
                "pushl %edi;movb %al, (%ebp);movl %ebx, (%esi);calll - <ExFreePoolWithTag>;movb (%ebp), %al": 1,
                "pushl %esi;pushl %ecx;pushl (%ebp);calll  <NtDeleteFile+>;cmpl $-, %eax": 1,
                "movl $, %eax;jb  <NtDeleteFile+>;cmpl $, %ecx;jae  <NtDeleteFile+>;cmpl %eax, %ecx": 1,
                "jb  <NtDeleteFile+>;cmpl $, %ecx;jae  <NtDeleteFile+>;cmpl %eax, %ecx;ja - <NtDeleteFile+>": 2,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%esi), %eax": 1,
                "movb $, -(%ebp);pushl %esi;calll  <NtDeleteFile+>;testb %al, %al;je  <NtDeleteFile+>": 1,
                "calll - <RtlGeneratedotName+>;movl (%ebp), %eax;movl %ebx, (%edi);movl (%eax), %ecx;orl $-, (%edi)": 1,
                "movl (%eax), %ecx;orl $-, (%edi);xorl %ebx, %ebx;cmpl %ebx, %ecx;movl %ebx, (%edi)": 1,
                "calll *(%eax);cmpl %ebx, %eax;movl %eax, (%ebp);je - <NtDeleteFile+>;cmpl $, (%ebp)": 1,
                "je - <NtDeleteFile+>;cmpl $, (%ebp);jbe  <NtDeleteFile+>;pushl -(%ebp);movl (%ebp), %eax": 1,
                "jl  <IoCheckFunctionAccess+>;incl %ebx;cmpl (%ebp), %ebx;jb - <NtDeleteFile+>;movb $, -(%ebp)": 1,
                "incl %ebx;cmpl (%ebp), %ebx;jb - <NtDeleteFile+>;movb $, -(%ebp);movl (%ebp), %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;movb -(%ebp), %al;popl %ebx": 1,
                "pushl %edi;calll - <NtDeleteFile+>;testb %al, %al;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "calll - <NtDeleteFile+>;testb %al, %al;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "jne - <NtDeleteFile+>;movl (%esi), %eax;cmpl $-, %eax;pushl %ebx;je  <NtDeleteFile+>": 1,
                "je  <NtDeleteFile+>;pushl %eax;pushl %edi;calll - <SeCreateClientSecurity+>;testb %al, %al": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%esi);jbe  <NtDeleteFile+>;pushl (%esi);pushl %edi": 1,
                "jbe  <NtDeleteFile+>;pushl (%esi);pushl %edi;calll - <SeCreateClientSecurity+>;testb %al, %al": 1,
                "cmpl %ebx, %eax;movl %eax, (%ebp);je - <NtDeleteFile+>;cmpl %ebx, (%esi);jbe  <NtDeleteFile+>": 1,
                "movl (%ebp), %esi;pushl %esi;pushl (%ebp);pushl %ebx;calll - <NtDeleteFile+>": 1,
                "pushl %ebx;calll - <NtDeleteFile+>;testb %al, %al;je  <NtDeleteFile+>;testb $, (%esi)": 1,
                "pushl %ebx;calll - <RtlGeneratedotName+>;testb %al, %al;je  <NtDeleteFile+>;incl %edi": 1,
                "cmpl (%esi), %edi;jb - <NtDeleteFile+>;pushl (%esi);pushl %ebx;calll - <RtlGeneratedotName+>": 1,
                "orl $-, -(%ebp);pushl %ebx;pushl %esi;xorl %esi, %esi;cmpl $-, %eax": 1,
                "pushl -(%ebp);movl (%edi), %eax;movl (%ebp), %ebx;movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "movl (%ebp), %ebx;movl %eax, -(%ebp);movl (%edi), %eax;pushl %ebx;pushl (%ebp)": 1,
                "movl %eax, (%ebp);je  <NtDeleteFile+>;cmpl $, -(%ebp);ja  <IoCheckFunctionAccess+>;pushl (%ebp)": 1,
                "pushl %eax;pushl %esi;pushl (%ebp);pushl %ebx;calll - <RtlGeneratedotName+>": 1,
                "andl $, (%esi);testl %eax, %eax;movl %eax, -(%ebp);je  <NtDeleteFile+>;cmpb $, (%ebp)": 1,
                "movl (%ebp), %eax;pushl %eax;calll *(%eax);testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl %ebx;calll *(%ebx);testl %eax, %eax;je  <NtDeleteFile+>": 1,
                "jb - <NtDeleteFile+>;movb $, -(%ebp);cmpl $, -(%ebp);je  <NtDeleteFile+>;movl (%ebp), %ecx": 1,
                "pushl %eax;pushl (%esi);pushl %ebx;calll - <RtlGeneratedotName+>;testb %al, %al": 1,
                "testl %edi, %edi;je  <NtDeleteFile+>;movl (%edi), %eax;cmpl $-, %eax;je  <NtDeleteFile+>": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;incl %ebx;cmpw (%edi), %bx;jb - <NtDeleteFile+>": 1,
                "testl %eax, %eax;je - <SeCreateClientSecurity+>;jmp  <IoCheckFunctionAccess+>;andl $, -(%ebp);movl $, %ebx": 1,
                "andl $, -(%ebp);movl $, %ebx;movl %ebx, -(%ebp);pushl $;pushl %esi": 1,
                "movw -(%ebp), %ax;cmpw %ax, (%ebx);jae - <RtlGeneratedotName+>;pushl (%ebx);pushl (%ebp)": 1,
                "testl %eax, %eax;je  <NtDeleteFile+>;movl (%esi), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl $, %eax": 1,
                "cmpl $-, %eax;je  <NtDeleteFile+>;pushl %eax;pushl %esi;calll - <RtlGeneratedotName+>": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);leal (%esi), %eax": 1,
                "cmpl %eax, %ecx;jne  <IoCheckFunctionAccess+>;movl %edi, %ecx;calll *;testl %ebx, %ebx": 1,
                "pushl %eax;calll *%ecx;pushl %esi;calll - <RtlGeneratedotName+>;pushl %esi": 1,
                "cmpl %ebx, %esi;je  <NtDeleteFile+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl %ebx, -(%ebp);calll - <ZwCreateKey>;cmpl %ebx, %esi;movl %eax, %edi;je  <NtDeleteFile+>": 1,
                "movl %eax, -(%ebp);jl  <NtDeleteFile+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "retl $;xorl %esi, %esi;jmp - <NtDeleteFile+>;nop;popl %esp": 1,
                "orl $-, -(%ebp);pushl %ebx;pushl %esi;pushl %edi;xorl %esi, %esi": 1,
                "pushl %esi;pushl %esi;pushl $;calll - <KeWaitForSingleObject>;cmpl %esi, ": 1,
                "movl $, ;stosl %eax, %es:(%edi);cmpl %esi, ;je  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl -(%ebp);calll - <NtDeleteFile+>;movl %eax, -(%ebp);cmpl %esi, -(%ebp);jl  <IoCheckFunctionAccess+>": 1,
                "movl (%ebp), %eax;movl -(%ebp), %ecx;incl ;movl %ecx, (%eax);pushl %esi": 1,
                "movl -(%ebp), %ecx;incl ;movl %ecx, (%eax);pushl %esi;pushl $": 1,
                "pushl %edi;movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp)": 1,
                "calll  <ExRaiseAccessViolation>;jmp - <MmUnmapViewInSessionSpace+>;cmpl %edi, %esi;jge  <IoCheckFunctionAccess+>;jmp - <CcSetLogHandleForFile+>": 1,
                "cmpl %edi, %esi;jge  <IoCheckFunctionAccess+>;jmp - <CcSetLogHandleForFile+>;pushl $;pushl %ebx": 1,
                "pushl $;calll - <_CIsqrt+>;movl (%ebp), %ebx;xorl %esi, %esi;cmpl %esi, %ebx": 1,
                "movb $, -(%ebp);movl %fs:, %eax;cmpb $, (%eax);je  <IoCheckFunctionAccess+>;movl %esi, -(%ebp)": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl %esi": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl $;pushl %esi": 1,
                "je - <SeQueryInformationToken+>;jmp - <SeQueryInformationToken+>;movl $, -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;movl -(%ebp), %eax": 1,
                "jmp - <SeQueryInformationToken+>;movl $, -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "testl %esi, %esi;je  <FsRtlRegisterUncProvider+>;testl %eax, %eax;je  <FsRtlRegisterUncProvider+>;movl (%esi), %edx": 1,
                "movl $, %ecx;andl %ecx, %edx;cmpl %ecx, %edx;je  <FsRtlRegisterUncProvider+>;movl (%eax), %edx": 1,
                "cmpl %ecx, %edx;je  <FsRtlRegisterUncProvider+>;movl (%eax), %edx;andl %ecx, %edx;cmpl %ecx, %edx": 1,
                "je  <FsRtlRegisterUncProvider+>;testl %eax, %eax;je  <FsRtlRegisterUncProvider+>;cmpl $, (%esi);je  <FsRtlRegisterUncProvider+>": 1,
                "jne - <IoGetDeviceProperty+>;andl $, %ecx;negl %ecx;sbbl %ecx, %ecx;andl $, %ecx": 1,
                "cmpl , %esi;jne - <FsRtlRegisterUncProvider+>;movl -(%ebp), %ecx;cmpl %ebx, (%ebp);movl %ebx, (%edi)": 1,
                "pushl (%ebp);pushl -(%ebp);calll  <KeFlushQueuedDpcs+>;movl %eax, %ebx;cmpl $, %ebx": 1,
                "pushl %edi;pushl -(%ebp);pushl $;pushl $;pushl $": 1,
                "pushl $;pushl $;pushl $;pushl -(%ebp);calll - <RtlQueryRegistryValues+>": 1,
                "insb %dx, %es:(%edi);subl %edx, (%eax);xorb $, %al;pushl %eax;addb %al, (%edi)": 1,
                "calll - <IoGetRequestorSessionId+>;movl %ebx, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "leave;retl $;movl $, %ebx;jmp - <FsRtlRegisterUncProvider+>;nop": 1,
                "pushl %edi;movl %ebx, -(%ebp);movw %bx, -(%ebp);movw %bx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl (%esi);leal (%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;calll  <RtlValidSecurityDescriptor+>;cmpl %ebx, %eax;jl  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "shrl %eax;movl %eax, (%esi);pushl -(%ebp);pushl (%ebp);calll - <IoGetRequestorSessionId+>": 5,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "popl %esp;addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <FsRtlRegisterUncProvider+>": 1,
                "jne  <FsRtlRegisterUncProvider+>;jb  <FsRtlRegisterUncProvider+>;jb  <FsRtlRegisterUncProvider+>;addb %ch, %gs:(%esi);je  <FsRtlRegisterUncProvider+>": 1,
                "addb %ch, %gs:(%esi);je  <FsRtlRegisterUncProvider+>;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "addb %dh, %gs:(%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <FsRtlRegisterUncProvider+>;imull $, (%eax), %eax": 1,
                "calll  <ExRaiseAccessViolation>;jmp - <PsLookupProcessByProcessId+>;xorb %al, %al;jmp - <PsLookupProcessByProcessId+>;movl (%ebp), %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <MmProbeAndLockPages>;orl $-, -(%ebp);jmp - <FsRtlIncrementCcFastReadWait+>": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;testl %ebx, %ebx;je  <IoCheckFunctionAccess+>": 1,
                "movl %fs:, %eax;incl (%eax);popl %edi;je  <IoCheckFunctionAccess+>;xorl %eax, %eax": 1,
                "leal -(%ebp), %ebx;movl $, -(%ebp);movb $, -(%ebp);jmp - <RtlUpcaseUnicodeStringToOemString+>;jl  <IoCheckFunctionAccess+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);xorl %eax, %eax;xorl %edx, %edx;jmp  <ObSetSecurityDescriptorInfo+>": 1,
                "xorl %edx, %edx;jmp  <ObSetSecurityDescriptorInfo+>;decl %eax;jne  <IoCheckFunctionAccess+>;cmpl $, (%esi)": 1,
                "movb %al, (%ebx);addl $, %ebx;movb (%ebx), %al;movb %al, (%ebx);pushl $": 1,
                "addl $, %ebx;movb (%ebx), %al;movb %al, (%ebx);pushl $;popl %ecx": 1,
                "testl %eax, %eax;je - <RtlRemoveUnicodePrefix+>;movl $, (%eax);jmp - <RtlRemoveUnicodePrefix+>;nop": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl %eax, -(%ebp);pushl $": 1,
                "pushl -(%ebp);calll - <ZwQueryValueKey>;pushl -(%ebp);movl %eax, %esi;calll - <ZwClose>": 2,
                "jb  <SeRegisterLogonSessionTerminatedRoutine+>;outsl (%esi), %dx;addb %dh, (%ebx);outsl (%esi), %dx;addb %ah, (%esi)": 2,
                "andl %edx, %ecx;jmp - <RtlPrefixUnicodeString+>;movb $, -(%ebp);movb $, -(%ebp);jmp - <RtlPrefixUnicodeString+>": 1,
                "testb %al, -(%ebp);je  <IoCheckFunctionAccess+>;andl $, -(%ebp);movl (%ebp), %eax;movl , %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;leal (%ecx,%esi), %eax;cmpl %ecx, %eax;jb  <SeRegisterLogonSessionTerminatedRoutine+>": 2,
                "xorl %ecx, %ecx;orl %ecx, %eax;jne  <IoCheckFunctionAccess+>;incl -(%ebp);jmp - <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "cmpl $-, %ecx;je - <SeRegisterLogonSessionTerminatedRoutine+>;cmpl $-, %ecx;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;orl $-, -(%ebp);movb -(%ebp), %al": 1,
                "movl %ebx, (%edi);pushl $;movl -(%ebp), %eax;movsbl (%eax), %eax;pushl %eax": 2,
                "movl -(%ebp), %ebx;movl %ebx, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);xorl %eax, %eax": 1,
                "movl $, (%edi);movl %ebx, (%edi);movl -(%ebp), %ecx;testb $, (%ecx);je  <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "movl (%ebp), %ebx;pushl (%ebx);calll - <IoAllocateMdl>;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "pushl ;pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %edi": 2,
                "movl %edi, -(%ebp);cmpl %ebx, %eax;jl  <SeRegisterLogonSessionTerminatedRoutine+>;pushl %edi;calll - <IoGetRelatedDeviceObject>": 1,
                "cmpl %ebx, %eax;jl  <SeRegisterLogonSessionTerminatedRoutine+>;pushl %edi;calll - <IoGetRelatedDeviceObject>;movl %eax, %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %ebx, (%ebp);je  <SeRegisterLogonSessionTerminatedRoutine+>;testb $, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);cmpl %ebx, %esi;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);calll - <RtlCopySid+>;calll - <_CIsqrt+>;retl $;calll  <ExRaiseAccessViolation>": 1,
                "calll  <ExRaiseAccessViolation>;jmp - <SeRegisterLogonSessionTerminatedRoutine+>;orb $, (%esi);jmp - <SeRegisterLogonSessionTerminatedRoutine+>;movl %edi, %ecx": 1,
                "je  <SeRegisterLogonSessionTerminatedRoutine+>;pushl %edi;pushl %esi;calll *%eax;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <SeRegisterLogonSessionTerminatedRoutine+>;movl %edi, (%eax);movl %ebx, %eax": 1,
                "testl %eax, %eax;je  <SeRegisterLogonSessionTerminatedRoutine+>;movl %edi, (%eax);movl %ebx, %eax;popl %edi": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;pushl (%ebx);movl (%ebx), %eax": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <SeRegisterLogonSessionTerminatedRoutine+>;pushl (%ebx);pushl %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %esi;calll - <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "movl (%ebp), %eax;movl %eax, ;movl %ebx, %ecx;calll *%esi;pushl %edi": 1,
                "jmp - <RtlRemoveUnicodePrefix+>;nop;popl %esp;addb %al, (%edx);popal": 1,
                "ja  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %ebx;leal (%esi), %ebx": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %ebx;leal (%esi), %ebx;movl (%ebx), %edx": 1,
                "testl %eax, %ecx;jne  <IoCheckFunctionAccess+>;movl (%edx), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx,%edi,)": 1,
                "movl (%edx), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx,%edi,);addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);incl %edi;movl %edi, -(%ebp)": 1,
                "calll  <SeRegisterLogonSessionTerminatedRoutine+>;orl %eax, -(%ebp);pushl %esi;pushl $;calll - <IoGetDeviceProperty+>": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;movl (%eax), %ecx;testb $, %cl": 1,
                "cmpl %ebx, %esi;jne  <IoCheckFunctionAccess+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <RtlValidSecurityDescriptor+>;testl %eax, %eax;je  <RtlValidSecurityDescriptor+>;addl %esi, %eax;movl %eax, -(%ebp)": 3,
                "testb $, %al;je  <RtlValidSecurityDescriptor+>;testw %ax, %di;movl (%esi), %eax;je  <RtlValidSecurityDescriptor+>": 1,
                "orl $-, -(%ebp);movb $, %al;calll - <_CIsqrt+>;retl $;xorl %eax, %eax": 1,
                "calll - <IoGetAttachedDeviceReference+>;movl , %eax;movl %eax, %ecx;movl (%eax), %eax;movl %eax, (%ebx)": 1,
                "movl %ebx, (%ecx);movl (%ebp), %eax;addl $, %eax;leal (%ebx), %ecx;movl (%ecx), %edx": 1,
                "jb - <IoWMIRegistrationControl+>;jmp  <IoCheckFunctionAccess+>;movl $, %ebx;jmp - <IoWMIRegistrationControl+>;nop": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;cmpl $, %eax;pushl %esi": 1,
                "leal (%ebp), %eax;pushl %eax;calll  <RtlValidSecurityDescriptor+>;testl %eax, %eax;jl  <RtlValidSecurityDescriptor+>": 1,
                "je - <FsRtlOplockFsctrl+>;pushl $;pushl %ebx;pushl $;pushl %edi": 1,
                "movl (%ebp), %ebx;cmpl %esi, %ebx;je - <RtlUnicodeStringToInteger+>;cmpb $, (%ebp);je  <RtlValidSecurityDescriptor+>": 1,
                "je  <RtlValidSecurityDescriptor+>;movl %esi, -(%ebp);cmpb $, (%ebp);je  <RtlValidSecurityDescriptor+>;movl (%ebp), %eax": 1,
                "movl (%edi), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 2,
                "incl %eax;incl %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %eax;calll  <RtlValidSecurityDescriptor+>;movl (%ebp), %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <NtFindAtom+>;movl $, %eax;jmp - <NtFindAtom+>;nop;nop": 1,
                "movl (%esi), %eax;cmpl %ecx, %eax;pushl %edi;movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movw %cx, -(%ebp);movw %cx, -(%ebp);movl %ecx, -(%ebp);je  <RtlValidSecurityDescriptor+>": 1,
                "movw %cx, -(%ebp);movl %ecx, -(%ebp);je  <RtlValidSecurityDescriptor+>;cmpl %ecx, (%esi);je  <RtlValidSecurityDescriptor+>": 1,
                "je  <RtlValidSecurityDescriptor+>;cmpl %ecx, (%esi);je  <RtlValidSecurityDescriptor+>;leal (%eax,%eax), %ecx;leal (%esi), %ebx": 1,
                "movl (%ebp), %edx;movl -(%ebp), %eax;pushl %edi;movl (%ebp), %edi;cmpl %esi, %edi": 1,
                "je - <RtlValidSecurityDescriptor+>;cmpl $, %esi;je - <RtlValidSecurityDescriptor+>;cmpl %ebx, %esi;jl - <RtlValidSecurityDescriptor+>": 1,
                "movl -(%ebp), %eax;jge  <IoCheckFunctionAccess+>;cmpl $, %esi;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %edi": 1,
                "incl -(%ebp);leal (%ebp), %eax;pushl %eax;pushl -(%ebp);pushl %edi": 2,
                "cmpl $, %eax;je  <IoCheckFunctionAccess+>;cmpl %ebx, %eax;jl - <RtlValidSecurityDescriptor+>;cmpl $, (%esi)": 1,
                "jne - <RtlValidSecurityDescriptor+>;movzwl -(%ebp), %eax;movl -(%ebp), %ecx;subl %eax, %ecx;movl , %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);popl %esp;addb %bh, (%edi);addb %bh, (%edi)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;leal -(%ebp), %eax": 1,
                "jne - <RtlPrefixString+>;movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;cmpb $, (%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "popl %ebx;popl %ebp;retl $;testl %eax, %eax;jge - <RtlValidSecurityDescriptor+>": 1,
                "pushl %edx;movzbl (%ecx), %edx;pushl %edx;movzbl (%ecx), %edx;pushl %edx": 12,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %edx;movl (%ebp), %ecx;addl %edx, %ecx;movl %ecx, (%eax)": 1,
                "je  <RtlStringFromGUID+>;movl (%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "calll - <RtlStringFromGUID+>;testl %eax, %eax;je  <RtlStringFromGUID+>;movl (%ebp), %ecx;movl (%eax), %eax": 1,
                "movl (%esi), %eax;testl %eax, %eax;movl (%esi), %ecx;je  <RtlStringFromGUID+>;testl $, %ecx": 1,
                "movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);pushl %edi;pushl $": 1,
                "movl %ecx, (%eax);pushl %edi;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "je  <RtlStringFromGUID+>;pushl %esi;pushl %edi;calll *%eax;pushl %esi": 1,
                "movl (%ebp), %esi;pushl %edi;movl (%esi), %edi;pushl $;calll - <IoGetAttachedDeviceReference+>": 1,
                "testl %eax, %eax;je  <RtlStringFromGUID+>;testb $, (%ebx);jne  <RtlStringFromGUID+>;pushl $": 1,
                "movl (%ebp), %esi;andl $, (%ebx);movl (%edx), %edi;pushl %ebx;pushl $": 1,
                "xaddl %eax, (%ecx);pushl %esi;calll  <RtlStringFromGUID+>;pushl %esi;pushl $": 1,
                "pushl $;pushl $;calll - <KeReleaseMutex>;pushl %esi;calll - <RtlStringFromGUID+>": 1,
                "leal -(%esi), %eax;pushl %eax;pushl %edi;calll - <RtlStringFromGUID+>;leal -(%esi), %eax": 1,
                "pushl (%ebp);calll - <IoGetDeviceProperty+>;movl %eax, %edi;cmpl %esi, %edi;movl %edi, -(%ebp)": 1,
                "calll - <RtlInitializeBitMap+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %eax;popl %esi": 1,
                "movl %edi, (%ebp);je  <RtlxUnicodeStringToOemSize+>;andl $, -(%ebp);testl %edi, %edi;jbe  <RtlxUnicodeStringToOemSize+>": 1,
                "jne  <IoCheckFunctionAccess+>;pushl %esi;movl (%ebp), %esi;cmpl , %esi;je  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;calll - <RtlUpcaseUnicodeChar+>;movl (%esi), %eax;testb $, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "movl (%esi), %eax;pushl (%eax);pushl (%eax);calll - <RtlStringFromGUID+>;movl %eax, -(%ebp)": 1,
                "pushl (%eax);pushl (%eax);calll - <RtlStringFromGUID+>;movl %eax, -(%ebp);calll - <RtlUpcaseUnicodeChar+>": 1,
                "movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $;testb $, (%ebx);jne - <RtlStringFromGUID+>": 1,
                "pushl $;pushl %eax;movl %eax, -(%ebp);calll *(%ebx);testl %eax, %eax": 1,
                "shrl $, %eax;pushl %eax;pushl -(%ebp);leal (%ebx), %eax;pushl %eax": 1,
                "pushl %eax;calll - <RtlInitializeBitMap>;pushl (%ebp);movl -(%ebp), %eax;pushl %ebx": 1,
                "addl $, %eax;pushl %eax;addl $, %esi;pushl %esi;pushl $": 1,
                "pushl %esi;pushl $;pushl %ebx;calll *(%ebx);testb %al, %al": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %eax;movl (%esi), %ecx;movl (%ebp), %edx;shrl $, %ecx": 1,
                "andl %edx, %ecx;movl (%esi), %edx;pushl %edi;pushl (%esi);shll $, %edx": 1,
                "pushl $;pushl (%eax);pushl %ebx;calll - <ObCheckCreateObjectAccess+>;jmp - <RtlUnicodeStringToInteger+>": 1,
                "leal (%eax,%eax,), %eax;movl , %ecx;leal (%ecx,%eax,), %ebx;testb $, (%ebx);jne  <IoCheckFunctionAccess+>": 1,
                "testb $, (%ebp);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;shll $, %eax;xorl (%ebx), %eax": 1,
                "orl (,%ecx,), %eax;movl (%edi), %ecx;andl $, %ecx;orl %ecx, %eax;pushl %ebx": 1,
                "leal (%ebp), %eax;pushl %eax;pushl (%ebp);movl %edi, (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);movl %edi, (%ebp);pushl (%ebp);pushl %esi;calll - <SeSetSecurityDescriptorInfo>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <ObLogSecurityDescriptor>;pushl $": 1,
                "cmpl $, %eax;ja  <ObSetSecurityDescriptorInfo+>;cmpl $, -(%ebp);je - <FsRtlNotifyVolumeEvent+>;movl -(%ebp), %eax": 1,
                "cmpl -(%ebp), %eax;jne - <ObSetSecurityDescriptorInfo+>;movl -(%ebp), %eax;xorl %edi, %eax;cmpl $, %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;andl $, %eax;incl %eax;incl %eax": 1,
                "leave;retl $;movl (%ebp), %ebx;cmpl %esi, (%ebx);setne -(%ebp)": 1,
                "cmpl %esi, (%ebx);setne -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 2,
                "movb $, -(%ebp);jmp - <NtOpenProcess+>;movl (%ebp), %ebx;movl (%ebp), %edi;movl (%ebp), %esi": 1,
                "jmp - <NtQueryInformationProcess+>;movl -(%ebp), %edx;movw (%edx), %si;testw %si, %si;je  <ObSetSecurityDescriptorInfo+>": 1,
                "cmpb $, ;je - <SeRegisterLogonSessionTerminatedRoutine+>;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %edx, %edx;jl  <ObSetSecurityDescriptorInfo+>;movl $, %ecx;jle - <SeRegisterLogonSessionTerminatedRoutine+>;movl %ecx, %eax": 1,
                "testl %edx, %edx;pushl %ebx;pushl %esi;jl - <SeRegisterLogonSessionTerminatedRoutine+>;movl $, %esi": 1,
                "sbbl %edx, %esi;movl %esi, (%eax);movl %edi, (%eax);movl (%ecx), %ecx;movl , %eax": 1,
                "addl $, %edi;movl %eax, (%ebp);movl %edi, -(%ebp);movl (%edi), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %eax, (%ebp);movl %edi, -(%ebp);movl (%edi), %ebx;movl %ebx, -(%ebp);movl %ebx, (%esi)": 1,
                "testl %ebx, %ebx;je  <ObSetSecurityDescriptorInfo+>;pushl %edi;calll - <ObSetSecurityDescriptorInfo+>;testl %eax, %eax": 1,
                "movl (%ebp), %ebx;jne - <NtClose+>;jmp - <RtlRemoveUnicodePrefix+>;pushl $;popl %eax": 1,
                "testl %eax, %eax;jl - <NtSetInformationThread+>;movl -(%ebp), %eax;movl (%eax), %edi;leal (%edi), %ecx": 1,
                "testb %al, %al;je - <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax;decl (%eax);leal (%edi), %ebx": 1,
                "cmpl -(%ebp), %edi;jne  <IoCheckFunctionAccess+>;pushl %edi;pushl -(%ebp);calll - <KeSetAffinityThread>": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;incl (%ecx);jne  <ObSetSecurityDescriptorInfo+>;leal (%ecx), %eax": 1,
                "leal (%ecx), %eax;cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;calll - <ExReleaseRundownProtection>": 1,
                "movl -(%ebp), %ecx;calll - <ExReleaseRundownProtection>;movl -(%ebp), %ecx;jmp - <PsSetProcessWindowStation+>;nop": 1,
                "calll - <ExReleaseRundownProtection>;movl -(%ebp), %ecx;jmp - <PsSetProcessWindowStation+>;nop;nop": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movb $, -(%ebp);xorl %ebx, %ebx": 1,
                "movl %ebx, -(%ebp);cmpl %ebx, %eax;je  <ObSetSecurityDescriptorInfo+>;movl (%ebp), %ecx;decl (%ebp)": 1,
                "pushl (%eax);calll  <LdrAccessResource+>;movl %eax, -(%ebp);cmpl %ebx, %eax;jne  <ObSetSecurityDescriptorInfo+>": 1,
                "andl $, %esi;addl %edi, %esi;movl %esi, -(%ebp);addl $, (%ebp);movl -(%ebp), %eax": 1,
                "cmpl $, %eax;ja - <IoRegisterBootDriverReinitialization+>;jmpl *(,%eax,);cmpb $, -(%ebp);je - <IoRegisterBootDriverReinitialization+>": 1,
                "jmp - <LdrAccessResource+>;movl %edx, -(%ebp);jmp - <LdrAccessResource+>;nop;nop": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;je  <LdrAccessResource+>": 1,
                "movl (%ecx), %ecx;subl %esi, %ecx;addl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "movl %ebx, %eax;subl %ecx, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "testb $, (%ebp);jne - <ObSetSecurityDescriptorInfo+>;movl (%ebp), %eax;movl %ecx, (%eax);movl %ebx, -(%ebp)": 1,
                "pushl (%ebp);movl $, -(%ebp);calll - <ObSetSecurityDescriptorInfo+>;testl %eax, %eax;jl  <RtlFindMessage+>": 1,
                "movl $, -(%ebp);calll - <ObSetSecurityDescriptorInfo+>;testl %eax, %eax;jl  <RtlFindMessage+>;pushl $": 1,
                "testl %ecx, %ecx;jne - <RtlFindMessage+>;jmp  <RtlFindMessage+>;movl (%eax), %ecx;addl %esi, %ecx": 1,
                "movl %ecx, (%eax);xorl %eax, %eax;popl %esi;leave;retl $": 1,
                "testb $, (%ebp);je - <ObSetSecurityDescriptorInfo+>;movl (%ebp), %ecx;movl %eax, (%ecx);jmp - <LdrAccessResource+>": 1,
                "addl -(%ebp), %esi;movl %esi, -(%ebp);movl %ebx, %eax;jmp - <ObSetSecurityDescriptorInfo+>;andl $, -(%ebp)": 1,
                "incl %esp;decl %edi;addb %al, ;popal;pushl %eax": 1,
                "jne - <LdrFindResource_U+>;movl (%edi), %eax;testl %eax, %eax;jns - <RtlFindMessage+>;andl $, %eax": 1,
                "addl -(%ebp), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;jmp - <ObSetSecurityDescriptorInfo+>;cmpl %edi, (%ecx)": 1,
                "movb %al, -(%ebp);jmp - <RtlFindMessage+>;nop;nop;nop": 1,
                "calll - <ObfDereferenceObject>;xorl %eax, %eax;calll - <_CIsqrt+>;retl $;calll  <ExRaiseAccessViolation>": 1,
                "jne  <IoCheckFunctionAccess+>;movb (%eax), %cl;movb %cl, (%eax);movl (%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movb %cl, (%eax);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl , %eax;cmpl %eax, %ecx": 1,
                "movl %ecx, -(%ebp);movl , %eax;cmpl %eax, %ecx;jae  <IoCheckFunctionAccess+>;movb (%ecx), %al": 1,
                "movb %al, (%ecx);movb (%ecx), %al;movb %al, (%ecx);orl $-, -(%ebp);movl %fs:, %eax": 1,
                "xorl %eax, %eax;incl %eax;shll %cl, %eax;notl %eax;andl %eax, %ebx": 1,
                "jne - <NtAllocateUuids+>;xorl %eax, %eax;popl %ebx;leave;retl": 1,
                "xorl %eax, %eax;popl %ebx;leave;retl;nop": 1,
                "movw %ax, -(%ebp);orl $-, -(%ebp);cmpw %bx, %ax;jne  <IoCheckFunctionAccess+>;cmpw %bx, -(%ebp)": 1,
                "calll - <ObReferenceObjectByHandle>;movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <NtRequestPort+>;movswl -(%ebp), %eax": 1,
                "cmpl $, %eax;jne - <IoWMIQueryAllData+>;movl (%edi), %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "testl %ecx, %ecx;je  <NtRequestPort+>;calll - <ObfReferenceObject>;testl %edi, %edi;je  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %ecx;testl %ecx, %ecx;je  <NtRequestPort+>;calll - <ObfDereferenceObject>;movl %edi, %ecx": 1,
                "pushl %edi;pushl %esi;calll *(%eax);movl %eax, %ebx;movl %edi, -(%ebp)": 1,
                "pushl %esi;calll *(%eax);movl %eax, %ebx;movl %edi, -(%ebp);movl (%ebp), %eax": 1,
                "decl %ecx;jne  <IoCheckFunctionAccess+>;movzwl (%ebx), %ecx;movl (%ebp), %esi;pushl $": 1,
                "addl %eax, %ecx;movl %ecx, (%esi);movl (%ebp), %esi;cmpl %eax, %esi;movl %edx, (%ebp)": 1,
                "testl %edi, %edi;jl  <IoCheckFunctionAccess+>;addl $, %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll - <SeUnlockSubjectContext+>;movb %al, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl %eax, (%edi);pushl (%ebx);movl (%ebp), %eax;pushl %eax;calll *(%eax)": 1,
                "pushl (%ebx);pushl %ecx;calll *%eax;movl (%ebp), %edi;jmp - <NtQuerySecurityObject+>": 1,
                "movw (%ebx), %ax;jmp - <NtQueryInformationToken+>;nop;nop;nop": 1,
                "movl (%ebp), %edi;pushl %esi;pushl %esi;pushl %esi;pushl %esi": 2,
                "pushl %edi;calll - <ObInsertObject>;cmpl %esi, %eax;jl  <NtQuerySecurityObject+>;movl (%ebp), %ecx": 1,
                "popl %esi;leave;retl $;movl (%ebp), %ecx;movl %esi, (%ecx)": 1,
                "jne  <NtQuerySecurityObject+>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movb $, ": 1,
                "movb $, ;calll - <RtlUpcaseUnicodeChar+>;cmpb $, ;jne  <IoCheckFunctionAccess+>;leave": 1,
                "pushl %esi;calll - <RtlUnicodeStringToInteger+>;testb %al, %al;jne  <CcZeroData+>;pushl %esi": 1,
                "jne  <CcZeroData+>;pushl %esi;calll - <RtlUnicodeStringToInteger+>;movl (%esi), %ecx;calll - <ExReleaseFastMutexUnsafe>": 1,
                "movl (%edi), %edi;cmpl %ebx, %edi;jne - <NtQuerySecurityObject+>;popl %esi;movl $, %ecx": 1,
                "pushl %eax;pushl %esi;pushl $;pushl %ebx;calll - <FsRtlNotifyFilterChangeDirectory+>": 1,
                "jmp - <FsRtlNotifyFilterChangeDirectory+>;andl $, (%ebx);jmp - <RtlGeneratedotName+>;addl %ecx, %esi;cmpl $, %esi": 1,
                "movl -(%ebp), %ecx;andw $, (%ecx);jmp - <RtlGeneratedotName+>;leal (%esi), %ecx;calll *": 1,
                "calll  <ExRaiseAccessViolation>;jmp - <NtQuerySystemInformation+>;movl $, (%ebp);jmp - <LpcRequestPort+>;pushl %edx": 1,
                "andl $, %edx;orl %edx, %ecx;jmp - <RtlGeneratedotName+>;movl $, %eax;jmp - <RtlGeneratedotName+>": 1,
                "popl %edi;jmp - <RtlGeneratedotName+>;movl (%ecx), %ecx;jmp - <RtlAllocateHeap+>;incl (%ecx)": 1,
                "calll - <_allshr>;movl -(%ebp), %ecx;shrl $, %ecx;cmpl %ecx, %eax;jne  <RtlUnicodeToMultiByteSize+>": 1,
                "movl -(%ebp), %ecx;shrl $, %ecx;cmpl %ecx, %eax;jne  <RtlUnicodeToMultiByteSize+>;movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %eax;cmpl %edi, (%eax);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "cmpl %edi, (%eax);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;andl $, %eax;movl -(%ebp), %ecx": 1,
                "pushl -(%ebp);pushl -(%ebp);cmpl %edi, (%ebp);jne  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "cmpl %ebx, (%ebp);je - <FsRtlNotifyFilterReportChange+>;jmp - <CcPinMappedData+>;movl (%ebp), %eax;movzwl (%eax), %esi": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp - <FsRtlNotifyFilterChangeDirectory+>;nop": 1,
                "popl %esi;popl %ebx;leave;retl $;cmpl %eax, (%ebx)": 1,
                "popl %edi;pushl $;jmp - <CcCopyRead+>;orb $, (%esi);movl $, %ecx": 1,
                "movl (%eax), %eax;movl (%edi), %edx;cmpl %eax, %edx;ja  <ExUuidCreate+>;jb - <IoOpenDeviceInterfaceRegistryKey+>": 1,
                "jb - <IoOpenDeviceInterfaceRegistryKey+>;movl (%edi), %edx;cmpl %ecx, %edx;jb - <IoOpenDeviceInterfaceRegistryKey+>;movl $, %ecx": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebx);je  <ExUuidCreate+>;pushl (%ebx);pushl (%ebx)": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);jmp - <CcPinRead+>;movl $, (%ebp)": 1,
                "movb $, %dl;movl %ebx, %ecx;calll - <IofCompleteRequest>;jmp - <FsRtlNotifyFilterChangeDirectory+>;movl (%esi), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;xorl %edx, %edx;cmpb %dl, ": 1,
                "movl (%ebp), %eax;xorl %edx, %edx;cmpb %dl, ;jne  <IoCheckFunctionAccess+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;addl %eax, %eax;movl %eax, (%ecx);xorl %eax, %eax;popl %ebp": 1,
                "movl %eax, (%ecx);xorl %eax, %eax;popl %ebp;retl $;incl %ecx": 1,
                "popl %ebp;retl $;incl %ecx;incl %ecx;xorl %edx, %edx": 1,
                "testw %dx, %dx;je  <RtlMultiByteToUnicodeSize+>;cmpw $, %dx;jb - <RtlUpcaseUnicodeString+>;cmpw $, %dx": 1,
                "movw %ax, (%ecx);movb $, %al;jmp - <RtlUpcaseUnicodeString+>;cmpw $, -(%ebp);jae  <IoCheckFunctionAccess+>": 1,
                "je  <RtlMultiByteToUnicodeSize+>;cmpl $, -(%ebp);je - <NtUnlockFile+>;jmp - <RtlMultiByteToUnicodeSize+>;addl $, %edi": 1,
                "pushl %esi;pushl %edi;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %ebx": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %ebx;movl %ecx, -(%ebp);movb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);calll - <IoGetRelatedDeviceObject>;movl %eax, %edi;xorl %eax, %eax;movb (%edi), %al": 1,
                "popl %ebx;leave;retl $;movl $, %ecx;calll - <ExReleaseResourceLite>": 1,
                "calll - <ExReleaseResourceLite>;pushl $;pushl $;calll - <ExAcquireResourceExclusiveLite>;movl -(%ebp), %edx": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl -(%ebp), %edx;jmp - <RtlGeneratedotName+>;leal (%esi), %eax;cmpl %eax, (%eax)": 1,
                "jmp  <IoCheckFunctionAccess+>;movl (%ebp), %eax;cmpl (%eax), %ecx;ja - <RtlGeneratedotName+>;jb  <IoCheckFunctionAccess+>": 1,
                "xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl (%ebx), %edi;movl (%edi), %eax": 1,
                "movl (%ebx), %edi;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "testl $, %ecx;jne  <IoCheckFunctionAccess+>;movl (%ebx), %eax;cmpl $, (%eax);je - <NtQuerySecurityObject+>": 1,
                "cmpl $, (%eax);je - <NtQuerySecurityObject+>;testb $, (%ebx);je - <NtQuerySecurityObject+>;leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb $, -(%ebp)": 2,
                "pushl %eax;calll - <IoGetRelatedDeviceObject>;movzwl (%eax), %eax;decl %eax;movl %eax, -(%ebp)": 1,
                "jg  <CcZeroData+>;cmpl $, %eax;ja  <CcZeroData+>;cmpb $, -(%ebp);jne  <CcZeroData+>": 1,
                "pushl %ebx;pushl %ebx;pushl %edi;pushl -(%ebp);calll - <IoAllocateMdl>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "movl %fs:, %eax;movl %eax, -(%ebp);movb $, (%eax);pushl %ebx;pushl %ebx": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edx, -(%ebp);jl  <CcZeroData+>;jg  <CcZeroData+>;cmpl %ecx, -(%ebp);jb  <CcZeroData+>": 1,
                "nop;nop;nop;nop;movl -(%ebp), %ecx": 1,
                "andl %esi, %ebx;subl -(%ebp), %ebx;movl %ebx, -(%ebp);sbbl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 1,
                "orl $, %eax;movw %ax, (%esi);andl $, (%esi);movl %ebx, (%esi);leal (%esi), %eax": 1,
                "movl (%eax,%edx,), %edx;movl %edx, (%eax,%ecx,);incl %ecx;jmp - <CcZeroData+>;testb $, (%esi)": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%esi), %eax": 2,
                "sbbl %eax, -(%ebp);jmp - <CcZeroData+>;orl $-, -(%ebp);calll  <CcZeroData+>;jmp - <CcZeroData+>": 1,
                "jne  <CcZeroData+>;movl -(%ebp), %eax;movl %eax, (%esi);pushl %esi;pushl (%esi)": 1,
                "movl %eax, (%esi);pushl %esi;pushl (%esi);calll - <MmUnmapLockedPages>;pushl %esi": 1,
                "je  <CcZeroData+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;retl": 1,
                "popl %edi;shrl %esi;cmpl %edi, %esi;movl %eax, (%ebp);jbe  <CcZeroData+>": 1,
                "leal (%edi), %edx;cmpl %esi, %edx;movl %eax, (%ebp);jae  <CcZeroData+>;movw (%ecx), %ax": 1,
                "movl $, (%ebx);movb %al, (%ebx);movb $, (%ebx);jmp - <RtlGeneratedotName+>;movzwl %bx, %edx": 1,
                "addw %ax, (%ebp);movl (%ebp), %edx;jmp - <CcSetLogHandleForFile+>;cmpl $, (%esi);je - <NtQuerySecurityObject+>": 1,
                "jmp  <IoCheckFunctionAccess+>;calll - <FsRtlInitializeOplock+>;jmp - <NtQuerySecurityObject+>;movb $, ;jmp - <NtQuerySecurityObject+>": 1,
                "jmp - <RtlUnicodeStringToInteger+>;je  <IoCheckFunctionAccess+>;movl $, %eax;cmpl %eax, %ebx;ja  <IoCheckFunctionAccess+>": 1,
                "jne  <FsRtlDeleteKeyFromTunnelCache+>;cmpl $, %edi;jb  <CcZeroData+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl %esi;calll  <IoCheckFunctionAccess+>;jmp - <IoGetDeviceProperty+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <IoGetDeviceProperty+>;movl %eax, %edi": 1,
                "pushl %eax;calll - <IoGetDeviceProperty+>;movl %eax, %ebx;testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>": 1,
                "testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>;movl $, %edi;popl %ebx;movl -(%ebp), %ecx": 1,
                "calll - <IoQueueWorkItem+>;leave;retl $;cmpl $, %edx;jb  <IoCheckFunctionAccess+>": 1,
                "sete %al;movl %eax, -(%ebp);cmpl %esi, %eax;je  <IoCheckFunctionAccess+>;leal (%ebp), %eax": 1,
                "calll  <SeCreateClientSecurityFromSubjectContext+>;cmpl %esi, %eax;jge  <IoCheckFunctionAccess+>;calll - <_CIsqrt+>;retl $": 1,
                "movl %eax, (%ecx);movl %ecx, (%eax);popl %edi;movl %esi, (%esi);movl %esi, (%esi)": 1,
                "movl %esi, (%esi);movl %esi, (%esi);popl %esi;popl %ebp;retl $": 2,
                "jmp - <RtlLengthRequiredSid+>;cmpl $, %ecx;jne - <CcZeroData+>;jmp - <NtAdjustPrivilegesToken+>;movl $, %eax": 1,
                "movl $, (%ebp);movl (%ebp), %eax;movl %ebx, (%eax);jmp - <FsRtlNotifyVolumeEvent+>;cmpb %bl, %al": 1,
                "cmpb %bl, %al;jne - <FsRtlNotifyVolumeEvent+>;jmp - <FsRtlNotifyVolumeEvent+>;pushl %ebx;pushl %edi": 1,
                "cmpl (%ebp), %ecx;ja  <CcZeroData+>;cmpl (%ebp), %edx;jbe  <CcZeroData+>;pushl $": 1,
                "movl %ecx, (%eax);addl (%esi), %ebx;pushl %esi;calll - <FsRtlNotifyFilterChangeDirectory+>;cmpl -(%ebp), %ebx": 1,
                "incl %ecx;pushl %ecx;pushl %edx;pushl %edi;calll  <CcZeroData+>": 1,
                "pushl %edi;calll  <CcZeroData+>;cmpl $, (%ebp);jne  <CcZeroData+>;pushl (%edi)": 1,
                "pushl (%ebx);pushl %edi;calll - <IoGetDeviceProperty+>;popl %esi;popl %edi": 1,
                "movl (%ebp), %ebx;cmpl $, %ebx;pushl %edi;jae  <IoCheckFunctionAccess+>;movl (%ebp), %edi": 1,
                "popl %edi;popl %ebx;popl %ebp;retl $;addl $, %esi": 1,
                "calll - <CcZeroData+>;jmp - <CcZeroData+>;movl (%ebp), %esi;andl $, -(%ebp);pushl $": 1,
                "subl %edi, %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax": 1,
                "pushl (%eax);calll - <CcPurgeCacheSection>;pushl $;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %eax;movl (%ebx), %eax;pushl (%eax);calll - <CcFlushCache>;jmp - <FsRtlNotifyFilterChangeDirectory+>": 1,
                "calll - <CcFlushCache>;jmp - <FsRtlNotifyFilterChangeDirectory+>;movl (%eax), %eax;addl $, %edi;jmp - <CcZeroData+>": 1,
                "testl %esi, %esi;ja - <RtlUnicodeStringToInteger+>;jmp - <RtlUnicodeStringToInteger+>;pushl %edi;pushl %esi": 1,
                "movl %ebx, (%ebp);je  <IoCheckFunctionAccess+>;movb $, (%esi);jmp - <RtlRandom+>;movl %ebx, %edx": 1,
                "movl (%esi), %edi;testl %edi, %edi;jne  <SeCreateClientSecurityFromSubjectContext+>;movl (%esi), %edi;movl %edi, %ecx": 1,
                "pushl %edi;calll - <RtlLengthRequiredSid+>;movl %eax, %ebx;testl %ebx, %ebx;jl  <SeCreateClientSecurityFromSubjectContext+>": 1,
                "decl %esi;decl %esi;movw $, (%esi);decl %ecx;jne - <SeCreateClientSecurityFromSubjectContext+>": 1,
                "jmp - <RtlIntegerToUnicode+>;subl $, %eax;jne  <IoCheckFunctionAccess+>;pushl $;popl %edi": 1,
                "cmpl %ecx, %eax;je  <IoCheckFunctionAccess+>;testb $, %al;jne  <IoCheckFunctionAccess+>;pushl %ecx": 1,
                "movl (%esi), %esi;je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %ebx;pushl %eax": 1,
                "xorl %edx, %edx;calll - <SeCreateClientSecurityFromSubjectContext+>;jmp - <ObReferenceObjectByHandle+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "jmp - <SeUnlockSubjectContext+>;nop;nop;nop;nop": 1,
                "movl %esi, -(%ebp);movl %ecx, -(%ebp);movl %edi, -(%ebp);movl %edi, (%esi);movl -(%ebp), %eax": 1,
                "pushl $;calll - <_CIsqrt+>;xorl %esi, %esi;movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "je  <IoCheckFunctionAccess+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "cmpl %edi, %eax;jne - <IoGetDeviceProperty+>;movl (%esi), %eax;pushl $;leal (%ebp), %ecx": 1,
                "calll - <ObReferenceObjectByHandle>;xorl %ecx, %ecx;cmpl %ecx, %eax;movl %eax, -(%ebp);jl  <SeCreateClientSecurityFromSubjectContext+>": 1,
                "movl %eax, (%eax);jbe  <SeCreateClientSecurityFromSubjectContext+>;movl (%ebx,%edi,), %ecx;movl (%esi), %edx;movl %edx, (%ecx)": 1,
                "movl (%eax), %ecx;cmpl (%ebp), %ecx;movl (%eax), %edx;jb  <FsRtlDeleteKeyFromTunnelCache+>;ja  <FsRtlDeleteKeyFromTunnelCache+>": 1,
                "pushl (%ebp);pushl (%ebp);calll - <FsRtlDeleteKeyFromTunnelCache+>;jmp - <FsRtlNotifyFilterChangeDirectory+>;testl %esi, %esi": 1,
                "movl (%ebp), %eax;andl $, (%eax);leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "retl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <FsRtlDeleteKeyFromTunnelCache+>": 1,
                "calll - <ObCheckCreateObjectAccess+>;pushl %ebx;calll - <ObOpenObjectByName+>;movl -(%ebp), %eax;movl (%eax), %esi": 1,
                "pushl (%ebp);calll - <ObReleaseObjectSecurity>;movb (%ebp), %al;popl %ebx;popl %edi": 1,
                "retl $;cmpl %edi, -(%ebp);je - <RtlEqualUnicodeString+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %edi;pushl %eax": 1,
                "movl (%eax), %edx;addl $-, %eax;movl %ecx, (%edx);movl %edx, (%ecx);movl (%eax), %ecx": 1,
                "addl $-, %eax;movl %ecx, (%edx);movl %edx, (%ecx);movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx);pushl %eax;movl %edx, (%ecx)": 1,
                "pushl %eax;calll - <RtlUnicodeToMultiByteSize>;movl (%ebp), %eax;incl %eax;popl %ebp": 1,
                "calll - <ObSetSecurityDescriptorInfo+>;movl %eax, %ecx;movl $, %eax;cmpl %eax, %ecx;je  <RtlxUnicodeStringToOemSize+>": 1,
                "je  <RtlxUnicodeStringToOemSize+>;testl %ecx, %ecx;jl  <IoCheckFunctionAccess+>;addl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "movb %cl, (%eax);movl -(%ebp), %ecx;movb %dl, (%eax);pushl %esi;xorl %esi, %esi": 1,
                "decl (%esi);movl $, %ecx;calll - <ExAcquireFastMutexUnsafe>;movl -(%ebp), %eax;cmpl , %eax": 1,
                "jne  <IoCheckFunctionAccess+>;testb $, %al;je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "jmp - <NtDeleteFile+>;andl $, (%eax);jmp - <RtlxUnicodeStringToOemSize+>;pushl %edi;pushl (%ebp)": 1,
                "pushl %edi;pushl (%ebp);calll *(%ebx);xorl %eax, %eax;jmp - <RtlStringFromGUID+>": 1,
                "cmpl %ecx, (%ecx);jne  <IoCheckFunctionAccess+>;retl;nop;nop": 1,
                "retl $;andl %ebx, %edx;shll $, %eax;movl %eax, %esi;subl %edx, %esi": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <RtlxUnicodeStringToOemSize+>;movl , %eax;movl (%ebp), %ecx": 1,
                "jmp - <ObCreateObject+>;andl $, -(%ebp);jmp - <RtlEqualUnicodeString+>;movl $, -(%ebp);jmp - <RtlEqualUnicodeString+>": 1,
                "je  <PsGetContextThread+>;testb $, %dl;jne  <IoCheckFunctionAccess+>;movl , %eax;cmpl %eax, %edx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movb (%ebp), %al;movb %al, -(%ebp)": 1,
                "testb $, (%edi);jne  <PsGetContextThread+>;pushl -(%ebp);pushl (%ebp);pushl %edi": 1,
                "cmpl %ebx, %eax;jl  <PsGetContextThread+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl $;pushl (%ebp);calll - <KeInitializeDpc+>;popl %ebp;retl $": 2,
                "jmp - <RtlRemoveUnicodePrefix+>;pushl %ebx;pushl %esi;calll - <IoReleaseRemoveLockEx+>;jmp - <NtFreeVirtualMemory+>": 1,
                "orl $, -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;testb $, %ch;jne - <NtAllocateVirtualMemory+>;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp - <NtQuerySecurityObject+>;pushl %edi;calll - <FsRtlFastCheckLockForWrite+>;jmp - <NtDeleteAtom+>;movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;calll - <KeInsertHeadQueue+>;jmp - <NtAllocateVirtualMemory+>;movl %ebx, %ecx;calll - <KeInsertHeadQueue+>": 1,
                "je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl %esi;calll - <PsChargeProcessNonPagedPoolQuota>;movl %eax, -(%ebp)": 1,
                "calll - <PsChargeProcessNonPagedPoolQuota>;movl %eax, -(%ebp);testl %eax, %eax;jl  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl %eax;calll - <RtlInitializeBitMap>;movl -(%ebp), %edi;pushl %edi;calll - <RtlClearAllBits>": 1,
                "movl -(%ebp), %edi;pushl %edi;calll - <RtlClearAllBits>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %edi, (%ecx);orb $-, (%eax);jmp - <NtFreeVirtualMemory+>;movl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %ecx, (%eax);movl %ebx, (%eax);pushl %eax;pushl %esi": 2,
                "pushl %eax;pushl %ebx;pushl %ebx;pushl %edi;calll - <RtlRemoveUnicodePrefix+>": 2,
                "pushl %ebx;pushl %ebx;pushl %edi;calll - <RtlRemoveUnicodePrefix+>;jmp - <CcCopyRead+>": 1,
                "pushl $;jmp - <RtlxUnicodeStringToOemSize+>;movl (%ecx), %ecx;jmp - <RtlRandom+>;decl %edx": 1,
                "incl %eax;incl %eax;movl %eax, -(%ebp);jmp - <PsGetContextThread+>;andw $, (%eax)": 1,
                "incl %eax;movl %eax, -(%ebp);jmp - <PsGetContextThread+>;andw $, (%eax);leal -(%ebp), %eax": 1,
                "movl $, %ecx;movl (%edi), %eax;movl %eax, %edx;andl %ecx, %edx;lock": 1,
                "cmpxchgl %edx, (%edi);jne - <PsGetContextThread+>;testb $, %ah;je  <IoCheckFunctionAccess+>;decl ": 1,
                "je  <IoCheckFunctionAccess+>;decl ;jne  <PsGetContextThread+>;pushl $;calll - <KeSetSystemAffinityThread>": 1,
                "pushl $;calll - <KeSetSystemAffinityThread>;pushl ;calll *;movl %eax, %esi": 2,
                "movl %eax, %ebx;orl %edx, %ebx;lock;cmpxchgl %ebx, (%edi);jne - <PsGetContextThread+>": 1,
                "incl ;movl (%ebp), %edi;movl , %eax;cmpl %eax, %edi;jb  <IoCheckFunctionAccess+>": 1,
                "pushl %edi;calll *;movl %eax, %esi;calll - <KeRevertToUserAffinityThread>;movl %esi, ": 2,
                "leave;retl $;movl -(%ebp), %edx;movw (%edx), %dx;cmpw %si, %dx": 1,
                "jmp  <PsGetContextThread+>;calll  <ExRaiseAccessViolation>;jmp - <NtSetInformationFile+>;pushl (%ecx);calll - <IoGetAttachedDevice>": 1,
                "xorb %al, %al;jmp - <NtSetInformationFile+>;movl $, -(%ebp);jmp - <NtSetInformationFile+>;movl $, %esi": 1,
                "movl $, %esi;jmp - <FsRtlNotifyFilterChangeDirectory+>;nop;nop;nop": 1,
                "lcalll $, $;movb $-, %ah;pushl %eax;addb %dh, -(%edx,%ebx,);pushl %eax": 1,
                "addb %bh, -(%edi);pushl %eax;addb %bl, -(%ebx);pushl %eax;addb %bl, -(%ebx)": 1,
                "jmp  <IoCheckFunctionAccess+>;movl $, %esi;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "movl -(%ebp), %ecx;jmp - <IoCheckFunctionAccess+>;andl $-, %ecx;jmp - <RtlUnicodeStringToInteger+>;leal (%edi), %esi": 1,
                "movl %ecx, -(%ebp);movl %eax, %ebx;movl %ebx, -(%ebp);cmpl %esi, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "movl (%ecx), %eax;movl %eax, (%edi);calll - <ObfDereferenceObject>;movl (%edi), %ebx;negl %ebx": 1,
                "jb  <IoCheckFunctionAccess+>;movl %ebx, (%ecx);movl , %eax;movl (%eax), %esi;cmpl %eax, %esi": 1,
                "pushl %eax;calll - <wcscpy>;pushl (%esi);calll - <wcslen>;leal (%edi,%eax,), %edi": 1,
                "pushl (%esi);calll - <wcslen>;leal (%edi,%eax,), %edi;movl (%ebp), %eax;movl %edi, (%ebx)": 1,
                "andl $, (%ebp);addl (%ebp), %esi;pushl %esi;calll  <SeTokenIsAdmin+>;movzbl (%eax), %edx": 1,
                "movl $, %edi;xorl %ebx, %ebx;incl (,%edx,);calll *%ss:(,%edx,);popl %ebp": 1,
                "testl $, %eax;jne  <IoCheckFunctionAccess+>;andl $, (%ecx);andl $, %eax;jmp  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;testl $, %eax;je  <IoCheckFunctionAccess+>;calll  <IoCheckFunctionAccess+>;movl $, %eax": 2,
                "addl $, %edx;testl $, %ebx;jne  <IoCheckFunctionAccess+>;andl $, %ecx;subl $, %edx": 1,
                "orl %ebx, %eax;movl %eax, (%ebp);jmp  <IoCheckFunctionAccess+>;pushl %eax;orl $, %ebx": 1,
                "movl %eax, (%ebp);jmp  <IoCheckFunctionAccess+>;pushl %eax;orl $, %ebx;pushl (%ebp)": 1,
                "xorl (%esp), %ebx;testl $, %ebx;leal (%esp), %esp;je  <IoCheckFunctionAccess+>;pushl %ebp": 1,
                "incl %esi;movzbl (%esi), %ecx;pushl %ecx;calll  <IoCheckFunctionAccess+>;orl %eax, %eax": 1,
                "pushl %ecx;calll  <IoCheckFunctionAccess+>;orl %eax, %eax;popl %ecx;je  <IoCheckFunctionAccess+>": 1,
                "calll  <IoCheckFunctionAccess+>;orl %eax, %eax;popl %ecx;je  <IoCheckFunctionAccess+>;movl %ebx, %eax": 1,
                "shrl $, %eax;subl %ecx, %eax;shll $, %ecx;addl %ecx, %ebx;jmp  <IoCheckFunctionAccess+>": 1,
                "movw (%esi), %ax;cmpw $, %ax;je  <IoCheckFunctionAccess+>;testl $, %ebx;je  <IoCheckFunctionAccess+>": 1,
                "testl $, %ebx;je  <IoCheckFunctionAccess+>;testl $, %ebx;je  <IoCheckFunctionAccess+>;calll  <IoCheckFunctionAccess+>": 1,
                "jmp - <IoCheckFunctionAccess+>;movl (%ecx), %edi;movl %edi, (%ebp);movzwl (%ecx), %esi;addl $, %edx": 1,
                "incl %edi;movzbl (%esi), %ecx;pushl %ebp;pushl %edi;pushl $": 3,
                "testl $, ;je  <IoCheckFunctionAccess+>;movl (%ebp), %edx;movl (%eax), %eax;andl $, %edx": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %edx;movl (%eax), %eax;andl $, %edx;cmpl $, %edx": 1,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %edi;movl -(%ebp), %eax;movl %eax, (%edi);movl $, %eax": 1,
                "popl %esi;movl %ebp, %esp;popl %ebp;retl;pushl %ebp": 1,
                "addl $, %esp;popl %ebp;pushl %eax;pushl %ebp;calll  <SeTokenIsAdmin+>": 2,
                "retl;pushl %ebp;movl %esp, %ebp;subl $, %esp;pushl %ebx": 1,
                "cmpl (%ebp), %esi;jae  <IoCheckFunctionAccess+>;cmpl -(%ebp), %edi;jae  <IoCheckFunctionAccess+>;movb (%esi), %al": 1,
                "addb %al, (%edi);addb %al, (%eax);addb %cl, (%edi);addb %al, (%eax);addb %bl, (%edi)": 1,
                "leal -(%edi,%esi), %esi;cmpl (%ebp), %esi;jb  <IoCheckFunctionAccess+>;addl $, %ecx;leal (%edi,%ecx), %edx": 16,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;subl $, %edi;addl $, %esi;addl $, %edi": 1,
                "cmpl (%ebp), %edi;je  <IoCheckFunctionAccess+>;testb $-, %al;jne  <IoCheckFunctionAccess+>;movb (%esi), %dl": 1,
                "movb $, %cl;addb %dl, (%edi);movb $, %dl;addb %bh, -(%ebx);movb $, %dl": 1,
                "sahf;bound (%edi), %ecx;pushl %ebp;movl %esp, %ebp;pushl %edi": 1,
                "incl (%esi);calll - <RtlUpperString+>;testb $, %al;je  <IoCheckFunctionAccess+>;movl (%esi), %edi": 6,
                "movl (%edi), %eax;calll - <IoSetFileOrigin+>;movl $, %eax;popl %ebx;popl %esi": 1,
                "movl $, %eax;popl %ebx;popl %esi;popl %edi;movl %ebp, %esp": 2,
                "movzbl (%edi), %edx;andl $, %edx;cmpl $, %edx;jne  <IoCheckFunctionAccess+>;movzbl (%edi), %edx": 2,
                "cmpl $, %edx;jne  <IoCheckFunctionAccess+>;movzbl (%edi), %edx;testl $, %edx;movl $, %eax": 1,
                "movl -, %edi;movl (%edi), %edi;andl $, %edi;movzbl (%edi), %edi;movl %cr, %eax": 1,
                "movl $, %eax;popl %edi;movl %ebp, %esp;popl %ebp;retl": 2,
                "jne  <IoCheckFunctionAccess+>;movzbl (%edi), %edx;testl $, %edx;jne  <IoCheckFunctionAccess+>;andl $, %edx": 1,
                "xorl %eax, %eax;jmp  <IoCheckFunctionAccess+>;cmpl $, %edx;jne  <IoCheckFunctionAccess+>;andl $, (%ecx)": 1,
                "movl %edi, %ecx;calll - <KeSaveStateForHibernate+>;jmp  <IoCheckFunctionAccess+>;andl $, %eax;shrl %eax": 1,
                "xorl %edx, %edx;andl $, (%ecx);calll - <KeInitializeDpc+>;orb %al, %al;je  <IoCheckFunctionAccess+>": 1,
                "jmp - <IoCheckFunctionAccess+>;nop;nop;nop;addb %al, (%edx)": 1,
                "pushl %edx;movl (%esi), %edi;pushl (%edi);calll  <IoCheckFunctionAccess+>;addl $, %esp": 5,
                "jmpl *(,%ecx,);calll - <RtlUpperString+>;testb $, %al;je  <IoCheckFunctionAccess+>;movsbl (%edi), %ebx": 1,
                "incl (%esi);movl (%esi), %edi;jmpl *(,%ecx,);calll - <RtlUpperString+>;testb $, %al": 1,
                "movl (%esi), %edi;jmpl *(,%ecx,);movl (,%ecx,), %ebx;addl (%esi), %ebx;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;movzwl (%edi), %edx;addl %edx, %ebx;leal -(%ebp), %edx;pushl %edx": 1,
                "jae  <IoCheckFunctionAccess+>;addl -(%ebp), %ebx;movl %ebx, (%esi);movl $, %eax;popl %ebx": 1,
                "jne  <IoCheckFunctionAccess+>;calll - <RtlUpperString+>;testb $, %al;je - <IoCheckFunctionAccess+>;movl (%edi), %ebx": 1,
                "je - <IoCheckFunctionAccess+>;movl (%edi), %ebx;addl $, (%esi);jmp - <IoCheckFunctionAccess+>;calll - <RtlUpperString+>": 1,
                "movl -(%ebp), %ecx;andl $, %ecx;shrl $, %ecx;shll %cl, %eax;addl %eax, %ebx": 1,
                "cmpl (%edx), %ecx;jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;decl (%edx);jne  <IoCheckFunctionAccess+>": 1,
                "lock;decl (%edx);retl $;pushl %edi;pushl %edi": 1,
                "movl -(%ebp), %eax;shrl %eax;movl %eax, (%ebx);pushl -(%ebp);pushl -(%ebp)": 2,
                "pushl %eax;calll - <ExRaiseStatus>;orl $-, -(%ebp);xorl %edi, %edi;movl -(%ebp), %esi": 2,
                "jmp - <CcFastCopyRead+>;movb $, -(%ebp);jmp - <CcZeroData+>;pushl $;calll - <ExRaiseStatus>": 1,
                "xorl %ebx, %ebx;jmp - <CcZeroData+>;movl %fs:, %eax;subb $, %cl;movb %cl, (%eax)": 1,
                "jmp - <CcZeroData+>;movl %fs:, %eax;subb $, %cl;movb %cl, (%eax);jmp - <CcZeroData+>": 1,
                "calll - <IoAllocateMdl>;movl %eax, %esi;movl %esi, -(%ebp);testl %esi, %esi;jne  <IoCheckFunctionAccess+>": 1,
                "pushl %esi;jmp - <RtlxUnicodeStringToOemSize+>;jmp - <CcZeroData+>;xorl %eax, %eax;pushl %eax": 1,
                "testl %eax, %eax;jne - <IoCheckFunctionAccess+>;pushl %eax;pushl %ebx;calll - <ExFreePoolWithTag>": 2,
                "calll - <ExFreePoolWithTag>;popl %esi;jmp - <CcUnpinData+>;leal (%eax), %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;pushl (%ebp);addl $, %eax;pushl %eax;calll - <ExSetResourceOwnerPointer>": 1,
                "jmp - <CcUnpinDataForThread+>;pushl %esi;leal (%ebx), %esi;jmp  <IoCheckFunctionAccess+>;pushl (%ebp)": 1,
                "testb %al, %al;jne - <CcMapData+>;incl ;jmp - <CcUnpinData+>;nop": 1,
                "addl $, %eax;pushl %eax;calll - <ExAcquireSharedStarveExclusive>;jmp - <IoCreateStreamFileObjectLite+>;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl (%ebp);pushl %edi;calll  <IoCheckFunctionAccess+>;movl %eax, -(%ebp)": 2,
                "orl $-, %esi;jmp - <NtQueryInformationFile+>;movl $, %eax;jmp - <NtQueryInformationFile+>;jmp - <NtQueryInformationFile+>": 1,
                "jmp - <FsRtlNotifyFilterChangeDirectory+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movl (%esi), %eax": 1,
                "jmp - <FsRtlFindInTunnelCache+>;jmp - <FsRtlFindInTunnelCache+>;jmp - <ObQueryObjectAuditingByHandle+>;pushl $;movzwl %ax, %eax": 1,
                "jb - <RtlMultiByteToUnicodeN+>;cmpl %ecx, (%esi);je - <RtlMultiByteToUnicodeN+>;movb $, -(%ebp);jmp - <RtlMultiByteToUnicodeN+>": 2,
                "jmp - <RtlMultiByteToUnicodeN+>;movl (%esi), %eax;cmpl $, %eax;jb  <IoCheckFunctionAccess+>;cmpl $, (%esi)": 2,
                "cmpl %ecx, (%ecx);je - <RtlMultiByteToUnicodeN+>;movb $, %cl;movb $, (%eax);calll *": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <FsRtlNormalizeNtstatus+>;jmp - <RtlMultiByteToUnicodeN+>;movb $, %cl": 1,
                "jb  <IoCheckFunctionAccess+>;cmpl $, (%esi);jne - <FsRtlIsNameInExpression+>;cmpl $, %eax;jb - <FsRtlIsNameInExpression+>": 1,
                "calll - <FsRtlNormalizeNtstatus+>;jmp - <FsRtlIsNameInExpression+>;movl %fs:, %eax;incl (%eax);jne - <FsRtlIsNameInExpression+>": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %eax": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "movl $, %eax;jmp - <FsRtlGetFileSize+>;xorl %eax, %eax;pushl %eax;pushl %eax": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;jmp - <RtlRemoveUnicodePrefix+>;movl %esi, -(%ebp);jmp - <RtlRemoveUnicodePrefix+>": 1,
                "calll - <KeWaitForSingleObject>;jmp - <RtlRemoveUnicodePrefix+>;movl %esi, -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;movl $, -(%ebp)": 1,
                "movl %esi, -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;movl $, -(%ebp);jmp - <FsRtlGetFileSize+>;movl $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;leal -(%ebp), %eax": 1,
                "jmp - <FsRtlIsNameInExpression+>;movzwl (%eax), %eax;movzwl %bx, %ecx;addl %ecx, %eax;negl %eax": 1,
                "cmpb $, %al;jne  <IoCheckFunctionAccess+>;pushl $;pushl %edx;pushl %edi": 1,
                "jne - <FsRtlOplockFsctrl+>;movl (%edi), %eax;testb $, (%eax);jne - <FsRtlOplockFsctrl+>;pushl %esi": 1,
                "calll - <FsRtlNormalizeNtstatus+>;jmp - <FsRtlOplockFsctrl+>;movb $, %dl;movl %esi, %ecx;movl %edi, (%esi)": 1,
                "calll - <ZwWaitForSingleObject>;movl %eax, %edi;jmp - <NtDeleteFile+>;cmpl $, -(%ebp);jne - <FsRtlRegisterUncProvider+>": 1,
                "pushl %eax;calll - <FsRtlRegisterUncProvider+>;cmpl %esi, %eax;movl %eax, -(%ebp);jge - <FsRtlRegisterUncProvider+>": 2,
                "xorl %eax, %eax;movb , %al;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "movb , %al;pushl %eax;pushl $;pushl -(%ebp);calll - <NtDeleteFile+>": 1,
                "cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp);calll - <ZwClose>;movl (%ebp), %eax": 1,
                "calll - <ZwClose>;movl (%ebp), %eax;orl $-, (%eax);jmp - <FsRtlRegisterUncProvider+>;movw (%ebx), %cx": 1,
                "xorl %esi, %esi;jmp - <FsRtlRegisterUncProvider+>;nop;popl %esp;addb %dl, (%edx)": 1,
                "jns  <IoCheckFunctionAccess+>;popl %esp;addb %cl, (%ebp);popal;addb %ah, (%ebx)": 6,
                "je  <IoCheckFunctionAccess+>;addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);jne  <IoCheckFunctionAccess+>": 5,
                "addb %dh, %gs:(%edx);jbe  <IoCheckFunctionAccess+>;imull $, (%eax), %eax;jae  <IoCheckFunctionAccess+>;popl %esp": 1,
                "jo  <IoCheckFunctionAccess+>;addb %al, (%eax);popl %esp;addb %al, (%eax,%eax);addb %dh, (%esi)": 4,
                "jmp - <FsRtlIsFatDbcsLegal+>;cmpw $, %di;jne  <IoCheckFunctionAccess+>;movb (%esi), %al;cmpb $, %al": 1,
                "cmpb $, %al;je - <FsRtlFindInTunnelCache+>;jmp - <FsRtlIsFatDbcsLegal+>;cmpb %bl, (%ebp);je - <FsRtlFindInTunnelCache+>": 1,
                "movl (%ebp), %eax;cmpw %bx, %ax;movl %eax, (%ebp);movl %esi, (%ebp);je - <FsRtlIsFatDbcsLegal+>": 1,
                "xorl %ebx, %ebx;cmpb %bl, -(%ebp);jne  <IoCheckFunctionAccess+>;cmpl $, %ecx;jae - <FsRtlFindInTunnelCache+>": 1,
                "movl (%edx), %esi;leal (%ebx), %edi;jmp - <RtlUnicodeToMultiByteSize+>;movzwl %cx, %ecx;pushl %ecx": 1,
                "movw $, (%eax,%ebx);movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "je - <FsRtlNotifyFilterChangeDirectory+>;movl -(%ebp), %eax;addl -(%ebp), %eax;movl %eax, -(%ebp);addl %ebx, %eax": 1,
                "xorb %al, %al;jmp - <FsRtlNotifyFilterChangeDirectory+>;movl %eax, %esi;jmp - <FsRtlNotifyFilterChangeDirectory+>;testb $, (%eax)": 1,
                "movl -(%ebp), %esi;jmp - <FsRtlNotifyFilterChangeDirectory+>;pushl (%ebp);calll - <SeReleaseSubjectContext>;pushl %edi": 1,
                "jmp - <FsRtlNotifyFilterChangeDirectory+>;cmpl $, (%ebp);je - <CcPinRead+>;pushl (%ebp);pushl (%ebx)": 1,
                "movzwl (%edx), %edx;movzbl (%ebx), %esi;addl %ecx, %edx;addl %edx, %esi;movl %esi, -(%ebp)": 1,
                "movl (%ebp), %eax;subl %ecx, %eax;movw %ax, -(%ebp);movw %ax, -(%ebp);movb $, -(%ebp)": 1,
                "testw %dx, %dx;jne  <IoCheckFunctionAccess+>;movl $, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, (%eax);movl %edi, %eax;addl (%ebx), %eax;movl %eax, -(%ebp);jmp - <CcPinRead+>": 1,
                "movl -(%ebp), %eax;jmp - <CcPinRead+>;orw $, %ax;movw %ax, (%ebx);jmp - <FsRtlNotifyFilterReportChange+>": 1,
                "jmp - <RtlSelfRelativeToAbsoluteSD+>;cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl $, (%eax);jmp - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "movl (%ebp), %eax;movl $, (%eax);jmp - <RtlSelfRelativeToAbsoluteSD+>;movb %al, %cl;andb $, %cl": 1,
                "calll - <ObfDereferenceObject>;movl $, %eax;jmp - <RtlSelfRelativeToAbsoluteSD+>;pushl %esi;pushl %esi": 1,
                "movl -(%ebp), %edi;jmp - <RtlSelfRelativeToAbsoluteSD+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "xorb %al, %al;jmp - <RtlSelfRelativeToAbsoluteSD+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "jmp - <RtlSelfRelativeToAbsoluteSD+>;movl $, %eax;jmp - <RtlInitializeUnicodePrefix+>;movl $, %edi;jmp - <RtlInitializeUnicodePrefix+>": 1,
                "jmp - <RtlInitializeUnicodePrefix+>;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "calll - <KeWaitForSingleObject>;movl -(%ebp), %edi;jmp - <RtlInitializeUnicodePrefix+>;testl %edi, %edi;je  <IoCheckFunctionAccess+>": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;movb $, %bl;jmp  <IoCheckFunctionAccess+>;pushl %edi": 1,
                "ja  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl %esi;calll  <FsRtlNotifyFullReportChange+>;testl %eax, %eax": 1,
                "pushl %eax;calll - <RtlFreeUnicodeString>;jmp - <RtlSelfRelativeToAbsoluteSD+>;movzbl %bl, %eax;pushl %eax": 1,
                "cmpb $, %bl;jbe - <IoCheckFunctionAccess+>;xorb %al, %al;jmp - <RtlSelfRelativeToAbsoluteSD+>;pushl %edi": 1,
                "addb %ch, (%edi);jo  <IoCheckFunctionAccess+>;jo  <IoCheckFunctionAccess+>;jns  <IoCheckFunctionAccess+>;addb %al, (%eax)": 2,
                "addb %ah, (%ebp);jbe  <IoCheckFunctionAccess+>;imull $, (%eax), %eax;jae  <IoCheckFunctionAccess+>;popl %esp": 1,
                "movl %ebx, -(%ebp);jmp - <IoReadPartitionTable+>;pushl %esi;pushl -(%ebp);movb $, -(%ebp)": 1,
                "pushl (%edi);calll - <ExFreePoolWithTag>;movl %esi, (%edi);movl %ebx, %eax;jmp  <IoCheckFunctionAccess+>": 1,
                "xorl %eax, %eax;movl %eax, -(%ebp);jmp - <IoReadPartitionTable+>;cmpl $, %eax;jne - <IoReadPartitionTable+>": 1,
                "cmpl $, %eax;jne - <IoReadPartitionTable+>;cmpl $, -(%ebp);jne - <IoReadPartitionTable+>;xorl %eax, %eax": 1,
                "calll  <IoWritePartitionTable+>;jmp - <RtlInitializeUnicodePrefix+>;cmpl $, -(%ebp);jne - <RtlInitializeUnicodePrefix+>;jmp  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %eax;movl (%eax), %esi;movl -(%ebp), %edi;movl %ecx, %edx": 1,
                "cmpb $, -(%ebp);jne - <RtlInitializeUnicodePrefix+>;cmpb $, -(%ebp);jne - <RtlInitializeUnicodePrefix+>;movb (%esi), %al": 1,
                "je  <IoCheckFunctionAccess+>;cmpb $-, %al;jne - <RtlInitializeUnicodePrefix+>;orl $-, -(%ebp);jmp - <RtlInitializeUnicodePrefix+>": 1,
                "pushl %ebx;pushl (%edi);calll - <ExFreePoolWithTag>;movl %ebx, (%edi);jmp - <RtlInitializeUnicodePrefix+>": 1,
                "movl $, %esi;jmp - <RtlSelfRelativeToAbsoluteSD+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "jmp - <RtlSelfRelativeToAbsoluteSD+>;movl -(%ebp), %eax;pushl $;pushl (%eax);calll - <strrchr>": 1,
                "xorl %esi, %esi;cmpl %ebx, %eax;popl %ecx;je - <IoAssignDriveLetters+>;cmpb $, (%eax)": 1,
                "subl %eax, %ecx;movb $, (%edi);movb $, (%edi);leal (%ecx), %edx;movb (%eax), %cl": 1,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <IoCheckFunctionAccess+>": 1,
                "movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <IoCheckFunctionAccess+>;subl %edx, %eax": 1,
                "jmp - <IoAssignDriveLetters+>;movb $, -(%ebp);jmp - <IoAssignDriveLetters+>;pushl $;pushl -(%ebp)": 1,
                "movb $, -(%ebp);jmp - <IoAssignDriveLetters+>;pushl $;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll  <FsRtlNotifyFullReportChange+>;testl %eax, %eax": 1,
                "pushl %esi;pushl %ebx;pushl %eax;calll - <swprintf>;addl $, %esp": 1,
                "jmp - <IoAssignDriveLetters+>;andl $, -(%ebp);jmp - <IoAssignDriveLetters+>;pushl $;pushl -(%ebp)": 2,
                "jmp  <IoCheckFunctionAccess+>;pushl $;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl $, %eax;jmp - <IoGetBootDiskInformation+>;pushl %edi;pushl $;popl %ecx": 1,
                "calll  <IoWritePartitionTable+>;movl %eax, %esi;testl %esi, %esi;jge - <IoReadPartitionTableEx+>;pushl (%ebp)": 1,
                "pushl $;pushl %edi;calll  <IoWritePartitionTable+>;jmp - <IoReadPartitionTableEx+>;movl (%ebp), %ecx": 1,
                "pushl %edi;calll  <IoWritePartitionTable+>;jmp - <IoReadPartitionTableEx+>;movl (%ebp), %ecx;subl %edi, %eax": 1,
                "cmpb $, %al;jne - <IoDeleteSymbolicLink+>;pushl %ebx;calll  <IoCheckQuotaBufferValidity+>;jmp - <IoDeleteSymbolicLink+>": 1,
                "pushl $;pushl %eax;movl %ecx, %esi;calll *%ebx;jmp - <IoRegisterFsRegistrationChange+>": 3,
                "movl %ecx, %esi;calll *%ebx;jmp - <IoRegisterFsRegistrationChange+>;leal -(%esi), %eax;pushl $": 2,
                "pushl %eax;movl %ecx, %esi;calll *%ebx;jmp - <IoRegisterFsRegistrationChange+>;movl $, %eax": 1,
                "movl %ecx, %esi;calll *%ebx;jmp - <IoRegisterFsRegistrationChange+>;movl $, %eax;jmp - <IoRegisterShutdownNotification+>": 1,
                "int;int;int;calll - <RtlVolumeDeviceToDosName+>;jmp - <IoGetDeviceProperty+>": 1,
                "movl %eax, (%ecx);movl -(%ebp), %edx;movl %edx, (%ecx);pushl %eax;calll - <ExRaiseStatus>": 3,
                "calll - <ExRaiseStatus>;jmp - <MmUnmapViewInSessionSpace+>;nop;nop;nop": 1,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;movl -(%ebp), %esi;pushl $": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl -(%ebp), %esi;pushl $;pushl -(%ebp)": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %esi;jmp - <IoCheckFunctionAccess+>;orb $, (%ebp);andl $, %ecx": 1,
                "jmp - <IoCheckFunctionAccess+>;orb $, (%ebp);andl $, %ecx;movl %ecx, (%ebp);jmp - <CcSetLogHandleForFile+>": 1,
                "movl %esi, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);pushl $;jmp - <FsRtlCurrentBatchOplock+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);pushl $;jmp - <FsRtlCurrentBatchOplock+>;nop": 1,
                "jne - <CcSetLogHandleForFile+>;cmpw %di, (%eax);je  <IoCheckFunctionAccess+>;pushl %edi;pushl (%eax)": 1,
                "je  <IoCheckFunctionAccess+>;pushl %edi;pushl (%eax);calll - <ExFreePoolWithTag>;movl (%ebx), %eax": 1,
                "pushl %edi;pushl (%eax);calll - <ExFreePoolWithTag>;movl (%ebx), %eax;movl %edi, (%eax)": 1,
                "jmp - <IoGetBootDiskInformation+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 1,
                "calll - <RtlVolumeDeviceToDosName+>;jmp - <IoRegisterBootDriverReinitialization+>;cmpl %ebx, %edi;je - <IoRegisterBootDriverReinitialization+>;movb $, (%edi)": 1,
                "leal (%eax), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 7,
                "pushl $;pushl %edx;pushl %eax;calll - <_allmul>;cmpl $, -(%ebp)": 1,
                "calll - <RtlRemoveUnicodePrefix+>;cmpb $, -(%ebp);je - <NtAdjustPrivilegesToken+>;movl %eax, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;movl $, %esi;movl %edi, %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax": 1,
                "testl %eax, %eax;jl - <FsRtlIncrementCcFastReadWait+>;pushl -(%ebp);pushl -(%ebp);calll - <ObCloseHandle>": 1,
                "movl -(%ebp), %eax;jmp - <FsRtlIncrementCcFastReadWait+>;movb $, (%eax);jmp - <NtQuerySystemInformation+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "nop;nop;movl -(%ebp), %esp;movl -(%ebp), %eax;jmp - <NtQuerySystemInformation+>": 1,
                "jmp  <IoCheckFunctionAccess+>;andw $, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %esi;movl %ebx, ;calll - <ExFreePoolWithTag>;jmp - <IoInitializeCrashDump+>;cmpl $, %ebx": 1,
                "movl (%eax), %eax;leal (%ecx,%eax), %eax;shrl $, %eax;leal (%eax), %ecx;andl $, %ecx": 1,
                "shrl $, %eax;leal (%eax), %ecx;andl $, %ecx;negl %ecx;sbbl %ecx, %ecx": 1,
                "cmpl %edi, ;jne - <PsSetLegoNotifyRoutine+>;movb $, %al;jmp - <PsSetLegoNotifyRoutine+>;pushl %edi": 1,
                "pushl %edi;pushl %edi;pushl $;pushl %edi;pushl $": 3,
                "pushl %edi;calll - <RtlVolumeDeviceToDosName+>;xorb %al, %al;jmp - <PsSetLegoNotifyRoutine+>;movl $, %eax": 1,
                "leal (%edi), %esi;leal (%ebx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);xorl %esi, %esi;jmp - <PsSetLegoNotifyRoutine+>": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "jmp  <IoCheckFunctionAccess+>;movzbl -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "pushl %eax;movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 2,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ZwOpenFile>;movl %eax, %edi": 1,
                "calll - <RtlFreeUnicodeString>;cmpl %esi, %edi;jl - <PsSetLegoNotifyRoutine+>;pushl %esi;leal -(%ebp), %eax": 1,
                "calll - <ObReferenceObjectByHandle>;movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %edi;calll - <ObfDereferenceObject>": 1,
                "pushl $;pushl %esi;pushl $;pushl %esi;calll - <RtlVolumeDeviceToDosName+>": 1,
                "jmp - <PsSetLegoNotifyRoutine+>;nop;jae  <IoCheckFunctionAccess+>;arpl %ax, (%eax);jae  <IoCheckFunctionAccess+>": 1,
                "pushl %edi;pushl $;pushl %edi;calll - <RtlVolumeDeviceToDosName+>;pushl %edi": 1,
                "pushl %edi;calll - <RtlVolumeDeviceToDosName+>;pushl %edi;calll - <IoInitializeCrashDump+>;jmp - <IoInitializeCrashDump+>": 1,
                "pushl %edi;calll - <IoInitializeCrashDump+>;jmp - <IoInitializeCrashDump+>;movl $, %eax;jmp - <IoQueryDeviceDescription+>": 1,
                "movl $, %eax;jmp - <IoQueryDeviceDescription+>;movl $, %eax;jmp - <IoQueryDeviceDescription+>;movl %ebx, (%eax)": 1,
                "jmp - <IoQueryDeviceDescription+>;movl %ebx, (%eax);jmp - <ObReferenceObjectByName+>;nop;nop": 1,
                "nop;movl -(%ebp), %esp;andl $, -(%ebp);jmp - <ObReferenceObjectByName+>;nop": 1,
                "jmp - <ObReferenceObjectByName+>;movl %esi, (%eax);jmp - <RtlUpcaseUnicodeString+>;movl %esi, (%eax);jmp - <RtlUpcaseUnicodeString+>": 1,
                "jmp - <RtlRemoveUnicodePrefix+>;calll  <ExRaiseDatatypeMisalignment>;jmp - <FsRtlRegisterUncProvider+>;movl %esi, (%eax);jmp - <FsRtlRegisterUncProvider+>": 1,
                "nop;movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <FsRtlRegisterUncProvider+>": 1,
                "jmp - <NtLockFile+>;calll  <ExRaiseDatatypeMisalignment>;jmp - <NtLockFile+>;movl %edi, (%eax);movl , %eax": 1,
                "jl - <NtLockFile+>;movl %edi, (%ecx);jmp - <NtLockFile+>;nop;nop": 1,
                "andl $, -(%ebp);orl $-, -(%ebp);movl -(%ebp), %ebx;jmp - <NtLockFile+>;pushl %esi": 1,
                "jmp - <NtLockFile+>;pushl %esi;pushl %esi;pushl -(%ebp);calll - <KeSetEvent>": 1,
                "movl (%ebx), %eax;pushl $;pushl -(%ebp);pushl -(%ebp);pushl (%ebp)": 1,
                "pushl %eax;pushl -(%ebp);pushl %ebx;calll - <RtlRemoveUnicodePrefix+>;movl %eax, -(%ebp)": 3,
                "testl %ecx, %ecx;je  <IoCheckFunctionAccess+>;calll - <ObfDereferenceObject>;movl -(%ebp), %esi;movl %ebx, %ecx": 1,
                "jmp  <IoCheckFunctionAccess+>;movl %edi, (%eax);jmp - <NtUnlockFile+>;calll  <ExRaiseDatatypeMisalignment>;jmp - <NtUnlockFile+>": 1,
                "movl %eax, %esi;jmp  <IoCheckFunctionAccess+>;movb $, -(%ebp);movl -(%ebp), %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;jmp - <NtUnlockFile+>;movb $, (%esi)": 1,
                "movl %eax, (%eax);movb $, -(%ebp);andl $, (%ebx);pushl $;xorl %eax, %eax": 1,
                "calll - <IoAllocateIrp>;movl %eax, %edi;movl %edi, -(%ebp);xorl %eax, %eax;cmpl %eax, %edi": 1,
                "jmp - <NtUnlockFile+>;movl %ebx, (%edi);movl -(%ebp), %ecx;movl %ecx, (%edi);movb -(%ebp), %cl": 1,
                "pushl -(%ebp);pushl %edi;pushl -(%ebp);pushl %eax;calll - <NtDeleteAtom+>": 1,
                "pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl %edi, %eax;jmp - <PsLookupProcessByProcessId+>": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;cmpl %edi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %edi": 1,
                "cmpl %edi, %esi;jge  <IoCheckFunctionAccess+>;cmpl %edi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %edi": 1,
                "movl -(%ebp), %ecx;cmpl %edi, %ecx;je  <IoCheckFunctionAccess+>;calll - <ObfDereferenceObject>;movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;jmp - <PsLookupProcessByProcessId+>;pushl -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;jmp  <IoCheckFunctionAccess+>;pushl $;calll - <ExRaiseStatus>": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;orl $-, -(%ebp);jmp - <PsLookupProcessByProcessId+>;nop": 1,
                "je - <NtNotifyChangeDirectoryFile+>;movl $, %esi;jmp  <IoCheckFunctionAccess+>;movl %eax, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl %ebx;calll  <NtSetVolumeInformationFile+>;movl $, %eax;jmp - <NtNotifyChangeDirectoryFile+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %esi;jmp  <IoCheckFunctionAccess+>;movl $, -(%ebp);pushl %esi;pushl $": 1,
                "jmp - <NtQueryInformationFile+>;jmp - <NtQueryInformationFile+>;leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax": 1,
                "addl $, %ecx;pushl %ecx;calll - <KeSetEvent>;movl -(%ebp), %ecx;jmp - <NtQueryInformationFile+>": 1,
                "jne - <CcCopyRead+>;pushl -(%ebp);calll - <CcUninitializeCacheMap+>;jmp - <CcCopyRead+>;cmpb $, -(%ebp)": 1,
                "addl $, %eax;pushl %eax;calll - <KeWaitForSingleObject>;cmpl $, %eax;je  <IoCheckFunctionAccess+>": 2,
                "orl $-, -(%ebp);pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <CcCopyRead+>": 1,
                "nop;nop;movl -(%ebp), %esp;pushl -(%ebp);pushl $": 8,
                "movl -(%ebp), %esp;pushl -(%ebp);pushl $;pushl -(%ebp);pushl -(%ebp)": 10,
                "jmp - <NtSetInformationFile+>;pushl %esi;pushl %esi;addl $, %ecx;pushl %ecx": 1,
                "jmp  <IoCheckFunctionAccess+>;movl %edi, %eax;pushl -(%ebp);pushl %eax;pushl (%ebp)": 1,
                "cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 2,
                "pushl %edi;calll - <ExFreePoolWithTag>;jmp - <NtSetInformationFile+>;jmp - <NtSetInformationFile+>;testb $, (%eax)": 1,
                "jne  <IoCheckFunctionAccess+>;testb $, (%eax);jne - <PsGetContextThread+>;testb $, %cl;je  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %eax;testb $, (%eax);je - <FsRtlNotifyFilterChangeDirectory+>;testb $, (%edx);je  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;pushl %ebx;movl -(%ebp), %eax;addl $, %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %esi;addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "cmpb $, -(%ebp);je - <NtQueryVolumeInformationFile+>;movl %eax, %esi;jmp - <NtQueryVolumeInformationFile+>;nop": 1,
                "je - <NtQueryVolumeInformationFile+>;movl %eax, %esi;jmp - <NtQueryVolumeInformationFile+>;nop;nop": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %esi;orl $-, -(%ebp);movl -(%ebp), %ebx;jmp - <NtQueryVolumeInformationFile+>": 1,
                "xorl %edi, %edi;cmpl %edi, %esi;jge  <IoCheckFunctionAccess+>;pushl %esi;calll - <ExRaiseStatus>": 1,
                "movb (%eax), %cl;movl (%ebp), %edx;movb %cl, (%edx);pushl %edi;pushl %eax": 1,
                "movl $, (%eax);orl $-, -(%ebp);jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "je - <NtQueryVolumeInformationFile+>;pushl %edi;pushl %edi;jmp - <IoCheckFunctionAccess+>;movl $, %esi": 1,
                "movl -(%ebp), %eax;jmp - <NtQueryVolumeInformationFile+>;movl %esi, (%eax);jmp - <NtReadFile+>;movl %ebx, %ecx": 1,
                "jmp - <NtReadFile+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl $, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "movl %esi, (%ecx);movl , %ecx;jmp - <NtConnectPort+>;testw %si, %si;je  <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <RtlVolumeDeviceToDosName+>;retl": 4,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl $, %esi;movl %ebx, %ecx;calll - <ObfDereferenceObject>": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "movl $, %eax;jmp - <NtReadFile+>;nop;nop;nop": 1,
                "orl $-, -(%ebp);movl %esi, %eax;jmp - <NtReadFile+>;cmpl $, %eax;je - <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "jmp - <SeRegisterLogonSessionTerminatedRoutine+>;movl %ebx, (%eax);jmp - <SeRegisterLogonSessionTerminatedRoutine+>;movl %edx, %eax;xorl %edx, %edx": 1,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);cmpl %ebx, %eax;jne  <IoCheckFunctionAccess+>;movl %edi, %ecx": 1,
                "cmpl %ebx, (%ebp);je  <IoCheckFunctionAccess+>;cmpl $-, -(%ebp);jne  <IoCheckFunctionAccess+>;cmpl $-, -(%ebp)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx);cmpl %ebx, (%edi);je  <IoCheckFunctionAccess+>": 2,
                "pushl %eax;calll - <KeSetEvent>;movl %edi, %ecx;calll - <ObfDereferenceObject>;movl %edi, %ecx": 2,
                "divl %edi;testl %edx, %edx;jne  <IoCheckFunctionAccess+>;movl (%ebp), %edi;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;testl %edi, (%eax);je - <ObFindHandleForObject+>;jmp  <IoCheckFunctionAccess+>;cmpl $-, -(%ebp)": 1,
                "testl %edi, (%eax);je - <ObFindHandleForObject+>;jmp  <IoCheckFunctionAccess+>;cmpl $-, -(%ebp);je - <IoWMIRegistrationControl+>": 1,
                "calll - <ObfDereferenceObject>;movl %edi, %esi;jmp  <IoCheckFunctionAccess+>;cmpl $-, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "cmpl $-, -(%ebp);jne  <IoCheckFunctionAccess+>;cmpl $-, -(%ebp);je - <NtWriteFile+>;movl -(%ebp), %ecx": 2,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "pushl -(%ebp);calll - <KeSetEvent>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp - <NtWriteFile+>": 1,
                "je  <IoCheckFunctionAccess+>;calll - <ObfDereferenceObject>;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "movl $, %eax;jmp - <NtWriteFile+>;pushl -(%ebp);pushl -(%ebp);calll  <NtSetVolumeInformationFile+>": 1,
                "nop;nop;movl -(%ebp), %esi;jmp  <IoCheckFunctionAccess+>;movl %ecx, (%ebx)": 1,
                "jmp - <NtWriteFile+>;cmpl $, %ecx;je - <SeRegisterLogonSessionTerminatedRoutine+>;cmpl $, %ecx;je - <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "pushl %edi;jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edi;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;movl %edi, %ecx;calll - <ObfReferenceObject>": 1,
                "je  <IoCheckFunctionAccess+>;calll - <ObfDereferenceObject>;movl %edi, %ecx;calll - <ObfDereferenceObject>;cmpl $, -(%ebp)": 1,
                "jmp - <SeRegisterLogonSessionTerminatedRoutine+>;movb $, -(%ebp);xorl %ebx, %ebx;cmpl %ebx, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;cmpl $-, -(%ebp);jne - <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "jmp - <IoQueryDeviceDescription+>;pushl $;pushl %edi;calll - <ExFreePoolWithTag>;jmp - <RtlValidSecurityDescriptor+>": 1,
                "movw %ax, (%edx);movw (%edi), %ax;movzwl (%edx), %ecx;movw %ax, (%edx);movl (%edi), %eax": 1,
                "movl (%edi), %eax;addl %edi, %eax;shrl %ecx;movl %edi, %esi;je  <IoCheckFunctionAccess+>": 1,
                "shrl %ecx;movl %edi, %esi;je  <IoCheckFunctionAccess+>;movw (%eax), %bx;movw %bx, (%esi)": 1,
                "jmp - <RtlSetOwnerSecurityDescriptor+>;pushl %ebx;pushl (%ebp);calll - <ObCloseHandle>;jmp - <RtlSetOwnerSecurityDescriptor+>": 1,
                "pushl (%ebp);calll - <ObCloseHandle>;jmp - <RtlSetOwnerSecurityDescriptor+>;movl %fs:, %eax;cmpb $, (%eax)": 1,
                "jmp - <RtlFormatCurrentUserKeyPath+>;pushl %edi;pushl %ebx;calll  <NtSetVolumeInformationFile+>;movl $, %eax": 1,
                "jmp - <NtAddAtom+>;jmp - <NtAddAtom+>;movl (%ebp), %eax;testl %eax, %eax;je - <NtDeviceIoControlFile+>": 1,
                "pushl $;calll - <ExRaiseStatus>;jmp - <PsCreateSystemThread+>;nop;nop": 1,
                "jmp - <PsCreateSystemThread+>;nop;nop;nop;nop": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlCopyUnicodeString>;pushl $;leal -(%ebp), %eax": 2,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>;pushl $": 1,
                "calll - <RtlAppendUnicodeStringToString>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "movl %edx, (%eax);leal -(%ebp), %eax;pushl $;pushl %eax;calll - <swprintf>": 1,
                "pushl %eax;calll - <RtlCreateUnicodeString>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <FsRtlOplockFsctrl+>;testl %eax, %eax": 2,
                "testl %eax, %eax;jl  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <IoSetDeviceInterfaceState+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "addb %al, (%eax);orl $, %eax;addb %al, (%eax);addb %ah, ;addb %al, (%eax)": 1,
                "pushl $;addl $, %ecx;movl %eax, %esi;decl (%esi);pushl %ecx": 1,
                "movl %eax, %esi;decl (%esi);pushl %ecx;calll - <ExAcquireResourceExclusiveLite>;movl , %eax": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl , %eax;addl $, %eax;pushl %eax;calll  <NtSetVolumeInformationFile+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlCreateUnicodeString>;pushl %ebx;pushl %edi": 1,
                "pushl -(%ebp);calll - <NtFindAtom+>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 2,
                "calll - <ExFreePoolWithTag>;pushl -(%ebp);calll - <ZwDeleteKey>;pushl -(%ebp);calll - <ZwClose>": 1,
                "je  <IoCheckFunctionAccess+>;movb $, %cl;movb $, (%esi);calll *;popl %edi": 1,
                "andl $, %eax;andl $, %eax;orb (%eax), %al;addb %al, (%eax);andl $, %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <NtFreeVirtualMemory+>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlSubAuthoritySid+>;cmpl $, -(%ebp);jne - <RtlSubAuthoritySid+>": 1,
                "jmp - <RtlSetGroupSecurityDescriptor+>;pushl -(%ebp);calll - <RtlCreateRegistryKey+>;jmp - <RtlSetGroupSecurityDescriptor+>;jmp - <RtlSubAuthoritySid+>": 1,
                "incl %edi;addb %dh, (%edx);outsl (%esi), %dx;addb %dh, (%ebp);jo  <IoCheckFunctionAccess+>": 1,
                "decl %edi;decl %edi;pushl %esp;cmpb (%eax), %ah;jae  <IoCheckFunctionAccess+>": 1,
                "movl %edx, %ecx;movl %ecx, -(%ebp);jmp - <IoWMIQueryAllData+>;subl %eax, %ecx;addl %ecx, -(%ebp)": 1,
                "jmp - <IoWMIQueryAllData+>;pushl ;calll - <NtClose>;movl -(%ebp), %eax;addl $, %eax": 1,
                "calll - <RtlVolumeDeviceToDosName+>;calll - <IoOpenDeviceInterfaceRegistryKey+>;jmp - <IoWMIQueryAllData+>;nop;incl %ecx": 1,
                "movl %ecx, -(%ebp);movw $, (%ecx);movl %ecx, (%ebx);jmp  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "movl (%ebp), %edi;movl (%edi), %ecx;cmpl $, (%ecx);je - <IoQueryFileInformation+>;pushl $": 1,
                "jmp - <IoQueryFileInformation+>;movl $, %esi;jmp - <PsSetProcessWinProcess+>;orl $, %edi;movl %edi, (%ebp)": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;calll  <NtSetVolumeInformationFile+>;movl %eax, -(%ebp)": 1,
                "calll  <NtSetVolumeInformationFile+>;movl %eax, -(%ebp);testl %eax, %eax;jge - <IoSetIoCompletion+>;xorl %esi, %esi": 1,
                "testl %eax, %eax;jge - <IoSetIoCompletion+>;xorl %esi, %esi;cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "cmpl %esi, -(%ebp);je - <IoCheckFunctionAccess+>;pushl -(%ebp);calll - <RtlCopyUnicodeString+>;jmp - <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);calll - <KeInitializeEvent+>;cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp)": 3,
                "cmpb $, -(%ebp);je - <IoCheckFunctionAccess+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp - <IoCheckFunctionAccess+>": 1,
                "pushl (%esi);pushl %ebx;pushl %esi;calll  <IoIsValidNameGraftingBuffer+>;jmp - <IoSetIoCompletion+>": 1,
                "jmp - <IoSetIoCompletion+>;testb $, %al;je - <IoSetIoCompletion+>;pushl $;pushl (%esi)": 1,
                "calll - <RtlCopyUnicodeString+>;jmp - <SeQueryInformationToken+>;incl -(%ebp);cmpl $, -(%ebp);jbe - <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);calll - <RtlCopyUnicodeString+>;movl (%ebx), %eax;cmpl %edi, %eax;je - <IoSetIoCompletion+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ebx;movl (%ebp), %esi;xorl %edi, %edi;jmp - <FsRtlRegisterUncProvider+>": 1,
                "cmpl $, %eax;je  <IoCheckFunctionAccess+>;cmpl $, %eax;jne - <FsRtlRegisterUncProvider+>;pushl %esi": 1,
                "movl %eax, -(%ebp);jmp - <FsRtlRegisterUncProvider+>;jmp - <CcSetLogHandleForFile+>;pushl $;pushl %eax": 1,
                "pushl (%eax);pushl %edi;calll *(%ecx);jmp - <PsGetContextThread+>;pushl %ebx": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;jmp - <CcCopyRead+>;jmp - <IoSetIoCompletion+>;jmp - <IoSetIoCompletion+>": 1,
                "jmp - <IoSetIoCompletion+>;jmp - <IoSetIoCompletion+>;movl -(%ebp), %eax;movsbl (%eax), %eax;pushl %eax": 1,
                "movl %eax, %esi;jmp - <IoSetIoCompletion+>;pushl $;leal (%eax), %edx;popl %ecx": 1,
                "calll - <ObDereferenceSecurityDescriptor>;jmp - <IoWMIQuerySingleInstance+>;movb $, %cl;movb $, (%esi);calll *": 1,
                "movl %esi, %eax;jmp - <ObSetSecurityObjectByPointer+>;pushl %eax;pushl %ebx;calll  <NtSetVolumeInformationFile+>": 1,
                "movl -(%ebp), %esp;jmp - <ObSetSecurityObjectByPointer+>;nop;nop;nop": 1,
                "je - <ObSetSecurityObjectByPointer+>;movb $, (%ecx);movb $, %cl;calll *;jmp - <ObSetSecurityObjectByPointer+>": 1,
                "jmp - <IoRegisterBootDriverReinitialization+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <IoRegisterBootDriverReinitialization+>": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl (%edi);calll - <ZwQuerySecurityObject>": 1,
                "pushl (%edi);calll - <ZwQuerySecurityObject>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl %eax;pushl (%ebp);calll - <RtlGetDaclSecurityDescriptor>;cmpb %bl, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "pushl %eax;calll - <RtlCreateAcl>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;cmpb %bl, (%ebp)": 1,
                "pushl %eax;pushl %edi;pushl -(%ebp);calll - <RtlGetAce>;testl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl $;pushl %eax;calll - <RtlSetDaclSecurityDescriptor>;testl %eax, %eax": 1,
                "pushl %eax;calll - <RtlValidSecurityDescriptor>;leal -(%ebp), %eax;pushl %eax;movl (%ebp), %eax": 1,
                "calll - <ExFreePoolWithTag>;jmp - <RtlGUIDFromString+>;movl (%eax), %edi;cmpl $, %edi;jg  <IoCheckFunctionAccess+>": 1,
                "movl $, (%edx);cmpl $, (%eax);je  <IoCheckFunctionAccess+>;addl $, %ecx;pushl %ecx": 1,
                "cmpl %ebx, (%edi);je - <IoWMIRegistrationControl+>;pushl %esi;pushl %edi;calll  <IoAssignResources+>": 1,
                "calll *;jmp - <RtlQueryRegistryValues+>;movl %eax, -(%ebp);movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);calll - <ZwClose>;cmpl %ebx, %esi;jl  <IoCheckFunctionAccess+>": 1,
                "movw $, -(%ebp);pushl %eax;pushl $;pushl %ebx;leal -(%ebp), %eax": 6,
                "incl -(%ebp);calll - <ZwClose>;movl -(%ebp), %ecx;jmp - <IoReportDetectedDevice+>;pushl %edi": 1,
                "calll - <IoDeleteDevice>;movl %edi, %eax;jmp - <IoReportDetectedDevice+>;movzwl -(%ebp), %eax;movl $, %edi": 1,
                "pushl %eax;calll - <_snwprintf>;movl %edi, %ecx;subl -(%ebp), %ecx;addl $, %esp": 1,
                "addl $, %esp;cmpl $-, %eax;movw %cx, -(%ebp);je  <IoCheckFunctionAccess+>;leal (%eax,%eax), %ecx": 2,
                "pushl -(%ebp);movl %eax, %edi;calll - <ZwClose>;cmpl %ebx, %edi;jl - <IoCheckFunctionAccess+>": 1,
                "pushl $;popl %edi;pushl %ebx;pushl %ebx;pushl %esi": 1,
                "calll - <ZwClose>;movl -(%ebp), %eax;movw $, -(%ebp);movw %di, -(%ebp);movl $, -(%ebp)": 1,
                "calll *;pushl %ebx;pushl -(%ebp);calll  <IoReportTargetDeviceChange+>;cmpb %bl, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;pushl -(%ebp);calll - <ZwDeleteKey>;cmpl %ebx, -(%ebp);je - <IoReportDetectedDevice+>": 1,
                "movzwl (%eax), %ecx;movl (%eax), %esi;movl -(%ebp), %edi;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "movb $, (%eax);calll *;movl -(%ebp), %eax;testb $, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);pushl $;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 2,
                "pushl %eax;pushl %ebx;calll - <IoDeleteSymbolicLink+>;pushl %ebx;pushl -(%ebp)": 1,
                "movl %eax, -(%ebp);calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);jl  <IoCheckFunctionAccess+>;cmpb %bl, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);jl  <IoCheckFunctionAccess+>;cmpb %bl, -(%ebp);je - <IoReportDetectedDevice+>": 1,
                "pushl -(%ebp);calll - <InbvInstallDisplayStringFilter+>;jmp - <IoReportDetectedDevice+>;movl $, -(%ebp);pushl $": 1,
                "jmp - <IoReportDetectedDevice+>;movl $, -(%ebp);pushl $;jmp - <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwClose>;jmp - <IoReportDetectedDevice+>;jmp - <IoReportDetectedDevice+>;pushl -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx;addb %ah, (%esi)": 3,
                "addb %ah, (%ecx);jae  <IoCheckFunctionAccess+>;imull $, (%eax), %eax;outsl (%esi), %dx;addb %ch, (%esi)": 3,
                "addb %al, (%eax);addb %al, (%eax);decl %esi;addb %ch, (%edi);pushl %edx": 1,
                "pushl %eax;calll - <RtlPrefixString+>;movl %eax, %edi;testl %edi, %edi;jl - <IoSetDeviceInterfaceState+>": 1,
                "movw (%esi), %ax;movl (%esi), %esi;movl -(%ebp), %edi;movw %ax, -(%ebp);movzwl %ax, %ecx": 1,
                "pushl (%ebp);pushl (%ebp);calll - <ZwSetValueKey>;movl %eax, %edi;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl %ebx;pushl %ebx;movb $, -(%ebp);calll - <RtlGUIDFromString+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <RtlValidSecurityDescriptor+>;testb $, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlValidSecurityDescriptor+>;cmpb %bl, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlValidSecurityDescriptor+>;cmpb %bl, (%ebp);jne - <RtlValidSecurityDescriptor+>": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl $, %esi;pushl -(%ebp);calll - <ZwClose>": 1,
                "jmp - <RtlValidSecurityDescriptor+>;pushl %ebx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 4,
                "leal -(%ebp), %eax;pushl -(%ebp);pushl $;pushl %eax;pushl -(%ebp)": 2,
                "cmpl $, %eax;je - <IoCheckFunctionAccess+>;movl -(%ebp), %esi;jmp - <RtlValidSecurityDescriptor+>;pushl $": 1,
                "movw -(%ebp), %ax;jmp - <RtlValidSecurityDescriptor+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "jmp - <IoSetDeviceInterfaceState+>;cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;pushl (%ebp);calll - <ZwDeleteKey>": 1,
                "jmp - <RtlDeleteOwnersRanges+>;jmp - <RtlDeleteOwnersRanges+>;leal (%eax), %ebx;movl (%ebx), %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl $;pushl -(%ebp);leal (%esi), %eax;pushl %eax;calll - <RtlEqualUnicodeString>": 1,
                "pushl %eax;calll - <RtlEqualUnicodeString>;testb %al, %al;jne  <IoCheckFunctionAccess+>;movl (%esi), %esi": 1,
                "cmpl $, %esi;jne - <RtlDeleteOwnersRanges+>;pushl %ebx;pushl -(%ebp);jmp - <RtlDeleteOwnersRanges+>": 1,
                "movl %edi, -(%ebp);jmp - <RtlDeleteOwnersRanges+>;movl %ebx, %esi;jmp - <RtlDeleteOwnersRanges+>;xorl %esi, %esi": 1,
                "pushl $;pushl %esi;calll - <ExFreePoolWithTag>;jmp - <IoConnectInterrupt+>;movl $, %eax": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <IoCheckFunctionAccess+>;movl %eax, (%ecx);leal -(%ebp), %eax": 2,
                "jmp - <IoGetDeviceInterfaces+>;movw $, -(%ebp);movw $, -(%ebp);movl %ebx, %esi;leal -(%ebp), %edi": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebx), %ebx;jmp - <FsRtlBalanceReads+>;movl (%ebx), %ebx;jmp - <FsRtlBalanceReads+>": 1,
                "movl (%ebx), %ecx;movl %ecx, (%eax);leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "jne  <IoCheckFunctionAccess+>;incw (%ebx);movl %esi, %ecx;calll *;movl (%ebx), %eax": 1,
                "calll - <IoConnectInterrupt+>;jmp  <IoCheckFunctionAccess+>;movl (%ebx), %ebx;movl -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "movl $, %esi;movl %esi, %ecx;movb $, (%ebx);calll *;movl , %eax": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl %ecx, -(%ebp);movl (%ebx), %ecx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %eax;jmp - <RtlCheckRegistryKey+>;xorb %al, %al;jmp - <RtlSelfRelativeToAbsoluteSD+>;movl , %ecx": 1,
                "jmp - <RtlCheckRegistryKey+>;xorb %al, %al;jmp - <RtlSelfRelativeToAbsoluteSD+>;movl , %ecx;movl %ecx, (%eax)": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;cmpl %edi, (%ebx);leal (%eax), %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;movl , %edx;movl %edx, (%ecx);cmpl $, (%ecx);leal (%ecx), %edx": 1,
                "jbe  <IoCheckFunctionAccess+>;movl (%ecx), %ecx;xorl %esi, %esi;cmpb $, (%edx);jne  <IoCheckFunctionAccess+>": 1,
                "cmpb $, (%edx);jne  <IoCheckFunctionAccess+>;movl (%edx), %esi;decl %ecx;leal (%edx,%esi), %edx": 1,
                "pushl (%ebp);pushl (%ebp);calll - <ZwDeleteValueKey>;jmp - <IoConnectInterrupt+>;movl (%ebp), %esi": 1,
                "calll - <ExFreePoolWithTag>;jmp - <IoDeleteSymbolicLink+>;pushl %edi;movl (%ebp), %edi;cmpl %ebx, %edi": 1,
                "cmpl %ebx, %edi;je  <IoCheckFunctionAccess+>;movswl (%edi), %eax;pushl %eax;pushl %edi": 2,
                "leal (%edi), %ebx;cmpw $, (%ebx);je  <IoCheckFunctionAccess+>;pushl $;pushl %ebx": 2,
                "movl (%eax), %eax;cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;addl $, %eax;cmpw %bx, (%eax)": 2,
                "addl %edi, %esi;cmpl $, (%ebp);jbe  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;pushl -(%ebp,%eax,)": 1,
                "calll - <ZwClose>;movl -(%ebp), %eax;movl %eax, %edx;decl %eax;andl $, %eax": 1,
                "andl $, %eax;leal -(%ebp,%eax,), %ecx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ebx, (%ecx)": 1,
                "movb $, -(%ebp);jmp - <RtlUpperString+>;jmp - <RtlUpperString+>;pushl (%ebp);calll - <ZwDeleteKey>": 1,
                "calll - <ZwDeleteKey>;jmp - <RtlUpperString+>;pushl (%ebp);calll - <ZwClose>;jmp - <RtlUpperString+>": 1,
                "jmp - <RtlCheckRegistryKey+>;movl %edi, (%eax);movl , %ecx;movl %ecx, (%eax);jmp - <IoDisconnectInterrupt+>": 1,
                "addb %ch, (%edi);arpl %ax, (%eax);incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "jmp - <IoReportResourceUsage+>;movb $, (%ecx);movb $-, (%ecx);movb %bl, (%ecx);movw %bx, (%ecx)": 1,
                "movw %bx, (%ecx);movl (%eax), %edx;cmpl $-, %edx;jne  <IoCheckFunctionAccess+>;movl , %edx": 1,
                "movl -(%ebp), %edx;andl -(%ebp), %edx;decl %ecx;andl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "jmp  <IoCheckFunctionAccess+>;jmp - <IoDisconnectInterrupt+>;movzbl (%esi), %ecx;decl %ecx;je  <IoCheckFunctionAccess+>": 1,
                "testb $, (%eax);movb $-, (%eax);movw (%esi), %dx;movw %dx, (%eax);je  <IoCheckFunctionAccess+>": 1,
                "movb $-, (%eax);movw (%esi), %dx;movw %dx, (%eax);je  <IoCheckFunctionAccess+>;leal -(%eax), %edx": 1,
                "decl (%ecx);cmpb $, (%edx);jne  <IoCheckFunctionAccess+>;subl $, %edx;cmpl %edi, %edx": 1,
                "pushl %edi;calll - <IoReportResourceUsage+>;movl -(%ebp), %esi;jmp - <IoDisconnectInterrupt+>;movl -(%ebp), %esi": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl , %eax;incl ": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl %eax, ;jmp - <IoDisconnectInterrupt+>": 1,
                "jne - <IoConnectInterrupt+>;movl %ecx, %edi;orl %eax, (%edi);jmp - <IoConnectInterrupt+>;pushl $": 1,
                "pushl $;incl %eax;popl %ebx;movl $, -(%ebp);movzwl (%esi), %esi": 1,
                "movl $, -(%ebp);movzwl (%esi), %esi;movb %bl, %cl;shrl %cl, %esi;andl $, %esi": 1,
                "movb %bl, %cl;shrl %cl, %esi;andl $, %esi;cmpl $, %esi;leal (%esi), %ecx": 1,
                "leal (%esi), %ecx;movl (%ebp), %esi;movw %cx, (%eax);incl %eax;incl %eax": 1,
                "movl $, %edi;jmp - <RtlGetAce+>;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>": 1,
                "calll - <NtFindAtom+>;jmp - <RtlUpperString+>;jmp - <RtlUpperString+>;cmpl $, %edi;jne - <RtlUpperString+>": 1,
                "movw %ss, (%ecx);sbbl %eax, (%eax);addb (%eax), %al;pushl %eax;calll - <RtlGetAce+>": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);pushl -(%ebp);leal -(%ebp), %eax;pushl $": 1,
                "addl $, %esp;cmpl $-, %eax;pushl $;popl %edi;movw %di, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>;pushl %esi": 1,
                "movl -(%ebp), %eax;pushl (%eax);movl (%eax), %ecx;addl %eax, %ecx;pushl %ecx": 2,
                "calll - <ZwSetValueKey>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;incl -(%ebp)": 1,
                "pushl %edi;pushl $;pushl (%ebp);calll - <RtlCheckRegistryKey+>;pushl (%ebp)": 1,
                "movl (%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%eax), %eax;cmpl $-, (%eax)": 1,
                "calll *%ecx;calll ;popl %esp;addb %ah, -(%esi);testl %esp, -(%esi,%edi,)": 1,
                "pushl %ecx;leal -(%ebp,%eax,), %eax;pushl %eax;calll - <_snwprintf>;movl %esi, %ecx": 1,
                "pushl $;pushl -(%ebp);xorl %esi, %esi;incl %esi;calll - <NtFindAtom+>": 1,
                "testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;cmpl $, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "movl (%esi), %eax;testb $, %al;je  <IoCheckFunctionAccess+>;testb $, %ah;jne  <IoCheckFunctionAccess+>": 1,
                "calll - <toupper+>;pushl $;pushl %esi;calll - <InbvInstallDisplayStringFilter+>;pushl %ebx": 1,
                "leal (%ecx), %eax;movl %ecx, %edx;movl (%eax), %ecx;cmpl %ebx, %ecx;movl %ebx, (%eax)": 1,
                "movl %ebx, (%edx);jne - <IoCheckFunctionAccess+>;pushl -(%ebp);andl $-, (%esi);calll - <IoDeleteDevice>": 1,
                "jne - <IoCheckFunctionAccess+>;pushl -(%ebp);andl $-, (%esi);calll - <IoDeleteDevice>;movb $, -(%ebp)": 1,
                "calll - <ZwDeleteKey>;pushl -(%ebp);calll - <ZwDeleteKey>;jmp - <IoReportResourceUsage+>;pushl -(%ebp)": 1,
                "jmp  <IoCheckFunctionAccess+>;cmpl $, (%esi);jne - <RtlGetAce+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "movb $, (%eax);calll *;jmp - <IoAssignDriveLetters+>;movl $, %eax;jmp - <RtlCheckRegistryKey+>": 1,
                "movl (%eax), %ecx;cmpl $, (%eax,%ecx);je  <IoCheckFunctionAccess+>;movl %esi, (%ebx);leal -(%ebp), %eax": 1,
                "cmpl $, (%eax,%ecx);je  <IoCheckFunctionAccess+>;movl %esi, (%ebx);leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;jmp - <RtlCheckRegistryKey+>;nop;decl %ebp;addb %ch, (%ecx)": 1,
                "int;int;int;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movw %di, (%eax);movl (%ebx), %eax;movl %edi, (%eax);jmp - <IoReportResourceUsage+>;jmp - <IoReportResourceUsage+>": 1,
                "movl (%ebx), %eax;movl %edi, (%eax);jmp - <IoReportResourceUsage+>;jmp - <IoReportResourceUsage+>;cmpl %edi, %esi": 1,
                "jmp - <IoReportResourceUsage+>;jmp - <IoReportResourceUsage+>;cmpl %edi, %esi;jne - <IoReportResourceUsage+>;movl (%ebx), %ebx": 1,
                "jne - <IoReportResourceUsage+>;movl (%ebx), %ebx;testb $, (%ebx);jne - <IoReportResourceUsage+>;pushl $": 1,
                "jmp - <IoReportResourceUsage+>;cmpl $, %esi;je - <IoReportResourceUsage+>;cmpl $, %esi;je - <IoReportResourceUsage+>": 1,
                "jmp - <IoReportResourceUsage+>;calll - <RtlSubAuthoritySid+>;jmp - <IoReportResourceUsage+>;testl %esi, %esi;jl  <IoCheckFunctionAccess+>": 1,
                "calll - <RtlSubAuthoritySid+>;jmp - <IoReportResourceUsage+>;testl %esi, %esi;jl  <IoCheckFunctionAccess+>;movl $, %esi": 1,
                "testb $, (%eax);jne - <IoReportResourceUsage+>;movl $, %ecx;cmpl %ecx, %esi;jg  <IoCheckFunctionAccess+>": 1,
                "movl $, -(%ebp);pushl (%ebx);pushl $;pushl -(%ebp);calll - <swprintf>": 1,
                "jb  <IoCheckFunctionAccess+>;addb %ch, %gs:(%esi);je  <IoCheckFunctionAccess+>;decl %ecx;addb %al, (%eax,%eax)": 3,
                "addb %dl, (%eax);popal;addb %dh, (%edx);addb %ch, %gs:(%esi);je  <IoCheckFunctionAccess+>": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;je  <IoCheckFunctionAccess+>;movl (%ebp), %edx;pushl $": 1,
                "cmpl %ebx, %esi;je  <IoCheckFunctionAccess+>;movl (%ebp), %edx;pushl $;popl %ecx": 1,
                "movl (%ebp), %ecx;pushl %esi;movl $, (%esi);movl %eax, (%esi);movl $, (%esi)": 1,
                "movl $, (%esi);movl %ebx, (%esi);movl $, (%esi);movl %eax, (%esi);movl $, (%esi)": 1,
                "movl $, (%esi);movl %ebx, (%esi);movl $, (%esi);movl %edi, (%esi);movl %edx, (%esi)": 1,
                "je  <IoCheckFunctionAccess+>;cmpw $, %ax;jb  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movw (%eax), %ax": 1,
                "pushl %edi;calll - <RtlFreeUnicodeString>;movl (%ebp), %eax;cmpw $, (%eax);ja  <IoCheckFunctionAccess+>": 1,
                "pushl %edi;calll - <RtlFreeUnicodeString>;movl -(%ebp), %edi;jmp - <RtlUpperString+>;jmp - <RtlUpperString+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);incl %ebx;addb %ch, (%eax,%eax)": 1,
                "addb %dh, (%eax,%eax);addb %dh, (%edx);jae  <IoCheckFunctionAccess+>;addb %al, (%eax);addb %al, (%eax)": 4,
                "jae  <IoCheckFunctionAccess+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "pushl %esi;calll  <IoReportTargetDeviceChange+>;jmp - <IoOpenDeviceRegistryKey+>;jmp - <RtlGUIDFromString+>;nop": 1,
                "incl %esp;addb %ah, (%ebp);jbe  <IoCheckFunctionAccess+>;imull $, (%eax), %eax;incl %esp": 2,
                "incl %esp;addb %ah, (%ebp);jae  <IoCheckFunctionAccess+>;arpl %ax, (%eax);addb %al, (%eax)": 2,
                "movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;pushl $": 2,
                "jb  <IoCheckFunctionAccess+>;jbe  <IoCheckFunctionAccess+>;imull $, (%eax), %eax;addb %al, (%eax);incl %ebx": 1,
                "orl $, %ecx;movl %ecx, (%esi);jmp - <RtlCheckRegistryKey+>;leal (%esi), %edi;cmpl $, (%edi)": 1,
                "je - <RtlCheckRegistryKey+>;cmpl $, (%esi);jne - <RtlCheckRegistryKey+>;jmp - <RtlCheckRegistryKey+>;cmpl %ebx, %edi": 1,
                "je  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;pushl $;pushl %esi": 1,
                "cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp)": 1,
                "testl %eax, %eax;movl $, %esi;je  <IoCheckFunctionAccess+>;pushl %esi;pushl %eax": 1,
                "movl (%ebx), %eax;movl (%eax), %eax;addl $, %eax;cmpw $, (%eax);je  <IoCheckFunctionAccess+>": 2,
                "pushl (%eax);calll - <IoCsqRemoveIrp+>;movl (%edi), %eax;movl (%eax), %eax;addl $, %eax": 1,
                "calll  <KeFindConfigurationEntry+>;testb %al, %al;movb %al, -(%ebp);jne - <RtlCheckRegistryKey+>;cmpl %edi, -(%ebp)": 1,
                "movb %al, -(%ebp);jne - <RtlCheckRegistryKey+>;cmpl %edi, -(%ebp);je - <RtlCheckRegistryKey+>;pushl -(%ebp)": 1,
                "pushl ;pushl (%esi);calll  <KeFindConfigurationEntry+>;movb %al, -(%ebp);jmp - <RtlCheckRegistryKey+>": 1,
                "pushl -(%ebp);pushl ;calll  <KeFindConfigurationEntry+>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "jge - <RtlCheckRegistryKey+>;movl %eax, -(%ebp);jmp - <RtlCheckRegistryKey+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "jmp - <RtlCheckRegistryKey+>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <RtlCheckRegistryKey+>": 3,
                "jmp - <IoRegisterBootDriverReinitialization+>;nop;subb (%edx), %ch;subb (%eax), %ah;decl %ecx": 1,
                "pushl %esp;pushl %ebp;pushl %ebx;popl %edi;pushl %ebx": 2,
                "pushl %ebx;popl %edi;pushl %ebx;pushl %ebp;incl %ebx": 2,
                "incl %ebp;pushl %ebx;pushl %ebx;orb (%eax), %al;addb %ah, (%eax)": 1,
                "addb %ah, (%eax);andb %ah, (%eax);andb %ah, (%esi);jb  <IoCheckFunctionAccess+>;decl %ecx": 1,
                "decl %ecx;pushl %edx;pushl %eax;popl %edi;decl %ebp": 9,
                "incl %ebp;pushl %edx;orb %cs:(%eax), %al;int;int": 2,
                "je - <RtlCheckRegistryKey+>;cmpl $, (%eax);je - <RtlCheckRegistryKey+>;addl $, %eax;pushl %eax": 1,
                "incl %ebp;pushl %edx;popl %ecx;popl %edi;incl %edx": 1,
                "int;pushl %edi;calll - <RtlRandom>;pushl $;xorl %edx, %edx": 1,
                "pushl %edx;calll - <RtlCheckRegistryKey+>;cmpl $, %eax;je - <RtlCheckRegistryKey+>;jmp - <RtlCheckRegistryKey+>": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi;jne  <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "calll - <RtlInitUnicodeString>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlVolumeDeviceToDosName+>": 1,
                "pushl %eax;pushl (%esi);calll - <IoCsqRemoveIrp+>;leal (%esi), %edi;cmpw %bx, (%edi)": 1,
                "calll - <IoCsqRemoveIrp+>;pushl %ebx;pushl %ebx;pushl (%esi);pushl $": 1,
                "movb $, %cl;movb $, (%eax);calll *;jmp - <RtlCopyLuid+>;jae  <IoCheckFunctionAccess+>": 1,
                "jmp - <ExInitializePagedLookasideList+>;movl $, %eax;jmp - <IoConnectInterrupt+>;pushl %eax;pushl -(%ebp)": 1,
                "movl %edx, (%ecx);cmpl %eax, ;jne - <IoDeleteSymbolicLink+>;movl (%eax), %ecx;movl %ecx, ": 1,
                "incl %ebx;jmp - <IoGetBootDiskInformation+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je - <IoGetBootDiskInformation+>": 1,
                "xorl %ecx, %ecx;incl %ecx;jmp - <RtlAddRange+>;jmp - <RtlAddRange+>;movl %eax, -(%ebp)": 1,
                "addl $, %edx;jmp - <RtlInitCodePageTable+>;xorl %esi, %esi;jmp - <IoRegisterBootDriverReinitialization+>;pushl %ecx": 1,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;andl $, (%esi);jmp - <RtlAddRange+>": 1,
                "andl $, (%esi);jmp - <RtlAddRange+>;andl $, -(%ebp);jmp - <ObCreateObjectType+>;xorl %esi, %esi": 1,
                "calll - <IoReportResourceUsage+>;testl %eax, %eax;jge - <IoConnectInterrupt+>;movb $, (%ebp);jmp - <IoConnectInterrupt+>": 1,
                "jmp - <IoRegisterBootDriverReinitialization+>;xorl %eax, %eax;movl %eax, -(%ebp);jmp - <IoConnectInterrupt+>;pushl %ebx": 1,
                "xorl %eax, %eax;movl %eax, -(%ebp);jmp - <IoConnectInterrupt+>;pushl %ebx;pushl %edi": 1,
                "movl %eax, -(%ebp);jmp - <IoConnectInterrupt+>;pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl %ebx;pushl %edi;jmp - <RtlDeleteOwnersRanges+>": 1,
                "jmp - <IoReportResourceUsage+>;jmp  <IoCheckFunctionAccess+>;movl %ebx, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "jne - <IoCheckFunctionAccess+>;movl %eax, -(%ebp);jmp - <IoReportResourceUsage+>;pushl %eax;calll - <IoCreateDevice+>": 1,
                "jl - <IoDeleteSymbolicLink+>;movl (%ebp), %eax;orb $, (%eax);leal (%ebp), %eax;pushl %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl (%ebp);calll - <RtlCheckRegistryKey+>;cmpl $, %edi": 1,
                "je  <IoCheckFunctionAccess+>;cmpl $, (%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "jmp - <RtlSelfRelativeToAbsoluteSD+>;movl (%ebp), %eax;testl %eax, %eax;je - <IoRegisterBootDriverReinitialization+>;leal -(%ebp), %ecx": 1,
                "pushl (%eax);calll *(%eax);testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "movb $, %bl;jmp - <RtlInitCodePageTable+>;movl (%eax), %ecx;cmpl $, %ecx;je  <IoCheckFunctionAccess+>": 1,
                "movl $, %ebx;andl %ebx, (%esi);testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl (%ebp);addl $, %eax;pushl -(%eax);pushl %eax;calll - <RtlDeleteOwnersRanges+>": 1,
                "pushl %esi;pushl %edi;pushl %ebx;movl %eax, (%ebp);calll  <IoReportTargetDeviceChange+>": 1,
                "pushl %eax;pushl %esi;movl %ecx, (%esi);movl -(%ebp), %ecx;pushl %edi": 1,
                "movl %ecx, (%esi);movl -(%ebp), %ecx;pushl %edi;pushl %ebx;movl %ecx, (%esi)": 1,
                "movl -(%ebp), %ecx;pushl %edi;pushl %ebx;movl %ecx, (%esi);calll  <IoReportTargetDeviceChange+>": 1,
                "jmp - <RtlAddRange+>;decl %esi;jmp - <IoCreateController+>;movl $, %eax;jmp - <RtlAddRange+>": 1,
                "movl -(%ebp), %eax;andl $, (%eax);andl $, (%eax);movl $, (%eax);jmp - <RtlDeleteOwnersRanges+>": 1,
                "pushl %ebx;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl $, (%eax);movl %esi, (%eax)": 1,
                "movl $, (%eax);movl %esi, (%eax);jmp - <RtlDeleteOwnersRanges+>;movl $, (%esi);jmp - <RtlDeleteOwnersRanges+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;jmp - <IoReportDetectedDevice+>;movl %eax, %edi": 1,
                "calll - <ExFreePoolWithTag>;movl $, %edi;jmp - <IoReportDetectedDevice+>;movl $, %edi;jmp  <IoCheckFunctionAccess+>": 1,
                "calll - <IoRequestDeviceEject+>;jmp - <IoReportDetectedDevice+>;orb $, (%esi);jmp - <IoReportDetectedDevice+>;movl -(%ebp), %esi": 1,
                "leal -(%ebx,%eax,), %eax;cmpl %ebx, %eax;movl %eax, -(%ebp);jb - <IoReportDetectedDevice+>;movl -(%ebp), %eax": 1,
                "movl (%ecx), %esi;jmp  <IoCheckFunctionAccess+>;xorl %esi, %esi;pushl %eax;pushl $": 1,
                "movl %edx, (%ecx);movl $, (%ecx);jmp - <ObCreateObjectType+>;jmp - <RtlCheckRegistryKey+>;orb $, (%edi)": 1,
                "jmp - <ObCreateObjectType+>;jmp - <RtlCheckRegistryKey+>;orb $, (%edi);pushl %esi;pushl $": 1,
                "testl %eax, %eax;je - <RtlSelfRelativeToAbsoluteSD+>;movb $, (%eax);jmp - <RtlCheckRegistryKey+>;movl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;jmp - <IoReportResourceForDetection+>;jmp - <IoReportResourceForDetection+>;movl -(%ebp), %eax;pushl %ebx": 1,
                "jl  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;calll - <IoConnectInterrupt+>;movl %eax, %edi": 1,
                "je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>;leal (%esi), %edi": 1,
                "movl (%esi), %eax;andl $, %eax;orl -(%ebp), %eax;movl %eax, (%esi);jmp - <RtlInitializeRangeList+>": 1,
                "leal (%eax), %ecx;cmpl %ecx, (%ecx);je - <RtlInitializeRangeList+>;movb $, %cl;movb $, (%eax)": 2,
                "movl (%esi), %eax;movl (%ebp), %ecx;pushl $;pushl $;movl %ecx, (%eax)": 1,
                "movw %cx, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl $, %eax;movl %eax, (%ecx);jmp - <IoCreateDevice+>;movl (%ebx), %eax;movl , %ecx": 1,
                "pushl %edi;calll - <IoCreateDevice+>;testb %al, %al;je  <IoCheckFunctionAccess+>;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);jmp - <RtlCheckRegistryKey+>;pushl $;pushl %edi;calll - <IoCreateDevice+>": 1,
                "jmp - <RtlDeleteOwnersRanges+>;movl $, -(%ebp);jmp - <RtlDeleteOwnersRanges+>;nop;nop": 1,
                "calll - <InbvInstallDisplayStringFilter+>;jmp - <RtlCheckRegistryKey+>;jmp - <RtlDeleteOwnersRanges+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "jmp - <RtlFindRange+>;pushl %ebx;pushl -(%ebp);jmp  <IoCheckFunctionAccess+>;movw $, -(%ebp)": 1,
                "movw $, -(%ebp);jmp - <IoCreateController+>;cmpl $, %eax;je  <IoCheckFunctionAccess+>;cmpl $, %eax": 1,
                "movl -(%ebp), %eax;cmpl %edi, %eax;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "cmpl %edi, %eax;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;movl $, -(%ebp);xorl %esi, %esi": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <NtFindAtom+>;testl %eax, %eax;jl - <RtlFindRange+>": 1,
                "calll - <ExFreePoolWithTag>;jmp - <RtlFindRange+>;nop;andl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, ;addb %al, (%eax);addb %cl, (%ebx);std": 1,
                "popl %eax;jmp - <IoOpenDeviceInterfaceRegistryKey+>;movl (%esi), %esi;cmpw $, (%esi);jne - <IoOpenDeviceInterfaceRegistryKey+>": 1,
                "pushl (%esi);calll - <_wcsicmp>;testl %eax, %eax;popl %ecx;popl %ecx": 3,
                "movl $, (%ebp);jmp - <IoOpenDeviceInterfaceRegistryKey+>;movl (%esi), %eax;movzbl (%eax), %eax;cmpl %eax, (%ebp)": 1,
                "jle - <IoOpenDeviceInterfaceRegistryKey+>;movl %eax, (%ebp);jmp - <IoOpenDeviceInterfaceRegistryKey+>;movl (%ebp), %eax;cmpl $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;cmpl $, %eax;jne - <RtlCheckRegistryKey+>;movb %al, (%esi);jmp - <RtlCheckRegistryKey+>": 1,
                "leal (%eax), %ecx;cmpl %ecx, (%ecx);je - <IoCreateController+>;movb $, %cl;movb $, (%eax)": 1,
                "cmpl $, (%eax);jne  <IoCheckFunctionAccess+>;movl (%eax), %ecx;movl (%eax,%ecx), %esi;pushl $": 2,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "movl %ecx, (%eax);movl %ebx, (%eax);movl %eax, %esi;jmp - <RtlUpperString+>;movl $, (%esi)": 1,
                "jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;cmpl $, (%eax);jne  <IoCheckFunctionAccess+>;cmpl %ebx, (%eax)": 1,
                "calll - <InbvInstallDisplayStringFilter+>;jmp - <RtlUpperString+>;movl -(%ebp), %eax;orl $, (%eax);jmp - <RtlUpperString+>": 1,
                "orl $, (%eax);jmp - <RtlUpperString+>;testl %ebx, (%eax);je  <IoCheckFunctionAccess+>;cmpl $, (%eax)": 1,
                "jne - <RtlUpperString+>;pushl %eax;calll - <RtlUpperString+>;movl -(%ebp), %eax;jmp - <RtlUpperString+>": 1,
                "testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;orl $, (%eax);pushl %esi": 1,
                "calll - <ExFreePoolWithTag>;jmp - <RtlUpperString+>;movl %ebx, -(%ebp);movl $, %esi;jmp - <RtlUpperString+>": 1,
                "cmpl -(%ebp), %esi;jae - <RtlInitializeRangeList+>;jmp - <IoCheckFunctionAccess+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "jmp - <RtlInitCodePageTable+>;movl $, %edi;jmp - <RtlInitCodePageTable+>;movl $, %edi;jmp - <RtlInitCodePageTable+>": 1,
                "jmp - <RtlInitCodePageTable+>;movl $, %eax;jmp - <RtlUpperString+>;cmpl $, %eax;je - <RtlUpperString+>": 1,
                "movl (%ebp), %ecx;addl $, %ecx;movl (%ebp), %eax;adcl $, %eax;testl %eax, %eax": 1,
                "adcl -(%ebp), %ecx;addl $-, %eax;adcl $-, %ecx;pushl %ecx;pushl %eax": 2,
                "adcl $-, %ecx;pushl %ecx;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 2,
                "jne - <IoRegisterBootDriverReinitialization+>;jmp - <IoRegisterBootDriverReinitialization+>;movl (%ebp), %eax;cmpl $, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "pushl $;popl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "arpl %ax, (%eax);jns  <IoCheckFunctionAccess+>;addb %al, (%eax);addb %al, (%eax);pushl %edx": 1,
                "jne - <RtlGetAce+>;orl $, ;pushl $;pushl %esi;pushl %esi": 3,
                "testb $-, ;movl $, %edi;jne - <RtlGetAce+>;orb $-, ;pushl $": 1,
                "jne - <RtlGetAce+>;orb $-, ;pushl $;pushl %esi;pushl %esi": 1,
                "addb %al, (%ecx);decl %ecx;addb %cl, (%eax,%eax);addb %al, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax,%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %dl, (%eax,%eax);addb %al, (%edx)": 1,
                "incl %ebp;addb %ah, (%eax);addb %al, (%esi);incl %ecx;addb %cl, (%ecx)": 2,
                "jmp - <RtlInitCodePageTable+>;movl %edx, (%eax);movl %ecx, (%eax);movl %esi, (%eax);movl %edi, (%eax)": 1,
                "jmp - <KeCallBios+>;movl $, %eax;jmp - <NtAdjustPrivilegesToken+>;nop;nop": 1,
                "sahf;lahf;movb %ah, -(%ebp);movl $, %eax;movl $, %ecx": 1,
                "movb -(%ebp), %al;cli;outb %al, $;inb $, %al;sti": 8,
                "movb %al, -(%ebp);movzbl -(%ebp), %edi;incl %edi;movb $-, -(%ebp);movb -(%ebp), %al": 1,
                "nop;movl -(%ebp), %esp;xorl %edx, %edx;movl -(%ebp), %ecx;calll - <CcUnpinDataForThread+>": 2,
                "movl -(%ebp), %eax;movl (%eax), %edi;movl %edi, -(%ebp);testl %edi, %edi;jne - <NtRequestPort+>": 1,
                "testl %ecx, %ecx;je  <IoCheckFunctionAccess+>;calll - <ObfDereferenceObject>;movl $, %eax;jmp - <NtRequestPort+>": 1,
                "jmp - <NtRequestWaitReplyPort+>;movb $, (%edx);jmp - <NtRequestWaitReplyPort+>;calll  <ExRaiseDatatypeMisalignment>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;jmp - <NtRequestWaitReplyPort+>;movl $, %edi;jmp  <IoCheckFunctionAccess+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "jmp  <IoCheckFunctionAccess+>;cmpl %edi, -(%ebp);jne  <IoCheckFunctionAccess+>;xorl %edx, %edx;movl %esi, %ecx": 1,
                "movl %esi, %ecx;calll - <CcUnpinDataForThread+>;movl $, %ebx;jmp  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "xorl %edx, %edx;movl %esi, %ecx;calll - <CcUnpinDataForThread+>;movl -(%ebp), %ebx;jmp  <IoCheckFunctionAccess+>": 1,
                "negl %edx;sbbl %edx, %edx;notl %edx;andl %ecx, %edx;movw (%edx), %ax": 2,
                "je  <IoCheckFunctionAccess+>;movl $, -(%ebp);orl $-, -(%ebp);jmp  <IoCheckFunctionAccess+>;nop": 1,
                "andl $, (%esi);movl -(%ebp), %eax;movl (%eax), %eax;andl $, %eax;cmpl $, %eax": 1,
                "jmp - <NtRequestWaitReplyPort+>;movl $, %ebx;jmp - <IoCheckFunctionAccess+>;movl $, %edi;jmp  <IoCheckFunctionAccess+>": 1,
                "movb $, (%ebx);movb $, %cl;calll *;jmp - <NtRequestWaitReplyPort+>;movl -(%ebp), %ecx": 1,
                "jmp - <NtRequestWaitReplyPort+>;pushl %edi;calll - <KeReadStateSemaphore>;testl %eax, %eax;je - <NtRequestWaitReplyPort+>": 1,
                "pushl %edi;calll - <KeWaitForSingleObject>;andl $, -(%ebp);jmp - <NtRequestWaitReplyPort+>;movl (%esi), %eax": 1,
                "movl %ecx, (%eax);movl %esi, (%esi);movl %esi, (%esi);jmp - <NtRequestWaitReplyPort+>;nop": 1,
                "movl %esi, (%esi);movl %esi, (%esi);jmp - <NtRequestWaitReplyPort+>;nop;nop": 1,
                "movl %esi, (%esi);jmp - <NtRequestWaitReplyPort+>;nop;nop;nop": 1,
                "xorl %edx, %edx;movl %esi, %ecx;calll - <CcUnpinDataForThread+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movb $, %cl;movb $, (%ebx);calll *;jmp - <LpcRequestPort+>;calll - <ObfDereferenceObject>": 1,
                "movl $, %ecx;calll *;movl -(%ebp), %ecx;movl (%ebp), %edx;movl %esi, ": 1,
                "movl (%ecx), %eax;cmpl (%edx), %eax;jne  <IoCheckFunctionAccess+>;movl (%ecx), %eax;testb $, %al": 1,
                "movw (%eax), %ax;andw $, %ax;cmpw $, %ax;jne  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl %eax;leal (%edi), %eax;pushl %eax;calll - <CcUnpinDataForThread+>;movl , %eax": 1,
                "movl %ebx, (%esi);movl $, %ebx;movl %ebx, %ecx;movl %edx, ;calll *": 1,
                "popl %edx;jmp - <IoCheckFunctionAccess+>;pushl $;popl %edx;movl %edi, %ecx": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp - <RtlSetOwnerSecurityDescriptor+>;leal (%esi), %eax;pushl %eax": 1,
                "jmp - <RtlSetOwnerSecurityDescriptor+>;leal (%esi), %eax;pushl %eax;calll - <KeReadStateSemaphore>;testl %eax, %eax": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl $;leal (%esi), %eax": 1,
                "jmp - <RtlSetOwnerSecurityDescriptor+>;movl (%edi), %eax;movl (%edi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movl %edi, (%edi);jmp - <RtlSetOwnerSecurityDescriptor+>;xorl %edx, %edx;jmp - <RtlSetOwnerSecurityDescriptor+>;movl $, %esi": 1,
                "movl %eax, (%eax);movl %eax, (%eax);jmp - <ObReferenceObjectByName+>;movl (%eax), %edx;movl %esi, (%edx)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);jmp - <ObReferenceObjectByName+>;movl %ebx, (%eax);jmp - <RtlIntegerToUnicodeString+>": 1,
                "je  <IoCheckFunctionAccess+>;pushl $;pushl -(%ebp);pushl -(%ebp);calll - <ObReferenceObjectByName+>": 6,
                "je  <IoCheckFunctionAccess+>;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax": 1,
                "pushl $;pushl %ebx;calll - <KeWaitForSingleObject>;movl %edi, -(%ebp);jmp - <RtlIntegerToUnicodeString+>": 1,
                "jmp - <RtlIntegerToUnicodeString+>;movl %eax, -(%ebp);jmp - <RtlIntegerToUnicodeString+>;nop;nop": 1,
                "movl $, %eax;jmp  <IoCheckFunctionAccess+>;movb $, (%eax);jmp - <NtQueryInformationAtom+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "jmp - <NtQueryInformationAtom+>;movl (%eax), %ecx;jmp - <ObReferenceObjectByName+>;movb $, (%eax);jmp - <ObReferenceObjectByName+>": 1,
                "orl $-, -(%ebp);jmp - <ObReferenceObjectByName+>;cmpl $, (%esi);jne  <IoCheckFunctionAccess+>;pushl $": 1,
                "popl %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);jmp - <IoOpenDeviceRegistryKey+>;movl $, %eax": 1,
                "movl $, %eax;jmp - <ObReferenceObjectByName+>;movl %eax, %ecx;jmp - <ObReferenceObjectByName+>;nop": 1,
                "movl $, %esi;jmp - <PsRestoreImpersonation+>;movl %eax, %esi;jmp - <PsRestoreImpersonation+>;jmp - <PsRestoreImpersonation+>": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, %eax;jmp - <PsRestoreImpersonation+>": 1,
                "movl $, %esi;jmp - <NtQuerySystemInformation+>;movl $, %eax;jmp - <NtQuerySystemInformation+>;jmp - <PsRestoreImpersonation+>": 1,
                "calll  <ExRaiseDatatypeMisalignment>;jmp - <PsRestoreImpersonation+>;movl %ebx, (%eax);jmp - <PsRestoreImpersonation+>;movl %ebx, (%ecx)": 1,
                "movl (%ebp), %esi;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);jmp - <PsRestoreImpersonation+>;movl $, %eax": 1,
                "movl -(%ebp), %eax;jmp  <IoCheckFunctionAccess+>;movl $, %eax;jmp - <CcUnpinDataForThread+>;movl $, %esi": 1,
                "movl %edi, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <IoCheckFunctionAccess+>": 1,
                "calll - <ObfDereferenceObject>;movl %ebx, %eax;jmp - <CcUnpinDataForThread+>;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl %esi, %ecx;calll *;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <IoCheckFunctionAccess+>": 1,
                "popl %edx;movl -(%ebp), %ecx;calll - <CcUnpinDataForThread+>;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "popl %edx;movl %ebx, %ecx;calll - <CcUnpinDataForThread+>;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl %eax, (%ecx);movl %esi, (%esi);movl %esi, (%esi);jmp - <CcUnpinDataForThread+>;movl (%esi), %eax": 1,
                "jmp - <PsRestoreImpersonation+>;andl %esi, ;movl %edi, %ecx;calll *;jmp - <PsRestoreImpersonation+>": 1,
                "movl (%ebp), %esi;jmp - <ObReferenceObjectByName+>;leal -(%edi), %esi;testb $, (%esi);jne  <IoCheckFunctionAccess+>": 1,
                "movw (%eax), %cx;andw $, %cx;cmpw $, %cx;jne  <IoCheckFunctionAccess+>;movl (%eax), %ecx": 1,
                "xorl %eax, %eax;pushl %eax;pushl $;pushl %eax;pushl -(%ebp)": 1,
                "incl %edx;movl %ecx, (%ecx);movl %ecx, (%ecx);calll - <CcUnpinDataForThread+>;jmp - <ObReferenceObjectByName+>": 1,
                "jmp - <ObReferenceObjectByName+>;movl %eax, (%esi);movl %eax, ;calll *;movl %ebx, %ecx": 1,
                "pushl $;leal (%esi), %eax;pushl %eax;leal (%ebx), %eax;pushl %eax": 2,
                "jmp - <RtlSubAuthoritySid+>;cmpl %eax, ;jne  <IoCheckFunctionAccess+>;movl $, (%ebp);jmp  <IoCheckFunctionAccess+>": 1,
                "calll - <RtlUpcaseUnicodeChar>;movw , %cx;cmpw %ax, %cx;je  <IoCheckFunctionAccess+>;cmpw $, %cx": 1,
                "testl %ebx, %ebx;je - <RtlSubAuthoritySid+>;leal (%ebx), %edi;movl %edi, (%ebx);movw (%esi), %ax": 1,
                "je  <IoCheckFunctionAccess+>;testl %edi, (%esi);jne  <IoCheckFunctionAccess+>;leal (%esi), %eax;pushl %eax": 1,
                "pushl $;calll - <KeBugCheckEx>;calll - <KeSaveStateForHibernate+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "calll - <KeBugCheckEx>;int;movl $, %eax;jmp - <PsSetProcessWindowStation+>;movl $, %eax": 1,
                "pushl %edi;pushl %ebx;calll - <ExFreePoolWithTag>;movl %esi, %eax;jmp - <PsSetProcessWindowStation+>": 1,
                "je  <IoCheckFunctionAccess+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>;cmpw $, ": 1,
                "ja - <IoCheckFunctionAccess+>;jmp - <CcUnpinData+>;pushl %edi;movl $, %edi;movl %edi, %ecx": 1,
                "pushl %edi;movl $, %edi;movl %edi, %ecx;calll *;movl $, %edx": 1,
                "jmp - <NtAllocateVirtualMemory+>;cmpl $, (%ebp);je - <NtAllocateVirtualMemory+>;movl $, %eax;jmp - <NtAllocateVirtualMemory+>": 1,
                "jmp - <NtQuerySecurityObject+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl %ebx": 1,
                "testb %al, %al;je - <IoCheckFunctionAccess+>;movl $, -(%ebp);jmp - <NtAllocateVirtualMemory+>;movl (%ebx), %eax": 1,
                "calll - <ExReleaseFastMutexUnsafe>;cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;cmpl $, -(%ebp);jne - <IoCheckFunctionAccess+>": 1,
                "cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;cmpl $, -(%ebp);jne - <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jmp - <NtAllocateVirtualMemory+>;cmpl $, (%esi);je  <IoCheckFunctionAccess+>;calll  <PsIsThreadImpersonating+>": 1,
                "jmp - <NtAllocateVirtualMemory+>;movb $, (%esi);leal (%esi), %ecx;calll - <ExReleaseFastMutexUnsafe>;jmp - <NtQuerySecurityObject+>": 1,
                "cmpl %eax, %edx;jbe - <NtFreeVirtualMemory+>;movl $, -(%ebp);jmp - <NtDeleteAtom+>;orb $, (%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;calll  <MmUnmapViewInSystemSpace+>;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl -(%ebp);jmp  <IoCheckFunctionAccess+>;pushl $;pushl $;pushl $": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;pushl -(%ebp);jmp  <IoCheckFunctionAccess+>": 1,
                "jmp - <FsRtlNotifyVolumeEvent+>;movb $, (%esi);leal (%esi), %ecx;calll - <ExReleaseFastMutexUnsafe>;jmp - <FsRtlNotifyVolumeEvent+>": 1,
                "calll - <PsReturnProcessNonPagedPoolQuota>;jmp - <NtDeleteAtom+>;pushl %ebx;pushl -(%ebp);pushl %esi": 1,
                "testb $-, (%eax);je - <NtAllocateVirtualMemory+>;testb $, (%ebp);je - <NtAllocateVirtualMemory+>;movl -(%ebp), %eax": 1,
                "cmpw $, %ax;jne  <IoCheckFunctionAccess+>;movl $, %eax;jmp - <RtlRemoveUnicodePrefix+>;movb (%ebx), %al": 1,
                "je  <IoCheckFunctionAccess+>;movw (%ebx), %cx;cmpw (%ebx), %cx;je  <IoCheckFunctionAccess+>;cmpb $, %al": 1,
                "popl %ecx;movl $, %edi;leal (%eax), %esi;xorl %edx, %edx;rep  cmpsw %es:(%edi), (%esi)": 1,
                "shll $, %ecx;leal (%ecx,%eax), %esi;leal (%eax), %ecx;cmpl %ecx, %esi;movl %esi, (%ebp)": 1,
                "cmpw $, %cx;je  <IoCheckFunctionAccess+>;cmpw $, %cx;je  <IoCheckFunctionAccess+>;cmpw $, %cx": 1,
                "popl %ecx;movl $, %edi;leal (%edx,%ebx), %esi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi)": 1,
                "subl %esp, (%eax);pushl %edx;popal;je  <IoCheckFunctionAccess+>;outsl (%esi), %dx": 1,
                "jmp - <SeCreateClientSecurity+>;movl $, %eax;jmp - <SeCreateClientSecurity+>;pushl %edi;pushl %ebx": 1,
                "jl - <SeCreateClientSecurity+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movb $, %cl;calll - <_allshr>": 1,
                "pushl %eax;pushl (%ebp);rep  movsl (%esi), %es:(%edi);calll - <MmMapMemoryDumpMdl+>;cmpl $, %eax": 1,
                "cmpl $, %eax;jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%ebp), %edx;addl $, %eax": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;addl $, %eax;pushl $;movl %eax, %edi": 1,
                "jmp - <ProbeForWrite+>;testl %ebx, %ebx;je  <IoCheckFunctionAccess+>;negl %edi;movl %edi, (%ebp)": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);jmp  <IoCheckFunctionAccess+>;pushl %eax;pushl %esi": 1,
                "movl $, %eax;jmp - <ProbeForWrite+>;movl %ecx, (%eax);jmp - <NtQueryInformationToken+>;nop": 1,
                "pushl %eax;pushl $;pushl %edi;calll - <KeWaitForSingleObject>;movl -(%ebp), %ebx": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl $;pushl -(%ebp)": 2,
                "jge  <IoCheckFunctionAccess+>;cmpl $, -(%ebp);je - <ObReferenceObjectByName+>;cmpl $, -(%ebp);je - <ObReferenceObjectByName+>": 1,
                "cmpl %edi, %ecx;je  <IoCheckFunctionAccess+>;movl (%ebx), %eax;andl $, %eax;addl $, %eax": 1,
                "pushl %eax;leal -(%ebp), %ecx;pushl %ecx;addl $, %eax;pushl %eax": 1,
                "addl -(%ebp), %edi;movl %eax, -(%ebp);calll - <IoPageRead>;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);calll - <IoPageRead>;cmpl $, %eax;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll  <ExRaiseHardError+>": 1,
                "testl %eax, %eax;jl - <RtlRemoveUnicodePrefix+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movb $, %cl": 1,
                "movl %eax, -(%ebp);xorl %eax, %eax;incl %eax;movl %eax, (%ebp);jmp - <RtlRemoveUnicodePrefix+>": 1,
                "testl %eax, %eax;jne - <FsRtlNotifyInitializeSync+>;cmpl %eax, -(%ebp);jne - <FsRtlNotifyInitializeSync+>;pushl %eax": 1,
                "jmp - <NtCreateSection+>;movl %ebx, (%eax);jmp - <NtCreateSection+>;movl %ebx, (%ecx);jmp - <NtCreateSection+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%edx), %ecx;movzwl (%ecx), %esi;shrl %esi": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <IoCreateFile>;movl %eax, %edi": 1,
                "cmpl %ebx, %edi;jl - <IoQueryVolumeInformation+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ecx, (%edx);je  <IoCheckFunctionAccess+>;incl -(%ebp);cmpl %eax, -(%ebp);jae  <IoCheckFunctionAccess+>": 1,
                "cmpl %eax, (%esi);jae  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl %ebx, -(%ebp);subl (%esi), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <MmMapMemoryDumpMdl+>;movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);jmp - <RtlPrefixUnicodeString+>;movl $, %esi;jmp  <IoCheckFunctionAccess+>;addl $, %ebx": 1,
                "shll $, %eax;movl %eax, (%ebp);jmp - <RtlPrefixUnicodeString+>;movl -(%ebp), %ecx;calll *": 1,
                "pushl %eax;pushl %esi;pushl -(%ebp);pushl (%ebp);calll - <MmMapLockedPagesSpecifyCache+>": 1,
                "pushl -(%ebp);pushl (%ebp);calll - <MmMapLockedPagesSpecifyCache+>;movl %eax, %esi;jmp - <RtlPrefixUnicodeString+>": 1,
                "movl (%ebp), %esi;movl -(%ebp), %ecx;movb %al, (%esi);calll - <ExReleaseFastMutexUnsafe>;leal (%esi), %ecx": 1,
                "movb %al, (%esi);calll - <ExReleaseFastMutexUnsafe>;leal (%esi), %ecx;calll *;cmpl $, -(%ebp)": 1,
                "pushl -(%ebp);calll - <FsRtlFastCheckLockForWrite+>;movl $, %eax;jmp - <RtlPrefixUnicodeString+>;leal -(%ebp), %eax": 1,
                "movl $, %eax;jmp - <RtlPrefixUnicodeString+>;leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>": 1,
                "xorl %esi, %esi;jmp - <IoReportResourceUsage+>;movw %cx, %si;movl (%ebp), %ecx;subw (%ecx), %si": 1,
                "nop;movl -(%ebp), %esp;movl $, -(%ebp);orl $-, -(%ebp);xorl %esi, %esi": 1,
                "movl -(%ebp), %esp;movl $, -(%ebp);orl $-, -(%ebp);xorl %esi, %esi;jmp - <RtlSubAuthoritySid+>": 1,
                "pushl %esi;pushl %edi;pushl %ebx;calll - <MISYSPTE+>;movl $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;pushl %esi;pushl $;pushl ;movl -(%ebp), %eax": 2,
                "pushl ;movl -(%ebp), %eax;movl %eax, %ecx;andl $, %ecx;negl %ecx": 3,
                "movl $, %ecx;xaddl %eax, (%ecx);movl -(%ebp), %eax;jmp - <RtlSubAuthoritySid+>;cmpl %esi, (%ebp)": 1,
                "calll - <RtlFindClearBitsAndSet+>;jmp - <RtlSubAuthoritySid+>;movl , %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "cmpl %edi, (%ebp);je  <IoCheckFunctionAccess+>;pushl %edi;pushl $;pushl ": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl %edx, -(%ebp);movl -(%ebp), %eax;movl $, %ecx": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <MmMapMemoryDumpMdl+>;pushl %edi;pushl -(%ebp)": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);jmp - <RtlSubAuthoritySid+>": 1,
                "pushl %esi;movl $, (%esi);calll  <MmProbeAndLockProcessPages+>;cmpl $, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "pushl %esi;pushl %esi;calll - <KeDelayExecutionThread>;jmp - <MmGetSystemRoutineAddress+>;movb $, %cl": 1,
                "jmp - <RtlSubAuthoritySid+>;movl $, %edi;jmp  <IoCheckFunctionAccess+>;movl $, %edi;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "cmpb $, ;jne - <RtlSubAuthoritySid+>;pushl $;pushl $;pushl $": 1,
                "jl - <RtlSubAuthoritySid+>;pushl (%ebp);pushl $;calll - <DbgPrint>;popl %ecx": 1,
                "orl $-, -(%ebp);jmp - <RtlSubAuthoritySid+>;cmpl , %eax;jb  <IoCheckFunctionAccess+>;cmpl , %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl $, -(%ebp);incw (%edi);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %esi, %ebx;jne - <RtlSubAuthoritySid+>;movl $, -(%ebp);jmp - <RtlSubAuthoritySid+>;andw %ax, (%ebx)": 1,
                "jne - <RtlSubAuthoritySid+>;movl $, -(%ebp);jmp - <RtlSubAuthoritySid+>;andw %ax, (%ebx);andw %ax, (%ebx)": 1,
                "cmpl %esi, -(%ebp);jne - <RtlSubAuthoritySid+>;pushl %esi;pushl %ebx;calll - <wcsrchr+>": 1,
                "calll - <ExFreePoolWithTag>;xorl %ebx, %ebx;jmp - <RtlSubAuthoritySid+>;movl $, -(%ebp);movl (%ebx), %eax": 1,
                "pushl %esi;pushl (%ebp);calll  <PsRemoveLoadImageNotifyRoutine+>;jmp - <RtlSubAuthoritySid+>;leal -(%ebp), %eax": 1,
                "pushl %ebx;calll - <RtlCreateRegistryKey+>;jmp - <RtlSubAuthoritySid+>;pushl %esi;pushl %esi": 1,
                "calll - <RtlCreateRegistryKey+>;jmp - <RtlSubAuthoritySid+>;pushl %esi;pushl %esi;pushl $": 1,
                "pushl $;calll - <KeReleaseMutant>;movl -(%ebp), %eax;incl (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "testl $, %eax;je  <IoCheckFunctionAccess+>;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movzwl %ax, %ecx": 1,
                "testl %eax, %eax;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movzwl %ax, %ecx;leal (%edi,%ecx), %edi": 1,
                "calll - <IoFreeErrorLogEntry+>;cmpl %esi, %eax;je  <IoCheckFunctionAccess+>;movl $, (%eax);movl -(%ebp), %ecx": 1,
                "movl $, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, -(%ebp);cmpl %esi, -(%ebp);jbe  <IoCheckFunctionAccess+>;movl %ecx, %esi;shll $, %esi": 1,
                "cmpl %esi, -(%ebp);jbe  <IoCheckFunctionAccess+>;movl %ecx, %esi;shll $, %esi;movzwl -(%ebp,%esi), %ecx": 1,
                "calll - <IoWriteErrorLogEntry>;xorl %esi, %esi;testb $, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %esi": 1,
                "calll - <RtlFreeUnicodeString>;movl -(%ebp), %edi;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "insl %dx, %es:(%edi);andb %ch, (%ebx);orb (%eax), %al;addb %ah, ;addb %ah, (%ecx)": 1,
                "calll - <ExFreePoolWithTag>;movl %esi, %eax;jmp - <RtlSubAuthoritySid+>;movl $, %esi;jmp - <IoCheckFunctionAccess+>": 1,
                "jmp - <RtlSubAuthoritySid+>;movl $, %esi;jmp - <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll  <ExRaiseDatatypeMisalignment>;movl -(%ebp), %eax;jmp - <PsSetProcessWindowStation+>;movl %ebx, (%ecx);jmp - <PsSetProcessWindowStation+>": 1,
                "incl %eax;movb , %cl;shll %cl, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "incb ;movb , %al;cmpb , %al;jl  <IoCheckFunctionAccess+>;movb %bl, ": 1,
                "jmp - <IoCheckFunctionAccess+>;jmp - <PsSetProcessWindowStation+>;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp - <PsSetProcessWindowStation+>": 1,
                "jmp - <PsSetProcessPriorityByClass+>;pushl %edi;calll - <KeAttachProcess>;pushl %ebx;pushl %esi": 1,
                "movl %esi, %ecx;calll *;pushl %ebx;calll - <RtlFindClearBits+>;movl %esi, %ecx": 1,
                "movl %esi, %ecx;movl %eax, %ebx;calll *;jmp  <IoCheckFunctionAccess+>;movl $, %ebx": 1,
                "testl %esi, %esi;je  <IoCheckFunctionAccess+>;andl $, (%esi);leal (%esi), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %esi;pushl %ecx;calll - <PsGetProcessJob+>;movl , %eax": 1,
                "movl $, %ecx;andl %ecx, %eax;cmpl %ecx, %eax;je - <RtlxUnicodeStringToOemSize+>;jmp - <NtAllocateVirtualMemory+>": 1,
                "movl %edx, (%esi);jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl %eax, (%esi);jmp - <RtlCreateHeap+>": 1,
                "movl %eax, (%esi);jmp - <RtlCreateHeap+>;andl $, (%ebp);movl %edi, %ecx;movl %edx, %edi": 1,
                "rep  stosb %al, %es:(%edi);leal -(%ebx), %eax;movl %ebx, (%esi);movl %eax, (%esi);jbe  <IoCheckFunctionAccess+>": 1,
                "cmpl $, %edi;jne - <RtlSetGroupSecurityDescriptor+>;pushl %edx;pushl %edx;pushl $": 1,
                "pushl (%esi);calll - <ExFreePoolWithTag>;movl %ebx, (%esi);xorl %eax, %eax;jmp - <MmIsVerifierEnabled+>": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;andl %edi, %eax;subl %eax, %ecx;cmpl -(%ebp), %ecx": 1,
                "jmp - <RtlUnicodeStringToAnsiString+>;pushl (%ebp);calll - <FsRtlRemoveLargeMcbEntry+>;jmp  <IoCheckFunctionAccess+>;movl (%esi), %eax": 1,
                "testb $, %al;jne  <IoCheckFunctionAccess+>;testb $, %ah;je  <IoCheckFunctionAccess+>;andl $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;andl $, %eax;cmpl $, %eax;je  <IoCheckFunctionAccess+>;pushl %edx": 1,
                "movl %eax, (%ebp);jge  <IoCheckFunctionAccess+>;movl (%ebp), %eax;testb $, (%eax);jne  <IoCheckFunctionAccess+>": 1,
                "shll $, %eax;orl $, %eax;pushl %ebx;pushl %eax;movl (%esi), %eax": 1,
                "pushl %ebx;calll - <PsGetProcessJob+>;movl %edi, %ecx;movb $, (%ebx);calll - <ExReleaseFastMutexUnsafe>": 1,
                "je - <RtlUnicodeStringToAnsiString+>;movl %edx, -(%ebp);movl %edx, -(%ebp);leal -(%ebp), %edx;pushl %edx": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl %eax;movl (%ecx), %eax;addl $, %eax": 1,
                "movl $, %eax;jmp - <CcCopyRead+>;movl $, %esi;jmp  <IoCheckFunctionAccess+>;movl %eax, %esi": 1,
                "cmpl $, (%eax);je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl -(%ebp);calll - <MmForceSectionClosed+>": 3,
                "orl $-, %eax;shrl %cl, %eax;cmpl %eax, %ebx;jbe - <CcCopyRead+>;movl (%ebp), %eax": 1,
                "jbe - <CcCopyRead+>;movl (%ebp), %eax;cmpl $, (%eax);je  <IoCheckFunctionAccess+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <MmForceSectionClosed+>;movl $, %esi;pushl (%ebp)": 1,
                "movb $-, (%ebp);jmp - <RtlCreateHeap+>;pushl -(%ebp);calll - <MmIsNonPagedSystemAddressValid+>;jmp - <RtlCreateHeap+>": 1,
                "jmp - <MmMapViewOfSection+>;jmp - <MmMapViewOfSection+>;movl $, %eax;jmp - <MmMapViewInSessionSpace+>;movl $, %eax": 1,
                "jmp - <NtMapViewOfSection+>;movl %edx, (%eax);jmp - <NtMapViewOfSection+>;movl %edx, (%eax);jmp - <NtMapViewOfSection+>": 1,
                "movl %edx, (%eax);jmp - <NtMapViewOfSection+>;movb $, (%eax);jmp - <NtMapViewOfSection+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "calll  <ExRaiseDatatypeMisalignment>;jmp - <NtMapViewOfSection+>;movl $, %eax;jmp - <NtMapViewOfSection+>;movl $, %eax": 1,
                "addl -(%ebp), %edx;adcl -(%ebp), %ecx;cmpl %esi, %ecx;jb  <IoCheckFunctionAccess+>;ja  <IoCheckFunctionAccess+>": 1,
                "pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;xorl %ebx, %ebx;jmp - <IoGetDeviceProperty+>": 1,
                "jmp - <IoGetDeviceProperty+>;pushl %ecx;pushl %ecx;pushl %esi;movl %eax, (%edi)": 1,
                "calll - <KeSetEvent>;jmp - <IoGetDeviceProperty+>;movl $, %eax;jmp - <MmPrefetchPages+>;jmp - <IoGetDeviceProperty+>": 1,
                "movl $, %eax;jmp - <MmPrefetchPages+>;jmp - <IoGetDeviceProperty+>;jmp - <IoGetDeviceProperty+>;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;movl (%ebp), %ebx;movl -(%ebp), %eax;leal (%eax,%ebx,), %ebx;movl (%ebx), %eax": 1,
                "jae  <IoCheckFunctionAccess+>;movl $, ;pushl %ebx;pushl %edi;xorl %edi, %edi": 1,
                "pushl %ebx;pushl %edi;xorl %edi, %edi;pushl %edi;movl %esi, %eax": 1,
                "movl $, (%ebp);jmp - <CcCopyRead+>;cmpl $, (%ebp);jne - <CcCopyRead+>;leal (%esi), %ecx": 1,
                "movl (%eax), %eax;shrl $, %eax;andl $, %eax;jmp - <NtAdjustPrivilegesToken+>;movl %ebx, (%ecx)": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <SeTokenIsWriteRestricted+>;calll  <MmMapUserAddressesToPage+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %edi;movl -(%ebp), %esi;jmp - <NtFreeVirtualMemory+>;testb $-, (%eax)": 1,
                "je  <IoCheckFunctionAccess+>;movl $, -(%ebp);jmp - <SeTokenIsWriteRestricted+>;movl (%ebx), %edi;shll $, %edi": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;jmp - <RtlAddAtomToAtomTable+>;nop;nop": 1,
                "pushl %eax;calll - <KeUnstackDetachProcess>;jmp - <SeTokenIsWriteRestricted+>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "jmp - <RtlCreateHeap+>;ja  <IoCheckFunctionAccess+>;cmpl $, (%edi);jbe - <RtlGeneratedotName+>;movl $, %edi": 1,
                "calll - <ExReleaseResourceLite>;incl (%esi);jne - <RtlUnicodeToMultiByteSize+>;leal (%esi), %eax;cmpl %eax, (%eax)": 1,
                "calll *;jmp - <RtlUnicodeToMultiByteSize+>;movl $, %ecx;calll - <ExReleaseResourceLite>;incl (%esi)": 1,
                "je  <IoCheckFunctionAccess+>;movb $, %cl;movb $, (%esi);calll *;movl (%ebp), %eax": 2,
                "cmpl %esi, -(%ebp);jne  <IoCheckFunctionAccess+>;pushl -(%ebp);calll - <MmUnlockPages>;movl $, %eax": 1,
                "movl -(%ebp), %eax;jmp - <IoCheckFunctionAccess+>;pushl $;pushl %edi;pushl $": 1,
                "jne  <IoCheckFunctionAccess+>;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <RtlAnsiCharToUnicodeChar+>;movl (%ebp), %ecx": 1,
                "subl (%ebp), %ecx;movl %ecx, (%eax);orl $-, -(%ebp);movl $, %eax;jmp - <RtlAnsiCharToUnicodeChar+>": 1,
                "nop;nop;movl -(%ebp), %esp;jmp - <RtlRandom+>;movl $, (%eax)": 1,
                "movl $, (%eax);jmp - <IoOpenDeviceRegistryKey+>;nop;nop;nop": 1,
                "movl %eax, ;jmp - <IoOpenDeviceRegistryKey+>;movl $, %eax;jmp - <IoInitializeCrashDump+>;movl $, %eax": 1,
                "invlpg (%eax);movl , %eax;decl (%eax);movl , %eax;addl $, %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl %esi, %edi;shrl $, %edi;andl $, %edi;subl $, %edi": 1,
                "calll - <NtAllocateVirtualMemory+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;decl %ebx;addl $, %esi": 1,
                "shll $, %esi;jmp - <IoCheckFunctionAccess+>;movl %ebx, %eax;jmp - <IoOpenDeviceInterfaceRegistryKey+>;addl $, %edi": 1,
                "addl $, %edi;movl %edi, %esi;shll $, %esi;cmpl -(%ebp), %esi;jbe - <IoOpenDeviceInterfaceRegistryKey+>": 1,
                "jmp - <IoOpenDeviceInterfaceRegistryKey+>;orl $-, (%ebp);jmp - <NtSetEvent+>;movl (%edi), %eax;pushl %ebx": 1,
                "pushl $;pushl %eax;leal -(%ebp), %ebx;movl %esi, -(%ebp);calll - <RtlFindSetBits>": 1,
                "leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %eax;orl $, (%eax);movl %esi, (%ebx);addl $, %ebx": 1,
                "orl $, (%eax);movl %esi, (%ebx);addl $, %ebx;incl -(%ebp);cmpl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movw $, -(%ebp)": 2,
                "cmpl -(%ebp), %esi;jae - <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <IoCheckFunctionAccess+>": 1,
                "jae - <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <IoCheckFunctionAccess+>;xorl %eax, %eax": 1,
                "movl %esi, (%eax);je  <IoCheckFunctionAccess+>;negl %ebx;movl %ebx, (%ebp);movl (%ebp), %eax": 1,
                "nop;movl -(%ebp), %esp;orl $-, -(%ebp);xorl %ebx, %ebx;jmp - <RtlDeleteAtomFromAtomTable+>": 1,
                "pushl %eax;pushl %esi;calll - <KeStackAttachProcess>;movl $, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "andl $, %eax;subl $, %eax;movl (%eax), %eax;shrl $, %eax;leal (%eax,%eax,), %eax": 2,
                "testb $, (%ecx,%eax,);je  <IoCheckFunctionAccess+>;movl $, -(%ebp);cmpl $, -(%ebp);je - <IoOpenDeviceRegistryKey+>": 1,
                "je - <IoOpenDeviceRegistryKey+>;movl $, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;movl $, %edi;jmp  <IoCheckFunctionAccess+>": 1,
                "leal (%ebx), %ecx;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%ebx);andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "orl $-, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;leal (%ecx,%edx,), %ecx;orl $, (%ecx);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "jmp - <NtFreeVirtualMemory+>;jmp - <NtFreeVirtualMemory+>;movl %ebx, %edx;shrl $, %edx;andl $, %edx": 1,
                "je  <IoCheckFunctionAccess+>;movl %edi, %eax;negl %eax;pushl %eax;calll - <NtFindAtom+>": 1,
                "cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;incl -(%ebp);xorl %edi, %edi;movl %edi, -(%ebp)": 1,
                "cmpl %edi, -(%ebp);je - <NtFreeVirtualMemory+>;jmp - <IoCheckFunctionAccess+>;jmp - <NtFreeVirtualMemory+>;jmp - <NtFreeVirtualMemory+>": 1,
                "jmp - <NtFreeVirtualMemory+>;jmp - <NtFreeVirtualMemory+>;leal (%esi), %eax;pushl %eax;pushl %edi": 1,
                "je  <IoCheckFunctionAccess+>;xorl %edi, %edi;incl %edi;movl %edi, -(%ebp);leal (%esi), %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;andl $, -(%ebp);jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %ebx;orl $-, -(%ebp)": 1,
                "movl -(%ebp), %ebx;orl $-, -(%ebp);cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;leal (%esi), %ecx": 1,
                "jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %edx;movl %ebx, %ecx;calll - <KeInsertHeadQueue+>;jmp - <PsLookupProcessByProcessId+>": 1,
                "movl %ebx, %ecx;calll - <KeInsertHeadQueue+>;jmp - <PsLookupProcessByProcessId+>;jmp - <PsLookupProcessByProcessId+>;movl $, %ecx": 1,
                "pushl %eax;calll - <KeSetKernelStackSwapEnable+>;jmp - <NtAdjustPrivilegesToken+>;movl %edi, %ecx;shll $, %ecx": 1,
                "calll - <FsRtlRemoveLargeMcbEntry+>;xorl %ebx, %ebx;movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <RtlUnicodeStringToAnsiString+>;movl %edi, %edx;shrl $, %edx;movl %esi, %ecx;calll - <KeInsertHeadQueue+>": 1,
                "jmp - <NtOpenProcessTokenEx+>;movl %esi, (%eax);jmp - <NtOpenProcessTokenEx+>;nop;nop": 1,
                "pushl %esi;pushl (%ebp);pushl %edi;calll  <MmUnmapViewInSystemSpace+>;movl %eax, %ebx": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp - <NtOpenProcessTokenEx+>;nop;nop": 1,
                "pushl (%ebp);pushl %edi;pushl %esi;calll - <ObQueryNameString>;movl %eax, %edi": 1,
                "calll - <ObfDereferenceObject>;movl (%ebp), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <IoCheckFunctionAccess+>": 1,
                "pushl $;popl %edx;movl %edx, (%edi);movl %eax, %ecx;andl %ebx, %ecx": 1,
                "movl (%ebp), %eax;jae  <IoCheckFunctionAccess+>;movl %edx, (%eax);jmp - <NtAdjustPrivilegesToken+>;jmp - <IoCheckFunctionAccess+>": 1,
                "jmp - <IoOpenDeviceInterfaceRegistryKey+>;movl $, %eax;jmp - <RtlCreateRegistryKey+>;xorl %eax, %eax;jmp - <RtlCreateRegistryKey+>": 1,
                "xorl %eax, %eax;jmp - <RtlCreateRegistryKey+>;leal (%esi), %eax;jmp - <RtlCreateRegistryKey+>;movl $, %eax": 1,
                "calll *;movl $, %ebx;movl -(%ebp), %esi;movl , %eax;negl %esi": 1,
                "jmp - <RtlCreateRegistryKey+>;incl ;movl $, %eax;jmp - <RtlCreateRegistryKey+>;incl (%ecx)": 1,
                "pushl (%edi);calll - <RtlCreateRegistryKey+>;cmpl $, %eax;jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);jmp - <RtlCreateRegistryKey+>;pushl %esi;calll - <IoOpenDeviceInterfaceRegistryKey+>": 1,
                "xorl %eax, %eax;movw (%edi), %ax;pushl %eax;calll  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %edx": 1,
                "movl (%ebp), %ebx;jmp - <ObReferenceObjectByHandle+>;jmp - <IoCreateStreamFileObjectLite+>;pushl $;pushl (%ebp)": 1,
                "je - <NtWriteFile+>;testl %ecx, %ecx;je - <NtWriteFile+>;cmpb $, (%ebp);je - <NtWriteFile+>": 1,
                "jmp - <NtWriteFile+>;pushl $;pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;jmp - <NtWriteFile+>": 1,
                "pushl %edi;pushl -(%ebp);calll - <ObReferenceObjectByHandle+>;jmp  <IoCheckFunctionAccess+>;movl $, %ebx": 1,
                "pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;jmp - <NtQueryInformationFile+>;movl $, (%ebp);jmp - <ObOpenObjectByName+>": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %ebx;addl $, %ebx;movl (%ebx), %edi;andl $-, %edi": 1,
                "andl $-, %edi;leal -(%edi), %eax;andl $-, %eax;movl %ebx, (%ebp);movl %edi, (%ebp)": 2,
                "subl %eax, %edi;subl $, %edi;je  <IoCheckFunctionAccess+>;leal (%edi), %eax;movl %eax, (%ebp)": 6,
                "jmp - <ObDereferenceSecurityDescriptor+>;movl (%edi), %eax;cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "cmpl %ebx, %eax;je - <SeDeleteAccessState+>;pushl %eax;movl %ebx, (%esi);calll - <CcUninitializeCacheMap+>": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle+>;movl $, %eax;jmp - <RtlAddAtomToAtomTable+>;cmpb $, (%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;pushl %edi;pushl (%ebp);calll - <ObReferenceObjectByHandle+>;movl %fs:, %eax": 1,
                "cmpb $, (%eax);je  <IoCheckFunctionAccess+>;testb $, (%ecx);jne  <IoCheckFunctionAccess+>;cmpb $, (%ecx)": 1,
                "jne  <IoCheckFunctionAccess+>;testb $, ;jne  <IoCheckFunctionAccess+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "calll *;jmp - <RtlAreAnyAccessesGranted+>;leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;jmp - <RtlAreAnyAccessesGranted+>;testb $, ": 1,
                "pushl %eax;pushl $;calll - <KeBugCheckEx>;movb $, %cl;movb $, (%eax)": 1,
                "jmp - <ObMakeTemporaryObject+>;movl %ebx, %ecx;calll - <ExReleaseRundownProtection>;jmp - <NtDuplicateObject+>;jmp - <PsSetProcessWindowStation+>": 1,
                "jmp - <PsSetProcessWinProcess+>;movl $, %eax;jmp - <SeDeleteAccessState+>;xorl %eax, %eax;jmp - <IoSetDeviceInterfaceState+>": 1,
                "jmp - <SeDeleteAccessState+>;xorl %eax, %eax;jmp - <IoSetDeviceInterfaceState+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "movl $, -(%ebp);jmp - <ObReferenceObjectByHandle+>;movl $, -(%ebp);jmp - <ObReferenceObjectByHandle+>;movzbl (%edi), %eax": 1,
                "cmpl %edx, (%ebx);je - <ObReferenceObjectByHandle+>;movl $, -(%ebp);jmp - <ObReferenceObjectByHandle+>;xorl %eax, %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <SePrivilegeCheck>;movb %al, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %edi;calll  <MmUnmapViewInSystemSpace+>": 4,
                "movb $, %cl;calll *;jmp - <ObReferenceObjectByHandle+>;movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "xorl %edx, %edx;jmp - <NtQueryVolumeInformationFile+>;xorl %eax, %eax;jmp - <MmAllocateMappingAddress+>;leal -(%ebp), %eax": 1,
                "movb $, (%eax);movb $, %cl;calll *;jmp - <NtQueryVolumeInformationFile+>;movl (%ebp), %ebx": 1,
                "movl $, (%ebx);movl %fs:, %eax;incl (%eax);jne  <IoCheckFunctionAccess+>;leal (%eax), %ecx": 2,
                "calll - <KeUnstackDetachProcess>;jmp - <ProbeForWrite+>;movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "movl %eax, %esi;pushl (%ebp);decl (%esi);calll - <RtlAreAllAccessesGranted+>;testl %eax, %eax": 1,
                "movl (%eax), %eax;andl $-, %eax;cmpl -(%ebp), %eax;jne  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl (%ebp);pushl (%ebp);calll  <ExReleaseRundownProtectionEx+>;pushl (%ebp);pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;movl (%ebp), %eax;jmp - <NtQueryVolumeInformationFile+>": 1,
                "andw $, -(%ebp);jmp - <NtQueryVolumeInformationFile+>;movl , %eax;andl $-, -(%ebp);orl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;negl %eax;movl %eax, (%ebp)": 1,
                "cmpl %esi, %eax;jne - <NtQueryInformationToken+>;jmp - <NtQueryInformationToken+>;movl $, %eax;jmp - <NtQueryInformationToken+>": 1,
                "jmp - <NtQueryInformationToken+>;movl $, %ebx;jmp - <NtQueryInformationToken+>;cmpl , %esi;je - <NtQueryInformationToken+>": 1,
                "jmp - <NtQueryInformationToken+>;cmpl , %esi;je - <NtQueryInformationToken+>;andl $, -(%ebp);jmp - <NtQueryInformationToken+>": 1,
                "movl $, %esi;jmp - <NtQueryInformationToken+>;cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp)": 1,
                "pushl (%ebp);calll - <NtDuplicateObject+>;pushl (%ebp);calll - <NtDuplicateObject+>;movl -(%ebp), %esi": 1,
                "andl $-, %eax;cmpl -(%ebp), %eax;jne  <IoCheckFunctionAccess+>;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %ebx;calll  <ExReleaseRundownProtectionEx+>": 1,
                "jmp  <IoCheckFunctionAccess+>;xorl %eax, %eax;movl %eax, %ecx;calll - <mbtowc+>;testb %al, %al": 1,
                "calll *;pushl (%esi);calll - <ObMakeTemporaryObject>;movl (%esi), %ecx;calll - <ObfDereferenceObject>": 1,
                "nop;nop;movl -(%ebp), %esp;jmp - <RtlSubAuthoritySid+>;movl %ecx, (%eax)": 1,
                "jmp - <PAGE+>;movl $, %eax;jmp - <FsRtlNotifyVolumeEvent+>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "andl $, (%esi);pushl %eax;calll - <CcUninitializeCacheMap+>;jmp - <RtlEqualUnicodeString+>;movl -(%ebp), %edi": 1,
                "movl $, -(%ebp);jmp - <RtlEqualUnicodeString+>;pushl -(%ebp);pushl ;pushl ": 1,
                "jmp - <RtlEqualUnicodeString+>;pushl -(%ebp);pushl ;pushl ;calll - <SeSinglePrivilegeCheck>": 1,
                "testb %al, %al;jne - <NtQueryInformationToken+>;movl $, -(%ebp);jmp - <RtlEqualUnicodeString+>;xorl %ebx, %ebx": 1,
                "movb $, -(%ebp);jmp - <RtlEqualUnicodeString+>;jmp - <ObCreateObject+>;movl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "calll *;andl $, (%ebx);movb $, (%ebx);xorl %edi, %edi;jmp - <ObOpenObjectByName+>": 1,
                "movb $, (%ebx);xorl %edi, %edi;jmp - <ObOpenObjectByName+>;movl (%esi), %eax;cmpl %edi, %eax": 1,
                "calll - <SeDeassignSecurity>;jmp - <ObAssignSecurity+>;movl $, %ecx;testl %ecx, (%eax);jne - <PAGE+>": 1,
                "movl $, %ecx;testl %ecx, (%eax);jne - <PAGE+>;orl %ecx, (%eax);jmp - <PAGE+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <NtQuerySecurityObject+>;xorb %cl, %cl;jmp - <PsDereferencePrimaryToken+>": 1,
                "xorb %al, %al;jmp - <ObReferenceObjectByName+>;movl (%ebp), %ecx;movl %eax, (%ecx);xorb %al, %al": 1,
                "pushl (%ebp);addl $, %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "xorb %al, %al;jmp - <ObCheckCreateObjectAccess+>;pushl -(%ebp);pushl (%ebp);calll - <SeAppendPrivileges>": 1,
                "calll - <SeReleaseSecurityDescriptor>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, %eax;jmp - <NtSetSecurityObject+>": 1,
                "movl $, %eax;jmp - <NtSetSecurityObject+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "jmp - <RtlUpcaseUnicodeString+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax;jmp - <ProbeForWrite+>;movl $, %eax": 1,
                "cmpb $, -(%ebp);je - <ProbeForWrite+>;xorl %eax, %eax;movw (%esi), %ax;pushl %eax": 1,
                "xorl %eax, %eax;movw (%esi), %ax;pushl %eax;calll  <MmUnmapViewInSystemSpace+>;jmp - <ProbeForWrite+>": 1,
                "movl (%eax), %ecx;movw (%ecx), %ax;incl (%ecx);cmpw (%ecx), %ax;jb - <InterlockedPushEntrySList>": 2,
                "cmpw (%ecx), %ax;jb - <NtQueryInformationFile+>;incl (%ecx);pushl %edx;calll *(%ecx)": 1,
                "cmpl $, -(%ebp);je - <SeDeleteAccessState+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "jmp - <FsRtlOplockIsFastIoPossible+>;movl $, -(%ebp);jmp - <SeDeleteAccessState+>;nop;nop": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);orl $-, -(%ebp);movl (%ebp), %ebx": 2,
                "jb  <IoCheckFunctionAccess+>;incl (%ecx);movl (%eax), %ecx;movw (%ecx), %ax;incl (%ecx)": 1,
                "movl (%eax), %ecx;movw (%ecx), %ax;incl (%ecx);cmpw (%ecx), %ax;jb  <IoCheckFunctionAccess+>": 1,
                "incl (%ecx);cmpw (%ecx), %ax;jb  <IoCheckFunctionAccess+>;incl (%ecx);pushl %edi": 1,
                "jmp - <ObCreateObjectType+>;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %esi;addl $, %esi": 3,
                "andl $-, %edi;leal -(%edi), %eax;andl $-, %eax;movl %esi, (%ebp);movl %edi, -(%ebp)": 3,
                "movl %esi, %ecx;calll - <ExfReleasePushLock>;movl $, -(%ebp);movl %fs:, %eax;incl (%eax)": 3,
                "decl %eax;jne  <IoCheckFunctionAccess+>;movl (%edi), %eax;cmpl %esi, %eax;je  <IoCheckFunctionAccess+>": 1,
                "calll *;movl %ebx, -(%ebp);movb $, -(%ebp);movl -(%ebp), %edi;cmpl %ebx, %edi": 2,
                "calll - <CcUninitializeCacheMap+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %ebx, -(%ebp);pushl %ebx": 1,
                "cmpl %esi, %eax;je  <IoCheckFunctionAccess+>;movl %ebx, %ecx;calll - <ExfReleasePushLock>;movl $, -(%ebp)": 1,
                "jne - <IoCheckFunctionAccess+>;movl (%esi), %eax;xorl %edi, %edi;cmpl %edi, %eax;je  <IoCheckFunctionAccess+>": 1,
                "movw %di, (%esi);movw %di, (%esi);movl (%esi), %eax;cmpl %edi, %eax;je - <IoCheckFunctionAccess+>": 1,
                "movl (%esi), %eax;cmpl %edi, %eax;je - <IoCheckFunctionAccess+>;movl %edi, (%esi);jmp - <IoCheckFunctionAccess+>": 1,
                "jmp - <ObCreateObjectType+>;movb $, %cl;movb $, (%eax);calll *;jmp - <ObCreateObjectType+>": 1,
                "decl %eax;jne  <IoCheckFunctionAccess+>;movl (%esi), %eax;xorl %edi, %edi;cmpl %edi, %eax": 3,
                "movb $, %cl;movb $, (%edi);calll *;jmp - <RtlDeleteAtomFromAtomTable+>;movl %ebx, %ecx": 1,
                "jmp - <ObLogSecurityDescriptor+>;movl %ebx, %ecx;calll - <ExfReleasePushLock>;jmp - <ObLogSecurityDescriptor+>;movb $, %cl": 1,
                "calll - <ExFreePoolWithTag>;jmp - <ObLogSecurityDescriptor+>;movl %ebx, %ecx;calll - <ExfReleasePushLock>;jmp - <RtlDeleteAtomFromAtomTable+>": 1,
                "movl (%edi), %edi;andl $-, %edi;leal -(%edi), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);cmpl $, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx": 2,
                "je  <IoCheckFunctionAccess+>;testb $, ;je  <IoCheckFunctionAccess+>;xorl %eax, %eax;movw (%esi), %ax": 1,
                "xorl %eax, %eax;movw (%esi), %ax;pushl %eax;calll  <MmUnmapViewInSystemSpace+>;jmp  <IoCheckFunctionAccess+>": 1,
                "calll - <NtDuplicateObject+>;movl $, %eax;jmp - <PsSetProcessWindowStation+>;xorl %ecx, %ecx;movb (%edi), %cl": 1,
                "pushl $;pushl %ecx;pushl %eax;calll - <SeReleaseSecurityDescriptor>;movl %ebx, (%edi)": 2,
                "pushl %edi;calll *(%ecx);jmp - <NtQueryVolumeInformationFile+>;movl (%esi), %eax;addl $, %eax": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;je - <ObAssignSecurity+>;pushl %eax;movl %ebx, (%esi)": 1,
                "je - <ObInsertObject+>;pushl %eax;movl %ebx, (%esi);calll - <CcUninitializeCacheMap+>;jmp - <ObInsertObject+>": 1,
                "jmp - <ObInsertObject+>;cmpl $, %eax;jne - <ObCreateObject+>;xorl %eax, %eax;jmp - <ObCreateObject+>": 1,
                "movl %eax, -(%ebp);shrl %eax;movl (%edi), %ecx;cmpw $, -(%ecx,%eax,);jne  <IoCheckFunctionAccess+>": 1,
                "movzwl (%ebx), %edx;addl -(%ebp), %edx;leal (%edx,%eax,), %eax;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "subl %esi, %ecx;sarl %ecx;shll %ecx;leal (%eax,%ecx), %edx;movl %edx, -(%ebp)": 1,
                "leal (%eax,%ecx), %edx;movl %edx, -(%ebp);movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movw -(%ebp), %cx;movw %cx, (%esi);movl %edx, (%ebx);subl %eax, %edx;movzwl %dx, %ecx": 1,
                "movw %dx, (%eax);movzwl (%ecx), %ecx;movzwl (%ebx), %edx;addl %edx, %ecx;movw %cx, (%ebx)": 1,
                "movw (%ebx), %dx;leal (%edx,%ecx), %ecx;movw %cx, (%ebx);movzwl (%eax), %ecx;shrl %ecx": 1,
                "movl $, -(%ebp);jmp - <ObCreateObject+>;movl $, -(%ebp);jmp - <ObCreateObject+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "jmp - <ObFindHandleForObject+>;movl %ecx, (%eax);jmp - <ObReferenceObjectByName+>;nop;nop": 1,
                "jmp - <ObReferenceObjectByName+>;movb $, (%eax);movb $, %cl;calll *;jmp - <ObReferenceObjectByName+>": 1,
                "calll *;jmp - <ObReferenceObjectByName+>;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "jmp - <ObFindHandleForObject+>;movl -(%ebp), %edi;addl $, %edi;movl (%edi), %esi;andl $-, %esi": 1,
                "jmp - <ObFindHandleForObject+>;movl %eax, %esi;testl %eax, %eax;jmp - <IoWMIRegistrationControl+>;movl (%esi), %eax": 1,
                "movl (%eax), %esi;addl $, %esi;cmpl $, (%esi);je - <IoWMIRegistrationControl+>;movl %esi, %ecx": 1,
                "je  <IoCheckFunctionAccess+>;cmpl $, %eax;jne - <IoRegisterBootDriverReinitialization+>;jmp - <IoWMIRegistrationControl+>;pushl $": 1,
                "movl (%eax), %ecx;xorl %eax, %eax;incl %eax;decl %ecx;shll %cl, %eax": 1,
                "movl (%ebp), %eax;jne  <IoCheckFunctionAccess+>;movl (%eax), %ecx;xorl %eax, %eax;decl %ecx": 1,
                "movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp - <IoRegisterBootDriverReinitialization+>": 1,
                "je - <ObFindHandleForObject+>;pushl %eax;movl %edi, (%esi);calll - <CcUninitializeCacheMap+>;jmp - <ObFindHandleForObject+>": 1,
                "jmp - <ObFindHandleForObject+>;movl %eax, %edi;cmpl %ebx, %eax;jmp - <ObFindHandleForObject+>;movl (%esi), %edi": 1,
                "calll - <ExfReleasePushLock>;jmp - <ObQueryNameString+>;cmpw $, (%ebx);je - <ObQueryNameString+>;movb $, %al": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je - <ObQueryNameString+>;andl $, (%ebx);pushl %eax": 4,
                "movb $, -(%ebp);jmp - <ObQueryNameString+>;movl (%ebx), %esi;addl $, %esi;movl %esi, -(%ebp)": 2,
                "calll - <ExfReleasePushLock>;jmp - <ObQueryNameString+>;movl (%ebx), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 3,
                "jmp - <ObQueryNameString+>;movl %edi, -(%ebp);jmp - <ObQueryNameString+>;movl $, -(%ebp);jmp - <PsDereferencePrimaryToken+>": 1,
                "nop;nop;nop;movl -(%ebp), %ebx;jmp - <ObQueryNameString+>": 2,
                "calll - <ExFreePoolWithTag>;movl %edi, (%ebx);movw %di, (%ebx);movw %di, (%ebx);movl (%ebx), %eax": 2,
                "movl %eax, -(%ebp);jmp - <ObQueryNameString+>;pushl %esi;pushl -(%ebp);pushl %ecx": 1,
                "movl %esi, (%eax);jmp - <ObQueryNameString+>;nop;nop;nop": 1,
                "je  <IoCheckFunctionAccess+>;xorl %esi, %esi;pushl %esi;pushl %eax;calll - <ExFreePoolWithTag>": 3,
                "movl %eax, (%ecx);orl $-, -(%ebp);cmpl %eax, (%ebp);jae  <IoCheckFunctionAccess+>;cmpl %edx, %ebx": 1,
                "movl (%ebx), %eax;cmpl %edx, %eax;je  <IoCheckFunctionAccess+>;xorl %esi, %esi;pushl %esi": 2,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;andl $, (%ebx);pushl %eax;calll - <CcUninitializeCacheMap+>": 2,
                "addb %ch, %cs:(%esi);addb %ch, (%esi);addb %al, (%eax);addb %cl, %ah;int": 1,
                "movl $, -(%ebp);leal (%eax), %esi;movl %esi, -(%ebp);andl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "jl  <IoCheckFunctionAccess+>;movzwl (%esi), %eax;addl $, %eax;andl $-, %eax;leal (%esi,%eax), %esi": 1,
                "testl %ecx, %ecx;je - <IoCheckFunctionAccess+>;incl (%eax);incl -(%ebp);jmp - <IoCheckFunctionAccess+>": 1,
                "orl $, %eax;movl %eax, -(%ebp);testb $, %cl;je  <IoCheckFunctionAccess+>;orl $, -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;jmp  <IoCheckFunctionAccess+>;movzbl %al, %ecx;movl %esi, %eax": 1,
                "jmp  <IoCheckFunctionAccess+>;movzbl %al, %ecx;movl %esi, %eax;subl %ecx, %eax;testl %eax, %eax": 1,
                "movl %eax, -(%ebp);jmp  <IoCheckFunctionAccess+>;xorl %eax, %eax;leal -(%ebp), %edi;stosl %eax, %es:(%edi)": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %edi, %eax;je  <IoCheckFunctionAccess+>;movl %eax, %edi": 2,
                "calll - <ExfReleasePushLock>;jmp  <IoCheckFunctionAccess+>;xorl %esi, %esi;xorl %ebx, %ebx;cmpl %ebx, %esi": 1,
                "calll - <CcUninitializeCacheMap+>;jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %edi;leal -(%edi), %eax;movb (%eax), %cl": 1,
                "testl %esi, %esi;je  <IoCheckFunctionAccess+>;movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "jne - <IoCheckFunctionAccess+>;cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;xorl %edi, %edi;pushl %edi": 1,
                "movzwl (%eax), %eax;addl $, %eax;movl %eax, -(%ebp);testb $, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "testb $, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;addl $, %eax;cmpl $, (%eax)": 1,
                "pushl %edx;pushl (%ecx);pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll *(%ecx);jmp  <IoCheckFunctionAccess+>;andl $, -(%ebp);movl -(%ebp), %eax": 1,
                "nop;movl -(%ebp), %esp;jmp - <IoQueryFileInformation+>;nop;nop": 1,
                "nop;nop;movl -(%ebp), %esp;jmp - <IoQueryFileInformation+>;movl %ebx, %ecx": 1,
                "movl %ecx, (%esi);movb $, -(%ebp);jmp - <IoRegisterBootDriverReinitialization+>;movb -(%ebx), %al;addl $-, %ebx": 1,
                "movb $, -(%ebp);jmp - <IoRegisterBootDriverReinitialization+>;movb -(%ebx), %al;addl $-, %ebx;testb %al, %al": 1,
                "leal (%edi), %eax;movl (%eax), %esi;movl %eax, -(%ebp);testl %esi, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne - <IoRegisterBootDriverReinitialization+>": 1,
                "jne - <IoRegisterBootDriverReinitialization+>;movl (%edi), %eax;xorl %esi, %esi;cmpl %esi, %eax;je  <IoCheckFunctionAccess+>": 1,
                "pushl $;pushl (%ebp);calll - <ExFreePoolWithTag>;jmp - <IoRegisterBootDriverReinitialization+>;calll - <SeTokenType+>": 1,
                "calll - <ExFreePoolWithTag>;jmp - <IoRegisterBootDriverReinitialization+>;calll - <SeTokenType+>;jmp - <IoRegisterBootDriverReinitialization+>;testb $-, (%edi)": 1,
                "movl %esi, %ecx;calll - <ExfAcquirePushLockExclusive>;movl %esi, %ecx;calll - <ExfReleasePushLock>;jmp - <IoCheckFunctionAccess+>": 1,
                "movl (%edi), %esi;jmp - <NtQueryInformationToken+>;movl , %esi;jmp - <NtQueryInformationToken+>;movl %ebx, %ecx": 1,
                "movl $, %eax;jmp - <IoQueryDeviceDescription+>;movl %edi, %ecx;calll - <ObfDereferenceObject>;pushl $": 1,
                "pushl ;calll - <IoPageRead>;testl %eax, %eax;jl - <KeAddSystemServiceTable+>;pushl %ebx": 1,
                "addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx);addb %ah, (%di);jb  <IoCheckFunctionAccess+>": 2,
                "bound (%eax), %eax;addb %dh, %gs:(%edx);incl %ebx;addb %ch, (%edi);jo  <IoCheckFunctionAccess+>": 2,
                "jo  <IoCheckFunctionAccess+>;jns  <IoCheckFunctionAccess+>;incl %edx;addb %bh, (%ecx);je  <IoCheckFunctionAccess+>": 1,
                "addb %ch, (%edi);jne  <IoCheckFunctionAccess+>;outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %cl, (%eax);imull $, (%eax), %eax;jb  <IoCheckFunctionAccess+>;incl %esi;addb %ch, (%ecx)": 1,
                "calll - <IoOpenDeviceRegistryKey+>;pushl $;calll - <PoRequestPowerIrp+>;xorl %esi, %esi;popl %edi": 1,
                "cmpl %ebx, %esi;jl - <IoInitializeCrashDump+>;pushl (%ebp);calll  <IoAttachDevice+>;movb $, ": 1,
                "movl -(%ebp), %eax;movl %eax, ;jmp - <RtlSelfRelativeToAbsoluteSD+>;movb , %al;movb %al, (%edx)": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <RtlxUnicodeStringToOemSize+>;nop": 2,
                "cmpl %esi, ;movl %eax, -(%ebp);pushl %edi;movl %ebx, -(%ebp);jne - <IoForwardIrpSynchronously+>": 1,
                "setne %al;incl %eax;movl %eax, ;xorl %esi, %esi;jmp - <IoForwardIrpSynchronously+>": 1,
                "jmp - <IoForwardIrpSynchronously+>;pushl %eax;calll - <ExRaiseStatus>;jmp - <IoForwardIrpSynchronously+>;pushl %esi": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;movl %edi, %esi;jmp - <IoOpenDeviceRegistryKey+>;testb %bl, %bl;jne - <IoOpenDeviceRegistryKey+>": 1,
                "cmpb $, ;jne - <IoOpenDeviceRegistryKey+>;xorl %esi, %esi;incl %esi;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "jne - <RtlInitializeRangeList+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "jmp - <RtlInitializeRangeList+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp - <RtlInitializeRangeList+>;decl %eax": 1,
                "movl $, (%ebp);movl %ebx, ;jmp - <RtlInitializeRangeList+>;pushl $;pushl $": 1,
                "rep  stosl %eax, %es:(%edi);leal (%esi), %eax;pushl %eax;calll - <KeInitializeTimer>;pushl %esi": 1,
                "movl %esi, -(%ebp);movl $, (%ebp);calll - <ExfInterlockedInsertTailList>;movl -(%ebp), %esi;jmp - <RtlInitializeRangeList+>": 1,
                "movb %al, (%ebx);movb %al, (%ebx);movb %al, (%ebx);movb %al, (%ebx);jmp - <IoWMIRegistrationControl+>": 1,
                "movl $, (%ebx);jmp - <IoOpenDeviceRegistryKey+>;cmpb $, ;jne - <IoOpenDeviceRegistryKey+>;movl %edx, (%ebx)": 1,
                "movl %eax, (%ebx);jmp - <IoOpenDeviceRegistryKey+>;movl %eax, (%ebx);jmp - <IoOpenDeviceRegistryKey+>;pushl $": 1,
                "nop;nop;movl -(%ebp), %esp;orl $-, -(%ebp);movl $, %esi": 2,
                "orl $-, -(%ebp);movl $, %esi;xorl %edi, %edi;jmp - <IoOpenDeviceRegistryKey+>;leal -(%ebp), %eax": 2,
                "xorl %edx, %edx;popl %esi;divl %esi;pushl $;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);xorl %edi, %edi;jmp - <IoOpenDeviceRegistryKey+>;movl , %eax;xorl %ecx, %ecx": 1,
                "setne %cl;movl %eax, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "jmp - <NtAllocateUuids+>;jmp - <NtAllocateUuids+>;pushl %esi;pushl $;popl %eax": 1,
                "andl $, -(%ebp);movl $, -(%ebp);movl -, %esi;cmpl $-, %esi;jne  <IoCheckFunctionAccess+>": 1,
                "testb $, (%eax);je  <IoCheckFunctionAccess+>;calll - <PsGetCurrentProcessSessionId>;cmpl %eax, %esi;jne  <IoCheckFunctionAccess+>": 1,
                "calll - <PsGetJobUIRestrictionsClass+>;movl %eax, %esi;testl %esi, %esi;je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax": 1,
                "movb , %al;andb $, %al;movb %al, (%esi);movb $, (%esi);movl , %eax": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;jmp - <RtlUpcaseUnicodeStringToOemString+>;movl %esi, (%eax);jmp - <NtOpenProcess+>": 1,
                "movl %esi, (%eax);jmp - <NtOpenProcess+>;nop;nop;nop": 1,
                "jmp - <FsRtlOplockFsctrl+>;orl $, -(%ebp);jmp - <RtlNtStatusToDosError+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 2,
                "nop;movl -(%ebp), %eax;jmp  <IoCheckFunctionAccess+>;jmp - <NtOpenProcess+>;jmp - <NtOpenProcess+>": 1,
                "testl %eax, %eax;jl - <NtQueryInformationThread+>;pushl (%ebp);pushl %esi;pushl %edi": 1,
                "jmp - <NtQueryInformationThread+>;movl $, (%eax);jmp - <NtQueryInformationThread+>;nop;nop": 2,
                "movl $, %eax;jmp - <NtQueryInformationThread+>;movl %ebx, (%eax);jmp - <NtQueryInformationThread+>;nop": 1,
                "calll - <ObReferenceObjectByHandle>;movl %eax, %ebx;testl %ebx, %ebx;jge  <IoCheckFunctionAccess+>;movl %ebx, %eax": 1,
                "cmpb %al, (%ecx);setne %al;movl %eax, %esi;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;jmp - <IoCheckFunctionAccess+>;movl %ebx, %ecx;calll - <ExfAcquirePushLockShared>;jmp - <ObSetSecurityDescriptorInfo+>": 1,
                "movl $, %ebx;jmp - <ObSetSecurityDescriptorInfo+>;movl %edi, %ecx;calll - <ExfReleasePushLock>;jmp - <ObSetSecurityDescriptorInfo+>": 1,
                "jmp - <ObSetSecurityDescriptorInfo+>;movb $, (%ecx);movb $, %cl;calll *;jmp - <ObSetSecurityDescriptorInfo+>": 1,
                "movl %ebx, -(%ebp);testb $, %bl;je  <IoCheckFunctionAccess+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax": 2,
                "movl $, (%eax);testl %ebx, %ebx;je - <RtlUnicodeStringToAnsiString+>;andl $, -(%ebx,%edi,);jmp - <RtlUnicodeStringToAnsiString+>": 1,
                "jmp - <NtSetInformationThread+>;cmpl $, %ebx;jne - <IoCheckFunctionAccess+>;movl $, -(%ebp);movl (%esi), %esi": 1,
                "nop;movl -(%ebp), %esp;movl -(%ebp), %eax;orl $-, -(%ebp);jmp - <NtFindAtom+>": 1,
                "pushl %eax;movl %eax, -(%ebp);calll - <ExAcquireResourceSharedLite>;testb $, (%edi);je  <IoCheckFunctionAccess+>": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;calll - <ExReleaseResourceLite>;incl (%esi)": 1,
                "calll *;jmp - <RtlOemToUnicodeN+>;nop;nop;nop": 1,
                "cmpl %ecx, %ebx;jne  <IoCheckFunctionAccess+>;movl %ecx, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;jl - <NtSetInformationProcess+>;movl -(%ebp), %edi;leal (%edi), %ebx;movl %ebx, %ecx": 1,
                "jne - <IoCheckFunctionAccess+>;movl %ebx, %ecx;calll - <ExReleaseRundownProtection>;jmp  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "nop;movl -(%ebp), %eax;jmp - <IoCheckFunctionAccess+>;jmp - <NtSetInformationProcess+>;pushl $": 1,
                "jl - <NtSetInformationProcess+>;movl $, %edi;pushl %edi;movl -(%ebp), %ebx;pushl %ebx": 1,
                "pushl %edi;movl -(%ebp), %ebx;pushl %ebx;calll - <PsChargeProcessNonPagedPoolQuota>;movl %eax, %esi": 1,
                "movl %esi, -(%ebp);testl %esi, %esi;jne  <IoCheckFunctionAccess+>;movl $, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %esi;testb %bl, %bl;je  <IoCheckFunctionAccess+>;orl $, (%esi);jmp  <IoCheckFunctionAccess+>": 1,
                "movl %edi, -(%ebp);movl %edx, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "testb %al, %al;jne  <IoCheckFunctionAccess+>;movl $, -(%ebp);jmp  <IoCheckFunctionAccess+>;decl (%esi)": 1,
                "je  <IoCheckFunctionAccess+>;movzbl %cl, %eax;movl %eax, -(%ebp);pushl -(%ebp);leal -(%edi), %eax": 1,
                "pushl -(%ebp);leal -(%edi), %eax;pushl %eax;calll - <KeQueryPriorityThread+>;movl (%edi), %edi": 1,
                "cmpl %eax, %edi;jne - <IoCheckFunctionAccess+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "jl - <NtSetInformationProcess+>;movl -(%ebp), %eax;movl (%eax), %edi;testl %edi, %edi;je  <IoCheckFunctionAccess+>": 1,
                "pushl %ebx;calll - <ExAcquireResourceSharedLite>;testb $, (%edi);je  <IoCheckFunctionAccess+>;movl (%edi), %eax": 1,
                "movl %ebx, %ecx;calll - <ExReleaseResourceLite>;incl (%esi);jne  <IoCheckFunctionAccess+>;leal (%esi), %eax": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;decl (%esi);leal (%ebx), %edi;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %eax;jmp - <IoCheckFunctionAccess+>;pushl -(%ebp);pushl %edi;pushl (%ebp)": 1,
                "calll - <NtDuplicateObject+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl %eax;calll  <ExReleaseRundownProtectionEx+>": 1,
                "jmp - <IoCheckFunctionAccess+>;cmpl %ecx, %ebx;jne - <IoCheckFunctionAccess+>;pushl $;leal -(%ebp), %eax": 1,
                "andl %eax, (%ecx);jmp  <IoCheckFunctionAccess+>;pushl $;popl %eax;lock": 1,
                "leal (%esi), %ecx;pushl %ecx;pushl %esi;pushl %eax;calll - <PsLookupThreadByThreadId+>": 1,
                "movl (%eax), %esi;andl $-, %esi;movl %eax, (%ebp);leal (%esi), %eax;movl %esi, -(%ebp)": 2,
                "andl $-, %esi;movl %eax, (%ebp);leal (%esi), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %edi, %ecx;calll - <ExfReleasePushLock>;jmp - <NtAdjustPrivilegesToken+>;movb $, %cl;movb $, (%ebx)": 1,
                "movl %eax, (%ebp);je - <PsImpersonateClient+>;movl %fs:, %eax;movl %eax, %esi;decl (%esi)": 1,
                "movb $, (%esi);jmp  <IoCheckFunctionAccess+>;movl $, %eax;jmp - <PsImpersonateClient+>;pushl $": 1,
                "cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl %edi, %eax": 1,
                "calll - <ExfAcquirePushLockExclusive>;jmp - <PsImpersonateClient+>;movl %esi, %ecx;calll - <ExfReleasePushLock>;jmp - <PsImpersonateClient+>": 1,
                "movl %ecx, (%ebp);jl - <FsRtlNotifyVolumeEvent+>;jmp - <FsRtlNotifyVolumeEvent+>;jmp - <FsRtlNotifyVolumeEvent+>;movl %edi, %ecx": 1,
                "leal (%esi), %edi;movl (%edi), %ebx;leal (%edi), %eax;movl (%eax), %ecx;movl %ecx, %edx": 1,
                "movl %ecx, -(%ebp);jbe  <IoCheckFunctionAccess+>;cmpl %ebx, %ecx;jbe  <IoCheckFunctionAccess+>;cmpl $, %esi": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl %ebx, (%ebp);jmp - <IoCheckFunctionAccess+>;movl %eax, %ebx": 1,
                "nop;nop;nop;pushl -(%ebp);calll  <PsRemoveCreateThreadNotifyRoutine+>": 1,
                "movl %esi, %eax;jmp - <NtAdjustPrivilegesToken+>;movl $, %edi;jmp  <IoCheckFunctionAccess+>;movl $, %edi": 1,
                "movl -(%ebp), %ecx;calll - <ExfAcquirePushLockExclusive>;jmp - <NtAdjustPrivilegesToken+>;leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl %ebx;calll - <LpcRequestPort+>;movl $, %edi": 1,
                "calll - <LpcRequestPort+>;movl $, %edi;leal (%ebx), %ecx;calll - <ExReleaseRundownProtection>;movl %esi, %ecx": 1,
                "leal (%ebx), %ecx;calll - <ExReleaseRundownProtection>;movl %esi, %ecx;calll - <ObfDereferenceObject>;jmp  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;pushl %edi;calll  <ExReleaseRundownProtectionEx+>;pushl $;pushl (%ebx)": 1,
                "leal (%edi), %eax;movl %eax, -(%ebp);pushl $;pushl %eax;calll - <ExAcquireResourceSharedLite>": 1,
                "pushl %eax;calll - <ExAcquireResourceSharedLite>;movl (%edi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "pushl (%edi);pushl %eax;calll - <IoSetIoCompletion>;movl -(%ebp), %ecx;calll - <ExReleaseResourceLite>": 1,
                "movb $, (%ecx);movb $, %cl;calll *;jmp - <NtAdjustPrivilegesToken+>;movl $, -(%ebp)": 1,
                "xorl %edi, %edi;jmp - <NtAdjustPrivilegesToken+>;pushl %esi;calll - <KeTerminateThread+>;jmp - <NtAdjustPrivilegesToken+>": 1,
                "calll - <ObReferenceObjectByHandle>;movl %eax, %edi;cmpl %esi, %edi;jl - <PsSetProcessWindowStation+>;movl -(%ebp), %eax": 2,
                "pushl %esi;pushl %esi;cmpl , %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %ecx": 1,
                "cmpl %esi, %eax;je  <IoCheckFunctionAccess+>;movl %edi, %ecx;movl -(%ebp), %edx;movl (%edx), %esi": 1,
                "movl %ecx, (%eax);xorl %esi, %esi;jmp - <PsSetProcessWindowStation+>;pushl %esi;pushl %ebx": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl - <PsSetProcessWindowStation+>;pushl $;pushl $": 1,
                "pushl %ebx;calll  <SeAuditHardLinkCreation+>;jmp - <PsSetProcessWindowStation+>;movl (%eax), %edi;testl $, %edi": 1,
                "calll  <SeAuditHardLinkCreation+>;jmp - <PsSetProcessWindowStation+>;movl (%eax), %edi;testl $, %edi;jne - <PsSetProcessWindowStation+>": 1,
                "jmp - <RtlInitializeRangeList+>;leal (%ebx), %ecx;pushl %ecx;pushl (%ebp);pushl %eax": 1,
                "pushl %eax;calll - <PsSetProcessWindowStation+>;movl %eax, %edi;cmpl %esi, %edi;jl - <PsSetProcessWindowStation+>": 1,
                "cmpl %esi, %edi;jl - <PsSetProcessWindowStation+>;pushl -(%ebp);pushl %ebx;calll - <RtlInitializeRangeList+>": 1,
                "jl - <PsSetProcessWindowStation+>;pushl -(%ebp);pushl %ebx;calll - <RtlInitializeRangeList+>;movl -(%ebp), %ecx": 1,
                "pushl -(%ebp);calll - <SeCaptureSecurityDescriptor+>;jmp - <PsSetProcessWindowStation+>;movb $, (%edi);movb $, %cl": 1,
                "jmp - <NtAdjustPrivilegesToken+>;movl $, (%eax);movl , %eax;jmp - <NtAdjustPrivilegesToken+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "orl $, %eax;jmp - <IoGetDeviceInterfaces+>;movl $, %ebx;jmp - <ObReferenceObjectByName+>;movl $, %ebx": 1,
                "movl $, %ebx;jmp - <ObReferenceObjectByName+>;movl $, %ebx;jmp - <ObReferenceObjectByName+>;pushl %esi": 1,
                "leal (%esi), %eax;cmpl %eax, (%eax);je - <PsSetProcessWinProcess+>;movb $, %cl;movb $, (%esi)": 1,
                "movb $, %cl;movb $, (%esi);calll *;jmp - <SeTokenIsWriteRestricted+>;jmp - <SeTokenIsWriteRestricted+>": 1,
                "jmp - <SeTokenIsWriteRestricted+>;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <KeStackAttachProcess>": 1,
                "xorl %ebx, %ebx;jmp - <ExWaitForRundownProtectionRelease+>;movl -(%ebp), %ecx;calll - <ExfAcquirePushLockExclusive>;jmp - <ExWaitForRundownProtectionRelease+>": 1,
                "calll - <ExfAcquirePushLockExclusive>;jmp - <ExRundownCompleted+>;movl -(%ebp), %ecx;calll - <ExfReleasePushLock>;jmp - <ExWaitForRundownProtectionRelease+>": 1,
                "movl -(%ebp), %ecx;calll - <ExfReleasePushLock>;jmp - <ExWaitForRundownProtectionRelease+>;movb $, (%esi);movb $, %cl": 1,
                "jmp - <ExWaitForRundownProtectionRelease+>;movb $, (%esi);movb $, %cl;calll *;jmp - <ExWaitForRundownProtectionRelease+>": 1,
                "jmp - <ExWaitForRundownProtectionRelease+>;cmpb $, ;je  <IoCheckFunctionAccess+>;leal (%edi), %eax;pushl %eax": 1,
                "pushl %edi;pushl $;calll  <PsIsThreadImpersonating+>;jmp - <ExWaitForRundownProtectionRelease+>;jmp - <ExWaitForRundownProtectionRelease+>": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl $;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;calll  <ExRaiseDatatypeMisalignment>;jmp - <LpcRequestPort+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "cmpl $, -(%ebp);jle  <IoCheckFunctionAccess+>;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "calll - <ObfDereferenceObject>;jmp - <LpcRequestPort+>;addl $, %ebx;movl %ebx, -(%ebp);movl $, %eax": 1,
                "movb $, %cl;calll *;jmp - <ExWaitForRundownProtectionRelease+>;jmp - <RtlRemoveUnicodePrefix+>;calll *": 1,
                "calll - <SeFreePrivileges>;jmp - <ExRundownCompleted+>;movl (%edi), %eax;addl $, %eax;pushl %eax": 1,
                "calll - <ExFreePoolWithTag>;movl $, -(%ebp);jmp - <ExRundownCompleted+>;jmp - <ExRundownCompleted+>;pushl %esp": 1,
                "jmp - <SeTokenIsWriteRestricted+>;jmp - <SeTokenIsWriteRestricted+>;pushl $;pushl %ebx;calll  <KeFlushQueuedDpcs+>": 1,
                "cmpb $, -(%ebp);je - <SeTokenIsWriteRestricted+>;pushl %ebx;calll  <MmUnmapViewInSystemSpace+>;andl $, (%ebp)": 1,
                "movl $, %eax;jmp - <LpcRequestPort+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp - <LpcRequestPort+>": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp - <LpcRequestPort+>;jmp - <LpcRequestPort+>;movl $, %eax": 1,
                "andl %esi, (%ebx);leal (%ebx), %esi;cmpl $, (%esi);je  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl %edi;calll - <KeTerminateThread+>;andl $, -(%ebp);jmp - <PsGetContextThread+>;jmp - <PsGetContextThread+>": 1,
                "jne - <FsRtlOplockFsctrl+>;leal (%ebx), %eax;cmpl %eax, (%eax);je - <FsRtlOplockFsctrl+>;movb $, %cl": 1,
                "movl %eax, %esi;testl %esi, %esi;jne  <IoCheckFunctionAccess+>;movl $, %eax;jmp - <NtDeleteFile+>": 1,
                "testl %esi, %esi;jne  <IoCheckFunctionAccess+>;movl $, %eax;jmp - <NtDeleteFile+>;leal -(%ebp), %eax": 1,
                "calll - <PoRequestPowerIrp+>;movl %eax, %edi;testl %edi, %edi;jge  <IoCheckFunctionAccess+>;pushl %esi": 2,
                "jmp - <FsRtlOplockFsctrl+>;decl (%esi);movl $, -(%ebp);jmp - <FsRtlOplockFsctrl+>;cmpl $, (%edi)": 1,
                "popl %edx;calll - <IoGetDriverObjectExtension+>;pushl $;pushl $;pushl $": 1,
                "movl %ebx, %ecx;calll *;pushl $;pushl $;pushl %esi": 1,
                "jmp - <FsRtlNotifyVolumeEvent+>;leal (%esi), %eax;cmpl %eax, (%eax);je - <FsRtlNotifyVolumeEvent+>;movb $, %cl": 1,
                "jmp - <NtDeleteFile+>;calll - <ObfDereferenceObject>;movl %ebx, (%edi);jmp - <NtDeleteFile+>;movl (%esi), %eax": 1,
                "movl %ebx, (%edi);jmp - <NtDeleteFile+>;movl (%esi), %eax;cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;jmp - <NtDeleteFile+>;pushl %esi;testb $, (%edi)": 1,
                "pushl %ebx;calll - <PsReferencePrimaryToken>;pushl %eax;movl %eax, -(%ebp);calll  <SeTokenIsAdmin>": 1,
                "calll - <ExReleaseResourceLite>;incl (%ebx);jne  <IoCheckFunctionAccess+>;leal (%esi), %eax;cmpl %eax, (%eax)": 1,
                "pushl %eax;pushl ;calll - <NtDeleteFile+>;movl %edi, %ecx;calll - <ExReleaseResourceLite>": 1,
                "calll *;jmp - <FsRtlOplockFsctrl+>;pushl $;pushl -(%ebp);pushl %eax": 1,
                "calll - <ObfDereferenceObject>;jmp - <FsRtlOplockFsctrl+>;pushl $;pushl $;pushl %esi": 1,
                "pushl $;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl %ebx, (%esi);movl %edi, %ecx": 1,
                "calll - <ExAcquireResourceExclusiveLite>;testb $, -(%ebp);je  <IoCheckFunctionAccess+>;leal (%esi), %edi;orl $, (%edi)": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl %eax;calll  <SeTokenIsAdmin>": 1,
                "movl -(%ebp), %edi;testl %eax, %eax;jl  <IoCheckFunctionAccess+>;pushl %edi;calll - <SeTokenType>": 1,
                "cmpl $, -(%ebp);jge  <IoCheckFunctionAccess+>;movl %edi, %ecx;calll - <ObfDereferenceObject>;cmpl $, -(%ebp)": 1,
                "movl $, -(%ebp);cmpl $, -(%ebp);jl  <IoCheckFunctionAccess+>;testb $, (%esi);je  <IoCheckFunctionAccess+>": 1,
                "jmp - <IoCreateUnprotectedSymbolicLink+>;movl %esi, -(%ebp);movl -(%ebp), %ecx;movl (%ebp), %esi;leal -(%ebp), %edi": 1,
                "andl $, -(%ebp);movl %edi, -(%ebp);pushl (%esi);leal -(%ebp), %eax;pushl %eax": 1,
                "je  <IoCheckFunctionAccess+>;cmpl $, %ebx;jne  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl $": 1,
                "testb %al, %al;jne  <IoCheckFunctionAccess+>;movl $, -(%ebp);xorl %edx, %edx;cmpl %edx, -(%ebp)": 1,
                "orl $, %edi;movl %ebx, -(%ebp);jmp - <IoCreateUnprotectedSymbolicLink+>;movl -(%ebp), %eax;cmpl %edx, %eax": 1,
                "movl %ecx, -(%ebp);jmp - <IoCreateUnprotectedSymbolicLink+>;movl -(%ebp), %eax;movl %eax, %ebx;movl -(%ebp), %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;cmpl $-, %ebx;jne  <IoCheckFunctionAccess+>": 1,
                "jbe  <IoCheckFunctionAccess+>;movl $, -(%ebp);jmp - <IoCreateUnprotectedSymbolicLink+>;cmpl , %ebx;jbe  <IoCheckFunctionAccess+>": 1,
                "orl $, %edi;movl %ebx, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <IoCreateUnprotectedSymbolicLink+>": 1,
                "andl $, -(%ebp);jmp - <IoCreateUnprotectedSymbolicLink+>;orl %eax, %edi;jmp - <IoCreateUnprotectedSymbolicLink+>;orl %edx, %edi": 1,
                "cmpl %eax, %edi;jne - <IoCheckFunctionAccess+>;xorl %eax, %eax;movl %eax, (%esi);movl %eax, (%esi)": 1,
                "movl %eax, (%esi);movl %eax, (%esi);jmp - <IoCreateUnprotectedSymbolicLink+>;movl $, %ecx;calll *": 1,
                "movb $, -(%ebp);jmp - <IoCreateUnprotectedSymbolicLink+>;jmp - <IoCreateUnprotectedSymbolicLink+>;movl (%edi), %eax;movl %eax, ": 1,
                "calll - <KeStackAttachProcess>;pushl $;pushl $;pushl ;pushl ": 1,
                "pushl ;calll  <MmAdjustWorkingSetSize>;pushl $;movl (%edi), %eax;addl $, %eax": 1,
                "pushl %ebx;pushl %esi;movl %eax, -(%ebp);calll - <IoCreateUnprotectedSymbolicLink+>;movl %eax, %edi": 1,
                "addl %eax, -(%ebp);adcl %edx, -(%ebp);testb $, (%esi);je  <IoCheckFunctionAccess+>;cmpl (%esi), %edx": 1,
                "pushl $;pushl $;pushl (%edi);pushl (%esi);pushl %eax": 1,
                "je  <IoCheckFunctionAccess+>;pushl %ebx;pushl $;pushl %ebx;pushl %ebx": 2,
                "pushl $;pushl %ebx;pushl %ebx;pushl (%esi);pushl %eax": 2,
                "pushl %ebx;pushl %ebx;pushl %esi;calll - <KeSetEvent>;movl (%esi), %eax": 1,
                "testb %al, %al;jne - <IoCreateUnprotectedSymbolicLink+>;movl (%esi), %esi;jmp - <IoCreateUnprotectedSymbolicLink+>;pushl (%ebp)": 1,
                "jne - <IoCreateUnprotectedSymbolicLink+>;movl (%esi), %esi;jmp - <IoCreateUnprotectedSymbolicLink+>;pushl (%ebp);calll - <CcUninitializeCacheMap+>": 1,
                "jmp - <PsSetProcessWindowStation+>;movl (%ebp), %ecx;calll - <ExfAcquirePushLockShared>;jmp - <RtlUnicodeStringToAnsiString+>;movl (%esi), %esi": 1,
                "cmpl %ebx, (%esi);jne - <FsRtlNotifyVolumeEvent+>;pushl $;pushl %esi;calll - <PoRegisterDeviceForIdleDetection+>": 1,
                "cmpl %ecx, %eax;jne - <LdrAccessResource+>;movl %edi, %eax;jmp - <LdrAccessResource+>;testl %eax, %eax": 1,
                "movl %edx, (%eax);jmp - <RtlMultiByteToUnicodeSize+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %edx": 1,
                "movl %eax, -(%ebp);movw , %ax;movl %esi, (%ebp);movl -(%ebp), %ecx;movb (%ecx,%esi), %cl": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebx), %ecx;leal (%esi,%ecx), %edx;movzbw (%edx), %cx;movsbw (%edx), %dx": 1,
                "calll - <memmove>;addl $, %esp;jmp - <IoRegisterBootDriverReinitialization+>;pushl %ebx;pushl (%esi)": 1,
                "movl %ebx, (%esi);jmp  <IoCheckFunctionAccess+>;movl %ebx, (%esi);movl (%ecx), %eax;testl %eax, %eax": 1,
                "cmpl $, %eax;je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax), %eax;cmpl %edi, %eax": 1,
                "cmpw $, (%edi);jne  <IoCheckFunctionAccess+>;movl (%esi), %ebx;andl $, (%esi);addl $, %edi": 1,
                "andl %edi, %eax;movl %eax, (%ecx);jmp - <IoReadPartitionTable+>;movl $, %eax;jmp - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "jmp - <MmGetSystemRoutineAddress+>;movl $, %eax;jmp - <RtlAbsoluteToSelfRelativeSD+>;movl $, %eax;jmp - <RtlCreateAcl+>": 1,
                "jb - <FsRtlTeardownPerStreamContexts+>;cmpb $, %dl;ja - <FsRtlTeardownPerStreamContexts+>;andl $, -(%ebp);cmpb $, (%edi)": 1,
                "je  <IoCheckFunctionAccess+>;movl $, -(%ebp);andl $, %ecx;je  <IoCheckFunctionAccess+>;addl $, -(%ebp)": 1,
                "jns - <IoCheckFunctionAccess+>;popl %esi;jmp - <RtlAddAce+>;movl $, %eax;jmp - <RtlAddAce+>": 1,
                "calll - <RtlUpcaseUnicodeString+>;movl (%ebp), %ecx;testl %ecx, %ecx;je - <RtlUpcaseUnicodeString+>;andl $, (%ecx)": 1,
                "jmp - <RtlAddAtomToAtomTable+>;movl %edi, -(%ebp);movl $, -(%ebp);jmp - <RtlMultiByteToUnicodeSize+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <RtlAddAtomToAtomTable+>;movl $, %eax;jmp - <RtlLookupAtomInAtomTable+>": 1,
                "nop;movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <RtlLookupAtomInAtomTable+>": 1,
                "jmp - <NtFindAtom+>;cmpl $, %ecx;jb  <IoCheckFunctionAccess+>;leal -(%ecx), %eax;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp - <RtlCopyRangeList+>;pushl %esi;calll - <RtlFreeRangeList>;movl $, %eax;jmp - <RtlCopyRangeList+>": 1,
                "movl $, %eax;jmp - <IoDeleteSymbolicLink+>;leal (%ebx), %edi;cmpl %edi, (%ebp);movl %ebx, %eax": 1,
                "je - <RtlDeleteOwnersRanges+>;jmp  <IoCheckFunctionAccess+>;movl (%ebp), %esi;movl (%esi), %edx;cmpl (%eax), %edx": 1,
                "movl (%eax), %edi;movl (%ebp), %ebx;cmpl %edi, (%ebx);ja  <IoCheckFunctionAccess+>;jb  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;testb $, (%eax);je  <IoCheckFunctionAccess+>;movl (%edx), %eax;subl $, %eax": 1,
                "je - <RtlDeleteOwnersRanges+>;jmp - <IoCheckFunctionAccess+>;jmp - <RtlDeleteOwnersRanges+>;movl $, %eax;jmp - <RtlDeleteOwnersRanges+>": 1,
                "jmp - <RtlDeleteOwnersRanges+>;movl $, %eax;jmp - <RtlDeleteOwnersRanges+>;testb $, (%edi);je  <IoCheckFunctionAccess+>": 1,
                "calll - <ExFreeToPagedLookasideList>;movl (%ebp), %ebx;jmp  <IoCheckFunctionAccess+>;pushl (%ebp);movl (%esi), %eax": 1,
                "jmp - <RtlDeleteOwnersRanges+>;movl (%ebp), %eax;movb $, (%eax);jmp - <RtlIsRangeAvailable+>;movl -(%ebp), %eax": 1,
                "jmp - <RtlInitializeUnicodePrefix+>;movl (%ebx), %eax;movl (%ebx), %ecx;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movl $, %eax;pushl %eax;movl %eax, -(%ebp);movl (%ecx), %edx;leal -(%ebp), %eax": 1,
                "pushl $-;movl %edx, -(%ebp);calll - <ZwAllocateVirtualMemory>;testl %eax, %eax;jge  <IoCheckFunctionAccess+>": 1,
                "xorl %eax, %eax;jmp - <IoRegisterDeviceInterface+>;movl (%ebp), %eax;movl -(%ebp), %ecx;addl %ecx, (%eax)": 1,
                "addl %ecx, (%eax);movl (%ebp), %eax;jmp  <IoCheckFunctionAccess+>;pushl $;pushl $": 1,
                "jmp  <IoCheckFunctionAccess+>;pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %edx;addl %eax, %ecx;movl (%esi), %eax;addl $, %eax;jmp  <IoCheckFunctionAccess+>": 1,
                "movl %ecx, (%ebx);calll  <RtlZeroHeap+>;decl (%esi);cmpl (%esi), %edi;jbe - <IoRegisterDeviceInterface+>": 1,
                "jmp - <IoRegisterDeviceInterface+>;movl %eax, %ebx;jmp - <IoRegisterDeviceInterface+>;pushl %edi;pushl (%ebp)": 1,
                "jmp - <IoRegisterDeviceInterface+>;nop;incl %ecx;bound (%ecx), %esp;outsl %fs:(%esi), %dx": 1,
                "incl %ecx;bound (%ecx), %esp;outsl %fs:(%esi), %dx;outsb (%esi), %dx;imull $, (%esi), %ebp": 1,
                "jmp - <FsRtlNotifyInitializeSync+>;movl -(%ebp), %ecx;testl %ecx, %ecx;jne  <IoCheckFunctionAccess+>;movl (%ebx), %esi": 1,
                "movl (%edi), %ecx;cmpl (%ebx), %ecx;jne  <IoCheckFunctionAccess+>;movb $, (%eax);jmp  <IoCheckFunctionAccess+>": 1,
                "pushl %ebx;movl %eax, (%ecx);calll  <RtlZeroHeap+>;decl (%ebx);movl (%ebp), %eax": 1,
                "imull $, (%esp,%esi,), %esi;outsb (%esi), %dx;andb %ch, %gs:(%bp);popal;jb  <IoCheckFunctionAccess+>": 1,
                "testb $, %al;je  <IoCheckFunctionAccess+>;testb $, %al;movzwl (%edi), %ecx;leal -(,%ecx,), %ecx": 2,
                "cmpl (%ebp), %eax;je  <IoCheckFunctionAccess+>;leal (%eax,%edi), %eax;pushl %eax;pushl %edi": 2,
                "addb %al, (%eax);decl %eax;incl %ebp;incl %ecx;pushl %eax": 5,
                "jne - <RtlRandom+>;movzwl (%esi), %ecx;movl %ecx, %eax;andl $, %ecx;movb $, %bl": 1,
                "movl (%ebp), %ecx;addl -(%ebp), %ecx;movl %ecx, (%ebp);jmp - <RtlUpcaseUnicodeStringToOemString+>;pushl %esi": 1,
                "pushl $;calll - <DbgPrint>;popl %ecx;popl %ecx;xorb %al, %al": 1,
                "jbe - <FsRtlNotifyInitializeSync+>;cmpb $, %bl;je  <IoCheckFunctionAccess+>;testb $, (%esi);je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;movl (%ebp), %ebx;movl (%esi), %eax;andl $, -(%ebp);addl $, %ebx": 1,
                "movl (%esi), %eax;andl $, -(%ebp);addl $, %ebx;cmpl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;shrl -(%ebp);cmpl %ebx, -(%ebp);jae  <IoCheckFunctionAccess+>;movl %ebx, -(%ebp)": 1,
                "movl $, -(%ebp);movl -(%ebp), %ecx;jmp  <IoCheckFunctionAccess+>;testw %cx, %cx;jne  <IoCheckFunctionAccess+>": 1,
                "pushl (%ebp);calll - <IoRegisterDeviceInterface+>;testl %eax, %eax;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jne  <IoCheckFunctionAccess+>;pushl (%ebp);pushl -(%ebp)": 1,
                "calll - <RtlRandom+>;jmp  <IoCheckFunctionAccess+>;pushl $;leal (%ebp), %eax;pushl %eax": 1,
                "jl  <IoCheckFunctionAccess+>;pushl (%ebp);pushl -(%ebp);pushl (%ebp);calll - <IoRegisterDeviceInterface+>": 1,
                "calll - <IoRegisterDeviceInterface+>;movl (%ebp), %ecx;movl (%ebp), %eax;shrl $, %ecx;addl %ecx, (%eax)": 1,
                "movl %ecx, (%ebp);calll - <SeValidSecurityDescriptor+>;movl %eax, %edi;movzwl (%edi), %eax;cmpl (%esi), %eax": 1,
                "cmpl $, (%esi);leal (%esi), %ecx;je  <IoCheckFunctionAccess+>;xorl %eax, %eax;jmp  <IoCheckFunctionAccess+>": 1,
                "movb %al, (%ebx);movzwl %cx, %eax;movl %eax, (%ebp);movl -(%ebp), %eax;movb $, (%ebx)": 1,
                "cmpl %eax, (%eax);jne  <IoCheckFunctionAccess+>;movl %ecx, %edx;andl $, %ecx;movb $, %bl": 1,
                "jmp - <RtlUnicodeToMultiByteSize+>;incl %esi;popal;imull $, (%ecx,%ebp,), %ebp;popal": 1,
                "outsb (%esi), %dx;andb %dh, (%di);arpl %bp, (%edi);insl %dx, %es:(%edi);imull $, (%esp,%esi,), %esi": 1,
                "int;pushl (%ebp);pushl $;calll - <DbgPrint>;popl %ecx": 1,
                "orl $-, -(%ebp);xorl %ebx, %ebx;jmp - <RtlCreateHeap+>;orl $, (%ebp);jmp - <RtlCreateHeap+>": 1,
                "movl $, (%ebp);movl -(%ebp), %ebx;movl %ebx, -(%ebp);jmp - <RtlCreateHeap+>;cmpl $, (%ebp)": 1,
                "testl %eax, %eax;jge - <RtlCreateHeap+>;jmp - <IoCheckFunctionAccess+>;cmpl %edi, (%ebp);jne - <NtQueryInformationAtom+>": 1,
                "calll - <ZwFreeVirtualMemory>;jmp - <NtQueryInformationAtom+>;movl $, (%eax);movl -(%ebp), %eax;movl $, (%eax)": 1,
                "decl %ecx;outsb (%esi), %dx;jbe  <IoCheckFunctionAccess+>;insb %dx, %es:(%edi);imull $, (%eax), %esp": 3,
                "jmp - <RtlAllocateHeap+>;pushl $;pushl (%esi);calll - <ExAcquireResourceExclusiveLite>;movb $, -(%ebp)": 1,
                "pushl $;pushl (%esi);calll - <ExAcquireResourceExclusiveLite>;movb $, -(%ebp);jmp - <RtlAllocateHeap+>": 1,
                "cmpl (%ecx), %esi;jne - <RtlAllocateHeap+>;testl %esi, %esi;jmp - <RtlAllocateHeap+>;movb %cl, (%esi)": 1,
                "movl %ecx, -(%ebp);movl (%ecx), %ecx;cmpl (%edi), %ecx;jne  <IoCheckFunctionAccess+>;leal (%eax), %edi": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;leal (%edi,%ebx), %edi;movl %edi, -(%ebp);xorl %ecx, %ecx": 1,
                "addl %eax, %edx;movl %edx, -(%ebp);cmpl $, %edx;ja  <IoCheckFunctionAccess+>;movw %dx, (%esi)": 1,
                "movl (%edi), %ecx;movl %ecx, -(%ebp);jmp - <RtlAllocateHeap+>;leal (%ebx), %edi;movl %edi, -(%ebp)": 1,
                "addl $, -(%ebp);pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <RtlFreeHeap+>;xorl %ecx, %ecx;jmp - <RtlFreeHeap+>;jmp - <RtlFreeHeap+>;leal -(%ebx), %eax": 1,
                "movl %eax, -(%ebp);cmpl %edi, %eax;jge - <RtlFreeHeap+>;movb $, -(%ebp);jmp - <RtlFreeHeap+>": 1,
                "movl -(%ebp), %esp;jmp - <RtlFreeHeap+>;movl %edi, -(%ebp);jmp - <RtlAnsiCharToUnicodeChar+>;movw %ax, (%edi)": 1,
                "pushl (%esi);calll *;movl %ebx, (%esi);movl %edi, %eax;jmp - <RtlAnsiStringToUnicodeString+>": 1,
                "jmp - <RtlUnicodeStringToAnsiString+>;decl %eax;movl $, -(%ebp);movw %ax, (%esi);jmp - <RtlUnicodeStringToAnsiString+>": 1,
                "movl %edi, %eax;jmp - <RtlUnicodeStringToOemString+>;pushl %edi;calll - <RtlxUnicodeStringToOemSize>;jmp - <RtlUpcaseUnicodeStringToOemString+>": 1,
                "jmp - <RtlUpcaseUnicodeStringToOemString+>;movl $, %eax;jmp - <RtlUpcaseUnicodeStringToOemString+>;movl $, %ebx;jmp - <RtlUpcaseUnicodeStringToOemString+>": 1,
                "movl %eax, (%esi);jne - <RtlUnicodeStringToCountedOemString+>;movl $, %eax;jmp - <RtlUnicodeStringToCountedOemString+>;movl $, %eax": 1,
                "jne - <RtlUnicodeStringToCountedOemString+>;movl $, %eax;jmp - <RtlUnicodeStringToCountedOemString+>;movl $, %eax;jmp - <RtlUnicodeStringToCountedOemString+>": 1,
                "movzwl (%ecx,%eax,), %eax;movw %ax, %dx;cmpw $, %dx;movl %eax, (%ebp);jae  <IoCheckFunctionAccess+>": 1,
                "movb (%eax,%ecx), %al;jmp  <IoCheckFunctionAccess+>;movl , %edx;movsbl %al, %ecx;cmpw $, (%edx,%ecx,)": 1,
                "jmp - <RtlUpperChar+>;testw %di, %di;je - <KeQueryActiveProcessors+>;subl %esi, %edx;movb (%esi), %al": 1,
                "incl %esi;cmpb %cl, %al;jne - <RtlPrefixString+>;addl $, %edi;testw %di, %di": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlCharToInteger+>;jmp - <RtlConvertSidToUnicodeString+>;jmp - <RtlConvertSidToUnicodeString+>": 1,
                "calll  <RtlCharToInteger+>;jmp - <RtlConvertSidToUnicodeString+>;jmp - <RtlConvertSidToUnicodeString+>;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %eax;testl %eax, %eax;je - <RtlValidSecurityDescriptor+>;addl %eax, %esi": 1,
                "jmp - <RtlGetDaclSecurityDescriptor+>;movl $, %eax;jmp - <RtlSetSaclSecurityDescriptor+>;movl $, %eax;jmp - <RtlSetSaclSecurityDescriptor+>": 1,
                "sete %al;movb %al, (%ecx);jmp - <RtlGetSaclSecurityDescriptor+>;movl $, %eax;jmp - <RtlSetOwnerSecurityDescriptor+>": 1,
                "movl $, %eax;jmp - <RtlSetGroupSecurityDescriptor+>;movl $, %eax;jmp - <RtlSetGroupSecurityDescriptor+>;orl $, %ecx": 1,
                "jmp - <RtlSetGroupSecurityDescriptor+>;movl $, %eax;jmp - <RtlSetGroupSecurityDescriptor+>;orl $, %ecx;movw %cx, (%eax)": 1,
                "movl $, %eax;jmp - <RtlSetGroupSecurityDescriptor+>;orl $, %ecx;movw %cx, (%eax);jmp - <RtlSetGroupSecurityDescriptor+>": 1,
                "movzbl %al, %eax;leal (,%eax,), %eax;cmpl %eax, (%ebp);jae - <RtlValidRelativeSecurityDescriptor+>;jmp - <RtlValidRelativeSecurityDescriptor+>": 2,
                "testb %al, %al;je - <RtlValidRelativeSecurityDescriptor+>;leal (%esi,%edi), %eax;movzwl (%eax), %ecx;cmpl %ecx, (%ebp)": 1,
                "calll - <FsRtlTeardownPerStreamContexts+>;testb %al, %al;je - <RtlValidRelativeSecurityDescriptor+>;jmp - <RtlValidRelativeSecurityDescriptor+>;movl %ebx, -(%ebp)": 1,
                "je - <IoCheckEaBufferValidity+>;cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;pushl (%ebp);pushl -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp  <IoCheckFunctionAccess+>;subl $, -(%ebp);movl -(%ebp), %ecx;movzbl (%eax), %eax": 1,
                "movl %ecx, -(%ebp);movb %al, -(%ebp);movl -(%ebp), %edi;jmp - <IoCheckFunctionAccess+>;movb $, -(%ebp)": 1,
                "xorl %ebx, %ebx;jmp - <IoCheckEaBufferValidity+>;decl %eax;je - <MmLockPagableImageSection+>;decl %eax": 1,
                "jmp - <FsRtlFindInTunnelCache+>;jmp - <FsRtlFindInTunnelCache+>;cmpb $, (%edi);je - <IoCheckEaBufferValidity+>;movl -(%ebp), %esi": 1,
                "jmp - <FsRtlFindInTunnelCache+>;cmpb $, (%edi);je - <IoCheckEaBufferValidity+>;movl -(%ebp), %esi;testb $, (%esi)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movb (%eax), %al;subl $, %ebx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movb %al, -(%ebp)": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movzbl (%ecx), %ecx;leal (%eax,%ecx,), %eax;jmp - <IoCheckEaBufferValidity+>": 1,
                "pushl %edi;pushl %edi;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;movb $, -(%ebp);cmpb $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "cmpb $, -(%ebp);jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);jne - <IoWMIRegistrationControl+>;movb (%ebx), %cl": 1,
                "jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);jne - <IoWMIRegistrationControl+>;movb (%ebx), %cl;movl -(%ebp), %eax": 1,
                "subl %eax, %edx;addl %esi, %edx;cmpl %edx, %ecx;jle  <IoCheckFunctionAccess+>;movb $, -(%ebp)": 1,
                "jle  <IoCheckFunctionAccess+>;movb $, -(%ebp);jmp - <IoWMIRegistrationControl+>;movl $, %eax;jmp - <FsRtlNotifyCleanup+>": 1,
                "calll - <RtlInitializeSid+>;testb %al, %al;je - <MmLockPagableImageSection+>;movl (%esi), %esi;subl %ebx, %esi": 1,
                "movl (%esi), %esi;subl %ebx, %esi;je  <IoCheckFunctionAccess+>;decl %esi;jne - <MmLockPagableImageSection+>": 1,
                "calll - <RtlEqualSid>;jmp - <MmLockPagableImageSection+>;movl $, %edi;jmp - <RtlPrefixUnicodeString+>;xorl %edi, %edi": 1,
                "jmp - <MmLockPagableImageSection+>;movl $, %edi;jmp - <RtlPrefixUnicodeString+>;xorl %edi, %edi;jmp - <RtlPrefixUnicodeString+>": 1,
                "movl $, %edi;jmp - <RtlPrefixUnicodeString+>;movw (%esi), %cx;testb $, %cl;je  <IoCheckFunctionAccess+>": 1,
                "andl $, -(%ebp);jmp  <IoCheckFunctionAccess+>;addl %esi, %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>;xorl %edx, %edx;jmp  <IoCheckFunctionAccess+>;addl %ebx, %edx": 1,
                "movl %eax, %edi;testl %edi, %edi;jl - <RtlPrefixUnicodeString+>;movl -(%ebp), %ebx;movl -(%ebp), %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp - <RtlPrefixUnicodeString+>;movw (%esi), %dx;testb $, %dl": 1,
                "pushl -(%ebp);andl %edx, %eax;movzwl %cx, %ecx;andl $, %ebx;orl %eax, %ebx": 1,
                "movl %eax, %ecx;andl $, %ecx;orl $, %ecx;shll %ecx;andl $, %eax": 2,
                "jmp - <RtlPrefixUnicodeString+>;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>;jmp - <RtlPrefixUnicodeString+>": 1,
                "pushl %ebx;calll - <ExFreePoolWithTag>;jmp - <RtlPrefixUnicodeString+>;movb (%edi), %cl;orl %esi, %eax": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);jmp - <RtlPrefixUnicodeString+>": 1,
                "jmp - <RtlPrefixUnicodeString+>;movl %eax, %esi;subl %esi, %ecx;leal (%edx,%esi), %edi;movl %ecx, %esi": 2,
                "pushl %edx;pushl %esi;calll  <RtlEqualLuid+>;jmp - <MmLockPagableImageSection+>;movl %eax, %ecx": 1,
                "notl %ecx;andl %ecx, -(%ebp);jmp - <MmLockPagableImageSection+>;movl %eax, %ecx;notl %ecx": 1,
                "jmp - <FsRtlNotifyFilterChangeDirectory+>;movl (%ebp), %eax;movb $, (%eax);jmp - <FsRtlNotifyFilterChangeDirectory+>;movl -(%ebp), %ecx": 1,
                "jmp - <SeAssignSecurity+>;cmpl %ebx, (%ebp);movb $, (%ebp);je  <IoCheckFunctionAccess+>;pushl $": 1,
                "movb $, (%ebp);je  <IoCheckFunctionAccess+>;pushl $;popl %eax;movb $, (%ebp)": 1,
                "je - <SeAssignSecurity+>;cmpb %bl, -(%ebp);jne - <SeAssignSecurity+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;calll - <FsRtlNotifyCleanup+>;testb %al, %al;je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "jne - <FsRtlNotifyCleanup+>;movl $, %eax;jmp - <SeAssignSecurity+>;movl $, %eax;jmp - <SeAssignSecurity+>": 1,
                "movl $, %eax;jmp - <SeAssignSecurity+>;movl $, %eax;jmp - <SeAssignSecurity+>;movl $, %eax": 1,
                "testw %dx, (%edi);movl (%edi), %eax;je - <MmUnmapViewOfSection+>;testl %eax, %eax;je - <RtlSetGroupSecurityDescriptor+>": 1,
                "testl %eax, %eax;je - <RtlSetGroupSecurityDescriptor+>;addl %edi, %eax;jmp - <MmUnmapViewOfSection+>;testb %dh, %dh": 1,
                "je - <MmUnmapViewOfSection+>;leal (%eax,%ebx), %ecx;jmp - <MmUnmapViewOfSection+>;movl (%ebx), %ecx;jmp - <MmUnmapViewOfSection+>": 1,
                "movl , %ecx;leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);movl %edi, -(%ebp)": 1,
                "pushl %eax;movl %ecx, -(%ebp);movl %edi, -(%ebp);calll - <SePrivilegeCheck>;movb %al, (%ebp)": 1,
                "movl $, %esi;jmp - <MmUnmapViewOfSection+>;movl -(%ebp), %esi;testl %esi, %esi;je  <IoCheckFunctionAccess+>": 1,
                "movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);jmp - <MmUnmapViewOfSection+>;movl %eax, %esi": 1,
                "popl %ebx;jmp - <RtlIntegerToChar+>;pushl $;popl %ecx;subl %ebx, %ecx": 1,
                "nop;movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <RtlIntegerToChar+>": 1,
                "jmp - <RtlUnicodeStringToInteger+>;movzwl %ax, %eax;subl $, %eax;jmp - <RtlUnicodeStringToInteger+>;nop": 1,
                "addl $, %edi;jmp - <IoGetDeviceProperty+>;movl $, %eax;jmp - <IoGetDeviceProperty+>;movl $, %esi": 1,
                "jmp - <RtlQueryRegistryValues+>;movl %esi, %eax;jmp - <RtlQueryRegistryValues+>;jmp - <RtlQueryRegistryValues+>;movl (%ebp), %eax": 1,
                "cmpl $, %esi;ja  <IoCheckFunctionAccess+>;movl (%ebp), %eax;leal -(%esi), %ecx;testl %ecx, %ecx": 1,
                "jmp - <IoCheckFunctionAccess+>;jmp - <RtlQueryRegistryValues+>;movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%esi), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll  <RtlIntToUnicodeString+>": 1,
                "pushl %edi;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $": 2,
                "cmpb (%eax), %ah;incl %ebp;js  <IoCheckFunctionAccess+>;popal;outsb (%esi), %dx": 2,
                "js  <IoCheckFunctionAccess+>;orb (%eax), %al;pushl %edx;pushl %esp;decl %esp": 1,
                "addb %dl, (%edx);insb %dx, %es:(%edi);jo  <IoCheckFunctionAccess+>;popal;insb %dx, %es:(%edi)": 1,
                "pushl %ebx;je  <IoCheckFunctionAccess+>;je  <IoCheckFunctionAccess+>;jae  <IoCheckFunctionAccess+>;andl $, %eax": 1,
                "insl %dx, %es:(%edi);outsb %gs:(%esi), %dx;je  <IoCheckFunctionAccess+>;js  <IoCheckFunctionAccess+>;popal": 1,
                "decl %esp;outsb %gs:(%esi), %dx;je  <IoCheckFunctionAccess+>;cmpl $, %eax;int": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <RtlQueryRegistryValues+>;pushl $;pushl $": 1,
                "calll - <DbgPrint>;popl %ecx;popl %ecx;jmp - <RtlQueryRegistryValues+>;jmp - <PoRequestShutdownEvent+>": 1,
                "jmp - <PoRequestShutdownEvent+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <ZwDeleteValueKey>": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwDeleteValueKey>;testl %eax, %eax;jl - <IoCreateSymbolicLink+>": 1,
                "calll - <RtlWriteRegistryValue>;movl %eax, %edi;jmp - <RtlQueryTimeZoneInformation+>;nop;incl %ecx": 1,
                "jmp - <RtlGUIDFromString+>;cmpb $, (%ebp);je - <RtlGeneratedotName+>;leal (%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %edi;jmp - <RtlGeneratedotName+>;jmp - <RtlGeneratedotName+>;movl (%edx), %eax;movw (%eax), %ax": 1,
                "movw %ax, (%ebx);movl %eax, -(%ebp);xorl %eax, %eax;xorl %ecx, %ecx;movb -(%ebp), %cl": 1,
                "movzbl (%ebx), %ecx;addl %eax, %ecx;incl %eax;cmpl $, %eax;movw %dx, (%ebx,%ecx,)": 1,
                "incl %eax;cmpl $, %eax;movw %dx, (%ebx,%ecx,);jb - <IoCheckFunctionAccess+>;addb $, (%ebx)": 1,
                "movb $, (%ebx);jmp - <RtlGeneratedotName+>;cmpw $, %ax;jbe  <IoCheckFunctionAccess+>;movl , %edi": 1,
                "movl , %edi;movzwl %ax, %edx;cmpb $, (%edi,%edx,);movl -(%ebp), %edi;je  <IoCheckFunctionAccess+>": 1,
                "cmpb $, (%edi,%edx,);movl -(%ebp), %edi;je  <IoCheckFunctionAccess+>;pushl $;popl %edx": 1,
                "movw $, (%ebx,%eax,);jmp - <RtlGeneratedotName+>;movw (%ebx), %cx;cmpw $, %cx;movl , %eax": 1,
                "jbe  <IoCheckFunctionAccess+>;movzwl %cx, %ecx;cmpb $, (%eax,%ecx,);je  <IoCheckFunctionAccess+>;xorl %edx, %edx": 1,
                "cmpb $, (%eax,%ecx,);je  <IoCheckFunctionAccess+>;xorl %eax, %eax;incl %eax;jmp  <IoCheckFunctionAccess+>": 1,
                "xorl %edx, %edx;cmpb %dl, (%ebx);movl %edx, -(%ebp);jbe  <IoCheckFunctionAccess+>;pushl $": 1,
                "incl %edx;incl %eax;incl %eax;cmpl %ecx, %edx;jb - <IoCheckFunctionAccess+>": 1,
                "jmp - <RtlInitCodePageTable+>;movb $, (%ebp);jmp - <RtlInitCodePageTable+>;movl %ecx, %edi;subl %eax, %edi": 1,
                "jmp - <RtlInitCodePageTable+>;movl -(%ebp), %eax;cmpw -(%ebp), %ax;jl  <IoCheckFunctionAccess+>;jne - <RtlInitCodePageTable+>": 1,
                "movl (%ebp), %edi;jmp  <IoCheckFunctionAccess+>;movl (%ebp), %edi;jmp  <IoCheckFunctionAccess+>;movl (%ebp), %esi": 1,
                "pushl %eax;pushl %ecx;pushl %eax;pushl %ebx;pushl %eax": 1,
                "subl %esp, (%eax);popaw;imull $, (%ebp), %ebp;insb %dx, %es:(%edi);js  <IoCheckFunctionAccess+>": 1,
                "andb %bh, (%edx);andb %ah, ;cmpb (%eax), %ah;subb (%esi), %cl;js  <IoCheckFunctionAccess+>": 1,
                "arpl %bp, (%ebx);cmpb (%eax), %ah;xorb %bh, (%eax);insb %dx, %es:(%edi);js  <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %eax;incl %ebx;pushl %eax;movl %ebx, (%edi);movb $, (%ebp)": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ZwOpenKey>;testl %eax, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;movl $, (%edi);jmp  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "jb  <IoCheckFunctionAccess+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%eax);jb  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;decl %edi;addb %dh, (%eax);je  <IoCheckFunctionAccess+>;imull $, (%eax), %eax": 1,
                "addb %ch, (%esi);decl %esi;addb %dh, (%eax,%eax);addb %al, (%eax);addb %dl, (%ebx)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ecx), %eax;leal (%edx,%eax), %edx;andl $-, (%edx)": 1,
                "cmpl , %edi;jne  <IoCheckFunctionAccess+>;cmpl , %esi;jne  <IoCheckFunctionAccess+>;andl $-, (%ecx)": 3,
                "movl (%ecx), %edx;cmpl %edx, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ecx), %ebx;leal (%eax,%ebx), %esi": 1,
                "movl (%ecx), %ebx;leal (%eax,%ebx), %esi;movl %esi, -(%ebp);leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %edi": 1,
                "leal -(%esi,%edx,), %edi;leal -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl -(%ebp), %eax;jmp - <NtAdjustPrivilegesToken+>;pushl ;pushl (%eax);calll - <RtlEqualSid>": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;pushl %ebx;pushl ;calll - <RtlEqualSid>;testb %al, %al": 1,
                "andl $-, (%ebx);jmp  <IoCheckFunctionAccess+>;cmpl , %edx;jne  <IoCheckFunctionAccess+>;movl (%edi), %edx": 1,
                "pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax": 3,
                "pushl -(%ebp);calll - <ObAssignSecurity+>;pushl -(%ebp);calll  <SeOpenObjectForDeleteAuditAlarm+>;pushl %edi": 1,
                "calll  <SeOpenObjectForDeleteAuditAlarm+>;pushl %edi;pushl %esi;calll - <ExFreePoolWithTag>;cmpl %edi, -(%ebp)": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;cmpl %edi, -(%ebp);je - <ObAssignSecurity+>;pushl %edi": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);xorl %edi, %edi;jmp - <IoOpenDeviceRegistryKey+>;cmpl %edi, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %ebx;pushl -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;movb $, %cl;movb $, (%eax);calll *;movl $, %esi": 2,
                "jmp - <NtDuplicateToken+>;movl $, %eax;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;movl (%ebp), %eax;andl %edi, (%eax);movl $, %eax;jmp - <PsRestoreImpersonation+>": 1,
                "nop;nop;movl -(%ebp), %eax;jmp  <IoCheckFunctionAccess+>;nop": 2,
                "movl %esi, %edi;shll $, %edi;cmpl %ecx, %edi;je  <IoCheckFunctionAccess+>;testb $, %bl": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp);testl %eax, %eax;jne  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "jae - <SeCreateClientSecurity+>;leal (%ebx,%eax,), %ecx;xorl %edx, %edx;movw (%ecx), %dx;movl %edx, -(%ebp)": 1,
                "andw $, (%ebx);movl (%ecx), %ecx;movl %ecx, -(%ebp);testb $, %cl;je  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax;movl -(%ebp), %esi;cmpl %eax, %esi": 1,
                "movzwl -(%ebp), %edx;cmpl %ecx, %edx;jg - <IoCheckFunctionAccess+>;cmpw %ax, -(%ebp);je - <IoCheckFunctionAccess+>": 1,
                "movl %eax, (%ebx);movzwl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, -(%ebp,%eax,);incl -(%ebp)": 1,
                "movzwl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, -(%ebp,%eax,);incl -(%ebp);movl -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp,%eax,);incl -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "nop;movl -(%ebp), %esp;xorl %esi, %esi;cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>": 2,
                "pushl (%ebp);andl $, %eax;pushl $;leal (%eax,%ecx,), %eax;leal (%esi,%eax,), %eax": 2,
                "calll - <ObCreateObject+>;testb %al, %al;je - <NtOpenThreadToken+>;leal (%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl (%ebp);pushl %edi;pushl %ebx;calll  <SeFilterToken+>": 1,
                "jmp - <NtOpenThreadToken+>;pushl $;pushl (%esi);pushl $;jmp  <IoCheckFunctionAccess+>": 1,
                "cmpl $, (%ebp);je - <IoCheckFunctionAccess+>;leal (%ebp), %ecx;pushl %ecx;pushl (%ebp)": 2,
                "andl $, %eax;leal (%eax,%ecx,), %eax;leal (%esi,%eax,), %eax;jmp - <ObCreateObject+>;pushl $": 1,
                "pushl (%ebp);jmp - <IoCheckFunctionAccess+>;pushl (%ebp);leal (%esi), %edi;pushl $": 1,
                "leal (%esi), %ecx;sbbl %eax, %eax;andl %ecx, %eax;je - <IoCheckFunctionAccess+>;cmpl $, (%ebp)": 1,
                "andl $, (%ebp);movl $, %esi;jmp - <ObCreateObject+>;movl (%ebp), %ebx;orl %esi, (%ebp)": 1,
                "jmp - <NtWaitForSingleObject+>;cmpl $, %ebx;jne  <IoCheckFunctionAccess+>;cmpl %esi, (%ebp);jne - <ObCreateObject+>": 1,
                "testl %ecx, (%ebp);jne  <IoCheckFunctionAccess+>;pushl %edi;calll - <SeTokenIsWriteRestricted>;testb %al, %al": 1,
                "pushl %edi;calll - <SeTokenIsWriteRestricted>;testb %al, %al;jne  <IoCheckFunctionAccess+>;pushl $": 1,
                "movl %edi, (%ecx);movb $, -(%ebp);jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %ebx;notl %eax": 1,
                "jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %ebx;notl %eax;testl %eax, %ebx;jne - <IoCheckFunctionAccess+>": 1,
                "movl $, (%ecx,%eax);andl $, (%eax);addl $, %eax;decl %edx;je  <IoCheckFunctionAccess+>": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movb -(%ebp), %cl;movb %cl, (%eax);movl -(%ebp), %eax": 1,
                "movb %bl, (%eax);jmp - <ObCreateObject+>;movb %bl, -(%ebp);movl $, %esi;movl %ebx, (%ebp)": 1,
                "decl %edx;je - <ObCreateObject+>;jmp - <IoCheckFunctionAccess+>;jmp - <ObCreateObject+>;movl $, %eax": 1,
                "movb $, %cl;movb $, (%eax);calll *;jmp - <NtWaitForSingleObject+>;testl %ebx, (%esi)": 1,
                "movb $, (%eax);calll *;jmp - <NtWaitForSingleObject+>;testl %ebx, (%esi);je - <RtlUpperString+>": 1,
                "movl (%ebp), %eax;movl %edi, (%eax);movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "pushl %esi;pushl (%ebp);calll - <ProbeForWrite>;pushl $;pushl %esi": 2,
                "movl %edi, (%eax);jmp - <SeCreateClientSecurity+>;movl (%eax), %edx;jmp - <SeCreateClientSecurity+>;movl %edi, (%eax)": 1,
                "cmpb $, (%ebp);je  <IoCheckFunctionAccess+>;xorl %ecx, %ecx;movl %ecx, -(%ebp);cmpl (%ebp), %ecx": 1,
                "movl (%ebp), %edx;movl %eax, (%edx,%ecx,);movl (%ebp), %edx;movl %esi, (%edx,%ecx,);incl %ecx": 1,
                "jmp  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl (%ebp), %ecx;movl %eax, (%ecx);movl $, %esi": 1,
                "movl $, (%edi,%esi,);movl (%ebp), %eax;andl %ebx, (%eax,%esi,);jmp  <IoCheckFunctionAccess+>;andl $, (%edi,%esi,)": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl $, (%eax);movl (%ebp), %eax;andl %ebx, (%eax)": 1,
                "calll *;leal -(%ebp), %eax;pushl %eax;calll - <SeReleaseSubjectContext>;pushl $": 2,
                "calll *;jmp - <SeCreateClientSecurity+>;xorl %ecx, %ecx;movl %ecx, -(%ebp);cmpl (%ebp), %ecx": 1,
                "movl (%ebp), %ebx;movl %edx, (%eax,%ebx);incl %ecx;jmp - <IoCheckFunctionAccess+>;nop": 1,
                "movl -(%ebp), %esi;orl $-, -(%ebp);movl -(%ebp), %edi;jmp - <SeCreateClientSecurity+>;testl %edi, %edi": 1,
                "orl $-, -(%ebp);movl -(%ebp), %edi;jmp - <SeCreateClientSecurity+>;testl %edi, %edi;je - <SeCreateClientSecurity+>": 1,
                "movl $, (%eax);xorb %al, %al;jmp - <SeAccessCheck+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl $, (%eax);xorb %al, %al;jmp - <SeAccessCheck+>;pushl %esi;calll - <SeUnlockSubjectContext>": 1,
                "testl %ecx, %ecx;jbe  <IoCheckFunctionAccess+>;leal -(%ecx,%ecx,), %eax;leal (,%eax,), %eax;jmp  <IoCheckFunctionAccess+>": 1,
                "addl %esi, %eax;pushl $;pushl %eax;pushl $;movl %eax, -(%ebp)": 1,
                "calll - <SeAppendPrivileges+>;movl (%ebp), %esi;cmpb $, (%esi);je  <IoCheckFunctionAccess+>;pushl $": 1,
                "jmp - <SeAssignSecurity+>;movl $, %eax;jmp - <NtQueryInformationAtom+>;movl $, %eax;jmp - <NtQueryInformationAtom+>": 1,
                "jmp - <NtQueryInformationAtom+>;pushl (%ebp);calll  <SeDeleteObjectAuditAlarm+>;testb %al, %al;je - <SeAppendPrivileges+>": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);popl %ecx;movl %edx, -(%ebp);movl (%ebx), %edx": 1,
                "movl %edx, -(%ebp);movl (%ebx), %edx;pushl $;movl %edx, -(%ebp);movl (%ebx), %edx": 2,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);popl %ecx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "jmp  <IoCheckFunctionAccess+>;movl $, -(%ebp);movl (%ebp), %edx;testl %edx, %edx;je  <IoCheckFunctionAccess+>": 2,
                "je  <IoCheckFunctionAccess+>;movl (%edx), %ecx;testl %ecx, %ecx;jbe  <IoCheckFunctionAccess+>;leal -(%ecx,%ecx,), %ecx": 1,
                "movl (%edx), %ecx;testl %ecx, %ecx;jbe  <IoCheckFunctionAccess+>;leal -(%ecx,%ecx,), %ecx;leal (,%ecx,), %ecx": 1,
                "pushl $;popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);andl %eax, -(%ebp)": 3,
                "popl %ecx;movl %edx, -(%ebp);movl (%ebp), %edx;testl %edx, %edx;popl %esi": 1,
                "je  <IoCheckFunctionAccess+>;movl (%edx), %ecx;testl %ecx, %ecx;jbe  <IoCheckFunctionAccess+>;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);calll  <SeTokenIsAdmin+>;jmp - <PsLookupThreadByThreadId+>": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;pushl %ebx;pushl %edi;pushl $": 1,
                "jmp - <PsSetProcessWindowStation+>;pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>;jmp - <PsSetProcessWindowStation+>": 1,
                "pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>;jmp - <PsSetProcessWindowStation+>;movl (%eax), %esi": 1,
                "pushl %eax;pushl $;calll - <PsGetCurrentProcessId>;pushl %eax;pushl $": 1,
                "leal (%esi), %eax;pushl %esi;pushl (%esi);pushl (%esi);pushl (%esi)": 1,
                "jmp - <RtlFindMessage+>;movl $, -(%ebp);jmp - <RtlFindMessage+>;calll  <ExRaiseDatatypeMisalignment>;jmp - <RtlFindMessage+>": 1,
                "calll  <ExRaiseDatatypeMisalignment>;jmp - <RtlSetGroupSecurityDescriptor+>;movl %ebx, (%eax);jmp - <RtlSetGroupSecurityDescriptor+>;movl $, -(%ebp)": 1,
                "cmpl %esi, %edi;je  <IoCheckFunctionAccess+>;movl , %eax;negl %eax;shrl $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl , %eax;negl %eax;shrl $, %eax;cmpl %eax, %edi": 1,
                "subl %esi, %ecx;movl %edi, %edx;movl -(%ebp), %ebx;movl %ebx, (%ecx,%eax);movl -(%ebp), %ebx": 2,
                "movl -(%ebp), %ebx;movl %ebx, (%ecx,%eax);movl -(%ebp), %ebx;movl %ebx, (%eax);addl $, %eax": 2,
                "movl %eax, %ebx;movl %ebx, -(%ebp);testl %ebx, %ebx;jne  <IoCheckFunctionAccess+>;movl $, %ebx": 1,
                "jmp - <NtAdjustPrivilegesToken+>;pushl $;movl %edi, %eax;shll $, %eax;pushl %eax": 1,
                "jmp - <NtAdjustPrivilegesToken+>;movl -(%ebp), %edx;testl %edx, %edx;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %edx": 1,
                "testb %ch, %ch;jns  <IoCheckFunctionAccess+>;movl (%eax), %ecx;testl %ecx, %ecx;je - <IoCheckFunctionAccess+>": 1,
                "movl (%eax), %eax;pushl (%eax);pushl -(%ebp);pushl -(%ebp);leal (%ebp), %eax": 1,
                "movb (%ebp), %cl;negb %cl;sbbl %ecx, %ecx;andl %ebx, %ecx;pushl %ecx": 1,
                "jmp - <NtAdjustPrivilegesToken+>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <NtAdjustPrivilegesToken+>": 1,
                "pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <NtAdjustPrivilegesToken+>;movl %edi, %ecx": 1,
                "movl %esi, (%eax);jmp - <RtlGeneratedotName+>;movl $, -(%ebp);movl (%ebp), %edi;movl (%ebp), %ebx": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <SeReleaseSecurityDescriptor>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movb $, (%eax);jmp - <RtlGeneratedotName+>;nop;nop;nop": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);orl $-, -(%ebp);movl (%ebp), %edi": 1,
                "orl $-, -(%ebp);movl (%ebp), %edi;movl (%ebp), %ebx;xorl %esi, %esi;jmp - <RtlGeneratedotName+>": 1,
                "cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp);calll - <SeFreePrivileges>;cmpl %esi, -(%ebp)": 3,
                "calll - <SeFreePrivileges>;cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %esi;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %esi": 2,
                "cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %esi;pushl -(%ebp);pushl -(%ebp)": 1,
                "calll - <SeReleaseSecurityDescriptor>;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %edi, %ecx;calll - <ObfDereferenceObject>": 1,
                "pushl %ecx;pushl (%ebp);movl (%ebp), %ecx;orl (%ebp), %ecx;pushl %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;cmpb $, -(%ebp);je - <RtlGeneratedotName+>;movl %fs:, %eax;pushl %esi": 1,
                "cmpl %ebx, %eax;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %esi": 1,
                "pushl $;movzbl (%esi), %eax;leal (,%eax,), %eax;pushl %eax;pushl $": 2,
                "calll  <SeAuditHardLinkCreation+>;xorl %esi, %esi;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "nop;movl -(%ebp), %esp;movl -(%ebp), %esi;orl $-, -(%ebp);xorl %ebx, %ebx": 3,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;testl %eax, %ebx;jne  <IoCheckFunctionAccess+>;movw (%edi), %ax": 1,
                "jne  <IoCheckFunctionAccess+>;xorl %eax, %eax;jmp  <IoCheckFunctionAccess+>;addl %edi, %eax;leal -(%ebp), %ecx": 1,
                "jmp  <IoCheckFunctionAccess+>;addl %edi, %eax;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %ebx": 1,
                "pushl %eax;calll  <SeDeleteObjectAuditAlarm+>;cmpb $, -(%ebp);je - <SeOpenObjectAuditAlarm+>;cmpb $, (%ebp)": 1,
                "testb $, %al;je  <IoCheckFunctionAccess+>;testb %ah, %ah;jns  <IoCheckFunctionAccess+>;movl (%edi), %eax": 1,
                "pushl (%eax);movl -(%ebp), %eax;pushl %esi;pushl (%esi);pushl (%esi)": 1,
                "pushl (%esi);pushl (%esi);pushl (%eax);pushl -(%ebp);pushl -(%ebp)": 3,
                "movw %cx, (%esi);calll - <RtlCopyUnicodeString>;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%esi), %eax": 1,
                "pushl %esi;calll - <RtlCopyUnicodeString>;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "calll - <RtlCopyUnicodeString>;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %ebx;pushl -(%ebp)": 1,
                "jmp - <SeCaptureSecurityDescriptor+>;movl (%ebp), %eax;movl %ebx, (%eax);jmp - <SeCaptureSecurityDescriptor+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "calll  <ExRaiseDatatypeMisalignment>;jmp - <SeCreateClientSecurity+>;nop;nop;nop": 2,
                "nop;movl -(%ebp), %esi;jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %esp;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movl -(%ebp), %eax;jmp - <SeCaptureSecurityDescriptor+>;movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "jmp - <SeCaptureSecurityDescriptor+>;movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl $": 1,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;pushl (%esi);calll  <SeOpenObjectForDeleteAuditAlarm+>": 1,
                "jmp - <NtQuerySystemInformation+>;movl %edi, (%eax);jmp - <NtQuerySystemInformation+>;cmpl $, %eax;jne  <IoCheckFunctionAccess+>": 1,
                "cmpl %eax, %ebx;jb  <IoCheckFunctionAccess+>;movl %edi, (%eax);movb $, (%esi);pushl $": 1,
                "je - <NtQuerySystemInformation+>;movb $, -(%ebp);pushl %eax;calll  <SeOpenObjectForDeleteAuditAlarm+>;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll  <SeOpenObjectForDeleteAuditAlarm+>;movl %eax, -(%ebp);testl %eax, %eax;jl  <IoCheckFunctionAccess+>": 1,
                "nop;movl -(%ebp), %esp;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;movl (%ebp), %esi": 1,
                "cmpb $, (%ebp);jne - <ObReferenceObjectByName+>;jmp  <IoCheckFunctionAccess+>;movzbl (%eax), %eax;jmp - <ObReferenceObjectByName+>": 1,
                "calll - <ExFreePoolWithTag>;movl %esi, (%ebx);movl $, %eax;jmp - <ObReferenceObjectByName+>;movl $, %eax": 1,
                "cmpl %edi, (%ebp);jne  <IoCheckFunctionAccess+>;pushl %edi;movl (%ebp), %esi;pushl (%esi)": 2,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <ObReferenceObjectByName+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <RtlCopyLuid+>;movl $, %eax;jmp - <NtAdjustPrivilegesToken+>": 1,
                "cmpl %ebx, (%ebp);jne  <IoCheckFunctionAccess+>;pushl %ebx;movl (%ebp), %eax;pushl (%eax)": 1,
                "addl %eax, %ebx;incl %esi;cmpl (%ebp), %esi;jae - <RtlCopyLuid+>;jmp - <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl $, %eax;jmp - <RtlCopyLuid+>;movl (%ebp), %eax": 1,
                "cmpl $, (%ebp);jne  <IoCheckFunctionAccess+>;pushl $;movl (%ebp), %eax;pushl (%eax)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <RtlLengthRequiredSid>;addl $, %eax;andl $-, %eax;movl -(%ebp), %ecx": 1,
                "incl -(%ebp);addl %eax, %ebx;movl -(%ebp), %eax;cmpl (%ebp), %eax;jb - <IoCheckFunctionAccess+>": 1,
                "movl -(%ebp), %eax;cmpl (%ebp), %eax;jb - <IoCheckFunctionAccess+>;movl (%ebp), %eax;jmp - <RtlCopyLuid+>": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);jmp - <RtlCopyLuid+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "jmp - <RtlCopyLuid+>;calll  <ExRaiseDatatypeMisalignment>;movl , %ecx;jmp - <RtlCopyLuid+>;nop": 1,
                "movl %esi, (%ebx);movl $, %eax;jmp - <RtlCopyLuid+>;nop;nop": 1,
                "movb $, %cl;movb $, (%eax);calll *%esi;jmp - <SeUnlockSubjectContext+>;xorb %al, %al": 1,
                "movb %cl, (%eax);calll *;jmp - <RtlGeneratedotName+>;movb $, %cl;movb $, (%eax)": 1,
                "movb $, (%eax);calll *;jmp - <RtlGeneratedotName+>;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "jmp - <RtlSetGroupSecurityDescriptor+>;movl %ebx, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 1,
                "pushl %eax;pushl %eax;pushl $;calll - <KeBugCheckEx>;movl (%esi), %eax": 1,
                "je  <IoCheckFunctionAccess+>;pushl (%ebp);calll  <SeMarkLogonSessionForTerminationNotification+>;pushl $;pushl %esi": 1,
                "calll *;jmp - <IoOpenDeviceRegistryKey+>;jmp - <IoOpenDeviceRegistryKey+>;movl -(%ebp), %ecx;calll - <SeTokenType+>": 1,
                "calll  <ExRaiseDatatypeMisalignment>;jmp - <NtQuerySecurityObject+>;movl $, %edi;movl %edi, -(%ebp);jmp - <NtQuerySecurityObject+>": 1,
                "movl (%ebp), %ebx;movl -(%ebp), %esi;jmp - <NtQuerySecurityObject+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "addl $, %esp;subl %esi, %edi;movl %edi, (%esi);jmp - <SeQuerySecurityDescriptorInfo+>;nop": 1,
                "pushl %ecx;pushl $;calll - <KeBugCheckEx>;jmp - <CcUnpinDataForThread+>;jmp - <CcUnpinDataForThread+>": 1,
                "jmp - <RtlCopyLuid+>;pushl (%ebp);pushl %eax;calll  <SeOpenObjectForDeleteAuditAlarm+>;testl %eax, %eax": 1,
                "movl $, (%ebp);calll - <ObfDereferenceObject>;jmp - <RtlCopyLuid+>;jmp - <RtlCopyLuid+>;jmp - <RtlCopyLuid+>": 1,
                "xorb %al, %al;jmp - <PsRestoreImpersonation+>;movl %edi, -(%ebp);jae  <IoCheckFunctionAccess+>;movl (%ebp), %ecx": 1,
                "movl (%esi), %edx;cmpl -(%ecx), %edx;jne  <IoCheckFunctionAccess+>;movl (%esi), %edx;xorl (%ecx), %edx": 2,
                "cmpl (%ebp), %ebx;je  <IoCheckFunctionAccess+>;incl -(%ebp);movl -(%ebp), %ecx;addl $, %esi": 1,
                "incl -(%ebp);movl -(%ebp), %ecx;addl $, %esi;cmpl (%ebp), %ecx;jae - <PsRestoreImpersonation+>": 1,
                "testb %al, %al;je  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax,%ebx,), %eax;xorl (%esi), %eax": 2,
                "jmp - <PsRestoreImpersonation+>;movb $, -(%ebp);jmp - <PsRestoreImpersonation+>;nop;nop": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <PsRestoreImpersonation+>;pushl %ebx;pushl %edi": 1,
                "pushl %edi;calll  <SeAssignSecurityEx+>;jmp - <RtlInitializeRangeList+>;pushl %edi;calll - <SeTokenIsWriteRestricted+>": 1,
                "calll - <ObReferenceObjectByName+>;jmp - <RtlCopyLuid+>;nop;nop;nop": 2,
                "nop;movl -(%ebp), %eax;movl -(%ebp), %esp;jmp - <RtlCopyLuid+>;nop": 1,
                "jmp  <IoCheckFunctionAccess+>;cmpw $, -(%ebp);je  <IoCheckFunctionAccess+>;cmpw $, -(%ebp);jne - <IoRegisterDeviceInterface+>": 1,
                "movl %esi, %ecx;movl %eax, ;setne -(%ebp);calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "movl %fs:, %eax;incl (%eax);popl %esi;jne  <IoCheckFunctionAccess+>;leal (%eax), %ecx": 1,
                "movb $, (%eax);calll *;cmpb %bl, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "nop;movl -(%ebp), %esp;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;pushl $": 1,
                "orl $-, -(%ebp);jmp - <RtlCopyLuid+>;movl $, %edi;jmp - <RtlCopyLuid+>;movb $, (%eax)": 1,
                "jmp - <RtlCopyLuid+>;movl $, %edi;jmp - <RtlCopyLuid+>;movb $, (%eax);movb $, %cl": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;pushl $": 1,
                "pushl %ecx;pushl $;pushl $;pushl $;pushl $": 1,
                "incl %ebx;pushl %ebx;pushl (%esi);calll - <ExAcquireResourceExclusiveLite>;movl (%esi), %eax": 1,
                "pushl %ebx;pushl (%esi);calll - <ExAcquireResourceExclusiveLite>;movl (%esi), %eax;movzbl (%eax), %eax": 1,
                "cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl %esi;calll  <SeTokenIsAdmin+>": 1,
                "je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl %esi;calll  <SeTokenIsAdmin+>;leal (%esi), %eax": 1,
                "movl -(%ebp), %eax;jmp - <IoCheckFunctionAccess+>;cmpl %ecx, (%ebp);jb  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "pushl %esi;calll  <SeOpenObjectForDeleteAuditAlarm+>;testb %al, %al;jne  <IoCheckFunctionAccess+>;movl $, %ebx": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movzwl (%eax), %eax;addl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movb $, %cl;calll *;movl $, %ebx;jmp  <IoCheckFunctionAccess+>;pushl %eax": 1,
                "pushl -(%ebp);calll - <ObReferenceObjectByName+>;movl %ebx, %eax;jmp - <RtlCopyLuid+>;nop": 1,
                "movl (%esi), %eax;pushl (%eax,%edi,);pushl -(%ebp);calll - <RtlEqualSid>;movb %al, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;pushl %edi;pushl %esi;calll - <RtlGeneratedotName+>;testb %al, %al": 1,
                "movb $, -(%ebp);andl $, -(%ebp);jmp  <IoCheckFunctionAccess+>;movl $, -(%ebp);cmpb $, -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <ObReferenceObjectByName+>;movl -(%ebp), %eax;jmp - <IoCheckFunctionAccess+>": 2,
                "orl $-, -(%ebp);incl %edi;jmp - <IoCheckFunctionAccess+>;nop;nop": 1,
                "lretl $;fmulp %st();pushl %edx;addb %ch, %ch;lretl $": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;movb $, (%eax);jmp - <IoOpenDeviceRegistryKey+>;cmpb %bl, %cl;movb $, ": 1,
                "je  <IoCheckFunctionAccess+>;pushl (%ebp);calll  <SeTokenIsAdmin+>;jmp - <NtVdmControl+>;cmpl $, %esi": 4,
                "movl %edi, -(%ebp);jmp - <NtVdmControl+>;cmpl $, %esi;jne  <IoCheckFunctionAccess+>;cmpl %edi, %eax": 1,
                "movl $, -(%ebp);jmp - <NtVdmControl+>;movw %cx, (%eax);movw (%esi), %cx;movw %cx, (%eax)": 1,
                "movw %cx, (%eax);movw (%esi), %cx;movw %cx, (%eax);movw (%esi), %cx;movw %cx, (%eax)": 3,
                "movl %fs:, %eax;movl %eax, -(%ebp);movl (%eax), %eax;movl (%eax), %edi;movl %edi, -(%ebp)": 1,
                "calll - <RtlTraceDatabaseAdd+>;jmp - <NtVdmControl+>;leal (%edi), %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;orl $-, (%esi)": 1,
                "jmp - <RtlSelfRelativeToAbsoluteSD+>;pushl (%ebp);calll - <IoReportResourceForDetection+>;movl %eax, %edi;testl %edi, %edi": 1,
                "leal (%ecx,%edx), %edi;cmpl %ecx, %edi;jb  <IoCheckFunctionAccess+>;movl %ecx, %eax;addl %edx, %eax": 1,
                "incl %eax;jmp - <SeCreateClientSecurityFromSubjectContext+>;leal (%esi), %edi;movl %edi, -(%ebp);movl $, %eax": 1,
                "movl -(%ebp), %eax;jmp - <SeCreateClientSecurityFromSubjectContext+>;movl (%ebp), %ebx;cmpl %esi, %ebx;je - <CcZeroData+>": 1,
                "pushl %edi;calll  <IoWMIExecuteMethod+>;movl %eax, -(%ebp);testl %eax, %eax;jge  <IoCheckFunctionAccess+>": 1,
                "xaddl %eax, (%ecx);movl -(%ebp), %eax;jmp - <CcZeroData+>;leal (%ebx), %eax;pushl $": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl %esi, %eax;jmp - <CcZeroData+>;movl (%ebx), %eax": 1,
                "leal (%eax), %edi;movl $, %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movzwl %ax, %eax;incl %eax;incl %eax;pushl %eax;pushl (%esi)": 2,
                "calll - <ProbeForWrite>;pushl %edi;addl $, %esi;pushl %esi;calll - <RtlCopyUnicodeString>": 1,
                "xaddl %eax, (%ecx);orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <CcZeroData+>;pushl %esi": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %eax;movzbl (%eax), %eax;leal (,%eax,), %eax": 1,
                "calll ;movl %eax, %esi;testl %esi, %esi;je  <IoCheckFunctionAccess+>;movb -(%ebp), %al": 1,
                "movl %eax, (%esi);calll - <PsIsThreadTerminating+>;cmpb $, -(%ebp);movl %eax, (%esi);je  <IoCheckFunctionAccess+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <IoCheckFunctionAccess+>": 1,
                "pushl %ebx;movl -(%ebp), %edx;leal (,%edx,), %ebx;movl %ebx, (%ebp);movl $, %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;je  <IoCheckFunctionAccess+>;pushl $": 1,
                "testl %eax, %eax;je  <IoCheckFunctionAccess+>;movw $, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 2,
                "movw $, (%eax);movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 2,
                "movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;xorl %edx, %edx;cmpl %edx, %edi": 1,
                "movl (%edi), %ecx;movl %ecx, (%eax);jmp  <IoCheckFunctionAccess+>;movl %ecx, (%eax);movl (%edi), %ecx": 1,
                "jmp  <IoCheckFunctionAccess+>;pushl $;popl %edx;calll ;testl %eax, %eax": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);movl , %eax;cmpl %eax, -(%ebp);je  <IoCheckFunctionAccess+>": 1,
                "xaddl %eax, (%ecx);movl , %eax;cmpl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;movl %eax, -(%ebp)": 1,
                "je  <IoCheckFunctionAccess+>;movl %eax, -(%ebp);jmp - <IoCheckFunctionAccess+>;popl %ebx;popl %edi": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);jmp - <SeRegisterLogonSessionTerminatedRoutine+>;testb $, %al;je - <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <SeRegisterLogonSessionTerminatedRoutine+>;pushl $;pushl $": 1,
                "calll - <ExFreePoolWithTag>;jmp - <SeRegisterLogonSessionTerminatedRoutine+>;pushl $;pushl $;pushl (%esi)": 1,
                "pushl %esi;leal (%eax,%eax), %eax;pushl %eax;calll - <SeRegisterLogonSessionTerminatedRoutine+>;testb %bl, %bl": 2,
                "pushl %eax;calll - <SeRegisterLogonSessionTerminatedRoutine+>;testb %bl, %bl;movl %eax, %edi;je  <IoCheckFunctionAccess+>": 1,
                "jne - <RtlValidRelativeSecurityDescriptor+>;jmp - <IoCheckFunctionAccess+>;pushl %esi;calll - <SeRegisterLogonSessionTerminatedRoutine+>;jmp - <RtlValidRelativeSecurityDescriptor+>": 1,
                "movl $, %eax;jmp - <MmUnmapViewInSessionSpace+>;movb $, -(%ebp);movb $, (%ebp);jmp - <MmUnmapViewInSessionSpace+>": 1,
                "rep  movsb (%esi), %es:(%edi);popl %edi;jmp - <IoGetDeviceProperty+>;movl $, %ebx;jmp - <IoGetDeviceProperty+>": 1,
                "movl %eax, (%esi);je - <IoGetDeviceProperty+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "jmp - <IoGetDeviceProperty+>;movl %eax, (%esi);jmp - <IoGetDeviceProperty+>;xorl %edi, %edi;jmp - <IoGetDeviceProperty+>": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "pushl $;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;movl $, -(%ebp)": 1,
                "js  <IoCheckFunctionAccess+>;subl $, %eax;addb %dh, (%edx);addb %bh, (%eax);andl $, %eax": 1,
                "int;int;int;movl $, %eax;jmp - <IoGetDeviceProperty+>": 1,
                "pushl %ebx;calll - <IoGetDeviceProperty+>;pushl %ebx;calll - <RtlNtStatusToDosErrorNoTeb+>;cmpb $, (%ebp)": 1,
                "calll - <RtlNtStatusToDosErrorNoTeb+>;cmpb $, (%ebp);je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);movl $, %eax": 1,
                "pushl $;pushl (%ebp);calll - <ObReferenceObjectByPointer>;jmp - <IoWMIQuerySingleInstance+>;movl (%edi), %eax": 1,
                "movl (%ebp), %ecx;shrl %eax;leal (%ecx,%eax,), %eax;andw $, (%eax);andw $, (%eax)": 1,
                "movl -(%ebp), %eax;jmp - <IoGetDeviceProperty+>;subl $, %ebx;jne  <IoCheckFunctionAccess+>;movl $, %ebx": 1,
                "jmp - <IoGetDeviceProperty+>;jmp - <IoGetDeviceProperty+>;je  <IoCheckFunctionAccess+>;movl %ebx, %eax;subl $, %eax": 1,
                "jb  <IoCheckFunctionAccess+>;movl -(%ebp), %edi;pushl $;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl $;pushl -(%ebp);pushl %edi;pushl (%esi)": 1,
                "pushl $;pushl -(%ebp);pushl %edi;pushl (%esi);pushl (%esi)": 1,
                "pushl (%esi);pushl $;pushl %esi;calll  <IoWMIExecuteMethod+>;testl %eax, %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl $, %eax;jmp  <IoCheckFunctionAccess+>;testb $, %al;je  <IoCheckFunctionAccess+>": 1,
                "movl $, %eax;jmp  <IoCheckFunctionAccess+>;testb $, %al;je  <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "pushl $;calll - <LdrFindResourceDirectory_U+>;jmp - <IoGetDeviceProperty+>;subl $, %ebx;je  <IoCheckFunctionAccess+>": 1,
                "pushl (%esi);calll  <IoWMIExecuteMethod+>;andl $, -(%ebp);jmp - <IoGetDeviceProperty+>;jmp - <IoGetDeviceProperty+>": 1,
                "cmpl %ecx, %edx;jb - <CcZeroData+>;leal -(%ebp), %ecx;pushl %ecx;pushl $": 1,
                "cmpl $, %edx;jne - <CcZeroData+>;xorl %eax, %eax;pushl %eax;pushl %eax": 1,
                "calll - <WmiGetClock+>;jmp - <IoGetDeviceProperty+>;addb %al, (%eax);int;int": 1,
                "jmp - <IoReportResourceForDetection+>;calll - <ObfDereferenceObject>;andl $, -(%ebp);movl -(%ebp), %eax;jmp - <IoWMIRegistrationControl+>": 1,
                "calll - <ObfDereferenceObject>;andl $, -(%ebp);jmp - <RtlSelfRelativeToAbsoluteSD+>;movl $, (%edx);jmp - <IoWMIRegistrationControl+>": 1,
                "calll - <KeReleaseMutex>;movl $, %eax;jmp - <IoReportResourceForDetection+>;decl %eax;jne - <IoWMIRegistrationControl+>": 1,
                "je - <FsRtlOplockFsctrl+>;cmpl $, (%ebp);je - <FsRtlOplockFsctrl+>;movl $, (%ebp);jmp - <FsRtlOplockFsctrl+>": 1,
                "cmpl $, (%ebp);je - <FsRtlOplockFsctrl+>;movl $, (%ebp);jmp - <FsRtlOplockFsctrl+>;movl (%ebp), %eax": 1,
                "movl %eax, (%ebp);jge - <FsRtlOplockFsctrl+>;pushl (%ebp);movl (%ebp), %eax;pushl (%eax)": 1,
                "pushl (%eax);calll - <ObCloseHandle>;jmp - <FsRtlOplockFsctrl+>;pushl (%ebp);movl (%ebp), %eax": 1,
                "orl $, (%eax);jmp - <FsRtlOplockFsctrl+>;pushl %ebx;leal (%edi,%edi), %ebx;pushl $": 1,
                "pushl (%ebp);pushl %ebx;calll - <IoGetDeviceProperty+>;movl (%ebp), %eax;andl $, (%eax)": 1,
                "cmpl (%ebp), %eax;popl %ebx;je  <IoCheckFunctionAccess+>;pushl $;pushl %eax": 1,
                "jmp - <RtlUpcaseUnicodeStringToOemString+>;movl -(%ebp), %esi;pushl %esi;calll - <RtlUpcaseUnicodeStringToOemString+>;movl (%esi), %ecx": 1,
                "jmp - <LdrFindResourceDirectory_U+>;jmp - <LdrFindResourceDirectory_U+>;testb $, %al;je  <IoCheckFunctionAccess+>;movl (%esi), %eax": 1,
                "je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);movl $, -(%ebp);jne  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "movl %eax, (%esi);je  <IoCheckFunctionAccess+>;pushl %esi;pushl (%ebp);leal (%esi), %ecx": 1,
                "je  <IoCheckFunctionAccess+>;cmpl $, %eax;je  <IoCheckFunctionAccess+>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %edx, (%ecx);movl %eax, -(%ebp);leal -(%ebp), %eax;cmpl %eax, -(%ebp);je - <LdrFindResourceDirectory_U+>": 1,
                "pushl (%ebp);pushl %edi;calll - <RtlUpcaseUnicodeStringToOemString+>;movl (%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, (%ecx);jmp - <LdrFindResourceDirectory_U+>;movl (%eax), %edx": 1,
                "jmp - <RtlValidRelativeSecurityDescriptor+>;addl %eax, %edx;jmp - <RtlValidRelativeSecurityDescriptor+>;leal (%edi), %esi;jmp - <RtlValidRelativeSecurityDescriptor+>": 1,
                "addl %eax, %edx;jmp - <RtlValidRelativeSecurityDescriptor+>;leal (%edi), %esi;jmp - <RtlValidRelativeSecurityDescriptor+>;pushl $": 1,
                "jmp - <RtlValidRelativeSecurityDescriptor+>;leal (%edi), %esi;jmp - <RtlValidRelativeSecurityDescriptor+>;pushl $;movl %edi, %eax": 1,
                "cmpl %eax, (%edi);je - <IoGetDeviceProperty+>;movb $, -(%ebp);jmp - <IoGetDeviceProperty+>;pushl %edi": 1,
                "pushl %ecx;pushl %eax;pushl -(%ebp);pushl %ebx;calll - <RtlValidRelativeSecurityDescriptor+>": 1,
                "movl %edi, %esi;subl %eax, %esi;movl %esi, (%eax);movl (%ebp), %esi;jmp - <RtlValidRelativeSecurityDescriptor+>": 1,
                "subl %eax, %esi;movl %esi, (%eax);movl (%ebp), %esi;jmp - <RtlValidRelativeSecurityDescriptor+>;movl %fs:, %eax": 1,
                "movl $, (%esi);movl %esi, (%esi);calll - <ExQueueWorkItem>;jmp - <RtlValidRelativeSecurityDescriptor+>;incl (%ebx)": 1,
                "movl (%esi), %ecx;movl (%ebx), %eax;cmpl (%eax), %ecx;pushl %edi;movl (%ebx), %edi": 1,
                "movl (%ebx), %eax;cmpl (%eax), %ecx;pushl %edi;movl (%ebx), %edi;movl %ecx, (%ebp)": 1,
                "jmp - <RtlValidRelativeSecurityDescriptor+>;pushl %ebx;calll  <IoWMIExecuteMethod+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "jmp - <IoGetDeviceProperty+>;movw (%ebx), %ax;cmpw $-, %ax;jne  <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "jne  <IoCheckFunctionAccess+>;movl $, %eax;jmp  <IoCheckFunctionAccess+>;movzwl %ax, %eax;cmpl $, (%ebx)": 1,
                "movl %eax, -(%ebp);jmp - <IoGetDeviceProperty+>;movl (%esi), %eax;testl %eax, %eax;je - <RtlValidRelativeSecurityDescriptor+>": 1,
                "movl (%esi), %eax;testl %eax, %eax;je - <RtlValidRelativeSecurityDescriptor+>;pushl (%esi);pushl -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl $, -(%ebp);movl -(%ebp), %eax;pushl $;pushl (%eax)": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %ecx;movl %ecx, (%esi);jmp - <IoGetDeviceProperty+>": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <IoGetDeviceProperty+>;movl %eax, %edi": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "pushl -(%ebp);calll - <ObCloseHandle>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;pushl %ebx": 1,
                "cmpl %esi, %eax;movl %eax, (%ebp);je - <ObCreateObjectType+>;jmp - <IoCheckFunctionAccess+>;jmp - <ObCreateObjectType+>": 1,
                "pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>;jmp - <RtlStringFromGUID+>;pushl $": 1,
                "testb %al, %al;je - <RtlSelfRelativeToAbsoluteSD+>;movl (%ebp), %eax;subl %edi, %edx;movl %edx, (%eax)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %eax;calll  <IoWMIExecuteMethod+>;cmpl %ebx, %eax;movl %eax, (%ebp);jge - <RtlAbsoluteToSelfRelativeSD+>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <RtlQueryRegistryValues>;testl %eax, %eax": 1,
                "movl %eax, (%ebp);jmp  <IoCheckFunctionAccess+>;movl $, (%ebp);cmpl %ebx, (%ebp);jl  <IoCheckFunctionAccess+>": 2,
                "jmp  <IoCheckFunctionAccess+>;movl $, (%ebp);cmpl %ebx, (%ebp);jl  <IoCheckFunctionAccess+>;movzwl -(%ebp), %edx": 1,
                "jl  <IoCheckFunctionAccess+>;movzwl -(%ebp), %edx;incl %edx;incl %edx;leal (%edx), %eax": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;imull %ecx, %eax;cmpl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, %esi;addl %eax, %ebx;shrl $, %ecx;xorl %eax, %eax;movl %ebx, %edi": 1,
                "jmp  <IoCheckFunctionAccess+>;movl $, (%ebp);pushl -(%ebp);calll - <IoGetDeviceProperty+>;jmp - <RtlAbsoluteToSelfRelativeSD+>": 1,
                "calll - <IoGetDeviceProperty+>;jmp - <RtlAbsoluteToSelfRelativeSD+>;movl $, (%ebp);jmp - <RtlAbsoluteToSelfRelativeSD+>;nop": 1,
                "pushl $;addb %ah, (%ebp);arpl %ax, (%eax);je  <IoCheckFunctionAccess+>;jne  <IoCheckFunctionAccess+>": 1,
                "je  <IoCheckFunctionAccess+>;imull $, (%eax), %eax;addb %al, (%eax);int;int": 1,
                "testl %eax, %ecx;jne - <IoGetDeviceProperty+>;orl %ecx, %eax;movl $, %ecx;movl %eax, (%esi)": 1,
                "orl $, (%ebx);orl %eax, (%esi);pushl %edi;pushl $;calll - <KeReleaseMutex>": 1,
                "jmp - <RtlStringFromGUID+>;testb $, (%esi);je - <RtlStringFromGUID+>;orl $, (%ebx);andb $-, (%esi)": 1,
                "movl (%ebp), %ecx;addl $, %esi;leal (%eax), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl (%edx), %esi;movl %esi, (%eax);movl %ecx, (%eax);movl %eax, (%esi);movl %eax, (%edx)": 1,
                "pushl %edi;pushl $;calll - <IoGetDeviceProperty+>;popl %ebx;jmp - <RtlStringFromGUID+>": 1,
                "jmp - <IoGetDeviceProperty+>;pushl $;pushl -(%ebp);calll  <IoWMIExecuteMethod+>;jmp - <IoGetDeviceProperty+>": 1,
                "jmp - <IoGetDeviceProperty+>;jmp - <IoGetDeviceProperty+>;cmpb $, (%esi);jne - <RtlAbsoluteToSelfRelativeSD+>;pushl $": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp - <RtlSelfRelativeToAbsoluteSD+>": 2,
                "movl , %esi;testl %esi, %esi;je  <IoCheckFunctionAccess+>;movl (%ebp), %edi;movl %edx, %ecx": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne - <ExReleaseRundownProtection+>;pushl $": 1,
                "jmp - <IoCheckFunctionAccess+>;movl %eax, %edi;jmp - <SeCreateClientSecurityFromSubjectContext+>;movb $, -(%ebp);jmp - <SeCreateClientSecurityFromSubjectContext+>": 1,
                "jmp - <SeCreateClientSecurityFromSubjectContext+>;movb $, -(%ebp);jmp - <SeCreateClientSecurityFromSubjectContext+>;cmpb %bl, -(%ebp);jne - <SeCreateClientSecurityFromSubjectContext+>": 1,
                "jmp - <SeCreateClientSecurityFromSubjectContext+>;cmpb %bl, -(%ebp);jne - <SeCreateClientSecurityFromSubjectContext+>;pushl %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl %edi;calll - <KeWaitForSingleObject>;jmp - <SeCreateClientSecurityFromSubjectContext+>;movl $, %eax": 1,
                "jmp - <PsSetProcessWindowStation+>;movl %eax, %esi;testl %esi, %esi;jne  <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;xorl %esi, %esi;jmp - <PsSetProcessWindowStation+>;pushl $": 1,
                "movl (%eax,%ebx), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl %eax;pushl -(%ebp)": 1,
                "calll - <ExRundownCompleted+>;addl $, %ebx;cmpl %edi, %ebx;jb - <IoCheckFunctionAccess+>;pushl %edi": 1,
                "calll - <ExRundownCompleted+>;incl -(%ebp);movl -(%ebp), %ebx;addl $, %esi;cmpl $, -(%ebp)": 1,
                "pushl (%edi);calll - <PsSetProcessWindowStation+>;movl %eax, %esi;testl %esi, %esi;je - <NtQueryInformationAtom+>": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je - <NtQueryInformationAtom+>;movl %ebx, (%ebp);movl -(%ebp), %eax": 1,
                "je - <NtQueryInformationAtom+>;movl (%ebp), %ecx;movl (%ebx), %eax;leal (%eax,%ecx,), %eax;movl %esi, -(%ebp)": 1,
                "movl (%ebx), %eax;leal (%eax,%ecx,), %eax;movl %esi, -(%ebp);movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "movl %ecx, %edx;movl (%esi,%ecx,), %ecx;shll $, %edx;subl %edx, %eax;movl %eax, %edx": 1,
                "shrl $, %edx;movl (%ecx,%edx,), %ecx;jmp - <ObCreateObject+>;movl %edi, %ecx;calll - <ExfAcquirePushLockExclusive>": 1,
                "movl (%ecx,%edx,), %ecx;jmp - <ObCreateObject+>;movl %edi, %ecx;calll - <ExfAcquirePushLockExclusive>;movl %edi, %ecx": 1,
                "jne - <RtlRemoveUnicodePrefix+>;movl -(%ebp), %eax;jmp - <RtlRemoveUnicodePrefix+>;cmpb $, (%ebp);je - <RtlRemoveUnicodePrefix+>": 1,
                "je - <RtlRemoveUnicodePrefix+>;andl $, -(%ebp);jmp - <RtlRemoveUnicodePrefix+>;movl %edi, %ecx;calll - <ExfAcquirePushLockExclusive>": 1,
                "movl -(%ebp), %ecx;calll - <ExfReleasePushLock>;jmp - <RtlRemoveUnicodePrefix+>;movb $, %cl;movb %cl, (%esi)": 1,
                "jmp - <NtClose+>;movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax;jmp - <NtClose+>": 1,
                "calll - <SeCreateClientSecurityFromSubjectContext+>;jmp - <SeCreateClientSecurityFromSubjectContext+>;pushl %ecx;pushl %eax;pushl %edx": 1,
                "leal (%eax,%edx), %esi;movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 2,
                "pushl %eax;movl $, (%esi);calll - <RtlWalkFrameChain>;pushl $;pushl $": 2,
                "movl %fs:, %eax;movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %eax;pushl $": 1,
                "leal (%ecx), %eax;andl $, %eax;leal (%eax,%eax,), %eax;shll $, %eax;leal (%eax,%edx), %esi": 1,
                "je  <IoCheckFunctionAccess+>;movl %fs:, %eax;pushl (%eax);pushl %ebx;pushl $": 1,
                "je - <IoCheckFunctionAccess+>;pushl $;pushl -(%ebp);pushl (%ebp);pushl %ebx": 1,
                "testl %eax, %eax;jge - <RtlRemoveUnicodePrefix+>;jmp  <IoCheckFunctionAccess+>;andl $, (%eax);jmp - <RtlRemoveUnicodePrefix+>": 1,
                "leal (%esi), %eax;movl %eax, (%edi);testl %eax, %eax;jmp - <IoCheckFunctionAccess+>;movl $, %eax": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <NtCreateEvent+>;movl $, %eax;jmp - <NtCreateEvent+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <RtlUnicodeStringToAnsiString+>;nop;nop": 1,
                "movl -(%ebp), %eax;jmp - <RtlUnicodeStringToAnsiString+>;nop;nop;nop": 1,
                "movl %ebx, (%eax);movl (%esi), %eax;movl %eax, (%esi);orl $-, -(%ebp);jmp - <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "je - <ObReferenceObjectByName+>;movl $, (%eax);jmp - <ObReferenceObjectByName+>;testb %bl, %bl;je - <PsGetProcessExitTime+>": 1,
                "jmp - <IoCheckFunctionAccess+>;movl %edi, (%esi);jmp - <PsGetProcessExitTime+>;movl , %eax;cmpl %eax, %edi": 1,
                "movl (%edi), %eax;movl %eax, (%edi);jmp - <NtSetEvent+>;movl $, -(%ebp);movl %ebx, (%edi)": 1,
                "movl , %ecx;movl %ecx, ;jmp  <IoCheckFunctionAccess+>;cmpl %edi, %ebx;jne  <IoCheckFunctionAccess+>": 1,
                "calll  <MmMapUserAddressesToPage+>;jmp - <IoWMIRegistrationControl+>;jmp - <IoGetDeviceInterfaces+>;nop;nop": 1,
                "jne  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl ;pushl ;calll - <SeSinglePrivilegeCheck>": 1,
                "jbe  <IoCheckFunctionAccess+>;calll  <ExRaiseAccessViolation>;pushl $;movzwl -(%ebp), %eax;pushl %eax": 1,
                "andl $, -(%ebp);leal -(%ebp), %ebx;movl %ebx, -(%ebp);movl (%ebp), %eax;subl $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl $, -(%ebp);jmp  <IoCheckFunctionAccess+>;nop;nop": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <IoWMIRegistrationControl+>;testb %cl, %cl;jne - <IoCheckFunctionAccess+>": 1,
                "jmp - <IoWMIRegistrationControl+>;testb %cl, %cl;jne - <IoCheckFunctionAccess+>;pushl %esi;pushl %ebx": 1,
                "jb  <IoCheckFunctionAccess+>;cmpl %ecx, (%ebp);movl %ecx, -(%ebp);jae  <IoCheckFunctionAccess+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <IoCheckFunctionAccess+>;xorl %eax, %eax;movl %eax, (%esi);movl (%edi), %ecx": 1,
                "movl (%edi), %ecx;movl %ecx, (%esi);movl (%edi), %ecx;movl %ecx, (%esi);movw (%edi), %cx": 2,
                "decl %eax;movb (%eax), %cl;testb %cl, %cl;je  <IoCheckFunctionAccess+>;cmpb $, %cl": 2,
                "movw (%edi), %cx;pushl %eax;movw %ax, -(%ebp);leal (%edi), %eax;pushl %eax": 1,
                "subl $, %eax;jmp - <IoOpenDeviceRegistryKey+>;jmp - <IoOpenDeviceRegistryKey+>;cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;movl $, %esi;jmp - <IoOpenDeviceRegistryKey+>;pushl %edi;calll  <ExReleaseRundownProtectionEx+>": 1,
                "int;int;int;movw %dx, (%eax);jmp - <RtlUnicodeStringToAnsiString+>": 1,
                "addb %cl, (%ecx);decl %esp;addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%edi)": 2,
                "addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%edi);jne  <IoCheckFunctionAccess+>;popal": 1,
                "pushl %esi;calll - <wcsstr+>;jmp - <SeTokenIsWriteRestricted+>;nop;nop": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <SeTokenIsWriteRestricted+>": 1,
                "movl %ebx, (%eax);jmp - <IoOpenDeviceRegistryKey+>;movl %ebx, (%eax);jmp - <IoOpenDeviceRegistryKey+>;nop": 1,
                "cmpl -(%ebp), %ecx;jb - <RtlInitCodePageTable+>;jmp  <IoCheckFunctionAccess+>;incl ;movb $, ": 1,
                "cmpl -(%ebp), %ecx;jb - <RtlInitCodePageTable+>;cmpl -(%ebp), %eax;jg - <RtlInitCodePageTable+>;jl  <IoCheckFunctionAccess+>": 1,
                "cmpl -(%ebp), %eax;jg - <RtlInitCodePageTable+>;jl  <IoCheckFunctionAccess+>;cmpl -(%ebp), %ecx;jae - <RtlInitCodePageTable+>": 1,
                "calll - <RtlInitCodePageTable+>;testb %al, %al;je - <IoCheckFunctionAccess+>;jmp - <IoCheckFunctionAccess+>;jmp - <IoCheckFunctionAccess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeCancelTimer>;pushl %esi;pushl %esi": 1,
                "pushl %esi;pushl ;calll - <KeWaitForSingleObject>;movl , %ecx;calll - <ObfDereferenceObject>": 1,
                "movl $, ;calll - <ExQueueWorkItem>;jmp - <SeDeleteAccessState+>;movl $, %eax;jmp - <LdrFindResourceDirectory_U+>": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);xorl %ebx, %ebx;movl (%ebp), %edi;movl -(%ebp), %esi": 1,
                "movl (%ebp), %eax;jmp - <NtAllocateUuids+>;movb $, (%ecx);jmp - <NtAllocateUuids+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "jmp - <RtlxUnicodeStringToOemSize+>;movl $, -(%ebp);jmp - <ExUuidCreate+>;movl $, %ecx;calll - <ExReleaseFastMutexUnsafe>": 1,
                "movl , %eax;movl (%eax), %eax;xorl %ecx, %ecx;xorl %esi, %esi;cmpb %cl, (%ebp)": 1,
                "jmp  <IoCheckFunctionAccess+>;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl (%edx), %eax;incl (%eax)": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <IoCheckFunctionAccess+>;pushl $;pushl %esi": 2,
                "jmp - <NtAddAtom+>;movl -(%ebp), %eax;jmp - <NtAddAtom+>;nop;nop": 1,
                "orl $-, -(%ebp);jmp - <NtAddAtom+>;nop;nop;nop": 1,
                "jmp - <NtAddAtom+>;movw -(%ebp), %ax;movw %ax, (%esi);jmp - <NtAddAtom+>;pushl $": 1,
                "nop;nop;movl -(%ebp), %esp;movl -(%ebp), %esi;jmp - <NtFindAtom+>": 1,
                "movl $, (%eax);jmp - <ProbeForWrite+>;nop;nop;nop": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <ProbeForWrite+>;movl (%ebp), %eax": 1,
                "jmp - <RtlOemToUnicodeN+>;movl $, (%eax);jmp - <RtlOemToUnicodeN+>;nop;nop": 1,
                "nop;movl -(%ebp), %esp;andl $, -(%ebp);jmp - <FsRtlTeardownPerStreamContexts+>;nop": 2,
                "movl -(%ebp), %eax;jmp - <ProbeForWrite+>;movb $, (%eax);jmp - <RtlAddAtomToAtomTable+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "movl (%ebp), %eax;jmp - <RtlAddAtomToAtomTable+>;nop;nop;nop": 1,
                "calll *;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl (%ebp), %eax": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <RtlUpperString+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp - <SeTokenIsWriteRestricted+>;pushl %edi": 1,
                "calll - <ExFreePoolWithTag>;jmp - <RtlUpperString+>;xorl %eax, %eax;jmp - <RtlGetAce+>;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "jmp - <RtlGetAce+>;jmp - <RtlGetAce+>;nop;nop;nop": 1,
                "nop;nop;pushl $;pushl $;pushl -(%ebp)": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;calll - <RtlGetAce+>;testl %eax, %eax": 1,
                "pushl -(%ebp);calll - <RtlGetAce+>;jmp - <RtlGetAce+>;pushl %eax;calll - <RtlGetAce+>": 1,
                "jmp - <RtlGetAce+>;pushl %eax;calll - <RtlGetAce+>;movl %edi, (%esi);jmp - <RtlGetAce+>": 3,
                "xorl %esi, %esi;pushl (%ebp);incl %esi;pushl %ecx;pushl -(%ebp)": 1,
                "jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl %eax, -(%ebp);andb $, %al;cmpb $, %al": 3,
                "movl $, -(%ebp);cmpl $, -(%ebp);je  <IoCheckFunctionAccess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;calll  <LsaDeregisterLogonProcess+>;jmp - <RtlGetAce+>;pushl (%edi);pushl %esi": 1,
                "pushl %esi;pushl (%ebp);pushl -(%ebp);pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "je - <RtlGetAce+>;jmp - <IoCheckFunctionAccess+>;movl (%ebp), %eax;pushl $;pushl (%eax,%esi,)": 1,
                "pushl %ebx;calll - <RtlGetAce+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl %eax": 1,
                "pushl %esi;pushl %eax;pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;jmp - <RtlGetAce+>": 1,
                "movl %ecx, (%eax);movl %edx, (%ecx);movl %eax, (%ecx);xorb %dl, %dl;jmp - <RtlUpperString+>": 1,
                "calll - <ExFreePoolWithTag>;movl (%ebp), %eax;addw $, (%ebx);movl %eax, (%ebx);popl %esi": 1,
                "jmp  <IoCheckFunctionAccess+>;movzwl %si, %eax;pushl $;shll $, %eax;pushl %eax": 1,
                "subl %esi, %eax;movl (%ebp), %edi;movl (%edi), %esi;incl %eax;shll $, %eax": 1,
                "movw %bx, (%edi);movl (%edi), %eax;cmpl %ebx, %eax;je - <RtlUpperString+>;pushl %ebx": 1,
                "movw %bx, (%edi);movw %bx, (%edi);jmp - <RtlUpperString+>;movl $, %esi;jmp - <RtlCreateUnicodeString+>": 1,
                "jmp - <RtlUpperString+>;movl $, %esi;jmp - <RtlCreateUnicodeString+>;jmp - <RtlUpperString+>;movl %ebx, %eax": 1,
                "movl %ecx, (%esi);movb $, %al;jmp - <RtlDeleteRegistryValue+>;movl %edi, -(%ebp);jmp - <RtlDeleteRegistryValue+>": 1,
                "jne - <RtlDeleteRegistryValue+>;pushl %esi;pushl %edi;calll *(%edi);jmp - <RtlDeleteRegistryValue+>": 1,
                "movl (%ecx), %edx;cmpl (%esi), %edx;jge  <IoCheckFunctionAccess+>;movl %ecx, %esi;addl $, %ecx": 1,
                "jmp - <RtlPrefixString+>;movl -(%ebp,%edi,), %ecx;cmpl %ecx, %eax;ja  <IoCheckFunctionAccess+>;movl %eax, %ecx": 1,
                "jmp - <RtlUpperString+>;testb $, (%eax);je - <RtlPrefixString+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "cmpl %ebx, %eax;ja  <IoCheckFunctionAccess+>;movl %eax, %ebx;subl %ebx, %eax;incl %esi": 1,
                "movl $, %eax;jmp - <RtlValidSecurityDescriptor+>;movl $, %edi;jmp - <IoWMIRegistrationControl+>;testb $, (%eax)": 1,
                "jmp - <IoWMIRegistrationControl+>;testb $, (%eax);je - <IoWMIRegistrationControl+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl $;movl %edi, -(%ebp);calll ;jmp - <IoWMIRegistrationControl+>;movl $, %edi": 1,
                "jmp - <IoWMIRegistrationControl+>;jmp - <IoWMIRegistrationControl+>;movl %fs:, %eax;movl %eax, %ecx;movl %fs:, %eax": 1,
                "je - <NtVdmControl+>;movl %fs:, %eax;movb $, %cl;movb $, (%eax);calll *": 1,
                "movl %edi, %ecx;calll - <ObfDereferenceObject>;jmp - <RtlRemoveUnicodePrefix+>;nop;nop": 1,
                "movb $, -(%ebp);movl , %eax;movl %eax, (%ebx);movl $, (%ebx);movl %ebx, (%eax)": 1,
                "jmp - <SeRegisterLogonSessionTerminatedRoutine+>;movb $, (%eax);jmp - <SeRegisterLogonSessionTerminatedRoutine+>;calll  <ExRaiseDatatypeMisalignment>;jmp - <SeRegisterLogonSessionTerminatedRoutine+>": 1,
                "je  <IoCheckFunctionAccess+>;movl $, %ebx;jmp - <IoWMIRegistrationControl+>;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "testb $, (%esi);je  <IoCheckFunctionAccess+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax;cmpl %eax, (%esi)": 1,
                "movl , %eax;cmpl %eax, (%esi);jb  <IoCheckFunctionAccess+>;movl $, (%eax);pushl $": 1,
                "cmpl %eax, (%esi);jb  <IoCheckFunctionAccess+>;movl $, (%eax);pushl $;popl %ecx": 1,
                "movl $, %edi;rep  movsl (%esi), %es:(%edi);movl $, %ecx;calll - <ExReleaseResourceLite>;incl (%ebx)": 1,
                "je  <IoCheckFunctionAccess+>;movb $, (%ebx);movb $, %cl;calll *;calll - <IoWMIRegistrationControl+>": 1,
                "cmpl %ecx, %ecx;jmp - <IoInitializeRemoveLockEx+>;movl -(%ebp), %ecx;cmpl %ecx, (%eax);jae - <MmPrefetchPages+>": 1,
                "jmp - <MmPrefetchPages+>;movl $, %eax;jmp - <MmPrefetchPages+>;movb $, (%ebp);jmp - <MmPrefetchPages+>": 1,
                "calll  <ExRaiseDatatypeMisalignment>;jmp - <ExRundownCompleted+>;movl $, (%eax);jmp - <ExRundownCompleted+>;movl $, %eax": 1,
                "calll - <ExAcquireResourceExclusiveLite>;cmpl $, (%edi);jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;andl $, (%ebp)": 1,
                "cmpl $, (%edi);jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax;andl $, (%ebp);movl %eax, (%edi)": 1,
                "pushl %eax;calll - <wcsstr>;popl %ecx;popl %ecx;jmp - <ExRundownCompleted+>": 1,
                "calll *;jmp - <NtVdmControl+>;movl -(%ebp), %ecx;calll - <ExReleaseResourceLite>;incl (%ebx)": 1,
                "jmp - <NtVdmControl+>;movl -(%ebp), %ecx;calll - <ExReleaseResourceLite>;incl (%ebx);jne  <IoCheckFunctionAccess+>": 1,
                "movb $, (%ebx);calll *;jmp - <NtVdmControl+>;movl $, %esi;jmp - <NtVdmControl+>": 1,
                "movb $, %cl;movb $, (%ebx);calll *;jmp - <NtVdmControl+>;movb %bl, %cl": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 3,
                "je  <IoCheckFunctionAccess+>;movb %bl, %cl;movb %bl, (%edi);calll *;pushl (%ebp)": 1,
                "int;movl $, %eax;jmp - <IoWMIRegistrationControl+>;movl $, %eax;jmp - <IoWMIRegistrationControl+>": 1,
                "movl $, %eax;jmp - <IoWMIRegistrationControl+>;movl $, %eax;jmp - <IoWMIRegistrationControl+>;calll *": 1,
                "movl %eax, -(%ebp);jmp - <NtFreeVirtualMemory+>;pushl $;popl %esi;movl %esi, -(%ebp)": 1,
                "pushl $;leal -(%ebp), %edi;pushl %edi;pushl (%ebp);subl -(%ebp), %eax": 1,
                "cmpl %esi, %eax;je - <FsRtlIsNameInExpression+>;movl (%eax), %eax;movl %eax, -(%ebp);jmp - <FsRtlIsNameInExpression+>": 1,
                "movl %eax, -(%ebp);jmp - <FsRtlIsNameInExpression+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %edx": 1,
                "movl %edx, -(%ebp);movl (%eax), %esi;jmp - <IoOpenDeviceRegistryKey+>;calll  <ExRaiseDatatypeMisalignment>;movl -(%ebp), %edx": 1,
                "pushl %eax;pushl $;pushl (%ebp);pushl -(%ebp);calll  <IoEnumerateRegisteredFiltersList+>": 1,
                "movl %eax, -(%ebp);cmpl %esi, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl %ecx, -(%ebp);movw %si, (%ebx);movzwl %ax, %eax;movzwl -(%ebp), %ecx;leal (%eax,%ecx), %eax": 1,
                "movl $, %eax;orl $-, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <IoCheckFunctionAccess+>;movzwl %ax, %eax;movl (%ebx), %ecx;leal -(%eax,%ecx), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;movl $, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;nop": 1,
                "movl (%eax), %eax;movb $, (%eax);movl (%esi), %eax;movl (%eax), %eax;movl %ebx, (%eax)": 1,
                "movl %ecx, -(%ebp);movl (%eax), %edx;jmp - <NtQueryInformationToken+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax": 2,
                "jmp - <NtQueryInformationToken+>;movl %ebx, (%eax);jmp - <NtQueryInformationToken+>;movl %ebx, (%eax);jmp - <NtQueryInformationToken+>": 1,
                "movl -(%ebp), %esp;movl $, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);jmp  <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);pushl %eax;pushl %ebx;pushl %ecx;calll - <ObReferenceObjectByHandle>": 2,
                "jmp - <NtQueryInformationToken+>;nop;pushl %ebp;outsb (%esi), %dx;imull $, (%esi), %ebp": 1,
                "outsb (%esi), %dx;imull $, (%esi), %ebp;outsb (%esi), %dx;addb %cl, (%edx);orb (%eax), %dl": 1,
                "andb %ch, (%eax);andl $, %eax;jae  <IoCheckFunctionAccess+>;je  <IoCheckFunctionAccess+>;jns  <IoCheckFunctionAccess+>": 1,
                "insb %dx, %es:(%edi);jns  <IoCheckFunctionAccess+>;outsl (%esi), %dx;outsb (%esi), %dx;andb %ah, (%ecx)": 1,
                "jne  <IoCheckFunctionAccess+>;outsl %fs:(%esi), %dx;ja  <IoCheckFunctionAccess+>;orb %cs:(%eax), %al;int": 1,
                "pushl %eax;pushl %edi;calll  <CmUnRegisterCallback+>;movl %eax, -(%ebp);cmpl %edi, %eax": 1,
                "pushl (%ebp);pushl %esi;calll  <SeDeleteObjectAuditAlarm>;jmp - <RtlGeneratedotName+>;pushl $": 1,
                "orl $-, -(%ebp);jmp - <RtlGeneratedotName+>;calll *;movl %eax, -(%ebp);movl %edx, -(%ebp)": 2,
                "movl %ecx, -(%ebp);movl (%eax), %edx;jmp - <RtlGeneratedotName+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax": 1,
                "calll *;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %edi, -(%ebp);movl , %ecx": 2,
                "cmpl %esi, %ecx;je  <IoCheckFunctionAccess+>;pushl $;pushl %esi;pushl (%ebp)": 4,
                "orl $-, -(%ebp);jmp - <NtQueryInformationToken+>;calll *;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);movl (%ebp), %esi;movl -(%ebp), %edi;jmp - <ObReferenceObjectByName+>": 1,
                "nop;nop;movl -(%ebp), %esp;orl $-, -(%ebp);jmp - <ObReferenceObjectByName+>": 1,
                "movl $, %eax;jmp - <NtOpenThread+>;pushl %ebx;pushl %ebx;pushl %edi": 1,
                "calll - <KeBugCheckEx>;nop;nop;nop;nop": 1,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "calll - <NtOpenThread+>;pushl %esi;calll - <NtOpenThread+>;movl %edi, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "calll - <RtlUpcaseUnicodeChar+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <IoCheckFunctionAccess+>;calll - <ObfDereferenceObject>": 1,
                "je  <IoCheckFunctionAccess+>;calll - <FsRtlInitializeOplock+>;movb $, %cl;calll *;cmpb $, -(%ebp)": 1,
                "orl $-, -(%ebp);movl -(%ebp), %esi;cmpb $, -(%ebp);je  <IoCheckFunctionAccess+>;pushl -(%ebp)": 1,
                "calll *;calll - <RtlUpcaseUnicodeChar+>;jmp - <IoCheckFunctionAccess+>;pushl %esi;calll - <NtOpenThread+>": 1,
                "movl %esi, (%eax);jmp - <ObOpenObjectByName+>;calll  <ExRaiseDatatypeMisalignment>;jmp - <ObOpenObjectByName+>;movl %esi, (%eax)": 1,
                "calll  <ExRaiseDatatypeMisalignment>;jmp - <ObOpenObjectByName+>;movl %esi, (%eax);movl , %eax;jmp - <ObOpenObjectByName+>": 1,
                "jmp - <ObOpenObjectByName+>;movl %esi, (%eax);movl , %eax;jmp - <ObOpenObjectByName+>;movl (%eax), %ecx": 1,
                "movl %ecx, -(%ebp);cmpl %esi, %ecx;je  <IoCheckFunctionAccess+>;pushl $;leal -(%ebp), %edi": 1,
                "orl $-, -(%ebp);jmp - <ObOpenObjectByName+>;nop;nop;nop": 1,
                "nop;movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %ebx;jmp - <ObOpenObjectByName+>": 1,
                "movl %eax, -(%ebp);jmp - <NtQueryInformationToken+>;movl $, (%eax);jmp - <NtQueryInformationToken+>;movl %esi, -(%ebp)": 1,
                "jmp - <NtQueryInformationToken+>;movl %esi, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "pushl $;calll  <CmUnRegisterCallback+>;movl %eax, -(%ebp);jmp - <NtQueryInformationToken+>;nop": 1,
                "movl -(%ebp), %esi;jmp - <NtQueryInformationToken+>;pushl $;popl %esi;movl %esi, -(%ebp)": 1,
                "movl $, %eax;jmp - <IoOpenDeviceRegistryKey+>;movl $, %eax;jmp - <IoOpenDeviceRegistryKey+>;movl %fs:, %eax": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;pushl %eax": 1,
                "calll - <ZwSetValueKey>;jmp - <IoInitializeCrashDump+>;movl %ebx, -(%ebp);movb $, (%edi);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "je  <IoCheckFunctionAccess+>;pushl (%ebp);calll - <ZwClose>;movl -(%ebp), %eax;cmpl $, %eax": 1,
                "pushl $;jmp - <IoOpenDeviceRegistryKey+>;jmp - <IoOpenDeviceRegistryKey+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "pushl (%ecx);calll - <NtDeleteFile+>;movb %al, -(%ebp);movl (%edi), %eax;pushl (%eax)": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %eax;pushl (%eax);pushl (%eax);calll - <SeCreateClientSecurity+>": 1,
                "movl (%eax), %eax;cmpl %ebx, (%eax);je  <IoCheckFunctionAccess+>;movl (%esi), %eax;pushl (%eax)": 1,
                "movl (%eax), %ecx;pushl %ecx;calll *(%ecx);pushl (%esi);calll - <NtDeleteFile+>": 1,
                "pushl (%ebp);calll - <ZwClose>;jmp - <IoCheckFunctionAccess+>;movl $, %eax;jmp - <PsSetLegoNotifyRoutine+>": 1,
                "calll - <ZwDeleteValueKey>;jmp - <LdrFindResource_U+>;jmp - <LdrFindResource_U+>;leal -(%ebp), %eax;pushl %eax": 1,
                "outsl (%esi), %dx;addb %cl, %ah;int;int;int": 1,
                "movw %si, -(%ebp);popl %ecx;andl $, %eax;movl %eax, -(%ebp);movzwl -(%ebp), %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <PsSetLegoNotifyRoutine+>": 1,
                "calll - <DbgPrintEx>;addl $, %esp;pushl -(%ebp);movb $, ;calll - <ZwClose>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %ebx;calll - <RtlSetBits>;movl -(%ebp), %ecx": 1,
                "pushl $;pushl $;jmp  <IoCheckFunctionAccess+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "jmp - <RtlStringFromGUID+>;movl %esi, %eax;jmp - <RtlStringFromGUID+>;cmpb $, ;jne - <RtlStringFromGUID+>": 1,
                "testl %esi, %esi;jl - <IoOpenDeviceRegistryKey+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "jmp - <RtlAreAnyAccessesGranted+>;movl (%esi), %ecx;movl (%esi), %eax;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "jmp  <IoCheckFunctionAccess+>;movl $, %esi;pushl (%ebp);calll - <NtOpenThread+>;movl %esi, %eax": 1,
                "xorl %eax, %eax;jmp - <ObCheckCreateObjectAccess+>;movl $, %ebx;movl %ebx, -(%ebp);jmp - <ObCheckCreateObjectAccess+>": 1,
                "pushl %eax;pushl %eax;pushl $;pushl $;pushl $": 8,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %edi, (%esi);movl $, %eax;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "jmp - <ObCheckCreateObjectAccess+>;jmp - <ObCheckCreateObjectAccess+>;movl $, -(%ebp);jmp - <ObCheckCreateObjectAccess+>;nop": 1,
                "movl -(%ebp), %esp;movl $, -(%ebp);orl $-, -(%ebp);movl (%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl (%ebp), %esi;movl -(%ebp), %edi;jmp - <ObCheckCreateObjectAccess+>;cmpb $, -(%ebp);jne - <ObCheckCreateObjectAccess+>": 1,
                "jne - <ObCheckCreateObjectAccess+>;movb $, -(%ebp);pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "movb $, -(%ebp);pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;andl $, -(%ebp);jmp - <ObCheckCreateObjectAccess+>": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;andl $, -(%ebp);jmp - <ObCheckCreateObjectAccess+>;pushl $": 1,
                "pushl $;calll - <KeBugCheckEx>;int;movl $, %eax;jmp - <RtlMultiByteToUnicodeSize+>": 1,
                "jmp - <RtlMultiByteToUnicodeSize+>;pushl $;popl %eax;jmp - <RtlAreAnyAccessesGranted+>;jmp - <RtlAreAnyAccessesGranted+>": 1,
                "pushl $;popl %eax;jmp - <RtlAreAnyAccessesGranted+>;jmp - <RtlAreAnyAccessesGranted+>;leal (%eax), %ecx": 1,
                "pushl (%esi);pushl (%ebp);pushl (%ebp);calll - <RtlAreAnyAccessesGranted+>;cmpl $, %eax": 1,
                "je - <NtConnectPort+>;testl %eax, %eax;jne - <RtlAreAnyAccessesGranted+>;movl (%esi), %ecx;jmp - <ObCheckCreateObjectAccess+>": 1,
                "jmp - <ObCheckCreateObjectAccess+>;orl $-, %eax;jmp - <RtlGeneratedotName+>;andl $, (%ebp);movl $, (%ebp)": 1,
                "andl $, (%ebp);movl $, (%ebp);jmp - <RtlGeneratedotName+>;subl %esi, %eax;shll $, %eax": 1,
                "je  <IoCheckFunctionAccess+>;pushl %ebx;pushl %esi;calll - <SeCreateClientSecurity+>;testb %al, %al": 1,
                "je  <IoCheckFunctionAccess+>;movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "movl %edi, %ebx;calll *(%esi);testl %eax, %eax;je - <RtlSelfRelativeToAbsoluteSD+>;movl %edi, -(%ebp)": 1,
                "calll *(%esi);testl %eax, %eax;je - <RtlSelfRelativeToAbsoluteSD+>;movl %edi, -(%ebp);jmp - <RtlGeneratedotName+>": 1,
                "jmp - <RtlGeneratedotName+>;movw (%esi), %ax;movw %ax, -(%ebp);movw (%esi), %ax;addl $, %esi": 1,
                "js  <IoCheckFunctionAccess+>;movl %ebx, -(%ebp);movl -(%ebp), %ebx;pushl %ebx;pushl %edi": 1,
                "jmp - <ObCheckCreateObjectAccess+>;jmp - <ObCheckCreateObjectAccess+>;pushl %ebx;pushl %esi;calll *%eax": 1,
                "xorb %al, %al;jmp - <RtlGeneratedotName+>;xorb %al, %al;jmp - <RtlGeneratedotName+>;jmp - <RtlGeneratedotName+>": 1,
                "jmp - <RtlGeneratedotName+>;xorb %al, %al;jmp - <RtlGeneratedotName+>;jmp - <RtlGeneratedotName+>;movw (%edi), %ax": 1,
                "movl %eax, (%edi);movl $, -(%ebp);jmp - <RtlGeneratedotName+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl %esi;calll  <LsaDeregisterLogonProcess+>;cmpl $-, %eax": 1,
                "movl %edi, (%ebx);jmp - <IoCheckFunctionAccess+>;movl -(%ebp), %ebx;jmp - <IoCheckFunctionAccess+>;leal (%edi,%ebx,), %ebx": 1,
                "calll - <RtlGeneratedotName+>;orl $-, (%ebx);jmp - <IoCheckFunctionAccess+>;movl %eax, (%ecx);jmp - <RtlGeneratedotName+>": 1,
                "jmp  <IoCheckFunctionAccess+>;jmp - <ObOpenObjectByName+>;movl $, %eax;jmp - <ObOpenObjectByName+>;movl $, -(%ebp)": 1,
                "jmp - <ObOpenObjectByName+>;movl (%ebp), %eax;jmp - <ObCheckCreateObjectAccess+>;jmp - <ObCheckCreateObjectAccess+>;movl (%esi), %eax": 1,
                "jmp - <ObCheckCreateObjectAccess+>;jmp - <ObCheckCreateObjectAccess+>;movl (%esi), %eax;testl %eax, %eax;je - <NtAdjustPrivilegesToken+>": 1,
                "incb %al;jmp - <NtFreeVirtualMemory+>;movl (%ebp), %esi;movl %ebx, (%esi);movl %ebx, (%esi)": 1,
                "orb (%edx), %cl;andb %al, (%ebx);jb  <IoCheckFunctionAccess+>;outsb %gs:(%esi), %dx;je  <IoCheckFunctionAccess+>": 2,
                "outsb (%esi), %dx;andb %ch, (%bx,%di);andb %dh, (%eax,%ebp,);andb %ah, (%ebp);jne  <IoCheckFunctionAccess+>": 2,
                "movl $, (%ebp);calll - <ObOpenObjectByName+>;jmp - <ObOpenObjectByName+>;calll - <ObOpenObjectByName+>;movl $, (%ebp)": 1,
                "jmp - <ObOpenObjectByName+>;movl -(%ebp), %ecx;movl (%ecx), %eax;testl %eax, %eax;je - <ObCheckCreateObjectAccess+>": 1,
                "calll *%eax;jmp - <RtlSetGroupSecurityDescriptor+>;andl %eax, -(%ebp);orl $-, -(%ebp);jmp - <ObCheckCreateObjectAccess+>": 1,
                "orl $-, -(%ebp);jmp - <ObCheckCreateObjectAccess+>;movl $, (%ebp);jmp - <RtlGetNtGlobalFlags+>;jmp - <ObOpenObjectByName+>": 1,
                "jmp - <ObCheckCreateObjectAccess+>;movl $, (%ebp);jmp - <RtlGetNtGlobalFlags+>;jmp - <ObOpenObjectByName+>;jmp - <ObCheckCreateObjectAccess+>": 1,
                "calll - <NtFreeVirtualMemory+>;jmp - <NtQueryInformationToken+>;cmpl $, (%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %esi;movl -(%ebp), %edi;jmp - <RtlSubAuthoritySid+>;xorb %al, %al;jmp - <IoCheckEaBufferValidity+>": 1,
                "jmp - <IoCheckEaBufferValidity+>;xorl %eax, %eax;jmp - <RtlSelfRelativeToAbsoluteSD+>;pushl $;pushl -(%ebp)": 1,
                "jmp - <RtlGeneratedotName+>;jmp - <RtlGeneratedotName+>;shll $, %ecx;movl -(%ecx,%eax), %edx;movl %edx, (%eax,%ecx)": 1,
                "movl -(%ecx,%eax), %edx;movl %edx, (%eax,%ecx);movl (%ebp), %ecx;decl %ecx;jmp - <RtlGeneratedotName+>": 1,
                "jmp - <RtlGeneratedotName+>;movl (%esi), %eax;testl %eax, %eax;je - <NtDeleteFile+>;pushl (%ebx)": 1,
                "pushl %esi;calll *%eax;jmp - <NtDeleteFile+>;pushl (%edi);pushl %esi": 1,
                "movl (%ebp), %esi;jmp - <NtDeleteFile+>;cmpl $, -(%ebp);jne  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp  <IoCheckFunctionAccess+>;movzwl (%ebx), %eax;movl -(%ebp), %ecx;movl (%ecx,%eax,), %eax;cmpl $-, %eax": 1,
                "calll - <RtlGeneratedotName+>;pushl (%edi);pushl %esi;calll - <RtlGeneratedotName+>;orl $-, (%edi)": 1,
                "pushl %esi;calll - <RtlGeneratedotName+>;orl $-, (%edi);jmp - <NtDeleteFile+>;nop": 1,
                "jne  <IoCheckFunctionAccess+>;movl %esi, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movb $, (%ebx)": 1,
                "movl %eax, (%ebx);jne - <RtlUpperString+>;jmp - <IoCheckFunctionAccess+>;movl %eax, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl %ebx;calll - <RtlUnicodeStringToInteger+>;testb %al, %al;jne  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "calll - <RtlUnicodeStringToInteger+>;testb %al, %al;jne  <IoCheckFunctionAccess+>;pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;pushl $;pushl %ebx;movl %edi, (%ebx);calll *(%ebx)": 1,
                "nop;nop;movl -(%ebp), %esp;movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "je  <IoCheckFunctionAccess+>;pushl -(%ebp);pushl %ecx;calll *%eax;calll - <RtlUpcaseUnicodeChar+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%ebx);movl (%eax), %eax;movl %eax, (%edi)": 1,
                "je  <IoCheckFunctionAccess+>;pushl (%edi);pushl %esi;calll *%eax;cmpl $-, -(%ebp)": 1,
                "calll - <ObOpenObjectByName+>;calll - <RtlUpcaseUnicodeChar+>;movl $, %eax;jmp - <ObReferenceObjectByName+>;nop": 1,
                "orl $-, -(%ebp);movl (%ebp), %edi;movl -(%ebp), %esi;jmp - <ObReferenceObjectByName+>;movl $, -(%ebp)": 1,
                "pushl %eax;calll *%ecx;jmp - <NtFreeVirtualMemory+>;nop;nop": 1,
                "pushl -(%ebp);pushl %edi;calll - <RtlGeneratedotName+>;jmp - <FsRtlNotifyFilterChangeDirectory+>;nop": 1,
                "nop;nop;movl -(%ebp), %esp;pushl -(%ebp);pushl (%ebp)": 3,
                "movl %esi, %ecx;calll - <ExAcquireFastMutexUnsafe>;movl -(%ebp), %eax;addl $, %eax;movl (%eax), %ecx": 2,
                "movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, (%eax);movl %eax, (%ecx);movl %esi, %ecx": 2,
                "calll  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl %ebx;pushl (%eax);calll - <ExFreePoolWithTag>": 1,
                "pushl %ebx;pushl (%eax);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;pushl %ebx": 1,
                "pushl (%eax);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;pushl %ebx;pushl (%eax)": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;jmp - <NtQuerySecurityObject+>;movl $, %esi;jmp - <IoGetBootDiskInformation+>": 1,
                "movl %edi, -(%ebp);movl %eax, -(%ebp);je  <IoCheckFunctionAccess+>;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>;cmpl $, (%esi);je - <RtlStringFromGUID+>;pushl %esi": 1,
                "movl $, -(%ebp);jmp - <FsRtlIsNameInExpression+>;jmp - <FsRtlIsNameInExpression+>;nop;nop": 1,
                "leal (%esi), %eax;movl %eax, (%ebp);movl (%ebx), %eax;movzwl (%eax,%edi,), %eax;pushl %eax": 1,
                "addl %edx, (%ebp);movzwl (%ebp), %ecx;movl (%edi), %edx;shrl %ecx;leal (%edx,%ecx,), %ecx": 1,
                "pushl %eax;pushl %esi;calll - <RtlGeneratedotName+>;jmp - <RtlGeneratedotName+>;movl (%ecx), %ebx": 1,
                "jmp - <ObCheckCreateObjectAccess+>;pushl $;pushl $;pushl $;pushl $": 1,
                "cmpxchgl %edx, (%ecx);cmpl %esi, %eax;jne - <IoCheckFunctionAccess+>;movb $, %al;popl %edi": 1,
                "testb $, (%esi);je  <IoCheckFunctionAccess+>;cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;movl (%ebp), %eax": 1,
                "orb $, (%esi);jmp - <ObCheckCreateObjectAccess+>;andl $, -(%ebp);jmp - <RtlGeneratedotName+>;movl $, -(%ebp)": 1,
                "jmp - <RtlGeneratedotName+>;movl $, -(%ebp);jmp - <RtlGeneratedotName+>;movl $, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "jmp - <RtlGeneratedotName+>;movl $, %esi;jmp  <IoCheckFunctionAccess+>;movl $, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;movl $, %esi;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl %ebx;pushl %esi;pushl $": 2,
                "movl %eax, (%edi);movl %eax, (%ebx);movl %eax, %ebx;jmp - <RtlSubAuthoritySid+>;movl $, %eax": 1,
                "jmp - <SeRegisterLogonSessionTerminatedRoutine+>;movl $, %eax;jmp - <SeRegisterLogonSessionTerminatedRoutine+>;pushl %eax;pushl %esi": 1,
                "pushl (%edi);pushl %esi;calll - <SeCreateClientSecurity+>;testb %al, %al;je - <IoCheckFunctionAccess+>": 2,
                "movl (%ebx), %eax;pushl %eax;calll *(%eax);testl %eax, %eax;movl %eax, (%ebp)": 1,
                "pushl $;pushl %esi;pushl (%ebx);calll - <RtlSubAuthoritySid+>;testl %eax, %eax": 1,
                "calll - <RtlGeneratedotName+>;movl %eax, %esi;cmpl $-, %esi;movl %esi, -(%ebp);je - <IoCheckFunctionAccess+>": 1,
                "movl (%ebx), %eax;pushl %ecx;pushl %eax;calll *(%eax);testl %eax, %eax": 2,
                "pushl %eax;calll *(%eax);testl %eax, %eax;movl %eax, (%ebp);je - <IoCheckFunctionAccess+>": 2,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %ecx;movl %eax, (%ecx)": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%ebx)": 1,
                "pushl %ebx;pushl %esi;calll  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;movl %esi, (%ebp);calll  <CmUnRegisterCallback+>": 1,
                "movl %esi, (%eax);movl (%esi), %eax;pushl $;movl %edi, (%eax);pushl (%esi)": 1,
                "movl (%esi), %eax;pushl $;movl %edi, (%eax);pushl (%esi);calll - <ExQueueWorkItem>": 1,
                "jmp - <SeQuerySecurityDescriptorInfo+>;movl (%ebp), %eax;movw (%eax), %ax;jmp - <RtlGeneratedotName+>;jmp - <RtlGeneratedotName+>": 1,
                "movl (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>;testb $, (%ebx);jne  <IoCheckFunctionAccess+>;cmpl $, (%esi)": 1,
                "nop;movl -(%ebp), %esp;movl (%ebp), %esi;movl (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>": 1,
                "popl %eax;jmp - <RtlGeneratedotName+>;pushl $-;popl %eax;subl -(%ecx), %eax": 1,
                "movl %ebx, %eax;negl %eax;shll $, %eax;movl %eax, (%ebp);jmp  <IoCheckFunctionAccess+>": 1,
                "movl %edi, (%ebp);jne - <RtlGeneratedotName+>;pushl %ebx;pushl %esi;pushl (%ebp)": 1,
                "calll - <RtlInitializeBitMap+>;testl %eax, %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %eax;movl (%ebp), %ecx": 1,
                "andl $-, %eax;movl %eax, (%ebp);addl $, %eax;movl %eax, (%ebp);movl (%eax), %eax": 1,
                "jmp - <RtlGeneratedotName+>;movl (%eax), %edx;cmpl $-, %edx;je - <IoOpenDeviceRegistryKey+>;cmpl %edi, %edx": 1,
                "testl %edx, %edx;jge  <IoCheckFunctionAccess+>;negl %edx;movl %edx, -(%ebp);addl %edx, %ecx": 1,
                "subl %esi, %edx;movl %edx, (%eax);jmp - <RtlGeneratedotName+>;addl $, (%ebp);jmp - <RtlGeneratedotName+>": 1,
                "movl %eax, %esi;jmp - <RtlGeneratedotName+>;orl $-, %eax;jmp - <RtlGeneratedotName+>;orl $-, %eax": 1,
                "jmp - <RtlGeneratedotName+>;addl $, %eax;jmp - <RtlGeneratedotName+>;addl $, (%ebp);jmp - <RtlGeneratedotName+>": 1,
                "jmp - <RtlGeneratedotName+>;addl $, (%ebp);jmp - <RtlGeneratedotName+>;orl $-, %eax;jmp - <RtlGeneratedotName+>": 1,
                "addl $, (%ebp);jmp - <RtlGeneratedotName+>;orl $-, %eax;jmp - <RtlGeneratedotName+>;cmpl %ebx, (%ebp)": 1,
                "movl $, %eax;jmp - <IoOpenDeviceRegistryKey+>;movl $, %eax;jmp - <IoOpenDeviceRegistryKey+>;movl $, %edi": 1,
                "jne  <IoCheckFunctionAccess+>;pushl %esi;calll  <KeFlushQueuedDpcs+>;pushl %ebx;pushl (%esi)": 1,
                "pushl %esi;calll - <FsRtlNotifyFilterChangeDirectory+>;movl %edi, %eax;jmp - <IoOpenDeviceRegistryKey+>;movl $, %ebx": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;movl $, (%ebp);jmp - <IoOpenDeviceRegistryKey+>;cmpb %bl, %al;je - <IoOpenDeviceRegistryKey+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl %eax, (%ebp);jmp - <IoOpenDeviceRegistryKey+>;pushl %ebx;pushl %ebx": 2,
                "movl %eax, (%ebp);jmp - <IoOpenDeviceRegistryKey+>;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "calll - <ZwClose>;jmp - <IoOpenDeviceRegistryKey+>;cmpl %ebx, -(%ebp);je  <IoCheckFunctionAccess+>;pushl %ebx": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl (%ebp), %ebx;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl (%ebp), %ebx;jmp  <IoCheckFunctionAccess+>;movl $, (%esi)": 1,
                "pushl %eax;pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl %eax, (%ebp);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "pushl %esi;calll - <RtlGeneratedotName+>;movl (%ebx), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>": 1,
                "orl $-, %eax;jmp - <NtDeleteFile+>;pushl (%ebp);pushl %ebx;calll *%eax": 1,
                "je - <NtDeleteFile+>;pushl -(%ebp);pushl %esi;calll *%eax;jmp - <NtDeleteFile+>": 2,
                "movl %edi, -(%ebp);calll *(%esi);testl %eax, %eax;jne  <IoCheckFunctionAccess+>;pushl (%ebp)": 1,
                "pushl %esi;calll *%eax;jmp - <NtDeleteFile+>;pushl (%ebp);pushl %esi": 1,
                "movl %ebx, (%edi);jmp - <NtDeleteFile+>;cmpl %eax, %ebx;je - <NtDeleteFile+>;pushl %ebx": 1,
                "calll *%eax;movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl (%ebp)": 1,
                "cmpl $-, %edi;movl %edi, -(%ebp);je - <NtDeleteFile+>;pushl %edi;pushl %esi": 1,
                "pushl %esi;calll *(%esi);testl %eax, %eax;je - <NtDeleteFile+>;testl %ebx, %ebx": 1,
                "jbe - <NtDeleteFile+>;leal -(%eax,%ebx,), %edi;pushl (%edi);pushl %esi;calll - <RtlGeneratedotName+>": 1,
                "decl (%ebp);je - <NtDeleteFile+>;jmp - <IoCheckFunctionAccess+>;jmp - <NtDeleteFile+>;cmpl $, (%ebp)": 1,
                "calll *%eax;jmp - <NtDeleteFile+>;pushl (%esi);pushl %ebx;calll *%eax": 1,
                "je - <NtDeleteFile+>;pushl (%ebp);pushl %ebx;calll *%eax;jmp - <NtDeleteFile+>": 1,
                "calll *%eax;jmp - <NtDeleteFile+>;pushl (%esi);pushl %edi;jmp - <IoCheckFunctionAccess+>": 1,
                "movb $, ;jmp - <RtlStringFromGUID+>;nop;decl %esp;outsl (%esi), %dx": 1,
                "shll $, %ecx;movl %ecx, -(%ebp);movl %ecx, %eax;jmp - <RtlUnicodeStringToInteger+>;jmp - <RtlUnicodeStringToInteger+>": 1,
                "jmp - <RtlUnicodeStringToInteger+>;jmp - <RtlUnicodeStringToInteger+>;testb $, (%eax);movl (%eax), %edx;movl (%edx), %ecx": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl $;calll - <KeBugCheckEx>": 4,
                "addl (%ebp), %eax;jmp - <RtlUnicodeStringToInteger+>;movl (%ebp), %eax;movl %ebx, (%eax);movl (%ebp), %eax": 1,
                "pushl %esi;pushl %edi;pushl $;pushl $;calll - <KeBugCheckEx>": 2,
                "calll - <ExReleaseFastMutexUnsafe>;jmp - <RtlUnicodeStringToInteger+>;movl (%eax), %eax;movl (%eax), %edi;subl %esi, %edi": 1,
                "pushl $;pushl (%ebp);jmp  <IoCheckFunctionAccess+>;pushl $;pushl %edi": 1,
                "jge - <ObCheckCreateObjectAccess+>;jmp - <ObCheckCreateObjectAccess+>;leal -(%esi), %edx;notl %edx;movl %edx, (%ebp)": 1,
                "leal (%esi,%eax), %ecx;andl (%ebp), %ecx;andl %ebx, %edx;decl %ecx;jmp - <SeCreateClientSecurity+>": 1,
                "jmp - <SeCreateClientSecurity+>;pushl %ebx;pushl $;pushl $;jmp  <IoCheckFunctionAccess+>": 1,
                "pushl (%ebp);pushl %ebx;calll *(%ebx);jmp - <RtlUnicodeStringToInteger+>;pushl %ebx": 1,
                "pushl %ebx;pushl $;jmp  <IoCheckFunctionAccess+>;pushl %eax;pushl %edi": 1,
                "pushl $;pushl $;pushl $;calll - <KeBugCheckEx>;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi;pushl (%ebp)": 2,
                "pushl %ebx;pushl $;pushl $;pushl $;jmp  <IoCheckFunctionAccess+>": 1,
                "orl $-, -(%ebp);jmp  <IoCheckFunctionAccess+>;pushl $;pushl %ebx;pushl $": 1,
                "pushl $;pushl $;pushl %edi;pushl $;calll - <DbgPrintEx>": 1,
                "jmp  <IoCheckFunctionAccess+>;pushl %ebx;pushl $;pushl %edi;pushl $": 1,
                "jmp - <RtlUnicodeStringToInteger+>;nop;pushl %eax;jb  <IoCheckFunctionAccess+>;insl %dx, %es:(%edi)": 1,
                "outsl (%esi), %dx;pushl %edi;jb  <IoCheckFunctionAccess+>;je  <IoCheckFunctionAccess+>;decl %eax": 11,
                "addb %al, (%eax);addb %dl, (%eax);imull $, (%ebp), %ebp;jbe  <IoCheckFunctionAccess+>;incl %esp": 2,
                "ja  <IoCheckFunctionAccess+>;imull $, (%ebp), %esi;jb  <IoCheckFunctionAccess+>;outsw (%esi), %dx;jb  <IoCheckFunctionAccess+>": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax);jo  <IoCheckFunctionAccess+>;outsl (%esi), %dx": 1,
                "imull $, (%ebp), %esi;jns  <IoCheckFunctionAccess+>;jb  <IoCheckFunctionAccess+>;outsb (%esi), %dx;andb %ah, (%esi)": 1,
                "cmpl $, %eax;jae - <RtlUnicodeStringToInteger+>;jmp - <IoCheckFunctionAccess+>;pushl (%ebp);calll - <IoSetThreadHardErrorMode>": 1,
                "decl %esp;outsb %gs:(%esi), %dx;je  <IoCheckFunctionAccess+>;andb %bh, ;insb %dx, %es:(%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);incl %esp;imull $, (%ebx), %esi;jne  <IoCheckFunctionAccess+>": 1,
                "orl $-, -(%ebp);xorb %al, %al;jmp - <RtlUnicodeStringToInteger+>;nop;nop": 1,
                "nop;nop;movl -(%ebp), %esp;jmp - <IoCheckFunctionAccess+>;pushl -(%ebp)": 1,
                "cmpl $, %eax;insb %dx, %es:(%edi);js  <IoCheckFunctionAccess+>;andb %cl, (%ecx);pushl %ebx": 2,
                "movl $, ;movl %ecx, ;movl %eax, ;calll - <DbgPrintEx>;addl $, %esp": 1,
                "pushl %ecx;pushl $;movl %ecx, ;movl %edx, ;movl %eax, ": 1,
                "pushl %edi;pushl $;pushl $;calll - <KeBugCheckEx>;movl -(%ebp), %eax": 2,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl %edi, (%ebx);movl (%ebp), %eax": 1,
                "andb $, (%ebx);jmp - <RtlGeneratedotName+>;movl $, %esi;movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "decl %eax;jne - <RtlGeneratedotName+>;orb $, (%ebx);pushl %ebx;calll - <ObCheckCreateObjectAccess+>": 1,
                "andl $, (%esi);andl $, (%esi);movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp)": 1,
                "leal (%eax,%edi,), %esi;movl (%esi), %eax;testl %eax, %eax;je  <IoCheckFunctionAccess+>;pushl $": 1,
                "andl $, (%esi);incl %edi;cmpl %ebx, %edi;jbe - <IoCheckFunctionAccess+>;popl %esi": 1,
                "pushl -(%ebp);calll *(%ebx);movl %esi, %eax;jmp - <RtlUpperString+>;movl $, -(%ebp)": 1,
                "andl $-, %edi;pushl %edi;pushl -(%ebp);calll *(%esi);andl $, (%esi)": 1,
                "calll *(%ebx);testb %al, %al;je  <IoCheckFunctionAccess+>;cmpl $, (%esi);jne  <IoCheckFunctionAccess+>": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl (%esi), %ecx;pushl $;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);popl %edi;jmp - <IoOpenDeviceRegistryKey+>;movl %edi, %eax;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;cmpb $, ;movl $, -(%ebp);movl %edi, ;movl $, ": 1,
                "jne  <IoCheckFunctionAccess+>;testb $, ;jne  <IoCheckFunctionAccess+>;andl $, (%esi);movl %eax, (%esi)": 1,
                "movl %eax, (%esi);movl %eax, -(%ebp);movl %ebx, (%esi);movl $, (%esi);movl %eax, %ecx": 1,
                "movb $, (%ebp);jmp - <IoOpenDeviceRegistryKey+>;pushl $;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpl $, %eax;jne  <IoCheckFunctionAccess+>;movl $, %edi;jmp  <IoCheckFunctionAccess+>;cmpl $, %eax": 1,
                "shrl $, %ecx;movl %ebx, %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;pushl %eax": 1,
                "movl (%ebp), %eax;andl $, %ecx;pushl %ebx;rep  movsb (%esi), %es:(%edi);calll *(%eax)": 1,
                "nop;movl -(%ebp), %esp;orl $-, %eax;movl %eax, -(%ebp);jmp - <RtlGeneratedotName+>": 1,
                "jmp - <RtlGeneratedotName+>;pushl $-;popl %eax;jmp - <RtlUnicodeStringToInteger+>;incl %eax": 1,
                "popl %eax;jmp - <RtlUnicodeStringToInteger+>;incl %eax;jmp - <RtlUnicodeStringToInteger+>;jmp - <NtQueryInformationToken+>": 1,
                "movl $, (%ebp);jmp - <NtQueryInformationToken+>;movl %edx, %ecx;movl $, (%ebp);jmp - <NtQuerySecurityObject+>": 1,
                "jmp - <RtlUnicodeStringToInteger+>;movl %edx, %ecx;movl $, (%ebp);jmp - <RtlUnicodeStringToInteger+>;jmp - <NtQueryInformationToken+>": 1,
                "pushl (%ebp);jmp - <NtAdjustPrivilegesToken+>;jmp - <SeQuerySecurityDescriptorInfo+>;movl $, (%ebp);jmp - <SeQuerySecurityDescriptorInfo+>": 1,
                "movl (%ebp), %eax;leal (%ecx,%eax,), %edi;pushl (%edi);movl (%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll *(%eax);movl %eax, %esi;testl %esi, %esi;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movb $, (%eax);je - <NtQueryInformationToken+>;movl (%edi), %eax;movl (%ebp), %ecx": 1,
                "jmp - <RtlGeneratedotName+>;movl $, %eax;jmp - <RtlGeneratedotName+>;addl $, %edi;jmp - <RtlStringFromGUID+>": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esi);movl %ecx, (%esi);movl %esi, (%eax)": 1,
                "movl %eax, (%esi);movl %ecx, (%esi);movl %esi, (%eax);movl %esi, (%ecx);jmp - <RtlxUnicodeStringToOemSize+>": 1,
                "jmp - <RtlStringFromGUID+>;testl %eax, %eax;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;leal (%ecx), %eax": 1,
                "testl %eax, %eax;jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;leal (%ecx), %eax;cmpl %eax, (%ecx)": 1,
                "jne  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx;leal (%ecx), %eax;cmpl %eax, (%ecx);movl %eax, -(%ebp)": 1,
                "movl $, %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "andl $, (%eax);movl -(%ebp), %eax;movl %edx, (%eax);pushl -(%ebp);movl -(%ebp), %ecx": 1,
                "movl %edx, (%eax);pushl -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "pushl $;pushl $;pushl $;calll *(%ebx);movl %eax, %edi": 1,
                "pushl %esi;calll *(%ebx);movl -(%ebp), %eax;shrl $, %eax;pushl %eax": 1,
                "cmpl -(%ebp), %edx;movl -(%ebp), %ecx;movl -(%ebp), %eax;movl %eax, (%edi);movl %edx, (%edi)": 1,
                "movl %edi, (%eax);movl %edi, (%ecx);movl %edx, -(%ebp);jae - <RtlStringFromGUID+>;movl (%ebp), %eax": 1,
                "negl %eax;shll $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "shll $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax;addl %ecx, %eax": 1,
                "je  <IoCheckFunctionAccess+>;movl -(%ebp), %edx;movl %esi, %ecx;orl $, %ecx;cmpl -(%ebp), %edx": 1,
                "movl %edi, (%eax);movl %edx, -(%ebp);jae - <RtlStringFromGUID+>;jmp - <IoCheckFunctionAccess+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %edi, ;movl (%eax,%edi,), %eax;movl %eax, ;movl %esi, ": 1,
                "movl (%eax,%edi,), %eax;movl %eax, ;movl %esi, ;jmp  <IoCheckFunctionAccess+>;movl -(%ebp), %ecx": 1,
                "je - <IoOpenDeviceRegistryKey+>;pushl (%ebp);movl (%ebp), %eax;pushl %eax;calll *(%eax)": 1,
                "andl $, -(%ebp);addl $, %esp;orl $, (%eax);jmp - <IoOpenDeviceRegistryKey+>;movl $, %eax": 1,
                "movl %ebx, ;movl %eax, -(%ebp);jmp - <IoOpenDeviceRegistryKey+>;movl $, ;movl %ebx, ": 1,
                "movl $, %eax;movl %eax, ;jmp - <IoOpenDeviceRegistryKey+>;movl $, %eax;jmp  <IoCheckFunctionAccess+>": 1,
                "movl $, %eax;jmp  <IoCheckFunctionAccess+>;movl $, %eax;jmp  <IoCheckFunctionAccess+>;cmpb $, ": 2,
                "je  <IoCheckFunctionAccess+>;movw $, (%edi);movl (%esi), %eax;orl $, (%eax);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "movl %eax, ;jne  <IoCheckFunctionAccess+>;testb $, ;je - <IoOpenDeviceRegistryKey+>;pushl (%ebp)": 2,
                "cmpl $-, (%ebp);je - <IoCheckFunctionAccess+>;pushl (%ebp);pushl %esi;calll *(%esi)": 1,
                "calll - <SeCreateClientSecurity+>;testb %al, %al;je - <IoCheckFunctionAccess+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl $, %eax;cmpb $, ;movl %eax, %ebx;movl %eax, ;jne  <IoCheckFunctionAccess+>": 2,
                "movl (%esi), %eax;orl $, (%eax);jmp - <IoOpenDeviceRegistryKey+>;cmpl $, (%edi);je - <IoOpenDeviceRegistryKey+>": 1,
                "movl (%ebp), %eax;movl %eax, (%edi);movl (%esi), %eax;orl $, (%eax);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "jmp - <IoOpenDeviceRegistryKey+>;cmpl $, (%esi);jb - <IoOpenDeviceRegistryKey+>;movl $, (%edi);jmp - <IoOpenDeviceRegistryKey+>": 1,
                "je - <IoCheckFunctionAccess+>;andl $, (%edi);orl $-, (%edi);jmp - <IoCheckFunctionAccess+>;cmpb $, ": 1,
                "jmp - <IoCheckFunctionAccess+>;movl $, %eax;jmp - <IoOpenDeviceRegistryKey+>;movl %eax, ;jmp - <IoOpenDeviceRegistryKey+>": 1,
                "movl %eax, ;jne  <IoCheckFunctionAccess+>;testb $, ;je - <IoOpenDeviceRegistryKey+>;testl %ebx, %ebx": 1,
                "pushl (%eax);pushl (%eax);pushl %esi;calll  <LsaDeregisterLogonProcess+>;testb %al, %al": 1,
                "testl %edi, %edi;je - <IoOpenDeviceRegistryKey+>;pushl (%ebx);pushl %esi;calll - <SeCreateClientSecurity+>": 1,
                "pushl %ebx;pushl %edi;movl , %edi;movl $, %ebx;movl %ebx, %ecx": 1,
                "jne  <IoCheckFunctionAccess+>;leal (%esi), %ecx;movl %ecx, (%ebp);calll *%edi;testb $, (%esi)": 1,
                "movl $, -(%ebp);movb $, %dl;jmp - <RtlNtStatusToDosError+>;pushl %esi;movl (%ebp), %esi": 1,
                "movb $, %dl;jmp - <RtlNtStatusToDosError+>;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "popl %edi;sete %cl;testb %dl, %dl;popl %esi;pushl %ebx": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;je  <IoCheckFunctionAccess+>;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <KeFlushQueuedDpcs+>;cmpl %ebx, -(%ebp);je - <RtlUnicodeStringToAnsiString+>": 1,
                "calll  <KeFlushQueuedDpcs+>;cmpl %ebx, -(%ebp);je - <RtlUnicodeStringToAnsiString+>;pushl %ebx;pushl -(%ebp)": 1,
                "movl $, %eax;jmp - <RtlValidSecurityDescriptor+>;calll  <ExRaiseDatatypeMisalignment>;jmp - <RtlValidSecurityDescriptor+>;nop": 1,
                "cmpb $, (%ebp);jne  <IoCheckFunctionAccess+>;pushl $;movl (%ebp), %esi;pushl (%esi)": 1,
                "movl (%ebx), %eax;testl %eax, %ecx;je  <IoCheckFunctionAccess+>;cmpl $, (%ebx);jne  <IoCheckFunctionAccess+>": 1,
                "testl %eax, %ecx;je  <IoCheckFunctionAccess+>;cmpl $, (%ebx);jne  <IoCheckFunctionAccess+>;testl %eax, %edx": 1,
                "jne  <IoCheckFunctionAccess+>;testl %eax, %edx;jne  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>;jmp  <IoCheckFunctionAccess+>": 1,
                "leal (%eax,%eax), %edi;jmp - <FsRtlNotifyVolumeEvent+>;movw (%esi), %ax;pushl $;pushl (%ebp)": 1,
                "pushl $;pushl %eax;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "leal (%eax,%ecx), %edi;shrl $, %edi;pushl $;leal (,%edi,), %edi;pushl %edi": 1,
                "movl %edi, (%ebp);calll - <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;jne  <IoCheckFunctionAccess+>": 1,
                "calll - <MmUnlockPages>;pushl %esi;calll - <IoFreeMdl>;testl %edi, %edi;movl %edi, %esi": 1,
                "calll - <IoFreeMdl>;testl %edi, %edi;movl %edi, %esi;jne - <IoCheckFunctionAccess+>;popl %edi": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "pushl -(%ebp);pushl %edi;calll - <KeSaveFloatingPointState+>;testb $, (%esi);je  <CcMdlRead+>": 1,
                "pushl %edi;calll - <KeSaveFloatingPointState+>;testb $, (%esi);je  <CcMdlRead+>;cmpl $, (%esi)": 1,
                "calll - <KeSaveFloatingPointState+>;testb $, (%esi);je  <CcMdlRead+>;cmpl $, (%esi);jne  <CcMdlRead+>": 1,
                "jmp  <CcMdlRead+>;movl (%ebp), %edi;incl ;movl $, ;movl (%edi), %eax": 1,
                "cmpl %eax, -(%ebp);jbe  <CcMdlRead+>;movl %eax, -(%ebp);movl -(%ebp), %eax;xorl %ecx, %ecx": 1,
                "movl %ecx, -(%ebp);xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "calll - <IoAllocateMdl>;movl %eax, -(%ebp);testl %eax, %eax;jne  <CcMdlRead+>;pushl $": 1,
                "testl %eax, %eax;jne  <CcMdlRead+>;pushl $;calll - <ExRaiseStatus>;movl , %eax": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <CcMdlRead+>;movl %ecx, %eax;jmp - <CcMdlRead+>": 1,
                "nop;nop;nop;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;movl (%ebp), %edi;nop;nop;nop": 1,
                "movl %eax, (%ebx);calll - <_abnormal_termination>;testl %eax, %eax;je  <CcMdlRead+>;movl -(%ebp), %ecx": 1,
                "cmpl %ebx, %ecx;je  <CcMdlRead+>;calll - <FsRtlUninitializeFileLock+>;cmpl %ebx, -(%ebp);je  <CcMdlRead+>": 1,
                "jmp  <CcMdlRead+>;movl (%esi), %eax;movl (%eax), %edi;pushl %eax;calll - <MmUnlockPages>": 1,
                "calll - <IoFreeMdl>;movl %edi, (%esi);cmpl %ebx, (%esi);jne - <CcMdlRead+>;retl": 1,
                "retl;movl (%ebp), %eax;testb $, (%eax);jne  <CcMdlRead+>;testb $, (%esi)": 1,
                "movl (%ebp), %eax;testb $, (%eax);jne  <CcMdlRead+>;testb $, (%esi);jne  <CcMdlRead+>": 1,
                "lock;andl %ecx, (%esi);movl -(%ebp), %ebx;pushl %ebx;pushl %edi": 1,
                "movl -(%ebp), %ebx;pushl %ebx;pushl %edi;pushl %eax;calll - <CcScheduleReadAhead>": 1,
                "cmpl $, (%ecx);jbe  <CcMdlWriteComplete+>;movl (%ecx), %ecx;testl %ecx, %ecx;je  <CcMdlWriteComplete+>": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %esi;xorl %edi, %edi;cmpl %edi, %esi;je  <CmRegisterCallback+>": 1,
                "testb %al, %al;jne  <CmRegisterCallback+>;addl $, (%ebp);addl $, %ebx;cmpl $, (%ebp)": 1,
                "pushl %esi;pushl %edi;movl $, %ebx;pushl %ebx;calll  <ExReleaseRundownProtectionEx+>": 2,
                "testl %edi, %edi;je  <CmUnRegisterCallback+>;pushl %edi;calll  <ExReleaseRundownProtectionEx+>;movl %eax, %esi": 2,
                "je  <CmUnRegisterCallback+>;movl (%esi), %eax;cmpl (%ebp), %eax;jne  <CmUnRegisterCallback+>;movl (%esi), %eax": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl -(%ebp), %eax;pushl %edi": 1,
                "calll - <ExFreePoolWithTag>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;pushl %edi": 1,
                "movl %eax, %esi;movl %fs:, %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "je  <CmUnRegisterCallback+>;pushl (%ebp);pushl (%ebp);pushl (%esi);pushl %edi": 1,
                "calll *;movl -(%ebp), %ecx;movl -(%ebp), %eax;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movb (%esi), %al;testb %al, %al;je  <FsRtlMdlReadDev+>;cmpb $, %al;jne  <FsRtlMdlReadDev+>": 1,
                "pushl %edi;calll - <IoGetRelatedDeviceObject>;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;jmp  <FsRtlMdlReadDev+>;movl (%esi), %ecx;movl (%esi), %eax": 1,
                "movl %fs:, %eax;movl $, (%eax);andl $, -(%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl %edi;calll *%eax;jmp  <FsRtlMdlRead+>;pushl %edi;calll - <IoGetBaseFileSystemDeviceObject>": 1,
                "cmpl %esi, %eax;je  <FsRtlMdlRead+>;movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "cmpl $, (%eax);je  <FsRtlMdlRead+>;xorb %al, %al;jmp  <FsRtlMdlRead+>;pushl %esi": 1,
                "pushl %ebx;movl (%ebp), %esi;pushl %esi;calll - <CcCanIWrite>;testb %al, %al": 1,
                "jne  <FsRtlPrepareMdlWriteDev+>;movl (%ebp), %eax;andl $, (%eax);testl %ebx, %ebx;jne  <FsRtlPrepareMdlWriteDev+>": 1,
                "movl (%esi), %edi;adcl %edx, %edi;jmp  <FsRtlPrepareMdlWriteDev+>;movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edx;cmpl $, (%edx);je  <FsRtlPrepareMdlWriteDev+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);pushl (%ebp);calll - <IoGetRelatedDeviceObject>;pushl %eax": 1,
                "pushl $;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl %ebx, (%esi);movl %edi, (%esi)": 4,
                "movl (%esi), %ecx;calll - <ExReleaseResourceLite>;jmp  <FsRtlPrepareMdlWriteDev+>;movl %ebx, (%esi);movl %edi, (%esi)": 2,
                "leal (%esi), %eax;movl -(%ebp), %ecx;cmpl (%eax), %ecx;jl  <FsRtlPrepareMdlWriteDev+>;jg  <FsRtlPrepareMdlWriteDev+>": 1,
                "pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax": 3,
                "movb $, %cl;movb %cl, (%eax);calll *;xorb %al, %al;calll - <_CIsqrt+>": 1,
                "pushl (%ebp);pushl %edi;calll - <FsRtlPrepareMdlWriteDev>;popl %edi;popl %esi": 1,
                "cmpl %eax, %ecx;jg  <FsRtlCopyRead+>;jl  <FsRtlCopyRead+>;cmpl (%ebp), %esi;jae  <FsRtlCopyRead+>": 1,
                "testb %al, %al;jne  <FsRtlCopyRead+>;movl (%edi), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "jne - <FsRtlCopyRead+>;movl %fs:, %eax;incl (%eax);jne  <FsRtlCopyRead+>;leal (%eax), %ecx": 1,
                "jbe  <FsRtlCopyRead+>;movl (%ebx), %edx;cmpl %eax, %edx;jl  <FsRtlCopyRead+>;jg  <FsRtlCopyRead+>": 1,
                "movl (%edi), %eax;orl -(%ebp), %eax;jne  <FsRtlCopyRead+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %esi;calll - <CcFastCopyRead>;jmp  <FsRtlCopyRead+>;pushl (%ebp);pushl (%ebp)": 1,
                "jmp  <FsRtlCopyRead+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %ecx": 1,
                "calll - <_CIsqrt+>;retl $;int;int;int": 75,
                "cmpl $-, (%ebx);jne  <FsRtlCopyWrite+>;cmpl $-, (%ebx);movb $, -(%ebp);je  <FsRtlCopyWrite+>": 1,
                "movl %fs:, %eax;decl (%eax);cmpb $, (%ebp);je  <FsRtlCopyWrite+>;cmpl $, (%esi)": 1,
                "movl %eax, -(%ebp);leal (%ecx,%eax), %edi;movl %edi, -(%ebp);cmpl %eax, %edi;setb -(%ebp)": 1,
                "jmp  <FsRtlCopyWrite+>;movl (%ebx), %eax;movl %eax, -(%ebp);leal (%ecx,%eax), %edi;movl %edi, -(%ebp)": 1,
                "je  <FsRtlCopyWrite+>;movb (%esi), %cl;testb %cl, %cl;je  <FsRtlCopyWrite+>;cmpl (%esi), %edi": 2,
                "movl (%esi), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;jmp  <FsRtlCopyWrite+>;cmpb $, %cl": 1,
                "pushl %ebx;calll - <CcFastCopyWrite>;orl $-, -(%ebp);jmp  <FsRtlCopyWrite+>;nop": 1,
                "movl %fs:, %eax;andl $, (%eax);cmpb $, -(%ebp);je  <FsRtlCopyWrite+>;cmpl (%esi), %edi": 2,
                "cmpb $, -(%ebp);jne  <FsRtlCopyWrite+>;xorl %eax, %eax;addl (%ebx), %ecx;adcl (%ebx), %eax": 1,
                "addl %edx, %ebx;adcl %eax, %edi;jmp  <FsRtlCopyWrite+>;pushl (%ebp);pushl (%esi)": 1,
                "pushl (%esi);calll - <ExAcquireResourceExclusiveLite>;testb %al, %al;jne - <FsRtlCopyWrite+>;movl %fs:, %eax": 1,
                "addl %ecx, %ebx;movl (%eax), %edi;adcl -(%ebp), %edi;movl %edx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl (%eax), %edi;adcl -(%ebp), %edi;movl %edx, -(%ebp);movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %eax;cmpl $, (%eax);je  <FsRtlCopyWrite+>;cmpb $, (%esi)": 2,
                "ja  <FsRtlCopyWrite+>;cmpb $, -(%ebp);je  <FsRtlCopyWrite+>;cmpl (%esi), %edi;jl  <FsRtlCopyWrite+>": 1,
                "jg  <FsRtlCopyWrite+>;cmpl (%esi), %ebx;jbe  <FsRtlCopyWrite+>;movl (%esi), %ecx;calll - <ExReleaseResourceLite>": 2,
                "jmp  <FsRtlCopyWrite+>;cmpb $, (%esi);jne  <FsRtlCopyWrite+>;pushl (%ebp);calll - <IoGetRelatedDeviceObject>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%esi), %eax;pushl %eax;pushl (%ebp)": 1,
                "movl (%ebp), %ecx;addl -(%ebp), %ecx;adcl -(%ebp), %edx;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "xorb %al, %al;calll - <_CIsqrt+>;retl $;movb $, %al;jmp - <FsRtlCopyWrite+>": 1,
                "testl %eax, %eax;je  <FsRtlMdlWriteComplete+>;cmpl $, (%eax);jbe  <FsRtlMdlWriteComplete+>;cmpl $, (%eax)": 1,
                "je  <FsRtlMdlWriteComplete+>;cmpl $, (%eax);jbe  <FsRtlMdlWriteComplete+>;cmpl $, (%eax);je  <FsRtlMdlWriteComplete+>": 1,
                "andl $, %eax;imull $, %eax, %eax;addl , %eax;incl ;retl": 1,
                "jne  <FsRtlSyncVolumes+>;movl $, %esi;movl (%ebp), %ecx;movl %esi, (%ecx);movb $, %dl": 1,
                "je  <FsRtlSyncVolumes+>;calll - <ObfDereferenceObject>;movl $, (%esi);movl %edi, (%esi);leal (%esi), %eax": 1,
                "orl $-, -(%ebp);calll  <FsRtlSyncVolumes+>;movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $": 2,
                "pushl $;calll - <_CIsqrt+>;movl (%ebp), %esi;xorl %ebx, %ebx;cmpl %ebx, %esi": 1,
                "movb $, %dl;calll - <IofCompleteRequest>;xorl %eax, %eax;jmp  <FsRtlSyncVolumes+>;movl (%esi), %ecx": 1,
                "calll - <ExAcquireFastMutexUnsafe>;xorl %edx, %edx;incl %edx;movb %dl, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %edx, (%esi);movl %ebx, (%esi);movl (%ebp), %ecx;movl %ebx, (%ecx);calll - <IofCompleteRequest>": 1,
                "jmp  <FsRtlSyncVolumes+>;movb %bl, -(%ebp);movl (%ebp), %eax;movl %ebx, (%eax);pushl %ebx": 1,
                "retl $;popl %esp;addb %al, (%eax,%eax);addb %dh, (%ebx);incl %esp": 2,
                "imull $, (%eax), %eax;jae  <FsRtlSyncVolumes+>;popl %esp;addb %dl, (%ebp);decl %esi": 1,
                "cmpl , %esi;jne  <FsRtlDeregisterUncProvider+>;movl , %eax;cmpl %edi, %eax;je  <FsRtlDeregisterUncProvider+>": 1,
                "movl , %eax;cmpl $-, %eax;je  <FsRtlDeregisterUncProvider+>;pushl %eax;calll - <ZwClose>": 1,
                "pushl %ebx;xorl %ebx, %ebx;pushl %esi;movzwl (%ebp), %esi;pushl %edi": 1,
                "cmpl %esi, %edi;jb - <FsRtlDissectDbcs+>;movl (%ebp), %ebx;movl %edi, %edx;subl %ebx, %edx": 1,
                "leal (%edx,%edi), %eax;movw %si, (%ecx);movw %si, (%ecx);movl %eax, (%ecx);popl %edi": 1,
                "movzwl (%eax), %esi;xorl %edx, %edx;testl %esi, %esi;pushl %edi;jbe  <FsRtlDoesDbcsContainWildCards+>": 1,
                "je  <FsRtlDoesDbcsContainWildCards+>;movl , %ebx;movzbl %cl, %edi;cmpw $, (%ebx,%edi,);je  <FsRtlDoesDbcsContainWildCards+>": 1,
                "movl (%eax), %ecx;cmpb $, (%ecx);jne  <FsRtlIsDbcsInExpression+>;movl (%eax), %ecx;movl (%eax), %eax": 1,
                "cmpw %di, %bx;jb  <FsRtlIsDbcsInExpression+>;movzwl -(%ebp), %ecx;movzwl %bx, %eax;subl %ecx, %eax": 1,
                "xorl %edi, %edi;testl %eax, %eax;jbe  <FsRtlIsDbcsInExpression+>;movl (%ebp), %ecx;movl (%ecx), %esi": 1,
                "jbe  <FsRtlIsDbcsInExpression+>;movl (%ebp), %ecx;movl (%ecx), %esi;movb (%esi,%edi), %dl;cmpb $-, %dl": 1,
                "movl %eax, -(%ebp);leal (%edi,%edi), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %ecx": 1,
                "addl %ecx, %eax;movsbw (%eax), %cx;movsbw (%eax), %ax;pushl $;shll $, %ecx": 1,
                "incl %eax;addl %eax, -(%ebp);jmp  <FsRtlIsDbcsInExpression+>;movw -(%ebp), %ax;movl -(%ebp), %ecx": 1,
                "movl (%eax), %eax;movzwl %di, %esi;movb (%esi,%eax), %al;cmpb $-, %al;movb %al, -(%ebp)": 1,
                "jne  <FsRtlIsDbcsInExpression+>;cmpw $, -(%ebp);jne  <FsRtlIsDbcsInExpression+>;movl (%ebp), %edx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;xorl %eax, %eax;movw (%edx), %ax;cmpw %ax, %si;movl %esi, -(%ebp)": 1,
                "movw (%edx), %ax;cmpw %ax, %si;movl %esi, -(%ebp);movl %eax, -(%ebp);jae  <FsRtlIsDbcsInExpression+>": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movzwl -(%ebp), %esi;movl -(%ebp), %eax;movb (%esi,%eax), %al": 1,
                "movl -(%ebp), %eax;movb (%esi,%eax), %al;cmpb $-, %al;movb %al, -(%ebp);jb  <FsRtlIsDbcsInExpression+>": 1,
                "jb - <FsRtlIsDbcsInExpression+>;incl -(%ebp);cmpl %edx, %esi;jb - <FsRtlIsDbcsInExpression+>;cmpl %edx, %esi": 1,
                "testl %ebx, %ebx;je  <FsRtlIsDbcsInExpression+>;cmpb $, -(%ebp);movl -(%ebp), %eax;movl %ecx, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;cmpw -(%ebp), %si;sete %al;jmp  <FsRtlIsDbcsInExpression+>;cmpl $, -(%ebp)": 1,
                "pushl %ecx;movw (%ebp), %dx;pushl %ebx;xorl %ebx, %ebx;cmpw %bx, %dx": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpw %bx, %dx;je  <FsRtlIsHpfsDbcsLegal+>;cmpb %bl, (%ebp)": 1,
                "cmpb %bl, (%ebp);movl (%ebp), %ecx;je  <FsRtlIsHpfsDbcsLegal+>;cmpw $, %dx;jne  <FsRtlIsHpfsDbcsLegal+>": 1,
                "cmpw $, %dx;jne  <FsRtlIsHpfsDbcsLegal+>;movb (%ecx), %al;cmpb $, %al;je  <FsRtlIsHpfsDbcsLegal+>": 1,
                "jne  <FsRtlIsHpfsDbcsLegal+>;movb (%ecx), %al;cmpb $, %al;je  <FsRtlIsHpfsDbcsLegal+>;cmpb $, %al": 1,
                "je  <FsRtlIsHpfsDbcsLegal+>;cmpb $, %al;je  <FsRtlIsHpfsDbcsLegal+>;cmpw $, %dx;jne  <FsRtlIsHpfsDbcsLegal+>": 1,
                "cmpw $, %dx;jne  <FsRtlIsHpfsDbcsLegal+>;movb (%ecx), %al;cmpb $, %al;jne  <FsRtlIsHpfsDbcsLegal+>": 1,
                "je  <FsRtlIsHpfsDbcsLegal+>;cmpb $, (%ecx);jne  <FsRtlIsHpfsDbcsLegal+>;cmpb %bl, (%ebp);je  <FsRtlIsHpfsDbcsLegal+>": 1,
                "cmpb %bl, (%ebp);je  <FsRtlIsHpfsDbcsLegal+>;cmpw $, %dx;jbe  <FsRtlIsHpfsDbcsLegal+>;incl %ecx": 1,
                "movw %dx, (%ebp);cmpb %bl, (%ebp);je  <FsRtlIsHpfsDbcsLegal+>;movl (%ebp), %eax;cmpw %bx, %ax": 1,
                "movb (%ecx,%esi), %al;cmpb $-, %al;jb  <FsRtlIsHpfsDbcsLegal+>;cmpb %bl, ;je  <FsRtlIsHpfsDbcsLegal+>": 1,
                "orl $, %ebx;andl %ebx, %edx;movl %edx, (%ebp);je  <FsRtlIsHpfsDbcsLegal+>;incl %esi": 1,
                "incl %esi;cmpl %edi, %esi;jae - <FsRtlIsHpfsDbcsLegal+>;jmp - <FsRtlIsHpfsDbcsLegal+>;jmp - <FsRtlIsHpfsDbcsLegal+>": 1,
                "pushl %edi;movl (%ebp), %edi;testl %edi, %edi;je  <FsRtlNotifyFullReportChange+>;cmpl $, %edi": 1,
                "xorl %edx, %edx;movl %ecx, %eax;divl %esi;movl (%ebp), %ecx;movl %eax, (%ebp)": 1,
                "shrl $, %eax;xorb (%ebp), %al;movb %bl, (%ecx);andb $, %al;movb %dl, (%ecx)": 1,
                "jmp  <FsRtlNotifyFullReportChange+>;movw $, (%ebx);movw -(%ebp), %ax;movw %ax, (%ebx);movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <IoGetDeviceObjectPointer>;xorl %esi, %esi;cmpl %esi, %eax": 1,
                "calll - <IoGetDeviceObjectPointer>;xorl %esi, %esi;cmpl %esi, %eax;jge  <FsRtlNotifyFullReportChange+>;movl %eax, %edi": 1,
                "movl %eax, %edi;jmp  <FsRtlNotifyFullReportChange+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, %edx;calll - <IofCallDriver>;cmpl $, %eax;jne  <FsRtlNotifyFullReportChange+>;pushl %esi": 1,
                "calll - <ObfDereferenceObject>;pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;movl %edi, %eax": 1,
                "jae  <FsRtlNotifyFullReportChange+>;popl %esp;addb %ah, ;addb %al, (%eax);addb %bl, (%eax,%eax)": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movb $, -(%ebp);movl %edx, -(%ebp);jae  <IoSetPartitionInformation+>": 1,
                "leal (%eax), %esi;xorl %ebx, %ebx;movl %esi, %eax;incl %ebx;movb (%eax), %cl": 1,
                "movb (%eax), %cl;testb %cl, %cl;je  <IoSetPartitionInformation+>;cmpb $, %cl;je  <IoSetPartitionInformation+>": 1,
                "calll - <KeWaitForSingleObject>;movl -(%ebp), %edi;cmpl $, %ebx;jbe  <IoSetPartitionInformation+>;movl %esi, %ecx": 1,
                "ja  <IoSetPartitionInformation+>;movl (%ebp), %eax;cmpl %eax, -(%ebp);movb $, -(%ebp);jae  <IoSetPartitionInformation+>": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %esi, %eax;shrl %cl, %eax;cmpl $, %eax;je  <IoWritePartitionTable+>;incb -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %edi;pushl -(%ebp);movb $, -(%ebp);pushl $;movb $, -(%ebp)": 1,
                "je  <IoWritePartitionTable+>;movl (%eax), %ecx;orb $, -(%ecx);subl $, %ecx;movl -(%ebp), %ecx": 2,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);cmpb $, -(%ebp);jne  <IoWritePartitionTable+>;movw $, (%edi)": 1,
                "movl %ebx, -(%ebp);cmpb $, -(%ebp);jne  <IoWritePartitionTable+>;movw $, (%edi);movl -(%ebp), %eax": 1,
                "cmpb $, (%ebx);movb $, -(%ebp);sete %cl;decb %cl;andl $, %ecx": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jmp - <IoWritePartitionTable+>;jmp  <IoWritePartitionTable+>;movl $, -(%ebp);pushl %ebx;pushl %edi": 1,
                "jmp  <IoWritePartitionTable+>;movl $, -(%ebp);pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "xorl %edi, %edi;addl %esi, %ecx;adcl %edi, %eax;cmpl (%ebp), %eax;jb  <IoWritePartitionTable+>": 1,
                "addl $, %ecx;addl $, %edx;cmpl (%esi), %eax;jb - <IoWritePartitionTable+>;movl %edi, %eax": 1,
                "movl %esp, %ebp;pushl (%ebp);calll - <IoWritePartitionTable+>;testl %eax, %eax;jne  <IoWritePartitionTable+>": 1,
                "pushl %eax;movl (%ebp), %eax;pushl (%eax);movl (%eax), %edx;pushl (%eax)": 1,
                "cmpl %eax, %ecx;jbe  <IoWritePartitionTable+>;movl %ecx, %eax;movl (%ebp), %ecx;shll $, %eax": 1,
                "divl %ecx;imull %ecx, %eax;shrl $, %eax;movl %eax, (%esi);popl %esi": 1,
                "pushl %edi;movl (%ebx), %edi;xorl %eax, %eax;addl %esi, %ecx;pushl %eax": 1,
                "addl $-, %ecx;adcl $-, %edx;pushl %edx;pushl %ecx;calll - <_aulldiv>": 1,
                "xorl %eax, %eax;pushl %eax;pushl (%ebp);movl %edx, -(%ebp);pushl %edi": 1,
                "movl -(%ebp), %eax;movl %eax, (%ecx);movl -(%ebp), %eax;movl %edx, (%ecx);movl %eax, (%ecx)": 1,
                "adcl $-, %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl (%ebp), %eax;movl (%ebx), %ecx": 1,
                "pushl (%ebp);pushl (%esi);calll - <RtlUpperString+>;movl %eax, (%esi);xorl %eax, %eax": 1,
                "movl $, (%ebx);movl $, (%ebx);movl %edx, (%ebx);movl %edx, (%ebx);jne  <IoWritePartitionTable+>": 1,
                "movl %eax, (%ebx);movl %ecx, (%ebx);movl %edx, (%ebx);cmpl %edx, (%ebp);movl (%ebp), %eax": 1,
                "leal (%edx), %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %eax;movw $, (%edx);movl (%eax), %eax": 1,
                "movw %bx, (%edx);movl %ebx, (%edx);pushl (%esi);pushl (%esi);calll - <IoWritePartitionTable+>": 1,
                "pushl (%esi);movl (%esi), %eax;movl (%esi), %ecx;addl $-, %eax;adcl $-, %ecx": 1,
                "movl (%ebx), %edi;shll $, %eax;xorl %edx, %edx;leal -(%edi,%eax), %eax;divl %edi": 1,
                "jne  <IoWritePartitionTable+>;cmpw %dx, (%esi);jne  <IoWritePartitionTable+>;cmpw %dx, (%esi);jne  <IoWritePartitionTable+>": 1,
                "pushl %eax;pushl %edx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "je  <IoWritePartitionTable+>;movl $, (%ebp);jmp  <IoWritePartitionTable+>;movl (%esi), %eax;cmpl -(%ebp), %eax": 1,
                "andl $, -(%ebp);testl %ebx, %ebx;jbe  <IoWritePartitionTable+>;movl -(%ebp), %eax;pushl -(%ebp)": 1,
                "pushl %ebx;pushl (%edi);pushl (%edi);calll - <IoGetBootDiskInformation+>;testl %eax, %eax": 1,
                "calll - <IoGetBootDiskInformation+>;testl %eax, %eax;movl %eax, (%ebp);jl  <IoWritePartitionTable+>;movl -(%ebp), %eax": 1,
                "addl $, %ebx;decl (%ebp);movl %eax, (%ebp);jne - <IoWritePartitionTable+>;movl (%ebp), %eax": 1,
                "jne - <IoWritePartitionTable+>;movl (%ebp), %eax;cmpl %eax, (%esi);jne  <IoWritePartitionTable+>;movl (%ebp), %eax": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;leal (%ebp), %eax": 1,
                "movl %edx, -(%ebp);jbe  <IoWritePartitionTable+>;movl (%ebp), %ebx;addl $, %ebx;jmp  <IoWritePartitionTable+>": 1,
                "pushl (%edi);pushl (%edi);calll - <IoGetBootDiskInformation+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "jl  <IoWritePartitionTable+>;movl -(%ebp), %eax;movl %eax, -(%ebp);shll $, %esi;addl -(%ebp), %esi": 1,
                "addl -(%ebp), %esi;xorl %eax, %eax;cmpl %eax, (%esi);movl %esi, -(%ebp);jne  <IoWritePartitionTable+>": 1,
                "pushl (%edi);calll - <_allmul>;movl %eax, (%ebx);movl -(%ebp), %eax;movl %edx, (%ebx)": 1,
                "cmpl -(%ebp), %eax;jb - <IoWritePartitionTable+>;cmpl $, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "jne  <IoWritePartitionTable+>;movl $, (%ebp);jmp  <IoWritePartitionTable+>;movl (%eax), %eax;movl (%ebx), %ecx": 1,
                "adcl $-, %edi;jmp  <IoWritePartitionTable+>;movl (%ebx), %eax;movl (%ebx), %ecx;xorl %edx, %edx": 1,
                "pushl (%ebx);pushl (%ebx);calll - <IoWritePartitionTable+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);jl  <IoWritePartitionTable+>;addl $, -(%ebp);adcl $, -(%ebp);xorl %eax, %eax": 1,
                "xorl %eax, %eax;cmpl %eax, -(%ebp);jb - <IoWritePartitionTable+>;ja  <IoWritePartitionTable+>;movl -(%ebp), %eax": 1,
                "subl %ebx, %eax;je  <IoWritePartitionTableEx+>;decl %eax;je  <IoWritePartitionTableEx+>;movl $, %edi": 1,
                "leal (%esi), %eax;pushl %eax;pushl %ecx;pushl $;pushl (%ebx)": 1,
                "movl -(%ebp), %esi;addl $, %eax;pushl %eax;movl (%ebp), %eax;pushl (%eax)": 1,
                "addl $, %eax;pushl %eax;movl (%ebp), %eax;pushl (%eax);pushl $": 1,
                "pushl %eax;movl (%ebp), %eax;pushl (%eax);pushl $;pushl (%ebx)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);calll - <IoWritePartitionTable+>;jmp  <IoWritePartitionTableEx+>": 1,
                "calll - <IoWritePartitionTable+>;movl %eax, %edi;cmpl $, -(%ebp);je  <IoWritePartitionTableEx+>;pushl -(%ebp)": 1,
                "testl %eax, %eax;jl  <IoVerifyPartitionTable+>;pushl %esi;pushl %edi;movl (%ebp), %edi": 1,
                "pushl (%eax);decl %esi;calll - <IoReadPartitionTableEx>;testl %eax, %eax;jl  <IoVerifyPartitionTable+>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %edx": 1,
                "movl -(%ebp), %edi;pushl %edi;calll - <IoWritePartitionTable+>;movl %eax, %ebx;cmpl %esi, %ebx": 1,
                "calll - <PoQueueShutdownWorkItem+>;movl %ebx, %eax;jmp  <IoVerifyPartitionTable+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax;pushl %ebx;calll - <IoWritePartitionTable+>": 1,
                "adcl $-, %eax;pushl %eax;pushl %ebx;pushl %edx;pushl %ecx": 1,
                "movsl (%esi), %es:(%edi);movl %edx, -(%ebp);movl %eax, -(%ebp);movsl (%esi), %es:(%edi);calll - <IoWritePartitionTable+>": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <IoCreateDisk+>;pushl $;popl %ecx": 1,
                "calll - <IoGetBootDiskInformation+>;testl %eax, %eax;jl  <IoSetPartitionInformationEx+>;pushl %esi;pushl %edi": 1,
                "testl %esi, %esi;jl  <IoSetPartitionInformationEx+>;movl -(%ebp), %ecx;movl (%ebp), %eax;cmpl (%eax), %ecx": 1,
                "je  <IoSetPartitionInformationEx+>;movl $, %esi;jmp  <IoSetPartitionInformationEx+>;subl $, %ecx;je  <IoSetPartitionInformationEx+>": 1,
                "cmpl %eax, %edi;movl %eax, (%ebp);jae  <IoSetPartitionInformationEx+>;movl (%edi), %esi;jmp  <IoSetPartitionInformationEx+>": 1,
                "pushl %eax;pushl %esi;pushl %esi;pushl $;pushl (%ebp)": 2,
                "jmp  <IoSetPartitionInformationEx+>;orl $-, (%ebx);movl %esi, (%ebx);movl %esi, (%ebx);xorl %eax, %eax": 1,
                "movl (%ecx), %eax;leal (%ebp), %ecx;pushl %ecx;leal (%ebp), %ecx;pushl %ecx": 1,
                "pushl %eax;pushl $;pushl (%ebp);calll *;movl %eax, (%ebx)": 1,
                "calll *;movl %eax, (%ebx);movzbl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 1,
                "movzbl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebp)": 1,
                "pushl %ecx;pushl %ecx;pushl %ebx;pushl %esi;pushl $": 2,
                "pushl %esi;pushl $;xorl %esi, %esi;pushl $;incl %esi": 2,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpl $-, %esi;je  <IoSetPartitionInformationEx+>": 1,
                "movl %esp, %ebp;movl , %eax;pushl %esi;movl (%ebp), %esi;addl $, %eax": 1,
                "movl (%ebp), %edi;je  <IoCheckQuotaBufferValidity+>;movl (%ebp), %eax;andl $, (%eax);movl $, %eax": 1,
                "cmpl %ecx, %edi;jb  <IoCheckQuotaBufferValidity+>;cmpl %eax, (%esi);jne  <IoCheckQuotaBufferValidity+>;movl (%esi), %eax": 1,
                "jb  <IoCheckQuotaBufferValidity+>;cmpl %eax, (%esi);jne  <IoCheckQuotaBufferValidity+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "je  <IoCheckQuotaBufferValidity+>;cmpl %eax, %ecx;ja  <IoCheckQuotaBufferValidity+>;testb $, %al;jne  <IoCheckQuotaBufferValidity+>": 1,
                "pushl %ebx;pushl $;pushl %esi;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl %edi, %eax;popl %edi": 1,
                "addb %dh, (%ebx);incl %esp;addb %ah, (%ebp);jbe  <IoCheckQuotaBufferValidity+>;imull $, (%eax), %eax": 1,
                "popl %esp;addb %dl, (%ebx);addb %dh, %gs:(%ebx);jae  <IoCheckQuotaBufferValidity+>;imull $, (%eax), %eax": 1,
                "cmpw $, (%ebx);jne - <IoIsValidNameGraftingBuffer+>;movw (%ebx), %dx;movzwl (%ebx), %esi;movzwl %dx, %eax": 1,
                "jbe  <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne  <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne  <IoIsValidNameGraftingBuffer+>": 1,
                "jne  <IoIsValidNameGraftingBuffer+>;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "calll - <ZwClose>;cmpl %edi, %esi;jl  <IoIsValidNameGraftingBuffer+>;movl -(%ebp), %esi;cmpw $, (%esi)": 1,
                "pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;popl %ecx": 1,
                "movw (%ebx), %ax;cmpw $, %ax;jb - <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne  <IoIsValidNameGraftingBuffer+>": 1,
                "jb - <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne  <IoIsValidNameGraftingBuffer+>;cmpw $, (%ebx);jne  <IoIsValidNameGraftingBuffer+>": 1,
                "movw (%ebx), %ax;cmpw $, %ax;je  <IoIsValidNameGraftingBuffer+>;cmpw %cx, %ax;jne - <IoIsValidNameGraftingBuffer+>": 1,
                "jne - <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne - <IoIsValidNameGraftingBuffer+>;cmpw $, (%ebx);jne - <IoIsValidNameGraftingBuffer+>": 1,
                "addb %bh, (%edi);addb %bl, (%eax,%eax);addb %bh, (%edx);addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl %esi;xorl %ecx, %ecx;pushl %edi;movl (%ebp), %edi;xorl %esi, %esi": 1,
                "jmp  <IoIsValidNameGraftingBuffer+>;movl (%ebx), %eax;movl %eax, -(%ebp);jmp  <IoIsValidNameGraftingBuffer+>;movl (%ebp), %eax": 1,
                "cmpl %eax, -(%ebp);je  <IoIsValidNameGraftingBuffer+>;testl %eax, %eax;je  <IoIsValidNameGraftingBuffer+>;pushl $": 1,
                "movl %eax, %edi;testl %edi, %edi;jne  <IoRegisterLastChanceShutdownNotification+>;movl $, %eax;jmp  <IoRegisterLastChanceShutdownNotification+>": 1,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);cmpl %edi, %eax;jne  <IoSetInformation+>;movl %ebx, %ecx": 1,
                "jmp  <IoSetInformation+>;leal (%ebp), %eax;pushl %eax;movl (%ebx), %eax;shrl $, %eax": 1,
                "je - <IoSetInformation+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;jmp  <IoSetInformation+>": 1,
                "cmpb $, (%ebp);movl %eax, (%esi);movb $, (%esi);je  <IoSetInformation+>;movl %edi, (%esi)": 1,
                "movl %edi, (%esi);jmp  <IoSetInformation+>;leal -(%ebp), %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl (%edx), %ecx;movb %al, (%ebp);leal (%esi), %eax;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "movl %eax, (%ecx);movb (%ebp), %cl;movl %eax, (%edx);calll *;movl (%ebp), %eax": 1,
                "je  <IoSetInformation+>;cmpl $, (%ebp);jne  <IoSetInformation+>;movl (%ebx), %ecx;pushl %edi": 1,
                "movl (%ebx), %ecx;pushl %edi;shrl $, %ecx;andl $, %ecx;pushl %ecx": 1,
                "pushl %edi;pushl %eax;calll - <KeWaitForSingleObject>;cmpl $, %eax;jne  <IoSetInformation+>": 1,
                "pushl %edi;pushl $;movl $, %esi;pushl %esi;calll - <ExAcquireResourceExclusiveLite>": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl , %eax;movl (%ebp), %edi;movl $, %ecx;jmp  <IoUnregisterFsRegistrationChange+>": 1,
                "movl (%eax), %ecx;movl (%eax), %edx;pushl $;movl %ecx, (%edx);pushl %eax": 1,
                "calll - <ExReleaseResourceLite>;movl %edi, %ecx;calll - <ObfDereferenceObject>;popl %edi;popl %esi": 1,
                "movl %ebx, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %edi;jmp  <IoVerifyVolume+>": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %edi;jmp  <IoVerifyVolume+>;movl %eax, %edi": 1,
                "movl %eax, %edx;cmpl %ebx, %edx;jne  <IoVerifyVolume+>;movl $, %edi;jmp  <IoVerifyVolume+>": 1,
                "cmpb %bl, (%ebp);movb $, (%eax);setne %cl;movb %cl, (%eax);movb $, (%eax)": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movl %edi, %ecx;calll *;movl %eax, %edi": 1,
                "pushl %eax;pushl %ebx;pushl $;pushl (%ebp);movl %ebx, (%ebp)": 1,
                "movl (%ebp), %eax;xorl %edi, %edi;movl %edi, (%ebx);movsbl (%eax), %eax;pushl %eax": 1,
                "calll - <KeWaitForSingleObject>;movb $, %cl;calll *;movl (%edi), %edx;movb %al, %cl": 1,
                "movl %edi, (%edi);calll *;pushl %esi;calll - <IoFreeIrp>;andl $, (%ebx)": 1,
                "pushl %eax;jmp  <IoQueryFileDosDeviceName+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "shrl $, %esi;movl $, %ebx;jmp  <IoEnumerateRegisteredFiltersList+>;movl (%eax), %eax;incl %edi": 1,
                "movl (%eax), %eax;incl %edi;cmpl %ebx, %eax;jne - <IoEnumerateRegisteredFiltersList+>;cmpl %esi, %edi": 1,
                "cmpl %ebx, %edi;je  <IoEnumerateRegisteredFiltersList+>;movl (%edi), %ecx;calll - <ObfReferenceObject>;movl (%edi), %eax": 1,
                "calll - <ObfReferenceObject>;movl (%edi), %eax;movl (%ebp), %ecx;addl $, (%ebp);decl %esi": 1,
                "leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl ;pushl %esi": 1,
                "pushl (%ebp);pushl ;pushl %esi;pushl (%ebp);calll - <ObReferenceObjectByHandle>": 1,
                "movl %eax, %esi;calll - <ZwClose>;pushl (%ebp);pushl %esi;pushl (%ebp)": 1,
                "pushl (%ebp);calll - <IoAttachDeviceToDeviceStackSafe>;movl %edi, %ecx;movl %eax, %esi;calll - <ObfDereferenceObject>": 1,
                "je  <IoAttachDevice+>;pushl %eax;calll - <IoGetRelatedDeviceObject>;movl %eax, %ebx;leal -(%ebp), %eax": 1,
                "movl %eax, %ebx;leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl (%esi), %edx;movl %edx, -(%ecx);movl %eax, %edx;movl %ebx, %ecx;calll - <IofCallDriver>": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jne  <IoAttachDevice+>;movl $, %ebx;jmp  <IoAttachDevice+>": 1,
                "jne  <IoAttachDevice+>;movl $, %ebx;jmp  <IoAttachDevice+>;pushl $;movl $, %esi": 1,
                "pushl $;movl $, %esi;pushl %esi;calll - <ExAcquireResourceExclusiveLite>;pushl %ebx": 1,
                "sbbl %eax, %eax;andl $, %eax;addl $, %eax;movl %eax, %ebx;jmp  <IoAttachDevice+>": 1,
                "movl $, %esi;pushl %esi;calll - <ExAcquireResourceExclusiveLite>;testb %al, %al;je  <IoAttachDevice+>": 1,
                "cmpl %eax, (%eax);je  <IoAttachDevice+>;movb $, %cl;movb $, (%edi);calll *": 1,
                "calll - <ObOpenObjectByName>;movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <IoAttachDevice+>;movl $, -(%ebp)": 1,
                "je  <IoAttachDevice+>;movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %ebx;jb  <IoAttachDevice+>": 1,
                "calll  <ExRaiseDatatypeMisalignment>;movb (%ebx), %al;movb %al, (%ebx);movl (%ebp), %ecx;cmpl %edi, %ecx": 1,
                "cmpl %edi, %ecx;je  <IoAttachDevice+>;movl , %eax;cmpl %eax, %ecx;jb  <IoAttachDevice+>": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <NtQueryEaFile+>;movl %esi, -(%ebp);movl (%ebp), %ebx": 1,
                "jge  <NtQueryEaFile+>;movl %esi, -(%ebp);pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movzbl (%eax), %ecx;addl $, %ecx;movl %ecx, -(%ebp);cmpl %ecx, -(%ebp);jb  <NtQueryEaFile+>": 1,
                "calll - <ExFreePoolWithTag>;movl %esi, -(%ebp);movl $, %eax;movl %eax, (%ebx);movl %edi, (%ebx)": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;andl $, -(%ebp);movl $, %eax": 1,
                "movl $, -(%ebp);pushl $;pushl (%ebp);pushl %esi;calll - <ExAllocatePoolWithQuotaTag>": 1,
                "calll - <ExAllocatePoolWithQuotaTag>;movl %eax, -(%ebp);orl $-, -(%ebp);movl (%ebp), %ecx;movl (%ebp), %esi": 1,
                "movl %eax, %esi;cmpb $, -(%ebp);je  <NtQueryEaFile+>;cmpb $, -(%ebp);je  <NtQueryEaFile+>": 1,
                "andl $, (%esi);movl %ebx, (%esi);jmp  <NtQueryEaFile+>;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "cmpb %cl, -(%ebp);je  <NtQueryEaFile+>;movl -(%ebp), %eax;movl %eax, (%esi);movl %eax, (%edi)": 1,
                "movl (%eax), %eax;testb $, %al;je  <NtQueryEaFile+>;cmpl %ecx, (%ebp);je  <NtQueryEaFile+>": 1,
                "orl $-, -(%ebp);orl $, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%edi);movl -(%ebp), %eax": 1,
                "movb $, (%edi);cmpb $, (%ebp);je  <NtQueryEaFile+>;movb $, (%edi);cmpb $, (%ebp)": 1,
                "jmp - <NtQueryEaFile+>;testb $, %al;je - <NtQueryEaFile+>;cmpl %ecx, (%ebp);je - <NtQueryEaFile+>": 1,
                "testb %al, %al;je  <NtSetEaFile+>;movl %ebx, -(%ebp);movl , %eax;movl (%ebp), %esi": 1,
                "cmpl , %eax;jbe  <NtSetEaFile+>;calll  <ExRaiseAccessViolation>;xorl %ebx, %ebx;orl $-, -(%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %ebx": 2,
                "calll - <NtDeleteAtom+>;calll - <_CIsqrt+>;retl $;int;int": 2,
                "testl %ebx, %ebx;je  <NtQueryQuotaInformationFile+>;leal (%ebx), %ecx;movl , %eax;cmpl %eax, %ecx": 1,
                "movzbl %al, %eax;pushl %eax;calll - <RtlLengthRequiredSid>;movl %eax, %edi;movl %edi, -(%ebp)": 1,
                "testl %edi, %edi;je  <NtQueryQuotaInformationFile+>;testb $, %bl;je  <NtQueryQuotaInformationFile+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "calll  <ExRaiseAccessViolation>;pushl $;leal (%ebx), %eax;andl $-, %eax;addl -(%ebp), %eax": 1,
                "cmpl %edi, %eax;je  <NtQueryQuotaInformationFile+>;movl %eax, -(%ebp);cmpl %edi, -(%ebp);je  <NtQueryQuotaInformationFile+>": 1,
                "xorl %edi, %edi;cmpl %edi, %esi;jge  <NtQueryQuotaInformationFile+>;cmpl %edi, -(%ebp);je  <NtQueryQuotaInformationFile+>": 1,
                "jmp  <NtQueryQuotaInformationFile+>;xorl %edi, %edi;cmpl %edi, -(%ebp);je  <NtQueryQuotaInformationFile+>;pushl -(%ebp)": 1,
                "cmpl %edi, -(%ebp);je  <NtQueryQuotaInformationFile+>;pushl -(%ebp);calll - <RtlValidSid>;testb %al, %al": 1,
                "je  <NtQueryQuotaInformationFile+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "jne  <NtQueryQuotaInformationFile+>;movl %ebx, %ecx;calll - <ObfReferenceObject>;movb $, %al;jmp  <NtQueryQuotaInformationFile+>": 1,
                "testb %al, %al;jne  <NtQueryQuotaInformationFile+>;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax": 1,
                "leal (%edi), %eax;movl %eax, (%eax);movl %eax, (%eax);movb $, -(%ebp);andl $, (%ebx)": 1,
                "pushl %ebx;calll  <NtSetVolumeInformationFile+>;cmpl $, -(%ebp);je  <NtQueryQuotaInformationFile+>;pushl $": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%edi);movl (%ebp), %ecx": 1,
                "cmpb $, (%ebp);je  <NtQueryQuotaInformationFile+>;movb $, (%eax);cmpb $, (%ebp);je  <NtQueryQuotaInformationFile+>": 1,
                "jae  <NtSetVolumeInformationFile+>;movb (%esi), %al;testb %al, %al;je  <NtSetVolumeInformationFile+>;movzbl %al, %eax": 1,
                "cmpl %edi, (%ebp);je  <NtSetVolumeInformationFile+>;testb $, %bl;je  <NtSetVolumeInformationFile+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "je  <NtSetVolumeInformationFile+>;testb $, %bl;je  <NtSetVolumeInformationFile+>;calll  <ExRaiseDatatypeMisalignment>;movl (%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl ;pushl %esi;pushl -(%ebp)": 1,
                "calll - <RtlRemoveUnicodePrefix+>;movl %eax, %ebx;cmpb $, -(%ebp);je  <NtSetVolumeInformationFile+>;movl %esi, %ecx": 1,
                "jne  <NtSetVolumeInformationFile+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;jmp  <NtSetVolumeInformationFile+>;movb $, (%eax)": 1,
                "cmpl %edi, %ecx;je  <NtSetVolumeInformationFile+>;calll - <ObfDereferenceObject>;movl $, %eax;jmp  <NtSetVolumeInformationFile+>": 1,
                "pushl -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %ebx": 1,
                "cmpl %esi, -(%ebp);jl  <NtSetVolumeInformationFile+>;movw $, -(%ebp);movl %esi, -(%ebp);orl $-, -(%ebp)": 1,
                "addb %al, (%eax);xorb %al, (%eax);incl %eax;addb %bh, %bh;addb %cl, %ah": 1,
                "calll - <KeReadStateSemaphore>;testl %eax, %eax;jne  <NtSetVolumeInformationFile+>;pushl (%ebp);calll - <IoCancelIrp>": 1,
                "subl %eax, %edi;js - <NtSetVolumeInformationFile+>;xorl %eax, %eax;jmp - <NtSetVolumeInformationFile+>;nop": 1,
                "movl (%ebp), %esi;testb $, (%esi);je  <NtSetVolumeInformationFile+>;leal (%esi), %eax;movl %eax, (%ebp)": 2,
                "pushl %ebx;pushl %eax;pushl (%ebp);movl %eax, (%ebp);calll - <IoBuildDeviceIoControlRequest>": 1,
                "jmp  <NtSetVolumeInformationFile+>;movl (%ebp), %ecx;movl %ecx, (%eax);movl %edi, %ecx;calll - <ObfReferenceObject>": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl %eax;pushl %ebx": 1,
                "jne  <NtSetVolumeInformationFile+>;movl $, %eax;jmp  <NtSetVolumeInformationFile+>;orl $, (%esi);leal -(%ebp), %eax": 1,
                "cmpb %bl, ;je  <NtSetVolumeInformationFile+>;leal -(%ebp), %ecx;pushl %ecx;movl %eax, %ecx": 1,
                "pushl %ecx;movl (%ebp), %eax;pushl %esi;pushl (%ebp);movl $, %esi": 1,
                "pushl %esi;pushl (%ebp);movl $, %esi;movl %eax, (%ebp);calll - <IoGetRelatedDeviceObject>": 1,
                "movl (%ecx), %ecx;testl %ecx, %ecx;je  <NtSetVolumeInformationFile+>;pushl %eax;leal -(%ebp), %eax": 1,
                "calll - <IoCreateStreamFileObjectLite>;movl %eax, -(%ebp);movl (%esi), %ecx;movl %ecx, (%eax);movl %ebx, -(%ebp)": 1,
                "calll - <ExAcquireResourceSharedLite>;movl (%ebp), %eax;movl (%eax), %eax;cmpl $, %eax;je  <NtSetVolumeInformationFile+>": 1,
                "movl $, -(%ebp);movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "cmpl %ebx, %eax;jge  <NtSetVolumeInformationFile+>;movl %eax, -(%ebp);movl (%edi), %edi;movl -(%ebp), %esi": 1,
                "pushl %ebx;pushl (%ebp);movl %ebx, -(%ebp);calll - <ObQueryNameString>;pushl $": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jl  <NtSetVolumeInformationFile+>;movl (%ebp), %eax;cmpl %ebx, %eax": 1,
                "movl %ecx, -(%ebp);movw %ax, -(%ebp);movw $, -(%ebp);jmp  <NtSetVolumeInformationFile+>;pushl %ebx": 1,
                "pushl $;popl %ebx;movl $, (%ebp);movl %edi, -(%ebp);movl %fs:, %eax": 1,
                "pushl (%eax);calll - <KeStackAttachProcess>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "calll  <ExRaiseHardError>;cmpb $, (%edi);movl %eax, %ebx;jne  <NtSetVolumeInformationFile+>;cmpb $, (%edi)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;movl -(%ebp), %edi;pushl $": 1,
                "jl  <NtSetVolumeInformationFile+>;cmpl $, -(%ebp);jne  <NtSetVolumeInformationFile+>;movl (%esi), %eax;movl (%eax), %ecx": 1,
                "movl (%eax), %ecx;movzbl (%eax), %eax;movl (%ecx), %edx;pushl %esi;pushl %ecx": 1,
                "movl (%esi), %eax;cmpb $, (%eax);jne  <NtSetVolumeInformationFile+>;cmpb $, (%eax);jne  <NtSetVolumeInformationFile+>": 1,
                "movl %ebx, (%ecx);movb $, %dl;calll - <IofCompleteRequest>;popl %edi;popl %esi": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ebp), %eax;movsl (%esi), %es:(%edi)": 1,
                "popl %edi;addl $, %eax;popl %esi;movl %eax, (%edx);popl %ebx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <NtSetVolumeInformationFile+>;testl %esi, %esi;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "je  <NtSetVolumeInformationFile+>;decl %eax;je  <NtSetVolumeInformationFile+>;decl %eax;je  <NtSetVolumeInformationFile+>": 1,
                "decl %eax;je  <NtSetVolumeInformationFile+>;xorb %al, %al;jmp  <NtSetVolumeInformationFile+>;movb $, %al": 1,
                "movw %ax, -(%ebp);movzwl %ax, %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "testl %eax, %eax;jl  <NtSetVolumeInformationFile+>;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <FsRtlOplockFsctrl+>;testl %eax, %eax;jl  <NtSetVolumeInformationFile+>;pushl %ebx;pushl %esi": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <FsRtlOplockFsctrl+>;pushl %ebx": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ZwCreateFile>;movl %eax, %ebx;cmpl %esi, %ebx": 1,
                "jl  <NtSetVolumeInformationFile+>;orl $-, -(%ebp);orl $-, -(%ebp);pushl %esi;leal -(%ebp), %eax": 1,
                "jns  <NtSetVolumeInformationFile+>;jae  <NtSetVolumeInformationFile+>;je  <NtSetVolumeInformationFile+>;addb %ch, %gs:(%ebp);pushl %edx": 1,
                "je  <NtSetVolumeInformationFile+>;bound (%eax), %eax;je  <NtSetVolumeInformationFile+>;insb %dx, %es:(%edi);addb %ch, (%edi)": 1,
                "movl (%ebp), %ecx;xchgl %eax, (%ecx);cmpl $, (%esi);je  <NtSetVolumeInformationFile+>;pushl $": 1,
                "calll - <KeSetEvent>;movl %esi, %ecx;calll - <ObfDereferenceObject>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "cmpl %esi, %edi;jl  <NtSetVolumeInformationFile+>;cmpl $, -(%ebp);jb  <NtSetVolumeInformationFile+>;pushl %esi": 1,
                "nop;popl %esp;addb %dl, (%ebx);addb %ah, %gs:(%ebx);jne  <NtSetVolumeInformationFile+>": 1,
                "movl %eax, %ebx;cmpl %esi, %ebx;je  <NtSetVolumeInformationFile+>;pushl $;popl %ecx": 1,
                "pushl $;popl %ecx;leal (%ebx), %edx;pushl $;xorl %eax, %eax": 1,
                "pushl %eax;xorl %edi, %edi;pushl %ebx;movw $, (%ebx);movw $, (%ebx)": 1,
                "jl  <NtSetVolumeInformationFile+>;movl -(%ebp), %esi;movl %esi, %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "movl -(%ebp), %edi;movl $, -(%ebp);movl -(%ebp), %esi;movl (%esi), %eax;testb $, (%eax)": 1,
                "je  <NtSetVolumeInformationFile+>;movl (%edi), %eax;pushl $;pushl $;testb $, (%eax)": 1,
                "pushl $;pushl $;testb $, (%eax);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl $, %eax;jne  <NtSetVolumeInformationFile+>;xorl %esi, %esi;jmp  <NtSetVolumeInformationFile+>;cmpl %ebx, %eax": 1,
                "leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movb -(%ebp), %al;andw $, %ax;movb %al, -(%ebp)": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl %esi;calll - <NtSetVolumeInformationFile+>": 3,
                "cmpl %ebx, %eax;jl - <NtSetVolumeInformationFile+>;jmp  <NtSetVolumeInformationFile+>;jmp - <NtSetVolumeInformationFile+>;pushl $": 2,
                "jmp  <NtSetVolumeInformationFile+>;jmp - <NtSetVolumeInformationFile+>;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl %esi;calll - <NtSetVolumeInformationFile+>;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "je - <NtSetVolumeInformationFile+>;cmpl %ebx, %eax;jl  <NtSetVolumeInformationFile+>;pushl %ebx;pushl $": 1,
                "pushl %ebx;pushl -(%ebp);calll - <KeSetEvent>;retl;int": 1,
                "jbe  <NtSetVolumeInformationFile+>;calll  <ExRaiseAccessViolation>;xorl %ebx, %ebx;orl $-, -(%ebp);jmp  <NtSetVolumeInformationFile+>": 1,
                "cmpb $, -(%ebp);je  <NtSetVolumeInformationFile+>;movl %eax, %edi;jmp  <NtSetVolumeInformationFile+>;movb $, -(%ebp)": 1,
                "movl %ebx, (%esi);pushl %esi;calll - <IoGetRelatedDeviceObject>;movl %eax, -(%ebp);pushl $": 1,
                "jne  <NtSetVolumeInformationFile+>;testb $, (%esi);jne  <NtSetVolumeInformationFile+>;pushl %eax;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;pushl %esi": 1,
                "testl %eax, %eax;jge  <NtSetVolumeInformationFile+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %edx": 1,
                "orl $-, -(%ebp);movl %esi, %eax;jmp  <NtSetVolumeInformationFile+>;movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "pushl $;pushl -(%ebp);pushl -(%ebp);pushl $;pushl %esi": 1,
                "pushl %edi;addl $, %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "incl %eax;movw %ax, -(%ebp);pushl %edi;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;movl , %eax;addl $, %eax": 1,
                "pushl %eax;calll - <RtlAnsiStringToUnicodeString>;movl , %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "movl , %eax;movl (%ebp), %ecx;incl %ecx;pushl %ecx;addl $, %eax": 1,
                "calll - <RtlIsRangeAvailable+>;pushl %edi;movl $, %ebx;pushl %ebx;calll - <ExAcquireResourceSharedLite>": 1,
                "cmpl %edi, %esi;jne - <NtSetVolumeInformationFile+>;movl %ebx, %ecx;calll - <ExReleaseResourceLite>;movl , %ecx": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;jne  <NtSetVolumeInformationFile+>;movl (%eax), %ecx": 1,
                "jl  <NtSetVolumeInformationFile+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movb $, (%esi);movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl %edx, (%ebp);movl $, %eax": 1,
                "pushl %edi;pushl %edi;leal (%esi), %eax;pushl %eax;calll - <KeWaitForSingleObject>": 3,
                "cmpl %ebx, %edi;je  <IoAssignResources+>;movswl (%edi), %eax;pushl %eax;pushl %edi": 1,
                "cmpw %bx, (%eax);je  <IoAssignResources+>;pushl $;pushl %eax;calll - <IoCsqRemoveIrp+>": 4,
                "je  <IoAssignResources+>;pushl $;pushl %eax;calll - <IoCsqRemoveIrp+>;movl (%esi), %eax": 5,
                "pushl %eax;calll - <ExFreePoolWithTag>;pushl %edi;pushl %edi;pushl %edi": 1,
                "pushl $;pushl $;pushl %esi;calll  <IoReportTargetDeviceChange+>;movl %esi, %ecx": 1,
                "movzwl (%edi), %eax;leal (%eax,%ecx), %eax;pushl $;pushl %eax;pushl $": 1,
                "pushl $;pushl (%eax);calll - <ExFreePoolWithTag>;movl (%ebp), %edi;movl (%ebp), %eax": 1,
                "shrl %edx;leal (%eax,%edx,), %edi;movl %ecx, %edx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %ecx, (%ebx);movb $, %al;popl %esi;jmp  <IoAssignResources+>;movl (%ebx), %eax": 1,
                "cmpl %esi, (%ebx);je  <IoGetDeviceInterfaceAlias+>;cmpw $, (%ebx);jb  <IoGetDeviceInterfaceAlias+>;leal -(%ebp), %eax": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl  <IoGetDeviceInterfaceAlias+>;movl %fs:, %eax;decl (%eax)": 1,
                "calll - <RtlUpperChar+>;movw (%ebp), %ax;movw %ax, -(%ebp);movl (%ebp), %eax;movw (%eax), %cx": 1,
                "pushl %esi;pushl %esi;pushl %ebx;movl %ecx, -(%ebp);calll - <RtlGUIDFromString+>": 1,
                "leal -(%ebp), %eax;jmp  <IoGetDeviceInterfaceAlias+>;movl (%ebp), %eax;leal -(%ebp), %ecx;pushl %eax": 1,
                "pushl %ecx;leal -(%ebp), %ecx;sbbl %eax, %eax;andl %ecx, %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <IoSetDeviceInterfaceState+>;movl %eax, %edi": 1,
                "calll - <RtlFreeUnicodeString>;jmp  <IoGetDeviceInterfaceAlias+>;movl $, %edi;jmp - <IoGetDeviceInterfaceAlias+>;movl $, %edi": 1,
                "testl %eax, %eax;jge  <IoGetDeviceInterfaceAlias+>;movl $, %edi;jmp  <IoGetDeviceInterfaceAlias+>;pushl %ebx": 1,
                "testl %edi, %edi;jl  <IoGetDeviceInterfaceAlias+>;movl -(%ebp), %eax;addl $, %ebx;cmpb $, -(%ebp)": 1,
                "andw $, (%ecx,%eax,);movl -(%ebp), %eax;movl -(%ebp), %ecx;leal (%eax,%ecx), %ebx;pushl %ebx": 1,
                "movl -(%ebp), %ecx;leal (%eax,%ecx), %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "decl (%eax);pushl $;pushl $;calll - <ExAcquireResourceExclusiveLite>;leal -(%ebp), %eax": 1,
                "calll - <NtFindAtom+>;testl %eax, %eax;jl  <IoGetDeviceInterfaceAlias+>;movl -(%ebp), %eax;cmpl $, (%eax)": 2,
                "jl  <IoGetDeviceInterfaceAlias+>;pushl -(%ebp);calll - <ZwClose>;movl %ebx, -(%ebp);cmpl %ebx, %esi": 1,
                "addb %ah, (%ebx);addb %al, (%eax);addb %al, (%eax);addb %al, (%ebx);outsl (%esi), %dx": 1,
                "calll - <RtlValidSecurityDescriptor+>;movl %eax, %esi;cmpl %ebx, %esi;jl  <IoGetDeviceInterfaceAlias+>;pushl %edi": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <RtlValidSecurityDescriptor+>;movl %eax, %esi": 1,
                "pushl -(%ebp);movl %ebx, -(%ebp);pushl -(%ebp);pushl %ebx;pushl %ebx": 2,
                "cmpl $, %esi;jne  <IoGetDeviceInterfaceAlias+>;pushl %ebx;pushl -(%ebp);leal -(%ebp), %eax": 2,
                "testl %eax, %eax;jl  <IoGetDeviceInterfaceAlias+>;movl -(%ebp), %edi;cmpw %bx, (%edi);movl %edi, %esi": 1,
                "incl %eax;shrl %eax;leal (%esi,%eax,), %esi;cmpw %bx, (%esi);jne - <IoGetDeviceInterfaceAlias+>": 1,
                "cmpw %bx, (%esi);jne - <IoGetDeviceInterfaceAlias+>;pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "jne - <IoGetDeviceInterfaceAlias+>;pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>;pushl $": 1,
                "calll - <ZwDeleteKey>;pushl -(%ebp);calll - <ZwClose>;movl %ebx, -(%ebp);jmp  <IoGetDeviceInterfaceAlias+>": 1,
                "movb $, -(%ebp);pushl %ebx;pushl -(%ebp);jmp  <IoGetDeviceInterfaceAlias+>;pushl %ebx": 1,
                "jmp  <IoGetDeviceInterfaceAlias+>;pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp)": 1,
                "pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);je  <IoGetDeviceInterfaceAlias+>": 1,
                "je  <IoGetDeviceInterfaceAlias+>;pushl -(%ebp);calll - <ZwClose>;movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "je  <IoGetDeviceInterfaceAlias+>;pushl -(%ebp);calll - <ZwClose>;movl %ebx, -(%ebp);incl -(%ebp)": 1,
                "je  <IoGetDeviceInterfaceAlias+>;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx;addb %dh, (%eax,%eax)": 2,
                "je  <IoGetDeviceInterfaceAlias+>;jb  <IoGetDeviceInterfaceAlias+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%eax,%eax)": 2,
                "addb %al, (%eax);addb %al, (%eax);incl %esp;addb %ah, (%ebp);jbe  <IoGetDeviceInterfaceAlias+>": 1,
                "movl %ecx, -(%ebp);calll - <RtlGUIDFromString>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;xorl %edx, %edx;cmpl %edx, %ecx;jne  <IoGetDeviceInterfaceAlias+>": 1,
                "xorl %edx, %edx;cmpl %edx, %ecx;jne  <IoGetDeviceInterfaceAlias+>;movl , %eax;movl (%eax), %ecx": 1,
                "movl (%eax), %eax;cmpl %edx, %eax;jne  <IoGetDeviceInterfaceAlias+>;movl $, %eax;jmp  <IoGetDeviceInterfaceAlias+>": 1,
                "pushl (%eax);pushl %ebx;pushl %ebx;pushl (%ebp);calll  <IoReportTargetDeviceChange+>": 1,
                "pushl %ebx;pushl %ebx;pushl (%ebp);calll  <IoReportTargetDeviceChange+>;cmpl %ebx, -(%ebp)": 1,
                "movl %eax, (%edi);movl %edi, (%eax);movl (%esi), %ecx;testl %ecx, %ecx;movl %esi, (%esi)": 1,
                "cmpl %ecx, (%ebx);jne  <IoUnregisterPlugPlayNotification+>;movl -(%ebp), %ecx;testl %ecx, %ecx;movb $, -(%ebp)": 1,
                "testl %ecx, %ecx;movb $, -(%ebp);je  <IoUnregisterPlugPlayNotification+>;calll *;movl (%edi), %eax": 1,
                "calll *;pushl $;pushl %edi;calll - <ExFreePoolWithTag>;movl $, %eax": 1,
                "pushl %edi;movb $, (%edi);calll - <IoConnectInterrupt+>;testl %ebx, %ebx;je  <IoUnregisterPlugPlayNotification+>": 1,
                "calll - <IoConnectInterrupt+>;testl %ebx, %ebx;je  <IoUnregisterPlugPlayNotification+>;movl %ebx, %ecx;calll *%esi": 1,
                "movl %ebx, %ecx;calll *%esi;popl %edi;popl %esi;xorl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "andl $, -(%ebp);cmpl $, -(%ebp);jge  <IoReportTargetDeviceChange+>;movl $, %eax;cmpl %eax, -(%ebp)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl $, %edi;cmpl %edi, %esi": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi;pushl %esi": 1,
                "jne  <IoReportTargetDeviceChange+>;movl $, %eax;jmp  <IoReportTargetDeviceChange+>;movl (%ebp), %edx;pushl $": 1,
                "testl %esi, %esi;jge  <IoReportTargetDeviceChange+>;pushl $;pushl $;pushl $": 1,
                "pushl $;pushl $;calll - <IoReportTargetDeviceChange+>;movl %esi, %eax;popl %edi": 1,
                "pushl %esi;pushl %edi;movl %ebx, -(%ebp);je  <IoReportTargetDeviceChange+>;cmpl %ebx, (%ebp)": 1,
                "leave;retl $;cmpl %ebx, (%ebp);jne - <IoReportTargetDeviceChange+>;movl (%ebp), %eax": 1,
                "movl %edi, -(%ebp);jbe  <IoReportTargetDeviceChange+>;leal (%edi), %ecx;movl %ecx, -(%ebp);movb (%edi), %al": 1,
                "movl %ebx, %eax;orl -(%ebp), %eax;je  <IoReportTargetDeviceChange+>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "addl $, %edi;addl $, %eax;cmpl (%esi), %ebx;movl %edi, -(%ebp);movl %eax, -(%ebp)": 1,
                "jae  <IoReportTargetDeviceChange+>;jmp - <IoReportTargetDeviceChange+>;jmp  <IoReportTargetDeviceChange+>;movl -(%ebp), %ecx;movl (%ebp), %edx": 1,
                "movl (%ebp), %esi;xorl %ebx, %ebx;movl -(%ebp), %eax;cmpl (%esi), %eax;je - <IoReportTargetDeviceChange+>": 1,
                "movl %eax, (%ebp);movl $, -(%ebp);jmp - <IoReportTargetDeviceChange+>;movb $, %al;jmp - <IoReportTargetDeviceChange+>": 1,
                "je  <IoReportTargetDeviceChange+>;cmpl %eax, (%esi);jne  <IoReportTargetDeviceChange+>;cmpl %eax, %ebx;je  <IoReportTargetDeviceChange+>": 1,
                "movl %eax, %edi;pushl %ebx;movl %edi, -(%ebp);calll - <RtlCheckRegistryKey+>;movl %eax, (%ebp)": 1,
                "testb $, %al;jne  <IoReportTargetDeviceChange+>;movl $, %esi;jmp  <IoReportTargetDeviceChange+>;andl $-, (%esi)": 1,
                "jne  <IoReportTargetDeviceChange+>;movl $, %esi;jmp  <IoReportTargetDeviceChange+>;andl $-, (%esi);andl $, %eax": 1,
                "jmp  <IoReportTargetDeviceChange+>;andl $-, (%esi);andl $, %eax;cmpl $, (%esi);movl %eax, (%esi)": 1,
                "andb $-, (%esi);popl %edi;popl %ebx;pushl $;pushl $": 1,
                "calll - <NtFindAtom+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <IoReportTargetDeviceChange+>;leal -(%ebp), %eax": 1,
                "calll - <ZwDeleteKey>;movl %eax, -(%ebp);pushl (%ebp);calll - <ZwClose>;movl -(%ebp), %eax": 1,
                "movl , %eax;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 5,
                "movl (%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %edx": 1,
                "cmpl $, %eax;je  <IoReportTargetDeviceChange+>;cmpl $, %eax;jne  <IoReportTargetDeviceChange+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <IoReportTargetDeviceChange+>;testb $, (%esi);je  <IoReportTargetDeviceChange+>;cmpl $, (%ebx)": 1,
                "xorl %ebx, %ebx;testl $, %eax;movl %ebx, -(%ebp);movl %ebx, (%ebp);je  <IoReportTargetDeviceChange+>": 1,
                "movl $, -(%ebp);jmp - <IoReportTargetDeviceChange+>;movl $, %eax;popl %esi;leave": 1,
                "jmp - <IoReportTargetDeviceChange+>;movl $, %eax;popl %esi;leave;retl $": 1,
                "cmpb %bl, ;movw %bx, -(%ebp);movw $, -(%ebp);movl %eax, -(%ebp);jne  <IoReportTargetDeviceChange+>": 1,
                "je  <IoReportTargetDeviceChange+>;cmpl , %esi;je  <IoReportTargetDeviceChange+>;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "jne  <IoReportTargetDeviceChange+>;orl $, %eax;movl %eax, (%esi);jmp - <IoReportTargetDeviceChange+>;movl %eax, %esi": 1,
                "cmpl %ecx, (%ecx);je  <IoReportTargetDeviceChange+>;movb $, %cl;movb $, (%eax);calll *": 7,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <KeWaitForSingleObject>;pushl $": 1,
                "calll  <IoReportTargetDeviceChange+>;movl %eax, %edi;jmp - <IoReportTargetDeviceChange+>;pushl $;movb $, ": 1,
                "movb $, ;calll - <FsRtlOplockFsctrl+>;calll  <IoReportTargetDeviceChange+>;pushl $;calll - <FsRtlOplockFsctrl+>": 1,
                "pushl %esi;calll - <IoReportTargetDeviceChange+>;cmpl $, (%edi);jne  <IoReportTargetDeviceChange+>;movl $, (%ebp)": 1,
                "movb , %al;pushl %eax;pushl %esi;calll - <RtlCopyLuid+>;xorl %eax, %eax": 1,
                "decl %esp;pushl %esp;addb %cl, (%edi);decl %esp;pushl %esp": 1,
                "addb (%eax), %al;addl (%ebx), %eax;addl (%ebx), %eax;addl %eax, (%ebx);int": 1,
                "calll - <toupper+>;cmpl %ebx, %eax;jl  <IoReportTargetDeviceChange+>;pushl %ebx;pushl %ebx": 1,
                "pushl %eax;pushl $;pushl (%ebp);calll - <RtlCopyLuid+>;pushl $": 1,
                "testl %eax, %eax;jne - <IoReportTargetDeviceChange+>;popl %ebp;retl $;int": 1,
                "je  <IoReportTargetDeviceChange+>;cmpl $, %ebx;jne  <IoReportTargetDeviceChange+>;pushl %esi;calll - <ExInitializePagedLookasideList+>": 1,
                "rep  stosl %eax, %es:(%edi);pushl %esi;movb $, -(%ebp);movb %bl, -(%ebp);calll - <IoReportTargetDeviceChange+>": 1,
                "cmpl $, %ebx;je  <IoReportTargetDeviceChange+>;cmpl $, %ebx;jne  <IoReportTargetDeviceChange+>;testl %edi, %edi": 1,
                "testl %edi, %edi;jl  <IoReportTargetDeviceChange+>;pushl %esi;calll - <NtSetVolumeInformationFile+>;movl %eax, %edi": 1,
                "movl (%esi), %eax;movl (%eax), %eax;andw $, (%eax);movl -(%ebp), %ecx;movl %edi, %eax": 1,
                "andw $, (%eax);movl -(%ebp), %ecx;movl %edi, %eax;popl %edi;popl %esi": 1,
                "pushl %edi;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "cmpl %ebx, %esi;jne  <IoReportTargetDeviceChange+>;movl $, %eax;jmp  <IoReportTargetDeviceChange+>;pushl $": 1,
                "popl %ecx;xorl %eax, %eax;pushl $;movl %esi, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);calll - <FsRtlNotifyInitializeSync+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "cmpl $, (%esi);movl (%esi), %eax;je  <IoReportTargetDeviceChange+>;testl %eax, %eax;je  <IoReportTargetDeviceChange+>": 1,
                "je  <IoReportTargetDeviceChange+>;testl %eax, %eax;je  <IoReportTargetDeviceChange+>;pushl $;pushl (%eax)": 1,
                "calll - <IoGetAttachedDeviceReference>;movl %eax, (%ebp);movsbl (%eax), %eax;pushl %edi;pushl %eax": 1,
                "movl %edi, (%esi);movl %esi, (%esi);movl %esi, (%esi);calll  <IoReportTargetDeviceChange+>;movl $, (%esi)": 1,
                "movl $, (%esi);movl %esi, (%esi);addl $, %esi;pushl $;pushl %esi": 2,
                "pushl %esi;movl %ebx, (%esi);calll  <IoReportTargetDeviceChange+>;movl (%ebx), %eax;movl (%ebp), %ecx": 1,
                "movb $-, (%eax);calll - <IofCallDriver>;movl %eax, %esi;movl (%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "calll - <IofCallDriver>;movl %eax, %esi;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;popl %edi": 1,
                "movl %eax, (%esi);xorl %eax, %eax;cmpl %eax, (%esi);jne  <IoReportTargetDeviceChange+>;cmpl %eax, (%esi)": 1,
                "movl %eax, %esi;je  <IoReportTargetDeviceChange+>;cmpl $, %ebx;je  <IoReportTargetDeviceChange+>;cmpl $, %ebx": 1,
                "pushl %eax;calll - <IoGetDeviceInterfaceAlias+>;xorl %ebx, %ebx;cmpl %ebx, %esi;jl  <IoReportTargetDeviceChange+>": 1,
                "addl $, %eax;cmpl $, %eax;pushl %edi;ja  <IoReportTargetDeviceChange+>;movzbl (%eax), %eax": 1,
                "calll - <IoReportTargetDeviceChange+>;testl %eax, %eax;jge  <IoReportTargetDeviceChange+>;pushl $;pushl %edi": 1,
                "cmpl $, (%esi);jne  <IoReportTargetDeviceChange+>;pushl $;pushl (%esi);calll - <IoReportTargetDeviceChange+>": 1,
                "cmpl $, %eax;je  <IoReportTargetDeviceChange+>;cmpl $, %eax;je  <IoReportTargetDeviceChange+>;pushl $": 1,
                "je  <IoReportTargetDeviceChange+>;pushl $;pushl (%ebp);pushl (%esi);pushl (%ebp)": 1,
                "pushl $;calll - <IoInvalidateDeviceRelations+>;xorl %ebx, %ebx;cmpl %ebx, %eax;movl %eax, (%ebp)": 1,
                "je  <IoReportTargetDeviceChange+>;pushl %ebx;pushl %eax;calll - <IoCsqRemoveIrp+>;movl (%esi), %eax": 2,
                "pushl %ecx;pushl (%eax);calll - <IoCsqRemoveIrp+>;movl (%esi), %eax;cmpl %edi, %eax": 6,
                "calll - <IoCsqRemoveIrp+>;movl (%esi), %eax;cmpl %edi, %eax;je  <IoReportTargetDeviceChange+>;movl (%eax), %ecx": 14,
                "calll  <IoReportTargetDeviceChange+>;movl %eax, (%ebp);leal (%edi), %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "calll  <IoReportTargetDeviceChange+>;cmpb $, (%ebp);je - <IoReportTargetDeviceChange+>;pushl $;pushl $": 1,
                "pushl (%esi);pushl (%ebp);calll  <IoReportTargetDeviceChange+>;jmp - <IoReportTargetDeviceChange+>;cmpl $, (%ebp)": 1,
                "je  <IoReportTargetDeviceChange+>;cmpl %edi, %eax;je  <IoReportTargetDeviceChange+>;movl (%eax), %eax;movl (%eax), %eax": 8,
                "movl (%eax), %ecx;movl (%ecx), %ecx;jmp  <IoReportTargetDeviceChange+>;xorl %ecx, %ecx;cmpw %di, (%ecx)": 4,
                "movl (%eax), %eax;movl (%eax), %eax;jmp  <IoReportTargetDeviceChange+>;xorl %eax, %eax;pushl %ebx": 4,
                "jmp  <IoReportTargetDeviceChange+>;xorl %ecx, %ecx;cmpl %edi, (%ecx);je  <IoReportTargetDeviceChange+>;cmpl %edi, %eax": 2,
                "xorl %ecx, %ecx;cmpl %edi, (%ecx);je  <IoReportTargetDeviceChange+>;cmpl %edi, %eax;je  <IoReportTargetDeviceChange+>": 2,
                "movl (%ecx), %ecx;movzwl (%ecx), %ecx;movl (%eax), %eax;pushl %ecx;pushl (%eax)": 2,
                "pushl %edi;pushl (%esi);pushl $;jmp  <IoReportTargetDeviceChange+>;cmpl $, %eax": 1,
                "movl (%ebp), %eax;movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);pushl $": 1,
                "pushl $;movl %eax, ;calll - <FsRtlOplockFsctrl+>;movb $, %al;popl %ebp": 1,
                "movl %eax, -(%ebp);jne  <IoReportTargetDeviceChange+>;movl $, %eax;jmp  <IoReportTargetDeviceChange+>;pushl %ebx": 1,
                "pushl (%ebp);calll  <IoReportTargetDeviceChange+>;pushl $;leal (%ebp), %eax;pushl %eax": 1,
                "pushl (%ebp);movl %ebx, -(%ebp);calll  <IoReportTargetDeviceChange+>;testb %al, %al;je  <IoReportTargetDeviceChange+>": 1,
                "pushl %esi;calll - <toupper+>;movl (%edi), %edi;cmpl %ebx, %edi;je  <IoReportTargetDeviceChange+>": 1,
                "movl %ecx, (%eax);cmpl %ebx, (%esi);je  <IoReportTargetDeviceChange+>;cmpb %bl, (%esi);je  <IoReportTargetDeviceChange+>": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);je  <IoReportTargetDeviceChange+>;pushl $;pushl %eax": 1,
                "pushl %esi;pushl %edi;movl $, %edi;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "je  <IoReportTargetDeviceChange+>;cmpl $, %eax;jne  <IoReportTargetDeviceChange+>;movl %fs:, %eax;decl (%eax)": 1,
                "cmpl $, (%esi);jne  <IoReportTargetDeviceChange+>;pushl -(%ebp);pushl (%ebp);calll  <IoReportTargetDeviceChange+>": 1,
                "movl (%ebp), %edi;movl (%edi), %ecx;movl $, %esi;cmpl %esi, %ecx;movl $, %eax": 1,
                "cmpl %esi, %ecx;movl $, %eax;jl  <IoReportTargetDeviceChange+>;cmpl %eax, %ecx;jg  <IoReportTargetDeviceChange+>": 1,
                "pushl $;pushl (%ebp);pushl %esi;calll - <IoReportTargetDeviceChange+>;movl %eax, %esi": 1,
                "jl  <IoReportTargetDeviceChange+>;leal (%ebp), %eax;pushl %eax;calll  <IoReportTargetDeviceChange+>;movl (%ebp), %eax": 1,
                "movb %bl, (%ebp);calll - <IoReportTargetDeviceChange+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl (%ebp);pushl %ebx": 1,
                "calll - <IoReportTargetDeviceChange+>;movb %al, %bl;movb %bl, %al;popl %ebx;popl %ebp": 1,
                "testb %al, %al;je  <IoReportTargetDeviceChange+>;pushl $;pushl %ebx;leal (%ebp), %eax": 1,
                "jne  <IoReportTargetDeviceChange+>;cmpl %ebx, (%ecx);je  <IoReportTargetDeviceChange+>;movb $, -(%ebp);pushl %ebx": 1,
                "pushl %ebx;pushl $;pushl (%esi);pushl %eax;calll - <IoReportTargetDeviceChange+>": 1,
                "pushl (%esi);calll - <IoReportTargetDeviceChange+>;pushl (%esi);calll  <IoReportTargetDeviceChange+>;pushl %ebx": 1,
                "cmpl %eax, %ebx;jne - <IoReportTargetDeviceChange+>;movl (%esi), %ecx;movl (%esi), %eax;movl %eax, (%ecx)": 1,
                "pushl $;pushl %eax;movl $, (%esi);movl %esi, (%esi);calll - <ExQueueWorkItem>": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl (%ebp);pushl ;calll - <RtlCopyLuid+>": 1,
                "je  <IoReportTargetDeviceChange+>;movl (%eax), %eax;cmpl %ecx, %eax;je  <IoReportTargetDeviceChange+>;cmpl , %eax": 1,
                "cmpl %ecx, %eax;je  <IoReportTargetDeviceChange+>;cmpl , %eax;jne  <IoReportTargetDeviceChange+>;orl $, -(%ebp)": 1,
                "movl %ecx, %ebx;shrl $, %ecx;movl %edx, %edi;rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx": 1,
                "je  <IoReportTargetDeviceChange+>;cmpl %ecx, -(%ebp);jbe  <IoReportTargetDeviceChange+>;andw $, (%edx,%ecx,);testl %esi, %esi": 1,
                "jbe  <IoReportTargetDeviceChange+>;andw $, (%edx,%ecx,);testl %esi, %esi;je  <IoReportTargetDeviceChange+>;incl %ecx": 1,
                "testl %esi, %esi;je  <IoReportTargetDeviceChange+>;incl %ecx;movl %ecx, (%esi);testl %edi, %edi": 1,
                "movl $, (%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp);pushl (%edi);pushl (%ebp)": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi;subl $, -(%ebp);movl -(%ebp), %edi": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %edi;movl (%ebp), %esi;subl $, -(%ebp)": 1,
                "cmpl %ecx, (%ebp);popl %esi;movl %ecx, (%ebp);movl %ecx, -(%ebp);je  <IoReportTargetDeviceChange+>": 1,
                "je  <IoReportTargetDeviceChange+>;xorl %eax, %eax;pushl $;incl %eax;popl %esi": 1,
                "movl %esi, (%ebp);cmpl $, (%ebp);je  <IoReportTargetDeviceChange+>;testl %edx, %edx;jne  <IoReportTargetDeviceChange+>": 1,
                "movl %esi, (%eax);movl %esi, (%eax);movl %esi, (%eax);movl %esi, (%eax);movl (%ebp), %esi": 1,
                "movl (%ebp), %eax;movl %edx, (%esi);movl %edx, (%esi);movl %edx, (%esi);movl %edx, (%esi)": 1,
                "andw $, (%ecx,%ebx,);popl %edi;popl %esi;xorl %eax, %eax;popl %ebx": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl $": 1,
                "movl %edx, -(%eax);movl (%eax), %edx;movl %edx, -(%eax);movl (%eax), %edx;movl %edx, -(%eax)": 1,
                "movl %edx, (%eax);movl (%eax), %eax;cmpl %ecx, %eax;jne - <IoReportTargetDeviceChange+>;popl %ebp": 1,
                "movl (%eax), %eax;cmpl %ecx, %eax;jne - <IoReportTargetDeviceChange+>;popl %ebp;retl $": 1,
                "pushl $;popl %ecx;cmpl %ecx, (%ebp);jb  <IoReportTargetDeviceChange+>;movl %ebx, (%eax)": 1,
                "movl $, %esi;jmp  <IoReportTargetDeviceChange+>;movl (%ebp), %ecx;movzbl (%ecx), %eax;decl %eax": 1,
                "je  <IoReportTargetDeviceChange+>;decl %eax;jne  <IoReportTargetDeviceChange+>;movl (%edx), %eax;cmpl $-, %eax": 1,
                "movl $, %eax;movl %esi, %edi;andl %eax, %edi;cmpl %eax, %edi;jne  <IoReportTargetDeviceChange+>": 1,
                "movl (%edx), %edx;cmpl %ebx, %edx;je  <IoReportTargetDeviceChange+>;movl (%edx), %edx;movl %edx, %esi": 1,
                "calll - <IoReportResourceUsage+>;cmpl %ebx, %eax;movl %eax, (%ebp);jne  <IoReportTargetDeviceChange+>;movl $, %esi": 1,
                "cmpl %ebx, %esi;jl  <IoReportTargetDeviceChange+>;movl (%ebp), %edx;cmpl %ebx, %edx;je  <IoReportTargetDeviceChange+>": 1,
                "movb (%eax), %cl;cmpb $-, %cl;je  <IoReportTargetDeviceChange+>;cmpb $-, %cl;jne  <IoReportTargetDeviceChange+>": 1,
                "cmpb $-, %cl;jne  <IoReportTargetDeviceChange+>;addl $, %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <IoReportResourceUsage+>;movl %eax, %esi;cmpl %ebx, %esi;jl  <IoReportTargetDeviceChange+>;pushl %ebx": 1,
                "calll - <IoReportTargetDeviceChange+>;cmpl %ebx, -(%ebp);movl %eax, %esi;je  <IoReportTargetDeviceChange+>;pushl %ebx": 1,
                "calll - <KeReleaseSemaphore>;movl %fs:, %eax;incl (%eax);jne  <IoReportTargetDeviceChange+>;leal (%eax), %ecx": 1,
                "movb $, (%eax);calll *;popl %edi;popl %esi;movl %ebx, %eax": 2,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, (%ebp);movl %edi, (%eax);je  <IoReportTargetDeviceChange+>": 1,
                "pushl %eax;pushl (%ebp);xorl %esi, %esi;movl %edi, -(%ebp);calll  <IoReportTargetDeviceChange+>": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;pushl %edi;pushl %edi;leal -(%ebp), %eax": 1,
                "pushl (%ebp);calll  <IoReportTargetDeviceChange+>;testb %al, %al;jne - <IoReportTargetDeviceChange+>;cmpl %edi, %esi": 1,
                "calll  <IoReportTargetDeviceChange+>;testb %al, %al;jne - <IoReportTargetDeviceChange+>;cmpl %edi, %esi;je  <IoReportTargetDeviceChange+>": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;cmpl %edi, %ebx;je  <IoReportTargetDeviceChange+>;movl %esi, %ecx": 1,
                "movl %eax, (%ebx);movl %esi, -(%ebp);movl %edi, (%ebp);jmp  <IoReportTargetDeviceChange+>;cmpb $, -(%ebp)": 1,
                "movl (%ebp), %esi;movl %eax, %edi;movl (%ebp), %eax;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl %eax, (%ebx);movl (%ebp), %eax;pushl %ebx;movl %ecx, -(%ebp);movl %eax, (%ebx)": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl %esi, %ecx": 2,
                "jne  <IoReportTargetDeviceChange+>;movl $, %esi;jmp  <IoReportTargetDeviceChange+>;pushl %edi;movl %esi, %ecx": 2,
                "movl %edx, (%ebx);leal (%ebx), %edi;movl $, %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "pushl %ebx;movw %dx, (%ebx,%eax,);calll - <IoCreateDevice+>;pushl $;pushl %ebx": 2,
                "movl %esi, %ecx;calll - <ObfReferenceObject>;movl (%esi), %eax;movl (%eax), %esi;testl %esi, %esi": 2,
                "movzwl (%eax), %eax;jmp  <IoReportTargetDeviceChange+>;xorl %eax, %eax;movzwl (%esi), %ecx;pushl %ebx": 1,
                "movl $, %esi;jmp  <IoReportTargetDeviceChange+>;movl %edi, %ecx;movl %ecx, %edx;shrl $, %ecx": 2,
                "je  <IoReportTargetDeviceChange+>;movzwl (%edx), %ecx;movl (%edx), %esi;leal (%ebx,%eax,), %eax;movl %eax, (%ebp)": 1,
                "leal (%ebx,%eax,), %eax;movl %eax, (%ebp);movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "leal (%ebx), %edi;movl $, %esi;jne  <IoReportTargetDeviceChange+>;movl $, %esi;movsl (%esi), %es:(%edi)": 2,
                "pushl %ebx;movl $, (%ebx);calll - <IoCreateDevice+>;pushl $;pushl %ebx": 2,
                "movl (%ebp), %ebx;cmpw $, (%ebx);pushl %edi;movl %ebx, %edi;je  <IoReportTargetDeviceChange+>": 1,
                "leal (%ebx,%eax,), %edi;movl -(%ebp), %eax;movl %eax, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);jne  <IoReportTargetDeviceChange+>;xorl %eax, %eax;jmp  <IoReportTargetDeviceChange+>": 1,
                "movl (%eax), %eax;cmpl %ebx, %eax;je  <IoReportTargetDeviceChange+>;movw (%eax), %ax;cmpw %bx, %ax": 1,
                "je  <IoReportTargetDeviceChange+>;movw (%eax), %ax;cmpw %bx, %ax;je  <IoReportTargetDeviceChange+>;movzwl %ax, %eax": 1,
                "calll - <IoReportTargetDeviceChange+>;movl %eax, %ebx;testl %ebx, %ebx;jne  <IoReportTargetDeviceChange+>;movl $, %eax": 1,
                "movl %ebx, %edi;rep  stosl %eax, %es:(%edi);pushl -(%ebp);movl %edx, %ecx;andl $, %ecx": 1,
                "movl %esi, %ecx;movl (%eax), %esi;movl %ecx, %eax;shrl $, %ecx;movl %ebx, %edi": 1,
                "jmp  <IoReportTargetDeviceChange+>;movl -(%ebp), %eax;cmpl (%ebx), %eax;je  <IoReportTargetDeviceChange+>;cmpb $, (%ebp)": 1,
                "movl (%eax), %eax;cmpl %esi, %eax;je  <IoReportTargetDeviceChange+>;movw (%eax), %cx;cmpw %si, %cx": 1,
                "movw %si, (%edi);pushl %esi;movl (%ebp), %esi;pushl (%esi);calll - <ExFreePoolWithTag>": 1,
                "testb $, (%esi);jne  <IoReportTargetDeviceChange+>;testb $, (%edi);je  <IoReportTargetDeviceChange+>;leal -(%ebp), %eax": 1,
                "pushl %edi;calll - <IoReportTargetDeviceChange+>;movl $, %edi;jmp  <IoReportTargetDeviceChange+>;movl $, -(%ebp)": 1,
                "movl $, %edi;jmp  <IoReportTargetDeviceChange+>;movl $, -(%ebp);jmp - <IoReportTargetDeviceChange+>;cmpl $, %eax": 1,
                "movl $, -(%ebp);jmp - <IoReportTargetDeviceChange+>;movl %ebx, -(%ebp);testb $, (%esi);je  <IoReportTargetDeviceChange+>": 1,
                "jne - <IoReportTargetDeviceChange+>;cmpl %ebx, (%esi);jbe - <IoReportTargetDeviceChange+>;addl $, %esi;pushl %esi": 1,
                "jne  <IoReportTargetDeviceChange+>;addl $, %esi;pushl %esi;pushl $;jmp - <IoReportTargetDeviceChange+>": 1,
                "calll - <_wcsupr+>;testb $, (%esi);jne  <IoReportTargetDeviceChange+>;testb $, (%edi);jne  <IoReportTargetDeviceChange+>": 1,
                "movl %eax, -(%ebp);jl - <IoReportTargetDeviceChange+>;pushl -(%ebp);calll  <IoReportTargetDeviceChange+>;pushl %ebx": 1,
                "calll  <IoReportTargetDeviceChange+>;pushl %ebx;movl %eax, -(%ebp);shll $, %eax;pushl %eax": 1,
                "jne  <IoReportTargetDeviceChange+>;cmpl $, %esi;je  <IoReportTargetDeviceChange+>;cmpl %ebx, %esi;jne  <IoReportTargetDeviceChange+>": 1,
                "jne  <IoReportTargetDeviceChange+>;movb %cl, -(%ebp);jmp  <IoReportTargetDeviceChange+>;cmpl %ebx, %ecx;je  <IoReportTargetDeviceChange+>": 1,
                "pushl -(%ebp);calll  <IoReportTargetDeviceChange+>;testb %al, %al;je  <IoReportTargetDeviceChange+>;jmp - <IoReportTargetDeviceChange+>": 1,
                "je  <IoReportTargetDeviceChange+>;jmp - <IoReportTargetDeviceChange+>;jmp  <IoReportTargetDeviceChange+>;addl $, %eax;pushl %eax": 1,
                "pushl %eax;pushl $;pushl %edi;calll - <IoReportTargetDeviceChange+>;movl $, -(%ebp)": 2,
                "jne  <IoReportTargetDeviceChange+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl %edi": 1,
                "cmpl %ebx, %esi;jl  <IoReportTargetDeviceChange+>;movl -(%ebp), %eax;movl (%eax,%esi,), %eax;movl %eax, -(%ebp)": 1,
                "decl %esi;jns - <IoReportTargetDeviceChange+>;cmpl $, -(%ebp);jne  <IoReportTargetDeviceChange+>;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl %edi;calll - <IoReportTargetDeviceChange+>;jmp  <IoReportTargetDeviceChange+>;leal -(%ebp), %ecx": 1,
                "jmp  <IoReportTargetDeviceChange+>;movl -(%ebp), %eax;movl (%eax,%esi,), %eax;pushl %ebx;pushl %ebx": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <IoReportTargetDeviceChange+>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <IoReportTargetDeviceChange+>;xorl %esi, %esi;leal -(%ebp), %eax": 1,
                "je  <IoReportTargetDeviceChange+>;movl (%eax), %eax;movl (%eax), %eax;addl $, %eax;pushl %eax": 1,
                "decl %esi;jns - <IoReportTargetDeviceChange+>;cmpl %ebx, -(%ebp);jge - <IoReportTargetDeviceChange+>;leal -(%ebp), %eax": 1,
                "cmpl %ebx, -(%ebp);jge - <IoReportTargetDeviceChange+>;cmpb %bl, -(%ebp);je  <IoReportTargetDeviceChange+>;calll  <IoReportTargetDeviceChange+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl %ebx;pushl %ebx;pushl $": 1,
                "calll - <IoReportTargetDeviceChange+>;pushl -(%ebp);calll  <IoReportTargetDeviceChange+>;cmpl %ebx, (%edi);jne  <IoReportTargetDeviceChange+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <IoReportTargetDeviceChange+>": 1,
                "calll *(%eax);movl -(%ebp), %eax;pushl (%eax);calll *(%eax);xorl %edi, %edi": 1,
                "movl -(%ebp), %eax;pushl (%eax);calll *(%eax);pushl %ebx;pushl -(%ebp)": 1,
                "calll - <ObfReferenceObject>;movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%esi);movl -(%ebp), %eax": 1,
                "movl %eax, (%esi);movl %edi, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movb -(%ebp), %al": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movb -(%ebp), %al;movb %al, (%esi);cmpl %ebx, (%edi)": 1,
                "sete %al;movb %al, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);leal (%esi), %eax": 1,
                "pushl (%ebp);pushl -(%ebp);pushl -(%ebp);calll  <PoShutdownBugCheck+>;cmpl %ebx, %eax": 1,
                "jmp  <IoReportTargetDeviceChange+>;pushl %ebx;pushl %edi;calll - <IoReportTargetDeviceChange+>;pushl %esi": 1,
                "calll - <ExFreePoolWithTag>;movl %esi, %eax;jmp  <IoReportTargetDeviceChange+>;xorl %eax, %eax;cmpl $, -(%ebp)": 1,
                "movl %esi, %eax;jmp  <IoReportTargetDeviceChange+>;xorl %eax, %eax;cmpl $, -(%ebp);setne %al": 1,
                "pushl %ebx;pushl %ebx;pushl -(%ebp);pushl -(%ebp);calll - <RtlVolumeDeviceToDosName+>": 1,
                "cmpb $, (%ebp);rep  stosb %al, %es:(%edi);movl (%ebp), %eax;movl %eax, (%edx);movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%edx);movl $, %esi;jne  <IoReportTargetDeviceChange+>;movl $, %esi": 1,
                "movl (%eax), %esi;movzwl %cx, %ecx;movl %ecx, %ebx;shrl $, %ecx;leal (%edx), %edi": 1,
                "movl $, (%edx);movl %eax, (%edx);movl %ecx, (%edx);movw (%ebx), %cx;cmpw %ax, %cx": 1,
                "movl %eax, (%edx);movl (%ebp), %eax;leal (%edx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl $, (%edx);movl $, (%edx);leal (%edx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl (%ebp), %eax;movl %eax, (%edx);movl (%ebp), %eax;movl $, (%edx);leal (%edx), %edi": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %edx;testl %edx, %edx;jne  <IoReportTargetDeviceChange+>;movl $, %esi": 1,
                "calll - <ObfDereferenceObject>;movl %esi, %eax;jmp  <IoReportTargetDeviceChange+>;xorl %eax, %eax;movl %esi, %ecx": 1,
                "pushl $;popl %eax;cmpl %eax, (%ebp);jne  <IoReportTargetDeviceChange+>;movl $, %esi": 1,
                "popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;movl %eax, (%edx)": 1,
                "cmpl %ebx, %eax;popl %edi;popl %esi;jl  <IoReportTargetDeviceChange+>;pushl %ebx": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <KeWaitForSingleObject>;popl %ebx": 1,
                "movl $, %ecx;jmp  <IoReportTargetDeviceChange+>;cmpl $, -(%eax);jne  <IoReportTargetDeviceChange+>;movb $, %bl": 1,
                "movb $, ;xorl %eax, %eax;jmp  <IoReportTargetDeviceChange+>;pushl (%ebp);pushl (%ebp)": 1,
                "movb %cl, ;popl %esi;popl %ebx;popl %ebp;retl $": 1,
                "movl $, %esi;movl %esi, %ecx;calll *;movl , %eax;movl $, %ecx": 1,
                "movl , %eax;movl (%ebp), %edx;pushl %ebx;pushl %edi;pushl $": 1,
                "movl (%ebp), %edx;pushl %ebx;pushl %edi;pushl $;movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);calll - <FsRtlNotifyInitializeSync+>;testl %eax, %eax;jl  <IoReportTargetDeviceChange+>;movl -(%ebp), %ecx": 1,
                "incl %edi;cmpl %eax, %edi;jb - <IoReportTargetDeviceChange+>;popl %esi;pushl $": 1,
                "cmpl %eax, %edi;jb - <IoReportTargetDeviceChange+>;popl %esi;pushl $;pushl %ecx": 1,
                "pushl %ecx;calll - <ExFreePoolWithTag>;movl %ebx, %eax;jmp  <IoReportTargetDeviceChange+>;xorl %eax, %eax": 1,
                "pushl %eax;pushl -(%ebp);movl %edx, -(%ebp);pushl $;movl $, -(%ebp)": 1,
                "testl %edi, %edi;jge  <IoReportTargetDeviceChange+>;movl (%ebp), %eax;cmpl %eax, %esi;je  <IoReportTargetDeviceChange+>": 1,
                "jmp  <IoReportTargetDeviceChange+>;movl (%eax), %eax;movl %eax, -(%ebp);testl %ebx, %ebx;popl %edi": 1,
                "movl %eax, (%esi);calll - <ObfReferenceObject>;xorl %eax, %eax;popl %esi;leave": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;cmpl $, %eax;jne  <IoReportTargetDeviceChange+>;pushl $": 1,
                "movl (%esi), %eax;pushl $;pushl (%eax);calll - <IoInvalidateDeviceRelations>;jmp  <IoReportTargetDeviceChange+>": 1,
                "pushl $;pushl (%eax);calll - <IoInvalidateDeviceRelations>;jmp  <IoReportTargetDeviceChange+>;pushl $": 1,
                "pushl %ebx;movl (%ebp), %ebx;jne  <IoReportTargetDeviceChange+>;pushl %esi;leal (%ebx), %esi": 1,
                "cmpl %esi, (%esi);jne  <IoReportTargetDeviceChange+>;pushl %edi;movl $, %edi;movl %edi, %ecx": 1,
                "movl %eax, (%esi);movl $, (%esi);movl %esi, (%eax);incl ;movl %edi, %ecx": 1,
                "popl %edi;movl (%ebx), %eax;leal (%ebp), %ecx;pushl %ecx;pushl $": 1,
                "popl %esi;jl  <IoReportTargetDeviceChange+>;cmpl $, (%ebp);je  <IoReportTargetDeviceChange+>;pushl $": 1,
                "cmpl $, -(%edx);je  <IoReportTargetDeviceChange+>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 1,
                "movl -(%ebp), %eax;leave;retl;nop;nop": 1,
                "pushl $;calll - <FsRtlOplockFsctrl+>;pushl $;pushl (%ebp);calll - <ExFreePoolWithTag>": 1,
                "calll - <ExFreePoolWithTag>;movl %ebx, (%esi);movl $, %edi;movl %edi, %ecx;calll *": 1,
                "movl $, %edi;movl %edi, %ecx;calll *;leal (%esi), %eax;movl (%eax), %ecx": 1,
                "pushl (%esi);calll - <RtlCheckRegistryKey+>;movl -(%ebp), %eax;movl %eax, (%esi);xorl %edi, %edi": 1,
                "decl %eax;jne  <IoReportTargetDeviceChange+>;cmpl $, (%ebp);movb %bl, (%ebp);jne  <IoReportTargetDeviceChange+>": 1,
                "leal (%ebp), %eax;pushl %eax;calll - <IoRequestDeviceEject+>;cmpl %ebx, %eax;jl  <IoReportTargetDeviceChange+>": 1,
                "movl %eax, %edi;calll *;decl %edi;popl %edi;popl %esi": 1,
                "je  <IoReportTargetDeviceChange+>;calll - <IoReportTargetDeviceChange+>;calll - <IoReportTargetDeviceChange+>;jmp  <IoReportTargetDeviceChange+>;calll - <IoReportTargetDeviceChange+>": 1,
                "je  <IoReportTargetDeviceChange+>;movl %edi, %ecx;pushl %ebx;movl %ecx, %ebx;shrl $, %ecx": 2,
                "je  <IoReportTargetDeviceChange+>;movl %esi, %ecx;movl (%ebp), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "calll - <IoWriteErrorLogEntry>;popl %edi;popl %esi;leave;retl $": 1,
                "leal (%ebp), %eax;pushl %eax;orl $-, %esi;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "testl %edi, %edi;popl %edi;jl  <IoReportTargetDeviceChange+>;movl -(%ebp), %eax;cmpl $, (%eax)": 1,
                "cmpl $, (%eax);jne  <IoReportTargetDeviceChange+>;movl (%eax), %ecx;movl (%eax,%ecx), %esi;pushl $": 1,
                "addb %ah, (%ebp);jbe  <IoReportTargetDeviceChange+>;imull $, (%eax), %eax;decl %eax;addb %ah, (%ecx)": 1,
                "cmpl %edx, %edi;movl %ecx, %ebx;jg  <IoReportTargetDeviceChange+>;movzbl (%ecx), %eax;cmpl (%ebp), %eax": 1,
                "calll - <IoReportTargetDeviceChange+>;testl %eax, %eax;jl  <IoReportTargetDeviceChange+>;cmpl %ebx, %esi;je  <IoReportTargetDeviceChange+>": 1,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "jl  <IoReportTargetDeviceChange+>;cmpl %ebx, -(%ebp);je  <IoReportTargetDeviceChange+>;movl -(%ebp), %eax;movl -(%ebp), %esi": 1,
                "addl (%ebp), %ebx;pushl $;leal (%ebx), %eax;pushl %eax;pushl $": 1,
                "movl %edi, -(%ebp);rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 2,
                "movl -(%ebp), %edi;movl -(%ebp), %ecx;movl -(%ebp), %esi;addl %edx, %edi;movl %ecx, %edx": 1,
                "jns  <IoReportTargetDeviceChange+>;addb %al, (%eax);addb %al, (%eax);decl %esp;addb %ch, (%edi)": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;cmpl $, (%ebx);jne  <IoReportTargetDeviceChange+>": 1,
                "movw $, -(%ebp);movw %di, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);jl  <IoReportTargetDeviceChange+>;xorl %eax, %eax;movl %edi, -(%ebp);movl $, %ecx": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;popl %esi": 1,
                "calll - <ZwClose>;movl -(%ebp), %eax;popl %esi;popl %edi;leave": 1,
                "cmpb $, (%ebp);je  <IoReportTargetDeviceChange+>;leal (%esi,%ebx,), %esi;orl $, (%esi);movl $, %eax": 1,
                "cmpl %edi, -(%ebp);jae  <IoReportTargetDeviceChange+>;movl %edi, -(%ebp);movl (%ebx), %eax;cmpl (%ebx), %eax": 1,
                "leal (%ebx), %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;pushl $;andl $, %ecx": 1,
                "movl %edi, %ecx;testl %ecx, %ecx;ja  <IoReportTargetDeviceChange+>;orl $-, %ecx;decl %eax": 1,
                "andb $, %dl;movb %dl, (%edi);movl (%ebp), %edi;testl %edi, %edi;je  <IoReportTargetDeviceChange+>": 1,
                "movb %dl, (%edi);movl (%ebp), %edi;testl %edi, %edi;je  <IoReportTargetDeviceChange+>;movb (%esi), %dl": 1,
                "movl %eax, (%ecx);movb $, %al;jmp  <IoReportTargetDeviceChange+>;movl (%esi), %edi;subl (%esi), %edi": 1,
                "andl $, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChange+>;movb $, (%eax)": 1,
                "je  <IoReportTargetDeviceChange+>;movb $, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChange+>": 1,
                "movl (%eax), %eax;movl (%ecx), %edx;cmpl %eax, %edx;ja  <IoReportTargetDeviceChange+>;cmpl (%ecx), %eax": 1,
                "ja  <IoReportTargetDeviceChange+>;cmpl (%ecx), %eax;ja  <IoReportTargetDeviceChange+>;subl %edx, %eax;movl (%ecx,%eax,), %eax": 1,
                "je  <IoReportTargetDeviceChange+>;movl (%eax), %ecx;xorl %edx, %edx;testl %ecx, %ecx;jbe  <IoReportTargetDeviceChange+>": 1,
                "popl %ebp;retl $;movb $, %al;jmp - <IoReportTargetDeviceChange+>;int": 1,
                "subl (%esi), %ecx;movl (%esi,%ecx,), %edi;testl %edi, %edi;je  <IoReportTargetDeviceChange+>;movl (%edi), %ebx": 1,
                "movl (%esi,%ecx,), %edi;testl %edi, %edi;je  <IoReportTargetDeviceChange+>;movl (%edi), %ebx;decl %ebx": 1,
                "js  <IoReportTargetDeviceChange+>;leal (%edi,%ebx,), %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "leal (%edi,%ebx,), %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx;testb $, %cl": 1,
                "cmpl %edx, %ebx;jge  <IoReportTargetDeviceChange+>;subl %ebx, %eax;leal -(,%eax,), %eax;pushl %eax": 1,
                "leal (%ecx), %eax;pushl %eax;pushl %ecx;calll - <memmove>;addl $, %esp": 1,
                "pushl %eax;pushl %ecx;calll - <memmove>;addl $, %esp;decl (%edi)": 1,
                "calll - <ExFreePoolWithTag>;decl (%esi);movl -(%ebp), %eax;subl $, (%ebp);decl %ebx": 1,
                "je  <IoReportTargetDeviceChange+>;decl %edi;subl $, %eax;testl %edi, %edi;jge - <IoReportTargetDeviceChange+>": 1,
                "retl $;calll - <ObfDereferenceObject>;leal (%esi,%edi,), %ecx;testb $, (%ecx);je  <IoReportTargetDeviceChange+>": 1,
                "jge  <IoReportTargetDeviceChange+>;subl %edi, %eax;leal -(,%eax,), %eax;pushl %eax;leal (%esi,%edi,), %eax": 1,
                "andl $, (%ebx,%eax,);pushl %esi;calll - <ExFreePoolWithTag>;decl (%ebx);xorl %eax, %eax": 1,
                "xorl %edx, %edx;movl (%eax,%ecx,), %ecx;cmpl %edx, %ecx;je  <IoReportTargetDeviceChange+>;cmpl %edx, (%ecx)": 1,
                "je  <IoReportTargetDeviceChange+>;orl $, (%edi);jmp  <IoReportTargetDeviceChange+>;andl $-, (%edi);incl %edx": 1,
                "movl (%esi), %ebx;andl $-, %ebx;cmpl %edi, %ebx;je  <IoReportTargetDeviceChange+>;decl %ecx": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;xorl %ecx, %ecx": 1,
                "pushl %ebx;movl (%eax), %ebx;xorl %ecx, %ecx;subl (%eax), %ebx;pushl %esi": 1,
                "movl %ecx, -(%ebp);jne  <IoReportTargetDeviceChange+>;cmpl %ebx, %ecx;jg  <IoReportTargetDeviceChange+>;cmpl $-, -(%ebp)": 1,
                "movl (%edi), %esi;decl %esi;cmpl $, -(%ebp);jne  <IoReportTargetDeviceChange+>;cmpl (%edi), %esi": 1,
                "addl -(%ebp), %ecx;jmp - <IoReportTargetDeviceChange+>;movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "cmpl %esi, (%ebp);jl  <IoReportTargetDeviceChange+>;movl $, (%ebp);movl %esi, ;pushl $": 1,
                "movb %al, -(%ebp);je  <IoReportTargetDeviceChange+>;movzwl %si, %ecx;movl %ecx, %ebx;shrl $, %ecx": 1,
                "addl $, %esp;cmpl %eax, (%esi);je  <IoReportTargetDeviceChange+>;pushl (%ebp);movl (%ebp), %eax": 1,
                "testb $, (%esi);je  <IoReportTargetDeviceChange+>;movw %di, (%ecx);movb %al, (%ecx);movb $, (%ecx)": 1,
                "movl %edx, (%ecx);jmp  <IoReportTargetDeviceChange+>;shrw -(%ebp);incl %edx;testb $, -(%ebp)": 1,
                "testb %al, %al;jne - <IoReportTargetDeviceChange+>;movl $, -(%ebp);andl $, ;movl -(%ebp), %eax": 1,
                "shrb %al;incl %edx;testb $, %al;movl %edx, ;jne  <IoReportTargetDeviceChange+>": 1,
                "pushl %esi;pushl %edi;movb %bl, (%eax);movb $, (%eax);je  <IoReportTargetDeviceChange+>": 1,
                "movb %bl, (%eax);movb $, (%eax);je  <IoReportTargetDeviceChange+>;movw $, (%eax);jmp  <IoReportTargetDeviceChange+>": 1,
                "movb $, (%eax);movzbl (%ecx), %esi;movl %esi, (%eax);movl (%eax), %edi;xorl %esi, %esi": 1,
                "movw (%ecx), %si;movl %ebx, (%eax);movl %ebx, (%eax);addl $, %ecx;movl $, (%eax)": 1,
                "je  <IoReportTargetDeviceChange+>;addl %edx, %edx;movl %edx, (%eax);movzwl (%ecx), %edx;movl (%eax), %edi": 1,
                "movzwl (%ecx), %edx;leal -(%edi,%edx), %edx;movl %ebx, (%eax);movl %edx, (%eax);movzbl (%ecx), %edx": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %ecx;xorl %eax, %eax": 1,
                "xorl %eax, %eax;movw (%ecx), %ax;addw $, %ax;pushl %ebx;pushl %esi": 1,
                "subl $, %eax;je  <IoReportTargetDeviceChange+>;subl $, %eax;je  <IoReportTargetDeviceChange+>;decl %eax": 1,
                "movl (%ecx), %esi;leal -(%edx,%esi), %edi;movl $, -(%ebp);jmp  <IoReportTargetDeviceChange+>;movl (%ecx), %eax": 1,
                "shll $, %esi;testl %eax, %eax;movl %eax, -(%ebp);jne  <IoReportTargetDeviceChange+>;movl $, -(%ebp)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jne  <IoReportTargetDeviceChange+>;movl $, -(%ebp);movzwl (%ecx), %edx": 1,
                "andb $-, %al;cmpb $, %al;jne  <IoReportTargetDeviceChange+>;xorl %eax, %eax;movw (%esi), %ax": 1,
                "movl %edi, %eax;popl %esi;jmp  <IoReportTargetDeviceChange+>;movl $, %eax;popl %edi": 1,
                "movw (%eax), %dx;movl (%eax), %eax;testl $, %eax;pushl %esi;movl $, %esi": 1,
                "pushl %esi;movl $, %esi;jne  <IoReportTargetDeviceChange+>;pushl %ebx;movl %eax, %ecx": 1,
                "jne  <IoReportTargetDeviceChange+>;pushl %ebx;movl %eax, %ecx;movb $, %bl;shlb %cl, %bl": 1,
                "movb %cl, (%eax);je  <IoReportTargetDeviceChange+>;movb $, (%eax);jmp  <IoReportTargetDeviceChange+>;testb $, %dl": 1,
                "movzwl (%ecx), %eax;addl $, %eax;jmp  <IoReportTargetDeviceChange+>;andl $, %eax;incl %eax": 1,
                "movl $, (%eax);jmp  <IoReportTargetDeviceChange+>;movb (%eax), %cl;cmpb $, %cl;movb %cl, (%ebp)": 1,
                "movb $, %dl;jmp  <IoReportTargetDeviceChange+>;movb (%eax), %bl;movb (%eax), %dl;testb %dl, %dl": 1,
                "movb (%eax), %bl;movb %bl, -(%ebp);movb $, (%ebp);jne  <IoReportTargetDeviceChange+>;cmpw %di, %cx": 1,
                "je  <IoReportTargetDeviceChange+>;movb (%ebp), %cl;testb %cl, %cl;jns  <IoReportTargetDeviceChange+>;movw (%eax), %cx": 1,
                "movzwl %cx, %ecx;addl %ecx, %eax;movb (%eax), %cl;cmpb $, %cl;movb %cl, (%ebp)": 1,
                "movb -(%ebp), %cl;movb $, (%eax);movb %dl, (%eax);jmp - <IoReportTargetDeviceChange+>;movb $, (%eax)": 1,
                "movl (%ebp), %eax;movl $, (%eax);xorl %eax, %eax;jmp  <IoReportTargetDeviceChange+>;movl $, %eax": 1,
                "movb %dl, %bl;andl $, %ebx;subl $, %ebx;je  <IoReportTargetDeviceChange+>;subl $, %ebx": 1,
                "je  <IoReportTargetDeviceChange+>;decl %ebx;jne  <IoReportTargetDeviceChange+>;movl (%eax), %esi;movl (%eax), %ecx": 1,
                "jne  <IoReportTargetDeviceChange+>;movl (%eax), %esi;movl (%eax), %ecx;leal -(%ecx,%esi), %ecx;movl $, (%ebp)": 1,
                "movl $, (%ebp);movzwl (%eax), %ecx;movzwl (%eax), %ebx;addl %ebx, %ecx;shll $, %ecx": 1,
                "movzwl (%eax), %ecx;movzwl (%eax), %ebx;addl %ebx, %ecx;shll $, %ecx;decl %ecx": 1,
                "leal -(%ebx,%edi), %ebx;cmpl %ebx, %ecx;jb  <IoReportTargetDeviceChange+>;movl (%ebp), %ebx;decl %ebx": 1,
                "decl %ebx;testl %ebx, %edi;je  <IoReportTargetDeviceChange+>;movb $, -(%ebp);testb %dl, %dl": 1,
                "movzwl %dx, %edx;addl %edx, %eax;movb (%eax), %dl;cmpb $, %dl;je  <IoReportTargetDeviceChange+>": 1,
                "andb $, %bl;movl %ecx, -(%ebp);movb (%ecx), %dl;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movb $, -(%ebp);movb %bl, -(%ebp)": 1,
                "movb $, -(%ebp);movb %bl, -(%ebp);testb %dl, %dl;js  <IoReportTargetDeviceChange+>;movb %dl, %bl": 1,
                "andb $-, %dl;jmp  <IoReportTargetDeviceChange+>;movw (%ecx), %si;addw $, %si;cmpb $, %dl": 1,
                "cmpb $, %dl;je  <IoReportTargetDeviceChange+>;movzbl %dl, %edx;cmpl $, %edx;jg  <IoReportTargetDeviceChange+>": 1,
                "jg  <IoReportTargetDeviceChange+>;je  <IoReportTargetDeviceChange+>;cmpl $, %edx;je  <IoReportTargetDeviceChange+>;cmpl $, %edx": 2,
                "je  <IoReportTargetDeviceChange+>;incl %ebx;shrb %dl;jne - <IoReportTargetDeviceChange+>;cmpb $, -(%ebp)": 1,
                "je  <IoReportTargetDeviceChange+>;cmpl $, %edx;je  <IoReportTargetDeviceChange+>;cmpl $, %edx;jle  <IoReportTargetDeviceChange+>": 2,
                "leal (%edi), %eax;pushl %eax;pushl $;movl %esi, -(%ebp);calll - <ExAllocatePoolWithTag>": 1,
                "movl %ebx, %esi;addl $, %ebx;incl -(%ebp);movb $, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp - <IoReportTargetDeviceChange+>;cmpl $, %edx;je  <IoReportTargetDeviceChange+>;cmpl $, %edx;je  <IoReportTargetDeviceChange+>": 1,
                "cmpl $, %edx;jle  <IoReportTargetDeviceChange+>;testb %cl, %cl;jns  <IoReportTargetDeviceChange+>;movl -(%ebp), %eax": 1,
                "movl %esi, (%ecx);xorl %ecx, %ecx;incl %ecx;testl %eax, %eax;movl %ecx, -(%ebp)": 1,
                "xorl %edx, %edx;incl %edx;xorl %edi, %edi;cmpl (%ebp), %edi;jne  <IoReportTargetDeviceChange+>": 1,
                "incl %edi;addl $, %esi;cmpl %eax, %edi;jb - <IoReportTargetDeviceChange+>;addl %edx, -(%ebp)": 1,
                "leal (%eax,%edx,), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;andl $, %eax;movl %eax, (%ebp)": 1,
                "jmp  <IoReportTargetDeviceChange+>;movl -(%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "leal (%esi), %ebx;movl %ecx, (%ebp);jbe  <IoReportTargetDeviceChange+>;movl (%ebp), %eax;orl $, %eax": 1,
                "orl $, %eax;cmpl $, (%ebp);movw $, (%ebx);movw %ax, (%ebx);je  <IoReportTargetDeviceChange+>": 1,
                "incl (%ebp);movl (%ebp), %eax;cmpl -(%ebp), %eax;movl -(%ebp), %ebx;jb - <IoReportTargetDeviceChange+>": 1,
                "movl (%ebp), %eax;pushl %esi;movl (%ebp), %esi;movl %edx, (%eax);movl (%esi), %eax": 1,
                "jbe  <IoReportTargetDeviceChange+>;cmpb $, %cl;jbe  <IoReportTargetDeviceChange+>;cmpb $, %cl;jne  <IoReportTargetDeviceChange+>": 1,
                "jbe  <IoReportTargetDeviceChange+>;cmpb $, %cl;jne  <IoReportTargetDeviceChange+>;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);leal (%ecx,%eax), %eax;jmp  <IoReportTargetDeviceChange+>;incl %edx;addl $, %eax": 1,
                "cmpl $, (%eax);leal (%eax), %ebx;jbe  <IoReportTargetDeviceChange+>;movzbl (%ebx), %ecx;decl %ecx": 1,
                "je  <IoReportTargetDeviceChange+>;decl %ecx;je  <IoReportTargetDeviceChange+>;decl %ecx;jne  <IoReportTargetDeviceChange+>": 1,
                "calll - <IoReportTargetDeviceChange+>;jmp  <IoReportTargetDeviceChange+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 3,
                "addl %eax, -(%ebp);movl %eax, %ecx;movl %ecx, %edx;shrl $, %ecx;leal -(%ebp), %esi": 1,
                "movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax;popl %ebp;retl $": 2,
                "jne  <IoReportTargetDeviceChange+>;movl $, %esi;jmp  <IoReportTargetDeviceChange+>;testl %edi, %edi;jbe  <IoReportTargetDeviceChange+>": 1,
                "leal -(%edi), %ebx;movl %edi, -(%ebp);testl %ebx, %ebx;jbe  <IoReportTargetDeviceChange+>;movl -(%ebp), %esi": 1,
                "testl %eax, %eax;jle  <IoReportTargetDeviceChange+>;movl (%edi), %edx;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "movl (%edi), %edx;movl (%esi), %eax;movl (%esi), %ecx;movl %edx, (%esi);movl (%edi), %edx": 1,
                "incl (%ebp);rep  movsb (%esi), %es:(%edi);movl (%ebp), %ecx;cmpl (%ebp), %ecx;jb - <IoReportTargetDeviceChange+>": 1,
                "movl (%ebp), %eax;shll $, %eax;xorl %ecx, %ecx;cmpl %ecx, (%eax);jne  <KeRemoveSystemServiceTable+>": 1,
                "cmpl %ecx, (%eax);je  <KeRemoveSystemServiceTable+>;cmpl $, (%ebp);movl %ecx, (%eax);movl %ecx, (%eax)": 1,
                "shll $, %eax;pushl %eax;xorl %ebx, %ebx;pushl $;movl %ebx, -(%ebp)": 1,
                "movl (%esi), %edx;addl $, %ecx;testb $, -(%ebp);movb %bl, (%ebp);movl %esi, -(%ebp)": 1,
                "ja  <KeSetTimeUpdateNotifyRoutine+>;movl %ebx, (%eax);movl %esi, (%eax);movl $, (%eax);movl %ebx, (%eax)": 1,
                "movl %ebx, (%eax);movb %bl, (%eax);addl $, %eax;jmp  <KeSetTimeUpdateNotifyRoutine+>;movl $, -(%ebp)": 1,
                "jne  <KeSetTimeUpdateNotifyRoutine+>;movb (%ebp), %cl;addl $, -(%ebp);movl -(%ebp), %edx;cmpl (%ebp), %edx": 1,
                "movl -(%ebp), %esi;movl (%esi), %esi;je  <KeSetTimeUpdateNotifyRoutine+>;movl %ecx, %esi;movl %esi, %edi": 1,
                "movb (%edi), %bl;movl -(%ebp), %edi;movsbl (%edi), %edi;addb %cl, %bl;movzbl %bl, %ecx": 1,
                "movl (%eax), %ecx;movl (%ecx,%edx), %esi;movl (%ebp), %eax;movl %esi, (%eax);movl (%ecx,%edx), %ecx": 1,
                "pushl %esi;movl (%ebp), %esi;pushl $;pushl (%esi);calll - <ObReferenceObjectByPointer+>": 1,
                "je  <KeSetTimeUpdateNotifyRoutine+>;movb $, -(%ebp);jmp  <KeSetTimeUpdateNotifyRoutine+>;incl %eax;movb $, -(%ebp)": 1,
                "pushl (%ebp);pushl $;pushl %edi;pushl (%ebp);pushl %ebx": 1,
                "addl $, %edi;pushl $;pushl %edi;jmp  <KeSetTimeUpdateNotifyRoutine+>;xorl %eax, %eax": 1,
                "pushl %esi;jmp - <KeSetTimeUpdateNotifyRoutine+>;movl (%ebp), %edi;pushl %edi;pushl (%ebp)": 1,
                "pushl %edi;pushl (%ebp);pushl $;pushl %esi;pushl (%ebp)": 1,
                "jne - <KeSetTimeUpdateNotifyRoutine+>;xorl %eax, %eax;jmp  <KeSetTimeUpdateNotifyRoutine+>;movl (%ebp), %ecx;movzwl %ax, %eax": 1,
                "jmp  <KeSetTimeUpdateNotifyRoutine+>;pushl $;popl %esi;pushl %esi;pushl %edi": 1,
                "movb %al, (%ebp);jne  <KeSetTimeUpdateNotifyRoutine+>;leal (%esi,%ebx), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);calll - <KeSetTimeUpdateNotifyRoutine+>;orb %al, (%ebp)": 1,
                "incl %esi;cmpl $, %esi;je  <KeSetTimeUpdateNotifyRoutine+>;leal (%esi,%ebx), %eax;pushl %eax": 1,
                "addl %edi, %esi;pushl $;pushl %esi;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl %fs:, %eax;cmpb $, (%ebp);movl (%eax), %eax": 1,
                "jns  <KeSetTimeUpdateNotifyRoutine+>;andw $, (%eax);testb $, %bl;je  <KeSetTimeUpdateNotifyRoutine+>;leal (%eax), %edx": 1,
                "je  <KeSetTimeUpdateNotifyRoutine+>;leal (%eax), %edx;movw (%edx), %cx;testb $, %cl;jne  <KeSetTimeUpdateNotifyRoutine+>": 1,
                "movw %ax, (%ecx);popl %ebx;popl %ebp;retl $;int": 1,
                "jmp  <KeSetTimeUpdateNotifyRoutine+>;movl (%ebp), %edi;pushl %edi;pushl (%ebp);pushl (%ebp)": 1,
                "addl %eax, (%edi);jmp  <KeSetTimeUpdateNotifyRoutine+>;movl (%ebp), %esi;movl %fs:, %eax;leal -(%ebp), %ecx": 1,
                "je  <KeSetTimeUpdateNotifyRoutine+>;movl (%edi), %eax;movl %eax, -(%ebp);movl %esi, %eax;xorl %edx, %edx": 1,
                "pushl (%ebp);pushl %ebx;pushl %esi;pushl -(%ebp);pushl %eax": 1,
                "movl %ebx, %eax;decl %eax;je  <KeSetTimeUpdateNotifyRoutine+>;decl %eax;je  <KeSetTimeUpdateNotifyRoutine+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <NtVdmControl+>;testl %eax, %eax;jge  <KeSetTimeUpdateNotifyRoutine+>": 2,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <ExRaiseException>;orl $-, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movb $, %al;jmp  <KeSetTimeUpdateNotifyRoutine+>;pushl %esi": 1,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <ExRaiseException>;movb $, %al": 1,
                "movb %al, -(%ebp);incl -(%ebp);jmp - <KeSetTimeUpdateNotifyRoutine+>;cmpl %esi, -(%ebp);jae - <KeSetTimeUpdateNotifyRoutine+>": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);andl $, -(%ebp);andl $, -(%ebp);leal -(%ebp), %eax": 2,
                "pushl %eax;calll - <ExRaiseException>;movb $, -(%ebp);orl $-, -(%ebp);movb -(%ebp), %al": 1,
                "xorb %bl, %bl;cmpb %al, (%ebp);pushl %esi;sete %al;pushl %edi": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl %eax;pushl %edi": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);pushl (%ecx,%eax);jmp  <KeSetTimeUpdateNotifyRoutine+>": 1,
                "leal (%edx), %ecx;jne  <KeSetTimeUpdateNotifyRoutine+>;leal (%edx), %ecx;imull (%ebp), %esi;testb $, (%edx)": 1,
                "jge  <KeSetTimeUpdateNotifyRoutine+>;movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "movb $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);orl $-, -(%ebp);xorb %dl, %dl": 1,
                "andl $, %ebx;movb %bl, -(%ebp);cmpl $, -(%ebp);jne  <KeSetTimeUpdateNotifyRoutine+>;andb $-, %cl": 1,
                "movl (%ebp), %ecx;addl (%eax,%ecx), %edi;movl %edi, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;jmp  <KeSetTimeUpdateNotifyRoutine+>;movzbl %bl, %ecx;movl -(%ebp), %edi": 1,
                "cmpl %esi, %eax;jb  <KeSetTimeUpdateNotifyRoutine+>;movsbl (%esi), %eax;jmp  <KeSetTimeUpdateNotifyRoutine+>;movsbl (%eax), %eax": 1,
                "decl %eax;decl %eax;jne  <KeSetTimeUpdateNotifyRoutine+>;cmpl %esi, %edi;jb  <KeSetTimeUpdateNotifyRoutine+>": 1,
                "movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);testb %al, %al;je  <KeSetTimeUpdateNotifyRoutine+>": 1,
                "je  <KeSetTimeUpdateNotifyRoutine+>;calll  <ExRaiseDatatypeMisalignment>;movl (%ebp), %eax;movb (%eax), %cl;movb %cl, (%eax)": 1,
                "nop;movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <KeSetTimeUpdateNotifyRoutine+>;pushl $": 1,
                "ja  <KeSetTimeUpdateNotifyRoutine+>;movswl -(%ebp), %edx;cmpl %edx, %eax;jbe  <KeSetTimeUpdateNotifyRoutine+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <PsLookupProcessThreadByCid>;cmpl %edi, %eax;jge  <KeSetTimeUpdateNotifyRoutine+>": 1,
                "cmpw $, %ax;jne  <KeSetTimeUpdateNotifyRoutine+>;pushl $;movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "movl %esi, (%eax);movl -(%ebp), %eax;testb $, (%eax);jne  <KeSetTimeUpdateNotifyRoutine+>;addl $, %eax": 1,
                "testb $, (%eax);jne  <KeSetTimeUpdateNotifyRoutine+>;addl $, %eax;cmpl %eax, (%eax);je  <KeSetTimeUpdateNotifyRoutine+>": 1,
                "addl $, %eax;movl %eax, (%eax);movl %eax, (%eax);movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "cmpl -(%ebp), %esi;jne  <KeSetTimeUpdateNotifyRoutine+>;movl %edx, (%ecx);andb $-, %al;movb %al, (%ebx)": 1,
                "pushl %ecx;pushl -(%ebp);pushl %ecx;pushl %eax;calll - <KeWaitForSingleObject>": 1,
                "leal (%ebx), %eax;pushl %eax;calll - <KeWaitForSingleObject>;andl $, -(%ebp);movl %edi, %ecx": 1,
                "cmpl %esi, (%esi);je  <KeSetTimeUpdateNotifyRoutine+>;movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx)": 1,
                "andb $, %dl;negb %dl;sbbl %edx, %edx;notl %edx;andl %eax, %edx": 1,
                "movl %edi, %ecx;calll *;movl %ebx, ;movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl $;pushl (%ebp);calll - <ObReferenceObjectByName+>": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);calll  <MmGetPhysicalMemoryRanges+>;popl %ebp": 1,
                "incl (%esi);jne  <MmRemovePhysicalMemory+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <MmRemovePhysicalMemory+>": 3,
                "jmp - <MmRemovePhysicalMemory+>;orl $, (%edi);pushl $;pushl $;pushl $": 1,
                "decl (%esi);xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 2,
                "movl (%eax), %edx;movl (%eax), %ecx;addl %edx, %ecx;movl %ecx, -(%ebp);movl , %ecx": 1,
                "pushl $;movl $, (%ebx);movl %eax, (%ebx);pushl $;movl %ebx, (%eax)": 1,
                "calll *;incl ;xorl %eax, %eax;popl %edi;popl %ebx": 1,
                "incl ;xorl %eax, %eax;popl %edi;popl %ebx;popl %esi": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "popl %eax;movl %eax, -(%ebp);addl %eax, -(%ebp);movl -(%ebp), %eax;cmpl (%ebp), %eax": 1,
                "cmpl (%ebp), %eax;jbe  <MmAddVerifierThunks+>;pushl $;calll - <ExRaiseStatus>;movl , %eax": 1,
                "pushl $;calll - <ExRaiseStatus>;movzwl (%esi), %ecx;movl (%esi), %esi;movl %ecx, %eax": 1,
                "calll *;movl -(%ebp), %eax;cmpl $, %eax;je  <MmAddVerifierThunks+>;movl %esi, (%ebx)": 1,
                "andl %eax, %esi;movl %esi, -(%ebp);movl , %edi;movl %edi, %ecx;orl %esi, %ecx": 1,
                "orl %esi, %ecx;movl %ecx, -(%ebp);notl %eax;andl %edx, %eax;movl %eax, -(%ebp)": 1,
                "andl %eax, %ecx;movl %ecx, -(%ebp);cmpl %edi, %ecx;je  <MmAddVerifierThunks+>;incl ": 1,
                "movl -(%ebp), %esi;jmp  <MmAddVerifierThunks+>;nop;nop;nop": 1,
                "movl %eax, -(%ebp);pushl %edi;movl , %edi;xorl %ecx, %ecx;incl %eax": 1,
                "movl %eax, -(%ebp);popl %eax;cmpl %eax, %esi;movl %edi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "imull $, (%edi), %ebp;jb  <MmAddVerifierThunks+>;jbe  <MmAddVerifierThunks+>;jb  <MmAddVerifierThunks+>;pushl %esi": 1,
                "pushl %eax;movl (%ebp), %eax;pushl $;pushl $;pushl (%eax)": 2,
                "movl (%ecx), %edx;testl %edx, %edx;jne - <MmAddVerifierThunks+>;movl , %edx;testl %edx, %edx": 1,
                "movl (%ebp), %ecx;addl $, %eax;cmpl -(%ebp), %ecx;jb - <MmAddVerifierThunks+>;popl %edi": 1,
                "addb %ch, -(%eax);popl %eax;addb %ah, -(%ebp);popl %eax;addb %bh, (%edi)": 1,
                "popl %ecx;addb %cl, %ah;popl %eax;addb %bl, %ah;popl %ecx": 1,
                "popl %eax;addb %bh, (%eax);jo  <MmAddVerifierThunks+>;addb %ah, (%esp);addb %bl, (%ebx)": 1,
                "addb %bl, (%ebx);popl %eax;addb %dh, (%eax);popl %ecx;addb %bh, (%esp)": 1,
                "arpl %bx, (%eax);int $;popl %ecx;addb %dl, %al;arpl %bx, (%eax)": 1,
                "arpl %bx, (%eax);jecxz  <MmAddVerifierThunks+>;popl %ecx;addb %ah, (%ebx);popl %ecx": 1,
                "popl %ecx;addb %dh, (%ebx);addb %cl, (%edi);jo  <MmAddVerifierThunks+>;addb %ah, (%eax)": 1,
                "arpl %bx, (%eax);andl $, %eax;arpl %bx, (%eax);das;pushl %ebp": 1,
                "das;pushl %ebp;popl %ecx;addb %bh, %ah;bound (%eax), %ebx": 1,
                "bound (%eax), %ebx;orl (%eax), %edx;addb %ch, -(%edx);popl %ecx;addb %bl, -(%edx)": 1,
                "popl %ecx;addb %dh, %al;popal;popl %eax;addb %dl, %dh": 1,
                "addb %dh, %al;popal;popl %eax;addb %dl, %dh;movl , %eax": 1,
                "addb %dl, -(%ebx);popl %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %eax;addb %bl, (%esi);popal;popl %eax;addb %al, -(%edi)": 1,
                "movl %esp, %ebp;cmpl $, ;jne  <MmAddVerifierThunks+>;movl $, %eax;jmp  <MmAddVerifierThunks+>": 1,
                "popl %ebp;retl $;movl (%ebp), %eax;pushl $;addl $, %eax": 1,
                "jne  <MmAddVerifierThunks+>;movl (%eax), %eax;cmpl $, %eax;movl %eax, (%ebp);je - <MmAddVerifierThunks+>": 1,
                "pushl %ebx;calll - <ExFreePoolWithTag>;movl %esi, %eax;jmp - <MmAddVerifierThunks+>;nop": 1,
                "shll $, %ebx;jmp  <MmAddVerifierThunks+>;movl , %eax;movl %ebx, %esi;shrl $, %esi": 1,
                "jmp  <MmAddVerifierThunks+>;movl , %eax;movl %ebx, %esi;shrl $, %esi;andl $, %esi": 1,
                "jne  <MmAddVerifierThunks+>;cmpb $, ;jne  <MmAddVerifierThunks+>;andl $-, %eax;orl $, %eax": 1,
                "cmpb $, ;jne  <MmAddVerifierThunks+>;andl $-, %eax;orl $, %eax;jmp  <MmAddVerifierThunks+>": 1,
                "orl $, %eax;jmp  <MmAddVerifierThunks+>;orl $, %eax;movl (%ebp), %edx;andl $, %eax": 1,
                "pushl $;calll - <RtlInsertElementGenericTableAvl+>;movl %edi, (%esi);movl %ebx, %eax;popl %edi": 1,
                "pushl $;subl $, %eax;pushl %eax;calll - <MISYSPTE+>;popl %ebp": 1,
                "pushl %eax;calll - <MISYSPTE+>;popl %ebp;retl $;int": 1,
                "movl %edx, %eax;shrl $, %eax;pushl %esi;movl (%ebp), %esi;andl $, %eax": 1,
                "pushl %edx;pushl $;jmp  <MmFreeMappingAddress+>;decl %esi;decl %esi": 1,
                "jb - <MmFreeMappingAddress+>;testb $, ;je  <MmFreeMappingAddress+>;pushl %esi;leal (%edi), %eax": 1,
                "je  <MmFreeMappingAddress+>;pushl %esi;leal (%edi), %eax;pushl %eax;pushl $": 1,
                "pushl %esi;movl %esi, -(%ebp);calll - <MISYSPTE+>;movl %eax, %edi;testl %edi, %edi": 1,
                "movl %eax, %edi;testl %edi, %edi;je  <MmFreeMappingAddress+>;xorl %edx, %edx;movl %esi, %ecx": 1,
                "xorl %eax, %eax;jmp  <MmFreeMappingAddress+>;pushl %ebx;movl %edi, %ebx;shll $, %ebx": 1,
                "jmp  <MmFreeMappingAddress+>;pushl %ebx;movl %edi, %ebx;shll $, %ebx;calll *": 1,
                "movl , %eax;andl , %eax;jmp  <MmFreeMappingAddress+>;movb , %cl;shll %cl, %eax": 1,
                "andl , %eax;jmp  <MmFreeMappingAddress+>;movb , %cl;shll %cl, %eax;movl , %ecx": 1,
                "pushl -(%ebp);orl $, %eax;movl %eax, (%edi);calll - <PsIsThreadTerminating+>;addl $, %edi": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;movl (%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %ebx;movl %ebx, -(%ebp);jl  <MmSetBankedSection+>;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %edi;movl %esi, %ecx;calll - <PsIsThreadTerminating+>;movl %eax, %edi;testl %edi, %edi": 1,
                "calll - <PsIsThreadTerminating+>;movl %eax, %edi;testl %edi, %edi;movl %edi, -(%ebp);je  <MmSetBankedSection+>": 1,
                "jne - <MmSetBankedSection+>;movl (%ebp), %eax;shrl $, %eax;movl %eax, (%ebp);pushl $": 1,
                "jne  <MmSetBankedSection+>;movl $, %esi;jmp  <MmSetBankedSection+>;movl (%ebp), %eax;andl $, (%ebp)": 1,
                "addl $-, %eax;movl %eax, (%esi);movl (%edi), %edi;andl $, %edi;leal -(,%edi,), %edi": 1,
                "movl (%edi), %edi;andl $, %edi;leal -(,%edi,), %edi;movl (%edi), %eax;shrl $, %eax": 1,
                "movb $-, (%ebx);movl %esi, (%eax);movzbl , %eax;movl %ebx, (%ebp);movb %al, %bl": 1,
                "orl $-, %ebx;pushl %ebx;shrl $, %eax;orl $-, %edx;pushl %edx": 1,
                "shrl $, %eax;orl $-, %edx;pushl %edx;negl %esi;xorl %ecx, %ecx": 1,
                "addl %eax, %esi;xorl %eax, %eax;pushl %ecx;pushl %eax;calll  <MmAllocatePagesForMdl>": 1,
                "orl $, %edi;cmpl $, %ecx;je  <MmAllocateNonCachedMemory+>;pushl $;pushl $": 1,
                "calll - <RtlInsertElementGenericTableAvl+>;movl (%ebp), %eax;movl (%eax), %eax;addl $, (%ebp);shll $, %eax": 1,
                "pushl -(%ebp);pushl %ebx;calll - <MmGetVirtualForPhysical+>;movl -(%ebp), %eax;popl %edi": 1,
                "jge  <MmProbeAndLockProcessPages+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "movw (%eax), %dx;testw %dx, %dx;je  <MmProbeAndLockProcessPages+>;andl $, -(%ebp);movzwl (%eax), %ecx": 1,
                "testw %dx, %dx;je  <MmProbeAndLockProcessPages+>;andl $, -(%ebp);movzwl (%eax), %ecx;leal (%ecx,%eax), %ebx": 1,
                "leal (%ecx,%eax), %ebx;movl %ebx, -(%ebp);movzwl %dx, %edx;leal (%ecx,%edx,), %ecx;cmpl (%ebp), %ecx": 1,
                "addl %edx, %ecx;leal (%ecx,%eax), %esi;movl %esi, -(%ebp);cmpl (%ebp), %ecx;jae - <MmProbeAndLockProcessPages+>": 1,
                "movl , %ecx;xorl %edx, %edx;testl %ecx, %ecx;jbe  <MmProbeAndLockProcessPages+>;movl (,%edx,), %eax": 1,
                "movl %edi, %eax;popl %edi;popl %esi;retl;int": 1,
                "shll $, %esi;cmpl %ecx, %edx;jb  <MmProbeAndLockProcessPages+>;ja  <MmProbeAndLockProcessPages+>;cmpl %esi, %eax": 1,
                "cmpl %esi, %eax;jbe  <MmProbeAndLockProcessPages+>;movl %esi, %eax;movl %ecx, %edx;movb $, %cl": 1,
                "pushl %ecx;pushl $;pushl $;pushl (%eax);calll - <IoSetInformation>": 1,
                "movl (%ebp), %eax;xorl %edx, %edx;incl %edx;movl %edx, (%eax);addl $, %eax": 1,
                "incl %edx;movl %edx, (%eax);addl $, %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "xchgl %eax, (%ecx);movl %edx, %eax;jmp  <MmProbeAndLockProcessPages+>;subl %edx, %esi;cmpl %eax, %esi": 1,
                "calll - <MmProbeAndLockProcessPages+>;movl %eax, %edi;testl %edi, %edi;movl %edi, -(%ebp);jne  <MmProbeAndLockProcessPages+>": 1,
                "cmpl , %ebx;jb - <MmProbeAndLockProcessPages+>;movl (%ebp), %eax;addl $, %eax;movl %eax, (%ebp)": 1,
                "movl -(%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);addl $, %esi;movl %esi, (%ebp)": 1,
                "testl %eax, %eax;jne  <MmProbeAndLockProcessPages+>;pushl %edi;pushl (%ebp);jmp  <MmProbeAndLockProcessPages+>": 1,
                "calll - <RtlCreateRegistryKey+>;movl %edi, %eax;popl %edi;popl %esi;popl %ebp": 1,
                "popal;addb %cl, %ah;int;int;int": 1,
                "pushl $;pushl $;jmp  <MmProbeAndLockProcessPages+>;pushl $;pushl $": 1,
                "pushl $;jmp  <MmProbeAndLockProcessPages+>;pushl $;pushl $;pushl $": 1,
                "je  <MmProbeAndLockProcessPages+>;movl $, (%eax);movl $, (%eax);movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "pushl $;calll - <KeBugCheckEx>;movl (%esi), %ecx;calll *;movl (%esi), %eax": 1,
                "andl $, (%esi);popl %esi;retl;int;int": 1,
                "movl (%ebp), %ebx;movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %ebx;jb  <MmUnmapViewInSystemSpace+>": 1,
                "movl , %eax;cmpl %eax, %ebx;jb  <MmUnmapViewInSystemSpace+>;movb $, (%eax);testb $, %bl": 1,
                "calll - <RtlGeneratedotName+>;movl %eax, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "pushl %esi;calll - <PoRequestPowerIrp+>;movl %eax, %esi;testl %esi, %esi;jne - <MmUnmapViewInSystemSpace+>": 1,
                "calll - <PoRequestPowerIrp+>;movl %eax, %esi;testl %esi, %esi;jne - <MmUnmapViewInSystemSpace+>;popl %esi": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi;je  <MmUnmapViewInSystemSpace+>;incl (%esi)": 1,
                "incl (%esi);pushl %ebx;movl $, %ebx;movl %edi, %edx;movl $, %ecx": 1,
                "pushl %edi;movl (%ebp), %edi;leal (%edi), %ebx;movl %ebx, %ecx;movl %ebx, (%ebp)": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;jne  <MmUnmapViewInSystemSpace+>": 1,
                "testl %ebx, %ebx;jne  <MmUnmapViewInSystemSpace+>;movl (%ebp), %ecx;calll *;xorl %eax, %eax": 1,
                "jne  <MmUnmapViewInSystemSpace+>;movl (%esi), %eax;testl %eax, %eax;je  <MmUnmapViewInSystemSpace+>;movl (%eax), %eax": 1,
                "calll - <ExFreePoolWithTag>;xorl %eax, %eax;jmp  <MmUnmapViewInSystemSpace+>;pushl %edi;movl %fs:, %eax": 1,
                "jmp  <MmUnmapViewInSystemSpace+>;pushl %edi;movl %fs:, %eax;movl (%eax), %eax;leal (%eax), %edi": 1,
                "andl $, (%eax);movl -(%ebp), %eax;cmpl $, %eax;je  <MmUnmapViewInSystemSpace+>;movl %esi, %ecx": 1,
                "addl $, %esi;cmpl %ebx, %esi;jbe - <MmUnmapViewInSystemSpace+>;pushl ;leal -(%ebp), %eax": 1,
                "movl %ecx, (%eax);pushl (%esi);calll  <ExReleaseRundownProtectionEx+>;popl %esi;popl %ebp": 1,
                "jmp - <MmUnmapViewInSystemSpace+>;int;int;int;int": 1,
                "cmpl $, %eax;ja  <MmUnmapViewInSystemSpace+>;andw $, (%ebp);movl %eax, %ecx;shll $, %ecx": 1,
                "cmpl $, %eax;jbe  <MmUnmapViewInSystemSpace+>;pushl $;pushl %esi;pushl %edi": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %esi;shrl $, %esi;andl $, %esi;subl $, %esi": 1,
                "movl -(%ebp), %ecx;calll - <ExfAcquirePushLockShared>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl (%edi), %edx": 1,
                "jbe  <MmUnmapViewInSystemSpace+>;movl (%eax), %eax;cmpl %ecx, %eax;jne - <MmUnmapViewInSystemSpace+>;movl $, %ebx": 1,
                "shrl $, %ebx;leal (%ebx,%ebx,), %eax;movl , %ecx;leal (%ecx,%eax,), %eax;andl $, (%eax)": 4,
                "leal (%ecx,%eax,), %eax;andl $, (%eax);addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 4,
                "addl $, -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jae  <MmUnmapViewInSystemSpace+>;jmp - <MmUnmapViewInSystemSpace+>": 2,
                "movl -(%ebp), %eax;cmpl $, %eax;je  <MmUnmapViewInSystemSpace+>;movl %edi, -(%ebp,%eax,);leal -(%ebp), %eax": 2,
                "cmpl -(%ebp), %esi;jb - <MmUnmapViewInSystemSpace+>;movl -(%ebp), %edi;movl (%edi), %esi;andl $-, %esi": 1,
                "pushl %eax;pushl %ebx;calll - <ExFreePoolWithTag>;movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, %fs:;popl %edi;popl %esi;popl %ebx": 3,
                "movl %eax, -(%ebp);movl %ecx, %ebx;shll $, %ebx;cmpl $, %ecx;jbe  <MmUnmapViewInSystemSpace+>": 1,
                "pushl %ebx;pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp);testl %eax, %eax": 2,
                "cmpl $, (%ebp);je  <MmUnmapViewInSystemSpace+>;cmpl $, (%ebp);jbe  <MmUnmapViewInSystemSpace+>;pushl $": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);jmp  <MmUnmapViewInSystemSpace+>;movl $, -(%ebp);testl %ebx, %ebx": 1,
                "nop;nop;movl -(%ebp), %eax;jmp  <MmUnmapViewInSystemSpace+>;movl %edx, %ecx": 1,
                "cmpl (%ecx), %eax;jb  <MmUnmapViewInSystemSpace+>;cmpl (%ecx), %eax;jbe  <MmUnmapViewInSystemSpace+>;movl %edx, %ecx": 1,
                "movl %edx, %ecx;cmpl %esi, %ecx;je  <MmUnmapViewInSystemSpace+>;cmpl (%ecx), %eax;jb  <MmUnmapViewInSystemSpace+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);testl %eax, %eax;je  <MmUnmapViewInSystemSpace+>": 1,
                "jmp  <MmUnmapViewInSystemSpace+>;subl $, %esi;movl (%esi), %eax;testl %eax, %eax;je  <MmUnmapViewInSystemSpace+>": 1,
                "movl (%eax), %esi;movl %esi, -(%ebp);addl $, -(%ebp);shrl $, %esi;andl $, %esi": 1,
                "movl -(%ebp), %ecx;movl %eax, -(%ebp,%ecx,);incl -(%ebp);addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "nop;movl -(%ebp), %eax;movl -(%ebp), %esp;movl %eax, -(%ebp);orl $-, -(%ebp)": 1,
                "movl -(%ebp), %esp;movl %eax, -(%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "testb %al, %al;je  <MmUnmapViewInSystemSpace+>;movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx": 1,
                "testb %al, %al;jne  <MmUnmapViewInSystemSpace+>;cmpl $-, (%ebp);je  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %ecx": 1,
                "pushl -(%ebp);calll - <PsChargeProcessNonPagedPoolQuota>;movl %eax, %edi;testl %edi, %edi;jge  <MmUnmapViewInSystemSpace+>": 1,
                "xorl %edi, %edi;movl (%ebx), %eax;movl %edi, -(%ebp);movl %edi, -(%ebp);leal -(%eax), %esi": 1,
                "pushl %eax;pushl %eax;pushl -(%ebp);pushl %esi;pushl %eax": 1,
                "leal (%eax), %edi;movl (%eax), %edx;shrl $, %edx;movl %edx, -(%ebp);addl %edx, -(%ebp)": 1,
                "movl (%eax), %edx;shrl $, %edx;movl %edx, -(%ebp);addl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;addl %edx, (%eax);testl %edx, %edx;jbe  <MmUnmapViewInSystemSpace+>;movl %edx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;cmpl $-, (%ebp);je  <MmUnmapViewInSystemSpace+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <MmUnmapViewInSystemSpace+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %eax;shll $, %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);movl %eax, %ecx;shll $, %ecx;movl %edi, -(%ebp);cmpb $, -(%ebp)": 1,
                "jne  <MmUnmapViewInSystemSpace+>;cmpl $-, (%ebp);jne  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "je  <MmUnmapViewInSystemSpace+>;movl %esi, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);addl $, %ecx": 1,
                "pushl $;calll - <KeFlushEntireTb>;cmpl -(%ebp), %esi;jae  <MmUnmapViewInSystemSpace+>;movl (%esi), %esi": 1,
                "incl -(%ebp);xorl %edx, %edx;incl %edx;shll %cl, %edx;notl %edx": 1,
                "notl %edx;andl %edx, (%eax);leal (%esi,%esi,), %eax;movl , %ecx;leal (%ecx,%eax,), %eax": 1,
                "leal (%ecx,%eax,), %eax;movl (%eax), %ecx;cmpl $, %ecx;je  <MmUnmapViewInSystemSpace+>;decl %ecx": 1,
                "shll $, %esi;movl %esi, -(%ebp,%edx,);leal -(%ebp), %edx;movl -(%ebp), %esi;movl %edx, -(%ebp,%esi,)": 1,
                "movl -(%ebp), %esi;movl %edx, -(%ebp,%esi,);incl -(%ebp);movl , %edx;movl %edx, (%ecx)": 1,
                "movl , %edx;movl %edx, (%ecx);orl $, (%eax);addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl $;pushl %ebx;calll - <ExFreePoolWithTag>;cmpl $, -(%ebp);jne  <MmUnmapViewInSystemSpace+>": 1,
                "pushl %eax;calll - <KeUnstackDetachProcess>;movl $, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "jne  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "nop;nop;calll *;xorl %eax, %eax;retl": 1,
                "movl (%edx), %ecx;movl %ecx, (%edx);jmp  <MmUnmapViewInSystemSpace+>;movl (%ebp), %edx;movl (%eax), %edi": 1,
                "movl , %eax;cmpl %eax, %edi;ja  <MmUnmapViewInSystemSpace+>;subl %edi, %eax;cmpl %esi, %eax": 1,
                "pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %ebx;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl %ebx;calll - <KeStackAttachProcess>;movl $, -(%ebp);jmp  <MmUnmapViewInSystemSpace+>": 2,
                "calll - <RtlInsertElementGenericTableAvl+>;jmp  <MmUnmapViewInSystemSpace+>;testb $, (%ebp);je  <MmUnmapViewInSystemSpace+>;testl %ecx, %ecx": 1,
                "movl -(%ebp), %esi;movl $, %edi;andl %edi, %esi;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;subl %edx, %ecx;addl $, %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <MmUnmapViewInSystemSpace+>;nop": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;movl %esi, -(%ebp);xorl %edx, %edx": 1,
                "movl %eax, (%esi);movl %ecx, (%esi);movl %edi, (%esi);movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "pushl $;xorl %eax, %eax;pushl %eax;pushl %eax;pushl $": 2,
                "xorl %edx, %ecx;movl %ecx, (%eax);movl (%ebx), %edx;shrl $, %edx;andl $, %edx": 1,
                "jne  <MmUnmapViewInSystemSpace+>;movl (%edx), %ecx;shrl $, %ecx;xorl (%eax), %ecx;andl $, %ecx": 1,
                "pushl $;pushl %esi;calll - <ExFreePoolWithTag>;movl %edi, %eax;jmp  <MmUnmapViewInSystemSpace+>": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;movl %edi, %eax;jmp  <MmUnmapViewInSystemSpace+>;nop": 1,
                "testl %ecx, %ecx;jne - <MmUnmapViewInSystemSpace+>;retl;int;int": 1,
                "xorl %eax, %eax;jmp  <MmUnmapViewInSystemSpace+>;movl %eax, %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;jne - <MmUnmapViewInSystemSpace+>;movl (%esi), %eax;cmpl $, %eax;jbe  <MmUnmapViewInSystemSpace+>": 1,
                "jmp - <MmUnmapViewInSystemSpace+>;movl %esi, %ecx;calll - <NtSetEvent+>;testl %eax, %eax;je  <MmUnmapViewInSystemSpace+>": 1,
                "movl %eax, %esi;calll - <NtSetEvent+>;testl %eax, %eax;jne - <MmUnmapViewInSystemSpace+>;movl (%ebp), %edx": 1,
                "notl %edx;andl %edx, %eax;movl %eax, (%ecx);jmp - <MmUnmapViewInSystemSpace+>;movl (%ebp), %eax": 1,
                "movl %ecx, (%eax);jmp - <MmUnmapViewInSystemSpace+>;movl $, %eax;popl %edi;popl %esi": 1,
                "nop;nop;jmp  <MmUnmapViewInSystemSpace+>;pushl $;pushl (%eax)": 1,
                "testl %ebx, %ebx;jl  <MmUnmapViewInSystemSpace+>;incl -(%ebp);movl -(%ebp), %eax;addl $, (%ebp)": 1,
                "movl $, %ebx;testl %ebx, %ebx;jl  <MmUnmapViewInSystemSpace+>;xorl $, (%esi);pushl %esi": 1,
                "calll - <KeBugCheckEx+>;movl (%esi), %eax;testl $, %eax;je  <MmUnmapViewInSystemSpace+>;xorl $, %eax": 1,
                "cmpl %edi, (%esi);jbe  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %eax;movl (%eax,%edi,), %eax;testl %eax, %eax": 1,
                "calll - <RtlCreateRegistryKey+>;pushl %esi;calll  <RtlTimeToElapsedTimeFields+>;testl %edi, %edi;jne - <MmUnmapViewInSystemSpace+>": 1,
                "movl %ecx, (%ebp);jne  <MmUnmapViewInSystemSpace+>;testb $, (%ebp);jne  <MmUnmapViewInSystemSpace+>;movl $, %eax": 1,
                "jmp  <MmUnmapViewInSystemSpace+>;pushl (%ebp);leal (%ebp), %eax;pushl %ebx;pushl %edi": 1,
                "testb %al, %al;jne  <MmUnmapViewInSystemSpace+>;movl (%esi), %esi;cmpl $, %esi;jne - <MmUnmapViewInSystemSpace+>": 1,
                "cmpl $, %esi;jne - <MmUnmapViewInSystemSpace+>;movl %edi, %ecx;calll - <ExReleaseResourceLite>;movl (%ebp), %eax": 1,
                "pushl (%ebp);calll  <RtlTimeToElapsedTimeFields+>;pushl -(%ebp);movl %eax, %esi;calll - <wcsstr+>": 1,
                "movl -(%ebp), %esi;xorl %edi, %edi;incl %edi;jmp  <MmUnmapViewInSystemSpace+>;movl (%ecx), %eax": 1,
                "addl %eax, %ecx;pushl %ebx;movl %ecx, -(%ebp);movw (%eax), %cx;movl (%eax), %eax": 1,
                "pushl %edi;pushl $;movl %eax, %esi;decl (%esi);movl $, %ebx": 1,
                "calll - <MmUnmapViewInSystemSpace+>;cmpl %edi, %eax;movl %eax, -(%ebp);jge  <MmUnmapViewInSystemSpace+>;cmpl $, -(%ebp)": 1,
                "movb $, %cl;movb $, (%esi);calll *;movl -(%ebp), %eax;popl %edi": 1,
                "movl %esp, %ebp;subl $, %esp;andl $, -(%ebp);andl $, -(%ebp);orl $-, -(%ebp)": 1,
                "pushl %eax;pushl %ebx;movl $, -(%ebp);calll - <KeStackAttachProcess>;movl , %esi": 1,
                "pushl %ebx;movl $, -(%ebp);calll - <KeStackAttachProcess>;movl , %esi;leal (%ebx), %ecx": 1,
                "movl , %edi;jne  <MmUnmapViewInSystemSpace+>;leal (%ebx), %ecx;movl (%ecx), %eax;jmp  <MmUnmapViewInSystemSpace+>": 1,
                "movl %eax, -(%ebp);jne  <MmUnmapViewInSystemSpace+>;incl %eax;movl %eax, -(%ebp);pushl $": 1,
                "movl -(%ebp), %ecx;andl $, (%ebx);calll *%edi;pushl -(%ebp);pushl %ebx": 1,
                "testl %eax, %eax;je  <MmUnmapViewInSystemSpace+>;movl (%eax), %ebx;pushl $;pushl %eax": 1,
                "calll - <ExFreePoolWithTag>;testl %ebx, %ebx;movl %ebx, %eax;jne - <MmUnmapViewInSystemSpace+>;pushl $": 1,
                "movl -(%ebp), %ecx;calll *%edi;cmpl $, -(%ebp);je  <MmUnmapViewInSystemSpace+>;leal -(%ebp), %eax": 1,
                "pushl $;pushl %eax;pushl $;movl %eax, -(%ebp);calll - <MmAddVerifierThunks+>": 1,
                "movl %ecx, (%esi);leal (%ebx), %edx;movl %esi, %ecx;movl %edi, (%esi);movl %eax, (%esi)": 1,
                "calll - <NtSetEvent+>;movl (%ebx), %ecx;calll - <MmUnmapViewInSystemSpace+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "testb $, (%eax);movl -(%ebp), %edx;movl -(%ebp), %eax;jne  <MmUnmapViewInSystemSpace+>;pushl $": 1,
                "leal -(,%edx,), %eax;cmpl %eax, %ecx;movl %ecx, (%ebp);movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "jne  <MmUnmapViewInSystemSpace+>;movl (%ebp), %edi;shrl $, %edi;andl $, %edi;subl $, %edi": 1,
                "subl $, %edi;andl $, -(%ebp);jmp  <MmUnmapViewInSystemSpace+>;addl $, %edi;movl %edi, %eax": 1,
                "pushl -(%ebp);pushl %edi;movl -(%ebp), %edi;pushl %edi;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;pushl $;pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;pushl $": 1,
                "pushl %edi;pushl -(%ebp);movl %edi, -(%ebp);calll - <MmAddVerifierThunks+>;pushl $": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %edx;movl $, %eax;andl %eax, %ecx": 1,
                "movl %edi, -(%ebp);calll - <MmMapMemoryDumpMdl+>;jmp  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %edi;movl (%ebp), %esi": 1,
                "orl $, %eax;shll $, %eax;jmp  <MmUnmapViewInSystemSpace+>;movl (%esi), %ecx;subl , %ecx": 1,
                "jmp  <MmUnmapViewInSystemSpace+>;movl (%esi), %ecx;subl , %ecx;movl %ecx, %eax;andl $, %eax": 1,
                "andl $, %eax;orl $, %eax;shll $, %ecx;shrl %eax;andl $, %ecx": 1,
                "movl (%eax), %eax;movl %eax, (%edi);movl $, (%edi);orl $, (%esi);movl %edi, (%esi)": 1,
                "movl (%esi), %eax;andl $, %eax;shrl $, %ecx;orl %ecx, %eax;movl %eax, (%esi)": 1,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;testb %al, %al;jns  <MmUnmapViewInSystemSpace+>": 1,
                "leal (%eax,%ecx,), %eax;andb $, (%eax);movl (%esi), %esi;subl , %esi;movl %esi, %eax": 1,
                "movl %esi, %ecx;shll $, %ecx;andl $, %ecx;orl %ecx, %eax;movl -(%ebp), %ecx": 1,
                "je  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;incw (%eax)": 1,
                "movl %esi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "calll - <MmMapMemoryDumpMdl+>;xorl %edx, %edx;movl %edi, %ecx;movl %edi, -(%ebp);calll - <MmMapMemoryDumpMdl+>": 1,
                "je  <MmUnmapViewInSystemSpace+>;movl %eax, %ecx;shrl $, %ecx;movl %ecx, %edx;andb $, %dl": 1,
                "shrl %eax;orl %ecx, %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %ecx": 1,
                "movl %eax, (%ecx);decl (%ebx);incl -(%ebp);movl %edi, -(%ebp);jmp  <MmUnmapViewInSystemSpace+>": 1,
                "jbe - <MmUnmapViewInSystemSpace+>;movl -(%ebp), %eax;movl (%eax), %eax;movl -(%ebp), %esi;movl %eax, -(%ebp)": 1,
                "jne - <MmUnmapViewInSystemSpace+>;movl -(%ebp), %ecx;xorl %edx, %edx;calll - <MmMapMemoryDumpMdl+>;pushl -(%ebp)": 1,
                "calll - <KeBugCheckEx>;leal (%ebx), %edx;movl %esi, %ecx;calll - <PsReturnProcessNonPagedPoolQuota+>;movl -(%ebp), %ecx": 1,
                "calll *;movl (%esi), %eax;pushl $;pushl (%eax);calll - <ExFreePoolWithTag>": 1,
                "pushl %esi;pushl $;pushl %edi;calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax": 1,
                "movl %eax, (%ecx);movl (%ebp), %ecx;leal (%eax), %esi;movl %esi, (%ebp);calll - <NtSetEvent+>": 1,
                "calll - <NtSetEvent+>;testl %eax, %eax;movl %eax, (%ebp);jne - <MmUnmapViewInSystemSpace+>;movl (%ebp), %edi": 1,
                "movl (%ebp), %edi;andl $, (%esi);movl -(%ebp), %ecx;movl , %esi;calll *%esi": 1,
                "movl -(%ebp), %ecx;andl $, (%ebx);calll *%esi;cmpl $, -(%ebp);je  <MmUnmapViewInSystemSpace+>": 1,
                "andl $, (%ebx);calll *%esi;cmpl $, -(%ebp);je  <MmUnmapViewInSystemSpace+>;leal -(%ebp), %eax": 1,
                "je  <MmUnmapViewInSystemSpace+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;movl $, -(%ebp)": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);jge  <MmUnmapViewInSystemSpace+>;orl $, (%ebx);pushl %ebx": 1,
                "movl (%ebp), %eax;jmp  <MmUnmapViewInSystemSpace+>;cmpl %esi, -(%ebp);je  <MmUnmapViewInSystemSpace+>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <RtlSetBit>;addl $, %esi;cmpl -(%ebp), %esi;jb  <MmUnmapViewInSystemSpace+>": 1,
                "je  <MmUnmapViewInSystemSpace+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "calll - <RtlClearAllBits>;cmpl %edi, %esi;jb - <MmUnmapViewInSystemSpace+>;testl %ebx, %ebx;je  <MmUnmapViewInSystemSpace+>": 1,
                "pushl $;calll ;leal -(%ebp), %eax;pushl %eax;calll - <RtlClearAllBits>": 1,
                "incl -(%ebp);movl , %eax;movl -(%ebp), %ecx;cmpl (%eax), %ecx;jb - <MmUnmapViewInSystemSpace+>": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <MmUnmapViewInSystemSpace+>;movl (%edi), %eax": 1,
                "movl (%eax), %ecx;addl $, %eax;testl %ecx, %ecx;je  <MmUnmapViewInSystemSpace+>;pushl %esi": 1,
                "addl $, %eax;testl %ecx, %ecx;je  <MmUnmapViewInSystemSpace+>;pushl %esi;cmpl $, (%eax)": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <MmUnmapViewInSystemSpace+>;movl $, %ecx": 1,
                "incl ;cmpl %ebx, (%edi);je  <MmUnmapViewInSystemSpace+>;incl -(%ebp);addl $, %edi": 1,
                "incl %edx;cmpb (%eax), %ah;incl %edi;jb  <MmUnmapViewInSystemSpace+>;outsb (%esi), %dx": 1,
                "arpl %bp, (%eax);andb %ch, (%ecx,%ebp,);imull $, (%eax), %esi;addb %cl, %ah;int": 1,
                "addl $, (%eax);movl (%eax), %eax;cmpl %eax, (%ebp);jae  <MmUnmapViewInSystemSpace+>;movl $, %eax": 2,
                "pushl %edi;movw (%ebp), %di;movw %di, (%eax);movl , %eax;andl $-, %ecx": 1,
                "movb %al, (%edi);movl (%ecx), %eax;movb (%eax), %al;movl (%esi), %edi;movb %al, (%edi)": 1,
                "movl (%esi), %eax;movw (%ebp), %di;movw %di, (%eax);movl (%esi), %eax;addl $, %ecx": 1,
                "andw $, %ax;movw %ax, (%ecx);xorl %eax, %eax;movw (%edx), %ax;pushl %eax": 1,
                "cmpl %eax, (%ebp);jae  <MmUnmapViewInSystemSpace+>;movl $, %eax;jmp  <MmUnmapViewInSystemSpace+>;movl (%ebp), %ecx": 1,
                "leal (%ecx,%eax,), %ecx;movl (%ecx), %eax;movl (%eax), %edx;movl %edx, (%ecx);andl $, (%eax)": 1,
                "movl %eax, (%ebp);jl  <MmUnmapViewInSystemSpace+>;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;movl -(%ebp), %ecx": 1,
                "movb (%ebx), %al;testb %al, %al;movl %ebx, -(%ebp);je  <MmUnmapViewInSystemSpace+>;movzbl %al, %eax": 1,
                "movl %esi, (%ebp);jne - <MmUnmapViewInSystemSpace+>;andl $, -(%ebp);movl (%ebp), %eax;addl $-, %eax": 1,
                "testb %al, %al;je  <MmUnmapViewInSystemSpace+>;movl (%ebp), %ebx;movzbl %al, %eax;subl %eax, %ebx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%ebp), %ecx;cmpl (%ecx), %eax;je  <MmUnmapViewInSystemSpace+>": 1,
                "movl (%ebp), %ecx;cmpl (%ecx), %eax;je  <MmUnmapViewInSystemSpace+>;movl $, (%ebp);jmp  <MmUnmapViewInSystemSpace+>": 1,
                "movl %esi, %ecx;calll - <ExfReleasePushLock>;movl %ebx, -(%ebp);jmp - <MmUnmapViewInSystemSpace+>;movl -(%ebp), %ecx": 1,
                "je  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %edx;testl %edx, %edx;je  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %eax": 1,
                "je  <MmUnmapViewInSystemSpace+>;movl %ebx, %ecx;calll - <ExfAcquirePushLockExclusive>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlEqualUnicodeString+>;cmpl %eax, -(%ebp);je  <MmUnmapViewInSystemSpace+>;movl $, (%ebp);jmp  <MmUnmapViewInSystemSpace+>": 1,
                "movzwl -(%ebp), %ebx;pushl %ebx;pushl %esi;calll - <MmUnmapViewInSystemSpace+>;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);calll - <MmUnmapViewInSystemSpace+>;movl %eax, %esi;testl %esi, %esi;jne  <MmUnmapViewInSystemSpace+>": 1,
                "movl (%edi), %eax;pushl -(%ebp);movl (%edi), %ecx;pushl -(%ebp);movl %edx, (%edi)": 1,
                "movl %eax, (%esi);movl %ecx, (%esi);calll - <MmUnmapViewInSystemSpace+>;pushl -(%ebp);pushl %ebx": 1,
                "pushl -(%ebp);pushl %ebx;pushl -(%ebp);calll - <MmUnmapViewInSystemSpace+>;cmpl $, -(%ebp)": 1,
                "je  <MmUnmapViewInSystemSpace+>;movb $, %cl;movb $, (%eax);calll *;movl -(%ebp), %ebx": 1,
                "movl %fs:, %eax;decl (%eax);leal (%ecx), %esi;movl $, (%ebp);pushl $": 1,
                "movl $, (%ebp);pushl $;pushl %esi;calll - <ExAcquireResourceExclusiveLite>;addl $, %esi": 1,
                "pushl $;pushl %ecx;pushl $;movl $, -(%ebp);calll - <ExAllocatePoolWithTag>": 1,
                "testl %eax, %eax;movl (%ebp), %edi;movl %eax, (%edi);jne  <MmUnmapViewInSystemSpace+>;movl $, %eax": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%edi);jne  <MmUnmapViewInSystemSpace+>;movl $, %eax": 1,
                "pushl %ebx;pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %esi": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %esi;cmpl %ebx, %esi;jl  <MmUnmapViewInSystemSpace+>": 1,
                "jbe  <MmUnmapViewInSystemSpace+>;pushl %edi;leal (%esi), %edi;movl (%edi), %eax;testl %eax, %eax": 1,
                "pushl $;pushl %esi;calll - <ExAcquireResourceExclusiveLite>;andl $, -(%ebp);addl $, %esi": 1,
                "xorl %edi, %edi;cmpl %esi, %eax;je  <MmUnmapViewInSystemSpace+>;movl (%eax), %eax;incl %edi": 1,
                "movb $, %cl;movb $, (%eax);calll *;movl -(%ebp), %eax;leave": 1,
                "movl %ebx, -(%ebp);cmpl %esi, %ebx;jne  <MmUnmapViewInSystemSpace+>;movl $, %eax;jmp  <MmUnmapViewInSystemSpace+>": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %eax;cmpl (%ebx), %eax;jae  <MmUnmapViewInSystemSpace+>;movl (%ebx,%eax,), %eax": 1,
                "movl %ecx, %edx;subl -(%ebp), %edx;cmpl %ecx, -(%ebp);sbbl %ecx, %ecx;andl %edx, %ecx": 1,
                "jl  <MmUnmapViewInSystemSpace+>;addl $-, %ecx;movl -(%ebp), %eax;movw %cx, (%eax);movl (%ebp), %ecx": 1,
                "addl $-, %ecx;movl -(%ebp), %eax;movw %cx, (%eax);movl (%ebp), %ecx;subl -(%ebp), %ecx": 1,
                "je  <MmUnmapViewInSystemSpace+>;movl (%eax), %eax;movl %eax, (%esi);jmp  <MmUnmapViewInSystemSpace+>;movl (%edi), %eax": 1,
                "jne  <MmUnmapViewInSystemSpace+>;movl (%ebp), %ecx;cmpl %ecx, -(%ebp);jae  <MmUnmapViewInSystemSpace+>;pushl %eax": 1,
                "calll  <MmUnmapViewInSystemSpace+>;cmpl $, -(%ebp);movl $, %eax;je  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);movl $, %eax;je  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jmp  <MmUnmapViewInSystemSpace+>": 1,
                "pushl %esi;calll - <KeStackAttachProcess>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movb $, (%edi);calll *;cmpb $, -(%ebp);popl %edi;jne  <MmUnmapViewInSystemSpace+>": 1,
                "incl (%eax);xorb %al, %al;popl %ebp;retl $;nop": 1,
                "leal (%esi), %eax;movl (%esi), %esi;pushl %eax;calll - <ObMakeTemporaryObject>;cmpl %ebx, %esi": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl $;movl %edi, (%ebp);pushl (%eax);calll - <ExEnumHandleTable>;jmp  <MmUnmapViewInSystemSpace+>": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);je  <MmUnmapViewInSystemSpace+>;movl -(%ebp), %edx;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl %edi, (%eax);movl %eax, (%ebp);je  <MmUnmapViewInSystemSpace+>;movl (%ebp), %eax": 1,
                "pushl $;leal (%edi,%eax), %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl (%esi), %eax": 1,
                "popl %ebx;leave;retl $;incl %esp;addb %ch, (%edi)": 1,
                "decl %edi;addb %cl, (%edi);pushl %esp;addb %al, (%eax);addb %cl, %ah": 2,
                "movl -(%eax), %esi;movzwl (%esi), %eax;movl %eax, -(%ebp);addl $, %eax;andl $, -(%ebp)": 1,
                "movl $, %esi;jmp  <MmUnmapViewInSystemSpace+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <IoCreateFile>;testl %eax, %eax;jge  <MmUnmapViewInSystemSpace+>": 1,
                "movl , %esi;movl %esi, %eax;leal (%eax), %ecx;movb (%eax), %dl;incl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <ZwEnumerateValueKey+>;movl (%ebp), %eax": 1,
                "calll - <ZwQueryInformationFile>;testl %eax, %eax;jl  <MmUnmapViewInSystemSpace+>;pushl %esi;pushl $": 1,
                "pushl %esi;pushl %ebx;calll - <ExAllocatePoolWithTag>;movl %eax, %edx;cmpl %ebx, %edx": 1,
                "movl %edx, -(%ebp);je  <MmUnmapViewInSystemSpace+>;pushl %edi;pushl %esi;pushl %edx": 1,
                "movl %eax, (%ebp);je  <MmUnmapViewInSystemSpace+>;pushl %eax;calll - <MmBuildMdlForNonPagedPool>;movl -(%ebp), %eax": 1,
                "movl %eax, %edi;orl %ecx, %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, -(%ebp);calll - <RtlInitUnicodeString>;andl $, -(%ebp)": 1,
                "testl %eax, %eax;jl  <MmUnmapViewInSystemSpace+>;pushl %esi;pushl $;leal -(%ebp), %eax": 1,
                "addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <MmUnmapViewInSystemSpace+>;jns  <MmUnmapViewInSystemSpace+>": 1,
                "addb %ch, (%esi);je  <MmUnmapViewInSystemSpace+>;jb  <MmUnmapViewInSystemSpace+>;outsl (%esi), %dx;addb %ch, (%eax,%eax)": 1,
                "insl %dx, %es:(%edi);addb %al, (%ecx);arpl %ax, (%eax);je  <MmUnmapViewInSystemSpace+>;imull $, (%eax), %eax": 1,
                "addb %al, (%eax);incl %ecx;addb %ah, (%ebx);je  <MmUnmapViewInSystemSpace+>;imull $, (%eax), %eax": 1,
                "xorl %esi, %esi;cmpl %esi, %ebx;pushl %edi;movl %esi, -(%ebp);jne  <MmUnmapViewInSystemSpace+>": 1,
                "movl %esi, -(%ebp);jne  <MmUnmapViewInSystemSpace+>;pushl $;pushl $;pushl %esi": 1,
                "je  <MmUnmapViewInSystemSpace+>;leal (%ebx), %edi;cmpl %esi, (%edi);jne  <MmUnmapViewInSystemSpace+>;cmpl %esi, ": 1,
                "movl , %eax;andl $, %eax;pushl %eax;pushl $;pushl %edi": 1,
                "calll - <PsSetLegoNotifyRoutine+>;cmpl %esi, %eax;movl %eax, -(%ebp);jl  <MmUnmapViewInSystemSpace+>;movl (%edi), %eax": 1,
                "movb %al, (%ebx);cmpl %esi, (%ebx);jne  <MmUnmapViewInSystemSpace+>;movl , %edi;addl $, %edi": 1,
                "calll - <RtlSetAllBits>;movl , %eax;xorl %esi, %esi;xorl %edi, %edi;cmpl %esi, (%eax)": 1,
                "pushl %ebx;calll - <MmProbeAndLockProcessPages+>;pushl %ebx;calll *;movl (%ebx), %eax": 1,
                "cmpl %esi, %eax;je  <MmUnmapViewInSystemSpace+>;pushl %eax;pushl %ebx;calll - <IoCsqRemoveIrp+>": 1,
                "cmpl %esi, (%ebx);jl  <MmUnmapViewInSystemSpace+>;cmpb $, (%ebx);je  <MmUnmapViewInSystemSpace+>;pushl %esi": 1,
                "cmpl %esi, %eax;movl %eax, (%ebx);je  <MmUnmapViewInSystemSpace+>;pushl $;pushl $": 2,
                "je  <MmUnmapViewInSystemSpace+>;pushl $;pushl $;pushl %ebx;calll  <PoSetHiberRange+>": 1,
                "pushl ;pushl %esi;calll - <InbvNotifyDisplayOwnershipLost+>;cmpl %eax, ;je  <MmUnmapViewInSystemSpace+>": 1,
                "jmp  <MmUnmapViewInSystemSpace+>;pushl $;pushl ;pushl %esi;calll - <ExAllocatePoolWithTag>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl $;movl $, %edi": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "pushl %edi;pushl %ebx;calll  <PoSetHiberRange>;addl $, -(%ebp);decl -(%ebp)": 1,
                "leal (%ebx), %eax;cmpl %esi, (%eax);jne  <MmUnmapViewInSystemSpace+>;pushl $;pushl %eax": 1,
                "cmpl $, %eax;jl  <PoShutdownBugCheck+>;incl %eax;movl (%ebp), %ecx;cmpl $, %ecx": 1,
                "orl %ecx, %eax;movb (%ebp), %cl;notl %edx;andl %edx, %eax;movl %eax, ": 1,
                "movb (%ebp), %cl;notl %edx;andl %edx, %eax;movl %eax, ;movl (%ebp), %eax": 1,
                "andb $-, %al;movb %al, (%ecx);movl (%ecx), %ecx;movl (%ebp), %eax;pushl $": 1,
                "movl (%ebp), %eax;pushl $;pushl $;pushl %ecx;movl %eax, (%ecx)": 1,
                "pushl $;pushl $;pushl %ecx;movl %eax, (%ecx);calll - <KeSetEvent>": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <PoShutdownBugCheck+>;movl %fs:, %eax": 1,
                "jne  <PoShutdownBugCheck+>;pushl %edi;calll *;movl %eax, %ebx;jmp  <PoShutdownBugCheck+>": 1,
                "testb $, (%eax);je  <PoShutdownBugCheck+>;pushl %esi;calll - <PsIsThreadTerminating+>;movl %eax, %ebx": 1,
                "testb $-, (%eax);je  <PoShutdownBugCheck+>;pushl $;leal (%ebp), %eax;pushl %eax": 1,
                "movl %ebx, (%ebp);calll ;popl %edi;movl %ebx, %eax;popl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;movl %ebx, -(%ebp);calll ": 1,
                "pushl (%ebp);leal (%ebp), %eax;pushl %eax;calll - <IoOpenDeviceRegistryKey+>;movl (%ebp), %esi": 1,
                "pushl $;jmp  <PoShutdownBugCheck+>;andl $, ;movb $, ;pushl $": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <PoShutdownBugCheck+>;xorl %ecx, %ecx": 1,
                "je  <PoShutdownBugCheck+>;incl %ecx;cmpl $, %ecx;jae  <PoShutdownBugCheck+>;jmp - <PoShutdownBugCheck+>": 1,
                "cmpl $, %ecx;jae  <PoShutdownBugCheck+>;jmp - <PoShutdownBugCheck+>;jmp  <PoShutdownBugCheck+>;orb $-, (%ebp)": 1,
                "movl %eax, ;jmp  <PoShutdownBugCheck+>;pushl $;pushl %ebx;calll - <PoShutdownBugCheck+>": 1,
                "pushl $;pushl %ebx;calll - <PoShutdownBugCheck+>;popl %esi;popl %ebx": 1,
                "movb (%ebp), %al;cmpb %bl, %al;movl (%ebp), %ecx;movb %al, -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %ebx;pushl %ebx;calll - <KeDelayExecutionThread>;cmpl %edi, %esi;je - <PoShutdownBugCheck+>": 1,
                "pushl %eax;calll - <PoShutdownBugCheck+>;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movl $, -(%ebp);movl $, -(%ebp);xorl %eax, %eax": 1,
                "nop;nop;movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %ecx": 1,
                "pushl %ecx;pushl %ecx;calll - <IoGetDeviceProperty+>;cmpb $, ;jne  <PoShutdownBugCheck+>": 1,
                "movl %ebx, -(%ebp);calll ;pushl %edi;movl , %edi;movl $, %esi": 1,
                "pushl %esi;movl (%ebp), %esi;je  <PoShutdownBugCheck+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "cmpl $, %eax;je  <PoShutdownBugCheck+>;cmpl $, %eax;jle  <PoShutdownBugCheck+>;cmpl $, %eax": 1,
                "cmpl $, %eax;jle  <PoShutdownBugCheck+>;cmpl $, %eax;jg  <PoShutdownBugCheck+>;xorl %eax, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;popl %ebp;jmp - <IoReportTargetDeviceChangeAsynchronous+>;int": 1,
                "xorl %eax, %eax;cmpb %bl, (%ebp);sete %al;incl %eax;movl %eax, (%esi)": 1,
                "jl  <PoShutdownBugCheck+>;pushl %edi;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl ;calll - <ExNotifyCallback>;pushl $;pushl $": 1,
                "pushl $;pushl $;pushl $;calll - <KeSetEvent>;retl $": 1,
                "je  <PoShutdownBugCheck+>;pushl %esi;movl (%edi), %esi;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "movl , %eax;movl $, (%esi);movl %eax, (%esi);movl %esi, (%eax);movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;movl %esi, ;calll *;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;jl  <PoShutdownBugCheck+>;xorl %eax, %eax;cmpl %eax, -(%ebp);je  <PoShutdownBugCheck+>": 1,
                "testl %eax, %eax;jl  <PoShutdownBugCheck+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwEnumerateValueKey+>;pushl -(%ebp);calll - <ZwClose>;movl %ebx, %ecx": 1,
                "pushl %esi;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %edi": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "leal -(%ecx), %eax;movl (%eax), %esi;movl (%esi), %edx;testb $, (%edx);movl (%ecx), %ecx": 1,
                "testb $, (%edx);jne  <PoShutdownBugCheck+>;movl (%eax), %esi;addl $, %eax;movl (%eax), %edx": 1,
                "movl %esi, (%edx);movl -(%ebp), %edx;leal -(%ebp), %esi;movl %esi, (%eax);movl %edx, (%eax)": 1,
                "movl %eax, -(%ebp);cmpl %edi, %ecx;jne - <PoShutdownBugCheck+>;movl -(%ebp), %eax;cmpl $, %eax": 1,
                "calll - <ZwClose>;leal -(%ebp), %eax;pushl %eax;calll - <PoShutdownBugCheck+>;pushl %ebx": 1,
                "calll - <PoShutdownBugCheck+>;pushl %ebx;pushl $;pushl %ebx;pushl $": 1,
                "movl $, %ebx;jmp  <PoShutdownBugCheck+>;movl $, %ebx;pushl %esi;movl %fs:, %eax": 1,
                "jmp  <PoShutdownBugCheck+>;movl (%ebp), %ecx;testl $, %ecx;je  <PoShutdownBugCheck+>;movl $, %eax": 1,
                "movl %ebx, -(%ebp);pushl $;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 2,
                "orl $-, -(%ebp);jmp  <PoShutdownBugCheck+>;nop;nop;nop": 2,
                "movl -(%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);pushl $": 1,
                "movl %ecx, (%eax);pushl %ebx;calll - <IoGetDeviceProperty+>;jmp  <PoShutdownBugCheck+>;movl (%esi), %eax": 1,
                "testb $, (%esi);pushl %edi;jne  <PoShutdownBugCheck+>;pushl %esi;calll - <IoGetRelatedDeviceObject>": 1,
                "cmpl %eax, %edi;jb  <PoShutdownBugCheck+>;movl %ebx, (%eax);movl (%edi), %eax;movl %eax, (%edi)": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %ebx, %esi;jl  <PoShutdownBugCheck+>;movl -(%ebp), %eax": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;calll - <_CIsqrt+>": 1,
                "jne  <PoShutdownBugCheck+>;movl -(%ebp), %eax;pushl %ebx;pushl %eax;calll  <SeTokenIsAdmin>": 1,
                "pushl %esi;movl %edi, (%esi);calll - <IoOpenDeviceRegistryKey+>;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp)": 2,
                "jle  <PoShutdownBugCheck+>;testl %eax, %eax;jl  <PoShutdownBugCheck+>;jg  <PoShutdownBugCheck+>;testl %ecx, %ecx": 1,
                "jl  <PoShutdownBugCheck+>;jg  <PoShutdownBugCheck+>;testl %ecx, %ecx;jb  <PoShutdownBugCheck+>;movl , %eax": 1,
                "movl %ebx, %esi;movl %edi, %eax;cltd;pushl %edx;pushl %eax": 1,
                "movl %edi, %eax;cltd;pushl %edx;pushl %eax;pushl -(%ebp)": 1,
                "calll - <_alldiv>;cmpl $, %esi;movl %eax, -(%ebp);movl %edx, -(%ebp);jg  <PoShutdownBugCheck+>": 1,
                "movl %edx, -(%ebp);jg  <PoShutdownBugCheck+>;cmpl $, %esi;jl  <PoShutdownBugCheck+>;xorl %edx, %edx": 1,
                "xorl %edx, %edx;divl %ebx;movl , %ecx;cmpl $, %ecx;movl %eax, %edi": 1,
                "movl , %eax;xorl %edx, %edx;divl %ecx;movl , %edx;movl %edx, %ecx": 1,
                "jbe  <PoShutdownBugCheck+>;cmpl $, %ecx;jle  <PoShutdownBugCheck+>;movl %edx, %eax;pushl $": 1,
                "jle  <PoShutdownBugCheck+>;imull %ecx, %eax;pushl %eax;calll - <PoShutdownBugCheck+>;subl %eax, %esi": 1,
                "movl -(%ebp), %eax;movl %eax, ;movl -(%ebp), %eax;xorl %edx, %edx;movl %esi, ": 1,
                "movl %eax, ;movb $, ;incl %edx;movl $, %ecx;testl %edx, %esi": 1,
                "calll - <PoShutdownBugCheck+>;cmpb %bl, ;movb %al, -(%ebp);je  <PoShutdownBugCheck+>;calll - <ExInitializePagedLookasideList+>": 1,
                "calll - <ExInitializePagedLookasideList+>;cmpb %bl, -(%ebp);movb $, ;je  <PoShutdownBugCheck+>;pushl %edi": 1,
                "movb $, ;je  <PoShutdownBugCheck+>;pushl %edi;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);pushl $;pushl %ebx;leal -(%ebp), %eax": 1,
                "imull , %eax;pushl $;xorl %edx, %edx;popl %ebx;divl %ebx": 2,
                "movl %esi, %eax;movb %al, -(%ecx);addl $, %ecx;decl %edi;jne - <PoShutdownBugCheck+>": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;orl $-, (%eax);movl %esi, %ecx;shll $, %ecx": 1,
                "cmpl $, %esi;jbe  <PoShutdownBugCheck+>;pushl %ebx;pushl %edi;movl (%ebp), %edi": 1,
                "leal -(%esi), %ebx;movl (%edi), %eax;movw (%ecx), %si;leal (%eax,%eax,), %eax;shll %eax": 1,
                "shll %eax;xorl %edx, %edx;divl (%ebp);incl %eax;testw %si, %si": 1,
                "leal (%eax), %ecx;leal -(%edx), %edi;movzbl (%ecx), %esi;movzbl -(%ecx), %eax;subl %esi, %eax": 1,
                "jbe  <PoShutdownBugCheck+>;pushl $;popl %eax;jmp  <PoShutdownBugCheck+>;subl %eax, %esi": 1,
                "subl %eax, %esi;movl %esi, %eax;movb %al, (%ecx);addl $, %ecx;decl %edi": 1,
                "je  <PoShutdownBugCheck+>;pushl %esi;movl (%ebp), %esi;jmp  <PoShutdownBugCheck+>;movzbl %cl, %edx": 1,
                "decb %cl;testb $, -(%edx,%esi);jne  <PoShutdownBugCheck+>;cmpb $, %cl;jb  <PoShutdownBugCheck+>": 1,
                "cmpb $, %cl;jb  <PoShutdownBugCheck+>;jmp - <PoShutdownBugCheck+>;jmp  <PoShutdownBugCheck+>;movb %cl, %bl": 1,
                "jbe  <PoShutdownBugCheck+>;leal (%esi), %ecx;movzbl %bl, %edx;movb $, (%ecx);addl $, %ecx": 1,
                "movl %ebx, -(%eax);leal -(%eax), %ecx;movl %ecx, -(%eax);movl %ecx, (%ecx);leal -(%eax), %ecx": 1,
                "decl %edx;movl %ecx, (%ecx);jne - <PoShutdownBugCheck+>;movl %esi, ;popl %esi": 1,
                "cmpl $, ;sete %al;pushl %eax;pushl $;pushl ": 1,
                "xorl %eax, %eax;incl %eax;lock;orl %eax, (%edi);pushl $": 1,
                "cmpl $, %edi;jb - <PoShutdownBugCheck+>;calll  <PoShutdownBugCheck+>;pushl $;calll - <IoGetDeviceProperty+>": 1,
                "popl %esi;retl $;int;int;int": 2,
                "testl %eax, %eax;jge  <PoShutdownBugCheck+>;movl , %ecx;testl $, %ecx;je  <PoShutdownBugCheck+>": 1,
                "jge  <PoShutdownBugCheck+>;movl , %ecx;testl $, %ecx;je  <PoShutdownBugCheck+>;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl %ecx, -(%ebp);pushl $;calll - <IoGetDeviceProperty+>": 1,
                "movl %ecx, -(%ebp);pushl $;calll - <IoGetDeviceProperty+>;cmpl $, -(%ebp);jge  <PoShutdownBugCheck+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);je  <PoShutdownBugCheck+>;cmpl $, %ebx": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);je  <PoShutdownBugCheck+>;cmpl $, %ebx;jne  <PoShutdownBugCheck+>": 1,
                "pushl %eax;pushl %ebx;pushl ;calll - <ExNotifyCallback>;testl %ebx, (%esi)": 1,
                "movb (%ecx), %bl;testb %bl, %bl;js  <PoShutdownBugCheck+>;cmpb $, (%eax);je  <PoShutdownBugCheck+>": 1,
                "cmpl (%edx), %eax;jae  <PoShutdownBugCheck+>;orb (%ebp), %bl;movb %bl, (%ecx);movl -(%ebp), %eax": 1,
                "cmpb $, %al;je  <PoShutdownBugCheck+>;cmpb $, %al;je  <PoShutdownBugCheck+>;cmpb $, %al": 1,
                "pushl %edi;movl %eax, ;movl , %eax;pushl %edi;pushl $": 1,
                "calll - <PoRequestPowerIrp+>;calll - <IoWMIWriteEvent+>;pushl ;calll - <PoUnregisterSystemState+>;calll - <IoEnumerateDeviceObjectList+>": 1,
                "movl $, %esi;movl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ebp), %esi;cmpl $, %esi;jne  <PoShutdownBugCheck+>": 1,
                "jne  <PoShutdownBugCheck+>;addl $, %esi;xorl %edi, %edi;movl , %ecx;leal (%edi), %eax": 1,
                "pushl $;pushl $;jmp  <PoShutdownBugCheck+>;cmpl $, %eax;je  <PoShutdownBugCheck+>": 1,
                "cmpl $, %eax;je  <PoShutdownBugCheck+>;cmpb $, ;sete %al;incb %al": 1,
                "movl $, -(%ebp);je  <PoShutdownBugCheck+>;decl %ecx;je  <PoShutdownBugCheck+>;decl %ecx": 1,
                "pushl $;pushl $;calll - <KeBugCheckEx>;movl $, ;movl %edi, ": 1,
                "pushl $;popl %edi;jmp  <PoShutdownBugCheck+>;orl $-, ;cmpb $, ": 1,
                "movl (%eax), %eax;imull , %eax;pushl $;xorl %edx, %edx;popl %ecx": 1,
                "movl %eax, (%ebp);testb $-, (%eax);je  <PoShutdownBugCheck+>;leal (%eax), %eax;movl (%eax), %edi": 1,
                "movl %eax, %edx;movl %edx, ;movl (%ebp), %eax;addl $, %eax;cmpl $, %eax": 1,
                "pushl $;movl %eax, ;movl $, ;calll - <PoRequestPowerIrp+>;calll - <IoWMIWriteEvent+>": 1,
                "movl $, ;calll - <PoRequestPowerIrp+>;calll - <IoWMIWriteEvent+>;calll - <IoEnumerateDeviceObjectList+>;calll - <IoOpenDeviceRegistryKey+>": 1,
                "calll - <PoRequestPowerIrp+>;calll - <IoWMIWriteEvent+>;calll - <IoEnumerateDeviceObjectList+>;calll - <IoOpenDeviceRegistryKey+>;cmpb $, ": 1,
                "calll - <KeSetEvent>;pushl %ebx;calll - <IoFreeIrp>;movl (%ebp), %ecx;movl %edi, ": 1,
                "movzbl (%esi), %eax;decl %eax;je  <PoShutdownBugCheck+>;decl %eax;je  <PoShutdownBugCheck+>": 1,
                "decl %eax;je  <PoShutdownBugCheck+>;decl %eax;je  <PoShutdownBugCheck+>;decl %eax": 1,
                "decl %eax;je  <PoShutdownBugCheck+>;pushl %ecx;pushl %ecx;pushl %ecx": 1,
                "calll - <PoUnregisterSystemState+>;xorl %eax, %eax;cmpb %al, (%esi);jbe  <PoShutdownBugCheck+>;movl (%esi), %edx": 1,
                "cmpl %edi, %eax;jb - <PoShutdownBugCheck+>;movzbl (%esi), %ecx;cmpl %ecx, %eax;je  <PoShutdownBugCheck+>": 1,
                "cmpl , %eax;je  <PoShutdownBugCheck+>;movb $, (%esi);movb , %al;addl $, %esi": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <PoShutdownBugCheck+>;xorl %ecx, %ecx;addl (%esi), %eax": 1,
                "testl %eax, %eax;je  <PoShutdownBugCheck+>;xorl %ecx, %ecx;addl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "leal (%esi), %ecx;pushl %ecx;pushl %edx;pushl %eax;leal (%esi), %eax": 1,
                "movl -(%ebp), %ecx;subl $, %eax;movl %esi, (%ebx);andl $, (%eax);movl %ebx, %edx": 1,
                "nop;movl %fs:, %eax;movl (%eax), %ecx;cmpl $, (%ecx);je  <PoShutdownBugCheck+>": 1,
                "jl  <PoShutdownBugCheck+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %ecx": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %edi": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);ja  <PoShutdownBugCheck+>;movl %ecx, -(%ebp)": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <PsRevertToSelf+>;movl %edi, %ecx": 1,
                "jne  <PsRevertToSelf+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <PsRevertToSelf+>;movb $, %cl": 1,
                "cmpl %eax, (%eax);je  <PsRevertToSelf+>;movb $, %cl;movb $, (%esi);calll *": 1,
                "testb %al, %al;jne  <PsSetCreateProcessNotifyRoutine+>;pushl %esi;pushl %edi;calll  <ExReleaseRundownProtectionEx+>": 1,
                "pushl %esi;calll  <ExReleaseRundownProtectionEx+>;xorl %edi, %edi;jmp  <PsSetCreateProcessNotifyRoutine+>;pushl %ebx": 1,
                "pushl %ebx;pushl (%ebp);calll  <ExReleaseRundownProtectionEx+>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "popl %ebp;retl $;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 5,
                "calll  <ExReleaseRundownProtectionEx+>;cmpl (%ebp), %eax;jne  <PsRemoveCreateThreadNotifyRoutine+>;pushl %esi;pushl $": 1,
                "pushl $;pushl %edi;calll  <ExReleaseRundownProtectionEx+>;testb %al, %al;jne  <PsRemoveCreateThreadNotifyRoutine+>": 1,
                "pushl (%eax);pushl (%eax);pushl $;calll - <KeBugCheckEx>;int": 1,
                "pushl %esi;calll - <SeFreePrivileges>;xorl %eax, %eax;jmp - <PsRemoveLoadImageNotifyRoutine+>;int": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ebx;xorl %esi, %esi": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ebx;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movl %esi, -(%ebp);cmpb $, (%ebp)": 1,
                "je  <PsSetContextThread+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl %ebx, %esi;leal -(%ebp), %edi": 1,
                "movl %ecx, -(%ebp);movl %edi, -(%ebp);calll *;movb %al, %bl;leal -(%ebp), %eax": 1,
                "jne  <PsSetContextThread+>;pushl -(%ebp);pushl (%ebp);pushl %edi;calll - <PsSetContextThread>": 1,
                "testb %al, %al;je  <PsIsThreadImpersonating+>;pushl %esi;pushl (%ebp);calll - <RtlUnicodeStringToAnsiString+>": 1,
                "xorl %eax, %eax;popl %esi;popl %ebp;retl $;movl %esi, %ecx": 1,
                "movl %esp, %ebp;pushl %ebx;xorb %bl, %bl;cmpb %bl, ;pushl %esi": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpl , %esi;je  <PsIsThreadImpersonating+>": 1,
                "je  <PsIsThreadImpersonating+>;pushl %eax;calll - <KeSetTimeUpdateNotifyRoutine+>;testb $, (%esi);jne  <PsIsThreadImpersonating+>": 1,
                "pushl %edi;jmp  <PsIsThreadImpersonating+>;cmpl , %esi;je  <PsIsThreadImpersonating+>;cmpl , %esi": 1,
                "je  <PsIsThreadImpersonating+>;leal (%esi), %eax;pushl %eax;pushl %esi;pushl $": 1,
                "calll - <ExWaitForRundownProtectionRelease+>;pushl %edi;pushl %esi;calll - <RtlUnicodeStringToAnsiString+>;movl %eax, %edi": 1,
                "jmp - <PsIsThreadImpersonating+>;int;int;int;int": 4,
                "calll - <PsSetProcessWindowStation+>;movl %eax, %esi;cmpl %ebx, %esi;jne - <PsIsThreadImpersonating+>;cmpl %ebx, %edi": 1,
                "incl %esi;cmpl %edi, %esi;jb - <PsIsThreadImpersonating+>;cmpl %ebx, %edi;jbe  <PsIsThreadImpersonating+>": 1,
                "jbe  <PsIsThreadImpersonating+>;cmpb %bl, ;jne  <PsIsThreadImpersonating+>;movl %ebx, -(%ebp);cmpl %ebx, ": 1,
                "calll - <ZwClose>;movl , %eax;movl %ebx, ;movl (%eax), %ecx;cmpl %ebx, %ecx": 1,
                "leave;retl;movl %ebx, -(%ebp);cmpl %ebx, %edi;jbe - <PsIsThreadImpersonating+>": 1,
                "movl (%ebp), %ecx;cmpl $, %ecx;jb  <PsIsThreadImpersonating+>;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "movl %ebx, %eax;jmp  <PsIsThreadImpersonating+>;movl %ecx, %esi;subl %ebx, %esi;movl -(%ebp), %eax": 1,
                "addl $, %eax;movl %eax, (%ecx);orl $-, -(%ebp);pushl %esi;pushl $": 1,
                "movl -(%ebp), %esi;jmp - <PsIsThreadImpersonating+>;nop;nop;nop": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;movl %edx, (%ebp);shrl $, (%ebp);testb $, (%ebp)": 1,
                "orl %eax, %ecx;testl $, %esi;je  <PsIsThreadImpersonating+>;movl (%ebp), %eax;andl $, %eax": 1,
                "pushl $;calll - <_CIsqrt+>;cmpl $, (%ebp);je  <PsIsThreadImpersonating+>;movl $, %eax": 1,
                "calll - <_CIsqrt+>;cmpl $, (%ebp);je  <PsIsThreadImpersonating+>;movl $, %eax;jmp  <PsIsThreadImpersonating+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %ecx;movl %ecx, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "movl %ecx, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "orl $-, -(%ebp);xorl %edi, %edi;movl -(%ebp), %ebx;testb $, %bl;jne  <PsIsThreadImpersonating+>": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <PsIsThreadImpersonating+>;movl (%ebp), %ecx": 1,
                "calll - <KeReleaseMutex>;movl %edi, %eax;jmp  <PsIsThreadImpersonating+>;nop;nop": 1,
                "movl $, %eax;testl %esi, %eax;pushl %edi;jne  <PsIsThreadImpersonating+>;movl (%ebp), %edi": 1,
                "pushl %edi;jne  <PsIsThreadImpersonating+>;movl (%ebp), %edi;testl %edi, %eax;jne  <PsIsThreadImpersonating+>": 1,
                "andl $-, %esi;xorl %ebx, %ebx;andl $-, %edi;cmpl %ebx, %esi;movl %esi, (%ebp)": 1,
                "cmpl %ebx, %esi;movl %esi, (%ebp);movl %edi, (%ebp);movl %ebx, -(%ebp);je  <PsIsThreadImpersonating+>": 1,
                "jmp  <PsIsThreadImpersonating+>;addl $, %edi;movl %edi, (%ebp);movl %fs:, %eax;movl (%eax), %edi": 1,
                "pushl %ecx;pushl %edi;calll - <wcstombs+>;testl %esi, %esi;je  <PsIsThreadImpersonating+>": 1,
                "movl (%ebx), %edx;movl -(%ebp,%ecx,), %esi;movl -(%ebp,%ecx,), %ecx;shrl $, %eax;movl %esi, (%edx,%eax,)": 2,
                "pushl %edi;calll - <wcstombs+>;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "movl %eax, %ebx;xorl %eax, %eax;cmpl %eax, %ebx;je  <PsIsThreadImpersonating+>;movl %ebx, (%edi)": 1,
                "je  <PsIsThreadImpersonating+>;movl %ebx, (%edi);movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx)": 1,
                "pushl $;andl $, %edi;pushl %edi;pushl $;movl %edi, -(%ebp)": 1,
                "testl %eax, %eax;movl %eax, (%ebp);je  <PsIsThreadImpersonating+>;pushl %edi;pushl (%ebp)": 1,
                "je  <PsIsThreadImpersonating+>;movl (%ebx), %ecx;movl (%ebp), %edi;movl %eax, %esi;movl %ecx, %eax": 1,
                "movl %esi, (%edx,%eax,);movl %ecx, (%edx,%eax,);pushl (%ebx);pushl (%ebx);pushl (%ebp)": 1,
                "pushl $;pushl $;calll - <KeReleaseMutex>;cmpl $, (%ebp);je  <PsIsThreadImpersonating+>": 1,
                "testl %ebx, %ebx;jne  <PsIsThreadImpersonating+>;movl $, %eax;jmp  <PsIsThreadImpersonating+>;xorl %edx, %edx": 1,
                "jne  <PsIsThreadImpersonating+>;movl $, %eax;jmp  <PsIsThreadImpersonating+>;xorl %edx, %edx;andl %edx, -(%ebp)": 1,
                "movl (%ebx), %edx;movl $, %ecx;testl %edx, %ecx;je  <PsIsThreadImpersonating+>;movl $, %esi": 2,
                "movl $, %esi;jmp  <PsIsThreadImpersonating+>;movl (%ebp), %ecx;addl $-, %ecx;cmpl %eax, %ecx": 2,
                "movl $, %esi;jmp  <PsIsThreadImpersonating+>;testb $, %al;jne - <PsIsThreadImpersonating+>;testb $, %dl": 2,
                "jne  <PsIsThreadImpersonating+>;pushl $;pushl $;pushl %ebx;calll - <ExAllocatePoolWithTag>": 2,
                "pushl %esi;pushl -(%ebp);calll - <PsReturnProcessNonPagedPoolQuota>;jmp  <PsIsThreadImpersonating+>;movl (%ebx), %edx": 1,
                "movl (%edi), %eax;testl %edx, %edx;jne  <PsIsThreadImpersonating+>;movl (%edi), %ecx;addl %eax, %ecx": 2,
                "andl $, %esi;pushl %esi;pushl %ecx;pushl %eax;pushl -(%ebp)": 1,
                "jbe  <PsIsThreadImpersonating+>;leal (%esi), %eax;andl $, %eax;movl %eax, -(%ebp);pushl %eax": 2,
                "calll - <ExFreePoolWithTag>;jmp  <PsIsThreadImpersonating+>;pushl -(%ebp);pushl -(%ebp);calll - <PsReturnProcessNonPagedPoolQuota>": 1,
                "pushl %esi;pushl %edi;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "pushl (%ebx);pushl (%ebx);pushl %esi;pushl -(%ebp);calll - <wcstombs+>": 1,
                "testb $, %al;je  <PsIsThreadImpersonating+>;movl $, %eax;jmp  <PsIsThreadImpersonating+>;pushl %edi": 1,
                "movl (%esi), %eax;movl %ecx, (%esi);testl %ecx, %ecx;jne  <PsIsThreadImpersonating+>;movl (%esi), %ebx": 1,
                "calll - <PsIsThreadImpersonating+>;testl %eax, %eax;jne  <PsIsThreadImpersonating+>;movl %edi, %eax;movl %ebx, (%esi)": 1,
                "xorl %edi, %edi;movl %eax, (%esi);pushl (%esi);pushl %eax;pushl (%ebp)": 1,
                "pushl $;pushl %edi;calll - <ExFreePoolWithTag>;subl %esi, %ebx;pushl %ebx": 1,
                "andl $, -(%ebp);movl (%ebp), %ecx;movl (%ebp), %esi;movl %ebx, %edi;movl %ecx, %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl (%ebx), %edx;movl $, %ecx": 1,
                "testb $, %al;jne - <PsIsThreadImpersonating+>;testb $, %dl;jne - <PsIsThreadImpersonating+>;leal (%ebx), %esi": 1,
                "testl %eax, %eax;je  <PsIsThreadImpersonating+>;addl $, %esi;cmpl %edi, %esi;jb - <PsIsThreadImpersonating+>": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);cmpl %edi, %esi;jge  <PsIsThreadImpersonating+>;pushl $": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movl -(%ebp), %edi;movl (%edi), %ecx;testl %ecx, %ecx": 1,
                "pushl %ecx;pushl %eax;leal (%edi), %eax;pushl %eax;calll - <PsIsThreadImpersonating+>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <PsIsThreadImpersonating+>;pushl %esi;pushl (%ebp)": 1,
                "leal (%edi), %ebx;cmpl %esi, %eax;jae  <PsIsThreadImpersonating+>;pushl (%ebx);pushl (%ebx)": 1,
                "pushl $;movl $, %edi;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;cmpl %esi, (%ebx)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %esi;testl %esi, %esi;je  <PsIsThreadImpersonating+>;pushl $": 2,
                "jne - <PsIsThreadImpersonating+>;movl $, %eax;jmp - <PsIsThreadImpersonating+>;int;int": 1,
                "movl %edx, %eax;andl $-, %eax;pushl %eax;pushl %esi;calll - <PsIsThreadImpersonating+>": 1,
                "testb $, (%ecx);je  <PsIsThreadImpersonating+>;movl (%ecx), %esi;subl %ebx, %esi;je  <PsIsThreadImpersonating+>": 2,
                "cmpb %bl, (%ecx);je  <PsIsThreadImpersonating+>;movl %ebx, (%eax);jmp  <PsIsThreadImpersonating+>;movl %ebx, (%eax)": 2,
                "movl %ebx, (%eax);jmp  <PsIsThreadImpersonating+>;movl %edx, %esi;shrl %esi;andl $, %esi": 1,
                "jmp  <PsIsThreadImpersonating+>;andl $, -(%ebp);cmpl $, (%edi);jne  <PsIsThreadImpersonating+>;pushl %esi": 1,
                "pushl %esi;calll - <PsIsThreadImpersonating+>;movl %eax, -(%ebp);testl %eax, %eax;jl  <PsIsThreadImpersonating+>": 1,
                "movb $, %cl;calll *;movb %al, -(%ebp);pushl $;movl (%edi), %eax": 1,
                "movb -(%ebp), %cl;calll *;movl -(%ebp), %eax;jmp  <PsIsThreadImpersonating+>;pushl $": 1,
                "popl %ecx;xorl %eax, %eax;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl %ebx, %eax": 1,
                "addl $, %ecx;calll - <ExReleaseResourceLite>;movb -(%ebp), %cl;calll *;movl %edi, %eax": 1,
                "movl %edx, (%esi,%ecx,);testb $, (%eax);je  <PsIsThreadImpersonating+>;movl (%eax), %ecx;subl $, %ecx": 1,
                "jmp  <PsIsThreadImpersonating+>;movl %eax, (%esi);jmp  <PsIsThreadImpersonating+>;shrl %ebx;andl $, %ebx": 1,
                "movb $, (%ebp);popl %edi;jmp  <PsIsThreadImpersonating+>;movb $, (%ebp);movl (%ebx), %ecx": 1,
                "cmpl $, (%ebp);jae  <PsIsThreadImpersonating+>;movl $, %eax;jmp  <PsIsThreadImpersonating+>;pushl %ebx": 1,
                "subl %ebx, %eax;je  <PsIsThreadImpersonating+>;decl %eax;je  <PsIsThreadImpersonating+>;movl $, (%ebp)": 1,
                "jmp  <PsIsThreadImpersonating+>;movl $, (%ebp);cmpl %ebx, (%esi);movl %ebx, (%ebp);jbe  <PsIsThreadImpersonating+>": 1,
                "jbe  <PsIsThreadImpersonating+>;movl (%esi), %eax;addl %ebx, %eax;cmpb $, (%edi);je  <PsIsThreadImpersonating+>": 1,
                "je  <PsIsThreadImpersonating+>;pushl (%edi);pushl %eax;pushl %esi;pushl (%ebp)": 1,
                "jb - <PsIsThreadImpersonating+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "calll - <RtlAppendUnicodeToString+>;pushl %esi;pushl %edi;calll - <RtlUnicodeStringToAnsiString+>;movl %eax, %esi": 1,
                "popl %esi;jmp  <PsIsThreadImpersonating+>;movl $, %eax;popl %edi;popl %ebx": 2,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;jl  <PsIsThreadImpersonating+>;pushl -(%ebp)": 1,
                "pushl $;pushl $;calll - <_CIsqrt+>;pushl $;pushl $": 1,
                "calll - <KeCancelTimer>;movl %esi, %ecx;popl %esi;jmpl *;nop": 1,
                "movl %esp, %ebp;pushl %ecx;cmpl $, (%ebp);pushl %esi;jne  <PsIsThreadImpersonating+>": 1,
                "calll *;movl -(%ebp), %eax;popl %esi;leave;retl $": 1,
                "cmpl %ecx, %eax;jb  <PsIsThreadImpersonating+>;cmpl , %eax;jbe  <PsIsThreadImpersonating+>;calll  <ExRaiseAccessViolation>": 1,
                "jne  <PsIsThreadImpersonating+>;movl %eax, %ebx;movl -(%esi), %eax;pushl $;leal -(%ebp), %ecx": 1,
                "cmpl %edx, %ebx;je  <PsIsThreadImpersonating+>;leal (%edx), %eax;leal (%ebx), %ecx;movl (%ecx), %esi": 1,
                "je  <PsIsThreadImpersonating+>;leal (%edx), %eax;leal (%ebx), %ecx;movl (%ecx), %esi;movl %ecx, (%eax)": 1,
                "addl $, %edi;movl -(%ebp), %eax;cmpl (%ebp), %eax;jae  <PsIsThreadImpersonating+>;jmp - <PsIsThreadImpersonating+>": 1,
                "movl -(%ebp), %eax;cmpl (%ebp), %eax;jae  <PsIsThreadImpersonating+>;jmp - <PsIsThreadImpersonating+>;jmp  <PsIsThreadImpersonating+>": 1,
                "calll - <ObfDereferenceObject>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esi);jmp  <PsIsThreadImpersonating+>;nop;nop": 1,
                "testl %ebx, %ebx;je  <PsIsThreadImpersonating+>;pushl %edi;leal (%ebx), %edi;testb $, (%edi)": 1,
                "movl %eax, -(%ebp);jl  <PsIsThreadImpersonating+>;decl (%esi);pushl %ebx;movl (%ebp), %ebx": 1,
                "calll - <ObfDereferenceObject>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 2,
                "pushl ;calll - <IoUnregisterFileSystem>;pushl ;calll - <IoUnregisterFileSystem>;pushl ": 2,
                "calll - <KeReleaseMutex>;cmpl %edi, %esi;jl  <PsIsThreadImpersonating+>;cmpl $, (%ebp);jne  <PsIsThreadImpersonating+>": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;xorl %ebx, %ebx": 1,
                "pushl %edi;pushl $;calll - <IoBuildDeviceIoControlRequest>;cmpl %ebx, %eax;jne  <PsIsThreadImpersonating+>": 1,
                "jne  <PsIsThreadImpersonating+>;movl $, %eax;jmp  <PsIsThreadImpersonating+>;movl %eax, %edx;movl %edi, %ecx": 1,
                "movl $, %eax;jmp  <PsIsThreadImpersonating+>;movl %eax, %edx;movl %edi, %ecx;calll - <IofCallDriver>": 1,
                "jge  <PsIsThreadImpersonating+>;movl (%ebp), %ecx;movl %ebx, (%ecx);jmp  <PsIsThreadImpersonating+>;movl (%edi), %eax": 1,
                "calll - <IoBuildDeviceIoControlRequest>;cmpl %ebx, %eax;je - <PsIsThreadImpersonating+>;movl %eax, %edx;movl %edi, %ecx": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;cmpl %ebx, %eax;setge %cl": 1,
                "pushl -(%ebp);calll - <RtlExtendedLargeIntegerDivide>;jmp  <PsIsThreadImpersonating+>;movl -(%ebp), %eax;imull -(%ebp), %eax": 1,
                "jmp  <PsIsThreadImpersonating+>;movl -(%ebp), %eax;imull -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl %edx, (%esi);addl $-, (%eax);xorl %eax, %eax;popl %edi;popl %esi": 1,
                "jmp  <PsIsThreadImpersonating+>;movl (%ebp), %edx;pushl %edi;xorl %eax, %eax;movl %edx, %edi": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi;movl %eax, (%ebp);movl (%ebx), %eax": 1,
                "jmp  <PsIsThreadImpersonating+>;movl $, %esi;movb $, %dl;movl %ebx, %ecx;movl %esi, (%ebx)": 1,
                "movl $, %esi;movb $, %dl;movl %ebx, %ecx;movl %esi, (%ebx);calll - <IofCompleteRequest>": 1,
                "movl $, -(%ebp);je  <LdrEnumResources+>;cmpl $, (%ebp);jbe  <LdrEnumResources+>;movl (%ebp), %eax": 2,
                "movl (%ebx), %eax;movl $, %edx;testl %eax, %edx;je  <LdrEnumResources+>;movl (%ebx), %ecx": 1,
                "movl (%ebx), %ecx;testl %ecx, %edx;je  <LdrEnumResources+>;movl $, %ebx;andl %ebx, %ecx": 1,
                "addl %esi, %eax;movzwl (%eax), %edi;leal (%eax), %edx;movzwl (%eax), %eax;addl %eax, %edi": 1,
                "movzwl (%eax), %edi;leal (%eax), %edx;movzwl (%eax), %eax;addl %eax, %edi;movl %ecx, -(%ebp)": 1,
                "movl %edx, (%eax);movl -(%ebp), %edx;movl %edx, (%eax);movl (%ecx), %edx;addl (%ebp), %edx": 1,
                "jb - <LdrEnumResources+>;movl -(%ebp), %edi;movl -(%ebp), %edx;movl $, %ebx;incl -(%ebp)": 1,
                "addl $, %edx;cmpl %edi, -(%ebp);movl %edx, -(%ebp);jb - <LdrEnumResources+>;movl -(%ebp), %ebx": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;popl %ebx;popl %edi;popl %esi": 1,
                "movl $, %eax;jmp - <LdrEnumResources+>;int;int;int": 1,
                "shll %eax;movl %edi, (%ebp);movw (%eax,%esi), %di;testw %di, %di;je  <RtlCustomCPToUnicodeN+>": 1,
                "cmpl $, (%ebp);je  <RtlCustomCPToUnicodeN+>;incl %edx;movzbl (%edx), %eax;movzwl %di, %edi": 1,
                "je  <RtlCustomCPToUnicodeN+>;subl (%ebp), %ecx;movl %ecx, (%eax);cmpl (%ebp), %edi;popl %edi": 1,
                "popl %ebp;retl $;int $;pushl %ebp;addb %al, %bl": 1,
                "pushl %ebp;addb %ch, -(%edi);pushl %ebp;addb %ah, -(%ebx);pushl %ebp": 1,
                "pushfl;pushl %ebp;addb %bl, (%ebx);pushfl;pushl %ebp": 1,
                "cmpw $, (%eax);pushl %esi;pushl %edi;movl %edx, (%ebp);jne  <RtlUnicodeToCustomCPN+>": 1,
                "addl $-, %ecx;addl $-, %eax;pushl %ebx;cmpl $, %edi;ja  <RtlUnicodeToCustomCPN+>": 1,
                "cmpl $, %edi;ja  <RtlUnicodeToCustomCPN+>;jmpl *(,%edi,);movzwl (%eax), %ebx;movb (%ebx,%esi), %bl": 1,
                "sahf;pushl %ebp;addb %bh, -(%ebx);pushl %ebp;addb %dh, -(%ecx)": 1,
                "pushl %esi;movl (%ebp), %esi;shrl %eax;cmpw $, (%esi);pushl %edi": 1,
                "andl $, %edx;addl %edx, (%ebp);movl %edx, (%ebp);leal (%ecx,%edx,), %ecx;cmpl $, %edx": 1,
                "movl (%ebp), %edi;movb %dl, -(%edi);movl (%ebp), %edx;subl %edx, (%ebp);pushl $": 1,
                "movl %ebx, (%ebp);movl %edi, -(%ebp);je  <RtlUpcaseUnicodeToCustomCPN+>;cmpl $, (%ebp);je  <RtlUpcaseUnicodeToCustomCPN+>": 1,
                "cmpl $, (%ebp);je  <RtlUpcaseUnicodeToCustomCPN+>;movl (%ebp), %eax;movzwl (%eax), %eax;movw (%edi,%eax,), %ax": 1,
                "shrl $, %ebx;andl $, %ebx;addl %ebx, %edi;movzwl (%eax,%edi,), %edi;movl (%ebp), %ebx": 1,
                "decl (%ebp);decl -(%ebp);movb %al, (%ecx);jne - <RtlUpcaseUnicodeToCustomCPN+>;movl (%ebp), %ecx": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;cmpl %eax, (%ebp);popl %edi;sbbl %eax, %eax": 1,
                "movl %eax, (%eax);popl %ebp;retl $;int;int": 1,
                "leal (%esi), %ecx;cmpl %eax, %ecx;je  <PfxRemovePrefix+>;movl (%esi), %ecx;addl $-, %eax": 1,
                "movl (%esi), %ecx;addl $-, %eax;jmp  <PfxRemovePrefix+>;movl (%ecx), %ecx;cmpl %esi, (%ecx)": 1,
                "addl $-, %eax;jmp  <PfxRemovePrefix+>;movl (%ecx), %ecx;cmpl %esi, (%ecx);jne - <PfxRemovePrefix+>": 1,
                "movzbl %cl, %eax;cmpw $, (%ebx,%eax,);je  <PfxRemovePrefix+>;incl %esi;incl %esi": 1,
                "cmpb $, (%edi,%ecx);jne  <PfxRemovePrefix+>;incl (%ebp);incl %ecx;cmpl %edx, %ecx": 1,
                "movl %edx, -(%ebp);jne  <PfxRemovePrefix+>;movl (%esi), %eax;cmpb $, (%eax);jne  <PfxRemovePrefix+>": 1,
                "cmpl (%ebp), %eax;jae  <PfxRemovePrefix+>;movl (%esi), %ecx;movb (%ecx,%eax), %dl;movl (%edi), %esi": 1,
                "jae  <PfxRemovePrefix+>;movl (%esi), %ecx;movb (%ecx,%eax), %dl;movl (%edi), %esi;cmpb $, %dl": 1,
                "movb (%ecx,%eax), %dl;movl (%edi), %esi;cmpb $, %dl;sete %bl;decb %bl": 1,
                "xorl %eax, %eax;jmp  <PfxRemovePrefix+>;jbe  <PfxRemovePrefix+>;pushl $;popl %eax": 1,
                "jmp  <PfxRemovePrefix+>;jbe  <PfxRemovePrefix+>;pushl $;popl %eax;jmp  <PfxRemovePrefix+>": 1,
                "jbe  <PfxRemovePrefix+>;pushl $;popl %eax;jmp  <PfxRemovePrefix+>;movl -(%ebp), %ebx": 1,
                "cmpb $, (%ebp);pushl %esi;movl (%ebp), %esi;jne  <RtlNextUnicodePrefix+>;movl (%esi), %eax": 1,
                "xorl %eax, %eax;jmp  <RtlNextUnicodePrefix+>;addl $, %eax;jmp  <RtlNextUnicodePrefix+>;movl %ecx, %eax": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <RtlNextUnicodePrefix+>;jmp - <RtlNextUnicodePrefix+>;jmp  <RtlNextUnicodePrefix+>": 1,
                "je  <RtlNextUnicodePrefix+>;jmp - <RtlNextUnicodePrefix+>;jmp  <RtlNextUnicodePrefix+>;movl (%esi), %eax;cmpw $, (%eax)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;pushl %esi;calll - <PfxRemovePrefix+>": 1,
                "movl %edi, (%ebp);pushl (%edi);jmp  <PfxInsertPrefix+>;cmpl $, %eax;movl (%ebp), %eax": 1,
                "addl $-, %ecx;movl %ecx, %eax;pushl (%eax);movl %ecx, (%ebp);calll - <PfxRemovePrefix+>": 1,
                "movl (%ebp), %ecx;movl (%ecx), %esi;movl %ecx, (%ebp);jmp  <PfxFindPrefix+>;movl %esi, (%ebp)": 1,
                "movl (%ecx), %esi;movl %ecx, (%ebp);jmp  <PfxFindPrefix+>;movl %esi, (%ebp);movl (%esi), %esi": 1,
                "movl (%ebx), %ebx;jmp  <PfxFindPrefix+>;testl %eax, %eax;jne  <PfxFindPrefix+>;movl (%ebx), %ebx": 1,
                "jne - <PfxFindPrefix+>;movl %esi, (%ebp);movl (%esi), %esi;cmpw $, (%esi);jg - <PfxFindPrefix+>": 1,
                "jg - <PfxFindPrefix+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "jmp - <PfxFindPrefix+>;nop;int;int;int": 1,
                "decl %ecx;je  <RtlSelfRelativeToAbsoluteSD+>;movl $, %eax;jmp  <RtlSelfRelativeToAbsoluteSD+>;cmpl $, (%ebp)": 1,
                "calll - <FsRtlNotifyCleanup+>;testb %al, %al;je  <RtlSelfRelativeToAbsoluteSD+>;movzwl (%esi), %ecx;movl (%ebp), %eax": 1,
                "testb %al, %al;je  <RtlSelfRelativeToAbsoluteSD+>;movzwl (%esi), %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;jne  <RtlSelfRelativeToAbsoluteSD+>;movzwl (%esi), %ecx;andl $, (%eax)": 1,
                "jmp  <RtlSelfRelativeToAbsoluteSD+>;subl %esi, %ecx;movl %ecx, (%eax);movzwl (%esi), %edx;subl %ecx, %edx": 1,
                "orl $, %eax;pushl $;pushl (%ebp);pushl (%ebp);pushl %eax": 1,
                "pushl $;pushl (%eax);calll - <ExRundownCompleted+>;popl %ebp;retl $": 1,
                "andl $, (%ebx);pushl %ebx;calll - <RtlUpcaseUnicodeString+>;pushl %ebx;calll - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "stosl %eax, %es:(%edi);pushl %ebx;calll - <SeFreePrivileges>;jmp  <RtlDestroyAtomTable+>;nop": 1,
                "calll - <SeFreePrivileges>;jmp  <RtlDestroyAtomTable+>;nop;nop;nop": 1,
                "pushl %ebx;calll - <RtlUpcaseUnicodeString+>;testb %al, %al;jne  <RtlEmptyAtomTable+>;movl $, %eax": 1,
                "movl (%edi), %esi;movl %esi, -(%ebp);testl %esi, %esi;je  <RtlEmptyAtomTable+>;cmpb $, (%ebp)": 1,
                "calll - <RtlUpcaseUnicodeString+>;jmp  <RtlEmptyAtomTable+>;nop;nop;nop": 1,
                "movl %esi, -(%ebp);pushl %esi;calll - <RtlUpcaseUnicodeString+>;testb %al, %al;jne  <RtlEmptyAtomTable+>": 1,
                "movl %edx, -(%ebp);xorl %ecx, %ecx;movl %ecx, -(%ebp);movl %edx, -(%ebp);cmpl (%esi), %edx": 1,
                "movl (%ebp), %ebx;movw %di, (%ebx,%ecx,);jmp  <RtlEmptyAtomTable+>;movl $, -(%ebp);incl %ecx": 1,
                "pushl (%ebp);calll - <RtlAddRange+>;movl (%edi), %esi;subl $, %esi;leal (%esi), %edi": 1,
                "subl $, %esi;leal (%esi), %edi;cmpl %edi, %ebx;movl %eax, (%ebp);jne - <RtlMergeRangeLists+>": 1,
                "cmpl %edi, %ebx;movl %eax, (%ebp);jne - <RtlMergeRangeLists+>;movl (%ebp), %edi;movl (%ebp), %eax": 1,
                "movl (%eax), %ecx;addl %ecx, (%edi);movl (%eax), %eax;addl %eax, (%edi);movl (%ebp), %eax": 1,
                "jb  <RtlDeleteRange+>;cmpl (%ecx), %edi;ja  <RtlDeleteRange+>;jb  <RtlDeleteRange+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;cmpl (%ecx), %eax;ja  <RtlDeleteRange+>;leal (%ecx), %eax;movl (%eax), %edx": 1,
                "movl (%ebp), %edx;pushl %ebx;pushl %esi;movl (%edx), %esi;subl $, %esi": 1,
                "movl (%edx), %esi;subl $, %esi;pushl %edi;leal (%esi), %edi;xorl %ebx, %ebx": 1,
                "pushl $;pushl $;addl $-, %edx;adcl $-, %ebx;pushl %ebx": 1,
                "jb  <RtlInvertRangeList+>;ja  <RtlInvertRangeList+>;cmpl %esi, %ecx;jbe  <RtlInvertRangeList+>;pushl %ebx": 1,
                "je  <RtlZeroHeap+>;movl (%edi), %ebx;movl %ebx, -(%ebp);movl (%edi), %esi;movl %esi, -(%ebp)": 1,
                "leal (%esi,%eax,), %eax;movl %eax, -(%ebp);testl %ebx, %ebx;jne  <RtlZeroHeap+>;movl (%edi), %esi": 1,
                "calll - <ZwFreeVirtualMemory>;jmp  <RtlZeroHeap+>;xorl %eax, %eax;leave;retl $": 1,
                "jmp  <RtlZeroHeap+>;xorl %eax, %eax;leave;retl $;int": 1,
                "movl (%esi), %esi;andl $, (%ebp);pushl $-;calll - <ZwFreeVirtualMemory>;testl %esi, %esi": 1,
                "pushl %eax;calll - <RtlZeroHeap+>;decl %esi;jne - <RtlDestroyHeap+>;popl %esi": 1,
                "calll - <RtlZeroHeap+>;decl %esi;jne - <RtlDestroyHeap+>;popl %esi;popl %ebx": 1,
                "outsb (%si), %dx;outsl (%esi), %dx;jb  <RtlSizeHeap+>;outsb (%esi), %dx;andb %dl, (%bp,%si)": 1,
                "outsb (%esi), %dx;andb %dl, (%bp,%si);insb %dx, %es:(%edi);incl %esp;jae  <RtlSizeHeap+>": 1,
                "jne  <RtlSizeHeap+>;xorl %ecx, %ecx;incl %ecx;movl (%esi), %eax;addl %ecx, %eax": 1,
                "movl (%eax), %edi;cmpl %eax, %edi;je  <RtlSizeHeap+>;addl $-, %edi;movl %edi, -(%ebp)": 1,
                "movzwl (%edi), %ecx;leal -(,%ecx,), %ecx;movl %ecx, -(%ebp);testb $, %al;je  <RtlSizeHeap+>": 2,
                "movl %eax, -(%ebp);movb %al, (%edi);movl -(%ebp), %esi;leal (%esi), %eax;movl %eax, %edi": 1,
                "movsbl (%edx), %eax;jmp  <RtlSizeHeap+>;movzbl %ah, %eax;movsbl (%eax), %eax;addl $, %eax": 3,
                "testl %eax, %eax;jne - <RtlSizeHeap+>;jmp  <RtlSizeHeap+>;jmp - <RtlSizeHeap+>;shrl $, %eax": 3,
                "incl %edx;shll %cl, %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;leal (%eax,%ecx), %eax": 2,
                "je  <RtlSizeHeap+>;movzwl (%edi), %esi;leal -(,%esi,), %esi;movl %esi, -(%ebp);testb $, %al": 1,
                "leal -(,%esi,), %esi;movl %esi, -(%ebp);testb $, %al;je  <RtlSizeHeap+>;cmpl $, %esi": 1,
                "movb %al, (%edi);movzwl (%edi), %ebx;movl -(%ebp), %eax;subl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "je  <RtlSizeHeap+>;cmpl $, %ebx;jne  <RtlSizeHeap+>;xorl %eax, %eax;movw (%edi), %ax": 1,
                "testb $, %cl;je  <RtlSizeHeap+>;movb (%esi), %al;andb $-, %al;movb %al, (%esi)": 1,
                "je  <RtlSizeHeap+>;movb (%esi), %al;andb $-, %al;movb %al, (%esi);movl -(%ebp), %edx": 1,
                "movb %al, (%esi);movl -(%ebp), %edx;testb $, (%edx);je  <RtlSizeHeap+>;pushl $": 2,
                "leal (%esi), %eax;pushl %eax;calll - <RtlFillMemoryUlong>;movb (%esi), %al;orb $, %al": 3,
                "jne  <RtlSizeHeap+>;movzwl (%esi), %ecx;movl %ecx, %eax;shrl $, %eax;movl %eax, -(%ebp)": 2,
                "leal (%edx), %edi;movl %edi, -(%ebp);xorl %ecx, %ecx;cmpl %ecx, (%edx);jne  <RtlSizeHeap+>": 2,
                "movl %ecx, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp);movl (%ecx), %edi;movl %edi, -(%ebp)": 2,
                "movw %bx, (%esi);testb $, (%esi);jne  <RtlSizeHeap+>;movw %bx, (%esi,%ebx,);movb (%esi), %cl": 1,
                "movl (%edx), %edx;jmp - <RtlSizeHeap+>;movl %edx, -(%ebp);leal (%esi), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, (%edx);addl %ebx, (%eax);jmp  <RtlSizeHeap+>;pushl %ebx;pushl %esi": 1,
                "movb (%esi), %al;orb $, %al;movb %al, (%esi);jmp - <RtlSizeHeap+>;movl -(%ebp), %ecx": 1,
                "movl %edi, -(%ebp);xorl %eax, %eax;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);jmp  <RtlSizeHeap+>": 1,
                "testb $, (%esi);je  <RtlSizeHeap+>;movl %edi, -(%ebp);addl $, %eax;movl %eax, -(%ebp)": 1,
                "je  <RtlSizeHeap+>;movl %edi, -(%ebp);addl $, %eax;movl %eax, -(%ebp);pushl $": 1,
                "addl $, %eax;movl %eax, -(%ebp);pushl $;pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movw %ax, (%ecx);movb -(%ebp), %al;orb $, %al;movl -(%ebp), %ecx": 1,
                "calll  <RtlSizeHeap+>;movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $;nop": 1,
                "imull $, %fs:(%esi), %esp;je  <RtlSizeHeap+>;andl $, %eax;je  <RtlSizeHeap+>;jb  <RtlSizeHeap+>": 3,
                "imull $, (%eax), %esi;jb  <RtlSizeHeap+>;orb %fs:(%eax), %al;addb %al, (%eax);decl %eax": 2,
                "movl %eax, (%ecx);movl %eax, (%edx);movl -(%ebp), %ecx;movl -(%ebp), %eax;addl %ecx, (%eax)": 1,
                "movzwl %ax, %eax;addl $, %eax;jmp  <RtlDowncaseUnicodeString+>;movl (%esi), %eax;movzwl (%eax,%ecx,), %ecx": 1,
                "cmpw $, %dx;jae  <RtlDowncaseUnicodeString+>;movzwl %dx, %eax;jmp  <RtlDowncaseUnicodeString+>;cmpw $, %dx": 1,
                "movzwl %dx, %eax;addl $, %eax;jmp  <RtlDowncaseUnicodeString+>;movl , %eax;pushl %esi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;xorl %edi, %edi;cmpl %edi, %eax": 1,
                "pushl %esi;pushl %edi;calll - <vDbgPrintEx+>;cmpl %edi, %eax;jl  <RtlxOemStringToUnicodeSize+>": 1,
                "jmp - <RtlxOemStringToUnicodeSize+>;testw %ax, %ax;je - <RtlxOemStringToUnicodeSize+>;movl %ebx, -(%ebp);andl $, -(%ebp)": 2,
                "je - <RtlxOemStringToUnicodeSize+>;jmp - <RtlxOemStringToUnicodeSize+>;jmp - <RtlxOemStringToUnicodeSize+>;cmpw $, %di;jne  <RtlxOemStringToUnicodeSize+>": 1,
                "addl $, %eax;testw %ax, %ax;leal (%esi,%ecx,), %esi;je - <RtlxOemStringToUnicodeSize+>;jmp - <RtlxOemStringToUnicodeSize+>": 3,
                "je  <RtlxOemStringToUnicodeSize+>;testw %di, %di;jbe  <RtlxOemStringToUnicodeSize+>;movzwl -(%ebp), %ebx;cmpw (%edx,%ebx,), %cx": 1,
                "movl %eax, %ecx;movl -(%ebp), %eax;subl %ecx, %eax;movl -(%ebp), %ecx;movw %ax, (%ecx)": 1,
                "xorl %eax, %eax;jmp  <RtlxOemStringToUnicodeSize+>;movl $, %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "xorl %ebx, %ebx;cmpb %bl, ;pushl %edi;movl (%ebp), %edi;je  <RtlUpcaseUnicodeStringToAnsiString+>": 1,
                "je  <RtlUpcaseUnicodeStringToAnsiString+>;pushl %edi;calll - <RtlxUnicodeStringToOemSize>;jmp  <RtlUpcaseUnicodeStringToAnsiString+>;movzwl (%edi), %eax": 1,
                "jne  <RtlUpcaseUnicodeStringToAnsiString+>;movl $, %eax;jmp  <RtlUpcaseUnicodeStringToAnsiString+>;cmpw (%esi), %cx;jb  <RtlUpcaseUnicodeStringToAnsiString+>": 1,
                "movzwl (%edi), %eax;leal (%eax,%eax), %eax;addl $-, %eax;cmpl %ebx, %eax;jne  <RtlOemStringToCountedUnicodeString+>": 1,
                "leal (%eax,%eax), %eax;addl $-, %eax;cmpl %ebx, %eax;jne  <RtlOemStringToCountedUnicodeString+>;movl (%ebp), %eax": 1,
                "movl %edi, %eax;jmp  <RtlOemStringToCountedUnicodeString+>;xorl %eax, %eax;popl %esi;popl %edi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;jne  <RtlUpcaseUnicodeStringToCountedOemString+>;movl (%ebp), %eax;movw %bx, (%eax)": 1,
                "cmpl %ebx, %eax;movl %eax, (%esi);jne  <RtlUpcaseUnicodeStringToCountedOemString+>;movl $, %eax;jmp  <RtlUpcaseUnicodeStringToCountedOemString+>": 1,
                "testl %ebx, %ebx;jl  <RtlUpcaseUnicodeStringToCountedOemString+>;pushl %edi;pushl %esi;calll - <ProbeForRead+>": 1,
                "je  <RtlUpcaseUnicodeStringToCountedOemString+>;pushl (%esi);calll *;andl $, (%esi);movl %ebx, %eax": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%eax), %esi": 1,
                "movb (%edi), %cl;incl %esi;incl %edi;cmpb %cl, %al;jne  <RtlCompareString+>": 1,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <RtlAppendAsciizToString+>": 1,
                "movl (%eax), %edx;movl (%ebp), %ecx;cmpl (%ecx), %edx;jne  <RtlEqualLuid+>;movl (%eax), %eax": 1,
                "testl %eax, %eax;pushl %edi;leal (%esi), %edi;leal (,%edx,), %edx;jbe  <RtlEqualLuid+>": 1,
                "movl $, %ecx;subl %eax, %ecx;leal (%edx,%ecx,), %eax;addl %eax, %ebx;xorl %eax, %eax": 1,
                "addl %eax, %edi;decl -(%ebp);jne - <RtlEqualLuid+>;movzwl %bx, %ebx;pushl $": 1,
                "pushl $;pushl %ebx;movb $, (%eax);pushl (%edi);calll - <RtlCreateAcl>": 1,
                "shlb $, %al;leal (,%ecx,), %ecx;movzbl %al, %eax;addl %eax, %edx;movl %ecx, %eax": 1,
                "movb (%eax), %al;movzbl %al, %ecx;leal (%edx,%ecx,), %edx;movl (%ebp), %ecx;movzbw (%ecx), %cx": 1,
                "leal (%edx,%ecx,), %edx;movl (%ebp), %ecx;movzbw (%ecx), %cx;movzbw %al, %ax;addl %eax, %ecx": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;movl (%edi), %eax;movw (%esi), %cx;movw %cx, (%eax)": 1,
                "jbe  <RtlEqualLuid+>;movl (%ebp), %edx;movl (%edx,%eax,), %edi;movl (%ebp), %esi;pushl $": 1,
                "je  <RtlEqualLuid+>;incl %eax;cmpl (%ebp), %eax;jb - <RtlEqualLuid+>;xorb %al, %al": 1,
                "pushl %edi;pushl $;popl %edi;pushl %edi;pushl (%eax)": 1,
                "movl $, (%ecx);movl $, %esi;je  <RtlEqualLuid+>;movl (%ebp), %eax;cmpl %ebx, %eax": 1,
                "jmp  <RtlEqualLuid+>;testl %eax, (%ebp);movl (%ebp), %eax;je  <RtlEqualLuid+>;cmpl %ebx, %eax": 1,
                "je  <RtlEqualLuid+>;cmpl %ebx, %eax;je  <RtlEqualLuid+>;movzbl (%eax), %ecx;cmpl %edi, %ecx": 1,
                "cmpl %ebx, %eax;movb (%ebp), %cl;movb %cl, -(%ebp);je  <RtlEqualLuid+>;movzbl (%eax), %ecx": 1,
                "cmpl %ebx, %eax;jne  <RtlEqualLuid+>;cmpb %bl, -(%ebp);je  <RtlEqualLuid+>;movl (%ebp), %eax": 1,
                "cmpb %bl, -(%ebp);je  <RtlEqualLuid+>;movl (%ebp), %eax;movl %ebx, (%eax);jmp  <RtlEqualLuid+>": 1,
                "movb -(%ebp), %cl;movb %cl, (%eax);xorl %eax, %eax;popl %edi;popl %esi": 1,
                "pushl %edi;sbbl %ecx, %ecx;leal (%edx), %edi;movl %eax, -(%ebp);andl %edi, %ecx": 1,
                "movl (%ecx), %edi;cmpl (%eax), %edi;jne - <RtlEqualLuid+>;movl (%ecx), %ecx;cmpl (%eax), %ecx": 1,
                "orl %eax, %ecx;cmpb $, %cl;jne - <RtlEqualLuid+>;xorl %edx, %edx;cmpl %edx, -(%ebp)": 1,
                "cmpl %edx, -(%ebp);je - <RtlEqualLuid+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);calll - <RtlInitializeSid>": 1,
                "calll - <RtlInitializeSid>;testl %eax, %eax;jl - <RtlEqualLuid+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpb $, %al;jne  <RtlCharToInteger+>;pushl $;popl %edi;pushl $": 2,
                "testl %ecx, %ecx;jne  <RtlCharToInteger+>;imull %edi, %edx;addl %eax, %edx;jmp  <RtlCharToInteger+>": 1,
                "imull %edi, %edx;addl %eax, %edx;jmp  <RtlCharToInteger+>;shll %cl, %edx;orl %eax, %edx": 1,
                "je  <RtlCharToInteger+>;pushl $;popl %ecx;subl %edi, %ecx;pushl $": 2,
                "movl %eax, -(%ebp);pushl $;popl %eax;xorl %edx, %edx;divl %edi": 2,
                "sarl %cl, %edx;movl %ebx, %eax;andl -(%ebp), %eax;movl %edx, %esi;andl -(%ebp), %esi": 1,
                "pushl $;popl %edx;sarl %cl, %edx;movl %edx, -(%ebp);jmp  <RtlCharToInteger+>": 1,
                "andl -(%ebp), %eax;andl -(%ebp), %edx;movl -(%ebp), %ecx;shll %cl, %edx;movl -(%ebp), %ecx": 1,
                "decl %esi;movw (,%eax,), %ax;movw %ax, (%esi);movl -(%ebp), %eax;orl %ebx, %eax": 1,
                "cmpl %ebx, %eax;jne - <RtlCharToInteger+>;leal -(%ebp), %eax;subl %esi, %eax;sarl %eax": 1,
                "sarl %eax;cmpl %ebx, (%ebp);jge  <RtlCharToInteger+>;negl (%ebp);cmpl (%ebp), %eax": 1,
                "jge  <RtlCharToInteger+>;negl (%ebp);cmpl (%ebp), %eax;jge  <RtlCharToInteger+>;movl (%ebp), %ecx": 1,
                "cmpw $, (%esi);jne  <RtlIntToUnicodeString+>;xorl %eax, %eax;leal -(%ebx), %ecx;cmpl %edx, %ecx": 1,
                "movw %ax, -(%ebp);je - <RtlIntToUnicodeString+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movw (%ebp), %ax": 1,
                "je - <RtlIntToUnicodeString+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movw (%ebp), %ax;movw %ax, -(%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;pushl $;pushl %edi;pushl $": 1,
                "pushl $;pushl %edi;pushl $;pushl $;pushl -(%ebp)": 1,
                "testl %ebx, %ebx;jl  <RtlSetTimeZoneInformation+>;pushl $;leal (%edi), %eax;pushl %eax": 3,
                "movl %esp, %ebp;xorl %eax, %eax;movb (%ebp), %al;andl $, %eax;je  <RtlDecompressBuffer+>": 1,
                "xorl %eax, %eax;movb (%ebp), %al;andl $, %eax;je  <RtlDecompressFragment+>;cmpw $, %ax": 1,
                "movl $, %eax;jmp  <RtlDecompressFragment+>;pushl (%ebp);movzwl %ax, %eax;pushl (%ebp)": 1,
                "jmp  <RtlDecompressFragment+>;pushl (%ebp);movzwl %ax, %eax;pushl (%ebp);pushl (%ebp)": 1,
                "je  <RtlDescribeChunk+>;testb $-, %al;je  <RtlDescribeChunk+>;movl $, %eax;jmp  <RtlDescribeChunk+>": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;incl %edi;shll %cl, %edi": 1,
                "movl %eax, %ecx;movl (%ebp), %eax;subl %ebx, %eax;addl (%ebp), %ebx;andl $, %ecx": 1,
                "jmp  <RtlDecompressChunks+>;movl (%ebp), %esi;movl (%ebp), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "cmpl $, (%ebp);je  <RtlDecompressChunks+>;movl (%ebp), %eax;pushl %ebx;pushl (%ebp)": 1,
                "movl -(%ebp), %edi;jmp - <RtlDecompressChunks+>;movl $, %eax;jmp  <RtlDecompressChunks+>;xorl %eax, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;movl (%ebp), %ebx;movb (%ebx), %cl": 1,
                "subl %eax, %esi;andw $, (%ebx);leal (%ebx), %eax;movl %edi, -(%ebp);movl %esi, (%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi": 1,
                "cmpl $, %eax;jne  <RtlCompressChunks+>;andl $, -(%ebp);jmp  <RtlCompressChunks+>;testl %eax, %eax": 1,
                "jb  <RtlCompressChunks+>;movl (%ebp), %ecx;movl (%ebp), %esi;movl (%ebp), %edi;movl %ecx, %eax": 1,
                "addl %ecx, (%ebp);xorl %eax, %eax;incw (%ebx);subl %ecx, %esi;cmpl %eax, (%ebp)": 1,
                "calll - <RtlCompressChunks+>;movl %eax, %esi;testl %esi, %esi;jne  <RtlCompressChunks+>;movl $, %edi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);calll - <ZwQuerySecurityObject>;movl $, %esi;cmpl %esi, %eax;je  <RtlCompressChunks+>": 1,
                "leal -(%ebp), %ecx;addl $, %eax;pushl %ecx;pushl %eax;movl %eax, -(%ebp)": 1,
                "je  <RtlCompressChunks+>;movb (%eax), %cl;testb $, %cl;je  <RtlCompressChunks+>;testb $, %cl": 1,
                "movb (%eax), %cl;testb $, %cl;je  <RtlCompressChunks+>;testb $, %cl;je  <RtlCompressChunks+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <RtlSelfRelativeToAbsoluteSD>;cmpl %esi, %eax": 1,
                "testl %esi, %esi;jge  <RtlCompressChunks+>;pushl %ebx;jmp  <RtlCompressChunks+>;xorl %edi, %edi": 1,
                "pushl %ebx;movl %edi, -(%ebp);calll - <MmGetSystemRoutineAddress+>;cmpl %esi, %eax;jne - <RtlCompressChunks+>": 1,
                "pushl %esi;jge  <RtlCompressChunks+>;calll - <SeFreePrivileges>;movl %ebx, %eax;jmp  <RtlCompressChunks+>": 1,
                "jmp  <RtlCompressChunks+>;movl -(%ebp), %eax;pushl $;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl %esi;movl %eax, %edi;calll - <SeFreePrivileges>;movl %edi, %eax;movl -(%ebp), %ecx": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;movl (%ebp), %ebx": 3,
                "cmpl %esi, %edi;jge  <RtlCreateSystemVolumeInformationFolder+>;pushl -(%ebp);calll - <SeFreePrivileges>;movl %edi, %eax": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;pushl $;movl %eax, -(%ebp)": 1,
                "cmpl %esi, %ebx;jge  <RtlCreateSystemVolumeInformationFolder+>;leal -(%ebp), %eax;pushl %eax;calll - <RtlCaptureStackBackTrace+>": 1,
                "pushl -(%ebp);calll - <SeFreePrivileges>;cmpl %esi, %ebx;jge  <RtlCreateSystemVolumeInformationFolder+>;pushl -(%ebp)": 1,
                "calll - <SeFreePrivileges>;movl %ebx, %eax;jmp  <RtlCreateSystemVolumeInformationFolder+>;pushl (%ebp);calll - <SeFreePrivileges>": 1,
                "calll - <SeFreePrivileges>;pushl -(%ebp);pushl -(%ebp);calll - <RtlCompressChunks+>;pushl -(%ebp)": 1,
                "pushl %ebx;addb %bh, (%ecx);jae  <RtlCreateSystemVolumeInformationFolder+>;je  <RtlCreateSystemVolumeInformationFolder+>;addb %ch, %gs:(%ebp)": 1,
                "movl %edx, -(%ebp);jmp  <RtlIsValidOemCharacter+>;cmpw $, %dx;ja  <RtlIsValidOemCharacter+>;addl $-, %edx": 1,
                "movzbl %al, %eax;je  <RtlIsValidOemCharacter+>;movzwl %cx, %ecx;addl %eax, %ecx;movl , %eax": 1,
                "addl $, %eax;jmp - <RtlIsValidOemCharacter+>;movl , %eax;movzwl %dx, %ecx;movl %ecx, %edi": 1,
                "movzwl (%eax,%edi,), %edi;andl $, %ecx;addl %ecx, %edi;addw (%eax,%edi,), %dx;movzwl %dx, %eax": 1,
                "cmpw , %si;popl %edi;popl %esi;popl %ebx;jne  <RtlIsValidOemCharacter+>": 1,
                "jne  <RtlIsValidOemCharacter+>;xorb %al, %al;jmp  <RtlIsValidOemCharacter+>;movl (%ebp), %eax;movw %dx, (%eax)": 1,
                "pushl %esi;movl (%ebp), %esi;movl %eax, -(%ebp);movl (%ebp), %eax;cmpw $, (%eax)": 1,
                "cmpw $, (%eax);pushl %edi;movl (%ebp), %edi;movl %edi, -(%ebp);movb $, -(%ebp)": 1,
                "movl (%ebp), %edi;movl %edi, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);jbe  <RtlIsNameLegalDOSDot+>": 1,
                "addb %dl, (%ebx);jns  <RtlLockBootStatusData+>;jae  <RtlLockBootStatusData+>;je  <RtlLockBootStatusData+>;addb %ch, %gs:(%ebp)": 1,
                "addb %dh, (%eax,%eax);addb %dh, (%eax,%eax);addb %ah, (%eax,%eax);addb %dh, (%eax,%eax);addb %cl, %ah": 1,
                "pushl %eax;pushl (%ebp);movl %eax, -(%ebp);calll - <ZwFsControlFile>;leal -(%ebp), %eax": 1,
                "calll - <ZwClose>;leave;retl $;int;int": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwReadFile>;cmpl %ebx, %eax": 1,
                "jmp  <RtlGetSetBootStatusData+>;cmpl %eax, (%ebp);jae  <RtlGetSetBootStatusData+>;movl $, %eax;jmp  <RtlGetSetBootStatusData+>": 1,
                "movl $, %eax;jmp  <RtlGetSetBootStatusData+>;cmpb %bl, (%ebp);pushl %ebx;leal -(%ebp), %ecx": 1,
                "movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <RtlGetSetBootStatusData+>;movl -(%ebp), %edx;movl %edx, (%ecx)": 1,
                "movw -(%ebp), %dx;movw %dx, (%ecx);xorl %edx, %edx;divl %ebx;movw %di, (%ecx)": 1,
                "movw %ax, (%ecx);movw %dx, (%ecx);leave;retl $;nop": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);xorl %eax, %eax;popl %edi": 1,
                "stosl %eax, %es:(%edi);xorl %eax, %eax;popl %edi;leave;retl $": 1,
                "cmpb %al, (%ebp);pushl $;pushl (%ebp);sete %al;pushl %eax": 1,
                "xorl %ebx, %ebx;cmpw %bx, (%esi);pushl %edi;leal (%eax,%esi), %edi;jbe  <RtlTimeToElapsedTimeFields+>": 1,
                "pushl %edi;leal (%eax,%esi), %edi;jbe  <RtlTimeToElapsedTimeFields+>;pushl $;pushl (%ebp)": 1,
                "cmpl $, %eax;je  <RtlTimeToElapsedTimeFields+>;movzwl (%esi), %eax;addl $, %edi;incl %ebx": 1,
                "calll - <RtlTimeToElapsedTimeFields+>;movl %eax, %ecx;testl %ecx, %ecx;je  <RtlTimeToElapsedTimeFields+>;movl (%ecx), %eax": 1,
                "testl %ecx, %ecx;je  <RtlTimeToElapsedTimeFields+>;movl (%ecx), %eax;addl (%ebp), %eax;cmpl $, (%ecx)": 1,
                "movl (%ecx), %eax;addl (%ebp), %eax;cmpl $, (%ecx);jb  <RtlTimeToElapsedTimeFields+>;cmpl $, (%eax)": 1,
                "cmpl $, (%eax);je  <RtlTimeToElapsedTimeFields+>;xorl %eax, %eax;popl %ebp;retl $": 1,
                "je  <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %eax;cmpl (%eax), %edx;jae  <RtlTimeToElapsedTimeFields+>;addl %esi, %edx": 1,
                "movl %eax, %ecx;shrl $, %eax;shll $, %ecx;addl %ecx, %esi;movl %eax, (%ebp)": 1,
                "pushl %edx;movl %eax, %edx;xorl %ebx, %ebx;addl %edi, %edx;adcl %ebx, %ecx": 1,
                "addl %esi, %eax;addl %edi, (%eax);adcl %ebx, (%eax);movl -(%ebp), %ebx;addl $, -(%ebp)": 1,
                "addl $, -(%ebp);cmpl $, (%ebp);jne - <RtlTimeToElapsedTimeFields+>;cmpl $, -(%ebp);je  <RtlTimeToElapsedTimeFields+>": 1,
                "leal (%esi,%eax), %ecx;leal (%ecx,%ebx), %ecx;pushl %ecx;leal (%eax,%ebx), %ecx;pushl %ecx": 1,
                "pushl $;calll - <DbgPrintEx>;addl $, %esp;testl %ebx, %ebx;je - <RtlTimeToElapsedTimeFields+>": 1,
                "retl $;nop;addb %al, (%eax);addb %al, (%eax);subb %ch, (%esi)": 1,
                "xorb $, %al;andb %ch, ;xorl %esi, (%esi);decl %ecx;xorb $, %al": 1,
                "orl %esp, ;xorb $, %al;cmpb (%eax), %ah;pushl %eax;incl %ebx": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);decl %esi": 1,
                "movl (%eax), %ecx;movl (%ebp), %eax;cmpl %ecx, %eax;jae  <RtlTimeToElapsedTimeFields+>;leal (%eax,%edi), %edx": 1,
                "popal;jb  <RtlTimeToElapsedTimeFields+>;je  <RtlTimeToElapsedTimeFields+>;cmpl $, %eax;subb $, %al": 1,
                "jbe  <RtlTimeToElapsedTimeFields+>;movl %eax, (%ebp);cmpb $, (%ebp);je  <RtlTimeToElapsedTimeFields+>;movl (%ebp), %eax": 1,
                "insb %dx, %es:(%edi);imull $, (%ecx), %esp;popaw;imull $, (%ebp), %ebp;andb %ah, (%edi)": 1,
                "imull $, (%ecx), %esp;popal;jb  <RtlTimeToElapsedTimeFields+>;popal;jns  <RtlTimeToElapsedTimeFields+>": 1,
                "pushl %esi;movl (%ebx), %esi;addl %edi, %esi;pushl %esi;pushl %ebx": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %eax, %eax;movl $, %esi": 1,
                "jb  <RtlTimeToElapsedTimeFields+>;cmpb $-, (%esi);jne  <RtlTimeToElapsedTimeFields+>;pushl (%ebp);pushl %esi": 1,
                "testl %esi, %esi;jle  <RtlTimeToElapsedTimeFields+>;cmpl (%eax), %esi;jae  <RtlTimeToElapsedTimeFields+>;andl $, (%ebp)": 1,
                "movl %eax, (%edx);movl %eax, (%ebp);movl (%ebp), %eax;popl %esi;popl %ebx": 1,
                "retl $;decl %ecx;outsb (%esi), %dx;jbe  <RtlTimeToElapsedTimeFields+>;insb %dx, %es:(%edi)": 2,
                "je  <RtlTimeToElapsedTimeFields+>;orb %fs:(%eax), %al;int;int;int": 1,
                "pushl (%edi);movl %ebx, -(%ebp);movl %eax, -(%ebp);calll - <RtlImageNtHeader>;pushl (%edi)": 1,
                "jb  <RtlTimeToElapsedTimeFields+>;pushl $;jmp  <RtlTimeToElapsedTimeFields+>;movzwl (%esi), %ecx;movl (%edi), %ebx": 1,
                "jmp  <RtlTimeToElapsedTimeFields+>;movzwl (%esi), %ecx;movl (%edi), %ebx;movl (%edi), %eax;movl -(%ebp), %edx": 1,
                "movzwl (%esi), %ecx;movl (%edi), %ebx;movl (%edi), %eax;movl -(%ebp), %edx;addl -(%ebp), %ebx": 1,
                "movl (%edi), %ebx;movl (%edi), %eax;movl -(%ebp), %edx;addl -(%ebp), %ebx;addl %edx, %eax": 1,
                "popl %edi;subl %edi, %ecx;je  <RtlTimeToElapsedTimeFields+>;subl $, %ecx;je  <RtlTimeToElapsedTimeFields+>": 1,
                "je  <RtlTimeToElapsedTimeFields+>;pushl $;pushl $;pushl $;calll - <DbgPrintEx>": 1,
                "movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>;movl (%ebp), %ecx;pushl $;popl %edx": 1,
                "je  <RtlTimeToElapsedTimeFields+>;cmpl %edx, (%ebp);jb - <RtlTimeToElapsedTimeFields+>;movb $-, (%eax);movb (%esi), %dl": 1,
                "movb $-, (%eax);movb (%esi), %dl;incl %eax;movb %dl, (%eax);movl (%ecx), %ecx": 1,
                "je  <RtlTimeToElapsedTimeFields+>;jmp - <RtlTimeToElapsedTimeFields+>;jmp  <RtlTimeToElapsedTimeFields+>;xorl %ecx, %ecx;movb (%esi), %cl": 1,
                "pushl $;pushl $;calll - <DbgPrintEx>;xorl %edi, %edi;addl $, %esp": 1,
                "movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>;movl (%ebp), %edx;testl %edx, %edx;je  <RtlTimeToElapsedTimeFields+>": 1,
                "addb %cl, (%ecx);andl $, %eax;xorb $, %al;cmpb (%eax), %ah;pushl $": 1,
                "movl (%edi), %eax;pushl (%edi);movl (%eax), %esi;movl (%eax), %ebx;calll - <RtlImageNtHeader>": 1,
                "pushl $;pushl $;addl %esi, %edi;pushl $;movl %edi, -(%ebp)": 1,
                "leal -(%ebx), %esi;imull $, %esi, %esi;addl $, %esi;addl $, %esp;testl %ebx, %ebx": 1,
                "pushl %ecx;leal -(%ebp), %eax;pushl %eax;pushl %ecx;pushl %edi": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);leal (%edi), %ebx;jmp  <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %esi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;leal (%eax,%edi), %edx;pushl %edx;leal -(%ebp), %edx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;addl %edx, %eax;movl -(%ebp), %edx": 1,
                "je  <RtlTimeToElapsedTimeFields+>;pushl %eax;calll - <RtlTimeToElapsedTimeFields+>;movl %edi, (%esi);xorl %eax, %eax": 1,
                "calll - <RtlTimeToElapsedTimeFields+>;movl %edi, (%esi);xorl %eax, %eax;jmp  <RtlTimeToElapsedTimeFields+>;pushl %edi": 1,
                "pushl %eax;leal (%edi), %eax;pushl %eax;calll - <RtlEqualUnicodeString>;testb %al, %al": 1,
                "movl %esi, (%edi);movl (%esi), %eax;movl %eax, (%edi);movb $, %al;jmp  <RtlTimeToElapsedTimeFields+>": 1,
                "movl %eax, (%edi);movb $, %al;jmp  <RtlTimeToElapsedTimeFields+>;xorb %al, %al;popl %edi": 1,
                "pushl %ecx;pushl %esi;pushl $;pushl $;pushl $": 1,
                "testl %esi, %esi;jne  <RtlTimeToElapsedTimeFields+>;movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>;pushl %edi": 1,
                "movl %edx, (%esi);movl (%ebp), %edx;andl $-, %edx;movl %edx, (%esi);movl %esi, (%esi)": 1,
                "movl (%ecx), %ecx;addl (%eax), %ecx;leal -(%ebp), %eax;pushl %ecx;pushl %eax": 1,
                "movl (%ebp), %ebx;addl %ebx, %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx;addl %eax, %ecx": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;addl %eax, %ecx;testb $, %al;pushl %esi": 1,
                "testb $-, (%ebp);je  <RtlTimeToElapsedTimeFields+>;leal (%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);addl $, %edx;pushl %edx;pushl -(%ebp)": 1,
                "pushl -(%ebp);addl $, %edx;pushl %edx;pushl -(%ebp);pushl %ebx": 1,
                "cmpl (%ebp), %eax;ja  <RtlTimeToElapsedTimeFields+>;movl %ecx, %eax;shrl $, %ecx;leal (%edx), %esi": 1,
                "cmpl %ecx, (%ebp);jge  <RtlTimeToElapsedTimeFields+>;subl (%ebp), %ecx;leal (%ecx,%ebx), %esi;cmpl -(%ebp), %esi": 1,
                "movl %ecx, %ebx;shrl $, %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl %ebx, %ecx": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;addl %edx, %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "pushl -(%ebp);addl $, %eax;pushl %eax;pushl -(%ebp);pushl (%ebp)": 1,
                "pushl %eax;leal (%esi), %eax;pushl %eax;pushl %esi;calll - <IoCheckFunctionAccess+>": 1,
                "leal (%esi), %eax;pushl %eax;pushl %esi;calll - <IoCheckFunctionAccess+>;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;andl $, (%ebp);addl %eax, (%ebp);subl %eax, (%ebp);je  <RtlTimeToElapsedTimeFields+>": 1,
                "movl $, -(%ebp);ja  <RtlTimeToElapsedTimeFields+>;testb $, %dl;je  <RtlTimeToElapsedTimeFields+>;movb (%edx), %al": 1,
                "addl $, %edx;movl %edx, (%esi);addl %edx, (%ecx);movl (%ecx), %edx;cmpl %edi, %edx": 1,
                "incl %ecx;cmpl %eax, %edx;movl $, -(%ebp);ja  <RtlTimeToElapsedTimeFields+>;cmpl $, %edi": 1,
                "jne  <RtlTimeToElapsedTimeFields+>;leal (%edx,%ecx), %eax;cmpl (%ebp), %eax;movl $, (%ebp);ja  <RtlTimeToElapsedTimeFields+>": 1,
                "addl $, (%ebx);andl $, -(%ebp);movl (%ebp), %edi;addl %edi, (%esi);popl %ebx": 1,
                "movw $, (%eax);movl (%esi), %eax;testb $, %al;je  <RtlTimeToElapsedTimeFields+>;movb $-, (%eax)": 1,
                "pushl %ecx;movl (%ebp), %ecx;movl (%ecx), %edx;andl $, -(%ebp);pushl %ebx": 1,
                "movl %ecx, -(%ebp);andl $, -(%ebp);pushl (%eax);calll *-(%ebp);orl $-, -(%ebp)": 1,
                "movl -(%ebp), %esp;movl $, -(%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "nop;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;pushl (%eax)": 1,
                "je  <RtlTimeToElapsedTimeFields+>;movb $, %al;jmp  <RtlTimeToElapsedTimeFields+>;xorb %al, %al;cmpb $, (%ebp)": 1,
                "movl -(%ebp), %edx;pushl -(%ebp);movl %edx, (%eax,%ecx,);movl (%ebp), %ecx;movl (%ecx), %edx": 2,
                "movl (%esi), %eax;leal (%ebx,%eax), %eax;movl (%eax), %ecx;movl %ecx, %edx;andl $, %edx": 1,
                "movl -(%ebp), %eax;cmpl (%esi), %eax;jb - <RtlTimeToElapsedTimeFields+>;movl (%ebp), %eax;xorl %edx, %edx": 1,
                "je  <RtlTimeToElapsedTimeFields+>;movl (%ebp), %ecx;movb $, (%ecx);jmp  <RtlTimeToElapsedTimeFields+>;movl $, %eax": 1,
                "jmp  <RtlTimeToElapsedTimeFields+>;movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>;movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;leal (%ecx,%eax,), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx;cmpb $, (%ebp)": 1,
                "movl %esi, -(%ebp);movl (%ebp), %ebx;cmpb $, (%ebp);jne  <RtlTimeToElapsedTimeFields+>;cmpl %esi, %ebx": 1,
                "jmp  <RtlTimeToElapsedTimeFields+>;movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);testb %al, %al": 1,
                "pushl (%ebp);pushl %edi;calll - <ProbeForWrite>;movl (%ebp), %ecx;movl , %eax": 1,
                "orl $-, -(%ebp);xorl %eax, %eax;cmpl %esi, %edi;setne %al;leal (,%eax,), %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl (%ebp);pushl $;pushl %esi": 2,
                "pushl -(%ebp);pushl (%ebp);pushl $;pushl %esi;calll - <RtlTimeToElapsedTimeFields+>": 2,
                "calll - <ObfDereferenceObject>;cmpl $, -(%ebp);je  <RtlTimeToElapsedTimeFields+>;pushl $;pushl -(%ebp)": 5,
                "movl %ebx, %eax;jmp  <RtlTimeToElapsedTimeFields+>;nop;nop;nop": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <ObReferenceObjectByName+>;movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>": 1,
                "andl $-, %eax;jmp  <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %eax;movl $, -(%ebp);leal -(%ebp), %ecx": 1,
                "movl (%ebp), %eax;cmpl %esi, %eax;je  <SeFilterToken+>;movl (%eax), %ebx;addl $, %eax": 1,
                "je  <SeFilterToken+>;movl (%eax), %ecx;xorl %edi, %edi;cmpl %esi, %ecx;leal (%eax), %edx": 1,
                "cmpl %esi, %eax;jl  <SeFilterToken+>;movl (%ebp), %ecx;movl %edi, (%ecx);popl %edi": 1,
                "addl $, %eax;cmpl -(%eax), %edx;jne  <SeFilterToken+>;movl (%ecx), %edi;cmpl -(%eax), %edi": 1,
                "cmpl (%ebp), %esi;jb - <SeFilterToken+>;xorb %al, %al;popl %edi;popl %esi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;andl $, -(%ebp);orl $-, -(%ebp);andl $, -(%ebp)": 1,
                "movl -(%ebp), %esi;orl $-, -(%ebp);movl %esi, (%eax);movl -(%ebp), %esi;andl $, -(%ebp)": 1,
                "je  <SeFilterToken+>;decl %eax;jne  <SeFilterToken+>;movl (%ebp), %edi;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ebx;leal (%edi,%edi,), %eax;leal (%ebx,%eax,), %esi;movl (%esi), %eax;movl (%esi), %ecx": 2,
                "notl %eax;andl (%ebp), %eax;orl %ecx, %eax;movl %eax, (%esi);cmpl %eax, %ecx": 1,
                "movl (%ebp), %edi;movl (%ebp), %ebx;leal (%edi,%edi,), %eax;leal (%ebx,%eax,), %esi;movl (%esi), %ecx": 1,
                "leal (%ebx,%eax,), %ebx;movw -(%ebx), %ax;cmpw (%esi), %ax;jbe  <SeFilterToken+>;movl (%ebp), %eax": 1,
                "notl %eax;andl (%ebp), %eax;orl %eax, (%ebx);jmp  <SeFilterToken+>;movl (%ebp), %eax": 1,
                "incl %edi;addl $, %ebx;cmpl (%ebp), %edi;jb - <SeFilterToken+>;popl %edi": 1,
                "pushl (%ebp);xorl %ecx, %ecx;pushl (%ebp);testl %eax, %eax;pushl (%ebp)": 1,
                "pushl (%ebp);testl %eax, %eax;pushl (%ebp);setne %cl;negl %eax": 1,
                "testl %eax, %eax;pushl (%ebp);setne %cl;negl %eax;sbbl %eax, %eax": 1,
                "pushl $;sete %al;popl %edi;pushl $;popl %esi": 1,
                "testl %eax, %eax;je  <SeAssignSecurityEx+>;movzwl (%eax), %ecx;addl $, %ecx;movl $, -(%ebp)": 1,
                "pushl $;popl %eax;je  <SeAssignSecurityEx+>;movl (%ecx), %ecx;movl %eax, -(%ebp)": 1,
                "je  <SeAssignSecurityEx+>;movl %ecx, -(%ebp);movl (%eax), %ecx;movl (%eax), %eax;movl $, -(%ebp)": 1,
                "je  <SeAssignSecurityEx+>;movl %esi, %eax;jmp  <SeAssignSecurityEx+>;pushl %edi;pushl %esi": 1,
                "calll - <ExFreePoolWithTag>;xorl %eax, %eax;popl %edi;popl %esi;leave": 2,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %edx;pushl %edi;pushl $": 1,
                "movl $, -(%ebp);movw $, -(%ebp);movzbl (%edx), %ecx;leal (,%ecx,), %ecx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl (%ebp), %edx;movl %ecx, -(%ebp);movzwl , %ecx;movl %eax, -(%ebp)": 1,
                "addl $, %ecx;pushl $;movl %ecx, -(%ebp);popl %ecx;movl %eax, -(%ebp)": 1,
                "calll - <SeReleaseSubjectContext>;popl %edi;leave;retl $;int": 1,
                "addl $, %eax;pushl $;movl %eax, -(%ebp);popl %eax;movl %eax, -(%ebp)": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl %fs:, %eax": 2,
                "movl (%eax), %esi;movl (%esi), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal (%ebp), %ecx;pushl %ecx;pushl %eax;calll - <PsSetProcessWindowStation+>;testl %eax, %eax": 2,
                "calll  <SeTokenIsAdmin+>;leal -(%ebp), %eax;cmpl %eax, %esi;popl %ebx;je  <SeAssignSecurityEx+>": 1,
                "movzbl (%esi), %edx;movl %ecx, -(%ebp);movzwl , %ecx;addl %eax, %ecx;leal (,%edx,), %edx": 1,
                "cmpl %eax, %edi;je  <SeAssignSecurityEx+>;pushl $;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "subl $, %esp;pushl %esi;pushl %edi;xorl %eax, %eax;pushl $": 1,
                "movl (%eax), %edx;movl (%eax), %esi;movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movl $, -(%ebp,%eax,)": 1,
                "movl (%eax), %esi;movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movl $, -(%ebp,%eax,);movzbl (%ecx), %eax": 1,
                "leal (%eax,%eax,), %eax;movl %edi, -(%ebp,%eax,);movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movl %ecx, -(%ebp,%eax,)": 3,
                "movl %edx, -(%ebp,%eax,);movl -(%ebp), %eax;leal (%eax,%eax,), %eax;addl %edi, %esi;movl %esi, -(%ebp,%eax,)": 1,
                "movl (%ebp), %ecx;incl %eax;movl %eax, -(%ebp);leal (%eax,%eax,), %eax;movl %edx, -(%ebp,%eax,)": 1,
                "pushl %edi;xorl %esi, %esi;xorl %eax, %eax;leal -(%ebp), %edi;movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);decl %eax;andl $-, %eax;addl %esi, %eax;movl %eax, -(%ebp)": 1,
                "andl $-, %eax;addl %esi, %eax;movl %eax, -(%ebp);xorl %eax, %eax;cmpb %al, (%ebp)": 1,
                "testl %eax, %eax;movl %edx, -(%ebp);movl %ecx, -(%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "je  <SeAuditHardLinkCreation+>;movzwl (%eax), %ecx;addl %esi, %ecx;movl %ebx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;testl %ecx, %ecx;je  <SeAuditHardLinkCreation+>;movl (%ecx), %edx": 1,
                "addl %esi, %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx;pushl $;movl %eax, -(%ebp)": 1,
                "pushl $;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl (%ebx), %ecx;xorl %edx, %edx": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp)": 1,
                "je  <SeAuditHardLinkCreation+>;movl (%ecx), %eax;cmpl %edx, %eax;jbe  <SeAuditHardLinkCreation+>;leal -(%eax,%eax,), %eax": 1,
                "leal -(%eax,%eax,), %eax;leal (,%eax,), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "xorl %ecx, %ecx;incl %eax;movl %eax, (%ebp);xorl %eax, %eax;cmpl %edx, (%ebp)": 1,
                "movl %ecx, -(%ebp,%eax,);movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movl %edx, -(%ebp,%eax,);movl -(%ebp), %eax": 2,
                "pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;popl %edi;movb $, %al": 1,
                "pushl %ecx;pushl %ecx;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "testb %al, %al;je  <SeAuditHardLinkCreation+>;pushl %esi;movl %fs:, %eax;movl (%eax), %eax": 2,
                "movzbl (%ecx), %edx;pushl $;movl %ecx, -(%ebp);movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl $, -(%ebp);movw $, -(%ebp);movl %eax, -(%ebp);movl %edx, -(%ebp);je  <SeAuditHardLinkCreation+>": 1,
                "calll  <SeTokenIsAdmin+>;leal -(%ebp), %eax;cmpl %eax, %esi;je  <SeAuditHardLinkCreation+>;pushl $": 2,
                "je  <SeAuditHardLinkCreation+>;pushl %esi;movl %fs:, %eax;movl (%eax), %eax;leal -(%ebp), %ecx": 1,
                "pushl %esi;movl %fs:, %eax;movl (%eax), %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;popl %ecx;leal (,%edx,), %edx": 1,
                "movw $, -(%ebp);movl %ecx, -(%ebp);movl %edx, -(%ebp);je  <SeAuditHardLinkCreation+>;movzwl (%eax), %edx": 1,
                "incl %eax;movl %eax, -(%ebp);leal (%eax,%eax,), %eax;movl $, -(%ebp,%eax,);movzwl (%esi), %ecx": 1,
                "pushl %ecx;pushl %eax;calll - <PsSetProcessWindowStation+>;testl %eax, %eax;leal -(%ebp), %ebx": 1,
                "movl -(%ebp), %eax;pushl $;leal (%eax,%eax,), %edx;popl %eax;movl %eax, -(%ebp,%edx,)": 1,
                "leal (%esi,%esi,), %esi;movl %edi, -(%ebp,%esi,);movl -(%ebp), %esi;leal (%esi,%esi,), %esi;movl %edx, -(%ebp,%esi,)": 1,
                "movl %edi, -(%ebp,%ecx,);movl -(%ebp), %ecx;leal (%ecx,%ecx,), %ecx;movl %edx, -(%ebp,%ecx,);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;leal (%ecx,%ecx,), %ecx;movl %edx, -(%ebp,%ecx,);movl -(%ebp), %ecx;movl %ecx, %edx": 1,
                "movzbl (%ebx), %edx;leal (,%edx,), %edx;movl %ebx, -(%ebp);movzwl , %ebx;movl %edx, -(%ebp)": 1,
                "leal -(%ebp), %esi;jl  <SeAuditHardLinkCreation+>;movl (%ebp), %esi;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);movzbl (%ecx), %ebx;movl %ecx, -(%ebp);movzwl , %ecx;leal (,%ebx,), %ebx": 1,
                "movzwl , %ecx;leal (,%ebx,), %ebx;addl $, %ecx;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl %edx, -(%ebp);movl $, -(%ebp);movzwl (%esi), %ebx": 1,
                "leal -(%ebp), %eax;addl $, %ebx;pushl %eax;movl %ebx, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp);calll  <SeTokenIsAdmin+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %edi;stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);calll - <PsReferencePrimaryToken>;movl %eax, %ebx": 1,
                "pushl $;popl %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx;movl %esi, -(%ebp);movzwl , %esi": 1,
                "pushl (%eax);pushl (%ebp);pushl $;calll - <SeAuditHardLinkCreation+>;leal -(%ebp), %eax": 2,
                "pushl %edi;movl (%ebp), %edi;movb %bl, (%edi);movb %bl, (%eax);movb %bl, (%ebp)": 1,
                "movl (%ebp), %eax;cmpl %ebx, %eax;je  <SeDeleteObjectAuditAlarm+>;movzwl (%eax), %ecx;cmpl %ebx, %ecx": 1,
                "movl %ebx, (%ebp);leal (%eax), %esi;jbe  <SeDeleteObjectAuditAlarm+>;cmpb %bl, (%edi);je  <SeDeleteObjectAuditAlarm+>": 1,
                "movb (%esi), %al;cmpb $, %al;jne  <SeDeleteObjectAuditAlarm+>;pushl %ebx;leal (%esi), %eax": 1,
                "je  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %ecx;testl %ecx, (%esi);movb (%esi), %al;je  <SeDeleteObjectAuditAlarm+>": 1,
                "jns  <SeDeleteObjectAuditAlarm+>;cmpb %bl, (%ebp);jne  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "jb - <SeDeleteObjectAuditAlarm+>;popl %esi;popl %edi;popl %ebx;leave": 1,
                "pushl %edi;leal (%eax,%eax,), %edi;movl (%ebp), %eax;leal (%ecx,%ecx,), %ebx;leal (%eax,%edi,), %edi": 1,
                "jl  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %ebx;movb $, (%ebx);orb $, (%eax);incl %ecx": 1,
                "movl (%ebp), %ebx;movb $, (%ebx);orb $, (%eax);incl %ecx;addl $, %eax": 1,
                "orl (%ebp), %ecx;pushl %ebx;pushl %esi;xorl %ebx, %ebx;testl %ecx, (%ebp)": 1,
                "addl $, %esi;cmpl %ecx, %eax;movl %ecx, -(%ebp);jbe  <SeDeleteObjectAuditAlarm+>;pushl %ebx": 1,
                "pushl %edi;movl (%ebp), %eax;cmpb $, (%eax);jne  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %eax": 1,
                "cmpl %eax, (%ecx);jl  <SeDeleteObjectAuditAlarm+>;testb $, %bl;je  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %ecx": 1,
                "pushl %edi;pushl -(%ebp);calll - <SeDeleteObjectAuditAlarm+>;incl %ebx;cmpl (%ebp), %ebx": 1,
                "movl %ecx, %edi;negl %edi;sbbl %edi, %edi;shrb $, %bl;andl $, %eax": 1,
                "jmp  <SeDeleteObjectAuditAlarm+>;incl -(%ebp);addl $, %edx;decl (%ebp);jne - <SeDeleteObjectAuditAlarm+>": 1,
                "jmp  <SeDeleteObjectAuditAlarm+>;xorb %al, %al;popl %edi;leave;retl $": 1,
                "testb $, %cl;je  <SeAuditingFileOrGlobalEvents+>;testb %ch, %ch;jns  <SeAuditingFileOrGlobalEvents+>;movl (%eax), %ecx": 1,
                "pushl (%ebp);pushl $;calll - <IoQueueWorkItem+>;testb %al, %al;jne  <SeAuditingFileOrGlobalEvents+>": 2,
                "cmpb %al, ;movb (%ebp), %cl;je  <SeAuditingFileEvents+>;cmpb %al, %cl;jne  <SeAuditingFileEvents+>": 1,
                "je  <SeAuditingHardLinkEventsWithContext+>;testb %ch, %ch;jns  <SeAuditingHardLinkEventsWithContext+>;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <SeAuditingHardLinkEventsWithContext+>;addl %ecx, %eax;jmp  <SeAuditingHardLinkEventsWithContext+>": 1,
                "pushl (%ebp);sete %al;pushl %eax;pushl (%ebp);pushl $": 2,
                "movl %eax, %edi;movl %edi, -(%ebp);cmpl %ebx, %edi;jne  <SeAuditingHardLinkEventsWithContext+>;movl $, %esi": 1,
                "pushl %eax;calll - <SeReleaseSubjectContext>;movl %esi, %eax;jmp  <SeAuditingHardLinkEventsWithContext+>;pushl %esi": 1,
                "jmp  <SeOpenObjectForDeleteAuditAlarm+>;movl (%esi), %eax;movl %eax, -(%ebp);movl %eax, %edi;movl (%edi), %eax": 1,
                "calll - <IoQueueWorkItem+>;testb %al, %al;je  <SeOpenObjectForDeleteAuditAlarm+>;cmpb %bl, (%ebp);movl -(%ebp), %eax": 1,
                "movw (%eax), %cx;testb $, %cl;je  <SeOpenObjectForDeleteAuditAlarm+>;testb %ch, %ch;jns  <SeOpenObjectForDeleteAuditAlarm+>": 1,
                "jmp  <SeOpenObjectForDeleteAuditAlarm+>;addl %ecx, %eax;jmp  <SeOpenObjectForDeleteAuditAlarm+>;movl (%eax), %eax;leal -(%ebp), %ecx": 1,
                "jne  <SeOpenObjectForDeleteAuditAlarm+>;cmpb %bl, -(%ebp);je  <SeOpenObjectForDeleteAuditAlarm+>;movl (%ebp), %eax;cmpl %ebx, %eax": 1,
                "cmpb %bl, -(%ebp);je  <SeOpenObjectForDeleteAuditAlarm+>;movl (%ebp), %eax;cmpl %ebx, %eax;movl (%ebp), %edi": 1,
                "pushl $;calll - <SeAuditHardLinkCreation+>;jmp  <SeOpenObjectForDeleteAuditAlarm+>;pushl (%esi);pushl $": 1,
                "pushl -(%ebp);pushl %ebx;pushl $;calll - <SeAssignSecurityEx+>;cmpl %ebx, -(%ebp)": 1,
                "je  <SeOpenObjectForDeleteAuditAlarm+>;movl -(%ebp), %eax;movw (%eax), %cx;movw %cx, (%esi);pushl %eax": 1,
                "leal (%esi), %ebx;movl (%ebx), %edx;pushl %edi;xorl %edi, %edi;cmpl %edi, %edx": 1,
                "movl (%ebx), %edx;pushl %edi;xorl %edi, %edi;cmpl %edi, %edx;movl %edx, -(%ebp)": 1,
                "cmpl %eax, %edx;jb  <SeOpenObjectForDeleteAuditAlarm+>;movl %edi, (%eax);movl , %eax;pushl $": 1,
                "calll  <ExRaiseDatatypeMisalignment>;movl , %eax;cmpl %eax, -(%ebp);jb  <SeOpenObjectForDeleteAuditAlarm+>;movl %edi, (%eax)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);cmpl $, (%eax);je  <SeOpenObjectForDeleteAuditAlarm+>": 1,
                "jmp  <SeImpersonateClient+>;pushl (%eax);pushl (%eax);leal -(%ebp), %eax;pushl $": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;pushl %esi;pushl $": 2,
                "pushl -(%ebp);calll - <ZwClose>;movb %bl, -(%ebp);jmp - <SeImpersonateClient+>;xorl %esi, %esi": 1,
                "calll - <ExFreePoolWithTag>;movl $, %eax;jmp  <SeImpersonateClient+>;cmpl $, -(%ebp);jne  <SeImpersonateClient+>": 1,
                "incl %esi;cmpl -(%ebp), %esi;jb - <SeImpersonateClient+>;cmpl %ebx, %edi;je  <SeImpersonateClient+>": 1,
                "jae  <SeImpersonateClient+>;popl %esp;addb %dh, (%eax);addb %bl, (%eax,%eax);addb %ch, (%edi)": 1,
                "je  <SeUnregisterLogonSessionTerminatedRoutine+>;movb $, %cl;movb $, (%eax);calll *;movl $, %eax": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <SeMarkLogonSessionForTerminationNotification+>;leal (%eax), %ecx": 4,
                "cmpl $, (%eax);jne  <SeSetSecurityDescriptorInfoEx+>;movl $, %eax;jmp  <SeSetSecurityDescriptorInfoEx+>;pushl $": 1,
                "jmp  <SeSetSecurityDescriptorInfoEx+>;pushl $;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "calll - <KeAttachProcess>;cmpl %esi, %ebx;je  <SeTokenIsAdmin+>;pushl %edi;movl %esi, -(%ebp)": 1,
                "shrl $, %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 3,
                "rep  movsb (%esi), %es:(%edi);movl , %eax;movl %eax, -(%ebp);movl $, -(%ebp);jmp  <SeTokenIsAdmin+>": 1,
                "jmp  <SeTokenIsAdmin+>;leal -(%ebp), %eax;pushl %eax;pushl %ecx;pushl (%ebx)": 1,
                "jl  <SeTokenIsAdmin+>;movl (%ebx), %edi;cmpl %esi, %edi;je  <SeTokenIsAdmin+>;movl (%ebx), %ecx": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;cmpl %esi, %eax;je  <SeTokenIsAdmin+>;pushl (%ebx)": 1,
                "cmpl %esi, %ebx;jne - <SeTokenIsAdmin+>;popl %edi;calll - <KeDetachProcess>;movl -(%ebp), %ecx": 1,
                "cmpl (%ebp), %eax;jbe  <SeTokenIsAdmin+>;pushl $;pushl %eax;pushl $": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;jne  <SeTokenIsAdmin+>;movl $, %eax": 1,
                "je  <SeTokenIsAdmin+>;movl (%esi), %ecx;cmpl %eax, %ecx;je  <SeTokenIsAdmin+>;movzwl (%eax), %edx": 1,
                "movzbl (%eax), %edx;leal (,%edx,), %edx;pushl %edx;pushl %eax;pushl %ecx": 1,
                "movzwl (%ecx), %edx;addl (%eax), %edx;jmp  <SeTokenIsAdmin+>;movl (%eax), %edx;pushl %ebx": 1,
                "jmp  <SeTokenIsAdmin+>;movl (%eax), %edx;pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "movzbl (%esi), %ecx;leal (,%ecx,), %ecx;movl %ecx, (%ebp);movl %ecx, %ebx;pushl %edi": 1,
                "je  <SeTokenIsAdmin+>;pushl %esi;pushl %edi;pushl $;leal -(%ebp), %eax": 1,
                "calll - <ZwOpenKey>;cmpl %esi, %eax;je - <SeTokenIsAdmin+>;cmpl %edi, %eax;je - <SeTokenIsAdmin+>": 1,
                "movb $, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "pushl -(%ebp);calll - <ZwFlushKey>;cmpl %esi, %eax;je - <SeTokenIsAdmin+>;cmpl %edi, %eax": 1,
                "cmpl %esi, %eax;je - <SeTokenIsAdmin+>;cmpl %edi, %eax;je - <SeTokenIsAdmin+>;pushl %ebx": 1,
                "addb %dh, %gs:(%eax,%eax);addb %al, (%ebx);outsl (%esi), %dx;addb %ch, (%esi);je  <SeTokenIsAdmin+>": 1,
                "addb %dh, (%edx);popal;addb %dh, (%ebx);pushl $;addb %al, (%ecx)": 2,
                "movl %eax, (%edx);testl %eax, %eax;movl (%ebp), %eax;jne  <SeTokenIsAdmin+>;andl $, (%eax)": 1,
                "pushl $;leal (%ebp), %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx": 1,
                "calll - <ZwFreeVirtualMemory>;jmp  <SeTokenIsAdmin+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "jmp  <SeTokenIsAdmin+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl %edi, %eax": 1,
                "movl %eax, ;movl %ebx, ;calll - <ExQueueWorkItem>;movb -(%ebp), %al;popl %esi": 1,
                "pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl , %esi;movl (%esi), %eax;movl %eax, ": 1,
                "je  <SeTokenIsAdmin+>;pushl %ebx;pushl %ebx;pushl %eax;calll - <KeSetEvent>": 1,
                "pushl %eax;calll - <KeSetEvent>;movl %edi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "movl , %eax;popl %edi;popl %esi;popl %ebx;retl": 1,
                "movl %ebx, (%esi);calll - <SeTokenIsAdmin+>;testl %eax, %eax;jl  <SeTokenIsAdmin+>;movl (%edi), %eax": 1,
                "pushl -(%ebp);pushl ;pushl $;pushl %ecx;calll - <ObReferenceObjectByHandle>": 1,
                "movl %edx, -(%ebp);movl (%ebp), %ecx;movl , %eax;cmpl %eax, %ecx;jb  <SeTokenIsAdmin+>": 1,
                "orl $-, -(%ebp);jmp  <SeTokenIsAdmin+>;orl $-, -(%ebp);movl %edx, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%ebp), %ecx;movzbl (%eax,%ecx), %edx;movl %eax, %ecx;shll $, %ecx;shll %cl, %edx": 1,
                "calll - <_CIsqrt+>;andl $, -(%ebp);pushl (%ebp);calll - <IoCheckFunctionAccess+>;orl $-, -(%ebp)": 1,
                "calll - <IoCheckFunctionAccess+>;orl $-, -(%ebp);jmp  <SeTokenIsAdmin+>;nop;nop": 1,
                "je  <SeTokenIsAdmin+>;movl %edx, -(%ebp);jmp  <SeTokenIsAdmin+>;cmpb $, (%edi);jne  <SeTokenIsAdmin+>": 1,
                "movl %eax, %esi;testl %esi, %esi;jge  <SeTokenIsAdmin+>;xorb %al, %al;jmp  <SeTokenIsAdmin+>": 1,
                "jne  <SeTokenIsAdmin+>;cmpl $, (%eax);je  <SeTokenIsAdmin+>;movl (%ebp), %ecx;cmpl $, %ecx": 1,
                "andl $, (%edx);movl -(%ebp), %edx;movl %ecx, (%edx);movl -(%ebp), %ecx;movl (%ebp), %edx": 1,
                "andl $, (%ecx);jmp  <SeTokenIsAdmin+>;nop;nop;nop": 1,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <ExRaiseException>;xorb %al, %al": 1,
                "calll - <_CIsqrt+>;xorl %ebx, %ebx;cmpb %bl, ;jne  <SeTokenIsAdmin+>;movl (%ebp), %esi": 1,
                "jne  <SeTokenIsAdmin+>;movl (%ebp), %esi;incl %esi;movl %ebx, -(%ebp);movb (%esi), %al": 1,
                "jne  <SeTokenIsAdmin+>;incl %edx;incl %edx;movl (%ebp), %eax;addl %edx, (%eax)": 1,
                "movl $, %eax;andl %eax, %ebx;movl (%esi), %ecx;shll $, %ecx;xorl %ecx, %ebx": 1,
                "movl (%esi), %ecx;shll $, %ecx;xorl %ecx, %ebx;addl $, (%esi);andl $-, (%esi)": 1,
                "cmpl $-, %ebx;je  <SeTokenIsAdmin+>;movl (%esi), %ecx;shll $, %ecx;movl (%esi), %edx": 1,
                "nop;nop;jmp  <SeTokenIsAdmin+>;nop;nop": 2,
                "calll - <NtReadFile>;jmp  <SeTokenIsAdmin+>;cmpl %ecx, -(%ebp);jne  <SeTokenIsAdmin+>;pushl $": 1,
                "pushl %ebx;calll - <NtQueryInformationFile>;testl %eax, %eax;jl  <SeTokenIsAdmin+>;movl $, -(%ebp)": 1,
                "pushl %ecx;pushl %ecx;pushl %ecx;pushl %ebx;calll - <NtWriteFile>": 1,
                "calll - <NtWaitForSingleObject>;movl %eax, %edi;movl %edi, -(%ebp);testl %edi, %edi;jl  <SeTokenIsAdmin+>": 1,
                "movl (%eax), %edi;movl %edi, -(%ebp);orl $-, -(%ebp);jmp  <SeTokenIsAdmin+>;nop": 1,
                "cmpl $, (%ebp);jne - <SeTokenIsAdmin+>;cmpl $, %edi;jne - <SeTokenIsAdmin+>;andw $, (%esi)": 1,
                "jne - <SeTokenIsAdmin+>;andw $, (%esi);jmp  <SeTokenIsAdmin+>;orl $, %edi;movl %edi, (%esi)": 1,
                "jne  <SeTokenIsAdmin+>;testw $, -(%ebp);je  <SeTokenIsAdmin+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ebx, %edx;je  <SeTokenIsAdmin+>;movw (%esi,%eax,), %cx;cmpw %bx, %cx;je  <SeTokenIsAdmin+>": 1,
                "incl %ebx;pushl %esp;decl %esp;popl %edi;pushl %esi": 1,
                "andl $, -(%ebp);movl -(%ebp), %eax;movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %edi": 1,
                "calll - <ProbeForWrite>;pushl $;pushl $;pushl %edi;calll - <ProbeForWrite>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ecx;jmp  <SeTokenIsAdmin+>;nop;nop": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %esi, (%eax);movl %edi, (%eax);movl %ebx, (%eax)": 1,
                "testl %esi, %esi;jne  <SeTokenIsAdmin+>;orl $-, -(%ebp);movl $, %eax;jmp  <SeTokenIsAdmin+>": 1,
                "incl %ebx;pushl %ebx;pushl $;pushl %esi;calll - <ProbeForWrite>": 1,
                "pushl %esi;calll - <ProbeForWrite>;leal (%edi), %eax;cmpl %edi, %eax;jb  <SeTokenIsAdmin+>": 1,
                "movl %ebx, -(%ebp);cmpw $, %di;jae  <SeTokenIsAdmin+>;movzwl %di, %ecx;cmpb $, (%ecx,%esi)": 1,
                "jne  <SeTokenIsAdmin+>;movl %ecx, -(%ebp);jmp  <SeTokenIsAdmin+>;movzwl (%edi), %ecx;incl %ecx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl (%eax), %edx;addl %esi, %edx": 1,
                "addl %esi, %edx;movl %edx, -(%ebp);cmpb $, %cl;jne  <SeTokenIsAdmin+>;movl (%eax), %ecx": 1,
                "cmpb $, %cl;jne  <SeTokenIsAdmin+>;movl (%eax), %ecx;addl %esi, %ecx;movl %ecx, -(%ebp)": 1,
                "orl $, %eax;movl %eax, (%ebx);movl (%ebp), %esi;andb $, (%esi);movl (%esi), %eax": 1,
                "movl (%ebp), %esi;andb $, (%esi);movl (%esi), %eax;movzbl (%ebx), %ecx;orl %eax, %ecx": 1,
                "calll - <SeTokenIsAdmin+>;movl %eax, -(%ebp);testl %eax, %eax;jge  <SeTokenIsAdmin+>;pushl %eax": 1,
                "cmpl $, -(%ebp);jne  <SeTokenIsAdmin+>;pushl $;pushl %ebx;xorl %eax, %eax": 1,
                "retl $;nop;pushl %esi;insl %dx, %es:(%edi);pushl %eax": 1,
                "je  <SeTokenIsAdmin+>;je  <SeTokenIsAdmin+>;jae  <SeTokenIsAdmin+>;andb %ah, (%esi);imull $, (%ebp), %ebp": 2,
                "jne  <SeTokenIsAdmin+>;pushl $;jb  <SeTokenIsAdmin+>;andb %ah, %fs:(%ecx);popal": 1,
                "orb $, ;movl (%ebp), %eax;cmpw (%edx), %ax;jne  <SeTokenIsAdmin+>;andl $, -(%ebp)": 1,
                "cmpw (%edx), %ax;jne  <SeTokenIsAdmin+>;andl $, -(%ebp);jmp  <SeTokenIsAdmin+>;cmpw (%edx), %ax": 1,
                "movzbl %dl, %ecx;testl %ecx, %ebx;jne  <SeTokenIsAdmin+>;testl %ecx, %esi;jne  <SeTokenIsAdmin+>": 1,
                "incl %edx;shll %cl, %edx;movl (%ebp), %ecx;movl (%ecx), %eax;pushl %esi": 1,
                "movl (%ebp), %eax;testb $, (%eax);je  <SeTokenIsAdmin+>;pushl $;jmp  <SeTokenIsAdmin+>": 1,
                "movl , %edi;cmpl %edi, %ebx;jb  <SeTokenIsAdmin+>;movl $, (%edi);addl $-, %edx": 1,
                "movl $, (%edi);testb $, (%esi);je  <SeTokenIsAdmin+>;leal (%ebx), %esi;xorl %edi, %edi": 1,
                "calll - <_CIsqrt+>;andl $, -(%ebp);movl (%ebp), %edi;movb (%edi), %al;movb %al, -(%ebp)": 1,
                "movb (%edi), %al;movb %al, -(%ebp);leal (%edi), %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "testw %cx, %cx;jne  <SeTokenIsAdmin+>;movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax": 1,
                "subl $, %ecx;jmp  <SeTokenIsAdmin+>;subl $, %ecx;testl %edx, %edx;je  <SeTokenIsAdmin+>": 1,
                "movw (%esi), %dx;movw %dx, (%eax);subl %ecx, %eax;movl %eax, -(%ebp);movl (%esi), %ecx": 1,
                "movl %edi, (%esi);movl (%ecx), %ecx;movl %ecx, (%esi);orl $-, -(%ebp);andl $, %edx": 1,
                "testl $, %eax;je  <SeTokenIsAdmin+>;testb $, ;je  <SeTokenIsAdmin+>;testl $, %eax": 1,
                "testl $, %eax;jmp  <SeTokenIsAdmin+>;cmpb $, ;je  <SeTokenIsAdmin+>;testb $, %ah": 1,
                "movl $, %esi;testl %esi, ;jne  <SeTokenIsAdmin+>;calll - <RtlTraceDatabaseAdd+>;testl %esi, ": 1,
                "movl (%ecx), %eax;andb $, %al;negb %al;sbbl %eax, %eax;andl $, %eax": 1,
                "andl $, (%eax);pushl (%esi);pushl %esi;calll - <SeTokenIsAdmin+>;movl %eax, -(%ebp)": 1,
                "cmpl $-, %eax;je  <SeTokenIsAdmin+>;movl (%esi), %ecx;movl %eax, (%ecx);movl (%esi), %eax": 1,
                "movl (%esi), %ecx;movl %ebx, (%ecx);orl $-, -(%ebp);jmp  <SeTokenIsAdmin+>;nop": 1,
                "je  <SeTokenIsAdmin+>;pushl %esi;calll - <SeTokenIsAdmin+>;jmp  <SeTokenIsAdmin+>;movl $, %ebx": 1,
                "testb %al, (%ecx);je  <SeTokenIsAdmin+>;movl (%esi), %ebx;movl %ebx, -(%ebp);pushl %ebx": 1,
                "xorl %edx, %edx;movb (%ecx), %dl;andl %edx, %eax;movb %al, (%ecx);cmpl $, -(%ebp)": 1,
                "je  <SeTokenIsAdmin+>;pushl %edi;pushl $;pushl -(%ebp);pushl $": 1,
                "jge  <SeTokenIsAdmin+>;pushl (%esi);calll - <IoCheckFunctionAccess+>;pushl -(%ebp);calll - <ExRaiseStatus>": 1,
                "testl %eax, %ebx;je  <SeTokenIsAdmin+>;andl $, %eax;movl %eax, (%edi);jmp  <SeTokenIsAdmin+>": 1,
                "movl %eax, -(%ebp);pushl $;pushl %eax;calll - <KeRemoveEntryDeviceQueue+>;pushl (%esi)": 1,
                "calll - <ExRaiseStatus>;cmpl $, -(%ebp);je  <SeTokenIsAdmin+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl $, %eax": 1,
                "calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax;pushl %edi;movl -(%ebp), %edi": 1,
                "pushl %eax;pushl %edi;movl -(%ebp), %edi;pushl %edi;pushl $": 1,
                "jmp  <SeTokenIsAdmin+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;cmpl %ebx, %ecx;jne - <SeTokenIsAdmin+>;pushl %ebx;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp)": 1,
                "movl $, %eax;jmp  <SeTokenIsAdmin+>;pushl %esi;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl -(%ebp);calll - <PsChargeProcessPoolQuota>;testl %eax, %eax;jge  <SeTokenIsAdmin+>": 1,
                "rep  stosl %eax, %es:(%edi);movl $, (%ebx);xorl %edi, %edi;movl %edi, (%ebx);movl %edi, (%ebx)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);pushl $;pushl $;pushl $": 2,
                "pushl %esi;pushl %edi;pushl -(%ebp);calll - <PsReturnPoolQuota>;movl $, %esi": 1,
                "pushl -(%ebp);calll - <PsChargeProcessPoolQuota>;movl %eax, -(%ebp);cmpl %edi, %eax;jge  <SeTokenIsAdmin+>": 1,
                "pushl (%esi);calll - <ProbeForWrite>;pushl $;pushl $;pushl (%esi)": 2,
                "movl , %eax;cmpl %eax, (%esi);jb  <SeTokenIsAdmin+>;movl %edi, (%eax);movl (%esi), %esi": 1,
                "je  <SeTokenIsAdmin+>;pushl $;pushl $;pushl %edi;calll - <PsReturnPoolQuota>": 1,
                "pushl -(%ebp);calll - <PsReturnPoolQuota>;pushl $;pushl $;pushl -(%ebp)": 1,
                "cmpl %ebx, %esi;movl -(%ebp), %eax;jge  <SeTokenIsAdmin+>;movl %esi, %eax;calll - <_CIsqrt+>": 1,
                "arpl %ax, (%eax);popal;addb %ch, (%eax,%eax);addb %ah, (%ebp);insl %dx, %es:(%edi)": 4,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx": 2,
                "cmpl $, -(%ebp);jae  <SeTokenIsAdmin+>;movl $, %esi;jmp  <SeTokenIsAdmin+>;pushl $": 1,
                "orl $-, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl $;pushl ": 3,
                "pushl %eax;pushl $;pushl ;pushl $;pushl -(%ebp)": 1,
                "movl $, %esi;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>;jmp  <SeTokenIsAdmin+>": 1,
                "movl %edx, -(%ebp);movl %fs:, %eax;movl %eax, (%esi);movl %edi, (%esi);movl %edx, (%esi)": 1,
                "pushl %eax;calll - <IoFreeMdl>;movl -(%ebp), %esi;pushl -(%ebp);calll - <IoFreeIrp>": 1,
                "orl $-, -(%ebp);movl %esi, %eax;jmp  <SeTokenIsAdmin+>;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "movl (%esi), %edx;addl $, %edx;movl (%edx), %eax;movl %eax, (%ecx);movl %edx, (%ecx)": 1,
                "movl %ecx, (%eax);movl %ecx, (%edx);movb -(%ebp), %cl;calll *;movl %esi, %edx": 1,
                "jne  <SeTokenIsAdmin+>;pushl $;pushl $;pushl $;pushl $": 1,
                "cmpl $, -(%ebp);je  <SeTokenIsAdmin+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "calll  <IoWMIExecuteMethod+>;movl %eax, %esi;cmpl %ebx, %esi;movl -(%ebp), %eax;jge  <WmiStopTrace+>": 1,
                "jmp  <WmiStopTrace+>;cmpl , %esi;jne  <WmiStopTrace+>;orl $-, ;jmp  <WmiStopTrace+>": 1,
                "je - <WmiStopTrace+>;cmpl , %esi;je  <WmiStopTrace+>;cmpl , %esi;je  <WmiStopTrace+>": 1,
                "cmpl , %esi;je  <WmiStopTrace+>;cmpl , %esi;je  <WmiStopTrace+>;leal -(%ebp), %ecx": 1,
                "movl (%ebp), %esi;pushl %eax;pushl %esi;calll - <CcZeroData+>;movl %eax, %edi": 1,
                "pushl %ebx;pushl %ebx;addl $, %eax;pushl %eax;movl %ebx, (%esi)": 1,
                "pushl %esi;calll - <SeCreateClientSecurityFromSubjectContext+>;cmpl %ebx, %eax;jl  <WmiUpdateTrace+>;movl -(%ebp), %ecx": 1,
                "movl (%ecx), %edi;movl %edi, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%esi), %edx": 1,
                "movl %ecx, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);pushl %ebx": 1,
                "cmpl %ebx, (%ecx);je  <WmiUpdateTrace+>;orl %eax, -(%ebp);movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "cmpl %ebx, %esi;jge  <WmiUpdateTrace+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax;je  <WmiUpdateTrace+>;andl $, -(%ebp)": 1,
                "cmpl %ebx, %esi;jl  <WmiUpdateTrace+>;cmpl %ebx, (%edi);movl -(%ebp), %ebx;je  <WmiUpdateTrace+>": 1,
                "calll - <ExAllocatePoolWithTag>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "orl $, (%eax);orl $, -(%ebp);jmp  <WmiUpdateTrace+>;movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;addl $, %eax": 1,
                "jl  <WmiUpdateTrace+>;leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi;pushl %edi": 1,
                "pushl %eax;calll - <KeResetEvent>;movl -(%ebp), %ebx;movl (%ebx), %esi;cmpl %edi, %esi": 1,
                "movl %eax, (%ecx);movl -(%ebp), %ebx;movl (%ebx), %edi;testl %edi, %edi;je  <WmiUpdateTrace+>": 1,
                "je  <WmiUpdateTrace+>;movl %esi, %ecx;xorl %eax, %eax;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %ebx;movl (%ebp), %eax;movl (%eax), %esi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %ebx;movl (%ebp), %eax;movl (%eax), %esi;testl %esi, %esi": 1,
                "nop;movl -(%ebp), %esp;cmpl $, -(%ebp);je  <WmiUpdateTrace+>;leal -(%ebp), %eax": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <WmiUpdateTrace+>;xorl %eax, %eax;cmpl %eax, %esi": 1,
                "movl (%esi), %eax;testl %eax, %eax;jbe  <WmiUpdateTrace+>;movl %eax, (%ebx);movl -(%ebp), %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;movl -(%ebp), %ebx;movl $, %eax": 1,
                "movl %eax, %esi;movl -(%ebp), %ebx;addl $, %ebx;movl %ebx, -(%ebp);movl $, %eax": 1,
                "jne  <WmiFlushTrace+>;movl $, %eax;jmp  <WmiFlushTrace+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl (%ebp);calll - <SeCreateClientSecurityFromSubjectContext+>;testl %eax, %eax;jl  <WmiFlushTrace+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;pushl $;addl $, %eax;pushl %eax;calll - <KeReleaseMutex>": 1,
                "movl %eax, -(%ebp);movl (%edx), %edx;movl %edx, -(%ebp);movl %eax, %esi;orl %edx, %esi": 3,
                "movzwl -(%ebp), %eax;movl %eax, -(%ebp);cmpl $, %eax;ja  <WmiQueryTraceInformation+>;cmpl %ecx, %ebx": 1,
                "je  <WmiQueryTraceInformation+>;movl %eax, (%ebx);movl %edx, (%ebx);jmp  <WmiQueryTraceInformation+>;pushl $": 1,
                "jb - <WmiQueryTraceInformation+>;cmpl %ecx, %edx;je - <WmiQueryTraceInformation+>;movl (%edx), %eax;movl %eax, -(%ebp)": 2,
                "cmpl %ecx, %edx;je - <WmiQueryTraceInformation+>;movzbl -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, (%ebx)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);testl %ebx, %ebx;je  <WmiQueryTraceInformation+>": 1,
                "je  <WmiQueryTraceInformation+>;movl %edx, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);testl %esi, %esi": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);testl %esi, %esi;jmp  <WmiQueryTraceInformation+>;cmpl $, (%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);cmpl $-, %eax;jne  <WmiQueryTraceInformation+>;xorl %eax, %eax": 1,
                "xorl %edx, %edx;movl %edx, -(%ebp);xorl %esi, %esi;incl %esi;movl %esi, -(%ebp)": 1,
                "jne - <WmiQueryTraceInformation+>;cmpl %ecx, %edx;jne  <WmiQueryTraceInformation+>;movl $, %eax;jmp  <WmiQueryTraceInformation+>": 1,
                "jmp  <WmiQueryTraceInformation+>;cmpl %ecx, (%edx);je - <WmiQueryTraceInformation+>;cmpw %cx, (%edx);je - <WmiQueryTraceInformation+>": 1,
                "pushl %eax;calll - <WmiQueryTrace>;movl %eax, -(%ebp);testl %eax, %eax;jge  <WmiQueryTraceInformation+>": 1,
                "pushl %ebx;jne  <WmiStartTrace+>;movl (%esi), %eax;cmpl %edi, %eax;je  <WmiStartTrace+>": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll  <IoWMIExecuteMethod+>;cmpl %edi, %eax": 1,
                "jl  <WmiStartTrace+>;movl (%esi), %eax;andl $, %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl %edi;pushl $;calll - <IoGetAttachedDeviceReference+>;movl , %edx": 1,
                "movl %edx, %esi;movl (%edx), %edx;testl %edx, %edx;jne - <IoWMIAllocateInstanceIds+>;pushl $": 1,
                "movl %ecx, (%eax);calll - <KeReleaseMutex>;movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax": 1,
                "calll - <KeReleaseMutex>;movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax;jmp  <IoWMIAllocateInstanceIds+>": 1,
                "subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jne  <IoWMISuggestInstanceName+>;movl $, %eax;jmp  <IoWMISuggestInstanceName+>;pushl %esi": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %edi": 1,
                "movw (%ebp), %ax;pushl %esi;movw %bx, (%esi);movw %ax, (%esi);calll - <RtlAppendUnicodeToString>": 1,
                "calll - <ExFreePoolWithTag>;movl %ebx, -(%ebp);jmp  <IoWMISuggestInstanceName+>;cmpl %ebx, -(%ebp);je  <IoWMISuggestInstanceName+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;pushl %esi;movl (%ebp), %esi": 4,
                "movl (%esi), %ecx;pushl %edi;movl %eax, %edi;je  <IoWMIQueryAllDataMultiple+>;cmpl $, %ecx": 1,
                "pushl %edx;pushl (%ebp);calll  <IoWMIExecuteMethod+>;testl %eax, %eax;jl  <IoWMIQueryAllDataMultiple+>": 1,
                "movl (%edi), %eax;movl %eax, (%esi);jmp  <IoWMIQuerySingleInstanceMultiple+>;movl -(%ebp), %ecx;movl %ecx, (%esi)": 1,
                "leal -(%ebp), %ecx;cmpl %ecx, %edi;jne  <IoWMIQuerySingleInstanceMultiple+>;movl $, %eax;movl -(%ebp), %ecx": 1,
                "addl $, %eax;pushl %edi;andl $-, %eax;movl %eax, -(%ebp);addl %ecx, %eax": 2,
                "pushl (%ebp);andl $, %ecx;pushl %ebx;pushl %edx;rep  movsb (%esi), %es:(%edi)": 1,
                "xorl %eax, %eax;popl %ecx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi);andl %eax, (%ebx)": 2,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);movl $, (%ebx);movw (%esi), %ax;movw %ax, (%ebx);movzwl (%esi), %ecx": 2,
                "movl %eax, -(%ebp);jbe  <IoWMIExecuteMethod+>;movl (%ebp), %ecx;addl %ecx, %eax;pushl $": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp - <IoWMIExecuteMethod+>;movl $, (%ebp)": 1,
                "pushl %edi;movl (%esi), %edi;addl $, %ecx;subl %edi, %edx;andl $-, %ecx": 1,
                "movl %eax, (%esi);addl $, %eax;movl %eax, (%esi);leal (%esi), %eax;pushl %eax": 1,
                "jne - <IoWMIExecuteMethod+>;leal (%esi), %edi;movl %edi, %ecx;calll - <InterlockedPopEntrySList>;movl %eax, %edx": 1,
                "pushl %esi;xorl %esi, %esi;movl (,%esi,), %eax;testl %eax, %eax;je  <IoWMIExecuteMethod+>": 1,
                "cmpl $, %eax;je  <IoWMIExecuteMethod+>;pushl $;pushl (%ebp);addl $, %eax": 1,
                "calll - <RtlEqualUnicodeString>;testb %al, %al;jne  <IoWMIExecuteMethod+>;incl %esi;cmpl $, %esi": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);xorl %eax, %eax;jmp - <IoWMIExecuteMethod+>;nop": 1,
                "movl %esi, -(%ebp);jbe  <IoWMIExecuteMethod+>;pushl %edi;pushl $;popl %ecx": 1,
                "movl , %eax;leal (%eax,%ecx), %edx;decl %eax;notl %eax;pushl %edi": 1,
                "movl %ecx, %edx;shrl $, %ecx;orl $-, %eax;leal (%esi,%ebx), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "xorl %eax, %eax;pushl %eax;leal (%edi), %esi;pushl %esi;pushl (%edi)": 1,
                "addl %ecx, (%esi);adcl $, (%esi);testl %eax, %eax;jge  <IoWMIExecuteMethod+>;xorl %eax, %eax": 1,
                "xorl %eax, %eax;jmp  <IoWMIExecuteMethod+>;movl (%ebp), %edx;movl (%ebx), %esi;movl (%ebp), %eax": 1,
                "addl %edx, %eax;movl %eax, (%esi);movl $, (%esi);movl %fs:, %eax;movl %eax, (%ebp)": 1,
                "movl (%eax), %eax;movl %eax, (%esi);movl (%ebp), %eax;movw %ax, (%esi);addl %eax, (%ebx)": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %ebx;movl %edi, -(%ebp)": 1,
                "xorl %edi, %edi;cmpl %edi, %ebx;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "retl $;movl (%ebx), %esi;cmpl %edi, %esi;movl %esi, -(%ebp);je - <IoWMIExecuteMethod+>": 1,
                "movl %eax, (%edx);movl %eax, (%edx);movl %esi, %eax;movl %eax, (%edx);movl $, (%edx)": 1,
                "pushl %eax;pushl $;pushl -(%ebp);calll  <IoWMIExecuteMethod+>;testl %eax, %eax": 1,
                "jmp  <IoWMIExecuteMethod+>;movl -(%ebp), %ecx;leal (%ebx), %eax;movl %ecx, (%eax);movl -(%ebp), %ecx": 1,
                "leal (%ebx), %eax;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "calll - <ExFreePoolWithTag>;pushl $;pushl (%ebp);calll - <ExFreePoolWithTag>;movl %esi, %eax": 1,
                "cmpl %eax, %ecx;jb  <IoWMIExecuteMethod+>;addl $, %eax;cmpl , %eax;jbe  <IoWMIExecuteMethod+>": 1,
                "jb  <IoWMIExecuteMethod+>;addl $, %eax;cmpl , %eax;jbe  <IoWMIExecuteMethod+>;calll  <ExRaiseAccessViolation>": 1,
                "cmpb $, (%edi);je  <IoWMIExecuteMethod+>;testl %ebx, %ebx;je  <IoWMIExecuteMethod+>;movl (%ebx), %eax": 1,
                "testl %ebx, %ebx;je  <IoWMIExecuteMethod+>;movl (%ebx), %eax;testl %eax, %eax;je  <IoWMIExecuteMethod+>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl $, (%ebx);orb $-, (%ebx);movl , %eax": 1,
                "movl %ecx, (%ebx);movl %ebx, (%eax);movl %ebx, (%ecx);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl -(%ebp), %edi;jmp  <IoWMIExecuteMethod+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);cmpl $, -(%ebp);jl  <IoWMIExecuteMethod+>;cmpl $, (%ebx);je  <IoWMIExecuteMethod+>": 1,
                "calll - <KeSetEvent>;cmpl $, (%esi);jl  <IoWMIExecuteMethod+>;pushl %ebx;calll - <KeResetEvent>": 1,
                "jg - <IoWMIExecuteMethod+>;movl $, %ebx;movl %ebx, %ecx;calll *;decl ": 1,
                "calll - <IoWMIExecuteMethod+>;xorl %ebx, %ebx;cmpl %ebx, (%esi);je  <IoWMIExecuteMethod+>;leal (%esi), %eax": 1,
                "pushl %esi;calll - <IoWMIExecuteMethod+>;testl %eax, %eax;movl %eax, (%esi);jne  <IoWMIExecuteMethod+>": 1,
                "incl %ebx;cmpl -(%ebp), %ebx;jl - <IoWMIExecuteMethod+>;xorl %eax, %eax;popl %edi": 1,
                "movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;pushl %ebx": 1,
                "movl -(%ebp), %edi;movl %eax, %esi;jmp  <IoWMIExecuteMethod+>;cmpl %ebx, %esi;je  <IoWMIExecuteMethod+>": 1,
                "je - <IoWMIExecuteMethod+>;addl $, %edi;decl -(%ebp);jns - <IoWMIExecuteMethod+>;cmpl %ebx, %esi": 1,
                "calll - <IoFreeIrp>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;popl %edi": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);pushl $;popl %ecx": 2,
                "movl $, %edi;rep  stosl %eax, %es:(%edi);popl %edi;leave;retl": 1,
                "jle  <IoWMIExecuteMethod+>;pushl %esi;xorl %esi, %esi;xorl %eax, %eax;incl %eax": 1,
                "testl %eax, %eax;je  <IoWMIExecuteMethod+>;pushl %edi;movl (%ebp), %edi;testl %edi, %edi": 1,
                "movl -(%ebp), %edx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);andw $, (%ebx,%eax);movl -(%ebp), %ecx": 1,
                "je  <IoWMIExecuteMethod+>;movl %eax, -(%ebp);movl %eax, %esi;jmp - <IoWMIExecuteMethod+>;calll  <IoWMIExecuteMethod+>": 1,
                "movw (%edi), %ax;cmpw %si, %ax;je  <IoWMIExecuteMethod+>;movzwl %ax, %ebx;movl %ebx, -(%ebp)": 1,
                "nop;nop;movl -(%ebp), %esp;movl -(%ebp), %ebx;leal -(%ebx), %ecx": 1,
                "movl -(%ebp), %ebx;leal -(%ebx), %ecx;xorl %eax, %eax;movl -(%ebp), %edx;movl %edx, %edi": 1,
                "je  <IoWMIExecuteMethod+>;movl $, -(%ebp);pushl -(%ebp);movsbl %bl, %eax;leal (%eax,%eax,), %eax": 1,
                "movl %ecx, -(%ebp);addl $, %edi;decl -(%ebp);jns - <IoWMIExecuteMethod+>;testl %esi, %esi": 1,
                "jns - <IoWMIExecuteMethod+>;testl %esi, %esi;je  <IoWMIExecuteMethod+>;pushl %esi;calll - <IoFreeIrp>": 1,
                "cmpl %ecx, %eax;jne - <IoWMIExecuteMethod+>;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "movb $, (%ecx);movl (%eax), %ecx;movl %ebx, (%ecx);movl (%eax), %eax;addl $, %eax": 1,
                "movl %eax, (%eax);movl %eax, (%eax);orl $, (%esi);pushl %ebx;pushl $": 1,
                "pushl %ebx;calll  <IoWMIExecuteMethod+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <IoWMIExecuteMethod+>": 1,
                "je  <IoWMIExecuteMethod+>;movl , %eax;orl $, %eax;jmp - <IoWMIExecuteMethod+>;andl $-, -": 1,
                "pushl $;calll - <KeReleaseMutex>;xorl %eax, %eax;jmp  <IoWMIExecuteMethod+>;pushl $": 1,
                "jne  <IoWMIExecuteMethod+>;testb %al, %al;jne  <IoWMIExecuteMethod+>;andl $-, -;movl (%ebx), %esi": 1,
                "andl $-, -;movl (%ebx), %esi;movl (%ebx), %edi;pushl $;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);calll - <IoGetAttachedDeviceReference+>;pushl $;pushl %ebx": 1,
                "rep  cmpsl %es:(%edi), (%esi);jne  <IoWMIExecuteMethod+>;movl $, -(%ebp);jmp  <IoWMIExecuteMethod+>;calll - <IoGetDeviceProperty+>": 1,
                "pushl %ebx;calll - <FsRtlOplockFsctrl+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <IoWMIExecuteMethod+>": 1,
                "movl %eax, -(%ebp);jl  <IoWMIExecuteMethod+>;leal (%ebx), %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "movl $, -(%ebp);jmp  <IoWMIExecuteMethod+>;leal (%ebx), %eax;cmpl %eax, (%eax);jne  <IoWMIExecuteMethod+>": 1,
                "andb $, (%ebx);xorl %esi, %esi;pushl %ebx;pushl $;movl %esi, (%ebx)": 1,
                "rep  cmpsl %es:(%edi), (%esi);je  <IoWMIExecuteMethod+>;movl $, -(%ebp);pushl %ebx;pushl $": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebp)": 1,
                "movl $, %eax;jmp  <IoWMIExecuteMethod+>;movzwl %ax, %eax;cmpl (%ebp), %eax;jne  <IoWMIExecuteMethod+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx": 1,
                "movl (%esi), %esi;cmpl %ecx, %esi;movl %esi, -(%ebp);jne - <IoWMIExecuteMethod+>;pushl $": 1,
                "calll - <KeReleaseMutex>;jmp  <IoWMIExecuteMethod+>;movl $, %edi;movl $, %ebx;pushl $": 1,
                "movl $, %edi;movl $, %ebx;pushl $;calll - <IoGetAttachedDeviceReference+>;movl , %ecx": 1,
                "movl , %eax;movl (%eax), %esi;cmpl %eax, %esi;je  <IoWMIExecuteMethod+>;movl %esi, %eax": 1,
                "movl %ecx, (%edx);movl %edx, (%ecx);movl (%ebp), %edx;testl %edx, %edx;je  <IoWMIExecuteMethod+>": 1,
                "cmpl %eax, %esi;popl %esi;je  <IoWMIExecuteMethod+>;movl $, %edi;movl %edi, %eax": 1,
                "cmpl %ebx, (%ebp);rep  stosb %al, %es:(%edi);leal -(%ebp), %eax;pushl %eax;je  <IoWMIExecuteMethod+>": 1,
                "pushl %ebx;pushl -(%ebp);calll  <IoWMIExecuteMethod+>;movl %eax, %edi;calll - <PsRevertToSelf>": 1,
                "movl (%eax), %ecx;cmpl (%esi), %ecx;jne  <IoWMIExecuteMethod+>;pushl $;pushl %edi": 1,
                "addl $, %eax;pushl %eax;calll - <RtlCompareMemory>;cmpl $, %eax;jne  <IoWMIExecuteMethod+>": 1,
                "testb $, (%esi);je  <IoWMIExecuteMethod+>;movl (%ebp), %eax;mull (%esi);movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwQueryInformationFile>;testl %eax, %eax;movl %eax, (%ebp);jl  <IoWMIExecuteMethod+>": 1,
                "movl %eax, (%ebp);jl  <IoWMIExecuteMethod+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp  <IoWMIExecuteMethod+>;movl -(%ebp), %ecx;movl -(%ebp), %edi;movl (%esi), %ebx;andl $, %ebx": 1,
                "movl -(%ebp), %edi;movl (%esi), %ebx;andl $, %ebx;jne  <IoWMIExecuteMethod+>;movl (%ebp), %eax": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;je  <IoWMIExecuteMethod+>;pushl %eax;calll - <SeTokenType>": 1,
                "cmpl $, %eax;movl (%esi), %ecx;je  <IoWMIExecuteMethod+>;cmpl %ebx, %ecx;je  <IoWMIExecuteMethod+>": 1,
                "cmpl %ebx, %ecx;je  <IoWMIExecuteMethod+>;calll - <ObfDereferenceObject>;movl %ebx, (%esi);cmpl %ebx, (%ebp)": 1,
                "je  <IoWMIExecuteMethod+>;cmpb $, -(%ebp);jne  <IoWMIExecuteMethod+>;leal (%esi), %eax;jmp  <IoWMIExecuteMethod+>": 1,
                "movl $, %eax;jmp  <IoWMIExecuteMethod+>;pushl %ebx;pushl %edi;movl $, %eax": 1,
                "pushl %esi;pushl -(%ebp);calll - <ZwWriteFile>;popl %edi;movl -(%ebp), %ecx": 1,
                "movl %edi, (%ebp);jbe  <IoWMIExecuteMethod+>;movl (%ebp), %ebx;shll $, %ebx;jmp  <IoWMIExecuteMethod+>": 1,
                "pushl %eax;leal (%esi), %eax;pushl %eax;calll  <IoWMIExecuteMethod+>;movl %eax, %edi": 1,
                "testl %edi, %edi;jl  <IoWMIExecuteMethod+>;andb $-, (%esi);testl %ebx, %ebx;jne  <IoWMIExecuteMethod+>": 1,
                "jl  <IoWMIExecuteMethod+>;andb $-, (%esi);testl %ebx, %ebx;jne  <IoWMIExecuteMethod+>;pushl %ebx": 1,
                "jne  <IoWMIExecuteMethod+>;pushl %ebx;pushl %esi;calll  <IoWMIExecuteMethod+>;movl %eax, %edi": 1,
                "movl %eax, %edi;pushl $;pushl $;pushl %esi;calll - <IoWMIExecuteMethod+>": 1,
                "testl %eax, %eax;je  <IoWMIExecuteMethod+>;leal (%esi), %ecx;movl %ecx, (%ebp);leal (%esi), %ecx": 1,
                "testb $, (%esi);leal -(%eax), %ebx;jne  <IoWMIExecuteMethod+>;pushl %esi;calll - <IoWMIExecuteMethod+>": 1,
                "movl %eax, %edi;calll - <InterlockedPushEntrySList>;movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "je  <IoWMIExecuteMethod+>;cmpl $, %edi;jne  <IoWMIExecuteMethod+>;andl $, (%ebp);jmp  <IoWMIExecuteMethod+>": 1,
                "movl %eax, (%ebx);leal (%esi), %ecx;calll - <InterlockedPopEntrySList>;testl %eax, %eax;je  <IoWMIExecuteMethod+>": 1,
                "calll - <InterlockedPopEntrySList>;testl %eax, %eax;je  <IoWMIExecuteMethod+>;jmp - <IoWMIExecuteMethod+>;jmp  <IoWMIExecuteMethod+>": 1,
                "jmp - <IoWMIExecuteMethod+>;jmp  <IoWMIExecuteMethod+>;movl (%esi), %eax;testl %eax, %eax;je  <IoWMIExecuteMethod+>": 1,
                "andl $, (%esi);movl %edi, %eax;shrl $, %eax;pushl %eax;pushl %edi": 1,
                "pushl %eax;calll - <KeSetPriorityThread>;movl %edi, -(%ebp);jmp  <IoWMIExecuteMethod+>;testb $, (%esi)": 1,
                "cmpl %ebx, -(%ebp);jb  <IoWMIExecuteMethod+>;movl $, (%ebp);movl %edi, -(%ebp);jmp  <IoWMIExecuteMethod+>": 1,
                "movl %ebx, (%esi);calll - <IoWMIExecuteMethod+>;cmpl %edi, (%esi);jne - <IoWMIExecuteMethod+>;cmpl $, %ebx": 1,
                "jle  <IoWMIExecuteMethod+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "jg - <IoWMIExecuteMethod+>;movl (%esi), %eax;cmpl %edi, %eax;je  <IoWMIExecuteMethod+>;pushl $": 1,
                "pushl %edi;pushl %edi;leal (%esi), %eax;pushl %eax;movl %edi, (%esi)": 1,
                "andl $, %eax;addb %bh, (%eax);subl $, %eax;addb %dh, (%eax,%eax);js  <IoWMIExecuteMethod+>": 1,
                "movl (%ebp), %edx;pushl %esi;xorl %esi, %esi;testl %edx, %edx;je  <IoWMIExecuteMethod+>": 1,
                "pushl %edx;pushl %eax;calll - <RtlCreateUnicodeString>;movzbl %al, %esi;jmp  <IoWMIExecuteMethod+>": 1,
                "pushl %edx;pushl %eax;calll - <memmove>;addl $, %esp;movl %esi, %eax": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;movl %eax, -(%ebp);jne  <IoWMIExecuteMethod+>": 1,
                "movzwl %di, %eax;movl %eax, -(%ebp);addl $-, %eax;cmpl %eax, (%esi);jae  <IoWMIExecuteMethod+>": 1,
                "cmpl $, -(%ebp);jne  <IoWMIExecuteMethod+>;pushl %esi;calll ;testl %eax, %eax": 1,
                "andl $, (%eax);movl $, (%eax);movl %esi, (%eax);movl $, (%eax);addl $, %eax": 1,
                "rep  stosb %al, %es:(%edi);movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx)": 1,
                "movzwl (%esi), %eax;leal (%edi,%eax), %eax;movl %eax, (%ebx);movzwl (%esi), %ecx;movl (%esi), %esi": 1,
                "movl %eax, (%ebx);movzwl (%esi), %ecx;movl (%esi), %esi;incl %ecx;incl %ecx": 1,
                "leal (%ebx), %eax;andl $, %ecx;pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlQueryTimeZoneInformation>": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlQueryTimeZoneInformation>;movl -(%ebp), %ecx;movl (%ebp), %esi": 1,
                "calll - <RtlQueryTimeZoneInformation>;movl -(%ebp), %ecx;movl (%ebp), %esi;movl $, (%ebx);movl , %eax": 1,
                "movl %eax, (%ebp);je  <IoWMIExecuteMethod+>;pushl %ebx;pushl %esi;calll - <ExFreePoolWithTag>": 1,
                "pushl %esi;andl $-, %ecx;addl $, %ecx;orl $, %ecx;pushl %ecx": 1,
                "orl $, %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <ZwCreateFile>": 1,
                "movl -(%ebp), %ecx;movl %eax, %ebx;cmpl %esi, %ebx;jl  <IoWMIExecuteMethod+>;cmpl %esi, %edi": 1,
                "movl %esi, (%eax);jmp  <IoWMIExecuteMethod+>;movl (%ebp), %eax;cmpl %esi, %eax;je  <IoWMIExecuteMethod+>": 1,
                "pushl $;pushl %edi;calll - <IoWMIExecuteMethod+>;movl %eax, %ebx;testl %ebx, %ebx": 3,
                "movw %ax, (%esi);jmp  <IoWMIExecuteMethod+>;leal -(%ebp), %eax;pushl %eax;pushl (%esi)": 1,
                "popl %ebx;popl %esi;leave;retl $;andl $, %eax": 1,
                "addb %dh, (%eax,%eax);addb %ah, (%ecx);arpl %ax, (%eax);addb %ch, %gs:(%esi);addb %ch, (%eax,%eax)": 1,
                "popal;addb %ah, (%ebx);addb %ch, %gs:(%esi);addb %ch, (%eax,%eax);addb %ah, (%edi)": 2,
                "movzwl (%edi,%eax), %edi;leal (%edi,%eax), %eax;cmpl %ecx, %eax;ja  <IoWMIExecuteMethod+>;cmpb %dl, (%ebp)": 1,
                "ja  <IoWMIExecuteMethod+>;movl (%ebp), %eax;leal (%eax), %edi;andl $-, %edi;cmpl %eax, %edi": 1,
                "cmpl (%ebp), %esi;jb  <IoWMIExecuteMethod+>;cmpl %esi, %eax;jbe  <IoWMIExecuteMethod+>;movl $, %eax": 1,
                "jb  <IoWMIExecuteMethod+>;cmpl %esi, %eax;jbe  <IoWMIExecuteMethod+>;movl $, %eax;jmp  <IoWMIExecuteMethod+>": 1,
                "movl (%ebp), %esi;movl %ecx, -(%ebp);movl (%ebp), %ecx;pushl %edi;movl %eax, -(%ebp)": 1,
                "andl $, -(%ebp);andl $, -(%ebp);testl %edi, %edi;movl (%ebp), %eax;movl %ebx, -(%ebp)": 1,
                "xorl %eax, %eax;cmpl %eax, -(%ebp);popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "pushl (%ebp);pushl -(%ebp);pushl -(%ebp);calll - <RtlUpcaseUnicodeStringToOemString+>;testl %eax, %eax": 1,
                "calll - <RtlUpcaseUnicodeStringToOemString+>;testl %eax, %eax;jl  <IoWMIExecuteMethod+>;movl (%esi), %eax;testb $, %ah": 1,
                "leal -(%ebp), %eax;cmpl %eax, %esi;jne  <IoWMIExecuteMethod+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "addl $, %eax;andl $-, %eax;addl %eax, -(%ebp);movb $, -(%ebp);jmp  <IoWMIExecuteMethod+>": 2,
                "jne - <IoWMIExecuteMethod+>;movl -(%ebp), %eax;addl $, %eax;andl $-, %eax;addl %eax, -(%ebp)": 2,
                "cmpb $, -(%ebp);je  <IoWMIExecuteMethod+>;movl -(%ebp), %ecx;pushl $;popl %eax": 1,
                "movw (%eax), %cx;movw %cx, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);jmp  <IoWMIExecuteMethod+>;movl (%ebx,%eax,), %edx;movl %edx, -(%ebp);movl (%ebx,%eax,), %edx": 1,
                "movl %edx, -(%ebp);movl (%ecx,%eax,), %eax;movl %eax, -(%ebp);andl $, -(%ebp);movzwl -(%ebp), %esi": 1,
                "addl $, %esi;andl $-, %esi;cmpb $, -(%ebp);jne  <IoWMIExecuteMethod+>;movl (%ebp), %eax": 1,
                "cmpb $, -(%ebp);jne  <IoWMIExecuteMethod+>;movl (%ebp), %eax;cmpl %esi, %eax;jb  <IoWMIExecuteMethod+>": 1,
                "je  <IoWMIExecuteMethod+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <IoWMIExecuteMethod+>;movl $, -(%ebp);jmp  <IoWMIExecuteMethod+>": 1,
                "movl $, (%ebx);movl %esi, (%ebx);leal (%ebx), %edi;movw -(%ebp), %cx;movw %cx, (%edi)": 1,
                "andl $-, %eax;addl %eax, -(%ebp);jmp  <IoWMIExecuteMethod+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "addl %ebx, -(%ebp);movl -(%ebp), %eax;movl (%eax), %ebx;testl %ebx, %ebx;jne - <IoWMIExecuteMethod+>": 1,
                "je  <IoWMIExecuteMethod+>;pushl %edx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "cmpl %edx, (%eax);jne  <IoWMIExecuteMethod+>;movl (%esi), %ecx;cmpw $-, %cx;movl (%esi), %esi": 1,
                "movl %ebx, -(%ebp);leal (%esi), %edi;movl %eax, (%ebp);calll - <IoGetAttachedDeviceReference+>;movl , %eax": 1,
                "movl %eax, (%ebp);calll - <IoGetAttachedDeviceReference+>;movl , %eax;movl (%eax), %ecx;cmpl %eax, %ecx": 1,
                "je  <IoWMIExecuteMethod+>;movl %edi, %edx;incl -(%ebp);cmpl (%ebp), %ebx;jae  <IoWMIExecuteMethod+>": 1,
                "movl %ebx, -(%ebp);je  <IoWMIExecuteMethod+>;leal (%esi), %ecx;movl %ecx, (%ebp);incl -(%ebp)": 1,
                "leal (%esi), %ecx;movl %ecx, (%ebp);incl -(%ebp);cmpl (%ebp), %ebx;jae  <IoWMIExecuteMethod+>": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%esi);leal (%ebx,%ebx,), %eax;movl %ebx, (%esi)": 1,
                "pushl %eax;calll - <ObReferenceObjectByHandle>;testl %eax, %eax;movl %eax, -(%ebp);jl  <IoWMIExecuteMethod+>": 1,
                "movl (%eax), %eax;cmpl %ecx, %eax;je  <IoWMIExecuteMethod+>;jmp - <IoWMIExecuteMethod+>;jmp  <IoWMIExecuteMethod+>": 2,
                "cmpl %ecx, %eax;je  <IoWMIExecuteMethod+>;jmp - <IoWMIExecuteMethod+>;jmp  <IoWMIExecuteMethod+>;movb $, (%esi)": 1,
                "pushl $;pushl $;calll - <KeReleaseMutex>;jmp  <IoWMIExecuteMethod+>;movl $, -(%ebp)": 1,
                "addl $, %esi;movl (%esi), %eax;leal -(%esi), %ecx;pushl %ecx;movl %eax, %esi": 1,
                "movl (%esi), %eax;cmpl %esi, %eax;jne - <IoWMIExecuteMethod+>;popl %esi;popl %ebp": 1,
                "orl $, (%esi);cmpl $, (%esi);je  <IoWMIExecuteMethod+>;pushl %esi;calll - <IoGetDeviceProperty+>": 1,
                "pushl %esi;pushl %edi;calll - <ExFreePoolWithTag>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "pushl %esi;pushl -(%ebp);calll - <ZwRestoreKey+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "calll - <ObfDereferenceObject>;movl (%esi), %ecx;calll - <ObfDereferenceObject>;pushl $;pushl %edi": 1,
                "calll  <IoWMIExecuteMethod+>;testl %eax, %eax;movl %eax, -(%ebp);je  <IoWMIExecuteMethod+>;movl (%esi), %eax": 1,
                "je  <IoWMIExecuteMethod+>;movl (%esi), %eax;andl $, %eax;movl %eax, -(%ebp);jne  <IoWMIExecuteMethod+>": 1,
                "rep  stosb %al, %es:(%edi);addl $, %esi;movl %edx, %eax;movl (%ebp), %edx;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);leal (%ebx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "testb $, (%ebx);je  <IoWMIExecuteMethod+>;movl (%ebx), %eax;pushl $;pushl %ebx": 1,
                "movl (%ebx), %eax;pushl $;pushl %ebx;movl %eax, -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl $;pushl %ebx;calll - <ExFreePoolWithTag>;xorl %ebx, %ebx;jmp  <IoWMIExecuteMethod+>": 1,
                "jmp  <IoWMIExecuteMethod+>;movl $, %edi;jmp - <IoWMIExecuteMethod+>;movl (%esi), %eax;andl $, %eax": 1,
                "testl %edi, %edi;je  <IoWMIExecuteMethod+>;movl (%ebx), %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "testb $, %cl;je  <IoWMIExecuteMethod+>;movl (%ebx), %eax;testb $, %al;je  <IoWMIExecuteMethod+>": 1,
                "testb $, %al;je  <IoWMIExecuteMethod+>;pushl %esi;calll - <RtlUpcaseUnicodeStringToOemString+>;movl (%esi), %ecx": 1,
                "rep  movsb (%esi), %es:(%edi);calll - <RtlUpcaseUnicodeStringToOemString+>;movl -(%ebp), %eax;movl -(%ebp), %esi;movl %eax, -(%ebp)": 1,
                "leal (%eax,%eax), %eax;popl %ecx;movl %eax, -(%ebp);movl (%ebx), %eax;incl %eax": 1,
                "calll - <wcscpy>;popl %ecx;popl %ecx;jmp - <IoWMIExecuteMethod+>;testl $, %ecx": 1,
                "pushl -(%ebp);leal (%esi), %edi;pushl %edi;calll - <wcscpy>;leal -(%ebp), %eax": 1,
                "jmp - <IoWMIExecuteMethod+>;movl (%ebx), %eax;testb $, %al;je  <IoWMIExecuteMethod+>;andl $, (%ebx)": 1,
                "jmp  <IoWMIExecuteMethod+>;testb $, %al;je  <IoWMIExecuteMethod+>;andl $, (%ebx);testl %esi, %esi": 1,
                "pushl $;calll - <IoGetDeviceProperty+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi": 1,
                "calll - <IoGetDeviceProperty+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "rep  stosl %eax, %es:(%edi);movl (%ebp), %eax;movl %esi, (%ebx);movl $, (%ebx);leal (%eax), %esi": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl (%ebp);movl %eax, (%ebx);calll - <RtlValidRelativeSecurityDescriptor+>": 1,
                "pushl %ebx;pushl (%ebp);movl %eax, (%ebx);calll - <RtlValidRelativeSecurityDescriptor+>;testl %eax, %eax": 1,
                "calll - <RtlValidRelativeSecurityDescriptor+>;movl %eax, (%ebp);pushl $;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <IoWMIExecuteMethod+>;movl (%esi), %edx;notl %edx": 1,
                "testl %eax, %eax;je  <IoWMIExecuteMethod+>;movl (%esi), %edx;notl %edx;andl $, %edx": 1,
                "je  <IoWMIExecuteMethod+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>;movl (%esi), %esi": 1,
                "pushl %esi;pushl $;calll - <IoGetAttachedDeviceReference+>;movl , %eax;movl (%eax), %edx": 1,
                "movl %eax, %edx;testl %edx, %edx;movl %edx, -(%ebp);je  <IoWMIExecuteMethod+>;movl (%ebp), %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;cmpb $, (%ebp);rep  movsb (%esi), %es:(%edi);je  <IoWMIExecuteMethod+>": 1,
                "testl %ecx, %ecx;je  <IoWMIExecuteMethod+>;andl $, -(%ebp);testl %ecx, %ecx;jbe  <IoWMIExecuteMethod+>": 1,
                "je  <IoWMIExecuteMethod+>;andl $, -(%ebp);testl %ecx, %ecx;jbe  <IoWMIExecuteMethod+>;pushl %ebx": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;testb $, %cl;je  <IoWMIExecuteMethod+>;movl (%eax), %eax": 1,
                "movl (%ebp), %esi;movl %edi, (%ebx);movl $, (%ebx);movl $, (%ebx);leal (%ebx), %edi": 1,
                "addl $-, %edx;movw %dx, (%esi);movl (%eax), %eax;pushl (%eax,%ecx,);addl $, %esi": 1,
                "testb $, %cl;je  <IoWMIExecuteMethod+>;movl (%eax), %eax;movl (%eax), %ecx;addl -(%ebp), %ecx": 1,
                "pushl %ebx;calll - <ExFreePoolWithTag>;incl -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "je  <IoWMIExecuteMethod+>;pushl $;leal (%esi), %edi;movl (%ebp), %esi;popl %ecx": 1,
                "popl %ebx;popl %ebp;retl $;leal (%edx), %eax;movl %eax, (%ebp)": 1,
                "calll - <IoGetDeviceProperty+>;xorl %eax, %eax;jmp  <IoWMIExecuteMethod+>;pushl $;pushl %edi": 1,
                "pushl $;calll - <IoGetDeviceProperty+>;movl (%ebp), %eax;movl %esi, (%eax);movb $, %al": 1,
                "movl (%esi), %eax;pushl %edi;movl (%ebp), %edi;movl (%edi), %ecx;xorl %eax, %ecx": 1,
                "movl (%ebp), %edi;movl (%edi), %ecx;xorl %eax, %ecx;testl $, %ecx;jne  <IoWMIExecuteMethod+>": 1,
                "pushl (%eax,%ebx,);calll - <wcscmp>;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "pushl %edi;calll - <IoWMIExecuteMethod+>;movl %eax, %esi;testl %esi, %esi;je  <IoWMIExecuteMethod+>": 1,
                "movl (%esi), %eax;andl $, (%ebp);testl %eax, %eax;je  <IoWMIExecuteMethod+>;movl %eax, (%ebp)": 1,
                "movl %ecx, (%eax);pushl (%edi);pushl (%edi);pushl %esi;pushl (%ebp)": 1,
                "pushl %ebx;calll - <IoGetDeviceProperty+>;jmp  <IoWMIExecuteMethod+>;pushl %esi;pushl %ebx": 1,
                "calll - <IoWMIExecuteMethod+>;movl %eax, %edi;movl %edi, %eax;popl %edi;popl %esi": 1,
                "pushl %eax;leal -(%ebp), %eax;jmp  <IoWMIExecuteMethod+>;pushl (%ebp);pushl %esi": 1,
                "incl (%ebp);movl (%ebp), %eax;addl $, (%ebp);cmpl (%esi), %eax;jb - <IoWMIExecuteMethod+>": 1,
                "rep  cmpsl %es:(%edi), (%esi);jne  <IoWMIExecuteMethod+>;movl (%ebp), %eax;movl -(%ebp), %ecx;pushl $": 1,
                "pushl ;pushl %ecx;pushl %eax;calll - <MmMapIoSpace>;movl (%ebp), %ecx": 1,
                "movl %eax, (%edx);movl (%ecx), %eax;jmp  <IoWMIExecuteMethod+>;movl $, %esi;jmp  <IoWMIExecuteMethod+>": 1,
                "jae  <IoWMIExecuteMethod+>;movl %eax, -(%ebp);movb (%eax), %dl;cmpb (%ebp), %dl;jne  <IoWMIExecuteMethod+>": 1,
                "orl $-, -(%ebp);jmp  <IoWMIExecuteMethod+>;movzbl (%eax), %edx;addl %edx, %eax;movl %eax, -(%ebp)": 1,
                "xorl %ecx, %ecx;pushl $;pushl $;pushl %ecx;pushl %eax": 1,
                "calll - <MmMapIoSpace>;movl %eax, %esi;movl %esi, -(%ebp);leal (%esi), %eax;movl %esi, %ecx": 1,
                "movzbl (%edx,%edi), %edx;addl -(%ebp), %edx;movb %dl, -(%ebp);incl -(%ebp);xorl %ebx, %ebx": 1,
                "movl (%ecx), %eax;movl %eax, (%edx);movb (%ecx), %al;movl (%ebp), %edx;movb %al, (%edx)": 1,
                "movl %eax, (%edx);movb (%ecx), %al;movl (%ebp), %edx;movb %al, (%edx);movzwl (%ecx), %eax": 1,
                "calll - <MmUnmapIoSpace>;jmp  <IoWMIExecuteMethod+>;movl $, -(%ebp);movl -(%ebp), %eax;calll - <_CIsqrt+>": 1,
                "calll - <RtlCompareMemory>;cmpl %edi, %eax;jne  <IoWMIExecuteMethod+>;cmpl $, %esi;jne  <IoWMIExecuteMethod+>": 2,
                "jne  <IoWMIExecuteMethod+>;cmpl $, %edx;jne  <IoWMIExecuteMethod+>;cmpl $, -(%ebp);jb  <IoWMIExecuteMethod+>": 1,
                "jb  <IoWMIExecuteMethod+>;incl -(%ebp);cmpl $, (%ebp);je  <IoWMIExecuteMethod+>;movl (%ebp), %edi": 1,
                "movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %ecx;movl %ecx, (%eax);addl $, %eax": 2,
                "movl %eax, (%ebp);subl %esi, -(%ebp);addl %esi, %ebx;incl -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, %ebx;cmpl %edi, %ebx;jl  <IoWMIExecuteMethod+>;movl -(%ebp), %esi;shll $, %esi": 1,
                "jne  <IoWMIExecuteMethod+>;pushl %eax;pushl $;calll - <KeReleaseMutex>;movl $, %eax": 1,
                "pushl -(%ebp);calll - <IoWMIExecuteMethod+>;movl %eax, %ebx;testl %ebx, %ebx;jl  <IoWMIExecuteMethod+>": 1,
                "movl %ebx, -(%ebp);xorl %edi, %edi;jmp  <IoWMIExecuteMethod+>;pushl %edi;pushl %edi": 1,
                "pushl -(%ebp);calll - <MmUnmapIoSpace>;cmpl $, %ebx;setne %al;movb %al, ": 1,
                "movl %eax, -(%ebp);movb (%ecx), %al;cmpb $, %al;jb  <IoWMIExecuteMethod+>;movzbw (%ecx), %di": 1,
                "cmpb $, %bl;movl (%ebp), %eax;movl -(%ebp), %esi;movw %dx, (%eax);leal (%edi,%eax), %edx": 1,
                "pushl -(%ebp);xorl %eax, %eax;pushl %eax;pushl -(%ebp);calll - <MmMapIoSpace>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;pushl %edx;andl $, %ecx;pushl %eax": 1,
                "jmp  <IoWMIExecuteMethod+>;cmpl $, -(%ebp);je  <IoWMIExecuteMethod+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl $;movb $, ;calll - <KeReleaseMutex>;xorl %eax, %eax;retl $": 1,
                "nop;nop;cmpl $, ;je  <IoWMIExecuteMethod+>;cmpb $, ": 1,
                "leal (,%eax,), %eax;pushl %eax;pushl $;pushl $;calll ": 1,
                "calll ;andl $, ;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 1,
                "je  <IoWMIExecuteMethod+>;testb $, (%edi);je  <IoWMIExecuteMethod+>;calll - <IoWMIExecuteMethod+>;movl , %edi": 1,
                "pushl $;xorl %eax, %eax;popl %ecx;rep  stosl %eax, %es:(%edi);andl %eax, ": 1,
                "testb $, (%esi);je  <IoWMIExecuteMethod+>;orl %edi, %eax;orl %edi, (%esi);movl %eax, (%esi)": 1,
                "je  <IoWMIExecuteMethod+>;orl %edi, %eax;orl %edi, (%esi);movl %eax, (%esi);cmpl $, (%ebp)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jl  <IoWMIExecuteMethod+>;testb $, (%esi);je  <IoWMIExecuteMethod+>": 2,
                "testb $, (%esi);je  <IoWMIExecuteMethod+>;movl %fs:, %eax;cmpb $, (%eax);je  <IoWMIExecuteMethod+>": 1,
                "jne  <IoWMIExecuteMethod+>;movl $, -(%ebp);jmp  <IoWMIExecuteMethod+>;calll - <IoWMIExecuteMethod+>;movb $, -(%ebp)": 1,
                "jne  <IoWMIExecuteMethod+>;testb $, (%esi);je  <IoWMIExecuteMethod+>;calll - <MmIsNonPagedSystemAddressValid+>;cmpl $, -(%ebp)": 1,
                "jge  <IoWMIExecuteMethod+>;cmpb $, -(%ebp);je  <IoWMIExecuteMethod+>;calll - <IoWMIExecuteMethod+>;cmpb $, -(%ebp)": 1,
                "xorb %al, %al;jmp  <ExAcquireRundownProtectionEx+>;movb $, %al;popl %esi;popl %ebx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);cmpl %esi, %eax": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;pushl $;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "movl %edx, %ecx;shll %cl, %eax;pushl %eax;calll - <KeSetSystemAffinityThread>;pushl $": 1,
                "calll - <ExfReleasePushLock>;addl $, %esi;cmpl %ebx, %esi;jb - <ExReleaseRundownProtectionEx+>;popl %edi": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 2,
                "movl (%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne - <ExReleaseRundownProtectionEx+>;andl $-, %ebx": 1,
                "calll - <ExfAcquirePushLockExclusive>;movl $, %ecx;calll - <ExfReleasePushLock>;incl (%esi);jne  <ExReleaseRundownProtectionEx+>": 1,
                "movb $, %cl;movb $, (%esi);calll *;testl %ebx, %ebx;jne  <ExReleaseRundownProtectionEx+>": 1,
                "imull $, %eax, %eax;xorl %edx, %edx;pushl $;popl %esi;divl %esi": 1,
                "divl %esi;incl %ecx;imull $, %ecx, %ecx;cmpl %eax, %ecx;jbe  <ExReleaseRundownProtectionEx+>": 1,
                "pushl %ebx;calll - <PsReturnProcessNonPagedPoolQuota>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 2,
                "je  <ExReleaseRundownProtectionEx+>;movl (%ebp), %eax;incl (%eax);movl %esi, -(%ebp);movl (%esi), %eax": 2,
                "pushl %esi;pushl %ebx;calll - <SeCreateClientSecurityFromSubjectContext+>;jmp - <ExReleaseRundownProtectionEx+>;nop": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);jne  <ExReleaseRundownProtectionEx+>;movl %fs:, %eax;pushl (%ebp)": 1,
                "jne  <ExReleaseRundownProtectionEx+>;incl (%edi);jmp  <ExReleaseRundownProtectionEx+>;pushl %ebx;pushl (%ebp)": 1,
                "movl $, %edi;pushl %edi;pushl (%eax);calll - <PsSetProcessWindowStation+>;movl %eax, %ebx": 1,
                "movl (%ebp), %eax;jne  <ExReleaseRundownProtectionEx+>;addl $, %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "je  <ExReleaseRundownProtectionEx+>;movb $, %cl;movb %cl, (%esi);calll *;movl $, %eax": 1,
                "calll - <RtlAreAllAccessesGranted+>;movl %eax, %ebx;testl %ebx, %ebx;je  <ExReleaseRundownProtectionEx+>;pushl %esi": 1,
                "jne  <ExReleaseRundownProtectionEx+>;cmpl $, -(%ebp);jne  <ExReleaseRundownProtectionEx+>;movl -(%ebp), %eax;movl %eax, ": 1,
                "movl %eax, ;pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %ecx;movl %esi, %eax": 1,
                "popal;addb %ch, (%ebp);addb %dh, %gs:(%edi);outsl (%esi), %dx;addb %dh, (%edx)": 2,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl $, %esi;xorl %edi, %edi": 1,
                "calll - <ZwOpenKey>;movl %eax, %ebx;cmpl $, %ebx;jne  <ExReleaseRundownProtectionEx+>;leal -(%ebp), %eax": 1,
                "shrl %ecx;movl $, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);adcl %ecx, %ecx": 1,
                "leal -(%ebp,%edx,), %eax;movw %si, (%eax);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);calll - <ZwOpenKey>;movl %eax, %edi;testl %edi, %edi;jl  <ExReleaseRundownProtectionEx+>": 1,
                "calll - <ZwOpenKey>;movl %eax, %edi;testl %edi, %edi;jl  <ExReleaseRundownProtectionEx+>;pushl $": 2,
                "pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp);movl %ecx, -(%ebp);calll - <ZwOpenKey>": 2,
                "jbe  <ExReleaseRundownProtectionEx+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "andl $, -(%ebp);pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>": 1,
                "jae  <ExReleaseRundownProtectionEx+>;je  <ExReleaseRundownProtectionEx+>;addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx)": 4,
                "addb %dh, (%ebp);jo  <ExReleaseRundownProtectionEx+>;jae  <ExReleaseRundownProtectionEx+>;addb %al, (%eax);int": 1,
                "je  <ExReleaseRundownProtectionEx+>;movl (%ebp), %edx;leal (,%eax,), %eax;movl %eax, (%edx);andl $, (%ecx)": 1,
                "shll $, %eax;movl %eax, (%ecx);movl %edx, (%ecx);jmp  <ExReleaseRundownProtectionEx+>;movl (%ebp), %eax": 1,
                "rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);calll  <ExReleaseRundownProtectionEx+>;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax;movb %bl, -(%ebp);xorl %edi, %edi": 1,
                "je  <ExReleaseRundownProtectionEx+>;incl %edi;cmpw %bx, (%esi,%edi,);jne - <ExReleaseRundownProtectionEx+>;cmpl $, %edi": 1,
                "pushl -(%ebp);calll - <ZwQueryValueKey>;testl %eax, %eax;jl  <ExReleaseRundownProtectionEx+>;cmpl $, -(%ebp)": 1,
                "addb %ah, (%edi);jne  <ExReleaseRundownProtectionEx+>;popal;addb %ah, (%edi);addb %dh, %gs:(%ebx)": 1,
                "movl $, %eax;jmp  <ExReleaseRundownProtectionEx+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "jl  <ExReleaseRundownProtectionEx+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "cmpl $, %ecx;ja  <ExReleaseRundownProtectionEx+>;addl $, %ecx;jmp  <ExReleaseRundownProtectionEx+>;addl $, %ecx": 1,
                "decl %eax;decl %eax;leal -(%ebp), %ecx;shrl $, %edi;cmpl %ecx, %eax": 1,
                "addb %dh, (%ebx);imull $, (%eax), %eax;addb %ch, (%edi);jo  <ExReleaseRundownProtectionEx+>;addb %al, (%eax)": 1,
                "pushl $;calll - <_CIsqrt+>;xorl %edi, %edi;movl (%ebp), %esi;movl %edi, (%esi)": 5,
                "pushl $;pushl %esi;calll - <ObOpenObjectByName+>;cmpl %ebx, %eax;jge  <ExReleaseRundownProtectionEx+>": 1,
                "movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>;movl %eax, %edi;cmpl %ebx, %edi;jne  <ExReleaseRundownProtectionEx+>": 1,
                "pushl %ebx;pushl -(%ebp);pushl $;jmp  <ExReleaseRundownProtectionEx+>;movl (%esi), %eax": 1,
                "pushl %eax;jmp - <ExReleaseRundownProtectionEx+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <NtClose>;incl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl %edi;pushl %ebx;pushl -(%ebp);pushl (%esi)": 1,
                "pushl %eax;pushl %ebx;pushl (%esi);calll - <NtOpenThread+>;cmpl %ebx, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <PsCreateSystemThread>;testl %eax, %eax;jl  <ExReleaseRundownProtectionEx+>": 2,
                "je  <ExReleaseRundownProtectionEx+>;pushl %eax;calll - <NtClose>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <wcscmp>;testl %eax, %eax;popl %ecx;popl %ecx;je  <ExReleaseRundownProtectionEx+>": 2,
                "movl , %edi;pushl $;popl %ecx;leal -(%ebp), %esi;rep  movsl (%esi), %es:(%edi)": 1,
                "movsw (%esi), %es:(%edi);movb %bl, -(%ebp);popl %edi;calll - <FsRtlInitializeOplock+>;movl , %eax": 1,
                "movl , %eax;pushl (%eax);leal (%eax), %ecx;pushl %ecx;pushl (%eax)": 2,
                "pushl ;movb $, -(%ebp);calll - <FsRtlIsNameInExpression+>;cmpl %ebx, %eax;jge  <ExReleaseRundownProtectionEx+>": 2,
                "leal -(%ebp), %eax;pushl $;pushl %eax;je  <ExReleaseRundownProtectionEx+>;calll - <RtlInitUnicodeString>": 1,
                "pushl %eax;je  <ExReleaseRundownProtectionEx+>;calll - <RtlInitUnicodeString>;movl , %eax;pushl (%eax)": 1,
                "leal -(%ebp), %eax;pushl %ebx;pushl %eax;pushl ;calll - <FsRtlIsNameInExpression+>": 1,
                "pushl %ebx;pushl %eax;pushl ;calll - <FsRtlIsNameInExpression+>;cmpl %ebx, %eax": 1,
                "jne  <ExReleaseRundownProtectionEx+>;pushl %eax;calll - <NtClose>;pushl $;leal -(%ebp), %eax": 1,
                "xorl %ebx, %ebx;pushl %esi;movb %bl, -(%ebp);calll - <ExAcquireResourceSharedLite>;movl , %eax": 1,
                "je  <NtShutdownSystem+>;jb  <NtShutdownSystem+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%ebx)": 1,
                "jb  <NtShutdownSystem+>;popl %esp;addb %al, (%ebp);js  <NtShutdownSystem+>;addb %ah, %gs:(%ebx)": 1,
                "movl %ecx, %esi;jne  <ExSetTimerResolution+>;cmpl %eax, ;je  <ExSetTimerResolution+>;decl ": 1,
                "jae  <ExSetTimerResolution+>;movl %eax, %edi;cmpl %ecx, %edi;jae  <ExSetTimerResolution+>;pushl $": 1,
                "calll - <KeRevertToUserAffinityThread>;movl %esi, ;popl %edi;calll - <RtlxUnicodeStringToOemSize+>;movl %esi, %eax": 1,
                "pushl $;leal (%ebp), %eax;pushl %eax;movl %edi, -(%ebp);movl %ebx, -(%ebp)": 2,
                "jl  <ExSetTimerResolution+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 3,
                "movl $, ;jne  <ExSetTimerResolution+>;cmpb %bl, ;jne  <ExSetTimerResolution+>;movl , %eax": 1,
                "cmpl $, %ecx;jne  <ExSetTimerResolution+>;xorl %ecx, %ecx;andl $, %eax;testl %edi, %edx": 1,
                "jne  <ExSetTimerResolution+>;orl %eax, -(%ebp);jmp  <ExSetTimerResolution+>;shrl $, %esi;notl %esi": 1,
                "orl %eax, -(%ebp);jmp  <ExSetTimerResolution+>;shrl $, %esi;notl %esi;andl $, %esi": 1,
                "calll - <ExReleaseResourceLite>;jmp  <ExSetTimerResolution+>;cmpl $, (%ebp);jne  <ExSetTimerResolution+>;testb $, ": 1,
                "cmpl $, (%ebp);jne  <ExSetTimerResolution+>;testb $, ;je  <ExSetTimerResolution+>;pushl %ebx": 1,
                "addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <ExSetTimerResolution+>;jns  <ExSetTimerResolution+>;popl %esp": 3,
                "je  <ExSetTimerResolution+>;jb  <ExSetTimerResolution+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%ebx)": 1,
                "outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%edi);imull $, (%eax), %eax;outsl (%esi), %dx": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %ebx;addb %ch, (%eax);jne  <ExSetTimerResolution+>": 1,
                "pushl %ebx;addb %ch, (%eax);jne  <ExSetTimerResolution+>;je  <ExSetTimerResolution+>;addb %ch, %fs:(%edi)": 1,
                "addb %ch, (%eax);jne  <ExSetTimerResolution+>;je  <ExSetTimerResolution+>;addb %ch, %fs:(%edi);ja  <ExSetTimerResolution+>": 1,
                "je  <ExSetTimerResolution+>;addb %ch, %fs:(%edi);ja  <ExSetTimerResolution+>;outsb (%esi), %dx;addb %dl, (%eax,%eax)": 1,
                "outsb (%esi), %dx;addb %dl, (%eax,%eax);addb %ch, (%ebp);addb %al, %gs:(%eax);addb %cl, %ah": 1,
                "xorl %edi, %edi;cmpl %edi, %ebx;je  <ExSetTimerResolution+>;movl %fs:, %eax;movb (%eax), %al": 1,
                "je  <ExSetTimerResolution+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax;cmpl %eax, %ebx;jb  <ExSetTimerResolution+>": 1,
                "cmpl %eax, %ebx;jb  <ExSetTimerResolution+>;movl %edi, (%eax);movl , %eax;movl (%ebp), %ebx": 1,
                "movl , %eax;movl (%ebp), %ebx;cmpl %edi, %ebx;je  <ExSetTimerResolution+>;movl %ebx, -(%ebp)": 1,
                "xorl %esi, %esi;incl %esi;pushl %esi;calll - <RtlxUnicodeStringToOemSize+>;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);calll - <SeAssignSecurityEx+>;calll - <RtlxUnicodeStringToOemSize+>": 1,
                "movl $, %esi;pushl $;calll - <RtlxUnicodeStringToOemSize+>;movb , %bl;cmpb $, ": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlTimeFieldsToTime>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;movl $, %ecx;movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "calll - <KeSetKernelStackSwapEnable>;jmp  <ExSetTimerResolution+>;leal (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "testb %al, %al;je  <ExSetTimerResolution+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "testb $, (%ebx);jne  <ExRaiseDatatypeMisalignment+>;testl $, %esi;jne  <ExRaiseDatatypeMisalignment+>;jmp  <ExRaiseDatatypeMisalignment+>": 1,
                "movl %edx, -(%ebp);cmpl %edx, -(%ebp);je  <ExRaiseDatatypeMisalignment+>;testb $, %al;jne  <ExRaiseDatatypeMisalignment+>": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl %edx, -(%ebp);cmpl %edx, (%eax);je  <ExRaiseDatatypeMisalignment+>": 1,
                "pushl %esi;calll  <RtlCompressBuffer+>;xorl %edx, %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "jmp  <ExRaiseHardError+>;pushl %ebx;movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi": 1,
                "leal -(%ebp), %eax;subl %eax, -(%ebp);movl (%ebp), %edx;xorl %eax, %eax;incl %eax": 1,
                "shll $, %eax;addl %eax, %edx;leal -(%ebp,%edx), %edx;movl %edx, (%esi,%ecx,);movzwl -(%ebp,%eax), %ecx": 1,
                "movzwl -(%ebp,%eax), %ecx;movl -(%ebp,%eax), %esi;movl %ecx, -(%ebp);movl %ecx, %ebx;shrl $, %ecx": 1,
                "jae  <ExRaiseHardError+>;jmp - <ExRaiseHardError+>;jmp  <ExRaiseHardError+>;movl %ebx, -(%ebp);leal (%ebp), %eax": 1,
                "jmp  <ExRaiseHardError+>;movl %ebx, -(%ebp);leal (%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl %eax;pushl $-;calll - <ZwFreeVirtualMemory>;movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "je  <ExRaiseHardError+>;calll - <ExRaiseDatatypeMisalignment>;leal (%esi,%ebx), %eax;cmpl %ebx, %eax;jb  <ExRaiseHardError+>": 2,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %edi;testl %edi, %edi;je  <ExRaiseHardError+>;xorl %esi, %esi": 1,
                "movl (%ebp), %edi;testl %edi, %edi;je  <ExRaiseHardError+>;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);cmpl (%ebp), %esi;jae  <ExRaiseHardError+>;xorl %eax, %eax;incl %eax": 1,
                "cmpw $, -(%ebp);je  <ExRaiseHardError+>;movzwl -(%ebp), %eax;addl %ebx, %eax;cmpl %ebx, %eax": 1,
                "addl %ebx, %eax;cmpl %ebx, %eax;jb  <ExRaiseHardError+>;cmpl , %eax;jbe  <ExRaiseHardError+>": 2,
                "subb (%edx), %ch;subb (%edx), %ch;orb (%eax), %al;addb %al, (%eax);subb (%eax), %ah": 1,
                "movl (%esi), %esi;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpb $, -(%ebp);je  <ExRaiseHardError+>": 1,
                "nop;movl -(%ebp), %esp;jmp - <ExRaiseHardError+>;movl %edi, (%ebx);movl %esi, (%ebx)": 1,
                "orl $, (%esi);subl $, %eax;movl %edi, (%esi);movl %edi, %ecx;movb $, (%eax)": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);calll - <IofCallDriver>;cmpl $, %eax": 1,
                "cmpl $, -(%ebp);jne  <ExRaiseHardError+>;cmpl %ebx, -(%ebp);jne  <ExRaiseHardError+>;cmpl %ebx, -(%ebp)": 1,
                "orl -(%ebp), %eax;jne  <ExRaiseHardError+>;movl , %eax;movl (%eax), %ecx;movl (%eax), %esi": 1,
                "calll - <DbgPrint>;addl $, %esp;cmpl %ebx, ;je  <ExRaiseHardError+>;calll - <DbgBreakPoint>": 1,
                "imull $, (%eax), %esp;outsl (%esi), %dx;jo  <ExRaiseHardError+>;outsl (%esi), %dx;andb %bl, (%eax)": 1,
                "outsl (%esi), %dx;arpl %sp, (%ecx);popl %edi;imull $, %fs:(%ebx), %esi;andb %ah, ": 1,
                "andl %ebx, (%eax);pushl %eax;incl %ebx;outsl (%esi), %dx;outsb (%esi), %dx": 1,
                "andb %ah, ;outsb (%esi), %dx;jo  <ExRaiseHardError+>;jae  <ExRaiseHardError+>;ja  <ExRaiseHardError+>": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne  <ExRaiseHardError+>;pushl $": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl %edx, %eax;jmp  <ExRaiseHardError+>": 1,
                "je  <ExRaiseHardError+>;calll - <ExRaiseDatatypeMisalignment>;movl (%ebp), %ecx;leal (%ecx,%esi), %eax;cmpl %ecx, %eax": 1,
                "testb $-, (%ebx);je  <ExRaiseHardError+>;pushl -(%ebp);pushl ;pushl ": 1,
                "testl $, %eax;je  <ExRaiseHardError+>;testl $, %eax;je  <ExRaiseHardError+>;pushl $": 1,
                "testl $, %eax;je  <ExRaiseHardError+>;pushl (%ebx);pushl (%ebx);pushl (%ebx)": 1,
                "pushl (%ebx);pushl (%ebx);pushl (%ebx);pushl (%ebx);pushl (%ebx)": 14,
                "jns  <ExRaiseHardError+>;movl (%ebp), %edx;cmpl %edx, (%ebx);jne  <ExRaiseHardError+>;testl $, %eax": 1,
                "pushl -(%ebp);pushl %ebx;calll - <MmUnmapViewInSystemSpace+>;movl %eax, -(%ebp);movl -(%ebp), %esi": 1,
                "movl %eax, -(%ebp);movl (%ebx), %ebx;movl %ebx, -(%ebp);cmpw %si, %ax;jne  <ExRaiseHardError+>": 1,
                "pushl $;movzwl (%ebp), %eax;pushl %eax;pushl (%ebp);calll - <ProbeForWrite>": 1,
                "pushl %eax;calll - <RtlxUnicodeStringToOemSize>;jmp  <ExRaiseHardError+>;movzwl -(%ebp), %eax;incl %eax": 3,
                "shrl %eax;movl %eax, %edi;movl %edi, -(%ebp);movl $, %esi;pushl %esi": 1,
                "pushl -(%ebp);calll *;movl %eax, %edi;movl %esi, %ecx;calll - <ExReleaseFastMutexUnsafe>": 1,
                "xorl %esi, %esi;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %esi, %edi": 1,
                "je  <ExRaiseHardError+>;pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;movl $, %eax": 1,
                "movw (%ebp), %ax;movw %ax, -(%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlAnsiStringToUnicodeString>;movl %eax, -(%ebp)": 1,
                "orl $-, -(%ebp);jmp  <ExRaiseHardError+>;testb $, %al;je  <ExRaiseHardError+>;calll - <ExRaiseDatatypeMisalignment>": 1,
                "jb  <ExRaiseHardError+>;cmpl , %ecx;jbe  <ExRaiseHardError+>;calll - <ExRaiseAccessViolation>;pushl -(%ebp)": 1,
                "cmpl %edi, %eax;je - <ExRaiseHardError+>;movw %bx, -(%ebp);pushl %edi;leal -(%ebp), %eax": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp);pushl %edi;cmpl %edi, %eax;jne  <ExRaiseHardError+>": 1,
                "pushl -(%ebp);pushl -(%ebp);calll *;movl %eax, %ebx;movl %esi, %ecx": 1,
                "movl (%ebp), %esi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%ebp)": 2,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $": 3,
                "movb (%eax), %al;movb %al, -(%ebp);xorl %ebx, %ebx;cmpb %bl, %al;je  <ExRaiseHardError+>": 1,
                "movl , %eax;cmpl %eax, %esi;jb  <ExRaiseHardError+>;movl %ebx, (%eax);movl (%esi), %eax": 1,
                "pushl %ebx;pushl %edi;movl %fs:, %eax;movb (%eax), %bl;pushl $": 2,
                "testl %edi, %edi;jl  <ExRaiseHardError+>;incl ;pushl %esi;movl (%ebp), %esi": 4,
                "movl (%ebp), %ecx;cmpl %edi, %ecx;je  <ExRaiseHardError+>;movl , %eax;cmpl %eax, %ecx": 1,
                "cmpl $, (%ebp);je  <ExRaiseHardError+>;movl $, %eax;orl $-, -(%ebp);jmp  <ExRaiseHardError+>": 1,
                "divl %esi;decl %eax;jmp  <ExRaiseHardError+>;incl %ecx;shrl %eax": 1,
                "shrl %cl, %edx;cmpl (%ebp), %edx;jbe  <ExRaiseHardError+>;movl $, %eax;jmp  <ExRaiseHardError+>": 1,
                "jmp  <ExRaiseHardError+>;movl %ebx, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb (%eax), %al": 1,
                "pushl (%ebp);pushl (%ebp);calll - <ProbeForWrite>;orl $-, -(%ebp);cmpl %ebx, (%ebp)": 1,
                "pushl ;calll - <SeSinglePrivilegeCheck>;cmpb %bl, %al;jne  <ExRaiseHardError+>;movl $, %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl %ebx, %eax;jl  <ExRaiseHardError+>;movl $, -(%ebp)": 1,
                "jmp  <ExRaiseHardError+>;movl $, %eax;calll - <_CIsqrt+>;retl $;int": 1,
                "addl $, %eax;pushl %eax;pushl %edi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx": 1,
                "movl %eax, (%esi);xorl %ebx, %ebx;pushl %edi;pushl $;calll - <KeReleaseMutex>": 1,
                "pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl %edi;pushl $": 1,
                "pushl (%ebp);calll - <ProbeForWrite>;movl (%ebp), %ecx;testl %ecx, %ecx;je  <ExRaiseHardError+>": 1,
                "pushl (%ebp);pushl (%ebp);calll ;jmp  <ExRaiseHardError+>;cmpb $, ": 1,
                "cmpl $, (%ebp);jne  <ExRaiseHardError+>;pushl (%ebp);calll ;andl $, -(%ebp)": 1,
                "cmpl $, %esi;jne  <ExRaiseHardError+>;movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax": 9,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl (%ebx)": 6,
                "pushl (%ebx);pushl -(%ebp);pushl %eax;pushl (%ebx);calll ": 1,
                "pushl -(%ebp);pushl (%ebx);pushl (%ebx);jmp - <ExRaiseHardError+>;cmpl $, %esi": 1,
                "pushl (%ebx);pushl (%ebx);jmp - <ExRaiseHardError+>;cmpl $, %esi;jne  <ExRaiseHardError+>": 1,
                "leal (%ebx), %eax;pushl %eax;pushl (%ebx);calll ;jmp  <ExRaiseHardError+>": 2,
                "cmpl $, %esi;je  <ExRaiseHardError+>;orl $-, -(%ebp);movl $, %eax;jmp  <ExRaiseHardError+>": 1,
                "calll - <_CIsqrt+>;andl $, -(%ebp);movl (%ebp), %ebx;testb $, %bl;je  <ExRaiseHardError+>": 1,
                "movl -(%ebp), %eax;leal (%eax), %edi;decl (%esi);movl %eax, -(%ebp);movl $, %eax": 1,
                "calll - <ExfAcquirePushLockExclusive>;movl (%edi), %eax;jmp  <ExRaiseHardError+>;nop;nop": 2,
                "movl %edi, %ecx;calll - <ExfReleasePushLock>;movl -(%ebp), %eax;testl %eax, %eax;je  <ExRaiseHardError+>": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <ExRaiseHardError+>;movl %edi, %ecx": 2,
                "movl %edi, %ecx;calll - <ExfReleasePushLock>;incl (%esi);jne  <ExRaiseHardError+>;leal (%esi), %eax": 2,
                "je  <ExRaiseHardError+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 2,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, %ecx": 1,
                "je  <ExRaiseHardError+>;movl %ebx, %ecx;calll - <ExfAcquirePushLockExclusive>;movl (%edi), %eax;jmp  <ExRaiseHardError+>": 1,
                "movl -(%ebp), %ecx;cmpl %ecx, (%ebx);je  <ExRaiseHardError+>;movl (%eax), %eax;leal -(%eax), %ebx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);leal (%esi), %eax;movl (%edi), %ecx;movl %edi, (%eax)": 1,
                "movl (%edi), %ecx;movl %edi, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, (%edi)": 1,
                "cmpl $, %eax;je  <ExRaiseHardError+>;movl %edi, %ecx;calll - <ExfReleasePushLock>;testl %ebx, %ebx": 1,
                "addl $, %ebx;pushl %ebx;calll - <KeReleaseSemaphore>;incl (%esi);jne  <ExRaiseHardError+>": 1,
                "calll - <RtlUnicodeStringToAnsiString+>;cmpl %ebx, %eax;jl  <LsaRegisterLogonProcess+>;pushl %ebx;pushl $": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl $, -(%ebp)": 1,
                "jge  <LsaRegisterLogonProcess+>;movl (%edi), %eax;cmpl %ebx, %eax;je  <LsaRegisterLogonProcess+>;pushl %eax": 1,
                "movl (%ebp), %esi;pushl $;popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, (%ecx);jl  <LsaLogonUser+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movl (%ebp), %edi": 1,
                "movl -(%ebp), %edx;movl %edx, (%ecx);movl (%ebp), %ecx;movl -(%ebp), %edx;movl %edx, (%ecx)": 1,
                "subl $, %esp;pushl %edi;pushl $;xorl %eax, %eax;popl %ecx": 1,
                "movw $, -(%ebp);movw $, -(%ebp);calll - <ZwRequestWaitReplyPort>;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);andl $, -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;leal (%esi), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;xorl %esi, %esi;testl %edi, %edi": 1,
                "pushl %eax;calll - <wcschr>;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "calll - <wcslen>;leal (%edi,%eax,), %eax;cmpl %edi, %eax;popl %ecx;jb  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %edi;je  <LsaDeregisterLogonProcess+>;movl (%esi), %ebx;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;jne  <LsaDeregisterLogonProcess+>;pushl (%esi);calll - <wcslen>;pushl (%esi)": 1,
                "pushl %eax;pushl (%esi);movl (%ebp), %eax;addl %ebx, %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, (%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "movl $, -(%ebp);pushl %esi;pushl $;pushl (%ebp);pushl (%ebp)": 1,
                "pushl -(%ebp);negl %esi;pushl (%ebp);sbbl %esi, %esi;negl %esi": 1,
                "movl %ebx, -(%ebp);testb $, (%edi);jne  <LsaDeregisterLogonProcess+>;pushl %edi;calll - <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);pushl -(%ebp);calll - <RtlGetAce+>": 1,
                "calll - <memmove>;movl -(%ebp), %eax;movl -(%ebp), %ecx;leal (%eax,%eax), %eax;pushl %eax": 1,
                "leal (%ecx,%eax,), %eax;pushl %eax;calll - <memmove>;addl $, %esp;pushl -(%ebp)": 1,
                "cmpl (%ebx), %eax;jl - <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi": 1,
                "jl - <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi;testl %esi, %esi": 1,
                "pushl $;calll - <RtlGetAce+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx": 1,
                "movl (%edi), %eax;negl %esi;sbbl %esi, %esi;negl %esi;cmpl %ebx, %eax": 1,
                "cmpl %ebx, %esi;je  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;cmpl %ebx, %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%edi), %edi;cmpl %ebx, %edi;jne - <LsaDeregisterLogonProcess+>;movl (%ebp), %esi": 1,
                "xorl %ebx, %ebx;movl -(%ebp), %esi;cmpl %ebx, %esi;je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl $;jmp  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 6,
                "cmpl $, (%ebp);movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;popl %ebp;retl $;int;int": 2,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;movl %esi, (%ecx);popl %esi": 1,
                "movl %ebx, -(%ebp);je  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl $;movl %edx, (%esi);popl %edi;jne  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "jge  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl $;pushl %edi": 1,
                "jl  <LsaDeregisterLogonProcess+>;pushl -(%ebp);leal -(%ebp), %eax;pushl $;pushl $": 1,
                "pushl %ebx;pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);calll - <ZwCreateSection>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl %eax": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl %eax;calll - <ZwClose>": 1,
                "jge  <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;andl $, (%edi);testb $, (%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;addl %esi, %esi": 1,
                "movw %si, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);pushl %ebx;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;addl $, %esi;pushl %eax;movw %si, -(%ebp);movw %bx, -(%ebp)": 1,
                "orl $, (%eax);movl %edx, (%eax);movl %ecx, (%eax);xorl %eax, %eax;incl %eax": 1,
                "xorl %esi, %esi;cmpl %esi, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl (%ebp)": 1,
                "calll - <RtlInitUnicodeString>;pushl (%ebp);movzwl -(%ebp), %eax;pushl (%ebp);shrl %eax": 1,
                "pushl (%ebp);movzwl -(%ebp), %eax;pushl (%ebp);shrl %eax;pushl (%ebp)": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, %esi;movl %esi, %eax;popl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;testb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "xorl %edi, %edi;cmpl %edi, (%esi);je  <LsaDeregisterLogonProcess+>;movl (%esi), %esi;cmpl %edi, %esi": 1,
                "movl (%esi), %edi;addl (%ebp), %edi;pushl %edi;pushl %esi;calll - <RtlGetAce+>": 1,
                "negl %eax;popl %ebp;retl $;nop;int": 1,
                "pushl (%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);calll - <RtlGetAce+>;andw $, %ax": 1,
                "pushl %edi;pushl (%ebp);xorl %edi, %edi;pushl %esi;calll - <RtlGetAce+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %esi;calll - <RtlGetAce+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;calll - <RtlGetAce+>;cmpw (%ebp), %ax;jne  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "calll - <RtlGetAce+>;cmpw (%ebp), %ax;jne  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %esi": 1,
                "popl %ecx;je  <LsaDeregisterLogonProcess+>;pushl %esi;pushl (%ebp);pushl %edi": 2,
                "pushl %edi;pushl (%ebp);calll - <RtlGetAce+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "popl %ecx;jge  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl (%esi)": 1,
                "xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;shll $, %eax;leal (%eax,%ecx), %eax": 1,
                "movl (%ebp), %ecx;shll $, %eax;leal (%eax,%ecx), %eax;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "cmpl $, %edx;je  <LsaDeregisterLogonProcess+>;cmpl $, %edx;je  <LsaDeregisterLogonProcess+>;cmpl $, %edx": 1,
                "pushl %eax;pushl (%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;movw (%esi), %ax;pushl %ebx": 1,
                "pushl %eax;pushl %edi;calll - <LsaDeregisterLogonProcess+>;addl $, %esi;cmpl $, %esi": 1,
                "popl %esi;popl %ebp;retl $;movl %esi, %eax;jmp - <LsaDeregisterLogonProcess+>": 1,
                "movl (%edx), %eax;andw $, (%ebx,%eax);cmpl $, (%ebp);movl (%ebp), %eax;movl %eax, (%edx)": 1,
                "movl (%ebp), %eax;addl $, %eax;movl (%eax), %ecx;movl %ecx, (%edx);movl %edx, (%eax)": 1,
                "cmpw $, (%eax);jne  <LsaDeregisterLogonProcess+>;pushl $;popl %esi;movl (%ebp), %eax": 1,
                "movl (%edi), %ecx;xorl %edx, %edx;movb (%eax), %dl;pushl %ebx;xorl %ebx, %ebx": 1,
                "popl %esi;popl %ebx;je  <LsaDeregisterLogonProcess+>;cmpl $, %edx;je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);xorl %eax, %eax;incl %eax;jmp - <LsaDeregisterLogonProcess+>": 1,
                "movl $, %eax;xorl %edx, %edx;cmpl %eax, %ecx;pushl %edi;movl %eax, %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;subl $, %edi;jns - <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl %ebx, %ecx;calll - <_aullshr>;movl (%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "leal -(%ebp), %ecx;andl %ecx, %eax;pushl %eax;pushl $;pushl %edi": 3,
                "movl %esi, %eax;negl %eax;sbbl %eax, %eax;leal (%ebp), %ecx;andl %ecx, %eax": 1,
                "negl %eax;sbbl %eax, %eax;leal (%ebp), %ecx;andl %ecx, %eax;pushl %eax": 1,
                "pushl $;pushl %edi;calll - <LsaDeregisterLogonProcess+>;negl %esi;sbbl %esi, %esi": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;movl %ebx, %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movzwl (%ebp), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, %ecx;jle  <LsaDeregisterLogonProcess+>;cmpl $, %ecx;jg  <LsaDeregisterLogonProcess+>": 1,
                "testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "je - <LsaDeregisterLogonProcess+>;movzwl (%ebp), %eax;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, %eax": 1,
                "pushl %edi;movl (%ebp), %edi;testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "andl $, %ecx;xorl %eax, %eax;cmpl $, %ecx;je  <LsaDeregisterLogonProcess+>;cmpl $, %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, %ecx;jne  <LsaDeregisterLogonProcess+>;pushl %edx;pushl %edi": 1,
                "subl %edx, %eax;movl (%ebp), %edx;sarl %eax;leal (%eax,%eax,), %ecx;leal (%edx,%ecx,), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;movl -(%ecx), %edx;cmpl (%ebp), %edx;jne  <LsaDeregisterLogonProcess+>;movl -(%ecx), %ecx": 1,
                "movl -(%ecx), %edx;cmpl (%ebp), %edx;jne  <LsaDeregisterLogonProcess+>;movl -(%ecx), %ecx;cmpl (%ebp), %ecx": 1,
                "pushl %edi;pushl (%ebp);movl %eax, %ebx;calll - <RtlGetAce+>;testw %ax, %ax": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%ebp), %esi;xorl %eax, %eax;movw (%esi), %ax": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;xorl %eax, %eax;movw (%esi), %ax;testw %ax, %ax": 1,
                "movw (%esi), %ax;testw %ax, %ax;jne  <LsaDeregisterLogonProcess+>;cmpw %ax, (%edi);je  <LsaDeregisterLogonProcess+>": 1,
                "testw %ax, %ax;je  <LsaDeregisterLogonProcess+>;pushl %eax;calll - <RtlUpcaseUnicodeChar>;movw %ax, %bx": 1,
                "incl %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;popl %edi;popl %esi": 2,
                "incl %edx;decl %ecx;cmpl $, %edx;jl - <LsaDeregisterLogonProcess+>;movb $, (%esi)": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax": 2,
                "jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi;movl (%edi), %esi;incl %esi": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;xorl %ecx, %ecx": 1,
                "pushl %eax;pushl (%ebp);calll - <RtlGetAce+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "movl %esi, (%edi);jmp - <LsaDeregisterLogonProcess+>;int;int;int": 1,
                "pushl %eax;pushl %edi;pushl (%ebp);xorl %ebx, %ebx;pushl (%ebp)": 1,
                "rep  stosl %eax, %es:(%edi);leal -(%ebp), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);pushl %edx": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%edi), %ebx;xorl %eax, %eax;movw (%esi), %ax": 1,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%esi)": 1,
                "testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;incl (%ebp);movl (%ebp), %eax;addl $, %edi": 1,
                "incl (%ebp);movl (%ebp), %eax;addl $, %edi;cmpl (%ebp), %eax;jb - <LsaDeregisterLogonProcess+>": 1,
                "movw $, (%esi);calll - <RtlGetAce+>;testl %eax, %eax;movl %eax, (%esi);popl %esi": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl (%esi), %esi": 1,
                "retl $;orl $-, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;nop;nop": 1,
                "je  <LsaDeregisterLogonProcess+>;leal (%esi), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;calll - <RtlGetAce+>;movl %eax, %edi": 1,
                "leal (%eax,%eax), %eax;pushl %eax;calll - <RtlGetAce+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "pushl %eax;calll - <RtlGetAce+>;movl %eax, %edi;cmpl %ebx, %edi;movl %edi, -(%ebp)": 1,
                "jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi": 1,
                "movw %bx, (%ecx);movl %ebx, -(%ebp);movl (%ebp), %ebx;movw %ax, -(%ebp);movw (%edi), %ax": 1,
                "cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;decl (%ebp);jmp  <LsaDeregisterLogonProcess+>;leal (%esi), %eax": 1,
                "movw -(%ebp), %ax;movw %ax, (%ecx);xorl %esi, %esi;pushl -(%ebp);calll - <RtlGetAce+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;pushl (%eax);calll - <RtlFreeRangeList>": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);movw %ax, -(%ebp);calll - <RtlCopyRangeList>;movl %eax, %ebx": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%edi)": 1,
                "pushl (%edi);pushl (%esi);calll - <RtlDeleteOwnersRanges>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "pushl %esi;calll - <RtlDeleteRegistryValue+>;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;adcl $-, %ecx;pushl %esi": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testb $, (%eax);je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl %edi, (%esi);movl %ecx, (%esi);movl %eax, (%esi);movb $, -(%ebp)": 1,
                "testl %eax, %eax;jne - <LsaDeregisterLogonProcess+>;movb -(%ebp), %al;popl %edi;popl %ebx": 1,
                "testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "movl %esi, -(%ebp);popl %esi;pushl $;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebx);calll - <RtlDeleteOwnersRanges>;movl -(%ebp), %eax;andl $, (%ebp);movl %eax, -(%ebp)": 1,
                "jne  <LsaDeregisterLogonProcess+>;addl $, (%ebp);addl $, -(%ebp);pushl $;pushl (%ebp)": 1,
                "xorl %edx, %edx;cmpl %edx, %ecx;je  <LsaDeregisterLogonProcess+>;movl (%ecx), %ecx;movl (%ebp), %eax": 1,
                "movl %ecx, (%eax);movl (%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %ecx": 1,
                "movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;pushl (%eax)": 1,
                "calll - <RtlDeleteOwnersRanges>;movl %eax, %esi;testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "calll *(%ebx);testb %al, %al;jne  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "orl $-, (%eax);incl %ecx;movl %edx, (%eax);movl %edx, (%eax);movl %edx, (%eax)": 1,
                "calll - <RtlCopyRangeList>;movl %eax, %esi;testl %esi, %esi;jge  <LsaDeregisterLogonProcess+>;testl %edi, %edi": 1,
                "pushl $;pushl %edi;calll - <ExFreePoolWithTag>;pushl (%ebx);calll - <RtlFreeRangeList>": 1,
                "jae  <LsaDeregisterLogonProcess+>;movl (%eax), %edi;cmpl %ecx, %edi;jb  <LsaDeregisterLogonProcess+>;ja  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %edx, %ecx;jb  <LsaDeregisterLogonProcess+>;ja  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;cmpl (%eax), %ecx": 1,
                "movl (%esi), %ecx;cmpl (%eax), %ecx;jb  <LsaDeregisterLogonProcess+>;movb (%eax), %cl;testb %cl, (%esi)": 1,
                "testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax": 1,
                "popl %ecx;je  <LsaDeregisterLogonProcess+>;movb $, -(%ebp);cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "addb %al, (%eax);addb %dl, (%edx);decl %edi;addb %cl, (%edi);pushl %esp": 1,
                "movl (%ebp), %esi;movl %eax, -(%ebp);pushl %edi;movl %fs:, %eax;movl %eax, %ebx": 1,
                "andl $, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp);leal (%esi), %ebx;movl -(%ebp), %eax": 1,
                "pushl %eax;calll - <wcscat>;addl $, %esp;pushl $;leal -(%ebx), %eax": 2,
                "calll - <NtVdmControl+>;movl %eax, %edi;testl %edi, %edi;jl  <LsaDeregisterLogonProcess+>;incl -(%ebp)": 1,
                "calll - <NtVdmControl+>;movl %eax, %edi;testl %edi, %edi;jl  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;pushl %esi;pushl $": 1,
                "js  <LsaDeregisterLogonProcess+>;decl %esi;addb %dh, (%ebp);insl %dx, %es:(%edi);addb %dl, (%eax)": 1,
                "jae  <LsaDeregisterLogonProcess+>;je  <LsaDeregisterLogonProcess+>;addb %al, (%eax);int;int": 2,
                "cmpl %edi, %esi;jl  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi;pushl (%ebp)": 1,
                "pushl (%ebp);pushl %edi;pushl (%ebp);pushl (%ebp);pushl %edi": 1,
                "pushl ;pushl ;calll - <SeSinglePrivilegeCheck>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 10,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %esi;movl %esi, -(%ebp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl $;pushl ;pushl %esi;pushl -(%ebp)": 2,
                "movl (%ebp), %esi;cmpb $, %bl;jne  <LsaDeregisterLogonProcess+>;movl , %eax;cmpl %eax, %esi": 1,
                "testw %cx, %cx;je  <LsaDeregisterLogonProcess+>;testb $, %dl;je  <LsaDeregisterLogonProcess+>;calll - <ExRaiseDatatypeMisalignment>": 2,
                "je  <LsaDeregisterLogonProcess+>;calll - <ExRaiseDatatypeMisalignment>;movl , %eax;movzwl -(%ebp), %ecx;movl -(%ebp), %edx": 2,
                "movl -(%ebp), %esi;movl %eax, %edi;pushl -(%ebp);calll - <ZwClose>;cmpl $, (%ebp)": 1,
                "testl %edi, %edi;jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;orl %ebx, (%eax);movl (%esi), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>;movl %esi, %ecx;calll - <ObfDereferenceObject>;movl %edi, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);pushl %edi": 3,
                "movl , %ecx;movl %ecx, -(%ebp);cmpl %edi, %ecx;je  <LsaDeregisterLogonProcess+>;pushl $": 4,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);movl (%ebp), %esi;cmpb $, %al": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edi, -(%ebp);jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ecx;calll  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp)": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %esi;cmpb $, -(%ebp)": 1,
                "jbe  <LsaDeregisterLogonProcess+>;pushl $;calll - <ExRaiseStatus>;pushl $;movl (%ebp), %eax": 1,
                "popl %ecx;movl (%ebp), %esi;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %ecx;calll - <ObReferenceObjectByHandle>;movl %eax, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl (%eax), %esi;movl (%eax), %eax;movl (%esi), %ecx;cmpl (%ecx), %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "movzwl -(%ebp), %eax;shrl %eax;pushl %eax;pushl %esi;pushl $": 1,
                "movl %eax, ;calll - <RtlUpcaseUnicodeChar+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "calll - <RtlUpcaseUnicodeChar+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp);movl , %eax": 1,
                "stosw %ax, %es:(%edi);movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);movl %ebx, -(%ebp)": 1,
                "jae  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;cmpw $, (%eax);jne  <LsaDeregisterLogonProcess+>;orl $-, -(%ebp)": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;addl $, -(%ebp);addl $, -(%ebp);jmp - <LsaDeregisterLogonProcess+>": 1,
                "orl $-, -(%ebp);movl (%ebp), %eax;pushl $;shll $, %eax;pushl %eax": 1,
                "incl %ebx;pushl %ebx;calll - <ExAllocatePoolWithTag>;movl %eax, %edi;movl %edi, -(%ebp)": 1,
                "cmpl (%ebp), %ecx;jb - <LsaDeregisterLogonProcess+>;movb $, (%esi);movl (%esi), %eax;addl $, %eax": 1,
                "movl -(%ebp), %ecx;leal -(%ecx,%eax,), %esi;movl %eax, %edi;movl (%esi), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl (%edi), %eax;movl (%eax), %edx;movl (%edx), %edx;movl (%eax), %eax;cmpl (%edx), %eax": 1,
                "cmpl (%edx), %eax;je  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;pushl (%ecx)": 1,
                "pushl %ecx;pushl %ecx;pushl %ebx;movl %fs:, %eax;movb (%eax), %bl": 2,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %esi;xorl %esi, %esi": 3,
                "pushl %esi;xorl %esi, %esi;cmpb $, %bl;pushl %edi;jne  <LsaDeregisterLogonProcess+>": 3,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;xorl %ebx, %ebx;incl %ebx": 1,
                "xorl %ebx, %ebx;incl %ebx;cmpl %ebx, (%ebp);je  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp)": 1,
                "cmpb %bl, -(%ebp);jne  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);pushl $;popl %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "pushl %eax;pushl %esi;pushl $;pushl ;pushl (%ebp)": 1,
                "jl  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);calll - <ZwSaveKeyEx+>": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;testb $-, (%eax);je  <LsaDeregisterLogonProcess+>;movl $, %ebx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl (%eax);pushl (%eax);calll  <LsaDeregisterLogonProcess+>": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movl %fs:, %eax;incl (%eax);jne  <LsaDeregisterLogonProcess+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;popl %esi;leave;retl $": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebx), %eax;movl $, (%eax)": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi;movl %eax, -(%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl $;leal -(%ebp), %eax": 8,
                "movl %esi, (%eax);cmpl %esi, -(%ebp);movl %esi, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi": 1,
                "pushl $;leal -(%ebp), %eax;rep  movsb (%esi), %es:(%edi);andl $, -(%ebp);pushl %eax": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %edx;movl (%edx), %eax;cmpl %esi, (%eax);jbe  <LsaDeregisterLogonProcess+>": 1,
                "jmp - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;leal (%esi,%esi,), %ecx;leal (%eax,%ecx,), %ecx;movl (%eax), %eax": 1,
                "movl (%eax), %eax;subl %esi, %eax;decl %eax;leal (%eax,%eax,), %eax;shll $, %eax": 1,
                "decl %eax;leal (%eax,%eax,), %eax;shll $, %eax;pushl %eax;leal (%ecx), %eax": 1,
                "movl $, -(%ebp);calll - <ZwClose>;xorl %esi, %esi;jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edx;movl %edx, (%eax);movl (%ecx), %eax;movl -(%ebp), %ecx": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;movl -(%ebp), %ecx;movl (%eax,%ebx), %eax;movl (%ecx), %ecx": 2,
                "movl -(%ebp), %ecx;movl (%eax,%ebx), %eax;movl (%ecx), %ecx;movl %eax, (%ecx,%edi);pushl $": 1,
                "movl (%eax,%ebx), %eax;movl (%ecx), %ecx;movl %eax, (%ecx,%edi);pushl $;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jl  <LsaDeregisterLogonProcess+>;cmpl $, (%ebx);jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;movl (%edx), %ecx;movl %eax, (%edi,%ecx)": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%edx), %eax;cmpl %esi, (%edi,%eax);je  <LsaDeregisterLogonProcess+>;cmpl %esi, %ecx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%edi,%eax), %edi;movl (%ebx), %esi;movl %ecx, %eax": 1,
                "jbe  <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;movl (%edi), %eax;movl (%ebx,%eax), %eax;cmpl %esi, %eax": 1,
                "movl (%edi), %eax;movl -(%ebp), %ecx;addl $, %ebx;cmpl (%eax), %ecx;jb - <LsaDeregisterLogonProcess+>": 2,
                "calll - <ExFreePoolWithTag>;movl %esi, (%edi);movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi": 1,
                "popl %ebx;calll - <IoQueueWorkItem+>;leave;retl $;decl %eax": 2,
                "leave;retl $;decl %eax;addb %ah, (%ecx);jb  <LsaDeregisterLogonProcess+>": 1,
                "addb %al, %gs:(%eax);addb %al, (%eax);addb %ch, ;addb %ch, ;addb %ch, ": 1,
                "addb %al, (%eax);pushl %eax;addb %dh, (%edx);outsl (%esi), %dx;addb %ah, (%esi)": 4,
                "jb  <LsaDeregisterLogonProcess+>;imull $, (%eax), %eax;decl %esi;addb %dh, (%ebp);insl %dx, %es:(%edi)": 6,
                "calll - <ObOpenObjectByName+>;cmpl %ebx, %eax;movl %eax, (%ebp);jl  <LsaDeregisterLogonProcess+>;cmpb %bl, (%ebp)": 1,
                "cmpl %ebx, %eax;movl %eax, (%ebp);jl  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>": 2,
                "movl %eax, (%ebp);jl  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <NtClose>;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;movl %ebx, (%ebp);cmpl %ebx, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;pushl $;popl %edi": 4,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %ebx;leal -(%ebp), %eax": 6,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <FsRtlIsNameInExpression+>;pushl $": 3,
                "pushl -(%ebp);calll - <NtClose>;movl (%ebp), %eax;leave;retl $": 1,
                "addb %al, (%eax);addb %al, (%eax);incl %esp;addb %ch, (%edi);arpl %ax, (%eax)": 3,
                "testl %ebx, %ebx;pushl %esi;pushl %edi;pushl $;movb $, -(%ebp)": 1,
                "movl (%edi), %eax;cmpl %edx, %eax;jne  <LsaDeregisterLogonProcess+>;pushl %eax;pushl (%edi)": 1,
                "jbe  <LsaDeregisterLogonProcess+>;leal (%ecx), %eax;movl -(%eax), %ebx;cmpl -(%edi), %ebx;jne  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;orl $, (%eax);movb $, -(%ebp);movl (%ebp), %ebx;movzwl (%ebx), %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;movb $, -(%ebp);movl (%ebp), %ebx;cmpl %ebx, -(%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "jb - <LsaDeregisterLogonProcess+>;movl (%ebp), %ebx;incl -(%ebp);movl -(%ebp), %eax;addl $, %edi": 1,
                "cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movzwl (%eax), %eax;cmpl %eax, (%ebp)": 1,
                "jne - <LsaDeregisterLogonProcess+>;movl (%ecx), %eax;subl -(%ebp), %eax;decl %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %esi": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;jl  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;shrl %eax": 2,
                "pushl %edi;pushl %ebx;calll - <wcscpy>;popl %ecx;popl %ecx": 1,
                "popl %ecx;pushl $;pushl (%ebp);pushl %esi;pushl %ebx": 1,
                "pushl $;pushl (%ebp);pushl %esi;pushl %ebx;pushl (%ebp)": 1,
                "testl %esi, %esi;pushl %ebx;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;andl $, %eax": 1,
                "andl $, %eax;cmpb $, %al;movl $, %ebx;jne  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "cmpb $, %al;movl $, %ebx;jne  <LsaDeregisterLogonProcess+>;pushl $;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl $, -(%ebp);pushl $;jmp  <LsaDeregisterLogonProcess+>;testb $, (%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "movzbl %al, %eax;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;cmpw $, -(%ebp);jbe  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;addw $-, -(%ebp);movzwl -(%ebp), %eax;movl -(%ebp), %ecx;shrl %eax": 1,
                "andw $, (%ecx,%eax,);movzwl -(%ebp), %eax;addl $, %eax;cmpl $, %eax;jbe  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <ZwOpenKey>;movl %eax, %esi;testl %esi, %esi;jge  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl %esi, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "ja  <LsaDeregisterLogonProcess+>;outsb (%esi), %dx;addb %al, (%eax);addb %al, (%eax,%eax);addb %ah, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%eax,%eax);addb %ah, (%ebx);imull $, (%eax), %eax;addb %ah, (%eax,%eax)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "jl  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%esi,%eax), %eax": 3,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <ZwOpenKey>;movl %eax, %edi": 1,
                "jl  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl -(%ebp), %ecx": 2,
                "jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl -(%ebp), %ecx;cmpl (%esi,%eax), %ecx;jne  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <ZwClose>;jmp  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "movl %ebx, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp);movl $, %edi;cmpl %ebx, -(%ebp)": 1,
                "addb %ah, (%ebp);addb %al, %fs:(%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl %esi;xorl %esi, %esi;movl %eax, -(%ebp)": 1,
                "xorl %esi, %esi;movl %eax, -(%ebp);movl (%ebp), %eax;movl %esi, (%eax);movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl $;pushl -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 2,
                "pushl -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ObOpenObjectByName+>;movl %eax, %ebx": 1,
                "movl -(%ebp), %eax;pushl (%eax);calll - <NtClose>;cmpl $, (%edi);jae  <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "movl -(%ebp,%eax), %eax;cmpl -(%ebp), %eax;ja  <LsaDeregisterLogonProcess+>;cmpl $-, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "cmpl -(%ebp), %ebx;jb - <LsaDeregisterLogonProcess+>;incl -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>": 1,
                "pushl -(%ebp);calll - <FsRtlIsNameInExpression+>;leal -(%ebp), %eax;pushl %eax;calll - <ExUuidCreate>": 1,
                "movl -(%ebp), %edi;movl (%edi), %ecx;pushl %esi;pushl %esi;pushl (%eax)": 1,
                "popl %esp;addb %ah, ;addb %ah, (%eax,%eax);addb %al, (%eax);addb %cl, (%eax)": 1,
                "calll - <ZwOpenKey>;cmpl %ebx, %eax;movl %eax, -(%ebp);jge  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp)": 3,
                "pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <LsaDeregisterLogonProcess+>": 2,
                "cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>": 2,
                "retl $;movl -(%ebp), %ecx;movl -(%ebp), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl - <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "jl - <LsaDeregisterLogonProcess+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 2,
                "movl %ecx, -(%ebp);jne  <LsaDeregisterLogonProcess+>;cmpl -(%ebp), %eax;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;cmpl -(%ebp), %eax;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwSetValueKey>;testb $, -(%ebp);movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "testb $, -(%ebp);movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl $": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <NtQueryInformationToken+>": 1,
                "cmpl %ebx, -(%ebp);jl - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "addb %ch, (%esi);addb %ch, (%edi);addb %al, (%eax);incl %ebx;addb %dh, (%ebp)": 1,
                "calll - <DbgPrintEx>;movl -(%ebp), %eax;addl $, %esp;movl (%edi), %edi;leal (%eax), %ecx": 1,
                "calll  <KeFlushQueuedDpcs+>;pushl $;pushl %esi;calll - <FsRtlNotifyFilterChangeDirectory+>;movl , %ecx": 1,
                "pushl %eax;calll - <ObCheckCreateObjectAccess+>;incl %edi;addl $, %esi;cmpl , %edi": 1,
                "calll - <ObCheckCreateObjectAccess+>;incl %edi;addl $, %esi;cmpl , %edi;jl - <LsaDeregisterLogonProcess+>": 1,
                "cmpl , %edi;jl - <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;cmpl %ebx, ;movl %ebx, -(%ebp)": 1,
                "jl - <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;cmpl %ebx, ;movl %ebx, -(%ebp);movb %bl, -(%ebp)": 1,
                "xorl %esi, %esi;pushl %esi;pushl ;calll - <ExFreePoolWithTag>;pushl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;imull $, (%edi), %esp;andb %ch, (%esi);je  <LsaDeregisterLogonProcess+>;imulw $, (%ebx), %sp": 1,
                "jns  <LsaDeregisterLogonProcess+>;arpl %cx, (%ebx);jb  <LsaDeregisterLogonProcess+>;insb %dx, %es:(%edi);andb %al, (%eax)": 1,
                "andb %ah, ;incl %esp;jne  <LsaDeregisterLogonProcess+>;jo  <LsaDeregisterLogonProcess+>;outsb (%esi), %dx": 1,
                "pushl %esi;leal -(%ebp), %ecx;pushl %ecx;pushl %esi;pushl %esi": 1,
                "jne  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;pushl $;calll - <NtQuerySecurityObject+>;pushl ": 1,
                "movl -(%ebp), %eax;leal (%esi,%eax,), %edi;movl (%edi), %eax;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl %ebx, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl $;pushl $": 1,
                "pushl $;movb $, ;pushl (%esi);movb %bl, (%ebp);movb %bl, (%ebp)": 1,
                "movb %bl, (%ebp);calll - <ZwSetInformationObject>;pushl (%esi);calll - <ZwClose>;movb %bl, ": 1,
                "nop;movl %edi, %edi;pushl %ebx;xorl %ebx, %ebx;cmpb %bl, ": 1,
                "cmpb %bl, ;je  <LsaDeregisterLogonProcess+>;pushl $;pushl $;pushl %ebx": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;movb $, ;pushl $": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;pushl %ebx;pushl %eax;pushl %eax": 1,
                "movl (%edi), %eax;testl %eax, %eax;movl $, %ebx;je  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;leal (%esi), %edi;movl (%edi), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %esi;cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;leal (%esi), %ecx;cmpl %ecx, (%ecx)": 1,
                "pushl %edi;je  <LsaDeregisterLogonProcess+>;leal (%esi), %edi;movl (%ecx), %eax;movl (%eax), %edx": 1,
                "pushl (%eax);calll - <CcPurgeCacheSection>;movl (%esi), %eax;xorl %edi, %edi;pushl %edi": 1,
                "cmpl %edi, (%eax);popl %edi;popl %ebx;je  <LsaDeregisterLogonProcess+>;pushl %esi": 1,
                "pushl $;pushl $;pushl %edi;pushl %esi;calll - <ObCheckCreateObjectAccess+>": 1,
                "movl , %ebx;cmpl $, %ebx;je  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %edi": 1,
                "movw (%esi), %ax;testw %ax, %ax;movl (%esi), %edi;je  <LsaDeregisterLogonProcess+>;movzwl %ax, %eax": 1,
                "xorl %eax, %eax;cmpl %eax, (%edi);je  <LsaDeregisterLogonProcess+>;cmpl %eax, (%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %esi, %edi;je  <LsaDeregisterLogonProcess+>;cmpw $, (%edi);jne  <LsaDeregisterLogonProcess+>;cmpw %si, (%edi)": 1,
                "jne  <LsaDeregisterLogonProcess+>;cmpw %si, (%edi);movl %esi, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;leal (%edi), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;pushl %eax;pushl %ebx;movl %eax, -(%ebp)": 1,
                "cmpw $, %cx;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;cmpl %ecx, (%edx);jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl -(%ebp);pushl %ebx;calll *%eax;pushl -(%ebp);pushl %ebx": 2,
                "shll $, %ecx;pushl %ecx;leal (%esi,%eax,), %ecx;pushl %ecx;leal (%esi,%eax,), %eax": 1,
                "pushl %ecx;leal (%esi,%eax,), %ecx;pushl %ecx;leal (%esi,%eax,), %eax;pushl %eax": 1,
                "pushl %ecx;leal (%esi,%eax,), %eax;pushl %eax;calll - <memmove>;addl $, %esp": 1,
                "addl $, %eax;cmpl %ecx, (%ebp);jb - <LsaDeregisterLogonProcess+>;movzwl (%edi), %eax;incl -(%ebp)": 1,
                "pushl %ebx;calll - <SeCreateClientSecurity+>;decw (%esi);movw (%esi), %cx;movl (%ebp), %eax": 1,
                "movw (%esi), %cx;movl (%ebp), %eax;movzwl %cx, %ecx;subl %eax, %ecx;leal (%esi,%eax,), %esi": 1,
                "movl (%ebp), %esi;leal (%edi), %edx;movl %edx, -(%ebp);movl %edx, (%ebp);movw (%edi), %dx": 1,
                "movl %edx, -(%ebp);movl %edx, (%ebp);movw (%edi), %dx;cmpw $, %dx;je  <LsaDeregisterLogonProcess+>": 1,
                "cmpw $, %dx;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %edx;cmpl %esi, (%edx);jne  <LsaDeregisterLogonProcess+>": 1,
                "shll $, %eax;leal (%edi,%ecx,), %edx;pushl %eax;leal (%edx), %eax;pushl %eax": 1,
                "orl $-, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;movw (%eax), %di;movl (%esi), %eax": 1,
                "calll - <NtQueryInformationToken+>;movzwl (%ebx), %ecx;movl $, %edx;subl %ecx, %edx;leal (%eax,%edx,), %eax": 1,
                "cmpl $, %eax;jae  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi;calll - <NtQueryInformationToken+>": 1,
                "addl $, %eax;pushl %eax;pushl (%ebp);pushl %esi;calll - <RtlGeneratedotName+>": 1,
                "addl $, %esp;cmpl %ecx, %esi;jae  <LsaDeregisterLogonProcess+>;subl %esi, %eax;leal -(,%eax,), %eax": 1,
                "jae  <LsaDeregisterLogonProcess+>;subl %esi, %eax;leal -(,%eax,), %eax;pushl %eax;leal (%ebx,%esi,), %eax": 1,
                "movl (%edi), %eax;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %edi": 1,
                "pushl -(%ebp);pushl %edi;calll *%eax;movl (%ebp), %eax;movw $, (%esi)": 1,
                "subl %esi, %eax;leal (%esi), %ebx;movl %eax, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "andl $, (%ebp);cmpw $, (%esi);jbe  <LsaDeregisterLogonProcess+>;leal (%esi), %ebx;pushl (%ebx)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "movl %eax, -(%ebp);calll *(%esi);movl %eax, -(%ebp);movl (%esi), %eax;testl %eax, %eax": 1,
                "movl (%ebx,%eax,), %edi;pushl %edi;pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "pushl %esi;calll *%ecx;movl (%ebp), %eax;movw (%eax), %cx;movl (%eax), %eax": 1,
                "calll *%ecx;movl (%ebp), %eax;movw (%eax), %cx;movl (%eax), %eax;pushl %eax": 1,
                "leal (%ebx,%eax,), %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %edi;pushl %edi;pushl %esi": 1,
                "movl %ebx, (%eax);jmp  <LsaDeregisterLogonProcess+>;movl (%ebx,%eax,), %edi;pushl %edi;pushl %esi": 1,
                "movl %edi, (%ebx);calll *(%esi);movl %eax, %ebx;testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;movl %edi, (%esi);calll *(%ebx);testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je - <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax": 2,
                "movl (%ebx), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %ebx": 4,
                "cmpw (%ebp), %ax;jae  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;jae  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;pushl %ebx;calll *%eax;movl %edi, (%esi);andl $, (%ebp)": 1,
                "pushl %ebx;calll *%eax;movl %edi, (%esi);andl $, (%ebp);cmpw $, (%ebp)": 1,
                "movl (%ebp), %esi;movl %eax, %ecx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;shrl $, %eax;je  <LsaDeregisterLogonProcess+>;leal -(%eax), %ecx": 1,
                "leal -(%eax), %ecx;shrl $, %ecx;movl %ecx, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl -(%ebp), %ecx;cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;andl $, (%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;andl $-, %eax;pushl $;movl %eax, %ebx;pushl %ebx": 1,
                "xorl %edi, %edi;cmpl %edi, (%esi);movl $, %ebx;jbe  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>": 1,
                "cmpl %edi, %eax;movl %eax, (%esi);jne  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;andl $, (%esi);pushl %esi": 1,
                "movl (%esi), %eax;andl $, (%esi);pushl %esi;movb $, -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl %esi;calll - <IoOpenDeviceRegistryKey+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl %edi": 1,
                "calll - <RtlUpcaseUnicodeChar+>;movl (%ebp), %eax;testb $, (%eax);je  <LsaDeregisterLogonProcess+>;movl $, %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "cmpl (%ebp), %eax;jae  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;shll $, %eax;leal (%ecx,%eax), %ebx": 1,
                "movl %edx, -(%ebp);movl (%eax), %edi;jmp  <LsaDeregisterLogonProcess+>;movl (%ecx), %edx;movl %edx, -(%ebp)": 1,
                "incl %eax;jmp  <LsaDeregisterLogonProcess+>;movl %eax, %edx;xorl %eax, %eax;movl %edx, -(%ebp)": 1,
                "andl $-, %eax;movl %eax, -(%ebp);addl %edi, %edx;movl (%ebp), %eax;cmpl (%eax), %edx": 1,
                "movl %eax, -(%ebp);addl %edi, %edx;movl (%ebp), %eax;cmpl (%eax), %edx;ja  <LsaDeregisterLogonProcess+>": 1,
                "ja  <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %esi;movl (%ebp), %eax;addl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movb $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;addl %eax, -(%ebp);movl (%esi), %eax": 1,
                "movl (%ebp), %edi;testb $, (%edi);je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;movl (%edi), %ebx;pushl %esi;movl (%edi), %esi": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);popl %edi;popl %ebx;calll - <RtlUpcaseUnicodeChar+>": 1,
                "leal (%esi), %eax;pushl %eax;calll - <RtlCompareUnicodeString>;testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>;movl %ebx, (%edi)": 1,
                "pushl (%esi);pushl %ebx;calll *%eax;andl $, -(%ebp);leal (%ebp), %eax": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %ebx;calll *(%ebx)": 2,
                "cmpw $, (%esi);jne  <LsaDeregisterLogonProcess+>;andl $, -(%ebp);cmpw $, (%esi);jbe  <LsaDeregisterLogonProcess+>": 1,
                "pushl -(%ebp);pushl %edi;pushl %ebx;calll - <RtlGeneratedotName+>;movl %eax, %esi": 1,
                "pushl %ebx;calll - <RtlGeneratedotName+>;movl %eax, %esi;movl %esi, -(%ebp);cmpl $-, %esi": 1,
                "movzwl %ax, %eax;cmpl %ecx, %eax;movw (%esi), %ax;jae  <LsaDeregisterLogonProcess+>;orw $, %ax": 1,
                "cmpl %ecx, %eax;movw (%esi), %ax;jae  <LsaDeregisterLogonProcess+>;orw $, %ax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, (%esi);orl $-, -(%ebp);pushl -(%ebp);pushl %ebx;calll *(%ebx)": 1,
                "pushl -(%ebp);pushl %ebx;calll *%eax;cmpw $, (%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;calll *%eax;cmpw $, (%edi);jne  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 2,
                "andl $, -(%ebp);cmpw $, (%edi);jbe  <LsaDeregisterLogonProcess+>;leal (%edi), %eax;movl %eax, -(%ebp)": 3,
                "calll - <RtlGeneratedotName+>;incl -(%ebp);addl $, -(%ebp);movzwl (%edi), %eax;cmpl %eax, -(%ebp)": 2,
                "movzwl (%edi), %eax;cmpl %eax, -(%ebp);jb - <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %ebx": 1,
                "pushl -(%ebp);pushl %ebx;calll - <RtlGeneratedotName+>;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "pushl %edi;calll - <ObCheckCreateObjectAccess+>;pushl $;pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, %edi;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl %esi, %eax;jmp  <LsaDeregisterLogonProcess+>;nop;nop;nop": 1,
                "calll - <NtDeleteFile+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edi, (%esi);movl (%ecx), %ecx": 1,
                "calll - <RtlGeneratedotName+>;jmp - <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;cmpl $-, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, (%edi);jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl $;popl %eax;jmp  <LsaDeregisterLogonProcess+>;orl $-, (%eax)": 1,
                "andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %eax;calll *%ecx;movl (%esi), %eax;movl (%eax), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %esi;calll - <RtlStringFromGUID+>;pushl %esi": 1,
                "pushl %esi;calll  <KeFlushQueuedDpcs+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>": 1,
                "movl (%esi), %edi;cmpb $, (%edi);jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, -(%ebp);movl $, %eax;movl %eax, ;movl %eax, ;pushl $": 1,
                "jge  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl %edi": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl %edi;pushl (%eax);calll - <ExFreePoolWithTag>": 1,
                "calll - <RtlUnicodeStringToInteger+>;xorl %edi, %edi;testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %ebx;cmpl %edi, %ebx;jl - <LsaDeregisterLogonProcess+>": 1,
                "movl %edi, -(%ebp);jns  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl (%eax), %edi;jne  <LsaDeregisterLogonProcess+>;movl $, %eax": 1,
                "calll - <SeCreateClientSecurity+>;testb %al, %al;je - <LsaDeregisterLogonProcess+>;movzwl (%edi), %eax;incl -(%ebp)": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %esi;calll *%eax": 3,
                "calll *%eax;movw (%ebx), %ax;cmpw $, %ax;jne  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "je - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;leal (%edi,%eax,), %eax;movl %eax, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;leal (%edi,%eax,), %eax;movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;leal (%ebx), %eax;movl (%eax), %edx;cmpl -(%ebp), %edx;je  <LsaDeregisterLogonProcess+>": 2,
                "jmp  <LsaDeregisterLogonProcess+>;movzwl (%ebx), %ecx;xorl %edi, %edi;testl %ecx, %ecx;jbe  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll *%eax;movl (%ebx), %eax;cmpl $-, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "leal (%edi), %ebx;pushl (%ebx);pushl %esi;calll - <RtlGeneratedotName+>;movzwl (%edi), %eax": 1,
                "movl -(%ebp), %ebx;xorl %eax, %eax;pushl %eax;pushl -(%ebp);movl %eax, (%ebx)": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl %eax, -(%ebp);movl (%esi), %eax;cmpw %bx, (%eax)": 1,
                "incl %ebx;pushl %eax;calll - <RtlUpcaseUnicodeChar>;movl -(%ebp), %ecx;imull $, %ecx, %ecx": 1,
                "movl -(%ebp), %ecx;xorl %edi, %edi;addl $, %esp;cmpl %edi, %ecx;je  <LsaDeregisterLogonProcess+>": 1,
                "addl $, %esp;cmpl %edi, %ecx;je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>;cmpl %edi, (%esi)": 1,
                "calll - <DbgPrintEx>;addl $, %esp;cmpl $, (%esi);jbe  <LsaDeregisterLogonProcess+>;leal (%esi), %ebx": 1,
                "popal;arpl %bp, (%ebx);pushl %esp;jb  <LsaDeregisterLogonProcess+>;arpl %sp, (%ebp)": 1,
                "orb (%eax), %al;orl %esp, (%eax);incl %ebx;popal;insb %dx, %es:(%edi)": 1,
                "incl %ebx;popal;insb %dx, %es:(%edi);insb %dx, %es:(%edi);jb  <LsaDeregisterLogonProcess+>": 1,
                "insb %dx, %es:(%edi);jb  <LsaDeregisterLogonProcess+>;jb  <LsaDeregisterLogonProcess+>;jae  <LsaDeregisterLogonProcess+>;popl %ebx": 1,
                "movl %esi, (%eax);movl %eax, %esi;cmpl (%ebp), %esi;movl %ecx, %eax;jne - <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %edi;movl (%esi), %ecx;pushl %esi;movl %ecx, (%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %edi;calll - <ObCheckCreateObjectAccess+>;pushl $;pushl %edi": 1,
                "movb (%ebp), %al;popl %esi;popl %ebp;retl $;nop": 1,
                "movl %esp, %ebp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ;pushl %esi": 1,
                "popl %ebx;popl %ebp;retl $;movl (%esi), %edi;subl $, %edi": 1,
                "jne - <LsaDeregisterLogonProcess+>;incl %ebx;cmpl , %ebx;jae - <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>": 1,
                "incl %ebx;cmpl , %ebx;jae - <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>": 1,
                "cmpl , %edi;jb - <LsaDeregisterLogonProcess+>;popl %esi;popl %edi;retl": 1,
                "pushl %esi;movl , %eax;leal (%eax,%ebx,), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;testb %dl, %dl;jns  <LsaDeregisterLogonProcess+>;incl (%ebp)": 1,
                "je - <LsaDeregisterLogonProcess+>;leal (%esi), %eax;jmp - <LsaDeregisterLogonProcess+>;pushl %esi;calll - <RtlGeneratedotName+>": 1,
                "testb $, (%edi);je - <LsaDeregisterLogonProcess+>;leal (%esi), %edi;jmp  <LsaDeregisterLogonProcess+>;pushl (%eax)": 1,
                "pushl %ebx;pushl %ebx;leal (%esi), %edi;pushl %esi;movl %eax, (%edi)": 2,
                "movl %eax, %esi;movl %esi, -(%ebp);orl $-, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;nop": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl %edi, -(%ebp);pushl %ebx;pushl %esi": 1,
                "calll - <IoOpenDeviceRegistryKey+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %edi;pushl $": 2,
                "je  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %edi;pushl $;pushl (%ebp)": 2,
                "calll - <IoOpenDeviceRegistryKey+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;incl (%esi);incl (%esi)": 1,
                "incl (%esi);incl (%esi);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %esi, -(%ebp)": 1,
                "jl  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;leave": 1,
                "pushl %esi;calll - <SeCreateClientSecurity+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "andl $-, %eax;pushl $;pushl %eax;movl %eax, (%ebp);calll *(%esi)": 1,
                "movl (%ebp), %eax;pushl %ebx;movl %eax, (%esi);calll - <RtlSetAllBits>;movl (%ebx), %eax": 1,
                "movb $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx": 1,
                "movl (%eax), %ecx;movl (%ecx), %ecx;movl (%ebx), %edx;movl %ecx, (%edx);movl (%eax), %ecx": 2,
                "andl $, (%eax);pushl $;leal (%ebx), %ecx;cmpl %ecx, (%ebx);popl %ecx": 1,
                "cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;leal (%ebx), %ecx;movl %ecx, (%ebx);leal (%ebx), %ecx": 1,
                "movl (%eax), %esi;movl %esi, (%ecx);movl %ecx, (%esi);movl (%edx), %esi;movl %edx, (%eax)": 1,
                "leal (%ebx), %eax;movl (%eax), %esi;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %edi, (%eax)": 1,
                "movl (%eax), %edx;movl (%eax), %esi;movl %esi, (%edx);movl (%eax), %eax;cmpl %ecx, %eax": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <LsaDeregisterLogonProcess+>;pushl (%ebx)": 1,
                "movw (%esi), %ax;cmpw $, %ax;je  <LsaDeregisterLogonProcess+>;cmpw $, %ax;je  <LsaDeregisterLogonProcess+>": 2,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, (%ebx);jmp  <LsaDeregisterLogonProcess+>;pushl (%edi)": 1,
                "pushl %ebx;pushl %edi;movl -(%ebp), %eax;movl (%ebp), %ecx;leal (%eax,%ecx,), %edi": 1,
                "movl %eax, %esi;movl (%esi), %ebx;pushl %ebx;pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %edi;calll  <LsaDeregisterLogonProcess+>;pushl (%esi);movl %eax, (%esi)": 1,
                "pushl %ebx;pushl %ebx;pushl (%ebp);leal -(%ebp), %eax;pushl %ebx": 1,
                "pushl -(%ebp);pushl (%ecx);pushl %eax;calll - <NtDeleteFile+>;cmpl $-, %eax": 1,
                "pushl (%ecx);pushl %eax;calll - <NtDeleteFile+>;testb %al, %al;je - <LsaDeregisterLogonProcess+>": 1,
                "pushl (%ebp);movl -(%ebp), %eax;pushl %eax;calll *(%eax);movl %eax, %esi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movw %di, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeToString>;testb $, (%esi);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movzwl (%esi), %eax;pushl %eax;leal (%esi), %edi;pushl %edi": 1,
                "pushl %eax;calll - <RtlCompareUnicodeString+>;testb $, (%esi);movzwl (%esi), %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %ebx, %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl %ebx, (%edi);je  <LsaDeregisterLogonProcess+>;calll - <RtlUpcaseUnicodeChar+>;calll - <FsRtlInitializeOplock+>": 1,
                "jne - <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %esi": 1,
                "movl (%ebp), %eax;movl (%esi), %ecx;pushl $;pushl $-;pushl %esi": 1,
                "movl %ebx, (%edi);calll - <ExReleaseFastMutexUnsafe>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "movl (%esi), %ebx;pushl %edi;movl (%eax), %edi;cmpl %ebx, %edi;jne  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;calll - <FsRtlInitializeOplock+>;movl $, %eax;testl %eax, (%esi);jne  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;pushl $": 1,
                "movl %ecx, (%esi);je  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;pushl $;pushl $": 1,
                "pushl %eax;pushl %esi;pushl -(%ebp);movl %eax, (%ecx);pushl %ebx": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "pushl $;pushl (%ebp);pushl %esi;pushl -(%ebp);pushl %edi": 1,
                "movl -(%ebp), %eax;movl %eax, ;movl -(%ebp), %eax;movl %eax, ;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, ;jmp  <LsaDeregisterLogonProcess+>;movl $, %ebx;calll - <RtlUpcaseUnicodeChar+>;movl %ebx, %eax": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;pushl (%ebp);pushl %ebx": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl %eax, (%esi);pushl (%esi);pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %eax;pushl %ebx;calll  <LsaDeregisterLogonProcess+>;movl %eax, (%esi)": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl %eax, (%esi);movl (%ebp), %eax;addl $, %eax;movl (%eax), %edi": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%edi), %edi;cmpl %eax, %edi;je  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %esi;movl (%esi), %ebx;cmpl , %ebx;jne  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpb $, (%ebx);movl (%esi), %eax;movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;shrl $, %eax;andl $, %eax;pushl %eax": 1,
                "pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jne - <LsaDeregisterLogonProcess+>": 1,
                "orl $-, %ecx;jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %ecx;movl -(%ebp), %eax;movl (%eax), %esi": 1,
                "movl (%ebx), %edi;andl $, (%eax);andl $, (%ebx);movl -(%ebp), %eax;pushl $": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movw (%ecx), %dx;movw %dx, (%eax);testb $, (%ecx)": 1,
                "pushl %eax;calll - <NtDeleteFile+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "pushl %ebx;movl %esi, (%eax);calll *(%ebx);testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl (%esi,%eax,), %edi;pushl %edi;pushl %ebx;movl %edi, -(%ebp);calll *(%ebx)": 1,
                "pushl %ebx;calll *%eax;cmpw $, (%esi);jne  <LsaDeregisterLogonProcess+>;movzwl (%esi), %eax": 1,
                "andl $, (%ebp);cmpl $, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "pushl %ebx;calll *%eax;pushl (%edi);pushl %ebx;calll - <SeCreateClientSecurity+>": 1,
                "cmpl %edx, %eax;jae  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movzwl (%esi), %edx": 1,
                "incl (%ebp);movl (%ebp), %eax;cmpl -(%ebp), %eax;jae  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %eax;cmpl -(%ebp), %eax;jae  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;movl %eax, (%esi);calll - <RtlAreAnyAccessesGranted+>;pushl (%esi);movl (%esi), %eax": 1,
                "movl (%edi), %eax;movl %eax, (%esi);movw (%edi), %ax;movw %ax, (%esi);pushl (%edi)": 1,
                "xorl %ecx, %ecx;pushl %ebx;xorl (%esi), %eax;andl $, %eax;xorl %eax, (%esi)": 1,
                "xorl %eax, %ecx;movl %ecx, (%esi);movb (%edi), %al;movb %al, (%esi);movb $, (%esi)": 1,
                "cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;andl $, (%edi);movl %eax, (%edi);movl -(%edi), %eax": 1,
                "jbe  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;addl (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "calll *(%eax);movl %eax, (%esi);pushl (%edi);pushl (%ebp);calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, (%esi);movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "movl %esi, (%eax);movl (%ebp), %eax;cmpl (%ebx), %eax;jae  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>": 1,
                "jmp - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movb $, -(%ebp);movl -(%ebp), %esi;movl (%ebx), %eax": 1,
                "pushl %eax;movl (%ebp), %eax;pushl %eax;calll *(%eax);pushl %eax": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, (%ebx);decl (%ebp);subl $, %edi": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;movb -(%ebp), %al;popl %edi;popl %ebx": 1,
                "movl %eax, -(%ebp);xorl %ebx, %ebx;movl %ebx, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 1,
                "xorl %ebx, %ebx;incl %eax;cmpl (%edi), %eax;movl %eax, (%ebp);jb - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;pushl %edi;movl (%ebp), %edi": 1,
                "movl %eax, (%esi);je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl (%edi), %ecx;movl (%ecx), %ecx": 1,
                "movl (%eax), %eax;movl (%edi), %ecx;movl (%ecx), %ecx;movl %ecx, (%eax);movl (%esi), %eax": 1,
                "movl (%edi), %eax;movl (%esi), %ecx;movl (%eax), %eax;movl (%ecx), %ecx;movl %eax, (%ecx)": 1,
                "pushl %edi;pushl (%esi);calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 1,
                "testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "movl (%eax), %ecx;pushl (%ecx);pushl %eax;calll  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx": 1,
                "testl %ebx, %ebx;jge  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "xorl %eax, %eax;addl $, %esp;incl %eax;popl %ebp;retl $": 1,
                "imull $, %gs:(%bp,%di), %esi;arpl %si, %gs:(%ebp);imull $, (%ecx,%edi,), %esi;jo  <LsaDeregisterLogonProcess+>;imull $, (%edi), %ebp": 1,
                "pushl (%edi);jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %ecx;pushl (%ebp);movl %ecx, (%ebx)": 1,
                "pushl %esi;calll *%eax;popl %ebx;popl %edi;popl %esi": 1,
                "testl %esi, %esi;jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "pushl %ebx;pushl (%esi);pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax": 1,
                "pushl (%ebp);pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movl , %eax": 1,
                "cmpb $, (%ebp);pushl %edi;movl (%ebp), %edi;movl (%edi), %ecx;movl %ecx, (%ebp)": 1,
                "movl %ecx, (%ebp);movl (%ebp), %ecx;movl %eax, (%edi);movl %ecx, (%ebx);sete %cl": 1,
                "pushl (%esi);pushl %edi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "incl (%ebp);addl $, %esi;cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;andl $, (%esi)": 1,
                "movl %eax, (%esi);movb $, (%esi);jmp  <LsaDeregisterLogonProcess+>;decl (%ebp);subl $, %esi": 1,
                "movl (%esi), %eax;pushl %esi;pushl %eax;pushl %edi;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;pushl (%esi);orb $, (%esi)": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %eax;calll - <RtlUpcaseUnicodeChar>;testb $, (%ebp);movl %eax, (%ebp)": 1,
                "pushl %ebx;pushl (%ebp);calll - <RtlInitializeBitMap+>;movl %eax, %ecx;testl %ecx, %ecx": 1,
                "pushl %ebx;pushl (%ebp);pushl $;jmp  <LsaDeregisterLogonProcess+>;imull $, %esi, %esi": 1,
                "leal (%esi,%edx), %esi;movl (%esi), %eax;jmp  <LsaDeregisterLogonProcess+>;cmpl %edi, (%eax);je  <LsaDeregisterLogonProcess+>": 1,
                "calll - <KeBugCheckEx>;movl (%eax), %ecx;movl (%eax), %esi;pushl $;movl %ecx, (%esi)": 1,
                "movl (%eax), %ecx;movl (%eax), %esi;pushl $;movl %ecx, (%esi);pushl %eax": 1,
                "movl %edi, %ecx;shll %cl, %eax;notl %eax;andl %eax, (%esi);incl %edi": 1,
                "calll *%eax;pushl (%ebp);pushl %esi;calll - <NtQueryInformationToken+>;movl %ebx, %ecx": 1,
                "movl (%ebp), %ecx;jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "jne  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;movl (%eax), %edi": 1,
                "calll *%eax;pushl $;pushl %edi;pushl ;calll - <RtlGeneratedotName+>": 1,
                "pushl $;pushl $;pushl (%ebp);pushl $;pushl %eax": 1,
                "pushl %eax;pushl (%ebp);pushl $;pushl (%ebp);calll - <ZwCreateFile>": 1,
                "addl $, %esi;movw %cx, (%eax);movl %esi, (%eax);movw %cx, (%eax);popl %esi": 1,
                "pushl %eax;pushl %ebx;calll - <NtDeleteFile+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;pushl (%ebp);pushl (%ebp);calll - <NtDeleteFile+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ecx;pushl %eax;calll - <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl (%ebp);pushl (%eax,%esi,);pushl %ebx;calll - <NtDeleteFile+>;cmpl $-, %eax": 1,
                "movl (%eax), %ecx;testb $, %cl;je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;addl (%eax), %edi": 1,
                "movl (%esi), %eax;addl %edi, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %ebx": 1,
                "pushl %ebx;calll - <RtlInitializeBitMap+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;andl $-, (%eax)": 1,
                "movl %eax, (%edi);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %edi, -(%ebp);movl (%esi), %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl %esi;calll - <RtlUnicodeStringToInteger+>": 4,
                "addl %eax, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl -(%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;movl %eax, -(%ebp);pushl %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %edi;jmp  <LsaDeregisterLogonProcess+>;movl %ebx, %ecx;xorl %eax, %eax": 1,
                "movl %ecx, (%eax);movl %ebx, (%eax);leal -(%ebx), %ecx;movl %ecx, (%eax);cmpl $, (%esi)": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp);cmpb $, (%ebp)": 1,
                "pushl %esi;calll *(%esi);testb %al, %al;je  <LsaDeregisterLogonProcess+>;cmpb $, (%ebp)": 1,
                "pushl $;pushl %esi;calll *(%esi);testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl (%esi), %eax;movl (%eax), %eax;pushl %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %esi;calll *%eax;movl (%ebp), %eax": 1,
                "pushl -(%ebp);pushl %esi;calll *%eax;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;incl (%esi);pushl %ebx;pushl (%esi)": 1,
                "movl %edi, -(%ebp);calll *(%esi);cmpb $, %al;je  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "pushl %esi;calll - <CcZeroData+>;movl (%esi), %eax;movl (%eax), %eax;leal (%esi), %ecx": 1,
                "calll - <CcZeroData+>;movl (%esi), %eax;movl (%eax), %eax;leal (%esi), %ecx;movl (%ecx), %edx": 1,
                "calll - <IoGetDeviceProperty+>;leal -(%ebp), %eax;leal (%esi), %ebx;cmpl %ebx, (%ebx);movl %eax, -(%ebp)": 1,
                "testl %ecx, %ecx;movl (%eax), %edx;leal -(%edx,%ecx), %edx;movl %edx, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;subl $, %ecx;cmpl %edx, %ecx;movl %ecx, (%ebp);jae  <LsaDeregisterLogonProcess+>": 1,
                "addl $, -(%ebp);cmpl %ecx, -(%ebp);jb - <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "andl $, -(%ebp);movl %edi, -(%ebp);shrl $, -(%ebp);shrl $, %eax;movl %eax, -(%ebp)": 1,
                "shrl $, -(%ebp);shrl $, %eax;movl %eax, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "notl %eax;andl %eax, (%esi);incl -(%ebp);addl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl (%eax), %ecx;movl (%eax), %edi;pushl $;pushl $;pushl %eax": 1,
                "pushl $;pushl $;pushl %eax;pushl %esi;movl %ecx, (%ebp)": 1,
                "pushl %esi;movl %ecx, (%ebp);calll - <ObCheckCreateObjectAccess+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;andl $, %edi;movl %ecx, (%eax);leal (%edi), %eax;cmpl -(%ebp), %eax": 1,
                "addl $, %edi;cmpl (%ebp), %edi;jb - <LsaDeregisterLogonProcess+>;cmpl %ebx, (%ebx);jne - <LsaDeregisterLogonProcess+>": 1,
                "cmpw %di, (%esi);movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;subl $, %ebx;movl (%esi), %edx;movl (%edx), %edx;cmpl %edx, %ecx": 1,
                "addl (%ebx), %eax;movl %eax, (%ebp);jmp  <LsaDeregisterLogonProcess+>;addl $, (%ebp);movl (%ebp), %eax": 1,
                "leal -(%ebp), %eax;cmpl %eax, %ecx;jne - <LsaDeregisterLogonProcess+>;movl %edi, -(%ebp);leal (%esi), %ebx": 1,
                "leal (%esi), %ebx;jmp  <LsaDeregisterLogonProcess+>;pushl %esi;pushl $;jmp  <LsaDeregisterLogonProcess+>": 1,
                "calll - <RtlInitializeBitMap+>;addl $, (%ebx);movl (%ebx), %ecx;movl (%ebp), %edx;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);pushl -(%ebp);pushl $;jmp  <LsaDeregisterLogonProcess+>;andl $, (%ecx)": 1,
                "pushl %eax;movl (%edi), %eax;shrl $, %eax;pushl %eax;leal (%esi), %eax": 1,
                "movl (%edi), %eax;shrl $, %eax;pushl %eax;leal (%esi), %eax;pushl %eax": 1,
                "calll - <RtlClearBits>;movl (%edi), %eax;addl (%edi), %eax;movl %eax, (%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %eax;cmpl (%esi), %eax;jb - <LsaDeregisterLogonProcess+>;xorl %edi, %edi;pushl %edi": 1,
                "pushl $;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "testb %al, %al;jne  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %esi;pushl $": 1,
                "testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "calll - <ZwClose>;leave;retl $;popl %esp;addb %dh, (%edx)": 1,
                "imull $, (%eax), %eax;jb  <LsaDeregisterLogonProcess+>;jns  <LsaDeregisterLogonProcess+>;popl %esp;addb %ch, (%ebp)": 1,
                "je  <KeFlushQueuedDpcs+>;movl (%eax), %edi;movl (%edi), %eax;addl %eax, (%ebp);testb $, (%edi)": 1,
                "calll - <FsRtlNotifyFilterChangeDirectory+>;jmp  <KeFlushQueuedDpcs+>;testb $, %cl;je  <KeFlushQueuedDpcs+>;pushl %eax": 1,
                "pushl %ecx;pushl %esi;movl %ecx, -(%ebp);calll - <RtlStringFromGUID+>;pushl -(%ebp)": 1,
                "calll - <RtlStringFromGUID+>;pushl %eax;pushl -(%ebp);calll - <FsRtlNotifyFilterChangeDirectory+>;jmp  <KeFlushQueuedDpcs+>": 1,
                "movl (%ebx), %edi;shrl $, %edi;decl %edi;shrl $, %edi;pushl %edi": 1,
                "andl $, (%esi);testl %eax, %eax;je  <KeFlushQueuedDpcs+>;pushl (%esi);pushl %eax": 1,
                "pushl %edi;je  <KeFlushQueuedDpcs+>;decl %eax;shrl $, %eax;jmp  <KeFlushQueuedDpcs+>": 1,
                "movl (%ebp), %edi;pushl %edi;calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax;jl  <KeFlushQueuedDpcs+>": 1,
                "jne  <KeFlushQueuedDpcs+>;pushl (%ebp);calll - <KeFlushQueuedDpcs+>;movl $, %eax;jmp  <KeFlushQueuedDpcs+>": 1,
                "ja  <KeFlushQueuedDpcs+>;cmpl %edi, %eax;jb  <KeFlushQueuedDpcs+>;cmpl $, (%esi);jne  <KeFlushQueuedDpcs+>": 1,
                "movl $, %ecx;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi;addl $, %eax": 1,
                "andl $, (%ebx);movl $, %ecx;movl %ecx, (%ebx);movl %ecx, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl $, %ecx;movl %ecx, (%ebx);movl %ecx, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%ebx)": 1,
                "pushl %eax;pushl %ebx;pushl %edx;pushl %esi;calll - <IoOpenDeviceRegistryKey+>": 1,
                "pushl $;pushl $;pushl $;pushl %esi;calll - <SeCreateClientSecurity+>": 1,
                "jl  <KeFlushQueuedDpcs+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;popl %edi": 1,
                "jmp  <KeFlushQueuedDpcs+>;pushl %edi;xorl %eax, %eax;movl $, %ecx;movl %esi, %edi": 1,
                "testb %al, %al;je  <KeFlushQueuedDpcs+>;cmpl $, (%esi);jne  <KeFlushQueuedDpcs+>;cmpl %edi, (%esi)": 1,
                "jne  <KeFlushQueuedDpcs+>;pushl %esi;calll - <RtlUnicodeStringToInteger+>;cmpl (%esi), %eax;jne  <KeFlushQueuedDpcs+>": 1,
                "pushl %eax;pushl (%ebx);calll - <ZwQueryVolumeInformationFile>;testl %eax, %eax;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %ecx;popl %eax;movl %esi, (%ecx);popl %edi;popl %esi": 1,
                "jmp  <KeFlushQueuedDpcs+>;movl (%edi), %ecx;movl (%ecx), %eax;pushl $;movl %eax, (%edi)": 1,
                "popl %ebx;pushl %edi;calll - <RtlClearAllBits>;addl $, %edi;decl %ebx": 1,
                "addl $, %edi;decl %ebx;jne - <KeFlushQueuedDpcs+>;xorl %eax, %eax;cmpl %eax, (%esi)": 1,
                "movl %eax, -(%ebp);je  <KeFlushQueuedDpcs+>;testb $, (%eax);jne  <KeFlushQueuedDpcs+>;movl -(%ebp), %ecx": 1,
                "pushl ;leal (%ebp), %eax;pushl %eax;pushl $;pushl %esi": 1,
                "pushl %edi;pushl %esi;calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax;jl  <KeFlushQueuedDpcs+>": 1,
                "movl (%eax), %eax;movl %eax, (%ecx);movl (%ebx), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %edi;pushl $;calll *(%ebx);movl %eax, %esi;movl %esi, -(%ebp)": 1,
                "jmp  <KeFlushQueuedDpcs+>;movl (%esi), %eax;testb $, %al;je  <KeFlushQueuedDpcs+>;movl (%esi), %eax": 1,
                "pushl $;pushl -(%ebp);pushl %eax;pushl -(%ebp);pushl %ebx": 1,
                "movl -(%ebp), %esi;orl $-, -(%ebp);movl (%ebp), %ebx;cmpl $, -(%ebp);je  <KeFlushQueuedDpcs+>": 1,
                "je  <KeFlushQueuedDpcs+>;andl $-, %eax;movl %eax, %esi;movl (%esi), %eax;subl %eax, (%esi)": 1,
                "addl %eax, (%ebp);movl (%ebp), %esi;jmp  <KeFlushQueuedDpcs+>;addl $, (%ebp);cmpl %ebx, (%ebp)": 1,
                "shrl $, %ebx;leal -(%esi), %eax;pushl %ebx;shrl $, %eax;incl %eax": 1,
                "jne  <KeFlushQueuedDpcs+>;xorl %esi, %esi;incl %esi;movl $, %ecx;movl %esi, ": 1,
                "movl %eax, ;movl -(%ebp), %eax;movl %eax, ;movl -(%ebp), %eax;leal -(%esi,%eax), %eax": 1,
                "jmp - <KeFlushQueuedDpcs+>;pushl $;addl $, %edi;pushl $;andl $-, %edi": 1,
                "calll - <ExReleaseFastMutexUnsafe>;movl $, ;pushl $;jmp  <KeFlushQueuedDpcs+>;movl , %esi": 1,
                "jmp  <KeFlushQueuedDpcs+>;movl , %esi;movl -(%ebp), %ecx;movl -(%ebp), %edi;movl %ecx, %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl $, %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);calll - <RtlInitializeBitMap>;leal -(%ebp), %eax": 1,
                "calll - <RtlInitializeBitMap>;leal -(%ebp), %eax;pushl %eax;calll - <RtlNumberOfSetBits>;cmpl %esi, %eax": 1,
                "pushl $;andl $-, %esi;pushl %ebx;movl %eax, (%ebx);movl %esi, (%ebx)": 1,
                "shrl %cl, %edx;testb $, %dl;jne  <KeFlushQueuedDpcs+>;incl %edi;cmpl %esi, %edi": 1,
                "jne  <KeFlushQueuedDpcs+>;movl (%esi), %edx;cmpl (%ebx), %edx;jbe  <KeFlushQueuedDpcs+>;testb $, %cl": 1,
                "pushl $;pushl $;pushl %edx;calll *(%eax);testl %eax, %eax": 1,
                "jmp  <KeFlushQueuedDpcs+>;movl %ebx, -(%ebp);jmp  <KeFlushQueuedDpcs+>;pushl $;pushl %ebx": 1,
                "subl -(%ebp), %edi;movl (%ebx), %ecx;addl -(%ebp), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;movl -(%ebp), %edi;movl (%ebx), %ecx": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;movl -(%ebp), %edi;movl (%ebx), %ecx;movl (%ebx), %eax": 1,
                "movl -(%ebp), %edi;movl (%ebx), %ecx;movl (%ebx), %eax;addl %ecx, %eax;movl (%ebp), %ecx": 1,
                "movl (%ebx), %eax;addl %ecx, %eax;movl (%ebp), %ecx;movl (%ecx), %ecx;cmpl (%ecx), %eax": 1,
                "leal (%esi), %eax;jmp  <KeFlushQueuedDpcs+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);jae  <KeFlushQueuedDpcs+>": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpb $, ;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;subl %eax, %ecx;shrl $, %ecx;pushl %ecx;shrl $, %eax": 1,
                "movl (%ebx), %eax;addl (%ebx), %eax;pushl $;pushl %eax;pushl (%ebp)": 1,
                "orl $, (%eax);pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl (%esi), %eax": 1,
                "shrl $, %eax;pushl %eax;shrl $, %ebx;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <RtlClearBits>;movl %esi, %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlClearBits>;movl %esi, %ebx;movl -(%ebp), %esi": 1,
                "cmpb $, ;movl $, ;movl (%esi), %ecx;movl %ecx, ;jne  <KeFlushQueuedDpcs+>": 1,
                "je  <KeFlushQueuedDpcs+>;outsb (%esi), %dx;incl %edx;imull $, (%esi), %ebp;js  <KeFlushQueuedDpcs+>": 1,
                "pushl %ebx;arpl %si, %gs:(%edi,%ebp,);decl %ecx;insl %dx, %es:(%edi);popal": 1,
                "popal;andb %bh, %gs:(%di);andb %ah, ;imull $, (%esi), %ebp;subb $, %al": 1,
                "cmpl %edi, %eax;jne  <KeFlushQueuedDpcs+>;movl $, %edi;jmp  <KeFlushQueuedDpcs+>;cmpl $, %eax": 1,
                "jne  <KeFlushQueuedDpcs+>;cmpb $, (%ebx);jne  <KeFlushQueuedDpcs+>;movl $, %edi;jmp  <KeFlushQueuedDpcs+>": 1,
                "jmp  <KeFlushQueuedDpcs+>;cmpl $, %eax;jne  <KeFlushQueuedDpcs+>;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %edi, %edi;jge  <KeFlushQueuedDpcs+>;cmpl $, %edi;je  <KeFlushQueuedDpcs+>;cmpl $, %edi": 1,
                "cmpl $, %edi;je  <KeFlushQueuedDpcs+>;cmpl $, %edi;jmp  <KeFlushQueuedDpcs+>;cmpl $, (%ebp)": 1,
                "cmpl $, %edi;jmp  <KeFlushQueuedDpcs+>;cmpl $, (%ebp);je  <KeFlushQueuedDpcs+>;cmpl $, (%ebp)": 1,
                "calll - <KeFlushQueuedDpcs+>;testl %esi, %esi;je  <KeFlushQueuedDpcs+>;pushl $;pushl %esi": 1,
                "calll *(%ebx);andl $, (%ebx);andl $, (%ebx);jmp  <KeFlushQueuedDpcs+>;movl $, %edi": 1,
                "je  <KeFlushQueuedDpcs+>;addl $, %edi;andl $, %edi;jmp  <KeFlushQueuedDpcs+>;movl $, %edi": 1,
                "pushl %ecx;movl (%ebp), %eax;pushl %esi;movl (%ebp), %esi;pushl %eax": 1,
                "movl %eax, -(%ebp);calll *(%esi);testl %eax, %eax;je  <KeFlushQueuedDpcs+>;pushl %ebx": 1,
                "calll *(%esi);testl %eax, %eax;je  <KeFlushQueuedDpcs+>;pushl %ebx;pushl %edi": 1,
                "je  <KeFlushQueuedDpcs+>;pushl -(%ebp);pushl %esi;calll *%eax;movl (%ebp), %eax": 1,
                "cmpl %eax, -(%ebp);je  <KeFlushQueuedDpcs+>;movl %edi, -(%ebp);pushl -(%ebp);pushl %esi": 1,
                "pushl -(%ebp);pushl %esi;calll *(%esi);testl %eax, %eax;jne - <KeFlushQueuedDpcs+>": 1,
                "movl (%ebp), %eax;imull $, %eax, %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "pushl (%esi);pushl %ebx;calll - <RtlInitializeBitMap+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "testb $, (%edi);jne  <KeFlushQueuedDpcs+>;movl (%esi), %eax;movl (%edi), %ecx;leal -(%eax,%ecx), %eax": 1,
                "je  <KeFlushQueuedDpcs+>;addl $, (%ebp);movl %esi, (%eax);movl (%ebp), %eax;cmpl (%edi), %eax": 2,
                "je  <KeFlushQueuedDpcs+>;movl (%ebp), %ecx;movl (%edi), %eax;movl (%ecx), %ecx;xorl %eax, %ecx": 1,
                "pushl (%esi);calll - <FsRtlNotifyFilterChangeDirectory+>;testb %al, %al;je  <KeFlushQueuedDpcs+>;movl (%edi), %eax": 1,
                "pushl $;jmp  <KeFlushQueuedDpcs+>;pushl $;movl (%edi), %eax;addl (%ebp), %eax": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %ecx, %edx;jae  <KeFlushQueuedDpcs+>;movl (%ebp), %edi": 1,
                "cmpl %edx, %edi;jne  <KeFlushQueuedDpcs+>;movl (%ecx), %edx;testl %edx, %edx;jge  <KeFlushQueuedDpcs+>": 1,
                "cmpl $, (%ebp);jne  <KeFlushQueuedDpcs+>;pushl $-;jmp  <KeFlushQueuedDpcs+>;pushl $-": 1,
                "addl %edx, -(%ebp);cmpl %esi, -(%ebp);ja  <KeFlushQueuedDpcs+>;leal (%esi,%eax), %ebx;cmpl %ebx, %edi": 1,
                "xorl %edi, %edi;movl -(%ebp), %eax;movl -(%ebp), %edx;leal (%eax,%edx), %eax;cmpl %esi, %eax": 1,
                "movl %ecx, ;orl $-, ;orl $-, ;movl %ecx, ;xorl %esi, %esi": 1,
                "ja  <KeFlushQueuedDpcs+>;movl -(%ebp), %eax;imull $, %eax, %eax;movl (%eax,%ebx), %eax;movl %eax, -(%ebp)": 1,
                "pushl %esi;pushl %ebx;calll - <RtlInitializeBitMap+>;movl %eax, %edi;movl %edi, -(%ebp)": 1,
                "pushl %ebx;calll - <RtlInitializeBitMap+>;movl %eax, %edi;movl %edi, -(%ebp);testl %edi, %edi": 1,
                "movl %esi, ;jmp  <KeFlushQueuedDpcs+>;testb $, (%edi);jne  <KeFlushQueuedDpcs+>;pushl $": 1,
                "jmp  <KeFlushQueuedDpcs+>;nop;nop;nop;nop": 10,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl (%ebp), %esi;movl $, %ecx;calll *": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;movl (%ebp), %esi;addl $, %esi": 1,
                "testl %esi, %esi;je  <KeFlushQueuedDpcs+>;movl %esi, %ecx;calll - <ObfReferenceObject>;movl %edi, %ecx": 1,
                "movl %esi, %ecx;calll - <ObfReferenceObject>;movl %edi, %ecx;calll *;testl %esi, %esi": 1,
                "movl %ebx, (%eax);leal (%eax), %ecx;movl %ecx, (%ecx);movl %ecx, (%ecx);movzbl (%ebp), %ecx": 1,
                "pushl %eax;calll - <ObCloseHandle>;movl (%esi), %ecx;calll - <ObfDereferenceObject>;movl (%esi), %ecx": 1,
                "movl $, %eax;jmp  <KeFlushQueuedDpcs+>;movl (%ebp), %ecx;orl $, %esi;movl %esi, (%ebx)": 1,
                "movl %esi, (%ebx);calll - <ObfReferenceObject>;movl (%ebp), %ecx;calll - <ObfReferenceObject>;movl %fs:, %eax": 1,
                "movl (%ebp), %ecx;testb $-, (%ecx);je  <KeFlushQueuedDpcs+>;andl $, (%ebp);cmpl $, %eax": 1,
                "testb $-, (%ecx);je  <KeFlushQueuedDpcs+>;andl $, (%ebp);cmpl $, %eax;je  <KeFlushQueuedDpcs+>": 1,
                "cmpl %edi, (%ebp);jge  <KeFlushQueuedDpcs+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, %ecx": 1,
                "movl %edi, %esi;movl %esi, -(%ebp);cmpl %ebx, %esi;je  <KeFlushQueuedDpcs+>;movl -(%ebp), %ecx": 1,
                "calll - <ObfDereferenceObject>;movl %esi, -(%ebp);movl %esi, %ecx;calll - <ObfReferenceObject>;leal (%esi), %ecx": 1,
                "movl %esi, -(%ebp);movl %esi, %ecx;calll - <ObfReferenceObject>;leal (%esi), %ecx;calll - <ExAcquireRundownProtection>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;je  <KeFlushQueuedDpcs+>;movl %ebx, -(%ebp);movl (%eax), %ecx": 1,
                "cmpl %ebx, %eax;je  <KeFlushQueuedDpcs+>;movl %ebx, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <KeFlushQueuedDpcs+>;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx": 1,
                "movl %esi, -(%ebp);pushl %esi;pushl (%ebp);calll - <RtlUnicodeStringToAnsiString+>;movl %eax, %esi": 1,
                "movl -(%ebp), %eax;cmpl %ebx, %eax;je  <KeFlushQueuedDpcs+>;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "jmp  <KeFlushQueuedDpcs+>;movl $, -(%ebp);movl -(%ebp), %eax;calll - <_CIsqrt+>;retl $": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll - <MmProbeAndLockProcessPages+>;movl %eax, -(%ebp)": 1,
                "calll - <KeFlushQueuedDpcs+>;movl %eax, %esi;cmpl %edi, %esi;jge  <KeFlushQueuedDpcs+>;movl -(%ebp), %ecx": 1,
                "decl %eax;decl %eax;je  <KeFlushQueuedDpcs+>;decl %eax;je  <KeFlushQueuedDpcs+>": 1,
                "pushl %eax;calll - <NtQueryInformationToken+>;testl %eax, %eax;jge  <KeFlushQueuedDpcs+>;movl %esi, (%edi)": 1,
                "jge  <KeFlushQueuedDpcs+>;movl %esi, (%edi);popl %edi;popl %esi;popl %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl (%edx), %ecx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%edx), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl (%edx), %ecx;subl $, %ecx;pushl %esi;pushl %edi": 1,
                "leal (%edx), %esi;leal (%eax), %edi;popl %ecx;rep  movsl (%esi), %es:(%edi);andl $, (%edx)": 1,
                "movl (%esi), %ecx;cmpl $, %ecx;je  <KeFlushQueuedDpcs+>;xorl %edx, %edx;cmpl $, %ecx": 1,
                "movl (%ebp), %ecx;movl %ecx, -(%ebp);movl , %eax;cmpl %eax, %ecx;jb  <KeFlushQueuedDpcs+>": 1,
                "movl -(%ebp), %edi;cmpl %esi, %eax;jl  <KeFlushQueuedDpcs+>;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movb $, -(%ebp);jmp  <KeFlushQueuedDpcs+>;movl (%esi), %edx;cmpl (%eax), %edx;je  <KeFlushQueuedDpcs+>": 1,
                "sbbl -(%ebp), %esi;addl %edx, -(%ebp);adcl %esi, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);xorl %esi, %esi;cmpl %esi, -(%ebp);jg  <KeFlushQueuedDpcs+>": 1,
                "jmp - <KeFlushQueuedDpcs+>;jmp  <KeFlushQueuedDpcs+>;movl $, %ebx;jmp  <KeFlushQueuedDpcs+>;pushl -(%ebp)": 1,
                "movl $, %ebx;jmp  <KeFlushQueuedDpcs+>;pushl -(%ebp);pushl -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <KeFlushQueuedDpcs+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movb %al, -(%ebp);xorl %edi, %edi;movl %edi, -(%ebp);testb %al, %al;je  <KeFlushQueuedDpcs+>": 1,
                "leal (%esi,%ebx), %eax;cmpl %ebx, %eax;jb  <KeFlushQueuedDpcs+>;cmpl , %eax;jbe  <KeFlushQueuedDpcs+>": 1,
                "jmp  <KeFlushQueuedDpcs+>;movl (%ebp), %eax;cmpl %edi, %eax;je  <KeFlushQueuedDpcs+>;movl %edi, (%eax)": 1,
                "movl %ecx, (%eax);movl $, %eax;jmp - <KeFlushQueuedDpcs+>;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;cmpl %edi, %eax;jl  <KeFlushQueuedDpcs+>;movl -(%ebp), %esi": 1,
                "leal (%esi), %edi;movl %edi, %ecx;calll *;testb $, %bl;je  <KeFlushQueuedDpcs+>": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testb $, (%esi);pushl %edi": 1,
                "testb $, (%esi);pushl %edi;movl (%esi), %edi;je  <KeFlushQueuedDpcs+>;pushl $": 1,
                "movl (%esi), %edi;je  <KeFlushQueuedDpcs+>;pushl $;pushl %edi;calll - <NtAdjustPrivilegesToken+>": 1,
                "calll - <NtAdjustPrivilegesToken+>;testb $, (%esi);je  <KeFlushQueuedDpcs+>;leal (%edi), %ecx;calll - <ExReleaseRundownProtection>": 1,
                "calll *;cmpb $, (%ebp);je  <KeFlushQueuedDpcs+>;pushl (%ebp);calll - <KeFlushQueuedDpcs+>": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;pushl %eax;movl %edi, (%ebp);movl $, (%eax)": 1,
                "calll - <KeFlushQueuedDpcs+>;cmpl %esi, %edi;jne - <KeFlushQueuedDpcs+>;popl %edi;popl %esi": 1,
                "testl %esi, %esi;je  <KeFlushQueuedDpcs+>;leal -(%ebp), %eax;leal (%esi), %ecx;movl %eax, -(%ebp)": 1,
                "calll *%edi;leal (%esi), %ebx;movl (%ebx), %ecx;jmp  <KeFlushQueuedDpcs+>;movl (%ebp), %edx": 1,
                "movl $, (%ecx);calll - <KeFlushQueuedDpcs+>;movl -(%ebp), %ecx;leal -(%ebp), %eax;cmpl %eax, %ecx": 1,
                "leal -(%ebp), %eax;cmpl %eax, %ecx;jne - <KeFlushQueuedDpcs+>;movl (%ebp), %eax;popl %edi": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl $, (%ebp);jmp  <KeFlushQueuedDpcs+>;andl $, (%ebp);movl (%ebp), %ebx;leal (%ebx), %ecx": 1,
                "movl (%ebp), %ebx;leal (%ebx), %ecx;movl %ecx, -(%ebp);calll *%esi;cmpl $, (%ebp)": 1,
                "movl $, (%ebp);leal (%ebx), %eax;movl (%eax), %esi;cmpl %eax, %esi;jne  <KeFlushQueuedDpcs+>": 1,
                "testb $, %al;je  <KeFlushQueuedDpcs+>;movl $, %eax;lock;orl %eax, (%ebx)": 1,
                "movl -(%ebp), %eax;leal -(%ebp), %ecx;movl %eax, (%esi);movl %ecx, (%esi);movl %esi, (%eax)": 2,
                "cmpb $, -(%ebp);je  <KeFlushQueuedDpcs+>;pushl $;pushl $;pushl (%ebp)": 1,
                "je  <KeFlushQueuedDpcs+>;movl , %eax;cmpl %eax, %ecx;jb  <KeFlushQueuedDpcs+>;movl %ebx, (%eax)": 1,
                "leal (%edi), %esi;movl (%esi), %eax;jmp  <KeFlushQueuedDpcs+>;movl -(%ebp), %ecx;cmpl %ecx, (%eax)": 1,
                "jmp - <KeFlushQueuedDpcs+>;jmp  <KeFlushQueuedDpcs+>;andl $-, (%eax);pushl $;pushl $": 1,
                "pushl %edi;calll - <KeSetEvent>;leal (%edi), %ecx;calll *;movl %edi, %ecx": 1,
                "movl %eax, (%ebx);andl $, (%ebx);pushl %ebx;calll - <KeFlushQueuedDpcs+>;jmp  <KeFlushQueuedDpcs+>": 1,
                "xorl %ecx, %ecx;incl %ecx;addl $, %eax;lock;orl %ecx, (%eax)": 1,
                "jl  <KeFlushQueuedDpcs+>;pushl %esi;pushl $;popl %ecx;leal -(%ebp), %esi": 1,
                "jne  <KeFlushQueuedDpcs+>;calll - <KeQueryPriorityThread+>;movb $, %al;retl;xorb %al, %al": 1,
                "movl $, -(%ebp);movl $, -(%ebp);calll - <ZwOpenFile>;pushl $;pushl (%ebp)": 1,
                "pushl %eax;calll - <KeQuerySystemTime>;movl (%ebp), %eax;movl %eax, -(%ebp);pushl $": 1,
                "jmp  <KeFlushQueuedDpcs+>;testb $, (%ebp);je  <KeFlushQueuedDpcs+>;pushl $;movb $, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <IoGetDeviceInterfaceAlias+>;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "popl %eax;jmp  <KeFlushQueuedDpcs+>;xorl %eax, %eax;incl %eax;popl %ebp": 1,
                "movl %eax, %edi;xorl %ebx, %ebx;cmpl %ebx, %edi;jne  <KeFlushQueuedDpcs+>;movl $, %esi": 1,
                "movl $, %esi;jmp  <KeFlushQueuedDpcs+>;movl (%edi), %eax;cmpl %ebx, (%eax);jne  <KeFlushQueuedDpcs+>": 1,
                "movl (%edi), %eax;cmpl %ebx, (%eax);jne  <KeFlushQueuedDpcs+>;movl $, %esi;jmp  <KeFlushQueuedDpcs+>": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movb (%ebp), %al;negb %al": 1,
                "leal -(%ebp), %ecx;sbbl %eax, %eax;andl %ecx, %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl %edi;calll - <toupper+>;movl %eax, %esi;cmpl %ebx, %esi;jl  <KeFlushQueuedDpcs+>": 1,
                "je  <KeFlushQueuedDpcs+>;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %ecx;movl (%ebp), %eax;movw (%eax), %cx": 1,
                "pushl %eax;calll - <IoGetDeviceInterfaceAlias+>;movl %esi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "calll - <IoGetRequestorSessionId+>;movl %edi, %eax;popl %edi;leave;retl $": 1,
                "pushl %eax;calll - <RtlCheckRegistryKey+>;pushl -(%ebp);movl %eax, %esi;pushl (%ebp)": 1,
                "pushl %eax;pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll - <RtlValidSecurityDescriptor+>": 10,
                "negb %al;pushl $;sbbl %eax, %eax;addl $, %eax;pushl %eax": 1,
                "pushl %edi;movl %eax, -(%ebp);movw %ax, -(%ebp);movw %ax, -(%ebp);movl %eax, -(%ebp)": 1,
                "calll - <RtlValidSecurityDescriptor+>;movl %eax, %ebx;testl %ebx, %ebx;jl  <KeFlushQueuedDpcs+>;pushl (%esi)": 1,
                "testl %ebx, %ebx;jl  <KeFlushQueuedDpcs+>;pushl (%esi);leal (%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);pushl %edi;calll - <RtlValidSecurityDescriptor+>;testl %eax, %eax;jge  <KeFlushQueuedDpcs+>": 2,
                "movl %eax, %ebx;movl (%ebp), %eax;shrl %eax;movl %eax, (%esi);pushl -(%ebp)": 2,
                "cmpl %eax, (%esi);je  <KeFlushQueuedDpcs+>;leal (%ecx,%ecx), %eax;cmpb $, (%esi);movl %eax, (%ebp)": 1,
                "movb (%esi), %al;pushl %eax;leal (%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <KeFlushQueuedDpcs+>": 2,
                "cmpb $, (%esi);movl %eax, %edi;je  <KeFlushQueuedDpcs+>;cmpl $, -(%ebp);je  <KeFlushQueuedDpcs+>": 1,
                "movl %eax, %edi;je  <KeFlushQueuedDpcs+>;cmpl $, -(%ebp);je  <KeFlushQueuedDpcs+>;testl %edi, %edi": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <KeFlushQueuedDpcs+>;leal (%ebp), %eax;pushl %eax": 1,
                "calll - <KeFlushQueuedDpcs+>;cmpl $, -(%ebp);movl %eax, %edi;je  <KeFlushQueuedDpcs+>;movl (%esi), %eax": 1,
                "pushl -(%ebp);leal (%esi), %eax;pushl %eax;calll - <RtlValidSecurityDescriptor+>;testl %eax, %eax": 1,
                "pushl %ebx;pushl %edi;pushl $;pushl (%ebp);xorl %ebx, %ebx": 1,
                "leal -(%ebp), %eax;pushl (%esi);movl %ebx, -(%ebp);pushl %eax;movl %ebx, (%ebp)": 1,
                "movl %ebx, -(%ebp);pushl %eax;movl %ebx, (%ebp);movl %ebx, -(%ebp);movw %bx, -(%ebp)": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;jl  <KeFlushQueuedDpcs+>;pushl (%esi);leal (%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlValidSecurityDescriptor+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "calll - <RtlValidSecurityDescriptor+>;cmpl %ebx, %eax;jge  <KeFlushQueuedDpcs+>;movl %eax, %edi;pushl $": 1,
                "pushl (%ebp);calll - <IoGetRequestorSessionId+>;pushl (%ebp);pushl (%ebp);calll - <IoGetRequestorSessionId+>": 1,
                "calll - <IoGetRequestorSessionId+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <KeFlushQueuedDpcs+>;calll - <ObfDereferenceObject>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movzwl (%ebx), %eax;movl (%edx), %ecx;xorl %esi, %esi": 2,
                "pushl %esi;calll - <RtlCheckRegistryKey+>;testl %eax, %eax;jge  <KeFlushQueuedDpcs+>;movl $, %eax": 1,
                "je  <KeFlushQueuedDpcs+>;movl $, -(%ebp);testb $, %al;je  <KeFlushQueuedDpcs+>;orl %edi, -(%ebp)": 1,
                "je  <KeFlushQueuedDpcs+>;decl %eax;je  <KeFlushQueuedDpcs+>;decl %eax;jne  <KeFlushQueuedDpcs+>": 1,
                "jmp  <KeFlushQueuedDpcs+>;orl $, -(%ebp);jmp  <KeFlushQueuedDpcs+>;orl $, -(%ebp);jmp  <KeFlushQueuedDpcs+>": 1,
                "orl $, -(%ebp);testl %ecx, %ecx;je  <KeFlushQueuedDpcs+>;movl -(%ebp,%ecx,), %eax;jmp  <KeFlushQueuedDpcs+>": 1,
                "testb %al, %dl;je  <KeFlushQueuedDpcs+>;pushl $;jmp  <KeFlushQueuedDpcs+>;testb $, %al": 1,
                "jmp  <KeFlushQueuedDpcs+>;testb $, %al;je  <KeFlushQueuedDpcs+>;pushl $;jmp  <KeFlushQueuedDpcs+>": 1,
                "pushl $;popl %eax;jmp  <KeFlushQueuedDpcs+>;movzbl %al, %eax;shrl $, %eax": 1,
                "decl %ecx;cmpl $, %ecx;jge - <KeFlushQueuedDpcs+>;movl -(%ebp), %eax;movl (%ebp), %edi": 1,
                "movl %eax, (%ebx);movl $, %eax;jmp  <KeFlushQueuedDpcs+>;testl %edi, %edi;je  <KeFlushQueuedDpcs+>": 1,
                "calll - <IoGetRequestorSessionId+>;movl %edi, %eax;popl %edi;popl %esi;leave": 1,
                "calll - <ExAcquireResourceSharedLite>;pushl $;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movb $, (%eax);calll *;movl (%ebp), %eax;leave;retl $": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <NtFindAtom+>;movl %eax, %ebx;cmpl %esi, %ebx": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);leal -(%ebp), %eax;pushl -(%ebp)": 1,
                "cmpl $, (%eax);jb  <KeFlushQueuedDpcs+>;movl (%eax), %ecx;movl (%eax,%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "cmpl $, (%eax);jne  <KeFlushQueuedDpcs+>;cmpl %esi, (%eax);je  <KeFlushQueuedDpcs+>;pushl %esi": 1,
                "jne  <KeFlushQueuedDpcs+>;cmpl %esi, (%eax);je  <KeFlushQueuedDpcs+>;pushl %esi;leal -(%ebp), %ecx": 1,
                "calll - <IoCreateDevice>;movl %eax, %ebx;cmpl %esi, %ebx;jl  <KeFlushQueuedDpcs+>;movl -(%ebp), %eax": 1,
                "pushl $;pushl -(%ebp);calll - <InbvInstallDisplayStringFilter+>;movl -(%ebp), %eax;pushl %esi": 1,
                "movl -(%ebp), %eax;pushl %esi;pushl (%ebp);addl $, %eax;pushl %eax": 1,
                "pushl $;calll - <RtlCheckRegistryKey+>;jmp  <KeFlushQueuedDpcs+>;pushl -(%ebp);calll - <IoDeleteDevice>": 1,
                "calll - <RtlCheckRegistryKey+>;jmp  <KeFlushQueuedDpcs+>;pushl -(%ebp);calll - <IoDeleteDevice>;movl %esi, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwClose>;cmpl %esi, -(%ebp);je  <KeFlushQueuedDpcs+>;pushl -(%ebp)": 1,
                "je  <KeFlushQueuedDpcs+>;pushl -(%ebp);calll - <ZwClose>;movl $, %ecx;calll - <ExReleaseResourceLite>": 1,
                "jbe  <KeFlushQueuedDpcs+>;imull $, (%eax), %eax;addb %al, (%eax);int;int": 1,
                "movl (%edi), %eax;xorl %esi, %esi;jmp  <KeFlushQueuedDpcs+>;movl (%eax), %eax;incl %esi": 1,
                "jne - <KeFlushQueuedDpcs+>;pushl $;leal (,%esi,), %eax;pushl %eax;pushl $": 1,
                "movl %eax, -(%ebp);je  <KeFlushQueuedDpcs+>;andl $, -(%ebp);movl %esi, (%eax);movl (%edi), %edi": 1,
                "testl %eax, %eax;je  <KeFlushQueuedDpcs+>;movl (%eax), %ecx;testl %ecx, %ecx;jbe  <KeFlushQueuedDpcs+>": 1,
                "jbe  <KeFlushQueuedDpcs+>;movl -(%ebp), %ebx;xorl %esi, %esi;testl %ecx, %ecx;movl $, -(%ebp)": 1,
                "andw $, (%ebx);jmp  <KeFlushQueuedDpcs+>;movl $, -(%ebp);jmp - <KeFlushQueuedDpcs+>;pushl $": 1,
                "movl $, -(%ebp);jmp  <KeFlushQueuedDpcs+>;movl $, -(%ebp);xorl %esi, %esi;pushl %esi": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <KeFlushQueuedDpcs+>;movl -(%ebp), %eax;movl %esi, (%eax)": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "pushl %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl %ebx, -(%ebp)": 1,
                "pushl %edi;calll - <RtlValidSecurityDescriptor+>;cmpl %ebx, %eax;jge  <KeFlushQueuedDpcs+>;movl %eax, (%ebp)": 1,
                "calll - <RtlValidSecurityDescriptor+>;cmpl %ebx, %eax;jge  <KeFlushQueuedDpcs+>;movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;shrl %eax;movl %eax, (%esi);pushl -(%ebp);pushl (%ebp)": 1,
                "calll - <IoGetRequestorSessionId+>;pushl -(%ebp);pushl (%ebp);calll - <IoGetRequestorSessionId+>;movl (%ebp), %eax": 1,
                "movw %cx, -(%ebp);movw %cx, -(%ebp);movl %ecx, -(%ebp);je  <KeFlushQueuedDpcs+>;cmpl %ecx, (%esi)": 1,
                "pushl (%ebp);pushl %eax;calll - <IoReleaseRemoveLockEx+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "calll - <SeSinglePrivilegeCheck>;testb %al, %al;je  <KeFlushQueuedDpcs+>;movl (%ebp), %eax;cmpl , %eax": 1,
                "movl (%ebp), %eax;cmpl , %eax;movl $, %edx;jae  <KeFlushQueuedDpcs+>;movl (,%eax,), %edx": 1,
                "xorl %ecx, %ecx;notl %eax;andl (%edx), %eax;orl %ecx, %eax;movl %eax, (%edx)": 1,
                "pushl %eax;pushl $;pushl $;calll *;testl %eax, %eax": 4,
                "addb $, %al;addb $, %al;orb %cl, (%eax);addb $, %al;addb $, %al": 1,
                "addb $, %al;orb %cl, (%eax);addb $, %al;addb $, %al;addb $, %al": 1,
                "jae  <KeFlushQueuedDpcs+>;addb %dl, %cs:(%edx);popal;addb %dh, (%edi);addb %al, (%eax)": 1,
                "addb %al, %cs:(%edx);jne  <KeFlushQueuedDpcs+>;jae  <KeFlushQueuedDpcs+>;addb %dl, %cs:(%eax,%eax);addb %ah, (%ecx)": 1,
                "jae  <KeFlushQueuedDpcs+>;addb %dl, %cs:(%eax,%eax);addb %ah, (%ecx);outsb (%esi), %dx;addb %dh, (%ebx)": 1,
                "jae  <KeFlushQueuedDpcs+>;outsl (%esi), %dx;addb %dh, (%ebp);jb  <KeFlushQueuedDpcs+>;arpl %ax, (%eax)": 4,
                "jae  <KeFlushQueuedDpcs+>;addb %dh, %gs:(%edx);jbe  <KeFlushQueuedDpcs+>;addb %ah, %gs:(%eax,%eax);addb %ah, (%ebp)": 1,
                "incl %edx;addb %dh, (%ebp);jae  <KeFlushQueuedDpcs+>;pushl %esi;addb %ah, (%ecx)": 1,
                "addb %dh, (%ebp);addb %dh, %gs:(%ebx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "outsl (%esi), %dx;insb %dx, %es:(%edi);pushl %edi;imull $, (%eax,%ebp,), %esi;imull $, (%edi), %ebp": 1,
                "insb %dx, %es:(%edi);pushl %edi;imull $, (%eax,%ebp,), %esi;addb %al, (%ebp);incl %ecx": 2,
                "insb %dx, %es:(%edi);pushl %edi;imull $, (%eax,%ebp,), %esi;pushl %esp;popal": 1,
                "je  <KeFlushQueuedDpcs+>;incl %esi;imull $, (%ebp), %ebp;outsl (%esi), %dx;incl %esi": 1,
                "jne  <KeFlushQueuedDpcs+>;pushl $;je  <KeFlushQueuedDpcs+>;jb  <KeFlushQueuedDpcs+>;jne  <KeFlushQueuedDpcs+>": 1,
                "pushl %ebx;jo  <KeFlushQueuedDpcs+>;outsb (%esi), %dx;decl %esp;outsl (%esi), %dx": 4,
                "jo  <KeFlushQueuedDpcs+>;outsb (%esi), %dx;decl %esp;outsl (%esi), %dx;arpl %bp, (%ebx)": 4,
                "outsl (%esi), %dx;arpl %bp, (%ebx);addb %al, (%eax);addb %cl, (%ebx);decl %ecx": 1,
                "decl %ebp;jne  <KeFlushQueuedDpcs+>;popal;outsb (%esi), %dx;je  <KeFlushQueuedDpcs+>": 2,
                "decl %ebp;jne  <KeFlushQueuedDpcs+>;js  <KeFlushQueuedDpcs+>;addb %al, (%eax);decl %ebx": 1,
                "popal;outsb (%esi), %dx;insb %dx, %es:(%edi);addb %al, %gs:(%eax);addb %cl, (%eax)": 1,
                "jae  <KeFlushQueuedDpcs+>;pushl %edx;jno  <KeFlushQueuedDpcs+>;jae  <KeFlushQueuedDpcs+>;addb %al, (%eax)": 1,
                "jne  <KeFlushQueuedDpcs+>;insb %dx, %es:(%edi);incl %esp;jbe  <KeFlushQueuedDpcs+>;arpl %sp, (%ebp)": 1,
                "jno  <KeFlushQueuedDpcs+>;jae  <KeFlushQueuedDpcs+>;addb %al, (%eax);decl %ecx;outsl (%esi), %dx": 1,
                "addb %cl, (%ebx);pushl %edx;popal;imull $, (%ebx), %esi;addb %cl, (%ebx)": 1,
                "imull $, (%ebx), %esi;addb %cl, (%ebx);pushl %edi;popal;imull $, (%esi,%eax,), %esi": 1,
                "imull $, (%ebp), %ebp;decl %ebx;pushl %ebx;jns  <KeFlushQueuedDpcs+>;arpl %bp, (%eax)": 1,
                "outsb (%esi), %dx;imull $, (%edx), %edi;jne  <KeFlushQueuedDpcs+>;imull $, (%edi), %ebp;pushw %dx": 1,
                "incl %esi;popal;jae  <KeFlushQueuedDpcs+>;decl %ebp;jne  <KeFlushQueuedDpcs+>": 2,
                "incl %ecx;arpl %si, (%ecx);imull $, (%edx), %esi;decl %ebp;jne  <KeFlushQueuedDpcs+>": 1,
                "insl %dx, %es:(%edi);popal;jo  <KeFlushQueuedDpcs+>;outsl (%esi), %dx;pushl %ebx": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);popal;jae  <KeFlushQueuedDpcs+>;addb %al, (%eax)": 1,
                "arpl %bp, (%eax);addb %al, (%eax);addb %al, (%eax);decl %ebp;insl %dx, %es:(%edi)": 1,
                "arpl %bp, (%ebx);pushl %eax;popal;jae  <KeFlushQueuedDpcs+>;addb %al, (%eax)": 1,
                "jne  <KeFlushQueuedDpcs+>;arpl %sp, (%ebp);js  <KeFlushQueuedDpcs+>;insb %dx, %es:(%edi);jne  <KeFlushQueuedDpcs+>": 1,
                "addb %al, %gs:(%eax);addb %al, (%eax);incl %ebp;js  <KeFlushQueuedDpcs+>;arpl %si, (%ecx)": 1,
                "outsb (%esi), %dx;je  <KeFlushQueuedDpcs+>;addb %ch, (%eax);imull $, (%eax), %eax;jb  <KeFlushQueuedDpcs+>": 1,
                "orb $, %al;sbbb %bl, (%esi);andb $, %al;xorb %dh, (%esi);cmpb $, %al": 1,
                "sbbb %bl, (%esi);andb $, %al;xorb %dh, (%esi);cmpb $, %al;addb %al, (%eax)": 1,
                "movl %eax, ;jg  <KeFlushQueuedDpcs+>;sbbl %ebp, (%eax);adcl $, %eax;decl %esi": 1,
                "decl %esi;movl $, %esp;inb %dx, %al;addb %ah, (%eax);addb %al, (%eax)": 1,
                "je  <KeFlushQueuedDpcs+>;ja  <KeFlushQueuedDpcs+>;je  <KeFlushQueuedDpcs+>;andb %al, (%ecx);incl %ebx": 1,
                "ja  <KeFlushQueuedDpcs+>;je  <KeFlushQueuedDpcs+>;andb %al, (%ecx);incl %ebx;jae  <KeFlushQueuedDpcs+>": 1,
                "jne  <KeFlushQueuedDpcs+>;outsb (%esi), %dx;pushl %esp;decl %ebp;js  <KeFlushQueuedDpcs+>": 1,
                "outsb %gs:(%esi), %dx;je  <KeFlushQueuedDpcs+>;jne ;decl %eax;popal": 1,
                "jne ;jae  <KeFlushQueuedDpcs+>;addb %al, (%eax);addb %dl, (%edx);jae ": 1,
                "pushl %edx;imull $, (%ebx), %esi;addb %al, (%eax);addb %al, (%eax);addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);int": 1,
                "movb $, (%eax);movl %fs:, %eax;cmpl %edx, (%ebp);movl %eax, %edi;jne  <KeISetGdtSelector+>": 1,
                "cmpl $-, %ebx;jne  <KeISetGdtSelector+>;cmpl %ebx, (%ebp);jne  <KeISetGdtSelector+>;pushl %ecx": 1,
                "pushl ;calll - <MmLockPagableSectionByHandle>;calll *;movl (%ebp), %edx;movl $, %ecx": 1,
                "movl $, %ecx;leal (%edx), %esi;lock;orl %ecx, (%esi);movl (%ebp), %esi": 1,
                "orl %ecx, (%esi);movl (%ebp), %esi;addl $, %edx;movl (%edx), %edi;movl %edx, (%esi)": 1,
                "pushl ;calll - <MmUnlockPagableImageSection>;popl %edi;popl %esi;popl %ebp": 1,
                "pushl %ebx;pushl %esi;calll - <IoReleaseRemoveLockEx+>;testl %eax, %eax;jne  <KeISetGdtSelector+>": 1,
                "calll - <IoReleaseRemoveLockEx+>;testl %eax, %eax;jne  <KeISetGdtSelector+>;pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %edx;cmpl %edx, %esi": 1,
                "testl %esi, %esi;je  <KeISetGdtSelector+>;movl -(%ebp), %ebx;movl %esi, %eax;shll $, %eax": 1,
                "cmpl %edi, %esi;movl %eax, (%ebx);jne  <KeISetGdtSelector+>;subl %esi, %edx;cmpl $, %edx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;subl $, %esp;testw $, (%ebp)": 1,
                "movl %esi, -(%ebp);movl %ecx, -(%ebp);movl %ecx, (%ebp);je  <MmAllocatePagesForMdl+>;pushl %eax": 1,
                "ja  <KeISetGdtSelector+>;testl %esi, %esi;je  <KeISetGdtSelector+>;movl -(%ebp), %eax;cmpl %eax, ": 1,
                "movl (%ebp), %ecx;movl %eax, -(%ebp);xorl %eax, %eax;leal -(%ebp,%ecx,), %ecx;movl %eax, -(%ebp)": 1,
                "jne  <MmAllocatePagesForMdl+>;incl (%ebp);addl $, %eax;addl $, %ecx;decl %edx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);cmpl -(%ebp), %esi;jb  <MmAllocatePagesForMdl+>": 1,
                "movl -(%ebp), %eax;incl (%ebp);addl $, -(%ebp);movl %eax, -(%ebp,%ecx,);incl -(%ebp)": 1,
                "subl -(%ebp), %eax;addl %eax, %ebx;leal (%ebx,%ebx,), %eax;leal (%ecx,%eax,), %edi;movl , %eax": 1,
                "andl $, %eax;orl (%ebp), %eax;movl $, (%esi);andl $-, %eax;orl $, %eax": 1,
                "movl (%ebp), %esi;movl %eax, -(%ebp);jne  <MmAllocatePagesForMdl+>;pushl (%ebp);pushl %esi": 1,
                "addl $, -(%ebp);incl %ebx;incl %esi;cmpl -(%ebp), %ebx;jb - <MmAllocatePagesForMdl+>": 1,
                "movl -(%ebp), %ecx;cmpl (%eax), %ecx;jne - <MmAllocatePagesForMdl+>;jmp  <KeISetGdtSelector+>;incl -(%ebp)": 1,
                "testw $, -(%ebp);je  <KeISetGdtSelector+>;andl $, -(%ebp);jmp - <MmAllocatePagesForMdl+>;andl $, ": 1,
                "movl %ecx, (%eax);jmp - <MmAllocatePagesForMdl+>;nop;nop;nop": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <MmLockPagableSectionByHandle>;pushl %esi": 1,
                "popl %eax;leal (,%eax,), %eax;movl %eax, -(%ebp);movl $, %ebx;movl (%eax), %esi": 1,
                "movl %ecx, -(%ebp);jb  <MmAllocatePagesForMdl+>;pushl $;pushl (%ebp);pushl (%ebp)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jne  <KeISetGdtSelector+>;movl -(%ebp), %ecx;cmpl $, ": 1,
                "cmpl $, ;movl (%esi), %esi;je  <KeISetGdtSelector+>;cmpl -(%ebp), %esi;je - <MmAllocatePagesForMdl+>": 1,
                "je - <MmAllocatePagesForMdl+>;jmp - <MmAllocatePagesForMdl+>;movl , %esi;cmpl $, %esi;jne  <KeISetGdtSelector+>": 1,
                "andl %eax, %esi;pushl $;andl %eax, %ecx;subl $, %esi;pushl $": 1,
                "pushl $;pushl ;subl %esi, %ecx;subl $, %ecx;sarl $, %ecx": 1,
                "pushl %ecx;pushl %esi;calll - <KeAddSystemServiceTable+>;movl %eax, %esi;testl %esi, %esi": 1,
                "testl %esi, %esi;jne  <KeISetGdtSelector+>;popl %esi;leave;retl": 1,
                "jne  <KeISetGdtSelector+>;popl %esi;leave;retl;nop": 1,
                "orl %esi, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "rep  stosl %eax, %es:(%edi);movl $, %edi;movl %edi, %ecx;calll *;pushl $": 1,
                "calll - <MmLockPagableSectionByHandle>;pushl $;xorl %edx, %edx;popl %ecx;calll - <PsGetCurrentProcess+>": 1,
                "calll - <PsGetCurrentProcess+>;testl %eax, %eax;je  <KeISetGdtSelector+>;pushl $;pushl $": 1,
                "subl , %edx;movb %al, %cl;pushl $;popl %eax;cmpl %eax, %edx": 1,
                "movb %al, %cl;pushl $;popl %eax;cmpl %eax, %edx;movb %cl, -(%ebp)": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl , %esi": 1,
                "movl , %ecx;incl ;leal (%edi,%edi,), %eax;cmpl $-, (%ecx,%eax,);jne  <KeISetGdtSelector+>": 2,
                "xorl %edx, %edx;xorl %ecx, %ecx;movl %eax, -(%ebp);calll - <IoAllocateIrp+>;movl , %edi": 2,
                "calll *;movl -(%ebp), %ecx;movl -(%ebp), %eax;movl -(%ebp), %edx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);pushl $;popl %eax;movl %eax, (%esi)": 1,
                "subl %ecx, %edx;movl (%edi), %ecx;addl $, %edx;sarl $, %edx;movl %ecx, (%eax,%edx,)": 1,
                "leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);calll - <KeAddSystemServiceTable+>;testl %eax, %eax": 1,
                "calll - <MmUnlockPagableImageSection>;movl -(%ebp), %ecx;leal (%edi), %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "movl %eax, (%ecx);movl %esi, %eax;shrl $, %eax;andl $, %eax;subl $, %eax": 1,
                "testb $, (%eax);pushl %edi;movl %eax, -(%ebp);je  <KeISetGdtSelector+>;andl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <IoUnregisterShutdownNotification+>;calll - <IoAllocateIrp+>;movb -(%ebp), %cl;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);calll *%ebx;pushl $;pushl $;calll - <MISYSPTE+>": 1,
                "pushl ;shll $, %eax;pushl $;pushl %eax;calll - <RtlFillMemoryUlong>": 1,
                "movl -(%ebp), %eax;andl $, %ecx;shll $, %eax;orl %eax, %ecx;movl -(%ebp), %eax": 1,
                "orl %eax, %ecx;movl -(%ebp), %eax;pushl $;pushl %eax;pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;pushl $;pushl %eax;pushl -(%ebp);orl $, %ecx": 1,
                "andl %edi, %ecx;movl $, %edx;subl %edx, %ecx;orl $, %ecx;movl %ecx, (%eax)": 1,
                "movl $, %edx;subl %edx, %ecx;orl $, %ecx;movl %ecx, (%eax);movl , %ecx": 2,
                "subl (%ecx), %ebx;shrl $, %ecx;andl %edi, %ecx;subl %edx, %ecx;movl , %edx": 1,
                "shrl $, %ecx;andl %edi, %ecx;subl %edx, %ecx;movl , %edx;shrl $, %ecx": 2,
                "subl (%ecx), %eax;orl $, (%ecx);movl , %ecx;addl $, %eax;sarl $, %eax": 1,
                "movl , %ecx;movl $, (%ecx);movl , %edi;xorl %ecx, %ecx;movb %cl, (%edi)": 1,
                "addl %ecx, %eax;movl %eax, (%esi);movl , %eax;addl $, %eax;movl %eax, (%esi)": 1,
                "addl $, %eax;jmp - <IoUnregisterShutdownNotification+>;movl $, (%eax);decl %edi;movl %edi, (%esi)": 1,
                "je  <KeISetGdtSelector+>;pushl %ebx;movl %eax, %edx;pushl %esi;movl (%ebp), %esi": 1,
                "movl %edi, %eax;shrl %cl, %eax;xorl %ebx, %ebx;incl %ebx;movsbl (%eax), %eax": 1,
                "movl %eax, ;movl , %eax;pushl %esi;shrl $, %eax;cmpl $, %eax": 1,
                "movl %cr, %eax;movl %eax, %cr;pushl (%esi);pushl (%esi);pushl $": 1,
                "movb $, -(%ebp);calll *;movb %al, -(%ebp);movl %ds:, %eax;movl -(%ebp), %ecx": 1,
                "leal (%eax), %ecx;movl $, -(%ebp);movl %ecx, -(%ebp);movsbl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movb $, ;retl;nop;nop;nop": 2,
                "je  <KeISetGdtSelector+>;pushl ;calll - <MmUnlockPagableImageSection>;popl %edi;popl %esi": 1,
                "subl $, %esp;movl (%ebp), %eax;testl %eax, %eax;jne  <KeISetGdtSelector+>;movl , %eax": 1,
                "cmpb $, ;pushl %ebx;movl %eax, -(%ebp);movl %edx, %ebx;je  <KeISetGdtSelector+>": 1,
                "cmpl %ecx, %esi;movl -(%ebp), %edi;movl -(%ebp), %eax;jl  <KeISetGdtSelector+>;jg  <KeISetGdtSelector+>": 1,
                "leave;retl $;cmpb %bl, ;je  <KeISetGdtSelector+>;jmp - <KeISetGdtSelector+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl (%ebp), %esp;movl %esp, %eax;pushl (%ebp)": 1,
                "movl %edi, %ecx;calll - <ObfDereferenceObject>;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "movl %ebx, %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;pushl $": 1,
                "xorl %eax, %eax;popl %edx;jmp - <KeISetGdtSelector+>;pushl ;calll - <MmLockPagableSectionByHandle>": 1,
                "movb %al, -(%ebp);cmpl $, %esi;movzbl -(%ebp), %eax;jb  <KeISetGdtSelector+>;cmpl $, %esi": 1,
                "jne  <KeISetGdtSelector+>;cmpl $, %eax;jae  <KeISetGdtSelector+>;cli;movl %cr, %eax": 1,
                "jmp  <KeISetGdtSelector+>;movb $-, -(%ebp);movb -(%ebp), %al;cli;outb %al, $": 1,
                "inb $, %al;sti;movb %al, -(%ebp);movb -(%ebp), %al;andb $-, %al": 1,
                "movb %al, -(%ebp);movb -(%ebp), %al;andb $-, %al;orb $, %al;movb %al, -(%ebp)": 1,
                "calll *;pushl ;calll - <MmUnlockPagableImageSection>;negl %ebx;movl %ebx, -(%ebp)": 1,
                "movl , %ecx;movl -(%ebp), %eax;andl $, %ecx;shll $, %eax;orl %ecx, %eax": 1,
                "movl -(%ecx), %ecx;movl %eax, %edx;subl (%ebx), %edx;movl , %ebx;shrl $, %ecx": 1,
                "je  <KeISetGdtSelector+>;movb $, %cl;calll *;pushl $;pushl $": 1,
                "movl $, (%ebp);jmp  <KeISetGdtSelector+>;shrl $, %ebx;movl %ebx, -(%ebp);movl (%ebp), %eax": 1,
                "ja  <KeISetGdtSelector+>;movl , %eax;cmpl %eax, %edx;movl $, %ecx;jbe  <KeISetGdtSelector+>": 1,
                "calll *;testl %ebx, %ebx;movb %al, %dl;jle  <KeISetGdtSelector+>;cmpb $, (%ebp)": 1,
                "jg  <KeISetGdtSelector+>;movl , %eax;subl , %eax;subl $, %eax;cmpl %ebx, %eax": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp  <KeISetGdtSelector+>;pushl $": 1,
                "cmpl $, (%ebp);je  <KeISetGdtSelector+>;decl (%ebp);movl (%esi), %eax;pushl (%ebp)": 1,
                "movl %ecx, (%ebp);movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);cmpl $, (%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl %edx, (%esi);jmp  <KeISetGdtSelector+>;calll *": 1,
                "leal (%edi), %ecx;calll *;pushl ;calll - <MmUnlockPagableImageSection>;movl (%ebp), %eax": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);jmp - <MmAllocatePagesForMdl+>;movl %esi, %eax;shrl $, %eax": 1,
                "cmpl $, -(%ebp);jne  <KeISetGdtSelector+>;pushl ;calll - <MmUnlockPagableImageSection>;pushl $": 1,
                "calll - <MmUnlockPagableImageSection>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "jbe - <MmAllocatePagesForMdl+>;jmp  <KeISetGdtSelector+>;jmp - <MmAllocatePagesForMdl+>;movl -(%ebp), %eax;cmpl $, (%eax)": 1,
                "jmp - <MmAllocatePagesForMdl+>;movl -(%ebp), %eax;cmpl $, (%eax);je - <MmAllocatePagesForMdl+>;movl (%edi), %eax": 1,
                "idivl %ebx;movl -(%ebp), %edx;cmpl %esi, (%edx);movl %eax, -(%ebp);jne  <KeISetGdtSelector+>": 1,
                "movl (%edi), %eax;movl %eax, (%ecx,%ebx,);movl (%edi), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %eax, (%edi);cmpl %eax, (%edx);jne  <KeISetGdtSelector+>;movl %esi, (%edx);movl (%ecx), %eax": 1,
                "movl %eax, (%ebp);je  <KeISetGdtSelector+>;movl -(%ebp), %eax;movl , %ecx;movl (%ebp), %ebx": 1,
                "leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %edi;cmpl -(%ebp), %esi;jb  <KeISetGdtSelector+>;cmpl %ebx, %esi": 1,
                "testl %eax, %eax;je  <KeISetGdtSelector+>;addl %eax, -(%ebp);addl %eax, %ebx;movl , %eax": 1,
                "je  <KeISetGdtSelector+>;addl %eax, -(%ebp);addl %eax, %ebx;movl , %eax;cmpl %eax, -(%ebp)": 1,
                "je - <PAGELK+>;incl -(%ebp);movl (%edi), %ebx;movl %edi, %ecx;calll - <KeResetEvent+>": 1,
                "movl %ebx, %esi;jmp  <KeISetGdtSelector+>;movl (%edi), %esi;decl (%ebp);jne - <KeISetGdtSelector+>": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <KeISetGdtSelector+>;addl %eax, -(%ebp);addl %eax, (%ebp)": 1,
                "jmp - <PAGELK+>;movl %esi, %eax;subl %edx, %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "incl ;jmp  <KeISetGdtSelector+>;calll *;incl ;jmp  <KeISetGdtSelector+>": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "movl -(%ebp), %ecx;movl $, %eax;lock;andl %eax, (%ecx);movl $, %eax": 1,
                "jmp - <MmAllocatePagesForMdl+>;pushl (%ecx);pushl %edi;calll - <MmTrimAllSystemPagableMemory+>;jmp - <MmAllocatePagesForMdl+>": 1,
                "shll $, %eax;pushl %eax;pushl -(%ebp);pushl $;calll - <ExQueryPoolBlockSize+>": 1,
                "shrl $, %edx;cmpl $, (%ebp);movl %esi, %edi;movl %edx, -(%ebp);jne  <KeISetGdtSelector+>": 1,
                "orl $, (%eax);pushl -(%ebp);pushl $;calll - <ExIsProcessorFeaturePresent+>;xorl %esi, %esi": 1,
                "jmp  <KeISetGdtSelector+>;calll *;andl $-, (%edi);andl $-, (%esi);movb %al, (%ebp)": 1,
                "movl (%ebp), %esi;orl $, (%edi);movl %esi, %ecx;calll - <wcscmp+>;incl %esi": 1,
                "movl (%ebp), %esi;calll *%edi;addl %esi, ;movb %al, %dl;movl $, (%ebp)": 1,
                "movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);jmp - <MmAllocatePagesForMdl+>;pushl ": 1,
                "pushl ;pushl ;pushl $;pushl %ebx;calll - <PoShutdownBugCheck>": 1,
                "pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax;movb $, ": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, ;calll - <PsCreateSystemThread>;testl %eax, %eax": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);jne  <KeISetGdtSelector+>;pushl ;calll - <ZwClose>": 1,
                "calll - <ExFreePoolWithTag>;movl %ebx, -(%ebp);movl $, %ecx;calll - <IoInvalidateDeviceRelations+>;movl %eax, %esi": 1,
                "movl %ebx, -(%ebp);movl %edi, %ecx;calll - <IoInvalidateDeviceRelations+>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "cmpl %ebx, %esi;jne - <KeISetGdtSelector+>;popl %edi;popl %esi;popl %ebx": 1,
                "movb %al, %cl;jne - <KeISetGdtSelector+>;movb $, ;movl %ebx, ;calll *%edi": 1,
                "pushl $;calll - <FsRtlOplockFsctrl+>;popl %ebx;retl;int": 1,
                "movl , %eax;testl %eax, %eax;pushl %esi;movl (%ebp), %esi;jl  <KeISetGdtSelector+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll - <IoReportTargetDeviceChange+>;movw (%esi), %ax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movzwl , %eax;pushl %eax": 1,
                "cmpl %edi, -(%ebp);je  <KeISetGdtSelector+>;leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %edi;pushl -(%ebp)": 1,
                "cmpl %edi, (%ebp);je  <KeISetGdtSelector+>;pushl $;pushl (%ebp);pushl %edi": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;cmpl , %eax;je  <KeISetGdtSelector+>": 1,
                "movl (%eax), %eax;cmpl , %eax;je  <KeISetGdtSelector+>;movl (%eax), %eax;jmp  <KeISetGdtSelector+>": 1,
                "movl (%edi), %eax;movl (%eax), %esi;jmp  <KeISetGdtSelector+>;movl (%esi), %eax;movb (%eax), %cl": 1,
                "jne - <KeISetGdtSelector+>;popl %esi;popl %edi;popl %ebp;retl $": 1,
                "pushl %eax;calll - <KeISetGdtSelector+>;pushl %esi;calll - <KeISetGdtSelector+>;leal (%esi), %eax": 1,
                "leal (%esi), %eax;pushl %eax;calll - <KeISetGdtSelector+>;addl $, %esi;decl %edi": 1,
                "calll - <ObQueryNameString>;testl %eax, %eax;jl  <KeISetGdtSelector+>;cmpl %ebx, -(%ebp);je  <KeISetGdtSelector+>": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;pushl %edi;calll - <KeISetGdtSelector+>": 1,
                "movl , %eax;pushl $;movl %eax, (%ebx);leal (%ebx), %eax;popl %edx": 1,
                "movl %ecx, (%ecx);jne - <KeISetGdtSelector+>;movl , %ecx;orl $-, (%ebp);leal -(%ebp), %eax": 1,
                "jmp  <KeISetGdtSelector+>;incl (%ebp);movl %eax, -(%ebp);movl (%eax), %eax;testl %eax, %eax": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <KeISetGdtSelector+>;cmpl %ecx, -(%ebp);movl (%ebp), %eax": 1,
                "leal (%edi), %eax;movl %edi, (%esi);movl (%eax), %ecx;movl %ecx, (%esi);pushl (%eax)": 1,
                "movzbl %dl, %eax;leal (%eax,%eax,), %eax;leal (%ebx,%eax,), %eax;incl (%eax);cmpl %ecx, (%edi)": 1,
                "cmpl -(%ebp), %ecx;movl %eax, -(%ebp);jle  <KeISetGdtSelector+>;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "decl (%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl , %eax;je  <KeISetGdtSelector+>": 1,
                "incl (%ecx);cmpl $, (%edx);movzbl (%eax), %ecx;leal (%ecx,%ecx,), %ecx;jne  <KeISetGdtSelector+>": 1,
                "jne  <KeISetGdtSelector+>;leal (%ebx,%ecx,), %ecx;jmp  <KeISetGdtSelector+>;leal (%ebx,%ecx,), %ecx;movl (%ecx), %esi": 1,
                "movl %ecx, (%eax);movl %esi, (%eax);movl %eax, (%esi);movl %eax, (%ecx);movl %edx, %edi": 1,
                "decl (%ecx);orb $, (%eax);movzbl (%eax), %ecx;leal (%ecx,%ecx,), %ecx;leal (%ebx,%ecx,), %ecx": 1,
                "movl %eax, (%ecx);movl (%esi), %eax;testl %eax, %eax;je  <KeISetGdtSelector+>;movl %eax, %esi": 2,
                "movb (%eax), %dl;cmpb (%ecx), %dl;jbe  <KeISetGdtSelector+>;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movl (%esi), %ecx;movb (%ecx), %cl;movb %cl, (%eax);movzbl %cl, %ecx;leal (%ecx,%ecx,), %ecx": 1,
                "movl %ecx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);movl (%esi), %eax;testl %eax, %eax": 1,
                "cmpl %ecx, %esi;jne - <KeISetGdtSelector+>;movl $, (%ebx);xorl %eax, %eax;popl %edi": 1,
                "pushl $;pushl $;pushl %edi;calll - <KeInsertQueueDpc>;calll - <KeIAllocateGdtSelectors+>": 1,
                "adcl %ecx, %edi;movl %ecx, -(%ebp);calll *;xorl %ecx, %ecx;pushl %ecx": 1,
                "pushl %eax;calll - <_allmul>;movl %eax, -(%ebp);xorl %eax, %eax;pushl %eax": 1,
                "movl %edx, -(%ebp);pushl %eax;pushl -(%ebp);calll - <_allmul>;movl -(%ebp), %ecx": 1,
                "pushl %eax;pushl -(%ebp);calll - <_allmul>;movl -(%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "pushl %ecx;movl %edx, -(%ebp);calll - <KeSetDmaIoCoherency+>;pushl $;pushl $": 1,
                "pushl ;pushl %edi;pushl %ebx;calll - <RtlExtendedLargeIntegerDivide>;movl , %ecx": 1,
                "movl , %ecx;subl (%ebp), %ecx;movl %edx, -(%ebp);movl %ecx, ;movl (%esi), %ecx": 1,
                "movl %ecx, ;movl %eax, ;movl %ecx, ;movl %edi, -;movl %ebx, -": 1,
                "addl $, %esi;pushl -(%esi);pushl %esi;calll *;movl , %eax": 1,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %edx;xorl %esi, %esi": 1,
                "testl %edi, %edi;movl %edi, (%ebx);je  <KeISetGdtSelector+>;movl %esi, %ecx;movl %ecx, %edx": 1,
                "movl %edi, (%ebx);je  <KeISetGdtSelector+>;movl %esi, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "jne  <KeISetGdtSelector+>;movl $, (%ebx);jmp  <KeISetGdtSelector+>;movl %esi, %ecx;movl , %esi": 1,
                "movzbl (%eax), %eax;subl $, %eax;je  <KeISetGdtSelector+>;decl %eax;je  <KeISetGdtSelector+>": 1,
                "movl (%ebp), %esi;pushl %edi;pushl $;popl %edi;movl $, %edx": 1,
                "cmpl (%ebp), %ecx;ja  <KeISetGdtSelector+>;movl (%ebp), %eax;movl (%ebp), %ecx;addl $-, %eax": 1,
                "adcl $, %ecx;pushl %ecx;pushl %eax;pushl (%ebp);movb $, -(%ebp)": 1,
                "cmpl (%ebp), %ecx;ja  <KeISetGdtSelector+>;movl (%esi), %eax;cmpl %edi, %eax;ja  <KeISetGdtSelector+>": 1,
                "cmpl %edi, %eax;ja  <KeISetGdtSelector+>;jb  <KeISetGdtSelector+>;movl (%esi), %eax;cmpl (%ebp), %eax": 1,
                "addl $, %esi;cmpl %eax, -(%ebp);jb - <KeISetGdtSelector+>;popl %edi;movb -(%ebp), %al": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);jne  <KeISetGdtSelector+>;cmpl $, (%ebp)": 1,
                "calll - <_allshl>;andl $, %edx;popl %ebp;retl $;int": 1,
                "movl %ebx, %ecx;calll - <IoEnumerateDeviceObjectList+>;andl $, %eax;pushl %edx;pushl %eax": 1,
                "pushl %eax;calll - <IoEnumerateDeviceObjectList+>;movl (%edi), %eax;pushl (%esi,%eax);pushl (%esi,%eax)": 1,
                "pushl (%esi,%eax);pushl (%ebp);calll - <IoEnumerateDeviceObjectList+>;incl -(%ebp);movl -(%ebp), %eax": 1,
                "addl $, (%ebp);addl $, %esi;cmpl (%edi), %eax;jb - <KeISetGdtSelector+>;popl %edi": 1,
                "cmpl (%edi), %eax;jb - <KeISetGdtSelector+>;popl %edi;popl %esi;wbinvd": 1,
                "pushl -(%ebp);pushl %ebx;calll - <IoEnumerateDeviceObjectList+>;movl -(%ebp), %eax;movl %eax, %cr": 1,
                "movl %eax, %cr;movl -(%ebp), %eax;movl %eax, %cr;pushl -(%ebp);calll - <KdPollBreakIn+>": 1,
                "addl %esi, %eax;cmpb $, (%eax);je  <KeISetGdtSelector+>;movl (%eax), %edi;movl (%eax), %ebx": 1,
                "jmp  <KeISetGdtSelector+>;movl (%eax), %edi;andl %ecx, (%eax);movl %edi, (%eax);movl (%eax), %edi": 1,
                "jbe  <KeISetGdtSelector+>;andl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %esi": 2,
                "ja  <KeISetGdtSelector+>;jb  <KeISetGdtSelector+>;movl (%ecx), %ecx;cmpl (%eax), %ecx;jae  <KeISetGdtSelector+>": 1,
                "incl -(%ebp);movzbl %bl, %esi;addl $, %ecx;cmpl %esi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "addl $, -(%ebp);incl -(%ebp);movl -(%ebp), %eax;movzbl %bl, %ecx;decl %eax": 2,
                "movl -(%ebp), %esi;addl %esi, %edx;decl %ecx;leal (%ecx,%ecx,), %ecx;shll $, %ecx": 1,
                "leal (%ecx,%ecx,), %ecx;shll $, %ecx;leal (%edx), %esi;movl %edx, %edi;movl %ecx, %edx": 1,
                "subl $, -(%ebp);movb %bl, ;incl -(%ebp);addl $, -(%ebp);movzbl %bl, %ecx": 1,
                "movl -(%ebp), %eax;movzbl %bl, %ecx;decl %eax;leal -(%ecx), %esi;cmpl %esi, %eax": 1,
                "movzbl %bl, %ecx;decl %eax;leal -(%ecx), %esi;cmpl %esi, %eax;jb - <KeISetGdtSelector+>": 1,
                "leal -(%edi), %eax;testl %eax, %eax;movl %ecx, -(%ebp);jbe  <KeISetGdtSelector+>;movl %ecx, -(%ebp)": 1,
                "jne - <KeISetGdtSelector+>;movl -(%ebp), %eax;leal (%eax,%edx), %esi;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "cmpl %eax, -(%ebp);jbe  <KeISetGdtSelector+>;movb (%esi), %al;testb %al, %al;movb %al, -(%ebp)": 1,
                "je  <KeISetGdtSelector+>;pushl %esi;calll - <KeISetGdtSelector+>;pushl %ecx;movl %eax, %edi": 1,
                "cmpl %edi, %edx;jb  <KeISetGdtSelector+>;movl %edi, %edx;movl %ecx, %eax;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %edx;pushl -(%ebp)": 1,
                "xorl %ecx, %ecx;movl -(%ebp), %eax;cmpl %ecx, (%eax);movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "jae  <KeISetGdtSelector+>;movl -(%ebp), %eax;addl %edx, %eax;movl (%eax), %esi;movl (%eax), %ecx": 1,
                "movl (%eax), %esi;movl (%eax), %ecx;movl (%eax), %edi;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "calll - <KeISetGdtSelector+>;movl %eax, %ecx;xorl %eax, %eax;incl %eax;xorl %edx, %edx": 2,
                "cmpl -(%ebp), %edi;jbe  <KeISetGdtSelector+>;movl -(%ebp), %edi;movl -(%ebp), %esi;pushl %esi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movb (%eax), %al": 1,
                "je  <KeISetGdtSelector+>;movl -(%ebp), %edi;decl -(%ebp);shll $, %edi;subl $, %ebx": 1,
                "calll *;jmp  <KeISetGdtSelector+>;movl -(%ebp), %ebx;cmpl $, (%ebx);je  <KeISetGdtSelector+>": 1,
                "jbe  <KeISetGdtSelector+>;movl $, %edx;testb $, (%edx);jne  <KeISetGdtSelector+>;incl %eax": 1,
                "movl $, %edx;testb $, (%edx);jne  <KeISetGdtSelector+>;incl %eax;addl $, %edx": 1,
                "movl (%edi), %ecx;cmpl $-, %ecx;je  <KeISetGdtSelector+>;cmpl $, (%edi);jne  <KeISetGdtSelector+>": 1,
                "cmpl $, -(%ebp);jne  <KeISetGdtSelector+>;andl $, %eax;orl %esi, %eax;shrl $, %eax": 2,
                "jne  <KeISetGdtSelector+>;andl $, %eax;orl %esi, %eax;shrl $, %eax;andl %edx, %ecx": 2,
                "xorl %eax, %eax;popl %edi;popl %esi;leave;retl": 3,
                "movl (%ebp), %esi;pushl %esi;calll - <KeISetGdtSelector+>;testl %eax, %eax;jne  <KeISetGdtSelector+>": 1,
                "movl %eax, %ecx;shrl $, %eax;pushl %esi;andl $, %ecx;andl $, %eax": 1,
                "pushl %esi;pushl %ecx;calll - <KeISetGdtSelector+>;incl ;popl %esi": 1,
                "movl (%ecx), %edx;cmpl $-, %edx;je  <KeISetGdtSelector+>;cmpl $, (%ecx);jne  <KeISetGdtSelector+>": 1,
                "movl (%ebp), %eax;addl %edi, %eax;cmpl %eax, %edx;jbe  <KeISetGdtSelector+>;movl (%ecx), %eax": 1,
                "jbe  <KeISetGdtSelector+>;movl (%ecx), %eax;addl %edx, %eax;cmpl %eax, %edi;ja  <KeISetGdtSelector+>": 1,
                "jmp  <KeISetGdtSelector+>;subl %edi, %esi;movl %esi, %eax;movl $, %edx;movl $, %ebx": 1,
                "shrl %edx;shrl %ebx;cmpl $, %edx;jbe  <KeISetGdtSelector+>;jmp - <KeISetGdtSelector+>": 1,
                "shrl %ebx;cmpl $, %edx;jbe  <KeISetGdtSelector+>;jmp - <KeISetGdtSelector+>;jmp  <KeISetGdtSelector+>": 1,
                "jb - <KeISetGdtSelector+>;movl $, %eax;movl $, %ecx;cmpl (%ebp), %eax;je  <KeISetGdtSelector+>": 1,
                "decl %eax;je  <KeISetGdtSelector+>;decl %eax;je  <KeISetGdtSelector+>;movl $, %edi": 1,
                "pushl ;calll - <MmUnlockPagableImageSection>;popl %esi;popl %ebx;jmp  <KeISetGdtSelector+>": 1,
                "movl (%edi), %eax;movb $, %cl;calll - <_allshr>;leal (%esi,%eax), %ebx;movl $, %ecx": 1,
                "movl %ebx, -(%ebp);calll *;movl , %eax;leal -(%ebx), %ecx;cmpl %eax, %ecx": 1,
                "calll *;movl , %eax;leal -(%ebx), %ecx;cmpl %eax, %ecx;jbe  <MmMarkPhysicalMemoryAsGood+>": 1,
                "jb  <MmMarkPhysicalMemoryAsGood+>;movl $, %esi;jmp  <MmMarkPhysicalMemoryAsGood+>;pushl ;andl $, (%ebp)": 1,
                "movl , %ecx;andl $, (%ebp);leal (%esi,%esi,), %eax;movl %esi, -(%ebp);leal (%ecx,%eax,), %esi": 1,
                "andl $, %eax;movl %esi, %ecx;movl %eax, (%esi);calll - <KeResetEvent+>;movl -(%ebp), %ecx": 1,
                "calll - <KeResetEvent+>;movl -(%ebp), %ecx;calll - <wcscmp+>;incl (%ebp);addl $, %esi": 1,
                "pushl $;shll $, %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx": 1,
                "movl , %eax;xorl %edi, %edi;cmpl %ebx, (%eax);jbe  <MmGetPhysicalMemoryRanges+>;movl $, %ecx": 1,
                "movl %eax, (%esi);movl , %eax;movl (%eax,%edi,), %eax;movl %ecx, %edx;mull %edx": 1,
                "movl , %ecx;pushl %ebx;pushl %esi;pushl %edi;andl $, -(%ebp)": 1,
                "calll - <InbvCheckDisplayOwnership+>;movl %edi, %edx;movl $, %ecx;calll - <wcscmp+>;incl -(%ebp)": 1,
                "cmpl -(%ebp), %edi;je  <MmGetPhysicalMemoryRanges+>;movl (%esi), %eax;cmpl $-, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ecx), %edi;movl %edi, (%esi);movl %eax, (%esi);cmpl %eax, (%ebx);jne  <MmGetPhysicalMemoryRanges+>": 1,
                "je  <MmGetPhysicalMemoryRanges+>;cmpw %dx, (%esi);jne  <MmGetPhysicalMemoryRanges+>;cmpl %edx, ;je  <MmGetPhysicalMemoryRanges+>": 1,
                "movl %esi, %ecx;calll - <KeResetEvent+>;movl %edi, %ecx;calll - <RtlNtStatusToDosErrorNoTeb+>;movl %edi, %edx": 1,
                "pushl %esi;movl (%ebp), %esi;testl %eax, (%esi);je  <MmGetPhysicalMemoryRanges+>;movl $, %eax": 1,
                "movb -(%eax), %al;andb $-, %al;subb $-, %al;negb %al;pushl %ebx": 1,
                "jae  <MmGetPhysicalMemoryRanges+>;pushl $;calll - <ExVerifySuite>;cmpb $, %al;jne  <MmGetPhysicalMemoryRanges+>": 1,
                "calll *;movl , %eax;movl %eax, -(%ebp);movl (%eax), %eax;pushl $": 1,
                "movl $, %eax;jmp  <MmGetPhysicalMemoryRanges+>;pushl ;andl $, (%ebp);calll - <MmLockPagableSectionByHandle>": 1,
                "movl , %ecx;movl (%ebp), %edx;addl $, %eax;cmpl (%ecx), %edx;jne - <MmGetPhysicalMemoryRanges+>": 1,
                "movl $, %ecx;andl %ecx, %edx;andl %ecx, %ebx;addl $, %edx;subl $, %ebx": 1,
                "jbe - <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax;cmpl %eax, ;jae  <MmGetPhysicalMemoryRanges+>;movl $, %esi": 1,
                "movb (%ebp), %cl;calll *;pushl ;calll - <MmUnlockPagableImageSection>;movl $, %ecx": 1,
                "testb $, (%eax);jne  <MmGetPhysicalMemoryRanges+>;movl , %ecx;andl , %ecx;incl ": 1,
                "shll $, %eax;orl %ecx, %eax;movl (%ebp), %ecx;movl %eax, -(%ebp);movl %eax, (%ecx)": 1,
                "addl $, (%ebp);cmpl %ebx, (%ebp);jbe - <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax;subl %eax, ": 1,
                "jae  <MmGetPhysicalMemoryRanges+>;cmpl (%eax,%ecx,), %edx;jbe  <MmGetPhysicalMemoryRanges+>;movl (%ebp), %edx;movl %edi, (%edx)": 1,
                "jmp  <MmGetPhysicalMemoryRanges+>;movl (%ebp), %edx;cmpl (%eax), %ecx;jne - <MmGetPhysicalMemoryRanges+>;xorl %ecx, %ecx": 1,
                "cmpl , %eax;jbe  <MmGetPhysicalMemoryRanges+>;movl %eax, ;subl %edi, %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl %edi;pushl $;calll - <RtlSetBits>;addl $, %ebx": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl $, %ecx;movl %esi, %eax": 1,
                "movl %eax, -(%ebp);movl , %eax;addl %esi, (%eax);movl , %eax;incl %ecx": 1,
                "cmpl (%eax), %edx;jne - <MmGetPhysicalMemoryRanges+>;movl (%eax), %edx;addl %edx, (%eax);movl , %eax": 1,
                "jne - <MmGetPhysicalMemoryRanges+>;movl (%eax), %edx;addl %edx, (%eax);movl , %eax;decl (%eax)": 1,
                "movl , %eax;movl (%eax), %edx;cmpl %edx, %ecx;je - <MmGetPhysicalMemoryRanges+>;subl %ecx, %edx": 1,
                "movl %edi, (%ecx,%eax);movl , %eax;leal (%ecx,%eax), %eax;addl %esi, (%eax);movl -(%ebp), %eax": 1,
                "movl , %esi;movl %esi, %eax;shrl $, %eax;andl $, %eax;movl -(%eax), %ecx": 1,
                "movl -(%eax), %ecx;xorl %eax, %eax;andw $, %cx;incl %eax;cmpb $-, %cl": 1,
                "jne  <MmGetPhysicalMemoryRanges+>;movl $, %eax;jmp  <MmGetPhysicalMemoryRanges+>;movl %eax, -(%ebp);jmp  <MmGetPhysicalMemoryRanges+>": 1,
                "jne  <MmGetPhysicalMemoryRanges+>;movl , %eax;movl $, -(%ebp);jmp  <MmGetPhysicalMemoryRanges+>;movl , %eax": 1,
                "subl %edi, %eax;movl %ebx, -(%ebp);movl %eax, -(%ebp);cmpl %ebx, %edi;jb  <MmGetPhysicalMemoryRanges+>": 1,
                "calll - <RtlAreBitsSet>;testb %al, %al;jne  <MmGetPhysicalMemoryRanges+>;movl $, %esi;jmp  <MmGetPhysicalMemoryRanges+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmGetPhysicalMemoryRanges+>;movl $, %esi;jmp  <MmGetPhysicalMemoryRanges+>": 1,
                "movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);pushl ;calll - <MmLockPagableSectionByHandle>": 1,
                "jmp  <MmGetPhysicalMemoryRanges+>;testb $-, (%eax);jne  <MmGetPhysicalMemoryRanges+>;addl $, %eax;cmpl -(%ebp), %eax": 1,
                "movl $, (%ebp);jmp  <MmGetPhysicalMemoryRanges+>;movl , %edx;andl $, (%ebp);leal (%edx), %esi": 1,
                "cmpl (%edx), %eax;jne - <MmGetPhysicalMemoryRanges+>;movb (%ebp), %cl;calll *;movl $, (%ebp)": 1,
                "cmpl %eax, %ebx;jne  <MmGetPhysicalMemoryRanges+>;orl $-, (%ebp);movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "subl %eax, ;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl $, %ecx": 1,
                "movl $, ;calll - <MmIsNonPagedSystemAddressValid+>;andl $, ;calll  <MmMapUserAddressesToPage+>;pushl $": 1,
                "andl $, ;calll  <MmMapUserAddressesToPage+>;pushl $;pushl $;pushl $": 1,
                "jmp - <MmGetPhysicalMemoryRanges+>;jmp  <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %esi;movl $, %eax;movl $, %ecx": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);cmpl -(%ebp), %esi;je  <MmGetPhysicalMemoryRanges+>;movb (%ebp), %cl": 1,
                "movb (%ebp), %cl;calll *%edi;movl $, (%ebp);jmp  <MmGetPhysicalMemoryRanges+>;xorl %ecx, %ecx": 1,
                "jmp  <MmGetPhysicalMemoryRanges+>;xorl %ecx, %ecx;cmpl %ecx, (%ebp);jne  <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %edx": 1,
                "jne - <MmGetPhysicalMemoryRanges+>;movb (%ebp), %cl;calll *%edi;pushl ;calll - <MmUnlockPagableImageSection>": 1,
                "jmp  <MmGetPhysicalMemoryRanges+>;movb (%ebp), %cl;calll *%edi;movl , %eax;movl (%eax), %esi": 1,
                "pushl $;leal (,%esi,), %esi;pushl %esi;pushl $;calll - <ExAllocatePoolWithTag>": 2,
                "calll *;movb %al, (%ebp);andb $-, (%esi);movl (%esi), %eax;andl $, %eax": 1,
                "xaddl %eax, (%ecx);movb (%ebp), %cl;calll *%edi;movl -(%ebp), %eax;movl $, %ecx": 1,
                "addl %edi, %ecx;cmpl $, (%ebp);jne  <MmGetPhysicalMemoryRanges+>;cmpl %edi, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ecx;addl %ecx, (%esi);movl , %ecx;movl -(%ebp), %esi;leal (%edx,%ecx), %ecx": 1,
                "cmpl (%ecx), %edx;jne - <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax;decl %ebx;cmpl , %ebx": 1,
                "movl %eax, ;jne  <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax;decl %eax;movl %eax, ": 1,
                "movl -(%ebp), %eax;andl $, (%ebp);cmpl %eax, %ebx;jae  <MmGetPhysicalMemoryRanges+>;subl %ebx, %eax": 1,
                "movl %eax, (%ebp);movl (%esi), %ecx;movl , %edx;shrl $, %ecx;leal (%ecx,%ecx,), %eax": 1,
                "movl -(%ebp), %eax;invlpg (%eax);addl $, %esi;addl $, %ebx;cmpl %edi, %esi": 1,
                "invlpg (%eax);addl $, %esi;addl $, %ebx;cmpl %edi, %esi;movl %ebx, -(%ebp)": 1,
                "movb (%ebp), %cl;calll *;testl %edi, %edi;je  <MmGetPhysicalMemoryRanges+>;movl (%ebp), %eax": 1,
                "popl %esi;leave;retl $;cmpl %ecx, %ebx;je - <MmGetPhysicalMemoryRanges+>": 1,
                "movl %edx, (%eax);addl $, %eax;movl %ebx, (%eax);subl %ebx, %ecx;jmp - <MmGetPhysicalMemoryRanges+>": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);movl , %ebx;jmp  <MmAdjustWorkingSetSize+>;movb (%ebp), %cl": 1,
                "movl , %edx;leal (%eax,%eax,), %ecx;leal (%edx,%ecx,), %ecx;orl $, (%ecx);incw (%ecx)": 1,
                "leal (%eax,%eax,), %ecx;leal (%edx,%ecx,), %ecx;orl $, (%ecx);incw (%ecx);movl $, (%ecx)": 1,
                "jb - <MmAdjustWorkingSetSize+>;movb %bl, %cl;calll *;popl %edi;popl %esi": 1,
                "je  <MmAdjustWorkingSetSize+>;movl (%edx), %edx;cmpl %esi, %edx;je  <MmAdjustWorkingSetSize+>;jmp - <MmAdjustWorkingSetSize+>": 1,
                "subl $, %ebx;movl %fs:, %eax;movl (%eax), %edi;leal (%edi), %ecx;movl %ecx, -(%ebp)": 1,
                "calll *;movl (%ebp), %ecx;calll - <PsIsThreadTerminating+>;movl %eax, %esi;testl %esi, %esi": 1,
                "movl (%esi), %eax;pushl -(%ebp);shll $, %eax;orl $, %eax;pushl %edi": 1,
                "shll $, %eax;orl $, %eax;pushl %edi;pushl %eax;movl (%esi), %eax": 1,
                "shll $, %eax;pushl %eax;calll - <NtSetEvent+>;movl (%ebp), %eax;movl , %ecx": 1,
                "movl , %ecx;movl %eax, -(%ebp);movl (%ebp), %eax;shrl $, %eax;andl $, %eax": 1,
                "shrl $, %esi;leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %eax;movl %eax, -(%ebp);calll *": 1,
                "movl -(%ebp), %eax;decw (%eax);movl , %eax;movl %eax, (%ebx);movl (%ebp), %eax": 1,
                "pushl %edi;pushl %eax;movl %esi, %eax;shll $, %eax;pushl %eax": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <MmAdjustWorkingSetSize+>;movl -(%ebp), %ecx": 1,
                "movl (%edi), %ecx;andl $, %eax;leal (%eax,%ecx), %ebx;shrl $, %ebx;leal (%edi), %esi": 1,
                "calll *;pushl ;calll - <MmUnlockPagableImageSection>;negl %ebx;movl %ebx, (%ebp)": 1,
                "movl (%ebp), %ecx;pushl %esi;leal (%edi,%ecx), %esi;cltd;xorl %ecx, %ecx": 1,
                "movl $, %esi;jmp  <MmMapUserAddressesToPage+>;pushl ;shrl $, %edi;movl $, %ecx": 1,
                "shrl $, %edi;movl $, %ecx;shrl $, %esi;andl %ecx, %edi;movl $, %eax": 1,
                "movl (%edi), %eax;andl $, %eax;shll $, %esi;orl %eax, %esi;calll *": 1,
                "calll - <MmUnlockPagableImageSection>;xorl %esi, %esi;movl -(%ebp), %ecx;calll *;movl %esi, %eax": 1,
                "andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 1,
                "shrl $, %esi;movl $, %ecx;shrl $, %edi;andl %eax, %esi;andl %eax, %edi": 1,
                "ja  <MmMapUserAddressesToPage+>;pushl %ebx;movl $, %esi;testl %edi, %esi;je  <MmMapUserAddressesToPage+>": 1,
                "pushl %ebx;movl $, %esi;testl %edi, %esi;je  <MmMapUserAddressesToPage+>;cmpl $, -(%ebp)": 1,
                "leal (%ebx), %edi;shll $, %edi;jmp  <MmMapUserAddressesToPage+>;movl (%edi), %ebx;andl $, (%ebp)": 1,
                "shll $, %edi;jmp  <MmMapUserAddressesToPage+>;movl (%edi), %ebx;andl $, (%ebp);testb $, %bl": 1,
                "movl (%ebp), %eax;testb $-, (%eax);jne  <MmMapUserAddressesToPage+>;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "je  <MmMapUserAddressesToPage+>;movl (%eax), %eax;movl %eax, %edx;shll $, %edx;movl %edi, %ebx": 1,
                "jne  <MmMapUserAddressesToPage+>;movl $, -(%ebp);calll *;movb %al, -(%ebp);movl (%ebp), %ebx": 1,
                "je  <MmMapUserAddressesToPage+>;movl $, -(%ebp);jmp  <MmMapUserAddressesToPage+>;movl (%ebx), %ebx;testb $, %bl": 1,
                "movl (%ebx), %ebx;testb $, %bl;je  <MmMapUserAddressesToPage+>;cmpl $, -(%ebp);jne  <MmMapUserAddressesToPage+>": 1,
                "leal (%ecx,%eax,), %esi;cmpw $, (%esi);jne  <MmMapUserAddressesToPage+>;pushl (%esi);andl $-, (%esi)": 1,
                "andl $, (%esi);cmpl $, (%ebp);jne  <MmMapUserAddressesToPage+>;testb $, %bl;je  <MmMapUserAddressesToPage+>": 1,
                "cmpl $, %ecx;jne  <MmMapUserAddressesToPage+>;cmpw $, (%esi);jne  <MmMapUserAddressesToPage+>;andl $-, %eax": 1,
                "jne  <MmMapUserAddressesToPage+>;andl $-, %eax;movl %esi, %ecx;movl %eax, (%esi);calll - <KeResetEvent+>": 1,
                "andl $-, %eax;movl %esi, %ecx;movl %eax, (%esi);calll - <KeResetEvent+>;pushl (%esi)": 1,
                "calll - <IoAllocateIrp+>;andl $, (%esi);movl %ebx, %edx;movl $, %ecx;calll - <wcscmp+>": 1,
                "movl %esi, %eax;subl %edi, %eax;movl %edi, %ecx;sarl $, %eax;andl $, %ecx": 1,
                "movl (%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movb %dl, %cl;calll *": 1,
                "movl , %ecx;shrl $, %esi;leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %esi;calll *": 1,
                "leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %esi;calll *;incl (%esi);movb %al, %cl": 1,
                "movl (%ebp), %eax;andl $, -(%ebp);movl , %ecx;movl -(%ebp), %esi;shrl $, %eax": 1,
                "andl $, -(%ebp);movl , %ecx;movl -(%ebp), %esi;shrl $, %eax;leal (%ecx,%eax,), %eax": 1,
                "calll - <MmUnlockPagableImageSection>;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;shrl $, %esi;movl $, %ecx;shrl $, %edi": 1,
                "shrl $, %esi;movl $, %ecx;shrl $, %edi;movl %eax, -(%ebp);andl %ecx, %esi": 1,
                "pushl ;calll - <MmLockPagableSectionByHandle>;calll *;movb %al, (%ebp);movl -(%ebp), %eax": 1,
                "xaddl %eax, (%ecx);cmpl %edi, %esi;ja  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;addl $, %eax": 1,
                "pushl %esi;pushl $;movl $, ;calll - <KeSetEvent>;movl $, %edi": 1,
                "movl $, %edi;pushl $;pushl %esi;pushl %esi;calll - <KeDelayExecutionThread>": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %eax;movl $, ": 1,
                "testb $, %al;jne  <MmMapUserAddressesToPage+>;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "jne  <MmMapUserAddressesToPage+>;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>;movl (%esi), %esi": 1,
                "pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %ebx, %esi;jne - <MmMapUserAddressesToPage+>": 1,
                "calll - <ExFreePoolWithTag>;xorl %ebx, %ebx;cmpl %edi, ;jbe  <MmMapUserAddressesToPage+>;leal (,%ebx,), %esi": 1,
                "cmpl %edi, ;jbe  <MmMapUserAddressesToPage+>;leal (,%ebx,), %esi;movl (%esi), %eax;pushl %edi": 1,
                "je - <MmMapUserAddressesToPage+>;pushl ;calll - <ExFreePoolWithTag>;pushl %edi;pushl ": 1,
                "pushl ;calll - <ExFreePoolWithTag>;movl , %eax;cmpl %edi, %eax;jne  <MmMapUserAddressesToPage+>": 1,
                "calll - <ExFreePoolWithTag>;cmpw %di, ;jne - <MmMapUserAddressesToPage+>;movl , %esi;cmpl %edi, %esi": 1,
                "cmpl %ebx, %esi;jne - <MmMapUserAddressesToPage+>;popl %edi;popl %esi;popl %ebx": 1,
                "shll $, %eax;orl %eax, %ecx;addl , %ecx;movl %ecx, -(%ebp);jmp  <MmMapUserAddressesToPage+>": 1,
                "movl %ecx, -(%ebp);jmp  <MmMapUserAddressesToPage+>;andl $, %eax;shll $, %eax;andl $, %ecx": 1,
                "subl %ecx, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %esi;testb $, (%esi)": 1,
                "incl ;incw (%edi);movl -(%ebp), %eax;movb -(%ebp), %cl;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);pushl -(%ebp);movl %ebx, -(%ebp);calll - <RtlMultiByteToUnicodeN+>": 1,
                "calll - <RtlMultiByteToUnicodeN+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <MmMapUserAddressesToPage+>;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jl  <MmMapUserAddressesToPage+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);calll - <IoSynchronousPageWrite>;pushl -(%ebp);movl %eax, -(%ebp);calll - <RtlMultiByteToUnicodeN+>": 1,
                "jae  <MmMapUserAddressesToPage+>;pushl $;pushl %ebx;pushl %ebx;calll - <KeDelayExecutionThread>": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <KeSetEvent>;pushl $": 2,
                "pushl %eax;calll - <KeSetEvent>;pushl $;pushl %ebx;pushl %ebx": 2,
                "jb  <MmMapUserAddressesToPage+>;decl ;decw (%edi);jmp  <MmMapUserAddressesToPage+>;cmpw $, %ax": 2,
                "movl , %edi;movb -(%ebp), %cl;calll *;movl , %eax;addl %eax, %eax": 1,
                "pushl %ebx;pushl $;movl $, -(%ebp);calll - <KeSetEvent>;leal -(%ebp), %eax": 1,
                "andl -(%ebp), %ecx;calll - <PsIsThreadTerminating+>;movl , %ecx;movl %eax, (%esi);leal (%eax,%eax,), %eax": 1,
                "incl -(%ebp);movw $, (%eax);movl %ebx, (%eax);movl -(%ebp), %eax;cmpl , %eax": 1,
                "testb $, %al;jne  <MmMapUserAddressesToPage+>;cmpl %ebx, %esi;jne  <MmMapUserAddressesToPage+>;movl -(%ebp), %eax": 1,
                "calll - <MmIsAddressValid+>;jmp  <MmMapUserAddressesToPage+>;cmpl %ebx, %esi;je  <MmMapUserAddressesToPage+>;movl $, -(%ebp)": 1,
                "shll $, %esi;movl %ecx, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);pushl (%eax)": 1,
                "testb $, -(%ebp);movl %eax, %esi;je  <MmMapUserAddressesToPage+>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <MmUnmapLockedPages>;cmpl $, %esi": 1,
                "pushl -(%ebp);calll - <MmUnmapLockedPages>;cmpl $, %esi;je  <MmMapUserAddressesToPage+>;xorl %esi, %esi": 1,
                "movl (%esi), %ecx;calll - <wcscmp+>;addl $, %esi;incl -(%ebp);movl -(%ebp), %eax": 1,
                "calll - <KeSetEvent>;movl %ebx, -(%ebp);cmpl $, ;je  <MmMapUserAddressesToPage+>;movb -(%ebp), %cl": 1,
                "calll *%edi;cmpl %ebx, ;movb %al, -(%ebp);jne  <MmMapUserAddressesToPage+>;orl $-, ": 1,
                "cmpl $, -(%ebp);jb - <MmMapUserAddressesToPage+>;movb -(%ebp), %cl;calll *;pushl %ebx": 1,
                "movl (%esi), %ecx;calll - <wcscmp+>;addl $, %esi;incl %ebx;cmpl , %ebx": 1,
                "calll - <wcscmp+>;addl $, %esi;incl %ebx;cmpl , %ebx;jb - <MmMapUserAddressesToPage+>": 1,
                "pushl ;calll - <MmUnlockPagableImageSection>;xorb %al, %al;jmp  <MmMapUserAddressesToPage+>;movl (%esi), %eax": 1,
                "movl (%eax), %esi;pushl $;leal (,%esi,), %esi;pushl %esi;pushl %ebx": 1,
                "je  <MmMapUserAddressesToPage+>;jmp - <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>;movl %ebx, ;cmpl %ebx, ": 1,
                "jmp - <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>;movl %ebx, ;cmpl %ebx, ;je  <MmMapUserAddressesToPage+>": 1,
                "popl %eax;cmpl %eax, ;jae  <MmMapUserAddressesToPage+>;testb %al, ;movl %eax, ": 1,
                "cmpl %esi, ;jbe  <MmMapUserAddressesToPage+>;movl (,%esi,), %eax;movl (%eax), %ecx;calll - <ObfDereferenceObject>": 1,
                "movb %al, %cl;movl , %eax;orl $, (%eax);movl , %eax;xorl %edx, %edx": 1,
                "leal (%edi), %esi;movb %dl, (%esi);movb $, (%edi);movl %edx, (%edi);movl %eax, (%eax)": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %ecx;movb $, -(%ebp);movb $, -(%ebp);movl %edx, -(%ebp)": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;incl (%esi);jne  <MmMapUserAddressesToPage+>;leal (%esi), %eax": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, (%eax);movl %eax, (%ecx);movl , %eax": 1,
                "movl %edx, (%eax);movb -(%ebp), %cl;calll *;movl , %eax;movl (%eax), %ecx": 1,
                "movl , %eax;addl $, %eax;pushl %eax;calll - <ExFreePool+>;calll - <MmUnmapViewInSystemSpace+>": 1,
                "je  <MmMapUserAddressesToPage+>;incl -(%ebp);addl $, %ecx;cmpl %edx, %ecx;jb - <MmMapUserAddressesToPage+>": 1,
                "incl %edx;addl $, %esi;decl -(%ebp);jne - <MmMapUserAddressesToPage+>;movl %edx, %ecx": 1,
                "movl , %eax;subl %edx, (%eax);addl %edx, -(%ebp);movl -(%ebp), %eax;negl %eax": 1,
                "movl , %eax;movl %eax, (%ecx);movb -(%ebp), %cl;calll *;movl -(%ebp), %edx": 1,
                "xaddl %eax, (%ecx);movl , %esi;subl , %esi;xorl %edi, %edi;shrl $, %esi": 1,
                "calll *;pushl $;pushl $;calll - <KeFlushEntireTb>;movl -(%ebp), %esi": 1,
                "andl %eax, (%ecx);pushl ;calll - <MmUnlockPagableImageSection>;testb $, (%esi);je  <MmMapUserAddressesToPage+>": 1,
                "calll - <MmUnlockPagableImageSection>;testb $, (%esi);je  <MmMapUserAddressesToPage+>;pushl %edi;calll - <PsGetProcessInheritedFromUniqueProcessId+>": 1,
                "xorl %edx, %edx;cmpl $, (%ebp);leal (%edi), %eax;movl %edx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, (%edi);movl , %eax;cmpl , %eax;movl %eax, (%ebp);jae  <MmMapUserAddressesToPage+>": 1,
                "andl $, %edx;movl %edx, %ecx;xorl %edx, %ecx;notl %ecx;testl %ecx, %ecx": 1,
                "movl -(%ebp), %ecx;movl (%eax,%ecx), %eax;addl $, (%ebp);movl %edi, %ecx;shrl %cl, %eax": 1,
                "movl %edi, %ecx;shrl %cl, %eax;incl -(%ebp);testb $, %al;jne  <MmMapUserAddressesToPage+>": 1,
                "shrl %cl, %ebx;andl $, %ebx;xorl %edx, %ebx;notl %ebx;testl %ebx, %ebx": 1,
                "jne - <MmMapUserAddressesToPage+>;movl (%ebp), %edi;movl %edi, %eax;subl -(%ebp), %eax;xorl %esi, %esi": 1,
                "movl (%ebp), %edi;movl %edi, %eax;subl -(%ebp), %eax;xorl %esi, %esi;cmpl %esi, %edx": 1,
                "pushl %ebx;pushl (%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "incl (%ecx);movl (%ebp), %ecx;addl $, (%ebx);cmpl (%ebx), %ecx;jae  <MmMapUserAddressesToPage+>": 1,
                "movl , %eax;movl %eax, (%edi);movl , %eax;movl %eax, (%edi);movl , %eax": 1,
                "cmpl $, ;jne  <MmMapUserAddressesToPage+>;pushl %edx;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "shll $, %eax;incl (%edi);addl $, (%ecx);cmpl (%ecx), %esi;jae  <MmMapUserAddressesToPage+>": 1,
                "movb $, (%ecx);movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %ecx;movw %dx, (%ecx)": 1,
                "addl $, -(%ebp);movl %edx, -(%ebp);addl %eax, (%ebp);movl $, -(%ebp);incl -(%ebp)": 1,
                "cmpl $, -(%ebp);jb - <MmMapUserAddressesToPage+>;movl (%ebp), %eax;subl , %eax;movl %eax, %ecx": 1,
                "sbbl %ecx, %ecx;negl %ecx;shrl $, %eax;addl %eax, %ecx;cmpl , %ecx": 1,
                "negl %ecx;shrl $, %eax;addl %eax, %ecx;cmpl , %ecx;jae  <MmMapUserAddressesToPage+>": 1,
                "incl %esi;jmp  <MmMapUserAddressesToPage+>;incl %esi;testl %ecx, %ecx;jne  <MmMapUserAddressesToPage+>": 1,
                "jne  <MmMapUserAddressesToPage+>;movl -(%ebp), %eax;pushl (%eax);pushl %eax;calll - <MmTrimAllSystemPagableMemory+>": 2,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;jmp  <MmMapUserAddressesToPage+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "retl;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ;jne  <MmMapUserAddressesToPage+>": 1,
                "movl $, ;movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll *;movl %eax, %esi": 1,
                "movb %al, -(%ebp);movl (,%ebx,), %eax;movl (%eax), %ecx;testl %ecx, %ecx;je  <MmMapUserAddressesToPage+>": 1,
                "je  <MmMapUserAddressesToPage+>;cmpl $, %ebx;jne  <MmMapUserAddressesToPage+>;cmpl , %ecx;je  <MmMapUserAddressesToPage+>": 1,
                "jne  <MmMapUserAddressesToPage+>;cmpl , %ecx;je  <MmMapUserAddressesToPage+>;movl (%eax), %esi;movl , %ecx": 1,
                "movl (%eax), %esi;movl , %ecx;leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %edi;movl , %ecx": 1,
                "jle - <MmMapUserAddressesToPage+>;cmpl $, ;je  <MmMapUserAddressesToPage+>;movl , %esi;movl , %ecx": 1,
                "movb -(%ebp), %cl;movl $, ;calll *;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "calll - <MmUnlockPagableImageSection>;andl $, ;jmp  <MmMapUserAddressesToPage+>;calll *;pushl %edi": 1,
                "andl $, ;jmp  <MmMapUserAddressesToPage+>;calll *;pushl %edi;movb %al, -(%ebp)": 1,
                "jge  <MmMapUserAddressesToPage+>;pushl ;calll - <MmUnlockPagableImageSection>;movl %edi, ;movl %edi, ": 1,
                "movl %edi, ;movl %edi, ;jmp  <MmMapUserAddressesToPage+>;testb $, ;je  <MmMapUserAddressesToPage+>": 1,
                "je  <MmMapUserAddressesToPage+>;subl %esi, %eax;incl %eax;pushl %eax;pushl %esi": 1,
                "testb $, ;je  <MmMapUserAddressesToPage+>;movl , %eax;subl %esi, %eax;incl %eax": 1,
                "pushl %esi;pushl ;calll - <RtlClearBits>;xorl %esi, %esi;pushl %esi": 1,
                "cmpl (%eax), %esi;jb - <MmMapUserAddressesToPage+>;testb $, ;je  <MmMapUserAddressesToPage+>;xorl %esi, %esi": 1,
                "calll *%ebx;movl , %ecx;testl %ecx, %ecx;movb %al, %dl;je  <MmMapUserAddressesToPage+>": 1,
                "movl , %ecx;testl %ecx, %ecx;movb %al, %dl;je  <MmMapUserAddressesToPage+>;addl $, %ecx": 1,
                "cmpl %ebx, ;pushl %esi;jne  <MmMapUserAddressesToPage+>;calll *;cmpl %ebx, ": 1,
                "movl %esi, %ecx;movb %bl, ;calll *;movl $, %esi;jmp  <MmMapUserAddressesToPage+>": 1,
                "pushl (%eax);calll *(%eax);movl , %eax;cmpl %esi, %eax;jne - <MmMapUserAddressesToPage+>": 1,
                "pushl %ebx;calll - <KeISetGdtSelector+>;cmpl %ebx, ;je  <MmMapUserAddressesToPage+>;calll - <PsIsThreadImpersonating+>": 1,
                "je  <MmMapUserAddressesToPage+>;pushl %ebx;calll - <MmUnmapViewInSystemSpace+>;calll - <LsaDeregisterLogonProcess+>;testb $, ": 1,
                "calll - <MmUnmapViewInSystemSpace+>;pushl %ebx;calll - <MmMapUserAddressesToPage+>;pushl %ebx;calll - <IoAttachDevice+>": 1,
                "calll - <MmMapUserAddressesToPage+>;movl %ebx, ;movl %fs:, %eax;movl , %ecx;pushl %ebx": 1,
                "cmpl $, (%ebx);je  <MmMapUserAddressesToPage+>;pushl %esi;pushl %edi;movl (%ebp), %edi": 1,
                "movl (%ebp), %edi;movl (%ebx), %esi;movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax": 1,
                "calll - <MmUnmapLockedPages>;pushl %esi;calll - <MmAdjustWorkingSetSize+>;pushl $;pushl %esi": 1,
                "movl (%ebp), %ecx;addl $, %edx;movl (%edx), %eax;cmpl %eax, %ecx;ja  <MmMapUserAddressesToPage+>": 1,
                "pushl %edi;leal (%esi,%ecx), %edi;cmpl %eax, %edi;jbe  <MmMapUserAddressesToPage+>;subl %ecx, %eax": 1,
                "movl (%eax), %esi;movl %ecx, (%ebp);jmp  <MmMapUserAddressesToPage+>;movl (%esi), %edx;cmpl %edx, %edi": 1,
                "cmpl %edi, %edx;jb  <MmMapUserAddressesToPage+>;cmpl (%esi), %ecx;jae  <MmMapUserAddressesToPage+>;cmpl %edi, %edx": 1,
                "jbe  <MmMapUserAddressesToPage+>;movl %ecx, (%esi);jmp  <MmMapUserAddressesToPage+>;movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %eax, (%esi);incl (%ebx);popl %edi;popl %esi;popl %ebx": 1,
                "movl %ecx, (%esi);movl %edi, (%esi);movw %di, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "decl %eax;jne - <MmMapUserAddressesToPage+>;pushl %esi;calll - <MmMapMemoryDumpMdl>;orb $, (%esi)": 1,
                "calll - <MmMapMemoryDumpMdl>;orb $, (%esi);testw $, (%esi);je  <MmMapUserAddressesToPage+>;pushl %edi": 1,
                "je  <MmMapUserAddressesToPage+>;pushl $;calll - <InbvInstallDisplayStringFilter+>;pushl $;movl %eax, %edi": 1,
                "pushl $;pushl $;pushl $;movl %eax, %esi;calll - <InbvSolidColorFill>": 1,
                "je  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;movb $, (%eax);jmp  <MmMapUserAddressesToPage+>;jmp - <MmMapUserAddressesToPage+>": 1,
                "andb %dh, (%ebx);jae  <MmMapUserAddressesToPage+>;insl %dx, %es:(%edi);orb (%eax), %al;int": 1,
                "addl $, %esp;testl %ecx, %ecx;je  <MmMapUserAddressesToPage+>;movl (%esi), %eax;imull $, %eax, %eax": 2,
                "movl %edi, %ebx;divl %ebx;pushl %ecx;pushl %edx;pushl %eax": 1,
                "divl %ebx;pushl %ecx;pushl %edx;pushl %eax;pushl $": 1,
                "pushl (%esi);pushl %ecx;pushl %edx;pushl %eax;pushl $": 1,
                "calll - <DbgPrint>;addl $, %esp;popl %edi;popl %esi;popl %ebx": 2,
                "incl %ebp;insb %dx, %es:(%edi);popal;jo  <MmMapUserAddressesToPage+>;andb %dh, %fs:(%ecx,%ebp,)": 1,
                "arpl %cx, (%edx);addb %al, (%eax);addb %al, (%eax);decl %eax;decl %ecx": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andl $, %eax;xorb %dh, (%ebx);andb %dh, %fs:(%ebx)": 1,
                "incl %ebx;outsl (%esi), %dx;jo  <MmMapUserAddressesToPage+>;andb %dh, (%ecx,%ebp,);andb %ah, %gs:(%eax)": 1,
                "je  <MmMapUserAddressesToPage+>;addl %ecx, %edx;movl %edx, (%eax);jmp  <MmMapUserAddressesToPage+>;addl %ecx, (%eax)": 1,
                "addl %ecx, (%eax);movl (%eax), %ecx;cmpl (%eax), %ecx;jne  <MmMapUserAddressesToPage+>;movl (%eax), %ecx": 1,
                "xorl %ecx, %ecx;cmpb %bl, (%ebp);setne %cl;incl %ecx;incl %ecx": 1,
                "xorl %ebx, %ebx;addl $, %eax;pushl %eax;pushl (%ebp);pushl %edi": 1,
                "cmpb $, (%ebx);je  <MmMapUserAddressesToPage+>;cmpl $, (%ebx);jl  <MmMapUserAddressesToPage+>;pushl %esi": 1,
                "movl %edx, (%eax,%ecx);addl $, %eax;incl (%ebp);subl $, %edi;jne - <MmMapUserAddressesToPage+>": 1,
                "pushl $;pushl %ebx;calll - <MmMapUserAddressesToPage+>;popl %edi;popl %esi": 1,
                "movl (%ebp), %esi;cmpl %ecx, %esi;leal -(%ebp), %eax;pushl %edi;movl %eax, (%ebp)": 1,
                "je  <MmMapUserAddressesToPage+>;movl (%ebx), %eax;cmpl %ecx, (%eax);movl %esi, (%ebp);je  <MmMapUserAddressesToPage+>": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, (%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, (%ebp);movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "jbe  <MmMapUserAddressesToPage+>;movl (%edi), %eax;movl (%eax), %ecx;addl %ecx, (%edi);movl (%eax), %ecx": 1,
                "movl (%ebp), %edx;movl %eax, -(%ebp);movl (%edi), %ecx;xorl %eax, %eax;addl -(%ebp), %edx": 1,
                "movl %eax, (%ebp);rdtsc;subl %esi, %eax;sbbl %edi, %edx;leal (%ebx), %ecx": 1,
                "leal (%ebx), %ecx;addl %eax, (%ecx);adcl %edx, (%ecx);xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "movl (%ebx), %ecx;movl $, (%ecx);movl (%ebx), %ecx;movl %eax, (%ecx);pushl (%ebp)": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;movl %edx, (%ecx);movl %eax, (%ecx);movw $, (%ecx)": 1,
                "movl %eax, (%ebp);pushl (%ebp);calll - <MmGetPhysicalAddress>;movb $, %cl;movl %eax, -(%ebp)": 1,
                "movl %edx, -(%ebp);calll - <_allshr>;movl -(%ebp), %ecx;movl -(%ebp), %edx;addl $, (%ebp)": 1,
                "movl (%ebx), %eax;andl $, (%eax);movl (%ebp), %ecx;movl (%ebx), %eax;pushl %ecx": 1,
                "leal (%ebx), %eax;sbbl -(%ebp), %ecx;addl %edx, (%eax);adcl %ecx, (%eax);movl (%ebp), %eax": 1,
                "addl %ecx, (%ebx);incl (%ebx);subl %eax, (%ebp);addl %eax, -(%ebp);adcl $, -(%ebp)": 1,
                "pushl (%ebx);leal (%ebx), %eax;pushl %eax;pushl %ebx;calll - <MmMapUserAddressesToPage+>": 1,
                "leal (%esi), %eax;pushl %eax;pushl $;pushl %esi;calll - <MmMapUserAddressesToPage+>": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;popl %edi;je  <MmMapUserAddressesToPage+>;pushl %ebx": 1,
                "addl %ecx, (%eax);adcl %ebx, (%eax);xorl %edi, %edi;cmpl %ebx, %ecx;ja  <MmMapUserAddressesToPage+>": 1,
                "jae  <MmMapUserAddressesToPage+>;movl %ecx, (%ebp);leal (%esi,%edi,), %ecx;movl -(%ecx), %edx;incl %edx": 1,
                "calll - <ExFreePoolWithTag>;cmpb %bl, (%ebp);je  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "cmpb %bl, (%ebp);je  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;cmpl %ebx, (%eax);jl  <MmMapUserAddressesToPage+>": 1,
                "calll - <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>;pushl %edx;pushl %ecx;pushl %eax": 1,
                "jmp  <MmMapUserAddressesToPage+>;pushl %edx;pushl %ecx;pushl %eax;calll - <RtlClearBits>": 1,
                "je  <MmMapUserAddressesToPage+>;cmpl $, (%esi);jne  <MmMapUserAddressesToPage+>;cmpl %ecx, (%esi);jb  <MmMapUserAddressesToPage+>": 1,
                "calll - <MmMapLockedPages>;testl %eax, %eax;movl %eax, (%edi);je  <MmMapUserAddressesToPage+>;movl (%esi), %eax": 1,
                "pushl %edi;calll - <MmMapUserAddressesToPage+>;testl %eax, %eax;je  <MmMapUserAddressesToPage+>;cmpl (%edi), %ebx": 1,
                "calll - <MmGetPhysicalAddress>;movb $, %cl;calll - <_allshr>;movl %eax, %ecx;leal (%esi), %eax": 1,
                "movl $, -(%ebp);jae  <PoSetHiberRange+>;leal (%esi), %edi;movl %ecx, -(%ebp);shll $, %edi": 1,
                "calll *;movb %al, %bl;leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "pushl (%ebp);pushl $;pushl %esi;calll - <PoSetHiberRange>;movl $, %eax": 1,
                "calll - <PoSetHiberRange>;movl $, %eax;pushl $;pushl $;pushl %eax": 1,
                "pushl $;pushl %eax;pushl $;pushl %esi;calll - <PoSetHiberRange>": 2,
                "movl %edx, -(%ebp);calll - <KeQuerySystemTime>;calll - <KeQueryInterruptTime+>;movl %eax, (%esi);movl %edx, (%esi)": 1,
                "je  <PoSetHiberRange+>;leal (%ebx), %eax;cmpl %eax, %edi;jne - <PoSetHiberRange+>;andl $, (%ebp)": 1,
                "calll - <PoUnregisterSystemState+>;movl $, %esi;addl %esi, %eax;xorl %edx, %edx;movl $, %ecx": 1,
                "movl (%ebx), %edx;movl %edx, (%eax);movl %eax, (%ebx);addl $, %eax;decl %ecx": 1,
                "addl %edi, (%ebp);pushl %ebx;calll - <PoUnregisterSystemState+>;addl %esi, %eax;xorl %edx, %edx": 1,
                "movl -(%ebp), %eax;cmpl (%edi), %eax;movl %eax, -(%ebp);jb - <PoSetHiberRange+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebx), %eax;jmp  <PoSetHiberRange+>;movl $, %eax": 1,
                "testl %ecx, %ecx;je  <PoSetHiberRange+>;movl %ecx, %eax;shll $, %eax;addl %eax, (%esi)": 1,
                "movl (%ebx), %eax;cmpl %ebx, %eax;jne  <PoSetHiberRange+>;pushl (%ebp);subl %edi, %eax": 1,
                "pushl %eax;pushl %edi;pushl (%ebp);pushl %esi;pushl $": 1,
                "pushl (%ebp);pushl %esi;pushl $;calll - <PoSetHiberRange+>;addl $, -(%ebp)": 1,
                "movl (%ebp), %ecx;addl $, %ecx;subl -(%ebp), %eax;sbbl -(%ebp), %edx;addl %eax, (%ecx)": 1,
                "pushl %ebx;calll - <MmMapUserAddressesToPage+>;movl (%ebp), %eax;addl %eax, (%esi);movl %edi, %ecx": 1,
                "rep  movsb (%esi), %es:(%edi);rdtsc;subl -(%ebp), %eax;leal (%ebx), %ecx;sbbl -(%ebp), %edx": 1,
                "calll  <RtlCompressBuffer+>;movl %eax, (%ebp);movl %eax, %ecx;cmpl (%ebp), %ecx;jb  <PoSetHiberRange+>": 1,
                "leal (%ebx), %ecx;addl %eax, (%ecx);adcl %edx, (%ecx);movl (%ebp), %ecx;movl , %eax": 1,
                "movl (%ebp), %edx;movl %eax, (%esi);movl , %eax;movl %eax, (%esi);leal -(%ecx), %eax": 1,
                "pushl %edi;pushl $;pushl %ebx;calll - <PoSetHiberRange>;movl %edi, %eax": 1,
                "movl (%ebp), %edi;je  <PoSetHiberRange+>;pushl %edi;subl %esi, %eax;sarl $, %eax": 1,
                "rep  stosl %eax, %es:(%edi);movl (%ebx), %eax;testl %eax, %eax;movl %edx, -(%ebp);je  <PoSetHiberRange+>": 1,
                "cmpl %esi, ;ja  <PoSetHiberRange+>;movl (%eax), %esi;movl (%ebp), %eax;shrl $, %esi": 1,
                "jb  <PoSetHiberRange+>;movl (%ebx), %esi;pushl $;movl %edx, %edi;addl $, %esi": 1,
                "calll - <InbvNotifyDisplayOwnershipLost+>;movl -(%ebp), %edi;movl (%ebp), %ecx;pushl $;pushl $": 1,
                "movl -(%ebp), %edi;movl (%ebp), %ecx;pushl $;pushl $;pushl $": 1,
                "movl $, %ecx;rep  stosl %eax, %es:(%edi);movl (%ebx), %esi;movl -(%ebp), %edi;pushl $": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);xorl %esi, %esi;pushl %esi;calll - <InbvNotifyDisplayOwnershipLost+>": 1,
                "calll - <InbvNotifyDisplayOwnershipLost+>;movl %eax, (%ebp);movl (%edi), %eax;cmpl (%ebp), %eax;je  <PoSetHiberRange+>": 2,
                "movl %edx, (%ebp);movl $, -(%ebp);movl %esi, (%ebx);movl %eax, -(%ebp);movl $, (%ebp)": 1,
                "movl %edx, -(%ebp);pushl %esi;pushl %ebx;calll - <MmMapUserAddressesToPage+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl -(%ebp), %eax;je  <PoSetHiberRange+>;pushl %eax;pushl %ebx;movl %eax, -(%ebp)": 2,
                "je  <PoSetHiberRange+>;pushl %eax;pushl %ebx;movl %eax, -(%ebp);calll - <MmMapUserAddressesToPage+>": 2,
                "movl -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "addl %esi, -(%ebp);cmpl -(%ebp), %eax;je  <PoSetHiberRange+>;pushl %eax;pushl %ebx": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx;cmpl (%eax), %ecx;jbe - <PoSetHiberRange+>": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;cmpl (%eax), %ecx;jbe - <PoSetHiberRange+>;leal (%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl %eax, (%ebp);je - <PoSetHiberRange+>;jmp - <PoSetHiberRange+>;jmp - <PoSetHiberRange+>": 1,
                "jmp - <PoSetHiberRange+>;jmp - <PoSetHiberRange+>;pushl %esi;pushl %esi;pushl %esi": 1,
                "pushl (%ebp);pushl $;pushl %eax;pushl %ebx;calll - <MmMapUserAddressesToPage+>": 1,
                "pushl %eax;pushl %ebx;calll - <MmMapUserAddressesToPage+>;movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "calll - <PoUnregisterSystemState+>;subl (%ebx), %eax;pushl %esi;sbbl (%ebx), %edx;movl $, %esi": 1,
                "calll - <_aulldiv>;pushl $;pushl %esi;pushl (%ebx);movl %eax, (%ebx)": 2,
                "movl , %eax;shrl $, %eax;pushl $;decl %eax;movl %eax, (%ebx)": 1,
                "shrl $, %eax;pushl $;decl %eax;movl %eax, (%ebx);movl $, (%edi)": 1,
                "pushl $;pushl %ebx;calll - <MmMapUserAddressesToPage+>;cmpl %esi, (%ebx);jge - <PoSetHiberRange+>": 1,
                "testl $, %eax;je  <PoSetHiberRange+>;leal (%ebx), %eax;pushl %eax;calll - <MmMapUserAddressesToPage+>": 1,
                "je  <PoSetHiberRange+>;leal (%ebx), %eax;pushl %eax;calll - <MmMapUserAddressesToPage+>;movl , %eax": 1,
                "popal;je  <PoSetHiberRange+>;pushl $;insb %dx, %es:(%edi);andb %ah, ": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebx), %esi;leal -(%ebp), %eax;movl $, %edx": 1,
                "movl %eax, (%ebx);xorl %eax, %eax;movl %edx, %edi;movl $, %ecx;pushl %edx": 1,
                "calll - <DbgBreakPoint>;movl $, %eax;jmp  <PoSetHiberRange+>;movl $, (%esi);cmpb $, (%ebx)": 1,
                "calll - <InbvInstallDisplayStringFilter+>;pushl $;movl %eax, -(%ebp);calll - <InbvEnableDisplayString>;calll - <InbvAcquireDisplayOwnership>": 1,
                "jmp  <PoSetHiberRange+>;movl %edi, (%ecx);xorl %ecx, %ecx;incl %ecx;incl %edi": 1,
                "movl $, %eax;jmp  <PoSetHiberRange+>;movl $, %eax;jmp  <PoSetHiberRange+>;movl $, %eax": 6,
                "retl $;aas;addb %al, (%eax);addb %dl, (%ebx);jne  <PoSetHiberRange+>": 1,
                "xorl %eax, (%bx,%si);addb %al, (%eax);pushl %edi;outsl (%esi), %dx;jb  <PoSetHiberRange+>": 1,
                "outsl (%esi), %dx;jb  <PoSetHiberRange+>;imull $, (%esi), %ebp;jo  <PoSetHiberRange+>;arpl %bp, (%ecx)": 1,
                "imull $, (%esi), %ebp;jo  <PoSetHiberRange+>;arpl %bp, (%ecx);imull $, (%ebp), %esp;int": 1,
                "cmpb %bl, %al;je  <PoSetHiberRange+>;pushl -(%ebp);pushl ;pushl ": 1,
                "movb %bl, ;movl $, %esi;pushl %ebx;calll - <IoGetDeviceProperty+>;pushl ": 1,
                "pushl ;calll - <MmUnlockPagableImageSection>;pushl $;calll - <ExSetTimerResolution+>;pushl %ebx": 1,
                "calll - <IoGetDeviceProperty+>;movb $, -(%ebp);cmpl %ebx, ;je  <PoSetHiberRange+>;andb $-, ": 1,
                "pushl $;calll - <PoUnregisterSystemState+>;movl , %eax;cmpl $, %eax;je  <PoSetHiberRange+>": 1,
                "jl  <PoSetHiberRange+>;pushl %ebx;calll - <IoGetDeviceProperty+>;movb %bl, -(%ebp);calll - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "calll  <PoSetHiberRange+>;movl , %eax;movl %eax, ;movl , %eax;shrl $, %eax": 1,
                "pushl $;calll - <PoShutdownBugCheck+>;movb $, ;cmpb %bl, -(%ebp);je  <PoSetHiberRange+>": 1,
                "je  <PoSetHiberRange+>;movb %bl, -(%ebp);movl -(%ebp), %eax;movl %eax, ;andb $-, ": 1,
                "testb %al, %al;je  <PoSetHiberRange+>;cmpl $, -(%ebp);je  <PoSetHiberRange+>;cmpl $, ": 1,
                "cmpl $, ;jne  <PoSetHiberRange+>;pushl $;calll - <IoFreeErrorLogEntry+>;cmpl %ebx, %eax": 1,
                "jne  <PoSetHiberRange+>;pushl $;calll - <IoFreeErrorLogEntry+>;cmpl %ebx, %eax;je  <PoSetHiberRange+>": 1,
                "cmpb %bl, -(%ebp);jne  <PoSetHiberRange+>;cmpb %bl, ;je  <PoSetHiberRange+>;leal -(%ebp), %eax": 1,
                "movb $, -(%ebp);calll - <PoShutdownBugCheck+>;movb $, ;cmpb %bl, ;jne  <PoSetHiberRange+>": 1,
                "movb $, ;cmpb %bl, ;jne  <PoSetHiberRange+>;cmpb %bl, -(%ebp);jne  <PoSetHiberRange+>": 1,
                "jne  <PoSetHiberRange+>;cmpb %bl, -(%ebp);jne  <PoSetHiberRange+>;movb $, -(%ebp);pushl $": 1,
                "cmpb %bl, ;je  <PoSetHiberRange+>;cmpb %bl, ;je  <PoSetHiberRange+>;movl $, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %esi;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %ecx": 1,
                "pushl -(%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %ecx;movl %ecx, -(%ebp);calll - <ObfDereferenceObject>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlCompressBuffer+>;movl , %eax;cmpl %ebx, %eax": 1,
                "calll - <ExQueueWorkItem>;cmpb %bl, -(%ebp);je  <PoSetHiberRange+>;calll - <RtlxUnicodeStringToOemSize+>;movl %fs:, %eax": 1,
                "movl $, %eax;jmp  <PoSetHiberRange+>;calll - <MmMapUserAddressesToPage+>;pushl $;calll *": 1,
                "calll - <IoGetDeviceProperty+>;calll  <PoSetHiberRange+>;cmpl %ebx, %edi;jl  <PoSetHiberRange+>;movl , %eax": 1,
                "calll - <KeQueryInterruptTime+>;movl %eax, ;movl %edx, ;testb $, ;jne  <PoSetHiberRange+>": 1,
                "jne  <PoSetHiberRange+>;movl -(%ebp), %esi;cmpl %ebx, %esi;je  <PoSetHiberRange+>;pushl %ebx": 1,
                "je  <PoSetHiberRange+>;pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlOemToUnicodeN+>;cmpb %bl, -(%ebp);je  <PoSetHiberRange+>;cmpl %esi, -(%ebp);jne  <PoSetHiberRange+>": 1,
                "incl %esi;pushl %esi;calll - <MmMapUserAddressesToPage+>;testb $, ;jne  <PoSetHiberRange+>": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax;cmpl %edx, %eax;je  <PoSetHiberRange+>": 1,
                "je  <PoSetHiberRange+>;pushl %esi;movl %eax, %ecx;movl (%eax), %eax;cmpl %edx, %eax": 1,
                "movl %esi, (%ecx);jne - <PoSetHiberRange+>;popl %esi;popl %ebp;retl $": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;xorl %edx, %edx;cmpl %edx, %ecx;jge  <PoSetHiberRange+>": 1,
                "nop;nop;movl , %ecx;addl $, %ecx;calll *": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %esi;decl %eax": 1,
                "movl $, %ebx;pushl (%ebp);pushl $;calll - <DbgPrint>;movl (%esi), %eax": 1,
                "popl %ecx;popl %ecx;je  <PoSetHiberRange+>;pushl %eax;pushl $": 2,
                "pushl (%eax);movl , %eax;pushl (%eax);calll - <PoSetHiberRange+>;pushl %eax": 1,
                "ja  <PoSetHiberRange+>;andb %al, (%eax);addb %al, (%eax);addb %ah, ;jb  <PoSetHiberRange+>": 1,
                "movl (%ebx), %eax;andl $, (%edx);movl %eax, (%edx);movb $, (%edx);movl , %eax": 1,
                "movl (%ecx), %eax;cmpl , %eax;je  <PoSetHiberRange+>;movb $, (%ecx);popl %ebp": 1,
                "je  <PoSetHiberRange+>;leal (%esi), %edx;movl (%edx), %edi;leal (%ecx), %eax;movl %edx, (%eax)": 2,
                "movl $, -(%ebp);jne - <PoSetHiberRange+>;movb (%ebp), %dl;movl -(%ebp), %ecx;calll *": 1,
                "calll *%ebx;movb %al, (%ebp);jmp - <PoSetHiberRange+>;leal (%esi), %eax;cmpl %eax, (%eax)": 1,
                "movb $, -(%ebp);movl (%esi), %edi;movl (%edi), %eax;movl (%edi), %ecx;movl %eax, (%ecx)": 1,
                "movb (%ebp), %dl;movl -(%ebp), %ecx;calll *;pushl %edi;pushl $": 1,
                "movl %ecx, (%edi);movl %edi, (%eax);jmp  <PoSetHiberRange+>;leal (%esi), %ecx;movl (%ecx), %edx": 1,
                "jne - <PoSetHiberRange+>;movb (%ebp), %dl;movl -(%ebp), %ecx;calll *;popl %edi": 1,
                "movb (%ebp), %dl;movl -(%ebp), %ecx;calll *;popl %edi;popl %esi": 1,
                "pushl $;calll - <KeBugCheckEx>;int;nop;pushl %edi": 1,
                "movl %edx, (%ecx);leal (%ebx), %ecx;movl (%ecx), %edx;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "pushl %eax;calll - <KeISetGdtSelector+>;jmp  <PoSetHiberRange+>;movl (%ebp), %ecx;cmpl $, (%ecx)": 1,
                "decl (%eax);jne  <PoSetHiberRange+>;movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx)": 1,
                "jne  <PoSetHiberRange+>;movb $, -(%ebp);pushl $;pushl (%ebp);pushl %esi": 1,
                "je  <PoSetHiberRange+>;pushl $;pushl $;addl $, %esi;pushl %esi": 1,
                "je  <PoSetHiberRange+>;movl $, %esi;movl %esi, %ecx;calll *;movb %al, %dl": 1,
                "movl (%ebp), %eax;movb $, (%eax);movl (%ebp), %eax;movl %eax, (%esi);leal (%edi), %eax": 1,
                "pushl %eax;pushl (%edi);pushl ;calll - <PoRequestPowerIrp+>;cmpl $, %eax": 1,
                "andl $, (%edx);jmp  <PoSetHiberRange+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movl %eax, (%esi)": 1,
                "calll - <PoUnregisterSystemState+>;movl (%ebp), %ecx;pushl %ebx;pushl (%ecx);calll - <PoCallDriver>": 1,
                "movl %ecx, (%eax);leal (%edi), %ecx;movl (%ecx), %eax;movl %ecx, (%esi);movl %eax, (%esi)": 1,
                "cmpl $, (%edi);je  <PoSetHiberRange+>;movl %esi, %ecx;calll *%ebx;pushl $": 1,
                "jae  <PoSetHiberRange+>;pushl %ebx;leal (%esi), %ebx;cmpl %ebx, (%ebx);je  <PoSetHiberRange+>": 1,
                "movb , %al;movb %al, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <PoSetHiberRange+>;movb $, -(%ebp);cmpb $, ;je  <PoSetHiberRange+>;movb $, (%esi)": 1,
                "testb %bl, %bl;jne  <PoSetHiberRange+>;cmpb %bl, (%esi);je  <PoSetHiberRange+>;leal (%esi), %edi": 1,
                "cmpb $, -(%ebp);je  <PoSetHiberRange+>;cmpl $, %edi;jg  <PoSetHiberRange+>;movb $, -(%ebp)": 1,
                "xchgl %eax, (%ecx);cmpl $, ;je  <PoSetHiberRange+>;pushl $;calll - <MmMapUserAddressesToPage+>": 1,
                "calll - <PoRequestPowerIrp+>;cmpb $, ;je  <PoSetHiberRange+>;cmpb $, -(%ebp);jne  <PoSetHiberRange+>": 1,
                "jge  <PoSetHiberRange+>;movb $, -(%ebp);testb $-, ;je  <PoSetHiberRange+>;movl (%esi), %eax": 1,
                "pushl %esi;calll - <PoSetHiberRange+>;xorl %eax, %eax;cmpl %eax, (%esi);jl  <PoSetHiberRange+>": 1,
                "pushl %eax;calll - <IoGetDeviceInterfaceAlias+>;testb $, ;je  <PoSetHiberRange+>;cmpb $, ": 1,
                "testb $, ;je  <PoSetHiberRange+>;cmpb $, ;jne  <PoSetHiberRange+>;pushl $": 1,
                "popl %ecx;movb $, (%ebp);movl $, (%esi);jmp  <PoSetHiberRange+>;movl , %ecx": 1,
                "movl %edx, (%ecx);calll - <PoSetHiberRange+>;pushl (%edi);calll - <IoFreeIrp>;andl $, (%edi)": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;calll ;movl (%esi), %eax": 1,
                "pushl %eax;pushl $;calll ;movl (%esi), %eax;popl %edi": 1,
                "retl $;nop;jo  <PoSetHiberRange+>;cmpb (%eax), %ah;pushl %eax": 1,
                "pushl %eax;andb %ah, (%ebp);popal;bound (%ebp), %ebp;orb %cs:(%eax), %al": 1,
                "pushl %ebx;calll - <InbvSetScrollRegion>;pushl $;calll - <InbvInstallDisplayStringFilter+>;pushl $": 1,
                "calll - <InbvInstallDisplayStringFilter+>;pushl $;movl %eax, %esi;calll - <InbvInstallDisplayStringFilter+>;cmpl %ebx, %esi": 1,
                "jne - <PoSetHiberRange+>;pushl $;calll - <InbvDisplayString>;pushl $;calll - <InbvDisplayString>": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %al, (%eax);pushl %esp;pushl $": 1,
                "movl %eax, %ebx;jmp  <PoSetHiberRange+>;pause;movl (%esi), %eax;cmpl (%edi), %eax": 1,
                "decl %eax;jne  <PoSetHiberRange+>;cmpb $, (%edi);je  <PoSetHiberRange+>;addl $, %edi": 1,
                "movb (%ebx), %cl;calll *(%ebx);jmp  <PoSetHiberRange+>;xorl %eax, %eax;movb (%edi), %al": 1,
                "pushl (%eax);pushl (%esi);calll *(%eax);jmp  <PoSetHiberRange+>;movl (%esi), %eax": 1,
                "jmp  <PoSetHiberRange+>;pushl (%esi);calll - <PoSetHiberRange+>;jmp  <PoSetHiberRange+>;leal (%edi), %eax": 1,
                "pushl (%ebp);calll - <PoSetHiberRange+>;cmpl $, -(%ebp);jne - <PoSetHiberRange+>;leave": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);leal -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "addl $, %eax;movl %eax, -(%ebp);cmpl $, (%eax);jne  <PoSetHiberRange+>;movl $, %eax": 1,
                "movl $, %eax;jmp  <PoSetHiberRange+>;movsbl , %eax;pushl %ebx;xorl %ebx, %ebx": 1,
                "jb  <PoSetHiberRange+>;movl -(%ebp), %eax;pushl $;leal (%eax), %ecx;pushl %ecx": 1,
                "cmpl %edi, ;jae - <PoSetHiberRange+>;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, -(%ebp);calll - <PoSetHiberRange+>;movl -(%ebp), %ebx": 2,
                "movl %esi, ;calll - <PoSetHiberRange+>;pushl %edi;calll - <InbvAcquireDisplayOwnership+>;jmp  <PoSetHiberRange+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "jbe  <PoSetHiberRange+>;movl $, %eax;movl $, %ecx;xchgl %eax, (%ecx);jmp  <PoSetHiberRange+>": 1,
                "jmp  <PoSetHiberRange+>;movl $, %eax;movl $, %ecx;xchgl %eax, (%ecx);incl ": 1,
                "pushl %eax;movb $, -(%ebp);calll - <PoSetHiberRange+>;movl -(%ebp), %ebx;pushl $": 1,
                "popl %esi;jl  <PoSetHiberRange+>;calll - <KeSaveStateForHibernate+>;pushl $;leal -(%ebp), %eax": 1,
                "movl %edi, -(%ebp);cmpb $-, (%eax);je  <PoSetHiberRange+>;incb (%eax);movb -(%ebp), %cl": 1,
                "pushl %ebx;calll - <wctomb+>;movl (%ebp), %eax;subl $, %eax;je  <PoSetHiberRange+>": 1,
                "je  <PoSetHiberRange+>;decl %eax;je  <PoSetHiberRange+>;pushl $;calll *": 1,
                "pushl %esi;calll - <PoSetHiberRange+>;movl %eax, %esi;testl %esi, %esi;jge  <PoSetHiberRange+>": 1,
                "movl %ebx, -(%ebp);cmpl %edi, %ebx;jne  <PoSetHiberRange+>;movl $, %esi;jmp  <PoSetHiberRange+>": 1,
                "movl $, %esi;jmp  <PoSetHiberRange+>;pushl ;calll - <MmLockPagableSectionByHandle>;calll *": 1,
                "jmp  <PoSetHiberRange+>;movl $, (%ebx);movb %al, %cl;calll *;movl %edi, -(%ebp)": 1,
                "addb %al, (%eax);addl %edi, (%ecx);popl %ecx;addb %bh, -(%ebp);jecxz  <RtlCompressBuffer+>": 1,
                "jne - <RtlCompressBuffer+>;movl -(%ebp), %eax;addl %edx, %ecx;movl %ecx, %esi;andl $, %esi": 1,
                "xorl %ebx, %edx;movzbl (%eax), %ebx;movzwl (,%ebx,), %ebx;xorl %ebx, %edx;movl -(%ebp), %ebx": 1,
                "addl $, %ecx;cmpl %ecx, %eax;jae  <RtlCompressBuffer+>;subl %eax, %ecx;xorl %eax, %eax": 1,
                "movl %ebp, %esp;popl %ebp;retl;int;int": 1,
                "movl -(%esi), %edi;movl %edi, %edx;leal (%esp), %esp;leal (%ecx,%ecx), %eax;orl $, %eax": 1,
                "movl %eax, %ecx;je - <RtlCompressBuffer+>;movl %eax, -(%esi);popl %edi;retl": 1,
                "incl %esi;movb %al, -(%ebx);addl %ebp, %ebp;jb  <RtlCompressBuffer+>;cmpl -(%edx), %esi": 2,
                "movl (%edx,%eax,), %edi;movl %esi, (%edx,%eax,);cmpl %ecx, %edi;js - <RtlCompressBuffer+>;testl %edi, %edi": 1,
                "movl (%esi), %eax;subl (%edi), %eax;je  <RtlCompressBuffer+>;testl $, %eax;jne - <RtlCompressBuffer+>": 2,
                "testl $, %eax;jne - <RtlCompressBuffer+>;movl $, %ecx;subl %esi, %edi;leal (%ecx,%esi), %eax": 2,
                "je  <RtlCompressBuffer+>;bsfl %eax, %ecx;subl %esi, %edi;shrl $, %ecx;notl %edi": 2,
                "movl %ebx, -(%edx);addl $, %ebx;movl %ebp, (%ecx);movl $, %ebp;jmp - <RtlCompressBuffer+>": 6,
                "shlb $, %al;movl $, -(%edx);orb %al, (%edi);subl $, %ecx;jae  <RtlCompressBuffer+>": 2,
                "jmp - <RtlCompressBuffer+>;movb %cl, (%ebx);incl %ebx;cmpl $, %ecx;jb - <RtlCompressBuffer+>": 2,
                "jmp - <RtlCompressBuffer+>;incl %esi;incl %edi;jmp - <RtlCompressBuffer+>;pushl %eax": 2,
                "jmp - <RtlCompressBuffer+>;pushl %eax;jmp  <RtlCompressBuffer+>;movzbl (%esi), %eax;movzbl (%esi), %ecx": 2,
                "movl %ebp, -(%edx);subl -(%edx), %esi;movl %esi, -(%edx);popl %ebp;popl %edi": 2,
                "xorl %ecx, %eax;xorl %edi, %eax;movl -(%edx), %ecx;movzwl (%edx,%eax,), %di;subl %ecx, %esi": 1,
                "incl %ebp;cmpl (%esp), %esi;jne - <RtlCompressBuffer+>;popl %eax;popl %ebp": 1,
                "movl (%ebp), %ecx;pushl %ebx;pushl %esi;movl -(%ecx), %esi;pushl %edi": 1,
                "movl -(%ecx), %edx;cmpw $, (%ecx,%edx,);je  <RtlCompressBuffer+>;movl -(%ecx), %ebx;movw %dx, (%ecx)": 1,
                "movzwl (%ecx,%eax,), %edi;je  <RtlCompressBuffer+>;cmpw %dx, (%ebx,%edi);movzwl (%ecx,%edi,), %eax;je  <RtlCompressBuffer+>": 4,
                "xorl %ebx, %edx;je  <RtlCompressBuffer+>;testl $, %edx;jne  <RtlCompressBuffer+>;movl -(%ecx), %edx": 1,
                "cmpl %edx, %eax;ja  <RtlCompressBuffer+>;movl $, -(%ecx);jmp  <RtlCompressBuffer+>;movl -(%ecx), %edx": 1,
                "leal (%esp), %esp;nop;movb (%eax), %bl;cmpb (%esi), %bl;jne  <RtlCompressBuffer+>": 1,
                "jne  <RtlCompressBuffer+>;addl $, %eax;addl $, %esi;cmpl %edx, %eax;ja  <RtlCompressBuffer+>": 2,
                "addl $, %eax;addl $, %esi;cmpl %edx, %eax;ja  <RtlCompressBuffer+>;movb (%eax), %bl": 2,
                "addl $, %eax;jmp  <RtlCompressBuffer+>;addl $, %eax;jmp  <RtlCompressBuffer+>;incl %eax": 1,
                "cmpl %edx, %eax;jne - <RtlCompressBuffer+>;movl -(%ecx), %ebx;movl -(%ecx), %esi;subl %ebx, %eax": 1,
                "incl %esi;jmp  <RtlCompressBuffer+>;cmpl $, %edx;jl  <RtlCompressBuffer+>;movl $, %eax": 2,
                "orb %al, (%edi);movl $, -(%ecx);subl $, %edx;js  <RtlCompressBuffer+>;movb %dl, (%esi)": 2,
                "incl %esi;cmpl $, %edx;jl  <RtlCompressBuffer+>;addl $, %edx;movb %dl, (%esi)": 2,
                "jl  <RtlCompressBuffer+>;addl $, %edx;movb %dl, (%esi);sarl $, %edx;movb $-, -(%esi)": 2,
                "movb %dl, (%esi);sarl $, %edx;movb $-, -(%esi);movb %dl, (%esi);addl $, %esi": 2,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %ecx;movl -(%ecx), %eax": 1,
                "pushl %esi;movl %eax, (%ebp);pushl %edi;movl -(%ecx), %esi;cmpw $, (%ecx,%esi,)": 1,
                "je  <RtlCompressBuffer+>;cmpw %si, (%edx,%edi);movzwl (%ecx,%edi,), %eax;je  <RtlCompressBuffer+>;cmpw %si, (%edx,%eax)": 3,
                "subl -(%ecx), %eax;movl -(%ecx), %ebx;movl %ebx, %edx;subl %edx, %eax;cmpl -(%ecx), %eax": 1,
                "movl (%ebp), %edi;movl -(%ecx), %eax;movb %dl, (%edi);incl %edi;testl %eax, %eax": 1,
                "movl %eax, -(%ecx);movl -(%ecx), %eax;addl %ebx, %eax;movl %esi, (%ebp);movl %eax, -(%ecx)": 1,
                "addl %ebx, %eax;movl %esi, (%ebp);movl %eax, -(%ecx);movl -(%ecx), %eax;cmpl %eax, -(%ecx)": 1,
                "movl %ebp, %esp;popl %ebp;retl $;nop;nop": 1,
                "pushl %edi;movl -(%esi), %edi;movl -(%esi), %eax;movl -(%esi), %edx;movl %eax, %ecx": 1,
                "je  <RtlCompressBuffer+>;cmpl $, (%edx);jne  <RtlCompressBuffer+>;movl (%ebp), %eax;pushl %ebx": 1,
                "jle  <RtlCompressBuffer+>;cmpl $, (%ebp);jl  <RtlCompressBuffer+>;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "leal (%edx,%ebx), %eax;movl %ebx, -(%esi);leal -(%eax), %ebx;movl %eax, -(%esi);addl $-, %eax": 1,
                "movl %edx, -(%esi);movl %ebx, -(%esi);movl %eax, -(%esi);movl %eax, -(%esi);movl $, -(%esi)": 1,
                "jmp  <RtlCompressBuffer+>;cmpl $, %ecx;jne  <RtlCompressBuffer+>;movl $, %ecx;xorl %eax, %eax": 1,
                "pushl $;pushl %edx;movl $, -(%esi);calll *%edi;movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl -(%esi), %eax;movl -(%esi), %ecx;movl %eax, -(%esi);movl %eax, -(%esi)": 1,
                "addl $, %eax;subl %eax, %ecx;movl %eax, -(%esi);movl (%ebp), %eax;leal -(%ecx,%eax), %eax": 1,
                "leal (%eax), %ecx;sarl $, %ecx;subl %ecx, %eax;cmpl $, %eax;movl $, -(%esi)": 1,
                "cmpl %ecx, %edx;movl %ecx, -(%esi);jge  <RtlCompressBuffer+>;movl (%ebp), %edx;movl (%ebp), %eax": 1,
                "movl %eax, (%ecx);movl -(%esi), %eax;movl %eax, -(%esi);addl $, %eax;movl %eax, -(%esi)": 1,
                "movl -(%esi), %eax;movl -(%esi), %edx;movl (%ebp), %ecx;subl %edx, %eax;cmpl %ecx, %eax": 1,
                "addl %eax, %edx;movl %edx, %eax;movl %edx, -(%esi);movl (%ebp), %edx;subl %ecx, %eax": 1,
                "xorl %ecx, %ecx;cmpl $, %ebx;movl $, %eax;jle  <RtlCompressBuffer+>;movl $, %ebx": 1,
                "movl $, %ebx;jmp  <RtlCompressBuffer+>;cmpl $, %ebx;jl  <RtlCompressBuffer+>;cmpl $, %ebx": 1,
                "cmpl $, %ebx;movl $, %eax;jl  <RtlCompressBuffer+>;leal (%edx,%edx), %eax;movl $, %ecx": 1,
                "movl (%ebp), %ecx;andl $-, %esi;leal (%eax,%esi), %eax;pushl %eax;pushl %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;movl $, %edx;subl %ecx, %edx;addl %edx, %eax": 1,
                "popl %edi;popl %ebp;retl $;xorl %eax, %eax;popl %edi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpw $, (%ebp);jne  <RtlCompressBuffer+>": 1,
                "movl (%ebp), %eax;movl $, (%eax);xorl %eax, %eax;jmp  <RtlCompressBuffer+>;cmpw $, (%ebp)": 1,
                "andl $, -(%ebp);pushl %ebx;movl (%ebp), %ebx;leal (%ebx), %ecx;cmpl %eax, %ecx": 1,
                "movl -(%ebp), %ecx;movb $, %al;shlb %cl, %al;notb %al;andb %al, -(%ebp)": 1,
                "movl -(%ebp), %ecx;orb %bl, -(%ebp);testl %ecx, %ecx;jne  <RtlCompressBuffer+>;leal -(%eax), %ecx": 1,
                "movl (%ebp), %esi;movl -(%ebp), %edi;movl (%ebp), %eax;movl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movb %al, (%edx);movb %ah, (%edx);jmp  <RtlCompressBuffer+>;movw %ax, (%edx);xorl %eax, %eax": 1,
                "subl %edx, %esi;movl %esi, (%eax);movzwl %si, %eax;subw $, %ax;andl $, %eax": 1,
                "movb %ah, (%edx);jmp  <RtlCompressBuffer+>;movw %ax, (%edx);movb -(%ebp), %al;negb %al": 1,
                "addb %al, (%eax);addb (%eax), %cl;addb %al, (%eax);addb (%eax,%eax), %al;addb %al, (%edx)": 1,
                "addb (%eax,%eax), %al;addb %al, (%edx);addb (%eax), %al;addb %al, (%edx);addl %eax, (%eax)": 1,
                "leal (%edx,%ecx,), %edi;leal (%edx,%ecx,), %ecx;movl %ecx, -(%ebp);movl (%ecx), %ecx;movl %edi, -(%ebp)": 1,
                "cmpb (%ecx,%eax), %bl;jne  <RtlCompressBuffer+>;incl (%ebp);movl (%ebp), %ebx;incl %eax": 2,
                "cmpl %esi, %ecx;jae  <RtlCompressBuffer+>;movb (%esi), %al;cmpb %al, (%ecx);jne  <RtlCompressBuffer+>": 1,
                "movb (%esi), %al;cmpb %al, (%ecx);jne  <RtlCompressBuffer+>;pushl $;popl %eax": 1,
                "popl %eax;cmpl %eax, (%edx);movl %eax, (%ebp);jbe  <RtlCompressBuffer+>;leal (%esi), %eax": 1,
                "movl -(%ebp), %eax;movl %edi, (%eax);movl -(%ebp), %eax;movl %esi, (%eax);movl (%ebp), %eax": 1,
                "jmp  <RtlCompressBuffer+>;movl -(%ebp), %ecx;movl %edi, (%ecx);movl -(%ebp), %ecx;movl %esi, (%ecx)": 1,
                "movl %edi, (%ecx);movl -(%ebp), %ecx;movl %esi, (%ecx);movl -(%ebp), %ecx;movl %ecx, (%edx)": 1,
                "addl %esi, %ecx;cmpw $, (%ebp);movb $, %bl;movl %ecx, (%ebp);jne  <RtlCompressBuffer+>": 1,
                "movb $, %bl;movl %ecx, (%ebp);jne  <RtlCompressBuffer+>;movl $, (%ebp);jmp  <RtlCompressBuffer+>": 1,
                "calll - <_CIsqrt+>;retl $;xorl %ebx, %ebx;movl %ebx, -(%ebp);calll *": 1,
                "movl $, -(%ebp);movl , %eax;movl %eax, -(%ebp);cmpl -(%ebp), %eax;je  <RtlCompressBuffer+>": 1,
                "cmpl %edx, %eax;jne  <RtlCompressBuffer+>;movl -(%ebp), %eax;jmp - <RtlCompressBuffer+>;movl %edx, %eax": 1,
                "movb $, -(%ebp);movl (%esi), %ebx;movl (%esi), %eax;movl , %edi;xorl %ecx, %ecx": 1,
                "xorl %ebx, %ebx;pushl %ebx;pushl %edi;pushl %ebx;pushl %eax": 1,
                "movl %edx, -(%ebp);movl (%esi), %eax;pushl %ebx;pushl %edi;pushl %ebx": 1,
                "movzbl (%esi), %eax;movl %eax, -(%ebp);movb -(%ebp), %cl;calll *;andl %ebx, -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <_alldiv>;movl %eax, %edi;movl %edx, -(%ebp)": 1,
                "popl %ecx;leal -(%ebp), %esi;movl -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);orl $-, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExRaiseStatus>;orl $-, -(%ebp);movl $, %ebx;addl $, -(%ebp)": 1,
                "pushl ;calll - <MmLockPagableSectionByHandle>;movl %edi, -(%ebp);pushl %esi;pushl (%ebp)": 2,
                "cmpl %ebx, ;je  <RtlCompressBuffer+>;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;calll - <ExSystemTimeToLocalTime>;leal -(%ebp), %eax": 1,
                "movl (%ebp), %eax;movzbl (%eax), %eax;pushl %eax;calll - <KeSetKernelStackSwapEnable>;pushl $": 1,
                "movl %eax, (%edi);movl %fs:, %eax;movl %eax, %ecx;movl %eax, (%edi);calll - <ObfReferenceObject>": 1,
                "calll - <ObfReferenceObject>;pushl %edi;leal (%esi), %eax;pushl %eax;calll - <KeInsertQueue>": 1,
                "movl (%esi), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax;pushl %edi;je  <RtlCompressBuffer+>": 1,
                "xaddl %eax, (%ecx);movl %fs:, %eax;pushl %esi;pushl $;movl %eax, %edi": 1,
                "movl %eax, %edi;calll - <RtlCompressBuffer+>;testl %eax, %eax;jne  <RtlCompressBuffer+>;pushl %esi": 1,
                "pushl %ebx;calll - <RtlCompressBuffer+>;testl %eax, %eax;jne  <RtlCompressBuffer+>;movl %edi, %ecx": 1,
                "pushl $;calll - <KeSetKernelStackSwapEnable>;andl $-, (%edi);pushl $;calll - <PsTerminateSystemThread>": 1,
                "calll - <KeSetKernelStackSwapEnable>;andl $-, (%edi);pushl $;calll - <PsTerminateSystemThread>;popl %edi": 1,
                "incl %ecx;incl %edx;testb %al, %al;je  <RtlCompressBuffer+>;jmp - <RtlCompressBuffer+>": 1,
                "testb %dl, %dl;jne - <RtlCompressBuffer+>;subl %ecx, %eax;movl %eax, -(%ebp);cmpl %edi, -(%ebp)": 1,
                "nop;nop;movl -(%ebp), %esp;movl , %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;orl $-, -(%ebp);movl $, -(%ebp);pushl %esi": 1,
                "addl $, %esp;orl $-, -(%ebp);pushl ;calll - <MmLockPagableSectionByHandle>;movl , %eax": 1,
                "incl %eax;incl %eax;shrl %eax;movw %ax, -(%ebp);movw %ax, -(%ebp)": 2,
                "nop;movl -(%ebp), %esp;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl %eax;popal;jb  <RtlCompressBuffer+>;insl %dx, %es:(%edi);je  <RtlCompressBuffer+>": 1,
                "xorl %esi, %esi;cmpl $, %ebx;movb %al, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %edx, %esi;movl %edi, -(%ebp);jmp  <RtlCompressBuffer+>;leal (%edi), %eax;movl (%eax), %ecx": 1,
                "movl (%ebp), %eax;popl %esi;movl %ecx, (%eax);popl %ebx;leave": 1,
                "cmpl $, (%eax);jl  <PAGEVRFY+>;movb $, %al;jmp  <PAGEVRFY+>;xorb %al, %al": 1,
                "cmpw $, (%esi);je  <PAGEVRFY+>;pushl %ebx;pushl %ebx;pushl %esi": 1,
                "pushl %esi;pushl $;pushl $;calll - <KeBugCheckEx>;leal (%ebp), %edx": 1,
                "leal (%ebp), %edx;movl %esi, %ecx;calll  <PAGEVRFY+>;cmpb %bl, (%ebp);jne  <PAGEVRFY+>": 1,
                "pushl %ecx;pushl %edx;pushl $;jmp  <PAGEVRFY+>;pushl %edi": 1,
                "movl %esp, %ecx;movl %ecx, -(%ebp);calll  <PAGEVRFY+>;pushl -(%ebp);leal -(%ebp), %edx": 1,
                "movl %ecx, -(%ebp);calll  <PAGEVRFY+>;pushl -(%ebp);leal -(%ebp), %edx;movl %edi, %ecx": 1,
                "movl %eax, -(%ebp);calll  <PAGEVRFY+>;movl -(%ebp), %ecx;calll  <PAGEVRFY+>;pushl -(%ebp)": 1,
                "calll - <KeBugCheckEx>;pushl (%ebp);pushl (%ebp);pushl %eax;calll - <IoInitializeTimer>": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);jne  <PAGEVRFY+>;cmpb %al, (%edi);je  <PAGEVRFY+>": 1,
                "pushl (%ebx);pushl %edi;pushl (%ebp);calll *(%ebx);pushl (%esi)": 1,
                "pushl $;popl %ecx;movl %ebx, %esi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx": 1,
                "cmpb $, (%ecx);je  <PAGEVRFY+>;testb $, (%ebx);je  <PAGEVRFY+>;movl (%ebx), %ecx": 1,
                "movl (%ebp), %eax;movl $, (%ebx);movl %eax, (%ebx);movl (%ebp), %eax;popl %edi": 1,
                "cmpl $, ;jb  <PAGEVRFY+>;movl (%ebp), %edx;movl (%ebp), %ecx;leal (%ebp), %eax": 1,
                "jmp  <PAGEVRFY+>;popl %ebp;retl $;nop;nop": 1,
                "je  <PAGEVRFY+>;pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "movl -(%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, %eax;jne  <PAGEVRFY+>;testb $, ": 1,
                "leal (,%esi,), %esi;movl %esi, -(%ebp);cmpb $, (%ebp);je  <PAGEVRFY+>;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %esi;movl (%ebp), %ebx;jmp  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;movzwl %si, %ecx;movl %ecx, %edx;shrl $, %ecx;rep  stosl %eax, %es:(%edi)": 1,
                "ja  <PAGEVRFY+>;pushl $;pushl $;pushl %ecx;pushl $": 2,
                "movl %ebx, %ecx;ja  <PAGEVRFY+>;calll - <IofCompleteRequest+>;popl %esi;popl %edi": 1,
                "leave;retl;leal -(%ebp), %eax;pushl %eax;calll  <PAGEVRFY+>": 1,
                "retl;leal -(%ebp), %eax;pushl %eax;calll  <PAGEVRFY+>;movb (%ebx), %al": 1,
                "movl %edi, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp);pushl $;popl %ecx": 1,
                "jmp - <PAGEVRFY+>;pushl $;pushl $;pushl $;pushl %ebx": 1,
                "pushl $;pushl $;pushl %ebx;pushl $;calll - <KeBugCheckEx>": 1,
                "pushl (%edi);calll - <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>;movl (%edi), %ecx": 1,
                "orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;movl $, -(%ebp)": 1,
                "xorl %eax, %eax;incl %eax;retl;shrl $, %eax;notl %eax": 1,
                "movl , %ecx;leal (%esi), %edx;shrl $, %edi;leal (%edx,%edi,), %eax;movl %eax, (%ebp)": 1,
                "cmpl $, (%ebp);jne  <PAGEVRFY+>;movl (%eax), %ebx;andl $, %ebx;cmpl $, %ebx": 1,
                "jne  <PAGEVRFY+>;cmpb $, %al;jbe  <PAGEVRFY+>;pushl $;pushl (%ebp)": 2,
                "jbe  <PAGEVRFY+>;pushl $;pushl (%ebp);movzbl %al, %eax;pushl %eax": 4,
                "pushl (%ebp);movzbl %al, %eax;pushl %eax;pushl $;jmp  <PAGEVRFY+>": 6,
                "pushl $;jmp  <PAGEVRFY+>;cmpb %bl, %al;jbe  <PAGEVRFY+>;movsbl (%ebp), %ecx": 2,
                "testb $, (%esi);jne  <PAGEVRFY+>;pushl %ebx;pushl %esi;calll - <PAGEVRFY+>": 1,
                "movw (%ecx), %ax;testb $, %al;jne  <PAGEVRFY+>;pushl $;movswl %ax, %eax": 1,
                "jmp  <PAGEVRFY+>;testb $, %al;je  <PAGEVRFY+>;pushl $;movswl %ax, %eax": 1,
                "testb $, %al;je  <PAGEVRFY+>;pushl $;movswl %ax, %eax;pushl %eax": 1,
                "movswl %ax, %eax;pushl %eax;pushl %ecx;pushl $;pushl $": 1,
                "movzbl %al, %eax;pushl %ecx;pushl %eax;pushl $;jmp  <PAGEVRFY+>": 1,
                "movl %esp, %ebp;calll *;cmpb $, %al;jbe  <PAGEVRFY+>;pushl (%ebp)": 2,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %ebx;jmp  <PAGEVRFY+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTagPriority>;movl %eax, %edi;movl %edi, -(%ebp);calll *": 1,
                "sarl $, %ecx;testl %esi, %esi;jbe  <PAGEVRFY+>;movl -(%ebp), %eax;leal (%eax,%ecx), %eax": 1,
                "xorl %esi, %esi;incl %esi;movb %al, %cl;calll *;movl %esi, %eax": 1,
                "xorl %esi, %esi;jmp - <PAGEVRFY+>;int;int;int": 1,
                "movl %edx, (%ecx);movl (%ebp), %edx;movl %edx, (%ecx);movl (%ebp), %edx;movl %edx, (%ecx)": 2,
                "pushl %edi;movl (%eax), %edi;cmpl (%ebp), %edi;je  <PAGEVRFY+>;movl (%ebp), %edx": 1,
                "movl %edx, %ecx;andw %bx, %cx;cmpb %bl, %cl;jne  <PAGEVRFY+>;movl (%ebp), %ecx": 1,
                "movl %esp, %ebp;calll *;movl (%ebp), %edx;decl (%edx);movb %al, %cl": 1,
                "addl $, %esi;jmp  <PAGEVRFY+>;testw $, %si;je  <PAGEVRFY+>;subl $, %edi": 1,
                "je  <PAGEVRFY+>;subl $, %edi;leal -(%esi,%edi), %esi;movl (%esi), %ebx;testb $, %bl": 1,
                "cmpl $, (%ebx);jne  <PAGEVRFY+>;movl (%esi), %eax;movl , %esi;movl %eax, (%ebp)": 1,
                "calll *%esi;pushl %edi;pushl (%ebp);movb %al, (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);movb %al, (%ebp);pushl (%ebp);pushl %ebx;calll - <PAGEVRFY+>": 1,
                "movzbl %al, %eax;pushl %eax;pushl $;pushl $;calll - <KeBugCheckEx>": 10,
                "testb $, (%eax);jne  <PAGEVRFY+>;movl %fs:, %eax;cmpl $, (%eax);jne  <PAGEVRFY+>": 5,
                "cmpl $, ;jne  <PAGEVRFY+>;movl , %eax;incl ;pushl %esi": 1,
                "movl %eax, %esi;shrl $, %esi;testb $, %al;je  <PAGEVRFY+>;pushl %esi": 1,
                "je  <PAGEVRFY+>;pushl %esi;calll  <PAGEVRFY+>;cmpl $, %eax;jne  <PAGEVRFY+>": 2,
                "jae  <PAGEVRFY+>;pushl $;pushl %esi;movzbl %al, %eax;pushl %eax": 2,
                "pushl $;pushl $;calll - <KeBugCheckEx>;incl ;movl %esi, %ecx": 1,
                "cmpl $, (%eax);jne  <PAGEVRFY+>;movl %fs:, %eax;pushl %esi;pushl (%eax)": 1,
                "calll  <PAGEVRFY+>;movl %esi, %ecx;popl %esi;popl %ebp;jmpl *": 1,
                "pushl (%ebp);calll - <KeBugCheckEx+>;popl %ebp;jmp - <KeInitializeTimerEx>;nop": 1,
                "testl %edi, %edi;je  <PAGEVRFY+>;movl (%edi), %eax;orl (%edi), %eax;je  <PAGEVRFY+>": 1,
                "pushl $;pushl %esi;calll  <PAGEVRFY+>;popl %edi;popl %esi": 1,
                "calll - <KeInitializeMutex>;pushl $;pushl (%ebp);pushl $;pushl (%ebp)": 1,
                "pushl $;pushl (%ebp);calll  <PAGEVRFY+>;popl %ebp;jmp - <KeReleaseMutant>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);calll - <KeInitializeSpinLock>;pushl $": 1,
                "movl (%ebp), %ecx;movl %eax, %esi;movl (%ebp), %eax;movl %ecx, (%eax);je  <PAGEVRFY+>": 1,
                "movl %eax, %esi;movl (%ebp), %eax;movl %ecx, (%eax);je  <PAGEVRFY+>;movl %fs:, %eax": 1,
                "calll - <KeInitializeSpinLock>;orl $-, (%esi);xorl %edi, %edi;cmpl $, (%ebp);movl %edi, (%esi)": 1,
                "movl %edi, (%esi);movl %edi, (%esi);calll *;movb %al, %cl;movl %edi, (%esi)": 1,
                "movl %edi, (%esi);calll *;popl %edi;popl %esi;popl %ebp": 1,
                "cmpl (%edx), %edi;jb  <PAGEVRFY+>;movl (%edx), %edx;cmpl %esi, %edx;jne - <PAGEVRFY+>": 1,
                "pushl %edi;movl , %edi;xorl %esi, %esi;movl $, %ebx;jmp  <PAGEVRFY+>": 1,
                "movl , %edi;xorl %esi, %esi;movl $, %ebx;jmp  <PAGEVRFY+>;movl (%ebp), %eax": 1,
                "je  <PAGEVRFY+>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);cmpl %edx, (%esi)": 1,
                "xorl %edi, %edi;cmpl %edi, (%esi);je  <PAGEVRFY+>;movl (%esi), %eax;addl (%esi), %eax": 1,
                "pushl $;pushl (%ebp);calll - <ExFreePoolWithTag>;calll *%ebx;andl $, (%esi)": 1,
                "popl %ebp;retl $;leal (%esi), %eax;movl %eax, ;movl (%esi), %eax": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl , %esi;decl %esi": 1,
                "movzbl %ds:-, %eax;movb %al, (%esi);leal -(%ebp), %eax;pushl %eax;calll - <KeQueryTickCount>": 1,
                "jne  <PAGEVRFY+>;xorl %eax, %eax;leave;retl;pushl %esi": 1,
                "leave;retl;pushl %esi;xorl %esi, %esi;incl %esi": 1,
                "pushl %esi;xorl %esi, %esi;incl %esi;cmpl $, ;jne  <PAGEVRFY+>": 1,
                "calll - <KeQueryTickCount>;movl -(%ebp), %eax;testb $, %al;jne  <PAGEVRFY+>;incl ": 1,
                "cmpl $-, ;je  <PAGEVRFY+>;orl $-, ;orl $-, ;calll - <PAGEVRFY+>": 1,
                "pushl %edi;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl (%ebp), %esi": 1,
                "xaddl %eax, (%ecx);movl (%ebp), %esi;cmpl $, %esi;movl $, %edi;jbe  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;andl %edi, %eax;addl $, (%ebp);leal (%eax), %edi;jmp  <PAGEVRFY+>": 1,
                "incl (%esi);movl (%esi), %eax;cmpl (%esi), %eax;jbe  <PAGEVRFY+>;movl %eax, (%esi)": 2,
                "cmpl $, (%ebp);movl (%ebp), %eax;movl %eax, (%edi);jne  <PAGEVRFY+>;movl $, %esi": 1,
                "movl %edx, ;movb %al, %cl;calll *%esi;movl (%ebp), %eax;popl %edi": 1,
                "calll - <PAGEVRFY+>;cmpl $, %eax;jle  <PAGEVRFY+>;pushl (%ebp);pushl %edi": 1,
                "testb $, (%ebp);jne  <PAGEVRFY+>;pushl %esi;pushl (%ebp);leal (%edi), %esi": 1,
                "pushl %eax;pushl $;pushl $;calll - <KeBugCheckEx>;cmpl $, ": 2,
                "pushl (%ebp);pushl (%ebp);calll *%eax;movl %fs:, %eax;jmp  <PAGEVRFY+>": 1,
                "pushl (%ebp);calll *%eax;movl %fs:, %eax;jmp  <PAGEVRFY+>;movl (%ebp), %ecx": 1,
                "jae  <PAGEVRFY+>;movzbl %bl, %ecx;pushl %ecx;pushl %esi;movzbl %al, %eax": 1,
                "retl;movl %fs:, %eax;pushl (%ebp);pushl %eax;pushl $": 1,
                "calll  <PAGEVRFY+>;popl %edi;movl %esi, %ecx;popl %esi;movb %bl, %dl": 1,
                "je  <PAGEVRFY+>;calll *%eax;jmp  <PAGEVRFY+>;calll *;popl %ebx": 1,
                "jmpl *%eax;jmpl *;int;int;int": 2,
                "calll *;movl (%ebp), %ebx;movl (%ebp), %esi;pushl %ebx;movb %al, (%esi)": 1,
                "movl (%ebp), %esi;pushl %ebx;movb %al, (%esi);calll - <PAGEVRFY+>;incl ": 1,
                "calll *%eax;jmp  <PAGEVRFY+>;movb %bl, %cl;calll *;movb %al, (%esi)": 1,
                "testb $, ;je  <PAGEVRFY+>;cmpb $, %bl;jae  <PAGEVRFY+>;cmpb $, (%esi)": 1,
                "cmpb $, %al;jbe  <PAGEVRFY+>;movsbl (%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "movl (%edi), %ecx;movl %esi, %eax;andl $, %eax;leal (%eax,%ecx), %eax;leal (%edi), %ebx": 1,
                "leal (%eax,%ecx), %eax;leal (%edi), %ebx;shrl $, %eax;leal (%ebx,%eax,), %eax;movl %ebx, (%ebp)": 1,
                "leal (%edi), %ebx;shrl $, %eax;leal (%ebx,%eax,), %eax;movl %ebx, (%ebp);movl %eax, -(%ebp)": 1,
                "je  <PAGEVRFY+>;andl $, (%ebp);cmpl $, (%edx);jbe  <PAGEVRFY+>;leal (%edx), %eax": 1,
                "jbe  <PAGEVRFY+>;leal (%edx), %eax;movl (%eax), %ecx;cmpl %ecx, (%ebx);jb  <PAGEVRFY+>": 1,
                "movl (%eax), %eax;ja  <PAGEVRFY+>;testb $, (%eax);je  <PAGEVRFY+>;leal (%eax), %ecx": 1,
                "cmpl (%eax), %esi;jb  <PAGEVRFY+>;cmpl (%eax), %esi;jbe - <PAGEVRFY+>;movl (%eax), %eax": 1,
                "jb  <PAGEVRFY+>;cmpl (%eax), %esi;jbe - <PAGEVRFY+>;movl (%eax), %eax;cmpl %ecx, %eax": 1,
                "testb $, (%eax);je  <PAGEVRFY+>;cmpb $, (%ebp);jne  <PAGEVRFY+>;movl (%eax), %edx": 1,
                "jne  <PAGEVRFY+>;movl (%eax), %edx;andl $, %edx;cmpl $, %edx;jne  <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;movl (%eax), %edx;andl $, %edx;cmpl $, %edx;je  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;cmpl $, (%eax);jne  <PAGEVRFY+>;addl $, %eax;decl %esi": 1,
                "pushl %edi;pushl (%ebp);pushl %ebx;calll - <MmMapIoSpace>;popl %edi": 1,
                "je  <PAGEVRFY+>;orb $-, (%ebp);pushl -(%ebp);incl ;pushl $": 1,
                "testb $, (%eax);je  <PAGEVRFY+>;orb $-, (%ebp);pushl %esi;pushl %edi": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <PAGEVRFY+>": 1,
                "andl $, %esi;movl -(%esi), %eax;shrl $, %eax;xorl %esi, %esi;cmpl , %eax": 1,
                "ja  <PAGEVRFY+>;movzwl %cx, %ecx;cmpl (%eax), %ecx;ja  <PAGEVRFY+>;cmpl $, (%eax)": 1,
                "leal (%ebx), %edi;movl %esi, -(%ebp);calll *;testb %al, %al;jne  <PAGEVRFY+>": 1,
                "movb $, %cl;movl $, (%edi);calll *;movl (%edi), %esi;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl (%esi), %edx;xorl %ecx, %ecx;cmpl %edx, %eax;movl %eax, (%esi)": 1,
                "cmpl $, (%ebp);jne  <PAGEVRFY+>;calll - <MmTrimAllSystemPagableMemory+>;movl $, %eax;movl $, %ecx": 2,
                "movl (%edi), %eax;testb $, (%eax);je  <PAGEVRFY+>;testb $, (%eax);jne  <PAGEVRFY+>": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);jmp  <PAGEVRFY+>;movl , %eax": 1,
                "jne  <PAGEVRFY+>;movl , %eax;andl $, (%eax);movl , %ecx;addl $, %ecx": 1,
                "cmpl %eax, %ecx;je  <PAGEVRFY+>;leal (%esi), %edx;cmpl %edx, %ecx;je  <PAGEVRFY+>": 1,
                "xaddl %eax, (%ecx);jmp  <PAGEVRFY+>;movl (%ecx), %eax;movl (%ecx), %ecx;movl , %ebx": 1,
                "jmp  <PAGEVRFY+>;movl $, %edx;pushl %esi;movl (%ebp), %esi;andl $, -(%ebp)": 1,
                "pushl %esi;movl (%ebp), %esi;andl $, -(%ebp);andl $, -(%ebp);andl $, -(%ebp)": 1,
                "popl %ecx;pushl (%ebp);xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "nop;nop;pushl $;calll  <PAGEVRFY+>;retl $": 1,
                "movl %edi, (%eax);movl , %eax;movl %edi, (%eax);movl , %eax;movl %edi, (%eax)": 1,
                "movl %edi, (%eax);movl , %eax;movl , %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "movl $, %ecx;divl %ecx;movl , %ecx;pushl %ecx;movl $, %edx": 1,
                "addl $, %ecx;pushl %eax;pushl %edi;pushl %edx;pushl %ecx": 1,
                "pushl %edx;pushl %ecx;calll - <KeSetTimerEx>;popl %esi;popl %edi": 1,
                "calll - <KeSetTimerEx>;popl %esi;popl %edi;popl %ebx;retl": 1,
                "nop;movl %edi, %edi;rdtsc;retl;int": 1,
                "retl;xorl %eax, %eax;leave;retl;nop": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);testb $, (%ebp);movl (%ebp), %ecx;je  <PAGEVRFY+>": 1,
                "movzbl %dl, %edi;incl %eax;pushl %ebx;movl %eax, %ecx;shll $, %ecx": 1,
                "cmpl $, %eax;jb - <PAGEVRFY+>;movl (%ebp), %eax;movl (%ebp), %ecx;popl %ebx": 1,
                "movl (%ebp), %ecx;popl %ebx;testb $, %al;je  <PAGEVRFY+>;testl %ecx, %ecx": 1,
                "je  <PAGEVRFY+>;testb $, %al;je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>": 1,
                "je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>;popl %ecx;pushl $": 1,
                "cmpl $, %eax;jg  <PAGEVRFY+>;je  <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>": 1,
                "jg  <PAGEVRFY+>;je  <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>;cmpl $, %eax": 1,
                "jmp  <PAGEVRFY+>;calll - <DbgBreakPoint>;jmp - <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>": 1,
                "movl %edi, (%esi);jmp - <PAGEVRFY+>;pushl %edi;pushl %edi;pushl %edi": 1,
                "jmp - <PAGEVRFY+>;pushl %edi;pushl %edi;pushl %edi;pushl (%ebp)": 1,
                "subb $, %al;subb %dl, (%edi);popal;jb  <PAGEVRFY+>;andb %ch, (%edi)": 1,
                "subb %dl, (%edi);popal;jb  <PAGEVRFY+>;andb %ch, (%edi);insb %dx, %es:(%edi)": 1,
                "jbe  <PAGEVRFY+>;andb %ah, (%ecx);jae  <PAGEVRFY+>;jb  <PAGEVRFY+>;aas": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, (%esi);je  <PAGEVRFY+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl $;calll - <MmAllocateContiguousMemory>;movl (%esi), %ecx;movl %eax, (%ecx,%edi,)": 1,
                "pushl %edi;pushl %ebx;calll - <RtlSetBits>;leal (%esi), %eax;movl %eax, (%ebp)": 1,
                "pushl %ebx;calll - <RtlSetBits>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "jmp  <PAGEVRFY+>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);incl %edi;cmpl $, %edi;jb - <PAGEVRFY+>": 1,
                "pushl (%ebp);calll *%esi;movl %eax, %edi;movl %edx, -(%ebp);calll *": 1,
                "movl %eax, %edi;movl %edx, -(%ebp);calll *;movb %al, %bl;leal -(%ebp), %eax": 1,
                "calll *;movb %al, %bl;leal -(%ebp), %eax;pushl %eax;calll - <KeQuerySystemTime>": 1,
                "jmp  <PAGEVRFY+>;jmp  <PAGEVRFY+>;pause;movl , %esi;movl (%esi), %eax": 1,
                "movl , %eax;cmpl $-, %eax;jne  <PAGEVRFY+>;movzbl , %eax;movl %eax, ": 18,
                "outsb (%esi), %dx;je  <PAGEVRFY+>;jb  <PAGEVRFY+>;pushl $;arpl %si, %gs:(%edx)": 1,
                "arpl %si, %gs:(%edx);popal;jae  <PAGEVRFY+>;subl $, %eax;xorl %edi, (%edx)": 1,
                "xorl %eax, %eax;jmp  <PAGEVRFY+>;pushl %esi;pushl %edi;movl $, %edi": 1,
                "movl %edi, %ecx;calll *;movl , %eax;cmpl $-, %eax;jne  <PAGEVRFY+>": 1,
                "jmp - <PAGEVRFY+>;nop;subb (%eax), %ah;subb (%eax), %ah;subb (%eax), %ah": 1,
                "jb  <PAGEVRFY+>;jbe  <PAGEVRFY+>;jb  <PAGEVRFY+>;pushl $;je  <PAGEVRFY+>": 1,
                "jb  <PAGEVRFY+>;pushl $;je  <PAGEVRFY+>;insl %dx, %es:(%edi);jo  <PAGEVRFY+>": 1,
                "cmpl $-, %eax;jne  <PAGEVRFY+>;movzbl , %eax;movl %eax, ;cmpl $, ": 1,
                "popal;jo  <PAGEVRFY+>;jb  <PAGEVRFY+>;andb %ah, (%ecx);outsb %gs:(%esi), %dx": 1,
                "andb %ah, (%ecx);outsb %gs:(%esi), %dx;daa;je  <PAGEVRFY+>;jae  <PAGEVRFY+>": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %edi;pushl $;calll - <VfFailDriver+>": 1,
                "calll - <VfFailDriver+>;movl (%ebp), %edi;pushl $;pushl %edi;calll - <PAGEVRFY+>": 1,
                "movl %eax, ;cmpl %ebx, (%esi);je  <PAGEVRFY+>;cmpl %ebx, %eax;je  <PAGEVRFY+>": 2,
                "insb %dx, %es:(%edi);andb %ah, (%ecx);insb %dx, %es:(%edi);andb %ah, (%ecx);popal": 1,
                "andb %ah, %gs:(%esi);andb %ch, %fs:(%eax);andl $, %eax;je  <PAGEVRFY+>;addb %al, (%eax)": 2,
                "andl $, %eax;je  <PAGEVRFY+>;addb %al, (%eax);orb (%eax), %al;addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);andb %ch, (%ebp);jo  <PAGEVRFY+>;jb  <PAGEVRFY+>;imull $, (%bp,%di), %esi": 1,
                "andb %ch, (%edx);andb %ch, (%edx);andb %cl, (%eax);decl %esp;andb %dl, (%esi)": 5,
                "addl $, %esp;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl (%ebp), %eax": 1,
                "pushl %eax;pushl %esi;calll - <ExFreePoolWithTag>;xorl %eax, %eax;jmp  <PAGEVRFY+>": 1,
                "movl -(%ebp), %ecx;movw %ax, (%esi);movl (%ebp), %eax;leal (%edx,%ebx), %edi;movl %ecx, (%esi)": 1,
                "pushl %eax;movl %ecx, (%esi);movl -(%ebp), %ecx;pushl %edi;pushl -(%ebp)": 1,
                "pushl %edx;movl %ecx, (%esi);calll - <PAGEVRFY+>;movl (%ebp), %eax;xorl %ecx, %ecx": 1,
                "leal (%ebx), %ecx;calll - <ExfInterlockedInsertHeadList>;pushl %ebx;calll - <VfFailDriver+>;movl %edi, %eax": 1,
                "calll - <VfFailDriver+>;movl %edi, %eax;popl %edi;popl %ebx;popl %esi": 1,
                "outsb %fs:(%esi), %dx;daa;je  <PAGEVRFY+>;je  <PAGEVRFY+>;popal": 1,
                "calll - <VfFailDriver+>;testl %eax, %eax;movl %eax, (%edi);je  <PAGEVRFY+>;movl (%ebp), %eax": 1,
                "jne  <PAGEVRFY+>;pushl %edi;pushl (%ebx);calll - <ExFreePoolWithTag>;decl (%ebp)": 1,
                "leal (%esi), %eax;pushl %eax;movl $, (%esi);calll - <KeInitializeSpinLock>;movl (%ebp), %eax": 1,
                "leal (%eax), %ecx;pushl %ecx;leal (%esi), %edx;leal (%eax), %ecx;calll - <ExfInterlockedInsertHeadList>": 1,
                "imull $, (%ebp), %ebp;andb %ah, ;insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx)": 1,
                "movl %eax, ;pushl $;leal -(%edi), %eax;pushl %esi;pushl %eax": 1,
                "pushl $;pushl %esi;leal -(%edi), %eax;pushl %eax;calll - <RtlCompareMemory>": 1,
                "andb %dl, (%esi);cmpb (%eax), %ah;addb %al, (%eax);addb %al, (%eax);incl %ecx": 2,
                "cmpb (%eax), %ah;addb %al, (%eax);addb %al, (%eax);incl %ecx;jb  <PAGEVRFY+>": 2,
                "andb %ah, (%ecx);insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);imull $, (%edi), %ebp": 3,
                "outsl (%esi), %dx;jb  <PAGEVRFY+>;pushl $;popal;jb  <PAGEVRFY+>": 1,
                "popal;imull $, %fs:(%esi), %ebp;outsl (%esi), %dx;jb  <PAGEVRFY+>;andb %ah, (%ecx)": 1,
                "calll *;xorl %ebx, %ebx;cmpb $, %al;jbe  <PAGEVRFY+>;cmpl %ebx, ": 1,
                "cmpb $, %al;jbe  <PAGEVRFY+>;cmpl %ebx, ;je  <PAGEVRFY+>;movl , %eax": 1,
                "je  <PAGEVRFY+>;pushl $;calll - <VfFailDriver+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "calll - <VfFailDriver+>;movl (%esi), %eax;movl %eax, -(%ebp);leal (%edi), %eax;movl %eax, (%ebp)": 1,
                "calll - <VfFailDriver+>;cmpl %ebx, ;popl %edi;je  <PAGEVRFY+>;cmpl %ebx, (%ebp)": 1,
                "jne  <PAGEVRFY+>;movl $, (%ebp);movl (%ebp), %eax;popl %esi;popl %ebx": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;calll - <PAGEVRFY+>": 2,
                "pushl %eax;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;xorl %eax, %eax;testl %ebx, %ebx": 1,
                "movl %eax, %ebx;xorl %eax, %eax;testl %ebx, %ebx;je  <PAGEVRFY+>;pushl %edi": 2,
                "je  <PAGEVRFY+>;pushl %edi;pushl $;popl %ecx;movl %ebx, %edi": 1,
                "popl %ecx;leal (%ebx), %edi;movl %eax, %esi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx": 1,
                "jne  <PAGEVRFY+>;movb $, (%ebx);leal (%ebx), %eax;pushl %eax;calll - <KeInitializeSpinLock>": 1,
                "cmpb $, (%eax);je  <PAGEVRFY+>;cmpb $, (%eax);je  <PAGEVRFY+>;cmpl $, ": 1,
                "cmpl $, ;je  <PAGEVRFY+>;pushl %ebx;calll - <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "movb $, (%ebx);movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%ebx);movl $, (%eax)": 1,
                "movl %ecx, (%eax);movl %edi, %eax;jmp  <PAGEVRFY+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %edi;pushl $;pushl (%ebp);calll - <PAGEVRFY+>;pushl (%ebp)": 7,
                "jne  <PAGEVRFY+>;xorl %eax, %eax;jmp  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "testl %esi, %esi;je  <PAGEVRFY+>;testl %edi, %edi;je  <PAGEVRFY+>;pushl %edi": 1,
                "movl $, (%esp);calll - <DbgPrint>;movl $, (%esp);pushl $;pushl %ebx": 1,
                "pushl %esi;pushl (%ebp);calll *;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "pushl (%esi);pushl (%ebp);pushl %edi;calll - <PAGEVRFY+>;cmpl %ebx, %eax": 1,
                "calll - <PAGEVRFY+>;cmpl %ebx, %eax;jne  <PAGEVRFY+>;movl (%edi), %eax;pushl %edi": 1,
                "pushl $;calll - <DbgPrint>;popl %ecx;popl %ecx;xorl %eax, %eax": 3,
                "daa;je  <PAGEVRFY+>;imulw $, (%esi), %bp;jne  <PAGEVRFY+>;jb  <PAGEVRFY+>": 1,
                "xorl %ebx, %ebx;pushl (%esi);movl %ebx, (%esi);calll - <MmUnmapLockedPages>;cmpl %ebx, (%esi)": 1,
                "testl %ebx, %ebx;je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>;movl $, (%esp)": 1,
                "jmp  <PAGEVRFY+>;pushl %ebx;pushl %ebx;pushl $;pushl (%edi)": 1,
                "pushl $;calll - <DbgPrint>;popl %ecx;popl %ecx;pushl %ebx": 1,
                "calll - <ExFreePoolWithTag>;xorl %eax, %eax;popl %edi;incl %eax;popl %ebx": 1,
                "insl %dx, %es:(%edi);popal;outsb (%esi), %dx;jae  <PAGEVRFY+>;je  <PAGEVRFY+>": 1,
                "andb %ah, (%ecx);popal;andb %ch, (%edi,%ebp,);jae  <PAGEVRFY+>;addb %al, (%eax)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;movl (%ebp), %edx;pushl %ebx;pushl %esi": 1,
                "calll - <PAGEVRFY+>;movl (%esi), %eax;andl $, (%esi);andl $, (%esi);movl %eax, (%esi)": 1,
                "movl (%esi), %eax;andl $, (%esi);andl $, (%esi);movl %eax, (%esi);movl %edi, (%ebp)": 1,
                "addl $, %esi;decl (%ebp);jne - <PAGEVRFY+>;xorl %eax, %eax;incl %eax": 1,
                "subl $, %eax;leal (%eax), %esi;cmpl %esi, %edi;jne - <PAGEVRFY+>;popl %ebx": 1,
                "pushl $;calll - <VfFailDriver+>;movzbl (%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "calll - <VfFailDriver+>;movzbl (%ebp), %eax;pushl %eax;pushl (%ebp);pushl %esi": 1,
                "calll - <PAGEVRFY+>;movl %ebx, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "jne  <PAGEVRFY+>;movl , %eax;cmpl $-, %eax;jne  <PAGEVRFY+>;movzbl , %eax": 3,
                "cmpb $, (%eax);pushl %edi;movl (%ebp), %edi;jne  <PAGEVRFY+>;movl %edi, %ecx": 1,
                "subl %ecx, %edx;subl %eax, %edx;cmpl (%esi), %edx;jb  <PAGEVRFY+>;movl , %eax": 1,
                "movl %edi, %ecx;subl (%esi), %ecx;subl (%esi), %ecx;cmpl (%esi), %ecx;jb - <PAGEVRFY+>": 1,
                "subl (%esi), %edi;pushl $;cmpl (%esi), %edi;sbbl %eax, %eax;negl %eax": 1,
                "testl %ebx, %ebx;jne - <PAGEVRFY+>;movl (%esi), %ebx;subl (%esi), %ebx;leal (%ebp), %eax": 1,
                "subl (%esi), %ebx;pushl %eax;pushl (%ebp);addl %edi, %ebx;pushl (%ebp)": 1,
                "testl %edi, %edi;je  <PAGEVRFY+>;cmpl $, (%edi);jne  <PAGEVRFY+>;movl (%edi), %eax": 1,
                "subl %ecx, %eax;addl (%ebp), %eax;movl (%ebp), %ecx;decl %ecx;xorl %ecx, %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "cmpl $-, %eax;jne  <PAGEVRFY+>;movzbl , %eax;movl %eax, ;movl (%ebp), %ecx": 1,
                "pushl (%ebp);pushl %esi;pushl $;calll - <DbgPrint>;pushl $": 1,
                "addl $, %esp;addl (%edi), %eax;xorl %ecx, %ecx;shrl $, %eax;cmpl %eax, %ebx": 1,
                "pushl (%ebp);pushl (%esi);pushl (%ebp);calll - <PAGEVRFY+>;jmp - <PAGEVRFY+>": 1,
                "popal;andb %dh, (%eax);subl $, %eax;je  <PAGEVRFY+>;andb %dh, (%edx,%esi,)": 1,
                "jb  <PAGEVRFY+>;andb %ah, ;je  <PAGEVRFY+>;jae  <PAGEVRFY+>;andb %ah, ": 2,
                "movl (%eax), %ebx;subl (%eax), %ebx;pushl %edi;subl (%eax), %ebx;movl (%ebp), %edi": 1,
                "pushl $;calll - <PAGEVRFY+>;movl %edi, (%ebp);cmpb $, (%ebp);jne  <PAGEVRFY+>": 1,
                "calll - <PAGEVRFY+>;testl %eax, %eax;je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <PAGEVRFY+>;cmpl $, (%ebp)": 1,
                "pushl (%ebp);pushl %ebx;pushl (%ebp);calll - <PAGEVRFY+>;testl %eax, %eax": 1,
                "outsb (%esi), %dx;andb %ch, (%edi);insb %dx, %es:(%edi);jns  <PAGEVRFY+>;insb %dx, %es:(%edi)": 1,
                "jae  <PAGEVRFY+>;je  <PAGEVRFY+>;andb %ah, (%ebp);andb %ch, %fs:(%edi);andb %ch, (%ebp)": 1,
                "addb %al, (%esi);jne  <PAGEVRFY+>;pushl $;je  <PAGEVRFY+>;outsl (%esi), %dx": 1,
                "pushl %edi;pushl (%ebp);pushl (%ebp);calll *-(%ebp);movl %eax, %esi": 1,
                "calll *-(%ebp);movl %eax, %esi;testl %esi, %esi;je  <PAGEVRFY+>;testl %ebx, %ebx": 1,
                "calll - <VfFailDriver+>;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "calll - <VfFailDriver+>;testl %eax, %eax;jne  <PAGEVRFY+>;movl , %eax;cmpl $-, %eax": 1,
                "popal;jae  <PAGEVRFY+>;andb %ah, ;insb %dx, %es:(%edi);jne  <PAGEVRFY+>": 1,
                "calll - <VfFailDriver+>;movl $, %eax;jmp  <PAGEVRFY+>;subl %eax, %ecx;addl -(%ebp), %ecx": 1,
                "calll - <ExFreePoolWithTag>;jmp - <PAGEVRFY+>;nop;andb %ah, (%eax);andb %ah, (%eax)": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);andb %dl, %fs:(%edi);imull $, (%eax), %esi": 2,
                "movl (%ecx), %esi;subl $, %esi;leal (%esi), %ecx;cmpl %ecx, %edi;jne - <PAGEVRFY+>": 1,
                "subl $, %esi;leal (%esi), %ecx;cmpl %ecx, %edi;jne - <PAGEVRFY+>;leal (%ebx), %ecx": 1,
                "pushl %ebx;calll - <VfFailDriver+>;pushl (%ebp);pushl (%esi);pushl (%esi)": 1,
                "movl %eax, -(%ebp);calll - <PAGEVRFY+>;movl (%ebp), %ebx;xorl %edi, %edi;cmpl %edi, %eax": 1,
                "pushl %ecx;pushl %edi;movl %edi, (%esi);movl %ecx, (%esi);movl %eax, (%esi)": 1,
                "pushl %eax;movl %esi, (%ebp);movl $, (%ebp);calll - <VfFailDriver+>;jmp  <PAGEVRFY+>": 1,
                "jmp  <PAGEVRFY+>;pushl %edi;pushl -(%ebp);calll - <PAGEVRFY+>;pushl $": 1,
                "calll - <PAGEVRFY+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;pushl (%ebp)": 1,
                "nop;nop;nop;pushl $;pushl %ecx": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %edi;pushl $;movl %ecx, %edi": 1,
                "pushl %edi;pushl $;movl %ecx, %edi;popl %edx;xorl %ecx, %ecx": 1,
                "testb %al, %al;je  <PAGEVRFY+>;pushl %esi;movl %edi, %ecx;calll  <PAGEVRFY+>": 1,
                "orb $, (%esi);orb $-, (%edi);orb $, (%edi);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl $;calll - <RtlCaptureStackBackTrace>;cmpw $, %ax;je  <PAGEVRFY+>": 5,
                "calll  <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 5,
                "je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;pushl %ebx;pushl -(%ebp)": 1,
                "addl $, %esp;jmp  <PAGEVRFY+>;movl %esi, %ecx;calll  <PAGEVRFY+>;testl %eax, %eax": 1,
                "popl %edx;calll  <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;testb $, (%esi)": 1,
                "movl %ebx, (%eax);calll - <PAGEVRFY+>;movl %eax, %esi;cmpl %ebx, %esi;je  <PAGEVRFY+>": 1,
                "cmpl %ebx, %esi;je  <PAGEVRFY+>;cmpb %bl, -(%ebp);movl %ebx, -(%ebp);je  <PAGEVRFY+>": 1,
                "movl $, %ecx;movl %ecx, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;pushl %ecx": 1,
                "calll - <PAGEVRFY+>;cmpb $, -(%ebp);je  <PAGEVRFY+>;pushl -(%ebp);pushl %ebx": 1,
                "jmp  <PAGEVRFY+>;orl $, (%edi);xorl %edx, %edx;incl %edx;movl %edi, %ecx": 1,
                "jne  <PAGEVRFY+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "testl %eax, %eax;je  <PAGEVRFY+>;movl %esi, (%eax);movl (%ebp), %eax;testl %eax, %eax": 1,
                "pushl %ebx;calll - <IoFreeIrp>;movb $, %al;popl %edi;popl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl $, %ecx;calll *": 1,
                "andl $, ;movl $, %ecx;calll *;popl %ebp;retl $": 1,
                "movl (%ebp), %eax;leal (%eax,%edx,), %eax;popl %ebp;retl $;nop": 1,
                "leal (%eax,%edx,), %eax;popl %ebp;retl $;nop;nop": 1,
                "testl %eax, %eax;je  <PAGEVRFY+>;leal (%ecx,%eax,), %edi;subl $, %edi;movl (%edi), %edx": 1,
                "popl %esi;popl %ebx;leave;retl;incl (%ecx)": 1,
                "movl , %eax;pushl (%eax);calll - <PAGEVRFY+>;movl (%eax), %edx;leal (%esi), %ecx": 1,
                "calll - <PAGEVRFY+>;movl (%eax), %edx;leal (%esi), %ecx;movl %eax, (%ecx);movl %edx, (%ecx)": 1,
                "movl (%edx), %ecx;xorl %eax, %eax;testl %ecx, %ecx;jbe  <PAGEVRFY+>;decl %ecx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx)": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %esi, %esi;je  <PAGEVRFY+>;addl %edi, (%eax);pushl -(%ebp);calll - <PAGEVRFY+>": 1,
                "jmp  <PAGEVRFY+>;movl , %eax;decl (%eax);movl , %eax;pushl $": 1,
                "movl , %eax;subl %esi, (%eax);popl %esi;popl %ebp;retl $": 1,
                "je  <PAGEVRFY+>;cmpl $, (%eax);ja  <PAGEVRFY+>;cmpl $, (%eax);ja  <PAGEVRFY+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi": 1,
                "jne - <PAGEVRFY+>;movl -(%ebp), %esi;jmp  <PAGEVRFY+>;leal -(%esi), %eax;movl (%esi), %esi": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <PAGEVRFY+>;movl , %eax;pushl -(%ebp)": 1,
                "pushl %edx;pushl %ecx;pushl %eax;movl %eax, ;movl %ecx, ": 1,
                "int;pushl %esi;jb  <PAGEVRFY+>;imulw $, (%ebp), %sp;popal": 1,
                "leal -(%esi), %ecx;movl (%esi), %esi;leal (%ecx), %eax;movl (%eax), %edi;movl (%eax), %ebx": 1,
                "movl (%eax), %edi;movl (%eax), %ebx;movl %edi, (%ebx);movl %ebx, (%edi);movl (%edx), %edi": 1,
                "leal (%edx), %ebx;movl (%ebx), %ecx;jmp  <PAGEVRFY+>;leal -(%ecx), %eax;movl (%eax), %esi": 1,
                "incl %eax;jmp  <PAGEVRFY+>;xorl %eax, %eax;popl %ebp;retl $": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;je  <PAGEVRFY+>;movl %ecx, (%eax)": 1,
                "je  <PAGEVRFY+>;movl %ecx, (%eax);pushl $;popl %ecx;leal (%edx), %esi": 1,
                "leal -(%ecx), %eax;movl (%eax), %ebx;movl (%ecx), %ecx;movl %eax, (%ebp);addl $, %eax": 1,
                "movl %edi, (%eax);movl %eax, (%edi);movl %eax, (%esi);leal (%edx), %eax;cmpl %eax, %ecx": 1,
                "cmpb $, (%ebp);je  <PAGEVRFY+>;pushl %esi;movl %fs:, %eax;movl %eax, %esi": 1,
                "cmpl (%eax), %edx;jbe  <PAGEVRFY+>;movl $, %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "pushl $;pushl (%eax);pushl $;pushl $;calll - <KeBugCheckEx>": 1,
                "xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl %esi, ;movl %esi, ;pushl %ebx": 1,
                "movl , %eax;movl (%eax), %eax;addl %ecx, %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "movl , %eax;cmpl %edi, %eax;jne  <PAGEVRFY+>;movl $, %eax;cmpl %edi, (%ebp)": 1,
                "pushl $;pushl %eax;calll - <PAGEVRFY+>;incl %edi;cmpl , %edi": 1,
                "calll - <ExFreePoolWithTag>;movl , %edi;movl (%edi), %eax;cmpl %esi, %eax;je  <PAGEVRFY+>": 1,
                "xorb %al, %al;jmp  <PAGEVRFY+>;cmpb $, ;je - <PAGEVRFY+>;calll *": 1,
                "cmpl $, (%ebp);je - <PAGEVRFY+>;calll - <PAGEVRFY+>;testb %al, %al;jne - <PAGEVRFY+>": 1,
                "incb %al;popl %ebp;retl $;int;nop": 1,
                "movl , %eax;je  <PAGEVRFY+>;xorl %ecx, %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "movl , %eax;movl (%eax), %eax;movl (%ebx), %ecx;shll $, %eax;andl $, %ecx": 1,
                "pushl %edi;jne  <PAGEVRFY+>;pushl %ebx;movb $, (%ebp);calll - <PAGEVRFY+>": 1,
                "movb %al, (%ebp);jne  <PAGEVRFY+>;movl -(%ebp), %ecx;movl (%edi), %edi;cmpl %ecx, %edi": 1,
                "calll - <PAGEVRFY+>;testb %al, %al;movl , %eax;je  <PAGEVRFY+>;pushl $": 1,
                "movb $, (%ebp);jmp  <PAGEVRFY+>;movl , %eax;cmpb $, (%ebp);je  <PAGEVRFY+>": 1,
                "orb (%eax), %al;addb %al, (%eax);subb (%edx), %ch;andb %ah, (%eax);andb %ah, (%eax)": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);subb (%edx), %ch": 1,
                "arpl %si, (%ebp);andl %esp, (%eax);pushl %esp;jns  <PAGEVRFY+>;andb %ah, %gs:(%ecx)": 1,
                "jb  <PAGEVRFY+>;insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <PAGEVRFY+>;andb %ch, (%ecx)": 1,
                "outsl (%esi), %dx;jb  <PAGEVRFY+>;andb %ch, (%ecx);outsw (%esi), %dx;jb  <PAGEVRFY+>": 1,
                "andb %ch, (%ecx);outsw (%esi), %dx;jb  <PAGEVRFY+>;popal;je  <PAGEVRFY+>": 1,
                "andb %ch, (%edx);subb (%edx), %cl;addb %al, (%eax);addb %ch, (%edx);subb (%edx), %ch": 1,
                "pushl $;pushl %ecx;calll - <PAGEVRFY+>;incl -(%ebp);cmpl %edi, %esi": 1,
                "movl -(%ebp), %ecx;addl %ecx, (%eax);movl (%ebx), %eax;andl $, %eax;cmpl (%ebp), %eax": 1,
                "pushl %eax;calll - <PAGEVRFY+>;incl -(%ebp);cmpl %edi, %esi;jne - <PAGEVRFY+>": 1,
                "cmpl %edi, %esi;jne - <PAGEVRFY+>;popl %ebx;popl %edi;popl %esi": 2,
                "movl %eax, %ebx;movl (%ebx), %esi;jmp  <PAGEVRFY+>;leal -(%esi), %eax;movl (%eax), %ecx": 1,
                "jb  <PAGEVRFY+>;cmpl -(%ebp), %ecx;jae  <PAGEVRFY+>;pushl $;pushl %eax": 2,
                "movl (%eax), %ecx;cmpl %ebx, %ecx;movl (%esi), %esi;jb  <PAGEVRFY+>;cmpl -(%ebp), %ecx": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;jmp  <PAGEVRFY+>;pushl ;leal -(%esi), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movl , %eax;pushl %esi;pushl %edi": 1,
                "movl (%esi), %ecx;jmp  <PAGEVRFY+>;leal -(%ecx), %eax;cmpl %edi, (%eax);je  <PAGEVRFY+>": 1,
                "pushl %edi;pushl (%ebp);movb $, -(%ebp);pushl (%ebp);movb $, -(%ebp)": 1,
                "pushl (%ebp);movb $, -(%ebp);pushl (%ebp);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "calll - <PAGEVRFY+>;pushl $;calll - <PAGEVRFY+>;pushl $;movl %eax, -(%ebp)": 1,
                "calll - <PAGEVRFY+>;andl $, -(%ebp);testl %eax, %eax;movl %eax, -(%ebp);je  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;movb $, -(%ebp);pushl %ebx;pushl (%ebp);calll - <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;cmpb %al, ;je  <PAGEVRFY+>;pushl %eax;pushl %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%ebx), %ecx;testl %ecx, %ecx": 1,
                "jbe  <PAGEVRFY+>;cmpb $, (%ebp);jne  <PAGEVRFY+>;pushl $;pushl $": 1,
                "pushl $;popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);andl $-, (%esi)": 1,
                "movl -(%ebp), %ecx;leal (%esi), %eax;movl %ecx, (%esi);movl %ebx, (%esi);movl %eax, (%eax)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);movzbl (%ebp), %eax;shll %eax;xorl (%esi), %eax": 1,
                "orl $, ;movl (%ebp), %edi;testl %edi, %edi;je  <PAGEVRFY+>;orl $, (%edi)": 1,
                "calll - <DbgPrint>;movl (%edi), %eax;addl $, %esp;pushl %esi;pushl (%eax)": 1,
                "pushl $;calll - <PAGEVRFY+>;xorl %ecx, %ecx;cmpl %ebx, (%edi);je  <PAGEVRFY+>": 1,
                "jmp - <PAGEVRFY+>;jmp  <PAGEVRFY+>;andl $-, (%edi);jmp  <PAGEVRFY+>;andl $-, (%edi)": 1,
                "andl $-, (%edi);jmp  <PAGEVRFY+>;andl $-, (%edi);movl %edi, (%ebp);movl (%ebp), %edi": 1,
                "leave;retl $;nop;incl %esp;popal": 1,
                "jbe  <PAGEVRFY+>;jb  <PAGEVRFY+>;subl $, %eax;jb  <PAGEVRFY+>;addb %al, (%eax)": 1,
                "jne  <PAGEVRFY+>;arpl %sp, (%ebp);andl $, %eax;jno  <PAGEVRFY+>;imull $, (%edx), %esi": 1,
                "shrl $, %ecx;incl %ecx;movl %ebx, %eax;rep  stosl %eax, %es:(%edi);movb %dl, %cl": 1,
                "jne  <PAGEVRFY+>;leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax": 1,
                "calll - <MmIsDriverVerifying>;testl %eax, %eax;je  <PAGEVRFY+>;pushl $;popl %edx": 1,
                "je  <PAGEVRFY+>;movl (%ebp), %eax;cmpl $, %eax;jne  <PAGEVRFY+>;pushl $": 2,
                "pushl $;popl %eax;pushl %eax;pushl (%ebp);calll  <PAGEVRFY+>": 1,
                "testl %eax, %eax;je  <PAGEVRFY+>;movl (%ebp), %eax;cmpl $, %eax;jne  <PAGEVRFY+>": 1,
                "pushl $;popl %eax;pushl %eax;pushl %edi;calll  <PAGEVRFY+>": 1,
                "pushl %esi;pushl $;calll  <PAGEVRFY+>;addl $, %esp;pushl $": 1,
                "je  <PAGEVRFY+>;movl $, %ebx;movl (%ebp), %ecx;pushl $;popl %edx": 1,
                "popl %edx;calll  <PAGEVRFY+>;testb %al, %al;movl (%ebp), %ecx;jne  <PAGEVRFY+>": 1,
                "movl (%ebp), %ecx;jne  <PAGEVRFY+>;movl (%ecx), %eax;andl $, %eax;cmpb $, %al": 1,
                "addl $, %esp;andb $, (%ecx);movl (%ebp), %ecx;movl $, %eax;testl %eax, (%edi)": 1,
                "pushl %ecx;pushl (%ebp);pushl %esi;pushl %ebx;calll  <PAGEVRFY+>": 2,
                "movl (%ebp), %ecx;addl $, %esp;pushl $;popl %edx;calll - <MmMapIoSpace+>": 1,
                "setne %dl;addl $, %edx;movl %edx, %eax;imull $, %eax, %eax;addl $, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movb (%esi), %al": 2,
                "movl %edi, %edx;pushl (%ebp);movl %ebx, %ecx;pushl %esi;pushl (%ebp)": 2,
                "pushl (%ebp);calll *%eax;movl , %eax;testl %eax, %eax;je  <PAGEVRFY+>": 2,
                "pushl %edi;movl %edx, %edi;ja  <PAGEVRFY+>;movzbl %al, %eax;jmp  <PAGEVRFY+>": 2,
                "movl , %eax;testl %eax, %eax;je  <PAGEVRFY+>;movl %edi, %ecx;popl %edi": 3,
                "movl -(%ebx), %edx;movl -(%ebp), %ebx;leal (%eax,%edi,), %ecx;addl %edi, %ecx;movl %edx, (%ebx,%ecx,)": 1,
                "jne  <PAGEVRFY+>;jmp  <PAGEVRFY+>;jmp  <PAGEVRFY+>;incl -(%ebp);movl -(%ebp), %eax": 1,
                "jmp  <PAGEVRFY+>;incl -(%ebp);movl -(%ebp), %eax;cmpb $, (%eax);jne - <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;pushl %ebx;pushl %edi;pushl %eax;pushl %ecx": 1,
                "movb $, (%ebx);movl -(%ebp), %eax;movl (%ebp), %ebx;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;decl %ecx;movl %edx, -(%ebp);movl %edx, (%ebp)": 1,
                "movl %edx, (%ebp);movl %ecx, -(%ebp);jmp  <PAGEVRFY+>;cmpl $, -(%ebp);jle  <PAGEVRFY+>": 1,
                "testb %bl, %bl;jne - <PAGEVRFY+>;subl %edx, %eax;movl %eax, %ebx;pushl %ebx": 1,
                "pushl %ecx;leal (%esi), %eax;pushl %eax;calll - <RtlCompareMemory>;cmpl %ebx, %eax": 1,
                "jmp - <PAGEVRFY+>;jmp  <PAGEVRFY+>;movl -(%ebp), %eax;leal (%esi,%ebx), %esi;movb (%esi), %cl": 1,
                "jne  <PAGEVRFY+>;testb $, %bl;je  <PAGEVRFY+>;calll - <PAGEVRFY+>;cmpl $, %eax": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "leal -(%ebp), %eax;pushl (%esi);pushl %eax;pushl (%esi);pushl (%esi)": 1,
                "movl (%esi), %esi;pushl (%esi);pushl (%esi);pushl (%esi);pushl %ecx": 1,
                "movb (%eax), %dl;incl %eax;testb %dl, %dl;jne - <PAGEVRFY+>;pushl %ecx": 1,
                "popl %ecx;jmp  <PAGEVRFY+>;xorl %ebx, %ebx;leal (%ebx), %eax;cmpl $, %eax": 1,
                "testl %ebx, %ebx;jle  <PAGEVRFY+>;movl %ebx, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl $, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl $": 1,
                "calll - <DbgPrint>;popl %ecx;leal -(%ebp), %eax;popl %ecx;leal (%eax), %edx": 1,
                "popl %ecx;leal -(%ebp), %eax;popl %ecx;leal (%eax), %edx;movb (%eax), %cl": 1,
                "calll - <DbgPrint>;movl -(%ebp), %esi;leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 2,
                "pushl $;popl %ecx;subl -(%ebp), %ecx;movl %edi, %eax;subl -(%ebp), %eax": 1,
                "cmpl $, %eax;popl %ecx;popl %ecx;jge  <PAGEVRFY+>;movl %eax, %ecx": 1,
                "popl %ecx;movl -(%ebp), %eax;incl %eax;movl %eax, -(%ebp);cmpl %edi, -(%ebp)": 1,
                "pushl %ebp;pushl %ebx;incl %ebp;andb %dl, (%eax,%ecx,);andb %dl, (%esi)": 1,
                "pushl %edi;decl %eax;incl %ebp;decl %esi;andb %dl, (%eax,%ecx,)": 1,
                "incl %ebp;decl %esi;andb %dl, (%eax,%ecx,);andb %cl, (%ebp);incl %ebx": 1,
                "incl %eax;andb %dh, (%eax);js  <PAGEVRFY+>;jo  <PAGEVRFY+>;andb %al, (%eax)": 1,
                "jae  <PAGEVRFY+>;addb %ah, ;jae  <PAGEVRFY+>;addb %ah, ;jae  <PAGEVRFY+>": 1,
                "movl %edi, %edi;pushl %esi;movl %ecx, %esi;movl (%esi), %eax;movl (%eax), %eax": 1,
                "pushl (%ecx);pushl $;pushl $;pushl $;pushl $": 1,
                "pushl $;das;das;ja  <PAGEVRFY+>;ja  <PAGEVRFY+>": 1,
                "bound (%ebx), %esp;popaw;jne  <PAGEVRFY+>;je  <PAGEVRFY+>;popal": 1,
                "jmp  <PAGEVRFY+>;pushl $;calll - <DbgPrompt>;movsbl -(%ebp), %eax;cmpl $, %eax": 1,
                "je  <PAGEVRFY+>;subl $, %eax;jne  <PAGEVRFY+>;jmp  <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "cmpl $, (%esi);je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>;orl $, %ebx": 1,
                "calll - <DbgPrint>;orl $, %ebx;jmp  <PAGEVRFY+>;pushl $;movl $, ": 1,
                "popal;imull $, (%eax), %ebp;outsb (%si), %dx;outsl (%esi), %dx;jb  <PAGEVRFY+>": 2,
                "outsb (%si), %dx;outsl (%esi), %dx;jb  <PAGEVRFY+>;subb $, %al;popl %edx": 1,
                "bound (%ecx), %ebp;jb  <PAGEVRFY+>;subl %edi, (%edi);andb %al, (%eax);addb %al, (%eax)": 1,
                "subl %edi, (%edi);andb %al, (%eax);addb %al, (%edx);popal;imull $, (%eax), %esi": 1,
                "andb %ch, (%ecx);andb %ch, %cs:(%eax);jo  <PAGEVRFY+>;jae  <PAGEVRFY+>;andb %ah, (%edi)": 1,
                "xorl %eax, %eax;jmp  <PAGEVRFY+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %edx": 1,
                "decl %edi;movb (%edi), %cl;incl %edi;testb %cl, %cl;jne - <PAGEVRFY+>": 1,
                "xorl %edx, %edx;incl %edx;xorl %ecx, %ecx;calll  <PAGEVRFY+>;testb %al, %al": 3,
                "pushl %esi;movl %ecx, %esi;jge  <PAGEVRFY+>;testl %edx, %edx;je  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;xorl %eax, %eax;movl %edx, %ecx;andl $, %ecx;incl %eax": 1,
                "retl;xorb %al, %al;popl %esi;retl;int": 1,
                "movl %ecx, %eax;jge  <PAGEVRFY+>;testl %edx, %edx;je  <PAGEVRFY+>;pushl %esi": 1,
                "pushl %edi;jne  <PAGEVRFY+>;movl , %eax;leal (%eax,%edx,), %edi;cmpb $, (%ebp)": 1,
                "movl %edx, -(%ebp);movl %edi, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx)": 1,
                "movl (%eax,%edx,), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);jmp  <PAGEVRFY+>;movl (%ebp), %eax": 1,
                "calll - <PAGEVRFY+>;testb %bl, %bl;jns  <PAGEVRFY+>;pushl %esi;pushl $": 1,
                "xorl %ecx, %ecx;calll - <PAGEVRFY+>;popl %edi;popl %esi;popl %ebx": 1,
                "decl %eax;je  <PAGEVRFY+>;decl %eax;jne  <PAGEVRFY+>;pushl $": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jne  <PAGEVRFY+>;xorl %eax, %eax;jmp  <PAGEVRFY+>": 1,
                "negb %al;sbbl %eax, %eax;andl %esi, %eax;popl %edi;popl %esi": 1,
                "andl %esi, %eax;popl %edi;popl %esi;popl %ebx;retl": 1,
                "je  <PAGEVRFY+>;orl $, (%eax);xorl %eax, %eax;popl %ebp;retl $": 1,
                "movl (%eax), %eax;pushl %esi;pushl %edi;movl %eax, (%ebp);je  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;decl %ecx;decl %ecx;je  <PAGEVRFY+>;subl $, %ecx": 1,
                "decl %ecx;je  <PAGEVRFY+>;subl $, %ecx;je  <PAGEVRFY+>;movl (%edx), %esi": 1,
                "popl %ecx;movl %eax, %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx;movb $, (%eax)": 1,
                "calll - <IoDetachDevice>;pushl %ebx;calll - <IoDeleteDevice>;movl %esi, %eax;jmp  <PAGEVRFY+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %eax;cmpl $, (%eax)": 1,
                "cmpl $, (%eax);sete %al;popl %ebp;retl $;nop": 1,
                "movl $, (%edx);movl $, (%edx);xorl %eax, %eax;popl %edi;popl %ebp": 1,
                "pushl %edi;pushl %eax;calll - <IoAttachDeviceToDeviceStack>;testl %eax, %eax;movl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%esi);movl -(%ebp), %eax;andb $, (%eax)": 1,
                "incl %ebx;pushl %ebx;decl %ecx;addb %cl, (%ecx);pushl %eax": 1,
                "decl %ebp;decl %edx;popl %edi;incl %edx;decl %edi": 1,
                "pushl %esi;movl %ecx, %esi;movl (%esi), %ecx;pushl $;popl %edx": 1,
                "movl (%esi), %eax;testl $, %eax;je  <PAGEVRFY+>;testl $, %eax;jne  <PAGEVRFY+>": 1,
                "movl (%esi), %eax;movl $, %ecx;testl %eax, %ecx;jne  <PAGEVRFY+>;cmpb $, (%ebp)": 1,
                "cmpb $, (%ebp);je  <PAGEVRFY+>;testb %bl, %bl;jne  <PAGEVRFY+>;orl %ecx, %eax": 1,
                "movl %eax, (%esi);cmpl $, ;je  <PAGEVRFY+>;pushl %edi;pushl (%ebp)": 1,
                "calll - <PAGEVRFY+>;addl $, %esp;cmpb $, -(%ebp);je  <PAGEVRFY+>;orb $, (%esi)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl $;jmp  <PAGEVRFY+>": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl $;calll - <PAGEVRFY+>": 13,
                "je  <PAGEVRFY+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl $;popl %edx": 2,
                "addl $, %esp;popl %esi;leave;retl $;nop": 1,
                "andl $, %ecx;testl $, %edx;je  <PAGEVRFY+>;xorb %al, %al;retl": 1,
                "retl;testl $, %edx;jne  <PAGEVRFY+>;cmpl $, %eax;jae  <PAGEVRFY+>": 1,
                "jb  <PAGEVRFY+>;cmpl $, %ecx;jne  <PAGEVRFY+>;movb $, %al;retl": 1,
                "movb (%edx), %al;cmpb (%ecx), %al;jne  <PAGEVRFY+>;xorb %al, %al;retl": 1,
                "cmpl %ebx, (%edx);jne  <PAGEVRFY+>;cmpl %ebx, (%edx);je  <PAGEVRFY+>;movl (%edx), %eax": 1,
                "movl (%ebp), %eax;orb $, (%eax);cmpl $, ;je  <PAGEVRFY+>;pushl %esi": 1,
                "cmpl $, ;je  <PAGEVRFY+>;pushl %eax;pushl (%ecx);pushl (%esi)": 1,
                "decl %edx;popl %edi;pushl %ebx;popl %ecx;pushl %ebx": 1,
                "subl %eax, (%eax);int;int;int;int": 2,
                "movl %esi, -(%ebp);calll - <PAGEVRFY+>;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "calll - <PAGEVRFY+>;addl $, %esp;orb $, (%ebx);cmpl $, %edi;jne  <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;cmpl %eax, ;je  <PAGEVRFY+>;pushl %edi;pushl %ebx": 1,
                "movb (%esi), %al;cmpb $, %al;popl %ecx;ja  <PAGEVRFY+>;movzbl %al, %eax": 2,
                "pushl (,%eax,);calll - <DbgPrint>;movb (%esi), %al;cmpb $, %al;popl %ecx": 1,
                "pushl $;calll - <DbgPrint>;popl %ecx;popl %esi;retl": 2,
                "orb $, (%edi);jmp  <PAGEVRFY+>;movl (%ebp), %edi;movl (%ebp), %eax;cmpb $, (%eax)": 1,
                "addl $, %esp;cmpw $, (%edi);jae  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "movl (%ebp), %edi;movl (%ebx), %ecx;pushl $;popl %edx;calll - <PAGEVRFY+>": 1,
                "testb %al, %al;je  <PAGEVRFY+>;cmpl $, (%edi);jne  <PAGEVRFY+>;movl -(%ebp), %eax": 1,
                "jne  <PAGEVRFY+>;movl (%esi), %eax;subl $, %eax;je  <PAGEVRFY+>;decl %eax": 1,
                "pushl %esp;jns  <PAGEVRFY+>;incl %esp;jne  <PAGEVRFY+>;jo  <PAGEVRFY+>": 1,
                "imull $, (%ebp), %ebp;incl %esp;jbe  <PAGEVRFY+>;arpl %sp, (%ebp);jae  <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;jb  <PAGEVRFY+>;decl %eax;popal;jb  <PAGEVRFY+>": 1,
                "outsb (%esi), %dx;subl %eax, (%eax);addb %ch, (%eax);pushl %edx;insl %dx, %es:(%edi)": 1,
                "jae  <PAGEVRFY+>;addb %ch, (%eax);incl %edx;jne  <PAGEVRFY+>;pushl %edx": 1,
                "je  <PAGEVRFY+>;cmpl $, %ecx;je  <PAGEVRFY+>;jle  <PAGEVRFY+>;cmpl $, %ecx": 1,
                "cmpl $, %ecx;jle - <PAGEVRFY+>;cmpl $, %ecx;jne - <PAGEVRFY+>;xorb %al, %al": 1,
                "nop;fimuls (%edi);popl %edx;addb %al, %dh;cvtpspd (%eax), %xmm": 1,
                "loope ;popl %edx;addb %bl, %dh;cvtpspd (%eax), %xmm;addb %al, (%eax)": 1,
                "popl %edx;addb %bl, %dh;cvtpspd (%eax), %xmm;addb %al, (%eax);addb %al, (%eax)": 1,
                "movl $, (%eax);movb $, %al;popl %ebp;retl $;nop": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movb $, -(%ebp)": 5,
                "movb $, -(%ebp);calll - <PAGEVRFY+>;pushl $;popl %edx;xorl %ecx, %ecx": 1,
                "pushl $;popl %edx;xorl %ecx, %ecx;calll - <PAGEVRFY+>;testb %al, %al": 5,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;orw $-, -(%ebp);orl $-, -(%ebp);xorl %eax, %eax": 1,
                "orw $-, -(%ebp);orl $-, -(%ebp);xorl %eax, %eax;leal -(%ebp), %edi;stosl %eax, %es:(%edi)": 2,
                "cmpl %eax, ;je  <PAGEVRFY+>;pushl %ebx;pushl (%ebp);pushl $": 1,
                "calll - <VfFailDriver+>;popl %esi;popl %ebx;popl %edi;leave": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);je  <PAGEVRFY+>;movl (%eax), %eax": 1,
                "addl $, %esp;testb %bl, %bl;je  <PAGEVRFY+>;pushl -(%ebp);xorl %eax, %eax": 1,
                "pushl %eax;movl -(%ebp), %eax;pushl (%eax);pushl $;pushl -(%ebp)": 1,
                "decl (%esi);andb $-, (%ebx);xorl %ecx, %ecx;cmpl %ecx, -(%ebp);movl %ecx, (%ebx)": 1,
                "jne  <PAGEVRFY+>;cmpl %ecx, ;je  <PAGEVRFY+>;pushl %edi;pushl -(%ebp)": 1,
                "testb %al, %al;je  <PAGEVRFY+>;movl (%esi), %ecx;leal -(%ebp), %edx;calll  <PAGEVRFY+>": 1,
                "leal -(%ebp), %edx;calll  <PAGEVRFY+>;movl -(%ebp), %ecx;testl %ecx, %ecx;movl $, %edi": 1,
                "addl $, %esp;movl (%esi), %ecx;xorl %edx, %edx;calll  <PAGEVRFY+>;testb %al, %al": 1,
                "testb %al, %al;je  <PAGEVRFY+>;movl (%esi), %eax;cmpl %ebx, %eax;jbe  <PAGEVRFY+>": 1,
                "movl (%esi), %edx;decl %edx;movl %ebx, %ecx;calll  <PAGEVRFY+>;movl (%esi), %ecx": 1,
                "shrl %eax;cmpl %eax, %edi;jb - <PAGEVRFY+>;popl %edi;popl %ebx": 1,
                "pushl %esi;movl %ecx, %esi;leal (%esi), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);cmpl $, %edx;jne  <PAGEVRFY+>": 1,
                "movl %ecx, %esi;jne  <PAGEVRFY+>;decl (%esi);jne  <PAGEVRFY+>;pushl %ebx": 1,
                "movl %esi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);popl %esi": 3,
                "nop;nop;nop;movl (%ecx), %eax;movl %eax, (%edx)": 1,
                "nop;nop;movl (%ecx), %eax;movl %eax, (%edx);movb (%ecx), %al": 1,
                "nop;nop;cmpl (%ecx), %ecx;jne  <PAGEVRFY+>;xorl %eax, %eax": 1,
                "nop;nop;movl (%ecx), %edx;subl $, %edx;movl %edx, %eax": 1,
                "movl %eax, -(%ebp);jne  <PAGEVRFY+>;calll *%ebx;movb %al, -(%ebp);movl (%esi), %eax": 1,
                "jmp - <PAGEVRFY+>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "movl %ecx, %edi;movl %edx, -(%ebp);movl %edi, -(%ebp);calll *;leal -(%ebp), %edx": 1,
                "movl %edi, -(%ebp);calll *;leal -(%ebp), %edx;movl %edi, %ecx;movb %al, -(%ebp)": 1,
                "movl %edi, %ecx;movb %al, -(%ebp);calll - <PAGEVRFY+>;testl %eax, %eax;je  <PAGEVRFY+>": 1,
                "leal (%esi), %eax;xorl %ebx, %ebx;incl %ebx;movl %ebx, (%esi);leal (%esi), %edi": 1,
                "xorl %ebx, %ebx;incl %ebx;movl %ebx, (%esi);leal (%esi), %edi;movl %ebx, (%edi)": 1,
                "movl %edx, %eax;addl %edi, %eax;popl %edi;popl %esi;leave": 1,
                "jmp  <PAGEVRFY+>;leal (%eax,%eax,), %edx;leal (,%edx,), %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "leal (,%edx,), %edx;movl (%ebp), %eax;movl %edx, (%eax);popl %esi;popl %ebp": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movl %esi, %ecx;calll - <PAGEVRFY+>": 1,
                "calll - <DbgPrint>;addl $, %esp;popl %esi;popl %ebp;retl $": 1,
                "popl %ebp;retl $;orb (%eax), %al;addb %al, (%eax);popl %ebx": 1,
                "testb %al, %al;je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>;popl %ecx": 1,
                "testl %esi, %esi;jbe  <PAGEVRFY+>;pushl %ebx;calll - <MmIsAddressValid>;testb %al, %al": 2,
                "addl $, %ebx;subl $, %esi;cmpl $, %esi;ja - <PAGEVRFY+>;testl %esi, %esi": 1,
                "jmp  <PAGEVRFY+>;pushl %esi;pushl %ebx;calll - <ExGetCurrentProcessorCounts+>;popl %esi": 1,
                "je  <PAGEVRFY+>;pushl $;pushl %ebx;pushl $;pushl $": 1,
                "calll *%edi;cmpb $, %al;jbe  <PAGEVRFY+>;pushl %ebx;pushl (%ebp)": 2,
                "movl %esi, %ecx;calll - <PAGEVRFY+>;movl %eax, (%edi);jmp  <PAGEVRFY+>;movl %esi, %ecx": 1,
                "jmp  <PAGEVRFY+>;orb $-, (%esi);xorb %al, %al;popl %edi;popl %esi": 1,
                "pushl (%esi);pushl $;popl %edx;calll - <PAGEVRFY+>;movl -(%ebp), %eax": 1,
                "pushl $;popl %edx;calll - <PAGEVRFY+>;movl -(%ebp), %eax;cmpl $, (%eax)": 1,
                "jne  <PAGEVRFY+>;movl (%esi), %ecx;calll - <PAGEVRFY+>;testl %eax, %eax;jne  <PAGEVRFY+>": 1,
                "pushl %eax;pushl (%esi);pushl %edi;pushl $;calll - <PAGEVRFY+>": 3,
                "jne  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;pushl %ebx;leal (%esi), %eax": 2,
                "pushl %eax;pushl (%esi);pushl %edi;pushl $;jmp  <PAGEVRFY+>": 1,
                "jmp  <PAGEVRFY+>;cmpl $, %eax;jne  <PAGEVRFY+>;xorl %edx, %edx;cmpl (%esi), %ebx": 1,
                "cmpl $, -(%ebp);movl $, %edi;jne  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "addl $, %esp;movl -(%ebp), %edi;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <PAGEVRFY+>": 1,
                "movl -(%ebp), %ecx;testl %ecx, %ecx;je  <PAGEVRFY+>;calll - <ObfDereferenceObject>;movl $, %ebx": 1,
                "jne  <PAGEVRFY+>;testb $, (%esi);je  <PAGEVRFY+>;cmpb $, (%ebp);jne  <PAGEVRFY+>": 1,
                "pushl $;calll - <PAGEVRFY+>;addl $, %esp;orl $, (%edi);testl %ebx, (%esi)": 1,
                "cmpl (%esi), %eax;je  <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>;movl (%edi), %ecx": 1,
                "testb %al, %al;je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;leal (%esi), %eax": 1,
                "pushl -(%ebp);movl %edi, %ecx;pushl %ebx;pushl $;popl %edx": 1,
                "testb $, (%eax);jne  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;pushl %esi": 1,
                "jne  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;pushl %esi;pushl %ebx": 1,
                "movl %edx, %esi;movl (%esi), %ebx;testl %ebx, %ebx;je  <PAGEVRFY+>;pushl %edi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);leal (%eax,%eax,), %eax;sete %dl;shll $, %eax": 1,
                "cmpl %ebx, (%ebp);leal (%eax,%eax,), %eax;sete %dl;shll $, %eax;pushl %esi": 1,
                "movl %eax, (%eax);movl (%ebp), %eax;movl %eax, (%esi);testb %dl, %dl;movl (%ebp), %ecx": 1,
                "leal (%eax), %edx;movl %edx, (%ebp);leal (%eax), %edx;movl %edx, (%ebp);movl (%eax), %edx": 1,
                "addl $, %edx;xorl %eax, %eax;decl (%ebp);leal -(%edx), %edi;pushl $": 1,
                "movl %ecx, (%edx);movl (%eax), %eax;movl %eax, (%edx);movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "movl (%esi), %eax;andl $-, (%eax);movl (%esi), %ecx;xorl %edx, %edx;incl %edx": 1,
                "calll - <IofCompleteRequest>;pushl %ebx;pushl %esi;calll - <ExFreePoolWithTag>;popl %esi": 1,
                "calll - <PAGEVRFY+>;movl (%eax), %ebx;addl $-, (%edi);decb (%edi);decb (%ebx)": 1,
                "movl (%eax), %ebx;addl $-, (%edi);decb (%edi);decb (%ebx);addl $-, (%ebx)": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %ecx, (%eax);movb (%esi), %cl;movb %cl, (%eax)": 1,
                "movl %ecx, (%eax);movb (%esi), %cl;movb %cl, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "movl (%edi), %eax;movl (%esi), %ecx;pushl $;subl $, %eax;popl %edx": 1,
                "movl (%esi), %ecx;pushl $;subl $, %eax;popl %edx;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;movl (%ebp), %edx": 1,
                "je  <PAGEVRFY+>;movl (%ebp), %edx;movl %esi, %ecx;calll - <PAGEVRFY+>;movb (%esi), %al": 1,
                "pushl %edi;movl %esi, %edx;calll  <PAGEVRFY+>;movl -(%ebp), %ecx;calll  <PAGEVRFY+>": 1,
                "movl $, %eax;popl %ebx;popl %edi;popl %esi;leave": 1,
                "pushl %eax;pushl $;pushl $;calll - <PAGEVRFY+>;addl $, %esp": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;movl %eax, (%ecx);movl (%eax), %esi": 1,
                "movl %esi, (%eax);je  <PAGEVRFY+>;testb $, (%esi);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "calll - <PAGEVRFY+>;addl $, %esp;movb -(%ebp), %al;pushl $;movb %al, (%esi)": 1,
                "leal (%eax,%eax,), %ecx;movl -(%ebp), %eax;leal (%eax,%ecx,), %ecx;pushl %ecx;pushl %eax": 1,
                "addl $, %ebx;pushl %eax;pushl %ebx;calll - <PAGEVRFY+>;movl %esi, %ecx": 1,
                "movl %edi, -(%ebp);calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;movl (%esi), %ecx": 1,
                "testb %al, %al;je  <PAGEVRFY+>;movl (%esi), %ecx;pushl $;popl %edx": 1,
                "je  <PAGEVRFY+>;movl (%esi), %ecx;pushl $;popl %edx;calll - <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;testb $, (%ebx);je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "movl %edx, (%edx);movl %edx, (%edx);movl -(%ebp), %eax;movl (%eax), %ecx;pushl $": 1,
                "movl %ecx, (%esi);movb (%eax), %cl;movb %cl, (%esi);movl (%eax), %eax;movl %eax, (%esi)": 1,
                "movb %cl, (%esi);movl (%eax), %eax;movl %eax, (%esi);movl (%ebx), %eax;subl $, %eax": 1,
                "movb $-, (%eax);jmp  <PAGEVRFY+>;movl (%ebx), %ebx;movl (%esi), %ecx;pushl $": 1,
                "incl %edx;movl %esi, %ecx;calll - <PAGEVRFY+>;jmp  <PAGEVRFY+>;movl -(%ebp), %ecx": 1,
                "leal (%edx), %esi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);je  <PAGEVRFY+>;sbbl %eax, %eax": 1,
                "testl %eax, %eax;sete %al;andb %al, %cl;cmpl $, (%ebp);sete %al": 1,
                "sete %al;andb %al, %cl;cmpl $, (%ebp);sete %al;testb %cl, %al": 1,
                "andl $, (%ebp);movl $, (%ebp);movl (%ebp), %esi;jmp  <PAGEVRFY+>;testl %ecx, %ecx": 1,
                "pushl $;pushl $;calll - <PAGEVRFY+>;addl $, %esp;movl (%ebx), %eax": 1,
                "calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;cmpl $, (%ebp);jne  <PAGEVRFY+>": 1,
                "rep  movsl (%esi), %es:(%edi);movb $, (%eax);movl (%ebx), %eax;subl $, %eax;movl $, (%eax)": 1,
                "cltd;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %edi;movl (%esi), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;movl (%esi), %eax;subl $, %edi;movl %eax, (%edi)": 1,
                "movl (%esi), %eax;subl $, %edi;movl %eax, (%edi);movl (%esi), %eax;movl %edx, -(%ebp)": 1,
                "calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;pushl (%edi);calll - <PAGEVRFY+>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %edi;calll - <KeSetTimerEx>;movl $, (%esi)": 1,
                "addl $, %esi;pushl $;pushl %esi;movl %ebx, (%esi);calll - <ExQueueWorkItem>": 1,
                "movb %al, -(%ebp);calll - <PAGEVRFY+>;movl -(%ebp), %eax;testl %eax, %eax;je  <PAGEVRFY+>": 1,
                "pushl $;calll - <RtlCaptureStackBackTrace>;movzwl %ax, %eax;cmpl $, %eax;je  <PAGEVRFY+>": 1,
                "pushl %eax;movl %edi, %edx;movb $, -(%ebp);calll  <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "movb $, -(%ebp);calll  <PAGEVRFY+>;movl %eax, -(%ebp);movl %eax, %edi;movl -(%ebp), %ecx": 1,
                "movl (%ecx), %ecx;pushl $;popl %edx;calll - <PAGEVRFY+>;testb %al, %al": 1,
                "pushl $;calll - <PAGEVRFY+>;addl $, %esp;movl (%edi), %edx;movl -(%ebp), %ecx": 1,
                "movl %eax, (%eax);movl -(%ebp), %eax;movl %eax, (%edi);movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "addl $-, (%esi);decb %al;movb %al, (%esi);movl (%esi), %eax;orb $, -(%eax)": 1,
                "orb $, -(%eax);incb (%esi);addl $, (%esi);pushl $;popl %edx": 1,
                "xorl %ecx, %ecx;calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;testb $, (%esi)": 1,
                "jmp  <PAGEVRFY+>;xorl %eax, %eax;testb %al, %al;movl -(%ebp), %ecx;movb %al, (%esi)": 1,
                "testb %al, %al;movl -(%ebp), %ecx;movb %al, (%esi);movl %ecx, (%esi);jne  <PAGEVRFY+>": 1,
                "subl $, %esi;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <PAGEVRFY+>;movl %ebx, (%eax)": 1,
                "movl %ecx, (%eax);movl %edi, (%eax);movb (%ebx), %cl;movb %cl, (%eax);xorl %edx, %edx": 1,
                "movl %ebx, %ecx;movl $, (%esi);movl %eax, (%esi);calll - <PAGEVRFY+>;movl %ebx, %ecx": 1,
                "movl (%esi), %eax;movl (%eax), %esi;testl %esi, %esi;je  <PAGEVRFY+>;movl %esi, %ecx": 1,
                "calll *;movl %edi, (%ebx);popl %edi;popl %esi;popl %ebx": 1,
                "pushl %ecx;pushl %ebx;pushl %edi;movl %ecx, %edi;movl (%edi), %eax": 1,
                "je  <PAGEVRFY+>;movb $, -(%ebp);testl %edi, %edi;movl $, %ecx;je  <PAGEVRFY+>": 1,
                "movl %edx, %edi;cmpl $, %edi;movl %ecx, %esi;jne  <PAGEVRFY+>;calll *": 1,
                "pushl $;popl %edx;jmp - <PAGEVRFY+>;nop;int": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;pushl %esi;pushl %edi": 2,
                "movb %al, (%ecx);movl (%esi), %esi;movl (%edi), %ecx;pushl $;popl %edx": 1,
                "popl %edx;xorl %ecx, %ecx;movb %al, (%edi);calll - <PAGEVRFY+>;testb %al, %al": 1,
                "incl %eax;andb %al, (%edi);jmp  <PAGEVRFY+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "movl (%edi), %ecx;pushl $;movl %edx, %esi;popl %edx;calll - <PAGEVRFY+>": 1,
                "movl %edx, %esi;popl %edx;calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>": 1,
                "cmpl %ebx, %eax;je  <PAGEVRFY+>;cmpl %ebx, (%eax);jne  <PAGEVRFY+>;testb $, %cl": 1,
                "movl (%eax), %eax;pushl $;pushl $;pushl %eax;pushl %ebx": 1,
                "pushl %ebx;pushl %eax;calll - <MmMapLockedPagesSpecifyCache>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <MmProbeAndLockPages>;movl -(%ebp), %eax;orb $, (%edi);movl %eax, (%edi)": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl (%ebx);calll - <MmUnlockPages>;pushl (%ebx)": 1,
                "xorl %edx, %edx;movl %eax, (%eax);movl %eax, (%eax);calll - <PAGEVRFY+>;pushl $": 1,
                "orl $, (%edi);movl (%esi), %eax;movl %eax, (%edi);calll - <PAGEVRFY+>;movl (%esi), %esi": 1,
                "movb (%eax), %al;movb %al, (%esi);movb (%ecx), %al;movb %al, (%esi);movb (%ecx), %al": 1,
                "movl %esi, %ecx;movl %esi, (%eax);calll - <PAGEVRFY+>;movb $, %al;popl %edi": 1,
                "movl %eax, %edi;movl (%edi), %eax;je  <PAGEVRFY+>;movl (%eax), %ecx;orb $, (%ecx)": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);movl %edx, %ecx;testb $, %cl;je  <PAGEVRFY+>": 1,
                "movl (%ebp), %eax;pushl %esi;movb $, (%eax);movl (%edx), %eax;movl (%eax), %eax": 1,
                "leal (%ecx,%ecx,), %ecx;shll $, %ecx;pushl $;leal (%eax,%ecx), %esi;pushl %esi": 1,
                "movl (%ebx), %ecx;pushl $;pushl $;popl %edx;calll - <PAGEVRFY+>": 2,
                "movl %ebx, (%esi);movb (%edi), %al;movb %al, (%esi);movl (%esi), %eax;andl $, %eax": 1,
                "andl $, %eax;orl $, %eax;cmpb $, -(%ebp);movl %eax, (%esi);movl %edi, (%ebx)": 1,
                "movl $, %eax;jmp  <PAGEVRFY+>;movl (%ebp), %ecx;subl %esi, %edx;movl %edx, (%ecx)": 1,
                "cmpl $, %eax;je - <PAGEWMI+>;jmp - <PAGEWMI+>;nop;nop": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll  <PAGEWMI+>;testl %eax, %eax": 2,
                "movl %ecx, %edx;shrl $, %ecx;pushl %edi;addl $, %eax;addl $, %esi": 1,
                "shrl $, %ecx;pushl %edi;addl $, %eax;addl $, %esi;movl %eax, %edi": 1,
                "movl $, %eax;movl $, %ecx;xchgl %eax, (%ecx);xorl %eax, %eax;retl": 2,
                "movl (%ecx), %ebx;pushl %esi;pushl %edi;movl %edx, %edi;movl (%edi), %esi": 1,
                "pushl %esi;pushl %edi;movl %edx, %edi;movl (%edi), %esi;movl %ecx, -(%ebp)": 1,
                "calll - <ObfReferenceObject>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);leal (%eax), %ecx": 1,
                "testb $, (%edi);movzbl (%esi), %eax;movzbl (%esi), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %eax, %esi;movl , %eax;testl %eax, %eax;je  <PAGEWMI+>;testb $, (%eax)": 1,
                "cmpl $, %edx;jae  <PAGEWMI+>;movl $, %eax;jmp  <PAGEWMI+>;xorl %edi, %edi": 1,
                "pushl %esi;pushl %edi;movl %edx, -(%ebp);movl %ecx, %ebx;movzbl %ds:-, %eax": 1,
                "movzbl %cl, %esi;leal (,%esi,), %esi;movl (%esi), %edi;testl %edi, %edi;movl %ecx, -(%ebp)": 1,
                "movw $, (%esi);calll *;movl %eax, (%esi);movl -(%ebp), %eax;movl %edx, (%esi)": 1,
                "movl , %eax;movl , %ecx;pushl %ebx;movl (%ebp), %ebx;andl $, (%ebp)": 1,
                "movl (%ebp), %ebx;andl $, (%ebp);pushl %edi;movl (%ebx), %edi;movl %eax, -(%ebp)": 1,
                "calll - <PAGEWMI+>;testl %eax, %eax;movl %eax, -(%ebp);je  <PAGEWMI+>;pushl %esi": 1,
                "addb $, %al;movb %al, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebx), %eax": 1,
                "cmpl $, -(%ebp);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 1,
                "je  <PAGEWMI+>;cmpw %dx, (%esi);je  <PAGEWMI+>;cmpl %edx, (%ebx);je  <PAGEWMI+>": 1,
                "calll - <ObReferenceObjectByPointer>;movsbl (%ebx), %eax;pushl %edi;pushl %edi;pushl %edi": 1,
                "pushl $;pushl %eax;pushl (%ebx);pushl (%ebp);calll - <KeInitializeApc>": 1,
                "pushl %edi;pushl %esi;pushl (%ebp);calll - <KeInsertQueueApc>;testb %al, %al": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;popl %esi;popl %edi;popl %ebx": 1,
                "leave;retl $;cmpl $, %edx;jbe - <PAGEWMI+>;leal (%eax,%ecx,), %ecx": 1,
                "cmpl $, %edx;jbe - <PAGEWMI+>;leal (%eax,%ecx,), %ecx;movl (%ecx), %ebx;movl %esi, (%ecx)": 1,
                "leal (%eax,%ecx,), %ecx;movl (%ecx), %ebx;movl %esi, (%ecx);movl %ebx, (%eax,%edx,);incl ": 1,
                "pushl (%ebx);calll - <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;je  <PAGEWMI+>": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp  <PAGEWMI+>;movl %edi, (%ebp);movl $, %eax": 1,
                "leal (%ecx,%eax,), %ecx;calll - <InterlockedPushEntrySList>;leal (%edi), %esi;cmpl $, (%esi);je  <PAGEWMI+>": 1,
                "je  <PAGEWMI+>;calll *;cmpb $, %al;ja  <PAGEWMI+>;movl %edi, %ecx": 1,
                "pushl %edi;jne  <PAGEWMI+>;cmpl $, (%esi);je  <PAGEWMI+>;leal (%esi), %edi": 1,
                "movb -(%ebp), %al;movb %al, (%edx);movl (%esi), %eax;movl %eax, (%edx);movl %edx, %eax": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;leal (%edi), %ebx;cmpl $, (%ebx)": 1,
                "leal (%edi), %eax;movl %eax, (%ebp);leal (%edi), %eax;movl %eax, -(%ebp);movl %esi, %edx": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);leal (%edi), %ecx;calll - <InterlockedPopEntrySList>;movl %eax, %esi": 1,
                "je  <PAGEWMI+>;movb %bl, (%edx);jmp  <PAGEWMI+>;leal -(%eax), %edx;movl (%edx), %eax": 1,
                "testb $, (%esi);jne - <PAGEWMI+>;calll *;cmpb $, %al;ja  <PAGEWMI+>": 1,
                "jmp  <PAGEWMI+>;movl (%edx), %edi;movl %eax, (%edx);movl (%esi), %esi;addl %edx, %edi": 1,
                "pushl %ebx;pushl %eax;calll - <IoGetDeviceProperty+>;testl %eax, %eax;jge  <PAGEWMI+>": 1,
                "pushl %esi;movl %eax, (%ebp);calll - <IoWMIExecuteMethod+>;jmp  <PAGEWMI+>;leal (%esi), %eax": 1,
                "movl %ebx, -(%ebp);calll - <IoWMIExecuteMethod+>;cmpl %ebx, %eax;movl %eax, (%ebp);jl  <PAGEWMI+>": 1,
                "pushl %eax;calll - <IoWMIExecuteMethod+>;pushl $;pushl (%esi);movl %eax, (%ebp)": 1,
                "cmpl %ebx, %eax;movl %eax, (%ebp);jl  <PAGEWMI+>;pushl -(%ebp);movl %ebx, (%esi)": 1,
                "pushl %edi;pushl -(%ebp);calll - <ObCloseHandle>;cmpl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl %eax;calll - <RtlFreeUnicodeString>;pushl %edi;pushl $;pushl %esi": 1,
                "je  <PAGEWMI+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <PAGEWMI+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <PAGEWMI+>;movl $, %eax;pushl $": 1,
                "leal -(%ebp), %eax;pushl (%ebp);pushl %eax;pushl %ebx;pushl %ebx": 1,
                "pushl (%ebp);pushl %eax;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "pushl %esi;movl %edx, %ebx;movl %ecx, %esi;movl %esi, %edx;shll $, %edx": 1,
                "pushl %edi;leal (%edx), %edi;movl %edi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 2,
                "jae  <PAGEWMI+>;movl (%edx), %ecx;jmp  <PAGEWMI+>;xorl %ecx, %ecx;pushl (%ebp)": 1,
                "jmp  <PAGEWMI+>;xorl %ecx, %ecx;pushl (%ebp);addl $, %ebx;movl %ebx, %edx": 1,
                "movl %ecx, (%esi);movl (%eax), %eax;movl %eax, (%esi);movw %bx, (%esi);jmp  <PAGEWMI+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <PAGEWMI+>;nop;nop": 1,
                "xorl %eax, %eax;movl -(%ebp), %edx;movl (%ebp), %esi;leal (%edx,%esi), %edi;movl %ecx, %esi": 1,
                "movl (%ebp), %esi;leal (%edx,%esi), %edi;movl %ecx, %esi;shrl $, %ecx;rep  stosl %eax, %es:(%edi)": 1,
                "calll - <PAGEWMI+>;movl -(%ebp), %ecx;calll - <IoQueueWorkItem+>;leave;retl $": 1,
                "leal (%ebp), %eax;pushl %eax;movb $, -(%ebp);calll - <PAGEWMI+>;xorl %edx, %edx": 1,
                "movl (%eax), %esi;pushl %edi;leal (,%esi,), %esi;pushl $;andl $, %esi": 1,
                "rep  stosb %al, %es:(%edi);pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll  <PAGEWMI+>": 1,
                "jne - <PAGEWMI+>;pushl %eax;pushl %edi;calll - <ExFreePoolWithTag>;xorl %edi, %edi": 1,
                "cmpl %edi, -(%ebp);jle  <PAGEWMI+>;movl -(%ebp), %eax;movl (%eax,%edi,), %esi;testl %esi, %esi": 1,
                "movl (%eax,%edi,), %esi;testl %esi, %esi;je  <PAGEWMI+>;leal (%esi), %eax;pushl %eax": 1,
                "je  <PAGEWMI+>;leal (%esi), %eax;pushl %eax;pushl %esi;calll - <PAGEWMI+>": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;xorl %eax, %eax;popl %edi": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;addl $, %ebx;pushl %esi;pushl %ebx": 1,
                "movl %eax, -(%ebp);jne - <PAGEWMI+>;movl $, %eax;jmp  <PAGEWMI+>;cmpl %edi, %eax": 1,
                "cmpw %di, %ax;jbe  <PAGEWMI+>;movzwl %ax, %eax;shrl %eax;incl %eax": 1,
                "movl %edi, (%eax);movl -(%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "pushl -(%ebp);pushl %edi;pushl $;calll - <NtQuerySystemInformation>;cmpl $, %eax": 1,
                "calll  <PAGEWMI+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <PAGEWMI+>;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movw %bx, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;movl -(%ebp), %ecx": 1,
                "pushl %edi;movl %edx, %edi;je  <PAGEWMI+>;testb $, (%eax);jne  <PAGEWMI+>": 1,
                "pushl %esi;movl %fs:, %eax;cmpb $, ;movl (%eax), %esi;je  <PAGEWMI+>": 1,
                "cmpl $, %edx;jae  <PAGEWMI+>;leal (%eax,%eax,), %eax;shll $, %eax;movl %esi, (%eax)": 1,
                "shll $, %eax;movl %esi, (%eax);movl %edi, (%eax);movl $, (%eax);incl ": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp);pushl %eax;calll - <PAGEWMI+>": 1,
                "calll - <PAGEWMI+>;popl %edi;xorl %eax, %eax;popl %esi;leave": 1,
                "addl $-, %eax;movl $, %edi;jmp  <PAGEWMI+>;pushl (%eax);pushl (%ebp)": 1,
                "cmpl %edi, %esi;jne - <PAGEWMI+>;movb %bl, %cl;calll *;popl %edi": 1,
                "nop;nop;nop;movl , %eax;andl $, ": 1,
                "movb %al, -(%ebp);movl (%ebp), %eax;movl $, %esi;cmpl %esi, %edi;jne  <PAGEKD+>": 1,
                "movl %esi, (%ecx);movl %edi, (%ecx);movl %ecx, (%edi);movl %ecx, ;movb $, (%ebp)": 1,
                "movw %ax, ;movl $, %eax;cltd;movl %eax, ;movl %esi, %eax": 1,
                "popl %ecx;popl %ecx;jne  <PAGEKD+>;xorb %bl, %bl;pushl $": 1,
                "popl %ebx;calll - <IoQueueWorkItem+>;leave;retl $;incl %esp": 1,
                "decl %eax;incl %esp;incl %ebp;incl %edx;pushl %ebp": 1,
                "pushl %edi;calll - <wcstombs+>;testl %eax, %eax;jl - <PAGEKD+>;cmpb $, ": 1,
                "calll - <KeInitializeTimer>;movl $, ;movl %esi, ;movl %esi, ;movb $, ": 1,
                "movl %esi, ;movl %esi, ;movb $, ;movb $, ;movb $, -": 1,
                "movb $, -;je - <PAGEKD+>;movl (%edi), %esi;xorl %ebx, %ebx;cmpl %edi, %esi": 1,
                "calll - <RtlInitString>;pushl $-;pushl (%esi);leal -(%ebp), %eax;pushl %eax": 2,
                "calll - <wcstombs+>;movb %bl, %al;movl $, ;popl %ebx;popl %ebp": 1,
                "xorl %edi, %edi;pushl %edi;calll - <RtlxUnicodeStringToOemSize+>;testb %al, %al;je  <PAGEKD+>": 1,
                "pushl %edi;calll - <RtlxUnicodeStringToOemSize+>;testb %al, %al;je  <PAGEKD+>;pushl %ebx": 1,
                "decl %esi;jne - <PAGEKD+>;popl %esi;retl $;nop": 1,
                "testl %eax, %eax;pushl %edi;movl $, %edx;jbe  <PAGEKD+>;movl %edx, (%ebp)": 1,
                "jne  <PAGEKD+>;incl %esi;addl $, %edi;cmpl %eax, %esi;jae  <PAGEKD+>": 1,
                "orl $, (%esi);movl %eax, ;movl (%esi), %eax;testb $, %al;je  <PAGEKD+>": 1,
                "testl %eax, %eax;je  <PAGEKD+>;pushl %eax;calll  <PAGEKD+>;andl $, (%esi)": 1,
                "testb $, %dl;je  <PAGEKD+>;pushl (%esi);calll  <PAGEKD+>;movl %eax, (%esi)": 1,
                "jmp  <PAGEKD+>;xorl %edx, %edx;cmpl %edx, ;jbe  <PAGEKD+>;movl (%ebp), %ecx": 1,
                "jbe  <PAGEKD+>;movl (%ebp), %ecx;addl $, %ecx;testb $, (%eax);jne  <PAGEKD+>": 1,
                "movl (%esi), %ebx;cmpl (%eax), %ebx;jne  <PAGEKD+>;movl (%esi), %ebx;cmpl (%eax), %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll - <wcstombs+>;popl %edi": 5,
                "pushl %eax;pushl $;pushl $;pushl (%ebp);pushl (%edi)": 1,
                "movb $, ;pushl $;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <PAGEKD+>;andl $, (%ecx);movl %ds:, %eax;movsbw (%eax), %ax;movw (%ecx), %cx": 1,
                "calll  <PAGEKD+>;movl %eax, (%esi);negl %eax;sbbl %eax, %eax;andl $, %eax": 1,
                "movw $, -(%ebp);movl %esi, -(%ebp);calll  <PAGEKD+>;negb %al;pushl $": 1,
                "movl , %ecx;je  <PAGEKD+>;andl $, ;movb %dl, (,%ecx,);movl (%ebp), %edx": 1,
                "jae  <PAGEKD+>;cmpl $-, %eax;je  <PAGEKD+>;movb (%ebp), %dl;shll $, %ecx": 1,
                "movl %eax, (%ecx);jae  <PAGEKD+>;movl $, %eax;jmp  <PAGEKD+>;movl , %ecx": 1,
                "nop;nop;nop;andl $, ;retl": 1,
                "nop;nop;andl $, ;retl;nop": 1,
                "movl %eax, (%esi);movl (%ebp), %eax;pushl $;movl %eax, (%esi);pushl %edi": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%esi)": 1,
                "calll - <KeInitializeTimer>;pushl $;pushl $;pushl %edi;calll - <KeInsertQueueDpc>": 1,
                "pushl %eax;pushl $;calll - <KeBugCheckEx>;int;int": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;movl $, (%esi);calll - <wcstombs+>": 2,
                "calll - <wcstombs+>;movl (%esi), %eax;jmp  <PAGEKD+>;pushl %ebx;leal -(%ebp), %ecx": 1,
                "jbe  <PAGEKD+>;leal -(%ebp), %edi;movl (%edi), %eax;cmpl %ebx, %eax;je  <PAGEKD+>": 1,
                "movw $, -(%ebp);movl %esi, -(%ebp);je  <PAGEKD+>;movl $, (%esi);jmp  <PAGEKD+>": 1,
                "pushl %edi;leal (%ebp), %edx;pushl %edx;pushl $;xorl %edi, %edi": 1,
                "pushl %edi;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl $;calll - <wcstombs+>": 1,
                "pushl $;calll - <wcstombs+>;popl %esi;popl %ebx;leave": 1,
                "subl %edx, %ecx;shll $, %ecx;shrl %cl, %eax;andl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "jmp  <PAGEKD+>;pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "popl %ecx;subl %esi, %ecx;cmpl -(%ebp), %ecx;jae  <PAGEKD+>;movl -(%ebp), %ecx": 1,
                "jae  <PAGEKD+>;movl -(%ebp), %ecx;testl %ecx, %ecx;movl %ebx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ecx, -(%ebp);je  <PAGEKD+>;addl %esi, %eax;addl (%ebp), %eax": 1,
                "jne - <PAGEKD+>;cmpl $, -(%ebp);je  <PAGEKD+>;movl -(%ebp), %eax;incl %esi": 1,
                "jb - <PAGEKD+>;movl -(%ebp), %ebx;addl $, (%ebp);xorl %esi, %esi;cmpl %ebx, (%ebp)": 1,
                "andl $, (%edi);addl %eax, %esi;andl $, (%edi);movl %esi, (%edi);pushl $": 1,
                "je  <PAGEKD+>;incl %eax;shrl %ecx;decl %edx;jne - <PAGEKD+>": 1,
                "jl  <PAGEKD+>;movl (%ebp), %eax;shrl $, %eax;cmpl (%ebp), %eax;jne  <PAGEKD+>": 1,
                "addl $, %esi;cmpl %ebx, %esi;jae  <PAGEKD+>;jmp - <PAGEKD+>;jmp  <PAGEKD+>": 2,
                "pushl $;leal -(%ebp), %eax;pushl %eax;xorl %ecx, %ecx;movl %esi, %eax": 1,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jl  <PAGEKD+>;movl -(%ebp), %eax": 1,
                "cmpl $, %eax;jne  <PAGEKD+>;movl , %eax;cmpl %ebx, %eax;jae  <PAGEKD+>": 1,
                "pushl $;pushl (%ebp);pushl -(%ebp);pushl -(%ebp);calll  <PAGEKD+>": 1,
                "calll  <PAGEKD+>;testl %eax, %eax;jl  <PAGEKD+>;addl $, -(%ebp);adcl $, -(%ebp)": 1,
                "sbbl %eax, %eax;incl %eax;incl %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl %eax, (%esi);movl $, (%esi);jmp  <PAGEKD+>;movl $, %ebx;pushl $": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *": 2,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, ;je  <PAGEKD+>;calll - <PAGEKD+>": 1,
                "popl %esi;movl %edi, %eax;popl %edi;leave;retl": 1,
                "calll - <KeSaveStateForHibernate+>;movl , %eax;movl , %ecx;movl %eax, %edx;orl %ecx, %edx": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);pushl %ebx;pushl %ebx;pushl $": 1,
                "setg %cl;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl -(%ebp), %eax;movl $, %ecx": 1,
                "cmpb $, ;je  <PAGEKD+>;pushl ;calll  <PAGEKD+>;movb $, ": 1,
                "andb $-, (%esi);andl $, (%edi);testb $, (%edi);je  <PAGEKD+>;pushl (%edi)": 1,
                "movl (%edi), %eax;andl $, ;movl %eax, ;movl (%esi), %eax;orl %ebx, (%esi)": 1,
                "jne  <PAGEKD+>;movl , %eax;xorl %edi, %edi;cmpl %edi, %eax;je  <PAGEKD+>": 1,
                "movl , %edx;cmpl %edx, (%esi);jbe  <PAGEKD+>;cmpl -(%ebp), %eax;ja  <PAGEKD+>": 1,
                "jbe  <PAGEKD+>;cmpl -(%ebp), %eax;ja  <PAGEKD+>;cmpl %ecx, -(%ebp);jae  <PAGEKD+>": 1,
                "pushl %esi;pushl -(%ebp);calll  <PAGEKD+>;incl ;addl %eax, ": 1,
                "cmpl $-, %eax;je  <PAGEKD+>;subl %eax, ;pushl %esi;pushl -(%ebp)": 1,
                "movl (%esi), %eax;movl %eax, ;jmp  <PAGEKD+>;cmpl $, %eax;jne - <PAGEKD+>": 1,
                "movl %fs:, %eax;cmpl %eax, ;jne  <PAGEKD+>;movl , %eax;movl (%esi), %ecx": 1,
                "imull $, %edi, %edi;incl ;movl %eax, (%edi);calll  <PAGEKD+>;orb $, (%esi)": 1,
                "calll  <PAGEKD+>;orb $, (%esi);testb $, (%edi);jne  <PAGEKD+>;pushl %esi": 1,
                "pushl (%edi);calll  <PAGEKD+>;orl $, (%ebx);andl $, ;movb $, ": 1,
                "andl $, ;movb $, ;jmp - <PAGEKD+>;pushl -(%ebp);pushl ": 1,
                "cmpb $, (%ebp);movl %edi, ;movl %eax, ;je  <PAGEKD+>;cmpl $-, %eax": 1,
                "je  <PAGEKD+>;movl %edi, ;movb $, ;movl %fs:, %eax;pushl %esi": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl (%ebp), %esi;movw $, -(%ebp)": 1,
                "jmp - <PAGEKD+>;pushl $;calll *;jmp - <PAGEKD+>;pushl %edi": 1,
                "jmp - <PAGEKD+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $;movw %bx, -(%ebp)": 1,
                "jmp  <PAGEKD+>;cmpl %ebx, -(%ebp);jl - <PAGEKD+>;pushl %edi;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <PAGEKD+>;jmp - <PAGEKD+>;leal -(%ebp), %eax": 1,
                "calll - <wcstombs+>;movzwl -(%ebp), %eax;pushl %eax;calll - <KeSaveStateForHibernate+>;pushl %ebx": 1,
                "addb %ah, -(%eax);jp  <PAGEKD+>;addb %dh, (%ebx);popl %edx;addb %al, (%ebx)": 1,
                "addb %al, (%ebx);jp  <PAGEKD+>;addb %ch, -(%ebp);jns  <PAGEKD+>;addb %al, %bh": 1,
                "jp  <PAGEKD+>;addb %cl, %dh;jp  <PAGEKD+>;addb %ch, (%edi);popl %edx": 1,
                "calll - <PAGEKD+>;testb %al, %al;je  <PAGEKD+>;movb $, %al;jmp  <PAGEKD+>": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %edi;pushl (%ebp);movl %esi, -(%ebp)": 1,
                "movw %ax, -(%ebp);movzwl %ax, %eax;movl %edi, -(%ebp);movb $, (%eax);leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);calll - <PAGEKD+>;cmpl $, %eax;je - <PAGEKD+>;popl %edi": 1,
                "movzwl %ax, %eax;movb %bl, -(%eax,%ecx);movzwl -(%ebp), %ecx;movzwl (%edi), %edx;movl $, %eax": 1,
                "pushl %edx;pushl $;pushl %ebx;pushl %eax;movl -(%ebp), %eax": 1,
                "addl %eax, %ecx;pushl %ecx;pushl %ebx;pushl (%edi);calll  <PAGEKD+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl (%ebp);incl %eax;addw %ax, -(%ebp)": 1,
                "pushl $;calll *;popl %ebp;retl $;int": 1,
                "movl (%ebp), %esi;shll $, %esi;movl (%esi), %eax;testb $, %al;je  <PAGEKD+>": 2,
                "pushl (%esi);calll  <PAGEKD+>;testl %eax, %eax;jge - <PAGEKD+>;orl $, (%esi)": 1,
                "jge - <PAGEKD+>;orl $, (%esi);movb $, ;xorb %al, %al;jmp - <PAGEKD+>": 1,
                "cmpl $, %eax;ja  <PAGEKD+>;movl %ecx, %eax;shll $, %eax;leal (%eax), %esi": 1,
                "calll - <PAGEKD+>;popl %ebp;retl $;int;int": 1,
                "andl $-, %eax;movl %eax, (%esi);jmp  <PAGEKD+>;movb (%esi), %al;cmpb , %al": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;xorl %edx, %edx;movl $, %eax": 1,
                "movl %esi, (%ecx);jl  <PAGEKD+>;movb (%ebp), %al;xorl %edx, %edx;incl %edx": 1,
                "incl %eax;incl %ecx;decl %esi;jne - <PAGEKD+>;popl %esi": 1,
                "movl %edi, %ebx;ja  <PAGEKD+>;jmp  <PAGEKD+>;jmp  <PAGEKD+>;leal (%esi,%esi), %edx": 1,
                "andl $, %eax;popl %ebx;popl %ebp;retl $;int": 1,
                "sbbb $-, (%edx);sbbb $-, (%edx);sbbb $-, (%edx);sbbb $-, (%edx);sbbb $-, (%edx)": 1,
                "sbbb $-, (%edx);sbbb $-, (%edx);sbbb $-, (%edx);int;int": 1,
                "testl %eax, %eax;jl  <PAGEKD+>;pushl %esi;pushl %edi;pushl %esi": 1,
                "shll $, %eax;jmp  <PAGEKD+>;movl -(%ebp), %eax;addl %eax, %eax;movl %eax, -(%ebp)": 1,
                "cmpb $, %cl;je  <PAGEKD+>;xorl %esi, %esi;pushl %esi;pushl $": 1,
                "addl %ecx, %eax;jmp  <PAGEKD+>;andb $, %cl;cmpb $, %cl;je  <PAGEKD+>": 1,
                "calll - <PAGEKD+>;testl %eax, %eax;jge  <PAGEKD+>;xorl %eax, %eax;jmp  <PAGEKD+>": 2,
                "jb - <PAGEKD+>;xorb %al, %al;popl %edi;popl %esi;popl %ebx": 1,
                "leal (%ebp), %eax;pushl %eax;movl (%ebp), %eax;pushl $;pushl (%eax)": 1,
                "testl %eax, %eax;jge  <PAGEKD+>;andl $, (%ebp);movl (%ebp), %eax;popl %ebp": 1,
                "incl %edx;cmpl %eax, %edx;jb - <PAGEKD+>;popl %esi;movl (%ecx), %eax": 1,
                "pushl %edi;movl (%ebp), %edi;ja  <PAGEKD+>;movl (%ebp), %ecx;movl $, %eax": 1,
                "pushl (%ebp);movl (,%edx,), %eax;pushl $;pushl $;pushl %edi": 1,
                "pushl $;pushl $;pushl %edi;leal (%eax,%ecx), %eax;pushl %eax": 1,
                "je  <PAGEKD+>;decl %eax;je  <PAGEKD+>;decl %eax;decl %eax": 2,
                "movl %eax, (%ecx);movl (%ebp), %eax;movl $, (%eax);jmp  <PAGEKD+>;movl (%ebp), %eax": 1,
                "je  <PAGEKD+>;movl $, %edi;jmp  <PAGEKD+>;pushl (%ebp);calll *": 1,
                "pushl (%ebp);calll *;movl (%ebp), %eax;movl %esi, (%eax);movl %edi, %eax": 1,
                "pushl (%eax);pushl (%ebp);calll - <IoEnumerateDeviceObjectList+>;jmp  <PAGEKD+>;nop": 1,
                "pushl (%ebp);calll - <IoEnumerateDeviceObjectList+>;jmp  <PAGEKD+>;nop;nop": 1,
                "jne  <PAGEKD+>;leal (%edi), %eax;jmp  <PAGEKD+>;cmpb $-, %al;jne  <PAGEKD+>": 2,
                "jmp  <PAGEKD+>;cmpb $-, %al;jne  <PAGEKD+>;cmpb $, %ah;jne  <PAGEKD+>": 1,
                "addl %edi, %eax;leal (%eax,%ecx), %eax;jmp  <PAGEKD+>;xorl %eax, %eax;popl %edi": 1,
                "pushl %ebx;pushl $;leal (%ebp), %eax;pushl %eax;leal (%esi), %eax": 1,
                "leal (%esi), %eax;pushl %ebx;pushl %eax;calll - <PAGEKD+>;testl %eax, %eax": 1,
                "movw (%eax), %dx;movw %dx, (%ecx);movw (%eax), %dx;movw %dx, (%ecx);movw (%eax), %dx": 2,
                "movl (%ebp), %ecx;cmpl $, %ecx;jbe  <PAGEKD+>;movl %ecx, %eax;jmp  <PAGEKD+>": 1,
                "movl %ecx, %eax;jmp  <PAGEKD+>;xorl %eax, %eax;incl %eax;shll %cl, %eax": 1,
                "testl %eax, ;jne  <PAGEKD+>;movl (%ebp), %ecx;cmpl , %ecx;jae  <PAGEKD+>": 1,
                "je  <PAGEKD+>;movzwl %si, %eax;movl (%ebp), %ecx;addl %ecx, %eax;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;jb  <PAGEKD+>;cmpl , %eax;jbe  <PAGEKD+>;calll - <ExRaiseAccessViolation>": 2,
                "cmpl , %eax;jbe  <PAGEKD+>;calll - <ExRaiseAccessViolation>;movl %edi, %eax;calll - <_alloca_probe>": 1,
                "movl %esp, %eax;movl %eax, %edi;movl %edi, -(%ebp);movzwl %si, %eax;pushl %eax": 1,
                "cmpb %bl, ;jne  <PAGEKD+>;pushl (%ebp);pushl (%ebp);calll - <PAGEKD+>": 1,
                "movl $, %eax;jmp  <PAGEKD+>;movl $, %esi;movl (%ebp), %eax;movb $, (%eax)": 1,
                "movl $, %esi;cmpw %si, %di;jbe  <PAGEKD+>;movl %esi, %edi;movl (%ebp), %ebx": 1,
                "movl %esi, %edi;movl (%ebp), %ebx;cmpw %si, %bx;jbe  <PAGEKD+>;movl %esi, %ebx": 1,
                "cmpl , %eax;jbe  <PAGEKD+>;calll - <ExRaiseAccessViolation>;movl %esi, %eax;calll - <_alloca_probe>": 1,
                "movl %esp, %eax;movl %eax, -(%ebp);movzwl %di, %ecx;pushl %ecx;pushl (%ebp)": 1,
                "movzwl %di, %ecx;pushl %ecx;pushl (%ebp);pushl %eax;calll - <PAGEKD+>": 1,
                "calll  <PAGEKD+>;cmpb $, %al;je - <PAGEKD+>;pushl -(%ebp);calll - <PAGEKD+>": 1,
                "movl $, -(%ebp);movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl (%ebp)": 1,
                "nop;movl -(%ebp), %esp;orl $-, -(%ebp);movw -(%ebp), %ax;leal -(%ebp), %esp": 1,
                "orl $-, -(%ebp);movw -(%ebp), %ax;leal -(%ebp), %esp;calll - <_CIsqrt+>;retl $": 1,
                "calll - <PAGEKD+>;pushl %esi;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;movl %ecx, -(%ebp);pushl %eax;leal -(%ebp), %ecx": 1,
                "cmpl %eax, (%ebp);jbe  <PAGEKD+>;movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax": 1,
                "cmpw $, (%edi);jbe  <PAGEKD+>;movl $, %eax;jmp  <PAGEKD+>;cmpb $, ": 1,
                "orl (,%eax,), %ecx;je  <PAGEKD+>;incl %eax;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;movzwl (%edi), %eax;pushl $;pushl %ebx;pushl %eax": 1,
                "calll - <wcstombs+>;cmpl $, %eax;je - <PAGEKD+>;cmpl %edi, %eax;jne  <PAGEKD+>": 1,
                "cmpl $, %eax;je - <PAGEKD+>;cmpl %edi, %eax;jne  <PAGEKD+>;cmpl %edi, -(%ebp)": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $;movw $, -(%ebp)": 1,
                "calll - <wcstombs+>;cmpl $, %eax;je - <PAGEKD+>;cmpl %ebx, %eax;jne - <PAGEKD+>": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %edi;pushl %esi;pushl $": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl  <PAGEKD+>;movl -(%ebp), %eax;pushl %esi": 1,
                "jmp  <PAGEKD+>;jmp  <PAGEKD+>;cmpl %esi, -(%ebp);ja  <PAGEKD+>;movl -(%ebp), %eax": 1,
                "cmpl %esi, (%ebp);je  <PAGEKD+>;movl -(%ebp), %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "movl $, %edi;cmpl %esi, -(%ebp);je  <PAGEKD+>;pushl -(%ebp);calll - <PAGEKD+>": 1,
                "calll *;cmpl %esi, ;je  <PAGESPEC+>;movl , %edx;movl $, %esi": 1,
                "decl %esi;jne - <PAGESPEC+>;orl $, (%edx);subl $, ;leal (%edx), %ecx": 1,
                "movl %ecx, ;incl %esi;popl %edi;movb %al, %cl;calll *": 1,
                "pushl %esi;pushl %edi;movl %fs:, %eax;movb $, %cl;movl %eax, %edi": 1,
                "movl , %edx;movl %edi, ;movl (%ecx), %eax;shrl $, %eax;leal (%eax,%eax,), %eax": 1,
                "movl %esi, %ecx;calll - <ExReleaseResourceLite>;movb %bl, %cl;calll *;movl %edi, %eax": 1,
                "movl (%ebp), %esi;cmpl , %esi;pushl %edi;jb  <PAGESPEC+>;cmpl , %esi": 1,
                "shrl $, %esi;andl $, %esi;movl -(%esi), %ecx;subl $, %esi;xorl %eax, %eax": 1,
                "movl -(%esi), %ecx;subl $, %esi;xorl %eax, %eax;andl $, %ecx;cmpl $, %ecx": 1,
                "andl $, %ecx;cmpl $, %ecx;movb %al, (%ebp);jne  <PAGESPEC+>;xorl %ebx, %ebx": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl %fs:, %eax;movl %eax, ;movl %ebx, %eax;cmpl $, %edi": 1,
                "shrl $, %ebx;leal (%ebx,%ebx,), %eax;leal (%ecx,%eax,), %eax;movl (%eax), %ecx;pushl $": 1,
                "andl $, %ecx;pushl %eax;orl $, %ecx;pushl %esi;movl %ecx, (%eax)": 1,
                "shrl $, %ebx;leal (%ebx,%ebx,), %ecx;movl $, %ebx;movl $, %edi;movl , %edx": 1,
                "movl (%ebp), %eax;invlpg (%eax);movl (%ebx), %eax;testb $, %al;jne  <PAGESPEC+>": 1,
                "movb -(%ebp), %cl;jmp  <PAGESPEC+>;cmpl $, %edi;jae  <PAGESPEC+>;cmpl $, %edi": 1,
                "jmp  <PAGESPEC+>;cmpl $, %edi;jae  <PAGESPEC+>;cmpl $, %edi;je  <PAGESPEC+>": 1,
                "xorl (%eax), %ecx;andl $, %ecx;xorl %ecx, (%eax);movl %esi, %ecx;calll - <IoAllocateIrp+>": 1,
                "cmpl $, -(%ebp);jne  <PAGESPEC+>;calll *;movl (%esi), %ebx;movl %ebx, %edx": 1,
                "shrl $, %edx;andl $, %edx;movl %edx, -(%ebp);jne  <PAGESPEC+>;movb %al, %cl": 1,
                "movl (%ebp), %eax;invlpg (%eax);movl (%edi), %eax;testb $, %al;jne  <PAGESPEC+>": 1,
                "movl $, %ecx;calll - <ExReleaseResourceLite>;movb (%ebp), %cl;calll *;xorl %eax, %eax": 2,
                "jmp - <PAGESPEC+>;cmpl $, ;jne  <PAGESPEC+>;cmpl $, ;je  <PAGESPEC+>": 1,
                "testl %eax, %eax;jne  <PAGESPEC+>;incl ;jmp - <PAGESPEC+>;movl , %edi": 1,
                "movb %bl, %cl;calll *;incl ;movl $, %eax;movl $, %ecx": 5,
                "xaddl %eax, (%ecx);jmp - <PAGESPEC+>;cmpl $, -(%ebp);jne  <PAGESPEC+>;movl , %eax": 1,
                "jbe  <PAGESPEC+>;movb %bl, %cl;calll *;incl ;movl $, %eax": 1,
                "jmp  <PAGESPEC+>;movl , %eax;incl %eax;cmpl , %eax;movl %eax, ": 1,
                "movb %dl, %dh;movl %esi, %edi;shll $, %edi;movl $, %ecx;movl %edi, -(%ebp)": 1,
                "xorl %eax, %eax;cmpl $, -(%ebp);movl %ecx, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "movl %ecx, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movl %edx, (%ecx);movl $, %edi": 1,
                "jmp - <PAGESPEC+>;movl (%esi), %eax;movl (%ebp), %ecx;andl $, %eax;orl $, %eax": 1,
                "andl $, %eax;orl %edi, %eax;testb $, (%ebp);movl %eax, (%esi);je  <PAGESPEC+>": 1,
                "movl (%eax), %eax;testb $, %al;pushl %esi;pushl %edi;jne  <PAGESPEC+>": 1,
                "andl $, -(%ebp);je  <PAGESPEC+>;movl %ebx, %edi;movl $, -(%ebp);jmp  <PAGESPEC+>": 1,
                "jmp - <PAGESPEC+>;andl $, -(%ebp);xorl %esi, %esi;movw (%edi), %si;andl $, %esi": 1,
                "leal (%esi,%eax), %edx;andl $, %eax;subl %edx, %eax;addl $, %eax;cmpl $, -(%ebp)": 1,
                "subl $, %eax;andl $, -(%ebp);testl %eax, %eax;jbe  <PAGESPEC+>;movw (%edi), %cx": 1,
                "andl $, -(%ebp);testl %eax, %eax;jbe  <PAGESPEC+>;movw (%edi), %cx;andw $, %cx": 1,
                "pushl (%ebp);calll - <KeSaveStateForHibernate+>;leal -(%ebp), %eax;pushl %eax;movl $, (%ebx)": 1,
                "testb $, (%eax);jne  <PAGEHDLS+>;movl $, %eax;jmp  <PAGEHDLS+>;cmpb $, (%ebp)": 1,
                "jbe  <PAGEHDLS+>;movl , %eax;movl (%eax), %ecx;movzbl (%ecx,%esi), %ecx;pushl %ecx": 1,
                "movl , %eax;incl %esi;cmpl %ebx, %esi;jb - <PAGEHDLS+>;cmpb $, (%ebp)": 1,
                "leal (%eax,%eax), %esi;calll *;cmpb $, %al;jae  <PAGEHDLS+>;pushl %edi": 1,
                "movl %esi, %edi;idivl %edi;movw %dx, (%ecx);movl , %eax;movw (%eax), %cx": 1,
                "movzwl %cx, %ecx;imull $, %ecx, %ecx;pushl $;pushl (%ecx,%eax);calll - <wcscmp>": 1,
                "movl (%eax), %edx;imull $, %ecx, %ecx;movl (%ecx,%edx), %ecx;movl %ecx, -(%ebp);incw (%eax)": 1,
                "movl (%eax), %eax;popl %edi;jne  <PAGEHDLS+>;imull $, %ecx, %ecx;movl $, (%ecx,%eax)": 1,
                "addb %ah, (%ebx);imull $, (%eax), %eax;addb %ch, (%edi);addb %ah, (%eax);addb %ch, (%ebp)": 2,
                "addb %ch, (%edi);addb %ah, (%eax);addb %ch, (%ebp);addb %ch, %gs:(%ebp);outsl (%esi), %dx": 2,
                "cmpl %edx, %ecx;jae  <PAGEHDLS+>;addl %edi, %ecx;cmpb $, (%ecx);movl %ecx, -(%ebp)": 1,
                "je  <PAGEHDLS+>;addl $, %edi;movl %edi, -(%ebp);movl -(%ebp), %edi;movl (%esi), %eax": 1,
                "movb %cl, (%eax);incl %eax;testb %cl, %cl;jne - <PAGEHDLS+>;movl (%ebp), %ebx": 1,
                "pushl %ecx;calll *;cmpb $, %al;movb %al, -(%ebp);jae  <PAGEHDLS+>": 1,
                "calll - <ExSetTimerResolution>;movl (%ebp), %eax;pushl %ebx;xorl %ebx, %ebx;cmpb %bl, (%eax)": 1,
                "cmpl $, (%eax);jne  <PAGEHDLS+>;cmpb $, -(%ebp);jae  <PAGEHDLS+>;addl $, %eax": 1,
                "cmpb %bl, (%esi);jne - <PAGEHDLS+>;cmpb $, -(%ebp);jae  <PAGEHDLS+>;pushl %ebx": 1,
                "addl $, %eax;cmpl %eax, %esi;jb  <PAGEHDLS+>;movb $, (%eax);movl , %eax": 1,
                "addb %cl, -(%edx);popl %edx;addb %dl, -(%edx);popl %edx;addb %dl, -(%esi)": 1,
                "pushl %es;pushl %es;addb %al, (%eax);addl (%edx), %eax;addb (%edx), %al": 1,
                "addl (%edx), %eax;addb (%edx), %al;addb -(%eax), %dl;movl %edi, %edi;pushl %ebp": 1,
                "jmp  <PAGEHDLS+>;orl $, (%ecx);cmpb $-, %dl;je  <PAGEHDLS+>;movl , %ecx": 1,
                "testb %al, %al;je  <PAGEHDLS+>;leal -(%ebp), %eax;pushl %eax;movl , %eax": 1,
                "calll - <sprintf>;movl , %eax;addl $, %esp;pushl (%eax);calll - <PAGEHDLS+>": 3,
                "jne  <PAGEHDLS+>;decl %ecx;jne - <PAGEHDLS+>;movl (%eax), %edx;addl %edx, %ecx": 1,
                "jne - <PAGEHDLS+>;cmpl %ebx, %esi;je  <PAGEHDLS+>;movl (%eax), %eax;leal (%esi,%eax), %ecx": 1,
                "movb (%ecx), %dl;incl %ecx;movb %dl, (%eax);incl %eax;cmpb %bl, %dl": 1,
                "movl , %eax;andl $-, (%eax);jmp  <PAGEHDLS+>;movl %edx, %ecx;movl %ecx, %eax": 1,
                "jmp  <PAGEHDLS+>;movl %edx, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "orb %ah, ;addb %al, (%eax);orb %ah, (%eax);orb %al, (%eax);popl %es": 1,
                "cmpb $, %al;pushl %eax;addb %al, %ds:(%eax);orl $, %eax;pushl %ebx": 1,
                "addb %al, %ds:(%eax);orl $, %eax;pushl %ebx;pushl %esp;incl %ecx": 1,
                "pushl %esp;popl %ecx;andb %cl, (%esi);decl %ebp;incl %ebp": 1,
                "andb %cl, (%esi);decl %ebp;incl %ebp;cmpl $, %eax;pushl %eax": 1,
                "popl %ecx;jb  <PAGEHDLS+>;movl (%esi), %eax;andw $, (%eax);pushl (%esi)": 1,
                "movl , %ecx;movzwl (%ecx), %eax;movl -(%ebp), %esi;incl -(%ebp);cmpl %eax, %esi": 1,
                "cmpl %eax, %esi;je  <PAGEHDLS+>;cmpb $, (%ebp);je  <PAGEHDLS+>;cmpl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <PAGEHDLS+>;movl , %ecx;testb $, (%ecx)": 1,
                "andl $, %eax;cmpb (%eax), %ah;addb %al, (%eax);orl $, %eax;addb %al, (%eax)": 1,
                "jb  <PAGEHDLS+>;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %ecx;popl %ecx;je  <PAGEHDLS+>;leal -(%ebp), %eax;pushl $": 2,
                "pushl $;pushl $;pushl %eax;pushl %eax;calll - <InbvSolidColorFill>": 1,
                "pushl $;pushl %eax;pushl %eax;calll - <InbvSolidColorFill>;pushl $": 1,
                "pushl %eax;calll - <InbvSolidColorFill>;pushl $;popl %esi;pushl $": 1,
                "addb %dl, (%ecx,%edi,);andb %bh, %gs:(%edi);andb %ch, (%edi);andb %cl, (%eax);insb %dx, %es:(%edi)": 1,
                "cmpl $, (%ebp);je  <PAGEHDLS+>;cmpl $, (%ebp);je  <PAGEHDLS+>;movl , %ecx": 1,
                "calll *;movl , %ecx;movl -(%ebp), %edx;jmp  <PAGEHDLS+>;orb $-, %al": 1,
                "testl %esi, %esi;je  <PAGEHDLS+>;movl , %eax;testb $, (%eax);je - <PAGEHDLS+>": 1,
                "testb $, (%eax);je - <PAGEHDLS+>;pushl (%ebp);pushl %esi;calll - <PAGEHDLS+>": 1,
                "je - <PAGEHDLS+>;decl %edx;pushl %edx;leal (%ebx), %eax;pushl %eax": 1,
                "pushl %edx;leal (%ebx), %eax;pushl %eax;calll - <PAGEHDLS+>;movb %al, (%ebx)": 1,
                "pushl %eax;calll - <PAGEHDLS+>;movb %al, (%ebx);jmp - <PAGEHDLS+>;movl , %eax": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);movl , %eax;movb (%eax), %al;movb %al, (%ebx)": 1,
                "testl %esi, %esi;je  <PAGEHDLS+>;cmpl $, (%ebp);jne  <PAGEHDLS+>;movl (%esi), %eax": 1,
                "jmp - <PAGEHDLS+>;testl %esi, %esi;je  <PAGEHDLS+>;pushl (%ebp);pushl %esi": 1,
                "je  <PAGEHDLS+>;pushl (%ebp);pushl %esi;calll - <PAGEHDLS+>;jmp - <PAGEHDLS+>": 1,
                "pushl %esi;calll - <PAGEHDLS+>;jmp - <PAGEHDLS+>;movl , %eax;movl (%eax), %eax": 1,
                "je  <PAGEHDLS+>;testl %edx, %edx;je  <PAGEHDLS+>;cmpl $, (%edx);jb  <PAGEHDLS+>": 1,
                "testl %edx, %edx;je  <PAGEHDLS+>;cmpl $, (%edx);jb  <PAGEHDLS+>;movl , %esi": 1,
                "jmp - <PAGEHDLS+>;movl $, %edi;movl (%ebp), %eax;cmpl $, %eax;je  <PAGEHDLS+>": 1,
                "popl %edx;addb %dh, (%eax);movl $, %eax;popl %edx;addb %cl, %ah": 1,
                "calll - <wcscpy>;popl %ecx;popl %ecx;jmp  <PAGEHDLS+>;movl $, %esi": 1,
                "xorl %esi, %esi;movw %si, -(%ebp);cmpl $, %edi;jne  <PAGEHDLS+>;testl %ebx, %ebx": 1,
                "jne  <PAGEHDLS+>;testl %ebx, %ebx;je  <PAGEHDLS+>;pushl %esi;calll - <wcslen>": 1,
                "movzwl (%ebx), %ecx;movl (%ebx), %esi;shrl %ecx;cmpw $, -(%esi,%ecx,);je  <PAGEHDLS+>": 1,
                "andw $, -(%ebp,%edx,);pushl $;leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "addb %dl, (%edx);decl %esi;addb %cl, (%eax,%eax);addb %ah, (%eax);addb %cl, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %cl, (%ebx);pushl %edx;addb %cl, (%esi);decl %esp": 16,
                "addb %ah, %gs:(%ecx);je  <PAGEHDLS+>;addb %ah, %gs:(%eax);addb %ah, (%ebp);jbe  <PAGEHDLS+>": 1,
                "addb %ah, %gs:(%eax);addb %ah, (%ebp);jbe  <PAGEHDLS+>;addb %ch, %gs:(%esi);je  <PAGEHDLS+>": 1,
                "jb  <PAGEHDLS+>;addb %ah, %gs:(%ecx);je  <PAGEHDLS+>;addb %ah, %gs:(%eax);addb %ch, (%edi)": 1,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %ch, (%edi);je  <PAGEHDLS+>;andb %al, (%eax)": 1,
                "jb  <PAGEHDLS+>;addb %ah, %gs:(%ebx);je  <PAGEHDLS+>;outsl (%esi), %dx;addb %dh, (%edx)": 1,
                "jo  <PAGEHDLS+>;pushl $;addb %ah, (%ebp);andb %al, (%eax);xorb %al, (%eax)": 1,
                "jo  <PAGEHDLS+>;pushl $;addb %ah, (%ebp);andb %al, (%eax);xorl %eax, (%eax)": 1,
                "xorl %eax, (%eax);subl %eax, (%eax);andb %al, (%eax);jo  <PAGEHDLS+>;insb %dx, %es:(%edi)": 1,
                "addb %ch, %fs:(%eax,%eax);addb %ch, (%esi);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebx)": 1,
                "addb %ch, %gs:(%ebp);andb %al, (%eax);jb  <PAGEHDLS+>;outsl (%esi), %dx;addb %ch, (%edi)": 3,
                "addb %dh, (%eax,%eax);addb %ah, (%ebx);je  <PAGEHDLS+>;andb %al, (%eax);jae  <PAGEHDLS+>": 1,
                "addb %al, (%ecx);outsb (%esi), %dx;addb %dh, (%ebx);imull $, (%eax), %eax;jns  <PAGEHDLS+>": 1,
                "andb %al, (%eax);je  <PAGEHDLS+>;outsl (%esi), %dx;addb %ah, (%eax);addb %ah, (%eax,%eax)": 1,
                "je  <PAGEHDLS+>;addb %al, %cs:(%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popal;addb %dh, (%edx);imull $, (%eax), %eax;addb %ch, (%esi);addb %ah, (%bx,%si)": 1,
                "nop;nop;pushl %ebp;addb %ch, (%esi);addb %ah, %fs:(%ebp)": 1,
                "movw %bx, (%ecx,%edx,);movl -(%ebp), %ecx;movzwl (%ecx), %edx;addl (%ecx), %edx;pushl %eax": 1,
                "pushl %eax;movw %bx, -(%ebp);calll - <RtlAppendUnicodeToString>;movl -(%ebp), %eax;addl $, %eax": 1,
                "pushl %eax;calll  <INIT+>;pushl %eax;pushl $;leal -(%ebp), %eax": 1,
                "calll - <InbvEnableDisplayString+>;pushl $;calll - <InbvEnableDisplayString>;orl $-, -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl -(%ebp);movl $, -(%ebp)": 1,
                "andb %cl, (%ebp);insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <INIT+>;popl %ebp": 1,
                "je  <INIT+>;addb %ch, %gs:(%ebp);incl %esp;addb %dh, (%edx);imull $, (%eax), %eax": 1,
                "jns  <INIT+>;jae  <INIT+>;je  <INIT+>;addb %ch, %gs:(%ebp);pushl %edx": 1,
                "addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax);addb %cl, %ah": 3,
                "jg - <INIT+>;movl -(%ebp), %ebx;testl %edx, %edx;je  <INIT+>;movl (%edx), %eax": 1,
                "addl %edi, %edx;cmpl %edx, %eax;ja  <KeFindConfigurationNextEntry+>;cmpl %eax, %ecx;ja  <INIT+>": 1,
                "decl -(%ebp);addl $, %esi;cmpl $, -(%ebp);jg - <INIT+>;jmp  <INIT+>": 1,
                "decl %eax;andl %edx, %ecx;cmpl $, -(%ebp);je  <INIT+>;xorl %edx, %edx": 1,
                "pushl $;pushl $;movl %edi, -(%ebp);calll - <ExAcquireResourceExclusiveLite>;movl , %ebx": 1,
                "movl %ebx, -(%ebp);je  <INIT+>;pushl %esi;cmpl $, (%ebx);je  <INIT+>": 1,
                "cmpl $, (%ebx);je  <INIT+>;movl (%ebx), %ebx;cmpl $, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebx), %ebx;cmpl $, %ebx;movl %ebx, -(%ebp);jne - <INIT+>;popl %esi": 1,
                "jne  <INIT+>;leal (%edi), %eax;cmpl %eax, (%eax);jne  <KeFindConfigurationNextEntry+>;popl %edi": 2,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;xorl %ebx, %ebx;pushl $;movl %eax, -(%ebp)": 1,
                "pushl $;movl %eax, -(%ebp);movw $, -(%ebp);movw %bx, -(%ebp);calll - <ExInitializeResourceLite>": 1,
                "pushl $;calll - <ExInitializeResourceLite>;movl $, %eax;movl %eax, ;movl %eax, ": 3,
                "movl %eax, ;movl $, %eax;pushl $;movl %eax, ;movl %eax, ": 4,
                "movl %eax, ;movl %eax, ;calll - <KeInitializeSpinLock>;calll  <INIT+>;cmpl %ebx, ": 1,
                "calll  <INIT+>;cmpl %ebx, ;movl %ebx, ;jne  <INIT+>;orl $, ": 1,
                "pushl $;popl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp)": 4,
                "leal (,%eax,), %eax;pushl %eax;pushl %ebx;pushl $;movl %eax, -(%ebp)": 1,
                "pushl $;pushl %ebx;pushl $;calll  <KeFindConfigurationNextEntry+>;movsbl , %ecx": 1,
                "je  <INIT+>;pushl %esi;pushl -(%ebp);pushl $;pushl -(%ebp)": 1,
                "movl $, %eax;pushl $;movl %eax, ;movl %eax, ;calll  <INIT+>": 1,
                "movl %eax, ;movl %eax, ;calll  <INIT+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>": 2,
                "calll - <ZwOpenKey>;testl %eax, %eax;jl  <INIT+>;pushl $;leal -(%ebp), %eax": 2,
                "movl %ebx, ;movl %ebx, ;movl %eax, ;movl %eax, ;calll - <KeInitializeSpinLock>": 1,
                "movl %eax, ;calll - <KeInitializeSpinLock>;pushl $;pushl %ebx;pushl $": 1,
                "calll - <RtlInitUnicodeString>;pushl %ebx;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %ebx": 1,
                "movl -(%ebp), %eax;movl %eax, ;movl $, %eax;movl %eax, ;movl %eax, ": 1,
                "movb $, ;movl %ebx, ;movb $, ;movb $, ;movl %esi, ": 1,
                "testb %al, %al;pushl %ebx;je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %edi;pushl %edi": 1,
                "pushl %edi;pushl %ebx;calll  <INIT+>;cmpb %bl, ;movl %edi, ": 1,
                "jl  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;calll  <KeFindConfigurationNextEntry+>": 1,
                "pushl %eax;pushl %edi;calll  <KeFindConfigurationNextEntry+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>": 1,
                "pushl %ebx;addb %bl, (%edi);incl %ebp;addb %dl, (%esi);incl %ebp": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl , %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl , %eax;pushl %ebx": 1,
                "pushl %edi;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll - <RtlSubAuthoritySid+>": 1,
                "jl  <INIT+>;leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "movw %cx, -(%ebp);movw %cx, -(%ebp);movl (%eax), %ecx;addl %eax, %ecx;pushl $": 2,
                "movw %cx, -(%ebp);movl (%eax), %ecx;addl %eax, %ecx;pushl $;leal -(%ebp), %eax": 2,
                "pushl $;leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);calll  <INIT+>": 1,
                "pushl (%eax);calll - <toupper+>;movb $, ;calll  <INIT+>;calll  <INIT+>": 1,
                "popl %ebx;je  <INIT+>;pushl %eax;calll  <INIT+>;movb $, %al": 1,
                "ja  <INIT+>;cmpl , %eax;je  <INIT+>;pushl %eax;movl %eax, ": 1,
                "movl %eax, %ecx;movl %ebx, ;movl %esi, ;movl %ebx, ;movl %ebx, ": 1,
                "testl %eax, %eax;je  <INIT+>;movl , %eax;cmpl %ebx, %eax;jne  <KeFindConfigurationNextEntry+>": 1,
                "movl %ebx, ;movb $, %al;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "calll - <KeInitializeSpinLock>;movl $, %eax;movl %eax, ;movl %eax, ;movl $, %eax": 3,
                "calll - <KeInitializeSpinLock>;movl %ebx, ;movl $, ;movl %ebx, ;movl %ebx, ": 1,
                "movl %ebx, ;movl $, ;movl %ebx, ;movl %ebx, ;movb $, ": 1,
                "movl %eax, ;movl %eax, ;pushl $;pushl $;pushl $": 1,
                "pushl %ebx;pushl %ebx;pushl $;calll - <ExInitializeNPagedLookasideList>;movl %ebx, ": 1,
                "pushl $;pushl $;pushl $;leal (%eax), %ecx;imull $, %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <IoCreateDriver>;xorl %ecx, %ecx;testl %eax, %eax": 1,
                "decl %ebp;addb %cl, (%ecx);js  <INIT+>;pushl %edi;addb %al, (%eax,%eax)": 1,
                "pushl %edi;addb %al, (%eax,%eax);addb %al, (%eax);addb %cl, %ah;int": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);jne  <INIT+>;pushl %eax;pushl $": 1,
                "xorl %eax, %eax;jmp - <INIT+>;nop;nop;nop": 1,
                "testl %edi, %edi;je  <INIT+>;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <NtClose>;calll - <IoOpenDeviceRegistryKey+>;pushl %ebx;calll - <IoGetDeviceProperty+>;movl %ebx, ": 1,
                "decl %ecx;jne  <KeFindConfigurationNextEntry+>;pushl (%ebp);calll  <INIT+>;popl %ebp": 1,
                "pushl $;movl %eax, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movb %bl, -(%ebp)": 1,
                "pushl -(%ebp);calll - <InbvEnableDisplayString>;pushl -(%ebp);calll - <IoEnumerateDeviceObjectList+>;cmpl %ebx, %edi": 1,
                "addl $, %esp;leal -(%ebp,%eax), %esi;movb %bl, (%esi);incl %esi;cmpl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %edi;pushl %ebx;rep  movsl (%esi), %es:(%edi);calll - <INIT+>;testb %al, %al": 1,
                "je  <KeFindConfigurationNextEntry+>;cmpl %ebx, -(%ebp);je - <INIT+>;pushl $;pushl -(%ebp)": 2,
                "calll - <strstr>;movl %eax, %esi;cmpl %ebx, %esi;popl %ecx;popl %ecx": 2,
                "addl $, %edx;shrl $, %edx;pushl %edx;pushl %ecx;pushl %eax": 1,
                "calll  <KeFindConfigurationNextEntry+>;testb %al, %al;pushl %ebx;je  <KeFindConfigurationNextEntry+>;pushl ": 1,
                "calll  <INIT+>;cmpl %ebx, %eax;jl  <KeFindConfigurationNextEntry+>;pushl -(%ebp);pushl $": 1,
                "pushl $;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl -(%ebp), %eax;movl %eax, ;calll  <KeFindConfigurationNextEntry+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>": 1,
                "pushl %eax;calll - <RtlInitCodePageTable+>;cmpb %bl, -(%ebp);jne  <KeFindConfigurationNextEntry+>;cmpl , %esi": 1,
                "calll - <RtlInitCodePageTable+>;cmpb %bl, -(%ebp);jne  <KeFindConfigurationNextEntry+>;cmpl , %esi;jne  <KeFindConfigurationNextEntry+>": 1,
                "je - <INIT+>;pushl $;pushl -(%ebp);calll - <strstr>;popl %ecx": 2,
                "cmpb %bl, ;jne  <KeFindConfigurationNextEntry+>;movl -(%ebp), %esi;pushl %esi;pushl $": 1,
                "calll  <INIT+>;pushl $;calll - <InbvEnableDisplayString+>;calll  <INIT+>;calll  <INIT+>": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl $;calll - <InbvEnableDisplayString+>;cmpl , %esi;jne  <INIT+>": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);calll - <ZwAllocateVirtualMemory>;cmpl %ebx, %eax;jl  <KeFindConfigurationNextEntry+>": 1,
                "addl (%eax), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;movw $, (%eax);movl , %eax": 1,
                "je - <INIT+>;cmpw $, %dx;je - <INIT+>;incl %ecx;incl %ecx": 1,
                "calll - <PsCreateSystemThread>;testl %eax, %eax;jl  <INIT+>;pushl -(%ebp);calll - <ZwClose>": 3,
                "movl %ebx, ;movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 3,
                "calll - <RtlUnicodeStringToAnsiString>;movzwl -(%ebp), %eax;pushl -(%ebp);movb %bl, -(%ebp,%eax);calll - <NtClose>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax;jl  <INIT+>": 1,
                "testl %eax, %eax;jl  <INIT+>;pushl -(%ebp);calll - <ObMakeTemporaryObject+>;pushl -(%ebp)": 1,
                "jl  <INIT+>;pushl -(%ebp);calll - <ObMakeTemporaryObject+>;pushl -(%ebp);calll - <NtClose>": 1,
                "calll - <ObfDereferenceObject>;pushl (%esi);calll - <ZwClose>;jmp - <INIT+>;xorl %edi, %edi": 1,
                "movl %esi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <INIT+>": 1,
                "movl , %eax;pushl %ebx;pushl %esi;xorl %ebx, %ebx;incl %ebx": 1,
                "addb %al, (%eax);incl %esp;addb %ch, (%ecx);jae  <INIT+>;popal": 1,
                "xorl %edi, %edi;incl %edi;pushl $;popl %esi;jmp - <INIT+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, ;calll - <RtlInitUnicodeString>;andl $, -(%ebp)": 1,
                "pushl %eax;movb $, ;calll - <RtlInitUnicodeString>;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "je  <INIT+>;pushl %esi;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl (%ebp);calll - <INIT+>;xorl %eax, %eax;jmp - <INIT+>;movl $, ": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);movl %ebx, (%esi);movl %esi, (%eax);movl %esi, (%ebx)": 1,
                "movl %esi, (%eax);movl %esi, (%ebx);jmp  <INIT+>;xorl %eax, %eax;movl %eax, (%ebx)": 1,
                "pushl %esi;calll - <ObCheckCreateObjectAccess+>;cmpl $-, %eax;je  <INIT+>;pushl %eax": 3,
                "cmpl $, (%eax);jne  <INIT+>;leal (%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "imull $, (%eax), %eax;incl %edi;addb %dh, (%edx);outsl (%esi), %dx;addb %dh, (%ebp)": 2,
                "addb %dh, (%edx);je  <INIT+>;addb %al, (%eax);int;int": 1,
                "pushl %esi;calll - <ObCheckCreateObjectAccess+>;movl %eax, %edi;cmpl $-, %edi;je  <INIT+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeToString>;pushl %ebx;pushl -(%ebp)": 1,
                "calll  <INIT+>;jmp - <INIT+>;pushl %ebx;addb %ah, (%ebp);jb  <INIT+>": 1,
                "addb %ch, %gs:(%ebp);popl %esp;addb %al, (%eax);addb %al, (%ebx);jne  <INIT+>": 1,
                "xorb %al, %al;jmp - <INIT+>;movl (%ebp), %ecx;movl (%ecx), %eax;decl %edi": 1,
                "je - <INIT+>;cmpl $, (%esi);movl (%esi), %eax;movl %eax, (%ebp);je  <INIT+>": 1,
                "movl (%esi), %eax;movl %eax, (%ebp);je  <INIT+>;pushl $;leal (%esi), %eax": 1,
                "movl %edi, (%ebp);jmp  <INIT+>;nop;nop;nop": 1,
                "pushl %edi;cmpl $, (%ebp);je  <INIT+>;movl (%ebp), %esi;movl (%ebp), %eax": 1,
                "leal (%eax,%esi,), %edi;movl (%edi), %eax;addl (%ebp), %eax;movb (%ecx), %bl;movb %bl, %dl": 1,
                "xorl %eax, %eax;testl %eax, %eax;je  <INIT+>;cmpl $, (%ebp);je  <INIT+>": 1,
                "subl $, %eax;movl %eax, -(%ebp);jmp  <INIT+>;movl (%edi), %eax;movl -(%ebp), %ecx": 1,
                "movl %edi, %ecx;jmp  <KeFindConfigurationNextEntry+>;movl %esi, %ecx;jmp  <KeFindConfigurationNextEntry+>;addl $, %eax": 1,
                "addl $, %eax;jmp  <KeFindConfigurationNextEntry+>;cmpl $, %ecx;jae  <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>": 1,
                "jmp  <KeFindConfigurationNextEntry+>;xorb %al, %al;jmp - <INIT+>;nop;nop": 1,
                "movl %edi, -(%ebp);calll - <ExAcquireResourceExclusiveLite>;movl , %eax;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%eax), %ecx;movl %ecx, %edx;shrl $, %edx;andl $, %edx;movl -(%edx), %edx": 1,
                "je  <INIT+>;jmp  <KeFindConfigurationNextEntry+>;movb (%edi), %cl;cmpb $, %cl;je  <INIT+>": 1,
                "jmp  <INIT+>;movb -(%ebp), %cl;calll *%esi;jmp  <KeFindConfigurationNextEntry+>;movb $, %cl": 1,
                "cmpl %edi, %ecx;movl %ecx, -(%ebp);jae  <INIT+>;calll - <FsRtlRemoveLargeMcbEntry+>;testl %eax, %eax": 1,
                "jae  <INIT+>;movl (%eax), %ecx;addl -(%ebp), %ecx;cmpl %ecx, (%eax);je - <INIT+>": 1,
                "orl %eax, %edx;orl $, %edx;movl %edx, (%esi);movl (%ebp), %eax;invlpg (%eax)": 1,
                "incl ;addl $, %edi;addl $, %esi;jmp - <INIT+>;popl %edi": 1,
                "movl %eax, (%ebp);je  <INIT+>;pushl %eax;pushl %esi;calll *(%esi)": 1,
                "calll *(%edi);movl %eax, %esi;testl %esi, %esi;movl %esi, -(%ebp);je  <KeFindConfigurationNextEntry+>": 1,
                "pushl %esi;pushl %edi;calll - <RtlGetNtGlobalFlags+>;cmpl $-, %eax;je  <INIT+>": 1,
                "testl %eax, %eax;movl %eax, (%esi);je  <INIT+>;pushl (%ebp);pushl %esi": 1,
                "testl %eax, %eax;movl %eax, (%ebx);je  <INIT+>;movl (%ebp), %eax;addl $-, %eax": 1,
                "outsl (%esi), %dx;addb %dh, (%ebp);jo  <INIT+>;addb %al, (%eax);pushl %esp": 1,
                "jmp  <INIT+>;nop;pushl %ebx;addb %bh, (%ecx);jae  <INIT+>": 1,
                "cmpl %edi, %esi;je  <INIT+>;pushl %ebx;movl %esi, %ebx;movl %esi, (%ebp)": 1,
                "pushl %eax;calll - <RtlEqualUnicodeString>;testb %al, %al;jne - <INIT+>;pushl (%ebp)": 1,
                "calll - <RtlEqualUnicodeString>;testb %al, %al;jne - <INIT+>;pushl (%ebp);pushl %ebx": 1,
                "testb %al, %al;jne - <INIT+>;pushl (%ebp);pushl %ebx;calll - <INIT+>": 1,
                "subl $, %esp;leal -(%ebp), %eax;pushl %esi;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %edi;leal -(%ebp), %eax;cmpl %eax, %edi;movl %esi, -(%ebp)": 1,
                "testl %eax, %eax;jne  <INIT+>;movl (%esi), %eax;testl %eax, %eax;jne - <INIT+>": 1,
                "jne  <INIT+>;movl (%esi), %eax;testl %eax, %eax;jne - <INIT+>;pushl $": 1,
                "jne - <INIT+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;popl %esi": 1,
                "pushl %eax;calll - <INIT+>;jmp - <INIT+>;movl (%ebp), %eax;movw (%eax,%esi,), %ax": 1,
                "movl (%esi), %eax;addl %edi, %eax;pushl %eax;movl (%esi), %eax;addl %edi, %eax": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %eax;calll - <INIT+>;movzwl %ax, %eax": 1,
                "movl (%edi,%eax), %eax;addl %edi, %eax;movl %eax, (%ebx);xorl %eax, %eax;movl -(%ebp), %ecx": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);pushl %edx;je  <INIT+>;decl %ebx": 1,
                "calll - <INIT+>;movl %eax, %edi;cmpl %esi, %edi;jl  <KeFindConfigurationNextEntry+>;calll - <PAGEKD+>": 1,
                "calll - <PAGEKD+>;movl %edi, %eax;popl %edi;popl %esi;retl": 1,
                "nop;nop;calll  <INIT+>;calll - <INIT+>;testl %eax, %eax": 1,
                "pushl ;pushl $;calll - <KeSetTimer>;retl;cmpl %ebx, %eax": 1,
                "cmpl %ebx, %eax;jne  <INIT+>;movl (%eax), %ebx;movl (%eax), %edx;movl (%eax), %esi": 1,
                "movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);jne - <INIT+>;movl %eax, %edi": 1,
                "jmp - <INIT+>;movl (%ecx), %ecx;jmp - <INIT+>;nop;nop": 1,
                "pushl %esi;movl %ds:, %eax;movl $, %esi;addl $, %eax;movb (%eax), %dl": 1,
                "calll - <KeSetSystemAffinityThread>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "jmp - <INIT+>;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>;shll -(%ebp);testl %esi, %esi": 1,
                "movl (%ebp), %esi;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl $, (%esi);pushl $": 1,
                "pushl (%ebp);calll - <INIT+>;xorl %ebx, %ebx;cmpl %ebx, %eax;jl  <INIT+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <ZwCreateSection>;movl %eax, %edi;pushl -(%ebp)": 1,
                "movl %ebx, (%eax);leal (%esi), %edi;pushl (%ebp);pushl (%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl (%ebp);pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ebx, %ecx;jne  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax;addl $, %eax;movl (%eax), %ecx": 2,
                "calll - <ZwAllocateVirtualMemory>;movl %eax, %edi;cmpl %ebx, %edi;jl  <INIT+>;movl (%ebp), %eax": 1,
                "cmpl %ebx, %edi;jl  <INIT+>;movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, %eax": 1,
                "jmp - <INIT+>;subl %ecx, %eax;incl %eax;incl %eax;sarl %eax": 1,
                "calll - <ZwAllocateVirtualMemory>;movl %eax, %edi;cmpl %ebx, %edi;jl  <INIT+>;pushl %ebx": 1,
                "leal (%esi), %eax;pushl %eax;pushl %edi;pushl (%esi);pushl (%esi)": 1,
                "cmpl $, ;popl %ebx;jne  <KeFindConfigurationNextEntry+>;pushl $;pushl $": 1,
                "calll - <ExFreePoolWithTag>;addl $, %esi;decl %ebx;jne - <INIT+>;popl %esi": 1,
                "pushl %eax;movl $, -(%ebp);movl $, -(%ebp);calll - <ObOpenObjectByName+>;testl %eax, %eax": 2,
                "addb %dh, (%ebp);addb %ch, %fs:(%ecx);je  <INIT+>;imull $, (%eax), %eax;addb %al, (%eax)": 1,
                "pushl %eax;calll - <RtlInitString>;pushl $;leal -(%ebp), %eax;pushl %eax": 5,
                "popl %ebx;pushl $;pushl $;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl $;pushl $;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl $": 1,
                "leal -(%ebp), %eax;xorl %esi, %esi;pushl %eax;pushl $;movl %ebx, -(%ebp)": 1,
                "pushl $;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 2,
                "pushl %eax;calll - <RtlFreeUnicodeString>;cmpl %esi, %edi;jl  <INIT+>;pushl $": 1,
                "leal (,%edi,), %edi;pushl %edi;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax": 1,
                "testl %eax, %eax;jl  <INIT+>;pushl ;pushl $;pushl $": 1,
                "jl  <INIT+>;pushl ;pushl $;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl $;pushl -(%ebp);calll - <RtlAddAccessAllowedAce>;testl %eax, %eax": 1,
                "leave;retl;xorb %al, %al;jmp - <INIT+>;popl %esp": 1,
                "retl;xorb %al, %al;jmp - <INIT+>;popl %esp;pushl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx;calll - <MmIsThisAnNtAsSystem>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 4,
                "je  <KeFindConfigurationNextEntry+>;movl , %eax;imull $, %ecx, %ecx;cmpl $, %eax;movl %ecx, ": 1,
                "imull $, (%eax), %eax;insl %dx, %es:(%edi);addb %dl, (%eax,%eax);addb %ch, (%esi);outsb (%esi), %dx": 2,
                "addb %ah, (%edi);addb %cl, %gs:(%ecx);outsb (%esi), %dx;addb %dl, (%ebx);addb %ah, %gs:(%ebx)": 1,
                "pushl %esi;pushl $;calll - <ExInitializePagedLookasideList>;movl $, %eax;pushl $": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <NtClose>;pushl $;leal -(%ebp), %eax": 3,
                "calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 2,
                "cmpl %ebx, %eax;jl  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <ObFindHandleForObject+>;movl %eax, %esi;leal -(%ebp), %eax": 1,
                "popl %esp;addb %al, (%ecx);jb  <INIT+>;arpl %ax, (%eax);decl %esi": 1,
                "addb %dh, (%esi);imull $, (%eax), %eax;addb %al, (%eax);popl %esp;pushl %ebx": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);jne  <KeFindConfigurationNextEntry+>;pushl $": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "addb %dh, %gs:(%edx);addb %al, (%eax);incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "addb %al, (%eax);incl %esp;addb %ah, (%ebp);jbe  <INIT+>;imull $, (%eax), %eax": 1,
                "insl %dx, %es:(%edi);addb %dh, (%eax);insb %dx, %es:(%edi);addb %ah, (%ebp);je  <INIT+>": 1,
                "pushl -(%ebp);calll - <NtClose>;movb $, %al;popl %esi;leave": 1,
                "retl;xorb %al, %al;jmp - <INIT+>;nop;popl %esp": 1,
                "pushl %edi;pushl (%ebp);calll - <RtlUpperString+>;movl %eax, %ebx;cmpl %esi, %ebx": 2,
                "movl %eax, %ebx;jne  <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <ZwClose>;cmpl %esi, %ebx": 1,
                "leave;retl $;movl $, %ebx;jmp - <IoReportHalResourceUsage+>;cmpl %esi, -(%ebp)": 1,
                "cmpl %esi, -(%ebp);je - <IoReportHalResourceUsage+>;jmp  <KeFindConfigurationNextEntry+>;nop;decl %eax": 1,
                "pushl (%ebp);calll - <FsRtlOplockFsctrl+>;movl %eax, %esi;xorl %eax, %eax;cmpl %eax, %esi": 1,
                "calll - <ObfDereferenceObject>;movb $, %al;popl %esi;popl %ebp;retl $": 1,
                "popl %esi;popl %ebp;retl $;cmpb $, (%ebp);je  <KeFindConfigurationNextEntry+>": 1,
                "setge %al;retl;nop;nop;nop": 1,
                "jb  <IoReportHalResourceUsage+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx)": 1,
                "retl $;andl $, (%ebx);jmp  <KeFindConfigurationNextEntry+>;andl $, (%ebx);jmp  <KeFindConfigurationNextEntry+>": 1,
                "testl %eax, %eax;jl  <KeSetProfileIrql+>;pushl (%ebp);calll - <KeInitializeTimer+>;xorl %eax, %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <KeSetProfileIrql+>;andb $-, (%eax);movw $, (%eax)": 1,
                "leal (%esi), %edx;pushl $;leal (%esi), %edi;orl $-, %eax;movl $, %ecx": 1,
                "popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);popl %edi;movb $, (%edx)": 1,
                "leal (%ebx), %edi;movb $, (%edi);je  <KeFindConfigurationNextEntry+>;pushl %esi;leal -(%ebp), %eax": 1,
                "cmpb (%esi), %al;jne  <KeSetProfileIrql+>;addl %edi, %ecx;addl %edi, %esi;testb %dl, %dl": 1,
                "movl %cr, %eax;pushl %eax;pushfl;popl %ebx;pushl %ebx": 1,
                "jmp  <KeSetProfileIrql+>;movb $, %fs:;calll  <KeSetProfileIrql+>;jmp  <KeSetProfileIrql+>;orl $, %ebx": 1,
                "popl (%ecx);cmpl $, %eax;jb - <KeSetProfileIrql+>;movl $, %eax;cpuid": 1,
                "jne  <KeSetProfileIrql+>;cmpl $, %edx;jne  <KeSetProfileIrql+>;movl $, %eax;cpuid": 1,
                "movl %eax, %edx;movl %eax, %ecx;andl $, %edx;cmpl $, %edx;jne  <KeSetProfileIrql+>": 2,
                "cmpl $, %edx;jne  <KeSetProfileIrql+>;andl $, %ebx;jmp  <KeSetProfileIrql+>;movl $, %eax": 1,
                "popl (%ecx);popl (%ecx);jmp - <KeSetProfileIrql+>;movl $, (%esp);iretl": 1,
                "iretl;calll  <KeSetProfileIrql+>;jae  <KeSetProfileIrql+>;movw $, %ax;retl": 1,
                "jae  <KeSetProfileIrql+>;movw $, %ax;retl;calll  <KeSetProfileIrql+>;jae  <KeSetProfileIrql+>": 2,
                "retl;calll  <KeSetProfileIrql+>;jae  <KeSetProfileIrql+>;movw $, %ax;retl": 3,
                "movw $, %ax;retl;calll  <KeSetProfileIrql+>;orw %ax, %ax;je  <KeSetProfileIrql+>": 1,
                "movl %fs:, %ebx;pushl (%ebx);pushl (%ebx);movl $, %eax;movw %ax, (%ebx)": 3,
                "shrl $, %eax;movw %ax, (%ebx);movl %dr, %eax;nop;nop": 1,
                "movl $, (%esp);iretl;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "orw $, -(%ebp);fldcw -(%ebp);fldl -(%ebp);fldt -(%ebp);fscale": 1,
                "stc;jecxz  <KeSetProfileIrql+>;clc;popl (%ebx);popl (%ebx)": 1,
                "movw %ax, (%ebx);subl $, %esp;movl $, %esi;movl %esp, %edi;movl $, %ecx": 1,
                "xorl %edx, %edx;fninit;movl $, %ecx;pushl %ecx;movl %esp, %ebp": 1,
                "pushl %esi;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "testl %edx, %edx;jne  <KeFindConfigurationNextEntry+>;decl -(%ebp);jne  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;cmpl %ebx, (%esi);jbe  <KeSetProfileIrql+>": 1,
                "nop;movl $, %eax;movl %eax, ;movl %eax, ;retl": 2,
                "movsl (%esi), %es:(%edi);xorl %ebx, %ebx;pushl %eax;movl %ebx, ;movl $, -(%ebp)": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl %ebx;pushl %ecx": 1,
                "pushl %ecx;movl %edi, (%ecx);movl %ebx, (%ecx);movl %ebx, (%ecx);movl $, (%ecx)": 1,
                "calll - <ObInsertObject>;testl %eax, %eax;jl  <KeSetProfileIrql+>;pushl -(%ebp);calll - <NtClose>": 1,
                "jb  <KeSetProfileIrql+>;jns  <KeSetProfileIrql+>;addb %al, (%eax);int;int": 1,
                "addb %cl, (%ecx);subl $, %eax;inb %dx, %al;je  <KeSetProfileIrql+>;cmpl -(%ebp), %esi": 1,
                "inb %dx, %al;je  <KeSetProfileIrql+>;cmpl -(%ebp), %esi;je  <KeSetProfileIrql+>;movw %bx, (%esi)": 1,
                "movl (%ecx), %ecx;addl %edi, %ecx;leal (%ecx,%esi), %ecx;shrl $, %ecx;andl %edx, %ecx": 1,
                "incl %ebx;cmpb %bl, %al;je  <KeFindConfigurationNextEntry+>;cmpl $, ;jne  <KeFindConfigurationNextEntry+>": 1,
                "pushl %edi;movl (%eax), %ecx;cmpl $, %ecx;je  <KeSetProfileIrql+>;cmpl $, %ecx": 1,
                "cmpl %esi, %eax;jne - <KeSetProfileIrql+>;popl %edi;popl %esi;popl %ebx": 1,
                "cmpl %ecx, (%ebp);je  <KeSetProfileIrql+>;cmpl $, %eax;jbe  <KeFindConfigurationNextEntry+>;movl $, ": 1,
                "movb $, ;movl $, ;movl %eax, ;movl %eax, ;popl %ebp": 1,
                "xorl %ecx, %ecx;incl %ecx;movl $, %esi;movl $, %eax;pushl %esi": 1,
                "incl %ecx;movl $, %esi;movl $, %eax;pushl %esi;pushl %ecx": 1,
                "decl -(%ebp);jne - <KeSetProfileIrql+>;movl %ecx, (%eax);addl $, %eax;addl $, %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %edi;calll - <RtlGetAce>": 1,
                "pushl %ebx;pushl %edi;calll - <RtlGetAce>;movl -(%ebp), %eax;orb $, (%eax)": 1,
                "pushl %eax;pushl (%ebp);pushl $;pushl ;pushl (%ebp)": 1,
                "pushl $;calll - <IoRegisterPlugPlayNotification>;popl %ebp;retl $;movl $, ": 1,
                "nop;nop;pushl $;calll - <KeInitializeSpinLock>;orl $-, ": 1,
                "xorl %ebx, %ebx;movl $, %eax;movl %eax, ;movl %eax, ;movl $, %eax": 1,
                "calll - <KeInitializeDpc>;pushl $;movl $, ;movl %ebx, ;movl %ebx, ": 1,
                "cmpl %edi, %ebx;jl  <KeFindConfigurationNextEntry+>;pushl ;calll - <IoRegisterShutdownNotification>;movl %eax, %ebx": 1,
                "addb %dh, (%edi);incl %esp;addb %ch, (%ecx);jae  <KeSetProfileIrql+>;imull $, (%eax), %eax": 1,
                "pushl -(%ebp);pushl ;calll - <RtlCreateAcl>;pushl %edi;pushl -(%ebp)": 2,
                "pushl %ebx;pushl ;calll - <RtlCreateAcl>;pushl %edi;pushl -(%ebp)": 1,
                "pushl %edi;pushl ;calll - <RtlAddAccessAllowedAce>;pushl ;pushl %esi": 11,
                "calll - <RtlSetDaclSecurityDescriptor>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "movl $, -(%ebp);calll - <ObCreateObjectType>;cmpl $, ;popl %edi;popl %esi": 1,
                "testl %eax, %eax;setge %al;leave;retl;pushl %esp": 1,
                "pushl %esi;movzbl (%eax), %esi;movl , %eax;movzbl (%eax), %eax;addl %eax, %esi": 1,
                "calll - <RtlAddAccessAllowedAce>;movl %eax, %esi;testl %esi, %esi;jl  <KeSetProfileIrql+>;pushl ": 2,
                "movl %eax, %esi;testl %esi, %esi;jl  <KeSetProfileIrql+>;pushl ;pushl %edi": 1,
                "pushl $;pushl %eax;movl %eax, ;calll - <RtlCreateSecurityDescriptor>;pushl $": 1,
                "calll - <RtlCreateSecurityDescriptor>;pushl $;pushl %ebx;pushl $;pushl ": 1,
                "pushl ;pushl ;calll - <RtlSetOwnerSecurityDescriptor>;movl %eax, %esi;testl %esi, %esi": 1,
                "jl  <KeSetProfileIrql+>;pushl $;pushl ;pushl ;calll - <RtlSetGroupSecurityDescriptor>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <ObCreateObjectType>;movl %eax, %esi;testl %esi, %esi": 1,
                "movb $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movb $-, -(%ebp)": 1,
                "pushl %ebx;movsl (%esi), %es:(%edi);calll - <IoGetDeviceProperty+>;testl %eax, %eax;popl %edi": 1,
                "popl %edi;popl %esi;jl  <KeFindConfigurationNextEntry+>;movl , %ecx;movl (%ecx), %eax": 1,
                "decl %ebp;addb %ch, (%edi);addb %dl, (%edx);addb %dh, %gs:(%ebx);outsl (%esi), %dx": 1,
                "pushl $;movl $, ;movl %eax, ;movl %eax, ;calll - <KeInitializeSpinLock>": 1,
                "calll - <ExInitializeResourceLite>;retl;nop;nop;nop": 2,
                "setge %al;popl %esi;leave;retl;nop": 3,
                "pushl %eax;movl $, -(%ebp);calll - <ZwLoadKey+>;cmpb %bl, ;jne  <KeFindConfigurationNextEntry+>": 1,
                "movl , %eax;imull $, %eax, %eax;pushl %ebx;cltd;pushl $": 1,
                "movl $, ;movl %ebx, ;movl %ebx, ;calll - <RtlInitUnicodeString>;leal -(%ebp), %eax": 2,
                "pushl %esi;movl %eax, ;movl %ecx, ;calll - <KeSetTimer>;pushl $": 1,
                "jb  <KeSetProfileIrql+>;jns  <KeSetProfileIrql+>;popl %esp;addb %cl, (%ebp);popal": 1,
                "jns  <KeSetProfileIrql+>;popl %esp;addb %cl, (%ebp);popal;addb %ah, (%ebx)": 1,
                "addb %ch, (%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%ebx);jae  <KeSetProfileIrql+>;imull $, (%eax), %eax": 1,
                "addb %al, (%ebp);js  <KeSetProfileIrql+>;addb %ah, %gs:(%ebx);jne  <KeSetProfileIrql+>;je  <KeSetProfileIrql+>": 1,
                "js  <KeSetProfileIrql+>;addb %ah, %gs:(%ebx);jne  <KeSetProfileIrql+>;je  <KeSetProfileIrql+>;imull $, (%eax), %eax": 1,
                "popl %esi;jne  <KeFindConfigurationNextEntry+>;pushl $;popl %eax;cmpl %eax, ": 1,
                "cmpl %eax, ;ja  <KeFindConfigurationNextEntry+>;pushl %edi;pushl $;popl %ecx": 1,
                "ja  <KeFindConfigurationNextEntry+>;pushl %edi;pushl $;popl %ecx;xorl %eax, %eax": 1,
                "xorl %eax, %eax;movl $, %edi;rep  stosl %eax, %es:(%edi);movl $, %edi;pushl %ebx": 1,
                "pushl %eax;calll - <KeInitializeQueue>;orl $, (%edi);addl $, %edi;cmpl $, %edi": 1,
                "jbe  <KeSetProfileIrql+>;pushl %ebx;pushl %ebx;calll - <IoDisconnectInterrupt+>;testl %eax, %eax": 1,
                "cmpl %ebx, %esi;popl %edi;jl  <KeSetProfileIrql+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl %eax, %esi;calll - <ZwClose>;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "cmpb %bl, -(%ebp);jne  <KeFindConfigurationNextEntry+>;jmp - <KeSetProfileIrql+>;nop;nop": 1,
                "addl (%eax), %eax;popl %ds;addb %dl, -(%eax);xorl %ecx, %ecx;movl $, %eax": 1,
                "movl %ecx, ;movl %eax, ;movl %eax, ;movb %cl, ;calll - <KeQuerySystemTime>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%eax), %eax;pushl %esi": 1,
                "pushl %esi;pushl %edi;pushl $;calll - <KeInitializeSpinLock>;movl $, %eax": 1,
                "int;addb %al, (%eax);adcb (%eax), %al;addb %al, (%eax);adcb (%eax), %al": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %al, (%eax);adcb (%eax), %al;addl %eax, (%eax)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, %esi": 3,
                "pushl %eax;movl %edi, -(%ebp);movl %edi, -(%ebp);movb $, -(%ebp);calll - <ObCreateObjectType>": 1,
                "pushl ;addl %eax, %esi;calll - <RtlLengthSid>;leal (%esi,%eax), %eax;pushl $": 1,
                "pushl -(%ebp);pushl %esi;calll - <RtlCreateAcl>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "pushl %esi;calll - <RtlAddAccessAllowedAce>;cmpl %edi, %eax;movl %eax, -(%ebp);jl  <KeSetProfileIrql+>": 2,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %edi": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "jns  <KeSetProfileIrql+>;addb %ah, %gs:(%eax,%eax);addb %dh, (%esi);addb %ch, %gs:(%esi);je  <KeSetProfileIrql+>": 1,
                "je  <KeSetProfileIrql+>;jae  <KeSetProfileIrql+>;popl %esp;addb %al, (%ebx);jb  <KeSetProfileIrql+>": 1,
                "movl , %esi;pushl $;xorl %edx, %edx;movl %esi, %eax;popl %ecx": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl $;movl %esi, %eax;xorl %edx, %edx;popl %ecx": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;calll  <KeFindConfigurationNextEntry+>;testl %eax, %eax": 1,
                "pushl %ebx;pushl (%ebp);seta %bl;pushl %eax;calll - <MmUnmapIoSpace>": 1,
                "jl  <KeFindConfigurationNextEntry+>;xorl %edi, %edi;jmp  <KeFindConfigurationNextEntry+>;nop;nop": 1,
                "addb %al, (%eax);rorb ;addb %al, (%eax);enter $, $;orl %eax, (%eax)": 1,
                "addb %cl, (%ecx);incl %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ch, (%eax,%eax);addb %dh, (%ebx);jae  <KeSetProfileIrql+>;addb %al, (%eax);pushl %eax": 1,
                "addb %ch, (%eax,%eax);addb %ah, (%ebp);jb  <KeSetProfileIrql+>;addb %al, (%eax);nop": 1,
                "addb %ah, (%eax,%eax);addb %dh, (%eax);je  <KeSetProfileIrql+>;addb %dh, %gs:(%edx);addb %al, (%eax)": 1,
                "jbe  <KeSetProfileIrql+>;addb %dl, -(%eax);jbe  <KeSetProfileIrql+>;addb %dl, -(%eax);pushl %edx": 1,
                "jae  <KeSetProfileIrql+>;jmp  <KeSetProfileIrql+>;movl %eax, %edi;movl %edi, %ecx;calll - <IoAllocateIrp+>": 1,
                "addl %ecx, %eax;cmpl %eax, -(%ebp);jae  <KeSetProfileIrql+>;movl , %ecx;leal (%edi,%edi,), %eax": 1,
                "cmpl %eax, -(%ebp);jae  <KeSetProfileIrql+>;movl , %ecx;leal (%edi,%edi,), %eax;leal (%ecx,%eax,), %edi": 1,
                "movl -(%ebp), %ecx;andl $, %eax;xorl %eax, (%esi);incl (%esi);movw $, (%esi)": 1,
                "andl %ebx, %ecx;orl $, %eax;subl $, %ecx;movl %edi, (%esi);movl %eax, (%esi)": 1,
                "jmp - <KeSetProfileIrql+>;movb (%eax), %cl;cmpb $, %cl;jl  <KeSetProfileIrql+>;cmpb $, %cl": 1,
                "jg  <KeSetProfileIrql+>;movb -(%eax), %cl;cmpb $, %cl;jl  <KeSetProfileIrql+>;cmpb $, %cl": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);je  <KeFindConfigurationNextEntry+>;movl (%ebp), %edx": 1,
                "cmpl %edx, %eax;ja  <KeSetProfileIrql+>;incl %eax;incl %eax;xorl %edx, %edx": 1,
                "cmpl $, (%eax);jne - <KeSetProfileIrql+>;movl , %eax;jmp - <KeSetProfileIrql+>;nop": 1,
                "adcb %bl, (%ebp);incl %esp;adcb %bl, (%ebp);incl %eax;adcb %bl, (%ebp)": 1,
                "je  <KeFindConfigurationNextEntry+>;cmpl %esi, ;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "cmpl -(%ebp), %eax;jne  <KeSetProfileIrql+>;cmpl %esi, -(%ebp);je  <KeFindConfigurationNextEntry+>;movl , %edx": 1,
                "leal (%ecx,%eax,), %esi;testw $, %si;je  <KeSetProfileIrql+>;movl %esi, %edi;andl $, %edi": 1,
                "subl %eax, %ecx;movl (%ebp), %eax;addl %ecx, %esi;subl %esi, %eax;pushl $": 1,
                "pushl %eax;calll - <MmAllocateContiguousMemory+>;movl , %eax;cmpl %edi, %eax;jne  <KeFindConfigurationNextEntry+>": 1,
                "cmpl %edi, %eax;jne  <KeFindConfigurationNextEntry+>;movl $, %esi;cmpl $-, ;jne  <KeFindConfigurationNextEntry+>": 1,
                "cmpl $-, ;jne  <KeFindConfigurationNextEntry+>;movl , %eax;cmpl %edi, %eax;jne  <KeFindConfigurationNextEntry+>": 2,
                "andl %esi, %edi;orl %edi, %eax;movl %eax, ;calll - <KiDispatchInterrupt+>;movb (%ebp), %cl": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %eax;movl %eax, ;movl $, ;movl (%eax), %ecx": 1,
                "movl %edi, ;pushl $;xorl %eax, %eax;popl %ecx;rep  stosl %eax, %es:(%edi)": 1,
                "popl %ecx;rep  stosl %eax, %es:(%edi);movl , %eax;movl (%eax), %ecx;andl %esi, %ecx": 1,
                "movl , %edi;movl %eax, %edx;movl -(%ebp), %eax;shrl $, %edi;andl %ebx, %edi": 1,
                "calll *;movl , %eax;movl %eax, (%edi);movl , %eax;movl %eax, (%edi)": 1,
                "calll - <wcsstr+>;cmpl $, ;movl , %eax;jne  <KeFindConfigurationNextEntry+>;movl , %ecx": 1,
                "addl %esi, %ecx;cmpl %esi, %edi;jae - <KeSetProfileIrql+>;movl (%eax), %eax;incl %edx": 1,
                "incl %edx;cmpl $, %eax;jne - <KeSetProfileIrql+>;movl (%ebx), %eax;cmpl %esi, %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <RtlInitUnicodeString>;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;movl , %esi;cmpl $, %esi": 1,
                "movl %eax, -(%ebp);je  <KeSetProfileIrql+>;movl -(%ebp), %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl (%esi);calll - <RtlImageDirectoryEntryToData>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "xorl %esi, %esi;xorl %edx, %edx;cmpl %esi, -(%ebp);movl %ecx, -(%ebp);jbe - <KeSetProfileIrql+>": 1,
                "cmpl %eax, %esi;je  <KeSetProfileIrql+>;movl (%esi), %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "calll - <RtlSubAuthoritySid+>;testl %eax, %eax;jl  <KeSetProfileIrql+>;pushl $;leal -(%ebp), %eax": 1,
                "movl (%esi), %esi;addl %edi, %eax;jmp - <KeSetProfileIrql+>;cmpb $, (%esi);jne  <KeSetProfileIrql+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;popl %edi;movl %ebx, %eax;popl %esi": 1,
                "movl (%ebp), %esi;pushl %edi;pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "cmpl $-, %edi;je  <KeSetProfileIrql+>;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "popl %edi;popl %esi;leave;retl $;orl $-, %eax": 1,
                "cmpl %eax, %ecx;sbbl %eax, %eax;negl %eax;cmpl %edi, %ecx;sbbl %ecx, %ecx": 1,
                "sbbl %eax, %eax;negl %eax;cmpl %edi, %ecx;sbbl %ecx, %ecx;negl %ecx": 1,
                "movb (%esi), %cl;cmpb $, %cl;jl  <KeFindConfigurationNextEntry+>;cmpb $, %cl;jg  <KeFindConfigurationNextEntry+>": 1,
                "cmpb $, %cl;jl  <KeFindConfigurationNextEntry+>;cmpb $, %cl;jg  <KeFindConfigurationNextEntry+>;movb (%esi), %al": 1,
                "jl  <KeFindConfigurationNextEntry+>;cmpb $, %cl;jg  <KeFindConfigurationNextEntry+>;movb (%esi), %al;cmpb $, %al": 1,
                "cmpb $, (%esi);je - <KeSetProfileIrql+>;movl -(%ebp), %edi;incl %esi;incl %edi": 1,
                "movl %edi, -(%ebp);jb - <KeSetProfileIrql+>;cmpb $, -(%ebp);je  <KeFindConfigurationNextEntry+>;pushl $": 1,
                "cmpb $, -(%ebp);je  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movb -(%ebp), %al;movb %al, (%ebx);movb -(%ebp), %al;movb %al, (%ebx);addl $, %esp": 1,
                "movl (%ecx), %esi;jmp  <KeSetProfileIrql+>;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "popl %esi;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *-(%ebp)": 1,
                "pushl %eax;calll - <IoCheckEaBufferValidity+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>;movl (%ebp), %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <IoOpenDeviceRegistryKey+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %esi;xorl %edi, %edi;pushl %edi;xorl %ebx, %ebx;incl %ebx": 1,
                "cmpl %edi, %esi;je  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ecx;movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;leal -(%eax,%ebx), %eax": 1,
                "testl %eax, %eax;je  <KeSetProfileIrql+>;shrl $, (%ebp);movl $, (%ebp);je  <KeSetProfileIrql+>": 1,
                "imull $, (%eax), %eax;insb %dx, %es:(%edi);addb %ah, (%eax);addb %cl, (%ebp);addb %ch, %gs:(%ebp)": 1,
                "pushl $;subl $, %eax;movl $, %edi;pushl %edi;sbbl %ecx, %ecx": 1,
                "pushl $;movl %edi, -(%ebp);calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "rep  stosb %al, %es:(%edi);movl -(%ebp), %eax;xorl %edi, %edi;movl %esi, (%ebx);movl $, (%ebx)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;addl $, %edx;incl -(%ebp);movl %edx, -(%esi)": 1,
                "addl $, %eax;cmpl (%ecx), %edx;movl %eax, -(%ebp);jb - <KeSetProfileIrql+>;xorl %edi, %edi": 1,
                "addb %bh, (%ecx);jae  <KeSetProfileIrql+>;je  <KeSetProfileIrql+>;addb %ch, %gs:(%ebp);andb %al, (%eax)": 1,
                "jae  <KeSetProfileIrql+>;je  <KeSetProfileIrql+>;addb %ch, %gs:(%ebp);andb %al, (%eax);pushl %edx": 1,
                "je  <KeSetProfileIrql+>;addb %ch, %gs:(%ebp);andb %al, (%eax);pushl %edx;addb %ah, (%ebp)": 1,
                "jbe  <KeSetProfileIrql+>;addb %ah, %gs:(%eax,%eax);addb %ch, (%eax);andl (%ebp), %ebx;leal -(%ebp), %eax": 1,
                "leal (%esi), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax;je  <KeSetProfileIrql+>;movl (%eax), %eax": 1,
                "addl $, %esi;movl (%esi), %eax;orl $-, %ecx;cmpl %esi, %eax;movl %esi, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl (%ebp), %ebx;movl (%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "incl %eax;incl %ecx;incl %ecx;cmpl %esi, %eax;jne - <KeSetProfileIrql+>": 1,
                "movl (%ebx), %eax;movl (%eax,%edi,), %eax;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>;movl %esi, %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebx), %edx;movl %eax, %ecx": 1,
                "incl %eax;movl %eax, (%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;je  <KeSetProfileIrql+>": 1,
                "pushl %ebx;movl (%eax), %ebx;cmpl %eax, %ebx;je - <KeSetProfileIrql+>;pushl %esi": 1,
                "addl $, %esi;subl $, %edi;shrl $, %esi;movl %edi, -(%ebp);movl %esi, -(%ebp)": 1,
                "jne  <KeFindConfigurationNextEntry+>;calll *;xorl %edx, %edx;xorl %ecx, %ecx;movb %al, -(%ebp)": 1,
                "leal (%ecx,%eax,), %eax;movb -(%ebp), %cl;orl $, (%eax);andl $, (%eax);calll *": 1,
                "movl %ecx, (%ebx);movl %esi, (%ebx);calll - <RtlSubAuthoritySid+>;movl -(%ebp), %eax;shrl $, %eax": 1,
                "movl (%ebp), %esi;movl $, %ecx;shrl $, %edx;shrl $, %esi;movl $, %eax": 1,
                "movl , %edi;andl %ecx, %edx;andl %ecx, %esi;subl %eax, %edx;subl %eax, %esi": 1,
                "andl %ecx, %esi;subl %eax, %edx;subl %eax, %esi;movl %edx, -(%ebp);orl $, %edi": 1,
                "cmpl $, (%ebp);jb - <KeSetProfileIrql+>;cmpl $, -(%ebp);je  <KeSetProfileIrql+>;shll $, %eax": 1,
                "movl (%ebp), %eax;invlpg (%eax);movl , %ecx;movl %esi, %eax;shrl $, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %edi;xorl %edi, %edi;cmpl %edi, ": 1,
                "subl $, %esp;pushl %edi;xorl %edi, %edi;cmpl %edi, ;je  <KeFindConfigurationNextEntry+>": 1,
                "je  <KeFindConfigurationNextEntry+>;cmpl %edi, (%ebp);je - <KeSetProfileIrql+>;leal (%ebp), %eax;pushl %eax": 1,
                "cmpl $, %eax;jle - <KeSetProfileIrql+>;cmpl $, %eax;je - <KeSetProfileIrql+>;cmpl $, %eax": 1,
                "leal (%ecx,%eax), %edi;movl %edi, %ecx;shrl $, %ecx;andl %ebx, %ecx;leal (%esi,%esi,), %eax": 1,
                "shrl $, %edx;andl $, %edx;movl -(%edx), %edx;shrl $, %edx;andl $, %edi": 1,
                "addl %esi, (%ebp);addl $, %eax;addl $, %ecx;decl -(%ebp);jne - <KeSetProfileIrql+>": 1,
                "addl $, %ecx;decl -(%ebp);jne - <KeSetProfileIrql+>;jmp - <KeSetProfileIrql+>;cmpl $, %eax": 1,
                "jmp - <KeSetProfileIrql+>;cmpl $, %eax;jg - <KeSetProfileIrql+>;jmp - <KeSetProfileIrql+>;nop": 1,
                "andl $, (%eax);pushl %esi;movl (%ebp), %esi;pushl %edi;pushl %esi": 1,
                "addl $, %eax;pushl %eax;calll - <RtlEqualString>;testb %al, %al;jne  <KeSetProfileIrql+>": 1,
                "movl (%edi), %edi;jmp - <KeSetProfileIrql+>;movl %edi, (%ebx);calll - <INIT+>;movl (%ebp), %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %ecx;movzwl (%ecx), %ecx;shrl %ecx;andw $, (%eax,%ecx,)": 1,
                "movl (%ebp), %eax;movl (%ebx), %edi;xorl %esi, %esi;cmpl %esi, %eax;je - <INIT+>": 1,
                "je - <INIT+>;movw (%eax), %dx;cmpw %si, %dx;je - <INIT+>;movl (%eax), %ecx": 1,
                "movl %eax, (%edi);movl %ecx, %edx;addl $, %edi;movw %si, (%edi);movl (%ebp), %esi": 1,
                "movw %si, (%edi);movl (%ebp), %esi;shrl $, %ecx;movl %edi, (%ebp);movl %eax, %edi": 1,
                "pushl $;pushl (%ebp);shrl %ecx;andw $, (%eax,%ecx,);pushl $": 1,
                "pushl -(%ebp);calll - <NtClose>;xorl %edi, %edi;cmpl %edi, %esi;jl  <KeFindConfigurationNextEntry+>": 1,
                "calll - <RtlUpperString+>;popl %ebp;retl $;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl (%esi), %ebx;movl (%ebx), %edi;leal -(%ebp), %eax;pushl %eax;movb $, (%esi)": 1,
                "jl  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;cmpl $, (%eax);je  <KeFindConfigurationNextEntry+>;movw (%eax), %cx": 1,
                "cmpl $, (%eax);je  <KeFindConfigurationNextEntry+>;movw (%eax), %cx;movw %cx, -(%ebp);movw %cx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);calll - <INIT+>;movl %eax, -(%ebp)": 1,
                "calll - <KeSetProfileIrql+>;movl %eax, (%esi);movl -(%ebp), %ecx;testl %ecx, %ecx;je  <KeFindConfigurationNextEntry+>": 1,
                "movl , %ecx;movl (%esi), %esi;addl %ecx, %eax;jmp  <KeSetProfileIrql+>;incl %edi": 1,
                "pushl $;popl %eax;pushl %eax;movl %eax, -(%ebp);pushl %ebx": 1,
                "calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;jl  <KeFindConfigurationNextEntry+>;pushl %esi;movl -(%ebp), %esi": 1,
                "movl %eax, (%ecx);movl (%esi), %ecx;movl %ecx, -(%ebp);jne  <KeFindConfigurationNextEntry+>;cmpl %edi, %ecx": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);je  <KeFindConfigurationNextEntry+>": 1,
                "movl %ecx, (%eax);pushl ;movl %eax, -(%ebp);pushl $;pushl $": 1,
                "calll - <RtlFillMemoryUlong>;movl (%ebp), %ecx;movl , %esi;addl $, %ecx;movl %edi, ": 1,
                "movl %esi, ;movl (%eax), %edx;cmpl , %edx;jb - <KeSetProfileIrql+>;movl (%eax), %edx": 1,
                "cmpl $, %edx;je  <KeSetProfileIrql+>;movl (%eax), %eax;jmp - <KeSetProfileIrql+>;movl (%eax), %edx": 1,
                "jmp - <KeSetProfileIrql+>;movl (%edi), %eax;cmpl (%ebp), %eax;jne  <KeFindConfigurationNextEntry+>;movl (%edi), %eax": 1,
                "movl (%esi), %eax;andl -(%ebp), %eax;cmpl -(%ebp), %eax;jne  <KeFindConfigurationNextEntry+>;movl %esi, %eax": 1,
                "jne  <KeFindConfigurationNextEntry+>;movl %esi, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %edi;movl (%ebp), %edi;testl %edi, %edi;je  <KeFindConfigurationNextEntry+>;movl (%ebp), %ebx": 1,
                "pushl %ebx;xorl %ebx, %ebx;incl %ebx;cmpb %bl, ;movb $, -(%ebp)": 1,
                "cmpb %bl, ;movb $, -(%ebp);je  <KeFindConfigurationNextEntry+>;pushl $;calll - <KeInitializeSpinLock>": 1,
                "calll - <KeInitializeSpinLock>;cmpl $, ;jne  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl %eax;calll - <_strupr>;popl %ecx;testl %eax, %eax": 1,
                "movb %al, -(%ebp);pushl -(%ebp);calll - <_strupr+>;testb %al, %al;movb %al, ": 1,
                "jb  <KeFindConfigurationNextEntry+>;pushl %esi;movl $, %esi;pushl %ebx;pushl (%ebp)": 1,
                "pushl $;pushl $;calll - <InbvEnableDisplayString+>;movb , %al;popl %edi": 1,
                "jmp - <KeFindConfigurationNextEntry+>;nop;incl %edx;decl %edi;decl %edi": 1,
                "incl %edi;decl %edi;addb %cl, %ah;int;int": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "addb %dl, (%ebx);decl %ebx;addb %dl, (%edx);decl %esi;addb %cl, (%eax,%eax)": 1,
                "addb %al, (%eax);decl %esi;addb %dl, (%eax,%eax);addb %dl, (%edx);decl %esi": 1,
                "cmpl -(%ebp), %esi;jb - <KeFindConfigurationNextEntry+>;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp - <KeSetProfileIrql+>": 1,
                "cmpl %edi, %esi;je  <KeFindConfigurationNextEntry+>;cmpl $, (%esi);je - <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax": 1,
                "cmpl $, (%esi);je - <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "calll  <KeFindConfigurationNextEntry+>;cmpl %edi, %eax;jl  <KeFindConfigurationNextEntry+>;movl (%esi), %eax;cmpl %edi, %eax": 1,
                "xorl %esi, %esi;pushl %esi;pushl %esi;pushl $;leal -(%ebp), %eax": 2,
                "movl %eax, ;je  <KeFindConfigurationNextEntry+>;xorl %ecx, %ecx;cmpl %esi, ;jbe  <KeFindConfigurationNextEntry+>": 1,
                "movl , %edx;leal (%edx,%eax,), %eax;incl %ecx;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "jne  <KeFindConfigurationNextEntry+>;movl (%esi), %esi;jmp - <KeFindConfigurationNextEntry+>;popl %esp;addb %al, (%esi)": 1,
                "popl %esp;addb %dl, (%edx);incl %ecx;addb %dl, (%edi);addb %al, (%eax)": 1,
                "leal (%ecx), %eax;cmpl , %eax;movl %eax, -(%ebp);ja  <KeFindConfigurationNextEntry+>;movl , %edi": 1,
                "cmpl %edi, %esi;je  <KeFindConfigurationNextEntry+>;pushl %esi;calll - <_strupr>;movl $, (%esp)": 1,
                "movl $, (%esp);pushl %esi;calll - <strstr>;cmpl %edi, %eax;popl %ecx": 2,
                "cmpl %edi, %eax;popl %ecx;popl %ecx;jne  <KeFindConfigurationNextEntry+>;pushl $": 1,
                "popl %ecx;jne  <KeFindConfigurationNextEntry+>;pushl $;pushl %esi;calll - <strstr>": 1,
                "pushl $;pushl %esi;calll - <strstr>;cmpl %edi, %eax;popl %ecx": 1,
                "sti;movl %edi, -;pushl (%ebx);leal -(%ebp), %eax;pushl $": 1,
                "pushl (%ebx);leal -(%ebp), %eax;pushl $;pushl %eax;calll - <sprintf>": 1,
                "movl %eax, ;pushl $;pushl (%ebx);calll - <KeSetProfileIrql+>;andb $-, ": 1,
                "jne  <KeFindConfigurationNextEntry+>;movl , %eax;cmpl %edi, %eax;je  <KeFindConfigurationNextEntry+>;decl %eax": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll - <DbgLoadImageSymbols>;incl -(%ebp)": 1,
                "cmpb , %ah;addb %ah, ;jns  <KeFindConfigurationNextEntry+>;je  <KeFindConfigurationNextEntry+>;insl %dx, %es:(%edi)": 1,
                "addb %ah, %ah;xchgb %al, (%ebx);pushfl;xchgb %al, (%ebx);jo - <KeFindConfigurationNextEntry+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ch, -(%eax)": 1,
                "addb %dl, (%ebp,%eax,);addb %ah, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %al;testb %al, (%ebx);movsb (%esi), %es:(%edi)": 1,
                "addb %al, (%eax);addb %bh, %al;testb %al, (%ebx);addb $, (%ebx,%eax,);addb %al, (%eax)": 1,
                "addb %bh, %al;testb %al, (%ebx);addb $, (%ebx,%eax,);addb %al, (%eax);addb %al, (%eax)": 1,
                "testb %al, (%ebx);sbbb %al, (%ebx,%eax,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %al;testb %al, (%ebx);addb $-, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %al;testb %al, (%ebx);movb , %al": 1,
                "addb %al, (%eax);addb %bh, %al;testb %al, (%ebx);movb , %al;testl %ecx, (%eax)": 1,
                "clc;testb %al, (%ebx);addb $, -(%ebx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %al;testb %al, (%ebx);adcb $-, %al;incl %ebx;addb %cl, (%eax)": 1,
                "lock;addb $-, (%ebx);movl %ecx, (%eax);insb %dx, %es:(%edi);orl $, %eax": 1,
                "testb %al, (%ebx);xchgl %esp, %eax;addb $-, (%ebx);incl %eax;decl %eax": 1,
                "addb %ch, (%eax);cmpsl %es:(%edi), (%esi);incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addl $, (%ebx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "decl %esp;addl $, (%ebx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "testb %al, (%ebx);adcb $-, %al;incl %ebx;addb %dh, (%esp);addb %al, (%eax)": 1,
                "adcb $-, %al;incl %ebx;addb %dh, (%esp);addb %al, (%eax);addb %al, (%eax)": 1,
                "testb %al, (%ebx);enter $, $;inb %dx, %al;movl %ecx, (%eax);addb %al, (%eax)": 1,
                "inb %dx, %al;movl %ecx, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb $, (%ebx);orl %ebx, (%ebp);inb $, %al;incl %edi;addb %ah, (%eax)": 1,
                "stosl %eax, %es:(%edi);incl %edi;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %al;testb %al, (%ebx);orb %al, -(%eax)": 1,
                "addb %al, (%eax);addb %bh, %al;testb %al, (%ebx);cmpb $, (%edi);addb $-, %al": 1,
                "addb %bh, %al;testb %al, (%ebx);decl %esp;jg  <KeFindConfigurationNextEntry+>;addb %bl, (%eax)": 1,
                "jg  <KeFindConfigurationNextEntry+>;addb %bl, %al;jle  <KeFindConfigurationNextEntry+>;addb %bh, (%edx,%esi,);addb %al, (%eax)": 1,
                "addb %ch, (%eax);incl %ebx;addb %dh, -(%eax);decl %eax;addb %dl, (%ecx,%ecx,)": 1,
                "jle  <KeFindConfigurationNextEntry+>;addb %bl, (%esi,%edi,);incl %ebx;addb %bl, (%eax);movb $, %al": 1,
                "addb %bl, (%eax,%esi,);incl %edi;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jge  <KeFindConfigurationNextEntry+>;addb %cl, %al;leave;incl %edi;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %al": 4,
                "jnp  <KeFindConfigurationNextEntry+>;addb %cl, (%eax,%ebp,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "sarb $, (%ebx,%eax,);jnp  <KeFindConfigurationNextEntry+>;addb %dl, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jnp  <KeFindConfigurationNextEntry+>;addb %dl, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);sarb $, (%ebx,%eax,);jnp  <KeFindConfigurationNextEntry+>;addb %ah, (%eax);addb %al, (%eax)": 1,
                "sarb $, (%ebx,%eax,);jp  <KeFindConfigurationNextEntry+>;addb %ch, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, -(%eax);jns  <KeFindConfigurationNextEntry+>;addb %al, %ah;testb $, %al": 1,
                "addb %al, %ah;testb $, %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dl, (%eax);jns  <KeFindConfigurationNextEntry+>;addb %cl, %ah": 1,
                "addb %dl, (%eax);jns  <KeFindConfigurationNextEntry+>;addb %cl, %ah;testb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, (%eax);js  <KeFindConfigurationNextEntry+>;addb %ah, %al;testb $, %al": 1,
                "addb %ch, %ah;testb $, %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jbe  <KeFindConfigurationNextEntry+>;addb %cl, (%eax);incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%edi,%esi,);incl %ebx;addb %bh, (%esi,%esi,)": 1,
                "addb %cl, (%edi,%esi,);incl %ebx;addb %bh, (%esi,%esi,);decl %eax;addb %al, (%eax)": 1,
                "incl %ebx;addb %al, (,%ebp,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "inb $, %al;incl %ebx;addb %cl, (%eax);incl %ebx;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, %ah;xchgb %al, (%ebx);addb %ah, %al;movsb (%esi), %es:(%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dh, %ah": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dh, %ah;fimuls (%edi)": 2,
                "movb $, %dh;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "hlt;je  <KeFindConfigurationNextEntry+>;addb %ch, %al;sbbl %ebx, (%esi);addb %al, (%eax)": 1,
                "je  <KeFindConfigurationNextEntry+>;addb %cl, %ah;je  <KeFindConfigurationNextEntry+>;addb %ah, %ah;adcb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ah, %ah;je  <KeFindConfigurationNextEntry+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ah, %ah;je  <KeFindConfigurationNextEntry+>;addb %ch, (%esp,%esi,)": 1,
                "addb %ch, (%eax);popl %ebp;addb %al, -(%eax);pushl %edi;popl %ebp": 1,
                "addb %bh, -(%ebx,%esi,);incl %edi;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%eax);jae  <KeFindConfigurationNextEntry+>;addb %dh, %ah;jb  <KeFindConfigurationNextEntry+>": 1,
                "addb %cl, (%eax);jae  <KeFindConfigurationNextEntry+>;addb %dh, %ah;jb  <KeFindConfigurationNextEntry+>;addb %dl, (%eax)": 1,
                "addb %cl, (%esi,%ebp);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb %dh, (%ebx)": 1,
                "orb %dh, (%ebx);addb %al, %ah;jb  <KeFindConfigurationNextEntry+>;addb %dl, (%esi,%ebp);addb %al, (%eax)": 1,
                "addb %dl, (%esi,%ebp);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb %dh, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb %dh, (%ebx);addb %dh, -(%eax)": 1,
                "clc;jno  <KeFindConfigurationNextEntry+>;addb %cl, %al;jno  <KeFindConfigurationNextEntry+>;addb %bl, (%ecx,%ebp,)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ah, %ah;xchgb %al, (%ebx);movb , %al": 1,
                "addb %bh, (%ecx,%esi,);addb %cl, (%eax);decl %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%eax);jno  <KeFindConfigurationNextEntry+>;addb %ah, %al;jo  <KeFindConfigurationNextEntry+>": 1,
                "addb %ah, (%ebp,%eax,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jo  <KeFindConfigurationNextEntry+>;addb %ch, -(%eax);incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "jno  <KeFindConfigurationNextEntry+>;addb %al, (%eax);jo  <KeFindConfigurationNextEntry+>;addb %dl, (%ebp,%eax,);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);orb %dh, (%ecx);addb %cl, %al;outsl (%esi), %dx": 1,
                "addb %al, (%eax);addb %al, (%eax);orb %dh, (%ecx);addb %ch, (%eax);outsl (%esi), %dx": 1,
                "addb %ch, (%eax);outsl (%esi), %dx;incl %ebx;addb %cl, %al;ldsl (%edi), %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb %dh, (%ecx);addb %bh, %al": 1,
                "outsb (%esi), %dx;incl %ebx;addb %dl, %ah;ldsl (%edi), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb %dh, (%ecx);addb %al, -(%esi,%ebp,)": 1,
                "addb %al, (%eax);addb %al, (%eax);orb %dh, (%ecx);addb %al, -(%esi,%ebp,);incl %edi": 1,
                "addb %dh, (%esi,%ebp,);addb %dh, %ah;ldsl (%edi), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "outsb (%esi), %dx;incl %ebx;addb %cl, (%eax);movb $, (%edi);addb %al, (%eax)": 1,
                "outsb (%esi), %dx;incl %ebx;addb %cl, (%esi,%eax,);incl %edi;addb %al, (%eax)": 1,
                "incl %ebx;addb %dl, (%esi,%eax,);incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%eax);jno  <KeFindConfigurationNextEntry+>;addb %al, %ah;insl %dx, %es:(%edi)": 1,
                "jno  <KeFindConfigurationNextEntry+>;addb %ch, (%ebp,%ebp,);addb %bh, (%eax);movb $, (%edi);addb %al, (%eax)": 1,
                "addb %cl, (%eax);jno  <KeFindConfigurationNextEntry+>;addb %ah, (%eax);incl %ebx;addb %bh, (%esi,%eax,)": 1,
                "incl %ebx;addb %bh, (%esi,%eax,);incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, (%esi,%eax,);incl %edi;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%eax);jno  <KeFindConfigurationNextEntry+>;addb %ah, (%eax);insl %dx, %es:(%edi)": 1,
                "insl %dx, %es:(%edi);incl %ebx;addb %bl, -(%eax);incl %edi;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax);jno  <KeFindConfigurationNextEntry+>;addb %ch, %al": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax);jno  <KeFindConfigurationNextEntry+>;addb %ch, (%esp,%ebp,)": 1,
                "addb %al, (%eax);addb %al, (%eax);orb %dh, (%ecx);addb %cl, (%esp,%ebp,);incl %ebx": 1,
                "addb %bh, %al;imull $-, (%ebx), %eax;movb $, (%edi);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %cl, (%eax);jno  <KeFindConfigurationNextEntry+>;addb %ch, (%eax);incl %ebx;addb %dh, (%eax)": 1,
                "movb $, (%edi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ah, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dh, (%eax);pushl $;addb %ch, (%eax)": 1,
                "pushl %eax;movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "pushl (%ebp);calll - <NtFindAtom+>;movl %eax, %esi;cmpl %edi, %esi;jl  <KeFindConfigurationNextEntry+>": 1,
                "jne  <KeFindConfigurationNextEntry+>;cmpl %edi, (%ecx);je  <KeFindConfigurationNextEntry+>;movl (%ecx), %eax;addl %ecx, %eax": 1,
                "movl $, -(%ebp);jb  <KeFindConfigurationNextEntry+>;cmpl (%eax), %ebx;je  <KeFindConfigurationNextEntry+>;addl $, %eax": 1,
                "jae  <KeFindConfigurationNextEntry+>;je  <KeFindConfigurationNextEntry+>;addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx)": 12,
                "jb  <KeFindConfigurationNextEntry+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%edi);jb  <KeFindConfigurationNextEntry+>": 1,
                "addb %al, (%eax);incl %edi;addb %dh, (%edx);outsl (%esi), %dx;addb %dh, (%ebp)": 1,
                "int;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl -(%ebp)": 1,
                "cmpl %ecx, ;je  <KeFindConfigurationNextEntry+>;cmpl %ecx, ;movl %ecx, -(%ebp);jbe  <KeFindConfigurationNextEntry+>": 1,
                "cmpl %ecx, ;movl %ecx, -(%ebp);jbe  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %esi": 1,
                "shrl $, %edi;addl $, %eax;movl -(%eax), %ecx;cmpl %ecx, %esi;jb  <KeFindConfigurationNextEntry+>": 1,
                "jne - <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>;movl , %eax;shll $, %eax;incl ": 1,
                "cmpl , %eax;popl %ebx;jbe  <KeFindConfigurationNextEntry+>;movl %eax, ;popl %edi": 1,
                "jbe - <KeFindConfigurationNextEntry+>;movl %esi, (%edi);movl %eax, -(%ebp);movb %bl, (%edi);jmp - <KeFindConfigurationNextEntry+>": 1,
                "movl %edi, (%esi);movl $, %ebx;pushl -(%ebp);pushl %edi;pushl (%ebp)": 1,
                "leave;retl $;pushl %edi;calll  <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>": 1,
                "calll - <MmGetPhysicalAddress>;movl (%edi), %ecx;xorl %eax, %ecx;andl $, %ecx;xorl %eax, %ecx": 1,
                "pushl %edi;je  <KeFindConfigurationNextEntry+>;movl , %eax;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "jmp  <KeFindConfigurationNextEntry+>;movw %si, %ax;jmp  <KeFindConfigurationNextEntry+>;cmpl $, ;jne - <KeFindConfigurationNextEntry+>": 1,
                "andl %ecx, %edx;pushl %edx;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movl , %eax;decl %eax;jne  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;leal (%eax), %edx": 1,
                "jne  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 1,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <KeFindConfigurationNextEntry+>": 2,
                "movl %eax, ;calll - <atoi>;movl %eax, ;movl -(%ebp), %eax;addl $, %esp": 1,
                "pushl %edi;movl %eax, ;pushl $-;movl %eax, ;movl , %esi": 1,
                "incl %eax;movl %eax, ;movl , %eax;movl %edi, ;movl %eax, ": 1,
                "nop;andl $, %eax;andl $, %eax;andl $, %eax;addb %dh, ": 1,
                "orl %edx, %eax;popl %esi;popl %ebp;retl $;subl %esi, %ecx": 1,
                "calll - <RtlGetAce+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %ecx;pushl %ecx": 1,
                "je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %ecx;pushl %ecx;calll - <IoReportResourceUsage+>;jmp - <KeSetProfileIrql+>": 1,
                "cmpl $, (%ecx);jne  <KeFindConfigurationNextEntry+>;movl (%ecx), %eax;addl %esi, %eax;movl %eax, ": 2,
                "pushl %edi;movl (%ecx), %edi;movl (%ecx), %eax;cmpl %eax, %edi;jb  <KeFindConfigurationNextEntry+>": 1,
                "movl (%ecx), %eax;cmpl $, %eax;je - <KeSetProfileIrql+>;cmpl $, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "jg - <KeFindConfigurationNextEntry+>;popl %edi;popl %esi;popl %ebp;retl $": 1,
                "addl %esi, %eax;movl %eax, ;jmp - <KeFindConfigurationNextEntry+>;cmpw $, (%ecx);jne - <KeFindConfigurationNextEntry+>": 1,
                "je  <KeFindConfigurationNextEntry+>;calll - <KeFindConfigurationNextEntry+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>;movl (%ebp), %esi": 1,
                "calll - <IoEnumerateDeviceObjectList+>;addl $, %esp;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>;cmpb $, -(%ebp)": 1,
                "jb  <KeFindConfigurationNextEntry+>;insl %dx, %es:(%edi);imull $, %fs:(%ebx), %esi;int;int": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <KeFindConfigurationNextEntry+>;pushl $;popl %ecx": 1,
                "je  <KeFindConfigurationNextEntry+>;movw (%eax), %dx;cmpw %dx, (%ecx);ja  <KeFindConfigurationNextEntry+>;movl (%ecx), %ecx": 1,
                "testb $, ;je  <KeFindConfigurationNextEntry+>;movl , %edi;addb $, %al;testl %edi, %edi": 1,
                "movb $, ;movb %al, ;jne  <KeFindConfigurationNextEntry+>;movzbl %al, %eax;leal (%eax,%eax,), %eax": 1,
                "movb $, -(%ebp);jmp - <KeFindConfigurationNextEntry+>;movb $, -(%ebp);jmp - <KeFindConfigurationNextEntry+>;movl , %eax": 1,
                "movl (%ebp), %eax;pushl $;movl %eax, -(%ebp);xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "pushl $;setne %al;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <NtQueryInformationToken+>;pushl -(%ebp);calll - <NtClose>;cmpl $, -(%ebp);jne  <KeFindConfigurationNextEntry+>": 1,
                "incl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %edx, %ecx;shll %cl, %eax": 1,
                "shrl $, %eax;cmpb %bl, (%esi);pushl %ecx;je  <KeFindConfigurationNextEntry+>;pushl %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl $, -(%ebp)": 1,
                "cmpb $, (%esi);je  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;leal (%eax), %edx;movb (%eax), %cl": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeFindConfigurationNextEntry+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <NtClose>;movb (%esi), %cl;pushl (%esi)": 1,
                "je  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;pushl %eax;pushl %eax": 2,
                "calll - <IoEnumerateDeviceObjectList+>;addl $, %edi;incl -(%ebp);cmpl $, -(%ebp);jbe - <KeFindConfigurationNextEntry+>": 1,
                "calll - <FsRtlIsNameInExpression+>;pushl -(%ebp);calll - <NtClose>;cmpl %ebx, -(%ebp);jne  <KeFindConfigurationNextEntry+>": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwOpenSection>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;pushl $;pushl $;pushl $": 1,
                "addb %dl, (%eax);jb  <KeFindConfigurationNextEntry+>;outsl (%esi), %dx;addb %ah, (%ebx);addb %dh, %gs:(%ebx)": 1,
                "addb %dh, (%ebx);incl %esp;addb %ah, (%ecx);je  <KeFindConfigurationNextEntry+>;addb %al, %gs:(%eax)": 1,
                "pushl %ebx;addb %dh, (%eax,%eax);addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%edi)": 1,
                "addb %dh, %gs:(%eax,%eax);addb %al, (%eax);addb %bh, (%esi);decl %ebp;addb %cl, (%eax)": 1,
                "imull $, (%eax), %eax;popal;addb %dh, (%eax,%eax);addb %dh, (%edx);addb %al, %gs:(%eax)": 1,
                "incl %ebp;addb %bh, (%eax);je  <KeFindConfigurationNextEntry+>;addb %ch, %gs:(%esi);jae  <KeFindConfigurationNextEntry+>": 1,
                "je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;addl $, -(%ebp);movw %bx, (%eax);pushl $": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp);pushl $;pushl %ebx": 1,
                "calll - <ZwUnmapViewOfSection>;leal -(%ebp), %eax;pushl %eax;calll - <KeSetProfileIrql+>;testb %al, %al": 1,
                "calll - <ZwUnmapViewOfSection>;pushl -(%ebp);calll - <ZwClose>;cmpl %ebx, -(%ebp);je  <KeFindConfigurationNextEntry+>": 1,
                "movsl (%esi), %es:(%edi);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "movsw (%esi), %es:(%edi);calll - <strchr>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <strchr>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll - <atoi>": 1,
                "movl (%ecx), %edx;cmpl %edi, %edx;jbe  <KeFindConfigurationNextEntry+>;testl %ecx, %ecx;je  <KeFindConfigurationNextEntry+>": 1,
                "cmpl %eax, (%ecx);jb - <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>;nop;xorl $, %eax": 1,
                "movl $, %esi;movl %ebx, -(%ebp);movl %esi, -(%ebp);calll - <KeSetProfileIrql+>;xorl %edi, %edi": 1,
                "jne  <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp);jne - <KeFindConfigurationNextEntry+>;movb (%ebx), %al": 1,
                "movb (%ebx), %al;cmpb $, %al;jl  <KeFindConfigurationNextEntry+>;je  <KeFindConfigurationNextEntry+>;testb $, -(%ebp)": 1,
                "pushl $;pushl %eax;calll - <IoEnumerateDeviceObjectList+>;testb $, -(%ebp);jne  <KeFindConfigurationNextEntry+>": 1,
                "movl %edi, %eax;decl %eax;decl %eax;je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax": 1,
                "calll - <ObReferenceObjectByName+>;pushl -(%ebp);movl %eax, %ebx;calll - <NtClose>;cmpl %edi, %ebx": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl $;popl %ebx;pushl %edi;pushl %edi": 1,
                "pushl %edi;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movw %di, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 2,
                "xorl %eax, %eax;movw (%esi), %ax;cmpw $, %ax;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "pushl (%eax);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitAnsiString>;pushl $": 1,
                "calll - <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;jmp  <KeFindConfigurationNextEntry+>": 1,
                "calll - <IoGetDeviceInterfaces>;testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>;movl -(%ebp), %esi;cmpw %bx, (%esi)": 1,
                "pushl $;leal (%eax), %esi;pushl %esi;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "pushl %eax;calll - <RtlInitAnsiString>;cmpb %bl, ;jne  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax": 1,
                "cmpw %bx, (%eax);je  <KeFindConfigurationNextEntry+>;movl %eax, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "cmpl %eax, -(%ebp);jb  <KeFindConfigurationNextEntry+>;movl -(%ebp), %edx;movl -(%ebp), %ecx;leal -(%ebp), %eax": 1,
                "jne  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "cmpb %bl, -(%ebp);je  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp);jne  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax": 1,
                "incl %esi;cmpl $-, -(%ebp);leal -(%ebp), %eax;pushl %esi;je  <KeFindConfigurationNextEntry+>": 1,
                "jb  <KeFindConfigurationNextEntry+>;imull $, %fs:(%ebx), %esi;popal;jb  <KeFindConfigurationNextEntry+>;imull $, (%ecx,%ebp,), %esi": 5,
                "imull $, %fs:(%ebx), %esi;popal;jb  <KeFindConfigurationNextEntry+>;imull $, (%ecx,%ebp,), %esi;addb %ah, ": 1,
                "movl %eax, (%edx);movl $, (%edx);movl $, (%edx);movw $, (%edx);movw $, (%edx)": 2,
                "movl %eax, %ds;movl %eax, %es;movl -(%ebp), %eax;pushl (%eax);pushl (%eax)": 1,
                "calll *;movl %fs:, %eax;orl %eax, ;pushl -(%ebp);calll - <IoEnumerateDeviceObjectList+>": 1,
                "movl %fs:, %eax;orl %eax, ;pushl -(%ebp);calll - <IoEnumerateDeviceObjectList+>;incb ": 1,
                "calll - <IoEnumerateDeviceObjectList+>;incb ;xorl %eax, %eax;movl %eax, ;cmpb $, -(%ebp)": 1,
                "movl %eax, ;cmpb $, -(%ebp);jne  <KeFindConfigurationNextEntry+>;pushl ;pushl $": 1,
                "pushl %eax;pushl %fs:;pushl %edx;pushl %ebx;pushl $": 1,
                "pushl %fs:;pushl %edx;pushl %ebx;pushl $;calll  <KeFindConfigurationNextEntry+>": 1,
                "movl %fs:, %ebx;movb $, (%ebx);sti;movl $, %ecx;calll *": 1,
                "pushl $;jmp - <KiDispatchInterrupt+>;nop;movl %cr, %eax;cmpb $, %fs:": 1,
                "pushl $;calll - <_CIsqrt+>;calll - <KeSetProfileIrql+>;calll - <KeFindConfigurationNextEntry+>;calll - <KeSetProfileIrql+>": 1,
                "testl %eax, %eax;jne  <KeFindConfigurationNextEntry+>;pushl $;movl , %eax;pushl (%eax)": 5,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $-;pushl %esi": 1,
                "movl %eax, (%edx);movl %edi, -(%ebp);pushl (%ebp);pushl %ecx;calll - <KeFindConfigurationNextEntry+>": 1,
                "decl %esi;decl %edi;incl %ebp;popl %eax;incl %ebp": 3,
                "pushl %ebp;pushl %esp;incl %ebp;cmpl $, %eax;pushl %ebp": 1,
                "decl %edi;incl %esi;incl %esi;addb %cl, (%esi);incl %ebp": 1,
                "cmpb $, ;jne - <KeFindConfigurationNextEntry+>;movl %cr, %eax;andl $, %eax;movl %cr, %ecx": 1,
                "orl $, %eax;movl %eax, %cr;retl $;leal (%ecx), %ecx;nop": 1,
                "int;jmp  <KeFindConfigurationNextEntry+>;int;int;int": 1,
                "calll - <KeSetTargetProcessorDpc>;pushl $;pushl %ebx;calll - <KeSetImportanceDpc>;cmpl %edi, (%ebp)": 1,
                "calll - <KeInitializeSpinLock>;popl %edi;popl %esi;popl %ebx;popl %ebp": 1,
                "xorl %esi, %esi;xorl %ecx, %ecx;incl %esi;xorl %eax, %eax;xorl %edx, %edx": 1,
                "xorl %edx, %edx;pushl %edi;movl %eax, %edi;shrl $, %edi;addl %edx, %edx": 1,
                "cmpl (%ebp), %esi;jl  <KeFindConfigurationNextEntry+>;subl (%ebp), %esi;orl $, %eax;testl %edx, %edx": 1,
                "movl $, %eax;movl $, %ecx;movl %eax, (%eax);movl %eax, (%eax);addl $, %eax": 1,
                "movl (%ebp), %ecx;orl $-, (%eax);andl $, (%eax);andl $, (%eax);andl $, (%eax)": 1,
                "movl (%ebp), %ecx;xorl %esi, %esi;incl %esi;leal (%eax), %edx;movw %si, (%eax)": 1,
                "pushl %esi;xorl %ebx, %ebx;testw $, ;pushl %edi;je  <KeFindConfigurationNextEntry+>": 1,
                "testb $, ;je  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl $;calll - <KeSetTargetProcessorDpc+>;movl $, %eax;movl $, ;movl $, ": 1,
                "movl $, %eax;movl $, ;movl $, ;movb $-, (%eax);calll - <IoEnumerateDeviceObjectList+>": 1,
                "je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;pushl -(%ebp);notl %eax;andl %eax, %esi": 1,
                "movl %edx, (%esi);calll - <IoEnumerateDeviceObjectList+>;movl (%esi), %ecx;pushl (%edi);movl %eax, (%esi)": 1,
                "adcl %ebx, %eax;movl %eax, -(%ebp);calll - <_allmul>;pushl %edx;pushl %eax": 1,
                "pushl %eax;pushl %edi;calll - <_alldiv>;xorl %ebx, %ebx;cmpl %ebx, -(%ebp)": 1,
                "jne  <KeFindConfigurationNextEntry+>;testl %edi, ;je  <KeFindConfigurationNextEntry+>;movl $, %edx;movl %fs:, %eax": 1,
                "calll - <KeInitializeSpinLock>;movl (%ebp), %edi;movl $, %eax;movl %eax, ;movl %eax, ": 1,
                "rep  movsl (%esi), %es:(%edi);movl -(%ebp), %esi;xorl %edi, %edi;movl %edi, (%ebx);movl %edi, (%ebx)": 1,
                "movl , %ebx;cmpl %edi, %ebx;jne - <KeFindConfigurationNextEntry+>;cmpl %edi, ;movl %edi, -(%ebp)": 1,
                "shll $, %eax;movl %eax, ;movl $, %edi;jne  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax": 1,
                "movl %ecx, ;ja  <KeFindConfigurationNextEntry+>;cmpl $, ;je  <KeFindConfigurationNextEntry+>;movl , %eax": 1,
                "ja  <KeFindConfigurationNextEntry+>;cmpl $, ;je  <KeFindConfigurationNextEntry+>;movl , %eax;movl , %esi": 1,
                "cmpl $, %eax;ja - <KeFindConfigurationNextEntry+>;leal -(%eax), %edx;movl %edx, ;leal (%eax,%ecx), %eax": 1,
                "movl %edx, ;leal (%eax,%ecx), %eax;leal (%eax,%eax,), %edx;shll $, %edx;shrl $, %edx": 1,
                "movl , %ecx;subl %esi, %edi;movl , %esi;andl $, %edi;testl %esi, %esi": 1,
                "jne  <KeFindConfigurationNextEntry+>;cmpl $, ;jbe  <KeFindConfigurationNextEntry+>;cmpl $-, %ecx;je  <KeFindConfigurationNextEntry+>": 1,
                "decl %eax;movl %ecx, ;movl %eax, ;testl %esi, %esi;jne  <KeFindConfigurationNextEntry+>": 1,
                "shrl $, %ecx;movl $, %eax;andl %eax, %ecx;subl $, %ecx;decl %esi": 1,
                "andl %eax, %ecx;subl $, %ecx;decl %esi;shrl $, %esi;andl %eax, %esi": 1,
                "cmpl (%ebp), %eax;jne - <KeFindConfigurationNextEntry+>;testb $, ;je  <KeFindConfigurationNextEntry+>;movl , %eax": 1,
                "shll $, %eax;addl %ecx, %eax;movl , %ecx;movl %edx, %esi;shll $, %ecx": 1,
                "movl %eax, %ecx;subl -(%ebp), %ecx;cmpl %ecx, %ebx;ja  <KeFindConfigurationNextEntry+>;movl , %ecx": 1,
                "cmpl $, ;movl %eax, -(%ebp);movl %eax, -(%ebp);movl , %eax;jne  <KeFindConfigurationNextEntry+>": 1,
                "addl $, %esi;movl %esi, -(%ebp);leal -(%ecx), %esi;shrl $, %esi;andl %edx, %esi": 1,
                "cmpl %esi, %edx;ja  <KeFindConfigurationNextEntry+>;movl %esi, %edi;subl -(%ebp), %edi;shll $, %edx": 1,
                "jne - <KeFindConfigurationNextEntry+>;movl , %edi;testl %edi, %edi;jne  <KeFindConfigurationNextEntry+>;subl %edx, %ecx": 1,
                "subl %edx, %ecx;cmpl $, -(%ebp);je  <KeFindConfigurationNextEntry+>;movl %ecx, %edx;andl $, %edx": 1,
                "ja  <KeFindConfigurationNextEntry+>;testb $, (%ebx);jne  <KeFindConfigurationNextEntry+>;pushl $;calll - <KeSetProfileIrql+>": 1,
                "shrl $, %edx;shrl $, %eax;movl %edi, %ecx;shrl $, %ecx;andl $, %edx": 1,
                "subl %esi, %ecx;shll $, %edx;testw $, %ax;je  <KeFindConfigurationNextEntry+>;shrl $, %eax": 1,
                "je  <KeFindConfigurationNextEntry+>;cmpl $, ;jne  <KeFindConfigurationNextEntry+>;movl , %eax;movl , %ecx": 1,
                "movl , %eax;andl $, (%eax,%ecx);movl , %eax;orl $-, (%eax,%ecx);movl , %eax": 1,
                "cmpl $, ;jae  <KeFindConfigurationNextEntry+>;testb $, ;je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax": 1,
                "orl %edi, %esi;movl %esi, (%eax);movl -(%ebp), %esi;shll $, %esi;incl -(%eax)": 1,
                "movl $, ;movl $, ;movl $, ;movl $, ;movl (%edi), %eax": 1,
                "shrl $, %edi;cmpl %edi, %ecx;ja - <INIT+>;cmpl %ebx, %ecx;je - <INIT+>": 1,
                "je - <INIT+>;shll $, %ecx;leal -(%eax,%ecx), %eax;movl %eax, ;movl $, %edi": 1,
                "leal -(%eax,%ecx), %eax;movl %eax, ;movl $, %edi;subl %ecx, %edi;movl %ecx, ": 1,
                "movl %eax, ;movl $, %edi;subl %ecx, %edi;movl %ecx, ;movl , %ecx": 1,
                "movl , %edx;jne  <KeFindConfigurationNextEntry+>;cmpl $, %esi;jae  <KeFindConfigurationNextEntry+>;movl , %edx": 1,
                "subl %edi, %ecx;cmpl %ebx, ;movl %edx, ;movl %ecx, ;je  <KeFindConfigurationNextEntry+>": 1,
                "pushl $;movb $, ;movl %ebx, ;movb %bl, ;movb $, ": 1,
                "movb $, ;movl %ebx, ;movl %eax, ;movl %eax, ;calll - <KeInitializeDpc>": 1,
                "movl %ebx, ;movl %ebx, ;movl %ebx, ;movl %ebx, ;movl %ebx, ": 2,
                "movl %ebx, ;movl %ebx, ;movb %bl, ;calll - <KeSetProfileIrql+>;pushl $": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <KeFindConfigurationNextEntry+>;pushl -(%ebp)": 1,
                "popl %ecx;popl %ecx;jne  <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll  <KeFindConfigurationNextEntry+>": 1,
                "movl $, ;cmpl %ebx, ;jne  <KeFindConfigurationNextEntry+>;movl %edx, ;cmpl %ebx, ": 1,
                "cmpl %ebx, ;jne  <KeFindConfigurationNextEntry+>;movl $, ;cmpl $-, ;jne - <INIT+>": 1,
                "addl , %eax;cmpl %ebx, ;movl %eax, ;jne  <KeFindConfigurationNextEntry+>;movl %ebx, ": 1,
                "movl $, %eax;movl %eax, ;movl %eax, ;movl , %eax;cmpl %ebx, %eax": 1,
                "pushl %edi;calll - <RtlClearAllBits>;movl , %eax;cmpl %ebx, (%eax);movl %ebx, -(%ebp)": 1,
                "int;int;int;int;addb %cl, (%ebp)": 1,
                "movl (%ecx), %edx;cmpl %ebx, %edx;je  <KeFindConfigurationNextEntry+>;pushl %edx;pushl (%ecx)": 1,
                "pushl %edx;pushl (%ecx);pushl %edi;calll - <RtlSetBits>;movl , %eax": 1,
                "jbe  <KeFindConfigurationNextEntry+>;addl $, ;addl $, ;pushl $;popl %eax": 1,
                "movl %esi, ;movl $, ;movl $, ;movl $, ;movl $, ": 1,
                "movl %eax, ;movl $, ;movl $, %eax;cmpl %eax, %ecx;jb  <KeFindConfigurationNextEntry+>": 1,
                "addl $, ;addl $, ;addl $, ;movl $, ;movl $, ": 1,
                "movl $, ;movl $, ;cmpl $, %ecx;jbe  <KeFindConfigurationNextEntry+>;cmpl %eax, ": 1,
                "cmpl %eax, ;jge  <KeFindConfigurationNextEntry+>;movl %eax, ;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, ;movl %ebx, ;jbe  <KeFindConfigurationNextEntry+>;movl %eax, -(%ebp);pushl $": 1,
                "movl %ebx, ;movl %eax, ;movl %eax, ;calll - <ExInitializeResourceLite>;pushl $": 2,
                "shrl $, %edi;addl $, %eax;andl $, %edi;shrl $, %eax;subl $, %edi": 1,
                "subl $, %edi;cmpl $, %eax;jb - <INIT+>;leal -(%eax), %ecx;shll $, %ecx": 1,
                "cmpl $, %eax;jb - <INIT+>;leal -(%eax), %ecx;shll $, %ecx;cmpl %edx, %ecx": 1,
                "movl %ecx, ;movl , %edx;movl %ecx, %eax;shll $, %eax;cmpl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);calll *;movb %al, -(%ebp)": 1,
                "ja - <INIT+>;movl , %ecx;andl , %ecx;incl ;calll - <IoAllocateIrp+>": 1,
                "shll $, %eax;pushl %eax;calll - <RtlFillMemoryUlong>;addl $, %edi;jmp - <KeFindConfigurationNextEntry+>": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);jne  <KeFindConfigurationNextEntry+>;cmpl $, (%eax);jne  <KeFindConfigurationNextEntry+>": 5,
                "pushl (%ebp);calll - <NtClose>;pushl (%ebp);calll  <KeFindConfigurationNextEntry+>;pushl (%ebp)": 1,
                "pushl %ebx;pushl $;pushl (%eax);calll - <toupper+>;cmpl %ebx, -(%ebp)": 2,
                "je  <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <NtClose>;pushl %ebx;pushl ": 1,
                "insb %dx, %es:(%edi);addb %bl, (%eax,%eax);addb %ch, (%esi);jo  <KeFindConfigurationNextEntry+>;addb %al, (%eax)": 2,
                "popal;addb %dh, (%eax);jo  <KeFindConfigurationNextEntry+>;addb %dh, %gs:(%edx);addb %al, (%eax)": 1,
                "movb %bl, ;movl %ecx, ;movl %eax, ;calll - <RtlUpperString+>;pushl (%ebp)": 1,
                "cmpl %ebx, %edi;jl  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp);je  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax": 1,
                "movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movl $, -(%ebp);calll - <RtlValidSecurityDescriptor+>;pushl (%ebp);movl %eax, %esi;calll - <NtClose>": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <NtClose>;movl $, %eax;movl %eax, ": 1,
                "pushl $;movl %eax, ;movl %eax, ;calll - <ExInitializeResourceLite>;pushl $": 1,
                "cmpl %ebx, %edi;jl  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "cmpl %ebx, %edi;jl  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;orb $, (%eax);pushl $": 1,
                "movl %eax, (%ecx);movl , %eax;cmpl %ebx, (%eax);je  <KeFindConfigurationNextEntry+>;movw $, (%eax)": 1,
                "movl %eax, ;movl %eax, ;movl %ecx, ;movl $, ;movl %ecx, ": 1,
                "calll - <ExInitializeResourceLite>;pushl $;xorl %ebx, %ebx;incl %ebx;xorl %esi, %esi": 1,
                "movl %esi, ;movl %ebx, ;movb %bl, %al;popl %esi;popl %ebx": 1,
                "retl;xorb %al, %al;jmp - <KeFindConfigurationNextEntry+>;movb , %cl;cmpb $, %cl": 1,
                "movl , %eax;cmpl $, %eax;ja  <KeFindConfigurationNextEntry+>;cmpb $, %cl;ja  <KeFindConfigurationNextEntry+>": 1,
                "pushl %eax;pushl %esi;incl %ebp;pushl %edx;incl %edx": 1,
                "movl (%ebp), %ecx;addl $, %ecx;movl (%ecx), %eax;cmpl %ecx, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "pushl %edi;pushl %eax;movl %ecx, ;calll - <ExFreePoolWithTag>;movl , %ecx": 1,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %eax;cmpl %edi, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %eax;cmpl %edi, %eax;je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %ecx": 1,
                "je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %ecx;negl %ecx;sbbl %ecx, %ecx;andl -(%ebp), %ecx": 1,
                "retl $;cmpl $, (%ebp);je  <KeFindConfigurationNextEntry+>;movl (%esi), %eax;pushl $": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %esi;calll - <MmUnmapIoSpace>;movl (%edi), %eax": 1,
                "xorl %eax, %eax;pushl %eax;pushl %edi;calll - <MmMapIoSpace>;movl %eax, %esi": 1,
                "pushl %edi;calll - <MmMapIoSpace>;movl %eax, %esi;testl %esi, %esi;je  <KeFindConfigurationNextEntry+>": 1,
                "calll - <MmMapIoSpace>;pushl %ebx;pushl %esi;movl %eax, -(%ebp);calll - <MmUnmapIoSpace>": 1,
                "cmpl $, -(%ebp);jne - <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>;movl %ebx, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl (%eax), %edx;shll $, %edx;addl %edx, ;jmp - <KeFindConfigurationNextEntry+>;nop": 1,
                "shll $, %edx;addl %edx, ;jmp - <KeFindConfigurationNextEntry+>;nop;nop": 1,
                "je  <KeFindConfigurationNextEntry+>;calll - <KeSetProfileIrql+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>;calll  <KeFindConfigurationNextEntry+>": 1,
                "addl $, %ebx;pushl $;pushl $;pushl %edi;pushl -(%ebp)": 1,
                "incl -(%ebp);cmpl %eax, -(%ebp);jb - <KeFindConfigurationNextEntry+>;popl %edi;popl %esi": 1,
                "cmpl %eax, -(%ebp);jb - <KeFindConfigurationNextEntry+>;popl %edi;popl %esi;popl %ebx": 1,
                "retl;nop;pushl %edi;addb %ch, (%ecx);outsb (%esi), %dx": 2,
                "addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%eax,%eax);addb %dh, (%edi);pushl %ebx": 1,
                "pushl %ecx;pushl $;pushl $;movl $, %eax;pushl $": 1,
                "movl (%eax), %eax;xorl %esi, %esi;pushl %esi;pushl %esi;pushl %esi": 1,
                "movl %eax, ;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitString>": 1,
                "movl $, %edi;pushl %edi;pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx": 1,
                "pushl %edi;pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;cmpl %esi, %ebx": 1,
                "pushl %edi;pushl $;pushl %ebx;calll - <RtlAddAccessAllowedAce>;pushl ": 1,
                "pushl %eax;calll - <RtlSetDaclSecurityDescriptor>;leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <RtlAnsiStringToUnicodeString>;movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "popl %esp;pushl %ebx;arpl %si, %gs:(%ebp);imull $, (%ecx,%edi,), %esi;incl %ecx": 1,
                "arpl %si, %gs:(%ebp);imull $, (%ecx,%edi,), %esi;incl %ecx;popl %edi;incl %ecx": 1,
                "andl $-, %ebx;pushl %edi;addl $, %ebx;movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>": 1,
                "calll - <RtlAddAccessAllowedAce>;pushl $;pushl $;pushl %edi;calll - <ExAllocatePoolWithTag>": 1,
                "xorl %eax, %eax;movl $, %ecx;rep  stosl %eax, %es:(%edi);pushl (%esi);pushl (%esi)": 2,
                "pushl (%esi);pushl (%esi);pushl $;pushl -(%ebp);calll - <swprintf>": 2,
                "calll - <NtFindAtom+>;testl %eax, %eax;jge  <KeFindConfigurationNextEntry+>;cmpl %edi, -(%ebp);je  <KeFindConfigurationNextEntry+>": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll  <KeFindConfigurationNextEntry+>": 1,
                "calll  <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <ZwClose>;movl (%esi), %esi;cmpl %ebx, %esi": 1,
                "cmpl %ebx, %esi;jne  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl %edi;movl %esi, %eax;shrl $, %eax;leal (%ecx,%eax,), %edi;leal (%ebp), %eax": 1,
                "pushl %esi;calll - <MmAllocateContiguousMemory>;movl %eax, %edx;testl %edx, %edx;je  <KeFindConfigurationNextEntry+>": 1,
                "popl %ebp;retl $;orl $-, %eax;xorl %ecx, %ecx;jmp - <KeFindConfigurationNextEntry+>": 1,
                "movb -(%ebp), %cl;calll *;movl , %eax;movl %eax, ;leal (%eax), %ecx": 1,
                "movl %eax, ;movl , %eax;movl %eax, ;movl %ecx, ;movl $, ": 1,
                "movl %ecx, ;movl $, ;xorl %edx, %edx;movl %edx, ;movl $, %ecx": 1,
                "movb $, ;movl %esi, (%eax);movl , %eax;movl %esi, (%eax);movl , %eax": 1,
                "movl $, %esi;pushl %esi;movb %al, %bl;calll - <ExAcquireResourceExclusiveLite>;movl %fs:, %eax": 1,
                "pushl $;pushl $;pushl $;calll  <KeFindConfigurationNextEntry+>;nop": 1,
                "subl $, %esp;movb $, -(%ebp);calll - <KeSetProfileIrql+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>": 1,
                "testb %al, %al;je  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %esi;pushl %edi": 2,
                "movl $, %ebx;movl $, %edi;movl -(%ebp), %eax;pushl %esi;pushl %ebx": 1,
                "pushl %ebx;pushl %edi;pushl -(%ebp);leal (%eax), %eax;pushl $": 2,
                "movl %eax, (%ebp);movl %edi, (%eax);calll  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl %esi;calll - <NtVdmControl+>;pushl $;pushl $": 1,
                "pushl (%ebx);calll - <ZwNotifyChangeKey>;popl %edi;popl %esi;popl %ebx": 1,
                "jb  <KeFindConfigurationNextEntry+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%ebx)": 1,
                "subl $, %edi;je  <KeFindConfigurationNextEntry+>;decl %edi;jne  <KeFindConfigurationNextEntry+>;movl $, (%eax)": 1,
                "nop;pushl %eax;addb %dh, (%edx);addb %ah, %gs:(%esi);addb %dh, %gs:(%eax,%eax)": 1,
                "addb %ah, %gs:(%esi);addb %dh, %gs:(%eax,%eax);addb %ch, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "decl %esi;addb %al, (%eax,%eax);addb %cl, (%eax,%eax);addb %dh, (%edx);addb %ch, (%esi)": 1,
                "int;int;int;movl $, (%eax);movl $, (%eax)": 1,
                "movl $, (%eax);movl %edx, (%eax);movl , %eax;movl %eax, (%esi);jmp - <KeFindConfigurationNextEntry+>": 1,
                "calll - <ZwOpenKey>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlEqualUnicodeString>;pushl %ebx": 1,
                "addb %ah, (%ebx);je  <KeFindConfigurationNextEntry+>;imull $, (%eax), %eax;incl %ecx;addb %ah, (%eax,%eax)": 1,
                "addb %al, (%eax);incl %ecx;addb %al, (%ebx);pushl %eax;addb %cl, (%ecx)": 1,
                "leal (%eax,%eax,), %edi;pushl $;leal (,%edi,), %edi;pushl %edi;pushl %ebx": 1,
                "movl %eax, (%ecx);je  <KeFindConfigurationNextEntry+>;movl %edi, %ecx;movl %eax, %edi;movl %ecx, %eax": 1,
                "jl  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax;movl %esi, (%eax);xorl %eax, %eax;popl %edi": 1,
                "movl $, %esi;pushl %eax;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movb $, ;movl %ebx, ;calll - <RtlInitUnicodeString>;movl %esi, -(%ebp);movw $, -(%ebp)": 1,
                "movl %eax, %ebx;xorl %edi, %edi;cmpl %edi, %ebx;je  <KeFindConfigurationNextEntry+>;cmpb $, (%ebp)": 1,
                "calll - <RtlInitUnicodeString>;calll  <KeFindConfigurationNextEntry+>;testb %al, %al;jne  <KeFindConfigurationNextEntry+>;cmpl $, ": 1,
                "addb %dh, (%ebx);je  <KeFindConfigurationNextEntry+>;incl %edi;addb %ch, (%edi);outsl (%esi), %dx": 4,
                "addb %bl, (%eax,%eax);addb %ah, (%ebp);addb %ch, (%bx,%di);jae  <KeFindConfigurationNextEntry+>;je  <KeFindConfigurationNextEntry+>": 2,
                "addb %dh, (%ebx);je  <KeFindConfigurationNextEntry+>;decl %ebx;addb %ch, (%esi);outsl (%esi), %dx": 2,
                "addb %ch, (%esi);outsl (%esi), %dx;addb %dh, (%edi);outsb (%esi), %dx;addb %al, (%edi)": 3,
                "addb %dh, (%edi);outsb (%esi), %dx;addb %al, (%edi);outsl (%esi), %dx;addb %ch, (%edi)": 3,
                "outsl (%esi), %dx;addb %ah, (%eax,%eax);addb %dl, (%eax,%eax);addb %dh, (%eax);addb %al, (%eax)": 2,
                "addb %dl, (%eax,%eax);addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movl %edx, %ecx;pushl %eax;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);calll - <RtlQueryRegistryValues>;testl %eax, %eax;popl %esi": 1,
                "jae  <KeFindConfigurationNextEntry+>;je  <KeFindConfigurationNextEntry+>;addb %ch, %gs:(%ebp);popl %esp;addb %dl, (%ebx)": 2,
                "outsb (%esi), %dx;addb %al, (%edi);outsl (%esi), %dx;addb %ch, (%edi);addb %al, %fs:(%eax)": 1,
                "calll  <KeFindConfigurationNextEntry+>;pushl (%ebp);movl %eax, -(%ebp);calll  <KeFindConfigurationNextEntry+>;movl %eax, -(%ebp)": 1,
                "pushl %edi;pushl %ebx;outl %eax, $;orb $, (%esi);movl $, %edi": 1,
                "orb $, (%esi);movl $, %edi;movl %ecx, (%edi);loopne ;enter $-, $": 1,
                "movl %esi, %eax;jmp  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %ebx;pushl $": 1,
                "je  <KeFindConfigurationNextEntry+>;movl %esi, %ecx;calll - <ExfReleasePushLock>;movl %fs:, %eax;incl (%eax)": 1,
                "movb $, %cl;movb $, (%eax);calll *;cmpl %ebx, %edi;je  <KeFindConfigurationNextEntry+>": 1,
                "leal -(%ebp), %eax;movl $, %esi;pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ObReferenceObjectByHandle>;pushl -(%ebp);movl %eax, %esi;calll - <ZwClose>": 1,
                "calll - <ZwClose>;cmpl %ebx, %esi;jl - <KeFindConfigurationNextEntry+>;cmpb %bl, (%ebp);jne - <KeFindConfigurationNextEntry+>": 1,
                "xorl %edi, %edi;pushl %eax;incl %edi;xorl %ebx, %ebx;pushl %edi": 1,
                "movw %bx, (%ecx,%eax,);addw $, ;movl (%esi), %esi;cmpl %ebx, %esi;leal (%ebp), %eax": 1,
                "jl  <KeFindConfigurationNextEntry+>;cmpb %bl, ;movb %bl, -(%ebp);jne  <KeFindConfigurationNextEntry+>;cmpl %ebx, ": 1,
                "movl %eax, %esi;pushl %esi;pushl -(%ebp);pushl (%ebp);pushl %ebx": 1,
                "calll - <ExFreePoolWithTag>;cmpl %ebx, %edi;jl  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax;movl %eax, ": 1,
                "pushl %esi;calll  <KeFindConfigurationNextEntry+>;movl %ds:, %eax;movl %edi, (%eax);movl %edi, (%eax)": 1,
                "movl %eax, %esi;calll - <NtAdjustPrivilegesToken+>;movl (%esi), %ecx;movl %eax, (%ecx);pushl $": 1,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);pushl $;leal -(%ebp), %eax;pushl %eax": 3,
                "calll - <RtlInitUnicodeString>;movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movl $, %esi": 2,
                "pushl %eax;movb $, -(%ebp);movb %bl, -(%ebp);movl %ebx, -(%ebp);calll - <ObCreateObjectType>": 1,
                "movl %ebx, -(%ebp);jbe  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;movl (,%eax,), %esi;pushl $": 1,
                "jbe  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;movl (,%eax,), %esi;pushl $;pushl $": 1,
                "movl %edi, (%esi);pushl $;movl $, %edi;pushl %ebx;movl %edi, (%esi)": 1,
                "jne  <KeFindConfigurationNextEntry+>;leal -(%ebp), %ecx;pushl %ecx;pushl %ebx;pushl $": 1,
                "leal (%esi), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl ": 1,
                "cmpxchgl %edx, (%ecx);cmpl %esi, %eax;jne  <KeFindConfigurationNextEntry+>;movl $, -(%ebp);movl %fs:, %eax": 1,
                "movl -(%ebp), %esi;cmpl %ebx, %esi;jne  <KeFindConfigurationNextEntry+>;calll  <KeFindConfigurationNextEntry+>;testl %eax, %eax": 1,
                "calll  <KeFindConfigurationNextEntry+>;testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>;movb $, %al;movl -(%ebp), %ecx": 1,
                "pushl %ebx;pushl %edi;jmp  <KeFindConfigurationNextEntry+>;xorb %al, %al;jmp - <KeFindConfigurationNextEntry+>": 1,
                "xorb %al, %al;jmp - <KeFindConfigurationNextEntry+>;nop;pushl %esp;addb %bh, (%ecx)": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %ah, (%ebp);jb  <KeFindConfigurationNextEntry+>;outsb (%esi), %dx": 2,
                "addb %al, (%eax);popl %esp;addb %cl, (%edi);bound (%eax), %eax;pushl $": 1,
                "movw %cx, (%eax);addl $, %eax;cmpl $, %eax;jle - <KeFindConfigurationNextEntry+>;retl": 1,
                "orb %al, (%eax);andb %cl, -(%edx);orb %al, (%eax);orl $, -(%ebx);incl %eax": 1,
                "orb %al, (%eax);jmp  <KeFindConfigurationNextEntry+>;movw (%eax), %cs;addb %al, -(%edx);incl %eax": 1,
                "movw (%eax), %cs;addb %bh, (%eax);lahf;incl %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %bl, (%ecx);movw (%eax), %cs;addb %cl, %dh": 1,
                "xorb $, %al;incl %eax;addb %al, (%eax);outb %al, %dx;orb %al, (%eax)": 1,
                "pushl %cs;insl %dx, %es:(%edi);incl %eax;addb %al, (%eax);movw (%eax), %cs": 1,
                "movw (%eax), %cs;addb %ah, -(%ebp,%ebp,);orb %al, (%eax);scasb %es:(%edi), %al;insl %dx, %es:(%edi)": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %cl, %ah;insl %dx, %es:(%edi);incl %eax": 1,
                "insl %dx, %es:(%edi);incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %bh, %dh": 1,
                "incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %dl, (%edx);outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %bl, (%esi,%ebp,)": 1,
                "incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %ah, (%edx);incl %eax": 2,
                "movw (%eax), %cs;addb %ch, (%esi,%ebp,);addb %al, (%eax);movw (%eax), %cs;addb %dh, (%esi)": 1,
                "movw (%eax), %cs;addb %ch, (%eax);movw (%eax), %cs;addb %dh, (%edx);movw (%eax), %cs": 2,
                "outsb (%esi), %dx;incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %bh, %al": 1,
                "movw (%eax), %cs;addb %dl, (%esi);outsl (%esi), %dx;incl %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %bh, (%esi);outsl (%esi), %dx;incl %eax": 1,
                "outsl (%esi), %dx;incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %bl, %dh": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %dh, (%eax,%esi,);addb %al, (%eax);movw (%eax), %cs": 1,
                "addb %dh, (%eax);movw (%eax), %cs;addb %bh, (%edx);movw (%eax), %cs;addb %al, %ah": 1,
                "incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %bl, (%esi);jno  <KeFindConfigurationNextEntry+>": 1,
                "addb %bh, (%ecx,%esi,);incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %al, (%esi)": 1,
                "addb %bh, (%eax);incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %al, (%edx)": 1,
                "jno  <KeFindConfigurationNextEntry+>;addb %al, (%eax);movw (%eax), %cs;addb %ah, (%eax);movw (%eax), %cs": 1,
                "addb %ah, (%edx);jb  <KeFindConfigurationNextEntry+>;addb %al, (%eax);movw (%eax), %cs;addb %ch, (%edx,%esi,)": 1,
                "movw (%eax), %cs;addb %bh, (%edx,%esi,);addb %al, (%eax);movw (%eax), %cs;addb %al, (%esi)": 1,
                "addb %bh, (%eax);movw (%eax), %cs;addb %al, %dl;jb  <KeFindConfigurationNextEntry+>;addb %al, (%eax)": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %cl, (%edx);movw (%eax), %cs;addb %dl, -(%ebx,%esi,)": 1,
                "addb %dl, %al;jae  <KeFindConfigurationNextEntry+>;addb %al, (%eax);movw (%eax), %cs;addb %bl, %dl": 1,
                "movw (%eax), %cs;addb %cl, (%esp,%esi,);incl %eax;addb %al, (%eax);movw (%eax), %cs": 1,
                "incl %eax;addb %al, (%eax);movw (%eax), %cs;addb %bl, (%ecx);incl %eax": 1,
                "movw (%eax), %cs;addb %dh, (%ebp);incl %eax;addb %al, (%eax);movw (%eax), %cs": 1,
                "addb %dl, (%ecx);movw (%eax), %cs;addb %bl, (%eax);movw (%eax), %cs;addb %bl, (%edi)": 1,
                "addb %al, %dl;je  <KeFindConfigurationNextEntry+>;addb %al, (%eax);movw (%eax), %cs;addb %cl, %cl": 1,
                "je  <KeFindConfigurationNextEntry+>;addb %al, (%eax);movw (%eax), %cs;addb %cl, %cl;je  <KeFindConfigurationNextEntry+>": 1,
                "subl $, %esp;movl , %eax;testl %eax, %eax;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);jne  <KeFindConfigurationNextEntry+>;movl , %edx;movl , %ecx": 1,
                "shrl $, %eax;addl %edx, %eax;movl %eax, ;movl $, %ecx;cmpl %ecx, %eax": 1,
                "addb %ch, (%edi);outsb (%esi), %dx;addb %al, (%eax);addb %cl, %ah;int": 1,
                "pushl %edi;pushl %esi;calll - <RtlCreateAcl>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "cmpl %ebx, %eax;pushl %ebx;movl %eax, -(%ebp);pushl %esi;jl  <KeFindConfigurationNextEntry+>": 1,
                "movl %eax, ;jne  <KeFindConfigurationNextEntry+>;subl %ebx, %eax;je  <KeFindConfigurationNextEntry+>;decl %eax": 1,
                "pushl $;calll - <KeInitializeTimer>;movl , %eax;subl %ebx, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "jbe  <KeFindConfigurationNextEntry+>;movl $, %edi;movl -(%ebp), %eax;movl (,%eax,), %ebx;pushl %edi": 1,
                "pushl $;movl %esi, (%ebx);calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp);je  <KeFindConfigurationNextEntry+>;pushl $": 1,
                "pushl %edi;pushl $;pushl $;pushl %eax;calll - <KeFindConfigurationNextEntry+>": 1,
                "pushl %esi;pushl $;movl %eax, ;calll - <ExAllocatePoolWithTag>;movl %eax, %edi": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, ;xorl %edi, %edi;movl , %eax;addl %edi, %eax": 1,
                "calll - <ExInitializeResourceLite>;addl $, %edi;cmpl %esi, %edi;jb - <KeFindConfigurationNextEntry+>;calll - <INIT+>": 1,
                "movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);calll - <INIT+>;testl %eax, %eax": 1,
                "calll - <INIT+>;testl %eax, %eax;popl %edi;popl %esi;jl  <KeFindConfigurationNextEntry+>": 1,
                "je  <KeFindConfigurationNextEntry+>;movb $, ;calll  <KeFindConfigurationNextEntry+>;testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>": 1,
                "testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>;calll - <FsRtlRegisterFileSystemFilterCallbacks+>;testl %eax, %eax;setge %al": 1,
                "pushl %edi;addb %ch, (%ecx);outsb (%esi), %dx;addb %bh, (%ecx);addb %dh, ": 1,
                "pushl %edi;movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "incl %eax;movl $, %ecx;movb %al, ;movb $, ;movl %eax, ": 1,
                "pushl %ebx;calll - <LdrFindResourceDirectory_U+>;cmpl %ebx, ;jne  <KeFindConfigurationNextEntry+>;cmpl %ebx, ": 1,
                "shll $, ;cmpl $-, ;jne  <KeFindConfigurationNextEntry+>;movl $, %eax;movl %eax, ": 1,
                "movl , %eax;movl %ebx, (%eax);movl , %eax;movl %ebx, (%eax);pushl $": 1,
                "calll - <ObCreateObjectType>;testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>;calll - <KeSetProfileIrql+>;movl $, %eax": 1,
                "movl (%eax), %eax;pushl %ebx;andl $-, %eax;pushl %ebx;movl %eax, ": 1,
                "jl  <KeFindConfigurationNextEntry+>;movl , %edi;addl $, %edi;movl $, %esi;movsl (%esi), %es:(%edi)": 1,
                "addl $, %edi;movl $, %esi;movsl (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl , %edi": 1,
                "movl , %edi;addl $, %edi;movl $, %esi;movsl (%esi), %es:(%edi);pushl $": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>": 1,
                "calll - <ZwClose>;movb $, %al;popl %edi;popl %esi;popl %ebx": 1,
                "nop;pushl %eax;addb %dh, (%edx);outsl (%esi), %dx;addb %ah, (%ebx)": 1,
                "addb %al, %fs:(%eax);addb %al, (%eax);addb %cl, (%edx);outsl (%esi), %dx;addb %ah, (%edx)": 1,
                "addb %al, (%eax);pushl %ebx;jns  <KeFindConfigurationNextEntry+>;je  <KeFindConfigurationNextEntry+>;insl %dx, %es:(%edi)": 1,
                "int;int;nop;nop;adcb %al, (%edx,%eax)": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl , %esi;leal -(%ebp), %ecx": 1,
                "movl %esi, ;movl %esi, ;calll - <ExInitializeResourceLite>;cmpb $, ;movl $, ": 1,
                "cmpl %esi, %eax;movl %eax, ;popl %edi;je  <KeFindConfigurationNextEntry+>;xorl %eax, %eax": 1,
                "movl %eax, ;popl %edi;je  <KeFindConfigurationNextEntry+>;xorl %eax, %eax;popl %esi": 1,
                "pushl $;pushl $;pushl $;calll - <RtlInitializeGenericTableAvl>;movl $, %eax": 1,
                "movl -(%ebp,%esi,), %eax;pushl $;pushl $;pushl %edi;pushl %edi": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %esi;movl $, %esi;pushl %esi": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl %eax, (%ebx);movl (%ebp), %eax;movl (%eax), %edi": 1,
                "cmpl %eax, (%ebx);jne  <KeFindConfigurationNextEntry+>;cmpl %eax, (%ebx);jne  <KeFindConfigurationNextEntry+>;pushl %eax": 1,
                "leave;retl $;xorl %eax, %eax;jmp - <KeFindConfigurationNextEntry+>;nop": 2,
                "jg  <KeFindConfigurationNextEntry+>;je  <KeFindConfigurationNextEntry+>;movl %ecx, %eax;subl $, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "movl %ecx, %eax;subl $, %eax;je  <KeFindConfigurationNextEntry+>;subl $, %eax;jne  <KeFindConfigurationNextEntry+>": 1,
                "movl $, %esi;jmp - <KeFindConfigurationNextEntry+>;movl $, %esi;jmp - <KeFindConfigurationNextEntry+>;subb (%eax), %al": 1,
                "addb %al, (%eax);nop;nop;subb (%eax), %al;pushl %eax": 1,
                "movzwl %ax, %eax;leal (%eax,%ecx), %eax;movl %eax, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;addl $, %eax;pushl $;pushl %eax": 1,
                "pushl $;pushl %esi;calll - <ExFreePoolWithTag>;xorl %esi, %esi;pushl (%ebp)": 1,
                "imull $, (%eax), %eax;ja  <KeFindConfigurationNextEntry+>;popal;addb %dh, (%edx);addb %cl, %gs:(%ebp)": 2,
                "addb %al, (%eax);popl %esp;addb %cl, (%eax,%eax);addb %ah, (%edi);incl %ebx": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl $;pushl (%ebp);calll - <wcscmp>;testl %eax, %eax": 1,
                "movl $, -(%ebp);movb $, -(%ebp);calll - <ObCreateObjectType>;pushl $;leal -(%ebp), %eax": 1,
                "popl %ebx;leave;retl;pushl %eax;addb %ch, (%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addl %eax, (%eax);popl %ds;addb %dl, -(%eax)": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl $;pushl $;pushl %eax": 1,
                "pushl $;pushl %eax;movl %eax, ;xorl %eax, %eax;pushl %eax": 1,
                "movl , %eax;orl $-, %esi;incl %ebx;cmpl %esi, %eax;pushl %edi": 1,
                "pushl %edi;jne  <KeFindConfigurationNextEntry+>;xorl %edi, %edi;cmpl %esi, ;jne  <KeFindConfigurationNextEntry+>": 1,
                "subl $, %esp;movl , %ecx;pushl %ebx;pushl %esi;movl $, %eax": 1,
                "movl , %ecx;je  <KeFindConfigurationNextEntry+>;movl , %eax;cmpl %ebx, %eax;jne  <KeFindConfigurationNextEntry+>": 1,
                "sbbl %edx, %edx;shrl $, %eax;negl %edx;addl %eax, %edx;movl $, %eax": 1,
                "shrl $, %eax;cmpl %eax, %edx;ja  <KeFindConfigurationNextEntry+>;leal (%edx), %eax;shrl $, %eax": 1,
                "ja  <KeFindConfigurationNextEntry+>;leal (%edx), %eax;shrl $, %eax;movl %eax, %esi;shll $, %esi": 1,
                "shrl $, %eax;movl $, %edx;shrl $, %esi;andl %edx, %eax;andl %edx, %esi": 1,
                "andl , %ecx;incl ;movb %al, -(%ebp);calll - <IoAllocateIrp+>;movl -(%ebp), %ecx": 1,
                "orl %edx, %ecx;movl %ecx, (%esi);leal (%esi), %ecx;sarl $, %ecx;shrl $, %ecx": 1,
                "leal (%esi), %ecx;sarl $, %ecx;shrl $, %ecx;pushl (,%ecx,);pushl %esi": 1,
                "pushl %eax;calll - <RtlSetBit+>;pushl $;pushl $;pushl -(%ebp)": 1,
                "addl $, %esi;addl $, %eax;movl %esi, ;shrl $, %eax;leal (,%eax,), %eax": 1,
                "leal (,%eax,), %eax;movl $, %esi;pushl %esi;pushl %eax;pushl $": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;calll - <PAGEVRFY+>;testl %eax, %eax": 1,
                "calll  <KeFindConfigurationNextEntry+>;testb %al, %al;jne  <KeFindConfigurationNextEntry+>;movl $, %eax;popl %esi": 1,
                "pushl %edi;leal -(%ecx), %edi;movl %edi, %edx;cmpl $, %edx;movl %ecx, ": 1,
                "movl , %eax;movl %eax, %ecx;shrl $, %ecx;movl $, %esi;andl %esi, %ecx": 1,
                "leal -(%eax,%esi), %edx;movl $, ;movl %esi, (%edi);movl %edx, (%edi);je  <KeFindConfigurationNextEntry+>": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl %ecx, ;movl %esi, (%ebp);calll - <KeInitializeSpinLock>": 1,
                "movl $, -(%ebp);movl %ecx, ;movl %esi, (%ebp);calll - <KeInitializeSpinLock>;movl %esi, ": 1,
                "movl %ecx, ;movl %esi, (%ebp);calll - <KeInitializeSpinLock>;movl %esi, ;movl %esi, ": 1,
                "calll - <KeInitializeSpinLock>;movl %esi, ;movl %esi, ;xorl %eax, %eax;movl -(%ebp,%eax), %ecx": 1,
                "movl (%eax), %edx;imull %ecx, %edx;addl %edx, (%ebp);addl $, %eax;addl %ecx, %esi": 1,
                "movl %esi, ;movl %eax, %edi;movl $, %esi;jbe  <KeFindConfigurationNextEntry+>;movl %edi, %edx": 1,
                "pushl %esi;calll - <RtlUpperString+>;testl %eax, %eax;movl %eax, (%ebx);je  <KeFindConfigurationNextEntry+>": 1,
                "leal -(%ebp,%esi), %edi;movl (%edi), %ebx;pushl $;pushl %eax;pushl (%ebp)": 1,
                "cmpl %esi, ;movl $, ;jne  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);movl $, %esi": 1,
                "pushl %eax;calll - <RtlInitUnicodeString>;movl -(%ebp), %eax;andl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "calll - <ObFindHandleForObject+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <KeFindConfigurationNextEntry+>;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <KeFindConfigurationNextEntry+>;xorl %eax, %eax;popl %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%edi);insb %dx, %es:(%edi);addb %ch, (%edi)": 1,
                "addb %ch, (%edi);bound (%eax), %eax;popal;addb %ch, (%eax,%eax);addb %al, (%eax)": 1,
                "xorl %ebx, %ebx;incl %ebx;pushl %ebx;movl %eax, -(%ebp);calll - <RtlLengthRequiredSid>": 1,
                "cmpl %edi, %eax;je  <KeFindConfigurationNextEntry+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ecx;calll - <RtlInitializeSid>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl ;calll - <RtlInitializeSid>": 18,
                "pushl %edi;movl %edi, (%eax);pushl ;calll - <RtlSubAuthoritySid>;pushl %edi": 4,
                "calll - <RtlSubAuthoritySid>;pushl %edi;movl $, (%eax);pushl ;calll - <RtlSubAuthoritySid>": 11,
                "movl $, (%eax);pushl $;calll - <ExAllocatePoolWithTag>;pushl %esi;pushl -(%ebp)": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl %ecx": 1,
                "pushl ;calll - <RtlInitializeSid>;pushl $;popl %esi;pushl %esi": 1,
                "movl %ebx, (%eax);pushl ;calll - <RtlSubAuthoritySid>;pushl %edi;movl %esi, (%eax)": 1,
                "movl %esi, (%eax);pushl ;calll - <RtlSubAuthoritySid>;pushl %ebx;movl %esi, (%eax)": 1,
                "movl %esi, ;xorl %esi, %esi;pushl $;movl %esi, ;popl %esi": 17,
                "pushl $;movl , %edi;movl %eax, ;popl %eax;movl %eax, ": 1,
                "movl $, ;calll - <ExAllocatePoolWithTag>;pushl %esi;pushl ;movl %eax, ": 1,
                "movl , %esi;movl %esi, (%ecx);movl , %esi;movl %esi, (%ecx);movl %edx, (%ecx)": 1,
                "movl %edx, (%ecx);andl $, (%eax);movl $, (%eax);movl , %ecx;movl %ecx, (%eax)": 1,
                "movl , %ecx;movl %ecx, (%eax);movl , %ecx;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "movl , %ecx;movl %ecx, (%eax);movl , %ecx;movl %eax, ;movl %ecx, (%eax)": 1,
                "calll - <KeFindConfigurationNextEntry+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>;calll - <KeFindConfigurationNextEntry+>;testb %al, %al": 1,
                "movl %eax, %edi;calll  <KeFindConfigurationNextEntry+>;movl (%edi), %ecx;addl %esi, %ecx;movl %eax, %edx": 1,
                "movl %eax, -(%ebp);movl %edi, -(%ebp);movl %ecx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movzbl (%edx), %edx;movzbl (%esi), %esi;leal (,%edx,), %edx;andl $-, %edx": 1,
                "movl , %edx;pushl $;popl %esi;movl %edx, -(%ebp);movl , %edx": 1,
                "calll - <RtlSetOwnerSecurityDescriptor>;pushl %edi;pushl ;pushl -(%ebp);calll - <RtlSetGroupSecurityDescriptor>": 1,
                "calll - <RtlSetGroupSecurityDescriptor>;pushl $;popl %eax;movl -(%ebp), %ecx;pushl %edi": 1,
                "pushl $;popl %eax;movl -(%ebp), %ecx;pushl %edi;pushl %edi": 1,
                "pushl %ebx;pushl $;calll - <KeInitializeMutex>;pushl %ebx;calll - <INIT+>": 1,
                "pushl %eax;pushl %ebx;pushl %esi;calll - <IoCreateDevice>;cmpl %ebx, %eax": 1,
                "movb $, (%eax);pushl %esi;pushl %ebx;movl $, %eax;pushl %ebx": 1,
                "pushl %esi;pushl %ebx;movl $, %eax;pushl %ebx;pushl $": 1,
                "movl %ebx, -;popl %edi;movl (%ebp), %eax;popl %esi;popl %ebx": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;je  <KeFindConfigurationNextEntry+>;outsl (%esi), %dx;insb %dx, %es:(%edi)": 3,
                "outsb (%esi), %dx;je  <KeFindConfigurationNextEntry+>;outsl (%esi), %dx;insb %dx, %es:(%edi);pushl %ebx": 3,
                "addb %ah, (%ecx);je  <KeFindConfigurationNextEntry+>;popal;addb %al, (%eax,%eax);addb %dh, (%esi)": 2,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <MmLockPagableImageSection>;pushl %eax": 1,
                "movl %esi, ;movl %esi, ;movl %esi, ;movl $, -(%ebp);addl $, %eax": 1,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);leal -(%ebp), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "calll - <RtlQueryRegistryValues>;cmpl %esi, %eax;jge  <KeFindConfigurationNextEntry+>;cmpl %esi, -(%ebp);jne  <KeFindConfigurationNextEntry+>": 1,
                "je  <KeFindConfigurationNextEntry+>;addb %al, (%eax);incl %edx;addb %dh, (%ebp);addb %ah, (%esi)": 1,
                "addb %al, (%eax);addb %cl, (%ebp);imull $, (%eax), %eax;insl %dx, %es:(%edi);addb %dh, (%ebp)": 1,
                "imull $, (%eax), %eax;insl %dx, %es:(%edi);addb %dh, (%ebp);insl %dx, %es:(%edi);addb %al, (%edx)": 1,
                "decl %ecx;addb %bl, (%eax,%eax);addb %ch, (%eax,%eax);addb %ah, (%edx);popal": 1,
                "pushl $;leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax;movl %ebx, ": 1,
                "pushl %eax;movsl (%esi), %es:(%edi);leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);calll - <ObCreateObjectType>;testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>": 1,
                "testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <NtClose>;cmpl %ebx, ": 1,
                "addb %ah, (%ecx);arpl %ax, (%eax);imull $, (%eax), %eax;addb %cl, %ah;int": 1,
                "arpl %ax, (%eax);imull $, (%eax), %eax;addb %cl, %ah;int;int": 1,
                "imull $, (%eax), %eax;addb %cl, %ah;int;int;int": 1,
                "decl %eax;addb %ah, (%edi,%ecx);addb %cl, -(%eax);decl %eax;addb %bh, (%eax)": 1,
                "addb %ah, (%edi,%ecx);addb %cl, -(%eax);decl %eax;addb %bh, (%eax);minps (%eax), %xmm": 1,
                "addb %ah, (%ebp);addb %al, (%eax);nop;nop;nop": 1,
                "pushl %ebx;pushl ;calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;jl  <KeFindConfigurationNextEntry+>": 2,
                "cmpl $, -(%ebp);je  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlInitUnicodeString>;movl $, %edi;pushl %edi;pushl $;pushl $": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, ;je  <KeFindConfigurationNextEntry+>;leal -(%ebp), %ecx": 1,
                "jl  <KeFindConfigurationNextEntry+>;cmpl %ebx, ;je  <KeFindConfigurationNextEntry+>;orl $, ;movl , %eax": 1,
                "pushl %eax;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl ": 2,
                "je  <KeFindConfigurationNextEntry+>;cmpb %bl, ;je  <KeFindConfigurationNextEntry+>;movl , %eax;addl $, %eax": 1,
                "movl , %eax;movl %esi, %edx;movb $, %cl;calll - <_allshr>;movl , %ecx": 1,
                "pushl ;calll - <NtOpenThread+>;cmpl %ebx, %eax;jl  <KeFindConfigurationNextEntry+>;movl $, %esi": 1,
                "jmp - <KeFindConfigurationNextEntry+>;nop;nop;nop;addl %eax, (%eax)": 1,
                "movb %bl, -(%ebp);calll - <RtlInitUnicodeString>;pushl $;popl %edi;leal -(%ebp), %eax": 1,
                "jl  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;movl -(%ebp,%eax), %eax;movl %eax, -(%ebp);pushl $": 1,
                "pushl %eax;movw $, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;movzwl -(%ebp), %eax;pushl %eax": 2,
                "calll - <RtlAnsiStringToUnicodeString>;movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl $": 2,
                "movl %eax, -(%ebp);jl  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwOpenKey>;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl %eax;movw $, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "cmpw $, (%eax);je  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "addb %al, (%si);incl %edx;addb %al, (%eax);addb %al, (%eax);addb %al, (%ebx)": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);popl %esp;addb %dl, (%edx)": 1,
                "andb %dl, (%eax);outsl (%esi), %dx;imulw $, (%ebp), %bp;xorb %dh, (%esp);addb %cl, %ah": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <FsRtlIsNameInExpression+>": 4,
                "calll - <RtlInitUnicodeString>;pushl %edi;leal (%ebp), %eax;pushl %eax;pushl %edi": 3,
                "calll  <KeFindConfigurationNextEntry+>;testb %al, %al;je  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %esi": 1,
                "calll - <LdrFindResource_U+>;movl %eax, -(%ebp);xorl %edi, %edi;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl ;movl $, %ebx;pushl %edi": 1,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);calll - <ObCreateObject>;movl -(%ebp), %esi;pushl %edi": 1,
                "movl -(%ebp), %esi;pushl %edi;pushl -(%ebp);movl %eax, -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);calll - <ExFreePoolWithTag>;cmpl %edi, -(%ebp);jl  <KeFindConfigurationNextEntry+>": 1,
                "pushl %eax;calll *(%eax);cmpl %edi, %eax;je  <KeFindConfigurationNextEntry+>;pushl %ebx": 1,
                "cmpl %edi, %eax;je  <KeFindConfigurationNextEntry+>;movl -(%ebp), %ecx;movl $, (%ecx);movl %eax, (%esi)": 1,
                "movl %edi, (%esi);calll - <PsGetCurrentProcessId>;movl %eax, (%esi);calll - <ObOpenObjectByName+>;movl (%esi), %eax": 1,
                "pushl %edi;pushl %edi;pushl %edi;pushl %esi;calll - <ObInsertObject>": 1,
                "pushl %edi;pushl %edi;pushl $;pushl ;calll - <ObReferenceObjectByHandle>": 1,
                "retl;xorb %al, %al;jmp - <KeFindConfigurationNextEntry+>;pushl %edx;addb %al, (%ebp)": 1,
                "pushl %ebx;pushl %ebx;pushl %esi;pushl %ebx;pushl $": 1,
                "pushl %esi;pushl %ebx;pushl $;calll - <IoOpenDeviceRegistryKey+>;cmpl %ebx, %eax": 1,
                "cmpl %ebx, %eax;movl %eax, ;je  <KeFindConfigurationNextEntry+>;movl %edi, ;calll - <KeFindConfigurationNextEntry+>": 1,
                "pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "testb %al, %al;je  <KeFindConfigurationNextEntry+>;pushl (%ebp);calll - <KeFindConfigurationNextEntry+>;cmpl %ebx, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlIsRangeAvailable+>;movzwl -(%ebp), %eax;incl %eax": 1,
                "movl %eax, %esi;cmpl %edi, %esi;jl  <KeFindConfigurationNextEntry+>;xorl %esi, %esi;cmpl %edi, -(%ebp)": 1,
                "cmpl %esi, %eax;jl  <KeFindConfigurationNextEntry+>;pushl $;pushl ;pushl $": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl $;pushl ;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "calll - <NtClose>;movl %edi, %eax;popl %edi;popl %esi;popl %ebx": 2,
                "pushl %edi;pushl ;pushl $;calll - <RtlInitUnicodeString>;pushl ": 1,
                "calll - <RtlInitUnicodeString>;movl $, %edi;xorl %esi, %esi;pushl (%esi);pushl %edi": 1,
                "addl $, %edi;cmpl $, %esi;jbe - <KeFindConfigurationNextEntry+>;movl $, %edi;xorl %esi, %esi": 1,
                "jbe - <KeFindConfigurationNextEntry+>;movl $, %edi;xorl %esi, %esi;pushl (%esi);pushl %edi": 1,
                "movb , %al;subl $, %eax;popl %ebp;addb %ah, %al;minps (%eax), %xmm": 1,
                "addb %ah, %al;minps (%eax), %xmm;enter $, $;movb $, %al;popl %ebp": 1,
                "movl , %eax;decl %eax;movl %eax, ;movl , %eax;shrl $, %eax": 1,
                "movl %eax, ;movl , %eax;shrl $, %eax;movl $, ;jmp - <KeFindConfigurationNextEntry+>": 1,
                "movl , %eax;shrl $, %eax;movl $, ;jmp - <KeFindConfigurationNextEntry+>;movl , %eax": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movl , %eax;decl %eax;movl %eax, ;movl $, ": 1,
                "movl , %eax;shrl $, %eax;jmp - <KeFindConfigurationNextEntry+>;movl $, -(%ebp);jmp - <KeFindConfigurationNextEntry+>": 1,
                "leal (%eax), %ecx;jmp - <INIT+>;leal -(%ebp), %eax;cmpl %eax, %esi;je  <KeFindConfigurationNextEntry+>": 1,
                "testl %esi, %esi;je  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "je - <KeFindConfigurationNextEntry+>;movb $, ;jmp - <KeFindConfigurationNextEntry+>;pushl $;pushl %eax": 1,
                "popl %ecx;je - <KeFindConfigurationNextEntry+>;pushl $;pushl $;pushl %eax": 1,
                "pushl $;jmp  <KeFindConfigurationNextEntry+>;pushl $;calll - <DbgBreakPointWithStatus>;jmp - <KeFindConfigurationNextEntry+>": 1,
                "calll - <sprintf>;addl $, %esp;jmp - <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl $": 1,
                "addb %ch, (%esi);andl $, %eax;pushl $;pushl %eax;jmp  <KeFindConfigurationNextEntry+>": 1,
                "orb $-, ;jmp - <INIT+>;orl $, ;jmp - <INIT+>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <atol>;popl %ecx;movl %eax, -(%ebp);jmp - <INIT+>": 1,
                "pushl %eax;movl %ebx, ;movl %ebx, ;calll - <KeSetTimeIncrement+>;jmp - <INIT+>": 1,
                "addl $, %eax;pushl %eax;calll - <InbvDisplayString>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <FsRtlIsNameInExpression+>;cmpb %bl, -(%ebp);je  <KeFindConfigurationNextEntry+>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwCreateKey>;movl %eax, %edi;cmpl %ebx, %edi": 2,
                "pushl $;pushl %edi;jmp - <KeFindConfigurationNextEntry+>;pushl $;jmp  <KeFindConfigurationNextEntry+>": 1,
                "pushl %eax;pushl $;jmp  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %ebx": 6,
                "pushl %eax;jmp  <KeFindConfigurationNextEntry+>;cmpl $, %ecx;jb  <KeFindConfigurationNextEntry+>;cmpl $, %ecx": 1,
                "calll - <KeBugCheckEx>;int;nop;decl %ecx;decl %esi": 1,
                "decl %esp;addb %cl, (%esi);pushl %esp;pushl %edi;decl %edi": 1,
                "decl %esi;incl %ecx;pushl %esp;incl %ebp;pushl %ebx": 1,
                "addb %dh, (%edx);outsb (%esi), %dx;addb %ah, (%ecx);je  <KeFindConfigurationNextEntry+>;addb %dl, %gs:(%ebx)": 2,
                "addb %al, (%eax);addb %al, (%eax);decl %edi;addb %dh, (%eax);je  <KeFindConfigurationNextEntry+>": 1,
                "addb %ch, (%edi);insb %dx, %es:(%edi);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebp)": 1,
                "jmp - <INIT+>;movl $, %eax;jmp - <INIT+>;movb $, -(%ebp);jmp - <INIT+>": 1,
                "jmp - <INIT+>;movb $, -(%ebp);jmp - <INIT+>;pushl %ebx;pushl %eax": 1,
                "jmp - <INIT+>;movl (%esi), %ecx;movzwl %ax, %edx;cmpw $, -(%edx,%ecx);jne - <KeFindConfigurationNextEntry+>": 1,
                "jmp - <KeFindConfigurationNextEntry+>;xorb %al, %al;jmp - <INIT+>;pushl $;popl %eax": 1,
                "jmp  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl $;calll - <IoInvalidateDeviceRelations+>;movl $, ": 6,
                "addl $, %esp;pushl %ebx;pushl $;calll - <IoInvalidateDeviceRelations+>;movl $, ": 2,
                "calll - <IoInvalidateDeviceRelations+>;movl $, ;xorb %al, %al;jmp - <INIT+>;decl %ecx": 1,
                "incl %ecx;outsb (%esi), %dx;jae  <KeFindConfigurationNextEntry+>;pushl %esp;outsl (%esi), %dx": 1,
                "int;movb %bl, -(%ebp);jmp - <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax;jl - <KeFindConfigurationNextEntry+>;pushl (%edi);leal -(%ebp), %eax": 1,
                "jmp - <KeFindConfigurationNextEntry+>;cmpl %ebx, %eax;jne - <KeFindConfigurationNextEntry+>;addl $, -(%ebp);jmp - <KeFindConfigurationNextEntry+>": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp - <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax": 1,
                "jmp  <KeFindConfigurationNextEntry+>;sbbl %eax, %eax;sbbl $-, %eax;cmpl %ebx, %eax;je  <KeFindConfigurationNextEntry+>": 2,
                "cmpl $, %eax;jne  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "movl -(%ebp), %ecx;addl (%ecx,%eax,), %esi;incl %eax;cmpl $, %eax;jb - <KeFindConfigurationNextEntry+>": 1,
                "jb  <KeFindConfigurationNextEntry+>;imull $, (%ecx,%ebp,), %esi;addb %bl, (%esp,%eax,);jbe  <KeFindConfigurationNextEntry+>;arpl %sp, (%ebp)": 3,
                "calll - <IoInvalidateDeviceRelations+>;pushl %ebx;calll - <ObMakeTemporaryObject>;movl %ebx, %ecx;calll - <ObfDereferenceObject>": 1,
                "jmp - <KeFindConfigurationNextEntry+>;xorl %eax, %eax;jmp - <INIT+>;jmp - <KeSetProfileIrql+>;orw $-, %ax": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;cmpl $, (%eax);jne  <KeFindConfigurationNextEntry+>;cmpl $, (%eax)": 2,
                "calll - <RtlLengthSid>;pushl ;movl %eax, %edi;addl $, %edi;calll - <RtlLengthSid>": 1,
                "jmp - <INIT+>;jmp - <INIT+>;jmp - <INIT+>;pushl %edx;pushl %edx": 1,
                "pushl $;calll - <KeBugCheckEx>;jmp - <KeFindConfigurationNextEntry+>;pushl %esi;pushl $": 1,
                "calll - <ExFreePoolWithTag>;xorb %al, %al;jmp - <IoReportHalResourceUsage+>;movb $, (%esi);jmp - <KeSetProfileIrql+>": 1,
                "pushl %eax;pushl $;movl %ebx, -(%ebp);calll - <ProbeForWrite+>;pushl (%ebp)": 1,
                "jmp - <KeFindConfigurationNextEntry+>;pushl %edi;pushl $;jmp  <KeFindConfigurationNextEntry+>;pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;movl %ebx, -(%ebp);calll - <ZwCreateTimer+>": 1,
                "movl -(%ebp), %ecx;jmp - <KeSetProfileIrql+>;movl (%esi), %eax;movl (%eax), %eax;orb $, (%eax)": 1,
                "movl $, %eax;jmp - <KeSetProfileIrql+>;movl $, %eax;jmp - <KeSetProfileIrql+>;jmp - <KeSetProfileIrql+>": 1,
                "movl %eax, (%esi,%ecx);movl (%ebx), %eax;movl (%esi,%eax), %edx;testl %edx, %edx;jne  <KeFindConfigurationNextEntry+>": 1,
                "testl %edx, %edx;jne  <KeFindConfigurationNextEntry+>;pushl %edi;pushl %eax;calll - <INIT+>": 1,
                "calll  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %ebx, %ebx;je  <KeFindConfigurationNextEntry+>;movl (%ebx), %ecx;jmp  <KeFindConfigurationNextEntry+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);movl , %ecx;movl %ecx, (%eax);movl %eax, ": 1,
                "calll - <ExFreePoolWithTag>;testl %ebx, %ebx;movl (%esi), %eax;je  <KeFindConfigurationNextEntry+>;movl %eax, (%ebx)": 1,
                "movl (%esi), %esi;jmp - <KeFindConfigurationNextEntry+>;movl (%ecx), %eax;addl %ecx, %eax;jmp - <KeFindConfigurationNextEntry+>": 1,
                "decl %ecx;jne - <KeFindConfigurationNextEntry+>;testl %eax, %eax;je - <KeFindConfigurationNextEntry+>;pushl %eax": 1,
                "pushl $;calll  <KeFindConfigurationNextEntry+>;testl %eax, %eax;je - <KeFindConfigurationNextEntry+>;movl (%eax), %esi": 1,
                "adcb $, %al;popl %edi;addb %ch, (%ebp,%ebp,);popl %edi;addb %ah, %ah": 1,
                "popl %edi;addb %cl, (%eax);popl %edi;addb %bl, (%eax);popl %edi": 1,
                "popl %edi;addb %dh, %ah;decl %esp;popl %edi;addb %dl, %ah": 1,
                "popl %edi;addb %ah, (%eax);decl %esp;popl %edi;addb %al, (%eax)": 1,
                "popl %edi;addb %bh, -(%eax);decl %ecx;popl %edi;addb %al, (%eax)": 1,
                "movl $, %eax;jmp - <KeFindConfigurationNextEntry+>;movw $, (%esi);pushl $;popl %edx": 1,
                "addl %edx, %esi;testw %cx, %cx;jne - <KeFindConfigurationNextEntry+>;andw %cx, (%esi);movl (%edi), %esi": 1,
                "xorl %edi, %edi;xorl %edx, %edx;cmpl %edi, (%eax);jbe  <KeFindConfigurationNextEntry+>;leal (%eax), %ecx": 1,
                "cmpl $, (%esi);jne - <KeFindConfigurationNextEntry+>;movl (%esi), %ecx;xorl %edi, %edi;xorl %edx, %edx": 1,
                "jne  <KeFindConfigurationNextEntry+>;cmpl $, (%eax);jne  <KeFindConfigurationNextEntry+>;cmpl %edi, (%ebp);jne  <KeFindConfigurationNextEntry+>": 1,
                "cmpl $, (%eax);jne  <KeFindConfigurationNextEntry+>;cmpl %edi, (%ebp);jne  <KeFindConfigurationNextEntry+>;movl %eax, (%ebp)": 1,
                "jne  <KeFindConfigurationNextEntry+>;cmpl %edi, (%ebp);jne  <KeFindConfigurationNextEntry+>;movl %eax, (%ebp);incl %edx": 1,
                "cmpl %edi, %eax;je - <KeFindConfigurationNextEntry+>;movl (%ebp), %ebx;movl $, (%eax);movl (%ebx), %eax": 1,
                "movl $, (%eax);movl (%ebx), %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);jl  <KeFindConfigurationNextEntry+>;movl -(%ebp), %ecx;movl (%ecx), %eax;addl %ecx, %eax": 1,
                "pushl -(%ebp);calll  <KeFindConfigurationNextEntry+>;movl %eax, -(%ebp);pushl %edi;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwSetValueKey>;pushl $;popl %ecx": 1,
                "movl %esi, -(%ebp);calll - <ZwSetValueKey>;pushl %esi;pushl %esi;pushl %ebx": 1,
                "pushl -(%ebp);movw $, -(%ebp);pushl $;pushl %esi;pushl %eax": 1,
                "addb %ah, (%eax,%eax);addb %al, (%eax);addb %cl, (%ebp);imull $, (%eax), %eax;popal": 2,
                "addb %al, (%eax,%eax);addb %dh, (%esi);imull $, (%eax), %eax;andb %al, (%eax);je  <KeFindConfigurationNextEntry+>": 1,
                "pushl %esi;pushl %esi;pushl $;calll - <IoReportTargetDeviceChange+>;movl $, %eax": 2,
                "jmp - <KeFindConfigurationNextEntry+>;decl %edi;addb %dl, (%ebp);pushl %esp;addb %ah, (%eax)": 1,
                "decl %edi;addb %dl, (%ebp);pushl %esp;addb %ah, (%eax);addb %cl, (%edi)": 1,
                "addb %ah, (%eax);addb %cl, (%edi);incl %esi;addb %ah, (%eax);addb %cl, (%ebp)": 1,
                "andl $, (%ebx);movb %al, (%ebx);movl (%ebp), %eax;movzwl (%eax), %eax;movl %eax, (%ebx)": 1,
                "rep  movsl (%esi), %es:(%edi);movl $, %esi;pushl %esi;leal (%ebx), %edi;calll - <wcslen>": 1,
                "shrl $, %eax;shll $, %eax;movw %ax, (%ebx);movl %ecx, (%ebx);movl $, %eax": 1,
                "nop;decl %ebp;addb %ah, (%ecx);arpl %ax, (%eax);pushl $": 1,
                "andb %al, (%eax);incl %ebx;addb %ch, (%eax);addb %ah, %gs:(%ebx);imull $, (%eax), %eax": 2,
                "addb %ah, %gs:(%ebx);imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%edx)": 1,
                "cmpb (%esi), %al;jne  <KeFindConfigurationNextEntry+>;addl %edi, %ecx;addl %edi, %esi;testb %dl, %dl": 5,
                "jne  <KeFindConfigurationNextEntry+>;addl %edi, %ecx;addl %edi, %esi;testb %dl, %dl;jne - <KeFindConfigurationNextEntry+>": 5,
                "testb %dl, %dl;jne - <KeFindConfigurationNextEntry+>;xorl %eax, %eax;jmp  <KeFindConfigurationNextEntry+>;sbbl %eax, %eax": 1,
                "jmp  <KeFindConfigurationNextEntry+>;sbbl %eax, %eax;sbbl %ebx, %eax;xorl %ecx, %ecx;testl %eax, %eax": 1,
                "subl $, %eax;je  <KeFindConfigurationNextEntry+>;subl $, %eax;je  <KeFindConfigurationNextEntry+>;subl $, %eax": 5,
                "jmp  <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>;andb $, %dl;cmpb $, %dl;jb  <KeFindConfigurationNextEntry+>": 1,
                "movb $, ;jmp - <KeFindConfigurationNextEntry+>;movl -(%ebp), %ecx;andl $, %ecx;cmpb $, %cl": 1,
                "andl -(%ebp), %edx;orl $, %eax;pushl %edx;andl %ebx, %eax;pushl %eax": 1,
                "pushl %edi;calll - <IoEnumerateDeviceObjectList+>;movl -(%ebp), %ebx;jmp  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp)": 1,
                "jb  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "movl %eax, %ecx;movb $, %al;movl %ecx, -(%ebp);shlb %cl, %al;jmp  <KeFindConfigurationNextEntry+>": 1,
                "jmp - <KeFindConfigurationNextEntry+>;orb $, -(%ebp);jmp - <KeFindConfigurationNextEntry+>;testl %esi, -(%ebp);je - <KeFindConfigurationNextEntry+>": 1,
                "pushl %esi;movl $, %ebx;pushl %ebx;calll - <IoEnumerateDeviceObjectList+>;movl $, %eax": 1,
                "cmpl %eax, -(%ebp);jb - <KeFindConfigurationNextEntry+>;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 2,
                "movl -(%ebp), %eax;movl $, %esi;andl %esi, %eax;movl %eax, ;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, %eax;andl %esi, %eax;movl %eax, -(%ebp);movl %ecx, %eax": 1,
                "decl %eax;je  <KeFindConfigurationNextEntry+>;decl %eax;decl %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "decl %eax;je  <KeFindConfigurationNextEntry+>;subl $, %eax;je  <KeFindConfigurationNextEntry+>;xorl %ecx, %ecx": 1,
                "movl $, %ecx;jmp  <KeFindConfigurationNextEntry+>;movl $, %ecx;movb $, %bl;movzbl %bl, %esi": 1,
                "movl %cr, %eax;movl %eax, %ecx;andl $-, %eax;movl %eax, %cr;fninit": 1,
                "movl %eax, %cr;fninit;fldl ;fstpl -(%ebp);fldl ": 1,
                "movb $, -;jmp - <KeFindConfigurationNextEntry+>;movb $, -;jmp - <KeFindConfigurationNextEntry+>;movb $, -": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movb $, -;orb $, -(%ebp);jmp - <KeFindConfigurationNextEntry+>;xorl %eax, %eax": 1,
                "movw %cx, ;jmp - <KeFindConfigurationNextEntry+>;leal (%ebx), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "jmp - <KeFindConfigurationNextEntry+>;leal (%ebx), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);movsbl (%ebx), %eax": 1,
                "nop;movl -(%ebp), %esp;orl $-, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "xorl %edi, %edi;jmp - <KeFindConfigurationNextEntry+>;pushl %edi;pushl %edi;pushl %edi": 1,
                "orl %eax, ;jmp - <KeFindConfigurationNextEntry+>;nop;nop;nop": 1,
                "jne - <KeFindConfigurationNextEntry+>;leal (%eax), %esi;pushl $;movl $, %edi;popl %ecx": 1,
                "jne  <KeFindConfigurationNextEntry+>;outsb (%esi), %dx;decl %ecx;outsb (%esi), %dx;je  <KeFindConfigurationNextEntry+>": 1,
                "pushl -(%ebp);adcl %edx, -(%ebp);calll - <MmGetPhysicalAddress>;cmpl -(%ebp), %eax;jne  <KeFindConfigurationNextEntry+>": 1,
                "movl (%ebp), %esi;pushl $;pushl %ebx;pushl (%ebp);calll - <KeFindConfigurationNextEntry+>": 1,
                "movw (%ecx), %ax;cmpw $, %ax;je  <KeFindConfigurationNextEntry+>;cmpw $, %ax;je  <KeFindConfigurationNextEntry+>": 2,
                "jb - <KeFindConfigurationNextEntry+>;movl %esi, %eax;subl %ecx, %eax;sarl %eax;leal (%eax,%eax), %eax": 1,
                "incl %ecx;cmpl %edi, %ecx;jae  <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>": 1,
                "andl $-, ;pushl $;movl %ebx, ;movl %ebx, ;calll - <ExGetSharedWaiterCount+>": 1,
                "addb %ch, (%esi);addb %ah, (%ebp);js  <KeFindConfigurationNextEntry+>;addb %al, %gs:(%eax);addb %cl, %ah": 1,
                "movl %edi, (%ecx);movl (%edx), %ecx;movl %ecx, (%eax);incl %ebx;addl $, %eax": 1,
                "popl %edi;popl %esi;jmp - <KeSetProfileIrql+>;nop;stosl %eax, %es:(%edi)": 1,
                "incl %edi;addb %ch, (%edi);popl %ecx;addb %bl, (%ebp);incl %edi": 1,
                "pushl %esi;pushl %edi;movl %eax, -(%ebp);movl %eax, -(%ebp);jne  <KeFindConfigurationNextEntry+>": 1,
                "movl %eax, -(%ebp);jne  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;movl , %ecx": 1,
                "movw (%edi), %ax;cmpw $, %ax;je  <KeFindConfigurationNextEntry+>;cmpw $, %ax;je  <KeFindConfigurationNextEntry+>": 1,
                "jmp  <KeFindConfigurationNextEntry+>;movw (%ecx), %ax;cmpw $, %ax;je  <KeFindConfigurationNextEntry+>;cmpw $, %ax": 1,
                "testw %ax, %ax;je  <KeFindConfigurationNextEntry+>;incl %ecx;incl %ecx;cmpl %edx, %ecx": 1,
                "pushl %eax;calll - <RtlEqualUnicodeString>;testb %al, %al;je  <KeFindConfigurationNextEntry+>;movl %ebx, -(%ebp)": 2,
                "incl %edi;cmpl %edx, %edi;jae  <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>": 1,
                "jmp  <KeFindConfigurationNextEntry+>;movl $, ;testb $, ;je  <KeFindConfigurationNextEntry+>;pushl ": 1,
                "jmp  <KeFindConfigurationNextEntry+>;pushl %edi;pushl %esi;calll - <RtlSubAuthoritySid+>;incl (%ebp)": 1,
                "orl %eax, %ecx;orl , %ecx;orl $, %ecx;movl %ecx, (%edi);jmp - <KeSetProfileIrql+>": 1,
                "leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %esi;movl (%esi), %ecx;andl $, %ecx;calll - <wcscmp+>": 1,
                "andl $, %ecx;xorl %ecx, (%esi);movl %edi, (%esi);movl , %ecx;leal (%eax,%eax,), %eax": 1,
                "andl %eax, ;jmp  <KeFindConfigurationNextEntry+>;movl %ebx, %eax;shrl $, %eax;pushl %edi": 1,
                "jne - <KeFindConfigurationNextEntry+>;movl , %ecx;movl -(%ebp), %ebx;cmpl %ecx, %ebx;je  <KeFindConfigurationNextEntry+>": 1,
                "jmp - <KeSetProfileIrql+>;cmpl $, (%esi);jne  <KeFindConfigurationNextEntry+>;movl $, -(%ebp);jmp - <KeSetProfileIrql+>": 1,
                "cmpb %bl, %al;jne - <KeSetProfileIrql+>;movl $, -(%ebp);jmp - <KeSetProfileIrql+>;movl $, -(%ebp)": 1,
                "jmp - <KeSetProfileIrql+>;movl (%eax), %ecx;cmpl %edx, %ecx;jae  <KeFindConfigurationNextEntry+>;movl (%eax), %edi": 1,
                "movl %edi, %ecx;movl %eax, (%esi);calll - <wcscmp+>;jmp - <INIT+>;movl , %eax": 1,
                "movl , %edx;movl %edx, (%ecx);addl $, %ecx;decl %eax;je - <INIT+>": 1,
                "jbe - <KeFindConfigurationNextEntry+>;movl $, %esi;cmpl %esi, %eax;jae - <KeFindConfigurationNextEntry+>;movl %esi, %eax": 1,
                "cmpl %edi, %edx;jl  <KeFindConfigurationNextEntry+>;movl , %ebx;cmpl %edi, %ebx;jb  <KeFindConfigurationNextEntry+>": 1,
                "jl  <KeFindConfigurationNextEntry+>;movl , %ebx;cmpl %edi, %ebx;jb  <KeFindConfigurationNextEntry+>;leal -(%edx), %edi": 1,
                "jbe  <KeFindConfigurationNextEntry+>;movl %edx, %eax;jmp  <KeFindConfigurationNextEntry+>;xorl %eax, %eax;shll $, %eax": 1,
                "xorl %edx, %edx;movl %edi, %eax;popl %ebx;divl %ebx;shll $, %eax": 1,
                "movl %esi, ;jmp  <KeFindConfigurationNextEntry+>;andl $-, ;movl %esi, %eax;shrl $, %eax": 1,
                "andl %ebx, %ecx;movl %eax, -(%ebp);subl %edi, %ecx;shrl $, %edx;movl %ecx, %eax": 1,
                "shrl $, %edx;movl %ecx, %eax;subl -(%ebp), %eax;andl $, %edx;shrl $, %esi": 1,
                "addl %ecx, ;cmpl -(%ebp), %esi;movl %eax, -(%ebp);ja  <KeFindConfigurationNextEntry+>;leal (%esi), %eax": 1,
                "andl , %ecx;incl ;calll - <IoAllocateIrp+>;movl -(%ebp), %ecx;andl $, %ecx": 1,
                "movl %esi, ;movl , %esi;orl $-, %edx;subl %ecx, %edx;leal (%eax,%ecx), %eax": 1,
                "orl $, %esi;addl %edx, ;movl %eax, -(%ebp);jmp  <KeFindConfigurationNextEntry+>;movl , %ecx": 1,
                "movl %eax, -(%ebp);jmp  <KeFindConfigurationNextEntry+>;movl , %ecx;andl , %ecx;incl ": 1,
                "movl %ecx, -(%ebp);jmp - <INIT+>;xorl %edx, %edx;movl %edx, -(%ebp);jmp - <INIT+>": 1,
                "xorl %edx, %edx;movl %edx, -(%ebp);jmp - <INIT+>;cmpl %edx, ;je - <INIT+>": 1,
                "cmpl %edx, ;je - <INIT+>;movl %edx, -(%ebp);jmp - <INIT+>;movl %ecx, %eax": 1,
                "movl -(%ebp), %eax;cmpl %edi, %eax;jae  <KeFindConfigurationNextEntry+>;movl (%eax), %ecx;addl -(%ebp), %ecx": 1,
                "movl %eax, ;jmp - <KeFindConfigurationNextEntry+>;xorl %eax, %eax;leave;retl": 1,
                "cmpl %ebx, %edx;jne  <KeFindConfigurationNextEntry+>;movl %esi, %edx;shll $, %edx;jmp - <KeFindConfigurationNextEntry+>": 1,
                "movl $, %eax;addl $, %esi;subl %edx, %eax;andl $-, %esi;shrl $, %eax": 1,
                "movl $, ;movl $, ;movl $, ;movl $, ;jmp - <KeFindConfigurationNextEntry+>": 1,
                "cmpl $, %esi;popl %ecx;ja - <KeFindConfigurationNextEntry+>;xorl %esi, %esi;jmp - <KeFindConfigurationNextEntry+>": 1,
                "ja - <KeFindConfigurationNextEntry+>;xorl %esi, %esi;jmp - <KeFindConfigurationNextEntry+>;movl , %ecx;cmpl $, %ecx": 1,
                "cmpl %ecx, %esi;movl %esi, -(%ebp);jae  <KeFindConfigurationNextEntry+>;movl %ecx, %esi;jmp  <KeFindConfigurationNextEntry+>": 1,
                "movl %ecx, %esi;jmp  <KeFindConfigurationNextEntry+>;movl $, %esi;movl %esi, -(%ebp);movl , %eax": 1,
                "addl %esi, ;movl $, %esi;cmpl %esi, -(%ebp);movl %eax, ;je  <KeFindConfigurationNextEntry+>": 1,
                "movl %eax, ;movl , %eax;andl $, %edi;subl %esi, %edi;shrl $, %eax": 1,
                "movl , %eax;andl $, %edi;subl %esi, %edi;shrl $, %eax;movl %edx, %esi": 1,
                "movl %eax, ;movl %esi, ;movl %esi, ;movl %ecx, ;movl %ecx, ": 1,
                "shrl $, %ecx;shrl $, %eax;shrl $, %esi;subl %esi, ;andl $, %ecx": 1,
                "orl %eax, ;movl $, %eax;jmp - <KeFindConfigurationNextEntry+>;movl %ecx, %eax;jmp - <KeFindConfigurationNextEntry+>": 1,
                "movl %edi, ;jmp - <KeFindConfigurationNextEntry+>;movl $, %ecx;cmpl %ecx, %eax;jae - <KeFindConfigurationNextEntry+>": 1,
                "pushl $;calll - <KeBugCheckEx>;movl , %eax;addl $, %eax;shrl $, %eax": 1,
                "pushl %eax;pushl %ebx;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, ": 3,
                "incl %ecx;pushl %ecx;leal (%eax), %ecx;pushl %ecx;pushl %eax": 2,
                "pushl %ecx;pushl %eax;calll - <RtlInitializeBitMap>;cmpl %ebx, ;je - <KeFindConfigurationNextEntry+>": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, ;je  <KeFindConfigurationNextEntry+>;movl , %ecx": 1,
                "calll - <ExFreePoolWithTag>;movl %ebx, ;jmp - <KeFindConfigurationNextEntry+>;movl %ebx, ;movl %ebx, ": 1,
                "leal (%eax), %edx;cmpl %edx, %ecx;jbe - <INIT+>;leal -(%ecx), %eax;movl %eax, ": 1,
                "cmpl %edx, %ecx;jbe - <INIT+>;leal -(%ecx), %eax;movl %eax, ;jmp - <INIT+>": 1,
                "jmp - <INIT+>;movl %esi, %edx;movl %esi, %ecx;calll - <KeFlushEntireTb+>;movl , %ecx": 1,
                "jmp - <KeSetProfileIrql+>;movl %edi, %eax;shrl $, %eax;andl $, %eax;subl $, %eax": 1,
                "movl -(%ebp), %ecx;movl %eax, %edx;shll $, %edx;andl %ebx, %ecx;orl %edx, %ecx": 1,
                "pushl %eax;movl %ecx, -(%ebp);movl %ecx, (%edx);calll - <PsIsThreadTerminating+>;jmp - <KeFindConfigurationNextEntry+>": 1,
                "shrl $, %ecx;andl $, %ecx;subl $, %ecx;movl %ecx, (%ebp);subl , %ecx": 1,
                "orl %edi, %ecx;movl %ecx, (%eax);addl %edx, %eax;decl %esi;jne - <KeFindConfigurationNextEntry+>": 1,
                "addl %edx, %eax;decl %esi;jne - <KeFindConfigurationNextEntry+>;subl %edx, %eax;jmp - <KeFindConfigurationNextEntry+>": 1,
                "je - <KeSetProfileIrql+>;pushl $;leal (%eax), %ecx;pushl %ecx;pushl %eax": 1,
                "cmpl %esi, %eax;movl %eax, -(%ebp);je - <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);jbe  <KeFindConfigurationNextEntry+>;pushl %esi;pushl %ebx": 1,
                "popl %ecx;jmp - <KeFindConfigurationNextEntry+>;movl (%esi), %esi;cmpl (%ebp), %esi;jne - <KeFindConfigurationNextEntry+>": 1,
                "incl %ebx;cmpl $, %eax;je  <KeFindConfigurationNextEntry+>;cmpl $, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "orl $, ;jmp  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp);je  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp)": 1,
                "orl $, ;jmp  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;movl (%eax), %eax;orl $, %eax": 1,
                "movl , %eax;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>;testb %al, %bl;je  <KeFindConfigurationNextEntry+>": 1,
                "decl %ebp;imull $, (%edx,%esi,), %edx;jns  <KeFindConfigurationNextEntry+>;je  <KeFindConfigurationNextEntry+>;insl %dx, %es:(%edi)": 3,
                "je  <KeFindConfigurationNextEntry+>;insl %dx, %es:(%edi);cmpb (%eax), %ah;pushl %eax;jb  <KeFindConfigurationNextEntry+>": 1,
                "jae  <KeFindConfigurationNextEntry+>;andl $, %eax;andb %ah, ;andb %ah, ;addb %cl, (%ebp)": 1,
                "andb %ch, (%ecx);andb %dh, (%edx);imull $, (%bp,%di), %esi;jns  <KeFindConfigurationNextEntry+>;popal": 2,
                "insl %dx, %es:(%edi);outsl (%esi), %dx;jne  <KeFindConfigurationNextEntry+>;andb %ah, %gs:;outsl (%esi), %dx": 1,
                "ljmpl $-, $;shrl $, %eax;andl $, %eax;shrl $, %esi;addl %esi, %eax": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movl %eax, ;jmp - <KeFindConfigurationNextEntry+>;movl $, ;jmp - <KeSetProfileIrql+>": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movl $, ;jmp - <KeSetProfileIrql+>;cmpl $-, %eax;je - <KeFindConfigurationNextEntry+>": 1,
                "popl %ecx;divl %ecx;movl $, %ecx;cmpl %ecx, %eax;jbe  <KeFindConfigurationNextEntry+>": 1,
                "jne  <KeFindConfigurationNextEntry+>;shrl %esi;shll $, %esi;pushl $;calll - <KeInitializeSpinLock>": 1,
                "addl $, %esi;movl %esi, ;orl $, (%eax);leal (%eax), %edx;movl %eax, ": 1,
                "movl , %eax;movl %ecx, ;movl %eax, %ecx;shll $, %edx;sarl $, %ecx": 1,
                "calll - <ExGetSharedWaiterCount+>;xorl %eax, %eax;incl %eax;popl %esi;jmp - <KeFindConfigurationNextEntry+>": 1,
                "shrl $, %esi;leal (%esi), %edi;shrl $, %edi;movl $, %ebx;pushl %ebx": 1,
                "cmpl $, ;je  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %edi;xorl %edi, %edi": 1,
                "pushl ;calll - <ExFreePoolWithTag>;movl %edi, ;movl , %eax;cmpl %edi, %eax": 1,
                "cmpl %ecx, -(%ebp);je  <KeFindConfigurationNextEntry+>;movl (,%ecx,), %eax;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "andl $, ;andl $, ;calll - <DbgPrint>;popl %ecx;jmp - <KeFindConfigurationNextEntry+>": 1,
                "imull $, (%esi), %ebp;jae  <KeFindConfigurationNextEntry+>;insb %dx, %es:(%edi);popal;jb  <KeFindConfigurationNextEntry+>": 1,
                "andb %dh, %gs:(%eax);jae  <KeFindConfigurationNextEntry+>;arpl %sp, (%ecx);outsb (%esi), %dx;outsl (%esi), %dx": 1,
                "jae  <KeFindConfigurationNextEntry+>;arpl %sp, (%ecx);outsb (%esi), %dx;outsl (%esi), %dx;je  <KeFindConfigurationNextEntry+>": 1,
                "arpl %sp, (%ecx);outsb (%esi), %dx;outsl (%esi), %dx;je  <KeFindConfigurationNextEntry+>;bound (%ebp), %esp": 1,
                "je  <KeFindConfigurationNextEntry+>;bound (%ebp), %esp;jne  <KeFindConfigurationNextEntry+>;andb %ah, %fs:(%esi);jb  <KeFindConfigurationNextEntry+>": 1,
                "jae  <KeFindConfigurationNextEntry+>;outsw (%esi), %dx;jb  <KeFindConfigurationNextEntry+>;popal;insb %dx, %es:(%edi)": 2,
                "outsl (%esi), %dx;jbe  <KeFindConfigurationNextEntry+>;jb  <KeFindConfigurationNextEntry+>;popal;jo  <KeFindConfigurationNextEntry+>": 2,
                "jb  <KeFindConfigurationNextEntry+>;popal;jo  <KeFindConfigurationNextEntry+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "movl %ebx, ;jmp - <KeFindConfigurationNextEntry+>;cmpl $, ;je  <KeFindConfigurationNextEntry+>;xorl %eax, %eax": 1,
                "je - <KeFindConfigurationNextEntry+>;movl $, %ecx;leal -(%eax), %edx;cmpl %ecx, %edx;movl %ecx, ": 1,
                "jmp - <KeFindConfigurationNextEntry+>;pushl $;pushl ;pushl ;jmp  <KeFindConfigurationNextEntry+>": 1,
                "divl %ecx;cmpl $, %eax;jbe  <KeFindConfigurationNextEntry+>;movl $, %eax;jmp  <KeFindConfigurationNextEntry+>": 1,
                "movl -(%ebp), %esi;movl %esi, ;jmp - <KeFindConfigurationNextEntry+>;movl %eax, %esi;movl %esi, ": 1,
                "testl %eax, %eax;movl $, ;movl %ecx, -(%ebp);movl %ecx, ;jne - <KeFindConfigurationNextEntry+>": 1,
                "movl %ecx, -(%ebp);movl %ecx, ;jne - <KeFindConfigurationNextEntry+>;cmpl $, ;ja - <KeFindConfigurationNextEntry+>": 1,
                "andl %esi, %eax;movl $, %esi;cmpl %esi, %eax;movl %eax, -(%ebp);jae  <KeFindConfigurationNextEntry+>": 1,
                "cmpl $, ;ja  <KeFindConfigurationNextEntry+>;orl $-, ;movl -(%ebp), %ecx;movl %edi, %eax": 1,
                "movl %ecx, ;movl %eax, ;jmp - <KeFindConfigurationNextEntry+>;movl , %eax;andl $-, ": 1,
                "subl %eax, %edx;addl -(%ebp), %edx;subl %ebx, %eax;subl -(%ebp), %eax;addl %edx, -(%ebp)": 1,
                "movl %esi, %eax;jmp - <KeFindConfigurationNextEntry+>;cmpl $-, %edi;je - <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>": 1,
                "negl %edi;sbbl %edi, %edi;negl %edi;shrl $, %esi;addl %esi, %edi": 2,
                "movl -(%ebp), %ebx;pushl $;calll - <KeSetProfileIrql+>;shll $, %eax;andl $, %ebx": 1,
                "jb - <KeFindConfigurationNextEntry+>;movl , %eax;jmp - <KeFindConfigurationNextEntry+>;andl $, %edx;addl $, %edx": 1,
                "andl %ebx, %edx;subl %esi, %ecx;subl %esi, %edx;cmpl %edx, %ecx;ja  <KeFindConfigurationNextEntry+>": 1,
                "jb - <KeFindConfigurationNextEntry+>;movl , %eax;jmp - <KeFindConfigurationNextEntry+>;leal -(%eax), %esi;pushl $": 1,
                "jne  <KeFindConfigurationNextEntry+>;pushl $;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;negl %esi": 1,
                "testl %edi, %edi;jne  <KeFindConfigurationNextEntry+>;pushl $;pushl ;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "xorl %edi, %edi;incl %edi;pushl %edi;pushl %edi;movl %eax, ": 1,
                "movl %eax, ;movl %eax, ;calll - <MISYSPTE+>;testl %eax, %eax;jne  <KeFindConfigurationNextEntry+>": 1,
                "movl , %edi;leal (%eax,%eax,), %eax;leal -(%edi,%eax,), %eax;shrl $, %edx;shrl $, %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %edx;jmp  <KeFindConfigurationNextEntry+>;movl (%edx), %edx;cmpl -(%ebp), %edx": 1,
                "movl , %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);jmp - <KeFindConfigurationNextEntry+>;movl , %eax": 1,
                "pushl $;calll - <KeBugCheckEx>;pushl $;calll - <KeSetProfileIrql+>;movl -(%ebp), %ecx": 1,
                "jmp - <KeSetProfileIrql+>;movl $, -(%ebp);jmp - <KeSetProfileIrql+>;movl , %edx;subl %esi, %edx": 1,
                "movl %edx, (%eax);movl (%eax), %edx;andl $, %edx;orl $, %edx;movl %edx, (%eax)": 1,
                "subl $, %eax;movl (%eax), %ecx;shrl $, %ecx;leal (%ecx,%ecx,), %ecx;leal (%edi,%ecx,), %ecx": 1,
                "leal (%edi,%ecx,), %ecx;orl $, (%ecx);cmpl %esi, ;movl , %ecx;jne  <KeFindConfigurationNextEntry+>": 1,
                "addl $, %eax;cmpl %edx, %eax;movl %esi, (%ecx);movw %si, (%ecx);jbe - <KeFindConfigurationNextEntry+>": 1,
                "leal (%ecx,%eax,), %eax;shrl $, %eax;andl %ebx, %eax;movl -(%eax), %eax;shrl $, %eax": 1,
                "movl -(%ebp), %eax;cmpl %eax, ;jne - <KeSetProfileIrql+>;movl , %eax;movl -(%ebp), %edi": 1,
                "movl $, %ecx;andl %ecx, %edi;andl %ecx, %edx;subl $, %edi;subl $, %edx": 1,
                "movl %eax, -(%ebp);movl (%edi), %esi;movl , %eax;movl %eax, (%edi);movl , %ecx": 1,
                "shrl $, %esi;leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %eax;subl $, %edi;movl %eax, -(%ebp)": 1,
                "cmpl $, (%ebp);je  <KeFindConfigurationNextEntry+>;incl %esi;pushl %esi;calll - <InbvCheckDisplayOwnership+>": 1,
                "incl ;calll - <IoAllocateIrp+>;movl %eax, %esi;movl , %ecx;leal (%esi,%esi,), %eax": 1,
                "calll - <IoAllocateIrp+>;movl %eax, %esi;movl , %ecx;leal (%esi,%esi,), %eax;leal (%ecx,%eax,), %eax": 1,
                "decl -(%ebp);movl %ecx, -(%ebp);jne - <KeFindConfigurationNextEntry+>;orl $, (%eax);movl -(%ebp), %eax": 1,
                "movl %esi, ;jmp - <KeSetProfileIrql+>;movl , %ecx;movl $, %edx;cmpl %edx, %ecx": 1,
                "jae - <KeSetProfileIrql+>;pushl $;pushl %ecx;movl %eax, %esi;pushl $": 1,
                "pushl $;movl %esi, (%ebp);calll - <ExAllocatePoolWithTag>;movl , %ecx;leal (%ecx,%ecx,), %edx": 1,
                "movl (%eax), %esi;movl %ecx, (%eax);movl , %ecx;shrl $, %esi;leal (%esi,%esi,), %eax": 1,
                "leal (%ecx,%eax,), %edi;calll *;andl $, (%edi);orl $, (%edi);movl %esi, %ecx": 1,
                "movw $, (%edi);calll - <wcscmp+>;movb %bl, %cl;jmp - <KeSetProfileIrql+>;movl $, %ebx": 1,
                "rep  stosl %eax, %es:(%edi);jmp - <KeSetProfileIrql+>;pushl ;calll - <RtlLengthSid>;pushl ": 1,
                "pushl $;leal (,%eax,), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movl %edi, %ecx;calll - <ExfReleasePushLock>;jmp - <KeFindConfigurationNextEntry+>;movb $, %cl": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "pushl $;calll - <KeBugCheckEx>;addl $, ;addl $, ;jmp - <KeFindConfigurationNextEntry+>": 1,
                "jmp - <INIT+>;pushl $;movl (%ebp), %eax;pushl (%eax);calll - <wcsstr>": 1,
                "jmp - <INIT+>;pushl $;pushl %ebx;pushl %ebx;pushl %eax": 1,
                "calll - <ZwDuplicateObject>;movl %eax, -(%ebp);cmpl %ebx, %eax;jge - <INIT+>;jmp  <KeFindConfigurationNextEntry+>": 2,
                "movl (%ebp), %esi;jmp - <INIT+>;pushl (%esi);calll - <ZwClose>;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwClose>;jmp - <INIT+>;movl %edi, %ebx;jmp - <INIT+>": 1,
                "jae  <KeFindConfigurationNextEntry+>;jb  <KeFindConfigurationNextEntry+>;jae  <KeFindConfigurationNextEntry+>;jae  <KeFindConfigurationNextEntry+>;addb %al, (%eax)": 1,
                "int;int;int;int;jmp - <INIT+>": 1,
                "movswl %cx, %edx;cmpl %esi, -(%ebp,%edx,);jne  <KeFindConfigurationNextEntry+>;decl %ecx;cmpw %si, %cx": 1,
                "jne  <KeFindConfigurationNextEntry+>;decl %ecx;cmpw %si, %cx;jge - <KeFindConfigurationNextEntry+>;cmpw %si, %cx": 1,
                "cmpl %esi, %eax;jl - <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;calll - <IoRegisterFsRegistrationChange+>": 1,
                "pushl %eax;calll - <RtlFreeUnicodeString>;jmp - <KeFindConfigurationNextEntry+>;andl $, %eax;addb %dh, (%ebx)": 1,
                "jmp - <KeSetProfileIrql+>;pushl %ebx;pushl $;pushl %ebx;movl $, ": 1,
                "movl , %eax;leal (%eax,%eax,), %ecx;shll $, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "calll - <POOLMI+>;movl %eax, %esi;cmpl %ebx, %esi;je  <KeFindConfigurationNextEntry+>;leal (%esi), %eax": 1,
                "pushl %esi;calll - <LdrFindResource_U+>;incl %edi;cmpl , %edi;jae - <KeFindConfigurationNextEntry+>": 1,
                "cmpl , %edi;jae - <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>;pushl $-": 1,
                "pushl $-;pushl $;jmp  <KeFindConfigurationNextEntry+>;movzbl %cl, %eax;cmpl $, %eax": 1,
                "pushl $;jmp  <KeFindConfigurationNextEntry+>;movzbl %cl, %eax;cmpl $, %eax;movl %eax, ": 1,
                "movl %eax, ;jmp - <KeFindConfigurationNextEntry+>;pushl $;popl %eax;movl %eax, ": 1,
                "xorl %edi, %edi;pushl %esi;incl %edi;leal (%ecx), %edx;pushl %edi": 1,
                "movb $, (%ecx);movl %ebx, (%ecx);pushl %eax;movl %edx, (%edx);movl %edx, (%edx)": 1,
                "movl %edx, (%edx);movl %edx, (%edx);calll - <LdrFindResource_U+>;movl , %eax;incl %esi": 1,
                "jmp - <KeFindConfigurationNextEntry+>;pushl $-;pushl $-;pushl $-;pushl %edi": 1,
                "pushl $;calll - <KeBugCheckEx>;movl , %eax;imull $, %eax, %eax;addl $, %eax": 1,
                "calll - <KeSetTimer>;jmp - <KeFindConfigurationNextEntry+>;xorb %al, %al;jmp - <KeFindConfigurationNextEntry+>;movl $, ": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movl $, ;jmp - <KeFindConfigurationNextEntry+>;movb %al, -(%ebp);jmp - <KeFindConfigurationNextEntry+>": 1,
                "movl $, %esi;pushl $;pushl %esi;calll - <wcscmp>;testl %eax, %eax": 1,
                "orl $, ;jmp  <KeFindConfigurationNextEntry+>;pushl $;pushl %esi;calll - <wcscmp>": 7,
                "pushl $;jmp  <KeFindConfigurationNextEntry+>;cmpb %bl, ;je - <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>": 1,
                "movb $, -;movl %ecx, -;jmp - <KeFindConfigurationNextEntry+>;pushl %esi;pushl %eax": 1,
                "pushl %ebx;pushl %ebx;pushl $;jmp  <KeFindConfigurationNextEntry+>;movl , %eax": 1,
                "jmp  <KeFindConfigurationNextEntry+>;pushl %esi;calll - <wcslen>;leal (%eax,%eax), %eax;popl %ecx": 1,
                "pushl %ebx;pushl $;jmp  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <NtQueryInformationToken+>;cmpl %ebx, %eax;jge  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl $": 1,
                "pushl %esi;pushl %eax;pushl %ebx;movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>": 2,
                "cmpl %ebx, %edi;jne  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl $;pushl -(%ebp)": 1,
                "movl %eax, -(%ebp);jne  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl $;pushl -(%ebp)": 1,
                "leal (%eax,%eax,), %eax;pushl $;shll $, %eax;jmp  <KeFindConfigurationNextEntry+>;pushl $": 1,
                "movl , %eax;pushl $;addl %esi, %eax;pushl %eax;movl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);pushl $;pushl %eax;movl , %eax": 1,
                "movl , %eax;pushl (%eax,%esi);calll - <NtFreeVirtualMemory+>;cmpl %ebx, %eax;jl  <KeFindConfigurationNextEntry+>": 1,
                "pushl $;leal (%eax), %ecx;pushl %ecx;pushl $;leal (%eax), %ecx": 1,
                "pushl %eax;jmp - <KeFindConfigurationNextEntry+>;pushl %ebx;pushl $;pushl %eax": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movl %ebx, ;jmp - <KeSetProfileIrql+>;cmpl %ebx, %ecx;jne - <KeSetProfileIrql+>": 1,
                "pushl $;popl %esi;jmp - <KeSetProfileIrql+>;movl %eax, ;jmp - <KeSetProfileIrql+>": 1,
                "movl %eax, (%ebx);movzbl (%esi), %ecx;shll $, %ecx;xorl %eax, %ecx;andl $, %ecx": 1,
                "cmpw $-, %ax;je  <KeFindConfigurationNextEntry+>;cmpw %si, %ax;je  <KeFindConfigurationNextEntry+>;orl %ecx, (%ebx)": 1,
                "je  <KeFindConfigurationNextEntry+>;orw $-, (%ebx);orw $-, (%ebx);pushl %edi;pushl $": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax;movl %eax, (%ebx);je  <KeFindConfigurationNextEntry+>;pushl $": 1,
                "jne  <KeFindConfigurationNextEntry+>;orl $-, (%ebx);movl $, (%ebx);movl $, (%ebx);movl %ebx, ": 1,
                "jmp - <KeFindConfigurationNextEntry+>;cmpl %edi, (%ebp);je  <KeFindConfigurationNextEntry+>;pushl (%esi);pushl (%esi)": 1,
                "pushl $;calll - <DbgPrint>;addl $, %esp;cmpl %edi, -(%ebp);je  <KeFindConfigurationNextEntry+>": 1,
                "cmpl %edi, %ebx;je  <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>;cmpl %edi, %ebx": 1,
                "jmp  <KeFindConfigurationNextEntry+>;cmpl %edi, %ebx;je - <KeFindConfigurationNextEntry+>;cmpl %edi, -(%ebp);je  <KeFindConfigurationNextEntry+>": 1,
                "je - <KeFindConfigurationNextEntry+>;cmpl %edi, -(%ebp);je  <KeFindConfigurationNextEntry+>;pushl $;pushl -(%ebp)": 1,
                "pushl %esi;xorl %ecx, %ecx;shll $, %eax;pushl %ecx;pushl %eax": 1,
                "movb (%eax), %cl;movb %cl, -(%ebp);movw (%eax), %cx;movw %cx, -(%ebp);movb (%eax), %cl": 1,
                "movzwl %bx, %edx;movzbl -(%ebp), %ebx;movzwl -(%ebp), %eax;movzwl -(%ebp), %ecx;shll $, %edx": 1,
                "movl -(%ebp), %eax;je  <KeFindConfigurationNextEntry+>;movzwl -(%ebp), %eax;shll $, %eax;imull %eax, %ebx": 1,
                "imull -(%ebp), %eax;jmp  <KeFindConfigurationNextEntry+>;movzwl %bx, %eax;imull %ecx, %eax;movzwl -(%ebp), %edx": 1,
                "jmp - <KeFindConfigurationNextEntry+>;nop;xorb (%ecx), %dh;cmpb (,%esi), %dh;addb %al, (%eax)": 1,
                "andb %dh, (%edx);xorb %dh, (%eax);cmpb %al, (%eax);cmpb %fs:(%eax,%edi,), %bl;jae  <KeFindConfigurationNextEntry+>": 1,
                "je  <KeFindConfigurationNextEntry+>;jae  <KeFindConfigurationNextEntry+>;js  <KeFindConfigurationNextEntry+>;js  <KeFindConfigurationNextEntry+>;jo  <KeFindConfigurationNextEntry+>": 1,
                "popl %eax;decl %ecx;pushl %eax;cmpb (%eax), %ah;bound %gs:(%ebp), %esi": 1,
                "cmpb $, %al;jae  <KeFindConfigurationNextEntry+>;andl $, %eax;orb (%edx), %cl;orb (%eax), %al": 1,
                "andl $, %eax;addb %al, (%eax);addb %bl, (%eax);pushl %eax;decl %ebp": 1,
                "andb %ah, (%edx);outsl (%esi), %dx;je  <KeFindConfigurationNextEntry+>;outsl (%esi), %dx;jo  <KeFindConfigurationNextEntry+>": 1,
                "outsw (%esi), %dx;jb  <KeFindConfigurationNextEntry+>;andb %al, %fs:(%esi);pushl %esp;andb %al, (%esi)": 1,
                "jmp - <KeSetProfileIrql+>;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;jmp - <KeSetProfileIrql+>;movl $, (%eax)": 1,
                "movl $, (%esi,%ecx,);jmp - <KeFindConfigurationNextEntry+>;nop;popl %eax;addb %bl, (%eax)": 1,
                "popl %eax;addb %bl, (%eax);popl %eax;addb %al, (%eax);addb %ah, -(%esi)": 1,
                "calll - <ExFreePoolWithTag>;jmp - <KeSetProfileIrql+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %ecx;pushl (%ecx);pushl %edi;calll *%eax;jmp - <KeFindConfigurationNextEntry+>": 1,
                "jl - <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;pushl -(%ebp);addl $, %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;pushl -(%ebp);addl $, %eax;pushl %eax;pushl -(%ebp)": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movw %bx, -(%ebp);calll - <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "imull $, (%eax), %eax;cmpl -(%ebp), %eax;je - <KeFindConfigurationNextEntry+>;movb $, %al;leave": 1,
                "pushl %ebx;pushl %edi;pushl $;pushl %ebx;pushl %eax": 1,
                "pushl (%ebp);pushl $;jmp  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax;movl %edi, (%eax)": 1,
                "xorb %al, %al;jmp - <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <ZwClose>;jmp - <INIT+>": 1,
                "pushl %eax;jmp - <INIT+>;calll - <RtlUpcaseUnicodeChar+>;movl %edi, %ecx;calll - <ObfDereferenceObject>": 1,
                "pushl %esi;jmp  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %eax;pushl $": 1,
                "jae - <KeSetProfileIrql+>;movl %ecx, %eax;jmp - <KeSetProfileIrql+>;movl %ecx, %eax;movl %eax, ": 1,
                "jmp - <INIT+>;xorb %al, %al;jmp - <INIT+>;jmp - <INIT+>;movw (%esi), %ax": 1,
                "je - <INIT+>;movl -(%ebp), %edi;pushl %edi;leal -(%ebp), %ecx;pushl %ecx": 1,
                "incl %esp;jae  <KeFindConfigurationNextEntry+>;jb  <KeFindConfigurationNextEntry+>;jo  <KeFindConfigurationNextEntry+>;imull $, (%edi), %ebp": 1,
                "jmp - <KeFindConfigurationNextEntry+>;calll - <KeAddSystemServiceTable+>;testl %eax, %eax;je - <KeFindConfigurationNextEntry+>;movl $, -(%ebp)": 1,
                "jne  <KeFindConfigurationNextEntry+>;incl %eax;incl %eax;incl %edi;incl %edi": 1,
                "jmp - <KeFindConfigurationNextEntry+>;movl %eax, %edi;movl %edi, -(%ebp);jmp - <KeFindConfigurationNextEntry+>;jmp - <KeFindConfigurationNextEntry+>": 1,
                "calll - <FsRtlIsNameInExpression+>;jmp - <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "addb %al, (%edx);outsl (%esi), %dx;addb %ch, (%edi);je  <KeFindConfigurationNextEntry+>;incl %ecx": 1,
                "addb %ah, %fs:(%ebp);outsl (%esi), %dx;addb %al, (%edx);imull $, (%eax), %eax;pushl %esi": 1,
                "nop;nop;nop;cmpb %dh, (%eax);andl $, %eax": 1,
                "incl ;movl $, -(%ebp);jmp - <KeFindConfigurationNextEntry+>;movl , %ebx;incl ": 1,
                "jmp - <KeFindConfigurationNextEntry+>;pushl $;pushl $;pushl $;calll - <DbgPrintEx>": 2,
                "addb %al, (%eax);incl %ebx;insl %dx, %es:(%edi);jo  <KeFindConfigurationNextEntry+>;imull $, (%esi), %ebp": 1,
                "pushl %eax;decl %ecx;andb %al, (%edx);decl %edi;pushl %ebx": 1,
                "xorl %eax, %eax;jmp - <KeFindConfigurationNextEntry+>;pushl ;pushl ;pushl $": 1,
                "cmpl %edi, %eax;je  <KeFindConfigurationNextEntry+>;pushl -(%ebp);movl (%eax), %edi;pushl %eax": 1,
                "jmp - <KeFindConfigurationNextEntry+>;xorl %eax, %eax;pushl %eax;pushl %edi;pushl $": 2,
                "pushl %ebx;incl %esp;pushl %esp;andb %ah, (%ecx);andb %ah, ": 3,
                "orb (%eax), %al;incl %ebx;insl %dx, %es:(%edi);jo  <KeFindConfigurationNextEntry+>;imull $, (%esi), %ebp": 5,
                "incl %ecx;incl %esp;pushl %esp;andb %ah, (%ecx);andb %ah, ": 1,
                "jb  <KeFindConfigurationNextEntry+>;popal;je  <KeFindConfigurationNextEntry+>;andl $, %eax;orb (%eax), %al": 1,
                "movb %dl, -(%ebp);jmp  <KeFindConfigurationNextEntry+>;nop;nop;nop": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%esi), %eax;movl (%ebp), %ecx": 4,
                "movl %ecx, ;je  <KeFindConfigurationNextEntry+>;orl $, %ebx;movl %ebx, %ecx;calll  <KeFindConfigurationEntry+>": 1,
                "movl %ebx, %ecx;calll  <KeFindConfigurationEntry+>;testl %ebx, %ebx;je  <KeFindConfigurationNextEntry+>;testb $, %bl": 1,
                "calll  <KeFindConfigurationEntry+>;testl %ebx, %ebx;je  <KeFindConfigurationNextEntry+>;testb $, %bl;movl $, ": 1,
                "testl %ebx, %ebx;je  <KeFindConfigurationNextEntry+>;testb $, %bl;movl $, ;jne  <KeFindConfigurationNextEntry+>": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl $;pushl (%ebp);pushl %edi;calll - <RtlCheckRegistryKey+>": 1,
                "testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>;testb $, (%esi);movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);je  <KeFindConfigurationNextEntry+>": 1,
                "movl $, %esi;jmp  <KeFindConfigurationNextEntry+>;xorl %eax, %eax;pushl $;popl %ecx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);xorl %edi, %edi;movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl (%ebx), %eax;shll $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "subl %eax, -(%ebp);pushl $;pushl %esi;sbbl %edi, -(%ebp);calll - <strstr>": 1,
                "movl %edi, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);calll - <NtOpenFile>": 1,
                "calll - <NtOpenFile>;movl %eax, %esi;cmpl %edi, %esi;jl  <KeFindConfigurationNextEntry+>;movl -(%ebp), %esi": 1,
                "pushl %eax;calll - <RtlStringFromGUID>;movl %eax, %esi;cmpl %edi, %esi;jge  <KeFindConfigurationNextEntry+>": 1,
                "popl %esp;addb %dl, (%edx);popal;addb %ch, (%ebp);addb %ch, %fs:(%ecx)": 2,
                "addb %ch, (%ebp);addb %ch, %fs:(%ecx);jae  <KeFindConfigurationNextEntry+>;imull $, (%eax), %eax;addb %dl, (%edx)": 1,
                "addb %ch, %fs:(%ecx);jae  <KeFindConfigurationNextEntry+>;imull $, (%eax), %eax;addb %dl, (%edx);decl %ecx": 1,
                "pushl %esp;addb %al, (%eax);addb %bh, ;incl %esp;decl %ecx": 1,
                "decl %ebp;incl %ecx;incl %edi;incl %ebp;decl %esp": 1,
                "addb %dh, (%edx);popal;addb %ch, (%ebp);addb %ch, %fs:(%ecx);jae  <KeFindConfigurationNextEntry+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%ebp);jne  <KeFindConfigurationNextEntry+>": 1,
                "rep  movsl (%esi), %es:(%edi);movzwl (%ebx), %ecx;movl (%ebx), %esi;subl %edx, %ecx;shrl %edx": 1,
                "movl (%ebx), %esi;subl %edx, %ecx;shrl %edx;leal (%esi,%edx,), %esi;movl %ecx, %edx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %ecx, %ecx": 1,
                "subw (%ebp), %cx;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <KeFindConfigurationNextEntry+>;pushl -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, %edi;jl  <KeFindConfigurationNextEntry+>;cmpb %bl, (%ebp);je  <KeFindConfigurationNextEntry+>;pushl -(%ebp)": 1,
                "pushl %esi;xorl %eax, %eax;leal -(%ebp), %ecx;incl %eax;pushl %ecx": 1,
                "cmpl $, -(%ebp);jne  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp);jne  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax": 1,
                "jne  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp);jne  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax;cmpb $, -(%ebp,%eax)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;jmp  <KeFindConfigurationNextEntry+>;pushl (%esi)": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);popl %edi;movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "popl %esi;movl %eax, (%ebx);popl %ebx;xorl %eax, %eax;popl %ebp": 1,
                "popl %ecx;movl %eax, -(%ebp);jbe  <KeFindConfigurationNextEntry+>;cmpl $, %eax;ja  <KeFindConfigurationNextEntry+>": 1,
                "jne  <KeFindConfigurationNextEntry+>;pushl %edi;pushl $;popl %ecx;xorl %eax, %eax": 1,
                "decl %ecx;movl %ecx, %eax;andl $, %ecx;movb $, %dl;shrl $, %eax": 1,
                "leal (%esi,%eax), %eax;orb %dl, (%eax);pushl (%esi);leal (%esi), %eax;pushl %eax": 1,
                "pushl %eax;pushl (%ebp);calll - <ZwSetValueKey>;popl %esi;popl %ebx": 1,
                "leave;retl $;nop;incl %ebx;addb %cl, (%edi)": 1,
                "decl %esi;addb %ah, (%ecx);insl %dx, %es:(%edi);addb %ah, (%ebp);andb %al, (%eax)": 1,
                "addb %ah, (%eax);addb %cl, (%ebp);addb %dh, %gs:(%edx);addb %ah, (%di);addb %al, (%eax)": 1,
                "movl %ebx, -(%ebp);je  <KeFindConfigurationNextEntry+>;pushl %edi;cmpl $, (%esi);jne  <KeFindConfigurationNextEntry+>": 1,
                "movl (%esi), %esi;cmpl %ebx, %esi;jne - <KeFindConfigurationNextEntry+>;popl %edi;pushl %ebx": 1,
                "addl (%esi), %edi;cmpl $, ;movl %eax, (%ebp);je  <KeFindConfigurationNextEntry+>;movl $, %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlGUIDFromString+>;testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>": 1,
                "xorl %eax, %eax;leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebx);movl %eax, -(%ebp)": 1,
                "pushl (%eax);leal -(%ebp), %eax;pushl $;pushl %eax;pushl -(%ebp)": 1,
                "cmpl $, -(%ebx);jne - <KeFindConfigurationNextEntry+>;andw $, (%edi);movl (%ebp), %edi;movw %ax, (%esi)": 1,
                "pushl $;popl %ebx;cmpl %ebx, -(%eax);jne  <KeFindConfigurationNextEntry+>;cmpl $, (%eax)": 1,
                "jmp  <KeFindConfigurationNextEntry+>;movl (%eax), %ecx;cmpl $, %ecx;jne  <KeFindConfigurationNextEntry+>;pushl %esi": 1,
                "jne  <KeFindConfigurationNextEntry+>;pushl %esi;calll - <wcslen>;cmpl $, (%edi);popl %ecx": 1,
                "movl -(%ebp), %eax;addl $, %esp;jmp  <KeFindConfigurationNextEntry+>;incl %eax;incl %eax": 1,
                "movl (%edi), %ecx;cmpl $, %ecx;jne  <KeFindConfigurationNextEntry+>;movl -(%ebp), %edi;pushl $": 1,
                "popl %ecx;popl %ecx;je  <KeFindConfigurationNextEntry+>;pushl $;pushl %esi": 2,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %esi;pushl -(%esi)": 1,
                "pushl %edx;addb %al, (%eax,%eax);addb %al, (%eax);addb %ch, (%edx);addb %dl, (%eax)": 1,
                "pushl %eax;addb %dl, (%ebx);xorb (%eax), %al;popl %edi;addb %cl, (%ebp)": 1,
                "nop;nop;nop;movw %cs, (%ecx);addb %al, (%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);xorb %cl, (%ecx);addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, (%eax);decl %ecx;popl %edi;addb %al, (%eax,%eax)": 1,
                "jmp  <KeFindConfigurationNextEntry+>;movl $, %eax;popl %esi;popl %ebp;retl $": 2,
                "shrb $, %cl;movzbw %cl, %dx;movl (%ebp), %ecx;pushl %ebx;pushl %esi": 1,
                "movw %dx, (%ecx);movb (%eax), %dl;movb (%eax), %bl;andb $, %dl;movzbw %dl, %dx": 1,
                "shrl $, %edx;movsbw (%edx), %dx;movw %dx, (%ecx);movzbl (%eax), %eax;andl $, %eax": 1,
                "movzbl (%eax), %eax;andl $, %eax;movsbw (%eax), %ax;andw $, (%ecx);movw %ax, (%ecx)": 1,
                "andl $, %eax;movsbw (%eax), %ax;andw $, (%ecx);movw %ax, (%ecx);popl %ebp": 1,
                "pushl %esi;calll - <wcslen>;popl %ecx;leal (%eax,%eax), %edi;pushl %edi": 1,
                "jmp  <KeFindConfigurationNextEntry+>;movb $, %bl;popl %edi;popl %esi;movb %bl, %al": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;andl $, -(%ebp);pushl $": 1,
                "pushl %edi;calll - <RtlCompareMemory>;cmpl %ebx, %eax;je  <KeFindConfigurationNextEntry+>;movl (%ebp), %edi": 1,
                "je  <KeFindConfigurationNextEntry+>;movl (%ebp), %edi;testl %edi, %edi;je  <KeFindConfigurationNextEntry+>;cmpw $, (%edi)": 1,
                "pushl %edi;calll - <RtlCompareMemory>;cmpl %ebx, %eax;je  <KeFindConfigurationNextEntry+>;addl $, %edi": 1,
                "cmpl %ebx, %eax;je  <KeFindConfigurationNextEntry+>;addl $, %edi;cmpw $, (%edi);jne - <KeFindConfigurationNextEntry+>": 1,
                "jne  <KeFindConfigurationNextEntry+>;xorl %edi, %edi;testl %edi, %edi;jne  <KeFindConfigurationNextEntry+>;incl -(%ebp)": 1,
                "cmpl %eax, -(%ebp);popl %edi;popl %esi;popl %ebx;jae  <KeFindConfigurationNextEntry+>": 1,
                "leal -(%ecx,%eax,), %eax;shll $, %eax;addl $, %eax;pushl $;xorl %edi, %edi": 1,
                "andl $, (%eax);movw %cx, (%eax);cmpl $, (%esi);leal (%eax), %edx;jbe  <KeFindConfigurationNextEntry+>": 1,
                "decl %ebx;jne  <KeFindConfigurationNextEntry+>;movl (%ecx), %ebx;andl $, (%edi);andl $, (%edi)": 1,
                "jmp  <KeFindConfigurationNextEntry+>;cmpl $, (%ecx);jne  <KeFindConfigurationNextEntry+>;movl (%ebp), %ebx;addl $-, (%ebx)": 1,
                "jae  <KeFindConfigurationNextEntry+>;movb (%eax), %dl;cmpb $, %dl;je  <KeFindConfigurationNextEntry+>;testb %dl, %dl": 1,
                "andl $, (%ecx);jmp  <KeFindConfigurationNextEntry+>;movl (%edi), %edi;cmpl %ebx, %edi;movl %eax, %esi": 1,
                "movl %eax, %esi;jae  <KeFindConfigurationNextEntry+>;movb (%edi), %al;cmpb $, %al;je  <KeFindConfigurationNextEntry+>": 1,
                "andb $-, %al;jmp  <KeFindConfigurationNextEntry+>;movzwl (%edi), %ebx;addl $, %ebx;cmpb $, %al": 1,
                "addl $, %ebx;cmpb $, %al;jne  <KeFindConfigurationNextEntry+>;leal (%esi), %eax;pushl %eax": 1,
                "jne  <KeFindConfigurationNextEntry+>;leal (%esi), %eax;pushl %eax;leal (%edi), %eax;pushl %eax": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl $;pushl (%ebp);leal -(%edi), %esi;pushl %esi": 1,
                "decl %eax;jne  <KeFindConfigurationNextEntry+>;addl $, -(%ebp);jmp  <KeFindConfigurationNextEntry+>;incl -(%ebp)": 1,
                "jbe  <KeFindConfigurationNextEntry+>;leal (%esi), %eax;movb (%ecx), %dl;cmpb -(%eax), %dl;jne  <KeFindConfigurationNextEntry+>": 1,
                "movl -(%ebp), %edx;decl %edx;je  <KeFindConfigurationNextEntry+>;decl %edx;je  <KeFindConfigurationNextEntry+>": 1,
                "cmpl (%eax), %edx;jne  <KeFindConfigurationNextEntry+>;movl (%ecx), %edx;cmpl (%eax), %edx;jne  <KeFindConfigurationNextEntry+>": 1,
                "movl -(%ebp), %edi;jae  <KeFindConfigurationNextEntry+>;incl -(%ebp);addl $, %ecx;decl -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movb (%ebp), %al;movb %al, -(%ebp);incl -(%ebp)": 1,
                "cmpl %ecx, -(%ebp);jne  <KeFindConfigurationNextEntry+>;cmpl $, %ecx;jae  <KeFindConfigurationNextEntry+>;cmpb %bl, -(%ebp)": 1,
                "movl $, %ebx;pushl %ebx;pushl $;calll - <ExAllocatePoolWithTag>;pushl %esi": 1,
                "movl %edi, -(%ebp);calll - <ExAllocatePoolWithTag>;pushl $;movl %eax, %ebx;popl %eax": 1,
                "pushl -(%ebp);calll - <ZwEnumerateKey>;movl %eax, %esi;testl %esi, %esi;jge  <KeFindConfigurationNextEntry+>": 1,
                "leal (%edi), %eax;cmpw $, (%eax);jne  <KeFindConfigurationNextEntry+>;movl (%edi), %ecx;pushl %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebx), %eax;shrl %eax;movw $, -(%ebp,%eax,);movl (%ebx), %edi": 1,
                "movw $, -(%ebp,%eax,);movl (%ebx), %edi;shrl %edi;leal -(%ebp,%edi,), %edi;movl $, %esi": 1,
                "testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;pushl $;pushl %eax;pushl $": 1,
                "movl -(%ebp), %ecx;leal (%esi,%ecx), %edx;movl %eax, (%edx);je  <KeFindConfigurationNextEntry+>;movl (%edi), %ecx": 1,
                "je  <KeFindConfigurationNextEntry+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;je  <KeFindConfigurationNextEntry+>;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %ah, (%edi);incl %ebx": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;xorl %edx, %edx;decl %eax;testl %eax, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);subb %cl, (%esi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ch, %al;pushl %eax": 1,
                "pushl %eax;calll - <RtlGUIDFromString+>;movl %eax, %ebx;testl %ebx, %ebx;jl  <KeFindConfigurationNextEntry+>": 1,
                "movw (%esi), %ax;pushl (%ebp);movw %ax, -(%ebp);movw %ax, -(%ebp);leal (%esi), %eax": 1,
                "movw $, -(%ebp);movl $, -(%ebp);jne  <KeFindConfigurationNextEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <RtlCompareUnicodeString>;testl %eax, %eax;jne  <KeFindConfigurationNextEntry+>;movl (%esi), %eax": 1,
                "addl %esi, %eax;pushl %eax;pushl -(%ebp);calll - <KeFindConfigurationNextEntry+>;jmp  <KeFindConfigurationNextEntry+>": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <KeFindConfigurationNextEntry+>;decl (%ebp);incl (%ebp)": 1,
                "testl %esi, %esi;je  <KeFindConfigurationNextEntry+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>": 1,
                "retl $;incl %esp;addb %ah, (%ebp);jbe  <KeFindConfigurationNextEntry+>;imull $, (%eax), %eax": 1,
                "jae  <KeFindConfigurationNextEntry+>;addb %al, (%eax);subb (%eax), %al;pushl %eax;addb %cl, (%esi)": 1,
                "addb %al, (%eax);addb %al, (%eax,%eax);addb %dh, (%ebx);incl %esp;addb %ah, (%ebp)": 1,
                "cmpl %ebx, %eax;je  <KeFindConfigurationNextEntry+>;leal (%eax), %ecx;movl (%eax), %eax;cmpl %ebx, %eax": 1,
                "leal (%eax), %ecx;movl (%eax), %eax;cmpl %ebx, %eax;pushl %esi;movl $, -(%ebp)": 1,
                "jne  <KeFindConfigurationNextEntry+>;xorl %edx, %edx;movb (%ecx), %dl;andl $, %edx;movl %edx, -(%ebp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll - <ZwQueryValueKey>;cmpl %ebx, %eax;jge  <KeFindConfigurationNextEntry+>": 1,
                "calll - <ZwQueryValueKey>;cmpl %ebx, %eax;jge  <KeFindConfigurationNextEntry+>;cmpl $, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "jne  <KeFindConfigurationNextEntry+>;movb $, %dl;incl %ebx;addl $, %eax;cmpl %esi, %ebx": 1,
                "cmpl %esi, %ebx;jb - <KeFindConfigurationNextEntry+>;testb %dl, %dl;je  <KeFindConfigurationNextEntry+>;movb $, (%edi)": 1,
                "movl (%ebp), %ebx;pushl %edi;xorl %edi, %edi;cmpl %edi, %eax;jbe  <KeFindConfigurationNextEntry+>": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl -(%esi), %eax;cmpl %edi, %eax;je  <KeFindConfigurationNextEntry+>": 2,
                "popl %edi;xorl %eax, %eax;popl %ebx;popl %ebp;retl $": 1,
                "pushl %edi;movl (%ebp), %edi;testl %edi, %edi;je  <KeFindConfigurationNextEntry+>;pushl $": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);jbe  <KeFindConfigurationNextEntry+>;addl $, %eax;cmpb $, -(%eax)": 1,
                "movl %eax, -(%ebp);jbe  <KeFindConfigurationNextEntry+>;addl $, %eax;cmpb $, -(%eax);jne  <KeFindConfigurationNextEntry+>": 1,
                "jbe  <KeFindConfigurationNextEntry+>;addl $, %eax;cmpb $, -(%eax);jne  <KeFindConfigurationNextEntry+>;cmpl $, (%eax)": 1,
                "movl %ecx, (%eax);incl (%ebp);movl (%ebp), %ecx;addl $, %eax;cmpl (%esi), %ecx": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %edi;xorl %edi, %edi;cmpl $, %ebx": 1,
                "cmpl $, %ebx;movl %edi, -(%ebp);jae  <KeFindConfigurationNextEntry+>;movl $, %eax;jmp  <KeFindConfigurationNextEntry+>": 1,
                "movl %edi, -(%ebp);jae  <KeFindConfigurationNextEntry+>;movl $, %eax;jmp  <KeFindConfigurationNextEntry+>;pushl %esi": 1,
                "movzbl (%esi), %ecx;movl %ebx, %eax;subl %ecx, %eax;cmpl $, %eax;leal (%esi,%ecx), %edx": 1,
                "pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>;movzbl (%esi), %eax;addl %eax, %esi": 1,
                "movw $, -(%ebx);calll - <KeFindConfigurationNextEntry+>;movw %di, (%ebx);movb (%esi), %al;movb %al, (%ebx)": 1,
                "leal (%ebx), %edi;movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl -(%ebp), %edi;movw (%edi), %ax": 1,
                "leal (%ebx), %eax;pushl %eax;leal (%ebx), %eax;pushl %eax;pushl (%ebp)": 1,
                "calll - <IoReportTargetDeviceChange+>;movzwl (%edi), %esi;subl -(%ebp), %esi;addl %edi, %esi;testl %eax, %eax": 1,
                "incl %esi;addb %dh, (%ebp);insb %dx, %es:(%edi);addb %ch, (%eax,%eax);addb %ah, (%ebp)": 1,
                "cmpb %bl, (%esi);je  <KeFindConfigurationNextEntry+>;pushl %ebx;pushl %edi;pushl $": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %ebx;pushl %eax;pushl -(%ebp)": 3,
                "jmp  <KeFindConfigurationNextEntry+>;cmpb %bl, -(%ebp);jne  <KeFindConfigurationNextEntry+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jl  <KeFindConfigurationNextEntry+>;pushl $;movl %edi, -(%ebp);popl %edi;pushl %edi": 1,
                "movl %edi, -(%ebp);popl %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%esi);movw $, -(%ebp);pushl %eax;pushl $;pushl %ebx": 2,
                "calll - <KeFindConfigurationNextEntry+>;pushl -(%ebp);calll - <ZwClose>;movl -(%esi), %eax;cmpl %ebx, %eax": 1,
                "addb %dh, (%eax,%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %dh, (%ebx);popal": 1,
                "addb %al, (%eax);addb %al, (%eax);decl %eax;addb %ah, (%ecx);jb  <KeFindConfigurationNextEntry+>": 1,
                "outsl (%esi), %dx;addb %ch, (%ebp);jo  <KeFindConfigurationNextEntry+>;popal;addb %dh, (%eax,%eax)": 1,
                "addb %ah, (%eax,%eax);addb %ah, (%ebp);addb %al, (%eax);incl %esi;addb %ch, (%ecx)": 1,
                "int;int;int;movb $, %al;popl %edi": 1,
                "calll - <RtlInitCodePageTable+>;testl %eax, %eax;jl  <KeFindConfigurationNextEntry+>;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl $;pushl -(%ebp);movl %eax, %esi;calll - <ExFreePoolWithTag>;testl %esi, %esi": 1,
                "movl %edi, -(%ebp);calll - <ZwOpenFile>;cmpl %edi, %eax;jl  <KeFindConfigurationNextEntry+>;pushl %esi": 1,
                "jl  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax;testl %eax, -(%ebp);je  <KeFindConfigurationNextEntry+>;notl %eax": 1,
                "pushl %eax;movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl (%ebp), %eax;pushl %edi;movl (%ebp), %edi;pushl $;pushl %esi": 1,
                "pushl $;pushl -(%ebp);calll - <ZwWaitForSingleObject>;movl -(%ebp), %eax;cmpl %esi, %eax": 1,
                "leal (%edi,%eax,), %eax;movw (%eax), %cx;movw %si, (%eax);jmp  <KeFindConfigurationNextEntry+>;pushl (%ebp)": 1,
                "leal (%ebx), %eax;andw $, (%eax);leal (%ebx), %ecx;pushl %eax;movw %si, (%ebx)": 1,
                "jne  <KeFindConfigurationNextEntry+>;pushl (%ebp);leal -(%ebp), %eax;pushl (%edi);pushl %eax": 1,
                "testb $, (%ebp);je  <KeFindConfigurationNextEntry+>;movl (%ebp), %eax;movl (%eax), %ecx;movl %eax, (%ebx)": 1,
                "pushl (%ebp);pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "shrl %eax;movw %cx, (%edi,%eax,);movl (%edi), %eax;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "movw %cx, (%edi,%eax,);movl (%edi), %eax;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>;addl %eax, %edi": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jne - <KeFindConfigurationNextEntry+>;movl $, -(%ebp);xorl %esi, %esi": 1,
                "jne  <KeFindConfigurationNextEntry+>;movl %esi, -(%ebp);movl -(%ebp), %eax;popl %esi;leave": 1,
                "leave;retl $;nop;popl %esp;addb %al, (%eax)": 1,
                "movl (%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);calll - <KeFindConfigurationNextEntry+>;movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);calll - <KeFindConfigurationNextEntry+>;movl %eax, -(%ebp);jmp  <KeFindConfigurationNextEntry+>;cmpl $, -(%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);leal -(%ebp), %ecx;movl %ecx, (%eax);movl %ecx, %eax": 1,
                "calll *;movl $, %ecx;movb %al, %bl;calll - <IoEnumerateDeviceObjectList+>;pushl %eax": 1,
                "nop;nop;movl , %eax;movl $, %ecx;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;je  <KeFindConfigurationEntry+>;movl %ecx, %edx;andl %eax, %edx;cmpl %ecx, %edx": 1,
                "movl %ecx, %edx;andl %eax, %edx;cmpl %ecx, %edx;je  <KeFindConfigurationEntry+>;shrl %ecx": 1,
                "pushl $;pushl %ebx;movl %ebx, -(%ebp);calll - <RtlImageDirectoryEntryToData>;testl %eax, %eax": 1,
                "sbbl %eax, %eax;sbbl $-, %eax;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;leal -(%ecx), %edi": 1,
                "sbbl $-, %eax;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;leal -(%ecx), %edi;jmp  <KeFindConfigurationEntry+>": 1,
                "cmpl $, -(%ebp);je  <KeFindConfigurationEntry+>;movl (%esi), %esi;cmpl (%ebp), %esi;movl %esi, -(%ebp)": 1,
                "jne - <KeFindConfigurationEntry+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl $;pushl (%eax);calll - <RtlImageDirectoryEntryToData>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;xorl %edi, %edi;testl %edx, %edx;leal (%ecx), %ebx": 1,
                "jmp - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;movl (%ebp), %edi;movl %edi, %edx;shrl $, %edx": 1,
                "movl (%ebp), %edi;movl %edi, %edx;shrl $, %edx;andl $, %edx;movl -(%edx), %esi": 1,
                "movl (%ebx), %edx;movl %edx, (%edi,%eax);movl $, -(%ebp);cmpl $, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlEqualUnicodeString>;testb %al, %al;jne  <KeFindConfigurationEntry+>": 2,
                "cmpl %ebx, %esi;jne - <KeFindConfigurationEntry+>;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;retl $;outsb (%esi), %dx": 1,
                "insb %dx, %es:(%edi);addb %ch, (%esi);addb %ah, (%ebp);js  <KeFindConfigurationEntry+>;addb %al, %gs:(%eax)": 1,
                "movl %edi, %ecx;movl %eax, -(%ebp);calll - <IoAllocateIrp+>;orl (%ebx), %eax;andl $, %esi": 1,
                "pushl %ecx;testb $, ;je  <KeFindConfigurationEntry+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edi, -(%ebp);movl %edi, (%ebp);jbe  <KeFindConfigurationEntry+>;pushl %ebx;pushl %esi": 1,
                "je  <KeFindConfigurationEntry+>;testb $, (%ebx);jne  <KeFindConfigurationEntry+>;leal (%ebx), %esi;pushl %esi": 1,
                "leal (%ebx), %esi;pushl %esi;pushl $;calll - <DbgPrint>;movzwl (%esi), %esi": 1,
                "jb - <KeFindConfigurationEntry+>;popl %esi;popl %ebx;movl %edi, %eax;popl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;xorb %bl, %bl;calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jl  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwQueryValueKey>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>": 1,
                "int;nop;popl %edi;addb %bl, (%edi);incl %ebx": 1,
                "incl %ecx;addb %dl, (%eax);pushl %eax;addb %al, (%eax,%eax);addb %dl, (%edx)": 1,
                "je  <KeFindConfigurationEntry+>;movl %esi, -(%ebp);cmpw %di, (%esi);jne  <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>": 1,
                "movb $, -(%ebp);movl (%ebx), %eax;movl (%eax), %esi;movl %esi, -(%ebp);cmpb $, ": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>;cmpl %edi, %esi;je  <KeFindConfigurationEntry+>": 1,
                "subl -(%ebp), %eax;sarl %eax;shll %eax;movw %ax, -(%ebp);movl -(%ebp), %eax": 2,
                "jb  <KeFindConfigurationEntry+>;movzwl %ax, %ecx;movl -(%ebp), %esi;movl (%ebx), %edi;movl %ecx, %eax": 2,
                "movw -(%ebp), %ax;cmpw %ax, (%ebx);jbe  <KeFindConfigurationEntry+>;movzwl %ax, %eax;shrl %eax": 2,
                "calll - <RtlEqualUnicodeString>;testb %al, %al;je  <KeFindConfigurationEntry+>;cmpb $, -(%ebp);jne  <KeFindConfigurationEntry+>": 1,
                "movl %eax, -(%ebp);jmp  <KeFindConfigurationEntry+>;pushl $;pushl $;pushl (%ebp)": 1,
                "calll - <RtlEqualUnicodeString>;testb %al, %al;je  <KeFindConfigurationEntry+>;movl %edi, -(%ebp);cmpb $, -(%ebp)": 1,
                "calll - <KeInitializeSpinLock>;movl $, %eax;pushl $;popl %edx;xorl %ecx, %ecx": 1,
                "movl $, %eax;pushl $;popl %edx;xorl %ecx, %ecx;movl %eax, ": 1,
                "popl %edx;xorl %ecx, %ecx;calll - <PAGEVRFY+>;testb %al, %al;je  <KeFindConfigurationEntry+>": 2,
                "calll  <KeFindConfigurationEntry+>;calll - <KeFindConfigurationEntry+>;calll  <KeFindConfigurationEntry+>;calll  <KeFindConfigurationEntry+>;calll  <KeFindConfigurationEntry+>": 1,
                "calll - <PAGEVRFY+>;cmpl $, %eax;jg  <KeFindConfigurationEntry+>;andl $, ;andl $, ": 1,
                "pushl %edi;movl $, %ecx;xorl %eax, %eax;movl $, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl $, %edi;rep  stosl %eax, %es:(%edi);popl %edi;retl;int": 1,
                "pushl %eax;pushl $;movl %eax, ;movl %eax, ;calll - <RtlInitUnicodeString>": 1,
                "pushl %eax;pushl $;pushl $;pushl $;movl $, %edx": 2,
                "pushl $;pushl $;pushl $;movl $, %edx;movb $, %cl": 3,
                "pushl %eax;calll - <ZwCreateKey>;movl %eax, %ebx;cmpl %edi, %ebx;jge  <KeFindConfigurationEntry+>": 2,
                "movl %edi, -(%ebp);jmp  <KeFindConfigurationEntry+>;incl -(%ebp);pushl -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <ZwSetValueKey>;movl %eax, %ebx;cmpl %edi, -(%ebp);je  <KeFindConfigurationEntry+>;pushl -(%ebp)": 1,
                "movl %eax, %ebx;cmpl %edi, -(%ebp);je  <KeFindConfigurationEntry+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlInitUnicodeString>;pushl (%esi);leal -(%ebp), %eax;pushl (%esi);pushl $": 1,
                "incl %ebx;addb %dl, (%eax);pushl %ebx;addb %ah, (%ebp);jb  <KeFindConfigurationEntry+>": 1,
                "jb  <KeFindConfigurationEntry+>;jbe  <KeFindConfigurationEntry+>;addb %dh, %gs:(%edx);incl %ecx;addb %al, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%edx);outsl (%esi), %dx;addb %ch, (%edi);je  <KeFindConfigurationEntry+>": 1,
                "incl %ebx;testb %al, %al;je  <KeFindConfigurationEntry+>;pushl %ebx;pushl (%ebp)": 1,
                "popl %esi;addb %ah, (%eax,%ebx,);addb %ch, (%ebx);addb %bl, (%edi);popl %esp": 1,
                "popl %edi;addb %dl, (%edx,%eax);popl %edi;addb %ch, (%eax);popl %edi": 1,
                "addb %ch, (%eax);popl %edi;addb %cl, (%eax);popl %edi;addb %ah, (%edi)": 1,
                "addb %al, (%eax,%ebx,);popl %edi;addb %bh, %al;popl %es;popl %edi": 1,
                "cmpl $, (%ebp);movb $, -(%ebp);je  <KeFindConfigurationEntry+>;pushl %edi;movl (%ebp), %edi": 1,
                "movl (%edi), %eax;pushl %ebx;pushl $;pushl %esi;movl %eax, -(%ebp)": 1,
                "pushl $;pushl %esi;calll - <_stricmp>;testl %eax, %eax;popl %ecx": 1,
                "movb (%ecx), %dl;incl %ecx;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;subl %edi, %ecx": 1,
                "incl %ecx;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;subl %edi, %ecx;movl %ecx, %edx": 1,
                "movl $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);calll - <ZwOpenSection>;testl %eax, %eax": 1,
                "andl $, %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "movl %edi, -(%ebp);calll - <ZwMapViewOfSection>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;movl (%ebp), %eax": 1,
                "movl %esi, %edi;movl %eax, (%ebx);popl %esi;movl %edi, %eax;popl %edi": 1,
                "xorl %edx, %edx;rep  cmpsb %es:(%edi), (%esi);je  <KeFindConfigurationEntry+>;pushl %eax;pushl $": 1,
                "movl (%ebp), %eax;cmpl (%ebp), %eax;setne %al;jmp  <KeFindConfigurationEntry+>;movl (%ebp), %eax": 1,
                "nop;cmpl $, %eax;cmpl $, %eax;addb %al, (%eax);cmpb $, %al": 1,
                "movl (%ebp), %esi;addl %esi, %ebx;leal (%esi,%edi), %eax;cmpl %ebx, %eax;jae  <KeFindConfigurationEntry+>": 1,
                "jae  <KeFindConfigurationEntry+>;movl %eax, (%ebp);cmpb $, (%ebp);pushl %edi;pushl (%ebp)": 1,
                "pushl %edi;pushl (%ebp);pushl %esi;je  <KeFindConfigurationEntry+>;calll - <_strnicmp>": 1,
                "popl %ebx;popl %ebp;retl $;movl %esi, %eax;jmp - <KeFindConfigurationEntry+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>": 7,
                "movb (%eax), %dl;movzbl %dl, %ecx;xorl %esi, %esi;xorl %ebx, %ebx;testl %ecx, %ecx": 1,
                "pushl %edi;pushl (%ebp);pushl %esi;calll  <KeFindConfigurationEntry+>;cmpl %ebx, %eax": 1,
                "retl $;incl %ebx;insb %dx, %es:(%edi);popal;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;jne  <KeFindConfigurationEntry+>;addb %cl, %ah;int;int": 1,
                "pushl (%ebp);movl %eax, -(%ebp);calll  <KeFindConfigurationEntry+>;pushl $;pushl %esi": 1,
                "movl %eax, (%ebp);calll  <KeFindConfigurationEntry+>;pushl $;pushl %esi;pushl %edi": 1,
                "pushl %eax;calll - <_strupr+>;pushl $;pushl %ebx;pushl (%ebp)": 1,
                "pushl $;movw %ax, (%ebp);leal (%ebp), %eax;pushl %ebx;pushl %eax": 2,
                "testb %al, %al;je  <KeFindConfigurationEntry+>;pushl $;pushl %ebx;pushl -(%ebp)": 2,
                "pushl $;pushl %ebx;pushl -(%ebp);calll - <_strupr+>;pushl $": 2,
                "pushl %eax;calll - <KeFindConfigurationEntry+>;cmpl %ebx, %eax;je  <KeFindConfigurationEntry+>;pushl -(%ebp)": 1,
                "pushl %ecx;pushl %eax;calll - <RtlCompareMemory>;pushl -(%ebp);cmpl -(%ebp), %eax": 3,
                "pushl %ebx;pushl %ebx;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "testb %al, %al;je  <KeFindConfigurationEntry+>;pushl $;pushl $;pushl %ebx": 1,
                "pushl %esi;movl %eax, -(%ebp);calll  <KeFindConfigurationEntry+>;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "pushl %edi;pushl %esi;movl $, -(%ebp);calll - <KeFindConfigurationEntry+>;testb %al, %al": 1,
                "pushl $;pushl -(%ebp);movl %eax, -(%ebp);jne  <KeFindConfigurationEntry+>;calll - <_strupr+>": 2,
                "jne  <KeFindConfigurationEntry+>;calll - <_strupr+>;movl %eax, %esi;addl $, %esp;shll $, %esi": 1,
                "addl $, %esp;addl %eax, %esi;pushl $;pushl %esi;leal -(%ebp), %eax": 2,
                "je  <KeFindConfigurationEntry+>;pushl -(%ebp);leal -(%ebp), %ecx;pushl -(%ebp);pushl %ecx": 1,
                "pushl %eax;calll - <KeFindConfigurationEntry+>;movl %eax, %ebx;testl %ebx, %ebx;je  <KeFindConfigurationEntry+>": 1,
                "calll - <KeFindConfigurationEntry+>;movl %eax, %ebx;testl %ebx, %ebx;je  <KeFindConfigurationEntry+>;pushl $": 1,
                "je  <KeFindConfigurationEntry+>;pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>;movl (%eax), %esi;movzwl (%eax), %eax": 1,
                "jne  <KeFindConfigurationEntry+>;movzwl (%eax), %ecx;leal (%eax,%ecx), %eax;pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "movzwl (%eax), %ecx;leal (%eax,%ecx), %eax;pushl -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %eax, -(%ebp);pushl %edi;pushl %esi;movb $, -(%ebp);movb $, -(%ebp)": 1,
                "testl %ebx, %ebx;movl %eax, -(%ebp);je  <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>": 1,
                "calll - <KeFindConfigurationNextEntry+>;movl %eax, %ebx;testl %ebx, %ebx;je  <KeFindConfigurationEntry+>;xorl %eax, %eax": 2,
                "pushl %eax;calll - <RtlInitString>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlEqualString>;pushl -(%ebp)": 1,
                "movb $, (%edi);movl (%ebp), %eax;movl (%eax), %esi;movl (%ebp), %ebx;cmpl %ebx, %esi": 1,
                "popl %ecx;je  <KeFindConfigurationEntry+>;incl %ebx;cmpl (%ebp), %ebx;jb - <KeFindConfigurationEntry+>": 1,
                "popl %ecx;jne  <KeFindConfigurationEntry+>;incl %esi;cmpl %ebx, %esi;jb - <KeFindConfigurationEntry+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp);jne  <KeFindConfigurationEntry+>": 1,
                "movl $, (%edi);jmp  <KeFindConfigurationEntry+>;pushl %ebx;pushl -(%ebp);pushl %eax": 1,
                "movl %ebx, (%edi);jmp  <KeFindConfigurationEntry+>;movl $, (%edi);jmp  <KeFindConfigurationEntry+>;movl $, (%edi)": 1,
                "jne  <KeFindConfigurationEntry+>;jmp - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "jmp  <KeFindConfigurationEntry+>;movl (%ebp), %eax;movl %esi, (%eax);andl $, (%edi);andl $, (%edi)": 1,
                "movb (%eax), %dl;incl %eax;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;subl %ecx, %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;jne  <KeFindConfigurationEntry+>;cmpl $, %ebx;jbe  <KeFindConfigurationEntry+>": 1,
                "popl %esi;movl (%ebp), %eax;popl %edi;popl %ebx;popl %ebp": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <KeFindConfigurationEntry+>": 4,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;pushl (%esi);calll - <KeFindConfigurationEntry+>": 2,
                "je  <KeFindConfigurationEntry+>;movl (%esi), %eax;testl %eax, %eax;je  <KeFindConfigurationEntry+>;pushl (%ebp)": 1,
                "testl %eax, %eax;je  <KeFindConfigurationEntry+>;pushl (%ebp);pushl %eax;calll - <_stricmp>": 1,
                "pushl (%ebp);pushl (%ebp);calll - <KeFindConfigurationEntry+>;negl %eax;sbbl %eax, %eax": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl (%ebp);calll - <KeFindConfigurationEntry+>;testl %eax, %eax": 2,
                "pushl %esi;pushl (%ebp);xorl %esi, %esi;pushl (%ebp);calll - <KeFindConfigurationEntry+>": 2,
                "calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>;cmpb $, (%eax);je  <KeFindConfigurationEntry+>": 1,
                "jmp  <KeFindConfigurationEntry+>;xorb %al, %al;popl %ebp;retl $;int": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %edi;pushl (%ebp)": 1,
                "pushl %eax;calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>;pushl %ebx": 1,
                "movl (%eax), %esi;xorl %eax, %eax;testl %esi, %esi;je  <KeFindConfigurationEntry+>;cmpl (%ebp), %eax": 1,
                "testl %esi, %esi;je  <KeFindConfigurationEntry+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl $;pushl %ebx;calll - <_strupr+>;movl (%ebp), %ecx;addl $, %esp": 1,
                "movl (%esi), %esi;testl %esi, %esi;je  <KeFindConfigurationEntry+>;jmp - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;movb $, -(%ebp);popl %esi;popl %ebx;movl (%ebp), %eax": 1,
                "testl %edi, %edi;je  <KeFindConfigurationEntry+>;movl (%ebx), %esi;testl %esi, %esi;je  <KeFindConfigurationEntry+>": 1,
                "movw (%eax), %ax;cmpw %cx, %ax;jne  <KeFindConfigurationEntry+>;movl $, (%ebp);jmp  <KeFindConfigurationEntry+>": 1,
                "cmpw %dx, %cx;jne  <KeFindConfigurationEntry+>;movl $, (%ebp);jmp  <KeFindConfigurationEntry+>;andw %ax, %cx": 1,
                "movl $, (%ebp);jmp  <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>;movl $, (%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>;movl $, (%ebp);movl (%ebp), %eax": 1,
                "cmpl (%ebx), %eax;jle  <KeFindConfigurationEntry+>;movl %esi, (%ebx);andl $, (%ebx);andl $, (%ebx)": 1,
                "cmpl %ebx, %esi;jne  <KeFindConfigurationEntry+>;xorl %eax, %eax;jmp  <KeFindConfigurationEntry+>;movl (%ebp), %eax": 1,
                "movb (%eax), %cl;movb %cl, (%edx,%eax);incl %eax;cmpb %bl, %cl;jne - <KeFindConfigurationEntry+>": 1,
                "movb -(%ebp), %al;movl %ecx, -(%ebp);movb %al, -(%ebp);jmp  <KeFindConfigurationEntry+>;movl %edi, -(%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;movl %edi, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);jmp  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;movl %ebx, -(%ebp);jmp  <KeFindConfigurationEntry+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "movb $, (%ebp);je  <KeFindConfigurationEntry+>;movl %ebx, -(%ebp);jmp  <KeFindConfigurationEntry+>;movl -(%ebp), %eax": 1,
                "pushl %esi;movl %edi, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);calll - <KeFindConfigurationEntry+>": 3,
                "cmpl %ebx, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);je  <KeFindConfigurationEntry+>": 1,
                "cmpl %ebx, -(%ebp);je  <KeFindConfigurationEntry+>;cmpb %bl, -(%ebp);je  <KeFindConfigurationEntry+>;pushl %ebx": 1,
                "movb %bl, -(%ebp);calll - <KeFindConfigurationEntry+>;testb %al, %al;jne - <KeFindConfigurationEntry+>;movb $, (%ebp)": 1,
                "je - <KeFindConfigurationEntry+>;jmp - <KeFindConfigurationEntry+>;jmp - <KeFindConfigurationEntry+>;movl -(%ebp), %eax;subl %ebx, %eax": 1,
                "jmp - <KeFindConfigurationEntry+>;cmpl $, -(%ebp);jne  <KeFindConfigurationEntry+>;incl -(%ebp);cmpb %bl, (%ebp)": 1,
                "je - <KeFindConfigurationEntry+>;cmpl %ebx, %esi;je  <KeFindConfigurationEntry+>;movl %ebx, (%esi);movl %esi, %eax": 1,
                "pushl %ebx;pushl %eax;incl %ecx;incl %ebx;incl %ebp": 1,
                "decl %edi;decl %esi;addb %cl, %ah;nop;nop": 1,
                "jo  <KeFindConfigurationEntry+>;jo  <KeFindConfigurationEntry+>;outsb (%esi), %dx;decl %ecx;outsb (%esi), %dx": 1,
                "xorl %esi, %esi;andl %esi, -(%ebp);movl -(%ebp), %eax;pushl (%eax);pushl %edi": 1,
                "movb %al, -(%ebp);incl (%ebp);pushl (%ebp);pushl (%ebp);pushl %ebx": 1,
                "movb $, -(%ebp);cmpl $, (%ebp);popl %esi;je  <KeFindConfigurationEntry+>;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);popl %edi;movb -(%ebp), %al;popl %ebx;leave": 1,
                "nop;nop;movb $, %ah;popl %edi;addb %bl, (%edi)": 1,
                "nop;movb $, %ah;popl %edi;addb %bl, (%edi);popl %ss": 1,
                "addb %bl, (%edi);popl %ss;popl %edi;addb %dl, -(%ecx);int": 1,
                "movl $, %edi;movl %edi, -(%ebp);jbe  <KeFindConfigurationEntry+>;cmpl $, %ecx;jbe  <KeFindConfigurationEntry+>": 1,
                "movl %eax, (%ebp);je  <KeFindConfigurationEntry+>;movl (%ebp), %eax;addl %edi, %eax;pushl %eax": 1,
                "je  <KeFindConfigurationEntry+>;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitAnsiString>": 2,
                "movl -(%ebp), %eax;leal (%eax,%eax), %eax;movw %ax, -(%ebp);pushl %ebx;leal -(%ebp), %eax": 1,
                "movzwl -(%ebp), %eax;addl %eax, -(%ebp);incl %esi;cmpl (%ebp), %esi;jb - <KeFindConfigurationEntry+>": 1,
                "cmpl (%ebp), %esi;jne  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;movw %bx, (%eax);movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %esi;movl %eax, (%esi);je  <KeFindConfigurationEntry+>;pushl (%ebp);pushl (%ebp)": 1,
                "jne  <KeFindConfigurationEntry+>;pushl %ebx;pushl (%edi);pushl (%esi);pushl (%ebp)": 1,
                "movl (%ebp), %ecx;leal (%eax,%eax), %eax;pushl $;movl %eax, (%ecx);pushl %eax": 1,
                "movl %eax, -(%ebp);movl %ebx, (%esi);je  <KeFindConfigurationEntry+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "calll - <KeFindConfigurationEntry+>;testb %al, %al;jne - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;jmp - <KeFindConfigurationEntry+>": 1,
                "testb %cl, %cl;jne - <KeFindConfigurationEntry+>;subl %edx, %eax;pushl $;pushl (%ebp)": 1,
                "movb (%eax), %dl;incl %eax;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;movl %ebx, %edi": 1,
                "cmpl %esi, %eax;movl %eax, -(%ebp);jl  <KeFindConfigurationEntry+>;leal (%ebp), %eax;pushl %eax": 1,
                "jl  <KeFindConfigurationEntry+>;leal (%ebp), %eax;pushl %eax;pushl %esi;pushl %esi": 2,
                "pushl %eax;pushl (%ebp);movl %esi, (%ebp);calll - <ZwQueryValueKey>;cmpl %esi, (%ebp)": 1,
                "pushl (%ebp);movl %esi, (%ebp);calll - <ZwQueryValueKey>;cmpl %esi, (%ebp);movl %eax, -(%ebp)": 1,
                "je  <KeFindConfigurationEntry+>;movl (%ebx), %ecx;movl (%ebx), %esi;movl %ecx, %edx;shrl $, %ecx": 1,
                "insb %dx, %es:(%edi);je  <KeFindConfigurationEntry+>;pushl %ebx;jp  <KeFindConfigurationEntry+>;andb %al, (%esi)": 2,
                "pushl %edi;pushl (%ebp);movl $, %esi;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl %edi;pushl (%ebp);calll - <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;cmpl $, %edi;je  <KeFindConfigurationEntry+>;movl $, %eax;jmp  <KeFindConfigurationEntry+>": 1,
                "andl $, %ecx;pushl %ecx;pushl %esi;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl %ecx;pushl %ecx;pushl %ecx;pushl $;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwDeleteValueKey>;jmp  <KeFindConfigurationEntry+>;andl $-, (%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;testb $, (%ebp);je  <KeFindConfigurationEntry+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;pushl -(%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;testb $, (%ebp);je  <KeFindConfigurationEntry+>;xorl %esi, %esi;movl %esi, %eax": 1,
                "calll - <KeFindConfigurationEntry+>;pushl $;pushl (%ebp);movl %eax, %edi;pushl (%ebp)": 1,
                "pushl %ebx;movl %eax, (%ebp);pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <KeFindConfigurationEntry+>;movl %eax, %esi;testl %esi, %esi;jl  <KeFindConfigurationEntry+>;cmpl $, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <ZwDeleteValueKey>;movl %eax, %esi": 1,
                "calll - <ZwDeleteValueKey>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>": 1,
                "je  <KeFindConfigurationEntry+>;pushl $;pushl %ebx;pushl (%ebp);pushl %esi": 1,
                "movl %esi, (%ebp);calll - <ZwQueryValueKey>;cmpl %esi, (%ebp);movl %eax, %edi;je  <KeFindConfigurationEntry+>": 1,
                "cmpl %esi, (%ebp);movl %eax, %edi;je  <KeFindConfigurationEntry+>;pushl $;pushl (%ebp)": 1,
                "jne  <KeFindConfigurationEntry+>;cmpl $, (%esi);jne  <KeFindConfigurationEntry+>;movl (%esi), %eax;movl -(%ebp), %ecx": 1,
                "notb %cl;andb %cl, (%eax);pushl (%esi);movl (%esi), %eax;addl %esi, %eax": 1,
                "je  <KeFindConfigurationEntry+>;bound (%ebp), %esp;jb  <KeFindConfigurationEntry+>;popal;andb %ah, %fs:(%esi)": 1,
                "je  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;pushl $;movb $, (%ebx);movl (%eax), %eax": 1,
                "pushl %eax;calll - <IoCreateSymbolicLink>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;pushl $": 1,
                "cmpb (%eax), %al;addb %al, (%eax);addb %al, (%eax);popl %esp;addb %al, (%eax,%eax)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;pushl $;pushl $;movl $, -(%ebp)": 1,
                "movl %eax, %edi;calll - <NtClose>;movl %edi, %eax;popl %edi;popl %esi": 1,
                "cmpw $, (%esi);pushl %edi;movl (%eax), %edi;je  <KeFindConfigurationEntry+>;leal (%edi), %ebx": 1,
                "popl %ecx;popl %ecx;je  <KeFindConfigurationEntry+>;pushl %esi;calll - <wcslen>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);je  <KeFindConfigurationEntry+>;xorl %eax, %eax;jmp  <KeFindConfigurationEntry+>": 1,
                "calll - <ZwCreateKey>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;pushl $;popl %ecx": 1,
                "movl $, -(%ebp);calll - <ZwQueryValueKey>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;cmpl $, -(%ebp)": 2,
                "pushl -(%ebp);calll - <ZwSetValueKey>;pushl $;pushl $;pushl $": 1,
                "movl %edi, %eax;leal (%eax), %ecx;movb (%eax), %dl;incl %eax;cmpb %bl, %dl": 3,
                "leal (%eax), %ecx;movb (%eax), %dl;incl %eax;cmpb %bl, %dl;jne - <KeFindConfigurationEntry+>": 2,
                "pushl %eax;pushl -(%ebp);calll - <ZwSetValueKey>;movl %edi, %eax;leal (%eax), %ecx": 2,
                "incl %eax;cmpb %bl, %dl;je  <KeFindConfigurationEntry+>;jmp - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>": 1,
                "pushl %edi;xorl %edi, %edi;incl %edi;pushl %edi;pushl %ebx": 1,
                "popl %edi;popl %esi;je  <KeFindConfigurationEntry+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %ebx": 1,
                "addb %al, (%edx);incl %ebp;addb %dh, (%ecx);addb %dh, (%eax);addb %dh, (%ebx)": 4,
                "addb %dh, (%edi);addb %al, (%eax,%eax);addb %dh, (%eax,%eax);xorb %al, (%eax);subl $, %eax": 3,
                "addb %bh, (%ecx);addb %dh, ;addb %al, (%eax);addb %dl, (%eax);outsb (%esi), %dx": 1,
                "addb %dl, (%eax);outsb (%esi), %dx;addb %dl, (%eax);decl %ecx;addb %ch, (%esi)": 1,
                "addb %dh, %gs:(%eax,%eax);addb %ah, (%ecx);jb  <KeFindConfigurationEntry+>;addb %cl, %fs:(%ecx);outsb (%esi), %dx": 2,
                "addb %bh, (%eax);addb %bh, (%ebp);popl %esp;addb %dh, (%eax);addb %dh, (%eax)": 2,
                "outsb (%esi), %dx;addb %ah, (%esi);outsl (%esi), %dx;addb %al, (%eax);addb %cl, (%eax)": 1,
                "jbe  <KeFindConfigurationEntry+>;imull $, (%eax), %eax;decl %ecx;addb %ch, (%esi);jae  <KeFindConfigurationEntry+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;xorl %ecx, %ecx;movb (%ebp), %ch;movl %eax, %edx": 1,
                "shll $, %eax;orl %eax, %edx;shll $, %edx;movb (%ebp), %cl;orl %edx, %ecx": 1,
                "movb (%ebp), %cl;orl %edx, %ecx;movl %ecx, %eax;popl %ebp;retl $": 1,
                "addb %dh, (%esi);imull $, (%eax), %eax;popl %esp;addb %cl, (%esi);addb %dh, %gs:(%eax,%eax)": 1,
                "addb %dl, (%eax,%eax);addb %dh, (%eax);imull $, (%eax), %eax;jnp  <KeFindConfigurationEntry+>;xorl $, %eax": 1,
                "movl $, %eax;jmp  <KeFindConfigurationEntry+>;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "pushl %eax;pushl %eax;movsl (%esi), %es:(%edi);pushl %eax;pushl (%ebp)": 1,
                "calll - <NtDeviceIoControlFile>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "movl $, %eax;jmp  <KeFindConfigurationEntry+>;pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "pushl -(%ebp);calll - <FsRtlIsNameInExpression+>;pushl -(%ebp);movl %eax, %esi;calll - <NtClose>": 2,
                "calll - <FsRtlIsNameInExpression+>;pushl -(%ebp);movl %eax, %esi;calll - <NtClose>;leal -(%ebp), %eax": 1,
                "calll - <RtlFreeUnicodeString>;cmpl %edi, %esi;jl  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <_wcslwr>;leal -(%ebp), %eax;movl $, (%esp);pushl %eax": 1,
                "calll - <_wcslwr>;leal -(%ebp), %eax;movl $, (%esp);pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "leal -(%ebp), %eax;movl $, (%esp);pushl %eax;calll - <RtlInitUnicodeString>;movl (%ebx), %eax": 1,
                "jne - <KeFindConfigurationEntry+>;movl %edx, %ecx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx": 1,
                "jl  <KeFindConfigurationEntry+>;movl (%ebx), %eax;addl $, %eax;pushl %eax;pushl $": 2,
                "leal (%eax,%eax), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;xorl %ebx, %ebx": 1,
                "incl %ebx;pushl %ebx;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <ZwSetValueKey>;movl %eax, %esi;cmpl %edi, %esi;jl  <KeFindConfigurationEntry+>;pushl $": 1,
                "addb %dh, %gs:(%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <KeFindConfigurationEntry+>;imull $, (%eax), %eax": 2,
                "imull $, (%eax), %eax;jae  <KeFindConfigurationEntry+>;popl %esp;addb %dl, (%eax,%eax);addb %dh, (%eax)": 2,
                "popl %esp;addb %dl, (%eax,%eax);addb %dh, (%eax);imull $, (%eax), %eax;pushl %eax": 2,
                "popal;addb %ch, (%ebp);addb %dh, %gs:(%eax,%eax);addb %dh, (%edx);jae  <KeFindConfigurationEntry+>": 2,
                "outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%eax);addb %bl, (%esp,%eax,);jbe  <KeFindConfigurationEntry+>": 1,
                "outsl (%esi), %dx;addb %ch, (%edi);je  <KeFindConfigurationEntry+>;pushl %edx;addb %ch, (%edi)": 1,
                "je  <KeFindConfigurationEntry+>;pushl %edx;addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax)": 1,
                "pushl $;addb %ah, (%ebp);incl %esp;addb %ch, (%ecx);jb  <KeFindConfigurationEntry+>": 1,
                "addb %ah, (%ebp);incl %esp;addb %ch, (%ecx);jb  <KeFindConfigurationEntry+>;addb %ah, %gs:(%ebx)": 1,
                "insl %dx, %es:(%edi);addb %ah, (%ecx);addb %ah, (%di);pushl %eax;addb %ah, (%ecx)": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);calll - <KeFindConfigurationEntry+>;pushl -(%ebp)": 1,
                "movl %eax, %ebx;cmpl %esi, %ebx;jne  <KeFindConfigurationEntry+>;movl $, %edi;jmp  <KeFindConfigurationEntry+>": 1,
                "cmpl %esi, %ebx;jne  <KeFindConfigurationEntry+>;movl $, %edi;jmp  <KeFindConfigurationEntry+>;pushl $": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax": 2,
                "pushl %esi;pushl -(%ebp);calll - <NtFsControlFile>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "cmpl %esi, %edi;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %edi;testl %edi, %edi;jl  <KeFindConfigurationEntry+>": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ObOpenObjectByName+>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "leal (%ebx), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlCreateUnicodeString>": 2,
                "movl %eax, %esi;calll - <NtClose>;testl %esi, %esi;jl - <KeFindConfigurationEntry+>;leal (%ebx), %eax": 1,
                "testl %esi, %esi;jl - <KeFindConfigurationEntry+>;leal (%ebx), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movzwl -(%ebp), %ecx;movl -(%ebp), %esi;movl %ecx, %eax;shrl $, %ecx;leal (%ebx), %edi": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlFreeUnicodeString>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl %edx, -(%ebp)": 1,
                "testl %edi, %edi;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %edi;testl %edi, %edi;jl  <KeFindConfigurationEntry+>": 2,
                "pushl $;calll - <KeDelayExecutionThread>;pushl $;popl %ecx;pushl $": 1,
                "pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;cmpl %esi, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "pushl %edx;addb %ah, (%ebp);arpl %ax, (%eax);addb %ch, %gs:(%ecx);jbe  <KeFindConfigurationEntry+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;subl $, %eax;je  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;subl $, %eax;je  <KeFindConfigurationEntry+>;orl $-, %eax;jmp  <KeFindConfigurationEntry+>": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, %eax;popl %ebp;retl $;int": 1,
                "addl %esi, %eax;jne  <KeFindConfigurationEntry+>;movl $, %eax;jmp  <KeFindConfigurationEntry+>;movl (%eax), %eax": 1,
                "addb %ch, (%edi);insb %dx, %es:(%edi);addb %al, (%eax);addb %al, (%eax);addb %dl, (%eax)": 1,
                "incl %esp;addb %ah, (%ebp);jae  <KeFindConfigurationEntry+>;arpl %ax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax,%eax);addb %al, (%eax);addb %cl, (%eax);popal;addb %dh, (%edx)": 1,
                "addb %cl, %gs:(%ecx);incl %esp;addb %al, (%eax);addb %al, (%eax);addb %ch, (%edx)": 1,
                "xorl %eax, (%eax);incl %esi;addb %dh, (%eax);addb %dh, (%eax);addb %al, (%eax)": 1,
                "decl %ebp;addb %cl, (%ecx);incl %ebx;addb %dl, (%edx);decl %edi": 3,
                "addb %al, (%eax);addb %al, (%eax);decl %ebp;addb %cl, (%ecx);incl %ebx": 2,
                "addb %al, (%eax);decl %ebp;addb %cl, (%ecx);incl %ebx;addb %dl, (%edx)": 2,
                "addb %al, (%esi);pushl %esp;addb %ah, (%eax);addb %dl, (%ebx);incl %ebp": 1,
                "pushl %eax;addb %dh, (%eax);addb %al, (%esi);xorb %al, (%eax);xorb (%eax), %al": 1,
                "pushl %eax;addb %dl, (%ebx);xorb (%eax), %al;andb %al, (%eax);decl %ebp": 2,
                "addb %dh, (%eax);addb %dh, (%ebx);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebp)": 1,
                "pushl %eax;addb %al, (%ebx);cmpl %eax, (%eax);cmpb %al, (%eax);popl %edi": 2,
                "je  <KeFindConfigurationEntry+>;outsl (%esi), %dx;addb %dh, (%eax);decl %ebx;addb %al, (%ebp)": 1,
                "incl %ebp;addb %bl, (%ecx);addb %al, (%eax);subb (%eax), %al;pushl %eax": 2,
                "decl %esi;addb %cl, (%eax);incl %ecx;addb %cl, (%esi);incl %ebx": 1,
                "incl %ecx;addb %cl, (%esi);incl %ebx;addb %al, (%ebp);incl %esp": 1,
                "xorl %eax, (%eax);xorb %al, (%eax);xorb (%eax), %al;decl %ebx;addb %al, (%ebp)": 1,
                "addb %cl, (%edi);decl %esp;addb %cl, (%ecx);popl %edi;addb %bh, (%eax)": 1,
                "addb %dh, (%eax);addb %dh, (%edx);addb %cl, (%ebx);incl %ebp;addb %bl, (%ecx)": 1,
                "addb %bl, (%edi);xorl (%eax), %eax;xorb %al, (%eax);xorl %eax, (%eax);addb %al, (%eax)": 1,
                "pushl %eax;addb %dh, (%eax);addb %dh, (%ebx);addb %dh, (%eax);addb %dh, (%eax,%eax)": 1,
                "addb %bl, (%edi);cmpb %al, (%eax);xorl (%eax), %eax;decl %ebx;addb %al, (%ebp)": 1,
                "xorl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %eax;addb %al, (%ebx)": 1,
                "addb %bl, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);nop": 1,
                "addb %bl, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb $, (%eax);pushl %eax;decl %edi;popl %edi;addb %cl, (%edi)": 1,
                "addb %al, (%eax);nop;nop;incl %ebp;addb %dh, (%eax,%eax)": 1,
                "addb %dl, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb $, (%eax);andb %dl, (%eax);addb %cl, (%edi);je  <KeFindConfigurationEntry+>": 1,
                "pushl %esi;addb %ch, (%ecx);addb %ah, %fs:(%ebp);outsl (%esi), %dx;addb %ah, (%eax)": 1,
                "nop;addb %al, (%eax);addb %al, (%eax);rclb (%eax);addb %al, (%eax)": 1,
                "nop;nop;incl %esi;addb %ch, (%eax,%eax);addb %dh, (%ebx)": 1,
                "jb  <KeFindConfigurationEntry+>;jns  <KeFindConfigurationEntry+>;addb %al, (%eax);nop;nop": 1,
                "nop;nop;pushl %edx;addb %al, (%ecx);decl %ebp": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %ch, (%ecx,%edx,);addb %al, (%eax);cwtl": 1,
                "pushl %es;addb %al, (%eax);popl %esp;pushl %ecx;popl %edi": 1,
                "popl %edi;addb %al, (%eax);addb $, (%eax);xorb %dl, (%ecx);addb %cl, (%edi)": 1,
                "addb %cl, (%ebp);incl %ebx;addb %cl, (%ecx);incl %ecx;addb %al, (%eax)": 1,
                "addb %al, (%ebp);decl %ecx;addb %dl, (%ebx);incl %ecx;addb %al, (%eax)": 1,
                "addb %cl, (%ecx);pushl %ebx;addb %al, (%ecx);addb %al, (%eax);decl %eax": 1,
                "popl %edi;addb %al, (%edx);addl %eax, (%eax);addb %al, (%eax);popl %edi": 1,
                "addb $, (%eax);subb %dl, (%edx);addb %cl, (%edi);je  <KeFindConfigurationEntry+>;pushl $": 1,
                "addb %bh, %cs:(%eax);andb %al, (%eax);jo  <KeFindConfigurationEntry+>;popal;addb %dh, (%edx)": 1,
                "addb %al, (%eax);addb %dl, (%eax);popal;addb %dh, (%edx);popal": 1,
                "addb %dh, (%esi);addb %dh, (%eax,%eax);xorl $, %eax;addb %bl, (%eax);pushl %esp": 1,
                "addb %ah, (%eax);addb %dh, (%ebx);jns  <KeFindConfigurationEntry+>;jae  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>": 1,
                "imull $, (%eax), %eax;cmpb %al, (%eax);xorb (%eax), %al;xorl $, %eax;addb %dl, (%eax)": 2,
                "aaa;addb %al, (%eax);addb %dl, (%eax);addb %dl, (%ebx);incl %ecx": 1,
                "addb %ah, (%edi);imull $, (%eax), %eax;jp  <KeFindConfigurationEntry+>;addb %dh, %gs:(%edx);addb %al, (%eax)": 1,
                "jns  <KeFindConfigurationEntry+>;bound (%eax), %eax;outsl (%esi), %dx;addb %ah, (%ecx);jb  <KeFindConfigurationEntry+>": 1,
                "outsl (%esi), %dx;addb %ah, (%ecx);jb  <KeFindConfigurationEntry+>;addb %al, %fs:(%eax);addb %dl, -(%eax)": 1,
                "jb  <KeFindConfigurationEntry+>;addb %al, %fs:(%eax);addb %dl, -(%eax);nop;addb %al, (%eax)": 1,
                "addb %dh, (%eax,%eax);addb %ah, (%ebp);jb  <KeFindConfigurationEntry+>;andb %al, (%eax);addb %ch, %fs:(%edi)": 1,
                "addb %ch, %fs:(%edi);arpl %ax, (%eax);imull $, (%eax), %eax;addb %dl, -(%eax);nop": 1,
                "addb %al, (%eax);addl %eax, (%eax);addb %ch, (%eax);popl %edi;addb %al, (%eax)": 1,
                "incl %eax;addb %al, (%eax);xorb %dl, (%ebp);addb %al, (%ebx);outsl (%esi), %dx": 1,
                "incl %ecx;addb %ch, (%eax,%eax);addb %ch, (%eax);popal;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %bh, -(%ebp,%edx,);addb %al, (%eax);cwtl": 1,
                "imull $, (%eax), %eax;andb %al, (%eax);bound (%eax), %eax;jne  <KeFindConfigurationEntry+>;jae  <KeFindConfigurationEntry+>": 1,
                "andb %dh, (%bx,%si);jbe  <KeFindConfigurationEntry+>;outsl (%esi), %dx;jne  <KeFindConfigurationEntry+>;andb %ah, (%ecx)": 1,
                "subl $, %eax;outsl (%esi), %dx;ja  <KeFindConfigurationEntry+>;andb %dh, (%edx);xorb %dh, (%eax)": 1,
                "arpl %bp, (%bx,%si);arpl %bp, (%ebx);addb %al, (%eax);pushl %ebx;jns  <KeFindConfigurationEntry+>": 1,
                "outsb (%esi), %dx;addb %al, (%bx,%si);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %ah, (%ebx);addb %dh, %gs:(%ebx);jae  <KeFindConfigurationEntry+>": 1,
                "outsl (%esi), %dx;addb %ah, (%ebx);addb %dh, %gs:(%ebx);jae  <KeFindConfigurationEntry+>;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dh, (%edx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);incl %ecx": 1,
                "popal;je  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;jbe  <KeFindConfigurationEntry+>;jae  <KeFindConfigurationEntry+>": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;addb %al, (%ecx);pushl %eax;decl %ecx": 2,
                "pushl %esp;popal;bound (%ebp), %ebp;addb %al, %fs:(%eax);incl %ecx": 1,
                "insl %dx, %es:(%edi);pushl %ebx;popal;insl %dx, %es:(%edi);addb %al, %gs:(%eax)": 1,
                "addb %dl, (%eax);imull $, (%esi), %ebp;js  <KeFindConfigurationEntry+>;decl %ebp;popal": 1,
                "js  <KeFindConfigurationEntry+>;decl %ebp;popal;je  <KeFindConfigurationEntry+>;pushl $": 1,
                "popl %ebx;popl %ebp;cmpl $, %eax;orb (%ebx,%ecx), %cl;orl $, %eax": 1,
                "addb %al, (%eax);nop;incl %edx;imull $, (%edx,%edx,), %esi;insb %dx, %es:(%edi)": 1,
                "imull $, (%edx,%edx,), %esi;insb %dx, %es:(%edi);pushl %edx;addb %al, %gs:(%bx,%si);incl %ecx": 1,
                "popl %edi;addb %al, (%edx);nop;nop;nop": 5,
                "nop;fcomps (%eax);addb %al, (%ecx);nop;nop": 1,
                "nop;nop;cld;popl %eax;popl %edi": 1,
                "andb %bl, (%ecx);addb %al, (%edx);nop;nop;nop": 1,
                "cmpb %bl, (%ecx);addb %al, (%edx);nop;nop;nop": 1,
                "popl %esp;popl %ecx;popl %edi;addb %al, (%ecx);nop": 1,
                "nop;cwtl;popl %ecx;popl %edi;addb %al, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%edx,%ebx,)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax);popl %edx": 1,
                "addb %al, (%eax);addb %cl, (%eax);popl %edx;popl %ds;addb %ch, (%ebp,%eax)": 1,
                "popl %ds;addb %cl, (%ebx);incl %ebx;decl %edi;decl %ebp": 1,
                "decl %edi;decl %ebp;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %dl, (%eax)": 2,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %dl, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dl, (%eax);popl %esp;popl %ds": 1,
                "decl %ebp;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %dl, (%eax);addb %cl, -(%eax)": 1,
                "decl %ecx;outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi;addb %al, (%ebx);addb %dl, (%esi)": 1,
                "pushl %ebx;arpl %si, (%edx);outsb %gs:(%esi), %dx;pushl %esp;outsl (%esi), %dx": 1,
                "arpl %si, (%edx);outsb %gs:(%esi), %dx;pushl %esp;outsl (%esi), %dx;incl %edx": 1,
                "addb (%eax), %al;pushl %esi;imull $, (%ebx,%eax,), %esp;jo  <KeFindConfigurationEntry+>;addb %cl, (%eax)": 1,
                "pushl %edx;jo  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;pushl %edx;jae  <KeFindConfigurationEntry+>": 1,
                "arpl %sp, (%ebp);jae  <KeFindConfigurationEntry+>;addb %al, %gs:(%bx,%si);addl $, %eax;incl %ecx": 1,
                "jae  <KeFindConfigurationEntry+>;addb %al, %gs:(%bx,%si);addl $, %eax;incl %ecx;insb %dx, %es:(%edi)": 1,
                "pushl %edx;popal;insb %dx, %es:(%edi);pushl %esp;imull $, (%ebp), %ebp": 1,
                "arpl %sp, (%ecx);incl %ecx;popal;jo  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);incl %ebp;js  <KeFindConfigurationEntry+>;arpl %si, (%ebp)": 1,
                "insb %dx, %es:(%edi);pushl %esp;jb  <KeFindConfigurationEntry+>;outsb (%esi), %dx;jae  <KeFindConfigurationEntry+>": 1,
                "arpl %bp, (%ebx);decl %esp;addb %cl, (%ebx);incl %ecx;arpl %si, (%ecx)": 1,
                "andl (%eax), %eax;decl %eax;popal;insb %dx, %es:(%edi);pushl %edx": 1,
                "jb  <KeFindConfigurationEntry+>;pushl %esp;outsl (%esi), %dx;incl %esi;imull $, (%edx), %esi": 1,
                "pushl %edx;incl %ebp;incl %ecx;incl %esp;popl %edi": 2,
                "incl %ecx;incl %esp;popl %edi;pushl %eax;decl %edi": 3,
                "incl %esp;popl %edi;pushl %eax;decl %edi;pushl %edx": 3,
                "pushl %edx;pushl %esp;addb %al, (%eax);pushl %esp;addb %dl, (%edx)": 1,
                "decl %esi;incl %edi;addb %bl, (%ecx);pushl %edi;pushl %edx": 1,
                "outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi;pushl %eax;jb  <KeFindConfigurationEntry+>;arpl %sp, (%ebp)": 1,
                "outsl (%esi), %dx;jne  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;addb %ch, (%ecx)": 1,
                "je  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;jne  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>;incl %ebp": 1,
                "outsb (%esi), %dx;popal;bound (%ebp), %ebp;jns  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);addb (%eax), %al;incl %ebp;js  <KeFindConfigurationEntry+>": 1,
                "jb  <KeFindConfigurationEntry+>;insb %dx, %es:(%edi);addb %al, %gs:(%eax);popl %ds;addb %cl, (%eax)": 1,
                "outsb (%esi), %dx;jae  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;xorl (%eax), %eax;decl %ecx": 1,
                "incl %esi;jb  <KeFindConfigurationEntry+>;incl %ecx;popal;jo  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;imull $, (%ebp), %ebp;insl %dx, %es:(%edi);outsb %gs:(%esi), %dx;je  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;outsb (%esi), %dx;jbe  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;outsb (%esi), %dx": 2,
                "popal;imull $, (%ebx), %esi;addb %dl, (%edi);addb %cl, (%eax);insb %dx, %es:(%edi)": 1,
                "incl %edi;je  <KeFindConfigurationEntry+>;outsb (%esi), %dx;je  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>": 1,
                "insb %dx, %es:(%edi);pushl %ebx;je  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;pushl %eax": 1,
                "incl %esp;bound %gs:(%ebp), %esi;jb  <KeFindConfigurationEntry+>;outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi": 2
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                "RichJ]": 1,
                ".text": 1,
                "hPOOLMI": 1,
                "hMISYSPTE": 1,
                "hPOOLCODE": 1,
                "h.data": 1,
                "`PAGELK": 1,
                "`PAGEVRFY": 1,
                "`PAGEWMI": 1,
                "`PAGEKD": 1,
                "`PAGESPECC": 1,
                "`PAGEHDLS": 1,
                "`.edata": 1,
                "@PAGEDATAX": 1,
                "PAGEKD": 1,
                "PAGECONS": 1,
                "PAGEVRFCI4": 1,
                "@PAGEVRFDH": 1,
                ".rsrc": 1,
                "@.reloc": 1,
                "\\REGISTRY\\MACHINE\\SYSTEM\\DISK": 1,
                "\\Device\\Harddisk%d\\Partition%d": 4,
                "2600.xpsp.080413-2111": 1,
                "(null)": 1,
                "_nextafter": 1,
                "_logb": 1,
                "frexp": 1,
                "_hypot": 1,
                "_cabs": 1,
                "ldexp": 1,
                "floor": 1,
                "atan2": 1,
                "log10": 1,
                "F38N3}": 1,
                "QQSVW3": 5,
                "Th'\"@": 1,
                "____^[]": 1,
                "VC10XC00U": 1,
                "tnHt.": 1,
                "PPPPPPPP": 1,
                "O(TPQ": 1,
                "O(8O)t": 1,
                "TUSVW": 1,
                "L$$+\\$": 1,
                "t@JQt-": 1,
                "F Qt<": 1,
                "GD;FD": 1,
                "f9B t/": 1,
                "eT_^[]f": 5,
                "T_^[]": 4,
                "U<PPPRQS": 1,
                "_^[]Z": 2,
                ";USVW": 1,
                "L$0]_^[": 1,
                "tkSWV": 1,
                "U\\RQP": 1,
                "<&t|<": 1,
                "<$vl<0r~<3wz": 1,
                "]hWSP": 1,
                "9Mht*": 1,
                "9Mhu@": 1,
                "uhUVQPWj": 1,
                "VC20XC00U": 1,
                "SVWUj": 1,
                ";t$(v(": 1,
                "UQPXY]Y[": 1,
                "<$tPf": 2,
                "s @C%": 1,
                "f;N$u": 3,
                "$SVWd": 3,
                "Gn(G3": 1,
                "F3:G3": 1,
                "tISV3": 1,
                "9V`tA": 1,
                "P,SVW": 1,
                "`SVWd": 1,
                "PVVVVj": 1,
                "t=;~0u89": 1,
                "BBFFf": 2,
                "F<_^[": 1,
                "QSVW>": 1,
                "FD8Xi": 1,
                "SSSSj": 14,
                "QQSVW": 19,
                "9~Dt5": 1,
                "t`j(W": 1,
                "AABBf": 1,
                "F&SSSh9%T": 1,
                "@0f!V.f": 1,
                "VhCcBch": 1,
                ";^ r3": 1,
                "F(9^ ": 1,
                "N49^4u": 1,
                "ReEv3": 1,
                "F(9N t5": 1,
                "9~Dt4": 1,
                "hMmCaj`V": 1,
                "uT_^[": 1,
                "tH9V$tC": 1,
                "Nl 9^\\": 1,
                "hCcSch0": 1,
                "f9s,u": 1,
                "@_^[]": 9,
                ";5,[G": 1,
                "G(9W ": 1,
                "hCcPcjXW": 1,
                "u[_^[]": 1,
                "hCcVlh": 2,
                "QQSVWd": 3,
                ":MZu1": 1,
                "QQSV3": 4,
                "C  t!": 1,
                " (8PX": 1,
                "700WP": 1,
                "`h````": 1,
                "ppxxxx": 1,
                "hMdl Pj": 1,
                "hReTa": 1,
                "ReSe3": 1,
                "hIrp ": 2,
                "F&SSShTHB": 1,
                "N<f9G": 1,
                "C:;5T": 1,
                "QSVWd": 3,
                "hCcPBh": 2,
                "QSWWS": 1,
                "w4WPj": 1,
                "hE#E#": 1,
                "hMmdlWV": 1,
                "hMmInh": 1,
                "N&SSSh9%T": 1,
                ";H4w!r": 1,
                "hPp  ": 8,
                "hFSrmjx": 1,
                "F`^[]": 1,
                "GGBBf": 1,
                "u&:NY": 1,
                "hIo  Rj": 1,
                "hIo  j": 7,
                "@[_^]": 1,
                ";F$sE": 1,
                "hMmpvj": 3,
                "hVadlj4j": 4,
                "+t]W3": 1,
                "QSVW3": 5,
                "VhPpenj S": 1,
                "@,*NG": 3,
                "hPstaj": 1,
                "WjGY3": 1,
                "hWmiwj": 1,
                "AAFFf": 2,
                "hIoErSj": 1,
                "F _^[]": 1,
                "u:GG3": 1,
                "RRRRj": 1,
                "hIo  ": 27,
                "~t_^3": 1,
                "hMmCm": 1,
                "u$VPW": 1,
                "hIo  Vj": 2,
                "WjhVj": 1,
                "tMSV3": 1,
                "hDriv": 1,
                "hCBRej": 1,
                "}}8F)rx8^*us3": 1,
                "hFstbPj": 5,
                "hNone": 2,
                "uIhDOPEjLW": 1,
                "ShIoUsj": 1,
                "A0;F0": 1,
                "j hPeC": 1,
                "hFSroj": 1,
                "j@h(iC": 1,
                "NX99t": 1,
                "hFSmg": 2,
                "FSmgV": 1,
                "hFstBVj": 2,
                " ,,@,@D": 1,
                "hSeAch": 1,
                "hSeSdj": 3,
                "VVVVVVP": 1,
                "QQVW3": 3,
                "VWhp/H": 1,
                "u\"Sh1": 1,
                "4u1AA": 1,
                "K QPhV": 1,
                "hIrp Pj": 2,
                "hFSrmP": 1,
                ":!A!B!C!D!E!F!G!H!I!2": 1,
                "Q!R!S!T!]!c!d!e!m!w": 1,
                "t%SSP": 1,
                "N QVP": 1,
                "hCcVp": 1,
                "C3:A3": 1,
                "hCcBrj j": 1,
                "VVh AH": 1,
                ";N0uS": 1,
                "SWVTh(": 1,
                "SWVTh": 1,
                "Fl u=9^`u8": 1,
                "SSPhQ": 1,
                "f9X2t": 1,
                "9~|uGhCcEvj": 1,
                "C@WVS": 1,
                "tC9sHu>9": 1,
                "Cl u@": 1,
                "hFSrm": 1,
                "~ WVP": 2,
                "F(PQW": 1,
                "F.f;F,s": 1,
                "PPPPj\"": 1,
                ";KDr9": 1,
                "hFSrN": 2,
                "C<;CDr": 1,
                "u&;wP": 1,
                "RPVj0": 1,
                "u5hNPX h": 1,
                "pDVWS": 1,
                "tCHt+H": 1,
                "WWSj`h": 1,
                "hMmPr": 1,
                "9u$u$": 1,
                "hMm  j,3": 1,
                "hMmdpj": 1,
                "hMmTxj": 2,
                "SVhQ4": 1,
                "A driver has leaked %d bytes of physical memory.": 1,
                "PWSVjz": 1,
                "t0f9Y": 1,
                "t*Ht\"Ht": 1,
                "*******************************************************************************": 4,
                "* A driver is mapping physical memory %p->%p": 1,
                "* that it does not own.  This can cause internal CPU corruption.": 1,
                "* A checked build will stop in the kernel debugger": 1,
                "* so this problem can be fully debugged.": 1,
                "9N t?": 1,
                "SSh @H": 1,
                "VVh =H": 1,
                "RQPjM": 1,
                "MmEnsureAvailablePageOrWait: 7 min timeout": 1,
                "Without a debugger attached, the following bugcheck would have occurred.": 1,
                "%3lx ": 1,
                "%3lxp ": 1,
                "%p %p %p %p": 1,
                "@PPPQ": 1,
                "NONOP": 1,
                "SSSPj": 1,
                "hPoPs": 2,
                "hSeAc": 7,
                "t,It$It": 1,
                "VDEST": 1,
                "-np1A": 1,
                "'+?2LF": 1,
                "E:Jess*": 1,
                "EricF.Nelson&,": 1,
                "@R.!z": 1,
                "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *": 28,
                "* * VF: ": 28,
                "* * * * * * * * HAL Verifier Detected Violation * * * * * * * *": 28,
                "EX: Invalid attempt to free protected pool block %x (%c%c%c%c)": 1,
                "ShCcDwj(3": 1,
                "Gl u>9w`u9": 1,
                "Fl u>9~`u9": 1,
                "SSSSV": 5,
                "SVWtb": 1,
                "VhFSrt": 2,
                "j(hxTE": 1,
                "j(h VE": 1,
                "t=8X$t8": 1,
                "j,h8YE": 1,
                "hFSmg3": 1,
                "uehFOCXj(W": 1,
                "ShFSrsj": 1,
                "SSSSh": 8,
                "FstbV3": 1,
                "PPPj\\": 1,
                "PSjpjpSS": 2,
                ";PDu,": 1,
                "tDhKAPCj0j": 1,
                "hIoErj": 2,
                "hIoErPV": 1,
                "tIhKAPCj0V": 1,
                "C%VWP": 1,
                "hcbuf": 2,
                "hDImg": 1,
                "PAGEWh": 1,
                "E$tHW": 1,
                "E$t|V": 1,
                "E$tQQ": 1,
                "%Z: %3d": 2,
                "hSDMPj ": 1,
                "|6)] ": 1,
                "]$VW3": 1,
                "8;M(s": 2,
                "hPAGEh": 1,
                "E$PSW": 1,
                "PSSWh": 2,
                "hD2d Pj": 1,
                "B\"@@;": 1,
                "B#:B\"": 1,
                "VhPpioj": 1,
                "9N$txQQQ": 1,
                "9~$t6WWWW": 1,
                "PpdeW": 1,
                "tyWVj": 1,
                "t>Ht#HuY9": 1,
                "It!It": 1,
                "@hCM  ": 2,
                "PPPPj": 1,
                "sdVWVj": 1,
                "|MVWVW": 1,
                "9~Dt3": 1,
                "BAANu": 1,
                "%s**  %12s - Address %p base at %p, DateStamp %08lx": 1,
                "VVVVj": 2,
                "*** Fatal System Error: 0x%08lx": 1,
                "                       (0x%p,0x%p,0x%p,0x%p)": 1,
                "Driver at fault: %s.": 1,
                "*** STOP: 0x%08lX (0x%p,0x%p,0x%p,0x%p)": 1,
                "PPPPP": 3,
                "Wu0hKe  h": 1,
                "$SVW>": 1,
                "Ht&Ht": 1,
                "IIt&IIt": 1,
                "SVt9Wj": 1,
                "uwQRS": 1,
                "t8Ht+Ht": 1,
                "j hWrap": 2,
                "@<_^[": 1,
                "VhMmLkj0j": 1,
                ";B,uE": 1,
                "9B uV": 1,
                "hMmSyj0P": 1,
                "t<HHu;": 1,
                "*QPWh": 1,
                "ItvItVI": 1,
                "t2hMmPmj": 1,
                "95XAH": 1,
                "9=XAH": 1,
                "twJtfJtFJu}": 1,
                "Mp10W": 1,
                "f9N,vX": 1,
                ";54>H": 1,
                "t_HtHHt:H": 1,
                "W8_^[": 1,
                "@^_[]": 1,
                "j@hhFF": 1,
                "It)It": 1,
                "hMmGcPj": 1,
                "SVWj ": 1,
                "t)90u": 1,
                "hObSTP": 1,
                "ObpPushStackInfo -- ObpStackTable overflow!": 1,
                "uQhObSTh": 1,
                "ObpRegisterObject - ExAllocatePoolWithTag failed.": 1,
                "8PNB u^": 1,
                "8P ^t": 1,
                "hPNB j$j": 1,
                "VhPNSCj": 1,
                "hPNTGj": 1,
                "WWWSj": 1,
                "HL9HH|": 1,
                "|DhlfX": 1,
                "QQSV>": 1,
                "t9SV3": 1,
                "VWt?f": 1,
                "VRQWPh": 1,
                "Function: ": 1,
                "*** Assertion failed: %s%s": 1,
                "***   %s%s%sSource File: %s, line %ld": 1,
                "Break repeatedly, break Once, Ignore, terminate Process, or terminate Thread (boipt)? ": 1,
                "Execute '.cxr %p' to dump context": 1,
                "|tj!j": 1,
                "SVWtv": 1,
                "H_t4Ht(Ht": 1,
                "u2f9V": 1,
                "ffff:": 2,
                "::%hs%u.%u.%u.%u": 1,
                "::ffff:0:%u.%u.%u.%u": 1,
                ":%u.%u.%u.%u": 1,
                "%u.%u.%u.%u": 1,
                "u3f9V": 1,
                ":u>9U": 1,
                "VWtW9M": 1,
                ">%u}F": 1,
                "HtzHtJHt": 1,
                "f90u\"9U": 1,
                ":u:9U": 1,
                "u!GGf": 1,
                "YYtYj": 1,
                "Trace database: failed to release segment %p ": 1,
                "Trace database: failing attempt to save biiiiig trace (size %u) ": 1,
                "hEdbgPj": 1,
                "v8;NPr": 1,
                "SVWt?": 1,
                "Failed to normalize PE header for validation": 1,
                "Header too large (%u>%u) for copy/normalize/validate": 1,
                "PE header hash ID comparsion failure (PE2)": 1,
                "t^HtTHt2Ht!": 1,
                "Unrecognized": 1,
                "HOTP_ID_PeDebugSignature": 1,
                "HOTP_ID_PeHeaderHash2": 1,
                "HOTP_ID_PeHeaderHash1": 1,
                "HOTP_ID_None": 1,
                "VWjFY3": 1,
                "|sSVd": 1,
                "Rh@fV": 1,
                "Ph@fV": 1,
                "hVDM ": 5,
                "QjPVP": 1,
                "t_VhX,E": 3,
                "**** Bad IRQL -- needed %x, got %x ****": 1,
                "**** Bad IRQL -- needed %x or less, got %x ****": 1,
                "tXhX,E": 1,
                "v@ShH": 1,
                "$9^@h": 2,
                ";N@v_": 1,
                "t[hX,E": 1,
                "Allocated too many map registers : %x (max %x)": 1,
                "Allocating too many map registers at a time: %x (max %x)": 1,
                "tWVhX,E": 1,
                "Freed too many map registers: %x": 1,
                ";~Tv_": 1,
                "t[ShX,E": 1,
                "Freed too many common buffers": 1,
                "tXWhX,E": 1,
                "Driver did not flush adapter buffers -- bytes mapped: %x (%x max)": 1,
                "t`WhX,E": 1,
                "Driver has allocated too many simultaneous adapter channels": 1,
                ";~\\ta": 1,
                "t]ShX,E": 1,
                "Driver has freed too many simultaneous adapter channels": 1,
                "Driver has freed too many scatter gather lists %x allocated, %x freed": 1,
                "t`VhX,E": 1,
                "DMA Pages Not Locked! MDL %p for DMA not locked": 1,
                "Too many outstanding reference counts (%x) for adapter %p": 1,
                "Driver is trying to map an address range(%p-%p) that is already mapped    at %p": 1,
                "Map registers needed: %x available: %x": 1,
                "Virtual address %p out of bounds of MDL %p": 1,
                "It~ItqItKIt": 1,
                "EX: ExFreePool( %p, %lx ) contains an ERESOURCE structure that has not been ExDeleteResourced": 1,
                "9>txC": 1,
                "PoolV": 2,
                "PPPPh": 8,
                "KP+KH": 1,
                "Kd+KH": 1,
                "WhInfoS": 1,
                "1AA9U": 1,
                "SVWt+": 1,
                "tRHtCHt4Ht%HtFHHt": 1,
                "Ht+HHt Ht": 1,
                "HtYHHt7Ht!": 1,
                "WhProf": 1,
                "G:4zJ": 1,
                "ntoskrnl.pdb": 1,
                ")^ SW": 1,
                "WSjPh": 1,
                "^ 9;t": 1,
                "6PVj j": 1,
                "f.>&de6": 1,
                "*** ISR at %lx appears to have an interrupt storm": 1,
                "D@<\\t`XTD@<\\EA=]": 1,
                "DmaVrfy0": 1,
                "X9x}.A": 1,
                "%$%a%b%V%U%c%Q%W%]%\\%[%": 1,
                "%4%,%": 1,
                "%<%^%_%Z%T%i%f%`%P%l%g%h%d%e%Y%X%R%S%k%j%": 1,
                "e\"d\" #!#": 1,
                "FFGGf;": 2,
                "E,SVW3": 1,
                "4SVWd": 2,
                "VVVVVj": 1,
                "u SSW": 1,
                "ObjTt": 1,
                "QQSVW>": 1,
                "hObNmSj": 1,
                "hObNm": 2,
                "hMmCajPj": 1,
                "9Atom": 1,
                "t(SVW": 1,
                "hWaitPV": 1,
                "E _^[]": 1,
                "E SV3": 1,
                "hObSth": 1,
                "hVadSj": 2,
                "PSSjDS": 1,
                ">20yku": 1,
                ">20yk": 1,
                "E$_^[": 1,
                "f9{0t": 3,
                "9H$t*": 1,
                "RPPQP": 1,
                "C2hIoNm": 1,
                "j<hP\\A": 1,
                "hIoOpj`j": 1,
                "jThX]A": 1,
                "E SVW": 1,
                "FFBBf": 1,
                "RRQWP": 1,
                "AA@Bf;S": 1,
                "hCMVa": 1,
                "hCMDa": 1,
                "jThPXA": 1,
                ";riVW": 1,
                "f=lft": 4,
                "hObNmPj": 3,
                "jDhh4A": 1,
                "PLj$Y3": 1,
                "jUPSW": 1,
                "hSeSdPj": 1,
                "hSeSd": 2,
                "hSeTdj8W": 2,
                "A;HLr": 1,
                "hSeTdVj": 1,
                "J0+rx": 2,
                "j|hp0A": 1,
                "t!f9p": 1,
                "hObSc": 1,
                "j<hx9A": 1,
                "hIoEa": 2,
                "hStrg": 3,
                "hCcVpVj": 1,
                "QSSj S": 1,
                "hSeScP": 1,
                "u4VPW": 2,
                "ShMmSmj0j": 1,
                "f;2w$": 1,
                "M,hIo  Q": 1,
                "t=9E t8hIo  ": 1,
                "PhiJJ": 1,
                "QQVWd": 2,
                " !0000\"#0$0%&": 1,
                "+,-000-.0/": 1,
                "j WWVWS": 1,
                "jHhH6A": 1,
                "j h`6A": 1,
                "jDhp6A": 1,
                "@08P\"t": 1,
                "hObHd": 1,
                "hIo  Wj": 1,
                "VhObtb": 1,
                "VhObtbjDj": 1,
                "PVVh`": 1,
                "hPVVh": 1,
                "Mm  W": 3,
                "+50>H": 3,
                "hSePa": 1,
                "SePaS": 1,
                "GGAA;": 1,
                "|%VVVVV": 1,
                "hInfoPj": 1,
                "PsExVj0S": 1,
                "PPPPS": 1,
                "hCcPF": 2,
                "DAfPh": 1,
                "p<PSh": 1,
                "hCcPpPj": 1,
                "SPWWW": 1,
                "jdhP[B": 1,
                "hSe  Sj": 1,
                "@hSe  ": 1,
                "hSe  ": 4,
                "hSe  Vj": 1,
                "hSe  j": 2,
                "OhSe  j": 1,
                "hSe  j8j": 1,
                "I(8FK": 1,
                "hIo  j(W": 1,
                "F8;G8": 1,
                "j4h@DB": 1,
                "jxhHsB": 1,
                "I@AAf": 1,
                "WhMmxxh": 1,
                "hMmCi": 2,
                " ;Fpr": 1,
                "9~\\vKSVR": 1,
                "G;~\\r": 1,
                " ;Fps": 1,
                ";VpsZ": 1,
                "hCcPD": 1,
                "ASCCY": 1,
                "FphCcPD": 1,
                "CX9Np": 1,
                "$CcPqPh": 1,
                "hMmRl": 2,
                "WWWWW": 1,
                "WWWWj": 3,
                "hCcPv": 2,
                "VVj j": 4,
                "SSh!@": 1,
                "|mVhCcPq": 1,
                "WWQVh ": 1,
                "VVVVj@j": 1,
                "ShCcPThp": 1,
                "hCcPs": 1,
                "hCcPI": 1,
                "hCcPL": 1,
                "(;Gpr": 1,
                "j(Y9M": 1,
                "u PPPP": 1,
                "hCmVn": 1,
                "lfVWt": 1,
                "hCMVI": 1,
                "hSe  Pj": 1,
                "Io  S": 1,
                "hAtmA": 1,
                "Ht%Hu": 1,
                "hCMnbj,j": 1,
                "SVhCMpbj$j": 1,
                "hCM44j": 1,
                "hCMpaj0W": 1,
                "hFSrNjTj": 1,
                "VHRRPVS": 1,
                "|MhIoCcj": 1,
                "G;~$r": 1,
                "E#_^[": 1,
                "hObDij": 1,
                "hQSSj": 1,
                "t3_^[": 1,
                "FFGG;": 2,
                "G63FH": 1,
                "hSeLuV": 1,
                "vvSVW": 1,
                "E$_^3": 1,
                "sL^[]": 1,
                "t[hSeUs": 1,
                "PVVhX": 1,
                "hPsCaj0W": 1,
                "VhVadlj4j": 1,
                "|*hPsT": 1,
                "0123456789ABCDEF": 2,
                "PQQWV": 1,
                "9}$t6": 1,
                "VhPortj": 1,
                "j$hP9B": 1,
                "hSeSiV": 1,
                "WhPsapj0j": 1,
                "QSSj(S": 1,
                "VWj@3": 1,
                "<.t3<\"t/": 1,
                "hTunPVh": 1,
                "hMmSdj03": 1,
                "SVWs%": 1,
                "G;~Lr": 2,
                ";lhu\"": 1,
                "hCM8 ": 1,
                "QWWjDW": 1,
                "E f9x": 2,
                "hCM  Pj": 6,
                "hSePrWj": 4,
                "QWWVP": 1,
                "O$9A(": 1,
                "hCM38WP": 1,
                "t 9^ ": 1,
                ";qXsPVQ": 1,
                "SSSSSh": 2,
                "hRqrv": 1,
                "QWWVW": 1,
                "u F;u": 1,
                "\\SVWj": 1,
                "|Xj-3": 1,
                "FBB;u": 1,
                "hWmip": 15,
                "hWmipPj": 6,
                "VWhWmipj": 1,
                "RQSWV": 1,
                "hCM7 j": 1,
                "hCM  ": 16,
                "t28^x": 1,
                "hMmSej": 2,
                "3GGCCf;": 1,
                "f%0(f": 1,
                "WhFSrNj(3": 1,
                "tWjL_;": 1,
                "t<jL_;": 1,
                "hMmScj0W": 1,
                "F0;F,": 1,
                "C;_$r": 2,
                ";= [G": 1,
                "PVVj V": 1,
                "hSymtWj": 1,
                "u!hPpWIj": 1,
                "hPpEE": 1,
                "h waRjXS": 1,
                "N\\;H\\v": 1,
                "sAhPpEBPV": 1,
                ";u(rA": 1,
                "hPSSh": 1,
                "Ph@#H": 3,
                "hCM  Vj": 3,
                " SVWd": 1,
                "hPpsuSj": 1,
                "hPpsu": 11,
                "|?j)Y3": 1,
                "hMmDT": 6,
                "%ws%wZ": 1,
                "hMmLnh": 1,
                "hIo  Pj": 2,
                "hIo  f": 1,
                "PSSSQ": 1,
                "Io  W": 1,
                "@W@Pj": 1,
                "Io  VPj": 1,
                "G t;f": 1,
                "Io  Vh": 1,
                "SVWt9": 2,
                "win32k": 3,
                "dxapi": 1,
                "coverage": 1,
                "ntdll": 1,
                "winsrv": 1,
                "advapi32": 1,
                "kernel32": 1,
                "user32": 1,
                "gdi32": 1,
                "ntoskrnl": 2,
                "NhMmLdPV": 1,
                "SYSLDR": 2,
                "hMmCajPW": 1,
                "PAGEt#": 1,
                ".edat": 1,
                "$Pp  Pj": 1,
                "hSdba": 2,
                "hIoSePj": 1,
                "WjdY3": 1,
                "tiSPV": 1,
                "sdbfu": 1,
                "VhWmipj": 1,
                "hWmiD": 1,
                "hPpio": 3,
                "hPpioP": 1,
                "SSj@P": 1,
                "hIcp j": 2,
                "hPsQbj@W": 1,
                "hSeTdj8j": 1,
                "hSeTd": 1,
                "VVVPS": 1,
                "E,_^[": 2,
                "hSeTaS": 1,
                "hSeSaS": 1,
                "PVVSSWV": 1,
                "RVVSSWQ": 2,
                "QVVSSWP": 2,
                "QVSSSWP": 1,
                "hSePaV": 1,
                "hSeAcV": 1,
                "PpddW": 1,
                "Whx\"M": 1,
                "M SVW": 1,
                "hPpenPj": 1,
                "=PAGEtP=.edatI=INITtB": 1,
                "j%[VW": 1,
                "hAtmT": 1,
                "<{f;<N": 1,
                "VhSeLsj": 1,
                "PSSSS": 2,
                "t3SVW": 1,
                "SVWu#": 1,
                "WhPpio": 1,
                "Ph,LM": 1,
                "CD9CH": 1,
                "0[_^]": 1,
                "|Nh(RM": 1,
                "q09>t": 1,
                "^8|>S": 1,
                "WsahCMS": 1,
                "hCM39j": 1,
                "hCM17Vh": 1,
                "f=lit": 1,
                "WhCM  h": 2,
                "VhCM10Sh": 1,
                "hCM  j S": 1,
                "SWhCM  ": 1,
                "FLPSf": 1,
                "FHf;E": 2,
                "^XuRhCM27": 1,
                "hCM26Qh": 1,
                ">hbin": 2,
                "VWhCM32j": 1,
                ">regfuL9~": 1,
                "$CM  Pj": 1,
                "CM  Vj": 1,
                "Ph,xM": 1,
                "VhObDmj0j": 2,
                "hSePr": 1,
                "hCM35j": 3,
                "u%j j": 1,
                "|xVhp": 1,
                "XhSe  Pj": 1,
                "FP;E$w": 1,
                "hSeTdWj": 1,
                "ti+Jx": 1,
                "PVVSV": 1,
                "hPp  j8j": 1,
                "hPp  j0j": 1,
                "hPpddQj": 1,
                "hPpddPj": 1,
                "BB@@3": 2,
                "PRRhr": 1,
                "hPpdd": 2,
                "E hIoRN": 1,
                "u@VhIo  ": 1,
                " hIoKBPj": 1,
                "Pj(hH": 1,
                "VhPoSLj": 1,
                "SSSSPW": 1,
                "SSSSP": 2,
                "hMm  ": 8,
                "@hPp  @Pj": 1,
                "BBAAKu": 1,
                "|\\8]$": 1,
                "DllInitialize": 1,
                "hMmDT@@f": 1,
                "WhIoShj": 2,
                "hPpen": 1,
                "PpenVPj": 1,
                "VhDnodh": 1,
                ":hPpEE": 5,
                "Xv4SV": 1,
                "N|@9]": 1,
                "_^[u\"j": 1,
                "H(;H$t": 1,
                "q(;q$": 1,
                "ShMmHvj j": 1,
                "@hMmHn@Ph": 1,
                "VhMmHij": 1,
                "j0hX$C": 1,
                "hKe  h": 1,
                "j4hh$C": 1,
                "f9Vlt$": 1,
                "QQSVd": 1,
                "hVadFj": 1,
                "VhIo  jHj": 1,
                "_v:Wh": 1,
                "hCM29j": 1,
                "CM  3": 1,
                "Uniprocessor": 1,
                "%s %s": 1,
                "DumpWj": 1,
                "CyrixInstead": 1,
                "hMmLd": 3,
                "hMmDTf": 1,
                "Mm  S": 2,
                "Vhhibrh": 1,
                "t=SWV": 1,
                "hCM28Qh": 1,
                "hDump": 2,
                "Wj6Y3": 1,
                "sPt)hDumpj": 1,
                "PVVhH": 1,
                "j8WVVh": 1,
                "DumpSjxW": 1,
                "hInfo": 2,
                " hDaclVj": 1,
                "WSSSSh": 2,
                "hMm  jDS": 1,
                "p(hMm  ": 1,
                "hMm  PS": 1,
                "@SVW3": 1,
                "hDumph": 1,
                "PSSSSSVj": 1,
                "hhibrPh": 2,
                "VVVVh": 3,
                "SSSShO": 2,
                "PSSSSS": 2,
                "GenuineIntel": 2,
                "hPp  Wj": 2,
                "(SVhFstbj": 1,
                "PVSj ": 1,
                "FstbWP3": 1,
                "tdh>rN": 1,
                "ControlSet%03d": 1,
                "(h0sN": 1,
                "QSSPh": 1,
                "C;^(Y": 1,
                "Qj<h#": 1,
                "SVWu:": 1,
                "F} Wu": 1,
                "YYt$G;~(r": 1,
                "hFstb": 1,
                "PSSQhH": 1,
                "FstbV": 1,
                "\\DosDevices\\PhysicalDrive%d": 1,
                "?@hPpsu@Pj": 1,
                "AAQPj": 1,
                " SVWh": 1,
                "SMBiosData": 1,
                "~0j8Y": 1,
                "=_SM_t": 1,
                "hMmDTh": 1,
                "9=<BH": 1,
                "hMmDTPW": 1,
                "hPpreWj": 1,
                "VVj&Vj": 1,
                "hPprePj": 1,
                "PSSSV": 2,
                "PWWWWWS": 1,
                "Pp  Vj": 1,
                "f90t9": 1,
                ",tBAA": 1,
                "hPpsuVj": 1,
                "SSSSSSQP": 1,
                "u-hIoTij": 1,
                "hIoin": 1,
                "C hPpre": 2,
                "PpreW": 1,
                "y,9s ": 1,
                "QQSVWh": 2,
                "hPpre": 7,
                "s0VW+": 1,
                "hPp  Pj": 3,
                "PpreV3": 1,
                "WQSSS": 1,
                "hPpreSj": 1,
                "saSVW+": 1,
                "v]SVW": 1,
                "hPpEEVj": 1,
                "sMSV+": 1,
                "|vf9}": 1,
                "7hPpsu": 1,
                "hPpenj": 1,
                "hVpb jXj": 1,
                "F,SWf": 1,
                "MmDTSPj": 1,
                "{(WVV": 1,
                "hPp  j": 3,
                "Pp  WV3": 1,
                "PSSSVj": 1,
                "hPp  j(j": 2,
                ",SVWj": 1,
                "hPpsuPj": 2,
                "WtIHH": 1,
                "hIoRij": 2,
                "j h0dC": 1,
                "|JSj\\X": 1,
                "hPpioWj": 1,
                "3h83O": 1,
                "hPpenPW": 1,
                "hPprej": 2,
                "QVhPpEL3": 1,
                "PpUBS": 1,
                "hMmExj": 1,
                "VWj:Y3": 1,
                "Qkkbal": 1,
                "wn>Jj": 1,
                "VVVVVS": 1,
                "E,9u,": 1,
                "VWhNBqhj": 1,
                "uDVhArbM": 1,
                "hArbLh": 1,
                "v'f;s": 1,
                "hCcPwj@S": 1,
                "ShCcPMh": 1,
                "t>hLTO": 1,
                "*SYSTEM*": 1,
                "E<USj": 2,
                "URSVW": 1,
                "_^[Z]": 2,
                "PhVgO": 1,
                "URSVWh": 1,
                "[hKRQPj": 1,
                "VUh4mO": 1,
                "SVWUh": 1,
                "USVWQRhaoO": 1,
                "ZY_^[]": 1,
                "6UTh{rO": 1,
                "UTh{rO": 3,
                "j(X9E": 1,
                ">regf": 1,
                "hCM13": 1,
                "CXuLhCM22": 1,
                "hCM24Vh": 1,
                "hCM25j": 1,
                "QPPWj": 1,
                "hArbL": 3,
                "hPprej8h": 1,
                "hFstB": 3,
                "\\Device\\Harddisk%d\\Partition0": 5,
                "\\ArcName\\%s": 6,
                "%spartition(%d)": 2,
                "FstbSj 3": 1,
                "WSVj ": 1,
                "ShFstBj8j": 1,
                "f92t*": 1,
                "P$f92": 1,
                "PpreV": 1,
                "@ t ;": 1,
                "hCM11": 1,
                "MapPWjjj": 1,
                "SWj`j": 1,
                "Pj`Sj": 2,
                "CMCaV": 1,
                "@hCMDc": 1,
                "VhPpre3": 1,
                "F;u,r": 1,
                "hIoFsj": 1,
                "9SPto": 1,
                "hWmitWj": 1,
                "Wj<RP": 2,
                "CXHHt9Ht": 1,
                "WhArbMj": 1,
                "hArbA": 1,
                "ArbRWj": 1,
                "FL[]W": 1,
                "FT9]W": 1,
                "PPQPj": 1,
                "PpddVh": 1,
                "Vh  H": 1,
                "VVVVVh": 1,
                "hMmDb": 1,
                "hPSwtj": 1,
                "VWj+Yj83": 1,
                "|XVWj": 1,
                "@hIo  @Pj": 2,
                "hPpdd3": 1,
                "hWmipVj": 4,
                "9s vc": 1,
                "hWmiI": 1,
                "WmipW": 1,
                "VhIo  h": 1,
                "PjlX+": 1,
                "@ hCM45j": 1,
                "FSroSj h": 1,
                "w~VWd": 1,
                "FHSWP": 1,
                "hCM  h": 3,
                "St2PW": 1,
                "9^$vc": 1,
                "9^$v;": 1,
                "C;^$r": 1,
                "9~$v3": 1,
                "t:G;~$r": 1,
                "FJ_^]": 1,
                "hFSunPj": 1,
                "VVVVh ": 1,
                "VhSeFSj": 1,
                "9E t@": 1,
                "9]$t%": 1,
                "9] tHhIo  Vj": 1,
                "9] t?": 1,
                "th;~ sc": 1,
                "VhCcPwjHj": 1,
                "tphPp  Sj": 1,
                "+3hPp  ": 1,
                "hPp  Vj": 1,
                "hCM16": 1,
                "G;~(r": 1,
                "hCM19": 1,
                "VVVVVW": 3,
                "j4_hVadl": 1,
                "hMmCxj": 1,
                "CcZeVWj": 1,
                "w096u": 1,
                "PAQRW": 1,
                "hMmwwPj": 1,
                "hMmWwj": 1,
                "hCMSb": 1,
                "48GGf;": 1,
                "]<UWj": 2,
                "hTunK": 1,
                "hTun4": 1,
                "hFSrn": 1,
                "hFSunPV": 1,
                "<N\\u<3": 1,
                "t>CSV": 1,
                "VVVVS": 1,
                "f9x0t": 1,
                "WWWWh.": 1,
                "VVVVh-": 2,
                "\\Device\\ScsiPort%d": 1,
                "WWWWh1": 1,
                "ShIcp j": 1,
                "AhIo  j": 1,
                "9u t_": 1,
                "FF@@Iu": 1,
                "%2d %2d %4d %02d:%02d:%02d.%03d": 1,
                "SAFEBOOT: skipping device = %wZ(%wZ)": 1,
                "hIoFc": 1,
                "v<j8j\"S": 1,
                "PpioV": 1,
                "|KG;}": 1,
                "8] tDj": 1,
                "@hPpio@Pj": 1,
                "@@PQj": 1,
                "It$It": 1,
                "tUhPpsuPj": 1,
                "PpenVj": 1,
                "hPpenh": 1,
                "j*Yj 3": 1,
                "Yj0_j": 1,
                "PhTIQ": 1,
                "*** IopQueryLegacyBusInformation - Driver %wZ returned STATUS_SUCCESS": 1,
                "    for IRP_MN_QUERY_LEGACY_BUS_INFORMATION, and a NULL POINTER.": 1,
                "*** IopQueryPnpBusInformation - Driver %wZ returned STATUS_SUCCESS": 1,
                "    for IRP_MN_QUERY_BUS_INFORMATION, and a NULL POINTER.": 1,
                "t9VPV": 1,
                "hPpde": 1,
                "F.hMmLd": 2,
                "PKtff": 1,
                "POt_f": 1,
                "16STUB": 1,
                "Phar Lap Software, Inc.": 1,
                "Copyright (C) Rational Systems, Inc.": 1,
                "1-2-3 Preloader": 1,
                "hMmCajpj": 1,
                "hMmxx": 1,
                "uEhMmxxWj": 1,
                "f!C$f!C&": 1,
                "MmLoadSystemImage: Pulled %wZ from kd": 1,
                "hMm  WP": 1,
                "hMmRwWj": 1,
                "VVVh0<H": 1,
                "PPh0<H": 1,
                "AuthenticAMD": 2,
                "Ht1Ht": 1,
                "hThrmh": 1,
                "tqj4Y3": 1,
                "Vh/vF": 1,
                "hPsWsWj": 1,
                "hSePaWj": 1,
                "hSePaj": 1,
                "PPPVh": 1,
                "SSSWh": 1,
                "Critical thread 0x%p (in %s) exited": 1,
                "Critical process 0x%p (%s) exited": 1,
                "Terminating critical thread 0x%p (in %s)": 1,
                "PVh.@R": 1,
                "Terminating critical process 0x%p (%s)": 2,
                "t4hPsCrj": 1,
                "uFSSV": 1,
                "u#SSV": 1,
                "u)RQV": 1,
                "SSSSj\"": 1,
                "<up{[": 1,
                "<Of;=": 1,
                "vThp{[": 1,
                "Abandoning uncommitted range (%x for %x)": 1,
                ";K$u9": 1,
                "Heap missing last entry in committed range near %x": 1,
                "PWh\\dR": 1,
                "HEAP: Free Heap block %lx modified at %lx after it was freed": 7,
                ";E s=": 1,
                "Failed to initialize a new segment (%x)": 1,
                "Failing creating uncommitted range (%x for %x)": 1,
                "Invalid flags (%08x) specified to RtlCreateHeap": 1,
                "tbNtTNt": 1,
                "RTL: Expand variables for %wZ failed - Status == %lx Size %x > %x <%x>": 1,
                "RTL: Expand variables for %wZ failed - Status == %lx": 1,
                "RtlpCallQueryRegistryRoutine: skipping expansion.  Status=%x RequiredLength=%x": 1,
                "RtlpCallQueryRegistryRoutine: skipping environment expansion.  ValueLength=%x": 1,
                "RtlQueryRegistryValues: Miscomputed buffer size at line %d": 2,
                "VPQPSP": 1,
                "LdrRelocateImageWithBias": 1,
                "%s: %s() failed 0x%lx": 1,
                "%s: OldBase     : %p": 1,
                "%s: NewBase     : %p": 1,
                "%s: Diff        : 0x%I64x": 1,
                "%s: NextOffset  : %p": 1,
                "%s: *NextOffset : 0x%x": 1,
                "%s: SizeOfBlock : 0x%lx": 1,
                "\"hSe  j": 2,
                "hSeOt": 1,
                "hSeGa": 3,
                "hSePrPj": 1,
                "Wj~Y3": 2,
                "hSePaWV": 1,
                "8F`t\"j": 1,
                "8]HtahSeGa": 1,
                "M$QRP": 1,
                "0hSeSi": 2,
                "Se  tB": 2,
                "PPPPjF": 1,
                "%hSe  j": 1,
                ";F\\vK": 1,
                ";F\\v0": 1,
                "tKNt Nt": 1,
                "ItLIt<It": 1,
                "QQQQP": 1,
                "t|j$Z": 1,
                "v0j@V": 2,
                "?hWmip": 1,
                "uOhWmiCj": 1,
                "t3PPPW": 1,
                "BdVPR": 1,
                "WWWWS": 2,
                "vq9s8tlhWmijj@j": 1,
                " ;C4r": 2,
                "SSSSW": 2,
                "pDShP": 1,
                "AVRF: Invalid handle %p in process %p ": 1,
                "(tGHt<": 1,
                "RQPVV": 1,
                "jhAtomVW": 2,
                "VWQPS": 1,
                "WQPSV": 1,
                "hArbAWj": 1,
                "hCMpej": 1,
                "RSPSQ": 1,
                "Unknown": 2,
                "Process.Thread : %p.%p (%s) is trying to create key: ": 1,
                "ObjectAttributes = %p": 1,
                "The caller should not rely on data written to the registry after shutdown...": 1,
                "LastKnownGood": 2,
                "WWWWh": 3,
                "Failed to convert SYSTEM hive to mapped (0x%lx) ... loading it in paged pool": 1,
                "hCM  j": 5,
                " Current process is opening a key tagged as BREAK ON OPEN": 1,
                "Please type the following in the debugger window: !reg kcb %p": 2,
                "hCM12j": 1,
                ">regfun9~": 1,
                "hCM14j": 1,
                "AA@@BBf;S": 1,
                "u<hCM  j": 2,
                "LogFile for hive %p is %lx; will flush upon lock release": 2,
                "FileAddress = %lx, Map = %lx": 2,
                "Primary": 10,
                "HvpDoWriteHive[2,%s]: Invalid sequence number for hive%p": 1,
                "HvpDoWriteHive[3,%s]: Failed to write header for hive%p": 1,
                "HvpDoWriteHive[4,%s]: Failed to flush header for hive%p": 1,
                "HvpDoWriteHive[5,%s]: Failed to allocate CopyDirtyVectorfor hive%p": 1,
                "HvpDoWriteHive[8,%s]: Failed to allocate offsetArray for hive%p": 1,
                "HvpDoWriteHive[10,%s]: Failed to write dirty run for hive%p": 1,
                "HvpDoWriteHive[11,%s]: Failed to flush hive%p": 1,
                "HvpDoWriteHive[12,%s]: CcSetValidDataFailed for hive %p": 1,
                "HvpDoWriteHive[11,%s]: Failed to write header for hive%p": 1,
                "HvpDoWriteHive[12,%s]: Failed to flush hive%p": 1,
                "HvpDoWriteHive[1]: Failed to flush hive %p": 1,
                "CmpFileSetSize:": 1,
                "Handle=%08lx  OldLength = %08lx NewLength=%08lx  ": 1,
                "Disk is full while attempting to grow file %lx; will flush upon lock release": 1,
                "CmpFileFlush:": 1,
                "Failure1: status = %08lx  IoStatus = %08lx": 1,
                "CmpFileRead:": 1,
                "Failure2: status = %08lx  IoStatus = %08lx": 1,
                "CmpFileWrite: error exiting %d": 1,
                "Ht.Ht": 1,
                " Current process is creating a subkey to a key tagged as BREAK ON OPEN": 1,
                "ihCM23Vh": 1,
                "hCM33j": 1,
                ">hbinu#": 1,
                "hCMHb": 1,
                "hCM15": 1,
                "A`9A\\": 1,
                "u7hCM18j": 1,
                "@\\AQPS": 1,
                "hCM20": 1,
                "hCM21j": 1,
                "hCcOb": 1,
                "CMcbSj": 1,
                "tr;~$|m": 1,
                ";^ vf": 1,
                "tU;~$|1": 1,
                ";^ v*9~$t": 2,
                "t3;~ v": 1,
                ";N w>": 1,
                ";~$|z": 1,
                ";^ vs": 1,
                ";F$| ": 1,
                "tf;~$|1": 1,
                "|eSWWWW": 1,
                "utOf;": 1,
                "hFSrd": 1,
                "<.t{<\"twf": 1,
                "tf<\"u": 1,
                "vMAfJf": 1,
                "< te<.ta<\"t]": 1,
                "uF8F!tA8F#u": 1,
                "S$9U8": 1,
                "CLj\\SR": 1,
                "u6f9V": 1,
                "|6F;u": 1,
                ">EFI S": 1,
                "hFstBQj": 1,
                "C0+C(": 1,
                "u8f9F": 1,
                "u2f9F": 1,
                "F(+F ": 2,
                "$SVWhFstB3": 1,
                "F0PQj": 1,
                "G4_VVV": 1,
                "E#PVVj": 1,
                "M#QPPj": 1,
                "QQSVhFstb3": 1,
                "j\\Yv f9K": 1,
                "v9f9K": 1,
                "?u%f9K": 1,
                "hIo  h": 2,
                "~ du4f": 1,
                "~\"iu-f": 1,
                "~$ru&3": 1,
                "j-Xf9C6": 1,
                "hIoFcPj": 1,
                "QSVWj": 3,
                "PWWWj(": 1,
                "j0h(!E": 1,
                "j\\h`!E": 1,
                "t=9u t8": 1,
                "LhIo  j": 1,
                ";hIo  j": 1,
                "] 9]$tAhIo  Wj": 1,
                "OhIo  j": 1,
                "3hIo  j": 1,
                "QSSSSSP": 1,
                "QSSSSSPS": 1,
                "PSSSj": 2,
                "QSSSSSPh": 1,
                "hIo  3": 1,
                "VVjdj": 1,
                "jTh8\"E": 1,
                "=hIo  j": 1,
                "hIo  j`S": 1,
                "WWWWj/j": 1,
                "hPpioPj": 1,
                "Ph&1T": 1,
                "PVVVS": 1,
                "Ph>4T": 1,
                "<Gf97u": 1,
                "hPp  h": 1,
                "|.SSSS": 1,
                "9?t$V": 1,
                "tMWPV": 1,
                "t0WPV": 1,
                "t;SPV": 1,
                "t%SWV": 1,
                "PPPPV": 1,
                "whPpEEjXj": 1,
                "F|tPS%": 1,
                "Vh0FT": 1,
                "F}`tR": 1,
                "Pj.Sj": 1,
                "F}`uW": 1,
                "9^ t!8^,t": 1,
                "t0Ht#Ht": 1,
                "jJ@^9u": 1,
                "tF(;u": 1,
                "j Y9M": 1,
                "HtqHt": 1,
                "FFhPpEE": 1,
                "<hPpEE": 2,
                "D8:hPpEE": 1,
                "hPpEEWj": 1,
                ";C@tS": 1,
                "QSPh|": 1,
                "hPp  j8S": 1,
                "[hPpEEjXj": 1,
                "RhPpEEjXj": 1,
                "lhPpEEjXj": 1,
                "ShPpEEjXj": 1,
                "VhPpdd3": 1,
                "F} tC": 1,
                "96u4W": 1,
                "O_^u4": 1,
                "9*uCV": 1,
                "VWhPp  h": 1,
                ",WhPp  h": 1,
                "hPprl": 2,
                "sShPprl": 1,
                "95\\!H": 1,
                "PnPbS": 1,
                "hPnPb": 1,
                "RhPnPb": 1,
                "ItQIt;It%It": 1,
                "FFhCM  ": 1,
                "It^II": 1,
                "PPPPW": 1,
                "HtMHt$HHur": 1,
                "Ht#Ht": 1,
                "HHu+;": 1,
                "tSVWd": 1,
                "ShMmVt": 1,
                "* This is the string you add to your checkin description": 1,
                "* Driver Verifier: Enabled for %Z on Build %ld %wZ": 1,
                "hMmBk": 1,
                "j(h($E": 1,
                "v;WPj": 1,
                "DOSCALLS": 1,
                "F0f98t": 1,
                "f9~2t": 1,
                "DllUnload": 1,
                "hPte j": 1,
                "j$hp$E": 1,
                "s5WhMmSPh": 1,
                "@hMp10": 1,
                "QQSVhMmAwj": 1,
                "v hMmRwVW": 1,
                "hMmRwSj": 1,
                "v)hMmRwSj": 1,
                "hVadLWj": 1,
                "j<h %E": 1,
                "hHotP": 3,
                "Vh=PF": 1,
                "hMmCl": 1,
                "hMmChj": 1,
                "hMmCdj(j": 1,
                "@'@t1hVadlj4j": 1,
                "B' t'": 1,
                "MmCd3": 1,
                "OB: GrantedAccess cache limit hit.": 1,
                "WhObSqQj": 1,
                "hObSqP": 1,
                "_hObArV": 1,
                "vDhObAr": 1,
                "WWj@P": 3,
                "VWWWj": 1,
                "HSVWh": 1,
                "hhibrVj": 1,
                "SSSSSh ": 1,
                "VhPoZr": 1,
                "hsrpX": 1,
                "u@hHmaph": 1,
                "{X97u:95": 1,
                "hHmap": 2,
                "hMem ": 1,
                "hDbg Vh": 1,
                "hrfbWh": 1,
                "hklbCh": 1,
                "hkbOIh": 1,
                "hhibr": 1,
                "hDmem": 1,
                "WWWWjpZ": 1,
                "vLPWS": 1,
                "C090u": 1,
                "Cp9sp}": 1,
                "tGHHt": 1,
                "SSSSjPZ": 1,
                "WhPKU": 1,
                "uJhPAcWj S": 1,
                "[t8Ht!Ht": 1,
                "v=SVW": 1,
                "ev?SVW": 1,
                "SVhPDssh ": 1,
                "s`j$Z+": 1,
                "It=It\"WWW": 1,
                "Ht;Ht,Ht!QQQWjpZ": 1,
                "NPQRP": 1,
                "j4hX&E": 1,
                "t8SVWj": 1,
                "HVVVVh": 1,
                "WWWWV": 2,
                "Break, or Ignore (bi)? ": 1,
                "t/;5T": 1,
                "t';5(": 1,
                "PWWWV": 1,
                "ShGoU": 1,
                "t?;5T": 1,
                "t7;5(": 1,
                "hPsLd": 3,
                "xDSSSSh": 1,
                "r`QQW": 1,
                "u#hPsLdj": 1,
                "hVmdl": 1,
                "u'hPsLdj": 1,
                "j,h 'E": 1,
                "u$hPsLdj": 1,
                "hPs  j@V": 1,
                "Nu;8Y": 1,
                "Nu78Y": 1,
                "hPs  jxj": 1,
                "hPsTfj$3": 1,
                " u#j Y": 1,
                "j hx'E": 1,
                "hPsjbVj": 1,
                "PSSWhH": 1,
                "t>HHt+Ht": 1,
                "@@_^[": 1,
                "ItRIt": 1,
                "SSSSWWPQ": 1,
                ";w$se": 1,
                "Ignoring RtlDestroyHeap( NULL )": 1,
                "jLh@(E": 1,
                "hSeAcSj": 1,
                "E(SVWj": 1,
                "SSSSSSS": 1,
                "<a|$<f": 1,
                "t@HHt0": 2,
                ">%u'3": 1,
                "?%t.GG@@;": 1,
                "KKFF3": 1,
                "hVolS": 1,
                "VVj!j": 2,
                "SVWuq": 1,
                "4Ff;5": 1,
                "j<Yj<[": 1,
                "8HOT1u": 1,
                ".hotp1  ": 1,
                "y$+x(": 1,
                "(no change)": 3,
                "%08I64X: VA64 %016I64X -> %016I64X %s": 1,
                "%08I64X: PC32 %08X -> %08X (target %08X) %s": 1,
                "%08I64X: VA32 %08X -> %08X %s": 1,
                " (padding)": 1,
                "          None%s": 1,
                "%08I64X: Unknown": 1,
                "Invalid fixup information": 1,
                "Validation failure. Source = %lx, Target = %lx, Size = %lx": 1,
                "Invalid target validation range": 1,
                "Invalid source hotpatch validation range": 1,
                "/WCSh": 1,
                "Skipping hook-specific validation range during global validation": 1,
                "Validation failed for global range %u of %u": 1,
                "Invalid hotpatch validation array pointer": 1,
                "IItQIIt": 1,
                "Invalid hotpatch validation pointer in hook record": 1,
                "Hook type not yet implemented": 1,
                ">;QPr": 1,
                "Invalid hotpatch hook pointer": 1,
                "Invalid hook type specified": 1,
                "Invalid hotpatch relative address": 2,
                "%08I64X: jmp %08X (PC+%08X) {": 1,
                " %02X": 1,
                "No hooks defined in hotpatch": 1,
                "Inserting %u hooks into target image": 1,
                "Invalid hotpatch hook array pointer": 1,
                "QQVhHotPj4j": 1,
                "90uGG": 1,
                "},VVVVVW": 1,
                ";x t%": 1,
                "SVWtLHt%H": 1,
                "u9hSeOn": 1,
                "u-hSeTn": 1,
                "VWj~Y3": 1,
                "PDj~Y3": 1,
                "A@;E@r": 1,
                "IhSeAp": 1,
                "A;M@j": 1,
                "}$t39": 1,
                "t@v6S": 1,
                "j(hH)E": 1,
                "tS8] ": 1,
                "E$u0SSSj": 1,
                "VhToPdj": 1,
                "hToPdPj": 1,
                "8hSe  j": 1,
                "VWhSeHah": 1,
                "hSeDbVj": 1,
                "hSeHa": 1,
                "VWhSeLwj0j": 1,
                "hSeFSj": 1,
                "v_hSeTdPj": 1,
                "t]VWh": 1,
                "hSeAp": 1,
                "SVWhSeAi3": 1,
                "j(h@*E": 1,
                "Fp@uq": 1,
                "LF(f;": 1,
                "6Wh<YV": 1,
                "IOCTL_VDM_PAR_WRITE_DATA_PORT failed %lx %x": 1,
                "VdmPrintStatus: failed to flush buffered data, status = %ls": 1,
                "VdmPrinterStatus: failed to get status from printer, status = %lx": 1,
                "j8h@+E": 1,
                "C, t(": 1,
                "hVDM j$j": 1,
                "hWmith@": 1,
                "j$^VS": 1,
                "hWmiih": 1,
                "Wmiptd": 1,
                "SQWSS": 1,
                "VhWmith": 1,
                "Wj*Y3": 1,
                "SQPPP": 1,
                "F ^[_": 1,
                "hWmitVj": 1,
                "x0Hv23": 1,
                "9sPtP": 1,
                "PhHA\"": 1,
                "X(C;]": 1,
                "PQQQW": 1,
                "hWmit": 7,
                "v]9{4tX": 1,
                "tfhWmijj@j": 1,
                "WhWmit": 1,
                "f9F|t=9F": 1,
                "~Lte3": 1,
                ";FT~\"": 1,
                "u@hWmit": 1,
                "YhWmit": 1,
                "$WmitPj": 1,
                "w98U$t": 1,
                "u#8U(t": 1,
                "v0jDV": 2,
                ">hWmip": 1,
                "SVWj$Y": 1,
                "s<VVVj": 1,
                "|FWhWmipj0V": 1,
                "t'VVVVh": 1,
                "WhWmip": 1,
                "C4;F(": 1,
                "QQSW3": 1,
                "QhWmip": 1,
                "F(;G(u": 2,
                "YYt82": 1,
                "C;^(r": 1,
                "j h8.E": 1,
                "9_SYSu8f": 1,
                "_UUID_": 1,
                "_1394_": 1,
                "j4hH.E": 1,
                "hWmisPj": 1,
                "vGhWmisj": 1,
                "t>Ht;Ht8Hu5j": 1,
                "SVWhPlcp3": 1,
                "hPlclj": 2,
                "hCbrbj": 1,
                "WhObtdVj": 1,
                "0SVWh~": 1,
                "_^[|P": 1,
                "8hKey PS": 1,
                "$Key ": 1,
                "PhtXO": 1,
                "Ph`XO": 1,
                "PhTXO": 1,
                "^u,8]": 1,
                "uDh$YO": 1,
                "^txhP": 1,
                "DSVWd": 1,
                "PSSSh": 1,
                "****************************************************************": 2,
                "* The system detected a bad signature on file %wZ": 1,
                "RVPWh": 1,
                "WILL BREAK": 1,
                "no break": 1,
                "DISABLED": 1,
                "enabled": 1,
                "Break top of XIPLocatePages.  bounced=%x  attempted=%x  succeeded=%x": 1,
                "  %x nt!XIPlocate_disable  %s": 1,
                "  %x nt!XIPlocate_breakin %s": 1,
                "  %x nt!XIPConfiguration": 1,
                "  Would have returned address %x  (npages was %x)": 1,
                "hHotPVj": 1,
                "j8h80E": 1,
                "EnvrVW3": 1,
                "jDhP0E": 1,
                "EnvrVSW": 1,
                "PSSj$S": 1,
                "Pj\\Sj0S": 1,
                "WWWWh`": 1,
                "hProf": 1,
                "|cWSSSS": 1,
                "j<h 1E": 1,
                "j8h01E": 1,
                "Sh@1E": 1,
                "u$j)Y": 1,
                "VWj)Y3": 1,
                "SSj`j": 1,
                "|+f9u": 1,
                "PPj`j": 1,
                "PhP2E": 1,
                "9MZu5": 1,
                "VWj0_": 1,
                "pu>f;": 1,
                "ta<*t ": 1,
                "YYuHF": 1,
                "WjAY3": 1,
                "1hp3E": 1,
                "hArbCh": 1,
                "hArbC": 1,
                "jhhX5E": 1,
                "jphh5E": 1,
                "j|hx5E": 1,
                "Hu\"9}": 1,
                "j`h 6E": 1,
                "QPVPP": 1,
                "N$;A$t": 1,
                "PVh`wW": 1,
                " Subkeys open inside the hive (%p) (%.*S) :": 1,
                "j4h86E": 1,
                "w'f9]": 1,
                "j0hH6E": 1,
                "CM  W": 1,
                "u-hCM  ": 1,
                "uDhCM  ": 1,
                "0Pj Vhv": 1,
                "Dumping untriggered notifications for hive (%lx) (%.*S) ": 1,
                "AsyncKernel ": 1,
                "AsyncUser   ": 1,
                "Synchronous ": 1,
                "Notification, PostBlock %p not triggered on KCB %p": 1,
                "Dumping open handles : ": 1,
                "DSVW3": 1,
                "t,hCM  j": 1,
                "vNSVW": 1,
                "SPPPWP": 1,
                "9x`_[t": 1,
                "SharedCacheMap still has dirty pages after purge and flush; FileObject = %p ": 1,
                "lftLf": 1,
                "lft f": 1,
                "WhCM  ": 1,
                ">riu,": 1,
                "?riu,": 3,
                "F$;H$t": 1,
                "F$;x$u": 1,
                "?riu0": 1,
                "f=lftEf=lht?": 1,
                "f=lft@f=lht:": 1,
                "?riu%": 1,
                "Process %p (PID = %lx ImageFileName = %s) (KCB = %p) :: Key %wZ ": 1,
                "Callers Stack Trace : ": 1,
                " CallerAddress[%lu] = %p ": 1,
                "PPPPPPPj": 1,
                "hCM22": 1,
                "K`9K\\Yj5": 1,
                "P`9P\\": 1,
                "@J@u#": 1,
                "f=lht": 2,
                "SSSSSSSj": 1,
                "hCM  GG": 1,
                "t49_0t/9": 1,
                "N$SSPV": 1,
                "f=lft&f=lht ": 1,
                "VhCM  h": 1,
                "CM: Registry security exception %lx, ExceptionPointers = %p": 1,
                "CM  S": 1,
                "QSVhCM ": 1,
                "s+QPW": 1,
                "tRWSV": 1,
                "N<9H<": 1,
                "N@9H@s": 1,
                "jDh07E": 1,
                "mhCMHbSj": 1,
                "t0PVj": 1,
                ">hbinu": 2,
                ">hbinu/": 1,
                "u!hCM31j": 1,
                "hCM30j": 1,
                "VhCM34j": 1,
                ">regfu49~": 1,
                "8hbin": 1,
                "j0hP7E": 1,
                "u)hCM23Wh": 1,
                "BhCM24Wh": 1,
                "hCMSbPj": 1,
                "8DIRTt": 1,
                "hCM36": 1,
                "hCM  Wj": 1,
                "hCM37j": 1,
                "I$;A(s;P": 1,
                "VSWPh": 1,
                "HvpRecoverData: SectorOffsetInBin = %lx,SectorImage = %p, Bin = %p, Source = %p": 1,
                "K$;A(": 1,
                "j,hx7E": 1,
                "?hbinu39w": 1,
                "PSSj<S": 1,
                "FPHHt": 1,
                "tHhDbgEh": 1,
                "|;WWWW": 1,
                "VVWPSP": 1,
                "7_^[]": 1,
                "VWtvIt_ItEIt4It)It": 1,
                ";pDtn;5T": 1,
                "SSRPQ": 1,
                "|_SSSS": 1,
                "Wj8Xj": 1,
                "PhTYX": 1,
                "PhlYX": 1,
                "ExFreePoolWithTag": 2,
                "ExFreePool": 2,
                "ExAllocatePoolWithTagPriority": 2,
                "ExAllocatePoolWithTag": 2,
                "ExAllocatePoolWithQuotaTag": 2,
                "ExAllocatePoolWithQuota": 2,
                "ExAllocatePool": 2,
                "NtReadFile": 2,
                "NtWriteFile": 2,
                "NtCreateFile": 2,
                "IoFreeMapRegisters": 2,
                "IoFreeAdapterChannel": 2,
                "IoAllocateAdapterChannel": 2,
                "HalFreeCommonBuffer": 2,
                "HalAllocateCommonBuffer": 2,
                "IoFlushAdapterBuffers": 2,
                "IoMapTransfer": 2,
                "HalGetAdapter": 2,
                "KeInitializeSpinLock": 2,
                "KeInitializeMutant": 2,
                "KeReleaseMutant": 2,
                "KeInitializeMutex": 2,
                "KeReleaseMutex": 2,
                "ObReferenceObjectByHandle": 2,
                "HalAllocateCrashDumpRegisters": 2,
                "IoGetDmaAdapter": 2,
                "KeQueryPerformanceCounter": 2,
                "IoInitializeTimer": 2,
                "IoBuildAsynchronousFsdRequest": 2,
                "IoBuildDeviceIoControlRequest": 2,
                "IofCompleteRequest": 2,
                "IofCallDriver": 2,
                "IoFreeIrp": 2,
                "KfReleaseSpinLock": 2,
                "KfAcquireSpinLock": 2,
                "KfLowerIrql": 2,
                "KeRaiseIrqlToDpcLevel": 2,
                "KfRaiseIrql": 2,
                "KeWaitForSingleObject": 2,
                "KeInitializeTimer": 2,
                "KeInitializeTimerEx": 2,
                "KeSynchronizeExecution": 2,
                "KefReleaseSpinLockFromDpcLevel": 2,
                "KefAcquireSpinLockAtDpcLevel": 2,
                "KeReleaseSpinLock": 2,
                "KeAcquireSpinLock": 2,
                "KeLowerIrql": 2,
                "KeRaiseIrql": 2,
                "ExReleaseFastMutex": 2,
                "ExTryToAcquireFastMutex": 2,
                "ExAcquireFastMutex": 2,
                "MmUnmapIoSpace": 2,
                "MmUnmapLockedPages": 2,
                "MmUnlockPages": 2,
                "MmMapLockedPagesSpecifyCache": 2,
                "MmMapLockedPages": 2,
                "MmMapIoSpace": 2,
                "MmProbeAndLockProcessPages": 2,
                "MmProbeAndLockPages": 2,
                "ExReleaseResourceLite": 2,
                "ExAcquireResourceExclusiveLite": 2,
                "ExReleaseFastMutexUnsafe": 2,
                "ExAcquireFastMutexUnsafe": 2,
                "KeSetEvent": 2,
                "$*06<": 1,
                "EXWORKER: worker exit with APCs disabled, worker routine %x, parameter %x, item %x": 1,
                "GenuineTMx86": 1,
                "CentaurHauls": 1,
                "RiseRiseRise": 1,
                "Unknown Hard Error": 1,
                "hMmdl": 1,
                "t^f9H": 1,
                "hMmHth": 1,
                "hMmWe": 1,
                "4@hKe  ": 1,
                "hCont": 2,
                "PWhCont": 1,
                "SSSV3": 1,
                "PSSSWj": 1,
                "QSSSPj": 1,
                "t/hPp  ": 1,
                "9?tLV": 1,
                "@hDPwr@PS": 1,
                "hDPwrj(j": 1,
                "FhKe  ": 1,
                "4IhKe  ": 1,
                "teHt]Ht": 1,
                "@hMmPh": 1,
                "tVf9V": 1,
                "QWhHAH": 1,
                "PWhHAH": 1,
                "PhHAH": 1,
                "t=WVVh": 1,
                "t j2[9~": 1,
                "0hMmDT": 1,
                ";=4>H": 1,
                "hHmapj": 1,
                "u 9Cp|:": 1,
                "C$_^[]": 1,
                "t!WWWWj": 1,
                "State saved, power off the system": 1,
                "SRPh$": 1,
                "QRPh`": 1,
                "v8QRPh": 1,
                "HIBER: %lu Pages written in %lu Dumps (%lu runs).": 1,
                "HIBER: %lu Pages processed (%d %% compression)": 1,
                "HIBER: Elapsed time %3d.%03d seconds": 1,
                "HIBER: I/O time     %3d.%03d seconds (%2d%%)  %d MB/sec": 1,
                "HIBER: Init time     %3d.%03d seconds (%2d%%)": 1,
                "HIBER: Copy time     %3d.%03d seconds (%2d%%)  %d Bytes": 1,
                "PopSave: %d%%": 1,
                "9X4Wty3": 1,
                "9^p|x": 1,
                "~X9_Tt": 1,
                "CX9HT": 1,
                "CXQQj": 1,
                "F0PSV": 1,
                "F@PSV": 1,
                "FLt#SSSS": 1,
                "hGathS": 1,
                "#90tI": 1,
                "G@PSW": 1,
                "t&;_<w": 1,
                "G8)_<": 1,
                "hstacP": 1,
                "hpcr hp": 1,
                "hpcrbhP": 1,
                "WhMimgh": 1,
                "KX9ATt.": 1,
                "xpress": 1,
                "1tB+E": 1,
                "hibrY": 1,
                "Checksum for context page changed from %lx to %lx": 1,
                "Checksum for partial context page %lx doesn't match full %lx": 1,
                "MemImage->WakeCheck %lx doesn't make PoWakeCheck %lx": 1,
                "9>Yt@": 1,
                ">brkpu": 1,
                "tCHt9Ht/Ht%Ht": 1,
                "Shutdown": 1,
                "Hibernate": 1,
                "Sleeping3": 1,
                "Sleeping2": 1,
                "Sleeping1": 1,
                "Working": 1,
                "Unspecified": 1,
                "9XXtz9]": 1,
                "@uF9]": 1,
                "QueryPower": 1,
                "SetPower": 1,
                "irp (%x) %s-%s status %x": 1,
                "Abort": 1,
                "WWWV3": 1,
                "Waiting on": 1,
                "ignored": 1,
                "SYS STATE": 1,
                "po: POP_WAKE_DEVICE_AFTER_SLEEP enabled.": 1,
                "Retry": 1,
                "                       ": 1,
                "The system may be powered off now.": 1,
                "HteHtJHt1H": 1,
                "H@QVP": 1,
                "]_^[]": 2,
                ",BFE;4$u": 1,
                "<AtXf9T;": 1,
                "ytOf9T": 1,
                "<AtBf9T;": 1,
                "yt9f9T": 1,
                "<At,f9T;": 1,
                "yt#f9T": 1,
                "<AtJf94:": 1,
                "ytBf94": 1,
                "<At6f94:": 1,
                "yt.f94": 1,
                "<At\"f94:": 1,
                "D08PQ": 1,
                "j(hp.E": 1,
                "VVVVP": 1,
                "hErr ": 4,
                "STOP: %lx %s": 1,
                "HardError %lx": 1,
                "Exception Processing Message %lx Parameters %lx %lx %lx %lx": 1,
                "O#:O\"": 2,
                "t=hIvo": 1,
                "j(hIrp ": 2,
                "C#:C\"": 1,
                "VWShkRY": 1,
                "PQj}h": 1,
                "QPjzh": 1,
                "j hVeppPh": 1,
                "KD9K4": 1,
                "KD9K4w": 1,
                "u4){P": 1,
                "vPj`h": 1,
                "FP;FXv": 1,
                "F@;FHv!": 1,
                "FT;F\\v": 1,
                "FD;FLv": 1,
                "3Wjoh": 1,
                "SWhHalVh": 1,
                " PWRQ": 1,
                "*** Verifier assertion failed ***": 1,
                "(B)reak, (I)gnore, (W)arn only, (R)emove assert? ": 1,
                "hHalVh": 1,
                "XP;XL": 1,
                "HP;HL": 1,
                "Hp;Hl": 1,
                "F`;F\\": 1,
                "QP_^[": 1,
                "Performance counter has decreased-- PC1: %I64x, PC0: %I64x": 1,
                "Performance counter skipped too far -- %I64x (%d milliseconds)": 1,
                "Driver has attempted to access an adapter (%p) that has already been released": 1,
                "DMA adapters aren't supposed to be NULL anymore": 1,
                "N\\;N`tq;": 1,
                "F\\+F`PWh:": 1,
                "F\\+F`": 1,
                "NT;NXtq;": 1,
                "FT+FXPWh2": 1,
                "FT+FX": 1,
                "9^Htj;": 1,
                "vHWh\"": 1,
                "9^HhL": 1,
                "9^Ptj;": 1,
                "9^PhP": 1,
                "Cannot put adapter %p until all adapter channels are freed (%x left)": 1,
                "Cannot put adapter %p until all common buffers are freed (%x left)": 1,
                "Cannot put adapter %p until all map registers are freed (%x left)": 1,
                "Cannot put adapter %p until all scatter gather lists are freed (%x left)": 1,
                "VhHalVj0j": 1,
                "Couldn't track common buffer allocation": 1,
                "Common buffer req len:%x alloc len %x, padding %x / %x": 1,
                "hHalV": 1,
                "1hHalVh": 1,
                "F uT3": 1,
                "%p Allocated Map register file": 1,
                "    %p Allocated MDL": 1,
                "    %p Allocated Map Register (%x)": 1,
                "Area before %x byte allocation at %p has been modified": 1,
                "Area after %x byte allocation at %p has been modified": 1,
                "Verified driver or hardware has corrupted memory at %p": 1,
                "Padding before allocation at %p has been illegally modified at %p": 1,
                "Padding after allocation at %p has been illegally modified at %p": 1,
                "ShHalVh": 1,
                "QQVWj": 1,
                "HalGetAdapter API obsolete -- use IoGetDmaAdapter instead": 1,
                "HV: Couldn't find buffer %p": 1,
                "    %p Freeing Map Register (%x)": 1,
                "Freeing map register (%p) that has data and was not flushed.    This means that there was a data loss.": 1,
                "    %p Freeing MDL": 1,
                "%p Freeing Map Register File": 1,
                "x(9?tf": 1,
                "Driver at address %p has a problem": 1,
                "Master devices should return DeallocateObjectKeepRegisters": 1,
                "Driver is attempting to map a 0-length transfer": 1,
                "Virtual address %p is before the first MDL %p": 1,
                "Virtual address %p is after the first MDL %p": 1,
                "Dbl buffer: %x bytes, %p src, %p dest": 1,
                "Extra transfer length crosses a page boundary: Mdl %p, Length %x": 1,
                "Cannot flush buffers that aren't mapped (Addr %p)": 1,
                "FLUSH: Can only flush %x bytes to end of map register file (%x attempted)": 1,
                "Flush buffer: %x bytes, %p src, %p dest": 1,
                "Mapped and flushed transfer but hardware did not touch buffer %p": 1,
                "Flushing too many map registers": 1,
                "tx95D": 1,
                "Cannot flush map register that isn't mapped! (Map register base %p, flushing address %p, MDL %p)": 1,
                "QSVWj ": 1,
                "SVWj,": 1,
                "hHalVj,W": 2,
                "    %p Allocated Wait Block": 2,
                "%p Freeing Wait Block": 3,
                "QQSVWj0": 1,
                "QQSVWj8": 1,
                "hIrp+Pj": 1,
                "G2 t\"": 1,
                "Ht2Ht": 1,
                "HpQj@": 1,
                "hDlckWj": 1,
                "Ht8Ht": 1,
                "Ht;Ht": 1,
                ")p(^]": 1,
                "xx v23": 1,
                "Verifier: deadlock: stop: %p %p %p %p %p ": 1,
                "SVWtC": 1,
                "@$3A$": 1,
                "DlckSh": 1,
                "v4SjhW": 1,
                ";HHt6": 1,
                "H@;HPr": 1,
                "H@;HDv": 1,
                "****************************************************************************": 2,
                "**                                                                        **": 2,
                "** Deadlock detected! Type !deadlock in the debugger for more information **": 1,
                "H<_^[": 1,
                "^j Y3": 1,
                "9p t&": 1,
                "Deadlock detection: Must release resources in reverse-order": 1,
                "Resource %p acquired before resource %p -- ": 1,
                "Current thread (%p) is trying to release it first": 1,
                "t1SVj": 1,
                "tBVWd": 1,
                "IO SYSTEM VERIFICATION ERROR in %s (%s %x)": 1,
                "[%s+%x at %p]": 1,
                "NYY}.": 1,
                "***********************************************************************": 2,
                "* THIS VALIDATION BUG IS FATAL AND WILL CAUSE THE VERIFIER TO HALT    *": 1,
                "* WINDOWS (BUGCHECK) WHEN THE MACHINE IS NOT UNDER A KERNEL DEBUGGER! *": 1,
                "[%s @ 0x%p] ": 1,
                "[0x%p] ": 1,
                "http://www.microsoft.com/hwdq/bc/default.asp?os=%d.%d.%d&major=0x%x&minor=0x%x&lang=0x%x": 1,
                "Break, Ignore, Zap, Remove, Disable all (bizrd)? ": 1,
                "Break, Ignore, Disable all (bid)? ": 1,
                "Breakpoint zapped (OS will print text and return)": 1,
                "Breakpoint removed": 1,
                "Verification asserts disabled.": 1,
                "Breaking in... (press g<enter> to return to assert menu)": 1,
                "SVWhVfGoj": 1,
                "Vj!Z3": 1,
                "@tnVj": 1,
                "Vj Z3": 1,
                "Vj\"Z3": 1,
                "Vj#Z3": 1,
                "hIrpt": 1,
                "IRP_MJ_SCSI": 1,
                "IRP_MJ_BOGUS": 1,
                "IRP_MJ_??": 1,
                ";O@t=": 1,
                "9Z,tU": 1,
                "IRP_MJ_SYSTEM_CONTROL.": 1,
                "IRP_MN_BOGUS": 3,
                "(Bogus)": 7,
                "tJWSj": 1,
                "t0WSj": 1,
                "IRP_MJ_POWER.": 1,
                "t1Nt$Nt": 1,
                "t/Nt%Nt": 1,
                "IRP_MJ_PNP.": 1,
                "(DeviceUsageTypeDumpFile": 1,
                "(DeviceUsageTypeHibernation": 1,
                "(DeviceUsageTypePaging": 1,
                "(DeviceUsageTypeUndefined": 1,
                ", InPath=TRUE)": 1,
                ", InPath=FALSE)": 1,
                "(BusQueryInstanceID)": 1,
                "(BusQueryCompatibleIDs)": 1,
                "(BusQueryHardwareIDs)": 1,
                "(BusQueryDeviceID)": 1,
                "(True)": 1,
                "(False)": 1,
                "(WhichSpace=%x, Buffer=%x, Offset=%x, Length=%x)": 1,
                "(DeviceTextLocationInformation)": 1,
                "(DeviceTextDescription)": 1,
                "(TargetDeviceRelation)": 1,
                "(RemovalRelations)": 1,
                "(PowerRelations)": 1,
                "(EjectionRelations)": 1,
                "(BusRelations)": 1,
                "SSSVW": 3,
                "K0|$;": 1,
                "u$9C@t": 1,
                "H$j Z": 1,
                "8_^[]": 1,
                "[ DevObj=%p, FileObject=%p, Parameters=%p %p %p %p ]": 1,
                "Next:    >": 1,
                "Current:  ": 1,
                "O$j Z": 1,
                "t1Ht*Ht+Ht$Ht!Hu\"": 1,
                "P ;V ": 1,
                "t^HtBHt": 1,
                "_VhB.Z": 1,
                "F$1%Z": 1,
                "w`hIrpdh": 1,
                "t+It#It": 1,
                "j(hIrpBPS": 1,
                "j SSj": 1,
                "hIrps": 1,
                "sPj(Z": 1,
                "hWmitj0W": 1,
                "tAWWWV": 1,
                "C&WWWWh": 1,
                "_,_^[": 1,
                "hPerf": 1,
                "hKDBG": 1,
                "DEBUG": 1,
                "NODEBUG": 1,
                "CRASHDEBUG": 1,
                "tSSVWW": 1,
                "t hH$H": 1,
                "_hH$H": 1,
                "9~ u(": 1,
                "PWh00": 1,
                "90t*B": 1,
                "SVWu-": 1,
                "E Ht`Ht3HHt": 1,
                "E HtaHt3HHt": 1,
                "tzItFIt)It\"I": 1,
                "DVhKdIo3": 1,
                "=MmClu": 1,
                "=MmSbt": 1,
                "=MmCit": 1,
                "=MmCat": 1,
                "=MmSdt": 1,
                "=MmSct": 1,
                "u@@;E": 1,
                "hHdlsVS": 1,
                "H>f9H<uJ": 1,
                "tKhHdlsCSj": 1,
                "HdlsWj": 1,
                "tEW@P3": 1,
                "----Press <Enter> for more----": 1,
                "<?xml>": 1,
                "<INSTANCE CLASSNAME=\"BLUESCREEN\">": 1,
                "<PROPERTY NAME=\"STOPCODE\" TYPE=\"string\"><VALUE>\"0x%0X\"</VALUE></PROPERTY>": 1,
                "</INSTANCE>": 1,
                "</BP>": 1,
                "%02d:%02d:%02d.%03d : ": 1,
                "New log entries have been added during dump, command aborted.": 1,
                "New log entries have been added while waiting, command aborted.": 1,
                "YYu/VPh": 1,
                "restart": 1,
                "Type ? or Help for a list of commands.": 1,
                "d        Display all log entries, paging is on.": 1,
                "help     Display this list.": 1,
                "restart  Restart the system immediately.": 1,
                "?        Display this list.": 1,
                "!SAC>": 2,
                "t{HtqHtgHt]HtSHt0H": 1,
                "reboot": 1,
                "shutdown": 1,
                "[%d;%dH": 1,
                "[%d;%dm": 1,
                "YjPY+": 1,
                "ntoskrnl.exe": 1,
                "CcCanIWrite": 1,
                "CcCopyRead": 1,
                "CcCopyWrite": 1,
                "CcDeferWrite": 1,
                "CcFastCopyRead": 1,
                "CcFastCopyWrite": 1,
                "CcFastMdlReadWait": 1,
                "CcFastReadNotPossible": 1,
                "CcFastReadWait": 1,
                "CcFlushCache": 1,
                "CcGetDirtyPages": 1,
                "CcGetFileObjectFromBcb": 1,
                "CcGetFileObjectFromSectionPtrs": 1,
                "CcGetFlushedValidData": 1,
                "CcGetLsnForFileObject": 1,
                "CcInitializeCacheMap": 1,
                "CcIsThereDirtyData": 1,
                "CcMapData": 1,
                "CcMdlRead": 1,
                "CcMdlReadComplete": 1,
                "CcMdlWriteAbort": 1,
                "CcMdlWriteComplete": 1,
                "CcPinMappedData": 1,
                "CcPinRead": 1,
                "CcPrepareMdlWrite": 1,
                "CcPreparePinWrite": 1,
                "CcPurgeCacheSection": 1,
                "CcRemapBcb": 1,
                "CcRepinBcb": 1,
                "CcScheduleReadAhead": 1,
                "CcSetAdditionalCacheAttributes": 1,
                "CcSetBcbOwnerPointer": 1,
                "CcSetDirtyPageThreshold": 1,
                "CcSetDirtyPinnedData": 1,
                "CcSetFileSizes": 1,
                "CcSetLogHandleForFile": 1,
                "CcSetReadAheadGranularity": 1,
                "CcUninitializeCacheMap": 1,
                "CcUnpinData": 1,
                "CcUnpinDataForThread": 1,
                "CcUnpinRepinnedBcb": 1,
                "CcWaitForCurrentLazyWriterActivity": 1,
                "CcZeroData": 1,
                "CmRegisterCallback": 1,
                "CmUnRegisterCallback": 1,
                "DbgBreakPoint": 1,
                "DbgBreakPointWithStatus": 1,
                "DbgLoadImageSymbols": 1,
                "DbgPrint": 1,
                "DbgPrintEx": 1,
                "DbgPrintReturnControlC": 1,
                "DbgPrompt": 1,
                "DbgQueryDebugFilterState": 1,
                "DbgSetDebugFilterState": 1,
                "ExAcquireResourceSharedLite": 1,
                "ExAcquireRundownProtection": 1,
                "ExAcquireRundownProtectionEx": 1,
                "ExAcquireSharedStarveExclusive": 1,
                "ExAcquireSharedWaitForExclusive": 1,
                "ExAllocateFromPagedLookasideList": 1,
                "ExConvertExclusiveToSharedLite": 1,
                "ExCreateCallback": 1,
                "ExDeleteNPagedLookasideList": 1,
                "ExDeletePagedLookasideList": 1,
                "ExDeleteResourceLite": 1,
                "ExDesktopObjectType": 1,
                "ExDisableResourceBoostLite": 1,
                "ExEnumHandleTable": 1,
                "ExEventObjectType": 1,
                "ExExtendZone": 1,
                "ExFreeToPagedLookasideList": 1,
                "ExGetCurrentProcessorCounts": 1,
                "ExGetCurrentProcessorCpuUsage": 1,
                "ExGetExclusiveWaiterCount": 1,
                "ExGetPreviousMode": 1,
                "ExGetSharedWaiterCount": 1,
                "ExInitializeNPagedLookasideList": 1,
                "ExInitializePagedLookasideList": 1,
                "ExInitializeResourceLite": 1,
                "ExInitializeRundownProtection": 1,
                "ExInitializeZone": 1,
                "ExInterlockedAddLargeInteger": 1,
                "ExInterlockedAddLargeStatistic": 1,
                "ExInterlockedAddUlong": 1,
                "ExInterlockedCompareExchange64": 1,
                "ExInterlockedDecrementLong": 1,
                "ExInterlockedExchangeUlong": 1,
                "ExInterlockedExtendZone": 1,
                "ExInterlockedFlushSList": 1,
                "ExInterlockedIncrementLong": 1,
                "ExInterlockedInsertHeadList": 1,
                "ExInterlockedInsertTailList": 1,
                "ExInterlockedPopEntryList": 1,
                "ExInterlockedPopEntrySList": 1,
                "ExInterlockedPushEntryList": 1,
                "ExInterlockedPushEntrySList": 1,
                "ExInterlockedRemoveHeadList": 1,
                "ExIsProcessorFeaturePresent": 1,
                "ExIsResourceAcquiredExclusiveLite": 1,
                "ExIsResourceAcquiredSharedLite": 1,
                "ExLocalTimeToSystemTime": 1,
                "ExNotifyCallback": 1,
                "ExQueryPoolBlockSize": 1,
                "ExQueueWorkItem": 1,
                "ExRaiseAccessViolation": 1,
                "ExRaiseDatatypeMisalignment": 1,
                "ExRaiseException": 1,
                "ExRaiseHardError": 1,
                "ExRaiseStatus": 1,
                "ExReInitializeRundownProtection": 1,
                "ExRegisterCallback": 1,
                "ExReinitializeResourceLite": 1,
                "ExReleaseResourceForThreadLite": 1,
                "ExReleaseRundownProtection": 1,
                "ExReleaseRundownProtectionEx": 1,
                "ExRundownCompleted": 1,
                "ExSemaphoreObjectType": 1,
                "ExSetResourceOwnerPointer": 1,
                "ExSetTimerResolution": 1,
                "ExSystemExceptionFilter": 1,
                "ExSystemTimeToLocalTime": 1,
                "ExUnregisterCallback": 1,
                "ExUuidCreate": 1,
                "ExVerifySuite": 1,
                "ExWaitForRundownProtectionRelease": 1,
                "ExWindowStationObjectType": 1,
                "ExfAcquirePushLockExclusive": 1,
                "ExfAcquirePushLockShared": 1,
                "ExfInterlockedAddUlong": 1,
                "ExfInterlockedCompareExchange64": 1,
                "ExfInterlockedInsertHeadList": 1,
                "ExfInterlockedInsertTailList": 1,
                "ExfInterlockedPopEntryList": 1,
                "ExfInterlockedPushEntryList": 1,
                "ExfInterlockedRemoveHeadList": 1,
                "ExfReleasePushLock": 1,
                "Exfi386InterlockedDecrementLong": 1,
                "Exfi386InterlockedExchangeUlong": 1,
                "Exfi386InterlockedIncrementLong": 1,
                "Exi386InterlockedDecrementLong": 1,
                "Exi386InterlockedExchangeUlong": 1,
                "Exi386InterlockedIncrementLong": 1,
                "FsRtlAcquireFileExclusive": 1,
                "FsRtlAddLargeMcbEntry": 1,
                "FsRtlAddMcbEntry": 1,
                "FsRtlAddToTunnelCache": 1,
                "FsRtlAllocateFileLock": 1,
                "FsRtlAllocatePool": 1,
                "FsRtlAllocatePoolWithQuota": 1,
                "FsRtlAllocatePoolWithQuotaTag": 1,
                "FsRtlAllocatePoolWithTag": 1,
                "FsRtlAllocateResource": 1,
                "FsRtlAreNamesEqual": 1,
                "FsRtlBalanceReads": 1,
                "FsRtlCheckLockForReadAccess": 1,
                "FsRtlCheckLockForWriteAccess": 1,
                "FsRtlCheckOplock": 1,
                "FsRtlCopyRead": 1,
                "FsRtlCopyWrite": 1,
                "FsRtlCreateSectionForDataScan": 1,
                "FsRtlCurrentBatchOplock": 1,
                "FsRtlDeleteKeyFromTunnelCache": 1,
                "FsRtlDeleteTunnelCache": 1,
                "FsRtlDeregisterUncProvider": 1,
                "FsRtlDissectDbcs": 1,
                "FsRtlDissectName": 1,
                "FsRtlDoesDbcsContainWildCards": 1,
                "FsRtlDoesNameContainWildCards": 1,
                "FsRtlFastCheckLockForRead": 1,
                "FsRtlFastCheckLockForWrite": 1,
                "FsRtlFastUnlockAll": 1,
                "FsRtlFastUnlockAllByKey": 1,
                "FsRtlFastUnlockSingle": 1,
                "FsRtlFindInTunnelCache": 1,
                "FsRtlFreeFileLock": 1,
                "FsRtlGetFileSize": 1,
                "FsRtlGetNextFileLock": 1,
                "FsRtlGetNextLargeMcbEntry": 1,
                "FsRtlGetNextMcbEntry": 1,
                "FsRtlIncrementCcFastReadNoWait": 1,
                "FsRtlIncrementCcFastReadNotPossible": 1,
                "FsRtlIncrementCcFastReadResourceMiss": 1,
                "FsRtlIncrementCcFastReadWait": 1,
                "FsRtlInitializeFileLock": 1,
                "FsRtlInitializeLargeMcb": 1,
                "FsRtlInitializeMcb": 1,
                "FsRtlInitializeOplock": 1,
                "FsRtlInitializeTunnelCache": 1,
                "FsRtlInsertPerFileObjectContext": 1,
                "FsRtlInsertPerStreamContext": 1,
                "FsRtlIsDbcsInExpression": 1,
                "FsRtlIsFatDbcsLegal": 1,
                "FsRtlIsHpfsDbcsLegal": 1,
                "FsRtlIsNameInExpression": 1,
                "FsRtlIsNtstatusExpected": 1,
                "FsRtlIsPagingFile": 1,
                "FsRtlIsTotalDeviceFailure": 1,
                "FsRtlLegalAnsiCharacterArray": 1,
                "FsRtlLookupLargeMcbEntry": 1,
                "FsRtlLookupLastLargeMcbEntry": 1,
                "FsRtlLookupLastLargeMcbEntryAndIndex": 1,
                "FsRtlLookupLastMcbEntry": 1,
                "FsRtlLookupMcbEntry": 1,
                "FsRtlLookupPerFileObjectContext": 1,
                "FsRtlLookupPerStreamContextInternal": 1,
                "FsRtlMdlRead": 1,
                "FsRtlMdlReadComplete": 1,
                "FsRtlMdlReadCompleteDev": 1,
                "FsRtlMdlReadDev": 1,
                "FsRtlMdlWriteComplete": 1,
                "FsRtlMdlWriteCompleteDev": 1,
                "FsRtlNormalizeNtstatus": 1,
                "FsRtlNotifyChangeDirectory": 1,
                "FsRtlNotifyCleanup": 1,
                "FsRtlNotifyFilterChangeDirectory": 1,
                "FsRtlNotifyFilterReportChange": 1,
                "FsRtlNotifyFullChangeDirectory": 1,
                "FsRtlNotifyFullReportChange": 1,
                "FsRtlNotifyInitializeSync": 1,
                "FsRtlNotifyReportChange": 1,
                "FsRtlNotifyUninitializeSync": 1,
                "FsRtlNotifyVolumeEvent": 1,
                "FsRtlNumberOfRunsInLargeMcb": 1,
                "FsRtlNumberOfRunsInMcb": 1,
                "FsRtlOplockFsctrl": 1,
                "FsRtlOplockIsFastIoPossible": 1,
                "FsRtlPostPagingFileStackOverflow": 1,
                "FsRtlPostStackOverflow": 1,
                "FsRtlPrepareMdlWrite": 1,
                "FsRtlPrepareMdlWriteDev": 1,
                "FsRtlPrivateLock": 1,
                "FsRtlProcessFileLock": 1,
                "FsRtlRegisterFileSystemFilterCallbacks": 1,
                "FsRtlRegisterUncProvider": 1,
                "FsRtlReleaseFile": 1,
                "FsRtlRemoveLargeMcbEntry": 1,
                "FsRtlRemoveMcbEntry": 1,
                "FsRtlRemovePerFileObjectContext": 1,
                "FsRtlRemovePerStreamContext": 1,
                "FsRtlResetLargeMcb": 1,
                "FsRtlSplitLargeMcb": 1,
                "FsRtlSyncVolumes": 1,
                "FsRtlTeardownPerStreamContexts": 1,
                "FsRtlTruncateLargeMcb": 1,
                "FsRtlTruncateMcb": 1,
                "FsRtlUninitializeFileLock": 1,
                "FsRtlUninitializeLargeMcb": 1,
                "FsRtlUninitializeMcb": 1,
                "FsRtlUninitializeOplock": 1,
                "HalDispatchTable": 1,
                "HalExamineMBR": 1,
                "HalPrivateDispatchTable": 1,
                "HeadlessDispatch": 1,
                "InbvAcquireDisplayOwnership": 1,
                "InbvCheckDisplayOwnership": 1,
                "InbvDisplayString": 1,
                "InbvEnableBootDriver": 1,
                "InbvEnableDisplayString": 1,
                "InbvInstallDisplayStringFilter": 1,
                "InbvIsBootDriverInstalled": 1,
                "InbvNotifyDisplayOwnershipLost": 1,
                "InbvResetDisplay": 1,
                "InbvSetScrollRegion": 1,
                "InbvSetTextColor": 1,
                "InbvSolidColorFill": 1,
                "InitSafeBootMode": 1,
                "InterlockedCompareExchange": 1,
                "InterlockedDecrement": 1,
                "InterlockedExchange": 1,
                "InterlockedExchangeAdd": 1,
                "InterlockedIncrement": 1,
                "InterlockedPopEntrySList": 1,
                "InterlockedPushEntrySList": 1,
                "IoAcquireCancelSpinLock": 1,
                "IoAcquireRemoveLockEx": 1,
                "IoAcquireVpbSpinLock": 1,
                "IoAdapterObjectType": 1,
                "IoAllocateController": 1,
                "IoAllocateDriverObjectExtension": 1,
                "IoAllocateErrorLogEntry": 1,
                "IoAllocateIrp": 1,
                "IoAllocateMdl": 1,
                "IoAllocateWorkItem": 1,
                "IoAssignDriveLetters": 1,
                "IoAssignResources": 1,
                "IoAttachDevice": 1,
                "IoAttachDeviceByPointer": 1,
                "IoAttachDeviceToDeviceStack": 1,
                "IoAttachDeviceToDeviceStackSafe": 1,
                "IoBuildPartialMdl": 1,
                "IoBuildSynchronousFsdRequest": 1,
                "IoCallDriver": 1,
                "IoCancelFileOpen": 1,
                "IoCancelIrp": 1,
                "IoCheckDesiredAccess": 1,
                "IoCheckEaBufferValidity": 1,
                "IoCheckFunctionAccess": 1,
                "IoCheckQuerySetFileInformation": 1,
                "IoCheckQuerySetVolumeInformation": 1,
                "IoCheckQuotaBufferValidity": 1,
                "IoCheckShareAccess": 1,
                "IoCompleteRequest": 1,
                "IoConnectInterrupt": 1,
                "IoCreateController": 1,
                "IoCreateDevice": 1,
                "IoCreateDisk": 1,
                "IoCreateDriver": 1,
                "IoCreateFile": 1,
                "IoCreateFileSpecifyDeviceObjectHint": 1,
                "IoCreateNotificationEvent": 1,
                "IoCreateStreamFileObject": 1,
                "IoCreateStreamFileObjectEx": 1,
                "IoCreateStreamFileObjectLite": 1,
                "IoCreateSymbolicLink": 1,
                "IoCreateSynchronizationEvent": 1,
                "IoCreateUnprotectedSymbolicLink": 1,
                "IoCsqInitialize": 1,
                "IoCsqInsertIrp": 1,
                "IoCsqRemoveIrp": 1,
                "IoCsqRemoveNextIrp": 1,
                "IoDeleteController": 1,
                "IoDeleteDevice": 1,
                "IoDeleteDriver": 1,
                "IoDeleteSymbolicLink": 1,
                "IoDetachDevice": 1,
                "IoDeviceHandlerObjectSize": 1,
                "IoDeviceHandlerObjectType": 1,
                "IoDeviceObjectType": 1,
                "IoDisconnectInterrupt": 1,
                "IoDriverObjectType": 1,
                "IoEnqueueIrp": 1,
                "IoEnumerateDeviceObjectList": 1,
                "IoEnumerateRegisteredFiltersList": 1,
                "IoFastQueryNetworkAttributes": 1,
                "IoFileObjectType": 1,
                "IoForwardAndCatchIrp": 1,
                "IoForwardIrpSynchronously": 1,
                "IoFreeController": 1,
                "IoFreeErrorLogEntry": 1,
                "IoFreeMdl": 1,
                "IoFreeWorkItem": 1,
                "IoGetAttachedDevice": 1,
                "IoGetAttachedDeviceReference": 1,
                "IoGetBaseFileSystemDeviceObject": 1,
                "IoGetBootDiskInformation": 1,
                "IoGetConfigurationInformation": 1,
                "IoGetCurrentProcess": 1,
                "IoGetDeviceAttachmentBaseRef": 1,
                "IoGetDeviceInterfaceAlias": 1,
                "IoGetDeviceInterfaces": 1,
                "IoGetDeviceObjectPointer": 1,
                "IoGetDeviceProperty": 1,
                "IoGetDeviceToVerify": 1,
                "IoGetDiskDeviceObject": 1,
                "IoGetDriverObjectExtension": 1,
                "IoGetFileObjectGenericMapping": 1,
                "IoGetInitialStack": 1,
                "IoGetLowerDeviceObject": 1,
                "IoGetRelatedDeviceObject": 1,
                "IoGetRequestorProcess": 1,
                "IoGetRequestorProcessId": 1,
                "IoGetRequestorSessionId": 1,
                "IoGetStackLimits": 1,
                "IoGetTopLevelIrp": 1,
                "IoInitializeCrashDump": 1,
                "IoInitializeIrp": 1,
                "IoInitializeRemoveLockEx": 1,
                "IoInvalidateDeviceRelations": 1,
                "IoInvalidateDeviceState": 1,
                "IoIsFileOriginRemote": 1,
                "IoIsOperationSynchronous": 1,
                "IoIsSystemThread": 1,
                "IoIsValidNameGraftingBuffer": 1,
                "IoIsWdmVersionAvailable": 1,
                "IoMakeAssociatedIrp": 1,
                "IoOpenDeviceInterfaceRegistryKey": 1,
                "IoOpenDeviceRegistryKey": 1,
                "IoPageRead": 1,
                "IoPnPDeliverServicePowerNotification": 1,
                "IoQueryDeviceDescription": 1,
                "IoQueryFileDosDeviceName": 1,
                "IoQueryFileInformation": 1,
                "IoQueryVolumeInformation": 1,
                "IoQueueThreadIrp": 1,
                "IoQueueWorkItem": 1,
                "IoRaiseHardError": 1,
                "IoRaiseInformationalHardError": 1,
                "IoReadDiskSignature": 1,
                "IoReadOperationCount": 1,
                "IoReadPartitionTable": 1,
                "IoReadPartitionTableEx": 1,
                "IoReadTransferCount": 1,
                "IoRegisterBootDriverReinitialization": 1,
                "IoRegisterDeviceInterface": 1,
                "IoRegisterDriverReinitialization": 1,
                "IoRegisterFileSystem": 1,
                "IoRegisterFsRegistrationChange": 1,
                "IoRegisterLastChanceShutdownNotification": 1,
                "IoRegisterPlugPlayNotification": 1,
                "IoRegisterShutdownNotification": 1,
                "IoReleaseCancelSpinLock": 1,
                "IoReleaseRemoveLockAndWaitEx": 1,
                "IoReleaseRemoveLockEx": 1,
                "IoReleaseVpbSpinLock": 1,
                "IoRemoveShareAccess": 1,
                "IoReportDetectedDevice": 1,
                "IoReportHalResourceUsage": 1,
                "IoReportResourceForDetection": 1,
                "IoReportResourceUsage": 1,
                "IoReportTargetDeviceChange": 1,
                "IoReportTargetDeviceChangeAsynchronous": 1,
                "IoRequestDeviceEject": 1,
                "IoReuseIrp": 1,
                "IoSetCompletionRoutineEx": 1,
                "IoSetDeviceInterfaceState": 1,
                "IoSetDeviceToVerify": 1,
                "IoSetFileOrigin": 1,
                "IoSetHardErrorOrVerifyDevice": 1,
                "IoSetInformation": 1,
                "IoSetIoCompletion": 1,
                "IoSetPartitionInformation": 1,
                "IoSetPartitionInformationEx": 1,
                "IoSetShareAccess": 1,
                "IoSetStartIoAttributes": 1,
                "IoSetSystemPartition": 1,
                "IoSetThreadHardErrorMode": 1,
                "IoSetTopLevelIrp": 1,
                "IoStartNextPacket": 1,
                "IoStartNextPacketByKey": 1,
                "IoStartPacket": 1,
                "IoStartTimer": 1,
                "IoStatisticsLock": 1,
                "IoStopTimer": 1,
                "IoSynchronousInvalidateDeviceRelations": 1,
                "IoSynchronousPageWrite": 1,
                "IoThreadToProcess": 1,
                "IoUnregisterFileSystem": 1,
                "IoUnregisterFsRegistrationChange": 1,
                "IoUnregisterPlugPlayNotification": 1,
                "IoUnregisterShutdownNotification": 1,
                "IoUpdateShareAccess": 1,
                "IoValidateDeviceIoControlAccess": 1,
                "IoVerifyPartitionTable": 1,
                "IoVerifyVolume": 1,
                "IoVolumeDeviceToDosName": 1,
                "IoWMIAllocateInstanceIds": 1,
                "IoWMIDeviceObjectToInstanceName": 1,
                "IoWMIExecuteMethod": 1,
                "IoWMIHandleToInstanceName": 1,
                "IoWMIOpenBlock": 1,
                "IoWMIQueryAllData": 1,
                "IoWMIQueryAllDataMultiple": 1,
                "IoWMIQuerySingleInstance": 1,
                "IoWMIQuerySingleInstanceMultiple": 1,
                "IoWMIRegistrationControl": 1,
                "IoWMISetNotificationCallback": 1,
                "IoWMISetSingleInstance": 1,
                "IoWMISetSingleItem": 1,
                "IoWMISuggestInstanceName": 1,
                "IoWMIWriteEvent": 1,
                "IoWriteErrorLogEntry": 1,
                "IoWriteOperationCount": 1,
                "IoWritePartitionTable": 1,
                "IoWritePartitionTableEx": 1,
                "IoWriteTransferCount": 1,
                "KdDebuggerEnabled": 1,
                "KdDebuggerNotPresent": 1,
                "KdDisableDebugger": 1,
                "KdEnableDebugger": 1,
                "KdEnteredDebugger": 1,
                "KdPollBreakIn": 1,
                "KdPowerTransition": 1,
                "Ke386CallBios": 1,
                "Ke386IoSetAccessProcess": 1,
                "Ke386QueryIoAccessMap": 1,
                "Ke386SetIoAccessMap": 1,
                "KeAcquireInStackQueuedSpinLockAtDpcLevel": 1,
                "KeAcquireInterruptSpinLock": 1,
                "KeAcquireSpinLockAtDpcLevel": 1,
                "KeAddSystemServiceTable": 1,
                "KeAreApcsDisabled": 1,
                "KeAttachProcess": 1,
                "KeBugCheck": 1,
                "KeBugCheckEx": 1,
                "KeCancelTimer": 1,
                "KeCapturePersistentThreadState": 1,
                "KeClearEvent": 1,
                "KeConnectInterrupt": 1,
                "KeDcacheFlushCount": 1,
                "KeDelayExecutionThread": 1,
                "KeDeregisterBugCheckCallback": 1,
                "KeDeregisterBugCheckReasonCallback": 1,
                "KeDetachProcess": 1,
                "KeDisconnectInterrupt": 1,
                "KeEnterCriticalRegion": 1,
                "KeEnterKernelDebugger": 1,
                "KeFindConfigurationEntry": 1,
                "KeFindConfigurationNextEntry": 1,
                "KeFlushEntireTb": 1,
                "KeFlushQueuedDpcs": 1,
                "KeGetCurrentThread": 1,
                "KeGetPreviousMode": 1,
                "KeGetRecommendedSharedDataAlignment": 1,
                "KeI386AbiosCall": 1,
                "KeI386AllocateGdtSelectors": 1,
                "KeI386Call16BitCStyleFunction": 1,
                "KeI386Call16BitFunction": 1,
                "KeI386FlatToGdtSelector": 1,
                "KeI386GetLid": 1,
                "KeI386MachineType": 1,
                "KeI386ReleaseGdtSelectors": 1,
                "KeI386ReleaseLid": 1,
                "KeI386SetGdtSelector": 1,
                "KeIcacheFlushCount": 1,
                "KeInitializeApc": 1,
                "KeInitializeDeviceQueue": 1,
                "KeInitializeDpc": 1,
                "KeInitializeEvent": 1,
                "KeInitializeInterrupt": 1,
                "KeInitializeQueue": 1,
                "KeInitializeSemaphore": 1,
                "KeInsertByKeyDeviceQueue": 1,
                "KeInsertDeviceQueue": 1,
                "KeInsertHeadQueue": 1,
                "KeInsertQueue": 1,
                "KeInsertQueueApc": 1,
                "KeInsertQueueDpc": 1,
                "KeIsAttachedProcess": 1,
                "KeIsExecutingDpc": 1,
                "KeLeaveCriticalRegion": 1,
                "KeLoaderBlock": 1,
                "KeNumberProcessors": 1,
                "KeProfileInterrupt": 1,
                "KeProfileInterruptWithSource": 1,
                "KePulseEvent": 1,
                "KeQueryActiveProcessors": 1,
                "KeQueryInterruptTime": 1,
                "KeQueryPriorityThread": 1,
                "KeQueryRuntimeThread": 1,
                "KeQuerySystemTime": 1,
                "KeQueryTickCount": 1,
                "KeQueryTimeIncrement": 1,
                "KeRaiseUserException": 1,
                "KeReadStateEvent": 1,
                "KeReadStateMutant": 1,
                "KeReadStateMutex": 1,
                "KeReadStateQueue": 1,
                "KeReadStateSemaphore": 1,
                "KeReadStateTimer": 1,
                "KeRegisterBugCheckCallback": 1,
                "KeRegisterBugCheckReasonCallback": 1,
                "KeReleaseInStackQueuedSpinLockFromDpcLevel": 1,
                "KeReleaseInterruptSpinLock": 1,
                "KeReleaseSemaphore": 1,
                "KeReleaseSpinLockFromDpcLevel": 1,
                "KeRemoveByKeyDeviceQueue": 1,
                "KeRemoveByKeyDeviceQueueIfBusy": 1,
                "KeRemoveDeviceQueue": 1,
                "KeRemoveEntryDeviceQueue": 1,
                "KeRemoveQueue": 1,
                "KeRemoveQueueDpc": 1,
                "KeRemoveSystemServiceTable": 1,
                "KeResetEvent": 1,
                "KeRestoreFloatingPointState": 1,
                "KeRevertToUserAffinityThread": 1,
                "KeRundownQueue": 1,
                "KeSaveFloatingPointState": 1,
                "KeSaveStateForHibernate": 1,
                "KeServiceDescriptorTable": 1,
                "KeSetAffinityThread": 1,
                "KeSetBasePriorityThread": 1,
                "KeSetDmaIoCoherency": 1,
                "KeSetEventBoostPriority": 1,
                "KeSetIdealProcessorThread": 1,
                "KeSetImportanceDpc": 1,
                "KeSetKernelStackSwapEnable": 1,
                "KeSetPriorityThread": 1,
                "KeSetProfileIrql": 1,
                "KeSetSystemAffinityThread": 1,
                "KeSetTargetProcessorDpc": 1,
                "KeSetTimeIncrement": 1,
                "KeSetTimeUpdateNotifyRoutine": 1,
                "KeSetTimer": 1,
                "KeSetTimerEx": 1,
                "KeStackAttachProcess": 1,
                "KeTerminateThread": 1,
                "KeTickCount": 1,
                "KeUnstackDetachProcess": 1,
                "KeUpdateRunTime": 1,
                "KeUpdateSystemTime": 1,
                "KeUserModeCallback": 1,
                "KeWaitForMultipleObjects": 1,
                "KeWaitForMutexObject": 1,
                "Kei386EoiHelper": 1,
                "KiAcquireSpinLock": 1,
                "KiBugCheckData": 1,
                "KiCoprocessorError": 1,
                "KiDeliverApc": 1,
                "KiDispatchInterrupt": 1,
                "KiEnableTimerWatchdog": 1,
                "KiIpiServiceRoutine": 1,
                "KiReleaseSpinLock": 1,
                "KiUnexpectedInterrupt": 1,
                "Kii386SpinOnSpinLock": 1,
                "LdrAccessResource": 1,
                "LdrEnumResources": 1,
                "LdrFindResourceDirectory_U": 1,
                "LdrFindResource_U": 1,
                "LpcPortObjectType": 1,
                "LpcRequestPort": 1,
                "LpcRequestWaitReplyPort": 1,
                "LsaCallAuthenticationPackage": 1,
                "LsaDeregisterLogonProcess": 1,
                "LsaFreeReturnBuffer": 1,
                "LsaLogonUser": 1,
                "LsaLookupAuthenticationPackage": 1,
                "LsaRegisterLogonProcess": 1,
                "Mm64BitPhysicalAddress": 1,
                "MmAddPhysicalMemory": 1,
                "MmAddVerifierThunks": 1,
                "MmAdjustWorkingSetSize": 1,
                "MmAdvanceMdl": 1,
                "MmAllocateContiguousMemory": 1,
                "MmAllocateContiguousMemorySpecifyCache": 1,
                "MmAllocateMappingAddress": 1,
                "MmAllocateNonCachedMemory": 1,
                "MmAllocatePagesForMdl": 1,
                "MmBuildMdlForNonPagedPool": 1,
                "MmCanFileBeTruncated": 1,
                "MmCommitSessionMappedView": 1,
                "MmCreateMdl": 1,
                "MmCreateSection": 1,
                "MmDisableModifiedWriteOfSection": 1,
                "MmFlushImageSection": 1,
                "MmForceSectionClosed": 1,
                "MmFreeContiguousMemory": 1,
                "MmFreeContiguousMemorySpecifyCache": 1,
                "MmFreeMappingAddress": 1,
                "MmFreeNonCachedMemory": 1,
                "MmFreePagesFromMdl": 1,
                "MmGetPhysicalAddress": 1,
                "MmGetPhysicalMemoryRanges": 1,
                "MmGetSystemRoutineAddress": 1,
                "MmGetVirtualForPhysical": 1,
                "MmGrowKernelStack": 1,
                "MmHighestUserAddress": 1,
                "MmIsAddressValid": 1,
                "MmIsDriverVerifying": 1,
                "MmIsNonPagedSystemAddressValid": 1,
                "MmIsRecursiveIoFault": 1,
                "MmIsThisAnNtAsSystem": 1,
                "MmIsVerifierEnabled": 1,
                "MmLockPagableDataSection": 1,
                "MmLockPagableImageSection": 1,
                "MmLockPagableSectionByHandle": 1,
                "MmMapLockedPagesWithReservedMapping": 1,
                "MmMapMemoryDumpMdl": 1,
                "MmMapUserAddressesToPage": 1,
                "MmMapVideoDisplay": 1,
                "MmMapViewInSessionSpace": 1,
                "MmMapViewInSystemSpace": 1,
                "MmMapViewOfSection": 1,
                "MmMarkPhysicalMemoryAsBad": 1,
                "MmMarkPhysicalMemoryAsGood": 1,
                "MmPageEntireDriver": 1,
                "MmPrefetchPages": 1,
                "MmProbeAndLockSelectedPages": 1,
                "MmProtectMdlSystemAddress": 1,
                "MmQuerySystemSize": 1,
                "MmRemovePhysicalMemory": 1,
                "MmResetDriverPaging": 1,
                "MmSectionObjectType": 1,
                "MmSecureVirtualMemory": 1,
                "MmSetAddressRangeModified": 1,
                "MmSetBankedSection": 1,
                "MmSizeOfMdl": 1,
                "MmSystemRangeStart": 1,
                "MmTrimAllSystemPagableMemory": 1,
                "MmUnlockPagableImageSection": 1,
                "MmUnmapReservedMapping": 1,
                "MmUnmapVideoDisplay": 1,
                "MmUnmapViewInSessionSpace": 1,
                "MmUnmapViewInSystemSpace": 1,
                "MmUnmapViewOfSection": 1,
                "MmUnsecureVirtualMemory": 1,
                "MmUserProbeAddress": 1,
                "NlsAnsiCodePage": 1,
                "NlsLeadByteInfo": 1,
                "NlsMbCodePageTag": 1,
                "NlsMbOemCodePageTag": 1,
                "NlsOemCodePage": 1,
                "NlsOemLeadByteInfo": 1,
                "NtAddAtom": 1,
                "NtAdjustPrivilegesToken": 1,
                "NtAllocateLocallyUniqueId": 1,
                "NtAllocateUuids": 1,
                "NtAllocateVirtualMemory": 1,
                "NtBuildNumber": 1,
                "NtClose": 1,
                "NtConnectPort": 1,
                "NtCreateEvent": 1,
                "NtCreateSection": 1,
                "NtDeleteAtom": 1,
                "NtDeleteFile": 1,
                "NtDeviceIoControlFile": 1,
                "NtDuplicateObject": 1,
                "NtDuplicateToken": 1,
                "NtFindAtom": 1,
                "NtFreeVirtualMemory": 1,
                "NtFsControlFile": 1,
                "NtGlobalFlag": 1,
                "NtLockFile": 1,
                "NtMakePermanentObject": 1,
                "NtMapViewOfSection": 1,
                "NtNotifyChangeDirectoryFile": 1,
                "NtOpenFile": 1,
                "NtOpenProcess": 1,
                "NtOpenProcessToken": 1,
                "NtOpenProcessTokenEx": 1,
                "NtOpenThread": 1,
                "NtOpenThreadToken": 1,
                "NtOpenThreadTokenEx": 1,
                "NtQueryDirectoryFile": 1,
                "NtQueryEaFile": 1,
                "NtQueryInformationAtom": 1,
                "NtQueryInformationFile": 1,
                "NtQueryInformationProcess": 1,
                "NtQueryInformationThread": 1,
                "NtQueryInformationToken": 1,
                "NtQueryQuotaInformationFile": 1,
                "NtQuerySecurityObject": 1,
                "NtQuerySystemInformation": 1,
                "NtQueryVolumeInformationFile": 1,
                "NtRequestPort": 1,
                "NtRequestWaitReplyPort": 1,
                "NtSetEaFile": 1,
                "NtSetEvent": 1,
                "NtSetInformationFile": 1,
                "NtSetInformationProcess": 1,
                "NtSetInformationThread": 1,
                "NtSetQuotaInformationFile": 1,
                "NtSetSecurityObject": 1,
                "NtSetVolumeInformationFile": 1,
                "NtShutdownSystem": 1,
                "NtTraceEvent": 1,
                "NtUnlockFile": 1,
                "NtVdmControl": 1,
                "NtWaitForSingleObject": 1,
                "ObAssignSecurity": 1,
                "ObCheckCreateObjectAccess": 1,
                "ObCheckObjectAccess": 1,
                "ObCloseHandle": 1,
                "ObCreateObject": 1,
                "ObCreateObjectType": 1,
                "ObDereferenceObject": 1,
                "ObDereferenceSecurityDescriptor": 1,
                "ObFindHandleForObject": 1,
                "ObGetObjectSecurity": 1,
                "ObInsertObject": 1,
                "ObIsDosDeviceLocallyMapped": 1,
                "ObLogSecurityDescriptor": 1,
                "ObMakeTemporaryObject": 1,
                "ObOpenObjectByName": 1,
                "ObOpenObjectByPointer": 1,
                "ObQueryNameString": 1,
                "ObQueryObjectAuditingByHandle": 1,
                "ObReferenceObjectByName": 1,
                "ObReferenceObjectByPointer": 1,
                "ObReferenceSecurityDescriptor": 1,
                "ObReleaseObjectSecurity": 1,
                "ObSetHandleAttributes": 1,
                "ObSetSecurityDescriptorInfo": 1,
                "ObSetSecurityObjectByPointer": 1,
                "ObfDereferenceObject": 1,
                "ObfReferenceObject": 1,
                "PfxFindPrefix": 1,
                "PfxInitialize": 1,
                "PfxInsertPrefix": 1,
                "PfxRemovePrefix": 1,
                "PoCallDriver": 1,
                "PoCancelDeviceNotify": 1,
                "PoQueueShutdownWorkItem": 1,
                "PoRegisterDeviceForIdleDetection": 1,
                "PoRegisterDeviceNotify": 1,
                "PoRegisterSystemState": 1,
                "PoRequestPowerIrp": 1,
                "PoRequestShutdownEvent": 1,
                "PoSetHiberRange": 1,
                "PoSetPowerState": 1,
                "PoSetSystemState": 1,
                "PoShutdownBugCheck": 1,
                "PoStartNextPowerIrp": 1,
                "PoUnregisterSystemState": 1,
                "ProbeForRead": 1,
                "ProbeForWrite": 1,
                "PsAssignImpersonationToken": 1,
                "PsChargePoolQuota": 1,
                "PsChargeProcessNonPagedPoolQuota": 1,
                "PsChargeProcessPagedPoolQuota": 1,
                "PsChargeProcessPoolQuota": 1,
                "PsCreateSystemProcess": 1,
                "PsCreateSystemThread": 1,
                "PsDereferenceImpersonationToken": 1,
                "PsDereferencePrimaryToken": 1,
                "PsDisableImpersonation": 1,
                "PsEstablishWin32Callouts": 1,
                "PsGetContextThread": 1,
                "PsGetCurrentProcess": 1,
                "PsGetCurrentProcessId": 1,
                "PsGetCurrentProcessSessionId": 1,
                "PsGetCurrentThread": 1,
                "PsGetCurrentThreadId": 1,
                "PsGetCurrentThreadPreviousMode": 1,
                "PsGetCurrentThreadStackBase": 1,
                "PsGetCurrentThreadStackLimit": 1,
                "PsGetJobLock": 1,
                "PsGetJobSessionId": 1,
                "PsGetJobUIRestrictionsClass": 1,
                "PsGetProcessCreateTimeQuadPart": 1,
                "PsGetProcessDebugPort": 1,
                "PsGetProcessExitProcessCalled": 1,
                "PsGetProcessExitStatus": 1,
                "PsGetProcessExitTime": 1,
                "PsGetProcessId": 1,
                "PsGetProcessImageFileName": 1,
                "PsGetProcessInheritedFromUniqueProcessId": 1,
                "PsGetProcessJob": 1,
                "PsGetProcessPeb": 1,
                "PsGetProcessPriorityClass": 1,
                "PsGetProcessSectionBaseAddress": 1,
                "PsGetProcessSecurityPort": 1,
                "PsGetProcessSessionId": 1,
                "PsGetProcessWin32Process": 1,
                "PsGetProcessWin32WindowStation": 1,
                "PsGetThreadFreezeCount": 1,
                "PsGetThreadHardErrorsAreDisabled": 1,
                "PsGetThreadId": 1,
                "PsGetThreadProcess": 1,
                "PsGetThreadProcessId": 1,
                "PsGetThreadSessionId": 1,
                "PsGetThreadTeb": 1,
                "PsGetThreadWin32Thread": 1,
                "PsGetVersion": 1,
                "PsImpersonateClient": 1,
                "PsInitialSystemProcess": 1,
                "PsIsProcessBeingDebugged": 1,
                "PsIsSystemThread": 1,
                "PsIsThreadImpersonating": 1,
                "PsIsThreadTerminating": 1,
                "PsJobType": 1,
                "PsLookupProcessByProcessId": 1,
                "PsLookupProcessThreadByCid": 1,
                "PsLookupThreadByThreadId": 1,
                "PsProcessType": 1,
                "PsReferenceImpersonationToken": 1,
                "PsReferencePrimaryToken": 1,
                "PsRemoveCreateThreadNotifyRoutine": 1,
                "PsRemoveLoadImageNotifyRoutine": 1,
                "PsRestoreImpersonation": 1,
                "PsReturnPoolQuota": 1,
                "PsReturnProcessNonPagedPoolQuota": 1,
                "PsReturnProcessPagedPoolQuota": 1,
                "PsRevertThreadToSelf": 1,
                "PsRevertToSelf": 1,
                "PsSetContextThread": 1,
                "PsSetCreateProcessNotifyRoutine": 1,
                "PsSetCreateThreadNotifyRoutine": 1,
                "PsSetJobUIRestrictionsClass": 1,
                "PsSetLegoNotifyRoutine": 1,
                "PsSetLoadImageNotifyRoutine": 1,
                "PsSetProcessPriorityByClass": 1,
                "PsSetProcessPriorityClass": 1,
                "PsSetProcessSecurityPort": 1,
                "PsSetProcessWin32Process": 1,
                "PsSetProcessWindowStation": 1,
                "PsSetThreadHardErrorsAreDisabled": 1,
                "PsSetThreadWin32Thread": 1,
                "PsTerminateSystemThread": 1,
                "PsThreadType": 1,
                "READ_REGISTER_BUFFER_UCHAR": 1,
                "READ_REGISTER_BUFFER_ULONG": 1,
                "READ_REGISTER_BUFFER_USHORT": 1,
                "READ_REGISTER_UCHAR": 1,
                "READ_REGISTER_ULONG": 1,
                "READ_REGISTER_USHORT": 1,
                "RtlAbsoluteToSelfRelativeSD": 1,
                "RtlAddAccessAllowedAce": 1,
                "RtlAddAccessAllowedAceEx": 1,
                "RtlAddAce": 1,
                "RtlAddAtomToAtomTable": 1,
                "RtlAddRange": 1,
                "RtlAllocateHeap": 1,
                "RtlAnsiCharToUnicodeChar": 1,
                "RtlAnsiStringToUnicodeSize": 1,
                "RtlAnsiStringToUnicodeString": 1,
                "RtlAppendAsciizToString": 1,
                "RtlAppendStringToString": 1,
                "RtlAppendUnicodeStringToString": 1,
                "RtlAppendUnicodeToString": 1,
                "RtlAreAllAccessesGranted": 1,
                "RtlAreAnyAccessesGranted": 1,
                "RtlAreBitsClear": 1,
                "RtlAreBitsSet": 1,
                "RtlAssert": 1,
                "RtlCaptureContext": 1,
                "RtlCaptureStackBackTrace": 1,
                "RtlCharToInteger": 1,
                "RtlCheckRegistryKey": 1,
                "RtlClearAllBits": 1,
                "RtlClearBit": 1,
                "RtlClearBits": 1,
                "RtlCompareMemory": 1,
                "RtlCompareMemoryUlong": 1,
                "RtlCompareString": 1,
                "RtlCompareUnicodeString": 1,
                "RtlCompressBuffer": 1,
                "RtlCompressChunks": 1,
                "RtlConvertLongToLargeInteger": 1,
                "RtlConvertSidToUnicodeString": 1,
                "RtlConvertUlongToLargeInteger": 1,
                "RtlCopyLuid": 1,
                "RtlCopyRangeList": 1,
                "RtlCopySid": 1,
                "RtlCopyString": 1,
                "RtlCopyUnicodeString": 1,
                "RtlCreateAcl": 1,
                "RtlCreateAtomTable": 1,
                "RtlCreateHeap": 1,
                "RtlCreateRegistryKey": 1,
                "RtlCreateSecurityDescriptor": 1,
                "RtlCreateSystemVolumeInformationFolder": 1,
                "RtlCreateUnicodeString": 1,
                "RtlCustomCPToUnicodeN": 1,
                "RtlDecompressBuffer": 1,
                "RtlDecompressChunks": 1,
                "RtlDecompressFragment": 1,
                "RtlDelete": 1,
                "RtlDeleteAce": 1,
                "RtlDeleteAtomFromAtomTable": 1,
                "RtlDeleteElementGenericTable": 1,
                "RtlDeleteElementGenericTableAvl": 1,
                "RtlDeleteNoSplay": 1,
                "RtlDeleteOwnersRanges": 1,
                "RtlDeleteRange": 1,
                "RtlDeleteRegistryValue": 1,
                "RtlDescribeChunk": 1,
                "RtlDestroyAtomTable": 1,
                "RtlDestroyHeap": 1,
                "RtlDowncaseUnicodeString": 1,
                "RtlEmptyAtomTable": 1,
                "RtlEnlargedIntegerMultiply": 1,
                "RtlEnlargedUnsignedDivide": 1,
                "RtlEnlargedUnsignedMultiply": 1,
                "RtlEnumerateGenericTable": 1,
                "RtlEnumerateGenericTableAvl": 1,
                "RtlEnumerateGenericTableLikeADirectory": 1,
                "RtlEnumerateGenericTableWithoutSplaying": 1,
                "RtlEnumerateGenericTableWithoutSplayingAvl": 1,
                "RtlEqualLuid": 1,
                "RtlEqualSid": 1,
                "RtlEqualString": 1,
                "RtlEqualUnicodeString": 1,
                "RtlExtendedIntegerMultiply": 1,
                "RtlExtendedLargeIntegerDivide": 1,
                "RtlExtendedMagicDivide": 1,
                "RtlFillMemory": 1,
                "RtlFillMemoryUlong": 1,
                "RtlFindClearBits": 1,
                "RtlFindClearBitsAndSet": 1,
                "RtlFindClearRuns": 1,
                "RtlFindFirstRunClear": 1,
                "RtlFindLastBackwardRunClear": 1,
                "RtlFindLeastSignificantBit": 1,
                "RtlFindLongestRunClear": 1,
                "RtlFindMessage": 1,
                "RtlFindMostSignificantBit": 1,
                "RtlFindNextForwardRunClear": 1,
                "RtlFindRange": 1,
                "RtlFindSetBits": 1,
                "RtlFindSetBitsAndClear": 1,
                "RtlFindUnicodePrefix": 1,
                "RtlFormatCurrentUserKeyPath": 1,
                "RtlFreeAnsiString": 1,
                "RtlFreeHeap": 1,
                "RtlFreeOemString": 1,
                "RtlFreeRangeList": 1,
                "RtlFreeUnicodeString": 1,
                "RtlGUIDFromString": 1,
                "RtlGenerate8dot3Name": 1,
                "RtlGetAce": 1,
                "RtlGetCallersAddress": 1,
                "RtlGetCompressionWorkSpaceSize": 1,
                "RtlGetDaclSecurityDescriptor": 1,
                "RtlGetDefaultCodePage": 1,
                "RtlGetElementGenericTable": 1,
                "RtlGetElementGenericTableAvl": 1,
                "RtlGetFirstRange": 1,
                "RtlGetGroupSecurityDescriptor": 1,
                "RtlGetNextRange": 1,
                "RtlGetNtGlobalFlags": 1,
                "RtlGetOwnerSecurityDescriptor": 1,
                "RtlGetSaclSecurityDescriptor": 1,
                "RtlGetSetBootStatusData": 1,
                "RtlGetVersion": 1,
                "RtlHashUnicodeString": 1,
                "RtlImageDirectoryEntryToData": 1,
                "RtlImageNtHeader": 1,
                "RtlInitAnsiString": 1,
                "RtlInitCodePageTable": 1,
                "RtlInitString": 1,
                "RtlInitUnicodeString": 1,
                "RtlInitializeBitMap": 1,
                "RtlInitializeGenericTable": 1,
                "RtlInitializeGenericTableAvl": 1,
                "RtlInitializeRangeList": 1,
                "RtlInitializeSid": 1,
                "RtlInitializeUnicodePrefix": 1,
                "RtlInsertElementGenericTable": 1,
                "RtlInsertElementGenericTableAvl": 1,
                "RtlInsertElementGenericTableFull": 1,
                "RtlInsertElementGenericTableFullAvl": 1,
                "RtlInsertUnicodePrefix": 1,
                "RtlInt64ToUnicodeString": 1,
                "RtlIntegerToChar": 1,
                "RtlIntegerToUnicode": 1,
                "RtlIntegerToUnicodeString": 1,
                "RtlInvertRangeList": 1,
                "RtlIpv4AddressToStringA": 1,
                "RtlIpv4AddressToStringExA": 1,
                "RtlIpv4AddressToStringExW": 1,
                "RtlIpv4AddressToStringW": 1,
                "RtlIpv4StringToAddressA": 1,
                "RtlIpv4StringToAddressExA": 1,
                "RtlIpv4StringToAddressExW": 1,
                "RtlIpv4StringToAddressW": 1,
                "RtlIpv6AddressToStringA": 1,
                "RtlIpv6AddressToStringExA": 1,
                "RtlIpv6AddressToStringExW": 1,
                "RtlIpv6AddressToStringW": 1,
                "RtlIpv6StringToAddressA": 1,
                "RtlIpv6StringToAddressExA": 1,
                "RtlIpv6StringToAddressExW": 1,
                "RtlIpv6StringToAddressW": 1,
                "RtlIsGenericTableEmpty": 1,
                "RtlIsGenericTableEmptyAvl": 1,
                "RtlIsNameLegalDOS8Dot3": 1,
                "RtlIsRangeAvailable": 1,
                "RtlIsValidOemCharacter": 1,
                "RtlLargeIntegerAdd": 1,
                "RtlLargeIntegerArithmeticShift": 1,
                "RtlLargeIntegerDivide": 1,
                "RtlLargeIntegerNegate": 1,
                "RtlLargeIntegerShiftLeft": 1,
                "RtlLargeIntegerShiftRight": 1,
                "RtlLargeIntegerSubtract": 1,
                "RtlLengthRequiredSid": 1,
                "RtlLengthSecurityDescriptor": 1,
                "RtlLengthSid": 1,
                "RtlLockBootStatusData": 1,
                "RtlLookupAtomInAtomTable": 1,
                "RtlLookupElementGenericTable": 1,
                "RtlLookupElementGenericTableAvl": 1,
                "RtlLookupElementGenericTableFull": 1,
                "RtlLookupElementGenericTableFullAvl": 1,
                "RtlMapGenericMask": 1,
                "RtlMapSecurityErrorToNtStatus": 1,
                "RtlMergeRangeLists": 1,
                "RtlMoveMemory": 1,
                "RtlMultiByteToUnicodeN": 1,
                "RtlMultiByteToUnicodeSize": 1,
                "RtlNextUnicodePrefix": 1,
                "RtlNtStatusToDosError": 1,
                "RtlNtStatusToDosErrorNoTeb": 1,
                "RtlNumberGenericTableElements": 1,
                "RtlNumberGenericTableElementsAvl": 1,
                "RtlNumberOfClearBits": 1,
                "RtlNumberOfSetBits": 1,
                "RtlOemStringToCountedUnicodeString": 1,
                "RtlOemStringToUnicodeSize": 1,
                "RtlOemStringToUnicodeString": 1,
                "RtlOemToUnicodeN": 1,
                "RtlPinAtomInAtomTable": 1,
                "RtlPrefetchMemoryNonTemporal": 1,
                "RtlPrefixString": 1,
                "RtlPrefixUnicodeString": 1,
                "RtlQueryAtomInAtomTable": 1,
                "RtlQueryRegistryValues": 1,
                "RtlQueryTimeZoneInformation": 1,
                "RtlRaiseException": 1,
                "RtlRandom": 1,
                "RtlRandomEx": 1,
                "RtlRealPredecessor": 1,
                "RtlRealSuccessor": 1,
                "RtlRemoveUnicodePrefix": 1,
                "RtlReserveChunk": 1,
                "RtlSecondsSince1970ToTime": 1,
                "RtlSecondsSince1980ToTime": 1,
                "RtlSelfRelativeToAbsoluteSD": 1,
                "RtlSelfRelativeToAbsoluteSD2": 1,
                "RtlSetAllBits": 1,
                "RtlSetBit": 1,
                "RtlSetBits": 1,
                "RtlSetDaclSecurityDescriptor": 1,
                "RtlSetGroupSecurityDescriptor": 1,
                "RtlSetOwnerSecurityDescriptor": 1,
                "RtlSetSaclSecurityDescriptor": 1,
                "RtlSetTimeZoneInformation": 1,
                "RtlSizeHeap": 1,
                "RtlSplay": 1,
                "RtlStringFromGUID": 1,
                "RtlSubAuthorityCountSid": 1,
                "RtlSubAuthoritySid": 1,
                "RtlSubtreePredecessor": 1,
                "RtlSubtreeSuccessor": 1,
                "RtlTestBit": 1,
                "RtlTimeFieldsToTime": 1,
                "RtlTimeToElapsedTimeFields": 1,
                "RtlTimeToSecondsSince1970": 1,
                "RtlTimeToSecondsSince1980": 1,
                "RtlTimeToTimeFields": 1,
                "RtlTraceDatabaseAdd": 1,
                "RtlTraceDatabaseCreate": 1,
                "RtlTraceDatabaseDestroy": 1,
                "RtlTraceDatabaseEnumerate": 1,
                "RtlTraceDatabaseFind": 1,
                "RtlTraceDatabaseLock": 1,
                "RtlTraceDatabaseUnlock": 1,
                "RtlTraceDatabaseValidate": 1,
                "RtlUlongByteSwap": 1,
                "RtlUlonglongByteSwap": 1,
                "RtlUnicodeStringToAnsiSize": 1,
                "RtlUnicodeStringToAnsiString": 1,
                "RtlUnicodeStringToCountedOemString": 1,
                "RtlUnicodeStringToInteger": 1,
                "RtlUnicodeStringToOemSize": 1,
                "RtlUnicodeStringToOemString": 1,
                "RtlUnicodeToCustomCPN": 1,
                "RtlUnicodeToMultiByteN": 1,
                "RtlUnicodeToMultiByteSize": 1,
                "RtlUnicodeToOemN": 1,
                "RtlUnlockBootStatusData": 1,
                "RtlUnwind": 1,
                "RtlUpcaseUnicodeChar": 1,
                "RtlUpcaseUnicodeString": 1,
                "RtlUpcaseUnicodeStringToAnsiString": 1,
                "RtlUpcaseUnicodeStringToCountedOemString": 1,
                "RtlUpcaseUnicodeStringToOemString": 1,
                "RtlUpcaseUnicodeToCustomCPN": 1,
                "RtlUpcaseUnicodeToMultiByteN": 1,
                "RtlUpcaseUnicodeToOemN": 1,
                "RtlUpperChar": 1,
                "RtlUpperString": 1,
                "RtlUshortByteSwap": 1,
                "RtlValidRelativeSecurityDescriptor": 1,
                "RtlValidSecurityDescriptor": 1,
                "RtlValidSid": 1,
                "RtlVerifyVersionInfo": 1,
                "RtlVolumeDeviceToDosName": 1,
                "RtlWalkFrameChain": 1,
                "RtlWriteRegistryValue": 1,
                "RtlZeroHeap": 1,
                "RtlZeroMemory": 1,
                "RtlxAnsiStringToUnicodeSize": 1,
                "RtlxOemStringToUnicodeSize": 1,
                "RtlxUnicodeStringToAnsiSize": 1,
                "RtlxUnicodeStringToOemSize": 1,
                "SeAccessCheck": 1,
                "SeAppendPrivileges": 1,
                "SeAssignSecurity": 1,
                "SeAssignSecurityEx": 1,
                "SeAuditHardLinkCreation": 1,
                "SeAuditingFileEvents": 1,
                "SeAuditingFileEventsWithContext": 1,
                "SeAuditingFileOrGlobalEvents": 1,
                "SeAuditingHardLinkEvents": 1,
                "SeAuditingHardLinkEventsWithContext": 1,
                "SeCaptureSecurityDescriptor": 1,
                "SeCaptureSubjectContext": 1,
                "SeCloseObjectAuditAlarm": 1,
                "SeCreateAccessState": 1,
                "SeCreateClientSecurity": 1,
                "SeCreateClientSecurityFromSubjectContext": 1,
                "SeDeassignSecurity": 1,
                "SeDeleteAccessState": 1,
                "SeDeleteObjectAuditAlarm": 1,
                "SeExports": 1,
                "SeFilterToken": 1,
                "SeFreePrivileges": 1,
                "SeImpersonateClient": 1,
                "SeImpersonateClientEx": 1,
                "SeLockSubjectContext": 1,
                "SeMarkLogonSessionForTerminationNotification": 1,
                "SeOpenObjectAuditAlarm": 1,
                "SeOpenObjectForDeleteAuditAlarm": 1,
                "SePrivilegeCheck": 1,
                "SePrivilegeObjectAuditAlarm": 1,
                "SePublicDefaultDacl": 1,
                "SeQueryAuthenticationIdToken": 1,
                "SeQueryInformationToken": 1,
                "SeQuerySecurityDescriptorInfo": 1,
                "SeQuerySessionIdToken": 1,
                "SeRegisterLogonSessionTerminatedRoutine": 1,
                "SeReleaseSecurityDescriptor": 1,
                "SeReleaseSubjectContext": 1,
                "SeSetAccessStateGenericMapping": 1,
                "SeSetSecurityDescriptorInfo": 1,
                "SeSetSecurityDescriptorInfoEx": 1,
                "SeSinglePrivilegeCheck": 1,
                "SeSystemDefaultDacl": 1,
                "SeTokenImpersonationLevel": 1,
                "SeTokenIsAdmin": 1,
                "SeTokenIsRestricted": 1,
                "SeTokenIsWriteRestricted": 1,
                "SeTokenObjectType": 1,
                "SeTokenType": 1,
                "SeUnlockSubjectContext": 1,
                "SeUnregisterLogonSessionTerminatedRoutine": 1,
                "SeValidSecurityDescriptor": 1,
                "VerSetConditionMask": 1,
                "VfFailDeviceNode": 1,
                "VfFailDriver": 1,
                "VfFailSystemBIOS": 1,
                "VfIsVerificationEnabled": 1,
                "WRITE_REGISTER_BUFFER_UCHAR": 1,
                "WRITE_REGISTER_BUFFER_ULONG": 1,
                "WRITE_REGISTER_BUFFER_USHORT": 1,
                "WRITE_REGISTER_UCHAR": 1,
                "WRITE_REGISTER_ULONG": 1,
                "WRITE_REGISTER_USHORT": 1,
                "WmiFlushTrace": 1,
                "WmiGetClock": 1,
                "WmiQueryTrace": 1,
                "WmiQueryTraceInformation": 1,
                "WmiStartTrace": 1,
                "WmiStopTrace": 1,
                "WmiTraceMessage": 1,
                "WmiTraceMessageVa": 1,
                "WmiUpdateTrace": 1,
                "XIPDispatch": 1,
                "ZwAccessCheckAndAuditAlarm": 1,
                "ZwAddBootEntry": 1,
                "ZwAdjustPrivilegesToken": 1,
                "ZwAlertThread": 1,
                "ZwAllocateVirtualMemory": 1,
                "ZwAssignProcessToJobObject": 1,
                "ZwCancelIoFile": 1,
                "ZwCancelTimer": 1,
                "ZwClearEvent": 1,
                "ZwClose": 1,
                "ZwCloseObjectAuditAlarm": 1,
                "ZwConnectPort": 1,
                "ZwCreateDirectoryObject": 1,
                "ZwCreateEvent": 1,
                "ZwCreateFile": 1,
                "ZwCreateJobObject": 1,
                "ZwCreateKey": 1,
                "ZwCreateSection": 1,
                "ZwCreateSymbolicLinkObject": 1,
                "ZwCreateTimer": 1,
                "ZwDeleteBootEntry": 1,
                "ZwDeleteFile": 1,
                "ZwDeleteKey": 1,
                "ZwDeleteValueKey": 1,
                "ZwDeviceIoControlFile": 1,
                "ZwDisplayString": 1,
                "ZwDuplicateObject": 1,
                "ZwDuplicateToken": 1,
                "ZwEnumerateBootEntries": 1,
                "ZwEnumerateKey": 1,
                "ZwEnumerateValueKey": 1,
                "ZwFlushInstructionCache": 1,
                "ZwFlushKey": 1,
                "ZwFlushVirtualMemory": 1,
                "ZwFreeVirtualMemory": 1,
                "ZwFsControlFile": 1,
                "ZwInitiatePowerAction": 1,
                "ZwIsProcessInJob": 1,
                "ZwLoadDriver": 1,
                "ZwLoadKey": 1,
                "ZwMakeTemporaryObject": 1,
                "ZwMapViewOfSection": 1,
                "ZwNotifyChangeKey": 1,
                "ZwOpenDirectoryObject": 1,
                "ZwOpenEvent": 1,
                "ZwOpenFile": 1,
                "ZwOpenJobObject": 1,
                "ZwOpenKey": 1,
                "ZwOpenProcess": 1,
                "ZwOpenProcessToken": 1,
                "ZwOpenProcessTokenEx": 1,
                "ZwOpenSection": 1,
                "ZwOpenSymbolicLinkObject": 1,
                "ZwOpenThread": 1,
                "ZwOpenThreadToken": 1,
                "ZwOpenThreadTokenEx": 1,
                "ZwOpenTimer": 1,
                "ZwPowerInformation": 1,
                "ZwPulseEvent": 1,
                "ZwQueryBootEntryOrder": 1,
                "ZwQueryBootOptions": 1,
                "ZwQueryDefaultLocale": 1,
                "ZwQueryDefaultUILanguage": 1,
                "ZwQueryDirectoryFile": 1,
                "ZwQueryDirectoryObject": 1,
                "ZwQueryEaFile": 1,
                "ZwQueryFullAttributesFile": 1,
                "ZwQueryInformationFile": 1,
                "ZwQueryInformationJobObject": 1,
                "ZwQueryInformationProcess": 1,
                "ZwQueryInformationThread": 1,
                "ZwQueryInformationToken": 1,
                "ZwQueryInstallUILanguage": 1,
                "ZwQueryKey": 1,
                "ZwQueryObject": 1,
                "ZwQuerySection": 1,
                "ZwQuerySecurityObject": 1,
                "ZwQuerySymbolicLinkObject": 1,
                "ZwQuerySystemInformation": 1,
                "ZwQueryValueKey": 1,
                "ZwQueryVolumeInformationFile": 1,
                "ZwReadFile": 1,
                "ZwReplaceKey": 1,
                "ZwRequestWaitReplyPort": 1,
                "ZwResetEvent": 1,
                "ZwRestoreKey": 1,
                "ZwSaveKey": 1,
                "ZwSaveKeyEx": 1,
                "ZwSetBootEntryOrder": 1,
                "ZwSetBootOptions": 1,
                "ZwSetDefaultLocale": 1,
                "ZwSetDefaultUILanguage": 1,
                "ZwSetEaFile": 1,
                "ZwSetEvent": 1,
                "ZwSetInformationFile": 1,
                "ZwSetInformationJobObject": 1,
                "ZwSetInformationObject": 1,
                "ZwSetInformationProcess": 1,
                "ZwSetInformationThread": 1,
                "ZwSetSecurityObject": 1,
                "ZwSetSystemInformation": 1,
                "ZwSetSystemTime": 1,
                "ZwSetTimer": 1,
                "ZwSetValueKey": 1,
                "ZwSetVolumeInformationFile": 1,
                "ZwTerminateJobObject": 1,
                "ZwTerminateProcess": 1,
                "ZwTranslateFilePath": 1,
                "ZwUnloadDriver": 1,
                "ZwUnloadKey": 1,
                "ZwUnmapViewOfSection": 1,
                "ZwWaitForMultipleObjects": 1,
                "ZwWaitForSingleObject": 1,
                "ZwWriteFile": 1,
                "ZwYieldExecution": 1,
                "_CIcos": 1,
                "_CIsin": 1,
                "_CIsqrt": 1,
                "_abnormal_termination": 1,
                "_alldiv": 1,
                "_alldvrm": 1,
                "_allmul": 1,
                "_alloca_probe": 1,
                "_allrem": 1,
                "_allshl": 1,
                "_allshr": 1,
                "_aulldiv": 1,
                "_aulldvrm": 1,
                "_aullrem": 1,
                "_aullshr": 1,
                "_except_handler2": 1,
                "_except_handler3": 1,
                "_global_unwind2": 1,
                "_itoa": 1,
                "_itow": 1,
                "_local_unwind2": 1,
                "_purecall": 1,
                "_snprintf": 1,
                "_snwprintf": 1,
                "_stricmp": 1,
                "_strlwr": 1,
                "_strnicmp": 1,
                "_strnset": 1,
                "_strrev": 1,
                "_strset": 1,
                "_strupr": 1,
                "_vsnprintf": 1,
                "_vsnwprintf": 1,
                "_wcsicmp": 1,
                "_wcslwr": 1,
                "_wcsnicmp": 1,
                "_wcsnset": 1,
                "_wcsrev": 1,
                "_wcsupr": 1,
                "isdigit": 1,
                "islower": 1,
                "isprint": 1,
                "isspace": 1,
                "isupper": 1,
                "isxdigit": 1,
                "mbstowcs": 1,
                "mbtowc": 1,
                "memchr": 1,
                "memcpy": 1,
                "memmove": 1,
                "memset": 1,
                "qsort": 1,
                "sprintf": 1,
                "srand": 1,
                "strcat": 1,
                "strchr": 1,
                "strcmp": 1,
                "strcpy": 1,
                "strlen": 1,
                "strncat": 1,
                "strncmp": 1,
                "strncpy": 1,
                "strrchr": 1,
                "strspn": 1,
                "strstr": 1,
                "swprintf": 1,
                "tolower": 1,
                "toupper": 1,
                "towlower": 1,
                "towupper": 1,
                "vDbgPrintEx": 1,
                "vDbgPrintExWithPrefix": 1,
                "vsprintf": 1,
                "wcscat": 1,
                "wcschr": 1,
                "wcscmp": 1,
                "wcscpy": 1,
                "wcscspn": 1,
                "wcslen": 1,
                "wcsncat": 1,
                "wcsncmp": 1,
                "wcsncpy": 1,
                "wcsrchr": 1,
                "wcsspn": 1,
                "wcsstr": 1,
                "wcstombs": 1,
                "wctomb": 1,
                ")#_ck": 1,
                "*MdI.": 1,
                "uaUyA": 1,
                "mario": 1,
                "DEVICE FAILURE": 1,
                "Pvoid": 1,
                "Ulong": 1,
                "Status": 1,
                "DevObj": 1,
                "Snapshot": 1,
                "Routine": 1,
                "IRP_MJ_PNP": 1,
                "IRP_MJ_SET_QUOTA": 1,
                "IRP_MJ_QUERY_QUOTA": 1,
                "IRP_MJ_DEVICE_CHANGE": 1,
                "IRP_MJ_SYSTEM_CONTROL": 1,
                "IRP_MJ_POWER": 1,
                "IRP_MJ_SET_SECURITY": 1,
                "IRP_MJ_QUERY_SECURITY": 1,
                "IRP_MJ_CREATE_MAILSLOT": 1,
                "IRP_MJ_CLEANUP": 1,
                "IRP_MJ_LOCK_CONTROL": 1,
                "IRP_MJ_SHUTDOWN": 1,
                "IRP_MJ_INTERNAL_DEVICE_CONTROL": 1,
                "IRP_MJ_DEVICE_CONTROL": 1,
                "IRP_MJ_FILE_SYSTEM_CONTROL": 1,
                "IRP_MJ_DIRECTORY_CONTROL": 1,
                "IRP_MJ_SET_VOLUME_INFORMATION": 1,
                "IRP_MJ_QUERY_VOLUME_INFORMATION": 1,
                "IRP_MJ_FLUSH_BUFFERS": 1,
                "IRP_MJ_SET_EA": 1,
                "IRP_MJ_QUERY_EA": 1,
                "IRP_MJ_SET_INFORMATION": 1,
                "IRP_MJ_QUERY_INFORMATION": 1,
                "IRP_MJ_WRITE": 1,
                "IRP_MJ_READ": 1,
                "IRP_MJ_CLOSE": 1,
                "IRP_MJ_CREATE_NAMED_PIPE": 1,
                "IRP_MJ_CREATE": 1,
                "IRP_MN_EXECUTE_METHOD": 1,
                "IRP_MN_REGINFO": 1,
                "IRP_MN_DISABLE_COLLECTION": 1,
                "IRP_MN_ENABLE_COLLECTION": 1,
                "IRP_MN_DISABLE_EVENTS": 1,
                "IRP_MN_ENABLE_EVENTS": 1,
                "IRP_MN_CHANGE_SINGLE_ITEM": 1,
                "IRP_MN_CHANGE_SINGLE_INSTANCE": 1,
                "IRP_MN_QUERY_SINGLE_INSTANCE": 1,
                "IRP_MN_QUERY_ALL_DATA": 1,
                "PowerActionWarmEject": 1,
                "PowerActionShutdownOff": 1,
                "PowerActionShutdownReset": 1,
                "PowerActionShutdown": 1,
                "PowerActionHibernate": 1,
                "PowerActionSleep": 1,
                "PowerActionReserved": 1,
                "PowerActionNone": 1,
                "PowerDeviceD3": 1,
                "PowerDeviceD2": 1,
                "PowerDeviceD1": 1,
                "PowerDeviceD0": 1,
                "PowerDeviceUnspecified": 1,
                "PowerSystemShutdown.S5": 1,
                "PowerSystemHibernate.S4": 1,
                "PowerSystemSleeping3.S3": 1,
                "PowerSystemSleeping2.S2": 1,
                "PowerSystemSleeping1.S1": 1,
                "PowerSystemWorking.S0": 1,
                "PowerSystemUnspecified": 1,
                "IRP_MN_QUERY_POWER": 1,
                "IRP_MN_SET_POWER": 1,
                "IRP_MN_POWER_SEQUENCE": 1,
                "IRP_MN_WAIT_WAKE": 1,
                "IRP_MN_QUERY_LEGACY_BUS_INFORMATION": 1,
                "IRP_MN_SURPRISE_REMOVAL": 1,
                "IRP_MN_DEVICE_USAGE_NOTIFICATION": 1,
                "IRP_MN_QUERY_BUS_INFORMATION": 1,
                "IRP_MN_QUERY_PNP_DEVICE_STATE": 1,
                "IRP_MN_QUERY_ID": 1,
                "IRP_MN_SET_LOCK": 1,
                "IRP_MN_EJECT": 1,
                "IRP_MN_WRITE_CONFIG": 1,
                "IRP_MN_READ_CONFIG": 1,
                "INVALID_IRP_CODE": 1,
                "IRP_MN_FILTER_RESOURCE_REQUIREMENTS": 1,
                "IRP_MN_QUERY_DEVICE_TEXT": 1,
                "IRP_MN_QUERY_RESOURCE_REQUIREMENTS": 1,
                "IRP_MN_QUERY_RESOURCES": 1,
                "IRP_MN_QUERY_CAPABILITIES": 1,
                "IRP_MN_QUERY_INTERFACE": 1,
                "IRP_MN_QUERY_DEVICE_RELATIONS": 1,
                "IRP_MN_CANCEL_STOP_DEVICE": 1,
                "IRP_MN_QUERY_STOP_DEVICE": 1,
                "IRP_MN_STOP_DEVICE": 1,
                "IRP_MN_CANCEL_REMOVE_DEVICE": 1,
                "IRP_MN_REMOVE_DEVICE - ": 1,
                "IRP_MN_QUERY_REMOVE_DEVICE": 1,
                "IRP_MN_START_DEVICE": 1,
                "A driver has passed an invalid device object to a function that requires a PDO (DevObj = %DevObj).": 1,
                "A driver has returned STATUS_PENDING but did not mark the IRP pending via a call to IoMarkIrpPending (Irp = %Snapshot).": 1,
                "A driver has succeeded IRP_MJ_PNP.IRP_MN_QUERY_DEVICE_RELATIONS(TargetRelations) but didn't properly fill out the request or forward the IRP to the underlying hardware stack (DevObj = %DevObj).": 1,
                "A driver has mistakenly called a file I/O function at an IRQL other than PASSIVE_LEVEL.": 1,
                "A driver has enumerated two child PDO's that returned identical Device ID's (DevObj1 = %DevObj1 , DevObj2 = %DevObj2 ).": 1,
                "A driver has added a device object that is not a PDO to a device relations query (Irp = %Irp, DevObj = %DevObj).": 1,
                "A driver has failed an IRP that cannot legally be failed IRP (Irp = %Irp).": 1,
                "A driver has failed to copy the DeviceType field from the device object it is attaching to (DevObj = %DevObj).": 1,
                "A driver has set both the DO_BUFFERED_IO and the DO_DIRECT_IO flags. These flags are mutually exclusive (DevObj = %DevObj).": 1,
                "A driver has not copied either the DO_BUFFERED_IO or the DO_DIRECT_IO flag from the device object it is attaching to (DevObj = %DevObj).": 1,
                "A driver has failed to clear the DO_DEVICE_INITIALIZING flag at the end of AddDevice (DevObj = %DevObj).": 1,
                "A driver has deleted it's device object during a surprise remove IRP (Irp = %Irp  DevObj = %DevObj).": 1,
                "A driver has detached it's device object during a surprise remove IRP (Irp = %Irp  DevObj = %DevObj).": 1,
                "A driver is attempting to delete a device object that has already been deleted via a prior call to IoDeleteDevice.": 1,
                "A driver has not inherited the DO_POWER_PAGABLE bit from the stack it has attached to (DevObj = %DevObj).": 1,
                "A driver has marked an IRP pending but didn't return STATUS_PENDING. (Irp = %Snapshot).": 1,
                "A driver has returned STATUS_PENDING but did not mark the IRP pending via a call to IoMarkIrpPending (Irp = %Irp).": 1,
                "A driver has completed an IRP without setting the CancelRoutine in the Irp to NULL (Irp = %Irp ).": 1,
                "A driver has forwarded an IRP at an IRQL that is illegal for this major code. (Irp = %Irp ).": 1,
                "The caller of IoCompleteRequest is completing an IRP that has never been forwarded via a call to IoCallDriver or PoCallDriver. This may be a bug. (Irp = %Irp ).": 1,
                "Caller of IoInitializeIrp has passed an IRP that was allocated with IoAllocateIrp. This is illegal, unneccessary, and negatively impacts performace in normal use. Check the documentation for IoReuseIrp if this IRP is being recycled.": 1,
                "A driver has sent an IRP that is restricted for system use only. (Irp = %Irp ).": 1,
                "The UI Number field of the query capabilities structure in a query capabilities IRP was not properly initialized to -1. (Irp = %Irp ).": 1,
                "The address field of the query capabilities structure in a query capabilities IRP was not properly initialized to -1. (Irp = %Irp ).": 1,
                "The size field of the query capabilities structure in a query capabilities IRP was not properly initialized. (Irp = %Irp ).": 1,
                "The version field of the query capabilities structure in a query capabilities IRP was not properly initialized. (Irp = %Irp ).": 1,
                "Caller has completed untouched IRP_MJ_POWER (instead of passing the irp down) or non-PDO has failed the irp using illegal value of STATUS_NOT_SUPPORTED. (Irp = %Irp ).": 1,
                "Caller has completed successful IRP_MJ_POWER instead of passing it down (Irp = %Irp ).": 1,
                "Caller has completed a IRP_MJ_POWER it didn't understand instead of passing it down (Irp = %Irp ).": 1,
                "Caller has completed untouched IRP_MJ_PNP (instead of passing the irp down) or non-PDO has failed the irp using illegal value of STATUS_NOT_SUPPORTED. (Irp = %Irp ).": 1,
                "Caller has completed successful IRP_MJ_PNP instead of passing it down (Irp = %Irp ).": 1,
                "Caller has completed a IRP_MJ_PNP it didn't understand instead of passing it down (Irp = %Irp ).": 1,
                "The code implementing the TargetDeviceRelation query has not called ObReferenceObject on the PDO (Irp = %Irp ).": 1,
                "PDO has forgotten to fill out the device relation list with the PDO for the TargetDeviceRelation query (Irp = %Irp )": 1,
                "PDO has not responded to a required IRP (Irp = %Irp )": 1,
                "A cancel routine has been set for an IRP that is currently being processed by drivers lower in the stack, possibly stomping their cancel routine (Irp = %Irp, Routine=%Routine ).": 1,
                "A driver's completion routine ( %Routine ) has not marked the IRP pending if the PendingReturned field was set in the IRP passed to it. This may cause the OS to hang, especially if an error is returned by the  stack. (Irp = %Irp )": 1,
                "IRP completion routines must be in nonpagable code, and this one is not: %Routine. (Irp = %Irp )": 1,
                "An IRP dispatch handler has returned without passing down or completing this Irp or someone forgot to return STATUS_PENDING. (Irp = %Snapshot ).": 1,
                "An IRP dispatch handler has returned a status that is illegal (0xFFFFFFFF). This is probably due to an uninitialized stack variable. Please do an ln on address %lx and file a bug. (Irp = %Snapshot )": 1,
                "An IRP dispatch handler ( %Routine ) has returned a status that is inconsistent with the Irp's IoStatus.Status field. ( Irp = %Snapshot - Irp->IoStatus.Status = %Status1 - returned = %Status2 )": 1,
                "An IRP dispatch handler for a bus filter has deleted it's device object, but the PDO is still present! Bus filters must clean up in FastIoDetach callbacks. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot": 1,
                "A Bus Filter's IRP dispatch handler has detached upon receiving a remove IRP when the PDO is still alive. Bus Filters must clean up in FastIoDetach callbacks. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot": 1,
                "An IRP dispatch handler for a PDO has deleted it's device object, but the hardware has not been reported as missing in a bus relations query. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot ": 1,
                "IRP_MJ_SYSTEM_CONTROL has been completed by someone other than the ProviderId. This IRP should either have been completed earlier or should have been passed down (Irp = %Irp ). The IRP was targetted at DeviceObject %DevObj": 1,
                "This driver has not filled out a dispatch routine for a required IRP major function (Irp = %Irp ).": 1,
                "An IRP dispatch handler has not properly deleted it's device object upon receiving a remove IRP. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot": 1,
                "An IRP dispatch handler has not properly detached from the stack below it upon receiving a remove IRP. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot": 1,
                "Caller has copied the Irp stack but not set a completion routine. This is inefficient, use IoSkipCurrentIrpStackLocation instead (Irp = %Irp ).": 1,
                "Driver has returned a suspicious status. This is probably due to an uninitiaized variable bug in the driver. (Irp = %Irp )": 1,
                "Previously set IRP_MJ_POWER status has been converted to STATUS_NOT_SUPPORTED. This failure status is reserved for use of the OS - drivers cannot fail a Power IRP with this value (Irp = %Irp ).": 1,
                "Non-successful non-STATUS_NOT_SUPPORTED IRP status for IRP_MJ_POWER is being passed down stack (Irp = %Irp ). Failed POWER IRPs must be completed.": 1,
                "The driver has responded to an IRP that is that is reserved for other device objects elsewhere in the stack. (Irp = %Irp )": 1,
                "The driver has not handled a required IRP. The driver must update the status of the IRP to indicate whether it's been handled or not. (Irp = %Irp ).": 1,
                "Previously set IRP_MJ_PNP status has been converted to STATUS_NOT_SUPPORTED. This failure status is reserved for use of the OS - drivers cannot fail a PnP IRP with this value. (Irp = %Irp ).": 1,
                "Non-successful non-STATUS_NOT_SUPPORTED IRP status for IRP_MJ_PNP is being passed down stack (Irp = %Irp ). Failed PNP IRPs must be completed.": 1,
                "Caller has changed the information field of an IRP it does not understand (Irp = %Irp ).": 1,
                "Caller has changed the status field of an IRP it does not understand (Irp = %Irp ).": 1,
                "Caller has trashed or has not properly copied IRP's stack (Irp = %Irp ).": 1,
                "Caller has forwarded an Irp while skipping a device object in the stack. The caller is probably sending IRPs to the PDO instead of to the device returned by IoAttachDeviceToDeviceStack (Irp = %Irp ).": 1,
                "Any WMI IRP must have status initialized to STATUS_NOT_SUPPORTED (Irp = %Irp ).": 1,
                "Any Power IRP must have status initialized to STATUS_NOT_SUPPORTED (Irp = %Irp ).": 1,
                "Any PNP IRP must have status initialized to STATUS_NOT_SUPPORTED (Irp = %Irp ).": 1,
                "Caller of IoInitializeIrp has passed an IRP that was allocated with IoAllocateIrp. This is illegal and unneccessary, and has caused a quota leak. Check the documentation for IoReuseIrp if this IRP is being recycled.": 1,
                "Caller of IoFreeIrp is freeing an IRP that is still enqueued against a thread! (Irp = %Irp )": 1,
                "Caller of IoFreeIrp is freeing an IRP that is still in use! (Irp = %Irp )": 1,
                "Caller of IoFreeIrp is freeing an IRP that is still in use! (Original Irp = %Irp1, Irp in usage is %Irp2 )": 1,
                "Caller is completing an IRP that is currently queued beneath it! The code handling IRPs returning STATUS_PENDING in this driver appears to be broken. (Irp = %Irp )": 1,
                "This IRP is about to run out of stack locations. Someone may have forwarded this IRP from another stack (Irp = %Irp ).": 1,
                "Caller has manually copied the stack and has inadvertantly copied the upper layer's completion routine. Please use IoCopyCurrentIrpStackLocationToNext. (Irp = %Irp ).": 1,
                "Caller has incorrectly forwarded an IRP (control field not zerod). The driver should use IoCopyCurrentIrpStackLocationToNext or IoSkipCurrentIrpStackLocation. (Irp = %Irp )": 1,
                "Caller is forwarding an IRP that is currently queued beneath it! The code handling IRPs returning STATUS_PENDING in this driver appears to be broken (Irp = %Irp ).": 1,
                "Caller has passed in NULL as a DeviceObject. This is fatal (Irp = %Irp ).": 1,
                "A driver has called IoCallDriver without setting the CancelRoutine in the Irp to NULL (Irp = %Irp ).": 1,
                "Driver has attempted to detach from device object %DevObj, which is not attached to anything. This may occur if detach was called twice on the same device object.": 1,
                "A device is deleting itself while there is another device beneath it in the driver stack. This may be because the caller has forgotten to call IoDetachDevice first, or the lower driver may have incorrectly deleted itself.": 1,
                "SWENUM.SYS": 1,
                "SCSIPORT.SYS": 1,
                "ACPI.SYS": 1,
                "NDIS.SYS": 1,
                "NTKRPAMP.EXE": 1,
                "NTKRNLPA.EXE": 1,
                "NTKRNLMP.EXE": 1,
                "NTOSKRNL.EXE": 1,
                "HAL.DLL": 1,
                "CORE DRIVER ERROR": 1,
                "POSTPONED WDM DRIVER BUG": 1,
                "WDM DRIVER WARNING": 1,
                "WDM DRIVER ERROR": 1,
                "QSSSSSSP": 1,
                "%u System Processor [%u MB Memory] %Z": 2,
                "=INITt:": 1,
                "u4=PAGEt": 1,
                "SPECu": 1,
                "hIrpl": 1,
                "hIrpsh": 1,
                "hMdl jxSh": 1,
                "hIcpPj": 1,
                "hIrpL": 1,
                "hIrpSh": 1,
                "hMdlPjxS": 1,
                "jDh0DC": 1,
                "hidlej`SSSh": 1,
                "PhWmiRj8PPPh": 1,
                "hPpin": 2,
                "NOGUIBOOT": 1,
                "MININT": 1,
                "%u.%u": 2,
                ": %wZ": 1,
                "SAFEBOOT:": 2,
                "BOOTLOG": 1,
                "hMm  j": 1,
                "\\SystemRoot": 2,
                "ShfJC": 1,
                "t@VhF": 1,
                "tSOOf": 1,
                "u%AA@@": 1,
                "PAGE;": 1,
                ".edat?": 1,
                "ShCM1 j": 1,
                "C$hCM2 ": 2,
                "hCM3 j": 1,
                "hCM4 f": 1,
                "hCM3 ": 1,
                "Q,;P,": 1,
                "hMmMl": 2,
                "p_^[]": 1,
                "KiUserExceptionDispatcher": 1,
                "KiUserApcDispatcher": 1,
                "KiUserCallbackDispatcher": 1,
                "KiRaiseUserExceptionDispatcher": 1,
                "KiFastSystemCall": 1,
                "KiFastSystemCallRet": 1,
                "KiIntSystemCall": 1,
                "LdrInitializeThunk": 1,
                "Q,;P,v": 1,
                "dSVWh,": 1,
                "Vh>*M": 1,
                "VVVj8h": 1,
                "\\SeRmCommandPort": 1,
                "\\SeLsaInitEvent": 1,
                "QhTunLh": 1,
                "hFSimjxj": 1,
                "j hFSfmj j": 1,
                "hFLshj03": 1,
                "hFLexj8VVVh": 1,
                "hFLwlj": 1,
                "hFLlnj VVVh": 1,
                "hFLlij VVVh": 1,
                "hFLflj@VVVh": 1,
                "|WSj\\X": 1,
                "\\ArcName\\%s%s": 1,
                "TSVWj": 1,
                "j(^hl": 1,
                "$SVWh": 1,
                "PPPPPV": 1,
                "Genuu3": 1,
                "ntelu+": 1,
                "ineIu#": 1,
                "ZZZZQ": 1,
                "hMmSgj@j": 1,
                "PSj(j(SS": 1,
                "Mm  W3": 1,
                "hOb  ": 2,
                "Vh|rF": 1,
                "QQVWh>": 1,
                "hRRlej(h": 1,
                "SeAcVRj": 1,
                "t`VWj": 1,
                "$SVW3": 1,
                "Wj-Y3": 1,
                "TVWhv": 1,
                "TVWh:": 1,
                "TVWj@h`": 1,
                ",hDaclPj": 2,
                "PhFACP": 2,
                "MPIPI": 1,
                "PCMCIA": 1,
                "0SVW3": 1,
                "j1Y;M": 1,
                "CSWWWWWWVWSj": 1,
                "v1hMmMl": 1,
                "tMf99u@": 1,
                "@@AA;": 1,
                "ShPpsu": 1,
                "hPpsuFFVj": 1,
                "u(_^[": 1,
                "PhD*]": 1,
                "Ff;54": 1,
                "9=|#H": 1,
                "BOOTLOGO": 1,
                "95|#H": 1,
                "9s(tUh": 1,
                "F,Ph4": 1,
                "PERFMEM": 1,
                "BURNMEMORY": 1,
                "%ws\\System32\\Drivers\\%wZ": 1,
                "Wj\"Y3": 1,
                "SVWt'": 1,
                "PZt.3": 1,
                "hNls ": 1,
                "%Z %u%c": 1,
                "5.1.2600.5512": 2,
                "SPTEui": 1,
                "=.rsr": 1,
                "=POOLt": 1,
                "=MISYt": 1,
                "CODEu": 1,
                "ramdisk(0)": 1,
                "hPpinj": 2,
                "@hKe  ": 1,
                ";5H%H": 1,
                ";=L%H": 1,
                "t)h4k]": 1,
                "t)hLk]": 1,
                "t)hXk]": 1,
                "x86 Family %u Model %u Stepping %u": 1,
                "jt[WW": 1,
                "PSShpiC": 1,
                "cdrom": 1,
                "\\ArcName\\%spartition(%d)": 1,
                "RSh ,H": 1,
                "WVVVVV": 1,
                "hKe  ": 1,
                "NOEXECUTE=ALWAYSON": 1,
                "NOEXECUTE=OPTOUT": 1,
                "NOEXECUTE=OPTIN": 1,
                "NOEXECUTE=ALWAYSOFF": 1,
                "NOEXECUTE": 1,
                "EXECUTE": 1,
                "PPPPSS": 2,
                "QSVWh": 1,
                "F&@hMmDT@Pj": 1,
                "Sh`BH": 1,
                "USERVA": 1,
                "hMmDmjHS": 1,
                "jPYjZXh": 1,
                "PpinV": 1,
                "|<SSV": 1,
                "hPpsuh": 1,
                "hSeLS3": 1,
                "hPoolVS": 1,
                "XIPBOOT": 1,
                "XIPROM=": 1,
                "XIPRAM=": 1,
                "XIPMEGS=": 1,
                "XIPVERBOSE": 1,
                "PhRSDT": 1,
                " - %x": 1,
                "SVt9j": 1,
                "j$[SPQ": 1,
                "RSDTu#": 1,
                "=FACPu'": 1,
                "hAtom": 1,
                "QhFDT": 1,
                "VVVVV": 1,
                "\\Security": 1,
                "LSA_AUTHENTICATION_INITIALIZED": 1,
                "VVVSPW": 1,
                "MaprVh": 2,
                "WjxY3": 1,
                "F PWj": 1,
                "<@hACPI": 1,
                "uDVhACPI": 1,
                "dSVWj": 1,
                "WhIoFu": 1,
                "SSSVWj": 1,
                "hObCij0SW": 1,
                "hObNmh": 1,
                "hObCIh": 1,
                "hObCIj0SW": 1,
                "hObNM": 1,
                "hObNMh": 1,
                "hDacl": 1,
                "|0,Wj": 1,
                "v<hCcWqj": 1,
                "hCcWkj": 1,
                "4@hCcVa": 1,
                "VWhFSrt": 1,
                "hSePaf": 1,
                "System": 1,
                "tb9p4t]hPp  Qj": 1,
                "MaprVj<j": 1,
                "t2hMapr": 1,
                "0SVWj": 1,
                "hMaprPV": 1,
                "j hLpcMP": 1,
                "Mm  VPj": 1,
                "8@r/S": 1,
                "hMmSP": 1,
                "SeSiV": 1,
                "SePrVPj": 1,
                "tiVWd": 1,
                "FpI%L": 1,
                "\\Registry\\Machine\\System\\CurrentControlSet\\Services\\WMI": 1,
                "pSVWh": 1,
                "Key Wj\"j": 1,
                "Qj\"Pj": 1,
                "Key j": 1,
                "\\Registry\\Machine\\System\\ControlSet%03d": 1,
                "\\Registry\\Machine\\System\\CurrentControlSet\\Hardware Profiles\\%04d": 1,
                "PWWjDWj": 1,
                "SSSSSSVSh": 1,
                "WhCMSb": 1,
                "SSSSSSVS": 1,
                ",VWhz)^": 1,
                "@0SVWj@[": 1,
                "|KhCM  ": 1,
                "hFat ": 1,
                "Ph\"1^": 1,
                "Ph*1^": 1,
                "hStacVj": 1,
                "CSD %04x": 1,
                "%Z %u": 1,
                "SSSPjd": 1,
                "2SSSPjm": 1,
                "KSSSP": 1,
                "$SSVjo": 1,
                "+SSSPjp": 1,
                "INRAM": 1,
                "MICROSOFT (R) WINDOWS (TM)": 1,
                "MINIMAL": 1,
                "NETWORK": 1,
                "DSREPAIR": 1,
                "(ALTERNATESHELL)": 1,
                "Ph2;^": 1,
                "IOINIT: UnicodeToAnsi( %wZ ) failed - %x": 1,
                "IOINIT: AnsiToUnicode( %Z ) failed - %x": 1,
                "FF@@:": 1,
                "\\Device\\LanmanRedirector": 4,
                "\\Device\\CdRom%d": 1,
                "hPpinWj": 1,
                "u,hPpreWj": 1,
                "hMapr": 1,
                " rj9x": 1,
                "VVh^Q^": 1,
                "VVhzQ^": 1,
                "SRPWj>": 1,
                ".PPWj": 1,
                " trf=": 1,
                "N@;H@t": 1,
                "MiTriageSystem: Disabled verifier due to verifier mode setting.": 1,
                "MiTriageSystem: Previous bugcheck was %x %p %p %p %p": 1,
                "MiTriageSystem: Triage disabled in registry by administrator": 1,
                "MiTriageSystem: Triage ENABLED in registry by administrator": 1,
                "Matching checksum for module %wZ not found in triage dump": 1,
                "MiTriageSystem: enabling options below to find who caused the last crash": 1,
                "9=H<H": 1,
                "t[SW3": 1,
                "MM: Loader/HAL memory block indicates large pages cannot be used for %p->%p": 1,
                "MM: Disabling large pages for all ranges due to overlap": 2,
                "hMm  Q": 1,
                "ObSTSh": 1,
                "tKShD": 1,
                "tp,Vj": 1,
                "hObAgPj": 1,
                "Sh'uF": 1,
                "RRPRj3": 1,
                "PhPool": 2,
                "u9h`XO": 1,
                "u SSSj": 1,
                "Key VPS": 1,
                "hKey PS": 1,
                "ShHdlsjXj": 1,
                "HdlsWh": 1,
                "t!WjPV": 1,
                "H2VPf": 1,
                "hXIP j@j": 1,
                "21:45:18": 1,
                "Apr 13 2008": 1,
                "d:\\xpsp\\base\\ntos\\ex\\xipdisp.c": 1,
                "XIP: debug timestamp at line %d in %s:   <<<%s %s>>>": 1,
                "XIP: Base %x  Count %x": 1,
                "XIPMEGS=%d in boot options is %d pages, but only %d pages were allocated by NTLDR": 1,
                "XIP: Malformed FAT Filesystem: BytesPerSector=%x  BytesPerCluster=%x  ClusterZeroOffset=%x": 1,
                "SSSSWj": 1,
                "MachineDescription": 1,
                "@@GG:": 1,
                "80387": 1,
                "80%u86-%c%x": 1,
                "CmpFindRSDTTable: Cannot open MultifunctionAdapter registry key.": 1,
                "CmpFindRSDTTable: ACPI BIOS MultifunctionAdapter registry key not found.": 1,
                "CmpFindACPITable: Cannot map RSDT at %I64x": 2,
                "CmpFindACPITable: Cannot map DSDT at %I64x": 1,
                "CmpFindACPITable: Cannot find FADT": 1,
                "CmpFindACPITable: Cannot map FADT at %I64x": 1,
                "CmpFindACPITable: Cannot map header at %I64x": 1,
                "DUMPu7": 1,
                "9PAGEu/": 1,
                "YYt%h@": 1,
                "RDIMAGEOFFSET": 1,
                "RDIMAGELENGTH": 1,
                "hPpLg": 1,
                "tGhMaprPj": 1,
                "hMaprj0j": 1,
                "Pj0Vj": 1,
                "0WhMaprh": 1,
                "YYt\"h": 1,
                "$hPpeiPj": 1,
                "$hMapP3": 1,
                "Kt3Kt": 1,
                "Kt-Ku:": 1,
                " ;^$r": 1,
                "hMapPPj": 2,
                "Jt\"Jt": 1,
                "MapPV": 1,
                "hMapP": 1,
                "MapPWPj": 1,
                "u<f9]": 1,
                "MapPWj`j": 1,
                "Pj`Vj": 1,
                "w vpS": 1,
                "<hMapPPj": 1,
                "Wh\"@ ": 1,
                "hIoFuFF": 1,
                "|'VVVj": 1,
                "hIrql": 1,
                "j hFltt": 1,
                "t`SVh": 1,
                "6YYhMmLd": 1,
                "MiTriageAddDrivers: Marking %wZ for verification when it is loaded": 1,
                ";pHutj": 1,
                ";AHu'": 1,
                "PhIrpCjPPPPh": 1,
                "PPPPPPh": 1,
                "PPPPPh": 1,
                "PPPPh/": 1,
                "hIoTt": 1,
                "|XVh:": 1,
                "Invalid operator %s used!": 1,
                "sISVW": 1,
                "8$PnPu\"": 1,
                "Cleanup": 1,
                "t3j!P": 1,
                "QQSVWj": 3,
                "hCMpij": 3,
                "t6hCMpij": 1,
                "hCMpi": 1,
                "<.ufj": 1,
                "Strings": 1,
                "(SVWhCMpi3": 1,
                "DBLSPACE_SECTION": 1,
                "Error on line %d in CmpOpenInfFile!": 1,
                "G;} r": 1,
                "6hCMgiVj": 1,
                "F;u r": 1,
                "} hCMgiPj": 1,
                "hCMgi": 2,
                "u VSS": 1,
                "tBhCMgiPj": 1,
                "SVhCMgi": 1,
                "\\Registry\\Machine\\": 1,
                "CMgiV": 1,
                "CmpAppendStringToMultiSz: Failed to allocate memory!": 2,
                "t>Ht7": 1,
                "t*Ht\"+": 1,
                "PQQQh": 1,
                "Value cannot be read for BitReg in %s line %d": 1,
                "|&VVj": 1,
                "<1uKGG3": 1,
                "m<2uwG": 1,
                "%d.%d.%d.%d": 1,
                "SSj j": 1,
                "hIoRbPj": 2,
                "VVj 3": 1,
                "hIoRbhN": 1,
                "\\h8H_": 1,
                "^j-Zj": 1,
                "PPjPSh": 1,
                "Pj$Sh": 1,
                "Keeping previous autotriage settings": 1,
                "Driver Verifying Pre-Windows 2000 built drivers": 1,
                "Making accesses to freed nonpaged pool cause bugchecks": 1,
                "System PTE usage tracking": 1,
                "Locked pages tracking": 1,
                "ACPICreatorRevision": 1,
                "ACPIRevision": 1,
                "ACPIOemRevision": 1,
                "ACPIOemTableId": 1,
                "ACPIOemId": 1,
                "Install": 1,
                "RmPmSame": 1,
                "PMode": 1,
                "OemId": 1,
                "Pointer": 1,
                "NextMatch": 1,
                "Search": 1,
                "Memory": 1,
                "BitReg": 1,
                "DelReg": 1,
                "AddReg": 1,
                "HAL.dll": 2,
                "BOOTVID.dll": 2,
                "KDCOM.dll": 2,
                "VidInitialize": 1,
                "VidDisplayString": 1,
                "VidSetTextColor": 1,
                "VidSolidColorFill": 1,
                "VidBitBlt": 1,
                "VidBufferToScreenBlt": 1,
                "VidScreenToBufferBlt": 1,
                "VidResetDisplay": 1,
                "VidCleanUp": 1,
                "VidSetScrollRegion": 1,
                "HalReportResourceUsage": 1,
                "HalAllProcessorsStarted": 1,
                "HalQueryRealTimeClock": 1,
                "HalAllocateAdapterChannel": 1,
                "KeStallExecutionProcessor": 1,
                "HalTranslateBusAddress": 1,
                "HalGetBusDataByOffset": 1,
                "HalSetBusDataByOffset": 1,
                "HalReturnToFirmware": 1,
                "READ_PORT_UCHAR": 1,
                "READ_PORT_USHORT": 1,
                "READ_PORT_ULONG": 1,
                "WRITE_PORT_UCHAR": 1,
                "WRITE_PORT_USHORT": 1,
                "WRITE_PORT_ULONG": 1,
                "HalInitializeProcessor": 1,
                "HalCalibratePerformanceCounter": 1,
                "HalSetRealTimeClock": 1,
                "HalHandleNMI": 1,
                "HalBeginSystemInterrupt": 1,
                "HalEndSystemInterrupt": 1,
                "KeRaiseIrqlToSynchLevel": 1,
                "KeAcquireInStackQueuedSpinLockRaiseToSynch": 1,
                "HalInitSystem": 1,
                "HalDisableSystemInterrupt": 1,
                "HalEnableSystemInterrupt": 1,
                "HalClearSoftwareInterrupt": 1,
                "KeAcquireSpinLockRaiseToSynch": 1,
                "KeFlushWriteBuffer": 1,
                "HalProcessorIdle": 1,
                "HalReadDmaCounter": 1,
                "HalSetTimeIncrement": 1,
                "HalGetEnvironmentVariable": 1,
                "HalSetEnvironmentVariable": 1,
                "HalGetInterruptVector": 1,
                "KeGetCurrentIrql": 1,
                "HalRequestSoftwareInterrupt": 1,
                "KeAcquireInStackQueuedSpinLock": 1,
                "KeReleaseInStackQueuedSpinLock": 1,
                "HalSystemVectorDispatchEntry": 1,
                "HalStartProfileInterrupt": 1,
                "HalSetProfileInterval": 1,
                "HalStopProfileInterrupt": 1,
                "KdD0Transition": 1,
                "KdD3Transition": 1,
                "KdRestore": 1,
                "KdReceivePacket": 1,
                "KdDebuggerInitialize0": 1,
                "KdSave": 1,
                "KdDebuggerInitialize1": 1,
                "KdSendPacket": 1,
                "APC_INDEX_MISMATCH": 1,
                "DEVICE_QUEUE_NOT_BUSY": 1,
                "INVALID_AFFINITY_SET": 1,
                "INVALID_DATA_ACCESS_TRAP": 1,
                "INVALID_PROCESS_ATTACH_ATTEMPT": 1,
                "INVALID_PROCESS_DETACH_ATTEMPT": 1,
                "INVALID_SOFTWARE_INTERRUPT": 1,
                "IRQL_NOT_DISPATCH_LEVEL": 1,
                "IRQL_NOT_GREATER_OR_EQUAL": 1,
                "IRQL_NOT_LESS_OR_EQUAL": 1,
                "NO_EXCEPTION_HANDLING_SUPPORT": 1,
                "MAXIMUM_WAIT_OBJECTS_EXCEEDED": 1,
                "MUTEX_LEVEL_NUMBER_VIOLATION": 1,
                "NO_USER_MODE_CONTEXT": 1,
                "SPIN_LOCK_ALREADY_OWNED": 1,
                "SPIN_LOCK_NOT_OWNED": 1,
                "THREAD_NOT_MUTEX_OWNER": 1,
                "TRAP_CAUSE_UNKNOWN": 1,
                "EMPTY_THREAD_REAPER_LIST": 1,
                "CREATE_DELETE_LOCK_NOT_LOCKED": 1,
                "LAST_CHANCE_CALLED_FROM_KMODE": 1,
                "CID_HANDLE_CREATION": 1,
                "CID_HANDLE_DELETION": 1,
                "REFERENCE_BY_POINTER": 1,
                "BAD_POOL_HEADER": 1,
                "MEMORY_MANAGEMENT": 1,
                "PFN_SHARE_COUNT": 1,
                "PFN_REFERENCE_COUNT": 1,
                "NO_SPIN_LOCK_AVAILABLE": 1,
                "Check to be sure you have adequate disk space. If a driver is": 1,
                "identified in the Stop message, disable the driver or check": 1,
                "with the manufacturer for driver updates. Try changing video": 1,
                "adapters.": 1,
                "Check with your hardware vendor for any BIOS updates. Disable": 2,
                "BIOS memory options such as caching or shadowing. If you need": 2,
                "to use Safe Mode to remove or disable components, restart your": 2,
                "computer, press F8 to select Advanced Startup Options, and then": 2,
                "select Safe Mode.": 3,
                "SHARED_RESOURCE_CONV_ERROR": 1,
                "KERNEL_APC_PENDING_DURING_EXIT": 1,
                "QUOTA_UNDERFLOW": 1,
                "FILE_SYSTEM": 1,
                "Disable or uninstall any anti-virus, disk defragmentation": 1,
                "or backup utilities. Check your hard drive configuration,": 1,
                "and check for any updated drivers. Run CHKDSK /F to check": 1,
                "for hard drive corruption, and then restart your computer.": 1,
                "NTFS_FILE_SYSTEM": 1,
                "NPFS_FILE_SYSTEM": 1,
                "CDFS_FILE_SYSTEM": 1,
                "RDR_FILE_SYSTEM": 1,
                "CORRUPT_ACCESS_TOKEN": 1,
                "SECURITY_SYSTEM": 1,
                "INCONSISTENT_IRP": 1,
                "PANIC_STACK_SWITCH": 1,
                "PORT_DRIVER_INTERNAL": 1,
                "SCSI_DISK_DRIVER_INTERNAL": 1,
                "Run system diagnostics supplied by your hardware manufacturer.": 1,
                "In particular, run a memory check, and check for faulty or": 1,
                "mismatched memory. Try changing video adapters.": 1,
                "INSTRUCTION_BUS_ERROR": 1,
                "SET_OF_INVALID_CONTEXT": 1,
                "PHASE0_INITIALIZATION_FAILED": 1,
                "PHASE1_INITIALIZATION_FAILED": 1,
                "UNEXPECTED_INITIALIZATION_CALL": 1,
                "CACHE_MANAGER": 1,
                "NO_MORE_IRP_STACK_LOCATIONS": 1,
                "DEVICE_REFERENCE_COUNT_NOT_ZERO": 1,
                "FLOPPY_INTERNAL_ERROR": 1,
                "SERIAL_DRIVER_INTERNAL": 1,
                "SYSTEM_EXIT_OWNED_MUTEX": 1,
                "SYSTEM_UNWIND_PREVIOUS_USER": 1,
                "SYSTEM_SERVICE_EXCEPTION": 1,
                "INTERRUPT_UNWIND_ATTEMPTED": 1,
                "INTERRUPT_EXCEPTION_NOT_HANDLED": 1,
                "MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED": 1,
                "Remove any recently installed software including backup": 1,
                "utilities or disk-intensive applications.": 1,
                "If you need to use Safe Mode to remove or disable components,": 2,
                "restart your computer, press F8 to select Advanced Startup": 1,
                "Options, and then select Safe Mode.": 1,
                "TARGET_MDL_TOO_SMALL": 1,
                "MUST_SUCCEED_POOL_EMPTY": 1,
                "ATDISK_DRIVER_INTERNAL": 1,
                "NO_SUCH_PARTITION": 1,
                "MULTIPLE_IRP_COMPLETE_REQUESTS": 1,
                "INSUFFICIENT_SYSTEM_MAP_REGS": 1,
                "DEREF_UNKNOWN_LOGON_SESSION": 1,
                "REF_UNKNOWN_LOGON_SESSION": 1,
                "CANCEL_STATE_IN_COMPLETED_IRP": 1,
                "PAGE_FAULT_WITH_INTERRUPTS_OFF": 1,
                "IRQL_GT_ZERO_AT_SYSTEM_SERVICE": 1,
                "STREAMS_INTERNAL_ERROR": 1,
                "FATAL_UNHANDLED_HARD_ERROR": 1,
                "NO_PAGES_AVAILABLE": 1,
                "PFN_LIST_CORRUPT": 1,
                "NDIS_INTERNAL_ERROR": 1,
                "PAGE_FAULT_IN_NONPAGED_AREA": 1,
                "REGISTRY_ERROR": 1,
                "MAILSLOT_FILE_SYSTEM": 1,
                "NO_BOOT_DEVICE": 1,
                "LM_SERVER_INTERNAL_ERROR": 1,
                "DATA_COHERENCY_EXCEPTION": 1,
                "INSTRUCTION_COHERENCY_EXCEPTION": 1,
                "XNS_INTERNAL_ERROR": 1,
                "FTDISK_INTERNAL_ERROR": 1,
                "PINBALL_FILE_SYSTEM": 1,
                "CRITICAL_SERVICE_FAILED": 1,
                "SET_ENV_VAR_FAILED": 1,
                "HAL_INITIALIZATION_FAILED": 1,
                "UNSUPPORTED_PROCESSOR": 1,
                "OBJECT_INITIALIZATION_FAILED": 1,
                "SECURITY_INITIALIZATION_FAILED": 1,
                "PROCESS_INITIALIZATION_FAILED": 1,
                "HAL1_INITIALIZATION_FAILED": 1,
                "OBJECT1_INITIALIZATION_FAILED": 1,
                "SECURITY1_INITIALIZATION_FAILED": 1,
                "SYMBOLIC_INITIALIZATION_FAILED": 1,
                "MEMORY1_INITIALIZATION_FAILED": 1,
                "CACHE_INITIALIZATION_FAILED": 1,
                "CONFIG_INITIALIZATION_FAILED": 1,
                "FILE_INITIALIZATION_FAILED": 1,
                "IO1_INITIALIZATION_FAILED": 1,
                "LPC_INITIALIZATION_FAILED": 1,
                "PROCESS1_INITIALIZATION_FAILED": 1,
                "REFMON_INITIALIZATION_FAILED": 1,
                "SESSION1_INITIALIZATION_FAILED": 1,
                "SESSION2_INITIALIZATION_FAILED": 1,
                "SESSION3_INITIALIZATION_FAILED": 1,
                "SESSION4_INITIALIZATION_FAILED": 1,
                "SESSION5_INITIALIZATION_FAILED": 1,
                "ASSIGN_DRIVE_LETTERS_FAILED": 1,
                "CONFIG_LIST_FAILED": 1,
                "BAD_SYSTEM_CONFIG_INFO": 1,
                "CANNOT_WRITE_CONFIGURATION": 1,
                "PROCESS_HAS_LOCKED_PAGES": 1,
                "KERNEL_STACK_INPAGE_ERROR": 1,
                "PHASE0_EXCEPTION": 1,
                "Mismatched kernel and hal image.": 1,
                "KERNEL_DATA_INPAGE_ERROR": 1,
                "Check for viruses on your computer. Remove any newly installed": 1,
                "hard drives or hard drive controllers. Check your hard drive": 1,
                "to make sure it is properly configured and terminated.": 1,
                "Run CHKDSK /F to check for hard drive corruption, and then": 1,
                "restart your computer.": 1,
                "INSTALL_MORE_MEMORY": 1,
                "SYSTEM_THREAD_EXCEPTION_NOT_HANDLED": 1,
                "Run a system diagnostic utility supplied by your hardware manufacturer.": 1,
                "In particular, run a memory check, and check for faulty or mismatched": 1,
                "memory. Try changing video adapters.": 1,
                "Disable or remove any newly installed hardware and drivers. Disable or": 1,
                "remove any newly installed software. If you need to use Safe Mode to": 1,
                "remove or disable components, restart your computer, press F8 to select": 1,
                "Advanced Startup Options, and then select Safe Mode.": 1,
                "Hardware malfunction.": 1,
                "SPIN_LOCK_INIT_FAILURE": 1,
                "DFS_FILE_SYSTEM": 1,
                "OFS_FILE_SYSTEM": 1,
                "RECOM_DRIVER": 1,
                "SETUP_FAILURE": 1,
                "Audit attempt has failed.": 1,
                "This system may be infected with a virus.": 1,
                "KERNEL_MODE_EXCEPTION_NOT_HANDLED": 1,
                "PP0_INITIALIZATION_FAILED": 1,
                "PP1_INITIALIZATION_FAILED": 1,
                "WIN32K_INIT_OR_RIT_FAILURE": 1,
                "UP_DRIVER_ON_MP_SYSTEM": 1,
                "INVALID_KERNEL_HANDLE": 1,
                "KERNEL_STACK_LOCKED_AT_EXIT": 1,
                "PNP_INTERNAL_ERROR": 1,
                "INVALID_WORK_QUEUE_ITEM": 1,
                "BOUND_IMAGE_UNSUPPORTED": 1,
                "END_OF_NT_EVALUATION_PERIOD": 1,
                "INVALID_REGION_OR_SEGMENT": 1,
                "SYSTEM_LICENSE_VIOLATION": 1,
                "UDFS_FILE_SYSTEM": 1,
                "MACHINE_CHECK_EXCEPTION": 1,
                "DRIVER_POWER_STATE_FAILURE": 1,
                "INTERNAL_POWER_ERROR": 1,
                "Inconsistency detected in the PCI Bus driver's internal structures.": 1,
                "A CRC check on the memory range has failed": 1,
                "ACPI_DRIVER_INTERNAL": 1,
                "Internal inconsistency while representing": 1,
                "Ntfs Structured Storage as a DOCFILE.": 1,
                "The BIOS in this system is not fully ACPI compliant.  Please contact your": 1,
                "system vendor or visit http://www.hardware-update.com for an updated BIOS.": 1,
                "If you are unable to obtain an updated BIOS or the latest BIOS supplied by": 1,
                "your vendor is not ACPI compliant, you can turn off ACPI mode during text": 1,
                "mode setup.  To do this, simply press the F7 key when you are prompted to": 1,
                "install storage drivers.  The system will not notify you that the F7 key": 1,
                "was pressed - it will silently disable ACPI and allow you to continue": 1,
                "your installation.": 1,
                "FP_EMULATION_ERROR": 1,
                "BAD_EXHANDLE": 1,
                "The system is booting in safemode - Minimal Services": 1,
                "The system is booting in safemode - Minimal Services with Network": 1,
                "The system is booting in safemode - Directory Services Repair": 1,
                "SESSION_HAS_VALID_POOL_ON_EXIT": 1,
                "Allocate from NonPaged Pool failed for a HAL critical allocation.": 1,
                "The video driver failed to initialize": 1,
                "Loaded driver": 1,
                "Did not load driver": 1,
                "Boot Logging Enabled": 1,
                "A wait operation, attach process, or yield was attempted from a DPC routine.": 1,
                "A parity error in the system memory or I/O system was detected.": 1,
                "SESSION_HAS_VALID_VIEWS_ON_EXIT": 1,
                "An initialization failure occurred while attempting to boot from the network.": 1,
                "A duplicate IP address was assigned to this machine while attempting to": 1,
                "boot from the network.": 1,
                "The hibernated memory image does not match the current hardware configuration.": 1,
                "An attempt was made to write to read-only memory.": 1,
                "MUTEX_ALREADY_OWNED": 1,
                "An attempt to access PCI configuration space failed.": 1,
                "SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION": 1,
                "BAD_POOL_CALLER": 1,
                "A system file that is owned by Windows was replaced by an application": 1,
                "running on your system.  The operating system detected this and tried to": 1,
                "verify the validity of the file's signature.  The operating system found that": 1,
                "the file signature is not valid and put the original, correct file back": 1,
                "so that your operating system will continue to function properly.": 1,
                "A device driver attempting to corrupt the system has been caught.": 2,
                "The faulty driver currently on the kernel stack must be replaced": 2,
                "with a working version.": 2,
                "A device driver has pool.": 1,
                "Check to make sure any new hardware or software is properly installed.": 2,
                "If this is a new installation, ask your hardware or software manufacturer": 2,
                "for any Windows updates you might need.": 2,
                "Run the driver verifier against any new (or suspect) drivers.": 1,
                "If that doesn't reveal the corrupting driver, try enabling special pool.": 1,
                "Both of these features are intended to catch the corruption at an earlier": 1,
                "point where the offending driver can be identified.": 1,
                "restart your computer, press F8 to select Advanced Startup Options,": 1,
                "and then select Safe Mode.": 1,
                "A kernel timer or DPC was found in memory which must not contain such": 1,
                "items.  Usually this is memory being freed.  This is usually caused by": 2,
                "a device driver that has not cleaned up properly before freeing memory.": 2,
                "The processor's IRQL is not valid for the currently executing context.": 1,
                "This is a software error condition and is usually caused by a device": 1,
                "driver changing IRQL and not restoring it to its previous value when": 1,
                "it has finished its task.": 1,
                "The IO manager has detected a violation by a driver that is being verified.": 1,
                "The faulty driver that is being verified must be debugged and": 1,
                "replaced with a working version.": 1,
                "Plug and Play detected an error most likely caused by a faulty driver.": 1,
                "DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS": 1,
                "The system is attempting to access memory after it has been freed.": 1,
                "This usually indicates a system-driver synchronization issue.": 2,
                "The system is attempting to access memory beyond the end of the allocation.": 1,
                "DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS": 1,
                "TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE": 1,
                "DRIVER_CORRUPTED_MMPOOL": 1,
                "DRIVER_IRQL_NOT_LESS_OR_EQUAL": 1,
                "The driver mistakenly marked a part of it's image pagable instead of nonpagable.": 1,
                "The driver unloaded without cancelling pending operations.": 1,
                "The driver is attempting to access memory after it has been freed.": 1,
                "The driver is attempting to access memory beyond the end of the allocation.": 1,
                "The driver is attempting to unmap an invalid memory address.": 1,
                "The driver has used an excessive number of system PTEs.": 1,
                "The driver is corrupting the locked pages tracking structures.": 1,
                "The driver is mismanaging system PTEs.": 1,
                "A driver has corrupted the memory management system PTEs.": 1,
                "A driver accessed a stack address that lies below the current stack pointer": 1,
                "of the stack's thread.": 1,
                "A driver corrupted pool memory used for holding pages destined for disk.": 1,
                "A worker thread is impersonating another process. The work item forgot to": 1,
                "disable impersonation before it returned.": 1,
                "Your computer (BIOS) has reported that a component in your system is faulty and": 1,
                "has prevented Windows from operating.  You can determine which component is": 1,
                "faulty by running the diagnostic disk or tool that came with your computer.": 1,
                "If you do not have this tool, you must contact your system vendor and report": 1,
                "this error message to them.  They will be able to assist you in correcting this": 1,
                "hardware problem thereby allowing Windows to operate.": 1,
                "WORKER_THREAD_RETURNED_AT_BAD_IRQL": 1,
                "The end-user manually generated the crashdump.": 1,
                "A thread tried to release a resource it did not own.": 1,
                "A executive worker item was found in memory which must not contain such": 1,
                "POWER_FAILURE_SIMULATE": 1,
                "The DMA Subsystem has detected an illegal DMA operation initiated by": 1,
                "a driver being verified. The faulty driver must be replaced with a": 1,
                "working version.": 1,
                "While restoring the previously saved floating point state for a thread,": 1,
                "the state was found to be invalid.": 1,
                "The fileobject passed to IoCancelFileOpen is invalid. It should have reference of 1. The driver": 1,
                "that called IoCancelFileOpen is at fault.": 1,
                "An executive worker thread is being terminated without having gone through the worker thread rundown code.": 1,
                "Work items queued to the Ex worker queue must not terminate their threads.": 1,
                "A stack trace should indicate the culprit.": 1,
                "The device driver got stuck in an infinite loop. This usually indicates": 1,
                "problem with the device itself or with the device driver programming the": 1,
                "hardware incorrectly.": 1,
                "Please check with your hardware device vendor for any driver updates.": 1,
                "The filesystem driver stack has deadlocked and all the modified pages are": 1,
                "destined for the filesystem.  Since the filesystem is nonoperational, the": 1,
                "system has crashed because none of the modified pages can be reused with": 1,
                "losing data.  Any filesystem or filter driver in the stack may be at fault.": 1,
                "SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT": 1,
                "UNMOUNTABLE_BOOT_VOLUME": 1,
                "The kernel attempted to ready a thread that was in an incorrect state such as terminated.": 1,
                "The SCSI verifier has detected an error in a SCSI miniport driver being verified.": 1,
                "An interrupt storm has caused the system to hang.": 1,
                "The system does not shutdown in a deterministic manner so bugchecks can occur.": 1,
                "A process or thread crucial to system operation has unexpectedly exited or been terminated.": 1,
                "FLTMGR_FILE_SYSTEM": 1,
                "The PCI driver has detected an error in a PCI device or BIOS being verified.": 1,
                "A driver has overrun a stack-based buffer.  This overrun could potentially allow a malicious": 1,
                "user to gain control of this machine.": 1,
                "An attempt was made to execute non-executable memory.": 1,
                "BUGCODE_USB_DRIVER": 1,
                "An invalid AGP memory access was detected.": 1,
                "The Graphics Aperture Redirection Table (Gart) is corrupt.": 1,
                "The AGP HW has been reprogrammed by an unauthorized agent.": 1,
                "A 3rd Party file system or file system filter has failed in an unrecoverable way.": 1,
                "Microsoft (R) Windows (R) Version %hs (Build %u%hs)": 1,
                "A problem has been detected and Windows has been shut down to prevent damage": 1,
                "to your computer.": 1,
                "The problem seems to be caused by the following file:": 1,
                "If this is the first time you've seen this Stop error screen,": 1,
                "restart your computer. If this screen appears again, follow": 1,
                "these steps:": 1,
                "If problems continue, disable or remove any newly installed hardware": 1,
                "or software. Disable BIOS memory options such as caching or shadowing.": 1,
                "If you need to use Safe Mode to remove or disable components, restart": 1,
                "your computer, press F8 to select Advanced Startup Options, and then": 1,
                "Technical information:": 1,
                "Service Pack": 1,
                "MultiProcessor Kernel": 1,
                "A kernel thread terminated while holding a mutex": 1,
                "Beginning dump of physical memory": 1,
                "Dumping physical memory to disk": 1,
                "Physical memory dump complete.": 1,
                "Contact your system administrator or technical support group for further": 1,
                "assistance.": 1,
                "%u System Processors [%u MB Memory] %Z": 1,
                "Undocked Profile": 1,
                "Docked Profile": 1,
                "Profile": 1,
                "wGwyw": 1,
                "LGuwy|": 1,
                "uyw|y": 1,
                "yGWwyw": 1,
                "}]}u]": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"22\"\"\"22223333333333333CCD44DDDDDDDDdFDDFDdddfFFFffdffffffffffff": 1,
                "hhhffffffffffffffffffFfFFFFFDDDDDDDDDDDDDDDDDDDD333333333333333222\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"333333333333444444DD444DDDDDDDDDDDDFFFFFFFFffdfFffffffffff": 1,
                "hffffffffffdfFffddddddddDDDDDDDDDDDDCCCDDCCCCCC333333333333\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"###333333333333333DDDDDDDDDDDDDDDDDDDDdddddfdffffffffffffffffff": 1,
                "hffffffffffffFffdddfFFFDdDDdFDDDDDDDDCCD443333333333333####\"\"\"##\"\"\"\"\"\"\"\"\"(": 1,
                "fffffffffffffffffffffffffffffffffffffffffffffvvvvvvwwwwwwwwwwwwwwwwwwwwwww": 1,
                "xxxxw": 1,
                "xxxxxw": 1,
                "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwvwgwggfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffgggwwwwwwwwwwwwwwwwwwwwwwwwwww": 1,
                "xxxxxxxxxxw": 1,
                "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwvvvvvfffffffffffffffffffffffffffffffffffe
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 1,
                "bg": 1,
                "e\"\"\"\"\"\"\"\"\"fR\"\"b\"\"\"\"\"\"\"e\"\"\"\"\"\"\"\"&e\"\"\"\"\"\"\"\"\"&": 1,
h": 1,
                "\"\"\"\"\"Z": 1,

                "WR\"\"\"\"\"": 1,
                "\"\"\"\"\"\"\"v\"*": 1,
                "fey\"-~f": 1,
                "ffn\"\"\"": 1,
w&": 1,
                "R\"\"\"\"\"\"\"g": 1,
                "z\"~Xv": 1,
                "njr
                "R\"\"\" i": 1,
                "r\"\"\"\"\"\"Y": 1,

                "r\"\"\"\"\"\"~": 1,

                "\"\"\"\"\"\"}\"kr&u\"fge\"e%v\"Vg\"\"": 1,
                "\"\"'w\"&'bWb&R": 1,
                "e\"e~": 1,
                "\"\"\"\"\"\"]": 1,
                "R\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 1,
                "\"\"\"\"\"\"\"\")b": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"n": 1,
                "\"\"\"\"\"\"&wu\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"wwv\"\"\"\"\"\"\"\"'bv


                "b\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"%fR\"\"\"%fb\"\"\"\"\"\"\"\"\"\"ff
                "r\"\"\"\"\"~": 1,

                "\"\"\"\"\"": 1,
                "w\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"~": 1,
                "\"\"\"\"&u\"\"\"\"\"": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"m": 1,
                "'b gx": 1,
                "vR\"\"\"\"\"&": 1,
                "\"\"'u)": 1,

                "u\"\"\"\"'": 1,
                "\"\"\"\")": 1,

                "R\"\"\")": 1,
                "wwwv)": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"%y": 1,
                "r\"\"\"^": 1,
                "R\"\"\".": 1,
x": 1,
                "v\"&R~": 1,
                "v\"\"\"\"\".": 1,
f\"\"": 1,
                "\"%}rm": 1,
                "r\"wb\"\"\".": 1,
}": 1,
                "r\"\"\".": 1,
n": 1,
                "y\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 1,
                "'w&we": 1,
                "\"wv\"'w\"&w&": 1,
                "\"\"\"'rx": 1,
                "R\"\"gwww{": 1,
                "ww\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"'": 1,
                "'w\"\"\"\"\"\"\"\"\"\"": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\")": 2,

                "\"\"\"\"\"\"\"\"\"\"": 2,


                "\"gw\"\"'wb\"&wgw\"\"\"\"\"\"\"\"\"\"wr~": 1,
                "\"VV&V&bb&bVbfRbm": 1,
                "\"fVVVWu`Wvgugp`": 1,
                "b
                "R\"\" g": 1,
                "gzggwfuwhfwvwug\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"'": 1,
                "\"\"\"\"\" \"gwwgv%vv": 1,
                "wwrwug
                "\"\"\"\"\"\"\"\"hu": 1,
                "wwwvww": 1,

                "R\"\"\"\"\"\"\"\"\"mb": 1,
                "V&pfVp": 1,
{": 1,
                "\"\"\"\"\"\"\"\"\"\"W": 1,
                "\"\"\"\"\"\"\"\"\"g": 1,
x": 1,
wwe
                "xwxwxw": 1,
                "wxwxwxw": 1,
                "vfgfw": 1,
                "wgwgvwgvwgw": 1,
                "%;+;1;7;=;C;I;O;U;[;d;t;": 1,
                "<1<7<=<C<I<O<U<[<a<g<p<z<": 1,
                "<\\=g=": 1,
                ">1>@>": 1,
                ">i?y?": 1,
                "; ;$;(;,;0;z;": 1,
                "<$<(<,<I<s<": 1,
                "= =$=(=,=": 1,
                ">3>M>T>X>\\>`>d>h>l>p>": 1,
                ">2?=?X?_?d?h?l?": 1,
                "0R0`0d0h0l0": 1,
                "717K7j7": 1,
                "7O8`8": 1,
                "8!979K9%;1;A;\\;t;": 1,
                "?094A4": 1,
                "7%7U7s7": 1,
                ":H:D;|;": 1,
                "<j>4?": 1,
                "7E8X8": 1,
                "4<5N6[6f6o6": 1,
                "9;=t=": 1,
                "0H1[1": 1,
                "4$4v4": 1,
                "626p:": 1,
                "5=5F5\\5": 1,
                "727H7V7`7x7": 1,
                "768A8Z8a8l8": 1,
                "2X2Y3i3z3": 1,
                "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7": 1,
                "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8": 2,
                "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9": 1,
                ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:": 1,
                "=8?F?X?c?": 1,
                "0H0S0e0": 1,
                "2 2&272<2C2W2w2": 1,
                "3 4,4Y4v4": 1,
                "6%7G7M7]7j7p7": 1,
                "8V9_9": 1,
                "?B?K?U?": 1,
                "061x1": 1,
                "2<3@3H3L3X3": 1,
                "5$7*777J7Y7_7k7": 1,
                "8P9Z9": 1,
                ";!;7;": 1,
                "<I=O=U=[=": 1,
                "> >(>,>Q>Z>d>u>": 1,
                ">t?x?": 1,
                "0,050@0F0L0R0V0s0": 1,
                "2/3T3": 1,
                "4-4X4": 1,
                "5%5,5<5H5b5": 1,
                "5&686X6v6|6": 1,
                "7\"7D7d7h7p7t7": 1,
                "9 9(9,9R9": 1,
                "0,000;0": 1,
                "0(1Q1": 1,
                "2<3@3": 1,
                "484T4d4": 1,
                "4$5(50545": 1,
                "6:6Y6": 1,
                "7-757<7]7": 1,
                "8\"8.8": 1,
                "889A9S9w9": 1,
                ":':,:7:D:H:P:T:\\:`:l:p:{:": 1,
                "<v<\"=": 1,
                "=F>V>]>": 1,
                "-030g0": 1,
                "1<1\"2": 1,
                "5 5(5,54585D5H5T5X5d5h5t5x5": 1,
                "6$6,626<6J6S6j6p6w6}6": 1,
                "8.848C8O8n8{8": 1,
                "9#:V:c:o:{:": 1,
                ";J;^;d;o;u;": 1,
                "=,=4=G=`=": 1,
                "2?2Q2": 1,
                "3 5'5": 1,
                "829p9|9": 1,
                ":$;(;4;8;D;H;T;X;": 1,
                "<#<7<|<": 1,
                ">;>B>": 1,
                ">Q?X?": 1,
                "0I0U0|0": 1,
                "0L1P1X1\\1d1h1p1t1": 1,
                "2G3Q3u3": 1,
                "5!5t5": 1,
                "8-888}8": 1,
                "8-9d9": 1,
                "<[=a=": 1,
                "0Z0t0x0": 1,
                "0-131D1R1X2": 1,
                "2S3`3": 1,
                "4D4H4P4T4\\4`4l4p4x4|4": 1,
                "5 5(5,54585@5D5T5r5L6P6X6\\6d6h6t6x6": 1,
                "7'7T9X9`9d9l9p9|9": 1,
                "9 :::y:": 1,
                ":F;N;V;e;t;": 1,
                "1/2P2": 1,
                "3M4`4": 1,
                "7-8X8b8": 1,
                "9x:}:": 1,
                ";!;,;{;": 1,
                "<*<6<": 1,
                "=&=p=": 1,
                "> >->8>@>T>`>l>": 1,
                "?<?h?": 1,
                "0_0o0": 1,
                "1&222": 1,
                "2D3H3P3T3\\3`3h3l3t3x3": 1,
                "4 4(4,44484@4D4L4P4": 1,
                "5 5$5,50585<5D5H5P5T5\\5`5h5l5t5x5": 1,
                "6 6(6,64686@6D6L6P6X6\\6d6h6p6t6|6": 1,
                "7$7(70747<7@7H7L7T7X7`7d7l7p7x7|7": 1,
                "8 8$8,80888<8D8H8T8X8`8d8l8p8x8|8": 1,
                "< <(<,<;<T<X<`<d<l<p<x<|<": 1,
                "=$=:=I=\\=`=h=l=t=x=": 1,
                "> >$>,>0>": 1,
                ")0d0h0p0t0": 1,
                "10161": 1,
                "3%32383": 1,
                "9*9_9": 1,
                ":#:*:::X:": 1,
                "<!<-<5<": 1,
                "0+070P0V0": 1,
                "1!1)1B1G1j1}1(282x5": 1,
                ":9;h;": 1,
                "<8<h<": 1,
                "90F0R0": 1,
                "3C4Q4": 1,
                "5s5|5": 1,
                "<P<l<": 1,
                "222p2=3": 1,
                "3'5]5{5": 1,
                "566o6": 1,
                "71:g:t:x:": 1,
                ":`;~;v<": 1,
                "='>0>x>": 1,
                ">,?D?": 1,
                "0,0T0L1P1X1\\1d1h1p1t1|1": 1,
                "3 3$3,30383<3": 1,
                "4 4,40484<4D4H4T4X4d4h4n4": 1,
                "6L6P6\\6`6h6l6t6x6": 1,
                "7.7D7H7P7T7\\7`7h7l7t7x7": 1,
                "8$8(80848T8j8": 1,
                "9 9(9,9": 1,
                "<2<z<": 1,
                "3X3q3": 1,
                "3!444": 1,
                "5.5g5": 1,
                "7?7n7y7": 1,
                "8@9Z9c9k9": 1,
                ":&:2:J:P:l:z:": 1,
                ":);0;": 1,
                "<S<\\<f<k<r<w<": 1,
                "=V=n=v=~=": 1,
                ">F?L?r?{?": 1,
                "1>3m3y3": 1,
                "3:4F4d4": 1,
                "586F6": 1,
                "858j8{8": 1,
                ";A;u;": 1,
                "<F=v=": 1,
                ">*>\\>b>|>": 1,
                "?-?f?l?": 1,
                "4I4v4": 1,
                "5.5a5": 1,
                "819b9": 1,
                ":%:/:": 1,
                ";2;8;B;": 1,
                ";0\\0k0": 1,
                "4#4H4": 1,
                "5T5X5d5": 1,
                "7 7$7": 1,
                "7/8K8x8": 1,
                "9N9\\9w9": 1,
                ": :&:4:c:": 1,
                ";$;(;^;": 1,
                ";h<N=": 1,
                "=/>5>N>a>": 1,
                "?3?F?": 1,
                "2b2F3[3": 1,
                "4$4R4": 1,
                "6:7h7u7": 1,
                "9>9(;F;": 1,
                "<+=8===F=`=": 1,
                "444c4": 1,
                "7;7\\7": 1,
                "818k8": 1,
                "8t9x9": 1,
                "<7=J=S=^=g=p=y=": 1,
                "> >(>,>4>8>@>D>W>\\>e>u>": 1,
                "?h?n?|?": 1,
                "1`2j2p2": 1,
                "3?4E4R4x4": 1,
                "6?7}7": 1,
                "8!868f8": 1,
                ";d<h<t<x<": 1,
                "= =(=,=4=8=@=D=L=P=b=": 1,
                "=,>0>8><>d>": 1,
                "?6?<?B?j?~?": 1,
                "0D0J0": 1,
                "1N1+222": 1,
                "3J3V3": 1,
                "7T8d8": 1,
                "8I9S9": 1,
                "; <+<B<": 1,
                "0*2.22262:2>2B2F2": 1,
                "6(686>6L6U6f6l6r6": 1,
                "8<9@9H9L9T9X9`9d9l9p9|9": 1,
                ":<:@:H:L:T:X:d:l:p:|:": 1,
                "<#=-=E=Y=^=": 1,
                "=e>9?A?G?t?": 1,
                "0B0e0m0y0}0": 1,
                "404D4H4": 1,
                "565@5F5c5": 1,
                "5k6t6": 1,
                "7'7/777U7s7": 1,
                "8A9e9": 1,
                ":/:5:K:O:U:": 1,
                ":,;I;": 1,
                "<><X<u<": 1,
                "<)=q=": 1,
                "> ?&?.?A?V?x?": 1,
                "0$0)020": 1,
                "5-5b5": 1,
                "7%7>7F7": 1,
                "7)8K8u8{8": 1,
                "9-:3:>:t:x:": 1,
                ":T;X;l;p;|;": 1,
                "=f=w=": 1,
                ">#>M>\\>p>": 1,
                ">#?6?j?p?": 1,
                "7<8@8H8L8T8X8`8d8l8p8": 1,
                "9H:Z:f:l:": 1,
                ";<;D;X;": 1,
                ";$<P<o<x<": 1,
                "=\"=j=": 1,
                "?F?W?j?p?": 1,
                "2L3P3X3\\3d3h3}3": 1,
                "5_8g8m8x8": 1,
                "9?9L9c9x9": 1,
                ":$;I<~<": 1,
                "=I=Q=b=v=": 1,
                "=Q>\\>s>y>": 1,
                "3>3O4S4W4[4_4c4g4k4": 1,
                "6$6J6}6": 1,
                ":,:A;M;S;t;": 1,
                "<S=_=|=": 1,
                "='>F>e>": 1,
                ">Z?h?": 1,
                "031`1f1q1w1}1": 1,
                "9N9`9j9": 1,
                ":,:?:D:\\:l:x:": 1,
                ";*<4<8<@<D<L<P<X<\\<e<": 1,
                ">$?(?0?4?<?@?H?L?": 1,
                "7<7@7H7L7": 1,
                "7S8o8t8": 1,
                "959k9s9x9": 1,
                ":$:E:U:s:t;x;": 1,
                ";$<{<": 1,
                "= =,=0=8=<=D=H=T=X=`=d=l=p=": 1,
                "I0h04282D2H2T2X2": 1,
                "4 4q4": 1,
                "9$9(9": 1,
                "= >F>0?D?\\?": 1,
                "4$4>4": 1,
                "5 545W5": 1,
                "5#6*62686Y6i6": 1,
                "7l7p7": 1,
                "8%8E8": 1,
                "8(9a9h9": 1,
                ":L:P:": 1,
                ";1<<<U<\\<j<p<v<": 1,
                "=E=d=h=": 1,
                "1!393y3": 1,
                "7E8W8": 1,
                "8 9v9}9": 1,
                ":4:8:d;h;p;t;": 1,
                "</<`<": 1,
                "<&=.=": 1,
                "=,>4>=>G>l>v>": 1,
                "?4?s?": 1,
                "0\"0*040F0T0X0a0i0": 1,
                "1!2'2O2": 1,
                "2*3P3": 1,
                "6#7+7M7d7h7n7": 1,
                ":#:p:": 1,
                ";=;L;u;": 1,
                "< <(<,<4<8<D<H<P<T<a<": 1,
                "<4=8=@=D=L=P=X=\\=d=h=p=t=|=": 1,
                ">#>/><>B>\\>`>": 1,
                ">2?V?^?d?z?": 1,
                "0 0$0,00080<0D0H0P0T0d0x0": 1,
                "2j2r2x2": 1,
                "3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3": 1,
                "4b4h4s4": 1,
                "4*535i5": 1,
                "71888I8i8{8": 1,
                "94989": 1,
                ":2:H:": 1,
                ">l>r>x>": 1,
                "H0T0X0i0": 1,
                "101x1": 1,
                "212|2": 1,
                "3#3;3": 1,
                "657X7`7": 1,
                "9D9H9": 1,
                ":+;t;x;": 1,
                "<.<5<;<L<S<b<}<": 1,
                "=C=[=": 1,
                "6a7p7v7": 1,
                "8'8-898D8I8X8": 1,
                ":#:_:": 1,
                ";2;<;P;Z;": 1,
                "<9<D<g<": 1,
                "=D=H=T=X=": 1,
                "=)>/>": 1,
                "1'1.141N1Z1a1w1": 1,
                "1b3\\4`4l4p4|4": 1,
                "5A5H5P5]5r5": 1,
                "8C8]8": 1,
                "9!9:9s:#;N;c;": 1,
                "='=-=T=": 1,
                "?-?;?U?": 1,
                "0/0Q0n0~0": 1,
                "0:1J1]1v1": 1,
                "1;2\\2": 1,
                "2N3o3z3": 1,
                "3-494l4p4x4|4": 1,
                "6+656<6E6Q6V6]6h6o6x6": 1,
                "7,797?7I7O7Z7u7{7": 1,
                "7z9p:t:x:|:": 1,
                ":$;7;H;": 1,
                "<5=a=w=": 1,
                ">1>7>": 1,
                "0(0L0P0": 1,
                "1 1j1s1": 1,
                "2\"2+22292Q2h2": 1,
                "3f3s3": 1,
                "44484k4": 1,
                "7.7n7": 1,
                ";/;d;": 1,
                ";!<'<": 1,
                "=(=0=C=": 1,
                "8.8d8t8": 1,
                "<a>g>y>": 1,
                "?(?B?": 1,
                "0P0e0": 1,
                "3>3J3P3j3": 1,
                "34484@4D4": 1,
                "8G8T80989<9": 1,
                "7\"7*7/7:7@7": 1,
                "8!8&8/858<8B8H8O8w8": 1,
                "809G9e9n9": 1,
                ":N:w:": 1,
                "</=5===B=G=L=w=": 1,
                ">k>s>z>": 1,
                "373F3]3o3": 1,
                "3!4)4a4g4r4z4": 1,
                "4\"585M5^5": 1,
                "6K6X6f6": 1,
                "919E9K9X9b9i9": 1,
                "9):9:": 1,
                ":=;M;": 1,
                "<f<n<v<|<": 1,
                "=&=4===G=T=_=h=w=": 1,
                "=2>V>]>e>": 1,
                ">\"?,?8?@?J?_?": 1,
                "2)3~3": 1,
                "4 5'5": 1,
                "5Q6V6": 1,
                "8!8q8": 1,
                "8>9F9": 1,
                "9 :(:.:4:E:b:": 1,
                "3$4(494Z4": 1,
                "<$<(<0<4<<<@<": 1,
                "475D5H5P5T5_5": 1,
                "6'6J6P6[6b6": 1,
                "9(:J:\\:u:": 1,
                "74787": 1,
                ";%<u<": 1,
                "=I=X=": 1,
                "=,>0>8><>D>H>": 1,
                "10161;1": 1,
                "4/4>4J4V4": 1,
                "4/575=5i5o5z5": 1,
                "929C9": 1,
                ": :+:1:D:Q:W:]:e:p:": 1,
                ";D;W;];i;u;": 1,
                "<->l>": 1,
                "627F7R7.8": 1,
                ";K<`<": 1,
                ">->3><>D>L>R>Z>u>": 1,
                "?$?(?9?]?u?~?": 1,
                "80J0[0": 1,
                "0h1q1w1": 1,
                "3D4H4P4T4\\4`4h4l4": 1,
                "5N6T6u6{6": 1,
                "677|7": 1,
                "838L8i8": 1,
                "9/9b9": 1,
                "92:W:n:": 1,
                ";L;\\;};": 1,
                "<7<g=": 1,
                ">4>8>@>D>": 1,
                ">L?P?X?\\?": 1,
                "091g1v1": 1,
                "1T2X2`2d2l2p2x2|2": 1,
                "9\"<7<P<_<": 1,
                "<X>r>": 1,
                "2X3g3": 1,
                "3^4d4o4u4{4": 1,
                "9Y9d9p9t9|9": 1,
                "9C:Q:^:": 1,
                ";b;i;o;u;z;B<R=": 1,
                "2)222:2X2&424n4": 1,
                "<,<S<": 1,
                "=V=f=": 1,
                "0A1a1": 1,
                "1Z598": 1,
                "<'<4<Q<{=[>??": 1,
                "4d5m6}6": 1,
                "<Z<c<k<": 1,
                "<W>m>": 1,
                ">Y?n?": 1,
                "K0Z0c0h0X1": 1,
                "7R7j7": 1,
                "<1===E=": 1,
                "=\">4>\\?h?": 1,
                "0+080L0|0-1~1": 1,
                "1a2i2": 1,
                "3A3\\3": 1,
                "3J4R4^4f4": 1,
                "5#555B5": 1,
                "5=6N6W6^6v6": 1,
                "7,7?7E7P7k7": 1,
                "8$858F8V8j8": 1,
                "9(:0:": 1,
                ":S;_;q;};": 1,
                ";,<F<R<": 1,
                "=\\=o=w=": 1,
                "=\">b>": 1,
                "?B?H?": 1,
                "$00080_0w0": 1,
                "3)393;4I4": 1,
                "5$545": 1,
                "6L7k7": 1,
                "9/:L:W:e:u:": 1,
                ":1;G;[;": 1,
                "=`>i>o>|>": 1,
                "?`?f?": 1,
                "2%292B2I2T2x2": 1,
                "393^3": 1,
                "4$404": 1,
                "5-5s5": 1,
                "6g7}7": 1,
                "7=8Y8e8": 1,
                "859@9H9": 1,
                ":^:n:": 1,
                ";2;L;": 1,
                "<h<y<": 1,
                "=-=8=L=": 1,
                ">G>i>": 1,
                "0'1`1": 1,
                "2(2.292A2": 1,
                "2/3}3": 1,
                "4%474C4S4v4": 1,
                "6#6(6@6j6": 1,
                "8'878B8u8": 1,
                ";5<g<": 1,
                "</=7=?=G=O=o=w=": 1,
                ">;>`>o>}>": 1,
                ">9?J?w?": 1,
                "0&020E0Q0d0q0": 1,
                "001Q1c1i1z1": 1,
                "2\"23282Q2r2": 1,
                "3%3*3C3V3": 1,
                "3$4F4T4_4{4": 1,
                "5-6;6U6": 1,
                "8*858Q8]8f8l8s8y8": 1,
                ";,;w;V<w<": 1,
                "<$=H=": 1,
                ">&>,>1>D>a>t>": 1,
                "?H?\\?i?{?": 1,
                "1.1T1h1": 1,
                "2#262": 1,
                "4E4M4": 1,
                "4$5P5~5%6C6K6": 1,
                "7Q7b7l7": 1,
                "8J9_9": 1,
                ":&:4:^:g:o:": 1,
                ";#;*;0;=;Z;e;l;r;": 1,
                ";6<U<]<b<h<x<": 1,
                "=>=K=|=": 1,
                ">9>h>}>": 1,
                "\"0O0Y0e0q0": 1,
                "1$1Y1": 1,
                "1R2[2": 1,
                "3!353D3g3T4": 1,
                "5*555G5R5W5a5q5": 1,
                "6!6(646;6J6i6u6": 1,
                "7$7/7;7E7N7X7d7n7y7": 1,
                "8$878@8G8M8Y8_8l8y8": 1,
                "8H9N9a9g9": 1,
                ":3:D:m:}:": 1,
                ":5;D;T;": 1,
                "2%2H2q2": 1,
                "595V5": 1,
                "6F6L6R6": 1,
                "657G7M7": 1,
                "8$9*959": 1,
                ":):7:Y:r:": 1,
                "<#<6<": 1,
                "<2=m=t>K?V?": 1,
                "1b2r2x2": 1,
                "2Q3~3": 1,
                "40454t4}4": 1,
                "6:6L6x6": 1,
                "7d8k8": 1,
                "9#9'9+9/939e>p>": 1,
                "4L4R4X4h4": 1,
                "6'6<6Q6f6{6": 1,
                "9+9H9": 1,
                "<m<u<}<": 1,
                "N0!1b3": 1,
                "3_4k5": 1,
                "6,6L6P6\\6`6l6p6|6": 1,
                "1 1$1,10181<1d1h1p1t1|1": 1,
                "2 2,2<2@2H2L2T2X2d2h2t2x2": 1,
                "3T3X3d3h3t3x3": 1,
                "4,404<4@4t4x4": 1,
                "5$5(5\\5`5x5": 1,
                "6 6D6H6\\6`6": 1,
                "7$7(74787D7H7T7X7`7d7l7p7|7": 1,
                "80888<8H8P8T8t8x8": 1,
                "9 9(9,9L9P9t9x9": 1,
                ": :$:,:0:8:<:D:H:P:T:\\:`:h:l:t:x:": 1,
                ";$;(;4;8;D;H;P;T;\\;`;l;p;|;": 1,
                "=,=0=8=<=L=P=X=\\=": 1,
                "> >,>0><>@>L>P>\\>`>x>": 1,
                "? ?0?@?P?`?": 1,
                "0$0(0<0@0H0L0T0X0d0h0p0t0|0": 1,
                "1$1(14181": 1,
                "4\\5`5l5p5|5": 1,
                "6$6(60646<6@6L6P6X6\\6": 1,
                "74787T7X7|7": 1,
                "8$8(8l8p8": 1,
                "93:?:": 1,
                ";G<K<": 1,
                "=!=-=~=": 1,
                "0\"030": 1,
                "9;;H;": 1,
                "253H3e3": 1,
                "4b5(6@6r6": 1,
                "9q:x:": 1,
                "?d?n?": 1,
                "2'202U2^2": 1,
                "2O3W3c3l3v3": 1,
                "414~4": 1,
                "5`5g5": 1,
                "6+7I7T7": 1,
                "8.9n9s9x9": 1,
                "9X:l:": 1,
                ";<;A;W;": 1,
                "5U5[5": 1,
                "6M6w9": 1,
                ";6;{;": 1,
                "7D8L8Z8": 1,
                "; ;I>": 1,
                ":%:):1:X:": 1,
                "<)<U=o=": 1,
                ">(>.>5>m>": 1,
                "?A?G?e?": 1,
                "051]1": 1,
                "1)242e2@3": 1,
                "4_5m5": 1,
                "5c8l8": 1,
                "8*949w9": 1,
                ":L;W;`;": 1,
                "<6<[<b<{<": 1,
                "?4?B?J?W?h?w?": 1,
                "050=0D0j0": 1,
                "1<1V1c1k1q1y1": 1,
                "2U2j2": 1,
                "5v617": 1,
                "849;9K9l9": 1,
                ":;:@:t:": 1,
                ":D;H;c;h;": 1,
                "<\"=1=": 1,
                ">!?|?": 1,
                "0&0.060E0M0U0d0l0t0": 1,
                "1 1-1P1h1v1|1": 1,
                "1'212@2": 1,
                "323J3T3i3": 1,
                "3.474H4": 1,
                "6*686X6f6": 1,
                "6#888D8": 1,
                ":4;H;a;": 1,
                "<,<K<_<r<": 1,
                "=(=D=i=o=": 1,
                "011T1|1": 1,
                ":U:t:": 1,
                "1 141<1G1": 1,
                "4K4[4": 1,
                "5y5,606C6j6": 1,
                "6<7X7a7": 1,
                "0+0d0": 1,
                "1Z1c1p1v1": 1,
                "3>3z3": 1,
                "3-434J4X4": 1,
                "6>7}7": 1,
                ":+:5:;:E:w:": 1,
                ";+;3;9;X;l;": 1,
                "0)010k0": 1,
                "1 1+1h1": 1,
                "262;2": 1,
                "3 3U3o3x3": 1,
                "4$4L4_4i4{4": 1,
                "6\"696": 1,
                "7\"717v7": 1,
                "8#8>8": 1,
                "9\\9e9p9v9": 1,
                ":/:;:": 1,
                "=>=M=^=b=w=": 1,
                ">8>n>": 1,
                "?2?U?_?q?": 1,
                "0!0B0_0e0": 1,
                "11171>1": 1,
                "2#2c2": 1,
                "2.3G3p3": 1,
                "7S8o8": 1,
                "939U9": 1,
                "92:::Y:a:": 1,
                "=)>/>P>b>h>n>": 1,
                "?#?)?1?=?\\?d?j?w?": 1,
                ".0o0w0;1W142G2": 1,
                "4,444:4D4O4U4^4c4": 1,
                "6#6+626A6^6d6s6": 1,
                "767@7W7]7d7k7t7": 1,
                "818;8@8S8e8": 1,
                "9G9a9w9": 1,
                "95:;:@:W:\\:": 1,
                ";%;6;F;P;`;h;": 1,
                ";#<X<k<": 1,
                "=<=D=": 1,
                ">@>^>": 1,
                "4.4N4W4`4v4": 1,
                "8Q8Z8b8i8": 1,
                "9 9&9-9M9j9p9|9": 1,
                ":.;S;": 1,
                "?2?n?": 1,
                "111M1": 1,
                "1.282": 1,
                "3#3:3F3Q3Z3": 1,
                "3\"404=4x4": 1,
                "6(6l6p6x6|6": 1,
                "6G7k7": 1,
                "8E9m:": 1,
                "?]?o?": 1,
                "1W1l1": 1,
                "2'2I2l2": 1,
                "3&3G3g3": 1,
                "4>4M4j4": 1,
                "4'535": 1,
                "5C6|6": 1,
                "6R7E8Q8": 1,
                ":):1:9:B:J:R:`:": 1,
                ";6<><O<U<": 1,
                "<\"=4=L=": 1,
                "1c1n1v1": 1,
                "639;9Q9l9q9v9{9": 1,
                ":):;:`;o;": 1,
                ";)<1<t<": 1,
                "=N>s>": 1,
                "?\"?(?.?4?=?J?": 1,
                "090?0": 1,
                "3!4R4l4": 1,
                "4,515@5]5h5~5": 1,
                "3l3\\5": 1,
                "=%='>": 1,
                "465\\5": 1,
                "8'8/8W8d8": 1,
                "8N:Y:": 1,
                "0)0=0b0>1]1t1}1": 1,
                "4\"4$5(5": 1,
                "7.7I98:M:b:": 1,
                ">L?Q?": 1,
                "0 020Z0`0": 1,
                "0B1T1X1": 1,
                "1y2~2": 1,
                "3$4.4C4w4": 1,
                "6-7l7p7x7|7": 1,
                "9+93999>9Z9|9": 1,
                ":\";?;n;": 1,
                "<$<W<^<j<o<~<": 1,
                "=!=-=2=A=K=V=i=s=": 1,
                ">\">*>5>E>S>]>m>}>": 1,
                "0[1g1l1z1": 1,
                "1C2O2T2f2p2{2": 1,
                "223>3C3R3\\3g3q3{3": 1,
                "4\"4'454?4J4]4g4w4": 1,
                "5\"5-5:5D5T5a5": 1,
                "6#6(6@6L6X6f6p6z6": 1,
                "9`9l9q9z9": 1,
                "=]>e>": 1,
                "7?7V7`7": 1,
                "?=?M?": 1,
                "1.1T1b1h1s1": 1,
                "2^3v3": 1,
                "3D4s4}4": 1,
                "5!5(545G5Q5\\5|5": 1,
                "6-7@7F7Z7s7": 1,
                "8W8]8h8p8": 1,
                "9/969=9B9J9": 1,
                ":&;<;C;": 1,
                "</<P=k=": 1,
                "?%?A?P?": 1,
                "4U5r5": 1,
                "6=6Z6z6": 1,
                "2\"3e3o3!4-4": 1,
                "5M6_6q6": 1,
                "7+7=7O7a7y7": 1,
                "7D8K8R8Y8": 1,
                "=-=A=U=i=}=": 1,
                "=,>^>": 1,
                "?(?5?;?z?": 1,
                "0#0r0": 1,
                "5C5^5": 1,
                "767I7S7": 1,
                "8F8T8i8": 1,
                "8K9Q9_9t9I;O;c;": 1,
                ";.<<<N<S<": 1,
                "?%?3?R?h?": 1,
                "0J0^0": 1,
                "1+131Q1p1": 1,
                "2(2.2l2r2x2": 1,
                "3+414A4N4T4": 1,
                "5$5+5E5K5Q5": 1,
                "6\"6.6o6~6": 1,
                "6h7n7t7": 1,
                "8!808F8V8j8": 1,
                "9*90959E9T9h9|9": 1,
                ":5:D:]:j:~:": 1,
                ";?;H;N;": 1,
                "<;<|<": 1,
                ">.>S>\\>e>n>": 1,
                "?4?@?M?": 1,
                "1&1+111": 1,
                "1'2<2T2": 1,
                "2O3U3y3": 1,
                "384A4": 1,
                "646A6k6": 1,
                "9+9?9Q9": 1,
                ";P;r;": 1,
                "<0===M=S=j=": 1,
                "=?>W>i>x>": 1,
                "1$1/1;1L1W1a1": 1,
                "4F4c4u4": 1,
                "5S6[6g6m6": 1,
                "687N7Y7j7": 1,
                "8 8x8": 1,
                "9\"919D9Z9q9}9": 1,
                ":8:@:T:(;0;4;<;@;D;L;P;T;X;\\;`;d;h;l;p;x;|;": 1,
                "=h=l=p=t=x=|=": 1,
                ">(>0>8>@>H>P>X>`>h>p>x>": 1,
                "? ?(?0?8?@?H?P?`?h?p?x?": 1,
                "0 0(00080@0H0P0X0`0x0|0": 1,
                "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1": 2,
                "3\\3`3P4T4X4\\4`4d4": 1,
                "9,9<9": 1,
                ";$<4<8<@<D<H<L<": 1,
                "1 1$1,141<1D1L1T1\\1d1l1t1|1": 1,
                "3$3,343<3D3L3T3\\3d3l3t3|3": 1,
                "4$4,444<4D4L4T4\\4d4l4t4|4": 1,
                "5$5,545<5D5L5T5\\5d5l5t5|5": 1,
                "6$6,646<6D6L6T6\\6d6l6t6|6": 1,
                "=c>b?": 1,
                "4D8K8~8": 1,
                "8u:L<X<": 1,
                "2&3F3": 1,
                "1C3I3": 1,
                "4D4~4": 1,
                ";k<s<": 1,
                "0(0F0": 1,
                "1'1-13181E1[1a1f1k1": 1,
                "2K3s3": 1,
                "8L9T9": 1,
                ">*?K?": 1,
                "2%2.2@2": 1,
                "6(6>8J8": 1,
                ":!;&;": 1,
                "=/>O>": 1,
                "?%?>?Q?Y?_?i?n?": 1,
                "3;4C4y4": 1,
                "535X5h5~5": 1,
                "7;8Y8": 1,
                "8G9\\9|9": 1,
                ":5;><": 1,
                "=M=f=": 1,
                ">=?K?s?": 1,
                "2V2y2": 1,
                "2E3x3": 1,
                "8(:?:": 1,
                ">>>o>": 1,
                "?#?'?+?/?3?7?;???C?G?K?O?S?W?[?_?c?": 1,
                "3.4|4": 1,
                "6O6X6": 1,
                "9d:n:": 1,
                "(1H1j1": 1,
                "1\\2k2}2": 1,
                "717s7Q8`8": 1,
                "9>9$:": 1,
                "0<0X0": 1,
                "6\\7`7": 1,
                "9D96;": 1,
                "0'1W1": 1,
                "4}596e6": 1,
                "<0<A<": 1,
                "1T2Z2|2": 1,
                "6e7N8": 1,
                "1\"1&1*1.12161B1M1~2": 1,
                "7>8g8": 1,
                ":%;7;l;q<g=w=": 1,
                "6/6X6": 1,
                "=>=g=": 1,
                "1>4g4": 1,
                "+050[0h0": 1,
                "3.3<5`5": 1,
                ":E;d;": 1,
                "<2<q<": 1,
                "<[>h>": 1,
                "?c?i?o?": 1,
                "0-1v1": 1,
                "2,3k4": 1,
                "8c9x:": 1,
                ":0b0s0": 1,
                "1.1g1P2Y2": 1,
                "4'5Q7": 1,
                "=1>E>Y>": 1,
                "5&5Z5n5u5Y7": 1,
                "3;3m3u3": 1,
                "6!6f6o6": 1,
                "0 0+040I0Q0": 1,
                "1$1,141<1D1L1": 1,
                "3#3'3+3/33373;3?3C3G3K3O3S3W3[3_3c3g3k3o3s3w3{3": 1,
                "4'424=4H4S4^4i4t4": 1,
                "5 5+565A5L5W5b5m5x5": 1,
                "7!7,777B7M7X7c7n7y7": 1,
                "8 8N8e9": 1,
                ">!?P?p?": 1,
                " 0_0U1": 1,
                "3\"3&3*3.323F3": 1,
                "657p8": 1,
                "9O:3<": 1,
                "=,=V=": 1,
                "=$>L>`>": 1,
                "333]3#4e4": 1,
                "4I5u5": 1,
                "5:6D6{6": 1,
                ":=;M;^;n<x<": 1,
                "30C0R2r2": 1,
                "819c<": 1,
                "141E1`1": 1,
                "2=3l3t3": 1,
                "6'6,6N6\\6": 1,
                "7-8=8K8j8": 1,
                ":5:@:I:R:a:n:t:": 1,
                ";$;8;H;i;u;": 1,
                ";'<|<": 1,
                "=A=P=[=|=": 1,
                "5/6]6}6": 1,
                "6(7;7\\7n7": 1,
                "9 ;0;E;R;": 1,
                "<f=B>": 1,
                "1X1o1": 1,
                "2(2`2": 1,
                "4F7K7P7": 1,
                ">L>V>[>": 1,
                "<B?{?": 1,
                "000D0Y0k0s0{0+2?2D2U2": 1,
                "8Y:D<": 1,
                "0?0I0Q0[0`0": 1,
                "5,666T6Z6": 1,
                "5W6q6~6": 1,
                "6&7v7": 1,
                "0 0$0(0,0004080<0@0": 1,
                "242[2": 1,
                "2 3*3": 1,
                "67647": 1,
                ";$<?<r<": 1,
                "?*?Q?v?": 1,
                "5#6I6+9U9": 1,
                "0=1K1": 1,
                "1.262A2": 1,
                "3I4R4T5_5{5N6": 1,
                "7J7w7": 1,
                ":f:X;": 1,
                "4T4`4 5;6f6Y7u7": 1,
                "8G9v9": 1,
                "=T?t?": 1,
                "2%2<2!3": 1,
                "^1<6I6R6b6": 1,
                "7K7Y7e7k7z7": 1,
                "7M9j9w:": 1,
                "2l4x4": 1,
                ">8?D?P?Y?": 1,
                "425e5j5o5B6f6": 1,
                "6B7H7Z7": 1,
                "9-:I:": 1,
                "011R1": 1,
                "515}5": 1,
                "9&=/===": 1,
                "=$>?>": 1,
                ">w?}?": 1,
                "4s4y4": 1,
                "5#575=5r5n6~6": 1,
                "7>7v7": 1,
                "9.9P9": 1,
                "99:b:": 1,
                "<6=V=": 1,
                ">&>.>q>": 1,
                "=&=A=": 1,
                "?E?f?": 1,
                "0U0Y0]0a0e0i0m0q0u0y0}0": 1,
                "1_2q3": 1,
                "7r829": 1,
                "<S=o=": 1,
                "='>T>": 1,
                "X1[3a3": 1,
                "7/7O7Q8": 1,
                "9-;k;|;M<": 1,
                "7L:{:": 1,
                ":{;N=": 1,
                "3*3?3": 1,
                "5L6g6": 1,
                ":D:D;a;p;": 1,
                "4\"4D4i4": 1,
                "6\"6,6": 1,
                "7+727": 1,
                "<3<q<": 1,
                "0T1^1r1|1": 1,
                "4F4M4": 1,
                "5`5i5q5": 1,
                "6.666J6n7i8": 1,
                "8D9b9": 1,
                "=8>?>e>": 1,
                "0{1U2": 1,
                "9d:r:": 1,
                "1U5j6p6": 1,
                "7'7n7": 1,
                "809O9": 1,
                ";:>l?": 1,
                "0A1d1j1t1+3": 1,
                "9L:f:u:": 1,
                "= =E=^=": 1,
                "3Z4k6": 1,
                "687A7": 1,
                "8P8V8": 1,
                "=7=D=": 1,
                "=C>G?": 1,
                "1B1q1": 1,
                "2:2{2": 1,
                "203c3": 1,
                "324w4": 1,
                "4\"5U5": 1,
                "5@6S6e6q6": 1,
                "7 7$7(7,7074787<7@7D7H7X7": 1,
                "7(8k8": 1,
                "999h9": 1,
                ";\";&;:;@;": 1,
                "=#=0=a=z=": 1,
                "0#0Q0": 1,
                "6B6Z6": 1,
                "7=8B8": 1,
                "=?>E>c>u>": 1,
                "2^3c3": 1,
                "7a9g9]:J;R=": 1,
                "=#>.>9>N>a>r>": 1,
                ">Q?w?~?": 1,
                "0#0*070=0": 1,
                "1;1b1k1p1|1": 1,
                ">#>;>L>[>f>": 1,
                "? ?9?D?": 1,
                "40a0|0[2": 1,
                ";V;f;o;": 1,
                "<*=1=": 1,
                "8-9:9S9": 1,
                "3[3O4h4": 1,
                ":#;);A;": 1,
                "0 0$0(0,0004080<0~0a3": 1,
                "8-8D8\\8t8": 1,
                "8H9M9": 1,
                ";B<^=D>": 1,
                "3]4n4t4~4I6": 1,
                ":I={=": 1,
                "041y1": 1,
                "7.7g73<": 1,
                ">N?a?": 1,
                "5-6B6": 1,
                "7e8q8": 1,
                "8*929:9K9Y9": 1,
                ";b=h=": 1,
                "2%313+4": 1,
                "6H6N6": 1,
                ":^;h;": 1,
                "<9<Q<i<": 1,
                "020+111": 1,
                "7-777J7": 1,
                ":4;8;<;B;*<": 1,
                ">D>I>": 1,
                "0+5D5\\5": 1,
                "778d8": 1,
                "=-=7=<=E=": 1,
                ">@?L?T?s?": 1,
                "3n3x3": 1,
                "9 :w:": 1,
                ":%;9;l;": 1,
                "=<>L>Z>n>|>": 1,
                ">5?S?": 1,
                "0-131P1i1r1": 1,
                "1o2y2": 1,
                "5/6M6h6|6": 1,
                "627_7": 1,
                ";%;*;0;5;:;_;": 1,
                "2&202": 1,
                "6P8q8": 1,
                "9%<5<": 1,
                "6t7~7": 1,
                "8=:\\:f:": 1,
                "?[?l?": 1,
                "0^1o1": 1,
                "3^3j3": 1,
                "3H4X4": 1,
                "4F5t5": 1,
                "6B9]9):@:": 1,
                "=a>i>}>": 1,
                "3$4/4<4": 1,
                "=&>T>e>B?": 1,
                "0)1M1k1": 1,
                "6\"616;6": 1,
                "7N8R8V8Z8^8b8f8j8n8B9": 1,
                "; ;$;(;,;0;4;": 1,
                "3$4C4": 1,
                "4@6h6": 1,
                "6`7o7": 1,
                "8*8;8E8W8_8g8": 1,
                "=-=A=": 1,
                "=c>i>": 1,
                "7%8[8": 1,
                "=k=f>": 1,
                "1)2;2F2N2": 1,
                "9;:K:": 1,
                ":0;L;": 1,
                "<->M>": 1,
                "4!5y5": 1,
                "7+8u8": 1,
                "<+=!>": 1,
                "5)5}5": 1,
                "8A8d8": 1,
                "8d9z9U:": 1,
                ":A;`;": 1,
                ";@<i<": 1,
                "2_3d3": 1,
                "4s4*727K7V7": 1,
                "; =(=": 1,
                "=P>Y>|>": 1,
                "6T7,8q8": 1,
                ":+;5;]=b=": 1,
                ">,>9>L>": 1,
                "?A?d?": 1,
                "1D2F3d3": 1,
                "90999S9d9u9": 1,
                "9f:w:|:": 1,
                ";$;?;E;K;U;h;w;": 1,
                "<P<V<\\<m<s<": 1,
                "1*131c1": 1,
                "2?2e2": 1,
                "4(414:4C4K4a4": 1,
                "5!5X5": 1,
                "6 6+6/656;6@6M6": 1,
                ";!;W;g;": 1,
                "<1<]<v<": 1,
                ">9>F>": 1,
                "?K?V?d?p?": 1,
                "0@0E0O0T0Z0e0": 1,
                "5#6(6": 1,
                "6#7d7": 1,
                ":#;1;P;y;": 1,
                "<f<y=": 1,
                "1'272c2": 1,
                "3!3<3S4": 1,
                "485H5T5`5i5s5": 1,
                "6&6C6O6`6}6": 1,
                "9Q9]9m9": 1,
                "9M:M<Y<e<": 1,
                "=3=[=h=": 1,
                "=/>B>": 1,
                "?0?Y?e?": 1,
                "607u7": 1,
                "030p0": 1,
                "8-97:d:E;": 1,
                "04181<1@1D1H1L1T1X1\\1`1d1": 1,
                "6_7r7y7": 1,
                "8+8i:q:v:{:": 1,
                ";1;e<": 1,
                "<(=}=": 1,
                "0/1N1": 1,
                "2:3x3": 1,
                "6c7n7w7": 1,
                "8(:N:>;": 1,
                "<Y=l=": 1,
                "?!?<?c?": 1,
                "3-3I3B4X4": 1,
                "<Z=`=": 1,
                "3@5R5": 1,
                ":A;k;": 1,
                "=I=T=": 1,
                "7Z7n7": 1,
                "7M8s8": 1,
                "052t2": 1,
                "7-7u8": 1,
                "889^9v9": 1,
                "9D:S:3>O?": 1,
                "e4i4m4q4u4y4}4": 1,
                "8~93:\\:": 1,
                "?$?,?": 1,
                "0O0k0": 1,
                "1X2e2": 1,
                "2,383=3C3P3V3[3`38516W6": 1,
                "7;8Q8W8a8h8": 1,
                ":2:U:[:\";": 1,
                ";N<x<": 1,
                "7!7+7": 1,
                "0B2}2": 1,
                "7R8K9^9": 1,
                ";0;X;w;": 1,
                ";0<c<": 1,
                "1&1^1T2a2{2": 1,
                "3M4M5^5c5h5m5r5w5|5": 1,
                "6#6)6/656;6A6F6": 1,
                "6r:i;": 1,
                "<%<0<E<N<V<c<l<u<}<": 1,
                "=/>;>Q>9?>?G?M?Q?W?[?a?e?k?o?u?y?": 1,
                "1+11161": 1,
                "233D3k3q3": 1,
                "3H4L4]4j4~4": 1,
                "4e5o5w5": 1,
                "646K8": 1,
                "1+1R1": 1,
                "2G3y3": 1,
                "6@9X9": 1,
                "1X2s2": 1,
                "5)656c6}6": 1,
                "757d7": 1,
                ":2:F:m:": 1,
                "?)?4?": 1,
                "081s1": 1,
                "2(202": 1,
                "=1>H>": 1,
                ">1>F>X>^>u>": 1,
                ">+?V?": 1,
                "0 2p2": 1,
                "4B4I4Z4": 1,
                "3&3/383": 1,
                "4 4&4,474<4F4L4R4X4d4k4t4}4": 1,
                "6$6*60656{6": 1,
                "6U9Z9": 1,
                ">P?u?": 1,
                "1!3>3\\3r3": 1,
                "7&838": 1,
                ": :%:0:5:I:N:b:g:z:": 1,
                "=L=Z=": 1,
                "3/3y3": 1,
                "4c5g5q5~5": 1,
                "6,6=6": 1,
                "7\"9'9/95999?9C9I9M9S9W9v9": 1,
                ";$;0;~;": 1,
                "=+>?>": 1,
                ">*?U?Z?_?h?n?r?x?|?": 1,
                "071<1A1J1P1T1Z1^1d1h1n1r1x1|1": 1,
                "4P4_5e5p5w5": 1,
                "6L7g7K8[8e8o8v8}8": 1,
                ">P>T>X>\\>`>d>h>l>p>t>x>|>": 1,
                "3G4r4": 1,
                "565s5y5": 1,
                "5I6m6s6": 1,
                "8':r:": 1,
                "0W1i1": 1,
                "7v8N9": 1,
                "?G?r?": 1,
                "1-2X2": 1,
                "3,3k3": 1,
                "4?4j4": 1,
                "636A6": 1,
                "8*9H9": 1,
                ":&:3:": 1,
                ";%;-;Z;f;": 1,
                "0%181c1t1": 1,
                "(0]0e0": 1,
                "5!5M5X5[6": 1,
                "7'8G8Z8r8": 1,
                "=%=m?y?": 1,
                "081E1S1g2}2": 1,
                "495l5*6": 1,
                "628h8": 1,
                "<;=A=O=Z=": 1,
                "0K1'2U2": 1,
                "4;7d7": 1,
                "7h8=9N:": 1,
                ":&;N=": 1,
                "0&060": 1,
                "3B3^3m3w3": 1,
                "3 515": 1,
                "7%8J:i:o:": 1,
                "=2?B?": 1,
                "1;2e2": 1,
                "3!4A4`4": 1,
                "5*5@5X5`5h5p5x5": 1,
                "6,72787": 1,
                ":(:U:": 1,
                "=&=,=8===": 1,
                "464;4A4.5": 1,
                "7=8E8_8d8p8-9V9-:=<": 1,
                "6!7=7p7": 1,
                "?#?+?2?L?": 1,
                "0 1e1": 1,
                "898i8x8~8": 1,
                "9$949A9": 1,
                "9>:^:": 1,
                ";#;';+;/;3;7;;;?;C;G;{;@<T<Z<": 1,
                "?!?)?": 1,
                "1O2l2": 1,
                "2[3c3": 1,
                "7 8I8": 1,
                "9':L:": 1,
                ":3;U;": 1,
                "<*=~=": 1,
                "434P4p4w4": 1,
                "6Z6r6L7": 1,
                "6\"6L6}6": 1,
                "0S1o2": 1,
                "2#3J3": 1,
                "7:7O7p7": 1,
                "8^8s8": 1,
                "8#9=9]9": 1,
                ":.:8:[:": 1,
                "929`9": 1,
                ";;<Q<": 1,
                "=&>i>": 1,
                "'0L0r0d1": 1,
                "<;=Z=": 1,
                "> >%>": 1,
                ">C?_?": 1,
                "7;849J9": 1,
                ">\"?C?q?": 1,
                "2)3F3]3": 1,
                "3p4x4": 1,
                "6)636=6G6T6^6q6": 1,
                "$0P0s0~0": 1,
                "1E1a1": 1,
                "5+505": 1,
                "8-8C8": 1,
                "0O1Y1": 1,
                ":><G<N<h<p<w<": 1,
                "<V=b=p=": 1,
                ">)>6>>>K>X>`>r>": 1,
                ">m?}?": 1,
                "4o5u5{5": 1,
                "7I8R8Z8": 1,
                "8A9j9I;^;g<": 1,
                ">$?,?<?D?": 1,
                "1%2.2": 1,
                "2<3G3R3Z3?4E4": 1,
                "6'6/656;6": 1,
                "1)1B4": 1,
                "6$646D6<8]8c8k8": 1,
                "8`9i9": 1,
                ":-:>:L:o:": 1,
                ":3;O;": 1,
                ">O>h>": 1,
                ">#?V?": 1,
                "1)111t1": 1,
                "2Q3w3": 1,
                "8 8&8.838": 1,
                "8#939": 1,
                ":];e;": 1,
                "0d2|2": 1,
                "3(393": 1,
                "5&606P6": 1,
                "9L9]9n9": 1,
                "?!?K?T?n?": 1,
                ":#:::": 1,
                ";!;.;B;a;t;": 1,
                ";Z<C=T=": 1,
                "151F2": 1,
                "233U3": 1,
                "3J4]4e436Q6&7": 1,
                "<c=B>": 1,
                "0T1Z1": 1,
                "8u9C:": 1,
                "90@1@2": 1,
                "5,6N6": 1,
                "8f8d9": 1,
                "7,8T8": 1,
                "9D9n9": 1,
                "<#<)</<]<l<": 1,
                "=-=4=": 1,
                ">)?9?d?k?u?": 1,
                "2Q2e2{2": 1,
                "3$3@3Q3b3": 1,
                "4/454G4P4\\4e4": 1,
                ";.<4<": 1,
                "<D=J=f=": 1,
                "W0[1J2B3": 1,
                "6P7t7": 1,
                "8Z9`9": 1,
                "0n1}1": 1,
                "3i3u3+474": 1,
                ";M<{<": 1,
                "=l=|=": 1,
                "6#6e6v6": 1,
                "697?7J7V8": 1,
                ";_;e;": 1,
                "=l=r=": 1,
                "3 5Q5|5": 1,
                "516G6": 1,
                "4091D1Q2_2": 1,
                "2Y3g3": 1,
                "7Z:g:": 1,
                "3U3f3q3": 1,
                "4B4=9": 1,
                "7+7e7": 1,
                ":%;^;": 1,
                ">&?4?B?": 1,
                "1(101": 1,
                "4/4:4J5g5": 1,
                ";!>'>": 1,
                "4S4U6": 1,
                "7*909;9A9": 1,
                "9':^:": 1,
                ">B?S?": 1,
                "070A0g0": 1,
                "0!1N1d1": 1,
                "4/4B6S6": 1,
                "849@9D9Q9": 1,
                "=m=p>": 1,
                "0014181<1@1D1H1L1P1n1": 1,
                "1+2<2b2": 1,
                "2&3I3}3#4": 1,
                ";n<x<N=a=": 1,
                "1e2\"3E4": 1,
                "3&3[5u5": 1,
                "7'8-8P8`8}8": 1,
                "8`9f9": 1,
                "2)3(4.4<4": 1,
                "5F5Q5q5w5{5": 1,
                "9+969y9": 1,
                "1Y1u1": 1,
                "282c2s2": 1,
                "3.4?4g4": 1,
                "4#525A5P5": 1,
                "6:7M7": 1,
                "7O:`:": 1,
                ";3;C;Q;j;": 1,
                "<6=O=d>": 1,
                ">9?L?": 1,
                "1-181G1,2?2": 1,
                "4S5u5~6": 1,
                "808`8": 1,
                "8_9x9": 1,
                "9&:G:R:e:R;e;": 1,
                "2t2|2": 1,
                "3)30393E3Q3X3l3": 1,
                "4%434": 1,
                "=g=y=(>": 1,
                "0 0F0K0V0[0f0k0": 1,
                "1#1)11161I1?4": 1,
                "6+757?7D7": 1,
                "7#:):B:H:": 1,
                ":m;z;": 1,
                ";7=@=I=O=X=^=f=": 1,
                ">\">(>2>8>>>F>": 1,
                "6&6,6;6A6S6\\6d6j6z6": 1,
                "6!71767<7J7T7\\7r7": 1,
                "768A8I8": 1,
                "9'9/9": 1,
                ":%:M:X:`:": 1,
                ";0;?;i;": 1,
                "1]2c2g2": 1,
                "606n6|6": 1,
                "0_1<2y2L9z9F:R:X:": 1,
                "=!=2=7=H=O=V=": 1,
                "=H>Q>h>": 1,
                ">/?S?": 1,
                "6*6K6I7k8": 1,
                "212H2": 1,
                "3(3L3": 1,
                "7+7]7": 1,
                "7G8r8": 1,
                ":6:v:": 1,
                ";\"?J?~?": 1,
                "393h3": 1,
                "8*8X8j8x8": 1,
                "92:G:": 1,
                ";,;O;V;[;b;f;l;r;": 1,
                ";D<d<q<": 1,
                "<3===?>": 1,
                "9\\9f9": 1,
                "1r1W2a2z2": 1,
                ";2<;<t<": 1,
                "=+=1=7=<=J=": 1,
                ">;?]?c?w?": 1,
                ")02080{0": 1,
                ":):k:": 1,
                "<\"<&<*<.<": 1,
                "<n=k>s>[?": 1,
                "@0v1}1": 1,
                "1`4e4": 1,
                ":\":.:": 1,
                "2Q9c9": 1,
                ";I<{<": 1,
                "6$;6;_;": 1,
                "2.3f3": 1,
                "334A5L5S5": 1,
                "7+7>7N7f7n7s7x7": 1,
                "8r:z:": 1,
                ";5;;;P;t;": 1,
                ";/<7<R<Z<": 1,
                "=,=`=": 1,
                "3[5*6m6": 1,
                "7H7n7": 1,
                "2*2]2m2": 1,
                "3:4e4": 1,
                "0<0\\051": 1,
                "1 2A2d2": 1,
                "4`5i5": 1,
                "6\"6q6": 1,
                "828>8Z8": 1,
                "9H:N:V:d:": 1,
                ":1;?;H;": 1,
                "=4=i=": 1,
                ">+>3>E>": 1,
                "&1/161M1T1k1": 1,
                "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2": 1,
                "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3": 1,
                "5'6?6Q6V6g6S7": 1,
                "81888W8]8e8m8s8{8": 1,
                "==>x>": 1,
                "P0[0a0n0": 1,
                "1&2+212": 1,
                "313@4h5w5": 1,
                "6#7J7": 1,
                "1U2e2": 1,
                "3S4y4": 1,
                "556e6": 1,
                "7h8w8": 1,
                ":D:@;[;": 1,
                "0;0w0": 1,
                "2%2J2p2": 1,
                "7L7h7": 1,
                "7K8z98:l;<<{<": 1,
                "<s=y=": 1,
                "6p6;7@8y8": 1,
                ";M=h=y=": 1,
                ">8?{?": 1,
                "2%3@3U3{3": 1,
                "4(4F4K4d4": 1,
                "678P8Y8": 1,
                ";Y;K<": 1,
                "=C=x=": 1,
                ">8>o?{?": 1,
                "3 3B3": 1,
                "5/595@5k5": 1,
                "5&6,6w7": 1,
                "8!8,8?8H8Q8^8": 1,
                "91999K9 :h:": 1,
                "<$<><D<Q<W<": 1,
                "=.=`=": 1,
                ">.>4>9>2?<?W?]?": 1,
                "0K1f1": 1,
                "464t4": 1,
                "5+505:5b5h5u5{5": 1,
                "6\"6-63686>6E6": 1,
                "6A7N7": 1,
                "8p8}8": 1,
                "9&9w9b:": 1,
                ";K;q;": 1,
                ";*<3<=<M<U<": 1,
                "=\"=J=[=m=v=": 1,
                ">*>/>:>?>E>K>P>V>b>s>y>": 1,
                "?!?.?;?A?L?c?l?~?": 1,
                "+060E0^0d0p0": 1,
                "1!1)141?1J1S1_1g1y1": 1,
                "2,2C2I2U2[2_2y2": 1,
                "5;5%7": 1,
                "8?8v8": 1,
                "9A:L:x:": 1,
                ":1;;;v;": 1,
                "<E<P<": 1,
                ">R?Z?b?": 1,
                "0N1g1": 1,
                "182G2N2c2s2y2": 1,
                "3i3#4Q4": 1,
                ";W;B<": 1,
                ">P?V?": 1,
                "3;3_3": 1,
                "4<4G4R4": 1,
                "<k=o=s=w={=": 1,
                "> ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?": 1,
                "q0|3h4N6j7": 1,
                ":;:G:^:m:": 1,
                ":(;7;N;w;": 1,
                "3!6z6": 1,
                ";3<_<": 1,
                "7U8_8H9{9-:7:": 1,
                "<6>e>": 1,
                "0O0h0l0p0t0x0|0": 1,
                "9#:c:m:": 1,
                "0.252S2": 1,
                "3 3&3A3X3": 1,
                "6H6^6T7": 1,
                "9?:[:q:": 1,
                "6,7=8P8": 1,
                "0J1R1_1": 1,
                "=!>U>v>": 1,
                ">#?0?p?": 1,
                "4U7^7": 1,
                ";$;0;8;A;L;R;X;": 1,
                "<><q<}<": 1,
                "<.=X=": 1,
                "=7>L>": 1,
                ">+?<?": 1,
                "2-3y3": 1,
                "8-9{9y:": 1,
                "0L1T1": 1,
                "3f4K5d5t5": 1,
                "5C6{6": 1,
                "7K9p95:e:": 1,
                ";\">B>z>": 1,
                "!0G0U0#1": 1,
                "5E6p6(7": 1,
                "<O=c=": 1,
                "091T1]1": 1,
                "3 3$3(3": 1,
                "3Q4}4": 1,
                "7z;q<": 1,
                "=c=p=": 1,
                "3T4`4l4": 1,
                "5,6~6": 1,
                "7#797": 1,
                "9@9E9y9": 1,
                ":K;R;k;": 1,
                ";;<L<": 1,
                "=+=V=a=": 1,
                ">C?H?x?": 1,
                "000~0": 1,
                "102R2h2": 1,
                "4$4k4O5c5p5u5": 1,
                "2#2]4e4u4": 1,
                "858:8@8E8": 1,
                "81=5???": 1,
                "x1 4>4{4": 1,
                "1Z2(434e4s4": 1,
                "4-5>5": 1,
                "5&636:6?6D6I6T6]6o6w6": 1,
                ";2;8;x;~;": 1,
                ";B=H=X=^=}=": 1,
                ">!>H>N>p>": 1,
                "0^0p0": 1,
                "495H5r5": 1,
                "9'9G9": 1,
                "93:B:b:": 1,
                "314>4d4": 1,
                "5\"5*525:5B5J5R5Z5b5j5r5z5": 1,
                ":A;J;.<": 1,
                ">0>`>l>": 1,
                "?1?9?F?[?x?": 1,
                "0@0P0^0o0y0": 1,
                "1!1(1": 1,
                "1&262J2P2[2x2": 1,
                "2 4/474?4N4T4a4i4q4v4|4": 1,
                "4/5?5d5p5v5": 1,
                "60666B6I6Q6~6": 1,
                "6;7o7~7": 1,
                "8!828?8$:N:T:": 1,
                "<p<}<": 1,
                "0\"1Y1": 1,
                "3[4^5w5": 1,
                "5T6t6": 1,
                "7!7I8_8": 1,
                ":7;y;": 1,
                ">0>p>": 1,
                "0O1t1": 1,
                "1B2f2": 1,
                "5`5y5": 1,
                "798k8{8": 1,
                ";6<W<": 1,
                "=S=y=": 1,
                "1 1$1(1,1014181<1Z1": 1,
                "3;4e4q5": 1,
                "<\"<I<R<": 1,
                "0G3z364": 1,
                "6%7o7": 1,
                "8+8e8": 1,
                ":\":a:": 1,
                ";-;&<K<Q<": 1,
                "=;=X=": 1,
                "?$?7?": 1,
                "2#333;3^3~3": 1,
                "4,5Q5f5": 1,
                "8?9`9f9": 1,
                "2V2a2j2": 1,
                "203:3@3": 1,
                "4N4l4": 1,
                "5%6~6": 1,
                "=T>x>": 1,
                "8)9{9": 1,
                "9!:Z<": 1,
                "1&2o2": 1,
                "2)20272R2": 1,
                "3,3P3\\3h3J4": 1,
                "767A7\\7}7": 1,
                "<&=1=7=": 1,
                ";+<{?": 1,
                "9@9K9\\9a9": 1,
                "1R3z3": 1,
                "4P4\\4": 1,
                "546]6": 1,
                "w0*121p1": 1,
                "3&33383[4c4": 1,
                "9?<-=(?": 1,
                "0c4q4": 1,
                "6\"6(6.666": 1,
                "6$82888B8G8M8U8": 1,
                "<A=N=V=b=n=": 1,
                "1\"131F1L1[1d1": 1,
                "516G6Q6": 1,
                "<P=V=j=": 1,
                ">3>?>E>": 1,
                "?0?`?f?": 1,
                "0!0W0|0": 1,
                "0A2S2": 1,
                "253?3E3": 1,
                "7#7:8Z8": 1,
                ":-;F<": 1,
                ">(>2>B>H>": 1,
                "0#0U0D1Q1": 1,
                "2*3O3": 1,
                "8!9G9": 1,
                ":O:U:": 1,
                "<#<u<": 1,
                "=.=4=9=A=H=V=o=": 1,
                "%0+010s0": 1,
                "1#1^1": 1,
                "2#3<3Q3p3": 1,
                "4(4l4": 1,
                "6!6-6?6Q6": 1,
                "797K7Q7W7]7": 1,
                "8%8P8X8": 1,
                "8F9r9z9": 1,
                ":*:1:7:K:R:e:q:": 1,
                ";H;h;};": 1,
                "<+<><U<e<{<": 1,
                "=3=@=L=W=c=i=v=|=": 1,
                "=)>/>>>D>S>a>g>w>": 1,
                "?$?+?1?7?<?F?Q?t?": 1,
                "071`1": 1,
                "262`2m2": 1,
                "3$3/353E3`3t3": 1,
                "3 4g4": 1,
                "6'6-63696z6": 1,
                "747Z7j7": 1,
                "8I8q8": 1,
                "8f9w9": 1,
                "<6<I<": 1,
                ">G>e>w>": 1,
                ">!?C?J?O?g?t?": 1,
                "0'00090": 1,
                "0P1u1": 1,
                "3+353;3@3F3w3}3": 1,
                "4&4+4G4M4X4d4t4": 1,
                "4(5[5": 1,
                "6p6x6": 1,
                "777?7p7": 1,
                "=o>z>": 1,
                "0B0G0[0": 1,
                "0\"1R1": 1,
                "3)3/3G3M3w3": 1,
                "6Z8`8": 1,
                "9W:]:": 1,
                ":);2;=;V;^;j;": 1,
                ";'<I<b<": 1,
                "=/=A=": 1,
                "=>>Q>[>c>|>": 1,
                "?M?S?b?h?u?": 1,
                "050;0@0d0o0w0": 1,
                "111W1g1": 1,
                "2!2:2": 1,
                "2<3N3": 1,
                "4@4F4V4e4m4": 1,
                "5!575R5X5^5": 1,
                "6$606S6f6l6~6": 1,
                "7=7E7l7s7": 1,
                "8.8<8": 1,
                "8\"909@9I9T9w9}9": 1,
                "9,:F:S:n:": 1,
                ";d;n;t;": 1,
                "<7<B<K<X<^<j<": 1,
                "=,===B=M=": 1,
                ">4>M>V>h>q>}>": 1,
                "0*0H0M0U0_0e0k0v0": 1,
                "171B1o1u1": 1,
                "1l2y2": 1,
                "2T3d3": 1,
                "3+4?4": 1,
                "515{5": 1,
                "7 8Z8h8": 1,
                "9*9E9`9": 1,
                ":':4:;:L:}:": 1,
                ";T;_;k;r;": 1,
                "<$<*<N<X<^<q<": 1,
                "=*=/=a=k={=": 1,
                ">0>;>R>Z>c>z>": 1,
                "?-?\\?t?": 1,
                ",0E0v0": 1,
                "1!1>1D1g1p1|1": 1,
                "2'2B2N2": 1,
                "2G3l3w3}3": 1,
                "4/4:4@4": 1,
                "4 5Z5b5g5v5": 1,
                "6:6Q6": 1,
                "7#7G7i7": 1,
                "808F8j8y8": 1,
                "9X9_9n9v9": 1,
                "9H:N:X:`:f:": 1,
                ";^<w<": 1,
                ">*>@>J>[>f>r>": 1,
                "?$???U?|?": 1,
                "0\"0-030:0R0]0j0t0": 1,
                "1-191G1b1x1": 1,
                "2)2/292[2n2": 1,
                "3#3d3q3": 1,
                "7#8S8": 1,
                "2c2t2": 1,
                "6l7v7p;": 1,
                "102H2|2": 1,
                "6F7Q7_7x7": 1,
                "8.8S8_8n8w8": 1,
                "9%9*959G9M9}9": 1,
                ":>:N:]:e:m:": 1,
                ":!;/;I;l;z;": 1,
                "<$<3<M<r<w<": 1,
                "=*=M=": 1,
                "?.?F?M?T?\\?p?}?": 1,
                "0)161B1^1": 1,
                "3A4G4U4": 1,
                "697@7H7R7X7": 1,
                "8H9N9": 1,
                ":F:L:T:h:o:": 1,
                ";,;4;P;Y;f;v;": 1,
                "<8<P<a<": 1,
                "===J=j=": 1,
                "1E1R1l1": 1,
                "2;2N2Z2z2": 1,
                "243:3s3{3": 1,
                "4(4V4": 1,
                "5`6z6": 1,
                "7m7x7~7": 1,
                "8 8$8(8,8": 1,
                "8J9W9": 1,
                "<%=-=5=]>e>m>": 1,
                ">Q>i>n>": 1,
                "?3?=?": 1,
                "171R1X1b1": 1,
                "223p3": 1,
                "4.4o4w4": 1,
                "6)606J6^6v6": 1,
                "627V7g7l7": 1,
                "8=9U9q9": 1,
                ";6<<<D<": 1,
                "=6>q>\"?": 1,
                "395?5": 1,
                "9#999?9": 1,
                "98:s:": 1,
                ":[;k;": 1,
                "=\">R>": 1,
                ">a?r?}?": 1,
                "1%2B2": 1,
                "3V5d5": 1,
                "6L6d6": 1,
                "7[7d7q7": 1,
                "7!828D8J8O8U8k8q8": 1,
                "8 9?9a9": 1,
                ":#:+:0:7:<:C:H:O:W:_:e:m:s:{:": 1,
                ";,;6;];t;": 1,
                ";H<v<": 1,
                "=%=-=R=x=": 1,
                ">\\>~>": 1,
                "?_?z?": 1,
                "0*0A0U0[0r0": 1,
                "252\\2": 1,
                "4\"4(4>4D4": 1,
                "6%7s7": 1,
                "8<8J8c8m8{8": 1,
                ":&:9:k:v:}:": 1,
                ";+;0;Q;X;e;~;": 1,
                "< <U<\\<c<": 1,
                "=#=3=9=C=O=T=_=g=o=u=}=": 1,
                "=h>q>": 1,
                "052A2L2U2h2~2": 1,
                "303<3H3X3b3l3v3": 1,
                "5!5+555B5U5[5c5i5z5": 1,
                "8$80858D8P8\\8g8q8{8": 1,
                ":(:4:A:H:\\:": 1,
                "<)<5<:<K<W<c<u<": 1,
                "=-===I=N=\\=h=t=": 1,
                "&2W2h2": 1,
                "7U7_7d7z7": 1,
                ":#:(:=:I:U:`:j:t:~:": 1,
                ";';1;;;E;R;m;y;~;": 1,
                "2)2.272C2O2[2g2s2": 1,
                "414G4": 1,
                "5%5Y5e5k5": 1,
                "5;6E6_6g6": 1,
                "<(<4<@<L<X<d<": 1,
                "=/=S=_=d=z=": 1,
                "?9?E?Q?_?i?s?}?": 1,
                "4:4H4M4[4g4s4": 1,
                "5&525>5I5S5]5g5t5": 1,
                ":%:0:<:H:Y:c:m:w:": 1,
                ":,=O=W=": 1,
                ">b>1?T?": 1,
                "7&8u8q9": 1,
                ";,;4;F;L;U;": 1,
                "<A<K<": 1,
                "=C=K=": 1,
                ">i>z>": 1,
                "2%25292D2L2c2l2": 1,
                "303:3L3V3o3y3": 1,
                "434R4o4": 1,
                "5-595A5L5W5f5~5": 1,
                "5Z6a6s6": 1,
                "V0N1V1j192": 1,
                "6(6b6": 1,
                "8R8n8": 1,
                "869R9": 1,
                ":Z:p:": 1,
                ";2;{;": 1,
                "= >->": 1,
                ">4?:?": 1,
                "G0N0d0": 1,
                "0 171L1": 1,
                "595@5": 1,
                "9&9h9r9": 1,
                "?:?D?L?[?e?": 1,
                "2H2^2": 1,
                "2'3=3d3": 1,
                "5*6D6O6V6": 1,
                "949M9c9~9": 1,
                ";3;U;w;": 1,
                "<$<+<~<": 1,
                "=\"=<=C=J=e=l=s=z=": 1,
                "1*2^2": 1,
                "485m5E6": 1,
                "8A8{8": 1,
                "<+=@=": 1,
                "1.2v2i3": 1,
                "8V:s;": 1,
                "4I5q5": 1,
                "6*6c6": 1,
                "7>8c8": 1,
                "?0M0R0Y0^0": 1,
                "1>1L1Q1X1]1n1": 1,
                "102;2": 1,
                "7(808:8Z9w9": 1,
                "9Q=^=": 1,
                "=H>d>": 1,
                "5 525]5c5i5s5": 1,
                "7=7G7": 1,
                "838@8G8K8Q8^8c8n8t8~8": 1,
                "9!969?9E9": 1,
                ":':+:5:@:D:J:P:V:_:e:k:r:": 1,
                ";%;*;0;8;?;Q;_;l;": 1,
                "< <a<o<": 1,
                ">,>F>": 1,
                "0H0`0": 1,
                "0=1w1": 1,
                "2!2+21272>2O2U2]2y2~2": 1,
                "3 3)3/343:3I3R3o3z3": 1,
                "4'40494>4C4K4X4l4": 1,
                "5\"6y6": 1,
                "7%8V8_8j8o8z8": 1,
                "=#=*=0=}=": 1,
                "1#1)151>1D1J1O1[1n1x1": 1,
                "2\"2(2:2C2L2U2`2g2": 1,
                "3*343a3g3|3": 1,
                "4!4'4>4M4|4": 1,
                "5&5,535>5I5W5^5m5s5": 1,
                "; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;": 1,
                "=b=x>": 1,
                "0+020A0H0S0q0y0": 1,
                "0.1B1H1\\1h1}1": 1,
                "3E5R5": 1,
                "6P6h6": 1,
                "6S7|7": 1,
                "8D8_8": 1,
                "=5=@=I=": 1,
                "0+1P1": 1,
                "2#2+21272o2": 1,
                "3 3q3": 1,
                "4)4G4Q4": 1,
                "8!8'8/8?8d8t8z8": 1,
                "9+9R9_9": 1,
                ":0:f:": 1,
                ":9;c;": 1,
                ";a<g<u<": 1,
                "=W=_=h=s={=": 1,
                ">\">(>2>?>E>R>X>b>u>{>": 1,
                "?$?+?L?": 1,
                "0(0.040~0": 1,
                "1\"3(3I3m3s3": 1,
                "4%4+454": 1,
                "4)5E5Q5k5": 1,
                "5<6H6N6`6j6": 1,
                "7*707-8": 1,
                "9E9R9": 1,
                "9V:b:": 1,
                ";7;>;e;": 1,
                "<6<L<R<W<z<": 1,
                "=1=>=N=V=`=n=x=": 1,
                "=*>N>V>q>": 1,
                "061;1H1": 1,
                "272E2L2\\2*3H3\\3p3": 1,
                "4.5`5l5r5": 1,
                "6!626a6": 1,
                "737T7b7": 1,
                "728q8": 1,
                "9'9W9p9t9x9|9": 1,
                "9;:Z:_:x:": 1,
                ",:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:": 1,
                "80;4;H;L;`;d;x;|;": 1,
                "= =,=8=D=P=\\=h=t=": 1,
                "5 5$5(5054585<5@5D5H5P5T5X5\\5`5h5l5p5t5x5|5": 1,
                "L3T3\\3d3l3t3|3": 1,
                "305<5D5P5X5d5l5x5": 1,
                "6 6,646@6H6T6\\6h6p6|6": 1,
                "7$70787D7L7X7`7l7t7": 1,
                "8 8(848<8H8P8\\8d8p8x8": 1,
                "9$9,989@9L9T9`9h9t9|9": 1,
                ":(:0:<:D:P:X:d:l:x:": 1,
                "; ;,;8;@;": 1,
                ";%<S<": 1,
                "<d=5>g>": 1,
                "<0J0P0d0o0": 1,
                "1 1%1*1/14191>1C1H1M1R1W1\\1a1f1k1p1u1z1": 1,
                "1 242>2[2}2": 1,
                "4)4.43484K4": 1,
                "5 5,5M5R5X5\\5b5h5m5r5": 1,
                "6#6(6-646;6A6H6N6U6\\6a6f6": 1,
                "9U:Z:e:t:|:": 1,
                ";\";(;.;5;;;I;O;U;d;o;u;{;": 1,
                "<.<8<K<U<_<d<i<n<s<x<}<": 1,
                "=$=.=3=8=>=B=H=R=X=^=i=o=u={=": 1,
                ">)>2>;>A>G>N>T>[>a>g>m>t>y>~>": 1,
                "? ?%?*?7?\\?j?": 1,
                "2$2*252{2": 1,
                "323C3\\3b3": 1,
                "4J4V4^4v4": 1,
                "5:5M5v5": 1,
                "6'6-63696F6o6": 1,
                "6,7z7": 1,
                "888>8X8~8": 1,
                "9*909O9": 1,
                "9\":O:~:": 1,
                "<1<:<O<T<": 1,
                "<B=f=l=t=": 1,
                ">!>(>/>\\>": 1,
                "0J2U2h2n2y2": 1,
                "3?3G3R3t475?5I5": 1,
                "787a7+8": 1,
                "8)9p9": 1,
                "=)=.=?=D=Q=": 1,
                ">(>.>": 1,
                "8K9Q9W9\\9": 1,
                ":E:9;": 1,
                "=<>e>": 1,
                "?&?.?D?H?P?T?l?t?": 1,
                "041n1": 1,
                "2d2l2d3o3": 1,
                "535=5B5H5R5X5^5e5l5q5v5": 1,
                "738V8k9s9w9}9": 1,
                ":0:N:\\:s:~:": 1,
                ";!;/;R;];y;": 1,
                ">&?0?:?D?N?": 1,
                "0M0W0": 1,
                "2V2c2\\3": 1,
                "6;6O6b6": 1,
                "8+8a8l8y8": 1,
                "8&9]9e9": 1,
                "<#<;<E<U<\\<a<f<k<q<w<}<": 1,
                "=&=A=_=m=": 1,
                ">->b>o>z>": 1,
                "?1?R?": 1,
                "0!0'0=0G0M0Q0}0": 1,
                "10151:1?1H1M1R1W1\\1b1h1n1t1z1": 1,
                "212<2F2d2r2": 1,
                "3 3+3": 1,
                "374F4U4c4q4": 1,
                "5 5(535@5K5S5^5f5q5y5": 1,
                "6 6,676?6K6S6a6h6r6y6": 1,
                "707:7?7D7[7": 1,
                "8!8,8j8": 1,
                "9#9D9V9s9z9": 1,
                ": :%:*:/:4:9:>:C:H:M:R:W:\\:a:f:k:p:v:{:": 1,
                ";];o;z;": 1,
                "<!<P<u<": 1,
                "<D=P=[=c=n=t=y=": 1,
                ">&>->8>=>H>O>S>Y>_>u>{>": 1,
                ">B?J?O?T?[?e?k?q?x?": 1,
                "0!0&0+00050B0I0P0V0]0d0|0": 1,
                "101U1`1": 1,
                "2c2m2r2w2|2": 1,
                "393H3": 1,
                "4(4r4|4": 1,
                "696S6": 1,
                "848F8b8": 1,
                "9)9/959<9C9H9M9S9p=x=": 1,
                "0P1o1": 1,
                "1\"2+212:2S2f2s2": 1,
                "3 3$3(3,303H3": 1,
                "3)40464": 1,
                "5+575E5K5o5": 1,
                "6 6&64696>6C6O6V6`6q6": 1,
                "6&797m7": 1,
                "8X8]8&9": 1,
                "=0K0Y0": 1,
                "7\"7(7O7c7y7": 1,
                "7N8o8v8": 1,
                ":):;:": 1,
                ":P;V;h;w;": 1,
                "=\\=k=q=": 1,
                "2*2p2v2": 1,
                "3\"3/3<3i3u3": 1,
                "4>4G4[4d4": 1,
                "4S5b5m5": 1,
                "6\"6`7g7": 1,
                "7K8j8{8": 1,
                ";7;D;P;": 1,
                "<9<W<^<q<": 1,
                "=W=]=h=q=": 1,
                ">\">(>5>": 1,
                "?(?,?0?<?@?D?P?T?X?d?h?l?x?|?": 1,
                "0 0,00040@0D0H0T0X0\\0h0l0p0|0": 1,
                "1 1$1014181D1H1L1X1\\1`1l1p1t1": 1,
                "2 2$2(24282<2@2D2H2L2P2\\2`2d2p2t2x2": 1,
                "3$3(3,383<3@3L3P3T3`3d3h3t3x3|3": 1,
                "4(4,404<4@4D4P4T4X4d4h4l4x4|4": 1,
                "5 5,50545@5D5H5T5X5\\5h5l5p5|5": 1,
                "6 6$6064686D6H6L6X6\\6`6l6p6t6": 1,
                "7 7$7(74787<7@7D7H7L7P7\\7`7d7p7t7x7|7": 1,
                "8$8(8,888<8@8L8P8T8`8d8h8t8x8|8": 1,
                "9(9,909<9@9D9P9T9X9d9h9l9x9|9": 1,
                ": :,:0:4:@:D:H:T:X:\\:h:l:p:|:": 1,
                "; ;$;0;4;8;D;H;L;X;\\;`;l;p;t;": 1,
                "< <$<(<4<8<<<H<L<P<\\<`<d<p<t<x<": 1,
                "=$=(=,=8=<=@=L=P=T=`=d=h=t=x=|=": 1,
                ">(>,>0><>@>D>P>T>X>d>h>l>x>|>": 1,
                "? ?,?0?4?@?D?H?T?X?\\?h?l?p?|?": 1,
                "0 0$0004080D0H0L0X0\\0`0l0p0t0": 1,
                "031I1": 1,
                "1(343L3c3y3": 1,
                "5R6\\6b6q6": 1,
                "7-747<7A7L7R7X7": 1,
                "8\"8<8B8I8P8Y8f8r8": 1,
                "9G9M9{9": 1,
                ":':v:": 1,
                ";:<F<Z<f<x<": 1,
                "=7>Z>p>v>": 1,
                "?2?R?i?u?": 1,
                "0Y1{1": 1,
                "1>2\\2": 1,
                "6A6w6": 1,
                "163~3": 1,
                "3%484b4": 1,
                "97;>;L;S;": 1,
                ";9<b<r<": 1,
                "=,=X=d=r=y=": 1,
                "=2>~>": 1,
                "?/?4?K?P?": 1,
                "0\"0,0V0e0t0": 1,
                "071=1G1M1R1]1h1": 1,
                "2!3V3\\3z3": 1,
                "4,4<4L4\\4l4|4": 1,
                "5(525<5F5": 1,
                "6#6(6-62676<6Q6V6[6`6e6j6o6t6y6~6": 1,
                "8#838J8]8p8~8": 1,
                "9[:o:|:": 1,
                ";$;);7;": 1,
                ";&<<<I<": 1,
                "='=/=;=E=Q=]=c=i=n={=": 1,
                ">,>8>]>": 1,
                "?+?0?6?>?L?R?Z?w?": 1,
                ";0A0G0O0T0`0x0": 1,
                "1#1-161A1T1m1": 1,
                "2>2E2K2Q2]2j2w2": 1,
                "3 3&3T3]3g3m3": 1,
                "3\\4b4z4": 1,
                "5*51595I5U5d5r5": 1,
                "6&6E6S6X6k6q6": 1,
                "7=7E7S7Y7a7j7p7{7": 1,
                "8%8*8/8;8A8G8O8U8Z8_8d8i8n8s8x8}8": 1,
                "9 9'9.949:9@9F9M9T9Y9^9h9m9r9w9|9": 1,
                ": :&:-:3:9:@:F:L:S:X:]:h:r:": 1,
                ";M;U;_;g;m;z;": 1,
                "<1<F<L<Q<V<`<e<j<o<t<y<~<": 1,
                "<8=H=e=": 1,
                ">&>->7>M>U>\\>m>": 1,
                "?\"?-?7?<?B?H?N?T?[?b?g?l?v?": 1,
                "0%0+010Y0": 1,
                "0&1K1W1": 1,
                "2\"2,292]2s2": 1,
                "303l3": 1,
                "4#4(4-42474<4A4F4K4U4_4i4p4u4z4": 1,
                "5:5I5j5u5": 1,
                "7\"7(7.787>7D7K7R7c7w7": 1,
                "8F8X8^8": 1,
                "9)919\\9g9u9": 1,
                ":W;`;\"<<<F<n<z<B=[=": 1,
                ">'>;>B>I>P>W>w>": 1,
                "?+?E?J?O?T?Y?_?i?o?u?|?": 1,
                "0N0b0u0": 1,
                "1:2O2": 1,
                "4N4s6z6": 1,
                "7!7'70787@7F7N7V7^7d7l7u7": 1,
                "8/888>8c8l8}8": 1,
                "9$9)9.93989=9B9G9L9Q9V9[9`9e9j9": 1,
                ": :A:F:K:P:Z:_:d:i:t:z:": 1,
                "<P<b<": 1,
                "?#?s?": 1,
                "1O2T2Y2^2": 1,
                ":;:F:V:\\:h:": 1,
                "; ;/;@;Z;x;": 1,
                "<E<Q<X<^<e<j<o<u<": 1,
                "=I=u=z=": 1,
                ">9>F>a>k>u>": 1,
                "?-?H?y?": 1,
                "000e0p0}0": 1,
                "5 5(50585@5H5P5X5`5h5p5x5": 1,
                "5P6X6`6h6p6x6": 1,
                "7 7(70787@7H7P7X7`7h7p7x7": 1,
                "8 8(80888@8H8P8X8`8h8p8x8": 1,
                "9 9(90989@9H9P9X9`9h9p9x9": 1,
                ": :(:0:8:@:H:P:X:`:h:p:x:": 1,
                "; ;(;0;8;@;H;P;X;`;h;p;x;": 1,
                "< <(<0<8<@<H<P<X<`<h<p<x<": 1,
                "=#=6=B=H=U=s=": 1,
                "0$0)0.03080=0B0G0L0Q0V0[0`0e0j0o0t0": 1,
                "1 1)171<1F1P1W1]1c1m1w1": 1,
                "2'2,212c2}2": 1,
                "2!3(3R3f3": 1,
                "4Q4V4\\4b4h4n4": 1,
                "5*51585D5I5N5S5Y5c5i5o5v5}5": 1,
                "6<6V6b6l6": 1,
                "7$7)757G7k7u7{7": 1,
                "878B8V8|8": 1,
                "8&9?9X9": 1,
                ":':?:D:I:N:X:]:b:z:": 1,
                "30H0x0": 1,
                "1!1/1D1": 1,
                "3#3w3~3": 1,
                "4=4_4n4": 1,
                "595E5": 1,
                "6$6G6M6\\6": 1,
                "7$7<7|7": 1,
                "8+898?8K8": 1,
                "9 9C9O9U9w9": 1,
                "9 :z:": 1,
                "< <0<@<P<]<d<p<|<": 1,
                "= =.=<=J=X=f=x=": 1,
                ">'>7>G>W>g>w>": 1,
                "?#?/?;?G?S?_?k?w?": 1,
                "0#030C0S0c0s0": 1,
                "1\"101>1P1b1t1": 1,
                "2-2;2I2W2e2w2": 1,
                "3$3*30363?3I3P3Z3a3k3r3|3": 1,
                "4&4-474>4H4R4X4^4d4j4p4v4|4": 1,
                "5 5&50575=5C5I5O5Y5`5f5l5r5x5": 1,
                "6#6,626<6A6G6P6V6_6e6n6t6~6": 1,
                "7&7.757=7D7L7S7[7b7j7q7y7": 1,
                "8\"818:8K8W8`8v8": 1,
                ":\":.:::F:R:^:j:v:": 1,
                ";';3;?;K;W;c;o;{;": 1,
                "<#</<;<G<S<_<k<": 1,
                "=a=p=": 1,
                ">6>J>b>s>": 1,
                "?)?3?7???I?V?": 1,
                "0)0C0P0U0Z0n0{0": 1,
                "1F1\\1r1": 1,
                "262F2": 1,
                "4]4b4h4n4u4z4": 1,
                "5 5$5(5,5": 1,
                "6G6s6": 1,
                "7 7-71777=7U7{7": 1,
                "8\"808T8i8u8": 1,
                "9=9E9L9S9e9": 1,
                "4U4u4": 1,
                "6!6&6+61676=6C6J6Q6W6]6c6i6p6w6}6": 1,
                "7/7W7|7": 1,
                "808C8q8": 1,
                ":/;4;?;D;O;T;_;d;o;t;": 1,
                "<$</<4<?<D<O<T<_<d<o<t<": 1,
                "<0=4=8=<=@=D=H=L=e=z=": 1,
                ">>?^?i?": 1,
                "0!0.0?0I0O0h0r0": 1,
                "3#313D3Q3d3s3~3": 1,
                "4e5z5": 1,
                "9!:8:l:": 1,
                "3`3q3}3j4{4": 1,
                "587?7": 1,
                "=5>I>": 1,
                "1!1)161>1K1": 1,
                "4)5c5": 1,
                "6%7A7S7D8": 1,
                "8/9A:Q:a:l:x:": 1,
                ";E<j<": 1,
                "> >%>*>/>4><>B>H>N>T>[>a>l>s>y>": 1,
                ">V?^?e?n?t?": 1,
                "0 0$0(0,0004080<0@0D0H0L0P0T0[0o0}0": 1,
                "252:2": 1,
                "293>3": 1,
                "3 4O4c4": 1,
                "4O5t5": 1,
                "5L6`6": 1,
                "7Q7Y7y7": 1,
                "8\"898?8E8o8": 1,
                "9G9d9": 1,
                "9#:A:e:p:{:": 1,
                ";&;0;:;H;};": 1,
                "<7<K<Q<]<g<l<r<w<}<": 1,
                "=&=-=3=9=?=E=K=Q=W=]=": 1,
                ">!>1>7>=>I>j>v>": 1,
                "?)?5?;?A?G?P?V?\\?b?l?{?": 1,
                "0\"0-0<0B0[0g0r0": 1,
                "131H1X1n1x1": 1,
                "2(2R2l2v2": 1,
                "4&4;4L4Q4_4i4s4~4": 1,
                "4X6\\6`6d6h6": 1,
                "757I7[7y7": 1,
                "828>8Q8e8x8": 1,
                "9<9\\9s9z9": 1,
                ";*;7;C;W;c;i;": 1,
                "<4<A<c<u<": 1,
                "=\"=2=?=V=h=q=}=": 1,
                ">'>2>R>": 1,
                "?/?O?": 1,
                "0\"0'0=0": 1,
                "0&161<1I1Q1": 1,
                "2!282X2": 1,
                "3#3I3": 1,
                "4%4Z4`4f4s4": 1,
                "5(5G5u5": 1,
                "6(676s6": 1,
                "7\"757": 1,
                "8.8{8": 1,
                "9 90979A9K9U9_9i9x9": 1,
                ":5:<:H:e:w:": 1,
                ":B<h<": 1,
                ">7>A>Q>d>r>x>": 1,
                "?C?Q?^?": 1,
                "'0/0;0@0i0": 1,
                "1'1/1A1I1[1c1u1}1": 1,
                "2\"2.2D2P2o2": 1,
                "3X3{3": 1,
                "4I5V5": 1,
                "6#6,64696C6N6|7": 1,
                "91:O;[;m;": 1,
                "2<2F2q2": 1,
                "2>3n3": 1,
                "5<6Z6'7-727z7": 1,
                ";$;);.;5;:;A;F;j<x<": 1,
                "<7=H=m=": 1,
                "0N2_2E3": 1,
                ";#;v;": 1,
                "<9<`=p=": 1,
                "7v:|:": 1,
                "; ;(;0;8;": 1,
                "=%>1>": 1,
                "4%4p4": 1,
                "647}7": 1,
                "8,8n8": 1,
                "< <(<d>": 1,
                "2 2'272E2W2]2h2y2": 1,
                "3-3}4": 1,
                "5Y5c5q5w6": 1,
                ":!:7:@:O:f:{;": 1,
                "<[<U=k=u=": 1,
                "=@>G>k>": 1,
                "?#?(?-?2?7?N?Y?^?c?h?m?r?": 1,
                "0?1M2": 1,
                "545`5d5h5l5p5t5x5|5": 1,
                "7c8|8": 1,
                "909>9j:": 1,
                ":!;4;": 1,
                "?O?U?": 1,
                "262x2h5l5p5t5x5|5": 1,
                ":L:P<r<": 1,
                "3V3`4": 1,
                "0q1~134": 1,
                "8,>4><>D>L>T>,?4?<?D?L?": 1,
                "1$1,1": 1,
                "3$3,343T4\\4d4l4": 1,
                "5$5,5|5": 1,
                "9(949@9L9X9d9p9|9": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-r-x name=POOLMI": 1,
                "perm=m-r-x name=MISYSPT": 1,
                "perm=m-r-x name=POOLCOD": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-x name=PAGE": 1,
                "perm=m-r-x name=PAGELK": 1,
                "perm=m-r-x name=PAGEVRF": 1,
                "perm=m-r-x name=PAGEWMI": 1,
                "perm=m-r-x name=PAGEKD": 1,
                "perm=m-r-x name=PAGESPE": 1,
                "perm=m-r-x name=PAGEHDL": 1,
                "perm=m-r-- name=.edata": 1,
                "perm=m-rw- name=PAGEDAT": 1,
                "perm=m-rw- name=PAGEKD_1": 1,
                "perm=m-rw- name=PAGECON": 1,
                "perm=m-r-- name=PAGEVRF_1": 1,
                "perm=m-rw- name=PAGEVRF_2": 1,
                "perm=m-rwx name=INIT": 1,
                "perm=m-r-- name=.rsrc": 1,
                "perm=m-r-- name=.reloc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidInitialize": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidDisplayString": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidSetTextColor": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidSolidColorFill": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidBitBlt": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidBufferToScreenBlt": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidScreenToBufferBlt": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidResetDisplay": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidCleanUp": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidSetScrollRegion": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalReportResourceUsage": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalAllProcessorsStarted": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalQueryRealTimeClock": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalAllocateAdapterChannel": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeStallExecutionProcessor": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalTranslateBusAddress": 3,
                "bind=NONE type=FUNC name=HAL.dll_KfReleaseSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_KfAcquireSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalGetBusDataByOffset": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetBusDataByOffset": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeQueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalReturnToFirmware": 3,
                "bind=NONE type=FUNC name=HAL.dll_READ_PORT_UCHAR": 3,
                "bind=NONE type=FUNC name=HAL.dll_READ_PORT_USHORT": 3,
                "bind=NONE type=FUNC name=HAL.dll_READ_PORT_ULONG": 3,
                "bind=NONE type=FUNC name=HAL.dll_WRITE_PORT_UCHAR": 3,
                "bind=NONE type=FUNC name=HAL.dll_WRITE_PORT_USHORT": 3,
                "bind=NONE type=FUNC name=HAL.dll_WRITE_PORT_ULONG": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalInitializeProcessor": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalCalibratePerformanceCounter": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetRealTimeClock": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalHandleNMI": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalBeginSystemInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalEndSystemInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeRaiseIrqlToSynchLevel": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeAcquireInStackQueuedSpinLockRaiseToSynch": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalInitSystem": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalDisableSystemInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalEnableSystemInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeRaiseIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeLowerIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalClearSoftwareInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeReleaseSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeAcquireSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_ExTryToAcquireFastMutex": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeAcquireSpinLockRaiseToSynch": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeFlushWriteBuffer": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalProcessorIdle": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalReadDmaCounter": 3,
                "bind=NONE type=FUNC name=HAL.dll_IoMapTransfer": 3,
                "bind=NONE type=FUNC name=HAL.dll_IoFreeMapRegisters": 3,
                "bind=NONE type=FUNC name=HAL.dll_IoFreeAdapterChannel": 3,
                "bind=NONE type=FUNC name=HAL.dll_IoFlushAdapterBuffers": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalFreeCommonBuffer": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalAllocateCommonBuffer": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalAllocateCrashDumpRegisters": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalGetAdapter": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetTimeIncrement": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalGetEnvironmentVariable": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetEnvironmentVariable": 3,
                "bind=NONE type=FUNC name=HAL.dll_KfRaiseIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalGetInterruptVector": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeGetCurrentIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalRequestSoftwareInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeAcquireInStackQueuedSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeReleaseInStackQueuedSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_ExAcquireFastMutex": 3,
                "bind=NONE type=FUNC name=HAL.dll_ExReleaseFastMutex": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeRaiseIrqlToDpcLevel": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSystemVectorDispatchEntry": 3,
                "bind=NONE type=FUNC name=HAL.dll_KfLowerIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalStartProfileInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetProfileInterval": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalStopProfileInterrupt": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdD0Transition": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdD3Transition": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdRestore": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdReceivePacket": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdDebuggerInitialize0": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdSave": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdDebuggerInitialize1": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdSendPacket": 3,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireFastMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireRundownProtectionEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializeRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedAddLargeStatistic": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedCompareExchange64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedFlushSList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedPopEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedPushEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReInitializeRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseFastMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseRundownProtectionEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRundownCompleted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExWaitForRundownProtectionRelease": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfAcquirePushLockExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfAcquirePushLockShared": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedAddUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedCompareExchange64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedInsertHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedInsertTailList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedPopEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedPushEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedRemoveHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfReleasePushLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exfi386InterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exfi386InterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exfi386InterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_HalExamineMBR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedCompareExchange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedDecrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedExchange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedExchangeAdd": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedPopEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedPushEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAssignDriveLetters": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadPartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetPartitionInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWritePartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IofCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IofCompleteRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAcquireInStackQueuedSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseInStackQueuedSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTimeUpdateNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KefAcquireSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KefReleaseSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiAcquireSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiReleaseSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObfDereferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObfReferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlPrefetchMemoryNonTemporal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUlongByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUlonglongByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUshortByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiGetClock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Kei386EoiHelper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Kii386SpinOnSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcCanIWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcDeferWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastMdlReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastReadNotPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFlushCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetDirtyPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetFileObjectFromBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetFileObjectFromSectionPtrs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetFlushedValidData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetLsnForFileObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcInitializeCacheMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcIsThereDirtyData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMapData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMdlRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMdlReadComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMdlWriteAbort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMdlWriteComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPinMappedData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPinRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPrepareMdlWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPreparePinWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPurgeCacheSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcRemapBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcRepinBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcScheduleReadAhead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetAdditionalCacheAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetBcbOwnerPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetDirtyPageThreshold": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetDirtyPinnedData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetFileSizes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetLogHandleForFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetReadAheadGranularity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcUninitializeCacheMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcUnpinData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcUnpinDataForThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcUnpinRepinnedBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcWaitForCurrentLazyWriterActivity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcZeroData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CmRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CmUnRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgBreakPoint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgBreakPointWithStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgLoadImageSymbols": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgPrint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgPrintEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgPrintReturnControlC": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgPrompt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgQueryDebugFilterState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgSetDebugFilterState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireResourceExclusiveLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireResourceSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireSharedStarveExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireSharedWaitForExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocateFromPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePoolWithQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePoolWithQuotaTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePoolWithTagPriority": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExConvertExclusiveToSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExCreateCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDeleteNPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDeletePagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDeleteResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDesktopObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDisableResourceBoostLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExEnumHandleTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExEventObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExExtendZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExFreePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExFreePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExFreeToPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetCurrentProcessorCounts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetCurrentProcessorCpuUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetExclusiveWaiterCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetSharedWaiterCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializeNPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializePagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializeResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializeZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedAddLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedAddUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedExtendZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedInsertHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedInsertTailList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedPopEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedPushEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedRemoveHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExIsProcessorFeaturePresent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExIsResourceAcquiredExclusiveLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExIsResourceAcquiredSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExLocalTimeToSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExNotifyCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExQueryPoolBlockSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExQueueWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseAccessViolation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseDatatypeMisalignment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReinitializeResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseResourceForThreadLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSemaphoreObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSetResourceOwnerPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSetTimerResolution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSystemExceptionFilter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSystemTimeToLocalTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExUnregisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExUuidCreate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExVerifySuite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExWindowStationObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exi386InterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exi386InterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exi386InterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAcquireFileExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAddLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAddMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAddToTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocateFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocatePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocatePoolWithQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocatePoolWithQuotaTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocatePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocateResource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAreNamesEqual": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlBalanceReads": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCheckLockForReadAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCheckLockForWriteAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCheckOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCreateSectionForDataScan": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCurrentBatchOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDeleteKeyFromTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDeleteTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDeregisterUncProvider": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDissectDbcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDissectName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDoesDbcsContainWildCards": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDoesNameContainWildCards": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastCheckLockForRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastCheckLockForWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastUnlockAll": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastUnlockAllByKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastUnlockSingle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFindInTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFreeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlGetFileSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlGetNextFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlGetNextLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlGetNextMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIncrementCcFastReadNoWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIncrementCcFastReadNotPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIncrementCcFastReadResourceMiss": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIncrementCcFastReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInsertPerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInsertPerStreamContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsDbcsInExpression": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsFatDbcsLegal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsHpfsDbcsLegal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsNameInExpression": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsNtstatusExpected": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsPagingFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsTotalDeviceFailure": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLegalAnsiCharacterArray": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupLastLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupLastLargeMcbEntryAndIndex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupLastMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupPerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupPerStreamContextInternal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlReadComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlReadCompleteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlReadDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlWriteComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlWriteCompleteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNormalizeNtstatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyCleanup": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyFilterChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyFilterReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyFullChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyFullReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyInitializeSync": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyUninitializeSync": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyVolumeEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNumberOfRunsInLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNumberOfRunsInMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlOplockFsctrl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlOplockIsFastIoPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPostPagingFileStackOverflow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPostStackOverflow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPrepareMdlWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPrepareMdlWriteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPrivateLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlProcessFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRegisterFileSystemFilterCallbacks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRegisterUncProvider": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlReleaseFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRemoveLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRemoveMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRemovePerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRemovePerStreamContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlResetLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlSplitLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlSyncVolumes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlTeardownPerStreamContexts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlTruncateLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlTruncateMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlUninitializeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlUninitializeLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlUninitializeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlUninitializeOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_HalDispatchTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_HalPrivateDispatchTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_HeadlessDispatch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvAcquireDisplayOwnership": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvCheckDisplayOwnership": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvEnableBootDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvEnableDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvInstallDisplayStringFilter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvIsBootDriverInstalled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvNotifyDisplayOwnershipLost": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvResetDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvSetScrollRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvSetTextColor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvSolidColorFill": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InitSafeBootMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAcquireCancelSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAcquireRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAcquireVpbSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAdapterObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateAdapterChannel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateDriverObjectExtension": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAssignResources": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAttachDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAttachDeviceByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAttachDeviceToDeviceStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAttachDeviceToDeviceStackSafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoBuildAsynchronousFsdRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoBuildDeviceIoControlRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoBuildPartialMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoBuildSynchronousFsdRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCancelFileOpen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCancelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckDesiredAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckEaBufferValidity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckFunctionAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckQuerySetFileInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckQuerySetVolumeInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckQuotaBufferValidity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCompleteRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoConnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateDisk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateFileSpecifyDeviceObjectHint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateNotificationEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateStreamFileObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateStreamFileObjectEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateStreamFileObjectLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateSynchronizationEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateUnprotectedSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCsqInitialize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCsqInsertIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCsqRemoveIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCsqRemoveNextIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeleteController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeleteDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeleteDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeleteSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDetachDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeviceHandlerObjectSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeviceHandlerObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeviceObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDisconnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDriverObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoEnqueueIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoEnumerateDeviceObjectList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoEnumerateRegisteredFiltersList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFastQueryNetworkAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFileObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoForwardAndCatchIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoForwardIrpSynchronously": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetAttachedDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetAttachedDeviceReference": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetBaseFileSystemDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetBootDiskInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetConfigurationInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetCurrentProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceAttachmentBaseRef": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceInterfaceAlias": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceInterfaces": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceObjectPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceProperty": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceToVerify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDiskDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDmaAdapter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDriverObjectExtension": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetFileObjectGenericMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetInitialStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetLowerDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetRelatedDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetRequestorProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetRequestorProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetRequestorSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetStackLimits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetTopLevelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInitializeCrashDump": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInitializeIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInitializeRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInitializeTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInvalidateDeviceRelations": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInvalidateDeviceState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsFileOriginRemote": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsOperationSynchronous": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsValidNameGraftingBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsWdmVersionAvailable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoMakeAssociatedIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoOpenDeviceInterfaceRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoOpenDeviceRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoPageRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoPnPDeliverServicePowerNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueryDeviceDescription": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueryFileDosDeviceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueryFileInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueryVolumeInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueueThreadIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueueWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRaiseHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRaiseInformationalHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadDiskSignature": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadOperationCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadPartitionTableEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadTransferCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterBootDriverReinitialization": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterDeviceInterface": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterDriverReinitialization": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterFileSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterFsRegistrationChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterLastChanceShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterPlugPlayNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReleaseCancelSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReleaseRemoveLockAndWaitEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReleaseRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReleaseVpbSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRemoveShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportDetectedDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportHalResourceUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportResourceForDetection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportResourceUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportTargetDeviceChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportTargetDeviceChangeAsynchronous": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRequestDeviceEject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReuseIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetCompletionRoutineEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetDeviceInterfaceState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetDeviceToVerify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetFileOrigin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetHardErrorOrVerifyDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetIoCompletion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetPartitionInformationEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetStartIoAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetSystemPartition": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetThreadHardErrorMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetTopLevelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStartNextPacket": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStartNextPacketByKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStartPacket": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStartTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStatisticsLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStopTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSynchronousInvalidateDeviceRelations": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSynchronousPageWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoThreadToProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUnregisterFileSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUnregisterFsRegistrationChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUnregisterPlugPlayNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUnregisterShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUpdateShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoValidateDeviceIoControlAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoVerifyPartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoVerifyVolume": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoVolumeDeviceToDosName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIAllocateInstanceIds": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIDeviceObjectToInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIExecuteMethod": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIHandleToInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIOpenBlock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIQueryAllData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIQueryAllDataMultiple": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIQuerySingleInstance": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIQuerySingleInstanceMultiple": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIRegistrationControl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMISetNotificationCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMISetSingleInstance": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMISetSingleItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMISuggestInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIWriteEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWriteErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWriteOperationCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWritePartitionTableEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWriteTransferCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdDebuggerEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdDebuggerNotPresent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdDisableDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdEnableDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdEnteredDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdPollBreakIn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdPowerTransition": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Ke386CallBios": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Ke386IoSetAccessProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Ke386QueryIoAccessMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Ke386SetIoAccessMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAcquireInterruptSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAcquireSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAddSystemServiceTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAreApcsDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAttachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeBugCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeBugCheckEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeCancelTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeCapturePersistentThreadState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeClearEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeConnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDcacheFlushCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDelayExecutionThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDeregisterBugCheckCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDeregisterBugCheckReasonCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDetachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDisconnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeEnterCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeEnterKernelDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeFindConfigurationEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeFindConfigurationNextEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeFlushEntireTb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeFlushQueuedDpcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeGetCurrentThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeGetPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeGetRecommendedSharedDataAlignment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386AbiosCall": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386AllocateGdtSelectors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386Call16BitCStyleFunction": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386Call16BitFunction": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386FlatToGdtSelector": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386GetLid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386MachineType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386ReleaseGdtSelectors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386ReleaseLid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386SetGdtSelector": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeIcacheFlushCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeTimerEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertByKeyDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertHeadQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertQueueApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertQueueDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeIsAttachedProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeIsExecutingDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeLeaveCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeLoaderBlock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeNumberProcessors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeProfileInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeProfileInterruptWithSource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KePulseEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryActiveProcessors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryInterruptTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryPriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryRuntimeThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQuerySystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryTickCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryTimeIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRaiseUserException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRegisterBugCheckCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRegisterBugCheckReasonCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseInterruptSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveByKeyDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveByKeyDeviceQueueIfBusy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveEntryDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveQueueDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveSystemServiceTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeResetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRestoreFloatingPointState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRevertToUserAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRundownQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSaveFloatingPointState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSaveStateForHibernate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeServiceDescriptorTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetBasePriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetDmaIoCoherency": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetEventBoostPriority": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetIdealProcessorThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetImportanceDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetKernelStackSwapEnable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetPriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetProfileIrql": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetSystemAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTargetProcessorDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTimeIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTimerEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeStackAttachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSynchronizeExecution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeTerminateThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeTickCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeUnstackDetachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeUpdateRunTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeUpdateSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeUserModeCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeWaitForMultipleObjects": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeWaitForMutexObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiBugCheckData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiCoprocessorError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiDeliverApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiDispatchInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiEnableTimerWatchdog": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiIpiServiceRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiUnexpectedInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LdrAccessResource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LdrEnumResources": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LdrFindResourceDirectory_U": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LdrFindResource_U": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LpcPortObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LpcRequestPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LpcRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaCallAuthenticationPackage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaDeregisterLogonProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaFreeReturnBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaLogonUser": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaLookupAuthenticationPackage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaRegisterLogonProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Mm64BitPhysicalAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAddPhysicalMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAddVerifierThunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAdjustWorkingSetSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAdvanceMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocateContiguousMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocateContiguousMemorySpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocateMappingAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocateNonCachedMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocatePagesForMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmBuildMdlForNonPagedPool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmCanFileBeTruncated": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmCommitSessionMappedView": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmCreateMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmDisableModifiedWriteOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFlushImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmForceSectionClosed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreeContiguousMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreeContiguousMemorySpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreeMappingAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreeNonCachedMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreePagesFromMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGetPhysicalAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGetPhysicalMemoryRanges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGetSystemRoutineAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGetVirtualForPhysical": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGrowKernelStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmHighestUserAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsAddressValid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsDriverVerifying": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsNonPagedSystemAddressValid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsRecursiveIoFault": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsThisAnNtAsSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsVerifierEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmLockPagableDataSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmLockPagableImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmLockPagableSectionByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapIoSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapLockedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapLockedPagesSpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapLockedPagesWithReservedMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapMemoryDumpMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapUserAddressesToPage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapVideoDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapViewInSessionSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapViewInSystemSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMarkPhysicalMemoryAsBad": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMarkPhysicalMemoryAsGood": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmPageEntireDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmPrefetchPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmProbeAndLockPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmProbeAndLockProcessPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmProbeAndLockSelectedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmProtectMdlSystemAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmQuerySystemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmRemovePhysicalMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmResetDriverPaging": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSectionObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSecureVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSetAddressRangeModified": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSetBankedSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSizeOfMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSystemRangeStart": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmTrimAllSystemPagableMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnlockPagableImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnlockPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapIoSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapLockedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapReservedMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapVideoDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapViewInSessionSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapViewInSystemSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnsecureVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUserProbeAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsAnsiCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsLeadByteInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsMbCodePageTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsMbOemCodePageTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsOemCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsOemLeadByteInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAddAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAdjustPrivilegesToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAllocateLocallyUniqueId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAllocateUuids": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAllocateVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtBuildNumber": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtClose": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtConnectPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtCreateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDeleteAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDeleteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDeviceIoControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDuplicateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDuplicateToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtFindAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtFreeVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtFsControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtGlobalFlag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtLockFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtMakePermanentObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtNotifyChangeDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenProcessToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenProcessTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenThreadToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenThreadTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryQuotaInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQuerySecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQuerySystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtReadFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtRequestPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetQuotaInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetSecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtShutdownSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtTraceEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtUnlockFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtVdmControl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtWriteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObAssignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCheckCreateObjectAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCheckObjectAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCloseHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCreateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCreateObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObDereferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObDereferenceSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObFindHandleForObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObGetObjectSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObInsertObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObIsDosDeviceLocallyMapped": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObLogSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObMakeTemporaryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObOpenObjectByName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObOpenObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObQueryNameString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObQueryObjectAuditingByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReferenceObjectByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReferenceObjectByName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReferenceObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReferenceSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReleaseObjectSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObSetHandleAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObSetSecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObSetSecurityObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PfxFindPrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PfxInitialize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PfxInsertPrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PfxRemovePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoCancelDeviceNotify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoQueueShutdownWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRegisterDeviceForIdleDetection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRegisterDeviceNotify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRegisterSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRequestPowerIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRequestShutdownEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoSetHiberRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoSetPowerState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoSetSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoShutdownBugCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoStartNextPowerIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoUnregisterSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ProbeForRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ProbeForWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsAssignImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsChargePoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsChargeProcessNonPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsChargeProcessPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsChargeProcessPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsCreateSystemProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsCreateSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsDereferenceImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsDereferencePrimaryToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsDisableImpersonation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsEstablishWin32Callouts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetContextThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentProcessSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThreadPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThreadStackBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThreadStackLimit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetJobLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetJobSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetJobUIRestrictionsClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessCreateTimeQuadPart": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessDebugPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessExitProcessCalled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessExitStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessExitTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessImageFileName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessInheritedFromUniqueProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessJob": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessPeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessPriorityClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessSectionBaseAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessSecurityPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessWin32Process": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessWin32WindowStation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadFreezeCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadHardErrorsAreDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadTeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadWin32Thread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetVersion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsImpersonateClient": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsInitialSystemProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsIsProcessBeingDebugged": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsIsSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsIsThreadImpersonating": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsIsThreadTerminating": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsJobType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsLookupProcessByProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsLookupProcessThreadByCid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsLookupThreadByThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsProcessType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReferenceImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReferencePrimaryToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRemoveCreateThreadNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRemoveLoadImageNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRestoreImpersonation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReturnPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReturnProcessNonPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReturnProcessPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRevertThreadToSelf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRevertToSelf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetContextThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetCreateProcessNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetCreateThreadNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetJobUIRestrictionsClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetLegoNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetLoadImageNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessPriorityByClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessPriorityClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessSecurityPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessWin32Process": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessWindowStation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetThreadHardErrorsAreDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetThreadWin32Thread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsTerminateSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsThreadType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_BUFFER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_BUFFER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_BUFFER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAbsoluteToSelfRelativeSD": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddAccessAllowedAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddAccessAllowedAceEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddAtomToAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAllocateHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAnsiCharToUnicodeChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAnsiStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAnsiStringToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAppendAsciizToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAppendStringToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAppendUnicodeStringToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAppendUnicodeToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAreAllAccessesGranted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAreAnyAccessesGranted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAreBitsClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAreBitsSet": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAssert": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCaptureContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCaptureStackBackTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCharToInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCheckRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlClearAllBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlClearBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompareMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompareMemoryUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompareString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompareUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompressBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompressChunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlConvertLongToLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlConvertSidToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlConvertUlongToLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopyLuid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopyRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopySid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopyString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopyUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateAcl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateSystemVolumeInformationFolder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCustomCPToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDecompressBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDecompressChunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDecompressFragment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDelete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteAtomFromAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteNoSplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteOwnersRanges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteRegistryValue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDescribeChunk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDestroyAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDestroyHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDowncaseUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEmptyAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnlargedIntegerMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnlargedUnsignedDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnlargedUnsignedMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTableLikeADirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTableWithoutSplaying": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTableWithoutSplayingAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEqualLuid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEqualSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEqualString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEqualUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlExtendedIntegerMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlExtendedLargeIntegerDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlExtendedMagicDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFillMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFillMemoryUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindClearBitsAndSet": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindClearRuns": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindFirstRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindLastBackwardRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindLeastSignificantBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindLongestRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindMessage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindMostSignificantBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindNextForwardRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindSetBitsAndClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFormatCurrentUserKeyPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGUIDFromString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGenerate8dot3Name": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetCallersAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetCompressionWorkSpaceSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetDaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetDefaultCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetFirstRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetGroupSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetNextRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetNtGlobalFlags": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetOwnerSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetSaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetSetBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetVersion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlHashUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlImageDirectoryEntryToData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlImageNtHeader": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitCodePageTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeBitMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertElementGenericTableFull": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertElementGenericTableFullAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInt64ToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIntegerToChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIntegerToUnicode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIntegerToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInvertRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4AddressToStringA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4AddressToStringExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4AddressToStringExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4AddressToStringW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4StringToAddressA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4StringToAddressExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4StringToAddressExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4StringToAddressW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6AddressToStringA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6AddressToStringExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6AddressToStringExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6AddressToStringW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6StringToAddressA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6StringToAddressExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6StringToAddressExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6StringToAddressW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsGenericTableEmpty": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsGenericTableEmptyAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsNameLegalDOS8Dot3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsRangeAvailable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsValidOemCharacter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerAdd": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerArithmeticShift": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerNegate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerShiftLeft": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerShiftRight": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerSubtract": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLengthRequiredSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLengthSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLengthSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLockBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupElementGenericTableFull": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupElementGenericTableFullAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMapGenericMask": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMapSecurityErrorToNtStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMergeRangeLists": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMoveMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMultiByteToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMultiByteToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNextUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNtStatusToDosError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNtStatusToDosErrorNoTeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNumberGenericTableElements": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNumberGenericTableElementsAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNumberOfClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNumberOfSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlOemStringToCountedUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlOemStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlOemStringToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlOemToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlPinAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlPrefixString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlPrefixUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlQueryAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlQueryRegistryValues": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlQueryTimeZoneInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRaiseException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRandom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRandomEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRealPredecessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRealSuccessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRemoveUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlReserveChunk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSecondsSince1970ToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSecondsSince1980ToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSelfRelativeToAbsoluteSD2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSelfRelativeToAbsoluteSD": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetAllBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetDaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetGroupSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetOwnerSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetSaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetTimeZoneInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSizeHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlStringFromGUID": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSubAuthorityCountSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSubAuthoritySid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSubtreePredecessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSubtreeSuccessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTestBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeFieldsToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeToElapsedTimeFields": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeToSecondsSince1970": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeToSecondsSince1980": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeToTimeFields": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseAdd": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseCreate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseDestroy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseEnumerate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseFind": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseUnlock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseValidate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToAnsiSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToCountedOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToOemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeToCustomCPN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeToMultiByteN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeToMultiByteSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeToOemN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnlockBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnwind": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeStringToAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeStringToCountedOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeStringToOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeToCustomCPN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeToMultiByteN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeToOemN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpperChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpperString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlValidRelativeSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlValidSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlValidSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlVerifyVersionInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlVolumeDeviceToDosName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlWalkFrameChain": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlWriteRegistryValue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlZeroHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlZeroMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlxAnsiStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlxOemStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlxUnicodeStringToAnsiSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlxUnicodeStringToOemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAccessCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAppendPrivileges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAssignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAssignSecurityEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditHardLinkCreation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingFileEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingFileEventsWithContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingFileOrGlobalEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingHardLinkEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingHardLinkEventsWithContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCaptureSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCaptureSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCloseObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCreateAccessState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCreateClientSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCreateClientSecurityFromSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeDeassignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeDeleteAccessState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeDeleteObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeExports": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeFilterToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeFreePrivileges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeImpersonateClient": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeImpersonateClientEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeLockSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeMarkLogonSessionForTerminationNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeOpenObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeOpenObjectForDeleteAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SePrivilegeCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SePrivilegeObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SePublicDefaultDacl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeQueryAuthenticationIdToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeQuerySecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeQuerySessionIdToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeRegisterLogonSessionTerminatedRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeReleaseSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeReleaseSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSetAccessStateGenericMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSetSecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSetSecurityDescriptorInfoEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSinglePrivilegeCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSystemDefaultDacl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenImpersonationLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenIsAdmin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenIsRestricted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenIsWriteRestricted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeUnlockSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeUnregisterLogonSessionTerminatedRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeValidSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VerSetConditionMask": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VfFailDeviceNode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VfFailDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VfFailSystemBIOS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VfIsVerificationEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_BUFFER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_BUFFER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_BUFFER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiFlushTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiQueryTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiQueryTraceInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiStartTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiStopTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiTraceMessage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiTraceMessageVa": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiUpdateTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_XIPDispatch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAccessCheckAndAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAddBootEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAdjustPrivilegesToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAlertThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAllocateVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAssignProcessToJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCancelIoFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCancelTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwClearEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwClose": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCloseObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwConnectPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateSymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeleteBootEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeleteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeleteKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeleteValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeviceIoControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDuplicateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDuplicateToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwEnumerateBootEntries": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwEnumerateKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwEnumerateValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFlushInstructionCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFlushKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFlushVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFreeVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFsControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwInitiatePowerAction": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwIsProcessInJob": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwLoadDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwLoadKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwMakeTemporaryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwNotifyChangeKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenProcessToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenProcessTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenSymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenThreadToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenThreadTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwPowerInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwPulseEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryBootEntryOrder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryBootOptions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryDefaultLocale": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryDefaultUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryFullAttributesFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInstallUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQuerySection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQuerySecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQuerySymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQuerySystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwReadFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwReplaceKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwResetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwRestoreKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSaveKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSaveKeyEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetBootEntryOrder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetBootOptions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetDefaultLocale": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetDefaultUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetSecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetSystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwTerminateJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwTerminateProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwTranslateFilePath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwUnloadDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwUnloadKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwUnmapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwWaitForMultipleObjects": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwWriteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwYieldExecution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__CIcos": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__CIsin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__CIsqrt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__abnormal_termination": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__alldiv": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__alldvrm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__allmul": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__alloca_probe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__allrem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__allshl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__allshr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__aulldiv": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__aulldvrm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__aullrem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__aullshr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__except_handler2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__except_handler3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__global_unwind2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__itoa": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__itow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__local_unwind2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__purecall": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__snprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__snwprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__stricmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strlwr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strnicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strnset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strupr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__vsnprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__vsnwprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcslwr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsnicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsnset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsupr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_atoi": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_atol": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isdigit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_islower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isprint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isspace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isxdigit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_mbstowcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_mbtowc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_memchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_memcpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_memmove": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_memset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_qsort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_rand": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_sprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_srand": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strcat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strcmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strcpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strlen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strncat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strncmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strncpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strrchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strstr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_swprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_tolower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_toupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_towlower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_towupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_vDbgPrintEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_vDbgPrintExWithPrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_vsprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcscat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcschr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcscmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcscpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcscspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcslen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsncat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsncmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsncpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsrchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsstr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcstombs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wctomb": 1,
                "section=.data type=utf16le string=\\SystemRoot\\System32\\smss.exe": 1,
                "section=.data type=utf32le string=\\t\\n\\v\\f\\f": 1,
                "section=.data type=utf16le string=\\DRIVER\\VERIFIER": 1,
                "section=.data type=utf8 string=X9x}.A": 1,
                "section=.data type=utf16le string=InvalidTag": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=NT Kernel & System": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2111)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=ntoskrnl.exe": 2,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le string= \\r\uee04\u6d02\uee04\u6002 blocks=Basic Latin,Private Use Area,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string= n\uee0c\u0400\u62ed blocks=Basic Latin,Private Use Area,Cyrillic,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string= n\uee06\ue202\\f\u6e02\uee08\u0400\u02e2\uee04\ued02\\n\u0400 blocks=Basic Latin,Private Use Area,CJK Unified Ideographs,Cyrillic,Spacing Modifier Letters": 1,
                "section=.rsrc type=utf16le string=`L\u0400\u4401\u7c04\ucc18 blocks=Basic Latin,Cyrillic,CJK Unified Ideographs Extension A,CJK Unified Ideographs,Hangul Syllables": 1,
                "section=.rsrc type=utf16le string= H\u0400\u4701\u7704 blocks=Basic Latin,Cyrillic,CJK Unified Ideographs Extension A,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf8 string=\\b\u071c\u071c\\b blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf16le string=\\f\u00f0\u00f0\u06f0 blocks=Basic Latin,Latin-1 Supplement,Arabic": 1,
                "section=.rsrc type=utf16le string=p\\a\uff06\ue002 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area": 1,
                "section=.rsrc type=utf16le string=p?\uff04\uf702\\n\uef02\uff04 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area": 1,
                "section=.rsrc type=utf16le string=p\u00ef\uff04\uf302\\n\u7f02\uff04 blocks=Basic Latin,Latin-1 Supplement,Halfwidth and Fullwidth Forms,Private Use Area,CJK Unified Ideographs": 2,
                "section=.rsrc type=utf16le string=p\u00ef\uff04\uf202\\n\u3f02\uff04 blocks=Basic Latin,Latin-1 Supplement,Halfwidth and Fullwidth Forms,Private Use Area,CJK Unified Ideographs Extension A": 2,
                "section=.rsrc type=utf16le string=p\u00ef\uff04\uf002\\n\u7f02\uff04 blocks=Basic Latin,Latin-1 Supplement,Halfwidth and Fullwidth Forms,Private Use Area,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=p?\uff04\u0400\u07f3\uff04\u0400\u0720\uff04\u0400 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Cyrillic,NKo,Syriac": 1,
                "section=.rsrc type=utf16le string=p\u00ef\uff04\u0400\u02e0\uff04\u0400\u3f70\uff04\u0400\u0370\uff04\u0800\u00e2\uef02\uff0e\u0400 blocks=Basic Latin,Latin-1 Supplement,Halfwidth and Fullwidth Forms,Cyrillic,Spacing Modifier Letters,CJK Unified Ideographs Extension A,Greek and Coptic,Samaritan,Private Use Area": 1,
                "section=.rsrc type=utf16le /\uff04\ue002 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area": 1,
                "section=.rsrc type=utf16le /\uff04\u0400 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Cyrillic": 1,
                "section=.rsrc type=utf16le string=r?\uff04\ue002\\n blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area": 1,
                "section=.rsrc type=utf16le string=r\\b\u3306\u3002\\b\u0302\u3304\u3002\\b\u0302\u3304\u2002 blocks=Basic Latin,CJK Compatibility,CJK Symbols and Punctuation,Combining Diacritical Marks,General Punctuation": 1,
                "section=.rsrc type=utf8 string=\\b\u0608U \\e blocks=Basic Latin,Arabic": 1,
                "section=.rsrc type=utf16le string= @\u0402\u4404 blocks=Basic Latin,Cyrillic,CJK Unified Ideographs Extension A": 1,
                "section=.rsrc type=utf8 string=\\b\u0208UP\\v blocks=Basic Latin,Latin Extended-B": 1,
                "section=.rsrc type=utf8 string=\\b\u020cU \\t blocks=Basic Latin,Latin Extended-B": 1,
                "section=.rsrc type=utf16le string= \\f\u0400\uff0f\u2208\u0800\u0121\u60ff blocks=Basic Latin,Cyrillic,Halfwidth and Fullwidth Forms,Mathematical Operators,Samaritan,Latin Extended-A,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string= \\b\u0400\uff0f\\f blocks=Basic Latin,Cyrillic,Halfwidth and Fullwidth Forms": 1,
                "section=.rsrc type=utf16le string=`\\b\u0400\u621e blocks=Basic Latin,Cyrillic,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=`\\b\u0400\ue66fR\u0400\uff0f@\u0400\uf62f blocks=Basic Latin,Cyrillic,Private Use Area,Halfwidth and Fullwidth Forms": 1,
                "section=.rsrc type=utf16le string=`R\u0400\uff0f\u220a\u2102, blocks=Basic Latin,Cyrillic,Halfwidth and Fullwidth Forms,Mathematical Operators,Letterlike Symbols": 1,
                "section=.rsrc type=utf8 string=\u0687e\"\"\"\"\"\"\"\"\"fR\"\"b\"\"\"\"\"\"\"e\"\"\"\"\"\"\"\"&e\"\"\"\"\"\"\"\"\"& blocks=Arabic,Basic Latin": 1,
                "section=.rsrc type=utf8 string=\"k\u0782n\"\"\" blocks=Basic Latin,Thaana": 1,
                "section=.rsrc type=utf8 string=R\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\ua657\"\"\"\"\"\"\"\")b blocks=Basic Latin,Cyrillic Extended-B": 1,
                "arch     x86": 1,
                "binsz    2188928": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x00219869": 1,
                "compiled Sun Apr 13 20:27:39 2008": 1,
                "crypto   false": 1,
                "dbg_file ntoskrnl.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x002247c2": 1,
                "guid     47A5AC97343A4A7ABF14EFD9E99337722": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       native": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Native": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x15": 1,
                "TimeDateStamp : 0x48025eab": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x10e": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0x1c2880": 1,
                "SizeOfInitializedData : 0x53880": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x580": 1,
                "BaseOfData : 0x6ae80": 1,
                "ImageBase : 0x400000": 1,
                "SectionAlignment : 0x80": 1,
                "FileAlignment : 0x80": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x5": 1,
                "MinorSubsystemVersion : 0x1": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x216680": 1,
                "SizeOfHeaders : 0x580": 1,
                "CheckSum : 0x2247c2": 1,
                "Subsystem : 0x1": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x40000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x1ac280": 1,
                "Size : 0xb5a2": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x1f5bb4": 1,
                "Size : 0x50": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x1f6500": 1,
                "Size : 0x106f8": 1,
                "IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "VirtualAddress : 0x206c00": 1,
                "Size : 0xfa7c": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x72a40": 1,
                "Size : 0x38": 1,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0x53830": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x580": 1,
                "Size : 0x154": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "bootvid.dll": 1,
                "hal.dll": 1,
                "kdcom.dll": 1,
                "2188928": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x1": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: NT Kernel & System": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2111)": 1,
                "InternalName: ntoskrnl.exe": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: ntoskrnl.exe": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}