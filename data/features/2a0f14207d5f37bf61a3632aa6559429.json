{
    "filepath": "/corpus/benign/eventtriggers.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "2a0f14207d5f37bf61a3632aa6559429"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "jl  <.text+>;movb $-, %bh;jl - <.text+>;addl %eax, -(%edx);jl  <.text+>": 1,
                "jl  <.text+>;xchgl %ebx, %eax;cmpb $-, -(%eax,%edi,);jl - <.text+>;cltd": 1,
                "pushl %ds;cmpb $-, -(%ebp,%eax,);jl  <.text+>;xchgb %bh, %ds:-(%eax,%edx);cmpl $, (%edx,%edx)": 1,
                "imull $, (%ebp), %esp;subl $, %eax;imull $, %esi, %ebp;jbe  <.text+>;imull $, %esi, %edx": 1,
                "ldsl -(%ebp), %ecx;salc;retl;decl %ebp;popfl": 1,
                "retl $-;outb %al, %dx;rorb $, (%ebp);ldsl (%ebp), %ecx;sahf": 1,
                "outb %al, %dx;rorb $, (%ebp);ldsl (%ebp), %ecx;sahf;retl $-": 1,
                "subl $, %eax;retl $-;sahf;retl $-;jl - <.text+>": 1,
                "imulb %dh;retl $-;pushl $-;decl %ebp;das": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ch, (%esi)": 1,
                "addb %al, (%eax);addb %dh, (%eax,%eax);addb %ah, (%ebp);imull $, (%eax), %eax;insb %dx, %es:(%edi)": 1,
                "addb %dl, (%eax,%eax);addb %cl, (%edi);pushl %edx;addb %cl, (%ecx);pushl %esp": 1,
                "popl %esp;addb %dl, (%ebx);popl %ecx;addb %dl, (%ebx);pushl %esp": 1,
                "js  <.text+>;andl $, %eax;addb %bl, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bl, (%ebx);popl %ebp;addb %bh, (%edx);addb %bh, (%eax,%eax);addb %bh, (%esi)": 3,
                "jle  <.text+>;popl %esi;addb %ah, (%edi);addb %al, (%eax);pushal": 1,
                "addb %dl, (%eax,%eax);addb %dh, (%esi);addb %ch, %gs:(%esi);je  <.text+>;decl %esp": 1,
                "incl %esp;addb %ah, (%eax);addb %dh, (%eax,%eax);addb %dh, (%edx);addb %ah, (%di)": 1,
                "decl %esi;addb %al, (%eax,%eax);addb %dh, (%eax,%eax);addb %dh, (%edx);addb %ah, (%di)": 3,
                "popal;addb %ch, (%esi);arpl %ax, (%eax);addb %ch, %gs:(%esi);addb %dl, (%ebx)": 2,
                "addb %bh, ;addb %ah, (%eax);addb %al, (%ecx);decl %esi;addb %al, (%eax,%eax)": 1,
                "addb %dh, (%eax);addb %ah, %gs:(%eax);addb %bh, ;addb %ch, (%ecx);addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);addb %ah, (%ebp);andb %al, (%eax);cmpl $, %eax;addb %ah, (%eax)": 1,
                "cmpl $, %eax;addb %ah, (%eax);addb %al, (%ecx);decl %esi;addb %al, (%eax,%eax)": 1,
                "addb %bl, (%edi);imull $, (%eax), %eax;je  <.text+>;popal;addb %ch, (%esi)": 3,
                "pushl %esp;addb %dh, (%edx);imull $, (%eax), %eax;addb %dh, %gs:(%edx);incl %esp": 1,
                "imull $, (%eax), %eax;addb %dh, %gs:(%edx);incl %ecx;addb %ah, (%ebx);je  <.text+>": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);pushl %esp;addb %dh, (%edx);imull $, (%eax), %eax": 1,
                "insl %dx, %es:(%edi);addb %ah, (%ebp);addb %al, (%eax);incl %ebx;addb %dh, (%edx)": 1,
                "addb %al, (%eax);andl $, %eax;addb %ah, ;addb %dh, (%edx);outsl (%esi), %dx": 1,
                "addb %al, (%eax);addb %dl, (%ecx);jne  <.text+>;addb %dh, %gs:(%edx);jns  <.text+>": 1,
                "jns  <.text+>;incl %ebp;addb %dl, (%eax,%eax);addb %ch, (%ecx);addb %ah, (%bx)": 1,
                "incl %ebx;addb %ch, (%edi);addb %ah, %fs:(%ebp);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ch, %gs:(%esi);addb %dl, (%eax,%eax);addb %dh, (%eax);addb %al, %gs:(%eax);addb %dl, (%eax,%eax)": 1,
                "jbe  <.text+>;addb %ch, %gs:(%esi);je  <.text+>;andb (%eax), %al;andb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dh, (%ebx);addb %ch, %gs:(%eax,%eax);addb %ah, (%ebx)": 1,
                "pushl %ebx;addb %al, (%ebp);pushl %edx;addb %dl, (%esi);incl %ebp": 1,
                "insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %dh, (%edx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);orb (%eax), %al;addb %al, (%eax);popl %edi;addb %bl, (%edi)": 1,
                "addb %bl, (%edi);incl %esi;addb %ch, (%ecx);insb %dx, %es:(%edi);addb %dh, (%eax,%eax)": 1,
                "addb %bh, (%edi);addb %ch, (%edx);addb %al, (%eax);addb %ch, (%esi);addb %al, (%eax)": 1,
                "outsb (%esi), %dx;addb %dh, (%ebx);addb %dh, (%edx);addb %bl, (%edi);decl %edi": 1,
                "addb %dh, %al;movl $, %edi;addb %al, %fs:(%eax);addb %ah, ;addb %al, (%eax)": 1,
                "decl %ecx;decl %esp;popal;outsb (%esi), %dx;jne  <.text+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, (%eax,%eax);addb %dh, (%ebx);jl  <.text+>": 1,
                "andl $, %eax;addb %ch, (%edi);addb %al, (%eax);addb %al, (%eax);addb %ah, (%eax)": 1,
                "addb %ah, (%eax);addb %ch, (%edi);addb %bh, (%edi);addb %al, (%eax);addb %ah, (%eax)": 1,
                "nop;addb %al, %al;decl %edi;fdivr %st();incl (%ecx)": 1,
                "decl %ebx;andb $-, %al;fcoml -(%esi);movw %es, (%edx);addb %ch, -(%edx)": 1,
                "calll ;addb %al, %al;decl %edi;movb $-, %dh;andb %dh, -(%esi)": 1,
                "decl %edi;movb $-, %dh;andb %dh, -(%esi);incl %esp;cld": 1,
                "xorb -(%esi), %bl;adcl %eax, (%ebp);popl %ds;addl $-, (,%eax,);xorb $, %al": 1,
                "adcl %eax, (%ebp);popl %ds;addl $-, (,%eax,);xorb $, %al;movb (%edx), %ch": 1,
                "ljmpl *(%eax);andb %bh, -(%ebp);adcl %ebp, (%ebp);fdivr %st();incl (%esi)": 1,
                "adcl %eax, (%ebp);popl %ds;addl $, (%edx,%esi,);adcl $, %eax;adcl %ebp, (%ebp)": 1,
                "incl %esp;pushl %ebx;testb $-, %al;lcalll $-, $;sbbl %edi, (%ebx)": 1,
                "addl %eax, (%eax);addb %al, (%eax);incl %ebp;jbe  <.text+>;jb  <.text+>": 1,
                "addb %dh, %ah;fldl (%eax);addb %cl, (%ebx);fiadds (%eax);addb %dh, (%edx)": 1,
                "filds (%eax);addb %cl, -;loopne ;addb %ah, -(%ebx);loopne ": 1,
                "addb %bh, (%esi);loope ;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp)": 2,
                "movl $, (%esi);calll *;testl %eax, %eax;movl %eax, (%esi);jne  <.text+>": 1,
                "int;int;int;int;int": 282,
                "movl (%ebp), %edx;movl %ecx, %eax;xorl %ecx, %ecx;movl %edx, (%eax);movl (%ebp), %edx": 2,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl %ecx, %eax;movl (%ebp), %ecx": 2,
                "pushl %edi;movl $, (%eax);movl (%ecx), %edx;leal (%ecx), %esi;movl %edx, (%eax)": 1,
                "rep  movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);popl %edi;popl %esi;popl %ebp": 1,
                "movl %esp, %ebp;pushl %esi;movl %ecx, %esi;calll  <.text+>;testb $, (%ebp)": 1,
                "andl $, (%esi);pushl $;movl $, (%esi);movl $, (%esi);movl %eax, (%esi)": 1,
                "calll *%edi;pushl $;leal (%esi), %eax;pushl %eax;calll *%edi": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 5,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *%ebx;addl $, %esp": 2,
                "pushl %edi;pushl (%esi);movl , %edi;calll *%edi;testl %eax, %eax": 1,
                "calll *%edi;testl %eax, %eax;jne  <.text+>;pushl (%esi);calll *%edi": 2,
                "jne  <.text+>;pushl (%esi);calll *%edi;testl %eax, %eax;je  <.text+>": 1,
                "pushl %eax;calll  <.text+>;cmpl $, (%esi);pushl (%esi);jne  <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;cmpl $, (%esi);jne  <.text+>;pushl $": 1,
                "pushl %eax;calll *;pushl (%esi);leal -(%ebp), %eax;pushl %eax": 1,
                "int;movl $, %eax;calll  <.text+>;pushl %ecx;pushl %esi": 4,
                "pushl %ebx;calll *;cmpl %ebx, %eax;movl %eax, -(%ebp);movl %eax, (%esi)": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);movl %eax, (%esi);je  <.text+>;movl (%edi), %edi": 1,
                "movl (%edi), %edi;pushl %edi;calll - <.text+>;cmpw %bx, %ax;je  <.text+>": 1,
                "movl %ecx, %esi;calll - <.text+>;testb $, (%ebp);je  <.text+>;pushl %esi": 5,
                "movl %esi, %ecx;movl %eax, (%esi);calll  <.text+>;movl (%esi), %edi;cmpl $, %edi": 2,
                "calll  <.text+>;subl $, %esp;pushl %ebx;pushl %esi;movl %ecx, %esi": 3,
                "pushl %edi;leal -(%ebp), %ecx;calll  <.text+>;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "jne  <.text+>;pushl $;jmp  <.text+>;cmpl %ebx, (%esi);jne  <.text+>": 1,
                "jne  <.text+>;pushl $;jmp  <.text+>;cmpl %ebx, (%esi);je  <.text+>": 2,
                "je  <.text+>;pushl (%esi);calll *;testl %eax, %eax;jne  <.text+>": 6,
                "jne  <.text+>;pushl (%esi);leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx": 5,
                "cmpl $, (%esi);jne  <.text+>;pushl (%esi);leal -(%ebp), %ecx;calll  <.text+>": 3,
                "calll  <.text+>;cmpl $, (%eax);je  <.text+>;incl %ebx;cmpl (%ebp), %ebx": 1,
                "cmpl (%ebp), %ebx;jb - <.text+>;xorl %ebx, %ebx;pushl (%esi);leal -(%ebp), %ecx": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;cmpl $-, %eax;je  <.text+>;pushl $;jmp  <.text+>": 1,
                "popl %ebx;movl %ecx, %fs:;leave;retl $;pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;int;int": 3,
                "calll  <.text+>;cmpl %edi, -(%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;movl (%esi), %eax;cmpl %edi, %eax;je  <.text+>;pushl %eax": 1,
                "movl %eax, (%esi);movl -(%ebp), %ecx;movl (%ecx), %edx;pushl %edi;pushl %edi": 1,
                "pushl -(%ebp);calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl -(%ebp), %eax": 1,
                "pushl %eax;calll *(%ecx);movl %edi, -(%ebp);xorl %eax, %eax;jmp  <.text+>": 1,
                "calll *(%ecx);movl %edi, -(%ebp);xorl %eax, %eax;jmp  <.text+>;leal -(%ebp), %eax": 1,
                "calll  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll *": 1,
                "jmp  <.text+>;pushl $;calll  <.text+>;pushl %eax;movl , %eax": 4,
                "leal -(%ebp), %edx;pushl %edx;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl %esi;pushl %eax;calll *(%ecx);movl %eax, %edi": 1,
                "movl %esi, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "je - <.text+>;leal -(%ebp), %eax;pushl %eax;calll *;movl %eax, %edi": 1,
                "testl %eax, %eax;jne - <.text+>;movl -(%ebp), %eax;cmpl %esi, %eax;je  <.text+>": 1,
                "movl %esp, -(%ebp);movl %ecx, %esi;movl %esi, -(%ebp);pushl (%esi);calll  <.text+>": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 1,
                "calll  <.text+>;pushl -(%ebp);calll  <.text+>;pushl (%esi);pushl (%edi)": 2,
                "movl %eax, -(%ebp);testl %eax, %eax;jge  <.text+>;pushl %eax;calll  <.text+>": 1,
                "testl %eax, %eax;jge  <.text+>;pushl %eax;calll  <.text+>;pushl -(%ebp)": 1,
                "calll  <.text+>;pushl -(%ebp);calll  <.text+>;pushl (%esi);calll  <.text+>": 1,
                "pushl %eax;calll  <.text+>;movl $, %eax;retl;jmp  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl , %ebx;calll *%ebx;cmpl $, -(%ebp)": 1,
                "pushl %eax;movl , %ebx;calll *%ebx;cmpl $, -(%ebp);je  <.text+>": 1,
                "movl %esi, %ecx;calll - <.text+>;jmp  <.text+>;xorl %eax, %eax;incl %eax": 1,
                "pushl %eax;pushl $;pushl (%esi);calll  <.text+>;leal -(%ebp), %eax": 1,
                "movl , %edi;pushl (%esi);calll *;testl %eax, %eax;jle  <.text+>": 1,
                "pushl %eax;pushl (%esi);calll *%ebx;testl %eax, %eax;jne  <.text+>": 1,
                "calll *%ebx;testl %eax, %eax;jne  <.text+>;pushl $;calll  <.text+>": 1,
                "pushl %ecx;pushl %eax;calll *;addl $, %esp;pushl $": 1,
                "andl $, (%esi);popl %esi;retl;int;int": 2,
                "int;int;jmp - <.text+>;int;int": 1,
                "jmp  <.text+>;cmpl %ebx, (%edi);jne  <.text+>;movl %ebx, -(%ebp);pushl (%esi)": 2,
                "pushl (%esi);calll *;testl %eax, %eax;je  <.text+>;leal -(%ebp), %ecx": 3,
                "calll - <.text+>;pushl $-;calll *;movl %eax, (%esi);cmpl %ebx, %eax": 1,
                "calll *;leal (%esi), %eax;pushl %eax;pushl $;calll  <.text+>": 3,
                "pushl %ebx;pushl -(%ebp);pushl %ecx;calll *(%edx);movl %eax, -(%ebp)": 1,
                "movl %ebx, (%esi);cmpl %ebx, -(%ebp);jge  <.text+>;pushl -(%ebp);calll  <.text+>": 2,
                "calll  <.text+>;pushl -(%ebp);calll  <.text+>;pushl $;calll *%edi": 5,
                "pushl %edi;pushl %ebx;pushl %eax;calll *(%ecx);movl %eax, -(%ebp)": 2,
                "pushl %ebx;pushl %eax;calll *(%ecx);movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "calll  <.text+>;pushl (%esi);pushl $;pushl (%edi);calll  <.text+>": 3,
                "pushl (%esi);leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp);movb $, -(%ebp)": 2,
                "jmp  <.text+>;movl %ebx, -(%ebp);movl (%esi), %eax;leal (%esi), %ecx;movl (%eax), %edx": 1,
                "pushl %eax;calll *;pushl $;pushl (%esi);calll  <.text+>": 1,
                "jne  <.text+>;pushl $;calll  <.text+>;jmp  <.text+>;calll  <.text+>": 3,
                "movl %ecx, (%eax);movl %ecx, (%eax);popl %ebp;retl $;int": 1,
                "movl %edi, (%esi);cmpl $, (%esi);popl %edi;popl %esi;jne  <.text+>": 1,
                "testl %eax, %eax;jne  <.text+>;pushl $;jmp  <.text+>;cmpl %edi, (%esi)": 4,
                "pushl $;jmp  <.text+>;cmpl %edi, (%esi);jne  <.text+>;cmpl %edi, (%esi)": 4,
                "je  <.text+>;pushl $;pushl %eax;calll *%ebx;cmpl %edi, (%esi)": 1,
                "calll *%ebx;cmpl %edi, (%esi);popl %edi;popl %esi;popl %ebx": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;orl $-, -(%ebp)": 2,
                "jl  <.text+>;movl (%ebp), %eax;cmpl -(%ebp), %eax;je  <.text+>;movl (%esi), %eax": 1,
                "pushl %eax;calll *(%ecx);movl %eax, %ebx;cmpl %edi, %ebx;jge - <.text+>": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;pushl %esi;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %esi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl (%eax), %ecx;pushl %eax": 1,
                "calll *(%ecx);jmp  <.text+>;pushl $;pushl (%ebp);pushl %esi": 1,
                "movl %eax, %edi;cmpl %esi, %edi;movl -(%ebp), %eax;jge  <.text+>;cmpl %esi, %eax": 1,
                "pushl %edi;calll  <.text+>;xorl %eax, %eax;jmp  <.text+>;cmpl %esi, %eax": 1,
                "movl -(%ebp), %ecx;popl %edi;popl %esi;calll  <.text+>;leave": 1,
                "movl %esi, %ecx;movl %eax, (%esi);calll - <.text+>;movl (%esi), %eax;cmpl $, %eax": 2,
                "movl %eax, (%esi);calll - <.text+>;movl (%esi), %eax;cmpl $, %eax;jle  <.text+>": 1,
                "pushl %eax;movl %esi, %ecx;movl %eax, (%esi);calll - <.text+>;pushl $": 2,
                "calll  <.text+>;testl %eax, %eax;movl %eax, (%esi);jne  <.text+>;pushl $": 1,
                "pushl $;calll *%ebx;pushl $;calll  <.text+>;popl %edi": 1,
                "leal (%esi), %ecx;pushl %ecx;pushl %eax;calll *;leal (%esi), %edi": 1,
                "leal (%esi), %edi;pushl %edi;calll  <.text+>;movl $, (%esi);pushl (%esi)": 1,
                "pushl %edx;pushl $;pushl (%esi);pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %ecx;pushl %ebx;pushl %ebx;pushl -(%ebp);pushl %eax": 4,
                "movl (%eax), %edx;pushl %ecx;pushl %ebx;pushl %eax;calll *(%edx)": 1,
                "jmp  <.text+>;xorl %eax, %eax;pushl %eax;pushl $;pushl (%esi)": 3,
                "pushl %edx;pushl -(%ebp);pushl %eax;calll *(%ecx);movl %eax, -(%ebp)": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%edi);calll  <.text+>": 2,
                "calll  <.text+>;jmp - <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;pushl $": 1,
                "calll  <.text+>;movl %eax, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %ecx;pushl %eax;movl %esi, %ecx;calll - <.text+>;cmpl $, %eax": 1,
                "movl , %eax;addl $, %eax;jmp  <.text+>;cmpl $, %eax;je  <.text+>": 1,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "cmpl $, %eax;je  <.text+>;cmpl %ebx, %eax;jge  <.text+>;pushl %eax": 1,
                "addl $, %eax;pushl %eax;calll  <.text+>;incl -(%ebp);jmp - <.text+>": 1,
                "movl %eax, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movl %eax, (%esi);movl %edi, (%esi);movl $, (%esi);movl %esi, %eax;popl %edi": 1,
                "popl %ecx;movl %edi, (%ebx);cmpl $, (%esi);popl %edi;popl %esi": 1,
                "movl %ebx, (%esi);calll *%edi;pushl $;leal (%esi), %eax;pushl %eax": 5,
                "leal (%esi), %eax;pushl %eax;movl %ebx, (%esi);movl %ebx, (%esi);calll *%edi": 6,
                "movl $, (%esi);movl $, (%esi);movl %ebx, (%esi);movl %eax, (%esi);calll  <.text+>": 1,
                "leal (%esi), %eax;pushl %eax;calll *%edi;pushl $;leal (%esi), %eax": 1,
                "pushl %eax;movl %ebx, (%esi);movl $, (%esi);movl %ebx, (%esi);calll *%edi": 1,
                "movl %ecx, %esi;movl (%esi), %ecx;testl %ecx, %ecx;pushl %edi;je  <.text+>": 1,
                "pushl %ebx;pushl %eax;calll *%edi;andl $, (%esi);andl $, (%esi)": 1,
                "pushl (%ebp);movl %eax, -(%ebp);calll *%ebx;movl (%ebp), %edi;pushl (%edi)": 1,
                "movl (%ebp), %edi;pushl (%edi);movl %eax, -(%ebp);calll *%ebx;pushl (%edi)": 1,
                "calll *%ebx;leal (%eax,%eax), %eax;pushl %eax;calll  <.text+>;movl (%edi), %esi": 1,
                "movl (%edi), %esi;andl $, -(%ebp);popl %ecx;movl %eax, %ecx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;incl -(%ebp);leal (%eax,%ecx,), %esi;pushl (%ebp);pushl %esi": 1,
                "calll  <.text+>;testl %eax, %eax;popl %ecx;movl %eax, (%edi);jne  <.text+>": 1,
                "subl %esi, %ecx;movl -(%ebp), %esi;sarl %ecx;subl %ecx, %eax;subl %edx, %eax": 1,
                "addl %eax, %eax;pushl %eax;movl %eax, -(%ebp);leal (%edi,%edx,), %eax;addl %esi, %esi": 1,
                "calll *%ebx;jmp  <.text+>;testl %ecx, %ecx;je  <.text+>;pushl %ecx": 1,
                "pushl %eax;calll  <.text+>;popl %ecx;pushl -(%ebp);movl %esi, %ecx": 1,
                "calll  <.text+>;subl $, %esp;pushl %esi;pushl (%ebp);movl %ecx, %esi": 1,
                "pushl (%ebp);leal (%ebp), %ecx;calll - <.text+>;xorl %edi, %edi;movl %edi, -(%ebp)": 1,
                "calll - <.text+>;xorl %edi, %edi;movl %edi, -(%ebp);movl (%eax), %eax;cmpl %edi, %eax": 1,
                "movl %eax, %ebx;orl $-, -(%ebp);movl (%ebp), %ecx;cmpl %edi, %ecx;je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;movl (%ebx), %ebx;movl (%ebx), %eax": 1,
                "pushl (%ebp);pushl %ebx;calll *(%eax);cmpl %edi, (%ebp);movl %eax, %ebx": 1,
                "calll *;movl %eax, %ebx;cmpl %edi, %ebx;jge  <.text+>;pushl %ebx": 1,
                "calll  <.text+>;pushl %ebx;calll  <.text+>;pushl (%esi);calll *": 1,
                "calll  <.text+>;pushl (%esi);calll *;testl %eax, %eax;popl %edi": 1,
                "calll *;movl -(%ebp), %ecx;xorl %eax, %eax;popl %esi;movl %ecx, %fs:": 1,
                "leal (%esi), %edi;movl (%eax), %ecx;pushl %ebx;pushl %edi;pushl %ebx": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp)": 1,
                "calll  <.text+>;movl -(%ebp), %eax;movl (%eax), %edx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl $;pushl $-;pushl %eax;calll *(%edx)": 1,
                "pushl $-;pushl %eax;calll *(%edx);movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "pushl %eax;calll  <.text+>;pushl -(%ebp);calll  <.text+>;cmpl %ebx, -(%ebp)": 7,
                "movl (%esi), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %ecx;pushl %eax": 5,
                "pushl $;popl %edi;jmp  <.text+>;pushl $;pushl %ebx": 1,
                "pushl $;pushl %ebx;pushl $;calll  <.text+>;pushl %eax": 2,
                "testl %eax, %eax;jne  <.text+>;movl %ebx, %edi;jmp  <.text+>;pushl $": 1,
                "pushl %eax;pushl (%esi);calll  <.text+>;movl %eax, %edi;negl %edi": 1,
                "calll *;pushl $;calll *;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "pushl -(%ebp);calll *;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 2,
                "calll  <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;pushl $": 1,
                "pushl %eax;calll  <.text+>;pushl -(%ebp);calll  <.text+>;movl (%esi), %eax": 2,
                "movl %ebx, -(%ebp);pushl -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "addl $, %esp;leal -(%ebp), %eax;pushl %eax;calll *;movl %eax, -(%ebp)": 2,
                "movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *;movl %eax, -(%ebp)": 2,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);pushl (%esi);pushl %eax;pushl %ecx": 4,
                "xorl %eax, %eax;pushl %eax;movl %esi, %ecx;calll - <.text+>;movb $, -(%ebp)": 1,
                "pushl (%esi);calll  <.text+>;pushl -(%ebp);pushl $;pushl -(%ebp)": 1,
                "pushl (%esi);pushl $;pushl -(%ebp);pushl (%esi);calll  <.text+>": 4,
                "calll *%edi;movl (%esi), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %ecx": 1,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl %ebx, (%esi);movl (%esi), %eax": 2,
                "pushl %ecx;andl $, -(%ebp);cmpl $, (%ebp);pushl %ebx;movl %ecx, %ebx": 1,
                "andl $, (%esi);pushl %ebx;leal (%esi), %eax;pushl %eax;calll *%edi": 1,
                "movl %edi, %edi;pushl %esi;pushl $;popl %esi;pushl %esi": 3,
                "int;int;movl %edi, %edi;pushl %esi;movl $, %esi": 1,
                "movl (%ebp), %eax;pushl $;movl %eax, -(%ebp);xorl %eax, %eax;testl %ebx, %ebx": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);pushl $": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 2,
                "leal -(%ebp), %eax;pushl %eax;calll *;movl %esi, %eax;jmp  <.text+>": 1,
                "je  <.text+>;decl %eax;je  <.text+>;subl $, %eax;je  <.text+>": 1,
                "movl -(%ebp), %eax;jmp - <.text+>;movw -(%ebp), %ax;movw %ax, (%ebx);leal -(%ebp), %eax": 1,
                "movw -(%ebp), %ax;movw %ax, (%ebx);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "xorl %eax, %eax;cmpl %esi, %ebx;movw %si, -(%ebp);popl %ecx;leal -(%ebp), %edi": 1,
                "cmpl %esi, %ebx;movw %si, -(%ebp);popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl %esi, -(%ebp);stosw %ax, %es:(%edi);je  <.text+>;movw (%edx), %ax;pushl $": 1,
                "pushl %edi;pushl (%ebp);calll  <.text+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);calll  <.text+>;testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>": 1,
                "movl -(%ebp), %eax;popl %edi;popl %esi;calll  <.text+>;leave": 1,
                "calll  <.text+>;leave;retl $;jb  <.text+>;testl %eax, %eax": 1,
                "pushl %eax;calll  <.text+>;pushl $;leal -(%ebp), %ecx;calll  <.text+>": 2,
                "cmpl %ebx, %edi;jne  <.text+>;calll  <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "cmpl %ebx, %eax;movl -(%ebp), %eax;jne  <.text+>;movl %eax, -(%ebp);leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);cmpl %ebx, %eax;jne  <.text+>;calll - <.text+>": 2,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);pushl %eax;pushl %ecx;leal -(%ebp), %ecx": 3,
                "pushl %ebx;pushl %esi;movl , %esi;pushl %edi;movl %ecx, %ebx": 1,
                "cmpl %ecx, %eax;jg  <.text+>;je  <.text+>;cmpl $, %eax;je  <.text+>": 1,
                "jmp  <.text+>;movl $, %ecx;subl %ecx, %eax;cmpl $, %eax;ja  <.text+>": 1,
                "leal (%ebx), %eax;pushl %eax;calll *;jmp  <.text+>;pushl $": 1,
                "jmp  <.text+>;pushl $;jmp  <.text+>;pushl $;calll  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;movl , %eax;subl $, %eax": 1,
                "pushl %eax;calll *;addl $, %esp;jmp  <.text+>;pushl $": 4,
                "pushl %eax;calll *%esi;leal -(%ebp), %eax;pushl %eax;leal (%ebx), %esi": 1,
                "popl %ebx;calll  <.text+>;leave;retl;addl (%esi), %edi": 1,
                "addl %esi, ;jle  <.text+>;addl %eax, (%ebx);addb %al, (%ecx);decl %edx": 1,
                "jle  <.text+>;addl %eax, (%ebx);addb %al, (%ecx);decl %edx;jle  <.text+>": 1,
                "orl %eax, (%ebx);addb $, %al;orl %ecx, (%ecx);orl %eax, (%esi);popl %es": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp)": 5,
                "int;int;int;movl %edi, %edi;pushl %ecx": 1,
                "pushl %eax;calll - <.text+>;retl;int;int": 1,
                "jmp  <.text+>;pushl $;leal -(%ebp), %ecx;calll  <.text+>;movl %eax, -(%ebp)": 1,
                "je  <.text+>;movl %esi, -(%ebp);jmp  <.text+>;movl %esi, -(%ebp);xorl %esi, %esi": 1,
                "movl -(%ebp), %ecx;movl %ecx, %fs:;popl %edi;popl %esi;popl %ebx": 10,
                "leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp);calll  <.text+>;cmpl $, %eax": 1,
                "popl %ecx;popl %ecx;je  <.text+>;pushl -(%ebp);calll  <.text+>": 1,
                "je - <.text+>;pushl -(%ebp);calll  <.text+>;movl %eax, (%esi);xorl %esi, %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 5,
                "calll *(%eax);testl %eax, %eax;jne  <.text+>;movl (%esi), %eax;pushl %ebx": 1,
                "testl %eax, %eax;jne  <.text+>;movl (%esi), %eax;pushl %ebx;pushl %edi": 1,
                "movl (%esi), %eax;pushl %ebx;pushl %edi;leal -(%ebp), %ecx;pushl %ecx": 1,
                "testl %edi, %edi;je  <.text+>;movl -(%ebp), %eax;testl %eax, %eax;je  <.text+>": 1,
                "je  <.text+>;movl (%eax), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 1,
                "pushl %eax;calll *;retl;xorl %eax, %eax;retl": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);calll - <.text+>;leal (%eax,%edi), %esi;movl %eax, -(%ebp)": 1,
                "leal (%esi,%esi), %eax;pushl %eax;pushl $;calll *;testl %eax, %eax": 1,
                "testl %eax, %eax;movl %eax, (%ebx);jne  <.text+>;testl %esi, %esi;je  <.text+>": 1,
                "movl (%eax), %eax;jmp  <.text+>;xorl %eax, %eax;testl %eax, %eax;je  <.text+>": 2,
                "movl %eax, %esi;movl (%ebx), %eax;leal (%eax,%edi,), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "leal (%eax,%edi,), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movl (%esi), %eax;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "pushl (%ebp);calll *;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "jmp  <.text+>;movl %eax, (%esi);movw $, (%esi);movl %esi, %eax;popl %esi": 1,
                "pushl %eax;pushl $;pushl (%ebp);calll - <.text+>;popl %ebp": 1,
                "jmp  <.text+>;pushl %edi;pushl $;xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "movl -(%ebp), %eax;pushl (%ebp);movl %eax, (%esi);pushl (%esi);calll *": 1,
                "movl %eax, (%esi);je - <.text+>;movl (%ebp), %eax;pushl (%ebp);movl %eax, (%esi)": 1,
                "cmpl %edi, %eax;jl  <.text+>;pushl %esi;pushl -(%ebp);pushl -(%ebp)": 1,
                "retl;jmp  <.text+>;movl $, %ebx;pushl %ebx;calll *": 1,
                "jne  <.text+>;movl $, %esi;jmp  <.text+>;pushl %edi;movl (%ebp), %edi": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;movl %eax, %esi;cmpl $-, %esi;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;je  <.text+>;pushl %esi;leal (%ebp), %eax;pushl %eax": 1,
                "leal (%ebp), %ecx;calll  <.text+>;incl %esi;pushl %esi;leal (%ebp), %eax": 1,
                "pushl $;pushl %ebx;pushl %ebx;pushl %ebx;pushl $": 1,
                "movl %edi, %ecx;calll - <.text+>;movl (%esi), %eax;movl %eax, (%edi);movl %edi, %eax": 1,
                "calll  <.text+>;pushl %ecx;pushl %esi;movl %ecx, %esi;calll - <.text+>": 1,
                "movl %eax, (%esi);movl %esi, %eax;popl %esi;movl %ecx, %fs:;leave": 1,
                "movl %edi, -(%ebp);cmpl %edi, %ecx;je  <.text+>;pushl (%ebp);pushl %esi": 1,
                "calll - <.text+>;movl (%ebp), %ecx;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "andl $, -(%ebp);pushl %esi;pushl (%ebp);leal (%ebp), %ecx;calll - <.text+>": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %esp, -(%ebp);xorl %ebx, %ebx": 2,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb $, -(%ebp)": 1,
                "movl (%ebp), %esi;pushl %esi;calll - <.text+>;testl %eax, %eax;jne  <.text+>": 2,
                "calll  <.text+>;pushl (%ebp);cmpl $, %eax;jne  <.text+>;leal -(%ebp), %ecx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "cmpl $, (%ebp);jne  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax": 2,
                "movl (%eax), %eax;jmp  <.text+>;xorl %eax, %eax;movl (%edi), %esi;pushl (%ebp)": 1,
                "xorl %eax, %eax;movl (%edi), %esi;pushl (%ebp);pushl %ebx;pushl %ebx": 1,
                "movl (%edi), %esi;pushl (%ebp);pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "pushl %ebx;pushl %ebx;pushl %edx;pushl %ecx;pushl %eax": 1,
                "pushl %ebx;pushl %edx;pushl %ecx;pushl %eax;pushl %edi": 1,
                "cmpl %ebx, %eax;jge  <.text+>;cmpl $, %eax;jne  <.text+>;cmpl $, (%ebp)": 1,
                "je  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %ebx;leal -(%ebp), %ecx;calll - <.text+>;pushl (%ebp);leal -(%ebp), %ecx": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <.text+>;calll - <.text+>": 1,
                "cmpl %ebx, %ecx;je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;movl (%ebp), %esi;movl %esi, %ecx": 1,
                "testl %eax, %eax;je  <.text+>;movl (%ebp), %esi;movl %esi, %ecx;calll  <.text+>": 1,
                "jne  <.text+>;xorl %edi, %edi;incl %edi;jmp  <.text+>;cmpl $, -(%ebp)": 1,
                "testb %al, %al;jne  <.text+>;calll  <.text+>;jmp  <.text+>;pushl $-": 1,
                "movl %edi, -(%ebp);pushl (%esi);pushl $;calll  <.text+>;pushl %eax": 1,
                "pushl %eax;calll *;pushl $;pushl -(%ebp);calll  <.text+>": 1,
                "calll - <.text+>;movl %eax, %edi;jmp - <.text+>;pushl $;calll *": 1,
                "pushl %ebx;pushl %eax;pushl %esi;calll *(%ecx);movl %eax, -(%ebp)": 1,
                "pushl %esi;calll - <.text+>;movl (%esi), %eax;movl %eax, -(%ebp);movl $, %eax": 3,
                "calll - <.text+>;movl (%esi), %eax;movl %eax, -(%ebp);movl $, %eax;retl": 3,
                "cmpw $, -(%ebp);je  <.text+>;cmpw %si, -(%ebp);je  <.text+>;leal -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);xorl %esi, %esi;incl %esi;jmp  <.text+>": 1,
                "cmpw $, -(%ebp);je  <.text+>;cmpw $, -(%ebp);je  <.text+>;leal -(%ebp), %ecx": 1,
                "calll *;pushl %eax;calll - <.text+>;movl -(%ebp), %ecx;movl %esi, %eax": 1,
                "xorl %eax, %eax;movl (%ebp), %ecx;movl (%ecx), %edx;pushl %ebx;leal -(%ebp), %esi": 1,
                "leal -(%ebp), %esi;pushl %esi;pushl %ebx;pushl %eax;pushl %ecx": 1,
                "movl $, %eax;retl;xorl %esi, %esi;movl %esi, -(%ebp);movl -(%ebp), %esi": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl -(%ebp), %esi;jmp  <.text+>;movl $, %esi": 1,
                "pushl %eax;calll *(%ecx);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);pushl $;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;testl %eax, %eax;je  <.text+>": 1,
                "calll *;movl -(%ebp), %esi;xorl -(%ebp), %esi;calll *;xorl %eax, %esi": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movw %ss, -(%ebp);movw %cs, -(%ebp)": 1,
                "leal (%ebp), %eax;movl %eax, -(%ebp);leal (%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl $": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <.text+>;cmpl $, (%eax);jne  <.text+>": 1,
                "int;int;pushl $;pushl $;calll *": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl %esi;movl (%edi), %esi": 1,
                "cmpl %edx, (%ecx);ja  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%ecx), %eax": 1,
                "jmp  <.text+>;movl (%ecx), %eax;pushl %esi;xorl %esi, %esi;cmpl $, %edx": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %esi;calll - <.text+>": 2,
                "popl %ecx;jne  <.text+>;orl $-, %eax;jmp  <.text+>;movl (%ebp), %ecx": 2,
                "pushl %esi;calll - <.text+>;jmp  <.text+>;pushl $;pushl $": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;movl (%esi), %eax": 1,
                "cmpl %ecx, %eax;ja  <.text+>;je  <.text+>;cmpl $, %eax;je  <.text+>": 2,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;je  <.text+>": 1,
                "jmp - <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;je  <.text+>": 1,
                "movl (%esi), %ecx;cmpl (%eax), %ecx;jne  <.text+>;movl (%esi), %ecx;cmpl (%eax), %ecx": 1,
                "cmpw (%eax), %cx;jmp  <.text+>;movl (%edi), %eax;movl (%eax), %eax;cmpl (%esi), %eax": 1,
                "orl $-, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 1,
                "testl %esi, %esi;jne  <.text+>;pushl (%ebp);calll *;movl %eax, %esi": 2,
                "popl %ecx;popl %ecx;je  <.text+>;pushl %esi;pushl (%ebp)": 2,
                "jne  <.text+>;pushl %edi;calll *;popl %ecx;orl $-, %eax": 2,
                "pushl $;pushl $;calll *;movl %eax, %esi;testl %esi, %esi": 4,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl (%ebp);calll - <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;pushl %esi": 1,
                "je  <.text+>;incl %esi;cmpl (%ebp), %esi;jb - <.text+>;cmpl (%ebp), %esi": 1,
                "incl %esi;cmpl (%ebp), %esi;jb - <.text+>;cmpl (%ebp), %esi;popl %esi": 1,
                "cmpl (%ebp), %esi;popl %esi;jne  <.text+>;pushl -(%ebp);pushl $": 1,
                "jne  <.text+>;orl $-, %eax;jmp  <.text+>;pushl %edi;xorl %edi, %edi": 1,
                "pushl %eax;pushl $;pushl (%ebp);pushl (%ebp);calll - <.text+>": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %esi": 1,
                "je  <.text+>;movl -(%ebp), %eax;testl %eax, %eax;movl (%edi), %ecx;je  <.text+>": 1,
                "movl (%eax), %eax;fldl (%eax);popl %ebp;retl $;int": 1,
                "xorl %esi, %esi;pushl %edi;pushl %esi;pushl (%ebp);xorl %eax, %eax": 1,
                "pushl %esi;pushl (%ebp);xorl %eax, %eax;pushl (%ebp);movw %si, -(%ebp)": 1,
                "movl (%esi), %eax;flds (%eax);jmp - <.text+>;movl (%esi), %eax;pushl (%eax)": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;jmp  <.text+>;pushl %edi": 1,
                "pushl (%esi);pushl %ebx;calll *;pushl %ebx;calll *": 1,
                "pushl %ebx;calll *;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "jne  <.text+>;pushl (%ebp);pushl (%eax);calll - <.text+>;jmp  <.text+>": 2,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $": 2,
                "movl %ecx, (%eax);xorl %eax, %eax;incl %eax;popl %esi;popl %ebp": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%eax);calll - <.text+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi": 1,
                "movw %ax, -(%ebp);calll  <.text+>;pushl $;pushl $;pushl %edx": 1,
                "pushl $;pushl $;pushl %edx;pushl %eax;calll  <.text+>": 2,
                "pushl %edx;pushl %eax;calll  <.text+>;pushl %edx;pushl %eax": 1,
                "calll *;testl %eax, %eax;popl %ecx;popl %ecx;movl %edi, %ecx": 2,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;pushl %esi": 1,
                "jne  <.text+>;incl %edx;cmpl (%ebp), %edx;jb - <.text+>;xorl %eax, %eax": 1,
                "cmpl (%ebp), %edx;jb - <.text+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "je  <.text+>;pushl (%ebp);incl %ebx;calll *%eax;pushl %esi": 1,
                "pushl %eax;calll - <.text+>;cmpl $, ;popl %edi;popl %esi": 1,
                "pushl $;pushl %edi;pushl %esi;pushl $;calll *": 1,
                "popl %edi;popl %esi;leave;retl;int": 1,
                "cmpl %edx, (%ebp);pushl %esi;je  <.text+>;movl (%ebp), %esi;cmpl %edx, %esi": 1,
                "cmpl %edx, %esi;je  <.text+>;movl (%ebp), %ecx;pushl %ebx;pushl %edi": 1,
                "pushl %ebx;pushl %edi;pushl %edx;movl %ecx, %ebx;pushl %edx": 1,
                "xorl %eax, %eax;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl %ebx, %ecx;pushl %edx": 1,
                "pushl (%ebp);movl %edx, %ecx;xorl %eax, %eax;movl %esi, %edi;pushl %esi": 1,
                "rep  stosw %ax, %es:(%edi);calll *;movl %esi, %eax;popl %edi;jmp  <.text+>": 2,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);popl %edi;jne  <.text+>": 2,
                "calll *;calll - <.text+>;fldl ;jmp  <.text+>;pushl %edx": 1,
                "jmp  <.text+>;pushl %edx;leal -(%ebp), %eax;pushl %eax;calll *": 3,
                "movl -(%ebp), %ecx;calll - <.text+>;leave;retl $;int": 3,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;andl $, -(%ebp);andl $, -(%ebp)": 3,
                "fstp %st();addl $, %esp;pushl -(%ebp);calll *;negl %eax": 1,
                "subl $, %esp;movl , %eax;andl $, -(%ebp);andl $, -(%ebp);pushl %ebx": 1,
                "cmpl %eax, (%ebp);jne  <.text+>;testl %edi, %edi;jl - <.text+>;pushl %ebx": 1,
                "calll *;cmpl $, (%ebp);popl %ecx;popl %ecx;jne  <.text+>": 1,
                "je - <.text+>;xorl %eax, %eax;incl %eax;jmp - <.text+>;fcoml ": 1,
                "calll *;calll - <.text+>;xorl %eax, %eax;jmp  <.text+>;movl , %edi": 2,
                "je - <.text+>;movl , %ebx;movl , %esi;cmpl $, -(%ebp);pushl $": 1,
                "movl , %esi;cmpl $, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $-": 4,
                "leave;retl $;calll *;testl %eax, %eax;je  <.text+>": 1,
                "je - <.text+>;cmpw $, %ax;jne  <.text+>;cmpl $, -(%ebp);je - <.text+>": 1,
                "pushl $-;calll *%edi;pushl %eax;calll *%esi;pushl $": 2,
                "decl %ecx;cmpl %ecx, -(%ebp);jne  <.text+>;pushl $;leal -(%ebp), %eax": 1,
                "jmp - <.text+>;cmpw $, %ax;je - <.text+>;movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "pushl %eax;pushl $;pushl $;jmp - <.text+>;pushl -(%ebp)": 1,
                "movl (%ebp), %ecx;xorl %edx, %edx;cmpl %edx, %ecx;je  <.text+>;movl (%ebp), %eax": 1,
                "calll *;jmp  <.text+>;pushl (%ebp);pushl %eax;pushl %ecx": 2,
                "calll - <.text+>;xorl %eax, %eax;popl %ebp;retl $;int": 1,
                "cmpl %esi, (%ebp);jne  <.text+>;pushl $;calll *;calll - <.text+>": 1,
                "pushl %eax;movl %esi, ;calll *;jmp  <.text+>;cmpl %esi, ": 1,
                "popl %ecx;movl (%edi), %ecx;movl %eax, (%ecx);jne  <.text+>;pushl $": 1,
                "movl %edi, %eax;popl %edi;popl %ebx;popl %esi;popl %ebp": 1,
                "pushl %ebx;calll *;movl %eax, -(%ebp);movl , %eax;leal (%eax), %ecx": 1,
                "calll *;testl %edi, %edi;jne  <.text+>;testb $, %al;je  <.text+>": 1,
                "xorl %edi, %edi;cmpl %edi, -(%ebp);jbe  <.text+>;movl $, %esi;pushl %esi": 1,
                "calll *;pushl -(%ebp);calll *;addl $, %esp;cmpl -(%ebp), %edi": 1,
                "movl %fs:, %ecx;leal (%ecx,%eax,), %edi;movl (%edi), %esi;cmpl %ebx, (%esi);jne  <.text+>": 1,
                "movl %eax, (%ecx);je  <.text+>;pushl (%esi);calll - <.text+>;cmpl (%ebp), %eax": 1,
                "jmp  <.text+>;leal (%eax,%eax), %eax;pushl $;pushl %eax;calll *": 1,
                "movl -(%ebp), %eax;movw (%eax), %ax;movw %ax, (%edi,%ebx,);incl %ebx;incl -(%ebp)": 1,
                "incl %ebx;incl -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb - <.text+>": 1,
                "jne  <.text+>;pushl $;calll *;calll - <.text+>;movl $, %eax": 2,
                "calll - <.text+>;movl $, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;cmpl $, (%ebp);jne  <.text+>": 1,
                "pushl $;calll *;calll - <.text+>;movl $, %eax;jmp  <.text+>": 1,
                "jle  <.text+>;pushl (%ebp);calll - <.text+>;jmp  <.text+>;movl (%ebp), %eax": 1,
                "calll *%edi;pushl $;pushl %esi;movl %eax, %ebx;calll *%edi": 1,
                "pushl (%ebp);movl , %esi;pushl %edi;calll *%esi;pushl %edi": 1,
                "calll - <.text+>;pushl $;pushl %edi;movl %eax, -(%ebp);calll *%esi": 1,
                "calll *%esi;pushl $;pushl %ebx;calll *%esi;movl (%ebp), %eax": 1,
                "pushl %eax;pushl $;pushl %ebx;calll - <.text+>;cmpl $, (%ebp)": 1,
                "calll - <.text+>;cmpl $, (%ebp);je  <.text+>;pushl %ebx;pushl %edi": 1,
                "pushl (%ebp);pushl %edi;calll *;jmp  <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);pushl %ebx;calll *%esi;pushl %ebx;pushl %edi": 1,
                "pushl (%ebp);calll *%esi;movl , %esi;pushl %edi;calll *%esi": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testl %esi, %esi;jne  <.text+>": 1,
                "pushl $;calll *;calll - <.text+>;xorl %eax, %eax;popl %esi": 2,
                "xorl %eax, %eax;movw (%esi), %ax;pushl %eax;pushl $;calll *": 1,
                "je  <.text+>;pushl %ebx;calll - <.text+>;xorl %edx, %edx;cmpl %edx, (%ebp)": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);jbe  <.text+>;movl %esi, -(%ebp);movl -(%ebp), %esi": 1,
                "pushl %esi;pushl (%ebp);pushl (%edi);calll *;jmp  <.text+>": 1,
                "movl %edx, %ecx;leal -(%ebp), %edi;movl %esi, -(%ebp);rep  stosl %eax, %es:(%edi);movl %edx, %ecx": 1,
                "movl %esi, -(%ebp);rep  stosl %eax, %es:(%edi);movl %esi, -(%ebp);je  <.text+>;cmpl %esi, -(%ebp)": 1,
                "rep  stosl %eax, %es:(%edi);movl %esi, -(%ebp);je  <.text+>;cmpl %esi, -(%ebp);je  <.text+>": 1,
                "movl %esi, -(%ebp);je  <.text+>;cmpl %esi, -(%ebp);je  <.text+>;calll - <.text+>": 1,
                "jbe  <.text+>;movl -(%ebp), %eax;testb $, (%eax);jne  <.text+>;incl %ecx": 1,
                "movl -(%ebp), %eax;pushl (%eax);calll *;addl %eax, %esi;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;pushl $;leal -(%ebp), %eax": 1,
                "pushl %edi;calll - <.text+>;cmpl $, -(%ebp);je  <.text+>;cmpl $, -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl %ebx;pushl -(%ebp)": 1,
                "cmpl (%ebp), %eax;jae  <.text+>;cmpl $, -(%ebp);jne  <.text+>;pushl (%esi)": 1,
                "calll - <.text+>;pushl %eax;pushl $;calll - <.text+>;pushl %eax": 5,
                "movl (%edi), %ecx;movl %ecx, %eax;andl $, %eax;decl %eax;cmpl $, %eax": 1,
                "movl (%edi), %eax;pushl $;pushl %ebx;pushl -(%ebp);pushl (%eax)": 1,
                "calll - <.text+>;jmp  <.text+>;pushl -(%ebp);pushl (%edi);calll *": 1,
                "calll - <.text+>;testl %eax, %eax;je - <.text+>;testb $, (%edi);pushl $": 1,
                "calll - <.text+>;jmp  <.text+>;pushl -(%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "pushl %ecx;fstps (%esp);pushl (%eax);calll - <.text+>;jmp  <.text+>": 1,
                "movl (%edi), %eax;pushl %ecx;pushl %ecx;fstpl (%esp);pushl (%eax)": 1,
                "incl (%eax);testb $, (%edi);movl (%eax), %eax;je  <.text+>;movl %ebx, -(%ebp)": 1,
                "testb $, (%edi);movl (%eax), %eax;je  <.text+>;movl %ebx, -(%ebp);movl (%edi), %ecx": 1,
                "cmpl %edx, -(%ebp);je  <.text+>;pushl -(%ebp);calll *;popl %ecx": 1,
                "movl -(%ebp), %eax;cmpl (%ebp), %eax;jb - <.text+>;xorl %edi, %edi;xorl %ecx, %ecx": 1,
                "pushl -(%ebp);calll *;popl %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;popl %ecx;jmp  <.text+>;pushl %esi;calll *": 1,
                "calll *;addl $, %esp;pushl $;calll - <.text+>;pushl $": 1,
                "retl $;pushl %ecx;movl $, %ebp;addb %al, (%ecx);pushl %edx": 1,
                "pushl %edi;movl %eax, -(%ebp);calll *%esi;pushl $;pushl %edi": 1,
                "calll *%esi;pushl $;pushl %edi;movl %eax, (%ebp);calll *%esi": 1,
                "pushl %edi;movl %eax, (%ebp);calll *%esi;movl , %esi;addl $, %esp": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi;cmpl %esi, %ebx": 1,
                "calll - <.text+>;cmpl (%ebp), %eax;jae  <.text+>;movl (%ebp), %eax;addl $, %eax": 1,
                "calll - <.text+>;movl %eax, -(%ebp);pushl %edi;xorl %edi, %edi;cmpl %esi, (%ebp)": 1,
                "cmpl %esi, (%ebp);je  <.text+>;pushl %edi;pushl (%ebp);pushl %ebx": 1,
                "pushl (%ebp);pushl %ebx;calll - <.text+>;cmpl %esi, %eax;je  <.text+>": 1,
                "subl %eax, %esi;calll - <.text+>;addl %eax, %esi;cmpl (%ebp), %esi;jae  <.text+>": 1,
                "je  <.text+>;cmpl (%ebp), %esi;jne  <.text+>;movl (%ebp), %edi;movl (%ebp), %esi": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;leal (%edi), %eax;pushl %eax;pushl %ebx": 1,
                "calll - <.text+>;cmpl %edi, %eax;jle  <.text+>;movl (%ebp), %eax;leal (%eax,%edi,), %eax": 1,
                "leal (%eax,%edi,), %eax;pushl %eax;jmp  <.text+>;cmpl %esi, %edi;je - <.text+>": 1,
                "pushl %edi;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "movl %eax, -(%ebp);pushl $;xorl %eax, %eax;andw %ax, -(%ebp);popl %ecx": 1,
                "stosw %ax, %es:(%edi);movl $, %edi;pushl %edi;pushl %edx;movl %edx, -(%ebp)": 1,
                "andl $, %eax;popl %edx;subl %edx, %eax;je  <.text+>;subl %edx, %eax": 1,
                "subl %edx, %eax;je  <.text+>;subl %edx, %eax;je  <.text+>;subl $, %eax": 1,
                "jmp  <.text+>;pushl (%ebp);leal -(%ebp), %eax;pushl %esi;pushl %eax": 1,
                "calll - <.text+>;pushl %ecx;pushl %ecx;leal -(%ebp), %eax;fstpl (%esp)": 1,
                "leal -(%ebp), %eax;fstpl (%esp);pushl %eax;pushl -(%ebp);calll *": 1,
                "testl %eax, %eax;jne  <.text+>;testb $, (%ebx);je  <.text+>;pushl $": 1,
                "pushl %eax;pushl -(%ebp);calll *;movl -(%ebp), %ecx;popl %edi": 1,
                "movl %eax, -(%ebp);xorl %eax, %eax;movl $, %ecx;leal -(%ebp), %edi;movl %esi, -(%ebp)": 1,
                "testb $, (%ebp);pushl %ebx;jne  <.text+>;movl (%ebp), %edi;xorl %ecx, %ecx": 1,
                "jbe  <.text+>;movl -(%ebp), %esi;addl $, %esi;testb $, (%esi);jne  <.text+>": 1,
                "jne  <.text+>;cmpl $, %eax;jne  <.text+>;pushl $;pushl -(%ebp)": 1,
                "calll - <.text+>;pushl -(%ebp);calll - <.text+>;andl $, -(%ebp);testl %eax, %eax": 2,
                "je  <.text+>;andl $, -(%ebp);andl $, -(%ebp);cmpl $, (%ebp);jbe  <.text+>": 1,
                "xorl %ebx, %ebx;movl $, %ecx;testl %eax, %ecx;movl %ebx, -(%ebp);jne  <.text+>": 1,
                "movl -(%ebp), %eax;addl $, %esi;cmpl (%ebp), %eax;jb - <.text+>;pushl $": 1,
                "orl $-, %edi;testl %eax, %eax;jbe  <.text+>;jmp  <.text+>;movl -(%ebp), %edi": 1,
                "jae  <.text+>;movl -(%ebp), %edx;movl %eax, %ecx;imull $, %ecx, %ecx;movl %esi, %ebx": 1,
                "movl -(%ebp), %edx;movl %eax, %ecx;imull $, %ecx, %ecx;movl %esi, %ebx;leal (%ecx,%edx), %edi": 1,
                "pushl %eax;pushl -(%ebp);calll - <.text+>;movl $, -(%ebp);addl $, %edi": 1,
                "pushl $;pushl -(%ebp);calll - <.text+>;pushl $;pushl -(%ebp)": 1,
                "testl %eax, %eax;jne - <.text+>;incl -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);rep  stosl %eax, %es:(%edi);movl $, %ecx;leal -(%ebp), %edi;movl %edx, -(%ebp)": 1,
                "movl (%ebp), %edi;cmpl %edx, %edi;movl %ebx, -(%ebp);movl %edx, -(%ebp);jbe  <.text+>": 1,
                "cmpl %edx, %edi;movl %ebx, -(%ebp);movl %edx, -(%ebp);jbe  <.text+>;movl %ebx, %esi": 1,
                "pushl %esi;calll - <.text+>;movl %eax, -(%ebp);addl $, %esi;decl %edi": 1,
                "decl %edi;jne - <.text+>;pushl -(%ebp);calll - <.text+>;andl $, -(%ebp)": 1,
                "jmp - <.text+>;pushl %edi;pushl -(%ebp);calll - <.text+>;movl -(%ebp), %ebx": 1,
                "jb - <.text+>;movl -(%ebp), %ecx;popl %edi;popl %esi;popl %ebx": 2,
                "calll  <.text+>;movl , %eax;andl $, -(%ebp);movl (%ebp), %edx;pushl %ebx": 1,
                "xorl %eax, %eax;movl $, %ebx;testl %ebx, (%ebp);movl $, %ecx;leal -(%ebp), %edi": 1,
                "jbe  <.text+>;movl %edx, %edi;movl %ecx, -(%ebp);testl %ebx, (%edi);jne  <.text+>": 1,
                "calll - <.text+>;xorl %eax, %eax;incl %eax;addl $, %edi;decl -(%ebp)": 1,
                "addl $, %edi;decl -(%ebp);jne - <.text+>;pushl $;pushl %esi": 1,
                "testl %ebx, (%esi);jne  <.text+>;movl (%esi), %edi;pushl $;leal -(%ebp), %eax": 1,
                "jb - <.text+>;movl -(%ebp), %esi;pushl $;pushl %esi;calll - <.text+>": 1,
                "decl %eax;pushl %esi;movl (%ebp), %esi;je  <.text+>;decl %eax": 1,
                "je  <.text+>;decl %eax;jne  <.text+>;pushl (%ebp);pushl %ecx": 1,
                "pushl %edi;pushl %eax;calll *%esi;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;popl %ecx;popl %ecx;je  <.text+>;pushl $": 1,
                "xorl %eax, %eax;incl %eax;popl %esi;popl %ebx;movl -(%ebp), %ecx": 1,
                "popl %ecx;movl $, %esi;leal -(%ebp), %edi;movl %eax, -(%ebp);rep  movsl (%esi), %es:(%edi)": 1,
                "calll *%edi;pushl $;pushl -(%ebp);calll *;xorl %esi, %esi": 1,
                "popl %ecx;movl %esi, %eax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "subl $, %esp;movl , %eax;andl $, -(%ebp);cmpl $, ;movl %eax, -(%ebp)": 1,
                "movl %eax, %edi;testl %edi, %edi;popl %ecx;popl %ecx;jne  <.text+>": 1,
                "pushl $;calll *;calll - <.text+>;jmp  <.text+>;pushl %esi": 1,
                "testl %esi, %esi;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;pushl %edi": 1,
                "cmpl $, (%ebp);movl (%esi), %eax;popl %ecx;jne  <.text+>;pushl $": 1,
                "movl %edx, -(%ebp);movl %edx, -(%ebp);rep  stosl %eax, %es:(%edi);je  <.text+>;pushl %ebx": 1,
                "movl %edi, -(%ebp);calll *%esi;pushl $;pushl $;pushl %ebx": 2,
                "pushl %ebx;calll - <.text+>;cmpl $, %eax;jne  <.text+>;pushl $": 1,
                "testl %eax, %eax;je  <.text+>;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "negl %eax;sbbl %eax, %eax;incl %eax;jmp  <.text+>;xorl %eax, %eax": 1,
                "calll - <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %eax;andl $, (%esi);testl %eax, %eax": 1,
                "pushl %esi;calll *;popl %esi;retl;int": 1,
                "cmpw $, (%eax);jne  <.text+>;movl (%eax), %ecx;addl %eax, %ecx;cmpl $, (%ecx)": 1,
                "movl (%eax), %ecx;addl %eax, %ecx;cmpl $, (%ecx);jne  <.text+>;movzwl (%ecx), %eax": 1,
                "movl %ecx, (%eax);calll *;movl , %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "pushl ;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "addl $, %esp;movl %eax, %esi;movl %esi, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>": 1,
                "movl %esi, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>;pushl %esi;calll *": 1,
                "pushl $;pushl %edi;calll  <.text+>;testb $, (%ebp);je  <.text+>": 1,
                "testb $, (%ebp);je  <.text+>;pushl %esi;calll - <.text+>;popl %ecx": 1,
                "popl %esi;jmp  <.text+>;movl %edi, %ecx;calll  <.text+>;testb $, (%ebp)": 1,
                "pushl %edi;calll - <.text+>;popl %ecx;movl %edi, %eax;popl %edi": 1,
                "int;int;cmpl $, %eax;jae  <.text+>;negl %eax": 1,
                "testl %eax, (%eax);xchgl %esp, %eax;movl (%eax), %eax;pushl %eax;retl": 1,
                "pushl %ecx;leal (%esp), %ecx;subl $, %ecx;subl $, %eax;testl %eax, (%ecx)": 1,
                "int;xorl %eax, %eax;retl;int;int": 1,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "decl (%ebp);js  <.text+>;movl (%ebp), %ecx;subl (%ebp), %ecx;movl %ecx, (%ebp)": 1,
                "retl;movl -(%ebp), %esp;jmp - <.text+>;calll  <.text+>;int": 1,
                "movl -(%ebp), %esp;jmp - <.text+>;calll  <.text+>;int;int": 1,
                "decl (%ebp);js  <.text+>;subl %esi, (%ebp);movl (%ebp), %ecx;calll *(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax);xorl %edi, (%ebp);addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %dl, %ah;loope ;addl %esp, (%eax);addl $, %eax": 1,
                "loope ;addl %esp, (%eax);addl $, %eax;addb %al, (%eax);addl %eax, (%eax)": 1,
                "loop ;addl %eax, (%ecx);addb %al, (%eax);addb %al, (%edx);addb %al, (%eax)": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %bh, %ah;loop ": 1,
                "addb %al, (%eax);addb %al, (%eax);xchgl %ecx, %eax;fldl (%eax);addl %eax, (%ecx)": 1,
                "pushl %ecx;addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax);orl %eax, (%eax)": 1,
                "incl (%ebx);fiadds (%eax);addl %esp, (%eax);addl $, %eax;addb %al, (%eax)": 1,
                "addl %esp, (%eax);addl $, %eax;addb %al, (%eax);sbbb $-, %al;addb %al, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);incl %ecx": 1,
                "addb %al, (%eax);addb %al, (%eax);incl %ecx;fiadds (%eax);addl %eax, (%ecx)": 1,
                "fiadds (%eax);addl %eax, (%ecx);addb %al, (%eax);addb %cl, (%esi,%ebx,);addl %eax, (%edx)": 1,
                "decl %esp;cmc;movb $, %bl;addb %al, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);orl %eax, (%eax);addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "addb %cl, %cl;fiadds (%eax);addl %eax, (%ecx);addb %al, (%eax);addb %dl, %ah": 1,
                "inl $, %eax;addl %esp, (%eax);addl $, %eax;addb %al, (%eax);loopne -": 1,
                "addl %esp, (%eax);addl $, %eax;addb %al, (%eax);loopne -;addb %al, (%ecx)": 1,
                "addl $, %eax;addb %al, (%eax);shlb %ch;addb %al, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, %bh;xchgb %al, (%eax);addl %ecx, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);stc;xchgb %al, (%eax);addl %eax, (%ebx);addb %al, (%eax)": 1,
                "xchgb %al, (%eax);addl %eax, (%ebx);addb %al, (%eax);addb %al, (%ebx);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);addb $, %al": 1,
                "addb $, %al;addb %al, (%eax);addb (%eax), %al;addb %al, (%eax);xorb $-, %al": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %al, (%eax);xorb $-, %al;addb %al, (%ecx)": 1,
                "andb %al, ;addb %al, (%eax);cld;inl $, %eax;addl %eax, (%edx)": 1,
                "addb %al, (%ecx);addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %ch, (%eax)": 1,
                "lcalll *-(%ebp);addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax);filds %gs:(%eax)": 1,
                "addb %al, (%ecx);addl %eax, (%eax);addb %al, (%eax);jne - <.text+>;addb %al, (%ecx)": 1,
                "addb %ah, (%ebp);addl $, %eax;addb %al, (%eax);decl %eax;outl %eax, $": 1,
                "addb $, %al;addb %al, (%eax);cmpb $-, %al;addb %al, (%ecx);addl $, %eax": 1,
                "addb %al, (%eax);cmpb $-, %al;addb %al, (%ecx);addl $, %eax;loopne ": 1,
                "addb %cl, (%edi);addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax,%ebp,)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, -(%edx);addb %al, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);incl %eax;xchgl %edx, %eax;addb %al, (%ecx)": 1,
                "calll ;addb %al, (%eax);addl (%eax), %eax;addb %al, (%eax);addb $, %al": 1,
                "addb %dl, (%ebx);addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);addb (%eax), %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);leave;loopne ": 1,
                "addb %dl, %cl;loopne ;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, %bh;xchgl %ebx, %eax": 1,
                "addl %eax, (%eax);addb %al, (%eax);movb %ch, %cl;addb %al, (%ecx);andb %al, ": 1,
                "addb (%eax), %al;addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);loopne -": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);jmpl *%eax;addb %al, (%ecx)": 1,
                "andb %al, ;addb %al, (%eax);andb %ch, %dl;addb %al, (%ecx);addl %eax, (%eax)": 1,
                "addb %al, (%eax);pushl %ss;loope ;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);lock;ljmpl $, $;jnp - <.text+>": 1,
                "addb %al, (%eax);lock;ljmpl $, $;jnp - <.text+>;addb %al, (%ecx)": 1,
                "jnp - <.text+>;addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax);orb $-, %al": 1,
                "stosb %al, %es:(%edi);rep  addb %al, (%eax);movb $-, %dh;addb %al, (%eax);into": 1,
                "addb %al, (%eax);into;rep  addb %al, (%eax);incl %edx;testb $, (%eax)": 1,
                "addb %al, (%eax);incl %eax;hlt;addb %al, (%eax);popl %edx": 1,
                "addb %al, (%eax);ljmpl $, $;addb %al, %ah;cmc;addb %al, (%eax)": 1,
                "decl %esp;cmc;addb %al, (%eax);cmc;addb %al, (%eax)": 1,
                "cmc;addb %al, (%eax);adcb %ch, %dh;addb %al, (%eax);hlt": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb $, %al;addb %al, -(%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);outsl (%esi), %dx;addb %al, (%eax)": 1,
                "addb %al, (%eax);jle - <.text+>;addb %al, (%eax);pushfl;outl %eax, %dx": 1,
                "lock;addb %al, (%eax);insb %dx, %es:(%edi);lock;addb %al, (%eax)": 1,
                "addb %al, (%eax);decl %edx;outl %eax, %dx;addb %al, (%eax);subb $-, %al": 1,
                "outb %al, %dx;addb %al, (%eax);salc;outb %al, %dx;addb %al, (%eax)": 1,
                "adcb %dh, %bl;addb %al, (%eax);subb %dh, %bl;addb %al, (%eax);rep  addb %al, %ss:(%eax)": 1,
                "subb %dh, %bl;addb %al, (%eax);rep  addb %al, %ss:(%eax);movl $, %esp;addb %al, (%eax)": 1,
                "decl %eax;addb %al, (%eax);cmpb %dh, %cl;addb %al, (%eax);fdivp %st()": 1,
                "addb %al, (%eax);pushfl;repne  addb %al, (%eax);nop;repne  addb %al, (%eax)": 1,
                "repne  addb %al, (%eax);nop;repne  addb %al, (%eax);jle - <.text+>;addb %al, (%eax)": 1,
                "repne  addb %al, (%eax);repne  addb %al, %ds:(%eax);xorb $-, %al;addb %al, (%eax);subb %dl, %dh": 1,
                "addb %al, (%eax);andb %ch, %dh;addb %al, (%eax);subb $, %dh;addb %al, (%eax)": 1,
                "imull $, (%esi), %ebp;addb %al, (%ebx);popal;jb  <.text+>;jo  <.text+>": 1,
                "pushl %ebx;je  <.text+>;imull $, (%esi), %ebp;incl %ebp;pushl %edx": 1,
                "decl %ebp;pushl %eax;pushl %edx;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 1,
                "imull $, (%esi), %ebp;imull $, (%edx), %edi;incl %ebx;outsl (%esi), %dx;pushl %esp": 1,
                "popal;jae  <.text+>;decl %ebp;insl %dx, %es:(%edi);incl %esi": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %cl, (%edi);incl %ebp;incl %ecx": 1,
                "incl %ecx;pushl %ebp;incl %ebx;decl %eax;pushl %ebx": 1,
                "xorl %eax, (%ebx);pushl %ebx;je  <.text+>;imull $, (%esi), %ebp;incl %ebp": 1,
                "pushl %eax;incl %edx;incl %edi;incl %eax;popl %edx": 4,
                "decl %esp;je  <.text+>;incl %ebx;decl %eax;pushl %ebx": 1,
                "aas;xorb %al, (%ebx);pushl %ebx;je  <.text+>;imull $, (%esi), %ebp": 2,
                "incl %ecx;popl %eax;pushl %eax;incl %edx;incl %edi": 1,
                "movl $, %ecx;incl %eax;incl %ebx;decl %eax;pushl %ebx": 1,
                "incl %edi;incl %eax;popl %edx;addb %cl, (%esi);incl %ebx": 1,
                "incl %eax;popl %edx;addb %al, (%eax);faddl (%ecx);aas": 1,
                "faddl (%ecx);aas;pushl %edx;insb %dx, %es:(%edi);popal": 1,
                "popal;jae  <.text+>;incl %edx;jne  <.text+>;jb  <.text+>": 1,
                "outsl (%esi), %dx;insl %dx, %es:(%edi);jo  <.text+>;jb  <.text+>;incl %eax": 1,
                "movl $, %edx;incl %eax;incl %ebx;decl %eax;pushl %ebx": 1,
                "decl %eax;incl %eax;popl %edx;addb %ah, (%esi);popal": 1,
                "je  <.text+>;jae  <.text+>;jb  <.text+>;popal;insl %dx, %es:(%edi)": 1,
                "popl %eax;incl %eax;popl %edx;addb %al, (%eax);incl %edi": 1,
                "popl %edx;addb %al, (%eax);pushl %edx;addb %bl, (%edi);incl %ebx": 1,
                "addb %bl, (%edi);incl %ebx;js  <.text+>;incl %esi;jb  <.text+>": 1,
                "jb  <.text+>;popal;addl %ebx, (%edi);je  <.text+>;ja  <.text+>": 1,
                "addb %dh, (%ebx,%eax);ja  <.text+>;jae  <.text+>;je  <.text+>;addb %al, (%eax)": 1,
                "arpl %sp, (%ecx);insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %ax, (%eax);addb %ah, (%ebp)": 1,
                "addb %ah, (%ebp);addb %al, %gs:(%eax);outb %al, %dx;addb (%edx), %dh;popal": 1,
                "outsl (%esi), %dx;arpl %ax, (%eax);xorl $, %eax;je  <.text+>;addb %al, %fs:(%eax)": 1,
                "je  <.text+>;popal;imull $, (%esi), %ebp;addb %bh, (%ebx);addl %ebx, (%edi)": 1,
                "incl %ebp;incl %eax;popl %eax;popl %edx;addb %al, (%eax)": 1,
                "addb %bl, (%edi);outsl (%esi), %dx;outsb (%esi), %dx;je  <.text+>;outsl (%esi), %dx": 1,
                "addb %al, (%eax);scasl %es:(%edi), %eax;addl (%ebx,%esi,), %ebp;jb  <.text+>;insl %dx, %es:(%edi)": 1,
                "jae  <.text+>;popal;pushl %edi;addb %al, (%eax);pushl %ss": 1,
                "popal;pushl %edi;addb %al, (%eax);pushl %ss;addl (%ebx), %edx": 1,
                "addb %al, (%eax);testl $, %eax;jb  <.text+>;popal;je  <.text+>": 1,
                "je  <.text+>;incl %ebx;outsl (%esi), %dx;outsb (%esi), %dx;jae  <.text+>": 1,
                "jne  <.text+>;jae  <.text+>;jb  <.text+>;outsl (%esi), %dx;jae  <.text+>": 1,
                "outsb %gs:(%esi), %dx;je  <.text+>;addb %dl, (%edx,%eax);jns  <.text+>;jb  <.text+>": 1,
                "outsb (%esi), %dx;arpl %sp, (%ebp);outsl (%esi), %dx;jne  <.text+>;je  <.text+>": 1,
                "pushl $;decl %ecx;addb %al, %fs:(%eax);cmpb $, %al;incl %edi": 1,
                "imull $, (%esi), %ebp;outsl (%esi), %dx;arpl %sp, (%ebp);jae  <.text+>;addb %bh, (%ebx)": 1,
                "jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;popl %ebx;addl (%ebp), %edx": 1,
                "je  <.text+>;jb  <.text+>;arpl %ax, (%ecx);jb  <.text+>;jae  <.text+>": 1,
                "insb %dx, %es:(%edi);pushl %edi;addb %al, (%eax);cmpsb %es:(%edi), (%esi);addb (%edx), %dl": 1,
                "cmpsb %es:(%edi), (%esi);addb (%edx), %dl;popal;incl %esi;imull $, (%ebp), %ebp": 1,
                "popal;incl %esi;imull $, (%ebp), %ebp;je  <.text+>;outsl (%esi), %dx": 1,
                "insl %dx, %es:(%edi);jo  <.text+>;je  <.text+>;jb  <.text+>;popal": 1,
                "outsb (%esi), %dx;insb %dx, %es:(%edi);incl %ecx;addb %al, (%eax);decl %ebx": 1,
                "insb %dx, %es:(%edi);incl %ecx;addb %al, (%eax);decl %ebx;incl %ebp": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                "RichNAA": 1,
                ".text": 1,
                "`.data": 1,
                ".rsrc": 1,
                "USER32.dll": 2,
                "ole32.dll": 2,
                "OLEAUT32.dll": 2,
                "framedyn.dll": 2,
                "Secur32.dll": 2,
                "WS2_32.dll": 2,
                "msvcrt.dll": 2,
                "KERNEL32.dll": 2,
                "NTDLL.DLL": 1,
                "u-iGx-i": 1,
                "w-ieu-i": 1,
                "-iav-i": 1,
                "-ij{-i": 1,
                "w-isz-i.t-i*v-i": 1,
                "SetThreadUILanguage": 1,
                "<5IkQ": 3,
                "EvTrig.pdb": 1,
                "^<9;t": 1,
                "F<^[u!h": 1,
                "SWSPQ": 1,
                "^09;t": 1,
                "_^[u!h": 1,
                "F0u!h": 1,
                "vTSSR": 2,
                "^[u!h": 1,
                ";Ft~?": 1,
                ";F|~?": 1,
                "Vj(^V": 1,
                "Vj<^V": 1,
                "Vjx^V": 1,
                "HHtHHt=Ht:Ht-": 1,
                "PjOjOh\\": 1,
                "t@Ht6Ht,HuEhT": 1,
                "RWWSP": 1,
                "CSVVj": 1,
                "SSSSRQPW": 1,
                "SSSSPRQW": 1,
                "SSSSSSPW": 1,
                "B9} u": 1,
                "j9} u": 1,
                "tAf9u": 1,
                "RWWPV": 1,
                "w'tA=": 1,
                "wlt_=": 1,
                "YYt*V": 1,
                "YYt-V": 1,
                "VWj~Y": 1,
                "PPPPj": 1,
                "SVWtk": 1,
                "YY@PWS": 1,
                "QQSVWh": 1,
                "YYtJj": 1,
                "8-t1Vj": 1,
                "VWj?3": 1,
                "wsprintfW": 1,
                "CharUpperW": 1,
                "LoadStringW": 1,
                "MPR.dll": 1,
                "CoUninitialize": 1,
                "CoTaskMemFree": 1,
                "CoTaskMemAlloc": 1,
                "CoCreateInstance": 1,
                "CoInitializeSecurity": 1,
                "CoInitializeEx": 1,
                "?GetData@CHString@@IBEPAUCHStringData@@XZ": 1,
                "??1CHString@@QAE@XZ": 1,
                "?FindOneOf@CHString@@QBEHPBG@Z": 1,
                "?TrimLeft@CHString@@QAEXXZ": 1,
                "?TrimRight@CHString@@QAEXXZ": 1,
                "??4CHString@@QAEABV0@PBG@Z": 1,
                "??0CHString@@QAE@XZ": 1,
                "?Format@CHString@@QAAXPBGZZ": 1,
                "??0CHString@@QAE@PBG@Z": 1,
                "?Find@CHString@@QBEHPBG@Z": 1,
                "??4CHString@@QAEABV0@ABV0@@Z": 1,
                "?Mid@CHString@@QBE?AV1@H@Z": 1,
                "?Find@CHString@@QBEHG@Z": 1,
                "??YCHString@@QAEABV0@PBG@Z": 1,
                "?ReleaseBuffer@CHString@@QAEXH@Z": 1,
                "?GetBufferSetLength@CHString@@QAEPAGH@Z": 1,
                "?Left@CHString@@QBE?AV1@H@Z": 1,
                "?Compare@CHString@@QBEHPBG@Z": 1,
                "?Mid@CHString@@QBE?AV1@HH@Z": 1,
                "GetUserNameExW": 1,
                "NETAPI32.dll": 1,
                "??3@YAXPAX@Z": 1,
                "_CxxThrowException": 1,
                "??2@YAPAXI@Z": 1,
                "__CxxFrameHandler": 1,
                "_itow": 1,
                "memmove": 1,
                "wcsstr": 1,
                "_wcsicmp": 1,
                "wcscpy": 1,
                "wcslen": 1,
                "wcstok": 1,
                "calloc": 1,
                "realloc": 1,
                "wcstod": 1,
                "wcstol": 1,
                "wcsncmp": 1,
                "_wcsnicmp": 1,
                "fflush": 1,
                "fprintf": 1,
                "wcschr": 1,
                "strtok": 1,
                "_c_exit": 1,
                "_exit": 1,
                "_XcptFilter": 1,
                "_cexit": 1,
                "__winitenv": 1,
                "__wgetmainargs": 1,
                "_initterm": 1,
                "__setusermatherr": 1,
                "_adjust_fdiv": 1,
                "__p__commode": 1,
                "__p__fmode": 1,
                "__set_app_type": 1,
                "_except_handler3": 1,
                "??1type_info@@UAE@XZ": 1,
                "_controlfp": 1,
                "?terminate@@YAXXZ": 1,
                "lstrcpyW": 1,
                "lstrlenW": 1,
                "lstrcmpiW": 1,
                "LocalAlloc": 1,
                "FormatMessageW": 1,
                "SetLastError": 1,
                "lstrcmpW": 1,
                "lstrcatW": 1,
                "InterlockedDecrement": 1,
                "GetConsoleScreenBufferInfo": 1,
                "GetStdHandle": 1,
                "WriteConsoleW": 1,
                "SetConsoleCursorPosition": 1,
                "InterlockedIncrement": 1,
                "QueryPerformanceCounter": 1,
                "GetTickCount": 1,
                "GetCurrentThreadId": 1,
                "GetCurrentProcessId": 1,
                "GetSystemTimeAsFileTime": 1,
                "TerminateProcess": 1,
                "GetCurrentProcess": 1,
                "UnhandledExceptionFilter": 1,
                "SetUnhandledExceptionFilter": 1,
                "lstrcpynW": 1,
                "FileTimeToSystemTime": 1,
                "VerifyVersionInfoW": 1,
                "VerSetConditionMask": 1,
                "WideCharToMultiByte": 1,
                "FreeLibrary": 1,
                "GetProcAddress": 1,
                "LoadLibraryW": 1,
                "LocalFree": 1,
                "GetLastError": 1,
                "MultiByteToWideChar": 1,
                "ReadConsoleW": 1,
                "ReadFile": 1,
                "SetConsoleMode": 1,
                "GetConsoleMode": 1,
                "GetTimeFormatW": 1,
                "GetComputerNameExW": 1,
                "GetModuleHandleA": 1,
                ".?AVCShowError@@": 1,
                ".?AV_com_error@@": 1,
                ".?AVCHeap_Exception@@": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-rw- name=.tls": 1,
                "perm=m-r-- name=.rsrc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=USER32.dll_CharUpperW": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadStringW": 3,
                "bind=NONE type=FUNC name=USER32.dll_wsprintfW": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoInitializeSecurity": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoCreateInstance": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoTaskMemAlloc": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoTaskMemFree": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoUninitialize": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoInitializeEx": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantTimeToDosDateTime": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantCopyInd": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantInit": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_DllRegisterServer": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantCopy": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SysStringLen": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SysReAllocString": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantClear": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Format@CHString@@QAAXPBGZZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??0CHString@@QAE@PBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Find@CHString@@QBEHPBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??4CHString@@QAEABV0@ABV0@@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Mid@CHString@@QBE?AV1@H@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Find@CHString@@QBEHG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??0CHString@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?ReleaseBuffer@CHString@@QAEXH@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?GetBufferSetLength@CHString@@QAEPAGH@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Left@CHString@@QBE?AV1@H@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Compare@CHString@@QBEHPBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Mid@CHString@@QBE?AV1@HH@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??4CHString@@QAEABV0@PBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?TrimRight@CHString@@QAEXXZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?TrimLeft@CHString@@QAEXXZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?FindOneOf@CHString@@QBEHPBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??YCHString@@QAEABV0@PBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?GetData@CHString@@IBEPAUCHStringData@@XZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??1CHString@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=Secur32.dll_GetUserNameExW": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_WSAGetLastError": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_inet_addr": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_gethostbyaddr": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_WSACleanup": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_WSAStartup": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_??1type_info@@UAE@XZ": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__controlfp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_?terminate@@YAXXZ": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcslen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__except_handler3": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsstr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memmove": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__itow": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___CxxFrameHandler": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_??2@YAPAXI@Z": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__iob": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__CxxThrowException": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_??3@YAXPAX@Z": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___set_app_type": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___p__fmode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___p__commode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__adjust_fdiv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___setusermatherr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__initterm": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___wgetmainargs": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___winitenv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__cexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__XcptFilter": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__c_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strtok": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcschr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fflush": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsnicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsncmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcstol": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcstok": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_realloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_free": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_calloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcstod": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrlenW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcmpiW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FormatMessageW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcmpW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InterlockedDecrement": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleScreenBufferInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetComputerNameExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTimeFormatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStdHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteConsoleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleCursorPosition": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InterlockedIncrement": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadConsoleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MultiByteToWideChar": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcpyW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WideCharToMultiByte": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VerSetConditionMask": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VerifyVersionInfoW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FileTimeToSystemTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcpynW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetUnhandledExceptionFilter": 3,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=Event Triggers": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2108)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=EventTriggers.exe": 1,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=EvTrig.exe": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le string=Type the password for %s:1Passing the user credential on local connection.\\n7The Target system must be running Windows XP or above.\\n": 1,
                "section=.rsrc type=utf16le string=PInvalid Syntax. '%s' value is not allowed for '%s' option.\\nType \"%s\" for usage.\\nKInvalid Syntax. Specify valid numeric value for '%s'.\\nType \"%s\" for usage.\\nSInvalid Syntax. Specifiy valid floating point value for '%s'.\\nType \"%s\" for usage.\\nHInvalid Syntax. Mandatory option '/%s' is missing.\\nType \"%s\" for usage.\\nXInvalid Syntax. '%s' option is not allowed more than '%d' time(s).\\nType \"%s\" for usage.\\n": 1,
                "section=.rsrc type=utf16le Invalid Argument/Option - '%s'.\\nType \"%s\" for usage.\\nBInvalid Syntax. Default argument is missing.\\nType \"%s\" for usage.\\nFLength of the command line argument should not exceed 255 characters.\\n[Invalid Syntax. Default option is not allowed more than '%d' time(s).\\nType \"%s\" for usage.\\n>Invalid Syntax. Value expected for '%s'.\\nType \"%s\" for usage.\\nTInvalid Syntax. '%s' value is not allowed as default argument.\\nType \"%s\" for usage.\\n": 1,
                "section=.rsrc type=utf16le string=ERROR:\\bWARNING:\\bSUCCESS:": 1,
                "section=.rsrc type=utf16le string=INFO:": 1,
                "section=.rsrc type=utf16le string=\\eERROR: Internal COM error.\\n": 1,
                "section=.rsrc type=utf16le string=%s Error Code: 0x%08lx\\n": 1,
                "section=.rsrc type=utf16le string=,Invalid syntax. Source should not be empty.\\n1Invalid syntax. Description should not be empty.\\n,Invalid syntax. Log(s) should not be empty.\\n": 1,
                "section=.rsrc type=utf16le string=Type \"%s /%s /?\" for usage.\\n\\rEVENTTRIGGERS": 1,
                "section=.rsrc type=utf16le string=Trigger name is invalid.\\nAInvalid syntax. /RP can be specified only when /RU is specified.\\n": 1,
                "section=.rsrc type=utf16le string=Run As (Username).INFO: Unable to delete Event Trigger id \"%d\".\\n": 1,
                "section=.rsrc type=utf16le string=type": 1,
                "section=.rsrc type=utf16le string=id\\vtriggername": 1,
                "section=.rsrc type=utf16le string=source": 1,
                "section=.rsrc type=utf16le string=\\a  AND": 1,
                "section=.rsrc type=utf16le string='\\nEVENTTRIGGERS /parameter [arguments]\\n\\n\\rDescription:\\nC    This command-line tool enables an administrator to display and\\n;    configure \"Event Triggers\" on local or remote system.\\n\\n": 1,
                "section=.rsrc type=utf16le string=Parameter List:\\nE    /Create     Create a new Event Trigger that will monitor and act\\nI                upon the occurrence of NT Log Events of given criteria.\\n\\n=    /Delete     Deletes an Event Trigger by its trigger ID.\\n\\n": 1,
                "section=.rsrc type=utf16le string=C    /Query      Displays the Event Trigger properties and settings.": 1,
                "section=.rsrc type=utf16le string=\\n\\n+    /?          Displays this help/usage.\\n\\n\\nExamples:\\n": 1,
                "section=.rsrc type=utf16le string=    EVENTTRIGGERS /Create /?\\n": 1,
                "section=.rsrc type=utf16le string=    EVENTTRIGGERS /Delete /?\\n": 1,
                "section=.rsrc type=utf16le string=    EVENTTRIGGERS /Query  /?\\n": 1,
                "section=.rsrc type=utf16le string=A\\nEVENTTRIGGERS /Create [/S system [/U username [/P [password]]]]\\nD                      /TR triggername /TK taskname [/D description]\\nD                      [/L log] { [/EID id] [/T type] [/SO source] }\\n5                      [/RU username [/RP password]]\\n\\n": 1,
                "section=.rsrc type=utf16le string=\\rDescription:\\nB    Create a new Event Trigger that will monitor and act upon the\\n6    occurrence of NT Log Events of a given criteria.\\n\\nE    NOTE: Using /EID, /T and /SO together act as a series of AND's.\\n\\n": 1,
                "section=.rsrc type=utf16le string=Parameter List:\\nI    /S      system           Specifies the remote system to connect to.\\n\\nH    /U      [domain\\]user    Specifies the user context under which the\\n6                             command should execute.\\n\\nG    /P      [password]       Specifies the password for the given user\\nE                             context. Prompts for input if omitted.\\n\\nI    /TR     triggername      Specifies a friendly name to associate with\\n1                             the Event Trigger.\\n\\nF    /L      log              Specifies the NT Event Log(s) to monitor\\n>                             events from. Valid types include:": 1,
                "section=.rsrc type=utf16le string=\\nG                             Application, System, Security, DNS Server\\n": 1,
                "section=.rsrc type=utf16le string=E                             Log and Directory Log. The wildcard \"*\"\\nH                             may be used and the default value is \"*\".\\n\\nE    /EID    id               Specifies a specific Event ID the Event\\n:                             Trigger should monitor for.\\n\\nF    /T      type             Specifies an Event Type that the trigger\\nG                             should monitor for. Valid values include:\\n@                             \"ERROR\", \"INFORMATION\", \"WARNING\",\\nA                             \"SUCCESSAUDIT\" and \"FAILUREAUDIT\".\\n\\nI    /SO     source           Specifies a specific Event Source the Event\\n:                             Trigger should monitor for.\\n\\nD    /D      description      Specifies the description of the Event\\n'                             Trigger.\\n\\nD    /TK     taskname         Specifies the task to execute when the\\n@                             Event Trigger conditions are met.\\n\\nG    /RU     username         Specifies the user account (user context)\\nG                             under which the task runs. For the system\\n": 1,
                "section=.rsrc type=utf16le                              account value must be \"\".\\n\\nB    /RP     password         Specifies the password for the user.\\nC                             To prompt for the password, the value\\n9                             must be either \"*\" or none.\\nG                             Password will not effect for the \"SYSTEM\"\\n'                             account.\\n\\n8    /?                       Displays this help/usage.\\n\\n\\nExamples:\\n": 1,
                "section=.rsrc type=utf16le string=    EVENTTRIGGERS /Create /?\\n@    EVENTTRIGGERS /Create /TR \"Disk Cleanup\" /L SYSTEM /T ERROR\\n?                          /TK c:\\windows\\system32\\cleanmgr.exe\\nA    EVENTTRIGGERS /Create /S system /U user /TR \"Low Disk Space\"\\n/                          /EID 4133 /T WARNING\\n2                          /TK \\\\srv\\share\\dsk.cmd\\n?    EVENTTRIGGERS /Create /S system /U domain\\user /P password\\n@                          /TR \"Disk Backup\" /EID 4133 /L SYSTEM\\n": 1,
                "section=.rsrc type=utf16le string=C                          /T ERROR /TK \\\\system\\share\\ntbackup.exe\\nB    EVENTTRIGGERS /Create /RU user /RP password /TR \"Disk Backup\"\\nA                          /TK \\\\system\\share\\ntbackup.exe /EID 4\\n": 1,
                "section=.rsrc type=utf16le string=A\\nEVENTTRIGGERS /Delete [/S system [/U username [/P [password]]]]\\n:                      /TID id [/TID id1 [...[/TID idn]]]\\n\\n\\rDescription:\\n8    Delete an Event Trigger from the system by its ID.\\n\\n": 1,
                "section=.rsrc type=utf16le string=Parameter List:\\nI    /S      system           Specifies the remote system to connect to.\\n\\nH    /U      [domain\\]user    Specifies the user context under which the\\n6                             command should execute.\\n\\n": 1,
                "section=.rsrc type=utf16le string=G    /P      [password]       Specifies the password for the given user\\nE                             context. Prompts for input if omitted.\\n\\nG    /TID    id               Specifies the Event Trigger to be deleted\\nE                             by \"Event Trigger ID\". The \"*\" wildcard\\n+                             may be used.\\n\\n8    /?                       Displays this help/usage.\\n\\n\\nExamples:\\n": 1,
                "section=.rsrc type=utf16le string=    EVENTTRIGGERS /Delete /?\\n6    EVENTTRIGGERS /Delete /TID 1 /TID 2 /TID 4 /TID 6\\n:    EVENTTRIGGERS /Delete /S system /U domain\\user /TID *\\nC    EVENTTRIGGERS /Delete /S system /U username /P password /TID 1\\n": 1,
                "section=.rsrc type=utf16le string=@\\nEVENTTRIGGERS /Query [/S system [/U username [/P [password]]]]\\n.                     [/FO format] [/NH] [/V]\\n\\n\\rDescription:\\n9    Displays the Event Trigger properties and settings.\\n\\n": 1,
                "section=.rsrc type=utf16le string=Parameter List:\\nH    /S     system           Specifies the remote system to connect to.\\n\\nG    /U     [domain\\]user    Specifies the user context under which the\\n5                            command should execute.\\n\\nF    /P     [password]       Specifies the password for the given user\\nD                            context. Prompts for input if omitted.\\n\\nH    /FO    format           Specifies the format in which the output is\\n-                            to be displayed.\\nC                            Valid values: \"TABLE\", \"LIST\", \"CSV\".\\n\\nF    /NH                     Specifies that the \"Column Header\" should\\n<                            not be displayed in the output.\\nC                            Valid only for TABLE and CSV formats.\\n\\nD    /V                      Specifies that the detailed information\\n@                            should be displayed in the output.\\n\\n7    /?                      Displays this help/usage.\\n\\n\\nExamples:\\n": 1,
                "section=.rsrc type=utf16le string=    EVENTTRIGGERS /Query /?\\n%    EVENTTRIGGERS /Query /FO list /V\\n'    EVENTTRIGGERS /Query /FO csv /NH  \\nA    EVENTTRIGGERS /Query /S system /U domain\\user /P password /V\\n": 1,
                "section=.rsrc type=utf16le string=Type run as password for %s:1WARNING: Password will be ignored for \"%s\" user.\\n": 1,
                "section=.rsrc type=utf16le Invalid syntax. Run as user name should not be empty.\\n": 1,
                "section=.rsrc type=utf16le string=Creating EventTrigger...": 1,
                "section=.rsrc type=utf16le string=Connecting to server...\\eDeleting EventTrigger(s)...%Loading Event Trigger Information ...sWARNING: The new event trigger has been created, but may not run because the account information could not be set.\\n": 1,
                "section=.rsrc type=utf16le string=iWARNING: When the run as password is empty the task may not be triggered because of the security policy.\\n": 1,
                "section=.rsrc type=utf16le string=(Invalid syntax.\\nType \"%s /?\" for usage.\\n": 1,
                "section=.rsrc type=utf16le string=Type the password for": 1,
                "section=.rsrc type=utf16le string= :  2SUCCESS: The Event Trigger \"%s\" has been created.\\n\\bHostname\\nTrigger ID": 1,
                "section=.rsrc type=utf16le string=Event Trigger Name": 1,
                "section=.rsrc type=utf16le string=Task": 1,
                "section=.rsrc type=utf16le string=Query\\vDescription": 1,
                "section=.rsrc type=utf16le string=DSUCCESS: The Event Trigger \"%s\" (Trigger ID = %d) has been removed.\\n\\vEvents With-INFO: Event Trigger id \"%d\" does not exists.\\n?Invalid syntax. /P can be specified only when /U is specified.\\n/ERROR: Event Trigger Name \"%s\" already exists.\\n": 1,
                "section=.rsrc type=utf16le string=TABLE": 1,
                "section=.rsrc type=utf16le string=LIST3error|information|successaudit|failureaudit|warning": 1,
                "section=.rsrc type=utf16le string=table|list|csv.INFO: No event trigger id found for deletion.\\n": 1,
                "section=.rsrc type=utf16le string=INFO: No event triggers found.\\n+ERROR: \"%s\" Log does not exists on system.\\n:ERROR: Event trigger id value should be between (1 - %d).\\n3Invalid syntax. Either of /EID, /so or /T missing.\\n\\aERROR:": 1,
                "section=.rsrc type=utf16le string=Hint: /TK is missing.\\n": 1,
                "section=.rsrc type=utf16le string=;ERROR: \"CmdTriggerConsumer\" class not registered with WMI.\\n\\fFAILUREAUDIT": 1,
                "section=.rsrc type=utf16le string=\\fSUCCESSAUDIT\\raudit failure\\raudit success/Invalid syntax. Trigger name missing or empty.\\n": 1,
                "section=.rsrc type=utf16le string=Access is denied.2ERROR: Unable to create event trigger named \"%s\".\\n": 1,
                "section=.rsrc type=utf16le string=ERROR: Out of memory.\\n": 1,
                "section=.rsrc type=utf16le string=/Invalid syntax. User name should not be empty.\\n1Invalid syntax. System name should not be empty.\\n": 1,
                "section=.rsrc type=utf16le string=Specified ID is invalid.\\n,Invalid syntax. Task name missing or empty.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid syntax. ID missing.\\n\\eID must be numeric or \"*\".\\nCInvalid syntax. /NH is allowed only for \"TABLE\" and \"CSV\" formats.\\n?Invalid syntax. /U can be specified only when /S is specified.\\n": 1,
                "arch     x86": 1,
                "binsz    82944": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x0001874b": 1,
                "compiled Sun Apr 13 19:38:38 2008": 1,
                "crypto   false": 1,
                "dbg_file EvTrig.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x00019419": 1,
                "guid     1E9AC5A81EB948A889193BA09095D5D61": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   true": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows CUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x4": 1,
                "TimeDateStamp : 0x4802532e": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x10f": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0xe800": 1,
                "SizeOfInitializedData : 0x5800": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x10000": 1,
                "ImageBase : 0x1000000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x18000": 1,
                "SizeOfHeaders : 0x400": 1,
                "CheckSum : 0x19419": 1,
                "Subsystem : 0x3": 1,
                "DllCharacteristics : 0x8000": 1,
                "SizeOfStackReserve : 0x40000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0xeb24": 1,
                "Size : 0xb4": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x12000": 1,
                "Size : 0x5318": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x1210": 1,
                "Size : 0x1c": 1,
                "IMAGE_DIRECTORY_ENTRY_TLS": 1,
                "VirtualAddress : 0x1de8": 1,
                "Size : 0x18": 1,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0x1e20": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT": 1,
                "VirtualAddress : 0x270": 1,
                "Size : 0xb8": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x1000": 1,
                "Size : 0x20c": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "user32.dll": 1,
                "ole32.dll": 1,
                "oleaut32.dll": 1,
                "framedyn.dll": 1,
                "secur32.dll": 1,
                "ws2_32.dll": 1,
                "msvcrt.dll": 1,
                "kernel32.dll": 1,
                "82944": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x1": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: Event Triggers": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2108)": 1,
                "InternalName: EventTriggers.exe": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: EvTrig.exe": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}