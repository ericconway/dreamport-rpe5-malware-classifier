{
    "filepath": "/corpus/benign/ntkrnlpa.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "6bc5e4b76e18a1d83d4be04da09af0b2"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "addb %ah, (%ebx,%esi,);addb %bh, (%ebx,%esi,);addb %dl, (%ebx,%esi,);sbbl $, %eax;addb %bl, %al": 2,
                "addb %dl, (%esp,%esi,);addb %dh, (%esi);sbbl $, %eax;addb %bl, (%esp,%esi,);sbbl $, %eax": 2,
                "addb %cl, (%esi);jne  <.text+>;addb %dl, (%edx);sbbl $, %eax;addb %bh, (%ebp,%esi,)": 1,
                "addb %cl, -(%edx);jne  <.text+>;addb %bh, -(%edx);jne  <.text+>;addb %ch, %al": 1,
                "addb %dh, (%edx);jbe  <.text+>;addb %al, (%esi);sbbl $, %eax;addb %ch, (%esi,%esi,)": 1,
                "addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %ah, ;xchgl %ebp, %eax": 1,
                "jae  <.text+>;addb %cl, (%ecx);je  <.text+>;addb %bh, %bh;calll *(%eax)": 1,
                "addb %cl, (%ecx);je  <.text+>;addb %bh, %bh;calll *(%eax);jbe  <.text+>": 1,
                "incl %eax;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *": 1,
                "addb %al, (%eax);addb %cl, ;movl $, %esi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);movb $-, %dl;incl %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %esp;addb %ch, (%edi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "lcalll *(%eax);pushfl;decl %eax;addb %ch, (%ebx);pushfl": 1,
                "decl %eax;addb %ah, (%ebx);stosb %al, %es:(%edi);decl %eax;addb %al, (%eax)": 1,
                "decl %eax;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl %ebx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl %ebx;lodsb (%esi), %al": 1,
                "addb %bh, %bh;pushl %ebx;lodsb (%esi), %al;decl %eax;addb %al, (%esi)": 1,
                "decl %eax;addb %bh, %bh;decl -(%ebx);decl %eax;addb %bl, -(%esi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %ecx;adcb (%ecx), %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);subl $, %eax": 1,
                "addb %al, (%eax);addb %ah, %dh;adcl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, (%edx);sbbb $, %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;incl (%eax);addb %al, (%eax);addb %dl, %cl": 2,
                "incl %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);adcb %dl, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);adcb %dl, (%eax);adcb %dl, (%eax)": 1,
                "sbbb %dl, (%edi);popl %ss;popl %ss;popl %ss;popl %ss": 1,
                "addb %dl, (%esi,%eax,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);sbbb $, %al": 1,
                "xorb (%ecx), %cl;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;incl (%eax)": 1,
                "decl %edx;incl %ecx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "addb %bh, %bh;incl (%eax);addb %al, (%eax);addb %ah, -(%esi);decl %eax": 1,
                "addb %al, (%eax);addb %bh, %bh;int $;addb %dh, %dl;int $": 1,
                "decl %ebp;popl %esp;incl %esp;decl %ecx;pushl %ebx": 1,
                "imull $, %fs:(%ebx), %esi;popal;jb  <FsRtlLegalAnsiCharacterArray+>;imull $, (%ecx,%ebp,), %esi;addb %dh, (%edx)": 1,
                "xorb %dh, %ss:(%eax);js  <FsRtlLegalAnsiCharacterArray+>;jae  <FsRtlLegalAnsiCharacterArray+>;xorb %bh, %cs:(%eax);xorb %dh, (%ecx,%esi)": 1,
                "addb %al, (%eax);addb %ch, (%eax);jae  <FsRtlLegalAnsiCharacterArray+>;rcrl $, (%edi);rclb %cl, (%ecx)": 1,
                "salc;pushl %eax;repne  addw %di, (%eax);decl %edx;movb $, %cl": 1,
                "aam $-;enter $, $-;ja  <FsRtlLegalAnsiCharacterArray+>;addb %bh, %al;addl $, %eax": 1,
                "js - <FsRtlLegalAnsiCharacterArray+>;adcl %edi, -(%edi,%esi,);movb $, %bl;jmp -;into": 1,
                "subl %ecx, %esp;addl (%eax), %ebx;pushl %esi;sbbl (%edx), %esi;xchgl %ebp, %eax": 1,
                "addb %ch, (%ebx);loop ;das;pushl $-;decl %ebp": 1,
                "je - <FsRtlLegalAnsiCharacterArray+>;adcl %esi, -(%esi);xorps %xmm, %xmm;adcl $, %eax;addb %ch, (%ebx)": 1,
                "das;insb %dx, %es:(%edi);lock;lretl;loopne -": 1,
                "clc;jne  <FsRtlLegalAnsiCharacterArray+>;lesl -(%ebp), %ebp;decl %ebp;andl $, %eax": 1,
                "jmp -;into;adcl %edi, (%edi);loope ;sbbb %ch, -(%edi)": 1,
                "andl $, %eax;rorl $, (%eax);subl %ecx, %esp;addl (%eax), %ebx;je - <FsRtlLegalAnsiCharacterArray+>": 1,
                "rorl $, (%eax);subl %ecx, %esp;addl (%eax), %ebx;jns - <FsRtlLegalAnsiCharacterArray+>;decl %ebp": 1,
                "movb $-, %bl;xchgl %ecx, %eax;orl -(%ebp), %esp;jns - <FsRtlLegalAnsiCharacterArray+>;aam $": 1,
                "inb %dx, %al;rcll (%ecx);movb $-, %dh;addb %al, %al;decl %edi": 1,
                "cld;adcb $, (%esi);pushl %ebx;pushl %esp;addb %al, (%eax)": 1,
                "decl %esp;decl -(%eax);imull $, -(%eax,%ebp,), %ebx;lodsl (%esi), %eax;outsl (%esi), %dx": 1,
                "incl %ecx;movb , %al;movb $, %al;lcalll $-, $;xorb %al, -(%esi)": 1,
                "aad $-;subb %dh, %dh;incl %ebp;xchgl %esp, %eax;xorb $-, %ah": 1,
                "movb , %al;stosb %al, %es:(%edi);insb %dx, %es:(%edi);pushl %es;faddl (%ebx)": 1,
                "faddl (%ebx);xchgl %ebp, %eax;pushl %edi;outsl (%esi), %dx;js - <FsRtlLegalAnsiCharacterArray+>": 1,
                "jg  <FsRtlLegalAnsiCharacterArray+>;jne - <FsRtlLegalAnsiCharacterArray+>;lcalll $, $;testb %bl, (%edi);decl %esp": 1,
                "adcb (,%ecx,), %al;je - <FsRtlLegalAnsiCharacterArray+>;incl %ebp;cmpb (%edx), %cl;jae  <FsRtlLegalAnsiCharacterArray+>": 1,
                "pushal;xchgl %edi, %eax;adcl -, %eax;pushl %ebx;movl $, %edi": 1,
                "pushl %ebx;movl $, %edi;repne  addb %ah, -(%eax);je - <FsRtlLegalAnsiCharacterArray+>;movw (%ecx), %gs": 1,
                "movb %al, ;lock;adcb $-, %al;jge - <FsRtlLegalAnsiCharacterArray+>;movb $-, %dh": 1,
                "pushl %cs;xlatb;jns - <FsRtlLegalAnsiCharacterArray+>;xorl -(%eax,%edx,), %esi;testl $, %eax": 1,
                "movw (%ecx), %gs;addb %ah, -(%eax);jl - <FsRtlLegalAnsiCharacterArray+>;popl %es;jb - <FsRtlLegalAnsiCharacterArray+>": 1,
                "decl %edx;addl %eax, (%eax);lretl;lock;incl %esi": 1,
                "adcl , %eax;lretl;lock;incl %esi;rclb (%ecx)": 14,
                "jne  <FsRtlLegalAnsiCharacterArray+>;shlb (%eax);iretl;retl $-;rcll (%ecx)": 1,
                "movl $, %esi;loop ;das;testl %esi, %ecx;incl %esp": 1,
                "pushl %es;movb $, %dl;testb %al, (%ebx);leal (%edx), %edi;addl $, %eax": 1,
                "lahf;scasl %es:(%edi), %eax;rclb (%ecx);xchgl %edx, %eax;jmp ": 1,
                "decl %ecx;repne  outsl %gs:(%esi), %dx;rorb $, (%ecx);lock;decl %eax": 1,
                "addb %ah, (%eax);stc;movl $, %esi;adcl %edx, -(%edi);incl %eax": 1,
                "incl %eax;pushl %edx;cli;aad $-;pushal": 1,
                "aad $-;pushal;rcrb %cl, %ch;rclb %cl, (%ecx);xchgl %edi, %eax": 1,
                "fnstcw %cs:(%edx);popl %ss;popal;decl %edi;sbbl %edx, %ebx": 1,
                "decl %edi;sbbl %edx, %ebx;adcl %edx, -(%edi);incl %eax;pushl %edx": 1,
                "movl $, %edi;repne  addb %ah, -(%eax);orb %ah, -(%ebx);pushl %ebx;movl $, %edi": 1,
                "fildl (%eax);movb , %al;addb %al, (%eax);addb %al, (%eax);movl $, %eax": 1,
                "addb %dh, %cl;incl %eax;decl %ecx;addb %bh, %bh;ljmpl *-(%edx)": 1,
                "decl %ecx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *%edi": 1,
                "incl %ecx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *%ebp": 1,
                "decl %ecx;addb %bh, %bh;jmpl *(%ecx);js  <FsRtlLegalAnsiCharacterArray+>;addb %ch, (%edi)": 1,
                "decl -(%edx);decl %ecx;addb %bl, -(%eax);decl %ecx;addb %bh, %bh": 1,
                "addb %bh, %bh;pushl %esi;testl %ecx, (%ecx);addb $-, %al;decl %ecx": 1,
                "addb %bh, %bh;incl %ebx;xchgl %esp, %eax;decl %ecx;addb %dl, %ah": 1,
                "addb %bh, %bh;calll *(%eax);testl $, %eax;decl %ecx;addb %bh, %bh": 1,
                "decl %ecx;addb %dl, (%edi,%ebp,);addb %bh, %bh;incl %edx;movb $, %cl": 1,
                "addb %bh, %bh;incl %edx;movb $, %cl;addb %dl, %al;movb $, %cl": 1,
                "movb $, %cl;addb %bh, %bh;decl %edx;movb $, %bl;addb %dl, %bh": 1,
                "addb %bh, %bh;decl %edx;movb $, %bl;addb %dl, %bh;movb $, %bl": 1,
                "addb %bh, %bh;decl %ecx;addb %al, -(%esi);calll *%ebp;movb $, %bh": 1,
                "addb %bh, %bh;jmpl *-(%esi);addb %al, (%eax);addb %al, (%eax);pushfl": 1,
                "addb %al, (%eax);addb %al, (%eax);pushfl;into;decl %ecx": 1,
                "addb %ch, (%edx);addb %al, (%eax);addb %bh, %bh;pushl -(%ecx);incl %ecx": 1,
                "addb %bh, (%edx);sti;decl %ecx;addb %bh, %bh;incl -(%ebp)": 1,
                "addb %bh, %bh;lcalll *(%ebx);pushl %edi;addb %ch, (%ecx);pushl %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;decl (%ecx);outl %eax, $": 1,
                "addb %bh, %bh;pushl (%edi,%ecx,);decl %ebx;addb %bh, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *(%esi);orl (%edx), %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *(%esp,%ebx,);addb %ah, (%esi)": 1,
                "addb %al, (%eax);andb %al, (%eax);addb %al, (%eax);andb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);movl $, %eax;addb %cl, -(%eax,%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl (%edi);addl $, %eax": 1,
                "addb %dl, -(%esi);incl %edx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "incl %edx;addb %bh, %bh;lcalll *-(%esi);incl %edx;addb %ah, -(%edx)": 1,
                "addb %bh, %bh;incl %edx;addb %cl, -(%esi);incl %edx;addb %al, (%eax)": 1,
                "popl %ss;decl %esp;addb %bh, %bh;pushl (%ebp);decl %esp": 1,
                "andl $, %eax;decl %esp;addb %bh, %bh;pushl (%edx);decl %esp": 1,
                "addb %bh, %bh;pushl (%edx);decl %esp;addb %al, -(%eax);incl (%eax)": 1,
                "decl %esp;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;aas": 1,
                "addb %ch, %cl;aas;decl %esp;addb %bh, %bh;lcalll *(%eax)": 1,
                "decl %esp;addb %ch, (%esi,%eax,);decl %esp;addb %bh, %bh;ljmpl *(%eax)": 1,
                "decl %esp;addb %cl, (%ecx);decl %esp;addb %al, (%eax);addb %al, (%eax)": 1,
                "calll *(%eax);jle  <FsRtlLegalAnsiCharacterArray+>;addb %dl, (%esi,%edi,);decl %esp;addb %bh, %bh": 1,
                "addb %bh, %bh;jmpl *%ecx;jne  <FsRtlLegalAnsiCharacterArray+>;addb %ah, %ch;jne  <FsRtlLegalAnsiCharacterArray+>": 1,
                "jg  <FsRtlLegalAnsiCharacterArray+>;addb %dh, (%ebx);decl %esp;addb %al, (%eax);addb %al, (%eax)": 1,
                "subb %ch, -(%ebx);decl %esp;addb %bh, %bh;decl %ebp;stosl %eax, %es:(%edi)": 1,
                "addb %ah, %al;jecxz  <FsRtlLegalAnsiCharacterArray+>;addb %bh, %bh;calll *%esi;jecxz  <FsRtlLegalAnsiCharacterArray+>": 1,
                "addb %bh, %bh;jecxz  <FsRtlLegalAnsiCharacterArray+>;addb %cl, (%ebp);incl %esp;bound (%eax), %eax": 1,
                "arpl %ax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb $, (%eax)": 1,
                "addb %bh, (%edx);pushl %ecx;incl %esp;addb %bh, %bh;pushl %ecx": 1,
                "decl %ecx;decl %ebp;addb %bh, %bh;incl %edx;decl %eax": 1,
                "decl %ecx;decl %ebp;addb %bh, %bh;decl %edx;decl %ebp": 1,
                "addb %bh, %bh;jmpl *-(%edi);decl %ebp;decl %ebp;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;decl %esi;decl %ebp;addb %ch, %bl": 1,
                "decl %ebp;addb %ch, %bl;decl %esi;decl %ebp;addb %bh, %bh": 1,
                "addb %cl, (%edi,%ecx,);decl %ebp;addb %bh, %bh;lcalll *(%edx);incl %esp": 1,
                "addb %bh, %bh;jmpl *-(%edi);pushl %esp;decl %ebp;addb %bh, %bh": 1,
                "addb %dh, %ah;ja  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "addb %bh, %bh;rorb (%ebp);clc;rorb (%ebp);jae - <FsRtlLegalAnsiCharacterArray+>": 1,
                "ljmpl *(%edx);hlt;decl %ebp;addb %bh, (%eax);hlt": 1,
                "hlt;decl %ebp;addb %bh, (%eax);hlt;decl %ebp": 1,
                "decl %ebp;addb %bl, (%edi);std;decl %ebp;addb %al, (%eax)": 1,
                "incl (%esi);decl %esi;addb %dl, (%edi);addb %bh, %bh;pushl (%esi)": 1,
                "addb %al, (%edx);subb %cl, (%esi);movb $, %dh;decl %esi;addb %al, %ah": 1,
                "addb %al, (%eax);addb %al, (%eax);xlatb;xorl %ecx, (%esi);inl $, %eax": 1,
                "decl %eax;xorl %ecx, (%esi);int;xorl %ecx, (%esi);decl %esi": 1,
                "addb %al, (%eax);into;cmpl %ecx, (%esi);fistpll (%ecx);decl %esi": 1,
                "into;cmpl %ecx, (%esi);fistpll (%ecx);decl %esi;addb %bh, %bh": 1,
                "decl %esi;addb %bh, %bh;incl (%edx);decl %esi;addb %dl, (%eax)": 1,
                "decl %esi;addb %dh, ;addb %al, (%eax);addb %bh, %bh;jmpl *-(%edi)": 1,
                "addb %bh, %bh;jmpl *-(%edi);decw %si;addb %al, (%eax);addb %al, (%eax)": 1,
                "decl %edx;popl %esp;addb %bh, %ah;decl %edx;popl %esp": 1,
                "addb %al, (%eax);addb %bh, %bh;calll *%edx;jno  <FsRtlLegalAnsiCharacterArray+>;addb %ah, %al": 1,
                "outb %al, %dx;movb (%esi), %cl;addb %al, (%eax);addb %al, (%eax);movl $, %esp": 1,
                "incl %ebx;movl %ecx, (%esi);decl %esi;movl %ecx, (%esi);addb %al, (%eax)": 1,
                "addb %al, (%eax);daa;pushl %edi;addb %ch, (%ebx);pushl %edi": 1,
                "addb %bh, %bh;decl %esp;movsl (%esi), %es:(%edi);decl %esi;addb %bl, %dl": 1,
                "decl %esi;addb %bl, %dl;movsl (%esi), %es:(%edi);decl %esi;addb %bh, %bh": 1,
                "decl %esi;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;lcalll *": 1,
                "addb %al, (%eax);addb %bh, %bh;lcalll *;testb $, %al;addb %bh, %bh": 1,
                "lodsb (%esi), %al;decl %esi;addb %bh, %ah;lodsb (%esi), %al;decl %esi": 1,
                "pushl %edx;movb $, %cl;addb %al, (%ebx);movb $, %dl;addb %bh, %bh": 1,
                "addb %al, (%ebx);movb $, %dl;addb %bh, %bh;movb $, %cl;addb %bh, %bh": 1,
                "addb %bh, %bh;decl -(%edi);decl %esi;addb %ah, -(%eax);decl %esi": 1,
                "decl -(%edi);decl %esi;addb %ah, -(%eax);decl %esi;addb %bh, %bh": 1,
                "addb %al, (%eax);addb %bh, %bh;cmpl $, %eax;pushl %edi;addb %al, (%eax)": 1,
                "movl $, %ebp;decl %esi;addb %bh, %bh;jmpl *;movl $, %ebp": 1,
                "addb %al, -(%ebp);pushl %edx;addl %eax, %ecx;decl %esi;addb %bh, %bh": 1,
                "decl %esi;addb %bh, %bh;jmpl *-(%eax);fmuls (%esi);decl %esi": 1,
                "decl %esi;addb %bh, -(%ecx);decl %esi;addb %bh, %bh;pushl -(%ebx)": 1,
                "outsl (%esi), %dx;fisttpl (%esi);sbbb $, %bl;addb %bh, %bh;incl (%edx,%ebx,)": 1,
                "xorl %esi, %eax;decl %esi;addb %dh, ;addb %al, (%eax);addb %bh, %bh": 1,
                "addb %bh, %bh;decl %esi;addb %dh, (%ecx,%esi,);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;ljmpl *-(%esi);hlt;decl %esi;addb %bh, %bh": 1,
                "hlt;decl %esi;addb %bh, %bh;clc;decl %esi": 1,
                "decl %esi;addb %al, -(%edx);decl %esi;addb %bh, %bh;ljmpl *(%esi)": 1,
                "decl %esi;addb %bh, (%edi);cli;decl %esi;addb %al, (%eax)": 1,
                "decl %edi;addb %bh, %bh;pushl %es;decl %edi;addb %cl, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);insl %dx, %es:(%edi);sbbb %cl, (%edi);jno  <FsRtlLegalAnsiCharacterArray+>": 1,
                "addb %ch, %dh;das;decl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *(%edx,%edi);addb %dh, (%edx)": 1,
                "addb %bh, %bh;jmpl *%ecx;cmpl (%edi), %ecx;outl %eax, %dx;cmpl (%edi), %ecx": 1,
                "decl %edi;addb %bh, (%eax);decl %edi;addb %bh, %bh;addb %cl, (%edx)": 1,
                "decl %edi;addb %bl, (%eax);decl %edi;addb %bh, %bh;decl (%edx,%ecx,)": 1,
                "addb %bh, %bh;lcalll *-(%esi);popl %esi;decl %edi;addb %bh, %bh": 1,
                "popl %esi;decl %edi;addb %bh, %bh;decl -(%ebp);popl %ebp": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;decl -(%eax);orb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);enter $, $;salc;ldsl (%edi), %ecx": 1,
                "pushl %es;addl $, %eax;addl (%ebx), %eax;addl (%edx), %eax;addb (%edx), %al": 2,
                "addb (%ecx), %al;addl %eax, (%eax);orb %al, (%eax);addl %eax, (%eax);addb (%eax), %al": 1,
                "pushl %es;addl $, %eax;addb $, %al;pushl %es;addl $, %eax": 3,
                "addl $, %eax;addb $, %al;addl $, %eax;addl (%ebx), %eax;addb , %al": 3,
                "addl (%edx), %eax;addb (%ecx), %al;pushl %es;addl $, %eax;addb $, %al": 1,
                "nopl (%edi);jg - <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %bh, %bh;clc": 1,
                "addb %al, (%eax);incl (%ecx);addb %al, (%eax);incl (%ebx);addb %al, (%eax)": 2,
                "addb %al, (%eax);incl (%ebx);addb %al, (%eax);incl (%edi);addb %al, (%eax)": 2,
                "decl (%edi);addb %al, (%eax);lcalll *(%edi);addb %al, (%eax);addb %al, (%eax)": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;decl (%ecx,%ebx,);pushl %eax": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %al, (%eax);addb (%eax), %al;addb %al, (%eax)": 1,
                "addb %bl, ;addb %al, (%eax);addb %al, -;addb %al, (%eax);addb %al, ": 1,
                "addb %al, ;addb %al, (%eax);addb %bh, (%edx);addb %al, (%eax);pushl %es": 1,
                "addb %dl, (%edi);addb %al, (%eax);pushl %edi;addb %al, (%eax);addb %bl, (%eax,%eax)": 1,
                "addb %al, (%eax);adcl $, %eax;popl %es;addb %al, (%eax);movw %es, (%eax)": 1,
                "nop;addb %al, (%eax);rclb $, -(%ecx);addb %al, %al;xchgl %ebx, %eax": 1,
                "addb %al, %al;xchgl %ebx, %eax;addb %al, (%eax);rclb $, (%eax,%eax);addb %dl, (%esi)": 1,
                "addl %eax, (%eax);addb %ch, (%ebp);addb %al, (%eax);addb %dl, ;addl $, %eax": 1,
                "addl $, %eax;addb %al, (%eax);outl %eax, $;outl %eax, $;outb %al, $": 1,
                "pushl %edi;addb %al, (%ebx);addb %ah, (%eax);addb $-, %al;addl -(%ebp,%eax), %edx": 1,
                "sti;addl (%ebp), %ebp;outsb (%esi), %dx;addl $, %eax;pushl %edi": 1,
                "pushl %es;cld;pushl %es;std;pushl %es": 1,
                "addb %al, (%edi);addl %eax, (%edi);imull $, (%ebx,%eax,), %eax;lesl (%edi,%ebx,), %eax;addl $, %eax": 1,
                "cmpl (%eax), %eax;cmpl (%eax), %eax;popl %ss;popl %es;pushl $": 1,
                "addb (%eax), %al;shrb $, (%ebx);addb %al, %al;aad $;xchgl %edx, %eax": 1,
                "addb $-, %al;addb $-, %al;addb $-, %al;addb $-, %al;addb %dl, %ah": 1,
                "addb %dl, %ah;addb $, %al;addl $, %eax;andb (%esi,%esi,), %al;addb %bh, (%edi)": 1,
                "andb (%esi,%esi,), %al;addb %bh, (%edi);andb %al, (%ecx);jbe  <FsRtlLegalAnsiCharacterArray+>;movw (%ebx), %ds": 1,
                "jbe  <FsRtlLegalAnsiCharacterArray+>;movw (%ebx), %ds;roll (%edi);movb $, %cl;adcl $, %eax": 1,
                "pushl $;adcb %ch, (%ebx);sbbb (%eax), %ah;sbbl (%eax), %esp;sbbb $, %al": 1,
                "adcb %ch, (%ebx);sbbb (%eax), %ah;sbbl (%eax), %esp;sbbb $, %al;addl %eax, (%eax)": 1,
                "sbbb (%eax), %ah;sbbl (%eax), %esp;sbbb $, %al;addl %eax, (%eax);calll *(%eax)": 1,
                "orl %eax, -(%eax);cmpl (%ebx), %eax;orl %eax, -(%eax);cmpl $, %eax;addl (%ecx), %ecx": 1,
                "addb $, %al;addb %ch, (%edi);addb %al, (%eax);je  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax)": 1,
                "addl -(%eax), %eax;orl %eax, (%ebx);addl -(%eax), %eax;orl (%ebx), %eax;addl (%eax), %eax": 1,
                "orl %eax, (%eax);inb %dx, %al;addb $-, %al;addb $-, %al;addb $-, %al": 1,
                "pushl %es;enter $-, $;lretl;pushl %es;int": 1,
                "salc;pushl %es;xlatb;pushl %es;fadds (%esi)": 1,
                "testb $-, (%esi);pushl %es;andl (%edi), %eax;andb $, %al;andl $, %eax": 1,
                "arpl %bx, (%ebx);sbbl %fs:(%ebp), %esp;sbbw (%edi), %sp;pushl $;sbbl (%esi), %ecx": 1,
                "jo  <FsRtlLegalAnsiCharacterArray+>;jno  <FsRtlLegalAnsiCharacterArray+>;jnp  <FsRtlLegalAnsiCharacterArray+>;jle  <FsRtlLegalAnsiCharacterArray+>;sbbb $-, (%ebx)": 1,
                "sbbl -(%edx), %edx;adcl -(%eax), %esi;adcl -(%ebx), %esi;adcl -(%esi), %esi;adcl -(%ecx), %edi": 1,
                "adcl -(%ecx), %edi;adcl (%ebx,%edx), %edi;rclb $, (%ebx);adcl %edx, %eax;adcl %ebx, %eax": 1,
                "movb $, %ah;movb $, %ch;movb $, %dh;movb $, %bh;movl $, %ecx": 1,
                "addb %dh, (%edi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%ecx);addb %al, (%ecx);addb %al, (%ebx);addl %eax, (%eax);addb %al, (%ecx)": 1,
                "addl %eax, (%eax);addb (%eax), %al;addb %al, (%eax);addb %al, (%ecx);addb %al, (%esi)": 1,
                "addb %al, (%eax);addb %al, (%ecx);addb %cl, (%eax,%eax);addb %al, (%eax);addb %al, (%ecx)": 1,
                "addb %al, (%ecx);addb %cl, (%eax,%eax);addb %al, (%eax);addb %al, (%ecx);addb %dh, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%ecx);addb %dl, (%esi);addb (%eax), %al;addb %al, (%ecx)": 1,
                "orl (%eax), %eax;addb %al, (%eax);orl $, %eax;addb %al, (%ecx);addb %bl, (%edx)": 1,
                "addl (%ecx), %ecx;addb $, (%ebx);addl %eax, (%eax);andb %al, (%ebx);orl %eax, (%eax)": 1,
                "addb $, (%edx);addl %eax, (%eax);incl %edi;addl (%ecx), %ecx;addb $, (%ecx)": 1,
                "addl %eax, (%eax);adcl (%eax), %eax;addl %eax, (%eax);addb %al, %al;orl (%eax), %eax": 1,
                "addb %al, (%eax);rolb $, (%ecx);addl %eax, (%eax);xorb (%eax), %al;addb %al, %al": 1,
                "rolb $, (%eax,%eax);addb %bl, %cl;addb %al, (%eax);rolb $, (%edx);addl %eax, (%eax)": 1,
                "popl %es;addb %al, (%ecx);addb %bh, (%edx);addb %al, %al;orl $, %eax": 1,
                "addb (%eax), %al;rolb $, (%ecx);addl %eax, (%eax);andb %al, (%edx);addb %al, %al": 1,
                "pushl %ebx;addb (%eax), %al;rolb $, (%ecx);addl %eax, (%eax);pushl %edi": 1,
                "rolb $, (%ecx);addl %eax, (%eax);pushl $;addb %al, %al;addl %eax, (%eax)": 1,
                "addl %eax, (%eax);ldsl (%edx), %eax;addb %al, %al;addl (%eax), %eax;addl %eax, (%eax)": 1,
                "addb (%eax), %al;rolb $, -;addb %al, %al;addb (%eax), %al;addl %eax, (%eax)": 1,
                "rolb $, -;addb %al, %al;addb (%eax), %al;addl %eax, (%eax);aam $": 1,
                "sbbl $, %eax;addb %al, (%edx);rolb $, (%ecx);addl %eax, (%eax);andl %eax, (%eax)": 1,
                "orb %al, %al;addl (%eax), %eax;addl %eax, (%eax);pushl %es;addb %cl, (%edx)": 1,
                "addb %al, (%ecx);addb %dl, (%ebx);rclb $, (%eax);addl %eax, (%eax);adcb (%eax), %al": 1,
                "rclb $, (%eax);addl %eax, (%eax);adcb (%eax), %al;adcl %eax, %eax;addl $, %eax": 1,
                "addb %cl, (%esi);addb %dl, ;addb %al, (%ecx);addb %bl, (%eax);addb %cl, (%eax)": 1,
                "orl %ecx, (%edx);orb (%edx), %cl;orb (%edx), %cl;orb (%edx), %cl;orb (%edx), %cl": 2,
                "orb (%ebx), %cl;orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx": 2,
                "orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx;orl (%ebx), %ecx": 22,
                "orl (%ebx), %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bl, (%edx);js  <FsRtlLegalAnsiCharacterArray+>;xchgl %edi, %eax;addb %dh, -(%ebp);addb %dl, (%ecx)": 1,
                "jmp  <FsRtlLegalAnsiCharacterArray+>;xlatb;jmpl *(%eax);incl %ebp;addb %ah, (%esp,%ebp,)": 1,
                "outsb (%esi), %dx;incl %ebp;addb %ah, (%ebx);outsb (%esi), %dx;incl %ebp": 1,
                "addb %al, (%esp,%ecx,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);leave": 1,
                "pushl ;retl;pushl %eax;addb %bh, %bh;incl (%edi)": 1,
                "addb %bh, %bh;incl (%edi);lesl (%eax), %edx;adcl $, %eax;pushl -(%edx)": 1,
                "lesl (%eax), %edx;adcl $, %eax;pushl -(%edx);sbbb $-, %al;pushl %eax": 1,
                "subl $, %eax;leave;pushl %eax;addb %bh, %bh;leave": 1,
                "rclb %cl, (%eax);subb $-, %al;pushl %eax;addb %bh, %bh;decl %ecx": 1,
                "addb %bh, %bh;decl %ecx;rcll (%eax);fcmovbe %st(), %st();pushl %eax": 1,
                "rcll (%eax);fcmovbe %st(), %st();pushl %eax;addb %bh, %bh;jmpl *-(%edx)": 1,
                "pushl %eax;addb %al, -(%edi);decl -(%edi);pushl %eax;addb %ah, -(%eax)": 1,
                "addb %bh, %bh;decl ;xlatb;pushl %eax;addb %bh, %bh": 1,
                "jmpl *-(%eax);ficoms (%eax);jp - <FsRtlLegalAnsiCharacterArray+>;pushl %eax;addb %cl, -(%ebx)": 1,
                "pushl %eax;addb %cl, -(%ebx);calll *-(%ebx);pushl %eax;addb %ah, (%edi,%ebx,)": 1,
                "addb %bl, %al;sti;pushl %eax;addb %bh, %bh;decl -(%ebp)": 1,
                "sti;pushl %eax;addb %bh, %bh;decl -(%ebp);andl %edx, (%ecx)": 1,
                "andl %edx, (%ecx);addb %al, (%eax);addb %al, (%eax);pushl %esp;subl (%ecx), %edx": 1,
                "addb %bh, %bh;lcalll *(%ecx);pushl %ecx;addb %ah, (%edi);pushl %ecx": 1,
                "addb %al, (%eax);addb %bh, %bh;decl (%ebx);cmpl %edx, (%ecx);sbbl %edi, (%ecx)": 1,
                "decl (%ebx);cmpl %edx, (%ecx);sbbl %edi, (%ecx);pushl %ecx;addb %bh, %bh": 1,
                "sbbl %edi, (%ecx);pushl %ecx;addb %bh, %bh;cmpb (%ecx), %dl;orl %edi, (%ebx)": 1,
                "decl %eax;pushl %ecx;addb %bh, %bh;incl (%ecx);decl %ecx": 1,
                "addb %bh, %bh;pushl (%ecx);pushl %ecx;addb %bh, (%edi);pushl %ecx": 1,
                "pushl %ecx;addb %bh, (%edi);pushl %ecx;addb %bh, %bh;decl %edx": 1,
                "addb %bh, %bh;decl %edx;decl %esp;pushl %ecx;addb %bl, %al": 1,
                "decl %ebp;pushl %ecx;addb %bh, %bh;pushl %ecx;addb %al, -(%edi)": 1,
                "pushl %ecx;addb %bh, %bh;decl (%eax,%edx,);pushl %ecx;addb %bl, (%edx)": 1,
                "addb %bh, %bh;pushl %esi;pushl %ecx;addb %bh, %bh;outsb (%esi), %dx": 1,
                "pushl %ecx;addb %bh, %bh;ljmpl *(%edi,%ebp,);addb %bh, (%edx);pushl %ecx": 1,
                "addb %dl, (%edi);je  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "decl (%ebx,%edx,);pushl %ecx;addb %bl, (%edx);xchgl %ebx, %eax;pushl %ecx": 1,
                "jmpl *%esi;jge  <FsRtlLegalAnsiCharacterArray+>;addb %dh, %ah;jge  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax)": 1,
                "jge  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;lcalll *-(%ebp)": 1,
                "addb %al, (%eax);enter $, $;int;testl $, %eax;addb %al, (%eax)": 1,
                "pushl %ecx;addb %bh, %bh;pushl -(%edi);scasb %es:(%edi), %al;pushl %ecx": 1,
                "calll *-(%edi);scasl %es:(%edi), %eax;pushl %ecx;addb %bh, %bh;decl %ebp": 1,
                "pushl -(%edx);movb $, %ch;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "addb %cl, (%edx);movb $, %bh;addb %bh, %bh;ljmpl *-(%ebp);movb $, %bh": 1,
                "pushl %ecx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *-(%edx)": 1,
                "ljmpl *-(%ecx);addl $, (%ebp);xchgl %esp, %eax;xchgl %eax, (%ebp);movb %al, ": 1,
                "pushl %ebp;iretl;pushl %ecx;addb %al, (%ebx);rclb (%ecx)": 1,
                "addb %al, (%eax);subb (%edx), %ch;subb (%edx), %ch;andb %al, (%edx);andb %cl, %fs:(%ecx)": 1,
                "andb %cl, %fs:(%ecx);pushl %ecx;decl %esp;andb %ch, ;andb %ah, %fs:": 2,
                "outsl (%esi), %dx;je  <FsRtlLegalAnsiCharacterArray+>;andl $, %eax;subb (%edx), %ch;addb %ch, (%edx)": 1,
                "addb %al, (%eax);subb (%eax), %ah;subb (%edx), %cl;addb %al, (%eax);addb %al, (%eax)": 15,
                "subb (%edx), %cl;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 16,
                "addb %al, (%eax);subb (%eax), %ah;subb (%eax), %ah;subb (%eax), %ah;subb (%eax), %ah": 24,
                "subb (%eax), %ah;subb (%eax), %ah;decl %eax;incl %ecx;decl %esp": 23,
                "andb %ch, (%edx);andb %ch, (%edx);andb %ch, (%edx);orb (%eax), %al;addb %al, (%eax)": 33,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);imull $, (%esi), %ebp;andb %ch, (%ebp)": 1,
                "jns  <FsRtlLegalAnsiCharacterArray+>;arpl %bp, (%edi);insl %dx, %es:(%edi);outsl (%esi), %dx;outsb (%esi), %dx": 1,
                "pushl $;jo  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;bound (%ebp), %esi;jb  <FsRtlLegalAnsiCharacterArray+>": 1,
                "je  <FsRtlLegalAnsiCharacterArray+>;jae  <FsRtlLegalAnsiCharacterArray+>;insl %dx, %es:(%edi);popal;jo  <FsRtlLegalAnsiCharacterArray+>": 1,
                "insl %dx, %es:(%edi);popal;jo  <FsRtlLegalAnsiCharacterArray+>;cmpb %fs:(%eax), %ah;andl $, %eax": 1,
                "popal;js  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%edx,%esi,);jbe  <FsRtlLegalAnsiCharacterArray+>": 1,
                "popal;je  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;insb %dx, %es:(%edi);imull $, (%ebx), %esi": 1,
                "je  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;insb %dx, %es:(%edi);imull $, (%ebx), %esi;andb %ah, (%ecx)": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);andl %esp, %fs:(%eax);decl %ebp;incl %esp": 1,
                "arpl %bp, (%ebx);andl %esp, %fs:(%eax);decl %ebp;incl %esp;decl %esp": 1,
                "addb %al, (%eax);addb %bh, %bh;pushl -(%esi);incl %ebp;addb %al, (%ecx,%ebp,)": 1,
                "subb %ah, %bh;pushl %ecx;addb %bh, (%ebx);cld;pushl %ecx": 1,
                "adcl (%edx), %edx;clc;adcl (%edx), %edx;movl $, %ecx;adcl (%edx), %edx": 1,
                "addb %al, (%eax);clc;addb $, %al;jecxz - <FsRtlLegalAnsiCharacterArray+>;decl %edx": 1,
                "jg  <FsRtlLegalAnsiCharacterArray+>;movl %edi, %esi;outl %eax, %dx;incl %eax;incl %esp": 1,
                "movl %edi, %esi;outl %eax, %dx;incl %eax;incl %esp;into": 1,
                "outl %eax, %dx;incl %eax;incl %esp;into;imull $-, (%esp,%ebx,), %ebx": 1,
                "xchgl %edx, %eax;movl , %eax;aad $-;loopne ;xorb $-, %al": 1,
                "movl $, %eax;jmp - <FsRtlLegalAnsiCharacterArray+>;addb $, %al;decl %eax;testb %bl, (%ecx)": 1,
                "addb %al, -(%esi);xorl $, %eax;rcll (%ecx);movl $, %edi;pushl %es": 1,
                "fisubrs (%ebx);addb %ch, %bh;imull $, (%edx), %edx;addb %al, (%eax);addb %bh, %bh": 1,
                "addb %bh, %bh;pushl %ebx;movb $, %dl;addb %dh, %bh;movb $, %dl": 1,
                "pushl %edx;addb %dh, -(%eax);pushl %edx;addb %bh, %bh;incl (%edx)": 1,
                "pushl %edx;addb %bh, -(%edx);pushl %edx;addb %bh, %bh;incl -(%esi)": 1,
                "lcalll *-(%eax);pushl %edx;addb %bl, -(%esi);pushl %edx;addb %bh, %bh": 1,
                "addb %al, (%eax);addb %al, (%ebx);outb %al, $;addb %cl, (%ecx);outb %al, $": 1,
                "addb %ah, -(%ebx);pushl %edx;addb %al, (%eax);addb %al, (%eax);addb %al, -(%edi)": 1,
                "rep  pushl %edx;addb %al, (%eax);addb %al, (%eax);addb %dl, (%esi,%esi,);pushl %edx": 1,
                "addb %al, (%eax);addb %cl, (%eax);addb %al, (%eax);addb %bh, %bh;incl (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%edi);addb %al, (%eax);addb %bh, %bh;addb %al, (%eax)": 1,
                "addb %bh, %bh;addb %al, (%eax);addb %al, (%eax);lodsl (%esi), %eax;addb (%ebx), %dl": 1,
                "addb %al, (%eax);decl %ecx;xlatb;incl %ebp;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;incl (%eax);addb %al, (%eax);addb %ah, (%ecx)": 1,
                "sbbl %edx, (%ebx);addb %al, (%eax);addb %al, (%eax);movl $, %eax;adcl %edx, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%eax);movl $, %eax;adcl %edx, (%ebx);addb %al, (%eax)": 1,
                "andl (%ebx), %edx;addb %al, (%eax);addb %al, (%eax);xchgl %ecx, %eax;daa": 1,
                "addb %dl, (%edx);pushl %ebx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "decl %edx;pushl %ebx;addb %bl, (%eax);pushl %ebx;addb %bh, %bh": 1,
                "addb %ah, (%edi);pushl %edi;addb %bh, %bh;jmpl *-(%edx);popal": 1,
                "addb %al, -;calll *-(%esi);incl %ecx;pushl %ebx;addb %bh, %bh": 1,
                "pushl %ebx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;decl -(%ebp)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;decl -(%ebp);decl %ecx": 1,
                "decl %ecx;pushl %ebx;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "addb %bh, %bh;decl %edi;pushl %ebx;addb %al, (%eax);pushl %eax": 1,
                "pushl %ebx;addb %bh, %bh;lcalll *(%esi);pushl %ebx;addb %ch, (%edi)": 1,
                "pushl %ebx;addb %bh, %bh;pushl %ebx;pushl %ebx;addb %cl, (%esp,%edx,)": 1,
                "pushal;pushl %ebx;addb %bh, %bh;decl -(%edi);popal": 1,
                "incl (%edi);pushl %ebx;addb %cl, (%ebp);pushl %ebx;addb %bh, %bh": 1,
                "addb %bh, -(%eax);incl %ebp;addb %bh, %bh;incl (%edx);pushl %ebx": 1,
                "addb %bh, %bh;incl (%edx);pushl %ebx;addb %dl, (%edx);pushl %ebx": 1,
                "incl (%edx);pushl %ebx;addb %dl, (%edx);pushl %ebx;addb %bh, %bh": 1,
                "pushl %ebx;addb %al, (%eax);addb %al, (%eax);addb %bl, (%eax);pushl %ebx": 1,
                "addl %ebp, (%ecx);addb %al, (%edi);imull $, (%ebx), %edx;decl %esi;pushl $": 1,
                "addb %ch, ;imull $, (%ebx), %edx;addb %al, (%eax);addb %cl, (%edi);imull $, (%ebx), %edx": 1,
                "addb %bh, %bh;pushl (%edx);pushl %ebx;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;lcalll *(%eax,%esi,);pushl %ebx;addb %bh, %bh;calll *%esp": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %al, (%ebp);incl %ebx;addb %dl, (%ebp)": 1,
                "jg  <FsRtlLegalAnsiCharacterArray+>;xorl $, %eax;fimull (%edi);leave;incl %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%esi);addb %al, (%eax);pushl %es": 1,
                "pushl %es;addb %al, (%ecx);addb %al, (%eax);adcb %al, (%eax);addl (%esi), %eax": 1,
                "addb %al, (%eax);addb %cl, (%eax);pushal;pushl $;addb %al, (%eax)": 1,
                "orb %al, (%eax);addb %al, (%edi);addb %al, (%eax);orb %cl, (%eax);addb %al, (%eax)": 1,
                "orb %cl, (%eax);addb %al, (%eax);orb %al, (%eax);orb %al, (%eax);popl %es": 1,
                "popl %es;orb %al, (%eax);addb %al, (%eax);subb %al, (%eax);outsb (%esi), %dx": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax)": 37,
                "adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);testb %al, (%eax);testb %al, (%eax)": 1,
                "addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %ah, (%eax)": 1,
                "adcb %al, (%eax);addl $, (%ecx);addl $, (%ecx);addl %eax, (%ecx);addl %eax, (%ecx)": 1,
                "adcb %al, (%eax);addb $-, (%ecx);addl %eax, -(%edx);addl %eax, (%edx);addl %eax, (%edx)": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb $, %al;adcb %al, (%eax);adcb %al, (%eax)": 1,
                "addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addl %eax, (%ecx)": 1,
                "addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addl %eax, (%ecx);popl %edi": 1,
                "popal;je  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;addb %bl, (%edi);outsl (%esi), %dx": 1,
                "bound (%bx,%si), %eax;addb %al, (%eax);popl %edi;jns  <FsRtlLegalAnsiCharacterArray+>;addb %bl, (%edi)": 1,
                "popl %edi;jns  <FsRtlLegalAnsiCharacterArray+>;addb %ah, (%esi);js  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);js  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %ch, (%ebp);addb %al, %fs:(%eax)": 1,
                "addb %al, (%eax);addb %ah, (%esi);outsl (%esi), %dx;outsl (%esi), %dx;jb  <FsRtlLegalAnsiCharacterArray+>": 1,
                "arpl %sp, (%ebp);insb %dx, %es:(%edi);addb %al, (%eax);addb %al, (%eax);je  <FsRtlLegalAnsiCharacterArray+>": 1,
                "addb %ch, (%ecx);je  <FsRtlLegalAnsiCharacterArray+>;imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "jae  <FsRtlLegalAnsiCharacterArray+>;je  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;jns  <FsRtlLegalAnsiCharacterArray+>;popl %esp": 1,
                "outsl (%esi), %dx;addb %ah, (%esi);je  <FsRtlLegalAnsiCharacterArray+>;ja  <FsRtlLegalAnsiCharacterArray+>;popal": 1,
                "jb  <FsRtlLegalAnsiCharacterArray+>;outsl (%esi), %dx;addb %dh, (%ebx);outsl (%esi), %dx;addb %ah, (%esi)": 2,
                "outsl (%esi), %dx;addb %dh, (%ebx);outsl (%esi), %dx;addb %ah, (%esi);je  <FsRtlLegalAnsiCharacterArray+>": 2,
                "addb %dh, (%ebx);outsl (%esi), %dx;addb %ah, (%esi);je  <FsRtlLegalAnsiCharacterArray+>;popl %esp": 1,
                "addb %dl, (%eax,%eax);addb %al, (%ebx);jne  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>": 1,
                "addb %dh, (%eax,%eax);addb %ch, (%eax,%eax);addb %ah, (%edi);jae  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax)": 1,
                "addb %dh, (%eax);jns  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;imull $, (%eax), %eax;je  <FsRtlLegalAnsiCharacterArray+>": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);pushl %eax;addb %dh, (%edx);outsl (%esi), %dx": 4,
                "incl %esp;addb %cl, (%edi);pushl %ebx;addb %al, (%eax);addb %dl, (%edi)": 1,
                "addb %al, (%eax);pushl %edi;addb %cl, (%ecx);decl %esi;addb %dh, (%ecx)": 1,
                "pushl %edi;addb %cl, (%ecx);decl %esi;addb %dh, (%ecx);addb %dh, (%esi)": 1,
                "addb %bl, (%eax);popl %edi;addb %cl, (%ebx);incl %ebp;addb %bl, (%ecx)": 1,
                "incl %esp;addb %al, (%ebp);popl %eax;addb %bl, (%edi);pushl %esp": 1,
                "addb %al, (%ecx);pushl %esp;addb %al, (%ebx);decl %eax;addb %bl, (%edi)": 3,
                "addb %al, (%ebp);popl %edi;addb %cl, (%ecx);incl %esp;addb %ch, (%eax)": 2,
                "addb %cl, (%ecx);incl %esp;addb %ch, (%ecx);addb %al, (%eax);addb %cl, (%ebp)": 1,
                "incl %edi;addb %al, (%ebp);popl %edi;addb %cl, (%ecx);incl %esp": 1,
                "addb %al, (%eax,%eax);addb %dl, (%eax,%eax);addb %bl, (%edi);incl %edx;addb %cl, (%ecx)": 1,
                "addb %al, (%ecx);incl %edi;addb %dl, (%ebx);popl %edi;addb %cl, (%esi)": 1,
                "addb %dl, (%eax,%eax);addb %bl, (%edi);incl %edx;addb %cl, (%ecx);decl %esi": 1,
                "decl %esp;addb %al, (%ebp);popl %edi;addb %dl, (%esi);incl %ebp": 1,
                "decl %ecx;addb %cl, (%esi);popl %edi;addb %dl, (%eax);pushl %edx": 1,
                "incl %esp;addb %dl, (%ebp);incl %ebx;addb %dl, (%eax,%eax);addb %dl, (%esi)": 2,
                "pushl %edx;addb %al, (%eax);addb %al, (%eax);addb %al, (%esi);decl %esp": 1,
                "addb %al, (%ebp);decl %esp;addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebp)": 1,
                "decl %edi;addb %al, (%eax,%eax);addb %cl, (%ecx);decl %ebp;addb %al, (%ebp)": 1,
                "decl %ecx;addb %cl, (%edi);decl %esi;addb %al, (%eax);addb %al, (%edx)": 1,
                "decl %ecx;addb %cl, (%eax,%eax);addb %bl, (%edi);pushl %esi;addb %al, (%ebp)": 2,
                "addb %al, (%eax);addb %dl, (%ebp);pushl %ebx;addb %al, (%ebp);popl %edi": 1,
                "addb %bl, (%edi);decl %esp;addb %cl, (%edi);incl %edi;addb %cl, (%ecx)": 1,
                "incl %ebp;addb %dl, (%edx);incl %ecx;addb %cl, (%eax,%eax);addb %cl, (%ecx)": 1,
                "decl %esi;addb %al, (%ebx);decl %esp;addb %dl, (%ebp);incl %esp": 1,
                "decl %ebp;addb %bl, (%edi);pushl %esp;addb %al, (%ecx);incl %edi": 2,
                "addb %al, (%ecx);incl %edi;addb %cl, (%ecx);incl %esp;addb %al, (%eax)": 3,
                "addb %cl, (%eax,%eax);addb %al, (%ebp);pushl %esp;addb %bl, (%ecx);pushl %eax": 1,
                "addb %cl, (%eax);pushl %esp;addb %cl, (%ebp);decl %esp;addb %cl, (%eax)": 1,
                "pushl %ebx;addb %al, (%edx);pushl %ebp;addb %cl, (%ecx);decl %esp": 1,
                "addb %dl, (%edx);incl %ebp;addb %dl, (%esi);decl %edi;addb %dl, (%ebx)": 1,
                "popl %edi;addb %cl, (%eax,%eax);addb %cl, (%esi);incl %edi;addb %dl, (%ebp)": 1,
                "incl %esp;addb %al, (%ecx);pushl %esp;addb %al, (%ebp);addb %al, (%eax)": 1,
                "incl %ebp;addb %al, (%ebx);decl %ebx;addb %dl, (%ebx);pushl %ebp": 1,
                "pushl %edx;addb %al, (%esi);decl %ecx;addb %cl, (%eax,%eax);addb %al, (%eax,%eax)": 1,
                "incl %esp;addb %al, (%ecx);pushl %esp;addb %al, (%ecx);popl %edi": 1,
                "addb %dl, (%edx);decl %ecx;addb %cl, (%esi);incl %edi;addb %al, (%eax)": 1,
                "addb %al, (%ebp);decl %esp;addb %dl, (%eax);popl %edi;addb %al, (%ebx)": 1,
                "addb %cl, (%ebx);popl %edi;addb %dl, (%eax,%eax);addb %bl, (%eax);pushl %esp": 1,
                "incl %edx;addb %cl, (%eax,%eax);addb %cl, (%ebp);popl %edi;addb %al, (%eax,%eax)": 1,
                "addb %al, (%ecx);decl %ebp;addb %al, (%ebp);addb %al, (%eax);decl %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%ecx);incl %ebx;addb %dl, (%eax,%eax)": 1,
                "addb %al, (%ebp);addb %al, (%eax);addb %al, (%eax);incl %esp;addb %cl, (%eax,%eax)": 1,
                "incl %ebp;addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebp);pushl %ebx": 1,
                "incl %ebx;addb %dl, (%eax,%eax);addb %cl, (%edi);decl %esi;addb %al, (%eax)": 1,
                "addb %cl, (%edi);decl %esi;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax,%eax)": 1,
                "pushl %edx;addb %al, (%eax);addb %al, (%esi);decl %esp;addb %al, (%ecx)": 1,
                "incl %edi;addb %bl, (%edi);pushl %edx;addb %al, (%ebp);incl %esi": 1,
                "popl %edi;addb %dl, (%edx);incl %ebp;addb %al, (%esi);addb %al, (%eax)": 2,
                "addb %cl, (%ecx);decl %esi;addb %al, (%edi);popl %edi;addb %al, (%esi)": 1,
                "addb %al, (%edi);popl %edi;addb %al, (%esi);decl %ecx;addb %cl, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %al, (%ebp);popl %eax;addb %al, (%ebp);addb %al, (%eax)": 1,
                "subl $, %eax;addb %dh, (%edx);addb %ch, (%eax);js  <FsRtlLegalAnsiCharacterArray+>;andl $, %eax": 2,
                "addb %ch, (%eax);js  <FsRtlLegalAnsiCharacterArray+>;jge  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);pushl %esi": 1,
                "addb %al, (%esi);decl %edi;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl %ebx;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *(%eax);salc": 1,
                "pushl %ebx;addb %bl, (%esi);salc;pushl %ebx;addb %al, (%eax)": 1,
                "addb %dh, (%ebx);pushl $;addb %ch, (%esi);je  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>": 1,
                "addb %ch, (%eax,%eax);addb %al, (%eax);addb %cl, (%ebx);addb %dh, %gs:(%edx);outsb (%esi), %dx": 1,
                "addb %ch, (%edi);outsb (%esi), %dx;addb %al, (%eax);addb %al, (%ebp);insl %dx, %es:(%edi)": 1,
                "outsb (%esi), %dx;addb %al, (%eax);addb %al, (%ebp);insl %dx, %es:(%edi);addb %ah, (%edx)": 1,
                "pushl %esp;addb %dh, (%edx);popal;addb %ah, (%ebx);addb %al, %gs:(%ecx)": 1,
                "addb %ch, (%edi);arpl %ax, (%eax);imull $, (%eax), %eax;addb %dl, (%edi);decl %ebp": 1,
                "pushl %edx;addb %dl, (%eax,%eax);addb %al, (%eax);addb %dl, (%ebx);pushl %esp": 1,
                "addb %al, (%eax);addb %al, (%eax);decl %ecx;addb %cl, (%eax);pushl %esi": 5,
                "pushl %esp;addb %dl, (%edx);incl %ebp;addb %al, (%ecx);decl %ebp": 1,
                "incl %esi;addb %al, (%ebp);pushl %esp;addb %al, (%ebx);decl %eax": 1,
                "addb %dl, (%eax);pushl %eax;addb %bl, (%ecx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %cl, (%ecx);incl %esp;addb %al, (%ebp);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%eax,%eax);addb %dl, (%eax);incl %ebp;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%esi);pushl %esp;addb %dl, (%eax);incl %ebx;addb %cl, (%ecx)": 1,
                "pushl %ebx;addb %bl, (%eax);pushl %ebx;addb %al, (%eax);addb %cl, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %cl, (%edi);decl %ebp": 1,
                "addb %dl, (%eax,%eax);addb %dl, (%edx);incl %esi;addb %bl, (%ecx);addb %al, (%eax)": 1,
                "incl %ebp;addb %dl, (%edx);incl %ebp;addb %cl, (%esi);pushl %ebp": 1,
                "addb %dl, (%eax);decl %ebp;addb %al, (%edi);pushl %edx;addb %al, (%eax)": 1,
                "addb %al, (%ebx);decl %eax;addb %cl, (%edi);pushl %ebx;addb %dl, (%eax,%eax)": 1,
                "pushl %ebx;addb %dl, (%eax,%eax);addb %dl, (%esi);decl %ecx;addb %al, (%eax,%eax)": 1,
                "decl %eax;addb %al, (%ecx);decl %esp;addb %cl, (%ecx);incl %ecx": 1,
                "addb %al, (%eax);incl %ecx;addb %al, (%ebx);pushl %eax;addb %cl, (%ecx)": 1,
                "addb %al, (%ecx);incl %ebx;addb %cl, (%ebx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);decl %ebp;addb %cl, (%edi);pushl %ebp": 2,
                "incl %esp;addb %al, (%ebx);decl %esp;addb %al, (%ecx);pushl %ebx": 1,
                "incl %edx;addb %al, (%eax,%eax);addb %cl, (%ecx);incl %esp;addb %al, (%eax)": 1,
                "addb %cl, (%eax,%eax);addb %dl, (%ebx);pushl %ebx;addb %dl, (%eax);decl %esi": 1,
                "decl %ebp;addb %al, (%eax);addb %al, (%ebx);incl %esp;addb %al, (%ecx)": 1,
                "outsb (%esi), %dx;addb %ah, (%ecx);addb %ah, (%di);jb  <FsRtlLegalAnsiCharacterArray+>;popl %esp": 9,
                "imull $, (%eax), %eax;andb %al, (%eax);incl %esi;addb %ch, (%ecx);insb %dx, %es:(%edi)": 1,
                "insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %dh, (%edx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ch, (%edi);addb %dh, %fs:(%ebp);insb %dx, %es:(%edi);addb %ah, (%ebp);decl %ebp": 1,
                "pushl %ebx;addb %ah, (%ebp);jo  <FsRtlLegalAnsiCharacterArray+>;popal;addb %dh, (%edx)": 2,
                "addb %ah, %gs:(%esi);outsl (%esi), %dx;addb %dh, (%edx);addb %al, %gs:(%ebx);outsl (%esi), %dx": 1,
                "addb %ah, (%edi);addb %cl, %gs:(%ebp);popal;addb %dh, (%ebx);imull $, (%eax), %eax": 1,
                "jns  <FsRtlLegalAnsiCharacterArray+>;pushl %ebx;addb %ch, (%eax);imull $, (%eax), %eax;addb %al, (%eax)": 1,
                "addb %ah, (%di);insl %dx, %es:(%edi);addb %ah, (%ebp);outsb (%esi), %dx;addb %dh, (%eax,%eax)": 4,
                "addb %ch, (%ebx);addb %cl, %gs:(%esi);jne  <FsRtlLegalAnsiCharacterArray+>;insl %dx, %es:(%edi);addb %ah, (%ecx)": 1,
                "je  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;jns  <FsRtlLegalAnsiCharacterArray+>;decl %esp;addb %ah, (%ecx)": 1,
                "jns  <FsRtlLegalAnsiCharacterArray+>;decl %esp;addb %ah, (%ecx);jp  <FsRtlLegalAnsiCharacterArray+>;jns  <FsRtlLegalAnsiCharacterArray+>": 1,
                "popal;addb %ah, (%edx);insb %dx, %es:(%edi);addb %ah, (%ebp);addb %al, %fs:(%eax)": 5,
                "addb %ah, (%di);jb  <FsRtlLegalAnsiCharacterArray+>;popl %esp;addb %al, (%ebx);outsl (%esi), %dx": 1,
                "addb %ch, (%esi);addb %dh, (%di);popal;addb %ah, (%edi);addb %al, %gs:(%eax)": 3,
                "addb %al, (%eax,%eax);addb %ah, (%esi);popal;addb %dh, (%ebp);insb %dx, %es:(%edi)": 8,
                "bound (%eax), %eax;insb %dx, %es:(%edi);addb %ah, (%ebp);addb %al, %fs:(%eax);addb %al, (%edx)": 1,
                "addb %al, (%edx);jb  <FsRtlLegalAnsiCharacterArray+>;popal;addb %ch, (%esi);addb %al, %fs:(%eax)": 1,
                "outsl (%esi), %dx;addb %ah, (%eax,%eax);addb %ah, (%ebx);je  <FsRtlLegalAnsiCharacterArray+>;decl %edi": 1,
                "addb %ah, (%eax,%eax);addb %ah, (%ebx);je  <FsRtlLegalAnsiCharacterArray+>;decl %edi;addb %dh, (%eax)": 1,
                "addb %dh, (%eax);je  <FsRtlLegalAnsiCharacterArray+>;imull $, (%eax), %eax;jae  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax)": 1,
                "imull $, (%eax), %eax;jae  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%eax);decl %eax": 1,
                "addb %ah, %gs:(%ecx);jo  <FsRtlLegalAnsiCharacterArray+>;incl %esp;addb %ah, (%ebp);incl %ebx": 1,
                "insl %dx, %es:(%edi);addb %ch, (%ebp);imull $, (%eax), %eax;outsl (%esi), %dx;addb %dh, (%eax,%eax)": 1,
                "incl %esi;addb %ch, (%eax,%eax);addb %ah, (%edi);jae  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax)": 1,
                "jb  <FsRtlLegalAnsiCharacterArray+>;arpl %ax, (%eax);addb %dl, %gs:(%eax,%eax);addb %ch, (%ebp);addb %ch, %gs:(%edi)": 1,
                "addb %dh, %gs:(%edx);popal;addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx": 1,
                "addb %cl, (%ecx);das;addb %cl, (%edi);andb %al, (%eax);pushl %ebx": 1,
                "pushl %ebx;addb %bh, (%ecx);jae  <FsRtlLegalAnsiCharacterArray+>;je  <FsRtlLegalAnsiCharacterArray+>;addb %ch, %gs:(%ebp)": 3,
                "addb %cl, %gs:(%ecx);addb %ch, %fs:(%eax,%eax);addb %al, (%eax);addb %dl, (%eax);addb %dh, %gs:(%edx)": 1,
                "addb %ah, (%eax,%eax);addb %ch, (%ebp);addb %ch, %gs:(%esi);je  <FsRtlLegalAnsiCharacterArray+>;pushl %esp": 1,
                "arpl %ax, (%eax);jns  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%eax);pushl %eax": 1,
                "jns  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%eax);pushl %eax;addb %ah, (%ebp)": 1,
                "addb %cl, (%ebp);imull $, (%eax), %eax;jb  <FsRtlLegalAnsiCharacterArray+>;addb %dh, %gs:(%ecx);jne  <FsRtlLegalAnsiCharacterArray+>": 1,
                "popal;addb %dh, (%eax);popal;addb %ah, (%ebx);imull $, (%eax), %eax": 1,
                "pushl %eax;addb %ah, (%ebp);jb  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax,%eax);addb %ah, (%ebx)": 3,
                "addb %ch, (%eax,%eax);addb %ah, (%ebp);addb %al, (%eax);pushl %eax;addb %ah, (%ebp)": 2,
                "addb %ah, (%ebp);jb  <FsRtlLegalAnsiCharacterArray+>;addb %cl, (%ecx);outsb (%esi), %dx;addb %ah, (%ebx)": 3,
                "jae  <FsRtlLegalAnsiCharacterArray+>;addb %al, %gs:(%ecx);bound (%eax), %eax;jae  <FsRtlLegalAnsiCharacterArray+>;outsl (%esi), %dx": 2,
                "addb %ah, (%esi);imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);pushl %eax": 2,
                "addb %ah, %gs:(%ecx);jae  <FsRtlLegalAnsiCharacterArray+>;addb %dl, %gs:(%eax);addb %dh, %gs:(%edx);arpl %ax, (%eax)": 2,
                "addb %ch, %gs:(%esi);arpl %ax, (%eax);jns  <FsRtlLegalAnsiCharacterArray+>;incl %esp;addb %ah, (%ebp)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%ecx);addb %ch, %fs:(%eax,%eax);addb %al, (%eax,%eax)": 1,
                "addb %ch, %fs:(%eax,%eax);addb %al, (%eax,%eax);addb %ah, (%esi);popal;addb %dh, (%ebp)": 4,
                "addb %dh, (%eax,%eax);addb %ah, (%ebp);insl %dx, %es:(%edi);addb %ch, (%edi);je  <FsRtlLegalAnsiCharacterArray+>": 2,
                "addb %ah, (%ebp);insl %dx, %es:(%edi);addb %ch, (%edi);je  <FsRtlLegalAnsiCharacterArray+>;addb %dl, %gs:(%eax,%eax)": 1,
                "addb %dh, (%ebp);insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %ah, (%ebp);insl %dx, %es:(%edi)": 1,
                "pushl $;addb %ch, (%ebx);addb %al, (%eax);addb %al, (%eax);decl %ecx": 1,
                "addb %ah, (%ebp);incl %esi;addb %dh, (%edx);outsl (%esi), %dx;addb %ch, (%ebp)": 2,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %ch, (%ebp);xorb %al, (%eax);incl %esp": 1,
                "incl %esp;addb %ah, (%ebp);insb %dx, %es:(%edi);addb %ah, (%ecx);jns  <FsRtlLegalAnsiCharacterArray+>": 1,
                "insb %dx, %es:(%edi);addb %ah, (%ecx);jns  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dh, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;addb %dh, %gs:(%edx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%ebp);imull $, (%eax), %eax;insl %dx, %es:(%edi);addb %dh, (%ebp)": 2,
                "js  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);incl %ecx;addb %ah, (%eax,%eax);addb %ch, (%ecx)": 1,
                "addb %ch, (%eax,%eax);addb %ah, (%ebp);insb %dx, %es:(%edi);addb %ah, (%ecx);jns  <FsRtlLegalAnsiCharacterArray+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);incl %ecx": 1,
                "je  <FsRtlLegalAnsiCharacterArray+>;imull $, (%eax), %eax;popal;addb %ch, (%eax,%eax);addb %dh, (%edx)": 1,
                "decl %ebp;addb %ah, (%ebp);insl %dx, %es:(%edi);addb %ch, (%edi);jb  <FsRtlLegalAnsiCharacterArray+>": 4,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %ah, (%ebx);je  <FsRtlLegalAnsiCharacterArray+>": 3,
                "jb  <FsRtlLegalAnsiCharacterArray+>;jae  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);pushl %esp;addb %dh, (%edx)": 1,
                "outsb (%esi), %dx;addb %dh, (%ebx);addb %al, (%eax);pushl %eax;addb %ch, (%edi)": 1,
                "addb %ah, (%ebp);popal;addb %dh, (%edx);pushl %eax;addb %ah, (%ecx)": 1,
                "addb %ch, (%eax);jne  <FsRtlLegalAnsiCharacterArray+>;je  <FsRtlLegalAnsiCharacterArray+>;addb %ch, %fs:(%edi);ja  <FsRtlLegalAnsiCharacterArray+>": 1,
                "addb %ah, (%ecx);addb %ah, (%di);decl %esp;addb %ch, (%ecx);addb %ah, (%ebp)": 1,
                "addb %ch, (%edi);jb  <FsRtlLegalAnsiCharacterArray+>;jns  <FsRtlLegalAnsiCharacterArray+>;pushl %esp;addb %ch, (%eax)": 2,
                "addb %ah, (%ecx);jb  <FsRtlLegalAnsiCharacterArray+>;addb %ah, (%di);pushl %ebx;addb %dh, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %cl, (%eax,%eax);addb %dh, (%edx);addb %ah, (%di);pushl %ebx": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);pushl %eax;addb %ah, (%ecx);addb %ah, (%di)": 2,
                "addb %bh, (%eax);imull $, (%eax), %eax;insl %dx, %es:(%edi);addb %al, (%eax);addb %al, (%eax)": 1,
                "imull $, (%eax), %eax;insl %dx, %es:(%edi);addb %al, (%eax);addb %al, (%eax);addb %dl, (%ebx)": 1,
                "jp  <FsRtlLegalAnsiCharacterArray+>;addb %al, %gs:(%eax);addb %dl, (%ebx);addb %dh, %gs:(%ebx);jae  <FsRtlLegalAnsiCharacterArray+>": 1,
                "addb %al, %gs:(%eax);addb %dl, (%ebx);jns  <FsRtlLegalAnsiCharacterArray+>;jae  <FsRtlLegalAnsiCharacterArray+>;je  <FsRtlLegalAnsiCharacterArray+>": 1,
                "jb  <FsRtlLegalAnsiCharacterArray+>;addb %ah, %gs:(%esi);addb %dh, %gs:(%edx);addb %ch, %gs:(%esi);arpl %ax, (%eax)": 1,
                "addb %dh, (%eax,%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %ch, (%esi)": 1,
                "imull $, (%eax), %eax;pushl %edx;addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%eax,%eax)": 1,
                "popal;addb %ch, (%eax,%eax);addb %ch, (%eax,%eax);addb %ah, (%edi);addb %al, (%eax)": 1,
                "insl %dx, %es:(%edi);addb %ah, (%ebp);decl %ecx;addb %dh, (%ebx);pushl %ebp": 1,
                "jb  <FsRtlLegalAnsiCharacterArray+>;jae  <FsRtlLegalAnsiCharacterArray+>;popal;addb %ch, (%eax,%eax);addb %al, (%edx)": 1,
                "addb %ch, (%ecx);popal;addb %dh, (%ebx);addb %al, (%eax);addb %al, (%eax)": 2,
                "addb %dh, (%ebx);addb %al, (%eax);addb %al, (%eax);pushl %esp;addb %ch, (%ecx)": 1,
                "addb %dh, %gs:(%ebx);jae  <FsRtlLegalAnsiCharacterArray+>;incl %ecx;addb %ah, (%ebx);arpl %ax, (%eax)": 1,
                "jne  <FsRtlLegalAnsiCharacterArray+>;jb  <FsRtlLegalAnsiCharacterArray+>;imull $, (%eax), %eax;decl %ebp;addb %ch, (%edi)": 1,
                "pushl %esp;addb %cl, (%ecx);pushl %esp;addb %al, (%eax);addb %al, (%eax)": 1,
                "andl -(%eax,%eax), %edx;incl (%edi);pushl %esp;addb %cl, (%ebx);pushl %esp": 1,
                "addb %bh, (%eax);addb %bh, %bh;lcalll *-(%edi);andl (%eax,%eax), %edx;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;decl (%edi);das": 1,
                "pushl %esp;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *(%eax,%edi)": 1,
                "addb %al, (%eax);addb %dl, (%edi);cmpb %dl, (%eax,%eax);cmpb %dl, -(%eax,%eax);decl %edx": 1,
                "addb %bh, %bh;jmpl *(%ebx,%edi);pushl %esp;addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl %esp;addb %ah, %ch;incl %edx;pushl %esp;addb %bh, %bh": 1,
                "decl %eax;pushl %esp;addb %bh, %bh;jmpl *(%ecx);pushl %esp": 1,
                "addb %al, (%eax);addb %cl, (%edx);pushl %esp;addb %cl, (%esi);pushl %esp": 1,
                "pushl %esp;addb %bh, %bh;jmpl *-(%ebx);decl %ebx;pushl %esp": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %al, (%ebp);incl %edi;addb %cl, (%ecx)": 2,
                "incl %edi;addb %cl, (%ecx);pushl %ebx;addb %dl, (%eax,%eax);addb %bl, (%ecx)": 3,
                "addb %al, (%ebp);popl %esp;addb %dl, (%ebx);decl %edi;addb %al, (%esi)": 1,
                "addb %al, (%eax);addb %bh, %bh;ljmpl *-(%edx);pushl %esp;addb %ch, -(%esi)": 1,
                "addb %al, (%eax);addb %bh, %bh;calll *%edx;rclb $, -(%eax,%eax);pushl %esp": 1,
                "addb %al, (%eax);addb %bh, %bh;clc;pushl %esp;addb %cl, -": 1,
                "addb %bh, %bh;orb $, %al;addb %ch, %ah;orb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;popl %ss;pushl %ebp": 1,
                "ljmpl *-(%eax);pushl %ebp;addb %ch, (%esi,%ebp,);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %al;loopne ;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "addb %bh, %bh;pushl -(%ecx);pushl %ss;pushl %esi;addb %al, (%eax)": 1,
                "pushl %esi;addb %bh, (%esi);pushl %esi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;andb $, %al": 1,
                "incl (%edi);xorl (%esi), %edx;orl (%ebx), %esi;pushl %esi;addb %al, (%eax)": 1,
                "pushl %esi;addb %al, (%esi);pushl %esi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);incl %eax;incl %edi;addb %ah, (%eax);addb %al, (%eax)": 1,
                "xorl %edi, %ebx;movb $, %ch;jle - <FsRtlLegalAnsiCharacterArray+>;lretl $-;cmpsl %es:(%edi), (%esi)": 1,
                "movb $, %ch;jle - <FsRtlLegalAnsiCharacterArray+>;lretl $-;cmpsl %es:(%edi), (%esi);pushl %eax": 1,
                "jo  <FsRtlLegalAnsiCharacterArray+>;bound (%eax), %eax;addb %al, (%eax);addb %bl, %ch;movl %eax, ": 1,
                "addb %ch, (%esi);movl $, %ecx;pushl %es;addb %dh, (%eax);popl %edi": 1,
                "addb %ch, %bl;bound (%esi), %edx;addb %bh, (%esp);addb %dh, (%ebx);pushw %ss": 1,
                "addb %dh, -;jno  <FsRtlLegalAnsiCharacterArray+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "cmpl $, (%eax);jb  <FsRtlLegalAnsiCharacterArray+>;movl (%eax), %eax;movl %eax, (%edx);xorl %eax, %eax": 1,
                "int;int;int;int;int": 9080,
                "jne  <CcCanIWrite+>;pushl %ebx;calll  <IoIsFileOriginRemote>;testb %al, %al;je  <CcCanIWrite+>": 1,
                "testl %ecx, %ecx;je  <CcCanIWrite+>;movl (%eax), %eax;testl %eax, %eax;je  <CcCanIWrite+>": 1,
                "jae  <CcCanIWrite+>;movl , %eax;cmpl , %eax;ja  <CcCanIWrite+>;cmpl $, ": 1,
                "jbe  <CcCanIWrite+>;cmpb $, -(%ebp);je  <CcCanIWrite+>;cmpb $, (%ebp);je  <CcCanIWrite+>": 1,
                "cmpb $, (%ebp);je  <CcCanIWrite+>;cmpl %edi, %ecx;jne  <CcCanIWrite+>;calll *": 1,
                "shrb $, %al;andb $, %al;cmpb $, (%ebp);movb %al, -(%ebp);movl %edi, %ecx": 1,
                "popl %esi;popl %ebx;leave;retl $;xorb %al, %al": 7,
                "xorb %al, %al;jmp - <CcCanIWrite+>;int;int;int": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 405,
                "pushl -(%ebp);pushl (%esi);calll - <CcCanIWrite>;testb %al, %al;jne  <CcCanIWrite+>": 1,
                "subl %eax, -(%ebp);movl (%edi), %edi;xorl %esi, %esi;cmpl %ebx, %edi;jne - <CcCanIWrite+>": 1,
                "calll  <KeSetEvent>;jmp - <CcCanIWrite+>;pushl (%esi);pushl (%esi);calll *(%esi)": 1,
                "cmpl $, (%ebp);je  <CcCopyWrite+>;testb $, (%ebx);jne  <CcCopyWrite+>;movl %esi, %eax": 1,
                "movl (%ebp), %ebx;movl %ebx, -(%ebp);andl $, -(%ebp);movb $-, -(%ebp);andl $, %esi": 1,
                "xorl %eax, %eax;movl %esi, %edi;movl %ecx, %esi;shrl $, %ecx;rep  stosl %eax, %es:(%edi)": 1,
                "pushl $;jmp  <CcCopyWrite+>;pushl $;pushl -(%ebp);calll  <FsRtlNormalizeNtstatus>": 1,
                "pushl -(%ebp);pushl -(%ebp);jmp  <CcCopyWrite+>;cmpl %eax, (%edi);je  <CcCopyWrite+>": 1,
                "pushl %eax;pushl %edi;calll  <CcUnpinRepinnedBcb+>;movl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "pushl %edi;calll  <CcUnpinRepinnedBcb+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl $, %eax": 1,
                "movl -(%ebp), %ecx;movl $, %eax;testl %ecx, %eax;jne  <CcCopyWrite+>;cmpl $, (%ebp)": 1,
                "movl %eax, -(%ebp);movl (%esi), %ecx;calll *;movl -(%ebp), %esi;movl -(%ebp), %eax": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %esi;movl %esi, -(%ebp);subl -(%ebp), %eax": 1,
                "orl $, -(%ebp);jmp  <CcCopyWrite+>;testl %esi, %esi;jne  <CcCopyWrite+>;cmpl $, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl -(%ebp);pushl (%ebp)": 3,
                "movl (%ebx), %eax;movl (%eax), %esi;movl %esi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;calll  <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;xorl %edi, %edi;cmpl %edi, %eax;je  <CcFastCopyWrite+>;movl (%ebp), %ecx": 1,
                "andl $, %ecx;movl $, %ebx;subl %ecx, %ebx;movl %ebx, -(%ebp);cmpl (%ebp), %ebx": 1,
                "movl (%esi), %edi;movl %edi, -(%ebp);testl %edi, %edi;je  <CcFastCopyWrite+>;cmpl (%esi), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll  <CcWaitForCurrentLazyWriterActivity+>;jmp  <CcFastCopyWrite+>": 1,
                "movl (%ebx), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl %edi, -(%ebp);pushl $": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx;pushl $": 7,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;movl (%ecx), %ecx;decl %eax": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;decl %eax;movl %eax, (%ecx);popl %ebp": 1,
                "sbbl %ebx, %ebx;incl %ebx;movl %ebx, -(%ebp);movl (%esi), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp,%edx,), %esi;movl %esi, -(%ebp);movl %ebx, %edx;movl %edx, -(%ebp);movl %ecx, %eax": 1,
                "cmpl %esi, -(%ebp);jbe  <CcSetReadAheadGranularity+>;movl %esi, -(%ebp);andl $, %eax;movl -(%ebp), %ecx": 1,
                "subl %eax, %esi;movl %esi, -(%ebp);addl %eax, -(%ebp);adcl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl $, %eax;lock;andl %eax, (%edx);cmpl %ecx, -(%ebp);je  <CcSetReadAheadGranularity+>": 1,
                "andl %eax, (%edx);movb -(%ebp), %cl;movl , %ebx;calll *%ebx;movl -(%ebp), %ecx": 1,
                "jne  <CcSetReadAheadGranularity+>;cmpl $, (%edi);jne  <CcSetReadAheadGranularity+>;leal (%edi), %eax;movl (%eax), %ecx": 1,
                "andl $, %esi;movl (%eax), %ecx;cmpl %ecx, %esi;movl (%eax), %edi;jne  <CcSetReadAheadGranularity+>": 1,
                "movl %eax, %edx;jmp  <CcSetReadAheadGranularity+>;cmpl %edi, (%ebp);jl  <CcSetReadAheadGranularity+>;jg  <CcSetReadAheadGranularity+>": 1,
                "jmp  <CcSetReadAheadGranularity+>;testl %edx, %edx;je  <CcSetReadAheadGranularity+>;movl (%edx), %eax;movl (%edx), %ecx": 1,
                "movl %eax, %edx;xorl %eax, %eax;testl %edx, %edx;je  <CcSetReadAheadGranularity+>;pushl $": 1,
                "cmpl %ecx, (%ebp);ja  <CcSetReadAheadGranularity+>;cmpl $, (%eax);jne  <CcSetReadAheadGranularity+>;movl (%eax), %eax": 1,
                "movl (%ebp), %ebx;pushl %edi;movl (%esi), %edi;addl $, (%ebp);leal (%edi), %ecx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;pushl %ebx": 1,
                "pushl %edi;movl (%ebp), %edi;movl %eax, -(%ebp);leal -(%ebp), %eax;xorl %ebx, %ebx": 2,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);calll  <IoGetRelatedDeviceObject>;movl %eax, %esi": 1,
                "movl %eax, (%edx);leal -(%ebp), %eax;movl %eax, (%edx);movb $, (%ecx);movl %edi, (%ecx)": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp)": 55,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);movl (%ebp), %eax": 5,
                "movl %esp, %ebp;cmpl $, (%ebp);movl (%ebp), %eax;je  <CcSetDirtyPinnedData+>;movl , %ecx": 1,
                "movl , %ecx;movl %ecx, (%eax);incl ;movl %eax, ;jmp  <CcSetDirtyPinnedData+>": 1,
                "jmp  <CcSetDirtyPinnedData+>;movl , %ecx;movl %ecx, (%eax);incl ;movl %eax, ": 1,
                "jmp  <CcGetFlushedValidData+>;incl (%esi);movb -(%ebp), %cl;calll *;leal (%esi), %ecx": 1,
                "movb -(%ebp), %cl;calll *;leal (%esi), %ecx;leal -(%ebp), %edx;calll *": 1,
                "calll *;jmp  <CcGetFlushedValidData+>;movl (%ebp), %eax;movl (%eax), %esi;cmpl %ebx, (%esi)": 1,
                "pushl %esi;movl (%ebp), %esi;andl $-, %esi;movw (%esi), %ax;cmpw $, %ax": 1,
                "movl (%ebp), %esi;andl $-, %esi;movw (%esi), %ax;cmpw $, %ax;jne  <CcRemapBcb+>": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;addl $, %ecx": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl (%esi), %ecx;pushl %edi": 3,
                "movl (%esi), %eax;movl (%esi), %ecx;pushl %edi;xorl %ebx, %ebx;addl $, %eax": 1,
                "movl (%eax), %eax;subl $, %eax;cmpw $, (%eax);je - <CcRepinBcb+>;jmp  <CcRepinBcb+>": 2,
                "cmpw $, (%eax);je - <CcRepinBcb+>;jmp  <CcRepinBcb+>;movl (%esi), %ecx;cmpl (%eax), %ecx": 1,
                "je - <CcRepinBcb+>;jmp  <CcRepinBcb+>;movl (%esi), %ecx;cmpl (%eax), %ecx;movl (%esi), %ebx": 1,
                "jg  <CcRepinBcb+>;jl  <CcRepinBcb+>;cmpl (%eax), %ebx;jae  <CcRepinBcb+>;movl (%eax), %edi": 1,
                "cmpl %edi, %ecx;movl (%eax), %edx;jg  <CcRepinBcb+>;jl  <CcRepinBcb+>;cmpl %edx, %ebx": 1,
                "cmpl %edx, %ebx;jae  <CcRepinBcb+>;movl (%ebp), %ecx;movl (%ecx), %ebx;cmpl %edi, %ebx": 1,
                "popl %esi;movl %eax, (%ecx);movb -(%ebp), %al;popl %ebx;leave": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $": 26,
                "movl %ecx, %esi;cmpw $, (%esi);jne  <CcRepinBcb+>;leal (%esi), %eax;pushl %eax": 1,
                "pushl %esi;calll  <ExFreePoolWithTag>;popl %esi;retl;int": 1,
                "movl (%ebp), %ecx;leal (%eax,%ecx), %eax;shrl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;testb %al, %al;jne  <CcRepinBcb+>;pushl $;pushl (%ebp)": 1,
                "leal (%ecx,%ecx), %ecx;movl %ecx, -(%ebp);jmp - <CcRepinBcb+>;movb $, -(%ebp);orl $-, -(%ebp)": 1,
                "retl $;movl -(%ebp), %esi;movl -(%ebp), %ebx;movb %bl, %al;andb $, %al": 2,
                "addb %al, (%eax);addb %cl, %ah;int;int;int": 68,
                "movl $, %ebx;cmpl %ebx, %eax;movb $, -(%ebp);ja  <CcRepinBcb+>;movb (%esi), %bl": 1,
                "movl (%ecx), %eax;testl %eax, %eax;movb %bl, -(%ebp);je  <CcRepinBcb+>;movl (%eax), %eax": 1,
                "addl (%edx), %esi;movl %ecx, %edx;shrl $, %ecx;addl $, %ebx;movl %ebx, %edi": 1,
                "movb %bl, (%esi);subl %eax, ;subl %eax, (%edi);cmpl %eax, ;jbe  <CcRepinBcb+>": 1,
                "subl %eax, (%edi);cmpl %eax, ;jbe  <CcRepinBcb+>;subl %eax, ;jmp  <CcRepinBcb+>": 1,
                "cmpl %eax, ;jbe  <CcRepinBcb+>;subl %eax, ;jmp  <CcRepinBcb+>;movl %ebx, ": 1,
                "movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, ;jmp  <CcRepinBcb+>;decl (%esi)": 1,
                "jmp - <CcRepinBcb+>;pushl %ebx;pushl %ebx;pushl %eax;pushl $": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);calll *;movb %al, (%ebp);movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;addl $, %eax;cmpl %ebx, %eax;ja  <CcScheduleReadAhead+>;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %edx;movl %edi, %eax;addl %ecx, %eax;movl %edi, (%esi);adcl %edx, %ebx": 1,
                "addl %ecx, %edi;movl $, %ecx;addl $, %edi;andl %ecx, %eax;movl %edx, (%esi)": 1,
                "movl %edi, (%esi);jne  <CcScheduleReadAhead+>;movl $, %eax;lock;orl %eax, (%esi)": 1,
                "pushl (%edi);pushl (%edi);calll *(%edi);movl %eax, %ebx;testl %ebx, %ebx": 1,
                "calll *(%edi);movl %eax, %ebx;testl %ebx, %ebx;je  <CcScheduleReadAhead+>;movl (%ebp), %esi": 1,
                "movl (%ebp), %esi;movl %esi, %ecx;calll  <ObfReferenceObject>;calll *;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;incl (%edx);movb %al, %cl;calll *;movl $, %edx": 1,
                "movl (%eax), %edi;xorl %esi, %esi;movl %edi, %eax;movl %ebx, %edx;movb $, %cl": 1,
                "movl (%ebp), %edi;cmpl %esi, (%edi);jl  <CcScheduleReadAhead+>;jg  <CcScheduleReadAhead+>;cmpl $, (%edi)": 1,
                "jne  <CcScheduleReadAhead+>;pushl %esi;pushl %esi;pushl %esi;pushl %esi": 1,
                "pushl %esi;pushl %esi;calll - <CcRepinBcb+>;movl %eax, %ebx;cmpl %esi, %ebx": 1,
                "cmpl %ecx, -(%ebp);jg  <CcScheduleReadAhead+>;jl  <CcScheduleReadAhead+>;cmpl %eax, -(%ebp);jae  <CcScheduleReadAhead+>": 1,
                "movl -(%ebp), %eax;subl (%esi), %eax;movl %eax, (%esi);cmpl $, (%edi);jne  <CcScheduleReadAhead+>": 1,
                "addl $, -(%ebp);movl -(%ebp), %ecx;adcl $, -(%ebp);cmpl %ecx, -(%ebp);jl - <CcScheduleReadAhead+>": 1,
                "movl -(%ebp), %ecx;adcl $, -(%ebp);cmpl %ecx, -(%ebp);jl - <CcScheduleReadAhead+>;jg  <CcScheduleReadAhead+>": 1,
                "cmpl %esi, %eax;je  <CcScheduleReadAhead+>;movl , %ecx;movl %ecx, (%eax);incl ": 1,
                "movl %eax, -(%ebp);cmpl %esi, %eax;je  <CcScheduleReadAhead+>;cmpl %esi, (%eax);je  <CcScheduleReadAhead+>": 1,
                "cmpl %esi, (%eax);jne  <CcScheduleReadAhead+>;cmpl %esi, (%ebp);je  <CcScheduleReadAhead+>;cmpl %esi, (%ebp)": 1,
                "pushl -(%ebp);calll - <CcSetReadAheadGranularity+>;movl %eax, %esi;movl (%esi), %edx;movl (%esi), %edi": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jg  <CcScheduleReadAhead+>;jl  <CcScheduleReadAhead+>;movl -(%ebp), %eax": 1,
                "jae  <CcScheduleReadAhead+>;movl -(%ebp), %ecx;subl (%esi), %ecx;jmp  <CcScheduleReadAhead+>;movl %esi, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %edi, -(%ebp);movl -(%ebp), %eax;testl %edx, (%eax);jne  <CcScheduleReadAhead+>": 1,
                "jne  <CcScheduleReadAhead+>;movl -(%ebp), %eax;decl %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "jg  <CcScheduleReadAhead+>;jl  <CcScheduleReadAhead+>;cmpl %edx, -(%ebp);ja  <CcScheduleReadAhead+>;movl (%esi), %edx": 1,
                "movl (%ebx), %edi;subl $, %edi;movl %edi, -(%ebp);testb $, (%ebx);je  <CcScheduleReadAhead+>": 1,
                "orl %ecx, %edx;je  <CcScheduleReadAhead+>;addl $, %eax;adcl $, %ecx;movl %eax, -(%ebp)": 1,
                "addl $, %eax;adcl $, %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);leal -(%ebp), %eax": 1,
                "jmp  <CcScheduleReadAhead+>;movl -(%ebp), %edi;leal (%edi), %ecx;leal (%ebx), %eax;cmpl %eax, %ecx": 1,
                "movb $, %cl;calll  <_allshr>;xorl %ecx, %ecx;cmpl %ecx, -(%ebp);jl  <CcScheduleReadAhead+>": 1,
                "movb $, %cl;calll  <_allshr>;xorl %ecx, %ecx;addl -(%ebp), %edi;adcl -(%ebp), %ecx": 1,
                "jne  <CcScheduleReadAhead+>;andl $, %edx;orl %eax, %edx;je  <CcScheduleReadAhead+>;movl (%ebp), %ebx": 1,
                "andl $, %edx;orl %eax, %edx;je  <CcScheduleReadAhead+>;movl (%ebp), %ebx;incl (%edi)": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);sete %al;pushl %eax;leal (%edi), %eax": 1,
                "cmpl $, (%eax);jne  <CcScheduleReadAhead+>;movl (%ebx), %edi;movl (%ebp), %edx;jmp  <CcScheduleReadAhead+>": 1,
                "calll - <CcRepinBcb+>;leal -(%ebp), %edx;leal (%ebx), %ecx;calll *;andl $, -(%ebp)": 1,
                "movl %edx, (%ecx);movl (%edi), %edx;movl %edx, (%ecx);movl (%ebp), %ecx;movl %edi, (%ecx)": 1,
                "leal (%ebx), %ecx;calll *;jmp  <CcScheduleReadAhead+>;movl (%ebp), %ebx;cmpl $, -(%ebp)": 1,
                "jne  <CcScheduleReadAhead+>;leal (%ebx), %eax;movl (%eax), %ecx;orl (%eax), %ecx;je  <CcScheduleReadAhead+>": 1,
                "orl (%eax), %ecx;je  <CcScheduleReadAhead+>;cmpl %edx, (%ebp);jne  <CcScheduleReadAhead+>;movl %edx, (%eax)": 1,
                "subl %eax, ;jmp  <CcScheduleReadAhead+>;andl $, ;cmpl $, (%ebx);jne  <CcScheduleReadAhead+>": 1,
                "jne  <CcScheduleReadAhead+>;leal (%ebx), %eax;movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx)": 1,
                "shldl $, %eax, %edx;shll $, %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx)": 1,
                "shll $, %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl (%ebp), %eax": 1,
                "movl -(%ebp), %esp;movl (%ebp), %edi;movl -(%ebp), %ebx;movl (%edi), %ecx;movl (%ecx), %esi": 1,
                "movl %esi, (%edi);movl (%ebp), %eax;movl (%eax), %ecx;cmpl %ebx, %ecx;jne - <CcScheduleReadAhead+>": 1,
                "movb $, %dl;movl %esi, %ecx;calll - <CcRepinBcb+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl %esi, %ecx;calll - <CcRepinBcb+>;movl (%ebp), %eax;movl (%eax), %eax;cmpl %ebx, %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;cmpl %ebx, %eax;movl %edi, %esi;jne - <CcScheduleReadAhead+>": 1,
                "pushl %eax;calll  <ExAcquireResourceExclusiveLite>;cmpb %bl, (%esi);je  <CcUnpinRepinnedBcb+>;pushl (%esi)": 1,
                "calll - <CcRepinBcb+>;pushl $;pushl %edi;pushl (%esi);leal (%esi), %eax": 1,
                "cmpl $, %edi;jne  <CcUnpinRepinnedBcb+>;pushl %ebx;pushl %esi;calll - <CcSetDirtyPinnedData>": 1,
                "calll - <CcRepinBcb+>;movl %ebx, (%edi);popl %edi;popl %esi;popl %ebx": 1,
                "je  <CcUnpinRepinnedBcb+>;cmpl %ebx, (%ebp);je  <CcUnpinRepinnedBcb+>;movl (%ebp), %eax;xorl %ecx, %ecx": 1,
                "movb %bl, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %edi": 1,
                "movl $, %esi;movl (%ebp), %eax;testl %esi, (%eax);jne  <CcUnpinRepinnedBcb+>;calll *": 1,
                "testl %esi, (%eax);jne  <CcUnpinRepinnedBcb+>;calll *;movl (%ebp), %edx;orl %esi, (%edx)": 1,
                "cmpl $, (%ebp);je  <CcUnpinRepinnedBcb+>;andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl %ecx;calll - <CcUnpinRepinnedBcb+>": 1,
                "movl %edx, -(%ebp);movl (%ebp), %ecx;testl %esi, %ecx;je  <CcUnpinRepinnedBcb+>;movl (%ebp), %ecx": 1,
                "cmpl %ecx, %edx;jle  <CcUnpinRepinnedBcb+>;movl %ecx, (%esi);jmp  <CcUnpinRepinnedBcb+>;testl %eax, %eax": 1,
                "jne  <CcUnpinRepinnedBcb+>;pushl $;jmp  <CcUnpinRepinnedBcb+>;pushl $;pushl -(%ebp)": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <CcScheduleReadAhead+>": 2,
                "sbbl %esi, %esi;andl $-, %esi;addl $, %esi;movl %esi, -(%ebp);jmp - <CcUnpinRepinnedBcb+>": 1,
                "movb %dl, (%ecx);shrl %eax;movl %eax, (%ecx);movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl %eax, (%esi);jmp  <CcUnpinRepinnedBcb+>;testl %eax, %eax;je  <CcUnpinRepinnedBcb+>;cmpl $, -(%ebp)": 1,
                "movl %ebx, (%edi);movl (%ebp), %eax;andl $, %eax;movl %eax, -(%ebp);movl (%ebp), %ebx": 1,
                "movl %ecx, -(%ebp);pushl (%ebx);pushl (%ebx);pushl %esi;calll  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 60,
                "movl %ecx, -(%ebp);movl (%ebx), %edx;movl %edx, -(%ebp);movl -(%ebp), %eax;subl %ecx, %eax": 1,
                "andl %edx, %ecx;addl %ecx, %eax;movl %eax, -(%ebp);addl %ecx, -(%ebp);cmpb $, (%ebp)": 1,
                "movl %esi, -(%ebp);testb $, (%ebp);je  <CcUnpinRepinnedBcb+>;testl %esi, %esi;jne  <CcUnpinRepinnedBcb+>": 1,
                "pushl $;calll  <ExRaiseStatus>;cmpb $, (%ebp);jne  <CcUnpinRepinnedBcb+>;leal (%esi), %eax": 1,
                "leal -(%ebp), %ecx;calll *;andl $, -(%ebp);cmpl $, -(%ebp);jne  <CcUnpinRepinnedBcb+>": 1,
                "cmpl $, -(%ebp);jne  <CcUnpinRepinnedBcb+>;pushl (%edi);pushl $;pushl -(%ebp)": 1,
                "jne  <CcUnpinRepinnedBcb+>;pushl (%edi);pushl $;pushl -(%ebp);pushl -(%ebp)": 1,
                "testl %esi, %esi;je  <CcUnpinRepinnedBcb+>;cmpb $, (%ebp);jne  <CcUnpinRepinnedBcb+>;pushl $": 1,
                "addl (%ecx), %eax;movl %eax, (%edi);movb $, -(%ebp);movl (%ebp), %ebx;jmp  <CcUnpinRepinnedBcb+>": 1,
                "movb $, -(%ebp);cmpl $, -(%ebp);je  <CcUnpinRepinnedBcb+>;testb $, (%ebp);je  <CcUnpinRepinnedBcb+>": 1,
                "je  <CcUnpinRepinnedBcb+>;leal -(%ebp), %ecx;calll *;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "calll *;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <CcUnpinRepinnedBcb+>;calll  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "pushl (%ebx);pushl -(%ebp);calll  <CcWaitForCurrentLazyWriterActivity+>;cmpb $, -(%ebp);je  <CcUnpinRepinnedBcb+>": 1,
                "jne  <CcFlushCache+>;leal -(%ebp), %eax;movl %eax, (%ebp);movl (%ebp), %ebx;cmpl $, %ebx": 1,
                "movl $, -(%ebp);calll *;movb %al, %cl;movl (%ebp), %eax;movl (%eax), %esi": 1,
                "andl $-, -(%ebp);movl $, -(%ebp);testb $, (%esi);je  <CcFlushCache+>;testb $, %bl": 1,
                "movl %ebx, (%ebp);movl (%esi), %eax;movl (%eax), %eax;cmpl %edi, %eax;je  <CcFlushCache+>": 1,
                "movl (%esi), %eax;cmpl %eax, -(%ebp);ja  <CcFlushCache+>;cmpl %eax, %edi;jb  <CcFlushCache+>": 1,
                "pushl -(%ebp);pushl %esi;calll - <CcUnpinRepinnedBcb+>;testl %esi, %esi;je  <CcFlushCache+>": 1,
                "movl (%eax), %eax;testb $, (%eax);je  <CcFlushCache+>;cmpl $, -(%ebp);jne  <CcFlushCache+>": 1,
                "movl (%edi), %eax;testl %eax, %eax;jge  <CcFlushCache+>;cmpl $, %eax;je  <CcFlushCache+>": 1,
                "cmpl %edi, -(%ebp);je  <CcFlushCache+>;leal -(%ebp), %eax;pushl %eax;calll  <KeQueryTickCount>": 1,
                "sbbl %eax, %eax;leal -(%ebp), %edx;andl %edx, %eax;leal -(%ebp), %edx;pushl %edx": 1,
                "jne  <CcFlushCache+>;testb $, (%esi);jne  <CcFlushCache+>;movb $, %al;jmp  <CcFlushCache+>": 1,
                "jne  <CcFlushCache+>;pushl -(%ebp);movl (%ebp), %edi;pushl %ebx;pushl %edi": 1,
                "je  <CcFlushCache+>;movl (%ebp), %eax;incl ;addl $, %eax;shrl $, %eax": 1,
                "movl %edi, -(%ebp);je  <CcFlushCache+>;cmpl $, %eax;je  <CcFlushCache+>;cmpl $, %eax": 1,
                "leal -(%ebp), %eax;pushl %ebx;pushl %edi;pushl %eax;movl (%esi), %eax": 1,
                "calll  <MmFlushImageSection+>;movl (%ebx), %eax;testl %eax, %eax;jl  <CcFlushCache+>;calll *": 1,
                "cmpl $, %eax;movl %ecx, -(%ebp);jne  <CcFlushCache+>;movl $, -(%ebp);addl %edi, -(%ebp)": 1,
                "jb  <CcFlushCache+>;cmpl $, ;je  <CcFlushCache+>;calll - <CcCanIWrite+>;andl $, -(%ebp)": 1,
                "je  <CcFlushCache+>;calll - <CcCanIWrite+>;andl $, -(%ebp);cmpl $, -(%ebp);je  <CcFlushCache+>": 1,
                "calll - <CcCanIWrite+>;andl $, -(%ebp);cmpl $, -(%ebp);je  <CcFlushCache+>;leal -(%ebp), %eax": 1,
                "je  <CcFlushCache+>;leal -(%ebp), %eax;pushl %eax;calll  <KeQueryTickCount>;movl -(%ebp), %eax": 1,
                "pushl %eax;calll  <KeQueryTickCount>;movl -(%ebp), %eax;cmpl -(%ebp), %eax;jg  <CcFlushCache+>": 1,
                "jmp - <CcFlushCache+>;movl $, (%ebx);xorl %edi, %edi;cmpl %edi, -(%ebp);je  <CcFlushCache+>": 1,
                "je  <CcFlushCache+>;cmpl $, ;je  <CcFlushCache+>;calll - <CcCanIWrite+>;calll *": 1,
                "movl %eax, (%ecx);cmpb $, ;movl %eax, ;movb $, ;jne  <CcFlushCache+>": 2,
                "calll  <CcPrepareMdlWrite+>;movb %bl, %cl;calll *;cmpl $, -(%ebp);je  <CcFlushCache+>": 1,
                "xorl %ebx, %ebx;movl %edi, -(%ebp);movl %ebx, -(%ebp);calll *(%eax);testb %al, %al": 1,
                "testl %ebx, %ebx;je  <CcFlushCache+>;pushl %edi;pushl -(%ebp);pushl %ebx": 1,
                "cmpl %ecx, %eax;je  <CcFlushCache+>;cmpl $, %eax;movl $, -(%ebp);je  <CcFlushCache+>": 1,
                "pushl (%esi);movl %ebx, -(%ebp);calll  <IoQueryFileDosDeviceName>;cmpl %ebx, %eax;jne  <CcFlushCache+>": 1,
                "cmpw %bx, (%ecx);je  <CcFlushCache+>;cmpw %bx, (%eax);je  <CcFlushCache+>;cmpl %ebx, (%eax)": 1,
                "je  <CcFlushCache+>;cmpl %ebx, (%eax);je  <CcFlushCache+>;pushl %ebx;pushl %ecx": 1,
                "pushl %ecx;pushl $;calll  <IoRaiseInformationalHardError>;movl (%esi), %eax;addl $, %eax": 1,
                "jg  <CcFlushCache+>;movl (%esi), %edx;cmpl %eax, %edx;jb  <CcFlushCache+>;cmpl $-, %eax": 1,
                "jne  <CcFlushCache+>;cmpl $, %ecx;je  <CcFlushCache+>;movl (%esi), %eax;orl (%esi), %eax": 1,
                "cmpl (%esi), %ebx;jb  <CcFlushCache+>;leal -(%ebp), %ecx;calll *;leal -(%ebp), %eax": 1,
                "testb $, (%esi);je  <CcFlushCache+>;pushl %esi;calll  <CcGetLsnForFileObject+>;cmpl %ebx, (%esi)": 1,
                "pushl %esi;calll  <CcGetLsnForFileObject+>;cmpl %ebx, (%esi);movl , %ebx;jne  <CcFlushCache+>": 1,
                "movb %al, -(%ebp);jne  <CcFlushCache+>;cmpl $, (%esi);je  <CcFlushCache+>;movl (%esi), %ecx": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;pushl %esi;calll  <FsRtlAcquireFileExclusive>": 1,
                "movl (%eax), %esi;testl %esi, %esi;jne  <CcSetAdditionalCacheAttributes+>;xorb %al, %al;jmp  <CcSetAdditionalCacheAttributes+>": 1,
                "jne - <CcSetAdditionalCacheAttributes+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "testb %al, %al;movb %al, -(%ebp);je  <CcSetAdditionalCacheAttributes+>;calll *%edi;orw $, (%esi)": 1,
                "cmpl (%ebp), %eax;jne  <CcGetDirtyPages+>;cmpl %ebx, (%edi);je  <CcGetDirtyPages+>;incl (%edi)": 1,
                "leal -(%ebp), %edx;calll *;movl (%edi), %esi;subl $, %esi;movl %esi, -(%ebp)": 1,
                "leal (%edi), %eax;cmpl %eax, %ecx;je  <CcGetDirtyPages+>;cmpw $, (%esi);jne  <CcGetDirtyPages+>": 1,
                "movl %eax, -(%ebp);movl (%esi), %ebx;movl %ebx, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movb $, %dl;calll - <CcRepinBcb+>;movl %ebx, -(%ebp);calll *;movb %al, -(%ebp)": 1,
                "movl -(%ebp), %edx;calll  <wctomb+>;retl $;movl -(%ebp), %esi;calll  <_abnormal_termination>": 1,
                "jmp  <CcIsThereDirtyData+>;testb $, (%esi);jne  <CcIsThereDirtyData+>;movl (%esi), %edx;movl (%edx), %ecx": 1,
                "andl $, -(%ebp);calll *%edi;andl $-, (%esi);subl $, (%esi);movl (%ebx), %esi": 1,
                "jl  <CcGetLsnForFileObject+>;cmpl -(%ebp), %esi;jae  <CcGetLsnForFileObject+>;movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %edx;cmpl -(%ebp), %edx;jl  <CcGetLsnForFileObject+>": 1,
                "movl (%eax), %edx;cmpl -(%ebp), %edx;jbe  <CcGetLsnForFileObject+>;movl (%eax), %edx;movl (%eax), %eax": 1,
                "je  <CcGetLsnForFileObject+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl (%edi), %eax;xorl %ebx, %ebx;cmpl %ebx, (%eax);movb %bl, -(%ebp);je  <CcGetLsnForFileObject+>": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;pushl %esi;leal (%ebx), %esi": 1,
                "pushl %edi;movl (%ebp), %edi;leal (%edi), %eax;movl (%eax), %ebx;cmpl %eax, %ebx": 1,
                "movl (%esi), %ebx;jne  <CcGetLsnForFileObject+>;movl (%esi), %ecx;movl %ebx, %eax;movl %eax, (%ecx)": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%esi);pushl %edi;movl (%esi), %edi;je  <CcGetLsnForFileObject+>": 1,
                "movl (%edx), %eax;movl (%edx), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);movl (%edx), %edi": 1,
                "cmpl %eax, %edx;jb  <CcGetLsnForFileObject+>;movl -(%ebp), %eax;leal -(%ebp), %ecx;movl %ecx, (%edx)": 1,
                "popl %edi;andl $, (%ebx);leal -(%ebp), %ecx;calll *;jmp  <CcGetLsnForFileObject+>": 1,
                "jmp  <CcGetLsnForFileObject+>;movl (%ecx), %eax;pushl $;leal -(%ebp), %edx;movl %eax, -(%ebp)": 1,
                "testl %ecx, %ecx;je  <CcSetDirtyPageThreshold+>;movl (%ebp), %edx;movl %edx, (%ecx);movl (%eax), %ecx": 1,
                "movl %esp, %ebp;pushl %esi;xorl %esi, %esi;calll *;movl (%ebp), %ecx": 1,
                "movl %ebx, (%eax);orl $, (%esi);cmpl %ebx, (%esi);movl %ecx, -(%ebp);jne  <CcGetFileObjectFromBcb+>": 1,
                "movl %ebx, (%esi);movb %dl, %cl;calll *;pushl %ebx;pushl -(%ebp)": 1,
                "cmpl %eax, (%eax);je  <CcGetFileObjectFromBcb+>;pushl %esi;calll - <CcGetLsnForFileObject+>;pushl %esi": 1,
                "cmpl %ebx, %eax;je  <CcGetFileObjectFromBcb+>;andl $-, %eax;movl (%eax), %edi;pushl %ebx": 1,
                "movl (%eax), %edi;pushl %ebx;pushl %ebx;addl $, %eax;pushl %eax": 1,
                "pushl %eax;calll  <ExFreePoolWithTag>;movl (%esi), %eax;cmpl %ebx, %eax;je  <CcGetFileObjectFromBcb+>": 2,
                "je  <CcInitializeCacheMap+>;addl $, -(%ebp);adcl %eax, -(%ebp);andl $, -(%ebp);jmp  <CcInitializeCacheMap+>": 1,
                "cmpl %edi, %esi;jne  <CcInitializeCacheMap+>;movl -(%ebp), %esi;cmpl %edi, %esi;jne  <CcInitializeCacheMap+>": 1,
                "calll  <ExRaiseStatus>;xorl %eax, %eax;pushl $;popl %ecx;movl %esi, %edi": 1,
                "movl %esi, -(%ebp);calll  <KeInitializeSpinLock>;leal (%esi), %eax;pushl %eax;calll  <KeInitializeSpinLock>": 1,
                "leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);movl (%ebp), %eax;movl %eax, (%esi)": 2,
                "jne  <CcInitializeCacheMap+>;andl $-, (%esi);testb $, (%ebx);je  <CcInitializeCacheMap+>;orb $, (%esi)": 1,
                "jne  <CcInitializeCacheMap+>;pushl %ebx;pushl %eax;pushl $;pushl $": 1,
                "pushl -(%ebp);pushl %esi;calll  <CcWaitForCurrentLazyWriterActivity+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movb %al, (%ebp);movl (%esi), %eax;xorl %edi, %edi;cmpl %edi, %eax;je  <CcInitializeCacheMap+>": 1,
                "pushl %edi;pushl %edi;pushl %edi;pushl (%esi);movl %edi, (%ebp)": 1,
                "cmpl %edi, %eax;jge  <CcInitializeCacheMap+>;pushl $;pushl %eax;calll  <FsRtlNormalizeNtstatus>": 1,
                "movl %eax, -(%ebp);jmp  <CcInitializeCacheMap+>;movb (%ebp), %cl;incl (%esi);calll *": 1,
                "incl (%esi);calll *;movl %edi, (%ebp);movl $, -(%ebp);xorl %edi, %edi": 1,
                "movl (%ebp), %eax;cmpl %edi, (%eax);movb %cl, (%ebp);jne  <CcInitializeCacheMap+>;cmpw %di, (%ebx)": 1,
                "calll  <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, -(%ebp);jne - <CcInitializeCacheMap+>;movl $, -(%ebp)": 1,
                "movl %esi, %ecx;calll - <CcGetFileObjectFromBcb+>;jmp  <CcInitializeCacheMap+>;cmpl %edi, %esi;je  <CcInitializeCacheMap+>": 1,
                "pushl %edi;pushl -(%ebp);calll  <ExFreePoolWithTag>;cmpl %edi, -(%ebp);jge  <CcInitializeCacheMap+>": 1,
                "leal (%esi), %eax;cmpl %eax, %edx;jne  <CcUninitializeCacheMap+>;andw %bx, (%edx);andl %ebx, (%ebp)": 1,
                "je  <CcUninitializeCacheMap+>;movl (%ebp), %ecx;testl %ecx, %ecx;je  <CcUninitializeCacheMap+>;movl (%ecx), %eax": 1,
                "leal (%esi), %eax;cmpl %eax, (%eax);je  <CcUninitializeCacheMap+>;pushl $;pushl $": 1,
                "pushl $;pushl (%ebp);calll  <ExFreePoolWithTag>;xorb %al, %al;jmp  <CcUninitializeCacheMap+>": 1,
                "pushl (%edi);calll  <MmDisableModifiedWriteOfSection+>;movl (%ebp), %ecx;testl %ecx, %ecx;je  <CcUninitializeCacheMap+>": 1,
                "movl %esi, %ecx;calll - <CcGetFileObjectFromBcb+>;movb $, -(%ebp);jmp  <CcUninitializeCacheMap+>;testb $, %al": 1,
                "pushl (%edi);calll  <CcPurgeCacheSection>;jmp  <CcUninitializeCacheMap+>;movb -(%ebp), %cl;calll *": 1,
                "pushl -(%eax);calll - <CcUninitializeCacheMap>;cmpl %edi, (%edi);jne - <CcPurgeCacheSection+>;jmp  <CcPurgeCacheSection+>": 1,
                "je  <CcPurgeCacheSection+>;cmpl %ebx, (%ebp);je  <CcPurgeCacheSection+>;movb $, %al;jmp  <CcPurgeCacheSection+>": 1,
                "movb $, %al;jmp  <CcPurgeCacheSection+>;xorb %al, %al;movzbl %al, %eax;pushl %eax": 1,
                "je  <CcPurgeCacheSection+>;movl (%esi), %ecx;movl %ebx, (%esi);movl (%esi), %ebx;movl %ecx, (%ebp)": 1,
                "movl (%ebp), %ebx;movb %al, %cl;calll *;movl (%edi), %eax;testb $, (%eax)": 1,
                "cmpl $, -(%ebp);jne  <CcPurgeCacheSection+>;cmpl $, -(%ebp);je  <CcPurgeCacheSection+>;pushl %ebx": 1,
                "jne  <CcPurgeCacheSection+>;testb $, (%esi);jne  <CcPurgeCacheSection+>;cmpl $, (%esi);jne  <CcPurgeCacheSection+>": 1,
                "je  <CcPurgeCacheSection+>;xorl %esi, (%ebp);movl $, %eax;movl (%ebp), %ecx;testl %eax, (%ecx)": 1,
                "movl (%ebp), %ecx;testl %eax, (%ecx);je  <CcPurgeCacheSection+>;movl (%ecx), %edi;movl %edi, -(%ebp)": 1,
                "pushl %edi;pushl %ebx;calll  <CcWaitForCurrentLazyWriterActivity+>;movl %eax, %edi;movl %edi, -(%ebp)": 1,
                "pushl %ebx;calll  <CcWaitForCurrentLazyWriterActivity+>;movl %eax, %edi;movl %edi, -(%ebp);andl $, -(%ebp)": 1,
                "jmp  <CcPurgeCacheSection+>;pushl %edx;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "pushl (%eax);calll - <CcPurgeCacheSection>;calll  <wctomb+>;retl $;int": 1,
                "je  <CcSetFileSizes+>;movl -(%ebp), %eax;cmpl (%esi), %eax;jl  <CcSetFileSizes+>;jg  <CcSetFileSizes+>": 1,
                "calll *;decl (%esi);movb %al, (%ebp);jne  <CcSetFileSizes+>;testb $, (%esi)": 1,
                "movb (%ebp), %cl;calll *;pushl %edi;pushl %ebx;pushl (%ebp)": 1,
                "movl -(%ebp), %eax;orl -(%ebp), %eax;jne  <CcSetFileSizes+>;cmpl %edi, (%esi);je  <CcSetFileSizes+>": 1,
                "calll - <CcGetLsnForFileObject+>;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <CcPurgeCacheSection+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);jne  <CcSetFileSizes+>": 1,
                "cmpl %edi, (%esi);jne  <CcSetFileSizes+>;leal (%esi), %eax;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movb (%ebp), %cl;calll *;jmp  <CcSetFileSizes+>;calll *;testw $, -(%ebp)": 1,
                "testw $, -(%ebp);je  <CcSetFileSizes+>;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;calll  <MmUnlockPages>;testb $, (%ebx);je  <CcSetFileSizes+>;pushl $": 1,
                "testl %esi, %esi;movl %esi, %eax;jne - <CcSetFileSizes+>;popl %edi;popl %esi": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;pushl %edi;movl (%ebp), %edi": 2,
                "pushl %edi;movl (%ebp), %edi;testb $, (%edi);movb $, -(%ebp);je  <CcMdlWriteAbort+>": 1,
                "calll  <IoFreeMdl>;testl %ebx, %ebx;movl %ebx, %edi;jne - <CcMdlWriteAbort+>;cmpb %bl, -(%ebp)": 1,
                "je  <CcMdlWriteAbort+>;calll *;decl (%esi);movb %al, %bl;jne  <CcMdlWriteAbort+>": 1,
                "movl (%edi), %ecx;movl %ecx, -(%ebp);andl $, -(%ebp);cmpl $, (%ebp);je  <CcPrepareMdlWrite+>": 1,
                "movl -(%ebp), %edi;addl %edi, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %edx;adcl %edx, %eax": 1,
                "testl %edi, %eax;jne  <CcPrepareMdlWrite+>;cmpl $, -(%ebp);jb  <CcPrepareMdlWrite+>;movl $, -(%ebp)": 1,
                "sbbl -(%ebp), %edi;movl %edi, -(%ebp);leal -(%ebp), %ecx;calll *;testl %edi, %edi": 1,
                "movl %edi, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb $, (%eax);pushl $": 1,
                "movb %cl, (%eax);andl $, -(%ebp);leal -(%ebp), %edx;leal (%esi), %ecx;calll *": 1,
                "cmpl (%esi), %eax;jbe  <CcPrepareMdlWrite+>;movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%esi)": 1,
                "addl %ecx, -(%ebp);subl %ecx, (%ebp);movl (%ebp), %edi;movl -(%ebp), %ebx;jmp - <CcPrepareMdlWrite+>": 1,
                "je  <CcPrepareMdlWrite+>;calll  <CcWaitForCurrentLazyWriterActivity+>;cmpl $, -(%ebp);je  <CcPrepareMdlWrite+>;pushl -(%ebp)": 1,
                "popl %esi;retl $;int;int;int": 13,
                "movb $, (%esi);andl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, (%esi);calll *;movb %al, %bl;movl , %eax;movl $, (%esi)": 1,
                "calll *;movb %al, %bl;movl , %eax;movl $, (%esi);movl %eax, (%esi)": 1,
                "movl %esi, ;movb $, ;jne  <CcWaitForCurrentLazyWriterActivity+>;pushl $;calll - <CcPrepareMdlWrite+>": 1,
                "movb %bl, -(%ebp);movl %ebx, -(%ebp);calll *;movb %al, %cl;movb %cl, -(%ebp)": 1,
                "movl , %ecx;cmpl %edx, %ecx;je  <CcWaitForCurrentLazyWriterActivity+>;movl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);cmpl -(%ebp), %esi;je  <CcWaitForCurrentLazyWriterActivity+>;leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "incl (%eax);testb $, (%eax);je  <CcWaitForCurrentLazyWriterActivity+>;testb $, (%esi);je  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "movl , %ecx;movl %ecx, -(%ebp);movl %eax, (%ecx);movl %ecx, (%eax);movl -(%ebp), %eax": 1,
                "movl %eax, ;movl %ecx, ;movl %edi, (%ecx);movl %edi, (%eax);jmp  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "movb -(%ebp), %cl;calll *;movl %ds:, %eax;movl %eax, -(%ebp);movl (%eax), %edi": 1,
                "jne  <CcWaitForCurrentLazyWriterActivity+>;calll *;movb %al, -(%ebp);andl $-, (%esi);decl (%esi)": 1,
                "leal -(%ebp), %edx;movl %edx, (%eax);movl %ecx, -(%ebp);movl $, %edx;calll - <CcPrepareMdlWrite+>": 1,
                "andl $-, (%esi);decl (%esi);movl -(%ebp), %eax;movl (%eax), %esi;subl $, %esi": 1,
                "movl %eax, ;movl %edi, (%ecx);movl %edi, (%eax);movb $, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);xorl %ebx, %ebx;jmp - <CcWaitForCurrentLazyWriterActivity+>;movb -(%ebp), %cl;calll *": 1,
                "calll *;cmpl $, ;je - <CcWaitForCurrentLazyWriterActivity+>;jmp - <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);pushl %eax;calll - <CcPrepareMdlWrite+>;retl;movl -(%ebp), %esp": 1,
                "movl %edi, (%esi);movl %edx, (%esi);movl %esi, (%edx);movl %esi, (%edi);movl %ebx, -(%ebp)": 1,
                "je  <CcWaitForCurrentLazyWriterActivity+>;decl %eax;je  <CcWaitForCurrentLazyWriterActivity+>;decl %eax;je  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "jne  <CcWaitForCurrentLazyWriterActivity+>;pushl %ebx;pushl %ebx;pushl (%esi);calll  <KeSetEvent>": 1,
                "pushl %ebx;pushl (%esi);calll  <KeSetEvent>;movb $, -(%ebp);jmp  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "orl $, (%eax);leal -(%ebp), %edx;movl (%esi), %ecx;calll - <CcFlushCache+>;cmpl %ebx, -(%ebp)": 1,
                "movl %fs:, %eax;movl %eax, -(%ebp);andl $-, (%eax);jmp  <CcWaitForCurrentLazyWriterActivity+>;movl (%esi), %ecx": 1,
                "andl $-, (%eax);jmp  <CcWaitForCurrentLazyWriterActivity+>;movl (%esi), %ecx;calll - <CcSetReadAheadGranularity+>;orl $-, -(%ebp)": 1,
                "orl $-, -(%ebp);jmp  <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %eax;movl (%eax), %eax;pushl (%eax)": 1,
                "incl (%ecx);movw (%ecx), %dx;cmpw (%ecx), %dx;jb  <CcWaitForCurrentLazyWriterActivity+>;incl (%ecx)": 1,
                "cmpw (%ecx), %dx;jb  <CcWaitForCurrentLazyWriterActivity+>;incl (%ecx);movl (%eax), %ecx;incl (%ecx)": 1,
                "jmp - <CcWaitForCurrentLazyWriterActivity+>;int;int;int;int": 4,
                "testl %edi, %edi;je  <CcWaitForCurrentLazyWriterActivity+>;decl (%edi);movl (%edi), %edi;testl %edi, %edi": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);calll *;movb %al, (%ebx);movl , %eax": 1,
                "jbe  <CcWaitForCurrentLazyWriterActivity+>;movl , %esi;movl (%esi), %ecx;decl ;movl %ecx, ": 2,
                "addl $, -(%ebp);movl -(%ebp), %ecx;incl -(%ebp);xorl %eax, %eax;incl %eax": 2,
                "jg - <CcWaitForCurrentLazyWriterActivity+>;jl  <CcWaitForCurrentLazyWriterActivity+>;cmpl %eax, (%edi);ja - <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %ecx": 1,
                "cmpl %eax, (%ebp);jb  <CcWaitForCurrentLazyWriterActivity+>;leal (%edi), %eax;jmp  <CcWaitForCurrentLazyWriterActivity+>;subl $, -(%ebp)": 1,
                "xorl %edx, %edx;movl %edi, %esi;calll  <_allshl>;subl $, %eax;sbbl $, %edx": 2,
                "popl %edi;movl %esi, %eax;popl %esi;popl %ebx;leave": 39,
                "xorl %eax, %eax;cmpl %eax, (%ebp);jne  <CcWaitForCurrentLazyWriterActivity+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl (%ebp)": 41,
                "movl %eax, %ecx;movl (%ecx), %eax;orl (%ecx), %eax;popl %ebp;retl $": 1,
                "je  <CcWaitForCurrentLazyWriterActivity+>;movl (%edx), %esi;movl %esi, (%eax);movl %ebx, (%eax);andl $, (%edx)": 1,
                "movl %esi, (%edi);movl , %esi;movl $, (%ecx);movl %esi, (%ecx);movl %ecx, (%esi)": 1,
                "movl (%ebp), %ecx;je  <CcWaitForCurrentLazyWriterActivity+>;addl %ecx, (%eax);jmp  <CcWaitForCurrentLazyWriterActivity+>;addl %ecx, (%eax)": 1,
                "leal (%ebx), %eax;xorl %esi, %esi;movl %eax, (%ebp);movl %eax, (%ebp);movl $, %eax": 1,
                "movl %eax, (%ebp);movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;movl $, %edx": 1,
                "jmp  <CcWaitForCurrentLazyWriterActivity+>;movl (%ebp), %eax;movl (%ebx), %ecx;shrl $, %eax;movl (%ecx,%eax,), %eax": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);je  <CcWaitForCurrentLazyWriterActivity+>;cmpw $, (%eax);jne  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "movl (%ecx), %eax;incw (%eax);movl (%ecx), %eax;addl $, %eax;movl (%eax), %edx": 1,
                "movl (%ebp), %edi;movl %edi, (%ebp);movl $, %eax;movl (%ebp), %ecx;movl $, %edx": 1,
                "jmp  <CcWaitForCurrentLazyWriterActivity+>;incl %ecx;movl (%eax), %eax;subl $, %eax;cmpl $, %ecx": 1,
                "subl $, %eax;cmpl $, %ecx;jbe - <CcWaitForCurrentLazyWriterActivity+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %esi;movl (%ebx), %esi;xorl %eax, %eax;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);jne  <CcWaitForCurrentLazyWriterActivity+>;testb $, (%ebx);je  <CcWaitForCurrentLazyWriterActivity+>;cmpl %edi, -(%ebp)": 1,
                "jne  <CcWaitForCurrentLazyWriterActivity+>;testb $, (%ebx);je  <CcWaitForCurrentLazyWriterActivity+>;cmpl %edi, -(%ebp);jne  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "pushl %ebx;calll - <CcWaitForCurrentLazyWriterActivity+>;incl (%eax);movl -(%ebp), %ecx;xorl %eax, %eax": 1,
                "jne  <CcWaitForCurrentLazyWriterActivity+>;andl $, (%ebp);pushl -(%ebp);xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "pushl %ebx;calll - <CcWaitForCurrentLazyWriterActivity+>;pushl $;pushl %edi;jmp  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "movl %eax, (%ecx);pushl %edx;pushl %esi;calll - <CcSetDirtyPinnedData+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp,%eax), %esi;movl -(%ebp,%eax), %eax;pushl %esi;pushl %ebx;movl %edi, (%esi,%eax,)": 1,
                "pushl %esi;pushl %ebx;movl %edi, (%esi,%eax,);calll - <CcWaitForCurrentLazyWriterActivity+>;pushl -(%ebp)": 1,
                "pushl %ebx;calll - <CcWaitForCurrentLazyWriterActivity+>;testl %eax, %eax;je - <CcWaitForCurrentLazyWriterActivity+>;popl %edi": 1,
                "cmpl $, (%eax);jl  <CcWaitForCurrentLazyWriterActivity+>;jg  <CcWaitForCurrentLazyWriterActivity+>;cmpl $, (%eax);jbe  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "jbe  <CcWaitForCurrentLazyWriterActivity+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %eax": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jl  <CcWaitForCurrentLazyWriterActivity+>": 2,
                "pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jl  <CcWaitForCurrentLazyWriterActivity+>;jg  <CcWaitForCurrentLazyWriterActivity+>": 2,
                "cmpl $, (%esi);jbe  <CcWaitForCurrentLazyWriterActivity+>;movl (%esi), %eax;andl $, %eax;pushl %eax": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;xorl %eax, %eax;testl $, (%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;je  <CcWaitForCurrentLazyWriterActivity+>;cmpl %eax, (%ebp);jl  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "jl  <CcWaitForCurrentLazyWriterActivity+>;jg  <CcWaitForCurrentLazyWriterActivity+>;cmpl %eax, %edi;jb  <CcWaitForCurrentLazyWriterActivity+>;andl $, -(%ebp)": 1,
                "pushl $;popl %esi;movl $, %edx;je  <CcWaitForCurrentLazyWriterActivity+>;orl $-, %ecx": 1,
                "cmpl %esi, %eax;movl %eax, -(%ebp);jne  <CcWaitForCurrentLazyWriterActivity+>;movl $, %eax;jmp  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "jne  <CcWaitForCurrentLazyWriterActivity+>;movl $, %eax;jmp  <CcWaitForCurrentLazyWriterActivity+>;cmpl %esi, -(%ebp);je  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "cmpl %edi, (%ebx);movl %edi, -(%ebp);movl $, %edx;jl  <CcWaitForCurrentLazyWriterActivity+>;jg  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "cmpl $, (%ebx);jbe  <CcWaitForCurrentLazyWriterActivity+>;cmpl %edi, -(%ebp);je  <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %ecx": 1,
                "leal (%ebx), %esi;cmpl %esi, %ecx;jne - <CcWaitForCurrentLazyWriterActivity+>;cmpl -(%ebp), %edi;jg  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "jg  <CcWaitForCurrentLazyWriterActivity+>;jl  <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %ecx;cmpl -(%ebp), %ecx;jae  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);je  <CcWaitForCurrentLazyWriterActivity+>;leal -(%ebp), %ecx;calll *": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;xorl %esi, %esi;movl %eax, (%ebx)": 1,
                "movl (%ebp), %ecx;incl -(%ebp);xorl %eax, %eax;incl %eax;xorl %edx, %edx": 1,
                "jg - <CcWaitForCurrentLazyWriterActivity+>;jl  <CcWaitForCurrentLazyWriterActivity+>;cmpl %eax, %edi;ja - <CcWaitForCurrentLazyWriterActivity+>;movl (%ebp), %esi": 1,
                "jl  <CcWaitForCurrentLazyWriterActivity+>;cmpl %eax, %edi;ja - <CcWaitForCurrentLazyWriterActivity+>;movl (%ebp), %esi;movl -(%ebp), %eax": 1,
                "movl (%ebp), %esi;movl -(%ebp), %eax;movl (%ebp), %edi;movl (%ebp), %ecx;subl $, %esi": 1,
                "pushl $;pushl (%ebx);pushl %ebx;calll - <CcWaitForCurrentLazyWriterActivity+>;movl (%ebx), %esi": 1,
                "calll - <CcWaitForCurrentLazyWriterActivity+>;testl %eax, %eax;je  <CcWaitForCurrentLazyWriterActivity+>;pushl $;incl %edi": 1,
                "calll - <CcWaitForCurrentLazyWriterActivity+>;incl (%eax);cmpl -(%ebp), %edi;movl %esi, (%ebx);jb - <CcWaitForCurrentLazyWriterActivity+>": 1,
                "cmpl $, %edi;jne  <CcWaitForCurrentLazyWriterActivity+>;testb $, (%ebx);je  <CcWaitForCurrentLazyWriterActivity+>;pushl $": 1,
                "jne  <CcWaitForCurrentLazyWriterActivity+>;testb $, (%ebx);je  <CcWaitForCurrentLazyWriterActivity+>;pushl $;calll - <CcSetDirtyPinnedData+>": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "je  <CcWaitForCurrentLazyWriterActivity+>;movl %ebx, %ecx;calll  <ExfAcquirePushLockShared>;calll *;movl , %ebx": 1,
                "calll *;movl , %ebx;movb %al, (%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "jg  <CcWaitForCurrentLazyWriterActivity+>;jl  <CcWaitForCurrentLazyWriterActivity+>;cmpl %ecx, -(%ebp);jae  <CcWaitForCurrentLazyWriterActivity+>;testl %eax, %eax": 1,
                "pushl -(%ebp);pushl %edi;calll - <CcWaitForCurrentLazyWriterActivity+>;andl $, (%esi);movb (%ebp), %cl": 1,
                "decw (%esi);movb %al, (%ebp);leal (%esi), %eax;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "jl - <CcWaitForCurrentLazyWriterActivity+>;jg  <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb - <CcWaitForCurrentLazyWriterActivity+>": 1,
                "je  <CcWaitForCurrentLazyWriterActivity+>;movl %edi, %ecx;calll  <ExfReleasePushLock>;xorb %al, %al;jmp - <CcWaitForCurrentLazyWriterActivity+>": 1,
                "andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 9,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl %ebx, %ecx;calll  <_allshr>;movl (%edi,%eax,), %edi": 1,
                "pushl %esi;calll - <CcWaitForCurrentLazyWriterActivity+>;pushl -(%ebp);movl (%ebp), %ecx;addl %ecx, (%eax)": 1,
                "movl (%ebp), %edx;movl %edx, %eax;andl $, %eax;movl (%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl (%ebp), %edi;testb $, (%edi);jne  <CcWaitForCurrentLazyWriterActivity+>;testl $, %edx": 1,
                "testl %ecx, %ecx;jl  <CcWaitForCurrentLazyWriterActivity+>;movl $, %ebx;jg  <CcWaitForCurrentLazyWriterActivity+>;cmpl %ebx, %edx": 1,
                "cmpl %ebx, %edx;jb  <CcWaitForCurrentLazyWriterActivity+>;movl (%ebp), %eax;movb (%eax), %cl;calll *": 1,
                "movl %esi, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 5,
                "calll  <ExfAcquirePushLockShared>;calll *;movl (%ebp), %ecx;movb %al, (%ecx);movl , %esi": 1,
                "movb %al, (%ecx);movl , %esi;cmpl $, %esi;je  <CcWaitForCurrentLazyWriterActivity+>;addl $-, %esi": 1,
                "cmpw %cx, %ax;je  <CcWaitForCurrentLazyWriterActivity+>;cmpl %ecx, -(%ebp);jne  <CcWaitForCurrentLazyWriterActivity+>;cmpl %ecx, %ebx": 1,
                "movl (%eax), %eax;cmpl %ebx, (%eax);je  <CcWaitForCurrentLazyWriterActivity+>;movl (%esi), %eax;cmpl $, %eax": 1,
                "calll *;movl -(%ebp), %eax;testl %eax, %eax;je  <CcWaitForCurrentLazyWriterActivity+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %eax;pushl (%eax);calll - <CcUnpinRepinnedBcb+>": 2,
                "movl %ebx, -(%ebp);leal -(%ebx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 3,
                "movl (%esi), %eax;incl (%eax);movl (%esi), %eax;testl %eax, %eax;je  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "movw $, (%esi);incl (%edi);movl (%ebp), %eax;movb (%eax), %cl;calll *": 1,
                "pushl %esi;calll  <CcMdlWriteComplete+>;calll *;movl (%ebp), %ecx;movb %al, (%ecx)": 2,
                "calll - <CcPrepareMdlWrite+>;movl (%ebp), %eax;movb (%eax), %cl;calll *;andl $, -(%ebp)": 1,
                "movl (%edi), %ecx;sbbl -(%ebp), %ecx;movl %ecx, -(%ebp);jne  <CcWaitForCurrentLazyWriterActivity+>;cmpl $, %eax": 1,
                "jge  <CcWaitForCurrentLazyWriterActivity+>;leal (%edi), %eax;movl %eax, -(%ebp);movl (%eax), %ebx;movl %ebx, -(%ebp)": 1,
                "jbe  <CcWaitForCurrentLazyWriterActivity+>;movl (%edi), %eax;andl $, %eax;pushl %eax;pushl %ebx": 1,
                "movl (%edi), %eax;andl $, %eax;pushl %eax;pushl %ebx;movl , %eax": 1,
                "movl -(%ebp), %ecx;calll  <ExfReleasePushLock>;pushl $;calll  <ExRaiseStatus>;jmp  <CcWaitForCurrentLazyWriterActivity+>": 1,
                "testl %eax, %eax;je  <CcWaitForCurrentLazyWriterActivity+>;calll *;movl (%ebp), %ebx;movb %al, (%ebx)": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 5,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;leal (%ebx), %edi;movl (%edi), %esi": 2,
                "pushl %esi;pushl %edi;leal (%ebx), %edi;movl (%edi), %esi;andl $, %eax": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %esi;andl $-, %esi;leal -(%esi), %eax;movl %ebx, -(%ebp)": 2,
                "pushl (%ebp);pushl %eax;calll  <RtlCompareUnicodeString>;popl %ebp;retl $": 1,
                "testl %ecx, %ecx;movl (%ebp), %eax;je  <ExFreeToPagedLookasideList+>;movl (%ecx), %edx;addl $, %eax": 1,
                "movl (%ecx), %edx;addl $, %eax;movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx)": 3,
                "movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);jmp  <ExFreeToPagedLookasideList+>": 1,
                "movl %eax, (%edx);movl %eax, (%ecx);jmp  <ExFreeToPagedLookasideList+>;testb $, (%eax);je  <ExFreeToPagedLookasideList+>": 1,
                "pushl $;calll - <ExFreeToPagedLookasideList>;popl %ebp;retl $;int": 7,
                "movl (%edi), %eax;movl (%edi), %ecx;pushl (%ebp);movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movl %eax, (%ecx);movl %ecx, (%eax);decw (%esi);pushl %edi;calll - <ExFreeToPagedLookasideList+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;pushl %ebx": 1,
                "movl %eax, -(%ebp);calll  <IoGetBaseFileSystemDeviceObject>;movl %eax, %edi;movl (%edi), %eax;movl (%eax), %ebx": 2,
                "cmpb $, -(%ebp);jne  <FsRtlRegisterFileSystemFilterCallbacks+>;movl %ecx, -(%ebp);jmp  <FsRtlRegisterFileSystemFilterCallbacks+>;pushl $": 1,
                "jmp  <FsRtlRegisterFileSystemFilterCallbacks+>;pushl $;pushl (%ebp);leal -(%ebp), %eax;pushl %edi": 1,
                "testl %eax, %eax;jl  <FsRtlRegisterFileSystemFilterCallbacks+>;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "pushl %eax;calll  <FsRtlCheckOplock+>;cmpl $, %eax;movl %eax, -(%ebp);jne  <FsRtlRegisterFileSystemFilterCallbacks+>": 2,
                "cmpl $, %eax;movl %eax, -(%ebp);jne  <FsRtlRegisterFileSystemFilterCallbacks+>;andl $, -(%ebp);jmp  <FsRtlRegisterFileSystemFilterCallbacks+>": 2,
                "movl %eax, -(%ebp);jne  <FsRtlRegisterFileSystemFilterCallbacks+>;andl $, -(%ebp);jmp  <FsRtlRegisterFileSystemFilterCallbacks+>;testl %eax, %eax": 2,
                "pushl -(%ebp);calll  <IoGetDeviceAttachmentBaseRef>;movl %eax, %edi;movl (%edi), %eax;movl (%eax), %ebx": 2,
                "movl (%edi), %eax;movl (%eax), %ebx;movl (%eax), %eax;movl (%eax), %esi;movb $, -(%ebp)": 6,
                "je  <FsRtlRegisterFileSystemFilterCallbacks+>;cmpl $, (%ebx);jb  <FsRtlRegisterFileSystemFilterCallbacks+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "je  <FsRtlRegisterFileSystemFilterCallbacks+>;pushl %edi;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);calll *%eax;movl %eax, -(%ebp);jmp  <FsRtlRegisterFileSystemFilterCallbacks+>;movl $, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);je  <FsRtlRegisterFileSystemFilterCallbacks+>;cmpl $, -(%ebp);je  <FsRtlRegisterFileSystemFilterCallbacks+>;cmpb %al, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp  <FsRtlRegisterFileSystemFilterCallbacks+>;movb (%esi), %dl;testb $, %dl;jne  <FsRtlRegisterFileSystemFilterCallbacks+>": 1,
                "movl %eax, %edi;xorb %bl, %bl;jmp  <FsRtlRegisterFileSystemFilterCallbacks+>;movb $, %bl;testb %bl, %bl": 1,
                "jmp  <FsRtlRegisterFileSystemFilterCallbacks+>;calll  <ExAcquireSharedWaitForExclusive>;testb %al, %al;je  <FsRtlRegisterFileSystemFilterCallbacks+>;movb (%esi), %cl": 1,
                "testb %al, %al;je  <FsRtlRegisterFileSystemFilterCallbacks+>;movb (%esi), %cl;testb $, %cl;jne  <FsRtlRegisterFileSystemFilterCallbacks+>": 1,
                "movl (%esi), %ecx;calll  <ExReleaseResourceLite>;testl %edi, %edi;jne  <FsRtlRegisterFileSystemFilterCallbacks+>;movl $, -(%ebp)": 1,
                "pushl %edi;calll  <ExConvertExclusiveToSharedLite>;movl (%ebp), %eax;andl $, -(%ebp);movl %edi, (%eax)": 1,
                "cmpw $, (%eax);jbe  <FsRtlRegisterFileSystemFilterCallbacks+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 2,
                "je  <FsRtlRegisterFileSystemFilterCallbacks+>;movl (%ebp), %ecx;calll  <ExReleaseResourceLite>;andl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "calll  <ExReleaseResourceLite>;andl $, -(%ebp);cmpl $, -(%ebp);je  <FsRtlRegisterFileSystemFilterCallbacks+>;movl -(%ebp), %eax": 1,
                "jmp  <FsRtlMdlReadComplete+>;pushl %esi;pushl (%ebp);pushl %edi;calll - <FsRtlMdlReadCompleteDev>": 1,
                "jne  <ExAllocateFromPagedLookasideList+>;pushl (%esi);incl (%esi);pushl (%esi);pushl (%esi)": 1,
                "leal -(%eax), %edx;testl %edx, %edx;je  <FsRtlLookupLastLargeMcbEntry+>;movl -(%ecx,%eax,), %edx;movl (%esi), %eax": 1,
                "movb -(%ebp), %al;calll  <wctomb+>;retl $;movl -(%ebp), %eax;movl (%eax), %ecx": 6,
                "retl $;movl -(%ebp), %eax;movl (%eax), %ecx;calll *;retl": 9,
                "xorl %ecx, %ecx;movl (%ebp), %eax;cmpl $-, (%eax);setne %cl;decl %ecx": 2,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;pushl %edi;calll *": 4,
                "jmp  <FsRtlGetNextLargeMcbEntry+>;testl %edx, %edx;jne  <FsRtlGetNextLargeMcbEntry+>;xorl %edi, %edi;jmp  <FsRtlGetNextLargeMcbEntry+>": 1,
                "testl %edx, %edx;jne  <FsRtlGetNextLargeMcbEntry+>;xorl %ecx, %ecx;jmp  <FsRtlGetNextLargeMcbEntry+>;movl (%esi), %ecx": 1,
                "movl %eax, -(%ebp);cmpl %ecx, -(%ebp);jle - <FsRtlGetNextLargeMcbEntry+>;movl (%ebp), %eax;movl %edi, (%eax)": 1,
                "movb $, %al;jmp - <FsRtlGetNextLargeMcbEntry+>;int;int;int": 1,
                "movl %ecx, %eax;shrl $, %ecx;movl %edi, -(%ebp);rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 2,
                "jmp  <FsRtlGetNextLargeMcbEntry+>;pushl $;pushl (%ebx);calll  <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "je  <FsRtlGetNextMcbEntry+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movl %edx, (%ecx);movl -(%ebp), %ecx": 1,
                "movl %edi, (%eax);movl (%esi), %eax;movb %cl, (%eax);movl (%esi), %eax;movb $, (%eax)": 1,
                "movl (%esi), %eax;movb %cl, (%eax);movl (%esi), %eax;movb $, (%eax);movl (%esi), %eax": 1,
                "movl %eax, (%esi);cmpl %ecx, %eax;jne  <FsRtlInitializeLargeMcb+>;pushl $;calll - <ExAllocateFromPagedLookasideList>": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <FsRtlUninitializeLargeMcb+>": 1,
                "jne  <FsRtlUninitializeLargeMcb+>;cmpl $, (%esi);jne  <FsRtlUninitializeLargeMcb+>;pushl (%esi);pushl $": 1,
                "pushl $;calll - <ExFreeToPagedLookasideList>;jmp  <FsRtlUninitializeLargeMcb+>;pushl $;pushl (%esi)": 1,
                "pushl $;pushl (%esi);calll  <ExFreePoolWithTag>;popl %esi;popl %ebp": 1,
                "calll *;xorl %edi, %edi;movl %edi, -(%ebp);movl (%ebp), %esi;cmpl %edi, %esi": 1,
                "xorl %eax, %eax;jmp  <FsRtlTruncateLargeMcb+>;cmpl %edi, %edx;je - <FsRtlTruncateLargeMcb+>;movl (%ecx), %eax": 1,
                "cmpl %edx, %eax;jne  <FsRtlTruncateLargeMcb+>;cmpl %ecx, (%ebx);jne  <FsRtlTruncateLargeMcb+>;pushl $": 1,
                "testl %edi, %edi;jne  <FsRtlAddLargeMcbEntry+>;xorl %ebx, %ebx;jmp  <FsRtlAddLargeMcbEntry+>;movl -(%edx), %ebx": 1,
                "jne  <FsRtlAddLargeMcbEntry+>;xorl %ebx, %ebx;jmp  <FsRtlAddLargeMcbEntry+>;movl -(%edx), %ebx;subl %ebx, %ecx": 1,
                "cmpl $, -(%ebp);jne  <FsRtlAddLargeMcbEntry+>;xorl %eax, %eax;jmp  <FsRtlAddLargeMcbEntry+>;movl -(%edx), %eax": 3,
                "movl (%esi), %eax;movl -(%eax,%ebx,), %edx;movl (%esi), %eax;leal (%eax,%edi), %ecx;movl -(%ecx), %eax": 1,
                "pushl $;pushl %ebx;pushl %esi;calll - <FsRtlGetNextLargeMcbEntry+>;movl (%esi), %eax": 5,
                "movl %ecx, (%eax,%edi);movl (%esi), %eax;movl -(%ebp), %ecx;movl %ecx, (%edi,%eax);jmp  <FsRtlAddLargeMcbEntry+>": 1,
                "cmpl %ecx, -(%edx);je  <FsRtlAddLargeMcbEntry+>;leal -(%eax), %ecx;testl %ecx, %ecx;jne  <FsRtlAddLargeMcbEntry+>": 1,
                "movl -(%ecx,%eax,), %eax;movl (%esi), %ecx;leal (%ecx,%edi), %ebx;movl -(%ebx), %ecx;addl -(%ebx), %ecx": 1,
                "movl %ecx, (%edx);pushl $;jmp - <FsRtlAddLargeMcbEntry+>;testl %eax, %eax;jne  <FsRtlAddLargeMcbEntry+>": 1,
                "je  <FsRtlAddLargeMcbEntry+>;leal -(%edi), %eax;testl %eax, %eax;jne  <FsRtlAddLargeMcbEntry+>;xorl %ecx, %ecx": 1,
                "testl %ebx, %ebx;je  <FsRtlAddLargeMcbEntry+>;testl %edi, %edi;jne  <FsRtlAddLargeMcbEntry+>;orl $-, %eax": 1,
                "testl %edi, %edi;jne  <FsRtlAddLargeMcbEntry+>;orl $-, %eax;jmp  <FsRtlAddLargeMcbEntry+>;movl (%esi), %eax": 1,
                "addl %ebx, %eax;movl (%esi), %ecx;movl %eax, (%edi,%ecx);movb $, -(%ebp);orl $-, -(%ebp)": 1,
                "movl -(%ebp), %ecx;cmpl %ebx, %edi;je  <FsRtlLookupLargeMcbEntry+>;movl (%esi), %eax;leal (%eax,%ecx,), %edx": 1,
                "je  <FsRtlLookupLargeMcbEntry+>;cmpl %ebx, %ecx;jne  <FsRtlLookupLargeMcbEntry+>;xorl %edx, %edx;jmp  <FsRtlLookupLargeMcbEntry+>": 1,
                "jmp  <FsRtlSplitLargeMcb+>;movl -(%ebp), %ebx;movl %ebx, %edi;shll $, %edi;movl (%esi), %eax": 1,
                "movl %ebx, %edi;shll $, %edi;movl (%esi), %eax;leal (%eax,%edi), %edx;cmpl $-, (%edx)": 1,
                "jne  <FsRtlSplitLargeMcb+>;orl $-, %eax;jmp  <FsRtlSplitLargeMcb+>;leal -(%ebx), %ecx;testl %ecx, %ecx": 1,
                "movl %ecx, (%eax);movl (%esi), %ecx;movl (%ebp), %eax;movl %eax, (%edi,%ecx);movl (%esi), %ecx": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ecx, %ecx;cmpl %ecx, (%ebp);pushl %edi": 1,
                "testl %ebx, %ebx;je  <FsRtlSplitLargeMcb+>;movl -(%eax), %edx;cmpl %edi, %edx;je  <FsRtlSplitLargeMcb+>": 4,
                "cmpl (%ebp), %ebx;jae  <FsRtlSplitLargeMcb+>;cmpl %edi, (%eax);je  <FsRtlSplitLargeMcb+>;movl %edi, (%eax)": 2,
                "cmpl %edi, (%eax);je  <FsRtlSplitLargeMcb+>;movl %edi, (%eax);jmp  <FsRtlSplitLargeMcb+>;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;jne  <FsRtlSplitLargeMcb+>;cmpl (%ebp), %ebx;jae - <FsRtlSplitLargeMcb+>;cmpl %edi, (%eax)": 1,
                "movl %ebx, %edi;shll $, %edi;cmpl (%ebp), %eax;je  <FsRtlSplitLargeMcb+>;movl (%esi), %eax": 1,
                "je  <FsRtlSplitLargeMcb+>;movl (%esi), %edx;decl %edx;cmpl %edx, %ebx;jne  <FsRtlSplitLargeMcb+>": 1,
                "cmpl $-, (%eax);je - <FsRtlSplitLargeMcb+>;pushl $;incl %ebx;pushl %ebx": 1,
                "je - <FsRtlSplitLargeMcb+>;pushl $;incl %ebx;pushl %ebx;pushl %esi": 1,
                "incl %ebx;pushl %ebx;pushl %esi;calll - <FsRtlGetNextLargeMcbEntry+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;movl %ecx, (%edi,%eax);movl (%esi), %eax;orl $-, (%eax,%edi)": 1,
                "addl (%edi), %edx;movl -(%ebp), %ecx;addl %edx, (%edi);andl $, (%ebp);movl %ecx, (%ebp)": 1,
                "je  <FsRtlSplitLargeMcb+>;testl %ebx, %ebx;je  <FsRtlSplitLargeMcb+>;cmpl $-, -(%eax);je  <FsRtlSplitLargeMcb+>": 1,
                "pushl (%ebp);pushl %eax;pushl (%ebp);pushl %eax;pushl (%ebp)": 1,
                "calll - <FsRtlAddLargeMcbEntry>;popl %ebp;retl $;int;int": 1,
                "orl $-, -(%ebp);calll  <FsRtlRemoveMcbEntry+>;calll  <wctomb+>;retl $;movl -(%ebp), %eax": 1,
                "testb %al, %al;je  <FsRtlLookupMcbEntry+>;movl -(%ebp), %ecx;movl (%ebp), %edx;incl %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);je  <FsRtlRemoveLargeMcbEntry+>;movl (%ebp), %eax": 1,
                "pushl (%ebp);movl %ecx, (%eax);calll *(%ebp);movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "jmp  <FsRtlRemoveLargeMcbEntry+>;movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;movb $, %dl": 1,
                "movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;testl %eax, %eax;je  <FsRtlInitializeFileLock+>": 2,
                "andl $, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <FsRtlInitializeFileLock+>;movb $, (%eax)": 2,
                "orl (%eax), %ebx;je  <FsRtlInitializeFileLock+>;movl (%ebp), %eax;cmpl (%eax), %edx;ja  <FsRtlInitializeFileLock+>": 1,
                "jmp  <FsRtlInitializeFileLock+>;movl (%ebp), %ebx;movl (%ebp), %eax;testl %eax, %eax;je  <FsRtlInitializeFileLock+>": 1,
                "testl %eax, %eax;je  <FsRtlInitializeFileLock+>;movb $, (%eax);movl (%edi), %edi;jmp  <FsRtlInitializeFileLock+>": 1,
                "movb $, (%eax);movl (%edi), %edi;testl %edi, %edi;jne - <FsRtlInitializeFileLock+>;testl %edi, %edi": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <FsRtlInitializeFileLock+>;movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "je  <FsRtlInitializeFileLock+>;movl %ecx, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <FsRtlInitializeFileLock+>": 1,
                "movl (%ebp), %eax;movl (%ebp), %edi;cmpl (%edi), %esi;jne  <FsRtlInitializeFileLock+>;cmpl (%edi), %edx": 1,
                "movl %ecx, -(%ebp);je  <FsRtlInitializeFileLock+>;movl %ecx, (%edx);testl %eax, %eax;je - <FsRtlInitializeFileLock+>": 1,
                "pushl %ebx;pushl %esi;pushl %edi;je  <FsRtlInitializeFileLock+>;movl (%ebp), %ecx": 1,
                "pushl %edi;je  <FsRtlInitializeFileLock+>;movl (%ebp), %ecx;movl (%ecx), %edx;movl (%ecx), %edi": 1,
                "je  <FsRtlInitializeFileLock+>;movl (%eax), %eax;testl %eax, %eax;jne - <FsRtlInitializeFileLock+>;jmp  <FsRtlInitializeFileLock+>": 1,
                "movl (%eax), %ecx;cmpl (%esi), %ecx;jbe  <FsRtlInitializeFileLock+>;xorl %eax, %eax;popl %edi": 1,
                "movl -(%ebp), %ecx;cmpl (%eax), %ecx;jne  <FsRtlGetNextFileLock+>;cmpl (%eax), %edi;jne  <FsRtlGetNextFileLock+>": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;jne - <FsRtlGetNextFileLock+>;jmp  <FsRtlGetNextFileLock+>;pushl (%ebx)": 1,
                "testl %ecx, %ecx;jne - <FsRtlGetNextFileLock+>;jmp  <FsRtlGetNextFileLock+>;pushl (%ebx);calll - <FsRtlInitializeFileLock+>": 1,
                "movl (%ecx), %ebx;testl %ebx, %ebx;je  <FsRtlGetNextFileLock+>;movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %esi;cmpl (%ebx), %esi;jne  <FsRtlGetNextFileLock+>;movl -(%ebp), %esi;cmpl (%ebx), %esi": 4,
                "je  <FsRtlGetNextFileLock+>;leal (%ebx), %esi;movl %ebx, -(%ebp);jmp  <FsRtlGetNextFileLock+>;movl (%ebx), %eax": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movb $, -(%ebp);movb -(%ebp), %cl;calll *": 1,
                "calll  <RtlSplay>;movl %eax, (%esi);testl %edi, %edi;je  <FsRtlGetNextFileLock+>;leal -(%edi), %eax": 1,
                "movb $, -(%ebp);cmpl $, (%ebp);je  <FsRtlGetNextFileLock+>;pushl (%ebp);calll  <RtlSplay>": 1,
                "movb $, %al;jmp  <FsRtlFastCheckLockForRead+>;movl (%ebp), %edx;pushl %ebx;movl (%edx), %ebx": 1,
                "movl (%edx), %edi;adcl %edi, %ecx;addl $-, %eax;movl %eax, -(%ebp);adcl $-, %ecx": 2,
                "je - <FsRtlFastCheckLockForRead+>;pushl %esi;pushl %ecx;pushl (%ebp);leal -(%ebp), %eax": 1,
                "cmpl (%eax), %ebx;jb  <FsRtlFastCheckLockForWrite+>;cmpl (%eax), %ecx;ja  <FsRtlFastCheckLockForWrite+>;jb  <FsRtlFastCheckLockForWrite+>": 1,
                "cmpl (%eax), %ecx;ja  <FsRtlFastCheckLockForWrite+>;movl (%eax), %ecx;cmpl (%ebp), %ecx;jne  <FsRtlFastCheckLockForWrite+>": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 13,
                "leal (%ebp), %eax;pushl %eax;leal (%esi), %eax;pushl %eax;leal (%esi), %eax": 1,
                "leal (%esi), %eax;pushl %eax;leal (%esi), %eax;pushl %eax;pushl (%edi)": 1,
                "pushl %eax;calll  <RtlRealSuccessor>;jmp  <FsRtlFastCheckLockForWrite+>;movl (%ebp), %eax;cmpl %ecx, %eax": 1,
                "movl (%ebp), %esi;pushl %edi;je  <FsRtlFastCheckLockForWrite+>;pushl $;leal -(%ebp), %ecx": 1,
                "pushl $;leal -(%ebp), %ecx;pushl %ecx;leal (%esi), %edi;pushl %edi": 1,
                "movl (%esi), %ecx;orl (%esi), %ecx;jne  <FsRtlFastCheckLockForWrite+>;movl (%eax), %ecx;orl (%eax), %ecx": 3,
                "orl (%esi), %ecx;jne  <FsRtlFastCheckLockForWrite+>;movl (%eax), %ecx;orl (%eax), %ecx;jne  <FsRtlFastCheckLockForWrite+>": 2,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $;leal (%ebp), %ecx": 1,
                "jne  <FsRtlFastCheckLockForWrite+>;movl (%eax), %ecx;cmpl (%esi), %ecx;je  <FsRtlFastCheckLockForWrite+>;movl (%esi), %ecx": 1,
                "calll  <RtlSplay>;movl %eax, (%ebx);movb -(%ebp), %al;popl %ebx;leave": 1,
                "je  <FsRtlFastCheckLockForWrite+>;movl (%eax), %ecx;cmpl (%esi), %ecx;ja - <FsRtlFastCheckLockForWrite+>;jb  <FsRtlFastCheckLockForWrite+>": 1,
                "jmp  <FsRtlFastCheckLockForWrite+>;pushl $;calll  <ExRaiseStatus>;orl $-, (%esi);leal (%esi), %eax": 1,
                "leal (%ebx), %esi;jmp  <FsRtlUninitializeFileLock+>;movl (%esi), %edi;pushl %esi;pushl %edi": 1,
                "jmp  <FsRtlUninitializeFileLock+>;movl (%ebx), %edi;testl %edi, %edi;je  <FsRtlUninitializeFileLock+>;movl (%edi), %eax": 1,
                "jne - <FsRtlUninitializeFileLock+>;movb -(%ebp), %cl;calll *;pushl %ebx;calll - <FsRtlFastCheckLockForWrite+>": 1,
                "pushl %edx;calll - <FsRtlInitializeFileLock>;movl %edx, %eax;popl %ebp;retl $": 1,
                "movl %ecx, -(%ebp);movl (%esi), %ecx;movl %esi, %eax;movb $, (%esi);movl %ecx, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl (%eax), %edx;movl (%ecx), %edi;movl (%eax), %eax;movl (%ecx), %ecx": 1,
                "cmpl %ebx, (%esi);movl %edx, -(%ebp);movl %eax, -(%ebp);movl %edi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "ja  <FsRtlCheckLockForWriteAccess+>;cmpl %edi, %edx;jbe  <FsRtlCheckLockForWriteAccess+>;movl (%ebp), %eax;movl (%esi), %ecx": 1,
                "jmp  <FsRtlCheckLockForWriteAccess+>;movb $, (%ebp);movl (%eax), %edi;movl %eax, (%ebp);jmp  <FsRtlCheckLockForWriteAccess+>": 1,
                "movl (%eax), %edi;movl %eax, (%ebp);jmp  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax;movl (%ebp), %ecx": 1,
                "pushl $;calll - <ExAllocateFromPagedLookasideList>;movl %eax, %ebx;xorl %eax, %eax;cmpl %eax, %ebx": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%ebp);movl (%edi), %edi": 1,
                "movl %edi, (%ebp);movl (%edi), %edi;testl %edi, %edi;jne - <FsRtlCheckLockForWriteAccess+>;movl -(%ebp), %eax": 1,
                "jne  <FsRtlCheckLockForWriteAccess+>;movl %edi, (%eax);jmp  <FsRtlCheckLockForWriteAccess+>;pushl %eax;calll  <RtlRealSuccessor>": 1,
                "movl %ebx, %edi;movl %eax, (%esi);jne  <FsRtlCheckLockForWriteAccess+>;movb $, (%esi);jmp  <FsRtlCheckLockForWriteAccess+>": 1,
                "movl (%eax), %eax;movl %edi, -(%ebp);movl %eax, -(%ebp);addl $, %esi;calll *": 1,
                "jne  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %ecx;cmpl (%ebp), %ecx;jne  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %ecx": 2,
                "jne  <FsRtlCheckLockForWriteAccess+>;movl %ecx, (%edi);cmpl %edi, %ecx;movl (%esi), %edx;movl %edx, (%ecx)": 1,
                "pushl %eax;calll  <RtlDelete>;movl (%ebp), %ecx;addl $, %ecx;pushl %edi": 1,
                "pushl %edi;calll - <FsRtlCheckLockForWriteAccess+>;cmpb $, (%ebp);jne  <FsRtlCheckLockForWriteAccess+>;cmpl $, (%ebx)": 1,
                "je  <FsRtlCheckLockForWriteAccess+>;movb -(%ebp), %cl;calll *;leal (%esi), %eax;pushl %eax": 1,
                "cmpl (%ebp), %eax;jne  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax;cmpl -(%ebp), %eax;jne  <FsRtlCheckLockForWriteAccess+>": 1,
                "jne  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax;cmpl -(%ebp), %eax;jne  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax": 2,
                "movl (%esi), %eax;cmpl -(%ebp), %eax;jne  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax;cmpl (%ebx), %eax": 1,
                "movl (%esi), %eax;cmpl (%ebx), %eax;je  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax;cmpl -(%ebp), %eax": 1,
                "movl (%esi), %eax;cmpl -(%ebp), %eax;ja  <FsRtlCheckLockForWriteAccess+>;jb  <FsRtlCheckLockForWriteAccess+>;movl (%esi), %eax": 1,
                "pushl %ecx;leal (%ebp), %ecx;pushl %ecx;leal (%edi), %ebx;pushl %ebx": 1,
                "andl $, (%ecx);movl %ecx, (%ecx);movb $, (%eax);movl %edi, (%eax);movl %edi, (%eax)": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl (%ecx), %eax;jb  <FsRtlCheckLockForWriteAccess+>": 1,
                "movl %ecx, %eax;movl (%ecx), %ecx;testl %ecx, %ecx;movl %eax, (%ebp);jne - <FsRtlCheckLockForWriteAccess+>": 1,
                "movl (%eax), %ecx;pushl -(%ebp);movl %ecx, (%edi);movl %edi, (%eax);calll  <RtlSplay>": 1,
                "pushl -(%ebp);movl %ecx, (%edi);movl %edi, (%eax);calll  <RtlSplay>;movl -(%ebp), %ecx": 1,
                "movl %eax, (%ecx);movl (%ebx), %eax;movl (%ebx), %ebx;cmpl (%esi), %ebx;jb  <FsRtlCheckLockForWriteAccess+>": 1,
                "leal -(%edi), %ebx;movl (%ebx), %eax;movl (%eax), %ecx;cmpl (%esi), %ecx;ja  <FsRtlCheckLockForWriteAccess+>": 1,
                "cmpl (%esi), %eax;jbe  <FsRtlCheckLockForWriteAccess+>;cmpb $, (%ebx);je  <FsRtlCheckLockForWriteAccess+>;movb $, (%esi)": 1,
                "je  <FsRtlCheckLockForWriteAccess+>;movb $, (%esi);movl (%ebx), %eax;movl %eax, (%esi);movl (%ebx), %eax": 1,
                "movl %eax, (%esi);movl (%ebx), %eax;movl %eax, (%esi);pushl -(%ebp);pushl %edi": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);pushl -(%ebp);pushl %edi;calll  <RtlDeleteNoSplay>": 1,
                "xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax;pushl %esi": 3,
                "calll  <IoReleaseVpbSpinLock>;calll *;movb %al, %cl;movb $, %al;movl $, %edx": 1,
                "pushl (%esi);calll - <FsRtlRemoveLargeMcbEntry+>;pushl %esi;calll - <FsRtlFastCheckLockForWrite+>;jmp  <FsRtlCheckLockForWriteAccess+>": 1,
                "jmp  <FsRtlFastUnlockSingle+>;pushl $;pushl $;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%esi);calll - <FsRtlCheckLockForWriteAccess+>;popl %esi;popl %ebp;retl $": 1,
                "movl %edi, (%ebp);rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi;pushl %eax;leal (%esi), %eax": 2,
                "movl (%ebp), %eax;addl $, %eax;pushl %edi;movl (%eax), %edi;testl %edi, %edi": 1,
                "adcl -(%ebp), %ecx;addl $-, %eax;movl %eax, -(%ebp);movl (%esi), %eax;adcl $-, %ecx": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);calll  <IoGetRequestorProcess>;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "movl %eax, -(%ebp);movb (%esi), %al;shrb %al;andb $, %al;movb %al, -(%ebp)": 1,
                "pushl %eax;pushl %ebx;pushl (%edi);movl (%ebp), %ebx;pushl (%ebx)": 1,
                "pushl (%ebx);calll - <FsRtlRemoveLargeMcbEntry+>;cmpb $, -(%ebp);je  <FsRtlFastUnlockSingle+>;cmpl $, -(%ebp)": 1,
                "movl $, %eax;jmp  <FsRtlFastUnlockSingle+>;movl (%ebp), %eax;andl $, (%eax);pushl %esi": 1,
                "movl $, %esi;jmp  <FsRtlFastUnlockSingle+>;testl %eax, %eax;pushl %ebx;je  <FsRtlFastUnlockSingle+>": 1,
                "movb %al, (%ebp);movl -(%ebp), %eax;pushl %eax;leal -(%eax), %edi;calll  <RtlRealSuccessor>": 1,
                "movl %ecx, -(%ebp);movl %edx, -(%ebp);movl (%eax), %ecx;cmpl (%edi), %ecx;jne  <FsRtlFastUnlockSingle+>": 1,
                "ja  <FsRtlFastUnlockSingle+>;cmpl -(%ebp), %eax;jbe  <FsRtlFastUnlockSingle+>;movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl (%edi), %esi;testl %esi, %esi;je  <FsRtlFastUnlockSingle+>;jmp  <FsRtlFastUnlockSingle+>": 1,
                "movl %eax, %edi;movl (%ebp), %eax;cmpl %eax, (%esi);jne  <FsRtlFastUnlockSingle+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;cmpl %eax, (%esi);jne  <FsRtlFastUnlockSingle+>;cmpb $, (%ebp);je  <FsRtlFastUnlockSingle+>": 1,
                "cmpl %eax, (%esi);jne  <FsRtlFastUnlockSingle+>;pushl %esi;calll  <RtlDelete>;movl -(%ebp), %ebx": 1,
                "je  <FsRtlFastUnlockSingle+>;movb -(%ebp), %cl;calll *;leal (%esi), %eax;pushl %eax": 1,
                "pushl (%ebp);movl -(%ebp), %eax;calll *(%eax);calll *;movl (%ebx), %edi": 1,
                "jne  <FsRtlFastUnlockSingle+>;leal (%edi), %eax;pushl %eax;calll  <IoAcquireVpbSpinLock>;leal (%edi), %eax": 1,
                "cmpl (%eax), %esi;jne  <FsRtlFastUnlockSingle+>;movl %ebx, (%eax);movb -(%ebp), %cl;calll *": 1,
                "movl %esi, %ebx;movl (%ebx), %esi;testl %esi, %esi;jne - <FsRtlFastUnlockSingle+>;movl -(%ebp), %edi": 1,
                "jne - <FsRtlFastUnlockSingle+>;movl -(%ebp), %edi;pushl -(%ebp);leal (%edi), %eax;pushl %eax": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl $;pushl $;pushl (%ebp)": 2,
                "calll - <FsRtlFastUnlockSingle+>;popl %ebp;retl $;int;int": 2,
                "pushl $;pushl $;calll  <wctomb+>;cmpl $, (%ebp);sete -(%ebp)": 1,
                "movb %al, -(%ebp);testb %al, %al;jne  <FsRtlPrivateLock+>;cmpb %al, (%ebp);je  <FsRtlPrivateLock+>": 1,
                "movl $, (%eax);jmp  <FsRtlPrivateLock+>;cmpl $, (%ebp);je  <FsRtlPrivateLock+>;pushl $": 1,
                "movl %esi, -(%ebp);testl %esi, %esi;jne  <FsRtlPrivateLock+>;pushl $;calll  <ExRaiseStatus>": 1,
                "testl %esi, %esi;jne  <FsRtlPrivateLock+>;pushl $;calll  <ExRaiseStatus>;movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl %edx, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);movl (%edx), %eax;movb (%eax), %cl;orb $, %cl": 1,
                "movl %esi, (%edi);jmp  <FsRtlPrivateLock+>;movl (%edi), %eax;movl %esi, (%eax);movl %esi, (%edi)": 1,
                "jmp  <FsRtlPrivateLock+>;movl (%ebp), %eax;andl $, (%eax);movb $, -(%ebp);orl $-, -(%ebp)": 1,
                "andl $, (%eax);movb $, -(%ebp);orl $-, -(%ebp);calll  <FsRtlPrivateLock+>;movb -(%ebp), %al": 1,
                "cmpb $, -(%ebp);je  <FsRtlPrivateLock+>;movb -(%ebp), %cl;calll *;calll  <_abnormal_termination>": 1,
                "pushl (%edi);pushl (%ebp);pushl (%ebp);pushl (%ebx);calll - <FsRtlRemoveLargeMcbEntry+>": 1,
                "pushl (%ebp);pushl (%ebx);calll - <FsRtlRemoveLargeMcbEntry+>;movl -(%ebp), %esi;testl %esi, %esi": 1,
                "movl %esi, (%edi);calll  <IofCompleteRequest>;movl %esi, -(%ebp);jmp  <FsRtlProcessFileLock+>;pushl (%ebp)": 1,
                "pushl %eax;pushl (%esi);movl (%ebp), %esi;pushl %esi;calll - <FsRtlFastUnlockAll>": 1,
                "pushl (%ebp);movl %eax, -(%ebp);movl (%esi), %eax;pushl %edi;movl %eax, -(%ebp)": 1,
                "pushl %edi;calll  <IoGetRequestorProcess>;pushl %eax;pushl (%esi);leal -(%ebp), %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;cmpl $, %eax;je  <FsRtlIsNtstatusExpected+>;cmpl $, %eax": 1,
                "calll  <ExAllocatePoolWithQuotaTag>;movl %eax, %esi;testl %esi, %esi;jne  <FsRtlAllocatePoolWithQuota+>;pushl $": 1,
                "jne  <FsRtlAllocatePoolWithQuota+>;pushl $;calll  <ExRaiseStatus>;movl %esi, %eax;popl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp)": 21,
                "movl (%ebp), %edi;leal -(%edi), %esi;movl (%esi), %eax;movl (%eax), %ecx;calll  <ObfDereferenceObject>": 1,
                "movl (%edi), %eax;movl (%edi), %edi;movl %eax, (%edi);movl %edi, (%eax);movb (%esi), %al": 1,
                "movl %esi, %ecx;movl $, (%esi);sbbl %eax, %eax;andl $, %eax;movl %eax, (%esi)": 1,
                "movl (%esi), %ecx;movl %eax, (%ecx);pushl %edi;movl %ecx, (%eax);movl (%esi), %edi": 1,
                "leal (%edi), %ebx;pushl %ebx;calll  <IoAcquireVpbSpinLock>;leal (%edi), %eax;movl %eax, (%ebp)": 1,
                "pushl %eax;calll  <IoReleaseVpbSpinLock>;movl (%esi), %eax;movl %eax, (%edi);movb (%edi), %al": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movb (%edi), %al;negb %al;pushl %edi": 1,
                "andl $, (%edi);pushl (%esi);pushl (%esi);calll *(%esi);pushl $": 1,
                "pushl $;pushl %esi;calll  <ExFreePoolWithTag>;jmp - <FsRtlUninitializeOplock+>;leal (%ebx), %eax": 1,
                "pushl %esi;calll  <ExFreePoolWithTag>;jmp - <FsRtlUninitializeOplock+>;leal (%ebx), %eax;movl (%eax), %esi": 1,
                "andl $, (%esi);movb $, %dl;movl %esi, %ecx;calll  <IofCompleteRequest>;jmp - <FsRtlUninitializeOplock+>": 1,
                "andl $, (%esi);movb $, %dl;movl %esi, %ecx;calll  <IofCompleteRequest>;andl $, (%ebx)": 1,
                "xorl %ecx, %ecx;movb (%eax), %cl;orl %edx, %ecx;movb %cl, (%eax);andl $, (%esi)": 1,
                "pushl %eax;calll  <IoReleaseVpbSpinLock>;movl $, -(%ebp);jmp  <FsRtlUninitializeOplock+>;movl $, %esi": 1,
                "calll  <FsRtlUninitializeOplock+>;movl -(%ebp), %eax;calll  <wctomb+>;retl $;movl -(%ebp), %edi": 1,
                "movb (%eax), %cl;orl %ebx, %ecx;movb %cl, (%eax);andl $, (%esi);leal (%esi), %eax": 1,
                "movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);movb $, -(%ebp)": 1,
                "movl $, (%edi);movl %edi, (%esi);leal (%esi), %ebx;pushl %ebx;calll  <IoAcquireVpbSpinLock>": 1,
                "movb (%ebx), %al;pushl %eax;calll  <IoReleaseVpbSpinLock>;movl $, -(%ebp);xorl %esi, %esi": 1,
                "movl (%ebp), %ecx;movl %esi, -(%ebp);movb %bl, %dl;movl %esi, (%ecx);calll  <IofCompleteRequest>": 1,
                "cmpl %ebx, %edi;je  <FsRtlUninitializeOplock+>;leal -(%edi), %eax;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "xorl %eax, %eax;movb (%ebx), %al;pushl %eax;calll  <IoReleaseVpbSpinLock>;movl $, (%edi)": 1,
                "pushl %eax;calll  <IoReleaseVpbSpinLock>;movl $, (%edi);movl (%esi), %eax;andl $, (%eax)": 1,
                "orl $-, -(%ebp);calll  <FsRtlUninitializeOplock+>;calll  <wctomb+>;retl $;movl -(%ebp), %edi": 1,
                "pushl $;pushl $;calll  <wctomb+>;movl (%ebp), %edx;movl (%edx), %esi": 1,
                "retl $;movl -(%ebp), %esi;movl (%esi), %ecx;calll *;retl": 1,
                "movl (%esi), %ecx;calll *;retl;int;int": 1,
                "jne  <FsRtlUninitializeOplock+>;calll  <FsRtlCurrentBatchOplock+>;movl %eax, %esi;movl %esi, (%edi);movl %esi, -(%ebp)": 1,
                "andl $, -(%ebp);jmp  <FsRtlUninitializeOplock+>;movl (%esi), %eax;testb $-, %al;je  <FsRtlUninitializeOplock+>": 1,
                "pushl $;calll  <ExAllocatePoolWithTag>;movl %eax, %esi;movl %esi, -(%ebp);movl (%ebp), %edi": 1,
                "movl %esi, -(%ebp);movl (%ebp), %edi;movl %edi, (%esi);movl (%ebp), %ecx;movl %ecx, (%esi)": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "je  <FsRtlUninitializeOplock+>;movl %eax, (%esi);movl %ecx, (%esi);jmp  <FsRtlUninitializeOplock+>;movl $, (%esi)": 1,
                "jmp  <FsRtlUninitializeOplock+>;movl $, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movb $, (%eax)": 1,
                "pushl %ecx;calll *(%ebp);andl $, (%edi);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "calll *(%ebp);andl $, (%edi);leal (%ebx), %eax;movl %eax, -(%ebp);movl (%eax), %ecx": 1,
                "movl %eax, (%esi);movl %ecx, (%esi);movl %esi, (%ecx);movl %esi, (%eax);leal (%edi), %esi": 1,
                "calll  <IoReleaseVpbSpinLock>;xorl %esi, %esi;cmpl %esi, (%ebp);jne  <FsRtlUninitializeOplock+>;movb $, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl (%esi), %ecx;testb $, %cl;je  <FsRtlUninitializeOplock+>;movl (%esi), %edi": 1,
                "jmp - <FsRtlUninitializeOplock+>;movl %edi, -(%ebp);jmp  <FsRtlUninitializeOplock+>;movl (%esi), %eax;testb $, %al": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);calll  <FsRtlUninitializeOplock+>;movl -(%ebp), %eax;calll  <wctomb+>": 2,
                "jmp - <FsRtlUninitializeOplock+>;movl %edi, -(%ebp);jmp  <FsRtlUninitializeOplock+>;movl (%esi), %eax;movl $, (%eax)": 1,
                "movl %edi, (%esi);jmp - <FsRtlUninitializeOplock+>;testb $, %ah;je  <FsRtlUninitializeOplock+>;andl $, %eax": 1,
                "movl %eax, (%esi);jmp - <FsRtlUninitializeOplock+>;testb %al, %al;jns - <FsRtlUninitializeOplock+>;movl %edi, (%esi)": 1,
                "jns - <FsRtlUninitializeOplock+>;movl %edi, (%esi);movl %ebx, (%esi);jmp - <FsRtlUninitializeOplock+>;cmpb $, (%eax)": 1,
                "jmp - <FsRtlUninitializeOplock+>;cmpb $, (%eax);jne  <FsRtlUninitializeOplock+>;testb $, (%eax);je  <FsRtlUninitializeOplock+>": 1,
                "je  <FsRtlCheckOplock+>;pushl %ebx;movl (%ebp), %ebx;testb $, (%ebx);jne  <FsRtlCheckOplock+>": 1,
                "movl (%ebp), %ebx;testb $, (%ebx);jne  <FsRtlCheckOplock+>;cmpl $, (%edi);je  <FsRtlCheckOplock+>": 1,
                "jne  <FsRtlCheckOplock+>;cmpl $, (%edi);je  <FsRtlCheckOplock+>;movl (%ebx), %eax;movzbl (%eax), %ecx": 1,
                "movzbl (%eax), %ecx;xorb %dl, %dl;cmpl $, %ecx;pushl %esi;jg  <FsRtlCheckOplock+>": 1,
                "je  <FsRtlCheckOplock+>;subl $, %ecx;je  <FsRtlCheckOplock+>;subl $, %ecx;je  <FsRtlCheckOplock+>": 1,
                "je  <FsRtlCheckOplock+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %ebx": 1,
                "testl $, %ecx;movl $, %esi;jne  <FsRtlCheckOplock+>;testl %esi, (%eax);je - <FsRtlCheckOplock+>": 1,
                "jne  <FsRtlCheckOplock+>;testl %esi, (%eax);je - <FsRtlCheckOplock+>;testb $, (%edi);je  <FsRtlCheckOplock+>": 1,
                "testb $, (%eax);jne - <FsRtlCheckOplock+>;movzbl (%eax), %ecx;testl %ecx, %ecx;je - <FsRtlCheckOplock+>": 1,
                "andl $, (%esi);movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 15,
                "cmpl %edi, (%eax);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <FsRtlCheckOplock+>;movl -(%ebp), %ecx;cmpl %edi, %ecx;jne  <FsRtlCheckOplock+>;cmpl %edi, -(%ebp)": 1,
                "shll $, %edi;addl (%esi), %edi;incl %eax;movw %ax, (%esi);xorl %eax, %eax": 1,
                "testl %edi, %edi;jne  <FsRtlCheckOplock+>;pushl %edi;jmp  <FsRtlCheckOplock+>;leal (%edi), %eax": 1,
                "pushl (%eax);pushl (%ebp);pushl %esi;calll *(%eax);decw (%esi)": 1,
                "pushl %esi;pushl %edi;movl $, %esi;pushl %esi;movl $, %edi": 1,
                "popl %esi;movl %ebx, %eax;movb %cl, ;movb $, ;movl %ecx, ": 1,
                "movb $, ;movl %ecx, ;movb %cl, ;movb $, ;movl %ecx, ": 2,
                "movl $, -(%ebp);pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "movw %ax, (%esi);jbe  <FsRtlCheckOplock+>;leal (%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);popl %edi": 3,
                "pushl $;calll  <IoSetTopLevelIrp>;movl %fs:, %eax;decl (%eax);pushl %esi": 1,
                "jge  <FsRtlCreateSectionForDataScan+>;movl %fs:, %eax;incl (%eax);jne  <FsRtlCreateSectionForDataScan+>;leal (%eax), %ecx": 1,
                "movb $, %cl;movb $, (%eax);calll *;pushl %edi;calll  <IoSetTopLevelIrp>": 2,
                "pushl %edi;pushl (%ebp);pushl %edi;pushl -(%ebp);calll  <ObInsertObject>": 1,
                "cmpl %edi, %esi;jl  <FsRtlCreateSectionForDataScan+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 6,
                "jmp  <FsRtlCreateSectionForDataScan+>;movl $, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "xorl %edi, %edi;cmpl %edi, (%ebp);jne  <FsRtlLookupPerFileObjectContext+>;xorl %eax, %eax;jmp  <FsRtlLookupPerFileObjectContext+>": 1,
                "jmp  <FsRtlLookupPerFileObjectContext+>;cmpl %edx, (%eax);je - <FsRtlLookupPerFileObjectContext+>;movl (%eax), %eax;cmpl %ecx, %eax": 1,
                "movl %esi, %ecx;calll *;movl %edi, %eax;popl %ebx;popl %esi": 2,
                "popl %ebx;popl %esi;popl %edi;popl %ebp;retl $": 4,
                "leal (%esi), %ecx;movl (%ecx), %eax;jmp  <FsRtlRemovePerFileObjectContext+>;movl (%eax), %ebx;cmpl (%ebp), %ebx": 1,
                "movl (%eax), %ecx;cmpl %eax, %ecx;je  <FsRtlRemovePerFileObjectContext+>;movl %ecx, %edi;testl %edi, %edi": 1,
                "movl %esp, %ebp;popl %ebp;jmp  <MmCreateSection+>;int;int": 1,
                "testb $, (%esi);je  <FsRtlInsertPerStreamContext+>;movl (%esi), %ecx;calll *;movl (%ebp), %ecx": 1,
                "je  <FsRtlRemovePerStreamContext+>;leal (%esi), %ecx;movl (%ecx), %eax;jmp  <FsRtlRemovePerStreamContext+>;movl (%eax), %ebx": 1,
                "cmpl %edx, (%eax);je  <FsRtlRemovePerStreamContext+>;movl (%eax), %eax;cmpl %ecx, %eax;jne - <FsRtlRemovePerStreamContext+>": 1,
                "movl %eax, %edi;jmp  <FsRtlRemovePerStreamContext+>;movl (%ebp), %edx;testl %edx, %edx;je  <FsRtlRemovePerStreamContext+>": 1,
                "leal (%esi), %ecx;movl (%ecx), %eax;jmp  <FsRtlRemovePerStreamContext+>;cmpl %edx, (%eax);je - <FsRtlRemovePerStreamContext+>": 1,
                "cmpl %ecx, %eax;jne - <FsRtlRemovePerStreamContext+>;jmp  <FsRtlRemovePerStreamContext+>;leal (%esi), %eax;movl (%eax), %ecx": 1,
                "movl %ecx, %edi;testl %edi, %edi;je  <FsRtlRemovePerStreamContext+>;movl (%edi), %eax;movl (%edi), %ecx": 1,
                "xorl %edi, %edi;cmpl %edi, %ebx;jne  <FsRtlInsertPerFileObjectContext+>;movl $, %eax;jmp  <FsRtlInsertPerFileObjectContext+>": 1,
                "movl $, %eax;jmp  <FsRtlInsertPerFileObjectContext+>;pushl %esi;pushl %ebx;calll  <IoSetFileOrigin+>": 1,
                "pushl $;pushl %edi;calll  <ExAllocatePoolWithTag>;movl %eax, %esi;cmpl %edi, %esi": 1,
                "pushl %edi;calll  <ExAllocatePoolWithTag>;movl %eax, %esi;cmpl %edi, %esi;jne  <FsRtlInsertPerFileObjectContext+>": 1,
                "xorl %ecx, %ecx;incl %ecx;movl %ecx, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "calll  <IoSetFileOrigin+>;movl %eax, %esi;cmpl %edi, %esi;jne  <FsRtlInsertPerFileObjectContext+>;movl $, %eax": 1,
                "xorl %eax, %eax;popl %esi;popl %edi;popl %ebx;popl %ebp": 11,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);andl $, (%esi);xorl %eax, %eax;movb (%esi), %al": 1,
                "calll  <ExAcquireFastMutexUnsafe>;movl -(%ebp), %eax;movl %edi, (%eax);movl %eax, %ecx;incl (%ecx)": 1,
                "movl %eax, -(%ebp);movl (%ecx), %ecx;movl %ecx, -(%ebp);movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "je  <FsRtlInsertPerFileObjectContext+>;leal -(%ecx), %eax;movl %eax, -(%ebp);movl (%eax), %edi;movl %edi, -(%ebp)": 1,
                "movl (%ebx), %esi;movl -(%ebp), %eax;movl %eax, %edi;movl %ecx, %edx;shrl $, %ecx": 1,
                "pushl %eax;calll  <IoReleaseVpbSpinLock>;testl %ebx, %ebx;popl %ebx;je  <FsRtlInsertPerFileObjectContext+>": 1,
                "pushl %edx;calll - <FsRtlInsertPerFileObjectContext+>;jmp  <FsRtlInsertPerFileObjectContext+>;addl $, %esi;movl %esi, (%ebp)": 1,
                "calll - <FsRtlInsertPerFileObjectContext+>;jmp  <FsRtlInsertPerFileObjectContext+>;addl $, %esi;movl %esi, (%ebp);movl $, %eax": 1,
                "pushl (%esi);calll *(%esi);cmpl $, %esi;pushl $;jne  <FsRtlInsertPerFileObjectContext+>": 1,
                "pushl (%esi);calll *%edi;movzbl %al, %eax;pushl %eax;pushl (%esi)": 1,
                "movzbl %al, %eax;pushl %eax;pushl (%esi);pushl $;calll  <KeBugCheckEx>": 1,
                "leal (%eax,%eax,), %eax;leal (,%eax,), %eax;pushl %eax;calll  <KeInsertQueue>;popl %ebx": 1,
                "jb  <HalExamineMBR+>;movl %edi, %eax;pushl $;pushl %eax;pushl $": 1,
                "calll  <IoBuildSynchronousFsdRequest>;cmpl %ebx, %eax;jne  <HalExamineMBR+>;pushl %ebx;pushl %esi": 1,
                "cmpl %ebx, %eax;jne  <HalExamineMBR+>;pushl %ebx;pushl %esi;calll  <ExFreePoolWithTag>": 1,
                "pushl %ebx;pushl -(%ebp);movb %bl, (%esi);movb $, (%esi);movl %ebx, (%esi)": 1,
                "pushl -(%ebp);movb %bl, (%esi);movb $, (%esi);movl %ebx, (%esi);pushl $": 1,
                "cmpl %ebx, %eax;je  <HalExamineMBR+>;movl -(%ebp), %ecx;movl %eax, %edx;calll  <IofCallDriver>": 1,
                "pushl %edx;pushl %eax;calll  <_allmul>;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "int;xorl %eax, %eax;retl;int;int": 2,
                "jl  <IoReadDiskSignature+>;pushl (%ebx);movl (%ebx), %esi;pushl %ebx;pushl %edi": 1,
                "incl %edx;cmpl $, %edx;jb - <IoReadDiskSignature+>;movl (%ebp), %edx;notl %ecx": 1,
                "movl %eax, %esi;pushl %edi;pushl %ebx;calll  <ExFreePoolWithTag>;movl %esi, %eax": 1,
                "movl $, %ecx;calll  <KiAcquireSpinLock>;movb %bl, ;popl %ebx;retl": 1,
                "calll  <KiReleaseSpinLock>;cmpb $, %bl;ja  <IoReadDiskSignature+>;movb %bl, %cl;popl %ebx": 1,
                "jge  <InbvEnableBootDriver+>;calll - <IoReadDiskSignature+>;cmpl $, ;jne  <InbvEnableBootDriver+>;calll  <wctomb+>": 1,
                "calll - <IoReadDiskSignature+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll  <wctomb+>": 1,
                "movl %eax, ;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %eax;movl %eax, ;popl %ebp;retl $;int": 2,
                "pushl (%ebp);pushl $;calll  <HeadlessDispatch>;calll - <IoReadDiskSignature+>;movb $, %al": 1,
                "calll - <IoReadDiskSignature+>;movb $, %al;jmp  <InbvDisplayString+>;xorb %al, %al;popl %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl %eax, ;movl (%ebp), %eax;movl %eax, ": 1,
                "cmpb %cl, ;je  <InbvDisplayString+>;cmpl %ecx, ;jne  <InbvDisplayString+>;movl , %eax": 1,
                "shll %eax;cltd;movl $, %esi;idivl %esi;cmpl %ecx, %eax": 1,
                "movl %eax, %edi;calll - <IoReadDiskSignature+>;movl , %eax;leal (%esi,%eax), %ecx;movl , %eax": 1,
                "movl (%ebp), %eax;movl $, ;movl %eax, ;calll - <IoReadDiskSignature+>;jmp  <InbvNotifyDisplayOwnershipLost+>": 1,
                "movl %esp, %ebp;popl %ebp;jmp  <wctomb+>;int;int": 4,
                "movl (%ebp), %ecx;movb %al, (%ecx);xorl %eax, %eax;popl %ebp;retl $": 1,
                "pushl %ebp;movl %esp, %ebp;cmpb $, ;jne  <InbvSetScrollRegion+>;movl (%ebp), %eax": 1,
                "xorl %edx, %edx;rep  cmpsb %es:(%edi), (%esi);popl %edi;popl %esi;jne  <InbvSetScrollRegion+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 132,
                "calll - <IoReadDiskSignature+>;cmpb %bl, (%ebp);movb %bl, ;je  <InbvSetScrollRegion+>;cmpl $, -": 1,
                "je  <InbvSetScrollRegion+>;cmpl $, -;jne  <InbvSetScrollRegion+>;pushl $;calll - <InbvSetTextColor>": 1,
                "calll - <InbvInstallDisplayStringFilter>;xorl %esi, %esi;incl %esi;pushl %esi;calll - <InbvDisplayString+>": 1,
                "pushl %ebx;pushl %ebx;pushl %edi;movl %esi, -(%ebp);calll - <InbvResetDisplay+>": 1,
                "movl $, %edi;pushl %edi;movl $, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl -(%ebp);calll - <InbvResetDisplay+>;cmpb %bl, ;jne  <InbvSetScrollRegion+>": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, (%ecx);movl , %ecx;movl %eax, (%ecx)": 1,
                "pushl $;pushl %esi;pushl $;pushl $;calll  <wctomb+>": 2,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;movzbl (%ebp), %esi": 1,
                "jl - <InbvSetScrollRegion+>;popl %edi;popl %esi;popl %ebp;retl $": 1,
                "movzbl (%ebp), %ecx;shll $, %ecx;movzbl (%ecx), %eax;pushl %esi;movzbl (%ebp), %esi": 1,
                "pushl $;pushl $;je  <InbvSetScrollRegion+>;decl %ecx;movl $, %esi": 1,
                "pushl $;pushl $;jmp  <InbvSetScrollRegion+>;pushl $;pushl $": 1,
                "pushl $;pushl $;calll  <wctomb+>;jmp  <InbvSetScrollRegion+>;pushl %edi": 1,
                "pushl %eax;calll - <InbvSetScrollRegion+>;pushl $;pushl %edi;calll - <InbvSetScrollRegion+>": 1,
                "int;int;int;movl , %eax;decl %eax": 1,
                "jmp - <InbvSetScrollRegion+>;retl;int;int;int": 1,
                "decl %eax;jne  <InbvSetScrollRegion+>;calll - <InbvSetScrollRegion+>;calll - <IoReadDiskSignature+>;calll - <InbvCheckDisplayOwnership>": 1,
                "movl (%edi), %ecx;movl %esi, (%ecx);movb $, -(%ebp);movb %al, %cl;calll *": 1,
                "movl %esi, (%eax);xorl %eax, %eax;popl %edi;popl %esi;leave": 4,
                "movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 2,
                "testl %esi, %esi;jne  <IoBuildPartialMdl+>;movl (%ecx), %esi;subl %edi, %esi;movl (%ecx), %edx": 1,
                "movl (%ebp), %edx;andl $, %edx;leal (%edx,%esi), %esi;movl %edx, (%eax);movswl (%eax), %edx": 1,
                "andl $, %edx;leal (%edx,%esi), %esi;movl %edx, (%eax);movswl (%eax), %edx;subl $, %edx": 1,
                "shrl $, %edx;cmpl %esi, %edx;jae  <IoBuildPartialMdl+>;pushl $;calll  <KeBugCheck>": 1,
                "andw $, (%eax);pushl %ebx;xorl %ebx, %ebx;movw (%ecx), %bx;xorl %edx, %edx": 1,
                "andl $, %ebx;orl %edx, %ebx;orl $, %ebx;movw %bx, -(%eax);movl (%ecx), %edx": 1,
                "movl (%ebp), %edx;leal (%ecx,%edx,), %ecx;popl %ebx;jbe  <IoBuildPartialMdl+>;subl %ecx, %eax": 1,
                "jne - <IoBuildPartialMdl+>;popl %edi;popl %esi;popl %ebp;retl $": 1,
                "movb (%eax,%ecx), %al;testb %al, %al;je - <IoCheckQuerySetFileInformation+>;movsbl %al, %eax;cmpl %eax, (%ebp)": 1,
                "cmpb $, (%ebp);movl (%ebp), %esi;je  <IofCompleteRequest+>;movl (%ebp), %edx;movl (%edx), %ecx": 1,
                "je  <IofCompleteRequest+>;movl (%ebp), %edx;movl (%edx), %ecx;movl %ecx, (%esi);movl %esi, (%edx)": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, %eax;pushl %esi;je  <IoCreateStreamFileObjectEx+>": 1,
                "je  <IoCreateStreamFileObjectEx+>;movl (%eax), %esi;jmp  <IoCreateStreamFileObjectEx+>;movl (%ebp), %esi;pushl %edi": 1,
                "pushl %ebx;movl %ebx, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 2,
                "movl (%ebp), %eax;movw $, (%eax);movl (%ebp), %eax;movl %esi, (%eax);movl (%ebp), %eax": 1,
                "movl $, (%eax);movl (%ebp), %eax;movb $, (%eax);movl (%ebp), %eax;movb $, (%eax)": 1,
                "pushl $;pushl $;pushl %ebx;pushl (%ebp);calll  <ObInsertObject>": 1,
                "orb $, (%eax);movl (%esi), %esi;cmpl %ebx, %esi;je  <IoCreateStreamFileObjectEx+>;pushl $": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;addl $, %esi;jmp  <IoFreeController+>": 1,
                "pushl (%eax);addl $-, %eax;pushl $;pushl (%eax);pushl %eax": 1,
                "movl (%ebp), %esi;cmpw $, (%esi);pushl %edi;je  <IoFreeIrp+>;pushl $": 1,
                "pushl $;pushl $;pushl %esi;pushl $;calll  <KeBugCheckEx>": 2,
                "leal (%edx), %eax;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 14,
                "xorl %ebx, %ebx;incl %ebx;testb %bl, ;je  <IoFreeIrp+>;movl , %eax": 1,
                "movl (%edx,%eax,), %edi;movw (%edi), %cx;incl (%edi);cmpw (%edi), %cx;jb  <IoFreeIrp+>": 1,
                "incl (%edi);cmpw (%edi), %ax;jb  <IoFreeIrp+>;incl (%edi);pushl $": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testb $, (%esi)": 11,
                "pushl %esi;calll *(%ecx);jmp  <IoFreeMdl+>;movl %esi, %edx;calll  <InterlockedPushEntrySList>": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;calll *;pushl (%ebp)": 5,
                "int;int;int;movl %fs:, %eax;movl (%eax), %eax": 11,
                "movl (%eax), %eax;testl %eax, %eax;je  <IoGetRelatedDeviceObject+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl (%esi), %edi;cmpl $, (%edi);je  <IoGetRelatedDeviceObject+>;testb $-, (%esi);je  <IoGetRelatedDeviceObject+>": 1,
                "movb %al, (%esi);leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);movsbl %bl, %eax": 1,
                "movl %eax, -(%ebp);xorl %eax, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl %esi, %ecx": 1,
                "movb (%eax), %al;movb %al, (%edx);leal (%edx), %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "leal (%edx,%eax,), %eax;movl %eax, (%edx);movb (%ebp), %al;popl %edi;movb %al, (%edx)": 1,
                "testb $, (%eax);je  <IoIsOperationSynchronous+>;movl (%eax), %eax;testb $, %al;je  <IoIsOperationSynchronous+>": 1,
                "xorb %al, %al;jmp  <IoIsOperationSynchronous+>;movb $, %al;popl %ebp;retl $": 1,
                "jmp  <IoMakeAssociatedIrp+>;movw (%edx), %ax;movw %ax, -(%ebp);testl %edx, %edx;jne  <IoMakeAssociatedIrp+>": 1,
                "movw %ax, -(%ebp);testl %edx, %edx;jne  <IoMakeAssociatedIrp+>;cmpb $, -(%ebp);je  <IoMakeAssociatedIrp+>": 1,
                "movb (%esi), %al;movb %al, (%edx);leal (%edx), %eax;movl %eax, (%eax);movl %eax, (%eax)": 2,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl %eax, (%edx);movl %ecx, (%edx);movl %edx, %eax": 1,
                "pushl %edi;calll - <IoGetRelatedDeviceObject>;movl %eax, %ebx;movb (%ebx), %al;movb %al, (%ebp)": 2,
                "movl (%ebp), %eax;movl (%eax), %esi;movl %esi, (%ecx);movl (%eax), %eax;movl %eax, (%ecx)": 3,
                "addl $, %edx;movl (%edx), %edi;movl %edi, (%esi);movl %edx, (%esi);movl %esi, (%edi)": 3,
                "movb %al, %cl;movl %esi, (%edx);calll *;popl %edi;popl %esi": 2,
                "calll  <wctomb+>;movb $, -(%ebp);movl (%ebp), %ecx;testb $, (%ecx);je  <IoQueueThreadIrp+>": 1,
                "pushl %ebx;pushl $;leal -(%ebp), %esi;pushl %esi;pushl (%eax)": 1,
                "addl $, %eax;pushl %eax;pushl %edx;calll  <NtFreeVirtualMemory+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jl  <IoQueueThreadIrp+>;cmpl %ebx, -(%ebp);jne  <IoQueueThreadIrp+>;movb %bl, -(%ebp)": 1,
                "je  <IoRaiseHardError+>;pushl $;pushl $;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "pushl %ebx;calll  <KeInitializeApc>;pushl $;pushl (%ebp);pushl (%ebp)": 1,
                "cmpl %esi, %ecx;pushl %edi;je  <IoRaiseInformationalHardError+>;movl (%ecx), %eax;jmp  <IoRaiseInformationalHardError+>": 1,
                "movl (%ecx), %eax;jmp  <IoRaiseInformationalHardError+>;movl %fs:, %eax;movl (%eax), %eax;shrl $, %eax": 1,
                "jne  <IoRaiseInformationalHardError+>;cmpl $, (%ebp);je  <IoRaiseInformationalHardError+>;cmpl $, (%ebp);je  <IoRaiseInformationalHardError+>": 1,
                "pushl %esi;pushl $;pushl %esi;pushl $;pushl %esi": 2,
                "pushl %esi;pushl %esi;pushl %edi;calll  <KeInsertQueueApc>;jmp  <IoRaiseInformationalHardError+>": 1,
                "cmpw (%eax), %di;jne  <IoRaiseInformationalHardError+>;movzwl %di, %ecx;movl (%eax), %edi;movl %edx, %esi": 1,
                "cmpl %esi, %eax;je  <IoRaiseInformationalHardError+>;pushl %esi;pushl %eax;calll  <ExFreePoolWithTag>": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);popl %ebp;retl $": 3,
                "movl %ebx, (%esi);calll  <KeRemoveDeviceQueue>;cmpl %ebx, %eax;je  <IoSetTopLevelIrp+>;cmpb %bl, (%ebp)": 1,
                "movl %ebx, (%esi);calll  <KeRemoveByKeyDeviceQueue>;cmpl %ebx, %eax;je  <IoSetTopLevelIrp+>;cmpb %bl, (%ebp)": 1,
                "andl $, (%esi);pushl (%ebp);calll - <IoReleaseVpbSpinLock>;movl (%edi), %eax;pushl %esi": 1,
                "pushl %edi;calll *(%eax);jmp  <IoStartPacket+>;testl %ebx, %ebx;je  <IoStartPacket+>": 1,
                "pushl (%ebp);pushl %esi;calll - <IoSetTopLevelIrp+>;jmp  <IoStartPacket+>;testb $, %dl": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne  <IoStartPacket+>": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne  <IoStartPacket+>;movl (%esi), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax": 5,
                "movl %esi, (%ecx);movl (%eax), %eax;movl %eax, (%ecx);movl %edi, (%ecx);movl %ebx, %ecx": 1,
                "movl (%esi), %ecx;cmpl %ebx, %ecx;je  <IoWriteErrorLogEntry+>;calll  <ObfDereferenceObject>;movl (%esi), %ecx": 1,
                "leal (%esi), %eax;movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);cmpb %bl, ": 1,
                "pushl $;pushl $;movb $, ;movl $, ;movl %ebx, ": 1,
                "jmp  <IoGetRequestorSessionId+>;movl (%ebp), %eax;orl $-, (%eax);movl $, %eax;popl %ebp": 1,
                "andl $, -(%ebp);pushl %esi;pushl %edi;movl %fs:, %eax;leal (%eax), %edi": 1,
                "je  <IoGetRequestorSessionId+>;andl $, %ecx;movl %ecx, (%eax);movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "andl $, %ecx;movl %ecx, (%eax);movl (%eax), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx": 6,
                "pushl %ecx;pushl $;pushl $;addl $, %eax;pushl %eax": 1,
                "popl %edi;popl %esi;leave;retl;int": 25,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;pushl %edi;calll  <ObfReferenceObject>": 1,
                "jmp  <IoSetCompletionRoutineEx+>;movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movb %al, %bl;movl (%ebp), %eax;movl (%eax), %eax;xorl %esi, %esi;testb $, (%eax)": 1,
                "je  <IoGetLowerDeviceObject+>;movl %eax, %esi;movl %esi, %ecx;calll  <ObfReferenceObject>;movb %bl, %cl": 1,
                "movl (%ebp), %ecx;movl (%ebp), %esi;movb %al, -(%ebp);movl (%ecx), %eax;shrl $, %esi": 1,
                "movl (%eax), %eax;incl %edi;testl %eax, %eax;jne - <IoEnumerateDeviceObjectList+>;cmpl %esi, %edi": 1,
                "movl (%ebp), %eax;movl %edi, (%eax);jbe  <IoEnumerateDeviceObjectList+>;movl $, -(%ebp);testl %esi, %esi": 1,
                "testl %esi, %esi;movl (%ecx), %edi;jbe  <IoEnumerateDeviceObjectList+>;pushl %ebx;movl (%ebp), %ebx": 1,
                "popl %ebx;movb -(%ebp), %cl;calll *;movl -(%ebp), %eax;popl %edi": 1,
                "pushl %eax;calll - <IoAcquireVpbSpinLock>;movl (%esi), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "addb %dl, (%edx);incl %ebp;addb %al, (%edi);decl %ecx;addb %dl, (%ebx)": 9,
                "movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;calll  <RtlInitUnicodeString>": 2,
                "leal -(%ebp), %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx;leal -(%ebp), %eax": 3,
                "leal -(%ebp), %eax;pushl %eax;calll  <IoReportResourceUsage+>;cmpl %ebx, %eax;jl  <IoSetSystemPartition+>": 1,
                "movw %bx, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);calll  <ZwSetValueKey>;movl -(%ebp), %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testb $-, (%eax);je  <IoSetFileOrigin+>": 2,
                "jne  <IoValidateDeviceIoControlAccess+>;xorl %eax, %eax;jmp  <IoValidateDeviceIoControlAccess+>;movzbl (%eax), %ecx;movl %ecx, %eax": 1,
                "subl (%ebp), %eax;negl %eax;sbbl %eax, %eax;andl $, %eax;jmp  <IoValidateDeviceIoControlAccess+>": 1,
                "leal (%esi), %eax;pushl %eax;movl (%ebp), %eax;addl $, %eax;pushl %eax": 1,
                "testb %al, %al;jne  <IoAllocateController+>;pushl %ebx;pushl $;pushl (%esi)": 1,
                "calll *%edi;cmpl $, %eax;jne  <IoAllocateController+>;pushl (%ebp);calll - <IoFreeController>": 1,
                "cmpb $-, %bl;ja  <IoAllocateController+>;addb $, %bl;andl $, %ebx;addl $, %ebx": 1,
                "pushl $;calll  <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;jne  <IoAllocateController+>": 1,
                "jmp  <IoFreeErrorLogEntry+>;movl -(%ebp), %esi;testb $, ;je  <IoFreeErrorLogEntry+>;testl %edx, %edx": 1,
                "movl -(%ebp), %esi;testb $, ;je  <IoFreeErrorLogEntry+>;testl %edx, %edx;je  <IoFreeErrorLogEntry+>": 1,
                "xorb %bl, %bl;movb %bl, -(%ebp);xorl %eax, %eax;cmpl %eax, %edx;jne  <IoFreeErrorLogEntry+>": 1,
                "je  <IoFreeErrorLogEntry+>;incl (%esi);cmpb $, (%ebp);je  <IoFreeErrorLogEntry+>;movl %eax, -(%ebp)": 1,
                "jmp  <IoFreeErrorLogEntry+>;cmpb $, (%ebp);je  <IoFreeErrorLogEntry+>;movb $, %bl;addl $, %edi": 1,
                "incb %al;movb %al, (%edx);movl %fs:, %eax;movl %eax, %esi;movb (%esi), %al": 1,
                "movl (%eax), %esi;incl (%esi);movl %esi, %ecx;movl %eax, (%ebp);calll  <InterlockedPopEntrySList>": 1,
                "movl %esi, %ecx;calll  <InterlockedPopEntrySList>;testl %eax, %eax;jne  <IoAllocateMdl+>;pushl (%esi)": 1,
                "jne  <IoAllocateMdl+>;xorl %eax, %eax;jmp  <IoAllocateMdl+>;leal (,%ebx,), %ecx;movw %cx, (%eax)": 1,
                "jmp  <IoAllocateMdl+>;leal (,%ebx,), %ecx;movw %cx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movw -(%ebp), %cx;xorl %edx, %edx;movw %cx, (%eax);movl (%ebp), %ecx": 1,
                "andl $, %edi;cmpl %edx, %ecx;movl %edx, (%eax);movl %edi, (%eax);je  <IoAllocateMdl+>": 1,
                "addl (%esi), %eax;movb $, (%edx);movl %eax, (%edx);movl (%ebp), %eax;movl %eax, (%edx)": 1,
                "movl %eax, (%ecx);movl %edi, (%ecx);movl (%ebp), %ecx;calll *;movl $, %ecx": 1,
                "subl $, %ebx;movl (%ebp), %eax;movb %al, (%ebx);cmpl $, %eax;je  <IoBuildAsynchronousFsdRequest+>": 1,
                "pushl $;pushl (%ebp);pushl $;calll  <ExAllocatePoolWithTag>;movl %eax, (%esi)": 1,
                "pushl %edi;pushl %edi;pushl (%ebp);pushl (%ebp);calll - <IoAllocateMdl>": 1,
                "pushl %esi;calll - <IoFreeIrp>;orl $-, -(%ebp);xorl %eax, %eax;jmp - <IoBuildAsynchronousFsdRequest+>": 1,
                "movb %al, -(%ebp);xorl %edi, %edi;pushl %edi;pushl -(%ebp);calll *": 1,
                "je  <IoBuildDeviceIoControlRequest+>;movl (%ebx), %eax;subl $, %eax;cmpb $, (%ebp);setne %cl": 1,
                "pushl %edx;pushl (%ebp);calll - <IoAllocateMdl>;movl %eax, (%ebx);cmpl %edi, %eax": 1,
                "calll  <ExFreePoolWithTag>;jmp  <IoBuildDeviceIoControlRequest+>;movl %edi, -(%ebp);xorl %ecx, %ecx;cmpl $, -(%ebp)": 1,
                "pushl %eax;calll  <MmProbeAndLockPages>;orl $-, -(%ebp);jmp  <IoBuildDeviceIoControlRequest+>;xorl %eax, %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl %fs:, %eax;movl %eax, (%ebx);movb $, %cl": 1,
                "movl %edx, (%esi);movl %esi, (%ebx);movb %al, %cl;movl %esi, (%edx);calll *": 1,
                "je  <IoCancelIrp+>;movb (%ebp), %al;jmp  <IoCancelIrp+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%esi), %ecx;pushl %esi;pushl (%ecx);calll *%eax;movb $, %al": 1,
                "jmp  <IoCancelIrp+>;pushl -(%ebp);calll - <IoReleaseVpbSpinLock>;xorb %al, %al;popl %esi": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl %ecx, %esi;movb (%esi), %cl": 1,
                "jmp  <IoCancelIrp+>;testb %dl, %dl;js  <IoCancelIrp+>;cmpb %bl, (%esi);je  <IoCancelIrp+>": 1,
                "movl (%esi), %eax;movl (%eax), %eax;pushl (%edi);pushl %esi;pushl %eax": 1,
                "cmpl $, (%esi);jne  <IoCancelIrp+>;movl (%esi), %eax;cmpl $, %eax;jbe  <IoCancelIrp+>": 1,
                "pushl %esi;calll  <RtlVolumeDeviceToDosName+>;jmp - <IoCancelIrp+>;pushl %esi;calll - <IoFreeIrp>": 1,
                "jne  <IoCancelIrp+>;cmpl $, (%esi);jne - <IoCancelIrp+>;cmpl $, (%esi);jne - <IoCancelIrp+>": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;pushl %eax": 1,
                "pushl %ebx;pushl $;pushl $;pushl %eax;pushl (%esi)": 1,
                "pushl -(%ebp);jmp - <IoCancelIrp+>;calll *;movb %al, %cl;movl (%esi), %eax": 1,
                "calll *;movb %al, %cl;movl (%esi), %eax;cmpl %ebx, %eax;movb %cl, -(%ebp)": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;movb %cl, -(%ebp);je  <IoCancelIrp+>;movsbl (%esi), %ecx": 1,
                "movb %cl, -(%ebp);je  <IoCancelIrp+>;movsbl (%esi), %ecx;pushl %ebx;pushl %ebx": 1,
                "je  <IoGetRequestorProcessId+>;movl (%eax), %eax;jmp  <IoGetRequestorProcessId+>;xorl %eax, %eax;popl %ebp": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 4,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <IoAllocateMdl+>;negl %eax": 1,
                "movl %esp, %ebp;pushl $;pushl (%ebp);calll  <ExFreePoolWithTag>;popl %ebp": 1,
                "movl %eax, (%eax);popl %ebp;retl $;int;int": 5,
                "movl (%ebp), %ecx;xchgl %eax, (%ecx);cmpb $, (%edi);je  <IoCsqInsertIrp+>;movl %edx, (%ebp)": 1,
                "movl (%ebp), %ecx;xchgl %eax, (%ecx);testl %eax, %eax;je  <IoCsqInsertIrp+>;pushl %edi": 1,
                "calll *(%esi);pushl %edi;pushl %esi;calll *(%esi);jmp  <IoCsqInsertIrp+>": 1,
                "movl (%ebp), %esi;andl $, (%esi);pushl %edi;leal (%ebp), %eax;pushl %eax": 2,
                "movl (%edi), %eax;cmpl $, (%eax);jne  <IoCsqRemoveNextIrp+>;andl $, (%eax);andl $, (%edi)": 1,
                "andl $, (%eax);andl $, (%edi);pushl (%ebp);pushl %esi;calll *(%esi)": 1,
                "pushl (%ebp);pushl %esi;calll *(%esi);movl %edi, %eax;popl %edi": 1,
                "movl %edi, %eax;popl %edi;popl %esi;leave;retl $": 20,
                "jmp  <IoCsqRemoveIrp+>;pushl %edi;pushl %esi;calll *(%esi);andl $, (%ebx)": 1,
                "shrl $, %eax;andl $, %eax;leave;retl;int": 1,
                "andl $, %eax;leave;retl;int;int": 1,
                "andl $, %edi;shrl $, %esi;je  <IoCsqRemoveIrp+>;cmpl $, %edi;jb  <IoCsqRemoveIrp+>": 1,
                "movl (%ebp), %eax;andw $, (%ebp);pushl %ebx;pushl %esi;pushl %edi": 1,
                "movl $, %ebx;movl (%ebx), %edi;cmpl %edi, %esi;jae  <IoCsqRemoveIrp+>;movl -(%ebx), %ecx": 1,
                "movl %esi, (%ecx);movl %edx, (%ecx);movb $, %al;jmp  <IoCsqRemoveIrp+>;xorb %al, %al": 1,
                "jae  <IoCsqRemoveIrp+>;movzwl (%esi), %eax;movl (%ebp), %ecx;movl (%eax,%ecx), %eax;cmpl (%ebp), %eax": 1,
                "incl %esi;cmpw $, (%esi);jb - <IoCsqRemoveIrp+>;popl %esi;popl %ebp": 1,
                "je  <IoCsqRemoveIrp+>;calll  <KdPollBreakIn>;testb %al, %al;je  <IoCsqRemoveIrp+>;pushl $": 1,
                "je  <IoCsqRemoveIrp+>;pushl (%ebp);calll - <IoCsqRemoveIrp+>;popl %ecx;pushl (%ebx)": 1,
                "pushl (%ebp);calll - <IoCsqRemoveIrp+>;popl %ecx;pushl (%ebx);pushl (%ebx)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl (%eax), %ecx": 2,
                "movl (%eax), %ecx;testl %ecx, %ecx;pushl %edi;je  <IoCsqRemoveIrp+>;pushl $": 1,
                "movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %eax;andl $, (%eax);popl %ebp": 1,
                "movl %eax, %esi;addl $, %edi;movl (%edi), %eax;addl %esi, %eax;cmpl (%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;subl %esi, %eax;addl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "calll  <MmGetPhysicalAddress>;pushl (%ebp);movb $, %cl;calll  <_allshr>;jmp  <IoCsqRemoveIrp+>": 1,
                "pushl %eax;pushl %edi;pushl (%esi);calll - <IoCsqRemoveIrp+>;jmp  <IoCsqRemoveIrp+>": 2,
                "calll  <_allshr>;pushl $;movl %eax, %ebx;pushl %ebx;pushl %edi": 1,
                "pushl (%esi);movl %edx, -(%ebp);calll - <IoCsqRemoveIrp+>;movl (%esi), %eax;xorl %ecx, %ecx": 1,
                "je  <IoCsqRemoveIrp+>;xorl %eax, %eax;jmp  <IoCsqRemoveIrp+>;movl $, %eax;popl %edi": 1,
                "movl $, %eax;popl %edi;popl %esi;leave;retl $": 5,
                "calll  <MmGetPhysicalAddress>;pushl $;movb $, %cl;calll  <_allshr>;pushl %eax": 1,
                "calll - <IoCsqRemoveIrp+>;testb %al, %al;je  <IoCsqRemoveIrp+>;movzwl (%esi), %eax;incl -(%ebp)": 1,
                "leal (%ebx,%eax), %ebx;cmpl %edi, %esi;jne - <IoCsqRemoveIrp+>;movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;movl %ebx, (%eax);xorl %eax, %eax": 1,
                "leave;retl $;movl $, %eax;jmp - <IoCsqRemoveIrp+>;int": 1,
                "testb %al, %al;je  <IoCsqRemoveIrp+>;movzwl (%ebx), %eax;pushl %eax;pushl (%ebx)": 1,
                "shrl %eax;movl %eax, (%edi);movl (%ebx), %esi;movl %eax, %ecx;movl (%ebp), %eax": 1,
                "movl %ecx, -(%eax);movl (%ebp), %eax;movl (%ebp), %edx;addl $, (%ebp);movl %eax, %ecx": 1,
                "addl $, %ecx;andl $-, %ecx;addl $, %ecx;addl %eax, %ecx;cmpl (%ebp), %ecx": 1,
                "jne  <IoCsqRemoveIrp+>;movl %eax, (%edx);incl (%edx);incl %edi;addl $, %esi": 1,
                "addl (%ebp), %ebx;pushl %esi;pushl %edi;movl %eax, %edi;shll $, %edi": 1,
                "pushl %esi;pushl %edi;movl %eax, %edi;shll $, %edi;addl %ebx, %edi": 1,
                "shll $, %edi;addl %ebx, %edi;testl %eax, %eax;movl $, %esi;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;movl (%esi), %eax;cltd;movl %eax, (%ebx)": 1,
                "movl %edi, %eax;subl (%ebp), %eax;movl %edx, (%ebx);movl %eax, (%ebx);movl (%esi), %ecx": 1,
                "movl (%esi), %ecx;subl (%esi), %ecx;addl $, -(%ebp);movl %ecx, (%ebx);movl (%esi), %esi": 1,
                "je  <IoCsqRemoveIrp+>;movl %eax, -(%ebp);cmpl -(%ebp), %ebx;je  <IoCsqRemoveIrp+>;testb $, %bl": 1,
                "jne - <IoCsqRemoveIrp+>;cmpl %eax, (%esi);jne - <IoCsqRemoveIrp+>;cmpl $, %ecx;jne - <IoCsqRemoveIrp+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ecx), %edx;addl (%ebp), %edx": 1,
                "movl %eax, -(%ebp);jne  <KeCapturePersistentThreadState+>;xorl %eax, %eax;jmp  <KeCapturePersistentThreadState+>;cmpl %esi, (%ebp)": 1,
                "movzwl , %eax;movl %eax, (%ebx);movl , %eax;shrl $, %eax;movl %eax, (%ebx)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%ebx);movl , %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 11,
                "calll - <IoCsqRemoveIrp+>;movl (%ebp), %edx;movb %al, (%ebx);movl %esi, (%ebx);movl %esi, (%ebx)": 1,
                "movl -, %edi;movl %edi, (%ebx);movl -, %edi;movl %edi, (%ebx);movl $, (%ebx)": 1,
                "movl %esi, (%ebx);movl , %edi;movl %edi, (%ebx);movl %eax, (%ebx);movl %esi, (%ebx)": 1,
                "movl %edi, (%ebx);movl %eax, (%ebx);movl %esi, (%ebx);movl $, (%ebx);orl %ecx, (%ebx)": 1,
                "movl %edx, %esi;movl $, %eax;movl $, (%ebx);rep  movsl (%esi), %es:(%edi);movl %eax, (%ebp)": 1,
                "movl $, (%ebx);leal (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "leal (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 6,
                "movl %edi, (%ebp);jmp  <KeCapturePersistentThreadState+>;movl (%ebp), %edi;leal (%edi), %esi;andl $-, %esi": 1,
                "movl (%ebp), %ecx;movl %eax, %esi;movl %ecx, %eax;shrl $, %ecx;leal (%edx,%ebx), %edi": 1,
                "shrl $, %ecx;leal (%eax,%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "testb %al, %al;je  <KeCapturePersistentThreadState+>;movl (%ebp), %ecx;orl $, (%ebx);movl %esi, %eax": 1,
                "je  <KeCapturePersistentThreadState+>;movl (%ebp), %ecx;orl $, (%ebx);movl %esi, %eax;movl (%ebp), %esi": 1,
                "sbbl %eax, %eax;andl %edx, %eax;movl $, %ecx;cmpl %ecx, %eax;jb  <KeCapturePersistentThreadState+>": 1,
                "movl %eax, (%ebx);movl %esi, (%ebx);rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "orl $, (%ebx);movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ebx);movl (%ebp), %eax": 1,
                "movb (%ebp), %cl;calll *;addl $, %edi;andl $-, %edi;pushl %edi": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movb (%esi), %al;testb $, %al": 1,
                "jmp  <KeCapturePersistentThreadState+>;testb $, %al;je  <KeCapturePersistentThreadState+>;pushl (%edi);movl $, (%edi)": 1,
                "testb $, %al;je  <KeCapturePersistentThreadState+>;pushl (%edi);movl $, (%edi);movl , %eax": 1,
                "testb $, %al;je  <KeCapturePersistentThreadState+>;movl $, (%edi);movl , %eax;movl (%eax), %eax": 1,
                "movl %ecx, %edi;jmp  <KeCapturePersistentThreadState+>;movl %edx, -(%ebp);movl %eax, %edi;cmpl %edi, %ebx": 1,
                "movl %ecx, -(%ebp);jmp  <KeCapturePersistentThreadState+>;movl (%ebp), %ebx;andl $, -(%ebp);jmp  <KeCapturePersistentThreadState+>": 1,
                "jae  <KeCapturePersistentThreadState+>;movl -(%ebp), %edx;movl %ecx, -(%ebp);jmp  <KeCapturePersistentThreadState+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %edx, %ebx;movl (%ebp), %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;movl %eax, -(%ebp);pushl %ebx;addl %edi, %eax;pushl %eax": 1,
                "movl %eax, %ebx;divl %ecx;xorl %edi, %edi;cmpl %edi, (%esi);movl %edi, (%ebp)": 1,
                "movl %edi, -(%ebp);movl (%esi), %edx;movl %edi, %eax;shrl $, %eax;movl (%edx,%eax,), %eax": 1,
                "shrl $, %eax;movl (%edx,%eax,), %eax;movl %edi, %ecx;andl $, %ecx;shrl %cl, %eax": 4,
                "incl (%ebp);movl (%ebp), %eax;xorl %edx, %edx;divl -(%ebp);addl $, -(%ebp)": 1,
                "divl %ebx;pushl %eax;pushl (%ebp);pushl $;calll - <IoCsqRemoveIrp+>": 1,
                "pushl $;calll - <IoCsqRemoveIrp+>;addl $, %esp;calll - <IoCsqRemoveIrp+>;pushl %edi": 1,
                "addl $, %esp;calll - <IoCsqRemoveIrp+>;pushl %edi;pushl (%ebp);pushl (%ebp)": 1,
                "jl  <KeCapturePersistentThreadState+>;incl %edi;cmpl (%esi), %edi;jb - <KeCapturePersistentThreadState+>;xorl %eax, %eax": 1,
                "cmpl (%esi), %edi;jb - <KeCapturePersistentThreadState+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "pushl %eax;calll  <RtlFillMemoryUlong>;movl , %eax;movl (%eax), %ecx;leal (%eax,%ecx,), %eax": 1,
                "movl (%eax), %ecx;addl (%eax), %ecx;pushl %esi;movl %ecx, (%esi);movl $, (%esi)": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%ebp), %eax;pushl %edi": 1,
                "jg  <KeCapturePersistentThreadState+>;cmpl (%esi), %ebx;jbe  <KeCapturePersistentThreadState+>;movl (%esi), %ebx;movl (%ebp), %eax": 1,
                "jbe  <KeCapturePersistentThreadState+>;movl (%esi), %ebx;movl (%ebp), %eax;pushl %ebx;pushl %edx": 1,
                "leal (%esi), %edi;pushl %edi;calll *(%ebp);testl %eax, %eax;jl  <KeCapturePersistentThreadState+>": 2,
                "je  <KeCapturePersistentThreadState+>;movl (%ebp), %ecx;movl (%ebp), %ebx;andl $, %ecx;cmpl %ebx, (%ebp)": 1,
                "movl (%esi), %ebx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%ebp), %ecx;pushl %ebx": 1,
                "movl , %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 14,
                "movl (%ebp), %edi;movl %edi, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "andl $, (%eax);movl (%ebp), %eax;cmpl $, %eax;jb  <KeCapturePersistentThreadState+>;cmpl %eax, (%ebp)": 1,
                "movl , %eax;testl %eax, %eax;je  <KeCapturePersistentThreadState+>;cmpl $, ;je  <KeCapturePersistentThreadState+>": 1,
                "cmpl $, ;je  <KeCapturePersistentThreadState+>;movl %edi, -(%ebp);leal (%edi), %ebx;movl %ebx, -(%ebp)": 1,
                "je  <KeCapturePersistentThreadState+>;cmpl $, (%ebp);je  <KeCapturePersistentThreadState+>;testb $, %al;je  <KeCapturePersistentThreadState+>": 1,
                "andl $, -(%ebp);pushl -(%ebp);calll  <MmIsAddressValid>;testb %al, %al;je  <KeCapturePersistentThreadState+>": 1,
                "addl %ecx, %eax;cmpb $, (%esi);jne - <KeCapturePersistentThreadState+>;cmpl %eax, (%esi);jne - <KeCapturePersistentThreadState+>": 1,
                "testw $, %ax;jne - <KeCapturePersistentThreadState+>;pushl %ecx;pushl %eax;calll - <IoCsqRemoveIrp+>": 1,
                "je - <KeCapturePersistentThreadState+>;movl %esi, (%ebx);movl -(%ebp), %eax;leal (%eax), %ecx;andl $, %ecx": 1,
                "movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl $, (%eax);movl , %ecx": 1,
                "jmp - <KeCapturePersistentThreadState+>;xorl %eax, %eax;incl %eax;retl;movl -(%ebp), %esp": 1,
                "movb $, (%eax);orl $-, -(%ebp);movl -(%ebp), %ebx;jmp - <KeCapturePersistentThreadState+>;xorl %eax, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %ecx;pushl %esi": 1,
                "movsbl (%ecx), %eax;pushl %eax;calll - <IoCsqRemoveIrp+>;movl (%ebp), %edi;pushl %edi": 1,
                "pushl %esi;pushl %esi;calll - <KeCapturePersistentThreadState+>;cmpl %esi, %eax;jge  <KeCapturePersistentThreadState+>": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;xorl %eax, %eax;pushl $": 1,
                "movl %eax, %edi;jmp  <KeCapturePersistentThreadState+>;orl %esi, (%ebx);calll  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx": 1,
                "movb (%ebp), %dl;testb $, %dl;je  <KeCapturePersistentThreadState+>;leal (%edi), %eax;cmpl %ecx, %eax": 1,
                "movl %edi, (%ebx);movl %ecx, (%ebx);movl %eax, %edi;jmp  <KeCapturePersistentThreadState+>;orl %esi, (%ebx)": 1,
                "leal (%ecx,%ecx,), %eax;movl (%ebp), %ecx;leal (%ecx,%eax,), %eax;andl $-, %eax;je  <KeCapturePersistentThreadState+>": 1,
                "je  <KeCapturePersistentThreadState+>;movl (%ebx), %eax;movl (%ebx), %ecx;pushl $;pushl $": 1,
                "addl %eax, %edi;movl %ds:, %eax;movl $, %ecx;movl %eax, %esi;rep  movsl (%esi), %es:(%edi)": 1,
                "movl (%ebx), %ecx;movl (%ebx), %esi;leal -(%eax,%ebx), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%ebx), %ecx;testl %ecx, %ecx;je  <KeCapturePersistentThreadState+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %ecx;xorl %ebx, %ebx;cmpl %ebx, ;setne %al;movb %al, (%ecx)": 1,
                "testb $, %al;pushl %edi;je  <KeCapturePersistentThreadState+>;cmpl %ebx, ;movl $, ": 1,
                "cmpl , %eax;je  <KeCapturePersistentThreadState+>;movl $, ;xorb %al, %al;jmp  <KeCapturePersistentThreadState+>": 1,
                "pushl $;pushl %ebx;movl %eax, %edi;calll  <RtlFillMemoryUlong>;movl (%ebp), %eax": 1,
                "movl %edi, (%ebx);movl %cr, %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %cr, %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl %eax, (%ebx);movl , %eax": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, -(%ebp);jmp  <KeCapturePersistentThreadState+>;movl , %eax": 1,
                "movb (%esi), %cl;movb %cl, (%edx,%esi);incl %esi;testb %cl, %cl;jne - <KeCapturePersistentThreadState+>": 1,
                "movl $, (%ebx);xorl %esi, %esi;movl %esi, (%ebx);movl %esi, (%ebx);movl (%edx), %ecx": 1,
                "leal (%ebp), %eax;movl %esi, (%ebx);movl %esi, (%ebx);movb (%edi), %cl;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <MmCreateMdl>;orb $, -(%ebp);movl (%edi), %eax": 1,
                "orb $, -(%ebp);movl %eax, -(%ebp);movl (%edi), %edi;movl $, %eax;pushl $": 1,
                "subl %eax, (%ebp);addl %eax, (%ebp);xorl %ecx, %ecx;subl %eax, (%esi);sbbl %ecx, (%esi)": 1,
                "movzbl %al, %eax;pushl %eax;pushl (%edi);movl (%edi), %eax;subl $, %eax": 1,
                "movl (%eax), %eax;shll $, %eax;testb $, (%edi);movl %eax, (%ebp);je  <KeCapturePersistentThreadState+>": 1,
                "pushl %ecx;addl $, %eax;pushl %eax;pushl -(%ebp);addl $, %ebx": 1,
                "sbbl -(%ebp), %eax;xorl %edx, %edx;cmpl %edx, %eax;ja  <KeCapturePersistentThreadState+>;jb  <KeCapturePersistentThreadState+>": 1,
                "pushl %eax;movl %eax, -(%ebp);calll  <_allmul>;xorl %ecx, %ecx;pushl %ecx": 1,
                "addl $, %esp;movl , %eax;pushl %ebx;addl $, %eax;pushl %eax": 1,
                "pushl %ecx;calll - <IoCsqRemoveIrp+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl $;popl %ecx;sbbl %ecx, (%esi);addl %ebx, (%eax);adcl %ecx, (%eax)": 1,
                "popl %ecx;xorl %esi, %esi;pushl %esi;pushl (%ebp);leal -(%ebp), %eax": 1,
                "xorl %esi, %esi;pushl %esi;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 1,
                "calll - <KeCapturePersistentThreadState+>;pushl $;pushl %esi;pushl %esi;calll - <IoCsqRemoveIrp+>": 1,
                "pushl $;pushl %esi;pushl %esi;calll - <IoCsqRemoveIrp+>;calll *-(%ebp)": 1,
                "jl  <RtlVolumeDeviceToDosName+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll  <RtlInitUnicodeString>": 1,
                "pushl %edi;calll  <ExFreePoolWithTag>;jmp - <RtlVolumeDeviceToDosName+>;movl -(%ebp), %ecx;movl %eax, %edx": 1,
                "movl -(%ebp), %ecx;xorl %eax, %eax;movw (%edi), %ax;subw $, %ax;movw %ax, (%ecx)": 1,
                "calll  <ObfDereferenceObject>;movl %ebx, %eax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "movl %esp, %ebp;movl , %eax;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "cmpl %ebx, %eax;jne  <RtlVolumeDeviceToDosName+>;movl $, %eax;jmp  <RtlVolumeDeviceToDosName+>;xorl %ecx, %ecx": 1,
                "jne  <RtlVolumeDeviceToDosName+>;movl $, %eax;jmp  <RtlVolumeDeviceToDosName+>;xorl %ecx, %ecx;movb (%ebp), %cl": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;xorl %ecx, %ecx;movb (%ebp), %cl;addb (%ebp), %cl;addb $, %cl": 1,
                "cmpl %ebx, (%ebp);movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "orl $-, -(%ebp);pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi;movl $, -(%ebp)": 1,
                "pushl %eax;pushl %edi;pushl %edi;movl $, -(%ebp);calll  <KeDelayExecutionThread>": 1,
                "movzwl %di, %eax;pushl $;pushl %eax;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;addl $-, %eax": 4,
                "addl $-, %eax;cmpb $, (%eax);jne  <RtlVolumeDeviceToDosName+>;movl (%eax), %edx;movl $, %ecx": 1,
                "movl (%eax), %edi;jmp  <RtlVolumeDeviceToDosName+>;xorl %edi, %edi;movl , %esi;calll *%esi": 1,
                "calll  <ObfDereferenceObject>;pushl %esi;calll - <IoFreeIrp>;popl %esi;popl %ebp": 1,
                "testl %esi, %esi;movl %esi, %eax;jne - <RtlVolumeDeviceToDosName+>;popl %esi;pushl %edi": 1,
                "movl %esi, %eax;jne - <RtlVolumeDeviceToDosName+>;popl %esi;pushl %edi;calll - <IoFreeIrp>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;xorb %bl, %bl;calll *": 1,
                "pushl (%ebp);pushl (%ebp);calll  <MmProbeAndLockPages>;cmpl $, ;je  <RtlVolumeDeviceToDosName+>": 1,
                "movb $, ;xorb %al, %al;sti;retl;int": 1,
                "calll *;cmpb $, (%ebp);movb %al, -(%ebp);je  <RtlVolumeDeviceToDosName+>;movl $, -(%ebp)": 1,
                "pushl %ebx;pushl %esi;pushl %edi;jle  <RtlVolumeDeviceToDosName+>;movl %eax, -(%ebp)": 1,
                "xorl %edi, %edi;movl %ebx, %edx;movl (%edx), %esi;movl (%esi), %eax;andl -(%ebp), %eax": 1,
                "andl $-, %eax;orl $, %eax;movl %eax, (%esi);movl (%edx), %edx;testl %edx, %edx": 1,
                "calll *;pushl $;pushl %ebx;calll  <IoReportResourceUsage+>;calll *": 1,
                "pushl %ebx;calll  <IoReportResourceUsage+>;calll *;movb %al, -(%ebp);jmp  <RtlVolumeDeviceToDosName+>": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <RtlVolumeDeviceToDosName+>;movl %ebx, (%eax);movl -(%ebp), %eax": 1,
                "movl (%ecx,%eax,), %edx;movl (%edx), %esi;andl $-, (%esi);movl (%edx), %edx;testl %edx, %edx": 1,
                "testl %esi, %esi;je  <RtlVolumeDeviceToDosName+>;movl (%esi), %ecx;testb $, (%ecx);je  <RtlVolumeDeviceToDosName+>": 1,
                "movl (%esi), %esi;cmpl %edi, %esi;jne - <RtlVolumeDeviceToDosName+>;movb -(%ebp), %cl;calll *": 1,
                "movl %edi, (%esi);movl %esi, (%edx);movb %al, %cl;movl %esi, (%edi);calll *": 1,
                "movl %edi, %eax;popl %edi;popl %esi;retl;int": 8,
                "xorb %bl, %bl;calll - <RtlVolumeDeviceToDosName+>;movl %eax, %esi;testl %esi, %esi;je  <RtlVolumeDeviceToDosName+>": 1,
                "movl (%esi), %eax;andl $-, (%eax);movl (%esi), %eax;movl (%eax), %ecx;pushl (%ecx)": 2,
                "movl $, (%ebp);movl $, %eax;movl (%ebp), %ecx;xchgl %eax, (%ecx);cmpl $, %eax": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;leal -(%ebp), %eax;pushl %eax": 3,
                "cmpl $, (%ebp);movl (%ebp), %eax;movl (%eax), %esi;movw $, (%esi);je  <RtlVolumeDeviceToDosName+>": 1,
                "movl (%ebp), %eax;movb (%eax), %al;movl (%esi), %ecx;incb %al;movb %al, (%ecx)": 1,
                "movl %esp, %ebp;calll *;movl (%ebp), %edx;pushl %ebx;cmpl (%ebp), %edx": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <RtlVolumeDeviceToDosName+>;movl %eax, (%ecx);movb $, %al": 1,
                "je  <RtlVolumeDeviceToDosName+>;pushl %edi;pushl $;leal (%esi), %edi;popl %ecx": 1,
                "popl %ecx;leal (%edx), %esi;xorl %eax, %eax;rep  cmpsl %es:(%edi), (%esi);popl %edi": 1,
                "testl %eax, %eax;je - <RtlVolumeDeviceToDosName+>;andl $, (%eax);jmp - <RtlVolumeDeviceToDosName+>;xorb %al, %al": 1,
                "popl %ebp;retl $;movb $, %al;jmp - <RtlVolumeDeviceToDosName+>;int": 1,
                "je  <RtlVolumeDeviceToDosName+>;cmpl $, (%ebx);jne  <RtlVolumeDeviceToDosName+>;cmpl $, (%ebx);jne  <RtlVolumeDeviceToDosName+>": 1,
                "movl $, %ecx;andl %ecx, %eax;cmpl %ecx, %eax;je  <RtlVolumeDeviceToDosName+>;andl $, -(%ebp)": 1,
                "rep  movsb (%esi), %es:(%edi);jmp  <RtlVolumeDeviceToDosName+>;movl -(%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %ecx": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll - <RtlVolumeDeviceToDosName+>": 1,
                "cmpl $, -(%ebp);jne  <RtlVolumeDeviceToDosName+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "pushl (%ebx);calll  <ExFreePoolWithTag>;andl $-, (%ebx);movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebx), %ecx;movl %ecx, %edx;movl $, %eax;andl %eax, %edx;cmpl %eax, %edx": 2,
                "jne  <RtlVolumeDeviceToDosName+>;xorl %eax, %eax;jmp  <RtlVolumeDeviceToDosName+>;movl (%edi), %eax;andl $, %eax": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;movl (%edi), %eax;andl $, %eax;cmpl %esi, %eax;je  <RtlVolumeDeviceToDosName+>": 1,
                "pushl %esi;pushl %esi;testb $, (%ebx);je  <RtlVolumeDeviceToDosName+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %eax": 1,
                "leal (%edi), %eax;pushl %eax;calll  <KeSetEvent>;cmpl %esi, %edi;je  <RtlVolumeDeviceToDosName+>": 1,
                "calll  <ObfDereferenceObject>;movl (%ebx), %ecx;cmpl %esi, %ecx;je  <RtlVolumeDeviceToDosName+>;cmpl %esi, %edi": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;movl %esi, -(%ebp);movb $, -(%ebp);cmpl %esi, %edi;je  <RtlVolumeDeviceToDosName+>": 1,
                "cmpl %esi, %edi;je  <RtlVolumeDeviceToDosName+>;movl (%edi), %eax;cmpl %esi, %eax;je  <RtlVolumeDeviceToDosName+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <RtlVolumeDeviceToDosName+>;retl": 5,
                "cmpl $, -(%ebp);je - <RtlVolumeDeviceToDosName+>;orl $-, -(%ebp);movl -(%ebp), %ebx;movl -(%ebp), %edi": 1,
                "calll  <ObfDereferenceObject>;testb $, (%edi);je  <RtlVolumeDeviceToDosName+>;testb $, (%ebx);jne  <RtlVolumeDeviceToDosName+>": 1,
                "pushl %eax;calll  <KeSetEvent>;movl (%ebx), %eax;movl %eax, (%edi);testb $-, (%ebx)": 1,
                "pushl -(%ebp);pushl %esi;calll  <KeInitializeApc>;pushl $;pushl $": 1,
                "pushl $;pushl $;pushl (%ebx);pushl %esi;calll  <KeInsertQueueApc>": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;leal (%esi), %eax;movl %eax, -(%ebp);movw (%esi), %ax;movw %ax, -(%ebp)": 1,
                "testl %eax, %eax;je  <RtlVolumeDeviceToDosName+>;movl (%eax), %eax;testl %eax, %eax;je  <RtlVolumeDeviceToDosName+>": 1,
                "je  <RtlVolumeDeviceToDosName+>;pushl (%ebp);pushl %eax;calll - <RtlVolumeDeviceToDosName+>;testb %al, %al": 1,
                "calll  <ObfDereferenceObject>;xorl %eax, %eax;popl %ebx;popl %esi;leave": 1,
                "pushl %edi;leal (%esi), %eax;incl (%eax);movl (%eax), %eax;pushl $": 1,
                "incl (%eax);movl (%eax), %eax;pushl $;xorl %edx, %edx;popl %edi": 1,
                "pushl %ecx;movl $, %eax;pushl %eax;pushl %edi;calll  <KeSetTimerEx>": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <RtlVolumeDeviceToDosName+>;testl %esi, %esi;movl %esi, %eax": 1,
                "incl (%esi);calll *;testl %edi, %edi;je  <RtlVolumeDeviceToDosName+>;cmpl $, (%edi)": 1,
                "calll - <IofCompleteRequest+>;movl %esi, %ecx;calll  <ObfDereferenceObject>;cmpb $, -(%ebp);je  <RtlVolumeDeviceToDosName+>": 1,
                "movl (%edi), %ecx;movl %ecx, %eax;jmp  <RtlVolumeDeviceToDosName+>;cmpl %ebx, (%eax);jne  <RtlVolumeDeviceToDosName+>": 1,
                "calll  <ExQueueWorkItem>;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "movl %edx, ;movl %esi, (%edx);movb %al, %cl;calll *;movl %edi, %eax": 1,
                "movl (%edx), %ebx;testb %bl, %bl;js  <RtlVolumeDeviceToDosName+>;testb $, %bl;je  <RtlVolumeDeviceToDosName+>": 1,
                "movl $, %esi;movb %al, %cl;calll *;movl %esi, %eax;popl %esi": 2,
                "movb %al, %cl;calll *;movl (%ebp), %eax;xorl %ecx, %ecx;cmpw %cx, (%eax)": 1,
                "movb $, %al;jmp  <RtlVolumeDeviceToDosName+>;xorb %al, %al;leal -(%ebp), %edx;pushl %edx": 1,
                "xorb %al, %al;leal -(%ebp), %edx;pushl %edx;pushl -(%ebp);pushl %ecx": 1,
                "pushl %esi;calll - <RtlVolumeDeviceToDosName+>;xorl %eax, %eax;cmpl %eax, (%ebx);jl  <RtlVolumeDeviceToDosName+>": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebx);jl  <RtlVolumeDeviceToDosName+>;movl $, (%ebx);jmp  <RtlVolumeDeviceToDosName+>": 1,
                "pushl %esi;calll - <RtlVolumeDeviceToDosName+>;movl %edi, %eax;popl %edi;popl %esi": 1,
                "cmpl %edx, (%ecx);je  <RtlVolumeDeviceToDosName+>;testb $, (%edx);jne  <RtlVolumeDeviceToDosName+>;movl %edx, %esi": 1,
                "movl %esi, %ecx;calll  <ObfReferenceObject>;jmp  <RtlVolumeDeviceToDosName+>;xorl %esi, %esi;movb %bl, %cl": 1,
                "calll  <ObfDereferenceObject>;xorl %eax, %eax;jmp  <RtlVolumeDeviceToDosName+>;pushl %ebx;movl (%ebp), %ebx": 1,
                "pushl %ebx;movl (%ebp), %ebx;movb %cl, (%ebx);jmp  <RtlVolumeDeviceToDosName+>;movl (%edx), %esi": 1,
                "movl (%ebp), %edx;movl , %eax;cmpl %eax, %edx;jb  <RtlVolumeDeviceToDosName+>;movl (%eax), %ecx": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %esi;movl %esi, -(%ebp)": 1,
                "calll  <ExRaiseAccessViolation>;pushl $;movzwl -(%ebp), %eax;pushl %eax;pushl $": 4,
                "movzwl -(%ebp), %ecx;movl -(%ebp), %esi;movl %eax, %edi;movl %ecx, %edx;shrl $, %ecx": 2,
                "movl %eax, -(%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <ZwUnloadDriver>": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 5,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax": 4,
                "jl  <RtlVolumeDeviceToDosName+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "cmpl %ebx, %eax;jge  <RtlVolumeDeviceToDosName+>;cmpb %bl, -(%ebp);je  <RtlVolumeDeviceToDosName+>;movl %fs:, %eax": 1,
                "cmpb %bl, -(%ebp);je  <RtlVolumeDeviceToDosName+>;movl %fs:, %eax;movl (%eax), %eax;cmpl , %eax": 1,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);pushl $;pushl %eax;calll  <ExQueueWorkItem>": 1,
                "testb $, (%eax);je  <RtlVolumeDeviceToDosName+>;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "je  <RtlVolumeDeviceToDosName+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 2,
                "pushl $;movl %esi, -(%ebp);movl %edi, -(%ebp);movl %edx, -(%ebp);calll ": 1,
                "movl (%ebp), %ebx;leal (%ebx), %edx;movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "pushl (%ebx);pushl $;pushl $;calll  <ExAllocatePoolWithTag>;movl %eax, %esi": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne  <IoAcquireRemoveLockEx+>;pushl $": 1,
                "decl %eax;jne  <IoAcquireRemoveLockEx+>;pushl $;pushl $;addl $, %ebx": 1,
                "movl (%ebp), %edi;jne  <IoReleaseRemoveLockEx+>;pushl %ebx;pushl %esi;movb $, (%ebp)": 1,
                "movl (%esi), %eax;pushl $;movb $, (%ebp);pushl %esi;jne  <IoReleaseRemoveLockEx+>": 1,
                "leal (%edi), %edx;movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);leal (%edi), %eax;movl %eax, (%ebp)": 1,
                "cmpl %ecx, %eax;je  <IoInvalidateDeviceRelations+>;testb $, (%eax);jne  <IoInvalidateDeviceRelations+>;movl (%ebp), %eax": 1,
                "popl %ebp;retl $;pushl %esi;calll  <PoShutdownBugCheck+>;jmp - <IoInvalidateDeviceRelations+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %eax": 7,
                "cmpl %edx, %eax;je  <IoInvalidateDeviceState+>;testb $, (%eax);jne  <IoInvalidateDeviceState+>;cmpl $, (%eax)": 1,
                "negb %al;sbbl %eax, %eax;andl $, %eax;addl $, %eax;popl %ebp": 1,
                "jne  <IoRequestDeviceEject+>;pushl %edx;pushl $;pushl %ecx;calll - <IoInvalidateDeviceState+>": 1,
                "pushl $;pushl %ecx;calll - <IoInvalidateDeviceState+>;popl %ebp;retl $": 1,
                "movl %eax, (%esi);pushl $;movl %esi, (%eax);pushl $;leal (%edi), %eax": 1,
                "movl %ebx, %ecx;calll  <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);popl %edi": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;testb $, (%eax);jne  <IoReportTargetDeviceChangeAsynchronous+>;pushl %ebx;pushl %esi": 1,
                "negl %eax;sbbl %eax, %eax;incl %eax;movl %eax, (%ebp);jne  <IoReportTargetDeviceChangeAsynchronous+>": 3,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;movw (%esi), %ax;cmpw $, %ax;jb  <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %ecx": 1,
                "subl $, %edx;cmpl %edx, %ecx;jle  <IoReportTargetDeviceChangeAsynchronous+>;movl $, %eax;popl %edi": 1,
                "movl $, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 26,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 11,
                "rep  movsb (%esi), %es:(%edi);andl $, (%ebx);movl %eax, (%ebx);movl (%ebp), %eax;pushl $": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl (%eax), %eax;testl %eax, %eax;jne - <IoReportTargetDeviceChangeAsynchronous+>;retl": 1,
                "pushl %esi;pushl %esi;pushl %eax;calll  <IoReportResourceUsage+>;testb %al, %al": 1,
                "xorl %eax, %eax;popl %edi;popl %ebx;leave;retl $": 2,
                "movl %ebx, (%ebp);jbe  <IoReportTargetDeviceChangeAsynchronous+>;movl (%edi), %eax;movl (%ebp), %ecx;movl (%eax,%ecx,), %esi": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll  <IoReportResourceUsage+>": 1,
                "movl %eax, %ebx;movl -(%ebp), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;orl $, (%eax)": 1,
                "pushl $;pushl -(%ebp);calll  <IoReportTargetDeviceChangeAsynchronous+>;xorl %ebx, %ebx;incl (%ebp)": 1,
                "calll  <ExFreePoolWithTag>;movl (%edi), %eax;cmpl %ebx, %eax;movl %ebx, (%edi);movb $, (%ebp)": 1,
                "calll  <IoReportResourceUsage+>;movb $, (%ebp);testl %ebx, %ebx;movl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "jne - <IoReportTargetDeviceChangeAsynchronous+>;pushl %ebx;pushl $;pushl %edi;calll  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;pushl $;pushl %eax;calll  <IoReportResourceUsage+>;movl %esi, %ecx": 1,
                "movzwl (%esi), %eax;pushl %eax;pushl %esi;calll - <IoCsqRemoveIrp+>;movl (%esi), %eax": 1,
                "pushl %esi;calll - <IoCsqRemoveIrp+>;movl (%esi), %eax;cmpl %ebx, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movl (%esi), %eax;movl (%eax), %eax;cmpl %ebx, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;pushl $": 1,
                "jl  <IoReportTargetDeviceChangeAsynchronous+>;pushl (%ebp);calll  <IoReportResourceUsage+>;movl %eax, %edi;pushl %ebx": 1,
                "jmp  <IoReportTargetDeviceChangeAsynchronous+>;calll  <IoReportResourceUsage+>;cmpl %edi, %ebx;jge  <IoReportTargetDeviceChangeAsynchronous+>;xorl %eax, %eax": 1,
                "movl (%esi), %edi;testl %edi, %edi;jge  <IoReportTargetDeviceChangeAsynchronous+>;xorl %eax, %eax;cmpl $, %edi": 1,
                "testl %edi, %edi;jge  <IoReportTargetDeviceChangeAsynchronous+>;xorl %eax, %eax;cmpl $, %edi;sete %al": 1,
                "pushl $;pushl %esi;calll  <IoReportResourceUsage+>;cmpl $, (%esi);je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movb %al, -(%ebp);je  <IoReportTargetDeviceChangeAsynchronous+>;pushl %edi;movl (%esi), %eax;cmpl (%ebp), %eax": 1,
                "pushl %edi;movl (%esi), %eax;cmpl (%ebp), %eax;movl (%esi), %edi;jne  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%eax);movl (%esi), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "calll  <ObfDereferenceObject>;pushl $;pushl %esi;calll  <ExFreePoolWithTag>;cmpl %ebx, %edi": 1,
                "addb %ah, (%edx);insb %dx, %es:(%edi);addb %ah, (%ebp);decl %ecx;addb %al, (%eax,%eax)": 6,
                "addb %al, (%bp);insb %dx, %es:(%edi);addb %ah, (%ecx);addb %dh, (%bp,%di);addb %al, (%eax)": 6,
                "cmpl $, -(%ebp);jne  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl %ebx, -(%ebp)": 1,
                "movl (%eax), %esi;movl -(%ebp), %edi;addl %eax, %esi;cmpw %bx, (%esi);je  <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "movl -(%ebp), %edi;addl %eax, %esi;cmpw %bx, (%esi);je  <IoReportTargetDeviceChangeAsynchronous+>;cmpw %bx, (%edi)": 2,
                "addl %eax, %esi;cmpw %bx, (%esi);je  <IoReportTargetDeviceChangeAsynchronous+>;cmpw %bx, (%edi);je  <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "movb $, %cl;movb $, (%eax);calll *;pushl -(%ebp);calll  <ZwClose>": 1,
                "calll  <ZwClose>;orl $, (%esi);movl (%esi), %eax;testb $, %ah;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "cmpl $, (%esi);jne  <IoReportTargetDeviceChangeAsynchronous+>;movl $, %eax;jmp  <IoReportTargetDeviceChangeAsynchronous+>;orl $, %eax": 1,
                "jge  <IoReportTargetDeviceChangeAsynchronous+>;movl %edi, %eax;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ecx;calll  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movl (%edi), %ecx;calll  <ObfDereferenceObject>;andl $, (%edi);movl (%edi), %edi;cmpl %esi, %edi": 1,
                "xorl %eax, %eax;movb , %al;pushl %edi;pushl -(%ebp);pushl %eax": 1,
                "calll  <IoReportResourceUsage+>;movb $, -(%ebp);movb $, -(%ebp);jmp - <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %eax": 1,
                "jmp - <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %eax;cmpl %edi, %eax;movl %esi, (%esi);movl %esi, (%esi)": 1,
                "calll  <IoReportResourceUsage+>;cmpl %edi, %eax;movl %eax, -(%ebp);jge  <IoReportTargetDeviceChangeAsynchronous+>;movb $, -(%ebp)": 1,
                "jmp  <IoReportTargetDeviceChangeAsynchronous+>;pushl %esi;calll  <IoReportResourceUsage+>;jmp  <IoReportTargetDeviceChangeAsynchronous+>;pushl ": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "cmpl %ebx, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%edi), %eax": 1,
                "pushl %ebx;pushl %eax;calll  <KeSetEvent>;cmpl %esi, %edi;jne  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "calll  <ExFreePoolWithTag>;cmpl %esi, %edi;jne - <IoReportTargetDeviceChangeAsynchronous+>;jmp - <IoReportTargetDeviceChangeAsynchronous+>;pushl %edi": 1,
                "popl %ebx;leave;retl $;popal;calll -": 1,
                "addb %ch, -(%ebx);calll -;incl %ecx;addb %cl, -(%edi);calll -": 1,
                "calll -;incl %ecx;addb %cl, -(%edi);calll -;incl %ecx": 1,
                "calll -;incl %ecx;addb %cl, %ah;int;int": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;pushl %edi;movl (%ebp), %edi;cmpl %ebx, %edi;jne  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "calll  <ObfReferenceObject>;movb (%ebp), %al;movb %al, (%esi);movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %edi;je  <IoReportTargetDeviceChangeAsynchronous+>;cmpb %bl, ;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;cmpb %bl, ;je  <IoReportTargetDeviceChangeAsynchronous+>;cmpb %bl, ;jne  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;testl %eax, %eax;movl %ecx, -(%ebp);movl $, -(%ebp)": 1,
                "xorl %ecx, %ecx;cmpl %ecx, (%esi);je  <IoReportTargetDeviceChangeAsynchronous+>;pushl %ecx;pushl %ecx": 1,
                "movl (%esi), %eax;jbe  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %ecx;jbe  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %ecx": 1,
                "pushl %eax;calll  <KeSetEvent>;testl %edi, %edi;jne  <IoReportTargetDeviceChangeAsynchronous+>;calll *": 1,
                "calll  <KeSetEvent>;testl %edi, %edi;jne  <IoReportTargetDeviceChangeAsynchronous+>;calll *;movb %al, %cl": 1,
                "movl (%esi), %esi;calll *;testl %esi, %esi;jne - <IoReportTargetDeviceChangeAsynchronous+>;cmpl %esi, (%ebp)": 1,
                "movl (%esi), %eax;andb $-, (%eax);pushl (%ebp);calll - <IoReleaseVpbSpinLock>;pushl %edi": 1,
                "movl (%eax), %eax;cmpl %edi, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;pushl %eax;calll - <RtlVolumeDeviceToDosName+>": 1,
                "pushl %eax;movl $, (%edx);movl %edx, (%edx);calll  <ExQueueWorkItem>;pushl (%ebp)": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 67,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;pushl %edi;pushl $;pushl %esi;movl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, %edi;pushl %edi": 1,
                "pushl (%ebp);calll  <ExFreePoolWithTag>;andl $, (%ebp);pushl $;pushl -(%ebp)": 1,
                "andl $, %eax;pushl %eax;pushl %ebx;calll  <IoReportResourceUsage+>;testb $, (%ebx)": 1,
                "movl (%esi), %ecx;calll  <ObfDereferenceObject>;addl $, %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "addl $, %esi;movl (%esi), %eax;testl %eax, %eax;jne - <IoReportTargetDeviceChangeAsynchronous+>;xorl %edi, %edi": 1,
                "cmpl $, %eax;jl  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %eax;jle  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %eax": 1,
                "jl  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %eax;jle  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %eax;jg  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl $, %esi;pushl %edi": 2,
                "divl %edi;movl %edx, (%ecx);movb %bl, %dl;movl %esi, %ecx;calll *": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;decl %eax;cmpl $, %eax": 1,
                "decl %eax;cmpl $, %eax;ja  <IoReportTargetDeviceChangeAsynchronous+>;movzbl (%eax), %eax;jmpl *(,%eax,)": 1,
                "addb (%edx), %al;addb (%ecx), %al;addb %al, (%edx);addl %eax, (%edx);addb %al, (%edx)": 1,
                "addb %al, (%edx);addl %eax, (%edx);addb %al, (%edx);addl %eax, (%edx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %al, (%edx);addl %eax, (%edx);addb (%edx), %al": 1,
                "movl (%ecx), %edx;testl %edx, %edx;jne - <IoReportTargetDeviceChangeAsynchronous+>;movl %ecx, (%eax);movb -(%ebp), %dl": 1,
                "movb -(%ebp), %dl;movl %edi, %ecx;calll *;leal (%esi), %eax;movl (%eax), %ecx": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;pushl %edi;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "cmpw (%ecx), %ax;jne  <IoReportTargetDeviceChangeAsynchronous+>;pushl $;pushl %ecx;pushl %edx": 1,
                "pushl %ecx;pushl %edx;calll  <RtlCompareUnicodeString>;testl %eax, %eax;jne  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl %esi;pushl %edi;calll ": 2,
                "pushl $;calll ;addl $, %esp;jmp  <IoReportTargetDeviceChangeAsynchronous+>;cmpl %ebx, ": 1,
                "calll ;addl $, %esp;popl %ebx;popl %ebp;retl $": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl %edi, %esi;pushl %ebx;calll  <PoStartNextPowerIrp>;cmpl %edi, %esi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ebp), %eax;movl %eax, (%ecx)": 1,
                "calll - <IofCompleteRequest>;popl %ebp;retl $;int;popl %esp": 1,
                "jb  <IoReportTargetDeviceChangeAsynchronous+>;jns  <IoReportTargetDeviceChangeAsynchronous+>;popl %esp;addb %cl, (%ebp);popal": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);addb %ch, (%ecx);addb %al, (%si);incl %edx": 4,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %cl, %ah;int;int": 1,
                "pushl %esi;movl $, %esi;xorl %ebx, %ebx;pushl %edi;movl %esi, %ecx": 1,
                "pushl $;pushl $;pushl $;pushl %ebx;leal -(%ebp), %eax": 11,
                "calll  <ZwClose>;pushl -(%ebp);calll  <ZwClose>;movl , %eax;cmpl %ebx, %eax": 1,
                "movl %ebx, (%esi);leal -(%ebp), %eax;pushl %eax;subl %edi, %esi;sarl $, %esi": 1,
                "pushl %ebx;pushl %esi;movl $, %esi;movl %esi, %ecx;calll *": 4,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi": 11,
                "movl %eax, (%esi);xorl %eax, %eax;movl %edx, (%esi);leal (%esi), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "pushl %ebx;calll ;popl %edi;popl %esi;popl %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax": 2,
                "movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl %eax, (%ecx)": 1,
                "cmpl $, (%ebp);jg  <KdPowerTransition+>;calll  <wctomb+>;jmp  <KdPowerTransition+>;movl $, %esi": 1,
                "jg  <KdPowerTransition+>;calll  <wctomb+>;jmp  <KdPowerTransition+>;movl $, %esi;jmp  <KdPowerTransition+>": 1,
                "calll  <wctomb+>;movl %esi, %eax;popl %esi;popl %ebp;retl $": 2,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll ;pushl $": 1,
                "calll  <KeQueryTimeIncrement+>;movb -(%ebp), %al;popl %ebx;leave;retl": 1,
                "xorb %bl, %bl;cmpb %al, ;je  <KdPollBreakIn+>;cmpb %al, ;je  <KdPollBreakIn+>": 1,
                "movl $, %edi;cmpl %edi, %edx;ja  <KdPollBreakIn+>;leal -(%ebp), %edx;pushl %edx": 1,
                "pushl $;pushl %ebx;pushl %eax;pushl $;pushl (%ecx)": 1,
                "pushl %eax;movl (%ebp), %eax;movl (%eax), %eax;pushl $;pushl $": 1,
                "pushl %ebx;movl $, %ebx;pushl %ebx;addl %esi, %eax;pushl $": 1,
                "movl %eax, ;jmp  <KdPollBreakIn+>;addl %eax, ;cmpl %edi, ;jb  <KdPollBreakIn+>": 1,
                "pushl %eax;pushl %ebx;pushl (%esi);calll ;testl %eax, %eax": 2,
                "pushl (%esi);calll ;testl %eax, %eax;jl  <KdPollBreakIn+>;testb $, -(%esi)": 1,
                "pushl %edi;je  <KdPollBreakIn+>;movb -(%ebp), %al;pushl $;pushl %ebx": 1,
                "je  <KdPollBreakIn+>;movb -(%ebp), %al;pushl $;pushl %ebx;pushl (%esi)": 1,
                "jmp  <KdPollBreakIn+>;leal (%esi), %eax;pushl %eax;pushl %ebx;pushl (%esi)": 1,
                "decl %eax;pushl %esi;pushl %eax;calll ;testl %eax, %eax": 1,
                "pushl (%ebp);pushl (%ebp);calll ;movb %al, (%ebp);movl %ds:, %eax": 1,
                "cmpb $, (%ebp);jne - <KdPollBreakIn+>;cmpl $, %eax;je  <KdPollBreakIn+>;testl %eax, %eax": 1,
                "jne - <KeQuerySystemTime+>;popl %ebp;retl $;int;int": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl , %ecx;movl (%ebp), %eax": 3,
                "movl %ebx, (%ebp);movl %edx, (%ebp);movl (%ebp), %edx;testl %edx, %edx;popl %ebx": 1,
                "movsbl , %ecx;movl (%ebp), %eax;cmpl %ecx, %eax;jae  <KeGetRecommendedSharedDataAlignment+>;movl (,%eax,), %eax": 1,
                "jne  <KeLeaveCriticalRegion+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <KeLeaveCriticalRegion+>;movb $, (%eax)": 1,
                "movl (%ebp), %edx;testl %edx, %edx;movl (%ebp), %ecx;jg  <KeLeaveCriticalRegion+>;jl  <KeLeaveCriticalRegion+>": 1,
                "movl , %eax;movl %eax, (%esi);movl , %eax;cmpl %eax, (%esi);jne - <KeLeaveCriticalRegion+>": 1,
                "movl (%edi), %edi;sbbl (%esi), %edi;addl %ebx, ;movb -(%ebp), %cl;movl %edi, -(%ebp)": 1,
                "addl %ebx, ;adcl %edi, ;calll *;cmpb $, (%ebp);je  <KeLeaveCriticalRegion+>": 1,
                "movl %eax, -(%ebp);movl $, %edi;movl $, (%ebp);movl (%edi), %esi;jmp  <KeLeaveCriticalRegion+>": 1,
                "cmpb $, (%eax);movl (%esi), %esi;je  <KeLeaveCriticalRegion+>;movl (%eax), %edx;addl $, %eax": 1,
                "testl %eax, %eax;jne  <KeLeaveCriticalRegion+>;movb $, (%esi);movl -(%ebp), %eax;leal -(%ebp), %ecx": 1,
                "calll  <ZwYieldExecution+>;jmp  <KeLeaveCriticalRegion+>;movb -(%ebp), %cl;calll  <KiUnexpectedInterrupt+>;calll  <KeRevertToUserAffinityThread>": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl (%edx), %eax;movl (%eax), %ecx;movl $, %eax": 1,
                "calll *;testl %esi, %esi;movb %al, %dl;jne  <KeQueryIoAccessMap+>;movl (%ebp), %edi": 1,
                "pushl %eax;pushl $;pushl %esi;calll  <KeRaiseUserException+>;movl -(%ebp), %ecx": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;leal (%esi), %ecx": 5,
                "jne - <KeReadStateSemaphore+>;movb $, %cl;calll  <KiUnexpectedInterrupt+>;leal -(%ebp), %ecx;calll *": 1,
                "pushl %esi;movl (%ebp), %esi;movsbl (%esi), %eax;cmpl %ebx, %eax;jne  <KeReadStateSemaphore+>": 1,
                "leal -(%edi), %ecx;movsbl (%ecx), %edx;addl (%ebp), %edx;pushl $;popl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%ebp), %eax;pushl %esi": 1,
                "pushl $;popl %ecx;movl %edx, %esi;movl %eax, %edi;rep  movsl (%esi), %es:(%edi)": 5,
                "popl %ecx;movl %edx, %esi;movl %eax, %edi;rep  movsl (%esi), %es:(%edi);movl (%edx), %esi": 1,
                "cmpl %ecx, %esi;jne  <KeReadStateSemaphore+>;addl $, %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "movl %esi, (%ecx);movl %edx, (%eax);movl %ecx, (%esi);movl %ecx, (%edx);popl %edi": 1,
                "pushl %edi;calll *;movl (%esi), %edi;decw (%edi);cmpw $, (%edi)": 1,
                "movl %eax, -(%ebp);jne - <KeDetachProcess+>;calll - <KeReadStateSemaphore+>;leal (%esi), %ebx;leal (%esi), %eax": 1,
                "calll *;cmpb $, (%esi);movb %al, -(%ebp);je  <KeUnstackDetachProcess+>;cmpb $, (%esi)": 1,
                "cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;movl %eax, -(%ebp);jne - <KeUnstackDetachProcess+>;calll - <KeReadStateSemaphore+>": 1,
                "pushl $;calll  <KeBugCheck>;int;int;int": 1,
                "movb %bl, (%eax);jmp  <KeUnstackDetachProcess+>;movb %bl, %cl;calll  <KiUnexpectedInterrupt+>;movl %esi, %eax": 1,
                "movb $, (%esi);cmpb $, (%ebx);jne  <KeUnstackDetachProcess+>;leal (%ebx), %esi;jmp  <KeUnstackDetachProcess+>": 1,
                "movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);cmpb $, (%ebx)": 1,
                "movl %eax, (%edi);movl %eax, %ebx;movl (%ebp), %eax;movl $, %ecx;movl (%ebp), %edx": 1,
                "movb %al, (%esi);calll  <ZwYieldExecution+>;popl %edi;popl %esi;popl %ebx": 1,
                "leal (%esi), %eax;pushl %eax;pushl (%ebp);pushl %edi;pushl %esi": 2,
                "movzbl (%esi), %eax;pushl %eax;pushl (%esi);pushl %edi;pushl $": 1,
                "pushl %edi;pushl $;calll  <KeBugCheckEx>;int;int": 1,
                "pushl %edi;pushl %esi;calll - <KeUnstackDetachProcess+>;movl (%ebp), %eax;andl $, (%eax)": 1,
                "addl $, %eax;movl %eax, -(%ebp);decl -(%ebp);jmp - <KeStackAttachProcess+>;xorl %eax, %eax": 1,
                "jl  <KeStackAttachProcess+>;cmpl $, -(%ebp);jne  <KeStackAttachProcess+>;cmpb %bl, -(%ebp);je  <KeStackAttachProcess+>": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;pushl $": 9,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl $;jmp - <KeStackAttachProcess+>": 1,
                "je  <KeStackAttachProcess+>;jmp  <KeStackAttachProcess+>;pushl %esi;calll  <MmIsAddressValid>;testb %al, %al": 1,
                "incl %ebx;cmpl $, %ebx;ja  <KeStackAttachProcess+>;cmpl $, (%ebp);jne  <KeStackAttachProcess+>": 1,
                "jne  <KeStackAttachProcess+>;movl (%esi), %esi;jmp  <KeStackAttachProcess+>;movl %esi, %eax;movl (%eax), %ecx": 1,
                "popl %esi;popl %ebx;leave;retl $;orb (%edx), %ch": 1,
                "andb %ah, ;subl $, %eax;jb  <KeStackAttachProcess+>;jae  <KeStackAttachProcess+>;andb %ah, ": 1,
                "subl $, %eax;jb  <KeStackAttachProcess+>;jae  <KeStackAttachProcess+>;andb %ah, ;jae  <KeStackAttachProcess+>": 1,
                "andb %ah, (%ecx);andb %ah, ;popal;je  <KeStackAttachProcess+>;pushl %ebx": 1,
                "pushl %ebx;je  <KeStackAttachProcess+>;insl %dx, %es:(%edi);jo  <KeStackAttachProcess+>;andl $, %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;addl $, %edi": 1,
                "movl %eax, -(%ebp);jb - <KeStackAttachProcess+>;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;movl %ebx, %ecx;calll  <KiReleaseSpinLock>;movb -(%ebp), %cl;calll *": 1,
                "movl %ebx, -(%ebp);cmpl -(%ebp), %ebx;je  <KeRegisterBugCheckCallback+>;testb $, %bl;jne  <KeRegisterBugCheckCallback+>": 1,
                "je  <KeRegisterBugCheckCallback+>;testb $, %bl;jne  <KeRegisterBugCheckCallback+>;movl %ebx, %esi;xorl %edi, %edi": 1,
                "movl (%ebx), %edx;movl (%ebx), %esi;movl (%ebx), %eax;addl %esi, %eax;addl %edx, %eax": 1,
                "xorl %eax, %eax;incl %eax;retl;movl -(%ebp), %esp;movl -(%ebp), %ebx": 12,
                "calll  <KiAcquireSpinLock>;movl (%ebp), %eax;xorb %bl, %bl;cmpb $, (%eax);jne  <KeDeregisterBugCheckReasonCallback+>": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %ebx;pushl %edi;movb $, %cl": 1,
                "movl , %ebx;testl %ebx, %ebx;je  <KeRegisterBugCheckReasonCallback+>;cmpl $, ;je  <KeRegisterBugCheckReasonCallback+>": 1,
                "incl %edi;incl -(%ebp);cmpl $, -(%ebp);jb - <KeRegisterBugCheckReasonCallback+>;movl -(%ebp), %eax": 1,
                "cmpb $, (%esi);jne - <KeRegisterBugCheckReasonCallback+>;cmpl %eax, (%esi);jne - <KeRegisterBugCheckReasonCallback+>;cmpl $, %ecx": 1,
                "jne - <KeRegisterBugCheckReasonCallback+>;pushl %edx;calll  <MmIsAddressValid>;testb %al, %al;je - <KeRegisterBugCheckReasonCallback+>": 1,
                "xorb %bh, (%eax);jo  <KeRegisterBugCheckReasonCallback+>;xorb %bh, (%eax);jo  <KeRegisterBugCheckReasonCallback+>;xorb %bh, (%eax)": 4,
                "xorb %bh, (%eax);jo  <KeRegisterBugCheckReasonCallback+>;orb (%edx), %cl;addb %al, (%edx,%esi,);jbe  <KeRegisterBugCheckReasonCallback+>": 1,
                "decl %edi;pushl %eax;cmpb (%eax), %ah;xorb %bh, (%eax);xorb %bh, (%eax)": 1,
                "subl $, %eax;je  <KeRegisterBugCheckReasonCallback+>;decl %eax;je  <KeRegisterBugCheckReasonCallback+>;subl $, %eax": 2,
                "je  <KeRegisterBugCheckReasonCallback+>;decl %eax;je  <KeRegisterBugCheckReasonCallback+>;subl $, %eax;je  <KeRegisterBugCheckReasonCallback+>": 1,
                "movl (%ebp), %eax;movl -(%ebp), %esi;movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %eax, ": 1,
                "jmp - <KeRegisterBugCheckReasonCallback+>;movl $, -(%ebp);jmp - <KeRegisterBugCheckReasonCallback+>;movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "jne  <KeRegisterBugCheckReasonCallback+>;testl %edx, %edx;je  <KeRegisterBugCheckReasonCallback+>;movl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl (%eax), %esi;leal -(%ebp), %eax;pushl %eax;pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movb $, %bl;movl -(%ebp), %edi;pushl %edi;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "addl $, %ebx;movl %ebx, ;jmp  <KeRegisterBugCheckReasonCallback+>;cmpl %edi, %esi;jne  <KeRegisterBugCheckReasonCallback+>": 1,
                "movl %eax, ;jmp  <KeRegisterBugCheckReasonCallback+>;cmpl , %ecx;jb  <KeRegisterBugCheckReasonCallback+>;cmpl , %ecx": 1,
                "jmp  <KeRegisterBugCheckReasonCallback+>;movl %esi, -(%ebp);movl , %eax;testl %eax, %eax;je  <KeRegisterBugCheckReasonCallback+>": 1,
                "jne  <KeRegisterBugCheckReasonCallback+>;cmpl %esi, ;je  <KeRegisterBugCheckReasonCallback+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %esi, -(%ebp);je  <KeRegisterBugCheckReasonCallback+>;pushl -(%ebp);calll  <DbgPrint>;popl %ecx": 2,
                "pushl %esi;pushl %esi;pushl %esi;pushl $;movl %eax, -(%ebp)": 1,
                "pushl %esi;pushl $;movl %eax, -(%ebp);movb $, -(%ebp);calll  <HeadlessDispatch>": 1,
                "pushl %esi;calll - <InbvSolidColorFill>;pushl $;calll - <InbvSetTextColor>;pushl %esi": 1,
                "pushl %esi;pushl %esi;calll - <InbvSetScrollRegion>;cmpb $, -(%ebp);jne  <KeRegisterBugCheckReasonCallback+>": 1,
                "pushl $;calll - <KeStackAttachProcess+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;calll - <KeStackAttachProcess+>;pushl ;leal -(%ebp), %eax;pushl ": 1,
                "pushl %eax;calll - <InbvDisplayString>;cmpl %esi, ;je  <KeRegisterBugCheckReasonCallback+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <InbvDisplayString>;cmpl %esi, ;jne  <KeRegisterBugCheckReasonCallback+>": 1,
                "movl %ds:, %eax;movl $, %ebx;leal (%eax), %edi;movl %ebx, %ecx;leal -(%ebp), %esi": 1,
                "orb $, ;movl , %eax;movl $, %edi;movl $, %esi;pushl %edi": 1,
                "pushl %edi;andl %esi, %eax;pushl %eax;calll - <IoCsqRemoveIrp+>;movl , %eax": 4,
                "calll - <IoCsqRemoveIrp+>;movl %ds:, %eax;cmpl $, (%eax);je  <KeRegisterBugCheckReasonCallback+>;movl %ds:, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl ;pushl ;pushl ": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movb (%eax), %al;popl %ebp": 3,
                "pushl %edi;leal (%esi,%eax), %ebx;calll *;andl $, (%ebp);movb %al, (%ebp)": 1,
                "jmp  <KeReadStateTimer+>;leal -(%edi), %edx;movl (%edi), %edi;leal -(%esi), %ecx;cmpl %ecx, %edx": 1,
                "cmpl %eax, %edi;jne - <KeReadStateTimer+>;addl $, (%ebp);addl $, %eax;cmpl $, (%ebp)": 1,
                "popl %esi;popl %ebx;popl %ebp;retl $;pushl %ebx": 4,
                "movl %edx, (%eax);movl %edx, (%eax);popl %ebp;retl $;int": 1,
                "calll *;movl (%ebp), %edx;movb (%edx), %bl;testb %bl, %bl;je  <KeCancelTimer+>": 1,
                "movl (%ebp), %edx;movb (%edx), %bl;testb %bl, %bl;je  <KeCancelTimer+>;movb $, (%edx)": 1,
                "movb %al, %cl;calll  <KiUnexpectedInterrupt+>;movb %bl, %al;popl %ebx;popl %ebp": 3,
                "testl %eax, %eax;jne  <KeSetTimerEx+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <KeSetTimerEx+>": 1,
                "leal (%esi), %eax;cmpl %eax, (%eax);je  <KeSetTimerEx+>;xorl %edx, %edx;movl %esi, %ecx": 1,
                "je  <KeSetTimerEx+>;jmp  <KeSetTimerEx+>;pause;movl , %eax;movl -, %ecx": 1,
                "calll  <_allmul>;movl %eax, %edi;movl %edx, %ebx;pushl %ebx;pushl %edi": 1,
                "calll - <KeInitializeTimerEx>;popl %ebp;retl $;int;int": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <KeSetTimerEx>": 1,
                "movb %al, %cl;calll  <KiUnexpectedInterrupt+>;movl %esi, %eax;popl %esi;popl %ebp": 3,
                "jne  <KeSetEvent+>;movl (%ebp), %edx;movl %eax, (%ecx);calll  <ZwYieldExecution+>;movb (%ebp), %cl": 1,
                "testb %cl, %cl;je  <KeSetEvent+>;movl %fs:, %eax;movb %cl, (%eax);movb %bl, (%eax)": 1,
                "movb %al, %bl;movl (%edx), %eax;cmpl %edx, %eax;jne  <KeSetEventBoostPriority+>;movl $, (%ecx)": 1,
                "xorl %edx, %edx;cmpw %dx, (%eax);jne  <KeSetEventBoostPriority+>;incl %edx;movl %edx, (%ecx)": 1,
                "je  <KeSetEventBoostPriority+>;movl %esi, (%eax);movb (%edi), %al;subb %al, (%edi);movb %dl, (%edi)": 1,
                "cmpb $, (%esi);jge  <KeSetEventBoostPriority+>;movb $, (%esi);xorl %edx, %edx;movl %esi, %ecx": 1,
                "movw $, (%esi);movw $, (%esi);je  <KeInitializeInterrupt+>;movl %eax, (%esi);jmp  <KeInitializeInterrupt+>": 1,
                "movb %al, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movb (%ebp), %al;movb %al, (%esi)": 1,
                "movb (%ebp), %al;movb %al, (%esi);movb (%ebp), %al;movb %al, (%esi);movb (%ebp), %al": 1,
                "movl (%edi), %ebx;movl %ebx, (%edx);addl $, %edi;addl $, %edx;cmpl $, %edi": 1,
                "movl %eax, (%ebp);calll *;movl (%edi), %ecx;pushl (%ebp);movzbl %al, %eax": 1,
                "jne  <KeInitializeInterrupt+>;andl $, (%esi);jmp  <KeInitializeInterrupt+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "andl $, (%esi);jmp  <KeInitializeInterrupt+>;movl (%esi), %eax;movl (%eax), %eax;cmpl (%esi), %eax": 1,
                "movl (%eax), %eax;movw %di, (%ecx,%eax);popl %edi;popl %esi;popl %ebx": 1,
                "movb (%esi), %al;movb %al, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%esi)": 1,
                "pushl %eax;pushl (%esi);calll - <KeInitializeInterrupt+>;cmpl $, -(%ebp);jne  <KeDisconnectInterrupt+>": 1,
                "cmpb %al, (%esi);jb  <KeConnectInterrupt+>;cmpb %bl, (%esi);jne  <KeConnectInterrupt+>;xorl %eax, %eax": 1,
                "pushl %eax;calll  <KeSetSystemAffinityThread>;calll *;cmpb %bl, (%esi);movb %al, (%ebp)": 1,
                "jmp  <KeConnectInterrupt+>;cmpl $, -(%ebp);je  <KeConnectInterrupt+>;cmpb $, (%esi);je  <KeConnectInterrupt+>": 1,
                "calll - <KeDisconnectInterrupt>;xorb %bl, %bl;popl %edi;popl %esi;movb %bl, %al": 1,
                "movb $, (%esi);movl $, %edi;jmp  <KeDelayExecutionThread+>;testb %al, %al;je  <KeDelayExecutionThread+>": 1,
                "pushl (%edx);leal (%esi), %ecx;pushl (%edx);calll  <ZwYieldExecution+>;testl %eax, %eax": 3,
                "jne  <KeDelayExecutionThread+>;movl %ds:, %eax;movl %eax, (%ebp);movsbl (%esi), %eax;cmpl $, %eax": 1,
                "cmpl $, %eax;jge  <KeDelayExecutionThread+>;movsbl (%esi), %edx;cmpl %edx, %eax;je  <KeDelayExecutionThread+>": 1,
                "calll  <ZwYieldExecution+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "movb $, (%esi);movl (%eax), %ecx;movl %eax, (%ebx);movl %ecx, (%ebx);movl %ebx, (%ecx)": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp);je  <KeDelayExecutionThread+>;calll  <KeRundownQueue+>": 1,
                "leal -(%ebp), %edx;calll - <KeConnectInterrupt+>;movl %eax, (%ebp);calll *;movb %al, (%esi)": 2,
                "jmp - <KeDelayExecutionThread+>;movb $, (%esi);movl $, %edi;jmp  <KeDelayExecutionThread+>;xorl %edi, %edi": 1,
                "movl $, %edi;jmp  <KeDelayExecutionThread+>;xorl %edi, %edi;movb (%esi), %cl;calll  <KiUnexpectedInterrupt+>": 1,
                "cmpl $, (%ebp);jbe  <KeWaitForMultipleObjects+>;jmp  <KeWaitForMultipleObjects+>;cmpl $, (%ebp);jbe  <KeWaitForMultipleObjects+>": 1,
                "calll  <ExRaiseStatus>;movl -(%ebp), %edx;jmp  <KeWaitForMultipleObjects+>;cmpl $, (%edi);jle  <KeWaitForMultipleObjects+>": 1,
                "jne  <KeWaitForMultipleObjects+>;cmpb $, (%ebp);je  <KeWaitForMultipleObjects+>;movsbl (%ebp), %eax;cmpb $, (%eax,%esi)": 1,
                "leal (%esi), %eax;movl %eax, (%ecx);pushl (%edx);leal (%esi), %edi;pushl (%edx)": 1,
                "movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);movl (%eax), %eax": 1,
                "jne  <KeWaitForMultipleObjects+>;movb $, (%edi);movl $, (%esi);movl (%esi), %eax;movl (%eax), %ecx": 1,
                "pushl %esi;calll - <KeConnectInterrupt+>;movb (%esi), %cl;calll  <KiUnexpectedInterrupt+>;movl %edi, %eax": 2,
                "je  <KeWaitForSingleObject+>;movl %eax, (%edi);movl %edi, (%eax);movl %eax, (%esi);movl %eax, (%esi)": 1,
                "cmpb $, (%esi);jge  <KeWaitForSingleObject+>;movl %ecx, (%ebp);jmp  <KeWaitForSingleObject+>;andl $, (%ebp)": 1,
                "movl %ecx, (%ebp);jmp  <KeWaitForSingleObject+>;andl $, (%ebp);cmpb $, (%esi);movl , %eax": 1,
                "pushl $;calll  <ExRaiseStatus>;movl (%ebp), %edx;jmp  <KeWaitForSingleObject+>;cmpl $, (%ebx)": 1,
                "leal -(%ebp), %edx;calll - <KeConnectInterrupt+>;movl %eax, (%ebp);calll *;xorl %ecx, %ecx": 1,
                "movl %eax, (%esi);jmp  <KeWaitForSingleObject+>;movl %edi, (%edi);movb (%ebp), %al;movb (%ebp), %dl": 1,
                "movl %esi, (%ebx);jne  <KeWaitForSingleObject+>;movb $, (%ebx);movl $, (%esi);movl (%esi), %ecx": 1,
                "jne  <KeWaitForSingleObject+>;andl $, (%ebx);jmp  <KeWaitForSingleObject+>;cmpb $, %al;jne  <KeWaitForSingleObject+>": 1,
                "jne  <KeWaitForSingleObject+>;decl (%ebx);xorl %edi, %edi;jmp  <KeWaitForSingleObject+>;movsbl (%ebp), %eax": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);leal (%edi), %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "testl %eax, %eax;movl %eax, (%ebp);jne  <KeInsertQueueDpc+>;incl (%esi);addl $, (%esi)": 1,
                "jne  <KeInsertQueueDpc+>;cmpb $, (%edi);jne  <KeInsertQueueDpc+>;movl (%esi), %eax;cmpl (%esi), %eax": 1,
                "movl (%esi), %eax;cmpl (%esi), %eax;jae  <KeInsertQueueDpc+>;movb $, %cl;movl $, (%esi)": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);popl %edi;sete %al;popl %esi": 1,
                "calll *;movb %al, %bl;movl %ds:, %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "orl %ecx, %edx;movl (%eax), %ecx;andl $, %ecx;orl %ecx, %edx;movl %esi, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;calll  <KeIFlatToGdtSelector+>;movzwl (%ebp), %ecx;addl %ecx, %eax": 1,
                "incl %eax;cmpb $, ;movl %eax, -(%ebp);jne  <KeIGetLid+>;movl $, %eax": 1,
                "calll  <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi;movl %edi, ;jne  <KeIGetLid+>": 1,
                "xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl , %edi;pushl %ebx;pushl %esi": 1,
                "jb - <KeIGetLid+>;jmp  <KeIGetLid+>;movl , %ecx;movzwl %si, %eax;shll $, %eax": 1,
                "movl (%ebp), %eax;movw %si, (%eax);jmp - <KeIGetLid+>;cmpw $, (%ebp);je  <KeIGetLid+>": 1,
                "calll *;movzwl (%ebp), %edx;movl , %ecx;shll $, %edx;leal (%edx,%ecx), %esi": 1,
                "jne - <KeIReleaseLid+>;andl $, (%edx);jmp - <KeIReleaseLid+>;movl $, %esi;movb %al, %cl": 1,
                "movl , %edx;movzwl %ax, %eax;shll $, %eax;movl (%eax,%edx), %edx;cmpl (%ebp), %edx": 1,
                "movl (%eax), %esi;pushl %edi;movl (%eax), %edi;movl %esi, -(%ebp);pushl -(%ebp)": 1,
                "pushl %edi;movl (%eax), %edi;movl %esi, -(%ebp);pushl -(%ebp);calll - <KeRemoveQueueDpc+>": 1,
                "xorl %eax, %eax;popl %esi;leave;retl $;int": 15,
                "incl %esi;decl %edi;jne - <KeIAllocateGdtSelectors+>;popl %edi;movb %al, %cl": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %edi;calll *": 1,
                "pushl %esi;movl (%ebp), %esi;movzwl %cx, %ebx;movzwl (%esi), %edx;movl , %ecx": 1,
                "movb %bl, (%edx);movb %bh, (%edx);movl (%edx), %ecx;andl $, %ecx;orl $, %ecx": 1,
                "orl $, %ecx;xorl %edi, %edi;movl %ecx, (%edx);incl %edi;cmpb $, ": 1,
                "calll  <KeInitializeSpinLock>;pushl $;calll  <KeInitializeSpinLock>;calll  <KeIFlatToGdtSelector+>;movzbl (%ebp), %ecx": 1,
                "leal (%ecx,%eax), %esi;calll  <KeIFlatToGdtSelector+>;movl %eax, %edi;addl %esi, %edi;calll  <KeIFlatToGdtSelector+>": 1,
                "movl %esp, %eax;subl %edx, %eax;cli;movl %eax, %esp;movl $, %eax": 3,
                "addb %al, (%eax);movw %ax, %ss;pushw (%di);orb $, %al;incl %edi": 3,
                "movl $, %eax;movw %ax, %ss;pushw $;pushw $;pushw (%ebx)": 1,
                "movl (%ebx), %ebx;popl %ds;popl %es;popl %fs;popl %gs": 1,
                "pushw %es;pushw %fs;pushw %gs;pushw %ax;pushfw": 1,
                "movw %ax, %ds;movw %ax, %es;xorl %eax, %eax;movw %sp, %ax;addw %fs:(%di), %ax": 2,
                "xorl %eax, %eax;movw %sp, %ax;addw %fs:(%di), %ax;orb %al, (%eax);addb %al, (%eax)": 2,
                "pushl %edi;movl %eax, ;movl %ebx, ;movl %ecx, ;movl %edx, ": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %edx;cmpl $, %edx": 1,
                "je  <KeInitializeApc+>;movb (%ebp), %cl;movb %cl, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movsbl (%ebp), %ecx;movl (%ebp), %eax;pushl %esi;leal (%eax,%ecx,), %esi;cmpl %esi, (%esi)": 1,
                "testb %al, %al;movb %al, (%ebp);je  <KeInsertQueueApc+>;movsbl (%esi), %eax;movb $, (%esi)": 1,
                "je  <KeInsertQueueApc+>;movsbl (%esi), %eax;movb $, (%esi);movl (%edi,%eax,), %edx;movl (%esi), %eax": 1,
                "movl %eax, (%ecx);jmp  <KeInsertDeviceQueue+>;movb %bl, (%esi);xorb %bl, %bl;leal -(%ebp), %ecx": 1,
                "movb %bl, (%eax);calll  <KeReleaseInStackQueuedSpinLockFromDpcLevel>;popl %esi;movb %bl, %al;popl %ebx": 1,
                "leal (%esi), %ecx;leal -(%ebp), %edx;calll  <KeAcquireInStackQueuedSpinLockAtDpcLevel>;movl (%ebp), %edi;movl (%ebp), %eax": 1,
                "leal -(%ebp), %edx;calll  <KeAcquireInStackQueuedSpinLockAtDpcLevel>;movl (%ebp), %edi;movl (%ebp), %eax;movb $, %bl": 1,
                "cmpl %eax, (%eax);jne  <KeRemoveDeviceQueue+>;movb $, (%esi);xorl %esi, %esi;jmp  <KeRemoveDeviceQueue+>": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);movl %eax, (%edx);movl %ecx, %esi;movb $, (%ecx)": 1,
                "calll  <KeReleaseInStackQueuedSpinLockFromDpcLevel>;movl %esi, %eax;popl %esi;leave;retl $": 3,
                "movl %ecx, (%eax);jmp  <KeRemoveByKeyDeviceQueue+>;movl (%eax), %edx;movl (%edx), %ecx;movl %ecx, (%eax)": 1,
                "calll  <KeAcquireInStackQueuedSpinLockAtDpcLevel>;xorl %edx, %edx;cmpb %dl, (%esi);je  <KeRemoveByKeyDeviceQueueIfBusy+>;leal (%esi), %eax": 1,
                "cmpb %dl, (%esi);je  <KeRemoveByKeyDeviceQueueIfBusy+>;leal (%esi), %eax;movl (%eax), %ecx;cmpl %eax, %ecx": 1,
                "jne  <KeRemoveByKeyDeviceQueueIfBusy+>;movb %dl, (%esi);xorl %esi, %esi;leal -(%ebp), %ecx;calll  <KeReleaseInStackQueuedSpinLockFromDpcLevel>": 1,
                "popl %edi;je  <KeRemoveByKeyDeviceQueueIfBusy+>;movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx)": 1,
                "movl (%edi), %edi;movl (%edi), %ebx;leal (%esi), %edx;movl %ebx, (%edx);movl %edi, (%edx)": 1,
                "movb $, (%eax);movb $, (%eax);movl $, (%eax);movl %ecx, (%ecx);movl %ecx, (%ecx)": 1,
                "pushl %edi;calll *;movl (%ebp), %esi;movb %al, %bl;movl (%esi), %eax": 1,
                "movl $, (%esi);movb $, (%esi);jmp  <KeReleaseMutant+>;cmpl %edi, (%esi);je  <KeReleaseMutant+>": 1,
                "movb %bl, %cl;calll  <KiUnexpectedInterrupt+>;movb (%esi), %al;negb %al;sbbl %eax, %eax": 1,
                "leal (%esi), %eax;cmpl %eax, (%eax);je  <KeReleaseMutant+>;movl (%ebp), %edx;movl %esi, %ecx": 1,
                "calll  <ZwYieldExecution+>;movb (%ebp), %al;testb %al, %al;je  <KeReleaseMutant+>;movb %al, (%edi)": 1,
                "movb %bl, (%edi);jmp  <KeReleaseMutant+>;movb %bl, %cl;calll  <KiUnexpectedInterrupt+>;movl (%ebp), %eax": 1,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %edi;leal (%edi), %edx": 1,
                "jne - <KeRundownQueue+>;movb %al, %cl;calll  <KiUnexpectedInterrupt+>;popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;andl $, (%eax);movb $, (%eax);movb $, (%eax);leal (%eax), %ecx": 1,
                "movb (%ebp), %al;testb %al, %al;movb $, (%esi);movb %al, (%esi);movb $, (%esi)": 3,
                "testb %al, %al;movb $, (%esi);movb %al, (%esi);movb $, (%esi);movl %ecx, (%esi)": 3,
                "movb $, (%esi);movb %al, (%esi);movb $, (%esi);movl %ecx, (%esi);je  <KeRemoveQueue+>": 3,
                "movb %al, (%esi);movb $, (%esi);movl %ecx, (%esi);je  <KeRemoveQueue+>;cmpb $, (%esi)": 3,
                "cmpb $, (%esi);movl $, (%ebp);jl  <KeRemoveQueue+>;movl %ecx, (%ebp);jmp  <KeRemoveQueue+>": 1,
                "incl %edx;cmpl %ecx, (%ebp);movl %ebx, (%edi);movw %cx, (%edi);movw %dx, (%edi)": 2,
                "movl %edx, (%eax);movl %eax, (%edx);calll - <KeRundownQueue+>;leal (%ebx), %ecx;movl (%ecx), %edx": 1,
                "movl (%ebx), %ecx;cmpl (%ebx), %ecx;jb  <KeRemoveQueue+>;cmpb $, (%esi);je  <KeRemoveQueue+>": 1,
                "jb  <KeRemoveQueue+>;cmpb $, (%esi);je  <KeRemoveQueue+>;cmpb $, (%esi);jae  <KeRemoveQueue+>": 1,
                "jne  <KeRemoveQueue+>;testl %edx, %edx;je  <KeRemoveQueue+>;movl (%edx), %eax;orl (%edx), %eax": 1,
                "cmpl $, (%ebp);je  <KeRemoveQueue+>;movl -(%ebp), %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, (%ebp);calll *;xorl %edx, %edx;movb %al, (%esi);movl %edi, (%esi)": 1,
                "jmp  <KeRemoveQueue+>;movl $, -(%ebp);incl (%ebx);movb (%esi), %cl;calll  <KiUnexpectedInterrupt+>": 1,
                "pushl %edi;movl %eax, -(%ebp);movl %fs:, %eax;movl (%ecx), %esi;leal (%ecx), %edi": 1,
                "movl (%ecx), %esi;leal (%ecx), %edi;cmpl %edi, %esi;je  <KeRemoveQueue+>;movl (%ecx), %edi": 1,
                "movb %cl, -(%ebp);jg  <KeReleaseSemaphore+>;cmpl %ebx, %edi;jge  <KeReleaseSemaphore+>;calll  <KiUnexpectedInterrupt+>": 1,
                "pushl $;calll  <ExRaiseStatus>;testl %ebx, %ebx;movl %edi, (%esi);jne  <KeReleaseSemaphore+>": 1,
                "calll  <ZwYieldExecution+>;movb (%ebp), %cl;testb %cl, %cl;je  <KeReleaseSemaphore+>;movl %fs:, %eax": 1,
                "movl $, %edx;movl %esi, %ecx;calll  <ZwYieldExecution+>;jmp  <KeReleaseSemaphore+>;movb $, (%eax)": 1,
                "leal -(%ebp), %ecx;calll *;popl %esi;movb %bl, %al;popl %ebx": 2,
                "calll *;movl (%ebp), %edx;addl $, %edx;movb (%edx), %bl;movb %al, %cl": 1,
                "calll *;movb %al, %bl;movl (%ebp), %eax;leal (%eax), %ecx;movsbl (%ecx), %esi": 1,
                "leal (%eax), %ecx;movsbl (%ecx), %esi;leal (%eax), %edx;movsbl (%edx), %edi;addl %edi, %esi": 1,
                "movb $, (%ecx);leal (%eax), %ecx;xorl %edx, %edx;calll  <ZwYieldExecution+>;movb %bl, %cl": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "calll *;movl (%ebp), %ecx;movb %al, -(%ebp);leal (%ecx), %eax;movb (%eax), %dl": 1,
                "cmpl $, (%edi);jne  <KeRevertToUserAffinityThread+>;movzbl (%esi), %ecx;calll  <ZwYieldExecution+>;movb $, (%eax)": 1,
                "jne  <KeRevertToUserAffinityThread+>;movzbl (%esi), %ecx;calll  <ZwYieldExecution+>;movb $, (%eax);movl %eax, (%edi)": 1,
                "leal (%edi), %esi;cmpl %esi, (%esi);je  <KeRevertToUserAffinityThread+>;calll *;movb %al, -(%ebp)": 1,
                "movl %edx, (%eax);andl $, (%ecx);leal (%ecx), %eax;cmpl %eax, (%eax);movl $, (%ecx)": 1,
                "je  <KeRevertToUserAffinityThread+>;xorl %edx, %edx;incl %edx;calll  <ZwYieldExecution+>;movl (%esi), %eax": 1,
                "cmpl %esi, %eax;jne - <KeRevertToUserAffinityThread+>;movb -(%ebp), %cl;calll  <KiUnexpectedInterrupt+>;popl %edi": 1,
                "movl %eax, %esi;calll *;movb %al, %bl;movl (%ebp), %eax;leal (%esi), %ecx": 1,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %ecx;movsbl (%ecx), %edi": 1,
                "movsbl (%ecx), %edi;movb %al, -(%ebp);movl (%ecx), %eax;movl (%eax), %esi;movsbl (%esi), %eax": 1,
                "movl (%ebp), %eax;cltd;xorl %edx, %eax;subl %edx, %eax;cmpl $, %eax": 1,
                "movsbl (%ecx), %eax;cmpl %eax, %edx;movb $, (%ecx);movb $, (%ecx);popl %ebx": 1,
                "movb (%esi), %al;movb %al, (%ecx);calll  <ZwYieldExecution+>;movb -(%ebp), %cl;calll  <KiUnexpectedInterrupt+>": 1,
                "movl (%ecx), %eax;movl (%eax), %eax;movb (%eax), %al;movb %al, (%ecx);calll  <ZwYieldExecution+>": 1,
                "movsbl (%esi), %edi;cmpl $, %edi;movl , %ebx;jne  <KeSetPriorityThread+>;leal -(%ebp), %ecx": 1,
                "jne  <KeSetPriorityThread+>;leal -(%ebp), %ecx;calll *%ebx;pushl $;calll  <ExRaiseStatus>": 1,
                "calll  <ExRaiseStatus>;cmpb $, (%esi);jne  <KeSetPriorityThread+>;incb (%esi);testl %edi, %edi": 1,
                "leal (%esi), %ecx;xorl %edx, %edx;calll  <KiDeliverApc+>;testb %al, %al;jne  <KeSetPriorityThread+>": 1,
                "leal -(%ebp), %edx;calll *;movsbl (%ebp), %eax;leal (%eax,%esi), %eax;movb (%eax), %bl": 1,
                "cmpl %edi, %esi;jne - <KeSetPriorityThread+>;leal -(%ebp), %ecx;calll *;movl %fs:, %eax": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %esi;movb (%esi), %al;movb %al, (%edi)": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;movb (%esi), %al;movb %al, (%edi);movb %al, (%edi)": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movb $, (%edi);movb (%esi), %al;movb %al, (%edi)": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %fs:, %eax;movl , %esi": 1,
                "calll  <KeAcquireInStackQueuedSpinLockAtDpcLevel>;cmpl %edi, %esi;je  <KeSetPriorityThread+>;cmpb $, (%esi);jne  <KeSetPriorityThread+>": 1,
                "testl %edx, %edx;movb %al, (%ecx);jne  <KeSetPriorityThread+>;cmpb %dl, (%esi);jne  <KeSetPriorityThread+>": 1,
                "leal -(%ebp), %edx;calll *;movl , %eax;movl %eax, (%esi);cmpb $, ": 1,
                "movl %eax, (%ebp);pushl %ebx;movl %eax, (%edi);movl %eax, %ebx;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%edx);cmpb $, %bl;popl %esi;jae  <KeTerminateThread+>": 1,
                "jb  <KeRaiseUserException+>;movb $, (%ecx);movb (%eax), %cl;movb %cl, (%eax);movb (%eax), %cl": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);orl $-, -(%ebp);pushl %eax;pushl %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;testb $, (%edx);je  <KeRaiseUserException+>;movl (%ebp), %eax": 1,
                "cmpl %eax, %ecx;jne  <KeRaiseUserException+>;testb $, (%edi);je  <KeRaiseUserException+>;cmpb $, ": 1,
                "jmp  <KeRaiseUserException+>;pushl $;calll  <KiCoprocessorError+>;movl (%esi), %eax;movl %eax, (%ebx)": 1,
                "leal (%ebx), %eax;pushl %eax;calll  <ZwYieldExecution+>;testb %al, %al;je  <KeRaiseUserException+>": 1,
                "movl (%edi), %eax;movl %eax, (%ebx);movl (%edi), %ecx;leal -(%ebp), %edx;calll  <KeRestoreFloatingPointState+>": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx)": 4,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movb -(%ebp), %cl;cmpb $, %cl": 1,
                "movl (%ebx), %edx;movl %eax, %ecx;andl %edi, %ecx;andl %edi, %edx;cmpl %edx, %ecx": 1,
                "movl %ecx, (%ebx);movl (%esi), %ecx;movl %ecx, (%ebx);testl %eax, %edi;movl (%esi), %eax": 1,
                "jae  <KeRaiseUserException+>;movl $, (%ebx);pushl (%esi);pushl %ebx;calll - <KeTerminateThread+>": 1,
                "calll - <KeTerminateThread+>;cmpb $, (%ebp);je  <KeRaiseUserException+>;pushl %ebx;calll  <KiDispatchInterrupt+>": 1,
                "addl $, %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);andl $-, (%ebx);movl , %eax": 1,
                "rep  movsl (%esi), %es:(%edi);andl $-, (%ebx);movl , %eax;andl %eax, (%ebx);movl %fs:, %eax": 1,
                "movl (%ebp), %esi;je  <KeRaiseUserException+>;movl %esi, %eax;movl (%eax), %eax;andl $, %eax": 1,
                "incl %edi;incl %edi;cmpl $, %edi;jb - <KeRaiseUserException+>;movl (%esi), %eax": 1,
                "andl $, %eax;movl %eax, (%ebx);movw (%esi), %ax;movw %ax, (%ebx);movl (%esi), %eax": 1,
                "pushl $;xorl %eax, %eax;popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 11,
                "cmpl $, %edi;jb - <KeRaiseUserException+>;addl $, %edx;addl $, %eax;decl (%ebp)": 1,
                "movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);xorl %eax, %eax": 2,
                "pushl %eax;calll  <ZwYieldExecution+>;testb %al, %al;je  <KeRaiseUserException+>;leal (%ebx), %eax": 1,
                "movl $, %eax;andl %eax, %ecx;cmpl %eax, %ecx;jne  <KeRaiseUserException+>;movb $, (%ebp)": 1,
                "calll  <KiDispatchInterrupt+>;movl %fs:, %eax;cmpb $, (%eax);je  <KeRaiseUserException+>;orb $, (%ebx)": 1,
                "je  <KeRaiseUserException+>;cmpl $, %eax;jne  <KeRaiseUserException+>;movl $, (%esi);cmpb $, (%ebp)": 1,
                "cmpb $, (%ebp);jne  <KeRaiseUserException+>;movl , %eax;cmpl %edi, %eax;je  <KeRaiseUserException+>": 1,
                "pushl %edi;pushl %edi;leal -(%ebp), %ecx;pushl %ecx;pushl %esi": 1,
                "testb %al, %al;jne  <KeRaiseUserException+>;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "testb $, (%ebx);je  <KeRaiseUserException+>;movl $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %edi;andl $-, %edi;subl %eax, %edi": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %edi;subl %esi, %edi;movl %edi, -(%ebp);pushl $": 1,
                "pushl %edx;pushl %ebx;calll - <KeTerminateThread+>;movl (%ebp), %eax;movb %al, %cl": 1,
                "movb %al, %cl;negb %cl;sbbl %ecx, %ecx;andl $, %ecx;addl $, %ecx": 2,
                "movl %ecx, (%ebx);movl %ecx, (%ebx);negb %al;sbbl %eax, %eax;andl $, %eax": 1,
                "calll  <ZwTerminateProcess>;pushl %edi;pushl %ebx;pushl (%esi);pushl (%esi)": 1,
                "pushl %edi;pushl %ebx;pushl (%esi);pushl (%esi);pushl $": 1,
                "jne  <KeRaiseUserException+>;cmpb $, ;jne  <KeRaiseUserException+>;movzbl , %eax;addl %ecx, %eax": 1,
                "movl $, (%esi);jmp  <KeSaveStateForHibernate+>;andl $, (%esi);jmp  <KeSaveStateForHibernate+>;movl $, (%esi)": 1,
                "jmp  <KeSaveStateForHibernate+>;andl $, (%esi);jmp  <KeSaveStateForHibernate+>;movl $, (%esi);jmp  <KeSaveStateForHibernate+>": 1,
                "imull %eax, %edx;movl -(%ebp), %eax;incl %eax;imull %eax, %edx;movl %edx, (%esi)": 1,
                "decl %eax;notl %eax;andl %eax, %edx;cmpb $, ;jbe  <KeSaveStateForHibernate+>": 1,
                "movb (%ecx), %cl;xorl %esi, %esi;incl %esi;shll %cl, %esi;movl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;subl $, %esp;cmpb $, ;jne  <KeSaveFloatingPointState+>;movl $, %eax": 1,
                "pushl $;pushl $;calll  <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%ebx)": 1,
                "jmp  <KeSaveFloatingPointState+>;movl %ds:, %eax;addl $, %eax;movl %eax, (%ebx);orb $, (%ebx)": 1,
                "addl $, %eax;movl %eax, (%ebx);orb $, (%ebx);pushl %edi;cli": 1,
                "movl %eax, (%ebx);orb $, (%ebx);pushl %edi;cli;movl %cr, %eax": 1,
                "cmpb $, ;movl %ecx, -(%ebp);je  <KeSaveFloatingPointState+>;movl -(%ebp), %eax;fxsave (%eax)": 1,
                "movl -(%ebp), %eax;fxsave (%eax);jmp  <KeSaveFloatingPointState+>;movl -(%ebp), %eax;fnsave (%eax)": 2,
                "movl -(%ebp), %eax;fnsave (%eax);andl $, (%ecx);movl (%edx), %eax;movb $, (%eax)": 1,
                "cmpb $, ;movl (%ebx), %eax;movl %eax, -(%ebp);je  <KeSaveFloatingPointState+>;movl -(%ebp), %eax": 1,
                "cmpb $, ;movw %ax, (%ebx);je  <KeSaveFloatingPointState+>;movl (%edx), %eax;movl %eax, (%ebx)": 1,
                "je  <KeSaveFloatingPointState+>;movl (%edx), %eax;movl %eax, (%ebx);movl (%edx), %eax;andl $-, %eax": 1,
                "je  <KeSaveFloatingPointState+>;cmpb $, ;je  <KeSaveFloatingPointState+>;leal -(%ebp), %eax;movl %eax, (%ebp)": 1,
                "cmpb $, ;je  <KeSaveFloatingPointState+>;leal -(%ebp), %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "pushl %eax;pushl %ecx;jmp  <KeRestoreFloatingPointState+>;calll *;cmpb %al, (%ebx)": 1,
                "jmp  <KeRestoreFloatingPointState+>;calll *;cmpb %al, (%ebx);je  <KeRestoreFloatingPointState+>;pushl $": 1,
                "pushl $;calll *;movzbl %al, %eax;pushl %eax;movzbl (%ebx), %eax": 1,
                "jmp  <KeRestoreFloatingPointState+>;movl %fs:, %eax;cmpl %eax, %esi;je  <KeRestoreFloatingPointState+>;movl %fs:, %eax": 1,
                "cmpb $, ;je  <KeRestoreFloatingPointState+>;leal (%ebx), %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "cmpb $, ;je  <KeRestoreFloatingPointState+>;movw (%ebx), %ax;movw %ax, (%edi);xorl %eax, %eax": 1,
                "movw (%ebx), %ax;movw %ax, (%edi);xorl %eax, %eax;movw %ax, (%edi);movw %ax, (%edi)": 1,
                "movw %ax, (%edi);movw %ax, (%edi);movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi)": 1,
                "movl %eax, (%edi);movb (%ebx), %al;movb %al, (%esi);movzbl (%esi), %eax;orl (%edi), %eax": 1,
                "movb $, (%ebx);xorl %eax, %eax;popl %ebx;leave;retl $": 1,
                "cmpb $, ;movl %eax, %esi;je  <KeRestoreFloatingPointState+>;pushl $;pushl $": 1,
                "int;calll  <ZwYieldExecution+>;calll  <ZwYieldExecution+>;jmp - <KeRestoreFloatingPointState+>;int": 1,
                "movb (%edx), %cl;jmp  <KeRestoreFloatingPointState+>;movl %fs:, %eax;movb (%eax), %cl;cmpl $, (%esi)": 1,
                "movb %al, -(%ebp);je  <KeRestoreFloatingPointState+>;cmpb %bl, %al;sete %bl;movl %edi, %ecx": 1,
                "cmpb %al, -(%ebp);je  <KeRestoreFloatingPointState+>;movb %al, %cl;calll  <KiDispatchInterrupt+>;popl %edi": 1,
                "pushl %esi;pushl %edi;movl %ds:, %eax;movl (%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "movzbw -(%ebp), %dx;xorl %edi, %edi;shrl $, %ecx;shll $, %eax;subl %edi, %ecx": 1,
                "je - <KeRestoreFloatingPointState+>;decl %ecx;decl %ecx;je  <KeRestoreFloatingPointState+>;decl %ecx": 1,
                "decl %ecx;decl %ecx;je  <KeRestoreFloatingPointState+>;subl $, %ecx;je  <KeRestoreFloatingPointState+>": 1,
                "calll  <ZwYieldExecution+>;cmpl $, -(%ebp);movb $, %bl;jne  <KeRestoreFloatingPointState+>;movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);jb - <KeRestoreFloatingPointState+>;popl %edi;popl %esi;popl %ebx": 1,
                "addl $, %eax;movl $, %edi;movl %eax, %esi;movb (%esi), %dl;movb %dl, %cl": 1,
                "xorl %ecx, %ecx;jmp  <KeRestoreFloatingPointState+>;sbbl %ecx, %ecx;sbbl $-, %ecx;testl %ecx, %ecx": 1,
                "movb %cl, %al;cmpb (%edi), %cl;jne  <KeRestoreFloatingPointState+>;testb %al, %al;je  <KeRestoreFloatingPointState+>": 1,
                "incl %edi;testb %al, %al;jne - <KeRestoreFloatingPointState+>;xorl %eax, %eax;jmp  <KeRestoreFloatingPointState+>": 1,
                "pushl $;movl $, %esi;pushl %esi;calll  <ZwYieldExecution+>;movl -(%ebp), %eax": 1,
                "pushl %esi;calll  <ZwYieldExecution+>;movl -(%ebp), %eax;movl $, %edi;andl %edi, %eax": 1,
                "movl -(%ebp), %eax;testb $-, %ah;je  <KeRestoreFloatingPointState+>;shrl $, %eax;andl $, %eax": 1,
                "popl %ecx;jne  <KeRestoreFloatingPointState+>;xorl %ecx, %ecx;movl %eax, %edx;testl %edx, %edi": 1,
                "pushl (%ebp);shrl $, %ebx;incb %bl;calll - <KeSaveStateForHibernate+>;movl -(%ebp), %eax": 1,
                "shrl %cl, %eax;xorl %ecx, %ecx;xorl %edi, %edi;incl %edi;movb (%eax), %cl": 1,
                "movzbl (%ecx), %ecx;andl -(%ebp), %ecx;cmpl -(%ebp), %ecx;jne  <KeRestoreFloatingPointState+>;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);calll *;movb $, (%esi);leal (%esi), %ebx;jmp  <KiDeliverApc+>": 1,
                "leal -(%ebp), %edx;leal (%esi), %ecx;calll *;movb $, (%esi);cmpl %ebx, (%ebx)": 1,
                "movl (%edi), %ecx;movl %ecx, -(%ebp);movl (%edi), %ecx;movl %ecx, -(%ebp);movl (%edi), %ecx": 1,
                "movl %ecx, %eax;cmpb $, (%eax);movl (%eax), %ecx;movl %edx, -(%ebp);je  <KiDeliverApc+>": 1,
                "movsbl %dl, %ebx;movb $, (%ecx);leal (%edi,%ebx,), %edi;movl (%edi), %ebx;leal (%eax), %esi": 1,
                "movl %esi, (%ebx);movl %esi, (%edi);jmp  <KiDeliverApc+>;movsbl %dl, %ebx;leal (%edi,%ebx,), %edi": 1,
                "jmp  <KiDeliverApc+>;cmpl $, (%esi);je  <KiDeliverApc+>;movl (%esi), %esi;cmpl %edi, %esi": 1,
                "cmpl %esi, %edi;popl %edi;popl %esi;popl %ebx;jne  <KiDeliverApc+>": 1,
                "calll *;jmp  <KiDeliverApc+>;cmpb $, %dl;jne  <KiDeliverApc+>;cmpb $, (%ecx)": 1,
                "cmpl %edx, (%ecx);jne  <KiDeliverApc+>;cmpb %dl, (%ecx);jne  <KiDeliverApc+>;pushl %edx": 1,
                "movb $, %al;leave;retl;int;int": 2,
                "pushfl;pushl $;calll  <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;retl $;movl $, %eax": 279,
                "testb %al, %al;je  <ZwYieldExecution+>;cmpb $, %bl;movb $, (%ebp);jne  <ZwYieldExecution+>": 1,
                "pushl %ebx;xorl %eax, %eax;pushl %edi;xorl %ebx, %ebx;movw %bx, -(%ebp)": 1,
                "je  <ZwYieldExecution+>;xorb %al, %al;jmp  <ZwYieldExecution+>;pushl %esi;movl %fs:, %eax": 1,
                "movzbl -(%ebp), %ecx;movzwl -(%ebp), %edx;shll $, %eax;orl %ecx, %eax;movzwl -(%ebp), %ecx": 1,
                "orl %ecx, %eax;movzwl -(%ebp), %ecx;shll $, %eax;orl %ecx, %eax;movl %edi, %ecx": 1,
                "shll $, %eax;orl %ecx, %eax;movl %edi, %ecx;andl %esi, %ecx;orl %edx, %ecx": 1,
                "je  <ZwYieldExecution+>;pushl $;popl %ebx;testb $, %dl;je  <ZwYieldExecution+>": 1,
                "orl $, %ebx;testl $, %edi;je  <ZwYieldExecution+>;orl $, %ebx;testl $, %edi": 1,
                "movl %eax, (%edx);movl (%ebp), %eax;movl %ecx, (%eax);movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "pushl (%ebx);movl (%ebx), %edx;pushl %edx;movl (%ebx), %esi;pushl %esi": 1,
                "movl %ecx, (%esi);subl $, %esp;movl %esp, %ebp;movl $, %ecx;leal (%esp), %edi": 1,
                "leal (%esp), %edi;leal (%edx), %esi;rep  movsl (%esi), %es:(%edi);testb $-, (%ebx);jne  <ZwYieldExecution+>": 1,
                "nop;pushl %esi;pushl %edi;movl -, %edx;movl (%esp), %edi": 1,
                "subl %ecx, %eax;addl %edi, %eax;movl %eax, (%edx);subl %esp, %ecx;subl %ecx, %edi": 1,
                "movl %edi, (%ebx);movl (%ecx), %ebx;movl %esi, (%ebx);movl (%ecx), %ebx;cli": 1,
                "movl %esi, (%ebx);movl (%ecx), %ebx;cli;movl -, %esi;movl %ebx, (%eax)": 1,
                "movl (%esi), %edx;movl %edx, (%ebx);testl $, (%eax);movl %ebx, -;movl (%ecx), %edi": 1,
                "testb $, (%eax);je  <ZwYieldExecution+>;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "andl $, %eax;shrl $, %eax;cli;retl;int": 1,
                "movl (%esp), %esi;movl %eax, (%esi);movl (%esp), %esi;movl %ebx, (%esi);movl (%esp), %esi": 1,
                "movl (%esp), %esi;movl %ecx, (%esi);movl (%esp), %esi;movl %edx, (%esi);popl %esi": 1,
                "retl $;leal (%ecx), %ecx;retl;int;int": 1,
                "addl $, %edx;pushl %edx;leal (%edx), %ecx;movl $, (%ecx);pushl %ecx": 1,
                "movl %eax, (%edx);movl %cr, %eax;movl %eax, (%edx);movl %ecx, (%edx);testl $, ": 1,
                "movl %eax, (%edx);movl %dr, %eax;movl %eax, (%edx);movl %dr, %eax;movl %ecx, %dr": 1,
                "movl (%edx), %eax;movl %eax, %cr;movl (%edx), %eax;movl %eax, %dr;movl (%edx), %eax": 1,
                "subl %ecx, %eax;movsbl (%esi), %ecx;decl %eax;cmpl %ecx, %eax;jge  <ZwYieldExecution+>": 1,
                "movl -, %ecx;cmpl -, %eax;movl %eax, -(%ebp);movl %ecx, -(%ebp);jne - <ZwYieldExecution+>": 2,
                "je  <ZwYieldExecution+>;leal -(%ebp), %ebx;leal -(%eax), %esi;movb $, (%esi);movl (%esi), %eax": 1,
                "pushl %edx;pushl %eax;calll  <_allmul>;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movb $, %cl;calll  <KiUnexpectedInterrupt+>;movl , %eax;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;calll *;movb %al, -(%ebp);jmp  <ZwYieldExecution+>": 1,
                "pushl %esi;movl (%ebp), %esi;movl %eax, -(%ebp);subl %esi, %eax;cmpl $, %eax": 1,
                "jne - <ZwYieldExecution+>;movb -(%ebp), %dl;leal -(%ebp), %ecx;calll - <ZwYieldExecution+>;popl %edi": 1,
                "movb -(%ebp), %dl;leal -(%ebp), %ecx;calll - <ZwYieldExecution+>;popl %edi;popl %esi": 1,
                "movl (%edi), %ecx;cmpl %edi, %ecx;je  <ZwYieldExecution+>;movl (%esi), %eax;movl (%esi), %edx": 1,
                "cmpl %ecx, %edi;ja  <ZwYieldExecution+>;jb  <ZwYieldExecution+>;movl (%esi), %ecx;cmpl %edx, %ecx": 1,
                "cmpl %edx, %ecx;ja  <ZwYieldExecution+>;movb $, (%esi);movl (%eax), %ecx;movl (%eax), %eax": 1,
                "jne - <ZwYieldExecution+>;subl (%ebp), %edx;sbbl %esi, %ecx;js  <ZwYieldExecution+>;movl $, (%eax)": 1,
                "pushl %esi;pushl %edi;jmp  <ZwYieldExecution+>;pause;movl -, %esi": 1,
                "movl -, %edi;cmpl -, %esi;jne - <ZwYieldExecution+>;movl %edi, %ecx;subl (%ebp), %ecx": 1,
                "movl %edi, %ecx;subl (%ebp), %ecx;movl %esi, %edx;sbbl (%ebp), %edx;js  <ZwYieldExecution+>": 1,
                "movl %esi, %edx;sbbl (%ebp), %edx;js  <ZwYieldExecution+>;jg  <ZwYieldExecution+>;testl %ecx, %ecx": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);movl %fs:, %ebx": 1,
                "rep  movsl (%esi), %es:(%edi);movl (%ebp), %esp;addl $, %esp;movl (%eax), %ecx;movl %edi, (%ecx)": 1,
                "movl (%ebp), %ebx;testb $, %bl;movl %eax, -(%ebp);movl (%ebp), %eax;pushl %esi": 1,
                "popl %esi;popl %ebx;calll - <KeRaiseUserException+>;leave;retl $": 134,
                "movb (%eax), %al;movb %al, -(%ebp);cmpb %bl, %al;je  <ZwYieldExecution+>;pushl -(%ebp)": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);calll - <KeRaiseUserException+>;jmp  <ZwYieldExecution+>": 1,
                "movl %ecx, %cr;movw (%ebp), %ax;movw %ax, (%edx);movw (%ebp), %ax;movw %ax, (%esi)": 1,
                "movb %al, -(%ebp);sti;andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <ZwYieldExecution+>;movb %al, %bl;movb %bl, -(%ebp);cmpb $, %bl;je  <ZwYieldExecution+>": 1,
                "cmpb $, %bl;je  <ZwYieldExecution+>;cmpb $, %bl;je  <ZwYieldExecution+>;cmpb $, %bl": 3,
                "je  <ZwYieldExecution+>;cmpb $, %bl;jbe  <ZwYieldExecution+>;cmpb $, %bl;jbe  <ZwYieldExecution+>": 1,
                "andb $-, %dl;cmpb $-, %dl;je  <ZwYieldExecution+>;cmpb %cl, (%eax);jmp  <ZwYieldExecution+>": 1,
                "movl %eax, %cr;movl (%ebp), %eax;andl $-, (%eax);jmp  <ZwYieldExecution+>;movl %fs:, %eax": 1,
                "movw (%eax), %ax;jmp  <ZwYieldExecution+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%edi);movl (%edi), %ecx;andl $, %ecx;movzwl %ax, %eax": 1,
                "je  <ZwYieldExecution+>;cmpb (%eax), %bl;jne  <ZwYieldExecution+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movzbl (%edx), %eax;addl (%eax,%edi), %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;jmp  <ZwYieldExecution+>": 1,
                "movl %esi, -(%ebp);xorl %edx, %edx;incl %edx;movb %bl, %cl;shll %cl, %edx": 1,
                "testb $, (%edi);je  <ZwYieldExecution+>;movl , %eax;cmpl %eax, %esi;jb  <ZwYieldExecution+>": 1,
                "movw -(%ebp), %ax;movw %ax, (%esi);movl -(%ebp), %eax;movl %eax, (%edi);jmp  <ZwYieldExecution+>": 1,
                "xorl %ecx, %ecx;movl %eax, %edx;testl $, %edx;je  <ZwYieldExecution+>;addl $, %ecx": 2,
                "addl $, %ecx;shrl %cl, %eax;movb (%eax), %al;addb %cl, %al;popl %ebp": 1,
                "movl %edx, %ecx;shll %cl, %eax;pushl $;popl %ecx;decl %eax": 1,
                "cmpl %esi, (%esi);popl %edi;jne - <ZwYieldExecution+>;xorl %esi, %esi;incl %esi": 1,
                "xorl %esi, %esi;incl %esi;movl %edx, %ecx;shll %cl, %esi;notl %esi": 1,
                "movl %esi, (%edx);movl (%edx), %edx;cmpb $, (%edx);je - <ZwYieldExecution+>;movb $, (%eax)": 1,
                "cmpb $, (%edx);je - <ZwYieldExecution+>;movb $, (%eax);movb $, (%eax);addl $, %eax": 1,
                "addl $, %eax;leal (%edx), %ecx;movl (%ecx), %esi;movl %ecx, (%eax);movl %esi, (%eax)": 1,
                "leal (%edx), %esi;movl %esi, -(%ebp);movl %eax, -(%ebp);movl %eax, (%esi);movl %eax, %edi": 1,
                "orl %eax, ;popl %edi;popl %esi;popl %ebx;leave": 1,
                "movl (%esi), %eax;movl (%eax), %eax;movl (%eax), %eax;andl %edx, %eax;cmpl %edx, %eax": 1,
                "je  <ZwYieldExecution+>;decl %eax;je  <ZwYieldExecution+>;decl %eax;jne  <ZwYieldExecution+>": 2,
                "movl (%edi), %eax;testl %eax, %eax;je  <ZwYieldExecution+>;cmpl %esi, %eax;jne  <ZwYieldExecution+>": 1,
                "je  <ZwYieldExecution+>;cmpl %esi, %eax;jne  <ZwYieldExecution+>;calll - <ZwYieldExecution+>;movb $, (%eax)": 1,
                "jne  <ZwYieldExecution+>;calll - <ZwYieldExecution+>;movb $, (%eax);movl %eax, (%edi);jmp  <ZwYieldExecution+>": 1,
                "calll - <ZwYieldExecution+>;movl -(%ebp), %eax;popl %edi;popl %esi;leave": 1,
                "cmpl %ecx, %edx;je  <ZwYieldExecution+>;movzbl (%ebx), %eax;decl %eax;pushl %esi": 1,
                "cmpl %ecx, %edx;jge - <ZwYieldExecution+>;leal (,%edx,), %ecx;movl (%ecx), %esi;movl %ecx, (%eax)": 1,
                "orl %eax, ;jmp - <ZwYieldExecution+>;int;int;int": 1,
                "movsbl %dl, %ecx;pushl %edi;movl (%ebp), %edi;addl %ecx, %edi;cmpb $, (%eax)": 1,
                "addl , %ecx;movsbl %bl, %ebx;cmpl %ebx, %ecx;jle  <ZwYieldExecution+>;cmpl $, %ecx": 1,
                "cmpl $, %ecx;jl  <ZwYieldExecution+>;pushl $;popl %ecx;cmpl %edi, %ecx": 1,
                "movl (%ecx), %edi;movl %ecx, -(%ebp);movl %ecx, %ebx;cmpw $, (%ebx);je  <ZwYieldExecution+>": 1,
                "cmpb $, %dl;jne  <ZwYieldExecution+>;decl (%eax);jne  <ZwYieldExecution+>;movzbl (%eax), %ecx": 1,
                "addl $, %eax;movl %esi, (%eax);movl %edx, (%eax);movl %eax, (%esi);movl %eax, (%edx)": 1,
                "movl %eax, -(%ebp);movb (%esi), %al;movb %al, %dl;andb $, %dl;cmpb $, %dl": 1,
                "movl $, (%ecx);movl (%ecx), %edi;movl (%edi), %edx;leal (%esi), %eax;movl %edx, (%eax)": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, -(%esi);orl $-, (%esi);movl %eax, (%esi)": 1,
                "incl %eax;movl %eax, -(%esi);orl $-, (%esi);movl %eax, (%esi);movb %al, (%ebx)": 1,
                "movl %edx, -(%esi);addl $-, %eax;movb %dl, (%ebx);movl (%ebp), %edx;movl %edx, (%edi)": 1,
                "calll  <wctomb+>;movl %fs:, %eax;movl (%eax), %eax;testb $, (%eax);je  <ZwYieldExecution+>": 1,
                "jmp  <ZwYieldExecution+>;movl (%ebp), %ebx;movl (%ebx), %esi;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "movl (%ebx), %esi;movl (%ebp), %eax;movl (%eax), %edx;movl %edx, -(%ebp);xorl %ecx, %ecx": 1,
                "movl (%esi), %eax;leal (%eax,%esi), %edi;movl %edi, -(%ebp);pushl $;pushl %edi": 2,
                "movl %eax, (%ecx);movl (%ebp), %eax;movl %edi, (%eax);movl %edi, (%ebx);movl $, -(%ebp)": 1,
                "pushl %esp;pushl $;pushl -;movl %esp, -;xorl %eax, %eax": 2,
                "movl (%ebp), %esi;calll  <ZwYieldExecution+>;movl $, %eax;popl -;addl $, %esp": 1,
                "movl %eax, (%esi);retl;movl $, (%esi);calll - <ZwYieldExecution+>;addl $, %esi": 1,
                "addl $, %esi;movl (%ebx), %edi;cmpl $, %edi;jae  <ZwYieldExecution+>;addl $, %edi": 1,
                "calll  <ExRaiseStatus>;retl;movl (%edi,%ebx), %edx;movl (%edi,%ebx), %edi;movl %eax, %ecx": 1,
                "retl $;movl (%esp), %esp;xorl %eax, %eax;jmp - <ZwYieldExecution+>;retl": 1,
                "movw (%esi), %ax;calll  <ZwYieldExecution+>;addl $, %esi;movb $, (%ebx);movl (%ebx), %edi": 1,
                "movl $, %edi;jmp - <ZwYieldExecution+>;andw $, %ax;movw %ax, %cx;andw $, %cx": 1,
                "subb $, %ah;andb $, %ah;movb %ah, %al;shrb %ah;addb %ah, %al": 1,
                "andl $, %eax;shrl $, %eax;movl , %ecx;movl (%eax,%ecx), %ecx;movl %ecx, (%ebx)": 1,
                "cmpl $, (%edi,%ebx);je - <ZwYieldExecution+>;movb $-, %dl;jmp - <ZwYieldExecution+>;movl (%esi), %ebx": 1,
                "subl $, %ecx;cmpl $, %ecx;jge  <ZwYieldExecution+>;orl %esi, %esi;setne %cl": 1,
                "cmpl $, %ecx;jge  <ZwYieldExecution+>;orl %esi, %esi;setne %cl;jmp  <ZwYieldExecution+>": 1,
                "cmpl $, %ebx;jne  <ZwYieldExecution+>;orl %esi, %esi;jne  <ZwYieldExecution+>;movb $-, %cl": 1,
                "addl %edx, %ecx;jmp - <ZwYieldExecution+>;movl , %eax;movl %edi, (%eax);movl %esi, (%edi,%eax)": 1,
                "int;int;int;testb $, ;je  <ZwYieldExecution+>": 1,
                "subl $, %esp;cmpb $, ;pushl %ebx;pushl %esi;je  <ZwYieldExecution+>": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl $, %esi": 1,
                "calll *;movb %al, %bl;leal -(%ebp), %eax;pushl %eax;calll  <KeISetGdtSelector+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <KeISetGdtSelector+>;movb %bl, %dl;movl %esi, %ecx": 1,
                "movl %esi, %ecx;calll *;popl %edi;jmp  <ZwYieldExecution+>;testb $-, ": 1,
                "jmp  <ZwYieldExecution+>;testb $-, ;je  <ZwYieldExecution+>;movl $, %esi;movl %esi, %ecx": 1,
                "movl %eax, -(%ebp);pushl %edi;jne  <ZwYieldExecution+>;movl $, %eax;jmp  <ZwYieldExecution+>": 1,
                "testb $, ;movb $, -(%ebp);jne  <ZwYieldExecution+>;movl $, %eax;popl %esi": 1,
                "jne  <ZwYieldExecution+>;movl $, %eax;popl %esi;popl %ebx;movl -(%ebp), %ecx": 1,
                "popl %ebx;movl -(%ebp), %ecx;popl %edi;calll - <KeRaiseUserException+>;leave": 2,
                "pushl ;calll  <MmUnlockPagableImageSection>;movl -(%ebp), %eax;jmp - <ZwYieldExecution+>;int": 1,
                "pushl %eax;pushl %ebx;calll - <KeRaiseUserException+>;andl $, -(%ebp);movl $, %eax": 1,
                "movl %eax, (%ebx);movl $, (%ebx);andl $, (%ebx);movl -(%ebp), %ecx;testl $, %ecx": 1,
                "jp  <ZwYieldExecution+>;pushl %ecx;addb %bh, -(%esi);decl %ebp;pushl %ebx": 1,
                "pushl %eax;addb %ah, %dh;cmpl $, %eax;decl %edi;addb %ah, (%esp,%edx,)": 1,
                "decl %ecx;addb %cl, (%esi);loopne ;addb %dl, %ah;loopne ": 1,
                "pushl %esi;pushl %esp;addb %ch, (%eax);adcb $, (%ecx);xorb %cl, -(%eax,%eax)": 1,
                "jb  <ZwYieldExecution+>;addb %ch, (%eax);xorb $, %al;addb %ah, (%eax);addb $, %al": 1,
                "decl %esp;addb %bl, (%edx);pushl %ebx;addb %dl, (%ebp);decl %edi": 1,
                "addb %cl, %dh;andb %dl, (%ebx);decl %esi;enter $, $;rclb $, (%eax)": 1,
                "addb %al, %dh;cmpb (%eax,%eax), %dl;popl %ebx;pushl %ebx;addb %dh, (%eax)": 1,
                "pushl $;decl %esi;decl %ecx;addb %bh, (%eax);decl %esi": 1,
                "addb %al, (%eax);decl %ebp;addb %ch, %dh;loopne ;addb %bl, %dh": 1,
                "pushl %edx;addb %bl, -(%esi);orl $, (%ecx);insl %dx, %es:(%edi);decl %ecx": 1,
                "decl %edi;addb %bl, (%eax);pushl %esp;addb %dl, (%esi);aaa": 1,
                "lretl $;rolb %bh;pushl %eax;addb %dh, (%eax);decl %esp": 1,
                "addb %bl, %ah;loop ;addb %cl, %dh;pushl %eax;decl %ecx": 1,
                "addb %al, -(%esi);decl %ecx;addb %ah, %al;decl %esi;decl %edi": 1,
                "andb (%ebx), %dl;movl $, %esi;jb  <ZwYieldExecution+>;addb %ah, %dl;lahf": 1,
                "addb %ch, (%edx);lodsl (%esi), %eax;decl %ecx;addb %al, (%ecx,%eax,);decl %ebp": 1,
                "decl %esp;addb %cl, %ah;incl %edi;decl %esp;addb %dl, %ah": 1,
                "incl %esp;addb %bh, (%esi);decl %esp;pushl %esp;addb %al, (%eax)": 1,
                "pushl %cs;popl %eax;pushl %esi;addb %ch, (%eax);pushl %ebx": 1,
                "pushl %esp;decl %ebp;addb %dl, (%esi);movsl (%esi), %es:(%edi);pushl %ecx": 1,
                "movsl (%esi), %es:(%edi);pushl %ecx;addb %cl, (%eax);decl %ebp;addb %cl, (%eax,%esi,)": 1,
                "incl %eax;subb $, %al;incl %esp;orb $, %al;sbbb %bl, (%eax)": 1,
                "orb $, %al;sbbb %cl, (%eax);orb %cl, (%esp,%eax);orb %cl, (%eax);addb $, %al": 1,
                "adcb %cl, (%eax);addb %cl, (%eax);addb $, %al;orb $, %al;orb %al, (%eax,%edx)": 1,
                "orb $, %al;orb $, %al;orb $, %al;orb $, %al;xorb %dl, (%eax)": 1,
                "orb $, %al;xorb %dl, (%eax);orb $, %al;orb $, %al;orb $, %al": 1,
                "adcb $, %al;adcb $, %al;adcb $, %al;adcb $, %al;adcb $, %al": 1,
                "orb $, %al;andb $, %al;sbbb %dl, (%esp,%eax);orb %cl, (%esp,%edx);orb %cl, (%eax)": 1,
                "addb %dl, (%eax);adcb %al, (%esp,%eax);orb %dl, (%eax,%edx);orb %cl, (%eax);adcb %dl, (%esp,%ecx)": 1,
                "movntps %xmm, (%ecx);addl $, %ecx;decl %eax;jne - <ZwYieldExecution+>;sfence": 1,
                "jne  <ZwYieldExecution+>;cmpb $, (%edx);je  <ZwYieldExecution+>;movb $, (%edx);movl %cr, %ebx": 1,
                "fxrstor (%eax);movl %edx, -;sti;movaps %xmm, (%esp);calll - <ZwYieldExecution+>": 1,
                "popl %ebp;jmp  <ZwYieldExecution+>;nop;pushl %edi;xorl %eax, %eax": 1,
                "int;int;pushl ;pushl ;pushl $": 1,
                "pushl %edi;movl %fs:, %eax;movl %eax, %esi;calll *;movb %al, (%esi)": 1,
                "cmpl $, (%edi);jne  <ZwYieldExecution+>;movzbl (%esi), %ecx;xorl %edx, %edx;incl %edx": 1,
                "calll - <ZwYieldExecution+>;xorl %ebx, %ebx;jmp  <ZwYieldExecution+>;movb (%esi), %cl;calll  <KiUnexpectedInterrupt+>": 1,
                "jmp  <ZwYieldExecution+>;pushl $;calll  <wctomb+>;testb %al, %al;jne  <ZwYieldExecution+>": 1,
                "testl %eax, %eax;je  <MmIsDriverVerifying+>;movl (%eax), %eax;shrl $, %eax;andl $, %eax": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 9,
                "pushl %ecx;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 7,
                "je  <MmIsDriverVerifying+>;testb $, (%eax);je  <MmIsDriverVerifying+>;orb $-, (%ebp);incl ": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;testb $, (%ebp);je  <MmIsDriverVerifying+>": 1,
                "jmp  <MmIsDriverVerifying+>;incl %edi;pushl -(%ebp);pushl $;pushl $": 1,
                "addl $, %ebx;movl %fs:, %eax;movl (%eax), %eax;addl $, %eax;movl %eax, %ecx": 1,
                "movl %eax, -(%ebp);je  <MmIsDriverVerifying+>;cmpl , %eax;ja  <MmIsDriverVerifying+>;shrl $, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl (%ebx), %ecx;pushl %esi;movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, %edx": 1,
                "pushl %edi;movl (%ebp), %edi;andl $, %edx;shrl $, %esi;testb $, (%edi)": 1,
                "andl $, %edx;shrl $, %esi;testb $, (%edi);movl %edx, -(%ebp);je  <MmIsDriverVerifying+>": 1,
                "testl %eax, %eax;jge  <MmIsDriverVerifying+>;movl (%ebp), %eax;shll $, %eax;pushl %eax": 1,
                "movl (%ebx), %eax;movl (%ebx), %ecx;shrdl $, %ecx, %eax;movl %eax, %ebx;andl $, %ebx": 1,
                "movl %eax, %ebx;andl $, %ebx;movl %ebx, (%ebp);imull $, %ebx, %ebx;shrl $, %ecx": 1,
                "andl $, %ecx;movl %edx, %eax;xorl %edx, %edx;orl %ecx, %esi;orl %edx, %eax": 1,
                "calll *;xorl %edx, %edx;cmpl %edx, (%ebp);movb %al, %cl;movb %cl, (%ebp)": 1,
                "cmpl $, ;je  <MmIsDriverVerifying+>;testb $, (%edi);jne  <MmIsDriverVerifying+>;andl $, %esi": 1,
                "jne  <MmIsDriverVerifying+>;andl $, %esi;movl %esi, %eax;xorl %ecx, %ecx;orl %ecx, %eax": 1,
                "orl %ecx, %eax;je  <MmIsDriverVerifying+>;movl %fs:, %eax;movl (%eax), %eax;testb $-, (%eax)": 1,
                "je  <MmIsDriverVerifying+>;decl %eax;movl %eax, (%edi);jmp  <MmIsDriverVerifying+>;movl -(%ebp), %ecx": 1,
                "incl -(%ebp);decl %ecx;movl %ecx, -(%ebp);jmp  <MmIsDriverVerifying+>;movl -(%ebp), %eax": 1,
                "jmp  <MmIsDriverVerifying+>;movl -(%ebp), %eax;movl (%eax), %ecx;testb $, %cl;jne  <MmIsDriverVerifying+>": 1,
                "decl %edi;jmp  <MmIsDriverVerifying+>;movl %ecx, -(%ebp);shrl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%eax), %edx;movl -(%eax), %eax;shrdl $, %eax, %edx;shrl $, %eax;movl %eax, -(%ebp)": 2,
                "andb $-, (%ebx);movl -(%ebp), %eax;movl -(%ebp), %ecx;incl (%esi);cmpl %eax, (%ecx)": 1,
                "movl %eax, %ecx;calll  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;andl $, (%eax);subl $, -(%ebp)": 1,
                "jne  <MmIsDriverVerifying+>;movl (%esi), %ecx;leal -(%edi), %ebx;cmpl %ebx, %ecx;je  <MmIsDriverVerifying+>": 1,
                "jne  <MmIsDriverVerifying+>;subl $, %edi;jmp  <MmIsDriverVerifying+>;andl $, %ebx;addl $, %ebx": 1,
                "movl %eax, (%esi);movl (%esi), %eax;movl %eax, (%esi);movl %fs:, %eax;pushl $": 1,
                "pushl %ecx;pushl %edi;pushl (%eax);calll  <MmFlushImageSection+>;popl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax;movl (%ebp), %ecx": 1,
                "xaddl %eax, (%ecx);decl (%edx);popl %ebp;retl $;int": 1,
                "movl %esi, -(%ebp);jne  <MmIsDriverVerifying+>;movl , %ecx;cmpl %ecx, %eax;jb  <MmIsDriverVerifying+>": 1,
                "cmpl , %eax;jb - <MmIsDriverVerifying+>;cmpl , %eax;jae  <MmIsDriverVerifying+>;incl ": 1,
                "jmp  <MmIsDriverVerifying+>;movl -(%eax), %edx;testb $, %dl;jne  <MmIsDriverVerifying+>;shrl $, %edx": 1,
                "leal (%edi), %edx;testl %edx, %edx;je  <MmIsDriverVerifying+>;movl (%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "je  <MmIsDriverVerifying+>;cmpl $, (%ebx);je  <MmIsDriverVerifying+>;movl (%ebp), %edx;pushl $": 1,
                "movl %ebx, (%edi);movl (%esi), %eax;cmpl (%esi), %eax;jbe  <MmIsDriverVerifying+>;movl $, %eax": 1,
                "subl $, %esi;movl %esi, %eax;shll $, %eax;cmpl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "incl ;calll  <MmTrimAllSystemPagableMemory+>;movl %eax, %ebx;movl $, (%esi);andl $, (%esi)": 1,
                "shll $, %ecx;movl %ecx, (%ebp);movl %edx, %ecx;subl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "movl (%edi), %esi;movl -(%ebp), %eax;movl (%eax,%esi,), %eax;shrl $, %eax;movl %eax, (%edi)": 1,
                "movl %esi, (%edi);pushl %edx;pushl %ebx;pushl -(%ebp);leal (%ebp), %eax": 1,
                "cmpl $, (%edi);jne  <MmIsDriverVerifying+>;cmpl $, ;jbe  <MmIsDriverVerifying+>;movb $, (%ebx)": 1,
                "shrl $, %ecx;andl $, %ecx;subl $, %ecx;cmpl $, (%ebp);je  <MmIsDriverVerifying+>": 1,
                "cmpl -(%ebp), %edi;je  <MmIsDriverVerifying+>;cmpl $, -(%ebp);jne - <MmIsDriverVerifying+>;cmpl $, %ebx": 1,
                "movl $, %ebx;movl (%edx,%edi,), %eax;testb $, %al;je  <MmIsDriverVerifying+>;shrl $, %eax": 1,
                "cmpl -(%ebp), %edi;jbe - <MmIsDriverVerifying+>;movl (%ebp), %ebx;cmpl $, %ebx;je  <MmIsDriverVerifying+>": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);testb $, (%edi,%esi,);je  <MmIsDriverVerifying+>;cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <MmIsDriverVerifying+>;orl $-, -(%ebp);movl %esi, -(%ebp);movl (%edi,%esi,), %edx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;pushl %ebx": 4,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%ebp), %eax;movl (%esi), %ebx": 1,
                "movl (%ebp), %eax;movl (%esi), %ebx;pushl %edi;pushl (%eax);shll $, %ecx": 1,
                "pushl %edi;calll - <MmIsDriverVerifying+>;testb $, %bl;jne  <MmIsDriverVerifying+>;xorl %eax, %eax": 1,
                "cmpl %esi, %edi;je  <MmIsDriverVerifying+>;pushl $;pushl (%ebp);pushl %edi": 1,
                "pushl $;pushl (%ebp);pushl %edi;pushl %esi;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ebp), %esi;xorl %edx, %edx;movl %eax, -(%ebp);movl (%esi), %eax;incl %edx": 1,
                "leal (%ecx,%ecx), %ecx;shrl %cl, %edx;cmpl $, ;jae  <MmIsDriverVerifying+>;movl (%esi), %eax": 1,
                "shrl %cl, %edx;cmpl $, ;jae  <MmIsDriverVerifying+>;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;cmpl %ecx, %eax;jbe  <MmIsDriverVerifying+>;subl %ecx, %eax": 1,
                "calll *%edi;movb %al, %cl;movb $, (%esi);calll *%ebx;jmp  <MmIsDriverVerifying+>": 1,
                "jmp  <MmIsDriverVerifying+>;pushl (%ebp);pushl %esi;calll - <MmIsDriverVerifying+>;calll *%edi": 1,
                "pushl %ebx;movl (%ebp), %ebx;testb $, %bl;pushl %esi;pushl %edi": 1,
                "pushl %edi;je  <MmIsDriverVerifying+>;andl $-, %ebx;xorl %edx, %edx;jmp  <MmIsDriverVerifying+>": 1,
                "pushl %ebx;calll - <MmIsDriverVerifying+>;cmpl $, (%esi);je  <MmIsDriverVerifying+>;movl (%esi), %edx": 1,
                "calll - <MmIsDriverVerifying+>;cmpl $, (%esi);je  <MmIsDriverVerifying+>;movl (%esi), %edx;movl (%ebp), %eax": 1,
                "movl %eax, (%ebx);cmpl $, %ebx;jne  <MmIsDriverVerifying+>;movl , %ecx;addl %ecx, %eax": 1,
                "jbe  <MmIsDriverVerifying+>;movl %eax, ;cmpl (%esi), %edx;jbe  <MmIsDriverVerifying+>;movl %edx, (%esi)": 1,
                "pushl %ebx;calll - <MmIsDriverVerifying+>;testl %eax, %eax;jne - <MmIsDriverVerifying+>;pushl $": 1,
                "movl (%eax), %eax;pushl %ebx;movl %eax, -(%ebp);calll *;movl $, %ebx": 1,
                "pushl %edi;calll  <MmIsAddressValid+>;movb -(%ebp), %cl;calll *;movl %esi, %ecx": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;xorl %ebx, %ebx;movl %edi, %edx;shldl $, %edx, %ebx;xorl %ecx, %ecx": 1,
                "orl $, (%edi);incl ;movb %al, %dl;movl $, (%ebp);movl $, %eax": 1,
                "pushl ;pushl (%eax);pushl %edi;pushl %esi;pushl %ebx": 1,
                "jmp  <MmIsDriverVerifying+>;pushl %edi;movl (%ebp), %edi;pushl %edi;pushl %ebx": 1,
                "pushl %edi;pushl %ebx;leal (%ebp), %eax;pushl %eax;calll - <MmIsDriverVerifying+>": 1,
                "pushl %eax;calll - <MmIsDriverVerifying+>;movl -(%ebp), %ebx;movl (%ebx), %esi;cmpl %esi, (%ebp)": 1,
                "pushl %esi;pushl (%ebp);calll  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;incl (%ebx)": 1,
                "pushl %esi;movl (%eax), %esi;movl (%esi), %edx;pushl %edi;movl (%esi), %edi": 1,
                "shll $, %ecx;addl $, %eax;andl $, %eax;leal (%ecx), %edi;cmpl %eax, %edi": 1,
                "addl $, %eax;andl $, %eax;leal (%ecx), %edi;cmpl %eax, %edi;movl %ecx, -(%ebp)": 1,
                "jne  <MmIsDriverVerifying+>;pushl %ebx;pushl (%ebp);calll - <MmIsDriverVerifying+>;testl %eax, %eax": 1,
                "je  <MmIsDriverVerifying+>;pushl %esi;calll  <MmTrimAllSystemPagableMemory+>;popl %ebx;popl %edi": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;testl %eax, %eax;pushl %edi;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);movl (%eax), %edi;testl %edi, %edi;je  <MmIsDriverVerifying+>;cmpl $, (%edi)": 1,
                "popl %ebx;popl %ebp;retl $;pushl (%edi);pushl %ebx": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;testl %ebx, %ebx;pushl %esi": 1,
                "cmpl (%edx), %eax;jne  <MmIsDriverVerifying+>;testl %edi, %edi;jne  <MmIsDriverVerifying+>;movl (%edx), %edi": 1,
                "movl %eax, (%edi);movl (%ebp), %eax;subl %eax, (%esi);movl %edx, %edi;movl (%edx), %edx": 1,
                "pushl (%ebp);pushl $;pushl $;calll - <KeBugCheckEx>;pushl %eax": 1,
                "pushl $;pushl %edi;calll  <ExFreePoolWithTag>;popl %edi;xorl %eax, %eax": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax": 4,
                "jne - <MmIsDriverVerifying+>;xorl %esi, %esi;movb %al, %cl;calll *;movl %esi, %eax": 2,
                "xorl %esi, %esi;movb %al, %cl;calll *;movl %esi, %eax;popl %edi": 2,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);je  <MmIsDriverVerifying+>;movl (%edi), %esi;movl (%esi), %eax": 1,
                "pushl %edx;pushl (%esi);calll  <MmTrimAllSystemPagableMemory+>;andl %ebx, (%esi);movw (%esi), %ax": 1,
                "cmpl $, (%esi);jb  <MmIsDriverVerifying+>;decl ;decw (%esi);jmp  <MmIsDriverVerifying+>": 1,
                "addl $, %edi;cmpl -(%ebp), %edi;jb - <MmIsDriverVerifying+>;movl -(%ebp), %esi;jmp  <MmIsDriverVerifying+>": 1,
                "movl (%edi), %eax;movw (%eax), %cx;cmpw $, %cx;jne  <MmIsDriverVerifying+>;cmpl $, (%eax)": 1,
                "jne  <MmIsDriverVerifying+>;cmpl $, (%eax);jb  <MmIsDriverVerifying+>;decl ;decw (%eax)": 1,
                "decl ;decw (%eax);jmp  <MmIsDriverVerifying+>;cmpw $, %cx;je  <MmIsDriverVerifying+>": 1,
                "cmpl $, -(%ebp);jne  <MmIsDriverVerifying+>;movl %esi, -(%ebp);movl , %eax;cmpl (%ebp), %eax": 1,
                "shrl $, %ecx;andl $, %ecx;movl -(%ecx), %edi;movl -(%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "andl %ecx, %edi;xorl %ebx, %ebx;cmpl %ecx, %edi;jne  <MmBuildMdlForNonPagedPool+>;testl %ebx, %ebx": 1,
                "jmp  <MmBuildMdlForNonPagedPool+>;shrl $, %edx;andl $, %edx;subl $, %edx;movl (%edx), %ecx": 1,
                "popl %esi;popl %ebx;jbe  <MmBuildMdlForNonPagedPool+>;orb $, (%eax);leave": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%esi), %eax": 2,
                "movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;shll $, %esi;cmpl %edi, %ebx": 1,
                "movl (%edx), %eax;cmpl (%ebx), %eax;jne  <MmBuildMdlForNonPagedPool+>;movl -(%ebp), %eax;cmpl %eax, (%edx)": 1,
                "movl %edx, %edi;movl (%edx), %edx;cmpl %ecx, %edx;jne - <MmBuildMdlForNonPagedPool+>;testl %edi, %edi": 1,
                "pushl $;calll - <KeBugCheckEx>;pushl %edi;pushl %ebx;pushl %edx": 1,
                "jmp - <MmBuildMdlForNonPagedPool+>;movl (%ebp), %eax;movb (%ebp), %cl;subl %eax, ;calll *": 1,
                "movl (%ebp), %eax;movb (%ebp), %cl;subl %eax, ;calll *;testl %edi, %edi": 1,
                "calll  <InterlockedPushEntrySList>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <MmBuildMdlForNonPagedPool+>;pushl %esi;movl (%eax), %esi": 1,
                "jne - <MmBuildMdlForNonPagedPool+>;popl %esi;movl %edi, %eax;popl %edi;retl": 1,
                "movl $, %esi;cmpl %esi, ;jne  <MmBuildMdlForNonPagedPool+>;xorl %eax, %eax;jmp  <MmBuildMdlForNonPagedPool+>": 1,
                "cmpl %esi, %ecx;je  <MmBuildMdlForNonPagedPool+>;movl (%edx), %eax;movl (%ecx), %esi;cmpl %eax, %esi": 1,
                "movl -(%ebp), %eax;popl %esi;leave;retl $;int": 10,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %ecx;movl (%ecx), %edx;leal (%ecx), %eax": 1,
                "popl %eax;movl (%ebp), %ecx;addl %ecx, %eax;movl (,%eax,), %eax;cmpl $, %eax": 3,
                "decl %eax;jne  <MmMapLockedPagesWithReservedMapping+>;cmpb $, ;movl %ebx, -(%ebp);jne  <MmMapLockedPagesWithReservedMapping+>": 1,
                "jne  <MmMapLockedPagesWithReservedMapping+>;cmpb $, ;movl %ebx, -(%ebp);jne  <MmMapLockedPagesWithReservedMapping+>;andl $-, %ecx": 1,
                "jne  <MmMapLockedPagesWithReservedMapping+>;andl $-, %ecx;orl $, %ecx;jmp  <MmMapLockedPagesWithReservedMapping+>;pushl %edi": 1,
                "orl $, %ecx;jmp  <MmMapLockedPagesWithReservedMapping+>;pushl %edi;pushl %eax;pushl (%ebp)": 1,
                "jmp  <MmMapLockedPagesWithReservedMapping+>;pushl %edi;pushl %eax;pushl (%ebp);pushl $": 1,
                "jmp  <MmMapLockedPagesWithReservedMapping+>;movl , %esi;movl , %edi;movl -(%ebp), %eax;movl (%eax), %edx": 1,
                "decl %eax;jne  <MmMapLockedPagesWithReservedMapping+>;movl (%edx), %eax;andl $, %eax;orl $, %eax": 1,
                "jmp  <MmMapLockedPagesWithReservedMapping+>;movl -(%ebp), %ebx;movl -(%ebp), %eax;movl (%eax), %eax;andl $, %eax": 1,
                "orb $, (%eax);movw (%eax), %cx;testb $, %cl;movl (%ebp), %edx;movl %edx, (%eax)": 1,
                "subl $, %eax;pushl %ebx;andl $-, %edx;cmpl %edx, %ecx;pushl %esi": 1,
                "pushl (%ebp);pushl $;jmp  <MmUnmapReservedMapping+>;movl (%ebx), %ecx;shrl %ecx": 1,
                "jmp  <MmUnmapReservedMapping+>;movl (%ebx), %ecx;shrl %ecx;cmpl $, %ecx;ja  <MmUnmapReservedMapping+>": 1,
                "cmpl $, %ecx;ja  <MmUnmapReservedMapping+>;pushl %ecx;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl $;jmp  <MmUnmapReservedMapping+>;movl (%ebp), %edx;movl (%edx), %esi": 1,
                "pushl $;jmp  <MmUnmapReservedMapping+>;testb $, (%edx);je  <MmUnmapReservedMapping+>;addl (%edx,%esi,), %esi": 1,
                "testb $, (%edx);je  <MmUnmapReservedMapping+>;addl (%edx,%esi,), %esi;movl %esi, %edx;shll $, %edx": 1,
                "movl %ecx, -(%ebp);jae  <MmUnmapReservedMapping+>;movl (%eax), %ecx;andl $, %ecx;xorl %ebx, %ebx": 1,
                "testl %esi, %esi;jbe  <MmUnmapReservedMapping+>;movl -(%ebp,%edi,), %edx;movb $, %cl;calll  <KiDispatchInterrupt+>": 1,
                "subl %edx, %ebx;cmpl %ebx, %ecx;jae  <MmAdvanceMdl+>;subl %ecx, %eax;addl %ecx, %edx": 1,
                "je  <MmAdvanceMdl+>;addl %ebx, (%esi);movl $, (%ebp);testl %ecx, %ecx;je  <MmAdvanceMdl+>": 1,
                "movw (%esi), %cx;leal (%esi), %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;andl $, %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "testb $-, -(%ebp);je  <MmAdvanceMdl+>;movl (%edi), %eax;orl $, (%edi);movl (%edi), %ecx": 1,
                "jne  <MmAdvanceMdl+>;cmpl $, (%edi);jb  <MmAdvanceMdl+>;decl ;decw (%edi)": 1,
                "calll  <MmIsAddressValid+>;cmpl $-, %eax;movl %eax, (%ebp);je  <MmProtectMdlSystemAddress+>;cmpl $, %eax": 1,
                "movl %esi, %edi;movl %esi, %ecx;shrl $, %edi;andl $, %ecx;andl $, %edi": 1,
                "je  <MmProtectMdlSystemAddress+>;pushl $;pushl $;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "movl %eax, -(%ebp);jne  <MmProtectMdlSystemAddress+>;movl $, %eax;jmp  <MmProtectMdlSystemAddress+>;movl %ebx, %ecx": 1,
                "andl $, -(%ebp);testl %ebx, %ebx;je  <MmProtectMdlSystemAddress+>;movl (%edi), %edx;movl (%edi), %ecx": 1,
                "shrl $, %esi;movl %esi, -(%ebp);movl %eax, %esi;movl -(%ebp), %eax;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl %edx, %eax;shldl $, %eax, %ecx;shll $, %eax;xorl -(%ebp), %eax": 1,
                "cmpl $, (%ebp);jne  <MmProtectMdlSystemAddress+>;movl -(%ebp), %eax;movl , %esi;movl , %ebx": 1,
                "cmpl $, %edi;jae  <MmProtectMdlSystemAddress+>;movl , %esi;notl %edx;notl %esi": 1,
                "andl $, %edx;xorl %edx, %eax;xorl $, %ecx;cmpl $, -(%ebp);movl %eax, (%edi)": 1,
                "movl -(%ebp), %eax;cmpl $, %eax;je  <MmProtectMdlSystemAddress+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp,%eax,)": 1,
                "cmpl %esi, %ecx;jne - <MmProtectMdlSystemAddress+>;movl -(%ebp), %ecx;movl %edx, (%ecx);movl %esi, (%ecx)": 1,
                "calll *;testl %ebx, %ebx;je  <MmProtectMdlSystemAddress+>;pushl $;pushl -(%ebp)": 1,
                "pushl -(%ebp);jmp  <MmProtectMdlSystemAddress+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, (%ecx)": 1,
                "movl (%ebp), %ebx;cmpl (%ecx), %ebx;jb  <MmProtectMdlSystemAddress+>;cmpl (%ecx), %ebx;jb  <MmProtectMdlSystemAddress+>": 1,
                "cmpl (%ecx), %ebx;jb  <MmProtectMdlSystemAddress+>;cmpl (%ecx), %ebx;jb  <MmProtectMdlSystemAddress+>;movl (%ecx), %ecx": 1,
                "jne - <MmProtectMdlSystemAddress+>;movl %esi, %ecx;calll *;xorl %eax, %eax;popl %esi": 1,
                "popl %esi;popl %ebx;popl %edi;popl %ebp;retl $": 12,
                "decl ;movl (%edx), %ebx;jmp  <MmProtectMdlSystemAddress+>;testl $, %ecx;je  <MmProtectMdlSystemAddress+>": 1,
                "je - <MmProtectMdlSystemAddress+>;movl (%ebx), %eax;addl $, %eax;shrl $, %eax;leal (,%eax,), %eax": 1,
                "shrl $, %eax;leal (,%eax,), %eax;pushl %eax;pushl (%ebp);calll  <PsReturnProcessNonPagedPoolQuota>": 1,
                "jl  <MmMapIoSpace+>;xorl %eax, %eax;jmp  <MmMapIoSpace+>;movl (%ebp), %eax;movl (%ebp), %edx": 1,
                "movb $, %cl;calll  <_allshr>;andl $, -(%ebp);andl $, -(%ebp);xorl %edi, %edi": 1,
                "movl %eax, %ebx;movl %ecx, -(%ebp);movl %esi, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);pushl %edi;calll  <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmMapIoSpace+>": 1,
                "pushl $;pushl %ebx;calll ;movl %eax, %ecx;testl %ecx, %ecx": 1,
                "orl $, %edi;jmp  <MmMapIoSpace+>;incl ;jmp  <MmMapIoSpace+>;andl $-, %edi": 1,
                "pushl %ecx;jmp  <MmMapIoSpace+>;pushl $;pushl (%ebp);pushl (%ebp)": 1,
                "pushl -(%ebp);calll ;xorl %eax, %eax;jmp  <MmMapIoSpace+>;movl , %edi": 1,
                "notl %edx;andl $, %eax;andl %edx, %edi;subl $, %eax;je  <MmMapIoSpace+>": 1,
                "decl %eax;jne  <MmMapIoSpace+>;cmpb $, (%ebp);jne  <MmMapIoSpace+>;calll *": 1,
                "andl $-, %edi;orl $, %edi;jmp  <MmMapIoSpace+>;cmpl $, -(%ebp);je  <MmMapIoSpace+>": 1,
                "cmpl $, -(%ebp);je  <MmMapIoSpace+>;incl ;orl $, %edi;addl $, %ecx": 1,
                "movl %eax, %edi;movl -(%ebp), %eax;movl %ecx, %esi;movl %esi, (%eax);movl %edi, (%eax)": 1,
                "movl -(%ebp), %eax;movl %ecx, %esi;movl %esi, (%eax);movl %edi, (%eax);addl $, %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;pushl -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "pushl %edi;calll ;testb $, ;je  <MmUnmapIoSpace+>;pushl %esi": 1,
                "jb  <MmFreeContiguousMemory+>;cmpl , %ebx;jae  <MmFreeContiguousMemory+>;pushl %esi;pushl %ebx": 1,
                "pushl %edi;pushl %esi;calll - <MmIsDriverVerifying+>;movl %ebx, %eax;shrl $, %eax": 1,
                "addl , %eax;movl (%eax), %ecx;testb $, %cl;jne  <MmFreeContiguousMemory+>;pushl %esi": 1,
                "testb $, (%eax);je - <MmFreeContiguousMemory+>;andl $-, (%eax);subl %edx, %eax;pushl $": 1,
                "calll - <MmUnmapIoSpace>;leal (%esi,%edi), %ebx;calll *;movb %al, (%ebp);movl %edi, %ecx": 1,
                "movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);popl %edi;popl %esi": 2,
                "orl %ecx, %eax;je  <MmGetPhysicalAddress+>;movl %edi, %ecx;shrl $, %ecx;andl $, %ecx": 1,
                "xorl %edx, %edx;jmp  <MmGetPhysicalAddress+>;shrdl $, %edx, %eax;shrl $, %edx;andl $, %eax": 1,
                "andl $, %esi;shll $, %eax;addl %esi, %eax;popl %esi;popl %ebp": 1,
                "movl (%ebp), %edx;andl $, %ecx;addl $, %edx;shll $, %ecx;pushl %esi": 1,
                "movl (%ebp), %eax;testl %eax, %eax;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "testl %edx, %edx;jne  <MmSetAddressRangeModified+>;movl %ecx, %edx;shrdl $, %eax, %edx;movl %edx, %esi": 1,
                "movl (%esi), %eax;orl $, (%esi);andl $, %eax;xorl %edx, %edx;orl %edx, %eax": 1,
                "orl %edx, %eax;jne  <MmSetAddressRangeModified+>;testb $, (%esi);jne  <MmSetAddressRangeModified+>;pushl (%esi)": 1,
                "cmpl %ebx, %edi;jbe - <MmSetAddressRangeModified+>;xorl %esi, %esi;cmpl %esi, -(%ebp);je  <MmSetAddressRangeModified+>": 1,
                "movl %edi, (%ebp);movl (%ebp), %esi;movl (%ebp), %edi;subl %edi, %esi;cmpl %esi, %eax": 1,
                "cmpl %esi, %eax;ja  <MmSetAddressRangeModified+>;cmpl $, (%ebp);je  <MmSetAddressRangeModified+>;leal -(%eax,%edi), %ebx": 1,
                "subl (%ebp), %edi;shrl $, %edx;andl $, %edx;subl $, %edx;movl %edx, %esi": 1,
                "incl %edi;xorl %ebx, %ebx;xorl %ecx, %ecx;cmpl %eax, %esi;movl %eax, (%ebp)": 1,
                "je  <MmSetAddressRangeModified+>;movl %edi, %ecx;jmp  <MmSetAddressRangeModified+>;leal (%ecx), %eax;cmpl %eax, %edi": 1,
                "je  <MmSetAddressRangeModified+>;addl $, %esi;cmpl (%ebp), %esi;jb - <MmSetAddressRangeModified+>;jmp - <MmSetAddressRangeModified+>": 1,
                "addl $, %esi;cmpl (%ebp), %esi;jb - <MmSetAddressRangeModified+>;jmp - <MmSetAddressRangeModified+>;movl %esi, %eax": 1,
                "sarl $, %eax;addl %eax, ;movl (%edi), %esi;movl (%edi), %eax;movl %esi, %ecx": 1,
                "je  <MmSetAddressRangeModified+>;cmpl %ecx, %ecx;jne  <MmSetAddressRangeModified+>;shrdl $, %eax, %esi;andl $, %esi": 1,
                "cmpl %ecx, %ecx;jne  <MmSetAddressRangeModified+>;shrdl $, %eax, %esi;andl $, %esi;imull $, %esi, %esi": 1,
                "leal (%eax,%edi,), %eax;orl $, (%eax);movl , %eax;incl (%eax);calll *": 1,
                "calll *;movl $, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 2,
                "movl $, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl %edi, (%esi)": 1,
                "cmpl %ecx, %ecx;je  <MmSetAddressRangeModified+>;movl %esi, %edx;andl $, %edx;movl %edx, -(%ebp)": 1,
                "jne  <MmSetAddressRangeModified+>;andl $, %eax;cmpl $, %eax;jne  <MmSetAddressRangeModified+>;incl (%esi)": 1,
                "calll *%ebx;movl $, %edi;pushl %edi;calll - <MmIsDriverVerifying+>;testl %eax, %eax": 1,
                "pushl $;pushl %esi;pushl -(%ebp);pushl %eax;calll  <MmIsAddressValid+>": 1,
                "movl %eax, ;calll *%edi;movb %al, -(%ebp);jmp  <MmSetAddressRangeModified+>;movl -(%ebp), %eax": 1,
                "shll $, %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <MmIsDriverVerifying+>": 1,
                "pushl %eax;calll - <MmIsDriverVerifying+>;calll *;jmp  <MmSetAddressRangeModified+>;decl ": 1,
                "cmpl $, -(%ebp);jne  <MmSetAddressRangeModified+>;movl , %eax;incl (%eax);movl $, (%ebp)": 1,
                "leal -(%edi,%edx), %edi;movl %edx, %esi;shrl $, %esi;movl $, %ecx;shrl $, %edi": 1,
                "movl , %ecx;addl %ecx, %eax;movw (%eax), %dx;cmpw $, %dx;jne  <MmUnlockPagableImageSection+>": 1,
                "cmpw $, %dx;je  <MmUnlockPagableImageSection+>;decl %edx;movw %dx, (%eax);jmp  <MmUnlockPagableImageSection+>": 1,
                "je  <MmUnlockPagableImageSection+>;decl %edx;movw %dx, (%eax);jmp  <MmUnlockPagableImageSection+>;subl %ecx, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx": 4,
                "pushl %edi;movl %ecx, %edi;shll $, %edi;addl %edi, %edx;movl %edx, (%eax)": 1,
                "shll $, %edi;addl %edi, %edx;movl %edx, (%eax);movl , %edx;movl , %ebx": 1,
                "movl %esi, %edx;shll $, %edx;movl $, (%ecx,%esi,);addl %edi, %edx;movb $, %cl": 1,
                "shldl $, %eax, %ecx;shll $, %eax;andl $, %ebx;orl %ebx, %eax;andl $-, %edx": 2,
                "testl %eax, %eax;movl (%ebp), %ecx;movl %ecx, (%ebp);je  <MmMapMemoryDumpMdl+>;cmpl %eax, (%ebp)": 1,
                "shrl $, %ecx;addl %ecx, %esi;cmpl $, %eax;pushl %edi;jne  <MmMapMemoryDumpMdl+>": 1,
                "addl %ecx, %esi;cmpl $, %eax;pushl %edi;jne  <MmMapMemoryDumpMdl+>;pushl $": 1,
                "movl %edi, %eax;jmp  <MmMapMemoryDumpMdl+>;pushl $;pushl %edi;calll  <ExFreePoolWithTag>": 1,
                "jmp  <MmMapMemoryDumpMdl+>;calll  <MmIsThisAnNtAsSystem+>;jmp  <MmMapMemoryDumpMdl+>;calll  <MmMapUserAddressesToPage+>;pushl $": 1,
                "pushl %esi;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll  <MmMapUserAddressesToPage+>": 1,
                "jbe  <MmAllocateContiguousMemorySpecifyCache+>;movl %ecx, %eax;cmpl %eax, %edi;jbe  <MmAllocateContiguousMemorySpecifyCache+>;xorl %eax, %eax": 1,
                "movl (%ebp), %edx;movb $, %cl;calll  <_allshr>;movl , %ecx;cmpl %ecx, %eax": 1,
                "calll  <_allshr>;movl , %ecx;cmpl %ecx, %eax;jbe  <MmAllocateContiguousMemory+>;movl %ecx, %eax": 1,
                "pushl -(%ebp);pushl $;pushl $;pushl %eax;pushl $": 1,
                "leal (%ecx,%edx), %esi;shrl $, %esi;testl %eax, %eax;movl %edi, %ebx;movl %ebx, -(%ebp)": 1,
                "jne  <MmAllocateContiguousMemory+>;addl $, %ebx;decl %esi;jne - <MmAllocateContiguousMemory+>;movl (%ebp), %eax": 1,
                "movl %eax, %esi;testl %esi, %esi;jne  <MmAllocateContiguousMemory+>;pushl $;jmp  <MmAllocateContiguousMemory+>": 1,
                "testl %esi, %esi;jne  <MmAllocateContiguousMemory+>;pushl $;jmp  <MmAllocateContiguousMemory+>;incl ": 1,
                "pushl %esi;calll  <ExFreePoolWithTag>;jmp - <MmAllocateContiguousMemory+>;xorl %eax, %eax;pushl $": 1,
                "rep  stosl %eax, %es:(%edi);movl (%esi), %eax;orb $, (%esi);andl $, %eax;orl $, %eax": 1,
                "shll $, %ecx;leal -(%ecx,%eax), %edi;cmpl %eax, %edi;jbe  <MmAllocateContiguousMemory+>;movl , %eax": 1,
                "cmpl %eax, %edi;jbe  <MmAllocateContiguousMemory+>;movl , %eax;addl $, %eax;cmpl %eax, %edi": 1,
                "movl , %ecx;shrl $, %eax;leal (%ecx,%eax,), %eax;incw (%eax);movl -(%ebp), %eax": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;shrdl $, %ecx, %eax;movl %eax, %esi;andl $, %esi": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;addl (%ebx), %eax;cmpb $, (%ebp);pushl %esi": 1,
                "andl $, %eax;movl %eax, -(%ebp);movswl %ax, %eax;testl %eax, %eax;je  <MmMapLockedPagesSpecifyCache+>": 1,
                "pushl %edi;calll  <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmMapLockedPagesSpecifyCache+>;addl $, (%ebp)": 1,
                "leal (%ebx), %eax;movl %eax, (%ebp);pushl $;pushl %esi;calll ": 1,
                "movl , %esi;shll $, %eax;addl (%ebx), %eax;notl %ecx;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);movl , %eax;notl %eax;andl %eax, %edi;movl (%ebp), %eax": 1,
                "andl $-, %esi;orl %edi, %eax;orl %esi, %ecx;movl %eax, %edi;movl (%ebp), %eax": 2,
                "movl %eax, %edi;movl (%ebp), %eax;movl %ecx, %esi;movl %esi, (%eax);movl %edi, (%eax)": 2,
                "pushl $;pushl $;pushl $;pushl (%ebp);pushl (%ebp)": 2,
                "movl (%ebp), %esi;movl (%esi), %eax;addl (%esi), %eax;movl (%esi), %ecx;shrl $, %ebx": 1,
                "andl $, %ebx;leal (%eax,%ecx), %edi;shrl $, %edi;subl $, %ebx;testb $, (%esi)": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;xorl %eax, %eax;movw (%edi), %ax;testb $, %al": 1,
                "movl %edi, %eax;negl %eax;addl $, %esi;movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);testb $, -(%ebp);jne  <MmUnlockPages+>": 1,
                "movl (%esi), %edi;movl (%edi), %eax;orl $, (%edi);movl (%edi), %ecx;movl (%edi), %edx": 1,
                "jne  <MmUnlockPages+>;cmpl $, (%edi);jb  <MmUnlockPages+>;decl ;decw (%edi)": 1,
                "jmp  <MmUnlockPages+>;movl (%esi), %eax;movw (%eax), %cx;cmpw $, %cx;jne  <MmUnlockPages+>": 1,
                "cmpl -(%ebp), %esi;jb - <MmUnlockPages+>;cmpl $, %edi;ja  <MmUnlockPages+>;pushl $": 1,
                "ja  <MmUnlockPages+>;movl , %edx;movl %esi, %eax;shrl $, %eax;movl (%edx,%eax,), %eax": 1,
                "shrl %cl, %eax;xorl %ebx, %ebx;incl %ebx;andl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;andl %edi, (%esi);movw (%esi), %ax;cmpw $, %ax;jne  <MmUnlockPages+>": 1,
                "andl %edi, (%esi);movw (%esi), %ax;cmpw $, %ax;jne  <MmUnlockPages+>;cmpl %ebx, (%esi)": 1,
                "addl $, -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb - <MmUnlockPages+>;jmp  <MmUnlockPages+>": 1,
                "je  <MmUnlockPages+>;cmpl , %eax;ja  <MmUnlockPages+>;movl , %esi;movl %eax, %edx": 1,
                "movb -(%ebp), %cl;calll *;movl (%ebp), %eax;andb $-, (%eax);andb $-, (%eax)": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %ecx;addl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "incl ;pushl $;jmp  <MmProbeAndLockPages+>;movl %fs:, %eax;movl %eax, %esi": 1,
                "cmpl %ebx, %eax;jbe  <MmProbeAndLockPages+>;movl %ebx, (%esi);jmp  <MmProbeAndLockPages+>;movl %eax, (%esi)": 2,
                "movl -(%ebp), %esi;movl -(%ebp), %edi;movl (%ebp), %ebx;movb -(%ebp), %cl;andb $, %cl": 1,
                "movl -(%ebp), %ecx;shrl %ecx;movl %ecx, (%esi);testl %eax, %eax;je  <MmProbeAndLockPages+>": 1,
                "movl %ecx, (%esi);testl %eax, %eax;je  <MmProbeAndLockPages+>;incl ;andl $, (%ebx)": 1,
                "movl %eax, -(%ebp);xorl %eax, %eax;cmpl %eax, (%ebp);je  <MmProbeAndLockPages+>;orb $-, (%ebx)": 1,
                "movl %edx, %eax;shrl $, %eax;andl $, %eax;movl -(%eax), %esi;movl -(%eax), %eax": 1,
                "shrl $, %eax;andl $, %esi;movl %edx, %eax;shrl $, %eax;andl $, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlGetCallersAddress>;pushl $;subl (%ebp), %edi": 1,
                "calll *;movb %al, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;andl $, %eax": 5,
                "movb %al, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;andl $, %eax;xorl %ecx, %ecx": 3,
                "orl %ecx, %eax;je  <MmProbeAndLockPages+>;movl (%edi), %eax;andl $, %eax;orl %ecx, %eax": 1,
                "jne  <MmProbeAndLockPages+>;movb -(%ebp), %cl;calll *;movb $, (%esi);xorl %ecx, %ecx": 1,
                "movl %eax, %ebx;movb -(%ebp), %al;andb $, %al;movb %al, (%esi);movl -(%ebp), %eax": 2,
                "calll *;movl (%ebp), %ebx;jmp - <MmProbeAndLockPages+>;movl (%edi), %edx;movl (%edi), %eax": 1,
                "cmpl %eax, (%ebp);je  <MmProbeAndLockPages+>;movl %edx, %eax;andl $, %eax;xorl %ecx, %ecx": 1,
                "andl $, %edx;xorl %eax, %eax;orl %eax, %edx;je  <MmProbeAndLockPages+>;movl %edi, %ebx": 1,
                "movb %al, -(%ebp);movl (%ebp), %ebx;jmp  <MmProbeAndLockPages+>;movl -(%ebp), %eax;shrdl $, %eax, %edx": 1,
                "movl -(%ebp), %ecx;testl %eax, %eax;je  <MmProbeAndLockPages+>;movl %ecx, %eax;imull $, %eax, %eax": 1,
                "movl %ecx, %eax;imull $, %eax, %eax;addl , %eax;movl -(%ebp), %edx;testl %edx, %edx": 1,
                "addl , %eax;movl -(%ebp), %edx;testl %edx, %edx;je  <MmProbeAndLockPages+>;testb $, (%edx)": 1,
                "addl $, %edx;movl %edx, -(%ebp);movl (%edx), %ecx;cmpl %edx, %ecx;je  <MmProbeAndLockPages+>": 1,
                "subl , %edx;testl %edx, %edx;jg  <MmProbeAndLockPages+>;movl %edi, %edx;shll $, %edx": 1,
                "calll *;jmp  <MmProbeAndLockPages+>;movb -(%ebp), %cl;calll *;incl ": 1,
                "cmpl $, ;jne  <MmProbeAndLockPages+>;movl -(%ebp), %eax;andl $, %eax;movl (%ebp), %edi": 1,
                "calll  <ExRaiseStatus>;calll  <wctomb+>;retl $;incl ;movb -(%ebp), %cl": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, %esi;andl $, %esi;negl %esi": 1,
                "movl (%ebp), %esi;shll $, %ecx;leal (%ecx,%eax), %edx;movl %edx, -(%ebp);movl %ecx, %edx": 1,
                "rep  movsb (%esi), %es:(%edi);je  <MmProbeAndLockSelectedPages+>;orb $-, (%ebx);jmp  <MmProbeAndLockSelectedPages+>;andb $, (%ebx)": 1,
                "movl (%ecx), %ecx;movl %ecx, -(%ebp);jmp  <MmProbeAndLockSelectedPages+>;andl $, -(%ebp);orb $, (%ebx)": 1,
                "testl %esi, %esi;jne  <MmProbeAndLockSelectedPages+>;cmpl %ecx, %edi;ja  <MmProbeAndLockSelectedPages+>;movl %edi, %esi": 1,
                "andl $, %eax;movl -(%eax), %ebx;movl -(%eax), %eax;shrdl $, %eax, %ebx;shrl $, %edi": 1,
                "movl %ebx, %esi;imull $, %esi, %esi;addl , %esi;shrl $, %eax;cmpb $, -(%ebp)": 1,
                "xorl %ecx, %ecx;cmpl %ebx, %eax;jne  <MmProbeAndLockSelectedPages+>;testl %ecx, %ecx;je  <MmProbeAndLockSelectedPages+>": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movb %bl, %cl;andb $, %cl;shrl %ebx;testl %eax, %eax": 2,
                "orl %ecx, %eax;je  <MmProbeAndLockSelectedPages+>;movl (%edx), %esi;movl (%edx), %eax;shrdl $, %eax, %esi": 1,
                "movl %eax, -(%ebp);movl %edx, %eax;je  <MmProbeAndLockSelectedPages+>;cmpl %edx, %eax;jne  <MmProbeAndLockSelectedPages+>": 1,
                "cmpl %edx, %eax;jne  <MmProbeAndLockSelectedPages+>;cmpl %edx, (%ebp);je  <MmProbeAndLockSelectedPages+>;movl %ecx, %eax": 1,
                "cmpl %edx, (%ebp);je  <MmProbeAndLockSelectedPages+>;movl %ecx, %eax;andl $, %eax;orl %edx, %eax": 1,
                "ja  <MmProbeAndLockSelectedPages+>;movb -(%ebp), %cl;calll *;movl -(%ebp), %esi;movzbl (%esi), %ecx": 1,
                "movl (%ecx), %ebx;testb $, (%ebx);je  <MmProbeAndLockSelectedPages+>;cmpl (%ecx), %edi;jb  <MmProbeAndLockSelectedPages+>": 1,
                "je  <MmProbeAndLockSelectedPages+>;incl ;incw (%eax);jmp  <MmProbeAndLockSelectedPages+>;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl (%ebp);calll - <MmIsDriverVerifying+>;popl %edi;popl %esi": 1,
                "jne  <MmProbeAndLockSelectedPages+>;movl (%esi), %eax;testb $, %al;jne  <MmProbeAndLockSelectedPages+>;orl $, %eax": 1,
                "movl (%eax), %eax;movl %edi, (%eax);leal (%esi), %eax;cmpl %edi, (%eax);je  <MmProbeAndLockSelectedPages+>": 1,
                "jne  <MmProbeAndLockSelectedPages+>;cmpl %edx, (%eax);je  <MmProbeAndLockSelectedPages+>;cmpl %edx, (%ebp);je  <MmProbeAndLockSelectedPages+>": 1,
                "movl (%ebx), %ebx;testl %ebx, %ebx;je  <MmProbeAndLockSelectedPages+>;movl %ebx, %esi;popl %ebx": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jne - <MmProbeAndLockSelectedPages+>;xorl %eax, %eax;jmp  <MmProbeAndLockSelectedPages+>": 1,
                "movl (%eax), %eax;pushl $;addl $, %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "addl $, %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll  <RtlUnicodeStringToAnsiString>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlUnicodeStringToAnsiString>;testl %eax, %eax;jl  <MmProbeAndLockSelectedPages+>": 1,
                "pushl %eax;calll  <RtlUnicodeStringToAnsiString>;testl %eax, %eax;jl  <MmProbeAndLockSelectedPages+>;movl %fs:, %eax": 1,
                "calll *%ebx;movl -(%ebp), %ecx;movl (%ecx), %edi;movl -(%ebp), %ecx;andl $, (%ecx)": 1,
                "movb %al, %cl;calll *%esi;testl %edi, %edi;je  <MmProbeAndLockSelectedPages+>;pushl $": 1,
                "cmpl $, (%eax);je  <MmProbeAndLockSelectedPages+>;movl %edi, %esi;calll *%ebx;testl %edi, %edi": 1,
                "jmp  <MmProbeAndLockSelectedPages+>;addl $, %edx;andl $-, %edx;subl %edx, ;movl (%esi), %esi": 1,
                "testl %edx, %edx;je  <MmProbeAndLockSelectedPages+>;negl %edx;movl %edx, (%ebp);movl (%ebp), %eax": 1,
                "cmpl -(%ebp), %edi;jae  <MmProbeAndLockSelectedPages+>;movl $, %ebx;testw $, %di;jne  <MmProbeAndLockSelectedPages+>": 1,
                "jae  <MmProbeAndLockSelectedPages+>;movl $, %ebx;testw $, %di;jne  <MmProbeAndLockSelectedPages+>;pushl %edi": 1,
                "shrl $, %eax;movl (%esi), %ecx;orl $, (%esi);andl %ebx, %ecx;movl %ecx, %eax": 1,
                "imull $, %eax, %eax;addl , %eax;movl (%eax), %edx;shrl $, %edx;andl $, %edx": 14,
                "shrl $, %edx;andl $, %edx;cmpl $, %edx;je  <MmProbeAndLockSelectedPages+>;cmpl $, %edx": 3,
                "cmpl $, %edx;je  <MmProbeAndLockSelectedPages+>;decl %edx;movl %edx, (%eax);jmp  <MmProbeAndLockSelectedPages+>": 3,
                "jne  <MmProbeAndLockSelectedPages+>;movl %esi, %ecx;calll  <MmTrimAllSystemPagableMemory+>;pushl (%esi);pushl (%esi)": 1,
                "movl -(%ebp), %ecx;calll  <MmTrimAllSystemPagableMemory+>;jmp  <MmProbeAndLockSelectedPages+>;andl $, %edx;orl %eax, %edx": 1,
                "je  <MmProbeAndLockSelectedPages+>;pushl (%edi);pushl (%edi);calll  <MmTrimAllSystemPagableMemory+>;addl $, %edi": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi;xorl %esi, %esi": 3,
                "movl (%ecx), %ebx;movl (%eax), %eax;leal (%ebx,%eax,), %eax;movl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "movb $, -(%ebp);movl %esi, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "calll *;orl $, (%edi);cmpw %si, (%edi);movb %al, (%ebp);je  <MmProbeAndLockSelectedPages+>": 1,
                "je - <MmProbeAndLockSelectedPages+>;movl (%esi), %ebx;movl (%esi), %eax;leal (%ebx,%eax,), %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, %ecx;calll  <MmIsAddressValid+>;movl (%ebx), %eax;movl (%ebx), %ecx;movl %eax, %edx": 1,
                "andl $, %edx;pushl $;movl %edx, -(%ebp);popl %edx;je  <MmProbeAndLockSelectedPages+>": 1,
                "jne  <MmProbeAndLockSelectedPages+>;cmpl %edx, -(%ebp);jmp  <MmProbeAndLockSelectedPages+>;movl %eax, %esi;andl $, %esi": 1,
                "je  <MmProbeAndLockSelectedPages+>;cmpl %edx, %edx;jne  <MmProbeAndLockSelectedPages+>;shrdl $, %ecx, %eax;movl %eax, %esi": 1,
                "cmpl $, -(%ebp);jae  <MmProbeAndLockSelectedPages+>;movb (%ebp), %cl;calll *;xorl %esi, %esi": 1,
                "jae  <MmProbeAndLockSelectedPages+>;movb (%ebp), %cl;calll *;xorl %esi, %esi;pushl %esi": 1,
                "pushl %esi;pushl %esi;calll - <KeDelayExecutionThread>;incl -(%ebp);calll *": 1,
                "jmp  <MmProbeAndLockSelectedPages+>;movl (%esi), %eax;andl $, %eax;orl %ecx, %eax;jne  <MmProbeAndLockSelectedPages+>": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl -(%ebp);movl %eax, -(%ebp);calll  <MmDisableModifiedWriteOfSection+>": 1,
                "movl -(%ebp), %ecx;calll  <MmTrimAllSystemPagableMemory+>;jmp  <MmProbeAndLockSelectedPages+>;andl $, %eax;orl %ecx, %eax": 1,
                "pushl (%ebx);calll  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;cmpl %eax, -(%ebp);movl %eax, (%ebx)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%edi);movl %esi, -(%ebp);calll - <IoSynchronousPageWrite>": 1,
                "movl %esi, -(%ebp);calll - <IoSynchronousPageWrite>;cmpl %esi, %eax;jl  <MmProbeAndLockSelectedPages+>;pushl %esi": 1,
                "jl  <MmProbeAndLockSelectedPages+>;pushl %esi;pushl %esi;pushl %esi;pushl $": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <KeWaitForSingleObject>;jmp  <MmProbeAndLockSelectedPages+>": 1,
                "jmp  <MmProbeAndLockSelectedPages+>;movl %eax, -(%ebp);testb $, -(%ebp);je  <MmProbeAndLockSelectedPages+>;leal -(%ebp), %eax": 1,
                "testl %eax, ;je  <MmProbeAndLockSelectedPages+>;pushl $;pushl %esi;pushl %esi": 1,
                "je  <MmProbeAndLockSelectedPages+>;pushl $;pushl %esi;pushl %esi;calll - <KeDelayExecutionThread>": 1,
                "movl -(%ebp), %eax;cmpl %esi, %eax;jge  <MmProbeAndLockSelectedPages+>;cmpl $, %eax;je  <MmProbeAndLockSelectedPages+>": 1,
                "je  <MmProbeAndLockSelectedPages+>;cmpl $, %eax;jne  <MmProbeAndLockSelectedPages+>;xorl %esi, %esi;incl %esi": 1,
                "addl %ecx, %esi;movw (%esi), %ax;cmpw $, %ax;movl (%esi), %ebx;movl %ebx, -(%ebp)": 1,
                "decl ;decw (%esi);jmp  <MmProbeAndLockSelectedPages+>;cmpw $, %ax;je  <MmProbeAndLockSelectedPages+>": 1,
                "decl %eax;movw %ax, (%esi);jmp  <MmProbeAndLockSelectedPages+>;movl %esi, %eax;subl %ecx, %eax": 1,
                "cmpl %ebx, %eax;jae  <MmProbeAndLockSelectedPages+>;movl -(%ebp), %eax;movl (%eax), %eax;imull $, %eax, %eax": 1,
                "jne  <MmProbeAndLockSelectedPages+>;cmpl %esi, (%eax);jb  <MmProbeAndLockSelectedPages+>;decl ;decw (%eax)": 1,
                "cmpl %esi, (%eax);jb  <MmProbeAndLockSelectedPages+>;decl ;decw (%eax);jmp  <MmProbeAndLockSelectedPages+>": 1,
                "movl %eax, %ecx;calll  <MmTrimAllSystemPagableMemory+>;addl $, -(%ebp);cmpl %ebx, -(%ebp);jb - <MmProbeAndLockSelectedPages+>": 1,
                "movl -(%ebp), %ebx;andl $, -(%ebp);movl %esi, -(%ebp);movl -(%ebp), %esi;jmp - <MmProbeAndLockSelectedPages+>": 1,
                "pushl %eax;pushl %ebx;pushl %edi;pushl $;pushl $": 1,
                "pushl %edi;pushl (%edi);calll  <MmCommitSessionMappedView+>;jmp  <MmProbeAndLockSelectedPages+>;movl (%edi), %eax": 1,
                "pushl (%edi);calll  <MmCommitSessionMappedView+>;jmp  <MmProbeAndLockSelectedPages+>;movl (%edi), %eax;movl (%eax), %eax": 1,
                "pushl %edi;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);jne  <MmProbeAndLockSelectedPages+>": 1,
                "pushl (%ebp);xorl %edi, %edi;orl $, %eax;incl %edi;pushl %esi": 1,
                "decl (%esi);movl (%esi), %eax;jne  <MmProbeAndLockSelectedPages+>;cmpl %ebx, (%esi);jne  <MmProbeAndLockSelectedPages+>": 1,
                "jne  <MmProbeAndLockSelectedPages+>;cmpl %ebx, (%esi);jne  <MmProbeAndLockSelectedPages+>;pushl %esi;pushl (%esi)": 1,
                "jmp  <MmProbeAndLockSelectedPages+>;movl (%esi), %eax;cmpl %ebx, %eax;je  <MmProbeAndLockSelectedPages+>;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl , %ecx;imull $, %eax, %eax;shrl $, %ecx;xorl %edx, %edx": 5,
                "movl , %ecx;imull $, %eax, %eax;shrl $, %ecx;xorl %edx, %edx;divl %ecx": 5,
                "cmpl %ecx, %eax;ja  <MmProbeAndLockSelectedPages+>;movl , %eax;movl , %esi;imull $, %eax, %eax": 1,
                "cmpl %ecx, %eax;jbe  <MmProbeAndLockSelectedPages+>;pushl %ebx;pushl %ebx;pushl $": 1,
                "cmpl %ebx, %edi;je  <MmProbeAndLockSelectedPages+>;leal (%edi), %ecx;calll  <ExAcquireFastMutexUnsafe>;movb $-, (%edi)": 1,
                "leal (%edi), %ecx;calll  <ExAcquireFastMutexUnsafe>;movb $-, (%edi);popl %edi;popl %esi": 1,
                "pushl %edi;pushl %edi;calll - <KeDelayExecutionThread>;calll  <MmProbeAndLockProcessPages+>;cmpl %edi, %eax": 1,
                "movl (%ebp), %eax;movb %cl, -(%ebp);je  <MmProbeAndLockSelectedPages+>;movl (%eax), %esi;jmp  <MmProbeAndLockSelectedPages+>": 1,
                "movl (%esi), %eax;cmpl %edi, %eax;jne  <MmProbeAndLockSelectedPages+>;cmpl %edi, (%esi);jne  <MmProbeAndLockSelectedPages+>": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;xorl %eax, %eax;pushl %esi": 2,
                "je  <MmCanFileBeTruncated+>;incl -(%ebp);testb $, -(%ebp);movl , %ebx;jne  <MmCanFileBeTruncated+>": 1,
                "calll  <ExFreePoolWithTag>;calll  <MmCreateSection+>;jmp  <MmCanFileBeTruncated+>;orb $, ;pushl %esi": 1,
                "movl $, %ecx;cmpl %ecx, %eax;jne  <MmCanFileBeTruncated+>;cmpl $, %esi;jne  <MmCanFileBeTruncated+>": 1,
                "movl %eax, ;movl (%esi), %eax;addl (%esi), %eax;shll $, %eax;cmpl $, %eax": 3,
                "movl $, (%esi);incl (%ebx);calll *;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "movl %esi, -(%ebp);jmp - <MmCanFileBeTruncated+>;orl $, ;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "jmp - <MmCanFileBeTruncated+>;orl $, ;movl (%esi), %eax;movl (%esi), %ecx;leal (%eax,%ecx,), %ecx": 1,
                "movl %ecx, -(%ebp);jae  <MmCanFileBeTruncated+>;movl -(%ebp), %eax;cmpl -(%ebp), %eax;je  <MmCanFileBeTruncated+>": 1,
                "incl %eax;movl %eax, -(%ebp);jmp  <MmCanFileBeTruncated+>;cmpl $, -(%ebp);jne  <MmCanFileBeTruncated+>": 1,
                "jmp  <MmCanFileBeTruncated+>;cmpl $, -(%ebp);jne  <MmCanFileBeTruncated+>;cmpl $, (%esi);jne  <MmCanFileBeTruncated+>": 1,
                "andl $, %edx;pushl $;movl %edx, -(%ebp);popl %edx;je  <MmCanFileBeTruncated+>": 3,
                "popl %edx;je  <MmCanFileBeTruncated+>;testl %edx, %edx;je  <MmCanFileBeTruncated+>;movl %eax, %edx": 1,
                "orl $, ;cmpl $, (%esi);jne  <MmCanFileBeTruncated+>;testb $, (%ebx);jne  <MmCanFileBeTruncated+>": 1,
                "jne  <MmCanFileBeTruncated+>;testb $, (%ebx);jne  <MmCanFileBeTruncated+>;movl , %eax;orl $, ": 1,
                "orb $, ;orl $, (%esi);jmp - <MmCanFileBeTruncated+>;movl (%esi), %edi;movl (%esi), %eax": 1,
                "jmp - <MmCanFileBeTruncated+>;movl (%esi), %edi;movl (%esi), %eax;movl %edi, %ecx;andl $, %ecx": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;pushl (%esi);pushl (%esi);calll  <MmTrimAllSystemPagableMemory+>;movl %edi, %ecx": 1,
                "cmpl -(%ebp), %esi;jmp - <MmCanFileBeTruncated+>;decl (%ebx);pushl %ebx;calll - <MmProbeAndLockSelectedPages+>": 1,
                "calll - <MmProbeAndLockSelectedPages+>;movb -(%ebp), %cl;calll *;pushl $;pushl -(%ebp)": 1,
                "cmpl %ecx, (%esi);leal (%esi), %edi;movl %ecx, (%edi);jne - <MmCanFileBeTruncated+>;cmpl %ecx, (%esi)": 1,
                "cmpl %ecx, (%esi);jne - <MmCanFileBeTruncated+>;movl (%esi), %eax;testb $, %al;jne - <MmCanFileBeTruncated+>": 2,
                "testb $, %ah;jne  <MmCanFileBeTruncated+>;pushl %esi;calll  <MmIsThisAnNtAsSystem+>;movl , %eax": 3,
                "cmpl %ecx, (%eax);jne - <MmCanFileBeTruncated+>;cmpl %ecx, (%ebx);jne  <MmCanFileBeTruncated+>;orb $, ": 1,
                "jne  <MmCanFileBeTruncated+>;testb %al, %dl;jne  <MmCanFileBeTruncated+>;cmpl %ecx, -(%ebp);jge  <MmCanFileBeTruncated+>": 1,
                "pushl $;pushl $;jmp  <MmCanFileBeTruncated+>;pushl %eax;pushl -(%ebp)": 1,
                "calll - <KeBugCheckEx>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "pushl %ecx;calll *;movl (%ebp), %ecx;movb %al, -(%ebp);pushl -(%ebp)": 1,
                "pushl %esi;calll - <KeSetEvent>;jmp - <MmCanFileBeTruncated+>;int;int": 1,
                "calll - <KeSetEvent>;jmp - <MmCanFileBeTruncated+>;int;int;int": 1,
                "subl $, %esp;movl , %ecx;pushl %ebx;movl (%ebp), %ebx;cmpl %ecx, %ebx": 1,
                "leal (%eax,%ecx), %edx;cmpl %edx, %ebx;jae  <MmCommitSessionMappedView+>;subl %ebx, %eax;addl %ecx, %eax": 1,
                "jmp  <MmCommitSessionMappedView+>;movl %fs:, %eax;movl (%eax), %eax;testb $, (%eax);jne  <MmCommitSessionMappedView+>": 1,
                "movl %esi, %edx;shrl $, %edx;andl %eax, %edi;andl %eax, %edx;subl %edx, %edi": 1,
                "addl $, %ecx;sarl $, %edi;movl %ecx, -(%ebp);movl (%ecx), %ecx;incl %edi": 1,
                "movl %edx, (%ebp);je  <MmCommitSessionMappedView+>;movl $, %esi;jmp  <MmCommitSessionMappedView+>;testb $, (%edx)": 1,
                "movl (%ebx), %eax;orl (%ebx), %eax;je  <MmCommitSessionMappedView+>;decl %edi;addl $, %ebx": 1,
                "movl %esi, %ebx;movl $, -(%ebp);je  <MmCommitSessionMappedView+>;xorl %edx, %edx;movl %edi, %ecx": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %edx;andl $, (%ebp);cmpl -(%ebp), %esi": 1,
                "movl %edx, (%ebx);addl $, %ebx;cmpl -(%ebp), %ebx;jb - <MmCommitSessionMappedView+>;cmpl $, -(%ebp)": 1,
                "movl (%eax), %ecx;calll *;movl (%ebp), %eax;testl %eax, %eax;je  <MmCommitSessionMappedView+>": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);xorl %eax, %eax;jmp  <MmCommitSessionMappedView+>;movl $, %esi": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %ecx;calll *;movl %esi, %eax;jmp  <MmCommitSessionMappedView+>": 1,
                "movl %fs:, %eax;movl (%eax), %eax;addl $, %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "movl %edi, %esi;imull $, %esi, %esi;addl , %esi;movb %bl, %cl;incw (%esi)": 1,
                "testb $, (%esi);je  <MmCommitSessionMappedView+>;movl %fs:, %eax;pushl (%eax);calll  <MmTrimAllSystemPagableMemory+>": 2,
                "jne  <MmCommitSessionMappedView+>;movb %bl, %cl;calll *;popl %edi;movl %esi, %eax": 1,
                "je  <MmCommitSessionMappedView+>;movl %fs:, %eax;pushl (%eax);calll  <MmTrimAllSystemPagableMemory+>;movl %eax, (%esi)": 1,
                "movl %eax, (%edx);movl %eax, (%ecx);movl (%edi), %eax;popl %edi;movl %esi, (%eax)": 1,
                "movl (%edi), %eax;popl %edi;movl %esi, (%eax);popl %esi;popl %ebp": 1,
                "xorl %ebx, %ebx;calll *;movl (%ebp), %esi;movb %al, %cl;movl (%esi), %eax": 1,
                "calll *;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "testl %ecx, %ecx;je  <MmCommitSessionMappedView+>;movl %ecx, %eax;shrl $, %eax;andl $, %eax": 1,
                "popl %eax;movl $, %edi;je  <MmCommitSessionMappedView+>;testl %eax, %eax;je  <MmCommitSessionMappedView+>": 1,
                "movl %edi, %ecx;movl (%ebp), %edi;shrl $, %eax;rep  movsl (%esi), %es:(%edi);andl $, %eax": 1,
                "je  <MmCreateSection+>;orb $, (%ebp);movl (%ebp), %ebx;movl %ebx, %ecx;calll  <MmIsAddressValid+>": 1,
                "movl %fs:, %eax;movb (%eax), %al;orl $-, -(%ebp);cmpl %esi, (%ebp);movl %ebx, -(%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %edi;pushl (%ebp);pushl %eax": 2,
                "cmpl %esi, %eax;jl  <MmCreateSection+>;movl -(%ebp), %eax;movl (%eax), %ecx;movl (%eax), %ebx": 1,
                "movl (%eax), %ecx;movl (%eax), %ebx;movl %ecx, -(%ebp);movl (%eax), %ecx;movl , %eax": 1,
                "movl (%ebx), %ecx;movl (%ecx), %ebx;cmpl %esi, %ebx;je  <MmCreateSection+>;movl (%ebx), %edx": 1,
                "cmpw %si, (%ebx);jne  <MmCreateSection+>;movl (%ebx), %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "calll  <ObfReferenceObject+>;movl (%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;movl $, -(%ebp)": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl ": 30,
                "calll  <ObReferenceObjectByHandle>;cmpl %esi, %eax;movl -(%ebp), %ecx;movl %ecx, -(%ebp);jl  <MmCreateSection+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);jl  <MmCreateSection+>;leal (%ecx), %eax;cmpl %esi, (%eax)": 1,
                "calll  <ObfDereferenceObject>;jmp - <MmCreateSection+>;movl -(%ebp), %edi;pushl $;xorl %eax, %eax": 1,
                "je  <MmCreateSection+>;pushl (%ebp);pushl -(%ebp);calll  <FsRtlAcquireFileExclusive+>;cmpl %esi, %eax": 2,
                "calll *;cmpl %esi, -(%ebp);movb %al, (%ebp);je  <MmCreateSection+>;leal -(%ebp), %eax": 1,
                "je  <MmCreateSection+>;movl (%ebx), %eax;movl (%ebx), %ecx;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movl %eax, %edi;pushl %esi;pushl -(%ebp);calll  <ExFreePoolWithTag>;movl -(%ebp), %ecx": 1,
                "calll - <MmCommitSessionMappedView+>;jmp  <MmCreateSection+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %ebx, (%eax)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll  <FsRtlGetFileSize>;movl %eax, %edi": 1,
                "jl  <MmCreateSection+>;movl -(%ebp), %eax;orl -(%ebp), %eax;movl (%ebp), %edi;jne  <MmCreateSection+>": 1,
                "ja  <MmCreateSection+>;movl -(%ebp), %edx;cmpl %eax, %edx;jb  <MmCreateSection+>;movl $, -(%ebp)": 1,
                "jmp  <MmCreateSection+>;cmpl %esi, -(%ebp);leal -(%ebp), %eax;je  <MmCreateSection+>;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);calll  <NtAllocateVirtualMemory+>;cmpl %esi, %eax;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);calll  <NtAllocateVirtualMemory+>;cmpl %esi, %eax;movl %eax, -(%ebp);jge  <MmCreateSection+>": 1,
                "calll - <MmCommitSessionMappedView+>;jmp  <MmCreateSection+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %esi, (%eax)": 1,
                "movl (%edx), %eax;movzwl (%eax), %eax;movl (%edx), %ecx;shll $, %eax;leal (%ebp), %edx": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);cmpl %esi, -(%ebp);je  <MmCreateSection+>": 1,
                "calll  <FsRtlReleaseFile>;cmpl %esi, -(%ebp);je  <MmCreateSection+>;calll *;decl (%ebx)": 1,
                "cmpl %esi, -(%ebp);movb %al, (%ebp);jne  <MmCreateSection+>;decl (%ebx);pushl (%ebp)": 1,
                "pushl (%ebp);pushl %esi;pushl %ebx;calll - <MmProbeAndLockSelectedPages+>;movl %edi, %eax": 1,
                "pushl %esi;pushl %ebx;calll - <MmProbeAndLockSelectedPages+>;movl %edi, %eax;jmp  <MmCreateSection+>": 1,
                "testb $, (%ebp);movl (%eax), %ecx;je  <MmCreateSection+>;orl $, %ecx;movl %ecx, (%eax)": 1,
                "testb $, (%ebp);je  <MmCreateSection+>;movl (%ebp), %esi;orl $, (%esi);movl , %eax": 1,
                "cltd;cmpl %edx, %ecx;jb  <MmCreateSection+>;ja  <MmCreateSection+>;movl (%esi), %ecx": 1,
                "pushl ;pushl (%ebp);calll  <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;leal -(%eax,%ecx), %eax;movl %esi, %ecx;movl %eax, (%esi);calll  <MmProbeAndLockProcessPages+>": 1,
                "orl %ecx, (%ebx);testb $-, (%ebx);je  <MmCreateSection+>;cmpl $, -(%ebp);jne  <MmCreateSection+>": 1,
                "cmpl (%ecx), %eax;jbe  <MmCreateSection+>;movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, (%eax);leal -(%ebp), %eax;jne  <MmCreateSection+>;movl (%ebp), %ebx;pushl $": 1,
                "movl (%ebp), %ebx;pushl $;popl %ecx;pushl -(%ebp);movl %ebx, %esi": 1,
                "int;calll *;movl $, ;movb %al, %cl;jmpl *": 1,
                "pushl %ebx;movl %esi, -(%ebp);calll  <RtlSetAllBits>;calll *;movl (%esi), %ecx": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movb (%ebp), %cl;calll *;leave;retl $": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (,%ebx,), %esi;pushl %edi;calll *": 1,
                "movl (%eax), %ebx;cmpl (%eax), %ebx;je  <MmCreateSection+>;cmpl %edi, (%eax);ja  <MmCreateSection+>": 1,
                "movl %edi, (%esi);calll *;leal (%esi), %edx;movl , %esi;movl $, (%edx)": 1,
                "movl , %esi;leal (%ecx,%ecx), %edi;leal (%edi,%esi), %edx;movl %edi, -(%ebp);shll $, %eax": 1,
                "movl %edi, -(%ebp);shll $, %eax;cmpl %eax, %edx;jae  <MmCreateSection+>;subl %edi, %eax": 1,
                "movl %eax, %edx;subl %ecx, %edx;cmpl %edi, %edx;movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movl (%esi), %eax;addl -(%ebp), %edi;cmpl %eax, %ebx;je  <MmCreateSection+>": 1,
                "testl %eax, %eax;je  <MmCreateSection+>;negl %edi;movl %edi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);xorl %eax, %eax": 1,
                "pushl $;shll $, %ebx;pushl $;movl %ebx, -(%ebp);pushl (%esi)": 1,
                "shll $, %ebx;pushl $;movl %ebx, -(%ebp);pushl (%esi);calll  <IoSetInformation>": 1,
                "pushl (%esi);calll  <IoSetInformation>;movl , %ecx;movl -(%ebp), %eax;incl %eax": 1,
                "movl , %ecx;movl -(%ebp), %eax;incl %eax;cmpl , %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;incl %eax;cmpl , %eax;movl %eax, -(%ebp);jb - <MmCreateSection+>": 1,
                "leal (%edi,%ebx), %eax;movl %eax, (%esi);calll  <RtlClearBits>;movb -(%ebp), %cl;calll *": 1,
                "movl %esp, %ebp;pushl %esi;calll *;movl (%ebp), %ecx;movl (%ecx), %edx": 1,
                "cmpl %esi, %edx;je  <MmDisableModifiedWriteOfSection+>;cmpl %esi, (%edx);jne  <MmDisableModifiedWriteOfSection+>;cmpl %esi, (%edx)": 1,
                "calll - <KeSetEvent>;movl , %eax;movl (,%eax,), %eax;movl (%eax), %eax;movl , %ecx": 1,
                "movl (%eax), %eax;movl , %ecx;movl %ecx, (%eax);movl %esi, (%eax);movl %eax, (%ecx)": 2,
                "movl %esi, (%eax);movl , %eax;movl (,%eax,), %eax;movl (%eax), %eax;movl , %ecx": 1,
                "movl , %eax;movl (,%eax,), %eax;movl (%eax), %ecx;movl (%eax), %eax;addl $, ": 1,
                "pushl %edi;xorl %ecx, %ecx;xorl %esi, %esi;xorl %edi, %edi;testl %eax, %eax": 1,
                "movl %ecx, %edx;shrl $, %edx;shrl $, %ecx;addl %ecx, %edx;cmpl %esi, %edx": 1,
                "xorl %edx, %edx;incl %edx;movl %esi, %ecx;calll  <MmTrimAllSystemPagableMemory+>;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %eax, (%ebp);calll - <KeWaitForSingleObject>;cmpl $, %eax;jne  <MmDisableModifiedWriteOfSection+>;calll *": 1,
                "calll - <KeWaitForSingleObject>;cmpl $, %eax;jne  <MmDisableModifiedWriteOfSection+>;calll *;movl , %edx": 1,
                "pushl %edi;pushl (%ebp);calll - <KeWaitForSingleObject>;xorl %eax, %eax;incl %eax": 1,
                "movl %esi, (%edx);calll *%ebx;xorl %eax, %eax;jmp - <MmDisableModifiedWriteOfSection+>;int": 1,
                "movl %eax, ;calll *;movl , %edx;movl $, %esi;movl %edx, ": 1,
                "testb $, (%edi);jne  <MmDisableModifiedWriteOfSection+>;cmpl $, %ecx;je  <MmDisableModifiedWriteOfSection+>;cmpl $, %ecx": 1,
                "decl %eax;movw %ax, (%esi);jmp  <MmDisableModifiedWriteOfSection+>;movl %esi, %eax;subl , %eax": 1,
                "jne - <MmDisableModifiedWriteOfSection+>;movl (%ebx), %eax;testl %eax, %eax;je  <MmDisableModifiedWriteOfSection+>;cmpl $, (%eax)": 1,
                "movl %ecx, (%esi);movl %esi, (%ecx);movl %esi, (%eax);movl $, (%esi);incl ": 1,
                "movb %al, (%ebp);je  <MmDisableModifiedWriteOfSection+>;pushl %esi;pushl %esi;pushl $": 1,
                "pushl %esi;pushl %esi;pushl $;calll - <KePulseEvent>;cmpl $, ": 1,
                "pushl $;pushl $;addl $, %eax;pushl %eax;calll - <KeSetEvent>": 5,
                "movl %eax, (%ebx);movl %ecx, (%ebx);movl %ebx, (%ecx);movl %ebx, (%eax);jmp - <MmDisableModifiedWriteOfSection+>": 1,
                "je  <MmDisableModifiedWriteOfSection+>;calll *;cmpl %esi, ;je  <MmDisableModifiedWriteOfSection+>;decl ": 1,
                "calll *;cmpl %esi, ;je  <MmDisableModifiedWriteOfSection+>;decl ;movb %al, %cl": 1,
                "movl (%ecx), %ebx;cmpl (%ebp), %ebx;je  <MmDisableModifiedWriteOfSection+>;addl $, %ecx;incl %edx": 1,
                "xorl %eax, %eax;incl %eax;jmp - <MmDisableModifiedWriteOfSection+>;int;int": 1,
                "incl %eax;jmp - <MmDisableModifiedWriteOfSection+>;int;int;int": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;movl (%esi), %edx;movb $, %cl;calll  <_aullshr>": 1,
                "movb $, %cl;calll  <_aullshr>;movl (%eax), %ebx;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "andl $, (%esi);movl (%esi), %eax;andb $-, (%esi);andb $-, (%esi);movl %eax, (%esi)": 1,
                "subl $, %edi;cmpl $, ;je  <MmDisableModifiedWriteOfSection+>;leal (%edi), %eax;movl %eax, -(%ebp)": 1,
                "subl $, (%ebp);movl %ecx, (%ebp);cmpl -(%ebp), %edi;jae - <MmDisableModifiedWriteOfSection+>;addl $, (%ebp)": 1,
                "movl %ecx, (%esi);movl %ecx, (%esi);movl $, (%esi);movw $, (%esi);movl , %eax": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);jne  <MmDisableModifiedWriteOfSection+>;incl ;incw (%edi)": 1,
                "movl -(%ebp), %ecx;movl , %eax;leal (%ecx,%eax,), %eax;movl %eax, %edx;movl %eax, (%ebp)": 1,
                "movl (%eax), %edx;movl (%eax), %eax;leal (%eax,%edx,), %eax;cmpl %eax, (%ebp);jbe  <MmDisableModifiedWriteOfSection+>": 1,
                "cmpl (%ebp), %edx;jae  <MmDisableModifiedWriteOfSection+>;movl (%ebp), %eax;subl %ecx, %eax;addl %edx, %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;movl (%eax), %ecx;movl %edi, %eax;andl $, %eax": 1,
                "testb $, (%edi);je  <MmDisableModifiedWriteOfSection+>;cmpw $, (%edi);jne  <MmDisableModifiedWriteOfSection+>;addl $, -(%ebp)": 1,
                "andl $, %eax;andl $, -(%eax);andl $, -(%eax);movl (%esi), %eax;xorl %edx, %edx": 1,
                "incl ;addl %eax, ;incw (%ebx);incl (%ebx);xorl %ecx, %ecx": 1,
                "movl $, %ecx;cmpl %ecx, %ebx;pushl %esi;pushl %edi;jne  <MmDisableModifiedWriteOfSection+>": 1,
                "shrl %esi;movl %esi, -(%ebp);movl $, -(%ebp);testl %esi, %esi;jne - <MmDisableModifiedWriteOfSection+>": 1,
                "movl %ebx, ;movl %ecx, (%ebx);decl ;xorb %cl, %cl;calll *": 1,
                "cmpl $, %eax;jae  <MmDisableModifiedWriteOfSection+>;movl $, -(%ebp);movl -(%ebp), %eax;xorl %ecx, %ecx": 1,
                "xorl %ecx, %ecx;shldl $, %eax, %ecx;movl %ecx, -(%ebp);shll $, %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);shll $, %eax;movl %eax, -(%ebp);xorl %ecx, %ecx;cmpl %ecx, %esi": 1,
                "je  <MmDisableModifiedWriteOfSection+>;movl (%ebp), %esi;movl (%esi), %eax;andl $, %eax;xorl %edx, %edx": 1,
                "incl ;incw (%esi);movl (%esi), %eax;addl $, -(%ebp);andl $-, %eax": 1,
                "incw (%esi);movl (%esi), %eax;addl $, -(%ebp);andl $-, %eax;orl $, %eax": 1,
                "andl $-, %eax;orl $, %eax;xorl %ecx, %ecx;movl %eax, (%esi);movl (%edi), %eax": 1,
                "je  <MmDisableModifiedWriteOfSection+>;imull $, %esi, %esi;addl , %esi;cmpl -(%ebp), %ecx;jne - <MmDisableModifiedWriteOfSection+>": 1,
                "addl %eax, (%edi);cmpl %ecx, -(%ebp);jne  <MmDisableModifiedWriteOfSection+>;movl (%ebx), %eax;cmpl %eax, (%eax)": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);leal (%eax), %ecx;andl $, %ecx;shll $, %ecx": 1,
                "movl %eax, %edx;andl %ecx, %edx;cmpl %ecx, %edx;jne  <MmDisableModifiedWriteOfSection+>;andl $, (%ebx)": 1,
                "pushl %ebx;movb %al, (%ebp);calll - <MmDisableModifiedWriteOfSection+>;movb (%ebp), %cl;calll *": 1,
                "movb $, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);xorl %ebx, %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;calll - <KeWaitForSingleObject>": 5,
                "pushl %ebx;pushl $;pushl $;calll - <KeWaitForSingleObject>;calll *": 1,
                "movl (%esi), %eax;testb $, (%eax);je  <MmDisableModifiedWriteOfSection+>;movl $, %eax;jmp  <MmDisableModifiedWriteOfSection+>": 1,
                "pushl (%esi);calll - <FsRtlRegisterFileSystemFilterCallbacks+>;testl %eax, %eax;jl  <MmDisableModifiedWriteOfSection+>;leal (%esi), %eax": 1,
                "pushl %ebx;pushl %esi;pushl $;leal (%esi), %eax;pushl %eax": 1,
                "movl $, %eax;movl $, %ecx;movl %eax, %edx;andl %ecx, %edx;cmpl %ecx, %edx": 1,
                "calll - <MmDisableModifiedWriteOfSection+>;movb -(%ebp), %cl;jmp - <MmDisableModifiedWriteOfSection+>;int;int": 1,
                "movb -(%ebp), %cl;jmp - <MmDisableModifiedWriteOfSection+>;int;int;int": 1,
                "xorl %edi, %edi;pushl %edi;pushl %edi;pushl %edi;pushl $": 5,
                "cmpl $, -(%ebp);movl , %edx;movl , %eax;jne  <MmDisableModifiedWriteOfSection+>;movl %edx, %esi": 1,
                "jb  <MmDisableModifiedWriteOfSection+>;cmpl %edi, %eax;jne  <MmDisableModifiedWriteOfSection+>;orl $-, %esi;jmp  <MmDisableModifiedWriteOfSection+>": 1,
                "addl %ecx, %eax;movl (%eax), %edi;andl $, %edi;pushl $;movl %edi, -(%ebp)": 1,
                "pushl %eax;calll - <MmDisableModifiedWriteOfSection+>;jmp  <MmDisableModifiedWriteOfSection+>;pushl %esi;pushl %eax": 1,
                "jmp  <MmDisableModifiedWriteOfSection+>;pushl %esi;pushl %eax;calll - <MmDisableModifiedWriteOfSection+>;addl %eax, -(%ebp)": 1,
                "testl %ecx, %ecx;jne - <MmDisableModifiedWriteOfSection+>;cmpb $, ;jne  <MmDisableModifiedWriteOfSection+>;movb $, ": 1,
                "jne  <MmDisableModifiedWriteOfSection+>;movb $, ;movl %edi, ;movb -(%ebp), %cl;calll *%ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;testb $, (%eax);movl (%ebp), %eax": 1,
                "adcl %esi, %edx;pushl %edx;pushl %eax;calll  <_allmul>;jmp  <MmDisableModifiedWriteOfSection+>": 1,
                "movl (%esi), %eax;addl (%esi), %eax;shll $, %eax;xorl %edx, %edx;jmp  <MmDisableModifiedWriteOfSection+>": 1,
                "pushl %edi;pushl %edx;calll  <_allmul>;popl %edi;movl (%esi), %ecx": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);jne  <MmFlushImageSection+>;calll *;movb %al, %cl": 1,
                "je  <MmFlushImageSection+>;cmpl %ebx, (%eax);jne  <MmFlushImageSection+>;testb $, (%eax);je  <MmFlushImageSection+>": 1,
                "cmpl %ebx, (%eax);jne  <MmFlushImageSection+>;testb $, (%eax);je  <MmFlushImageSection+>;calll *": 1,
                "leal (%ebp), %eax;pushl %eax;pushl %ebx;pushl (%ebp);xorl %edi, %edi": 1,
                "je  <MmFlushImageSection+>;pushl %esi;orl %edi, (%ecx);movl (%ebp), %eax;movl %edi, (%eax)": 1,
                "calll *;pushl %edi;pushl (%ebp);calll - <MmProbeAndLockSelectedPages+>;cmpl %ebx, %esi": 1,
                "je  <MmFlushImageSection+>;movl %ecx, %eax;movl %edx, %ebx;shrdl $, %ebx, %eax;andl $, %eax": 1,
                "movl %edx, %ebx;shrdl $, %ebx, %eax;andl $, %eax;pushl %edx;imull $, %eax, %eax": 1,
                "andl $, %eax;pushl %edx;imull $, %eax, %eax;addl , %eax;andl $-, %ecx": 1,
                "pushl %esi;pushl (%ebp);shrl $, %ebx;pushl $;pushl %edi": 1,
                "pushl %edi;calll - <ZwYieldExecution+>;addl $, %esi;addl $, %edi;testw $, %si": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%ebp);pushl %edi": 1,
                "incl %edi;andl %edi, %eax;orl %ecx, %eax;jne  <MmFlushImageSection+>;movl (%ebp), %ecx": 1,
                "jne  <MmFlushImageSection+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "notb %cl;leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl %eax, -(%ebp);andl $, %ecx;movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl (%eax), %eax;movl %ecx, -(%ebp);movl (%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);calll *": 1,
                "cmpl %ebx, (%eax);movb %cl, (%ebp);jne  <MmFlushImageSection+>;calll *;xorl %eax, %eax": 1,
                "orb $, (%eax);calll *%esi;movl %fs:, %eax;movb $, (%eax);movl %fs:, %eax": 1,
                "cmpl %esi, (%ebp);je  <MmFlushImageSection+>;movl (%esi), %eax;movl (%esi), %ecx;leal (%ecx,%eax,), %eax": 1,
                "je  <MmFlushImageSection+>;movl (%esi), %eax;movl (%esi), %ecx;leal (%ecx,%eax,), %eax;jmp  <MmFlushImageSection+>": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;leal (%ecx,%eax,), %eax;jmp  <MmFlushImageSection+>;movl (%ebp), %eax": 1,
                "cmpl $, %eax;jbe  <MmFlushImageSection+>;addl $, %eax;andl $, %eax;jmp  <MmFlushImageSection+>": 4,
                "jmp  <MmFlushImageSection+>;addl $, %eax;andl $-, %eax;subl %eax, ;movl %ebx, (%esi)": 1,
                "pushl (%ebp);calll - <MmFlushImageSection+>;testl %eax, %eax;jne  <MmFlushImageSection+>;addl $, (%ebp)": 1,
                "testl %eax, %eax;jne  <MmFlushImageSection+>;addl $, (%ebp);cmpl %ebx, -(%ebp);je - <MmFlushImageSection+>": 1,
                "addl $, (%ebp);cmpl %ebx, -(%ebp);je - <MmFlushImageSection+>;jmp  <MmFlushImageSection+>;movl (%ebp), %eax": 1,
                "orl %ebx, %ecx;jne  <MmFlushImageSection+>;movl %edx, %ecx;andl $, %ecx;movl %ecx, -(%ebp)": 1,
                "je  <MmFlushImageSection+>;movl $, -(%ebp);jmp  <MmFlushImageSection+>;cmpl %ebx, -(%ebp);jne  <MmFlushImageSection+>": 1,
                "movl -(%ebp), %edx;movl %eax, -(%ebp);movl (%edi), %eax;shll $, %edx;cmpl %edx, %eax": 1,
                "movl (%ebp), %esi;movl %ebx, (%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 24,
                "movl %eax, -(%ebp);calll *;movl (%ebp), %ecx;testw $, %cx;movb %al, (%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl , %ecx;imull $, %eax, %eax;addl %ecx, %eax": 1,
                "je  <MmFlushImageSection+>;decl %ecx;movw %cx, (%eax);jmp  <MmFlushImageSection+>;subl , %eax": 2,
                "calll  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);cmpl -(%ebp), %eax": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);jmp - <MmFlushImageSection+>;movl -(%ebp), %eax;subl (%ebp), %eax": 1,
                "andl $, %eax;subl (%edi), %eax;addl %eax, (%esi);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "leal (%edx), %eax;movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, ": 1,
                "movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, ;movl , %eax": 2,
                "movl %eax, ;movl , %eax;incl %eax;cmpl , %eax;movl %eax, ": 5,
                "je  <MmFlushImageSection+>;cmpl (%ebp), %esi;je  <MmFlushImageSection+>;movl (%esi), %esi;movl (%esi), %eax": 1,
                "movl %eax, (%ebp);jmp - <MmFlushImageSection+>;movl -(%ebp), %ecx;decw (%ecx);movl (%ecx), %eax": 1,
                "cmpl $, -(%ebp);jne  <MmFlushImageSection+>;movl (%ebp), %eax;movl $, (%eax);movl (%ebp), %eax": 1,
                "pushl %ebx;movl (%edi), %ebx;testl %ebx, %ebx;je  <MmFlushImageSection+>;testb $, (%ebx)": 1,
                "andl %esi, (%ebp);jmp  <MmFlushImageSection+>;movl (%esi), %eax;movl (%esi), %edx;movb $, %cl": 1,
                "cmpl $, (%eax);je  <MmFlushImageSection+>;movl %eax, %esi;movl (%eax), %eax;cmpl (%ebp), %eax": 1,
                "movl (%esi), %esi;decl %esi;movl (%ebp), %eax;movl (%eax), %eax;incl (%ebx)": 1,
                "je  <MmFlushImageSection+>;movl (%edi), %eax;movl (%edi), %ecx;leal (%ecx,%eax,), %eax;jmp  <MmFlushImageSection+>": 1,
                "movl (%edi), %ecx;shrl $, %esi;addl (%ebp), %esi;movl %edi, %eax;jmp  <MmFlushImageSection+>": 1,
                "movb (%ebp), %cl;calll *;movb $, %al;popl %ebx;popl %edi": 1,
                "movl (%esi), %edx;movl (%esi), %eax;movl %edx, %ecx;andl $, %ecx;pushl $": 3,
                "jne  <MmFlushImageSection+>;movl %edx, %ecx;andl $, %ecx;pushl %esi;movl %ecx, -(%ebp)": 1,
                "pushl %esi;movl %ecx, -(%ebp);popl %ecx;je  <MmFlushImageSection+>;testl %ecx, %ecx": 1,
                "popl %ecx;je  <MmFlushImageSection+>;testl %ecx, %ecx;jne  <MmFlushImageSection+>;cmpl %ecx, -(%ebp)": 1,
                "movb %al, (%ebp);movl (%ebp), %ecx;calll  <MmIsAddressValid+>;jmp  <MmFlushImageSection+>;movl %edx, %esi": 1,
                "addl , %esi;shrl $, %eax;movl (%esi), %ecx;movl (%esi), %eax;movl %ecx, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <MmFlushImageSection+>;movb (%ebp), %cl;calll *;andl $, -(%ebp)": 1,
                "movl %ecx, ;movb (%ebp), %cl;calll *;andl $, -(%ebp);cmpl %edi, (%ebp)": 1,
                "jmp - <MmFlushImageSection+>;movl (%eax), %eax;pushl $;shrl $, %eax;andl $, %eax": 1,
                "pushl %ecx;pushl $;pushl $;jmp  <MmFlushImageSection+>;pushl %edx": 1,
                "pushl %edx;pushl (%esi);pushl (%ebp);pushl $;pushl $": 1,
                "jne  <MmFlushImageSection+>;testl $, %ecx;jne  <MmFlushImageSection+>;cmpl $, (%eax);je  <MmFlushImageSection+>": 1,
                "jne  <MmFlushImageSection+>;cmpl $, (%eax);je  <MmFlushImageSection+>;movl (%ebp), %edi;testl %edi, %edi": 1,
                "je  <MmFlushImageSection+>;movl (%ebp), %edi;testl %edi, %edi;leal (%eax), %ebx;jne  <MmFlushImageSection+>": 1,
                "testl %esi, %esi;je  <MmFlushImageSection+>;movl %esi, %edi;jmp  <MmFlushImageSection+>;movl %eax, %edi": 1,
                "je  <MmFlushImageSection+>;movl (%ebx), %eax;movl (%ebp), %ecx;leal (%eax,%ecx,), %eax;pushl %edi": 1,
                "movl %eax, (%ebp);calll  <MmIsThisAnNtAsSystem+>;testl %eax, %eax;jne  <MmFlushImageSection+>;movl (%ebx), %eax": 1,
                "shrl $, %esi;addl (%ebp), %esi;movl %ebx, %edi;jmp  <MmFlushImageSection+>;subl %eax, %esi": 1,
                "popl %esi;popl %ebx;leave;retl $;movl (%ebx), %eax": 1,
                "incl (%esi);movl %eax, -(%ebp);calll *;movl %fs:, %eax;testb $, (%ebp)": 1,
                "movb %cl, (%ebp);movb $, (%eax);jne  <MmFlushImageSection+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %ebx;pushl -(%ebp);pushl (%ebp);calll - <MmFlushImageSection+>;pushl (%esi)": 1,
                "subl $, %esp;pushl %edi;calll *;movl (%ebp), %edi;cmpl (%ebp), %edi": 1,
                "movl (%ebp), %edi;cmpl (%ebp), %edi;movb %al, -(%ebp);ja  <MmFlushImageSection+>;pushl %ebx": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;orl $, (%esi);movl %ebx, %ecx;calll  <MmTrimAllSystemPagableMemory+>;movl , %eax": 1,
                "orl $, (%esi);movl %ebx, %ecx;calll  <MmTrimAllSystemPagableMemory+>;movl , %eax;movl %eax, (%edi)": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);xorl %esi, %esi": 1,
                "incl %esi;movb %dl, %cl;calll *;movl %esi, %eax;popl %esi": 1,
                "movl %fs:, %eax;movl %eax, ;calll *;movb %al, -(%ebp);movl %edi, %eax": 1,
                "movl %esi, %ecx;andl %ebx, %ecx;pushl $;movl %ecx, -(%ebp);popl %ecx": 1,
                "orl (%esi), %eax;jne  <MmFlushImageSection+>;movl $, (%esi);movl %ecx, (%esi);movl , %ebx": 1,
                "jne  <MmFlushImageSection+>;movl $, (%esi);movl %ecx, (%esi);movl , %ebx;movl (%edi), %edx": 1,
                "movl %ecx, (%esi);movl , %ebx;movl (%edi), %edx;movl , %eax;movl (%edi), %ecx": 1,
                "notl %eax;notl %ebx;andl %edx, %ebx;movl (%esi), %edx;andl %ecx, %eax": 1,
                "pushl %ebx;pushl %ebx;pushl -(%ebp);calll - <ZwYieldExecution+>;movl (%esi), %ecx": 1,
                "movl , %eax;movl -(%ebp), %ecx;subl %ecx, (%eax);movl , %eax;andl $, (%eax)": 1,
                "je  <MmFlushImageSection+>;cmpl (%eax), %esi;jb  <MmFlushImageSection+>;cmpl (%eax), %esi;jb  <MmFlushImageSection+>": 1,
                "subl $, %esp;pushl %esi;pushl %edi;xorl %edi, %edi;movl %edi, -(%ebp)": 3,
                "calll  <ExAcquireResourceExclusiveLite>;movl , %eax;movl %esi, (%eax);jmp  <MmFlushImageSection+>;pushl $": 1,
                "movl (%edi), %edx;movl (%edi), %ecx;movl %edx, %eax;andl $, %eax;xorl %esi, %esi": 1,
                "movl %eax, %ebx;movl , %eax;movl (%eax), %ecx;movl (%ecx,%ebx,), %ecx;movl (%eax), %edx": 1,
                "movl , %eax;movl (%eax), %ecx;movl (%ecx), %ecx;cmpl %ecx, %ebx;je  <MmFlushImageSection+>": 1,
                "testb $, %cl;movb %al, %bl;je  <MmFlushImageSection+>;testb $, %cl;jne  <MmFlushImageSection+>": 1,
                "shrdl $, %eax, %ecx;shrl $, %eax;andl $, %ecx;movl %ecx, %eax;imull $, %eax, %eax": 4,
                "leal -(%ebp), %ecx;movl %ecx, -(%ebp,%eax,);movl -(%ebp), %ecx;movl %edi, %eax;shll $, %eax": 1,
                "movl %edx, %eax;andl %esi, %eax;xorl %esi, %esi;orl %esi, %eax;jne  <MmFlushImageSection+>": 1,
                "andl %eax, %ebx;movl %ebx, %esi;imull $, %esi, %esi;addl , %esi;shrl $, %ecx": 1,
                "movl %ebx, %esi;imull $, %esi, %esi;addl , %esi;shrl $, %ecx;movl (%esi), %ecx": 1,
                "movl %eax, (%edi);movl (%ebp), %eax;movl %eax, (%edi);incl -(%ebp);decl (%ebp)": 1,
                "pushl $;pushl $;jmp  <MmFlushImageSection+>;movl (%eax), %eax;pushl $": 1,
                "je  <MmFlushImageSection+>;testl %ecx, %ecx;jne  <MmFlushImageSection+>;movl %eax, %ecx;movl %ebx, %edx": 1,
                "movl (%esi), %edx;andl $, %ecx;orl $, %ecx;movl %ecx, (%esi);andl $, %eax": 1,
                "orl (,%edx,), %ecx;movl -(%ebp), %edx;andl $, %edx;andl $, %ebx;orl %edx, %eax": 1,
                "je  <MmFlushImageSection+>;cmpl $, %edi;jb  <MmFlushImageSection+>;cmpl $, %edi;jae  <MmFlushImageSection+>": 2,
                "cmpl $, %edi;jb  <MmFlushImageSection+>;cmpl $, %edi;jae  <MmFlushImageSection+>;notl %edx": 1,
                "movl (%edi), %eax;movl %ecx, -(%ebp);movl %eax, %ecx;andl $, %ecx;pushl $": 1,
                "jne  <MmFlushImageSection+>;cmpl $, (%eax);je  <MmFlushImageSection+>;incl ;incw (%eax)": 1,
                "movl (%esi), %ecx;movl %edx, -(%ebp);jne  <MmFlushImageSection+>;cmpl , %ecx;je  <MmFlushImageSection+>": 1,
                "popl %edx;je  <MmFlushImageSection+>;testl %edx, %edx;jne  <MmFlushImageSection+>;shrdl $, %ecx, %ebx": 1,
                "movl %edx, (%ecx);movl %esi, (%ecx);movw (%eax), %cx;cmpw $, %cx;jne  <MmFlushImageSection+>": 1,
                "andl $, %eax;movl (%edi), %ecx;orl $, %eax;movl %eax, (%edi);movl %ecx, (%edi)": 1,
                "pushl %esi;movl , %esi;testl %esi, %esi;je  <MmFlushImageSection+>;movl %esi, %eax": 1,
                "movl (%esi), %edi;movl (%esi), %ebx;movl %edi, %eax;andl $, %eax;xorl %ecx, %ecx": 1,
                "movl %edx, (%esi);movl %edx, ;jmp  <MmFlushImageSection+>;movl (%ebp), %esi;movl (%esi), %edx": 1,
                "movl %edx, ;jmp  <MmFlushImageSection+>;movl (%ebp), %esi;movl (%esi), %edx;movl (%esi), %esi": 1,
                "movl %edx, (%esi);movl %esi, (%edx);movb %al, %cl;calll *;movl %edi, %ecx": 1,
                "andl $, -(%eax);andl $, -(%eax);andl %esi, %ebx;movl %ebx, %eax;imull $, %eax, %eax": 1,
                "movl (%eax), %eax;shrdl $, %eax, %ecx;andl %esi, %ecx;movl %ecx, %ebx;imull $, %ebx, %ebx": 1,
                "movl $, %esi;andl %esi, %ebx;movl %eax, -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;movl (%eax), %ecx": 1,
                "andl %esi, %ebx;movl %eax, -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "pushl -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;movl (%edi), %edi;testl %edi, %edi;je  <MmFlushImageSection+>": 1,
                "pushl %esi;pushl (%ebp);movl %edi, %eax;shll $, %eax;pushl %eax": 1,
                "andl $, %ecx;orl %edx, %ecx;je  <MmFlushImageSection+>;andl %edx, -(%ebp);jmp  <MmFlushImageSection+>": 1,
                "pushl $;pushl %esi;pushl (%ebp);pushl (%ebp);pushl %ecx": 1,
                "testl %eax, %eax;je  <MmFlushImageSection+>;addl %eax, ;movl $, (%ebp);movl -(%ebp), %eax": 1,
                "xaddl %eax, (%ecx);cmpl $, (%ebp);jne  <MmFlushImageSection+>;movb (%ebp), %cl;calll *": 1,
                "sbbl %esi, %esi;negl %esi;shrl $, %eax;addl %eax, %esi;movl $, -(%ebp)": 1,
                "pushl %ebx;leal (%esi), %eax;pushl $;pushl %eax;movl %eax, -(%ebp)": 1,
                "xaddl %eax, (%ecx);xorl %eax, %eax;jmp  <MmFlushImageSection+>;leal (%ebx,%esi,), %eax;shll $, %eax": 1,
                "je  <MmFlushImageSection+>;movl , %eax;leal -(%eax), %ecx;andl $, %eax;shrl $, %ecx": 1,
                "movl , %ecx;subl , %ecx;pushl $;popl %edx;cmpl %edx, %ecx": 1,
                "xaddl %eax, (%ecx);movl %edx, -(%ebp);xorl %edx, %edx;xorl %ecx, %ecx;addl $, %edi": 1,
                "subl $, %ebx;cmpb $, (%ebp);pushl %edi;movl %ebx, -(%ebp);jne  <MmFlushImageSection+>": 1,
                "movl (%ebx), %edx;movl (%ebx), %eax;shrdl $, %eax, %edx;andl $, %edx;imull $, %edx, %edx": 1,
                "imull $, %edx, %edx;addl , %edx;movl $, %ecx;shrl $, %eax;calll  <InterlockedPushEntrySList>": 1,
                "calll  <InterlockedPushEntrySList>;jmp  <MmFlushImageSection+>;movl , %eax;movl %eax, %edi;andl $, %edi": 1,
                "pushl $;movl %edx, -(%ebp);popl %edx;je  <MmFlushImageSection+>;testl %edx, %edx": 1,
                "movl %edx, (%eax);jmp  <MmFlushImageSection+>;calll  <MmTrimAllSystemPagableMemory+>;orl $, (%esi);movl %ebx, %ecx": 1,
                "movl %ebx, -(%ebp);jb - <MmFlushImageSection+>;movl -(%ebp), %eax;addl %eax, ;movl $, -(%ebp)": 1,
                "cmpl %edx, %ebx;jae  <MmGrowKernelStack+>;incl ;movl $, %eax;jmp  <MmGrowKernelStack+>": 1,
                "calll *;movb %al, %cl;movl , %eax;subl , %eax;movb %cl, (%ebp)": 3,
                "addl %edi, ;calll *;movl -(%ebp), %ecx;shll $, %ebx;movl %ebx, (%ecx)": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp)": 17,
                "leal -(%ebp), %eax;pushl %eax;pushl $;movl %ebx, -(%ebp);calll ": 2,
                "addl $-, %edi;movl %esi, -(%ebp);shrl $, %esi;movl $, %edx;shrl $, %edi": 1,
                "shll $, %ecx;movl %ecx, %edx;movl %esi, %ecx;subl %edx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %edi, (%esi);calll  <MmTrimAllSystemPagableMemory+>;subl $, -(%ebp);subl $, %esi": 1,
                "pushl %ebx;pushl %edi;movl (%ebp), %edi;pushl $;leal (%edi), %ebx": 1,
                "pushl %edi;movl (%ebp), %edi;pushl $;leal (%edi), %ebx;popl %eax": 1,
                "movl (%eax), %edx;movl , %esi;movl %ecx, -(%ebp);movl , %ecx;notl %ecx": 1,
                "andl $, %ecx;orl %ebx, %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;andl %edx, %esi": 1,
                "movl , %ecx;movl , %edx;movl %eax, %esi;movl , %eax;shrl $, %eax": 1,
                "movl , %edx;movl %eax, %esi;movl , %eax;shrl $, %eax;andl $, %eax": 1,
                "movl (%esi), %eax;imull $, %edi, %edi;movl (%esi), %edx;movl , %ecx;movl %eax, -(%ebp)": 1,
                "notl %ecx;andl %edx, %ecx;movl %ecx, (%esi);andl $, %eax;orl %ebx, %eax": 1,
                "andl $, %esi;andl $, -(%esi);andl $, -(%esi);addl $-, (%edi);movl (%ebp), %esi": 1,
                "movb -(%ebp), %cl;movl , %edi;incl (%eax);calll *%edi;calll *": 1,
                "jbe  <MmGrowKernelStack+>;movl (%edx), %ebx;movl (%edx), %ecx;movl %ebx, (%ecx);movl %ecx, (%ebx)": 1,
                "movl $, (%edx);movb %al, %cl;calll *%edi;andl $, (%esi);andl $, (%esi)": 1,
                "movl , %esi;movl $, (%edx);movl %esi, (%edx);movl %edx, (%esi);movl %edx, ": 1,
                "pushl %edi;movl (%ebp), %edi;shrl $, %edi;andl $, %edi;subl $, %edi": 1,
                "andl $, %edi;subl $, %edi;calll *;movl (%edi), %ecx;movb %al, -(%ebp)": 1,
                "shrl $, %eax;andl %ebx, %ecx;movl %ecx, %eax;imull $, %eax, %eax;addl , %eax": 2,
                "andl $, %edx;cmpl $, %edx;je  <MmGrowKernelStack+>;cmpl $, %edx;je  <MmGrowKernelStack+>": 1,
                "cmpl $, %edx;je  <MmGrowKernelStack+>;pushl $;pushl %edx;jmp  <MmGrowKernelStack+>": 1,
                "movl (%esi), %ecx;movl %eax, %edx;andl $, %edx;pushl $;movl %edx, -(%ebp)": 1,
                "movl %ecx, (%esi);addl , %edi;cmpl $, ;je  <MmGrowKernelStack+>;testb $, (%edi)": 1,
                "andl , %ecx;incl ;calll  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ebx;movl %ebx, %ecx": 1,
                "shldl $, %edx, %edi;shll $, %edx;xorl %ecx, %ecx;orl %edx, %eax;movl , %edx": 1,
                "movl %ecx, (%esi);pushl (%ebp);movl %eax, (%esi);pushl %ebx;pushl (%ebp)": 1,
                "cmpl $, %eax;je  <MmGrowKernelStack+>;movl %edi, %ecx;calll  <MmTrimAllSystemPagableMemory+>;incw (%edi)": 1,
                "movl %eax, (%edi);incl (%edi);orl $, (%edi);testb $, (%edi);jne  <MmGrowKernelStack+>": 1,
                "andl $, %edx;orl (,%edx,), %eax;xorl %ecx, %ecx;orl (,%edx,), %ecx;movl , %edx": 2,
                "shrl $, %ebx;orl %edi, %eax;movl , %edi;movl %edx, %ebx;orl %edi, %ebx": 3,
                "jae  <MmGrowKernelStack+>;notl %edx;notl %edi;andl %edx, %eax;andl %edi, %ecx": 1,
                "notl %edi;andl %edx, %eax;andl %edi, %ecx;orl $, %eax;cmpl $, (%ebp)": 1,
                "movl (%esi), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movw %cx, -(%ebp);movl (%ebp), %ecx;shll $, %eax;andl $-, %ecx;shll $, %ecx": 1,
                "andl $, (%ebp);movb $, -(%ebp);movb $, -(%ebp);movl %ecx, -(%ebp);movl $, -(%ebp)": 1,
                "pushl %eax;pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax": 6,
                "movl %eax, -(%ebp);testb $, -(%ebp);je  <MmGrowKernelStack+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ecx, -(%ebp);je  <MmGrowKernelStack+>;cmpl %eax, -(%ebp);jne  <MmGrowKernelStack+>;decl (%ebp)": 1,
                "pushl -(%ebp);pushl %ebx;pushl -(%ebp);pushl -(%ebp);pushl $": 1,
                "subl %edx, ;movl $, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;movw (%edi), %ax;movzwl %ax, %esi;andl , %esi": 3,
                "je  <MmGrowKernelStack+>;movl %esi, %ecx;calll  <MmTrimAllSystemPagableMemory+>;movl %eax, -(%ebp);jmp  <MmGrowKernelStack+>": 3,
                "calll *;movl -(%ebp), %ecx;movl %esi, %edx;calll  <MmIsNonPagedSystemAddressValid+>;calll *%ebx": 2,
                "notl %edx;andl %ebx, %eax;pushl %edi;andl %edx, %esi;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;andl $, -(%ebp);movl %eax, -(%ebp);movl %eax, (%ebp)": 1,
                "movl %eax, %esi;movl (%ebp), %eax;movl %esi, (%eax);movl %ecx, (%eax);addl $, %eax": 1,
                "addl $, %eax;cmpl $, -(%ebp);movl %ecx, -(%ebp);movl %eax, (%ebp);jb - <MmGrowKernelStack+>": 1,
                "cmpl $, -(%ebp);movl %ecx, -(%ebp);movl %eax, (%ebp);jb - <MmGrowKernelStack+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;addl $, (%ebp);andl %ebx, %ecx;xorl %edx, %edx": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;calll  <MmIsNonPagedSystemAddressValid+>;jmp  <MmGrowKernelStack+>;movb -(%ebp), %cl": 1,
                "movl %edi, (%eax);andl $, %esi;shll $, %ecx;orl %esi, %ecx;movl , %esi": 1,
                "imull $, %eax, %eax;movl , %ecx;movl $, (%eax,%ecx);movl , %eax;movl , %ecx": 1,
                "xorl %edi, %edi;shldl $, %edx, %edi;andl $, %eax;shll $, %edx;movl %edx, %esi": 1,
                "notl %ecx;andl %ecx, %edi;calll  <MmTrimAllSystemPagableMemory+>;movl %eax, %edx;movl %esi, (%edx)": 1,
                "xorl %eax, %eax;movl %ecx, %esi;shrl $, %ecx;leal (%edx), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "leal (%edx), %edi;rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi)": 1,
                "leal -(%eax), %esi;shrl $, %esi;andl $, %esi;subl $, %esi;shrl $, %eax": 1,
                "leal (,%ecx,), %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movl , %eax;movl , %edi;movl %eax, %esi;shrl $, %esi;shrl $, %edi": 1,
                "leal (%edx,%eax,), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);shrl $, %edx": 1,
                "andl $, %edx;xorl %esi, %esi;movl %esi, -(%edx);movl %esi, -(%edx);movb -(%ebp), %cl": 1,
                "pushl %ecx;andl %ebx, %eax;pushl %eax;pushl -(%ebp);calll  <MmTrimAllSystemPagableMemory+>": 2,
                "pushl %eax;pushl -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;movl %eax, %edi;shrl $, %eax": 1,
                "movl %eax, %edi;shrl $, %eax;andl $, %eax;movl $, %ecx;movl $, %esi": 1,
                "movb -(%ebp), %cl;calll *;cmpl $, ;je  <MmGrowKernelStack+>;movl , %eax": 1,
                "movl $, %ecx;subl %edx, %ecx;shll $, %ecx;movl %ecx, (%ebp);shrl $, %esi": 1,
                "popl %ebx;popl %esi;popl %edi;leave;retl $": 9,
                "lock;andl %ecx, (%eax);movl $, %ecx;lock;orl %ecx, (%eax)": 1,
                "leal (%esi), %eax;pushl %eax;calll - <KeQuerySystemTime>;movl , %eax;movl %eax, (%esi)": 1,
                "movl (%eax), %edx;shrdl $, %edx, %ecx;pushl %ebx;movl $, %edi;andl %edi, %ecx": 1,
                "pushl %eax;movl (%eax), %eax;shrdl $, %eax, %ecx;andl %edi, %ecx;pushl %ecx": 2,
                "andl $, %eax;subl $, %eax;movl (%eax), %ecx;pushl %ebx;pushl %eax": 1,
                "addl $, -(%ebp);decl -(%ebp);jne - <MmGrowKernelStack+>;movl $, %ebx;movl $, -(%ebp)": 1,
                "shrdl $, %ecx, %eax;pushl $;andl %edi, %eax;pushl %ebx;pushl %eax": 1,
                "pushl %eax;shrl $, %ecx;movl %eax, -(%ebp);movl $, (%ebx);calll  <MmIsAddressValid+>": 1,
                "notl %ecx;notl %edx;andl %ecx, %eax;andl %edx, -(%ebp);movl -(%ebp), %ecx": 3,
                "testl %edi, %edi;je  <MmGrowKernelStack+>;andl $, (%edi);leal (%edi), %eax;pushl %eax": 1,
                "andl $, (%edi);leal (%edi), %eax;pushl %eax;movl %ebx, (%edi);movl %edi, (%edi)": 1,
                "xorl %ebx, %ebx;movl %eax, (%eax);movl %eax, (%eax);cmpl %ebx, ;je  <MmGrowKernelStack+>": 1,
                "movl $, %eax;cmpl %eax, ;jbe  <MmGrowKernelStack+>;pushl %ebx;pushl %eax": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jne  <MmGrowKernelStack+>;movl $, %esi;jmp  <MmGrowKernelStack+>": 1,
                "pushl $;calll  <MmGetSystemRoutineAddress+>;testl %eax, %eax;movl %eax, -(%ebp);jne  <MmGrowKernelStack+>": 1,
                "testb $, (%edi);jne  <MmGrowKernelStack+>;movl $, %edi;jmp  <MmGrowKernelStack+>;movl (%edi), %eax": 1,
                "testl %edx, %edx;je  <MmGrowKernelStack+>;jmp  <MmGrowKernelStack+>;decl %eax;decl %eax": 1,
                "movb (%edi), %al;pushl $;pushl %ebx;movb %al, (%esi);movb (%edi), %al": 1,
                "pushl %eax;pushl %esi;pushl (%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %eax, %edi;movl -(%ebp), %eax;movl %eax, (%esi);calll - <KeDetachProcess>;movl %edi, %eax": 1,
                "calll  <NtFreeVirtualMemory+>;jmp  <MmGrowKernelStack+>;calll - <KeDetachProcess>;xorl %eax, %eax;popl %edi": 1,
                "movl %esp, %ebp;subl $, %esp;testb $, ;jne  <MmGrowKernelStack+>;pushl %ebx": 1,
                "jmp  <MmGrowKernelStack+>;movl (%ebx), %eax;shrl $, %eax;andl %edi, %eax;subl %ecx, %eax": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl (%ebx), %esi;andl $, -(%ebp);subl $, %eax": 1,
                "movl %ecx, %edx;andl %eax, %edx;cmpl %eax, %edx;movl %edx, -(%ebp);jne  <MmGrowKernelStack+>": 2,
                "shrl $, %eax;calll - <MmGrowKernelStack+>;subl $, %esi;incl ;cmpl -(%ebp), %esi": 1,
                "movl %ecx, -(%ebp);shrl $, %eax;movl %eax, %ecx;movl -(%ebp), %eax;movl %ebx, %ecx": 1,
                "pushl %eax;pushl $;calll - <MmGrowKernelStack+>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl $, (%eax);movl (%ebx), %eax;movl %eax, -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;leal -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;leal -(%ebp), %ecx;movl %eax, %ebx;movl %ecx, %edx": 1,
                "movl (%ebx,%ecx), %edx;movl %edx, (%ecx);movl (%ebx,%ecx), %edx;movl %edx, (%ecx);addl $, %ecx": 1,
                "andl %esi, %eax;movl %edi, -(%eax);movl %edi, -(%eax);movl -(%ebp), %eax;leal -(%ebp), %ebx": 1,
                "movl $, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp);pushl -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);pushl -(%ebp);movl -(%ebp), %eax;shrl $, %eax": 1,
                "calll - <MmGrowKernelStack+>;movl , %eax;movl , %ecx;addl $, -(%ebp);notl %ecx": 1,
                "movl -(%ebp), %eax;andl $, %ecx;movl %ecx, (%eax,%ebx);movl %edx, (%eax,%ebx);addl $, %ebx": 1,
                "movl %edx, -(%ebp);movl (%eax,%ecx,), %ecx;shrl $, %eax;andl %esi, %eax;movl %ecx, -(%ebp)": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movl (%eax), %ecx;pushl (%ebp);movl %ecx, -(%ebp);movl (%eax), %ecx": 1,
                "imull $, %eax, %eax;movl $, (%eax,%ecx);pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %edi, -(%eax);movl -(%ebp), %eax;movl , %ecx;imull $, %eax, %eax;movl , %esi": 1,
                "movl , %ecx;imull $, %eax, %eax;movl , %esi;movl $, (%eax,%ecx);movl -(%ebp), %eax": 1,
                "lock;andl %eax, (%esi);movl , %eax;cmpl %edi, %eax;je  <MmGrowKernelStack+>": 1,
                "pushl %ebx;movl %eax, -(%ebp);calll  <MmGetSystemRoutineAddress+>;movl %eax, -(%ebp);pushl $": 1,
                "incl %ecx;andb %ah, (%edx,%esi,);jbe  <MmGrowKernelStack+>;jb  <MmGrowKernelStack+>;pushl $": 1,
                "pushl $;popal;imull $, (%ebp), %esp;andl $, %eax;je  <MmGrowKernelStack+>": 1,
                "je  <MmGrowKernelStack+>;jae  <MmGrowKernelStack+>;outsl (%esi), %dx;andb %dh, (%eax);jns  <MmGrowKernelStack+>": 1,
                "movl (%ebp), %esi;pushl %edi;leal (%esi), %edi;movl (%edi), %eax;testb $, %al": 1,
                "movb %al, %dl;addl $, %esi;movl (%esi), %eax;leal -(%ecx,%eax), %eax;movl %eax, ": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;popl %edi;popl %esi;leave;retl $": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movl %eax, (%esi);movl %fs:, %eax;movl %eax, %edi": 1,
                "jmp  <MmGrowKernelStack+>;cmpl $, (%esi);je  <MmGrowKernelStack+>;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "leal (%esi), %ecx;andl %ebx, %edi;subl $, %edi;movl %ecx, -(%ebp);calll *": 1,
                "leal (%esi), %ecx;movl %ecx, -(%ebp);calll  <ExAcquireFastMutexUnsafe>;pushl $;movb $-, (%esi)": 1,
                "movl %eax, -(%ebp);calll - <MmFlushImageSection+>;movl , %eax;andl $, (%eax);movl , %eax": 1,
                "andl $, (%eax);jmp  <MmGrowKernelStack+>;pushl %edi;calll  <MmTrimAllSystemPagableMemory+>;cmpl $, ": 1,
                "je  <MmGrowKernelStack+>;movl (%edi), %eax;testl %eax, %eax;js  <MmGrowKernelStack+>;cmpl $, (%edi)": 1,
                "pushl %edi;pushl %edi;pushl %eax;pushl %eax;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %edx, (%ebp);movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);testb $, (%esi)": 1,
                "movl %eax, (%ebp);je  <MmGrowKernelStack+>;cmpl %edi, %eax;je  <MmGrowKernelStack+>;cmpl %edi, (%eax)": 1,
                "andl %ebx, %edi;subl $, %edi;calll *;pushl $;pushl $-": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx;cmpl , %ecx": 1,
                "pushl %ecx;pushl %ecx;cmpl , %ecx;pushl %esi;pushl %edi": 1,
                "pushl %edi;jb  <MmGrowKernelStack+>;cmpl , %ecx;jae  <MmGrowKernelStack+>;movl , %esi": 1,
                "subl $, %edx;movl (%edx), %edi;andl %eax, %edi;pushl $;movl %edi, -(%ebp)": 1,
                "testl %ecx, %ecx;je  <MmGrowKernelStack+>;jmp - <MmGrowKernelStack+>;xorl %eax, %eax;popl %ebx": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %ecx;pushl %esi;movl %ecx, %eax": 1,
                "movl -(%ecx), %eax;subl $, %ecx;movl (%ecx), %edx;movl %eax, -(%ebp);pushl %ebx": 1,
                "xorl %edx, %edx;cmpl %eax, %ecx;jne  <MmIsAddressValid+>;testl %edx, %edx;jne  <MmIsAddressValid+>": 1,
                "andl $, (%eax);incw (%eax);andb $-, (%eax);incl (%eax);movl (%eax), %edx": 1,
                "movl (%eax), %ecx;andl $, %ecx;orl $, %ecx;movl %ecx, (%eax);movl (%ebp), %ecx": 1,
                "cmpl , %ebx;jb  <MmIsAddressValid+>;cmpl , %ebx;jb  <MmIsAddressValid+>;cmpl , %ebx": 1,
                "movl , %edi;movl $, %esi;jmp  <MmIsAddressValid+>;movl %fs:, %eax;movl (%eax), %esi": 1,
                "pushl (%ebp);leal (%ebp), %eax;pushl %esi;pushl %ebx;pushl %eax": 1,
                "cmpl %ebx, (%ebp);leal (%ecx), %eax;movb %bl, (%ecx);movb $, (%ecx);movl %ebx, (%ecx)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);jne  <MmIsAddressValid+>;movl , %eax;movl %ebx, (%eax)": 1,
                "cmpl %ebx, %esi;je  <MmIsAddressValid+>;leal (%esi), %eax;cmpb $-, (%eax);leal (%esi), %ecx": 1,
                "movl $, -(%ebp);pushl $;pushl %ebx;pushl %ebx;calll - <KeDelayExecutionThread>": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%esi), %eax;movl %eax, (%ebp)": 1,
                "shll $, %eax;movw %bx, %ax;rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx": 2,
                "subl $, %eax;cmpl %eax, %esi;jb  <MmIsAddressValid+>;cmpl , %esi;jbe - <MmIsAddressValid+>": 1,
                "cmpl %eax, %esi;jb  <MmIsAddressValid+>;cmpl , %esi;jbe - <MmIsAddressValid+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl $, (%eax);jmp - <MmIsAddressValid+>;cmpl , %esi;jb - <MmIsAddressValid+>": 1,
                "jmp  <MmIsAddressValid+>;shrl $, %ecx;andl $, %ecx;subl $, %ecx;movl (%ecx), %edx": 1,
                "movl (%ebp), %esi;imull $, %esi, %esi;addl , %esi;xorl %edx, %edx;movl %ebx, (%esi)": 1,
                "pushl %edi;incl %edx;andl %edx, %eax;pushl $;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esi);movl $, (%esi);movl , %ecx;movl , %edi;movl %ecx, %eax": 1,
                "je  <MmIsAddressValid+>;movl (%ebx), %eax;andl %ecx, %eax;movl (%ebx), %ecx;andl %edi, %ecx": 1,
                "cmpl %edx, (%ebp);movl %eax, (%esi);jne  <MmIsAddressValid+>;orl %edx, %eax;jmp  <MmIsAddressValid+>": 1,
                "andl $, %edi;movl %eax, (%esi);subl $, %edi;movl (%edi), %eax;andl %edx, %eax": 1,
                "shll $, %eax;pushl %eax;pushl (%edi);pushl %ebx;pushl $": 3,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl %edx, %esi": 1,
                "cmpl $, %ebx;jb  <MmIsAddressValid+>;cmpl , %ebx;jbe  <MmIsAddressValid+>;xorl %eax, %eax": 1,
                "jbe  <MmIsAddressValid+>;xorl %eax, %eax;jmp  <MmIsAddressValid+>;xorl %eax, %eax;incl %eax": 3,
                "pushl %ecx;movl (%ebp), %eax;leal (%eax), %ecx;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);jne  <MmIsAddressValid+>;orl $, (%esi)": 1,
                "incl ;incw (%esi);movl (%esi), %eax;andb $-, (%esi);andl $, %eax": 1,
                "subl $, %ebx;movl %ecx, (%esi);movl (%ebx), %eax;andl $, %eax;orl %ecx, %eax": 1,
                "calll - <MmIsAddressValid+>;testl %eax, %eax;jl  <MmIsAddressValid+>;movl (%ebx), %ecx;movl (%ebx), %eax": 1,
                "movl (%ebp), %edx;movl (%edx), %edx;andl %eax, %edx;movl (%edi), %eax;xorl %ebx, %ebx": 1,
                "cmpl $, %edi;jb  <MmIsAddressValid+>;cmpl , %edi;jbe  <MmIsAddressValid+>;xorl %eax, %eax": 2,
                "movl (%ebp), %edx;pushl %ebx;pushl %esi;movl %edx, %esi;imull $, %esi, %esi": 1,
                "andl $, %ebx;movl %eax, (%esi);subl $, %ebx;movl (%ebx), %eax;andl $, %eax": 1,
                "calll - <KeBugCheckEx>;movl (%ebp), %edx;movl (%ebx), %ecx;movl (%ebx), %eax;movl (%esi), %ebx": 1,
                "andl %eax, %ecx;xorl %ecx, %ebx;andl %eax, %ebx;xorl %ebx, (%esi);andl %eax, %edx": 1,
                "movl (%ecx), %edx;shrl $, %edx;andl $, %edx;jne  <MmIsAddressValid+>;movl (%eax), %edx": 1,
                "shrdl $, %edx, %eax;shll $, %eax;xorl (%ecx), %eax;shrl $, %edx;andl $, %eax": 1,
                "shll $, %eax;xorl (%ecx), %eax;shrl $, %edx;andl $, %eax;xorl %eax, (%ecx)": 1,
                "shrdl $, %ecx, %eax;xorl (%esi), %eax;popl %edi;andl $, %eax;xorl %eax, (%esi)": 1,
                "xorl (%esi), %eax;popl %edi;andl $, %eax;xorl %eax, (%esi);shrl $, %ecx": 1,
                "movl %eax, -(%ebp);je  <MmIsAddressValid+>;movl (%ebp), %edi;movl (%ebp), %eax;movl (%ebp), %ebx": 1,
                "jne  <MmIsAddressValid+>;movl (%ebp), %ecx;calll - <MmIsAddressValid+>;testl %eax, %eax;jge  <MmIsAddressValid+>": 1,
                "jne  <MmIsAddressValid+>;movl (%ebp), %ecx;calll  <MmTrimAllSystemPagableMemory+>;jmp  <MmIsAddressValid+>;testb $, (%esi)": 1,
                "orl $, %ebx;calll *;movb %al, (%ebp);xorl %edi, %edi;cmpl %edi, (%ebp)": 1,
                "testb $, (%esi);jne  <MmIsAddressValid+>;andl $, %ebx;movl %ebx, %eax;xorl %ecx, %ecx": 1,
                "pushl (%ebp);calll - <ZwYieldExecution+>;movl -(%ebp), %ecx;calll  <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl": 1,
                "xorl %ecx, %ecx;orl %ecx, %eax;pushl %edi;jne  <MmIsAddressValid+>;movl (%ebp), %edi": 1,
                "movl , %ecx;leal (%edi,%edi,), %eax;cmpl $-, (%ecx,%eax,);je  <MmIsAddressValid+>;movl %edi, %ecx": 1,
                "incl ;pushl $;pushl %ebx;pushl %esi;calll - <MmIsAddressValid+>": 1,
                "cmpl %esi, (%ebp);movl %eax, (%ebx);jne  <MmIsAddressValid+>;pushl %esi;pushl (%ebp)": 1,
                "pushl (%ebp);calll - <MmIsAddressValid+>;movl $, %eax;jmp  <MmIsAddressValid+>;movl $, %eax": 2,
                "jmp  <MmIsAddressValid+>;cmpl $, (%ebp);jne  <MmIsAddressValid+>;movb $, %cl;calll *": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi": 1,
                "decl ;jmp  <MmIsAddressValid+>;cmpl %ecx, %eax;jbe  <MmIsAddressValid+>;cmpl $, ": 1,
                "movl %eax, %esi;subl %ecx, %esi;subl %esi, %eax;decl %esi;cmpl $-, -(%ebp)": 1,
                "decl %eax;cmpl %esi, %eax;jae  <MmIsAddressValid+>;movl %eax, %esi;movl %esi, -(%ebp)": 1,
                "subl %ecx, %eax;sarl $, %eax;cmpl (%ebp), %eax;jae  <MmIsAddressValid+>;movl %eax, (%ebp)": 1,
                "jne - <MmIsAddressValid+>;movl -(%ebp), %esi;movl -(%ebp), %ecx;movl %esi, %eax;subl %ecx, %eax": 1,
                "subl %ecx, %eax;incl %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;subl %esi, %ecx": 1,
                "cmpl %eax, (%ebp);jbe  <MmIsAddressValid+>;movl %eax, (%ebp);movl (%ebp), %esi;testl %esi, %esi": 1,
                "jne  <MmIsAddressValid+>;movl , %eax;addl $, %eax;movl (%eax), %edx;movl %edx, %ecx": 4,
                "movl -(%ebp), %edx;testl %edx, %edx;leal (%edi), %eax;leal (%edi), %esi;movl %eax, (%ebp)": 1,
                "movl %eax, (%esi);movl %edx, (%esi);movw $, (%esi);movl (%ecx), %eax;pushl %edi": 1,
                "movl %edi, (%eax);movl %esi, %eax;movl %edx, (%ebp);xorl %ecx, %ecx;andl $, %edx": 1,
                "movl %esi, %eax;movl %edx, (%ebp);xorl %ecx, %ecx;andl $, %edx;movl (,%edx,), %edx": 1,
                "movl (%ebp), %eax;movw $, (%edi);movl $, (%edi);movw $, (%edi);movl %eax, (%edi)": 1,
                "imull $, %eax, %eax;addl , %eax;movl %eax, (%edi);movl $, %eax;popl %edi": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%eax), %eax;shrdl $, %eax, %esi": 1,
                "movl (%eax), %eax;shrdl $, %eax, %esi;movl $, %edx;andl %edx, %esi;movl %esi, -(%ebp)": 1,
                "shrdl $, %eax, %ebx;andl $, %ebx;shrl $, %eax;shll $, %ebx;andl %edx, -(%ebp)": 1,
                "andl $, (%ebp);calll  <MmTrimAllSystemPagableMemory+>;movl %eax, %ecx;movl %ebx, %eax;shrl $, %eax": 1,
                "andl %eax, %edi;cmpl $, (%ebp);je  <MmIsAddressValid+>;movl %ecx, %eax;andl $, %eax": 1,
                "jae  <MmIsAddressValid+>;movl %fs:, %eax;movl (%eax), %eax;jmp  <MmIsAddressValid+>;cmpl , %edi": 1,
                "movl %fs:, %eax;movl (%eax), %eax;jmp  <MmIsAddressValid+>;cmpl , %edi;jb  <MmIsAddressValid+>": 1,
                "movl (%eax), %eax;jmp  <MmIsAddressValid+>;cmpl , %edi;jb  <MmIsAddressValid+>;cmpl , %edi": 1,
                "pushl %esi;pushl (%ebp);pushl %edi;calll - <MmIsAddressValid+>;movl $, (%ebp)": 1,
                "pushl -(%ebp);pushl %eax;pushl %edi;calll  <wctomb+>;movl (%ebp), %eax": 1,
                "pushl %edi;calll  <wctomb+>;movl (%ebp), %eax;popl %edi;popl %esi": 1,
                "jb  <MmIsAddressValid+>;movl $, %eax;jmp  <MmIsAddressValid+>;testl $, %eax;je  <MmIsAddressValid+>": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;incw (%esi);movl (%esi), %eax;incl (%esi);andl $, %eax": 1,
                "orl $, %eax;movl %eax, (%esi);movl %edi, %esi;shrl $, %esi;andl $, %esi": 1,
                "jge  <MmIsAddressValid+>;pushl $;pushl (%esi);pushl %edi;pushl $": 1,
                "xorl %ecx, %ecx;orl (,%edx,), %ecx;movl (%ebp), %edx;shrl $, %esi;xorl %esi, %esi": 1,
                "movl (%ebp), %edx;shrl $, %esi;xorl %esi, %esi;shldl $, %edx, %esi;shll $, %edx": 1,
                "cmpl $, %edi;jb  <MmIsAddressValid+>;cmpl $, %edi;jae  <MmIsAddressValid+>;notl %edx": 1,
                "movl %eax, (%ebp);movl $, (%ebp);movl %edi, -(%ebp);movl %ecx, (%ebp);je  <MmIsAddressValid+>": 1,
                "je  <MmIsAddressValid+>;movl , %ecx;leal (%eax,%ecx,), %eax;movl %eax, (%ebp);leal (%edi), %ecx": 1,
                "movl , %ecx;leal (%eax,%ecx,), %eax;movl %eax, (%ebp);leal (%edi), %ecx;movl $, %eax": 1,
                "movl %eax, (%ebp);leal (%edi), %ecx;movl $, %eax;jmp  <MmIsAddressValid+>;movl (%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);jne - <MmIsAddressValid+>;movl (%ebp), %ecx;cmpl %ecx, (%ebp);jae  <MmIsAddressValid+>": 1,
                "andl %eax, %edx;cmpl $, %edx;jne - <MmIsAddressValid+>;addl $, %ecx;movl %ecx, -(%ebp)": 1,
                "cmpl $, %edx;jne - <MmIsAddressValid+>;addl $, %ecx;movl %ecx, -(%ebp);pushl -(%ebp)": 1,
                "pushl %eax;movw %dx, (%eax);movl %ecx, (%eax);movw $, (%eax);calll - <MmIsAddressValid+>": 1,
                "pushl %esi;andl %edx, %ecx;xorl %esi, %esi;cmpl %edx, %ecx;jne  <MmIsAddressValid+>": 1,
                "cmpl %edx, %ecx;jne  <MmIsAddressValid+>;testl %esi, %esi;je  <MmIsAddressValid+>;movl (%eax), %ecx": 1,
                "orl %edx, %ecx;je  <MmIsAddressValid+>;movl (%ebp), %esi;shrl $, %esi;andl $, %esi": 1,
                "testl %edx, %edx;je  <MmIsAddressValid+>;andl $, %eax;xorl %edx, %edx;orl %edx, %eax": 1,
                "jmp  <MmIsAddressValid+>;pushl %eax;calll - <MmIsAddressValid+>;testl %eax, %eax;jne  <MmIsAddressValid+>": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl $;pushl %edi": 1,
                "movl %eax, (%ecx);jmp  <MmIsAddressValid+>;cmpl $, %eax;je  <MmIsAddressValid+>;cmpl %ebx, %eax": 1,
                "pushl %esi;pushl $;calll  <ExAcquireResourceExclusiveLite>;movl %fs:, %eax;movl %eax, ": 1,
                "calll - <MmUnmapLockedPages>;andl $-, (%ebx);xorl %ecx, %ecx;movl %ecx, (%ebx);movl (%edi), %ebx": 1,
                "je  <MmIsAddressValid+>;movl (%ebp), %edi;cmpl , %edi;jbe  <MmIsAddressValid+>;cmpl , %edi": 1,
                "jbe  <MmIsAddressValid+>;cmpl $, %ebx;je  <MmIsAddressValid+>;cmpl $, %ebx;je  <MmIsAddressValid+>": 1,
                "je  <MmIsAddressValid+>;cmpl $, %ebx;jne  <MmIsAddressValid+>;cmpl %ecx, ;jne  <MmIsAddressValid+>": 2,
                "movl (%esi), %eax;jmp  <MmIsAddressValid+>;orl $-, %eax;pushl %eax;pushl %edi": 1,
                "cmpl %ecx, ;jne  <MmIsAddressValid+>;movl $, ;decl ;movl , %ecx": 1,
                "imull $, %ecx, %ecx;addl , %ecx;orb $, (%ecx);movl %ebx, (%ecx);addl $, %edx": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movl %eax, %edx;addl %edi, %edx;movl $, %ecx;subl %edi, %ecx": 1,
                "shrl $, %edx;andl $, %ecx;andl $, %edx;rep  stosb %al, %es:(%edi);andl $, -(%edx)": 1,
                "jne  <MmIsAddressValid+>;cmpl $-, %eax;jne  <MmIsAddressValid+>;testl %ecx, %ecx;jne  <MmIsAddressValid+>": 1,
                "incw (%edi);leal (%esi), %eax;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl $, %ecx;calll  <ExReleaseResourceLite>;movb $, %cl;calll *;pushl (%ebp)": 1,
                "jne  <MmIsAddressValid+>;leal (%ebx), %eax;cmpl %eax, (%eax);je  <MmIsAddressValid+>;movb $, %cl": 1,
                "movl %eax, (%edi);movl (%edi), %eax;andl $, %eax;cmpl $, %eax;je  <MmIsAddressValid+>": 1,
                "jne  <MmIsAddressValid+>;decl ;movl (%edi), %eax;incl (%edi);andl $, %eax": 2,
                "xorl %esi, %esi;orl %esi, %edx;movl %ecx, (%ebp);jne  <MmIsAddressValid+>;movl %ebx, %edx": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movl %ebx, %edx;shrdl $, %esi, %edx;andl $, %edx;orl (,%edx,), %eax": 1,
                "movb $, %cl;calll *;pushl $;pushl %edi;pushl %ebx": 2,
                "orl %edi, %eax;jne  <MmIsAddressValid+>;movl $, %esi;jmp  <MmIsAddressValid+>;movl (%ebp), %eax": 1,
                "testl %ecx, %ecx;je  <MmIsAddressValid+>;movl %ebx, %eax;andl $, %eax;xorl %ecx, %ecx": 1,
                "pushl %ecx;pushl (%ebp);pushl (%ebp);calll  <MmTrimAllSystemPagableMemory+>;testl %eax, %eax": 1,
                "andl %ecx, %eax;xorl %edx, %edx;cmpl %ecx, %eax;jne - <MmIsAddressValid+>;testl %edx, %edx": 1,
                "movl $, %ecx;movl (%ebp), %eax;movl %ecx, (%eax);pushl %edx;pushl (%ebp)": 1,
                "pushl %edx;pushl (%ebp);movl %edx, (%eax);pushl %eax;pushl (%ebp)": 1,
                "pushl (%ebp);calll - <MmIsAddressValid+>;jmp - <MmIsAddressValid+>;pushl %ecx;pushl (%ebp)": 1,
                "calll - <MmIsAddressValid+>;cmpl $, -(%ebp);je  <MmIsAddressValid+>;pushl -(%ebp);calll - <MmIsAddressValid+>": 1,
                "orl %edx, %eax;je  <MmIsAddressValid+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl (%ebp);calll - <MmIsAddressValid+>": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;movl (%eax), %eax;xorl %ebx, %ebx;xorl %edi, %edi": 1,
                "movl , %eax;movl %ebx, (%eax);movl , %ecx;addl $, %ecx;jmp  <MmIsAddressValid+>": 1,
                "andl $, %ebx;xorl %ecx, %ebx;decl (%edi);leal (%edx), %ecx;movl %ebx, (%eax)": 1,
                "movl $, -(%ebp);calll *;movl %eax, -(%ebp);movl %edx, -(%ebp);jmp  <MmIsAddressValid+>": 1,
                "movl %edx, -(%ebp);movl (%ebp), %eax;cmpl (%ebp), %eax;movl (%ebx), %eax;je  <MmIsAddressValid+>": 1,
                "movl (%ebp), %eax;cmpl (%ebp), %eax;movl (%ebx), %eax;je  <MmIsAddressValid+>;imull $, %eax, %eax": 1,
                "movw %cx, (%eax);jmp  <MmIsAddressValid+>;subl , %eax;pushl $;cltd": 1,
                "cmpl $, -(%ebp);je  <MmIsAddressValid+>;movl -(%ebp), %eax;movl , %ecx;imull $, %eax, %eax": 1,
                "movl , %ecx;imull $, %eax, %eax;addl %eax, %ecx;movw (%ecx), %dx;cmpw $, %dx": 1,
                "cmpl %ebx, %esi;jle  <MmIsAddressValid+>;decl %esi;shrl $, %esi;incl %esi": 1,
                "decl %esi;jne - <MmIsAddressValid+>;movl , %esi;movb $, %cl;calll *%esi": 1,
                "xorl %eax, %eax;jmp  <MmIsAddressValid+>;cmpl $, (%edi);jne  <MmIsAddressValid+>;movw (%edi), %ax": 1,
                "je  <MmIsAddressValid+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl -(%ebp)": 1,
                "movl $, %edi;jmp  <MmIsAddressValid+>;movl -(%ebp), %edi;cmpl $, -(%ebp);je  <MmIsAddressValid+>": 1,
                "cmpl $, %edx;je  <MmIsAddressValid+>;orl $, %edx;testb $, %ch;je  <MmIsAddressValid+>": 1,
                "xorl %edi, %edi;cmpl %edi, %esi;je  <MmIsAddressValid+>;leal (%esi), %eax;cmpb $-, (%eax)": 1,
                "jmp  <MmIsAddressValid+>;calll  <ExAcquireFastMutexUnsafe>;movb $-, (%esi);calll *;pushl -(%ebp)": 1,
                "jmp  <MmIsAddressValid+>;movb %bl, %cl;calll *;xorl %edi, %edi;pushl %edi": 1,
                "incl %edi;pushl %esi;calll - <MmIsAddressValid>;testb %al, %al;je - <MmIsAddressValid+>": 1,
                "movl %ecx, %esi;jne  <MmIsAddressValid+>;calll *;movb %al, -(%ebp);movl (%esi), %eax": 1,
                "calll *;movb %al, %bl;movl (%esi), %eax;movl (%esi), %ecx;shrdl $, %ecx, %eax": 2,
                "testl %edi, %edi;popl %edi;popl %esi;jne  <MmIsAddressValid+>;movb %bl, %cl": 1,
                "movl (%edx,%ecx), %edx;movb $, %cl;calll  <_aullshr>;popl %esi;leave": 1,
                "movb $, %cl;calll  <_aullshr>;popl %esi;leave;retl $": 1,
                "cmpl , %esi;jb  <MmIsNonPagedSystemAddressValid+>;cmpl , %esi;jae  <MmIsNonPagedSystemAddressValid+>;xorb %al, %al": 1,
                "calll *;xorl %eax, %eax;incl %eax;popl %edi;leave": 2,
                "movl -(%ebp), %ecx;calll  <MmGetSystemRoutineAddress+>;cmpl $, (%ebp);je  <MmIsNonPagedSystemAddressValid+>;calll *": 1,
                "orl %ecx, %eax;je - <MmIsNonPagedSystemAddressValid+>;movl (%esi), %eax;andl $, %eax;orl %ecx, %eax": 1,
                "jmp  <MmIsNonPagedSystemAddressValid+>;andl $, -(%ebp);pushl %ecx;calll - <MmIsAddressValid>;testb %al, %al": 1,
                "movl , %esi;pushl %edi;movl , %edi;movl $, %ebx;movb -(%ebp), %cl": 1,
                "movl , %ecx;addl $, %ecx;jmp  <MmIsNonPagedSystemAddressValid+>;andl $, ;movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;calll  <ExReleaseResourceLite>;movb -(%ebp), %cl;calll *%esi;xorl %eax, %eax": 1,
                "calll *%esi;xorl %eax, %eax;pushl %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl , %ecx;movl %eax, (%ecx);jmp  <MmIsNonPagedSystemAddressValid+>;pushl %ebx;calll  <ExAcquireResourceExclusiveLite>": 1,
                "testb %al, %al;je - <MmIsNonPagedSystemAddressValid+>;popl %edi;popl %esi;popl %ebx": 1,
                "movl %fs:, %eax;movl (%esi), %ecx;movl (%eax), %eax;andl %ebx, %ecx;pushl %ecx": 2,
                "orl %edx, %eax;je  <MmIsNonPagedSystemAddressValid+>;movl (%ecx), %ecx;decl (%ecx);pushl %ecx": 1,
                "shrl $, %eax;andl $, %eax;subl $, %eax;cmpl %eax, %edi;jb  <MmIsNonPagedSystemAddressValid+>": 1,
                "movl (%esi), %eax;movl %eax, (%edi);xorl %eax, %eax;cmpl %eax, -(%ebp);je  <MmIsNonPagedSystemAddressValid+>": 1,
                "andl $, %edx;cmpl $, %edx;popl %esi;popl %ebx;je  <MmIsNonPagedSystemAddressValid+>": 1,
                "je  <MmIsNonPagedSystemAddressValid+>;cmpl $, %edx;je  <MmIsNonPagedSystemAddressValid+>;pushl $;pushl %edx": 1,
                "cmpl , %eax;jae  <MmIsThisAnNtAsSystem+>;calll - <KeReadStateSemaphore>;testl %eax, %eax;je  <MmIsThisAnNtAsSystem+>": 1,
                "imull $, (%eax), %esi;outsb (%esi), %dx;outsl (%esi), %dx;je  <MmIsThisAnNtAsSystem+>;outsl (%esi), %dx": 1,
                "insb %dx, %es:(%edi);andb %al, (%ebx);pushl %ebp;andb %ah, (%ebx);jb  <MmIsThisAnNtAsSystem+>": 1,
                "andb %ah, (%esi);insb %dx, %es:(%edi);insb %dx, %es:(%edi);jns  <MmIsThisAnNtAsSystem+>;bound %gs:(%ebp), %esi": 1,
                "jns  <MmIsThisAnNtAsSystem+>;bound %gs:(%ebp), %esi;orb %cs:(%bp,%si), %ch;orb (%edx), %ch;subb (%edx), %ch": 1,
                "subb (%edx), %ch;subb (%edx), %ch;subb (%edx), %ch;subb (%edx), %ch;orb (%eax), %al": 4,
                "andl $, %eax;xorl %edx, %edx;subl %edx, %eax;je  <MmIsThisAnNtAsSystem+>;decl %eax": 1,
                "shll $, %ecx;cmpl $, %ecx;jbe  <MmIsThisAnNtAsSystem+>;addl $, %ecx;andl $, %ecx": 1,
                "andl $, %ecx;jmp  <MmIsThisAnNtAsSystem+>;addl $, %ecx;andl $-, %ecx;subl %ecx, ": 1,
                "andl $, (%eax);orl $, (%eax);xorl %eax, %eax;incl %eax;popl %ebp": 1,
                "incl (%esi);cmpl %ecx, (%esi);je  <MmIsThisAnNtAsSystem+>;movl (%esi), %edx;movl (%esi), %edi": 1,
                "movl (%esi), %edx;addl (%esi), %edx;shll $, %edx;cmpl $, %edx;jbe  <MmIsThisAnNtAsSystem+>": 3,
                "jbe  <MmIsThisAnNtAsSystem+>;addl $, %edx;andl $, %edx;jmp  <MmIsThisAnNtAsSystem+>;addl $, %edx": 3,
                "addl $, %edx;andl $, %edx;jmp  <MmIsThisAnNtAsSystem+>;addl $, %edx;andl $-, %edx": 3,
                "xorl %edx, %edx;orl %eax, %ebx;pushl %ebx;movl (%ebp), %ebx;orl %edx, %ecx": 1,
                "pushl %ecx;pushl %edi;pushl %ebx;calll  <RtlFillMemory+>;calll *": 1,
                "calll *;incl (%esi);orl $, (%esi);xorl %ecx, %ecx;cmpl %ecx, (%esi)": 1,
                "movl (%esi), %edx;cmpl %edx, (%ebp);jbe  <MmIsThisAnNtAsSystem+>;subl %edx, (%ebp);movl (%esi), %esi": 1,
                "subl %edx, (%ebp);movl (%esi), %esi;cmpl %ecx, %esi;jne - <MmIsThisAnNtAsSystem+>;xorl %esi, %esi": 1,
                "movl (%esi), %esi;cmpl %ecx, %esi;jne - <MmIsThisAnNtAsSystem+>;xorl %esi, %esi;movb %al, %cl": 1,
                "jne  <MmIsThisAnNtAsSystem+>;movl , %edx;leal (%ecx), %eax;movl $, (%eax);movl %edx, (%eax)": 1,
                "andl $, %eax;jmp  <MmIsThisAnNtAsSystem+>;addl $, %eax;andl $-, %eax;movl , %edx": 1,
                "subl %eax, (%ebp);movl (%ecx), %ecx;testl %ecx, %ecx;jne - <MmIsThisAnNtAsSystem+>;popl %ebp": 1,
                "pushl (%ebp);movb %al, %bl;pushl (%ebp);calll - <MmIsThisAnNtAsSystem+>;movb %bl, %cl": 1,
                "movl , %ebx;pushl %esi;xorl %esi, %esi;pushl %edi;movl %esi, -(%ebp)": 1,
                "pushl %eax;pushl %eax;pushl %eax;movl (%ebp), %eax;pushl $": 1,
                "movb %al, -(%ebp);jne  <MmIsThisAnNtAsSystem+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <MmIsThisAnNtAsSystem+>": 1,
                "movl %esi, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %fs:, %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb (%eax), %al;orl $-, -(%ebp)": 1,
                "xorl %ecx, %ecx;orl %ecx, %eax;je  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %eax;movl (%eax), %ebx": 1,
                "andl $, %esi;imull $, %esi, %esi;addl , %esi;orl $, (%esi);movl (%esi), %ecx": 1,
                "jne  <MmIsThisAnNtAsSystem+>;testb $, %cl;jne  <MmIsThisAnNtAsSystem+>;pushl (%esi);pushl (%esi)": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;andl $, (%esi);movl $, -(%ebp);movl %ebx, %eax;andl $, %eax": 1,
                "calll *;cmpl $, -(%ebp);jne  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %esi;subl %esi, (%edi)": 1,
                "xorl %eax, %edx;movl %edx, (%ecx);xorl %eax, %eax;jmp  <MmIsThisAnNtAsSystem+>;movb -(%ebp), %cl": 1,
                "movl %edi, %eax;negl %eax;pushl %eax;calll  <PsLookupThreadByThreadId+>;movl %edi, %eax": 1,
                "movl %ecx, %esi;pushl %edi;movl (%ebp), %edi;leal -(%ecx,%edi), %ecx;shrl $, %esi": 1,
                "orl %ecx, %eax;jne  <MmIsThisAnNtAsSystem+>;movl %esi, %edx;calll  <MmTrimAllSystemPagableMemory+>;testl %eax, %eax": 1,
                "movl -(%ebp), %ecx;jmp  <MmIsThisAnNtAsSystem+>;xorl %ecx, %ecx;incl %ecx;movl %ecx, %edx": 1,
                "shldl $, %edx, %eax;andl $-, %ecx;shll $, %edx;andl $, %ebx;orl %ecx, %eax": 1,
                "shll $, %edx;andl $, %ebx;orl %ecx, %eax;orl %ebx, %edx;movl %eax, (%edi)": 1,
                "calll *;movl -(%ebp), %ecx;addl $, %edi;addl $, %esi;addl $, (%ebp)": 1,
                "jne  <MmIsThisAnNtAsSystem+>;leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl $": 1,
                "pushl $;popl %edi;jmp  <MmIsThisAnNtAsSystem+>;testb $, (%ebp);je  <MmIsThisAnNtAsSystem+>": 1,
                "je  <MmIsThisAnNtAsSystem+>;xorl %edi, %edi;andl $, -(%ebp);pushl %esi;leal -(%ebp), %ecx": 1,
                "shldl $, %eax, %ecx;shll $, %eax;orl %eax, %edi;movl , %eax;orl %ecx, %ebx": 2,
                "andl %ecx, %ebx;movl %edi, %ecx;andl $, %ecx;xorl %edx, %edx;orl %edx, %ecx": 1,
                "orl %edx, %ecx;je  <MmIsThisAnNtAsSystem+>;orl $, %edi;movl , %ecx;notl %eax": 1,
                "jmp  <MmIsThisAnNtAsSystem+>;movl (%ebp), %ecx;addl $, %ecx;movl %ecx, (%ebp);calll  <ExAcquireFastMutexUnsafe>": 1,
                "shrdl $, %ecx, %eax;movl %eax, %esi;movl (%ebp), %eax;andl $, %esi;imull $, %esi, %esi": 2,
                "leal (%ecx,%eax,), %eax;movl %eax, (%ebp);movl (%ebp), %eax;cmpl -(%ebp), %eax;ja  <MmIsThisAnNtAsSystem+>": 1,
                "movl %eax, %esi;shrl $, %esi;pushl $;pushl (%ebp);andl $, %esi": 1,
                "movl (%ebp), %eax;andl $, %edx;xorl %ecx, %edi;xorl %edx, %ebx;cmpl -(%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl -(%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "cmpl $, (%esi);jb  <MmIsThisAnNtAsSystem+>;decl ;decw (%esi);jmp  <MmIsThisAnNtAsSystem+>": 1,
                "je  <MmIsThisAnNtAsSystem+>;movl (%esi), %edx;movl (%esi), %ecx;movl %edx, %eax;andl $, %eax": 1,
                "je  <MmIsThisAnNtAsSystem+>;testl %eax, %eax;jne  <MmIsThisAnNtAsSystem+>;shrdl $, %ecx, %edx;shrl $, %ecx": 1,
                "movl %edi, -(%ebp);calll *;movb %al, %cl;movl $, %eax;cmpl %eax, ": 1,
                "movl (%ebx), %edi;testl %edi, %edi;jne  <MmIsThisAnNtAsSystem+>;xorl %edx, %edx;xorl %ecx, %ecx": 1,
                "pushl $;cltd;popl %ecx;idivl %ecx;movl %eax, -(%ebp)": 1,
                "je  <MmIsThisAnNtAsSystem+>;addl $, %edi;movl %edi, -(%ebp);movl %esi, %edi;leal -(%edi), %eax": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;addl (%ebx), %eax;andl $-, %ecx;addl $, %edx": 1,
                "leal (%eax,%ecx), %edx;shrl $, %edx;movl %esi, -(%ebp);movl %edx, -(%ebp);je  <MmIsThisAnNtAsSystem+>": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %esi;andl $-, %esi;je  <MmIsThisAnNtAsSystem+>;testl %eax, %eax": 1,
                "jb  <MmIsThisAnNtAsSystem+>;decl ;decw (%eax);jmp  <MmIsThisAnNtAsSystem+>;cmpw $, %cx": 3,
                "decl ;decw (%eax);jmp  <MmIsThisAnNtAsSystem+>;cmpw $, %cx;je  <MmIsThisAnNtAsSystem+>": 3,
                "testl %eax, %eax;jne  <MmIsThisAnNtAsSystem+>;movl %esi, %edi;shrl $, %edi;andl $, %edi": 1,
                "cmpl %eax, %ecx;jl  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %eax;incl -(%ebp);addl $, %eax": 1,
                "movl -(%ebp), %eax;andl $, %eax;movl %eax, %ecx;movl (%esi), %eax;xorl %edi, %edi": 1,
                "shldl $, %eax, %edx;shll $, %eax;andl $-, %ecx;orl %ecx, %eax;orl %edi, %edx": 1,
                "jne  <MmIsThisAnNtAsSystem+>;movw -(%ebp), %cx;movl -(%ebp), %eax;subw %cx, (%eax);movb -(%ebp), %cl": 1,
                "movl -(%ebp), %eax;subw %cx, (%eax);movb -(%ebp), %cl;calll *;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %edi, (%eax);pushl -(%ebp);calll - <MmIsAddressValid+>;calll *": 1,
                "calll - <MmIsAddressValid+>;calll *;movb %al, -(%ebp);jmp  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %eax": 2,
                "subw %dx, (%esi);movl (%ecx), %eax;movl , %edx;imull $, %eax, %eax;movl (%eax,%edx), %eax": 1,
                "movl (%ecx), %eax;movl -(%ebp), %edx;addl $, -(%ebp);addl $, %ecx;incl -(%ebp)": 1,
                "incl -(%ebp);movl %eax, (%edx);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb - <MmIsThisAnNtAsSystem+>": 1,
                "andl $, %eax;jmp  <MmIsThisAnNtAsSystem+>;addl $, %eax;movl %eax, (%ebx);decw (%esi)": 1,
                "movl %eax, (%ecx);jmp  <MmIsThisAnNtAsSystem+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;leal (%ebx,%eax,), %eax;addl $, %ebx": 1,
                "jb  <MmIsThisAnNtAsSystem+>;decl ;decw (%ebx);jmp  <MmIsThisAnNtAsSystem+>;cmpw $, %ax": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;subl $, -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jae - <MmIsThisAnNtAsSystem+>": 1,
                "subw %ax, (%esi);calll *;pushl %edi;calll - <MmIsAddressValid+>;calll *": 1,
                "jne - <MmIsThisAnNtAsSystem+>;jmp  <MmIsThisAnNtAsSystem+>;movb -(%ebp), %cl;calll *;movl -(%ebp), %esi": 1,
                "je  <MmIsThisAnNtAsSystem+>;calll *;movb %al, -(%ebp);movl -(%ebp), %eax;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <MmIsThisAnNtAsSystem+>;movl (%eax), %esi;pushl $": 1,
                "jmp - <MmIsThisAnNtAsSystem+>;movl $, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%esi), %eax;testl %eax, %eax;jle  <MmIsThisAnNtAsSystem+>;leal -(%eax), %edx;shrl $, %edx": 1,
                "decl ;movl %eax, %ecx;calll  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edx;addl $, -(%ebp)": 1,
                "cmpw $, (%ecx);jne  <MmIsThisAnNtAsSystem+>;calll  <MmTrimAllSystemPagableMemory+>;movl (%ebx), %ecx;calll - <MmIsNonPagedSystemAddressValid+>": 1,
                "int;int;movl , %eax;cmpl , %eax;jb  <MmIsThisAnNtAsSystem+>": 1,
                "cmpl , %eax;jb  <MmIsThisAnNtAsSystem+>;pushl $;pushl $;pushl $": 1,
                "pushl $;calll - <KeSetEvent>;retl;int;int": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpl $, %eax;jne  <MmIsThisAnNtAsSystem+>": 1,
                "testb $, (%eax);jne  <MmIsThisAnNtAsSystem+>;pushl %esi;leal -(%eax), %esi;leal (%esi), %ecx": 1,
                "leal (%esi), %ecx;calll *;cmpl $, (%ebp);jne  <MmIsThisAnNtAsSystem+>;calll *": 1,
                "cmpl $, (%ebp);jne  <MmIsThisAnNtAsSystem+>;calll *;pushl $-;popl %ecx": 1,
                "pushl $-;popl %ecx;leal (%esi), %edx;lock;andl %ecx, (%edx)": 1,
                "calll  <ExReleaseResourceLite>;xorb %cl, %cl;calll *;calll  <MmTrimAllSystemPagableMemory+>;popl %ebp": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;movl (%esi), %eax": 1,
                "movl (%esi), %ecx;movl (%esi), %eax;cmpl (%eax), %ecx;movl %ecx, (%ebp);ja  <MmIsThisAnNtAsSystem+>": 1,
                "movl %ebx, (%edx);je  <MmIsThisAnNtAsSystem+>;cmpl %ebx, ;je  <MmIsThisAnNtAsSystem+>;cmpl $, ": 1,
                "movl %ebx, (%edx);movl %edi, (%edx);jmp  <MmIsThisAnNtAsSystem+>;movl (%esi), %eax;xorl %ecx, %ecx": 1,
                "movl %edi, (%edx);jmp  <MmIsThisAnNtAsSystem+>;movl (%esi), %eax;xorl %ecx, %ecx;cmpb $, (%esi)": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movl (%edx), %eax;movl (%edx), %edi;movl %eax, -(%ebp)": 1,
                "jae  <MmIsThisAnNtAsSystem+>;jmp  <MmIsThisAnNtAsSystem+>;incl %ecx;cmpl -(%ebp), %ecx;jbe  <MmIsThisAnNtAsSystem+>": 1,
                "jbe  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %ecx;testb $, (%edi,%ecx,);je - <MmIsThisAnNtAsSystem+>;testl %esi, %esi": 1,
                "je  <MmIsThisAnNtAsSystem+>;movl %esi, (%ebp);movl (%edi,%ecx,), %edi;movl %edi, %eax;shrl $, %eax": 1,
                "movl %edi, %eax;shrl $, %eax;andl $, %eax;subl $, %eax;movl (%eax), %esi": 1,
                "shrl $, %eax;andl $, %eax;subl $, %eax;movl (%eax), %esi;movl %esi, %ebx": 1,
                "andl $, %ebx;pushl $;movl %ebx, -(%ebp);popl %ebx;je  <MmIsThisAnNtAsSystem+>": 1,
                "andl %eax, %esi;xorl %edi, %esi;movl -(%ebp), %edi;movl %esi, (%edi,%ecx,);jmp  <MmIsThisAnNtAsSystem+>": 1,
                "incl %ecx;movl %ecx, (%ebx);movl (%ebx), %esi;cmpl -(%ebp), %esi;ja  <MmIsThisAnNtAsSystem+>": 1,
                "movl (%edx), %edx;andl $, (%ebp);andl $, (%ebp);cmpl %edx, %eax;jbe  <MmIsThisAnNtAsSystem+>": 1,
                "cmpl %edx, %eax;jbe  <MmIsThisAnNtAsSystem+>;movl %edx, %eax;movl (%ebp), %edx;shrl $, %edx": 1,
                "shrl -(%ebp);jne - <MmIsThisAnNtAsSystem+>;jmp  <MmIsThisAnNtAsSystem+>;cmpl $, %eax;jb  <MmIsThisAnNtAsSystem+>": 1,
                "movl -(%ebp), %edx;jmp  <MmIsThisAnNtAsSystem+>;addl -(%ebp), %esi;cmpl -(%ebp), %esi;jbe  <MmIsThisAnNtAsSystem+>": 1,
                "addl -(%ebp), %esi;cmpl -(%ebp), %esi;jbe  <MmIsThisAnNtAsSystem+>;incl %edx;cmpl -(%ebp), %edx": 2,
                "andl $, -(%ebp);cmpl $, (%ebp);jbe  <MmIsThisAnNtAsSystem+>;decl %eax;movl %eax, -(%ebp)": 1,
                "andl $, %eax;leal -(%ebp,%eax,), %eax;incl (%eax);movl -(%ebp), %eax;cmpl -(%ebp), %eax": 1,
                "andl $, (%ebx);xorl %ecx, %ecx;cmpb $, (%ebx);movl %eax, (%ebx);sete %cl": 1,
                "popl %edi;popl %esi;popl %ebx;leal (%ecx,%ecx), %ecx;shrl %cl, %eax": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl %edi;leal -(%ebp), %eax": 2,
                "cmpl (,%eax,), %esi;jbe  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %esi, %edx": 1,
                "jae  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %esi, %edx;subl , %edx": 1,
                "testb $, -(%ebx);je  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %edi;movl -(%ebp), %esi;leal -(%ebx), %eax": 1,
                "je  <MmIsThisAnNtAsSystem+>;movl -(%ebp), %edi;movl -(%ebp), %esi;leal -(%ebx), %eax;subl (%eax), %edi": 1,
                "calll  <_alldiv>;movl $, %esi;jmp  <MmIsThisAnNtAsSystem+>;xorl %eax, %eax;cmpb $, -(%ebx)": 1,
                "addl $, %eax;cmpl $, %ecx;jl - <MmIsThisAnNtAsSystem+>;movl -(%ebp,%ecx,), %eax;movl %ecx, %edi": 1,
                "movl %edi, %edx;shll $, %edx;leal -(%ebp,%ecx,), %eax;cmpl %eax, (%eax);je  <MmIsThisAnNtAsSystem+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;pushfl;popl %eax;movl %eax, -(%ebp);testb $, -(%ebp)": 1,
                "movl $, ;movl %eax, ;movl %fs:, %eax;movl , %esi;movb $, %cl": 1,
                "calll  <ExReleaseResourceLite>;movb -(%ebp), %cl;calll *%esi;cmpl $, (%ebp);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ebp), %ebx;andl $, (%ebx);pushl %edi;movl (%ebp), %edi;cmpl $, %edi": 1,
                "movb %bl, %cl;calll *;xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl %fs:, %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;pushl $;pushl $;pushl $;calll - <KeDelayExecutionThread>": 2,
                "pushl $-;popl %ecx;addl $, %esi;lock;andl %ecx, (%esi)": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movb %bl, %cl;calll *;calll  <MmTrimAllSystemPagableMemory+>;jmp - <MmTrimAllSystemPagableMemory+>": 1,
                "calll *;movl %edi, %eax;popl %edi;jmp  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;xorl %eax, %eax;pushl %esi;pushl %edi": 1,
                "movl %eax, ;movl %edi, (%eax);jne  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;incl %eax": 1,
                "movl %eax, ;popl %ebx;movb -(%ebp), %cl;calll *;cmpl $, (%ebp)": 1,
                "movl %eax, ;calll - <MmTrimAllSystemPagableMemory+>;calll *;xorl %ebx, %ebx;pushl %ebx": 1,
                "movb (%ebp), %cl;movb %bl, ;calll *;movl %ebx, ;movl %esi, ": 1,
                "movl %ebx, (%eax);movl %ecx, (%eax);calll - <MmIsThisAnNtAsSystem+>;xorl %eax, %eax;movl %ebx, ": 1,
                "pushl %eax;calll - <KeQuerySystemTime>;calll *;movl , %esi;movl $, %ebx": 1,
                "movl (%esi), %ecx;movl -(%ebp), %eax;cmpl %eax, %ecx;jne  <MmTrimAllSystemPagableMemory+>;movl (%esi), %ecx": 1,
                "pushl -(%ebp);leal (%esi), %eax;movl %ecx, (%eax);movl %ebx, (%eax);movl %eax, (%ecx)": 1,
                "movl %eax, ;movl -(%ebp), %eax;movl %eax, ;calll *;xorl %esi, %esi": 1,
                "movl , %eax;cmpl , %eax;jb  <MmTrimAllSystemPagableMemory+>;pushl %esi;pushl %esi": 1,
                "pushl $;calll - <KeSetEvent>;popl %esi;leave;retl": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;testb $, (%esi);movzwl (%esi), %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;andl $, %eax;xorl %ecx, %ecx;orl %ecx, %eax": 3,
                "orl %ecx, %eax;jne  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;cmpw %ax, (%esi);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%eax), %edx;shrl $, %edx;andl $, %edx;cmpl $, %edx;je  <MmTrimAllSystemPagableMemory+>": 6,
                "movl -(%ebp), %esi;addl $, -(%ebp);movl -(%ebp), %eax;addl $, %edi;cmpl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);cmpl -(%ebp), %edi;jb - <MmTrimAllSystemPagableMemory+>;decl -(%ebp)": 1,
                "incl %eax;cmpl , %eax;movl %eax, ;jbe  <MmTrimAllSystemPagableMemory+>;movl %eax, ": 1,
                "pushl %edi;movl (%ebp), %edi;testb $, (%edi);movl (%edi), %esi;movl %esi, -(%ebp)": 1,
                "shrl $, %eax;movl (%edi), %eax;shrl $, %eax;andl $, %ebx;andl $, %eax": 1,
                "movl , %ecx;movl %ecx, (%eax);movl , %ecx;movl %ecx, (%eax);movl %ebx, %eax": 1,
                "shrl $, %ecx;andl $, %ecx;cmpl $, %ecx;je  <MmTrimAllSystemPagableMemory+>;cmpl $, %ecx": 1,
                "movl %ecx, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;movl %ebx, %ecx;calll  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax": 1,
                "pushl %eax;pushl (%ebp);movl $, -(%ebp);pushl %eax;movl %esi, %eax": 1,
                "pushl (%ebp);movl $, -(%ebp);pushl %eax;movl %esi, %eax;shll $, %eax": 1,
                "movl %esi, %eax;shll $, %eax;pushl %eax;pushl %esi;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "jbe - <MmTrimAllSystemPagableMemory+>;pushl $;pushl $;calll - <KeFlushEntireTb>;movl -(%ebp), %esi": 1,
                "shrl $, %eax;andl $, %eax;pushl %eax;pushl %ebx;pushl $": 2,
                "calll  <ExReleaseFastMutexUnsafe>;testl %ebx, %ebx;je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl %ebx": 1,
                "movl (%edi), %eax;shll $, %eax;pushl %eax;calll  <MmTrimAllSystemPagableMemory+>;testl %ebx, %ebx": 1,
                "movl %edx, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;calll  <MmTrimAllSystemPagableMemory+>;orl $, (%esi);movl %edi, %ecx": 1,
                "movl (%ebp), %esi;cmpl $, %esi;movl (%ebp), %edx;jae  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx": 1,
                "cmpl $, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %edi, %eax;cmpl , %eax;jne  <MmTrimAllSystemPagableMemory+>;incl -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "decl (%ebx);movl %ecx, %eax;andl $, %eax;pushl $;movl %eax, -(%ebp)": 1,
                "movl %esi, -(%ebp,%eax,);movl (%edx,%edi,), %eax;movl %edi, %ecx;movl %eax, (%ebp);calll  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ebp), %edx;movl , %edx;andl $, %eax;imull $, %eax, %eax;addl , %eax": 1,
                "movl %edx, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;calll  <MmTrimAllSystemPagableMemory+>;cmpw $, (%edi);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movb (%ebp), %cl;calll *;jmp  <MmTrimAllSystemPagableMemory+>;movl (%ebx), %eax;incl %eax": 1,
                "addl $, %esi;cmpl (%ebp), %esi;jbe - <MmTrimAllSystemPagableMemory+>;cmpl $, -(%ebp);popl %edi": 1,
                "pushl %edi;movl (%ebp), %edi;shrl $, %edi;movl $, %ebx;andl %ebx, %edi": 1,
                "calll - <MmIsAddressValid+>;movl (%edi), %eax;andl $, %eax;pushl $;movl %eax, -(%ebp)": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;movl (%esi), %edx;movb $, %cl;calll  <_aullshr>": 2,
                "movl , %ecx;incl ;movl %eax, -(%ebp);leal (%ebx,%ebx,), %eax;cmpl $-, (%ecx,%eax,)": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl;movl %eax, -(%ebp);calll *;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ebx, %edx;calll - <MmIsNonPagedSystemAddressValid+>;calll *;movb %al, -(%ebp)": 1,
                "testb $, (%esi);jne  <MmTrimAllSystemPagableMemory+>;testb $, %ah;jne  <MmTrimAllSystemPagableMemory+>;movl , %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl , %eax;cmpl $, %eax;jae  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx": 1,
                "movl , %eax;cmpl $, %eax;jae  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx;testb $, (%ecx)": 1,
                "calll *;jmp - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %esi;movl -(%ebp), %eax;imull $, %esi, %esi": 1,
                "movl -(%ebp), %eax;movl %eax, (%edi);movl (%esi), %eax;movl (%esi), %ebx;pushl $": 1,
                "movl %eax, (%edi);movl (%esi), %eax;movl (%esi), %ebx;pushl $;movl %eax, -(%ebp)": 1,
                "movl (%esi), %eax;movl (%esi), %ebx;pushl $;movl %eax, -(%ebp);calll - <MmIsDriverVerifying+>": 1,
                "xorl %ecx, %ecx;orl $, %ecx;pushl %ecx;pushl $;pushl %esi": 1,
                "je - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne - <MmTrimAllSystemPagableMemory+>;cmpl %eax, -(%ebp);je - <MmTrimAllSystemPagableMemory+>": 1,
                "pushl -(%ebp);movl (%esi), %eax;movl (%eax), %edi;pushl %esi;calll - <MmDisableModifiedWriteOfSection+>": 1,
                "shrdl $, %eax, %esi;movl $, %ebx;andl %ebx, %esi;imull $, %esi, %esi;addl , %esi": 1,
                "ja  <MmTrimAllSystemPagableMemory+>;pushl (%ebp);movl (%edi), %ecx;movzwl %dx, %eax;pushl %eax": 1,
                "cmpw $, %dx;jne  <MmTrimAllSystemPagableMemory+>;cmpl $, (%esi);jb  <MmTrimAllSystemPagableMemory+>;decl ": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl (%esi), %edx;movl (%ecx), %eax;cmpl %eax, %edx;jb  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %eax;calll - <MmIsThisAnNtAsSystem+>;movb -(%ebp), %cl;calll *;movl -(%ebp), %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;testb $, %cl;jne  <MmTrimAllSystemPagableMemory+>;pushl (%esi);pushl (%esi)": 5,
                "movl (%edi), %eax;cmpl $, %eax;je  <MmTrimAllSystemPagableMemory+>;decl %eax;movl %eax, (%edi)": 1,
                "je  <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;cmpl $, %eax": 1,
                "cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;cmpl $, %eax;je  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl $, %eax;je  <MmTrimAllSystemPagableMemory+>;decl %eax;movl %eax, (%esi);jmp  <MmTrimAllSystemPagableMemory+>": 3,
                "je  <MmTrimAllSystemPagableMemory+>;cmpl %ecx, %ecx;jne  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edx;cmpl %ecx, (%edx)": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edx;cmpl %ecx, (%edx);je  <MmTrimAllSystemPagableMemory+>;movl %eax, %edi": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;movl (%eax), %eax;leal (%ecx,%eax,), %eax;cmpl %eax, %edi;jb  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl %eax, %edi;jb  <MmTrimAllSystemPagableMemory+>;calll *;movl %edi, %ecx;movb %al, -(%ebp)": 1,
                "movl %edi, %ecx;movb %al, -(%ebp);calll - <MmIsNonPagedSystemAddressValid+>;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>": 1,
                "je - <MmTrimAllSystemPagableMemory+>;xorl %esi, %esi;movl (%edi), %eax;movl (%edi), %edx;movb $, %cl": 1,
                "je  <MmTrimAllSystemPagableMemory+>;testl %ecx, %ecx;je  <MmTrimAllSystemPagableMemory+>;pushl (%ecx);pushl %ecx": 1,
                "calll - <MmIsThisAnNtAsSystem+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movb -(%ebp), %cl;calll *": 1,
                "movl , %eax;andl $, %eax;movl %eax, (%esi);calll *;movl , %ecx": 1,
                "decw (%eax);pushl $;pushl %eax;calll - <MmProbeAndLockSelectedPages+>;leave": 1,
                "pushl -(%ebp);jmp - <MmTrimAllSystemPagableMemory+>;pushl %edi;pushl %esi;pushl %ebx": 1,
                "subl $, %ebx;cmpl $, (%ebp);movl %eax, %esi;movl %esi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movb $, %cl;movl %edi, -(%ebp);calll *;pushl %edi;pushl $": 1,
                "movl %edi, -(%ebp);calll *;pushl %edi;pushl $;movb %al, -(%ebp)": 1,
                "andl $, %esi;movl %esi, -(%ebp);imull $, %esi, %esi;addl , %esi;pushl (%esi)": 1,
                "movl (%eax), %ecx;cmpl %ecx, %edx;jb  <MmTrimAllSystemPagableMemory+>;movl (%eax), %edx;leal (%ecx,%edx,), %ecx": 1,
                "orl $, %ecx;andl %edi, %eax;orl %edx, %eax;movl %ecx, (%esi);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "decl %edx;movl %edx, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;calll  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx": 1,
                "shrl $, %eax;movl , %eax;leal (%ecx,%eax), %esi;movl (%esi), %eax;andl %edi, %eax": 1,
                "popl %edx;je  <MmTrimAllSystemPagableMemory+>;testl %edx, %edx;jne  <MmTrimAllSystemPagableMemory+>;movl %ecx, %edx": 1,
                "xorl %ebx, %ebx;andl %edi, %edx;orl %ebx, %edx;movl -(%ebp), %ebx;je - <MmTrimAllSystemPagableMemory+>": 1,
                "calll  <_aullshr>;movl -(%ebp), %ecx;movl %eax, %esi;cmpl %esi, %ecx;je  <MmTrimAllSystemPagableMemory+>": 1,
                "testb $, %al;jne  <MmTrimAllSystemPagableMemory+>;testl %eax, %edi;jne  <MmTrimAllSystemPagableMemory+>;testl %ecx, %ecx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;testl %ecx, %ecx;je  <MmTrimAllSystemPagableMemory+>;pushl (%ecx);pushl %ecx": 1,
                "movl , %eax;addl $, (%ebp);movl %eax, (%ebx);addl $, %ebx;decl (%ebp)": 1,
                "je  <MmTrimAllSystemPagableMemory+>;pushl (%eax);pushl %eax;calll - <MmIsThisAnNtAsSystem+>;pushl ": 1,
                "movl %esi, -(%ebp);movl %esi, %eax;shrl $, %eax;andl $, %eax;subl %ebx, %eax": 1,
                "andl $, %eax;subl %ebx, %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);shrdl $, %ecx, %eax;shrl $, %ecx;movl %eax, %edi;andl $, %edi": 1,
                "shrdl $, %ecx, %eax;shrl $, %ecx;movl %eax, %edi;andl $, %edi;movl %edi, %ebx": 2,
                "movl %edi, %ebx;imull $, %ebx, %ebx;addl , %ebx;xorl %ecx, %ecx;calll  <MmTrimAllSystemPagableMemory+>": 2,
                "movl (%esi), %edx;movb $, %cl;calll  <_aullshr>;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);incl ;leal (%eax,%eax,), %eax;movl , %ecx;cmpl $-, (%ecx,%eax,)": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;andl $, -(%ebp);movl %edi, %ecx;xorl %edx, %edx;shldl $, %ecx, %edx": 1,
                "cmpl $, -(%ebp);jae  <MmTrimAllSystemPagableMemory+>;notl %ecx;movl , %edx;notl %edx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;andl %eax, -(%ebp);jmp - <MmTrimAllSystemPagableMemory+>;cmpl %eax, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;movl -(%ebp), %eax;incl (%eax);movb -(%ebp), %cl": 1,
                "movl , %eax;orl %eax, -(%ebp);cmpl , %edi;jbe  <MmTrimAllSystemPagableMemory+>;cmpl $, %edi": 1,
                "movl %ebx, %ecx;calll  <MmTrimAllSystemPagableMemory+>;incw (%ebx);movl (%ebx), %eax;andl $, %eax": 1,
                "shrl $, %ecx;andl $, %eax;movl %eax, -(%ebp);xorl %ecx, %ecx;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $, %eax;movl %eax, -(%ebp);xorl %ecx, %ecx;calll  <MmTrimAllSystemPagableMemory+>;orl $, %eax": 1,
                "orl (,%edx,), %eax;orl (,%edx,), %ecx;xorl %edx, %edx;shldl $, %edi, %edx;shll $, %edi": 1,
                "imull $, %ebx, %ebx;addl , %ebx;pushl $;pushl %esi;pushl %edi": 1,
                "andl %edi, %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ecx, (%esi);movl %eax, (%esi)": 1,
                "incl ;incw (%eax);movl (%esi), %eax;movl (%esi), %edx;movb $, %cl": 1,
                "andl , %ecx;incl ;calll  <MmTrimAllSystemPagableMemory+>;movl %eax, -(%ebp);movl %eax, %ebx": 1,
                "pushl %esi;pushl %eax;calll - <MmIsAddressValid+>;cmpw $, (%ebx);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "leal (%ecx), %edx;xorl %ecx, %edx;andl $, %edx;xorl %ecx, %edx;movl %edx, (%eax)": 1,
                "andl $, %edx;xorl %ecx, %edx;movl %edx, (%eax);decl (%edi);movb -(%ebp), %cl": 1,
                "movl -(%ebp), %ecx;xorl %edx, %edx;shldl $, %ecx, %edx;shll $, %ecx;orl %ecx, %eax": 1,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;retl;movl -(%ebp), %esp;orl $-, -(%ebp)": 2,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movb %al, %cl;andb $, %cl;movl -(%ebp), %edi": 1,
                "pushl $;pushl -(%ebp);calll ;movl $, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "xorl %ecx, %ecx;calll  <MmTrimAllSystemPagableMemory+>;orl $, %eax;movl %eax, %esi;xorl %eax, %eax": 1,
                "movl (%ebx), %edx;shrdl $, %edx, %ecx;shrl $, %edx;andl $, %ecx;orl (,%ecx,), %esi": 1,
                "movl %ebx, %eax;subl , %eax;cltd;pushl $;popl %ecx": 1,
                "subl , %eax;cltd;pushl $;popl %ecx;idivl %ecx": 2,
                "cmpw $, %cx;je  <MmTrimAllSystemPagableMemory+>;decl %ecx;movw %cx, (%eax);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ebx), %esi;movl (%ebx), %eax;movl %eax, -(%ebp);pushl $;calll - <MmIsDriverVerifying+>": 1,
                "pushl %edi;pushl (%ebp);calll - <MmIsAddressValid+>;jmp  <MmTrimAllSystemPagableMemory+>;pushl %ebx": 1,
                "subl %ecx, %eax;cltd;pushl $;popl %esi;idivl %esi": 1,
                "cltd;pushl $;popl %esi;idivl %esi;movl %eax, %ebx": 1,
                "movl -(%ebp), %ecx;calll  <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl;calll *%edi;cmpl $, -(%ebp)": 1,
                "calll - <MmIsAddressValid+>;testb $, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;movb $, %cl;calll *": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx;leal (%ecx), %eax;addl $, %ecx;movl (%ecx), %edx": 1,
                "movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl (%eax), %eax;pushl %ebx;pushl %edi": 1,
                "cmpl (%ebx), %eax;movl %eax, (%ebp);leal (%ecx,%eax), %ecx;jb  <MmTrimAllSystemPagableMemory+>;movl (%ebx), %edx": 1,
                "subl %edx, %ecx;cmpl (%ebx), %eax;jae - <MmTrimAllSystemPagableMemory+>;movl %eax, (%ebp);cmpl $, (%edi)": 1,
                "movl (%ebx), %eax;movl (%ebp), %ecx;movl (%ebx), %edx;leal (%eax,%ecx,), %ecx;leal (%eax,%edx,), %edi": 1,
                "cmpl %edi, %ecx;jb  <MmTrimAllSystemPagableMemory+>;movl (%ebx), %ebx;movl (%ebx), %ecx;movl (%ebx), %eax": 1,
                "movl (%ebx), %esi;pushl (%esi);andl $-, (%esi);orl $, (%esi);pushl %esi": 1,
                "sarl $, %eax;subl (%ecx), %eax;addl %edx, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl (%esi), %esi": 1,
                "movl (%esi), %ecx;leal (%ecx,%eax,), %eax;jmp - <MmTrimAllSystemPagableMemory+>;int;int": 1,
                "movl (%esi), %ebx;testl $, %ebx;leal (%esi), %eax;je  <MmTrimAllSystemPagableMemory+>;leal (%esi), %eax": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl (%ecx), %edi;cmpl %esi, %edi;jb  <MmTrimAllSystemPagableMemory+>;movl (%eax), %ebx": 1,
                "testl %eax, %eax;jne - <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "addl %edx, %esi;jmp  <MmTrimAllSystemPagableMemory+>;movl (%eax), %eax;subl %ecx, %esi;testl %eax, %eax": 1,
                "calll  <PoShutdownBugCheck+>;jmp - <MmTrimAllSystemPagableMemory+>;movb $, %cl;calll *;movb %al, -(%ebp)": 1,
                "calll *%edi;pushl %esi;calll  <MmTrimAllSystemPagableMemory+>;movl %eax, %esi;movl %esi, %ecx": 1,
                "calll *%edi;jmp - <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl;movb %bl, ;calll *%edi": 1,
                "movl (%esi), %eax;movl (%eax), %ebx;movl (%eax), %ecx;movl (%eax), %edi;movl (%eax), %edx": 1,
                "addl $, %eax;decl %ecx;jne - <MmTrimAllSystemPagableMemory+>;testl %edi, %edi;movl %edi, -(%ebp)": 1,
                "cmpl %eax, %edi;jle  <MmTrimAllSystemPagableMemory+>;movb %dl, %cl;calll *;negl %edi": 1,
                "jle  <MmTrimAllSystemPagableMemory+>;movb %dl, %cl;calll *;negl %edi;movl %edi, (%ebp)": 1,
                "movl %esi, -(%ebp);movl , %eax;movl (%eax), %eax;movl (%esi,%eax), %ecx;cmpl , %ecx": 1,
                "xorl %ecx, %ecx;shldl $, %eax, %ecx;shll $, %eax;andl $, %edx;andl $-, %edi": 1,
                "orl %edx, %eax;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ecx, (%ebx);movl %eax, (%ebx)": 1,
                "movl , %edx;movl (%edx), %edi;movl -(%ebp), %edx;movl %eax, (%edi,%edx);movl %ecx, (%edi,%edx)": 1,
                "movl -(%ebp), %edx;movl %eax, (%edi,%edx);movl %ecx, (%edi,%edx);movl , %eax;pushl (%eax)": 1,
                "movl %eax, (%edi,%edx);movl %ecx, (%edi,%edx);movl , %eax;pushl (%eax);pushl %ebx": 1,
                "pushl $;addl $, %ecx;pushl %ecx;pushl %esi;pushl %eax": 1,
                "addl $, %ebx;addl $, %esi;movl %esi, -(%ebp);cmpl -(%ebp), %ebx;jbe - <MmTrimAllSystemPagableMemory+>": 1,
                "calll *;orl $, (%esi);movb %al, %cl;calll *;pushl ": 1,
                "xaddl %eax, (%ecx);calll *;subl %esi, %edi;addl %edi, ;movb %al, %cl": 1,
                "cmpl (%esi), %edi;jne  <MmTrimAllSystemPagableMemory+>;andl $-, (%esi);decl %edi;movb %al, %cl": 1,
                "testl %esi, %esi;movb %al, (%ebp);movl , %eax;je  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax": 1,
                "calll *;testl %ebx, %ebx;popl %edi;je  <MmTrimAllSystemPagableMemory+>;movl %ebx, %ecx": 1,
                "pushl %esi;movl (%eax), %esi;pushl %edi;movl %eax, (%ebp);movl %fs:, %eax": 1,
                "movl (%eax), %esi;calll *;leal (%esi), %edx;decl (%edx);testb $, (%esi)": 1,
                "je  <MmTrimAllSystemPagableMemory+>;testl %edx, %edx;je  <MmTrimAllSystemPagableMemory+>;xorl %esi, %esi;movb %al, %cl": 1,
                "pushl $;addl $, %esi;pushl %esi;calll - <KeSetEvent>;xorl %eax, %eax": 1,
                "movb %al, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;pushl %ebx;leal -(%ecx), %eax;movl (%eax), %ebx": 1,
                "je  <MmTrimAllSystemPagableMemory+>;pushl %ebx;leal -(%ecx), %eax;movl (%eax), %ebx;cmpl (%ebp), %ebx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;addl $, %eax;cmpl %eax, %edx;je  <MmTrimAllSystemPagableMemory+>;leal -(%edx), %esi": 1,
                "testl %ebx, (%eax);je  <MmTrimAllSystemPagableMemory+>;movl , %eax;pushl %esi;movl (%eax), %esi": 1,
                "testl %eax, %eax;jne  <MmTrimAllSystemPagableMemory+>;incl ;movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "movl $, %ecx;movl %ebx, -(%ebp);shrl $, %esi;shrl $, %ebx;andl %ecx, %esi": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movb $, %cl;movl %ebx, -(%ebp)": 1,
                "cmpl %eax, %edi;jle  <MmTrimAllSystemPagableMemory+>;movl , %esi;calll *%esi;movl , %eax": 1,
                "movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);jmp - <MmTrimAllSystemPagableMemory+>;subl %edi, ": 1,
                "xaddl %eax, (%ecx);cmpl %ebx, %esi;jae  <MmTrimAllSystemPagableMemory+>;movl , %eax;addl $, %eax": 1,
                "movl -(%ebp), %ebx;movl %eax, -(%ebp);andl $, %eax;xorl %ecx, %ecx;shldl $, %eax, %ecx": 1,
                "pushl %esi;pushl -(%ebp);movl %eax, (%esi);calll - <MmIsAddressValid+>;addl $, %esi": 1,
                "movl %eax, (%esi);calll - <MmIsAddressValid+>;addl $, %esi;cmpl -(%ebp), %esi;jb - <MmTrimAllSystemPagableMemory+>": 1,
                "testb $, (%esi);jne  <MmTrimAllSystemPagableMemory+>;calll *;leal (%esi), %edx;movl (%edx), %esi": 1,
                "movl $, %ebx;movl $, %edi;movl (%ebx), %esi;jmp  <MmTrimAllSystemPagableMemory+>;testw $, %si": 1,
                "pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>;cmpl $, (%esi)": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>;cmpl $, (%esi);je  <MmTrimAllSystemPagableMemory+>": 1,
                "xorl %eax, %eax;incl %eax;jmp  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;pushl %eax": 1,
                "cmpl $, (%ebp);je  <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl;calll *;xorl %eax, %eax": 3,
                "jb  <MmTrimAllSystemPagableMemory+>;movl (%edx), %edx;addl %edi, %edx;cmpl %edx, %eax;jb  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl -(%ebp);calll - <MmGetVirtualForPhysical>;movl %eax, %ecx;shrl $, %ecx;andl $, %ecx": 1,
                "movl $, %edx;andl %edx, %ecx;xorl %esi, %esi;cmpl %edx, %ecx;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ebx), %eax;pushl $;pushl $;shrl $, %eax;pushl %eax": 1,
                "pushl $;shrl $, %eax;pushl %eax;pushl %edi;calll *(%edi)": 1,
                "calll *(%edi);incb -(%ebp);movzbl -(%ebp), %eax;movsbl , %ecx;cmpl %ecx, %eax": 1,
                "andl $, -(%ebp);pushl %ebx;movl (%ebp), %ebx;pushl %esi;leal -(%ebx,%eax), %eax": 1,
                "calll - <IoCsqRemoveIrp+>;jmp  <MmTrimAllSystemPagableMemory+>;addl $, %esi;movl %esi, %edi;shll $, %edi": 1,
                "je - <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;andl $, %eax;pushl %ecx;movl %eax, -(%ebp)": 1,
                "je  <MmTrimAllSystemPagableMemory+>;testl %ecx, %ecx;je  <MmTrimAllSystemPagableMemory+>;movl %esi, %ecx;andl $, %ecx": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl %esi, %ecx;andl $, %ecx;xorl %edx, %edx;orl %edx, %ecx": 1,
                "pushl $;pushl $;pushl %esi;pushl %eax;calll *(%eax)": 1,
                "andl $, -(%ebp);addl $, %ebx;addl $, %edi;cmpl (%ebp), %ebx;ja - <MmTrimAllSystemPagableMemory+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;popl %esi;popl %ebp": 1,
                "movl %ecx, (%ebx);movl (%edx), %ecx;movl %ecx, (%ebx);cmpl $, (%edx);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %ecx, (%ebx);cmpl $, (%edx);je  <MmTrimAllSystemPagableMemory+>;movl (%edx), %ecx;movl %ecx, (%eax)": 1,
                "popl %ecx;cmpw %cx, (%ebx);jbe  <MmTrimAllSystemPagableMemory+>;movw %cx, (%ebx);cmpw %cx, -(%eax)": 1,
                "movw %cx, -(%eax);movzwl -(%eax), %ecx;movl %eax, -(%eax);movl (%edx), %esi;movl %ecx, %edx": 1,
                "movl , %eax;shrl $, %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "andl $, %edx;xorl %eax, %eax;orl %eax, %edx;je - <MmTrimAllSystemPagableMemory+>;cmpl $, -(%ebp)": 1,
                "xorl %ebx, %ebx;pushl %edi;movl %ebx, -(%ebp);calll *%esi;cmpl %ebx, ": 1,
                "pushl %edi;movl %ebx, -(%ebp);calll *%esi;cmpl %ebx, ;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;cmpl , %eax;jae  <MmTrimAllSystemPagableMemory+>;pushl $;popl %eax": 1,
                "jbe  <MmTrimAllSystemPagableMemory+>;movl , %eax;subl , %eax;cmpl $, %eax;jle  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $-, %ebx;shll $, %eax;andl $, %edi;orl %ebx, %ecx;orl %edi, %eax": 2,
                "addl , %esi;calll *;movl (%esi), %ecx;andl $, %ecx;movb %al, %bl": 1,
                "cmpl %esi, %edi;je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl %edi;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %edi;calll - <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %edi, -(%ebp)": 2,
                "cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %edi, -(%ebp);movl (%ebp), %edi;pushl %ebx": 1,
                "movl %edi, -(%ebp);movl (%ebp), %edi;pushl %ebx;movl (%esi), %ebx;cmpl %ebx, %edi": 1,
                "movl (%ebp), %edi;pushl %ebx;movl (%esi), %ebx;cmpl %ebx, %edi;je  <MmTrimAllSystemPagableMemory+>": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl %ebx, -(%ebp);cmpl $, (%ebp);popl %ebx;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "popl %ebx;jne  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;movl %eax, (%edi);movl %esi, (%edi)": 1,
                "pushl %edi;movl (%esi), %edi;xorl %ebx, %ebx;cmpl %esi, %edi;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl %edi;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;cmpl $, -(%ebp);popl %edi;popl %esi;popl %ebx": 1,
                "popl %ebx;je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>": 1,
                "xaddl %eax, (%ecx);movl , %eax;addl $, %eax;movl %eax, (%ebp);movl $, %eax": 4,
                "negl %ecx;shrl $, %eax;incl %edi;addl %eax, %ecx;andl %edi, %ebx": 1,
                "andl %edi, %ebx;jne  <MmTrimAllSystemPagableMemory+>;movl , %eax;movl , %edx;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;testb $, (%ebp);je  <MmTrimAllSystemPagableMemory+>;movl , %edx;movl , %eax": 1,
                "movl , %eax;movl , %edx;shll $, %eax;subl %eax, %edx;andl $, (%ebp)": 1,
                "movl %fs:, %eax;testb $, (%eax);je  <MmTrimAllSystemPagableMemory+>;movl %fs:, %eax;testl %eax, %eax": 1,
                "movl , %eax;addl %ecx, %eax;cmpl , %eax;jbe  <MmTrimAllSystemPagableMemory+>;movl %fs:, %eax": 1,
                "pushl %ecx;calll - <MmDisableModifiedWriteOfSection+>;jmp  <MmTrimAllSystemPagableMemory+>;leal (%esi), %eax;cmpl %edx, %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;incl ;jmp  <MmTrimAllSystemPagableMemory+>;incl ;movl , %eax": 1,
                "cmpl %ecx, %eax;ja  <MmTrimAllSystemPagableMemory+>;calll - <MmTrimAllSystemPagableMemory+>;jmp  <MmTrimAllSystemPagableMemory+>;pushl $": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;cmpl $, (%ebp);setne %al;incl %eax": 1,
                "xorl %eax, %eax;cmpl $, (%ebp);setne %al;incl %eax;testl %ebx, %ebx": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebp)": 2,
                "shrl $, %eax;andl $, %eax;movl -(%eax), %eax;andl %edi, %eax;xorl %edx, %edx": 1,
                "pushl %ecx;movl , %eax;leal -(%eax), %ecx;cmpl %ecx, ;ja  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ebp), %ecx;addl $, %eax;movl %eax, (%ecx);movb $, %al;jmp  <MmTrimAllSystemPagableMemory+>": 2,
                "cmpl %eax, %edi;sbbl %eax, %eax;andl $, %eax;addl %edx, %eax;addl %eax, %ecx": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;addl $, ;movl (%ebp), %eax;movl (%ebp), %ecx;addl $, %eax": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;xorb %al, %al;popl %esi;popl %ebp;retl $": 1,
                "movl (%ebp), %eax;jne  <MmTrimAllSystemPagableMemory+>;subl %eax, ;jmp  <MmTrimAllSystemPagableMemory+>;subl %eax, ": 1,
                "cmpb $-, (%eax);leal (%edi), %ecx;jne  <MmTrimAllSystemPagableMemory+>;movb $, (%eax);calll  <ExReleaseFastMutexUnsafe>": 2,
                "jne  <MmTrimAllSystemPagableMemory+>;movb $, (%eax);calll  <ExReleaseFastMutexUnsafe>;andl $, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>": 2,
                "calll - <MmDisableModifiedWriteOfSection+>;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>;cmpl $, -(%ebp);je  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl %eax, %esi;jbe  <MmTrimAllSystemPagableMemory+>;movl , %eax;cmpl %eax, %ecx;jae  <MmTrimAllSystemPagableMemory+>": 1,
                "xorl %edx, %edx;divl %ecx;imull $-, %eax, %eax;addl %eax, %esi;pushl %esi": 1,
                "addl $, %ecx;cmpl %eax, %ecx;jb  <MmTrimAllSystemPagableMemory+>;calll - <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax": 1,
                "movl %edx, -(%ebp);jbe  <MmTrimAllSystemPagableMemory+>;testl %ebx, %ebx;je  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax": 1,
                "jne - <MmTrimAllSystemPagableMemory+>;movl , %esi;pushl $;xorl %edx, %edx;movl %esi, %eax": 1,
                "imull $, %eax, %eax;subl %eax, %ecx;cmpl %ecx, %edi;jbe  <MmTrimAllSystemPagableMemory+>;movl %edi, %ecx": 1,
                "jbe  <MmTrimAllSystemPagableMemory+>;calll *;xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl , %eax": 1,
                "testw $, %ax;je  <MmTrimAllSystemPagableMemory+>;andl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>;andl $, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;shrl $, %ecx;andl $, %ecx": 2,
                "movb $, %cl;calll  <_aullshr>;cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;testl %edx, %edx": 2,
                "testl %edx, %edx;je  <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;testl %edx, %edx": 1,
                "pushl (%ebp);calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmTrimAllSystemPagableMemory+>;leal (%edi), %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;orl $-, %eax;popl %ebp;retl $;popl %ebp": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;leal (%ebp), %eax;pushl %eax;calll - <MmBuildMdlForNonPagedPool+>;testl %eax, %eax": 1,
                "xorl %esi, %esi;incl %esi;cmpl %esi, %ecx;ja  <MmTrimAllSystemPagableMemory+>;cmpl $, %edx": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, %edx;ja  <MmTrimAllSystemPagableMemory+>;calll  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl %esi, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %esi, %eax;jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);jne  <MmTrimAllSystemPagableMemory+>;addl $, %edx;jmp  <MmTrimAllSystemPagableMemory+>;addl $, %edx": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;addl $, %edx;cmpl %edx, %edi;jge - <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;incl ;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;movl %eax, %ecx;shll $, %ecx;xorl %edx, %edx;cmpl %edx, (%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl , %eax;movl (%eax), %ebx;pushl %edi": 1,
                "movb %al, (%ebp);movl (%ebp), %eax;addl %esi, %eax;cmpl %eax, %esi;jae  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl ;calll  <RtlSetBits>;movl (%ebp), %ecx;addl %esi, %ecx;cmpl %ecx, %esi": 1,
                "movl %eax, %ecx;andl $, %ecx;shrl %cl, %edx;testb $, %dl;jne  <MmTrimAllSystemPagableMemory+>": 2,
                "pushl %edi;movl , %edi;movl %eax, %esi;movl %edi, %ecx;movl %ebx, %edx": 1,
                "cmpl %edi, %eax;jae  <MmTrimAllSystemPagableMemory+>;pushl %edx;pushl %ecx;pushl %esi": 1,
                "pushl %ecx;pushl %esi;pushl $;jmp  <MmTrimAllSystemPagableMemory+>;subl , %eax": 1,
                "subl , %eax;sarl $, %eax;movl %eax, %edi;calll *;movl , %ecx": 1,
                "movl (%ebx), %ecx;movl (%esi,%ecx), %edx;movl -(%ebp), %ecx;shrl %cl, %edx;testb $, %dl": 1,
                "retl $;pushl -(%ebp);subl %edi, %esi;shll $, %esi;addl -(%ebp), %esi": 1,
                "testl %esi, %esi;je  <MmTrimAllSystemPagableMemory+>;leal -(%esi), %ecx;pushl %ebx;movl , %ebx": 1,
                "andl $, %ecx;shrl %cl, %ebx;movl %ecx, -(%ebp);testb $, %bl;je  <MmTrimAllSystemPagableMemory+>": 1,
                "shrl %cl, %ebx;testb $, %bl;jne  <MmTrimAllSystemPagableMemory+>;leal -(%esi), %ecx;xorl %esi, %esi": 1,
                "leal (,%edi,), %eax;cmpl (%eax), %ecx;leal -(%ecx,%esi,), %edx;jae  <MmTrimAllSystemPagableMemory+>;movl %ecx, (%eax)": 1,
                "movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;andl $, (%edi);andl $, (%edi)": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;testl %edx, %edx;jne  <MmTrimAllSystemPagableMemory+>;movl %esi, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $, %eax;movl -(%eax), %esi;subl $, %eax;movl (%eax), %edx;pushl %ebx": 1,
                "movl %eax, -(%edx);movl %ecx, -(%edx);movl (%ebp), %eax;invlpg (%eax);popl %ebp": 1,
                "movl %eax, %esi;pushl %eax;shll $, %esi;calll  <KiDispatchInterrupt+>;movl %esi, %edx": 1,
                "movl %esi, %edx;movb $, %cl;popl %esi;jmp  <KiDispatchInterrupt+>;int": 1,
                "calll  <_allshr>;movl %eax, %edi;andl $, %eax;xorl %ecx, %ecx;shldl $, %eax, %ecx": 1,
                "movl %eax, -(%ebp);pushl %ebx;pushl %esi;movl , %esi;movl -(%ebp), %edx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edx;movb $, %cl;calll  <KiDispatchInterrupt+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;andl $, %eax;addl -(%ebp), %eax;jmp  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax": 1,
                "calll *;cmpb $, %al;ja  <MmTrimAllSystemPagableMemory+>;andl $, -(%ebp);cmpl , %ebx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;cmpl $, (%eax);je  <MmTrimAllSystemPagableMemory+>;xorl %edi, %edi;incl %edi": 1,
                "pushl (%ebp);calll  <ProbeForWrite>;jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, (%ebp);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;jmp  <MmTrimAllSystemPagableMemory+>;xorl %edi, %edi;incl %edi;pushl %ebx": 1,
                "cmpl %edi, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl;calll *;cmpl %edi, -(%ebp)": 1,
                "movb -(%ebp), %cl;calll *;cmpl %edi, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>;movl , %eax": 1,
                "calll *;cmpb $, %al;jbe  <MmTrimAllSystemPagableMemory+>;movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $, -(%ebp);movl (%ebp), %esi;cmpl %esi, -(%ebp);jae  <MmTrimAllSystemPagableMemory+>;movb (%ecx), %dl": 1,
                "jae  <MmTrimAllSystemPagableMemory+>;movb (%ecx), %dl;movl -(%ebp), %edi;movb %dl, -(%ebp,%edi);incl %ecx": 1,
                "movb %cl, (%eax);movl , %ecx;cmpl %ecx, (%ebp);jb  <MmTrimAllSystemPagableMemory+>;leal -(%ebp), %ecx": 1,
                "xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl %edi, (%eax);xorl %eax, %eax;incl %eax;jmp  <MmTrimAllSystemPagableMemory+>;pushl %esi": 1,
                "leal (%esi), %eax;movl %eax, (%ecx);movl , %eax;cmpl (%eax), %esi;jae  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $, %ecx;shrl %cl, %eax;testb $, %al;je  <MmTrimAllSystemPagableMemory+>;movl %esi, %eax": 1,
                "xorl %ecx, %ecx;shldl $, %eax, %ecx;pushl %edi;shll $, %eax;pushl %ecx": 1,
                "cmpl %edi, %eax;je  <MmTrimAllSystemPagableMemory+>;xorl %ecx, %ecx;orl $, %esi;cmpl %esi, (%eax)": 1,
                "jb - <MmTrimAllSystemPagableMemory+>;xorl %esi, %esi;incl %esi;calll - <MmTrimAllSystemPagableMemory+>;movl %esi, %eax": 1,
                "xorl %esi, %esi;jmp - <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;incl %eax;popl %esi": 1,
                "andl %ebx, %ecx;pushl $;popl %edx;movl $, %edi;je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl %eax, -(%ebp);movl %ecx, %eax;andl %ebx, %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl , %eax;shrdl $, %ecx, %edx;andl $, %edx;imull $, %edx, %edx": 1,
                "pushl $;jmp  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %eax;testl %eax, ;je  <MmTrimAllSystemPagableMemory+>": 1,
                "andl %ebx, %eax;pushl %ecx;movl %eax, -(%ebp);popl %eax;je - <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %ecx;movl %eax, -(%ebp);popl %eax;je - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax": 1,
                "jne - <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;movl (%edi), %eax;andl $, %eax;pushl $": 1,
                "andl %ebx, %eax;pushl %eax;calll - <MmProtectMdlSystemAddress+>;cmpl %ebx, %eax;je  <MmTrimAllSystemPagableMemory+>": 1,
                "je  <MmTrimAllSystemPagableMemory+>;calll *;movl (%esi), %edi;movl (%esi), %esi;movb %al, -(%ebp)": 1,
                "movl , %edx;movl , %ecx;andl %edi, %edx;andl %esi, %ecx;orl %ecx, %edx": 1,
                "xorl %ecx, %ecx;shrl $, %esi;orl %ecx, %edx;jne  <MmTrimAllSystemPagableMemory+>;pushl $": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;calll - <MmIsAddressValid+>;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl %fs:, %eax;movl %eax, %edi": 1,
                "movb $, %cl;calll *;pushl %ebx;pushl $;movb %al, -(%ebp)": 1,
                "movl %edi, ;calll *;movl (%esi), %ecx;movl (%esi), %ebx;movl %ecx, -(%ebp)": 1,
                "movl , %ecx;movl , %edx;andl -(%ebp), %ecx;andl %ebx, %edx;orl %ecx, %edx": 1,
                "pushl $;pushl (%ebp);pushl %ebx;jmp - <MmTrimAllSystemPagableMemory+>;xorl %ecx, %ecx": 1,
                "orl %ebx, %edx;jne  <MmTrimAllSystemPagableMemory+>;movb %al, %cl;calll *;movl %edi, %eax": 1,
                "calll *;movl %edi, %eax;andl $, %eax;xorl %ecx, %ecx;orl %ecx, %eax": 1,
                "calll *;jmp - <MmTrimAllSystemPagableMemory+>;movl %ebx, %eax;andl $, %eax;xorl %ecx, %ecx": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;movl , %edx;addl %eax, %edx;cmpl %edx, %ecx;jb  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl (%ebp);calll - <MmIsAddressValid+>;testl %eax, %eax;movl %eax, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "orl %ecx, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;calll  <KeiEoiHelper+>;cmpb $, %al": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;testl %ecx, %ecx;jne  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;calll  <KeiEoiHelper+>": 2,
                "movb -(%ebp), %cl;calll *;movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>;pushl $": 1,
                "movl , %edi;movl $, %esi;cmpb $, (%esi);jne  <MmTrimAllSystemPagableMemory+>;pushl %esi": 1,
                "movl (%ebp), %ecx;calll  <KeiEoiHelper+>;cmpb $, %al;je - <MmTrimAllSystemPagableMemory+>;pushl $": 1,
                "movl $, %eax;jl  <MmTrimAllSystemPagableMemory+>;movl $, %eax;pushl %eax;pushl $": 1,
                "movl -(%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp);calll *;movl (%edi), %ecx": 1,
                "calll *;movl (%edi), %ecx;movl %ecx, %eax;andl %ebx, %eax;xorl %edx, %edx": 1,
                "movl %eax, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>;movl , %eax;movl %eax, (%edi);movl , %eax": 1,
                "orl %ecx, %eax;je  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;movl (%esi), %edx;movl %eax, %ecx": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;movl (%esi), %edx;movl %eax, %ecx;andl %ebx, %ecx": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movl $, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>;andl $, %eax;xorl %ecx, %ecx": 1,
                "andl $, %eax;xorl %ecx, %ecx;orl %ecx, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl $, -(%ebp)": 1,
                "testl %ecx, ;je  <MmTrimAllSystemPagableMemory+>;movl , %ecx;movl , %edi;movl %ecx, %edx": 1,
                "orl %edx, %ecx;je  <MmTrimAllSystemPagableMemory+>;movl %eax, %ecx;movl %edx, %edi;shrdl $, %edi, %ecx": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl $, -(%ebp);xorl %edi, %edi;testl %ebx, %ebx;je  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $, %eax;xorl %ecx, %ecx;orl %ecx, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %ebx, %ecx": 3,
                "andl $, %eax;movl %eax, -(%ebp);pushl $;popl %eax;je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %eax, (%esi);movl (%esi), %eax;orb $, (%esi);movl %eax, (%esi);movl -(%ebp), %ecx": 1,
                "calll *;jmp  <MmTrimAllSystemPagableMemory+>;testl %ebx, %ebx;jne  <MmTrimAllSystemPagableMemory+>;cmpl $, %edi": 1,
                "movl %eax, (%esi);movl %ecx, (%esi);movl -(%ebp), %edi;cmpl $, (%edi);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movb %al, -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax": 1,
                "addl $, %eax;xorl %ecx, %ecx;movw (%eax), %cx;movzwl %cx, %ebx;andl , %ebx": 1,
                "shldl $, %edi, %edx;shll $, %edi;orl %edx, %ecx;movl , %edx;shrl $, %ebx": 2,
                "movl , %edx;shrl $, %ebx;orl %edi, %eax;movl , %edi;movl %edx, %ebx": 2,
                "jae  <MmTrimAllSystemPagableMemory+>;notl %edx;notl %edi;andl %edx, %eax;andl %edi, %ecx": 2,
                "movl %eax, (%esi);calll - <MmIsDriverVerifying+>;testl %eax, %eax;movl %eax, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %esi;pushl (%ebp);calll - <MmIsAddressValid+>;jmp  <MmTrimAllSystemPagableMemory+>;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl (%ebp);pushl %eax;calll - <MmIsDriverVerifying+>": 1,
                "movl $, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %ebx, %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl %ebx;pushl %esi;pushl (%ebp)": 1,
                "movl %eax, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;calll *;movb %al, %bl;movw (%edi), %ax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;cmpl $, (%edi);jb  <MmTrimAllSystemPagableMemory+>;decl ;decw (%edi)": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;decl ;decw (%edi);jmp  <MmTrimAllSystemPagableMemory+>;cmpw $, %ax": 1,
                "addl $, %eax;pushl %eax;calll - <MmIsDriverVerifying+>;movb $, (%esi);movl -(%ebp), %eax": 1,
                "movl %fs:, %eax;cmpb $, (%eax);jl  <MmTrimAllSystemPagableMemory+>;pushl $;pushl $": 1,
                "cmpb $, (%eax);jl  <MmTrimAllSystemPagableMemory+>;pushl $;pushl $;pushl $": 1,
                "cmpl %ebx, (%esi);je  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;subl (%esi), %eax;leal (,%eax,), %eax": 1,
                "movl $, -(%ebp);movl %edi, %edx;movl %ebx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax": 1,
                "movl %ebx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmTrimAllSystemPagableMemory+>;pushl $": 1,
                "pushl %edi;calll  <PsReturnProcessPagedPoolQuota>;testl %ebx, %ebx;je  <MmTrimAllSystemPagableMemory+>;pushl %ebx": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;leal (%edi), %eax;addl %ebx, (%eax);movl (%eax), %eax;leal (%edi), %ecx": 1,
                "andl $, %ebx;jmp  <MmTrimAllSystemPagableMemory+>;movl , %ecx;movl %ebx, %eax;shrl $, %eax": 1,
                "shrl $, %eax;leal (%ecx,%eax,), %eax;movl (%eax), %edx;movl %ebx, %ecx;andl $, %ecx": 1,
                "xorl %edx, %edx;incl %edx;shll %cl, %edx;orl %edx, (%eax);movl , %eax": 1,
                "calll  <RtlSetBits>;movl (%ebp), %ecx;movl , %eax;cmpl %ecx, (%eax);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl %edi;calll  <PsReturnProcessNonPagedPoolQuota>;testb $-, (%esi)": 1,
                "movl (%ebp), %ebx;movl %ebx, %edx;negl %edx;movl %edx, (%ebp);movl (%ebp), %eax": 1,
                "movl %eax, (%ebx);leal (%edi), %ebx;movl %ebx, %edx;movl %esi, %ecx;movl %ebx, (%ebp)": 1,
                "leal -(%ebx), %eax;movl (%eax), %ebx;pushl $;pushl %eax;calll  <ExFreePoolWithTag>": 1,
                "movl (%ebp), %ebx;addl $, %edi;cmpl %esi, (%edi);jne  <MmTrimAllSystemPagableMemory+>;movl (%ebx), %eax": 1,
                "movl -, %ebx;movl %ebx, %eax;orl $, %eax;movl %eax, ;movl , %eax": 1,
                "movzbl %bl, %ecx;orl $-, %ecx;andl %ecx, -;cmpl $-, %eax;popl %ebx": 1,
                "movl (%ebp), %ecx;shll $, %eax;movl %eax, (%ecx);jmp  <MmTrimAllSystemPagableMemory+>;movl (%esi), %ecx": 1,
                "testl %ecx, %ecx;je  <MmTrimAllSystemPagableMemory+>;movl (%ecx), %esi;shll $, %esi;orl $, %esi": 1,
                "cmpl %ecx, (%ebp);jae  <MmTrimAllSystemPagableMemory+>;decl %edi;notl %edi;decl %esi": 1,
                "leal (%esi,%edi), %edx;leal -(%edi), %eax;leal -(%edx), %esi;shll $, %ecx;notl %eax": 1,
                "leal (%eax), %esi;movl %esi, %ecx;movb $, -(%ebp);calll *;movl (%ebp), %ecx": 1,
                "testl %edi, (%ebx);jne  <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax": 1,
                "movl (%eax), %esi;testb $-, (%esi);je  <MmTrimAllSystemPagableMemory+>;cmpl (%eax), %ecx;jb  <MmTrimAllSystemPagableMemory+>": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;movl %ebx, (%ecx);movl (%eax), %esi;movl %esi, (%eax);movl %esi, -(%ebp)": 1,
                "movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <MmTrimAllSystemPagableMemory+>;movl %ebx, (%eax);movl (%ecx), %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "cmpl $-, (%ebp);jne  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "movl $, %ebx;jmp  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;cmpl %eax, -(%ebp);je  <MmTrimAllSystemPagableMemory+>": 1,
                "addl $, %ecx;movl (%ecx), %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl %eax, %ebx;movl (%eax), %edx": 1,
                "movl %eax, %ebx;movl (%eax), %edx;testb $-, (%edx);je  <MmTrimAllSystemPagableMemory+>;cmpl (%eax), %edi": 1,
                "shrl $, %esi;andl %eax, %esi;subl %ecx, %esi;movl %esi, -(%ebp);shrl $, %edi": 1,
                "subl $, %edi;movl %edi, -(%ebp);movl %ebx, %eax;shll $, %eax;movl %eax, (%ebp)": 1,
                "andl $, -(%ebp);movl %eax, %esi;shrl $, %esi;movl (%edx), %ecx;movl %ecx, -(%ebp)": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl %edi, %ecx;andl $, %ecx;xorl %edx, %edx;orl %edx, %ecx": 1,
                "pushl (%ebp);calll - <ZwYieldExecution+>;movl %edx, -(%ebp);movl (%esi), %ecx;testb $, %cl": 1,
                "movb -(%ebp), %cl;calll *;xorl %ebx, %ebx;xorl %esi, %esi;incl %esi": 1,
                "xorl %ebx, %ebx;xorl %esi, %esi;incl %esi;cmpl %esi, -(%ebp);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %eax, -(%ebp);calll  <ExSystemExceptionFilter>;retl;movl -(%ebp), %esp;orl $-, -(%ebp)": 20,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi": 3,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi;movl (%ebp), %edi": 2,
                "cmpl $-, (%ebp);movl (%eax), %ebx;jne  <MmTrimAllSystemPagableMemory+>;movl %ebx, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "calll  <ObReferenceObjectByHandle>;testl %eax, %eax;movl (%ebp), %ecx;movl %ecx, -(%ebp);jl  <MmTrimAllSystemPagableMemory+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl (%eax), %edx;testb $-, (%edx);je  <MmTrimAllSystemPagableMemory+>;cmpl (%eax), %edi": 1,
                "je  <MmTrimAllSystemPagableMemory+>;testw $, %bx;jne  <MmTrimAllSystemPagableMemory+>;movl %edi, %ecx;shrl $, %ecx": 1,
                "leal (%ecx), %ebx;shll $, %ebx;movl %ebx, %edi;shll $, %edi;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %ebx, -(%ebp);movl %edi, (%ebp);jbe - <MmTrimAllSystemPagableMemory+>;movb (%ebp), %cl;calll *": 1,
                "calll  <ObfDereferenceObject>;movl %esi, %eax;popl %ebx;popl %esi;popl %edi": 1,
                "je  <MmTrimAllSystemPagableMemory+>;movl %fs:, %eax;movl (%eax), %eax;testb $-, (%eax);je  <MmTrimAllSystemPagableMemory+>": 1,
                "testb $-, (%eax);je  <MmTrimAllSystemPagableMemory+>;pushl %ebx;pushl %eax;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %esi;movl (%esi), %edx": 3,
                "pushl %edi;calll *;movl (%ebp), %esi;movl (%esi), %edx;movl %edx, %edi": 1,
                "movl (%esi), %edx;movl %edx, %edi;andl $, %edi;xorl %ecx, %ecx;orl %ecx, %edi": 1,
                "movl %esi, %edx;popl %esi;popl %ebx;popl %ebp;retl $": 1,
                "andl $, %ecx;orl $, %ecx;movl %esi, (%eax);movl %ecx, (%eax);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "incl ;cmpl $-, %esi;jne  <MmTrimAllSystemPagableMemory+>;movl %ecx, ;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl %ecx, ;jmp  <MmTrimAllSystemPagableMemory+>;movl %esi, %edi;imull $, %edi, %edi": 1,
                "movl %ecx, ;jmp  <MmTrimAllSystemPagableMemory+>;movl %esi, %edi;imull $, %edi, %edi;movl %ecx, (%edi,%edx)": 1,
                "cmpw %bx, %ax;jbe  <MmTrimAllSystemPagableMemory+>;cmpl %ebx, (%esi);je  <MmTrimAllSystemPagableMemory+>;movzwl %ax, %eax": 1,
                "andl $, %eax;cmpl $, ;pushl %edi;movl (,%eax,), %edi;movl (%edi), %eax": 1,
                "popl %ecx;cltd;idivl %ecx;pushl %eax;pushl ": 1,
                "calll  <RtlSetBit>;cmpl $, %edi;jne  <MmTrimAllSystemPagableMemory+>;testb $, (%esi);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl $, %edi;movl $, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, %edi;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "imull $, %eax, %eax;movl %ecx, (%eax,%edx);jmp  <MmTrimAllSystemPagableMemory+>;movl %ecx, (%edi);movl %ebx, (%esi)": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;incl %ecx;jbe  <MmTrimAllSystemPagableMemory+>;imull $, (%ecx), %ebp;decl %edi": 1,
                "andb %ch, %fs:(%eax);jbe  <MmTrimAllSystemPagableMemory+>;andb %ch, (%edi);arpl %si, (%ebp);jb  <MmTrimAllSystemPagableMemory+>": 1,
                "andb %al, (%eax);addb %ah, ;andb %ah, ;orb (%eax), %al;int": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>;movl %ecx, -(%ebp)": 1,
                "movl (%eax), %eax;andl $, -(%ebp);movl , %esi;xorl %ebx, %ebx;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);incl %ebx;movl -(%ebp), %eax;andl $, (%eax);movb %bl, %cl": 1,
                "calll *%esi;movl %ebx, -(%ebp);pushl $;pushl $;pushl $": 1,
                "pushl $;pushl $;calll  <DbgPrint>;movl , %eax;popl %ecx": 1,
                "shrl $, %eax;subl , %eax;pushl $;pushl %eax;pushl ": 1,
                "pushl $;calll  <DbgPrint>;addl $, %esp;calll  <DbgBreakPoint>;cmpl %ebx, %edi": 1,
                "pushl ;pushl ;pushl $;jmp  <MmTrimAllSystemPagableMemory+>;movl , %eax": 1,
                "pushl %edx;pushl %ecx;pushl %eax;pushl $;calll - <KeBugCheckEx>": 1,
                "pushl %eax;pushl $;calll - <KeBugCheckEx>;int;int": 3,
                "je  <MmTrimAllSystemPagableMemory+>;movl %ecx, %edi;imull $, %edi, %edi;movl %edx, (%edi,%eax);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "andl $, %eax;xorl %ecx, %ecx;orl %ecx, %eax;jne  <MmTrimAllSystemPagableMemory+>;incl ": 1,
                "pushl $;calll - <KeSetTimerEx>;movl -(%ebp), %edx;jmp  <MmTrimAllSystemPagableMemory+>;testb $, (%esi)": 1,
                "jg  <MmTrimAllSystemPagableMemory+>;decl %eax;cmpl $, %ebx;movl %eax, (%edi);jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movl -(%ebp), %edx;orb $, (%esi);incl ;pushl $;movl $, %edi": 1,
                "shll $, %eax;xorl (%esi), %eax;andl $, %eax;xorl %eax, (%esi);cmpl $, %ebx": 1,
                "movl , %eax;andl $, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;cmpl , %eax;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "testb $, (%esi);jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, %ebx;jne  <MmTrimAllSystemPagableMemory+>;testb $, %al": 1,
                "incl (%eax);movl , %eax;cmpl , %eax;jb  <MmTrimAllSystemPagableMemory+>;movl , %eax": 1,
                "movl , %eax;cmpl , %eax;jb  <MmTrimAllSystemPagableMemory+>;movl , %eax;cmpl , %eax": 1,
                "shrl $, %eax;andl $, %eax;andl $, %eax;orl $, %eax;shll $, %eax": 1,
                "movl , %eax;andl -(%ebp), %eax;movl (,%ebx,), %ecx;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax": 1,
                "pushl (%ebp);pushl ;calll  <RtlSetBit>;movl , %eax;xorl %ebx, %ebx": 1,
                "movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl (%esi), %ecx;cmpl $-, %ecx;movl (%esi), %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl %ecx, (%edi);jmp  <MmTrimAllSystemPagableMemory+>;movl , %edx;imull $, %eax, %eax": 1,
                "imull $, %eax, %eax;movl %ecx, (%eax,%edx);movl -(%ebp), %ecx;movl %ebx, (%esi);movl %ebx, (%esi)": 1,
                "calll - <KeSetEvent>;decl ;movl , %eax;cmpl , %eax;popl %edi": 1,
                "jae  <MmTrimAllSystemPagableMemory+>;calll - <MmIsThisAnNtAsSystem+>;leave;retl $;int": 1,
                "movl , %eax;pushl %ebx;pushl %esi;movl %ecx, %esi;movl %esi, -(%ebp)": 1,
                "imull $, %esi, %esi;addl , %esi;pushl %edi;movl (%esi), %edi;shrl $, %edi": 1,
                "addl , %esi;pushl %edi;movl (%esi), %edi;shrl $, %edi;movl %edx, %ebx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;pushl -(%ebp);pushl ;calll  <RtlSetBit>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;shrl $, %eax;andl $, %eax;movl (,%eax,), %eax;decl (%eax)": 1,
                "movl %edx, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;movl , %eax;imull $, %ecx, %ecx;movl %edx, (%ecx,%eax)": 1,
                "pushl %esi;pushl ;calll  <RtlSetBit>;cmpl $, ;jne - <MmTrimAllSystemPagableMemory+>": 1,
                "movl $, %ecx;popl %ebx;jmp - <MmTrimAllSystemPagableMemory+>;movl , %eax;incl ": 1,
                "popl %ebx;jmp - <MmTrimAllSystemPagableMemory+>;movl , %eax;incl ;cmpl $-, %eax": 1,
                "movl %edi, ;orl $-, (%esi);andb $-, (%esi);movl %eax, (%esi);movl (%esi), %eax": 1,
                "pushl ;calll - <KeSetEvent>;movl , %eax;movl , %ecx;andl %edi, %eax": 1,
                "movl %edi, (%ecx);movl %ebx, (%ecx);incl (%eax);movl %esi, (%eax);orl $-, (%esi)": 1,
                "int;int;int;int;movl %ecx, %edx": 2,
                "andl %ecx, %edx;popl %esi;jmp - <MmTrimAllSystemPagableMemory+>;movl , %ecx;movl (%eax,%ecx), %eax": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl , %ecx;cmpl %esi, %ecx;je  <MmTrimAllSystemPagableMemory+>;movl , %edx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl , %ecx;movl (%eax,%ecx), %eax;cmpl %esi, %eax;je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl , %ecx;cmpl %esi, %ecx;jne  <MmTrimAllSystemPagableMemory+>;movl , %ecx;cmpl %esi, %ecx": 1,
                "orl $, %eax;movl %eax, %ecx;movl (%ebp), %eax;xorl %edx, %edx;shldl $, %ecx, %edx": 1,
                "calll - <MmIsAddressValid+>;movb %bl, %cl;calll *;movl %esi, %eax;popl %esi": 1,
                "pushl %ecx;calll - <KeFlushEntireTb>;pushl (%esi);pushl (%esi);calll  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %edi, %ecx;popl %edi;popl %esi;jmp - <MmTrimAllSystemPagableMemory+>;testb %al, %cl": 1,
                "je  <MmTrimAllSystemPagableMemory+>;andl $, %eax;orl $, %eax;movl %edi, %ecx;movl %eax, (%esi)": 1,
                "popl %esi;jmp - <MmTrimAllSystemPagableMemory+>;popl %edi;popl %esi;retl": 1,
                "pushl %ecx;pushl %esi;movl %ecx, %esi;imull $, %esi, %esi;addl , %esi": 1,
                "incl %ebx;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>;testb %bl, (%eax);je  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %eax;pushl $;movl %ecx, -(%ebp);calll ;testb $, (%esi)": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl %ebx, -(%ebp);movl %fs:, %eax;movl (%esi), %ecx;movl (%eax), %eax": 1,
                "notl %ecx;notl %ebx;andl %edx, %ecx;andl %edi, %ebx;movl (%esi), %edi": 1,
                "movl (%esi), %edi;andl $, %ecx;andl $, %edi;movl %ebx, %edx;orl %edi, %ecx": 1,
                "xorl %eax, %eax;incl %eax;movl , %ecx;testl %ecx, %ecx;je  <MmTrimAllSystemPagableMemory+>": 1,
                "subl %eax, %edx;negl %ecx;shrl $, %edx;addl %edx, %ecx;movl %ecx, ": 1,
                "pushl $;addl $, %eax;pushl %eax;movl $, (%esi);calll - <KeSetEvent>": 1,
                "movl (%esi), %ecx;movl (%ecx), %eax;andl $, %eax;xorl %edx, %edx;orl %edx, %eax": 1,
                "andl $, %eax;xorl %edx, %edx;orl %edx, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %ecx, %eax": 2,
                "calll  <KiDispatchInterrupt+>;movl (%esi), %edx;movb $, %cl;calll  <KiDispatchInterrupt+>;addl $, %esi": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %edx;movl %edx, %eax;andl $, %eax": 1,
                "testl %ecx, %ecx;je  <MmTrimAllSystemPagableMemory+>;cmpl $-, %ecx;je  <MmTrimAllSystemPagableMemory+>;movl %ecx, %eax": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;popl %ebp;retl $;int;int": 2,
                "movl (%ebx), %eax;pushl %esi;pushl %edi;xorl %edi, %edi;movl %ecx, %edx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;andl $, -(%ebp);shrdl $, %eax, %ecx;movl $, %edi;andl %edi, %ecx": 1,
                "shrl $, %eax;movl , %eax;addl %eax, %esi;movl (%esi), %edx;movl %edx, -(%ebp)": 1,
                "movl (%esi), %eax;orl $, %edx;andl $, %eax;orl %ecx, %eax;movl %edx, (%esi)": 1,
                "andl $, %eax;orl %ecx, %eax;movl %edx, (%esi);jne  <MmTrimAllSystemPagableMemory+>;testb $, %dl": 1,
                "pushl (%esi);calll - <MmTrimAllSystemPagableMemory+>;andl $, (%esi);shrl $, %ebx;andl $, %ebx": 1,
                "movl %edx, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;calll - <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;shrl $, %eax": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;calll - <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;shrl $, %eax;andl $, %eax": 1,
                "je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl %eax;pushl -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "addl %eax, %edx;movl (%edx), %eax;shrl $, %eax;xorl %ebx, %ebx;andl $, %eax": 1,
                "movl (%ebp), %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx;orl $, (%esi);calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ebp), %ecx;calll  <MmTrimAllSystemPagableMemory+>;movl , %edx;movl %eax, %esi;movl (%edx,%esi,), %eax": 1,
                "je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl %edi;pushl %esi;pushl %eax": 1,
                "pushl -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>;xorl %esi, %esi": 1,
                "pushl $;pushl (%ebp);calll - <MmTrimAllSystemPagableMemory+>;pushl (%ebp);pushl %esi": 1,
                "jmp - <MmTrimAllSystemPagableMemory+>;movl %ecx, %edx;andl $, %edx;movl %edx, -(%ebp);movl %edi, %edx": 1,
                "shrl $, %eax;movl (%esi), %ecx;orl $, (%esi);andl %edi, %ecx;movl %ecx, %eax": 1,
                "movl (%esi), %ecx;orl $, (%esi);andl %edi, %ecx;movl %ecx, %eax;imull $, %eax, %eax": 1,
                "pushl (%esi);calll - <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl (%ebp), %eax": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl (%ebp), %eax;decl (%eax);jmp - <MmTrimAllSystemPagableMemory+>;xorl %ecx, %ecx": 1,
                "testl %eax, %eax;je - <MmTrimAllSystemPagableMemory+>;jmp - <MmTrimAllSystemPagableMemory+>;int;int": 1,
                "movl (%ebp), %ecx;addl (%ecx), %edx;cmpl (%ecx), %edx;ja  <MmTrimAllSystemPagableMemory+>;movl %edi, -(%ebp)": 1,
                "je  <MmTrimAllSystemPagableMemory+>;pushl %eax;pushl %eax;pushl -(%ebp);movl %esi, %eax": 1,
                "subl $, %esi;calll *;movb %al, -(%ebp);andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "shll $, %ebx;subl %ebx, %edx;movl (%ebp), %ebx;addl %ecx, %edx;cmpl (%ebx), %edx": 1,
                "movl %eax, -(%ebp);movl %edi, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;movl (%ecx), %edx;leal (%eax,%esi,), %eax": 1,
                "cmpb $, (%ebx);je  <MmTrimAllSystemPagableMemory+>;movb $, (%ebx);movl (%ecx), %ecx;addl %eax, %ecx": 1,
                "movl -(%eax), %eax;shrdl $, %eax, %edx;shrl $, %eax;xorl %eax, %eax;incl %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;xorl %esi, %esi;cmpl %esi, %edx;je  <MmTrimAllSystemPagableMemory+>;shrl $, %eax": 1,
                "shrdl $, %eax, %edx;shrl $, %eax;andl $, %edx;andl $, -(%ebp);movl %ecx, -(%ebp)": 1,
                "andl $, -(%ebp);movl %ecx, -(%ebp);decl -(%ebp);je  <MmTrimAllSystemPagableMemory+>;addl $, %ecx": 1,
                "calll - <MmIsDriverVerifying+>;testl %eax, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;leal (%eax,%esi,), %eax": 1,
                "movl -(%ebp), %eax;leal (%eax,%esi,), %eax;andb $-, (%eax);andl $, (%edi);movl %edi, %ecx": 1,
                "imull $, %edx, %edx;shrl $, %eax;movl , %eax;cmpl %ebx, (%edx,%eax);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ecx), %ebx;movl %edi, %eax;shrl $, %eax;andl $, %eax;decl %ebx": 1,
                "movl (%esi), %eax;movl $, %edx;andl %edx, %ecx;pushl %edi;movl (%esi), %edi": 1,
                "movl $, %edx;andl %edx, %ecx;pushl %edi;movl (%esi), %edi;orl $, %ecx": 1,
                "movl (%esi), %edi;movl %ecx, %eax;shrl $, %eax;andl $, %eax;xorl %edx, %edx": 1,
                "andl $, %eax;xorl %edx, %edx;leal -(%edi), %ebx;divl %ebx;movl (%esi), %eax": 1,
                "pushl %ecx;pushl %edx;pushl $;pushl $;calll - <KeBugCheckEx>": 1,
                "cmpl , %ecx;jb - <MmTrimAllSystemPagableMemory+>;cmpl , %ecx;jae  <MmTrimAllSystemPagableMemory+>;decl ": 1,
                "cmpl , %ecx;jae  <MmTrimAllSystemPagableMemory+>;decl ;jmp  <MmTrimAllSystemPagableMemory+>;decl ": 1,
                "decl (%edx);testb $, %ah;je  <MmTrimAllSystemPagableMemory+>;movl (%edx), %esi;testl %esi, %esi": 1,
                "orl $, %ecx;popl %ebx;movl %edx, %eax;jmp  <MmTrimAllSystemPagableMemory+>;incl %edx": 1,
                "movl %edx, %eax;jmp  <MmTrimAllSystemPagableMemory+>;incl %edx;cmpl %edi, %edx;jb  <MmTrimAllSystemPagableMemory+>": 2,
                "cmpl %ecx, (%esi,%edx,);jne - <MmTrimAllSystemPagableMemory+>;andl $, (%esi,%edx,);popl %edi;popl %esi": 1,
                "xorl %edx, %edx;andl $, %ecx;divl %ebx;movl %edx, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%edi), %esi;cmpl %esi, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl (%ecx,%eax,), %eax;shrl $, %eax": 1,
                "cmpl %eax, %edx;jne  <MmTrimAllSystemPagableMemory+>;leal -(%eax), %edx;jmp  <MmTrimAllSystemPagableMemory+>;cmpl (%edi), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;movl (%edx), %eax": 1,
                "movl %esi, (%ebp);andl $, %esi;subl $, %esi;movl %ebx, (%edi);movl (%esi), %eax": 2,
                "movl (%esi), %eax;movl (%esi), %ecx;movl (%ebp), %edx;shrdl $, %ecx, %eax;shrl $, %ecx": 3,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl -(%ebp), %edx;shll $, %ecx;movl %ecx, (%edx)": 1,
                "andl $, %eax;xorl %edx, %edx;orl %edx, %eax;jne  <MmTrimAllSystemPagableMemory+>;calll - <MmIsAddressValid+>": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;testl %edx, %edx;jne  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;pushl %edi;movl %fs:, %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "idivl %ecx;incl %eax;movl %eax, -(%ebp);shll $, %eax;pushl %eax": 1,
                "movl , %ebx;jmp  <MmTrimAllSystemPagableMemory+>;movb (%ebp), %cl;calll *%ebx;pushl $": 1,
                "pushl %eax;pushl %edi;pushl -(%ebp);calll  <MmTrimAllSystemPagableMemory+>;movl %eax, %edi": 1,
                "calll  <MmTrimAllSystemPagableMemory+>;movl %eax, %edi;movl -(%ebp), %eax;orl $, %eax;pushl %eax": 1,
                "xorl %eax, %eax;popl %esi;incl %eax;popl %ebx;popl %edi": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi": 2,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl %eax, %edi;andl $, %edi": 1,
                "je  <MmTrimAllSystemPagableMemory+>;cmpl $, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;leal (%ebx,%edi), %eax;cmpl %eax, %ebx": 1,
                "leal (%ebx,%edi), %eax;cmpl %eax, (%ebp);jb - <MmTrimAllSystemPagableMemory+>;leal -(%ebx,%edi), %eax;xorl %ebx, %eax": 1,
                "je  <MmTrimAllSystemPagableMemory+>;andl %esi, %ebx;addl (%ebp), %ebx;movl %ebx, -(%ebp);movl , %eax": 1,
                "jae  <MmTrimAllSystemPagableMemory+>;leal (%edi,%ecx), %edx;cmpl (%ebp), %edx;ja  <MmTrimAllSystemPagableMemory+>;pushl %ecx": 1,
                "jne - <MmTrimAllSystemPagableMemory+>;movb (%ebp), %cl;calll *;xorl %eax, %eax;popl %edi": 1,
                "leal (%ebx,%edi), %eax;cmpl (%ebp), %eax;movl %eax, (%ebp);ja - <MmTrimAllSystemPagableMemory+>;pushl %edi": 1,
                "pushl ;calll  <RtlClearBits>;movl , %eax;movl -(%ebp), %ecx;movl %ebx, %esi": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;calll *;movb %al, (%ebp);movl (%esi), %eax;pushl %edi": 1,
                "movl (%esi), %ecx;cmpl %edi, %ecx;jne  <MmTrimAllSystemPagableMemory+>;movl %eax, (%edx);movl %edi, (%eax)": 1,
                "movl %esi, (%ecx);jmp  <MmTrimAllSystemPagableMemory+>;movl %eax, (%edx);movl %edi, (%eax);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl %edi, %esi;je  <MmTrimAllSystemPagableMemory+>;movl %esi, (%edx);movl %edi, (%esi);movl (%esi), %esi": 1,
                "movl %eax, (%ecx);jmp  <MmTrimAllSystemPagableMemory+>;movl (%edx), %edx;cmpl %edi, (%edx);jne - <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%edx), %edx;cmpl %edi, (%edx);jne - <MmTrimAllSystemPagableMemory+>;movl (%edx), %edi;movl (%edx), %ebx": 2,
                "jmp - <MmTrimAllSystemPagableMemory+>;movl %eax, (%ecx);movl %esi, (%eax);movl %eax, (%esi);jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl %edi, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;movl %edi, (%eax);popl %edi": 1,
                "movl %edi, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;movl %edi, (%eax);popl %edi;popl %esi": 1,
                "int;int;movl (%edx), %eax;jmp  <MmTrimAllSystemPagableMemory+>;cmpl (%eax), %ecx": 1,
                "movl (%edx), %eax;jmp  <MmTrimAllSystemPagableMemory+>;cmpl (%eax), %ecx;jae  <MmTrimAllSystemPagableMemory+>;movl (%eax), %eax": 1,
                "cmpl %eax, %edx;movl %eax, (%ebp);jae  <MmTrimAllSystemPagableMemory+>;movl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);jmp  <MmTrimAllSystemPagableMemory+>;movl %eax, %edx;movl (%edx), %eax": 1,
                "leal -(%edx), %eax;cmpl %eax, (%ebp);ja  <MmTrimAllSystemPagableMemory+>;cmpl %edx, (%ebp);movl (%ebp), %eax": 1,
                "decl %edi;notl %edi;andl %edi, %eax;movl %eax, (%ecx);xorl %eax, %eax": 1,
                "orl %edx, %eax;movl %eax, (%esi);movl (%ebp), %eax;leal (%esi,%eax,), %eax;andl $, %ecx": 1,
                "shrdl $, %eax, %ebx;pushl %edi;movl $, %edi;shrl $, %eax;andl %edi, %ebx": 1,
                "orl %edx, %eax;movl %eax, (%esi);movl -(%ebp), %eax;leal (%esi,%eax,), %eax;andl $, %ecx": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;pushl %edi;movl %eax, %edx;movl %ecx, %edi": 1,
                "orl %edx, %eax;movl %eax, (%esi);leal (%esi,%edi,), %eax;andl $-, %ebx;orl %ebx, %ecx": 1,
                "andl $-, %ebx;orl %ebx, %ecx;movl %ecx, (%esi);movl (%ebp), %esi;movl , %edx": 1,
                "shrl $, %ecx;testb $, (%ebx);je  <MmTrimAllSystemPagableMemory+>;movl -(%eax), %esi;jmp  <MmTrimAllSystemPagableMemory+>": 1,
                "pushl %edi;je  <MmTrimAllSystemPagableMemory+>;pushl $;pushl $;pushl $": 1,
                "movl %ecx, %edi;movl %edx, %ecx;andl $, %ecx;movl %ecx, (%eax);movl %esi, (%eax)": 1,
                "calll *;pushl $;popl %ecx;movl , %eax;movl $, (%esi)": 1,
                "orl $-, %eax;pushl %eax;xorl %edx, %edx;pushl %esi;pushl %edx": 1,
                "xorl %edx, %edx;pushl %esi;pushl %edx;movl %esi, -(%ebp);calll  <MmAllocatePagesForMdl>": 1,
                "pushl $;shrl $, %edi;pushl %edi;pushl %esi;movl %edi, -(%ebp)": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);jbe  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "xorl %ecx, %ecx;cmpl %ecx, %eax;je  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx;movl -(%ebp), %edi": 1,
                "movl %ecx, (%eax);movl %edx, %edi;jne  <MmTrimAllSystemPagableMemory+>;cmpw $, ;jae  <MmTrimAllSystemPagableMemory+>": 1,
                "movl $, (%edi);movl %eax, (%edi);movl %edi, (%eax);movl %edi, ;addl $, %edi": 1,
                "shll $, %eax;movl %eax, %ebx;shrl $, %ebx;cmpl %edi, -(%ebp);leal (,%ebx,), %ebx": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl $, %eax;movl $, %ecx": 1,
                "movl , %eax;movl (%eax), %ebx;movl %ebx, ;movl %ecx, (%ebx);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;subl %eax, ;leal -(%ebp), %ecx;calll *": 1,
                "movl -(%ebp), %eax;subl %eax, ;leal -(%ebp), %ecx;calll *;movl -(%ebp), %eax": 1,
                "movl $, %ecx;calll  <InterlockedPushEntrySList+>;jmp  <MmTrimAllSystemPagableMemory+>;leal -(%ebp), %ecx;calll *": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movb $, %cl;calll *;cmpb $-, (%esi);pushl %ebx": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;calll *;jmp  <MmTrimAllSystemPagableMemory+>;calll  <ExAcquireFastMutexUnsafe>;movb $-, (%esi)": 1,
                "incl (%esi);movb %al, %bl;movl (%esi), %eax;testb $, %al;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movb %al, %bl;movl (%esi), %eax;testb $, %al;jne  <MmTrimAllSystemPagableMemory+>;cmpl $, (%esi)": 1,
                "movl (%edi), %edx;movl %edi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl (%edi), %edx;movl %edi, %ecx": 1,
                "calll - <MmIsThisAnNtAsSystem+>;movb %bl, %cl;calll *;popl %edi;popl %esi": 1,
                "pushl %esi;movl %eax, %esi;movl $, %ebx;andl %ebx, %esi;imull $, %esi, %esi": 1,
                "imull $, %esi, %esi;addl , %esi;shrl $, %edx;movl (%ebp), %edx;movl %ecx, %eax": 1,
                "movl (%ebp), %edx;movl %ecx, %eax;movl %edi, (%edx);andl $, %eax;xorl %edi, %edi": 1,
                "movl %ecx, (%edx);je  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;orl $, %ecx;movl %ecx, (%edx)": 1,
                "orl $, %ecx;movl %ecx, (%edx);movl %eax, (%edx);movl $, (%edx);movl (%esi), %ecx": 1,
                "orl %ecx, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %edx, %ecx;calll - <MmIsAddressValid+>;testl %eax, %eax": 1,
                "shrdl $, %edx, %eax;shrl $, %edx;movl %eax, %edx;movl (%esi), %eax;xorl %eax, %edx": 1,
                "popl %esi;xorl %eax, %eax;popl %ebx;jmp  <MmTrimAllSystemPagableMemory+>;movb -(%ebp), %cl": 1,
                "cmpl $-, %ecx;movb %al, %bl;je  <MmTrimAllSystemPagableMemory+>;calll - <MmTrimAllSystemPagableMemory+>;pushl $": 1,
                "andl %edi, %ecx;xorl %ecx, (%esi);movl $, (%esi);incl (%edx);movb %al, %cl": 1,
                "incl (%edx);movb %al, %cl;calll *;cmpl $, (%ebp);je  <MmTrimAllSystemPagableMemory+>": 1,
                "movl (%eax), %esi;movl %ecx, (%eax);movl %ecx, (%eax);movl (%ebp), %ecx;andl %edi, %ecx": 1,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;xorl %ecx, %ecx;pushl %esi;movl (%eax), %edx": 1,
                "movb -(%ebp), %cl;calll *;popl %esi;leave;retl $": 2,
                "pushl %ecx;pushl %ebx;movl (%ebp), %ebx;decl (%ebx);pushl %esi": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;jne  <MmTrimAllSystemPagableMemory+>;leal (%edi), %edx": 1,
                "leal (%edi), %edx;movl %ebx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl (%ebp), %esi;movl %edi, %edx": 1,
                "movl (%ebp), %esi;movl %edi, %edx;movl %esi, %ecx;calll - <MmIsAddressValid+>;cmpl $, (%edi)": 1,
                "movl (%eax), %esi;leal (%esi), %eax;movl $, (%ebp);movl %eax, -(%ebp);movl $, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx;xorl %edx, %edx": 1,
                "cmpb %dl, (%ebp);pushl %edi;jne  <MmTrimAllSystemPagableMemory+>;cmpl , %ebx;ja  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %edx, -(%ebp);je  <MmTrimAllSystemPagableMemory+>;cmpl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>;andl $, %ecx": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;jmp  <MmTrimAllSystemPagableMemory+>;cmpl $, (%ebp);je  <MmTrimAllSystemPagableMemory+>": 1,
                "testl %eax, %eax;jne  <MmTrimAllSystemPagableMemory+>;movl %esi, %edx;andl $, %edx;orl %eax, %edx": 1,
                "movl %esi, %eax;shrdl $, %edi, %eax;movl %eax, %edx;andl $, %edx;imull $, %edx, %edx": 1,
                "movl (%edx), %edi;andl $, %eax;xorl %ecx, %ecx;shldl $, %eax, %ecx;shll $, %eax": 1,
                "calll  <wctomb+>;movl %fs:, %eax;testb $, (%eax);jne  <MmTrimAllSystemPagableMemory+>;movl (%eax), %edx": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;incl %eax;retl;movl -(%ebp), %esp": 1,
                "movl %ecx, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;movl (%edx), %ecx;movl (%edx), %edi": 1,
                "movl (%eax), %ebx;movl (%edx), %ecx;movl (%edx), %edi;movl %ecx, %eax;andl $, %eax": 1,
                "movl %edi, -(%ebp);imull $, %edi, %edi;addl , %edi;movl %edx, %ecx;pushl (%edi)": 1,
                "movl $, %esi;jne  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;movl (%eax), %eax;andl $, %eax": 1,
                "pushl (%edi);pushl (%edi);calll - <MmTrimAllSystemPagableMemory+>;andl $, (%edi);movl (%edi), %eax": 1,
                "movb -(%ebp), %cl;calll *;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "andl $, %eax;xorl %esi, %esi;movl %esi, -(%eax);movl %esi, -(%eax);movb -(%ebp), %cl": 1,
                "andl $-, %ecx;cmpl %esi, -(%ebp);movl %eax, %esi;movl -(%ebp), %eax;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "movl -(%ebp), %ecx;calll - <MmTrimAllSystemPagableMemory+>;jmp  <MmTrimAllSystemPagableMemory+>;xorl %eax, %eax;testl %eax, %eax": 1,
                "pushl $;cltd;popl %ecx;idivl %ecx;movl (%esi), %edx": 1,
                "je  <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je - <MmTrimAllSystemPagableMemory+>;movl (%edi), %ecx;movl $, %edx": 1,
                "ja  <MmTrimAllSystemPagableMemory+>;movl , %ebx;movl %ecx, %eax;shrl $, %eax;movl (%ebx,%eax,), %eax": 1,
                "andl %edx, %ecx;pushl %ecx;pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;movl (%edi), %ecx": 1,
                "movl (%ecx), %ebx;shrl $, %ecx;andl $, %ecx;andl $, -(%ecx);andl $, -(%ecx)": 1,
                "movl %ecx, %eax;andl $, %eax;xorl %edx, %edx;orl %edx, %eax;jne  <MmTrimAllSystemPagableMemory+>": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl (%ecx), %ebx;movl (%ebx), %edx;movl (%ebx), %eax;shrl $, %edx": 1,
                "pushl (%edi);pushl %ecx;calll - <MmDisableModifiedWriteOfSection+>;movb $, %cl;calll  <_allshr>": 1,
                "andl $, %eax;xorl %eax, (%esi);xorl %edx, (%esi);movl -(%ebp), %eax;testb $, (%ebx)": 1,
                "andl $-, %ecx;orl $, %ecx;movl %ecx, (%esi);movl %edx, (%esi);subl , %eax": 1,
                "movl %ecx, %ebx;andl $, %ebx;movl %ebx, (%esi);cmpl , %ecx;jb  <MmTrimAllSystemPagableMemory+>": 1,
                "jb  <MmTrimAllSystemPagableMemory+>;cmpl , %ecx;jb  <MmTrimAllSystemPagableMemory+>;cmpl , %edx;jbe  <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl %edx, %ecx;jb  <MmTrimAllSystemPagableMemory+>;cmpl , %ecx;jae  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl (%edi), %ecx;testb $, %cl;je  <MmTrimAllSystemPagableMemory+>;testb $, %cl": 1,
                "andl $-, %eax;orl $, %eax;jmp  <MmTrimAllSystemPagableMemory+>;movl (%edi), %ecx;andl $, %ecx": 1,
                "xorl %eax, (%esi);cmpl $, %edx;jne  <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;andl $-, (%esi)": 1,
                "calll *;movb %al, -(%ebp);jmp  <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edx;movl %esi, %ecx": 1,
                "calll ;addl $, %esi;cmpl %edi, %esi;jb - <MmTrimAllSystemPagableMemory+>;popl %edi": 1,
                "incl %ecx;cmpl $, %ecx;jb - <MmTrimAllSystemPagableMemory+>;movl $, %edi;xorl %edx, %edx": 1,
                "jb - <MmTrimAllSystemPagableMemory+>;xorb %al, %al;popl %ebp;retl $;movb $, %al": 1,
                "calll *;movb %al, %bl;leal (%esi), %eax;shrl $, %eax;andl $, %eax": 1,
                "jne  <MmTrimAllSystemPagableMemory+>;movl (%eax), %edx;movl %edx, (%ecx);jmp  <MmTrimAllSystemPagableMemory+>;movl %eax, %ecx": 1,
                "jmp  <MmTrimAllSystemPagableMemory+>;movl %eax, %ecx;movl (%eax), %eax;testl %eax, %eax;je  <MmTrimAllSystemPagableMemory+>": 1,
                "jae  <MmTrimAllSystemPagableMemory+>;movl (%esi), %ecx;movl $, %eax;cmpl %eax, %ecx;jae  <MmTrimAllSystemPagableMemory+>": 1,
                "movl %eax, (%ebp);je  <ObReferenceObjectByPointer+>;cmpb $, (%ebp);jne  <ObReferenceObjectByPointer+>;cmpl , %ecx": 1,
                "je  <ObfReferenceObject+>;pushl $;pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;movl $, %eax": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "outsl (%esi), %dx;arpl %sp, (%ecx);pushl %eax;outsl (%esi), %dx;outsl (%esi), %dx": 1,
                "pushl $;calll  <DbgPrint>;popl %ecx;testl %ebx, %ebx;je  <ObfReferenceObject+>": 1,
                "testl %ebx, %ebx;je  <ObfReferenceObject+>;incl ;pushl %edi;movl %esi, (%ebx)": 1,
                "pushl %edi;movl %esi, (%ebx);movl %fs:, %eax;movl (%eax), %esi;addl $, %esi": 1,
                "pushl %esi;leal -(%ecx), %esi;pushl %edi;movl (%esi), %edi;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);testl %edi, %edi;jmp  <ObfReferenceObject+>;leal (%edi), %eax;movl %eax, -(%ebp)": 1,
                "xaddl %eax, (%ecx);leal -(%eax), %esi;cmpl %ebx, %esi;jne  <ObfDereferenceObject+>;calll *": 1,
                "cmpl %ebx, ;jne  <ObfDereferenceObject+>;pushl %edi;calll - <MmTrimAllSystemPagableMemory+>;pushl %ebx": 1,
                "jmp  <ObfDereferenceObject+>;pushl %edi;calll - <ObReferenceObjectByPointer+>;movl %esi, %eax;popl %edi": 1,
                "cmpw $, ;jne  <ObDereferenceObject+>;xorb %al, %al;jmp  <ObDereferenceObject+>;pushl %esi": 1,
                "pushl %esi;movl $, %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <ObDereferenceObject+>;int;int;int;int": 1,
                "pushl $;calll  <wctomb+>;movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp)": 3,
                "jl  <ObDereferenceObject+>;movl -(%ebp), %eax;movl -(%eax), %ecx;movl (%ecx), %ebx;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;jl  <ObDereferenceObject+>;addl %eax, %ebx;movl $, %esi;movl -(%ebp), %ecx": 1,
                "movl $, %esi;movl -(%ebp), %ecx;movl -(%ecx), %eax;cmpl , %eax;jne  <ObDereferenceObject+>": 1,
                "setne %al;movb %al, (%ecx);movl %esi, %ecx;calll *;xorl %eax, %eax": 1,
                "popl %esi;jmp  <ObIsDosDeviceLocallyMapped+>;movl $, %eax;popl %edi;popl %ebp": 1,
                "movl , %ecx;pushl %esi;movl $, %esi;jmp  <ObIsDosDeviceLocallyMapped+>;leal -(%ecx), %eax": 1,
                "pushl %eax;pushl $;movl %esi, -(%ebp);calll ;cmpl $, (%ebp)": 1,
                "movl $, %ebx;movl %ebx, %ecx;calll *;movl (%edi), %ecx;movl (%edi), %edi": 1,
                "movl (%edi), %edi;movl %ecx, (%edi);movl %edi, (%ecx);movb %al, %dl;movl %ebx, %ecx": 1,
                "movl (%esi), %ecx;incl %ebx;cmpb $, (%esi);jne  <ObIsDosDeviceLocallyMapped+>;movl (%ecx), %eax": 1,
                "cmpl %ebx, %eax;jne  <ObIsDosDeviceLocallyMapped+>;cmpl %ebx, (%esi);je  <ObIsDosDeviceLocallyMapped+>;testl %eax, %eax": 1,
                "movl (%ebp), %edx;calll - <IofCallDriver>;movl %eax, -(%ebp);movl -(%ebp), %eax;popl %esi": 1,
                "popl %esi;popl %ebx;leave;retl $;orb %bl, (%esi)": 1,
                "leave;retl $;orb %bl, (%esi);movl $, %esi;movl %esi, %ecx": 1,
                "pushl %eax;calll - <KeSetEvent>;jmp  <ObIsDosDeviceLocallyMapped+>;movl (%ebp), %ecx;leal (%ecx), %eax": 1,
                "leal (%ecx), %eax;andl $, (%eax);pushl %ebx;pushl %eax;movl $, (%eax)": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%eax), %esi": 5,
                "movl (%eax), %eax;pushl %edi;movl $, %ecx;movl %eax, -(%ebp);xorl %edi, %edi": 1,
                "decl ;pushl $;pushl -(%ebp);calll - <ObIsDosDeviceLocallyMapped+>;movl %eax, %esi": 1,
                "pushl $;pushl -(%ebp);calll - <ObIsDosDeviceLocallyMapped+>;movl %eax, %esi;testl %esi, %esi": 1,
                "testl %esi, %esi;je  <PoStartNextPowerIrp+>;pushl %esi;pushl %edi;jmp  <PoStartNextPowerIrp+>": 1,
                "movl (%edi), %esi;pushl $;pushl -(%esi);subl $, %esi;calll - <ObIsDosDeviceLocallyMapped+>": 1,
                "movl (%eax), %eax;movl $, %ecx;testl %ecx, (%eax);jne  <PoStartNextPowerIrp+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %ebx;movl %eax, (%ebx);movl %ebx, (%eax);movl (%esi), %eax;movl (%eax), %eax": 1,
                "cmpl -(%ebp), %eax;jne  <PoStartNextPowerIrp+>;xorl %ebx, %ebx;andl %ebx, (%ebp);jmp  <PoStartNextPowerIrp+>": 1,
                "je  <PoStartNextPowerIrp+>;movl (%ebx), %eax;movl (%ebx), %ecx;movl (%ebx), %edx;subl $, %eax": 1,
                "movl %edx, (%ecx);movl %eax, (%ebp);movl (%eax), %eax;movl (%eax), %eax;orb $, (%eax)": 1,
                "je  <PoStartNextPowerIrp+>;calll - <ObIsDosDeviceLocallyMapped+>;movl %eax, %edi;testl %edi, %edi;je  <PoStartNextPowerIrp+>": 1,
                "subl $, %eax;movl %eax, (%ebp);movl (%ebx), %eax;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movl (%eax), %ecx;movl %ecx, %edx;andb $-, %dl;cmpb $, %dl;je  <PoCallDriver+>": 1,
                "cmpl %ebx, %edx;jne  <PoCallDriver+>;incl ;cmpl $, ;jle  <PoCallDriver+>": 1,
                "xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax;pushl (%ebp)": 6,
                "testl %ecx, %edx;je  <PoCallDriver+>;orl $, %ecx;jmp  <PoCallDriver+>;orl $, %ecx": 1,
                "movl %eax, (%ecx);movb -(%ebp), %dl;incl ;movl %edi, %ecx;movl %eax, ": 1,
                "incl ;movl %edi, %ecx;movl %eax, ;calll *;movl $, %eax": 1,
                "calll - <IoGetAttachedDeviceReference>;movl %eax, %ebx;xorl %eax, %eax;movb (%ebx), %al;addb $, %al": 1,
                "subl $, %edi;pushl $;leal (%edi), %edx;movl $, %ecx;calll  <ExfInterlockedInsertTailList>": 1,
                "movb $-, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <PoRequestPowerIrp+>;movl %esi, (%eax)": 1,
                "pushl %esi;movl (%ecx), %esi;movl %edx, (%esi);movl %esi, (%edx);orl $-, (%eax)": 1,
                "movl (%ecx), %esi;movl %edx, (%esi);movl %esi, (%edx);orl $-, (%eax);xorl %edx, %edx": 1,
                "calll  <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;jne  <PoCancelDeviceNotify+>;movl $, %esi": 1,
                "movl %eax, (%ecx);movl (%ebp), %eax;movl %esi, (%eax);xorl %esi, %esi;movb -(%ebp), %dl": 1,
                "xorl %edi, %edi;testb $, (%ebx);je  <PoCancelDeviceNotify+>;movl (%ebx), %eax;cmpl %edi, (%eax)": 1,
                "je  <PoCancelDeviceNotify+>;movl (%ebx), %eax;cmpl %edi, (%eax);je  <PoCancelDeviceNotify+>;cmpl $, (%ebp)": 1,
                "pushl %ebx;calll  <PoRegisterDeviceNotify+>;testl %eax, %eax;jne  <PoCancelDeviceNotify+>;movl $, %eax": 1,
                "movl (%edx), %ecx;jmp  <PoCancelDeviceNotify+>;movl (%ecx), %ecx;cmpl %ebx, (%ecx);je  <PoCancelDeviceNotify+>": 1,
                "movl $, (%edi);movl %ebx, (%edi);leal -(%ebx), %eax;movl (%eax), %edx;leal (%edi), %ecx": 1,
                "movl %ecx, (%eax);incl (%ebx);movl (%esi), %eax;movl (%eax), %eax;andb $-, %al": 1,
                "movl $, %ecx;calll *;pushl (%ebp);pushl %ebx;pushl %esi": 1,
                "testl %edi, %edi;je  <PoCancelDeviceNotify+>;pushl $;pushl %edi;calll  <ExFreePoolWithTag>": 1,
                "movl (%ebp), %ecx;pushl %edi;pushl %edi;pushl %edi;pushl %ebx": 1,
                "movl %eax, %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;jne  <PoCancelDeviceNotify+>;movl $, %eax": 1,
                "movl (%ebp), %eax;addl $, %esi;cmpl (%edi), %eax;jb - <PoCancelDeviceNotify+>;movl -(%ebp), %esi": 1,
                "pushl %ebx;pushl %edi;calll  <ExFreePoolWithTag>;movl %esi, %eax;popl %edi": 1,
                "movl (%eax), %esi;pushl %edi;movl (%esi), %edi;movl $, %ebx;movl %ebx, %ecx": 1,
                "movl %ecx, (%edx);pushl $;movl %edx, (%ecx);movl $, %edi;pushl %eax": 1,
                "je  <PoRegisterDeviceNotify+>;cmpl %eax, (%ebp);je  <PoRegisterDeviceNotify+>;cmpl %eax, (%ebp);je  <PoRegisterDeviceNotify+>": 2,
                "pushl (%ebp);pushl %ebx;pushl %esi;calll - <PoCancelDeviceNotify+>;movl %eax, %esi": 1,
                "pushl %ebx;pushl %esi;calll - <PoCancelDeviceNotify+>;movl %eax, %esi;movl %edi, %ecx": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl %ebx, (%ebp);andl $, (%ebp);cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);movl (%esi), %eax;movl (%eax), %eax;je  <PoRegisterDeviceNotify+>;incl (%eax)": 1,
                "movl (%esi), %eax;movl (%eax), %eax;je  <PoRegisterDeviceNotify+>;incl (%eax);movl (%eax), %ecx": 1,
                "cmpb $, -(%ebp);popl %edi;popl %esi;je  <PoRegisterDeviceNotify+>;movb -(%ebp), %dl": 1,
                "movl $, %ecx;calll *;jmp  <PoRegisterDeviceNotify+>;movl $, %ecx;calll  <ExReleaseResourceLite>": 1,
                "jmp  <PoRegisterDeviceNotify+>;movl $, %ecx;calll  <ExReleaseResourceLite>;leave;retl $": 1,
                "pushl (%esi);xorl %edx, %edx;xorl %ecx, %ecx;calll  <PoSetPowerState+>;pushl %esi": 1,
                "movl %edx, (%esi);movb (%ebp), %dl;movl $, %ecx;calll *;movl (%esi), %eax": 1,
                "cmpl %edi, (%ebp);jne  <PoRegisterDeviceForIdleDetection+>;movl $, %ebx;movl %ebx, %ecx;calll *": 1,
                "movl %ebx, %ecx;calll *;movb %al, (%ebp);movl (%ebp), %eax;movl (%eax), %eax": 1,
                "cmpl %edi, %esi;je  <PoRegisterDeviceForIdleDetection+>;leal (%esi), %edi;cmpl %edi, (%edi);jne  <PoRegisterDeviceForIdleDetection+>": 1,
                "movl %eax, (%esi);movl %edi, (%edi);movl %edi, (%edi);movb (%ebp), %dl;movl %ebx, %ecx": 1,
                "jne  <PoRegisterDeviceForIdleDetection+>;movl (%ecx), %eax;cmpl $, %eax;je  <PoRegisterDeviceForIdleDetection+>;cmpl $, %eax": 1,
                "cmpl $, %eax;je  <PoRegisterDeviceForIdleDetection+>;cmpl $, %eax;jne  <PoRegisterDeviceForIdleDetection+>;movl $, -(%ebp)": 1,
                "movl %ebx, %ecx;calll *;movzbl (%esi), %edi;andl $, (%esi);movb %al, %dl": 1,
                "movl $, (%ecx);movl %eax, (%ecx);movl %ecx, (%eax);movl %ecx, ;movl %ebx, %ecx": 1,
                "pushl %edi;movl (%ebp), %edi;movl %edi, %ebx;xorl (%ebp), %ebx;andl $, %ebx": 1,
                "jmp  <PoRegisterDeviceForIdleDetection+>;testl $, %ebx;je  <PoRegisterDeviceForIdleDetection+>;movzbl (%ebp), %eax;movsbl (%eax), %ecx": 1,
                "jmp  <PoRegisterDeviceForIdleDetection+>;movl %ebx, %eax;shrl $, %eax;movsbl (%eax), %ecx;addl $, %ecx": 1,
                "notl %edx;andl %edx, %ebx;testl %esi, %esi;movl %ecx, %edx;movl %ebx, (%ebp)": 1,
                "cmpl $, %eax;jmp  <PoRegisterDeviceForIdleDetection+>;movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "testb $, ;jne  <PoRegisterDeviceForIdleDetection+>;pushl $;popl %eax;movl $, %ecx": 1,
                "movl $, %ecx;lock;orl %eax, (%ecx);pushl $;calll  <PoSetPowerState+>": 2,
                "testl %esi, %esi;jne  <PoRegisterSystemState+>;pushl $;pushl $;pushl %esi": 1,
                "xorl %eax, %eax;testl %esi, %esi;je  <PoRegisterSystemState+>;pushl %edi;movl %esi, %edi": 1,
                "movl %esi, (%ebp);je  <PoRegisterSystemState+>;movl (%ebp), %eax;movl (%ebp), %ecx;xchgl %eax, (%ecx)": 1,
                "cmpb $, %cl;je  <PoUnregisterSystemState+>;andl $, %eax;cmpb $, %al;je  <PoUnregisterSystemState+>": 1,
                "andl $, %eax;cmpb $, %al;je  <PoUnregisterSystemState+>;pushl $;popl %eax": 1,
                "testl %eax, %eax;jne  <PoUnregisterSystemState+>;andl %eax, ;pushl $;pushl $": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;leal (%esi), %ecx": 1,
                "je  <PoUnregisterSystemState+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %esi": 3,
                "popl %ebx;popl %ebp;retl $;testb $, (%ebp);je  <PoUnregisterSystemState+>": 1,
                "pushl %esi;movl (%eax), %esi;movl (%esi), %eax;movl $, %ebx;pushl %edi": 1,
                "movl %eax, -(%ebp);jmp - <PoSetPowerState+>;movl (%esi), %ecx;movl (%ebp), %eax;movl %ecx, %edi": 1,
                "movl (%ebp), %edi;movl %ebx, %ecx;calll *;jmp  <PoSetPowerState+>;movl %ecx, %edx": 1,
                "jmp  <PoSetPowerState+>;movl %ecx, %edx;xorl %eax, %edx;andl $, %edx;xorl %ecx, %edx": 1,
                "jl  <PoSetPowerState+>;movl (%ebp), %esi;movl %ecx, (%esi);jmp  <PoSetPowerState+>;movl (%eax), %eax": 1,
                "movl (%ebp), %esi;movl %ecx, (%esi);jmp  <PoSetPowerState+>;movl (%eax), %eax;movl (%ebp), %esi": 1,
                "movl %ecx, (%edi);movl %ecx, (%esi);movl (%edi), %eax;cmpl (%esi), %eax;jle  <PoSetPowerState+>": 1,
                "je  <PoSetPowerState+>;testl %edx, %edx;je  <PoSetPowerState+>;movl %edx, %eax;andl $, %eax": 1,
                "movl %edx, %eax;andl $, %eax;negl %eax;sbbl %eax, %eax;negl %eax": 1,
                "negl %eax;shrl $, %edx;addl %edx, %eax;jmp  <PoSetPowerState+>;movl $, %eax": 1,
                "pushl %eax;calll - <IoCsqRemoveIrp+>;movl (%ebx), %eax;testl %eax, %eax;movl $, %edi": 1,
                "calll - <IoCsqRemoveIrp+>;movl (%ebx), %eax;testl %eax, %eax;movl $, %edi;je  <PoSetPowerState+>": 1,
                "movl $, %edi;je  <PoSetPowerState+>;pushl %edi;andl %esi, %eax;pushl %eax": 1,
                "cmpl %edi, ;je  <PoSetPowerState+>;movl $, %eax;pushl $;andl %esi, %eax": 3,
                "movl , %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 8,
                "pushl $;leal -(%ebp), %eax;leal -(%ebp), %ecx;pushl %eax;movl $, -(%ebp)": 5,
                "cmpb $, ;pushl %edi;movl (%ebp), %edi;jne  <PoSetPowerState+>;cmpb %bl, (%edi)": 1,
                "cmpl %ebx, %eax;movb %bl, (%edi);jbe  <PoSetPowerState+>;leal (%edi), %ecx;movl %eax, (%ebp)": 1,
                "jbe  <PoSetPowerState+>;leal (%edi), %ecx;movl %eax, (%ebp);pushl %esi;movl (%ecx), %eax": 1,
                "pushl $;xorl %edx, %edx;popl %ebx;divl %ebx;xorl %ebx, %ebx": 1,
                "cmpl %ebx, %esi;movl %eax, (%ecx);je  <PoSetPowerState+>;movl (%ecx), %eax;xorl %edx, %edx": 1,
                "decl (%ebp);jne - <PoSetPowerState+>;movl (%ebp), %eax;popl %esi;leal -(%eax), %ecx": 1,
                "leal -(%eax), %ecx;movl %ecx, %eax;shll $, %eax;addl %edi, %eax;orl $-, (%eax)": 1,
                "movb %bl, (%eax);popl %edi;movb %cl, (%eax);xorl %eax, %eax;popl %ebx": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx": 5,
                "je  <PoSetPowerState+>;xorl %edx, %edx;movl $, %eax;divl %ecx;pushl %ebx": 1,
                "divl %ecx;pushl %ebx;pushl %edi;xorl %ebx, %ebx;movl %eax, %edi": 1,
                "movl , %eax;movl (%eax), %eax;cmpl %eax, (%ebp);jbe  <PoSetPowerState+>;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;movl %ecx, -(%ebp);subl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "pushl %eax;movb %cl, -(%esi);calll - <PoSetPowerState+>;leal -(%esi), %eax;pushl %eax": 1,
                "movb %bl, -(%esi);addl $, -(%ebp);incl %ebx;addl $, %edi;addl $, %esi": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl %ecx, %esi;pushl %edi": 1,
                "pushl %ecx;pushl %esi;movl %ecx, %esi;pushl %edi;movl (%esi), %edi": 1,
                "testl %edi, %edi;je  <PoSetPowerState+>;testb $, (%esi);jne  <PoSetPowerState+>;pushl $": 1,
                "sbbl (%esi), %eax;movl (%edi), %edx;movl %eax, -(%ebp);movl (%esi), %eax;pushl %ebx": 1,
                "calll - <PoSetPowerState+>;jmp  <PoSetPowerState+>;addl %eax, (%esi);decl (%esi);movl %edx, (%esi)": 1,
                "jmp  <PoSetPowerState+>;addl %eax, (%esi);decl (%esi);movl %edx, (%esi);jne  <PoSetPowerState+>": 1,
                "calll - <PoSetPowerState+>;jmp  <PoSetPowerState+>;movl (%edi), %eax;movl %eax, (%esi);movl %edx, (%esi)": 1,
                "movl -(%esi), %ecx;subl (%esi), %ecx;movl (%esi), %eax;addl -(%esi), %ecx;cmpl , %ecx": 1,
                "subl (%esi), %ecx;movl (%esi), %eax;addl -(%esi), %ecx;cmpl , %ecx;jae  <PoSetPowerState+>": 1,
                "movl %edx, (%esi);movl %eax, (%esi);movl %edx, (%esi);movl -(%esi), %eax;movl $, %ecx": 1,
                "pushl %esi;calll - <PoSetPowerState+>;popl %edi;popl %esi;retl": 1,
                "popl %esi;retl;popl %edi;popl %esi;jmpl *": 2,
                "xorl %esi, %esi;pushl %edi;movb $, %cl;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "je  <PoSetPowerState+>;cmpl $, %edx;je  <PoSetPowerState+>;incl -(%ebp);movl %edx, %esi": 1,
                "cmpl $, %edx;je  <PoSetPowerState+>;incl -(%ebp);movl %edx, %esi;shll $, %edx": 1,
                "shll -(%ebp);notl %eax;andl %eax, %esi;movb $, %cl;movl %esi, -(%ebp)": 1,
                "pushl $;popl %ecx;divl %ecx;xorl %edx, %edx;andl $, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %edi;movl %ds:, %eax": 2,
                "addl $, %eax;lock;orl %ecx, (%eax);jmp  <PoSetPowerState+>;movl $, %ecx": 1,
                "andl %ecx, (%eax);popl %edi;xorl %eax, %eax;popl %esi;popl %ebp": 1,
                "andl $, (%ebp);movl , %edi;xorl %esi, %esi;incl %esi;jmp  <PoSetPowerState+>": 1,
                "movb %al, %bl;pushl (%ebp);calll - <PoSetPowerState+>;movb %bl, %cl;calll *": 1,
                "pushl (%ebp);calll - <PoSetPowerState+>;movb %bl, %cl;calll *;testl %edi, %edi": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;pushl %edi;movl $, %ebx": 3,
                "movl %esi, -(%ebp);calll - <ExAllocateFromPagedLookasideList>;movl %eax, %edi;cmpl %esi, %edi;movl %edi, -(%ebp)": 1,
                "popl %ebx;leave;retl;xorl %esi, %esi;jmp  <PoSetPowerState+>": 1,
                "xorl %esi, %esi;jmp  <PoSetPowerState+>;movl %eax, %esi;pushl -(%ebp);pushl %ebx": 1,
                "jmp - <PoSetPowerState+>;int;int;int;int": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $": 7,
                "cmpb $, ;jne  <PoSetPowerState+>;andl $-, (%eax);movb %dl, (%eax);cmpl $, %edx": 1,
                "cmpl $, %edx;jne  <PoSetPowerState+>;andl $, (%eax);andl $-, (%eax);movb $, (%eax)": 1,
                "testb $, (%eax);je  <PoSetPowerState+>;movl (%eax), %ecx;cmpl %ecx, (%eax);jae  <PoSetPowerState+>": 1,
                "je  <PoSetPowerState+>;movl (%eax), %ecx;cmpl %ecx, (%eax);jae  <PoSetPowerState+>;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);incl %edx;cmpl $, %edx;jb - <PoSetPowerState+>;cmpb $, (%ebx)": 1,
                "movb $, -(%ebp);movb $, -(%ebp);je  <PoSetPowerState+>;movl $, -(%ebp);movl $, %ebx": 1,
                "movl $, %ebx;jmp  <PoSetPowerState+>;movl $, -(%ebp);movl $, %ebx;cmpl $, (%ebp)": 1,
                "movl $, %ebx;cmpl $, (%ebp);jae  <PoSetPowerState+>;pushl $;calll  <ExRaiseStatus>": 1,
                "pushl %eax;pushl (%ebp);leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);calll - <PoSetPowerState+>": 1,
                "pushl $;popl %ecx;movl %ebx, %edi;leal -(%ebp), %esi;xorl %eax, %eax": 2,
                "pushl $;popl %ecx;leal -(%ebp), %esi;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi)": 4,
                "je  <PoSetPowerState+>;calll - <PoSetPowerState+>;cmpb $, (%ebp);je  <PoSetPowerState+>;leal -(%ebp), %eax": 1,
                "calll  <RtlInitUnicodeString>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx;movb $, %cl": 1,
                "jbe  <PoSetPowerState+>;testl %eax, %eax;je  <PoSetPowerState+>;imull $, %eax, %eax;subl %edx, %ecx": 1,
                "imull %ecx, %eax;xorl %edx, %edx;divl %edi;popl %edi;popl %esi": 1,
                "movl (%esi), %ecx;movl %ecx, (%esi);movl (%esi), %ecx;popl %edi;movl %ecx, (%esi)": 1,
                "movl (%esi), %edx;movb %al, -(%ebp);jne  <PoSetPowerState+>;movb (%ebp), %bl;movb %bl, -(%ebp)": 1,
                "cmpb %al, (%ebp);jb  <PoSetPowerState+>;movb (%esi), %al;cmpb %al, (%ebp);jbe  <PoSetPowerState+>": 1,
                "cmpb (%ebp), %dl;jbe  <PoSetPowerState+>;movb (%esi), %al;cmpb %dl, %al;jae  <PoSetPowerState+>": 1,
                "movb -(%ebp), %cl;movb %al, -(%ebp);movb %cl, -(%ebp);jmp  <PoSetPowerState+>;movb -(%ebp), %cl": 1,
                "addl $, %esi;cmpb -(%ebp), %cl;movb %cl, -(%ebp);jb - <PoSetPowerState+>;movb -(%ebp), %cl": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <PoSetPowerState+>;movb %bl, (%eax);movl (%ebp), %eax": 1,
                "movl %ds:, %eax;movl (%eax), %ecx;addl (%eax), %ecx;movl (%eax), %eax;movl (%eax), %edx": 1,
                "andl $, (%esi);movb %al, (%esi);movb (%ebp), %al;movb %al, (%esi);movl (%ebp), %eax": 1,
                "movb %al, (%esi);movl (%ebp), %eax;movl %edx, (%esi);movl %ecx, (%esi);movl %ecx, (%esi)": 1,
                "leal (%esi), %edi;testb $, (%edi);movl %eax, -(%ebp);je  <PoSetPowerState+>;leal (%esi), %eax": 1,
                "movl $, %ecx;cmpl %ecx, %eax;jbe  <PoSetPowerState+>;movl %ecx, %eax;leal (%esi), %ecx": 1,
                "cmpl %ecx, %eax;jbe  <PoSetPowerState+>;movl %ecx, %eax;leal (%esi), %ecx;pushl %ecx": 1,
                "orl %eax, (%edi);movl -(%ebp), %eax;movl (%edi), %edx;testb $, %dl;je  <PoSetPowerState+>": 1,
                "testb $, %dl;je  <PoSetPowerState+>;movzbl (%esi), %ebx;jmp  <PoSetPowerState+>;testb $, %dl": 1,
                "subl (%esi), %ebx;cmpl , %ebx;movl %ebx, -(%ebp);jb  <PoSetPowerState+>;pushl %edi": 1,
                "movl -(%ebp), %ebx;addl $, %ecx;cmpb (%ecx), %al;jb - <PoSetPowerState+>;movzbl (%esi), %eax": 1,
                "movzbl (%esi), %eax;cmpl %eax, (%ebp);popl %edi;jae  <PoSetPowerState+>;movl %eax, (%ebp)": 1,
                "cmpl %eax, (%ebp);jae  <PoSetPowerState+>;movb $, -(%ebp);jmp  <PoSetPowerState+>;jbe  <PoSetPowerState+>": 1,
                "jbe  <PoSetPowerState+>;movb $, -(%ebp);cmpb $, -(%ebp);jne  <PoSetPowerState+>;cmpb $, -(%ebp)": 1,
                "cmpb $, -(%ebp);jne  <PoSetPowerState+>;cmpb $, -(%ebp);je  <PoSetPowerState+>;cmpl (%edx), %ebx": 1,
                "movl %esi, %eax;notl %eax;pushl %esi;andl %eax, %edi;calll - <KeSetSystemAffinityThread>": 2,
                "je  <PoSetPowerState+>;notl %ecx;lock;andl %ecx, (%eax);jmp  <PoSetPowerState+>": 1,
                "andl %ecx, (%eax);jmp  <PoSetPowerState+>;lock;orl %ecx, (%eax);calll - <PoSetPowerState+>": 1,
                "calll - <PoSetPowerState+>;movb %bl, %cl;calll *;shll %esi;testl %edi, %edi": 2,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);movb %cl, -(%ebp);movb %cl, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movzbl %al, %ebx;movl %ebx, %edi;pushl $;shll $, %edi;pushl %edi": 1,
                "rep  stosb %al, %es:(%edi);leal (%esi), %eax;orb $, (%eax);testl %ebx, %ebx;jbe  <PoSetPowerState+>": 1,
                "testb $, (%ecx);je  <PoSetPowerState+>;orb $, (%edi);addl $, %ecx;addl $, %edi": 1,
                "addl $, %ecx;addl $, %edi;decl %eax;jne - <PoSetPowerState+>;pushl %ebx": 1,
                "jae - <PoSetPowerState+>;jmp  <PoSetPowerState+>;decb %al;movb %al, -(%ebp);xorl %ecx, %ecx": 1,
                "shll -(%ebp);jmp  <PoSetPowerState+>;movl -(%ebp), %eax;pushl -(%ebp);notl %eax": 1,
                "calll *;movb %al, -(%ebp);movl %ds:, %eax;movb -(%ebp), %cl;movl %eax, %ebx": 1,
                "andl %eax, (%ecx);jmp  <PoSetPowerState+>;movl -(%ebp), %esi;movl %edi, %ecx;movl %ecx, %edx": 1,
                "setne %al;movb %al, ;movb -(%ebp), %al;movb %al, ;movb -(%ebp), %al": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpb $, ;jne  <PoSetPowerState+>": 1,
                "shll %cl, %edx;pushl $;pushl %edx;calll - <PoSetPowerState+>;popl %ebp": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);movl (%ecx), %eax;movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movl (%ecx), %ecx;subl $, %eax;movl %ecx, -(%ebp);movb (%eax), %cl;movb %cl, -(%ebp)": 1,
                "movb %al, -(%ebp);movl (%esi), %eax;cmpl %ecx, %eax;je  <PoSetPowerState+>;pushl %eax": 1,
                "calll  <wcscpy>;popl %ecx;popl %ecx;jmp  <PoSetPowerState+>;movb %cl, -(%ebp)": 1,
                "movl %eax, ;je  <PoSetPowerState+>;movl , %ecx;orl $, ;movl $, %eax": 1,
                "movl %esi, %ecx;calll *;movl -(%ebp), %eax;calll *(,%eax,);orl %eax, -(%ebp)": 1,
                "je  <PoSetPowerState+>;pushl $;calll - <MmTrimAllSystemPagableMemory+>;movl %eax, %esi;testl %esi, %esi": 1,
                "je  <PoSetPowerState+>;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;movl %eax, %edi;calll  <PsGetCurrentProcessSessionId>": 1,
                "calll *;jmp  <PoSetPowerState+>;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;movl %eax, %esi": 1,
                "pushl %eax;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;pushl %esi;calll  <NtFreeVirtualMemory+>": 1,
                "cmpl %eax, %ecx;je  <PoSetPowerState+>;movl $, %ecx;lock;orl %eax, (%ecx)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl , %eax;testl %eax, ": 1,
                "decl (%eax);pushl $;calll - <PoSetPowerState+>;movl %fs:, %eax;incl (%eax)": 1,
                "pushl %esi;movl $, %esi;movl %esi, %ecx;calll *;testb $-, ": 1,
                "pushl $;calll  <ExQueueWorkItem>;movb %bl, %dl;movl %esi, %ecx;calll *": 1,
                "addl $, %ecx;shrl $, %ecx;andl $, %ebx;je  <PoSetPowerState+>;leal -(%esi,%ebx,), %esi": 1,
                "leal -(%esi,%ebx,), %esi;jmpl *(,%ebx,);adcl %edx, %eax;movl (%esi), %edx;adcl %edx, %eax": 1,
                "adcl $, %eax;popl %ebx;retl $;movl %edi, %edi;addb %al, (%eax)": 1,
                "hlt;incl %esp;addb %dl, %dh;hlt;incl %esp": 1,
                "incl %esp;addb %cl, %ah;hlt;incl %esp;addb %al, %bh": 1,
                "shll %esi;movb $, %cl;movl %edi, -(%ebp);movl %esi, -(%ebp);calll *": 1,
                "jmp  <PoSetPowerState+>;movl %ds:, %eax;leal (%eax), %esi;movzbl (%esi), %edi;movzbl (%esi), %eax": 1,
                "pushl $;movb %al, ;calll - <KeSetEvent>;movl $, %eax;movl $, %ecx": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl , %edi;movl $, %esi": 1,
                "andl $, -(%ebp);movl , %ecx;movb %al, %dl;movl $, -(%ebp);movl $, %ebx": 1,
                "movl (%ecx), %ecx;cmpl %ebx, %ecx;jne - <PoSetPowerState+>;movl %esi, %ecx;calll *": 1,
                "jne - <PoSetPowerState+>;movl %esi, %ecx;calll *;movl , %eax;movzbl (%eax), %ecx": 1,
                "ja  <PoSetPowerState+>;xorl %eax, %eax;jmp  <PoSetPowerState+>;xorl %ecx, %ecx;cmpb %cl, (%eax)": 1,
                "xorl %eax, %eax;jmp  <PoSetPowerState+>;xorl %ecx, %ecx;cmpb %cl, (%eax);setne %cl": 1,
                "je  <PoSetPowerState+>;movl %esi, %ecx;movl %eax, ;calll *%edi;movl , %edi": 1,
                "movl (%edi), %edi;cmpl %ebx, %edi;jne - <PoSetPowerState+>;movb -(%ebp), %dl;movl %esi, %ecx": 1,
                "testb $, (%esi);jne  <PoSetPowerState+>;shll %ebx;jmp  <PoSetPowerState+>;xorl %edi, %edi": 1,
                "jne  <PoSetPowerState+>;movb -(%ebp), %dl;movb (%esi), %cl;shll %ebx;cmpb %cl, %al": 1,
                "movb -(%ebp), %dl;movb (%esi), %cl;shll %ebx;cmpb %cl, %al;ja  <PoSetPowerState+>": 1,
                "pushl %ebx;pushl %edi;leal (%eax,%eax,), %edi;shll %edi;calll *": 1,
                "movl $, -(%ebp);movl %eax, (%esi);movl %edx, (%esi);jmp  <PoSetPowerState+>;movl (%ebp), %ecx": 1,
                "imull %ecx, %edx;addl %edx, %eax;movl %eax, %edx;xorl %ecx, %edx;jl  <PoSetPowerState+>": 1,
                "pushl %ebx;xorb %bl, %bl;cmpl $, (%ebp);pushl %esi;jg  <PoSetPowerState+>": 1,
                "je  <PoSetPowerState+>;orl $, %edx;jmp  <PoSetPowerState+>;andl $-, %edx;movl (%esi), %eax": 1,
                "movl , %esi;movl (%ebp), %edx;addl $, %edx;movl $, (%edx);movl %esi, (%edx)": 1,
                "pushl %eax;pushl %ebx;calll - <MmTrimAllSystemPagableMemory+>;incl %ebx;addl $, %edi": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %esi;movl , %esi;cmpl $, %esi": 1,
                "popl %ebx;jbe  <PoSetPowerState+>;pushl -(%ebp);pushl (%ebp);calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movb %al, -(%ebp);movl (%ebp), %eax;addl $, %edi;movl (%edi), %ebx;addl %eax, %ecx": 1,
                "addl %eax, %ecx;cmpl %ebx, %ecx;ja  <PoSetPowerState+>;movb $, (%ebp);jmp  <PoSetPowerState+>": 1,
                "pushl %esi;calll - <PoSetPowerState+>;testl %eax, %eax;jbe  <PoSetPowerState+>;leal -(%ebp), %eax": 1,
                "shll $, %esi;addl (%eax), %esi;pushl %edi;movl (%esi), %eax;movl %esi, -(%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;shll $, %edi;leal (%edi,%ecx), %esi;movl (%esi), %eax": 1,
                "subl -(%ebp), %ebx;movl %ecx, -(%ebp);cmpl $, %ebx;movl %esi, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);cmpl $, %ebx;movl %esi, -(%ebp);movl %edx, -(%ebp);jbe  <PsReturnPoolQuota+>": 1,
                "cmpl -(%ebp), %ebx;jbe  <PsReturnPoolQuota+>;movl -(%ebp), %esi;andl $, (%ebp);jmp  <PsReturnPoolQuota+>": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;jne  <PsReturnPoolQuota+>": 1,
                "testb %al, %al;jne - <PsChargeProcessNonPagedPoolQuota+>;movl $, %eax;popl %edi;popl %esi": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;cmpl , %eax;je  <PsReturnProcessNonPagedPoolQuota+>": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;jne  <PsReturnProcessNonPagedPoolQuota+>": 1,
                "pushl %esi;pushl $;calll - <PoSetPowerState+>;movl (%ebp), %eax;movl %eax, (%ebp)": 1,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);jmp - <PsReturnProcessNonPagedPoolQuota+>;movl %eax, %ebx;jmp - <PsReturnProcessNonPagedPoolQuota+>": 1,
                "pushl %esi;movl (%eax), %esi;addl $, %esi;movl (%esi), %ebx;pushl %edi": 2,
                "cmpl -(%ebp), %eax;ja  <PsChargeProcessPagedPoolQuota+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "cmpxchgl %edx, (%ecx);cmpl %eax, %esi;movl %eax, (%ebp);ja - <PsChargeProcessPagedPoolQuota+>;xorl %eax, %eax": 1,
                "jmp  <PsReturnProcessPagedPoolQuota+>;movl %edi, %eax;subl %ebx, %eax;movl %ebx, %esi;movl %eax, (%ebp)": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp);jmp - <PsReturnProcessPagedPoolQuota+>;movl %eax, %edi": 1,
                "jmp - <PsReturnProcessPagedPoolQuota+>;movl %eax, %edi;jmp - <PsReturnProcessPagedPoolQuota+>;popl %edi;popl %esi": 1,
                "movl %eax, %edi;jmp - <PsReturnProcessPagedPoolQuota+>;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %edi;movl %esi, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %eax;leal (%ebx,%eax), %edi": 1,
                "cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;je  <PsReturnProcessPagedPoolQuota+>;movl (%ebp), %edx;movl %eax, %ebx": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;jmp  <PsReturnProcessPagedPoolQuota+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %eax, %edi;movl %eax, -(%ebp)": 1,
                "ja - <PsReturnProcessPagedPoolQuota+>;movl (%ebp), %edx;leal (%edx), %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "movl (%eax), %esi;movl %eax, -(%ebp);cmpl %esi, %ebx;movl %esi, -(%ebp);jbe  <PsReturnProcessPagedPoolQuota+>": 1,
                "jmp  <PsReturnProcessPagedPoolQuota+>;movl %esi, %eax;subl %ebx, %eax;movl %ebx, (%ebp);movl %eax, -(%ebp)": 1,
                "je  <PsReturnProcessPagedPoolQuota+>;movl , %esi;movl %eax, %edi;movl $, -(%ebp);jmp - <PsReturnProcessPagedPoolQuota+>": 1,
                "je  <PsGetVersion+>;movl , %ecx;movl %ecx, (%eax);movl , %ecx;movl %ecx, (%eax)": 1,
                "popl %ebp;jmp - <MmTrimAllSystemPagableMemory+>;int;int;int": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movzbl (%eax), %eax;shrl $, %eax": 1,
                "lock;orl %eax, (%ecx);jmp  <PsSetThreadHardErrorsAreDisabled+>;pushl $-;popl %eax": 1,
                "movb (%eax), %al;andb $, %al;popl %ebp;retl $;int": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;xorl %ebx, %ebx;testb $, (%esi);movb %bl, -(%ebp)": 1,
                "calll - <IoReleaseVpbSpinLock>;movl (%edi), %eax;movl (%eax), %eax;andl $-, (%eax);cmpl %ebx, (%edi)": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <IoAcquireVpbSpinLock>;movl (%ebp), %esi": 1,
                "andb $, %al;movzbw %al, %ax;movw %ax, (%ecx);movl (%esi), %eax;movl (%eax), %eax": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %eax;movl %ebx, (%esi);orb $, (%eax)": 1,
                "movb %bl, (%ebp);popl %edi;jmp  <PsIsThreadTerminating+>;movl (%eax), %ecx;cmpl %eax, (%ecx)": 1,
                "movb $, (%ebp);jne  <PsIsThreadTerminating+>;andb $-, (%eax);movl %ebx, (%eax);pushl -(%ebp)": 1,
                "int;retl;movl %edi, %edi;int;retl": 1,
                "movl %eax, -(%ebp);xorl %ebx, %ebx;cmpl $-, (%ebp);je  <vDbgPrintExWithPrefix+>;pushl (%ebp)": 1,
                "cmpl $-, (%ebp);je  <vDbgPrintExWithPrefix+>;pushl (%ebp);pushl (%ebp);calll  <wctomb+>": 1,
                "movl %eax, -(%ebp);movl %ecx, %eax;pushl %esi;leal (%eax), %esi;movb (%eax), %dl": 1,
                "subl %esi, %eax;movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl $;calll - <vDbgPrintExWithPrefix>;popl %ebp;retl $;int": 1,
                "retl $;leal (%ecx), %ecx;movl (%esp), %edx;movw (%edx), %ax;retl $": 1,
                "movl (%esp), %edx;movb (%esp), %al;movb %al, (%edx);lock;orl %edx, (%esp)": 1,
                "shrl $, %ecx;movw %ax, (%edx);rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx;andl $, %ecx": 1,
                "cmpw (%edx), %cx;popl %edi;popl %esi;popl %ebx;jae  <RtlCopyUnicodeString+>": 1,
                "movl %ecx, -(%ebp);leal (%edi,%eax), %ecx;cmpl %edx, %ecx;jle  <RtlAppendUnicodeToString+>;movl $, %eax": 1,
                "movzwl (%esi), %eax;movzwl (%esi), %ebx;movzwl %dx, %edi;leal (%edi,%eax), %edx;cmpl %ebx, %edx": 1,
                "movl $, %eax;jmp  <RtlAppendUnicodeStringToString+>;movl (%ebp), %ecx;testl %ecx, %ecx;pushl %esi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movzwl (%ecx), %eax;pushl %ebx;pushl %esi": 2,
                "movb (%edi), %dl;incl %esi;incl %edi;cmpb %dl, %cl;movb %cl, (%ebp)": 1,
                "movb %dl, (%ebp);je  <RtlEqualString+>;pushl (%ebp);calll  <RtlUpperChar>;pushl (%ebp)": 1,
                "cmpl %eax, %esi;jb - <RtlEqualString+>;movb $, %al;jmp  <RtlEqualString+>;movb (%esi), %cl": 1,
                "cmpb %dl, %cl;jne  <RtlEqualString+>;cmpl %eax, %esi;jb - <RtlEqualString+>;jmp - <RtlEqualString+>": 1,
                "cmpl %eax, %esi;jb - <RtlEqualString+>;jmp - <RtlEqualString+>;xorb %al, %al;popl %edi": 1,
                "jmp  <RtlMapSecurityErrorToNtStatus+>;movl $, %eax;popl %ebp;retl $;jge  <RtlMapSecurityErrorToNtStatus+>": 1,
                "adcb (%ebp), %al;addb %al, (%ecx);addb (%ebx), %al;addb $, %al;pushl %es": 1,
                "orl $, %eax;int;int;movl %edi, %edi;pushl %ebp": 1,
                "movl (%edx), %edx;movl %ecx, %eax;shrl $, %eax;movsbl (%eax,%edx), %eax;andl $, %ecx": 1,
                "pushl %edi;movl (%edx), %edi;movl %ecx, %edx;shrl $, %ecx;xorl %eax, %eax": 1,
                "rep  stosb %al, %es:(%edi);popl %edi;popl %ebp;retl $;int": 2,
                "calll  <RtlFillMemoryUlong>;popl %ebp;retl $;int;int": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %ecx;pushl %ebx;pushl %esi": 3,
                "andl $, -(%ebp);movl %eax, -(%ebp);jmp  <RtlFindClearBits+>;movl -(%ebp), %eax;movl (%ebp), %edx": 1,
                "cmpl $, %esi;jae  <RtlFindClearBits+>;leal (%edx), %eax;shrl $, %eax;movl %eax, -(%ebp)": 1,
                "jae  <RtlFindClearBits+>;leal (%edx), %eax;shrl $, %eax;movl %eax, -(%ebp);jmp  <RtlFindClearBits+>": 1,
                "shrl $, %eax;movl %eax, -(%ebp);jmp  <RtlFindClearBits+>;addl $, %edx;leal -(%esi), %eax": 1,
                "cmpl -(%ebp), %ecx;jbe  <RtlFindClearBits+>;movsbl (%ebx), %eax;cmpl %esi, %eax;jae  <RtlFindClearBits+>": 1,
                "movsbl (%ebx), %eax;cmpl %esi, %eax;jae  <RtlFindClearBits+>;movl -(%ebp), %ecx;addl $, (%ebp)": 1,
                "jmp - <RtlFindClearBits+>;cmpl $, %esi;jae  <RtlFindClearBits+>;movb %dl, (%ebp);movl -(%ebp), %edx": 1,
                "shll $, %edx;leal (,%ecx,), %ecx;orb $-, %al;cmpl %edx, %ecx;movl %edx, -(%ebp)": 1,
                "movl %ecx, %eax;subl %ebx, %eax;leal (%eax,%esi), %ebx;cmpl -(%ebp), %ebx;jbe  <RtlFindClearBits+>": 1,
                "leal (%eax,%esi), %ebx;cmpl -(%ebp), %ebx;jbe  <RtlFindClearBits+>;addl $, %ecx;cmpl -(%ebp), %ecx": 1,
                "leal (%eax,%esi), %edi;cmpl -(%ebp), %edi;jbe - <RtlFindClearBits+>;movl -(%ebp), %edi;testb %dl, %dl": 1,
                "movl -(%ebp), %ecx;andl $, -(%ebp);movb %dl, (%ebp);shll $, %ecx;incl -(%ebp)": 1,
                "movl %ecx, -(%ebp);jmp  <RtlFindSetBits+>;testl %eax, %eax;je  <RtlFindSetBits+>;addl $, %eax": 1,
                "movl %eax, -(%ebp);jbe  <RtlFindSetBits+>;movl %ecx, -(%ebp);xorl %eax, %eax;andl %eax, (%ebp)": 1,
                "jbe  <RtlFindSetBits+>;movl %ecx, -(%ebp);xorl %eax, %eax;andl %eax, (%ebp);andl %eax, -(%ebp)": 1,
                "movl %edi, -(%ebp);movb %cl, (%ebp);ja  <RtlFindSetBits+>;xorb %bl, %bl;shll $, %eax": 1,
                "cmpl %esi, %eax;jb  <RtlFindSetBits+>;movl (%ebp), %eax;subl %ebx, %eax;leal (%eax,%esi), %ebx": 1,
                "movb (%edi), %cl;incl %edi;jmp - <RtlFindSetBits+>;cmpl $, %esi;jae  <RtlFindSetBits+>": 1,
                "incl %edi;jmp - <RtlFindSetBits+>;cmpl $, %esi;jae  <RtlFindSetBits+>;leal (,%eax,), %edi": 1,
                "cmpl $, %esi;jae  <RtlFindSetBits+>;leal (,%eax,), %edi;movl -(%ebp), %eax;shll $, %eax": 1,
                "subl $, %eax;leal (%eax,%esi), %ecx;cmpl -(%ebp), %ecx;jbe  <RtlFindSetBits+>;xorl %eax, %eax": 1,
                "movb (%ebp), %cl;movb -(%ebp), %al;addl $, %edi;cmpl -(%ebp), %edi;movb %cl, -(%ebp)": 1,
                "jb - <RtlFindSetBits+>;incl -(%ebp);cmpl $, -(%ebp);jb - <RtlFindSetBits+>;orl $-, %eax": 1,
                "cmpl -(%ebp), %ecx;jb  <RtlFindSetBits+>;xorl %ecx, %ecx;movb -(%ebp), %cl;xorl %ebx, %ebx": 1,
                "notl %ecx;andl %edx, %ecx;movsbl (%ecx), %ecx;notl %ebx;andl %edx, %ebx": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;leal (%ebx,%ecx,), %ecx;cmpl %esi, %ecx;jb  <RtlFindSetBits+>": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, %edx;andl $, %eax;pushl %edi": 2,
                "movl %eax, %edx;andl $, %eax;pushl %edi;shrl $, %edx;addl (%ecx), %edx": 2,
                "leal -(%eax), %esi;cmpl $, %esi;jbe  <RtlSetBits+>;movl %esi, %ecx;shrl $, %ecx": 1,
                "shrl $, %ebx;movl %ecx, %esi;andl $, %esi;pushl %edi;movl %ebx, -(%ebp)": 1,
                "andl $, %esi;pushl %edi;movl %ebx, -(%ebp);je  <RtlFindClearRuns+>;movl (%eax), %ecx": 1,
                "movl (%ebp), %edx;xorl %edi, %edi;xorl %esi, %esi;cmpl %edi, %edx;movl %eax, -(%ebp)": 1,
                "xorl %esi, %esi;cmpl %edi, %edx;movl %eax, -(%ebp);movl (%ebp), %eax;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);jbe  <RtlFindClearRuns+>;leal (%eax), %ecx;movl %edi, (%ecx);addl $, %ecx": 1,
                "subl %edi, %ecx;addl $, %ecx;movl %ecx, -(%ebp);movsbl (%esi), %ecx;movb (%ecx), %cl": 1,
                "movl %ecx, -(%ebp);movsbl (%esi), %ecx;movb (%ecx), %cl;movl $, %edx;subl %edi, %edx": 1,
                "orb %cl, %bl;cmpb $-, %bl;movb %bl, (%ebp);je  <RtlFindClearRuns+>;movl -(%ebp), %ecx": 1,
                "leal -(%eax,%ecx,), %edx;movl %edx, -(%ebp);jmp  <RtlFindClearRuns+>;movl -(%ebp), %ecx;cmpl (%ebp), %ecx": 1,
                "movl %edx, (%ecx);movl -(%ebp), %edx;addl %edx, %esi;cmpb $, (%ebp);movl %esi, (%ecx)": 1,
                "movl %esi, (%ecx);jne  <RtlFindClearRuns+>;movl -(%ebp), %ecx;cmpl (%ebp), %ecx;jae  <RtlFindClearRuns+>": 1,
                "movl %edi, (%ecx);movl %eax, (%ecx);movl %esi, %eax;popl %edi;popl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx": 15,
                "movl (%eax), %eax;xorl %esi, %esi;testl %ecx, %ecx;jbe  <RtlNumberOfClearBits+>;movb (%eax), %dl": 1,
                "movb (%eax), %dl;movzbl %dl, %edx;movsbl (%edx), %edx;incl %eax;addl %edx, %esi": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi;leal (%edx,%ecx), %eax": 2,
                "jmp  <RtlAreBitsClear+>;movb (%eax), %bl;incl %eax;testb %bl, (%edx);jmp  <RtlAreBitsClear+>": 1,
                "incl %eax;cmpb $-, %dl;jne  <RtlAreBitsSet+>;incl %ecx;cmpl %esi, %ecx": 1,
                "movl %ecx, %edx;shrl $, %edx;leal (%eax,%edx,), %edx;cmpl %esi, %edx;pushl %edi": 1,
                "jb - <RtlFindNextForwardRunClear+>;cmpl (%ebx), %edi;jae  <RtlFindNextForwardRunClear+>;movl (%ebx), %eax;movl %edi, %ebx": 1,
                "cmpl (%ebx), %edi;jae  <RtlFindNextForwardRunClear+>;movl (%ebx), %eax;movl %edi, %ebx;shrl $, %ebx": 1,
                "jae  <RtlFindNextForwardRunClear+>;movl (%ebx), %esi;movl %eax, %ebx;shrl $, %ebx;movl (%esi,%ebx,), %ebx": 1,
                "movl (%ebx), %esi;movl %eax, %ebx;shrl $, %ebx;movl (%esi,%ebx,), %ebx;movl %eax, %ecx": 1,
                "cmpl %edx, %eax;jb - <RtlFindNextForwardRunClear+>;movl (%ebp), %ecx;movl %edi, (%ecx);subl %edi, %eax": 1,
                "movl (%ebp), %ecx;movl %edi, (%ecx);subl %edi, %eax;popl %edi;popl %esi": 1,
                "cmpl $, (%ecx);jne  <RtlFindLastBackwardRunClear+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "leal (%esi,%ecx,), %edx;movl %eax, %ecx;pushl %edi;andl $, %ecx;movl (,%ecx,), %edi": 1,
                "subl $, %edx;subl $, %edi;cmpl %esi, %edx;ja - <RtlFindLastBackwardRunClear+>;jmp  <RtlFindLastBackwardRunClear+>": 1,
                "subl $, %edi;cmpl %esi, %edx;ja - <RtlFindLastBackwardRunClear+>;jmp  <RtlFindLastBackwardRunClear+>;movl %edi, %edx": 1,
                "andl $, %ecx;orl %esi, %ecx;je  <RtlFindMostSignificantBit+>;movb $, %bl;jmp  <RtlFindMostSignificantBit+>": 1,
                "xorl %esi, %esi;orl %esi, %ecx;je  <RtlFindMostSignificantBit+>;movb $, %bl;jmp  <RtlFindMostSignificantBit+>": 1,
                "movl (%ebp), %eax;xorl %edx, %edx;movl %eax, %ecx;pushl %ebx;orl %edx, %ecx": 1,
                "jmp  <RtlFindLeastSignificantBit+>;movb $, %bl;jmp  <RtlFindLeastSignificantBit+>;movl %edx, %esi;andl $, %esi": 1,
                "andl $, %esi;xorl %ecx, %ecx;orl %esi, %ecx;movl %edx, %esi;je  <RtlFindLeastSignificantBit+>": 1,
                "xorl %ecx, %ecx;orl %esi, %ecx;movl %edx, %esi;je  <RtlFindLeastSignificantBit+>;andl $, %esi": 1,
                "orl %esi, %ecx;movl %edx, %esi;je  <RtlFindLeastSignificantBit+>;andl $, %esi;xorl %ecx, %ecx": 1,
                "cmpb (%eax), %ah;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb (%edx), %ch": 1,
                "subb $, %al;je  <RtlFindFirstRunClear+>;jb  <RtlFindFirstRunClear+>;imull $, (%esi), %ebp;jb  <RtlFindFirstRunClear+>": 1,
                "imull $, (%esi), %ebp;pushl $;andb %ch, (%eax);bound (%edi), %ebp;jo  <RtlFindFirstRunClear+>": 1,
                "jne  <RtlFindFirstRunClear+>;movl $, %eax;pushl (%ebp);pushl -(%ebp);pushl %esi": 1,
                "subl $, %eax;je  <RtlFindFirstRunClear+>;decl %eax;je  <RtlFindFirstRunClear+>;subl $, %eax": 1,
                "jae  <RtlWalkFrameChain+>;movl %edx, %ecx;subl %esi, %ecx;cmpl $, %ecx;jb  <RtlWalkFrameChain+>": 1,
                "movl %ecx, -(%ebp);cmpl %edi, %esi;jae  <RtlWalkFrameChain+>;cmpl %edx, %edi;jb  <RtlWalkFrameChain+>": 1,
                "cmpl , %ecx;jb  <RtlWalkFrameChain+>;movl (%ebp), %edx;movl %ecx, (%edx,%eax,);incl %eax": 1,
                "cmpb %bl, -(%ebp);je  <RtlWalkFrameChain+>;movl %eax, -(%ebp);jmp  <RtlWalkFrameChain+>;movl %edi, %esi": 1,
                "movl (%edx), %ecx;movl (%ebp), %ebx;addl %ecx, (%ebp);movl %ecx, (%ebx,%eax,);incl %eax": 1,
                "popl %edx;movl $, (%ecx);addl $, %ecx;decl %edx;jne - <RtlCaptureStackBackTrace+>": 1,
                "movsw (%esi), %es:(%edi);popl %edi;movb $, (%eax);movb $, (%eax);movl $, (%eax)": 2,
                "pushl %eax;movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp)": 3,
                "pushl %eax;calll  <RtlSetOwnerSecurityDescriptor>;testl %eax, %eax;jl  <RtlCaptureStackBackTrace+>;leal -(%ebp), %eax": 1,
                "calll - <ZwSetSecurityObject>;pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>": 1,
                "cmpl %ecx, %esi;jne  <RtlSplay+>;movl %eax, (%eax);jmp  <RtlSplay+>;movl %esi, (%eax)": 4,
                "movl %eax, (%edi);movl %ecx, (%eax);movl %eax, (%ecx);movl %edx, (%eax);movl %eax, (%edx)": 1,
                "movl %edx, (%eax);movl %eax, (%edx);movl %ecx, (%eax);movl %eax, (%ecx);cmpl %eax, (%eax)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;jne  <RtlSubtreeSuccessor+>;popl %ebp": 1,
                "testl %eax, %eax;je  <RtlRealPredecessor+>;jmp  <RtlRealPredecessor+>;movl %ecx, %eax;movl (%eax), %ecx": 1,
                "pushl %edi;movl (%ecx), %edi;cmpl %ecx, %edi;leal (%edx), %esi;je  <RtlRealPredecessor+>": 1,
                "je  <RtlRealPredecessor+>;cmpl %eax, (%esi);je  <RtlRealPredecessor+>;leal (%edx), %esi;leal (%edi), %edx": 1,
                "leal (%edx), %esi;leal (%edi), %edx;cmpl %ecx, (%edx);je  <RtlRealPredecessor+>;leal (%edi), %edx": 1,
                "movl %esi, (%eax);movl %edx, (%ecx);popl %ebx;jmp  <RtlRealPredecessor+>;cmpl %eax, (%esi)": 1,
                "pushl %esi;pushl %esi;calll - <RtlSubtreePredecessor>;pushl %eax;calll - <RtlRealPredecessor+>": 1,
                "pushl %esi;calll - <RtlSubtreePredecessor>;pushl %eax;calll - <RtlRealPredecessor+>;movl (%esi), %eax": 1,
                "jmp  <RtlDelete+>;leal (%eax), %ecx;cmpl %esi, (%ecx);je  <RtlDelete+>;leal (%eax), %ecx": 1,
                "andl $, (%ecx);pushl %eax;jmp  <RtlDelete+>;testl %eax, %eax;jne  <RtlDelete+>": 1,
                "leal (%ecx), %edx;cmpl %esi, (%edx);je  <RtlDeleteNoSplay+>;leal (%ecx), %edx;movl %eax, (%edx)": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);popl %edi;popl %esi;popl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;xorl %edx, %edx;leal (%eax), %ecx": 1,
                "jne  <RtlInsertElementGenericTableFull+>;movl %ebx, (%eax);jmp  <RtlInsertElementGenericTableFull+>;movl %ebx, (%eax);movl %eax, (%ebx)": 1,
                "testl %edx, %edx;leal (%ecx), %eax;je  <RtlGetElementGenericTable+>;decl %edx;movl (%eax), %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <RtlEnumerateGenericTableWithoutSplaying+>": 1,
                "je  <RtlEnumerateGenericTableWithoutSplaying+>;movl %eax, (%esi);leal (%eax), %ecx;negl %eax;sbbl %eax, %eax": 1,
                "jmp  <RtlEnumerateGenericTableWithoutSplaying+>;leal (%esi), %eax;pushl %eax;pushl (%ebp);pushl %edi": 1,
                "je  <RtlEnumerateGenericTableWithoutSplaying+>;movl %eax, %esi;jmp - <RtlEnumerateGenericTableWithoutSplaying+>;cmpl $, %eax;jne  <RtlEnumerateGenericTableWithoutSplaying+>": 1,
                "pushl %eax;pushl (%ebp);calll - <RtlEnumerateGenericTableWithoutSplaying+>;testl %eax, %eax;je  <RtlDeleteElementGenericTable+>": 1,
                "movl %eax, (%ecx);movl %ecx, (%eax);decl (%edi);andl $, (%edi);pushl %esi": 1,
                "movl %ecx, (%eax);decl (%edi);andl $, (%edi);pushl %esi;leal (%edi), %eax": 1,
                "pushl (%ebp);calll - <RtlEnumerateGenericTableWithoutSplaying+>;testl %eax, %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "addl $, %eax;jmp  <RtlLookupElementGenericTableFull+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "cmpb $, (%ebp);jne  <RtlEnumerateGenericTable+>;pushl %esi;calll  <RtlRealSuccessor>;movl %eax, %esi": 1,
                "testl %esi, %esi;je  <RtlEnumerateGenericTable+>;pushl %esi;calll - <RtlSplay>;movl %eax, (%edi)": 1,
                "calll - <RtlSplay>;movl %eax, (%edi);movl %esi, %eax;addl $, %esi;negl %eax": 1,
                "movl %edx, (%eax);je  <RtlLookupElementGenericTable+>;movl %eax, (%edx);movl %eax, (%ecx);jmp  <RtlLookupElementGenericTable+>": 1,
                "jmp  <RtlLookupElementGenericTable+>;movl (%ecx), %edx;testl %edx, %edx;movl %edx, (%eax);je  <RtlLookupElementGenericTable+>": 1,
                "movl %ecx, (%esi);jmp  <RtlLookupElementGenericTable+>;movl %ecx, (%esi);movl %esi, (%ecx);popl %esi": 1,
                "xorb %dl, %dl;movb %dl, (%esi);movb %dl, (%edi);xorl %eax, %eax;jmp  <RtlLookupElementGenericTable+>": 1,
                "negb %bl;xorl %eax, %eax;movb %bl, (%esi);incl %eax;popl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;pushl %ebx;movl (%ecx), %ebx": 1,
                "pushl %ebx;movl (%ecx), %ebx;testl %ebx, %ebx;pushl %esi;pushl %edi": 1,
                "movl (%ebx), %ecx;movl (%ebx), %eax;orb $-, %dl;testl %ecx, %ecx;jne  <RtlLookupElementGenericTable+>": 1,
                "movl (%ebx), %eax;movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebp), %esi;movb $, (%esi)": 1,
                "jne  <RtlLookupElementGenericTable+>;movl (%edi), %edi;movl (%edi), %eax;orb $-, %dl;cmpl %edi, (%eax)": 1,
                "movb $, (%eax);cmpb $, (%esi);jne  <RtlInsertElementGenericTableFullAvl+>;incl (%esi);jmp  <RtlInsertElementGenericTableFullAvl+>": 1,
                "rep  movsb (%esi), %es:(%edi);popl %edi;jmp  <RtlInsertElementGenericTableFullAvl+>;movl (%ebp), %ebx;movl (%ebp), %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %eax;testl %eax, %eax;je  <RtlInsertElementGenericTableFullAvl+>;cmpl $, (%ebp)": 1,
                "decl %ebx;decl %edi;jne - <RtlGetElementGenericTableAvl+>;jmp  <RtlGetElementGenericTableAvl+>;movl %ebx, %edx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;cmpl $, (%ecx);jne  <RtlEnumerateGenericTableWithoutSplayingAvl+>": 1,
                "pushl $;jmp - <RtlEnumerateGenericTableWithoutSplayingAvl+>;xorl %eax, %eax;incl %eax;movl (%ebp), %ecx": 1,
                "jmp - <RtlEnumerateGenericTableWithoutSplayingAvl+>;xorl %eax, %eax;incl %eax;movl (%ebp), %ecx;movl %esi, (%ecx)": 1,
                "pushl %eax;pushl -(%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 2,
                "pushl %edi;calll - <RtlRealSuccessor+>;movl %eax, (%esi);incl (%esi);pushl %edi": 1,
                "movl (%ebp), %esi;pushl %esi;pushl (%ebp);pushl (%ebp);calll - <RtlEnumerateGenericTableWithoutSplayingAvl+>": 1,
                "je  <RtlEnumerateGenericTableAvl+>;andl $, (%eax);leal (%eax), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %ecx;pushl %eax;calll - <RtlEnumerateGenericTableWithoutSplayingAvl>;popl %ebp;retl $": 1,
                "cmpl (%edi), %eax;je  <RtlEnumerateGenericTableLikeADirectory+>;xorl %esi, %esi;movl %esi, -(%ebp);cmpl %ebx, %esi": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);cmpl %ebx, %esi;jne  <RtlEnumerateGenericTableLikeADirectory+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;cmpl %ebx, (%ebp);je  <RtlEnumerateGenericTableLikeADirectory+>;pushl %esi;calll - <RtlRealSuccessor>": 1,
                "je  <RtlEnumerateGenericTableLikeADirectory+>;pushl %esi;calll - <RtlRealSuccessor>;movl %eax, %esi;jmp  <RtlEnumerateGenericTableLikeADirectory+>": 1,
                "movl %eax, %ebx;cmpl $, %ebx;jne  <RtlEnumerateGenericTableLikeADirectory+>;pushl %esi;calll - <RtlRealSuccessor>": 1,
                "movl (%ebp), %ecx;jecxz  <RtlGetCallersAddress+>;movl %edi, (%ecx);popl -;popl %edi": 1,
                "popl %edi;popl %edi;popl %esi;popl %ebx;popl %ebp": 1,
                "testb $, (%ebp);movl , %eax;pushl %edi;movl (%ebp), %edi;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edi;movl %eax, -(%ebp);je  <RtlGetCallersAddress+>;pushl %esi;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;movb (%eax), %dl;movb %dl, %cl;cmpb (%esi), %dl;jne  <RtlGetCallersAddress+>": 1,
                "incl %esi;testb %cl, %cl;jne - <RtlGetCallersAddress+>;xorl %eax, %eax;jmp  <RtlGetCallersAddress+>": 1,
                "movl (%ebp), %edx;cmpl %ecx, %edx;sete %al;movb %al, (%edi);movl (%ebp), %eax": 1,
                "xorl %eax, %eax;cmpl %edx, %ecx;setl %al;jmp  <RtlGetCallersAddress+>;xorl %eax, %eax": 1,
                "cmpl %edx, %ecx;setge %al;jmp  <RtlGetCallersAddress+>;xorl %eax, %eax;cmpl %edx, %ecx": 1,
                "movzbl (%ebp), %eax;shll %cl, %eax;cltd;orl (%ebp), %edx;orl (%ebp), %eax": 1,
                "testl %eax, %eax;jne  <RtlVerifyVersionInfo+>;testb $, (%ebp);pushl %ebx;movl $, %edi": 1,
                "movl (%ebp), %ecx;andl %edi, %ecx;xorl %eax, %eax;orl %ecx, %eax;jne  <RtlVerifyVersionInfo+>": 1,
                "movl (%ebp), %ebx;xorl %esi, %esi;incl %esi;testb $, (%ebp);movb $, -(%ebp)": 1,
                "xorl %eax, %eax;orl %ecx, %eax;jne  <RtlVerifyVersionInfo+>;movl (%ebp), %esi;movl %esi, %eax": 1,
                "jne  <RtlVerifyVersionInfo+>;movl (%ebp), %esi;movl %esi, %eax;movl %ebx, %ecx;shrdl $, %ecx, %eax": 1,
                "movl (%ebp), %esi;movl %esi, %eax;movl %ebx, %ecx;shrdl $, %ecx, %eax;shrl $, %ecx": 1,
                "xorl %eax, %eax;orl %ecx, %eax;jne  <RtlVerifyVersionInfo+>;xorl %eax, %eax;jmp  <RtlVerifyVersionInfo+>": 1,
                "orl %ecx, %eax;jne  <RtlVerifyVersionInfo+>;xorl %eax, %eax;jmp  <RtlVerifyVersionInfo+>;pushl $": 1,
                "leal -(%ebp), %ecx;pushl %ecx;movzbl -(%ebp), %ecx;pushl %ecx;movl -(%ebp), %ecx": 1,
                "leal (%eax,%ecx), %eax;movzwl (%ecx), %ecx;pushl %esi;xorl %esi, %esi;testl %ecx, %ecx": 1,
                "pushl %edi;movl (%ebp), %edi;cmpl %esi, %edi;jae  <RtlImageNtHeader+>;pushl %ebx": 2,
                "leal (%eax,%edi), %ebx;cmpl %esi, %ebx;popl %ebx;jb  <RtlImageNtHeader+>;xorl %eax, %eax": 2,
                "pushl %ebx;movl (%ebp), %ebx;testb $, %bl;je  <RtlImageDirectoryEntryToData+>;andl $-, %ebx": 1,
                "testl %eax, %eax;je  <RtlImageDirectoryEntryToData+>;movw (%eax), %cx;cmpw $, %cx;jne  <RtlImageDirectoryEntryToData+>": 1,
                "pushl (%ebp);pushl %ebx;calll - <RtlImageNtHeader+>;jmp  <RtlImageDirectoryEntryToData+>;cmpw $, %cx": 1,
                "pushl %ebx;calll - <RtlImageNtHeader+>;jmp  <RtlImageDirectoryEntryToData+>;xorl %eax, %eax;popl %ebx": 1,
                "notl %ecx;cmpl $, %ecx;jbe  <RtlInitString+>;movl $, %ecx;movw %cx, (%edx)": 1,
                "movl %edi, (%edx);orl %edi, %edi;je  <RtlInitUnicodeString+>;orl $-, %ecx;xorl %eax, %eax": 1,
                "orl $-, %ecx;xorl %eax, %eax;repne  scasw %es:(%edi), %ax;notl %ecx;shll %ecx": 1,
                "movw %cx, (%edx);decl %ecx;decl %ecx;movw %cx, (%edx);popl %edi": 1,
                "cmpb (%eax), %al;addb %al, (%eax);cmpb (%edx), %bh;andl $, %eax;andl $, %eax": 1,
                "cmpw %dx, %cx;jne  <RtlIpvAddressToStringA+>;movw (%esi), %ax;cmpw %dx, %ax;je  <RtlIpvAddressToStringA+>": 1,
                "cmpw %dx, (%esi);jne  <RtlIpvAddressToStringA+>;movzbl (%esi), %eax;pushl %eax;movzbl (%esi), %eax": 1,
                "pushl (%ebp);calll  <sprintf>;addl $, %esp;addl (%ebp), %eax;jmp  <RtlIpvAddressToStringA+>": 1,
                "pushl %edi;xorl %edi, %edi;testw $, (%esi);movl %edx, (%ebp);movl %edx, -(%ebp)": 2,
                "cmpw %dx, (%ecx);jne  <RtlIpvAddressToStringA+>;movl (%ebp), %ebx;subl -(%ebp), %ebx;movl %eax, %edx": 1,
                "jle  <RtlIpvAddressToStringA+>;movl %edi, -(%ebp);movl %eax, (%ebp);xorl %edx, %edx;incl %ecx": 1,
                "je  <RtlIpvAddressToStringA+>;cmpl (%ebp), %edi;je  <RtlIpvAddressToStringA+>;pushl $;pushl %ebx": 1,
                "movl %ebx, %eax;popl %ebx;popl %esi;leave;retl $": 7,
                "addb %al, (%eax);addb %ah, ;addb %al, (%eax);addb %bl, (%ebp);andl $, %eax": 1,
                "movl $, %eax;jmp  <RtlIpvAddressToStringExA+>;movl %edx, %ecx;movl %ecx, %eax;shrl $, %ecx": 1,
                "jmp  <RtlIpvAddressToStringExA+>;movl %edx, %ecx;movl %ecx, %eax;shrl $, %ecx;leal -(%ebp), %esi": 1,
                "jmp  <RtlIpvAddressToStringExA+>;movl $, %eax;movl -(%ebp), %ecx;popl %edi;popl %ebx": 1,
                "retl $;int;addb %al, (%eax);addb %al, (%eax);cmpb (%eax), %al": 1,
                "addb %al, (%eax);cmpb (%eax), %al;cmpb (%eax), %al;andl $, %eax;addb %ah, ": 1,
                "andl $, %eax;addb %ah, ;addb %ah, ;addb %ah, ;addb %ah, ": 1,
                "addb %bh, (%edx);addb %dh, (%eax);addb %bh, (%edx);addb %ah, ;addb %ah, ": 1,
                "movl %esi, %ecx;movl %ebx, -(%ebp);cmpw %dx, (%ecx);jne  <RtlIpvAddressToStringW+>;movl (%ebp), %ebx": 1,
                "subl %edi, %edx;cmpl %ebx, %edx;jle  <RtlIpvAddressToStringW+>;movl %edi, -(%ebp);movl %eax, (%ebp)": 1,
                "pushl $;pushl %edi;calll  <swprintf>;popl %ecx;popl %ecx": 1,
                "popl %ecx;popl %ecx;leal (%edi,%eax,), %edi;movw (%esi,%ebx,), %ax;movb %al, %ch": 1,
                "calll  <swprintf>;addl $, %esp;incl %ebx;cmpl -(%ebp), %ebx;leal (%edi,%eax,), %edi": 1,
                "popl %edi;popl %esi;leave;retl $;popl %ebx": 1,
                "je  <RtlIpvAddressToStringExW+>;testl %edi, %edi;je  <RtlIpvAddressToStringExW+>;testl %ebx, %ebx;je  <RtlIpvAddressToStringExW+>": 2,
                "pushl %esi;calll  <swprintf>;addl $, %esp;leal (%esi,%eax,), %esi;leal -(%ebp), %eax": 2,
                "movl (%ebp), %esi;pushl %ecx;movzbl (%eax), %ecx;pushl %ecx;movzbl (%eax), %ecx": 1,
                "testl %edi, %edi;je  <RtlIpvAddressToStringExW+>;testl %ebx, %ebx;je  <RtlIpvAddressToStringExW+>;pushl %esi": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll - <RtlIpvAddressToStringW>;cmpw $, (%ebp)": 1,
                "je  <RtlIpvStringToAddressA+>;incl -(%ebp);jmp  <RtlIpvStringToAddressA+>;pushl %esi;calll  <isprint+>": 1,
                "cmpb $, %bl;jne  <RtlIpvStringToAddressA+>;cmpl $, -(%ebp);ja  <RtlIpvStringToAddressA+>;cmpl $, -(%ebp)": 1,
                "ja  <RtlIpvStringToAddressA+>;leal (%edi), %eax;cmpb %bl, (%eax);jne  <RtlIpvStringToAddressA+>;cmpl $, -(%ebp)": 1,
                "pushl $;movl %ecx, -(%ebp);popl %ecx;addl %ecx, -(%ebp);jmp  <RtlIpvStringToAddressA+>": 1,
                "cmpb %bl, (%eax);jne  <RtlIpvStringToAddressA+>;movl -(%ebp), %edi;movl (%ebp), %esi;incl -(%ebp)": 1,
                "movb (%edi), %bl;testb %bl, %bl;jne - <RtlIpvStringToAddressA+>;movl (%ebp), %eax;movl %edi, (%eax)": 1,
                "movl %edi, (%eax);movl -(%ebp), %edi;xorl %eax, %eax;cmpl %eax, %edi;je  <RtlIpvStringToAddressA+>": 1,
                "jne  <RtlIpvStringToAddressA+>;incl -(%ebp);movl -(%ebp), %esi;cmpl %eax, %esi;jne  <RtlIpvStringToAddressA+>": 1,
                "cmpl $, -(%ebp);jne  <RtlIpvStringToAddressA+>;cmpl $, -(%ebp);jne  <RtlIpvStringToAddressA+>;cmpl %eax, %edi": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %edx;leal (%edi,%ecx,), %ecx;movb %al, (%ecx,%edx);jmp  <RtlIpvStringToAddressA+>": 1,
                "xorl %ecx, %ecx;cmpl %ecx, %eax;pushl %esi;pushl %edi;je  <RtlIpvStringToAddressExA+>": 1,
                "calll  <islower>;testl %eax, %eax;popl %ecx;je  <RtlIpvStringToAddressExA+>;pushl $": 4,
                "subl %eax, %ecx;leal (%ebx,%ecx), %eax;movl %eax, -(%ebp);incl %esi;movb (%esi), %al": 1,
                "movw -(%ebp), %ax;movb %al, %ch;movb %ah, %cl;movl (%ebp), %eax;movw %cx, (%eax)": 2,
                "testl %eax, %eax;popl %ecx;je  <RtlIpvStringToAddressA+>;pushl %esi;calll  <isprint+>": 1,
                "testl %eax, %eax;popl %ecx;je  <RtlIpvStringToAddressA+>;pushl %esi;calll  <islower>": 1,
                "jmp  <RtlIpvStringToAddressA+>;pushl $;movl -(%ebp), %ecx;popl %eax;shll $, %ecx": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);movl $, %eax;jmp  <RtlIpvStringToAddressA+>;movl -(%ebp), %edi": 1,
                "ja - <RtlIpvStringToAddressA+>;movl -(%ebp), %edx;cmpl %eax, %edx;ja - <RtlIpvStringToAddressA+>;andl %eax, %ecx": 1,
                "andl %eax, %ecx;shll $, %edi;orl %edi, %ecx;shll $, %ecx;andl %eax, %esi": 1,
                "jmp  <RtlIpvStringToAddressA+>;movl -(%ebp), %esi;movl $, %eax;cmpl %eax, %esi;ja - <RtlIpvStringToAddressA+>": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebp);pushl %edi;je  <RtlIpvStringToAddressExA+>": 1,
                "movl $, (%ebp);jne  <RtlIpvStringToAddressExA+>;incl %edi;movb (%edi), %al;cmpb $, %al": 1,
                "imull (%ebp), %ecx;leal -(%ecx,%eax), %eax;jmp  <RtlIpvStringToAddressExA+>;cmpw $, (%ebp);jne  <RtlIpvStringToAddressExA+>": 1,
                "jmp  <RtlIpvStringToAddressExA+>;pushl $;movzwl (%ebp), %ecx;popl %eax;shll $, %ecx": 1,
                "jne - <RtlIpvStringToAddressExA+>;cmpb %bl, (%ebp);je  <RtlIpvStringToAddressExA+>;movl $, %eax;popl %edi": 1,
                "movl %esi, (%ebp);movw (%ebp), %ax;movb %al, %ch;movb %ah, %cl;movl (%ebp), %eax": 1,
                "movb %ah, %cl;movl (%ebp), %eax;movw %cx, (%eax);xorl %eax, %eax;jmp - <RtlIpvStringToAddressExA+>": 1,
                "ja  <RtlIpvStringToAddressW+>;cmpl %edx, -(%ebp);ja  <RtlIpvStringToAddressW+>;leal (%edi), %eax;cmpw %si, (%eax)": 1,
                "jne  <RtlIpvStringToAddressW+>;movl (%ebp), %esi;pushl $;popl %ecx;movw %dx, (%esi,%ebx,)": 1,
                "movl (%ebp), %esi;pushl $;popl %ecx;movw %dx, (%esi,%ebx,);movl $, -(%ebp)": 1,
                "xorl %edx, %edx;movw (%edi), %si;cmpw %dx, %si;jne - <RtlIpvStringToAddressW+>;movl (%ebp), %eax": 1,
                "cmpl $, -(%ebp);jne  <RtlIpvStringToAddressW+>;movl (%ebp), %ecx;movw %ax, (%ecx,%ebx,);movl -(%ebp), %eax": 1,
                "calll  <wctomb+>;testl %eax, %eax;popl %ecx;popl %ecx;je  <RtlIpvStringToAddressExW+>": 6,
                "movw (%edi), %si;testw %si, %si;movl %eax, -(%ebp);jne - <RtlIpvStringToAddressExW+>;cmpw $, (%edi)": 2,
                "movl $, (%ebp);jne  <RtlIpvStringToAddressExW+>;addl %ecx, %edi;movw (%edi), %ax;cmpw $, %ax": 1,
                "addl %ecx, %edi;movw (%edi), %ax;cmpw $, %ax;movl $, (%ebp);je  <RtlIpvStringToAddressExW+>": 1,
                "movl $, %eax;cmpw %ax, %si;jae  <RtlIpvStringToAddressExW+>;pushl %eax;pushl %esi": 2,
                "je  <RtlIpvStringToAddressExW+>;pushl $;pushl %esi;calll  <wctomb+>;negl %eax": 2,
                "calll  <wctomb+>;negl %eax;sbbl %eax, %eax;popl %ecx;popl %ecx": 2,
                "ja  <RtlIpvStringToAddressExW+>;shll $, -(%ebp);pushl $;pushl %esi;calll  <wctomb+>": 1,
                "shll $, -(%ebp);pushl $;pushl %esi;calll  <wctomb+>;negl %eax": 1,
                "jne - <RtlIpvStringToAddressExW+>;cmpw $, (%edi);jne  <RtlIpvStringToAddressExW+>;cmpb $, (%ebp);jne  <RtlIpvStringToAddressExW+>": 1,
                "movl (%ebp), %edi;leal -(%ebp), %ebx;andl $, -(%ebp);cmpw $, (%edi);movb $, (%ebp)": 1,
                "je  <RtlIpvStringToAddressW+>;cmpw $, %ax;je  <RtlIpvStringToAddressW+>;movb $, (%ebp);jmp  <RtlIpvStringToAddressW+>": 1,
                "popl %ecx;je  <RtlIpvStringToAddressW+>;movzwl %si, %eax;leal -(%eax), %ecx;cmpl -(%ebp), %ecx": 1,
                "je  <RtlIpvStringToAddressW+>;pushl $;pushl %esi;calll  <wctomb+>;negl %eax": 1,
                "addl $, %ebx;incl %edi;incl %edi;cmpb $, (%ebp);jne - <RtlIpvStringToAddressW+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);leal -(%ebp), %eax;subl %eax, %ebx;addl $, %ebx": 1,
                "cmpb $, (%ebp);je  <RtlIpvStringToAddressW+>;cmpl $, %ebx;jne  <RtlIpvStringToAddressW+>;movl %ebx, %eax": 1,
                "jne  <RtlIpvStringToAddressW+>;movl %ebx, %eax;decl %eax;je  <RtlIpvStringToAddressW+>;decl %eax": 1,
                "cmpl %eax, %esi;ja - <RtlIpvStringToAddressW+>;movl -(%ebp), %edx;cmpl %eax, %edx;ja - <RtlIpvStringToAddressW+>": 1,
                "shll $, %ecx;andl %eax, %edx;orl %edx, %ecx;jmp  <RtlIpvStringToAddressW+>;movl -(%ebp), %esi": 1,
                "andl %ebx, %edx;jmp - <RtlIpvStringToAddressW+>;movl -(%ebp), %eax;cmpl $, %eax;ja - <RtlIpvStringToAddressW+>": 1,
                "cmpl %edx, %ecx;ja - <RtlIpvStringToAddressW+>;andl %edx, %ecx;shll $, %eax;orl %eax, %ecx": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %eax;movl %edi, (%eax);movl (%ebp), %eax;bswapl %ecx": 1,
                "movzwl %bx, %ecx;imull %ecx, %eax;movzwl %si, %ecx;leal -(%eax,%ecx), %eax;cmpl $, %eax": 1,
                "ja  <RtlIpvStringToAddressExW+>;movl (%ebp), %eax;imull %ebx, %eax;leal -(%eax,%esi), %ebx;jmp  <RtlIpvStringToAddressExW+>": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi;movl %ebx, %eax": 2,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl $, %eax": 2,
                "movl %esp, %ebp;movl (%ebp), %eax;testl $, %eax;jne  <RtlNtStatusToDosErrorNoTeb+>;pushl %edi": 1,
                "movzwl (,%ecx,), %edx;movzwl (,%ecx,), %ebx;imull %ebx, %edx;addl %edx, %esi;incl %ecx": 1,
                "cmpl $, %ecx;jb - <RtlNtStatusToDosErrorNoTeb+>;jmp  <RtlNtStatusToDosErrorNoTeb+>;shll $, %ecx;movzwl (%ecx), %ebx": 1,
                "movw %fs, (%eax);movw %gs, (%eax);movw %ss, (%eax);movl $, (%eax);pushl $": 1,
                "movl %ecx, %eax;movl $, %esi;divl %esi;xorl %edx, %edx;pushl %edi": 1,
                "movl $, %ebx;movl %eax, %esi;imull $, %eax, %eax;addl %eax, %ecx;movl %ecx, %eax": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl $;pushl ": 1,
                "calll  <_allmul>;addl %esi, %eax;pushl $;adcl %edi, %edx;pushl %edx": 1,
                "divl %edi;movl %ecx, %edi;imull $, %edi, %edi;xorl %edx, %edx;pushl $": 1,
                "movswl (,%eax,), %eax;jmp  <RtlTimeToTimeFields+>;movzbl (%edi), %eax;movl %eax, (%ebp);movswl (,%eax,), %eax": 1,
                "pushl %esi;pushl %edi;movswl %dx, %esi;movswl %cx, %edi;movl %ecx, -(%ebp)": 1,
                "testl %edx, %edx;je  <RtlTimeFieldsToTime+>;movl (%ebp), %eax;pushl $;xorl %edx, %edx": 1,
                "xorl %edx, %edx;popl %ebx;divl %ebx;testl %edx, %edx;je  <RtlTimeFieldsToTime+>": 2,
                "imull $, %ecx, %ecx;addl -(%ebp), %ecx;addl %eax, %esi;imull $, %ecx, %ecx;addl -(%ebp), %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;pushl $;pushl ": 2,
                "movl %esp, %ebp;movl , %edx;movl (%ebp), %eax;xorl %ecx, %ecx;addl %edx, %eax": 2,
                "pushl (%ebp);movl (%ebp), %edi;pushl %edi;calll *(%esi);movl %eax, %ecx": 1,
                "incl (%ecx);xorl %edx, %edx;divl (%esi);movl (%esi), %eax;movl (%eax,%edx,), %edx": 1,
                "movl (%ecx,%eax), %ebx;cmpl (%eax), %ebx;jne  <RtlSecondsSinceToTime+>;incl %esi;addl $, %eax": 1,
                "je  <RtlSecondsSinceToTime+>;movl (%edx), %edx;testl %edx, %edx;jne - <RtlSecondsSinceToTime+>;movl (%ebp), %eax": 1,
                "cmpl %esi, %edx;jb - <RtlSecondsSinceToTime+>;popl %edi;popl %ebx;popl %esi": 1,
                "calll - <RtlSecondsSinceToTime+>;movl (%ebp), %eax;movl (%eax), %ecx;xorl %ebx, %ebx;cmpl %ebx, %ecx": 1,
                "cmpl %esi, %ecx;jne  <RtlTraceDatabaseEnumerate+>;movl (%eax), %ecx;cmpl (%esi), %ecx;jae  <RtlTraceDatabaseEnumerate+>": 1,
                "jmp  <RtlTraceDatabaseEnumerate+>;incl (%eax);movl (%eax), %ecx;cmpl (%esi), %ecx;jae  <RtlTraceDatabaseEnumerate+>": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movb $, %bl;pushl %esi;calll - <RtlSecondsSinceToTime+>": 1,
                "movl %ecx, (%esi);movl (%ebp), %ecx;pushl $;movl %ecx, (%esi);movl %edi, (%esi)": 1,
                "pushl $;movl %ecx, (%esi);movl %edi, (%esi);movl %eax, (%esi);movl %eax, (%esi)": 1,
                "popl %ecx;xorl %eax, %eax;movl $, (%esi);movl $, (%esi);leal (%esi), %edi": 1,
                "jne  <RtlTraceDatabaseCreate+>;pushl (%ebp);pushl %esi;calll - <RtlSecondsSinceToTime+>;xorl %eax, %eax": 1,
                "andl $, %eax;int;int;int;int": 16,
                "calll - <RtlSecondsSinceToTime+>;testb %al, %al;jne  <RtlTraceDatabaseDestroy+>;pushl %esi;pushl $": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %esi;calll - <RtlSecondsSinceToTime+>;movl (%esi), %eax": 1,
                "jmp  <RtlTraceDatabaseValidate+>;movl (%eax), %eax;testl %eax, %eax;jne - <RtlTraceDatabaseValidate+>;addl $, %ecx": 1,
                "jb  <RtlTraceDatabaseFind+>;arpl %sp, (%ebp);popal;je  <RtlTraceDatabaseFind+>;bound (%ecx), %esp": 1,
                "calll - <RtlSecondsSinceToTime+>;testb %al, %al;je  <RtlTraceDatabaseFind+>;movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "incl (%eax);testl %ecx, %ecx;je  <RtlTraceDatabaseFind+>;movl %eax, (%ecx);incl (%edi)": 1,
                "incl (%edi);movb $, %al;jmp  <RtlTraceDatabaseFind+>;movl (%edi), %eax;movl (%eax), %edx": 1,
                "testl %eax, %eax;je - <RtlTraceDatabaseFind+>;leal (%eax), %ecx;movl %ecx, (%eax);leal (%eax), %ecx": 1,
                "movl (%edi), %ecx;movl %ebx, %eax;shll $, %eax;movl (%eax,%ecx), %ecx;movl %ecx, (%esi)": 1,
                "movl (%eax,%ecx), %ecx;movl %ecx, (%esi);movl (%edi), %ecx;movl %esi, (%eax,%ecx);movl (%ebp), %eax": 1,
                "movl (%ebp), %edi;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %edi;calll  <RtlUnwind+>;testl %eax, %eax;je  <RtlTraceDatabaseAdd+>": 1,
                "subl -(%ebp), %edi;xorl %edx, %edx;testl %esi, %esi;jl  <RtlTraceDatabaseAdd+>;leal (%esi,%edx), %ecx": 1,
                "pushl (%ebp);pushl %esi;calll  <RtlUnwind+>;movl %eax, (%ebp);pushl (%ebx)": 1,
                "xorl %edi, %edi;cmpl %edi, %esi;jne  <RtlUnwind+>;movl (%ebp), %eax;leal -(%ebp), %esi": 1,
                "pushl (%ebx);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);calll - <RtlRaiseException>;jmp  <RtlUnwind+>": 1,
                "movl %esi, -(%ebp);calll - <RtlRaiseException>;jmp  <RtlUnwind+>;movl -(%ebp), %ebx;movl %ebx, %eax": 1,
                "jmp  <RtlUnwind+>;testb $, %bl;jne  <RtlUnwind+>;calll *;cmpb $, %al": 1,
                "cmpl %eax, %ebx;jb  <RtlUnwind+>;movl %ecx, -(%ebp);movl %eax, -(%ebp);jmp  <RtlUnwind+>": 1,
                "xorl %edi, %edi;cmpl $-, %ebx;jne - <RtlUnwind+>;cmpl $-, (%ebp);popl %ebx": 1,
                "imull $, %eax, %eax;pushl $;pushl %eax;pushl $;calll  <ExAllocatePoolWithTag>": 1,
                "pushl %ecx;pushl %ecx;cmpl $, ;jne  <RtlUnwind+>;xorl %eax, %eax": 1,
                "jne  <RtlUnwind+>;xorl %eax, %eax;jmp  <RtlUnwind+>;pushl %ebx;pushl %esi": 1,
                "movl , %ecx;movl (%ebp), %esi;leal (%eax,%ecx), %edi;pushl $;popl %ecx": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movl , %ecx;movl (%ebp), %esi;leal (%eax,%ecx), %edi": 1,
                "movl , %ecx;movl (%ebp), %esi;leal (%eax,%ecx), %edi;movl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax;pushl $;leal (%ebp), %eax": 1,
                "movl (%edi), %eax;addl $-, %ecx;cmpl %eax, %ecx;jae  <RtlUnwind+>;addl $, %eax": 1,
                "addl $-, %ecx;cmpl %eax, %ecx;jae  <RtlUnwind+>;addl $, %eax;cmpl (%esi), %eax": 1,
                "movl %eax, (%edi);jmp  <RtlUnwind+>;pushl $;movl $, %ebx;pushl %ebx": 1,
                "movl $, %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "jmp  <RtlUnwind+>;addl $-, (%esi);cmpb $, (%esi);movl (%esi), %edi;movl (%ebp), %ebx": 1,
                "pushl $;pushl $;leal -(%ebp), %ecx;pushl %ecx;pushl $": 1,
                "jb  <RtlUnwind+>;addl $, %ecx;subl %ebx, %eax;movl %ecx, (%esi);movl %eax, (%esi)": 1,
                "calll  <memmove>;andl $, (%edi);andl $, (%edi);addl $, %esp;incl (%esi)": 1,
                "movl -(%ebp), %eax;movl %edi, -(%eax);movl %edi, %eax;popl %edi;popl %esi": 1,
                "int;pushl $;pushl $;calll  <wctomb+>;xorl %eax, %eax": 3,
                "pushl $;calll - <RtlCaptureStackBackTrace>;movw %ax, -(%ebp);jmp  <RtlUnwind+>;xorl %eax, %eax": 1,
                "retl;movl -(%ebp), %esp;andw $, -(%ebp);orl $-, -(%ebp);cmpw $, -(%ebp)": 1,
                "calll - <RtlUnwind+>;movl %eax, %ecx;testl %ecx, %ecx;je  <RtlUnwind+>;incl (%ecx)": 2,
                "xorl %esi, %esi;orl $-, -(%ebp);calll - <RtlUnwind+>;testl %esi, %esi;je  <RtlUnwind+>": 2,
                "testl %esi, %esi;je  <RtlUnwind+>;incl (%esi);movw (%esi), %ax;jmp  <RtlUnwind+>": 2,
                "incl %eax;cmpl %ecx, %eax;jb - <RtlUnwind+>;calll - <RtlUnwind+>;movl %eax, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;calll *;cmpb $, %al;jbe  <RtlUnwind+>": 1,
                "xorb %al, %al;jmp  <RtlUnwind+>;pushl %esi;movl %fs:, %eax;movl (%eax), %eax": 1,
                "movl (%ebp), %edx;movl (%ebp), %esi;movl %eax, (%edx);cmpl %esi, (%ecx);ja  <RtlUnwind+>": 1,
                "movl %eax, (%ecx);movl (%edx), %edi;testl %edi, %edi;je  <RtlUnwind+>;cmpl %esi, %eax": 1,
                "testl %edi, %edi;jne - <RtlUnwind+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "pushl %ecx;movl (%ebp), %eax;movzwl (%eax), %edx;andw $, (%eax);xorl %ecx, %ecx": 1,
                "movl %ecx, -(%ebp);movl %ecx, (%eax);movl %ecx, (%eax);je  <RtlUnwind+>;cmpl $, %edx": 1,
                "movl %ecx, (%eax);leal (%eax), %edx;jmp  <RtlUnwind+>;movl (%eax), %esi;leal (%eax), %edx": 1,
                "movl %ecx, (%eax);jbe  <RtlUnwind+>;movl (%edx), %edi;movl %ecx, (%edx);movl %ecx, (%edx)": 1,
                "jbe  <RtlUnwind+>;movl %ecx, (%edx);movl %ecx, (%edx);cmpl $, %esi;jbe  <RtlUnwind+>": 1,
                "pushl (%ebp);movl %eax, %esi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "pushl (%ebp);pushl %ecx;pushl $;pushl $;pushl $": 1,
                "insb %dx, %es:(%edi);jne  <RtlUnwind+>;andb %ch, %gs:(%eax);pushl %eax;incl %ebp": 1,
                "pushl %edi;pushl (%ebp);pushl %esi;calll - <RtlUnwind+>;testl %eax, %eax": 1,
                "pushl (%ebp);pushl %esi;calll - <RtlUnwind+>;testl %eax, %eax;jl  <RtlUnwind+>": 1,
                "pushl %ebx;pushl (%ebp);pushl %edi;calll - <RtlUnwind+>;movl (%esi), %ecx": 1,
                "orb $, (%esi);pushl %edi;calll  <RtlTimeToElapsedTimeFields+>;movb $, %al;jmp  <RtlUnwind+>": 1,
                "pushl $;calll - <DbgPrintEx>;addl $, %esp;pushl %edi;calll  <RtlTimeToElapsedTimeFields+>": 1,
                "cmpl $, %ecx;je  <RtlUnwind+>;cmpl $, %ecx;jne  <RtlUnwind+>;movl (%ebp), %esi": 1,
                "popal;jb  <RtlUnwind+>;popal;jae  <RtlUnwind+>;xorl %eax, (%eax)": 1,
                "je  <RtlUnwind+>;pushl $;pushl $;pushl $;calll - <DbgPrintEx>": 1,
                "pushl (%eax);pushl %esi;calll - <RtlUnwind+>;jmp  <RtlUnwind+>;pushl $": 2,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %ebx;movl (%ebp), %edi;int $": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);movl (%ebp), %eax;pushl (%ebp)": 2,
                "movl %esp, %ebp;pushl (%ebp);movl (%ebp), %eax;pushl (%ebp);movzwl (%eax), %ecx": 1,
                "je  <RtlUnwind+>;movl %eax, %ecx;orl %ebx, %ecx;andl %edi, %ecx;movl %eax, %esi": 1,
                "movl (%eax), %edx;addl %esi, %edx;cmpl %edx, (%ebp);jb  <RtlUnwind+>;movl (%eax), %eax": 1,
                "jmp  <RtlUnwind+>;movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, (%ebp);movl (%ebp), %ecx": 1,
                "movl , %eax;movl , %edx;movl , %ecx;addl %eax, %edx;movl %eax, -(%ebp)": 1,
                "movl %ecx, %esi;jne  <RtlUnwind+>;movb , %al;jmp  <RtlUnwind+>;testl %esi, %esi": 1,
                "calll  <SeCaptureSubjectContext>;movl -(%ebp), %eax;testl %eax, %eax;jne  <RtlUnwind+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jne  <RtlUnwind+>;movl -(%ebp), %eax;movzbl (%eax), %eax;pushl %ebx": 1,
                "jmp  <RtlUnwind+>;movb %bl, (%ebp);cmpl %ebx, (,%esi,);je  <RtlUnwind+>;pushl %edi": 1,
                "testb $, %al;jne  <RtlUnwind+>;cmpb %bl, (%ebp);je  <RtlUnwind+>;testb $, %al": 2,
                "jmp  <RtlUnwind+>;cmpb %bl, (%ebp);je  <RtlUnwind+>;testb $, %al;jne  <RtlUnwind+>": 1,
                "addb %ch, (%eax);incl %ebp;addb %ch, (%esi);incl %ebp;addb %dh, (%esi)": 1,
                "addb %ch, (%esi);incl %ebp;addb %dh, (%esi);incl %ebp;addb %bh, (%edi,%esi,)": 1,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, %eax;je  <RtlUnwind+>;pushl %edi": 1,
                "incl %ebx;pushl %ebx;pushl %ebx;pushl ;pushl ": 1,
                "leal (,%eax,), %eax;movl %eax, -(%ebp);pushl $;addl $, %eax;pushl %eax": 1,
                "jl  <RtlUnwind+>;pushl ;pushl %ebx;pushl $;pushl %edi": 3,
                "pushl %ebx;pushl %esi;calll  <RtlSetDaclSecurityDescriptor>;testl %eax, %eax;jl  <RtlUnwind+>": 1,
                "movl %esi, ;jmp  <RtlUnwind+>;calll  <SeTokenIsWriteRestricted+>;testl %esi, %esi;je  <RtlUnwind+>": 1,
                "cmpl %ecx, (%ecx);je  <RtlUnwind+>;movb $, %cl;movb $, (%eax);calll *": 1,
                "pushl %eax;calll  <RtlEqualSid>;testb %al, %al;je  <RtlUnwind+>;xorl %ebx, %ebx": 1,
                "movl %fs:, %eax;incl (%eax);movl , %esi;jne  <RtlUnwind+>;leal (%eax), %ecx": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi;incl %edi": 2,
                "calll  <RtlAddAccessAllowedAce>;pushl ;pushl %ebx;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp);movl $, -(%ebp)": 1,
                "movl %esi, -(%ebp);calll  <SeTokenImpersonationLevel+>;pushl %esi;pushl -(%ebp);calll  <ExFreePoolWithTag>": 1,
                "xorl %esi, %esi;incl %esi;pushl %esi;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "calll  <wctomb+>;movl %fs:, %eax;movl (%eax), %ecx;movl (%ecx), %eax;testb $, (%eax)": 1,
                "je  <RtlUnwind+>;movl (%ecx), %ecx;subl %edx, %ecx;incl %ecx;cmpl , %ecx": 1,
                "testl %eax, %eax;jl  <RtlUnwind+>;movl -(%ebp), %eax;orl %esi, (%eax);jmp  <RtlUnwind+>": 1,
                "je  <RtlUnwind+>;cmpb $, (%ebp);jne  <RtlUnwind+>;cmpl $, (%eax);jne  <RtlUnwind+>": 1,
                "orl $-, -(%ebp);xorl %eax, %eax;calll  <wctomb+>;retl $;int": 1,
                "addl $, %esi;movl (%esi), %ecx;testl %ecx, %ecx;je  <RtlUnwind+>;calll - <ObfDereferenceObject>": 1,
                "movl , %ebx;calll *%ebx;movl %fs:, %eax;movl %eax, -(%ebp);testb $, (%eax)": 1,
                "movl (%eax), %esi;subl $, %esi;andl $, -(%ebp);testb $, ;je  <RtlUnwind+>": 1,
                "pushl (%esi);calll  <NtVdmControl+>;testb %al, %al;je  <RtlUnwind+>;testb $, (%esi)": 1,
                "cmpl $, (%esi);jne  <RtlUnwind+>;movl (%ebp), %eax;cmpl $, (%eax);je  <RtlUnwind+>": 1,
                "movl (%ebp), %eax;cmpb $, (%eax);jne  <RtlUnwind+>;movl , %esi;movl %esi, -(%ebp)": 1,
                "testb $, %cl;je  <RtlUnwind+>;movl (%esi), %eax;testl $, %eax;jne  <RtlUnwind+>": 2,
                "movl (%eax), %esi;movl %esi, -(%ebp);leal (%esi), %ecx;movl %ecx, -(%ebp);calll *": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, %ecx;movl $, %edx;lock": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);jmp  <RtlUnwind+>;xorl %eax, %eax;incl %eax": 1,
                "jne  <RtlUnwind+>;movb $, -(%ebp);pushl (%ebp);pushl (%ebp);leal -(%ebp), %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp)": 6,
                "pushl $;pushl (%ebp);calll  <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <RtlUnwind+>": 1,
                "pushl (%ebp);calll  <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <RtlUnwind+>;pushl %ebx": 1,
                "movb (%ebp), %cl;negb %al;sbbl %eax, %eax;andl $, %eax;addl $, %eax": 1,
                "addl $, %eax;movl %eax, %esi;calll *;jmp  <RtlUnwind+>;movl $, %esi": 1,
                "pushl %esi;je  <RtlUnwind+>;leal (%eax), %edx;cmpl (%ebp), %edx;movl %eax, %esi": 1,
                "jne - <RtlUnwind+>;jmp  <RtlUnwind+>;movl (%ebp), %esi;cmpl %ecx, %eax;je  <RtlUnwind+>": 1,
                "movl (%esi), %ecx;xorl %edx, %edx;cmpb %dl, (%esi);leal (%esi), %eax;pushl %edi": 1,
                "je  <RtlUnwind+>;cmpl %edx, %ecx;pushl %ebx;movl $, %ebx;movl $, %edi": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);je  <RtlUnwind+>;pushl $;pushl %eax": 1,
                "popl %ebx;movl -(%ebp), %ecx;testl %ecx, %ecx;popl %edi;je  <RtlUnwind+>": 1,
                "jb  <RtlUnwind+>;cmpl , %eax;jbe  <RtlUnwind+>;calll  <ExRaiseAccessViolation>;movl (%ebp), %esi": 1,
                "shll %cl, %eax;movl %eax, -(%ebp);testl %eax, %eax;jne  <RtlUnwind+>;movl $, %eax": 1,
                "movl (%ebx), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "cmpl %eax, %ecx;jb  <RtlUnwind+>;movl $, (%eax);movl (%ecx), %eax;movl %eax, (%ecx)": 1,
                "movl (%edx), %eax;movl %eax, (%edx);orl $-, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl $-, %ecx;jne  <RtlUnwind+>;leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %edx;calll - <ZwSetTimer+>;movl -(%ebp), %ecx;movl , %eax": 1,
                "jmp  <RtlUnwind+>;leal (%eax,%eax), %edx;cmpl %edx, %ecx;jae  <RtlUnwind+>;shrl %eax": 1,
                "pushl ;pushl $;pushl -(%ebp);calll  <ObReferenceObjectByHandle>;movl %eax, %esi": 1,
                "pushl $;pushl -(%ebp);calll - <PsChargePoolQuota>;orl $-, -(%ebp);pushl $": 1,
                "calll - <PsChargePoolQuota>;orl $-, -(%ebp);pushl $;popl %ecx;xorl %eax, %eax": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);pushl $;pushl -(%ebp)": 2,
                "movl -(%ebp), %edi;jmp  <RtlUnwind+>;leal (%edx), %eax;movl (%eax), %ecx;movl %eax, (%ebx)": 1,
                "testb %al, %al;jne  <RtlUnwind+>;movl -(%ebp), %ecx;calll - <ObfReferenceObject>;xorl %eax, %eax": 1,
                "calll *;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <RtlUnwind+>;calll - <ObfDereferenceObject>": 1,
                "pushl $;pushl $;calll - <VfIsVerificationEnabled>;testb %al, %al;je  <VfFailSystemBIOS+>": 1,
                "pushl %ecx;cmpb $, ;je  <VfFailDriver+>;leal (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "jmp - <VfFailDriver+>;int;int;int;int": 3,
                "movl (%ecx), %ecx;cmpl %esi, %ecx;jne - <VfFailDriver+>;movb %al, %dl;movl %edi, %ecx": 1,
                "jne  <VfFailDriver+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "je  <VfFailDriver+>;pushl %edi;leal (%esi), %edi;movl %edi, %ecx;calll *": 1,
                "calll *;pushl (%ebp);movb %al, (%ebp);pushl $;leal (%esi), %eax": 1,
                "cmpl $-, %eax;je  <VfFailDriver+>;movl (%esi), %ecx;movl (%ecx,%eax,), %ebx;movb (%ebp), %dl": 1,
                "movl %ebx, %eax;popl %edi;jmp  <VfFailDriver+>;xorl %eax, %eax;popl %esi": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax;je  <VfFailDriver+>;movl (%ebp), %ecx": 1,
                "movb %al, (%ebp);calll - <RtlClearBits>;movb (%ebp), %dl;movl %esi, %ecx;calll *": 1,
                "calll - <RtlClearBits>;movb (%ebp), %dl;movl %esi, %ecx;calll *;xorl %eax, %eax": 1,
                "popl %ebx;popl %edi;popl %ebp;retl $;pushl %eax": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <VfFailDriver+>;xorl %esi, %esi": 1,
                "movl (%ecx), %ecx;testl %ecx, %ecx;je  <VfFailDriver+>;movl %ecx, %eax;movl (%eax), %ecx": 1,
                "pushl %esi;movl (%eax), %ecx;testl %ecx, %ecx;je  <VfFailDriver+>;movl (%eax), %esi": 1,
                "je  <VfFailDriver+>;movl (%eax), %esi;movl %esi, (%ecx);movl (%eax), %eax;cmpl %edx, %eax": 1,
                "pushl $;calll - <DbgPrint>;pushl $;calll - <DbgPrint>;pushl %esi": 5,
                "pushl %edi;movl %eax, (%ebp);movl (%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "calll - <DbgPrint>;pushl $;calll - <DbgPrint>;addl $, %esp;cmpl %ebx, (%esi)": 2,
                "pushl %eax;calll ;cmpb $, (%ebp);jne  <VfFailDriver+>;movl , %eax": 1,
                "calll - <DbgPrint>;pushl $;calll - <DbgPrint>;pushl (%esi);movl (%ebp), %ebx": 1,
                "pushl $;incl %eax;pushl %eax;calll ;popl %edi": 1,
                "movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;pushl %ebx;negl %eax": 1,
                "pushl %edi;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 2,
                "calll - <DbgPrint>;pushl %ebx;calll - <DbgPrint>;pushl $;calll - <DbgPrint>": 2,
                "pushl $;incl %eax;pushl %eax;calll ;popl %ebx": 1,
                "pushl %esi;pushl %ebx;pushl $;calll - <DbgPrint>;pushl $": 3,
                "jne  <VfFailDriver+>;movzbl , %eax;movl %eax, ;cmpl (%esi), %edi;je  <VfFailDriver+>": 1,
                "xorl %eax, %eax;cmpl (%esi), %edi;pushl $;sete %al;pushl $": 1,
                "pushl $;pushl %eax;calll ;popl %ebx;popl %edi": 1,
                "addl $, %esp;pushl $;pushl $;pushl (%ebp);calll ": 1,
                "je  <VfFailDriver+>;outsl (%esi), %dx;outsb (%esi), %dx;andb %ch, (%edx);andb %ch, (%edx)": 4,
                "subb (%eax), %ah;subb (%edx), %cl;addb %al, (%eax);addb %al, (%eax);subb (%eax), %ah": 7,
                "pushl %edi;movl %ecx, (%eax);leal (%esi), %edi;movl %edi, %ecx;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl %eax, %edi;movl , %eax;cmpl $-, %eax": 1,
                "pushl $;pushl $;pushl %eax;calll ;movl $, %ebx": 1,
                "incl %esp;jb  <VfFailDriver+>;jbe  <VfFailDriver+>;jb  <VfFailDriver+>;imull $, (%ebx), %esi": 1,
                "jb  <VfFailDriver+>;jbe  <VfFailDriver+>;jb  <VfFailDriver+>;imull $, (%ebx), %esi;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;subb %ah, %gs:(%di);jo  <VfFailDriver+>;andl $, %eax;pushl $": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;andl $, -(%ebp);andl $, -(%ebp);pushl %ebx": 1,
                "movl %esi, -(%ebp);movl %eax, -(%ebp);jmp  <VfFailDriver+>;movl -(%ebp), %ecx;movl (%ecx), %ecx": 1,
                "cmpl (%ebp), %ecx;jb  <VfFailDriver+>;cmpl -(%ebp), %ecx;jae  <VfFailDriver+>;movl , %ecx": 1,
                "incl -(%ebp);addl $, %esi;incl %eax;cmpl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "xorl %esi, %esi;jmp  <VfFailDriver+>;movl -(%ebp), %eax;movl %ebx, %ecx;negl %ecx": 1,
                "shll $, %ecx;addl %ecx, %esi;movl (%ebp), %ecx;subl %ebx, %eax;testl %ebx, %ebx": 1,
                "movl (%esi), %eax;subl %eax, (%ebp);addl $, %esi;decl %ebx;jne - <VfFailDriver+>": 1,
                "popl %esi;popl %ebx;leave;retl $;subb (%eax), %ah": 3,
                "jae  <VfFailDriver+>;outsl (%esi), %dx;andb %cl, (%ebp);decl %esp;andb %ah, ": 1,
                "calll - <DbgPrint>;pushl (%ebx);movl (%ebp), %eax;pushl (%eax);pushl $": 1,
                "jge  <VfFailDriver+>;movl (%ebp), %ecx;pushl $;popl %edx;calll ": 1,
                "pushl $;pushl $;jmp  <VfFailDriver+>;movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "jl  <VfFailDriver+>;cmpl %ebx, (%eax);jne  <VfFailDriver+>;cmpl %ebx, ;je  <VfFailDriver+>": 1,
                "je  <VfFailDriver+>;pushl %eax;pushl (%ebp);pushl $;pushl $": 1,
                "cmpl %ebx, (%eax);jl  <VfFailDriver+>;movl (%eax), %esi;cmpl %ebx, %esi;je  <VfFailDriver+>": 1,
                "cmpl %ebx, (%esi);movl %ebx, (%ebp);jbe  <VfFailDriver+>;leal (%esi), %ebx;movl (%ebx), %edi": 1,
                "leal (%esi), %ebx;movl (%ebx), %edi;pushl $;popl %edx;movl %edi, %ecx": 1,
                "movl %edi, %ecx;calll ;testb %al, %al;jne  <VfFailDriver+>;leal (%ebp), %edx": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;incl (%ebp);movl (%ebp), %eax;addl $, %ebx": 1,
                "movl (%ebp), %eax;addl $, %ebx;cmpl (%esi), %eax;jb - <VfFailDriver+>;jmp  <VfFailDriver+>": 1,
                "testb %al, %al;je  <VfFailDriver+>;cmpl $, ;je  <VfFailDriver+>;pushl (%ebp)": 1,
                "retl $;ljmpl $, $;addb %dl, -(%eax);incl %ebp;addb %ah, -(%esi)": 1,
                "addb %ah, -(%esi);popfl;incl %ebp;addb %cl, %dl;popfl": 1,
                "addb %al, (%eax);addl %eax, (%eax);addb %al, (%ecx);addb (%esi), %al;pushl %es": 1,
                "int;int;rdtsc;retl;int": 1,
                "pushl %ecx;pushl %ecx;subl $, %ecx;pushl %esi;pushl %edi": 1,
                "movl $, -(%ebp);movzwl (%edi), %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl (%edi), %esi": 1,
                "testl $, %esi;jne  <WmiGetClock+>;movl $, -(%ebp);jmp  <WmiGetClock+>;movw (%edi), %di": 1,
                "movl %edx, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl $, %eax": 2,
                "xaddl %eax, (%ecx);movl $, %eax;jmp  <WmiGetClock+>;testl $, %esi;je  <WmiGetClock+>": 1,
                "movl -(%ebp), %ecx;leal (%eax,%ecx), %esi;movl %esi, -(%ebp);movl (%edi), %ecx;subl $, %ecx": 1,
                "subl $, %ecx;movl %ecx, -(%ebp);subl %eax, %ebx;movl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "orl $-, -(%ebp);jmp  <WmiGetClock+>;testl %eax, %eax;jbe  <WmiGetClock+>;cmpb $, -(%ebp)": 1,
                "calll  <ExRaiseAccessViolation>;movl -(%ebp), %ecx;leal -(%ebp), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%edi), %eax;subl $, %eax;cmpl %eax, %ebx;ja  <WmiGetClock+>;testb $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp - <WmiGetClock+>;testb $, -(%ebp);je  <WmiGetClock+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edx;movl %edx, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movw %bx, (%edx);andl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jge  <WmiGetClock+>;shll $, %eax": 1,
                "testb $, -(%ebp);je  <WmiGetClock+>;movl -(%ebp), %eax;movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "je  <WmiGetClock+>;testb $, (%edx);jne  <WmiGetClock+>;movl -(%ebp), %eax;calll *(%eax)": 1,
                "calll *(%eax);movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl %ecx, %edx": 1,
                "testl %eax, %eax;je  <WmiGetClock+>;movl (%eax), %ecx;movl %ecx, (%edx);movl (%eax), %ecx": 1,
                "movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx)": 5,
                "testl %ecx, %ecx;movl %ecx, -(%ebp);jne  <WmiGetClock+>;movl $, %eax;jmp  <WmiGetClock+>": 1,
                "leal (%edx), %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 2,
                "movl %edi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl (%edx), %ebx": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl $, %eax;popl %edi": 1,
                "xaddl %eax, (%ecx);movl $, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %eax;movl %ebx, %ecx;calll ;movl %eax, %edi;testl %edi, %edi": 1,
                "xaddl %eax, (%ecx);movl $, %eax;jmp - <WmiGetClock+>;movl (%esi), %eax;movl %eax, (%edi)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movl %ebx, %edx": 2,
                "jmp - <WmiGetClock+>;int;int;int;int": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl $, %edx;cmpw %dx, (%ebp);jne  <WmiTraceMessageVa+>": 1,
                "movl %ecx, -(%ebp);cmpl %esi, %ecx;jle - <WmiTraceMessageVa+>;addl %ecx, -(%ebp);jmp - <WmiTraceMessageVa+>": 1,
                "jmp  <WmiTraceMessageVa+>;leal (%ecx), %eax;testb $, (%eax);je  <WmiTraceMessageVa+>;testb $, (%ecx)": 1,
                "movzwl %si, %edx;calll ;movl %eax, -(%ebp);testl %eax, %eax;jne  <WmiTraceMessageVa+>": 1,
                "andl $, %ebx;movw %bx, (%eax);movw (%ebp), %dx;movw %dx, (%eax);leal (%eax), %ebx": 1,
                "movl %ebx, -(%ebp);cmpl $, -(%ebp);je  <WmiTraceMessageVa+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl %ebx, -(%ebp);movl (%eax), %eax;movl %eax, (%ebx);addl $, %ebx;movl %ebx, -(%ebp)": 1,
                "andl $, -(%ebp);addl $, -(%ebp);movl -(%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "rep  movsb (%esi), %es:(%edi);movl %eax, -(%ebp);addl %eax, %ebx;movl %ebx, -(%ebp);jmp - <WmiTraceMessageVa+>": 1,
                "xaddl %eax, (%ecx);jmp - <NtTraceEvent+>;movl $, %edx;leal (,%ebx,), %eax;movl %eax, -(%ebp)": 1,
                "jb  <NtTraceEvent+>;cmpl , %eax;jbe  <NtTraceEvent+>;calll  <ExRaiseAccessViolation>;pushl %edi": 1,
                "pushl $;pushl (%ebp);pushl $;pushl $;pushl $": 2,
                "movl %eax, (%esi);jmp  <IoWMIWriteEvent+>;testl %edi, %edx;jne  <IoWMIWriteEvent+>;testl %ecx, %ecx": 1,
                "testl %edi, %edi;je  <IoWMIWriteEvent+>;movl $, %ebx;movl %ebx, %ecx;calll *": 1,
                "je  <IoWMIWriteEvent+>;movl $, %ebx;movl %ebx, %ecx;calll *;pushl $": 1,
                "pushl $;movl %edi, %edx;movl $, %ecx;movl %eax, (%edi);movl %esi, (%edi)": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);incl %eax;cmpl $, %eax;jne  <IoWMIWriteEvent+>": 1,
                "calll  <ExQueueWorkItem>;xorl %eax, %eax;jmp  <IoWMIWriteEvent+>;movl $, %eax;jmp  <IoWMIWriteEvent+>": 1,
                "movl $, %eax;popl %ebx;popl %edi;popl %esi;leave": 4,
                "pushl %eax;pushl %eax;calll  <IoWMISetNotificationCallback+>;popl %ebp;retl $": 2,
                "negl %eax;andw $, (%esi);jmp  <IoWMIDeviceObjectToInstanceName+>;andl $, (%esi);andl $, (%esi)": 1,
                "calll - <IoWMIDeviceObjectToInstanceName+>;leave;retl $;int;int": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 12,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 8,
                "jmp  <ExInitializeResourceLite+>;andl $, (%esi);pushl $;movl %esi, %edx;movl $, %ecx": 1,
                "movl (%ebp), %eax;orb $, (%eax);sti;popl %ebp;retl $": 1,
                "pushl %esi;pushl %edi;movl %fs:, %eax;cli;movw (%ecx), %dx": 1,
                "movw %dx, (%ecx);movw %ax, (%ecx);movw %bx, (%ecx);sti;pushl %ebx": 1,
                "je  <ExReleaseResourceLite+>;xorl %eax, %eax;incl %eax;decl %edi;movl %eax, (%esi)": 1,
                "incl %eax;decl %edi;movl %eax, (%esi);movl %eax, (%ecx);movw %ax, (%ecx)": 1,
                "jmp  <ExReleaseResourceLite+>;andw $, %dx;movw %dx, (%ecx);sti;popl %edi": 1,
                "jne  <ExReleaseResourceLite+>;movl %esi, %edx;decl (%edx);jne - <ExReleaseResourceLite+>;andl $, (%edx)": 1,
                "je - <ExReleaseResourceLite+>;orb $-, (%ecx);xorl %eax, %eax;incl %eax;leal (%ecx), %edx": 1,
                "xorl %eax, %eax;incl %eax;leal (%ecx), %edx;decl %esi;movl %eax, (%edx)": 1,
                "pushl %ecx;pushl %ebx;pushl (%eax);calll - <KeReleaseSemaphore>;jmp  <ExReleaseResourceForThreadLite+>": 1,
                "jmp  <ExReleaseResourceForThreadLite+>;xorl %edi, %edi;movw (%eax), %di;cmpw %bx, %di;je  <ExReleaseResourceForThreadLite+>": 1,
                "incl %esi;decl %edi;movl %esi, (%edx);movl %esi, (%eax);movw %si, (%eax)": 1,
                "decl %edi;movl %esi, (%edx);movl %esi, (%eax);movw %si, (%eax);movw %di, (%eax)": 1,
                "popl %ebp;retl $;movl (%ebp), %edx;xorl %esi, %esi;leal (%eax), %ecx": 1,
                "leal (%eax), %ecx;cmpl %edx, (%ecx);je  <ExReleaseResourceForThreadLite+>;testb $, %dl;movl %esi, (%ebp)": 1,
                "xorl %ebx, %ebx;movl %ebx, (%ecx);decw (%eax);cmpw %bx, (%eax);jne - <ExReleaseResourceForThreadLite+>": 1,
                "cmpl %edi, %edx;jae  <ExSetResourceOwnerPointer+>;leal (%ecx,%edx,), %edx;cmpl %eax, (%edx);jne  <ExSetResourceOwnerPointer+>": 1,
                "popl %ebp;retl $;leal (%ecx,%edi,), %edx;jmp  <ExSetResourceOwnerPointer+>;cmpl %eax, (%ecx)": 1,
                "jne  <ExIsResourceAcquiredExclusiveLite+>;incb %dl;sti;movb %dl, %al;popl %ebp": 1,
                "sti;movb %dl, %al;popl %ebp;retl $;int": 2,
                "movb %dl, %al;popl %ebp;retl $;int;int": 2,
                "pushl %edi;movl %fs:, %eax;cli;movl (%ebp), %ecx;cmpl %eax, (%ecx)": 1,
                "popl %esi;sti;movl %edi, %eax;popl %edi;popl %ebp": 1,
                "cmpb %dl, %al;jge  <ExIsResourceAcquiredSharedLite+>;movb %dl, %cl;subb %al, %cl;addb %cl, (%ebx)": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "movb %al, (%ebx);movb $, (%ebx);movl (%esi), %edx;cmpl %edi, %edx;je  <ExIsResourceAcquiredSharedLite+>": 1,
                "movl (%esi), %edi;testl %edi, %edi;je  <ExIsResourceAcquiredSharedLite+>;movl (%edi), %eax;cmpl $, %eax": 1,
                "jne  <ExIsResourceAcquiredSharedLite+>;testl %eax, %eax;jne  <ExIsResourceAcquiredSharedLite+>;movl %ecx, %edx;addl $, %ecx": 1,
                "addl $, %ecx;cmpl %ebx, %ecx;jne - <ExIsResourceAcquiredSharedLite+>;jmp - <ExIsResourceAcquiredSharedLite+>;movl %fs:, %eax": 1,
                "movl $, -(%ebp);jmp  <ExIsResourceAcquiredSharedLite+>;sti;pushl $;pushl %ebx": 1,
                "cmpb (%eax), %ah;incl %ebp;js  <ExIsResourceAcquiredSharedLite+>;jb  <ExIsResourceAcquiredSharedLite+>;pushl %eax": 1,
                "insb %dx, %es:(%edi);subb %ah, (%eax);andl $, %eax;insb %dx, %es:(%edi);js  <ExIsResourceAcquiredSharedLite+>": 1,
                "decl %edi;pushl %ebp;pushl %edx;incl %ebx;incl %ebp": 1,
                "jae  <ExIsResourceAcquiredSharedLite+>;jne  <ExIsResourceAcquiredSharedLite+>;arpl %sp, (%ebp);orb (%eax), %al;int": 1,
                "pushl %edi;movl (%ebp), %edi;calll *;movl , %esi;movb %al, (%ebp)": 1,
                "movb %al, (%ebp);movl $, %eax;jmp  <ExIsResourceAcquiredSharedLite+>;cmpl %edi, %esi;jb  <ExIsResourceAcquiredSharedLite+>": 1,
                "jmp  <ExIsResourceAcquiredSharedLite+>;cmpl %edi, %esi;jb  <ExIsResourceAcquiredSharedLite+>;leal (%edi,%ebx), %ecx;cmpl %ecx, %esi": 1,
                "movl %eax, (%eax);movl %eax, (%eax);movl (%ebp), %eax;addl $, %eax;movl %eax, (%ebp)": 1,
                "pushl %esi;calll  <ExFreePoolWithTag>;cli;popl %edi;popl %esi": 1,
                "je - <ExIsResourceAcquiredSharedLite+>;pushl $;pushl %edi;pushl %eax;calll - <KeInitializeSemaphore>": 1,
                "pushl %edi;pushl -(%ebp);calll  <ExFreePoolWithTag>;cli;popl %edi": 1,
                "movw %di, (%esi);movw %di, (%esi);je  <ExReinitializeResourceLite+>;pushl $;pushl %edi": 1,
                "movl %edi, (%esi);movw %di, (%esi);movw %di, (%esi);addl $, %esi;pushl %esi": 1,
                "movl %edi, (%esi);movl %eax, (%esi);movw %ax, (%esi);sti;popl %edi": 1,
                "retl $;incl (%esi);movb $, %al;jmp - <ExAcquireResourceExclusiveLite+>;xorb %al, %al": 1,
                "sti;movl (%esi), %edx;movl %esi, %ecx;calll - <ExIsResourceAcquiredSharedLite+>;movl %fs:, %eax": 1,
                "movl %fs:, %eax;cli;movl (%ebp), %ecx;xorl %edx, %edx;cmpw %dx, (%ecx)": 1,
                "cli;movl (%ebp), %esi;xorl %ebx, %ebx;jmp  <ExAcquireResourceSharedLite+>;testb $-, (%esi)": 1,
                "testb $-, (%esi);je  <ExAcquireSharedStarveExclusive+>;cmpl %edi, (%esi);je  <ExAcquireSharedStarveExclusive+>;leal (%ebp), %eax": 1,
                "jmp - <ExAcquireSharedStarveExclusive+>;xorb %al, %al;sti;jmp  <ExAcquireSharedStarveExclusive+>;movl %edi, (%eax)": 1,
                "sti;jmp  <ExAcquireSharedStarveExclusive+>;movl %edi, (%eax);movl $, (%eax);incw (%esi)": 1,
                "movl %edi, (%eax);movl $, (%eax);incw (%esi);sti;movl (%esi), %edx": 1,
                "movl (%ebp), %esi;xorl %ebx, %ebx;cmpw %bx, (%esi);je  <ExAcquireSharedWaitForExclusive+>;testb $-, (%esi)": 1,
                "cmpl %ebx, %eax;je - <ExAcquireSharedWaitForExclusive+>;cmpb %bl, (%ebp);je  <ExAcquireSharedWaitForExclusive+>;cmpl %ebx, (%esi)": 1,
                "sti;movl (%esi), %edx;movl %esi, %ecx;calll - <ExIsResourceAcquiredSharedLite+>;cli": 1,
                "xorl %ebx, %ebx;incl %ebx;movl %edi, (%eax);movl %ebx, (%eax);jmp - <ExAcquireSharedWaitForExclusive+>": 1,
                "pushl %ebp;movl %esp, %ebp;testb $, (%ebp);jne  <ExAcquireSharedWaitForExclusive+>;calll *": 1,
                "calll *;jmp  <ExAcquireSharedWaitForExclusive+>;movl , %ecx;calll *;movl , %eax": 1,
                "shll $, %edx;xorl %eax, %edx;movzbl (%ebp), %eax;shll $, %edx;xorl %eax, %edx": 1,
                "movl %edx, %eax;imull $, %eax, %eax;movl (%eax,%esi), %eax;cmpl (%ebp), %eax;je  <ExAcquireSharedWaitForExclusive+>": 1,
                "cmpl (%ebp), %eax;je  <ExAcquireSharedWaitForExclusive+>;testl %eax, %eax;jne  <ExAcquireSharedWaitForExclusive+>;leal -(%ecx), %eax": 1,
                "cmpl , %esi;jb  <ExAcquireSharedWaitForExclusive+>;xorl %esi, %esi;cmpl %esi, -(%ebp);je  <ExAcquireSharedWaitForExclusive+>": 1,
                "movl (%edx,%eax), %esi;calll *;movl %esi, %eax;popl %edi;popl %esi": 1,
                "cmpl %esi, ;jne  <ExAcquireSharedWaitForExclusive+>;movl $, ;calll *;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;pushl %esi;movb $, (%eax);calll - <MmTrimAllSystemPagableMemory+>;jmp  <ExQueryPoolBlockSize+>": 1,
                "jmp  <ExQueryPoolBlockSize+>;movl (%ebp), %edx;xorl %eax, %eax;movw -(%esi), %ax;xorl %ecx, %ecx": 1,
                "movl , %eax;incl %eax;je  <ExQueryPoolBlockSize+>;pushl %ebx;movl (,%edi,), %eax": 1,
                "addl %eax, (%esi);movl , %eax;incl %edi;incl %eax;cmpl %eax, %edi": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl , %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl (%ebp), %eax;movl , %ecx;movl %ecx, (%eax)": 1,
                "movl , %eax;movl $, %ecx;cmpl %ecx, %eax;je  <ExQueryPoolBlockSize+>;movl (%ebp), %edx": 1,
                "pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <ExQueryPoolBlockSize+>;xorl %ecx, %ecx": 1,
                "jne  <ExQueryPoolBlockSize+>;movl %ecx, %eax;shrl $, %eax;andl $, %ecx;andl $, %eax": 1,
                "shrl $, %eax;andl $, %ecx;andl $, %eax;movw %cx, -(%esi);movl -(%esi), %esi": 1,
                "movl (%ebp), %edi;testw $, %di;jne  <ExQueryPoolBlockSize+>;xorl %ebx, %ebx;cmpl %ebx, ": 1,
                "cmpl %edi, (%esi);je  <ExQueryPoolBlockSize+>;incl %ebx;addl $, %esi;cmpl %edx, %ebx": 1,
                "movl (%ebp), %eax;incl (%eax);movl (%ebp), %eax;addl $, (%eax);movl (%eax), %eax": 1,
                "addl $, (%eax);movl (%eax), %eax;cmpl %eax, (%ebp);jae  <ExQueryPoolBlockSize+>;movl $, %eax": 1,
                "movb %al, -(%ebp);cmpl $, ;jbe  <ExQueryPoolBlockSize+>;xorl %esi, %esi;leal -(%ebp), %edi": 1,
                "movl %ebx, (%eax);leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %eax": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %eax;pushl $": 3,
                "andb $, (%ebp);movl (%ebp), %eax;cmpl , %eax;jne  <ExQueryPoolBlockSize+>;calll - <DbgBreakPoint>": 1,
                "shll $, %esi;xorl %eax, %esi;movzbl (%ebp), %eax;movl , %ebx;shll $, %esi": 1,
                "sarl $, %esi;movl %esi, -(%ebp);pushl %edi;calll *;movl , %edi": 1,
                "pushl %esi;pushl $;movb %al, -(%ebp);calll ;movb -(%ebp), %cl": 1,
                "movl %ecx, %edx;shrl $, %ecx;movl %eax, -(%ebp);xorl %eax, %eax;movl %esi, %edi": 2,
                "movl -(%ebp), %edx;addl %ecx, %edx;movl (%edx), %ecx;testl %ecx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;pushl %ebx;shrl $, %eax": 1,
                "pushl %ebx;shrl $, %eax;pushl %esi;movl %eax, -(%ebp);pushl %edi": 1,
                "pushl $;pushl %edi;pushl $;movb %al, -(%ebp);calll ": 1,
                "movb %al, -(%ebp);calll ;movb -(%ebp), %cl;movl %eax, %ebx;calll *": 1,
                "movb %al, %bl;calll ;movb %bl, %cl;movl %eax, %edi;calll *%esi": 1,
                "movl %ecx, (%eax);incl %esi;movb -(%ebp), %cl;calll *;popl %edi": 1,
                "pushl (%ebp);pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <ExAllocatePoolWithTagPriority+>": 1,
                "incl %eax;xorl %edi, %edi;testb $, %bl;movl %eax, -(%ebp);je  <ExAllocatePoolWithQuotaTag+>": 1,
                "movl (%eax), %edi;andl $, -(%esi);cmpl , %edi;je  <ExAllocatePoolWithQuotaTag+>;xorl %eax, %eax": 1,
                "calll  <ExFreePoolWithTag>;cmpl $, -(%ebp);je  <ExAllocatePoolWithQuotaTag+>;pushl %ebx;calll  <ExRaiseStatus>": 1,
                "calll - <ExQueryPoolBlockSize+>;popl %esi;popl %ebp;retl $;int": 1,
                "movl (%ebp), %esi;testl %esi, %esi;je  <ExNotifyCallback+>;pushl %ebx;pushl %edi": 1,
                "pushl (%esi);calll *(%esi);movl (%esi), %esi;cmpl %edi, %esi;jne - <ExNotifyCallback+>": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl %edi, %ecx;calll - <ObfReferenceObject>": 7,
                "testl %esi, %esi;jne  <ExRegisterCallback+>;movl %edi, %ecx;calll - <ObfDereferenceObject>;xorl %eax, %eax": 1,
                "calll *;cmpb $, (%edi);jne  <ExRegisterCallback+>;leal (%edi), %ecx;cmpl %ecx, (%ecx)": 1,
                "movl (%ecx), %edi;movl %ecx, (%esi);movl %edi, (%esi);movl %esi, (%edi);movb $, (%ebp)": 1,
                "calll  <ExFreePoolWithTag>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;popl %edi;popl %esi": 1,
                "movl -(%esi), %edx;movw -(%esi), %cx;movzwl -(%esi), %ebx;movl %edx, %eax;subl (%esi), %eax": 1,
                "movl -(%esi), %edx;movl %edx, %edi;subl (%esi), %edi;movl %edx, (%esi);cmpl $, %edi": 1,
                "cmpl $, %ebx;jge  <ExUnregisterCallback+>;pushl $;popl %ebx;jmp  <ExUnregisterCallback+>": 1,
                "movsbl , %ecx;leal (%ecx,%ecx,), %eax;pushl %ebx;movl %eax, -(%ebp);movl , %eax": 1,
                "cmpl %ecx, %eax;pushl %esi;pushl %edi;jne  <ExUnregisterCallback+>;movl %ds:, %eax": 1,
                "movl %edx, %eax;subl (%ecx), %eax;movl %edx, (%ecx);movl (%ecx), %edx;movl %edx, %esi": 2,
                "cmpl %edx, %esi;jae  <ExUnregisterCallback+>;subl $, %edi;cmpl $, %edi;jge  <ExUnregisterCallback+>": 2,
                "cmpl $, %edi;jge  <ExUnregisterCallback+>;pushl $;popl %edi;jmp  <ExUnregisterCallback+>": 6,
                "movl %eax, %edi;subl (%ecx), %edi;leal (%ecx), %edx;movl %ebx, %esi;subl (%edx), %esi": 1,
                "cmpl -(%ebp), %esi;movzwl (%ecx), %edi;movl %ebx, (%edx);movw (%ecx), %bx;jae  <ExUnregisterCallback+>": 1,
                "subl (%edx), %esi;movl %ebx, (%edx);movw (%ecx), %bx;movl %esi, %eax;subl %edi, %eax": 1,
                "movl %esi, %edi;addl $, -(%ebp);decl -(%ebp);movw %di, (%ecx);jne - <ExUnregisterCallback+>": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);jne  <ExInitializeNPagedLookasideList+>;movl $, (%eax)": 1,
                "jmp  <ExInitializeNPagedLookasideList+>;movl %edx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);pushl $": 1,
                "movl %edx, (%edi);movb %al, %cl;movl %edi, (%edx);calll *;movl $, (%esi)": 1,
                "calll *;movl $, (%esi);jmp  <ExDeletePagedLookasideList+>;pushl %eax;calll *(%esi)": 1,
                "cmpl %esi, %edx;movl %edx, (%ebp);jb  <ExInitializeZone+>;pushl %edi;movl (%eax), %edi": 1,
                "leal (%ecx,%esi), %edx;addl %ebx, %esi;cmpl (%ebp), %esi;movl %edi, (%edx);movl %edx, (%eax)": 1,
                "movl (%ebp), %eax;cmpl %ebx, (%eax);ja  <ExExtendZone+>;movl (%eax), %edx;movl %edx, (%ecx)": 1,
                "cmpl %esi, %edx;jb  <ExExtendZone+>;movl (%eax), %edx;movl %edx, (%ecx);movl (%eax), %edx": 1,
                "pushl (%ebp);movb %al, %bl;pushl (%ebp);pushl (%ebp);calll - <ExExtendZone>": 1,
                "movw , %dx;movw %dx, (%ecx);movw , %dx;movw %dx, (%ecx);movw %ax, (%ecx)": 1,
                "movl %edx, (%esi);movl (%edi), %eax;mull ;movl %eax, (%esi);movl %edx, (%esi)": 2,
                "movl %edx, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 1,
                "movsbl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax": 2,
                "movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);xorl %eax, %eax": 2,
                "int;pushl $;pushl $;calll  <wctomb+>;calll - <RtlUnwind+>": 1,
                "xorl %edx, %edx;movl $, -(%ebp);pushl $;popl %esi;movl %esi, -(%ebp)": 1,
                "pushl $;popl %esi;movl %esi, -(%ebp);andl %edx, -(%ebp);movl (%ebp), %eax": 1,
                "jb  <ExInterlockedExtendZone+>;movl (%ebx), %ecx;subl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);addl $, %eax": 1,
                "calll  <ExInterlockedExtendZone+>;movl (%ebp), %eax;testl %eax, %eax;je  <ExInterlockedExtendZone+>;movl %ecx, (%eax)": 1,
                "xorl %esi, %esi;cmpl %esi, ;jne  <ExInterlockedExtendZone+>;movl $, %eax;jmp  <ExInterlockedExtendZone+>": 1,
                "movl %edi, (%eax);addl %esi, %eax;movl %eax, -(%ebp);addl %esi, %ecx;decl %edx": 1,
                "addl (%eax), %ecx;movl (%eax), %eax;movl (%eax), %eax;pushl $;popl %edx": 1,
                "pushl %eax;calll  <_aulldiv>;pushl $;popl %ecx;subl %eax, %ecx": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);movsbl (%eax), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "je  <ExGetCurrentProcessorCounts+>;testb $, (%esi);jne  <ExGetCurrentProcessorCounts+>;cmpl %edi, (%ebp);je  <ExGetCurrentProcessorCounts+>": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <ExGetCurrentProcessorCounts+>;cmpl (%eax), %edi;jne  <ExGetCurrentProcessorCounts+>": 1,
                "movl %eax, -(%ebp);addl %eax, %ecx;movl %ecx, -(%ebp);cmpl (%ebp), %ecx;jbe  <ExGetCurrentProcessorCounts+>": 1,
                "jbe  <ExGetCurrentProcessorCounts+>;movl $, -(%ebp);jmp  <ExGetCurrentProcessorCounts+>;pushl (%ebp);pushl %esi": 1,
                "addl %eax, -(%ebp);movl -(%ebp), %eax;cmpl (%ebp), %eax;jbe  <ExGetCurrentProcessorCounts+>;movl $, -(%ebp)": 2,
                "cmpl (%ebp), %eax;jbe  <ExGetCurrentProcessorCounts+>;movl $, -(%ebp);jmp  <ExGetCurrentProcessorCounts+>;leal -(%edi), %eax": 1,
                "movl -(%ebp), %edi;movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "shrl %ecx;leal (%eax,%ecx,), %edx;movl %edx, -(%ebp);cmpl %eax, %edx;je  <ExGetCurrentProcessorCounts+>": 1,
                "movzbw (%esi), %ax;movw %ax, (%edi);incl %edi;incl %edi;movl %edi, -(%ebp)": 1,
                "testw %ax, %ax;jne - <ExGetCurrentProcessorCounts+>;cmpl $, -(%ebp);jl  <ExGetCurrentProcessorCounts+>;movl -(%ebp), %eax": 1,
                "jl  <ExGetCurrentProcessorCounts+>;movl -(%ebp), %eax;subl %eax, %edi;decl %edi;decl %edi": 1,
                "movw %cx, (%ebx);subl -(%ebp), %eax;addl (%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %esi": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);jmp  <ExGetCurrentProcessorCounts+>;xorl %edi, %edi;movl %esi, %eax": 1,
                "calll  <wctomb+>;retl $;xorl %edi, %edi;cmpl %edi, -(%ebp);je  <ExGetCurrentProcessorCounts+>": 1,
                "movl -(%eax), %edx;movl %edx, (%esi);je  <ExGetCurrentProcessorCounts+>;movl (%eax), %eax;addl $, %esi": 1,
                "movl , %eax;movl $, %ecx;jmp  <ExGetCurrentProcessorCounts+>;movw -(%eax), %dx;movw %dx, (%esi)": 1,
                "je  <ExGetCurrentProcessorCounts+>;movl (%eax), %eax;addl $, %esi;cmpl %ecx, %eax;jne - <ExGetCurrentProcessorCounts+>": 1,
                "movw -(%edx), %ax;movw %ax, (%esi);movl -(%edx), %eax;movl %eax, (%esi);movl -(%edx), %eax": 1,
                "movl -(%edx), %eax;movl %eax, (%esi);movl -(%edx), %eax;movl %eax, (%esi);movl -(%edx), %eax": 2,
                "incl %ebx;cmpl -(%ebp), %ebx;movl %eax, (%esi);je  <ExGetCurrentProcessorCounts+>;movl (%edx), %edx": 1,
                "addl $, %esi;cmpl %edi, %edx;jne - <ExGetCurrentProcessorCounts+>;movb (%ebp), %cl;calll *": 1,
                "cmpl %edi, %edx;jne - <ExGetCurrentProcessorCounts+>;movb (%ebp), %cl;calll *;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExInterlockedExtendZone+>;popl %esi;movl (%ebp), %eax;shll $, %ebx": 1,
                "cmpl $, %ecx;jne  <ExVerifySuite+>;cmpl $, ;jne  <ExVerifySuite+>;xorb %al, %al": 1,
                "jne  <ExVerifySuite+>;pushl %eax;pushl $;calll  <ExQueueWorkItem>;retl $": 2,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %ecx;subl , %ecx": 1,
                "je  <ExQueueWorkItem+>;movl (%esi), %eax;cmpl (%esi), %eax;jae  <ExQueueWorkItem+>;cmpl $, (%esi)": 1,
                "movl (%esi), %edx;jmp  <ExQueueWorkItem+>;cmpl %esi, %edx;je  <ExQueueWorkItem+>;cmpl %edi, %edx": 1,
                "jmp  <ExQueueWorkItem+>;cmpl %esi, %edx;je  <ExQueueWorkItem+>;cmpl %edi, %edx;jb  <ExQueueWorkItem+>": 1,
                "je  <ExQueueWorkItem+>;cmpl %edi, %edx;jb  <ExQueueWorkItem+>;cmpl %ebx, %edx;jb  <ExQueueWorkItem+>": 1,
                "movl %eax, (%ebp);je  <ExQueueWorkItem+>;movl %eax, %ecx;shrl $, %ecx;cmpl -(%ebp), %ecx": 1,
                "ja  <ExQueueWorkItem+>;pushl $;calll - <KeSetKernelStackSwapEnable>;pushl $;calll  <PsTerminateSystemThread>": 1,
                "pushl $;calll  <PsTerminateSystemThread>;movl (%ebp), %eax;movl %eax, %ecx;andl $-, %ecx": 1,
                "calll  <PsTerminateSystemThread>;movl (%ebp), %eax;movl %eax, %ecx;andl $-, %ecx;addl $, %ecx": 1,
                "andl $-, %ecx;addl $, %ecx;andl $, %eax;xorl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %eax, (%ebp);jne - <ExQueueWorkItem+>;orl $, (%ebx)": 1,
                "movl (%edi), %ecx;movl (%edi), %eax;pushl %ecx;movl %eax, -(%ebp);movl %ecx, (%ebp)": 1,
                "movl %ecx, (%ebp);calll *%eax;addl $, %ebx;cmpl $, (%ebx);je  <ExQueueWorkItem+>": 1,
                "jne  <HeadlessDispatch+>;movl $, %eax;jmp  <HeadlessDispatch+>;cmpl $, %eax;pushl %edi": 1,
                "jmp  <HeadlessDispatch+>;movl $, %eax;popl %edi;popl %ebp;retl $": 1,
                "popl %esi;popl %ebp;retl $;cmpl $, (%ebp);jne  <XIPDispatch+>": 1,
                "jne  <XIPDispatch+>;movl (%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);jmp - <XIPDispatch+>;cmpl $, (%ebp);je - <XIPDispatch+>;movl $, %eax": 1,
                "movl (%esi), %edx;movl (%esi), %edi;movl %edx, (%edi);movl %edi, (%edx);movb %bl, (%esi)": 1,
                "cmpb %bl, (%ebp);je  <XIPDispatch+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;popl %edi": 1,
                "calll *%edi;movl , %ebx;leal (%esi), %ecx;jmp  <XIPDispatch+>;leal -(%eax), %esi": 1,
                "movl , %ebx;leal (%esi), %ecx;jmp  <XIPDispatch+>;leal -(%eax), %esi;movl %esi, %ecx": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %edi;je  <XIPDispatch+>;cmpb %bl, %al;je  <XIPDispatch+>": 1,
                "movb %al, (%edi);orl $-, -(%ebp);pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <XIPDispatch+>;calll - <KeCancelTimer>;movb %bl, -(%ebp);leal (%esi), %eax;cmpl %ebx, (%eax)": 1,
                "movl %ecx, (%edx);movl %edx, (%ecx);movl %ebx, (%eax);movb -(%ebp), %cl;calll *": 1,
                "movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <XIPDispatch+>;movl , %eax;cmpl %eax, %ecx": 1,
                "je  <XIPDispatch+>;calll  <ExRaiseDatatypeMisalignment>;movl (%ebp), %ecx;movl , %eax;cmpl %eax, %ecx": 1,
                "movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);movb %bl, (%esi);calll - <KeCancelTimer>": 1,
                "movb $, -(%ebp);jmp  <XIPDispatch+>;calll - <KeCancelTimer>;movb %bl, -(%ebp);pushl %esi": 1,
                "leal (%esi), %eax;pushl %eax;pushl (%ebp);pushl -(%ebp);pushl -(%ebp)": 2,
                "movl %eax, %ecx;movl (%eax), %eax;incl %edx;movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl (%esi), %eax;movl -(%ebp), %ebx;cmpl %eax, %ebx;movl (%esi), %edx;jne - <XIPDispatch+>": 1,
                "leal -(%ebp), %edx;jne  <XIPDispatch+>;movl -(%ebp), %eax;incl %eax;movl %eax, -(%ebp)": 1,
                "leal (%esi), %edi;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl (%edi), %ecx": 1,
                "movl %ecx, -(%ebp);movl (%edi), %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %edx": 1,
                "movl %edx, (%eax);movl (%ecx), %edx;movl %edx, (%eax);movl -(%ebp), %eax;incl %eax": 1,
                "leal -(%ebp), %edx;movl %esi, %ecx;calll  <ExfInterlockedCompareExchange>;cmpl -(%ebp), %eax;jne - <XIPDispatch+>": 1,
                "cmpw $, (%esp);je  <_CIcos+>;fldcw ;fcos;wait": 1,
                "fldcw ;fcos;wait;fnstsw %ax;sahf": 1,
                "fxch %st();fprem;wait;fnstsw %ax;sahf": 2,
                "jne - <_CIsin+>;fstp %st();fldt ;movl $, %eax;cmpl $, ": 1,
                "jne - <_CIsqrt+>;andl $, %eax;je - <_CIsqrt+>;fstp %st();fldt ": 1,
                "movl $, %eax;retl;pushl %ebx;pushl %esi;pushl %edi": 1,
                "pushl %edi;movl (%esp), %eax;pushl %ebp;pushl %eax;pushl $-": 1,
                "movl (%ebp), %ecx;movl %ecx, (%ebx);movl %eax, (%ebx);movl %ebp, (%ebx);pushl %ebp": 1,
                "pushl %ebp;pushl %ecx;pushl %eax;popl %eax;popl %ecx": 1,
                "movl %eax, %ebx;movl (%esp), %ecx;movl (%esp), %edx;movl (%esp), %eax;shrl %ebx": 3,
                "mull (%esp);movl %eax, %ecx;movl (%esp), %eax;mull %esi;addl %ecx, %edx": 4,
                "popl %edi;retl $;int;int;int": 4,
                "incl %ebp;movl (%esp), %edx;negl %eax;negl %edx;sbbl $, %eax": 1,
                "orl %eax, %eax;jne  <_alldvrm+>;movl (%esp), %ecx;movl (%esp), %eax;xorl %edx, %edx": 1,
                "divl %ecx;movl %eax, %esi;movl %ebx, %eax;mull (%esp);movl %eax, %ecx": 2,
                "subl (%esp), %eax;sbbl (%esp), %edx;xorl %ebx, %ebx;subl (%esp), %eax;sbbl (%esp), %edx": 2,
                "testl %eax, (%eax);xchgl %esp, %eax;movl (%eax), %eax;pushl %eax;retl": 1,
                "pushl %ecx;leal (%esp), %ecx;subl $, %ecx;subl $, %eax;testl %eax, (%ecx)": 1,
                "movl (%esp), %eax;orl %eax, %eax;jge  <_allrem+>;incl %edi;movl (%esp), %edx": 1,
                "sbbl (%esp), %edx;decl %edi;jns  <_allrem+>;negl %edx;negl %eax": 1,
                "negl %eax;sbbl $, %edx;popl %edi;popl %ebx;retl $": 1,
                "movl %edx, %eax;sarl $, %edx;andb $, %cl;sarl %cl, %eax;retl": 1,
                "pushl %esi;movl (%esp), %eax;orl %eax, %eax;jne  <_aulldiv+>;movl (%esp), %ecx": 1,
                "movl %edx, %eax;xorl %edx, %edx;jmp  <_aullrem+>;movl %eax, %ecx;movl (%esp), %ebx": 1,
                "xchgl %ecx, %eax;mull (%esp);addl %ecx, %edx;jb  <_aullrem+>;cmpl (%esp), %edx": 1,
                "addl %ecx, %edx;jb  <_aullrem+>;cmpl (%esp), %edx;ja  <_aullrem+>;jb  <_aullrem+>": 1,
                "xorl %edx, %edx;retl;int;pushl %esi;incl %ebx": 1,
                "incl %ebx;xorb %dh, (%eax);pushl %ebp;movl %esp, %ebp;subl $, %esp": 2,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%ebx);movl (%ebx), %esi": 1,
                "je  <_except_handler+>;leal (%esi,%esi,), %ecx;cmpl $, (%edi,%ecx,);je  <_except_handler+>;pushl %esi": 1,
                "jmp  <_except_handler+>;movl $, %eax;jmp  <_except_handler+>;pushl %ebp;movl (%ebx), %ebp": 1,
                "movl (%ebx), %ebp;pushl $-;pushl %ebx;calll - <_local_unwind>;addl $, %esp": 1,
                "popl %ebx;movl %ebp, %esp;popl %ebp;retl;int": 2,
                "movl %ebp, %esp;popl %ebp;retl;int;int": 6,
                "pushl %esi;incl %ebx;xorb (%eax), %dh;popl %eax;incl %ebx": 1,
                "je  <_except_handler+>;leal (%esi,%esi,), %ecx;movl (%edi,%ecx,), %eax;orl %eax, %eax;je  <_except_handler+>": 1,
                "calll - <_abnormal_termination+>;movl (%edi,%ecx,), %eax;movl %eax, (%ebx);movl (%edi,%ecx,), %eax;xorl %ebx, %ebx": 1,
                "jmp  <_except_handler+>;movl (%ebp), %eax;orl $, (%eax);movl $, %eax;jmp  <_except_handler+>": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);je  <_except_handler+>;movb $, (%ecx)": 1,
                "movb (%esi), %dl;movb (%ecx), %al;movb %dl, (%ecx);decl %ecx;movb %al, (%esi)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);je  <_itoa+>": 1,
                "cmpl $, (%ebp);je  <_itoa+>;movw $, (%ecx);addl $, %ecx;negl %eax": 1,
                "testl %eax, %eax;ja - <_itoa+>;andw $, (%ecx);decl %ecx;decl %ecx": 1,
                "movl %esi, -(%ebp);calll  <wctomb+>;addl $, %esp;testl %esi, %esi;movl %eax, %edi": 4,
                "movl (%ebp), %eax;addl %eax, %eax;movl %eax, -(%ebp);pushl %esi;leal (%ebp), %eax": 1,
                "pushl %eax;movl $, -(%ebp);calll  <wctomb+>;addl $, %esp;decl -(%ebp)": 2,
                "je  <_strlwr+>;movb (%edx), %cl;cmpb $, %cl;jl  <_strlwr+>;cmpb $, %cl": 1,
                "addb $, %cl;movb %cl, (%edx);incl %edx;cmpb $, (%edx);jne - <_strlwr+>": 1,
                "je  <_strnicmp+>;popl %ebp;jmp  <wctomb+>;xorl %eax, %eax;popl %ebp": 1,
                "incl %ecx;negl %ecx;movb (%ebp), %al;movl %edx, %edi;rep  stosb %al, %es:(%edi)": 1,
                "movl %edx, %eax;popl %edi;leave;retl;int": 1,
                "movl %eax, %esi;js  <_vsnwprintf+>;movl -(%ebp), %eax;movb $, (%eax);incl -(%ebp)": 1,
                "movb $, (%eax);incl -(%ebp);jmp  <_vsnwprintf+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpw $, (%eax)": 6,
                "jb  <_wcsnicmp+>;cmpw $, %ax;ja  <_wcsnicmp+>;addl $, %eax;incl %edx": 1,
                "movw (%ecx), %si;incl %ecx;incl %ecx;testw %si, %si;jne - <_wcsrev+>": 1,
                "popl %edi;popl %esi;popl %ebp;retl;int": 3,
                "jmp  <atol+>;cmpl $, ;movzbl (%esi), %eax;jle  <atol+>;pushl $": 1,
                "popl %ecx;jmp  <atol+>;movl , %ecx;movzbl (%ecx,%eax,), %eax;andl $, %eax": 1,
                "incl %esi;cmpl $, %ecx;movl %ecx, %edx;je  <atol+>;cmpl $, %ecx": 1,
                "leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax;movzbl (%esi), %ecx;incl %esi;jmp - <atol+>": 1,
                "jne  <atol+>;negl %eax;popl %esi;popl %ebp;retl": 1,
                "pushl $;pushl $;pushl %edx;pushl %eax;calll - <_allmul>": 2,
                "movl %esp, %ebp;cmpl $, ;jle  <atoi+>;pushl $;pushl (%ebp)": 1,
                "movl (%ebp), %eax;movl , %ecx;movzbl (%ecx,%eax,), %eax;andl $, %eax;popl %ebp": 5,
                "pushl %ebp;movl %esp, %ebp;cmpl $, ;jle  <islower+>;pushl $": 1,
                "jle  <islower+>;pushl $;pushl (%ebp);calll  <wctomb+>;popl %ecx": 1,
                "movl %esp, %ebp;cmpl $, ;jle  <isdigit+>;pushl $;pushl (%ebp)": 1,
                "movl %esi, (%ebp);calll  <RtlAnsiCharToUnicodeChar>;movl (%ebp), %ecx;movw %ax, (%ecx);movl (%ebp), %eax": 1,
                "movb (%edx), %cl;incl %edx;xorb %bl, %cl;je  <memchr+>;decl %eax": 2,
                "decl %eax;je  <memchr+>;testl $, %edx;jne - <memchr+>;subl $, %eax": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edi;movl %ecx, %eax;movl %ecx, %edx;addl %esi, %eax": 2,
                "movl %ecx, %edx;addl %esi, %eax;cmpl %esi, %edi;jbe  <memcpy+>;cmpl %eax, %edi": 1,
                "shrl $, %ecx;andl $, %edx;cmpl $, %ecx;jb  <memcpy+>;rep  movsl (%esi), %es:(%edi)": 1,
                "nop;jmpl *(,%ecx,);nop;pushl %eax;stc": 1,
                "addl %ecx, (%eax);addb %cl, %al;jmp ;addl $, %esi;addl $, %edi": 2,
                "jmpl *(,%edx,);nop;andl %ecx, %edx;movb (%esi), %al;movb %al, (%edi)": 2,
                "leal -(%ecx,%esi), %esi;leal -(%ecx,%edi), %edi;testl $, %edi;jne  <memcpy+>;shrl $, %ecx": 1,
                "decl %esi;shrl $, %ecx;decl %edi;cmpl $, %ecx;jb - <memcpy+>": 1,
                "nop;movb (%esi), %al;andl %ecx, %edx;movb %al, (%edi);movb (%esi), %al": 2,
                "jb - <memmove+>;std;rep  movsl (%esi), %es:(%edi);cld;jmpl *(,%edx,)": 3,
                "movb $-, %ah;incl %ebp;addb %bh, -(%esi,%edi,);incl %ebp;addb %cl, %ah": 1,
                "incl %ebp;addb %bl, %ah;incb (%ebp);inb $, %al;incl %ebp": 1,
                "addb %bl, %ah;incb (%ebp);inb $, %al;incl %ebp;addb %dh, %bh": 1,
                "addl %ecx, %eax;movl %edx, %ecx;andl $, %edx;shrl $, %ecx;je  <memset+>": 1,
                "andl $, %edx;shrl $, %ecx;je  <memset+>;rep  stosl %eax, %es:(%edi);testl %edx, %edx": 1,
                "cmpl %ecx, %edi;jbe  <memset+>;movl (%ebp), %edx;leal (%ecx,%edx), %eax;pushl %ebx": 1,
                "je  <qsort+>;movl (%ebp), %edx;movl %ebx, %ecx;subl %edi, %ecx;movl %edx, -(%ebp)": 1,
                "movl %ebx, %ecx;subl %esi, %ecx;movl %edx, -(%ebp);movl %edi, %edi;movb (%ecx,%eax), %dl": 1,
                "addl $, %esp;testl %eax, %eax;jle  <qsort+>;cmpl %esi, %edi;movl %esi, %eax": 1,
                "jle  <qsort+>;cmpl %esi, %edi;movl %esi, %eax;je  <qsort+>;movl (%ebp), %edx": 1,
                "jne - <qsort+>;movl %ebx, %edi;jmp - <qsort+>;addl (%ebp), %esi;cmpl %esi, %edi": 1,
                "incl %ecx;movl %ecx, -(%ebp);cmpl %esi, %eax;jae  <qsort+>;movl -(%ebp), %ebx": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl $, -(%ebp)": 2,
                "calll  <wctomb+>;addl $, %esp;testl %esi, %esi;movl %eax, %edi;je  <sprintf+>": 1,
                "addl $, %esp;testl %esi, %esi;movl %eax, %edi;je  <sprintf+>;decl -(%ebp)": 1,
                "testl $, %ecx;jne - <strcat+>;movl (%ecx), %eax;movl $, %edx;addl %eax, %edx": 1,
                "movl (%ecx), %eax;movl $, %edx;addl %eax, %edx;xorl $-, %eax;xorl %edx, %eax": 2,
                "testb %al, %al;je  <strcat+>;testb %ah, %ah;je  <strcat+>;testl $, %eax": 1,
                "je  <strcat+>;movb (%ecx), %dl;incl %ecx;testb %dl, %dl;je  <strcat+>": 1,
                "movl (%esp), %edx;movl (%esp), %ecx;testl $, %edx;jne  <strcmp+>;movl (%edx), %eax": 1,
                "orb %ah, %ah;je  <strcmp+>;shrl $, %eax;cmpb (%ecx), %al;jne  <strcmp+>": 1,
                "addl $, %ecx;addl $, %edx;orb %ah, %ah;jne - <strcmp+>;movl %edi, %edi": 1,
                "jne - <strcmp+>;movl %edi, %edi;xorl %eax, %eax;retl;nop": 1,
                "addl $, %ecx;jmp - <strcmp+>;int;int;int": 1,
                "leal -(%ecx), %eax;movl (%esp), %ecx;subl %ecx, %eax;retl;int": 1,
                "testb %dl, %dl;je  <strncat+>;movb %dl, (%edi);incl %edi;decl %ecx": 1,
                "je  <strncat+>;decl %ecx;jne - <strncat+>;movb %cl, (%edi);popl %ebx": 1,
                "popl %ebx;popl %esi;popl %edi;retl;movl %edx, (%edi)": 1,
                "addl $, %edi;decl %ecx;je - <strncat+>;movl $, %edx;movl (%esi), %eax": 1,
                "movl $, %edx;movl (%esi), %eax;addl %eax, %edx;xorl $-, %eax;xorl %edx, %eax": 2,
                "testl $, %edx;jne - <strncat+>;movl %edx, (%edi);movl (%esp), %eax;popl %ebx": 1,
                "jne - <strncat+>;movl %edx, (%edi);movl (%esp), %eax;popl %ebx;popl %esi": 1,
                "decl %ecx;decl %ecx;notl %ecx;movl %ecx, %eax;popl %ebx": 1,
                "notl %ecx;movl %ecx, %eax;popl %ebx;popl %esi;popl %edi": 1,
                "movb %al, (%edi);incl %edi;decl %ecx;je  <strncpy+>;testl $, %edi": 1,
                "addl $, %edi;decl %ecx;je - <strncpy+>;movl $, %edx;movl (%esi), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %edi;movl (%ebp), %edi;xorl %eax, %eax": 1,
                "pushl %eax;pushl %eax;pushl %eax;movl (%ebp), %edx;leal (%ecx), %ecx": 1,
                "je  <strstr+>;movl %edi, %esi;movl (%esp), %ecx;movb (%edi), %al;incl %esi": 1,
                "jne - <strstr+>;popl %esi;popl %ebx;popl %edi;xorl %eax, %eax": 1,
                "incl %esi;cmpb %dh, %al;jne - <strstr+>;leal -(%esi), %edi;movb (%ecx), %ah": 1,
                "cmpb %dh, %al;jne - <strstr+>;leal -(%esi), %edi;movb (%ecx), %ah;testb %ah, %ah": 1,
                "cmpb %ah, %al;je - <strstr+>;jmp - <strstr+>;xorl %eax, %eax;popl %esi": 1,
                "retl;movl %edi, %eax;popl %esi;popl %ebx;popl %edi": 1,
                "pushl $;pushl (%ebp);calll  <wctomb+>;popl %ecx;testl %eax, %eax": 1,
                "je  <towlower+>;addl $, %eax;popl %ebp;retl;int": 1,
                "addl $, %eax;popl %ebp;retl;int;int": 1,
                "movl (%ebp), %esi;pushl %edi;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 1,
                "addl $, %esp;testl %esi, %esi;movl %eax, %edi;je  <vsprintf+>;decl -(%ebp)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movw (%edx), %ax;movw %ax, (%ecx);incl %ecx": 1,
                "jmp  <wcschr+>;cmpw %dx, %cx;je  <wcschr+>;incl %eax;incl %eax": 1,
                "cmpw %dx, %cx;je  <wcschr+>;incl %eax;incl %eax;movw (%eax), %cx": 1,
                "je  <wcschr+>;xorl %eax, %eax;popl %ebp;retl;int": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;jmp  <wcscmp+>;testw %cx, %cx": 1,
                "incl %edx;incl %esi;incl %esi;movw (%esi), %cx;movzwl (%edx), %eax": 1,
                "pushl %esi;pushl %edi;je  <wcscspn+>;movl (%ebp), %ebx;xorl %edi, %edi": 1,
                "movl (%ebp), %ebx;xorl %edi, %edi;movw (%ebx), %di;testw %di, %di;movl %ebx, %edx": 1,
                "decl %ecx;decl %ecx;cmpl $, (%ebp);pushl %esi;je  <wcsncat+>": 1,
                "incl %ecx;incl %ecx;incl %esi;incl %esi;testw %dx, %dx": 1,
                "cmpl $, (%ebp);jne  <wcsncmp+>;xorl %eax, %eax;popl %ebp;retl": 1,
                "decl (%ebp);je  <wcsncmp+>;movw (%ecx), %ax;testw %ax, %ax;je  <wcsncmp+>": 1,
                "je  <wcsncpy+>;xorl %eax, %eax;shrl %ecx;rep  stosl %eax, %es:(%edi);adcl %ecx, %ecx": 1,
                "movl %edi, %edx;testw %dx, %dx;je  <wcsspn+>;incl %esi;incl %esi": 1,
                "movzwl %dx, %edx;subl %edx, %ebx;jne  <wcsstr+>;incl %ecx;incl %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp);calll  <RtlUnicodeToMultiByteN>": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);calll  <RtlUnicodeToMultiByteN>;jmp  <wcstombs+>": 1,
                "pushl (%ebp);calll  <RtlUnicodeToMultiByteN>;jmp  <wcstombs+>;pushl (%ebp);calll - <wcslen>": 1,
                "movl -(%ebp), %eax;decl %eax;jmp  <wcstombs+>;movl $, ;orl $-, %eax": 1,
                "popl %ebp;retl;pushl $;leal (%ebp), %eax;pushl %eax": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;pushl ": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl ;pushl (%ebp)": 1,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "popl %ecx;popl %ecx;jne - <wctomb+>;movzwl (%esi), %eax;incl %esi": 1,
                "popl %ecx;jne - <wctomb+>;movzwl (%esi), %eax;incl %esi;incl %esi": 1,
                "incl %esi;cmpl $, %eax;movl %eax, (%ebp);je  <wctomb+>;cmpl $, %eax": 1,
                "cmpl $, %eax;movl %eax, (%ebp);je  <wctomb+>;cmpl $, %eax;jne  <wctomb+>": 1,
                "je  <wctomb+>;cmpl $, %eax;jne  <wctomb+>;movzwl (%esi), %eax;incl %esi": 1,
                "incl %esi;incl %esi;pushl %eax;calll  <wctomb+>;cmpl $-, %eax": 1,
                "movzbl (%ecx,%eax,), %eax;andl $, %eax;testl %eax, %eax;je  <wctomb+>;movb (%edi), %bl": 1,
                "testl %eax, %eax;pushl $;popl %ecx;jne  <wctomb+>;cmpb $, %bl": 1,
                "je  <wctomb+>;cmpb $, %al;je  <wctomb+>;movl $, (%ebp);jmp  <wctomb+>": 1,
                "movl $, (%ebp);jmp  <wctomb+>;movl %ecx, (%ebp);cmpl %ecx, (%ebp);jne  <wctomb+>": 1,
                "movsbl %bl, %esi;addl $-, %esi;cmpl (%ebp), %esi;jae  <wctomb+>;orl $, (%ebp)": 1,
                "andl $, %edx;je  <wctomb+>;cmpl $, -(%ebp);ja  <wctomb+>;testl %edx, %edx": 1,
                "cmpl $, -(%ebp);ja  <wctomb+>;testl %edx, %edx;jne  <wctomb+>;cmpl %eax, -(%ebp)": 1,
                "jmp  <wctomb+>;movb %cl, %dl;andb $, %dl;negb %dl;sbbl %edx, %edx": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi;xorl %esi, %esi": 3,
                "pushl %esi;pushl %edi;xorl %esi, %esi;movw (%ebx), %si;leal (%ebx), %edi": 1,
                "jmp  <wctomb+>;cmpw $, %si;jne  <wctomb+>;movw (%edi), %si;incl %edi": 1,
                "pushl %esi;calll  <wctomb+>;testl %eax, %eax;popl %ecx;je  <wctomb+>": 1,
                "movw (%edi), %ax;cmpw $, %ax;je  <wctomb+>;cmpw $, %ax;je  <wctomb+>": 1,
                "cmpw $, %ax;je  <wctomb+>;cmpw $, %ax;jne  <wctomb+>;incl %edi": 1,
                "incl %edi;xorl %esi, %esi;movw (%edi), %si;incl %edi;incl %edi": 1,
                "xorl %edx, %edx;divl (%ebp);movl %edx, -(%ebp);movl %eax, %ebx;pushl %esi": 1,
                "jb  <wctomb+>;cmpw $, %si;ja  <wctomb+>;cmpw $, %si;jb  <wctomb+>": 1,
                "jmp  <wctomb+>;movl -(%ebp), %ecx;imull (%ebp), %ecx;addl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <wctomb+>;movl %ebx, (%eax);xorl %eax, %eax": 1,
                "andl $, %ecx;movl %edx, %ebx;addl %eax, %ebx;addl $, %ebx;jmpl *(%ebx)": 2,
                "movb $, -(%ebp);fxch %st();movb -(%ebp), %cl;fxam;wait": 1,
                "faddl ;retl;fxch %st();fstpt -(%ebp);fldt -(%ebp)": 1,
                "fstp %st();retl;movl (%esp), %edx;andl $, %edx;orl $, %edx": 1,
                "je  <wctomb+>;cmpl $, (%ebp);jg - <wctomb+>;popl %esi;popl %ebx": 2,
                "movl -(%ebp), %ecx;incl -(%ebp);xorl %eax, %eax;cmpl %eax, -(%ebp);jl  <wctomb+>": 1,
                "jmp  <wctomb+>;orb $-, -(%ebp);jmp  <wctomb+>;orl $, -(%ebp);jmp  <wctomb+>": 1,
                "je  <wctomb+>;cmpb $, %al;je  <wctomb+>;andl $, -(%ebp);movl , %ecx": 1,
                "movl -(%ebp), %eax;movb (%eax), %bl;incl -(%ebp);movl -(%ebp), %ecx;leal -(%ebp), %esi": 1,
                "decl %eax;je  <wctomb+>;decl %eax;decl %eax;je  <wctomb+>": 4,
                "jne  <wctomb+>;movl , %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl $, -(%ebp)": 2,
                "testw $, -(%ebp);movl -(%ebp), %eax;je  <wctomb+>;movswl -(%eax), %eax;pushl %eax": 1,
                "calll - <wctomb>;testl %eax, %eax;popl %ecx;popl %ecx;movl %eax, -(%ebp)": 1,
                "popl %ecx;popl %ecx;movl %eax, -(%ebp);jge  <wctomb+>;movl $, -(%ebp)": 1,
                "je  <wctomb+>;movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %edx;addl $, %ecx": 2,
                "movl %eax, -(%ebp);leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl": 2,
                "jmp  <wctomb+>;jne  <wctomb+>;cmpb $, %bl;jne  <wctomb+>;movl $, -(%ebp)": 1,
                "movl $, %eax;cmpl %eax, -(%ebp);jle  <wctomb+>;movl %eax, -(%ebp);movl $, %eax": 2,
                "incl %eax;testb %cl, %cl;jne - <wctomb+>;subl %edx, %eax;jmp  <wctomb+>": 2,
                "je - <wctomb+>;decl %eax;decl %eax;je - <wctomb+>;subl $, %eax": 1,
                "jne - <wctomb+>;subl -(%ebp), %eax;sarl %eax;jmp  <wctomb+>;testl %eax, %eax": 1,
                "jge  <wctomb+>;movl $, -(%ebp);jmp  <wctomb+>;andl $-, -(%ebp);movl $, %eax": 2,
                "andl $-, -(%ebp);movl $, %eax;cmpl %eax, -(%ebp);jle  <wctomb+>;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);je  <wctomb+>;movl %esi, %ecx;cmpb $, (%ecx)": 2,
                "testb $, %bl;je  <wctomb+>;movb $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %esi": 1,
                "pushl %esi;pushl $;leal -(%ebp), %eax;calll - <wctomb+>;addl $, %esp": 1,
                "cmpl $, -(%ebp);je  <wctomb+>;cmpl $, -(%ebp);jle  <wctomb+>;movl -(%ebp), %eax": 1,
                "jnp  <wctomb+>;incl %esi;addb %al, -(%edx);int;int": 1,
                "calll  <wctomb+>;cmpw $, %ax;popl %ecx;popl %ecx;jne  <wctomb+>": 1,
                "movl %eax, %esi;jmp  <wctomb+>;pushl (%ebp);movl (%ebp), %eax;decl (%ebp)": 1,
                "popl %ecx;je  <wctomb+>;cmpl $, (%ebp);jg - <wctomb+>;popl %esi": 2,
                "movl %ecx, -(%ebp);xorl %ecx, %ecx;cmpw %cx, %bx;movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "cmpw $, %bx;ja  <wctomb+>;movzwl %bx, %eax;movsbl (%eax), %eax;andl $, %eax": 1,
                "addl $, %ebx;orl $, -(%ebp);xorl %edi, %edi;cmpl %edi, -(%ebp);leal -(%ebp), %eax": 1,
                "jmp  <wctomb+>;testw $, -(%ebp);jne  <wctomb+>;orl $, -(%ebp);addl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <wctomb+>;testl %eax, %eax;jne  <wctomb+>;movl , %eax": 1,
                "sarl %eax;jmp  <wctomb+>;movl $, -(%ebp);movl %ecx, -(%ebp);testb $-, -(%ebp)": 1,
                "movl -(%ebp), %eax;leal -(%ebp), %esi;calll - <wctomb+>;addl -(%ebp), %edi;cmpl $, -(%ebp)": 1,
                "movb $, %bl;movb $, %dh;leal (%ecx), %ecx;movb (%esi), %ah;orb %ah, %ah": 1,
                "cmpb %al, %ah;je  <wctomb+>;movl $, %ecx;jb  <wctomb+>;negl %ecx": 1,
                "jb  <wctomb+>;negl %ecx;movl %ecx, %eax;popl %ebx;popl %esi": 2,
                "testb %cl, %cl;jne - <wctomb+>;subl %edx, %eax;leave;retl": 1,
                "movb $, %dh;leal (%ecx), %ecx;movb (%esi), %ah;incl %esi;movb (%edi), %al": 1,
                "jb  <wctomb+>;addl $, %ecx;cmpw %cx, %ax;jb  <wctomb+>;cmpw $, %ax": 2,
                "addl $, %ecx;cmpw %cx, %ax;jb  <wctomb+>;cmpw $, %ax;jb  <wctomb+>": 1,
                "retl;orl $-, %eax;popl %ebp;retl;int": 1,
                "int;movl %edi, %edi;pushl %ebx;movl %esp, %ebx;pushl %ecx": 1,
                "pushl %esi;movl (%ebx), %esi;movl (%esi), %eax;decl %eax;pushl %edi": 1,
                "pushl %edi;leal (%esi), %ecx;pushl %ecx;pushl %eax;pushl -(%ebp)": 1,
                "pushl %esi;calll - <wctomb+>;testl %eax, %eax;popl %ecx;jne  <wctomb+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlRaiseException>;popl %esi;leave": 1,
                "movl (%ebp), %esi;movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movb (%ebp), %al": 1,
                "movl %eax, (%esi);movl %eax, (%esi);movb (%ebp), %al;testb $, %al;pushl %edi": 1,
                "orl $, (%esi);movl $, (%ebp);testb $, %al;je  <wctomb+>;orl $, (%esi)": 4,
                "movl $, (%ebp);testb $, %al;je  <wctomb+>;orl $, (%esi);movl $, (%ebp)": 4,
                "movl (%esi), %eax;andl $-, %eax;orl $, %eax;jmp  <wctomb+>;movl (%esi), %eax": 2,
                "jmp  <wctomb+>;andl $-, (%esi);movl (%edi), %eax;movl $, %ecx;andl %ecx, %eax": 1,
                "xorl %ebx, %ebx;movl %eax, %esi;andl $, %esi;incl %ebx;testb $, %al": 1,
                "testb $, %al;movl %esi, -(%ebp);je  <wctomb+>;testb %bl, (%ebp);je  <wctomb+>": 1,
                "calll  <wctomb+>;movl (%ebp), %eax;popl %ecx;movl $, %ecx;andl %ecx, %eax": 1,
                "fcompl ;fldl ;fnstsw %ax;testb $, %ah;je  <wctomb+>": 2,
                "jnp  <wctomb+>;fldl (%edi);leal -(%ebp), %eax;pushl %eax;pushl %ecx": 1,
                "calll  <wctomb+>;movl -(%ebp), %ecx;fstpl -(%ebp);fldl -(%ebp);addl $, %ecx": 1,
                "fmull ;movl %ebx, %esi;jmp  <wctomb+>;fcompl ;fnstsw %ax": 1,
                "movb -(%ebp), %al;andl $, %eax;orl $, %eax;movw %ax, -(%ebp);movl $, %eax": 1,
                "pushl $;calll  <wctomb+>;popl %ecx;andl $-, %esi;xorl %eax, %eax": 1,
                "popl %esi;sete %al;popl %ebx;leave;retl": 1,
                "sete %al;popl %ebx;leave;retl;int": 1,
                "pushl %ecx;fnstsw -(%ebp);fnclex;movswl -(%ebp), %eax;leave": 1,
                "movl $, %eax;popl %ebp;retl;int;int": 1,
                "fcompl ;fnstsw %ax;testb $, %ah;jp  <wctomb+>;xorl %eax, %eax": 1,
                "andb $-, (%ebp);cmpl %ecx, %eax;je  <wctomb+>;orb $-, (%ebp);fldl (%ebp)": 1,
                "jne  <wctomb+>;movl %edi, (%esi);testb $, (%esi);popl %esi;jne  <wctomb+>": 1,
                "je  <wctomb+>;decl %eax;je  <wctomb+>;movl $, %eax;jmp  <wctomb+>": 1,
                "je  <wctomb+>;movl $, %eax;jmp  <wctomb+>;movl $, %eax;jmp  <wctomb+>": 1,
                "movl $, %esi;pushl %esi;calll - <_snwprintf>;addl $, %esp;testl %eax, %eax": 1,
                "je  <wctomb+>;cmpl $, (%ebp);pushl %ebx;movl (%ebp), %ebx;jne  <wctomb+>": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;movb %bl, %al;andb $, %al;cmpb $, %al": 1,
                "andl $, (%ecx);movl (%ecx), %eax;movl %esi, (%edx,%eax,);incl (%ecx);movl (%ebp), %eax": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi;cmpl %esi, %ebx": 3,
                "calll - <wcslen>;popl %ecx;pushl (%ebp);leal (%esi,%eax,), %esi;pushl (%ebp)": 1,
                "pushl %edi;pushl %ebx;calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <wctomb+>": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);pushl $;jmp  <wctomb+>;cmpl %esi, (%ebp)": 1,
                "pushl $;jmp  <wctomb+>;cmpl %esi, (%ebp);jne  <wctomb+>;cmpl %esi, (%ebp)": 1,
                "movl (%ebp), %ebx;pushl %ebx;calll - <wcsncpy>;movl -(%ebp), %eax;addl $, %esp": 1,
                "andl $, -(%ebp);pushl $;pushl (%ebp);pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp);movl %edx, -(%ebp);pushl $": 1,
                "movl %edx, -(%ebp);pushl $;leal -(%ebp), %eax;popl %ebx;movl %eax, (%ebp)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <wctomb+>;cmpl %ebx, (%eax);jb  <wctomb+>": 1,
                "pushl (%ebp);pushl (%ebp);calll - <memmove>;addl $, %esp;jmp  <wctomb+>": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <wctomb+>;movl %ebx, (%eax);movl (%ebp), %eax": 1,
                "testl %esi, %esi;je  <wctomb+>;leal (%esi), %ecx;calll  <wctomb+>;popl %esi": 1,
                "je  <wctomb+>;leal (%esi), %ecx;calll  <wctomb+>;popl %esi;leave": 1,
                "xaddl %eax, (%ecx);leave;retl;int;int": 2,
                "pushl %ecx;pushl %esi;movl %ecx, %esi;cmpl $, (%esi);movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %esi, -(%ebp);je  <wctomb+>;movl $, %eax;jmp  <wctomb+>": 1,
                "movl %esi, -(%ebp);je  <wctomb+>;movl $, %eax;jmp  <wctomb+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);jmp - <wctomb+>;xorl %eax, %eax;popl %esi": 1,
                "movl (%esi), %ebx;testb $, %bl;movl %ebx, -(%ebp);je  <wctomb+>;leal -(%ebx), %eax": 1,
                "movl %ebx, -(%ebp);je  <wctomb+>;leal -(%ebx), %eax;movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "leal -(%ebx), %eax;movl %eax, (%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;movl (%ebp), %edx": 3,
                "movl %ebx, -(%ebp);movl (%ebx), %esi;pushl $;popl %edx;movl %esi, %eax": 1,
                "movl %esi, %eax;andl %edx, %eax;addl %edx, %eax;cmpl %edx, %eax;movl %esi, -(%ebp)": 1,
                "cmpxchgl %edx, (%ecx);cmpl %esi, %eax;jne - <wctomb+>;jmp  <wctomb+>;leal (%edi), %ecx": 1,
                "movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;andl $, -(%ebp);addl $, %eax": 1,
                "incl %ecx;decl %edx;jne - <wctomb+>;popl %esi;imull $, %eax, %eax": 1,
                "movl , %ecx;movb %al, %bl;leal (%esi), %eax;movl $, (%eax);movl %ecx, (%eax)": 1,
                "pushl (%esi);leal (%esi), %eax;pushl (%esi);pushl %eax;calll - <KeSetTimer>": 2,
                "movl (%ebp), %esi;cmpl $, (%esi);jne  <wctomb+>;movl (%esi), %edx;movl (%esi), %eax": 1,
                "movl %edi, (%esi,%ebx,);incl (%eax);cmpl $, (%eax);movl %edx, (%ecx);jl  <wctomb+>": 1,
                "leal (%esi), %eax;pushl (%esi);pushl %eax;calll - <KeSetTimer>;movl %edi, %ecx": 1,
                "pushl %edi;pushl $;leal (%ebp), %eax;pushl %eax;calll - <wctomb+>": 1,
                "movl (%esi), %edx;cmpl (%ebx), %edx;jne  <wctomb+>;testl %ecx, %ecx;jne  <wctomb+>": 1,
                "movl (%ebp), %eax;orl $-, (%eax);movl %edx, %eax;jmp - <wctomb+>;movl (%ebp), %eax": 1,
                "pushl ;calll - <wctomb+>;movl %eax, %esi;cmpl %edi, %esi;je  <wctomb+>": 1,
                "jne  <wctomb+>;movl (%ebp), %ecx;movl (%ecx), %eax;cmpl %edi, %eax;je  <wctomb+>": 1,
                "pushl %ebx;movl (%ecx), %ebx;movl %edi, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax": 1,
                "je  <wctomb+>;cmpb $, -(%ebp);jne  <wctomb+>;leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "jmp  <wctomb+>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "jmp  <wctomb+>;movl (%ebx), %eax;movl %eax, (%edi);movl (%ebx), %eax;leal (%esi), %ecx": 1,
                "leal (%esi), %eax;pushl %eax;calll - <KeSetEvent>;leal (%esi), %ecx;calll - <wctomb+>": 1,
                "xaddl %eax, (%ecx);leal (%esi), %eax;cmpl $, (%eax);jne  <wctomb+>;movl %eax, (%ebp)": 1,
                "jne  <wctomb+>;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx;movl $, %edx": 1,
                "movl %ecx, (%edi);movl %ebx, (%edi);movl %edi, (%ebx);movl %edi, (%ecx);incl (%esi)": 1,
                "jmp - <wctomb+>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp  <wctomb+>;leal (%ebx,%eax,), %ebx": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movw -(%ebp), %ax;movw %ax, (%ebx);movb (%ebp), %al": 1,
                "leal (%ebx), %ecx;calll - <wctomb+>;pushl %esi;calll - <wctomb+>;pushl $": 1,
                "pushl %esi;calll - <wctomb+>;pushl $;pushl $;leal (%esi), %eax": 1,
                "movl %esp, %ebp;popl %ebp;jmp - <READ_REGISTER_UCHAR>;int;int": 1,
                "popl %ebp;jmp - <WRITE_REGISTER_UCHAR>;int;int;int": 1,
                "pushl %eax;calll *;movb %al, %bl;testb %bl, (%ebp);jne  <wctomb+>": 1,
                "movl (%esi), %eax;addl $, %eax;pushl %eax;calll *;testb $, %al": 1,
                "orb $, (%esi);popl %esi;movb %bl, %al;popl %ebx;popl %ebp": 1,
                "pushl (%ebp);pushl %esi;calll *;movl (%ebp), %eax;movl (%edi), %esi": 1,
                "calll *;movl (%edi), %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "pushl %ebx;movb (%ebp), %bl;negb %bl;pushl %edi;sbbl %ebx, %ebx": 1,
                "movb (%ebp), %bl;negb %bl;pushl %edi;sbbl %ebx, %ebx;andl $, %ebx": 1,
                "pushl %edi;sbbl %ebx, %ebx;andl $, %ebx;incl %ebx;je  <wctomb+>": 1,
                "pushl $;pushl %esi;decl %ebx;calll - <wctomb+>;testb $, %al": 1,
                "pushl $;pushl %esi;calll - <wctomb+>;movw $, %ax;popl %edi": 1,
                "popl %esi;popl %ebp;retl $;movb $, (%edi);movw $, %ax": 1,
                "testb $, %al;je  <wctomb+>;pushl (%esi);calll *;testb $, (%esi)": 1,
                "calll *;testb $, (%esi);jne - <wctomb+>;popl %ebx;pushl $": 1,
                "pushl (%esi);calll *;popl %esi;popl %ebp;retl $": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %esi;pushl (%ebp);leal (%eax,%eax,), %esi": 1,
                "pushl (%ebp);leal (%eax,%eax,), %esi;leal (,%esi,), %esi;pushl %esi;calll - <wctomb+>": 1,
                "calll - <wctomb+>;cmpb $, (%ebp);jne  <wctomb+>;pushl $;pushl %esi": 1,
                "movl (%ebp), %eax;pushl $;pushl $;pushl (%ebp);leal (%eax,%eax,), %eax": 1,
                "pushl %eax;calll *;popl %esi;popl %ebp;retl $": 1,
                "pushl %edi;jne  <wctomb+>;movl $, %edi;pushl %edi;calll - <wctomb+>": 1,
                "pushl %edi;calll - <wctomb+>;testb %al, %al;je  <wctomb+>;pushl $": 1,
                "xorl %esi, %esi;incl %esi;jmp - <wctomb+>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "pushl $;popl %edx;movl %esi, %ecx;calll - <wctomb+>;pushl $": 1,
                "addl %esi, %eax;addl %eax, %ecx;leal (%ecx), %eax;movl (%ecx), %ecx;addl %esi, %ecx": 1,
                "testb %al, %al;je  <wctomb+>;movl , %eax;addl %esi, %eax;jne  <wctomb+>": 1,
                "xorl %esi, %esi;cmpl %esi, (%ebp);je  <wctomb+>;cmpb $, (%ebp);je  <wctomb+>": 1,
                "movl (%ebp), %eax;andl $, (%eax);movl %esi, %eax;popl %esi;popl %ebp": 1,
                "xorl %eax, %eax;cmpb %al, (%ebp);je  <wctomb+>;cmpl %eax, (%ebp);je  <wctomb+>": 1,
                "jne  <wctomb+>;xorl %eax, %eax;jmp  <wctomb+>;xorl %eax, %eax;incl %eax": 1,
                "xorb %al, %al;jmp  <wctomb+>;wbinvd;movb $, %al;retl $": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;movl , %ecx;pushl %ebx": 3,
                "calll *;movl , %edi;andl $, %edi;movb %al, -(%ebp);je  <wctomb+>": 1,
                "jb  <wctomb+>;movl (%esi), %esi;movl (%esi), %eax;movl (%eax), %edx;movl (%eax), %eax": 1,
                "cmpl %eax, %esi;je  <wctomb+>;cmpl $, -(%ebp);je  <wctomb+>;cmpl $, -(%ebp)": 1,
                "jmp - <wctomb+>;calll - <ExDeletePagedLookasideList+>;calll - <wctomb+>;calll - <MmTrimAllSystemPagableMemory+>;pushl %esi": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;jne - <wctomb+>;calll *": 1,
                "calll - <MmGrowKernelStack+>;calll *;movb $, (%esi);movb %al, %bl;addl $, %esi": 1,
                "calll *;movl , %edi;movb %al, -(%ebp);jmp  <wctomb+>;cmpl $, %ebx": 1,
                "jb  <wctomb+>;cmpb $, (%eax);jl  <wctomb+>;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movl , %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %eax, (%ecx);movl %eax, -(%ebp)": 1,
                "cmpl %esi, (%esi);movb %al, (%ebp);je  <wctomb+>;movb $, (%edi);movl , %eax": 1,
                "leal (%edi), %esi;movl %esi, -(%ebp);movl %eax, -(%ebp);movl %eax, (%esi);movl %eax, %edi": 1,
                "movl %eax, ;movl %fs:, %eax;pushl $;pushl %eax;calll - <KeSetPriorityThread>": 1,
                "xchgl %eax, (%ecx);testl %eax, %eax;je - <wctomb+>;pushl %eax;calll - <wctomb+>": 1,
                "je - <wctomb+>;pushl %eax;calll - <wctomb+>;jmp - <wctomb+>;int": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, %eax": 1,
                "movl %ecx, (%eax);movl %esi, (%eax);calll  <ExiInterlockedExchangeUlong+>;movb %bl, %cl;calll *": 1,
                "shll $, %ecx;orl %eax, %ecx;movl %ecx, %esi;calll *;movl (%ebp), %ecx": 1,
                "andl $, %eax;addl $, %eax;movw %ax, -(%ebp);calll *;movl -(%ebp), %edx": 1,
                "calll *;xorl %eax, %eax;jmp  <wctomb+>;movl $, %eax;popl %edi": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <wctomb+>;movl $, %eax;cmpl %eax, (%ebp)": 1,
                "testl %eax, %eax;jne  <wctomb+>;movl $, %eax;cmpl %eax, (%ebp);jae  <wctomb+>": 1,
                "jne  <wctomb+>;movl $, %eax;cmpl %eax, (%ebp);jae  <wctomb+>;movl %eax, (%ebp)": 1,
                "jne  <wctomb+>;movl (%ebp), %eax;movl %eax, ;jmp  <wctomb+>;movl %eax, -(%ebp)": 1,
                "movb $, (%esi);leal (%esi), %eax;je  <wctomb+>;cmpl %edi, %ecx;je  <wctomb+>": 1,
                "jmp  <wctomb+>;movl %eax, (%eax);movl %eax, (%eax);movl , %edx;movl $, %eax": 1,
                "movl %edi, -(%ebp);xorl %eax, %eax;movl %ebx, %ecx;shrl $, %ecx;movl %edx, %edi": 1,
                "xorl %eax, %eax;movl %ebx, %ecx;shrl $, %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "rep  stosb %al, %es:(%edi);movswl (%esi), %eax;movl %eax, (%edx);movl , %eax;movl %eax, (%edx)": 1,
                "movl (%eax), %eax;movl %ecx, (%eax);movl %eax, (%ecx);movl , %ecx;movswl (%esi), %edx": 1,
                "movl (%ecx), %ecx;jne - <wctomb+>;movl (%esi), %ecx;xorl %ebx, %ebx;incl %ebx": 1,
                "popl %edi;popl %esi;popl %ebx;je  <wctomb+>;pushl $": 1,
                "pushl -(%ebp);calll  <ExFreePoolWithTag>;movb -(%ebp), %al;leave;retl $": 1,
                "retl;xorl %eax, %eax;retl;leal (%esp), %esp;retl": 1,
                "retl;leal (%ecx), %ecx;retl;leal (%esp), %esp;xorl %eax, %eax": 1,
                "leal (%esp), %esp;xorl %eax, %eax;orl $, %eax;retl;int": 1,
                "je  <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;leal , %edx;movl (%edx), %ecx;movl (%edx), %edx;leal (%edx,%ecx,), %edx": 1,
                "pushl $;pushl %ebp;pushl %ebx;pushl %esi;pushl %edi": 3,
                "pushl %ebp;pushl %ebx;pushl %esi;pushl %edi;pushl %fs": 21,
                "movb %bl, (%esi);movl %esp, %ebp;movl (%esi), %ebx;movl %ebx, (%ebp);movl %ebp, (%esi)": 2,
                "movl (%esi), %ebx;movl %ebx, (%ebp);movl %ebp, (%esi);cld;movl (%ebp), %ebx": 2,
                "pushl $;pushl %edx;pushfl;pushl $;addl $, %edx": 1,
                "pushl -;pushl $;pushl %ebp;pushl %ebx;pushl %esi": 1,
                "pushl %esi;pushl %edi;movl -, %ebx;pushl $;movl (%ebx), %esi": 1,
                "pushl $;subl $, %esp;subl $, %ebp;movb $, (%esi);cmpl %esp, %ebp": 1,
                "movl (%edi,%eax,), %ebx;subl %ecx, %esp;shrl $, %ecx;movl %esp, %edi;cmpl , %esi": 1,
                "jne  <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;popl %edx;popl %ecx;popfl;jmpl *%edx": 1,
                "testb $, (%ebp);je - <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;movl $, %eax;jmp - <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;cli": 1,
                "pushl $;calll - <KiDeliverApc>;popl %ecx;calll *;cli": 4,
                "movl %ebx, %dr;jmp - <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;movl (%esp), %ebx;movl %ebx, (%esp);movl (%esp), %ebx": 1,
                "movl (%ebp), %edx;movw %ax, (%ebp);movw %bx, (%ebp);movw %cx, (%ebp);movw %dx, (%ebp)": 21,
                "je - <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;cmpl $, %ebp;jne  <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;pushl $;movw $, (%esp)": 1,
                "cmpl $, %ebp;jne  <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;pushl $;movw $, (%esp);pushl %ebp": 1,
                "pushl %ds;pushl %es;pushl %gs;movw $, %ax;subl $, %esp": 19,
                "movl (%ebp), %ebx;movl (%ebp), %ecx;movl (%ebp), %edx;pushl %eax;pushl %eax": 1,
                "je  <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;orl $, (%ebp);jmp  <KeiEoiHelper>;subw $, (%esp);pushl $": 1,
                "addl $, %eax;pushl %fs;pushl %ecx;pushl %eax;movl $, %ecx": 1,
                "movl %edx, (%eax);movl -, %edx;jne  <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;subl $, %ebx;movl %ebx, (%edx)": 1,
                "movl (%edi), %ecx;movl %ebx, %dr;movl %ecx, %dr;jmp - <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;addl $, %esp": 1,
                "pushl %edi;subl $, %esp;movl %esp, %ebp;movl %eax, (%esp);movl %ecx, (%esp)": 2,
                "movl %edi, (%ebp);testb $-, -;jne - <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;incl -;movl (%esp), %ebx": 1,
                "jne  <KeReleaseInStackQueuedSpinLockFromDpcLevel+>;addl $, %esp;jmp  <KeiEoiHelper+>;cli;calll *": 1,
                "movl -, %ebx;movb $, (%ebx);cmpb $, (%ebx);je  <KeiEoiHelper+>;movl %ebp, %ebx": 1,
                "jne  <KeiEoiHelper+>;testl $, (%esp);jne  <KeiEoiHelper+>;testw $, (%esp);je  <KeiEoiHelper+>": 1,
                "popl %edx;popl %ecx;popl %eax;leal (%ebp), %esp;popl %edi": 1,
                "movzwl %sp, %esp;iretl;xorl %ecx, %ecx;calll  <KeiEoiHelper+>;xorl %edx, %edx": 1,
                "xorl %ecx, %ecx;calll  <KeiEoiHelper+>;xorl %edx, %edx;movl $, %ecx;calll  <KeiEoiHelper+>": 1,
                "movl $, %ecx;calll  <KeiEoiHelper+>;xorl %edx, %edx;movl $, %ecx;calll  <KeiEoiHelper+>": 1,
                "testl $, (%ebp);je  <KeiEoiHelper+>;movl $, %eax;jmp  <KeiEoiHelper+>;movl (%ebp), %eax": 1,
                "pushl $;pushl %ecx;calll - <KeRaiseUserException+>;movl %ebp, %esp;jmp - <KeiEoiHelper>": 1,
                "cmpw $, (%ebp);jne  <KeiEoiHelper+>;sti;pushl %ebp;calll  <KeUserModeCallback+>": 1,
                "movl $, %eax;jmp - <KeiEoiHelper+>;movl -, %ebx;movl (%ebx), %ebx;cmpl $, (%ebx)": 3,
                "cmpl $, %ecx;je - <KeiEoiHelper+>;testl $, (%ebp);jne  <KeiEoiHelper+>;testw $, (%ebp)": 1,
                "movw (%eax), %cx;movl %ecx, -;pushfl;andl $, (%esp);popfl": 1,
                "pushl $;pushl $;pushl $;pushl $;pushl (%eax)": 2,
                "pushl (%eax);pushl (%eax);pushl (%eax);pushl (%eax);pushl -": 1,
                "jne  <KeiEoiHelper+>;movl , %eax;cmpw $, (%eax);je  <KeiEoiHelper+>;addl $, %esp": 1,
                "nop;testl $, (%ebp);jne  <KeiEoiHelper+>;testl $, (%ebp);je  <KeiEoiHelper+>": 6,
                "jne - <KeiEoiHelper+>;cmpb $, ;jne  <KeiEoiHelper+>;lock;incl ": 1,
                "movl $, %ecx;movl $, %eax;calll - <KeiEoiHelper+>;movl -, %ebx;movl (%ebx), %ebx": 1,
                "jmp  <KeiEoiHelper+>;nop;movl (%ebp), %eax;movl (%ebp), %ebx;movl (%ebp), %ecx": 2,
                "movl $, (%eax);movl %edx, (%eax);movl $, (%eax);leal (%eax), %eax;movl (%esp), %edx": 1,
                "movl %ecx, (%eax);movl (%esp), %ebx;movl (%esp), %ecx;movl (%esp), %esi;movl (%esp), %edi": 1,
                "movl (%esp), %edi;movl (%esp), %edx;movl %ebx, (%eax);andl $, %esi;movl %ecx, (%eax)": 1,
                "movl (%eax), %edi;movl (%eax), %ebp;pushl %ebx;pushl %esi;pushl %edi": 1,
                "movl (%eax), %edx;movl (%eax), %ecx;movl $, -;andl $, %edi;orl $, %edi": 1,
                "movl %edi, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl -, %edi;movl %edi, (%esp)": 1,
                "movl %dr, %ebx;movl %dr, %esi;movl %dr, %edi;movl %ebx, (%ebp);movl %esi, (%ebp)": 2,
                "movl %dr, %ebx;movl %dr, %esi;movl %dr, %edi;movl %ebx, (%ebp);xorl %ebx, %ebx": 2,
                "pushl %eax;sti;pushl %ebx;pushl %ebp;calll  <NtVdmControl+>": 1,
                "jne - <KeiEoiHelper+>;movl -, %ecx;movl (%ecx), %ecx;cmpl $, (%ecx);je  <KeiEoiHelper+>": 1,
                "cmpl , %esi;jb  <KeiEoiHelper+>;movl , %esi;movl $, %ecx;pushl %ebp": 1,
                "jmp - <KeiEoiHelper+>;popl -;addl $, %esp;movl (%ebp), %ebx;movl $, %eax": 1,
                "addl $, %esp;popl %ebp;testl $, (%ebp);jne - <KeiEoiHelper+>;pushl %ebp": 1,
                "testb $-, -;jne - <KeiEoiHelper+>;movl , %eax;movl -, %ecx;testl $, (%ecx)": 1,
                "je  <KeiEoiHelper+>;fxsave (%esi);jmp  <KeiEoiHelper+>;fnsave (%esi);movb $, (%edx)": 1,
                "fnsave (%esi);movb $, (%edx);testb $, ;je  <KeiEoiHelper+>;fxrstor (%ecx)": 1,
                "sti;testl $, %ebx;je - <KeiEoiHelper>;clts;cli": 1,
                "je  <KeiEoiHelper+>;addl $-, %edx;cmpb $, %al;je  <KeiEoiHelper+>;addl $, %edx": 2,
                "je  <KeiEoiHelper+>;addl $-, %edx;cmpw $, %ax;je  <KeiEoiHelper+>;cmpb $-, %al": 2,
                "movl $, %eax;jmp  <KiCoprocessorError+>;testb $-, -;je  <KeiEoiHelper+>;pushl %ebx": 1,
                "je  <KeiEoiHelper+>;pushl %ebx;pushl %edi;pushl %esi;movl %dr, %ebx": 1,
                "movl %ebx, %dr;movl %esi, %dr;popl %esi;popl %edi;popl %ebx": 1,
                "sti;addl $, %esp;addl $, %ebp;movl (%ebp), %ebx;movl $, %edx": 1,
                "calll *;sti;movl %eax, %edi;calll  <KeiEoiHelper+>;pushl %eax": 1,
                "pushl %eax;movl %edi, %ecx;calll *;cli;popl %eax": 1,
                "jmp  <KeiEoiHelper+>;movl %edi, %edi;testl $, (%esp);je  <KeiEoiHelper+>;subl $, %esp": 1,
                "calll  <NtVdmControl+>;testb $-, %al;jne  <KeiEoiHelper+>;pushl $;calll  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <KeiEoiHelper+>;cmpl $, %eax;jae  <KeiEoiHelper+>;sti;movl (%ebp), %ebp": 1,
                "movl (%ebp), %ebx;movl $, %eax;jmp - <KeiEoiHelper+>;cmpb $, %al;je - <KeiEoiHelper+>": 1,
                "jmp  <KeiEoiHelper+>;cmpw $, (%ebp);je  <KeiEoiHelper+>;movl $, (%ebp);jmp  <KeiEoiHelper+>": 1,
                "popl %ebp;movl (%esp), %esp;iretl;movl $, %eax;testb $, (%ebp)": 1,
                "movl $, %edi;repne  scasb %es:(%edi), %al;popl %ecx;jne  <KeiEoiHelper+>;loop -": 1,
                "cmpb $, %al;je  <KeiEoiHelper+>;jmp  <KeiEoiHelper+>;cmpb $, %al;je  <KeiEoiHelper+>": 1,
                "jmp  <KeiEoiHelper+>;cmpb $, %al;je  <KeiEoiHelper+>;cmpb $, %al;je  <KeiEoiHelper+>": 1,
                "jmp - <KeiEoiHelper>;leal (%ecx), %ecx;cmpl $, %ecx;jne  <KeiEoiHelper+>;movb $, %al": 1,
                "movl (%ebp), %ebx;pushl %edi;pushl %ebx;pushl %eax;calll - <PoSetPowerState+>": 1,
                "pushl %ebx;pushl %eax;calll - <PoSetPowerState+>;cmpb $, ;je - <KeiEoiHelper>": 1,
                "je  <KeiEoiHelper+>;movl $, (%ebp);movl $, %eax;movl %eax, (%ebp);jmp - <KeiEoiHelper>": 2,
                "jmp - <KeiEoiHelper>;movl (%ebp), %ecx;shrl %ecx;andl , %ecx;testl $, (%ebp)": 1,
                "jne  <KeiEoiHelper+>;movl -, %esi;movl (%esi), %esi;cmpl $, (%esi);je  <KeiEoiHelper+>": 1,
                "testb $, %al;jne  <KeiEoiHelper+>;movl %esi, %eax;movl (%ebp), %esi;cmpl $, %eax": 1,
                "movl $, %eax;movl %esi, %ebx;movl %ecx, %edx;movl %edi, %esi;jmp - <KeiEoiHelper+>": 1,
                "calll - <KeRegisterBugCheckReasonCallback+>;testl $, (%ebp);je  <KeiEoiHelper+>;cmpl $, ;jne - <KeiEoiHelper+>": 1,
                "je  <KeiEoiHelper+>;movl -, %ebx;testb $-, (%ebx);je  <KeiEoiHelper+>;andl $, (%ebp)": 1,
                "je  <KeiEoiHelper+>;pushl %ebp;pushl $;pushl $;pushl %eax": 1,
                "movl $, -;sti;movl (%ebp), %ebx;movzwl (%ecx), %eax;movl %eax, %edx": 1,
                "movl (%ebx), %ebx;cmpl $, (%ebx);je - <KeiEoiHelper+>;movl %cr, %ebx;andl $-, %ebx": 1,
                "cli;movl -, %edi;movl (%edi), %esi;cmpb $, (%esi);je  <KiCoprocessorError+>": 1,
                "movl %eax, ;movl (%ebp), %eax;pushl %edx;pushl %ebx;pushl $": 1,
                "pushl $;pushl %ecx;pushl %eax;calll - <ZwYieldExecution+>;popl %ebp": 1,
                "movl , %eax;retl;movl %edi, %edi;pushl %ebp;movl %esp, %ebp": 1,
                "movl %ecx, (%ebx);movl %edx, (%ebx);movl %eax, %ebx;movl %eax, %ecx;movl , %edx": 1,
                "movl %edx, (%ebx);movl %eax, %ebx;movl %eax, %ecx;movl , %edx;addl $, %ecx": 1,
                "movl %edx, ;pushl %eax;movl , %eax;addl $, %eax;jae  <KeUpdateSystemTime+>": 1,
                "incl %eax;incl %ebx;andl $, %eax;leal (,%eax,), %ecx;movl (%ecx), %edx": 1,
                "cmpl -(%edx), %esi;jb  <KeUpdateSystemTime+>;ja  <KeUpdateSystemTime+>;cmpl -(%edx), %edi;jb  <KeUpdateSystemTime+>": 1,
                "jne  <KeUpdateSystemTime+>;cli;incl (%ecx);movl %edx, (%eax);movl %ebx, (%eax)": 1,
                "movl (%eax), %edx;movl %ecx, (%eax);subl %edx, %ecx;addl (%eax), %ecx;shrl %ecx": 1,
                "jne  <KeUpdateRunTime+>;movl , %ecx;movl %ecx, (%eax);movl , %ecx;cmpl (%eax), %ecx": 1,
                "cmpl $, ;je  <KeProfileInterruptWithSource+>;movl (%esp), %ecx;movl (%ebp), %edx;calll ": 1,
                "movl (%esp), %ecx;movl (%ebp), %edx;calll ;movl (%esp), %ebp;incl ": 1,
                "jne - <KeProfileInterruptWithSource+>;movl %edi, %edi;retl $;nop;shll $, %ecx": 1,
                "retl $;nop;shll $, %ecx;addl %ecx, %ebx;jmp - <KeProfileInterruptWithSource+>": 1,
                "calll *;movl %ebx, %eax;popl %ebx;retl $;leal (%esp), %esp": 1,
                "leal (%ecx), %ecx;incl -;movl %esp, %ebp;movl (%edi), %eax;pushl %eax": 1,
                "je  <KeSynchronizeExecution+>;movl (%edi), %ecx;calll *;movl %eax, (%esp);movl (%edi), %eax": 1,
                "cmpb %cl, (%edi);je  <KeSynchronizeExecution+>;movl %eax, %esi;movl (%esp), %ecx;calll *": 1,
                "je  <KeSynchronizeExecution+>;cmpw $, (%edi);je  <KeSynchronizeExecution+>;movl %eax, %ebp;movl (%edi), %edi": 1,
                "subl $, %edi;cmpl $, (%esp);jne  <KeSynchronizeExecution+>;jmp - <KeSynchronizeExecution+>;subl $, %edi": 1,
                "je - <KeSynchronizeExecution+>;movl $, (%esp);calll *;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movl (%edi), %ecx;calll - <IoWMIDeviceObjectToInstanceName+>;popl %eax;jmp - <KeSynchronizeExecution+>;leal (%esp), %esp": 1,
                "pushl %ecx;calll *;orl %eax, %eax;je  <KeSynchronizeExecution+>;subl $, %esp": 2,
                "jmp - <KeSynchronizeExecution+>;movl %eax, %edx;movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl %ecx": 2,
                "movl %edx, (%esp);testl $, (%esp);jne  <KeSynchronizeExecution+>;cmpw $, (%esp);je  <KeSynchronizeExecution+>": 1,
                "movl (%edi), %ecx;movl %ebx, %dr;movl %ecx, %dr;jmp - <KeSynchronizeExecution+>;leal (%ecx), %ecx": 1,
                "cmpl $, -;jne - <KiUnexpectedInterrupt+>;pushl %ecx;movb $, %cl;calll *": 1,
                "jne - <KiUnexpectedInterrupt+>;pushl %ecx;movb $, %cl;calll *;popl %ecx": 1,
                "movl (%ebx), %edi;movl $, (%ebx);movl %esi, (%ebx);movb %cl, (%edi);movl %edi, %ecx": 1,
                "cmpl (%eax), %eax;je  <KiDispatchInterrupt+>;pushl %ebp;pushl (%ebx);movl $, (%ebx)": 1,
                "movl %eax, %esi;movl (%ebx), %edi;movl $, (%ebx);movl %esi, (%ebx);movl %edi, %ecx": 1,
                "orb %cl, %cl;movb $, %es:(%esi);pushfl;movl (%ebx), %ecx;cmpl $, (%ebx)": 1,
                "cmpl $, ;jne  <KiDispatchInterrupt+>;movl %cr, %ebp;movl %ebp, %edx;movb (%esi), %cl": 1,
                "movl (%esi), %ecx;subl $, %eax;movl %ecx, (%ebx);movl %eax, (%ebx);xorl %ecx, %ecx": 1,
                "movl (%esi), %eax;movl %eax, (%ebx);sti;movl (%edi), %eax;cmpl (%esi), %eax": 1,
                "popfl;jne  <KiDispatchInterrupt+>;movb $, %al;retl;movb $, %cl": 1,
                "movl %eax, (%ebp);movl $, %eax;movl (%ebx), %ebp;movl (%edi), %ecx;movl %ecx, (%ebp)": 1,
                "pushl $;calll - <KeBugCheck>;retl;pushl %ebx;pushl %esi": 1,
                "movl (%ebx), %ecx;movl (%ebx), %ebx;movl (%esi), %edx;movl (%esi), %eax;cmpxchgb (%esi)": 1,
                "retl $;movl %edi, %edi;movl %cr, %eax;movl %eax, %cr;retl": 1,
                "movl %edi, %edi;movl %cr, %eax;movl %eax, %cr;retl;movl %cr, %eax": 1,
                "andl $, %eax;movl %eax, %cr;orl $, %eax;movl %eax, %cr;retl": 1,
                "cmpw %ax, (%edx);je  <KiDispatchInterrupt+>;movl -, %ecx;movl (%edx), %eax;movl %eax, (%ecx)": 1,
                "lldtw %ax;movl -, %ecx;movl (%esp), %edx;xorl %eax, %eax;movw %ax, %gs": 1,
                "movl %eax, (%ecx);movl %eax, %cr;movw (%edx), %ax;movw %ax, (%ecx);retl $": 1,
                "movl $, (%ebx);cmpl (%ebp), %ebp;jne - <KiDispatchInterrupt+>;addl $, %esp;retl": 1,
                "movl (%esp), %edx;movl (%eax), %eax;testl $, (%edx);jne  <KiDispatchInterrupt+>;subl $, %eax": 1,
                "cli;movl %cr, %eax;testl $, (%ebp);je  <KiDispatchInterrupt+>;orl $, %eax": 1,
                "movl %edx, (%esp);movl %ecx, %eax;mull ;movl %edx, (%esp);xorl %ebx, %ebx": 1,
                "mull ;movl %edx, (%esp);xorl %ebx, %ebx;addl (%esp), %eax;adcl $, %ebx": 1,
                "movl , %edx;movl %eax, (%edx);popl -;addl $, %esp;popl %ebp": 1,
                "calll *%eax;popl %ecx;orl %ecx, %ecx;je  <KiDispatchInterrupt+>;movl %esp, %ebp": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;orl %eax, %eax;je  <ExInterlockedFlushSList+>;movl %edx, %ecx": 1,
                "movl %edi, %edi;pushl %ebx;pushl %ebp;movl %ecx, %ebp;movl (%ebp), %edx": 1,
                "movl %ecx, %ebp;movl (%ebp), %edx;movl (%ebp), %eax;orl %eax, %eax;je  <InterlockedPopEntrySList+>": 1,
                "leal -(%edx), %ecx;movl (%eax), %ebx;cmpxchgb (%ebp);jne - <InterlockedPopEntrySList+>;popl %ebp": 1,
                "nop;movl (%esp), %eax;movl (%eax), %eax;retl $;leal (%ecx), %ecx": 1,
                "movl %ecx, %ebp;movl (%edx), %ebx;movl (%edx), %ecx;movl (%esp), %edx;movl (%edx), %eax": 3,
                "movl (%esp), %edi;movl (%esp), %ecx;movb (%esp), %al;movb %al, %ah;shll $, %eax": 1,
                "movb %al, %ah;cld;movl %ecx, %edx;andl $, %edx;shrl $, %ecx": 1,
                "decl %edi;rep  movsb (%esi), %es:(%edi);cld;jmp - <RtlMoveMemory+>;nop": 1,
                "rep  movsb (%esi), %es:(%edi);cld;jmp - <RtlMoveMemory+>;nop;pushl %ebp": 1,
                "movl (%ebp), %ecx;movl (%esi), %eax;cld;movl %ecx, %edx;andl $, %ecx": 3,
                "movl %ecx, %edx;andl $, %ecx;shrl $, %edx;je  <RtlMoveMemory+>;decl %edx": 3,
                "prefetchnta -(%esi);decl %edx;je  <RtlMoveMemory+>;prefetchnta (%esi);movl (%esi), %eax": 1,
                "orl %ecx, %ecx;je  <RtlMoveMemory+>;rep  movsb (%esi), %es:(%edi);popl %ebx;popl %edi": 2,
                "addl %eax, %ecx;subl %eax, %edx;ja - <RtlPrefetchMemoryNonTemporal+>;retl;int": 1,
                "movl %edx, %eax;movl %ecx, %edx;retl;int;int": 1,
                "retl $;pushl $;calll - <RtlUnwind+>;popl %ebx;popl %edi": 1,
                "testl $, %esi;je  <RtlExtendedMagicDivide+>;negl (%ebp);negl (%ebp);sbbl $, (%ebp)": 1,
                "movl (%ebp), %eax;mull (%ebp);xorl %ecx, %ecx;addl -(%ebp), %eax;adcl $, %ecx": 1,
                "testl $, %esi;je  <RtlExtendedMagicDivide+>;negl %edx;negl %eax;sbbl $, %edx": 1,
                "negl (%ebp);movl (%ebp), %eax;mull (%ebp);pushl %edx;movl %eax, %ecx": 1,
                "negl %eax;negl %ecx;sbbl $, %eax;addl $, %esp;popl %esi": 1,
                "popl %esi;movl %eax, %edx;movl %ecx, %eax;popl %ebp;retl $": 1,
                "popl %ebp;retl $;movl %edi, %edi;movl (%esp), %ecx;andl $, %ecx": 1,
                "retl $;movl (%esp), %eax;xorl %edx, %edx;shrl %cl, %eax;retl $": 1,
                "movl (%esp), %edx;negl %edx;negl %eax;sbbl $, %edx;retl $": 1,
                "pushl $;pushl %ecx;calll - <KeSetEventBoostPriority>;retl;int": 1,
                "cli;movl (%ecx), %eax;addl %edx, (%ecx);popfl;retl $": 1,
                "movl (%ecx), %eax;orl %eax, %eax;je  <ExfInterlockedPopEntryList+>;movl (%eax), %edx;movl %edx, (%ecx)": 1,
                "subl $, (%ecx);lahf;andl $, %eax;retl;movl %edi, %edi": 1,
                "movl %edi, %edi;movl $, %eax;xaddl %eax, (%ecx);decl %eax;retl": 1,
                "cli;movl (%esp), %eax;movl (%esp), %ecx;movl (%eax), %edx;movl %edx, (%ecx)": 1,
                "leal (%eax), %esi;xorw %dx, %dx;cmpw $, (%esi);je  <ExiInterlockedExchangeUlong+>;movl %fs:, %edi": 1,
                "xorw %ax, %ax;movw %ax, %gs;pushl %ds;popl %es;retl": 1,
                "xorl %ebx, %ebx;xorl %esi, %esi;xorl %edi, %edi;pushl (%esp);pushl (%esp)": 1,
                "pushl (%esp);pushl (%esp);pushl (%esp);pushl (%esp);calll  <ExiInterlockedExchangeUlong+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl %edx;pushl %fs:": 1,
                "movl (%ecx), %eax;movl %eax, (%edx);movl $, %eax;retl $;movl (%esp), %ecx": 2,
                "movl %edi, (%ebx);jmp  <RtlCaptureContext+>;movl %edi, %edi;pushl %ebx;movl (%esp), %ebx": 1,
                "movl (%esp), %ecx;movl %eax, (%ecx);movl %fs:, %eax;movl (%esp), %ecx;movl %eax, (%ecx)": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movl %ebx, (%eax)": 1,
                "testb $, (%ebp);movl %edi, -(%ebp);jne  <POOLMI+>;leal -(%edi), %eax;cmpl $, %eax": 1,
                "shrl $, %esi;xorl %edx, %edx;divl %esi;cmpl %ecx, %eax;jbe  <POOLMI+>": 1,
                "cmpl %ebx, %eax;jne  <POOLMI+>;pushl %ebx;pushl %edi;calll ": 1,
                "movl -(%esi), %ecx;subl $, %esi;movl (%esi), %eax;shrdl $, %ecx, %eax;movl $, %ebx": 1,
                "movl $, %ebx;shrl $, %ecx;andl %ebx, %eax;imull $, %eax, %eax;addl , %eax": 1,
                "pushl %eax;pushl (%ebp);calll - <MmTrimAllSystemPagableMemory+>;cmpl $, %edi;je  <POOLMI+>": 1,
                "andl %edx, %eax;andl %ecx, %ebx;cmpl %edi, ;movl %esi, -(%ebp);movl %eax, -(%ebp)": 1,
                "jbe  <POOLMI+>;movl , %eax;subl %ecx, %eax;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edi, %eax;movl %eax, -(%ebp);jbe  <POOLMI+>;movl %edi, %eax;movl %eax, -(%ebp)": 1,
                "jmp - <POOLMI+>;testb $, (%ebp);jne  <POOLMI+>;movl , %eax;movl , %ecx": 1,
                "movl , %eax;movl , %ecx;andl $, -(%ebp);shll $, %eax;subl %eax, %ecx": 1,
                "je  <POOLMI+>;movl , %eax;movl , %ecx;imull $, %eax, %eax;shrl $, %ecx": 1,
                "cmpl $-, %ebx;jne  <POOLMI+>;movl (%esi), %ecx;movl (%esi), %eax;decl %edi": 1,
                "movl (%esi), %ecx;movl (%esi), %eax;decl %edi;shrl $, %ecx;shrl $, %edi": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl (%esi), %eax;movl (%esi), %ebx;shrl $, %eax;andl $, %eax": 1,
                "movl (%esi), %eax;movl (%esi), %ebx;shrl $, %eax;andl $, %eax;subl %eax, %ebx": 1,
                "ja  <POOLMI+>;movb %al, %cl;calll *;pushl -(%ebp);movl %edi, %eax": 1,
                "pushl (%esi);shll $, %eax;subl %eax, (%esi);calll - <RtlSetBits>;negl %edi": 1,
                "subl %eax, (%esi);calll - <RtlSetBits>;negl %edi;movl %edi, (%ebp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl -(%ebp), %eax;movl -(%ebp), %ebx;addl $, %eax": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edx;movl %eax, -(%ebp);andl $, %eax;xorl %ecx, %ecx": 1,
                "je  <POOLMI+>;movl %fs:, %eax;movl -(%ebp), %ebx;imull $, %ebx, %ebx;addl , %ebx": 1,
                "pushl -(%ebp);calll - <MmIsAddressValid+>;testl %eax, %eax;movl , %eax;je  <POOLMI+>": 1,
                "movl %eax, %ebx;cmpl $, %edi;jne  <POOLMI+>;leal (%ebx), %eax;movl %eax, (%esi)": 1,
                "cmpl $, %edi;jne  <POOLMI+>;leal (%ebx), %eax;movl %eax, (%esi);testb $, ": 1,
                "je  <POOLMI+>;cmpl $, -(%ebp);jne  <POOLMI+>;movl %ebx, %eax;shll $, %eax": 1,
                "leave;retl $;andl $, (%eax);movl , %ecx;addl $, %ecx": 1,
                "movl %eax, (%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl %ebx, %eax": 1,
                "addl , %eax;movl %eax, (%ebp);pushl $;pushl $;movl %edi, %eax": 1,
                "leal -(%ebx,%edi), %eax;pushl %eax;pushl (%esi);calll - <RtlSetBit>;cmpl $, (%ebp)": 1,
                "pushl %ebx;pushl (%esi);calll - <RtlSetBit>;pushl $;movl %edi, %eax": 1,
                "andl $, %ebx;movl -(%ebx), %esi;movl -(%ebx), %eax;movl $, %edx;movl %esi, %ecx": 1,
                "cmpl %edi, %edi;jne  <POOLMI+>;shrdl $, %eax, %esi;shrl $, %eax;movl (%ebp), %eax": 1,
                "addl %ecx, %esi;imull $, %esi, %esi;addl , %esi;xorl %edi, %edi;cmpl , %eax": 1,
                "jmp - <POOLMI+>;movl (%ebp), %eax;andl $, -(%ebp);movl %eax, %edi;shrl $, %edi": 1,
                "cmpl , %eax;jae  <POOLMI+>;movl (%esi), %edx;testb $, %dl;movl %edx, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %edx, (%esi);movl %eax, (%esi);jne  <POOLMI+>;jmp  <POOLMI+>": 1,
                "jmp  <POOLMI+>;addl $, %esi;testb $, (%esi);je - <POOLMI+>;movl %esi, %eax": 1,
                "addl $, %esi;testb $, (%esi);je - <POOLMI+>;movl %esi, %eax;subl -(%ebp), %eax": 1,
                "sarl $, %edx;incl %edx;movl %edx, -(%ebp);subl %edx, ;testl %ecx, %ecx": 1,
                "je  <POOLMI+>;pushl $;movl %edx, %eax;shll $, %eax;pushl %eax": 1,
                "xorl %esi, %esi;testl %esi, %esi;je  <POOLMI+>;testb $, (%esi);jne  <POOLMI+>": 1,
                "jne  <POOLMI+>;movl %esi, %ecx;addl $, %ecx;movl %ecx, %eax;shrl $, %eax": 1,
                "movl -(%eax), %edx;movl -(%eax), %eax;shrdl $, %eax, %edx;shrl $, %eax;movl %eax, %edi": 1,
                "shll $, %eax;popl %ecx;subl %eax, %ecx;addl %ecx, %edi;cmpl $, ": 1,
                "jne  <POOLMI+>;cmpl $, ;movl (%ebp), %eax;movl -(%eax), %esi;jne  <POOLMI+>": 1,
                "movl %ecx, (%eax);jmp  <POOLMI+>;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax": 1,
                "leal -(%ecx), %eax;cmpl $, %eax;jb  <POOLMI+>;pushl $;popl %eax": 1,
                "calll - <MmFlushImageSection+>;cmpl $, -(%ebp);je  <POOLMI+>;movl %ebx, %eax;negl %eax": 1,
                "shll $, %eax;pushl %eax;calll - <ZwYieldExecution+>;testb $, ;je - <POOLMI+>": 1,
                "andl %edx, (%eax);subl %ebx, (%esi);subl %ebx, (%esi);pushl %ebx;pushl %edi": 1,
                "leal -(%ecx), %eax;shrl $, %eax;movl %eax, -(%ebp);pushl %ebx;movl %ecx, %eax": 1,
                "leal (,%esi,), %edi;movl (%edi), %edx;movb %al, -(%ebp);movl (%edi), %eax;movb $, %cl": 1,
                "pushl (%ebp);calll - <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;je - <MISYSPTE+>;leal (,%esi,), %eax": 1,
                "andl $, %eax;xorl %ecx, %ecx;orl %ecx, %eax;je  <MISYSPTE+>;xorl %eax, %eax": 2,
                "calll - <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;je - <MISYSPTE+>;movl (%ebp), %eax;leal (,%eax,), %eax": 1,
                "movl (%esi), %eax;movl (%esi), %edx;movb $, %cl;calll - <_aullshr>;movb -(%ebp), %cl": 1,
                "movb $, %cl;calll - <_aullshr>;movb -(%ebp), %cl;movl %eax, (%edi);movl (%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %edx;movb $, %cl;calll - <_aullshr>": 1,
                "movl (%ecx), %edx;movb $, %cl;calll - <_aullshr>;movl %eax, %ecx;movl (%ebp), %eax": 1,
                "movb $, %cl;calll - <_aullshr>;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <MISYSPTE+>": 1,
                "leal (,%eax,), %eax;subl %ebx, (%eax);movb -(%ebp), %cl;calll *;movl (%ebp), %ebx": 1,
                "testl %ebx, %ebx;movl %esi, %ecx;jbe  <MISYSPTE+>;movl %ebx, %edx;movl -(%ebp), %edi": 1,
                "jne - <MISYSPTE+>;pushl ;leal -(%ebp), %eax;pushl ;pushl $": 1,
                "jb  <MISYSPTE+>;cmpl $, %ecx;movl (%eax), %edx;jb  <MISYSPTE+>;shll $, %edx": 1,
                "movl (%eax), %edx;jb  <MISYSPTE+>;shll $, %edx;leal (%eax), %edi;addl $, %edx": 1,
                "pushl %ebx;pushl (%eax);calll - <XIPDispatch+>;cmpb $, %al;jne  <MISYSPTE+>": 1,
                "sarl $, %edi;calll *;movb %al, (%ebp);movl (%ebp), %eax;addl %eax, (,%esi,)": 1,
                "ja  <MISYSPTE+>;cmpl -(%ebp), %edi;jb  <MISYSPTE+>;jmp  <MISYSPTE+>;movl (%ebp), %ecx": 1,
                "cmpl -(%ebp), %edi;jb  <MISYSPTE+>;jmp  <MISYSPTE+>;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "movb $, %cl;calll - <_aullshr>;movl , %ecx;movl (%esi), %edx;leal (%ecx,%eax,), %eax": 1,
                "movl (%esi), %eax;andl $, %eax;xorl %edx, %edx;orl %edx, %eax;je  <MISYSPTE+>": 1,
                "cmpl $, %eax;movl %edi, (%esi);movl %eax, %edi;jne  <MISYSPTE+>;movl (%ebx), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, ;jae  <MISYSPTE+>;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "leal (,%esi,), %esi;pushl $;pushl $;pushl (%esi);calll - <MISYSPTE+>": 1,
                "pushl $;pushl (%esi);calll - <MISYSPTE+>;testl %eax, %eax;je  <MISYSPTE+>": 1,
                "movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "movl %eax, (%ebp);movl (%edx), %eax;cmpl (%esi), %eax;jae  <MISYSPTE+>;pushl %edi": 1,
                "pushl $;pushl (%ebp);pushl %esi;calll - <MISYSPTE+>;testl %eax, %eax": 1,
                "pushl %edi;incl %ecx;xorl %edi, %edi;cmpl , %esi;movl %ecx, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);jne  <POOLCODE+>;cmpl $, %esi;jne  <POOLCODE+>": 1,
                "jne  <POOLCODE+>;cmpl $, %esi;jne  <POOLCODE+>;calll *;movb %al, -(%ebp)": 1,
                "leal (%esi), %ebx;cmpl %edi, (%ebx);jne  <POOLCODE+>;testb $, (%esi);jne  <POOLCODE+>": 1,
                "jne  <POOLCODE+>;andw %di, %bx;cmpw $, %bx;movl $, -(%ebp);je  <POOLCODE+>": 2,
                "movl $, -(%ebp);je  <POOLCODE+>;movl (%ecx), %edx;movl (%ecx), %ebx;movl %edx, (%ebx)": 2,
                "xorl %ecx, %ecx;movw (%eax), %cx;testw %cx, %di;je  <POOLCODE+>;andl %edi, %ecx": 1,
                "incl -(%ebp);movl %ecx, (%eax);movl %eax, -(%ebp);jmp  <POOLCODE+>;andw %di, (%eax)": 1,
                "leal (%esi), %ebx;movl (%ebx), %eax;cmpl (%ebp), %eax;jne  <POOLCODE+>;movl %ebx, -(%ebp)": 1,
                "cmpl (%ebp), %eax;jne  <POOLCODE+>;movl %ebx, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;movl $, %edx;cmpxchgl %edx, (%ecx)": 1,
                "jne  <POOLCODE+>;testb $, -(%ebp);je  <POOLCODE+>;movl (%esi), %ecx;calll *": 1,
                "jmp  <POOLCODE+>;cmpl $, ;jbe  <POOLCODE+>;leal -(%ebp), %ecx;calll *": 1,
                "movl %edi, %ebx;jne - <POOLCODE+>;cmpl %edi, -(%ebp);je  <POOLCODE+>;testb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %esi, (%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "pushl %eax;pushl (%ebp);calll - <ExAcquireSharedWaitForExclusive+>;movl %eax, %edi;testl %edi, %edi": 1,
                "movl $, %eax;andl %eax, %edi;andl %eax, %ecx;cmpl %ecx, %edi;je  <ExFreePoolWithTag+>": 1,
                "pushl %eax;pushl %edi;calll - <ExAcquireSharedWaitForExclusive+>;testb $, (%esi);jne  <ExFreePoolWithTag+>": 1,
                "jne  <ExFreePoolWithTag+>;cmpl $, %esi;jne  <ExFreePoolWithTag+>;calll *;movb %al, -(%ebp)": 1,
                "andl $, -(%ebp);testb $, %ch;movl %eax, -(%ebp);jne  <ExFreePoolWithTag+>;pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%esi);pushl $;jmp - <ExFreePoolWithTag+>;movl %ebx, %eax": 1,
                "movw (%eax), %dx;andl $, %edx;cmpl %edx, %ebx;je  <ExFreePoolWithTag+>;pushl (%esi)": 1,
                "movl -(%ebp), %eax;movl (,%eax,), %edi;andw $, %cx;movw %cx, (%esi);movl -(%ebp), %ecx": 1,
                "andl %eax, %ecx;cmpl %ecx, -(%ebp);je  <ExFreePoolWithTag+>;movl -(%ebp), %eax;movl %eax, %ecx": 1,
                "pushl %eax;pushl -(%ebp);calll - <ExAcquireSharedWaitForExclusive+>;andl $-, -(%ebp);testb $, -(%ebp)": 1,
                "movl (%eax), %ecx;decl %edx;cmpl %edx, (%ecx);jne  <ExFreePoolWithTag+>;movl (%eax,%ebx,), %ebx": 1,
                "jb - <ExFreePoolWithTag+>;movl -(%ebp), %ecx;movl (%ecx,%eax), %ecx;incl (%ecx);movw (%ecx), %ax": 1,
                "andl $, (%ebp);testb $, (%edi);jne  <ExFreePoolWithTag+>;cmpl $, %edi;jne  <ExFreePoolWithTag+>": 1,
                "calll *;movl -(%ebp), %edx;incl (%edi);movl $, %ebx;testl %edx, %ebx": 1,
                "andw %cx, %dx;xorl %eax, %edx;movw %dx, (%esi);jmp  <ExFreePoolWithTag+>;movl $, %ecx": 1,
                "movzwl (%esi), %esi;xorl %edx, %edx;movw (%eax), %dx;addw %dx, %si;movl $, %ebx": 1,
                "jne  <ExFreePoolWithTag+>;movl (%edi), %ecx;calll *%ebx;movl , %ecx;calll *": 1,
                "movl (%edi), %ecx;jmp - <ExFreePoolWithTag+>;andw %cx, (%esi);xorl %eax, %eax;movw (%esi), %ax": 1,
                "calll *;jmp  <ExFreePoolWithTag+>;movl (%edi), %ecx;calll *;popl %edi": 1,
                "andl %edx, %edi;testb $, %al;movl %edi, -(%ebp);je  <ExAllocatePoolWithTag+>;testb $, %al": 1,
                "je  <ExAllocatePoolWithTag+>;pushl (%ebp);pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax": 1,
                "jne  <ExAllocatePoolWithTag+>;calll *;movb %al, -(%ebp);jmp  <ExAllocatePoolWithTag+>;movl (%ebx), %ecx": 3,
                "movl %eax, %ebx;testl %ebx, %ebx;jne  <ExAllocatePoolWithTag+>;movl (%ebp), %eax;movl (%eax,%esi,), %edi": 1,
                "je  <ExAllocatePoolWithTag+>;testl %ecx, (%ebp);jne  <ExAllocatePoolWithTag+>;movl $, -(%ebp);jmp  <ExAllocatePoolWithTag+>": 1,
                "cmpl %ecx, %eax;jae  <ExAllocatePoolWithTag+>;incl %eax;movl %eax, -(%ebp);movl (,%eax,), %ebx": 1,
                "addl %eax, ;movl , %edx;cmpl %ecx, %edx;movl %edx, -(%ebp);jbe  <ExAllocatePoolWithTag+>": 1,
                "incl %eax;movl -(%ebp), %esi;movl (,%esi,), %esi;movl (%esi), %esi;cmpl %eax, (%esi)": 1,
                "movl (%esi), %esi;cmpl %eax, (%esi);je  <ExAllocatePoolWithTag+>;incl -(%ebp);cmpl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);jb  <ExAllocatePoolWithTag+>;decl %ecx;movl %ecx, -(%ebp);movl %ecx, %eax": 1,
                "leal (%ebx), %eax;cmpl %eax, %esi;jne - <ExAllocatePoolWithTag+>;xorl %eax, %eax;incl %eax": 1,
                "jne  <ExAllocatePoolWithTag+>;cmpl %eax, -(%ebp);jne  <ExAllocatePoolWithTag+>;movl (%ebx), %ecx;calll *": 1,
                "cmpl %eax, -(%ebp);jne  <ExAllocatePoolWithTag+>;movl , %ecx;calll *;jmp  <ExAllocatePoolWithTag+>": 1,
                "calll *;movb %al, -(%ebp);pushl $;movl $, %esi;pushl %esi": 1,
                "movb %al, -(%ebp);pushl $;movl $, %esi;pushl %esi;pushl -(%ebp)": 1,
                "pushl %esi;pushl -(%ebp);calll - <POOLMI+>;cmpl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "andl %edi, %eax;cmpl %edx, %eax;movl %ecx, (%ebp);je  <ExAllocatePoolWithTag+>;subl %edx, %ecx": 1,
                "je  <ExAllocatePoolWithTag+>;subl %edx, %ecx;testw %di, (%esi);jne  <ExAllocatePoolWithTag+>;leal (%esi,%edx,), %eax": 1,
                "leal (%esi,%edx,), %ecx;testw $, %cx;je  <ExAllocatePoolWithTag+>;movw (%ecx), %cx;xorw %dx, %cx": 1,
                "andw %di, %cx;movw %cx, (%ebp);leal (%esi,%edx,), %ecx;movw (%ebp), %dx;xorw %dx, (%ecx)": 1,
                "xorl %edx, %edx;movw (%esi), %dx;andw %di, %cx;xorw %cx, (%esi);movzbw -(%ebp), %cx": 1,
                "movw (%esi), %cx;movzbw %al, %ax;andw %di, %cx;shll $, %eax;orl %ecx, %eax": 1,
                "movw %ax, (%esi);incl (%ebx);testb $, (%ebx);jne  <ExAllocatePoolWithTag+>;cmpl $, %ebx": 1,
                "cmpl %ebx, ;je  <ExAllocatePoolWithTag+>;pushl (%ebp);xorl %ecx, %ecx;movw (%esi), %cx": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);jne  <ExAllocatePoolWithTag+>;testb $, (%ebx)": 1,
                "jmp  <ExAllocatePoolWithTag+>;cmpl $, ;je  <ExAllocatePoolWithTag+>;pushl (%ebp);pushl %ecx": 1,
                "pushl %ecx;pushl (%ebp);pushl %eax;calll - <CcScheduleReadAhead>;movl (%ebp), %eax": 1,
                "jmp  <CcCopyRead+>;incl ;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;cmpl %ecx, %edx;jbe  <CcCopyRead+>;movl %ecx, -(%ebp);movl %ecx, %edx": 1,
                "movl %ecx, -(%ebp);movl %edi, -(%ebp);cmpl %edi, %ecx;je  <CcCopyRead+>;movl %edx, -(%ebp)": 1,
                "negb %al;sbbl %eax, %eax;incl %eax;orl %eax, -(%ebp);movl %esi, %ecx": 2,
                "incl %eax;orl %eax, -(%ebp);movl %esi, %ecx;movl -(%ebp), %esi;movl (%ebp), %edi": 2,
                "movb $, (%ebx);movl %edi, (%ebx);pushl %edi;pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>": 2,
                "movl -(%ebp), %eax;shrl %eax;movl %eax, (%ebx);pushl -(%ebp);pushl -(%ebp)": 2,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <CcWaitForCurrentLazyWriterActivity+>": 2,
                "pushl %eax;calll - <ExRaiseStatus>;orl $-, -(%ebp);xorl %edi, %edi;movl -(%ebp), %esi": 2,
                "calll - <ExRaiseStatus>;orl $-, -(%ebp);xorl %edi, %edi;movl -(%ebp), %esi;movl -(%ebp), %eax": 1,
                "cmpl %edi, (%ebp);je  <CcCopyRead+>;cmpb $, (%ebp);je  <CcCopyRead+>;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);je  <CcCopyRead+>;movl %ecx, -(%ebp);movl -(%ebp), %ecx;cmpl %edi, %ecx": 1,
                "pushl $;popl %ecx;cmpl %ecx, %eax;jbe  <CcCopyRead+>;movl %ecx, (%ebx)": 1,
                "movl -(%ebp), %eax;shrl %eax;movl %eax, (%ebx);cmpb $, (%ebp);je  <CcCopyRead+>": 1,
                "calll - <CcRepinBcb+>;cmpl $, -(%ebp);jne  <CcCopyRead+>;pushl $;jmp  <CcCopyRead+>": 1,
                "pushl -(%ebp);calll - <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %eax;movb %al, %cl;andb $, %cl": 1,
                "movl %eax, (%ebx);movl $, ;cmpl %edi, -(%ebp);je  <CcCopyRead+>;movl (%ebp), %ecx": 1,
                "jmp  <CcCopyRead+>;pushl %edi;movb $, %dl;movl -(%ebp), %ecx;calll - <CcRepinBcb+>": 1,
                "xorl %edx, %edx;addl (%ebx), %eax;adcl (%ebx), %edx;movl %eax, (%esi);movl %edx, (%esi)": 1,
                "xorl -(%ebp), %eax;testl $, %eax;jne  <CcFastCopyRead+>;movl (%ebp), %ecx;andl $, %ecx": 1,
                "testl $, %eax;jne  <CcFastCopyRead+>;movl (%ebp), %ecx;andl $, %ecx;movl %ecx, -(%ebp)": 1,
                "decl -(%ebp);subl %eax, -(%ebp);addl %eax, (%ebp);addl %eax, -(%ebp);xorl %edi, %edi": 2,
                "jne  <CcFastCopyRead+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <CcWaitForCurrentLazyWriterActivity+>": 1,
                "movl %edi, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);cmpl %edi, (%ebp);je  <CcFastCopyRead+>": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax;addl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "addl %ecx, %eax;movl %eax, -(%ebp);cmpl (%ebp), %ecx;jbe  <CcFastCopyRead+>;movl (%ebp), %ecx": 1,
                "leal (%eax,%ecx), %eax;shrl $, %eax;decl %eax;movl %eax, -(%ebp);je  <CcFastCopyRead+>": 1,
                "pushl -(%ebp);calll - <CcWaitForCurrentLazyWriterActivity+>;movl -(%ebp), %esi;movl -(%ebp), %eax;movb %al, %cl": 1,
                "movl (%esi), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "addl %ebx, %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %edi, (%eax);movl %ebx, (%eax)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb $, -(%ebp)": 2,
                "pushl %eax;calll - <IoGetRelatedDeviceObject>;movzwl (%eax), %eax;decl %eax;movl %eax, -(%ebp)": 1,
                "jl  <CcZeroData+>;jg  <CcZeroData+>;movl -(%ebp), %eax;cmpl -(%ebp), %eax;jbe  <CcZeroData+>": 1,
                "testb %al, %al;jne  <CcZeroData+>;movb $, -(%ebp);orl $-, -(%ebp);calll  <CcZeroData+>": 1,
                "xorb %al, %al;jmp  <CcZeroData+>;movl -(%ebp), %edi;subl -(%ebp), %edi;movl %edi, -(%ebp)": 1,
                "pushl %ebx;pushl %ebx;pushl %edi;pushl -(%ebp);calll - <IoAllocateMdl>": 1,
                "jne  <CcZeroData+>;pushl $;calll - <ExRaiseStatus>;movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "movl %fs:, %eax;movl %eax, -(%ebp);movb $, (%eax);pushl %ebx;pushl %ebx": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "andl %esi, %ebx;subl -(%ebp), %ebx;movl %ebx, -(%ebp);sbbl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "jne  <CcZeroData+>;cmpl %edi, %ebx;jae  <CcZeroData+>;movl %ebx, %edi;movl %edi, -(%ebp)": 1,
                "jg  <CcZeroData+>;movb $, -(%ebp);movl $, -(%ebp);jmp  <CcZeroData+>;movl $, %eax": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 1,
                "orl $, %eax;movw %ax, (%esi);andl $, (%esi);movl %ebx, (%esi);leal (%esi), %eax": 1,
                "movl (%eax,%edx,), %edx;movl %edx, (%eax,%ecx,);incl %ecx;jmp - <CcZeroData+>;testb $, (%esi)": 1,
                "calll - <IoGetRelatedDeviceObject>;movl %eax, %ecx;movl $, %eax;cmpw %ax, (%ecx);jae  <CcZeroData+>": 1,
                "jmp  <CcZeroData+>;movl -(%ebp), %ebx;movl %edi, %ecx;xorl %eax, %eax;movl -(%ebp), %edi": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%esi), %eax": 2,
                "calll - <ExRaiseStatus>;cmpl $, -(%ebp);jge  <CcZeroData+>;pushl -(%ebp);calll - <ExRaiseStatus>": 1,
                "jne  <CcZeroData+>;movl -(%ebp), %eax;movl %eax, (%esi);pushl %esi;pushl (%esi)": 1,
                "movl %eax, (%esi);pushl %esi;pushl (%esi);calll - <MmUnmapLockedPages>;pushl %esi": 1,
                "je  <CcZeroData+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;retl": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;movb $, %dl;testb %bl, %dl": 1,
                "jne  <CcUnpinData+>;pushl %esi;leal (%ebx), %esi;jmp  <CcUnpinData+>;pushl %eax": 1,
                "testl %eax, %eax;jne - <CcUnpinData+>;pushl %eax;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "pushl %esi;jne  <CcSetBcbOwnerPointer+>;leal (%eax), %esi;jmp  <CcSetBcbOwnerPointer+>;pushl (%ebp)": 1,
                "pushl %ebx;movl (%ebp), %ebx;testb $, %bl;je  <CcUnpinDataForThread+>;movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;movb $, %dl;pushl $;calll - <CcRepinBcb+>;popl %ebx": 1,
                "leal (%eax,%ecx), %edi;shrl $, %edi;pushl $;leal (,%edi,), %edi;pushl %edi": 1,
                "movl %eax, %esi;testl %esi, %esi;jne  <CcUnpinDataForThread+>;pushl $;calll - <ExRaiseStatus>": 1,
                "pushl $;pushl $;calll - <wctomb+>;movl (%ebp), %ecx;movl (%ecx), %eax": 2,
                "movl %eax, %esi;movl %esi, -(%ebp);movl (%esi), %eax;movzbl (%esi), %ebx;leal (%ebx,%eax,), %ebx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ecx);pushl (%ecx)": 1,
                "pushl $;popl %eax;testl %edi, %edi;je  <CcMapData+>;movb $, (%esi)": 1,
                "cmpl %eax, %edi;jbe  <CcMapData+>;movl %eax, (%esi);jmp  <CcMapData+>;leal -(%ebp), %eax": 1,
                "movb (%edx,%ecx), %cl;movb %cl, -(%ebp);addl $, -(%ebp);movl %edi, -(%ebp);jmp - <CcMapData+>": 1,
                "addl $, -(%ebp);movl %edi, -(%ebp);jmp - <CcMapData+>;orl $-, -(%ebp);calll  <CcMapData+>": 1,
                "movl (%ecx), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);leal -(%ebp), %esi": 1,
                "movb %bl, -(%ebp);movl (%ebp), %edi;movl (%edi), %eax;testb $, %al;jne  <CcPinMappedData+>": 1,
                "calll - <ExAcquireSharedStarveExclusive>;testb %al, %al;movb %bl, -(%ebp);je  <CcPinMappedData+>;movb $, -(%ebp)": 1,
                "subl %edx, %ecx;movl -(%ebp), %eax;sbbl -(%ebp), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax": 2,
                "calll - <CcUnpinData>;retl;int;int;int": 3,
                "movl $, ;jmp  <CcPinRead+>;incl ;movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "jne  <CcPinRead+>;incl ;movb %bl, -(%ebp);jmp  <CcPinRead+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);leal -(%ebp), %eax;cmpl %eax, %esi;jne  <CcPinRead+>": 1,
                "jne  <CcPreparePinWrite+>;movb %bl, -(%ebp);jmp  <CcPreparePinWrite+>;movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "orl $-, -(%ebp);calll  <CcPreparePinWrite+>;movb -(%ebp), %al;calll - <wctomb+>;retl $": 1,
                "cmpl %ebx, -(%ebp);je  <CcPreparePinWrite+>;pushl -(%ebp);calll - <CcUnpinData>;retl": 1,
                "calll - <MmUnlockPages>;pushl %esi;calll - <IoFreeMdl>;testl %edi, %edi;movl %edi, %esi": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "jmp  <CcMdlRead+>;movl (%ebp), %edi;incl ;movl $, ;movl (%edi), %eax": 1,
                "pushl -(%ebp);calll - <CcWaitForCurrentLazyWriterActivity+>;movl %eax, %edi;movl %edi, -(%ebp);movl (%ebp), %eax": 1,
                "cmpl %eax, -(%ebp);jbe  <CcMdlRead+>;movl %eax, -(%ebp);movl -(%ebp), %eax;xorl %ecx, %ecx": 1,
                "movl %ecx, -(%ebp);xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "calll - <IoAllocateMdl>;movl %eax, -(%ebp);testl %eax, %eax;jne  <CcMdlRead+>;pushl $": 1,
                "testl %eax, %eax;jne  <CcMdlRead+>;pushl $;calll - <ExRaiseStatus>;movl , %eax": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <CcMdlRead+>;movl %ecx, %eax;jmp - <CcMdlRead+>": 1,
                "movl (%ebp), %edi;movl $, ;movl -(%ebp), %eax;movb %al, %cl;andb $, %cl": 1,
                "movl %eax, (%ebx);calll - <_abnormal_termination>;testl %eax, %eax;je  <CcMdlRead+>;movl -(%ebp), %ecx": 1,
                "je  <CcMdlRead+>;calll - <CcWaitForCurrentLazyWriterActivity+>;cmpl %ebx, -(%ebp);je  <CcMdlRead+>;pushl -(%ebp)": 1,
                "calll - <CcWaitForCurrentLazyWriterActivity+>;cmpl %ebx, -(%ebp);je  <CcMdlRead+>;pushl -(%ebp);calll - <IoFreeMdl>": 1,
                "jmp  <CcMdlRead+>;movl (%esi), %eax;movl (%eax), %edi;pushl %eax;calll - <MmUnlockPages>": 1,
                "calll - <IoFreeMdl>;movl %edi, (%esi);cmpl %ebx, (%esi);jne - <CcMdlRead+>;retl": 1,
                "retl;movl (%ebp), %eax;testb $, (%eax);jne  <CcMdlRead+>;testb $, (%esi)": 1,
                "movl (%ebp), %eax;testb $, (%eax);jne  <CcMdlRead+>;testb $, (%esi);jne  <CcMdlRead+>": 1,
                "lock;andl %ecx, (%esi);movl -(%ebp), %ebx;pushl %ebx;pushl %edi": 1,
                "movl -(%ebp), %ebx;pushl %ebx;pushl %edi;pushl %eax;calll - <CcScheduleReadAhead>": 1,
                "cmpl $, (%ecx);jbe  <CcMdlWriteComplete+>;movl (%ecx), %ecx;testl %ecx, %ecx;je  <CcMdlWriteComplete+>": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *%ecx": 2,
                "testb $, (%eax);je  <CcMdlWriteComplete+>;xorl %ecx, %ecx;incl %ecx;jmp  <CcMdlWriteComplete+>": 1,
                "je  <CcMdlWriteComplete+>;orl $-, %esi;jmp  <CcMdlWriteComplete+>;movl (%ebp), %esi;cmpl $, %esi": 1,
                "jbe  <CcMdlWriteComplete+>;shrl $, %esi;shll $, %esi;jmp  <CcMdlWriteComplete+>;pushl $": 1,
                "incl %edi;calll - <_allshl>;cmpl %edx, (%ebp);jg - <CcMdlWriteComplete+>;jl  <CcMdlWriteComplete+>": 1,
                "testl %eax, (%ecx);je  <CcMdlWriteComplete+>;cmpl %edi, (%ebp);jl  <CcMdlWriteComplete+>;jg  <CcMdlWriteComplete+>": 1,
                "jbe  <CcMdlWriteComplete+>;leal (%esi), %ecx;andl $-, %ecx;addl %ecx, %esi;movl $, -(%ebp)": 1,
                "int;int;int;int;andl $, ": 5,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %esi;xorl %edi, %edi;cmpl %edi, %esi;je  <CmRegisterCallback+>": 1,
                "testb %al, %al;jne  <CmRegisterCallback+>;addl $, (%ebp);addl $, %ebx;cmpl $, (%ebp)": 1,
                "pushl %edi;movl $, %ebx;pushl %ebx;calll  <ExCreateCallback+>;movl %eax, %edi": 2,
                "je  <CmUnRegisterCallback+>;movl (%esi), %eax;cmpl (%ebp), %eax;jne  <CmUnRegisterCallback+>;movl (%esi), %eax": 1,
                "jne  <CmUnRegisterCallback+>;pushl %edi;pushl $;pushl %ebx;calll  <ExCreateCallback+>": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl -(%ebp), %eax;pushl %edi": 1,
                "calll - <ExFreePoolWithTag>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;pushl %edi": 1,
                "movl %eax, %esi;movl %fs:, %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "je  <CmUnRegisterCallback+>;pushl (%ebp);pushl (%ebp);pushl (%esi);pushl %edi": 1,
                "calll *;movl -(%ebp), %ecx;movl -(%ebp), %eax;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "jb  <CmUnRegisterCallback+>;jns  <CmUnRegisterCallback+>;popl %esp;addb %cl, (%ebp);popal": 1,
                "je  <CmUnRegisterCallback+>;jb  <CmUnRegisterCallback+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%esi)": 1,
                "addb %ch, (%eax,%eax);addb %al, (%esi);imull $, (%eax), %eax;pushl %ebx;addb %bh, (%ecx)": 2,
                "imull $, (%eax), %eax;pushl %ebx;addb %bh, (%ecx);jae  <CmUnRegisterCallback+>;je  <CmUnRegisterCallback+>": 1,
                "pushl %eax;xorl %esi, %esi;pushl $;leal -(%ebp), %eax;pushl %eax": 6,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 34,
                "jl  <CmUnRegisterCallback+>;pushl %ebx;pushl $;popl %eax;leal -(%ebp), %ecx": 1,
                "popl %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;movl %eax, -(%ebp)": 3,
                "movl (%esi), %eax;movl (%esi,%eax), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <CmUnRegisterCallback+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;xorl %edx, %edx;movl $, (%eax)": 1,
                "leal (%eax), %ecx;movl %edx, (%eax);movl %ecx, (%ecx);movl %ecx, (%ecx);movw %dx, (%eax)": 1,
                "jmp  <FsRtlDeleteKeyFromTunnelCache+>;movl (%eax), %ecx;cmpl (%ebp), %ecx;movl (%eax), %edx;jb  <FsRtlDeleteKeyFromTunnelCache+>": 1,
                "movl (%eax), %ecx;cmpl (%ebp), %ecx;movl (%eax), %edx;jb  <FsRtlDeleteKeyFromTunnelCache+>;ja  <FsRtlDeleteKeyFromTunnelCache+>": 1,
                "cmpl (%ebp), %ecx;ja  <FsRtlDeleteKeyFromTunnelCache+>;jb  <FsRtlDeleteKeyFromTunnelCache+>;cmpl (%ebp), %edx;jae  <FsRtlDeleteKeyFromTunnelCache+>": 1,
                "movl %esi, (%esi);movl %esi, (%esi);popl %esi;popl %ebp;retl $": 2,
                "pushl %eax;movb $, -(%ebp);calll - <KeQuerySystemTime>;movl , %eax;movl -(%ebp), %ebx": 1,
                "jg  <FsRtlDeleteTunnelCache+>;cmpl %ebx, %edx;jb  <FsRtlDeleteTunnelCache+>;cmpl -(%ebp), %ecx;jl  <FsRtlDeleteTunnelCache+>": 1,
                "pushl $;calll - <ExAllocateFromPagedLookasideList>;movl %eax, %ebx;testl %ebx, %ebx;jne  <FsRtlAddToTunnelCache+>": 1,
                "je  <FsRtlAddToTunnelCache+>;movl %edi, -(%ebp);jmp  <FsRtlAddToTunnelCache+>;movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);movl %eax, -(%ebp);pushl (%ebp);pushl %eax;calll - <CcWaitForCurrentLazyWriterActivity+>": 1,
                "movw (%esi), %ax;testw %ax, %ax;je  <FsRtlAddToTunnelCache+>;movl (%esi), %esi;movl (%ebx), %edi": 1,
                "movl (%esi), %esi;movl (%ebx), %edi;movl (%ebp), %edx;movzwl %ax, %ecx;movl %ecx, %eax": 1,
                "movl (%ebp), %edx;movzwl %ax, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %esi;movzwl (%edx), %eax": 1,
                "movl %ecx, (%ebx);movl %eax, (%ebx);movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "pushl $;pushl $;calll - <wctomb+>;movb $, -(%ebp);cmpl $, ": 1,
                "movb (%esi), %al;testb %al, %al;je  <FsRtlMdlReadDev+>;cmpb $, %al;jne  <FsRtlMdlReadDev+>": 1,
                "pushl %edi;calll - <IoGetRelatedDeviceObject>;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;jmp  <FsRtlMdlReadDev+>;movl (%esi), %ecx;movl (%esi), %eax": 1,
                "movl %fs:, %eax;movl $, (%eax);andl $, -(%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl %edi;calll *%eax;jmp  <FsRtlMdlRead+>;pushl %edi;calll - <IoGetBaseFileSystemDeviceObject>": 1,
                "cmpl %esi, %eax;je  <FsRtlMdlRead+>;movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "cmpl $, (%eax);je  <FsRtlMdlRead+>;xorb %al, %al;jmp  <FsRtlMdlRead+>;pushl %esi": 1,
                "pushl %ebx;movl (%ebp), %esi;pushl %esi;calll - <CcCanIWrite>;testb %al, %al": 1,
                "jne  <FsRtlPrepareMdlWriteDev+>;movl (%ebp), %eax;andl $, (%eax);testl %ebx, %ebx;jne  <FsRtlPrepareMdlWriteDev+>": 1,
                "movl (%esi), %edi;adcl %edx, %edi;jmp  <FsRtlPrepareMdlWriteDev+>;movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edx;cmpl $, (%edx);je  <FsRtlPrepareMdlWriteDev+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);pushl (%ebp);calll - <IoGetRelatedDeviceObject>;pushl %eax": 1,
                "pushl $;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl %ebx, (%esi);movl %edi, (%esi)": 4,
                "movl (%esi), %ecx;calll - <ExReleaseResourceLite>;jmp  <FsRtlPrepareMdlWriteDev+>;movl %ebx, (%esi);movl %edi, (%esi)": 2,
                "leal (%esi), %eax;movl -(%ebp), %ecx;cmpl (%eax), %ecx;jl  <FsRtlPrepareMdlWriteDev+>;jg  <FsRtlPrepareMdlWriteDev+>": 1,
                "pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax": 3,
                "pushl (%ebp);pushl %edi;calll - <FsRtlPrepareMdlWriteDev>;popl %edi;popl %esi": 1,
                "calll - <CcSetFileSizes+>;movb $, %al;popl %ebp;retl $;int": 1,
                "jl  <FsRtlMdlWriteCompleteDev+>;cmpl $, -(%ebp);je  <FsRtlMdlWriteCompleteDev+>;testb $, -(%ebp);movl -(%ebp), %eax": 2,
                "je  <FsRtlMdlWriteCompleteDev+>;testb $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%ebp);je  <FsRtlMdlWriteCompleteDev+>": 2,
                "movl (%esi), %eax;cmpl $, %eax;jb  <FsRtlMdlWriteCompleteDev+>;cmpl $, (%esi);jne  <FsRtlMdlWriteCompleteDev+>": 3,
                "jb  <FsRtlMdlWriteCompleteDev+>;movl (%ebx), %ebx;testl %ebx, %ebx;je  <FsRtlMdlWriteCompleteDev+>;pushl %edi": 2,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <FsRtlCheckOplock+>;movl %eax, -(%ebp)": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <FsRtlMdlWriteCompleteDev+>;pushl %eax;calll - <ExIsResourceAcquiredSharedLite>": 1,
                "testl %esi, %esi;je  <FsRtlMdlWriteCompleteDev+>;pushl $;pushl %esi;calll - <ExAcquireResourceSharedLite>": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;movl (%esi), %ecx;testl %ecx, %ecx;je  <FsRtlMdlWriteCompleteDev+>": 1,
                "calll - <ExReleaseResourceLite>;andl $, -(%ebp);cmpl $, -(%ebp);je  <FsRtlMdlWriteCompleteDev+>;movl -(%ebp), %eax": 1,
                "leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <FsRtlReleaseFile+>;movb $, %cl;movb $, (%eax)": 1,
                "pushl %ebx;calll - <IoGetRelatedDeviceObject>;movl %eax, %edi;movl (%edi), %eax;movl (%eax), %eax": 1,
                "movl (%edi), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FsRtlGetFileSize+>;movl (%eax), %eax": 1,
                "pushl %ebx;calll *%eax;testb %al, %al;jne  <FsRtlGetFileSize+>;andl $, -(%ebp)": 1,
                "jne  <FsRtlGetFileSize+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 2,
                "jge  <FsRtlGetFileSize+>;movl %esi, -(%ebp);pushl (%ebp);calll - <IoSetThreadHardErrorMode>;cmpl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <FsRtlGetFileSize+>;movl -(%ebp), %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "pushl %esi;pushl %edi;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %ebx": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %ebx;movl %ecx, -(%ebp);movb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);calll - <IoGetRelatedDeviceObject>;movl %eax, %edi;xorl %eax, %eax;movb (%edi), %al": 1,
                "cmpl %eax, %ecx;jg  <FsRtlCopyRead+>;jl  <FsRtlCopyRead+>;cmpl (%ebp), %esi;jae  <FsRtlCopyRead+>": 1,
                "testb %al, %al;jne  <FsRtlCopyRead+>;movl (%edi), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "jne - <FsRtlCopyRead+>;movl %fs:, %eax;incl (%eax);jne  <FsRtlCopyRead+>;leal (%eax), %ecx": 1,
                "jbe  <FsRtlCopyRead+>;movl (%ebx), %edx;cmpl %eax, %edx;jl  <FsRtlCopyRead+>;jg  <FsRtlCopyRead+>": 1,
                "movl (%edi), %eax;orl -(%ebp), %eax;jne  <FsRtlCopyRead+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %esi;calll - <CcFastCopyRead>;jmp  <FsRtlCopyRead+>;pushl (%ebp);pushl (%ebp)": 1,
                "jmp  <FsRtlCopyRead+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %ecx": 1,
                "calll - <wctomb+>;movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl (%ebp), %ebx": 1,
                "cmpl $-, (%ebx);jne  <FsRtlCopyWrite+>;cmpl $-, (%ebx);movb $, -(%ebp);je  <FsRtlCopyWrite+>": 1,
                "movl %fs:, %eax;decl (%eax);cmpb $, (%ebp);je  <FsRtlCopyWrite+>;cmpl $, (%esi)": 1,
                "jmp  <FsRtlCopyWrite+>;movl (%ebx), %eax;movl %eax, -(%ebp);leal (%eax,%ecx), %edi;movl %edi, -(%ebp)": 1,
                "je  <FsRtlCopyWrite+>;movb (%esi), %cl;testb %cl, %cl;je  <FsRtlCopyWrite+>;cmpl (%esi), %edi": 2,
                "movl (%esi), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;jmp  <FsRtlCopyWrite+>;cmpb $, %cl": 1,
                "movl %fs:, %eax;andl $, (%eax);cmpb $, -(%ebp);je  <FsRtlCopyWrite+>;cmpl (%esi), %edi": 2,
                "cmpb $, -(%ebp);jne  <FsRtlCopyWrite+>;xorl %eax, %eax;addl (%ebx), %ecx;adcl (%ebx), %eax": 1,
                "addl %edx, %ebx;adcl %eax, %edi;jmp  <FsRtlCopyWrite+>;pushl (%ebp);pushl (%esi)": 1,
                "pushl (%esi);calll - <ExAcquireResourceExclusiveLite>;testb %al, %al;jne - <FsRtlCopyWrite+>;movl %fs:, %eax": 1,
                "addl %ecx, %ebx;movl (%eax), %edi;adcl -(%ebp), %edi;movl %edx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl (%eax), %edi;adcl -(%ebp), %edi;movl %edx, -(%ebp);movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %eax;cmpl $, (%eax);je  <FsRtlCopyWrite+>;cmpb $, (%esi)": 2,
                "ja  <FsRtlCopyWrite+>;cmpb $, -(%ebp);je  <FsRtlCopyWrite+>;cmpl (%esi), %edi;jl  <FsRtlCopyWrite+>": 1,
                "jg  <FsRtlCopyWrite+>;cmpl (%esi), %ebx;jbe  <FsRtlCopyWrite+>;movl (%esi), %ecx;calll - <ExReleaseResourceLite>": 2,
                "jmp  <FsRtlCopyWrite+>;cmpb $, (%esi);jne  <FsRtlCopyWrite+>;pushl (%ebp);calll - <IoGetRelatedDeviceObject>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%esi), %eax;pushl %eax;pushl (%ebp)": 1,
                "movl (%ebp), %ecx;addl -(%ebp), %ecx;adcl -(%ebp), %edx;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "testl %eax, %eax;je  <FsRtlMdlWriteComplete+>;cmpl $, (%eax);jbe  <FsRtlMdlWriteComplete+>;cmpl $, (%eax)": 1,
                "je  <FsRtlMdlWriteComplete+>;cmpl $, (%eax);jbe  <FsRtlMdlWriteComplete+>;cmpl $, (%eax);je  <FsRtlMdlWriteComplete+>": 1,
                "andl $, %eax;imull $, %eax, %eax;addl , %eax;incl ;retl": 1,
                "movl %edi, (%ecx);movw %di, (%esi);movw %di, (%esi);movl %edi, (%esi);je  <FsRtlDissectName+>": 1,
                "jb - <FsRtlDissectName+>;movl %edi, %edx;subl (%ebp), %edx;shll %edx;cmpl %eax, %edi": 1,
                "movl %edx, (%ecx);jae  <FsRtlDissectName+>;subl %edi, %eax;leal (%eax,%eax), %eax;movw %ax, (%esi)": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movw (%eax), %cx;testw %cx, %cx;pushl %esi": 1,
                "movl (%ebp), %eax;movw (%eax), %cx;testw %cx, %cx;pushl %esi;je  <FsRtlDoesNameContainWildCards+>": 1,
                "je  <FsRtlDoesNameContainWildCards+>;movl (%eax), %eax;movzwl %cx, %ecx;shrl %ecx;leal -(%eax,%ecx,), %ecx": 1,
                "cmpw $, %dx;je  <FsRtlDoesNameContainWildCards+>;cmpw $, %dx;jae  <FsRtlDoesNameContainWildCards+>;movl , %esi": 1,
                "movl , %esi;movzwl %dx, %edx;movzbl (%edx,%esi), %edx;andl $, %edx;movl %edx, (%ebp)": 1,
                "andl $, %edx;movl %edx, (%ebp);jne  <FsRtlDoesNameContainWildCards+>;decl %ecx;decl %ecx": 1,
                "cmpw (%esi), %cx;je  <FsRtlAreNamesEqual+>;xorb %al, %al;jmp  <FsRtlAreNamesEqual+>;pushl %ebx": 1,
                "je  <FsRtlAreNamesEqual+>;movw (%eax), %di;testw %di, %di;je  <FsRtlAreNamesEqual+>;cmpw $, %di": 1,
                "cmpb $, (%ebp);jne  <FsRtlAreNamesEqual+>;movl (%ebp), %edx;movl (%edx), %edx;leal (%edx,%eax,), %edi": 1,
                "leal (%edx,%eax,), %edi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);jmp  <FsRtlAreNamesEqual+>;movw -(%ebp), %cx": 1,
                "andl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal (%edi,%edi), %eax;leal -(%ebp), %esi": 1,
                "shrl %ecx;movw (%eax,%ecx,), %ax;addl $, -(%ebp);movw %ax, -(%ebp);jmp  <FsRtlAreNamesEqual+>": 1,
                "cmpw %ax, %di;leal (%edi,%edi), %edx;movl %edi, -(%ebp);movl %edx, -(%ebp);je  <FsRtlAreNamesEqual+>": 1,
                "movl (%ebx), %ebx;movzwl %di, %eax;shrl %eax;cmpl $, %ecx;movzwl (%ebx,%eax,), %ebx": 1,
                "movzwl -(%ebp), %ebx;movl (%ebp), %eax;movl (%eax), %eax;shrl %ebx;cmpw $, (%eax,%ebx,)": 1,
                "cmpw (%eax), %bx;jb - <FsRtlAreNamesEqual+>;jmp  <FsRtlAreNamesEqual+>;movw %dx, (%esi,%ecx,);incl %ecx": 1,
                "incl %ecx;movl %ecx, -(%ebp);jmp - <FsRtlAreNamesEqual+>;addl $, %edx;cmpw $, %bx": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %edi;cmpl %edi, %edx;jae  <FsRtlAreNamesEqual+>;movl -(%ebp), %eax": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;xorb %al, %al;jmp  <FsRtlAreNamesEqual+>": 1,
                "jge  <FsRtlIsNameInExpression+>;pushl %eax;calll - <ExRaiseStatus>;leal -(%ebp), %eax;movb %bl, (%ebp)": 1,
                "movb %bl, (%ebp);jmp  <FsRtlIsNameInExpression+>;movl %ebx, -(%ebp);movl (%ebp), %eax;movl %ebx, -(%ebp)": 1,
                "pushl (%ebp);calll - <FsRtlAreNamesEqual+>;movb %al, -(%ebp);orl $-, -(%ebp);calll  <FsRtlIsNameInExpression+>": 1,
                "cmpl %ebx, -(%ebp);je  <FsRtlIsNameInExpression+>;leal -(%ebp), %eax;pushl %eax;calll  <RtlFreeUnicodeString>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlFreeUnicodeString>;retl;int": 1,
                "movl %eax, %edx;calll - <IofCallDriver>;cmpl $, %eax;jne  <FsRtlBalanceReads+>;pushl %ebx": 1,
                "calll - <wctomb+>;andl $, -(%ebp);andl $, -(%ebp);movl $, %ebx;pushl %ebx": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;movl %esi, -(%ebp);pushl $": 2,
                "movl %eax, %esi;movl %esi, -(%ebp);pushl $;popl %ecx;xorl %eax, %eax": 2,
                "movb $, (%edx);movl (%esi), %edx;movl %eax, (%edx);movl (%esi), %eax;addl $, %eax": 1,
                "movl (%ebp), %ecx;movl %esi, (%ecx);movb $, %dl;calll - <IofCompleteRequest>;movl %esi, %eax": 1,
                "cmpl (%eax), %ecx;jne  <FsRtlCurrentBatchOplock+>;movl (%esi), %eax;testb $, %ah;je  <FsRtlCurrentBatchOplock+>": 1,
                "calll - <ExAcquireFastMutexUnsafe>;xorl %edx, %edx;incl %edx;movb %dl, -(%ebp);movl %ebx, -(%ebp)": 1,
                "je  <FsRtlCurrentBatchOplock+>;testb %al, %al;jns  <FsRtlCurrentBatchOplock+>;movl %edx, (%esi);movl %ebx, (%esi)": 1,
                "testb %al, %al;jns  <FsRtlCurrentBatchOplock+>;movl %edx, (%esi);movl %ebx, (%esi);movl (%ebp), %ecx": 1,
                "movl %edx, (%esi);movl %ebx, (%esi);movl (%ebp), %ecx;movl %ebx, (%ecx);calll - <IofCompleteRequest>": 1,
                "movl %ebx, -(%ebp);jmp  <FsRtlCurrentBatchOplock+>;movb %bl, -(%ebp);movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);calll  <FsRtlCurrentBatchOplock+>;movl -(%ebp), %eax;calll - <wctomb+>": 1,
                "movl $, %eax;cmpl %eax, %ecx;pushl $;popl %ebx;ja  <FsRtlOplockFsctrl+>": 1,
                "subl $, %ecx;je  <FsRtlOplockFsctrl+>;subl $, %ecx;jne  <FsRtlOplockFsctrl+>;pushl $": 1,
                "cmpl %edx, (%ebp);jne  <FsRtlOplockFsctrl+>;pushl %esi;calll - <IoIsOperationSynchronous>;testb %al, %al": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;pushl (%eax);calll - <FsRtlCurrentBatchOplock+>": 2,
                "pushl (%ebp);calll - <ZwWaitForSingleObject>;movl %eax, %edi;cmpl %esi, %edi;jl  <FsRtlOplockFsctrl+>": 1,
                "calll - <ExFreePoolWithTag>;movl %edi, %eax;popl %edi;popl %esi;popl %ebx": 7,
                "pushl %edi;movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);calll - <ZwCreateFile>;cmpl %esi, %eax;jl  <FsRtlOplockFsctrl+>;movl -(%ebp), %eax": 1,
                "retl $;popl %esp;addb %al, (%eax,%eax);addb %dh, (%ebx);incl %esp": 1,
                "cmpl , %esi;jne  <FsRtlDeregisterUncProvider+>;movl , %eax;cmpl %edi, %eax;je  <FsRtlDeregisterUncProvider+>": 1,
                "movl , %eax;cmpl $-, %eax;je  <FsRtlDeregisterUncProvider+>;pushl %eax;calll - <ZwClose>": 1,
                "pushl %edi;calll - <FsRtlOplockFsctrl+>;pushl %edi;pushl $;pushl %edi": 1,
                "jne  <FsRtlDeregisterUncProvider+>;jb  <FsRtlDeregisterUncProvider+>;jb  <FsRtlDeregisterUncProvider+>;addb %ch, %gs:(%esi);je  <FsRtlDeregisterUncProvider+>": 2,
                "jb  <FsRtlDeregisterUncProvider+>;addb %ch, %gs:(%esi);je  <FsRtlDeregisterUncProvider+>;incl %ebx;addb %ch, (%edi)": 2,
                "jne  <FsRtlDeregisterUncProvider+>;jo  <FsRtlDeregisterUncProvider+>;addb %al, (%eax);incl %esp;addb %ch, (%ecx)": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 8,
                "movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 8,
                "jne  <FsRtlDeregisterUncProvider+>;jo  <FsRtlDeregisterUncProvider+>;addb %al, (%eax);popl %esp;addb %dl, (%edx)": 1,
                "jne  <FsRtlDeregisterUncProvider+>;jo  <FsRtlDeregisterUncProvider+>;addb %al, (%eax);popl %esp;addb %al, (%eax,%eax)": 4,
                "imull $, (%eax), %eax;popl %esp;addb %cl, (%esi);jne  <FsRtlDeregisterUncProvider+>;insb %dx, %es:(%edi)": 1,
                "orl $-, -(%ebp);pushl %ebx;pushl %esi;pushl %edi;xorl %esi, %esi": 1,
                "pushl %esi;pushl %esi;pushl $;calll - <KeWaitForSingleObject>;cmpl %esi, ": 1,
                "calll - <ZwLoadDriver>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <FsRtlOplockFsctrl+>": 1,
                "xorl %eax, %eax;movb , %al;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "calll - <FsRtlOplockFsctrl+>;cmpl %esi, %eax;movl %eax, -(%ebp);jl  <FsRtlRegisterUncProvider+>;movl (%ebp), %ebx": 1,
                "retl $;movw (%ebx), %cx;movw %cx, ;movw (%ebx), %cx;movw %cx, ": 1,
                "cmpl %esi, -(%ebp);jl - <FsRtlRegisterUncProvider+>;movl (%ebp), %eax;movl -(%ebp), %ecx;incl ": 1,
                "pushl %ebx;xorl %ebx, %ebx;pushl %esi;movzwl (%ebp), %esi;pushl %edi": 1,
                "cmpl %esi, %edi;jb - <FsRtlDissectDbcs+>;movl (%ebp), %ebx;movl %edi, %edx;subl %ebx, %edx": 1,
                "leal (%edx,%edi), %eax;movw %si, (%ecx);movw %si, (%ecx);movl %eax, (%ecx);popl %edi": 1,
                "movzwl (%eax), %esi;xorl %edx, %edx;testl %esi, %esi;pushl %edi;jbe  <FsRtlDoesDbcsContainWildCards+>": 1,
                "je  <FsRtlDoesDbcsContainWildCards+>;movl , %ebx;movzbl %cl, %edi;cmpw $, (%ebx,%edi,);je  <FsRtlDoesDbcsContainWildCards+>": 1,
                "retl $;movb $, %al;jmp - <FsRtlDoesDbcsContainWildCards+>;int;int": 1,
                "movl (%eax), %ecx;cmpb $, (%ecx);jne  <FsRtlIsDbcsInExpression+>;movl (%eax), %ecx;movl (%eax), %eax": 1,
                "cmpw %di, %bx;jb  <FsRtlIsDbcsInExpression+>;movzwl -(%ebp), %ecx;movzwl %bx, %eax;subl %ecx, %eax": 1,
                "xorl %edi, %edi;testl %eax, %eax;jbe  <FsRtlIsDbcsInExpression+>;movl (%ebp), %ecx;movl (%ecx), %esi": 1,
                "jbe  <FsRtlIsDbcsInExpression+>;movl (%ebp), %ecx;movl (%ecx), %esi;movb (%esi,%edi), %dl;cmpb $-, %dl": 1,
                "movl %eax, -(%ebp);leal (%edi,%edi), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %ecx": 1,
                "addl %ecx, %eax;movsbw (%eax), %cx;movsbw (%eax), %ax;pushl $;shll $, %ecx": 1,
                "incl %eax;addl %eax, -(%ebp);jmp  <FsRtlIsDbcsInExpression+>;movw -(%ebp), %ax;movl -(%ebp), %ecx": 1,
                "movl (%eax), %eax;movzwl %di, %esi;movb (%esi,%eax), %al;cmpb $-, %al;movb %al, -(%ebp)": 1,
                "jne  <FsRtlIsDbcsInExpression+>;cmpw $, -(%ebp);jne  <FsRtlIsDbcsInExpression+>;movl (%ebp), %edx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;xorl %eax, %eax;movw (%edx), %ax;cmpw %ax, %si;movl %esi, -(%ebp)": 1,
                "movw (%edx), %ax;cmpw %ax, %si;movl %esi, -(%ebp);movl %eax, -(%ebp);jae  <FsRtlIsDbcsInExpression+>": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movzwl -(%ebp), %esi;movl -(%ebp), %eax;movb (%esi,%eax), %al": 1,
                "movl -(%ebp), %eax;movb (%esi,%eax), %al;cmpb $-, %al;movb %al, -(%ebp);jb  <FsRtlIsDbcsInExpression+>": 1,
                "jb - <FsRtlIsDbcsInExpression+>;incl -(%ebp);cmpl %edx, %esi;jb - <FsRtlIsDbcsInExpression+>;cmpl %edx, %esi": 1,
                "testl %ebx, %ebx;je  <FsRtlIsDbcsInExpression+>;cmpb $, -(%ebp);movl -(%ebp), %eax;movl %ecx, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;cmpw -(%ebp), %si;sete %al;jmp  <FsRtlIsDbcsInExpression+>;cmpl $, -(%ebp)": 1,
                "pushl %edi;movw (%ebp), %di;xorl %ebx, %ebx;cmpw %bx, %di;movb %bl, -(%ebp)": 1,
                "jne  <FsRtlIsFatDbcsLegal+>;movb (%esi), %al;cmpb $, %al;je  <FsRtlIsFatDbcsLegal+>;cmpb $, %al": 1,
                "jne  <FsRtlIsFatDbcsLegal+>;movb $, %al;jmp  <FsRtlIsFatDbcsLegal+>;cmpb $, (%esi);jne  <FsRtlIsFatDbcsLegal+>": 1,
                "movl (%ebp), %eax;cmpw %bx, %ax;movl %eax, (%ebp);movl %esi, (%ebp);je - <FsRtlIsFatDbcsLegal+>": 1,
                "movl %esi, (%ebp);je - <FsRtlIsFatDbcsLegal+>;movl (%ebp), %eax;cmpb $, (%eax);je  <FsRtlIsFatDbcsLegal+>": 1,
                "cmpb $, (%eax);je  <FsRtlIsFatDbcsLegal+>;leal (%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "jmp  <FsRtlIsFatDbcsLegal+>;xorl %ebx, %ebx;cmpb %bl, %al;jl  <FsRtlIsFatDbcsLegal+>;movl , %edi": 1,
                "cmpl %edx, %ecx;jb - <FsRtlIsFatDbcsLegal+>;jmp - <FsRtlIsFatDbcsLegal+>;cmpw $, %di;ja  <FsRtlIsFatDbcsLegal+>": 1,
                "cmpl %ebx, %edi;jbe  <FsRtlIsFatDbcsLegal+>;movb (%ecx,%esi), %al;cmpb $-, %al;jb  <FsRtlIsFatDbcsLegal+>": 1,
                "movl , %ebx;movzbl %al, %edx;cmpw $, (%ebx,%edx,);je  <FsRtlIsFatDbcsLegal+>;xorl %ebx, %ebx": 1,
                "je  <FsRtlIsFatDbcsLegal+>;xorl %ebx, %ebx;cmpb %bl, -(%ebp);jne  <FsRtlIsFatDbcsLegal+>;cmpl $, %ecx": 1,
                "cmpb %bl, -(%ebp);jne  <FsRtlIsFatDbcsLegal+>;cmpl $, %ecx;jae  <FsRtlIsFatDbcsLegal+>;leal -(%edi), %edx": 1,
                "jl  <FsRtlIsFatDbcsLegal+>;movl , %ebx;movzbl %al, %edx;movzbl (%edx,%ebx), %edx;movb (%ebp), %bl": 1,
                "jne - <FsRtlIsFatDbcsLegal+>;xorb %al, %al;popl %esi;popl %edi;popl %ebx": 1,
                "pushl %ecx;movw (%ebp), %dx;pushl %ebx;xorl %ebx, %ebx;cmpw %bx, %dx": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpw %bx, %dx;je  <FsRtlIsHpfsDbcsLegal+>;cmpb %bl, (%ebp)": 1,
                "cmpb %bl, (%ebp);movl (%ebp), %ecx;je  <FsRtlIsHpfsDbcsLegal+>;cmpw $, %dx;jne  <FsRtlIsHpfsDbcsLegal+>": 1,
                "cmpw $, %dx;jne  <FsRtlIsHpfsDbcsLegal+>;movb (%ecx), %al;cmpb $, %al;je  <FsRtlIsHpfsDbcsLegal+>": 1,
                "jne  <FsRtlIsHpfsDbcsLegal+>;movb (%ecx), %al;cmpb $, %al;je  <FsRtlIsHpfsDbcsLegal+>;cmpb $, %al": 1,
                "je  <FsRtlIsHpfsDbcsLegal+>;cmpb $, %al;je  <FsRtlIsHpfsDbcsLegal+>;cmpw $, %dx;jne  <FsRtlIsHpfsDbcsLegal+>": 1,
                "cmpw $, %dx;jne  <FsRtlIsHpfsDbcsLegal+>;movb (%ecx), %al;cmpb $, %al;jne  <FsRtlIsHpfsDbcsLegal+>": 1,
                "je  <FsRtlIsHpfsDbcsLegal+>;cmpb $, (%ecx);jne  <FsRtlIsHpfsDbcsLegal+>;cmpb %bl, (%ebp);je  <FsRtlIsHpfsDbcsLegal+>": 1,
                "cmpb %bl, (%ebp);je  <FsRtlIsHpfsDbcsLegal+>;cmpw $, %dx;jbe  <FsRtlIsHpfsDbcsLegal+>;incl %ecx": 1,
                "movw %dx, (%ebp);cmpb %bl, (%ebp);je  <FsRtlIsHpfsDbcsLegal+>;movl (%ebp), %eax;cmpw %bx, %ax": 1,
                "orl $, %ebx;andl %ebx, %edx;movl %edx, (%ebp);je  <FsRtlIsHpfsDbcsLegal+>;incl %esi": 1,
                "movl %esp, %ebp;pushl %esi;pushl (%ebp);calll - <IoSetFileOrigin+>;movl %eax, %esi": 1,
                "pushl (%ebp);calll - <IoSetFileOrigin+>;movl %eax, %esi;testl %esi, %esi;je  <FsRtlIsHpfsDbcsLegal+>": 1,
                "pushl $;calll - <wctomb+>;movl (%ebp), %edi;movl (%edi), %ecx;movl , %ebx": 1,
                "movl (%ebp), %edi;movl (%edi), %ecx;movl , %ebx;calll *%ebx;movb $, -(%ebp)": 1,
                "movl %esi, -(%ebp);pushl %esi;calll *(%esi);movl (%edi), %ecx;calll *%ebx": 1,
                "testl %eax, %eax;je  <FsRtlNotifyUninitializeSync+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %edx;testl %edx, %edx;je  <FsRtlNotifyUninitializeSync+>;movzwl (%eax), %eax": 1,
                "pushl %eax;leal (%ebx), %eax;pushl %eax;calll  <RtlOemToUnicodeN>;movl -(%ebp), %eax": 1,
                "leal (%ebx), %eax;pushl %eax;calll  <RtlOemToUnicodeN>;movl -(%ebp), %eax;movw $, (%eax,%ebx)": 1,
                "movw $, (%eax,%ebx);movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "jmp - <FsRtlNotifyInitializeSync+>;orl $, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);orl $-, -(%ebp)": 1,
                "pushl (%esi);pushl (%esi);calll - <PsReturnProcessPagedPoolQuota>;movl (%esi), %eax;cmpl (%ebx), %eax": 1,
                "movl (%esi), %eax;cmpl (%ebx), %eax;je  <FsRtlNotifyInitializeSync+>;testl %eax, %eax;je  <FsRtlNotifyInitializeSync+>": 1,
                "andl $, (%edi);andl $, (%edi);leal (%edi), %esi;movl (%esi), %ecx;movl (%esi), %eax": 1,
                "pushl %ebx;movl %ecx, (%esi);pushl %edi;movl %esi, (%ecx);andl $, (%eax)": 1,
                "testl %ebx, %ebx;jne  <FsRtlNotifyFilterChangeDirectory+>;pushl (%ebp);pushl (%ebp);calll - <FsRtlNotifyInitializeSync+>": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);xorl %edx, %edx;cmpl %edx, %esi;jne  <FsRtlNotifyFilterChangeDirectory+>": 1,
                "jne  <FsRtlNotifyFilterChangeDirectory+>;pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %edx": 1,
                "movw (%esi), %ax;orw $, %ax;movw %ax, (%esi);movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "jne  <FsRtlNotifyFilterChangeDirectory+>;movl (%edx), %eax;movl %eax, (%esi);movl (%ebx), %eax;movl (%eax), %eax": 1,
                "movl (%edx), %eax;movl %eax, (%esi);movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esi)": 1,
                "movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esi);leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl $, (%esi);xorl %edx, %edx;movl %esi, (%ebx);movl (%ebx), %eax;movb (%eax), %cl": 1,
                "orb $, %cl;movb %cl, (%eax);leal (%ebx), %eax;movl %eax, -(%ebp);leal (%esi), %ecx": 1,
                "orl $-, -(%ebp);calll  <FsRtlNotifyFilterChangeDirectory+>;calll - <wctomb+>;retl $;movw (%esi), %ax": 1,
                "calll - <IofCompleteRequest>;jmp - <FsRtlNotifyFilterChangeDirectory+>;cmpl %edx, (%esi);je - <FsRtlNotifyFilterChangeDirectory+>;testb $, %al": 1,
                "cmpl %edi, %esi;je  <FsRtlNotifyFilterChangeDirectory+>;cmpl %edi, (%esi);je  <FsRtlNotifyFilterChangeDirectory+>;pushl (%ebp)": 1,
                "movl %ebx, -(%ebp);movl %fs:, %eax;movl %eax, %edi;movl (%ebp), %esi;cmpl (%esi), %edi": 1,
                "cmpw %dx, %ax;je  <FsRtlNotifyFilterReportChange+>;movzbl %cl, %ecx;subl %ecx, %eax;movw %ax, -(%ebp)": 1,
                "testl %eax, %eax;je  <FsRtlNotifyFilterReportChange+>;pushl (%ebx);pushl (%ebp);pushl (%ebx)": 1,
                "testl %eax, %eax;je  <FsRtlNotifyFilterReportChange+>;cmpl $, (%ebp);je  <FsRtlNotifyFilterReportChange+>;pushl (%ebp)": 1,
                "jne  <FsRtlNotifyFilterReportChange+>;leal (%ebx), %esi;movl (%esi), %ecx;cmpl %esi, %ecx;je  <FsRtlNotifyFilterReportChange+>": 1,
                "cmpb $, -(%ebp);jne  <FsRtlNotifyFilterReportChange+>;cmpb $, -(%ebp);jne  <FsRtlNotifyFilterReportChange+>;andl $, %edx": 1,
                "andl $, %edx;jne  <FsRtlNotifyFilterReportChange+>;movl (%ebp), %eax;movl (%eax), %ecx;movl (%ebp), %esi": 1,
                "movzwl (%edx), %edx;movzbl (%ebx), %esi;addl %ecx, %edx;addl %edx, %esi;movl %esi, -(%ebp)": 1,
                "jmp  <FsRtlNotifyFilterReportChange+>;movl %edi, -(%ebp);jmp - <FsRtlNotifyFilterReportChange+>;movl -(%ebp), %esi;testl %esi, %esi": 1,
                "movl (%ebp), %eax;subl %ecx, %eax;movw %ax, -(%ebp);movw %ax, -(%ebp);movb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);cmpb $, (%ebx);jne  <FsRtlNotifyFilterReportChange+>;movl (%ebx), %edx;movzwl (%edx), %edi": 1,
                "cmpb $, ;je  <FsRtlNotifyFilterReportChange+>;leal -(%ebp), %eax;pushl %eax;calll  <RtlxOemStringToUnicodeSize>": 2,
                "movl %esi, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;je  <FsRtlNotifyFilterReportChange+>;cmpb $, (%ebx)": 1,
                "andl $-, %edi;movl %edi, -(%ebp);cmpl -(%ebp), %esi;ja  <FsRtlNotifyFilterReportChange+>;leal (%edi,%esi), %eax": 1,
                "je  <FsRtlNotifyFilterReportChange+>;movl %edx, %eax;jmp  <FsRtlNotifyFilterReportChange+>;movl (%ecx), %ecx;testl %ecx, %ecx": 1,
                "cmpl %eax, (%eax);je  <FsRtlNotifyFilterReportChange+>;pushl $;pushl %ebx;calll - <FsRtlNotifyInitializeSync+>": 1,
                "movl %esi, -(%ebp);cmpl %ebx, %esi;je  <FsRtlNotifyCleanup+>;movw (%esi), %ax;orw $, %ax": 1,
                "movl %eax, (%ecx);leal (%esi), %edx;movl %edx, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "je  <FsRtlNotifyCleanup+>;movl (%esi), %eax;movl %eax, -(%ebp);pushl %ebx;pushl %esi": 1,
                "orl $-, -(%ebp);calll  <FsRtlNotifyCleanup+>;calll - <wctomb+>;retl $;xorl %ebx, %ebx": 1,
                "pushl (%ebp);calll - <FsRtlNotifyFilterChangeDirectory>;popl %ebp;retl $;int": 2,
                "movl , %eax;pushl %ebx;pushl %esi;pushl %edi;leal -(%ebp), %ecx": 1,
                "pushl -(%ebp);movsl (%esi), %es:(%edi);calll - <IoReportTargetDeviceChangeAsynchronous>;xorl %esi, %esi;jmp - <FsRtlNotifyVolumeEvent+>": 1,
                "movl $, %esi;jmp  <FsRtlNotifyVolumeEvent+>;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "movl %eax, (%ebp);cmpl $, (%ebp);movl $, %eax;je  <FsRtlNotifyVolumeEvent+>;cmpl %eax, (%ebp)": 1,
                "xorl %edx, %edx;movl %ecx, %eax;divl %esi;movl (%ebp), %ecx;movl %eax, (%ebp)": 1,
                "shrl $, %eax;xorb (%ebp), %al;movb %bl, (%ecx);andb $, %al;movb %dl, (%ecx)": 1,
                "pushl %ebx;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 6,
                "cmpl $, %esi;jne  <FsRtlNotifyVolumeEvent+>;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %ebx, %esi;jge  <FsRtlNotifyVolumeEvent+>;cmpl %ebx, (%ebp)": 1,
                "je  <FsRtlNotifyVolumeEvent+>;movl (%ebp), %eax;movl $, (%eax);jmp  <FsRtlNotifyVolumeEvent+>;pushl %edi": 1,
                "movl (%ebp), %eax;movl $, (%eax);jmp  <FsRtlNotifyVolumeEvent+>;movb -(%ebp), %al;movb %al, %dl": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);jmp  <FsRtlNotifyVolumeEvent+>;testb %dl, %dl;je  <FsRtlNotifyVolumeEvent+>": 1,
                "addl $, %eax;movl -(%ebp), %edx;cmpl (%eax), %edx;jne  <FsRtlNotifyVolumeEvent+>;movl -(%ebp), %edx": 1,
                "retl $;xorl %eax, %eax;cmpb %al, -(%ebp);sete %al;movl (%ebp), %ecx": 1,
                "addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx);addb %ah, (%di);jb  <FsRtlNotifyVolumeEvent+>": 3,
                "calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 33,
                "pushl -(%ebp);movb $, -(%ebp);pushl $;movb $, -(%ebp);movl %esi, -(%ebp)": 2,
                "calll - <IofCallDriver>;movl %eax, %edi;cmpl $, %edi;jne  <FsRtlNotifyVolumeEvent+>;pushl %esi": 1,
                "calll - <IoBuildDeviceIoControlRequest>;cmpl %ebx, %eax;je  <FsRtlNotifyVolumeEvent+>;movl -(%ebp), %ecx;movl %eax, %edx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "pushl $;leal -(%ebp), %eax;andl $, %ecx;pushl %eax;rep  movsb (%esi), %es:(%edi)": 2,
                "leal -(%ebp), %eax;pushl %eax;calll  <IoGetDeviceObjectPointer>;xorl %esi, %esi;cmpl %esi, %eax": 1,
                "pushl $;movl %esi, -(%ebp);calll - <IoBuildDeviceIoControlRequest>;cmpl %esi, %eax;jne  <FsRtlNotifyVolumeEvent+>": 1,
                "movl %esi, -(%ebp);calll - <IoBuildDeviceIoControlRequest>;cmpl %esi, %eax;jne  <FsRtlNotifyVolumeEvent+>;movl $, %edi": 1,
                "calll - <ObfDereferenceObject>;pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;movl %edi, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "jge  <FsRtlNotifyVolumeEvent+>;xorb %al, %al;jmp  <FsRtlNotifyVolumeEvent+>;movl -(%ebp), %eax;pushl %ebx": 1,
                "jb  <FsRtlNotifyVolumeEvent+>;arpl %ax, (%eax);decl %esi;addb %ah, (%ecx);insl %dx, %es:(%edi)": 1,
                "jne  <FsRtlNotifyVolumeEvent+>;insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %ch, (%eax);addb %dh, (%eax)": 1,
                "addb %dh, (%eax,%eax);addb %ch, (%eax);addb %dh, (%eax);addb %ch, (%ecx);addb %ah, (%eax,%eax)": 1,
                "imull $, (%eax), %eax;addb %ah, ;addb %al, (%eax);addb %cl, %ah;int": 1,
                "pushl (%eax);calll - <IoGetAttachedDeviceReference>;movl -(%ebp), %ecx;movl %eax, -(%ebp);calll - <ObfDereferenceObject>": 1,
                "jbe  <FsRtlNotifyVolumeEvent+>;xorl %eax, %eax;cmpl %ecx, (%esi,%eax,);je  <FsRtlNotifyVolumeEvent+>;incl %eax": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movb $, -(%ebp);movl %edx, -(%ebp);jae  <IoSetPartitionInformation+>": 1,
                "leal (%eax), %esi;xorl %ebx, %ebx;movl %esi, %eax;incl %ebx;movb (%eax), %cl": 1,
                "movb (%eax), %cl;testb %cl, %cl;je  <IoSetPartitionInformation+>;cmpb $, %cl;je  <IoSetPartitionInformation+>": 1,
                "incl %ebx;addl $, %eax;cmpl $, %ebx;jbe - <IoSetPartitionInformation+>;jmp  <IoSetPartitionInformation+>": 1,
                "calll - <KeWaitForSingleObject>;movl -(%ebp), %edi;cmpl $, %ebx;jbe  <IoSetPartitionInformation+>;movl %esi, %ecx": 1,
                "ja  <IoSetPartitionInformation+>;movl (%ebp), %eax;cmpl %eax, -(%ebp);movb $, -(%ebp);jae  <IoSetPartitionInformation+>": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %esi, %eax;shrl %cl, %eax;cmpl $, %eax;je  <IoWritePartitionTable+>;incb -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %edi;pushl -(%ebp);movb $, -(%ebp);pushl $;movb $, -(%ebp)": 1,
                "je  <IoWritePartitionTable+>;movl (%eax), %ecx;orb $, -(%ecx);subl $, %ecx;movl -(%ebp), %ecx": 2,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);cmpb $, -(%ebp);jne  <IoWritePartitionTable+>;movw $, (%edi)": 1,
                "movl %ebx, -(%ebp);cmpb $, -(%ebp);jne  <IoWritePartitionTable+>;movw $, (%edi);movl -(%ebp), %eax": 1,
                "cmpb $, (%ebx);movb $, -(%ebp);sete %cl;decb %cl;andl $, %ecx": 1,
                "pushl -(%ebp);pushl %ebx;pushl %edi;calll - <FsRtlNotifyVolumeEvent+>;movl -(%ebp), %edi": 1,
                "pushl %ebx;pushl %edi;calll - <FsRtlNotifyVolumeEvent+>;movl -(%ebp), %edi;movl -(%ebp), %ebx": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jmp  <IoWritePartitionTable+>;movl $, -(%ebp);pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "xorl %edi, %edi;addl %esi, %ecx;adcl %edi, %eax;cmpl (%ebp), %eax;jb  <IoWritePartitionTable+>": 1,
                "pushl %esi;shll $, %edx;pushl %edi;movzbl (%eax), %edi;addl %edi, %edx": 1,
                "cmpl (%ebp), %edx;jbe  <IoWritePartitionTable+>;xorb %al, %al;jmp  <IoWritePartitionTable+>;cmpl (%ebp), %esi": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;pushl %esi;pushl $": 5,
                "movl (%ebp), %eax;pushl %ebx;pushl (%eax);pushl -(%ebp);pushl -(%ebp)": 1,
                "addb %al, (%esi);insb %dx, %es:(%edi);addb %ch, (%edi);jo  <IoWritePartitionTable+>;jo  <IoWritePartitionTable+>": 1,
                "insb %dx, %es:(%edi);addb %ch, (%edi);jo  <IoWritePartitionTable+>;jo  <IoWritePartitionTable+>;jns  <IoWritePartitionTable+>": 1,
                "jo  <IoWritePartitionTable+>;jns  <IoWritePartitionTable+>;addb %al, (%eax);addb %al, (%eax);popl %esp": 1,
                "calll - <FsRtlNotifyVolumeEvent+>;testl %eax, %eax;jge  <IoWritePartitionTable+>;testl %edi, %edi;je  <IoWritePartitionTable+>": 1,
                "pushl %edi;pushl %esi;leal -(%ebp), %eax;pushl %eax;calll  <RtlEqualUnicodeString>": 2,
                "pushl %eax;calll  <IoCreateSymbolicLink>;testl %eax, %eax;jge  <IoWritePartitionTable+>;incb %bl": 1,
                "movb $, -(%ebp);calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "cmpl %eax, -(%ebp);movl %edx, -(%ebp);movb $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);jb  <IoReadPartitionTable+>;movl -(%ebp), %eax;pushl %edi": 1,
                "movzbl (%ebx), %ecx;movzbl (%ebx), %edx;shll $, %ecx;addl %edx, %ecx;movzbl (%ebx), %edx": 3,
                "addl %edx, %ecx;movzbl (%ebx), %edx;shll $, %ecx;addl %edx, %ecx;movzbl (%ebx), %edx": 2,
                "movl -(%ebp), %ecx;movl (%ebp), %eax;movl (%eax), %esi;movl -(%ebp), %edi;movl %ecx, %edx": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl -(%ebp), %ecx;leal (%ecx,%eax), %esi;movb (%ebx), %al": 1,
                "pushl %edi;pushl -(%ebp);movl %edx, (%esi);pushl %ecx;pushl %eax": 1,
                "addl %ecx, %eax;movzbl (%ebx), %ecx;pushl %edi;pushl -(%ebp);shll $, %eax": 1,
                "decl -(%ebp);movl $, -(%ebp);cmpl $, -(%ebp);movl -(%ebp), %esi;jl  <IoReadPartitionTable+>": 1,
                "cmpb $, -(%ebp);je  <IoReadPartitionTable+>;xorl %eax, %eax;xorl %edi, %edi;leal (%esi), %ecx": 1,
                "cmpb $, %dl;je  <IoReadPartitionTable+>;incb %bl;addl $, %ecx;cmpb $, %bl": 1,
                "incb %bl;addl $, %ecx;cmpb $, %bl;jle - <IoReadPartitionTable+>;jmp  <IoReadPartitionTable+>": 1,
                "shll $, %edx;addl %ecx, %edx;andl $, -(%ebp);movl %edx, -(%ebp);orl %edi, %eax": 1,
                "jne  <IoReadPartitionTable+>;movl (%edi), %eax;movl %ebx, (%eax);pushl %ebx;pushl %esi": 1,
                "cmpl %ebx, -(%ebp);jge  <IoReadPartitionTable+>;pushl %ebx;pushl (%edi);calll - <ExFreePoolWithTag>": 1,
                "addb %dh, (%edx);addb %ah, %fs:(%eax,%eax);addb %dh, (%ebx);imull $, (%eax), %eax;addb %ah, (%eax,%eax)": 8,
                "addb %dh, (%edx);je  <IoReadPartitionTable+>;imull $, (%eax), %eax;outsl (%esi), %dx;addb %ch, (%esi)": 8,
                "imull $, (%eax), %eax;outsl (%esi), %dx;addb %ch, (%esi);andl $, %eax;addb %al, (%eax)": 5,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);movb %bl, -(%ebp);calll  <IoGetConfigurationInformation>;movl (%eax), %ecx": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>;pushl %esi;pushl $": 1,
                "calll - <ExAllocatePoolWithTag>;pushl %esi;pushl $;pushl %ebx;movl %eax, -(%ebp)": 1,
                "cmpb $, (%eax);jne  <IoAssignDriveLetters+>;movb %bl, (%eax);movl %eax, %esi;movl -(%ebp), %eax": 1,
                "subl %eax, %ecx;movb $, (%edi);movb $, (%edi);leal (%ecx), %edx;movb (%eax), %cl": 1,
                "jne - <IoAssignDriveLetters+>;subl %edx, %eax;movb %cl, -(%eax,%edi);pushl %edi;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 30,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll  <IoCreateSymbolicLink>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll  <IoCreateSymbolicLink>;leal -(%ebp), %eax;pushl %eax;calll  <RtlFreeUnicodeString>": 1,
                "pushl %eax;calll  <RtlFreeUnicodeString>;cmpl %ebx, -(%ebp);jge  <IoAssignDriveLetters+>;cmpl $, -(%ebp)": 1,
                "je  <IoAssignDriveLetters+>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <RtlFreeUnicodeString>": 1,
                "calll - <FsRtlNotifyVolumeEvent+>;testl %eax, %eax;jl  <IoAssignDriveLetters+>;movb $, (%edi);leal -(%ebp), %eax": 1,
                "calll  <RtlFreeUnicodeString>;movl -(%ebp), %esi;subl -(%ebp), %esi;cmpl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %esi;calll - <FsRtlNotifyVolumeEvent+>;cmpl %ebx, %esi;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl %eax;calll - <IoWritePartitionTable+>;cmpl $, -(%ebp);je  <IoAssignDriveLetters+>;incl -(%ebp)": 1,
                "pushl %esi;pushl %ebx;pushl %eax;calll - <swprintf>;addl $, %esp": 1,
                "jge  <IoAssignDriveLetters+>;andl $, -(%ebp);xorl %ebx, %ebx;incl %ebx;jmp  <IoAssignDriveLetters+>": 1,
                "calll - <FsRtlNotifyVolumeEvent+>;testl %eax, %eax;jge - <IoAssignDriveLetters+>;cmpl $, -(%ebp);je  <IoAssignDriveLetters+>": 1,
                "testl %eax, %eax;jge - <IoAssignDriveLetters+>;cmpl $, -(%ebp);je  <IoAssignDriveLetters+>;pushl $": 1,
                "je  <IoAssignDriveLetters+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;incl -(%ebp)": 2,
                "cmpl -(%ebp), %eax;jb - <IoAssignDriveLetters+>;andl $, -(%ebp);cmpl $, -(%ebp);jbe  <IoAssignDriveLetters+>": 1,
                "movl -(%ebp), %ecx;movl (%eax,%ecx,), %ebx;jmp  <IoAssignDriveLetters+>;movl -(%ebp), %ebx;pushl %ebx": 1,
                "jmp  <IoAssignDriveLetters+>;movl -(%ebp), %ebx;pushl %ebx;leal -(%ebp), %eax;pushl $": 1,
                "xorl %esi, %esi;incl %esi;jmp  <IoAssignDriveLetters+>;cmpl $, -(%ebp);je  <IoAssignDriveLetters+>": 1,
                "cmpl $, -(%ebp);je  <IoAssignDriveLetters+>;cmpl $, -(%ebp);jne  <IoAssignDriveLetters+>;cmpl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %eax;calll - <swprintf>;addl $, %esp": 1,
                "pushl %eax;calll - <FsRtlNotifyVolumeEvent+>;testl %eax, %eax;jge - <IoAssignDriveLetters+>;xorl %esi, %esi": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb - <IoAssignDriveLetters+>;cmpl $, -(%ebp);je  <IoAssignDriveLetters+>": 1,
                "jb - <IoAssignDriveLetters+>;xorl %esi, %esi;cmpl %ebx, %edi;jbe  <IoAssignDriveLetters+>;pushl %esi": 1,
                "pushl %eax;calll - <RtlInitUnicodeString>;pushl $;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "cmpb $, ;jne  <IoAssignDriveLetters+>;pushl $;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlAnsiStringToUnicodeString>;pushl $;pushl %ebx": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <IoWritePartitionTable+>;testb %al, %al": 1,
                "movl (%ecx), %ecx;movl (%ebp), %ebx;movl %ecx, (%eax);movl -(%ebp), %ecx;addl $, %eax": 1,
                "popl %ebx;pushl %edi;pushl %ecx;calll - <ExFreePoolWithTag>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);movl (%ebp), %eax;popl %esi;popl %edi": 1,
                "cmpl %esi, %eax;movl %eax, -(%ebp);jne  <KeFlushQueuedDpcs+>;movl $, (%ebp);jmp  <KeFlushQueuedDpcs+>": 1,
                "movl %eax, %ebx;cmpl %esi, %ebx;je  <KeFlushQueuedDpcs+>;pushl %edi;pushl %ebx": 1,
                "calll - <ExFreePoolWithTag>;popl %edi;movl (%ebp), %eax;popl %esi;popl %ebx": 2,
                "pushl %esi;pushl $;movl %eax, (%ebx);movl %edx, (%ebx);calll - <ExAllocatePoolWithTag>": 1,
                "calll - <KeFlushQueuedDpcs+>;testl %eax, %eax;jge - <KeFlushQueuedDpcs+>;movl %eax, %esi;jmp  <KeFlushQueuedDpcs+>": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);xorl %eax, %eax;jmp  <KeFlushQueuedDpcs+>;movl $, %esi": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;cmpl %ebx, (%esi);je  <KeFlushQueuedDpcs+>": 1,
                "jmp  <KeFlushQueuedDpcs+>;movl (%esi), %eax;pushl %edi;shll $, %eax;pushl $": 1,
                "pushl %eax;movl (%ebp), %eax;pushl (%eax);movl (%eax), %edx;pushl (%eax)": 1,
                "divl %ecx;imull %ecx, %eax;shrl $, %eax;movl %eax, (%esi);popl %esi": 1,
                "pushl %edi;movl (%ebx), %edi;xorl %eax, %eax;addl %esi, %ecx;pushl %eax": 1,
                "addl $-, %ecx;adcl $-, %edx;pushl %edx;pushl %ecx;calll - <_aulldiv>": 1,
                "xorl %eax, %eax;pushl %eax;pushl (%ebp);movl %edx, -(%ebp);pushl %edi": 1,
                "movl -(%ebp), %eax;movl %eax, (%ecx);movl -(%ebp), %eax;movl %edx, (%ecx);movl %eax, (%ecx)": 1,
                "movb $, -(%ebp);pushl $;movl %ebx, -(%ebp);calll - <IoBuildSynchronousFsdRequest>;cmpl %ebx, %eax": 2,
                "pushl $;movl %ebx, -(%ebp);calll - <IoBuildSynchronousFsdRequest>;cmpl %ebx, %eax;jne  <KeFlushQueuedDpcs+>": 2,
                "subl $, %ecx;movl (%ebp), %ecx;movl %eax, %edx;calll - <IofCallDriver>;cmpl $, %eax": 2,
                "pushl %esi;movl (%ebp), %esi;pushl (%esi);xorl %ebx, %ebx;pushl %ebx": 1,
                "jne  <KeFlushQueuedDpcs+>;cmpb %bl, (%eax);jne  <KeFlushQueuedDpcs+>;cmpb %bl, (%eax);jne  <KeFlushQueuedDpcs+>": 2,
                "adcl $-, %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl (%ebp), %eax;movl (%ebx), %ecx": 1,
                "cmpl %ecx, %esi;je  <KeFlushQueuedDpcs+>;cmpb %dl, (%ebp);je  <KeFlushQueuedDpcs+>;addl -(%ebp), %eax": 1,
                "pushl %edx;pushl %eax;pushl %ecx;pushl (%ebx);calll - <KeFlushQueuedDpcs+>": 1,
                "movl %eax, (%ebx);movl %ecx, (%ebx);movl %edx, (%ebx);cmpl %edx, (%ebp);movl (%ebp), %eax": 1,
                "pushl %ebx;pushl %edx;calll  <RtlTimeToElapsedTimeFields+>;pushl %ebx;pushl (%ebx)": 1,
                "pushl (%eax);pushl (%eax);calll - <KeFlushQueuedDpcs+>;movl -(%ebp), %ecx;popl %edi": 1,
                "leal (%edx), %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %eax;movw $, (%edx);movl (%eax), %eax": 1,
                "pushl %ebx;movl %eax, (%edx);pushl (%esi);pushl (%esi);calll - <KeFlushQueuedDpcs+>": 1,
                "pushl %ebx;pushl $;pushl (%esi);pushl (%esi);calll - <KeFlushQueuedDpcs+>": 1,
                "pushl (%esi);movl (%esi), %eax;movl (%esi), %ecx;addl $-, %eax;adcl $-, %ecx": 1,
                "pushl %eax;pushl (%esi);pushl (%esi);calll - <KeFlushQueuedDpcs+>;movl %eax, %edi": 1,
                "cmpl %edx, -(%esi);jne  <KeFlushQueuedDpcs+>;cmpw %dx, (%esi);jne  <KeFlushQueuedDpcs+>;cmpw %dx, (%esi)": 1,
                "je  <KeFlushQueuedDpcs+>;pushl %edi;leal -(%esi), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 2,
                "pushl %eax;pushl %edx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <KeFlushQueuedDpcs+>;movl (%esi), %eax;cmpl -(%ebp), %eax;jne - <KeFlushQueuedDpcs+>;movl (%esi), %eax": 1,
                "movl %eax, (%ebp);pushl (%edi);pushl %ebx;pushl (%ebp);calll  <RtlTimeToElapsedTimeFields+>": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;leal (%ebp), %eax": 1,
                "movl %eax, -(%ebp);jl  <KeFlushQueuedDpcs+>;movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "jne  <KeFlushQueuedDpcs+>;cmpw %ax, (%esi);jne  <KeFlushQueuedDpcs+>;cmpw %ax, (%esi);jne  <KeFlushQueuedDpcs+>": 1,
                "cmpb %al, (%esi);jne  <KeFlushQueuedDpcs+>;cmpb %al, (%esi);jne  <KeFlushQueuedDpcs+>;cmpb %al, (%esi)": 6,
                "pushl (%edi);calll - <_allmul>;movl %eax, (%ebx);movl -(%ebp), %eax;movl %edx, (%ebx)": 1,
                "leal (%eax), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 7,
                "je  <KeFlushQueuedDpcs+>;pushl $;pushl %edi;calll - <ExFreePoolWithTag>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;andl $, (%eax);jmp  <KeFlushQueuedDpcs+>;movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "pushl %eax;pushl $;pushl %ebx;calll - <KeFlushQueuedDpcs+>;testl %eax, %eax": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);je  <KeFlushQueuedDpcs+>;andl $, -(%ebp);movl (%ebx), %esi": 1,
                "subl %ebx, %eax;je  <IoWritePartitionTableEx+>;decl %eax;je  <IoWritePartitionTableEx+>;movl $, %edi": 1,
                "calll - <KeFlushQueuedDpcs+>;testl %eax, %eax;jge  <IoWritePartitionTableEx+>;leal (%ebp), %eax;pushl %eax": 1,
                "leal (%esi), %eax;pushl %eax;pushl %ecx;pushl $;pushl (%ebx)": 1,
                "calll - <KeFlushQueuedDpcs+>;movl %eax, %edi;testl %edi, %edi;jl  <IoWritePartitionTableEx+>;movl (%ebp), %eax": 1,
                "movl -(%ebp), %esi;addl $, %eax;pushl %eax;movl (%ebp), %eax;pushl (%eax)": 1,
                "addl $, %eax;pushl %eax;movl (%ebp), %eax;pushl (%eax);pushl $": 1,
                "pushl %eax;movl (%ebp), %eax;pushl (%eax);pushl $;pushl (%ebx)": 1,
                "pushl %edi;calll - <KeFlushQueuedDpcs+>;movl %eax, %esi;testl %edi, %edi;je  <IoReadPartitionTableEx+>": 1,
                "testl %eax, %eax;jl  <IoVerifyPartitionTable+>;pushl %esi;pushl %edi;movl (%ebp), %edi": 1,
                "jmp  <IoVerifyPartitionTable+>;pushl (%ebp);pushl %edi;calll - <KeFlushQueuedDpcs+>;movl %eax, %esi": 1,
                "pushl (%eax);decl %esi;calll - <IoReadPartitionTableEx>;testl %eax, %eax;jl  <IoVerifyPartitionTable+>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %edx": 1,
                "adcl $-, %eax;pushl %eax;pushl %ebx;pushl %edx;pushl %ecx": 1,
                "movl %edx, -(%ebp);movl %eax, -(%ebp);movsl (%esi), %es:(%edi);calll - <KeFlushQueuedDpcs+>;movl %eax, %esi": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <IoCreateDisk+>;pushl $;popl %ecx": 1,
                "je  <IoCreateDisk+>;movl $, %eax;jmp  <IoCreateDisk+>;pushl (%ebp);calll - <KeFlushQueuedDpcs+>": 1,
                "pushl %eax;pushl (%ebp);calll - <KeFlushQueuedDpcs+>;testl %eax, %eax;jl  <IoSetPartitionInformationEx+>": 1,
                "testl %esi, %esi;jl  <IoSetPartitionInformationEx+>;movl -(%ebp), %ecx;movl (%ebp), %eax;cmpl (%eax), %ecx": 1,
                "je  <IoSetPartitionInformationEx+>;movl $, %esi;jmp  <IoSetPartitionInformationEx+>;subl $, %ecx;je  <IoSetPartitionInformationEx+>": 1,
                "cmpl %eax, %edi;movl %eax, (%ebp);jae  <IoSetPartitionInformationEx+>;movl (%edi), %esi;jmp  <IoSetPartitionInformationEx+>": 1,
                "pushl %eax;pushl %esi;pushl %esi;pushl $;pushl (%ebp)": 2,
                "jmp  <IoSetPartitionInformationEx+>;orl $-, (%ebx);movl %esi, (%ebx);movl %esi, (%ebx);xorl %eax, %eax": 1,
                "movl (%ecx), %eax;leal (%ebp), %ecx;pushl %ecx;leal (%ebp), %ecx;pushl %ecx": 1,
                "pushl %eax;pushl $;pushl (%ebp);calll *;movl %eax, (%ebx)": 1,
                "calll *;movl %eax, (%ebx);movzbl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 1,
                "movzbl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebp)": 1,
                "pushl %ecx;pushl %ecx;pushl %ebx;pushl %esi;pushl $": 2,
                "pushl %esi;pushl $;xorl %esi, %esi;pushl $;incl %esi": 2,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpl $-, %esi;je  <IoSetPartitionInformationEx+>": 1,
                "movl %esp, %ebp;movl , %eax;pushl %esi;movl (%ebp), %esi;addl $, %eax": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl %edi, %eax;jmp  <IoCheckEaBufferValidity+>": 1,
                "jge - <IoCheckEaBufferValidity+>;jmp  <IoCheckEaBufferValidity+>;subl %esi, %edx;jns  <IoCheckEaBufferValidity+>;movl (%ebp), %ecx": 1,
                "cmpl $, %eax;ja  <IoCheckFunctionAccess+>;jmpl *(,%eax,);movl (%ebp), %eax;notl %eax": 1,
                "calll  <SeSinglePrivilegeCheck+>;movl (%ebp), %eax;notl %eax;testl %eax, (%ebp);je  <IoCheckFunctionAccess+>": 1,
                "popl %ebp;retl $;cmpb %bl, (%ecx);decl %ecx;addb %dh, (%ebx)": 1,
                "movl (%ebp), %edi;je  <IoCheckQuotaBufferValidity+>;movl (%ebp), %eax;andl $, (%eax);movl $, %eax": 1,
                "cmpl %ecx, %edi;jb  <IoCheckQuotaBufferValidity+>;cmpl %eax, (%esi);jne  <IoCheckQuotaBufferValidity+>;movl (%esi), %eax": 1,
                "jb  <IoCheckQuotaBufferValidity+>;cmpl %eax, (%esi);jne  <IoCheckQuotaBufferValidity+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "je  <IoCheckQuotaBufferValidity+>;cmpl %eax, %ecx;ja  <IoCheckQuotaBufferValidity+>;testb $, %al;jne  <IoCheckQuotaBufferValidity+>": 1,
                "movl (%ebp), %ecx;testb $, %al;pushl %ebx;setne %bl;testb $, %al": 1,
                "testb $, %al;pushl %ebx;setne %bl;testb $, %al;setne %dl": 1,
                "je  <IoCheckShareAccess+>;movl (%ebp), %eax;movb %al, %dl;andb $, %dl;movb %dl, (%ebp)": 1,
                "movw $, (%eax);movl (%ebp), %eax;addl $, %ebx;movw %bx, (%eax);movl (%ebp), %eax": 1,
                "calll - <KeInitializeDeviceQueue>;jmp  <IoCreateController+>;movl %esi, (%ebp);movl (%ebp), %eax;popl %edi": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ZwCreateEvent>;testl %eax, %eax;jge  <IoCreateNotificationEvent+>": 1,
                "pushl %esi;pushl %edi;je  <IoCreateStreamFileObjectLite+>;movl (%eax), %edi;movl %edi, (%ebp)": 1,
                "leal (%edi), %edx;popl %ecx;calll - <RtlVolumeDeviceToDosName+>;leal (%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 2,
                "calll  <ObCreateObject>;cmpl %ebx, %eax;movl (%ebp), %esi;movl %eax, -(%ebp);jge  <IoCreateStreamFileObjectLite+>": 1,
                "xorl %eax, %eax;popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %edi": 1,
                "movl -(%esi), %ecx;calll  <NtWaitForSingleObject+>;orb $, (%esi);movl %ebx, -(%esi);movl (%edi), %edi": 1,
                "calll - <RtlVolumeDeviceToDosName+>;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "pushl (%ebp);calll - <ZwClose>;movl %esi, %eax;popl %esi;leave": 3,
                "andl $, -(%ebp);pushl %edi;pushl (%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <ZwClose>;movl %edi, %eax;popl %edi;leave;retl $": 2,
                "popl %edi;leave;retl $;int;popl %esp": 3,
                "addb %al, (%eax);addb %al, (%eax);addb %bl, (%eax,%eax);addb %ah, (%ebp);jae  <IoCreateUnprotectedSymbolicLink+>": 1,
                "jae  <IoCreateUnprotectedSymbolicLink+>;popl %esp;addb %al, (%eax);addb %cl, %ah;int": 1,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);jb  <IoCreateUnprotectedSymbolicLink+>;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll  <RtlCompareUnicodeString>": 2,
                "movl %ebx, -(%ebp);calll - <ZwOpenDirectoryObject>;movl %eax, %edi;cmpl %ebx, %edi;jl  <IoCreateUnprotectedSymbolicLink+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <IoCreateUnprotectedSymbolicLink+>": 1,
                "movl %ebx, -(%ebp);calll - <ZwOpenSymbolicLinkObject>;testl %eax, %eax;jl  <IoCreateUnprotectedSymbolicLink+>;pushl -(%ebp)": 1,
                "calll - <ZwOpenSymbolicLinkObject>;testl %eax, %eax;jl  <IoCreateUnprotectedSymbolicLink+>;pushl -(%ebp);calll - <ZwMakeTemporaryObject>": 1,
                "pushl %ebx;pushl $;pushl %esi;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl %edi, %eax;popl %edi": 1,
                "pushl %ebx;calll - <IoCreateUnprotectedSymbolicLink+>;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "movl (%ebp), %edi;pushl %edi;calll - <KeDisconnectInterrupt>;pushl $;leal (%edi), %esi": 1,
                "pushl $;leal (%edi), %esi;popl %ebx;movl (%esi), %eax;testl %eax, %eax": 1,
                "movl , %eax;movl (%ebp), %edx;pushl %ebx;pushl %esi;movl (%ebp), %esi": 2,
                "popl %esi;movb %bl, %al;popl %ebx;calll - <KeRaiseUserException+>;leave": 1,
                "testl %edx, %edx;jne  <IoInitializeTimer+>;pushl $;pushl $;pushl %edx": 1,
                "pushl %edi;pushl $;popl %ecx;xorl %eax, %eax;movl %edx, %edi": 3,
                "pushl $;popl %ecx;xorl %eax, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 5,
                "movl %eax, (%edx);movl (%ebp), %eax;movl %eax, (%edx);pushl $;addl $, %edx": 1,
                "addb %bh, (%edi);addb %bl, (%eax,%eax);addb %bh, (%edx);addb %al, (%eax);addb %al, (%eax)": 1,
                "cmpw $, (%ebx);jne - <IoIsValidNameGraftingBuffer+>;movw (%ebx), %dx;movzwl (%ebx), %esi;movzwl %dx, %eax": 1,
                "jbe  <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne  <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne  <IoIsValidNameGraftingBuffer+>": 1,
                "jne  <IoIsValidNameGraftingBuffer+>;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 20,
                "calll - <ZwClose>;cmpl %edi, %esi;jl  <IoIsValidNameGraftingBuffer+>;movl -(%ebp), %esi;cmpw $, (%esi)": 1,
                "pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;popl %ecx": 1,
                "movw (%ebx), %ax;cmpw $, %ax;jb - <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne  <IoIsValidNameGraftingBuffer+>": 1,
                "jb - <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne  <IoIsValidNameGraftingBuffer+>;cmpw $, (%ebx);jne  <IoIsValidNameGraftingBuffer+>": 1,
                "movw (%ebx), %ax;cmpw $, %ax;je  <IoIsValidNameGraftingBuffer+>;cmpw %cx, %ax;jne - <IoIsValidNameGraftingBuffer+>": 1,
                "jne - <IoIsValidNameGraftingBuffer+>;cmpw %cx, (%ebx);jne - <IoIsValidNameGraftingBuffer+>;cmpw $, (%ebx);jne - <IoIsValidNameGraftingBuffer+>": 1,
                "pushl %esi;xorl %ecx, %ecx;pushl %edi;movl (%ebp), %edi;xorl %esi, %esi": 1,
                "jmp  <IoIsValidNameGraftingBuffer+>;movl (%ebx), %eax;movl %eax, -(%ebp);jmp  <IoIsValidNameGraftingBuffer+>;movl (%ebp), %eax": 1,
                "cmpl %eax, -(%ebp);je  <IoIsValidNameGraftingBuffer+>;testl %eax, %eax;je  <IoIsValidNameGraftingBuffer+>;pushl $": 1,
                "movl %ecx, (%eax);movl %eax, %edx;movl $, %ecx;calll - <RtlVolumeDeviceToDosName+>;popl %ebp": 2,
                "pushl $;pushl %eax;movl %ecx, %esi;calll *(%ebp);cmpl %edi, %esi": 1,
                "movl $, %esi;jmp  <IoRegisterFsRegistrationChange+>;pushl $;pushl $;pushl $": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;jne  <IoRegisterFsRegistrationChange+>;movl $, %esi": 1,
                "movl %eax, %edi;testl %edi, %edi;jne  <IoRegisterLastChanceShutdownNotification+>;movl $, %eax;jmp  <IoRegisterLastChanceShutdownNotification+>": 1,
                "movl %esi, %ecx;movl %esi, (%edi);calll - <ObfReferenceObject>;movl %edi, %edx;movl $, %ecx": 1,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);cmpl %edi, %eax;jne  <IoSetInformation+>;movl %ebx, %ecx": 1,
                "jmp  <IoSetInformation+>;leal (%ebp), %eax;pushl %eax;movl (%ebx), %eax;shrl $, %eax": 1,
                "je - <IoSetInformation+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;jmp  <IoSetInformation+>": 1,
                "pushl %ebx;calll  <NtWriteFile+>;movl $, %eax;jmp  <IoSetInformation+>;movl %ebx, (%esi)": 1,
                "cmpb $, (%ebp);movl %eax, (%esi);movb $, (%esi);je  <IoSetInformation+>;movl %edi, (%esi)": 1,
                "movl %edi, (%esi);jmp  <IoSetInformation+>;leal -(%ebp), %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl (%edx), %ecx;movb %al, (%ebp);leal (%esi), %eax;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "movl %eax, (%ecx);movb (%ebp), %cl;movl %eax, (%edx);calll *;movl (%ebp), %eax": 1,
                "je  <IoSetInformation+>;cmpl $, (%ebp);jne  <IoSetInformation+>;movl (%ebx), %ecx;pushl %edi": 1,
                "movl (%ebx), %ecx;pushl %edi;shrl $, %ecx;andl $, %ecx;pushl %ecx": 1,
                "pushl %edi;pushl %eax;calll - <KeWaitForSingleObject>;cmpl $, %eax;jne  <IoSetInformation+>": 1,
                "cmpb %dl, (%ebp);jne  <IoSetShareAccess+>;testb %cl, %cl;jne  <IoSetShareAccess+>;cmpb %cl, -(%ebp)": 1,
                "je  <IoSetShareAccess+>;movl (%ebp), %ecx;movl %ebx, (%ecx);movzbl (%eax), %edx;movl %edx, (%ecx)": 1,
                "pushl $;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %edi;cmpl $, (%edi);je  <IoUnregisterFileSystem+>": 1,
                "pushl %edi;pushl $;movl $, %esi;pushl %esi;calll - <ExAcquireResourceExclusiveLite>": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl , %eax;movl (%ebp), %edi;movl $, %ecx;jmp  <IoUnregisterFsRegistrationChange+>": 1,
                "movl (%eax), %ecx;movl (%eax), %edx;pushl $;movl %ecx, (%edx);pushl %eax": 1,
                "calll - <ExReleaseResourceLite>;movl %edi, %ecx;calll - <ObfDereferenceObject>;popl %edi;popl %esi": 1,
                "je  <IoUpdateShareAccess+>;testb %dl, (%ecx);je  <IoUpdateShareAccess+>;xorb %dl, %dl;cmpb %al, (%ecx)": 1,
                "movzbl (%ecx), %edx;addl %edx, (%eax);movzbl (%ecx), %edx;addl %edx, (%eax);movzbl (%ecx), %edx": 3,
                "xorl %ebx, %ebx;pushl %ebx;pushl %ebx;pushl %ebx;leal (%esi), %eax": 2,
                "movl %ebx, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %edi;jmp  <IoVerifyVolume+>": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %edi;jmp  <IoVerifyVolume+>;movl %eax, %edi": 1,
                "movl %eax, %edx;cmpl %ebx, %edx;jne  <IoVerifyVolume+>;movl $, %edi;jmp  <IoVerifyVolume+>": 1,
                "cmpb %bl, (%ebp);movb $, (%eax);setne %cl;movb %cl, (%eax);movb $, (%eax)": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movl %edi, %ecx;calll *;movl %eax, %edi": 1,
                "pushl %eax;pushl %ebx;pushl $;pushl (%ebp);movl %ebx, (%ebp)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %esi": 8,
                "je  <IoVerifyVolume+>;movl %edi, (%esi);movl (%ebp), %eax;movl %edi, (%eax);movl (%ebp), %eax": 1,
                "cmpl $, %eax;je  <IoVerifyVolume+>;cmpl $, %eax;je  <IoVerifyVolume+>;cmpl $, %eax": 3,
                "jbe  <IoVerifyVolume+>;cmpl $, %eax;jbe  <IoVerifyVolume+>;cmpl $, %eax;jmp  <IoVerifyVolume+>": 1,
                "pushl %edi;pushl ;jmp  <IoVerifyVolume+>;movl , %eax;movzwl (%eax), %eax": 1,
                "cmpl %edi, %ebx;jne  <IoVerifyVolume+>;xorl %eax, %eax;jmp  <IoVerifyVolume+>;movl , %esi": 1,
                "pushl $;pushl (%ebp);calll  <RtlSetDaclSecurityDescriptor>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "cmpl %edi, %esi;je  <IoVerifyVolume+>;orl $, (%esi);movl (%ebp), %eax;popl %edi": 1,
                "movl (%ebp), %eax;xorl %edi, %edi;movl %edi, (%ebx);movsbl (%eax), %eax;pushl %eax": 1,
                "calll - <KeWaitForSingleObject>;movb $, %cl;calll *;movl (%edi), %edx;movb %al, %cl": 1,
                "movl %edi, (%edi);calll *;pushl %esi;calll - <IoFreeIrp>;andl $, (%ebx)": 1,
                "pushl %eax;jmp  <IoQueryFileDosDeviceName+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %esi;pushl $;pushl $;pushl (%ebp);calll  <NtWriteFile+>": 1,
                "pushl $;pushl (%ebp);calll  <NtWriteFile+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "incl %eax;pushl $;incl %eax;pushl %eax;pushl $": 7,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl ;pushl %edi": 2,
                "calll  <ObReferenceObjectByHandle>;cmpl %edi, %eax;movl -(%ebp), %ebx;pushl -(%ebp);movl %eax, %esi": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;pushl %edi": 3,
                "rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;pushl %edi;pushl %ebx;calll *-(%ebp)": 1,
                "movl %esi, %eax;movl -(%ebp), %ecx;calll - <KeRaiseUserException+>;popl %edi;popl %esi": 1,
                "shrl $, %esi;movl $, %ebx;jmp  <IoEnumerateRegisteredFiltersList+>;movl (%eax), %eax;incl %edi": 1,
                "movl (%eax), %eax;incl %edi;cmpl %ebx, %eax;jne - <IoEnumerateRegisteredFiltersList+>;cmpl %esi, %edi": 1,
                "cmpl %ebx, %edi;je  <IoEnumerateRegisteredFiltersList+>;movl (%edi), %ecx;calll - <ObfReferenceObject>;movl (%edi), %eax": 1,
                "calll - <ObfReferenceObject>;movl (%edi), %eax;movl (%ebp), %ecx;addl $, (%ebp);decl %esi": 1,
                "leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl ;pushl %esi": 1,
                "pushl %edi;movl %fs:, %eax;movl , %ebx;movb $, %cl;movl %eax, %edi": 1,
                "movl , %eax;andl (%ebp), %eax;pushl %esi;movl %edx, -(%ebp);movb %dl, %cl": 1,
                "decl %eax;imull $, %eax, %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "movl %esi, %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "addb %ah, ;addb %ch, (%eax,%eax);addb %al, (%eax);addb %cl, %ah;int": 1,
                "je  <IoCreateDevice+>;movb %bl, -(%ebp);jmp  <IoCreateDevice+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;subl $, %eax;je  <IoCreateDevice+>;subl $, %eax": 1,
                "je  <IoCreateDevice+>;decl %eax;je  <IoCreateDevice+>;subl $, %eax;jne  <IoCreateDevice+>": 1,
                "movl %ebx, -(%ebp);je  <IoCreateDevice+>;movl $, -(%ebp);cmpb %bl, -(%ebp);je  <IoCreateDevice+>": 1,
                "orl $, -(%ebp);movl -(%ebp), %esi;cmpl %ebx, %esi;je  <IoCreateDevice+>;pushl $": 1,
                "movl %edx, -(%ebp);movl %eax, -(%ebp);jne  <IoCreateDevice+>;cmpl %ebx, -(%ebp);je  <IoCreateDevice+>": 1,
                "movl (%ebp), %ecx;movl %esi, (%eax);movl -(%ebp), %eax;movl %ecx, (%eax);je  <IoCreateDevice+>": 1,
                "jbe  <IoCreateDevice+>;cmpl $, %esi;je  <IoCreateDevice+>;cmpl $, %esi;je  <IoCreateDevice+>": 1,
                "je  <IoCreateDevice+>;movl -(%ebp), %eax;addl $, %eax;pushl %eax;calll - <KeInitializeDeviceQueue>": 1,
                "movl %esi, %ecx;calll - <ObfReferenceObject>;movl -(%ebp), %eax;pushl $;movl %esi, (%eax)": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "je  <IoCreateDevice+>;testl $, (%ebp);jne  <IoCreateDevice+>;testl $, (%ebp);jne  <IoCreateDevice+>": 1,
                "cmpl $, (%ebp);jne  <IoCreateDevice+>;movl (%ebp), %eax;cmpl %edx, %eax;jne  <IoCreateDevice+>": 1,
                "movl (%ebp), %ecx;movl , %eax;cmpl %eax, %ecx;jb  <IoCreateDevice+>;movl %edx, (%eax)": 1,
                "cmpl %edx, (%ebp);je  <IoCreateDevice+>;movl (%ebp), %esi;cmpl %edx, %esi;je  <IoCreateDevice+>": 1,
                "movl (%ebp), %esi;pushl %esi;pushl $;calll - <ExAllocatePoolWithQuotaTag>;movl %eax, (%ebx)": 1,
                "movl %esi, (%ebx);movl %esi, %ecx;movl (%ebp), %esi;movl %eax, %edi;movl %ecx, %eax": 1,
                "movl %eax, (%ecx);movl -(%ebp), %edx;movl %edx, (%ecx);pushl %eax;calll - <ExRaiseStatus>": 3,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;movl -(%ebp), %esi;pushl $": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl -(%ebp), %esi;pushl $;pushl -(%ebp)": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jmp  <IoCreateDevice+>": 1,
                "pushl %edx;pushl (%ebx);calll - <IoCheckEaBufferValidity>;movl %eax, %esi;testl %esi, %esi": 1,
                "jl  <IoCreateDevice+>;cmpb $, -(%ebp);je  <IoCreateDevice+>;movl (%ebx), %eax;orb $, (%eax)": 1,
                "cmpb $, -(%ebp);jne  <IoCreateDevice+>;cmpw %di, (%eax);je  <IoCreateDevice+>;pushl %edi": 1,
                "je  <IoCreateDevice+>;pushl %edi;pushl (%eax);calll - <ExFreePoolWithTag>;movl (%ebx), %eax": 1,
                "pushl %edi;pushl (%eax);calll - <ExFreePoolWithTag>;movl (%ebx), %eax;movl %edi, (%eax)": 1,
                "movl (%ebx), %ecx;cmpl %edi, %ecx;je  <IoCreateDevice+>;calll - <ObfDereferenceObject>;pushl %edi": 1,
                "leave;retl $;popl %esp;incl %esp;jbe  <IoGetDeviceObjectPointer+>": 1,
                "jbe  <IoGetBootDiskInformation+>;arpl %sp, (%ebp);decl %eax;popal;jb  <IoGetBootDiskInformation+>": 2,
                "pushl %eax;calll - <RtlInitAnsiString>;cmpl %ebx, -(%ebp);movl %ebx, -(%ebp);jbe  <IoGetBootDiskInformation+>": 1,
                "jbe  <IoGetBootDiskInformation+>;pushl -(%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "pushl %eax;calll  <RtlAnsiStringToUnicodeString>;testl %eax, %eax;jl  <IoGetBootDiskInformation+>;leal -(%ebp), %eax": 1,
                "movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);calll *;cmpl $, %eax": 3,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitAnsiString>;xorl %esi, %esi": 1,
                "testl %eax, %eax;jl  <IoGetBootDiskInformation+>;movl -(%ebp), %eax;movl (%eax), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitAnsiString>;pushl %esi": 1,
                "movl -(%ebp), %edi;jmp  <IoGetBootDiskInformation+>;cmpl %ebx, %edi;je  <IoGetBootDiskInformation+>;movb %bl, (%edi)": 1,
                "movb %bl, (%edi);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;incl -(%ebp);movl -(%ebp), %eax": 1,
                "pushl $;pushl %edx;pushl %eax;calll - <_allmul>;cmpl $, -(%ebp)": 1,
                "pushl %esi;calll - <KeDelayExecutionThread>;movl , %ebx;pushl %esi;pushl %esi": 1,
                "movl , %ebx;pushl %esi;pushl %esi;pushl (%ebp);pushl (%ebp)": 1,
                "jge  <IoCreateFile+>;testb $, %bl;jne - <IoCreateFile+>;cmpl , %ebx;jne - <IoCreateFile+>": 1,
                "popl %ecx;je  <IoCreateFileSpecifyDeviceObjectHint+>;pushl $;popl %ecx;movl (%ebp), %eax": 1,
                "calll  <ObReferenceObjectByHandle>;cmpl %esi, %eax;movl -(%ebp), %edi;jl  <IoAttachDevice+>;pushl %edi": 1,
                "movl %eax, %esi;calll - <ZwClose>;pushl (%ebp);pushl %esi;pushl (%ebp)": 1,
                "pushl (%ebp);calll - <IoAttachDeviceToDeviceStackSafe>;movl %edi, %ecx;movl %eax, %esi;calll - <ObfDereferenceObject>": 1,
                "movl %esi, %eax;popl %edi;popl %esi;leave;retl $": 8,
                "cmpl %eax, %ecx;jb  <IoAttachDevice+>;movl $, (%eax);movl (%ecx), %eax;movl %eax, (%ecx)": 1,
                "jne - <IoAttachDevice+>;movb -(%ebp), %cl;movl , %edi;calll *%edi;cmpb $, -(%ebp)": 1,
                "popl %esi;jne  <NtDeleteFile+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;calll - <KeRaiseUserException+>": 1,
                "movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <NtDeleteFile+>;movl %esi, (%eax)": 1,
                "pushl %eax;pushl -(%ebp);pushl ;pushl %esi;pushl (%ebp)": 12,
                "testb $, %al;je  <NtDeleteFile+>;leal (%edi), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;cmpl %esi, %ebx;jne  <NtDeleteFile+>": 1,
                "leal (%ebx), %eax;movl %eax, (%eax);movl %eax, (%eax);movb $, -(%ebp);movl %esi, (%edi)": 1,
                "pushl %eax;calll - <IoAllocateIrp>;movl %eax, %esi;xorl %ecx, %ecx;cmpl %ecx, %esi": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movb -(%ebp), %al;movb %al, (%esi);cmpb $, -(%ebp)": 4,
                "movl %edi, (%eax);pushl $;pushl -(%ebp);pushl -(%ebp);pushl %ecx": 1,
                "movb (%eax), %al;movb %al, -(%ebp);testb %al, %al;je  <NtDeleteFile+>;andl $, -(%ebp)": 2,
                "movb $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);calll - <IoGetRequestorSessionId+>": 1,
                "pushl -(%ebp);pushl -(%ebp);calll  <ObCloseHandle>;movl $, %eax;jmp  <NtDeleteFile+>": 2,
                "calll  <ObCloseHandle>;movl $, %eax;jmp  <NtDeleteFile+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <NtDeleteFile+>;movl -(%ebp), %eax": 1,
                "rep  stosl %eax, %es:(%edi);movw $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);xorl %edi, %edi": 1,
                "cmpb $, -(%ebp);je  <NtDeleteFile+>;movl %edi, -(%ebp);pushl $;popl %ecx": 1,
                "movl $, %eax;jmp  <NtDeleteFile+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "andl $, -(%ebp);leal (%esi), %eax;pushl %eax;leal (%esi), %edi;pushl %edi": 1,
                "leal (%esi), %edi;pushl %edi;pushl $;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl %ecx, (%eax);pushl (%edi);calll  <MmResetDriverPaging+>;pushl $;pushl %edi": 1,
                "movl %eax, %ebx;leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl (%esi), %edx;movl %edx, -(%ecx);movl %eax, %edx;movl %ebx, %ecx;calll - <IofCallDriver>": 1,
                "cmpl %edx, -(%ebp);movl %ecx, -(%ebp);jl  <NtDeleteFile+>;movl -(%ebp), %eax;jg  <NtDeleteFile+>": 1,
                "movl -(%ebp), %eax;movl , %ecx;movl %eax, (%ecx);pushl ;calll - <IoCsqRemoveIrp+>": 1,
                "movl %eax, (%ecx);pushl ;calll - <IoCsqRemoveIrp+>;movl %eax, ;xorl %edi, %edi": 1,
                "popl %ebx;popl %ebp;retl $;popl %esp;addb %dl, (%edx)": 1,
                "jb  <NtDeleteFile+>;jb  <NtDeleteFile+>;addb %ch, %gs:(%esi);je  <NtDeleteFile+>;incl %ebx": 1,
                "incl %esp;addb %dh, (%ebp);insl %dx, %es:(%edi);addb %dh, (%eax);incl %esi": 1,
                "addb %dh, (%ebp);insl %dx, %es:(%edi);addb %dh, (%eax);incl %esi;addb %ch, (%ecx)": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl %edi;leal -(%ebp), %eax": 6,
                "calll  <NtWriteFile+>;testl %eax, %eax;jl  <NtDeleteFile+>;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <NtWriteFile+>;pushl %edi;pushl -(%ebp)": 1,
                "je  <NtDeleteFile+>;movl (%eax), %ecx;movl (%eax,%ecx), %ebx;pushl %edi;pushl %eax": 3,
                "jne  <NtDeleteFile+>;orl $, %eax;movl %eax, (%esi);movl , %eax;movl (%eax), %ecx": 1,
                "movl (%eax), %eax;leal (%ecx,%eax), %eax;shrl $, %eax;leal (%eax), %ecx;andl $, %ecx": 1,
                "shrl $, %eax;leal (%eax), %ecx;andl $, %ecx;negl %ecx;sbbl %ecx, %ecx": 1,
                "je  <NtDeleteFile+>;leal (%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "cmpl %edi, %esi;je  <NtDeleteFile+>;xorl %eax, %eax;pushl $;popl %ecx": 1,
                "pushl $;popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movb -(%ebp), %al": 1,
                "shrl $, %eax;movl %eax, (%esi);movl , %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "je  <NtDeleteFile+>;pushl %eax;calll - <MmGetPhysicalAddress>;movb $, %cl;calll - <_allshr>": 1,
                "pushl %edi;calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, (%esi);jne  <NtDeleteFile+>": 1,
                "pushl %edi;pushl %edi;pushl $;pushl %edi;pushl $": 3,
                "leave;retl;int;popl %esp;addb %al, (%eax)": 1,
                "incl %esp;jbe  <NtDeleteFile+>;arpl %sp, (%ebp);pushl %ebx;arpl %si, (%ebx)": 1,
                "jbe  <NtDeleteFile+>;arpl %sp, (%ebp);pushl %ebx;arpl %si, (%ebx);pushl %eax": 1,
                "outsl (%esi), %dx;jb  <NtDeleteFile+>;andl $, %eax;addb %al, (%eax);addb %bl, (%eax,%eax)": 1,
                "jae  <NtDeleteFile+>;je  <NtDeleteFile+>;addb %ch, %gs:(%ebp);xorl (%eax), %eax;xorb (%eax), %al": 2,
                "addb %al, (%eax,%eax);addb %ch, (%ecx);jbe  <NtDeleteFile+>;addb %dh, %gs:(%edx);jae  <NtDeleteFile+>": 2,
                "subl $, %esp;movl , %eax;pushl %ebx;movl %eax, -(%ebp);movl (%ebp), %eax": 12,
                "pushl $;leal (%ebx), %eax;movl %eax, (%ebx);leal (%ebx), %eax;pushl $": 1,
                "leal (%ebx), %eax;movl %eax, (%ebx);leal (%ebx), %eax;pushl $;pushl $": 1,
                "je  <NtDeleteFile+>;movl -(%ebp), %eax;pushl $;movl %eax, -(%ebp);pushl $": 1,
                "pushl %esi;pushl %esi;pushl -(%ebp);calll - <ZwWaitForSingleObject>;movl -(%ebp), %eax": 1,
                "leal (%edi), %esi;leal (%ebx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);xorl %esi, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "movsl (%esi), %es:(%edi);xorl %esi, %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;calll - <IoGetRelatedDeviceObject>;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl %edi;pushl %eax;movl %eax, -(%ebp);calll - <wcsstr>;cmpl %esi, %eax": 2,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "cmpl %esi, %edi;jge  <NtDeleteFile+>;pushl %esi;pushl %esi;pushl %esi": 2,
                "pushl %eax;movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 3,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ZwOpenFile>;movl %eax, %edi": 1,
                "jl - <NtDeleteFile+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "jmp - <NtDeleteFile+>;pushl -(%ebp);pushl $;pushl -(%ebp);calll - <swprintf>": 1,
                "pushl $;pushl %esi;pushl $;pushl %esi;calll - <RtlVolumeDeviceToDosName+>": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %eax": 2,
                "calll - <ObfDereferenceObject>;pushl -(%ebp);calll - <ZwClose>;jmp  <NtDeleteFile+>;movl $, %edi": 1,
                "int;popl %esp;addb %dl, (%ebx);jns  <NtDeleteFile+>;jae  <NtDeleteFile+>": 1,
                "pushl %edi;pushl ;pushl %edi;pushl (%ebp);calll  <ObReferenceObjectByHandle>": 1,
                "pushl $;pushl $;pushl %edi;movb $, (%eax);calll - <ExAllocatePoolWithTag>": 1,
                "movl (%esi), %eax;cmpl %edi, (%eax);je  <IoInitializeCrashDump+>;movl , %eax;movl (%eax), %eax": 1,
                "pushl %edi;pushl $;pushl %edi;calll - <RtlVolumeDeviceToDosName+>;pushl %edi": 1,
                "movl $, %ebx;jmp  <IoInitializeCrashDump+>;calll  <NtCreateSection+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "pushl $;movl $, %esi;pushl %esi;calll - <ExAcquireResourceExclusiveLite>;pushl %ebx": 1,
                "movl (%eax), %eax;pushl (,%eax,);leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeToString>": 2,
                "movl (%esi), %eax;cmpl %edi, %eax;je  <IoInitializeCrashDump+>;movl (%eax), %eax;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);jmp  <IoInitializeCrashDump+>;pushl %edi;pushl $;leal -(%ebp), %eax": 2,
                "jl  <IoInitializeCrashDump+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl %edi;pushl %eax": 1,
                "movl %edi, -(%ebp);calll - <ExFreePoolWithTag>;movl %edi, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "movl %edi, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>;movl %eax, %ebx;cmpl %edi, %ebx": 2,
                "calll - <RtlAppendUnicodeStringToString>;movl %eax, %ebx;cmpl %edi, %ebx;jl  <IoInitializeCrashDump+>;pushl %edi": 2,
                "calll - <ZwClose>;cmpl %edi, %ebx;movl %edi, -(%ebp);jl  <IoInitializeCrashDump+>;cmpl %edi, (%esi)": 1,
                "movl %eax, %ebx;calll - <ZwClose>;cmpl %edi, %ebx;movl %edi, -(%ebp);jge  <IoInitializeCrashDump+>": 1,
                "jl  <IoInitializeCrashDump+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movl (%esi), %eax": 1,
                "calll - <ExFreePoolWithTag>;movl %edi, -(%ebp);cmpl %edi, -(%ebp);je  <IoInitializeCrashDump+>;pushl %edi": 4,
                "incl -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb - <IoInitializeCrashDump+>;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);jne  <IoInitializeCrashDump+>;movl $, %eax": 1,
                "pushl %eax;calll  <NtWriteFile+>;testl %eax, %eax;jl  <IoInitializeCrashDump+>;movl (%ebp), %eax": 1,
                "cmpl (%edx), %eax;jne  <IoInitializeCrashDump+>;incl (%edi);movl (%esi), %ecx;cmpl %ebx, %ecx": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %esi;calll - <IoInitializeCrashDump+>;jmp  <IoInitializeCrashDump+>": 1,
                "cmpl %ebx, -(%ebp);je  <IoInitializeCrashDump+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 4,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl %ebx, -(%ebp);movl (%esi), %eax": 1,
                "je  <IoInitializeCrashDump+>;cmpb %bl, (%ebp);sete %al;pushl %eax;pushl %edi": 1,
                "calll - <RtlAppendUnicodeStringToString>;pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <ExFreePoolWithTag>;cmpl $, %esi;movl $, %eax;je  <IoQueryDeviceDescription+>;movl %esi, %eax": 1,
                "movl (%edi), %eax;movl %eax, (%edi);movl , %eax;movl %eax, -(%ebp);leal -(%ebp), %ecx": 2,
                "pushl (%ebp);pushl %eax;pushl -(%ebp);calll  <ObCreateObject>;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%edi);movl %ebx, -(%ebp);jmp  <IoQueryDeviceDescription+>;calll  <ExSystemExceptionFilter>": 1,
                "pushl %ebx;pushl -(%ebp);pushl ;pushl (%ebp);calll  <ObOpenObjectByName>": 1,
                "jl  <IoQueryDeviceDescription+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esi);movl %ebx, -(%ebp)": 1,
                "calll  <ExRaiseDatatypeMisalignment>;movb (%ebx), %al;movb %al, (%ebx);movl (%ebp), %ecx;cmpl %edi, %ecx": 1,
                "movb %al, (%ebx);movl (%ebp), %ecx;cmpl %edi, %ecx;je  <IoQueryDeviceDescription+>;movl , %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <IoQueryDeviceDescription+>;movl $, (%eax);jmp  <IoQueryDeviceDescription+>": 1,
                "retl;movl -(%ebp), %esp;andl $, -(%ebp);jmp  <IoQueryDeviceDescription+>;movl -(%ebp), %eax": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl $, -(%ebp);movl %ds:, %eax;movl %eax, %edi": 1,
                "calll - <InterlockedPopEntrySList>;movl %eax, -(%ebp);cmpl %ebx, %eax;jne  <IoSetIoCompletion+>;incl (%esi)": 2,
                "movl %ebx, -(%ebp);pushl $;pushl $;pushl %ebx;calll - <ExAllocatePoolWithQuotaTag>": 1,
                "jmp  <IoSetIoCompletion+>;pushl %ebx;pushl $;pushl $;pushl %ebx": 1,
                "pushl %ebx;calll - <ExAllocatePoolWithTagPriority>;cmpl %ebx, %eax;je  <IoSetIoCompletion+>;movl -(%ebp), %ecx": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;calll - <wctomb+>;retl $;int": 3,
                "movl (%ebp), %edi;cmpl $, (%edi);jne  <IoSetIoCompletion+>;pushl %edi;calll - <ExQueryPoolBlockSize+>": 1,
                "pushl (%ebp);calll  <ObReferenceObjectByHandle>;movl %eax, %esi;testl %esi, %esi;jl  <IoSetIoCompletion+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <IoSetIoCompletion>;movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movb (%eax), %al;movb %al, -(%ebp);testb %al, %al;je  <IoSetIoCompletion+>": 1,
                "movl %eax, (%ecx);movl , %ecx;movl (%ebp), %eax;cmpl %ecx, %eax;jb  <IoSetIoCompletion+>": 1,
                "movl (%ebp), %eax;cmpl %ecx, %eax;jb  <IoSetIoCompletion+>;movl %esi, (%ecx);movl (%eax), %ecx": 1,
                "pushl %esi;leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %eax": 1,
                "pushl (%ebp);calll  <ObReferenceObjectByHandle>;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl %eax, -(%ebp);cmpl %esi, (%eax);jne  <IoSetIoCompletion+>": 1,
                "movl (%eax), %edi;movl %edi, -(%ebp);movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %ecx": 2,
                "movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp);pushl %eax": 2,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);pushl %eax;calll - <IoFreeIrp>;jmp  <IoSetIoCompletion+>": 1,
                "calll - <IoFreeIrp>;jmp  <IoSetIoCompletion+>;movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %edi": 1,
                "jmp  <IoSetIoCompletion+>;movl %eax, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp  <IoSetIoCompletion+>": 1,
                "calll - <ObfDereferenceObject>;jmp  <IoSetIoCompletion+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "retl;movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <NtCreateFile+>": 2,
                "calll  <ExRaiseDatatypeMisalignment>;movl , %eax;cmpl %eax, %ebx;jb  <NtCreateFile+>;movl %esi, (%eax)": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl %esi": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl $;pushl %esi": 1,
                "movb %bl, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 3,
                "movl , %eax;cmpl %eax, %esi;jb  <NtLockFile+>;movl %edi, (%eax);movl (%esi), %eax": 1,
                "je  <NtLockFile+>;movl (%eax), %eax;testl %eax, %eax;je  <NtLockFile+>;pushl %edi": 1,
                "movl (%ebx), %eax;pushl $;pushl -(%ebp);pushl -(%ebp);pushl (%ebp)": 1,
                "testl %eax, %eax;jge  <NtLockFile+>;movl $, -(%ebp);movb $, (%ebx);movl %ebx, %ecx": 1,
                "testb $, (%ebx);je  <NtLockFile+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "calll  <NtWriteFile+>;movl %eax, -(%ebp);cmpb $, -(%ebp);je  <NtLockFile+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;testl %ecx, %ecx;je  <NtLockFile+>;calll - <ObfDereferenceObject>;movl -(%ebp), %esi": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);testl %edi, %edi;jne  <NtLockFile+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl %ebx;calll  <NtWriteFile+>;movl $, %eax;jmp  <NtLockFile+>": 1,
                "movl (%ebp), %eax;movl %eax, (%edi);movl (%ebp), %eax;movl %eax, (%edi);movl (%edi), %esi": 1,
                "movl %ebx, (%esi);movb $, (%esi);cmpb $, (%ebp);je  <NtLockFile+>;movb $, (%esi)": 1,
                "pushl $;calll - <ExAllocatePoolWithQuotaTag>;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "pushl %eax;pushl -(%ebp);pushl ;xorl %edi, %edi;pushl %edi": 1,
                "jl  <NtUnlockFile+>;testb %bl, %bl;je  <NtUnlockFile+>;testb $, -(%ebp);jne  <NtUnlockFile+>": 1,
                "movl %eax, (%esi);movl (%ebp), %ebx;testb $, %bl;je  <NtUnlockFile+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "jmp  <NtUnlockFile+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 5,
                "pushl (%ebx);calll - <IoGetAttachedDevice>;movl %eax, -(%ebp);movl %eax, %edi;movl (%edi), %eax": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);movl -(%ebp), %ecx;pushl (%ecx)": 1,
                "je  <NtUnlockFile+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp  <NtUnlockFile+>;testb $, (%ebx)": 1,
                "jne  <NtUnlockFile+>;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax;shrl $, %eax": 2,
                "movl %eax, (%eax);movb $, -(%ebp);andl $, (%ebx);pushl $;xorl %eax, %eax": 1,
                "calll - <IoAllocateIrp>;movl %eax, %edi;movl %edi, -(%ebp);xorl %eax, %eax;cmpl %eax, %edi": 1,
                "pushl -(%ebp);pushl %edi;pushl -(%ebp);pushl %eax;calll  <NtWriteFile+>": 1,
                "movl (%ebp), %eax;movb %dl, (%eax);movl %esi, -(%ebp);testb %dl, %dl;je  <NtUnlockFile+>": 1,
                "movl (%eax), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;cmpl $, %eax;je  <NtUnlockFile+>": 1,
                "decl %eax;je  <NtUnlockFile+>;decl %eax;je  <NtUnlockFile+>;subl $, %eax": 1,
                "je  <NtUnlockFile+>;subl $, %eax;jne  <NtUnlockFile+>;movl $, -(%ebp);jmp  <NtUnlockFile+>": 1,
                "jmp  <NtUnlockFile+>;movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "calll - <ExAllocatePoolWithQuotaTag>;movl %eax, -(%ebp);leal (%eax), %edx;movl %esi, %ecx;movl %edi, %esi": 1,
                "movl %eax, -(%ebp);leal (%eax), %edx;movl %esi, %ecx;movl %edi, %esi;movl %edx, %edi": 1,
                "rep  movsb (%esi), %es:(%edi);movl %eax, -(%ebp);movw %bx, (%eax);movw %bx, (%eax);leal (%eax), %ecx": 1,
                "pushl ;pushl $;pushl (%ebp);calll  <ObReferenceObjectByHandle>;movl %eax, %edi": 2,
                "cmpl %esi, %edi;jge  <NtUnlockFile+>;cmpl %esi, -(%ebp);je  <NtUnlockFile+>;pushl %esi": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl $, %eax;jmp  <NtUnlockFile+>;cmpl %edi, (%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl $, %eax;jmp  <NtUnlockFile+>;cmpl %edi, (%ebp);je  <NtUnlockFile+>": 1,
                "movl %edi, (%eax);testb $, (%ebx);je  <NtUnlockFile+>;leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <IoAllocateIrp>;movl %eax, %esi;movl %esi, -(%ebp);cmpl %edi, %esi": 1,
                "orb $, (%esi);xorl %eax, %eax;jmp  <NtUnlockFile+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;jmp  <NtUnlockFile+>": 1,
                "pushl -(%ebp);calll - <MmProbeAndLockPages>;orl $-, -(%ebp);jmp - <NtUnlockFile+>;movl -(%ebp), %eax": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb (%eax), %al": 1,
                "movl (%edi), %eax;movl %eax, (%edi);movl (%edi), %eax;movl %eax, (%edi);cmpl %esi, (%ebp)": 1,
                "calll  <ObReferenceObjectByHandle>;cmpl %esi, %eax;jl  <NtNotifyChangeDirectoryFile+>;movl -(%ebp), %ebx;cmpl %esi, (%ebx)": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl %esi, %eax;jge  <NtNotifyChangeDirectoryFile+>;movl %eax, %esi": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp  <NtNotifyChangeDirectoryFile+>;movb $, -(%ebp);jmp  <NtNotifyChangeDirectoryFile+>": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);testl %esi, %esi;jne  <NtNotifyChangeDirectoryFile+>;pushl -(%ebp)": 1,
                "movb %al, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%esi);movl (%ebp), %eax": 1,
                "movl %eax, (%esi);movl %edi, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 2,
                "pushl %esi;pushl -(%ebp);calll  <NtWriteFile+>;calll - <wctomb+>;retl $": 2,
                "pushl -(%ebp);calll  <NtWriteFile+>;orl $-, -(%ebp);movl %esi, %eax;jmp - <NtNotifyChangeDirectoryFile+>": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <NtQueryEaFile+>;movl %esi, -(%ebp);movl (%ebp), %ebx": 1,
                "jge  <NtQueryEaFile+>;movl %esi, -(%ebp);pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movzbl (%eax), %ecx;addl $, %ecx;movl %ecx, -(%ebp);cmpl %ecx, -(%ebp);jb  <NtQueryEaFile+>": 1,
                "calll - <ExFreePoolWithTag>;movl %esi, -(%ebp);movl $, %eax;movl %eax, (%ebx);movl %edi, (%ebx)": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;andl $, -(%ebp);movl $, %eax": 1,
                "movl $, -(%ebp);pushl $;pushl (%ebp);pushl %esi;calll - <ExAllocatePoolWithQuotaTag>": 1,
                "calll - <ExAllocatePoolWithQuotaTag>;movl %eax, -(%ebp);orl $-, -(%ebp);movl (%ebp), %ecx;movl (%ebp), %esi": 1,
                "movl %eax, %esi;cmpb $, -(%ebp);je  <NtQueryEaFile+>;cmpb $, -(%ebp);je  <NtQueryEaFile+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;pushl %edi;calll  <NtWriteFile+>": 2,
                "andl $, (%esi);movl %ebx, (%esi);jmp  <NtQueryEaFile+>;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "cmpb %cl, -(%ebp);je  <NtQueryEaFile+>;movl -(%ebp), %eax;movl %eax, (%esi);movl %eax, (%edi)": 1,
                "movl (%eax), %eax;testb $, %al;je  <NtQueryEaFile+>;cmpl %ecx, (%ebp);je  <NtQueryEaFile+>": 1,
                "orl $-, -(%ebp);orl $, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%edi);movl -(%ebp), %eax": 1,
                "movb $, (%edi);cmpb $, (%ebp);je  <NtQueryEaFile+>;movb $, (%edi);cmpb $, (%ebp)": 1,
                "movl -(%ebp), %esp;pushl -(%ebp);pushl $;pushl -(%ebp);pushl -(%ebp)": 10,
                "jmp - <NtQueryEaFile+>;testb $, %al;je - <NtQueryEaFile+>;cmpl %ecx, (%ebp);je - <NtQueryEaFile+>": 1,
                "calll - <MmProbeAndLockPages>;orl $-, -(%ebp);jmp - <NtQueryEaFile+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %eax;orl $-, -(%ebp);jmp - <NtQueryEaFile+>;int;int": 1,
                "testb %al, %al;je  <NtSetEaFile+>;movl %ebx, -(%ebp);movl , %eax;movl (%ebp), %esi": 1,
                "cmpl , %eax;jbe  <NtSetEaFile+>;calll  <ExRaiseAccessViolation>;xorl %ebx, %ebx;orl $-, -(%ebp)": 1,
                "movsbl (%eax), %eax;pushl %eax;calll - <IoAllocateIrp>;movl %eax, %ebx;movl %ebx, -(%ebp)": 5,
                "pushl %edi;pushl %ebx;pushl -(%ebp);calll  <NtWriteFile+>;cmpb $, -(%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %ebx": 2,
                "testb %al, %al;je  <NtQueryInformationFile+>;movzbl %al, %eax;cmpl %eax, (%ebp);jae  <NtQueryInformationFile+>": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl ;pushl %eax": 8,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);testl %eax, %eax;jl  <NtQueryInformationFile+>;testb $, (%ecx)": 1,
                "movl (%eax), %eax;movl (%eax), %esi;movl -(%ebp), %eax;testb $, (%eax);je  <NtQueryInformationFile+>": 1,
                "cmpl $, %eax;jne  <NtQueryInformationFile+>;cmpl $, (%esi);je  <NtQueryInformationFile+>;movb $, -(%ebp)": 1,
                "jne  <NtQueryInformationFile+>;cmpl $, (%esi);je  <NtQueryInformationFile+>;movb $, -(%ebp);movb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movb $, -(%ebp);movl %eax, (%edi);movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "movl %eax, (%edi);movl -(%ebp), %eax;movl %eax, (%edi);orl $-, -(%ebp);jmp  <NtQueryInformationFile+>": 1,
                "incl %eax;retl;movl -(%ebp), %esp;cmpb $, -(%ebp);jne  <NtQueryInformationFile+>": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx);movl -(%ebp), %ecx;xorl %eax, %eax": 2,
                "movl $, %esi;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;jmp  <NtQueryInformationFile+>": 1,
                "pushl $;pushl -(%ebp);calll  <NtWriteFile+>;movl $, %eax;jmp  <NtQueryInformationFile+>": 1,
                "movl %eax, (%esi);movl $, (%esi);xorl %eax, %eax;movl %eax, (%esi);movl (%esi), %edi": 1,
                "movb $, (%edi);movl -(%ebp), %ecx;movl %ecx, (%edi);movl (%ebp), %ecx;movl %ecx, (%esi)": 1,
                "orl $-, -(%ebp);orw $, (%esi);movl (%ebp), %eax;movl %eax, (%edi);movl (%ebp), %eax": 2,
                "movl (%esi), %eax;movl %ecx, (%eax);movl $, (%esi);movb $, -(%ebp);jmp  <NtQueryInformationFile+>": 1,
                "movl (%esi), %edx;movl -(%ebp), %eax;movl %eax, (%edx);pushl -(%ebp);calll - <NtSetEaFile+>": 1,
                "movl $, (%esi);cmpb $, -(%ebp);je  <NtQueryInformationFile+>;andl $, -(%ebp);andl $, (%esi)": 1,
                "andl $, -(%ebp);andl $, (%esi);jmp  <NtQueryInformationFile+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <KeWaitForSingleObject>;cmpl $, %eax;je  <NtQueryInformationFile+>": 1,
                "jne  <NtQueryInformationFile+>;andl $, (%esi);pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movl %eax, (%esi);movb $, %cl;calll *%ebx;movb %al, %bl;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;jmp  <NtQueryInformationFile+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "sbbl %eax, %eax;andl $, %eax;testl %eax, %ebx;je  <NtSetInformationFile+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "orl $-, -(%ebp);jmp  <NtSetInformationFile+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);cmpl %esi, %eax;jl  <NtSetInformationFile+>;testb $, (%ecx);jne  <NtSetInformationFile+>": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp);orl $-, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp);orl $-, -(%ebp);movl -(%ebp), %edi": 1,
                "movl %esi, (%eax);movl %esi, (%eax);orl $-, -(%ebp);jmp  <NtSetInformationFile+>;xorl %eax, %eax": 1,
                "xchgl %eax, (%ecx);movl -(%ebp), %ecx;cmpl $, (%ecx);je  <NtSetInformationFile+>;pushl $": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax": 6,
                "retl;movl -(%ebp), %esp;orl $-, -(%ebp);xorl %esi, %esi;movl -(%ebp), %edi": 1,
                "je  <NtSetInformationFile+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 2,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movb -(%ebp), %al;movb %al, (%ebx)": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movb -(%ebp), %al;movb %al, (%ebx);cmpb $, -(%ebp)": 2,
                "rep  movsb (%esi), %es:(%edi);cmpl $, (%ebp);je  <NtSetInformationFile+>;cmpl $, (%ebp);je  <NtSetInformationFile+>": 1,
                "orw $, (%ebx);movl -(%ebp), %edi;movl (%ebp), %eax;movl %eax, (%edi);movl (%ebp), %eax": 1,
                "calll - <IoGetRequestorSessionId+>;cmpl $, (%ebp);jne  <NtSetInformationFile+>;movl (%ebx), %edx;movl (%edx), %ecx": 1,
                "cmpl $, (%ebp);jne  <NtSetInformationFile+>;movl (%ebx), %edx;movl (%edx), %ecx;testl $, %ecx": 1,
                "testb $, (%eax);je  <NtSetInformationFile+>;testl %esi, %esi;jne  <NtSetInformationFile+>;testb $, (%eax)": 1,
                "je  <NtSetInformationFile+>;testl %esi, %esi;jne  <NtSetInformationFile+>;testb $, (%eax);jne  <NtSetInformationFile+>": 1,
                "jne  <NtSetInformationFile+>;movl (%ebx), %eax;movl (%eax), %ecx;testl %ecx, %ecx;jbe  <NtSetInformationFile+>": 1,
                "cmpl $, %edx;jne  <NtSetInformationFile+>;movl (%ebx), %eax;cmpb $, (%eax);je - <NtSetInformationFile+>": 1,
                "jne - <NtSetInformationFile+>;movl (%ebx), %edi;movl -(%ebp), %eax;cmpl $, (%eax);jne  <NtSetInformationFile+>": 1,
                "andl $, (%ebx);jmp  <NtSetInformationFile+>;movl (%ebx), %eax;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "movl (%ebp), %esi;addl $-, %esi;cmpl %ecx, %esi;jb  <NtSetInformationFile+>;cmpl $, %edx": 1,
                "pushl %eax;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll  <NtWriteFile+>": 1,
                "jne  <NtSetInformationFile+>;cmpb $, -(%ebp);je  <NtSetInformationFile+>;pushl $;movl -(%ebp), %eax": 1,
                "addl $, %eax;pushl %eax;calll - <KeWaitForSingleObject>;cmpl $, %eax;je  <NtSetInformationFile+>": 1,
                "cmpl $, %eax;jne  <NtSetInformationFile+>;pushl %ebx;movl -(%ebp), %eax;addl $, %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %esi;addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "jne  <NtSetInformationFile+>;pushl %ebx;pushl -(%ebp);calll  <NtWriteFile+>;movl -(%ebp), %esi": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <NtSetInformationFile+>": 1,
                "testl %ebx, %ebx;je  <NtQueryQuotaInformationFile+>;leal (%ebx), %ecx;movl , %eax;cmpl %eax, %ecx": 1,
                "testl %edi, %edi;je  <NtQueryQuotaInformationFile+>;testb $, %bl;je  <NtQueryQuotaInformationFile+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "movl (%ebp), %ecx;leal (%ecx,%ebx), %eax;cmpl %ecx, %eax;jb  <NtQueryQuotaInformationFile+>;cmpl , %eax": 1,
                "calll  <ExRaiseAccessViolation>;pushl $;leal (%ebx), %eax;andl $-, %eax;addl -(%ebp), %eax": 1,
                "jmp  <NtQueryQuotaInformationFile+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edi, %eax;je  <NtQueryQuotaInformationFile+>;movl %eax, -(%ebp);cmpl %edi, -(%ebp);je  <NtQueryQuotaInformationFile+>": 1,
                "xorl %edi, %edi;cmpl %edi, %esi;jge  <NtQueryQuotaInformationFile+>;cmpl %edi, -(%ebp);je  <NtQueryQuotaInformationFile+>": 1,
                "jmp  <NtQueryQuotaInformationFile+>;xorl %edi, %edi;cmpl %edi, -(%ebp);je  <NtQueryQuotaInformationFile+>;pushl -(%ebp)": 1,
                "je  <NtQueryQuotaInformationFile+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "jne  <NtQueryQuotaInformationFile+>;movl %ebx, %ecx;calll - <ObfReferenceObject>;movb $, %al;jmp  <NtQueryQuotaInformationFile+>": 1,
                "testb %al, %al;jne  <NtQueryQuotaInformationFile+>;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax": 1,
                "leal (%edi), %eax;movl %eax, (%eax);movl %eax, (%eax);movb $, -(%ebp);andl $, (%ebx)": 1,
                "pushl $;pushl %ebx;calll  <NtWriteFile+>;cmpl $, -(%ebp);je  <NtQueryQuotaInformationFile+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%edi);movl (%ebp), %ecx": 1,
                "cmpb $, (%ebp);je  <NtQueryQuotaInformationFile+>;movb $, (%eax);cmpb $, (%ebp);je  <NtQueryQuotaInformationFile+>": 1,
                "jmp  <NtQueryVolumeInformationFile+>;movl %ebx, -(%ebp);movl , %eax;movl (%ebp), %edi;cmpl %eax, %edi": 1,
                "movl (%ebp), %edi;movl (,%esi,), %eax;pushl %ebx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ebx;leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl ": 1,
                "testb %al, %al;jne  <NtQueryVolumeInformationFile+>;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax": 1,
                "pushl -(%ebp);pushl %ebx;calll  <NtWriteFile+>;cmpb $, -(%ebp);je  <NtQueryVolumeInformationFile+>": 1,
                "movb $, -(%ebp);cmpl $, %esi;jne  <NtQueryVolumeInformationFile+>;testb $, (%ebx);jne  <NtQueryVolumeInformationFile+>": 1,
                "cmpl %eax, (%ebx);je  <NtQueryVolumeInformationFile+>;pushl %eax;pushl %eax;leal (%ebx), %eax": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp  <NtQueryVolumeInformationFile+>;cmpl $, %esi;jne  <NtQueryVolumeInformationFile+>": 1,
                "movb (%eax), %cl;movl (%ebp), %edx;movb %cl, (%edx);pushl %edi;pushl %eax": 1,
                "movl %edi, (%eax);movl $, (%eax);orl $-, -(%ebp);jmp  <NtQueryVolumeInformationFile+>;movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);je  <NtQueryVolumeInformationFile+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "jmp - <NtQueryVolumeInformationFile+>;andl $, (%ebx);pushl %ebx;calll - <IoGetRelatedDeviceObject>;movl %eax, %esi": 1,
                "pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp)": 7,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <NtQueryVolumeInformationFile+>;movl $, %esi;movl %ebx, %ecx": 1,
                "testl %eax, %eax;jne  <NtQueryVolumeInformationFile+>;movl $, %esi;movl %ebx, %ecx;calll - <ObfDereferenceObject>": 1,
                "movb -(%ebp), %cl;movb %cl, (%esi);cmpb $, -(%ebp);je  <NtQueryVolumeInformationFile+>;movl %eax, (%esi)": 1,
                "jmp  <NtQueryVolumeInformationFile+>;movl -(%ebp), %ecx;movl %ecx, (%esi);leal -(%ebp), %ecx;movl %ecx, (%esi)": 1,
                "movl %ecx, (%esi);movl $, (%esi);movl %eax, (%esi);movl (%esi), %edi;subl $, %edi": 1,
                "pushl %eax;calll  <NtWriteFile+>;jmp  <NtQueryVolumeInformationFile+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "jae  <NtSetVolumeInformationFile+>;movb (%esi), %al;testb %al, %al;je  <NtSetVolumeInformationFile+>;movzbl %al, %eax": 1,
                "cmpl %edi, (%ebp);je  <NtSetVolumeInformationFile+>;testb $, %bl;je  <NtSetVolumeInformationFile+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "je  <NtSetVolumeInformationFile+>;testb $, %bl;je  <NtSetVolumeInformationFile+>;calll  <ExRaiseDatatypeMisalignment>;movl (%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl ;pushl %esi;pushl -(%ebp)": 1,
                "pushl ;pushl %esi;pushl -(%ebp);calll  <ObReferenceObjectByHandle>;cmpl %edi, %eax": 1,
                "calll  <IoRegisterDeviceInterface+>;cmpl %edi, %eax;jge  <NtSetVolumeInformationFile+>;movl %edi, -(%ebp);testb $, (%esi)": 1,
                "movb $, %al;jmp  <NtSetVolumeInformationFile+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "pushl $;pushl %edi;calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp);cmpl %edi, %eax": 3,
                "jne  <NtSetVolumeInformationFile+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;jmp  <NtSetVolumeInformationFile+>;movb $, (%eax)": 1,
                "cmpl %edi, %ecx;je  <NtSetVolumeInformationFile+>;calll - <ObfDereferenceObject>;movl $, %eax;jmp  <NtSetVolumeInformationFile+>": 1,
                "pushl -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %ebx": 1,
                "cmpl %esi, -(%ebp);jl  <NtSetVolumeInformationFile+>;movw $, -(%ebp);movl %esi, -(%ebp);orl $-, -(%ebp)": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);jmp  <NtReadFile+>;movl , %ecx;testb $, (%ebx)": 1,
                "testl %edx, (%edi);je  <NtReadFile+>;testw %si, %si;je  <NtReadFile+>;movzwl %si, %edi": 1,
                "jne - <NtReadFile+>;testl %eax, %eax;je  <NtReadFile+>;testw %si, %si;je  <NtReadFile+>": 1,
                "je  <NtReadFile+>;cmpl %ecx, %eax;jb  <NtReadFile+>;movl (%ecx), %eax;jmp  <NtReadFile+>": 1,
                "retl;movl -(%ebp), %esp;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %esi": 2,
                "movl (%eax), %eax;movl (%eax), %esi;movl (%ebx), %eax;testb $, %al;je  <NtReadFile+>": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl $, %esi;movl %ebx, %ecx;calll - <ObfDereferenceObject>": 1,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp  <NtReadFile+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);jne  <NtReadFile+>;calll - <IoGetRequestorSessionId+>;pushl -(%ebp);calll - <IoGetRequestorSessionId+>": 1,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);cmpl %esi, (%ebx);je  <NtReadFile+>;pushl %esi": 2,
                "movl -(%ebp), %ecx;jmp  <NtReadFile+>;movb $, -(%ebp);xorl %esi, %esi;cmpl %esi, -(%ebp)": 1,
                "subl $, %edi;pushl $;popl %edx;movl %edx, (%edi);movl %ebx, (%edi)": 1,
                "testb $, %al;je  <NtReadFile+>;cmpl %ecx, (%ebp);je  <NtReadFile+>;movl $, -(%ebp)": 1,
                "jmp - <NtReadFile+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, %eax;jl  <NtReadFile+>;pushl %edi;calll - <IoGetRelatedDeviceObject>;movl %eax, %ecx": 1,
                "testl %eax, %ecx;je  <NtReadFile+>;movl -(%ebp), %ecx;jmp - <NtReadFile+>;shll $, %esi": 1,
                "jae  <NtReadFile+>;movl (%ebp), %eax;movl (%eax,%esi,), %eax;andl $, %eax;orl %ebx, %eax": 1,
                "movl %eax, -(%ebp);cmpl %ebx, (%ebp);je  <NtReadFile+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "cmpl $-, -(%ebp);jne  <NtReadFile+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "movb $, -(%ebp);jmp  <NtReadFile+>;cmpl %ebx, (%ebp);jne  <NtReadFile+>;testw $, %ax": 1,
                "pushl %eax;calll - <KeSetEvent>;movl %edi, %ecx;calll - <ObfDereferenceObject>;movl %edi, %ecx": 2,
                "movl %ebx, (%edi);pushl $;movl -(%ebp), %eax;movsbl (%eax), %eax;pushl %eax": 2,
                "pushl $;calll - <ExRaiseStatus>;pushl $;pushl -(%ebp);pushl (%ebp)": 1,
                "movl -(%ebp), %eax;orl $-, -(%ebp);jmp  <NtReadFile+>;orb $, (%esi);movl (%ebp), %eax": 1,
                "cmpl %eax, %ecx;jb  <NtWriteFile+>;movl %esi, (%eax);movl (%ecx), %eax;movl %eax, (%ecx)": 1,
                "movl %eax, (%ecx);movl (%ecx), %eax;movl %eax, (%ecx);movl (%ebp), %edi;cmpl %esi, (%ebp)": 1,
                "movl (%ecx), %eax;movl %eax, (%ecx);movl (%ebp), %edi;cmpl %esi, (%ebp);je  <NtWriteFile+>": 1,
                "jb  <NtWriteFile+>;cmpl , %eax;jbe  <NtWriteFile+>;calll  <ExRaiseAccessViolation>;movl -(%ebp), %ecx": 1,
                "cmpl , %eax;jbe  <NtWriteFile+>;calll  <ExRaiseAccessViolation>;movl -(%ebp), %ecx;cmpl %esi, (%ecx)": 1,
                "je  <NtWriteFile+>;movzwl %cx, %eax;decl %eax;movl (%ebp), %edx;testl %eax, %edx": 1,
                "decl %eax;movl (%ebp), %edx;testl %eax, %edx;jne  <NtWriteFile+>;movl -(%ebp), %eax": 1,
                "cmpw %si, %cx;je  <NtWriteFile+>;movzwl %cx, %edi;movl (%ebp), %eax;xorl %edx, %edx": 1,
                "jne  <NtWriteFile+>;movl (%ebp), %edi;movl -(%ebp), %eax;testl %edi, (%eax);jne  <NtWriteFile+>": 1,
                "jb  <NtWriteFile+>;movl (%ecx), %eax;jmp  <NtWriteFile+>;movl (%eax), %eax;movl %eax, -(%ebp)": 2,
                "calll - <ObfReferenceObject>;movb $, %al;jmp  <NtWriteFile+>;xorb %al, %al;testb %al, %al": 5,
                "testb %al, %al;jne  <NtWriteFile+>;leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax": 2,
                "calll - <ObfDereferenceObject>;movl %edi, %esi;jmp  <NtWriteFile+>;movb $, -(%ebp);cmpl %esi, (%ebp)": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 2,
                "xchgl %eax, (%ecx);movl -(%ebp), %ecx;cmpl %esi, (%ecx);je  <NtWriteFile+>;pushl %esi": 3,
                "pushl %ecx;pushl (%ebp);pushl -(%ebp);xorl %edi, %edi;incl %edi": 1,
                "testb %al, %al;je  <NtWriteFile+>;cmpl %esi, -(%ebp);jne  <NtWriteFile+>;calll - <IoGetRequestorSessionId+>": 1,
                "orl $-, -(%ebp);xorl %esi, %esi;cmpl %esi, (%ebp);je  <NtWriteFile+>;pushl %esi": 1,
                "pushl %eax;calll - <IoAllocateIrp>;movl %eax, %ebx;movl %ebx, -(%ebp);cmpl %esi, %ebx": 1,
                "movl %esi, (%ebx);movb -(%ebp), %al;movb %al, (%ebx);movb $, (%ebx);movb $, (%ebx)": 1,
                "movb -(%ebp), %al;movb %al, (%ebx);movb $, (%ebx);movb $, (%ebx);movl %esi, (%ebx)": 1,
                "subl $, %edi;movl %edi, -(%ebp);movl $, (%edi);movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "cmpl %esi, (%ebp);je  <NtWriteFile+>;movl $, -(%ebp);pushl $;pushl (%ebp)": 1,
                "calll - <ExAllocatePoolWithQuotaTag>;movl %eax, (%ebx);movl (%ebp), %ecx;movl (%ebp), %esi;movl %eax, %edi": 2,
                "movl %eax, (%ebx);movl (%ebp), %ecx;movl (%ebp), %esi;movl %eax, %edi;movl %ecx, %eax": 2,
                "testb %al, %cl;je  <NtWriteFile+>;cmpl %esi, (%ebp);je  <NtWriteFile+>;movl $, -(%ebp)": 1,
                "pushl $;pushl -(%ebp);pushl %ebx;pushl -(%ebp);calll  <NtWriteFile+>": 1,
                "addl %ecx, %ebx;cmpb $, -(%ebp);je  <NtWriteFile+>;shrl $, %eax;notl %eax": 1,
                "orb $, %al;testb %al, -(%ebp);jne  <NtWriteFile+>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "jb  <NtWriteFile+>;cmpl , %eax;jbe  <NtWriteFile+>;calll  <ExRaiseAccessViolation>;testl %edi, %edi": 1,
                "cmpl $, (%ebp);je  <NtWriteFile+>;pushl $;calll - <ExRaiseStatus>;movl (%ebp), %ebx": 1,
                "testb $, (%eax);je  <NtWriteFile+>;movl -(%ebp), %eax;movw (%eax), %ax;testw %ax, %ax": 1,
                "testw %ax, %ax;je  <NtWriteFile+>;movzwl %ax, %ecx;leal -(%ecx), %eax;testl %eax, %edi": 1,
                "testl %eax, %edi;je  <NtWriteFile+>;movl %edi, %eax;xorl %edx, %edx;divl %ecx": 1,
                "xorl %edx, %edx;divl %ecx;testl %edx, %edx;je  <NtWriteFile+>;pushl $": 1,
                "testl %eax, %ecx;je  <NtWriteFile+>;pushl $;calll - <ExRaiseStatus>;movl (%ebp), %eax": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;jmp  <NtWriteFile+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %ebx;testl %eax, %eax;je  <NtWriteFile+>;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "testb $, %al;je  <NtWriteFile+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;xchgl %eax, (%ecx);movl -(%ebp), %edi;testl %eax, %eax;jne  <NtWriteFile+>": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);jne  <NtWriteFile+>;cmpl %ebx, -(%ebp);je  <NtWriteFile+>": 1,
                "movl -(%ebp), %ebx;movl %ebx, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);xorl %eax, %eax": 1,
                "movl (%ebp), %ebx;pushl (%ebx);calll - <IoAllocateMdl>;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <NtWriteFile+>;pushl $;calll - <ExRaiseStatus>": 2,
                "je  <NtWriteFile+>;pushl %eax;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "testb $, (%eax);je  <NtWriteFile+>;orw $, (%esi);jmp  <NtWriteFile+>;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);calll  <NtWriteFile+>;cmpl $, -(%ebp);je  <NtWriteFile+>": 1,
                "movl -(%ebp), %eax;orl $-, -(%ebp);jmp  <NtWriteFile+>;orb $, (%esi);movl (%ebp), %eax": 1,
                "pushl %esi;pushl -(%ebp);calll  <NtWriteFile+>;jmp  <NtWriteFile+>;movl %esi, %ecx": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;jmp  <NtWriteFile+>": 1,
                "je  <NtWriteFile+>;cmpl %ecx, %eax;jg  <NtWriteFile+>;testb $, %cl;jne  <NtWriteFile+>": 1,
                "xorl %eax, %eax;jmp - <NtWriteFile+>;int;int;int": 2,
                "cmpl %ebx, %esi;jne  <NtWriteFile+>;movl %edi, %ecx;calll - <ObfDereferenceObject>;movl $, %eax": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);movb $, %cl;calll *;movl (%esi), %edx": 2,
                "jge  <NtWriteFile+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;movl %edi, %eax": 1,
                "jmp  <NtWriteFile+>;movl (%ebp), %eax;movl %esi, (%eax);xorl %eax, %eax;popl %edi": 1,
                "leal (%eax,%eax), %esi;andl $-, %esi;movl $, %ebx;pushl %ebx;addl $, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <ZwQueryValueKey>;movl %eax, %esi": 1,
                "calll - <ExFreePoolWithTag>;cmpl $, %esi;je  <NtWriteFile+>;cmpl $, %esi;jne  <NtWriteFile+>": 1,
                "pushl %ebx;pushl -(%ebp);pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %edi": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %edi;pushl $;pushl %eax": 4,
                "leal -(%ebp), %eax;pushl %edi;pushl $;pushl %eax;pushl (%ebp)": 1,
                "movl %esi, %eax;jmp  <NtWriteFile+>;movl (%ebp), %eax;movl %edi, (%eax);xorl %eax, %eax": 1,
                "andl $, (%eax);andl $, (%eax);pushl %esi;pushl %edi;pushl %eax": 1,
                "pushl %edi;pushl %eax;pushl $;pushl (%ebp);leal (%eax), %esi": 1,
                "addl $, %esi;pushl %esi;pushl $;pushl (%ebp);calll - <NtWriteFile+>": 1,
                "pushl %ebx;pushl %eax;pushl (%ebp);movl %eax, (%ebp);calll - <IoBuildDeviceIoControlRequest>": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl %eax;pushl %ebx": 1,
                "movl $, %eax;jmp  <NtWriteFile+>;orl $, (%esi);leal -(%ebp), %eax;movl %eax, (%esi)": 1,
                "pushl %esi;xorl %ebx, %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "pushl %ecx;movl (%ebp), %eax;pushl %esi;pushl (%ebp);movl $, %esi": 1,
                "pushl %esi;pushl (%ebp);movl $, %esi;movl %eax, (%ebp);calll - <IoGetRelatedDeviceObject>": 1,
                "popal;addb %ah, (%edi);addb %dl, %gs:(%eax);popal;addb %dh, (%eax,%eax)": 2,
                "je  <NtWriteFile+>;addb %ch, %gs:(%ebp);xorl (%eax), %eax;xorb (%eax), %al;popl %esp": 1,
                "popl %ecx;addb %dl, (%ebx);addb %al, (%eax);int;int": 1,
                "addl %ecx, %eax;leal (%eax,%edi), %eax;movw %ax, (%ebx);movzwl %ax, %eax;pushl $": 1,
                "movl (%ebx), %edi;addl (%ebp), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "calll - <IoCreateStreamFileObjectLite>;movl %eax, -(%ebp);movl (%esi), %ecx;movl %ecx, (%eax);movl %ebx, -(%ebp)": 1,
                "cmpl $, %eax;jne  <NtWriteFile+>;movl $, -(%ebp);jmp  <NtWriteFile+>;movl $, -(%ebp)": 2,
                "movl $, -(%ebp);movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %eax;movl (%eax), %edi;cmpl %eax, %edi;je  <NtWriteFile+>": 1,
                "movl -(%ebp), %esi;movl $, %ecx;calll - <ExReleaseResourceLite>;incl (%esi);jne  <NtWriteFile+>": 1,
                "calll *;movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <NtWriteFile+>;calll - <ObfDereferenceObject>": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);calll - <ZwOpenKey>;leave": 1,
                "movw (%eax), %ax;movl %ecx, -(%ebp);movw %ax, -(%ebp);movw $, -(%ebp);jmp  <NtWriteFile+>": 1,
                "pushl $;popl %ebx;movl $, (%ebp);movl %edi, -(%ebp);movl %fs:, %eax": 1,
                "pushl (%eax);calll - <KeStackAttachProcess>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;movl -(%ebp), %edi;pushl $": 1,
                "testl %ebx, %ebx;jl  <NtWriteFile+>;cmpl $, -(%ebp);jne  <NtWriteFile+>;movl (%esi), %eax": 1,
                "movl (%eax), %ecx;movzbl (%eax), %eax;movl (%ecx), %edx;pushl %esi;pushl %ecx": 1,
                "andl $, (%esi);movl %esi, %ecx;jmp  <NtWriteFile+>;pushl %ebx;pushl %edi": 1,
                "movl %ebx, (%ecx);movb $, %dl;calll - <IofCompleteRequest>;popl %edi;popl %esi": 1,
                "xorl %eax, %eax;cmpl %eax, (%esi);setne %al;cmpb $, ;je  <NtWriteFile+>": 1,
                "cmpl %eax, (%esi);setne %al;cmpb $, ;je  <NtWriteFile+>;leal -(%ebp), %ecx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ebp), %eax;movsl (%esi), %es:(%edi)": 1,
                "popl %edi;addl $, %eax;popl %esi;movl %eax, (%edx);popl %ebx": 1,
                "cmpl $, %ecx;jbe  <NtWriteFile+>;pushl $;popl %ecx;movl (%ebp), %edi": 1,
                "testl %eax, %eax;je  <NtWriteFile+>;testl %esi, %esi;movl %eax, -(%ebp);je  <NtWriteFile+>": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "pushl $;calll - <wctomb+>;movl (%ebp), %esi;cmpl $, %esi;jne  <NtWriteFile+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;addl $-, %eax;pushl %eax": 2,
                "pushl %eax;calll - <IoFreeIrp>;popl %ebp;retl $;int": 2,
                "calll - <IoFreeIrp>;popl %ebp;retl $;int;decl %esi": 1,
                "movw %ax, -(%ebp);movzwl %ax, %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "movl %eax, -(%ebp);jne  <NtWriteFile+>;xorb %al, %al;jmp  <NtWriteFile+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlCopyUnicodeString>;pushl $;leal -(%ebp), %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>;testl %eax, %eax;jl  <NtWriteFile+>": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <NtWriteFile+>;pushl %ebx": 1,
                "addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %ch, (%esi);je  <NtWriteFile+>": 1,
                "xorl %esi, %esi;cmpl %esi, %ecx;movl $, -(%ebp);jne  <NtWriteFile+>;xorl %eax, %eax": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ZwCreateFile>;movl %eax, %ebx;cmpl %esi, %ebx": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <NtWriteFile+>;incb %bl;movl (%esi), %eax": 1,
                "cmpl %edx, (%ebx);jne  <NtWriteFile+>;movl %ebx, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "pushl %edx;pushl (%ebp);leal (%esi), %eax;pushl (%ebp);pushl %edx": 1,
                "pushl %edx;pushl %eax;calll - <KeWaitForSingleObject>;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "je  <NtWriteFile+>;calll - <ObfDereferenceObject>;pushl %esi;movl (%ebp), %esi;testb $, (%esi)": 1,
                "calll - <KeSetEvent>;movl %esi, %ecx;calll - <ObfDereferenceObject>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "jl  <NtWriteFile+>;cmpl $, -(%ebp);jb  <NtWriteFile+>;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl $;pushl (%ebp);calll - <NtWriteFile+>;testl %eax, %eax;jl  <NtWriteFile+>": 1,
                "movw %ax, (%edx);movw (%edi), %ax;movzwl (%edx), %ecx;movw %ax, (%edx);movl (%edi), %eax": 1,
                "movl %edi, %esi;je  <NtWriteFile+>;movw (%eax), %bx;movw %bx, (%esi);incl %esi": 1,
                "movl (%ebp), %esi;movw $, (%esi);movl (%edi), %eax;addl %edi, %eax;movl (%eax), %eax": 1,
                "calll - <ExFreePoolWithTag>;pushl $;pushl %edi;calll - <ExFreePoolWithTag>;xorl %eax, %eax": 1,
                "calll - <ExFreePoolWithTag>;xorl %eax, %eax;jmp  <NtWriteFile+>;pushl %ebx;pushl %edi": 1,
                "pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>;movl $, %eax;popl %edi": 1,
                "testl $, %eax;movl $, -(%ebp);movl %ecx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "calll - <IoCreateFile>;cmpl %ebx, %eax;movl %eax, (%ebp);jl  <NtWriteFile+>;movl (%ebp), %eax": 1,
                "movl %eax, -(%ebp);jne  <NtWriteFile+>;cmpb %bl, (%esi);jne  <NtWriteFile+>;cmpl $, -(%ebp)": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %ebx;pushl ": 1,
                "pushl %edi;pushl %ebx;calll - <NtWriteFile+>;cmpb $, (%ebp);movl %eax, %esi": 1,
                "movl %eax, %esi;cmpl %edi, %esi;jne  <NtWriteFile+>;pushl %edi;pushl %ebx": 1,
                "movb $, (%esi);je  <NtWriteFile+>;movl %edi, (%esi);jmp  <NtWriteFile+>;leal -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl %ebx, (%eax);orl $, (%esi);movl %ecx, (%esi);movl (%ebp), %ecx": 1,
                "jmp  <NtWriteFile+>;pushl %esi;pushl %esi;pushl %edi;calll - <KeSetEvent>": 1,
                "pushl $;popl %ecx;leal (%ebx), %edx;pushl $;xorl %eax, %eax": 1,
                "pushl %eax;xorl %edi, %edi;pushl %ebx;movw $, (%ebx);movw $, (%ebx)": 1,
                "jne  <NtWriteFile+>;movl $, -(%ebp);xorl %esi, %esi;jmp - <NtWriteFile+>;movl $, %eax": 1,
                "subl $, %eax;je  <NtWriteFile+>;decl %eax;je  <NtWriteFile+>;decl %eax": 1,
                "calll *;movb %al, (%ebp);leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;leal (%ebx), %eax": 1,
                "leal (%ebx), %eax;pushl %eax;calll - <RtlVolumeDeviceToDosName+>;movb (%ebp), %cl;calll *%esi": 1,
                "je  <NtWriteFile+>;cmpl $, %eax;jne  <NtWriteFile+>;movl (%ebp), %eax;pushl %ebx": 1,
                "jb  <NtWriteFile+>;orl $-, -(%ebp);jmp  <NtWriteFile+>;pushl %ebx;pushl -(%ebp)": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <NtWriteFile+>;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %edi;movl $, -(%ebp);movl -(%ebp), %esi;movl (%esi), %eax;testb $, (%eax)": 1,
                "pushl $;pushl $;testb $, (%eax);leal -(%ebp), %eax;pushl %eax": 1,
                "xorl %esi, %esi;jmp  <NtWriteFile+>;cmpl %ebx, %eax;jl  <NtWriteFile+>;pushl %ebx": 1,
                "jl  <NtWriteFile+>;pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 3,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <NtWriteFile+>;movl %eax, -(%ebp)": 4,
                "pushl -(%ebp);calll - <NtWriteFile+>;movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <NtWriteFile+>": 2,
                "leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movb -(%ebp), %al;andw $, %ax;movb %al, -(%ebp)": 2,
                "movl -(%ebp), %esi;jmp  <NtWriteFile+>;calll - <NtWriteFile+>;movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "calll - <RtlCompareMemoryUlong>;cmpl $, %eax;je - <NtWriteFile+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jge  <NtWriteFile+>;pushl $;pushl $": 1,
                "calll - <NtWriteFile+>;movl %eax, -(%ebp);cmpl %ebx, %eax;jl - <NtWriteFile+>;pushl $": 1,
                "jl - <NtWriteFile+>;pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "jl - <NtWriteFile+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jmp  <NtWriteFile+>;pushl -(%ebp);pushl %ebx;pushl %esi;calll - <NtWriteFile+>": 1,
                "pushl %ebx;pushl -(%ebp);calll - <KeSetEvent>;retl;int": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi;andl $, %esi;movl %esi, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %ecx;movl , %eax;cmpl %eax, %ecx;jb  <NtWriteFile+>": 1,
                "movl (%ebp), %ecx;movl , %eax;cmpl %eax, %ecx;jb  <NtWriteFile+>;movl %ebx, (%eax)": 1,
                "movl %ebx, (%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "cmpl %ebx, (%esi);je  <NtWriteFile+>;cmpl %ebx, (%ebp);je  <NtWriteFile+>;movl $, %edi": 1,
                "retl;movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <NtWriteFile+>;cmpb $, -(%ebp)": 1,
                "je  <NtWriteFile+>;movl -(%ebp), %ecx;andl %eax, %ecx;cmpl %eax, %ecx;je  <NtWriteFile+>": 1,
                "testb %al, %al;jne  <NtWriteFile+>;leal -(%ebp), %eax;pushl %eax;movl (%esi), %eax": 2,
                "je  <NtWriteFile+>;movl (%esi), %eax;pushl $;pushl -(%ebp);pushl -(%ebp)": 1,
                "xorl %eax, %eax;movb (%edi), %al;pushl %eax;calll - <IoAllocateIrp>;movl %eax, %ebx": 1,
                "movl %ecx, (%ebx);movl (%ebp), %ecx;movl %ecx, (%ebx);movl (%ebp), %ecx;movl %ecx, (%ebx)": 2,
                "movl %edi, -(%ebp);xorl %ecx, %ecx;cmpb %cl, (%ebp);setne %cl;addl $, %ecx": 1,
                "movb (%ebp), %dl;negb %dl;sbbl %edx, %edx;andl $, %edx;movl %edx, -(%ebp)": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl -(%ebp), %edx;cmpl %eax, %edx;je  <NtWriteFile+>": 1,
                "movl (%ebp), %eax;movl %eax, (%edi);jmp  <NtWriteFile+>;movl %eax, (%ebx);movl %eax, (%edi)": 1,
                "movl $, -(%ebp);cmpl %eax, %ecx;je  <NtWriteFile+>;cmpl %eax, (%ebp);je  <NtWriteFile+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl $, (%ebx);movl -(%ebp), %edi": 1,
                "andb $, %al;orb %al, (%edi);movb (%edi), %al;movb -(%ebp), %cl;andb $, %cl": 1,
                "cmpb $, (%ebp);sete %al;pushl %eax;pushl %esi;pushl %ebx": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);calll - <NtWriteFile+>;orl $-, -(%ebp)": 1,
                "addb %al, (%eax);orl $, %eax;addb %al, (%eax);addb %ah, ;addb %al, (%eax)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;testl %eax, %eax": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>;pushl $": 1,
                "calll - <RtlAppendUnicodeStringToString>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "movl %edx, (%eax);leal -(%ebp), %eax;pushl $;pushl %eax;calll - <swprintf>": 1,
                "calll - <NtWriteFile+>;testl %eax, %eax;jl  <NtWriteFile+>;pushl $;pushl %esi": 1,
                "calll  <RtlFreeUnicodeString>;movl , %ecx;addl $, %ecx;calll - <ExReleaseResourceLite>;movl -(%ebp), %ecx": 1,
                "andl $, %eax;andl $, %eax;orb (%eax), %al;addb %al, (%eax);andl $, %eax": 1,
                "pushl $;addl $, %ecx;movl %eax, %esi;decl (%esi);pushl %ecx": 1,
                "movl %eax, %esi;decl (%esi);pushl %ecx;calll - <ExAcquireResourceExclusiveLite>;movl , %eax": 1,
                "calll - <ExFreePoolWithTag>;pushl -(%ebp);calll - <ZwDeleteKey>;pushl -(%ebp);calll - <ZwClose>": 1,
                "jb - <NtWriteFile+>;pushl -(%ebp);calll - <ZwDeleteKey>;pushl -(%ebp);calll - <ZwClose>": 1,
                "pushl %ecx;pushl %eax;calll - <RtlVolumeDeviceToDosName+>;popl %ebp;retl $": 1,
                "popl %ebp;retl $;addb %dl, %cs:(%ebx);popl %ecx;addb %dl, (%ebx)": 1,
                "popl %ecx;addb %dl, (%ebx);addb %al, (%eax);addb %al, (%eax);incl %edi": 1,
                "addb %al, (%eax);incl %edi;addb %dh, (%edx);outsl (%esi), %dx;addb %dh, (%ebp)": 3,
                "addb %dh, (%edx);incl %ebx;addb %ch, (%edi);outsb (%esi), %dx;addb %dh, (%eax,%eax)": 2,
                "cmpl %ebx, %esi;movl %esi, -(%ebp);je  <NtWriteFile+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movw %cx, -(%ebp);movzwl %cx, %ecx;movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "cmpl %ebx, ;je  <NtWriteFile+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <NtWriteFile+>;movl -(%ebp), %eax": 1,
                "calll - <NtWriteFile+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <NtWriteFile+>;pushl $;movl $, %esi;pushl %esi;calll - <ExAcquireResourceSharedLite>": 1,
                "calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);je  <NtWriteFile+>;pushl %ebx;pushl -(%ebp)": 3,
                "movl -(%ebp), %esi;cmpl %ebx, (%esi);je  <NtWriteFile+>;movl (%esi), %eax;pushl (%eax,%esi)": 1,
                "cmpl %ebx, (%esi);je  <NtWriteFile+>;movl (%esi), %eax;pushl (%eax,%esi);calll  <LsaDeregisterLogonProcess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <NtWriteFile+>;cmpl %ebx, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <NtWriteFile+>;cmpl $, -(%ebp);jne  <NtWriteFile+>": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);calll  <NtClose>;cmpl %ebx, -(%ebp);jl  <NtWriteFile+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <NtWriteFile+>;jmp  <NtWriteFile+>;movl %fs:, %eax": 1,
                "je  <NtWriteFile+>;movw -(%ebp), %cx;movw %cx, (%edi);movw -(%ebp), %cx;movw %cx, (%edi)": 1,
                "calll  <ObMakeTemporaryObject>;movl %edi, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp);jmp  <NtWriteFile+>": 1,
                "calll  <ObQueryNameString+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jge  <NtWriteFile+>;pushl %edi": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %edi;pushl -(%ebp);pushl %edi;calll *(%edi)": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %eax;leal (%edi,%eax,), %eax;cmpl %ebx, (%eax);jne  <NtWriteFile+>": 1,
                "calll - <IoReportTargetDeviceChangeAsynchronous+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jge  <NtWriteFile+>;movl (%edi), %eax": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <NtWriteFile+>;cmpl %ebx, -(%ebp)": 1,
                "calll - <NtWriteFile+>;movl %eax, %edi;cmpl $, %edi;jne  <NtWriteFile+>;movl -(%ebp), %edi": 1,
                "jmp  <NtWriteFile+>;cmpl $, %edi;jne  <NtWriteFile+>;movl $, %edi;calll - <NtWriteFile+>": 1,
                "je  <NtWriteFile+>;calll  <ExRaiseDatatypeMisalignment>;leal (%ebx,%esi), %eax;cmpl %ebx, %eax;jb  <NtWriteFile+>": 1,
                "movl %ebx, (%esi);pushl %esi;calll - <IoGetRelatedDeviceObject>;movl %eax, -(%ebp);pushl $": 1,
                "pushl %eax;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;pushl %esi": 1,
                "pushl -(%ebp);pushl $;pushl -(%ebp);pushl -(%ebp);calll - <NtWriteFile+>": 1,
                "pushl $;pushl -(%ebp);pushl -(%ebp);calll - <NtWriteFile+>;orl $-, -(%ebp)": 1,
                "pushl $;pushl -(%ebp);pushl -(%ebp);pushl $;pushl %esi": 1,
                "pushl $;pushl %esi;pushl %ebx;pushl -(%ebp);calll - <NtWriteFile+>": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ": 6,
                "pushl %edi;addl $, %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "incl %eax;movw %ax, -(%ebp);pushl %edi;leal -(%ebp), %eax;pushl %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl ;calll  <RtlAnsiStringToUnicodeString>;movl , %eax": 1,
                "jbe  <NtWriteFile+>;addl $-, %ecx;movw %cx, (%eax);movl (%eax), %eax;movzwl %cx, %ecx": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;movl , %eax;addl $, %eax": 1,
                "movl , %eax;movl (%ebp), %ecx;incl %ecx;pushl %ecx;addl $, %eax": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <KeWaitForSingleObject>;pushl $": 2,
                "pushl %eax;calll - <KeWaitForSingleObject>;pushl $;pushl $;pushl %edi": 1,
                "movl $, (%ebp);movl %edi, -(%ebp);jmp  <NtWriteFile+>;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "movl %eax, %ebx;incl %ecx;movl (%ebx), %eax;cmpl %edx, %eax;jne - <NtWriteFile+>": 1,
                "movl -(%ebp), %eax;movl %edx, -(%ebp);movsbl (%eax), %eax;addb %cl, %al;pushl %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl (%esi), %eax;movl $, (%esi);movb $, (%esi)": 1,
                "jmp  <NtWriteFile+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl (%ebp), %eax;popl %ebx": 1,
                "calll - <ObfDereferenceObject>;movl (%ebp), %eax;popl %ebx;popl %edi;popl %esi": 1,
                "movl -(%ebp), %esi;cmpl $, (%ebp);jge  <NtWriteFile+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "negb %al;sbbl %eax, %eax;andl $, %eax;movl %eax, (%ebp);movl $, %ecx": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);je  <NtWriteFile+>;addb %al, (%eax);int": 1,
                "pushl %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 2,
                "addb %ah, (%eax);addb %dl, (%eax);outsl (%esi), %dx;addb %dh, (%eax);jne  <NtWriteFile+>": 1,
                "jne  <NtWriteFile+>;jo  <NtWriteFile+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "calll - <RtlVolumeDeviceToDosName+>;testl %eax, %eax;je  <NtWriteFile+>;movzwl -(%eax), %ecx;addl $-, %eax": 1,
                "leal -(%ecx), %edx;addl $-, %ecx;movl %edx, -(%ebp);movl %ecx, %edx;shrl $, %ecx": 1,
                "movl (%eax), %ecx;movl %ecx, (%ebx);movw $, (%ebx);cmpw $, (%eax);movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);je  <NtWriteFile+>;movl (%ecx), %edx;testl %edx, %edx;je  <NtWriteFile+>": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;movzwl -(%ebp), %ecx;leal -(%esi), %edx;cmpl %edx, %ecx": 1,
                "addl %edx, -(%ebp);incw (%ebx);subl %edx, %ecx;movl %edx, -(%ebp);leal (%eax), %edx": 1,
                "movl -(%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "jmp  <NtWriteFile+>;movl $, %eax;pushl %eax;movl %eax, -(%ebp);calll - <wcslen>": 1,
                "decl %edx;decl %edx;cmpw $, (%edx);jne - <NtWriteFile+>;cmpw $, (%edx)": 1,
                "movb %al, ;popl %esi;retl;pushl %edi;pushl $": 1,
                "popl %esi;retl;pushl %edi;pushl $;pushl $": 1,
                "pushl $;pushl $;pushl %esi;calll - <KeInitializeDpc>;leal (%esi), %edi": 1,
                "calll - <IoQueryFileInformation>;testl %eax, %eax;jl  <NtWriteFile+>;movl (%ebp), %ecx;movl (%ecx), %edx": 1,
                "cmpl $, (%eax);jne  <NtWriteFile+>;pushl $;popl %eax;movl %eax, -(%ebp)": 1,
                "pushl (%esi);calll  <ObQueryNameString>;movl %eax, -(%ebp);testl %eax, %eax;jge  <NtWriteFile+>": 1,
                "je  <NtWriteFile+>;pushl $;pushl (%ebx);calll - <ExFreePoolWithTag>;movl (%ebp), %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %edi;movl -(%ebp), %ecx;movl %ecx, (%eax);movzwl (%ebx), %eax": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);cmpb $, -(%ebp);je  <NtWriteFile+>;movl %eax, -(%ebp)": 1,
                "jne - <NtWriteFile+>;movl $, -(%ebp);andl $, (%ebx);movw $, (%ebx);andl $, -(%ebp)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);addl -(%ebp), %eax": 1,
                "movl %edx, (%ecx);movl (%ebp), %ecx;subl %ecx, %eax;movl %eax, -(%ebp);leal -(%eax), %edx": 1,
                "orl $, %eax;testl $, %edi;movl %eax, (%esi);movl %edi, (%ebp);je  <NtWriteFile+>": 1,
                "andl $, %edi;je  <NtWriteFile+>;movl , %eax;pushl (%ebp);andl $, -(%ebp)": 1,
                "je  <NtWriteFile+>;movl , %eax;pushl (%ebp);andl $, -(%ebp);movl %eax, -(%ebp)": 2,
                "orl %edi, (%esi);andl $, (%esi);orl $, (%esi);cmpb $, -(%ebp);popl %edi": 1,
                "pushl $;pushl $;calll - <wctomb+>;movb $, -(%ebp);andl $, -(%ebp)": 1,
                "andl $, -(%ebp);movb $, -(%ebp);movl %fs:, %eax;movl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %eax;andl $, (%eax);testl %edi, %edi": 1,
                "pushl %eax;pushl %esi;calll - <NtWriteFile+>;movb (%edi), %cl;testb %cl, %cl": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <NtWriteFile+>;testb $, (%eax);je  <NtWriteFile+>": 1,
                "movb %al, -(%ebp);cmpl $, -(%ebp);je  <NtWriteFile+>;pushl -(%ebp);pushl %esi": 3,
                "pushl %eax;pushl $;pushl $;pushl $;leal (%esi), %eax": 1,
                "movl $, %eax;jmp  <NtWriteFile+>;cmpb $, (%edi);jne  <NtWriteFile+>;cmpb $, (%edi)": 1,
                "cmpl %ecx, (%edi);jne  <NtWriteFile+>;testl $, -(%ebp);jne  <NtWriteFile+>;cmpb %cl, -(%ebp)": 1,
                "cmpl %ecx, (%eax);je  <NtWriteFile+>;cmpb $, -(%ebp);jne  <NtWriteFile+>;leal -(%ebp), %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);testb $, (%edi);jne - <NtWriteFile+>;movl -(%ebp), %eax": 1,
                "testb $, (%edi);jne - <NtWriteFile+>;movl -(%ebp), %eax;cmpl $, (%eax);je  <NtWriteFile+>": 1,
                "movl -(%ebp), %eax;testb $, (%eax);je  <NtWriteFile+>;cmpl $, (%edi);jne  <NtWriteFile+>": 1,
                "pushl -(%ebp);pushl $;pushl -(%ebp);movl -(%ebp), %eax;pushl (%eax)": 1,
                "pushl %eax;calll  <SeOpenObjectAuditAlarm>;pushl -(%ebp);calll  <SeUnlockSubjectContext>;movl $, %ecx": 1,
                "testb $, (%ebp);jne  <NtWriteFile+>;orb $-, %cl;movb %cl, (%eax);jmp  <NtWriteFile+>": 1,
                "movw %cx, (%eax);movw (%edi), %cx;movw %cx, (%eax);leal -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl -(%ebp), %eax;jmp - <NtWriteFile+>;pushl (%ebp);pushl %ebx;calll - <RtlVolumeDeviceToDosName+>": 1,
                "popl %ecx;xorl %eax, %eax;movl %ebx, %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %eax": 1,
                "testb $, (%eax);je  <NtWriteFile+>;movl $, (%ebx);movl %edi, %eax;addl $, %eax": 1,
                "movl %eax, (%ebx);testb $, (%edi);je  <NtWriteFile+>;movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "leal (%edx), %ebx;movl %ebx, -(%ebp);movl , %eax;movl %eax, (%edx);movl $, (%edx)": 1,
                "movl %ebx, -(%ebp);movl , %eax;movl %eax, (%edx);movl $, (%edx);movl (%ebp), %edi": 1,
                "cmpw $, (%ebx);je  <NtWriteFile+>;pushl $;pushl (%ebx);calll - <ExFreePoolWithTag>": 1,
                "addl $, %edx;movl (%edx), %ecx;movl %ecx, (%edi);movl %edx, (%edi);movl %edi, (%ecx)": 1,
                "movl (%edx), %ecx;movl %ecx, (%edi);movl %edx, (%edi);movl %edi, (%ecx);movl %edi, (%edx)": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "xorl %edi, %edi;movl -(%ebp), %eax;movl (%ebp), %esi;movl %eax, (%esi);cmpl %edi, -(%ebp)": 1,
                "jmp  <NtWriteFile+>;cmpw %di, (%ebx);je  <NtWriteFile+>;pushl %edi;pushl (%ebx)": 1,
                "cmpw %di, (%ebx);je  <NtWriteFile+>;pushl %edi;pushl (%ebx);calll - <ExFreePoolWithTag>": 3,
                "calll - <RtlVolumeDeviceToDosName+>;movl %edi, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);jmp  <NtWriteFile+>": 1,
                "movl $, %eax;jmp  <NtWriteFile+>;pushl %ebx;calll - <IoGetRelatedDeviceObject>;movl %eax, -(%ebp)": 1,
                "cmpl %edi, %eax;je  <NtWriteFile+>;leal (%eax), %edx;pushl $;popl %ecx": 1,
                "movl %edi, -(%ebp);xorl %edx, %edx;incl %edx;movl %edx, -(%ebp);cmpl %edi, %ecx": 1,
                "movl (%ecx), %ecx;cmpl %edi, %ecx;je  <NtWriteFile+>;pushl -(%ebp);leal -(%ebp), %eax": 2,
                "pushl %ebx;calll - <IoQueryFileInformation>;movl %eax, -(%ebp);cmpl %edi, %eax;jl  <NtWriteFile+>": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %esi;movl (%ebp), %eax;movl (%eax), %edi;movl %ecx, %eax": 1,
                "movl -(%ebp), %esp;cmpl $, -(%ebp);je  <NtWriteFile+>;pushl $;pushl -(%ebp)": 2,
                "jmp  <NtWriteFile+>;cmpl %edi, %ecx;je  <NtWriteFile+>;cmpl $, (%ecx);jbe  <NtWriteFile+>": 1,
                "pushl %ebx;calll - <IoQueryFileInformation>;movl %eax, -(%ebp);cmpl %edi, %eax;jge  <NtWriteFile+>": 1,
                "calll - <IoGetRelatedDeviceObject>;pushl (%ebp);movl %edi, (%esi);pushl (%ebp);pushl %esi": 1,
                "calll  <IoReportResourceUsage+>;movl (%esi), %eax;testl %eax, %eax;je  <NtWriteFile+>;pushl $": 1,
                "pushl %edi;calll - <IoGetRelatedDeviceObject>;movl %eax, %esi;movl %esi, (%ebp);jmp  <NtWriteFile+>": 1,
                "calll - <IoGetAttachedDevice>;movl %eax, (%ebp);movl %eax, %esi;testb $, (%edi);movl (%esi), %eax": 1,
                "cmpl %ebx, %eax;jne  <NtWriteFile+>;movl %edi, %ecx;calll - <ObfReferenceObject>;jmp  <NtWriteFile+>": 2,
                "xorl %eax, %eax;movb $, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, (%edi)": 1,
                "calll - <ObfReferenceObject>;movb $, %cl;calll *;movl (%esi), %edx;leal (%esi), %ecx": 1,
                "subl $, %eax;movb $, (%esi);movl %ebx, (%esi);movl $, (%esi);movb $, %cl": 1,
                "movb $, %cl;calll *;movl (%ebx), %ecx;movl (%ebx), %edx;movl %edx, (%ecx)": 1,
                "movl %edi, -(%ebp);je  <NtWriteFile+>;testb $, (%ebx);jne  <NtWriteFile+>;pushl %ebx": 1,
                "movl -(%ebp), %eax;pushl %esi;movb $, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%esi), %eax;subl $, %eax;movb $, (%eax);movl %ebx, (%eax);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);je  <NtWriteFile+>;testb $, (%ebx);jne  <NtWriteFile+>;pushl $": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;pushl (%eax);calll  <IoReportResourceUsage+>": 1,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "testl %ecx, %ecx;popl %esi;je  <NtWriteFile+>;calll - <ObfDereferenceObject>;leave": 1,
                "jl  <NtWriteFile+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "decl (%esi);pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "pushl $;pushl %ebx;calll  <ObDereferenceSecurityDescriptor>;movl -(%ebp), %eax;popl %edi": 1,
                "pushl %ebx;calll  <ObDereferenceSecurityDescriptor>;movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "movl (%esi), %edi;testl %edi, %edi;je  <NtWriteFile+>;movl %edi, %ecx;calll - <ObfReferenceObject>": 1,
                "movl %edi, %ecx;calll - <ObfReferenceObject>;movl %esi, %ecx;calll - <ObfDereferenceObject>;testl %edi, %edi": 1,
                "jne  <NtWriteFile+>;cmpl %esi, (%ebx);je  <NtWriteFile+>;testb $, (%ebx);jne  <NtWriteFile+>": 1,
                "pushl -(%ebp);pushl %ebx;calll - <NtWriteFile+>;movl %eax, %esi;cmpb $, -(%ebp)": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movb $, -(%ebp);movl %esi, (%ebx)": 1,
                "movb %cl, (%esi);testb $, (%ebx);je  <NtWriteFile+>;movl %eax, (%esi);jmp  <NtWriteFile+>": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %edi;cmpl $, %edi;jne  <NtWriteFile+>": 1,
                "jne  <NtWriteFile+>;cmpl $, (%ebp);jne  <NtWriteFile+>;andl $, -(%ebp);pushl (%ebp)": 1,
                "cmpl $, %edi;jne  <NtWriteFile+>;movl $, %edi;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edi;jmp - <NtWriteFile+>;cmpl $, (%ebp);jne  <NtWriteFile+>;xorl %edi, %edi": 1,
                "pushl (%ebp);calll  <ObLogSecurityDescriptor>;movl %eax, %edi;pushl %esi;pushl (%ebp)": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;calll - <ExReleaseResourceLite>;incl (%esi);jne  <NtWriteFile+>;movl -(%ebp), %ecx": 1,
                "cmpl %eax, (%eax);je  <NtWriteFile+>;movb $, (%ecx);movb $, %cl;calll *": 1,
                "cmpl %esi, (%ebp);jne  <NtWriteFile+>;pushl -(%ebp);calll - <RtlVolumeDeviceToDosName+>;movl %eax, %ebx": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);cmpl %esi, %ebx;je  <NtWriteFile+>": 1,
                "pushl (%ebp);cmpl %esi, %ebx;je  <NtWriteFile+>;pushl %ebx;pushl -(%ebp)": 1,
                "calll - <NtWriteFile+>;movl %eax, %edi;movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp  <NtWriteFile+>": 1,
                "calll - <ObfDereferenceObject>;jmp  <NtWriteFile+>;pushl -(%ebp);calll - <NtWriteFile+>;movl %eax, %edi": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll  <SeQuerySecurityDescriptorInfo>": 2,
                "jne  <NtWriteFile+>;movl $, %eax;jmp  <NtWriteFile+>;movl %esi, -(%ebp);movl (%ebp), %edx": 1,
                "movl $, %eax;jmp  <NtWriteFile+>;movl %esi, -(%ebp);movl (%ebp), %edx;movl , %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl %ebx, -(%ebp)": 3,
                "je  <NtWriteFile+>;pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "cmpl $, (%ebp);je  <IoInitializeRemoveLockEx+>;cmpl $, (%ebp);jne  <IoInitializeRemoveLockEx+>;movl (%ebp), %eax": 1,
                "movb $, (%esi);movl %edx, (%ebp);movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl %edx, (%ebp);movl $, %eax": 1,
                "pushl %edi;pushl %edi;leal (%esi), %eax;pushl %eax;calll - <KeWaitForSingleObject>": 3,
                "cmpl %ebx, %edi;je  <IoAssignResources+>;movswl (%edi), %eax;pushl %eax;pushl %edi": 1,
                "cmpw %bx, (%eax);je  <IoAssignResources+>;pushl $;pushl %eax;calll - <IoCsqRemoveIrp+>": 4,
                "je  <IoAssignResources+>;pushl $;pushl %eax;calll - <IoCsqRemoveIrp+>;movl (%esi), %eax": 5,
                "movl $, %esi;jmp  <IoSynchronousInvalidateDeviceRelations+>;cmpb %bl, ;je  <IoSynchronousInvalidateDeviceRelations+>;cmpl $, (%eax)": 1,
                "jmp  <IoSynchronousInvalidateDeviceRelations+>;movl $, %esi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;pushl %edi;pushl %edi;pushl %edi": 1,
                "jb  <IoSynchronousInvalidateDeviceRelations+>;jbe  <IoSynchronousInvalidateDeviceRelations+>;imull $, (%eax), %eax;addb %al, (%eax);decl %esp": 1,
                "addb %al, (%eax);addb %al, (%edx);outsl (%esi), %dx;addb %ch, (%edi);je  <IoSynchronousInvalidateDeviceRelations+>": 1,
                "addb %ch, (%edi);je  <IoSynchronousInvalidateDeviceRelations+>;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);je  <IoSynchronousInvalidateDeviceRelations+>;addb %ah, %gs:(%eax,%eax);addb %cl, %ah": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);leal (%ebp), %eax": 3,
                "pushl (%ebp);calll - <NtWriteFile+>;pushl (%ebp);movl %eax, (%ebp);calll - <ZwClose>": 1,
                "pushl (%ebp);movl %eax, (%ebp);calll - <ZwClose>;cmpl %ebx, (%ebp);jl  <IoSynchronousInvalidateDeviceRelations+>": 1,
                "jne  <IoSynchronousInvalidateDeviceRelations+>;cmpl %ebx, (%eax);je  <IoSynchronousInvalidateDeviceRelations+>;movl (%eax), %esi;addl %eax, %esi": 1,
                "calll  <IoReportResourceUsage+>;testb %al, %al;je  <IoSynchronousInvalidateDeviceRelations+>;movb $, (%edi);cmpl %ebx, (%ebp)": 1,
                "cmpl %ebx, (%ebp);jne  <IoSynchronousInvalidateDeviceRelations+>;cmpl %ebx, %esi;jne  <IoSynchronousInvalidateDeviceRelations+>;movb $, (%edi)": 1,
                "jge  <IoSynchronousInvalidateDeviceRelations+>;cmpb $, (%edi);jne  <IoSynchronousInvalidateDeviceRelations+>;pushl $;leal -(%ebp), %eax": 1,
                "popl %ebp;retl $;int;incl %esp;addb %ah, (%ebp)": 2,
                "imull $, (%eax), %eax;andb %al, (%eax);pushl %eax;addb %ah, (%ecx);jb  <IoIsWdmVersionAvailable+>": 1,
                "addb %ch, (%ebp);addb %dh, %gs:(%eax,%eax);addb %dh, (%edx);jae  <IoIsWdmVersionAvailable+>;addb %al, (%eax)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movw $, -(%ebp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll  <IoReportResourceUsage+>;pushl -(%ebp);movl %eax, %esi": 2,
                "cmpl $, -(%ebp);jne  <IoIsWdmVersionAvailable+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl (%edi);calll - <ZwQuerySecurityObject>": 1,
                "cmpl %ebx, %eax;movl %eax, (%ebp);je  <IoIsWdmVersionAvailable+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "je  <IoIsWdmVersionAvailable+>;leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %eax": 1,
                "testl %eax, %eax;jl  <IoIsWdmVersionAvailable+>;movl -(%ebp), %edi;jmp  <IoIsWdmVersionAvailable+>;pushl $": 1,
                "pushl %esi;pushl -(%ebp);calll  <RtlAddAce>;testl %eax, %eax;jl  <IoIsWdmVersionAvailable+>": 1,
                "testl %eax, %eax;jl  <IoIsWdmVersionAvailable+>;incl %edi;cmpl -(%ebp), %edi;jb - <IoIsWdmVersionAvailable+>": 1,
                "testl %eax, %eax;jl  <IoIsWdmVersionAvailable+>;pushl %ebx;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;calll  <RtlValidSecurityDescriptor>;leal -(%ebp), %eax;pushl %eax;movl (%ebp), %eax": 1,
                "addb %al, (%eax);addb %ah, ;addb %bl, (%eax,%eax);addb %dh, (%edi);popl %edx": 1,
                "addb %cl, (%ecx);jae  <IoIsWdmVersionAvailable+>;popal;addb %al, (%eax);addb %al, (%ebp)": 1,
                "pushl %ebx;addb %al, (%ecx);incl %edx;addb %dh, (%ebp);jae  <IoIsWdmVersionAvailable+>": 2,
                "addb %al, (%eax);pushl %eax;addb %cl, (%esi);pushl %eax;addb %al, (%edx)": 1,
                "pushl %edx;addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %cl, %ah": 5,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);pushl (%ebx)": 1,
                "movzwl (%edi), %eax;leal (%eax,%ecx), %eax;pushl $;pushl %eax;pushl $": 1,
                "pushl $;pushl (%eax);calll - <ExFreePoolWithTag>;movl (%ebp), %edi;movl (%ebp), %eax": 1,
                "shrl %edx;leal (%eax,%edx,), %edi;movl %ecx, %edx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;testb $-, (%ecx);je  <IoIsWdmVersionAvailable+>;movl (%ebp), %eax": 1,
                "movl (%eax), %edx;movl $, (%edx);cmpl $, (%eax);je  <IoIsWdmVersionAvailable+>;addl $, %ecx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl $": 5,
                "pushl -(%ebp);calll - <ZwQueryDirectoryObject>;cmpl $, %eax;jne  <IoIsWdmVersionAvailable+>;cmpl %ebx, %esi": 1,
                "cmpl %ebx, %eax;movb %bl, -(%ebp);jl  <IoIsWdmVersionAvailable+>;movw (%esi), %ax;addw $, %ax": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);je  <IoIsWdmVersionAvailable+>;pushl (%esi);pushl $": 1,
                "cmpl %ebx, (%ebp);jl - <IoIsWdmVersionAvailable+>;movl -(%ebp), %eax;testb $, (%eax);je  <IoIsWdmVersionAvailable+>": 1,
                "je  <IoIsWdmVersionAvailable+>;movl (%edi), %eax;movl $, (%eax);cmpl %ebx, (%edi);je  <IoIsWdmVersionAvailable+>": 1,
                "cmpl %ebx, (%edi);je  <IoIsWdmVersionAvailable+>;pushl %esi;pushl %edi;calll - <IoIsWdmVersionAvailable+>": 1,
                "jge - <IoIsWdmVersionAvailable+>;jmp  <IoIsWdmVersionAvailable+>;movl (%edi), %eax;movl $, (%eax);cmpl %ebx, %esi": 1,
                "jmp  <IoIsWdmVersionAvailable+>;leal (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %edi, -(%ebp);calll - <IoIsWdmVersionAvailable+>;cmpl %ebx, (%ebp);jl  <IoIsWdmVersionAvailable+>;cmpl %ebx, (%edi)": 1,
                "movw $, -(%ebp);movw %bx, -(%ebp);movl $, -(%ebp);calll - <IoIsWdmVersionAvailable+>;cmpl %ebx, (%ebp)": 1,
                "movb %bl, (%eax);leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%edx), %eax": 1,
                "calll - <KeWaitForSingleObject>;popl %edi;popl %esi;movb $, %al;popl %ebx": 1,
                "jl  <IoForwardIrpSynchronously+>;cmpl $, (%ebp);je  <IoForwardIrpSynchronously+>;pushl (%ebp);leal -(%ebp), %eax": 1,
                "jl  <IoForwardIrpSynchronously+>;movl -(%ebp), %eax;movl (%eax), %ecx;movl (%ebp), %edx;cmpl %ecx, (%edx)": 1,
                "cmpl (%ebp), %esi;jne  <IoForwardIrpSynchronously+>;movl (%eax), %esi;movl (%ebp), %edi;pushl %ebx": 1,
                "decl %esi;addb %ch, (%edi);pushl %edx;addb %ah, (%ebp);jae  <IoForwardIrpSynchronously+>": 2,
                "addb %ah, (%ebp);jae  <IoForwardIrpSynchronously+>;outsl (%esi), %dx;addb %dh, (%ebp);jb  <IoForwardIrpSynchronously+>": 2,
                "addb %al, (%edx);outsl (%esi), %dx;addb %ch, (%edi);je  <IoForwardIrpSynchronously+>;incl %ebx": 2,
                "addb %dl, (%eax,%eax);addb %ah, ;addb %dl, (%edx);decl %edi;addb %cl, (%edi)": 1,
                "addb %dh, (%bp,%si);popal;addb %dh, (%eax,%eax);addb %ah, (%eax,%eax);addb %al, (%eax)": 3,
                "addb %ah, (%eax,%eax);addb %al, (%eax);addb %cl, (%ebp);imull $, (%eax), %eax;popal": 5,
                "addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx": 6,
                "addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx;addb %ah, (%esi);imull $, (%eax), %eax": 6,
                "addb %al, (%eax);addb %al, (%eax);decl %esi;addb %ch, (%edi);pushl %edx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;cmpl %ebx, %eax;movl %eax, -(%ebp);je  <IoReportDetectedDevice+>": 1,
                "leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <IoReportDetectedDevice+>;movb $, %cl;movb $, (%eax)": 6,
                "movl %eax, %esi;movl %esi, -(%ebp);calll - <ZwClose>;cmpl %ebx, %esi;jl  <IoReportDetectedDevice+>": 1,
                "cmpl %ebx, -(%ebp);je  <IoReportDetectedDevice+>;pushl -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 2,
                "movw $, -(%ebp);pushl %eax;pushl $;pushl %ebx;leal -(%ebp), %eax": 6,
                "cmpw $, (%eax);jne - <IoReportDetectedDevice+>;cmpl (%edi), %eax;je  <IoReportDetectedDevice+>;addl $, %eax": 1,
                "movl -(%ebp), %eax;addl $, %eax;movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl $;pushl %ebx;pushl $;pushl ": 2,
                "pushl $;pushl %eax;calll - <_snwprintf>;addl $, %esp;addl %eax, %eax": 1,
                "addl %eax, %eax;movl %eax, -(%ebp);movw %ax, -(%ebp);movl $, %esi;pushl %esi": 1,
                "movl %eax, -(%ebp);movw %ax, -(%ebp);movl $, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "calll  <IoReportResourceUsage+>;movl %eax, %edi;cmpl %ebx, %edi;jl  <IoReportDetectedDevice+>;movzwl -(%ebp), %eax": 1,
                "jl  <IoReportDetectedDevice+>;cmpl %ebx, %edi;je  <IoReportDetectedDevice+>;pushl %edi;movw $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <IoReportResourceUsage+>;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;cmpl %ebx, %eax;jne  <IoReportDetectedDevice+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;pushl %eax;movl %eax, -(%ebp);calll  <IoReportResourceUsage+>": 1,
                "movl $, -(%ebp);pushl -(%ebp);calll - <ZwClose>;jmp  <IoReportDetectedDevice+>;pushl -(%ebp)": 1,
                "je  <IoReportDetectedDevice+>;movb $, %cl;movb $, (%eax);calll *;movl -(%ebp), %eax": 2,
                "pushl %eax;calll - <_snwprintf>;movl %edi, %ecx;subl -(%ebp), %ecx;addl $, %esp": 1,
                "movw $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);calll - <ZwSetValueKey>;pushl $": 3,
                "pushl $;popl %edi;pushl %ebx;pushl %ebx;pushl %esi": 1,
                "calll - <ZwClose>;movl -(%ebp), %eax;movw $, -(%ebp);movw %di, -(%ebp);movl $, -(%ebp)": 1,
                "movzwl (%eax), %ecx;movl (%eax), %esi;movl -(%ebp), %edi;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl %eax, (%ecx);jmp  <IoReportDetectedDevice+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movb $, (%eax);calll *;movl -(%ebp), %eax;testb $, (%eax);jne  <IoReportDetectedDevice+>": 1,
                "pushl -(%ebp);pushl ;calll - <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "jmp  <IoReportDetectedDevice+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <IoReportDetectedDevice+>;cmpl %ebx, (%ecx)": 1,
                "pushl -(%ebp);pushl $;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 2,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp);je  <IoReportDetectedDevice+>;movl -(%ebp), %ecx": 1,
                "shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;leal -(%ebp), %eax;pushl %eax": 5,
                "pushl -(%ebp);calll - <ZwClose>;cmpl %ebx, -(%ebp);je  <IoReportDetectedDevice+>;pushl -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);je  <IoReportDetectedDevice+>;pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp)": 1,
                "pushl %ebx;pushl $;pushl -(%ebp);calll - <IoReportTargetDeviceChangeAsynchronous+>;jmp - <IoReportDetectedDevice+>": 1,
                "leave;retl $;int;pushl %ebp;addb %cl, (%ecx)": 2,
                "retl $;int;pushl %ebp;addb %cl, (%ecx);decl %esi": 2,
                "pushl %ebp;addb %cl, (%ecx);decl %esi;addb %dh, (%ebp);insl %dx, %es:(%edi)": 3,
                "decl %eax;addb %ah, (%ecx);jb  <IoReportDetectedDevice+>;addb %dh, %fs:(%edi);popal": 1,
                "addb %al, (%ebx);outsl (%esi), %dx;addb %ch, (%ebp);jo  <IoReportDetectedDevice+>;popal": 1,
                "incl %ebx;addb %ch, (%eax,%eax);addb %dh, (%ebx);jae  <IoReportDetectedDevice+>;addb %al, (%eax)": 1,
                "addb %al, (%eax,%eax);addb %al, (%eax,%eax);addb %ch, (%ecx);jbe  <IoReportDetectedDevice+>;addb %dh, %gs:(%edx)": 1,
                "jbe  <IoReportDetectedDevice+>;addb %dh, %gs:(%edx);addb %al, (%eax);addb %al, (%eax);decl %ebp": 1,
                "addb %ch, (%ebp);addb %al, %gs:(%eax);addb %al, (%eax);addb %al, (%ebx);outsl (%esi), %dx": 1,
                "movl (%ebp), %edx;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);xorl %eax, %eax;pushl %edi;movl (%ebp), %edi;movl %eax, (%edi)": 1,
                "cmpl %eax, %esi;movl %edx, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);je  <IoGetDeviceProperty+>": 1,
                "movl %edx, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);je  <IoGetDeviceProperty+>;testb $, (%esi)": 1,
                "addl $, %esi;pushl %esi;pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx": 3,
                "movzwl %ax, %eax;addl $, %eax;cmpl (%ebp), %eax;movl %eax, (%edi);jbe  <IoGetDeviceProperty+>": 1,
                "movl %eax, %ecx;movl %ecx, %edx;shrl $, %ecx;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %ecx, %edx;shrl $, %ecx;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx": 1,
                "movl -(%ebp), %eax;cmpl $-, %eax;je  <IoGetDeviceProperty+>;pushl $;popl %ebx": 1,
                "pushl $;popl %ebx;cmpl %ebx, (%ebp);movl %ebx, (%edi);jae - <IoGetDeviceProperty+>": 1,
                "movl %ebx, (%edi);jae - <IoGetDeviceProperty+>;movl $, %eax;jmp  <IoGetDeviceProperty+>;movl $, %eax": 1,
                "jmp  <IoGetDeviceProperty+>;movl $, %eax;pushl $;jmp  <IoGetDeviceProperty+>;movl $, %eax": 2,
                "movl $, %eax;jmp  <IoGetDeviceProperty+>;movl $, %eax;pushl $;jmp  <IoGetDeviceProperty+>": 1,
                "popl %ecx;jmp  <IoGetDeviceProperty+>;movl $, %eax;jmp  <IoGetDeviceProperty+>;movl $, %eax": 1,
                "jmp  <IoGetDeviceProperty+>;testb $, %cl;je  <IoGetDeviceProperty+>;movl $, -(%ebp);jmp  <IoGetDeviceProperty+>": 1,
                "retl $;je  <IoGetDeviceProperty+>;decl %edx;addb %bh, (%ebx);decl %edx": 1,
                "decl %edx;addb %bh, -(%ebx);decl %esp;decl %edx;addb %ch, (%ebp)": 1,
                "addb %bl, %bh;decl %ebx;decl %edx;addb %dl, (%esp,%ecx,);decl %edx": 1,
                "addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <IoGetDeviceProperty+>;jns  <IoGetDeviceProperty+>;popl %esp": 1,
                "insb %dx, %es:(%edi);addb %dl, (%ebx);addb %dh, %gs:(%eax,%eax);addb %cl, (%eax);popal": 8,
                "addb %dh, %fs:(%edi);popal;addb %dh, (%edx);addb %ah, %gs:(%eax);addb %dl, (%eax)": 13,
                "calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, -(%ebp);jne  <IoOpenDeviceRegistryKey+>;movl $, %edi": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %edi;leal -(%ebp), %eax": 6,
                "movl %eax, %edi;testl %edi, %edi;jl  <IoOpenDeviceRegistryKey+>;movl (%ebp), %eax;decl %eax": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll  <IoReportResourceUsage+>": 1,
                "addl $, %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>": 2,
                "calll - <IoIsWdmVersionAvailable+>;jmp  <IoOpenDeviceRegistryKey+>;pushl $;pushl $;pushl (%ebp)": 1,
                "leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <IoOpenDeviceRegistryKey+>;movb $, %cl;movb $, (%eax)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%ebp);pushl (%ebp);leal -(%ebp), %eax": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);calll - <IoGetAttachedDeviceReference>": 1,
                "movl %eax, %edi;cmpl $, %edi;jne  <IoGetDmaAdapter+>;pushl %ebx;pushl %ebx": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %edi;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "cmpl %ebx, %edi;jl  <IoGetDmaAdapter+>;cmpl %ebx, -(%ebp);je  <IoGetDmaAdapter+>;pushl (%ebp)": 1,
                "jmp  <IoGetDmaAdapter+>;movl %eax, (%ecx);movl %esi, (%ecx);xorl %eax, %eax;popl %esi": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "calll - <RtlCompareMemory>;cmpl $, %eax;je  <IoGetDmaAdapter+>;pushl $;pushl $": 1,
                "movl -(%ebp), %edx;cmpw $, (%edx);je  <IoGetDmaAdapter+>;incl -(%ebp);movzwl -(%ebp), %edx": 1,
                "movl -(%ebp), %ebx;jb - <IoGetDmaAdapter+>;jmp  <IoGetDmaAdapter+>;movl -(%ebp), %edx;addl $, %edx": 1,
                "addl %ecx, %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "cmpl %edx, %edi;je  <IoGetDmaAdapter+>;cmpb $, -(%ebp);je  <IoGetDmaAdapter+>;movl -(%ebp), %eax": 1,
                "je  <IoGetDmaAdapter+>;cmpb $, -(%ebp);je  <IoGetDmaAdapter+>;movl -(%ebp), %eax;leal (%eax,%eax), %ecx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);jmp  <IoGetDmaAdapter+>": 1,
                "andl $, %eax;addl $, %eax;popl %esi;popl %ebp;retl $": 1,
                "popl %ebp;retl $;int;andl (%eax), %eax;andl (%eax), %eax": 1,
                "je  <IoGetDmaAdapter+>;movl -(%ebp), %eax;addw %di, -(%ebp);addw %di, -(%ebp);subl %edi, %eax": 1,
                "subl %edi, %eax;movl %eax, -(%ebp);subl %ecx, %eax;movw %ax, -(%ebp);movw %ax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <IoReportResourceUsage+>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "pushl %eax;calll  <IoReportResourceUsage+>;jmp  <IoGetDmaAdapter+>;pushl (%ebp);pushl %eax": 1,
                "calll  <IoReportResourceUsage+>;movl %edi, -(%ebp);movl %eax, %esi;cmpl %ebx, %esi;jl  <IoGetDmaAdapter+>": 1,
                "xorl %ebx, %ebx;pushl %ebx;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movw (%esi), %dx;subw -(%ebp), %dx;decl %edx;decl %edx;movw %dx, (%ecx)": 1,
                "popl %esi;movw %dx, (%ecx);popl %ebx;leave;retl $": 1,
                "addb %bl, (%eax,%eax);addb %cl, (%eax,%eax);addb %al, (%edx);incl %ecx;addb %cl, (%eax,%eax)": 1,
                "addb %cl, (%eax,%eax);addb %bh, (%edi);addb %bl, (%eax,%eax);addb %cl, %ah;int": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <IoGetDmaAdapter+>;movl (%esi), %eax;addl $, %eax": 1,
                "testl %edi, %edi;jl  <IoGetDmaAdapter+>;movl (%esi), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movw (%esi), %ax;subw $, %ax;movw %ax, -(%ebp);movw (%esi), %ax;subw $, %ax": 1,
                "jb  <IoGetDmaAdapter+>;movl (%esi), %ecx;shrl %eax;andw $, (%ecx,%eax,);movzwl (%esi), %eax": 1,
                "pushl $;pushl $;pushl (%ebp);pushl (%ebp);calll - <ZwSetValueKey>": 3,
                "jl  <IoGetDmaAdapter+>;movw (%esi), %ax;movl (%esi), %esi;movl -(%ebp), %edi;movw %ax, -(%ebp)": 1,
                "movw (%esi), %ax;movl (%esi), %esi;movl -(%ebp), %edi;movw %ax, -(%ebp);movzwl %ax, %ecx": 1,
                "pushl (%ebp);pushl (%ebp);calll - <ZwSetValueKey>;movl %eax, %edi;leal -(%ebp), %eax": 1,
                "jb  <IoGetDmaAdapter+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%eax,%eax);addb %dh, (%esi)": 1,
                "decl %ecx;addb %ch, (%esi);jae  <IoGetDmaAdapter+>;je  <IoGetDmaAdapter+>;popal": 1,
                "jae  <IoGetDmaAdapter+>;je  <IoGetDmaAdapter+>;popal;addb %ch, (%esi);arpl %ax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);popl %esp;addb %bh, (%edi);addb %bh, (%edi)": 1,
                "movl %ebx, (%edi);calll  <RtlStringFromGUID>;movl %eax, %esi;cmpl %ebx, %esi;jl  <IoGetDmaAdapter+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <IoReportResourceUsage+>;pushl -(%ebp);movl %eax, %esi": 1,
                "testl %eax, %eax;jge  <IoGetDmaAdapter+>;movb %bl, -(%ebp);pushl %ebx;pushl -(%ebp)": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %edi;leal (%ebp), %eax": 1,
                "pushl $;pushl %eax;pushl -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 5,
                "pushl -(%ebp);movl %eax, %esi;calll - <ZwClose>;cmpl %ebx, %esi;jl  <IoGetDmaAdapter+>": 2,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl $, %esi;pushl -(%ebp);calll - <ZwClose>": 1,
                "jmp  <IoGetDmaAdapter+>;cmpl $, %esi;jne  <IoGetDmaAdapter+>;pushl %ebx;pushl (%ebp)": 2,
                "cmpl $, %esi;jne  <IoGetDmaAdapter+>;pushl %ebx;pushl (%ebp);leal -(%ebp), %eax": 2,
                "calll - <IoGetDmaAdapter+>;movl -(%ebp), %edi;jmp  <IoGetDmaAdapter+>;cmpl %ebx, %esi;jl  <IoGetDmaAdapter+>": 2,
                "leal -(%ebp), %eax;pushl -(%ebp);pushl $;pushl %eax;pushl -(%ebp)": 2,
                "cmpl $, (%edi);jne  <IoGetDmaAdapter+>;cmpl %ebx, (%edi);je  <IoGetDmaAdapter+>;movl -(%ebp), %esi": 1,
                "incl -(%ebp);leal (%ebp), %eax;pushl %eax;pushl -(%ebp);pushl %edi": 2,
                "cmpl $, %esi;jne - <IoGetDmaAdapter+>;pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax": 1,
                "incl %eax;incl %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "cmpl %ebx, %esi;jl  <IoGetDmaAdapter+>;movl -(%ebp), %eax;movw %bx, (%eax);cmpb %bl, -(%ebp)": 1,
                "cmpl %ebx, %esi;jge  <IoGetDmaAdapter+>;leal -(%ebp), %eax;pushl %eax;calll - <IoGetDmaAdapter+>": 1,
                "movl %ebx, (%edi);je  <IoGetDmaAdapter+>;movl %ebx, (%eax);popl %edi;movl %esi, %eax": 1,
                "cmpl %edx, %eax;je  <IoGetDeviceInterfaces+>;testb $, (%eax);jne  <IoGetDeviceInterfaces+>;addl $, %eax": 1,
                "addb %dh, %gs:(%ebx);addb %al, (%eax);int;int;int": 5,
                "jl  <IoGetDeviceInterfaces+>;pushl %ebx;pushl %esi;movl %fs:, %eax;decl (%eax)": 1,
                "cmpl %edi, %eax;movl %eax, -(%ebp);jl  <IoGetDeviceInterfaces+>;pushl %esi;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jl  <IoGetDeviceInterfaces+>;pushl %edi;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %edi;pushl (%ebp);pushl (%ebp);pushl -(%ebp);pushl %edi": 1,
                "pushl (%ebp);pushl (%ebp);pushl -(%ebp);pushl %edi;pushl (%ebp)": 1,
                "movl (%ebp), %eax;cmpl %edi, %eax;je  <IoGetDeviceInterfaces+>;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);jmp  <IoGetDeviceInterfaces+>;pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp)": 1,
                "jae  <IoGetDeviceInterfaces+>;addb %dh, %gs:(%ebx);addb %al, (%eax);addb %al, (%eax);incl %esp": 1,
                "calll  <RtlStringFromGUID>;movl %eax, %esi;testl %esi, %esi;jl  <IoGetDeviceInterfaces+>;cmpb $, (%ebp)": 1,
                "movl %eax, %esi;testl %esi, %esi;jl  <IoGetDeviceInterfaces+>;pushl %edi;movl %fs:, %eax": 1,
                "jl  <IoGetDeviceInterfaces+>;pushl $;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll  <IoReportResourceUsage+>;pushl (%ebp)": 1,
                "pushl %eax;calll  <IoReportResourceUsage+>;pushl (%ebp);movl %eax, %esi;calll - <ZwClose>": 1,
                "testl %esi, %esi;jge  <IoGetDeviceInterfaces+>;cmpl $, -(%ebp);jne  <IoGetDeviceInterfaces+>;pushl (%ebp)": 1,
                "calll - <ZwDeleteKey>;cmpl $, (%ebp);jne  <IoGetDeviceInterfaces+>;pushl (%ebp);calll - <ZwDeleteKey>": 1,
                "cmpl $, (%ebp);jne  <IoGetDeviceInterfaces+>;pushl (%ebp);calll - <ZwDeleteKey>;pushl (%ebp)": 1,
                "calll  <RtlFreeUnicodeString>;popl %ebx;movl %esi, %eax;popl %esi;leave": 1,
                "int;incl %esp;addb %ah, (%ebp);jbe  <IoGetDeviceInterfaces+>;imull $, (%eax), %eax": 1,
                "cmpl %esi, (%ebx);je  <IoGetDeviceInterfaceAlias+>;cmpw $, (%ebx);jb  <IoGetDeviceInterfaceAlias+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl (%ebp);calll  <RtlStringFromGUID>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl  <IoGetDeviceInterfaceAlias+>;movl %fs:, %eax;decl (%eax)": 1,
                "leal -(%ebp), %eax;jmp  <IoGetDeviceInterfaceAlias+>;movl (%ebp), %eax;leal -(%ebp), %ecx;pushl %eax": 1,
                "pushl %ecx;leal -(%ebp), %ecx;sbbl %eax, %eax;andl %ecx, %eax;pushl %eax": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;xorl %edi, %edi;movl %eax, -(%ebp)": 1,
                "pushl %edi;pushl %edi;pushl %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);calll - <IoGetDmaAdapter+>;movl %eax, %esi;cmpl %edi, %esi": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll  <IoReportResourceUsage+>;movl %eax, %esi;cmpl %edi, %esi": 2,
                "pushl $;pushl -(%ebp);calll - <NtWriteFile+>;movl %eax, %esi;cmpl %edi, %esi": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, (%ebx);je  <IoGetDeviceInterfaceAlias+>;movw (%esi), %cx": 1,
                "jmp  <IoGetDeviceInterfaceAlias+>;pushl %edi;pushl %ebx;calll - <ExFreePoolWithTag>;movl $, %esi": 1,
                "pushl $;pushl -(%ebp);leal (%esi), %eax;pushl %eax;calll  <RtlEqualUnicodeString>": 1,
                "movl $, %esi;cmpb $, (%ebp);jne  <IoGetDeviceInterfaceAlias+>;xorl %esi, %esi;pushl %edi": 1,
                "pushl %ebx;movl %eax, -(%ebp);pushl %eax;jmp  <IoGetDeviceInterfaceAlias+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl -(%ebp);pushl $;pushl -(%ebp)": 1,
                "cmpl %edi, %esi;jl  <IoGetDeviceInterfaceAlias+>;cmpl $, (%eax);jne  <IoGetDeviceInterfaceAlias+>;cmpl $, (%eax)": 1,
                "jmp  <IoGetDeviceInterfaceAlias+>;movl $, %esi;jmp  <IoGetDeviceInterfaceAlias+>;cmpl %edi, -(%ebp);je  <IoGetDeviceInterfaceAlias+>": 1,
                "cmpl $, -(%ebp);jbe  <IoGetDeviceInterfaceAlias+>;decl -(%ebp);jmp  <IoGetDeviceInterfaceAlias+>;leal -(%ebp), %eax": 1,
                "movl $, -(%ebp);calll - <ZwSetValueKey>;cmpl %edi, -(%ebp);pushl -(%ebp);movl %eax, %esi": 1,
                "movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;je  <IoGetDeviceInterfaceAlias+>;pushl $": 1,
                "cmpl %edi, -(%ebp);je  <IoGetDeviceInterfaceAlias+>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "cmpl %edi, -(%ebp);je  <IoGetDeviceInterfaceAlias+>;pushl -(%ebp);calll - <ZwClose>;leal -(%ebp), %eax": 1,
                "cmpl %edi, %esi;jge  <IoGetDeviceInterfaceAlias+>;cmpb $, (%ebp);jne  <IoGetDeviceInterfaceAlias+>;xorl %esi, %esi": 1,
                "movl %esp, %ebp;pushl %esi;pushl %edi;movl %fs:, %eax;decl (%eax)": 4,
                "pushl %edi;movl %fs:, %eax;decl (%eax);pushl $;movl $, %esi": 3,
                "addb %ah, (%ecx);jb  <IoSetDeviceInterfaceState+>;popal;addb %ch, (%ebp);addb %dh, %gs:(%eax,%eax)": 1,
                "jae  <IoSetDeviceInterfaceState+>;addb %al, (%eax);int;int;int": 1,
                "movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;pushl %esi;pushl %edi": 1,
                "addb %ah, (%ebx);addb %al, (%eax);addb %al, (%eax);addb %al, (%ebx);outsl (%esi), %dx": 1,
                "movw %bx, -(%ebp);je  <IoRegisterDeviceInterface+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "andw $, (%ecx,%eax,);movl -(%ebp), %eax;movl -(%ebp), %ecx;leal (%eax,%ecx), %ebx;pushl %ebx": 1,
                "movl -(%ebp), %ecx;leal (%eax,%ecx), %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "decl (%eax);pushl $;pushl $;calll - <ExAcquireResourceExclusiveLite>;leal -(%ebp), %eax": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);calll  <IoReportResourceUsage+>;movl %eax, %edi": 2,
                "jl  <IoRegisterDeviceInterface+>;pushl -(%ebp);calll - <ZwClose>;movl %ebx, -(%ebp);cmpl %ebx, %esi": 1,
                "calll - <ZwClose>;pushl -(%ebp);movl %ebx, -(%ebp);pushl -(%ebp);calll  <IoReportResourceUsage+>": 1,
                "popl %esp;addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <IoRegisterDeviceInterface+>": 2,
                "jns  <IoRegisterDeviceInterface+>;popl %esp;addb %cl, (%ebp);popal;addb %ah, (%ebx)": 2,
                "pushl -(%ebp);movl %ebx, -(%ebp);pushl -(%ebp);pushl %ebx;pushl %ebx": 2,
                "addl $, %ecx;pushl %eax;movl %ecx, -(%ebp);calll  <IoReportResourceUsage+>;testl %eax, %eax": 1,
                "movl %ecx, -(%ebp);calll  <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoRegisterDeviceInterface+>;leal -(%ebp), %eax": 1,
                "cmpl %ebx, (%eax);je  <IoRegisterDeviceInterface+>;pushl %ebx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;leal -(%ebp), %eax": 5,
                "pushl -(%ebp);calll  <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoRegisterDeviceInterface+>;movb $, -(%ebp)": 1,
                "jmp  <IoRegisterDeviceInterface+>;pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);je  <IoRegisterDeviceInterface+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl %ecx, -(%ebp);calll  <RtlGUIDFromString>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "popl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <IoGetDmaAdapter+>;movl $, %ecx": 1,
                "addl $, %eax;decl %ecx;jne - <IoRegisterDeviceInterface+>;movl $, %eax;movl %eax, ": 1,
                "movl %edx, ;movl $, %edx;xorl %ecx, %ecx;incl %ecx;movl %eax, ": 1,
                "incl %ecx;movl %eax, ;movl %eax, ;movl %eax, ;movl %eax, ": 1,
                "movl %eax, ;movl %eax, ;movl $, %edx;movl %eax, ;movl %eax, ": 1,
                "movl $, %edx;movl %eax, ;movl %eax, ;movl %eax, ;movl $, %eax": 1,
                "movb %cl, ;movb $, ;movl %edx, ;movl %edx, ;movl %ecx, ": 1,
                "pushl %eax;calll  <NtFreeVirtualMemory+>;andl $, (%esi);pushl $;pushl %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;movb $, -(%ebp);movb $, -(%ebp)": 3,
                "xorl %edi, %edi;cmpl %edi, %eax;movl %eax, -(%ebp);jl  <IoRegisterDeviceInterface+>;movl -(%ebp), %eax": 1,
                "jl  <IoRegisterDeviceInterface+>;movl -(%ebp), %eax;cmpl %edi, %eax;je  <IoRegisterDeviceInterface+>;cmpl $, (%eax)": 1,
                "cmpl %edi, %eax;je  <IoRegisterDeviceInterface+>;cmpl $, (%eax);jne  <IoRegisterDeviceInterface+>;movl (%eax), %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <IoRegisterDeviceInterface+>;testl %eax, %eax": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);leave;retl $;int": 1,
                "jne  <IoRegisterDeviceInterface+>;movl , %eax;movl (%eax), %ecx;movl (%ecx), %eax;cmpl %edx, (%eax)": 1,
                "pushl (%ebp);movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);calll  <IoReportResourceUsage+>": 1,
                "movl %eax, (%edi);movl %edi, (%eax);movl (%esi), %ecx;testl %ecx, %ecx;movl %esi, (%esi)": 1,
                "testl %ecx, %ecx;je  <IoPnPDeliverServicePowerNotification+>;movl %eax, (%ecx);leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;jmp  <IoPnPDeliverServicePowerNotification+>;pushl (%ebp);pushl (%ebp);calll *(%ebp)": 1,
                "cmpl %ecx, (%ebx);jne  <IoUnregisterPlugPlayNotification+>;movl -(%ebp), %ecx;testl %ecx, %ecx;movb $, -(%ebp)": 1,
                "testl %ecx, %ecx;movb $, -(%ebp);je  <IoUnregisterPlugPlayNotification+>;calll *;movl (%edi), %eax": 1,
                "calll *;pushl $;pushl %edi;calll - <ExFreePoolWithTag>;movl $, %eax": 1,
                "movl %ebx, %ecx;calll *%esi;popl %edi;popl %esi;xorl %eax, %eax": 1,
                "calll *;movl , %esi;movl $, %edi;cmpl %edi, %esi;je  <IoUnregisterPlugPlayNotification+>": 1,
                "movl (%esi), %eax;movb $, (%eax);pushl (%esi);calll - <IoRegisterDeviceInterface+>;pushl $": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;testl %ebx, %ebx;je  <IoUnregisterPlugPlayNotification+>;movl %ebx, %ecx": 1,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 5,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "andl $, -(%ebp);cmpl $, -(%ebp);jge  <IoReportTargetDeviceChange+>;movl $, %eax;cmpl %eax, -(%ebp)": 2,
                "subl $, %eax;negl %eax;sbbl %eax, %eax;incl %eax;movl %eax, -(%ebp)": 4,
                "jne  <IoReportTargetDeviceChange+>;pushl %eax;calll - <IoRegisterDeviceInterface+>;cmpl $, %ebx;jne - <IoReportTargetDeviceChange+>": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebx)": 1,
                "movl (%ebx), %ecx;movl %ecx, (%eax);leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl $, %edi;jmp - <IoReportTargetDeviceChange+>;int;int;int": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl , %eax;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "movl , %eax;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl %esi, -(%ebp);jne  <IoReportTargetDeviceChange+>;leal (%esi), %eax;cmpl %ebx, %eax;je  <IoReportTargetDeviceChange+>": 1,
                "movl (%esi), %esi;cmpl -(%ebp), %esi;jne - <IoReportTargetDeviceChange+>;movl %edi, %ecx;calll *": 1,
                "pushl %edi;movl (%ebp), %edi;xorl %edx, %edx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "testl %edi, %edi;je  <IoRegisterPlugPlayNotification+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl %fs:, %eax;pushl (%eax);calll - <MmTrimAllSystemPagableMemory+>;movl %eax, (%edi);movl -(%ebp), %eax": 3,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <IoRegisterPlugPlayNotification+>;pushl (%edi);calll - <MmTrimAllSystemPagableMemory+>": 3,
                "je  <IoRegisterPlugPlayNotification+>;pushl (%edi);calll - <MmTrimAllSystemPagableMemory+>;movl %eax, (%edi);jmp  <IoRegisterPlugPlayNotification+>": 3,
                "andl $, (%edi);movl -(%ebp), %eax;movl (%eax), %eax;movl $, %esi;movl %esi, %ecx": 1,
                "jne  <IoRegisterPlugPlayNotification+>;movl %esi, %ecx;calll *;jmp  <IoRegisterPlugPlayNotification+>;movl %edi, (%ebx)": 1,
                "jmp  <IoRegisterPlugPlayNotification+>;pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>": 4,
                "movl %eax, (%ebx);calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <IoRegisterPlugPlayNotification+>;pushl (%ebx)": 1,
                "pushl (%ebx);calll - <MmTrimAllSystemPagableMemory+>;movl %eax, (%ebx);jmp  <IoRegisterPlugPlayNotification+>;andl $, (%ebx)": 1,
                "movl $, %esi;movl %esi, %ecx;movb $, (%ebx);calll *;movl , %eax": 1,
                "testb $, (%ebp);je  <IoRegisterPlugPlayNotification+>;movw $, -(%ebp);movw $, -(%ebp);movl $, %esi": 1,
                "pushl %edi;pushl %eax;calll - <IoGetDeviceInterfaces>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebx);pushl -(%ebp);pushl %eax;pushl -(%ebp);calll - <IoPnPDeliverServicePowerNotification+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl %eax, (%edi);movl -(%ebp), %eax;movl %ebx, (%edi);movl $, %ebx": 1,
                "movl %ebx, (%edi);movl $, %ebx;pushl %esi;movl %esi, (%edi);movw $, (%edi)": 1,
                "movl %eax, %edi;testl %edi, %edi;jne  <IoRegisterPlugPlayNotification+>;movl $, -(%ebp);jmp  <IoRegisterPlugPlayNotification+>": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi;popl %esi": 3,
                "andl $, -(%ebp);movl (%ebp), %ecx;movl %eax, -(%ebp);movl , %eax;testl %eax, %eax": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl %ecx, -(%ebp);movl (%ebx), %ecx;movl %ebx, -(%ebp)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl $, %edi;cmpl %edi, %esi": 1,
                "calll - <RtlCompareMemory>;subl %ebx, %eax;negl %eax;sbbl %eax, %eax;incl %eax": 6,
                "incl %eax;movl %eax, -(%ebp);jne  <IoRegisterPlugPlayNotification+>;movl $, %eax;jmp  <IoRegisterPlugPlayNotification+>": 1,
                "jne  <IoRegisterPlugPlayNotification+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi;pushl %esi": 1,
                "calll - <IoReportTargetDeviceChange+>;testl %eax, %eax;jl  <IoRegisterPlugPlayNotification+>;pushl %ebx;calll  <IoReportResourceUsage+>": 1,
                "pushl $;pushl $;calll - <IoReportTargetDeviceChange+>;movl %esi, %eax;popl %edi": 1,
                "jne  <IoRegisterPlugPlayNotification+>;xorb %al, %al;jmp  <IoRegisterPlugPlayNotification+>;cmpl $, (%eax);jne  <IoRegisterPlugPlayNotification+>": 1,
                "movl , %ecx;movl %ecx, (%eax);movb $, -(%ebp);leal (%eax), %ecx;movl (%eax), %eax": 1,
                "movl %ecx, (%eax);movb $, -(%ebp);leal (%eax), %ecx;movl (%eax), %eax;decl %eax": 1,
                "leal (%ecx), %eax;movl (%ecx), %ecx;shll $, %ecx;addl %eax, %ecx;jmp  <IoRegisterPlugPlayNotification+>": 1,
                "addl %eax, %ecx;jmp  <IoRegisterPlugPlayNotification+>;cmpb $-, (%eax);jne  <IoRegisterPlugPlayNotification+>;cmpl $, (%eax)": 1,
                "movl %esi, (%eax);movb $, -(%ebp);addl $, %eax;cmpl %ecx, %eax;jb - <IoRegisterPlugPlayNotification+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;cmpl %edi, (%ebx);leal (%eax), %ecx": 1,
                "rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;cmpl %edi, (%ebx);leal (%eax), %ecx;jbe  <IoRegisterPlugPlayNotification+>": 1,
                "jmp  <IoRegisterPlugPlayNotification+>;pushl (%ebp);pushl %eax;pushl $;pushl $": 1,
                "jne  <IoRegisterPlugPlayNotification+>;movl (%ebp), %esi;cmpl %eax, %esi;movl %eax, (%ebp);je  <IoRegisterPlugPlayNotification+>": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;je  <IoReportResourceForDetection+>": 1,
                "je  <IoReportResourceUsage+>;movswl (%edi), %eax;pushl %eax;pushl %edi;calll - <IoCsqRemoveIrp+>": 1,
                "calll - <IoCsqRemoveIrp+>;leal (%edi), %ebx;cmpw $, (%ebx);je  <IoReportResourceUsage+>;pushl $": 1,
                "pushl %esi;calll - <IoCsqRemoveIrp+>;cmpl %ebx, (%esi);popl %edi;je  <IoReportResourceUsage+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);shrl %ebx": 5,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;leal -(%ebp), %eax": 1,
                "cmpl $, (%ebp);jbe  <IoReportResourceUsage+>;movl -(%ebp), %eax;pushl -(%ebp,%eax,);calll - <ZwClose>": 2,
                "calll - <ZwClose>;movl -(%ebp), %eax;movl %eax, %edx;decl %eax;andl $, %eax": 1,
                "andl $, %eax;leal -(%ebp,%eax,), %ecx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ebx, (%ecx)": 1,
                "incl %eax;incl %eax;cmpl %esi, %eax;movl %eax, -(%ebp);jb - <IoReportResourceUsage+>": 1,
                "pushl -(%ebp,%eax,);calll - <ZwClose>;cmpl %ebx, -(%ebp);jl  <IoReportResourceUsage+>;movl -(%ebp), %eax": 1,
                "subl $, %esp;pushl %edi;movl (%ebp), %edi;pushl %edi;pushl $": 1,
                "calll - <ZwClose>;testl %esi, %esi;jge  <IoReportResourceUsage+>;movl %esi, %eax;jmp  <IoReportResourceUsage+>": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;pushl %edi;pushl %eax": 1,
                "testl %esi, %esi;jge  <IoReportResourceUsage+>;pushl (%ebp);calll - <ZwClose>;movl %esi, %eax": 1,
                "jmp  <IoReportResourceUsage+>;pushl -(%ebp);calll - <ZwClose>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "leave;retl $;pushl %ebx;addb %bh, (%ecx);jae  <IoReportResourceUsage+>": 2,
                "pushl %ebx;addb %bh, (%ecx);jae  <IoReportResourceUsage+>;je  <IoReportResourceUsage+>;addb %ch, %gs:(%ebp)": 4,
                "pushl %ebx;addb %al, (%ebx);outsl (%esi), %dx;addb %ch, (%esi);addb %ch, (%ecx)": 2,
                "movl (%ebp), %eax;andl $, (%eax);pushl %esi;movl $, %esi;pushl %esi": 1,
                "je  <IoReportResourceUsage+>;cmpl $, %esi;jne  <IoReportResourceUsage+>;pushl %ebx;pushl %edi": 1,
                "pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;xorl %edi, %edi": 1,
                "je  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <ZwClose>;movl %esi, %eax;popl %esi;popl %edi;popl %ebx": 1,
                "je  <IoReportResourceUsage+>;cmpl %ebx, (%ebp);jne  <IoReportResourceUsage+>;xorb %al, %al;popl %edi": 1,
                "cmpl %ebx, (%ebp);jne  <IoReportResourceUsage+>;xorb %al, %al;popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;cmpl %ebx, (%eax);je - <IoReportResourceUsage+>;movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ebx;movb (%ebx), %bl;cmpb (%edi), %bl;jne  <IoReportResourceUsage+>": 1,
                "movb (%ebx), %bl;cmpb (%edi), %bl;jne  <IoReportResourceUsage+>;movl (%eax), %ebx;movl (%eax), %eax": 1,
                "je  <IoReportResourceUsage+>;movl (%ebp), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>;leal -(%ebp), %ecx": 1,
                "je  <IoReportResourceUsage+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;movl -(%ebp), %edi;movl (%ebp), %edx": 1,
                "addl $, %edi;addl $, %eax;cmpl (%esi), %ebx;movl %edi, -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpl (%esi), %eax;je - <IoReportResourceUsage+>;movl -(%ebp), %edi;incl -(%ebp);movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);jmp - <IoReportResourceUsage+>;movb $, %al;jmp - <IoReportResourceUsage+>;int": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %ecx;movl (%ebp), %eax": 1,
                "testl %eax, %eax;jge  <IoReportResourceUsage+>;xorl %eax, %eax;jmp  <IoReportResourceUsage+>;xorl %ecx, %ecx": 1,
                "movl %esp, %ebp;pushl $;pushl (%ebp);pushl $;calll - <ExAllocatePoolWithTag>": 5,
                "andl $, %esi;movl %edi, %ecx;addl $, %esi;calll *;testl %esi, %esi": 1,
                "calll *;testl %esi, %esi;jl  <IoReportResourceUsage+>;pushl $;pushl $": 1,
                "testl %esi, %esi;jl  <IoReportResourceUsage+>;pushl $;pushl $;pushl $": 1,
                "pushl %esi;pushl %ebx;pushl (%ebp);leal (%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;pushl $": 1,
                "movl (%ebp), %edi;movl $, %esi;movl %esi, %ecx;movl %edi, -(%ebp);calll *": 1,
                "addb %ch, (%edi);arpl %ax, (%eax);incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "jb  <IoReportResourceUsage+>;arpl %ax, (%eax);addb %ah, %gs:(%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %edi, %edi;pushl %edi;pushl (%ebp)": 1,
                "movl (%ebx), %ebx;cmpl %edi, %ebx;je  <IoReportResourceUsage+>;xorl %esi, %esi;cmpl %edi, (%ebx)": 1,
                "xorl %esi, %esi;cmpl %edi, (%ebx);leal (%ebx), %eax;jbe  <IoReportResourceUsage+>;cmpl $-, (%eax)": 1,
                "movl %ecx, (%eax);cmpl %edi, (%eax);leal (%eax), %ecx;jbe  <IoReportResourceUsage+>;movl (%eax), %eax": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %ecx;xorl %ebx, %ebx;xorl %esi, %esi": 1,
                "leal (%edi), %eax;jbe  <IoReportResourceUsage+>;movl %ecx, -(%ebp);movl (%eax), %ecx;addl %ecx, %esi": 1,
                "cmpl %ebx, (%edi);movl %eax, -(%ebp);movl %ebx, (%ebp);jbe  <IoReportResourceUsage+>;cmpl %ebx, (%ebp)": 1,
                "jbe  <IoReportResourceUsage+>;leal (%ecx), %edi;jmp  <IoReportResourceUsage+>;xorl %ebx, %ebx;movb $, (%ecx)": 1,
                "movb %al, (%ecx);movw (%edx), %ax;movw %ax, (%ecx);movb %bl, (%ecx);movw %bx, (%ecx)": 1,
                "movl %eax, (%ecx);movl (%edx), %eax;movl %eax, (%edi);jmp  <IoReportResourceUsage+>;movl %eax, (%ecx)": 1,
                "movl %eax, (%ecx);movl (%edx), %eax;movl (%edx), %ebx;leal -(%eax,%ebx), %eax;movl %eax, (%edi)": 1,
                "movl %eax, (%ecx);movl (%edx), %eax;movl %eax, (%ecx);jmp  <IoReportResourceUsage+>;movl (%edx), %eax": 1,
                "movl (%edx), %eax;movl %eax, (%ecx);jmp  <IoReportResourceUsage+>;movl (%edx), %eax;movl %eax, (%edi)": 1,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, %esi;movl %edi, (%ebx);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movb $, (%eax);je  <IoReportResourceUsage+>": 1,
                "movl %edx, (%ebp);movl (%ecx), %edx;addl %edx, -(%ebp);addl $, %ecx;testl %edx, %edx": 1,
                "movl (%esi), %ecx;leal (%esi), %edx;shll $, %ecx;addl %edx, %ecx;jmp  <IoReportResourceUsage+>": 1,
                "movl %esi, -(%ebp);jne  <IoReportResourceUsage+>;xorl %esi, %esi;incl %esi;movl %esi, -(%ebp)": 1,
                "jne  <IoReportResourceUsage+>;xorl %esi, %esi;incl %esi;movl %esi, -(%ebp);movl (%ecx), %eax": 1,
                "movl (%ecx), %eax;andw $, (%ecx);movl %eax, -(%ebp);leal (%ecx), %edx;shll $, %eax": 1,
                "decl %ecx;movl %edi, -(%ebp);je  <IoReportResourceUsage+>;decl %ecx;je  <IoReportResourceUsage+>": 1,
                "jmp - <IoReportResourceUsage+>;movl (%esi), %edi;movl (%esi), %ecx;andl $, -(%ebp);movl (%esi), %edx": 1,
                "movl (%eax), %ecx;movl %edx, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "addl $, %ecx;leal -(%eax), %edx;cmpl %ecx, %edx;movl %ecx, (%ebp);jb  <IoReportResourceUsage+>": 1,
                "cmpb $, (%edx);jne  <IoReportResourceUsage+>;subl $, %edx;cmpl (%ebp), %edx;jae - <IoReportResourceUsage+>": 1,
                "movl %edx, (%eax);jmp  <IoReportResourceUsage+>;cmpb %cl, -(%ebp);movb $, -(%ebp);jne  <IoReportResourceUsage+>": 1,
                "movl -(%ebp), %edx;andl -(%ebp), %edx;decl %ecx;andl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %edx, (%eax);xorl %edx, %edx": 2,
                "movl -(%ebp), %ecx;movl %edi, (%eax);movl %edx, (%eax);addl $, %eax;jmp  <IoReportResourceUsage+>": 1,
                "movl %edi, (%eax);movl %edx, (%eax);addl $, %eax;jmp  <IoReportResourceUsage+>;testb $, (%eax)": 1,
                "decl %ecx;jne  <IoReportResourceUsage+>;movl -(%ebp), %ecx;movl %ecx, (%eax);leal -(%ecx,%edi), %ecx": 1,
                "jmp  <IoReportResourceUsage+>;leal -(%eax,%eax,), %ecx;movl -(%ebp), %eax;shll $, %eax;pushl $": 1,
                "movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %ecx;movb $, (%ecx);movl (%esi), %ecx;movl -(%ebp), %edx;testl %edx, %edx": 1,
                "movl %ecx, (%eax);leal (%esi), %ecx;leal (%eax), %ebx;jl  <IoReportResourceUsage+>;incl %edx": 1,
                "incl %edx;movl %edx, (%ebp);movl (%ecx), %edi;leal (%ecx), %edx;shll $, %edi": 1,
                "andw $, (%edx);movb $, (%edx);movb $-, (%edx);movb $, (%edx);movb $, (%edx)": 1,
                "movl (%ebp), %esi;pushl $;movl %edx, %edi;popl %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %eax, %esi;cmpl %edi, %esi;je  <IoReportResourceUsage+>;pushl $;pushl (%esi)": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <IoReportResourceUsage+>;movl (%ebx), %ecx;movl (%eax), %eax": 1,
                "pushl $;movl %eax, (%ebp);calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;jne  <IoReportResourceUsage+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebx), %ebx;movl (%ebp), %ecx;subl %ebx, %ecx": 1,
                "movl %ecx, %ebx;shrl $, %ecx;leal (%edx), %esi;rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx": 1,
                "cmpl %eax, (%ebx);je  <IoReportResourceUsage+>;cmpl %eax, %esi;je  <IoReportResourceUsage+>;cmpl %eax, (%esi)": 1,
                "cmpl %eax, %esi;je  <IoReportResourceUsage+>;cmpl %eax, (%esi);je  <IoReportResourceUsage+>;cmpl %eax, %ebx": 1,
                "shrb %al;andb $, %al;popl %ebp;retl $;incl %ebx": 1,
                "popl %edi;andl $, %eax;andl $, %ecx;pushl %edi;orl %eax, %ecx": 1,
                "movl (%esi), %esi;movl %esi, -(%ebp);cmpl $-, %esi;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;andl $-, (%esi);andl $, %eax;cmpl $, (%esi);movl %eax, (%esi)": 1,
                "andb $-, (%esi);popl %edi;popl %ebx;pushl $;pushl $": 1,
                "calll - <ZwDeleteKey>;movl %eax, -(%ebp);pushl (%ebp);calll - <ZwClose>;movl -(%ebp), %eax": 1,
                "pushl $;leal (%ebx), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 5,
                "movl , %eax;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 5,
                "pushl (%eax);calll - <IoReportTargetDeviceChangeAsynchronous+>;popl %ebx;popl %ebp;retl $": 1,
                "negl %eax;sbbl %eax, %eax;incl %eax;movl %eax, -(%ebp);jne  <IoReportResourceUsage+>": 1,
                "incl %eax;movl %eax, -(%ebp);jne  <IoReportResourceUsage+>;incl %ebx;addl $, %esi": 1,
                "shll $, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 5,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl , %eax;incl ": 1,
                "movl , %eax;incl ;testl %eax, %eax;je  <IoReportResourceUsage+>;pushl $": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl %eax, ;jmp  <IoReportResourceUsage+>;orl $-, %ebx": 1,
                "orl $-, %ebx;cmpl $-, %ebx;je  <IoReportResourceUsage+>;movl , %edi;movl (%ebp), %esi": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);xorl %esi, %esi;popl %edi": 1,
                "addl %ecx, %ecx;xorl %ebx, %ebx;leal (%ecx,%edi), %esi;cmpl %esi, %edi;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %ecx;cmpl $-, %ecx;je  <IoReportResourceUsage+>;cmpl %ecx, -(%ebp);jne  <IoReportResourceUsage+>": 1,
                "jmp  <IoReportResourceUsage+>;movl (%edi), %eax;addl $, %eax;pushl %eax;pushl $-": 1,
                "jmp  <IoReportResourceUsage+>;movl (%edi), %eax;addl $, %eax;pushl %eax;pushl $": 1,
                "movl (%edi), %eax;addl $, %eax;pushl %eax;pushl $;pushl %ecx": 1,
                "je  <IoReportResourceUsage+>;cmpl %ecx, (%ebp);jne  <IoReportResourceUsage+>;pushl $;pushl %edi": 1,
                "cmpw $, %dx;jb  <IoReportResourceUsage+>;cmpw $, %dx;ja  <IoReportResourceUsage+>;cmpw $, %dx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movzwl (%ebx), %edi;movl (%ebx), %esi": 1,
                "cmpw $, %cx;je  <IoReportResourceUsage+>;movw %cx, (%eax);jmp - <IoReportResourceUsage+>;movw $, (%eax)": 1,
                "pushl $;incl %eax;popl %ebx;movl $, -(%ebp);movzwl (%esi), %esi": 1,
                "movl $, -(%ebp);movzwl (%esi), %esi;movb %bl, %cl;shrl %cl, %esi;andl $, %esi": 1,
                "movb %bl, %cl;shrl %cl, %esi;andl $, %esi;cmpl $, %esi;leal (%esi), %ecx": 1,
                "leal (%esi), %ecx;movl (%ebp), %esi;movw %cx, (%eax);incl %eax;incl %eax": 1,
                "cmpl %edi, %esi;movl %esi, (%ebp);jne - <IoReportResourceUsage+>;andw $, (%eax);pushl $": 1,
                "cmpl $, (%eax);jne  <IoReportResourceUsage+>;pushl %ebx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl (%eax);addl %eax, %ecx;pushl %ecx;calll - <IoReportResourceUsage+>;movl -(%ebp), %ecx": 1,
                "jmp  <IoReportResourceUsage+>;movl $, %edi;cmpl %ebx, %edi;jl  <IoReportResourceUsage+>;cmpl %ebx, -(%ebp)": 1,
                "movl $, %edi;cmpl %ebx, %edi;jl  <IoReportResourceUsage+>;cmpl %ebx, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <IoReportResourceUsage+>;pushl -(%ebp);movl %eax, %edi": 2,
                "pushl -(%ebp);calll - <IoReportResourceUsage+>;testb %al, %al;jne  <IoReportResourceUsage+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;cmpl %ebx, %eax;je  <IoReportResourceUsage+>;pushl (%eax);calll - <ZwClose>": 1,
                "retl $;int;pushl %ebx;addb %bh, (%ecx);jae  <IoReportResourceUsage+>": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>": 1,
                "cmpl %ebx, %edi;jl  <IoReportResourceUsage+>;pushl %ebx;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl (%ebp);calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;pushl (%ebp)": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, (%ebp);pushl %esi;movl $, %esi": 1,
                "calll - <IoReportResourceUsage+>;cmpl %ebx, %eax;jl  <IoReportResourceUsage+>;pushl %edi;leal (%ebp), %eax": 1,
                "cmpl %ebx, %eax;jl  <IoReportResourceUsage+>;pushl %edi;leal (%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);jne  <IoReportResourceUsage+>;cmpl $, (%eax);jb  <IoReportResourceUsage+>": 3,
                "pushl %eax;pushl %esi;pushl (%ebp);pushl $;pushl (%ebp)": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl (%ebp);pushl -(%ebp)": 1,
                "pushl (%ebp);pushl -(%ebp);calll - <ZwEnumerateValueKey>;movl %eax, %edi;xorl %ebx, %ebx": 1,
                "jge  <IoReportResourceUsage+>;cmpl $, %edi;je  <IoReportResourceUsage+>;cmpb $, (%ebp);je  <IoReportResourceUsage+>": 1,
                "jmp  <IoReportResourceUsage+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl %ecx": 1,
                "movl -(%ebp), %eax;cmpl %edi, (%eax);jne  <IoReportResourceUsage+>;cmpl %edi, (%eax);jb  <IoReportResourceUsage+>": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;cmpl %esi, -(%ebp);jne  <IoReportResourceUsage+>;pushl -(%ebp)": 1,
                "movl %esi, -(%ebp);jbe  <IoReportResourceUsage+>;movl $, %ebx;pushl %edi;leal -(%ebp), %eax": 1,
                "movl (%eax), %eax;movl (%eax), %esi;testl %esi, %esi;je  <IoReportResourceUsage+>;pushl $": 1,
                "cmpl $, %eax;je  <IoReportResourceUsage+>;cmpl $, %eax;jne  <IoReportResourceUsage+>;pushl $": 2,
                "decl (%eax);pushl $;pushl %ebx;calll - <ExAcquireResourceSharedLite>;pushl %edi": 1,
                "calll - <ExAcquireResourceSharedLite>;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "calll - <NtWriteFile+>;movl %eax, %esi;testl %esi, %esi;jl  <IoReportResourceUsage+>;pushl $": 1,
                "movl %eax, %esi;testl %esi, %esi;jl  <IoReportResourceUsage+>;pushl $;pushl -(%ebp)": 1,
                "cmpl $, %esi;je  <IoReportResourceUsage+>;pushl -(%ebp);leal -(%ebp), %eax;pushl $": 1,
                "calll - <_snwprintf>;addl $, %esp;cmpl $-, %eax;movw $, -(%ebp);jne  <IoReportResourceUsage+>": 6,
                "movzwl -(%ebp), %eax;movl -(%ebp), %ecx;shrl %eax;movw %si, (%ecx,%eax,);pushl %edi": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);pushl -(%ebp);leal -(%ebp), %eax;pushl $": 1,
                "addl $, %esp;cmpl $-, %eax;pushl $;popl %edi;movw %di, -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;xorl %esi, %esi;cmpl %esi, -(%ebp);je  <IoReportResourceUsage+>;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>;pushl %esi": 1,
                "movl %fs:, %eax;incl (%eax);jne - <IoReportResourceUsage+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 1,
                "calll *;jmp - <IoReportResourceUsage+>;addl %eax, %eax;movw %ax, -(%ebp);leal -(%ebp), %eax": 1,
                "movw %di, -(%ebp);jmp  <IoReportResourceUsage+>;addl %eax, %eax;movw %ax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;pushl (%eax);movl (%eax), %ecx;addl %eax, %ecx;pushl %ecx": 2,
                "calll - <ZwSetValueKey>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;incl -(%ebp)": 1,
                "calll - <ObfDereferenceObject>;cmpb %bl, -(%ebp);je  <IoReportResourceUsage+>;pushl (%ebp);calll - <ZwClose>": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);addb %al, (%eax);int;int": 4,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;andl $, (%edi);andl $, (%eax)": 1,
                "calll - <IoReportResourceUsage+>;movl %eax, %ebx;testl %ebx, %ebx;jl  <IoReportResourceUsage+>;cmpl $, (%ebp)": 1,
                "pushl %eax;pushl -(%ebp);leal (%ebp), %eax;pushl %eax;movw $, -(%ebp)": 9,
                "pushl %edi;pushl $;pushl (%ebp);calll - <IoReportResourceUsage+>;pushl (%ebp)": 1,
                "calll - <ZwClose>;testl %ebx, %ebx;jge  <IoReportResourceUsage+>;andl $, (%ebp);testb $, (%ebp)": 1,
                "je  <IoReportResourceUsage+>;cmpl $, (%ebp);jne  <IoReportResourceUsage+>;pushl %esi;leal -(%ebp), %eax": 1,
                "movl (%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%eax), %eax;cmpl $-, (%eax)": 1,
                "addb %ah, ;addb %ah, ;addb %dh, (%ebp);addb %al, (%eax);addb %al, (%eax)": 1,
                "movl $, %edi;pushl %edi;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;pushl %ebx;pushl -(%ebp)": 1,
                "movl %eax, %ebx;addl $, %esp;leal -(%ebp), %eax;pushl %eax;calll  <RtlFreeUnicodeString>": 1,
                "shrl %eax;movw $, (%ecx,%eax,);addw $, -(%ebp);movzwl -(%ebp), %eax;pushl %ebx": 1,
                "addw $, -(%ebp);movzwl -(%ebp), %eax;pushl %ebx;movl %esi, %ecx;subl %eax, %ecx": 1,
                "pushl %ecx;leal -(%ebp,%eax,), %eax;pushl %eax;calll - <_snwprintf>;movl %esi, %ecx": 1,
                "pushl $;pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl %ebx;pushl %esi": 1,
                "pushl %ebx;pushl %esi;calll  <IoReportResourceUsage+>;movl %esi, %ecx;leal (%ecx), %eax": 1,
                "leal (%ecx), %eax;movl %ecx, %edx;movl (%eax), %ecx;cmpl %ebx, %ecx;movl %ebx, (%eax)": 1,
                "movl %ebx, (%edx);jne - <IoReportResourceUsage+>;pushl -(%ebp);andl $-, (%esi);calll - <IoDeleteDevice>": 1,
                "testl %eax, %eax;jl  <IoReportResourceUsage+>;pushl -(%ebp);calll - <ZwDeleteKey>;pushl %edi": 1,
                "jmp  <IoReportResourceUsage+>;pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>": 1,
                "calll  <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl $;pushl (%ebp);calll - <IoReportResourceUsage+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "pushl (%ebp);calll - <IoReportResourceUsage+>;testl %eax, %eax;movl %eax, (%ebp);jl  <IoReportResourceUsage+>": 1,
                "addb %al, (%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <IoReportResourceUsage+>;imull $, (%eax), %eax": 3,
                "addb %al, (%esi);cmpb %al, (%eax);aaa;addb %dh, ;addb %al, (%eax,%eax)": 1,
                "jae  <IoReportResourceUsage+>;incl %edi;addb %dl, (%ebp);decl %ecx;addb %al, (%eax,%eax)": 5,
                "insb %dx, %es:(%edi);addb %ah, (%ecx);jns  <IoReportResourceUsage+>;decl %esi;addb %ah, (%ecx)": 1,
                "imull $, (%eax), %eax;incl %esp;addb %ah, (%ebp);jae  <IoReportResourceUsage+>;arpl %ax, (%eax)": 3,
                "movl (%ebp), %eax;xorl %ebx, %ebx;cmpb %bl, (%ebp);pushl %esi;movl (%ebp), %esi": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <IoReportResourceUsage+>": 3,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);jl  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "jl  <IoReportResourceUsage+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl $;incl %eax;pushl %eax;pushl $;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %edi;movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 4,
                "pushl $;pushl %esi;calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>": 1,
                "movl -(%ebp), %eax;jl  <IoReportResourceUsage+>;cmpl $, (%eax);jne  <IoReportResourceUsage+>;movl (%eax), %ecx": 1,
                "calll - <IoReportResourceUsage+>;movw -(%ebp), %ax;movw %ax, -(%ebp);movl -(%ebp), %eax;movw (%eax), %cx": 5,
                "pushl -(%ebp);movb %bl, -(%ebp);calll  <IoReportResourceUsage+>;cmpb %bl, (%ebp);movl %eax, -(%ebp)": 1,
                "cmpb %bl, (%ebp);movl %eax, -(%ebp);je  <IoReportResourceUsage+>;movl %fs:, %eax;decl (%eax)": 1,
                "pushl (%eax);calll - <ZwClose>;pushl -(%ebp);calll  <RtlFreeUnicodeString>;cmpb %bl, -(%ebp)": 1,
                "pushl (%ebp);calll - <NtWriteFile+>;movl %eax, %edi;testl %edi, %edi;jl  <IoReportResourceUsage+>": 2,
                "popl %ebp;retl $;int;incl %ebp;addb %ch, (%esi)": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl %ebx;pushl (%ebp)": 1,
                "calll - <IoReportResourceUsage+>;pushl %ebx;pushl -(%ebp);movl %eax, %edi;calll - <ExFreePoolWithTag>": 1,
                "calll - <ExFreePoolWithTag>;cmpl %ebx, %edi;je  <IoReportResourceUsage+>;movl (%edi), %eax;movl (%eax), %esi": 1,
                "jmp  <IoReportResourceUsage+>;xorl %esi, %esi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "je  <IoReportResourceUsage+>;xorl %ebx, %ebx;incl %ebx;jmp  <IoReportResourceUsage+>;leal -(%ebp), %eax": 1,
                "pushl $;pushl -(%ebp);calll - <NtWriteFile+>;testl %eax, %eax;jl  <IoReportResourceUsage+>": 2,
                "calll - <ExFreePoolWithTag>;testl %esi, %esi;jne  <IoReportResourceUsage+>;pushl $;pushl $": 1,
                "jl  <IoReportResourceUsage+>;movl (%ebp), %eax;movzwl (%eax), %ecx;incl %ecx;incl %ecx": 1,
                "incl %ecx;pushl %ecx;pushl (%eax);leal -(%ebp), %eax;pushl $": 2,
                "pushl (%eax);leal -(%ebp), %eax;pushl $;pushl $;pushl %eax": 2,
                "cmpl -(%ebp), %eax;jb - <IoReportResourceUsage+>;popl %edi;cmpb $, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "je  <IoReportResourceUsage+>;jb  <IoReportResourceUsage+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%ecx)": 1,
                "pushl %edi;calll - <IoReportResourceUsage+>;testb %al, %al;jne  <IoReportResourceUsage+>;cmpb %bl, -(%ebp)": 1,
                "movl $, -(%ebp);calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movzwl (%eax), %ecx;incl %ecx;incl %ecx;pushl %ecx": 2,
                "calll - <ZwSetValueKey>;pushl -(%ebp);calll - <ZwClose>;incl -(%ebp);pushl $": 1,
                "jl  <IoReportResourceUsage+>;movl -(%ebp), %esi;xorl %eax, %eax;leal -(%ebp), %edi;stosl %eax, %es:(%edi)": 1,
                "pushl %eax;pushl (%ebp);pushl (%esi);pushl -(%ebp);pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <IoReportResourceUsage+>;movl -(%ebp), %ecx;popl %edi": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;andl $-, (%eax);addl $, %eax;pushl %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl %esi;pushl %ebx": 1,
                "pushl $;pushl (%esi);calll - <ExFreePoolWithTag>;pushl %ebx;addl $, %edi": 1,
                "calll - <ExFreePoolWithTag>;pushl %ebx;addl $, %edi;pushl %edi;calll - <RtlInitUnicodeString>": 1,
                "movb $, %cl;movb $, (%eax);calll *;movl -(%ebp), %eax;leave": 4,
                "movl %ebx, -(%ebp);cmpl %ebx, (%ebp);je  <IoReportResourceUsage+>;cmpl %ebx, (%esi);jne  <IoReportResourceUsage+>": 1,
                "pushl %ebx;pushl %eax;pushl (%ebp);calll - <ZwSetValueKey>;jmp  <IoReportResourceUsage+>": 2,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;popl %esi": 2,
                "pushl (%esi);calll  <IoReportResourceUsage+>;testl %eax, %eax;movl %eax, -(%ebp);jge  <IoReportResourceUsage+>": 1,
                "andl $, (%ebp);movl (%ebp), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>;movl (%eax), %ebx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>;movl (%eax), %ebx;jmp  <IoReportResourceUsage+>": 1,
                "pushl $;movl $, %edi;pushl %edi;calll - <ExAcquireResourceSharedLite>;cmpl $, (%ebp)": 1,
                "popl %esp;addb %al, (%eax,%eax);addb %ch, (%ecx);jbe  <IoReportResourceUsage+>;addb %dh, %gs:(%edx)": 1,
                "xorl %eax, %eax;jmp  <IoReportResourceUsage+>;pushl %ebx;pushl (%ebp);leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 2,
                "movb $, (%ebp);je  <IoReportResourceUsage+>;movl -(%ebp), %ecx;cmpw %ax, (%ecx);jne  <IoReportResourceUsage+>": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movzwl -(%ebp), %eax;pushl $": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <IoReportResourceUsage+>;movl %eax, %esi": 3,
                "movl (%ebx), %eax;movl %edi, (%eax);jmp  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %edi, %esi;jl - <IoReportResourceUsage+>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <NtWriteFile+>;testl %eax, %eax;pushl $": 1,
                "cmpb %al, (%ebp);jne  <IoReportResourceUsage+>;leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "movzwl %ax, %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;leal -(%ebp), %eax": 1,
                "cmpl (%eax), %esi;jbe  <IoReportResourceUsage+>;cmpl %edi, %esi;jne  <IoReportResourceUsage+>;movl (%ebx), %ebx": 1,
                "cmpl $, %esi;je  <IoReportResourceUsage+>;cmpl $, %esi;jne  <IoReportResourceUsage+>;pushl $": 3,
                "calll - <IoReportTargetDeviceChangeAsynchronous+>;movl $, %esi;jmp  <IoReportResourceUsage+>;movl (%ebx), %eax;movl (%eax), %eax": 1,
                "je  <IoReportResourceUsage+>;decl %ecx;addb %ah, (%eax,%eax);addb %dh, (%edx);addb %ah, %gs:(%esi)": 2,
                "calll - <IoReportResourceUsage+>;movl %eax, %edi;testl %edi, %edi;jl  <IoReportResourceUsage+>;pushl %esi": 2,
                "pushl %esi;leal (%ebx), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %eax;pushl $;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "pushl %eax;calll  <RtlUpcaseUnicodeString>;movl %eax, %edi;testl %edi, %edi;jl  <IoReportResourceUsage+>": 1,
                "pushl %eax;movl %edx, -(%ebp);calll  <RtlFreeUnicodeString>;movl -(%ebp), %eax;pushl %esi": 1,
                "testl %eax, %eax;jl  <IoReportResourceUsage+>;cmpl $, -(%ebp);jne  <IoReportResourceUsage+>;cmpl $, -(%ebp)": 1,
                "jne  <IoReportResourceUsage+>;movl -(%ebp), %eax;jmp  <IoReportResourceUsage+>;xorl %eax, %eax;incl %eax": 1,
                "movl $, -(%ebp);pushl (%ebx);pushl $;pushl -(%ebp);calll - <swprintf>": 1,
                "popl %ebx;calll - <KeRaiseUserException+>;leave;retl $;pushl %ebx": 2,
                "popal;addb %dh, (%ebx);addb %al, %gs:(%eax);addb %cl, (%eax);popal": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);incl %ebx;addb %ch, (%eax,%eax)": 1,
                "pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax;movl %ebx, -(%ebp)": 2,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <IoReportResourceUsage+>;cmpl %ebx, %eax;jl  <IoReportResourceUsage+>": 1,
                "movl %eax, %esi;calll - <ZwClose>;cmpl %ebx, %esi;jge  <IoReportResourceUsage+>;movl %esi, %eax": 1,
                "movl %esi, %eax;jmp  <IoReportResourceUsage+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <IoReportResourceUsage+>;movl (%eax), %esi;addl %eax, %esi;movl %esi, -(%ebp);movw (%eax), %ax": 1,
                "jne  <IoReportResourceUsage+>;pushl %ebx;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <IoGetDmaAdapter+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>": 1,
                "movl %eax, -(%ebp);jl  <IoReportResourceUsage+>;pushl $;pushl $;pushl %ebx": 1,
                "movl (%ebp), %ecx;pushl %esi;movl $, (%esi);movl %eax, (%esi);movl $, (%esi)": 1,
                "movl $, (%esi);movl %ebx, (%esi);movl $, (%esi);movl %eax, (%esi);movl $, (%esi)": 1,
                "movl $, (%esi);movl %ebx, (%esi);movl $, (%esi);movl %edi, (%esi);movl %edx, (%esi)": 1,
                "pushl (%ebp);calll  <RtlFreeUnicodeString>;pushl %edi;calll  <RtlFreeUnicodeString>;movl -(%ebp), %edi": 1,
                "pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>;movl %ebx, (%edi);addl $, -(%ebp)": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "cmpl %ebx, %eax;je  <IoReportResourceUsage+>;movl -(%ebp), %ecx;movl %eax, -(%ebp,%ecx,);incl -(%ebp)": 1,
                "movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl (%ebp), %eax;pushl (%eax)": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movb $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %eax, -(%ebp,%ecx,);incl -(%ebp);movl -(%ebp), %eax;movl %esi, -(%ebp,%eax,)": 1,
                "addb %dh, (%edx);popal;addb %ah, (%ebx);je  <IoReportResourceUsage+>;addb %dh, %gs:(%edx)": 1,
                "arpl %ax, (%eax);insb %dx, %es:(%edi);addb %dh, (%ebp);jae  <IoReportResourceUsage+>;imull $, (%eax), %eax": 1,
                "jae  <IoReportResourceUsage+>;imull $, (%eax), %eax;addb %al, (%eax);pushl %ebx;addb %ah, (%ebp)": 1,
                "arpl %ax, (%eax);jne  <IoReportResourceUsage+>;jb  <IoReportResourceUsage+>;imull $, (%eax), %eax;addb %al, (%eax)": 1,
                "subl $, %esp;movl , %eax;pushl %ebx;movl (%ebp), %ebx;xorl %ecx, %ecx": 1,
                "jne  <IoReportResourceUsage+>;movl (%edi), %edx;cmpl %ecx, %edx;je  <IoReportResourceUsage+>;movl %edx, %eax": 1,
                "pushl %eax;andl $, %esi;movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);pushl %esi;pushl -(%ebp);calll - <IoVerifyVolume+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll  <RtlGetGroupSecurityDescriptor>": 1,
                "calll  <RtlGetGroupSecurityDescriptor>;testl %eax, %eax;jl  <IoReportResourceUsage+>;cmpl $, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "cmpb $, -(%ebp);je  <IoReportResourceUsage+>;orl $, -(%ebp);movl (%edi), %eax;andl $, %eax": 1,
                "je  <IoReportResourceUsage+>;movl -(%ebp), %eax;movl %eax, (%edi);testl %ebx, %ebx;je  <IoReportResourceUsage+>": 1,
                "popl %edi;popl %esi;popl %ebx;je  <IoReportResourceUsage+>;pushl $": 1,
                "pushl %ebx;pushl %edi;movl (%ebp), %edi;leal (%ebp), %eax;pushl %eax": 2,
                "je  <IoReportResourceUsage+>;movl (%esi), %ecx;testb $, %cl;jne  <IoReportResourceUsage+>;orl $, %ecx": 1,
                "pushl %esi;calll  <IoReportResourceUsage+>;andl $-, (%esi);movl (%ebp), %eax;testb $, %al": 1,
                "andl $-, (%esi);movl (%ebp), %eax;testb $, %al;je  <IoReportResourceUsage+>;andb $, %al": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %edx": 1,
                "cmpl $, %edx;je  <IoReportResourceUsage+>;testl $, (%ecx);je  <IoReportResourceUsage+>;movl $, %eax": 1,
                "jne  <IoReportResourceUsage+>;testb $, %cl;jne  <IoReportResourceUsage+>;cmpl $, (%eax);je  <IoReportResourceUsage+>": 1,
                "pushl $;pushl %eax;calll  <IoReportResourceUsage+>;xorl %eax, %eax;jmp  <IoReportResourceUsage+>": 1,
                "cmpl $, (%eax);jne  <IoReportResourceUsage+>;orl $, (%eax);xorl %eax, %eax;popl %ebp": 1,
                "pushl %edi;xorl %edi, %edi;cmpl $, %ecx;jne  <IoReportResourceUsage+>;pushl %eax": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;pushl (%esi);calll  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>": 1,
                "calll  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;cmpl $, %ecx;je  <IoReportResourceUsage+>;cmpl $, %ecx": 1,
                "popl %edi;popl %ebx;jmp  <IoReportResourceUsage+>;movl $, -(%ebp);jmp - <IoReportResourceUsage+>": 1,
                "calll - <KeWaitForSingleObject>;pushl $;calll  <IoReportResourceUsage+>;jmp - <IoReportResourceUsage+>;xorl %esi, %esi": 1,
                "jmp - <IoReportResourceUsage+>;pushl $;movb $, ;calll  <IoReportResourceUsage+>;calll  <IoReportResourceUsage+>": 1,
                "calll  <IoReportResourceUsage+>;calll  <IoReportResourceUsage+>;pushl $;calll  <IoReportResourceUsage+>;movl -(%ebp), %ecx": 1,
                "calll  <IoReportResourceUsage+>;pushl $;calll  <IoReportResourceUsage+>;movl -(%ebp), %ecx;movl %edi, %eax": 1,
                "addb %dh, (%edx);jae  <IoReportResourceUsage+>;addb %al, (%eax);addb %al, (%eax);decl %esp": 2,
                "pushl %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb %bl, -(%ebp)": 2,
                "jl  <IoReportResourceUsage+>;movl -(%ebp), %eax;cmpl $, (%eax);jne  <IoReportResourceUsage+>;cmpl %ebx, (%eax)": 3,
                "pushl %ecx;calll - <IoReportResourceUsage+>;movw (%ebp), %ax;movw %ax, -(%ebp);movl -(%ebp), %eax": 3,
                "movl (%eax), %ecx;addl %eax, %ecx;cmpl %ebx, ;movl %ecx, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "jl  <IoReportResourceUsage+>;movl (%ebp), %eax;movl (%eax), %ecx;addl %eax, %ecx;pushl %ecx": 1,
                "pushl %ebx;pushl %eax;calll - <NtWriteFile+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "jmp  <IoReportResourceUsage+>;pushl %edi;pushl $;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl $, -(%ebp);calll - <IoReportResourceUsage+>;movl -(%ebp), %eax;pushl %ebx;pushl %eax": 1,
                "calll - <IoReportResourceUsage+>;movl -(%ebp), %eax;pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movl %ebx, -(%ebp)": 2,
                "movl %edi, -(%ebp);movl $, -(%ebp);calll  <RtlQueryRegistryValues>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "testl %eax, %eax;movl %eax, (%ebp);jl  <IoReportResourceUsage+>;cmpl $, -(%ebp);je  <IoReportResourceUsage+>": 2,
                "movl %edi, -(%ebp);pushl %ebx;movl $, -(%ebp);movl $, -(%ebp);calll  <RtlQueryRegistryValues>": 2,
                "cmpl $, (%ebp);jl  <IoReportResourceUsage+>;movl -(%ebp), %eax;cmpl $, (%eax);je  <IoReportResourceUsage+>": 1,
                "jmp  <IoReportResourceUsage+>;movb $, -(%ebp);jmp  <IoReportResourceUsage+>;cmpl $, (%ebp);jne  <IoReportResourceUsage+>": 1,
                "pushl $;pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>;movzbl (%ebp), %eax;movl -(%ebp,%eax,), %edi": 1,
                "movl (%edx), %eax;pushl -(%ebp);movl (%eax), %eax;movl (%esi), %ecx;pushl %eax": 1,
                "calll - <IoGetAttachedDevice>;movl (%edi), %edi;cmpl %ebx, %edi;jne - <IoReportResourceUsage+>;incb (%ebp)": 1,
                "calll  <IoReportResourceUsage+>;movl (%edi), %ecx;calll - <ObfDereferenceObject>;pushl $;pushl %edi": 1,
                "pushl %edi;calll - <ExFreePoolWithTag>;testl %esi, %esi;jne - <IoReportResourceUsage+>;addl $, %ebx": 1,
                "je  <IoReportResourceUsage+>;pushl -(%ebp);calll - <ZwClose>;cmpl $, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "int;pushl %ebx;addb %ah, (%ebp);jb  <IoReportResourceUsage+>;jbe  <IoReportResourceUsage+>": 1,
                "pushl $;xorl %ebx, %ebx;movl %eax, -(%ebp);pushl %ebx;leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movw %bx, -(%ebp);movw %bx, -(%ebp);movl %ebx, -(%ebp);movw %bx, -(%ebp)": 3,
                "movl %ebx, -(%ebp);calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;cmpb %bl, -(%ebp)": 1,
                "movl $, -(%ebp);popl %esi;je  <IoReportResourceUsage+>;movzwl -(%ebp), %eax;addl %esi, %eax": 1,
                "movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;pushl $": 2,
                "pushl -(%ebp);calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl -(%ebp);calll - <ZwClose>;leal -(%ebp), %eax": 1,
                "je  <IoReportResourceUsage+>;imull $, (%eax), %eax;addb %al, (%eax);incl %ebx;addb %ch, (%edi)": 1,
                "xorl %eax, %eax;popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);andl %eax, -(%ebp)": 1,
                "movl (%esi), %eax;cmpl , %eax;je  <IoReportResourceUsage+>;andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl %ebx;calll - <IoReportResourceUsage+>": 1,
                "pushl %eax;pushl -(%ebp);pushl %ebx;calll - <IoReportResourceUsage+>;cmpl $, -(%ebp)": 1,
                "pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl %esi;calll - <IoReportResourceUsage+>": 1,
                "pushl $;pushl %ebx;calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl $;pushl $": 1,
                "pushl %ebx;calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl $;pushl $;pushl %esi": 1,
                "leal (%esi), %eax;pushl %eax;calll - <IoReportResourceUsage+>;movl %eax, %edi;testl %edi, %edi": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll - <wcslen>;popl %ecx;leal (%eax,%eax), %eax": 6,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 3,
                "calll - <IoCsqRemoveIrp+>;cmpl $, (%ebx);je  <IoReportResourceUsage+>;movl (%ebx), %eax;movswl (%eax), %ecx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>;addl $, %eax": 2,
                "pushl (%eax);calll - <IoCsqRemoveIrp+>;movl (%edi), %eax;movl (%eax), %eax;addl $, %eax": 1,
                "je  <IoReportResourceUsage+>;cmpl $, (%esi);je  <IoReportResourceUsage+>;movl %fs:, %eax;decl (%eax)": 2,
                "calll - <ExFreePoolWithTag>;jmp  <IoReportResourceUsage+>;xorl %ebx, %ebx;incl %ebx;movl %edi, -(%ebp)": 1,
                "movb %al, -(%ebp);jne  <IoReportResourceUsage+>;cmpl %edi, -(%ebp);je  <IoReportResourceUsage+>;pushl -(%ebp)": 1,
                "cmpl %edi, -(%ebp);je  <IoReportResourceUsage+>;pushl -(%ebp);pushl ;pushl (%esi)": 1,
                "pushl -(%ebp);pushl ;calll  <KeFindConfigurationEntry+>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "movb $, %cl;movb $, (%eax);calll *;leal (%esi), %edi;pushl %edi": 1,
                "calll *;leal (%esi), %edi;pushl %edi;leal (%esi), %ebx;pushl %ebx": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;movw %ax, (%esi);jmp  <IoReportResourceUsage+>;orw $, (%esi)": 1,
                "orw $, (%esi);orl $-, (%ebx);movl $, (%edi);xorl %edi, %edi;cmpl %edi, -(%ebp)": 1,
                "je  <IoReportResourceUsage+>;movl %fs:, %eax;decl (%eax);pushl $;movl $, %edi": 1,
                "testb %bl, %bl;jne  <IoReportResourceUsage+>;cmpb %bl, -(%ebp);je  <IoReportResourceUsage+>;testb $, (%esi)": 1,
                "cmpl %esi, %edi;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movb $, -(%ebp)": 1,
                "cmpb $, -(%ebp);movb %al, -(%ebp);jne  <IoReportResourceUsage+>;pushl %edi;pushl -(%ebp)": 1,
                "pushl %edi;pushl -(%ebp);pushl $;pushl (%ebp);pushl (%ebp)": 2,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl (%ebp);pushl ": 1,
                "ja  <IoReportResourceUsage+>;movzbl (%ecx), %ecx;jmpl *(,%ecx,);cmpb $, (%ebp);jne  <IoReportResourceUsage+>": 1,
                "cmpb $, (%ebp);je  <IoReportResourceUsage+>;cmpl $, -(%ebp);jne  <IoReportResourceUsage+>;movl %ebx, -(%ebp)": 1,
                "pushl (%ebp);pushl %ebx;calll - <IoReportTargetDeviceChangeAsynchronous+>;xorl %ecx, %ecx;testl %eax, %eax": 1,
                "pushl %ebx;calll - <IoReportTargetDeviceChangeAsynchronous+>;xorl %ecx, %ecx;testl %eax, %eax;setl %cl": 1,
                "xorl %ecx, %ecx;testl %eax, %eax;setl %cl;movl %ecx, %esi;jmp  <IoReportResourceUsage+>": 1,
                "pushl %ebx;calll - <IoReportTargetDeviceChangeAsynchronous+>;jmp  <IoReportResourceUsage+>;cmpb $, (%ebp);pushl $": 1,
                "cmpl $, %eax;jne  <IoReportResourceUsage+>;cmpb $, (%ebp);jne  <IoReportResourceUsage+>;pushl %edi": 1,
                "imull $, %eax, %eax;pushl $;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 2,
                "pushl %ebx;calll - <IoReportTargetDeviceChangeAsynchronous+>;jmp - <IoReportResourceUsage+>;pushl %ebx;calll - <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax;calll - <IoReportResourceUsage+>;testl %eax, %eax": 2,
                "movl %esi, %eax;decl %eax;je  <IoReportResourceUsage+>;decl %eax;jne  <IoReportResourceUsage+>": 1,
                "movl %eax, %ebx;jmp  <IoReportResourceUsage+>;cmpl -(%ebp), %ebx;je  <IoReportResourceUsage+>;movl -(%ebp), %ecx": 1,
                "je  <IoReportResourceUsage+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl %edx, -(%ebp);jmp  <IoReportResourceUsage+>": 1,
                "movl %edx, -(%ebp);jmp  <IoReportResourceUsage+>;cmpl %ecx, %ebx;jne  <IoReportResourceUsage+>;movl (%ecx), %ecx": 1,
                "cmpl -(%ebp), %ebx;jne - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;movl (%ebx), %ebx;cmpl -(%ebp), %ebx": 1,
                "cmpb $, (%ebp);jne  <IoReportResourceUsage+>;movl -(%ebp), %eax;movl (%eax), %ecx;calll - <ObfDereferenceObject>": 1,
                "popl %es;decl %ebx;addb %al, (%eax);addl %eax, (%edx);addl (%edx), %ecx": 1,
                "movb , %al;pushl $;pushl $;pushl %eax;pushl ": 1,
                "pushl %esi;calll - <IoReportResourceUsage+>;pushl %edi;leal (%ebp), %eax;pushl %eax": 1,
                "xorl %eax, %eax;movb , %al;pushl %edx;pushl %edx;pushl %eax": 1,
                "addb (%eax), %al;addl (%ebx), %eax;addl (%ebx), %eax;addl %eax, (%ebx);int": 1,
                "xorl %ebx, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ebx": 3,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeWaitForSingleObject>;cmpl %ebx, %eax;jl  <IoReportResourceUsage+>": 1,
                "pushl $;pushl $;pushl (%esi);calll - <IoReportTargetDeviceChangeAsynchronous+>;cmpl %ebx, (%edi)": 1,
                "subl $, %esp;pushl %esi;pushl %edi;pushl (%ebp);calll - <IoGetAttachedDevice>": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);calll - <IoGetAttachedDevice>;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ebx;cmpl %edi, %ebx;je  <IoReportResourceUsage+>;movl %edi, -(%ebp);movl %edi, (%esi)": 1,
                "movl %ebx, -(%ebp);movl %ebx, (%esi);jmp  <IoReportResourceUsage+>;movl $, %eax;movl %eax, -(%ebp)": 1,
                "jne  <IoReportResourceUsage+>;movl $, %eax;jmp  <IoReportResourceUsage+>;xorl %edx, %edx;pushl %edi": 1,
                "movl %eax, (%ebx);leal -(%ebp), %eax;movl %eax, (%ebx);movl %fs:, %eax;movb $, %cl": 1,
                "popl %ecx;subl $, %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx;movl %ebx, %edx": 1,
                "calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;movl (%ebp), %ecx;testl %ecx, %ecx;je  <IoReportResourceUsage+>": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp);pushl $": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;je  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl %eax, %edi;je  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %esi;calll - <NtWriteFile+>;movl %eax, %edi;cmpl $, %ebx;jne  <IoReportResourceUsage+>": 1,
                "movl (%esi), %eax;movl (%eax), %eax;andw $, (%eax);movl -(%ebp), %ecx;movl %edi, %eax": 1,
                "andw $, (%eax);movl -(%ebp), %ecx;movl %edi, %eax;popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;movl %ecx, -(%ebp);movl (%eax), %ecx;movl (%ecx), %ecx;movl (%ecx), %ecx": 1,
                "pushl %edi;movl %eax, -(%ebp);je  <IoReportResourceUsage+>;testb $, (%eax);je  <IoReportResourceUsage+>": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);pushl $": 2,
                "andl $, %eax;je  <IoReportResourceUsage+>;jb  <IoReportResourceUsage+>;andb %dl, %fs:(%ebx);incl %ecx": 2,
                "pushl %esp;pushl %ebp;pushl %ebx;popl %edi;pushl %ebx": 2,
                "pushl %ebx;popl %edi;pushl %ebx;pushl %ebp;incl %ebx": 2,
                "incl %ebp;pushl %ebx;pushl %ebx;orb (%eax), %al;addb %ah, (%eax)": 1,
                "decl %ecx;pushl %edx;pushl %eax;popl %edi;decl %ebp": 9,
                "incl %ebp;pushl %edx;orb %cs:(%eax), %al;int;int": 2,
                "jne  <IoReportResourceUsage+>;movl (%esi), %eax;movl (%eax), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>": 3,
                "je  <IoReportResourceUsage+>;movl (%eax), %edx;movl %edx, (%ecx);movl -(%ebp), %ecx;testl %ecx, %ecx": 2,
                "testl %ecx, %ecx;je  <IoReportResourceUsage+>;movl (%eax), %edx;movl %edx, (%ecx);pushl $": 2,
                "outsl (%esi), %dx;jo  <IoReportResourceUsage+>;jne  <IoReportResourceUsage+>;jb  <IoReportResourceUsage+>;pushl %eax": 1,
                "incl %ebp;pushl %edx;popl %ecx;popl %edi;incl %edx": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $;movl %eax, -(%ebp)": 2,
                "calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;movl -(%ebp), %ecx;movl %ecx, (%esi)": 1,
                "pushl %edi;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "popl %ecx;xorl %eax, %eax;pushl $;movl %esi, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "xorl %ebx, %ebx;pushl %edx;movl %ebx, (%esi);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "movb $, -(%ebp);calll - <IoReportResourceUsage+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <IoReportResourceUsage+>": 1,
                "movl %esi, (%esi);movl %esi, (%esi);calll  <IoReportResourceUsage+>;movl $, (%esi);movl %esi, (%esi)": 2,
                "pushl $;pushl %esi;calll - <ExQueueWorkItem>;xorl %eax, %eax;jmp  <IoReportResourceUsage+>": 1,
                "calll - <IoGetAttachedDeviceReference>;movl %eax, (%ebp);movsbl (%eax), %eax;pushl %edi;pushl %eax": 1,
                "movl $, (%esi);movl %esi, (%esi);addl $, %esi;pushl $;pushl %esi": 2,
                "movl %edi, (%esi);calll - <ExQueueWorkItem>;movl $, %esi;jmp  <IoReportResourceUsage+>;xorl %edx, %edx": 1,
                "movl $, %esi;jmp  <IoReportResourceUsage+>;xorl %edx, %edx;incl %edx;movl %ebx, %ecx": 1,
                "movb $-, (%eax);calll - <IofCallDriver>;movl %eax, %esi;movl (%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "calll - <IofCallDriver>;movl %eax, %esi;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;popl %edi": 1,
                "movl %esi, (%ebx);movl %eax, -(%ebp);movl %esi, (%eax);xorl %eax, %eax;cmpl %esi, (%ebp)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %esi, %esi;jmp  <IoReportResourceUsage+>": 2,
                "movl -(%ebp), %eax;testb $, (%eax);movl -(%ebp), %eax;jne  <IoReportResourceUsage+>;cmpb $, -(%ebp)": 1,
                "cmpl %esi, %edi;jl - <IoReportResourceUsage+>;movl -(%ebp), %eax;jmp  <IoReportResourceUsage+>;cmpl %esi, %eax": 1,
                "je  <IoReportResourceUsage+>;pushl %esi;pushl %eax;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "pushl $;pushl -(%ebp);andl $, %ecx;rep  movsb (%esi), %es:(%edi);calll - <ExFreePoolWithTag>": 2,
                "jmp  <IoReportResourceUsage+>;movl %esi, (%edi);movl %esi, (%ebx);pushl $;leal -(%ebp), %eax": 1,
                "movl %eax, (%ebx);je  <IoReportResourceUsage+>;movl (%eax), %eax;movl %eax, (%edi);jmp  <IoReportResourceUsage+>": 1,
                "calll - <IoReportTargetDeviceChangeAsynchronous+>;movl (%edi), %ebx;pushl %edi;movl %ebx, (%ebp);calll  <IoReportResourceUsage+>": 1,
                "jne  <IoReportResourceUsage+>;pushl $;pushl $;pushl %edi;calll - <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "pushl $;pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>;testl %ebx, %ebx;movl %ebx, %esi": 1,
                "pushl %edi;calll - <IoReportTargetDeviceChangeAsynchronous+>;popl %esi;popl %edi;popl %ebx": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jne  <IoReportResourceUsage+>": 1,
                "movl (%eax), %esi;jmp  <IoReportResourceUsage+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "cmpl $, %eax;je  <IoReportResourceUsage+>;pushl $;pushl (%ebp);pushl (%esi)": 1,
                "testb $, (%esi);jne  <IoReportResourceUsage+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "je  <IoReportResourceUsage+>;cmpl %ebx, (%eax);jbe  <IoReportResourceUsage+>;movl (%eax,%ebx,), %edi;movl (%edi), %eax": 1,
                "calll - <IoReportResourceUsage+>;movl %eax, (%ebp);movl %edi, %ecx;calll - <ObfDereferenceObject>;cmpl $, (%ebp)": 1,
                "jb - <IoReportResourceUsage+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>;cmpl $, (%ebp)": 1,
                "pushl (%ebp);pushl %eax;calll - <IoReportResourceUsage+>;movl %eax, (%ebp);movl %esi, %ecx": 1,
                "movl -(%ebp), %eax;incl %edi;cmpl (%eax), %edi;jb - <IoReportResourceUsage+>;pushl %ebx": 1,
                "cmpl %ebx, %edi;je  <IoReportResourceUsage+>;movl (%edi), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>": 1,
                "pushl %eax;calll  <IoReportResourceUsage+>;testb %al, %al;jne  <IoReportResourceUsage+>;movl (%edi), %edi": 1,
                "pushl %ecx;pushl (%eax);calll - <IoCsqRemoveIrp+>;movl (%esi), %eax;cmpl %edi, %eax": 6,
                "je  <IoReportResourceUsage+>;pushl (%esi);pushl (%edi);calll  <IoReportResourceUsage+>;andb $-, (%esi)": 1,
                "calll  <IoReportResourceUsage+>;andb $-, (%esi);movl %eax, (%ebp);jmp - <IoReportResourceUsage+>;movl $, %eax": 1,
                "movl $, %eax;jmp  <IoReportResourceUsage+>;xorl %ecx, %ecx;cmpl %edi, %ecx;je  <IoReportResourceUsage+>": 1,
                "movl (%ecx), %ecx;jmp  <IoReportResourceUsage+>;xorl %ecx, %ecx;cmpw %di, (%ecx);je  <IoReportResourceUsage+>": 4,
                "movl (%eax), %ecx;movl (%ecx), %ecx;jmp  <IoReportResourceUsage+>;xorl %ecx, %ecx;cmpl %edi, %eax": 6,
                "movl (%ecx), %ecx;movzwl (%ecx), %ecx;movl (%eax), %eax;pushl %ecx;pushl (%eax)": 2,
                "pushl %ebp;movl %esp, %ebp;pushl $;calll  <IoReportResourceUsage+>;movl , %ecx": 1,
                "movl (%ebp), %eax;movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);pushl $": 1,
                "pushl $;pushl $;pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>;movl (%edi), %edi": 1,
                "movl %ecx, (%eax);cmpl %ebx, (%esi);je  <IoReportResourceUsage+>;cmpb %bl, (%esi);je  <IoReportResourceUsage+>": 1,
                "cmpb %bl, (%esi);je  <IoReportResourceUsage+>;pushl %ebx;pushl %ebx;pushl (%esi)": 1,
                "pushl %esi;pushl %edi;movl $, %edi;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "pushl %edi;calll - <ExAcquireResourceExclusiveLite>;leal (%esi), %eax;pushl %eax;calll - <IoReportResourceUsage+>": 1,
                "je  <IoReportResourceUsage+>;cmpl $, (%eax);jne  <IoReportResourceUsage+>;movzwl (%esi), %eax;movzwl , %ecx": 1,
                "jne  <IoReportResourceUsage+>;movl $, %eax;jmp  <IoReportResourceUsage+>;pushl (%esi);pushl ": 1,
                "jmp  <IoReportResourceUsage+>;pushl (%esi);pushl ;pushl $;pushl %edi": 1,
                "calll - <RtlInitUnicodeString>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlVolumeDeviceToDosName+>": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;xorl %eax, %eax;popl %edi": 2,
                "calll - <ExFreePoolWithTag>;xorl %eax, %eax;popl %edi;popl %esi;leave": 3,
                "movl (%ebp), %edi;movl (%edi), %ecx;movl $, %esi;cmpl %esi, %ecx;movl $, %eax": 1,
                "pushl %edi;calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl $;pushl %esi;pushl %edi": 1,
                "calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl $;pushl %esi;pushl %edi;calll - <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movl (%ebp), %eax;testb $, (%eax);je  <IoReportResourceUsage+>;movb $, %al;jmp  <IoReportResourceUsage+>": 1,
                "cmpl $, %eax;je  <IoReportResourceUsage+>;cmpl $, %eax;je  <IoReportResourceUsage+>;xorl %eax, %eax": 1,
                "movl (%eax), %esi;calll  <IoReportResourceUsage+>;testl %eax, %eax;movl %eax, (%ebp);jne  <IoReportResourceUsage+>": 1,
                "calll  <IoReportResourceUsage+>;testl %eax, %eax;movl %eax, (%ebp);jne  <IoReportResourceUsage+>;movl $, %eax": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl (%ebp);pushl %ebx": 1,
                "pushl %ebx;movb $, %bl;je  <IoReportResourceUsage+>;decl %eax;je  <IoReportResourceUsage+>": 1,
                "pushl (%eax);calll - <IoReportResourceUsage+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "testb %al, %al;jne - <IoReportResourceUsage+>;movl $, %edi;movl %edi, %eax;popl %edi": 1,
                "jne  <IoReportResourceUsage+>;cmpl %ebx, (%ecx);je  <IoReportResourceUsage+>;movb $, -(%ebp);pushl %ebx": 1,
                "je  <IoReportResourceUsage+>;movb $, -(%ebp);pushl %ebx;pushl %ebx;pushl (%esi)": 1,
                "pushl $;pushl %eax;movl $, (%esi);movl %esi, (%esi);calll - <ExQueueWorkItem>": 1,
                "movl (%ebp), %eax;movl $, (%ebp);addl $, %eax;cmpl $, %eax;jbe - <IoReportResourceUsage+>": 1,
                "addb %ch, (%esi);decl %ebx;addb %al, (%eax);addb %al, (%ecx);addl %eax, (%ebx)": 1,
                "addl %eax, (%ecx);addb %al, (%ecx);addb %cl, %ah;int;int": 1,
                "addb %al, (%ecx);addb %cl, %ah;int;int;int": 1,
                "movl (%ebp), %eax;pushl %esi;movl (%eax), %esi;xorl %eax, %eax;jmp  <IoReportResourceUsage+>": 1,
                "pushl %esi;movl (%eax), %esi;xorl %eax, %eax;jmp  <IoReportResourceUsage+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jl  <IoReportResourceUsage+>;pushl (%ebp);movl %esi, %eax;movl (%esi), %esi": 1,
                "movl (%esi), %eax;testb $, (%eax);pushl %edi;je  <IoReportResourceUsage+>;cmpl %ebx, (%esi)": 1,
                "pushl %eax;pushl (%esi);calll - <IoCsqRemoveIrp+>;leal (%esi), %edi;cmpw %bx, (%edi)": 1,
                "calll - <IoCsqRemoveIrp+>;pushl %ebx;pushl %ebx;pushl (%esi);pushl $": 1,
                "xorl %ebx, %ebx;movl (%esi), %eax;movl (%eax), %eax;pushl %ebx;pushl %esi": 1,
                "pushl %edi;movl %fs:, %eax;decl (%eax);movl (%ebp), %eax;subl $, %eax": 1,
                "pushl $;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl (%ebp), %esi": 2,
                "pushl %edi;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl (%esi), %edi": 1,
                "movl $, (%eax);movl (%esi), %eax;andl $, (%eax);movl (%esi), %eax;andl $, (%eax)": 1,
                "andl $, (%eax);movl (%esi), %eax;andl $, (%eax);pushl (%esi);calll  <IoReportResourceUsage+>": 1,
                "movl %eax, (%eax);movl (%ebp), %eax;testl %eax, %eax;popl %edi;je  <IoReportResourceUsage+>": 1,
                "addl $, %eax;movl %eax, (%eax);movl %eax, (%eax);movl (%esi), %esi;addl $, %esi": 1,
                "movl $, %ecx;movl %eax, %esi;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 1,
                "movl %eax, %esi;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <IoReportResourceUsage+>": 1,
                "pushl (%ebp);pushl ;calll - <IoReportResourceUsage+>;popl %ebp;retl $": 1,
                "cmpl %ecx, %eax;sbbl %eax, %eax;andl $-, %eax;incl %eax;jmp  <IoReportResourceUsage+>": 2,
                "jbe  <IoReportResourceUsage+>;leal (%esi), %ecx;movl (%ecx), %edx;movl %eax, (%edx);incl %eax": 1,
                "movl %eax, (%edx);incl %eax;addl $, %ecx;cmpl (%esi), %eax;jb - <IoReportResourceUsage+>": 1,
                "incl %eax;addl $, %ecx;cmpl (%esi), %eax;jb - <IoReportResourceUsage+>;pushl $": 1,
                "incl %ecx;addl $, %eax;cmpl %edx, %ecx;jb - <IoReportResourceUsage+>;pushl $": 1,
                "pushl $;pushl %edx;pushl %esi;calll - <qsort>;addl $, %esp": 1,
                "pushl %esi;calll - <qsort>;addl $, %esp;popl %esi;popl %ebp": 1,
                "movl (%ebp), %edx;cmpl $, (%edx);movl (%ebp), %eax;movl (%eax), %ecx;movb $, -(%ebp)": 1,
                "andl $, -(%ebp);leal (%ecx), %esi;movl (%ecx), %ecx;testl %ecx, %ecx;movl %ecx, -(%ebp)": 1,
                "cmpb %dl, %al;je  <IoReportResourceUsage+>;incl (%ebp);cmpl %ebx, (%ebp);leal (%ecx,%edi), %ecx": 1,
                "cmpl %ebx, (%ebp);leal (%ecx,%edi), %ecx;jb - <IoReportResourceUsage+>;movb $, -(%ebp);popl %edi": 1,
                "movb -(%ebp), %al;leave;retl $;movl (%esi), %ecx;jmp  <IoReportResourceUsage+>": 1,
                "pushl %ecx;movl (%ebp), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>;movl (%eax), %eax": 1,
                "movl (%ebp), %eax;pushl %ebx;leal (%eax), %ebx;pushl %esi;movl (%ebx), %esi": 1,
                "je  <IoReportResourceUsage+>;movl (%esi), %edi;testl %edi, %edi;movl %esi, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "cmpl %ebx, %esi;jne - <IoReportResourceUsage+>;movl (%ebp), %eax;leal (%eax), %esi;movl (%esi), %edi": 1,
                "movl (%ebp), %eax;leal (%eax), %esi;movl (%esi), %edi;cmpl %esi, %edi;je  <IoReportResourceUsage+>": 1,
                "leal (%eax), %esi;movl (%esi), %edi;cmpl %esi, %edi;je  <IoReportResourceUsage+>;movl (%edi), %eax": 1,
                "movl (%esi), %edi;cmpl %esi, %edi;je  <IoReportResourceUsage+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "popl %esi;movw %cx, (%eax);movw %cx, (%eax);movw %cx, (%eax);movw %cx, (%eax)": 1,
                "movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %eax;decl %eax;pushl %esi": 1,
                "popl %edi;popl %esi;popl %ebp;retl $;cmpb $, %cl": 1,
                "cmpb $, (%ecx);je  <IoReportResourceUsage+>;cmpl %eax, (%ecx);jne  <IoReportResourceUsage+>;movl (%ecx), %eax": 1,
                "pushl %esi;movl (%ecx), %esi;pushl (%esi);pushl (%esi);pushl (%esi)": 1,
                "movl $, %esi;pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi": 1,
                "pushl $;shll $, %eax;pushl %eax;pushl %esi;calll - <ExAllocatePoolWithTag>": 1,
                "movl %edi, -(%ebp);jne  <IoReportResourceUsage+>;pushl %eax;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movl -(%ebp), %eax;addl %edi, %esi;pushl %esi;pushl %edi;pushl (%ebx)": 1,
                "pushl %esi;pushl %edi;pushl (%ebx);pushl -(%ebp);pushl (%eax)": 1,
                "pushl -(%ebp);pushl (%eax);calll *(%eax);testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "incl -(%ebp);addl $, -(%ebp);testl %eax, %eax;jl  <IoReportResourceUsage+>;cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <IoReportResourceUsage+>;movl %eax, -(%ebp);incl (%ebp);movl (%ebp), %eax": 1,
                "cmpb $, -(%ebp);movl $, %esi;jne  <IoReportResourceUsage+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx;movl %ecx, (%eax);leal (%eax), %ecx;xorl %esi, %esi": 1,
                "xorl %esi, %esi;movl %esi, (%eax);movl %esi, (%eax);movl %edx, (%ecx);movl -(%ebp), %edx": 1,
                "jmp  <IoReportResourceUsage+>;movl -(%ebp), %edi;movl (%ebp), %esi;movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "je  <IoReportResourceUsage+>;decl %ecx;je  <IoReportResourceUsage+>;pushl $;popl %esi": 1,
                "cmpl (%ebx), %eax;jb - <IoReportResourceUsage+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "jmp  <IoReportResourceUsage+>;pushl $;jmp - <IoReportResourceUsage+>;movl $, %eax;jmp  <IoReportResourceUsage+>": 1,
                "movl %edx, -(%ebp);pushl $;pushl (%eax);calll *(%eax);jmp  <IoReportResourceUsage+>": 1,
                "movl %edi, (%eax);calll - <IoReportResourceUsage+>;cmpl %edi, %ebx;jne  <IoReportResourceUsage+>;movl , %eax": 1,
                "popl %ecx;addb %al, (%eax);addb %cl, %ah;int;int": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;cmpl %edi, %eax;je  <IoReportResourceUsage+>;movl (%eax), %eax": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;testl %ebx, %ebx;movl %ebx, %esi": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;addl %eax, %edi;movl (%esi), %esi;testl %esi, %esi": 1,
                "cmpl %ecx, %eax;movl (%ebp), %edx;je  <IoReportResourceUsage+>;testb $, (%eax);jne  <IoReportResourceUsage+>": 1,
                "jne  <IoReportResourceUsage+>;movl (%eax), %eax;jmp  <IoReportResourceUsage+>;movl (%eax), %eax;cmpl %ecx, %eax": 1,
                "jmp  <IoReportResourceUsage+>;movl (%eax), %eax;cmpl %ecx, %eax;je  <IoReportResourceUsage+>;movl (%eax), %eax": 1,
                "movl %ecx, %ebx;shrl $, %ecx;movl %edx, %edi;rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx": 1,
                "shrl %ecx;testl %edx, %edx;je  <IoReportResourceUsage+>;cmpl %ecx, -(%ebp);jbe  <IoReportResourceUsage+>": 1,
                "movl $, (%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp);pushl (%edi);pushl (%ebp)": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi;subl $, -(%ebp);movl -(%ebp), %edi": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %edi;movl (%ebp), %esi;subl $, -(%ebp)": 1,
                "testb %al, %al;jne  <IoReportResourceUsage+>;incl (%ebp);incl -(%ebp);addl $, (%ebp)": 1,
                "jbe  <IoReportResourceUsage+>;movl %esi, %eax;cmpl $, (%eax);je  <IoReportResourceUsage+>;incl %ecx": 1,
                "cmpl $, %ebx;je  <IoReportResourceUsage+>;leal (%ecx), %eax;cmpl %ebx, %eax;jae  <IoReportResourceUsage+>": 1,
                "cmpl $, (%ebp);je  <IoReportResourceUsage+>;testl %edx, %edx;jne  <IoReportResourceUsage+>;movl (%ebp), %esi": 1,
                "movl %esi, (%eax);movl %esi, (%eax);movl %esi, (%eax);movl %esi, (%eax);movl (%ebp), %esi": 1,
                "movl (%ebp), %eax;movl %edx, (%esi);movl %edx, (%esi);movl %edx, (%esi);movl %edx, (%esi)": 1,
                "andw $, (%ecx,%ebx,);popl %edi;popl %esi;xorl %eax, %eax;popl %ebx": 1,
                "jmp  <IoReportResourceUsage+>;movl -(%esi), %eax;leal -(%esi), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl $": 1,
                "movl (%esi), %esi;addl (%esi), %eax;addl $, %ecx;decl %edx;jne - <IoReportResourceUsage+>": 1,
                "movl %edx, -(%eax);movl (%eax), %edx;movl %edx, -(%eax);movl (%eax), %edx;movl %edx, -(%eax)": 1,
                "movl (%eax), %edx;movl %edx, -(%eax);jmp  <IoReportResourceUsage+>;movl -(%eax), %edx;movl %edx, -(%eax)": 1,
                "je  <IoReportResourceUsage+>;andb $-, %al;pushl $;movb %al, (%esi);movl (%esi), %eax": 1,
                "jne  <IoReportResourceUsage+>;xorl %ebx, %ebx;incl %ebx;pushl %esi;pushl %edi": 1,
                "pushl %edi;pushl %edi;pushl %edi;pushl $;movl $, %esi": 3,
                "movl (%eax), %edx;pushl $;pushl %edi;movl %ecx, (%edx);pushl %esi": 1,
                "je  <IoReportResourceUsage+>;movb $, %cl;movb %cl, (%eax);calll *;popl %edi": 1,
                "movb $, %cl;movb %cl, (%eax);calll *;popl %edi;popl %esi": 1,
                "popl %esi;popl %ebx;popl %ebp;retl $;pushl %edi": 1,
                "movl (%ecx), %ecx;cmpl %edi, %ecx;jne - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;movl %edx, %eax": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);pushl %ebx;leal (%ecx), %eax": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;movl -(%ebp), %ebx;leal -(%ebp), %eax;cmpl %eax, %ebx": 1,
                "pushl %ecx;leal (%esi), %edi;movl %edi, -(%ebp);movl (%esi), %eax;pushl $": 1,
                "movl %eax, -(%ebp);movb $, (%esi);movb $, (%esi);leal (%esi), %eax;movl %eax, (%eax)": 1,
                "popl %edi;popl %esi;movl -(%ebp), %eax;popl %ebx;leave": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi": 4,
                "movl (%eax), %edx;addl $, %edx;addl %edx, %edi;addl %edx, %eax;decl -(%ebp)": 1,
                "addl %edi, %ecx;decl -(%ebp);jne - <IoReportResourceUsage+>;cmpl $, -(%ebp);jne  <IoReportResourceUsage+>": 1,
                "decl -(%ebp);jne - <IoReportResourceUsage+>;cmpl $, -(%ebp);jne  <IoReportResourceUsage+>;movl (%ebp), %eax": 1,
                "movl %eax, %edi;testl %edi, %edi;movl %edi, -(%ebp);jne  <IoReportResourceUsage+>;xorl %esi, %esi": 1,
                "movl (%esi), %ebx;testl %ebx, %ebx;leal (%esi), %ecx;movl $, (%ebp);movl %ecx, -(%ebp)": 1,
                "cmpb $, (%ecx);pushl $;popl %ebx;jne  <IoReportResourceUsage+>;movl (%ecx), %ebx": 1,
                "addl %ebx, (%ebp);addl %ebx, %ecx;decl -(%ebp);movl %ecx, -(%ebp);jne - <IoReportResourceUsage+>": 1,
                "jne - <IoReportResourceUsage+>;movl (%ebp), %ecx;cmpl %ecx, (%esi);jne  <IoReportResourceUsage+>;movl (%ebp), %ecx": 1,
                "pushl $;leal (%ecx), %esi;decl %eax;xorl %edx, %edx;popl %ecx": 3,
                "incl %edi;pushl (%esi);calll - <IoReportResourceUsage+>;andl $, (%esi);testb $, -(%esi)": 1,
                "jne  <IoReportResourceUsage+>;cmpl $, (%ebx);movb %al, -(%ebp);je  <IoReportResourceUsage+>;movb $, -(%ebp)": 1,
                "je  <IoReportResourceUsage+>;movb $, -(%ebp);testl %esi, %esi;je  <IoReportResourceUsage+>;cmpl $, %eax": 1,
                "leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);movb -(%ebp), %al;movl %esi, (%esi)": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);jmp  <IoReportResourceUsage+>;movl -(%ebp), %esi;testl %esi, %esi": 1,
                "movb $, (%esi);movb $, (%esi);cmpb $, -(%ebp);je  <IoReportResourceUsage+>;leal -(%ebp), %eax": 1,
                "movb $, (%esi);cmpb $, -(%ebp);je  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movb -(%ebp), %cl;movb %cl, (%eax);movl %eax, (%eax);movl %eax, (%eax);movl -(%ebp), %ecx": 1,
                "movl %ecx, (%eax);movl %edi, (%eax);leal (%edi), %ecx;movl (%ecx), %edx;movl %ecx, (%eax)": 1,
                "jne  <IoReportResourceUsage+>;pushl %ebx;pushl %edi;calll - <ExFreePoolWithTag>;movl $, %eax": 1,
                "cmpl %ebx, %esi;jne  <IoReportResourceUsage+>;pushl (%ebp);pushl (%ebp);jmp  <IoReportResourceUsage+>": 1,
                "cmpb %dl, (%eax);je  <IoReportResourceUsage+>;movl (%eax), %eax;cmpl %ecx, %eax;jne - <IoReportResourceUsage+>": 1,
                "pushl -(%ebp);pushl (%eax);calll *(%eax);cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %eax, -(%ebp);jne  <IoReportResourceUsage+>;movb $, -(%ebp);movl (%esi), %esi": 1,
                "cmpl %ebx, %eax;movb $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);jne  <IoReportResourceUsage+>;movl (%esi), %eax;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;movl $, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %eax;cmpl %ebx, %eax": 1,
                "movl (%ecx), %eax;cmpl $-, %eax;movl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);jne  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;movl %ebx, -(%ebp);movl , %eax": 1,
                "movl %edx, %ecx;pushl %esi;movb %bl, -(%ebp);movl %ecx, (%eax);calll - <IoReportResourceUsage+>": 1,
                "movb %bl, -(%ebp);movl %ecx, (%eax);calll - <IoReportResourceUsage+>;pushl %ebx;pushl %ebx": 1,
                "movl %eax, -(%ebp);decl -(%ebp);jne - <IoReportResourceUsage+>;popl %edi;pushl %ebx": 1,
                "popl %edi;pushl %ebx;pushl %ebx;pushl %esi;calll  <IoReportResourceUsage+>": 1,
                "pushl %edi;movl $, %edi;je  <IoReportResourceUsage+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "movl %ecx, (%eax);xorl %edi, %edi;jmp  <IoReportResourceUsage+>;movl , %eax;testl %eax, %eax": 1,
                "movl %eax, (%ebp);je  <IoReportResourceUsage+>;cmpl %esi, (%eax);je  <IoReportResourceUsage+>;movl (%eax), %eax": 1,
                "calll - <IoReportTargetDeviceChangeAsynchronous+>;movl (%ebp), %eax;movl %esi, (%eax);pushl (%ebp);pushl %esi": 1,
                "movl , %eax;testl %eax, %eax;je  <IoReportResourceUsage+>;movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "testl %eax, %eax;je  <IoReportResourceUsage+>;movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "movl %eax, (%esi);xorl %esi, %esi;jmp  <IoReportResourceUsage+>;movl $, %esi;movl (%ebp), %eax": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;xorb %bl, %bl;cmpl $, (%ebp)": 1,
                "cmpl $, %ecx;je  <IoReportResourceUsage+>;testb $, (%eax);je  <IoReportResourceUsage+>;movl (%eax), %eax": 1,
                "pushl %edi;pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>;movl (%ebp), %eax;incl (%eax)": 1,
                "movl (%esi), %ecx;calll - <ObfReferenceObject>;addl $, (%edi);jmp  <IoReportResourceUsage+>;pushl (%esi)": 1,
                "andl %ebx, (%esi);jmp  <IoReportResourceUsage+>;pushl (%esi);pushl $;calll - <IoReportResourceUsage+>": 1,
                "pushl %edi;jae  <IoReportResourceUsage+>;movl (%ebp), %edi;addl $, %edi;movl (%edi), %esi": 1,
                "jmp  <IoReportResourceUsage+>;xorl %ebx, %ebx;cmpl %ebx, (%ebp);jbe  <IoReportResourceUsage+>;movl (%ebp), %edi": 1,
                "jne  <IoReportResourceUsage+>;incl %ebx;addl $, %edi;cmpl (%ebp), %ebx;jb - <IoReportResourceUsage+>": 1,
                "cmpl (%ebp), %ebx;jb - <IoReportResourceUsage+>;movb $, %al;popl %edi;popl %esi": 1,
                "movl (%ebp), %edi;pushl %esi;leal -(%ebp), %eax;pushl %edi;pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %ebx;movl %esi, (%esi);movl %esi, (%esi)": 1,
                "orl $-, (%ebp);pushl %esi;calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>": 1,
                "pushl %eax;calll - <KeQuerySystemTime>;movl -(%ebp), %eax;subl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "sbbl -(%ebp), %ecx;pushl $;pushl $;pushl %ecx;pushl %eax": 2,
                "pushl %esi;pushl %edi;pushl %ebx;calll - <IoReportResourceUsage+>;cmpb $, %al": 1,
                "pushl %eax;pushl %esi;movl %ecx, (%esi);movl -(%ebp), %ecx;pushl %edi": 1,
                "movl %ecx, (%esi);movl -(%ebp), %ecx;pushl %edi;pushl %ebx;movl %ecx, (%esi)": 1,
                "movl %esi, (%eax);movl (%ebp), %eax;pushl %edi;movl (%eax), %edi;movl (%edi), %eax": 1,
                "js  <IoReportResourceUsage+>;leal (%edx), %eax;movl (%edx), %edx;shll $, %edx;addl %eax, %edx": 1,
                "je  <IoReportResourceUsage+>;testb $, (%eax);je  <IoReportResourceUsage+>;cmpb $, -(%ebp);jne  <IoReportResourceUsage+>": 1,
                "movl -(%ebp), %edx;addl $, %eax;jmp  <IoReportResourceUsage+>;cmpb $-, %dl;jne  <IoReportResourceUsage+>": 1,
                "shll $, %esi;leal (%esi,%ecx,), %edi;pushl $;addl %eax, %edi;pushl %edi": 1,
                "movl (%ebp), %ecx;movl %eax, (%ebx);movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, (%ebx);xorl %eax, %eax": 1,
                "jmp  <IoReportResourceUsage+>;movl -(%ebp), %edx;movl -(%ebp), %eax;movl -(%ebp), %ecx;addl $, -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;movl -(%ebp), %ecx;addl $, -(%ebp);incl (%edi);movl -(%ebp), %eax": 1,
                "incl (%edi);movl -(%ebp), %eax;addl $, -(%ebp);movl %ecx, (%eax);movl -(%ebp), %eax": 1,
                "jmp  <IoReportResourceUsage+>;xorl %eax, %eax;movb %al, (%ecx);leal (%ecx), %eax;movl %edx, (%eax)": 1,
                "leal (%ecx), %edx;movl %edx, (%eax);xorl %edx, %edx;cmpl $, (%edi);sete %dl": 1,
                "movl %edx, (%eax);cmpb $, (%ecx);je  <IoReportResourceUsage+>;movb $, (%ecx);incl (%eax)": 1,
                "movb $, (%ecx);incl (%eax);movl (%eax), %edx;movl %edx, -(%ebp);jmp  <IoReportResourceUsage+>": 1,
                "incl -(%ebp);movl -(%ebp), %edx;movl %edx, (%eax);addl $, %esi;cmpl -(%ebp), %esi": 1,
                "calll - <IoReportResourceUsage+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;decl -(%ebp)": 1,
                "addb %al, (%eax);pushl %eax;addb %ch, (%esi);jo  <IoReportResourceUsage+>;decl %ebp": 1,
                "subl $, %esp;movl , %eax;andl $, -(%ebp);pushl %ebx;movl %eax, -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;xorl %eax, %eax;incl %eax;movl %eax, (%esi);movl (%edi), %edx": 1,
                "movl %edx, (%esi);movl (%edi), %edx;movl %edx, (%esi);movl -(%ebp), %edx;movl %edx, (%esi)": 1,
                "cmpb $, (%eax);movl %eax, -(%ebp);je  <IoReportResourceUsage+>;movl (%eax), %ecx;cmpl $, (%ecx)": 1,
                "movl (%ecx), %ecx;movl -(%ebp), %edi;addl $, -(%ebp);movl %ecx, %esi;movl -(%ebp), %ecx": 1,
                "je  <IoReportResourceUsage+>;movl (%eax), %ecx;xorl %esi, %esi;cmpl %esi, %ecx;je  <IoReportResourceUsage+>": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movb $-, (%ecx);movb $-, (%edx);movb $, (%ecx)": 1,
                "movw %ax, (%ecx);pushl $;addl $, %ecx;pushl %esi;pushl %ecx": 1,
                "pushl -(%ebp);calll - <IoRegisterPlugPlayNotification+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;movl -(%ebp), %eax": 1,
                "pushl %ebx;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl $, (%eax);movl %esi, (%eax)": 1,
                "movl %esi, (%eax);jmp - <IoReportResourceUsage+>;int;int;int": 1,
                "decl %ebx;jne - <IoReportResourceUsage+>;popl %edi;popl %esi;popl %ebx": 1,
                "subl $, %esp;pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax": 2,
                "calll - <IoReportResourceUsage+>;cmpl %esi, (%ebx);jne  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %esi, %ebx;jl  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax;calll - <IoReportResourceUsage+>": 1,
                "movl (%eax), %eax;movl (%eax), %edx;jmp  <IoReportResourceUsage+>;xorl %edx, %edx;cmpl %ebx, %edx": 1,
                "movl %eax, (%ecx);je  <IoReportResourceUsage+>;cmpl $, %eax;jne  <IoReportResourceUsage+>;movl , %eax": 1,
                "je  <IoReportResourceUsage+>;movl (%eax), %edx;movl (%eax), %eax;movl (%eax), %eax;movb (%eax), %cl": 1,
                "movl (%eax), %eax;movb (%eax), %cl;cmpb $-, %cl;je  <IoReportResourceUsage+>;cmpb $-, %cl": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <IoReportResourceUsage+>;cmpl $, %esi": 1,
                "movl $, %esi;pushl (%ebp);calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;movl $, %esi": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);jne - <IoReportResourceUsage+>;pushl %edi": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%esi);jne  <IoReportResourceUsage+>;movl $, %eax": 1,
                "divl %ecx;incl %eax;movl %eax, (%ebp);xorl %edi, %edi;testb $, -(%esi)": 1,
                "je  <IoReportResourceUsage+>;leal (%edi), %ebx;movl (%ebx), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>": 1,
                "pushl (%esi);calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;movl -(%ebp), %eax": 1,
                "je  <IoReportResourceUsage+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>;andl %ebx, (%edi)": 1,
                "sbbl %eax, %eax;notl %eax;andl %edi, %eax;movl %eax, -(%esi);movl (%ebp), %eax": 1,
                "jae  <IoReportResourceUsage+>;pushl %ebx;pushl %esi;subl %ecx, %eax;pushl %edi": 1,
                "xorl %edx, %edx;pushl $;leal (%ecx), %esi;popl %ecx;divl %ecx": 1,
                "xorl %edi, %edi;pushl %ecx;pushl %edi;calll - <IoReportResourceUsage+>;testb %al, %al": 1,
                "movl $, -(%esi);movl %eax, (%esi);calll - <ExFreePoolWithTag>;movl %ebx, (%esi);movl %ebx, (%edi)": 1,
                "movl (%ebp), %esi;pushl %edi;pushl %esi;calll - <IoReportResourceUsage+>;leal (%esi), %edi": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl %ebx, (%edi);leal (%esi), %edi;movl (%edi), %eax": 2,
                "movl %ebx, (%edi);movl (%esi), %eax;movl %eax, %ecx;andl $, %ecx;cmpl $, %ecx": 1,
                "andl $, %eax;movl %eax, (%esi);addl $, %esi;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "pushl %esi;calll - <KeWaitForSingleObject>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 2,
                "movb $, (%eax);calll *;popl %edi;popl %esi;movl %ebx, %eax": 3,
                "movl -(%ebp), %ecx;movl (%ebp), %edi;addl %eax, %ebx;cmpl %ebx, %eax;movl %ecx, (%edi)": 1,
                "pushl (%ebp);pushl $;pushl %eax;calll - <IoReportResourceUsage+>;addl $, %esi": 1,
                "pushl ;calll - <IoReportResourceUsage+>;movl -(%ebp), %eax;testl %eax, %eax;jne  <IoReportResourceUsage+>": 1,
                "jne  <IoReportResourceUsage+>;movl %eax, -(%ebp);addl %ebx, %eax;leal (%eax,%eax,), %eax;pushl $": 1,
                "addl %ebx, %eax;leal (%eax,%eax,), %eax;pushl $;shll $, %eax;pushl %eax": 1,
                "testb $, (%eax);jne  <IoReportResourceUsage+>;pushl $;movl %edx, %edi;popl %ecx": 1,
                "jne  <IoReportResourceUsage+>;pushl $;movl %edx, %edi;popl %ecx;movl %eax, %esi": 1,
                "movl $, -(%ebp);je  <IoReportResourceUsage+>;pushl %esi;pushl %edi;calll - <ExFreePoolWithTag>": 1,
                "je  <IoReportResourceUsage+>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl %esi, -(%ebp)": 1,
                "calll - <IoReportResourceUsage+>;movl $, %edi;jmp  <IoReportResourceUsage+>;movl -(%ebp), %esi;pushl %esi": 1,
                "movl %edx, %esi;movl %eax, %edi;rep  movsl (%esi), %es:(%edi);testb $, (%edx);je  <IoReportResourceUsage+>": 1,
                "calll - <IoReportResourceUsage+>;pushl $;pushl $;pushl %edi;calll - <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "jb - <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax;calll - <IoReportResourceUsage+>;movl (%ebp), %ebx": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;calll - <ObfDereferenceObject>;subl $, -(%ebp);cmpl %esi, -(%ebp)": 1,
                "testl %ebx, %ebx;je  <IoReportResourceUsage+>;movl -(%ebp), %eax;leal -(%ebx,%eax,), %eax;cmpl %ebx, %eax": 1,
                "movl (%eax), %ecx;movl (%ecx), %esi;jmp  <IoReportResourceUsage+>;xorl %esi, %esi;pushl %eax": 1,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;movl %edi, %eax;popl %edi": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;pushl %edi;movl %eax, -(%ebp);leal (%eax,%eax,), %eax": 1,
                "movb $, (%ebp);jne  <IoReportResourceUsage+>;movb $, (%ebp);cmpb $, (%ebp);je  <IoReportResourceUsage+>": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>;cmpl (%esi), %eax;je  <IoReportResourceUsage+>": 1,
                "jae  <IoReportResourceUsage+>;leal -(%edi), %edx;testb $, (%eax);jne  <IoReportResourceUsage+>;addl $, %eax": 1,
                "movl -(%ebp), %edi;subl $, %edx;cmpl %edi, %eax;jb - <IoReportResourceUsage+>;pushl -(%ebp)": 1,
                "pushl $;pushl %esi;calll - <IoReportResourceUsage+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;cmpl $, %eax;je  <IoReportResourceUsage+>;cmpb $, (%ebp);je - <IoReportResourceUsage+>": 1,
                "je - <IoReportResourceUsage+>;orb $, (%edi);pushl %esi;pushl $;calll - <IoReportResourceUsage+>": 1,
                "pushl %esi;calll - <IoReportResourceUsage+>;jmp - <IoReportResourceUsage+>;movl -(%ebp), %edi;cmpl %edi, %esi": 1,
                "cmpl %eax, -(%ebp);jne  <IoReportResourceUsage+>;movl %eax, (%esi);jmp  <IoReportResourceUsage+>;orl $, (%esi)": 1,
                "movl %eax, (%esi);jmp  <IoReportResourceUsage+>;orl $, (%esi);movl $, (%esi);addl $, %esi": 1,
                "movl -(%ebp), %edi;jmp  <IoReportResourceUsage+>;movl $, -(%ebp);jmp  <IoReportResourceUsage+>;cmpl %edi, %ebx": 1,
                "je  <IoReportResourceUsage+>;orl $, (%ecx);movl $, (%ecx);addl $, %ecx;decl %eax": 1,
                "calll - <IoReportResourceUsage+>;cmpb $, (%ebp);popl %edi;popl %esi;popl %ebx": 1,
                "pushl %esi;movl %fs:, %eax;decl (%eax);xorl %esi, %esi;pushl %esi": 1,
                "movl %esi, -(%ebp);jne  <IoReportResourceUsage+>;movl (%ebp), %edi;cmpl %esi, %edi;je  <IoReportResourceUsage+>": 1,
                "jne  <IoReportResourceUsage+>;movl , %eax;movl %eax, (%edi);movl , %eax;movl %eax, (%ebx)": 1,
                "movl -(%ebp), %eax;movl %eax, (%edi);movl -(%ebp), %ecx;movl (%edi), %esi;movl (%ebx), %edi": 1,
                "movl -(%ebp), %eax;pushl %ebx;movl %eax, (%ebx);calll - <IoReportResourceUsage+>;movl $, -(%ebp)": 1,
                "calll - <IoReportResourceUsage+>;movl $, -(%ebp);cmpl %esi, -(%ebp);jge  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>": 1,
                "jge  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;movl (%ebx), %eax;movl %eax, -(%ebp);pushl %ebx": 1,
                "cmpl $, (%ebp);je  <IoReportResourceUsage+>;cmpl %esi, (%ebp);je  <IoReportResourceUsage+>;pushl (%ebp)": 1,
                "testb $, %ah;je  <IoReportResourceUsage+>;movl %eax, %ecx;andl $, %eax;andl $, %ecx": 1,
                "movl %eax, (%esi);je  <IoReportResourceUsage+>;pushl $;xorl %eax, %eax;popl %ecx": 1,
                "cmpl %ebx, %edi;popl %edi;jge  <IoReportResourceUsage+>;movl (%esi), %eax;andl $, %eax": 1,
                "popl %edi;jge  <IoReportResourceUsage+>;movl (%esi), %eax;andl $, %eax;orl -(%ebp), %eax": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll - <IoReportResourceUsage+>": 1,
                "cmpl %ebx, (%ebp);je  <IoReportResourceUsage+>;movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;pushl $;pushl $;movl %ecx, (%eax)": 1,
                "movw %cx, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ebx;cmpb $, -(%ebp);je  <IoReportResourceUsage+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;pushl %edi;pushl %edi;leal -(%ebp), %eax": 1,
                "pushl (%ebp);pushl (%ebp);calll - <RtlCompareMemory>;cmpl $, %eax;sete %al": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %fs:, %eax;cmpb $, (%eax);je  <IoReportResourceUsage+>": 1,
                "pushl %ebx;movl , %eax;addl $, %eax;pushl %eax;calll - <KeWaitForSingleObject>": 1,
                "movl , %eax;addl $, %eax;pushl %eax;calll - <KeWaitForSingleObject>;movl %eax, -(%ebp)": 1,
                "pushl %ebx;pushl %edi;pushl %esi;addl $, %eax;pushl %eax": 1,
                "movl %esi, (%eax);movl , %eax;movl %esi, (%eax);movl , %eax;movb $, (%eax)": 1,
                "movl %esi, (%eax);movl , %eax;movb $, (%eax);movl , %eax;movb $, (%eax)": 1,
                "movl , %eax;addl $, %eax;movl $, %ebx;pushl %ebx;movl %eax, (%eax)": 1,
                "addl $, %eax;movl $, %ebx;pushl %ebx;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "movl , %eax;pushl $;pushl %esi;movl $, (%eax);calll - <ExAllocatePoolWithTag>": 1,
                "shrl $, %ecx;leal (%ebx), %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx": 7,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %esi, %esi;pushl $": 1,
                "jne  <IoReportResourceUsage+>;pushl $;pushl %edi;calll - <IoReportResourceUsage+>;testb %al, %al": 3,
                "calll - <KeSetEvent>;movl , %eax;pushl %esi;pushl $;pushl %esi": 1,
                "movl , %ecx;je  <IoReportResourceUsage+>;cmpl %esi, %eax;jne  <IoReportResourceUsage+>;cmpl %esi, (%ecx)": 1,
                "movl (%ebp), %esi;movl %eax, %edi;movl (%ebp), %eax;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl %eax, (%ebx);movl (%ebp), %eax;pushl %ebx;movl %ecx, -(%ebp);movl %eax, (%ebx)": 1,
                "movl %ecx, -(%ebp);movl %eax, (%ebx);calll - <IoReportResourceUsage+>;movl -(%ebp), %ecx;leal (%ebx), %edi": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl %esi, %ecx": 2,
                "jmp  <IoReportResourceUsage+>;pushl %edi;movl %esi, %ecx;xorl %eax, %eax;shrl $, %ecx": 1,
                "movl %edx, (%ebx);leal (%ebx), %edi;movl $, %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "movl %esi, %ecx;calll - <ObfReferenceObject>;movl (%esi), %eax;movl (%eax), %esi;testl %esi, %esi": 2,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;jne  <IoReportResourceUsage+>;movl $, %esi": 3,
                "shrl %eax;andw $, (%ebx,%eax,);testl %edx, %edx;je  <IoReportResourceUsage+>;movzwl (%edx), %ecx": 1,
                "leal (%ebx,%eax,), %eax;movl %eax, (%ebp);movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "pushl %ebx;movl $, (%ebx);calll - <IoReportResourceUsage+>;pushl $;pushl %ebx": 2,
                "leal (%ebx,%eax,), %edi;movl -(%ebp), %eax;movl %eax, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "jmp  <IoReportResourceUsage+>;pushl %edi;movl %esi, %ecx;shrl $, %ecx;xorl %eax, %eax": 1,
                "pushl (%ebp);calll - <IoReportResourceUsage+>;movl %eax, %ebx;testl %ebx, %ebx;jne  <IoReportResourceUsage+>": 1,
                "movl %ebx, %edi;rep  stosl %eax, %es:(%edi);pushl -(%ebp);movl %edx, %ecx;andl $, %ecx": 1,
                "movl %esi, %ecx;movl (%eax), %esi;movl %ecx, %eax;shrl $, %ecx;movl %ebx, %edi": 1,
                "movw %si, (%edi);pushl %esi;movl (%ebp), %esi;pushl (%esi);calll - <ExFreePoolWithTag>": 1,
                "calll - <IoReportResourceUsage+>;cmpl %ebx, %eax;movl %eax, -(%ebp);je  <IoReportResourceUsage+>;cmpl $, -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;movl $, -(%ebp);jmp - <IoReportResourceUsage+>;cmpl $, %eax;je  <IoReportResourceUsage+>": 1,
                "jne - <IoReportResourceUsage+>;cmpl $, (%edi);jne - <IoReportResourceUsage+>;cmpl %ebx, (%esi);jbe - <IoReportResourceUsage+>": 1,
                "pushl $;jmp - <IoReportResourceUsage+>;cmpl %ebx, -(%ebp);jne  <IoReportResourceUsage+>;pushl %esi": 1,
                "calll - <IoReportResourceUsage+>;testb %al, %al;jne  <IoReportResourceUsage+>;movl (%esi), %eax;cmpl $, %eax": 1,
                "testb %al, %al;jne  <IoReportResourceUsage+>;movl (%esi), %eax;cmpl $, %eax;movl %ebx, -(%ebp)": 1,
                "cmpl $, %eax;movl %ebx, -(%ebp);je  <IoReportResourceUsage+>;cmpl $, %eax;jne  <IoReportResourceUsage+>": 1,
                "testb %al, %al;jne  <IoReportResourceUsage+>;pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>;testb $, (%esi)": 1,
                "cmpl $, %esi;je  <IoReportResourceUsage+>;cmpl %ebx, %esi;jne  <IoReportResourceUsage+>;cmpl $, %esi": 1,
                "cmpl %ebx, %esi;je  <IoReportResourceUsage+>;cmpl $, %esi;jne  <IoReportResourceUsage+>;testb $, (%eax)": 1,
                "calll - <IoReportResourceUsage+>;movl $, -(%ebp);jmp  <IoReportResourceUsage+>;addl $, %eax;pushl %eax": 1,
                "calll - <IoReportResourceUsage+>;movl $, -(%ebp);jmp  <IoReportResourceUsage+>;movl $, -(%ebp);cmpl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %edi;jmp  <IoReportResourceUsage+>;cmpb %bl, -(%ebp);je  <IoReportResourceUsage+>;pushl -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%edi), %eax;cmpl %ebx, %eax;jne  <IoReportResourceUsage+>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl %edi;calll - <IoReportResourceUsage+>": 1,
                "jmp  <IoReportResourceUsage+>;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll - <RtlCopyUnicodeString>": 1,
                "jmp  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 6,
                "jle  <IoReportResourceUsage+>;movl -(%ebp), %eax;movl (%eax,%esi,), %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl $, -(%ebp);je  <IoReportResourceUsage+>;addl $, %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "calll - <RtlCopyUnicodeString>;jmp  <IoReportResourceUsage+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl -(%ebp);calll - <IoReportResourceUsage+>;movl $, -(%ebp);cmpl %ebx, -(%ebp);jge - <IoReportResourceUsage+>": 1,
                "decl %esi;jns - <IoReportResourceUsage+>;cmpl %ebx, -(%ebp);jge - <IoReportResourceUsage+>;leal -(%ebp), %eax": 1,
                "calll  <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;cmpl %ebx, -(%ebp);je  <IoReportResourceUsage+>;pushl %ebx": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl %ebx;pushl %ebx;pushl $": 1,
                "jl - <IoReportResourceUsage+>;cmpl $, -(%ebp);je  <IoReportResourceUsage+>;cmpl $, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "cmpl $, -(%ebp);je  <IoReportResourceUsage+>;cmpl $, -(%ebp);jne  <IoReportResourceUsage+>;pushl %ebx": 1,
                "calll *(%eax);cmpl %ebx, -(%ebp);je  <IoReportResourceUsage+>;cmpl $, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "andb $, %cl;cmpl $, -(%ebp);movb %al, -(%ebp);movb %cl, (%ebp);je  <IoReportResourceUsage+>": 1,
                "jne  <IoReportResourceUsage+>;movl %ebx, -(%ebp);jmp  <IoReportResourceUsage+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "pushl %esi;calll - <IoReportResourceUsage+>;pushl $;pushl %ebx;pushl %ebx": 1,
                "calll *(%eax);movl -(%ebp), %eax;pushl (%eax);calll *(%eax);xorl %edi, %edi": 1,
                "movl -(%ebp), %eax;pushl (%eax);calll *(%eax);pushl %ebx;pushl -(%ebp)": 1,
                "calll - <ObfReferenceObject>;movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%esi);movl -(%ebp), %eax": 1,
                "movl %eax, (%esi);movl %edi, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movb -(%ebp), %al": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movb -(%ebp), %al;movb %al, (%esi);cmpl %ebx, (%edi)": 1,
                "sete %al;movb %al, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);leal (%esi), %eax": 1,
                "pushl (%ebp);pushl -(%ebp);pushl -(%ebp);calll  <PoShutdownBugCheck+>;cmpl %ebx, %eax": 1,
                "cmpl %ebx, %eax;jge  <IoReportResourceUsage+>;cmpl $, %eax;pushl %ebx;jne  <IoReportResourceUsage+>": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp - <IoReportResourceUsage+>;pushl $": 1,
                "calll - <IoReportResourceUsage+>;pushl (%edi);pushl -(%ebp);pushl -(%ebp);calll - <IoReportResourceUsage+>": 1,
                "pushl %ebx;pushl %ebx;pushl -(%ebp);pushl -(%ebp);calll - <RtlVolumeDeviceToDosName+>": 1,
                "pushl %edi;calll - <IoReportResourceUsage+>;testb %al, %al;je  <IoReportResourceUsage+>;pushl %esi": 1,
                "addl $, %eax;jmp  <IoReportResourceUsage+>;movl (%eax), %esi;movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "pushl %ebx;pushl $;calll - <KeSetEvent>;movb $, ;calll - <IoUnregisterPlugPlayNotification+>": 1,
                "pushl $;pushl %edi;movl $, (%edi);movl %edi, (%edi);calll - <ExQueueWorkItem>": 1,
                "jne  <IoReportResourceUsage+>;movl $, -(%ebp);jmp  <IoReportResourceUsage+>;movl %esi, %ecx;xorl %eax, %eax": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl $, (%edx);movl %ebx, (%edx);leal (%edx), %edi": 1,
                "movl %ebx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movzwl (%eax), %eax;shrl %eax": 2,
                "je  <IoReportResourceUsage+>;movl $, %eax;jmp  <IoReportResourceUsage+>;pushl %ebx;pushl %esi": 4,
                "popl %eax;movl %eax, (%edx);movl %ebx, (%edx);movl %ecx, (%edx);movw (%esi), %cx": 1,
                "movl %ebx, (%edx);movl %ecx, (%edx);movw (%esi), %cx;testw %cx, %cx;je  <IoReportResourceUsage+>": 1,
                "leal (%edx), %edi;rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx;andl %eax, %ecx;rep  movsb (%esi), %es:(%edi)": 1,
                "andl %eax, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %esi;movzwl (%esi), %ecx;movl %edx, %edi": 1,
                "movl %edx, %edi;subl %ecx, %edi;movl -(%ebp), %ecx;addl %ecx, %edi;movl %edi, (%edx)": 1,
                "pushl %edx;rep  movsb (%esi), %es:(%edi);calll - <IoReportResourceUsage+>;popl %edi;popl %esi": 1,
                "movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>;movl %eax, %edx;testl %edx, %edx;jne  <IoReportResourceUsage+>": 3,
                "calll - <ObfDereferenceObject>;movl $, %eax;jmp  <IoReportResourceUsage+>;xorl %eax, %eax;movl %esi, %ecx": 1,
                "cmpb $, (%ebp);rep  stosb %al, %es:(%edi);movl (%ebp), %eax;movl %eax, (%edx);movl (%ebp), %eax": 1,
                "cmpb $, (%ebp);je  <IoReportResourceUsage+>;orl $, (%edx);movl (%ebp), %eax;movl %eax, (%edx)": 1,
                "movl (%eax), %esi;movzwl %cx, %ecx;movl %ecx, %ebx;shrl $, %ecx;leal (%edx), %edi": 1,
                "movl $, (%edx);movl %eax, (%edx);movl %ecx, (%edx);movw (%ebx), %cx;cmpw %ax, %cx": 1,
                "shrl %ecx;pushl %edx;movw %ax, (%edx,%ecx,);calll - <IoReportResourceUsage+>;popl %edi": 1,
                "movl %eax, (%edx);movl (%ebp), %eax;leal (%edx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl $, (%edx);movl $, (%edx);leal (%edx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl $, %eax;jmp  <IoReportResourceUsage+>;pushl %esi;pushl %edi;xorl %eax, %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%edx);movl (%ebp), %eax;movl $, (%edx);leal (%edx), %edi": 1,
                "je  <IoReportResourceUsage+>;movzwl (%eax), %eax;jmp  <IoReportResourceUsage+>;xorl %eax, %eax;movzwl (%ebx), %ecx": 1,
                "popl %eax;cmpl %eax, (%ebp);jne  <IoReportResourceUsage+>;movl $, %esi;jmp  <IoReportResourceUsage+>": 1,
                "movl %edi, %ecx;calll - <ObfReferenceObject>;movl (%edi), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jne  <IoReportResourceUsage+>;movl %edi, %ecx;calll - <ObfDereferenceObject>": 1,
                "jne  <IoReportResourceUsage+>;movl %edi, %ecx;calll - <ObfDereferenceObject>;jmp  <IoReportResourceUsage+>;movl %esi, %ecx": 1,
                "pushl %ebx;calll - <IoReportResourceUsage+>;popl %esi;popl %ebx;popl %edi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %edx;jne  <IoReportResourceUsage+>;movl $, %eax;jmp  <IoReportResourceUsage+>": 1,
                "popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;movl %eax, (%edx)": 1,
                "movl $, (%edx);calll - <IoReportResourceUsage+>;cmpl %ebx, %eax;popl %edi;popl %esi": 1,
                "popl %edi;popl %esi;jl  <IoReportResourceUsage+>;pushl %ebx;pushl %ebx": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <KeWaitForSingleObject>;popl %ebx": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);je  <IoReportResourceUsage+>;addb %ah, %gs:(%eax,%eax);addb %cl, %ah": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;calll - <IoReportResourceUsage+>;movl -(%ebp), %ecx": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;movl -(%ebp), %ecx;popl %edi;popl %ebx": 1,
                "pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>;testb $, (%esi);jne  <IoReportResourceUsage+>;cmpl $, (%esi)": 1,
                "cmpl $, (%esi);jne  <IoReportResourceUsage+>;movl (%edi), %eax;movl (%esi), %ecx;movl %ecx, (%edi,%eax,)": 1,
                "movl %ecx, (%edi,%eax,);incl (%edi);jmp  <IoReportResourceUsage+>;pushl %edi;pushl $": 1,
                "movb $, -(%ebp);calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;je  <IoReportResourceUsage+>": 1,
                "pushl %edi;leal (%esi,%esi,), %eax;shll $, %eax;pushl %eax;pushl $": 1,
                "addl $, %ecx;addl $, %eax;decl -(%ebp);jne - <IoReportResourceUsage+>;cmpl $, -(%ebp)": 1,
                "pushl (%ebp);pushl %eax;pushl %edi;pushl %esi;calll - <IoReportResourceUsage+>": 1,
                "decl %esi;jne - <IoReportResourceUsage+>;movl -(%ebp), %edi;pushl $;pushl %edi": 1,
                "pushl $;movl $, %ebx;pushl %ebx;calll - <ExAcquireResourceSharedLite>;movl $, %esi": 2,
                "calll - <ZwDeleteValueKey>;pushl (%ebp);movl %eax, %edi;calll - <ZwClose>;movl %ebx, %ecx": 1,
                "xorl %ebx, %ebx;pushl %edi;movl (%ebp), %edi;movw %bx, (%eax);movl %ebx, (%eax)": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl $, %edi;pushl %edi;pushl %esi": 1,
                "pushl $;pushl %esi;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <IoReportResourceUsage+>;pushl %ebx;pushl -(%ebp)": 1,
                "jmp  <IoReportResourceUsage+>;addl %eax, %eax;movw %ax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl (%ebp);calll - <ZwQueryValueKey>;cmpl %ebx, %eax;jge  <IoReportResourceUsage+>;cmpl $, %eax": 1,
                "retl $;int;andl $, %eax;addb %al, (%eax);addb %ah, ": 1,
                "pushl %edi;pushl $;leal -(%ebp), %ecx;pushl %ecx;xorl %edi, %edi": 1,
                "jl  <IoReportResourceUsage+>;cmpl %edi, -(%ebp);movl (%ebp), %eax;jne  <IoReportResourceUsage+>;cmpb $, (%eax)": 1,
                "movw $, -(%ebp);jmp  <IoReportResourceUsage+>;addl %eax, %eax;movw %ax, -(%ebp);pushl %esi": 1,
                "pushl %esi;pushl -(%ebp);leal -(%ebp), %eax;pushl $;movl %eax, -(%ebp)": 1,
                "cmpl %edi, -(%ebp);jbe  <IoReportResourceUsage+>;cmpl -(%ebp), %ebx;jae  <IoReportResourceUsage+>;pushl %ebx": 1,
                "pushl %esi;movw %cx, -(%ebp);movl (%eax), %ecx;pushl $;addl %eax, %ecx": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;pushl %edi;pushl %eax": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl $, %esi": 1,
                "pushl %ebx;movl $, -(%ebp);calll  <RtlQueryRegistryValues>;movl %eax, %edi;testl %edi, %edi": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);calll  <RtlQueryRegistryValues>;movl %eax, %edi": 1,
                "movl (%ebp), %ecx;movw (%ecx), %ax;cmpw $, %ax;ja  <IoReportResourceUsage+>;movl $, %edi": 1,
                "jbe  <IoReportResourceUsage+>;pushl %esi;leal (%ebp), %ecx;pushl %ecx;movl (%eax), %ecx": 1,
                "leal (%ebp), %eax;pushl %eax;movl $, %esi;pushl %esi;pushl (%ebp)": 1,
                "pushl %esi;pushl (%ebp);calll - <IoReportResourceUsage+>;movl %eax, %edi;testl %edi, %edi": 1,
                "pushl %esi;pushl (%ebp);movb $, (%ebp);calll - <IoReportResourceUsage+>;xorl %edx, %edx": 1,
                "addb %bl, (%eax,%eax);addb %dl, (%eax);incl %ebx;addb %cl, (%ecx);popl %esp": 1,
                "addb %cl, (%ebp);incl %ebx;addb %cl, (%ecx);incl %ecx;addb %al, (%eax)": 1,
                "pushl (%esi);calll - <_wcsicmp>;testl %eax, %eax;popl %ecx;popl %ecx": 3,
                "popl %ebp;retl $;int;pushl %edx;addb %ah, (%ebp)": 1,
                "retl $;int;pushl %edx;addb %ah, (%ebp);insl %dx, %es:(%edi)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $;calll - <IoReportResourceUsage+>": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;movl (%ebp), %eax;testl %eax, %eax;jne  <IoReportResourceUsage+>": 1,
                "addb %al, %gs:(%eax,%eax);addb %dh, (%ebx);popal;addb %ah, (%edx);insb %dx, %es:(%edi)": 2,
                "leave;retl $;int;pushl %esp;addb %bh, (%ecx)": 1,
                "pushl $;pushl (%ebp);calll - <IoReportResourceUsage+>;movl %eax, %edi;testl %edi, %edi": 1,
                "popl %esi;popl %ebp;retl $;incl %esi;addb %ch, (%ecx)": 1,
                "retl $;incl %esi;addb %ch, (%ecx);jb  <IoReportResourceUsage+>;insl %dx, %es:(%edi)": 1,
                "outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %ah, (%esi);imull $, (%eax), %eax;addb %al, (%eax)": 4,
                "subl $, %esp;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "jne  <IoReportResourceUsage+>;cmpl $, (%eax);jne  <IoReportResourceUsage+>;movl (%eax), %ecx;movl (%eax,%ecx), %esi": 4,
                "testl %esi, %esi;je  <IoReportResourceUsage+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "xorl %eax, %eax;movw (%edi), %ax;movl %eax, -(%ebp);movzwl %ax, %eax;shrl %eax": 1,
                "movw $, (%eax);addw $, (%edi);pushl (%ebp);pushl %edi;calll  <RtlAppendStringToString>": 1,
                "incl (%esi);movw -(%ebp), %ax;movw %ax, (%edi);jmp  <IoReportResourceUsage+>;movl $, (%esi)": 1,
                "calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;cmpl $, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;leal -(%ebp), %eax;pushl %eax": 2,
                "calll - <ExFreePoolWithTag>;leal -(%ebp), %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx": 1,
                "pushl %eax;xorl %ebx, %ebx;pushl %ebx;pushl $;pushl $": 1,
                "movl -(%ebp), %eax;orb $, (%eax);movl -(%ebp), %eax;movl (%eax), %eax;orl $, (%eax)": 1,
                "calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl -(%ebp);pushl ;calll - <IoReportTargetDeviceChangeAsynchronous+>;cmpl %esi, -(%ebp)": 1,
                "pushl (%ebp);movl %esi, -(%ebp);calll - <NtWriteFile+>;cmpl %esi, %eax;jl  <IoReportResourceUsage+>": 1,
                "je  <IoReportResourceUsage+>;pushl $;jmp  <IoReportResourceUsage+>;cmpl $, %eax;je  <IoReportResourceUsage+>": 1,
                "pushl -(%ebp);calll - <IoReportTargetDeviceChangeAsynchronous+>;cmpb $, -(%ebp);je  <IoReportResourceUsage+>;movl -(%ebp), %eax": 1,
                "movl (%eax), %ecx;movl (%eax,%ecx), %ecx;cmpl %esi, %ecx;movl %ecx, -(%ebp);je  <IoReportResourceUsage+>": 1,
                "movl %ecx, -(%ebp);je  <IoReportResourceUsage+>;movl -(%ebp), %eax;orb $, (%eax);movl -(%ebp), %eax": 1,
                "calll - <IoReportResourceUsage+>;movl -(%ebp), %eax;movl $, %esi;testl %esi, (%eax);je  <IoReportResourceUsage+>": 1,
                "je  <IoReportResourceUsage+>;testl %esi, (%eax);jne  <IoReportResourceUsage+>;pushl %eax;calll - <IoReportResourceUsage+>": 1,
                "testb %al, %al;jne  <IoReportResourceUsage+>;pushl -(%ebp);calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl $": 1,
                "calll - <ObfReferenceObject>;xorl %ebx, %ebx;jmp  <IoReportResourceUsage+>;pushl -(%ebp);calll - <IoDeleteDevice>": 1,
                "je  <IoReportResourceUsage+>;movl (%esi), %ecx;movzwl %di, %eax;shrl %eax;movw $, (%ecx,%eax,)": 1,
                "movw $, (%ecx,%eax,);addw $, (%esi);pushl (%ebp);pushl %esi;calll  <RtlAppendStringToString>": 1,
                "calll - <ExAcquireResourceExclusiveLite>;pushl %ebx;pushl %ebx;pushl $;pushl $": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <IoReportResourceUsage+>;movl %ebx, %ecx;movl %edi, (%esi)": 1,
                "calll - <ObfReferenceObject>;movl %esi, (%ebp);jmp  <IoReportResourceUsage+>;movl (%eax), %edi;movl (%ebx), %eax": 1,
                "movl %esi, (%ebp);jmp  <IoReportResourceUsage+>;movl (%eax), %edi;movl (%ebx), %eax;movl (%eax), %eax": 1,
                "jmp  <IoReportResourceUsage+>;movl (%eax), %edi;movl (%ebx), %eax;movl (%eax), %eax;cmpl , %eax": 1,
                "xorl %edi, %edi;incl %edi;movw %di, (%esi);movl %edi, (%esi);movw $, (%esi)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;pushl %eax": 2,
                "jl  <IoReportResourceUsage+>;movl -(%ebp), %eax;movl %eax, (%esi);jmp  <IoReportResourceUsage+>;subl $, %ecx": 1,
                "subl $, %ecx;je  <IoReportResourceUsage+>;decl %ecx;je  <IoReportResourceUsage+>;decl %ecx": 1,
                "jmp  <IoReportResourceUsage+>;cmpl $, -(%ebp);jne - <IoReportResourceUsage+>;cmpl %edx, %edi;je - <IoReportResourceUsage+>": 1,
                "pushl %ecx;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <IoReportResourceUsage+>": 1,
                "movzwl (%edi), %eax;pushl $;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 2,
                "jmp  <IoReportResourceUsage+>;movw %cx, (%edx);incl %edx;incl %edx;incl %eax": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %esi;pushl $": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jge  <IoReportResourceUsage+>;pushl %esi;pushl (%ebp)": 1,
                "movl %esi, (%ebp);jmp  <IoReportResourceUsage+>;movl $, %edi;jmp  <IoReportResourceUsage+>;movl $, %edi": 1,
                "xorl %edi, %edi;movl %edi, (%ebp);pushl (%ebp);pushl %edi;pushl (%ebp)": 1,
                "addb %bl, (%eax,%eax);addb %bh, (%ecx);jae  <IoReportResourceUsage+>;je  <IoReportResourceUsage+>;addb %ch, %gs:(%ebp)": 1,
                "outsb (%esi), %dx;addb %ah, (%ebx);je  <IoReportResourceUsage+>;imull $, (%eax), %eax;incl %ecx": 1,
                "je  <IoReportResourceUsage+>;imull $, (%eax), %eax;incl %ecx;addb %ah, (%eax,%eax);addb %dh, (%eax)": 1,
                "imull $, (%eax), %eax;addb %dh, %gs:(%edx);addb %al, (%eax);addb %al, (%eax);pushl %eax": 1,
                "pushl %eax;addb %cl, (%esi);pushl %eax;addb %ah, (%eax);addb %al, (%edx)": 2,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;pushl $;leal -(%ebp), %eax": 5,
                "calll - <IoReportResourceUsage+>;testl %eax, %eax;jge  <IoReportResourceUsage+>;movl $, %eax;jmp  <IoReportResourceUsage+>": 1,
                "pushl %esi;jmp  <IoReportResourceUsage+>;movl -(%ebp), %eax;movl (%eax), %ecx;shrl %ecx": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;shrl %ecx;andw $, (%eax,%ecx,);addl $, %eax": 1,
                "movl %eax, %esi;testl %esi, %esi;jl  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jl  <IoReportResourceUsage+>;leal (%ebx), %eax;pushl $;pushl %eax;calll - <wcscmp>": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;je  <IoReportResourceUsage+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <ZwQueryValueKey>;movl %eax, %esi": 5,
                "pushl %eax;pushl -(%ebp);calll - <ZwQueryValueKey>;movl %eax, %esi;jmp  <IoReportResourceUsage+>": 1,
                "movl $, %esi;testl %esi, %esi;jl  <IoReportResourceUsage+>;movl (%ebx), %eax;movl (%ebp), %esi": 1,
                "movl %eax, (%ecx);je  <IoReportResourceUsage+>;movl (%esi), %ecx;movl %eax, %edi;movl %ecx, %eax": 1,
                "je  <IoReportResourceUsage+>;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>;movl %esi, %edi": 1,
                "movl $, %ecx;jmp  <IoReportResourceUsage+>;cmpl $, -(%eax);jne  <IoReportResourceUsage+>;movb $, %bl": 1,
                "jne  <IoReportResourceUsage+>;movb $, %bl;movl (%eax), %eax;cmpl %ecx, %eax;jne - <IoReportResourceUsage+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl $;calll - <IoRegisterPlugPlayNotification+>": 1,
                "movb %cl, ;popl %esi;popl %ebx;popl %ebp;retl $": 1,
                "int;int;movl %edi, %edi;pushl %esi;movl $, %esi": 3,
                "movl $, %esi;movl %esi, %ecx;calll *;movl , %eax;movl $, %ecx": 1,
                "movl , %eax;movl (%ebp), %edx;pushl %ebx;pushl %edi;pushl $": 1,
                "movl (%ebp), %edx;pushl %ebx;pushl %edi;pushl $;movl %eax, -(%ebp)": 1,
                "calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "cmpl %ebx, %ecx;je  <IoReportResourceUsage+>;movl (%ecx), %eax;xorl %edi, %edi;cmpl %ebx, %eax": 1,
                "retl $;int;incl %ebp;addb %ch, (%edx);addb %ah, %gs:(%ebx)": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <IoReportResourceUsage+>;movl %ebx, %esi;pushl %edi": 1,
                "pushl %eax;pushl -(%ebp);movl %edx, -(%ebp);pushl $;movl $, -(%ebp)": 1,
                "testl %edi, %edi;jl  <IoReportResourceUsage+>;subl $, -(%ebp);pushl -(%ebp);calll - <ZwClose>": 1,
                "movl %eax, (%esi);calll - <ObfReferenceObject>;xorl %eax, %eax;popl %esi;leave": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;cmpl $, %eax;jne  <IoReportResourceUsage+>": 1,
                "calll - <IoReportResourceUsage+>;testb %al, %al;jne  <IoReportResourceUsage+>;pushl $;pushl $": 1,
                "calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;cmpl $, %eax;je  <IoReportResourceUsage+>;cmpl $, %eax": 1,
                "movl %eax, (%esi);movl $, (%esi);movl %esi, (%eax);incl ;movl %edi, %ecx": 1,
                "popl %edi;movl (%ebx), %eax;leal (%ebp), %ecx;pushl %ecx;pushl $": 1,
                "pushl $;calll - <IoReportResourceUsage+>;pushl $;pushl $;calll - <IoReportResourceUsage+>": 1,
                "calll - <ExFreePoolWithTag>;movl %ebx, (%esi);movl $, %edi;movl %edi, %ecx;calll *": 1,
                "movl $, %edi;movl %edi, %ecx;calll *;leal (%esi), %eax;movl (%eax), %ecx": 1,
                "cmpl $, (%ebp);movb %bl, (%ebp);jne  <IoReportResourceUsage+>;cmpl %ebx, (%esi);je  <IoReportResourceUsage+>": 1,
                "movl %eax, %edi;calll *;decl %edi;popl %edi;popl %esi": 1,
                "movl (%ebp), %ecx;andl $, (%ecx);movl %edx, (%ecx);movl (%eax), %eax;movl (%ebp), %ecx": 2,
                "xorl %edx, %edx;divl (%ecx);popl %ebp;retl $;int": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;movb $, (%eax)": 3,
                "movw (%ecx), %dx;movw %dx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl (%ecx), %ecx": 1,
                "outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax);addb %dl, (%edx);outsl (%esi), %dx": 5,
                "xorl %esi, %esi;pushl %esi;pushl $;pushl $;pushl $": 1,
                "movl $, ;movl $, ;calll  <LsaDeregisterLogonProcess+>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "pushl %eax;pushl %eax;xorl %edi, %edi;pushl %edi;pushl $": 1,
                "pushl %eax;xorl %edi, %edi;pushl %edi;pushl $;calll *%esi": 1,
                "movl %eax, (%edx);jne  <IoReportResourceUsage+>;pushl $;movl %ebx, %esi;movl %edx, %edi": 1,
                "movl %edx, %edi;popl %ecx;rep  movsl (%esi), %es:(%edi);popl %edi;popl %esi": 1,
                "int;pushl %edx;addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax)": 4,
                "addb %ch, (%edi);je  <IoReportResourceUsage+>;decl %ecx;addb %dl, (%edx);pushl %ecx": 1,
                "movl $, ;movl $, ;calll  <LsaDeregisterLogonProcess+>;retl;int": 3,
                "movl (%eax), %edx;movl (%ebp), %ecx;andl $, (%ecx);movl %edx, (%ecx);movl (%eax), %ecx": 1,
                "subl (%ecx), %eax;popl %ebp;retl $;int;int": 2,
                "movl $, ;movl $, ;movl $, ;movl $, ;movl $, ": 10,
                "leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp);pushl $": 1,
                "movl %edx, (%ecx);movl (%eax), %edx;movl %edx, (%ecx);movl (%eax), %edx;pushl %esi": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;testl %ecx, %ecx;jne  <IoReportResourceUsage+>;incl %ecx": 1,
                "addl $, %eax;adcl %edi, %edx;testl %edx, %edx;popl %edi;popl %esi": 1,
                "popl %ebx;jg  <IoReportResourceUsage+>;jl  <IoReportResourceUsage+>;testl %eax, %eax;jae  <IoReportResourceUsage+>": 1,
                "movl %edx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %ecx;addl $, %ecx;movl (%ebp), %eax;adcl $, %eax;testl %eax, %eax": 1,
                "cmpl $, %ecx;ja  <IoReportResourceUsage+>;movl (%ebp), %edx;movl %eax, (%edx);movl %ecx, (%edx)": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);movl %ecx, (%edx);movb $, %al;jmp  <IoReportResourceUsage+>": 1,
                "jmp  <IoReportResourceUsage+>;xorb %al, %al;popl %ebp;retl $;int": 1,
                "movb (%esi), %al;pushl %eax;pushl (%esi);pushl (%esi);pushl (%esi)": 1,
                "pushl (%esi);pushl (%esi);pushl (%esi);pushl (%esi);pushl (%ebx)": 2,
                "pushl %eax;jmp  <IoReportResourceUsage+>;movl (%esi), %eax;pushl (%eax);movl (%edi), %eax": 1,
                "adcl -(%ebp), %ecx;addl $-, %eax;adcl $-, %ecx;pushl %ecx;pushl %eax": 2,
                "adcl $-, %ecx;pushl %ecx;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 2,
                "pushl -(%ebp);movl (%esi), %edi;movl (%edi), %eax;movzwl (%eax), %eax;pushl %eax": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;movb $, -(%ebp);movl %ecx, (%ebp);jne  <IoReportResourceUsage+>": 1,
                "ja  <IoReportResourceUsage+>;movl (%ebp), %edi;movl (%eax), %ebx;pushl %esi;pushl (%edi)": 1,
                "jge  <IoReportResourceUsage+>;pushl %esi;pushl %edi;calll *(%edi);testb %al, %al": 1,
                "outsl (%esi), %dx;addb %ch, (%edi);je  <IoReportResourceUsage+>;pushl %eax;addb %ch, (%edi)": 1,
                "calll - <IoWriteErrorLogEntry>;popl %edi;popl %esi;leave;retl $": 1,
                "movl (%ebp), %eax;movl $, %esi;pushl %esi;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);pushl $": 1,
                "shrl $, %ecx;rep  movsl (%esi), %es:(%edi);pushl $;movl %eax, %ecx;pushl $": 2,
                "pushl $;movl $, %ebx;pushl %ebx;calll - <RtlEnumerateGenericTableAvl>;testl %eax, %eax": 1,
                "movl %esi, (%eax);xorl %esi, %esi;jmp  <IoReportResourceUsage+>;movl %esi, (%eax);movl $, %esi": 1,
                "incl %ecx;addb %cl, (%ecx);decl %esp;addb %al, (%ebp);incl %esp": 4,
                "je  <IoReportResourceUsage+>;andl $, -(%ebp);pushl $;popl %eax;movl %eax, -(%ebp)": 1,
                "pushl $;popl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp);pushl %edi": 4,
                "testl %eax, %eax;jne  <IoReportResourceUsage+>;movl -(%ebp), %eax;testb $, %al;je  <IoReportResourceUsage+>": 1,
                "calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;andl $, -(%ebp);cmpl %ebx, -(%ebp);movl $, %edi": 1,
                "popl %ecx;popl %ecx;jne  <IoReportResourceUsage+>;movl (%esi), %eax;jmp  <IoReportResourceUsage+>": 1,
                "calll - <IoReportResourceUsage+>;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <IoReportResourceUsage+>;cmpl %edi, %eax": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "addb %al, (%ecx);decl %ecx;addb %cl, (%eax,%eax);addb %al, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax,%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %dl, (%eax,%eax);addb %al, (%edx)": 1,
                "incl %ebp;addb %ah, (%eax);addb %al, (%esi);incl %ecx;addb %cl, (%ecx)": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl $-;pushl -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %eax;pushl $-;pushl -(%ebp);movl %esi, -(%ebp);calll - <ZwMapViewOfSection>": 1,
                "jne  <IoReportResourceUsage+>;testb $-, ;movl $, %edi;jne  <IoReportResourceUsage+>;orb $-, ": 1,
                "pushl %esi;pushl %esi;pushl $;calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;cmpl %esi, -(%ebp);movl %eax, %edi;je  <IoReportResourceUsage+>": 1,
                "leave;retl $;int;incl %edx;addb %dl, (%ebp)": 1,
                "cmpl $, %edi;jne  <IoReportResourceUsage+>;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 1,
                "pushl $;calll - <IoReportResourceUsage+>;cmpl %ebx, %edi;je  <IoReportResourceUsage+>;cmpl $, %edi": 1,
                "leal (%ebp), %eax;pushl %eax;orl $-, %esi;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "orl $-, %esi;movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);calll - <IoReportResourceUsage+>": 1,
                "movl %eax, %edi;calll - <ZwClose>;testl %edi, %edi;popl %edi;jl  <IoReportResourceUsage+>": 1,
                "je  <IoReportResourceUsage+>;incl %edx;decl %eax;cmpb $, (%edx);jne - <IoReportResourceUsage+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;popl %edi;popl %esi": 2,
                "pushl $;movl %eax, -(%ebp);calll - <KeInitializeSpinLock>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;calll - <KeSetSystemAffinityThread>;calll - <KeIFlatToGdtSelector+>;pushl $;pushl $": 1,
                "movl (%eax), %eax;pushl %ebx;xorl %ecx, %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %eax;movzwl , %eax;pushl %eax;calll  <KeISetGdtSelector>;popl %edi": 1,
                "cmpl %ebx, %esi;jne  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl $, -(%ebp);calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportResourceUsage+>;leal (%ebp), %eax": 2,
                "je  <IoReportResourceUsage+>;cmpl %ebx, (%ebp);je  <IoReportResourceUsage+>;leal (%edi), %eax;movl (%eax), %esi": 1,
                "movl (%eax), %esi;pushl %eax;pushl -(%ebp);pushl %esi;calll - <IoReportResourceUsage+>": 1,
                "jl  <IoReportResourceUsage+>;pushl %ebx;pushl (%edi);pushl %esi;calll - <IoReportResourceUsage+>": 1,
                "jne  <IoReportResourceUsage+>;movl -(%ebp), %eax;leal (%ebp), %ecx;addl $, %eax;pushl %ecx": 1,
                "addl $, %eax;pushl %ecx;pushl %eax;movl %eax, -(%ebp);calll  <IoReportResourceUsage+>": 1,
                "cmpl %ebx, -(%ebp);je  <IoReportResourceUsage+>;cmpl %ebx, (%ebp);je  <IoReportResourceUsage+>;leal (%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "addl (%ebp), %ebx;pushl $;leal (%ebx), %eax;pushl %eax;pushl $": 1,
                "movl %edi, -(%ebp);rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 2,
                "movl -(%ebp), %edi;movl -(%ebp), %ecx;movl -(%ebp), %esi;addl %edx, %edi;movl %ecx, %edx": 1,
                "movw %bx, (%eax);cmpb $, (%ebp);je  <IoReportResourceUsage+>;pushl $;pushl -(%ebp)": 1,
                "pushl %edi;movw (%esi), %di;testw $, %di;je  <IoReportResourceUsage+>;movl (%esi), %edx": 1,
                "movw $, -(%ebp);movw %cx, -(%ebp);movw $, -(%ebp);calll  <IoUnregisterShutdownNotification+>;movl (%esi), %esi": 1,
                "jne - <IoReportResourceUsage+>;popl %esi;leave;retl $;int": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movw $, -(%ebp);calll  <IoUnregisterShutdownNotification+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movw $, -(%ebp);calll  <IoUnregisterShutdownNotification+>;leave": 1,
                "movl $, %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax": 2,
                "movw $, -(%ebp);movw %di, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl %edi, -(%ebp);calll - <IoReportResourceUsage+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl $, -(%ebp);calll  <RtlAppendStringToString>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "pushl -(%ebp);movl $, -(%ebp);calll - <IoReportResourceUsage+>;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;popl %esi": 1,
                "calll - <ZwClose>;movl -(%ebp), %eax;popl %esi;popl %edi;leave": 1,
                "pushl %ebx;pushl %esi;pushl %edi;je  <IoReportResourceUsage+>;movl (%eax), %ebx": 1,
                "movl (%eax), %ebx;movl (%ebp), %edi;movl (%edi), %eax;cmpl %ebx, %eax;ja  <IoReportResourceUsage+>": 1,
                "orl $, (%esi);movl $, %eax;jmp  <IoReportResourceUsage+>;movl $, %eax;jmp  <IoReportResourceUsage+>": 1,
                "leal (,%eax,), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax": 6,
                "leal (%ebx), %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;pushl $;andl $, %ecx": 1,
                "je  <IoReportResourceUsage+>;movl -(%ebp), %esi;subl %eax, %esi;pushl $;leal (,%esi,), %eax": 1,
                "movl (%edx), %edi;cmpl %edi, %ecx;jbe  <IoReportResourceUsage+>;movl %edi, %ecx;testl %ecx, %ecx": 1,
                "movl %edi, %ecx;testl %ecx, %ecx;ja  <IoReportResourceUsage+>;orl $-, %ecx;decl %eax": 1,
                "incl %ecx;cmpl (%edx), %ecx;jb - <IoReportResourceUsage+>;orl $-, %ecx;incl %eax": 1,
                "je  <IoReportResourceUsage+>;andl $, (%ebp);cmpl $, (%esi);jbe  <IoReportResourceUsage+>;leal (%esi), %ebx": 1,
                "jbe - <IoReportResourceUsage+>;pushl $;pushl %edi;calll - <ExFreePoolWithTag>;popl %edi": 1,
                "movl (%eax), %eax;testl %eax, %eax;pushl %edi;je  <IoReportResourceUsage+>;movl (%ebp), %ecx": 1,
                "cmpl %eax, %edx;ja  <IoReportResourceUsage+>;cmpl (%ecx), %eax;ja  <IoReportResourceUsage+>;subl %edx, %eax": 1,
                "ja  <IoReportResourceUsage+>;subl %edx, %eax;movl (%ecx,%eax,), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>": 1,
                "subl %edx, %eax;movl (%ecx,%eax,), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>;movl (%eax), %ecx": 1,
                "leal (%edi,%ebx,), %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx;testb $, %cl": 1,
                "leal (%ecx), %eax;pushl %eax;pushl %ecx;calll - <memmove>;addl $, %esp": 1,
                "pushl %eax;pushl %ecx;calll - <memmove>;addl $, %esp;decl (%edi)": 1,
                "calll - <ExFreePoolWithTag>;decl (%esi);movl -(%ebp), %eax;subl $, (%ebp);decl %ebx": 1,
                "cmpl (%esi), %eax;movl %eax, -(%ebp);jbe - <IoReportResourceUsage+>;popl %edi;popl %ebx": 1,
                "decl %edi;js  <IoReportResourceUsage+>;leal (%esi,%edi,), %eax;movl (%eax), %edx;andl $-, %edx": 1,
                "movl (%esi), %eax;leal -(%eax), %edx;cmpl %edx, %edi;jge  <IoReportResourceUsage+>;subl %edi, %eax": 1,
                "andl $, (%ebx,%eax,);pushl %esi;calll - <ExFreePoolWithTag>;decl (%ebx);xorl %eax, %eax": 1,
                "movl (%eax), %esi;cmpl (%eax), %esi;ja  <IoReportResourceUsage+>;pushl %edi;movl %esi, %ecx": 1,
                "je  <IoReportResourceUsage+>;orl $, (%edi);jmp  <IoReportResourceUsage+>;andl $-, (%edi);incl %edx": 1,
                "addl $, %edi;cmpl (%ecx), %edx;jb - <IoReportResourceUsage+>;incl %esi;cmpl (%eax), %esi": 1,
                "jbe - <IoReportResourceUsage+>;popl %edi;xorl %ecx, %ecx;cmpb %cl, (%ebp);popl %esi": 1,
                "ja  <IoReportResourceUsage+>;subl %ecx, %eax;movl (%edx,%eax,), %eax;testl %eax, %eax;je  <IoReportResourceUsage+>": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;xorl %ecx, %ecx": 1,
                "pushl %ebx;movl (%eax), %ebx;xorl %ecx, %ecx;subl (%eax), %ebx;pushl %esi": 1,
                "jne  <IoReportResourceUsage+>;cmpl (%edi), %esi;jg  <IoReportResourceUsage+>;pushl (%ebp);movl (%edi,%esi,), %eax": 1,
                "testl %eax, %eax;jne  <IoReportResourceUsage+>;movl (%edi), %ecx;movl %ecx, (%esi);testb $, (%edi)": 1,
                "xorl %edi, %edi;jmp  <IoReportResourceUsage+>;testb $, -(%ebp);jne  <IoReportResourceUsage+>;shrw -(%ebp)": 1,
                "popl %ebx;leave;retl $;cmpl $-, %edx;je - <IoReportResourceUsage+>": 2,
                "movw $, (%ecx);movb $, (%ecx);jne  <IoReportResourceUsage+>;testb $, (%esi);je  <IoReportResourceUsage+>": 1,
                "cmpl $-, %edx;je - <IoReportResourceUsage+>;movl (%ebp), %ecx;andw $, (%ecx);andw $, (%ecx)": 1,
                "jae  <IoReportResourceUsage+>;movw $, (%eax);movb %bl, (%eax);movw %bx, (%eax);movb $, (%eax)": 1,
                "movb $, (%eax);movzbl (%ecx), %esi;movl %esi, (%eax);movl (%eax), %edi;xorl %esi, %esi": 1,
                "movw (%ecx), %si;movl %ebx, (%eax);movl %ebx, (%eax);addl $, %ecx;movl $, (%eax)": 1,
                "movl (%eax), %edi;movl %edx, (%eax);movl %ebx, (%eax);movzwl (%ecx), %edx;leal -(%edx,%edi), %edx": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %ecx;xorl %eax, %eax": 1,
                "xorl %eax, %eax;movw (%ecx), %ax;addw $, %ax;pushl %ebx;pushl %esi": 1,
                "jns  <IoReportResourceUsage+>;movzwl (%esi), %ecx;addl $, %ecx;jmp  <IoReportResourceUsage+>;andl $, %ecx": 1,
                "jne - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;movl (%ebp), %eax;xorl %ecx, %ecx;movb (%esi), %cl": 1,
                "movw (%eax), %dx;movl (%eax), %eax;testl $, %eax;pushl %esi;movl $, %esi": 1,
                "movb %bl, (%eax);movb %cl, (%eax);je  <IoReportResourceUsage+>;movb $, (%eax);jmp  <IoReportResourceUsage+>": 1,
                "andb $-, %dl;cmpb $, %dl;jne  <IoReportResourceUsage+>;testb %bl, (%ecx);jne  <IoReportResourceUsage+>": 1,
                "movzwl (%ecx), %eax;addl $, %eax;jmp  <IoReportResourceUsage+>;andl $, %eax;incl %eax": 1,
                "movl %esi, %eax;popl %ebx;jmp  <IoReportResourceUsage+>;movl $, %eax;popl %esi": 1,
                "jne  <IoReportResourceUsage+>;movl (%ebp), %eax;movb $, (%eax);movb (%esi), %dl;shrb $, %dl": 1,
                "jne  <IoReportResourceUsage+>;movzbw (%eax), %dx;xorl %ecx, %ecx;movw (%eax), %cx;movb $, -(%ebp)": 1,
                "movzwl %cx, %ecx;addl %ecx, %eax;movb (%eax), %cl;cmpb $, %cl;movb %cl, (%ebp)": 1,
                "jne - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;movb (%ebp), %cl;cmpb $, %cl;popl %edi": 1,
                "movb (%ebp), %cl;cmpb $, %cl;popl %edi;popl %ebx;jne  <IoReportResourceUsage+>": 1,
                "jmp  <IoReportResourceUsage+>;cmpb $, (%ebp);movl (%ebp), %eax;jne  <IoReportResourceUsage+>;movb -(%ebp), %cl": 1,
                "jmp  <IoReportResourceUsage+>;movl (%eax), %ebx;movl (%eax), %ecx;movl (%eax), %esi;leal -(%ecx,%ebx), %ecx": 1,
                "movl $, (%ebp);movzwl (%eax), %ecx;movzwl (%eax), %ebx;addl %ebx, %ecx;shll $, %ecx": 1,
                "movzwl (%eax), %ecx;movzwl (%eax), %ebx;addl %ebx, %ecx;shll $, %ecx;decl %ecx": 1,
                "movl (%ebp), %ebx;decl %ebx;testl %ebx, %edi;je  <IoReportResourceUsage+>;movb $, -(%ebp)": 1,
                "testb %dl, %dl;jns  <IoReportResourceUsage+>;movw (%eax), %dx;addw $, %dx;jmp  <IoReportResourceUsage+>": 1,
                "jns  <IoReportResourceUsage+>;movw (%eax), %dx;addw $, %dx;jmp  <IoReportResourceUsage+>;andb $, %dl": 1,
                "andb $, %bl;movl %ecx, -(%ebp);movb (%ecx), %dl;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movb $, -(%ebp);movb %bl, -(%ebp)": 1,
                "movl %edi, -(%ebp);movb $, -(%ebp);movb %bl, -(%ebp);testb %dl, %dl;js  <IoReportResourceUsage+>": 1,
                "shrw -(%ebp);jne - <IoReportResourceUsage+>;cmpb $, -(%ebp);jne  <IoReportResourceUsage+>;addl %edx, -(%ebp)": 1,
                "cmpl $, %edx;jle  <IoReportResourceUsage+>;cmpl $, %edx;jg  <IoReportResourceUsage+>;cmpb $, -(%ebp)": 1,
                "andb $-, %bl;cmpb $, %bl;jne - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;movzwl %si, %edx": 1,
                "leal (%edi), %eax;pushl %eax;pushl $;movl %esi, -(%ebp);calll - <ExAllocatePoolWithTag>": 1,
                "movl %ebx, %esi;addl $, %ebx;incl -(%ebp);movb $, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp - <IoReportResourceUsage+>;cmpl $, (%edi);movb $, -(%ebp);je  <IoReportResourceUsage+>;movl %ebx, (%esi)": 1,
                "cmpl $, (%edi);movb $, -(%ebp);je  <IoReportResourceUsage+>;movl %ebx, (%esi);movl %eax, (%esi)": 1,
                "addl %eax, (%edi);incl (%edi);movl -(%ebp), %eax;testb $, (%eax);je  <IoReportResourceUsage+>": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;cmpb $, %al;leal -(%ebp), %eax": 1,
                "jl - <IoReportResourceUsage+>;addl $, %ebx;cmpb $, -(%ebp);je  <IoReportResourceUsage+>;incl -(%ebp)": 1,
                "movl %ebx, (%edi);movl %ebx, %esi;movl %eax, -(%ebp);addl $, %ebx;jmp - <IoReportResourceUsage+>": 1,
                "movl -(%ebp), %eax;cmpb $, -(%ebp);movl -(%ebp), %edx;je  <IoReportResourceUsage+>;movl -(%ebp), %edi": 1,
                "movl %esi, (%ecx);xorl %ecx, %ecx;incl %ecx;testl %eax, %eax;movl %ecx, -(%ebp)": 1,
                "leal (%eax,%edx,), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;andl $, %eax;movl %eax, (%ebp)": 1,
                "movl (%ebp), %eax;pushl %esi;movl (%ebp), %esi;movl %edx, (%eax);movl (%esi), %eax": 1,
                "movl %eax, %edi;testl %edi, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);jne  <IoReportResourceUsage+>": 1,
                "pushl (%ebp);calll - <IoReportResourceUsage+>;jmp  <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 3,
                "addl %eax, -(%ebp);movl %eax, %ecx;movl %ecx, %edx;shrl $, %ecx;leal -(%ebp), %esi": 1,
                "incl -(%ebp);movl -(%ebp), %eax;cmpl (%esi), %eax;movl %ebx, -(%ebp);jb - <IoReportResourceUsage+>": 1,
                "movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax;popl %ebp;retl $": 2,
                "shll $, %eax;pushl %eax;xorl %esi, %esi;pushl %esi;calll - <ExAllocatePoolWithTag>": 2,
                "jbe  <IoReportResourceUsage+>;movl (%ebp), %eax;pushl (%eax,%esi,);pushl %ebx;calll - <RtlInitUnicodeString>": 1,
                "movl (%edi), %edx;movl (%esi), %eax;movl (%esi), %ecx;movl %edx, (%esi);movl (%edi), %edx": 1,
                "jb - <IoReportResourceUsage+>;incl %esi;incl %esi;pushl $;leal (%esi), %eax": 1,
                "movw %cx, (%eax);movw %si, (%ebx);ja  <IoReportResourceUsage+>;cmpw %cx, (%ebx);jne  <IoReportResourceUsage+>": 1,
                "movl (%ebp), %edi;movl %edx, (%ecx);movl (%ebp), %ecx;movl %ecx, (%eax);movl %esi, (%eax)": 1,
                "movl (%ebp), %eax;shll $, %eax;xorl %ecx, %ecx;cmpl %ecx, (%eax);jne  <KeRemoveSystemServiceTable+>": 1,
                "cmpl %ecx, (%eax);je  <KeRemoveSystemServiceTable+>;cmpl $, (%ebp);movl %ecx, (%eax);movl %ecx, (%eax)": 1,
                "shll $, %eax;pushl %eax;xorl %ebx, %ebx;pushl $;movl %ebx, -(%ebp)": 1,
                "movl $, %eax;jmp  <KeQueryActiveProcessors+>;pushl %esi;pushl %edi;pushl %eax": 1,
                "movl (%esi), %edx;addl $, %ecx;testb $, -(%ebp);movb %bl, (%ebp);movl %esi, -(%ebp)": 1,
                "addl $, -(%ebp);movl -(%ebp), %ecx;cmpl (%ebp), %ecx;ja  <KeQueryActiveProcessors+>;movl %ebx, (%eax)": 1,
                "jbe  <KeQueryActiveProcessors+>;movl %ecx, (%ebp);addl $, %ecx;leal (%eax), %edx;movl %ecx, -(%ebp)": 1,
                "shrl $, %edi;pushl $;popl %ecx;jne  <KeQueryActiveProcessors+>;xorl %ecx, %ecx": 1,
                "movb (%edi), %bl;movl -(%ebp), %edi;movsbl (%edi), %edi;addb %cl, %bl;movzbl %bl, %ecx": 1,
                "movl %ecx, -(%ebp);jne - <KeQueryActiveProcessors+>;movl -(%ebp), %esi;movl -(%ebp), %edi;shrl -(%ebp)": 1,
                "jb - <KeQueryActiveProcessors+>;movl (%ebp), %eax;pushl %ebx;pushl -(%ebp);movl %edi, (%eax)": 1,
                "jne  <KeCallBios+>;movl $, %eax;jmp  <KeCallBios+>;pushl $;popl %ecx": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl %edx, (%eax);movl %fs:, %eax;movl $, %ecx": 1,
                "calll - <ExFreePoolWithTag>;xorl %eax, %eax;jmp  <KeCallBios+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, (%eax);movb (%ebp), %al;movb %al, (%ecx);movl (%ebp), %eax;movl %eax, (%ecx)": 1,
                "cltd;idivl %esi;movw $, (%ecx);popl %esi;movb %dl, (%ecx)": 1,
                "movl (%eax), %ecx;movl (%ecx,%edx), %esi;movl (%ebp), %eax;movl %esi, (%eax);movl (%ecx,%edx), %ecx": 1,
                "movl (%ebp), %esi;movb $, (%esi);movb $, (%esi);leal (%esi), %eax;movl %eax, (%eax)": 1,
                "jne - <KeCallBios+>;movl (%ebp), %ecx;movb (%ecx), %al;movb %al, (%esi);movb $, (%esi)": 1,
                "movb %al, (%esi);movb $, (%esi);movb $, (%esi);movl $, (%esi);leal (%esi), %eax": 1,
                "movl %eax, (%esi);movl %eax, (%esi);addl $, %eax;movl %eax, (%esi);movl %ebx, -(%ebp)": 1,
                "pushl %ebx;movl (%ebp), %esi;pushl (%esi);calll - <MmFlushImageSection+>;movl %ebx, (%esi)": 1,
                "leal (%esi), %eax;pushl %eax;leal -(%ebx), %eax;pushl %eax;calll  <ProbeForWrite>": 1,
                "movl -(%ebp), %ebx;movl %ecx, (%ebx);pushl (%ebp);pushl (%ebp);calll - <ZwYieldExecution+>": 1,
                "orl $-, -(%ebp);xorl %eax, %eax;incl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpl $, -(%ebp);jbe  <KeUserModeCallback+>;addl $, (%ebx);calll *;movl -(%ebp), %eax": 1,
                "je  <KeUserModeCallback+>;movb $, -(%ebp);jmp  <KeUserModeCallback+>;incl %eax;movb $, -(%ebp)": 1,
                "decl %ecx;jne  <KeUserModeCallback+>;movl (%ebp), %ebx;movzwl %ax, %eax;imull $, %eax, %eax": 1,
                "pushl (%ebp);pushl $;pushl %edi;pushl (%ebp);pushl %ebx": 1,
                "pushl $;pushl %edi;pushl (%ebp);pushl %ebx;calll - <KeUserModeCallback+>": 1,
                "incl %eax;jmp  <KeUserModeCallback+>;movl (%ebp), %esi;movl (%ebp), %ebx;movzwl %ax, %eax": 1,
                "movl (%ebx,%eax,), %eax;testl %eax, %eax;je  <KeUserModeCallback+>;pushl (%ebp);pushl -(%ebp)": 1,
                "pushl %edi;pushl (%ebp);pushl $;pushl %esi;pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);calll *%eax;testl %eax, %eax;jl  <KeUserModeCallback+>": 1,
                "cmpl $, (%ebp);movb %al, (%ebp);jne  <KeUserModeCallback+>;leal (%esi,%ebx), %eax;pushl %eax": 1,
                "addl %edi, %esi;pushl $;pushl %esi;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl %fs:, %eax;cmpb $, (%ebp);movl (%eax), %eax": 1,
                "testb $, %bl;je  <KeUserModeCallback+>;leal (%eax), %edx;movw (%edx), %cx;testb $, %cl": 1,
                "leal (%eax), %ecx;movw (%ecx), %ax;testb $, %al;jne  <KeUserModeCallback+>;orw $, %ax": 1,
                "movw %ax, (%ecx);popl %ebx;popl %ebp;retl $;int": 1,
                "movzwl (%eax), %edi;cmpl %edi, %esi;jbe  <KeUserModeCallback+>;movzwl (%eax), %edi;cmpl %edi, %esi": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl %esi;calll - <KeUserModeCallback+>": 2,
                "pushl $;pushl %esi;calll - <KeUserModeCallback+>;movzbl (%ebp), %eax;addl %eax, (%edi)": 1,
                "pushl (%ebp);pushl %ebx;pushl %esi;pushl -(%ebp);pushl %eax": 1,
                "cmpb $, (%ebp);je - <KeUserModeCallback+>;movl %ebx, %eax;decl %eax;je  <KeUserModeCallback+>": 1,
                "movb %al, (%edi);jmp - <KeUserModeCallback+>;leal -(%ebp), %eax;pushl %eax;calll  <NtVdmControl+>": 1,
                "pushl %edi;calll  <NtVdmControl+>;movb $, %al;jmp  <KeUserModeCallback+>;xorl %eax, %eax": 1,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <ExRaiseException>;orl $-, -(%ebp)": 1,
                "movl %ecx, (%eax);movb $, %al;jmp  <KeUserModeCallback+>;pushl %esi;movl (%ebp), %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 8,
                "testb %al, %al;je  <KeUserModeCallback+>;movl (%ebp), %ecx;andl $, %esi;addl (%ebp), %esi": 1,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <ExRaiseException>;movb $, %al": 1,
                "movl %ecx, -(%ebp);movl $, %ebx;movl -(%ebp), %ecx;cmpl %edi, %ecx;jae  <KeUserModeCallback+>": 1,
                "calll *(%ebp);movl %eax, -(%ebp);testl %eax, %eax;jl  <KeUserModeCallback+>;movb -(%ebp), %al": 1,
                "jmp - <KeUserModeCallback+>;movl (%ebp), %eax;xorl %edx, %edx;divl (%ebp);andl $, -(%ebp)": 1,
                "movb %al, -(%ebp);incl -(%ebp);jmp - <KeUserModeCallback+>;cmpl %esi, -(%ebp);jae - <KeUserModeCallback+>": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);andl $, -(%ebp);andl $, -(%ebp);leal -(%ebp), %eax": 2,
                "pushl %eax;calll - <ExRaiseException>;movb $, -(%ebp);orl $-, -(%ebp);movb -(%ebp), %al": 1,
                "xorb %bl, %bl;cmpb %al, (%ebp);pushl %esi;sete %al;pushl %edi": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl %eax;pushl %edi": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ecx,%eax);jmp  <KeUserModeCallback+>;pushl (%ebp)": 1,
                "imull (%ebp), %esi;testb $, (%edx);je  <KeUserModeCallback+>;movw (%ecx), %ax;subw %si, %ax": 1,
                "addl %eax, (%edx);jmp  <KeUserModeCallback+>;leal -(%ebp), %eax;pushl %eax;calll  <NtVdmControl+>": 1,
                "jge  <KeUserModeCallback+>;movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "movb $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);orl $-, -(%ebp);xorb %dl, %dl": 1,
                "jmp - <KeUserModeCallback+>;cmpb $-, %dl;je  <KeUserModeCallback+>;cmpb $-, %dl;jne  <KeUserModeCallback+>": 1,
                "movb %bl, -(%ebp);cmpl $, -(%ebp);jne  <KeUserModeCallback+>;andb $-, %cl;cmpb $-, %cl": 1,
                "movl (%ebp), %ecx;addl (%eax,%ecx), %edi;movl %edi, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movb (%edx), %cl;testb %bl, %cl;je  <KeUserModeCallback+>;cmpb $, (%edx);jne  <KeUserModeCallback+>": 1,
                "jb  <KeUserModeCallback+>;movl (%esi), %eax;jmp  <KeUserModeCallback+>;movl (%eax), %eax;jmp  <KeUserModeCallback+>": 1,
                "jmp  <KeUserModeCallback+>;movl (%eax), %eax;jmp  <KeUserModeCallback+>;cmpl %esi, %eax;jb  <KeUserModeCallback+>": 1,
                "sahf;lahf;movb %ah, -(%ebp);movl $, %eax;movl $, %ecx": 1,
                "movb -(%ebp), %al;cli;outb %al, $;inb $, %al;sti": 8,
                "movb %al, -(%ebp);movzbl -(%ebp), %edi;incl %edi;movb $-, -(%ebp);movb -(%ebp), %al": 1,
                "jmp  <NtRequestPort+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl %eax, %esi;jmp  <NtRequestPort+>;xorl %esi, %esi;movl %esi, -(%ebp);cmpl %ebx, %esi": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;orl $-, -(%ebp);jmp  <NtRequestPort+>;leal (%ebx), %eax": 1,
                "movl , %eax;movl %eax, (%esi);incl ;jne  <NtRequestPort+>;movl $, ": 1,
                "incl (%ebx);jne  <NtRequestPort+>;leal (%ebx), %eax;cmpl %eax, (%eax);je  <NtRequestPort+>": 1,
                "movl -(%ebp), %ecx;testl %ecx, %ecx;je  <NtRequestPort+>;calll - <ObfDereferenceObject>;movl %edi, %ecx": 1,
                "testb $, (%ebx);je  <NtRequestWaitReplyPort+>;movl $, %eax;jmp  <NtRequestWaitReplyPort+>;movl %fs:, %eax": 1,
                "movb (%eax), %al;movb %al, -(%ebp);testb %al, %al;je  <NtRequestWaitReplyPort+>;movl %esi, -(%ebp)": 1,
                "movw %ax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);cmpl %edx, %eax;jb  <NtRequestWaitReplyPort+>": 1,
                "addl %ecx, %eax;movl %eax, -(%ebp);testb $, %al;je  <NtRequestWaitReplyPort+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "addl (%ebp), %eax;cmpl %edx, %eax;jb - <NtRequestWaitReplyPort+>;orl $-, -(%ebp);jmp  <NtRequestWaitReplyPort+>": 1,
                "rep  movsl (%esi), %es:(%edi);cmpw $, -(%ebp);je  <NtRequestWaitReplyPort+>;movswl -(%ebp), %esi;addl (%ebp), %esi": 1,
                "cmpw $, -(%ebp);je  <NtRequestWaitReplyPort+>;movswl -(%ebp), %esi;addl (%ebp), %esi;leal -(%ebp), %edi": 1,
                "negl %edx;sbbl %edx, %edx;notl %edx;andl %ecx, %edx;movw (%edx), %ax": 2,
                "cmpl $, -(%ebp);jge  <NtRequestWaitReplyPort+>;movl -(%ebp), %ebx;jmp  <NtRequestWaitReplyPort+>;andl $, (%esi)": 1,
                "andl $, (%esi);movl -(%ebp), %eax;movl (%eax), %eax;andl $, %eax;cmpl $, %eax": 1,
                "addl (%ebp), %eax;movl %eax, -(%ebp);movl (%eax), %eax;cmpl -(%ebp), %eax;je  <NtRequestWaitReplyPort+>": 1,
                "je  <NtRequestWaitReplyPort+>;movl $, %edi;jmp  <NtRequestWaitReplyPort+>;orl $-, -(%ebp);movl $, %ecx": 1,
                "jmp  <NtRequestWaitReplyPort+>;movl -(%ebp), %edi;movl %edi, -(%ebp);andl $, (%esi);movl , %eax": 1,
                "movl $, ;andl $, (%esi);movl -(%ebp), %edx;movl %edx, (%esi);movl (%esi), %eax": 1,
                "movl %eax, -(%ebp);testb $, (%edi);je  <NtRequestWaitReplyPort+>;pushl $;pushl $": 1,
                "jne  <NtRequestWaitReplyPort+>;leal (%ebx), %eax;cmpl %eax, (%eax);je  <NtRequestWaitReplyPort+>;movb $, (%ebx)": 1,
                "cmpb $, -(%ebp);je  <NtRequestWaitReplyPort+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;leal (%ebx), %edi": 1,
                "movl %esi, (%esi);movl %esi, (%esi);xorl %esi, %esi;movl %esi, ;movl $, %ecx": 1,
                "xorl %esi, %esi;movl %esi, ;movl $, %ecx;calll *;cmpl %esi, -(%ebp)": 1,
                "leal (%edi), %eax;pushl %eax;leal (%edi), %eax;pushl %eax;pushl (%ebp)": 3,
                "pushl %eax;leal (%edi), %eax;pushl %eax;pushl (%ebp);calll  <LsaDeregisterLogonProcess+>": 3,
                "pushl %esi;pushl %edi;pushl -(%ebp);calll  <NtConnectPort+>;jmp  <NtRequestWaitReplyPort+>": 1,
                "cmpl %esi, %ecx;je  <NtRequestWaitReplyPort+>;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp  <NtRequestWaitReplyPort+>": 1,
                "movl -(%ebp), %eax;jmp  <NtRequestWaitReplyPort+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;xorl %edx, %edx;movl %esi, %ecx;calll  <NtConnectPort+>": 1,
                "pushl %esi;xorl %ebx, %ebx;pushl %edi;movl %ebx, -(%ebp);movl %fs:, %eax": 2,
                "movl $, (%ebp);cmpw %bx, (%edi);je  <LpcRequestPort+>;movl $, %eax;jmp  <LpcRequestPort+>": 1,
                "movl %edi, -(%ebp);jne  <LpcRequestPort+>;pushl $;popl %edx;movl %esi, %ecx": 1,
                "calll - <ObfReferenceObject>;xorl %edx, %edx;cmpl %edx, %edi;je  <LpcRequestPort+>;movl , %eax": 1,
                "movl $, ;movl (%ebp), %eax;movl %eax, (%esi);movl %edx, (%esi);movl %edx, (%ebx)": 1,
                "movl %edx, (%esi);movl %edx, (%ebx);leal (%edi), %eax;movl (%eax), %ecx;movl %ecx, (%esi)": 1,
                "movl %ecx, (%esi);movl %eax, (%esi);movl %esi, (%ecx);movl %esi, (%eax);decl (%ebx)": 1,
                "jmp  <LpcRequestPort+>;cmpb $, -(%ebp);je  <LpcRequestPort+>;movl (%ebp), %eax;cmpl %ecx, (%eax)": 1,
                "movl (%ebp), %eax;cmpl %ecx, (%eax);jne  <LpcRequestPort+>;movl $, %esi;jmp  <LpcRequestPort+>": 1,
                "movl $, %ecx;calll *;movl -(%ebp), %ecx;movl (%ebp), %edx;movl %esi, ": 1,
                "movl (%ecx), %eax;cmpl (%edx), %eax;jne  <LpcRequestPort+>;movl (%ecx), %eax;testb $, %al": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl , %eax;movl %eax, (%edi);incl ;jne  <LpcRequestPort+>": 1,
                "movl %eax, (%edi);incl ;jne  <LpcRequestPort+>;movl $, ;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;addl $, %eax;cmpl %eax, (%eax);je  <LpcRequestPort+>;movl (%eax), %ecx": 1,
                "leal (%esi), %edi;movl %ecx, (%edi);movl %eax, (%edi);movl %edi, (%ecx);movl %edi, (%eax)": 2,
                "movl %ebx, (%esi);movl $, %ebx;movl %ebx, %ecx;movl %edx, ;calll *": 1,
                "movl %esi, ;cmpl %edx, (%esi);jne  <LpcRequestPort+>;cmpl %edx, (%esi);jne  <LpcRequestPort+>": 1,
                "movl %edx, (%edi);movl , %ecx;movl %ecx, (%edi);incl ;jne  <LpcRequestPort+>": 1,
                "movl %edx, (%edi);movl %ecx, (%esi);movl %edx, (%esi);movl (%eax), %ecx;movl %ecx, (%edi)": 1,
                "addl $, %eax;movl %eax, (%edi);movl %edi, (%ecx);movl %edi, (%eax);movl (%ebp), %eax": 1,
                "movl %ebx, (%esi);movl $, %ecx;movl %edx, ;calll *;movl (%ebp), %eax": 1,
                "movl $, %ecx;movl %edx, ;calll *;movl (%ebp), %eax;testb $, (%eax)": 1,
                "pushl $;pushl $;pushl (%ebp);calll - <KeReleaseSemaphore>;incl (%esi)": 1,
                "incl (%esi);jne  <LpcRequestPort+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <LpcRequestPort+>": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl $;leal (%esi), %eax": 1,
                "movl %ecx, (%ebp);movl %edx, (%esi);movl %edx, (%esi);je  <LpcRequestPort+>;movl (%edi), %eax": 1,
                "xorl %eax, %eax;cmpl %eax, (%ebp);jne  <LpcRequestPort+>;movl (%ebp), %edi;cmpl %eax, %edi": 1,
                "popl %edx;movl %edi, %ecx;jmp  <LpcRequestPort+>;movl $, (%ebp);jmp  <LpcRequestPort+>": 1,
                "movl %edi, %ecx;jmp  <LpcRequestPort+>;movl $, (%ebp);jmp  <LpcRequestPort+>;movl (%ebp), %ecx": 1,
                "je  <LpcRequestPort+>;xorl %edx, %edx;calll  <NtConnectPort+>;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);testb %al, %al;je  <LpcRequestWaitReplyPort+>;movl %ebx, -(%ebp)": 1,
                "testb %al, %al;je  <LpcRequestWaitReplyPort+>;movl %ebx, -(%ebp);movl (%ebp), %ecx;movl , %eax": 1,
                "movl (%ecx), %eax;movl %eax, (%ecx);movl (%ebp), %edx;cmpl %ebx, %edx;je  <LpcRequestWaitReplyPort+>": 1,
                "movb $, (%eax);testb $, %dl;je  <LpcRequestWaitReplyPort+>;calll  <ExRaiseDatatypeMisalignment>;movl (%ebp), %edx": 1,
                "jmp  <LpcRequestWaitReplyPort+>;movl (%ebx), %ecx;cmpl $, %ecx;jne - <LpcRequestWaitReplyPort+>;movl %ebx, -(%ebp)": 1,
                "movb (%ebx), %al;movb %al, (%ebx);movb (%ebx), %al;movb %al, (%ebx);movl (%ebp), %ecx": 4,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <LpcRequestWaitReplyPort+>;movl (%ebp), %esi;cmpl %ebx, %esi": 1,
                "cmpl %ebx, %esi;je  <LpcRequestWaitReplyPort+>;cmpl $, (%esi);jne  <LpcRequestWaitReplyPort+>;pushl $": 1,
                "movl (%ebp), %eax;cmpl %ebx, %eax;je  <LpcRequestWaitReplyPort+>;cmpl $, (%eax);je  <LpcRequestWaitReplyPort+>": 1,
                "je  <LpcRequestWaitReplyPort+>;cmpl $, (%eax);je  <LpcRequestWaitReplyPort+>;movl $, %eax;jmp  <LpcRequestWaitReplyPort+>": 1,
                "movl $, %eax;jmp  <LpcRequestWaitReplyPort+>;cmpl %ebx, %esi;je  <LpcRequestWaitReplyPort+>;movl (%ecx), %eax": 1,
                "addl $, %ecx;movl %edi, %edx;calll  <ObQueryNameString+>;cmpl %ebx, -(%ebp);jl  <LpcRequestWaitReplyPort+>": 1,
                "movl %edi, %edx;calll  <ObQueryNameString+>;cmpl %ebx, -(%ebp);jl  <LpcRequestWaitReplyPort+>;movl -(%ebp), %eax": 1,
                "popl %ecx;xorl %eax, %eax;movl -(%ebp), %ebx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi)": 2,
                "pushl ;pushl $;pushl -(%ebp);calll  <ObReferenceObjectByHandle>;movl -(%ebp), %ecx": 2,
                "movl %fs:, %eax;movl (%eax), %esi;leal (%ebx), %edi;pushl $;pushl %ecx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp);testl %eax, %eax;jge  <LpcRequestWaitReplyPort+>": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);movl %esi, (%ebx);movl %esi, %ecx;calll - <ObfReferenceObject>": 1,
                "movl %esi, (%ebx);movl %esi, %ecx;calll - <ObfReferenceObject>;jmp  <LpcRequestWaitReplyPort+>;movl %esi, -(%ebp)": 1,
                "andw $, (%eax);movl %eax, %ebx;jmp  <LpcRequestWaitReplyPort+>;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);testl %ebx, %ebx;jne  <LpcRequestWaitReplyPort+>;movl -(%ebp), %ecx": 1,
                "je  <LpcRequestWaitReplyPort+>;calll - <ObfDereferenceObject>;movl $, %esi;movl -(%ebp), %ebx;movl %ebx, %ecx": 1,
                "popl %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi);andl $, (%edx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;testb $, (%eax);je  <LpcRequestWaitReplyPort+>;movl $, -(%ebp);jmp  <LpcRequestWaitReplyPort+>": 1,
                "xorl %edx, %edx;movl -(%ebp), %ecx;calll  <NtConnectPort+>;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "pushl %edi;pushl $;pushl $;pushl (%eax);calll - <KeReleaseSemaphore>": 1,
                "movl -(%ebp), %eax;cmpl %edi, %eax;je  <LpcRequestWaitReplyPort+>;movswl (%eax), %eax;addl $-, %eax": 1,
                "cmpl %edi, %eax;je  <LpcRequestWaitReplyPort+>;movswl (%eax), %eax;addl $-, %eax;cmpl -(%ebp), %eax": 1,
                "je  <LpcRequestWaitReplyPort+>;movswl (%eax), %eax;addl $-, %eax;cmpl -(%ebp), %eax;jae  <LpcRequestWaitReplyPort+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <LpcRequestWaitReplyPort+>;movl -(%ebp), %eax": 1,
                "je  <LpcRequestWaitReplyPort+>;movl -(%ebp), %eax;movzwl (%eax), %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "movzwl (%eax), %esi;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "movl (%ebp), %edi;rep  movsl (%esi), %es:(%edi);xorl %edi, %edi;cmpl %edi, (%ebp);je  <LpcRequestWaitReplyPort+>": 1,
                "movl -(%ebp), %esi;addl $, %esi;movl (%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "calll - <ObfDereferenceObject>;movl $, %ecx;calll *;movl %esi, ;cmpl %edi, (%ebx)": 1,
                "calll  <NtConnectPort+>;jmp  <LpcRequestWaitReplyPort+>;cmpl %edi, %ecx;je  <LpcRequestWaitReplyPort+>;calll - <ObfDereferenceObject>": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp);jmp  <LpcRequestWaitReplyPort+>;movl %eax, %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testb $, (%eax);jne  <NtConnectPort+>": 1,
                "movl %esi, -(%ebp);movl (%ebp), %ecx;movl , %eax;cmpl %eax, %ecx;jb  <NtConnectPort+>": 1,
                "movl (%ecx), %eax;movl %eax, (%ecx);testb $, (%ebp);je  <NtConnectPort+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "cmpw $, %ax;jne  <NtConnectPort+>;negl %esi;sbbl %esi, %esi;notl %esi": 1,
                "popl %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %eax;testl %eax, %eax": 1,
                "je - <NtConnectPort+>;cmpl $, (%eax);je - <NtConnectPort+>;movl $, %eax;jmp  <NtConnectPort+>": 1,
                "je - <NtConnectPort+>;movl $, %eax;jmp  <NtConnectPort+>;movl -(%ebp), %ecx;xorl %eax, %eax": 1,
                "cmpl %eax, %ecx;jbe  <NtConnectPort+>;movl %eax, %ecx;leal (%ecx), %eax;movw %ax, (%esi)": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);orl $-, -(%ebp);andl $, -(%ebp)": 1,
                "pushl ;pushl -(%ebp);calll  <ObCreateObject>;movl %eax, -(%ebp);cmpl %esi, %eax": 1,
                "andl $, ;movl $, %ecx;calll *;cmpl $, -(%ebp);je  <NtConnectPort+>": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl $;pushl $;pushl %ecx": 2,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;jmp  <NtConnectPort+>;movl %ebx, %ecx": 1,
                "movl $, -(%ebp);cmpl %edi, (%ebp);je  <NtConnectPort+>;pushl $;popl %ecx": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %ecx, (%eax);movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);cmpl %edi, (%ebp)": 1,
                "movl %esi, %ecx;calll *;movl %fs:, %eax;movl %eax, ;movl -(%ebp), %eax": 2,
                "calll *;movl %fs:, %eax;movl %eax, ;movl -(%ebp), %eax;movl -(%ebp), %ecx": 2,
                "movl %fs:, %eax;movl %eax, ;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "movl %edi, ;movl %esi, %ecx;calll *;movl %edi, -(%ebp);orl $-, -(%ebp)": 1,
                "jmp  <NtConnectPort+>;movl (%esi), %eax;testb $, %al;jne  <NtConnectPort+>;testl %eax, %eax": 1,
                "leal (%eax), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax;je  <NtConnectPort+>;leal (%esi), %ecx": 1,
                "movl (%ebx), %edx;movl (%eax), %eax;addl $, %edx;cmpl %edx, %eax;jne - <NtConnectPort+>": 1,
                "leal (%esi), %ecx;cmpl %ecx, %eax;je  <NtConnectPort+>;andl $, ;movl %edi, %ecx": 1,
                "calll - <ObfDereferenceObject>;xorl %eax, %eax;jmp  <NtConnectPort+>;andl $, (%ebx);pushl %esi": 1,
                "andl $, (%ebx);pushl %esi;calll - <NtConnectPort+>;xorl %ebx, %ebx;movl %edi, %ecx": 1,
                "movl %edi, (%eax);movl (%ecx), %eax;movl %eax, (%ecx);movl (%ebp), %ebx;testb $, %bl": 1,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);cmpl %edi, %ecx;je  <NtConnectPort+>;cmpl %eax, %ecx": 1,
                "cmpb $, (%ebp);movl , %eax;jne  <NtConnectPort+>;movl , %eax;movb (%ebp), %cl": 1,
                "cmpl %edi, %eax;jl  <NtConnectPort+>;movl %esi, %ecx;xorl %eax, %eax;movl -(%ebp), %esi": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl %esi, (%esi)": 1,
                "movl (%eax), %eax;movl %eax, (%esi);leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "xorl %edi, %edi;xorl %ebx, %ebx;incl %ebx;cmpl %edi, -(%ebp);jne  <NtConnectPort+>": 1,
                "movl (%eax), %eax;movl %eax, (%esi);cmpb $, (%ebp);je  <NtConnectPort+>;orb $, (%esi)": 1,
                "jmp  <NtConnectPort+>;movw %ax, (%esi);movzwl (%esi), %ecx;movl (%ebp), %eax;cmpl %eax, %ecx": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;movl %edi, %eax;jmp  <NtConnectPort+>;cmpl $, ": 1,
                "jb  <NtConnectPort+>;movw %ax, (%esi);leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "movl %ecx, (%edx);jmp  <NtConnectPort+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %esp;pushl -(%ebp);calll  <NtClose>;movl -(%ebp), %eax;orl $-, -(%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <NtConnectPort+>;popl %ebp": 3,
                "movl %eax, %ecx;andb $, %cl;cmpb $, %cl;jne  <NtConnectPort+>;testl %eax, %eax": 1,
                "je  <NtConnectPort+>;movl %edi, -(%ebp);testb $, %bl;je  <NtConnectPort+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "cmpl %eax, %ebx;jb  <NtConnectPort+>;movl %edi, (%eax);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "jmp  <NtConnectPort+>;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebx), %eax;andl $, %eax;cmpb $, %al;je  <NtConnectPort+>;movl $, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <PsLookupProcessThreadByCid>;cmpl %edi, %eax;jge  <NtConnectPort+>": 2,
                "movl %edi, ;movl %esi, %ecx;calll *;testb $-, (%ebx);je  <NtConnectPort+>": 1,
                "cmpl $, %eax;jne  <NtConnectPort+>;calll - <ObfDereferenceObject>;jmp  <NtConnectPort+>;cmpl %edi, %ecx": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax": 1,
                "pushl $;pushl $;calll - <wctomb+>;xorl %esi, %esi;movl (%ebp), %edi": 1,
                "movl -(%ebp), %ecx;cmpl %ebx, %eax;jge  <NtConnectPort+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl %ebx, %eax;jge  <NtConnectPort+>;pushl %ebx": 1,
                "movl %ecx, -(%ebp);cmpl %ebx, %eax;jl  <NtConnectPort+>;movswl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %esi, %edx;andl $, %edx;movl %edx, %eax;negl %eax;sbbl %eax, %eax": 1,
                "sbbl %eax, %eax;notl %eax;andl %esi, %eax;cmpl %ebx, %eax;je  <NtConnectPort+>": 1,
                "jne  <NtConnectPort+>;pushl $;movl -(%ebp), %edx;calll - <NtConnectPort+>;testb %al, %al": 3,
                "leal -(%ebp), %eax;pushl %eax;leal (%edi), %eax;pushl %eax;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %edx;movb (%edx), %al;testb $, %al;je  <NtConnectPort+>;leal (%edx), %ecx": 2,
                "leal (%edx), %ecx;movl (%ecx), %edi;cmpl -(%ebp), %edi;jne  <NtConnectPort+>;movl %ebx, (%ecx)": 1,
                "pushl $;popl %edx;movl -(%ebp), %ecx;calll  <NtConnectPort+>;movl -(%ebp), %ecx": 3,
                "pushl %edi;pushl (%ebp);calll  <ObReferenceObjectByHandle>;cmpl %edi, %eax;jl  <NtConnectPort+>": 1,
                "movl -(%ebp), %ecx;calll - <NtConnectPort+>;testb %al, %al;je  <NtConnectPort+>;movl $, -(%ebp)": 1,
                "addl $, %eax;movl %eax, (%eax);movl %eax, (%eax);movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "pushl %ecx;pushl -(%ebp);pushl %ecx;pushl %eax;calll - <KeWaitForSingleObject>": 1,
                "leal (%ebx), %eax;pushl %eax;calll - <KeWaitForSingleObject>;andl $, -(%ebp);movl %edi, %ecx": 1,
                "andb $, %dl;negb %dl;sbbl %edx, %edx;notl %edx;andl %eax, %edx": 1,
                "movl %edi, %ecx;calll *;movl %ebx, ;movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "je  <NtConnectPort+>;calll - <ObfDereferenceObject>;andl $, (%esi);pushl $;popl %edx": 1,
                "movb (%eax), %al;movb %al, -(%ebp);xorl %ebx, %ebx;testb %al, %al;je  <NtConnectPort+>": 1,
                "movl (%ebp), %eax;cmpl %ebx, %eax;je  <NtConnectPort+>;movl , %ecx;cmpl %ecx, %eax": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;jmp  <NtConnectPort+>;movl $, %ebx": 1,
                "jb  <NtConnectPort+>;xorl %edi, %edi;jmp  <NtConnectPort+>;movl $, %edi;andl $, ": 1,
                "pushl -(%ebp);pushl (%ebp);pushl (%ebp);pushl (%eax);pushl -(%ebp)": 1,
                "pushl -(%ebp);movl -(%ebp), %eax;pushl (%eax);calll  <NtFreeVirtualMemory+>;movl %eax, -(%ebp)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %fs:, %eax;movl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "movb %al, (%ebx);orl $-, -(%ebp);xorl %ebx, %ebx;jmp  <NtConnectPort+>;movl -(%ebp), %eax": 1,
                "popl %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);cmpl %ebx, (%ebp);je  <NtConnectPort+>": 1,
                "je  <NtConnectPort+>;movswl -(%ebp), %eax;movzwl (%edi), %ecx;cmpl %ecx, %eax;ja  <NtConnectPort+>": 1,
                "testl %ebx, %ebx;jne  <NtConnectPort+>;andl %ebx, ;movl %esi, %ecx;calll *": 1,
                "jmp  <NtConnectPort+>;movl %ebx, %ecx;calll - <ObfReferenceObject>;andl $, ;movl %esi, %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <PsLookupProcessThreadByCid>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "calll - <NtConnectPort+>;testb %al, %al;je  <NtConnectPort+>;movl $, -(%ebp);xorl %edi, %edi": 1,
                "movl -(%ebp), %ecx;calll - <ObfReferenceObject>;movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "calll - <ObfReferenceObject>;movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movl %edi, (%eax)": 1,
                "movl %edi, (%ecx);andb $-, %al;movb %al, (%edx);movl %edi, ;movl %esi, %ecx": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ebx;pushl (%ebp);pushl $": 1,
                "popl %ecx;movl %ecx, -(%ebp);movw (%edi), %ax;andw $, %ax;cmpw $, %ax": 1,
                "movw %cx, (%edi);movw %ax, (%edi);movl %eax, %ecx;leal (%edx), %esi;addl $, %edi": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %eax;movl $, %esi": 1,
                "je  <NtConnectPort+>;andl $, (%eax);jmp  <NtConnectPort+>;cmpw %cx, %ax;je  <NtConnectPort+>": 1,
                "je  <NtConnectPort+>;movl (%edi), %ecx;movl %ecx, (%eax);cmpw %bx, (%edi);je  <NtConnectPort+>": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;andb $, %cl;cmpb $, %cl;jbe  <NtConnectPort+>": 3,
                "andb $, %cl;cmpb $, %cl;jbe  <NtConnectPort+>;movl (%eax), %eax;testl %eax, %eax": 3,
                "cmpl (%ebp), %edx;jne  <NtConnectPort+>;movl (%eax), %edx;cmpl (%ebp), %edx;je  <NtConnectPort+>": 1,
                "pushl $;calll - <ExFreeToPagedLookasideList>;cmpl %edi, -(%ebp);je  <NtConnectPort+>;testb $, -(%ebp)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;andl $, %esi;pushl %edi": 1,
                "movl %edi, %ecx;calll *;movl %fs:, %eax;movl %eax, ;movl (%ebp), %eax": 1,
                "testl %esi, %esi;jne  <NtConnectPort+>;andl %esi, ;movl %edi, %ecx;calll *": 1,
                "andl %esi, ;movl %edi, %ecx;calll *;popl %edi;popl %esi": 1,
                "jne  <NtConnectPort+>;movl (%ecx), %edx;cmpl (%ebp), %edx;je  <NtConnectPort+>;movl (%ecx), %ecx": 1,
                "movl %ecx, (%ecx);calll - <NtConnectPort+>;popl %ebp;retl $;int": 1,
                "movl %eax, %ecx;andb $, %cl;cmpb $, %cl;jne  <NtConnectPort+>;orl $, %eax": 1,
                "testl %ecx, %ecx;je  <NtConnectPort+>;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;andl $, (%esi)": 1,
                "xorl %eax, %eax;pushl %eax;pushl $;pushl %eax;pushl -(%ebp)": 1,
                "calll - <NtConnectPort+>;cmpl $, (%edi);jne - <NtConnectPort+>;andl $, ;movl $, %ecx": 1,
                "jne - <NtConnectPort+>;andl $, ;movl $, %ecx;calll *;movl -(%ebp), %ecx": 1,
                "cmpb $, (%ebp);je  <NtConnectPort+>;movl (%esi), %esi;testl %esi, %esi;je  <NtConnectPort+>": 1,
                "jne  <NtConnectPort+>;cmpl $, (%ebp);jne  <NtConnectPort+>;pushl $;jmp  <NtConnectPort+>": 1,
                "cmpl $, (%ebp);jne  <NtConnectPort+>;pushl $;pushl %eax;calll - <NtConnectPort+>": 1,
                "movl %ebx, -(%ebp);movl $, %edi;jne  <NtConnectPort+>;movl %edi, %ecx;calll *": 1,
                "movl %edi, %ecx;je  <NtConnectPort+>;movl %eax, (%esi);movl %eax, ;calll *": 1,
                "movl %eax, (%ebp);je  <NtConnectPort+>;movl (%ecx), %ecx;movl %ecx, -(%ebp);leal (%eax), %ebx": 1,
                "movl %ecx, -(%ebp);leal (%eax), %ebx;jmp  <NtConnectPort+>;movl -(%ebp), %edx;movl %eax, %ecx": 1,
                "cmpl %edx, (%ecx);movl (%eax), %eax;jne  <NtConnectPort+>;movl (%ecx), %edx;cmpl %esi, %edx": 1,
                "jne  <NtConnectPort+>;movl (%ecx), %edx;cmpl %esi, %edx;je  <NtConnectPort+>;cmpl (%esi), %edx": 1,
                "cmpb $, %al;jne  <NtConnectPort+>;movl (%ebp), %edi;addl $, %edi;movl (%edi), %ecx": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);calll  <MmGetPhysicalMemoryRanges+>;popl %ebp": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);calll - <ZwYieldExecution+>;popl %ebp": 1,
                "incl (%esi);jne  <MmRemovePhysicalMemory+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <MmRemovePhysicalMemory+>": 3,
                "jmp - <MmRemovePhysicalMemory+>;orl $, (%edi);pushl $;pushl $;pushl $": 1,
                "decl (%esi);xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 2,
                "movl (%eax), %edx;movl (%eax), %ecx;addl %edx, %ecx;movl %ecx, -(%ebp);movl , %ecx": 1,
                "pushl $;movl $, (%ebx);movl %eax, (%ebx);pushl $;movl %ebx, (%eax)": 1,
                "calll *;incl ;xorl %eax, %eax;popl %edi;popl %ebx": 1,
                "incl ;xorl %eax, %eax;popl %edi;popl %ebx;popl %esi": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "popl %eax;movl %eax, -(%ebp);addl %eax, -(%ebp);movl -(%ebp), %eax;cmpl (%ebp), %eax": 1,
                "movl -(%ebp), %eax;cmpl (%ebp), %eax;jbe  <MmIsVerifierEnabled+>;pushl $;calll - <ExRaiseStatus>": 2,
                "pushl $;calll - <ExRaiseStatus>;movzwl (%esi), %ecx;movl (%esi), %esi;movl %ecx, %eax": 1,
                "pushl $;calll - <KeReleaseMutant>;incl (%edi);jne  <MmIsVerifierEnabled+>;leal (%edi), %eax": 1,
                "leal (%edi), %eax;cmpl %eax, (%eax);je  <MmIsVerifierEnabled+>;movb $, (%edi);movb $, %cl": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %edx;movl %ecx, (%edx);calll - <wctomb+>;retl $": 1,
                "andl %eax, %esi;movl %esi, -(%ebp);movl , %edi;movl %edi, %ecx;orl %esi, %ecx": 1,
                "orl %esi, %ecx;movl %ecx, -(%ebp);notl %eax;andl %edx, %eax;movl %eax, -(%ebp)": 1,
                "retl $;subb (%edx), %ch;subb (%edx), %ch;subb (%edx), %ch;subb (%edx), %ch": 2,
                "andb %bh, (%bx,%di);jne  <MmIsVerifierEnabled+>;popal;andb %dh, %fs:(%edi,%ebp,);jns  <MmIsVerifierEnabled+>": 1,
                "movl %eax, -(%ebp);pushl %edi;movl , %edi;xorl %ecx, %ecx;incl %eax": 1,
                "movl %eax, -(%ebp);popl %eax;cmpl %eax, %esi;movl %edi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);jae  <MmIsVerifierEnabled+>;cmpl $, -(%ebp);je - <MmIsVerifierEnabled+>;andw $, -(%ebp,%eax,)": 1,
                "pushl %eax;movl (%ebp), %eax;pushl $;pushl $;pushl (%eax)": 2,
                "cmpl $, ;jne  <MmIsVerifierEnabled+>;movl , %edx;testl %edx, %edx;movl $, %ecx": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movl $, -(%ebp);cmpl $, -(%ebp);je  <MmIsVerifierEnabled+>": 1,
                "cmpl $, -(%ebp);je  <MmIsVerifierEnabled+>;movl (%edx), %edx;cmpl $, %edx;jne - <MmIsVerifierEnabled+>": 1,
                "addl $, %eax;cmpl -(%ebp), %ecx;jb - <MmIsVerifierEnabled+>;popl %edi;popl %esi": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, ;jne  <MmIsVerifierEnabled+>;movl $, %eax": 1,
                "popl %ebp;retl $;movl (%ebp), %eax;pushl $;addl $, %eax": 1,
                "addl $, %eax;pushl %eax;leal (%ebx), %eax;pushl %eax;calll  <RtlEqualUnicodeString>": 2,
                "cmpl $, %eax;movl %eax, (%ebp);jne - <MmIsVerifierEnabled+>;jmp - <MmIsVerifierEnabled+>;movl (%eax), %ecx": 1,
                "jne  <MmIsVerifierEnabled+>;movl (%ebp), %eax;movl (%eax), %eax;cmpl $, %eax;movl %eax, (%ebp)": 1,
                "pushl $;leal (%esi), %eax;pushl %eax;leal (%ebx), %eax;pushl %eax": 2,
                "movl (%ebx), %ebx;cmpl $, %ebx;jne - <MmIsVerifierEnabled+>;xorl %eax, %eax;incl %eax": 1,
                "incl %eax;cmpl %eax, ;movl %eax, (%ebp);jne  <MmIsVerifierEnabled+>;cmpl %eax, ": 1,
                "testb $, ;je  <MmIsVerifierEnabled+>;cmpl $, ;jne  <MmIsVerifierEnabled+>;movl , %eax": 1,
                "movl $, %edx;subl %edx, %esi;shrl $, %edi;movl , %edi;sarl $, %esi": 1,
                "movl %esi, (%ebx,%edi);addl $, %eax;movl $, -(%ebp);movl -(%ebp), %edi;movl -(%ebp), %esi": 1,
                "movl %esi, (%edi,%ebx);addl $, %eax;movl $, (%eax);movl -, %edi;movl -, %ebx": 1,
                "addl $, %eax;movl $, (%eax);movl -, %edi;movl -, %ebx;shrdl $, %ebx, %edi": 1,
                "movl , %esi;movl %eax, %edi;subl %esi, %edi;shrl $, %esi;andl $, %esi": 1,
                "pushl %ebx;pushl %esi;pushl %edi;xorl %ebx, %ebx;movl %fs:, %eax": 3,
                "movl (,%edx,), %edx;movl , %ecx;movl , %eax;pushl %edi;movl %edx, %edi": 1,
                "orl $, %ecx;jmp  <MmIsVerifierEnabled+>;andl $-, %ecx;orl $, %ecx;jmp  <MmIsVerifierEnabled+>": 1,
                "orl $, %ecx;jmp  <MmIsVerifierEnabled+>;orl $, %ecx;movl (%ebp), %edi;andl $, %edi": 1,
                "pushl $;subl $, %eax;pushl %eax;calll - <MISYSPTE+>;popl %ebp": 1,
                "pushl %eax;calll - <MISYSPTE+>;popl %ebp;retl $;int": 1,
                "calll - <MISYSPTE+>;movl %eax, %edx;testl %edx, %edx;jne  <MmAllocateMappingAddress+>;xorl %eax, %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl %edx, %eax": 1,
                "movl %edx, %eax;shrl $, %eax;pushl %esi;movl (%ebp), %esi;andl $, %eax": 1,
                "pushl %edx;pushl $;jmp  <MmFreeMappingAddress+>;decl %esi;decl %esi": 1,
                "je  <MmFreeMappingAddress+>;pushl %esi;leal (%edi), %eax;pushl %eax;pushl $": 1,
                "calll - <MmBuildMdlForNonPagedPool+>;pushl $;addl $, %esi;pushl %esi;pushl %edi": 1,
                "movl %eax, %ebx;cmpl %edi, %ebx;movl %ebx, -(%ebp);je  <MmFreeMappingAddress+>;xorl %edx, %edx": 1,
                "xorl %edx, %edx;movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <MmFreeMappingAddress+>": 1,
                "je  <MmFreeMappingAddress+>;movl %ebx, %eax;shll $, %eax;movl %eax, -(%ebp);calll *": 1,
                "xorl %ecx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl (%ebp), %eax;cmpl $-, %eax;jne  <MmFreeMappingAddress+>": 1,
                "movl , %eax;andl , %eax;jmp  <MmFreeMappingAddress+>;movb , %cl;shll %cl, %eax": 1,
                "andl , %eax;jmp  <MmFreeMappingAddress+>;movb , %cl;shll %cl, %eax;movl , %ecx": 1,
                "xorl %edx, %edx;shldl $, %ecx, %edx;shll $, %ecx;xorl %edi, %edi;orl %ecx, %eax": 1,
                "orl , %eax;orl %edx, %edi;movl , %edx;orl , %edi;movl %ecx, %ebx": 1,
                "pushl %esi;xorl %esi, %esi;xorl %ebx, %ebx;cmpl %esi, (%ebp);pushl %edi": 1,
                "movl , %eax;movl (%eax), %ecx;cmpl %ecx, (%ebp);jb  <MmFreeMappingAddress+>;movl (%eax), %edx": 1,
                "jb  <MmFreeMappingAddress+>;movl (%eax), %edx;addl %ecx, %edx;cmpl %edx, (%ebp);jb  <MmFreeMappingAddress+>": 1,
                "jne - <MmFreeMappingAddress+>;jmp  <MmFreeMappingAddress+>;movl %eax, %ebx;testl %esi, %esi;je  <MmFreeMappingAddress+>": 1,
                "movl %eax, %ebx;testl %esi, %esi;je  <MmFreeMappingAddress+>;movl %edi, %ecx;calll - <ExReleaseResourceLite>": 1,
                "movl %ecx, -(%ebp);calll *;testb $, (%edi);je  <MmSetBankedSection+>;movl $, %esi": 1,
                "movl (%ebp), %ebx;movl %ebx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "movl (%ebp), %ebx;subl %ecx, %eax;incl %eax;shll $, %eax;xorl %edx, %edx": 1,
                "jne  <MmSetBankedSection+>;movl $, %esi;jmp  <MmSetBankedSection+>;movl (%ebp), %eax;andl $, (%ebp)": 1,
                "addl $-, %eax;movl %eax, (%esi);movl (%edi), %edi;andl $, %edi;leal -(,%edi,), %edi": 1,
                "movl (%ebp), %eax;shrl $, %ecx;movl %edi, %ecx;movl %edi, (%esi);movl %ebx, (%esi)": 1,
                "adcl $, %ecx;xorl -(%ebp), %ecx;xorl %eax, %ebx;andl $, %ecx;andl $, %ebx": 1,
                "movb $-, (%ebx);movl %esi, (%eax);movzbl , %eax;movl %ebx, (%ebp);movb %al, %bl": 1,
                "pushl %esi;andl %edx, %ecx;xorl %esi, %esi;cmpl %edx, %ecx;jne  <MmLockPagableSectionByHandle+>": 1,
                "movl (%eax), %esi;movl (%eax), %edx;leal (%eax), %ecx;movl (%eax), %eax;cmpl %eax, %esi": 1,
                "movl (%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;jne - <MmLockPagableSectionByHandle+>": 1,
                "leal (%edi), %eax;cmpl %eax, (%eax);je  <MmLockPagableSectionByHandle+>;movb $, %cl;movb %cl, (%edi)": 1,
                "popl %ebx;popl %esi;leave;retl $;movl $, %eax": 1,
                "testl %ebx, %ebx;je  <MmLockPagableSectionByHandle+>;movl (%ebx), %eax;pushl %eax;subl %eax, %esi": 1,
                "cmpl %edx, %eax;jae  <MmLockPagableSectionByHandle+>;movl %edx, %eax;movl (%ecx), %edx;cmpl %edx, %esi": 1,
                "movl $, %ecx;andl %ecx, %eax;xorl %edx, %edx;cmpl %ecx, %eax;jne  <MmLockPagableImageSection+>": 1,
                "calll - <RtlImageNtHeader>;movzwl (%eax), %ecx;andl $, -(%ebp);leal (%ecx,%eax), %ecx;movzwl (%eax), %eax": 1,
                "addl %edx, %eax;cmpl %eax, %edi;jb  <MmLockPagableImageSection+>;addl $, %ecx;incl -(%ebp)": 1,
                "jmp  <MmLockPagableImageSection+>;movl (%ecx), %eax;movl (%ebx), %edx;addl %edx, %eax;cmpl %eax, (%ecx)": 1,
                "movl (%ebx), %edx;addl %edx, %eax;cmpl %eax, (%ecx);movl %ecx, -(%ebp);je  <MmLockPagableImageSection+>": 1,
                "jne  <MmLockPagableImageSection+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <MmLockPagableImageSection+>;movb $, %cl": 1,
                "cmpl %eax, (%eax);je  <MmLockPagableImageSection+>;movb $, %cl;movb $, (%esi);calll *": 1,
                "je  <MmLockPagableImageSection+>;movb $, %cl;movb $, (%esi);calll *;movl -(%ebp), %eax": 1,
                "movb $, %cl;movb $, (%esi);calll *;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "orl $-, %ebx;pushl %ebx;shrl $, %eax;orl $-, %edx;pushl %edx": 1,
                "shrl $, %eax;orl $-, %edx;pushl %edx;negl %esi;xorl %ecx, %ecx": 1,
                "addl %eax, %esi;xorl %eax, %eax;pushl %ecx;pushl %eax;calll  <MmAllocatePagesForMdl>": 1,
                "movl , %eax;orl , %edi;xorl %ecx, %ecx;orl , %ecx;movl %eax, %edx": 1,
                "jne  <MmAllocateNonCachedMemory+>;cmpb $, ;movl %edx, -(%ebp);jne  <MmAllocateNonCachedMemory+>;andl $-, %edi": 1,
                "addl $, %eax;decl %esi;movl %eax, (%ebp);jne - <MmAllocateNonCachedMemory+>;pushl -(%ebp)": 1,
                "decl %esi;movl %eax, (%ebp);jne - <MmAllocateNonCachedMemory+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl %ebx;calll - <MmGetVirtualForPhysical+>;movl -(%ebp), %eax;popl %edi": 1,
                "leal (%ecx,%eax), %eax;pushl %eax;pushl %esi;calll - <MISYSPTE+>;popl %edi": 1,
                "pushl (%ebp);pushl (%ebp);calll - <MmProbeAndLockPages>;jmp  <MmProbeAndLockProcessPages+>;movl -(%ebp), %eax": 1,
                "int;int;int;movl $, %edx;jmp  <NtFreeVirtualMemory+>": 1,
                "movl $, %edi;pushl %edi;movl $, %esi;pushl %esi;pushl $": 1,
                "testl %ebx, %ebx;jne  <MmProbeAndLockProcessPages+>;movl $, %eax;jmp  <MmProbeAndLockProcessPages+>;leal -(%ebp), %eax": 1,
                "jge  <MmProbeAndLockProcessPages+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne  <MmProbeAndLockProcessPages+>": 1,
                "jmp  <MmProbeAndLockProcessPages+>;pushl $;pushl %edx;jmp  <MmProbeAndLockProcessPages+>;movl $, %ecx": 1,
                "je  <MmProbeAndLockProcessPages+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>;cmpw $, ": 1,
                "cmpw $, ;ja - <MmProbeAndLockProcessPages+>;popl %ebp;retl $;int": 1,
                "movl %eax, (%ebp);andl $, %ebx;cmpl $, (%esi);je  <MmProbeAndLockProcessPages+>;pushl %edi": 1,
                "pushl %edi;movl $, %edi;movl %edi, %ecx;calll *;movl $, %edx": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl %edi, %ecx;calll *;popl %edi;testb $, (%esi)": 1,
                "movl %edi, %ecx;calll *;popl %edi;testb $, (%esi);je  <MmProbeAndLockProcessPages+>": 1,
                "je  <MmProbeAndLockProcessPages+>;movl (%ebp), %eax;movl (%eax), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);pushl %ebx;pushl (%ebp);calll - <MmCanFileBeTruncated+>": 1,
                "jbe  <NtAllocateVirtualMemory+>;movl $, %eax;jmp  <NtAllocateVirtualMemory+>;movl (%ebp), %ecx;testl $, %ecx": 1,
                "je  <NtAllocateVirtualMemory+>;cmpl %eax, %ecx;jne  <NtAllocateVirtualMemory+>;testl $, %ecx;je  <NtAllocateVirtualMemory+>": 1,
                "je  <NtAllocateVirtualMemory+>;cmpl $, %ecx;je  <NtAllocateVirtualMemory+>;movl $, %eax;jmp  <NtAllocateVirtualMemory+>": 1,
                "movl $, %eax;jmp  <NtAllocateVirtualMemory+>;cmpl $, (%ebp);je  <NtAllocateVirtualMemory+>;movl $, %eax": 1,
                "movl $, %eax;jmp  <NtAllocateVirtualMemory+>;movl %esi, -(%ebp);movl %fs:, %eax;movl (%eax), %ecx": 1,
                "jb  <NtAllocateVirtualMemory+>;movl %esi, (%ecx);movl (%eax), %ecx;movl %ecx, (%eax);movl (%ebp), %edx": 1,
                "jmp  <NtAllocateVirtualMemory+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl $, -(%ebp);movl , %eax;andl $, -(%ebp);testl %ebx, %ebx;je  <NtAllocateVirtualMemory+>": 1,
                "andl $, -(%ebp);testl %ebx, %ebx;je  <NtAllocateVirtualMemory+>;testb $, (%ebp);jne  <NtAllocateVirtualMemory+>": 1,
                "leal (%ebx), %eax;andl %ecx, %eax;movl %eax, -(%ebp);cmpl %edi, %eax;jbe  <NtAllocateVirtualMemory+>": 1,
                "jmp  <NtAllocateVirtualMemory+>;movl %edi, -(%ebp);shrl $, -(%ebp);pushl (%esi);pushl -(%ebp)": 1,
                "shrl $, %eax;cmpl (%ebx), %eax;jb  <NtAllocateVirtualMemory+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <KeUnstackDetachProcess>;cmpl $-, (%ebp);je  <NtAllocateVirtualMemory+>;movl %esi, %ecx": 4,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp);movl (%ebp), %eax;movl %edi, (%eax)": 1,
                "je  <NtAllocateVirtualMemory+>;testb $, (%ebp);je  <NtAllocateVirtualMemory+>;pushl (%ebp);pushl %esi": 2,
                "calll ;jmp  <NtAllocateVirtualMemory+>;testb $-, -(%ebp);jne  <NtAllocateVirtualMemory+>;testb $, (%ebp)": 1,
                "je  <NtAllocateVirtualMemory+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl %ebx": 2,
                "xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl (%ebx), %edi;movl (%edi), %eax": 1,
                "movl (%ebx), %edi;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "addl %eax, %ecx;movl %ecx, -(%ebp);adcl %edx, -(%ebp);pushl %edi;calll - <MmDisableModifiedWriteOfSection+>": 1,
                "adcl %edx, -(%ebp);pushl %edi;calll - <MmDisableModifiedWriteOfSection+>;leal (%esi), %ecx;calll *": 1,
                "jne  <NtAllocateVirtualMemory+>;movl %ecx, %edx;movl $, %eax;andl %eax, %edx;cmpl %eax, %edx": 1,
                "movl $, %eax;andl %eax, %edx;cmpl %eax, %edx;je  <NtAllocateVirtualMemory+>;movl -(%ebp), %eax": 1,
                "testb $, (%ebx);je  <NtAllocateVirtualMemory+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl -(%ebp);calll  <PsLookupThreadByThreadId+>;testb %al, %al;je - <NtAllocateVirtualMemory+>;movl $, -(%ebp)": 1,
                "negl %eax;pushl %eax;calll  <PsLookupThreadByThreadId+>;jmp - <NtAllocateVirtualMemory+>;leal (%esi), %ecx": 1,
                "jmp  <NtAllocateVirtualMemory+>;calll - <ExAcquireFastMutexUnsafe>;movl -(%ebp), %eax;cmpl %eax, -(%ebp);ja  <NtAllocateVirtualMemory+>": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);ja  <NtAllocateVirtualMemory+>;movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "calll *;movl -(%ebp), %eax;testl %eax, %eax;je  <NtAllocateVirtualMemory+>;negl %eax": 1,
                "movl , %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;andl $, %ecx;xorl %edi, %edi": 1,
                "andl $, %eax;orl $, %eax;movl %eax, -(%ebp);movl %ecx, -(%ebp);testb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);shrl $, %edx;movl $, %ecx;andl %ecx, %edx;movl $, %eax": 1,
                "pushl %esi;pushl %ebx;pushl -(%ebp);pushl -(%ebp);calll  <NtFreeVirtualMemory+>": 1,
                "xorl %eax, %ecx;andl $, %ecx;xorl %eax, %ecx;movl %ecx, (%ebx);leal (%esi), %eax": 1,
                "pushl -(%ebp);calll - <MmIsNonPagedSystemAddressValid+>;movl -(%ebp), %edi;jmp  <NtAllocateVirtualMemory+>;testw $, %di": 1,
                "calll - <MmIsNonPagedSystemAddressValid+>;movl -(%ebp), %edi;jmp  <NtAllocateVirtualMemory+>;testw $, %di;jne  <NtAllocateVirtualMemory+>": 1,
                "jne  <NtAllocateVirtualMemory+>;movl %edi, %eax;shrl $, %eax;andl $, %eax;subl $, %eax": 1,
                "je - <NtAllocateVirtualMemory+>;incl -(%ebp);cmpl $, -(%ebp);jne  <NtAllocateVirtualMemory+>;pushl $": 1,
                "calll - <ExReleaseFastMutexUnsafe>;cmpl $, -(%ebp);jne - <NtAllocateVirtualMemory+>;movl -(%ebp), %edi;testl %edi, %edi": 1,
                "calll *;movl %edi, %ebx;negl %ebx;movl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);pushl %edi;pushl %esi;calll - <PsReturnProcessPagedPoolQuota+>": 1,
                "pushl %edi;pushl %esi;calll - <PsReturnProcessPagedPoolQuota+>;cmpl $, -(%ebp);je - <NtAllocateVirtualMemory+>": 1,
                "calll - <PsReturnProcessPagedPoolQuota+>;cmpl $, -(%ebp);je - <NtAllocateVirtualMemory+>;pushl %ebx;calll  <PsLookupThreadByThreadId+>": 1,
                "movl -(%ebp), %eax;shrl $, %eax;addl %eax, %edi;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, %eax;subl %edx, %eax;movl %eax, %edi;andl %ecx, %edi;negl %edi": 1,
                "negl %edi;shrl $, %eax;addl %eax, %edi;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "andl $, %eax;movl %eax, -(%ebp);je  <NtAllocateVirtualMemory+>;orb $, (%ecx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;andl $, %eax;orl $-, %eax;shll $, %eax;movl (%ecx), %edx": 1,
                "cmpl %eax, -(%ebp);je  <NtAllocateVirtualMemory+>;testb $, (%ebp);je  <NtAllocateVirtualMemory+>;pushl %eax": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp);testl %eax, %eax;je - <NtAllocateVirtualMemory+>;movl -(%ebp), %edi": 1,
                "testl %eax, %eax;je - <NtAllocateVirtualMemory+>;pushl -(%ebp);pushl %esi;calll - <PsChargeProcessNonPagedPoolQuota>": 1,
                "calll - <PsChargeProcessNonPagedPoolQuota>;movl %eax, -(%ebp);testl %eax, %eax;jge  <NtAllocateVirtualMemory+>;pushl $": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;pushl -(%ebp);jmp  <NtAllocateVirtualMemory+>": 1,
                "movl -(%ebp), %edi;pushl %edi;calll - <RtlClearAllBits>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %eax, (%edi);movl %ebx, %eax;shrl $, %eax;movl %eax, (%edi);leal (%esi), %ecx": 1,
                "movl %ebx, %eax;shrl $, %eax;movl %eax, (%edi);leal (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>": 1,
                "pushl %edi;calll - <ExFreePoolWithTag>;cmpl %ebx, -(%ebp);je  <NtAllocateVirtualMemory+>;pushl %ebx": 1,
                "calll  <MmMapUserAddressesToPage+>;testl %eax, %eax;jne  <NtAllocateVirtualMemory+>;movl %edi, %ecx;calll  <NtFreeVirtualMemory+>": 1,
                "movl -(%ebp), %eax;movl %ecx, (%eax);movl %ebx, (%eax);pushl %eax;pushl %esi": 2,
                "calll  <NtFreeVirtualMemory+>;jmp  <NtAllocateVirtualMemory+>;cmpl $, -(%ebp);je  <NtAllocateVirtualMemory+>;movl -(%ebp), %ecx": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl , %eax;testl %eax, %eax": 1,
                "testb $-, (%eax);je - <NtAllocateVirtualMemory+>;testb $, (%ebp);je - <NtAllocateVirtualMemory+>;movl -(%ebp), %eax": 1,
                "leal (%ecx,%eax), %ebx;movl %ebx, -(%ebp);movzwl %dx, %edx;leal (%ecx,%edx,), %ecx;cmpl (%ebp), %ecx": 1,
                "cmpl (%ebp), %ecx;ja - <NtAllocateVirtualMemory+>;cmpb $, -(%ebp);jne  <NtAllocateVirtualMemory+>;pushl $": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);xorl %eax, %eax;calll - <wctomb+>;retl $": 8,
                "andb %dl, (%ebx);jae  <NtAllocateVirtualMemory+>;insl %dx, %es:(%edi);jae  <NtAllocateVirtualMemory+>;andb %cl, (%ecx)": 1,
                "calll - <NtAllocateVirtualMemory+>;testl %eax, %eax;jne  <NtAllocateVirtualMemory+>;movb (%ebx), %al;cmpb $, %al": 1,
                "cmpw (%ebx), %cx;je  <NtAllocateVirtualMemory+>;cmpb $, %al;movl (%ebp), %eax;jne  <NtAllocateVirtualMemory+>": 1,
                "popl %ecx;movl $, %edi;leal (%eax), %esi;xorl %edx, %edx;rep  cmpsw %es:(%edi), (%esi)": 1,
                "shll $, %ecx;leal (%ecx,%eax), %esi;leal (%eax), %ecx;cmpl %ecx, %esi;movl %esi, (%ebp)": 1,
                "movl %esi, (%ebp);jae  <NtAllocateVirtualMemory+>;addl $, %esi;pushl $;popl %ecx": 1,
                "popl %ecx;movl $, %edi;leal (%edx,%ebx), %esi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi)": 1,
                "jne - <NtAllocateVirtualMemory+>;movl (%ebx), %ecx;leal -(%ecx), %esi;testl %esi, %ecx;jne - <NtAllocateVirtualMemory+>": 1,
                "ja - <NtAllocateVirtualMemory+>;subw $, %ax;negw %ax;sbbl %eax, %eax;andl $, %eax": 1,
                "cmpl -(%ebp), %eax;jb  <NtAllocateVirtualMemory+>;ja  <NtAllocateVirtualMemory+>;cmpl -(%ebp), %ecx;jbe  <NtAllocateVirtualMemory+>": 1,
                "jmp  <NtAllocateVirtualMemory+>;cmpl %edi, %eax;ja - <NtAllocateVirtualMemory+>;cmpl $, %esi;ja - <NtAllocateVirtualMemory+>": 1,
                "jb  <NtAllocateVirtualMemory+>;ja - <NtAllocateVirtualMemory+>;cmpl -(%ebp), %esi;ja - <NtAllocateVirtualMemory+>;pushl %ebx": 1,
                "movl , %eax;movl %esi, %ecx;shll $, %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx": 1,
                "movl %esi, %ecx;shll $, %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movl %ecx, (%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx;movl (%ecx), %esi;movl %eax, -(%ebp)": 1,
                "cmpl %edi, %ebx;movl %ebx, %esi;jne - <NtAllocateVirtualMemory+>;jmp - <NtAllocateVirtualMemory+>;movl (%ebp), %eax": 1,
                "jmp  <NtAllocateVirtualMemory+>;orb $-, (%esi);orb $-, (%esi);movl (%ebp), %eax;movl (%eax), %edx": 1,
                "testb $, (%edx);movl (%esi), %ecx;je  <NtAllocateVirtualMemory+>;orl $, %ecx;movl %ecx, (%esi)": 1,
                "movl (%esi), %ecx;je  <NtAllocateVirtualMemory+>;orl $, %ecx;movl %ecx, (%esi);testb $, (%ebp)": 1,
                "movl %edi, (%ebx);movl (%ebx), %eax;movl %eax, (%ecx);movl %edx, -(%ebp);movl %edx, -(%ebp)": 1,
                "andl $, %edx;orl %edx, %eax;movl (%ecx), %edx;orl $, %eax;testl %edx, %edx": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;addl $, %eax;pushl $;movl %eax, %edi": 1,
                "pushl %esi;movl (%eax), %esi;movl %esi, %ecx;orl %edx, %ecx;jne  <NtAllocateVirtualMemory+>": 1,
                "cmpl $, %esi;jbe  <NtAllocateVirtualMemory+>;movl $, %eax;jmp  <NtAllocateVirtualMemory+>;movl (%eax), %eax": 1,
                "movl $, %eax;jmp  <NtAllocateVirtualMemory+>;pushl ;leal (,%edi,), %eax;pushl %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;jne  <NtAllocateVirtualMemory+>": 1,
                "movl $, %eax;jmp  <NtAllocateVirtualMemory+>;pushl $;xorl %eax, %eax;popl %ecx": 1,
                "shll $, %ecx;andl $, %eax;orl %eax, %ecx;orl -(%ebp), %ebx;movl %ecx, -(%ebp)": 1,
                "pushl %eax;pushl (%ebp);shll $, %edi;orl %ecx, %edi;movl %edi, (%esi)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ecx;pushl (%ebp);pushl %ecx": 3,
                "leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;pushl %esi": 5,
                "pushl (%ebp);movl %eax, -(%ebp);calll  <MmMapViewOfSection>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jge  <NtAllocateVirtualMemory+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %esi, %eax;jne  <NtAllocateVirtualMemory+>;movl (%edx), %eax;addl $, %eax;shrl $, %eax": 1,
                "jne - <NtAllocateVirtualMemory+>;pushl %esi;pushl %edi;pushl -(%ebp);calll  <MmPrefetchPages+>": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);xorl %esi, %esi": 1,
                "cmpl %esi, -(%ebp);je  <NtAllocateVirtualMemory+>;movl $, %eax;jmp  <NtAllocateVirtualMemory+>;pushl %edi": 1,
                "pushl %eax;pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "calll - <MmCreateMdl>;orb $, (%esi);calll - <MmCommitSessionMappedView+>;pushl (%ebp);movl %eax, %ebx": 1,
                "andl $, -(%ebp);movl %ebx, -(%ebp);calll - <CcPurgeCacheSection+>;pushl (%ebp);calll - <MmCommitSessionMappedView+>": 1,
                "movl %ebx, -(%ebp);jne  <NtAllocateVirtualMemory+>;orb $, (%esi);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl $;pushl %edi;calll - <KeWaitForSingleObject>;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ebx;testb $, (%esi);je  <NtAllocateVirtualMemory+>;pushl %esi;pushl (%esi)": 1,
                "jmp  <NtAllocateVirtualMemory+>;pushl -(%ebp);calll  <NtFreeVirtualMemory+>;movl -(%ebp), %edx;cmpl $, %edx": 1,
                "cmpw $, (%ebx);je  <NtAllocateVirtualMemory+>;movl $, -(%ebp);jmp  <NtAllocateVirtualMemory+>;movl (%ebx), %eax": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl $;pushl -(%ebp)": 2,
                "cmpl %edi, %ecx;je  <NtAllocateVirtualMemory+>;movl (%ebx), %eax;andl $, %eax;addl $, %eax": 1,
                "movl $, -(%ebp);jmp  <NtAllocateVirtualMemory+>;subl %eax, %edx;leal (%eax,%ebx), %esi;movl %edx, -(%ebp)": 1,
                "xorl %edi, %edi;cmpl %edi, (%eax);movl %ecx, -(%ebp);movl %ebx, -(%ebp);je  <NtAllocateVirtualMemory+>": 1,
                "pushl %edi;calll - <ExAllocatePoolWithTag>;incl %esi;movl %esi, -(%ebp);movl %eax, %edx": 1,
                "incl %esi;movl %esi, -(%ebp);movl %eax, %edx;cmpl %edi, %edx;movl %edx, -(%ebp)": 1,
                "movl %ebx, (%eax);movl -(%ebp), %edx;xorl %eax, %eax;pushl $;popl %ecx": 1,
                "popl %ecx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi);andl $, (%ebx);movl %edx, (%ebx)": 1,
                "movb $, %cl;movl (%ebx), %edi;movb %cl, (%edi);movw (%eax), %di;movl (%ebx), %ecx": 1,
                "movl %ecx, (%eax);orl $, (%edx);movl (%edx), %eax;xorl %ecx, %ecx;incl %ecx": 1,
                "xorl %ecx, %ecx;incl %ecx;cmpl $, -(%ebp);movl %ebx, (%edx);movl %ecx, (%edx)": 1,
                "je  <NtAllocateVirtualMemory+>;movl (%ebp), %eax;movl (%eax), %eax;testb $, (%eax);je  <NtAllocateVirtualMemory+>": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;testb $, (%eax);movl -(%ebp), %eax;je  <NtAllocateVirtualMemory+>": 1,
                "orb $, (%eax);movl %ecx, (%eax);movl %eax, (%esi);movl -(%ebp), %eax;testw $, %ax": 1,
                "leal -(%ecx), %eax;notl %eax;shrl $, %eax;movl %edx, -(%ebp);shrl $, %edx": 1,
                "cmpl -(%ebp), %ecx;movl %eax, -(%ebp);ja  <NtAllocateVirtualMemory+>;movl -(%ebp), %ecx;jb  <NtAllocateVirtualMemory+>": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl (%esi), %ecx;andl $, (%ebp);andl $, %ecx": 1,
                "andl $, (%ebp);andl $, %ecx;orl $, %ecx;movl %ecx, (%esi);movl -(%ebp), %ecx": 1,
                "cmpl -(%ebp), %edx;jae  <NtAllocateVirtualMemory+>;movl %edi, (%eax);movl %ecx, (%eax);jmp  <NtAllocateVirtualMemory+>": 1,
                "andl $, (%eax);addl $, (%ebp);addl $, %eax;decl -(%ebp);jne - <NtAllocateVirtualMemory+>": 1,
                "addl $, %eax;decl -(%ebp);jne - <NtAllocateVirtualMemory+>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "andl $, -(%ebp);shrl $, %eax;movl %eax, (%esi);movl -(%ebp), %eax;andl $, %eax": 1,
                "movl , %edi;addl %eax, (%ebp);addl %eax, -(%ebp);movl %edi, (%ecx);addl $, %ecx": 1,
                "andl $, %edi;addl $, %eax;addl %ecx, %edi;leal (%edi,%eax), %edi;cmpl -(%ebp), %edi": 1,
                "movl %eax, (%ebp);movl %ecx, -(%ebp);ja  <NtAllocateVirtualMemory+>;movl -(%ebp), %edi;addl %eax, %edi": 1,
                "pushl %eax;leal -(%ebp), %ecx;pushl %ecx;addl $, %eax;pushl %eax": 1,
                "addl -(%ebp), %edi;movl %eax, -(%ebp);calll - <IoPageRead>;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "cmpl $, -(%ebp);jbe  <NtAllocateVirtualMemory+>;addl $, %edi;movl -(%edi), %eax;testl %eax, %eax": 1,
                "movl -(%eax), %edx;testl %edx, %edx;movl %edi, -(%ebp);jne  <NtAllocateVirtualMemory+>;andl %edx, (%eax)": 1,
                "movl (%eax), %ecx;addl %ecx, %edx;cmpl %ecx, %edx;jb  <NtAllocateVirtualMemory+>;leal (%esi), %ecx": 1,
                "movl -(%ebp), %ecx;andl $, (%esi);andl $, (%esi);movl %ecx, (%esi);movl -(%eax), %ecx": 1,
                "shll $, %ecx;movl %ecx, (%esi);movl %ecx, (%ebp);movl -(%ebp), %ecx;shrl $, %edi": 1,
                "shrl $, %edi;movl %ecx, (%esi);subl %edx, %edi;movl %edi, (%esi);movl (%eax), %edx": 1,
                "andb $, %al;orb $, %al;movsbl %al, %eax;cltd;movl %eax, %ecx": 1,
                "movl %esi, %eax;cltd;shldl $, %eax, %edx;shll $, %eax;orl %edx, %edi": 1,
                "shll $, %eax;orl %edx, %edi;orl %eax, %ecx;movl %edi, %eax;shldl $, %ecx, %eax": 1,
                "orl %edx, %edi;orl %eax, %ecx;movl %edi, %eax;shldl $, %ecx, %eax;shll $, %ecx": 1,
                "orl $, %ecx;xorl %edi, %edi;orl %edi, %edx;movl %ecx, (%esi);je  <NtAllocateVirtualMemory+>": 1,
                "movl %ecx, (%esi);movl -(%ebp), %ecx;orb $, (%ecx);movl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "xorl %edi, %edi;jmp  <NtAllocateVirtualMemory+>;movl , %edi;movl %edi, (%ecx);movl , %edi": 1,
                "movl , %edi;addl %edx, (%ebp);addl %edx, -(%ebp);movl %edi, (%ecx);addl $, %ecx": 1,
                "movl %ecx, -(%ebp);addl $, %eax;decl -(%ebp);movl %eax, -(%ebp);jne - <NtAllocateVirtualMemory+>": 1,
                "decl -(%ebp);movl %eax, -(%ebp);jne - <NtAllocateVirtualMemory+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %edx, (%eax);addl $, %eax;decl %ecx;jne - <NtAllocateVirtualMemory+>;cmpl $, -(%ebp)": 1,
                "jne  <NtAllocateVirtualMemory+>;cmpl $, -(%ebp);jae  <NtAllocateVirtualMemory+>;movl -(%ebp), %edx;movl -(%ebp), %esi": 1,
                "testl %ecx, %ecx;movl %ecx, (%ebp);je  <NtAllocateVirtualMemory+>;xorl %edx, %edx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movb $, %cl;calll - <_allshr>;movl %eax, -(%ebp)": 4,
                "movl -(%ebp), %edx;movb $, %cl;calll - <_allshr>;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movb $, %cl;calll - <_allshr>;movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "calll - <_allshr>;movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;andl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;andl $, -(%ebp);testb $, (%eax)": 1,
                "movl -(%ebp), %eax;andl $, -(%ebp);testb $, (%eax);je  <NtAllocateVirtualMemory+>;testb $, -(%ebp)": 1,
                "testb $, (%eax);je  <NtAllocateVirtualMemory+>;testb $, -(%ebp);jne  <NtAllocateVirtualMemory+>;movl $, -(%ebp)": 1,
                "pushl -(%ebp);pushl (%ebp);pushl (%ebp);calll - <MmCommitSessionMappedView+>;testl %eax, %eax": 1,
                "jne  <NtAllocateVirtualMemory+>;pushl %eax;pushl (%ebp);calll - <ExFreePoolWithTag>;jmp  <NtAllocateVirtualMemory+>": 1,
                "movl (%ebp), %esi;andl $, -(%ebp);pushl $;movl %eax, %edi;popl %ecx": 1,
                "movl %eax, -(%ebp);andl $, %eax;shrl $, %esi;xorl %esi, %esi;shldl $, %eax, %esi": 1,
                "andl $, %eax;shrl $, %esi;xorl %esi, %esi;shldl $, %eax, %esi;shll $, %eax": 1,
                "movl %esi, (%ebx);jne  <NtAllocateVirtualMemory+>;orb $, (%esi);leal (%esi), %eax;movl %ecx, (%esi)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl (%ebx);calll - <MmCommitSessionMappedView+>;xorl %ebx, %ebx": 1,
                "je  <NtAllocateVirtualMemory+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %edi": 1,
                "je  <NtCreateSection+>;testl $, %edx;je  <NtCreateSection+>;movl $, %eax;jmp  <NtCreateSection+>": 1,
                "movl %ebx, (%eax);movl (%ecx), %eax;movl %eax, (%ecx);movl (%ebp), %eax;cmpl %ebx, %eax": 1,
                "movl %esi, -(%ebp);xorl %edi, %edi;movl %edi, -(%ebp);orl $-, -(%ebp);jmp  <NtCreateSection+>": 1,
                "xorl %edi, %edi;movl %edi, -(%ebp);orl $-, -(%ebp);jmp  <NtCreateSection+>;movl -(%ebp), %eax": 1,
                "movl (%eax), %esi;movl (%eax), %edi;jmp  <NtCreateSection+>;xorl %esi, %esi;xorl %edi, %edi": 1,
                "jmp  <NtCreateSection+>;cmpl $, %eax;jne  <NtCreateSection+>;cmpl $, -(%ebp);jae  <NtCreateSection+>": 1,
                "xorl %ecx, %ecx;shll $, %esi;cmpl %ecx, %edx;jb  <NtCreateSection+>;ja  <NtCreateSection+>": 1,
                "jb  <NtCreateSection+>;ja  <NtCreateSection+>;cmpl %esi, %eax;jbe  <NtCreateSection+>;movl %esi, %eax": 1,
                "calll - <_allshr>;cmpl $, (%ebp);movl %eax, %edi;jne  <NtCreateSection+>;cmpl (%ebp), %edi": 1,
                "movl , %eax;movl , %edx;leal (%eax,%ecx), %esi;addl %ebx, %esi;cmpl %ecx, %esi": 1,
                "movl (%ebp), %eax;xorl %edx, %edx;incl %edx;movl %edx, (%eax);addl $, %eax": 1,
                "incl %edx;movl %edx, (%eax);addl $, %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "movl (%ebp), %ecx;xchgl %eax, (%ecx);movl %edx, %eax;jmp  <NtCreateSection+>;subl %edx, %esi": 1,
                "jmp  <NtCreateSection+>;subl %edx, %esi;cmpl %eax, %esi;jbe  <NtCreateSection+>;subl %eax, %esi": 1,
                "jbe  <NtCreateSection+>;subl %eax, %esi;xorl %ecx, %ecx;xorl %edx, %edx;movl (,%ecx,), %eax": 1,
                "movl -(%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);addl $, %esi;movl %esi, (%ebp)": 1,
                "calll - <IoQueryFileDosDeviceName>;testl %eax, %eax;jne  <NtCreateSection+>;pushl %edi;pushl (%ebp)": 1,
                "movl %edx, (%ebp);jbe  <NtCreateSection+>;addl $, -(%ebp);movl (%ebp), %esi;addl %ecx, %eax": 1,
                "addl $, %ecx;cmpl %esi, -(%ebp);leal (%eax), %edi;movl %ebx, (%eax);movl %edi, (%eax)": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%edx), %ecx;movzwl (%ecx), %esi;shrl %esi": 1,
                "pushl %esi;pushl %edi;xorl %ebx, %ebx;xorl %eax, %eax;pushl $": 1,
                "stosl %eax, %es:(%edi);pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <MmCreateMdl>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movb %bl, -(%ebp)": 1,
                "jne  <NtCreateSection+>;movl $, %eax;jmp  <NtCreateSection+>;movl %ebx, -(%ebp);movl , %edx": 1,
                "jb  <NtCreateSection+>;movl %ebx, (%edx);movl , %edx;movl (%ebp), %ecx;testb $, %cl": 1,
                "retl;movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <NtCreateSection+>;movl (%ebp), %eax": 2,
                "jb  <NtCreateSection+>;cmpb %bl, -(%ebp);je  <NtCreateSection+>;movl $, -(%ebp);movl (%ecx), %edx": 1,
                "cmpl %ecx, %edi;jl  <NtCreateSection+>;jg  <NtCreateSection+>;cmpl %edx, %esi;jbe  <NtCreateSection+>": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);jmp  <NtCreateSection+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movw -(%ebp), %ax;movw %ax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movw -(%ebp), %ax;movw %ax, -(%ebp);cmpw %bx, %ax;je  <NtCreateSection+>": 1,
                "calll  <RtlAddAccessAllowedAce>;movl %eax, %edi;cmpl %ebx, %edi;jl  <NtCreateSection+>;pushl %ebx": 1,
                "movl $, %edi;jmp  <NtCreateSection+>;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl %esi, -(%ebp);movl %eax, %edi;cmpl %ebx, %eax;jl  <NtCreateSection+>": 1,
                "cmpl %ebx, %edi;jl  <NtCreateSection+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jl  <NtCreateSection+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %eax;pushl $;pushl $;pushl %esi;calll - <IoQueryVolumeInformation>": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;je  <NtCreateSection+>;pushl $;popl %ecx": 1,
                "rep  stosl %eax, %es:(%edi);movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "movl %edi, (%esi);cmpl %ebx, %edi;je  <NtCreateSection+>;pushl $;popl %ecx": 1,
                "movl %eax, %edi;movl %edi, (%esi);cmpl %ebx, %edi;jne  <NtCreateSection+>;pushl %ebx": 1,
                "movl %edi, (%esi);cmpl %ebx, %edi;jne  <NtCreateSection+>;pushl %ebx;pushl (%esi)": 1,
                "pushl %ebx;calll - <ExAllocatePoolWithTag>;movl %eax, (%esi);cmpl %ebx, %eax;je  <NtCreateSection+>": 1,
                "jne  <NtCreateSection+>;pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>;pushl %ebx": 1,
                "andb $, %al;movb %al, (%esi);movl $, %ecx;calll *;movl , %edi": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <IoCreateFile>;movl %eax, %edi": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %eax, %edi;cmpl %ebx, %eax;jl  <NtCreateSection+>": 1,
                "movl %ecx, -(%ebp);movl %eax, %edi;cmpl %ebx, %eax;jl  <NtCreateSection+>;xorl %esi, %esi": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;leal -(%eax,%ecx), %ebx;andl $, %eax": 1,
                "orl $, %ebx;movl %eax, (%edi);cmpl , %eax;movl %esi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "jb  <NtCreateSection+>;movl %fs:, %eax;movl (%edi), %ecx;cmpl , %ecx;movl (%eax), %eax": 1,
                "cmpl , %ecx;ja  <NtCreateSection+>;movl %eax, (%ebp);addl $, %eax;movl %eax, %ecx": 1,
                "movl $, %esi;jmp  <NtCreateSection+>;movl (%edi), %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl %eax, %esi": 1,
                "je  <NtCreateSection+>;shrl $, %ebx;cmpl (%esi), %ebx;ja  <NtCreateSection+>;movl (%esi), %eax": 1,
                "movl %eax, (%ebp);movl %ecx, (%edx);andl $, -(%ebp);jmp  <NtCreateSection+>;addl $, %ebx": 1,
                "shll $, %eax;movl %eax, (%ebp);movl -(%ebp), %ecx;addl $, %ecx;cmpl %ecx, %eax": 1,
                "movl %eax, (%ebp);movl -(%ebp), %ecx;addl $, %ecx;cmpl %ecx, %eax;ja  <NtCreateSection+>": 1,
                "pushl (%ebp);addl $, %ecx;pushl %ecx;pushl %eax;calll - <MmFlushImageSection+>": 1,
                "movl (%edi), %edx;movl (%esi), %eax;movl %edx, %ebx;shrl $, %ebx;andl $, %ebx": 1,
                "subl %eax, %edx;leal (%ecx,%edx,), %eax;jmp  <NtCreateSection+>;movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movl %eax, (%ebp);calll - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edi;movl %eax, %ebx;shrl $, %edi": 1,
                "movl %esi, %ecx;movl %ebx, -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;movl %eax, (%ebp);jne  <NtCreateSection+>;cmpl %eax, -(%ebp)": 1,
                "movl (%ebp), %esi;movl -(%ebp), %ecx;movb %al, (%esi);calll - <ExReleaseFastMutexUnsafe>;leal (%esi), %ecx": 1,
                "movb %al, (%esi);calll - <ExReleaseFastMutexUnsafe>;leal (%esi), %ecx;calll *;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;jmp  <NtCreateSection+>;movl %eax, %ebx;movl (%ebx), %eax": 1,
                "jmp  <NtCreateSection+>;movl %edi, %edx;movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ebx": 1,
                "cmpl $, (%ebp);jb - <NtCreateSection+>;pushl %esi;calll - <MmDisableModifiedWriteOfSection+>;movl %edi, %eax": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ebx;movl , %eax;cmpl %eax, %ebx;jb  <NtCreateSection+>": 1,
                "movl %ecx, (%eax);movl (%ebx), %eax;movl %eax, (%ebx);movl (%ebp), %edi;movl , %eax": 1,
                "je  <NtCreateSection+>;cmpl %edx, (%ecx);je  <NtCreateSection+>;movl %eax, (%esi);movl (%ecx), %eax": 1,
                "jmp  <NtCreateSection+>;movl %edx, (%esi);movl %edx, (%esi);popl %edi;popl %esi": 1,
                "calll - <MmFreeMappingAddress+>;testl %eax, %eax;je  <MmPageEntireDriver+>;testb $, ;jne  <MmPageEntireDriver+>": 1,
                "jne  <MmPageEntireDriver+>;cmpl , %esi;movl (%eax), %ecx;jb  <MmPageEntireDriver+>;cmpl , %esi": 1,
                "je  <MmResetDriverPaging+>;cmpl $, %eax;je  <MmResetDriverPaging+>;cmpl $, %eax;je  <MmResetDriverPaging+>": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <MmResetDriverPaging+>;cmpl $-, %eax": 1,
                "rep  stosl %eax, %es:(%edi);xorl %edi, %edi;jmp  <MmResetDriverPaging+>;movl , %eax;cmpl $, %eax": 1,
                "cmpl %edi, %eax;movl %eax, (%ebx);jne  <MmResetDriverPaging+>;movw %di, (%ebx);movw %di, (%ebx)": 1,
                "pushl (%ebp);movl %esi, -(%ebp);calll - <RtlImageDirectoryEntryToData>;testl %eax, %eax;je  <MmResetDriverPaging+>": 1,
                "decl %edi;movl %edx, -(%ebp);xorl %ecx, %ecx;jmp  <MmResetDriverPaging+>;movl -(%ebp), %edx": 1,
                "jne  <MmResetDriverPaging+>;addl $, -(%ebp);incl %esi;incl %esi;testb %dl, %dl": 1,
                "leal -(%ecx), %edi;jmp  <MmResetDriverPaging+>;jle  <MmResetDriverPaging+>;leal (%ecx), %edx;movl %edx, -(%ebp)": 1,
                "leal (%ecx), %edx;movl %edx, -(%ebp);cmpl -(%ebp), %edi;movl -(%ebp), %esi;jae - <MmResetDriverPaging+>": 1,
                "movl %edx, -(%ebp);cmpl -(%ebp), %edi;movl -(%ebp), %esi;jae - <MmResetDriverPaging+>;jmp  <MmResetDriverPaging+>": 1,
                "movl , %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx": 1,
                "movl %edi, -(%ebp);je  <MmResetDriverPaging+>;cmpl $, (%ebp);jne  <MmResetDriverPaging+>;movw %cx, %si": 1,
                "movl %edx, -(%ebp);jae  <MmResetDriverPaging+>;movl (%eax,%edx,), %edi;addl (%ebp), %edi;leal (%esi), %edx": 1,
                "jae  <MmResetDriverPaging+>;movl (%eax,%edx,), %edi;addl (%ebp), %edi;leal (%esi), %edx;movl %edx, -(%ebp)": 1,
                "cmpb (%edi), %bl;jne  <MmResetDriverPaging+>;testb %dl, %dl;je  <MmResetDriverPaging+>;movl -(%ebp), %edx": 2,
                "jne  <MmResetDriverPaging+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movw (%eax,%edx,), %si;jmp  <MmResetDriverPaging+>": 1,
                "sbbl $-, %edx;testl %edx, %edx;jge  <MmResetDriverPaging+>;testl %esi, %esi;je  <MmResetDriverPaging+>": 1,
                "movl (%ebp), %eax;movl (%edx,%eax), %edx;addl %edx, %eax;cmpl %ecx, %eax;movl -(%ebp), %edx": 1,
                "movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <MmResetDriverPaging+>;subl %edx, %eax": 1,
                "jne - <MmResetDriverPaging+>;subl %edx, %eax;leal (%eax), %esi;pushl $;leal (%esi), %eax": 1,
                "movl %eax, %ecx;leal -(%ebp), %eax;pushl %eax;pushl $;andl $, %ecx": 1,
                "pushl %eax;pushl -(%ebp);movl -(%ebp), %eax;pushl (%eax);calll - <MmResetDriverPaging+>": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);pushl (%ebp);pushl $;pushl $": 1,
                "pushl -(%ebp);calll - <RtlImageNtHeader>;movl %eax, -(%ebp);cmpl %esi, %eax;je - <MmResetDriverPaging+>": 1,
                "movl -(%ebp), %esp;movl $, -(%ebp);orl $-, -(%ebp);xorl %esi, %esi;pushl -(%ebp)": 1,
                "pushl $-;calll - <ZwUnmapViewOfSection>;leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;cmpl $, (%ebp);jne  <MmResetDriverPaging+>": 1,
                "pushl ;pushl $;pushl -(%ebp);calll  <ObReferenceObjectByHandle>;cmpl %esi, %eax": 1,
                "pushl %ebx;movl (%eax), %ebx;movl (%ecx), %eax;pushl %esi;pushl %edi": 1,
                "shll $, %edi;pushl %edi;pushl %ebx;movl %ebx, (%ebp);movl %ebx, %esi": 1,
                "pushl (%ebp);pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmResetDriverPaging+>": 1,
                "andl $, %edx;orl %edx, %eax;orl %ebx, %ecx;movl (%ebp), %ebx;movl %eax, (%esi)": 1,
                "orl %ebx, %ecx;movl (%ebp), %ebx;movl %eax, (%esi);movl %ecx, (%esi);addl $, %esi": 1,
                "movzwl (%eax), %edx;pushl %esi;movzwl (%eax), %esi;addl $, %edx;testl %esi, %esi": 1,
                "movzwl (%eax), %esi;addl $, %edx;testl %esi, %esi;pushl %edi;leal (%edx,%eax), %edi": 1,
                "movl %eax, %edx;shrl $, %edx;andl %esi, %edx;subl %ebx, %edx;cmpl %ecx, %edx": 1,
                "subl %ebx, %edx;cmpl %ecx, %edx;jae  <MmResetDriverPaging+>;movl -(%ebp), %ecx;testb $-, (%ecx)": 1,
                "leal -(%eax,%ecx), %edi;movl -(%ebp), %eax;shrl $, %edi;andl %esi, %edi;subl %ebx, %edi": 1,
                "pushl -(%ebp);calll - <MmFlushImageSection+>;xorl %eax, %eax;jmp  <MmResetDriverPaging+>;cmpl $, -(%ebp)": 1,
                "addl $, %ecx;cmpl $, -(%ebp);movl %ecx, -(%ebp);ja - <MmResetDriverPaging+>;movl -(%ebp), %ecx": 1,
                "movl %eax, %edi;testl %edi, %edi;movl %edi, -(%ebp);je  <MmResetDriverPaging+>;movw (%esi), %ax": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %edi;cmpl %ebx, %edi;movl %edi, -(%ebp);jne  <MmResetDriverPaging+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl $, %eax;jmp  <MmResetDriverPaging+>;movl , %eax": 1,
                "popl %ecx;je  <MmResetDriverPaging+>;subl -(%ebp), %eax;sarl %eax;shll %eax": 1,
                "calll  <KeFindConfigurationEntry+>;movl %edi, %eax;popl %edi;popl %ebx;popl %esi": 1,
                "addl (%ebp), %ecx;addl (%ebp), %edx;andl $, -(%ebp);pushl %edi;movl (%eax), %edi": 1,
                "movl (%eax), %edi;movl (%ebp), %eax;movl (%eax), %eax;pushl %ebx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);decl %edi;movl %eax, -(%ebp);pushl %esi;movl -(%ebp), %eax": 1,
                "jmp  <MmResetDriverPaging+>;sbbl %eax, %eax;sbbl $-, %eax;testl %eax, %eax;jge  <MmResetDriverPaging+>": 1,
                "jmp  <MmResetDriverPaging+>;jle  <MmResetDriverPaging+>;leal (%ecx), %eax;movl %eax, -(%ebp);cmpl -(%ebp), %edi": 1,
                "jl  <MmResetDriverPaging+>;movl -(%ebp), %eax;movzwl (%eax,%ecx,), %eax;movl -(%ebp), %ecx;cmpl (%ecx), %eax": 1,
                "calll - <wctomb+>;movl (%ebp), %ebx;movl (%ebx), %eax;movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "shll $, %esi;movl %esi, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "calll  <NtFreeVirtualMemory+>;cmpl %edi, %eax;jl  <MmResetDriverPaging+>;cmpl $, -(%ebp);jne  <MmResetDriverPaging+>": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);pushl $;pushl %esi;calll - <MmFlushImageSection+>": 1,
                "movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmResetDriverPaging+>;pushl $": 1,
                "cmpl %edi, (%eax);je  <MmResetDriverPaging+>;testb $, (%eax);jne  <MmResetDriverPaging+>;cmpl $, ": 1,
                "pushl ;movl -(%ebp), %eax;movl %eax, %ecx;andl $, %ecx;negl %ecx": 3,
                "pushl %ecx;pushl %eax;pushl (%ebp);calll  <MmMapViewOfSection>;movl %eax, -(%ebp)": 1,
                "calll  <MmMapViewOfSection>;movl %eax, -(%ebp);cmpl %edi, -(%ebp);je  <MmResetDriverPaging+>;orb $, ": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax": 1,
                "movl %eax, -(%ebp);movl %edi, -(%ebp);cmpl -(%ebp), %esi;jae  <MmResetDriverPaging+>;movl -(%ebp), %eax": 1,
                "movl (%ebx), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %ecx;leal (%eax,%ecx,), %eax": 1,
                "leal (%eax,%ecx,), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %ecx": 1,
                "subl $, %eax;pushl %eax;calll - <MmFlushImageSection+>;jmp  <MmResetDriverPaging+>;movl , %eax": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ecx, (%esi);movl %eax, (%esi);xorl %edi, %edi": 1,
                "movl %edi, -(%ebp);movl $, %ecx;movl -(%ebp), %esi;movl -(%ebp), %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %esi, -(%ebp);movl $, %eax;addl %eax, -(%ebp);addl %eax, -(%ebp);jmp - <MmResetDriverPaging+>": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl %edx, -(%ebp);movl -(%ebp), %eax;movl $, %ecx": 1,
                "cmpl %edi, (%ebp);jne  <MmResetDriverPaging+>;pushl %edi;pushl %edi;pushl %edi": 2,
                "movl (%eax), %eax;movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, (%eax);cmpl %edi, (%ebp)": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%eax), %edi;movl (%eax), %eax": 1,
                "movzwl (%eax), %edx;addl %eax, %edx;leal (%ecx,%ecx,), %ebx;leal (%edx,%ebx,), %edx;xorl %eax, %eax": 1,
                "jne  <MmResetDriverPaging+>;movl (%ebp), %eax;movl (%eax), %eax;pushl %ebx;pushl %esi": 1,
                "movzwl (%ebx), %eax;movzwl (%ebx), %ecx;leal (%eax,%ebx), %edi;xorl %eax, %eax;xorl %esi, %esi": 1,
                "xorl %eax, %eax;xorl %esi, %esi;testl %ecx, %ecx;jbe  <MmResetDriverPaging+>;movl %ecx, -(%ebp)": 1,
                "pushl %esi;pushl %eax;calll - <MmFlushImageSection+>;xorl %eax, %eax;jmp  <MmResetDriverPaging+>": 1,
                "xorl %eax, %eax;jmp  <MmResetDriverPaging+>;testl %eax, %eax;jne  <MmResetDriverPaging+>;movl (%edi), %eax": 1,
                "pushl $;movl %eax, %ebx;decl (%ebx);pushl $;calll - <KeWaitForSingleObject>": 1,
                "pushl $;pushl ;subl %ecx, %eax;pushl ;sarl $, %eax": 1,
                "testl %eax, %eax;je  <MmResetDriverPaging+>;cmpl $-, %eax;je  <MmResetDriverPaging+>;cmpl $, (%eax)": 1,
                "xaddl %eax, (%ecx);pushl %esi;calll  <NtFreeVirtualMemory+>;decw (%edi);xorl %eax, %eax": 1,
                "calll - <MmAddVerifierThunks+>;testb $, (%edi);je  <MmResetDriverPaging+>;pushl $;leal (%edi), %eax": 1,
                "pushl %esi;calll - <MmFlushImageSection+>;movl (%ebp), %ecx;pushl $;pushl -(%ebp)": 1,
                "movl %edx, (%ebp);movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);xorl %esi, %esi": 1,
                "pushl %esi;pushl %edi;calll - <MmFlushImageSection+>;incl %esi;pushl (%edi)": 1,
                "pushl %edi;calll - <MmFlushImageSection+>;incl %esi;pushl (%edi);calll  <MmResetDriverPaging+>": 1,
                "popal;addb %cl, %ah;int;int;int": 1,
                "testl %ebx, %ebx;je  <MmResetDriverPaging+>;decw (%esi);cmpw $, (%esi);jne  <MmResetDriverPaging+>": 1,
                "cmpl $-, %ebx;je  <MmResetDriverPaging+>;testb $, %bl;jne  <MmResetDriverPaging+>;pushl $": 1,
                "movl -(%ebp), %ecx;addl $, %edi;cmpl (%eax), %ecx;jb - <MmResetDriverPaging+>;popl %esi": 1,
                "addb %dh, (%eax,%eax);addb %dh, (%ebx);imull $, (%eax), %eax;addb %ch, (%esi);insb %dx, %es:(%edi)": 5,
                "imull $, (%eax), %eax;addb %ch, (%esi);insb %dx, %es:(%edi);addb %ch, (%esi);addb %ah, (%ebp)": 5,
                "xorl %esi, %esi;pushl %eax;movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <RtlInitUnicodeString>": 2,
                "calll - <KeDelayExecutionThread>;pushl $;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal (%esi), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll  <RtlEqualUnicodeString>": 3,
                "movl $, %ecx;calll - <ExReleaseResourceLite>;incl (%edi);jne  <MmGetSystemRoutineAddress+>;leal (%edi), %eax": 2,
                "jb  <MmGetSystemRoutineAddress+>;insl %dx, %es:(%edi);andb %ch, (%ebx);orb (%eax), %al;addb %dl, (%ebx)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "leal -(%edi), %ecx;cmpw $, (%ecx);jne - <MmGetSystemRoutineAddress+>;subl %edi, %edx;sarl %edx": 1,
                "sarl %edx;shll %edx;movl %edi, -(%ebp);jmp  <MmGetSystemRoutineAddress+>;movw (%eax), %dx": 1,
                "calll - <RtlAppendUnicodeStringToString>;pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeStringToString>;leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl %esi, -(%ebp);movl %fs:, %eax": 1,
                "movl %eax, -(%ebp);decl (%eax);pushl %esi;pushl %esi;pushl %esi": 1,
                "cmpl %esi, -(%ebp);jne  <MmGetSystemRoutineAddress+>;cmpb $, ;je  <MmGetSystemRoutineAddress+>;cmpb $, ": 1,
                "cmpl $, %eax;je  <MmGetSystemRoutineAddress+>;cmpl $, %eax;je  <MmGetSystemRoutineAddress+>;cmpl $, %eax": 3,
                "movl -(%ebp), %edi;negl %edi;sbbl %edi, %edi;andl $, %edi;addl $, %edi": 1,
                "addl $, %edi;movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);pushl -(%ebp)": 2,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);pushl -(%ebp);pushl $;pushl $": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <ZwCreateSection>;movl %eax, -(%ebp);cmpl %esi, %eax": 1,
                "xorl %eax, %eax;incl %eax;jmp  <MmGetSystemRoutineAddress+>;xorl %eax, %eax;cmpl $, %eax": 1,
                "incl %eax;jmp  <MmGetSystemRoutineAddress+>;xorl %eax, %eax;cmpl $, %eax;jne  <MmGetSystemRoutineAddress+>": 1,
                "incl (%eax);jne  <MmGetSystemRoutineAddress+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <MmGetSystemRoutineAddress+>": 2,
                "movl $, -(%ebp);jmp - <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);cmpl $, -(%ebp);jne  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax": 1,
                "orl $-, -(%ebp);cmpl %esi, -(%ebp);jge  <MmGetSystemRoutineAddress+>;cmpl $, -(%ebp);jne  <MmGetSystemRoutineAddress+>": 1,
                "cmpl %esi, -(%ebp);jl  <MmGetSystemRoutineAddress+>;cmpl %esi, -(%ebp);jne  <MmGetSystemRoutineAddress+>;movl %esi, -(%ebp)": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);movl (%ebp), %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%edi), %ecx;leal (%eax,%edx), %ebx;cmpl %ecx, %ebx;jae  <MmGetSystemRoutineAddress+>;movl (%ebp), %ecx": 1,
                "movl %edx, -(%ebp);movl %esi, (%ebx);cmpl %esi, -(%ebp);je  <MmGetSystemRoutineAddress+>;movl %eax, (%ebx)": 1,
                "je  <MmGetSystemRoutineAddress+>;movl %eax, (%ebx);orb $, (%ebx);movw $, (%eax);movw $, (%eax)": 1,
                "movl -(%ebp), %esi;movl (%esi), %esi;cmpl %esi, %edx;jae  <MmGetSystemRoutineAddress+>;movl (%ecx), %ecx": 1,
                "cmpl %esi, %edx;jae  <MmGetSystemRoutineAddress+>;movl (%ecx), %ecx;leal (%ecx,%edx), %edi;cmpl %esi, %edi": 1,
                "movl (%eax), %esi;addl %edx, %esi;movl -(%ebp), %edx;movl -(%ebp), %eax;leal (%edx,%eax), %edi": 1,
                "jmp  <MmGetSystemRoutineAddress+>;andl $, (%eax,%ebx);incb -(%ebp);movzbl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "jb - <MmGetSystemRoutineAddress+>;movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%ebx);movl -(%ebp), %ecx": 1,
                "jbe  <MmGetSystemRoutineAddress+>;pushl $;pushl $;pushl -(%ebp);calll - <_wcsnicmp>": 1,
                "jne  <MmGetSystemRoutineAddress+>;cmpl %esi, %ebx;jne  <MmGetSystemRoutineAddress+>;pushl $;popl %ecx": 1,
                "movl -(%ebp), %eax;testl $, %eax;je  <MmGetSystemRoutineAddress+>;pushl %eax;leal -(%ebp), %eax": 1,
                "testl %eax, %eax;jl  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;movzwl %ax, %ecx;leal (%edi,%ecx), %edi": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax": 1,
                "leal (%edi,%eax), %edi;incl -(%ebp);jmp  <MmGetSystemRoutineAddress+>;movl %eax, -(%ebp);addl $, %edi": 1,
                "movl $, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "je  <MmGetSystemRoutineAddress+>;leal -(%ebp), %eax;pushl %eax;calll  <RtlFreeUnicodeString>;movl -(%ebp), %edi": 1,
                "addb %ah, (%edi);imull $, (%ebx), %esi;outsb (%esi), %dx;je  <MmGetSystemRoutineAddress+>;jae  <MmGetSystemRoutineAddress+>": 1,
                "je  <MmGetSystemRoutineAddress+>;cmpl %ebx, (%eax);je  <MmGetSystemRoutineAddress+>;addl $, %eax;incl %esi": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);je  <MmGetSystemRoutineAddress+>;movl %edi, %ecx;movl -(%ebp), %edi": 1,
                "cmpl %ebx, %edi;je  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "orl %eax, -(%ebp);pushl $;pushl %edi;calll - <_strnicmp>;addl $, %esp": 1,
                "je  <MmGetSystemRoutineAddress+>;pushl %esi;pushl $;pushl %edi;calll - <_strnicmp>": 3,
                "pushl %esi;pushl $;pushl %edi;calll - <_strnicmp>;addl $, %esp": 3,
                "calll - <_strnicmp>;addl $, %esp;testl %eax, %eax;je  <MmGetSystemRoutineAddress+>;movw (%esi), %ax": 1,
                "pushl %eax;pushl %ebx;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 3,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 4,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <MmGetSystemRoutineAddress+>;cmpl $, %esi;jne  <MmGetSystemRoutineAddress+>": 1,
                "addw -(%ebp), %ax;pushl $;movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 1,
                "calll - <MmResetDriverPaging+>;movl %eax, %esi;cmpl %ebx, %esi;jge - <MmGetSystemRoutineAddress+>;pushl -(%ebp)": 1,
                "movl %esi, %eax;jmp  <MmGetSystemRoutineAddress+>;cmpl $, -(%ebp);jne  <MmGetSystemRoutineAddress+>;cmpl %ebx, -(%ebp)": 1,
                "jne  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;addl $, -(%ebp);movl %esi, (%eax);leal -(%ebp), %eax": 1,
                "movl %esi, (%eax);leal -(%ebp), %eax;pushl %eax;calll  <RtlFreeUnicodeString>;cmpl %ebx, -(%ebp)": 1,
                "je  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl (%ecx), %esi;addl %eax, %edi": 1,
                "jl  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);cmpl %ebx, (%edi)": 1,
                "movl -(%ebp), %eax;jmp  <MmGetSystemRoutineAddress+>;pushl -(%ebp);calll - <MmResetDriverPaging+>;cmpl %ebx, -(%ebp)": 1,
                "movl %edi, (%eax);xorl %edi, %edi;cmpl %ebx, (%esi);jbe  <MmGetSystemRoutineAddress+>;leal (%eax), %ecx": 1,
                "jbe  <MmGetSystemRoutineAddress+>;leal (%eax), %ecx;leal (%esi), %eax;movl %eax, %edx;movl (%edx), %eax": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;movl (%ebp), %esi;movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "shrl $, %eax;pushl %eax;pushl $;calll - <MmIsVerifierEnabled+>;testl %eax, %eax": 1,
                "movl $, %ecx;popl %edx;movl (%eax), %esi;movl %esi, (%ecx);movl (%eax), %esi": 1,
                "pushl %eax;calll - <MmIsVerifierEnabled+>;movl %fs:, %eax;movl (%eax), %edi;movl (%edi), %ecx": 1,
                "movb $, (%esi);movl %ecx, (%esi);movl %eax, (%eax);movl %eax, (%eax);leal (%esi), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;pushl $;pushl $": 3,
                "leal (%ebx), %ecx;pushl %edi;movl %eax, (%esi);movl $, (%esi);movl %ecx, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;addl $, %edi;calll - <KeQueryTickCount>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %edi;movl , %eax;pushl %edi;pushl (%ebx);addl $, %eax": 1,
                "jge  <MmGetSystemRoutineAddress+>;calll - <KeDetachProcess>;jmp  <MmGetSystemRoutineAddress+>;andl $, -(%ebp);movl -(%ebp), %eax": 1,
                "orl $-, (%eax);movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %eax;movl %eax, (%eax)": 1,
                "movl %ecx, (%edx);movl (%eax), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <MmGetSystemRoutineAddress+>": 1,
                "movw $, (%eax);movl -(%ebp), %eax;movl , %ecx;movl %ecx, (%eax);jmp  <MmGetSystemRoutineAddress+>": 1,
                "movl (%ebp), %esi;pushl %esi;calll - <KeAttachProcess>;pushl $;popl %edi": 1,
                "pushl %esi;pushl ;calll  <MmMapViewOfSection>;movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl (%esi), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;movl , %ecx;movl %ecx, (%eax)": 2,
                "movl -(%ebp), %ecx;movw %ax, (%ecx);movl -(%ebp), %eax;movl %edi, (%eax);movl -(%ebp), %eax": 1,
                "orl $-, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;pushl (%eax);calll - <RtlImageNtHeader>": 1,
                "testb $, %al;je  <MmGetSystemRoutineAddress+>;calll  <ExRaiseDatatypeMisalignment>;movl -(%ebp), %eax;movl , %ecx": 1,
                "shrl $, %ecx;movl -(%ebp), %edx;movl %ecx, (%edx);cmpl %ebx, %eax;je  <MmGetSystemRoutineAddress+>": 1,
                "incl %eax;movb , %cl;shll %cl, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movb , %al;cmpb , %al;jl  <MmGetSystemRoutineAddress+>;movb %bl, ;movl , %eax": 1,
                "calll - <KeDetachProcess>;orl $-, -(%ebp);movl -(%ebp), %eax;calll - <wctomb+>;retl $": 1,
                "pushl %edi;pushl %esi;calll - <KeAttachProcess>;leal (%esi), %ebx;movl %ebx, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, ;jne  <MmGetSystemRoutineAddress+>;cmpl $, ": 1,
                "jne  <MmGetSystemRoutineAddress+>;cmpl $, ;jae  <MmGetSystemRoutineAddress+>;movb $, (%ebp);popl %ebp": 1,
                "movl $, (%eax);popl %esi;je  <MmGetSystemRoutineAddress+>;movl $, (%eax);movl $, (%eax)": 1,
                "movl %esi, %ecx;calll *;pushl %ebx;calll - <MmTrimAllSystemPagableMemory+>;movl %esi, %ecx": 1,
                "je  <MmGetSystemRoutineAddress+>;andl $, (%esi);leal (%esi), %eax;pushl %eax;movl $, (%esi)": 1,
                "movl $, %ebx;popl %edi;popl %esi;movl %ebx, %eax;popl %ebx": 2,
                "movl %eax, %ecx;pushl %esi;andl $, %ecx;xorl %esi, %esi;cmpl $, %ecx": 1,
                "pushl %ecx;movl %edx, %esi;movl %ecx, -(%ebp);xorl %edi, %edi;calll - <MmIsAddressValid>": 1,
                "pushl %eax;pushl %eax;pushl -(%ebp);pushl %eax;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movl %eax, (%ebx);orl $-, -(%ebp);jmp  <MmGetSystemRoutineAddress+>;xorl %eax, %eax;incl %eax": 1,
                "andw $, (%ecx,%eax,);movw $, (%ebx);movl , %eax;movl $, (%ebx);movl %eax, (%ebx)": 1,
                "cmpl %eax, (%eax);je  <MmGetSystemRoutineAddress+>;movb $, (%edi);movb $, %cl;calll *": 1,
                "pushl $;calll - <wctomb+>;andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 2,
                "pushl (%ebp);calll - <RtlImageDirectoryEntryToData>;movl %eax, -(%ebp);testl %eax, %eax;je  <MmGetSystemRoutineAddress+>": 1,
                "je  <MmGetSystemRoutineAddress+>;movl (%eax), %eax;testl %eax, %eax;je  <MmGetSystemRoutineAddress+>;movl (%eax), %ecx": 1,
                "rep  stosb %al, %es:(%edi);leal -(%ebx), %eax;movl %ebx, (%esi);movl %eax, (%esi);jbe  <MmGetSystemRoutineAddress+>": 1,
                "movl %eax, (%esi);jbe  <MmGetSystemRoutineAddress+>;movl -(%ebp), %ecx;movl (%ecx), %eax;testl %eax, %eax": 1,
                "divl (%esi);movl (%esi), %eax;cmpl $, (%eax,%edx,);je  <MmGetSystemRoutineAddress+>;movl (%esi), %edi": 1,
                "incl %edx;cmpl %edi, %edx;jb  <MmGetSystemRoutineAddress+>;xorl %edx, %edx;cmpl $, (%ebx,%edx,)": 1,
                "incl (%ebp);shrl %eax;addl $, %ecx;cmpl %eax, (%ebp);jb - <MmGetSystemRoutineAddress+>": 1,
                "jb - <MmGetSystemRoutineAddress+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl (%esi), %eax": 1,
                "cmpl $-, %eax;je - <MmGetSystemRoutineAddress+>;shll $, %eax;addl (%esi), %eax;xorl %edx, %edx": 1,
                "movl (%ebp), %edx;shll $, %eax;movl %ecx, (%eax,%edi);movl (%esi), %ecx;movl (%ebp), %edi": 1,
                "movl $, %esi;movl %esi, (%esi);movl $, (%esi);movl (%esi), %eax;movl %edx, (%eax)": 1,
                "movl $, (%esi);movl (%esi), %eax;movl %edx, (%eax);movl (%esi), %eax;movl %edx, (%eax)": 1,
                "pushl $;movl $, (%esi);movl $, (%esi);movl %ebx, (%esi);pushl %eax": 1,
                "pushl $;calll - <KeBugCheckEx>;movl (%esi), %ecx;calll *;movl (%esi), %eax": 1,
                "andl $, (%esi);popl %esi;retl;int;int": 1,
                "pushl $;pushl $;calll - <wctomb+>;movl (%ebp), %edi;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ebx;leal (%edi,%ebx), %eax;movl %eax, -(%ebp);cmpl , %eax;ja  <MmGetSystemRoutineAddress+>": 1,
                "andl $, -(%ebp);xorl %eax, %eax;cmpl $, (%ebp);sete %al;movl %eax, -(%ebp)": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl %edi, -(%ebp);cmpl $, (%ebp);jne  <MmGetSystemRoutineAddress+>": 1,
                "movl (%ebx), %eax;testl $, %eax;jne  <MmGetSystemRoutineAddress+>;testl $, %eax;je  <MmGetSystemRoutineAddress+>": 1,
                "jb  <MmGetSystemRoutineAddress+>;movl -(%ebp), %ecx;shrl $, %ecx;cmpl (%ebx), %ecx;ja  <MmGetSystemRoutineAddress+>": 1,
                "jne - <MmGetSystemRoutineAddress+>;movl (%ebp), %esi;movl %esi, %edi;shrl $, %edi;andl $, %edi": 1,
                "movl %esi, %edi;shrl $, %edi;andl $, %edi;subl $, %edi;shrl $, %esi": 1,
                "andl $, %edi;subl $, %edi;shrl $, %esi;movl $, %ecx;andl %ecx, %esi": 1,
                "shrl $, %esi;movl $, %ecx;andl %ecx, %esi;movl $, %edx;subl %edx, %esi": 1,
                "pushl %eax;pushl $;pushl -(%ebp);pushl %edi;calll - <MmIsNonPagedSystemAddressValid+>": 2,
                "subl $, %edi;andl $, -(%ebp);jmp  <MmGetSystemRoutineAddress+>;addl $, %edi;movl %edi, %esi": 1,
                "movb $, (%eax);movl -(%ebp), %ecx;calll - <ExReleaseFastMutexUnsafe>;movl (%ebp), %edi;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;jmp - <MmGetSystemRoutineAddress+>;pushl $;pushl (%ebp);pushl %edi": 1,
                "calll  <ProbeForWrite>;orl $-, -(%ebp);andb $-, (%esi);movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "je  <MmGetSystemRoutineAddress+>;testb $, (%ebx);jne  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;shrl $, %eax": 1,
                "movl -(%ebp), %eax;movl %esi, (%eax);movl (%ebx), %eax;testl %eax, %eax;je  <MmGetSystemRoutineAddress+>": 1,
                "movl (%ebx), %eax;testl %eax, %eax;je  <MmGetSystemRoutineAddress+>;movl %esi, (%eax);movl (%ebx), %eax": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <MmGetSystemRoutineAddress+>;movl (%esi), %ecx;andl $, %ecx": 1,
                "je  <MmGetSystemRoutineAddress+>;movl (%esi), %ecx;andl $, %ecx;orl $, %ecx;movl %ecx, (%esi)": 1,
                "orl $, %ecx;movl %ecx, (%esi);movl (%ebx), %ecx;movl %ecx, (%eax);leal (%ebx), %ecx": 1,
                "addl $, %eax;movl %ecx, %edx;movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx)": 1,
                "movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);movl (%esi), %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl %edi, (%ebx);orl $, %esi;movl %esi, -(%ebp)": 1,
                "movl (%ebp), %ecx;addl $, %ecx;calll *;pushl $;pushl %esi": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;testl $, %eax;leal (%esi), %ecx": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;testl $, %eax;leal (%esi), %ecx;je  <MmGetSystemRoutineAddress+>": 1,
                "testl $, %eax;leal (%esi), %ecx;je  <MmGetSystemRoutineAddress+>;leal (%esi), %ecx;testl $, %eax": 1,
                "movl %ecx, -(%ebp);je  <MmGetSystemRoutineAddress+>;movl %fs:, %eax;cmpb $, (%eax);je  <MmGetSystemRoutineAddress+>": 1,
                "movl (%eax), %eax;movl (%ebp), %edx;subl (%edx), %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;andl %edi, %eax;subl %eax, %ecx;cmpl -(%ebp), %ecx": 1,
                "cmpl %eax, %edi;movl %edi, -(%ebp);jbe  <MmGetSystemRoutineAddress+>;movl $, %esi;jmp  <MmGetSystemRoutineAddress+>": 1,
                "leal -(%edi,%eax), %ecx;orl $, %ecx;cmpl $, %eax;movl %eax, -(%ebp);movl %ecx, (%ebp)": 1,
                "pushl %ebx;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <MmGetSystemRoutineAddress+>;movl , %edx": 1,
                "testb $, (%ebp);movl $, -(%ebp);jne  <MmGetSystemRoutineAddress+>;testb $, (%ebx);jne  <MmGetSystemRoutineAddress+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;jmp  <MmGetSystemRoutineAddress+>;movl (%ebp), %ecx;testl %ecx, %ecx;je  <MmGetSystemRoutineAddress+>": 2,
                "xorl %eax, %eax;cmpl $, (%ebp);movl (%ebp), %ecx;sete %al;shll $, %eax": 1,
                "andl $, %eax;xorl %eax, (%esi);movl %edi, %ecx;movl $, (%esi);calll - <ExAcquireFastMutexUnsafe>": 1,
                "movl %edi, %ecx;movl $, (%esi);calll - <ExAcquireFastMutexUnsafe>;pushl %esi;movb $-, (%ebx)": 1,
                "movl (%esi), %ecx;movl %ecx, (%ebp);jae  <MmGetSystemRoutineAddress+>;movl (%ecx), %edx;movl (%ecx), %eax": 1,
                "movl (%ebp), %ecx;addl $, -(%ebp);movl -(%ebp), %eax;addl $, %ecx;cmpl (%ebp), %eax": 1,
                "movl %eax, (%ebp);calll - <ExAcquireFastMutexUnsafe>;pushl %esi;movb $-, (%ebx);calll - <MmTrimAllSystemPagableMemory+>": 1,
                "shll $, %eax;orl $, %eax;pushl %ebx;pushl %eax;movl (%esi), %eax": 1,
                "pushl %eax;calll  <NtFreeVirtualMemory+>;pushl %esi;pushl %ebx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movl -(%ebp), %esi;testb $, ;je  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "pushl %ebx;movl %esi, -(%ebp);calll - <MmIsThisAnNtAsSystem+>;testl %eax, %eax;jne  <MmGetSystemRoutineAddress+>": 1,
                "movl (%edi), %eax;xorl %edx, %edx;addl (%esi), %eax;movb $, %cl;adcl (%esi), %edx": 1,
                "jae - <MmGetSystemRoutineAddress+>;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %ecx;cmpl $, (%ecx)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <MmIsThisAnNtAsSystem+>;jmp  <MmGetSystemRoutineAddress+>;movl -(%ebp), %ecx": 1,
                "orl $-, %eax;shrl %cl, %eax;cmpl %eax, %ebx;jbe  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax": 1,
                "addl %edx, %eax;jmp  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;decl %eax;notl %eax": 1,
                "movl $, %esi;jmp  <MmGetSystemRoutineAddress+>;cmpl $, -(%ebp);je  <MmGetSystemRoutineAddress+>;pushl $": 1,
                "pushl $;popl %edi;pushl ;pushl %edi;pushl $": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "movl (%ebp), %ecx;movl %edi, (%esi);movl (%ecx), %eax;movl (%ecx), %edx;movb $, %cl": 1,
                "xorl %edi, %eax;andl $, %eax;xorl %edi, %eax;movl %eax, (%esi);movl $, %eax": 1,
                "testl %edi, %edi;je  <MmGetSystemRoutineAddress+>;incl (%edi);jmp  <MmGetSystemRoutineAddress+>;pushl $": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);je  <MmGetSystemRoutineAddress+>;pushl -(%ebp);pushl %edi": 1,
                "cmpl $, (%ebp);jge  <MmGetSystemRoutineAddress+>;movl (%ebp), %edi;cmpl $, (%edi);je  <MmGetSystemRoutineAddress+>": 1,
                "movl %eax, (%edi);cmpl $, -(%ebp);je  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax;movl (%esi), %esi": 1,
                "andl $, %ecx;negl %ecx;sbbl %ecx, %ecx;andl $, (%ebp);shrl $, %eax": 1,
                "jmp  <MmGetSystemRoutineAddress+>;movl (%esi), %eax;orl (%esi), %eax;jne  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax": 1,
                "movl (%esi), %eax;orl (%esi), %eax;jne  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "cmpl (%ebp), %esi;jb - <MmGetSystemRoutineAddress+>;movl (%ebp), %esi;subl %esi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);xorl %eax, %eax;popl %edi;popl %esi": 1,
                "sbbl %esi, %esi;negl %esi;shrl $, %eax;addl %eax, %esi;cmpl $, %esi": 1,
                "movl $, %esi;pushl -(%ebp);calll - <MmIsThisAnNtAsSystem+>;movl %esi, %eax;jmp  <MmGetSystemRoutineAddress+>": 1,
                "movb $-, (%ebp);movl (%ebp), %eax;testb $, (%eax);je  <MmGetSystemRoutineAddress+>;pushl -(%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;pushl -(%ebp);movl %ecx, %eax;andl $, %eax": 1,
                "pushl -(%ebp);movl %ecx, %eax;andl $, %eax;negl %eax;sbbl %eax, %eax": 1,
                "calll *;pushl -(%ebp);calll - <MmIsThisAnNtAsSystem+>;movl (%edi), %ecx;movl %ebx, %esi": 1,
                "calll - <RtlClearBits>;movl (%edi), %ecx;calll *;movl (%ebp), %eax;jmp  <MmGetSystemRoutineAddress+>": 1,
                "pushl $;addl $, %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;movl %fs:, %eax": 5,
                "calll - <ExReleaseResourceLite>;movb (%ebp), %cl;calll *;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "calll *;movl (%ebp), %eax;movl %ebx, (%eax);xorl %eax, %eax;popl %ebx": 1,
                "movl %ebx, (%eax);xorl %eax, %eax;popl %ebx;popl %edi;popl %esi": 1,
                "movl (%eax), %ecx;andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;xorl %eax, %eax": 1,
                "xorl %eax, %eax;cmpl (%esi), %eax;movl $, %edx;jl  <MmMapViewOfSection+>;jg  <MmMapViewOfSection+>": 1,
                "cmpl (%esi), %ecx;jbe  <MmMapViewOfSection+>;testl %edx, (%ebp);jne  <MmMapViewOfSection+>;movl $, %eax": 1,
                "movl $, %eax;testl %eax, (%esi);je  <MmMapViewOfSection+>;orl %eax, (%ebp);movl (%ebp), %ecx": 1,
                "pushl %edi;pushl %ebx;calll - <MmIsThisAnNtAsSystem+>;jmp  <MmMapViewOfSection+>;testb $, %al": 1,
                "calll - <MmIsThisAnNtAsSystem+>;jmp  <MmMapViewOfSection+>;testb $, %al;je  <MmMapViewOfSection+>;cmpl $, -(%ebp)": 1,
                "cmpl $, (%ebp);je - <MmMapViewOfSection+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "cmpl $, -(%ebp);popl %edi;popl %ebx;je  <MmMapViewOfSection+>;leal -(%ebp), %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl (%ebp);calll - <MmGetSystemRoutineAddress+>": 1,
                "pushl %eax;pushl (%ebp);calll - <MmGetSystemRoutineAddress+>;popl %ebp;retl $": 1,
                "testb $, (%eax);jne  <MmUnmapViewInSessionSpace+>;movl $, %eax;jmp  <MmUnmapViewInSessionSpace+>;movl , %eax": 1,
                "movl $, %eax;jmp  <MmUnmapViewInSessionSpace+>;movl , %eax;pushl (%ebp);addl $, %eax": 1,
                "andb $-, (%ebp);movl %eax, -(%ebp);jmp  <NtMapViewOfSection+>;andl $, -(%ebp);movl (%ebp), %ecx": 1,
                "movl (%ebp), %esi;movl , %eax;cmpl %eax, %esi;jb  <NtMapViewOfSection+>;movl %edx, (%eax)": 1,
                "movl (%ebx), %ecx;calll - <MmIsNonPagedSystemAddressValid+>;testl %eax, %eax;jne  <NtMapViewOfSection+>;movl $, %esi": 1,
                "cmpb $, -(%ebp);je  <NtMapViewOfSection+>;movl %edi, %edx;xorl %ecx, %ecx;addl -(%ebp), %edx": 1,
                "xorl %ecx, %ecx;addl -(%ebp), %edx;adcl -(%ebp), %ecx;cmpl %esi, %ecx;jb  <NtMapViewOfSection+>": 1,
                "je  <NtMapViewOfSection+>;testl %eax, -(%ebp);je  <NtMapViewOfSection+>;movl $, %esi;jmp  <NtMapViewOfSection+>": 1,
                "je  <NtMapViewOfSection+>;movl $, %esi;jmp  <NtMapViewOfSection+>;movl -(%ebp), %ebx;movl %edi, %esi": 1,
                "movl $, %eax;jmp  <NtMapViewOfSection+>;cmpl %esi, (%edi);je  <NtMapViewOfSection+>;leal -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);jne  <NtMapViewOfSection+>;testb $, %ah;jne  <NtMapViewOfSection+>;cmpl %esi, (%edx)": 1,
                "jne  <NtMapViewOfSection+>;movl %esi, -(%ebp);movl %esi, -(%ebp);movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "jne - <NtMapViewOfSection+>;movl %eax, -(%ebp);pushl %eax;pushl %esi;movl %eax, (%ebx)": 1,
                "pushl (%esi);pushl %esi;calll - <MmDisableModifiedWriteOfSection+>;pushl %esi;movl %eax, -(%ebp)": 2,
                "calll - <MmDisableModifiedWriteOfSection+>;movl (%esi), %edi;movl -(%ebp), %ecx;andl $, %ecx;shll $, %edi": 1,
                "movl %edi, -(%ebp);movl %ecx, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);xorl %eax, %eax;cmpl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "sbbl -(%ebp), %ebx;shrdl $, %ebx, %edi;leal (%eax,%edi,), %eax;shrl $, %ebx;movl %eax, -(%ebp)": 1,
                "andl $, -(%ebp);cmpl $, (%esi);jne  <NtMapViewOfSection+>;movl -(%ebp), %eax;testb $, (%eax)": 1,
                "movl (%eax), %eax;movl (%esi), %ecx;cmpl (%eax), %ecx;jne  <NtMapViewOfSection+>;pushl (%esi)": 1,
                "adcl -(%ebp), %ecx;movl %eax, -(%ebp);cmpl -(%ebp), %ecx;ja  <NtMapViewOfSection+>;jb  <NtMapViewOfSection+>": 1,
                "jne - <NtMapViewOfSection+>;cmpl $, -(%ebp);je  <NtMapViewOfSection+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "popl %esi;popl %ebx;leave;retl $;subl -(%ebp), %edi": 1,
                "shrdl $, %ebx, %edi;leal (%eax,%edi,), %eax;shrl $, %ebx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);jmp  <NtMapViewOfSection+>;xorl %esi, %esi;movl -(%ebp), %eax;testl %esi, %esi": 1,
                "andl $, %eax;pushl $;movl %eax, -(%ebp);popl %eax;je  <NtMapViewOfSection+>": 1,
                "calll - <MmIsThisAnNtAsSystem+>;jmp  <NtMapViewOfSection+>;movl -(%ebp), %eax;movl -(%ebp), %edi;pushl %eax": 1,
                "movl %edi, -(%ebp);jmp  <NtMapViewOfSection+>;cmpl -(%ebp), %esi;je  <NtMapViewOfSection+>;orl $, (%edi)": 1,
                "jmp  <NtMapViewOfSection+>;cmpl -(%ebp), %esi;je  <NtMapViewOfSection+>;orl $, (%edi);movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);incl -(%ebp);incl -(%ebp);movl -(%ebp), %eax;addl $, -(%ebp)": 1,
                "pushl $;sarl $, %edi;pushl $;movl %eax, -(%ebp);incl %edi": 1,
                "testl %esi, %esi;je  <NtMapViewOfSection+>;cmpl $, %edi;ja  <NtMapViewOfSection+>;leal (%esi), %ebx": 1,
                "calll - <MmCreateMdl>;movl %eax, %ebx;testl %ebx, %ebx;je  <NtMapViewOfSection+>;movl -(%ebp), %eax": 1,
                "testb $, (%eax);jne  <NtMapViewOfSection+>;addl $, %eax;movl %eax, -(%ebp);jmp  <NtMapViewOfSection+>": 1,
                "jmp  <NtMapViewOfSection+>;addl $, %eax;movl %eax, -(%ebp);movl (%eax), %ecx;cmpl %ecx, -(%ebp)": 1,
                "movl %esi, (%eax);movl -(%ebp), %eax;movl -(%ebp), %ecx;cmpl -(%ebp), %ecx;jb - <NtMapViewOfSection+>": 1,
                "xorl %esi, %esi;cmpl %esi, (%ebx);je  <NtMapViewOfSection+>;movl %esi, -(%ebp);jmp  <NtMapViewOfSection+>": 1,
                "je  <NtMapViewOfSection+>;pushl -(%ebp);pushl -(%ebp);calll - <MmIsThisAnNtAsSystem+>;pushl %esi": 1,
                "movl (%esi), %eax;andl $-, %eax;orb $, (%eax);movl (%esi), %ecx;movl (%ecx), %edx": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);jbe  <MmPrefetchPages+>;movl (%ebp), %ebx;movl %eax, %esi": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, (%ebp);movl -(%ebp), %eax;leal (%eax,%ebx,), %edi": 1,
                "pushl -(%ebp);calll - <MmIsThisAnNtAsSystem+>;movl , %ebx;movb $, %cl;calll *%ebx": 1,
                "calll *%ebx;movl (%esi), %edi;leal -(%edi), %edx;xorl %edi, %edx;andl $, %edx": 1,
                "andl $, %edx;xorl %edi, %edx;testb $, %dl;movl %edx, (%esi);je  <MmPrefetchPages+>": 1,
                "andl $-, %edx;movl $, -(%ebp);movl %edx, (%esi);movb %al, %cl;calll *": 1,
                "movl -(%ebp), %edi;movl (%edi,%esi,), %eax;testl %eax, %eax;je  <MmPrefetchPages+>;pushl $": 1,
                "jne  <MmPrefetchPages+>;movb $, %cl;calll *%ebx;movb %al, %bl;calll - <IoGetRequestorSessionId+>": 1,
                "movl %esp, %ebp;movl , %eax;pushl %esi;movl (%ebp), %esi;leal (%esi,%esi), %ecx": 1,
                "pushl %ebx;pushl %edi;xorl %edi, %edi;pushl %edi;movl %esi, %eax": 1,
                "movl %ecx, -(%ebp);movl (%edi), %ecx;shll $, %ebx;testl $, %ecx;je  <MmPrefetchPages+>": 1,
                "pushl %ebx;pushl %edi;calll  <NtFreeVirtualMemory+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "testl %eax, %eax;movl %eax, (%ebp);jge  <MmPrefetchPages+>;cmpl $, (%ebp);jne  <MmPrefetchPages+>": 1,
                "leal (%esi), %ecx;movl %eax, (%ebp);calll - <ExAcquireFastMutexUnsafe>;pushl %edi;movb $-, (%esi)": 1,
                "calll  <NtFreeVirtualMemory+>;pushl %edi;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;leal (%esi), %ecx": 1,
                "pushl (%ebp);calll - <MmPrefetchPages+>;popl %ebp;retl $;int": 1,
                "movl %esi, %eax;shrl $, %eax;andl %ecx, %eax;subl %ebx, %eax;movl %eax, (%ebp)": 1,
                "addl $, %esi;cmpl %edi, %esi;jbe - <MmUnmapViewOfSection+>;jmp - <MmUnmapViewOfSection+>;movl (%eax), %eax": 1,
                "jmp - <MmUnmapViewOfSection+>;int;int;int;int": 1,
                "movl $, %eax;andl %eax, %ecx;je  <NtFreeVirtualMemory+>;cmpl %eax, %ecx;je  <NtFreeVirtualMemory+>": 1,
                "orl $, %edi;movl %edi, -(%ebp);andl $, %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);leal (%esi), %ecx;movl %ecx, -(%ebp);calll *;testb $, (%esi)": 1,
                "testb $, (%esi);je  <NtFreeVirtualMemory+>;movl $, -(%ebp);jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx": 1,
                "je  <NtFreeVirtualMemory+>;pushl $;testb $-, (%ebp);je  <NtFreeVirtualMemory+>;movl (%ebx), %ecx": 1,
                "pushl %eax;shll $, %ecx;pushl %ecx;jmp  <NtFreeVirtualMemory+>;pushl -(%ebp)": 1,
                "jl  <NtFreeVirtualMemory+>;andl $, -(%ebp);movl %ebx, %ecx;calll  <NtFreeVirtualMemory+>;movl %eax, -(%ebp)": 1,
                "pushl %ebx;pushl %esi;calll  <NtFreeVirtualMemory+>;pushl %ebx;calll  <NtFreeVirtualMemory+>": 1,
                "pushl %ebx;calll  <NtFreeVirtualMemory+>;movl $, -(%ebp);jmp  <NtFreeVirtualMemory+>;testl $, %eax": 1,
                "pushl %esi;pushl %ebx;pushl %edi;pushl -(%ebp);calll  <NtFreeVirtualMemory+>": 2,
                "movl %ecx, (%ebx);movl %ebx, -(%ebp);jmp  <NtFreeVirtualMemory+>;testb $-, (%ebx);jne  <NtFreeVirtualMemory+>": 1,
                "testb $-, (%ebx);jne  <NtFreeVirtualMemory+>;movl -(%ebp), %eax;cmpl (%ebx), %eax;jne  <NtFreeVirtualMemory+>": 1,
                "movl %eax, %edi;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %ecx;incl %ecx;shrl $, %ecx": 1,
                "movl -(%ebp), %eax;movb $-, (%eax);pushl %eax;pushl %ebx;pushl -(%ebp)": 1,
                "calll  <NtFreeVirtualMemory+>;movl %eax, -(%ebp);movl (%ebx), %esi;movl $, %edi;andl %edi, %esi": 1,
                "xorl %ecx, (%ebx);subl %eax, %esi;movl -(%ebp), %eax;xorl (%eax), %esi;andl %edi, %esi": 1,
                "pushl %edi;pushl -(%ebp);cmpl $, -(%ebp);jne  <NtFreeVirtualMemory+>;calll  <MmMapUserAddressesToPage+>": 1,
                "subl %edi, (%esi);movl -(%ebp), %eax;subl %eax, (%esi);leal (%esi), %ecx;calll *": 1,
                "movl , %eax;testl %eax, %eax;je  <NtFreeVirtualMemory+>;testb $-, (%eax);je  <NtFreeVirtualMemory+>": 1,
                "testb $-, (%eax);je  <NtFreeVirtualMemory+>;testb $-, (%ebp);je  <NtFreeVirtualMemory+>;pushl (%ebp)": 1,
                "subl %ecx, %edi;leal (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%esi);pushl %ebx": 1,
                "pushl %edi;pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;subl -(%ebp), %edi;addl $, %edi": 1,
                "movb $, (%esi);leal (%esi), %ecx;calll - <ExReleaseFastMutexUnsafe>;movl (%ebx), %eax;movl %eax, %ecx": 1,
                "calll  <PsLookupThreadByThreadId+>;cmpl $, -(%ebp);jne  <NtFreeVirtualMemory+>;leal -(%ebp), %eax;pushl %eax": 1,
                "orl $-, -(%ebp);movl -(%ebp), %esi;movl -(%ebp), %eax;movl , %ecx;testl %ecx, %ecx": 1,
                "movl (%ebp), %edi;movl (%ebp), %ecx;leal (%edi,%ecx,), %ebx;movl %ebx, (%ebp);je  <NtFreeVirtualMemory+>": 1,
                "movl (%ebx), %ecx;movl (%ecx), %eax;testb $, %ah;pushl %esi;pushl %edi": 1,
                "pushl %edi;movl %ecx, -(%ebp);jne  <NtFreeVirtualMemory+>;testb $, %al;jne  <NtFreeVirtualMemory+>": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;movl (%edi), %edx;addl $, %eax;adcl $, %edx": 1,
                "movl $, %edi;jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %edx;testb $-, (%edx);jne  <NtFreeVirtualMemory+>": 1,
                "calll - <FsRtlGetFileSize>;testl %eax, %eax;movl %eax, (%ebp);jl  <NtFreeVirtualMemory+>;movl (%edi), %eax": 1,
                "cmpl -(%ebp), %ecx;jbe  <NtFreeVirtualMemory+>;movl (%ebp), %edx;testb $, (%edx);jne  <NtFreeVirtualMemory+>": 1,
                "calll - <ExReleaseResourceLite>;pushl $;pushl $;calll - <ExAcquireResourceExclusiveLite>;movl -(%ebp), %edx": 1,
                "addl $, %edx;jmp  <NtFreeVirtualMemory+>;addl $, %edx;movl %edx, (%ebp);movl %edx, %esi": 1,
                "movl (%esi), %esi;cmpl %edx, (%esi);movl %esi, (%ebp);jne - <NtFreeVirtualMemory+>;movl (%ebx), %eax": 1,
                "movl (%edi), %eax;movl (%edi), %edx;movl (%esi), %ebx;movb $, %cl;calll - <_allshr>": 1,
                "addl %eax, (%ebx);testl %ecx, %ecx;movl %edx, -(%ebp);jne  <NtFreeVirtualMemory+>;movl (%edi), %eax": 1,
                "jmp  <NtFreeVirtualMemory+>;movl (%ebx), %eax;movl (%ebx), %edx;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "movl %ecx, %eax;shll $, %eax;addl $, %eax;pushl $;movl %edx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %ecx, (%esi);jbe  <NtFreeVirtualMemory+>;movl -(%ebp), %eax;shrl $, %eax": 1,
                "pushl -(%ebp);movl %edx, -(%ebp);pushl -(%ebp);movl %ecx, -(%ebp);calll - <RtlFillMemory+>": 1,
                "movl %edx, -(%ebp);pushl -(%ebp);movl %ecx, -(%ebp);calll - <RtlFillMemory+>;movl -(%ebp), %eax": 1,
                "xorl (%esi), %edx;xorl %ecx, %ecx;andl $, %edx;xorl (%esi), %edx;shrl $, %eax": 1,
                "xorl (%esi), %edx;shrl $, %eax;orl $, %edx;leal -(%ebp), %eax;cmpl %eax, %edi": 1,
                "movl -(%ebp), %ecx;subl %edx, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx;sbbl -(%ebp), %ecx": 1,
                "je  <NtFreeVirtualMemory+>;addl $, -(%ebp);adcl $, %ecx;movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "movl %edx, -(%ebp);movl %eax, -(%ebp);jmp  <NtFreeVirtualMemory+>;movl (%edi), %eax;addl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %esi;sbbl %eax, (%ebx);testl %esi, %esi;je  <NtFreeVirtualMemory+>": 1,
                "sbbl %eax, (%ebx);testl %esi, %esi;je  <NtFreeVirtualMemory+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;addl %eax, (%ebx);leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "cmpl %eax, %esi;je  <NtFreeVirtualMemory+>;movl %esi, (%ebx);movl (%edi), %eax;movl %eax, (%ebx)": 1,
                "testb %al, %al;je  <NtFreeVirtualMemory+>;andl $, -(%ebp);movl (%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "pushl %eax;pushl (%ebp);calll - <KeStackAttachProcess>;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "je  <NtFreeVirtualMemory+>;movl (%ebp), %ecx;addl %ecx, %eax;cmpl %ecx, %eax;jb  <NtFreeVirtualMemory+>": 1,
                "cmpl %edi, %eax;jne  <NtFreeVirtualMemory+>;movl %esi, -(%ebp);pushl $;calll - <ExRaiseStatus>": 1,
                "calll - <KeStackAttachProcess>;movl (%ebp), %eax;cmpl %eax, -(%ebp);jne  <NtFreeVirtualMemory+>;cmpb $, (%ebp)": 2,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);leal -(%ebp), %eax": 4,
                "pushl %eax;calll - <NtFreeVirtualMemory+>;retl;movl -(%ebp), %esp;leal -(%ebp), %eax": 2,
                "pushl %eax;calll - <KeUnstackDetachProcess>;cmpl $, -(%ebp);je  <NtFreeVirtualMemory+>;pushl -(%ebp)": 1,
                "cmpl %esi, -(%ebp);jne  <NtFreeVirtualMemory+>;pushl -(%ebp);calll - <MmUnlockPages>;movl $, %eax": 1,
                "cmpl %eax, -(%ebp);je  <NtFreeVirtualMemory+>;cmpl %esi, -(%ebp);je  <NtFreeVirtualMemory+>;cmpl %esi, -(%ebp)": 1,
                "movl %ecx, (%eax);cmpl %esi, -(%ebp);jne  <NtFreeVirtualMemory+>;cmpl %esi, -(%ebp);jne  <NtFreeVirtualMemory+>": 1,
                "jmp - <NtFreeVirtualMemory+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);xorl %eax, %eax": 1,
                "movl $, %eax;movl %eax, %edi;cmpl %eax, (%ebp);ja  <NtFreeVirtualMemory+>;movl (%ebp), %edi": 1,
                "movl $, %esi;cmpl %esi, (%ebp);jbe  <NtFreeVirtualMemory+>;pushl $;pushl %edi": 1,
                "jne  <NtFreeVirtualMemory+>;shrl %edi;cmpl %esi, %edi;ja - <NtFreeVirtualMemory+>;leal -(%ebp), %eax": 1,
                "cmpl %esi, %edi;ja - <NtFreeVirtualMemory+>;leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "ja - <NtFreeVirtualMemory+>;leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %ecx;cmpl %ecx, -(%ebp);jne  <NtFreeVirtualMemory+>;cmpb $, (%ebp);je  <NtFreeVirtualMemory+>": 1,
                "cmpb $, (%ebp);je  <NtFreeVirtualMemory+>;movl $, -(%ebp);movl (%ebp), %eax;cmpl %esi, %eax": 1,
                "calll - <KeUnstackDetachProcess>;cmpl $, -(%ebp);je  <NtFreeVirtualMemory+>;pushl $;pushl -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <NtFreeVirtualMemory+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "jmp  <NtFreeVirtualMemory+>;movl (%ebp), %ecx;subl -(%ebp), %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "cmpl $, -(%ebp);jne  <NtFreeVirtualMemory+>;cmpl $, -(%ebp);jne  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx": 1,
                "cmpl $, (%ebp);jne  <NtFreeVirtualMemory+>;xorl %eax, %eax;jmp  <NtFreeVirtualMemory+>;pushl %ebx": 1,
                "cmpl %eax, %ecx;ja  <NtFreeVirtualMemory+>;movl (%ebp), %ebx;testl %ebx, %ebx;je  <NtFreeVirtualMemory+>": 2,
                "jmp  <NtFreeVirtualMemory+>;movl $, %eax;jmp  <NtFreeVirtualMemory+>;movl (%ebp), %ebx;xorl %eax, %eax": 2,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);cmpl %eax, %esi;je  <NtFreeVirtualMemory+>;pushl %eax": 2,
                "pushl %ecx;movl , %eax;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl $, %ecx;leal (%eax), %edx;lock": 1,
                "retl;calll  <MmMapUserAddressesToPage+>;leave;retl;int": 1,
                "testb $, (%eax);je  <NtFreeVirtualMemory+>;movl , %eax;movl (%eax), %eax;cmpl (%ebp), %eax": 1,
                "cmpl (%ebp), %eax;je  <NtFreeVirtualMemory+>;movl $, %eax;jmp  <NtFreeVirtualMemory+>;pushl %esi": 1,
                "jmp  <NtFreeVirtualMemory+>;pushl %esi;leal (%edi), %esi;decl (%esi);calll - <NtFreeVirtualMemory+>": 1,
                "movb $, (%edi);calll *;xorl %eax, %eax;popl %edi;popl %ebp": 1,
                "shrl $, %eax;subl , %eax;cmpl %ecx, %eax;jbe  <NtFreeVirtualMemory+>;movl %ecx, %eax": 1,
                "cmpl $, (%eax);jne  <NtFreeVirtualMemory+>;cmpl $, (%eax);je  <NtFreeVirtualMemory+>;movl (%eax), %ecx": 1,
                "int;int;movl , %eax;movl (%eax), %eax;pushl %esi": 1,
                "addl $, %eax;pushl %eax;calll  <ExfReleasePushLock+>;movl , %eax;movl , %ecx": 1,
                "movl (%eax), %ebx;movl $, %eax;shrl $, %ebx;andl %eax, %ebx;subl $, %ebx": 1,
                "calll - <RtlFillMemory+>;xorl %ecx, %ecx;xorl %edx, %edx;incl %ecx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);incl ;movl %edx, %eax;jmp  <NtFreeVirtualMemory+>": 1,
                "xaddl %eax, (%ecx);movl , %eax;movl (%eax), %ecx;subl , %ecx;movl (%eax), %eax": 1,
                "movl , %eax;movl (%eax), %ecx;subl , %ecx;movl (%eax), %eax;movl (%edi), %edx": 1,
                "movl $, %ebx;pushl %ebx;leal (,%eax,), %eax;pushl %eax;pushl $": 1,
                "calll - <RtlClearBits>;movl , %eax;shrl $, %eax;addl $, %eax;shrl $, %eax": 1,
                "je  <NtFreeVirtualMemory+>;pushl %eax;calll - <RtlClearAllBits>;movl , %eax;shrl $, %eax": 1,
                "andl %edx, %ecx;shrl $, %edi;shrl $, %esi;subl %eax, %ecx;andl $, %edi": 1,
                "subl %eax, %ecx;andl $, %edi;andl %edx, %esi;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "ja  <NtFreeVirtualMemory+>;leal (%ebp), %eax;pushl %eax;pushl $;pushl (%ebp)": 1,
                "pushl %eax;pushl $;pushl (%ebp);pushl %edi;calll - <MmIsNonPagedSystemAddressValid+>": 2,
                "jne  <NtFreeVirtualMemory+>;movl %esi, %edi;shrl $, %edi;andl $, %edi;subl $, %edi": 2,
                "shll $, %esi;jmp - <NtFreeVirtualMemory+>;movl %ebx, %eax;jmp  <NtFreeVirtualMemory+>;xorl %ebx, %ebx": 1,
                "shrl $, %esi;shrl $, %ecx;testl %eax, %eax;pushl %edi;movl $, %ebx": 1,
                "testl %eax, %eax;jne  <NtFreeVirtualMemory+>;movl , %edx;shrl $, %edx;incl %edx": 1,
                "jbe  <NtFreeVirtualMemory+>;movl %eax, %ecx;cmpl %eax, %esi;ja  <NtFreeVirtualMemory+>;subl %esi, %ecx": 1,
                "movl %esi, (%eax);cmpl %ebx, %edi;jg  <NtFreeVirtualMemory+>;movl %ebx, %esi;subl %edi, %esi": 1,
                "shrl $, %eax;xorl %edx, %edx;leal (%ecx,%eax,), %eax;movl %edi, %ecx;incl %edx": 1,
                "shll %cl, %edx;notl %edx;andl %edx, (%eax);incl %edi;cmpl %ebx, %edi": 1,
                "pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jae  <NtFreeVirtualMemory+>;pushl %edi": 1,
                "incl (%esi);pushl %ebx;movl $, %ebx;movl %edi, %edx;movl $, %ecx": 1,
                "testb $, %cl;je  <NtFreeVirtualMemory+>;orl $, (%eax);xorl %eax, %eax;popl %ebp": 1,
                "pushl %edi;movl (%ebp), %edi;leal (%edi), %ebx;movl %ebx, %ecx;movl %ebx, (%ebp)": 1,
                "testl %eax, %eax;je  <NtFreeVirtualMemory+>;movl (%eax), %ecx;testl %ecx, %ecx;je  <NtFreeVirtualMemory+>": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <NtFreeVirtualMemory+>;movl %ecx, (%ebx);calll - <ObfReferenceObject>": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;movl %esi, -(%ebp);je  <NtFreeVirtualMemory+>;leal (%esi), %eax": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%eax), %esi;xorl %ebx, %ebx": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %esi;je  <NtFreeVirtualMemory+>;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "addl $, %edi;incl %ebx;cmpl $, %ebx;jne  <NtFreeVirtualMemory+>;xorl %ebx, %ebx": 1,
                "leal (,%ebx,), %ecx;pushl %eax;movw %cx, -(%ebp);calll  <MmFreePagesFromMdl>;subl %ebx, (%esi)": 1,
                "subl %ebx, (%esi);addl %ebx, -(%ebp);movl -(%ebp), %ebx;movl , %eax;leal (%eax), %edi": 1,
                "jne - <NtFreeVirtualMemory+>;pushl (%edi);calll  <ExfReleasePushLock+>;popl %edi;popl %esi": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;leal (%eax,%ebx,), %eax;movl %eax, -(%ebp);movl (%ebp), %edi": 1,
                "orl , %ebx;je  <NtFreeVirtualMemory+>;cmpl $, %edi;jb  <NtFreeVirtualMemory+>;cmpl $, %edi": 2,
                "movl (%ebx), %ecx;movzbl %ds:-, %eax;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl (%ecx), %esi": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <NtFreeVirtualMemory+>": 7,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <NtFreeVirtualMemory+>": 1,
                "jne - <NtFreeVirtualMemory+>;movl $, -(%ebp);jmp  <NtFreeVirtualMemory+>;cmpl $, (%ebp);je  <NtFreeVirtualMemory+>": 1,
                "jmp  <NtFreeVirtualMemory+>;cmpl $, (%ebp);je  <NtFreeVirtualMemory+>;movl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "shrl $, %edx;movl %eax, %ecx;andl $, %ecx;movl (%esi,%edx,), %edx;shrl %cl, %edx": 1,
                "movl %eax, -(%ebp);pushl %ebx;pushl %esi;movl -(%ebp), %esi;movl -(%ebp), %edx": 2,
                "pushl %esi;movl -(%ebp), %esi;movl -(%ebp), %edx;movl (%edx), %ebx;movl (%edx), %ecx": 3,
                "je  <NtFreeVirtualMemory+>;movl (%ebp), %ecx;movl %ecx, -(%ebp,%eax,);leal -(%ebp), %eax;movl -(%ebp), %ecx": 2,
                "cmpl -(%ebp), %ebx;jbe  <NtFreeVirtualMemory+>;movl -(%ebp), %eax;subl $, %eax;movl (%eax), %ecx": 1,
                "je  <NtFreeVirtualMemory+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 2,
                "movl %eax, -(%ebp);pushl %ebx;pushl %esi;movl -(%ebp), %esi;movl $, %edx": 2,
                "pushl %ebx;pushl %esi;movl -(%ebp), %esi;movl $, %edx;movl (%edx), %ebx": 2,
                "addl $, %edi;movl %edi, -(%ebp);cmpl -(%ebp), %edi;jb - <NtFreeVirtualMemory+>;movl -(%ebp), %edi": 1,
                "pushl ;pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl $, %eax;movl -(%ebp), %ecx;movl %ecx, %fs:": 1,
                "movl -(%ebp), %ecx;movl %ecx, %fs:;popl %edi;popl %esi;popl %ebx": 3,
                "jbe  <NtFreeVirtualMemory+>;pushl $;pushl %ebx;pushl $;calll - <ExAllocatePoolWithTag>": 2,
                "pushl %ebx;pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, -(%ebp);testl %eax, %eax": 2,
                "orl $-, -(%ebp);cmpl $, (%ebp);jne  <NtFreeVirtualMemory+>;xorl %eax, %eax;jmp  <NtFreeVirtualMemory+>": 1,
                "testl %eax, %eax;jne  <NtFreeVirtualMemory+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);testl %ebx, %ebx;je  <NtFreeVirtualMemory+>;testb $, (%ebp);je  <NtFreeVirtualMemory+>": 1,
                "movl %ecx, %edi;movl , %edx;orl %edx, %edi;je  <NtFreeVirtualMemory+>;movl -(%ebp), %edi": 1,
                "andl %esi, %edi;leal -(%edi), %esi;cmpl $, %esi;jb  <NtFreeVirtualMemory+>;cmpl $, %esi": 1,
                "movl (%edi), %esi;andl $-, %esi;movl %esi, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp)": 2,
                "movl -(%ebp), %eax;jmp  <NtFreeVirtualMemory+>;movl %edx, %ecx;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "orl %esi, %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);jmp  <NtFreeVirtualMemory+>;movl (%edi), %esi": 1,
                "movl $, -(%ebp);jmp  <NtFreeVirtualMemory+>;subl $, %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "imull $, %eax, %eax;movl , %ecx;leal (%eax,%ecx), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "movl %eax, -(%ebp,%ecx,);incl -(%ebp);movl -(%ebp), %eax;testl %eax, %eax;je  <NtFreeVirtualMemory+>": 1,
                "movl -(%ebp), %ecx;movl %eax, -(%ebp,%ecx,);incl -(%ebp);addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl ;pushl ;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "movl -(%ebp), %esp;movl %eax, -(%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <NtFreeVirtualMemory+>;movl %edi, (%eax);movl (%ecx), %eax": 2,
                "jl  <NtFreeVirtualMemory+>;pushl -(%ebp);pushl ;pushl ;calll  <SeSinglePrivilegeCheck>": 1,
                "jne  <NtFreeVirtualMemory+>;cmpl $-, (%ebp);je  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "testb $, (%ebx);je  <NtFreeVirtualMemory+>;movl $, %edi;jmp  <NtFreeVirtualMemory+>;movl (%ebx), %ebx": 1,
                "xorl %edi, %edi;movl (%ebx), %eax;movl %edi, -(%ebp);movl %edi, -(%ebp);leal -(%eax), %esi": 1,
                "pushl %eax;pushl %eax;pushl -(%ebp);pushl %esi;pushl %eax": 1,
                "jne  <NtFreeVirtualMemory+>;cmpl %edi, -(%ebp);jne  <NtFreeVirtualMemory+>;cmpl %edi, -(%ebp);je  <NtFreeVirtualMemory+>": 1,
                "leal (%eax), %edi;movl (%eax), %edx;shrl $, %edx;movl %edx, -(%ebp);addl %edx, -(%ebp)": 1,
                "movl (%eax), %edx;shrl $, %edx;movl %edx, -(%ebp);addl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "xorl %esi, %esi;incl %esi;cmpl %esi, -(%ebp);jne  <NtFreeVirtualMemory+>;leal -(%ebp), %eax": 4,
                "incl -(%ebp);jmp - <NtFreeVirtualMemory+>;movl (%ecx), %ecx;jmp - <NtFreeVirtualMemory+>;orl $-, -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;movl %esi, %eax;testl %esi, %esi;jne - <NtFreeVirtualMemory+>;cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx;addl $, %ecx;calll *": 2,
                "movl %eax, (%ecx);movl %eax, -(%ebp);movl %edi, (%ecx);orl $-, -(%ebp);jmp  <NtFreeVirtualMemory+>": 1,
                "ja  <NtFreeVirtualMemory+>;movl %ecx, -(%ebp);jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %eax;shll $, %eax": 1,
                "movl -(%ebp), %eax;shll $, %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);movl %eax, %ecx;shll $, %ecx;movl %edi, -(%ebp);cmpb $, -(%ebp)": 1,
                "xorl %esi, %esi;cmpl %esi, -(%ebp);jne  <NtFreeVirtualMemory+>;cmpl $-, (%ebp);jne  <NtFreeVirtualMemory+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtFreeVirtualMemory+>;pushl %esi": 1,
                "cmpl %esi, %eax;jl  <NtFreeVirtualMemory+>;movl $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;cmpl %eax, (%ecx);je  <NtFreeVirtualMemory+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %eax, -(%ebp);pushl (%edi);calll  <ExfReleasePushLock+>;pushl $;pushl $": 1,
                "pushl $;pushl $;calll - <KeFlushEntireTb>;cmpl -(%ebp), %esi;jae  <NtFreeVirtualMemory+>": 1,
                "jae  <NtFreeVirtualMemory+>;movl (%esi), %eax;movl -(%ebp), %ecx;cmpl (%ecx), %eax;jae  <NtFreeVirtualMemory+>": 1,
                "incl -(%ebp);xorl %edx, %edx;incl %edx;shll %cl, %edx;notl %edx": 1,
                "je  <NtFreeVirtualMemory+>;decl %ecx;movl %ecx, (%eax);movl (%eax), %ecx;andl $, (%eax)": 1,
                "shll $, %esi;movl %esi, -(%ebp,%edx,);leal -(%ebp), %edx;movl -(%ebp), %esi;movl %edx, -(%ebp,%esi,)": 1,
                "movl -(%ebp), %esi;movl %edx, -(%ebp,%esi,);incl -(%ebp);movl , %edx;movl %edx, (%ecx)": 1,
                "movl , %edx;movl %edx, (%ecx);orl $, (%eax);addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "shll $, %eax;addl %eax, (%ebp);xorl %edi, %edi;jmp - <NtFreeVirtualMemory+>;movl $, -(%ebp)": 1,
                "addl %eax, (%ebp);xorl %edi, %edi;jmp - <NtFreeVirtualMemory+>;movl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "calll *;leal -(%ebp), %eax;cmpl %eax, %ebx;je  <NtFreeVirtualMemory+>;pushl $": 1,
                "pushl %eax;calll - <KeUnstackDetachProcess>;movl $, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "int;int;int;calll *;xorl %eax, %eax": 1,
                "xorl %eax, %eax;incl %eax;cmpl $, (%ecx);jne  <NtFreeVirtualMemory+>;pushl %ebx": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);orl $-, -(%ebp);jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <NtFreeVirtualMemory+>;retl;movl -(%ebp), %esp": 1,
                "jne - <NtFreeVirtualMemory+>;cmpl %ebx, -(%ebp);je  <NtFreeVirtualMemory+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl , %ecx;cmpl %ecx, %edx;jb  <NtFreeVirtualMemory+>;movl %esi, (%ecx);movl (%edx), %ecx": 1,
                "movl %esi, -(%ebp);testl %eax, %eax;jl  <NtFreeVirtualMemory+>;movl (%ebp), %eax;andl $, %eax": 1,
                "movl $, %eax;andl %eax, %edi;andl %eax, %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl (%eax), %eax;shrdl $, %eax, %edx;shrl $, %eax;movl %eax, -(%ebp);movl %edx, %eax": 1,
                "pushl (%eax);movl , %edx;calll - <MmTrimAllSystemPagableMemory+>;movl , %ecx;cmpl (%ecx), %eax": 1,
                "je  <NtFreeVirtualMemory+>;movl $, -(%ebp);cmpl $, -(%ebp);je  <NtFreeVirtualMemory+>;testb $, (%ecx,%eax,)": 1,
                "cmpl %edi, %eax;ja  <NtFreeVirtualMemory+>;movl (%eax), %ecx;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp - <NtFreeVirtualMemory+>;orl $-, -(%ebp);movl -(%ebp), %eax;andb $-, (%eax)": 1,
                "movl -(%ebp), %eax;andb $-, (%eax);movl -(%ebp), %esi;movl %esi, %ebx;shrl $, %ebx": 1,
                "ja  <NtFreeVirtualMemory+>;movl %esi, %eax;shrl $, %eax;andl $, %eax;subl $, %eax": 1,
                "movb %cl, (%eax);leal (%eax), %ecx;calll - <ExReleaseFastMutexUnsafe>;movl $, -(%ebp);movl (%esi), %eax": 1,
                "movl (%ecx), %edx;movl %edx, -(%ebp);cmpl %edx, %eax;je  <NtFreeVirtualMemory+>;pushl $": 1,
                "addl $, %ebx;addl $, %esi;movl %esi, -(%ebp);jmp - <NtFreeVirtualMemory+>;movl -(%ebp), %eax": 1,
                "pushl %eax;calll - <KeUnstackDetachProcess>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "jne  <NtFreeVirtualMemory+>;leal -(%ebp), %eax;pushl %eax;calll - <KeUnstackDetachProcess>;movl %esi, %ecx": 2,
                "jne  <NtFreeVirtualMemory+>;testb $, (%ebp);je  <NtFreeVirtualMemory+>;movl %fs:, %eax;movb (%eax), %al": 1,
                "movl , %eax;cmpl %eax, %edi;ja  <NtFreeVirtualMemory+>;subl %edi, %eax;cmpl %esi, %eax": 1,
                "cmpl %eax, %edi;ja  <NtFreeVirtualMemory+>;subl %edi, %eax;cmpl %esi, %eax;jb  <NtFreeVirtualMemory+>": 1,
                "pushl $;pushl (%ebp);calll  <ObReferenceObjectByHandle>;movl -(%ebp), %ebx;movl %eax, -(%ebp)": 1,
                "pushl %ebx;calll - <KeStackAttachProcess>;movl $, -(%ebp);jmp  <NtFreeVirtualMemory+>;andl $, -(%ebp)": 2,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;movl $, %edi;andl %edi, %esi;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;testb $, (%ebp);je  <NtFreeVirtualMemory+>;movl , %ecx": 1,
                "movl -(%ebp), %ecx;subl %edx, %ecx;addl $, %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "leal (%ecx), %edx;movl (%edx), %ecx;cmpl -(%ecx), %esi;ja  <NtFreeVirtualMemory+>;cmpl -(%ecx), %edi": 1,
                "cmpb $, (%ebx);jmp  <NtFreeVirtualMemory+>;cmpb $, (%ebx);jl - <NtFreeVirtualMemory+>;movl (%ecx), %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;xorl %ebx, %ebx;orl %ebx, %ecx;pushl %edi": 1,
                "xorl %ebx, %ebx;orl %ebx, %ecx;pushl %edi;movl , %edi;jne  <NtFreeVirtualMemory+>": 1,
                "movl (%esi), %edx;movb $, %cl;calll - <_aullshr>;pushl %eax;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movl , %eax;andl $, %ecx;imull $, %ecx, %ecx;movl (%ecx,%eax), %edx;movl (%ecx,%eax), %eax": 1,
                "shrdl $, %eax, %edx;shrl $, %eax;shrl $, %edi;andl $, %edx;movl (,%edx,), %eax": 1,
                "cmpl $, -(%ebp);jne  <NtFreeVirtualMemory+>;testl %ebx, %ebx;jne  <NtFreeVirtualMemory+>;shrdl $, %edx, %eax": 1,
                "movl %eax, (%ebp);movl (%ebp), %ecx;calll - <MmIsAddressValid+>;movl %eax, -(%ebp);cmpl $-, %eax": 1,
                "pushl %esi;pushl -(%ebp);calll - <MmIsNonPagedSystemAddressValid+>;movl (%edi), %eax;orl (%edi), %eax": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl %eax, -(%ebp);movl %edx, -(%ebp);pushl $;pushl %esi": 1,
                "pushl -(%ebp);calll - <MmIsNonPagedSystemAddressValid+>;cmpl %ebx, -(%ebp);jne - <NtFreeVirtualMemory+>;xorl %ebx, %ebx": 1,
                "subl $, %ebx;andl $, -(%ebp);jmp  <NtFreeVirtualMemory+>;addl $, %ebx;movl %edi, %eax": 1,
                "movl %ebx, %ecx;shll $, %ecx;movl %ecx, %edi;cmpl -(%ebp), %edi;ja  <NtFreeVirtualMemory+>": 1,
                "shrdl $, %edx, %eax;shrl $, %edx;andl $, %eax;imull $, %eax, %eax;addl , %eax": 2,
                "jmp  <NtFreeVirtualMemory+>;movl (%esi), %eax;cmpl %ebx, %eax;je  <NtFreeVirtualMemory+>;movl (%esi), %ecx": 1,
                "movl (%edi), %ecx;movl %ecx, -(%ebp);movl %ebx, %eax;orl %ecx, %eax;jne  <NtFreeVirtualMemory+>": 1,
                "shrl $, %eax;andl $, %eax;movl , %ecx;leal (%ecx,%eax,), %eax;incw (%eax)": 1,
                "shldl $, %ecx, %ebx;shll $, %ecx;andl $, %eax;orl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "jne  <NtFreeVirtualMemory+>;testb $, (%esi);je  <NtFreeVirtualMemory+>;movl %edi, %ecx;shll $, %ecx": 1,
                "subl %edx, %ecx;movl %ecx, %edx;movl (%eax), %ecx;addl %ecx, %edx;cmpl (%eax), %edx": 1,
                "movl %ecx, %edx;movl (%eax), %ecx;addl %ecx, %edx;cmpl (%eax), %edx;ja  <NtFreeVirtualMemory+>": 1,
                "ja  <NtFreeVirtualMemory+>;movl -(%ebp), %eax;shrl $, %eax;subl -(%ebp), %eax;leal (%ecx,%eax,), %eax": 1,
                "shrl $, %edx;movl (%ebp), %ecx;calll - <MmTrimAllSystemPagableMemory+>;cmpl %eax, (%esi);je  <NtFreeVirtualMemory+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;cmpl %eax, (%esi);je  <NtFreeVirtualMemory+>;movl %edi, %edx;movl -(%ebp), %ecx": 1,
                "andl $, %ebx;movl -(%ebp), %edx;andl $, %edx;orl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "notl %ebx;andl %edx, %eax;movl %eax, -(%ebp);andl %ebx, %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %eax;pushl %esi;pushl %edi;calll - <MmIsDriverVerifying+>;movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);xorl %ecx, %ecx;cmpl $-, -(%ebp);jne  <NtFreeVirtualMemory+>": 1,
                "cmpl $-, -(%ebp);jne  <NtFreeVirtualMemory+>;testl %ecx, %ecx;je  <NtFreeVirtualMemory+>;movl (%ebp), %ecx": 1,
                "subl -(%ebp), %eax;movl -(%ebp), %ecx;leal (%ecx,%eax,), %eax;jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %edx": 1,
                "calll - <_aullshr>;cmpl -(%ebp), %eax;je  <NtFreeVirtualMemory+>;movl $, -(%ebp);andl $, %ebx": 1,
                "orl %eax, %ebx;jne  <NtFreeVirtualMemory+>;movb %al, (%esi);leal (%esi), %ecx;calll - <ExReleaseFastMutexUnsafe>": 1,
                "incl %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi;leal (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>": 1,
                "jne  <NtFreeVirtualMemory+>;movl $, %eax;andl %eax, %ebx;cmpl %eax, %ebx;jne  <NtFreeVirtualMemory+>": 1,
                "orl %edx, %eax;orl %ebx, %ecx;movl %eax, (%edi);movl %ecx, (%edi);addl $, %edi": 1,
                "movl %eax, %edx;subl %ebx, %edx;xorl %eax, %edx;andl $, %edx;xorl %eax, %edx": 1,
                "movl $, %edx;andl %edx, %esi;subl $, %esi;movl %esi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %eax;shrl $, %eax;andl %edx, %eax;subl $, %eax": 1,
                "movl %eax, -(%ebp);cmpl -(%ebp), %esi;ja  <NtFreeVirtualMemory+>;testw $, %si;jne  <NtFreeVirtualMemory+>": 1,
                "calll - <MmIsNonPagedSystemAddressValid+>;movl (%esi), %eax;movl (%esi), %ecx;movl %eax, %edx;orl %ecx, %edx": 1,
                "movl %eax, %edx;orl %ecx, %edx;jne  <NtFreeVirtualMemory+>;movl %esi, %edx;shrl $, %edx": 1,
                "xorl %edx, %edx;shldl $, %ecx, %edx;shll $, %ecx;movl (%eax), %ebx;andl $, %ebx": 1,
                "testl %ecx, %ecx;jne  <NtFreeVirtualMemory+>;movl %esi, %ebx;shll $, %ebx;movl %ebx, -(%ebp)": 1,
                "jne  <NtFreeVirtualMemory+>;movl %esi, %ebx;shll $, %ebx;movl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "shll $, %ebx;movl %ebx, -(%ebp);movl $, -(%ebp);andl $, %eax;xorl %ecx, %ecx": 1,
                "movl %ebx, -(%ebp);leal (%edi), %ecx;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%edi);pushl $": 1,
                "leal (%edi), %ecx;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%edi);pushl $;pushl %edi": 2,
                "pushl %esi;calll - <NtFreeVirtualMemory+>;cmpl %ebx, %eax;jne  <NtFreeVirtualMemory+>;andl $, -(%ebp)": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl %ecx, -(%ebp);jmp - <NtFreeVirtualMemory+>;movl -(%ebp), %esi": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);leal (%edi), %ecx;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%edi)": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "calll - <MmIsAddressValid+>;cmpl $-, %eax;jne  <NtFreeVirtualMemory+>;movl $, %eax;jmp  <NtFreeVirtualMemory+>": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);movb (%eax), %al;movb %al, -(%ebp);testb %al, %al": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <NtFreeVirtualMemory+>;movl %ebx, -(%ebp);movl (%ebp), %edi": 1,
                "cmpl %eax, %edi;jb  <NtFreeVirtualMemory+>;movl %ebx, (%eax);movl (%edi), %eax;movl %eax, (%edi)": 1,
                "cmpl %eax, %esi;jb  <NtFreeVirtualMemory+>;movl %ebx, (%eax);movl (%esi), %eax;movl %eax, (%esi)": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <NtFreeVirtualMemory+>;movl (%ebp), %ebx;movl (%ebp), %edi": 1,
                "movl (%ebp), %esi;testl %esi, %esi;je  <NtFreeVirtualMemory+>;cmpl $, %esi;je  <NtFreeVirtualMemory+>": 1,
                "andl %esi, (%edi);testb $, (%eax);je  <NtFreeVirtualMemory+>;movl $, (%edi);testb $, (%eax)": 1,
                "orb $, (%edi);testb $-, (%eax);je  <NtFreeVirtualMemory+>;orb $-, (%edi);testb $, (%eax)": 1,
                "subl $, %esp;movl (%ebp), %ecx;andl $, -(%ebp);pushl %ebx;pushl %esi": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi;movl %edi, %esi": 2,
                "calll - <NtFreeVirtualMemory+>;movl (%esi), %ecx;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl %ecx, %eax;andl $, %eax;xorl %edx, %edx": 1,
                "shll $, %edx;subl %edx, %ecx;addl %ebx, %ecx;cmpl (%esi), %ecx;ja  <NtFreeVirtualMemory+>": 1,
                "shrl $, %edi;subl %eax, %edi;movl (%esi), %eax;leal (%eax,%edi,), %eax;jmp  <NtFreeVirtualMemory+>": 1,
                "movl %edi, %edx;shrl $, %edx;calll - <MmTrimAllSystemPagableMemory+>;xorl %esi, %esi;cmpl %esi, %eax": 1,
                "je  <NtFreeVirtualMemory+>;movl $, -(%ebp);shrl $, %eax;andl $, %eax;movl (,%eax,), %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;movl %esi, -(%ebp);xorl %edx, %edx": 1,
                "movl %eax, (%esi);movl %ecx, (%esi);movl %edi, (%esi);movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "pushl $;xorl %eax, %eax;pushl %eax;pushl %eax;pushl $": 2,
                "calll - <KeStackAttachProcess>;movl $, -(%ebp);jmp  <NtFreeVirtualMemory+>;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "movl (%ebx), %ebx;movl %ebx, (%edi);leal (,%ebx,), %eax;cmpl (%ebp), %eax;jbe  <NtFreeVirtualMemory+>": 1,
                "testb $, (%eax);jne  <NtFreeVirtualMemory+>;andl $, %edx;movl %edx, (%ecx);movl (%eax), %edi": 1,
                "shll $, %edi;xorl %edx, %edi;andl $, %edi;xorl %edx, %edi;movl %edi, (%ecx)": 1,
                "jmp  <NtFreeVirtualMemory+>;orl $, %edx;movl %edx, (%ecx);movl (%ebx), %edx;shrl $, %edx": 1,
                "pushl $;calll - <wctomb+>;xorl %esi, %esi;movl %esi, -(%ebp);movl $, -(%ebp)": 1,
                "pushl %edi;calll  <ProbeForWrite>;movl (%ebp), %ecx;cmpl %esi, %ecx;je  <NtFreeVirtualMemory+>": 1,
                "jmp  <NtFreeVirtualMemory+>;movl (%ebp), %edi;movl (%ebp), %eax;movl , %ecx;cmpl %ecx, %eax": 1,
                "movl (%ebp), %eax;movl , %ecx;cmpl %ecx, %eax;jbe  <NtFreeVirtualMemory+>;movl $, %eax": 1,
                "jbe  <NtFreeVirtualMemory+>;movl $, %eax;jmp  <NtFreeVirtualMemory+>;leal -(%ecx), %edx;movl $, %esi": 1,
                "andl %ebx, %edx;cmpl %esi, %edx;je  <NtFreeVirtualMemory+>;cmpl $-, (%ebp);jne  <NtFreeVirtualMemory+>": 1,
                "movl -(%ebp), %esi;movl %esi, -(%ebp);testl %eax, %eax;jl  <NtFreeVirtualMemory+>;cmpl $, (%ebp)": 1,
                "movl %ecx, (%eax);orl $-, -(%ebp);xorl %eax, %eax;jmp  <NtFreeVirtualMemory+>;xorl %eax, %eax": 1,
                "testl %esi, %esi;je  <NtFreeVirtualMemory+>;movl (%esi), %eax;cmpl %eax, %ecx;jb  <NtFreeVirtualMemory+>": 1,
                "testl %esi, %esi;jne  <NtFreeVirtualMemory+>;andl %ebx, %edx;movl , %esi;subl %edx, %esi": 1,
                "jne  <NtFreeVirtualMemory+>;andl %ebx, %edx;movl , %esi;subl %edx, %esi;subl $, %esi": 1,
                "subl %edx, %esi;subl $, %esi;jmp  <NtFreeVirtualMemory+>;movl (%esi), %eax;cmpl %ecx, %eax": 1,
                "calll - <ObfDereferenceObject>;xorl %eax, %eax;cmpl %eax, (%ebp);jne  <NtFreeVirtualMemory+>;movl %eax, -(%ebp)": 1,
                "shrl $, %ecx;andl $, %ecx;movl (,%ecx,), %ecx;movl %ecx, -(%ebp);testl %eax, %eax": 1,
                "movl %esi, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;je - <NtFreeVirtualMemory+>;movl $, (%eax)": 1,
                "leal (%ebx), %ecx;calll - <ExAcquireFastMutexUnsafe>;movb $-, (%ebx);leal -(%ebp), %eax;pushl %eax": 1,
                "incl %esi;shll $, %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;subl -(%ebp), %eax": 1,
                "pushl $;popl %ecx;leal -(%ebp), %esi;rep  movsl (%esi), %es:(%edi);movl $, -(%ebp)": 1,
                "je  <NtFreeVirtualMemory+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <NtFreeVirtualMemory+>": 1,
                "movl $, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %eax": 1,
                "pushl $;popl %edx;movl %edx, (%edi);movl %eax, %ecx;andl %ebx, %ecx": 1,
                "cmpl %edi, %edx;jne  <NtFreeVirtualMemory+>;movl %ecx, (%ebx);andl $, (%ecx);jmp  <NtFreeVirtualMemory+>": 2,
                "jmp - <NtFreeVirtualMemory+>;cmpl %esi, %eax;jne  <NtFreeVirtualMemory+>;cmpl (%edx), %ecx;jne  <NtFreeVirtualMemory+>": 1,
                "testl %esi, %esi;je  <NtFreeVirtualMemory+>;movl %ecx, (%esi);movl (%eax), %esi;movl %esi, (%edx)": 2,
                "jne - <NtFreeVirtualMemory+>;jmp  <NtFreeVirtualMemory+>;movl %eax, (%ebx);andl $, (%eax);cmpl (%ecx), %eax": 1,
                "movl (%ecx), %ecx;testl %ecx, %ecx;jne - <NtFreeVirtualMemory+>;retl;int": 1,
                "testl %ecx, %ecx;jne - <NtFreeVirtualMemory+>;retl;int;int": 3,
                "int;movl (%ecx), %eax;testl %eax, %eax;jne  <NtFreeVirtualMemory+>;jmp  <NtFreeVirtualMemory+>": 1,
                "testl %eax, %eax;jne  <NtFreeVirtualMemory+>;jmp  <NtFreeVirtualMemory+>;cmpl %ecx, (%eax);je  <NtFreeVirtualMemory+>": 1,
                "retl;movl %ecx, %eax;movl (%eax), %ecx;testl %ecx, %ecx;jne - <NtFreeVirtualMemory+>": 2,
                "jae  <NtFreeVirtualMemory+>;movl (%esi), %eax;testl %eax, %eax;je  <NtFreeVirtualMemory+>;movl %eax, %esi": 1,
                "movl (%ebp), %ecx;cmpl (%eax), %ecx;jbe  <NtFreeVirtualMemory+>;movl (%eax), %eax;jmp  <NtFreeVirtualMemory+>": 1,
                "leal -(%eax), %esi;notl %esi;incl %edx;andl %esi, %edx;movl %esi, (%ebp)": 1,
                "cmpl %ecx, %edi;jae  <NtFreeVirtualMemory+>;subl %edi, %ecx;cmpl %ecx, (%ebp);jae  <NtFreeVirtualMemory+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;shrl $, %eax;cmpl %ebx, %eax;ja  <NtFreeVirtualMemory+>": 1,
                "movl (%ebp), %eax;shrl $, %eax;cmpl %ebx, %eax;ja  <NtFreeVirtualMemory+>;cmpl %ecx, %edi": 1,
                "jmp - <NtFreeVirtualMemory+>;movl (%ebp), %eax;jmp - <NtFreeVirtualMemory+>;movl (%esi), %eax;shll $, %eax": 1,
                "movl (%ebp), %eax;jmp - <NtFreeVirtualMemory+>;movl (%esi), %eax;shll $, %eax;subl (%ebp), %eax": 1,
                "int;int;pushl $;pushl $;calll - <KiDispatchInterrupt+>": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);pushl $;pushl %edi": 1,
                "xaddl %eax, (%ecx);pushl $;pushl %edi;pushl %edi;pushl %edi": 1,
                "cmpl %ecx, (%ebp);movl %eax, (%ebx);movl (%ebp), %eax;movl %ecx, (%ebx);movl %eax, (%ebx)": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;jne  <NtFreeVirtualMemory+>;pushl %eax": 1,
                "jne  <NtFreeVirtualMemory+>;pushl %eax;pushl %ebx;calll - <ExFreePoolWithTag>;incl ": 1,
                "calll - <ExFreePoolWithTag>;incl ;movl $, %eax;jmp  <NtFreeVirtualMemory+>;movzwl (%esi), %ecx": 1,
                "jmp  <NtFreeVirtualMemory+>;movzwl (%esi), %ecx;movl (%esi), %esi;movl %ecx, %edx;shrl $, %ecx": 1,
                "movw %ax, (%ebx);movw (%ecx), %ax;movw %ax, (%ebx);movl , %eax;movl $, %ecx": 1,
                "cmpl (%ebx), %edx;ja  <NtFreeVirtualMemory+>;movl (%eax), %eax;movl %edx, %esi;cmpl %ecx, %eax": 1,
                "movl (%eax), %esi;testb $, (%esi);movl %ecx, -(%ebp);movl %esi, -(%ebp);leal (%esi), %eax": 1,
                "movb (%ebp), %cl;calll *;movl $, %ebx;jmp  <NtFreeVirtualMemory+>;movl (%ebp), %eax": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;cmpl $, %eax;jne  <NtFreeVirtualMemory+>;movl (%ebp), %eax;pushl $": 1,
                "pushl $;pushl (%eax);calll - <MmResetDriverPaging+>;pushl -(%ebp);pushl %esi": 1,
                "movl %eax, %ebx;movl , %eax;andl $, (%eax);movl , %ecx;addl $, %ecx": 1,
                "addl $, %ecx;calll - <ExReleaseResourceLite>;movb (%ebp), %cl;calll *;testl %ebx, %ebx": 1,
                "movl -(%ebp), %ecx;decl %edi;movl %edi, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax)": 1,
                "movb %al, %bl;movl , %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "cmpl (%ebp), %edx;je  <NtFreeVirtualMemory+>;movl (%esi), %esi;cmpl %ecx, %esi;jne - <NtFreeVirtualMemory+>": 1,
                "popl %ebx;popl %ebp;retl $;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "movl %ecx, (%eax);movl , %eax;andl $, (%eax);movl , %ecx;addl $, %ecx": 1,
                "je  <NtFreeVirtualMemory+>;pushl $;leal (%edi), %eax;pushl %eax;pushl (%ebp)": 1,
                "cmpl %edx, %ecx;jb  <NtFreeVirtualMemory+>;cmpl %eax, %ecx;jae  <NtFreeVirtualMemory+>;addl %ebx, %ecx": 1,
                "cmpl %ecx, %esi;ja  <NtFreeVirtualMemory+>;movl %ecx, %esi;jmp  <NtFreeVirtualMemory+>;leal (%esi,%ebx), %ecx": 1,
                "movl %ecx, %esi;jmp  <NtFreeVirtualMemory+>;leal (%esi,%ebx), %ecx;cmpl %eax, %ecx;jbe  <NtFreeVirtualMemory+>": 1,
                "testl %eax, %esi;je  <NtFreeVirtualMemory+>;movl (%ebp), %eax;leal -(%esi,%eax), %esi;andl -(%ebp), %esi": 1,
                "leal -(%esi,%eax), %esi;andl -(%ebp), %esi;movl (%edi), %edi;cmpl $, %edi;jne - <NtFreeVirtualMemory+>": 1,
                "andl -(%ebp), %esi;movl (%edi), %edi;cmpl $, %edi;jne - <NtFreeVirtualMemory+>;xorl %eax, %eax": 1,
                "movl (%edi), %edi;cmpl $, %edi;jne - <NtFreeVirtualMemory+>;xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "jne  <NtFreeVirtualMemory+>;movl (%ebp), %eax;movl $, (%eax);jmp  <NtFreeVirtualMemory+>;testl %eax, %eax": 1,
                "movl (%ebp), %eax;movl $, (%eax);jmp  <NtFreeVirtualMemory+>;testl %eax, %eax;jl  <NtFreeVirtualMemory+>": 1,
                "pushl (%ebp);pushl -(%ebp);pushl %ebx;pushl %esi;calll - <NtFreeVirtualMemory+>": 1,
                "calll - <NtFreeVirtualMemory+>;movl %eax, %edi;testl %edi, %edi;jge  <NtFreeVirtualMemory+>;pushl %esi": 1,
                "jbe  <NtFreeVirtualMemory+>;movl %edx, (%ebp);leal (%esi), %edi;movl -(%edi), %edx;movl (%esi), %eax": 1,
                "leal (%esi), %edi;movl -(%edi), %edx;movl (%esi), %eax;cmpl %eax, %edx;ja  <NtFreeVirtualMemory+>": 1,
                "cmpl %eax, %edx;ja  <NtFreeVirtualMemory+>;movl -(%edi), %ecx;cmpl %eax, %ecx;ja  <NtFreeVirtualMemory+>": 1,
                "ja  <NtFreeVirtualMemory+>;movl (%edi), %edx;cmpl %eax, %edx;ja  <NtFreeVirtualMemory+>;addl %ecx, %edx": 1,
                "addl %ecx, %edx;cmpl %eax, %edx;ja  <NtFreeVirtualMemory+>;movl (%edi), %ebx;cmpl %eax, %ebx": 1,
                "movl (%edi), %ebx;cmpl %eax, %ebx;ja  <NtFreeVirtualMemory+>;movl (%edi), %edx;cmpl %eax, %edx": 1,
                "xorl $, (%esi);pushl %esi;pushl $;calll - <KeRemoveQueueDpc+>;movl (%esi), %eax": 1,
                "movl %ecx, (%eax);movl (%esi), %eax;testl %eax, %eax;je  <NtFreeVirtualMemory+>;pushl %eax": 1,
                "calll - <MmResetDriverPaging+>;pushl %esi;calll  <RtlTimeToElapsedTimeFields+>;testl %edi, %edi;jne - <NtFreeVirtualMemory+>": 1,
                "calll  <RtlTimeToElapsedTimeFields+>;movl %eax, %edi;testl %edi, %edi;jne  <NtFreeVirtualMemory+>;movl $, %eax": 1,
                "cmpl , %eax;jb  <NtFreeVirtualMemory+>;pushl %esi;pushl (%ebp);calll  <RtlTimeToElapsedTimeFields+>": 1,
                "movl $, %esi;jmp  <NtFreeVirtualMemory+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "testl %esi, %esi;jl - <NtFreeVirtualMemory+>;movl -(%ebp), %esi;xorl %edi, %edi;incl %edi": 1,
                "addl %eax, %ecx;pushl %ebx;movl %ecx, -(%ebp);movw (%eax), %cx;movl (%eax), %eax": 1,
                "pushl %edi;pushl $;movl %eax, %esi;decl (%esi);movl $, %ebx": 1,
                "pushl %ebx;calll - <KeReleaseMutant>;incl (%esi);jne  <NtFreeVirtualMemory+>;leal (%esi), %eax": 1,
                "movb $, %cl;movb $, (%esi);calll *;movl -(%ebp), %eax;popl %edi": 3,
                "xaddl %eax, (%ecx);jmp  <NtFreeVirtualMemory+>;shrl $, %esi;andl $, %esi;movl -(%esi), %ecx": 1,
                "orl $-, -(%ebp);pushl %ebx;pushl %esi;pushl %edi;xorl %edi, %edi": 3,
                "movl $, -(%ebp);calll - <KeStackAttachProcess>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl %eax;pushl (%ebp);calll - <MmTrimAllSystemPagableMemory+>;movl , %esi;leal (%ebx), %ecx": 1,
                "cmpl %ecx, %eax;jne - <NtFreeVirtualMemory+>;testb $, (%ebx);je  <NtFreeVirtualMemory+>;movl $, %esi": 1,
                "cmpl %edi, %esi;movl %esi, -(%ebp);jne  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx;movl %edi, (%ebx)": 1,
                "movl %edi, (%ebx);calll *;movl $, (%ebp);jmp  <NtFreeVirtualMemory+>;movl (%ebx), %ecx": 1,
                "movl %edx, (%eax);movl -(%ebp), %eax;addl $, %edx;movl %edx, (%ebp);xorl %edi, %edi": 1,
                "calll - <PsChargeProcessNonPagedPoolQuota>;cmpl %edi, %eax;movl %eax, (%ebp);jge  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx": 1,
                "calll - <PsReturnProcessPagedPoolQuota>;jmp  <NtFreeVirtualMemory+>;movl %edi, -(%ebp);movl %edi, -(%ebp);movw $, -(%ebp)": 1,
                "pushl %eax;calll - <MmMapLockedPagesSpecifyCache>;cmpl %edi, %eax;movl %eax, -(%ebp);jne  <NtFreeVirtualMemory+>": 1,
                "pushl $;pushl $;pushl (%ebp);pushl %edi;calll - <MmIsVerifierEnabled+>": 1,
                "cmpl $, (%ebp);jb - <NtFreeVirtualMemory+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "cmpl %edi, %ebx;movl %ebx, %eax;jne - <NtFreeVirtualMemory+>;pushl %edi;pushl %esi": 1,
                "movl (%ebp), %esi;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %ecx": 1,
                "calll - <KeUnstackDetachProcess>;movl %esi, %eax;jmp  <NtFreeVirtualMemory+>;movl , %eax;andl $, %eax": 1,
                "pushl (%ebp);calll - <MmTrimAllSystemPagableMemory+>;pushl -(%ebp);calll - <MmIsVerifierEnabled+>;movl %edi, (%ebp)": 1,
                "movl -(%ebp), %eax;xorl %edx, %edx;movl %eax, -(%ebp);movl %ecx, (%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl $, (%eax);movl %ecx, (%esi)": 1,
                "movl %edi, (%esi);movl %edi, (%esi);movl %eax, (%esi);calll - <NtFreeVirtualMemory+>;movl (%ebx), %ecx": 1,
                "testb $, (%eax);movl -(%ebp), %edx;movl -(%ebp), %eax;jne  <NtFreeVirtualMemory+>;pushl $": 1,
                "orb $, (%eax);movl (%eax), %esi;testl $, %esi;movl (%eax), %ecx;je  <NtFreeVirtualMemory+>": 1,
                "movl (%eax), %ecx;je  <NtFreeVirtualMemory+>;testl $, %ecx;je  <NtFreeVirtualMemory+>;andl $, (%eax)": 1,
                "jne  <NtFreeVirtualMemory+>;andl $, %esi;movl %esi, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "xaddl %eax, (%ecx);pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edx;movl (%edx), %edi": 1,
                "addl $, %esi;movl %esi, %edi;shll $, %edi;cmpl -(%ebp), %edi;movl %esi, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;je  <NtFreeVirtualMemory+>": 1,
                "pushl %ebx;pushl -(%ebp);calll - <MmIsNonPagedSystemAddressValid+>;cmpl $, -(%ebp);jne - <NtFreeVirtualMemory+>": 1,
                "jne - <NtFreeVirtualMemory+>;movl %edi, %eax;shrl $, %eax;andl $, %eax;movl -(%ebp,%eax,), %eax": 1,
                "leal (%eax,%esi,), %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl -(%ebp), %edx;movl $, %eax": 1,
                "andl %eax, %edx;cmpl %edx, %ecx;movl %ecx, -(%ebp);je  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx": 1,
                "calll - <MmIsAddressValid+>;movl (%ebp), %ecx;xorl %edx, %edx;movl %ecx, -(%ebp);calll - <MmIsAddressValid+>": 2,
                "movl %eax, -(%ebp);je  <NtFreeVirtualMemory+>;movl , %ecx;movl (%ecx,%eax,), %ecx;shrl $, %ecx": 1,
                "movl (%ecx,%eax,), %ecx;shrl $, %ecx;andl $, %ecx;je  <NtFreeVirtualMemory+>;orl $, %ecx": 1,
                "movl %ebx, %edx;movl %edi, %ecx;calll - <MmGetSystemRoutineAddress+>;jmp  <NtFreeVirtualMemory+>;movl (%edi), %eax": 1,
                "movl (%ebx), %ecx;shrdl $, %edx, %ecx;andl %eax, %ecx;imull $, %ecx, %ecx;addl , %ecx": 1,
                "andl %eax, %ecx;imull $, %ecx, %ecx;addl , %ecx;shrl $, %edx;pushl %ecx": 1,
                "orl %ebx, %eax;je  <NtFreeVirtualMemory+>;orl $, %ecx;movl %ecx, (%esi);movl %edx, (%esi)": 1,
                "movl %edx, (%esi);movl , %eax;movl -(%ebp), %ecx;leal (%eax,%ecx,), %eax;andb $, (%eax)": 1,
                "cltd;xorl %edx, %edx;orl $, %edx;movl %edx, (%ecx);addl $, (%ebp)": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;incw (%eax);movl (%ebp), %eax;decl (%eax)": 1,
                "incl -(%ebp);movl %eax, %ebx;jmp  <NtFreeVirtualMemory+>;movl %ecx, %edx;andl $, %edx": 1,
                "movl %eax, %ebx;jmp  <NtFreeVirtualMemory+>;movl %ecx, %edx;andl $, %edx;pushl $": 1,
                "calll - <_aullshr>;leal (%ebx), %edx;cmpl $, (%edx);movl %eax, %esi;je  <NtFreeVirtualMemory+>": 1,
                "je  <NtFreeVirtualMemory+>;movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;jmp  <NtFreeVirtualMemory+>;xorl %eax, %eax": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);jmp - <NtFreeVirtualMemory+>;movl %ecx, %edx": 1,
                "testl %eax, %eax;jne  <NtFreeVirtualMemory+>;movl -(%ebp), %eax;incw (%eax);decl (%ebx)": 1,
                "incl -(%ebp);jmp  <NtFreeVirtualMemory+>;movl %ecx, %edx;andl $, %edx;orl %eax, %edx": 1,
                "jmp  <NtFreeVirtualMemory+>;movl %ecx, %edx;andl $, %edx;orl %eax, %edx;je  <NtFreeVirtualMemory+>": 1,
                "jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %edx;movl %ecx, (%edx);movl %eax, (%edx);movl -(%ebp), %eax": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;incw (%eax);addl $, %edi;addl $, -(%ebp)": 1,
                "cmpl %edi, %eax;movl %eax, -(%ebp);jne - <NtFreeVirtualMemory+>;movl -(%ebp), %ecx;xorl %edx, %edx": 1,
                "incl %edi;cmpl $, %edi;jb - <NtFreeVirtualMemory+>;pushl $;pushl (%ebp)": 1,
                "jmp  <NtFreeVirtualMemory+>;movl (%ebp), %eax;shll $, %eax;pushl %eax;pushl (%ebx)": 1,
                "calll *;movl (%esi), %eax;pushl $;pushl (%eax);calll - <ExFreePoolWithTag>": 1,
                "pushl %esi;pushl $;pushl %edi;calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax": 1,
                "movl (%ebp), %edi;andl $, (%esi);movl -(%ebp), %ecx;movl , %esi;calll *%esi": 1,
                "testl %eax, %eax;jge  <NtFreeVirtualMemory+>;movl %eax, (%ebp);jmp  <NtFreeVirtualMemory+>;movl (%ebx), %eax": 1,
                "movl %eax, (%ebp);jl  <NtFreeVirtualMemory+>;pushl (%ebp);pushl %edi;calll - <PsChargeProcessNonPagedPoolQuota>": 1,
                "calll  <RtlInitializeBitMap>;leal -(%ebp), %eax;xorl %esi, %esi;pushl %eax;movl %esi, -(%ebp)": 1,
                "addl $, %edi;cmpl %esi, %edi;jb - <NtFreeVirtualMemory+>;cmpl %esi, %edi;je  <NtFreeVirtualMemory+>": 1,
                "movl %edi, %ebx;movl %eax, -(%ebp);leal (%edi), %eax;movl %eax, -(%ebp);movl %edi, %eax": 1,
                "movl %eax, -(%ebp);movl %edi, %eax;subl %ebx, %eax;pushl $;cltd": 1,
                "pushl $;movl %edi, %eax;subl %ebx, %eax;cltd;popl %ecx": 1,
                "pushl $;calll ;leal -(%ebp), %eax;pushl %eax;calll - <RtlClearAllBits>": 1,
                "calll - <RtlClearAllBits>;incl -(%ebp);movl , %ecx;movl -(%ebp), %eax;cmpl (%ecx), %eax": 1,
                "cmpl %esi, %eax;je  <NtFreeVirtualMemory+>;movl (%edi), %eax;testl %eax, %eax;jne - <NtFreeVirtualMemory+>": 1,
                "movl (%ebp), %esi;movb -(%esi), %al;movl -(%esi), %ecx;addl $-, %esi;andb $, %al": 1,
                "movb -(%esi), %al;movl -(%esi), %ecx;addl $-, %esi;andb $, %al;negb %al": 1,
                "jne  <NtFreeVirtualMemory+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <NtFreeVirtualMemory+>;movb $, %cl": 1,
                "xorl %eax, %eax;movl %eax, (%ebx);movw %ax, (%ebx);movw %ax, (%ebx);leal (%esi), %eax": 1,
                "xorl %ecx, %ecx;cmpl %ecx, (%eax);je  <NtFreeVirtualMemory+>;pushl %ecx;pushl %ecx": 1,
                "movl -(%ebp), %eax;addl $, %eax;cmpl $, (%eax);je  <NtFreeVirtualMemory+>;cmpb $, (%ebp)": 1,
                "je  <ObReferenceObjectByHandle+>;cmpl %ebx, %eax;jne  <ObReferenceObjectByHandle+>;movl (%esi), %esi;movl (%esi), %ecx": 1,
                "cmpb $, (%ebp);jne  <ObReferenceObjectByHandle+>;movl (%ebp), %eax;cmpl %ebx, %eax;leal -(%esi), %edx": 1,
                "jne  <ObReferenceObjectByHandle+>;movl (%ebp), %eax;cmpl %ebx, %eax;leal -(%esi), %edx;movl %edx, -(%ebp)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl %esi, (%edi);jmp  <ObReferenceObjectByHandle+>": 1,
                "movl (%ebp), %ebx;movl %ebx, %eax;notl %eax;testl %eax, (%ebp);je  <ObReferenceObjectByHandle+>": 1,
                "je  <ObReferenceObjectByHandle+>;cmpb $, (%ebp);je  <ObReferenceObjectByHandle+>;movl $, %ebx;pushl %edi": 1,
                "pushl (%ebp);calll - <NtFreeVirtualMemory+>;movl -(%ebp), %edx;cmpb $, ;je  <ObReferenceObjectByHandle+>": 1,
                "movl -(%ebp), %edx;cmpb $, ;je  <ObReferenceObjectByHandle+>;pushl $;pushl %edx": 1,
                "jne  <ObReferenceObjectByHandle+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <ObReferenceObjectByHandle+>;movb $, %cl": 4,
                "je  <ObReferenceObjectByHandle+>;testl %eax, %eax;je  <ObReferenceObjectByHandle+>;cmpl $, (%eax);je  <ObReferenceObjectByHandle+>": 1,
                "testl %eax, %eax;je  <ObReferenceObjectByHandle+>;cmpl $, (%eax);je  <ObReferenceObjectByHandle+>;testl %ecx, %ecx": 1,
                "pushl $;pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;movl $, %eax;movl -(%ebp), %ecx": 1,
                "calll  <ExInitializePagedLookasideList+>;jmp  <ObReferenceObjectByHandle+>;movl $, %ebx;incl (%esi);jne  <ObReferenceObjectByHandle+>": 1,
                "calll *;movl (%ebp), %eax;andl $, (%eax);movl %ebx, %eax;popl %edi": 1,
                "int;movl %edi, %edi;pushl %esi;pushl %edi;movl $, %eax": 1,
                "je  <ObReferenceObjectByHandle+>;cmpl $, %edi;jne - <ObReferenceObjectByHandle+>;cmpl $, ;jne - <ObReferenceObjectByHandle+>": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);cmpl $, %eax;jne - <ObReferenceObjectByHandle+>;popl %edi": 1,
                "cmpl %esi, (%ebp);movl %esi, (%eax);jne  <ObOpenObjectByName+>;movl $, (%ebp);jmp  <ObOpenObjectByName+>": 1,
                "movl $, %eax;jmp  <ObOpenObjectByName+>;movl (%ebp), %esi;pushl %edi;pushl $": 1,
                "je  <ObOpenObjectByName+>;movsbl (%eax), %eax;pushl $;pushl %eax;pushl %ecx": 1,
                "andl $, (%eax);movl (%edi), %eax;movl %eax, (%ebp);movl %ds:, %eax;movl (%eax), %ecx": 1,
                "movw (%ecx), %dx;incl (%ecx);cmpw (%ecx), %dx;jb  <ObOpenObjectByName+>;incl (%ecx)": 1,
                "movl $, (%ebp);movl (%ebx), %eax;movl (%edi), %ecx;testl %eax, (%ecx);je  <ObOpenObjectByName+>": 1,
                "movl (%ebx), %eax;movl (%edi), %ecx;testl %eax, (%ecx);je  <ObOpenObjectByName+>;cmpb $, (%esi)": 1,
                "andl $-, %edi;leal -(%edi), %eax;andl $-, %eax;movl %ebx, (%ebp);movl %edi, (%ebp)": 2,
                "pushl (%ebp);calll  <SeDeleteAccessState>;leal (%ebx), %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <ObOpenObjectByName+>;xorl %ecx, %ecx;movb (%ebx), %cl": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);xorl %edi, %edi;pushl (%ebp)": 2,
                "pushl %edi;pushl (%ebp);pushl %edi;pushl %eax;pushl %edi": 1,
                "cmpl %ebx, (%ebp);je  <ObReferenceObjectByName+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl (%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax": 8,
                "movb -(%esi), %al;cmpb %bl, %al;je  <ObReferenceObjectByName+>;movzbl %al, %eax;subl %eax, %esi": 1,
                "cmpb %bl, %al;je  <ObReferenceObjectByName+>;movzbl %al, %eax;subl %eax, %esi;subl $, %esi": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movb -(%esi), %al": 1,
                "movl (%ebp), %esi;movb -(%esi), %al;addl $-, %esi;xorl %ebx, %ebx;cmpb %bl, %al": 1,
                "jne - <ObReferenceObjectByName+>;xorl %esi, %esi;movl (%ebp), %eax;movl -(%eax), %ecx;addl $-, %eax": 1,
                "movb %bl, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl (%esi), %edi;movl $, -(%ebp)": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;je  <ObReferenceObjectByName+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;calll  <ExfAcquirePushLockExclusive>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "leal (%esi), %eax;pushl %eax;movl $, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp)": 1,
                "jne  <ObReferenceObjectByName+>;testb $, (%eax);jne  <ObReferenceObjectByName+>;leal -(%ebp), %eax;pushl %eax": 1,
                "andl $-, %eax;movl %edi, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "cmpxchgl %edx, (%ecx);cmpl %edi, %eax;je  <ObReferenceObjectByName+>;movl -(%ebp), %ecx;calll  <ExfReleasePushLock>": 1,
                "cmpl %edi, %eax;je  <ObReferenceObjectByName+>;movl -(%ebp), %ecx;calll  <ExfReleasePushLock>;movl $, -(%ebp)": 1,
                "je  <ObReferenceObjectByName+>;movl -(%ebp), %ecx;calll  <ExfReleasePushLock>;movl $, -(%ebp);movl %fs:, %eax": 1,
                "je  <ObReferenceObjectByName+>;movb -(%edi), %al;cmpb %bl, %al;je  <ObReferenceObjectByName+>;movzbl %al, %eax": 1,
                "cmpl %ebx, -(%ebp);je  <ObReferenceObjectByName+>;leal (%esi), %edi;movl %edi, -(%ebp);movl $, %eax": 1,
                "testb $-, (%esi);je - <ObReferenceObjectByName+>;movl (%esi), %edi;addl $, %edi;cmpl %ebx, (%edi)": 1,
                "je - <ObReferenceObjectByName+>;movl (%esi), %edi;addl $, %edi;cmpl %ebx, (%edi);je - <ObReferenceObjectByName+>": 1,
                "je  <ObReferenceObjectByName+>;pushl $;calll - <KeRaiseUserException>;jmp  <ObReferenceObjectByName+>;movl $, %eax": 1,
                "andl %ecx, %eax;pushl %edi;movl (%ebp), %edi;pushl %edi;pushl (%ebp)": 1,
                "pushl %edi;pushl (%ebp);movl %eax, (%ebp);calll  <ExEnumHandleTable+>;testb $, %bl": 1,
                "incl (%esi);movl %eax, %edi;jne  <ObReferenceObjectByName+>;leal (%esi), %eax;cmpl %eax, (%eax)": 1,
                "testb $, ;jne  <ObReferenceObjectByName+>;cmpl %ecx, (%ebx);je  <ObReferenceObjectByName+>;cmpb $, (%ebp)": 1,
                "movl %fs:, %eax;cmpb $, (%eax);je  <ObReferenceObjectByName+>;testb $, (%esi);jne  <ObReferenceObjectByName+>": 1,
                "pushl $;calll - <KeBugCheckEx>;movl $, %edi;movl %edi, %eax;popl %edi": 1,
                "movl %esp, %ebp;pushl $;pushl (%ebp);pushl (%ebp);calll - <ObReferenceObjectByName+>": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);calll - <ObReferenceObjectByName+>;popl %ebp": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <ObMakeTemporaryObject+>;leal (%eax), %ecx": 4,
                "pushl %esi;pushl (%ebp);calll - <ObMakeTemporaryObject+>;testl %eax, %eax;je  <ObMakeTemporaryObject+>": 1,
                "movb (%eax), %cl;testb %cl, %cl;pushl %ebx;je  <ObMakeTemporaryObject+>;movzbl %cl, %ecx": 1,
                "movl $, -(%ebp);jmp  <ObMakeTemporaryObject+>;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %edx;movl -(%ebp), %eax;movl -(%ebp), %ecx;subl %eax, %ecx": 1,
                "decl (%eax);jmp  <ObMakeTemporaryObject+>;movl (%eax), %eax;movl (%eax), %ecx;addl $, %eax": 1,
                "movl (%eax), %esi;cmpl (%ebp), %esi;je  <ObMakeTemporaryObject+>;addl $, %eax;decl %ecx": 1,
                "movb (%ebx), %al;testb %al, %al;pushl %esi;jne  <ObMakeTemporaryObject+>;xorl %eax, %eax": 1,
                "movzbl %al, %ecx;movl %ebx, %eax;subl %ecx, %eax;testb $, (%ebx);je  <ObMakeTemporaryObject+>": 1,
                "movl $, %eax;jmp  <ObMakeTemporaryObject+>;xorl %ecx, %ecx;movl %esi, (%eax);incl %ecx": 1,
                "movl %ecx, (%eax);movl (%ebp), %eax;movl %ecx, (%eax);xorl %eax, %eax;jmp  <ObMakeTemporaryObject+>": 1,
                "cmpl %edi, (%ecx);je  <ObMakeTemporaryObject+>;cmpl $, (%ecx);jne  <ObMakeTemporaryObject+>;movl %ecx, %edx": 1,
                "movl %ecx, %edx;addl $, %ecx;decl %esi;jne - <ObMakeTemporaryObject+>;testl %edx, %edx": 1,
                "pushl %ebx;calll - <ObMakeTemporaryObject+>;movl %eax, %edx;testl %edx, %edx;jne  <ObMakeTemporaryObject+>": 1,
                "movb $, (%edi);movb (%esi), %cl;testb $, %cl;je  <ObMakeTemporaryObject+>;andb $-, %cl": 1,
                "testb $, %cl;je  <ObMakeTemporaryObject+>;andb $-, %cl;testl %eax, %eax;movb %cl, (%esi)": 1,
                "cmpl $, (%esi);movl (%ebp), %eax;movl (%eax), %edx;je  <ObMakeTemporaryObject+>;orb $, %cl": 1,
                "movl %fs:, %eax;pushl %ecx;pushl %edx;pushl (%eax);calll  <PsAssignImpersonationToken+>": 1,
                "movl (%ebp), %eax;andl $, %eax;negl %eax;sbbl %eax, %eax;andl $, %eax": 1,
                "arpl %bp, (%eax);andb %ch, (%ecx,%ebp,);imull $, (%eax), %esi;addb %cl, %ah;int": 1,
                "jbe  <ObMakeTemporaryObject+>;incl ;cmpl %ebx, (%edi);je  <ObMakeTemporaryObject+>;incl -(%ebp)": 1,
                "cmpl %ebx, (%edi);je  <ObMakeTemporaryObject+>;incl -(%ebp);addl $, %edi;cmpl %ecx, -(%ebp)": 1,
                "movl $, %eax;jmp  <ObMakeTemporaryObject+>;movl (%ebp), %edx;movl (%edx), %ecx;pushl %esi": 1,
                "pushl %edi;movw (%ebp), %di;movw %di, (%eax);movl , %eax;andl $-, %ecx": 1,
                "movb %al, (%edi);movl (%ecx), %eax;movb (%eax), %al;movl (%esi), %edi;movb %al, (%edi)": 1,
                "movl (%esi), %eax;movw (%ebp), %di;movw %di, (%eax);movl (%esi), %eax;addl $, %ecx": 1,
                "andw $, %ax;movw %ax, (%ecx);xorl %eax, %eax;movw (%edx), %ax;pushl %eax": 1,
                "movl (%esi), %ecx;jmp  <ObMakeTemporaryObject+>;movl , %eax;notl %eax;andl (%edx), %eax": 1,
                "movl %eax, (%edx);movl (%esi), %eax;andw $, (%eax);testb $, ;je  <ObMakeTemporaryObject+>": 1,
                "movw %ax, (%edx);xorl %eax, %eax;movw (%ecx), %ax;pushl %eax;calll - <ObMakeTemporaryObject+>": 1,
                "shrl $, %ecx;andl $, %ecx;movl %ecx, -(%ebp);movl %fs:, %eax;decl (%eax)": 1,
                "movl %ecx, -(%ebp);movl %fs:, %eax;decl (%eax);pushl $;imull $, %ecx, %ecx": 1,
                "movl (%edi), %eax;leal (%ecx,%eax), %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;xorl %esi, %esi": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jge  <ObMakeTemporaryObject+>;movl %esi, -(%ebp);movl $, %eax": 1,
                "cmpl $, (%ebp);jne  <ObMakeTemporaryObject+>;movl (%ebp), %esi;addl $, %esi;movl (%esi), %eax": 1,
                "movl (%esi), %eax;testl $, %eax;je  <ObMakeTemporaryObject+>;andl $, %eax;movl %eax, (%esi)": 1,
                "pushl -(%ebp);pushl $;calll  <SePrivilegeObjectAuditAlarm+>;movl $, -(%ebp);movb $, -(%ebp)": 1,
                "xaddl %eax, (%ecx);jmp  <ObMakeTemporaryObject+>;cmpl $, (%ebp);jne  <ObMakeTemporaryObject+>;movb (%edi), %al": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);je  <ObMakeTemporaryObject+>;movl %fs:, %eax;movl %eax, -(%ebp)": 2,
                "cmpl (%ebx), %eax;jbe  <ObMakeTemporaryObject+>;movl %eax, (%ebx);orl $-, -(%ebp);calll  <ObMakeTemporaryObject+>": 2,
                "movl (%edi), %ecx;leal (%eax,%ecx), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 2,
                "movl %edi, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl %edi, %esi;shrl $, %esi": 1,
                "cmpl %edx, (%ebx);je  <ObMakeTemporaryObject+>;movl $, -(%ebp);jmp  <ObMakeTemporaryObject+>;movl (%ebp), %ecx": 1,
                "xorl %edx, %edx;cmpb $, -(%ebp);je  <ObMakeTemporaryObject+>;movb (%edi), %al;testb %al, %al": 1,
                "movl %ecx, (%eax);leal (%edi), %eax;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl %esi, %eax;movl %eax, -(%ebp);imull $, %eax, %eax;movl (%edi), %ecx;leal (%eax,%ecx), %ecx": 1,
                "pushl $;calll *%eax;movl %eax, -(%ebp);testl %eax, %eax;jge  <ObMakeTemporaryObject+>": 1,
                "addl $-, %eax;pushl %edi;xorl %edi, %edi;cmpl %edi, (%ebp);movb $, -(%ebp)": 1,
                "movl (%ebp), %ebx;cmpl %edi, %ebx;je  <ObMakeTemporaryObject+>;cmpb $, (%ebx);je  <ObMakeTemporaryObject+>": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne  <ObMakeTemporaryObject+>": 3,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne  <ObMakeTemporaryObject+>;movl (%esi), %eax": 3,
                "movl (%esi), %eax;cmpl %edi, %eax;je  <ObMakeTemporaryObject+>;pushl %eax;movl %edi, (%esi)": 2,
                "movl $, %eax;jmp  <ObMakeTemporaryObject+>;movl (%ebp), %esi;testl $, %esi;movl %eax, -(%ebp)": 1,
                "cmpl %ecx, (%eax);je  <ObMakeTemporaryObject+>;leal -(%ebp), %eax;pushl %eax;pushl %ecx": 2,
                "movl %edi, (%esi);calll - <ObfReferenceObject+>;jmp  <ObMakeTemporaryObject+>;xorl %edi, %edi;movl (%ebx), %ecx": 1,
                "movb $, (%eax);calll *;andl $, (%esi);movl -(%ebp), %ebx;movl (%ebp), %eax": 1,
                "andl $, (%esi);movl -(%ebp), %ebx;movl (%ebp), %eax;movb $, (%esi);movl (%eax), %esi": 1,
                "movl (%ebp), %esi;movl (%esi), %ecx;calll - <ObfDereferenceObject>;andl $, (%esi);testb $, ": 1,
                "cmpb $, (%ebp);movw %ax, -(%ebp);jne  <ObMakeTemporaryObject+>;calll - <RtlUnwind+>;jmp  <ObMakeTemporaryObject+>": 3,
                "pushl (%ebp);decl (%esi);calll  <ExEnumHandleTable+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "pushl %edi;calll  <SePrivilegeObjectAuditAlarm+>;cmpl $, (%ebp);jne  <ObMakeTemporaryObject+>;movl (%edi), %ecx": 1,
                "movb (%esi), %al;addl $, %edi;pushl %eax;movl (%ebp), %eax;pushl $": 1,
                "leal -(%esi), %ebx;andl $, %eax;orl %ebx, %eax;testb $, (%ebp);pushl %edi": 1,
                "movl (%ebx), %edi;movb $, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);je  <ObMakeTemporaryObject+>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "je  <ObMakeTemporaryObject+>;movl %esi, (%eax);movl (%ebp), %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);pushl %eax;calll  <ExEnumHandleTable+>;jmp  <ObMakeTemporaryObject+>;xorl %eax, %eax": 1,
                "pushl %eax;calll - <KeUnstackDetachProcess>;movb $, -(%ebp);movl -(%ebp), %ebx;testl %ebx, %ebx": 1,
                "movl $, %ebx;testl %eax, %eax;je  <ObMakeTemporaryObject+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);je  <ObMakeTemporaryObject+>;leal (%esi), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "movl (%esi), %edi;orl $, %edi;andl (%ebp), %edi;notl %ebx;testl %ebx, %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <SeCreateAccessState>;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %esi;pushl -(%ebp);pushl (%eax);pushl $;calll - <ObMakeTemporaryObject+>": 1,
                "calll - <ObMakeTemporaryObject+>;pushl (%ebp);calll - <ObMakeTemporaryObject+>;movl -(%ebp), %esi;movl -(%ebp), %ecx": 1,
                "movl , %eax;andl $-, -(%ebp);orl %eax, -(%ebp);movl -(%ebp), %ebx;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll  <ExEnumHandleTable+>;testl %eax, %eax": 1,
                "pushl %ebx;calll  <ExEnumHandleTable+>;testl %eax, %eax;movl %eax, (%ebp);je  <ObMakeTemporaryObject+>": 1,
                "testl %esi, %esi;je  <ObMakeTemporaryObject+>;pushl (%ebp);pushl %esi;calll  <SePrivilegeObjectAuditAlarm+>": 1,
                "pushl %esi;pushl -(%ebp);pushl (%ebp);calll - <ObMakeTemporaryObject+>;movl -(%ebp), %ecx": 1,
                "movl %ebx, -(%ebp);jmp  <NtDuplicateObject+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "addl $, %edi;movl %edi, (%eax);movl %edx, (%esi);movb $, %al;popl %ebx": 1,
                "testl %eax, %eax;jne  <NtDuplicateObject+>;xorb %al, %al;jmp  <NtDuplicateObject+>;movzwl (%ecx), %ecx": 1,
                "calll *;pushl (%esi);calll - <ObMakeTemporaryObject>;movl (%esi), %ecx;calll - <ObfDereferenceObject>": 1,
                "pushl %esi;pushl %edi;jne  <NtDuplicateObject+>;xorl %ebx, %ebx;jmp  <NtDuplicateObject+>": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %edi, %eax;je  <NtDuplicateObject+>;movl %eax, %edi": 1,
                "cmpl %edi, %eax;je  <NtDuplicateObject+>;movl %eax, %edi;cmpl $, %eax;movl %edi, (%ebp)": 1,
                "leal (%ecx,%eax,), %ecx;movl (%ecx), %eax;movl (%eax), %edx;movl %edx, (%ecx);andl $, (%eax)": 1,
                "je  <NtDuplicateObject+>;movl %ebx, -(%ebp);movl (%ebp), %esi;movl , %eax;cmpl %eax, %esi": 1,
                "movl -(%ebp), %eax;jmp  <NtDuplicateObject+>;movl (%ebp), %esi;leal -(%ebp), %eax;pushl %eax": 2,
                "movl %ebx, (%edx);orl $-, (%edx);leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esi);jmp  <NtDuplicateObject+>;xorl %eax, %eax": 2,
                "cmpl %eax, %esi;jb  <NtDuplicateObject+>;movl %ecx, (%eax);movl (%esi), %eax;movl %eax, (%esi)": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <NtDuplicateObject+>;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <NtDuplicateObject+>;cmpb $, (%ebp)": 1,
                "jmp  <NtDuplicateObject+>;cmpb $, (%ebp);je  <NtDuplicateObject+>;andl $, -(%ebp);jmp  <NtDuplicateObject+>": 1,
                "movl $, %eax;jmp  <NtDuplicateObject+>;movl %esi, %ecx;xorl %eax, %eax;movl %ebx, %edi": 1,
                "movl %ebx, %edi;movl %ecx, %edx;shrl $, %ecx;rep  stosl %eax, %es:(%edi);movl %edx, %ecx": 1,
                "decl (%eax);leal (%ecx), %edi;movl %edi, -(%ebp);movl (%edi), %esi;andl $-, %esi": 1,
                "movl %edx, -(%ebp);movl $, -(%ebp);jmp  <NtDuplicateObject+>;movl $, -(%ebp);decl -(%ebp)": 1,
                "decl -(%ebp);movl $, -(%ebp);cmpl $, -(%ebp);jl  <NtDuplicateObject+>;xorl %eax, %eax": 1,
                "jl  <NtDuplicateObject+>;xorl %eax, %eax;movl %ebx, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "stosl %eax, %es:(%edi);addl $, %ebx;movl %ebx, -(%ebp);movl -(%ebp), %eax;movl %ebx, -(%ebp)": 1,
                "addl (%ebp), %ecx;movl %ecx, (%eax);movzwl (%eax), %edx;addl %ebx, %edx;movl %edx, -(%ebp)": 1,
                "addl $, %ecx;movw %cx, (%ebx);movl -(%ebp), %ecx;movl %ecx, (%ebx);movl (%esi), %ecx": 1,
                "movzwl (%ecx), %ecx;incl %ecx;incl %ecx;movw %cx, (%ebx);movl (%esi), %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %eax;testl %eax, %eax;je  <NtDuplicateObject+>": 1,
                "je  <NtDuplicateObject+>;movl (%ebp), %eax;cmpl %esi, %eax;je  <NtDuplicateObject+>;movl (%eax), %edi": 1,
                "je  <NtDuplicateObject+>;movl (%eax), %edi;movb (%ebp), %cl;movzwl (%eax), %eax;shrb $, %cl": 1,
                "shrl %eax;movb %cl, -(%ebp);je  <NtDuplicateObject+>;cmpl %esi, %edi;je  <NtDuplicateObject+>": 1,
                "je  <NtDuplicateObject+>;cmpl %esi, %edi;je  <NtDuplicateObject+>;pushl %ebx;movl %eax, %ebx": 1,
                "movl %esi, %ecx;incl %edi;shrl %ecx;leal (%esi,%esi,), %edx;addl %edx, %ecx": 1,
                "shrl %ecx;leal (%esi,%esi,), %edx;addl %edx, %ecx;incl %edi;cmpw $, %ax": 1,
                "cmpw $, %ax;jbe  <NtDuplicateObject+>;pushl %eax;calll  <RtlUpcaseUnicodeChar>;jmp - <NtDuplicateObject+>": 1,
                "movzwl %ax, %eax;leal -(%esi,%eax), %esi;decl %ebx;jne - <NtDuplicateObject+>;pushl $": 1,
                "shll $, %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl (%ebp), %ecx;leal (%eax,%ecx), %ebx": 1,
                "movl (%ebp), %eax;cmpb $, (%eax);movl %ebx, %edi;movl %edi, -(%ebp);jne  <NtDuplicateObject+>": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);je  <NtDuplicateObject+>;pushl %eax;calll - <NtDuplicateObject+>": 1,
                "testl %eax, %eax;je  <NtDuplicateObject+>;movl %eax, (%ebp);jmp - <NtDuplicateObject+>;cmpl %edi, %ebx": 1,
                "testb %cl, %cl;je  <NtDuplicateObject+>;movzbl %cl, %ecx;subl %ecx, %eax;movl %eax, %edi": 1,
                "movl %eax, %esi;testl %eax, %eax;movl %esi, (%ebp);jne - <NtDuplicateObject+>;jmp  <NtDuplicateObject+>": 1,
                "testl %eax, %eax;movl %esi, (%ebp);jne - <NtDuplicateObject+>;jmp  <NtDuplicateObject+>;testb $-, (%ebx)": 1,
                "cmpl $, (%esi);je  <NtDuplicateObject+>;movl %esi, %ecx;calll  <ExfAcquirePushLockExclusive>;movl %esi, %ecx": 1,
                "cmpl %edi, %eax;je  <NtDuplicateObject+>;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>": 2,
                "movl %edi, %ecx;calll *;leal (%ebx), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %eax;calll  <SeMarkLogonSessionForTerminationNotification+>;testl %eax, %eax;jl  <NtDuplicateObject+>;movl -(%ebp), %esi": 1,
                "testl %esi, %esi;je  <NtDuplicateObject+>;incl (%esi);movl %edi, %ecx;calll *": 2,
                "movl (%ebx), %eax;pushl %ecx;pushl %ebx;pushl (%ebp);movl %eax, -(%ebp)": 1,
                "jne - <NtDuplicateObject+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;cmpl %edi, %eax": 1,
                "jge  <NtDuplicateObject+>;movl %edi, -(%ebp);jmp  <NtDuplicateObject+>;cmpl %edi, -(%ebp);jne  <NtDuplicateObject+>": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);jmp  <NtDuplicateObject+>": 1,
                "cmpl %edi, %ecx;je  <NtDuplicateObject+>;calll - <NtDuplicateObject+>;movl %edi, -(%ebp);movl (%ebx), %ecx": 1,
                "calll - <NtDuplicateObject+>;movl %edi, -(%ebp);movl (%ebx), %ecx;testb $, %cl;jne  <NtDuplicateObject+>": 1,
                "je  <NtDuplicateObject+>;movl (%eax), %eax;cmpl %edi, %eax;je  <NtDuplicateObject+>;movl -(%ebp), %ecx": 1,
                "je  <NtDuplicateObject+>;movl -(%ebp), %ecx;movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);xorl %edi, %edi;cmpb $, -(%ebp);je  <NtDuplicateObject+>;movl (%ebp), %eax": 1,
                "je  <NtDuplicateObject+>;movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %ecx": 1,
                "subw %ax, -(%ebp);je  <NtDuplicateObject+>;cmpl %edi, -(%ebp);jne  <NtDuplicateObject+>;movl -(%ebp), %eax": 1,
                "testb $, (%eax);jne  <NtDuplicateObject+>;cmpl %edi, -(%ebp);je  <NtDuplicateObject+>;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %edi;pushl %eax": 1,
                "pushl -(%ebp);calll  <ObCheckObjectAccess+>;testb %al, %al;je - <NtDuplicateObject+>;cmpw %di, -(%ebp)": 1,
                "movb $, (%eax);movl %ecx, (%eax);cmpl %edi, (%ebp);pushl (%ebp);sete %al": 1,
                "je  <NtDuplicateObject+>;leal -(%eax), %edi;movl (%edi), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "cmpl $, (%ebp);je  <NtDuplicateObject+>;cmpl $, -(%ebp);jne  <NtDuplicateObject+>;cmpb $, ": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl (%ebp), %eax": 1,
                "cmpl %esi, %eax;je  <NtDuplicateObject+>;movl %edi, %ecx;calll  <ExfReleasePushLock>;movl (%ebp), %esi": 1,
                "leal -(%ebp), %eax;pushl (%ebp);pushl %eax;pushl %ebx;pushl (%ebp)": 1,
                "pushl (%ebp);pushl %eax;pushl %ebx;pushl (%ebp);pushl -(%ebp)": 1,
                "cmpl , %ecx;jne  <NtDuplicateObject+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "cmpw %di, -(%ebp);je  <NtDuplicateObject+>;movl $, -(%ebp);jmp - <NtDuplicateObject+>;cmpl %edi, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %eax;pushl (%ebp);xorl %eax, %eax": 1,
                "calll  <ObCheckCreateObjectAccess>;testb %al, %al;je - <NtDuplicateObject+>;movl -(%ebp), %ebx;movl (%ebp), %esi": 1,
                "pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, -(%ebp)": 3,
                "testb %al, %al;jne  <NtDuplicateObject+>;xorl %ebx, %ebx;jmp  <NtDuplicateObject+>;movzbl %al, %eax": 1,
                "jmp  <NtDuplicateObject+>;movzbl %al, %eax;subl %eax, %esi;movl %esi, %ebx;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);jmp - <NtDuplicateObject+>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "andl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);jmp - <NtDuplicateObject+>;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);jmp - <NtDuplicateObject+>;cmpl %eax, (%ebp);jne - <NtDuplicateObject+>;movl (%ebp), %eax": 1,
                "movl $, -(%ebp);movl %eax, -(%ebp);jmp - <NtDuplicateObject+>;movb $, -(%ebp);xorl %edi, %edi": 1,
                "movb $, -(%ebp);xorl %edi, %edi;jmp - <NtDuplicateObject+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%esi);calll - <ObReferenceObjectByPointer>;cmpl %edi, %eax;movl %eax, -(%ebp);jl  <NtDuplicateObject+>": 1,
                "jge  <NtDuplicateObject+>;movl (%ebp), %ebx;cmpb $, (%ebx);je  <NtDuplicateObject+>;movl (%ebx), %edi": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %ebx;testl %ebx, %ebx;movl (%ebp), %eax": 1,
                "pushl %edi;leal -(%eax), %edi;movl %fs:, %eax;decl (%eax);movl (%edi), %eax": 1,
                "calll *;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %ebx, %eax;popl %ebx": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %eax, (%ebp);jl  <NtMakePermanentObject+>;pushl %esi": 1,
                "pushl %esi;pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %eax, (%ebp);jl  <NtMakePermanentObject+>;leal -(%ebp), %eax": 1,
                "leal (%ebx), %eax;movl (%eax), %esi;movl %eax, -(%ebp);testl %esi, %esi;jmp  <NtMakePermanentObject+>": 2,
                "movl %ebx, -(%ebp);jmp - <NtMakePermanentObject+>;leal (%esi), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, %esi;testl %eax, %eax;movl %esi, -(%ebp);jne - <NtMakePermanentObject+>;andl $, -(%ebp)": 1,
                "movl %esi, %ecx;calll  <ExfReleasePushLock>;movl %ebx, -(%ebp);jmp - <NtMakePermanentObject+>;movl -(%ebp), %ecx": 1,
                "calll - <NtDuplicateObject+>;leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax;pushl $": 1,
                "jmp  <NtMakePermanentObject+>;movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);movl %eax, -(%ebp);calll - <NtDuplicateObject+>": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);calll - <NtDuplicateObject+>;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "jmp  <NtMakePermanentObject+>;pushl (%ebp);calll - <NtDuplicateObject+>;movl %eax, %esi;testl %esi, %esi": 1,
                "movl (%edi), %eax;pushl -(%ebp);movl (%edi), %ecx;pushl -(%ebp);movl %edx, (%edi)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <NtDuplicateObject+>;testl %edi, %edi;je  <NtMakePermanentObject+>": 1,
                "pushl -(%ebp);calll - <NtDuplicateObject+>;testl %esi, %esi;je  <NtMakePermanentObject+>;pushl (%ebp)": 1,
                "cmpl %edi, %eax;je  <NtMakePermanentObject+>;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>": 3,
                "movl %fs:, %eax;decl (%eax);leal (%ecx), %esi;movl $, (%ebp);pushl $": 1,
                "movl $, (%ebp);pushl $;pushl %esi;calll - <ExAcquireResourceExclusiveLite>;addl $, %esi": 1,
                "testb $, %cl;je  <NtMakePermanentObject+>;xorb $, %al;movb %al, (%edi);xorb $, (%ebx)": 1,
                "movb $, (%eax);xorl %eax, %eax;jmp  <NtMakePermanentObject+>;pushl %edi;pushl $": 1,
                "xorl %eax, %eax;jmp  <NtMakePermanentObject+>;pushl %edi;pushl $;pushl %ecx": 1,
                "pushl $;pushl %ecx;pushl $;movl $, -(%ebp);calll - <ExAllocatePoolWithTag>": 1,
                "movl %eax, (%edi);jne  <NtMakePermanentObject+>;movl $, %eax;jmp  <NtMakePermanentObject+>;pushl (%ebp)": 1,
                "addl $-, %ecx;cmpl $, (%ecx);je  <ObReleaseObjectSecurity+>;movb (%ecx), %al;testb %al, %al": 1,
                "pushl %edi;pushl $;leal (%eax), %ecx;leal (%esi), %edi;pushl %edi": 1,
                "calll *(%esi);movl %eax, %esi;testl %esi, %esi;jge  <ObAssignSecurity+>;leal -(%ebp), %eax": 1,
                "pushl (%ebp);calll  <SeQuerySecurityDescriptorInfo>;cmpl $, (%ebp);movl %eax, %esi;je  <ObAssignSecurity+>": 1,
                "testl %ecx, %ecx;je  <ObAssignSecurity+>;testb $, (%ecx);je  <ObAssignSecurity+>;movl $, %ecx": 1,
                "je  <ObAssignSecurity+>;testb $, (%ecx);je  <ObAssignSecurity+>;movl $, %ecx;testl %ecx, (%eax)": 1,
                "movl %ebx, -(%ebp);movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <NtQuerySecurityObject+>": 1,
                "movl %eax, (%ecx);pushl $;pushl (%ebp);pushl (%ebp);calll  <ProbeForWrite>": 1,
                "pushl %edi;pushl %esi;calll *(%eax);movl %eax, %ebx;movl %edi, -(%ebp)": 1,
                "pushl %esi;calll *(%eax);movl %eax, %ebx;movl %edi, -(%ebp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %eax;jmp  <NtQuerySecurityObject+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;pushl (%ebp);movl -(%eax), %edi": 1,
                "jmp  <ObCheckObjectAccess+>;movl (%ebp), %esi;pushl %ebx;leal (%esi), %ebx;pushl %ebx": 1,
                "pushl %ebx;leal (%esi), %ebx;pushl %ebx;calll  <SeLockSubjectContext>;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%esi);pushl (%esi);pushl $": 2,
                "pushl $;pushl %ebx;pushl -(%ebp);calll  <SeAccessCheck>;cmpl $, -(%ebp)": 1,
                "pushl $;pushl (%ebp);pushl %edi;calll  <SeOpenObjectAuditAlarm>;pushl %ebx": 1,
                "movl %eax, (%ecx);xorb %al, %al;jmp  <ObCheckObjectAccess+>;pushl %esi;movl (%ebp), %esi": 1,
                "pushl (%eax);movl (%esi), %eax;orl (%esi), %eax;pushl %eax;pushl %edi": 1,
                "orl (%esi), %eax;pushl %eax;pushl %edi;pushl %ebx;pushl (%ebp)": 1,
                "calll  <SeOpenObjectForDeleteAuditAlarm+>;pushl %edi;calll  <SeUnlockSubjectContext>;pushl -(%ebp);pushl %ebx": 1,
                "pushl (%ebp);addl $, %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl (%ebp);calll  <SeAccessCheck>;cmpl $, -(%ebp);movb %al, (%ebp);je  <ObCheckObjectAccess+>": 1,
                "calll  <SeFreePrivileges>;pushl %esi;calll  <SeUnlockSubjectContext>;popl %esi;pushl -(%ebp)": 1,
                "calll  <SeUnlockSubjectContext>;popl %esi;pushl -(%ebp);pushl (%ebp);calll - <ObReleaseObjectSecurity>": 1,
                "pushl (%ebp);calll - <ObReleaseObjectSecurity>;movb (%ebp), %al;popl %ebx;popl %edi": 1,
                "jge  <ObCheckCreateObjectAccess+>;movl (%ebp), %ecx;movl %eax, (%ecx);xorb %al, %al;jmp  <ObCheckCreateObjectAccess+>": 1,
                "movl (%ebp), %edi;addl $, %edi;pushl %edi;calll  <SeLockSubjectContext>;cmpl %ebx, (%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);pushl %esi;movl (%ebp), %esi": 3,
                "pushl $;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <NtMakePermanentObject+>": 1,
                "cmpl $, -(%ebp);jl  <ObSetSecurityDescriptorInfo+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "cmpl -(%ebp), %eax;jne - <ObSetSecurityDescriptorInfo+>;movl -(%ebp), %eax;xorl %edi, %eax;cmpl $, %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl (%ebp);movl %edi, (%ebp);pushl (%ebp)": 1,
                "pushl %esi;calll  <SeSetSecurityDescriptorInfo>;testl %eax, %eax;movl %eax, -(%ebp);jge - <ObSetSecurityDescriptorInfo+>": 1,
                "pushl %eax;pushl %edi;pushl $;pushl -(%ebp);pushl (%ebp)": 2,
                "cmpb %bl, %al;je  <NtWaitForSingleObject+>;movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %esi": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax;jmp  <NtWaitForSingleObject+>;movl (%esi), %ecx": 1,
                "jmp  <NtWaitForSingleObject+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 7,
                "movb %al, -(%ebp);andl $, -(%ebp);testb %al, %al;je  <NtWaitForSingleObject+>;movl (%ebp), %edx": 1,
                "jb  <NtWaitForSingleObject+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %edx;jmp  <NtWaitForSingleObject+>": 1,
                "jmp  <NtWaitForSingleObject+>;movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %edx;movl %edx, -(%ebp)": 1,
                "je  <NtWaitForSingleObject+>;testb $, (%ebp);je  <NtWaitForSingleObject+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax": 1,
                "movl %eax, %edx;movl $, %ecx;andl %ecx, %edx;cmpl %ecx, %edx;jne  <NtWaitForSingleObject+>": 1,
                "testb $, ;je  <NtWaitForSingleObject+>;cmpb $, -(%ebp);je  <NtWaitForSingleObject+>;xorl %eax, %eax": 1,
                "xaddl %eax, (%ecx);incl -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp,%ebx);movl (%esi), %eax": 1,
                "jb - <NtWaitForSingleObject+>;cmpl $, (%ebp);jne  <NtWaitForSingleObject+>;xorl %ecx, %ecx;leal (%ecx), %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <KeWaitForMultipleObjects>": 1,
                "calll - <ExFreePoolWithTag>;cmpb $, -(%ebp);je  <NtWaitForSingleObject+>;incl (%edi);jne  <NtWaitForSingleObject+>": 1,
                "je  <NtWaitForSingleObject+>;incl (%edi);jne  <NtWaitForSingleObject+>;leal (%edi), %eax;cmpl %eax, (%eax)": 1,
                "pushl %ebx;pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %esi": 1,
                "cmpl $, (%ebp);je  <NtWaitForSingleObject+>;movl $, %eax;cmpl %eax, %ebx;ja  <NtWaitForSingleObject+>": 1,
                "movl (%edi), %esi;incl (%esi);movl %esi, %ecx;calll - <InterlockedPopEntrySList>;testl %eax, %eax": 2,
                "movl (%ebp), %ecx;movw (%ebp), %dx;movw %bx, (%ecx);movw %dx, (%ecx);movl %eax, (%ecx)": 1,
                "je  <NtWaitForSingleObject+>;pushl $;pushl %edx;calll - <ExFreePoolWithTag>;retl": 1,
                "pushl %edx;calll *(%ecx);retl;jmp - <InterlockedPushEntrySList>;int": 2,
                "je  <NtWaitForSingleObject+>;movl (%eax), %ecx;testl %ecx, %ecx;je  <NtWaitForSingleObject+>;movsbl (%eax), %eax": 1,
                "pushl %edi;movl %ds:, %eax;movl (%eax), %ecx;movw (%ecx), %di;incl (%ecx)": 1,
                "cmpl %edx, %ecx;pushl %edi;movl (%ebp), %edi;jne  <NtWaitForSingleObject+>;pushl $": 1,
                "movl %ebx, (%ebp);jmp  <NtWaitForSingleObject+>;movl (%ecx), %eax;cmpl (%edi), %eax;jne  <NtWaitForSingleObject+>": 1,
                "movl (%ecx), %eax;cmpl (%edi), %eax;jne  <NtWaitForSingleObject+>;movl (%ecx), %eax;cmpl (%edi), %eax": 1,
                "negl %ebx;movl %eax, (%ebp);movb (%edi), %al;sbbl %ebx, %ebx;andl $, %ebx": 1,
                "xorl %edx, %edx;incl %edx;testl %edi, %edi;movl $, %eax;je  <NtWaitForSingleObject+>": 1,
                "movl $, %eax;je  <NtWaitForSingleObject+>;movl (%edi), %eax;orl $, %eax;pushl %eax": 1,
                "movl (%ebp), %eax;addl %eax, %ecx;pushl %ecx;pushl %edx;calll - <ExAllocatePoolWithTag>": 1,
                "movl %eax, %edx;testl %edx, %edx;jne  <NtWaitForSingleObject+>;movl $, %eax;jmp  <NtWaitForSingleObject+>": 1,
                "addl $, %edx;cmpl $, (%ebp);je  <NtWaitForSingleObject+>;andw $, (%edx);movl %fs:, %eax": 1,
                "jmp  <NtWaitForSingleObject+>;movb $, (%edx);xorl %ecx, %ecx;cmpl %ecx, %ebx;je  <NtWaitForSingleObject+>": 1,
                "movl %ecx, (%edx);movl %edi, (%edx);jne  <NtWaitForSingleObject+>;orb $, (%edx);movl (%ebp), %eax": 1,
                "orb $, (%edx);testb $, (%eax);je  <NtWaitForSingleObject+>;orb $, (%edx);cmpl %ecx, %edi": 1,
                "je  <NtWaitForSingleObject+>;leal (%edi), %esi;movl %esi, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "jne  <NtWaitForSingleObject+>;movl %ebx, -(%ebp);jmp  <NtWaitForSingleObject+>;movzbl %al, %edx;movl %esi, %eax": 2,
                "movl %esi, %eax;subl %edx, %eax;movl %eax, -(%ebp);je  <NtWaitForSingleObject+>;movl %eax, -(%ebp)": 2,
                "movb (%esi), %al;cmpb %bl, %al;jne  <NtWaitForSingleObject+>;xorl %edx, %edx;jmp  <NtWaitForSingleObject+>": 1,
                "subl %eax, %edx;je  <NtWaitForSingleObject+>;movl %edx, -(%ebp);addl $, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movb (%esi), %cl": 1,
                "movl %ebx, (%eax);movl (%esi), %edx;movl %ds:, %eax;movl (%eax), %ecx;movw (%ecx), %di": 1,
                "cmpl %ebx, %edi;je  <NtWaitForSingleObject+>;movl (%edi), %eax;cmpl %ebx, %eax;je  <NtWaitForSingleObject+>": 1,
                "jmp  <NtWaitForSingleObject+>;movl (%eax), %eax;orl $, %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;leave;retl;int": 1,
                "int;movl %edi, %edi;pushl %esi;movl %ecx, %edx;movl %ds:, %eax": 1,
                "pushl %esi;movl %ecx, %edx;movl %ds:, %eax;movl (%eax), %ecx;movw (%ecx), %si": 1,
                "movl %ecx, %edx;movl %ds:, %eax;movl (%eax), %ecx;movw (%ecx), %si;incl (%ecx)": 1,
                "jb  <NtWaitForSingleObject+>;movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %ecx;jmp  <NtWaitForSingleObject+>": 1,
                "cmpl $, %ebx;je  <NtWaitForSingleObject+>;pushl %edi;pushl (%ebp);pushl %ebx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);shrl %ebx;andw $, (%eax,%ebx,);jmp  <NtWaitForSingleObject+>": 1,
                "popl %ecx;xorl %eax, %eax;movl (%ebp), %ebx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "cmpb $, (%ebp);je  <NtWaitForSingleObject+>;testb $, %al;je  <NtWaitForSingleObject+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "movl (%ebp), %eax;movl , %ecx;cmpl %ecx, %eax;jb  <NtWaitForSingleObject+>;movl %esi, (%ecx)": 1,
                "jb  <NtWaitForSingleObject+>;movl %esi, (%eax);leal (%ebx), %eax;movl -(%ebp), %esi;movl %eax, %edi": 1,
                "leal (%ebx), %eax;movl -(%ebp), %esi;movl %eax, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl %eax, (%ebx);xorl %esi, %esi;jmp  <NtWaitForSingleObject+>": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);orl $-, -(%ebp);movl (%ebp), %ebx": 2,
                "testl %edi, %edi;jne  <ObCreateObject+>;pushl (%esi);incl (%esi);pushl (%esi)": 1,
                "jne  <ObCreateObject+>;pushl (%esi);incl (%esi);pushl (%esi);pushl (%esi)": 1,
                "jmp  <ObCreateObject+>;movl (%ebp), %esi;pushl $;pushl %edi;leal -(%ebp), %eax": 1,
                "movl (%eax), %ecx;movw (%ecx), %dx;incl (%ecx);cmpw (%ecx), %dx;jb  <ObCreateObject+>": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jl - <ObCreateObject+>;movl (%ebp), %edi;movl (%ebp), %esi": 1,
                "je  <ObCreateObject+>;pushl (%ebp);pushl ;pushl ;calll  <SeSinglePrivilegeCheck>": 1,
                "movzwl %dx, %eax;shrl %eax;je  <ObCreateObjectType+>;movw (%ecx), %dx;decl %eax": 1,
                "movl $, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp);calll - <NtDuplicateObject+>;testl %eax, %eax": 1,
                "andl $-, %edi;leal -(%edi), %eax;andl $-, %eax;movl %esi, (%ebp);movl %edi, -(%ebp)": 3,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne  <ObCreateObjectType+>;movl (%edi), %eax": 3,
                "je  <ObCreateObjectType+>;pushl %esi;pushl %eax;calll - <ExFreePoolWithTag>;movl %esi, (%edi)": 1,
                "calll - <ObfDereferenceObject>;movl $, %eax;jmp  <ObCreateObjectType+>;xorl %ebx, %ebx;movzwl (%esi), %eax": 1,
                "pushl $;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax": 3,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <ObCreateObjectType+>;cmpb $, -(%ebp)": 1,
                "calll *;movl %ebx, -(%ebp);movb $, -(%ebp);movl -(%ebp), %edi;cmpl %ebx, %edi": 2,
                "jmp  <ObCreateObjectType+>;movw (%esi), %ax;movw %ax, -(%ebp);pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %ebx;calll - <NtWaitForSingleObject+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jge  <ObCreateObjectType+>": 1,
                "jmp  <ObCreateObjectType+>;movl (%ebp), %eax;orb $, (%eax);movl (%ebp), %ebx;movl -(%ebp), %eax": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;addl $, %ebx;movl %eax, (%ebx);xorl %eax, %eax": 1,
                "pushl %eax;calll  <RtlUnicodeStringToAnsiString>;testl %eax, %eax;jl  <ObCreateObjectType+>;pushl $": 1,
                "movl %eax, %esi;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %esi;movl %esi, (%ebx);testb $, ": 1,
                "popl %ecx;popl %ecx;jne  <ObCreateObjectType+>;movl $, (%ebx);jmp  <ObCreateObjectType+>": 2,
                "je  <ObCreateObjectType+>;movl , %ecx;movl (%ecx), %edx;addl $, %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <ObCreateObjectType+>;movl %edi, %ecx": 1,
                "pushl $;pushl %esi;calll - <ExAcquireResourceExclusiveLite>;andl $, -(%ebp);addl $, %esi": 1,
                "calll - <ObfReferenceObject+>;testb %al, %al;jne  <ObCreateObjectType+>;andl $, (%ebx);movl (%edi), %edi": 1,
                "movl (%edi), %edi;addl $, %ebx;cmpl %esi, %edi;jne - <ObCreateObjectType+>;popl %ebx": 1,
                "je  <ObCreateObjectType+>;leal (%eax), %edi;movl %edi, -(%ebp);addl $, %edi;movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);addl $, %edi;movl %edi, -(%ebp);cmpl , %edi;je  <ObCreateObjectType+>": 1,
                "movl %ecx, %edx;subl -(%ebp), %edx;cmpl %ecx, -(%ebp);sbbl %ecx, %ecx;andl %edx, %ecx": 1,
                "addl $-, %ecx;movl -(%ebp), %eax;movw %cx, (%eax);movl (%ebp), %ecx;subl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;jmp  <ObCreateObjectType+>;movl -(%ebp), %ecx;cmpl (%ebp), %ecx;jae  <ObCreateObjectType+>": 1,
                "jae  <ObCreateObjectType+>;movl %ecx, (%esi);movl -(%ebp), %ecx;movl -(%ebp), %edx;leal (%ecx,%edx), %esi": 1,
                "addl $, -(%ebp);movl -(%ebp), %ecx;cmpl (%ebp), %ecx;jb  <ObCreateObjectType+>;movl $, -(%ebp)": 2,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <ObCreateObjectType+>;movl (%eax), %edx;movl %edx, (%esi)": 1,
                "cmpl , %edi;jne  <ObCreateObjectType+>;movl (%ecx), %eax;leal -(%ebp), %ebx;movl %eax, (%ebx)": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <ObCreateObjectType+>;addl $, %eax;andl $-, %eax": 1,
                "movw (%ebx), %ax;testw %ax, %ax;je  <ObCreateObjectType+>;movl -(%ebp), %ecx;cmpl (%ebp), %ecx": 1,
                "cmpw %ax, (%ebx);jne  <ObCreateObjectType+>;movl (%ebp), %ecx;cmpl %ecx, -(%ebp);jae  <ObCreateObjectType+>": 1,
                "calll - <RtlInitUnicodeString>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <ObCreateObjectType+>;addl $, -(%ebp)": 1,
                "addl $, -(%ebp);movl -(%ebp), %eax;cmpl (%ebp), %eax;jae - <ObCreateObjectType+>;pushl $": 1,
                "incl -(%ebp);movl -(%ebp), %ebx;movl -(%ebp), %eax;jmp - <ObCreateObjectType+>;pushl %eax": 1,
                "je  <ObCreateObjectType+>;cmpl %edi, (%esi);movl %edi, (%ebp);jbe  <ObCreateObjectType+>;pushl %ebx": 1,
                "leal (%eax), %ecx;movb (%ecx), %al;testb %al, %al;je  <ObCreateObjectType+>;movzbl %al, %edx": 1,
                "xorl (%edx), %eax;addl $, %edx;roll $, %eax;cmpl %ecx, %edx;jb - <ObCreateObjectType+>": 1,
                "incl %ecx;roll $, %eax;cmpl %esi, %ecx;jb - <ObCreateObjectType+>;popl %esi": 1,
                "cmpl %esi, %ecx;jb - <ObCreateObjectType+>;popl %esi;popl %ebp;retl $": 1,
                "pushl %edi;pushl (%ebp);calll  <RtlLengthSecurityDescriptor>;movl (%ebp), %edi;pushl %edi": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <ObLogSecurityDescriptor+>": 2,
                "testb %al, %al;jne  <ObLogSecurityDescriptor+>;movl -(%ebp), %eax;testl %eax, %eax;jne  <ObLogSecurityDescriptor+>": 1,
                "je  <ObLogSecurityDescriptor+>;movl %ebx, %ecx;calll  <ExfReleasePushLock>;incl (%edi);jne  <ObLogSecurityDescriptor+>": 3,
                "je - <ObLogSecurityDescriptor+>;movl %ebx, %ecx;calll  <ExfAcquirePushLockExclusive>;jmp - <ObLogSecurityDescriptor+>;movl -(%ebp), %eax": 1,
                "xaddl %eax, (%ecx);movl (%ebx), %esi;andl $-, %esi;leal -(%esi), %eax;andl $-, %eax": 1,
                "cmpl $, -(%ebp);movl %eax, (%ecx);je  <ObLogSecurityDescriptor+>;pushl $;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <ObLogSecurityDescriptor+>;movl $, %eax;jmp  <ObLogSecurityDescriptor+>": 1,
                "movl (%ebp), %ecx;addl $, %eax;movl %eax, (%ecx);xorl %eax, %eax;popl %edi": 1,
                "movl (%ebp), %eax;addl $-, %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "andl %edx, %ebx;andl $-, %esi;cmpl $, %ebx;jae  <ObReferenceSecurityDescriptor+>;testl %esi, %esi": 1,
                "movl (%edi), %edi;andl $-, %edi;leal -(%edi), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "movl %eax, (%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);movl (%edi), %ebx": 1,
                "leal (%edi), %ebx;movl (%ebx), %esi;cmpl (%ebp), %esi;movl %esi, (%ebp);je  <ObDereferenceSecurityDescriptor+>": 1,
                "je  <ObDereferenceSecurityDescriptor+>;movl %ebx, -(%ebp);movl %esi, %eax;subl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "leal (%edx,%edx,), %eax;leal (,%eax,), %eax;movl %eax, (%ebp);movl %fs:, %eax;movl %eax, %esi": 1,
                "je  <ObDereferenceSecurityDescriptor+>;movl (%ebp), %ecx;calll  <ExfAcquirePushLockExclusive>;movl (%ebp), %eax;negl %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;xorl %ecx, %ecx;movb (%eax), %cl;pushl $": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %esi;movb $, -(%ebp);calll - <ObMakeTemporaryObject+>": 1,
                "pushl %esi;calll - <KeStackAttachProcess>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movb $, %cl;movb $, (%ebx);calll *;pushl -(%ebp);calll - <IoSetThreadHardErrorMode>": 1,
                "andl $, (%eax);pushl $;pushl %edi;calll  <ExInitializePagedLookasideList+>;popl %ebx": 1,
                "calll  <ExInitializePagedLookasideList+>;popl %ebx;popl %edi;popl %esi;leave": 1,
                "xorb %al, %al;jmp  <ObDereferenceSecurityDescriptor+>;movb $, %al;popl %edi;popl %esi": 1,
                "cmpl %ebx, %eax;je  <ObFindHandleForObject+>;movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <ObFindHandleForObject+>": 1,
                "incl %esp;addb %ch, (%edi);jae  <ObFindHandleForObject+>;incl %esp;addb %ah, (%ebp)": 1,
                "decl %edi;addb %cl, (%edi);pushl %esp;addb %al, (%eax);addb %cl, %ah": 2,
                "je  <ObFindHandleForObject+>;decl %eax;je  <ObFindHandleForObject+>;movl , %ebx;addl $, %ebx": 1,
                "leal (%esi), %eax;movl (%esi), %esi;pushl %eax;calll - <ObMakeTemporaryObject>;cmpl %ebx, %esi": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl $;movl %edi, (%ebp);pushl (%eax);calll  <ExEnumHandleTable>;jmp  <ObFindHandleForObject+>": 1,
                "movl %eax, -(%ebp);movl %edi, -(%ebp);jne  <ObFindHandleForObject+>;xorl %ebx, %ebx;jmp  <ObFindHandleForObject+>": 1,
                "subl %edx, %ebx;cmpl $, -(%ebp);je  <ObFindHandleForObject+>;cmpl -(%ebp), %eax;jne  <ObFindHandleForObject+>": 1,
                "jne  <ObFindHandleForObject+>;movl -(%ebp), %eax;andl $, -(%ebp);cmpl %eax, -(%ebp);jbe  <ObFindHandleForObject+>": 1,
                "testb %cl, %cl;jne  <ObFindHandleForObject+>;xorl %eax, %eax;jmp  <ObFindHandleForObject+>;movzbl %cl, %ecx": 1,
                "movl (%eax), %eax;testb $, %al;jne  <ObFindHandleForObject+>;pushl (%ebp);pushl (%ebp)": 1,
                "movl %eax, -(%ebp);jmp  <ObFindHandleForObject+>;movl , %eax;movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "pushl (%esi);pushl %edi;pushl (%ebp);pushl $;calll - <ObMakeTemporaryObject+>": 1,
                "movl $, %eax;jmp  <ObFindHandleForObject+>;movl (%ebp), %esi;pushl $;pushl %ebx": 1,
                "calll  <ExInitializePagedLookasideList+>;movl %eax, %edi;testl %edi, %edi;je  <ObFindHandleForObject+>;xorl %ecx, %ecx": 1,
                "je  <ObFindHandleForObject+>;movl (%ebp), %eax;pushl $;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %edi;movl %esi, -(%ebp);calll  <ExEnumHandleTable>;testl %ebx, %ebx;je  <ObFindHandleForObject+>": 1,
                "xorl %ebx, %ebx;movl %ecx, -(%ebp);movb (%eax), %cl;cmpb %bl, %cl;pushl %esi": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl -(%ebp), %eax;je  <ObInsertObject+>": 1,
                "je  <ObInsertObject+>;leal (%esi), %eax;movl %eax, -(%ebp);movl %fs:, %eax;movb (%eax), %al": 1,
                "movl %ebx, (%esi);calll - <ObfReferenceObject+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;jmp  <ObInsertObject+>": 1,
                "calll - <ObfReferenceObject+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;jmp  <ObInsertObject+>;cmpl %ebx, (%ebp)": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp - <ObInsertObject+>;movl (%ebp), %eax": 1,
                "movl (%edi), %ecx;pushl %eax;movl %ecx, (%eax);calll - <ObAssignSecurity+>;cmpl %ebx, %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movl (%ebp), %eax": 1,
                "movzbl (%eax), %eax;pushl (%edi);shrb %al;notb %al;andl $, %eax": 1,
                "cmpl %eax, -(%ebp);je  <ObInsertObject+>;cmpl , %eax;jne  <ObInsertObject+>;calll - <ObfDereferenceObject>": 1,
                "movl $, (%ebp);jmp  <ObInsertObject+>;movl $, (%ebp);movl , %eax;cmpl %eax, -(%ebp)": 1,
                "pushl %eax;pushl (%ebp);leal -(%ebp), %eax;pushl -(%ebp);pushl %eax": 1,
                "cmpxchgl %edx, (%ecx);cmpl %edi, %eax;je  <ObInsertObject+>;movl (%ebp), %ecx;calll  <ExfReleasePushLock>": 2,
                "jne  <ObInsertObject+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <ObInsertObject+>;movb $, %cl": 5,
                "subl $, %edi;je  <ObInsertObject+>;leal (%edi), %eax;movl %eax, (%ebp);movl $, %eax": 2,
                "xorl %eax, %eax;movb (%edi), %al;pushl $;pushl %eax;pushl (%edi)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <NtDuplicateObject+>;cmpb %bl, -(%ebp);je  <ObInsertObject+>": 1,
                "calll - <ObfDereferenceObject>;cmpl %ebx, %esi;je  <ObInsertObject+>;leal (%esi), %eax;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;leal -(%ebp), %eax;cmpl %eax, (%ebp);jne  <ObInsertObject+>": 1,
                "leal (%ebp), %eax;pushl %eax;pushl -(%ebp);movl (%ebp), %eax;addl $-, %eax": 1,
                "je  <ObInsertObject+>;movb $, %cl;movb $, (%eax);calll *;cmpl %ebx, -(%ebp)": 1,
                "movl %edi, %edx;calll - <InterlockedPushEntrySList>;leal -(%ebp), %eax;cmpl %eax, (%ebp);jne  <ObInsertObject+>": 1,
                "calll  <SeDeleteAccessState>;movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "jmp  <ObInsertObject+>;movl (%ebx), %ecx;cmpw $, (%ecx);je  <ObInsertObject+>;movl $, -(%ebp)": 1,
                "movl (%ebp), %esi;movl %esi, -(%ebp);movl (%esi), %ecx;cmpl %eax, %ecx;je  <ObInsertObject+>": 1,
                "cmpl %eax, %ecx;je  <ObInsertObject+>;leal (%esi), %edi;movl %edi, -(%ebp);movw (%edi), %ax": 1,
                "movzwl (%ebx), %edx;addl -(%ebp), %edx;leal (%edx,%eax,), %eax;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "leal (%edx,%eax,), %eax;movl %eax, -(%ebp);cmpl $, %eax;ja  <ObInsertObject+>;movl %eax, -(%ebp)": 1,
                "movl (%ebx), %ecx;subl %esi, %ecx;sarl %ecx;shll %ecx;leal (%ecx,%eax), %edx": 1,
                "movw -(%ebp), %cx;movw %cx, (%esi);movl %edx, (%ebx);subl %eax, %edx;movzwl %dx, %ecx": 1,
                "movw %ax, (%ebx);jmp  <ObInsertObject+>;movw (%ebx), %ax;testw %ax, %ax;je  <ObInsertObject+>": 1,
                "movw %dx, (%eax);movzwl (%ecx), %ecx;movzwl (%ebx), %edx;addl %edx, %ecx;movw %cx, (%ebx)": 1,
                "movw (%ebx), %dx;leal (%edx,%ecx), %ecx;movw %cx, (%ebx);movzwl (%eax), %ecx;shrl %ecx": 1,
                "movl %edi, %eax;shrl %eax;movl (%esi), %ecx;cmpw $, -(%ecx,%eax,);jne  <ObInsertObject+>": 1,
                "cmpw $, (%ebx);je  <ObInsertObject+>;movl (%ebx), %eax;cmpw $, (%eax);jne  <ObInsertObject+>": 1,
                "je  <ObInsertObject+>;movl (%ebx), %eax;cmpw $, (%eax);jne  <ObInsertObject+>;decl %edi": 1,
                "andw $, (%edi,%eax,);movl (%ebp), %esi;movl (%esi), %eax;cmpl %eax, %edi;je  <ObInsertObject+>": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <ObInsertObject+>": 1,
                "je  <ObInsertObject+>;xorl %esi, %esi;movl %esi, -(%ebp);testb $, (%ebp);je  <ObInsertObject+>": 1,
                "movl %esi, (%eax);movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <ObInsertObject+>": 1,
                "movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <ObInsertObject+>;movl %esi, (%eax)": 2,
                "movw -(%ebp), %di;cmpw %si, %di;je  <ObInsertObject+>;movzwl %di, %edx;addl %ecx, %edx": 1,
                "addl %ecx, %edx;cmpl %ecx, %edx;jb  <ObInsertObject+>;cmpl %eax, %edx;jbe  <ObInsertObject+>": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <ObInsertObject+>;movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);xorl %edi, %edi;movw -(%ebp), %di": 1,
                "movw -(%ebp), %ax;movw %ax, (%ebx);movzwl %di, %edi;pushl $;pushl %edi": 1,
                "pushl %eax;pushl $;pushl (%ebp);pushl $;pushl %ebx": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);jmp  <ObInsertObject+>": 1,
                "movl -(%ebp), %eax;jmp  <ObInsertObject+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movb (%eax), %al;movb %al, -(%ebp);xorl %esi, %esi;testb %al, %al;je  <ObInsertObject+>": 1,
                "jmp  <ObInsertObject+>;movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "pushl %eax;calll - <ExAcquireResourceExclusiveLite>;testl %edi, %edi;je  <ObInsertObject+>;movw (%esi), %ax": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %eax;movw (%eax), %cx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %eax;movw (%eax), %cx;movw %cx, (%ebx)": 1,
                "movl %eax, (%ecx);orl $-, -(%ebp);movl -(%ebp), %esi;jmp  <ObInsertObject+>;xorl %eax, %eax": 1,
                "jne  <ObInsertObject+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <ObInsertObject+>;movb $, (%eax)": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;leal -(%ebx), %eax;movb (%eax), %cl": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;testb %cl, %cl;movl $, -(%ebp)": 1,
                "cmpl %edi, (%ebp);movb $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "je  <ObInsertObject+>;cmpl %edi, (%ebx);je  <ObInsertObject+>;cmpl %edi, ;movl , %eax": 1,
                "je  <ObInsertObject+>;cmpl %edi, ;movl , %eax;movl (%ebx), %esi;movl %eax, -(%ebp)": 1,
                "cmpl , %edx;jne  <ObInsertObject+>;movl %ecx, -(%ebp);movzwl %ax, %ecx;shrl %ecx": 1,
                "pushl $;pushl -(%ebp);calll  <SeQueryInformationToken+>;pushl -(%ebp);movb %al, %bl": 1,
                "incl -(%ebp);movl %eax, -(%ebp,%ecx,);movl -(%ebp), %ebx;cmpl -(%ebp), %ebx;jne  <ObInsertObject+>": 1,
                "movb %cl, -(%ebp);cmpl %edi, %eax;je  <ObInsertObject+>;movl -(%eax), %ecx;cmpl , %ecx": 1,
                "cmpl , %ecx;jne  <ObInsertObject+>;cmpl %edi, (%eax);jne  <ObInsertObject+>;cmpl %edi, -(%ebp)": 1,
                "movl , %ecx;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %ecx, -(%ebp);jne  <ObInsertObject+>": 1,
                "movl -(%ebp,%edx,), %ecx;decl %edx;cmpl %edi, (%ebp);jne  <ObInsertObject+>;cmpl %edi, %eax": 1,
                "movl -(%ebp), %eax;movb (%eax), %cl;testb %cl, %cl;je  <ObInsertObject+>;movzbl %cl, %ecx": 1,
                "cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <ObInsertObject+>;movl %eax, %esi;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <ObInsertObject+>;andl $, (%esi);pushl %eax;calll - <ObfReferenceObject+>": 1,
                "movl -(%ecx), %eax;cmpl , %eax;jne  <ObInsertObject+>;movl (%ecx), %eax;cmpl $, %eax": 1,
                "movl -(%ebp), %eax;testb $-, (%eax);je  <ObInsertObject+>;movl (%eax), %esi;addl $, %esi": 1,
                "movl %esi, %ecx;calll  <ExfReleasePushLock>;movl -(%ebp), %esi;jmp - <ObInsertObject+>;movb (%ecx), %al": 1,
                "cmpl $, %eax;je  <ObInsertObject+>;cmpl $, %eax;je  <ObInsertObject+>;cmpl $, %eax": 1,
                "cmpl $, %eax;je  <ObInsertObject+>;xorl %ebx, %ebx;jmp  <ObInsertObject+>;pushl $": 1,
                "movl (%eax), %ecx;xorl %eax, %eax;incl %eax;decl %ecx;shll %cl, %eax": 1,
                "calll *;movl (%ebx), %ecx;xorl %eax, %eax;incl %eax;decl %ecx": 1,
                "movb $, (%eax,%edi);cmpl , %edi;jne  <ObInsertObject+>;movl (%ebx), %ecx;xorl %eax, %eax": 1,
                "je  <ObInsertObject+>;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>;movw %di, (%esi)": 1,
                "calll - <ObfReferenceObject+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;movb -(%eax), %cl;pushl %ebx;addl $-, %eax;xorl %ebx, %ebx": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %edi, %eax;je  <ObInsertObject+>;movl %eax, %edi": 1,
                "cmpl %ebx, %eax;je  <ObInsertObject+>;cmpl %ebx, (%eax);je  <ObInsertObject+>;cmpw $, (%esi)": 1,
                "movl -(%eax), %esi;movzwl (%esi), %eax;movl %eax, -(%ebp);addl $, %eax;andl $, -(%ebp)": 1,
                "addl $, %ecx;movw %cx, (%edx);movl %eax, (%edx);jmp  <ObInsertObject+>;xorl %eax, %eax": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%eax), %ecx;movl %ecx, (%edx)": 1,
                "movw %cx, (%edx);movw (%eax), %cx;movw %cx, (%edx);movzwl (%eax), %ecx;movl (%eax), %esi": 1,
                "jmp  <ObQueryObjectAuditingByHandle+>;andl $-, (%ecx);cmpb $, (%edx);movl , %eax;je  <ObQueryObjectAuditingByHandle+>": 1,
                "je  <ObQueryObjectAuditingByHandle+>;orl %eax, (%ecx);jmp  <ObQueryObjectAuditingByHandle+>;notl %eax;andl %eax, (%ecx)": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;pushl %edi;pushl %esi": 1,
                "sbbl %eax, %eax;andl $, %eax;addl $, %eax;testb %bl, %bl;movl %eax, %esi": 1,
                "cmpl $, (%ebp);jne  <ObSetHandleAttributes+>;cmpl $, (%ebp);je  <ObSetHandleAttributes+>;movl $, %eax": 1,
                "jne  <ObSetHandleAttributes+>;cmpl $, (%ebp);je  <ObSetHandleAttributes+>;movl $, %eax;jmp  <ObSetHandleAttributes+>": 1,
                "jmp  <ObSetHandleAttributes+>;movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);andl $, -(%ebp)": 1,
                "leal (%esi), %eax;cmpl %esi, %eax;jb  <ObSetHandleAttributes+>;cmpl , %eax;jbe  <ObSetHandleAttributes+>": 1,
                "addb %ch, %cs:(%esi);addb %ch, (%esi);addb %al, (%eax);addb %cl, %ah;int": 1,
                "movl %eax, -(%ebp);movl (%eax), %esi;testl %esi, %esi;jmp  <ObQueryNameString+>;leal (%esi), %eax": 3,
                "xorb %al, %al;jmp  <ObQueryNameString+>;movb $, %al;testb %al, %al;je  <ObQueryNameString+>": 5,
                "movl %ebx, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "je  <ObQueryNameString+>;andl $, -(%ebp);testl %ebx, %ebx;je  <ObQueryNameString+>;cmpw $, (%ebx)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %eax;pushl (%ebp)": 7,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);decl %eax;jne  <ObQueryNameString+>;movl (%ebx), %eax": 5,
                "decl %eax;jne  <ObQueryNameString+>;movl (%ebx), %eax;cmpl %esi, %eax;je  <ObQueryNameString+>": 2,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);cmpl , %esi;je  <ObQueryNameString+>;testl %esi, %esi": 2,
                "jmp  <ObQueryNameString+>;movl %eax, %esi;jmp - <ObQueryNameString+>;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 2,
                "testl %esi, %esi;je  <ObQueryNameString+>;movzwl (%ebx), %eax;leal (%edi,%eax), %edi;movl %edi, -(%ebp)": 1,
                "calll - <ObfReferenceObject+>;xorl %ebx, %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 2,
                "jmp  <ObQueryNameString+>;leal (%edi), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl (%ebp), %ecx": 1,
                "retl;movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);movb $, -(%ebp)": 1,
                "xorl %ebx, %ebx;jmp  <ObQueryNameString+>;movl -(%ebp), %ebx;xorl %esi, %esi;cmpl %esi, %ebx": 1,
                "movl %esi, -(%ebp);retl;movzbl %al, %eax;subl %eax, %ebx;cmpl %esi, %ebx": 1,
                "je - <ObQueryNameString+>;movl $, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl $, -(%ebp);decl %eax;decl %eax": 1,
                "cmpl -(%ebp), %edx;ja  <ObQueryNameString+>;movb $, -(%ebp);jmp  <ObQueryNameString+>;movl (%eax), %esi": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebx), %esi;movl %esi, -(%ebp);testl %esi, %esi;je  <ObQueryNameString+>": 2,
                "calll - <ExFreePoolWithTag>;movl %edi, (%ebx);movw %di, (%ebx);movw %di, (%ebx);movl (%ebx), %eax": 2,
                "cmpl %eax, -(%ebp);jae  <ObQueryNameString+>;movl %eax, -(%ebp);movl $, %esi;movl -(%ebp), %eax": 1,
                "movsw (%esi), %es:(%edi);cmpl -(%ebp), %eax;jne  <ObQueryNameString+>;incl %eax;incl %eax": 1,
                "movl %eax, -(%ebp);subl $, -(%ebp);movl -(%ebp), %eax;movw $, (%eax);movl (%ebp), %eax": 1,
                "addl $, %esi;movl (%ebp), %eax;movl %esi, (%eax);movl $, -(%ebp);jmp  <ObQueryNameString+>": 1,
                "jmp  <ObQueryNameString+>;xorl %eax, %eax;incl %eax;retl;movl -(%ebp), %esp": 3,
                "movb $, -(%ebp);jmp - <ObQueryNameString+>;movl -(%ebp), %eax;jmp  <ObQueryNameString+>;movl $, -(%ebp)": 1,
                "calll - <ObfReferenceObject+>;movl $, %eax;jmp  <ObQueryNameString+>;movl $, -(%ebp);movl (%ebp), %eax": 1,
                "movl (%esi), %eax;xorl %edi, %edi;cmpl %edi, %eax;je  <ObQueryNameString+>;pushl %edi": 2,
                "movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);testb %al, %al;je  <ObQueryNameString+>": 1,
                "movl %esi, -(%ebp);movl (%ebp), %edi;cmpl $, (%ebp);je  <ObQueryNameString+>;pushl $": 1,
                "cmpl $, (%ebp);je  <ObQueryNameString+>;pushl $;jmp  <ObQueryNameString+>;pushl $": 1,
                "je  <ObQueryNameString+>;movl , %eax;cmpl %eax, %ecx;jb  <ObQueryNameString+>;movl %esi, (%eax)": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp);cmpl %esi, %eax;jl  <ObQueryNameString+>": 1,
                "xorl %ebx, %ebx;xorl %edx, %edx;movl %ebx, -(%ebp);xorl %esi, %esi;movl %edx, -(%ebp)": 1,
                "cmpl %edx, (%ebp);jae  <ObQueryNameString+>;movl $, -(%ebp);leal (%eax), %esi;movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);leal (%eax), %esi;movl %esi, -(%ebp);andl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "subl %ecx, %eax;testl %eax, %eax;je  <ObQueryNameString+>;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "jmp  <ObQueryNameString+>;andl $, -(%ebp);andl $, -(%ebp);cmpl , %ebx;jne  <ObQueryNameString+>": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %edi, %eax;je  <ObQueryNameString+>": 2,
                "je  <ObQueryNameString+>;movl %eax, %edi;movl %edi, -(%ebp);movl %edi, %ecx;calll - <ObfReferenceObject>": 1,
                "movl (%esi), %eax;cmpl %edi, %eax;je  <ObQueryNameString+>;pushl %edi;pushl %eax": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %ebx, -(%ebp);cmpl %edi, %ebx;jne - <ObQueryNameString+>": 1,
                "pushl %edx;pushl (%ecx);pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll *(%ecx);jmp  <ObQueryNameString+>;andl $, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl %esi;movl $, %esi;movl %esi, %ecx;calll *;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <ObQueryNameString+>;movl (%eax), %eax;jmp  <ObQueryNameString+>": 1,
                "pushl ;pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;cmpl %edi, %eax": 2,
                "movl %esi, (%ebp);jne - <ObQueryNameString+>;xorl %edi, %edi;movl %fs:, %eax;decl (%eax)": 2,
                "popl %edi;popl %ebx;leave;retl $;testb $-, (%edi)": 1,
                "cmpl $, (%esi);je - <ObQueryNameString+>;movl %esi, %ecx;calll  <ExfAcquirePushLockExclusive>;movl %esi, %ecx": 2,
                "movl %ecx, %esi;incl (%esi);jmp  <ObQueryNameString+>;movl %esi, (%eax);cmpl $, (%ebp)": 1,
                "incl (%esi);jmp  <ObQueryNameString+>;movl %esi, (%eax);cmpl $, (%ebp);jne  <ObQueryNameString+>": 1,
                "jmp  <ObQueryNameString+>;movl -(%ebp), %eax;movl , %ecx;movl (%ecx), %ecx;movl -(%ebp), %ebx": 1,
                "pushl $;leal (%esi,%eax), %eax;pushl %eax;calll - <ExAcquireResourceExclusiveLite>;testl %edi, %edi": 1,
                "je  <ObQueryNameString+>;orb $, (%ebx);movl (%ebx), %eax;leal (%esi,%eax), %ecx;calll - <ExReleaseResourceLite>": 1,
                "xaddl %eax, (%ecx);decl %eax;jne  <ObQueryNameString+>;movl (%edi), %eax;xorl %esi, %esi": 1,
                "movl $, %eax;jmp  <ObQueryNameString+>;andl $, -(%ebp);movl %esi, %edx;movl (%esi), %eax": 1,
                "testl %eax, %eax;je  <ObQueryNameString+>;movl %eax, %edx;movl (%esi), %edi;movl %edi, -(%ebp)": 1,
                "movb %bl, (%ecx);testl %edi, -(%ebp);jne  <ObQueryNameString+>;cmpb $, -(%ebp);je  <ObQueryNameString+>": 1,
                "shll -(%ebp);cmpl $, %eax;jb - <ObQueryNameString+>;movl $, %ecx;calll *": 1,
                "jb - <ObQueryNameString+>;movl $, %ecx;calll *;cmpb $, -(%ebp);jne  <ObQueryNameString+>": 1,
                "testl %esi, %esi;pushl %edi;movl %ecx, %edi;je  <ObQueryNameString+>;pushl $": 1,
                "calll - <ObfReferenceObject+>;orl $, %esi;movl %esi, (%edi);popl %edi;popl %esi": 1,
                "movl %esi, (%edi);popl %edi;popl %esi;retl;andl $, (%edi)": 1,
                "movl %esi, -(%ebp);movl (%esi), %ebx;testb $, %bl;movl %ebx, -(%ebp);je  <ObQueryNameString+>": 1,
                "movl (%esi), %ebx;testb $, %bl;movl %ebx, -(%ebp);je  <ObQueryNameString+>;leal -(%ebx), %eax": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne - <ObQueryNameString+>;pushl $": 1,
                "movl %eax, %esi;je  <ObQueryNameString+>;movl %esi, %ecx;calll - <ObfReferenceObject>;movl %esi, %eax": 1,
                "movl %edx, %ebx;movl %edi, -(%ebp);movl (%edi), %esi;movl %esi, %eax;xorl %ebx, %eax": 1,
                "popl %edx;movl %esi, %ecx;calll - <ObfReferenceObject+>;orl $, %esi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx);movl %eax, %esi;andl $-, %esi": 1,
                "movl %fs:, %eax;pushl %eax;calll - <ObQueryNameString+>;testl %eax, %eax;jl  <PoRequestShutdownEvent+>": 1,
                "movl , %esi;pushl %edi;movl $, %edi;jmp  <PoQueueShutdownWorkItem+>;testb $, (%esi)": 1,
                "cmpl %edi, %esi;jne - <PoQueueShutdownWorkItem+>;movl $, %eax;movl $, %ecx;xchgl %eax, (%ecx)": 1,
                "movl %eax, (%ebp);jl  <PoQueueShutdownWorkItem+>;pushl %esi;leal (%ebp), %eax;pushl %eax": 1,
                "jl  <PoQueueShutdownWorkItem+>;pushl %esi;leal (%ebp), %eax;pushl %eax;pushl %esi": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%ebp)": 6,
                "addl %edx, -(%ebp);movl -(%ebp), %edx;adcl %edx, -(%ebp);cmpl %esi, (%eax);jl  <PoQueueShutdownWorkItem+>": 1,
                "cmpl (%eax), %ecx;jg  <PoQueueShutdownWorkItem+>;jl  <PoQueueShutdownWorkItem+>;movl -(%ebp), %ecx;cmpl (%eax), %ecx": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl (%ecx), %edx;movb $, %cl;calll - <_allshr>;pushl (%ebx);movl %eax, (%ebx)": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %edi;cmpl %ebx, %edi;movl %edi, -(%ebp);jne  <PoQueueShutdownWorkItem+>": 1,
                "movl , %esi;movl %esi, %eax;leal (%eax), %ecx;movb (%eax), %dl;incl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <ZwEnumerateValueKey+>;movl (%ebp), %eax": 1,
                "addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <PoQueueShutdownWorkItem+>;jns  <PoQueueShutdownWorkItem+>": 1,
                "jb  <PoQueueShutdownWorkItem+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%ebx)": 1,
                "bound (%eax), %eax;addb %dh, %gs:(%edx);incl %ebx;addb %ch, (%edi);jo  <PoQueueShutdownWorkItem+>": 2,
                "jne  <PoQueueShutdownWorkItem+>;outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax);addb %cl, (%eax)": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ;je  <PoQueueShutdownWorkItem+>;pushl %esi": 1,
                "cmpl %ebx, ;je  <PoQueueShutdownWorkItem+>;pushl %esi;pushl $;pushl $": 1,
                "calll - <KeWaitForSingleObject>;cmpl %ebx, -(%ebp);jl  <PoQueueShutdownWorkItem+>;pushl $;leal -(%ebp), %eax": 1,
                "cmpl %ebx, -(%ebp);jl  <PoQueueShutdownWorkItem+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll - <ZwSetValueKey>;pushl $;leal -(%ebp), %eax;pushl %eax": 13,
                "pushl %esi;pushl %ebx;calll - <ExAllocatePoolWithTag>;movl %eax, %edx;cmpl %ebx, %edx": 1,
                "movl %eax, %edi;orl %ecx, %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, -(%ebp);calll - <RtlInitUnicodeString>;andl $, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwQueryValueKey>;pushl -(%ebp);movl %eax, %esi;calll - <ZwClose>": 2,
                "andl $, %ecx;xorl %eax, %eax;orl %ecx, %eax;je  <PoQueueShutdownWorkItem+>;orb $, -(%ebp)": 1,
                "xorl %esi, %esi;jmp  <PoQueueShutdownWorkItem+>;cmpb %bl, ;jne  <PoQueueShutdownWorkItem+>;movl $, %esi": 1,
                "testb $, ;je  <PoQueueShutdownWorkItem+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "jne  <PoQueueShutdownWorkItem+>;pushl $;pushl $;pushl %esi;calll - <ExAllocatePoolWithTag>": 1,
                "movb $, (%ebx);jmp  <PoQueueShutdownWorkItem+>;testb $, ;je  <PoQueueShutdownWorkItem+>;movb $, (%ebx)": 1,
                "movl , %eax;andl $, %eax;pushl %eax;pushl $;pushl %edi": 1,
                "calll - <NtDeleteFile+>;cmpl %esi, %eax;movl %eax, -(%ebp);jl  <PoQueueShutdownWorkItem+>;movl (%edi), %eax": 1,
                "calll - <RtlSetAllBits>;movl , %eax;xorl %esi, %esi;xorl %edi, %edi;cmpl %esi, (%eax)": 1,
                "cmpl (%eax), %edi;jb - <PoQueueShutdownWorkItem+>;cmpb $, ;jne  <PoQueueShutdownWorkItem+>;pushl $": 1,
                "movl $, (%ebx);jmp  <PoQueueShutdownWorkItem+>;pushl $;pushl $;pushl %ebx": 1,
                "cmpl %esi, ;jne  <PoQueueShutdownWorkItem+>;pushl ;pushl ;pushl %esi": 1,
                "je  <PoQueueShutdownWorkItem+>;movl $, -(%ebp);jmp  <PoQueueShutdownWorkItem+>;pushl $;pushl ": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl $;movl $, %edi": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "pushl %edi;pushl %ebx;calll  <PoSetHiberRange>;addl $, -(%ebp);decl -(%ebp)": 1,
                "pushl %ebx;calll  <MmMapUserAddressesToPage+>;jmp  <PoQueueShutdownWorkItem+>;xorl %esi, %esi;cmpl %esi, -(%ebp)": 1,
                "movl %eax, (%ebx);cmpl %esi, (%ebx);jge  <PoQueueShutdownWorkItem+>;pushl %esi;calll  <MmMapUserAddressesToPage+>": 1,
                "cmpl $, %eax;jl  <PoShutdownBugCheck+>;incl %eax;movl (%ebp), %ecx;cmpl $, %ecx": 1,
                "orl %ecx, %eax;movb (%ebp), %cl;notl %edx;andl %edx, %eax;movl %eax, ": 1,
                "movb (%ebp), %cl;notl %edx;andl %edx, %eax;movl %eax, ;movl (%ebp), %eax": 1,
                "andb $-, %al;movb %al, (%ecx);movl (%ecx), %ecx;movl (%ebp), %eax;pushl $": 1,
                "movl (%ebp), %eax;pushl $;pushl $;pushl %ecx;movl %eax, (%ecx)": 1,
                "pushl $;pushl $;pushl %ecx;movl %eax, (%ecx);calll - <KeSetEvent>": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <PoShutdownBugCheck+>;movl %fs:, %eax": 1,
                "jne  <PoShutdownBugCheck+>;pushl %edi;calll *;movl %eax, %ebx;jmp  <PoShutdownBugCheck+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;pushl %edi;jne  <PoShutdownBugCheck+>;calll *": 2,
                "pushl %esi;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jl  <PoShutdownBugCheck+>;pushl %esi": 1,
                "testb $-, (%eax);je  <PoShutdownBugCheck+>;pushl $;leal (%ebp), %eax;pushl %eax": 1,
                "movl %ebx, (%ebp);calll ;popl %edi;movl %ebx, %eax;popl %ebx": 1,
                "pushl %eax;calll  <PoShutdownBugCheck+>;movl (%ebp), %esi;pushl %esi;calll  <PoShutdownBugCheck+>": 1,
                "pushl $;jmp  <PoShutdownBugCheck+>;andl $, ;movb $, ;pushl $": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <PoShutdownBugCheck+>;xorl %ecx, %ecx": 1,
                "movl %eax, ;jmp  <PoShutdownBugCheck+>;pushl $;pushl %ebx;calll - <PoShutdownBugCheck+>": 1,
                "pushl $;pushl %ebx;calll - <PoShutdownBugCheck+>;popl %esi;popl %ebx": 1,
                "movb (%ebp), %al;cmpb %bl, %al;movl (%ebp), %ecx;movb %al, -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %ebx;pushl %ebx;calll - <KeDelayExecutionThread>;cmpl %edi, %esi;je - <PoShutdownBugCheck+>": 1,
                "pushl %eax;calll - <PoShutdownBugCheck+>;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl $;calll - <wctomb+>;movl , %eax;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movl $, -(%ebp);movl $, -(%ebp);xorl %eax, %eax": 1,
                "movl %ebx, -(%ebp);calll ;pushl %edi;movl , %edi;movl $, %esi": 1,
                "movl (%edi), %edi;cmpl %esi, %edi;jne - <PoShutdownBugCheck+>;pushl $;calll - <PoSetPowerState+>": 1,
                "cmpb $, (%esi);je  <PoShutdownBugCheck+>;calll  <PoShutdownBugCheck+>;movzbl (%esi), %eax;movl $, %ecx": 1,
                "je  <PoShutdownBugCheck+>;movb %al, (%ecx);calll  <PoShutdownBugCheck+>;pushl $;calll - <PoSetPowerState+>": 1,
                "pushl %esi;movl (%ebp), %esi;je  <PoShutdownBugCheck+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "cmpl $, %eax;je  <PoShutdownBugCheck+>;cmpl $, %eax;jle  <PoShutdownBugCheck+>;cmpl $, %eax": 1,
                "cmpl $, %eax;jle  <PoShutdownBugCheck+>;cmpl $, %eax;jg  <PoShutdownBugCheck+>;xorl %eax, %eax": 1,
                "pushl %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl %esi": 4,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl $, %edi;xorl %esi, %esi": 1,
                "pushl %eax;pushl %edi;leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp)": 6,
                "jl  <PoShutdownBugCheck+>;cmpl $, -(%ebp);jne  <PoShutdownBugCheck+>;movl -(%ebp), %eax;movl %eax, ": 1,
                "xorl %eax, %eax;cmpb %bl, (%ebp);sete %al;incl %eax;movl %eax, (%esi)": 1,
                "jl  <PoShutdownBugCheck+>;pushl %edi;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl ;calll - <ExNotifyCallback>;pushl $;pushl $": 1,
                "pushl $;pushl $;pushl $;calll - <KeSetEvent>;retl $": 1,
                "leal (%edx), %ecx;movl %eax, (%ecx);addl $, %ecx;decl %esi;jne - <PoShutdownBugCheck+>": 1,
                "calll - <PoQueueShutdownWorkItem+>;cmpb %bl, -(%ebp);jne  <PoShutdownBugCheck+>;pushl %ebx;calll - <PoQueueShutdownWorkItem+>": 1,
                "movb $, ;movb $, ;calll - <PoShutdownBugCheck+>;pushl $;calll  <PoShutdownBugCheck+>": 1,
                "je  <PoShutdownBugCheck+>;pushl %esi;movl (%edi), %esi;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "movl , %eax;movl $, (%esi);movl %eax, (%esi);movl %esi, (%eax);movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;movl %esi, ;calll *;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;jl  <PoShutdownBugCheck+>;xorl %eax, %eax;cmpl %eax, -(%ebp);je  <PoShutdownBugCheck+>": 1,
                "pushl %eax;pushl %eax;pushl $;pushl $;pushl $": 8,
                "pushl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 3,
                "testl %eax, %eax;jl  <PoShutdownBugCheck+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwEnumerateValueKey+>;pushl -(%ebp);calll - <ZwClose>;movl %ebx, %ecx": 1,
                "pushl %esi;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %edi": 1,
                "movb $, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "leal -(%ecx), %eax;movl (%eax), %esi;movl (%esi), %edx;testb $, (%edx);movl (%ecx), %ecx": 1,
                "testb $, (%edx);jne  <PoShutdownBugCheck+>;movl (%eax), %esi;addl $, %eax;movl (%eax), %edx": 1,
                "movl %esi, (%edx);movl -(%ebp), %edx;leal -(%ebp), %esi;movl %esi, (%eax);movl %edx, (%eax)": 1,
                "movl %eax, -(%ebp);cmpl %edi, %ecx;jne - <PoShutdownBugCheck+>;movl -(%ebp), %eax;cmpl $, %eax": 1,
                "calll - <ZwClose>;leal -(%ebp), %eax;pushl %eax;calll - <PoShutdownBugCheck+>;pushl %ebx": 1,
                "calll - <PoShutdownBugCheck+>;pushl %ebx;pushl $;pushl %ebx;pushl $": 1,
                "orl %ebx, %esi;cmpl $, -(%ebp);jl  <PoShutdownBugCheck+>;calll  <PoShutdownBugCheck+>;movl (%ebp), %eax": 1,
                "movl %esi, (%eax);jmp  <PoShutdownBugCheck+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl $, %ebx;jmp  <PoShutdownBugCheck+>;movl $, %ebx;pushl %esi;movl %fs:, %eax": 1,
                "jmp  <PoShutdownBugCheck+>;movl (%ebp), %ecx;testl $, %ecx;je  <PoShutdownBugCheck+>;movl $, %eax": 1,
                "movl %ebx, -(%ebp);pushl $;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 2,
                "movl -(%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);pushl $": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);calll  <PoShutdownBugCheck+>;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "testb $, (%esi);pushl %edi;jne  <PoShutdownBugCheck+>;pushl %esi;calll - <IoGetRelatedDeviceObject>": 1,
                "cmpl %eax, %edi;jb  <PoShutdownBugCheck+>;movl %ebx, (%eax);movl (%edi), %eax;movl %eax, (%edi)": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %ebx, %esi;jl  <PoShutdownBugCheck+>;movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);movl %eax, (%edi);jmp  <PoShutdownBugCheck+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %esi, %eax;calll - <wctomb+>;retl $;incl %ecx;jne  <PoShutdownBugCheck+>": 1,
                "pushl %edi;movl %ebx, -(%ebp);jne  <PoShutdownBugCheck+>;pushl %esi;calll - <KeGetRecommendedSharedDataAlignment+>": 1,
                "pushl %esi;pushl %esi;jmp  <PoShutdownBugCheck+>;pushl $;popl %ecx": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %esi;addl $, %edi;movl (%edi), %eax;movl %eax, (%esi)": 1,
                "incl %ebx;addl $, %edi;addl $, %esi;cmpl -(%ebp), %ebx;jb - <PoShutdownBugCheck+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <PoSetPowerState+>;movl -(%ebp), %ecx;popl %edi": 1,
                "movl (%ebp), %esi;pushl %edi;pushl $;popl %ecx;leal -(%ebp), %edi": 2,
                "cmpl $, %eax;jg  <PoShutdownBugCheck+>;cmpl $, -(%ebp);jg  <PoShutdownBugCheck+>;cmpl -(%ebp), %eax": 1,
                "jg  <PoShutdownBugCheck+>;cmpl $, -(%ebp);jg  <PoShutdownBugCheck+>;cmpl -(%ebp), %eax;jg  <PoShutdownBugCheck+>": 1,
                "cmpl $, %eax;je  <PoShutdownBugCheck+>;pushl $;calll - <ExRaiseStatus>;movl (%ebp), %eax": 1,
                "popl %esi;popl %ebp;retl $;cmpl $, %esi;jne  <PoShutdownBugCheck+>": 1,
                "pushl $;popl %esi;xorb %dl, %dl;cmpl $, %esi;jne  <PoShutdownBugCheck+>": 1,
                "calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;jmp  <PoShutdownBugCheck+>;movl (%ebp), %eax;pushl %esi": 1,
                "rep  stosl %eax, %es:(%edi);leal (%esi), %eax;pushl %eax;calll - <KeInitializeTimer>;pushl %esi": 1,
                "movl %eax, %edx;cmpl %edi, %edx;je  <PoShutdownBugCheck+>;pushl $;xorl %eax, %eax": 1,
                "xorl %ebx, %ebx;jmp  <PoShutdownBugCheck+>;xorl %edi, %edi;cmpl %edi, %ebx;je  <PoShutdownBugCheck+>": 1,
                "jne  <PoShutdownBugCheck+>;movl -(%ebp), %eax;pushl %ebx;pushl %eax;calll  <SeTokenIsAdmin>": 1,
                "pushl %eax;calll  <SeReleaseSubjectContext>;movb %bl, %al;popl %ebx;leave": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <IoIsWdmVersionAvailable+>;testl %eax, %eax": 1,
                "pushl %eax;pushl %ebx;calll - <IoIsWdmVersionAvailable+>;testl %eax, %eax;jl  <PoShutdownBugCheck+>": 1,
                "pushl %ebx;calll - <IoIsWdmVersionAvailable+>;testl %eax, %eax;jl  <PoShutdownBugCheck+>;cmpl %ebx, -(%ebp)": 1,
                "jl  <PoShutdownBugCheck+>;cmpl %ebx, -(%ebp);je  <PoShutdownBugCheck+>;movl %ebx, (%esi);movb $, %al": 1,
                "cmpb %bl, -(%ebp);je  <PoShutdownBugCheck+>;cmpb %bl, -(%ebp);je  <PoShutdownBugCheck+>;movb $, -(%ebp)": 1,
                "jmp  <PoShutdownBugCheck+>;cmpl $, -(%ebp);jae  <PoShutdownBugCheck+>;movb $, -(%ebp);movl %ebx, (%esi)": 1,
                "pushl %esi;pushl %edi;pushl $;popl %ecx;movl $, %edi": 1,
                "popl %ecx;movl $, %edi;leal (%ebx), %esi;xorl %eax, %eax;rep  cmpsl %es:(%edi), (%esi)": 2,
                "movl , %eax;leal (%ebx), %edi;cmpl %eax, (%edi);jge  <PoShutdownBugCheck+>;movl %eax, (%edi)": 1,
                "cmpb $, -(%esi);je  <PoShutdownBugCheck+>;leal (%esi), %eax;pushl %eax;calll - <PoShutdownBugCheck+>": 1,
                "jne  <PoShutdownBugCheck+>;movb $, (%ebx);movb $, (%ebx);movb $, (%ebx);cmpb $, ": 1,
                "movl %edx, (%ebx);movl (%ebx), %eax;cmpl %edx, %eax;je  <PoShutdownBugCheck+>;pushl $": 1,
                "movl (%ebx), %eax;cmpl %edx, %eax;je  <PoShutdownBugCheck+>;pushl $;popl %ecx": 1,
                "jbe  <PoShutdownBugCheck+>;movb $, (%eax);cmpl %edx, (%ebx);jbe  <PoShutdownBugCheck+>;cmpb $, (%eax)": 1,
                "movl (%ebx), %eax;cmpl %eax, (%ebx);jge  <PoShutdownBugCheck+>;movl %eax, (%ebx);cmpl %eax, (%ebx)": 1,
                "je  <PoShutdownBugCheck+>;movb $, (%ebx);popl %edi;popl %esi;popl %ebx": 1,
                "rep  cmpsl %es:(%edi), (%esi);jne  <PoShutdownBugCheck+>;incl -(%ebp);addl $, %eax;cmpl $, -(%ebp)": 1,
                "jmp  <PoShutdownBugCheck+>;movb $, -(%ebp);cmpl , %ebx;pushl $;popl %ecx": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;pushl $": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <PoShutdownBugCheck+>;movl $, -(%ebp);jmp  <PoShutdownBugCheck+>": 2,
                "pushl (%ebp);pushl %edi;calll  <ProbeForWrite>;jmp  <PoShutdownBugCheck+>;movl (%ebp), %ebx": 1,
                "pushl %esi;pushl $;pushl $;calll - <PoSetPowerState+>;movl $, -(%ebp)": 2,
                "calll - <PoSetPowerState+>;movl $, -(%ebp);jmp  <PoShutdownBugCheck+>;testl %esi, %esi;je  <PoShutdownBugCheck+>": 2,
                "pushl %ebx;pushl %esi;pushl $;calll - <PoShutdownBugCheck+>;calll - <PoShutdownBugCheck+>": 1,
                "calll - <PoShutdownBugCheck+>;jmp  <PoShutdownBugCheck+>;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "testl %esi, %esi;je  <PoShutdownBugCheck+>;testl %edi, %edi;je  <PoShutdownBugCheck+>;pushl $": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;pushl $;jmp  <PoShutdownBugCheck+>": 1,
                "cmpl $, ;je  <PoShutdownBugCheck+>;pushl $;calll - <ExRaiseStatus>;leal (%ebx), %edi": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movb $, (%ebx)": 1,
                "movb $, (%ebx);movb $, (%ebx);movb $, (%ebx);xorl %ecx, %ecx;movl %ecx, -(%ebp)": 1,
                "decl %eax;je  <PoShutdownBugCheck+>;decl %eax;je  <PoShutdownBugCheck+>;decl %eax": 2,
                "jne  <PoShutdownBugCheck+>;movl $, -(%ebp);movl $, -(%ebp);cmpb $, (%ebx);jne  <PoShutdownBugCheck+>": 1,
                "jne  <PoShutdownBugCheck+>;testl %edi, %edi;je  <PoShutdownBugCheck+>;pushl $;calll - <ExRaiseStatus>": 1,
                "calll - <ExRaiseStatus>;movl (%esi), %eax;movl %eax, ;movl (%esi), %eax;movl %eax, ": 1,
                "andl $, -(%ebp);calll - <PoShutdownBugCheck+>;jmp  <PoShutdownBugCheck+>;cmpl $, %ebx;je  <PoShutdownBugCheck+>": 1,
                "movb %al, -(%ebp);cmpb $, -(%ebp);je  <PoShutdownBugCheck+>;xorl %esi, %esi;pushl %esi": 1,
                "movl %eax, -(%ebp);movl , %eax;subl , %eax;imull $, %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);pushl $;popl %ecx;movl %ecx, -(%ebp);cmpl %eax, ": 1,
                "movl $, -(%ebp);jmp  <PoShutdownBugCheck+>;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ecx, %eax": 1,
                "addb %bl, (%ebx);testl %ecx, (%esi);incl %ebp;testl %ecx, (%esi);orl $, %eax": 1,
                "addb %bh, %al;testl %ecx, (%esi);int;int;int": 1,
                "xorl %edi, %edi;testb $, ;movl %edi, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "xorl %edx, %edx;popl %esi;divl %esi;pushl $;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);xorl %edi, %edi;jmp  <PoShutdownBugCheck+>;movl , %eax;xorl %ecx, %ecx": 1,
                "setne %cl;movl %eax, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp)": 2,
                "jle  <PoShutdownBugCheck+>;testl %eax, %eax;jl  <PoShutdownBugCheck+>;jg  <PoShutdownBugCheck+>;testl %ecx, %ecx": 1,
                "jl  <PoShutdownBugCheck+>;jg  <PoShutdownBugCheck+>;testl %ecx, %ecx;jb  <PoShutdownBugCheck+>;movl , %eax": 1,
                "movl %ebx, %esi;movl %edi, %eax;cltd;pushl %edx;pushl %eax": 1,
                "movl %edi, %eax;cltd;pushl %edx;pushl %eax;pushl -(%ebp)": 1,
                "calll - <_alldiv>;cmpl $, %esi;movl %eax, -(%ebp);movl %edx, -(%ebp);jg  <PoShutdownBugCheck+>": 1,
                "movl %edx, -(%ebp);jg  <PoShutdownBugCheck+>;cmpl $, %esi;jl  <PoShutdownBugCheck+>;xorl %edx, %edx": 1,
                "xorl %edx, %edx;divl %ebx;movl , %ecx;cmpl $, %ecx;movl %eax, %edi": 1,
                "movl , %eax;xorl %edx, %edx;divl %ecx;movl , %edx;movl %edx, %ecx": 1,
                "jbe  <PoShutdownBugCheck+>;cmpl $, %ecx;jle  <PoShutdownBugCheck+>;movl %edx, %eax;pushl $": 1,
                "jle  <PoShutdownBugCheck+>;imull %ecx, %eax;pushl %eax;calll - <PoShutdownBugCheck+>;subl %eax, %esi": 1,
                "movl -(%ebp), %eax;movl %eax, ;movl -(%ebp), %eax;xorl %edx, %edx;movl %esi, ": 1,
                "movl %eax, ;movb $, ;incl %edx;movl $, %ecx;testl %edx, %esi": 1,
                "calll - <PoShutdownBugCheck+>;cmpb %bl, -(%ebp);movb $, ;je  <PoShutdownBugCheck+>;pushl %edi": 1,
                "movb $, ;je  <PoShutdownBugCheck+>;pushl %edi;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);pushl $;pushl %ebx;leal -(%ebp), %eax": 1,
                "imull , %eax;pushl $;xorl %edx, %edx;popl %ebx;divl %ebx": 2,
                "movl %esi, %eax;movb %al, -(%ecx);addl $, %ecx;decl %edi;jne - <PoShutdownBugCheck+>": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;orl $-, (%eax);movl %esi, %ecx;shll $, %ecx": 1,
                "cmpl $, %esi;jbe  <PoShutdownBugCheck+>;pushl %ebx;pushl %edi;movl (%ebp), %edi": 1,
                "leal -(%esi), %ebx;movl (%edi), %eax;movw (%ecx), %si;leal (%eax,%eax,), %eax;shll %eax": 1,
                "shll %eax;xorl %edx, %edx;divl (%ebp);incl %eax;testw %si, %si": 1,
                "leal (%eax), %ecx;leal -(%edx), %edi;movzbl (%ecx), %esi;movzbl -(%ecx), %eax;subl %esi, %eax": 1,
                "jbe  <PoShutdownBugCheck+>;pushl $;popl %eax;jmp  <PoShutdownBugCheck+>;subl %eax, %esi": 1,
                "subl %eax, %esi;movl %esi, %eax;movb %al, (%ecx);addl $, %ecx;decl %edi": 1,
                "je  <PoShutdownBugCheck+>;pushl %esi;movl (%ebp), %esi;jmp  <PoShutdownBugCheck+>;movzbl %cl, %edx": 1,
                "jbe  <PoShutdownBugCheck+>;leal (%esi), %ecx;movzbl %bl, %edx;movb $, (%ecx);addl $, %ecx": 1,
                "int;movl %edi, %edi;pushl %ebx;pushl %esi;pushl $": 2,
                "movl %ebx, -(%eax);leal -(%eax), %ecx;movl %ecx, -(%eax);movl %ecx, (%ecx);leal -(%eax), %ecx": 1,
                "decl %edx;movl %ecx, (%ecx);jne - <PoShutdownBugCheck+>;movl %esi, ;popl %esi": 1,
                "xorl %eax, %eax;incl %eax;shll %cl, %eax;notl %eax;andl %eax, %ebx": 1,
                "pushl (%ebp);calll - <PoSetPowerState+>;popl %ebp;retl $;int": 1,
                "cmpl $, ;sete %al;pushl %eax;pushl $;pushl ": 1,
                "pushl $;calll - <PoSetPowerState+>;retl $;int;int": 1,
                "je  <PoShutdownBugCheck+>;movl , %eax;testl %eax, ;je  <PoShutdownBugCheck+>;pushl $": 1,
                "xorl %eax, %eax;incl %eax;lock;orl %eax, (%edi);pushl $": 1,
                "cmpl $, %edi;jb - <PoShutdownBugCheck+>;calll  <PoShutdownBugCheck+>;pushl $;calll - <PoShutdownBugCheck+>": 1,
                "jb - <PoShutdownBugCheck+>;calll  <PoShutdownBugCheck+>;pushl $;calll - <PoShutdownBugCheck+>;popl %edi": 1,
                "testl %eax, %eax;jge  <PoShutdownBugCheck+>;movl , %ecx;testl $, %ecx;je  <PoShutdownBugCheck+>": 1,
                "jge  <PoShutdownBugCheck+>;movl , %ecx;testl $, %ecx;je  <PoShutdownBugCheck+>;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl %ecx, -(%ebp);pushl $;calll - <PoShutdownBugCheck+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);je  <PoShutdownBugCheck+>;cmpl $, %ebx": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);je  <PoShutdownBugCheck+>;cmpl $, %ebx;jne  <PoShutdownBugCheck+>": 1,
                "pushl %eax;pushl %ebx;pushl ;calll - <ExNotifyCallback>;testl %ebx, (%esi)": 1,
                "testb %bl, (%esi);je  <PoShutdownBugCheck+>;pushl $;calll - <PoSetPowerState+>;jmp  <PoShutdownBugCheck+>": 1,
                "orl $, (%esi);testb $, (%esi);je  <PoShutdownBugCheck+>;pushl $;pushl $": 2,
                "movl %ebx, (%esi);movb $, (%esi);jne  <PoShutdownBugCheck+>;movb $, (%esi);jmp  <PoShutdownBugCheck+>": 1,
                "pushl %esi;calll - <PoShutdownBugCheck+>;movl , %eax;addl $, %eax;pushl %eax": 2,
                "movl , %eax;movl $, %ecx;jmp  <PoShutdownBugCheck+>;movl (%eax), %edx;movl (%eax), %eax": 1,
                "jmp  <PoShutdownBugCheck+>;movl (%eax), %edx;movl (%eax), %eax;notl %edx;andl %edx, %ebx": 1,
                "movb (%ecx), %bl;testb %bl, %bl;js  <PoShutdownBugCheck+>;cmpb $, (%eax);je  <PoShutdownBugCheck+>": 1,
                "cmpl (%edx), %eax;jae  <PoShutdownBugCheck+>;orb (%ebp), %bl;movb %bl, (%ecx);movl -(%ebp), %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movb (%ebp), %cl;notb %cl": 1,
                "notb %cl;xorl %eax, %eax;andb %cl, (%eax);addl $, %eax;cmpl $, %eax": 1,
                "jne  <PoShutdownBugCheck+>;pushl %edi;movb $, ;calll - <KeResetEvent>;cmpb $, ": 1,
                "movb , %al;andb $, %al;movb %al, (%esi);movb $, (%esi);movl , %eax": 1,
                "movl %eax, (%esi);movl , %eax;movl %eax, (%esi);movl , %eax;movl %eax, (%esi)": 6,
                "cmpb $, %al;je  <PoShutdownBugCheck+>;cmpb $, %al;je  <PoShutdownBugCheck+>;cmpb $, %al": 1,
                "pushl %edi;movl %eax, ;movl , %eax;pushl %edi;pushl $": 1,
                "calll - <PoSetPowerState+>;calll - <PoSetPowerState+>;calll - <PoShutdownBugCheck+>;movl , %eax;cmpl , %eax": 1,
                "calll - <PoSetPowerState+>;movb $, ;pushl $;calll - <PoShutdownBugCheck+>;movl $, %esi": 1,
                "movl $, %esi;movl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ebp), %esi;cmpl $, %esi;jne  <PoShutdownBugCheck+>": 1,
                "jne  <PoShutdownBugCheck+>;addl $, %esi;xorl %edi, %edi;movl , %ecx;leal (%edi), %eax": 1,
                "pushl %ecx;pushl %eax;calll - <PoSetPowerState+>;xorl %edi, %edi;cmpb $, ": 1,
                "pushl $;pushl $;jmp  <PoShutdownBugCheck+>;cmpl $, %eax;je  <PoShutdownBugCheck+>": 1,
                "cmpl $, %eax;je  <PoShutdownBugCheck+>;cmpb $, ;sete %al;incb %al": 1,
                "movl $, -(%ebp);je  <PoShutdownBugCheck+>;decl %ecx;je  <PoShutdownBugCheck+>;decl %ecx": 1,
                "pushl $;pushl $;calll - <KeBugCheckEx>;movl $, ;movl %edi, ": 1,
                "pushl $;popl %edi;jmp  <PoShutdownBugCheck+>;orl $-, ;cmpb $, ": 1,
                "movl (%eax), %eax;imull , %eax;pushl $;xorl %edx, %edx;popl %ecx": 1,
                "movl %eax, (%ebp);testb $-, (%eax);je  <PoShutdownBugCheck+>;leal (%eax), %eax;movl (%eax), %edi": 1,
                "movl %eax, %edx;movl %edx, ;movl (%ebp), %eax;addl $, %eax;cmpl $, %eax": 1,
                "calll - <KeSetEvent>;pushl %ebx;calll - <IoFreeIrp>;movl (%ebp), %ecx;movl %edi, ": 1,
                "movzbl (%esi), %eax;decl %eax;je  <PoShutdownBugCheck+>;decl %eax;je  <PoShutdownBugCheck+>": 1,
                "decl %eax;je  <PoShutdownBugCheck+>;pushl %ecx;pushl %ecx;pushl %ecx": 1,
                "cmpl %edi, %eax;jb - <PoShutdownBugCheck+>;movzbl (%esi), %ecx;cmpl %ecx, %eax;je  <PoShutdownBugCheck+>": 1,
                "cmpl , %eax;je  <PoShutdownBugCheck+>;movb $, (%esi);movb , %al;addl $, %esi": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <PoShutdownBugCheck+>;xorl %ecx, %ecx;addl (%esi), %eax": 1,
                "testl %eax, %eax;je  <PoShutdownBugCheck+>;xorl %ecx, %ecx;addl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "leal (%esi), %ecx;pushl %ecx;pushl %edx;pushl %eax;leal (%esi), %eax": 1,
                "movl -(%ebp), %ecx;subl $, %eax;movl %esi, (%ebx);andl $, (%eax);movl %ebx, %edx": 1,
                "je  <NtOpenProcess+>;movl %esi, -(%ebp);movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx": 1,
                "movl %esi, -(%ebp);movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <NtOpenProcess+>": 1,
                "movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <NtOpenProcess+>;movl %esi, (%eax);movl (%ecx), %eax": 2,
                "cmpl %eax, %ecx;jb  <NtOpenProcess+>;movl %esi, (%eax);movl (%ecx), %eax;movl %eax, (%ecx)": 1,
                "cmpl %esi, (%ebx);setne -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 2,
                "calll  <SeSinglePrivilegeCheck>;testb %al, %al;je  <NtOpenProcess+>;movl -(%ebp), %eax;testl $, %eax": 1,
                "pushl %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 2,
                "movl -(%ebp), %eax;jmp  <NtOpenProcess+>;cmpb $, -(%ebp);je  <NtOpenProcess+>;movl %esi, -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);pushl -(%ebp);calll - <ObOpenObjectByPointer>;movl %eax, %edi": 2,
                "je  <NtOpenProcess+>;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %esi, %edi": 1,
                "calll  <ExRaiseDatatypeMisalignment>;movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <NtOpenThread+>": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movb $, -(%ebp);jmp  <NtOpenThread+>": 1,
                "testl $, %eax;je  <NtOpenThread+>;orl $, -(%ebp);jmp  <NtOpenThread+>;orl %eax, -(%ebp)": 1,
                "calll  <PsLookupThreadByThreadId>;jmp - <NtOpenThread+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %esi, %edi;jl - <NtOpenThread+>;movl $, -(%ebp)": 1,
                "movl (%ebp), %esi;pushl %esi;movl (%ebp), %edi;pushl %edi;calll  <ProbeForWrite>": 1,
                "orl $-, -(%ebp);jmp  <NtQueryInformationThread+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "testl %eax, %eax;jl  <NtQueryInformationThread+>;movl -(%ebp), %ecx;movl (%ecx), %esi;calll - <ObfDereferenceObject>": 1,
                "pushl %eax;movl -(%ebp), %esi;pushl (%esi);calll - <_allmul>;movl %eax, -(%ebp)": 2,
                "pushl %eax;pushl (%esi);calll - <_allmul>;movl %eax, -(%ebp);movl %edx, -(%ebp)": 2,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);pushl %esi;calll - <KeReadStateTimer>;testb %al, %al": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp);jmp  <NtQueryInformationThread+>;andl $, -(%ebp)": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);jmp  <NtQueryInformationThread+>;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl %esi, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp);pushl $": 1,
                "je  <NtQueryInformationThread+>;movl $, (%eax);jmp  <NtQueryInformationThread+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %eax;jmp - <NtQueryInformationThread+>;pushl $;popl %ebx;cmpl %ebx, %esi": 1,
                "movl %ebx, (%edi);movl (%ebp), %eax;testl %eax, %eax;je  <NtQueryInformationThread+>;movl $, (%eax)": 1,
                "pushl ;pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl %eax, %ebx": 6,
                "cmpb %al, (%ecx);setne %al;movl %eax, %esi;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "subl %edi, %eax;je  <NtSetInformationThread+>;subl %edi, %eax;je  <NtSetInformationThread+>;subl $, %eax": 1,
                "je  <NtSetInformationThread+>;subl %edi, %eax;je  <NtSetInformationThread+>;subl %edi, %eax;jne  <NtSetInformationThread+>": 1,
                "movl -(%ebp), %ecx;jmp  <NtSetInformationThread+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 2,
                "calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <NtSetInformationThread+>;movl -(%ebp), %eax;movl (%eax), %edi": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <NtSetInformationThread+>": 2,
                "calll  <ExfAcquirePushLockShared>;movl (%edi), %edi;andl -(%ebp), %edi;cmpl -(%ebp), %edi;je  <NtSetInformationThread+>": 1,
                "je  <NtSetInformationThread+>;movl $, %ebx;jmp  <NtSetInformationThread+>;pushl %edi;pushl -(%ebp)": 1,
                "movl $, %ebx;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %ebx, %eax;jmp  <NtSetInformationThread+>": 1,
                "je  <NtSetInformationThread+>;cmpb $, (%eax);je  <NtSetInformationThread+>;movl $, %esi;movl %ebx, %ecx": 1,
                "jg  <NtSetInformationThread+>;pushl %esi;pushl %ebx;calll - <KeSetBasePriorityThread>;xorl %esi, %esi": 1,
                "jmp  <NtSetInformationThread+>;movl $, -(%ebp);movl (%esi), %esi;movl %esi, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl (%esi), %esi;movl %esi, -(%ebp);movl %edx, -(%ebp);cmpl $, %esi;jg  <NtSetInformationThread+>": 1,
                "cmpl $, %esi;jg  <NtSetInformationThread+>;testl %esi, %esi;jle  <NtSetInformationThread+>;cmpl $, %esi": 1,
                "calll - <ObfDereferenceObject>;xorl %eax, %eax;jmp  <NtSetInformationThread+>;movl $, %eax;jmp  <NtSetInformationThread+>": 1,
                "movl -(%ebp), %eax;jmp - <NtSetInformationThread+>;cmpl $, %ebx;jne - <NtSetInformationThread+>;movl %eax, -(%ebp)": 1,
                "testl %esi, %esi;je  <NtSetInformationThread+>;leal (%esi), %ecx;calll  <ExAcquireRundownProtection>;testb %al, %al": 1,
                "je  <NtSetInformationThread+>;decl %eax;je  <NtSetInformationThread+>;movl $, %eax;jmp  <NtSetInformationThread+>": 1,
                "je  <NtSetInformationThread+>;pushl $;popl %eax;lock;orl %eax, (%edx)": 1,
                "popl %eax;lock;andl %eax, (%edx);jmp - <NtSetInformationThread+>;movl -(%ebp), %eax": 1,
                "andl %eax, (%edx);jmp - <NtSetInformationThread+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "retl;movl -(%ebp), %eax;jmp - <NtSetInformationThread+>;testl %ebx, %ebx;jne - <NtSetInformationThread+>": 1,
                "jmp - <NtSetInformationThread+>;cmpl $, %ebx;jne - <NtSetInformationThread+>;movl $, -(%ebp);movl (%esi), %esi": 3,
                "pushl %eax;pushl -(%ebp);calll - <KeSetBasePriorityThread+>;movl -(%ebp), %ecx;jmp - <NtSetInformationThread+>": 1,
                "testb %al, %al;je  <NtSetInformationThread+>;movb $, -(%ebp);movl (%esi), %eax;movl -(%ebp), %ecx": 1,
                "calll - <KeUnstackDetachProcess>;leal (%esi), %ecx;calll  <ExReleaseRundownProtection>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "movl , %edx;movb $, (%ebp);jmp  <PsSetProcessPriorityByClass+>;xorl %edx, %edx;movb %dl, (%ebp)": 1,
                "movb $, (%ebp);jmp  <PsSetProcessPriorityByClass+>;xorl %edx, %edx;movb %dl, (%ebp);cmpb $, %al": 1,
                "pushl %esi;calll - <MmGetSystemRoutineAddress+>;popl %esi;popl %ebp;retl $": 1,
                "movl $, %eax;jmp  <PsSetProcessPriorityByClass+>;cmpl %ebx, ;jne  <PsSetProcessPriorityByClass+>;movl $, %eax": 1,
                "pushl %ebx;pushl %edi;calll - <MmFlushImageSection+>;movl , %eax;cmpl %ebx, %eax": 1,
                "testl %ecx, %ecx;je  <PsSetProcessPriorityByClass+>;movl $, (%ecx);movl %ebx, -(%ebp);jmp  <PsSetProcessPriorityByClass+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %ecx": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %edi": 1,
                "ja  <PsSetProcessPriorityByClass+>;movl %edx, -(%ebp);cmpl %edi, %ecx;ja  <PsSetProcessPriorityByClass+>;movl %edi, -(%ebp)": 1,
                "cmpl %ebx, %edi;jl  <PsSetProcessPriorityByClass+>;cmpb %bl, -(%ebp);jne  <PsSetProcessPriorityByClass+>;leal -(%ebp), %eax": 1,
                "calll - <ObfDereferenceObject>;movl $, %eax;jmp  <PsSetProcessPriorityByClass+>;cmpl %ebx, (%ebp);jne  <PsSetProcessPriorityByClass+>": 1,
                "cmpl %ebx, (%ebp);je  <PsSetProcessPriorityByClass+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl %edi, %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %esi;calll - <ObGetObjectSecurity>": 1,
                "jl  <PsSetProcessPriorityByClass+>;pushl %esi;movl %esi, -(%ebp);calll  <PsReferencePrimaryToken>;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, (%ebp);je  <PsSetProcessPriorityByClass+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;pushl $;popl %edx;movl (%ebp), %eax": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl %esi, %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "shll $, %eax;movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax": 1,
                "testl %ebx, %ebx;je  <NtQueryInformationProcess+>;movl %eax, (%ebx);jmp  <NtQueryInformationProcess+>;movl -(%ebp), %eax": 1,
                "popl %ecx;leal -(%ebp), %esi;movl (%ebp), %edi;rep  movsl (%esi), %es:(%edi);jmp  <NtQueryInformationProcess+>": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);jmp  <NtQueryInformationProcess+>;pushl $;leal -(%ebp), %eax": 1,
                "jmp  <NtQueryInformationProcess+>;subl $, %eax;je  <NtQueryInformationProcess+>;decl %eax;decl %eax": 1,
                "je  <NtQueryInformationProcess+>;decl %eax;je  <NtQueryInformationProcess+>;subl $, %eax;je  <NtQueryInformationProcess+>": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp);jmp  <NtQueryInformationProcess+>;movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;jmp - <NtQueryInformationProcess+>;cmpl $, %edi;jne - <NtQueryInformationProcess+>;pushl $": 1,
                "pushl (%ebp);calll  <PoSetHiberRange+>;jmp  <NtQueryInformationProcess+>;pushl -(%ebp);pushl %ebx": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <NtQueryInformationProcess+>;leal -(%ebp), %eax": 2,
                "jmp  <NtQueryInformationProcess+>;movl $, -(%ebp);jmp  <NtQueryInformationProcess+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;pushl $": 1,
                "shrl $, %edi;andl $, %edi;calll - <ObfDereferenceObject>;movl $, -(%ebp);movl %edi, (%esi)": 1,
                "movl (%ebp), %esi;leal (%esi), %ebx;xorl %edi, %edi;pushl %edi;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);cmpl %edi, %eax;jl  <NtQueryInformationProcess+>;pushl %ecx;calll - <ObMakeTemporaryObject+>": 1,
                "leal (%eax,%eax,), %ecx;shll $, %ecx;leal (%ecx,%edx), %esi;pushl $;popl %ecx": 1,
                "cmpl %edi, %esi;je  <NtQueryInformationProcess+>;testl %esi, %esi;jne  <NtQueryInformationProcess+>;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%ebx);movl %esi, (%ebx);leal (%ebx), %edi;pushl $": 1,
                "decl %eax;movl %eax, -(%ebp);incl -(%ebp);movl (%ebp), %esi;jmp - <NtQueryInformationProcess+>": 1,
                "testl %eax, %eax;jl  <NtQueryInformationProcess+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%esi)": 1,
                "jl  <NtQueryInformationProcess+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%esi);testl %ebx, %ebx": 1,
                "addb %bh, -(%ebx);decl %esi;addb %al, %bl;lretl $;loope -": 1,
                "addb %al, %bl;lretl $;loope -;decl %esi;addb %ch, (%edx)": 1,
                "addb %al, %bl;lretl $;into;leave;decl %esi": 1,
                "je  <NtQueryInformationProcess+>;movl $, %eax;jmp  <NtQueryInformationProcess+>;andl $, -(%ebp);pushl $": 1,
                "andl $, -(%ebp);pushl $;popl %ecx;movl (%ebp), %esi;leal -(%ebp), %edi": 1,
                "jne  <NtQueryInformationProcess+>;cmpl %edi, -(%ebp);je  <NtQueryInformationProcess+>;cmpl %edi, -(%ebp);jne  <NtQueryInformationProcess+>": 1,
                "cmpl %edi, %esi;jne  <NtQueryInformationProcess+>;movl $, %edi;jmp  <NtQueryInformationProcess+>;pushl $": 1,
                "rep  stosl %eax, %es:(%edi);incl %eax;movl %eax, (%esi);movl %eax, (%esi);movl (%ebx), %eax": 1,
                "movl %eax, (%esi);movl , %eax;movl %eax, (%esi);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "je  <NtQueryInformationProcess+>;cmpl $-, -(%ebp);je  <NtQueryInformationProcess+>;movl (%ebx), %edi;testl %edi, %edi": 1,
                "je  <NtQueryInformationProcess+>;leal (%edi), %eax;pushl $;decl (%esi);pushl %eax": 1,
                "je  <NtQueryInformationProcess+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;calll - <ExReleaseResourceLite>;incl (%esi)": 1,
                "je  <NtSetInformationProcess+>;decl %eax;decl %eax;je  <NtSetInformationProcess+>;decl %eax": 4,
                "calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;jl  <NtSetInformationProcess+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;je  <NtSetInformationProcess+>;movl %esi, %ecx": 1,
                "movl -(%ebp), %edi;leal (%edi), %ebx;movl %ebx, %ecx;calll  <ExAcquireRundownProtection>;testb %al, %al": 1,
                "jmp - <NtSetInformationProcess+>;cmpl %ecx, %ebx;je  <NtSetInformationProcess+>;movl $, %eax;jmp  <NtSetInformationProcess+>": 1,
                "jmp  <NtSetInformationProcess+>;pushl %ebx;pushl %esi;calll - <KeReadStateSemaphore+>;pushl -(%ebp)": 1,
                "pushl $;popl %eax;xorl %ecx, %ecx;pushl -(%ebp);pushl %ecx": 1,
                "pushl %edi;movl -(%ebp), %ebx;pushl %ebx;calll - <PsChargeProcessNonPagedPoolQuota>;movl %eax, %esi": 1,
                "jmp  <NtSetInformationProcess+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;movl $, %esi": 1,
                "movl (%edi), %ebx;movl %ebx, -(%ebp);orl $-, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "testb %bl, %bl;je  <NtSetInformationProcess+>;orl $, (%esi);jmp  <NtSetInformationProcess+>;andl $-, (%esi)": 1,
                "je  <NtSetInformationProcess+>;orl $, (%esi);jmp  <NtSetInformationProcess+>;andl $-, (%esi);pushl -(%ebp)": 1,
                "cmpl %ecx, %ebx;jne - <NtSetInformationProcess+>;movl $, -(%ebp);movl (%edi), %edi;movl %edi, -(%ebp)": 5,
                "movl %edi, -(%ebp);movl %edx, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "testb %al, %al;jne  <NtSetInformationProcess+>;movl $, -(%ebp);jmp  <NtSetInformationProcess+>;decl (%esi)": 1,
                "movl $, -(%ebp);jmp  <NtSetInformationProcess+>;decl (%esi);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <NtSetInformationProcess+>;movl -(%ebp), %ecx;calll  <ExfAcquirePushLockExclusive>": 1,
                "je  <NtSetInformationProcess+>;movzbl %cl, %eax;movl %eax, -(%ebp);pushl -(%ebp);leal -(%edi), %eax": 1,
                "je  <NtSetInformationProcess+>;movl (%edi), %eax;movl %eax, -(%ebp);movl %ebx, %ecx;calll - <ExReleaseResourceLite>": 1,
                "jl - <NtSetInformationProcess+>;movl -(%ebp), %ecx;leal (%ecx), %edx;testb $, %bl;je  <NtSetInformationProcess+>": 1,
                "movb -(%ebp), %cl;movb %cl, (%eax);xorl %ecx, %ecx;cmpb %cl, -(%ebp);setne %cl": 1,
                "movl $, -(%ebp);movl (%edi), %edi;movl %edi, -(%ebp);movl %edx, -(%ebp);pushl %edi": 1,
                "movl %edi, %eax;andb $, %al;cmpb $, %al;jne - <NtSetInformationProcess+>;calll - <MmIsDriverVerifying+>": 1,
                "pushl -(%ebp);calll - <ObMakeTemporaryObject+>;testl %eax, %eax;je  <NtSetInformationProcess+>;pushl %eax": 1,
                "pushl -(%ebp);calll - <ObMakeTemporaryObject+>;jmp  <NtSetInformationProcess+>;movl $, %esi;movl -(%ebp), %ecx": 1,
                "retl;movl -(%ebp), %esp;xorl %eax, %eax;movl -(%ebp), %esi;orl $-, -(%ebp)": 1,
                "jmp  <NtSetInformationProcess+>;movl -(%ebp), %ecx;addl $, %ecx;testb $, %al;je  <NtSetInformationProcess+>": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <NtSetInformationProcess+>;movl -(%ebp), %ecx": 1,
                "incl %eax;retl;movl -(%ebp), %eax;jmp - <NtSetInformationProcess+>;cmpl $, %ebx": 1,
                "xorl %eax, %eax;testb %bl, %bl;setne %al;pushl %eax;pushl -(%ebp)": 1,
                "setne %al;pushl %eax;pushl -(%ebp);calll - <PsSetProcessPriorityByClass>;movl -(%ebp), %ecx": 1,
                "movl %eax, (%edi);movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "movl (%eax), %esi;andl $-, %esi;movl %eax, (%ebp);leal (%esi), %eax;movl %esi, -(%ebp)": 2,
                "andl $-, %esi;movl %eax, (%ebp);leal (%esi), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpl %esi, %eax;je  <PsReferencePrimaryToken+>;movl %ebx, %ecx;calll  <ExfReleasePushLock>;incl (%edi)": 1,
                "je  <PsReferenceImpersonationToken+>;movl (%ebp), %ecx;calll  <ExfAcquirePushLockShared>;testb $, (%ebx);movl (%ebx), %esi": 1,
                "movl (%ebx), %esi;je  <PsReferenceImpersonationToken+>;movl (%esi), %ecx;movl %ecx, (%ebp);calll - <ObfReferenceObject>": 1,
                "testb $, (%edi);je  <PsReferenceImpersonationToken+>;movl (%edi), %edi;movl (%edi), %ecx;movl (%ebp), %eax": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %ecx;xorl %eax, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebx), %ecx;xorl %eax, %eax;cmpl %eax, (%ebp);pushl %esi": 1,
                "testl %eax, %eax;je  <PsImpersonateClient+>;movl (%ebp), %ecx;calll  <ExfAcquirePushLockExclusive>;testb $, (%edi)": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);cmpl $, %eax;je  <PsImpersonateClient+>;movl %edi, %ecx": 1,
                "incl (%esi);jne  <PsImpersonateClient+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <PsImpersonateClient+>": 1,
                "movl $, %eax;movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);movl %eax, %edi": 1,
                "calll - <ExFreePoolWithTag>;movl %edi, %esi;pushl (%ebp);calll - <PsReferencePrimaryToken>;movl %eax, %edi": 1,
                "je  <PsImpersonateClient+>;pushl (%ebp);pushl (%ebp);pushl %edi;calll - <RtlUnwind+>": 1,
                "je  <PsImpersonateClient+>;leal -(%ebp), %ecx;pushl %ecx;pushl (%eax);pushl (%eax)": 1,
                "andl $, (%ebp);pushl $;popl %eax;lock;orl %eax, (%ebx)": 1,
                "movb %al, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %esi;movl %esi, (%ebp)": 1,
                "incl (%edi);jne  <PsImpersonateClient+>;leal (%edi), %eax;cmpl %eax, (%eax);je  <PsImpersonateClient+>": 1,
                "calll - <ObfDereferenceObject>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 3,
                "movl (%edi), %eax;movl %eax, (%ebx);movb (%edi), %al;movb %al, (%ebx);movb (%edi), %al": 1,
                "movl %eax, (%ebx);jmp  <PsDisableImpersonation+>;movl -(%ebp), %edi;movl -(%ebp), %eax;movl %eax, (%ebp)": 1,
                "movb $, (%esi);calll *;testl %edi, %edi;popl %esi;je  <PsDisableImpersonation+>": 1,
                "testl %edi, %edi;popl %esi;je  <PsDisableImpersonation+>;movb $, %al;jmp  <PsDisableImpersonation+>": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <PsRevertToSelf+>;movl %edi, %ecx": 1,
                "cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <PsRevertToSelf+>;movl %edi, %ecx;calll  <ExfAcquirePushLockExclusive>": 1,
                "jne  <PsRevertToSelf+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <PsRevertToSelf+>;movb $, %cl": 1,
                "cmpl %eax, (%eax);je  <PsRevertToSelf+>;movb $, %cl;movb $, (%esi);calll *": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 2,
                "movl (%ebp), %edx;addl $, %ecx;calll - <ObQueryNameString+>;jmp  <PsRevertThreadToSelf+>;movl (%ebp), %esi": 1,
                "movl (%ebp), %esi;leal (%esi), %ecx;xorl %edx, %edx;calll - <ObQueryNameString+>;pushl ": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %edi;leal (%ebx), %edi;movl %edi, (%ebp)": 1,
                "calll *;testl %ebx, %ebx;jl  <PsRevertThreadToSelf+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "calll - <wctomb+>;xorl %ebx, %ebx;movb %bl, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);cmpl %ebx, (%ebp);jne  <PsAssignImpersonationToken+>;movl (%ebp), %edi;pushl %edi": 1,
                "jne  <PsAssignImpersonationToken+>;movl (%ebp), %edi;pushl %edi;calll - <PsRevertThreadToSelf>;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %edi;pushl %edi;calll - <PsRevertThreadToSelf>;movl %ebx, -(%ebp);jmp  <PsAssignImpersonationToken+>": 1,
                "movl %ebx, -(%ebp);jmp  <PsAssignImpersonationToken+>;movb (%eax), %al;movb %al, -(%ebp);pushl %ebx": 1,
                "leal (%edi), %ecx;calll  <ExAcquireRundownProtection>;testb %al, %al;je  <PsAssignImpersonationToken+>;movl %ebx, -(%ebp)": 1,
                "pushl %eax;calll - <KeUnstackDetachProcess>;movl -(%ebp), %eax;calll - <wctomb+>;retl $": 1,
                "je  <PsAssignImpersonationToken+>;movl %eax, (%ebp);jmp - <PsAssignImpersonationToken+>;andl $, -(%ebp);leal (%edi), %eax": 1,
                "leal (%edi), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx)": 1,
                "pushl (%ebp);pushl %edi;pushl $;calll - <PoSetPowerState+>;testb %al, %al": 1,
                "addl %ebx, %eax;cmpl %ebx, %eax;movl %eax, -(%ebp);jb  <PsAssignImpersonationToken+>;cmpl (%ebp), %eax": 1,
                "ja  <PsAssignImpersonationToken+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx)": 1,
                "testb %al, %al;jne - <PsAssignImpersonationToken+>;cmpl $, (%ebp);jbe - <PsAssignImpersonationToken+>;leal (%esi), %edi": 1,
                "leal (%esi), %edi;movl (%edi), %ebx;leal (%edi), %eax;movl (%eax), %ecx;movl %ecx, %edx": 1,
                "cmpl -(%ebp), %eax;jne  <PsAssignImpersonationToken+>;leal (%edi), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "addl %eax, (%ebp);cmpl %esi, (%ebp);jbe  <PsAssignImpersonationToken+>;pushl %edi;pushl $": 1,
                "cmpb $, ;je  <PsAssignImpersonationToken+>;movl (%ebp), %edx;movl $, %ecx;cmpl %ecx, %edx": 1,
                "cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne  <PsAssignImpersonationToken+>;leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, %edi;jmp - <PsAssignImpersonationToken+>;movl (%ebp), %ecx;cmpl $, (%ebp);jbe  <PsAssignImpersonationToken+>": 1,
                "movl (%ebp), %ecx;cmpl $, (%ebp);jbe  <PsAssignImpersonationToken+>;movl (%ecx), %edi;leal (%ecx), %eax": 1,
                "cmpl %eax, -(%ebp);je  <PsAssignImpersonationToken+>;movl , %edi;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);pushl %edx;calll - <PoSetPowerState+>": 1,
                "pushl %esi;pushl %edi;calll  <ExCreateCallback+>;incl %ebx;addl $, %edi": 3,
                "pushl %esi;pushl %edi;calll  <ExCreateCallback+>;testb %al, %al;jne  <PsSetCreateProcessNotifyRoutine+>": 1,
                "popl %ebp;retl $;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 5,
                "pushl $;pushl %edi;calll  <ExCreateCallback+>;testb %al, %al;jne  <PsRemoveCreateThreadNotifyRoutine+>": 1,
                "jmp  <PsRemoveCreateThreadNotifyRoutine+>;xorl %eax, %eax;incl %eax;retl;movl -(%ebp), %esp": 1,
                "jne - <PsRemoveCreateThreadNotifyRoutine+>;testl %eax, %ecx;jne  <PsRemoveCreateThreadNotifyRoutine+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "jne  <PsRemoveCreateThreadNotifyRoutine+>;movl (%edi), %eax;testl %eax, %eax;je  <PsRemoveCreateThreadNotifyRoutine+>;pushl %eax": 1,
                "pushl (%eax);pushl (%eax);pushl $;calll - <KeBugCheckEx>;int": 1,
                "calll - <wctomb+>;calll - <MmGrowKernelStack+>;xorb %cl, %cl;calll *;movl %fs:, %eax": 1,
                "cmpl $, %edi;jb - <PsSetLoadImageNotifyRoutine+>;pushl %ebx;calll  <SeFreePrivileges>;movl $, %eax": 1,
                "jmp  <PsRemoveLoadImageNotifyRoutine+>;movl $, %eax;cmpl %esi, %eax;jl  <PsRemoveLoadImageNotifyRoutine+>;cmpb $, -(%ebp)": 1,
                "jmp  <PsRemoveLoadImageNotifyRoutine+>;movl , %eax;movl %eax, (%esi);pushl $;pushl $": 1,
                "leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax);andl $, (%esi);leal (%esi), %eax": 1,
                "andl $, (%esi);leal (%esi), %eax;pushl %eax;calll - <KeInitializeSpinLock>;leal (%esi), %eax": 1,
                "pushl (%ebp);pushl (%esi);pushl $;pushl $;pushl $": 1,
                "jmp  <PsRemoveLoadImageNotifyRoutine+>;xorl %ecx, %ecx;movl %ecx, -(%ebp);pushl $;popl %eax": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <PsRemoveLoadImageNotifyRoutine+>;movl -(%ebp), %ecx": 1,
                "je  <PsRemoveLoadImageNotifyRoutine+>;movl -(%ebp), %ecx;calll  <ExfReleasePushLock>;incl (%edi);jne  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "calll  <ExfReleasePushLock>;incl (%edi);jne  <PsRemoveLoadImageNotifyRoutine+>;leal (%edi), %eax;cmpl %eax, (%eax)": 1,
                "movb $, (%edi);movb $, %cl;calll *;pushl %esi;calll - <KeCallBios+>": 1,
                "pushl %esi;calll - <KeCallBios+>;cmpl $, -(%ebp);je  <PsRemoveLoadImageNotifyRoutine+>;pushl -(%ebp)": 1,
                "calll - <ObfDereferenceObject>;jmp  <PsRemoveLoadImageNotifyRoutine+>;leal (%ebx), %eax;movl (%eax), %edi;leal (%edi), %ecx": 1,
                "incl (%eax);jne  <PsRemoveLoadImageNotifyRoutine+>;addl $, %eax;cmpl %eax, (%eax);je  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "movb $, (%eax);movb $, %cl;calll *;leal (%ebx), %ecx;calll  <ExReleaseRundownProtection>": 1,
                "je  <PsRemoveLoadImageNotifyRoutine+>;movl $, -(%ebp);movl $, -(%ebp);pushl -(%ebp);calll  <ExCreateCallback+>": 2,
                "leal (%edi), %eax;movl %eax, -(%ebp);pushl $;pushl %eax;calll - <ExAcquireResourceSharedLite>": 1,
                "pushl (%edi);pushl %eax;calll - <IoSetIoCompletion>;movl -(%ebp), %ecx;calll - <ExReleaseResourceLite>": 1,
                "leal (%ecx), %eax;cmpl %eax, (%eax);je  <PsRemoveLoadImageNotifyRoutine+>;movb $, (%ecx);movb $, %cl": 1,
                "addl $, -(%ebp);decl -(%ebp);jne - <PsRemoveLoadImageNotifyRoutine+>;pushl $;popl %edx": 1,
                "decl -(%ebp);jne - <PsRemoveLoadImageNotifyRoutine+>;pushl $;popl %edx;movl %esi, %ecx": 1,
                "calll - <KeInsertQueueApc>;testb %al, %al;jne  <PsRemoveLoadImageNotifyRoutine+>;pushl $;popl %eax": 1,
                "pushl %esi;calll - <KeReleaseSemaphore+>;cmpl %edi, (%ebp);je  <PsRemoveLoadImageNotifyRoutine+>;movl -(%ebp), %eax": 1,
                "jmp  <PsRemoveLoadImageNotifyRoutine+>;movl %ebx, %eax;movl , %ecx;addl $, %ecx;pushl %ecx": 1,
                "pushl %esi;calll - <KeQueryRuntimeThread+>;movl -(%ebp), %edi;pushl %esi;calll - <KeQueryRuntimeThread+>": 1,
                "calll - <KeQueryRuntimeThread+>;pushl $;popl %edx;movl %esi, %ecx;calll - <ObfReferenceObject+>": 1,
                "pushl %eax;calll  <SeDeleteAccessState>;cmpl %edi, -(%ebp);jge  <PsRemoveLoadImageNotifyRoutine+>;pushl $": 1,
                "cmpb $, (%ebp);je  <PsRemoveLoadImageNotifyRoutine+>;pushl %esi;calll - <KeQueryRuntimeThread+>;jmp  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <ObGetObjectSecurity>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll  <SeAccessCheck>": 1,
                "calll - <ObQueryNameString+>;pushl -(%ebp);pushl -(%ebp);calll - <ObReleaseObjectSecurity>;cmpb $, -(%ebp)": 2,
                "movl %esi, (%ebx);leal (%ebx), %eax;movl %eax, (%eax);movl %eax, (%eax);pushl -(%ebp)": 1,
                "movl -(%ebp), %edi;cmpl %esi, %edi;je  <PsRemoveLoadImageNotifyRoutine+>;movl (%edi), %eax;movl %eax, (%ebx)": 1,
                "cmpl %esi, %edi;je  <PsRemoveLoadImageNotifyRoutine+>;movl (%edi), %eax;movl %eax, (%ebx);movl (%edi), %eax": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %eax;movl %eax, (%ebx);cmpl %esi, (%ebp);je  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "je  <PsRemoveLoadImageNotifyRoutine+>;calll - <ObfReferenceObject>;leal (%edi), %ecx;calll  <ExReleaseRundownProtection>;cmpl %esi, -(%ebp)": 1,
                "orl %eax, (%ecx);movl -(%ebp), %eax;movl %eax, (%ebx);xorl %eax, %eax;movb (%ebx), %al": 1,
                "calll - <MmGetSystemRoutineAddress+>;movl %eax, %edi;cmpl %esi, %edi;jl  <PsRemoveLoadImageNotifyRoutine+>;movl %esi, -(%ebp)": 1,
                "pushl %ebx;calll - <MmGrowKernelStack+>;movl %eax, %edi;cmpl %esi, %edi;jl  <PsRemoveLoadImageNotifyRoutine+>": 2,
                "jl  <PsRemoveLoadImageNotifyRoutine+>;movb $, -(%ebp);jmp  <PsRemoveLoadImageNotifyRoutine+>;movl -(%ebp), %eax;cmpl %esi, %eax": 1,
                "movb $, -(%ebp);jmp  <PsRemoveLoadImageNotifyRoutine+>;movl -(%ebp), %eax;cmpl %esi, %eax;je  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "jmp  <PsRemoveLoadImageNotifyRoutine+>;movl -(%ebp), %eax;cmpl %esi, %eax;je  <PsRemoveLoadImageNotifyRoutine+>;pushl %esi": 1,
                "pushl %esi;cmpl , %eax;je  <PsRemoveLoadImageNotifyRoutine+>;movl (%eax), %ecx;movl %ecx, (%ebx)": 1,
                "xorl %esi, %esi;jmp  <PsRemoveLoadImageNotifyRoutine+>;pushl %esi;pushl %ebx;calll - <MmGrowKernelStack+>": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl  <PsRemoveLoadImageNotifyRoutine+>;pushl $;pushl $": 1,
                "pushl %edi;calll  <SeTokenIsWriteRestricted+>;movl %ebx, -(%ebp);movl %esi, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl ;calll  <ExEnumHandleTable+>;movl %eax, (%ebx);cmpl %esi, %eax;jne  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "calll  <ExEnumHandleTable+>;movl %eax, (%ebx);cmpl %esi, %eax;jne  <PsRemoveLoadImageNotifyRoutine+>;movl $, %edi": 1,
                "movl (%ebx), %ecx;movl %eax, (%ecx);xorl %ecx, %ecx;calll - <RtlUnwind+>;testb %al, %al": 1,
                "cmpl %esi, %eax;je  <PsRemoveLoadImageNotifyRoutine+>;movl (%eax), %eax;cmpl %esi, %eax;je  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "testl $, %edi;jne  <PsRemoveLoadImageNotifyRoutine+>;testb $, (%ebp);je  <PsRemoveLoadImageNotifyRoutine+>;andl $, %edi": 1,
                "pushl -(%ebp);pushl %ebx;calll  <SeTokenIsWriteRestricted+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "je  <PsRemoveLoadImageNotifyRoutine+>;cmpb $, -(%ebp);je  <PsRemoveLoadImageNotifyRoutine+>;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jge  <PsRemoveLoadImageNotifyRoutine+>;movl %esi, (%ebx);jmp  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "cmpl %esi, %edi;jge  <PsRemoveLoadImageNotifyRoutine+>;movl %esi, (%ebx);jmp  <PsRemoveLoadImageNotifyRoutine+>;movb $, -(%ebp)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %esi;pushl $;pushl %eax": 2,
                "calll - <NtFreeVirtualMemory+>;movl -(%ebp), %edi;decl (%edi);movl $, %ecx;calll - <ExAcquireFastMutexUnsafe>": 1,
                "movl , %eax;cmpl %eax, -(%ebp);je  <PsRemoveLoadImageNotifyRoutine+>;movl (%edi), %eax;movl , %ecx": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <ObInsertObject>": 1,
                "calll - <ObInsertObject>;movl %eax, %edi;movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %esi, %edi;jl  <PsRemoveLoadImageNotifyRoutine+>;movl $, (%ebx);pushl %esi;pushl %ebx": 1,
                "jl  <PsRemoveLoadImageNotifyRoutine+>;movl $, (%ebx);pushl %esi;pushl %ebx;calll - <PsSetProcessPriorityByClass>": 1,
                "movl %esi, (%ebx);orl $, (%ebx);jmp  <PsRemoveLoadImageNotifyRoutine+>;movl $, (%ebx);leal (%ebx), %eax": 1,
                "movl %fs:, %eax;movl %eax, -(%ebp);cmpb $, (%eax);je  <PsRemoveLoadImageNotifyRoutine+>;movl , %eax": 1,
                "testl %ebx, %ebx;je  <PsRemoveLoadImageNotifyRoutine+>;movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %ebx": 1,
                "je  <PsRemoveLoadImageNotifyRoutine+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax;cmpl %eax, %ebx;jb  <PsRemoveLoadImageNotifyRoutine+>": 1,
                "cmpl %edx, %eax;jne  <PsRemoveLoadImageNotifyRoutine+>;cmpl %edx, %ecx;jne  <PsRemoveLoadImageNotifyRoutine+>;pushl $": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl %edx;pushl (%ebp)": 1,
                "movl , %eax;cmpl %eax, %ecx;jb  <PsCreateSystemThread+>;movl %edx, (%eax);movl (%ecx), %eax": 1,
                "pushl %ecx;calll - <PsRemoveLoadImageNotifyRoutine+>;jmp  <PsCreateSystemThread+>;movl $, %eax;calll - <wctomb+>": 1,
                "cmpb $, (%ebp);je  <PsCreateSystemProcess+>;orl $, %eax;pushl $;pushl (%ebp)": 1,
                "pushl %esi;pushl (%ebp);pushl %edi;calll - <KeInitializeApc>;pushl %esi": 2,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movb (%ebp), %al;movb %al, -(%ebp)": 1,
                "movb -(%ebp), %cl;calll *;movl $, -(%ebp);jmp  <PsGetContextThread+>;movl -(%ebp), %eax": 1,
                "calll - <KeInsertQueueApc>;testb %al, %al;jne  <PsGetContextThread+>;movl $, %eax;jmp  <PsGetContextThread+>": 1,
                "testb $, (%edi);jne  <PsGetContextThread+>;pushl -(%ebp);pushl (%ebp);pushl %edi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ebx;xorl %esi, %esi": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ebx;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movl %esi, -(%ebp);cmpb $, (%ebp)": 1,
                "je  <PsSetContextThread+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl %ebx, %esi;leal -(%ebp), %edi": 1,
                "movl %ecx, -(%ebp);movl %edi, -(%ebp);calll *;movb %al, %bl;leal -(%ebp), %eax": 1,
                "pushl %eax;calll  <PsDereferencePrimaryToken+>;movb %bl, %cl;calll *;jmp  <PsSetContextThread+>": 1,
                "jne  <PsSetContextThread+>;pushl -(%ebp);pushl (%ebp);pushl %edi;calll - <PsSetContextThread>": 1,
                "leal (%esi), %edi;movl %edi, %ecx;calll  <ExAcquireRundownProtection>;testb %al, %al;jne  <PsIsThreadImpersonating+>": 1,
                "jmp  <PsIsThreadImpersonating+>;pushl %eax;calll - <MmProbeAndLockProcessPages+>;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <PsSetProcessWinProcess+>;movl %ebx, %ecx;calll  <ExfAcquirePushLockExclusive>": 1,
                "movl (%ebp), %ecx;xchgl %eax, (%ecx);jmp  <PsSetThreadWinThread+>;movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl %eax, ;movl $, %eax;popl %ebp;retl $;int": 1,
                "movl %eax, %esi;cmpl %edi, %esi;jne - <PsSetLegoNotifyRoutine+>;popl %edi;xorl %eax, %eax": 1,
                "xorl %eax, %eax;popl %esi;popl %ebp;retl $;movl %esi, %ecx": 1,
                "jmp - <PsSetLegoNotifyRoutine+>;incl %edx;jb  <PsSetLegoNotifyRoutine+>;popal;imull $, (%eax), %ebp": 1,
                "movl %esp, %ebp;pushl %ebx;xorb %bl, %bl;cmpb %bl, ;pushl %esi": 1,
                "je  <PsSetLegoNotifyRoutine+>;pushl (%ebp);pushl %esi;pushl (%ebp);calll - <DbgPrint>": 1,
                "movl $, %esi;movl $, (%ebp);pushl %esi;calll  <ExCreateCallback+>;movl %eax, %ebx": 1,
                "calll  <ExCreateCallback+>;movl %eax, %ebx;testl %ebx, %ebx;je  <PsSetLegoNotifyRoutine+>;pushl %ebx": 1,
                "movl $, (%ebp);pushl $;pushl $;popl %edx;calll - <RtlUnwind+>": 1,
                "movl %eax, %esi;decl (%esi);leal (%ebx), %eax;pushl $;pushl %eax": 1,
                "decl (%esi);leal (%ebx), %eax;pushl $;pushl %eax;movl %eax, (%ebp)": 1,
                "decl (%edi);movl $, %ebx;movl %ebx, %ecx;calll - <ExAcquireFastMutexUnsafe>;movl (%esi), %ecx": 1,
                "movl %ebx, %ecx;calll - <ExReleaseFastMutexUnsafe>;incl (%edi);jne  <PsSetLegoNotifyRoutine+>;leal (%edi), %eax": 1,
                "jne  <PsSetLegoNotifyRoutine+>;leal (%edi), %eax;cmpl %eax, (%eax);je  <PsSetLegoNotifyRoutine+>;movb $, %cl": 2,
                "movl %ebx, (%edi);pushl %esi;calll  <PsLookupThreadByThreadId+>;pushl %esi;calll  <PsLookupThreadByThreadId+>": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;je  <PsSetLegoNotifyRoutine+>;pushl %ebx;pushl %eax": 2,
                "xorl %edi, %edi;cmpl %edi, (%esi);je  <PsSetLegoNotifyRoutine+>;xorl %eax, %eax;movb (%esi), %al": 1,
                "pushl %eax;pushl (%esi);calll - <MmFlushImageSection+>;movl (%esi), %eax;cmpl %edi, %eax": 1,
                "cmpl , %esi;je  <PsGetProcessExitTime+>;cmpl , %esi;je  <PsGetProcessExitTime+>;cmpl , %esi": 1,
                "calll - <ObfReferenceObject>;pushl %esi;calll  <PsDereferencePrimaryToken>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl $, %ebx;jne - <PsGetProcessExitTime+>;incl -(%ebp);pushl %edi;pushl $": 1,
                "jbe - <PsGetProcessExitTime+>;xorb %al, %al;jmp - <PsGetProcessExitTime+>;incl %ebx;jb  <PsGetProcessExitTime+>": 1,
                "arpl %sp, (%ebp);jae  <PsGetProcessExitTime+>;xorb %bh, (%eax);jo  <PsGetProcessExitTime+>;subb %ah, ": 3,
                "movl (%esi), %eax;cmpl %eax, %edi;je  <PsGetProcessExitTime+>;pushl %esi;movzbl (%esi), %ecx": 1,
                "pushl %eax;pushl %edi;pushl $;jmp  <PsGetProcessExitTime+>;xorb %cl, %cl": 1,
                "pushl %ebx;calll  <SeFreePrivileges+>;pushl $;pushl (%esi);pushl (%edi)": 1,
                "cmpl $, (%eax);jne  <PsGetProcessExitTime+>;movl (%edi), %ecx;movl %ecx, (%eax);jmp  <PsGetProcessExitTime+>": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl %eax;pushl %ebx": 3,
                "je  <PsGetProcessExitTime+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %ebx, -(%ebp);decl (%esi)": 1,
                "movl $, %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <PsGetProcessExitTime+>;movl -(%ebp), %ecx": 1,
                "jne  <PsGetProcessExitTime+>;movw $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movw %ax, -(%ebp)": 1,
                "cmpl %eax, (%edi);je  <PsGetProcessExitTime+>;movl (%esi), %eax;movl (%esi), %edx;movb $, %cl": 1,
                "je  <PsGetProcessExitTime+>;pushl $;pushl %edi;calll *;cmpb $, (%esi)": 1,
                "movl %ebx, -(%ebp);testl %ebx, %ebx;je  <PsGetProcessExitTime+>;testb $, %bl;je  <PsGetProcessExitTime+>": 1,
                "pushl $;calll - <PsSetLegoNotifyRoutine+>;pushl %edi;calll - <PsReferencePrimaryToken>;movl %eax, %ebx": 1,
                "calll - <PsSetLegoNotifyRoutine+>;pushl %edi;calll - <PsReferencePrimaryToken>;movl %eax, %ebx;movl %ebx, %ecx": 1,
                "je  <PsGetProcessExitTime+>;pushl %edi;calll  <SeAuditHardLinkCreation+>;leal (%edi), %ecx;movl %ebx, %edx": 1,
                "calll - <KeTerminateThread>;calll - <wctomb+>;retl $;int;int": 1,
                "jne  <PsGetProcessExitTime+>;pushl %edi;calll  <SeFreePrivileges>;popl %edi;movb $, (%esi)": 1,
                "orl $-, -(%ebp);pushl %esi;pushl %edi;movl (%ebp), %edi;leal (%edi), %esi": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;leal (%edi), %esi;testb $, (%esi)": 1,
                "movl %fs:, %eax;cmpl %eax, %edi;jne  <PsGetProcessExitTime+>;xorl %eax, %eax;incl %eax": 1,
                "addl $, %ecx;movl (%ecx), %eax;movl %eax, %esi;orl %edx, %esi;lock": 1,
                "movl (%ecx), %eax;movl %eax, %esi;orl %edx, %esi;lock;cmpxchgl %esi, (%ecx)": 1,
                "jmp  <PsGetProcessExitTime+>;orl $-, (%ebp);movb $, -(%ebp);movb (%edi), %al;pushl $": 1,
                "leal (%esi), %ecx;movl %ecx, -(%ebp);calll  <ExAcquireRundownProtection>;testb %al, %al;jne  <PsGetProcessExitTime+>": 1,
                "calll  <ExAcquireRundownProtection>;testb %al, %al;jne  <PsGetProcessExitTime+>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "testb %al, %al;jne  <PsGetProcessExitTime+>;movl %esi, %ecx;calll - <ObfDereferenceObject>;movl $, %eax": 1,
                "pushl $;popl %eax;lock;orl %eax, (%ecx);pushl $": 1,
                "andl $, (%ebp);cmpl %edi, %esi;je  <PsGetProcessExitTime+>;pushl (%ebp);pushl %esi": 1,
                "calll - <PsGetProcessExitTime+>;jmp  <PsGetProcessExitTime+>;cmpl $, (%ebp);jne  <PsGetProcessExitTime+>;pushl $": 1,
                "je  <PsGetProcessExitTime+>;cmpb $, -(%ebp);je  <PsGetProcessExitTime+>;pushl %ebx;calll - <ObDereferenceSecurityDescriptor+>": 1,
                "je  <PsGetProcessExitTime+>;pushl %ebx;calll - <ObDereferenceSecurityDescriptor+>;andl $, (%ebp);movl %ebx, %ecx": 1,
                "testl %edi, %edi;je  <PsGetProcessExitTime+>;pushl (%ebp);pushl %edi;calll - <PsGetProcessExitTime+>": 1,
                "calll  <PsDereferencePrimaryToken+>;movl %eax, %edi;testl %edi, %edi;jne - <PsGetProcessExitTime+>;cmpl %eax, (%esi)": 1,
                "jne - <PsGetProcessExitTime+>;cmpl %eax, (%esi);je  <PsGetProcessExitTime+>;pushl %esi;calll - <ObDereferenceSecurityDescriptor+>": 1,
                "cmpl $, (%eax);jne  <PsGetProcessExitTime+>;movl $, %eax;jmp  <PsGetProcessExitTime+>;cmpl $-, (%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl %fs:, %eax;testb $, (%eax)": 1,
                "movl %ebx, -(%ebp);calll  <PsDereferencePrimaryToken+>;movl %eax, %esi;cmpl %ebx, %esi;je  <PsTerminateSystemThread+>": 1,
                "pushl %eax;calll - <PsGetProcessExitTime+>;pushl ;calll - <PsSetLegoNotifyRoutine+>;calll  <PsLookupThreadByThreadId+>": 1,
                "calll - <ZwClose>;movl , %eax;movl %ebx, ;movl (%eax), %ecx;cmpl %ebx, %ecx": 1,
                "movl %edi, -(%ebp);movl %fs:, %eax;decl (%eax);movl , %esi;andl $-, %esi": 1,
                "movl $, %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <PsTerminateSystemThread+>": 2,
                "cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <PsTerminateSystemThread+>;movl $, %ecx;calll  <ExfAcquirePushLockShared>": 1,
                "calll  <ExfAcquirePushLockShared>;pushl %ebx;movl , %ebx;movl %ebx, %ecx;calll - <ObfReferenceObject>": 1,
                "movl $, %ecx;calll  <ExfReleasePushLock>;movl %fs:, %eax;incl (%eax);jne  <PsTerminateSystemThread+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %ebx;calll - <MmMapViewOfSection>": 1,
                "movl %ebx, %ecx;movl %eax, %esi;calll - <ObfDereferenceObject>;cmpl %edi, %esi;popl %ebx": 1,
                "calll - <MmIsThisAnNtAsSystem>;testb %al, %al;je  <PsTerminateSystemThread+>;movl $, %esi;jmp  <PsTerminateSystemThread+>": 1,
                "cmpl $, %esi;movl $, %edi;movsw (%esi), %es:(%edi);sete %al;cmpb $, (%ebp)": 1,
                "movl $, %edx;jmp  <PsTerminateSystemThread+>;movb (%eax), %bl;negb %bl;sbbl %ebx, %ebx": 1,
                "movl (%ecx), %ecx;movb (%ecx), %cl;movb %cl, -(%eax);jmp  <PsTerminateSystemThread+>;movb (%ebx), %cl": 1,
                "movl $, %esi;je  <PsLookupProcessThreadByCid+>;cmpb $, (%edi);jne  <PsLookupProcessThreadByCid+>;movl (%edi), %eax": 1,
                "je  <PsLookupProcessThreadByCid+>;movl (%edi), %ecx;movl %ecx, (%eax);calll - <ObfReferenceObject>;xorl %esi, %esi": 1,
                "cmpl $, (%edi);je  <PsLookupProcessByProcessId+>;movl %edi, %ecx;calll - <ObfReferenceObject+>;testb %al, %al": 1,
                "leal (%esi), %eax;cmpl %eax, (%eax);je  <PsLookupProcessByProcessId+>;movb $, %cl;movb $, (%esi)": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;movl $, (%ebp);je  <PsLookupThreadByThreadId+>;pushl %edi": 1,
                "incl (%esi);jne  <PsLookupThreadByThreadId+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <PsLookupThreadByThreadId+>": 11,
                "pushl $;pushl $;calll - <wctomb+>;movl (%ebp), %ecx;cmpl $, %ecx": 1,
                "pushl $;calll - <KeWaitForSingleObject>;cmpl %esi, %eax;jl  <PsLookupThreadByThreadId+>;movl (%ebp), %eax": 1,
                "subl %ebx, %esi;movl -(%ebp), %eax;cmpl %eax, %esi;jbe  <PsLookupThreadByThreadId+>;addl %ebx, %eax": 1,
                "je  <PsLookupThreadByThreadId+>;movl %eax, %ecx;movl (%edx), %esi;addl %ebx, %esi;addl $, %edi": 1,
                "addl $, %eax;movl %eax, (%ecx);orl $-, -(%ebp);pushl %esi;pushl $": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;movl %edx, (%ebp);shrl $, (%ebp);testb $, (%ebp)": 1,
                "cmpb $, %al;jne  <PsLookupThreadByThreadId+>;movl $, %ecx;movl %edx, %eax;andl %ecx, %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %ecx;movl %ecx, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "movl %ecx, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl %ecx, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <PsLookupThreadByThreadId+>;movl $, (%eax)": 1,
                "andl $-, %esi;xorl %ebx, %ebx;andl $-, %edi;cmpl %ebx, %esi;movl %esi, (%ebp)": 1,
                "movl (%ebx), %edx;movl -(%ebp,%ecx,), %esi;movl -(%ebp,%ecx,), %ecx;shrl $, %eax;movl %esi, (%edx,%eax,)": 2,
                "movl %eax, (%ebx);pushl %edi;calll - <wctomb+>;pushl $;pushl $": 1,
                "pushl $;andl $, %edi;pushl %edi;pushl $;movl %edi, -(%ebp)": 1,
                "pushl %edi;pushl (%ebp);calll - <PsChargeProcessNonPagedPoolQuota>;testl %eax, %eax;jge  <PsLookupThreadByThreadId+>": 1,
                "jge  <PsLookupThreadByThreadId+>;pushl $;pushl (%ebp);calll - <ExFreePoolWithTag>;movl $, %esi": 1,
                "movl %esi, (%edx,%eax,);movl %ecx, (%edx,%eax,);pushl (%ebx);pushl (%ebx);pushl (%ebp)": 1,
                "pushl $;pushl $;calll - <KeReleaseMutex>;cmpl $, (%ebp);je  <PsLookupThreadByThreadId+>": 1,
                "popl %ebp;jmp - <PsLookupThreadByThreadId+>;int;int;int": 1,
                "jne  <PsLookupThreadByThreadId+>;movl $, %eax;jmp  <PsLookupThreadByThreadId+>;xorl %edx, %edx;andl %edx, -(%ebp)": 1,
                "addl $, %edi;cmpl %esi, %edi;jb - <PsLookupThreadByThreadId+>;xorl %esi, %esi;pushl %esi": 1,
                "andl $, %esi;pushl %esi;pushl %ecx;pushl %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <PsLookupThreadByThreadId+>;movl %eax, -(%ebp);testl %eax, %eax;je  <PsLookupThreadByThreadId+>": 1,
                "movl (%edi), %esi;movl -(%ebp), %ebx;movl (%edi), %eax;addl %esi, %eax;jmp  <PsLookupThreadByThreadId+>": 1,
                "addl $, %ebx;movl (%edi), %eax;addl (%edi), %eax;cmpl %eax, -(%ebp);jb - <PsLookupThreadByThreadId+>": 2,
                "pushl %edi;pushl $;calll - <KeWaitForSingleObject>;cmpl %edi, %eax;jl  <PsLookupThreadByThreadId+>": 1,
                "jl  <PsLookupThreadByThreadId+>;movl (%ebp), %eax;movl (%eax), %esi;testl %esi, %esi;je  <PsLookupThreadByThreadId+>": 1,
                "movl (%esi), %eax;movl %ecx, (%esi);testl %ecx, %ecx;jne  <PsLookupThreadByThreadId+>;movl (%esi), %ebx": 1,
                "movl (%esi), %ebx;movl %eax, %edi;andl %ecx, (%esi);xorl %eax, %eax;jmp  <PsLookupThreadByThreadId+>": 1,
                "xorl %edi, %edi;movl %eax, (%esi);pushl (%esi);pushl %eax;pushl (%ebp)": 1,
                "pushl $;pushl %edi;calll - <ExFreePoolWithTag>;subl %esi, %ebx;pushl %ebx": 1,
                "andl $, -(%ebp);movl (%ebp), %ecx;movl (%ebp), %esi;movl %ebx, %edi;movl %ecx, %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl (%ebx), %edx;movl $, %ecx": 1,
                "movl %esi, %eax;jmp  <PsLookupThreadByThreadId+>;movl $, %esi;jmp - <PsLookupThreadByThreadId+>;movl (%ebp), %esi": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movl -(%ebp), %edi;movl (%edi), %ecx;testl %ecx, %ecx": 1,
                "calll - <ExFreePoolWithTag>;jmp  <PsLookupThreadByThreadId+>;pushl -(%ebp);pushl (%ebp);calll - <PsReturnProcessNonPagedPoolQuota>": 1,
                "jb - <PsLookupThreadByThreadId+>;jmp - <PsLookupThreadByThreadId+>;movl %eax, -(%ebp);leal (%edi), %ebx;cmpl %esi, %eax": 1,
                "pushl $;movl $, %edi;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;cmpl %esi, (%ebx)": 1,
                "jne - <PsLookupThreadByThreadId+>;movl $, %eax;jmp - <PsLookupThreadByThreadId+>;int;int": 1,
                "jne - <PsLookupThreadByThreadId+>;testl %edi, %edi;popl %ebx;jne  <PsLookupThreadByThreadId+>;movl %esi, (%eax)": 1,
                "movl %eax, (%edi);andl %ecx, (%eax);jmp  <PsLookupThreadByThreadId+>;movl %ecx, (%eax);movl %eax, (%edi)": 1,
                "jmp  <PsLookupThreadByThreadId+>;movl %esi, %eax;movl (%esi), %esi;pushl $;pushl %eax": 1,
                "je  <PsLookupThreadByThreadId+>;movl %ebx, (%eax);jmp  <PsLookupThreadByThreadId+>;movl %ebx, (%eax);jmp  <PsLookupThreadByThreadId+>": 2,
                "jmp  <PsLookupThreadByThreadId+>;movl %ebx, (%eax,%esi,);jmp  <PsLookupThreadByThreadId+>;movl %edx, %esi;andl $, %esi": 1,
                "jmp  <PsLookupThreadByThreadId+>;shrl %edx;andl $, %edx;cmpb %bl, (%ecx);je  <PsLookupThreadByThreadId+>": 1,
                "movl %ebx, (%eax,%edx,);jmp  <PsLookupThreadByThreadId+>;andl $, %edx;cmpb %bl, (%ecx);je  <PsLookupThreadByThreadId+>": 1,
                "je  <PsLookupThreadByThreadId+>;movl %ebx, (%eax,%edx,);jmp  <PsLookupThreadByThreadId+>;movl %ebx, (%eax,%edx,);movl (%edi), %ecx": 1,
                "andl $, -(%ebp);cmpl $, (%edi);jne  <PsLookupThreadByThreadId+>;pushl %esi;calll - <PsLookupThreadByThreadId+>": 1,
                "movb $, %cl;calll *;movb %al, -(%ebp);pushl $;movl (%edi), %eax": 1,
                "popl %ecx;xorl %eax, %eax;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl %ebx, %eax": 1,
                "addl $, %ecx;calll - <ExReleaseResourceLite>;movb -(%ebp), %cl;calll *;movl %edi, %eax": 1,
                "subl $, %ecx;je  <PsLookupThreadByThreadId+>;decl %ecx;je  <PsLookupThreadByThreadId+>;decl %ecx": 2,
                "movl %ecx, (%esi);jmp  <PsLookupThreadByThreadId+>;movl %ecx, (%esi);jmp  <PsLookupThreadByThreadId+>;movl (%eax), %edx": 1,
                "jmp  <PsLookupThreadByThreadId+>;movl %edx, (%esi,%ecx,);testb $, (%eax);je  <PsLookupThreadByThreadId+>;movl (%eax), %ecx": 1,
                "jne  <PsLookupThreadByThreadId+>;cmpb $, (%eax);movl (%eax), %eax;je  <PsLookupThreadByThreadId+>;movl %eax, (%esi)": 1,
                "movl %eax, (%esi,%ebx,);jmp  <PsLookupThreadByThreadId+>;movl %eax, (%esi,%ebx,);jmp  <PsLookupThreadByThreadId+>;andl $, %ebx": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx;testl %ebx, %ebx;je  <PsLookupThreadByThreadId+>": 1,
                "calll - <PsLookupThreadByThreadId+>;testl %eax, %eax;je  <PsLookupThreadByThreadId+>;pushl %edi;movl (%ebp), %edi": 1,
                "testl %eax, %eax;je  <PsLookupThreadByThreadId+>;pushl %edi;movl (%ebp), %edi;pushl $": 1,
                "jmp  <PsLookupThreadByThreadId+>;movl $, (%ebp);cmpl %ebx, (%esi);movl %ebx, (%ebp);jbe  <PsLookupThreadByThreadId+>": 1,
                "jbe  <PsLookupThreadByThreadId+>;movl (%esi), %eax;addl %ebx, %eax;cmpb $, (%edi);je  <PsLookupThreadByThreadId+>": 1,
                "jmp  <PsLookupThreadByThreadId+>;pushl %eax;pushl %esi;pushl (%ebp);calll - <PsLookupThreadByThreadId+>": 1,
                "pushl $;jmp  <PsLookupThreadByThreadId+>;pushl %esi;calll - <KeQueryRuntimeThread+>;pushl %esi": 1,
                "incl %eax;retl;movl -(%ebp), %esp;movl -(%ebp), %esi;jmp - <PsLookupThreadByThreadId+>": 1,
                "je  <PsLookupThreadByThreadId+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl %esi, %eax;calll - <wctomb+>": 1,
                "jb  <PsLookupThreadByThreadId+>;movl %ebx, (%eax);movl (%esi), %eax;movl %eax, (%esi);orl $-, -(%ebp)": 4,
                "pushl %eax;pushl -(%ebp);calll - <PsLookupThreadByThreadId+>;movl %eax, %edi;movl -(%ebp), %ecx": 1,
                "calll - <PsLookupThreadByThreadId+>;movl %eax, %edi;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "pushl -(%ebp);calll - <PsLookupThreadByThreadId+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, -(%ebp)": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <PsLookupThreadByThreadId+>;movl -(%ebp), %eax;movl (%eax), %eax": 3,
                "testl %esi, %esi;jl  <PsLookupThreadByThreadId+>;pushl (%ebp);calll - <PsLookupThreadByThreadId+>;movl (%ebp), %ecx": 2,
                "calll - <ObfDereferenceObject>;movl $, -(%ebp);cmpl %ebx, %esi;je  <PsLookupThreadByThreadId+>;movl %edi, (%esi)": 1,
                "testb $, (%edi);pushl %ebx;je  <PsLookupThreadByThreadId+>;movl %fs:, %eax;movl %eax, %ebx": 1,
                "movl (%ebp), %ecx;calll  <ExfAcquirePushLockExclusive>;pushl (%edi);pushl %esi;calll - <KeReadStateSemaphore+>": 1,
                "movl (%ebp), %ecx;calll  <ExfReleasePushLock>;incl (%ebx);jne  <PsLookupThreadByThreadId+>;leal (%ebx), %eax": 1,
                "movl %ebx, %ecx;calll *;testb $, (%edi);je  <PsLookupThreadByThreadId+>;movl (%edi), %eax": 1,
                "addl %eax, (%esi);movl (%edi), %edi;leal (%esi), %eax;cmpl (%eax), %edi;jbe  <PsLookupThreadByThreadId+>": 1,
                "calll - <RtlUnwind+>;movl (%esi), %eax;xorl %ecx, %ecx;cmpl %ecx, %eax;je  <PsLookupThreadByThreadId+>": 1,
                "pushl $;calll - <wctomb+>;pushl $;pushl $;xorl %ebx, %ebx": 1,
                "je  <PsLookupThreadByThreadId+>;testb $, %al;je  <PsLookupThreadByThreadId+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax": 3,
                "cmpl %ebx, -(%ebp);jl  <PsLookupThreadByThreadId+>;movl (%edi), %eax;cmpl %ebx, %eax;je  <PsLookupThreadByThreadId+>": 2,
                "movl (%esi), %eax;cmpl %ebx, %eax;je  <PsLookupThreadByThreadId+>;pushl %ebx;pushl %eax": 6,
                "pushl %esi;pushl %edi;movb $, -(%ebp);movl %fs:, %eax;movl (%eax), %edi": 1,
                "testb $, (%esi);je  <PsLookupThreadByThreadId+>;cmpl (%esi), %eax;jbe  <PsLookupThreadByThreadId+>;cmpl $, (%esi)": 1,
                "calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <PsLookupThreadByThreadId+>;cmpl $, (%ebp);pushl %esi": 1,
                "calll - <ObReferenceObjectByHandle>;testl %eax, %eax;movl -(%ebp), %ecx;jge - <PsLookupThreadByThreadId+>;movl %eax, %esi": 1,
                "pushl %esi;jne  <PsLookupThreadByThreadId+>;movl (%ebp), %esi;movl %esi, %ecx;calll - <ObfReferenceObject>": 1,
                "cmpl %eax, (%edi);jne  <PsLookupThreadByThreadId+>;movl %edi, %ecx;calll - <ObfReferenceObject+>;testb %al, %al": 1,
                "calll *;movl -(%ebp), %eax;popl %esi;leave;retl $": 1,
                "jl  <PsLookupThreadByThreadId+>;movl -(%ebp), %eax;movl %eax, -(%esi);incl %edi;addl $, %esi": 1,
                "movl %eax, -(%esi);incl %edi;addl $, %esi;cmpl (%ebp), %edi;jb - <PsLookupThreadByThreadId+>": 1,
                "jge  <PsLookupThreadByThreadId+>;testl %edi, %edi;jbe  <PsLookupThreadByThreadId+>;leal (%edi,%edi,), %eax;movl -(%ebp), %ecx": 1,
                "cmpl %edx, %ebx;je  <PsLookupThreadByThreadId+>;leal (%edx), %eax;leal (%ebx), %ecx;movl (%ecx), %esi": 1,
                "calll *;cmpl %esi, -(%ebp);jge  <PsLookupThreadByThreadId+>;cmpl %esi, (%ebp);jbe  <PsLookupThreadByThreadId+>": 1,
                "calll - <ObfDereferenceObject>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "jne  <PsLookupThreadByThreadId+>;movl $, %eax;jmp  <PsLookupThreadByThreadId+>;pushl %esi;pushl %edi": 1,
                "movl %edi, %eax;jmp  <PsLookupThreadByThreadId+>;pushl (%ebp);calll *(%ebp);leal -(%ebp), %eax": 1,
                "movb %al, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %ecx;cmpb %bl, %al": 1,
                "pushl -(%ebp);calll - <ObCreateObject>;cmpl %ebx, %eax;jl  <PsLookupThreadByThreadId+>;pushl $": 1,
                "movl %esi, %edi;rep  stosl %eax, %es:(%edi);leal (%esi), %eax;movl %eax, (%eax);movl %eax, (%eax)": 2,
                "movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, ;movl %edi, %ecx;calll *": 1,
                "pushl %ebx;pushl %esi;calll - <ObInsertObject>;cmpl %ebx, %eax;jl  <PsLookupThreadByThreadId+>": 1,
                "movl %ebx, (%eax);movl (%esi), %eax;movl %eax, (%esi);orl $-, -(%ebp);jmp  <PsLookupThreadByThreadId+>": 1,
                "popl %edx;calll - <RtlUnwind+>;movl (%esi), %eax;decl (%esi);testl %eax, %eax": 1,
                "movl $, -(%ebp);movl (%esi), %ecx;movl $, %eax;andl %eax, %ecx;cmpl %eax, %ecx": 1,
                "je  <PsLookupThreadByThreadId+>;cmpl $, (%edi);je  <PsLookupThreadByThreadId+>;leal (%edi), %ecx;testb $, (%ecx)": 1,
                "je  <PsLookupThreadByThreadId+>;leal (%edi), %ecx;testb $, (%ecx);jne  <PsLookupThreadByThreadId+>;pushl $": 1,
                "cmpl %eax, %esi;je  <PsLookupThreadByThreadId+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "movl %ebx, %ecx;calll *;pushl $;pushl $;pushl %esi": 1,
                "pushl %eax;leal (%edi), %eax;pushl %eax;calll - <MmIsDriverVerifying+>;pushl %edi": 1,
                "pushl %edi;movl %fs:, %eax;movl (%ebp), %edi;pushl $;movl %eax, %esi": 2,
                "incl %ecx;lock;orl %ecx, (%eax);pushl %edx;pushl %edi": 1,
                "movl (%ebp), %ecx;leal (%ecx), %eax;testb $, (%eax);jne  <PsLookupThreadByThreadId+>;decl (%edi)": 1,
                "calll - <ExReleaseResourceLite>;incl (%edi);jne  <PsLookupThreadByThreadId+>;leal (%edi), %eax;cmpl %eax, (%eax)": 1,
                "incl (%edi);jne  <PsLookupThreadByThreadId+>;leal (%edi), %eax;cmpl %eax, (%eax);je  <PsLookupThreadByThreadId+>": 1,
                "movb $, %cl;movb $, (%edi);calll *;leal (%esi), %edi;movl (%edi), %ecx": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);leal (%esi), %eax": 1,
                "calll - <ObfReferenceObject+>;leal (%esi), %edi;movl (%edi), %ecx;xorl %ebx, %ebx;cmpl %ebx, %ecx": 1,
                "cmpl %eax, %edi;je  <PsLookupThreadByThreadId+>;cmpl $, %ecx;je  <PsLookupThreadByThreadId+>;cmpl $, %ecx": 1,
                "cmpl $, %ecx;je  <PsLookupThreadByThreadId+>;movl $, %eax;jmp  <PsLookupThreadByThreadId+>;cmpl %eax, %edi": 1,
                "cmpl %ebx, %ecx;je  <PsLookupThreadByThreadId+>;movl , %eax;cmpl %eax, %ecx;jb  <PsLookupThreadByThreadId+>": 1,
                "movl (%ecx), %eax;movl %eax, (%ecx);orl $-, -(%ebp);jmp  <PsLookupThreadByThreadId+>;movl -(%ebp), %eax": 1,
                "movl %eax, %ebx;movl %ebx, -(%ebp);movl %ebx, %ecx;calll - <ObfReferenceObject>;movb $, -(%ebp)": 1,
                "jmpl *(,%eax,);pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "movl (%eax), %edi;jmp  <PsLookupThreadByThreadId+>;testb $, (%edi);jne  <PsLookupThreadByThreadId+>;xorl %eax, %eax": 1,
                "pushl -(%edi);calll - <_allmul>;movl %eax, -(%ebp);movl %edx, -(%ebp);xorl %eax, %eax": 1,
                "cmpl %eax, (%eax);je  <PsLookupThreadByThreadId+>;movb $, (%esi);movb $, %cl;calll *": 6,
                "je  <PsLookupThreadByThreadId+>;movb $, (%esi);movb $, %cl;calll *;leal -(%ebp), %eax": 3,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movzbl (%ebx), %eax": 1,
                "calll *;movl %edi, %ecx;calll - <ExReleaseResourceLite>;incl (%esi);jne  <PsLookupThreadByThreadId+>": 1,
                "calll *;pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "je  <PsLookupThreadByThreadId+>;leal -(%ecx), %eax;movl %eax, -(%ebp);testb $, (%eax);jne  <PsLookupThreadByThreadId+>": 1,
                "je  <PsLookupThreadByThreadId+>;movb $, (%esi);movb $, %cl;calll *;jmp  <PsLookupThreadByThreadId+>": 1,
                "jmp  <PsLookupThreadByThreadId+>;xorl %eax, %eax;leal -(%ebp), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "andl $, -(%ebp);decl (%esi);pushl $;leal (%ebx), %eax;pushl %eax": 1,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);testl %edx, %edx": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;addl %eax, -(%ebp);cmpl $, -(%ebp);jl  <PsLookupThreadByThreadId+>": 2,
                "movl %ecx, %eax;movl %eax, -(%ebp);addl $, %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "addl $, -(%ebp);movl %eax, -(%ebp);movl (%edi), %ecx;movl %ecx, (%eax);movl (%edi), %ecx": 1,
                "movl %ecx, (%eax);orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <PsLookupThreadByThreadId+>;movl -(%ebp), %eax": 1,
                "decl %edi;addb %bl, %bl;pushl %esi;decl %edi;addb %cl, %ah": 1,
                "pushl %ebx;calll  <PsDereferencePrimaryToken+>;movl %eax, %edi;testl %edi, %edi;jne - <PsLookupThreadByThreadId+>": 1,
                "orl %eax, (%edi);decl (%esi);pushl %ebx;pushl %esi;calll - <PsLookupThreadByThreadId+>": 1,
                "pushl %ebx;calll - <PsReferencePrimaryToken>;pushl %eax;movl %eax, -(%ebp);calll  <SeTokenIsAdmin>": 1,
                "cmpb $, (%ebp);je  <PsLookupThreadByThreadId+>;movl $, (%ebp);jmp  <PsLookupThreadByThreadId+>;cmpl $, -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll  <SeTokenImpersonationLevel+>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "calll  <SeTokenImpersonationLevel+>;testl %eax, %eax;movl %eax, (%ebp);jl  <PsLookupThreadByThreadId+>;leal (%ebx), %ecx": 1,
                "movl (%ebp), %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;leal (%ebx), %ecx;je  <PsLookupThreadByThreadId+>": 1,
                "jl  <PsLookupThreadByThreadId+>;leal (%edi), %eax;pushl $;leal (%esi), %ebx;decl (%ebx)": 1,
                "incl (%edi);calll - <ExReleaseResourceLite>;incl (%ebx);jne  <PsLookupThreadByThreadId+>;leal (%esi), %eax": 1,
                "movb $, (%esi);calll *;movl (%ebp), %ebx;movl -(%ebp), %edi;cmpl $, (%edi)": 1,
                "calll *;xorl %eax, %eax;cmpl %eax, -(%ebp);je  <PsLookupThreadByThreadId+>;pushl $": 1,
                "leal (%esi), %ecx;lock;orl %eax, (%ecx);testb $, (%esi);je  <PsLookupThreadByThreadId+>": 1,
                "calll - <PsLookupThreadByThreadId+>;pushl %ebx;leal (%esi), %ebx;movl %ebx, %ecx;calll *": 1,
                "pushl %ebx;leal (%esi), %ebx;movl %ebx, %ecx;calll *;leal (%esi), %eax": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl %edx, -(%ebp)": 1,
                "cmpl %edx, (%ebp);je  <PsLookupThreadByThreadId+>;decl %ecx;movl (%ebp), %esi;testl %ecx, %esi": 1,
                "pushl -(%ebp);pushl ;pushl %eax;pushl (%ebp);calll - <ObReferenceObjectByHandle>": 5,
                "orl $-, -(%ebp);xorl %ebx, %ebx;movl -(%ebp), %esi;cmpl %ebx, -(%ebp);jl - <PsLookupThreadByThreadId+>": 1,
                "testb $, %al;jne  <PsLookupThreadByThreadId+>;pushl $;pushl $;popl %edx": 1,
                "pushl $;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl %ebx, (%esi);movl %edi, %ecx": 1,
                "orl $-, -(%ebp);cmpl $, -(%ebp);jl - <PsLookupThreadByThreadId+>;movl -(%ebp), %esi;testl $, -(%ebp)": 1,
                "orl $, (%edi);movl (%esi), %eax;testl %eax, %eax;je  <PsLookupThreadByThreadId+>;pushl %eax": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <PsLookupThreadByThreadId+>;pushl %eax;calll  <SeTokenIsAdmin>": 1,
                "calll - <PsLookupThreadByThreadId+>;movl %eax, -(%ebp);testl %eax, %eax;jl  <PsLookupThreadByThreadId+>;orl $, (%esi)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;testl $, %edi;je  <PsLookupThreadByThreadId+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp - <PsLookupThreadByThreadId+>;leal (%esi), %ebx;pushl $;pushl %ebx": 1,
                "jmp - <PsLookupThreadByThreadId+>;leal (%esi), %ebx;pushl $;pushl %ebx;calll - <ExAcquireResourceExclusiveLite>": 1,
                "andl $, -(%ebp);movl %edi, -(%ebp);pushl (%esi);leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl (%esi), %edi;testb $, %bl;je  <PsLookupThreadByThreadId+>;orl $, %edi": 1,
                "testb $, -(%ebp);je  <PsLookupThreadByThreadId+>;movl -(%ebp), %eax;movl %eax, %ebx;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, %ebx;movl -(%ebp), %ecx;orl %ecx, %ebx;jne  <PsLookupThreadByThreadId+>": 2,
                "movl %ecx, -(%ebp);jmp  <PsLookupThreadByThreadId+>;andl $-, %edi;movl %edx, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);testb $, -(%ebp);je  <PsLookupThreadByThreadId+>;movl -(%ebp), %ebx;testl %ebx, %ebx": 1,
                "cmpl $, -(%ebp);jl  <PsLookupThreadByThreadId+>;movl %edi, (%esi);movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "je  <PsLookupThreadByThreadId+>;pushl %ebx;pushl %esi;calll - <PsLookupThreadByThreadId+>;jmp  <PsLookupThreadByThreadId+>": 1,
                "movl %eax, (%esi);movl %eax, (%esi);testb $, (%esi);je  <PsLookupThreadByThreadId+>;movl $, %ecx": 1,
                "calll - <KeStackAttachProcess>;pushl $;pushl $;pushl ;pushl ": 1,
                "pushl ;calll  <MmAdjustWorkingSetSize>;pushl $;movl (%edi), %eax;addl $, %eax": 1,
                "jne - <PsLookupThreadByThreadId+>;movl $, %ecx;calll *;jmp  <PsLookupThreadByThreadId+>;movl (%edi), %eax": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp  <PsLookupThreadByThreadId+>;movl $, %eax;calll - <wctomb+>": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;movl %eax, -(%ebp);jl  <PsLookupThreadByThreadId+>": 1,
                "movl $, %ecx;calll *;movl , %eax;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "testb $, (%esi);je  <PsLookupThreadByThreadId+>;leal (%esi), %eax;xorl %ebx, %ebx;pushl %ebx": 1,
                "je  <PsLookupThreadByThreadId+>;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;pushl %ebx": 1,
                "cmpl %ebx, %edi;je  <PsLookupThreadByThreadId+>;movl (%edi), %eax;mull ;leal (%edi), %ebx": 1,
                "jne  <PsLookupThreadByThreadId+>;addl %eax, -(%ebp);adcl %edx, -(%ebp);testb $, (%esi);je  <PsLookupThreadByThreadId+>": 1,
                "calll - <PsGetProcessExitTime+>;testl %eax, %eax;jl  <PsLookupThreadByThreadId+>;incl (%esi);xorl %edx, %edx": 1,
                "incl %edx;movl %ebx, %ecx;calll - <RtlUnwind+>;movl (%esi), %eax;decl (%esi)": 1,
                "pushl $;pushl $;pushl (%edi);pushl (%esi);pushl %eax": 1,
                "pushl $;pushl %ebx;pushl %ebx;pushl (%esi);pushl %eax": 2,
                "calll - <PsLookupThreadByThreadId+>;testb %al, %al;je  <PsLookupThreadByThreadId+>;cmpl %ebx, (%esi);jne  <PsLookupThreadByThreadId+>": 2,
                "testb %al, %al;je  <PsLookupThreadByThreadId+>;cmpl %ebx, (%esi);jne  <PsLookupThreadByThreadId+>;pushl %ebx": 2,
                "pushl %ebx;pushl %ebx;pushl %esi;calll - <KeSetEvent>;movl (%esi), %eax": 1,
                "movl -(%ebp), %ecx;calll - <ExReleaseResourceLite>;movl -(%ebp), %eax;movl (%eax), %eax;cmpl $, %eax": 1,
                "movl %edi, %edi;pushl %esi;calll - <PsLookupThreadByThreadId+>;movl $, %esi;movl %esi, %ecx": 1,
                "movl $, %esi;movl %esi, %ecx;calll *;cmpb $, ;jne  <PsLookupThreadByThreadId+>": 1,
                "movb (%eax), %al;movb %al, -(%ebp);andl $, -(%ebp);testb %al, %al;je  <PsLookupThreadByThreadId+>": 1,
                "pushl $;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jge  <PsLookupThreadByThreadId+>": 1,
                "movl %eax, %esi;testl %esi, %esi;jl  <PsLookupThreadByThreadId+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "jl  <PsLookupThreadByThreadId+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <SeImpersonateClientEx>": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;jmp  <PsLookupThreadByThreadId+>": 1,
                "testl %ecx, %ecx;movl (%ebp), %eax;pushl %ebx;pushl %esi;pushl %edi": 1,
                "leal -(%esi), %ebx;movl %ebx, %ecx;calll - <ObfReferenceObject+>;testb %al, %al;jne  <PsDereferencePrimaryToken+>": 1,
                "jne - <PsDereferencePrimaryToken+>;xorl %ebx, %ebx;cmpl $, (%ebp);je  <PsDereferencePrimaryToken+>;pushl (%ebp)": 1,
                "je  <PsDereferencePrimaryToken+>;movl %edi, %ecx;calll - <ExReleaseFastMutexUnsafe>;incl (%esi);jne  <PsDereferencePrimaryToken+>": 1,
                "retl $;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp - <PsDereferencePrimaryToken+>": 1,
                "pushl %esi;pushl %edi;movl %fs:, %eax;movl (%ebp), %ebx;movl %eax, %edi": 1,
                "movl (%ebp), %ecx;movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);cmpl %esi, %eax;je  <PsDereferencePrimaryToken+>": 1,
                "je  <PsDereferencePrimaryToken+>;movb $, %cl;movb $, (%edi);calll *;movl (%ebp), %ecx": 1,
                "pushl ;calll - <IoUnregisterFileSystem>;pushl ;calll - <IoUnregisterFileSystem>;pushl ": 2,
                "pushl %esi;calll  <PsDereferencePrimaryToken+>;jmp  <PsDereferencePrimaryToken+>;pushl %edx;pushl %ecx": 6,
                "pushl %ebx;pushl %ebx;pushl $;calll - <KeBugCheckEx>;cmpb $, (%edx)": 1,
                "pushl %esi;calll  <PsDereferencePrimaryToken+>;jmp  <PsDereferencePrimaryToken+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);movl %fs:, %eax;incl (%eax);jne  <PsDereferencePrimaryToken+>": 1,
                "movw %cx, (%eax);movl (%ebp), %eax;orl $, (%eax);pushl (%edi);movl (%ebp), %eax": 1,
                "movl %eax, %esi;movl (%ebp), %eax;addl $, (%eax);pushl $;pushl %esi": 1,
                "addl $, (%eax);pushl $;pushl %esi;calll - <FsRtlNotifyVolumeEvent>;movl %esi, %ecx": 1,
                "jmp  <PsDereferencePrimaryToken+>;movl $, %esi;jmp  <PsDereferencePrimaryToken+>;testb $, (%esi);jne  <PsDereferencePrimaryToken+>": 1,
                "jmp  <PsDereferencePrimaryToken+>;pushl $;pushl -(%ebp);calll - <FsRtlNotifyVolumeEvent>;popl %edi": 1,
                "pushl $;popl %ecx;rep  movsl (%esi), %es:(%edi);orb $, (%eax);movl (%edx), %eax": 1,
                "orb $, (%eax);movl (%edx), %eax;andl $, -(%eax);subl $, %eax;movl $, (%eax)": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;xorl %ebx, %ebx": 1,
                "je - <PsDereferencePrimaryToken+>;movl %eax, %edx;movl %edi, %ecx;calll - <IofCallDriver>;cmpl $, %eax": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;cmpl %ebx, %eax;setge %cl": 1,
                "movl %edx, (%esi);addl $-, (%eax);xorl %eax, %eax;popl %edi;popl %esi": 1,
                "jae  <PsDereferencePrimaryToken+>;movl $, %eax;jmp  <PsDereferencePrimaryToken+>;movl (%ebp), %edx;pushl %edi": 1,
                "movl $, %eax;jmp  <PsDereferencePrimaryToken+>;movl (%ebp), %edx;pushl %edi;xorl %eax, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi;movl %eax, (%ebp);movl (%ebx), %eax": 1,
                "pushl %ecx;pushl (%ebp);calll - <PsDereferencePrimaryToken+>;movl %eax, %esi;movl (%ebx), %eax": 1,
                "movl (%edi), %eax;cmpl %ebx, %eax;je  <PsDereferencePrimaryToken+>;cmpw %bx, (%eax);jne  <PsDereferencePrimaryToken+>": 1,
                "je  <PsDereferencePrimaryToken+>;movl (%ebp), %eax;movl %ebx, (%eax);movb (%esi), %al;shrb %al": 1,
                "movb (%esi), %al;shrb %al;testb $, %al;je  <PsDereferencePrimaryToken+>;movl (%ebp), %eax": 1,
                "movl $, (%ebp);movl %ebx, (%eax);jmp  <PsDereferencePrimaryToken+>;movl (%edi), %ecx;movl (%ecx), %ecx": 1,
                "movl %ecx, -(%ebp);movl %eax, (%ebp);jbe  <PsDereferencePrimaryToken+>;pushl $;leal (%esi), %edx": 1,
                "pushl %eax;pushl (%edi);movzwl (%ebp), %eax;pushl %eax;pushl -(%ebp)": 2,
                "pushl %esi;calll - <PsIsThreadTerminating+>;cmpb %bl, %al;jne  <PsDereferencePrimaryToken+>;pushl %ebx": 2,
                "jne  <PsDereferencePrimaryToken+>;pushl %ebx;pushl %edi;calll - <KeReleaseMutex>;movl (%ebp), %ecx": 1,
                "movl %ebx, (%ecx);calll - <IofCompleteRequest>;popl %edi;popl %esi;popl %ebx": 1,
                "movl $, %esi;movb $, %dl;movl %ebx, %ecx;movl %esi, (%ebx);calll - <IofCompleteRequest>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <PsDereferencePrimaryToken+>;movl %eax, %esi;subl -(%ebp), %esi": 1,
                "movl %esi, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;je  <PsDereferencePrimaryToken+>;movl (%ebp), %ecx": 1,
                "movl (%ecx), %ecx;subl %esi, %ecx;addl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "jmp  <PsDereferencePrimaryToken+>;andl $, %eax;addl (%ebp), %eax;movl %eax, %esi;movzwl (%esi), %eax": 1,
                "movl %ebx, %eax;subl %ecx, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movb $, -(%ebp);xorl %ebx, %ebx": 1,
                "orl $-, -(%ebp);movl $, %eax;jmp  <PsDereferencePrimaryToken+>;movl %eax, -(%ebp);movl $, %edi": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);cmpl %ebx, %eax;je  <PsDereferencePrimaryToken+>": 1,
                "cmpl %ebx, %eax;je  <PsDereferencePrimaryToken+>;movl (%ebp), %ecx;decl (%ebp);testl %ecx, %ecx": 1,
                "je  <PsDereferencePrimaryToken+>;movl (%ebp), %ecx;movl %eax, (%ecx);jmp - <PsDereferencePrimaryToken+>;movl -(%ebp), %eax": 1,
                "cmpb $, -(%ebp);je  <PsDereferencePrimaryToken+>;movw , %ax;movw %ax, -(%ebp);jmp  <PsDereferencePrimaryToken+>": 1,
                "je  <PsDereferencePrimaryToken+>;movw , %ax;movw %ax, -(%ebp);jmp  <PsDereferencePrimaryToken+>;movl , %eax": 1,
                "movl %edi, -(%ebp);cmpw %di, -(%ebp);je  <PsDereferencePrimaryToken+>;movzwl -(%ebp), %eax;cmpl %edx, %eax": 1,
                "jne  <PsDereferencePrimaryToken+>;movzwl %dx, %edx;leal (%esi,%edx,), %esi;movl %esi, -(%ebp);xorl %edx, %edx": 1,
                "movl (%esi), %esi;addl -(%ebp), %esi;movl %esi, -(%ebp);movl %ebx, %eax;jmp - <PsDereferencePrimaryToken+>": 1,
                "movzwl %dx, %eax;shrl %eax;movl %eax, -(%ebp);cmpw %bx, %ax;je  <PsDereferencePrimaryToken+>": 1,
                "testl %esi, %esi;jns  <PsDereferencePrimaryToken+>;andl $, %esi;addl %edi, %esi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl $, %edi;jmp - <PsDereferencePrimaryToken+>;movl $, -(%ebp);jmp  <PsDereferencePrimaryToken+>": 1,
                "movl $, -(%ebp);je  <LdrEnumResources+>;cmpl $, (%ebp);jbe  <LdrEnumResources+>;movl (%ebp), %eax": 2,
                "movl (%ebx), %eax;movl $, %edx;testl %eax, %edx;je  <LdrEnumResources+>;movl (%ebx), %ecx": 1,
                "movl (%ebx), %ecx;testl %ecx, %edx;je  <LdrEnumResources+>;movl $, %ebx;andl %ebx, %ecx": 1,
                "addl %esi, %eax;movzwl (%eax), %edi;leal (%eax), %edx;movzwl (%eax), %eax;addl %eax, %edi": 1,
                "movzwl (%eax), %edi;leal (%eax), %edx;movzwl (%eax), %eax;addl %eax, %edi;movl %ecx, -(%ebp)": 1,
                "movl %edx, (%eax);movl -(%ebp), %edx;movl %edx, (%eax);movl (%ecx), %edx;addl (%ebp), %edx": 1,
                "jb - <LdrEnumResources+>;movl -(%ebp), %edi;movl -(%ebp), %edx;movl $, %ebx;incl -(%ebp)": 1,
                "addl $, %edx;cmpl %edi, -(%ebp);movl %edx, -(%ebp);jb - <LdrEnumResources+>;movl -(%ebp), %ebx": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;popl %ebx;popl %edi;popl %esi": 1,
                "movl $, %eax;jmp - <LdrEnumResources+>;int;int;int": 1,
                "leal (%eax,%edi,), %eax;addl %edi, %edx;popl %edi;cmpl $, %esi;ja  <RtlMultiByteToUnicodeN+>": 1,
                "cmpl $, (%ebp);je  <RtlMultiByteToUnicodeN+>;movzbl (%edx), %eax;shll %eax;movw (%eax), %si": 1,
                "je  <RtlMultiByteToUnicodeN+>;movzbl (%edx), %eax;shll %eax;movw (%eax), %si;decl %edi": 1,
                "movzbl (%edx), %eax;shll %eax;movw (%eax), %si;decl %edi;decl (%ebp)": 1,
                "movw (%eax), %si;decl %edi;decl (%ebp);testw %si, %si;je  <RtlMultiByteToUnicodeN+>": 1,
                "andw $, (%ecx);incl %ecx;incl %ecx;movl (%ebp), %eax;testl %eax, %eax": 1,
                "orb $, (%edi);orb $-, (%edi);orl $, (%edi);loopne -;decl %edi": 1,
                "ja  <RtlOemToUnicodeN+>;jmpl *(,%edi,);movzbl (%eax), %ebx;movw (%edx,%ebx,), %bx;movw %bx, (%ecx)": 1,
                "jmp  <RtlOemToUnicodeN+>;andw $, (%ecx);movl (%ebp), %esi;incl %ecx;incl %ecx": 1,
                "testl %eax, %eax;je  <RtlOemToUnicodeN+>;subl %ebx, %ecx;movl %ecx, (%eax);cmpl (%ebp), %esi": 1,
                "popl %edi;sbbl %eax, %eax;popl %esi;andl $, %eax;popl %ebx": 5,
                "retl $;scasl %es:(%edi), %eax;testb %cl, (%edi);movsl (%esi), %es:(%edi);testb %cl, (%edi)": 1,
                "testb %cl, (%edi);cltd;testb %cl, (%edi);leal (%edi,%ecx,), %eax;addb %dh, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;xorl %edx, %edx;cmpb %dl, ": 1,
                "cmpb %dl, ;je  <RtlMultiByteToUnicodeSize+>;testl %eax, %eax;je  <RtlMultiByteToUnicodeSize+>;movl (%ebp), %ecx": 1,
                "jne - <RtlMultiByteToUnicodeSize+>;jmp  <RtlMultiByteToUnicodeSize+>;incl %edx;incl %edx;popl %esi": 1,
                "movl (%ebp), %ecx;addl %eax, %eax;movl %eax, (%ecx);xorl %eax, %eax;popl %ebp": 1,
                "je  <RtlUnicodeToMultiByteSize+>;movl (%ebp), %edx;pushl %edi;movzwl (%edx), %ecx;movl , %edi": 1,
                "movw (%edx,%ecx,), %cx;addl $, (%ebp);movw %cx, %dx;shrw $, %dx;testb %dl, %dl": 1,
                "decl %edi;addb %al, (%edx);xchgl %ecx, (%edi);clc;xchgb %cl, (%edi)": 1,
                "addb %al, (%edx);xchgl %ecx, (%edi);clc;xchgb %cl, (%edi);outb %al, %dx": 1,
                "movw %cx, %si;jmp  <RtlUpcaseUnicodeToMultiByteN+>;cmpw $, %si;ja  <RtlUpcaseUnicodeToMultiByteN+>;addl $, %ecx": 1,
                "movl , %ecx;movzwl %si, %edx;movl %edx, %edi;shrl $, %edi;movzwl (%ecx,%edi,), %edi": 2,
                "andl $, %edx;addl %edx, %edi;addw (%ecx,%edi,), %si;movl (%ebp), %edi;movl (%ebp), %edx": 2,
                "movb (%ecx,%eax), %cl;movb %cl, -(%edx);movzwl -(%edi), %ecx;movzbl (%ecx,%eax), %ecx;movl , %edx": 2,
                "movl , %ecx;movl %edx, %esi;shrl $, %esi;movzwl (%ecx,%esi,), %esi;movl %edx, %ebx": 30,
                "shrl $, %esi;movzwl (%ecx,%esi,), %esi;movl %edx, %ebx;shrl $, %ebx;andl $, %ebx": 30,
                "movw (,%ecx,), %cx;testw %cx, %cx;movzbl %al, %eax;je  <RtlUpcaseUnicodeToMultiByteN+>;movzwl %cx, %ecx": 1,
                "movl %ecx, %edi;shrl $, %edi;movzwl (%eax,%edi,), %edi;movl %ecx, %ebx;shrl $, %ebx": 10,
                "andl $, %ecx;addl %ecx, %edi;addw (%eax,%edi,), %si;movl (%ebp), %edi;movzwl %si, %eax": 2,
                "decl %edi;addb %dh, -(%ebx);decl %edi;addb %cl, (%ecx);movw (%edi), %cs": 1,
                "popal;movw %cs, (%edi);decl %edi;addb %ah, (%ebx);movl (%edi), %ecx": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;shrl %edx;cmpb $, ;pushl %esi": 1,
                "cmpb $, ;pushl %esi;pushl %edi;movl %edx, (%ebp);jne  <RtlUnicodeToOemN+>": 1,
                "movl (%ebp), %edi;decl (%ebp);cmpl $, %edi;jb  <RtlUnicodeToOemN+>;movb %dl, (%eax)": 1,
                "movb %cl, (%eax);incl %eax;decl (%ebp);decl (%ebp);jne - <RtlUnicodeToOemN+>": 1,
                "popl %ebp;retl $;andb $-, %al;decl %edi;addb %bl, (%edx)": 1,
                "addb %dl, -(%eax);int;int;int;int": 1,
                "movl (%ebp), %eax;testl %eax, %eax;movl %ecx, -(%ebp);je  <RtlUpcaseUnicodeToOemN+>;movl %ecx, (%eax)": 1,
                "jae  <RtlUpcaseUnicodeToOemN+>;movl %ecx, (%ebp);movw %cx, %si;jmp  <RtlUpcaseUnicodeToOemN+>;cmpw $, %si": 1,
                "movl , %edx;movzwl (%edx,%ecx,), %ecx;cmpw $, %cx;movl %ecx, (%ebp);jae  <RtlUpcaseUnicodeToOemN+>": 15,
                "jmp  <RtlUpcaseUnicodeToOemN+>;cmpw $, (%ebp);ja  <RtlUpcaseUnicodeToOemN+>;addl $, %ecx;jmp - <RtlUpcaseUnicodeToOemN+>": 15,
                "cmpl $, (%ebp);je  <RtlUpcaseUnicodeToOemN+>;movl (%ebp), %eax;movzwl (%eax), %eax;movl , %edx": 1,
                "ja  <RtlUpcaseUnicodeToOemN+>;addl $, %eax;jmp - <RtlUpcaseUnicodeToOemN+>;movl , %eax;movzwl %si, %ecx": 1,
                "andl $, %ebx;addl %ebx, %edi;movzwl (%eax,%edi,), %edi;andl $, %ecx;addl %ecx, %edi": 8,
                "jb  <RtlUpcaseUnicodeToOemN+>;movb %al, (%edi);incl %edi;movb %dl, (%edi);incl %edi": 1,
                "movl %edi, (%eax);movl -(%ebp), %eax;cmpl %eax, (%ebp);popl %edi;sbbl %eax, %eax": 1,
                "movw (%edi,%ecx,), %di;cmpw , %di;jne  <RtlUpcaseUnicodeToOemN+>;incl %ecx;cmpl %eax, %ecx": 1,
                "movzwl (%ebx), %eax;xorl %esi, %esi;cmpl %esi, %eax;movl %eax, -(%ebp);jbe  <RtlUpcaseUnicodeToOemN+>": 1,
                "movl %eax, -(%ebp);movw , %ax;movl %esi, (%ebp);movl -(%ebp), %ecx;movb (%ecx,%esi), %cl": 1,
                "shll %eax;movl %edi, (%ebp);movw (%eax,%esi), %di;testw %di, %di;je  <RtlCustomCPToUnicodeN+>": 1,
                "cmpl $, (%ebp);je  <RtlCustomCPToUnicodeN+>;incl %edx;movzbl (%edx), %eax;movzwl %di, %edi": 1,
                "je  <RtlCustomCPToUnicodeN+>;subl (%ebp), %ecx;movl %ecx, (%eax);cmpl (%ebp), %edi;popl %edi": 1,
                "decl %edi;addb %bh, -(%ebx);wait;decl %edi;addb %ah, -(%ebx)": 1,
                "cmpw $, (%eax);pushl %esi;pushl %edi;movl %edx, (%ebp);jne  <RtlUnicodeToCustomCPN+>": 1,
                "addl $-, %ecx;addl $-, %eax;pushl %ebx;cmpl $, %edi;ja  <RtlUnicodeToCustomCPN+>": 1,
                "cmpl $, %edi;ja  <RtlUnicodeToCustomCPN+>;jmpl *(,%edi,);movzwl (%eax), %ebx;movb (%ebx,%esi), %bl": 1,
                "popfl;decl %edi;addb %bh, -(%edx);decl %edi;addb %dh, -(%eax)": 1,
                "pushl %esi;movl (%ebp), %esi;shrl %eax;cmpw $, (%esi);pushl %edi": 1,
                "andl $, %edx;addl %edx, (%ebp);movl %edx, (%ebp);leal (%ecx,%edx,), %ecx;cmpl $, %edx": 1,
                "movl (%ebp), %edi;movb %dl, -(%edi);movl (%ebp), %edx;subl %edx, (%ebp);pushl $": 1,
                "movl %ebx, (%ebp);movl %edi, -(%ebp);je  <RtlUpcaseUnicodeToCustomCPN+>;cmpl $, (%ebp);je  <RtlUpcaseUnicodeToCustomCPN+>": 1,
                "cmpl $, (%ebp);je  <RtlUpcaseUnicodeToCustomCPN+>;movl (%ebp), %eax;movzwl (%eax), %eax;movw (%edi,%eax,), %ax": 1,
                "shrl $, %ebx;andl $, %ebx;addl %ebx, %edi;movzwl (%eax,%edi,), %edi;movl (%ebp), %ebx": 1,
                "decl (%ebp);decl -(%ebp);movb %al, (%ecx);jne - <RtlUpcaseUnicodeToCustomCPN+>;movl (%ebp), %ecx": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;cmpl %eax, (%ebp);popl %edi;sbbl %eax, %eax": 1,
                "addb %al, -(%ebp);decl %edi;addb %bl, %dl;lahf;decl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movw (%ecx), %ax;movzwl %ax, %edx": 1,
                "movzwl %ax, %edx;pushl %ebx;pushl %esi;movw (%ecx), %si;leal (%ecx,%edx,), %edx": 1,
                "movw (%ecx), %si;movw %si, (%eax);pushl %edi;leal (%ecx), %esi;leal (%eax), %edi": 1,
                "pushl %esi;movl (%ebp), %esi;cmpw $, (%esi);pushl %edi;movl $, %ebx": 1,
                "movl %eax, ;cmpw $, (%esi);setne %al;movb %al, ;movw (%esi), %ax": 1,
                "movb %al, ;movw (%esi), %ax;movw %ax, ;cmpw $, (%esi);je  <RtlInitCodePageTable+>": 1,
                "movw %cx, (%eax);popl %ebp;retl $;int;int": 1,
                "leal (%esi), %ecx;cmpl %eax, %ecx;je  <PfxRemovePrefix+>;movl (%esi), %ecx;addl $-, %eax": 1,
                "movl (%esi), %ecx;addl $-, %eax;jmp  <PfxRemovePrefix+>;movl (%ecx), %ecx;cmpl %esi, (%ecx)": 1,
                "addl $-, %eax;jmp  <PfxRemovePrefix+>;movl (%ecx), %ecx;cmpl %esi, (%ecx);jne - <PfxRemovePrefix+>": 1,
                "movzbl %cl, %eax;cmpw $, (%ebx,%eax,);je  <PfxRemovePrefix+>;incl %esi;incl %esi": 1,
                "cmpb $, (%edi,%ecx);jne  <PfxRemovePrefix+>;incl (%ebp);incl %ecx;cmpl %edx, %ecx": 1,
                "movl %edx, -(%ebp);jne  <PfxRemovePrefix+>;movl (%esi), %eax;cmpb $, (%eax);jne  <PfxRemovePrefix+>": 1,
                "cmpl (%ebp), %eax;jae  <PfxRemovePrefix+>;movl (%esi), %ecx;movb (%ecx,%eax), %dl;movl (%edi), %esi": 1,
                "jae  <PfxRemovePrefix+>;movl (%esi), %ecx;movb (%ecx,%eax), %dl;movl (%edi), %esi;cmpb $, %dl": 1,
                "movb (%ecx,%eax), %dl;movl (%edi), %esi;cmpb $, %dl;sete %bl;decb %bl": 1,
                "xorl %eax, %eax;jmp  <PfxRemovePrefix+>;jbe  <PfxRemovePrefix+>;pushl $;popl %eax": 1,
                "jmp  <PfxRemovePrefix+>;jbe  <PfxRemovePrefix+>;pushl $;popl %eax;jmp  <PfxRemovePrefix+>": 1,
                "jbe  <PfxRemovePrefix+>;pushl $;popl %eax;jmp  <PfxRemovePrefix+>;movl -(%ebp), %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %eax;movswl (%eax), %ecx": 1,
                "addl $, %eax;movl %eax, %esi;jmp  <RtlRemoveUnicodePrefix+>;movl %ecx, %esi;movl (%esi), %ecx": 1,
                "cmpl %esi, %ecx;jne - <RtlRemoveUnicodePrefix+>;pushl %eax;addl $-, %esi;calll - <RtlDelete>": 1,
                "jmp  <RtlRemoveUnicodePrefix+>;leal (%esi), %ecx;cmpl %eax, %ecx;je  <RtlRemoveUnicodePrefix+>;movl (%esi), %ecx": 1,
                "cmpb $, (%ebp);pushl %esi;movl (%ebp), %esi;jne  <RtlNextUnicodePrefix+>;movl (%esi), %eax": 1,
                "xorl %eax, %eax;jmp  <RtlNextUnicodePrefix+>;addl $, %eax;jmp  <RtlNextUnicodePrefix+>;movl %ecx, %eax": 1,
                "je  <RtlNextUnicodePrefix+>;movl (%edx), %edx;cmpw $, (%edx);jne  <RtlNextUnicodePrefix+>;incl %eax": 1,
                "cmpl %eax, %edx;jbe  <RtlNextUnicodePrefix+>;movl (%ebx), %esi;cmpw $, (%esi);je  <RtlNextUnicodePrefix+>": 1,
                "movl %ebx, (%ebp);movw (%ebp), %bx;cmpw (%ebp), %bx;jne  <RtlNextUnicodePrefix+>;incl -(%ebp)": 1,
                "incl %eax;cmpl %esi, -(%ebp);jb - <RtlNextUnicodePrefix+>;movl -(%ebp), %ebx;cmpl %esi, %ebx": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;pushl %esi;calll - <PfxRemovePrefix+>": 1,
                "movl %edi, (%ebp);pushl (%edi);jmp  <PfxInsertPrefix+>;cmpl $, %eax;movl (%ebp), %eax": 1,
                "addl $-, %ecx;movl %ecx, %eax;pushl (%eax);movl %ecx, (%ebp);calll - <PfxRemovePrefix+>": 1,
                "movl %eax, (%ecx);movl %esi, (%eax);movb $, %al;popl %edi;popl %esi": 2,
                "movl (%ebp), %ecx;movl (%ecx), %esi;movl %ecx, (%ebp);jmp  <PfxFindPrefix+>;movl %esi, (%ebp)": 1,
                "movl (%ecx), %esi;movl %ecx, (%ebp);jmp  <PfxFindPrefix+>;movl %esi, (%ebp);movl (%esi), %esi": 1,
                "jg - <PfxFindPrefix+>;jmp  <PfxFindPrefix+>;leal (%esi), %ebx;jmp  <PfxFindPrefix+>;pushl (%ebp)": 1,
                "movl (%ebx), %ebx;jmp  <PfxFindPrefix+>;testl %eax, %eax;jne  <PfxFindPrefix+>;movl (%ebx), %ebx": 1,
                "jne - <PfxFindPrefix+>;movl %esi, (%ebp);movl (%esi), %esi;cmpw $, (%esi);jg - <PfxFindPrefix+>": 1,
                "jg - <PfxFindPrefix+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl %edi, (%esi);movw %ax, (%esi);leal (%esi), %edi;xorl %edx, %edx;movl %edi, (%edi)": 1,
                "movw %ax, (%esi);leal (%esi), %edi;xorl %edx, %edx;movl %edi, (%edi);movl %edx, (%edi)": 1,
                "jg - <RtlInsertUnicodePrefix+>;je  <RtlInsertUnicodePrefix+>;movl -(%ebp), %eax;movl %esi, (%eax);movl %ebx, (%esi)": 1,
                "movl %ecx, (%ebp);movl (%ebp), %eax;pushl $;pushl (%ebp);pushl (%eax)": 1,
                "movl %eax, (%ebp);jne - <RtlInsertUnicodePrefix+>;andl $, (%esi);movw $, (%esi);movl (%edi), %eax": 1,
                "jmp  <RtlInsertUnicodePrefix+>;xorb %al, %al;jmp  <RtlInsertUnicodePrefix+>;andl $, (%esi);leal (%ecx), %eax": 1,
                "leal (%esi), %ebx;jmp  <RtlFindUnicodePrefix+>;pushl $;pushl (%ebp);leal -(%ebx), %edi": 1,
                "pushl $;pushl (%ebp);leal -(%ebx), %edi;pushl (%edi);calll - <RtlNextUnicodePrefix+>": 1,
                "leal -(%ebx), %edi;pushl (%edi);calll - <RtlNextUnicodePrefix+>;cmpl $, %eax;jne  <RtlFindUnicodePrefix+>": 1,
                "cmpl $, %eax;jne  <RtlFindUnicodePrefix+>;movl (%ebx), %ebx;jmp  <RtlFindUnicodePrefix+>;testl %eax, %eax": 1,
                "jmp  <RtlFindUnicodePrefix+>;testl %eax, %eax;jne  <RtlFindUnicodePrefix+>;movl (%ebx), %ebx;testl %ebx, %ebx": 1,
                "jne  <RtlFindUnicodePrefix+>;movl (%ebx), %ebx;testl %ebx, %ebx;jne - <RtlFindUnicodePrefix+>;jmp  <RtlFindUnicodePrefix+>": 1,
                "jne - <RtlFindUnicodePrefix+>;jmp  <RtlFindUnicodePrefix+>;cmpl $, (%ebp);je  <RtlFindUnicodePrefix+>;movl %edi, %ebx": 1,
                "jmp - <RtlFindUnicodePrefix+>;int;int;int;int": 1,
                "movl %ecx, (%edi);popl %edi;je  <RtlFindUnicodePrefix+>;movzbl (%ecx), %ecx;movl (%ebp), %ebx": 1,
                "jmp  <RtlFindUnicodePrefix+>;movl (%ebp), %ecx;movl %edx, (%ecx);movw (%eax), %cx;testb $, %cl": 2,
                "movl %edx, (%ecx);movw (%eax), %cx;testb $, %cl;jne  <RtlFindUnicodePrefix+>;xorl %ecx, %ecx": 1,
                "cmpl %edx, %ecx;je - <RtlFindUnicodePrefix+>;addl %ecx, %eax;jmp  <RtlFindUnicodePrefix+>;movl (%eax), %eax": 1,
                "movl (%eax), %eax;cmpl %edx, %eax;movl (%ebp), %ecx;movl %eax, (%ecx);je  <RtlFindUnicodePrefix+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);je  <RtlFindUnicodePrefix+>;movzwl (%eax), %eax;movl (%ebp), %ecx": 1,
                "movl %eax, (%ecx);jmp  <RtlFindUnicodePrefix+>;movl (%ebp), %eax;movl %edx, (%eax);popl %edi": 1,
                "pushl $;popl %ecx;cmpl %ecx, (%eax);jb  <RtlSelfRelativeToAbsoluteSD+>;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %ebx;cmpl (%edi), %ebx;ja  <RtlSelfRelativeToAbsoluteSD+>;movl -(%ebp), %edi;cmpl (%edx), %edi": 1,
                "cmpl (%edi), %ebx;ja  <RtlSelfRelativeToAbsoluteSD+>;movl -(%ebp), %edi;cmpl (%edx), %edi;ja  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "cmpl (%edx), %edi;ja  <RtlSelfRelativeToAbsoluteSD+>;movl (%ebp), %esi;pushl %ecx;pushl (%ebp)": 1,
                "movl -(%ebp), %esi;addl %eax, %ecx;addl -(%ebp), %ecx;movl (%ebp), %eax;leal (%ecx,%esi), %ecx": 1,
                "cmpl (%eax), %ecx;jbe  <RtlSelfRelativeToAbsoluteSD+>;movl %ecx, (%eax);movl $, %eax;jmp  <RtlSelfRelativeToAbsoluteSD+>": 1,
                "jmp  <RtlSelfRelativeToAbsoluteSD+>;movl (%ebp), %edx;pushl %ebx;movl %ecx, %ebx;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);cmpb $, (%eax);jne  <RtlCreateAcl+>;movb (%eax), %al;cmpb $, %al": 3,
                "cmpw $, (%eax);jne  <RtlCreateAcl+>;addl $, %eax;movl %eax, -(%ebp);cmpb $, (%eax)": 1,
                "cmpb $, (%eax);jne  <RtlCreateAcl+>;movb (%eax), %cl;cmpb $, %cl;ja  <RtlCreateAcl+>": 1,
                "jb  <RtlCreateAcl+>;movl (%eax), %ecx;movl %ecx, %edx;andl $, %edx;je  <RtlCreateAcl+>": 1,
                "jae  <RtlGetAce+>;movl (%ebp), %eax;xorl %esi, %esi;cmpl %esi, (%ebp);leal (%ecx), %edx": 1,
                "cmpl (%ebp), %esi;movl %edi, (%eax);jb - <RtlGetAce+>;movzwl (%ecx), %edx;addl %ecx, %edx": 1,
                "jae  <RtlGetAce+>;movzwl (%ecx), %ebx;incl %edi;addl %ebx, %ecx;cmpl %edx, %edi": 1,
                "movzwl (%eax), %edx;addl %eax, %edx;cmpl %edx, %ecx;ja  <RtlGetAce+>;movl %ecx, (%esi)": 1,
                "cmpl %edx, %ecx;ja  <RtlGetAce+>;movl %ecx, (%esi);movb $, %al;popl %edi": 1,
                "popl %esi;popl %ebx;popl %ebp;retl $;xorb %al, %al": 2,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;decl %eax;movl (%ebp), %ecx": 1,
                "leal (%edi,%ecx), %esi;movb (%eax,%ecx), %dl;movb %dl, (%esi,%eax);decl %eax;jns - <RtlGetAce+>": 1,
                "movb (%esi), %al;cmpb $, %al;jb  <RtlGetAce+>;cmpb $, %al;ja  <RtlGetAce+>": 1,
                "je  <RtlGetAce+>;decl %ecx;je  <RtlGetAce+>;movl $, %eax;jmp  <RtlGetAce+>": 1,
                "testl %ecx, %ecx;jne  <RtlGetAce+>;movzwl (%esi), %ecx;andl $, (%eax);movl %ecx, (%eax)": 1,
                "calll - <RtlGetAce+>;testb %al, %al;jne  <RtlAddAce+>;movl $, %eax;jmp  <RtlAddAce+>": 1,
                "andl $, (%ebp);pushl %edi;movl (%ebp), %edi;leal (%eax,%edi), %ecx;jmp  <RtlAddAce+>": 1,
                "pushl %edi;movl (%ebp), %edi;leal (%eax,%edi), %ecx;jmp  <RtlAddAce+>;movb (%eax), %dl": 1,
                "cmpb $, %dl;jbe  <RtlAddAce+>;cmpb $, %dl;ja  <RtlAddAce+>;cmpl $, %ebx": 1,
                "cmpl %ecx, %eax;jb - <RtlAddAce+>;cmpl %ecx, %eax;ja  <RtlAddAce+>;movl -(%ebp), %eax": 1,
                "jbe  <RtlAddAce+>;movzwl (%esi), %edi;cmpl %edi, %edx;jae  <RtlAddAce+>;movzwl (%ecx), %ebx": 1,
                "addl %ebx, %ecx;incl %edx;cmpl (%ebp), %edx;jb - <RtlAddAce+>;subl %ecx, %eax": 1,
                "movl (%ebp), %esi;pushl %esi;calll - <RtlCreateAcl+>;testb %al, %al;je  <RtlDeleteAce+>": 1,
                "testb %al, %al;jne  <RtlDeleteAce+>;movl $, %eax;jmp  <RtlDeleteAce+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);leal (%esi), %eax;jbe  <RtlDeleteAce+>;movl (%ebp), %ecx;movzwl (%eax), %edx": 1,
                "ja  <RtlDeleteAce+>;movl (%ebp), %ecx;cmpl $, %ecx;ja  <RtlDeleteAce+>;cmpb %cl, %al": 1,
                "movzbw (%edi), %cx;movl (%ebp), %eax;testl %eax, %eax;leal (,%ecx,), %ecx;je  <RtlDeleteAce+>": 1,
                "addl $, %eax;pushl %edi;pushl %eax;movzbl (%edi), %eax;leal (,%eax,), %eax": 1,
                "calll - <RtlDeleteAce+>;popl %ebp;retl $;int;int": 3,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <RtlDeleteAce+>": 1,
                "je  <RtlAddAccessAllowedAceEx+>;orl $, %eax;pushl $;pushl (%ebp);pushl (%ebp)": 1,
                "orl $, %eax;pushl $;pushl (%ebp);pushl (%ebp);pushl %eax": 1,
                "decl (%eax);leal (%ecx), %esi;movl %esi, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "popl %edi;jmp  <RtlAddAccessAllowedAceEx+>;xorl %eax, %eax;popl %esi;popl %ebp": 1,
                "pushl %ecx;andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;leal -(%ebp), %eax": 1,
                "shrl $, %eax;movw %ax, (%esi);orw $, %ax;movw %ax, (%esi);movb $, %al": 1,
                "shll $, %edi;pushl $;addl $, %edi;pushl %edi;calll - <RtlAddAccessAllowedAceEx+>": 1,
                "testl %esi, %esi;jne  <RtlCreateAtomTable+>;movl $, -(%ebp);jmp  <RtlCreateAtomTable+>;movl %edi, %ecx": 1,
                "calll  <SeFreePrivileges>;jmp  <RtlDestroyAtomTable+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "pushl %ebx;calll - <RtlAddAccessAllowedAceEx+>;testb %al, %al;jne  <RtlEmptyAtomTable+>;movl $, %eax": 1,
                "calll - <RtlAddAccessAllowedAceEx+>;testb %al, %al;jne  <RtlEmptyAtomTable+>;movl $, %eax;jmp  <RtlEmptyAtomTable+>": 1,
                "movl (%edi), %esi;movl %esi, -(%ebp);testl %esi, %esi;je  <RtlEmptyAtomTable+>;cmpb $, (%ebp)": 1,
                "pushl %eax;movl %ecx, -(%ebp);calll  <RtlUnicodeStringToInteger>;testl %eax, %eax;jl  <RtlEmptyAtomTable+>": 1,
                "xorl %eax, %eax;testl $, %ebx;jne  <RtlEmptyAtomTable+>;cmpw $, %bx;jb  <RtlEmptyAtomTable+>": 1,
                "sarl %esi;cmpl $, %esi;movl %esi, (%ebp);jbe  <RtlEmptyAtomTable+>;xorl %edi, %edi": 1,
                "popl %ecx;je  <RtlEmptyAtomTable+>;movl %esi, %edi;movl (%esi), %esi;testl %esi, %esi": 1,
                "pushl $;pushl $;calll - <wctomb+>;pushl (%ebp);calll - <RtlAddAccessAllowedAceEx+>": 3,
                "movl $, %eax;jmp  <RtlAddAtomToAtomTable+>;xorl %edi, %edi;movl %edi, -(%ebp);leal -(%ebp), %eax": 1,
                "xorl %ecx, %ecx;movw (%eax), %cx;incl %ecx;movw %cx, (%eax);movl (%ebp), %ecx": 1,
                "pushl %esi;calll - <RtlEmptyAtomTable+>;testb %al, %al;je  <RtlLookupAtomInAtomTable+>;cmpw $, -(%ebp)": 1,
                "jmp  <RtlLookupAtomInAtomTable+>;cmpw %di, (%esi);jne  <RtlLookupAtomInAtomTable+>;movl $, -(%ebp);jmp  <RtlLookupAtomInAtomTable+>": 1,
                "testb $, (%eax);je  <RtlDeleteAtomFromAtomTable+>;movl $, -(%ebp);jmp  <RtlDeleteAtomFromAtomTable+>;decw (%eax)": 1,
                "calll - <RtlAddAccessAllowedAceEx+>;pushl %esi;calll  <SeFreePrivileges>;jmp  <RtlDeleteAtomFromAtomTable+>;cmpw %bx, %si": 1,
                "cmpw $, %si;jb  <RtlPinAtomInAtomTable+>;movl %esi, %eax;andl $, %eax;pushl %eax": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ebx;pushl %eax;calll - <RtlAddAccessAllowedAceEx+>;testb %al, %al": 1,
                "jae  <RtlQueryAtomInAtomTable+>;testw %ax, %ax;jne  <RtlQueryAtomInAtomTable+>;movl $, -(%ebp);jmp  <RtlQueryAtomInAtomTable+>": 1,
                "testl %edi, %edi;je  <RtlQueryAtomInAtomTable+>;movzbl (%eax), %ecx;movl %ecx, (%edi);movl -(%ebp), %edi": 1,
                "movzbl (%eax), %ecx;movl %ecx, (%edi);movl -(%ebp), %edi;testl %edi, %edi;je  <RtlQueryAtomInAtomTable+>": 1,
                "andw $, (%ecx,%eax,);movl %edx, (%ebx);jmp  <RtlQueryAtomInAtomTable+>;movl $, -(%ebp);jmp  <RtlQueryAtomInAtomTable+>": 1,
                "testb %al, %al;jne  <RtlQueryAtomInAtomTable+>;movl $, %eax;jmp  <RtlQueryAtomInAtomTable+>;xorl %edx, %edx": 1,
                "movl %edx, -(%ebp);xorl %ecx, %ecx;movl %ecx, -(%ebp);movl %edx, -(%ebp);cmpl (%esi), %edx": 1,
                "jae  <RtlQueryAtomInAtomTable+>;movw (%eax), %di;movl (%ebp), %ebx;movw %di, (%ebx,%ecx,);jmp  <RtlQueryAtomInAtomTable+>": 1,
                "jmp  <RtlQueryAtomInAtomTable+>;movl $, -(%ebp);incl %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "movl -(%ebp), %esi;pushl %esi;calll - <RtlAddAccessAllowedAceEx+>;movl %edi, %eax;calll - <wctomb+>": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);popl %ebp;retl $;int": 1,
                "movb (%ecx), %dl;andl $, -(%ebp);pushl %ebx;pushl %esi;pushl %edi": 1,
                "movl (%ecx), %edx;cmpl (%eax), %edx;jb  <RtlInitializeRangeList+>;cmpb $, (%ebp);je  <RtlInitializeRangeList+>": 1,
                "cmpl (%eax), %edx;jb  <RtlInitializeRangeList+>;cmpb $, (%ebp);je  <RtlInitializeRangeList+>;testb $, (%eax)": 1,
                "movl %eax, (%esi);movl %eax, (%edx);movb (%ebp), %dl;movl (%ecx), %eax;cmpl (%edi), %eax": 1,
                "je  <RtlInitializeRangeList+>;testb %dl, %dl;jne  <RtlInitializeRangeList+>;andb $-, %al;movb %al, (%edi)": 1,
                "je  <RtlInitializeRangeList+>;pushl %esi;pushl %edi;leal (%edx), %edi;movl (%edi), %eax": 1,
                "movl %eax, (%ecx);movl $, %eax;popl %esi;popl %ebp;retl $": 2,
                "cmpl (%ecx), %eax;je  <RtlGetNextRange+>;movl $, %eax;jmp  <RtlGetNextRange+>;movl (%ecx), %eax": 1,
                "jmp  <RtlGetNextRange+>;cmpb %bl, (%ebp);je  <RtlGetNextRange+>;movl (%eax), %eax;jmp  <RtlGetNextRange+>": 1,
                "movl (%edx), %eax;subl $, %eax;movl %ebx, (%ecx);leal (%eax), %edx;cmpl (%ecx), %edx": 1,
                "rep  movsl (%esi), %es:(%edi);testb $, (%edx);je  <RtlGetNextRange+>;leal (%edx), %ecx;leal (%eax), %ebx": 1,
                "movl %edx, (%ebp);je  <RtlGetNextRange+>;pushl $;calll - <ExAllocateFromPagedLookasideList>;testl %eax, %eax": 1,
                "movl %ebx, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, (%ebx);movl (%ebp), %eax": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esi);movl (%ebx), %eax": 1,
                "popl %edi;popl %esi;popl %ebp;retl $;cmpl $, (%esi)": 1,
                "movl (%eax), %edx;ja  <RtlCopyRangeList+>;jb  <RtlCopyRangeList+>;cmpl %edx, (%ebp);jae  <RtlCopyRangeList+>": 1,
                "movb (%ebp), %dl;testb %dl, (%eax);jne  <RtlCopyRangeList+>;cmpb %cl, (%ebp);je  <RtlCopyRangeList+>": 1,
                "je  <RtlCopyRangeList+>;cmpl %ecx, (%eax);je  <RtlCopyRangeList+>;cmpl %ecx, (%ebp);je  <RtlCopyRangeList+>": 1,
                "pushl %eax;pushl (%ebp);pushl %ebx;pushl %edi;calll - <_aullrem>": 2,
                "pushl $;popl %eax;adcl %edx, %eax;cmpl %edx, %eax;jb  <RtlFindRange+>": 1,
                "adcl $-, %edi;calll - <RtlGetFirstRange+>;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 1,
                "popl %edi;sbbl %edi, %ebx;cmpl %ecx, %ebx;ja  <RtlFindRange+>;jb  <RtlFindRange+>": 1,
                "movl %eax, %edi;xorl %eax, %eax;pushl %eax;pushl (%ebp);pushl %ebx": 1,
                "movl %ebx, (%eax);xorl %eax, %eax;jmp  <RtlFindRange+>;movl $, %eax;popl %edi": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;movb (%esi), %cl": 1,
                "jne  <RtlFindRange+>;testb $, (%ebx);jne  <RtlFindRange+>;pushl %ebx;calll - <RtlFindRange+>": 1,
                "pushl %ebx;calll - <RtlFindRange+>;testl %eax, %eax;jl  <RtlFindRange+>;movl (%ebx), %edi": 1,
                "testl %eax, %eax;jl  <RtlFindRange+>;movl (%ebx), %edi;subl $, %edi;leal (%edi), %esi": 1,
                "movl (%ebx), %edi;subl $, %edi;leal (%edi), %esi;jmp  <RtlFindRange+>;movl (%ebp), %esi": 1,
                "ja  <RtlFindRange+>;movl (%eax), %edi;cmpl (%ebx), %edi;jb  <RtlFindRange+>;movl (%eax), %edi": 1,
                "cmpl %edi, (%ebx);ja  <RtlFindRange+>;jb  <RtlFindRange+>;movl (%eax), %edi;cmpl %edi, (%ebx)": 1,
                "je  <RtlFindRange+>;testb $, (%eax);je  <RtlFindRange+>;movl (%edx), %eax;subl $, %eax": 1,
                "calll - <RtlInitializeRangeList+>;movl %ebx, %ecx;leal (%ebx), %eax;leal (%edi), %edx;movl (%eax), %ebx": 1,
                "calll - <RtlInitializeRangeList+>;movl -(%ebp), %esi;movl %esi, %edi;addl $, %esi;movl (%esi), %eax": 1,
                "subl $, %eax;cmpl %esi, (%ebp);movl %eax, -(%ebp);jne - <RtlFindRange+>;pushl (%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <RtlGetFirstRange>": 1,
                "pushl %eax;pushl (%ebp);calll - <RtlGetFirstRange>;cmpl $, %eax;jne  <RtlIsRangeAvailable+>": 1,
                "pushl $;andl $, %eax;andl $, %ecx;pushl %ecx;pushl %eax": 1,
                "andl $, %eax;andl $, %ecx;pushl %ecx;pushl %eax;pushl (%ebp)": 1,
                "andb $-, (%edx);pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;pushl %edi": 1,
                "movl (%edx), %eax;cmpl (%ecx), %eax;jb  <RtlIsRangeAvailable+>;movl (%edx), %eax;cmpl (%ecx), %eax": 1,
                "jb  <RtlIsRangeAvailable+>;movl (%edx), %eax;cmpl (%ecx), %eax;jae  <RtlIsRangeAvailable+>;movl (%ecx), %eax": 1,
                "retl $;movl (%ecx), %ecx;movl (%ecx), %edi;leal (%edx), %esi;movl %edi, (%esi)": 1,
                "subl $, %esp;movl (%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %ecx;andl $, -(%ebp)": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;leal -(%ebp), %eax;pushl %edi": 1,
                "jl  <RtlIsRangeAvailable+>;leal (%esi), %ecx;movl %esi, %eax;movl (%ecx), %esi;subl $, %esi": 1,
                "movl (%ebx), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);pushl (%ebp);movl $, %esi": 1,
                "movl %eax, (%ecx);movl %ecx, (%eax);pushl (%ebp);movl $, %esi;pushl %esi": 1,
                "subl $, %esi;leal (%esi), %edi;cmpl %edi, %ebx;movl %eax, (%ebp);jne - <RtlMergeRangeLists+>": 1,
                "cmpl %edi, %ebx;movl %eax, (%ebp);jne - <RtlMergeRangeLists+>;movl (%ebp), %edi;movl (%ebp), %eax": 1,
                "movl (%eax), %ecx;addl %ecx, (%edi);movl (%eax), %eax;addl %eax, (%edi);movl (%ebp), %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;cmpl (%ebp), %ecx": 2,
                "pushl (%ebp);pushl (%ebp);pushl %ecx;pushl %eax;pushl (%ebp)": 2,
                "pushl (%ebp);pushl (%ebp);calll - <RtlInitializeRangeList+>;movl %eax, %esi;testl %esi, %esi": 1,
                "je  <RtlAddRange+>;orb $, (%esi);pushl %ebx;pushl %edi;pushl (%ebp)": 1,
                "jb  <RtlDeleteRange+>;cmpl (%ecx), %edi;ja  <RtlDeleteRange+>;jb  <RtlDeleteRange+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;cmpl (%ecx), %eax;ja  <RtlDeleteRange+>;leal (%ecx), %eax;movl (%eax), %edx": 1,
                "leave;retl $;pushl %ecx;pushl %edx;calll - <RtlIsRangeAvailable+>": 1,
                "movl (%ecx), %edi;subl $, %ecx;subl $, %edi;leal (%ecx), %edx;cmpl %edx, %esi": 1,
                "leal (%edx), %ebx;jmp  <RtlDeleteOwnersRanges+>;movl (%edx), %ebx;cmpl (%ebp), %ebx;je  <RtlDeleteOwnersRanges+>": 1,
                "movl (%ebp), %edx;pushl %ebx;pushl %esi;movl (%edx), %esi;subl $, %esi": 1,
                "movl (%edx), %esi;subl $, %esi;pushl %edi;leal (%esi), %edi;xorl %ebx, %ebx": 1,
                "pushl $;pushl $;addl $-, %edx;adcl $-, %ebx;pushl %ebx": 1,
                "jb  <RtlInvertRangeList+>;ja  <RtlInvertRangeList+>;cmpl %esi, %ecx;jbe  <RtlInvertRangeList+>;pushl %ebx": 1,
                "je  <RtlZeroHeap+>;movl (%edi), %ebx;movl %ebx, -(%ebp);movl (%edi), %esi;movl %esi, -(%ebp)": 1,
                "leal (%esi,%eax,), %eax;movl %eax, -(%ebp);testl %ebx, %ebx;jne  <RtlZeroHeap+>;movl (%edi), %esi": 1,
                "movl (%ecx), %eax;cmpl (%ecx), %eax;je  <RtlZeroHeap+>;pushl $;movl $, %eax": 1,
                "movl $, %eax;pushl %eax;movl %eax, -(%ebp);movl (%ecx), %edx;leal -(%ebp), %eax": 1,
                "incl %ecx;bound (%ecx), %esp;outsl %fs:(%esi), %dx;outsb (%esi), %dx;imull $, (%esi), %ebp": 1,
                "outsb (%esi), %dx;andb %ch, %gs:(%bx,%si);andl $, %eax;jb  <RtlZeroHeap+>;andl $, %eax": 1,
                "leal (%ecx,%edi), %edx;cmpl (%eax), %edx;jne - <RtlZeroHeap+>;addl %edi, (%eax);movl %ecx, (%eax)": 1,
                "jmp  <RtlZeroHeap+>;movl (%ebp), %ecx;movl %ecx, (%eax);movl %edi, (%eax);movl (%ebx), %ecx": 1,
                "popal;jae  <RtlZeroHeap+>;andb %ah, (%ebp);je  <RtlZeroHeap+>;jns  <RtlZeroHeap+>": 1,
                "jns  <RtlZeroHeap+>;imull $, (%esi), %ebp;imull $, (%esp,%esi,), %esi;outsb (%esi), %dx;andb %ch, %gs:(%bp)": 1,
                "movl (%eax), %edi;testl %edi, %edi;movl %eax, -(%ebp);je  <RtlZeroHeap+>;movl (%ebp), %esi": 1,
                "jne - <RtlZeroHeap+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ebp), %eax;movl %eax, (%ebp);je  <RtlZeroHeap+>;movzwl (%esi), %ecx;leal (%esi,%ecx,), %ecx": 1,
                "jmp  <RtlZeroHeap+>;cmpl (%ebp), %esi;jne  <RtlZeroHeap+>;movl (%ebp), %esi;jmp - <RtlZeroHeap+>": 1,
                "cmpl (%ebp), %esi;jne  <RtlZeroHeap+>;movl (%ebp), %esi;jmp - <RtlZeroHeap+>;pushl (%ebp)": 1,
                "calll - <DbgBreakPoint>;jmp - <RtlZeroHeap+>;movb $, (%eax);movl (%ebx), %eax;movl -(%ebp), %ecx": 1,
                "cmpl $, (%ebx);jne - <RtlZeroHeap+>;movl (%ebx), %ecx;jmp  <RtlZeroHeap+>;movl (%ecx), %edx": 1,
                "calll - <ZwFreeVirtualMemory>;jmp  <RtlZeroHeap+>;xorl %eax, %eax;leave;retl $": 1,
                "jmp  <RtlZeroHeap+>;xorl %eax, %eax;leave;retl $;int": 1,
                "insl %dx, %es:(%edi);outsl (%esi), %dx;imull $, %fs:(%esi), %esp;je  <RtlZeroHeap+>;andl $, %eax": 4,
                "je  <RtlZeroHeap+>;jb  <RtlZeroHeap+>;imull $, (%eax), %esi;jb  <RtlZeroHeap+>;orb %fs:(%eax), %al": 4,
                "addb %al, (%eax);decl %eax;incl %ebp;incl %ecx;pushl %eax": 5,
                "jne  <RtlZeroHeap+>;cmpl %ecx, %edx;jne  <RtlZeroHeap+>;movl (%ebp), %ecx;cmpl %ecx, %eax": 4,
                "testb $, %al;je  <RtlZeroHeap+>;testb $, %al;movzwl (%esi), %ecx;leal -(,%ecx,), %ecx": 2,
                "movzwl (%esi), %ecx;leal -(,%ecx,), %ecx;movl %ecx, (%ebp);je  <RtlZeroHeap+>;cmpl $, %ecx": 2,
                "jae  <RtlZeroHeap+>;movzbl (%esi), %eax;movl (%ebx,%eax,), %eax;movl %esi, (%eax);movzwl (%esi), %ecx": 1,
                "jne  <RtlZeroHeap+>;movl (%eax), %eax;leal (%edi,%eax,), %esi;testb $, (%esi);jne  <RtlZeroHeap+>": 1,
                "addl %eax, %ecx;cmpl $, %ecx;ja  <RtlZeroHeap+>;cmpb $, (%ebp);je  <RtlZeroHeap+>": 1,
                "movw %cx, (%edi);jne  <RtlZeroHeap+>;movl (%eax), %ecx;movw %cx, %ax;movw %ax, (%edi,%ecx,)": 1,
                "movw %ax, (%edi,%ecx,);movl %edi, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi,%eax,), %eax;movl %eax, -(%ebp);movb (%esi), %al": 1,
                "testb $, (%esi);movl %ebx, %edx;je  <RtlZeroHeap+>;cmpb $, (%esi);jae  <RtlZeroHeap+>": 1,
                "cmpb $, (%esi);jae  <RtlZeroHeap+>;movzbl (%esi), %ecx;movl (%edi,%ecx,), %ecx;movl %esi, (%ecx)": 1,
                "jne - <RtlZeroHeap+>;testb $, (%ebp);jne  <RtlZeroHeap+>;movw %dx, (%esi);popl %edi": 1,
                "testb $, (%ebp);jne  <RtlZeroHeap+>;movw %dx, (%esi);popl %edi;popl %esi": 1,
                "movl (%esi), %esi;andl $, (%ebp);pushl $-;calll - <ZwFreeVirtualMemory>;testl %esi, %esi": 1,
                "pushl %eax;calll - <RtlZeroHeap+>;decl %esi;jne - <RtlDestroyHeap+>;popl %esi": 1,
                "calll - <RtlZeroHeap+>;decl %esi;jne - <RtlDestroyHeap+>;popl %esi;popl %ebx": 1,
                "movl (%ebp), %eax;subl (%ebp), %eax;movl $, %ebx;cltd;movl %ebx, %ecx": 1,
                "movw (%eax), %ax;movw %ax, (%ebp);jmp  <RtlSizeHeap+>;andl $, (%ebp);movl (%ebp), %ecx": 1,
                "movl (%ebp), %eax;subl %ecx, %eax;cltd;movl $, %ebx;idivl %ebx": 1,
                "pushl $;calll - <DbgPrint>;popl %ecx;popl %ecx;xorb %al, %al": 1,
                "movzbl %dl, %eax;movl %esi, (%ebx,%eax,);leal (%ebx), %eax;cmpb %dl, (%eax);jae  <RtlSizeHeap+>": 1,
                "incb (%ebp);movb (%ebp), %cl;cmpb (%esi), %cl;jbe - <RtlSizeHeap+>;cmpb $, %bl": 1,
                "movl (%esi), %eax;andl $, -(%ebp);addl $, %ebx;cmpl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "ja  <RtlSizeHeap+>;movl %eax, -(%ebp);pushl $;movl $, %edi;pushl %edi": 1,
                "pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $-": 5,
                "movl -(%ebp), %eax;movl (%eax), %eax;jmp  <RtlSizeHeap+>;shrl $, -(%ebp);pushl $": 1,
                "pushl %esi;calll - <RtlZeroHeap+>;movl %edi, %eax;jmp  <RtlSizeHeap+>;pushl $": 1,
                "outsb (%esi), %dx;andb %dh, (%di);arpl %bp, (%edi);insl %dx, %es:(%edi);imull $, (%esp,%esi,), %esi": 1,
                "jb  <RtlSizeHeap+>;andl $, %eax;int;int;int": 1,
                "cmpw $, %cx;movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);jne  <RtlSizeHeap+>": 1,
                "pushl (%ebp);calll - <RtlZeroHeap+>;testl %eax, %eax;movl %eax, -(%ebp);jne  <RtlSizeHeap+>": 1,
                "jne  <RtlSizeHeap+>;pushl (%ebp);pushl -(%ebp);pushl $;calll - <DbgPrint>": 1,
                "pushl %edi;pushl %esi;movl %ecx, (%ebp);calll - <RtlZeroHeap+>;movl %eax, %edi": 1,
                "movl %eax, %edi;movzwl (%edi), %eax;cmpl (%esi), %eax;jae  <RtlSizeHeap+>;addl %eax, (%esi)": 1,
                "movl (%eax), %eax;cmpl %eax, %ecx;jne - <RtlSizeHeap+>;movl (%eax), %edx;leal (%edi), %ecx": 2,
                "movb %al, (%ebx);movzwl %cx, %eax;movl %eax, (%ebp);movl -(%ebp), %eax;movb $, (%ebx)": 1,
                "calll - <RtlZeroHeap+>;movl -(%ebp), %eax;testl %eax, %eax;je  <RtlSizeHeap+>;movzwl (%eax), %ecx": 1,
                "je  <RtlSizeHeap+>;movzwl (%eax), %ecx;pushl %ecx;pushl %eax;pushl %esi": 2,
                "orl $, (%ebp);testb $, -(%ebp);je  <RtlCreateHeap+>;orl $, (%ebp);testb $, -(%ebp)": 1,
                "jne  <RtlCreateHeap+>;movl , %eax;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jne  <RtlCreateHeap+>": 3,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <ZwQuerySystemInformation>;testl %eax, %eax": 1,
                "addl $, %eax;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);je  <RtlCreateHeap+>;cmpl $, -(%ebp)": 1,
                "ja  <RtlCreateHeap+>;testb $, (%ebp);jne  <RtlCreateHeap+>;movl (%ebp), %edi;movl %edi, -(%ebp)": 1,
                "cmpl %ebx, (%ebp);jne  <RtlCreateHeap+>;movl $, (%ebp);movl -(%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %eax;movb $, (%eax);movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %ecx": 1,
                "andw $, (%eax);movl %edi, %ecx;movl -(%ebp), %eax;subl %eax, %ecx;movw %cx, (%eax)": 1,
                "movb $, (%eax);movl -(%ebp), %eax;movl (%ebp), %ecx;addl %eax, %ecx;pushl %ecx": 1,
                "movl %ecx, (%eax);movl -(%ebp), %eax;shrl $, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl $, (%eax);movl -(%ebp), %eax;movl $, (%eax);jmp  <RtlCreateHeap+>;movl $, (%eax)": 1,
                "testb $, (%eax);je  <RtlCreateHeap+>;addl $, (%eax);movl -(%ebp), %eax;calll - <wctomb+>": 1,
                "cmpl %eax, %edi;je  <RtlCreateHeap+>;addl $-, %edi;movl %edi, -(%ebp);movb (%edi), %bl": 1,
                "jne  <RtlCreateHeap+>;cmpl %ecx, %edx;jne  <RtlCreateHeap+>;movl -(%ebp), %ecx;movl %eax, (%ecx)": 2,
                "movl %eax, -(%ebp);movb %al, (%edi);movl -(%ebp), %esi;leal (%esi), %eax;movl %eax, %edi": 1,
                "movzbl %ah, %eax;movsbl (%eax), %eax;addl $, %eax;jmp  <RtlCreateHeap+>;shrl $, %edx": 3,
                "movsbl (%eax), %eax;addl $, %eax;jmp  <RtlCreateHeap+>;shrl $, %edx;andl $, %edx": 3,
                "andl $, %edx;je  <RtlCreateHeap+>;movsbl (%edx), %eax;addl $, %eax;jmp  <RtlCreateHeap+>": 3,
                "jmp  <RtlCreateHeap+>;shrl $, %eax;movsbl (%eax), %eax;addl $, %eax;subl %ecx, %eax": 1,
                "testl %eax, %eax;jne - <RtlCreateHeap+>;movl (%edx), %eax;movl %eax, -(%ebp);addl $, %edx": 1,
                "subl %ecx, %eax;movl -(%ebp), %ecx;leal (%ecx,%eax,), %eax;jmp  <RtlCreateHeap+>;leal (%esi), %edx": 1,
                "je  <RtlCreateHeap+>;andl $, -(%ebp);testl %ecx, %ecx;je  <RtlCreateHeap+>;pushl $-": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);testl %edi, %edi;je  <RtlCreateHeap+>;movb (%edi), %al": 1,
                "movl %edi, -(%ebp);testl %edi, %edi;je  <RtlCreateHeap+>;movb (%edi), %al;movb %al, -(%ebp)": 1,
                "incl %edx;shll %cl, %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;leal (%eax,%ecx), %eax": 2,
                "cmpb $, ;je  <RtlCreateHeap+>;calll - <DbgBreakPoint>;movzwl (%edi), %ecx;movl -(%ebp), %eax": 2,
                "movb %al, (%edi);movzwl (%edi), %ebx;movl -(%ebp), %eax;subl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "leal (%esi), %eax;pushl %eax;calll - <RtlFillMemoryUlong>;movb (%esi), %al;orb $, %al": 3,
                "movl -(%ebp), %edx;cmpw $, %bx;jae  <RtlCreateHeap+>;movzwl %bx, %eax;leal (%edx,%eax,), %ecx": 2,
                "movl %ecx, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp);movl (%ecx), %edi;movl %edi, -(%ebp)": 2,
                "testb $, %al;je  <RtlCreateHeap+>;movw %bx, (%edi);movb (%esi), %al;andb $-, %al": 1,
                "jne  <RtlCreateHeap+>;movw %bx, (%esi,%ebx,);movb (%esi), %cl;andb $-, %cl;movb %cl, (%esi)": 1,
                "addl $, %eax;movl %eax, -(%ebp);pushl $;pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movw %ax, (%ecx);movb -(%ebp), %al;orb $, %al;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);jmp  <RtlCreateHeap+>;movl $, -(%ebp);testb $, (%ebp);je  <RtlCreateHeap+>": 1,
                "jmp  <RtlCreateHeap+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;xorl %ecx, %ecx": 1,
                "movl %ebx, -(%ebp);movb (%eax), %bl;testb $, %bl;je  <RtlCreateHeap+>;testb $, %dl": 1,
                "jae  <RtlCreateHeap+>;testb $, %bl;je  <RtlCreateHeap+>;addl $-, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %eax, %esi;jne  <RtlCreateHeap+>;movl %ecx, (%edx);movl %edx, (%ecx);movl %edi, -(%ebp)": 1,
                "cmpl %edx, (%esi);jne  <RtlCreateHeap+>;movl (%ecx), %edx;movl %edx, -(%ebp);cmpl %edx, %ecx": 1,
                "movl (%edx), %edx;jmp - <RtlCreateHeap+>;movl %edx, -(%ebp);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, (%ecx);movl %eax, (%edx);movl -(%ebp), %ecx;movl -(%ebp), %eax;addl %ecx, (%eax)": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %eax;addl %ecx, (%eax);jmp  <RtlCreateHeap+>;pushl %eax": 1,
                "incl %eax;retl;movl -(%ebp), %esp;movb $, -(%ebp);andl $, -(%ebp)": 1,
                "calll - <wctomb+>;movl (%ebp), %esi;movl %esi, %ebx;movl %ebx, -(%ebp);andl $, -(%ebp)": 1,
                "movl %esi, %ebx;movl %ebx, -(%ebp);andl $, -(%ebp);movb $, -(%ebp);movl (%ebp), %eax": 1,
                "jae  <RtlAllocateHeap+>;testl %ecx, %ecx;jne  <RtlAllocateHeap+>;incl %ecx;addl $, %ecx": 1,
                "movl %eax, -(%ebp);movb (%eax), %dl;movb %dl, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, (%edi);movl %edi, (%ecx);cmpl -(%ebp), %ecx;jne  <RtlAllocateHeap+>;movzwl (%eax), %ecx": 1,
                "movl %ecx, -(%ebp);movzbl (%ecx), %ecx;xorl %edi, %ecx;movl -(%ebp), %edi;movb %cl, (%edi)": 1,
                "testw $, %ax;je  <RtlAllocateHeap+>;andl $, %edx;je  <RtlAllocateHeap+>;movsbl (%edx), %eax": 1,
                "jmp  <RtlAllocateHeap+>;movzbl %ah, %eax;movsbl (%eax), %eax;addl $, %eax;jmp  <RtlAllocateHeap+>": 1,
                "addl $, %eax;jmp  <RtlAllocateHeap+>;shrl $, %edx;andl $, %edx;je  <RtlAllocateHeap+>": 1,
                "movl (%esi), %edx;movl %edx, -(%ebp);movl (%edx), %edi;cmpl (%ecx), %edi;jne  <RtlAllocateHeap+>": 1,
                "movl %eax, -(%ebp);movb $, (%eax);movzwl (%eax), %edx;movl -(%ebp), %ecx;subl %ecx, %edx": 1,
                "andl $, %eax;movb %al, (%esi);cmpw $, %dx;jae  <RtlAllocateHeap+>;movzwl %dx, %eax": 3,
                "jae  <RtlAllocateHeap+>;movzwl %dx, %eax;leal (%ebx,%eax,), %eax;movl %eax, -(%ebp);cmpl %eax, (%eax)": 1,
                "jne  <RtlAllocateHeap+>;movzwl (%esi), %ecx;movl %ecx, %eax;shrl $, %eax;movl %eax, -(%ebp)": 3,
                "jbe  <RtlAllocateHeap+>;movl (%ecx), %ecx;jmp - <RtlAllocateHeap+>;leal (%esi), %eax;movl %eax, -(%ebp)": 3,
                "movl %edi, (%eax);movl %eax, (%edi);movl %eax, (%ecx);addl %edx, (%ebx);jmp  <RtlAllocateHeap+>": 1,
                "movzbl (%eax), %eax;orl -(%ebp), %eax;movl -(%ebp), %ecx;movb %al, (%ecx);leal (%esi), %eax": 2,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;leal (%edi,%ebx), %edi;movl %edi, -(%ebp);xorl %ecx, %ecx": 1,
                "testb $, (%esi);jne  <RtlAllocateHeap+>;movw %dx, (%esi,%edx,);xorl %eax, %eax;movb (%esi), %al": 1,
                "movl %eax, (%edi);jmp - <RtlAllocateHeap+>;leal (%ebx), %edi;movl %edi, -(%ebp);xorl %ecx, %ecx": 1,
                "addl $, -(%ebp);pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll - <RtlRaiseException>;movl %esi, %eax;calll - <wctomb+>;retl $": 1,
                "testb %cl, %al;jne  <RtlFreeHeap+>;pushl %eax;pushl (%esi);calll - <ExAcquireResourceExclusiveLite>": 1,
                "calll - <RtlZeroHeap+>;movl %eax, -(%ebp);movl -(%ebp), %ecx;cmpl $, %ecx;jae  <RtlFreeHeap+>": 1,
                "jae  <RtlFreeHeap+>;xorl %ecx, %ecx;movb (%eax), %cl;andl $, %ecx;movb %cl, (%eax)": 1,
                "incl %edi;shll %cl, %edi;movl %edi, -(%ebp);leal (%edx,%esi), %ecx;xorl %edx, %edx": 1,
                "pushl %edi;pushl $;popl %edi;movl %edi, -(%ebp);movzbl (%eax), %ecx": 1,
                "cmpw %bx, (%edx,%ecx,);setne %bl;incl %ebx;pushl %ebx;pushl %eax": 1,
                "movl %ecx, (%ebp);je  <RtlUpcaseUnicodeString+>;pushl %ebx;movl (%esi), %eax;movw (%eax,%ecx,), %ax": 1,
                "cmpw $, %ax;jb  <RtlUpcaseUnicodeString+>;cmpw $, %ax;ja  <RtlUpcaseUnicodeString+>;movzwl %ax, %eax": 1,
                "movzwl %ax, %eax;subl $, %eax;jmp  <RtlUpcaseUnicodeString+>;movl (%esi), %eax;movzwl (%eax,%ecx,), %ecx": 1,
                "movzwl (%eax,%ecx,), %ecx;movl , %eax;movl %ecx, (%ebp);movzwl %cx, %ecx;movl %ecx, %edx": 2,
                "movl %ecx, (%ebp);movzwl %cx, %ecx;movl %ecx, %edx;shrl $, %edx;movzwl (%eax,%edx,), %edx": 2,
                "movw %ax, (%ebx,%ecx,);incl %ecx;cmpl %edx, %ecx;movl %ecx, (%ebp);jb - <RtlUpcaseUnicodeString+>": 1,
                "movzwl %ax, %eax;addl $, %eax;jmp  <RtlDowncaseUnicodeString+>;movl (%esi), %eax;movzwl (%eax,%ecx,), %ecx": 1,
                "movl , %eax;pushl %esi;movzwl %dx, %ecx;pushl %edi;movl %ecx, %esi": 2,
                "pushl %esi;movzwl %dx, %ecx;pushl %edi;movl %ecx, %esi;shrl $, %esi": 2,
                "jmp  <RtlUpcaseUnicodeChar+>;cmpw $, %dx;ja  <RtlUpcaseUnicodeChar+>;movzwl %dx, %eax;addl $, %eax": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax;je  <RtlFreeUnicodeString+>;pushl %eax": 1,
                "pushl %eax;calll - <RtlUnicodeToMultiByteSize>;movl (%ebp), %eax;incl %eax;popl %ebp": 1,
                "movl (%ecx), %edx;movzwl (%ecx), %ecx;pushl %ebx;pushl %esi;movl (%eax), %esi": 1,
                "movl %eax, -(%ebp);je  <RtlCompareUnicodeString+>;cmpl %eax, %esi;jae  <RtlCompareUnicodeString+>;movl , %ecx": 1,
                "andl $, %edx;addl %edx, %eax;addw (%ecx,%eax,), %di;movl (%ebp), %edx;cmpw %di, (%ebp)": 1,
                "movl (%ebp), %edx;cmpw %di, (%ebp);jne  <RtlCompareUnicodeString+>;cmpl -(%ebp), %esi;jb - <RtlCompareUnicodeString+>": 1,
                "jmp - <RtlCompareUnicodeString+>;movzwl (%ebp), %edx;movzwl %cx, %eax;subl %edx, %eax;jmp - <RtlCompareUnicodeString+>": 1,
                "addw (%ebp), %cx;movl (%ebp), %edi;movzwl %cx, %ecx;cmpl %ecx, %edx;jne  <RtlEqualUnicodeString+>": 1,
                "movl (%ebp), %edi;movzwl %cx, %ecx;cmpl %ecx, %edx;jne  <RtlEqualUnicodeString+>;cmpl (%ebp), %esi": 1,
                "cmpl %edx, %esi;jb - <RtlEqualUnicodeString+>;jmp - <RtlEqualUnicodeString+>;xorb %al, %al;popl %edi": 1,
                "movl , %eax;movw (%edi), %dx;movw (%ebx), %si;incl %edi;incl %edi": 1,
                "movl %edi, (%ebp);movl %ebx, (%ebp);je  <RtlPrefixUnicodeString+>;cmpw $, %dx;jae  <RtlPrefixUnicodeString+>": 1,
                "cmpw $, %dx;jae  <RtlPrefixUnicodeString+>;movzwl %dx, %edx;jmp  <RtlPrefixUnicodeString+>;cmpw $, %dx": 1,
                "jae  <RtlPrefixUnicodeString+>;movzwl %dx, %edx;jmp  <RtlPrefixUnicodeString+>;cmpw $, %dx;ja  <RtlPrefixUnicodeString+>": 1,
                "jmp  <RtlPrefixUnicodeString+>;cmpw $, %dx;ja  <RtlPrefixUnicodeString+>;movzwl %dx, %edx;subl $, %edx": 1,
                "movl (%ebp), %edi;addw %dx, %cx;movzwl %cx, %edx;cmpw $, %si;movzwl %si, %ecx": 1,
                "jb  <RtlPrefixUnicodeString+>;cmpw $, %si;ja  <RtlPrefixUnicodeString+>;subl $, %ecx;jmp  <RtlPrefixUnicodeString+>": 1,
                "movl (%ebp), %edi;addw %si, %cx;movzwl %cx, %ecx;cmpl %ecx, %edx;jne  <RtlPrefixUnicodeString+>": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);je  <RtlCreateUnicodeString+>;pushl %edi;movl %ebx, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;xorl %ecx, %ecx": 1,
                "je  <RtlHashUnicodeString+>;movl %eax, (%ebp);movl , %eax;pushl %ebx;movw (%esi), %dx": 1,
                "movl (%ebp), %edi;addw %dx, %cx;movzwl %cx, %ecx;movl -(%ebp), %edx;imull $, %edx, %edx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;xorl %edi, %edi;cmpl %edi, %eax": 1,
                "testb $, %bl;je  <RtlHashUnicodeString+>;cmpw $, %di;ja  <RtlHashUnicodeString+>;testw %di, %di": 1,
                "incl %ebx;incl %ebx;decl -(%ebp);jne - <RtlHashUnicodeString+>;movl -(%ebp), %eax": 1,
                "cmpw -(%ebp,%edx,), %ax;je  <RtlHashUnicodeString+>;incl %ecx;cmpw %di, %cx;jb - <RtlHashUnicodeString+>": 2,
                "andl $, -(%ebp);xorl %eax, %eax;movw (%esi), %ax;pushl %eax;calll - <RtlUpcaseUnicodeChar+>": 1,
                "je  <RtlHashUnicodeString+>;incl %ebx;cmpw %di, %bx;jb - <RtlHashUnicodeString+>;cmpw %di, %bx": 2,
                "cmpw %di, %bx;je - <RtlHashUnicodeString+>;jmp  <RtlHashUnicodeString+>;cmpw %di, %bx;jae  <RtlHashUnicodeString+>": 1,
                "testw %ax, %ax;leal (%esi,%ecx,), %esi;jne - <RtlHashUnicodeString+>;jmp - <RtlHashUnicodeString+>;testw %ax, %ax": 2,
                "jmp - <RtlHashUnicodeString+>;testw %ax, %ax;je - <RtlHashUnicodeString+>;cmpw %di, (%esi);je - <RtlHashUnicodeString+>": 1,
                "movl -(%ebp), %ecx;addl $, %eax;testw %ax, %ax;leal (%esi,%ecx,), %esi;jne - <RtlHashUnicodeString+>": 1,
                "movl %eax, %ecx;movl -(%ebp), %eax;subl %ecx, %eax;movl -(%ebp), %ecx;movw %ax, (%ecx)": 1,
                "movl %eax, (%esi);jne  <RtlAnsiStringToUnicodeString+>;movl $, %eax;jmp  <RtlAnsiStringToUnicodeString+>;cmpw (%esi), %cx": 1,
                "jb  <RtlAnsiStringToUnicodeString+>;movl $, %eax;jmp  <RtlAnsiStringToUnicodeString+>;movzwl (%edi), %eax;pushl %eax": 1,
                "cmpl %ebx, %edi;jge  <RtlAnsiStringToUnicodeString+>;cmpb %bl, (%ebp);je  <RtlAnsiStringToUnicodeString+>;pushl (%esi)": 1,
                "xorl %ebx, %ebx;cmpb %bl, ;pushl %edi;movl (%ebp), %edi;movl %ebx, -(%ebp)": 1,
                "movl $, %eax;jmp  <RtlUnicodeStringToAnsiString+>;cmpb %bl, (%ebp);pushl %esi;movl (%ebp), %esi": 1,
                "xorl %ebx, %ebx;cmpb %bl, ;pushl %edi;movl (%ebp), %edi;je  <RtlUpcaseUnicodeStringToAnsiString+>": 1,
                "je  <RtlUpcaseUnicodeStringToAnsiString+>;pushl %edi;calll - <RtlxUnicodeStringToOemSize>;jmp  <RtlUpcaseUnicodeStringToAnsiString+>;movzwl (%edi), %eax": 1,
                "jne  <RtlUpcaseUnicodeStringToAnsiString+>;movl $, %eax;jmp  <RtlUpcaseUnicodeStringToAnsiString+>;cmpw (%esi), %cx;jb  <RtlUpcaseUnicodeStringToAnsiString+>": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;movb %bl, (%ecx,%eax);xorl %eax, %eax;popl %esi": 2,
                "pushl %edi;calll - <RtlxOemStringToUnicodeSize>;jmp  <RtlOemStringToUnicodeString+>;movzwl (%edi), %eax;leal (%eax,%eax), %eax": 1,
                "movl %eax, (%esi);jne  <RtlOemStringToUnicodeString+>;movl $, %eax;jmp  <RtlOemStringToUnicodeString+>;cmpw (%esi), %cx": 1,
                "jmp  <RtlOemStringToUnicodeString+>;cmpw (%esi), %cx;jb  <RtlOemStringToUnicodeString+>;movl $, %eax;jmp  <RtlOemStringToUnicodeString+>": 1,
                "jb  <RtlOemStringToUnicodeString+>;movl $, %eax;jmp  <RtlOemStringToUnicodeString+>;movzwl (%edi), %eax;pushl %eax": 1,
                "jmp  <RtlOemStringToUnicodeString+>;movzwl (%edi), %eax;pushl %eax;pushl (%edi);leal (%ebp), %eax": 1,
                "movl (%ebp), %edi;je  <RtlUnicodeStringToOemString+>;pushl %edi;calll - <RtlxUnicodeStringToOemSize>;jmp  <RtlUnicodeStringToOemString+>": 1,
                "cmpl $, %eax;jbe  <RtlUnicodeStringToOemString+>;movl $, %eax;jmp  <RtlUnicodeStringToOemString+>;cmpb %bl, (%ebp)": 1,
                "jbe  <RtlUpcaseUnicodeStringToOemString+>;movl $, %eax;jmp  <RtlUpcaseUnicodeStringToOemString+>;cmpb $, (%ebp);pushl %esi": 1,
                "movl $, %ebx;testl %ebx, %ebx;jge  <RtlUpcaseUnicodeStringToOemString+>;cmpb $, (%ebp);je  <RtlUpcaseUnicodeStringToOemString+>": 1,
                "movzwl (%edi), %eax;leal (%eax,%eax), %eax;addl $-, %eax;cmpl %ebx, %eax;jne  <RtlOemStringToCountedUnicodeString+>": 1,
                "leal (%eax,%eax), %eax;addl $-, %eax;cmpl %ebx, %eax;jne  <RtlOemStringToCountedUnicodeString+>;movl (%ebp), %eax": 1,
                "movl %edi, %eax;jmp  <RtlOemStringToCountedUnicodeString+>;xorl %eax, %eax;popl %esi;popl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;cmpb $, ;pushl %ebx;pushl %edi": 2,
                "cmpb $, ;pushl %ebx;pushl %edi;movl (%ebp), %edi;je  <RtlUnicodeStringToCountedOemString+>": 1,
                "cmpl %ebx, %eax;jne  <RtlUnicodeStringToCountedOemString+>;movl (%ebp), %eax;movw %bx, (%eax);movw %bx, (%eax)": 1,
                "jne  <RtlUnicodeStringToCountedOemString+>;movl (%ebp), %eax;movw %bx, (%eax);movw %bx, (%eax);movl %ebx, (%eax)": 1,
                "calll *;cmpl %ebx, %eax;movl %eax, (%esi);jne  <RtlUnicodeStringToCountedOemString+>;movl $, %eax": 1,
                "movl %eax, (%esi);jne  <RtlUnicodeStringToCountedOemString+>;movl $, %eax;jmp  <RtlUnicodeStringToCountedOemString+>;cmpw (%esi), %ax": 1,
                "jbe  <RtlUnicodeStringToCountedOemString+>;movl $, %eax;jmp  <RtlUnicodeStringToCountedOemString+>;movzwl (%edi), %eax;pushl %eax": 1,
                "movl $, %eax;jmp  <RtlUnicodeStringToCountedOemString+>;movzwl (%edi), %eax;pushl %eax;pushl (%edi)": 1,
                "testl %ebx, %ebx;jge  <RtlUnicodeStringToCountedOemString+>;cmpb $, (%ebp);je  <RtlUnicodeStringToCountedOemString+>;pushl (%esi)": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;jne  <RtlUpcaseUnicodeStringToCountedOemString+>;movl (%ebp), %eax;movw %bx, (%eax)": 1,
                "cmpl %ebx, %eax;movl %eax, (%esi);jne  <RtlUpcaseUnicodeStringToCountedOemString+>;movl $, %eax;jmp  <RtlUpcaseUnicodeStringToCountedOemString+>": 1,
                "jl  <RtlUpcaseUnicodeStringToCountedOemString+>;pushl %edi;pushl %esi;calll - <RtlUpcaseUnicodeToOemN+>;testb %al, %al": 1,
                "je  <RtlUpcaseUnicodeStringToCountedOemString+>;pushl (%esi);calll *;andl $, (%esi);movl %ebx, %eax": 1,
                "jae  <RtlUpperChar+>;movl %eax, (%ebp);movw %ax, %dx;jmp  <RtlUpperChar+>;cmpw $, %dx": 1,
                "addw (%eax,%esi,), %dx;movl , %ecx;movzwl %dx, %eax;movb (%eax,%ecx), %al;jmp  <RtlUpperChar+>": 1,
                "movl %ecx, (%ebp);jae  <RtlUpperChar+>;movl %ecx, (%ebp);movw %cx, %si;jmp  <RtlUpperChar+>": 1,
                "movb %cl, %al;popl %edi;popl %esi;popl %ebp;retl $": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%eax), %esi": 1,
                "movb (%edi), %cl;incl %esi;incl %edi;cmpb %cl, %al;jne  <RtlCompareString+>": 1,
                "cmpb %cl, %al;jne  <RtlPrefixString+>;addl $, %edi;testw %di, %di;jne - <RtlPrefixString+>": 1,
                "movb %cl, (%ebp);movl %edx, (%ebp);je  <RtlPrefixString+>;pushl (%ebp);calll - <RtlUpperChar>": 1,
                "pushl %ecx;pushl %ecx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 5,
                "movzwl %dx, %eax;testl %eax, %eax;movw %ax, (%ecx);je  <RtlUpperString+>;pushl %ebx": 1,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <RtlAppendAsciizToString+>": 1,
                "cmpb $, (%eax);ja  <RtlValidSid+>;orl $-, -(%ebp);movb %cl, %al;jmp  <RtlValidSid+>": 1,
                "movb %cl, %al;jmp  <RtlValidSid+>;xorl %eax, %eax;incl %eax;retl": 1,
                "movb (%eax), %dl;cmpb (%ecx), %dl;jne  <RtlValidSid+>;movb (%eax), %dl;cmpb (%ecx), %dl": 6,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;leal (,%eax,), %eax;popl %ebp": 1,
                "movb (%ebp), %cl;cmpb $, %cl;jbe  <RtlInitializeSid+>;movl $, %eax;jmp  <RtlInitializeSid+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movzbl (%eax), %eax;leal (,%eax,), %eax": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;subl %eax, %ecx;leal (%eax), %esi;movl %ecx, (%ebp)": 1,
                "leal (%eax), %edi;andl $-, %edi;cmpl (%ebp), %eax;ja  <RtlCopySid+>;movl (%ebp), %edx": 1,
                "movl %ebx, -(%esi);movl (%edx,%esi), %edx;movl %edx, (%esi);pushl (%ecx);pushl %ebx": 1,
                "addl $, %esi;cmpl (%ebp), %eax;jb - <RtlCopySid+>;movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "pushl %ecx;pushl $;pushl $;pushl %eax;calll  <RtlIntegerToUnicode>": 1,
                "cmpb (%esi), %bl;jb - <RtlConvertSidToUnicodeString+>;cmpb $, (%ebp);je  <RtlConvertSidToUnicodeString+>;leal -(%ebp), %eax": 1,
                "jne - <RtlConvertSidToUnicodeString+>;leal -(%ebp), %eax;subl %eax, %edi;movl -(%ebp), %eax;movzwl (%eax), %ecx": 1,
                "pushl %ecx;addl $, %edi;pushl %eax;movw %di, -(%ebp);calll - <RtlCopyUnicodeString>": 1,
                "movl (%eax), %edx;movl (%ebp), %ecx;cmpl (%ecx), %edx;jne  <RtlEqualLuid+>;movl (%eax), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);jne  <RtlCreateSecurityDescriptor+>;movl (%ebp), %ecx": 1,
                "cmpl $, (%ebp);jne  <RtlCreateSecurityDescriptor+>;movl (%ebp), %ecx;pushl %edi;xorl %eax, %eax": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movb $, (%ecx)": 1,
                "je  <RtlValidSecurityDescriptor+>;testl %eax, %eax;je  <RtlValidSecurityDescriptor+>;addl %esi, %eax;movl %eax, -(%ebp)": 2,
                "movl (%esi), %eax;je  <RtlValidSecurityDescriptor+>;testl %eax, %eax;je - <RtlValidSecurityDescriptor+>;addl %esi, %eax": 1,
                "je - <RtlValidSecurityDescriptor+>;addl %esi, %eax;movl %eax, -(%ebp);testl %eax, %eax;je  <RtlValidSecurityDescriptor+>": 1,
                "jne  <RtlValidSecurityDescriptor+>;xorl %esi, %esi;jmp  <RtlValidSecurityDescriptor+>;testw %ax, %di;je  <RtlValidSecurityDescriptor+>": 1,
                "jmp  <RtlValidSecurityDescriptor+>;movl (%esi), %esi;movl %esi, -(%ebp);testl %esi, %esi;je  <RtlValidSecurityDescriptor+>": 1,
                "addl %ecx, %edx;testl %edx, %edx;je  <RtlLengthSecurityDescriptor+>;movzbl (%edx), %edx;leal (,%edx,), %edx": 1,
                "je  <RtlLengthSecurityDescriptor+>;testw %si, %si;je  <RtlLengthSecurityDescriptor+>;movl (%ecx), %edx;testl %edx, %edx": 1,
                "jmp  <RtlLengthSecurityDescriptor+>;movl (%ecx), %ecx;testl %ecx, %ecx;je  <RtlLengthSecurityDescriptor+>;movzwl (%ecx), %ecx": 1,
                "testl %ecx, %ecx;je  <RtlLengthSecurityDescriptor+>;movzwl (%ecx), %ecx;addl $, %ecx;andl $-, %ecx": 1,
                "movl (%ebp), %eax;cmpb $, (%eax);je  <RtlSetDaclSecurityDescriptor+>;movl $, %eax;jmp  <RtlSetDaclSecurityDescriptor+>": 1,
                "andw $, %cx;movw %cx, (%eax);xorl %eax, %eax;popl %ebp;retl $": 2,
                "movl (%eax), %ecx;jns  <RtlGetDaclSecurityDescriptor+>;testl %ecx, %ecx;je - <RtlGetDaclSecurityDescriptor+>;addl %eax, %ecx": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);movb (%eax), %al;movl (%ebp), %ecx;andb $, %al": 4,
                "jne  <RtlSetOwnerSecurityDescriptor+>;orl $, %ecx;movw %cx, (%eax);xorl %eax, %eax;popl %ebp": 1,
                "je  <RtlGetOwnerSecurityDescriptor+>;movl $, %eax;jmp  <RtlGetOwnerSecurityDescriptor+>;testb $-, (%eax);movl (%eax), %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpb $, (%eax);je  <RtlSetGroupSecurityDescriptor+>": 1,
                "cmpb $, (%ebp);movw %cx, (%eax);je  <RtlSetGroupSecurityDescriptor+>;orl $, %ecx;movw %cx, (%eax)": 1,
                "movl (%eax), %edx;testl $, %edx;popl %esi;je  <RtlMapGenericMask+>;movl (%ecx), %ecx": 1,
                "testl %esi, %esi;pushl $;popl %ebx;jne  <RtlMapGenericMask+>;movl (%ebp), %eax": 1,
                "leal (,%eax,), %ecx;cmpw %dx, %cx;jbe  <RtlMapGenericMask+>;subl %edx, %ecx;addl %ecx, %ebx": 1,
                "movl $, %ecx;subl %eax, %ecx;leal (%edx,%ecx,), %eax;addl %eax, %ebx;xorl %eax, %eax": 1,
                "pushl $;pushl %ebx;movb $, (%eax);pushl (%edi);calll - <RtlCreateAcl>": 1,
                "shlb $, %al;leal (,%ecx,), %ecx;movzbl %al, %eax;addl %eax, %edx;movl %ecx, %eax": 1,
                "movb (%eax), %al;movzbl %al, %ecx;leal (%edx,%ecx,), %edx;movl (%ebp), %ecx;movzbw (%ecx), %cx": 1,
                "leal (%edx,%ecx,), %edx;movl (%ebp), %ecx;movzbw (%ecx), %cx;movzbw %al, %ax;addl %eax, %ecx": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;movl (%edi), %eax;movw (%esi), %cx;movw %cx, (%eax)": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;andl $, (%edx);cmpl $, %ecx;jb  <RtlMapGenericMask+>": 1,
                "calll - <RtlMapGenericMask+>;testb %al, %al;je - <RtlValidRelativeSecurityDescriptor+>;leal (%edi,%esi), %eax;movzwl (%eax), %ecx": 2,
                "jmp - <RtlValidRelativeSecurityDescriptor+>;int;int;int;int": 1,
                "jne  <RtlEqualSid+>;movb (%esi), %al;cmpb (%edi), %al;jne  <RtlEqualSid+>;movzbl %al, %ecx": 1,
                "jmp  <RtlEqualSid+>;xorb %al, %al;popl %edi;popl %esi;popl %ebp": 1,
                "movl (%ebp), %edi;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);calll - <RtlInitializeSid>": 2,
                "jmp  <RtlEqualSid+>;cmpb $, %al;jne  <RtlEqualSid+>;leal (%edx), %esi;pushl %esi": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movzbl (%eax), %eax;leal -(%ebx,%eax,), %ebx;movb $, (%edi)": 3,
                "cmpb $, (%edi);jne - <RtlEqualSid+>;movl -(%ebp), %eax;movzbl (%eax), %eax;jmp  <RtlEqualSid+>": 1,
                "rep  movsb (%esi), %es:(%edi);andl $-, -(%ebp);movl %eax, -(%ebp);jmp  <RtlEqualSid+>;subl $, -(%ebp)": 2,
                "jmp - <RtlEqualSid+>;movl -(%ebp), %edx;xorl %ebx, %ebx;jmp - <RtlEqualSid+>;movl -(%ebp), %eax": 1,
                "movl (%eax), %eax;andl %eax, -(%ebp);cmpl %esi, -(%ebp);je  <RtlEqualSid+>;movb $, (%edi)": 1,
                "movl -(%ebp), %esi;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <RtlValidSid+>": 1,
                "jne  <RtlEqualSid+>;movl -(%ebp), %eax;jmp  <RtlEqualSid+>;movl -(%ebp), %eax;jmp  <RtlEqualSid+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movb (%eax), %al;subl $, %ebx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movb %al, -(%ebp)": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <RtlEqualSid+>;movl -(%ebp), %ecx;movzwl (%ecx), %edx": 1,
                "movzbl (%esi), %ecx;leal (,%ecx,), %ecx;movl %ecx, %edx;shrl $, %ecx;movl %eax, %edi": 2,
                "jmp  <RtlEqualSid+>;movl -(%ebp), %eax;movl (%eax), %edi;movl -(%ebp), %eax;movzwl (%eax), %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %eax;cmpb $, (%eax);jne  <RtlEqualSid+>": 1,
                "movl (%ecx), %eax;andb $-, (%eax);cmpb $, (%ebp);je  <RtlEqualSid+>;movl (%ecx), %eax": 1,
                "je  <RtlEqualSid+>;movl (%ecx), %eax;orb $, (%eax);movl -(%ebp), %eax;incw (%eax)": 1,
                "cmpl $, %ebx;jbe  <RtlEqualSid+>;xorb %al, %al;jmp  <RtlEqualSid+>;movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);movl %edi, -(%ebp);leal (%ecx), %ebx;ja  <RtlEqualSid+>;movl (%ebp), %eax": 1,
                "notb %al;jmp  <RtlEqualSid+>;movb (%ebx), %al;shrb $, %al;andb $, %al": 1,
                "movb $, -(%ebp);movb (%ebx), %al;testb $, %al;jne  <RtlEqualSid+>;cmpb $, (%ebp)": 1,
                "pushl %edi;pushl %edi;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "xorl %edi, %edi;cmpb $, -(%ebp);je  <RtlEqualSid+>;cmpl %edi, -(%ebp);je  <RtlEqualSid+>": 1,
                "andb %cl, (%eax);jmp  <RtlEqualSid+>;cmpb $, (%ebx);ja  <RtlEqualSid+>;cmpl %edi, (%ebx)": 1,
                "ja  <RtlEqualSid+>;movzwl (%esi), %edx;movl -(%ebp), %eax;subl %eax, %edx;addl %esi, %edx": 1,
                "cmpl %edx, %ecx;jle  <RtlEqualSid+>;movb $, -(%ebp);movzwl (%esi), %eax;addl %esi, %eax": 1,
                "jle  <RtlEqualSid+>;movb $, -(%ebp);movzwl (%esi), %eax;addl %esi, %eax;movl %eax, -(%ebp)": 1,
                "testl %edi, %edi;movl %eax, -(%ebp);je  <RtlEqualSid+>;movzwl (%esi), %ecx;subl %edi, %ecx": 1,
                "ja  <RtlEqualSid+>;testb $, (%eax);jne  <RtlEqualSid+>;movl (%ebp), %esi;pushl %esi": 1,
                "notb %cl;andb %cl, (%eax);movl (%ebp), %eax;incw (%eax);movl %eax, %esi": 1,
                "pushl %edi;pushl $;popl %edi;pushl %edi;pushl (%eax)": 1,
                "movl $, %esi;je  <RtlEqualSid+>;movl (%ebp), %eax;cmpl %ebx, %eax;movl $, (%ecx)": 1,
                "calll - <RtlEqualSid+>;cmpl %esi, %eax;jne  <RtlEqualSid+>;movb $, -(%ebp);xorl %eax, %eax": 3,
                "movb %cl, -(%ebp);je  <RtlEqualSid+>;movzbl (%eax), %ecx;cmpl %edi, %ecx;jb  <RtlEqualSid+>": 1,
                "xorl %eax, %eax;cmpl %ebx, %eax;jl  <RtlEqualSid+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;addl %ecx, %eax;cmpl %ebx, %eax;jne  <RtlEqualSid+>;cmpb %bl, -(%ebp)": 1,
                "cmpb %bl, -(%ebp);movl (%ebp), %ecx;movl %eax, (%ecx);je  <RtlEqualSid+>;movl %esi, %eax": 1,
                "movb -(%ebp), %cl;movb %cl, (%eax);xorl %eax, %eax;popl %edi;popl %esi": 1,
                "jge  <RtlEqualSid+>;pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>;cmpl $, %edi": 1,
                "jne  <RtlEqualSid+>;incl -(%ebp);cmpl $, -(%ebp);jb - <RtlEqualSid+>;jmp  <RtlEqualSid+>": 2,
                "cmpb %bl, (%eax);je  <RtlEqualSid+>;movb (%esi), %al;xorb (%edx), %al;testb $-, %al": 1,
                "je - <RtlEqualSid+>;pushl -(%ebp);jmp  <RtlEqualSid+>;cmpl %ebx, -(%ebp);je - <RtlEqualSid+>": 1,
                "cmpl %ebx, -(%ebp);je - <RtlEqualSid+>;pushl -(%ebp);pushl -(%ebp);calll - <RtlEqualSid>": 1,
                "testb %al, %al;je - <RtlEqualSid+>;movb $, %al;popl %edi;movl -(%ebp), %ecx": 1,
                "pushl %edi;sbbl %ecx, %ecx;leal (%edx), %edi;movl %eax, -(%ebp);andl %edi, %ecx": 1,
                "jmp  <RtlEqualSid+>;cmpl %eax, -(%ebp);je - <RtlEqualSid+>;pushl -(%ebp);pushl %ebx": 1,
                "testb $-, (%esi);je  <RtlEqualSid+>;movl (%esi), %eax;testl %eax, %eax;jne  <RtlEqualSid+>": 1,
                "je  <RtlEqualSid+>;addl %esi, %eax;movb $, -(%ebp);jmp  <RtlEqualSid+>;movl (%ebp), %eax": 1,
                "movb $, -(%ebp);jmp  <RtlEqualSid+>;movl (%ebp), %eax;movl (%eax), %eax;testb $-, (%eax)": 1,
                "jne  <RtlEqualSid+>;movl $, %edi;jmp  <RtlEqualSid+>;testb $, (%ebp);movl $, %edi": 1,
                "testb $, (%ebp);je  <RtlEqualSid+>;movw (%esi), %cx;testb $, %cl;je  <RtlEqualSid+>": 1,
                "andl $, -(%ebp);jmp  <RtlEqualSid+>;addl %esi, %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "jmp  <RtlEqualSid+>;addl %esi, %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %edx": 1,
                "testb $, %al;je  <RtlEqualSid+>;testb %ah, %ah;jns  <RtlEqualSid+>;movl (%edx), %ebx": 1,
                "pushl %edx;calll - <RtlEqualSid+>;movl %eax, %edi;testl %edi, %edi;jl  <RtlEqualSid+>": 1,
                "testl %edi, %edi;jl  <RtlEqualSid+>;movl -(%ebp), %ebx;movl -(%ebp), %eax;andl $, %ebx": 1,
                "orl $, %ebx;jmp  <RtlEqualSid+>;movw (%esi), %ax;testb $, %al;je  <RtlEqualSid+>": 1,
                "jmp  <RtlEqualSid+>;addl %esi, %eax;movl %eax, -(%ebp);xorl %eax, %eax;movw (%esi), %ax": 1,
                "testl %edi, %edi;jl  <RtlEqualSid+>;movl -(%ebp), %eax;jmp  <RtlEqualSid+>;movl (%ebp), %eax": 1,
                "je  <RtlEqualSid+>;movw (%esi), %dx;testb $, %dl;je  <RtlEqualSid+>;testb %dh, %dh": 1,
                "jns  <RtlEqualSid+>;movl (%esi), %eax;testl %eax, %eax;jne  <RtlEqualSid+>;xorl %esi, %esi": 1,
                "jmp  <RtlEqualSid+>;addl %eax, %esi;jmp  <RtlEqualSid+>;movl (%esi), %esi;movl (%ebp), %eax": 1,
                "xorl %edi, %edi;jmp  <RtlEqualSid+>;addl %eax, %edi;movzwl %dx, %eax;movl %eax, %ebx": 1,
                "pushl -(%ebp);andl %edx, %eax;movzwl %cx, %ecx;andl $, %ebx;orl %eax, %ebx": 1,
                "testl %edi, %edi;jl  <RtlEqualSid+>;movl -(%ebp), %eax;movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, %ecx;andl $, %ecx;orl $, %ecx;shll %ecx;andl $, %eax": 2,
                "orl %ecx, -(%ebp);movb $, -(%ebp);jmp  <RtlEqualSid+>;movw (%esi), %ax;testb $, %al": 1,
                "addl $, %ecx;andl %edx, %ecx;jmp  <RtlEqualSid+>;xorl %ecx, %ecx;movl -(%ebp), %edi": 1,
                "jmp  <RtlEqualSid+>;pushl $;pushl %ebx;calll - <RtlCreateSecurityDescriptor>;cmpl $, (%ebp)": 1,
                "calll - <ExFreePoolWithTag>;jmp  <RtlEqualSid+>;movl (%ebp), %edi;leal (%ebx), %eax;movl %eax, (%ebp)": 1,
                "andl $, (%ebx);jmp  <RtlEqualSid+>;movl (%ebp), %esi;movzwl (%esi), %ecx;movl (%ebp), %edi": 1,
                "movl %ecx, %eax;pushl (%ebp);shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 2,
                "cmpl %eax, -(%ebp);jbe  <RtlEqualSid+>;movl -(%ebp), %eax;movzwl (%eax), %edx;movl -(%ebp), %ecx": 1,
                "andl $, %ecx;rep  stosb %al, %es:(%edi);subl %ebx, %edx;cmpb $, -(%ebp);movl %edx, (%ebx)": 1,
                "movl %edx, (%ebx);jne  <RtlEqualSid+>;movl (%ebp), %eax;movl (%eax), %eax;movzbl (%eax), %eax": 1,
                "movb $, -(%ebp);movb $, %al;jb  <RtlEqualSid+>;cmpb %al, %cl;ja  <RtlEqualSid+>": 1,
                "cmpb $, %cl;jb  <RtlEqualSid+>;cmpb %al, %cl;jbe  <RtlEqualSid+>;pushl (%ebp)": 1,
                "movb (%esi), %al;cmpb $, %al;ja  <RtlEqualSid+>;cmpb $, %al;je  <RtlEqualSid+>": 1,
                "andl %ecx, -(%ebp);testb $, (%esi);je  <RtlEqualSid+>;movl %eax, %ecx;notl %ecx": 1,
                "movb $, -(%ebp);jne  <RtlEqualSid+>;movb $, -(%ebp);movl (%ebp), %ebx;leal (%ebp), %eax": 1,
                "je  <RtlEqualSid+>;cmpb $, -(%ebp);jne  <RtlEqualSid+>;cmpl $, -(%ebp);jbe  <RtlEqualSid+>": 1,
                "jbe  <RtlEqualSid+>;testl %edi, %edi;je  <RtlEqualSid+>;pushl %edi;pushl %ebx": 1,
                "decw (%ebx);andl $, -(%ebp);movl %edi, (%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp - <RtlEqualSid+>;cmpb $, (%esi);ja  <RtlEqualSid+>;cmpl $, (%esi);je  <RtlEqualSid+>": 1,
                "je  <RtlEqualSid+>;movzwl (%esi), %ecx;addl %ecx, -(%ebp);cmpl $, -(%ebp);jbe  <RtlEqualSid+>": 1,
                "movb $, -(%ebp);jmp  <RtlEqualSid+>;cmpb $, -(%ebp);jne  <RtlEqualSid+>;movl %ecx, %eax": 1,
                "jne  <RtlEqualSid+>;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movl (%ebp), %eax;orb $, (%eax);incw (%ebx);cmpb $, (%ebp);je  <RtlEqualSid+>": 1,
                "movl (%ebp), %eax;orb $, (%eax);pushl (%ebp);pushl %ebx;calll - <RtlEqualSid+>": 1,
                "subl %eax, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "movb $, -(%ebp);xorl %eax, %eax;testl %eax, %eax;jl  <RtlEqualSid+>;cmpb $, (%ebp)": 1,
                "movl -(%ebp), %ecx;addl %ecx, -(%ebp);cmpl -(%ebp), %ecx;movl -(%ebp), %eax;ja  <RtlEqualSid+>": 1,
                "andl $, %edx;movl %eax, (%ecx);movl %edx, (%ebp);jne  <RtlEqualSid+>;movl (%ebp), %edx": 1,
                "pushl $;popl %eax;movb $, (%ebp);jmp  <RtlEqualSid+>;xorl %eax, %eax": 1,
                "jmp  <RtlEqualSid+>;xorl %eax, %eax;incl %eax;movb %bl, (%ebp);pushl %esi": 1,
                "testb $, (%ebp);je  <RtlEqualSid+>;cmpl %ebx, (%ebp);jne  <RtlEqualSid+>;cmpb %bl, (%ebp)": 1,
                "cmpl %ebx, (%ebp);jne  <RtlEqualSid+>;cmpb %bl, (%ebp);je  <RtlEqualSid+>;cmpb %bl, -(%ebp)": 1,
                "cmpl %ebx, %ecx;je  <RtlEqualSid+>;movb (%ecx), %al;cmpb $, %al;jb  <RtlEqualSid+>": 1,
                "movl $, %eax;jmp  <RtlEqualSid+>;cmpb %bl, (%ebp);je - <RtlEqualSid+>;cmpb %bl, (%ebp)": 1,
                "je  <RtlEqualSid+>;xorl %eax, %eax;movl (%ebp), %ecx;movl %ebx, (%ecx);jmp  <RtlEqualSid+>": 1,
                "cmpl $, %esi;movl %ebx, (%edi);jne  <RtlEqualSid+>;incl -(%ebp);cmpl $, -(%ebp)": 1,
                "pushl %ebx;pushl (%edi);calll - <ExFreePoolWithTag>;movl %ebx, (%edi);movl %esi, %eax": 1,
                "pushl (%edi);calll - <ExFreePoolWithTag>;movl %ebx, (%edi);movl %esi, %eax;popl %edi": 1,
                "movl %edi, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movb $, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "movb %al, -(%ebp);jne  <RtlEqualSid+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlCreateSecurityDescriptor>;leal -(%ebp), %ebx;movw (%ebx), %ax;movb %al, %cl;shrb $, %al": 1,
                "leal (,%ecx,), %ecx;jmp  <RtlEqualSid+>;xorl %ecx, %ecx;movl -(%ebp), %eax;cmpl %edi, %eax": 1,
                "movl %esi, -(%ebp);je  <RtlEqualSid+>;movl -(%ebp), %eax;pushl %eax;movzbl (%eax), %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <RtlEqualSid+>": 1,
                "testl %eax, %eax;movl %eax, (%ebp);je  <RtlEqualSid+>;movb $, -(%ebp);testw %si, %si": 1,
                "testl %edi, %edi;jne  <RtlEqualSid+>;movl $, %esi;jmp  <RtlEqualSid+>;testb $, (%ebp)": 1,
                "jne - <RtlEqualSid+>;movl $, %esi;jmp  <RtlEqualSid+>;testw %dx, (%edi);movl (%edi), %eax": 1,
                "pushl %edx;pushl %ecx;pushl %esi;calll - <RtlEqualSid+>;movl %eax, %esi": 1,
                "je  <RtlEqualSid+>;addl %esi, %ecx;jmp  <RtlEqualSid+>;xorl %ecx, %ecx;leal -(%ebp), %esi": 1,
                "pushl (%ebp);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl (%ebp)": 2,
                "andl $, %ebx;pushl %ebx;pushl (%ebp);pushl %eax;pushl %edx": 1,
                "movl $, %edx;jl  <RtlEqualSid+>;movl -(%ebp), %eax;andl $, %eax;orl $, %eax": 1,
                "movl , %ecx;leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);movl %edi, -(%ebp)": 1,
                "pushl %eax;pushl (%ebp);pushl %edi;calll  <SePrivilegeObjectAuditAlarm+>;cmpb $, (%ebp)": 1,
                "jmp  <RtlEqualSid+>;cmpb $, -(%ebp);je  <RtlEqualSid+>;testb $, (%ebp);jne  <RtlEqualSid+>": 1,
                "calll  <SeUnlockSubjectContext+>;testb %al, %al;je - <RtlEqualSid+>;cmpb $, -(%ebp);je  <RtlEqualSid+>": 1,
                "popl %ebx;andl %ebx, %edx;cmpl %edi, %eax;movl %edx, (%ebp);je  <RtlEqualSid+>": 1,
                "leal (,%eax,), %eax;leal (%eax), %esi;andl %ebx, %esi;movl %eax, (%ebp);movl %esi, (%ebp)": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <RtlEqualSid+>;movzwl (%eax), %ecx;addl $, %ecx": 1,
                "xorl %ecx, %ecx;movl -(%ebp), %eax;andl $, %eax;movl %ecx, (%ebp);movl %eax, -(%ebp)": 1,
                "jmp  <RtlEqualSid+>;xorl %eax, %eax;movl %eax, (%ebp);addl %ecx, %eax;addl %esi, %eax": 1,
                "leal (%eax,%edx), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax": 1,
                "movl $, %esi;jmp  <RtlEqualSid+>;movl -(%ebp), %edx;pushl $;pushl %edx": 1,
                "pushl %edx;calll - <RtlCreateSecurityDescriptor>;movw -(%ebp), %ax;orw %ax, (%edx);testl %edi, %edi": 1,
                "pushl (%ebp);pushl %ebx;calll - <RtlMapGenericMask+>;movl -(%ebp), %edx;movl (%ebp), %ecx": 2,
                "movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%ebp), %ecx;movl -(%ebp), %esi": 1,
                "movl (%ebp), %ecx;movl -(%ebp), %esi;movl %ebx, %eax;subl %edx, %eax;addl %ecx, %ebx": 1,
                "subl %edx, %eax;addl %ecx, %ebx;testl %esi, %esi;movl %eax, (%edx);je  <RtlEqualSid+>": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;xorl %edi, %edi;cmpl %edi, -(%ebp)": 1,
                "calll  <SeUnlockSubjectContext>;movl $, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "je  <RtlIntegerToChar+>;decl %eax;decl %eax;je  <RtlIntegerToChar+>;subl $, %eax": 2,
                "cmpb $, %al;jne  <RtlCharToInteger+>;pushl $;popl %edi;pushl $": 2,
                "testl %ecx, %ecx;jne  <RtlCharToInteger+>;imull %edi, %edx;addl %eax, %edx;jmp  <RtlCharToInteger+>": 1,
                "imull %edi, %edx;addl %eax, %edx;jmp  <RtlCharToInteger+>;shll %cl, %edx;orl %eax, %edx": 1,
                "addl %esi, %edx;cmpw $, %ax;ja  <RtlUnicodeStringToInteger+>;testl %edi, %edi;jne - <RtlUnicodeStringToInteger+>": 1,
                "cmpw $, %ax;jne  <RtlUnicodeStringToInteger+>;movl %esi, (%ebp);xorl %ecx, %ecx;incl %ecx": 1,
                "jmp  <RtlUnicodeStringToInteger+>;incl %edi;subl %esi, %edx;testl %edi, %edi;je  <RtlUnicodeStringToInteger+>": 1,
                "incl %edi;subl %esi, %edx;testl %edi, %edi;je  <RtlUnicodeStringToInteger+>;decl %edi": 1,
                "je  <RtlUnicodeStringToInteger+>;subl %esi, %ecx;je  <RtlUnicodeStringToInteger+>;subl $, %ecx;je  <RtlUnicodeStringToInteger+>": 1,
                "je  <RtlUnicodeStringToInteger+>;movl $, %eax;jmp  <RtlUnicodeStringToInteger+>;pushl $;jmp  <RtlUnicodeStringToInteger+>": 1,
                "jmp  <RtlUnicodeStringToInteger+>;pushl $;jmp  <RtlUnicodeStringToInteger+>;xorl %ecx, %ecx;jmp  <RtlUnicodeStringToInteger+>": 1,
                "orl $-, -(%ebp);xorl %eax, %eax;jmp  <RtlUnicodeStringToInteger+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "jmp  <RtlUnicodeStringToInteger+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "jmp  <RtlIntegerToUnicode+>;pushl $;popl %edi;jmp  <RtlIntegerToUnicode+>;xorl %edi, %edi": 1,
                "popl %edi;jmp  <RtlIntegerToUnicode+>;xorl %edi, %edi;incl %edi;jmp  <RtlIntegerToUnicode+>": 1,
                "jmp  <RtlIntegerToUnicode+>;movl -(%ebp), %ebx;leal -(%ebp), %esi;andw $, -(%ebp);movl (%ebp), %eax": 1,
                "decl %esi;movw $, (%esi);decl %ecx;jne - <RtlIntegerToUnicode+>;cmpl (%ebp), %eax": 1,
                "movl -(%ebp), %eax;andw $, (%edx,%eax);orl $-, -(%ebp);xorl %eax, %eax;jmp  <RtlIntegerToUnicode+>": 1,
                "pushl %eax;pushl $;pushl (%ebp);pushl (%ebp);calll - <RtlIntegerToChar>": 1,
                "calll - <RtlIntegerToChar>;testl %eax, %eax;jl  <RtlIntegerToUnicodeString+>;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "subl %edx, %eax;movw %ax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "calll - <wctomb+>;movl , %eax;movl %eax, -(%ebp);movl (%ebp), %edx;movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;xorl %ebx, %ebx;subl %ebx, %eax;je  <RtlIntegerToUnicodeString+>;decl %eax": 2,
                "je  <RtlIntegerToUnicodeString+>;pushl $;popl %ecx;subl %edi, %ecx;pushl $": 2,
                "movl %eax, -(%ebp);pushl $;popl %eax;xorl %edx, %edx;divl %edi": 2,
                "sarl %cl, %edx;movl %ebx, %eax;andl -(%ebp), %eax;movl %edx, %esi;andl -(%ebp), %esi": 1,
                "cmpl %edx, %eax;jge  <RtlIntegerToUnicodeString+>;movl -(%ebp), %ecx;movb $, (%ecx,%eax);orl $-, -(%ebp)": 1,
                "leal -(%ebp), %esi;movw %bx, -(%ebp);cmpl %ebx, %edi;je  <RtlIntegerToUnicodeString+>;movl (%edx), %ebx": 1,
                "andl -(%ebp), %eax;andl -(%ebp), %edx;movl -(%ebp), %ecx;shll %cl, %edx;movl -(%ebp), %ecx": 1,
                "decl %esi;movw (,%eax,), %ax;movw %ax, (%esi);movl -(%ebp), %eax;orl %ebx, %eax": 1,
                "movl -(%ebp), %ecx;movw (,%ecx,), %cx;movw %cx, (%esi);cmpl %ebx, %edx;jne - <RtlIntegerToUnicodeString+>": 1,
                "cmpl $, %ecx;movl (%ebp), %edi;jbe  <RtlIntToUnicodeString+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax;andl $, %ecx;addl $-, %eax": 2,
                "je  <RtlIntToUnicodeString+>;pushl %esi;pushl (%ebp);calll - <ExFreePoolWithTag>;movl (%ebp), %eax": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi;jne  <RtlIntToUnicodeString+>;movl $, %esi": 1,
                "cmpw $, (%esi);jne  <RtlIntToUnicodeString+>;xorl %eax, %eax;leal -(%ebx), %ecx;cmpl %edx, %ecx": 1,
                "movw %ax, -(%ebp);je - <RtlIntToUnicodeString+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movw (%ebp), %ax": 1,
                "je - <RtlIntToUnicodeString+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movw (%ebp), %ax;movw %ax, -(%ebp)": 1,
                "calll - <ZwOpenProcessTokenEx>;testl %eax, %eax;jl  <RtlFormatCurrentUserKeyPath+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <RtlCopySid+>;cmpl %edi, %eax;jl  <RtlFormatCurrentUserKeyPath+>": 1,
                "pushl $;pushl %esi;calll - <RtlAppendUnicodeToString>;movw -(%ebp), %ax;movl (%esi), %ecx": 1,
                "movl %eax, %ebx;cmpl %edi, %ebx;jge  <RtlFormatCurrentUserKeyPath+>;pushl %esi;calll - <RtlFreeUnicodeString>": 1,
                "popl %edi;jl  <RtlFormatCurrentUserKeyPath+>;leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <RtlFreeUnicodeString>;cmpl %ebx, -(%ebp);jge  <RtlFormatCurrentUserKeyPath+>;pushl ": 1,
                "calll - <RtlFreeUnicodeString>;cmpl %ebx, -(%ebp);jge  <RtlFormatCurrentUserKeyPath+>;pushl ;leal -(%ebp), %eax": 1,
                "movl $, %edi;testl %esi, %edi;movl %ecx, -(%ebp);movl %eax, -(%ebp);je  <RtlFormatCurrentUserKeyPath+>": 1,
                "movw $, -(%ebp);je  <RtlFormatCurrentUserKeyPath+>;cmpl $, %esi;jne  <RtlFormatCurrentUserKeyPath+>;leal -(%ebp), %eax": 1,
                "je  <RtlFormatCurrentUserKeyPath+>;cmpl $, %esi;jne  <RtlFormatCurrentUserKeyPath+>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "calll - <ZwOpenKey>;popl %ebx;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "andl $, %eax;jno  <RtlFormatCurrentUserKeyPath+>;imull $, (%edx), %esi;je  <RtlFormatCurrentUserKeyPath+>;cmpl $, %eax": 1,
                "jne  <RtlFormatCurrentUserKeyPath+>;imull $, (%esi), %ebp;imull $, (%eax), %esi;outsb %gs:(%esi), %dx;jbe  <RtlFormatCurrentUserKeyPath+>": 1,
                "jne  <RtlFormatCurrentUserKeyPath+>;decl %esp;outsb %gs:(%esi), %dx;je  <RtlFormatCurrentUserKeyPath+>;cmpl $, %eax": 1,
                "andl $, (%ecx);pushl %ebx;movl (%ebp), %ebx;cmpl $-, (%ebx);movl %eax, -(%ebp)": 1,
                "leal (%eax,%ebx), %eax;movl (%ebx), %ecx;addl $, %eax;andl $-, %eax;leal (%ecx), %edx": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebx), %ecx;andw $, (%eax,%ecx);movl (%ebp), %ecx;leal (%ecx,%eax), %edi": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movl (%ebx), %esi;movl %eax, -(%ebp)": 1,
                "addl %ebx, %eax;movl %eax, (%ebp);jmp  <RtlFormatCurrentUserKeyPath+>;movl (%edx), %eax;testl %eax, %eax": 1,
                "jae  <RtlFormatCurrentUserKeyPath+>;movw (%edi), %ax;incl %edi;incl %edi;testw %ax, %ax": 1,
                "movw (%edi), %ax;incl %edi;incl %edi;testw %ax, %ax;jne - <RtlFormatCurrentUserKeyPath+>": 1,
                "pushl (%ebp);pushl $;pushl -(%ebp);calll *(%edx);movl (%ebp), %edx": 1,
                "cmpl -(%ebp), %edi;movl %edi, (%ebp);jb - <RtlFormatCurrentUserKeyPath+>;jmp  <RtlFormatCurrentUserKeyPath+>;cmpl $, -(%ebp)": 1,
                "incl %eax;decl %ecx;decl %ecx;jne - <RtlFormatCurrentUserKeyPath+>;jmp  <RtlFormatCurrentUserKeyPath+>": 1,
                "movw %cx, -(%ebp);jg  <RtlFormatCurrentUserKeyPath+>;movw %cx, -(%ebp);jmp  <RtlFormatCurrentUserKeyPath+>;cmpl $, %eax": 1,
                "jg  <RtlFormatCurrentUserKeyPath+>;movw %cx, -(%ebp);jmp  <RtlFormatCurrentUserKeyPath+>;cmpl $, %eax;ja  <RtlFormatCurrentUserKeyPath+>": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);movl $, -(%ebp);jl  <RtlFormatCurrentUserKeyPath+>;movzwl -(%ebp), %esi": 1,
                "jl  <RtlFormatCurrentUserKeyPath+>;movzwl -(%ebp), %esi;movl -(%ebp), %eax;incl %esi;movl %eax, (%ebp)": 1,
                "pushl %edi;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $": 2,
                "cmpl $, %eax;je  <RtlFormatCurrentUserKeyPath+>;cmpl $, %eax;jne  <RtlFormatCurrentUserKeyPath+>;cmpw $, -(%ebp)": 1,
                "calll - <DbgPrint>;popl %ecx;popl %ecx;movl (%ebp), %edx;testb $, (%edx)": 1,
                "popl %ecx;popl %ecx;movl (%ebp), %edx;testb $, (%edx);pushl (%edx)": 1,
                "pushl %ecx;jne  <RtlQueryRegistryValues+>;jb  <RtlQueryRegistryValues+>;pushl %edx;imull $, %gs:(%bp,%di), %esi": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;pushl %edi;leal -(%ebp), %eax": 1,
                "cmpl %edi, %eax;movl %eax, (%ebp);jl  <RtlQueryRegistryValues+>;movl %esi, -(%ebp);andl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %esi;pushl $": 3,
                "movl %eax, (%ebp);cmpl $, (%ebp);jne  <RtlQueryRegistryValues+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "decl -(%ebp);incl (%ebp);cmpl $, %eax;jle  <RtlQueryRegistryValues+>;pushl $": 1,
                "calll - <DbgPrint>;popl %ecx;popl %ecx;cmpl $, (%ebp);jl  <RtlQueryRegistryValues+>": 1,
                "pushl %eax;calll - <RtlInitUnicodeString>;andl $, (%ebp);movl (%ebp), %eax;incl (%ebp)": 1,
                "movl %eax, (%ebp);jne  <RtlQueryRegistryValues+>;movl $, (%ebp);xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "movl $, (%ebp);xorl %eax, %eax;cmpl %eax, (%ebp);jge  <RtlQueryRegistryValues+>;cmpl $, (%ebp)": 1,
                "pushl %esi;leal (%ebp), %eax;pushl %eax;movl %ebx, (%ebp);calll - <RtlIntToUnicodeString+>": 1,
                "pushl $;pushl (%ebp);pushl %esi;pushl $;calll - <RtlIntToUnicodeString+>": 1,
                "pushl %ebp;movl %esp, %ebp;leal (%ebp), %eax;pushl %eax;pushl $": 3,
                "jl  <RtlCheckRegistryKey+>;pushl (%ebp);calll - <ZwClose>;xorl %eax, %eax;popl %ebp": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <ZwDeleteValueKey>;testb $, (%ebp)": 1,
                "addb %ch, (%esi);addb %ch, (%edi);jb  <RtlDeleteRegistryValue+>;insl %dx, %es:(%edi);addb %ah, (%ecx)": 1,
                "je  <RtlDeleteRegistryValue+>;imull $, (%eax), %eax;addb %al, (%eax);int;int": 1,
                "pushl %edi;movl (%ebp), %edi;pushl $;pushl %edi;pushl $": 1,
                "pushl $;pushl %edi;pushl $;pushl $;pushl -(%ebp)": 1,
                "testl %ebx, %ebx;jl  <RtlSetTimeZoneInformation+>;pushl $;leal (%edi), %eax;pushl %eax": 3,
                "pushl $;leal -(%ebp), %eax;pushl $;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl $, %esi;pushl %esi;movl $, -(%ebp);movl $, -(%ebp);calll - <RtlQueryRegistryValues>": 1,
                "movl %esp, %ebp;xorl %eax, %eax;movb (%ebp), %al;andl $, %eax;je  <RtlDecompressBuffer+>": 1,
                "xorl %eax, %eax;movb (%ebp), %al;andl $, %eax;je  <RtlDecompressFragment+>;cmpw $, %ax": 1,
                "movl $, %eax;jmp  <RtlDecompressFragment+>;pushl (%ebp);movzwl %ax, %eax;pushl (%ebp)": 1,
                "jmp  <RtlDecompressFragment+>;pushl (%ebp);movzwl %ax, %eax;pushl (%ebp);pushl (%ebp)": 1,
                "je  <RtlDescribeChunk+>;testb $-, %al;je  <RtlDescribeChunk+>;movl $, %eax;jmp  <RtlDescribeChunk+>": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;incl %edi;shll %cl, %edi": 1,
                "movl %eax, %ecx;movl (%ebp), %eax;subl %ebx, %eax;addl (%ebp), %ebx;andl $, %ecx": 1,
                "jmp  <RtlDecompressChunks+>;movl (%ebp), %esi;movl (%ebp), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "cmpl $, (%ebp);je  <RtlDecompressChunks+>;movl (%ebp), %eax;pushl %ebx;pushl (%ebp)": 1,
                "movl -(%ebp), %edi;jmp - <RtlDecompressChunks+>;movl $, %eax;jmp  <RtlDecompressChunks+>;xorl %eax, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;movl (%ebp), %ebx;movb (%ebx), %cl": 1,
                "subl %eax, %esi;andw $, (%ebx);leal (%ebx), %eax;movl %edi, -(%ebp);movl %esi, (%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi;pushl (%ebp)": 2,
                "cmpl $, %eax;jne  <RtlCompressChunks+>;andl $, -(%ebp);jmp  <RtlCompressChunks+>;testl %eax, %eax": 1,
                "jb  <RtlCompressChunks+>;movl (%ebp), %ecx;movl (%ebp), %esi;movl (%ebp), %edi;movl %ecx, %eax": 1,
                "addl %ecx, (%ebp);xorl %eax, %eax;incw (%ebx);subl %ecx, %esi;cmpl %eax, (%ebp)": 1,
                "calll - <RtlCompressChunks+>;movl %eax, %esi;testl %esi, %esi;jne  <RtlCompressChunks+>;movl $, %edi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);calll - <ZwQuerySecurityObject>;movl $, %esi;cmpl %esi, %eax;je  <RtlCompressChunks+>": 1,
                "leal -(%ebp), %ecx;addl $, %eax;pushl %ecx;pushl %eax;movl %eax, -(%ebp)": 1,
                "je  <RtlCompressChunks+>;movb (%eax), %cl;testb $, %cl;je  <RtlCompressChunks+>;testb $, %cl": 1,
                "movb (%eax), %cl;testb $, %cl;je  <RtlCompressChunks+>;testb $, %cl;je  <RtlCompressChunks+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <RtlSelfRelativeToAbsoluteSD>;cmpl %esi, %eax": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);calll  <SeFreePrivileges>;movl -(%ebp), %eax": 1,
                "testl %esi, %esi;jge  <RtlCompressChunks+>;pushl %ebx;jmp  <RtlCompressChunks+>;xorl %edi, %edi": 1,
                "pushl %eax;pushl %edi;pushl %ebx;movl %edi, -(%ebp);calll - <RtlSelfRelativeToAbsoluteSD+>": 1,
                "jmp  <RtlCompressChunks+>;movl -(%ebp), %eax;pushl $;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "jae  <RtlCompressChunks+>;je  <RtlCompressChunks+>;addb %ch, %gs:(%ebp);andb %al, (%eax);pushl %esi": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;movl (%ebp), %ebx": 3,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;pushl $;movl %eax, -(%ebp)": 1,
                "cmpl %esi, %ebx;jge  <RtlCreateSystemVolumeInformationFolder+>;leal -(%ebp), %eax;pushl %eax;calll - <RtlCaptureStackBackTrace+>": 1,
                "pushl %edx;movzbl (%ecx), %edx;pushl %edx;movzbl (%ecx), %edx;pushl %edx": 12,
                "subl $, %esp;movl (%ebp), %edx;pushl %ebx;movl %eax, %ebx;movw (%edx), %ax": 1,
                "movl %esi, -(%ebp);movw (%edx), %ax;cmpw $, %ax;jb  <RtlStringFromGUID+>;cmpw $, %ax": 1,
                "cmpl $, (%ebp);je  <RtlStringFromGUID+>;movw (%ebx), %cx;shll $, %eax;cmpw $, %cx": 1,
                "incl -(%ebp);xorl %esi, %esi;jmp  <RtlStringFromGUID+>;cmpl %esi, (%ebp);je  <RtlStringFromGUID+>": 1,
                "movw (%edx), %ax;movzwl %ax, %ecx;cmpl %esi, %ecx;jne - <RtlStringFromGUID+>;cmpl %esi, (%ebp)": 1,
                "cmpw %si, (%ebx);je  <RtlStringFromGUID+>;orl $-, %eax;jmp  <RtlStringFromGUID+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %esi;movl , %eax;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "leal (%esi), %ecx;pushl %ecx;movzwl (%eax), %ecx;movl (%eax), %eax;pushl %esi": 1,
                "movb %cl, (%esi,%eax);incl %eax;cmpl $, %eax;jb - <RtlGUIDFromString+>;xorl %eax, %eax": 1,
                "movl %edx, -(%ebp);jmp  <RtlIsValidOemCharacter+>;cmpw $, %dx;ja  <RtlIsValidOemCharacter+>;addl $-, %edx": 1,
                "movzbl %al, %eax;je  <RtlIsValidOemCharacter+>;movzwl %cx, %ecx;addl %eax, %ecx;movl , %eax": 1,
                "addl $, %eax;jmp - <RtlIsValidOemCharacter+>;movl , %eax;movzwl %dx, %ecx;movl %ecx, %edi": 1,
                "movzwl (%eax,%edi,), %edi;andl $, %ecx;addl %ecx, %edi;addw (%eax,%edi,), %dx;movzwl %dx, %eax": 1,
                "cmpw , %si;popl %edi;popl %esi;popl %ebx;jne  <RtlIsValidOemCharacter+>": 1,
                "jne  <RtlIsValidOemCharacter+>;xorb %al, %al;jmp  <RtlIsValidOemCharacter+>;movl (%ebp), %eax;movw %dx, (%eax)": 1,
                "cmpw $, %di;ja  <RtlIsValidOemCharacter+>;addl $, %edi;movw %di, %ax;popl %edi": 1,
                "movw (%edx), %si;cmpw $, %si;jne  <RtlIsValidOemCharacter+>;movl (%edx), %eax;movw (%eax), %ax": 1,
                "pushl %esi;movl (%ebp), %esi;movl %eax, -(%ebp);movl (%ebp), %eax;cmpw $, (%eax)": 1,
                "cmpw $, (%eax);pushl %edi;movl (%ebp), %edi;movl %edi, -(%ebp);movb $, -(%ebp)": 1,
                "movl (%ebp), %edi;movl %edi, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);jbe  <RtlIsNameLegalDOSDot+>": 1,
                "movl -(%ebp), %ecx;cmpl -(%ebp), %ecx;jae  <RtlGeneratedotName+>;movb (%ebx), %dl;cmpb $, %dl": 1,
                "pushl $;popl %ecx;jmp  <RtlGeneratedotName+>;xorl %ecx, %ecx;incl %ecx": 2,
                "movw %ax, (%ebx);movl %eax, -(%ebp);xorl %eax, %eax;xorl %ecx, %ecx;movb -(%ebp), %cl": 1,
                "movzbl (%ebx), %ecx;addl %eax, %ecx;incl %eax;cmpl $, %eax;movw %dx, (%ebx,%ecx,)": 1,
                "pushl %edi;movw $, (%ebx);movl %esi, (%ebx);calll - <RtlIsValidOemCharacter+>;testw %ax, %ax": 1,
                "cmpl $, %ecx;jae  <RtlGeneratedotName+>;cmpb $, -(%ebp);je  <RtlGeneratedotName+>;cmpw $, %ax": 1,
                "addl %edx, %esi;cmpl $, %esi;ja  <RtlGeneratedotName+>;pushl (%ebp);movw %ax, (%ebx,%ecx,)": 1,
                "ja  <RtlGeneratedotName+>;pushl (%ebp);movw %ax, (%ebx,%ecx,);incl (%ebx);pushl $": 1,
                "pushl %edi;calll - <RtlIsValidOemCharacter+>;testw %ax, %ax;jne - <RtlGeneratedotName+>;testw %ax, %ax": 1,
                "movw $, (%ebx,%eax,);jmp  <RtlGeneratedotName+>;andl $, (%ebx);incl (%ebx);cmpl $, (%ebx)": 1,
                "jmp  <RtlGeneratedotName+>;andl $, -(%ebp);pushl %edi;calll - <RtlIsValidOemCharacter+>;pushl $": 1,
                "pushl $;xorl %edx, %edx;popl %ecx;divl %ecx;leal (%edx), %ecx": 1,
                "leal -(%ebp), %eax;subl %ecx, %eax;movl %ecx, -(%ebp);movb (%ebx), %cl;testb %cl, %cl": 1,
                "movzwl %dx, %edx;shrl %edx;leal (%ebx), %esi;leal (%edi,%edx,), %edi;rep  movsw (%esi), %es:(%edi)": 1,
                "leal (%ebx), %esi;leal (%edi,%edx,), %edi;rep  movsw (%esi), %es:(%edi);movw (%ebx), %cx;shlw %cx": 1,
                "movzwl %cx, %ecx;cmpb $, (%edi,%ecx,);je  <RtlGeneratedotName+>;pushl $;popl %ecx": 1,
                "addb %dh, (%eax,%eax);addb %dh, (%eax,%eax);addb %ah, (%eax,%eax);addb %dh, (%eax,%eax);addb %cl, %ah": 1,
                "pushl %eax;pushl (%ebp);movl %eax, -(%ebp);calll - <ZwFsControlFile>;leal -(%ebp), %eax": 1,
                "calll - <ZwClose>;leave;retl $;int;int": 3,
                "movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwReadFile>;cmpl %ebx, %eax": 1,
                "jmp  <RtlGetSetBootStatusData+>;cmpl %eax, (%ebp);jae  <RtlGetSetBootStatusData+>;movl $, %eax;jmp  <RtlGetSetBootStatusData+>": 1,
                "movl $, %eax;jmp  <RtlGetSetBootStatusData+>;cmpb %bl, (%ebp);pushl %ebx;leal -(%ebp), %ecx": 1,
                "movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <RtlGetSetBootStatusData+>;movl -(%ebp), %edx;movl %edx, (%ecx)": 1,
                "movl $, (%esi);jne  <RtlGetVersion+>;movzbw , %ax;movw %ax, (%esi);movb , %al": 1,
                "movw %ax, (%esi);movw , %ax;movw %ax, (%esi);leal (%ebp), %eax;pushl %eax": 1,
                "movl %ebx, (%ecx);popl %ebx;popl %ebp;retl $;int": 1,
                "movw -(%ebp), %dx;movw %dx, (%ecx);xorl %edx, %edx;divl %ebx;movw %di, (%ecx)": 1,
                "pushl %ebx;calll - <RtlTimeToTimeFields>;movl (%ebp), %esi;cmpw $, (%esi);je  <RtlTimeToElapsedTimeFields+>": 1,
                "movw (%esi), %ax;movb $, (%ebp);movl %eax, -(%ebp);jne  <RtlTimeToElapsedTimeFields+>;cmpw -(%ebp), %ax": 1,
                "subl %eax, %edi;incl %edi;movw %di, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <RtlTimeFieldsToTime>;testb %al, %al;je  <RtlTimeToElapsedTimeFields+>;cmpb $, (%ebp)": 1,
                "jae  <RtlTimeToElapsedTimeFields+>;movw -(%ebp), %ax;movb $, (%ebp);incl %ebx;andw $, -(%ebp)": 1,
                "movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;movw $, %di": 1,
                "pushl %eax;movw %di, -(%ebp);movw %bx, -(%ebp);calll - <RtlTimeFieldsToTime>;testb %al, %al": 1,
                "movl (%ebp), %edx;movl (%ebp), %esi;incl %eax;shrl $, %edx;andl $, %esi": 1,
                "leal (%edi), %eax;shrl %eax;pushl %eax;pushl (%ebp);pushl $": 1,
                "addl %edi, %eax;subl %edx, %eax;negl %eax;sbbl %eax, %eax;popl %edi": 1,
                "movl (%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, (%ebp);notl %eax;jbe  <RtlTimeToElapsedTimeFields+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <ZwQuerySystemInformation>;cmpl %ebx, %eax": 1,
                "calll - <RtlImageNtHeader>;cmpl %ebx, %eax;jne  <RtlTimeToElapsedTimeFields+>;movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>": 1,
                "movl -(%ebp), %ecx;cmpl %ecx, %edx;jb  <RtlTimeToElapsedTimeFields+>;leal (%edx), %ecx;andl $, %ecx": 1,
                "leal -(%eax,%edx), %edx;decl %eax;notl %eax;andl %eax, %edx;movl -(%ebp), %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %edi;movl %edx, (%ebp)": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);xorl %eax, %eax;popl %edi": 1,
                "stosl %eax, %es:(%edi);xorl %eax, %eax;popl %edi;leave;retl $": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;calll  <RtlTimeToElapsedTimeFields+>;orl $-, -(%ebp)": 1,
                "jge  <RtlTimeToElapsedTimeFields+>;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <RtlTimeToElapsedTimeFields+>": 1,
                "pushl %eax;pushl -(%ebp);calll - <RtlTimeToElapsedTimeFields+>;orl $-, -(%ebp);movl -(%ebp), %eax": 1,
                "movl (%ecx), %eax;movl (%ecx), %esi;movl (%ecx), %edx;movl %esi, -(%ebp);movl %eax, %esi": 1,
                "shrl $, %edx;shrl $, %eax;andl $, %edx;shll $, %esi;orl %edx, %esi": 1,
                "shldl $, %esi, %edx;xorl %edi, %edi;orl %edi, %edx;shll $, %esi;orl %eax, %esi": 1,
                "shrdl $, %edi, %eax;andl $, %eax;shrl $, %edi;movl %edx, %edi;shll $, %edi": 1,
                "shrdl $, %ebx, %edi;shll $, %eax;andl $, %edi;orl %edi, %eax;shrl $, %ebx": 1,
                "andl $, %edi;orl %edi, %eax;shll $, %eax;andl $, %esi;shrl $, %edx": 1,
                "movl %eax, %edi;andl %edx, %edi;leal (%esi,%edi,), %edi;sarl $, %edi;xorl %eax, %edi": 1,
                "andl %edx, %edi;xorl %eax, %edi;movl %edi, (%ecx);addl $, (%ebp);cmpl $, (%ebp)": 1,
                "popl %ebx;leave;retl $;xorl %eax, %eax;jmp - <RtlTimeToElapsedTimeFields+>": 1,
                "jmp - <RtlTimeToElapsedTimeFields+>;lodsb (%esi), %al;movw (%eax), %ss;addb $-, %al;pushl %eax": 1,
                "jb  <RtlTimeToElapsedTimeFields+>;insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);decl %ecx": 1,
                "js  <RtlTimeToElapsedTimeFields+>;andl $, %eax;insb %dx, %es:(%edi);incl %edx;popal": 1,
                "incl %edx;popal;jae  <RtlTimeToElapsedTimeFields+>;andb %ah, (%eax);andb %ah, (%eax)": 1,
                "andb %bh, (%edx);andb %ah, ;cmpb (%eax), %ah;subb (%esi), %cl;js  <RtlTimeToElapsedTimeFields+>": 1,
                "movl (%ecx), %eax;subl %eax, -(%ebp);pushl %edi;pushl -(%ebp);leal (%ecx), %ebx": 1,
                "movl (%ecx), %ecx;addl (%ebp), %ecx;leal -(%eax), %esi;pushl %ebx;shrl %esi": 1,
                "movzwl (%ebx), %ecx;jmp  <RtlTimeToElapsedTimeFields+>;xorl %ecx, %ecx;movl (%ebp), %eax;pushl %esi": 1,
                "pushl %eax;pushl %ecx;pushl %eax;pushl %ebx;pushl %eax": 1,
                "cmpb %al, (%ebp);pushl $;pushl (%ebp);sete %al;pushl %eax": 1,
                "xorl %ebx, %ebx;cmpw %bx, (%esi);pushl %edi;leal (%eax,%esi), %edi;jbe  <RtlTimeToElapsedTimeFields+>": 1,
                "pushl %edi;leal (%eax,%esi), %edi;jbe  <RtlTimeToElapsedTimeFields+>;pushl $;pushl (%ebp)": 1,
                "cmpl $, %eax;je  <RtlTimeToElapsedTimeFields+>;movzwl (%esi), %eax;addl $, %edi;incl %ebx": 1,
                "calll - <RtlTimeToElapsedTimeFields+>;movl %eax, %ecx;testl %ecx, %ecx;je  <RtlTimeToElapsedTimeFields+>;movl (%ecx), %eax": 1,
                "testl %ecx, %ecx;je  <RtlTimeToElapsedTimeFields+>;movl (%ecx), %eax;addl (%ebp), %eax;cmpl $, (%ecx)": 1,
                "movl (%ecx), %eax;addl (%ebp), %eax;cmpl $, (%ecx);jb  <RtlTimeToElapsedTimeFields+>;cmpl $, (%eax)": 1,
                "cmpl $, (%eax);je  <RtlTimeToElapsedTimeFields+>;xorl %eax, %eax;popl %ebp;retl $": 1,
                "popl %esi;popl %ebp;retl $;addb %al, (%eax);addb %al, (%eax)": 2,
                "popl %ebp;retl $;addb %al, (%eax);addb %al, (%eax);subb %ch, (%esi)": 1,
                "xorb $, %al;andb %ch, ;xorl %esi, (%esi);decl %ecx;xorb $, %al": 1,
                "orl %esp, ;xorb $, %al;cmpb (%eax), %ah;pushl %eax;incl %ebx": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);decl %esi": 1,
                "je  <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %eax;cmpl (%eax), %edx;jae  <RtlTimeToElapsedTimeFields+>;addl %esi, %edx": 1,
                "movl %eax, %ecx;shrl $, %eax;shll $, %ecx;addl %ecx, %esi;movl %eax, (%ebp)": 1,
                "pushl %edx;movl %eax, %edx;xorl %ebx, %ebx;addl %edi, %edx;adcl %ebx, %ecx": 1,
                "addl %esi, %eax;addl %edi, (%eax);adcl %ebx, (%eax);movl -(%ebp), %ebx;addl $, -(%ebp)": 1,
                "addl $, -(%ebp);cmpl $, (%ebp);jne - <RtlTimeToElapsedTimeFields+>;cmpl $, -(%ebp);je  <RtlTimeToElapsedTimeFields+>": 1,
                "pushl $;calll - <DbgPrintEx>;addl $, %esp;testl %ebx, %ebx;je - <RtlTimeToElapsedTimeFields+>": 1,
                "popal;jb  <RtlTimeToElapsedTimeFields+>;je  <RtlTimeToElapsedTimeFields+>;cmpl $, %eax;subb $, %al": 1,
                "insb %dx, %es:(%edi);imull $, (%ecx), %esp;popaw;imull $, (%ebp), %ebp;andb %ah, (%edi)": 1,
                "imull $, (%ecx), %esp;popal;jb  <RtlTimeToElapsedTimeFields+>;popal;jns  <RtlTimeToElapsedTimeFields+>": 1,
                "jbe  <RtlTimeToElapsedTimeFields+>;movl %eax, (%ebp);cmpb $, (%ebp);je  <RtlTimeToElapsedTimeFields+>;movl (%ebp), %eax": 1,
                "retl $;decl %ecx;outsb (%esi), %dx;jbe  <RtlTimeToElapsedTimeFields+>;insb %dx, %es:(%edi)": 1,
                "je  <RtlTimeToElapsedTimeFields+>;orb %fs:(%eax), %al;int;int;int": 1,
                "pushl %esi;movl (%ebx), %esi;addl %edi, %esi;pushl %esi;pushl %ebx": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %eax, %eax;movl $, %esi": 1,
                "jb  <RtlTimeToElapsedTimeFields+>;cmpb $-, (%esi);jne  <RtlTimeToElapsedTimeFields+>;pushl (%ebp);pushl %esi": 1,
                "testl %esi, %esi;jle  <RtlTimeToElapsedTimeFields+>;cmpl (%eax), %esi;jae  <RtlTimeToElapsedTimeFields+>;andl $, (%ebp)": 1,
                "movl %eax, (%edx);movl %eax, (%ebp);movl (%ebp), %eax;popl %esi;popl %ebx": 1,
                "addb %cl, (%ecx);andl $, %eax;xorb $, %al;cmpb (%eax), %ah;pushl $": 1,
                "pushl (%edi);movl %ebx, -(%ebp);movl %eax, -(%ebp);calll - <RtlImageNtHeader>;pushl (%edi)": 1,
                "jb  <RtlTimeToElapsedTimeFields+>;pushl $;jmp  <RtlTimeToElapsedTimeFields+>;movzwl (%esi), %ecx;movl (%edi), %ebx": 1,
                "jmp  <RtlTimeToElapsedTimeFields+>;movzwl (%esi), %ecx;movl (%edi), %ebx;movl (%edi), %eax;movl -(%ebp), %edx": 1,
                "movzwl (%esi), %ecx;movl (%edi), %ebx;movl (%edi), %eax;movl -(%ebp), %edx;addl -(%ebp), %ebx": 1,
                "movl (%edi), %ebx;movl (%edi), %eax;movl -(%ebp), %edx;addl -(%ebp), %ebx;addl %edx, %eax": 1,
                "popl %edi;subl %edi, %ecx;je  <RtlTimeToElapsedTimeFields+>;subl $, %ecx;je  <RtlTimeToElapsedTimeFields+>": 1,
                "je  <RtlTimeToElapsedTimeFields+>;pushl $;pushl $;pushl $;calll - <DbgPrintEx>": 1,
                "movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>;movl (%ebp), %ecx;pushl $;popl %edx": 1,
                "je  <RtlTimeToElapsedTimeFields+>;cmpl %edx, (%ebp);jb - <RtlTimeToElapsedTimeFields+>;movb $-, (%eax);movb (%esi), %dl": 1,
                "movb $-, (%eax);movb (%esi), %dl;incl %eax;movb %dl, (%eax);movl (%ecx), %ecx": 1,
                "addl $-, %ecx;movb $-, (%eax);incl %eax;decl %ecx;jne - <RtlTimeToElapsedTimeFields+>": 1,
                "pushl $;pushl $;calll - <DbgPrintEx>;xorl %edi, %edi;addl $, %esp": 1,
                "movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>;movl (%ebp), %edx;testl %edx, %edx;je  <RtlTimeToElapsedTimeFields+>": 1,
                "movl (%edi), %eax;pushl (%edi);movl (%eax), %esi;movl (%eax), %ebx;calll - <RtlImageNtHeader>": 1,
                "pushl $;pushl $;addl %esi, %edi;pushl $;movl %edi, -(%ebp)": 1,
                "leal -(%ebx), %esi;imull $, %esi, %esi;addl $, %esi;addl $, %esp;testl %ebx, %ebx": 1,
                "pushl %ecx;leal -(%ebp), %eax;pushl %eax;pushl %ecx;pushl %edi": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);leal (%edi), %ebx;jmp  <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %esi": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;addl %edx, %eax;movl -(%ebp), %edx": 1,
                "je  <RtlTimeToElapsedTimeFields+>;pushl %eax;calll - <RtlTimeToElapsedTimeFields+>;movl %edi, (%esi);xorl %eax, %eax": 1,
                "calll - <RtlTimeToElapsedTimeFields+>;movl %edi, (%esi);xorl %eax, %eax;jmp  <RtlTimeToElapsedTimeFields+>;pushl %edi": 1,
                "pushl %eax;leal (%edi), %eax;pushl %eax;calll - <RtlEqualUnicodeString>;testb %al, %al": 1,
                "movl %esi, (%edi);movl (%esi), %eax;movl %eax, (%edi);movb $, %al;jmp  <RtlTimeToElapsedTimeFields+>": 1,
                "movl %eax, (%edi);movb $, %al;jmp  <RtlTimeToElapsedTimeFields+>;xorb %al, %al;popl %edi": 1,
                "pushl %ecx;pushl %esi;pushl $;pushl $;pushl $": 1,
                "testl %esi, %esi;jne  <RtlTimeToElapsedTimeFields+>;movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>;pushl %edi": 1,
                "movl %edx, (%esi);movl (%ebp), %edx;andl $-, %edx;movl %edx, (%esi);movl %esi, (%esi)": 1,
                "movl (%ecx), %ecx;addl (%eax), %ecx;leal -(%ebp), %eax;pushl %ecx;pushl %eax": 1,
                "pushl $;addb %ah, (%ebp);popl %esp;addb %dl, (%ebx);jns  <RtlTimeToElapsedTimeFields+>": 1,
                "je  <RtlTimeToElapsedTimeFields+>;decl %edi;addb %dh, (%eax);je  <RtlTimeToElapsedTimeFields+>;imull $, (%eax), %eax": 1,
                "addb %ch, (%esi);decl %esi;addb %dh, (%eax,%eax);addb %al, (%eax);addb %dl, (%ebx)": 1,
                "addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <RtlTimeToElapsedTimeFields+>;addb %dh, %gs:(%edx);decl %esi": 1,
                "je  <RtlTimeToElapsedTimeFields+>;movl , %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movb $, %al": 1,
                "movb $, %al;jmp  <RtlTimeToElapsedTimeFields+>;pushl %ebx;pushl %esi;pushl %edi": 1,
                "leal -(%ebp), %eax;incl %ebx;pushl %eax;movl %ebx, (%edi);movb $, (%ebp)": 1,
                "movl (%ebp), %ebx;addl %ebx, %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx;addl %eax, %ecx": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;addl %eax, %ecx;testb $, %al;pushl %esi": 1,
                "testb $-, (%ebp);je  <RtlTimeToElapsedTimeFields+>;leal (%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);addl $, %edx;pushl %edx;pushl -(%ebp)": 1,
                "pushl -(%ebp);addl $, %edx;pushl %edx;pushl -(%ebp);pushl %ebx": 1,
                "cmpl (%ebp), %eax;ja  <RtlTimeToElapsedTimeFields+>;movl %ecx, %eax;shrl $, %ecx;leal (%edx), %esi": 1,
                "cmpl %ecx, (%ebp);jge  <RtlTimeToElapsedTimeFields+>;subl (%ebp), %ecx;leal (%ecx,%ebx), %esi;cmpl -(%ebp), %esi": 1,
                "movl %ecx, %ebx;shrl $, %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl %ebx, %ecx": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;addl %edx, %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "pushl -(%ebp);addl $, %eax;pushl %eax;pushl -(%ebp);pushl (%ebp)": 1,
                "jb  <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %ecx;jmp  <RtlTimeToElapsedTimeFields+>;leal (%ecx,%eax), %edx;leal (%edx,%esi), %edx": 1,
                "movl -(%ebp), %eax;andl $, (%ebp);addl %eax, (%ebp);subl %eax, (%ebp);je  <RtlTimeToElapsedTimeFields+>": 1,
                "movl $, -(%ebp);ja  <RtlTimeToElapsedTimeFields+>;testb $, %dl;je  <RtlTimeToElapsedTimeFields+>;movb (%edx), %al": 1,
                "addl $, %edx;movl %edx, (%esi);addl %edx, (%ecx);movl (%ecx), %edx;cmpl %edi, %edx": 1,
                "incl %ecx;cmpl %eax, %edx;movl $, -(%ebp);ja  <RtlTimeToElapsedTimeFields+>;cmpl $, %edi": 1,
                "jne  <RtlTimeToElapsedTimeFields+>;leal (%edx,%ecx), %eax;cmpl (%ebp), %eax;movl $, (%ebp);ja  <RtlTimeToElapsedTimeFields+>": 1,
                "addl $, (%ebx);andl $, -(%ebp);movl (%ebp), %edi;addl %edi, (%esi);popl %ebx": 1,
                "movw $, (%eax);movl (%esi), %eax;testb $, %al;je  <RtlTimeToElapsedTimeFields+>;movb $-, (%eax)": 1,
                "movb $, (%eax);jmp  <RtlTimeToElapsedTimeFields+>;movw $, (%eax);jmp  <RtlTimeToElapsedTimeFields+>;leal (%edx,%ecx), %eax": 1,
                "pushl %ecx;movl (%ebp), %ecx;movl (%ecx), %edx;andl $, -(%ebp);pushl %ebx": 1,
                "movl (%ebp), %eax;andl $, (%eax);andl $, (%eax);andl $, (%eax);pushl %esi": 1,
                "movl %ecx, -(%ebp);andl $, -(%ebp);pushl (%eax);calll *-(%ebp);orl $-, -(%ebp)": 1,
                "movl -(%ebp), %esp;movl $, -(%ebp);orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ecx;xorl %edx, %edx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ecx;xorl %edx, %edx;movl %edx, (%eax)": 1,
                "andl $, -(%ebp);cmpl $, (%ebp);movb $, (%ebp);jbe  <RtlTimeToElapsedTimeFields+>;movl %edx, %eax": 1,
                "jne  <RtlTimeToElapsedTimeFields+>;movl (%edx), %edx;incl -(%ebp);testb $, %dl;movb $, (%ebp)": 1,
                "cmpl , %esi;jne  <RtlTimeToElapsedTimeFields+>;andl $-, (%ecx);jmp  <RtlTimeToElapsedTimeFields+>;cmpl , %edi": 3,
                "je  <RtlTimeToElapsedTimeFields+>;movl (%ecx), %ebx;leal (%eax,%ebx), %esi;movl %esi, -(%ebp);leal -(%ebp), %edi": 1,
                "movl (%ecx), %ebx;leal (%eax,%ebx), %esi;movl %esi, -(%ebp);leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %edi": 1,
                "leal -(%esi,%edx,), %edi;leal -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl (%ebp), %edx;decl -(%ebp);subl $, %eax;movb $, (%edx);jmp  <RtlTimeToElapsedTimeFields+>": 1,
                "movl -(%ebp), %edx;cmpl , %edx;jne  <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %esi;cmpl , %esi": 1,
                "jne  <RtlTimeToElapsedTimeFields+>;xorl $, (%ecx);jmp  <RtlTimeToElapsedTimeFields+>;cmpl , %edx;jne  <RtlTimeToElapsedTimeFields+>": 1,
                "movl -(%ebp), %edx;incl %edx;cmpl (%ecx), %edx;movl %edx, -(%ebp);jb - <RtlTimeToElapsedTimeFields+>": 1,
                "popl %esi;xorl %edx, %edx;popl %ebx;cmpb $, (%ebp);je  <RtlTimeToElapsedTimeFields+>": 1,
                "je  <RtlTimeToElapsedTimeFields+>;movb $, %al;jmp  <RtlTimeToElapsedTimeFields+>;xorb %al, %al;cmpb $, (%ebp)": 1,
                "movl -(%ebp), %edx;pushl -(%ebp);movl %edx, (%eax,%ecx,);movl (%ebp), %ecx;movl (%ecx), %edx": 2,
                "movl (%esi), %eax;leal (%ebx,%eax), %eax;movl (%eax), %ecx;movl %ecx, %edx;andl $, %edx": 1,
                "movl -(%ebp), %eax;cmpl (%esi), %eax;jb - <RtlTimeToElapsedTimeFields+>;movl (%ebp), %eax;xorl %edx, %edx": 1,
                "je  <RtlTimeToElapsedTimeFields+>;movl (%ebp), %ecx;movb $, (%ecx);jmp  <RtlTimeToElapsedTimeFields+>;movl $, %eax": 1,
                "jmp  <RtlTimeToElapsedTimeFields+>;movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>;movl $, %eax;jmp  <RtlTimeToElapsedTimeFields+>": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;leal (%ecx,%eax,), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <NtAdjustPrivilegesToken+>;movl (%ebp), %edi;cmpb $, (%ebp)": 2,
                "pushl -(%ebp);pushl %ebx;addl $, %esi;pushl %esi;calll  <SeCaptureSecurityDescriptor+>": 1,
                "jl  <NtAdjustPrivilegesToken+>;xorl %eax, %eax;testl %edi, %edi;setne %al;leal (,%eax,), %eax": 1,
                "pushl %esi;calll - <RtlTimeToElapsedTimeFields+>;testl %edi, %edi;je  <NtAdjustPrivilegesToken+>;movl $, -(%ebp)": 1,
                "calll  <SeReleaseSecurityDescriptor>;movl $, %eax;jmp  <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);testl %edi, %edi;je  <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax;movl %eax, (%edi)": 2,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx;cmpb $, (%ebp)": 1,
                "calll  <SeReleaseSecurityDescriptor+>;movl %eax, -(%ebp);cmpl %esi, %eax;jl  <NtAdjustPrivilegesToken+>;orl $-, -(%ebp)": 1,
                "cmpl %esi, %eax;jl  <NtAdjustPrivilegesToken+>;orl $-, -(%ebp);xorl %eax, %eax;cmpl %esi, %edi": 1,
                "orl $-, -(%ebp);xorl %eax, %eax;cmpl %esi, %edi;setne %al;leal (,%eax,), %eax": 1,
                "cmpl %esi, %ebx;jge  <NtAdjustPrivilegesToken+>;cmpl %esi, -(%ebp);jmp  <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl (%ebp);pushl $;pushl %esi": 2,
                "pushl -(%ebp);pushl (%ebp);pushl $;pushl %esi;calll - <RtlTimeToElapsedTimeFields+>": 2,
                "movl %ecx, (%eax);orl $-, -(%ebp);testl %ebx, %ebx;jge  <NtAdjustPrivilegesToken+>;movl (%esi), %ecx": 1,
                "jmp  <NtAdjustPrivilegesToken+>;testl %edi, %edi;je  <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax;cmpl (%ebp), %eax": 1,
                "calll  <SeCaptureSecurityDescriptor+>;movl -(%ebp), %eax;jmp  <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%ebx), %esi;xorl %edi, %edi;incl %edi;cmpl %edi, %esi;movl %eax, (%ebx)": 1,
                "cmpl %edi, %esi;movl %eax, (%ebx);jbe  <NtAdjustPrivilegesToken+>;movl (%ebx), %eax;leal (%eax,%edi,), %eax": 1,
                "leal (%eax,%edi,), %eax;testb $, (%eax);jne  <NtAdjustPrivilegesToken+>;pushl ;pushl (%eax)": 1,
                "cmpl (%ebp), %ecx;jb - <NtAdjustPrivilegesToken+>;xorb %al, %al;popl %ebx;popl %edi": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %ecx": 1,
                "movl (%ebp), %esi;movl (%ebx), %edx;leal (%esi,%edx), %edi;movl (%edi), %esi;cmpl , %esi": 1,
                "cmpl , %esi;jne  <NtAdjustPrivilegesToken+>;movl (%edi), %esi;cmpl , %esi;je  <NtAdjustPrivilegesToken+>": 1,
                "movl (%ebp), %esi;leal (%esi,%edx), %edi;movl (%ebp), %edx;jmp  <NtAdjustPrivilegesToken+>;movl -(%ebp), %edx": 1,
                "cmpl (%edx), %esi;jne  <NtAdjustPrivilegesToken+>;movl (%edi), %esi;cmpl (%edx), %esi;je  <NtAdjustPrivilegesToken+>": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %edx;cmpl (%ebp), %edx;jb - <NtAdjustPrivilegesToken+>;incl -(%ebp)": 1,
                "movl %edi, -(%ebp);jne  <NtAdjustPrivilegesToken+>;cmpl $, (%ebp);jg  <NtAdjustPrivilegesToken+>;cmpl %edi, (%ebp)": 1,
                "jge  <NtAdjustPrivilegesToken+>;movl $, %eax;jmp  <NtAdjustPrivilegesToken+>;pushl %ebx;movl (%ebp), %ebx": 1,
                "calll  <SeCaptureSecurityDescriptor+>;cmpl %edi, %eax;jge  <NtAdjustPrivilegesToken+>;movl %eax, %edi;jmp  <NtAdjustPrivilegesToken+>": 2,
                "pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax": 3,
                "addl $, %eax;pushl %eax;pushl %ebx;pushl %eax;pushl %edi": 2,
                "movl %ecx, (%ebx);movl (%eax), %ecx;movl %ecx, %edx;shrl $, %ecx;leal (%eax), %esi": 1,
                "movl %eax, (%ebp);movl %eax, (%ebx);jne  <NtAdjustPrivilegesToken+>;movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "jmp  <NtAdjustPrivilegesToken+>;andl $, (%ebx);movl (%edx), %esi;movl (%edx), %ecx;subl (%edx), %esi": 2,
                "movl (%ebp), %edi;pushl %esi;pushl %esi;pushl %esi;pushl %esi": 2,
                "movl %edi, (%ecx);jmp  <NtAdjustPrivilegesToken+>;movl (%ebp), %ecx;movl %esi, (%ecx);popl %edi": 1,
                "jmp  <NtAdjustPrivilegesToken+>;movl (%ebp), %ecx;movl %esi, (%ecx);popl %edi;popl %esi": 1,
                "pushl %esi;pushl %edi;leal (%ebx), %esi;pushl %esi;movl %esi, -(%ebp)": 1,
                "pushl %esi;calll  <SeMarkLogonSessionForTerminationNotification+>;jmp  <NtAdjustPrivilegesToken+>;movl (%ebx), %esi;movl %eax, %edi": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl %edi, %eax;jmp  <NtAdjustPrivilegesToken+>": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;movl %eax, (%ebx);xorl %eax, %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movl (%esi), %eax;leal (%ebx), %edi;pushl %edi;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movl %edi, (%ebx);pushl (%esi);pushl (%esi);calll - <RtlCopyLuid+>": 1,
                "calll - <RtlCopyLuid+>;movl (%esi), %eax;leal (%eax,%eax,), %eax;shll $, %eax;subl %eax, -(%ebp)": 1,
                "addl %eax, %edi;movl (%esi), %eax;cmpl (%ebp), %eax;ja  <NtAdjustPrivilegesToken+>;movl (%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl %edi;pushl -(%ebp);pushl (%esi)": 1,
                "pushl (%esi);calll - <RtlCopySid+>;movl %eax, (%ebp);movl (%esi), %eax;leal (%edi,%eax,), %edi": 1,
                "pushl (%ecx);pushl $;pushl %eax;pushl (%esi);calll - <NtAdjustPrivilegesToken+>": 1,
                "je  <NtAdjustPrivilegesToken+>;movb $, %cl;movb $, (%eax);calll *;movl $, %esi": 2,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%edx), %ecx;testl %ecx, %ecx;je  <NtAdjustPrivilegesToken+>": 1,
                "calll - <RtlUnwind+>;movl (%ebp), %eax;movl %ebx, (%eax);movl (%ebp), %eax;popl %edi": 1,
                "cmpb %bl, %al;je  <NtDuplicateToken+>;movl %ebx, -(%ebp);cmpl $, (%ebp);jl  <NtDuplicateToken+>": 1,
                "pushl ;pushl $;popl %edi;pushl %edi;pushl (%ebp)": 1,
                "movl -(%ebp), %ecx;movl (%esi), %eax;cmpl %edi, %eax;jne  <NtDuplicateToken+>;cmpl (%esi), %ecx": 1,
                "pushl %ecx;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %esi": 1,
                "movl %eax, %edi;movl %esi, %ecx;calll - <ObfDereferenceObject>;cmpb %bl, -(%ebp);je  <NtDuplicateToken+>": 1,
                "movl %edi, %eax;calll - <wctomb+>;retl $;movl -(%ebp), %eax;movl (%eax), %eax": 2,
                "jl  <NtDuplicateToken+>;movl (%ebp), %ebx;cmpl %esi, %ebx;je  <NtDuplicateToken+>;testb $, %bl": 2,
                "pushl %eax;addl $, %ebx;pushl %ebx;calll  <SeCaptureSecurityDescriptor+>;movl %eax, %edi": 1,
                "incl %ecx;addl $, %eax;cmpl -(%ebp), %ecx;jb - <NtDuplicateToken+>;leal -(%ebp), %eax": 1,
                "cmpl -(%ebp), %ecx;jb - <NtDuplicateToken+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl (%ebp);pushl -(%ebp);pushl -(%ebp);calll - <NtAdjustPrivilegesToken+>;movl %eax, %edi": 1,
                "movl %eax, %edi;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %esi, %edi;jl  <NtDuplicateToken+>": 1,
                "xorl %esi, %esi;cmpl %esi, -(%ebp);je  <NtDuplicateToken+>;pushl $;pushl -(%ebp)": 1,
                "calll  <SeReleaseSecurityDescriptor>;cmpl %esi, -(%ebp);je  <NtDuplicateToken+>;pushl $;pushl -(%ebp)": 1,
                "movl (%ebp), %eax;cmpl %esi, %eax;je  <SeFilterToken+>;movl (%eax), %ebx;addl $, %eax": 1,
                "je  <SeFilterToken+>;movl (%eax), %ecx;xorl %edi, %edi;cmpl %esi, %ecx;leal (%eax), %edx": 1,
                "cmpl %esi, %eax;jl  <SeFilterToken+>;movl (%ebp), %ecx;movl %edi, (%ecx);popl %edi": 1,
                "movl (%eax), %eax;movl (%eax), %ebx;movl , %eax;movzbl (%eax), %eax;addl %ecx, %eax": 1,
                "andl %edi, (%eax);movl $, %eax;jmp  <SeFilterToken+>;pushl $;pushl -(%ebp)": 1,
                "jmp  <SeFilterToken+>;pushl $;pushl -(%ebp);pushl %edi;calll - <RtlCreateAcl>": 1,
                "cmpl $, (%eax);jne  <SeFilterToken+>;movl (%ebp), %eax;cmpl $, (%eax);je  <SeFilterToken+>": 1,
                "retl;movl -(%ebp), %eax;jmp  <NtOpenProcessTokenEx+>;movl (%ebp), %edi;leal -(%ebp), %eax": 1,
                "cmpl %ebx, %esi;jl  <NtOpenProcessTokenEx+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "movl %eax, (%edi);orl $-, -(%ebp);movl %esi, %eax;calll - <wctomb+>;retl $": 1,
                "pushl (%ebp);calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;movl (%ebp), %ecx;movl (%ebp), %esi": 1,
                "cmpl %ebx, %eax;movl (%ebp), %ecx;movl (%ebp), %esi;movl %ecx, (%esi);jl  <NtOpenProcessTokenEx+>": 1,
                "movl %ebx, (%esi);movl $, %eax;jmp  <NtOpenProcessTokenEx+>;movl (%ebp), %ecx;cmpl %ebx, (%ecx)": 1,
                "movl $, %eax;jmp  <NtOpenThreadTokenEx+>;cmpb %bl, %al;je  <NtOpenThreadTokenEx+>;movl %ebx, -(%ebp)": 1,
                "jmp  <NtOpenThreadTokenEx+>;cmpb %bl, %al;je  <NtOpenThreadTokenEx+>;movl %ebx, -(%ebp);movl , %eax": 1,
                "cmpl %eax, %ecx;jb  <NtOpenThreadTokenEx+>;movl %ebx, (%eax);movl (%ecx), %eax;movl %eax, (%ecx)": 1,
                "calll - <PsDisableImpersonation>;movb %al, -(%ebp);cmpb %bl, -(%ebp);je  <NtOpenThreadTokenEx+>;movl -(%ebp), %eax": 1,
                "cmpl %ebx, %edi;jl  <NtOpenThreadTokenEx+>;cmpl %ebx, -(%ebp);je  <NtOpenThreadTokenEx+>;pushl $": 1,
                "jl  <NtOpenThreadTokenEx+>;cmpl %ebx, -(%ebp);je  <NtOpenThreadTokenEx+>;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;andl %ecx, %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %ebx, %edi;jl  <NtOpenThreadTokenEx+>;cmpb %bl, -(%ebp)": 1,
                "je  <NtOpenThreadTokenEx+>;pushl -(%ebp);pushl -(%ebp);pushl %ebx;pushl -(%ebp)": 1,
                "movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <NtOpenThreadTokenEx+>;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpl %ebx, %edi;jl  <NtOpenThreadTokenEx+>": 1,
                "cmpl %eax, %ebx;jb  <NtQueryInformationToken+>;movl $, (%eax);movl (%ebx), %eax;movl %eax, (%ebx)": 1,
                "decl %eax;pushl $;popl %esi;cmpl %esi, %eax;ja  <NtQueryInformationToken+>": 1,
                "pushl $;pushl (%esi);calll - <ExAcquireResourceSharedLite>;movl (%esi), %ecx;leal -(,%ecx,), %edx": 1,
                "addl $, %eax;decl %ecx;movl (%eax), %ebx;movzbl (%ebx), %ebx;leal (%edx,%ebx,), %edx": 1,
                "pushl %eax;pushl -(%ebp);pushl ;pushl $;popl %ebx": 2,
                "popl %ebx;pushl %ebx;pushl (%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax": 1,
                "pushl (%esi);pushl (%esi);calll - <RtlCopyLuid+>;orl $-, -(%ebp);movl (%esi), %ecx": 2,
                "movl (%ebx), %eax;testl %eax, %eax;je  <NtQueryInformationToken+>;movzwl (%eax), %esi;addl $, %esi": 1,
                "jmp  <NtQueryInformationToken+>;andl $, (%edi);orl $-, -(%ebp);movl (%ebx), %ecx;calll - <ExReleaseResourceLite>": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp - <NtQueryInformationToken+>;pushl $": 4,
                "movl $, %esi;movl -(%ebp), %ecx;jmp - <NtQueryInformationToken+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, (%edi);orl $-, -(%ebp);xorl %esi, %esi": 1,
                "movl (%eax), %eax;movl %eax, (%edi);orl $-, -(%ebp);xorl %esi, %esi;jmp - <NtQueryInformationToken+>": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax;movl %eax, (%edi);orl $-, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%edx), %eax;movzbl (%eax), %eax;leal (%ebx,%eax,), %ebx;addl $, %edx": 1,
                "addl %ebx, %eax;movl -(%ebp), %ecx;leal (%eax,%ecx), %eax;movl $, -(%ebp);movl (%ebp), %ecx": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax;movl %eax, (%edi);movl %ebx, (%edi)": 1,
                "addl %eax, %ecx;addl %ebx, %ecx;movl %ecx, (%edi);movl (%esi), %ecx;leal (%eax,%ecx,), %edx": 1,
                "movl %ecx, %eax;shll $, %eax;subl %eax, %ebx;pushl %ebx;pushl (%esi)": 1,
                "calll *;xorl %edi, %edi;jmp - <NtQueryInformationToken+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp - <NtQueryInformationToken+>;movl $, -(%ebp)": 1,
                "andl $, %eax;movl %eax, (%edi);jmp  <NtQueryInformationToken+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "incl %esi;cmpl $, %esi;jle  <NtQueryInformationToken+>;leal -(,%esi,), %eax;jmp  <NtQueryInformationToken+>": 1,
                "movl -(%ebp), %ecx;jmp - <NtQueryInformationToken+>;movl $, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %esi, (%edi);testl %esi, %esi;je  <NtQueryInformationToken+>;movl %edx, %ecx": 1,
                "movl %ecx, (%edi,%eax,);incl %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;andl %esi, %ecx": 1,
                "movl (%eax), %eax;movzbl (%eax), %ebx;pushl $;leal (,%ebx,), %ebx;pushl %ebx": 1,
                "cmpl %ecx, (%ecx);je  <SeQueryInformationToken+>;movb $, %cl;movb $, (%eax);calll *": 4,
                "jmp  <SeQueryInformationToken+>;movl %fs:, %eax;decl (%eax);movl (%ebp), %esi;pushl $": 1,
                "leal (%eax,%eax,), %eax;pushl $;leal (,%eax,), %eax;pushl %eax;pushl $": 1,
                "leal (%edi), %eax;pushl %eax;pushl (%esi);pushl (%esi);calll - <RtlCopyLuid+>": 1,
                "jmp - <SeQueryInformationToken+>;pushl $;popl %esi;movl %fs:, %eax;decl (%eax)": 1,
                "pushl (%ebx);calll - <ExAcquireResourceSharedLite>;movl (%ebx), %eax;testl %eax, %eax;je  <SeQueryInformationToken+>": 1,
                "movl (%ebx), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <SeQueryInformationToken+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je - <SeQueryInformationToken+>;movl (%ebp), %esi": 1,
                "jmp  <SeQueryInformationToken+>;pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "testl %eax, %eax;je - <SeQueryInformationToken+>;movl (%ebp), %ecx;movl (%ecx), %ecx;jmp  <SeQueryInformationToken+>": 1,
                "movl %eax, %edi;testl %edi, %edi;je - <SeQueryInformationToken+>;movl %fs:, %eax;decl (%eax)": 1,
                "calll - <ExAcquireResourceSharedLite>;movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax;movl %eax, (%edi)": 1,
                "leal (%eax,%ecx,), %eax;movl (%esi), %ecx;testl %ecx, %ecx;je  <SeQueryInformationToken+>;movzwl (%ecx), %ecx": 1,
                "shll $, %edi;cmpl %ecx, %edi;je  <SeQueryInformationToken+>;testb $, %bl;je  <SeQueryInformationToken+>": 1,
                "jb  <SeQueryInformationToken+>;cmpl , %edi;jbe  <SeQueryInformationToken+>;calll  <ExRaiseAccessViolation>;pushl $": 1,
                "cmpl %esi, %eax;jae  <SeQueryInformationToken+>;leal (%ebx,%eax,), %ecx;xorl %edx, %edx;movw (%ecx), %dx": 1,
                "andw $, (%ebx);movl (%ecx), %ecx;movl %ecx, -(%ebp);testb $, %cl;je  <SeQueryInformationToken+>": 1,
                "movl %eax, (%ebx);movzwl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, -(%ebp,%eax,);incl -(%ebp)": 1,
                "movzwl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, -(%ebp,%eax,);incl -(%ebp);movl -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp,%eax,);incl -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;andl $, -(%ebp);orl $-, -(%ebp);andl $, -(%ebp)": 1,
                "cmpw (%ebp), %di;jbe  <SeQueryInformationToken+>;movzwl %di, %edi;cmpl (%ebp), %edi;jne  <SeQueryInformationToken+>": 1,
                "movl -(%ebp), %esi;orl $-, -(%ebp);movl %esi, (%eax);movl -(%ebp), %esi;andl $, -(%ebp)": 1,
                "jne - <SeQueryInformationToken+>;popl %edi;popl %esi;leave;retl $": 1,
                "subl $, %eax;pushl %ebx;pushl %esi;pushl %edi;je  <SeQueryInformationToken+>": 1,
                "movl (%ebp), %ebx;leal (%edi,%edi,), %eax;leal (%ebx,%eax,), %esi;movl (%esi), %eax;movl (%esi), %ecx": 2,
                "notl %eax;andl (%ebp), %eax;orl %ecx, %eax;movl %eax, (%esi);cmpl %eax, %ecx": 1,
                "movl (%ebp), %edi;movl (%ebp), %ebx;leal (%edi,%edi,), %eax;leal (%ebx,%eax,), %esi;movl (%esi), %ecx": 1,
                "subl $, %eax;je  <SeQueryInformationToken+>;decl %eax;je  <SeQueryInformationToken+>;decl %eax": 1,
                "movzbl (%ebx), %eax;andl $, (%ebp);leal (,%eax,), %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;pushl %edi;je  <SeQueryInformationToken+>": 1,
                "je  <SeQueryInformationToken+>;movl %esi, (%ebp);cmpb $, (%ebp);movl (%ebp), %esi;movzbl (%esi), %eax": 1,
                "jne  <SeQueryInformationToken+>;xorl %ebx, %ebx;rep  cmpsb %es:(%edi), (%esi);je  <SeQueryInformationToken+>;addl $, %eax": 1,
                "jne  <SeQueryInformationToken+>;cmpb %cl, (%ebp);je - <SeQueryInformationToken+>;testb $, %al;je - <SeQueryInformationToken+>": 1,
                "addl $, %ecx;decl %esi;jne - <SeQueryInformationToken+>;movl (%ebp), %esi;movzwl (%esi), %eax": 1,
                "pushl (%ebp);jmp  <SeQueryInformationToken+>;pushl $;jmp  <SeQueryInformationToken+>;cmpb $, %al": 1,
                "andl %edx, %ebx;jne  <SeQueryInformationToken+>;andl $, %eax;leal (%eax,%ecx,), %eax;leal (%esi,%eax,), %eax": 1,
                "je  <SeQueryInformationToken+>;pushl (%ebp);andl $, %eax;pushl $;leal (%eax,%ecx,), %eax": 2,
                "pushl (%ebp);andl $, %eax;pushl $;leal (%eax,%ecx,), %eax;leal (%esi,%eax,), %eax": 2,
                "testb %al, %al;je  <SeQueryInformationToken+>;leal (%ebp), %eax;pushl %eax;pushl (%ebp)": 2,
                "cmpb $, %al;jne  <SeQueryInformationToken+>;pushl (%ebp);leal (%esi), %ebx;pushl $": 1,
                "pushl (%ebp);calll - <SeQueryInformationToken+>;testb %al, %al;je  <SeQueryInformationToken+>;xorl %eax, %eax": 1,
                "pushl (%ebp);pushl %edi;pushl %eax;calll - <SeQueryInformationToken+>;testb %al, %al": 1,
                "pushl %edi;calll - <SeQueryInformationToken+>;movzwl (%esi), %eax;addl %eax, %esi;decl (%ebp)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;testl %edx, %edx;pushl %ebx;movl (%ebp), %ebx": 1,
                "movl (%ebp), %edx;testl %edx, %edx;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "movl (%ebp), %esi;movl %esi, (%eax);addl $, %eax;decl %edx;jne - <SeQueryInformationToken+>": 1,
                "pushl %edi;calll - <RtlLengthSid>;leal (%eax,%esi), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl $;pushl (%ebp);calll - <SeQueryInformationToken+>;testb %al, %al;je  <SeQueryInformationToken+>": 2,
                "movl (%esi), %eax;notl %eax;andl %eax, (%ebx);jmp  <SeQueryInformationToken+>;cmpb $, %al": 1,
                "andl %eax, (%ebx);jmp  <SeQueryInformationToken+>;cmpb $, %al;jne  <SeQueryInformationToken+>;pushl (%ebp)": 1,
                "movl (%esi), %eax;testl %eax, (%ebx);jne  <SeQueryInformationToken+>;movzwl (%esi), %eax;incl (%ebp)": 1,
                "cmpb $, %al;jne - <SeQueryInformationToken+>;movl (%esi), %eax;pushl (%ebp);movl %eax, %ecx": 1,
                "movl (%ebx,%eax,), %eax;testl %eax, (%esi);jmp - <SeQueryInformationToken+>;int;int": 1,
                "je  <SeQueryInformationToken+>;testb $, %al;je  <SeQueryInformationToken+>;pushl $;leal (%esi), %eax": 1,
                "pushl %eax;pushl $;pushl (%ebp);calll - <SeQueryInformationToken+>;testb %al, %al": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %ebx;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);jne  <SeQueryInformationToken+>;movl %eax, -(%ebp);movl (%ebp), %ebx;movl $, %esi": 1,
                "calll  <SeAuditHardLinkCreation+>;testb %al, %al;jne  <SeQueryInformationToken+>;andl $, (%ebp);movl $, %esi": 1,
                "pushl ;calll  <SeAuditHardLinkCreation+>;testb %al, %al;je  <SeQueryInformationToken+>;orl %esi, (%ebp)": 1,
                "movl %esi, (%ebp);movl $, %esi;jmp  <SeQueryInformationToken+>;movl (%ebp), %eax;cmpl %esi, %eax": 1,
                "movl $, %esi;jmp  <SeQueryInformationToken+>;movl (%ebp), %eax;cmpl %esi, %eax;jne  <SeQueryInformationToken+>": 1,
                "calll - <SeQueryInformationToken+>;cmpl $, (%esi);jne  <SeQueryInformationToken+>;pushl %edi;calll  <SeTokenIsRestricted>": 1,
                "orl (%eax), %ecx;notl %ecx;andl (%eax), %ecx;testl %ecx, (%ebp);jne  <SeQueryInformationToken+>": 1,
                "andl (%eax), %ecx;testl %ecx, (%ebp);jne  <SeQueryInformationToken+>;pushl %edi;calll  <SeTokenIsWriteRestricted>": 1,
                "calll - <SeQueryInformationToken+>;cmpb $, (%ebp);je  <SeQueryInformationToken+>;movl (%ebp), %eax;orl (%ebp), %eax": 1,
                "cmpl $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);je  <SeQueryInformationToken+>;movl $, %ecx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax;testl %eax, %eax;jbe  <SeQueryInformationToken+>": 1,
                "je  <SeQueryInformationToken+>;cmpl $, (%esi);jne  <SeQueryInformationToken+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <SeQueryInformationToken+>;movb %bl, (%eax);jmp  <SeQueryInformationToken+>": 1,
                "movl $, %esi;movl -(%ebp), %eax;movl (%ebp), %ecx;movl %esi, (%eax);movl -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl %esi, (%eax);movl -(%ebp), %eax;movl %ecx, (%eax);testl %esi, %esi": 1,
                "cmpl %ebx, (%edi);jne  <SeQueryInformationToken+>;movb %bl, -(%ebp);movl $, %esi;movl %ebx, (%ebp)": 1,
                "jmp  <SeQueryInformationToken+>;movl (%eax), %eax;jmp  <SeQueryInformationToken+>;movl (%ebp), %eax;movl %eax, (%ebp)": 1,
                "calll  <SeAuditHardLinkCreation+>;testb %al, %al;je  <SeQueryInformationToken+>;andb $-, (%esi);incl %ebx": 1,
                "jbe  <SeQueryInformationToken+>;pushl $;leal -(%ebx,%ebx,), %eax;leal (,%eax,), %eax;pushl %eax": 1,
                "leal -(%ebx,%ebx,), %eax;leal (,%eax,), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl (%ebp), %ecx;movl %eax, (%ecx);jne  <SeQueryInformationToken+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);jne  <SeQueryInformationToken+>;movl $, %eax;jmp  <SeQueryInformationToken+>": 1,
                "leal (%eax,%eax,), %eax;shll $, %eax;movl %edi, (%esi,%eax);movl , %edi;movl %edi, (%esi,%eax)": 1,
                "pushl (%esi);calll - <ExAcquireResourceSharedLite>;pushl %ebx;pushl %edi;pushl %ebx": 1,
                "testb $, (%esi);je  <SeQueryInformationToken+>;pushl $;pushl %ebx;pushl %edi": 1,
                "je  <SeQueryInformationToken+>;pushl $;pushl %ebx;pushl %edi;pushl %ebx": 1,
                "movl (%ebp), %eax;movl %edi, (%eax);movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);xorl %eax, %eax;jmp  <SeQueryInformationToken+>;movl %edi, -(%ebp);cmpb $, (%ebp)": 1,
                "jmp  <SeQueryInformationToken+>;movl %eax, %esi;shll $, %esi;pushl $;pushl %esi": 1,
                "jb  <SeQueryInformationToken+>;movl %edi, (%eax);movl (%ecx), %eax;movl %eax, (%ecx);movl (%ebp), %ecx": 2,
                "jb  <SeQueryInformationToken+>;movl %edi, (%eax);movl (%ecx), %eax;movl %eax, (%ecx);pushl $": 1,
                "movl %edi, (%eax);leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "jmp  <SeQueryInformationToken+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 8,
                "jmp  <SeQueryInformationToken+>;testb $-, (%ebp);je  <SeQueryInformationToken+>;movl $, %esi;jmp  <SeQueryInformationToken+>": 1,
                "cmpl %edi, %esi;jl  <SeQueryInformationToken+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %edx;movl %eax, (%edx,%ecx,);movl (%ebp), %edx;movl %esi, (%edx,%ecx,);incl %ecx": 1,
                "je  <SeQueryInformationToken+>;movl (%edx), %eax;cmpl %esi, %eax;jbe  <SeQueryInformationToken+>;leal -(%eax,%eax,), %ecx": 1,
                "movl (%edx), %eax;cmpl %esi, %eax;jbe  <SeQueryInformationToken+>;leal -(%eax,%eax,), %ecx;leal (,%ecx,), %ecx": 1,
                "popl %eax;cmpl %eax, -(%ebp);jae  <SeQueryInformationToken+>;movl $, -(%ebp);movl (%ebp), %ecx": 1,
                "movl %eax, (%ecx);movl $, %esi;movl %esi, -(%ebp);jmp  <SeQueryInformationToken+>;movl -(%ebp), %eax": 1,
                "xorl %edi, %edi;cmpl %edi, (%ebp);je  <SeQueryInformationToken+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;pushl -(%ebp);pushl (%ebp);calll  <SeCaptureSecurityDescriptor+>;movl %eax, %esi": 1,
                "pushl (%ebp);calll  <SeCaptureSecurityDescriptor+>;movl %eax, %esi;cmpl %edi, %esi;jge  <SeQueryInformationToken+>": 1,
                "jmp  <SeQueryInformationToken+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl $": 1,
                "je  <SeQueryInformationToken+>;movw (%eax), %dx;movl (%eax), %ecx;andw $, %dx;je  <SeQueryInformationToken+>": 1,
                "movl -(%ebp), %esi;pushl (%esi);calll - <ExAcquireResourceSharedLite>;testw $, (%ebp);je  <SeQueryInformationToken+>": 1,
                "je  <SeQueryInformationToken+>;orl $, %ebx;jmp  <SeQueryInformationToken+>;movl (%ebp), %eax;andl $, %eax": 1,
                "orl $, %ebx;jmp  <SeQueryInformationToken+>;movl (%ebp), %eax;andl $, %eax;orl %eax, %ebx": 1,
                "movl $, (%edi,%esi,);movl (%ebp), %eax;andl %ebx, (%eax,%esi,);jmp  <SeQueryInformationToken+>;andl $, (%edi,%esi,)": 1,
                "jmp  <SeQueryInformationToken+>;movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "jmp  <SeQueryInformationToken+>;cmpb $, (%ebp);je  <SeQueryInformationToken+>;pushl $;movl (%ebp), %eax": 1,
                "je  <SeQueryInformationToken+>;pushl $;movl (%ebp), %eax;shll $, %eax;pushl %eax": 1,
                "pushl -(%ebp);pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "cmpb $, (%ebp);je  <SeQueryInformationToken+>;testl %edi, %edi;je  <SeQueryInformationToken+>;pushl $": 1,
                "movb $, %al;jmp  <SeAccessCheck+>;cmpl %ebx, (%ebp);jne  <SeAccessCheck+>;movl (%ebp), %eax": 1,
                "jmp  <SeAccessCheck+>;cmpl %ebx, (%ebp);jne  <SeAccessCheck+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "cmpl %ebx, (%ebp);jne  <SeAccessCheck+>;movl (%ebp), %eax;movl $, (%eax);xorb %al, %al": 1,
                "xorb %al, %al;jmp  <SeAccessCheck+>;pushl %esi;movl (%ebp), %esi;cmpl %ebx, (%esi)": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;jne  <SeAccessCheck+>;movl (%esi), %eax;pushl $": 1,
                "cmpb %bl, (%ebp);jne  <SeAccessCheck+>;pushl %esi;calll  <SeUnlockSubjectContext>;movl (%ebp), %eax": 1,
                "movl %esp, %ebp;xorl %eax, %eax;pushl %eax;pushl (%ebp);pushl (%ebp)": 2,
                "xorl %eax, %eax;pushl %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 2,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %eax;pushl %eax": 2,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;cmpb $, (%esi);je  <SeDeleteAccessState+>": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;addl $, %esi;pushl %esi;calll  <SeReleaseSubjectContext>": 1,
                "addl $, %esi;pushl %esi;calll  <SeReleaseSubjectContext>;popl %esi;popl %ebp": 1,
                "movl (%edi), %eax;addl $, %esp;addl %eax, (%esi);popl %edi;popl %esi": 1,
                "movl %eax, (%ebp);je  <SeSetAccessStateGenericMapping+>;cmpl $, (%ebp);je  <SeSetAccessStateGenericMapping+>;pushl (%ebp)": 1,
                "popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);leal (%ebx), %edi;pushl %edi": 1,
                "movl %esi, %edi;rep  stosl %eax, %es:(%edi);leal (%ebx), %edi;pushl %edi;pushl (%ebp)": 1,
                "rep  stosl %eax, %es:(%edi);leal (%ebx), %edi;pushl %edi;pushl (%ebp);movl %esi, (%ebx)": 1,
                "testl %edi, %edi;jne  <SeSetAccessStateGenericMapping+>;movl (%ebx), %edi;xorl %eax, %eax;incl %eax": 1,
                "testb %al, (%edi);je  <SeSetAccessStateGenericMapping+>;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl %eax, (%ebx);leal (%ebx), %eax": 1,
                "leal (,%esi,), %esi;jmp  <SeAppendPrivileges+>;pushl $;popl %esi;testl %edx, %edx": 1,
                "leal -(%ecx,%ecx,), %eax;leal (,%eax,), %eax;jmp  <SeAppendPrivileges+>;pushl $;popl %eax": 1,
                "addl %esi, %eax;pushl $;pushl %eax;pushl $;movl %eax, -(%ebp)": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <SeSetAccessStateGenericMapping+>;movl (%ebp), %esi;cmpb $, (%esi)": 1,
                "movl (%ebp), %esi;cmpb $, (%esi);je  <SeAppendPrivileges+>;pushl $;pushl (%ebx)": 1,
                "movb $, (%esi);jmp  <SeAppendPrivileges+>;pushl %esi;pushl $;pushl %edx": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ecx)": 1,
                "je  <SeAssignSecurity+>;testb $, (%eax);jne  <SeAssignSecurity+>;testb $, (%ecx);je  <SeAssignSecurity+>": 2,
                "orl $, %edx;pushl (%ebp);pushl (%ebp);pushl %edx;pushl (%ebp)": 1,
                "pushl (%ebp);xorl %ecx, %ecx;pushl (%ebp);testl %eax, %eax;pushl (%ebp)": 1,
                "pushl (%ebp);testl %eax, %eax;pushl (%ebp);setne %cl;negl %eax": 1,
                "testl %eax, %eax;pushl (%ebp);setne %cl;negl %eax;sbbl %eax, %eax": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);popl %ecx;movl %edx, -(%ebp);movl (%ebx), %edx": 1,
                "movl %edx, -(%ebp);movl (%ebx), %edx;pushl $;movl %edx, -(%ebp);movl (%ebx), %edx": 2,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);popl %ecx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <SeTokenIsWriteRestricted+>;movb $, %al;jmp  <SeDeassignSecurity+>": 1,
                "movb $, %al;jmp  <SeDeassignSecurity+>;xorb %al, %al;popl %esi;popl %ebx": 1,
                "pushl $;sete %al;pushl %eax;pushl (%ebp);pushl $": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;je  <SeDeassignSecurity+>;movl (%eax), %eax": 1,
                "pushl $;popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);andl %eax, -(%ebp)": 3,
                "popl %ecx;movl %edx, -(%ebp);movl (%ebp), %edx;testl %edx, %edx;popl %esi": 1,
                "pushl %eax;movl $, -(%ebp);calll  <SeTokenIsWriteRestricted+>;leave;retl $": 1,
                "pushl $;sete %al;popl %edi;pushl $;popl %esi": 1,
                "popl %eax;je  <SeDeassignSecurity+>;movl (%ecx), %ecx;movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "testl %ecx, %ecx;movl %eax, -(%ebp);je  <SeDeassignSecurity+>;movl (%ecx), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;jbe  <SeDeassignSecurity+>;leal -(%eax,%eax,), %eax;leal (,%eax,), %eax;movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %edx;pushl %edi;pushl $": 1,
                "movl $, -(%ebp);movw $, -(%ebp);movzbl (%edx), %ecx;leal (,%ecx,), %ecx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl (%ebp), %edx;movl %ecx, -(%ebp);movzwl , %ecx;movl %eax, -(%ebp)": 1,
                "addl $, %ecx;pushl $;movl %ecx, -(%ebp);popl %ecx;movl %eax, -(%ebp)": 1,
                "addl $, %eax;pushl $;movl %eax, -(%ebp);popl %eax;movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);movl %ecx, -(%ebp);calll  <SeTokenIsWriteRestricted+>;popl %edi;popl %esi": 1,
                "calll - <ObQueryNameString>;cmpl $, %eax;je  <SeDeassignSecurity+>;cmpl $, %eax;jne  <SeDeassignSecurity+>": 1,
                "testl %esi, %esi;je  <SeDeassignSecurity+>;leal (%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "je  <SeDeassignSecurity+>;leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl %esi": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;pushl %ebx;pushl %edi;pushl $": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl %fs:, %eax": 2,
                "movl (%eax), %esi;movl (%esi), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <SeCaptureSubjectContext>;movl -(%ebp), %edi": 1,
                "popl %ebx;je  <SeDeassignSecurity+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>": 1,
                "je  <SeDeassignSecurity+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;leal -(%ebp), %eax": 1,
                "calll  <SeCaptureSubjectContext>;movl -(%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %esi;movl (%eax), %ecx": 1,
                "movzbl (%esi), %edx;movl %ecx, -(%ebp);movzwl , %ecx;addl %eax, %ecx;leal (,%edx,), %edx": 1,
                "je  <SeDeassignSecurity+>;movl %ecx, -(%ebp);movl %eax, -(%ebp);movl (%edx), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %eax;calll  <SeReleaseSubjectContext>;leal -(%ebp), %eax;cmpl %eax, %edi;je  <SeDeassignSecurity+>": 1,
                "leal -(%ebp), %eax;cmpl %eax, %edi;je  <SeDeassignSecurity+>;pushl $;pushl %edi": 1,
                "subl $, %esp;pushl %esi;pushl %edi;xorl %eax, %eax;pushl $": 1,
                "leal (,%eax,), %eax;movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <SeCaptureSubjectContext>": 1,
                "movl (%eax), %edx;movl (%eax), %esi;movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movl $, -(%ebp,%eax,)": 1,
                "movl (%eax), %esi;movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movl $, -(%ebp,%eax,);movzbl (%ecx), %eax": 1,
                "leal (%eax,%eax,), %eax;movl %edi, -(%ebp,%eax,);movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movl %ecx, -(%ebp,%eax,)": 3,
                "movl %edx, -(%ebp,%eax,);movl -(%ebp), %eax;leal (%eax,%eax,), %eax;addl %edi, %esi;movl %esi, -(%ebp,%eax,)": 1,
                "movl (%ebp), %ecx;incl %eax;movl %eax, -(%ebp);leal (%eax,%eax,), %eax;movl %edx, -(%ebp,%eax,)": 1,
                "pushl %edi;xorl %esi, %esi;xorl %eax, %eax;leal -(%ebp), %edi;movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);decl %eax;andl $-, %eax;addl %esi, %eax;movl %eax, -(%ebp)": 1,
                "andl $-, %eax;addl %esi, %eax;movl %eax, -(%ebp);xorl %eax, %eax;cmpb %al, (%ebp)": 1,
                "testl %eax, %eax;movl %edx, -(%ebp);movl %ecx, -(%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "je  <SeAuditHardLinkCreation+>;movzwl (%eax), %ecx;addl %esi, %ecx;movl %ebx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;testl %ecx, %ecx;je  <SeAuditHardLinkCreation+>;movl (%ecx), %edx": 1,
                "addl %esi, %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx;pushl $;movl %eax, -(%ebp)": 1,
                "pushl $;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl (%ebx), %ecx;xorl %edx, %edx": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp)": 1,
                "je  <SeAuditHardLinkCreation+>;movl (%ecx), %eax;cmpl %edx, %eax;jbe  <SeAuditHardLinkCreation+>;leal -(%eax,%eax,), %eax": 1,
                "leal -(%eax,%eax,), %eax;leal (,%eax,), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "xorl %ecx, %ecx;incl %eax;movl %eax, (%ebp);xorl %eax, %eax;cmpl %edx, (%ebp)": 1,
                "movl %ecx, -(%ebp,%eax,);movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movl %edx, -(%ebp,%eax,);movl -(%ebp), %eax": 2,
                "pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;popl %edi;movb $, %al": 1,
                "pushl %ecx;pushl %ecx;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "testb %al, %al;je  <SeAuditHardLinkCreation+>;pushl %esi;movl %fs:, %eax;movl (%eax), %eax": 2,
                "pushl %eax;calll - <SeDeassignSecurity+>;testl %eax, %eax;leal -(%ebp), %esi;jl  <SeAuditHardLinkCreation+>": 3,
                "movzbl (%ecx), %edx;pushl $;movl %ecx, -(%ebp);movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl $, -(%ebp);movw $, -(%ebp);movl %eax, -(%ebp);movl %edx, -(%ebp);je  <SeAuditHardLinkCreation+>": 1,
                "pushl %eax;movl %esi, -(%ebp);movl $, -(%ebp);calll  <SeTokenIsWriteRestricted+>;leal -(%ebp), %eax": 1,
                "je  <SeAuditHardLinkCreation+>;pushl %esi;movl %fs:, %eax;movl (%eax), %eax;leal -(%ebp), %ecx": 1,
                "pushl %esi;movl %fs:, %eax;movl (%eax), %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;popl %ecx;leal (,%edx,), %edx": 1,
                "movw $, -(%ebp);movl %ecx, -(%ebp);movl %edx, -(%ebp);je  <SeAuditHardLinkCreation+>;movzwl (%eax), %edx": 1,
                "incl %eax;movl %eax, -(%ebp);leal (%eax,%eax,), %eax;movl $, -(%ebp,%eax,);movzwl (%esi), %ecx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movw $, -(%ebp);calll  <SeCaptureSubjectContext>": 1,
                "movl -(%ebp), %eax;pushl $;leal (%eax,%eax,), %edx;popl %eax;movl %eax, -(%ebp,%edx,)": 1,
                "leal (%esi,%esi,), %esi;movl %edi, -(%ebp,%esi,);movl -(%ebp), %esi;leal (%esi,%esi,), %esi;movl %edx, -(%ebp,%esi,)": 1,
                "movl %edi, -(%ebp,%ecx,);movl -(%ebp), %ecx;leal (%ecx,%ecx,), %ecx;movl %edx, -(%ebp,%ecx,);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;leal (%ecx,%ecx,), %ecx;movl %edx, -(%ebp,%ecx,);movl -(%ebp), %ecx;movl %ecx, %edx": 1,
                "movzbl (%ebx), %edx;leal (,%edx,), %edx;movl %ebx, -(%ebp);movzwl , %ebx;movl %edx, -(%ebp)": 1,
                "leal -(%ebp), %esi;jl  <SeAuditHardLinkCreation+>;movl (%ebp), %esi;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl %eax;calll  <SeCaptureSubjectContext>;pushl $;popl %ecx;xorl %eax, %eax": 1,
                "movl %edx, -(%ebp);movzbl (%ecx), %ebx;movl %ecx, -(%ebp);movzwl , %ecx;leal (,%ebx,), %ebx": 1,
                "movzwl , %ecx;leal (,%ebx,), %ebx;addl $, %ecx;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl %edx, -(%ebp);movl $, -(%ebp);movzwl (%esi), %ebx": 1,
                "leal -(%ebp), %eax;addl $, %ebx;pushl %eax;movl %ebx, -(%ebp);movl %esi, -(%ebp)": 1,
                "leal -(%ebp), %edi;stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);calll - <PsReferencePrimaryToken>;movl %eax, %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <SeDeassignSecurity+>;testl %eax, %eax": 1,
                "pushl $;popl %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx;movl %esi, -(%ebp);movzwl , %esi": 1,
                "jmp  <SeAuditHardLinkCreation+>;movl (%ecx), %esi;movl %esi, -(%ebp);movl (%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <SeAuditHardLinkCreation+>;movw %si, (%eax);movl (%edi), %eax;movw %si, (%eax)": 1,
                "movw %si, (%eax);movl (%edi), %eax;leal (%eax), %ecx;movl %ecx, (%eax);testw %si, %si": 1,
                "je  <SeAuditHardLinkCreation+>;movl %ebx, %ecx;movl -(%ebp), %esi;movl (%edi), %eax;movl (%eax), %edi": 1,
                "testl %eax, %eax;jne  <SePrivilegeObjectAuditAlarm+>;movl (%esi), %eax;movl (%eax), %eax;pushl (%eax)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%esi);pushl (%esi);pushl (%ebp)": 1,
                "movl (%esi), %edi;je  <SePrivilegeObjectAuditAlarm+>;cmpb %al, (%esi);je  <SePrivilegeObjectAuditAlarm+>;pushl $": 1,
                "pushl %eax;pushl $;calll - <PsGetCurrentProcessId>;pushl %eax;pushl $": 1,
                "leal (%esi), %eax;pushl %esi;pushl (%esi);pushl (%esi);pushl (%esi)": 1,
                "pushl (%eax);pushl (%ebp);pushl $;calll - <SeAuditHardLinkCreation+>;leal -(%ebp), %eax": 2,
                "pushl %edi;movl (%ebp), %edi;movb %bl, (%edi);movb %bl, (%eax);movb %bl, (%ebp)": 1,
                "movl (%ebp), %eax;cmpl %ebx, %eax;je  <SeDeleteObjectAuditAlarm+>;movzwl (%eax), %ecx;cmpl %ebx, %ecx": 1,
                "movl %ebx, (%ebp);leal (%eax), %esi;jbe  <SeDeleteObjectAuditAlarm+>;cmpb %bl, (%edi);je  <SeDeleteObjectAuditAlarm+>": 1,
                "movb (%esi), %al;cmpb $, %al;jne  <SeDeleteObjectAuditAlarm+>;pushl %ebx;leal (%esi), %eax": 1,
                "je  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %ecx;testl %ecx, (%esi);movb (%esi), %al;je  <SeDeleteObjectAuditAlarm+>": 1,
                "jns  <SeDeleteObjectAuditAlarm+>;cmpb %bl, (%ebp);jne  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "jb - <SeDeleteObjectAuditAlarm+>;popl %esi;popl %edi;popl %ebx;leave": 1,
                "pushl %edi;leal (%eax,%eax,), %edi;movl (%ebp), %eax;leal (%ecx,%ecx,), %ebx;leal (%eax,%edi,), %edi": 1,
                "jl  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %ebx;movb $, (%ebx);orb $, (%eax);incl %ecx": 1,
                "movl (%ebp), %ebx;movb $, (%ebx);orb $, (%eax);incl %ecx;addl $, %eax": 1,
                "orl (%ebp), %ecx;pushl %ebx;pushl %esi;xorl %ebx, %ebx;testl %ecx, (%ebp)": 1,
                "addl $, %esi;cmpl %ecx, %eax;movl %ecx, -(%ebp);jbe  <SeDeleteObjectAuditAlarm+>;pushl %ebx": 1,
                "pushl %edi;movl (%ebp), %eax;cmpb $, (%eax);jne  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %eax": 1,
                "cmpl %eax, (%ecx);jl  <SeDeleteObjectAuditAlarm+>;testb $, %bl;je  <SeDeleteObjectAuditAlarm+>;movl (%ebp), %ecx": 1,
                "pushl %edi;pushl -(%ebp);calll - <SeDeleteObjectAuditAlarm+>;incl %ebx;cmpl (%ebp), %ebx": 1,
                "pushl -(%ebp);calll - <SeDeleteObjectAuditAlarm+>;incl %ebx;cmpl (%ebp), %ebx;jb - <SeDeleteObjectAuditAlarm+>": 1,
                "movl %ecx, %edi;negl %edi;sbbl %edi, %edi;shrb $, %bl;andl $, %eax": 1,
                "je  <SeDeleteObjectAuditAlarm+>;addl $, %ecx;movl (%ecx), %eax;testl %eax, %eax;jne - <SeDeleteObjectAuditAlarm+>": 1,
                "jmp  <SeDeleteObjectAuditAlarm+>;incl -(%ebp);addl $, %edx;decl (%ebp);jne - <SeDeleteObjectAuditAlarm+>": 1,
                "jmp  <SeDeleteObjectAuditAlarm+>;xorb %al, %al;popl %edi;leave;retl $": 1,
                "testb $, %cl;je  <SeAuditingFileOrGlobalEvents+>;testb %ch, %ch;jns  <SeAuditingFileOrGlobalEvents+>;movl (%eax), %ecx": 1,
                "cmpb %al, ;movb (%ebp), %cl;je  <SeAuditingFileEvents+>;cmpb %al, %cl;jne  <SeAuditingFileEvents+>": 1,
                "pushl $;calll - <RtlUnwind+>;testb %al, %al;jne  <SeAuditingFileEventsWithContext+>;pushl (%ebp)": 1,
                "xorl %eax, %eax;jmp  <SeAuditingFileEventsWithContext+>;xorl %eax, %eax;incl %eax;popl %ebx": 1,
                "je  <SeAuditingHardLinkEventsWithContext+>;testb %ch, %ch;jns  <SeAuditingHardLinkEventsWithContext+>;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <SeAuditingHardLinkEventsWithContext+>;addl %ecx, %eax;jmp  <SeAuditingHardLinkEventsWithContext+>": 1,
                "pushl (%ebp);sete %al;pushl %eax;pushl (%ebp);pushl $": 2,
                "pushl (%ebp);pushl $;calll - <RtlUnwind+>;testb %al, %al;je  <SeAuditingHardLinkEventsWithContext+>": 3,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %ecx;andl $, -(%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %ecx;andl $, -(%ebp);pushl %esi": 1,
                "pushl $;calll - <SePrivilegeObjectAuditAlarm+>;movb (%ebp), %al;popl %esi;leave": 1,
                "movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <SeAuditHardLinkCreation+>": 3,
                "movl %esi, -(%ebp);andl $, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax": 2,
                "jb  <SeAuditingHardLinkEventsWithContext+>;movl %ebx, (%eax);movl (%esi), %ebx;movl %ebx, -(%ebp);movl , %eax": 2,
                "movl (%esi), %ebx;movl %ebx, -(%ebp);movl , %eax;negl %eax;xorl %edx, %edx": 2,
                "pushl $;popl %ecx;divl %ecx;cmpl %eax, %ebx;jb  <SeAuditingHardLinkEventsWithContext+>": 2,
                "jb  <SeAuditingHardLinkEventsWithContext+>;movl $, -(%ebp);jmp  <SeAuditingHardLinkEventsWithContext+>;leal -(%ebx,%ebx,), %edi;leal (,%edi,), %edi": 2,
                "movl $, -(%ebp);jmp  <SeAuditingHardLinkEventsWithContext+>;leal -(%ebx,%ebx,), %edi;leal (,%edi,), %edi;movl %edi, -(%ebp)": 2,
                "movl %edi, %ecx;movl %eax, %edi;movl %ecx, %edx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 3,
                "calll - <ExFreePoolWithTag>;cmpl %edi, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>;pushl -(%ebp);calll  <SeFreePrivileges>": 2,
                "calll - <ObfDereferenceObject>;movl %esi, %eax;jmp  <SeAuditingHardLinkEventsWithContext+>;pushl (%ebp);pushl -(%ebp)": 2,
                "pushl (%ebp);pushl -(%ebp);calll - <SeDeassignSecurity+>;cmpl %edi, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>": 1,
                "calll  <SeFreePrivileges>;leal -(%ebp), %eax;pushl %eax;calll  <SeReleaseSubjectContext>;movl -(%ebp), %ecx": 1,
                "jge  <SeAuditingHardLinkEventsWithContext+>;cmpl %edi, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>;pushl -(%ebp);calll  <SeFreePrivileges>": 1,
                "jmp  <SeAuditingHardLinkEventsWithContext+>;pushl (%ebp);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <SeDeassignSecurity+>;cmpl %edi, -(%ebp)": 1,
                "calll  <SeCaptureSubjectContext>;cmpl %esi, (%ebp);jne  <SeAuditingHardLinkEventsWithContext+>;movl $, -(%ebp);jmp  <SeAuditingHardLinkEventsWithContext+>": 1,
                "pushl (%ebp);calll  <ProbeForWrite>;jmp  <SeAuditingHardLinkEventsWithContext+>;movl (%ebp), %ecx;movl , %eax": 1,
                "pushl (%ebp);calll  <SeCaptureSecurityDescriptor>;movl %eax, %ebx;cmpl %esi, %ebx;jge  <SeAuditingHardLinkEventsWithContext+>": 1,
                "pushl (%ebp);calll  <SeCaptureSecurityDescriptor+>;movl %eax, %ebx;cmpl %esi, %ebx;jge  <SeAuditingHardLinkEventsWithContext+>": 1,
                "subl %esi, %ecx;movl %edi, %edx;movl -(%ebp), %ebx;movl %ebx, (%ecx,%eax);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ebx;movl %ebx, (%ecx,%eax);movl -(%ebp), %ebx;movl %ebx, (%eax);addl $, %eax": 1,
                "orb $, -(%ebp);jmp  <SeAuditingHardLinkEventsWithContext+>;movl (%ebp), %eax;andl $, %eax;orl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);testl %ebx, %ebx;jne  <SeAuditingHardLinkEventsWithContext+>;movl $, %ebx;leal -(%ebp), %eax": 1,
                "leal (%ebx,%edi,), %esi;jmp  <SeAuditingHardLinkEventsWithContext+>;leal -(%ebp), %ebx;movl %ebx, -(%ebp);leal -(%ebp), %esi": 1,
                "movl (%eax), %eax;pushl (%eax);pushl -(%ebp);pushl -(%ebp);leal (%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlUnwind+>;movl %fs:, %eax;movl (%ebx), %ecx": 1,
                "movb (%ebp), %cl;negb %cl;sbbl %ecx, %ecx;andl %ebx, %ecx;pushl %ecx": 1,
                "movl -(%ebp), %eax;shll $, %eax;movl (%eax,%esi), %ecx;movl (%ebp), %edx;movl %ecx, (%eax,%edx)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);jmp  <SeAuditingHardLinkEventsWithContext+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %esp;orl $-, -(%ebp);xorl %esi, %esi;jmp  <SeAuditingHardLinkEventsWithContext+>": 1,
                "movl $, %ebx;jmp  <SeAuditingHardLinkEventsWithContext+>;movl $, %ebx;cmpb $, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>": 1,
                "pushl %esi;pushl -(%ebp);pushl -(%ebp);calll  <SeReleaseSecurityDescriptor>;cmpl %esi, -(%ebp)": 2,
                "cmpl %esi, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>;pushl $;pushl -(%ebp);pushl -(%ebp)": 1,
                "je  <SeAuditingHardLinkEventsWithContext+>;pushl $;pushl -(%ebp);pushl -(%ebp);calll  <SeCaptureSecurityDescriptor+>": 1,
                "calll - <SeQueryInformationToken+>;cmpb $, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>;cmpl %esi, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>": 1,
                "cmpb $, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>;cmpl %esi, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>;pushl %esi": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);orl $-, -(%ebp);movl (%ebp), %edi": 1,
                "pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %esi, -(%ebp);je  <SeAuditingHardLinkEventsWithContext+>": 1,
                "pushl %ecx;pushl (%ebp);movl (%ebp), %ecx;orl (%ebp), %ecx;pushl %ecx": 1,
                "movb %bl, (%edi);orl $-, -(%ebp);xorl %eax, %eax;jmp  <SeAuditingHardLinkEventsWithContext+>;movl -(%ebp), %eax": 1,
                "pushl $;movzbl (%esi), %eax;leal (,%eax,), %eax;pushl %eax;pushl $": 2,
                "movl %eax, %edi;movl %edi, -(%ebp);cmpl %ebx, %edi;jne  <SeAuditingHardLinkEventsWithContext+>;movl $, %esi": 2,
                "pushl (%ebp);pushl -(%ebp);calll - <SeAuditHardLinkCreation+>;xorl %esi, %esi;jmp  <SeAuditingHardLinkEventsWithContext+>": 1,
                "movl $, %esi;leal -(%ebp), %eax;pushl %eax;calll  <SeReleaseSubjectContext>;movl %esi, %eax": 1,
                "pushl %eax;calll  <SeReleaseSubjectContext>;orl $-, -(%ebp);movl -(%ebp), %eax;calll - <wctomb+>": 1,
                "movl %ecx, (%ebp);je  <SeOpenObjectAuditAlarm+>;movl %eax, %edi;movl %edi, (%ebp);jmp  <SeOpenObjectAuditAlarm+>": 1,
                "je  <SeOpenObjectAuditAlarm+>;movl (%esi), %ebx;orl (%esi), %ebx;cmpb $, (%ebp);pushl -(%ebp)": 1,
                "pushl (%ebp);pushl $;calll - <RtlUnwind+>;testb %al, %al;je  <SeOpenObjectAuditAlarm+>": 1,
                "testb $, %al;je  <SeOpenObjectAuditAlarm+>;testb %ah, %ah;movl (%edi), %eax;jns  <SeOpenObjectAuditAlarm+>": 1,
                "pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %ebx": 1,
                "cmpb $, -(%ebp);je  <SeOpenObjectAuditAlarm+>;cmpb $, (%ebp);movl (%ebp), %eax;movb $, (%eax)": 1,
                "movl (%ebp), %eax;cmpl %ebx, %eax;movl (%ebp), %edi;movb $, (%esi);jne  <SeOpenObjectAuditAlarm+>": 1,
                "je  <SeOpenObjectAuditAlarm+>;movl %eax, -(%ebp);cmpb $, (%ebp);jne  <SeOpenObjectAuditAlarm+>;movl (%ebp), %eax": 1,
                "pushl (%eax);movl -(%ebp), %eax;pushl %esi;pushl (%esi);pushl (%esi)": 1,
                "pushl (%esi);pushl (%esi);pushl (%eax);pushl -(%ebp);pushl -(%ebp)": 3,
                "pushl %eax;calll - <SeDeleteObjectAuditAlarm+>;testb %al, %al;je  <SeOpenObjectAuditAlarm+>;movb $, -(%ebp)": 1,
                "jmp  <SeOpenObjectForDeleteAuditAlarm+>;movl (%esi), %eax;movl %eax, -(%ebp);movl %eax, %edi;movl (%edi), %eax": 1,
                "movw (%eax), %cx;testb $, %cl;je  <SeOpenObjectForDeleteAuditAlarm+>;testb %ch, %ch;jns  <SeOpenObjectForDeleteAuditAlarm+>": 1,
                "jmp  <SeOpenObjectForDeleteAuditAlarm+>;addl %ecx, %eax;jmp  <SeOpenObjectForDeleteAuditAlarm+>;movl (%eax), %eax;leal -(%ebp), %ecx": 1,
                "jne  <SeOpenObjectForDeleteAuditAlarm+>;cmpb %bl, -(%ebp);je  <SeOpenObjectForDeleteAuditAlarm+>;movl (%ebp), %eax;cmpl %ebx, %eax": 1,
                "cmpb %bl, -(%ebp);je  <SeOpenObjectForDeleteAuditAlarm+>;movl (%ebp), %eax;cmpl %ebx, %eax;movl (%ebp), %edi": 1,
                "pushl $;calll - <SeAuditHardLinkCreation+>;jmp  <SeOpenObjectForDeleteAuditAlarm+>;pushl (%esi);pushl $": 1,
                "pushl -(%ebp);pushl %ebx;pushl $;calll - <SeDeassignSecurity+>;cmpl %ebx, -(%ebp)": 1,
                "je  <SeOpenObjectForDeleteAuditAlarm+>;movl -(%ebp), %eax;movw (%eax), %cx;movw %cx, (%esi);pushl %eax": 1,
                "pushl (%ebp);pushl %edi;pushl (%ebp);calll - <SeAuditHardLinkCreation+>;popl %edi": 1,
                "cmpl %esi, %ebx;jne  <SeCaptureSecurityDescriptor+>;movl (%ebp), %eax;movl %esi, (%eax);jmp  <SeCaptureSecurityDescriptor+>": 1,
                "cmpb $, (%ebp);jne  <SeCaptureSecurityDescriptor+>;cmpb $, (%ebp);jne  <SeCaptureSecurityDescriptor+>;movl (%ebp), %eax": 3,
                "rep  movsl (%esi), %es:(%edi);testb $-, -(%ebp);jne  <SeCaptureSecurityDescriptor+>;cmpl $, -(%ebp);je  <SeCaptureSecurityDescriptor+>": 1,
                "je  <SeCaptureSecurityDescriptor+>;calll  <ExRaiseDatatypeMisalignment>;orl $-, -(%ebp);jmp  <SeCaptureSecurityDescriptor+>;movl -(%ebp), %eax": 1,
                "retl;movl -(%ebp), %esp;movl -(%ebp), %esi;jmp  <SeCaptureSecurityDescriptor+>;pushl $": 1,
                "xorl %eax, %eax;incl %eax;cmpb %al, -(%ebp);je  <SeCaptureSecurityDescriptor+>;movl $, %eax": 1,
                "andw $, %ax;movw %ax, -(%ebp);orl $-, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <SeCaptureSecurityDescriptor+>;testl %ebx, %ebx;je  <SeCaptureSecurityDescriptor+>;cmpb $, (%ebp)": 1,
                "jmp  <SeCaptureSecurityDescriptor+>;movzwl (%eax), %esi;movl %esi, -(%ebp);testl %esi, %esi;je  <SeCaptureSecurityDescriptor+>": 1,
                "je  <SeCaptureSecurityDescriptor+>;calll  <ExRaiseDatatypeMisalignment>;leal (%esi,%ebx), %eax;cmpl %ebx, %eax;jb  <SeCaptureSecurityDescriptor+>": 2,
                "jbe  <SeCaptureSecurityDescriptor+>;movl $, %eax;jmp  <SeCaptureSecurityDescriptor+>;andl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);incl %eax;movl , %ecx;cmpl %ecx, %eax;jb  <SeCaptureSecurityDescriptor+>": 2,
                "leal (%esi), %eax;andl $-, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;testl %eax, %eax": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);addl $, %esi;andl $-, %esi;movl %esi, -(%ebp)": 1,
                "je  <SeCaptureSecurityDescriptor+>;movl -(%ebp), %esi;testl %esi, %esi;je  <SeCaptureSecurityDescriptor+>;movl $, -(%ebp)": 2,
                "je  <SeCaptureSecurityDescriptor+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl %eax, %edi;movl %ecx, %eax": 2,
                "pushl -(%ebp);calll  <SeTokenIsWriteRestricted+>;testb %al, %al;je - <SeCaptureSecurityDescriptor+>;movl -(%ebp), %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movb -(%ebp), %cl;movb %cl, (%eax);orl $-, -(%ebp)": 2,
                "je  <SeCaptureSecurityDescriptor+>;pushl -(%ebp);calll - <RtlValidSid>;testb %al, %al;jne  <SeCaptureSecurityDescriptor+>": 2,
                "movl $, %esi;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>;jmp  <SeCaptureSecurityDescriptor+>": 1,
                "pushl -(%ebp);calll - <RtlValidSid>;testb %al, %al;jne  <SeCaptureSecurityDescriptor+>;pushl $": 1,
                "movl -(%ebp), %eax;subl %ebx, %eax;movl %eax, (%ebx);jmp  <SeCaptureSecurityDescriptor+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %esp;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "jne  <SeCaptureSecurityDescriptor+>;movl $, %eax;jmp  <SeCaptureSecurityDescriptor+>;pushl %ebx;pushl %edi": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl (%esi), %ecx;movl %eax, (%ecx);movl (%esi), %eax": 2,
                "testl %esi, %esi;je  <SeCaptureSecurityDescriptor+>;movl (%esi), %eax;testl %eax, %eax;je  <SeCaptureSecurityDescriptor+>": 1,
                "leal (%esi), %ebx;movl (%ebx), %edx;pushl %edi;xorl %edi, %edi;cmpl %edi, %edx": 1,
                "movl (%ebx), %edx;pushl %edi;xorl %edi, %edi;cmpl %edi, %edx;movl %edx, -(%ebp)": 1,
                "je  <SeCaptureSecurityDescriptor+>;testb $, %dl;je  <SeCaptureSecurityDescriptor+>;calll  <ExRaiseDatatypeMisalignment>;movl -(%ebp), %edx": 1,
                "cmpl %eax, %edx;jb  <SeCaptureSecurityDescriptor+>;movl %edi, (%eax);movl , %eax;pushl $": 1,
                "movl %edx, %esi;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);cmpl $, -(%ebp);jne  <SeCaptureSecurityDescriptor+>": 1,
                "movl (%ebp), %esi;xorl %edi, %edi;cmpl %edi, -(%ebp);je  <SeCaptureSecurityDescriptor+>;testb $, -(%ebp)": 1,
                "pushl $;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;jne  <SeCaptureSecurityDescriptor+>": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;pushl (%esi);calll - <SeCaptureSecurityDescriptor+>;popl %esi": 1,
                "calll - <SeCaptureSecurityDescriptor+>;popl %esi;popl %ebp;retl $;int": 1,
                "movl , %eax;cmpl %eax, %ebx;jb  <SeCaptureSecurityDescriptor+>;movl %edi, (%eax);movl (%ebx), %ebx": 1,
                "movl %eax, -(%ebp);pushl $;popl %ecx;cmpl %ecx, %eax;jne  <SeCaptureSecurityDescriptor+>": 1,
                "movl (%ebp), %eax;movl %eax, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "movl $, (%eax);cmpl $, (%eax);jne  <SeCaptureSecurityDescriptor+>;cmpl $, (%eax);je - <SeCaptureSecurityDescriptor+>": 1,
                "jne  <SeCaptureSecurityDescriptor+>;cmpl $, (%eax);je - <SeCaptureSecurityDescriptor+>;movb $, -(%ebp);pushl %eax": 1,
                "cmpl $, (%eax);je - <SeCaptureSecurityDescriptor+>;movb $, -(%ebp);pushl %eax;calll - <SeCaptureSecurityDescriptor+>": 1,
                "rep  movsl (%esi), %es:(%edi);xorl %eax, %eax;calll - <wctomb+>;retl $;int": 1,
                "pushl $;calll - <wctomb+>;cmpb $, (%ebp);jne  <SeCaptureSecurityDescriptor+>;cmpb $, (%ebp)": 2,
                "leal (%ebx), %ecx;movl , %eax;cmpl %eax, %ecx;jb  <SeCaptureSecurityDescriptor+>;movzbl (%eax), %eax": 1,
                "movzbl (%eax), %eax;jmp  <SeCaptureSecurityDescriptor+>;movzbl (%ecx), %eax;movl %eax, -(%ebp);pushl %eax": 1,
                "calll - <ExFreePoolWithTag>;movl %esi, (%ebx);movl $, %eax;jmp  <SeCaptureSecurityDescriptor+>;pushl $": 2,
                "movl $, %eax;jmp  <SeCaptureSecurityDescriptor+>;pushl $;pushl %esi;pushl (%ebp)": 2,
                "je  <SeCaptureSecurityDescriptor+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax;leal (%esi,%ebx), %ecx;cmpl %ebx, %ecx": 1,
                "cmpb %bl, (%ebp);jne  <SeCaptureSecurityDescriptor+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "shll $, %esi;leal (%esi), %eax;andl $-, %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl (%ebp), %ecx;leal (%esi,%ecx), %eax;cmpl %ecx, %eax;jb  <SeCaptureSecurityDescriptor+>;cmpl , %eax": 1,
                "cmpl (%ebp), %esi;jbe  <SeCaptureSecurityDescriptor+>;movl $, %eax;jmp  <SeCaptureSecurityDescriptor+>;movl -(%ebp), %eax": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);xorl %eax, %eax": 2,
                "pushl (%ebp);calll - <ExAllocatePoolWithTag>;movl (%ebp), %edx;movl %eax, (%edx);cmpl %ebx, %eax": 1,
                "jne  <SeCaptureSecurityDescriptor+>;pushl %ebx;movl (%ebp), %eax;pushl (%eax);calll - <ExFreePoolWithTag>": 1,
                "je  <SeReleaseSecurityDescriptor+>;cmpb $, (%ebp);jne  <SeReleaseSecurityDescriptor+>;cmpl %eax, (%ebp);je  <SeReleaseSecurityDescriptor+>": 1,
                "movl (%ebp), %eax;jmp  <SeReleaseSecurityDescriptor+>;cmpl $, %eax;jbe  <SeReleaseSecurityDescriptor+>;movl $, %eax": 1,
                "testl %edi, %edi;je  <SeReleaseSecurityDescriptor+>;andl $, -(%ebp);testl %esi, %esi;je  <SeReleaseSecurityDescriptor+>": 1,
                "cmpl $, %ecx;jbe  <SeReleaseSecurityDescriptor+>;movl $, -(%ebp);orl $-, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl %eax, (%esi);pushl %ecx;calll - <RtlLengthRequiredSid>;movl %eax, (%esi);testl %eax, %eax": 1,
                "jb  <SeReleaseSecurityDescriptor+>;addl %eax, %ecx;cmpl , %ecx;jbe  <SeReleaseSecurityDescriptor+>;calll  <ExRaiseAccessViolation>": 1,
                "addl %eax, %ecx;cmpl , %ecx;jbe  <SeReleaseSecurityDescriptor+>;calll  <ExRaiseAccessViolation>;movl (%esi), %eax": 1,
                "cmpl (%ebp), %esi;jb - <SeReleaseSecurityDescriptor+>;movl (%ebp), %eax;movl %ebx, (%eax);movl (%ebp), %ecx": 1,
                "calll - <ExFreePoolWithTag>;movl $, %eax;jmp  <SeReleaseSecurityDescriptor+>;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "pushl (%ebp);calll - <ExAllocatePoolWithTag>;movl (%ebp), %ecx;movl %eax, (%ecx);testl %eax, %eax": 1,
                "calll - <ExAllocatePoolWithTag>;movl (%ebp), %ecx;movl %eax, (%ecx);testl %eax, %eax;jne  <SeReleaseSecurityDescriptor+>": 1,
                "jae  <SeReleaseSecurityDescriptor+>;cmpl $, -(%ebp);jne  <SeReleaseSecurityDescriptor+>;movl %ecx, %eax;shll $, %eax": 1,
                "addl %ecx, %eax;movl %eax, -(%ebp);movl (%eax), %ecx;movl (%eax), %esi;movl %ebx, %edi": 1,
                "movl (%eax), %ecx;movl (%eax), %esi;movl %ebx, %edi;movl %ecx, %edx;shrl $, %ecx": 1,
                "incl %eax;retl;movl -(%ebp), %esp;cmpl $, (%ebp);jne  <SeReleaseSecurityDescriptor+>": 1,
                "movl %esi, %eax;jmp  <SeReleaseSecurityDescriptor+>;movl (%eax), %ebx;movl -(%ebp), %ecx;movl (%ebp), %esi": 1,
                "movl %ecx, -(%ebp);cmpl %esi, (%ebp);jbe  <SeReleaseSecurityDescriptor+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <RtlLengthRequiredSid>;addl $, %eax;andl $-, %eax;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %eax;xorl %esi, %esi;cmpb $, (%ebp);je  <SeReleaseSecurityDescriptor+>;pushl %esi": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);xorl %eax, %eax;jmp  <SeReleaseSecurityDescriptor+>;cmpb $, (%ebp)": 1,
                "movl %esi, %edi;cmpl %eax, %edx;sbbl %esi, %esi;andl %edi, %esi;addl $, %esi": 1,
                "sbbl %esi, %esi;andl %edi, %esi;addl $, %esi;movl %esi, -(%ebp);je  <SeReleaseSecurityDescriptor+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <SeReleaseSecurityDescriptor+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "testl %eax, %eax;je  <SeReleaseSecurityDescriptor+>;cmpl (%ebp), %esi;jbe  <SeReleaseSecurityDescriptor+>;movl $, %eax": 1,
                "testl $, (%eax);jne  <SeReleaseSecurityDescriptor+>;cmpl $, (%eax);ja  <SeReleaseSecurityDescriptor+>;incl %edx": 1,
                "jne  <SeReleaseSecurityDescriptor+>;cmpl $, (%eax);ja  <SeReleaseSecurityDescriptor+>;incl %edx;addl $, %eax": 1,
                "incl %edx;addl $, %eax;cmpl -(%ebp), %edx;jb - <SeReleaseSecurityDescriptor+>;jmp - <SeReleaseSecurityDescriptor+>": 1,
                "cmpl %esi, (%ebp);jne  <SeReleaseSecurityDescriptor+>;pushl %esi;pushl %ecx;calll - <ExFreePoolWithTag>": 1,
                "movl %edx, (%esi);cmpb $, (%eax);je  <SeReleaseSecurityDescriptor+>;movl $, %eax;jmp  <SeReleaseSecurityDescriptor+>": 1,
                "testl %ecx, %ecx;je - <SeReleaseSecurityDescriptor+>;addl %ecx, %eax;jmp  <SeReleaseSecurityDescriptor+>;movl (%eax), %eax": 1,
                "testl %edx, %edx;popl %edi;popl %ebx;je  <SeReleaseSecurityDescriptor+>;movzbl (%edx), %ecx": 1,
                "movl %ecx, (%esi);testl %eax, %eax;je  <SeReleaseSecurityDescriptor+>;movzwl (%eax), %eax;addl $, %eax": 1,
                "je  <SeValidSecurityDescriptor+>;movl (%esi), %eax;testl %eax, %eax;je  <SeValidSecurityDescriptor+>;movl %eax, %ecx": 2,
                "movl (%esi), %eax;testl %eax, %eax;je  <SeValidSecurityDescriptor+>;movl %eax, %ecx;leal (%ecx), %edx": 4,
                "cmpl %edi, %eax;ja  <SeValidSecurityDescriptor+>;movl %edi, %ecx;subl %eax, %ecx;cmpl $, %ecx": 4,
                "jb  <SeValidSecurityDescriptor+>;addl %esi, %eax;cmpb $, (%eax);jne  <SeValidSecurityDescriptor+>;movb (%eax), %al": 2,
                "cmpl %edx, %ecx;jb  <SeValidSecurityDescriptor+>;pushl %eax;calll - <RtlCreateAcl+>;testb %al, %al": 2,
                "movl %eax, (%esi);pushl %edi;calll - <PsReferencePrimaryToken>;popl %edi;movl %eax, (%esi)": 1,
                "testl %ecx, %ecx;je  <SeReleaseSubjectContext+>;calll - <ObfDereferenceObject>;andl $, (%esi);popl %esi": 1,
                "je  <SeReleaseSubjectContext+>;calll - <ObfDereferenceObject>;andl $, (%esi);popl %esi;popl %ebp": 1,
                "jne  <SeReleaseSubjectContext+>;movl (%ecx), %eax;movl (%eax), %edx;pushl %esi;movl (%eax), %esi": 1,
                "pushl %esi;movl (%eax), %esi;movl (%esi,%edx,), %edx;movl (%ebp), %esi;movl %edx, (%esi)": 1,
                "jne  <SeUnlockSubjectContext+>;xorb %al, %al;jmp  <SeUnlockSubjectContext+>;pushl %esi;movl %fs:, %eax": 1,
                "pushl $;pushl (%esi);calll - <ExAcquireResourceSharedLite>;cmpl $, (%esi);jbe  <SeUnlockSubjectContext+>": 1,
                "testb %bl, %bl;jne  <SeUnlockSubjectContext+>;incl %edi;cmpl (%esi), %edi;jb - <SeUnlockSubjectContext+>": 1,
                "jne  <SeUnlockSubjectContext+>;incl %edi;cmpl (%esi), %edi;jb - <SeUnlockSubjectContext+>;movl (%esi), %ecx": 2,
                "jmp  <SeUnlockSubjectContext+>;cmpb $, (%ebp);movl (%ebp), %eax;pushl %esi;jne  <SeUnlockSubjectContext+>": 1,
                "movl $, %eax;jmp  <SeUnlockSubjectContext+>;cmpb $, (%ebp);jne  <SeUnlockSubjectContext+>;cmpb $, (%edi)": 1,
                "pushl $;movb $, (%esi);pushl (%edi);pushl (%ebp);calll - <NtAdjustPrivilegesToken+>": 1,
                "movb (%ebp), %al;movb %al, (%esi);movl %ebx, (%esi);xorl %eax, %eax;jmp  <SeUnlockSubjectContext+>": 1,
                "pushl %eax;pushl (%ebp);calll - <PsReferenceImpersonationToken+>;pushl (%ebp);movl (%ebp), %esi": 1,
                "pushl %esi;pushl %edi;calll - <SeUnlockSubjectContext+>;movl %eax, %ebx;testl %ebx, %ebx": 2,
                "testl %ebx, %ebx;jl  <SeCreateClientSecurity+>;cmpb $, (%esi);jne  <SeCreateClientSecurity+>;movl %edi, %ecx": 1,
                "movl (%esi), %edi;testl %edi, %edi;jne  <SeCreateClientSecurityFromSubjectContext+>;movl (%esi), %edi;movl %edi, %ecx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <SeImpersonateClientEx+>;movl %fs:, %eax;pushl (%ecx)": 1,
                "pushl %esi;pushl %edi;jne  <SeImpersonateClient+>;cmpb $, (%ebp);movl , %edi": 1,
                "testl %eax, %eax;movl %eax, (%ebx);je  <SeImpersonateClient+>;movl %edi, %ecx;movl %eax, %edi": 1,
                "jae  <SeImpersonateClient+>;popl %esp;addb %dh, (%eax);addb %bl, (%eax,%eax);addb %ch, (%edi)": 1,
                "jmp  <SeImpersonateClient+>;pushl (%eax);pushl (%eax);leal -(%ebp), %eax;pushl $": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl $;pushl %esi;pushl $": 2,
                "pushl -(%ebp);calll - <ZwClose>;movb %bl, -(%ebp);jmp - <SeImpersonateClient+>;xorl %esi, %esi": 1,
                "calll - <ExFreePoolWithTag>;movl $, %eax;jmp  <SeImpersonateClient+>;cmpl $, -(%ebp);jne  <SeImpersonateClient+>": 1,
                "incl %esi;cmpl -(%ebp), %esi;jb - <SeImpersonateClient+>;cmpl %ebx, %edi;je  <SeImpersonateClient+>": 1,
                "calll  <SeTokenIsWriteRestricted+>;testb %al, %al;jne  <SeImpersonateClient+>;pushl %edi;pushl %esi": 1,
                "movl %fs:, %eax;incl (%eax);popl %edi;jne  <SeRegisterLogonSessionTerminatedRoutine+>;leal (%eax), %ecx": 1,
                "jne  <SeRegisterLogonSessionTerminatedRoutine+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <SeRegisterLogonSessionTerminatedRoutine+>;movb $, %cl": 1,
                "je  <SeUnregisterLogonSessionTerminatedRoutine+>;movb $, %cl;movb $, (%eax);calll *;movl $, %eax": 1,
                "testl %esi, %esi;jne - <SeMarkLogonSessionForTerminationNotification+>;jmp  <SeMarkLogonSessionForTerminationNotification+>;orl $, (%esi);movl %ebx, %ecx": 1,
                "calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax);jne  <SeMarkLogonSessionForTerminationNotification+>;leal (%eax), %ecx": 16,
                "pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi;andl $, %eax": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl (%esi), %eax;testl %eax, %eax;je  <SeMarkLogonSessionForTerminationNotification+>;movl (%ebx), %ecx": 1,
                "movl (%ebx), %eax;movl %eax, %ecx;jmp  <SeMarkLogonSessionForTerminationNotification+>;movl (%edi), %edx;cmpl (%ecx), %edx": 1,
                "movl (%edi), %edx;cmpl (%ecx), %edx;jne  <SeMarkLogonSessionForTerminationNotification+>;movl (%edi), %edx;cmpl (%ecx), %edx": 1,
                "leal (%ecx,%eax,), %edi;movl %fs:, %eax;decl (%eax);pushl $;movl $, %ebx": 2,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 2,
                "pushl (%ebp);calll - <SeImpersonateClient+>;movl %edi, %ecx;calll - <NtDuplicateObject+>;testb $, (%esi)": 1,
                "popl %esi;popl %ebx;popl %ebp;jmp - <SeImpersonateClient+>;calll - <ExReleaseResourceLite>": 1,
                "popl %esp;addb %dh, (%eax);addb %bl, (%eax,%eax);addb %ch, (%edi);jae  <SeMarkLogonSessionForTerminationNotification+>": 1,
                "jae  <SeMarkLogonSessionForTerminationNotification+>;popl %esp;addb %ah, ;addb %bh, (%eax);subl $, %eax": 1,
                "addb %ch, (%eax,%eax);addb %ah, (%edx);popal;addb %ch, (%eax,%eax);addb %bh, (%edi)": 1,
                "addb %ch, (%eax,%eax);addb %bh, (%edi);addb %al, (%eax);addb %cl, %ah;int": 1,
                "incl (%esi);movl %edi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;incl (%eax)": 1,
                "movb $, (%eax);calll *;pushl (%ebx);leal -(%ebp), %eax;pushl (%ebx)": 1,
                "jmp  <SeMarkLogonSessionForTerminationNotification+>;movl -(%ebp), %ecx;calll - <NtDuplicateObject+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "decl (%eax);pushl $;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;xorl %eax, %eax": 1,
                "movl (%esi), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl (%esi), %eax;cmpl $, %eax": 1,
                "movl %eax, (%esi);jmp  <SeMarkLogonSessionForTerminationNotification+>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edi, %ecx": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "andl $, -(%ebp);cmpb $, (%ebp);je  <SeMarkLogonSessionForTerminationNotification+>;pushl %ebx;movb (%ebp), %bl": 1,
                "testb $, (%eax);je  <SeMarkLogonSessionForTerminationNotification+>;movl (%eax), %edx;cmpl -(%ecx), %edx;jne  <SeMarkLogonSessionForTerminationNotification+>": 1,
                "decl (%ebp);jne - <SeMarkLogonSessionForTerminationNotification+>;movl (%esi), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "movl (%ebp), %eax;pushl (%eax);pushl (%eax);addl $, %eax;pushl %eax": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl  <SePrivilegeCheck+>;movl -(%ebp), %ecx;cmpl $, (%ecx)": 1,
                "movl (%ebp), %ebx;movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %ebx;jb  <SePrivilegeCheck+>": 1,
                "popl %ecx;divl %ecx;cmpl %eax, %esi;jb  <SePrivilegeCheck+>;movl $, %edi": 1,
                "movl -(%ebp), %esi;testl %edi, %edi;jge  <SePrivilegeCheck+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp  <SePrivilegeCheck+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <SeReleaseSecurityDescriptor>;xorl %eax, %eax;jmp  <SePrivilegeCheck+>;movl -(%ebp), %eax": 1,
                "calll - <SePrivilegeObjectAuditAlarm+>;leal -(%ebp), %eax;pushl %eax;calll - <SeReleaseSubjectContext>;movb (%ebp), %al": 1,
                "cmpl $, (%eax);jne  <SeSetSecurityDescriptorInfoEx+>;movl $, %eax;jmp  <SeSetSecurityDescriptorInfoEx+>;pushl $": 1,
                "jmp  <SeSetSecurityDescriptorInfoEx+>;pushl $;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "movw (%esi), %ax;orw $, %ax;movw %ax, (%esi);xorl %eax, %eax;jmp  <SeQuerySecurityDescriptorInfo+>": 1,
                "addl %eax, %ecx;movl %ecx, -(%ebp);testb $, %dl;jne  <SeQuerySecurityDescriptorInfo+>;xorl %ecx, %ecx": 1,
                "xorl %ecx, %ecx;jmp  <SeQuerySecurityDescriptorInfo+>;movl (%eax), %ecx;cmpw %bx, %si;je  <SeQuerySecurityDescriptorInfo+>": 1,
                "movl %edi, -(%ebp);testb $, %dl;jne  <SeQuerySecurityDescriptorInfo+>;xorl %eax, %eax;jmp  <SeQuerySecurityDescriptorInfo+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %edx;testb $, %dl;je  <SeQuerySecurityDescriptorInfo+>": 1,
                "movl %eax, -(%ebp);testb $, %dl;je  <SeQuerySecurityDescriptorInfo+>;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "je  <SeQuerySecurityDescriptorInfo+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <SeQuerySecurityDescriptorInfo+>;movzbl (%ecx), %ecx": 1,
                "leal (,%ecx,), %ecx;movl %ecx, -(%ebp);addl $, %ecx;andl $-, %ecx;addl %ecx, %eax": 1,
                "addl $, %ecx;andl $-, %ecx;addl %ecx, %eax;movl %eax, -(%ebp);testb $, %dl": 1,
                "je  <SeQuerySecurityDescriptorInfo+>;movzwl (%edi), %ecx;addl $, %ecx;andl $-, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);addl %ecx, %eax;movl %eax, -(%ebp);testb $, %dl;je  <SeQuerySecurityDescriptorInfo+>": 1,
                "je  <SeQuerySecurityDescriptorInfo+>;testl %esi, %esi;je  <SeQuerySecurityDescriptorInfo+>;movzwl (%esi), %ecx;addl $, %ecx": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %edi;calll - <memmove>;addl $, %esp": 2,
                "orl %ecx, %eax;movw %ax, (%esi);movl -(%ebp), %eax;addl $, %eax;andl $-, %eax": 2,
                "movl %edi, %eax;subl %esi, %eax;movl %eax, (%esi);movl %ebx, %eax;andl $, %eax": 1,
                "addl $, %esp;subl %esi, %edi;movl %edi, (%esi);orl $-, -(%ebp);xorl %eax, %eax": 1,
                "pushl $;pushl %ecx;pushl $;calll - <KeBugCheckEx>;pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <ObAssignSecurity+>;jmp  <SeQuerySecurityDescriptorInfo+>": 1,
                "calll - <ObSetSecurityDescriptorInfo>;popl %ebp;retl $;int;int": 1,
                "movb %dl, (%ecx);movl (%ebp), %ecx;movl (%ebp), %edx;movl %edx, (%ecx);popl %esi": 1,
                "jne - <SeTokenImpersonationLevel+>;movl (%ebp), %ebx;testl %ebx, %ebx;jbe  <SeTokenImpersonationLevel+>;movl (%ebp), %eax": 1,
                "addl $, %eax;decl %ecx;jne - <SeTokenImpersonationLevel+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jne  <SeTokenImpersonationLevel+>;movl %esi, -(%ebp);movl (%ebp), %esi;pushl %esi;calll - <SeMarkLogonSessionForTerminationNotification+>": 1,
                "addl %ecx, %edx;movl %edx, -(%ebp);movzbl (%eax), %eax;pushl %eax;calll - <RtlLengthRequiredSid>": 1,
                "andl %ebx, %eax;leal (%ecx,%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movzbl (%eax), %eax": 1,
                "leal (%ecx,%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movzbl (%eax), %eax;pushl %eax": 1,
                "addl $, %ecx;cmpl $, %eax;movl %ecx, -(%ebp);jae  <SeTokenImpersonationLevel+>;leal (%ecx), %eax": 1,
                "addl %ecx, %eax;movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "calll - <ObCreateObject>;testl %eax, %eax;movl (%ebp), %ebx;movl %eax, (%ebp);jge  <SeTokenImpersonationLevel+>": 1,
                "xorl %ecx, %ecx;movl %ecx, (%ebx);movl %ecx, (%ebx);movl (%esi), %eax;movl %eax, (%ebx)": 1,
                "movl %ecx, (%ebx);movl %ecx, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax": 1,
                "movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movl (%ebp), %esi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movb %cl, (%ebx)": 1,
                "movl (%ebp), %eax;subl -(%ebp), %eax;xorl %esi, %esi;cmpl %esi, (%ebp);movl %eax, (%ebx)": 1,
                "pushl (%ebp);pushl %esi;calll - <RtlCopySid+>;pushl $;pushl (%ebp)": 1,
                "movl %esi, (%ebx);calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax;movl %eax, (%ebx);jne  <SeTokenImpersonationLevel+>": 1,
                "movl %eax, (%ebx);jne  <SeTokenImpersonationLevel+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl $, %eax": 1,
                "je  <SeTokenImpersonationLevel+>;movl %edi, (%ebx);movzwl (%eax), %ecx;movl %eax, %esi;movl %ecx, %eax": 1,
                "pushl %eax;calll - <SeCreateAccessState>;cmpl %esi, %eax;movl %eax, (%ebp);jl  <SeTokenImpersonationLevel+>": 1,
                "calll - <SeCreateAccessState>;cmpl %esi, %eax;movl %eax, (%ebp);jl  <SeTokenImpersonationLevel+>;movl %fs:, %eax": 1,
                "calll - <ObfDereferenceObject>;leal -(%ebp), %eax;pushl %eax;calll - <SeDeleteAccessState>;jmp  <SeTokenImpersonationLevel+>": 1,
                "movl (%eax), %eax;cmpl %esi, (%eax);je  <SeTokenImpersonationLevel+>;pushl %esi;pushl %esi": 1,
                "pushl %esi;pushl %edi;movb $, (%eax);movl %fs:, %eax;movl (%eax), %esi": 1,
                "pushl %esi;calll - <PsReferencePrimaryToken>;movl (%eax), %ecx;movl (%eax), %edi;movl (%eax), %ebx": 1,
                "jns  <SeTokenImpersonationLevel+>;outsl (%esi), %dx;addb %ch, (%esi);addb %cl, %gs:(%ecx);outsb (%esi), %dx": 1,
                "incl %ecx;addb %ch, (%esi);outsl (%esi), %dx;addb %ch, (%esi);jns  <SeTokenImpersonationLevel+>": 1,
                "popl %esp;addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <SeTokenImpersonationLevel+>": 1,
                "addb %ch, (%esi);je  <SeTokenImpersonationLevel+>;jb  <SeTokenImpersonationLevel+>;outsl (%esi), %dx;addb %ch, (%eax,%eax)": 1,
                "calll - <PsImpersonateClient>;movl %eax, %esi;cmpl $, (%ebp);je  <SeTokenImpersonationLevel+>;movl (%ebp), %ecx": 1,
                "movl %edi, -(%ebp);jae  <SeTokenImpersonationLevel+>;leal (%eax,%ebx), %ecx;movl (%esi), %edx;cmpl -(%ecx), %edx": 1,
                "movl (%ebp), %ebx;addl $, %ecx;cmpl (%ebp), %edx;jb - <SeTokenImpersonationLevel+>;movl (%ebp), %ecx": 1,
                "movl %edi, -(%ebp);jae  <SeTokenImpersonationLevel+>;leal (%edi,%edi,), %eax;shll $, %eax;leal (%eax,%ebx), %esi": 1,
                "xorl %edi, %edi;testl %eax, %eax;jbe  <SeTokenImpersonationLevel+>;movl (%ebp), %eax;movl %ebx, -(%ebp)": 1,
                "calll - <RtlEqualSid>;testb %al, %al;je  <SeTokenImpersonationLevel+>;movl -(%ebp), %eax;movl (%eax,%esi), %eax": 1,
                "jae  <SeTokenImpersonationLevel+>;movl (%ebp), %eax;pushl (%eax,%ebx,);pushl (%esi);calll - <RtlEqualSid>": 2,
                "pushl (%eax,%ebx,);pushl (%esi);calll - <RtlEqualSid>;testb %al, %al;je  <SeTokenImpersonationLevel+>": 2,
                "cmpl %eax, %ecx;jb  <SeTokenImpersonationLevel+>;movb $, (%eax);movb (%ecx), %al;movb %al, (%ecx)": 1,
                "jmp  <SeTokenImpersonationLevel+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 2,
                "movl %edi, -(%ebp);movl %eax, -(%ebp);cmpl %esi, %eax;jge  <SeTokenImpersonationLevel+>;movl %esi, -(%ebp)": 1,
                "decl (%eax);pushl $;pushl (%edi);calll - <ExAcquireResourceSharedLite>;movl %fs:, %eax": 1,
                "movl (%esi), %eax;pushl (%eax);movl (%edi), %eax;pushl (%eax);calll - <RtlEqualSid>": 1,
                "je  <SeTokenImpersonationLevel+>;calll - <SeTokenIsRestricted>;testb %al, %al;je  <SeTokenImpersonationLevel+>;pushl (%esi)": 1,
                "decl %eax;pushl %eax;movl (%esi), %eax;addl %ebx, %eax;pushl %eax": 1,
                "movb %al, -(%ebp);testb %al, %al;je  <SeTokenImpersonationLevel+>;pushl (%esi);pushl (%esi)": 1,
                "pushl (%edi);pushl (%edi);calll - <SeTokenImpersonationLevel+>;movb %al, -(%ebp);movl (%edi), %ecx": 1,
                "movb $, (%eax);movb $, %cl;calll *;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %ebx;pushl %esi;leal (%eax), %ebx": 1,
                "movl (%ebp), %edi;andl $-, %esi;cmpl $, (%edi);je  <SeTokenIsWriteRestricted+>;movl $, %eax": 1,
                "movl %ebx, (%eax);movl (%ecx), %eax;movl %eax, (%ecx);testb $, %dl;je  <SeTokenIsWriteRestricted+>": 1,
                "cmpl %eax, -(%ebp);jb  <SeTokenIsWriteRestricted+>;movl %ebx, (%eax);cmpl %ebx, -(%ebp);je  <SeTokenIsWriteRestricted+>": 2,
                "movl %ebx, (%eax);orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jne  <SeTokenIsWriteRestricted+>;cmpb %bl, -(%ebp);jne  <SeTokenIsWriteRestricted+>;movl $, %eax;jmp  <SeTokenIsWriteRestricted+>": 1,
                "calll - <RtlCopyLuid>;movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "pushl %esi;pushl %ebx;pushl %ebx;pushl %edi;pushl %ecx": 2,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl %ebx, %eax;je  <SeTokenIsWriteRestricted+>;cmpl %ebx, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);jl  <SeTokenIsWriteRestricted+>;movl (%eax), %eax;movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "jl  <SeTokenIsWriteRestricted+>;movl (%eax), %eax;movl %eax, -(%ebp);cmpl %ebx, %eax;je  <SeTokenIsWriteRestricted+>": 1,
                "calll - <SeCaptureSecurityDescriptor+>;cmpl %ebx, -(%ebp);je  <SeTokenIsWriteRestricted+>;pushl $;pushl -(%ebp)": 8,
                "retl;movl -(%ebp), %eax;movl -(%ebp), %esp;jmp - <SeTokenIsWriteRestricted+>;movl -(%ebp), %eax": 1,
                "shrl $, %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 3,
                "movl (%ebx), %edi;cmpl %esi, %edi;je  <SeTokenIsWriteRestricted+>;movl (%ebx), %ecx;movl %ecx, %eax": 1,
                "movl -(%ebp), %eax;popl %esi;popl %ebx;calll - <KeRaiseUserException+>;leave": 1,
                "incl %ebx;addb %ch, (%edi);insl %dx, %es:(%edi);addb %ch, (%ebp);popal": 1,
                "addb %ch, (%ebp);popal;addb %ch, (%esi);addb %dl, %fs:(%eax);outsl (%esi), %dx": 1,
                "pushl %ebx;pushl %ebx;pushl ;calll - <ZwWaitForSingleObject>;testl %eax, %eax": 1,
                "movw %di, -(%ebp);movw %bx, -(%ebp);calll - <ZwIsProcessInJob+>;testl %eax, %eax;jl  <SeTokenIsWriteRestricted+>": 1,
                "pushl ;calll - <ZwCloseObjectAuditAlarm+>;testl %eax, %eax;jl  <SeTokenIsWriteRestricted+>;pushl $": 1,
                "jl  <SeTokenIsWriteRestricted+>;pushl $;popl %esi;pushl %ebx;pushl $": 1,
                "calll - <ZwCreateSection>;testl %eax, %eax;jl  <SeTokenIsWriteRestricted+>;movl , %eax;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl $": 4,
                "testl %eax, %eax;jge  <SeTokenIsWriteRestricted+>;movl , %eax;cmpl %ebx, %eax;je  <SeTokenIsWriteRestricted+>": 1,
                "je  <SeTokenIsWriteRestricted+>;pushl %eax;calll - <NtClose>;movl %ebx, ;movb -(%ebp), %al": 1,
                "movl %ebx, ;movb -(%ebp), %al;popl %edi;popl %esi;popl %ebx": 1,
                "cmpl $, %eax;je - <SeTokenIsWriteRestricted+>;andb $, -(%ebp);cmpw $, -(%ebp);jne  <SeTokenIsWriteRestricted+>": 1,
                "movl %esi, %ecx;movl %eax, ;setne -(%ebp);calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "incl (%eax);popl %esi;jne  <SeTokenIsWriteRestricted+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 2,
                "je  <SeTokenIsWriteRestricted+>;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;jne  <SeTokenIsWriteRestricted+>": 1,
                "jne  <SeTokenIsWriteRestricted+>;movl $, %eax;jmp  <SeTokenIsWriteRestricted+>;movl (%ebp), %ecx;movl %ecx, %edx": 1,
                "movzbl (%eax), %edx;leal (,%edx,), %edx;pushl %edx;pushl %eax;pushl %ecx": 1,
                "movzbl (%esi), %ecx;leal (,%ecx,), %ecx;movl %ecx, (%ebp);movl %ecx, %ebx;pushl %edi": 1,
                "je  <SeTokenIsWriteRestricted+>;movb $, %cl;movb $, (%eax);calll *;xorl %eax, %eax": 1,
                "movl %edi, -(%ebp);movl (%ebx), %ebx;movl %ebx, -(%ebp);orl $-, -(%ebp);pushl -(%ebp)": 1,
                "pushl ;calll - <SeSinglePrivilegeCheck>;testb %al, %al;je  <SeTokenIsWriteRestricted+>;movl %fs:, %eax": 2,
                "calll - <SeSinglePrivilegeCheck>;testb %al, %al;je  <SeTokenIsWriteRestricted+>;movl %fs:, %eax;decl (%eax)": 2,
                "je  <SeTokenIsWriteRestricted+>;movl %fs:, %eax;decl (%eax);pushl $;pushl (%esi)": 2,
                "jne  <SeTokenIsWriteRestricted+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <SeTokenIsWriteRestricted+>;movb $, (%eax)": 12,
                "cmpl %ecx, (%ecx);je  <SeTokenIsWriteRestricted+>;movb $, (%eax);movb $, %cl;calll *": 12,
                "calll *;jmp  <SeTokenIsWriteRestricted+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;jmp  <SeTokenIsWriteRestricted+>": 1,
                "calll - <ExAcquireResourceSharedLite>;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %edi;movl (%esi), %ecx": 1,
                "jne  <SeTokenIsWriteRestricted+>;movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;movl %edi, %eax;jmp  <SeTokenIsWriteRestricted+>;xorl %edi, %edi": 1,
                "movb $, %cl;calll *;movl %esi, %ecx;calll - <ObfDereferenceObject>;orl %ebx, %edi": 1,
                "orl $-, -(%ebp);jmp  <SeTokenIsWriteRestricted+>;movb $, -(%ebp);cmpl %ecx, (%ebp);jne  <SeTokenIsWriteRestricted+>": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;pushl $": 1,
                "pushl %ecx;pushl $;pushl $;pushl $;pushl $": 1,
                "calll - <SeCaptureSecurityDescriptor+>;jmp  <SeTokenIsWriteRestricted+>;andl $, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;jl - <SeTokenIsWriteRestricted+>;movl %fs:, %eax;decl (%eax);xorl %ebx, %ebx": 1,
                "incl %ebx;pushl %ebx;pushl (%esi);calll - <ExAcquireResourceExclusiveLite>;movl (%esi), %eax": 1,
                "pushl %ebx;pushl (%esi);calll - <ExAcquireResourceExclusiveLite>;movl (%esi), %eax;movzbl (%eax), %eax": 1,
                "cmpl $, -(%ebp);je  <SeTokenIsWriteRestricted+>;pushl %ebx;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl %esi;calll - <SeTokenIsWriteRestricted+>;movl %eax, %edi;testl %edi, %edi;jge  <SeTokenIsWriteRestricted+>": 1,
                "testl %eax, %eax;jl - <SeTokenIsWriteRestricted+>;pushl -(%ebp);pushl %esi;calll - <SeUnlockSubjectContext+>": 1,
                "jl - <SeTokenIsWriteRestricted+>;pushl -(%ebp);pushl %esi;calll - <SeUnlockSubjectContext+>;testb %al, %al": 1,
                "movl $, %ebx;jmp  <SeTokenIsWriteRestricted+>;movl -(%ebp), %eax;movzbl (%eax), %eax;leal (,%eax,), %eax": 1,
                "addl %eax, -(%ebp);movl -(%ebp), %eax;cmpl (%esi), %eax;jbe  <SeTokenIsWriteRestricted+>;movl (%esi), %ecx": 1,
                "movl $, %edi;jmp - <SeTokenIsWriteRestricted+>;xorl %ecx, %ecx;incl %ecx;movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);testl %eax, %eax;jl - <SeTokenIsWriteRestricted+>;xorl %edi, %edi": 1,
                "movl (%esi), %eax;pushl (%eax,%edi,);pushl -(%ebp);calll - <RtlEqualSid>;movb %al, -(%ebp)": 1,
                "andl $, -(%ebp);jmp  <SeTokenIsWriteRestricted+>;movl $, -(%ebp);cmpb $, -(%ebp);je  <SeTokenIsWriteRestricted+>": 1,
                "movl -(%ebp), %eax;jmp - <SeTokenIsWriteRestricted+>;cmpb $, -(%ebp);je  <SeTokenIsWriteRestricted+>;leal (%esi), %eax": 1,
                "addb %al, -(%ebp);xchgl %esp, %eax;pushl %ecx;addb %cl, %ah;int": 1,
                "movl (%ebp), %ecx;movl %eax, -(%ebp);movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx": 2,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);calll - <RtlInitUnicodeString>;leal -(%ebp), %eax": 1,
                "jl  <SeTokenIsWriteRestricted+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "jb  <SeTokenIsWriteRestricted+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %cl, (%eax,%eax);addb %ah, (%ecx)": 2,
                "addb %dh, (%edx);popal;addb %dh, (%ebx);pushl $;addb %al, (%ecx)": 2,
                "leal -(%ebp), %eax;movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp);movl %eax, -(%ebp)": 5,
                "movb $, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "je - <SeTokenIsWriteRestricted+>;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "testl %ecx, %ecx;movl $, -(%ebp);jbe  <SeTokenIsWriteRestricted+>;leal (%ebx), %eax;movl (%eax), %edx": 1,
                "pushl $;leal (%ebp), %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx": 1,
                "calll - <ZwAllocateVirtualMemory>;movl %eax, %edi;cmpl %ebx, %edi;jl  <SeTokenIsWriteRestricted+>;pushl %ebx": 1,
                "jne  <SeTokenIsWriteRestricted+>;movl , %eax;cmpl , %eax;jae  <SeTokenIsWriteRestricted+>;movb %bl, ": 1,
                "cmpl , %eax;jb  <SeTokenIsWriteRestricted+>;cmpb %bl, (%ebp);jne  <SeTokenIsWriteRestricted+>;movb $, ": 1,
                "jb  <SeTokenIsWriteRestricted+>;cmpb %bl, (%ebp);jne  <SeTokenIsWriteRestricted+>;movb $, ;movb %bl, -(%ebp)": 1,
                "movl %eax, ;movl %ebx, ;calll - <ExQueueWorkItem>;movb -(%ebp), %al;popl %esi": 1,
                "pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl , %esi;movl (%esi), %eax;movl %eax, ": 1,
                "pushl %eax;calll - <KeSetEvent>;movl %edi, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "movl , %eax;popl %edi;popl %esi;popl %ebx;retl": 1,
                "movl %eax, %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;je  <SeTokenIsWriteRestricted+>;leal (%esi), %eax": 1,
                "cmpl %ebx, %esi;je  <SeTokenIsWriteRestricted+>;leal (%esi), %eax;movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);jb  <SeTokenIsWriteRestricted+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;calll  <SeTokenIsWriteRestricted+>;movl (%ebp), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %edi;pushl $;leal -(%ebp), %eax": 2,
                "pushl %edi;pushl %esi;calll - <ExFreePoolWithTag>;popl %esi;popl %edi": 1,
                "xorl %ebx, %ebx;cmpb %bl, %al;je  <SeTokenIsWriteRestricted+>;movl %ebx, -(%ebp);movl (%ebp), %esi": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <SeTokenIsWriteRestricted+>;movl (%ebp), %esi;movl (%esi), %ecx": 1,
                "pushl -(%ebp);pushl ;pushl $;pushl %ecx;calll - <ObReferenceObjectByHandle>": 1,
                "addl $, %esi;pushl %eax;pushl %eax;pushl %esi;calll  <ProbeForWrite>": 1,
                "calll - <wctomb+>;movl (%ebp), %esi;cmpl $, %esi;jne  <NtVdmControl+>;pushl (%ebp)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;testb $, (%eax);je  <NtVdmControl+>;cmpl $, %esi": 1,
                "movl (%eax), %eax;xorl %edi, %edi;cmpl %edi, (%eax);jne  <NtVdmControl+>;movl $, %eax": 1,
                "jge  <NtVdmControl+>;xorl %eax, %eax;movl %eax, -(%ebp);jmp  <NtVdmControl+>;movl -(%ebp), %eax": 1,
                "jne  <NtVdmControl+>;cmpl %edi, %eax;je  <NtVdmControl+>;pushl (%ebp);calll  <NtVdmControl+>": 4,
                "movl %ebx, ;movl (%ebp), %esi;leal (%esi), %eax;cmpl %esi, %eax;jb  <NtVdmControl+>": 1,
                "movl (%ebp), %esi;leal (%esi), %eax;cmpl %esi, %eax;jb  <NtVdmControl+>;cmpl , %eax": 6,
                "cmpl %edi, %eax;je  <NtVdmControl+>;movl (%ebp), %esi;leal (%esi), %eax;cmpl %esi, %eax": 4,
                "movw %cx, (%eax);movw (%esi), %cx;movw %cx, (%eax);movw (%esi), %cx;movw %cx, (%eax)": 3,
                "movw $, (%eax);jmp - <NtVdmControl+>;cmpl $, %esi;jne  <NtVdmControl+>;movl %fs:, %eax": 1,
                "movl %fs:, %eax;movl %eax, -(%ebp);movl (%eax), %eax;movl (%eax), %edi;movl %edi, -(%ebp)": 1,
                "jmp  <NtVdmControl+>;pushl %eax;jmp  <NtVdmControl+>;calll - <RtlUnwind+>;jmp  <NtVdmControl+>": 1,
                "testb $, ;jne  <NtVdmControl+>;pushl %ebx;calll - <RtlUnwind+>;jmp  <NtVdmControl+>": 1,
                "xorl %eax, %eax;orl $-, -(%ebp);jmp  <NtVdmControl+>;orl $-, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl (%ebp), %ecx;movzbl (%eax,%ecx), %edx;movl %eax, %ecx;shll $, %ecx;shll %cl, %edx": 1,
                "movzbl (%ecx), %eax;orl $-, -(%ebp);jmp  <NtVdmControl+>;xorl %eax, %eax;incl %eax": 1,
                "andl $, (%edx);movl -(%ebp), %edx;movl %ecx, (%edx);movl -(%ebp), %ecx;movl (%ebp), %edx": 1,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <ExRaiseException>;xorb %al, %al": 1,
                "je  <NtVdmControl+>;movl $, -(%ebp);pushl -(%ebp);pushl (%ebp);calll  <NtVdmControl+>": 1,
                "pushl -(%ebp);pushl (%ebp);calll  <NtVdmControl+>;jmp  <NtVdmControl+>;xorl %eax, %eax": 1,
                "incl %eax;retl;jmp  <NtVdmControl+>;movzbl %cl, %esi;movzbl (%esi), %esi": 1,
                "calll  <NtVdmControl+>;testl %eax, %eax;jge  <NtVdmControl+>;movl (%ebp), %eax;orl $, (%eax)": 1,
                "jmp  <NtVdmControl+>;movl -(%ebp), %eax;leal (%eax), %ecx;movl %ecx, -(%ebp);leal (%eax), %edi": 1,
                "pushl %ecx;calll  <ProbeForWrite>;pushl %esi;pushl $;pushl %edi": 1,
                "movl $, %eax;andl %eax, %ebx;movl (%esi), %ecx;shll $, %ecx;xorl %ecx, %ebx": 1,
                "movl (%esi), %ecx;shll $, %ecx;xorl %ecx, %ebx;addl $, (%esi);andl $-, (%esi)": 1,
                "pushl -(%ebp);pushl %ebx;calll - <NtQueryInformationFile>;testl %eax, %eax;jl  <NtVdmControl+>": 1,
                "calll *;orl $, (%esi);jmp  <NtVdmControl+>;pushl %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl %ecx;pushl %ecx;pushl %ebx;calll - <NtWriteFile>": 1,
                "jne - <NtVdmControl+>;cmpl $, %edi;jne - <NtVdmControl+>;andw $, (%esi);jmp  <NtVdmControl+>": 1,
                "retl;movl (%ebp), %eax;orl $, (%eax);movl -(%ebp), %esp;orl $-, -(%ebp)": 1,
                "movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;testl %eax, %ebx": 1,
                "calll - <KiDispatchInterrupt+>;testl %ebx, (%esi);je  <NtVdmControl+>;movl (%edi), %eax;movl %eax, (%esi)": 1,
                "movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;orl $-, (%esi)": 1,
                "jmp  <NtVdmControl+>;movb $, %cl;calll *;movb %al, -(%ebp);movl %edi, -(%ebp)": 1,
                "je  <NtVdmControl+>;testl %esi, %edx;jne  <NtVdmControl+>;testb $, %cl;je  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;andb $-, (%eax);movl -(%ebp), %eax;orb $, (%eax);movl -(%ebp), %eax": 1,
                "testl %esi, %edx;jne  <NtVdmControl+>;movl $, %eax;testl %esi, %eax;movl $, %esi": 1,
                "jne  <NtVdmControl+>;movl $, %eax;testl %esi, %eax;movl $, %esi;je  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;movl $, %ecx;lock;andl %ecx, (%esi);movl -(%ebp), %ecx": 1,
                "jne  <NtVdmControl+>;movl $, %esi;movb -(%ebp), %cl;calll *;orl $-, -(%ebp)": 1,
                "orl $-, -(%ebp);movl %esi, %eax;jmp  <NtVdmControl+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %esi, %eax;jmp  <NtVdmControl+>;leal -(%ebp), %ecx;pushl %ecx;addl $, %eax": 1,
                "testb $, %cl;je  <NtVdmControl+>;movl (%ebx), %eax;testl %eax, %esi;jne  <NtVdmControl+>": 2,
                "jne  <NtVdmControl+>;testl $, %eax;je  <NtVdmControl+>;orl $, %eax;jmp  <NtVdmControl+>": 1,
                "movb %dl, (%ecx);movb (%eax), %cl;movb %cl, (%eax);leal (%eax), %ecx;movb (%ecx), %bl": 1,
                "incl %ebx;pushl %esp;decl %esp;popl %edi;pushl %esi": 1,
                "pushl $;calll - <wctomb+>;leal -(%ebp), %eax;pushl %eax;calll - <NtVdmControl+>": 4,
                "calll - <wctomb+>;leal -(%ebp), %eax;pushl %eax;calll - <NtVdmControl+>;movl %eax, %edi": 2,
                "movw (%esi,%eax,), %cx;cmpw %bx, %cx;je  <NtVdmControl+>;cmpb $, (%eax,%esi);jne  <NtVdmControl+>": 1,
                "andl $, -(%ebp);movl -(%ebp), %eax;movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %edi": 1,
                "movl -(%ebp), %ebx;testl %ecx, %ecx;jl  <NtVdmControl+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %esi, (%eax);movl %edi, (%eax);movl %ebx, (%eax)": 1,
                "jmp  <NtVdmControl+>;xorl %ebx, %ebx;incl %ebx;pushl %ebx;pushl $": 1,
                "cmpw $, %di;jae  <NtVdmControl+>;movzwl %di, %ecx;cmpb $, (%ecx,%esi);jne  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;movl $, %eax;movl %eax, -(%ebp);orl $-, -(%ebp);jmp  <NtVdmControl+>": 1,
                "orl $-, -(%ebp);xorl %ebx, %ebx;incl %ebx;cmpl %ebx, -(%ebp);jne  <NtVdmControl+>": 1,
                "andb %ah, (%esi);imull $, (%ebp), %ebp;je  <NtVdmControl+>;jae  <NtVdmControl+>;popal": 1,
                "popal;je  <NtVdmControl+>;jae  <NtVdmControl+>;jb  <NtVdmControl+>;insl %dx, %es:(%edi)": 1,
                "xorb %al, %al;jmp  <NtVdmControl+>;movl -(%ebp), %eax;leal (%eax), %edi;leal (%eax), %edx": 1,
                "movl $, -(%ebp);jmp  <NtVdmControl+>;movzwl (%edi), %ecx;incl %ecx;cmpl %ecx, %eax": 1,
                "incl %ecx;cmpl %ecx, %eax;jne  <NtVdmControl+>;movl $, -(%ebp);movzwl -(%ebp), %esi": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl (%eax), %edx;addl %esi, %edx": 1,
                "movl -(%ebp), %ecx;testb $, (%ecx);jne  <NtVdmControl+>;movl (%eax), %eax;addl %esi, %eax": 1,
                "orl $, %eax;movl %eax, (%ebx);movl (%ebp), %esi;andb $, (%esi);movl (%esi), %eax": 1,
                "movl (%ebp), %esi;andb $, (%esi);movl (%esi), %eax;movzbl (%ebx), %ecx;orl %eax, %ecx": 1,
                "jge  <NtVdmControl+>;pushl %eax;pushl $;calll - <DbgPrint>;popl %ecx": 1,
                "jmp  <NtVdmControl+>;orl $-, -(%ebp);jmp - <NtVdmControl+>;movl -(%ebp), %eax;movl (%eax), %eax": 2,
                "calll - <NtDeviceIoControlFile>;movl %eax, -(%ebp);movl $, -(%ebp);testl %eax, %eax;jl  <NtVdmControl+>": 1,
                "incw (%ecx);cmpw $, (%ecx);jb  <NtVdmControl+>;pushl -(%ebp);calll - <NtVdmControl+>": 1,
                "xorl %ebx, %ebx;jmp  <NtVdmControl+>;movzbl (%eax), %ebx;andl $, (%ebp);movzwl (%eax), %edi": 1,
                "orl $-, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 5,
                "pushl $;calll - <wctomb+>;xorl %ebx, %ebx;movl (%ebp), %edi;movl %ebx, (%edi)": 1,
                "decl (%esi);cmpl %ebx, (%esi);jg  <NtVdmControl+>;notb %dl;andb %dl, (%edi)": 1,
                "cmpl %ebx, (%esi);jg  <NtVdmControl+>;notb %dl;andb %dl, (%edi);movl %ebx, (%esi)": 1,
                "retl;movl -(%ebp), %esp;orl $-, -(%ebp);orl $-, %eax;calll - <wctomb+>": 1,
                "incl %edx;shll %cl, %edx;movl (%ebp), %ecx;movl (%ecx), %eax;pushl %esi": 1,
                "je  <NtVdmControl+>;movl (%ebp), %eax;testb $, (%eax);je  <NtVdmControl+>;pushl $": 1,
                "cmpl , %edi;jb  <NtVdmControl+>;movl , %edi;movl $, (%edi);testb $, (%esi)": 1,
                "jb  <NtVdmControl+>;movl $, (%esi);movw (%eax), %si;movw %si, -(%ebp);incl %eax": 1,
                "incl %eax;retl;movl -(%ebp), %esp;orl $-, -(%ebp);calll - <wctomb+>": 3,
                "movb (%edi), %al;movb %al, -(%ebp);leal (%edi), %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "leal (%ecx), %edx;movw %dx, (%eax);movl (%ebp), %esi;testw %cx, %cx;jne  <NtVdmControl+>": 1,
                "orl $, %eax;movl %eax, -(%ebp);cmpl $-, %eax;je  <NtVdmControl+>;incl %eax": 1,
                "cmpl -(%ebp), %ecx;jb  <NtVdmControl+>;movl $, -(%ebp);movl , %ecx;cmpb $, -(%ebp)": 1,
                "movw (%esi), %dx;movw %dx, (%eax);subl %ecx, %eax;movl %eax, -(%ebp);movl (%esi), %ecx": 1,
                "shll $, %edx;movl (%edi), %ecx;addl %edx, %ecx;movl %ecx, -(%ebp);leal (%edx,%ecx), %edi": 1,
                "movl %edi, (%esi);movl (%ecx), %ecx;movl %ecx, (%esi);orl $-, -(%ebp);andl $, %edx": 1,
                "movl (%ebp), %eax;testl $, %eax;je  <NtVdmControl+>;testb $, ;je  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;testb $, ;jne - <NtVdmControl+>;movl $, %esi;testl %esi, ": 1,
                "jne - <NtVdmControl+>;movl $, %esi;testl %esi, ;jne  <NtVdmControl+>;calll - <RtlUnwind+>": 1,
                "movl (%ecx), %eax;andb $, %al;negb %al;sbbl %eax, %eax;andl $, %eax": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl ;pushl $": 3,
                "pushl $;pushl ;pushl $;pushl %eax;calll - <ObReferenceObjectByHandle>": 4,
                "movl %ebx, (%ecx);orl $-, -(%ebp);jmp  <NtVdmControl+>;xorl %eax, %eax;incl %eax": 1,
                "testl %eax, %ebx;jne  <NtVdmControl+>;testb $, %cl;je  <NtVdmControl+>;movl (%edi), %eax": 2,
                "movl (%esi), %ebx;movl %ebx, -(%ebp);pushl %ebx;pushl %esi;calll - <NtVdmControl+>": 2,
                "movl %ebx, -(%ebp);pushl %ebx;pushl %esi;calll - <NtVdmControl+>;movl %eax, -(%ebp)": 1,
                "xorl %edx, %edx;movb (%ecx), %dl;andl %edx, %eax;movb %al, (%ecx);cmpl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);testb $-, ;je  <NtVdmControl+>;pushl %edi;pushl $": 1,
                "pushl (%esi);calll  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <ExRaiseStatus>;movb , %cl": 1,
                "pushl -(%ebp);calll - <ExRaiseStatus>;movb , %cl;testb $, %cl;je  <NtVdmControl+>": 1,
                "calll - <ExRaiseStatus>;movb , %cl;testb $, %cl;je  <NtVdmControl+>;movl (%edi), %eax": 1,
                "jge  <NtVdmControl+>;pushl %esi;calll - <ExRaiseStatus>;cmpl $, -(%ebp);je  <NtVdmControl+>": 1,
                "arpl %ax, (%eax);popal;addb %ch, (%eax,%eax);addb %ah, (%ebp);insl %dx, %es:(%edi)": 4,
                "pushl $;pushl $;calll - <wctomb+>;movl %fs:, %eax;movl (%eax), %ecx": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl $, %eax": 1,
                "pushl %eax;pushl $-;calll - <ZwFreeVirtualMemory>;cmpl %ebx, %eax;jl - <NtVdmControl+>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jne  <NtVdmControl+>;movl $, %esi;jmp  <NtVdmControl+>": 1,
                "calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax;pushl %edi;movl -(%ebp), %edi": 1,
                "pushl %eax;pushl %edi;movl -(%ebp), %edi;pushl %edi;pushl $": 1,
                "addl %edi, %eax;cmpl $, (%edi);jb  <NtVdmControl+>;cmpl $, (%eax);jb  <NtVdmControl+>": 1,
                "movl -(%ebp), %ecx;cmpl %ebx, %ecx;jne - <NtVdmControl+>;pushl %ebx;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp)": 1,
                "calll - <PsChargeProcessPoolQuota>;testl %eax, %eax;jge  <NtVdmControl+>;movl %eax, %esi;jmp  <NtVdmControl+>": 1,
                "rep  stosl %eax, %es:(%edi);movl $, (%ebx);xorl %edi, %edi;movl %edi, (%ebx);movl %edi, (%ebx)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);pushl $;pushl $;pushl $": 2,
                "pushl %esi;pushl %edi;pushl -(%ebp);calll - <PsReturnPoolQuota>;movl $, %esi": 1,
                "movl -(%ebp), %esi;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>;jmp  <NtVdmControl+>": 1,
                "jb  <NtVdmControl+>;movl %edi, (%eax);movl (%esi), %eax;movl (%eax), %ecx;movl %ecx, (%eax)": 4,
                "movl %ecx, (%eax);movl , %eax;cmpl %eax, (%esi);jb  <NtVdmControl+>;movl %edi, (%eax)": 3,
                "movl , %eax;cmpl %eax, (%esi);jb  <NtVdmControl+>;movl %edi, (%eax);movl (%esi), %esi": 1,
                "movl -(%ebp), %edx;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <NtVdmControl+>;pushl $": 1,
                "movl %eax, (%edi);movl -(%ebp), %eax;jmp  <NtVdmControl+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "incl %eax;retl;movl -(%ebp), %esp;pushl $;xorl %edi, %edi": 1,
                "pushl -(%ebp);calll - <PsReturnPoolQuota>;pushl $;pushl $;pushl -(%ebp)": 1,
                "calll - <ZwClose>;cmpl %ebx, %esi;movl -(%ebp), %eax;jge  <NtVdmControl+>;movl %esi, %eax": 1,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx": 2,
                "orl $-, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl $;pushl ": 3,
                "pushl %eax;pushl $;pushl ;pushl $;pushl -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %fs:, %eax;movl %eax, (%esi);movl %edi, (%esi);movl %edx, (%esi)": 1,
                "pushl %eax;calll - <IoFreeMdl>;movl -(%ebp), %esi;pushl -(%ebp);calll - <IoFreeIrp>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;orl $-, -(%ebp);movl %esi, %eax;jmp  <NtVdmControl+>": 1,
                "movl (%esi), %edx;addl $, %edx;movl (%edx), %eax;movl %eax, (%ecx);movl %edx, (%ecx)": 1,
                "movl %ecx, (%eax);movl %ecx, (%edx);movb -(%ebp), %cl;calll *;movl %esi, %edx": 1,
                "pushl %ebx;calll - <KeWaitForSingleObject>;movl %eax, -(%ebp);cmpl $, -(%ebp);jl  <NtVdmControl+>": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);testl %eax, %eax;jge  <NtVdmControl+>;cmpl $, %eax": 1,
                "je  <NtVdmControl+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;orl $-, -(%ebp)": 1,
                "pushl $;pushl (%ebp);calll  <IoWMISetNotificationCallback+>;popl %ebp;retl $": 1,
                "calll  <IoWMISetNotificationCallback+>;movl %eax, %edi;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "jmp  <WmiStopTrace+>;cmpl , %esi;jne  <WmiStopTrace+>;orl $-, ;jmp  <WmiStopTrace+>": 1,
                "je - <WmiStopTrace+>;cmpl , %esi;je  <WmiStopTrace+>;cmpl , %esi;je  <WmiStopTrace+>": 1,
                "cmpl , %esi;je  <WmiStopTrace+>;cmpl , %esi;je  <WmiStopTrace+>;leal -(%ebp), %ecx": 1,
                "pushl %ebx;pushl %ebx;addl $, %eax;pushl %eax;movl %ebx, (%esi)": 1,
                "movl (%ecx), %edi;movl %edi, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%esi), %edx": 1,
                "movl %ecx, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);pushl %ebx": 1,
                "cmpl %ebx, (%ecx);je  <WmiUpdateTrace+>;orl %eax, -(%ebp);movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "cmpl %ebx, %esi;jge  <WmiUpdateTrace+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax;je  <WmiUpdateTrace+>;andl $, -(%ebp)": 1,
                "cmpl %ebx, %esi;jl  <WmiUpdateTrace+>;cmpl %ebx, (%edi);movl -(%ebp), %ebx;je  <WmiUpdateTrace+>": 1,
                "calll - <ExAllocatePoolWithTag>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "orl $, (%eax);orl $, -(%ebp);jmp  <WmiUpdateTrace+>;movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;addl $, %eax": 1,
                "jl  <WmiUpdateTrace+>;leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi;pushl %edi": 1,
                "pushl %eax;calll - <KeResetEvent>;movl -(%ebp), %ebx;movl (%ebx), %esi;cmpl %edi, %esi": 1,
                "movl %eax, (%ecx);movl -(%ebp), %ebx;movl (%ebx), %edi;testl %edi, %edi;je  <WmiUpdateTrace+>": 1,
                "je  <WmiUpdateTrace+>;movl %esi, %ecx;xorl %eax, %eax;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %ebx;movl (%ebp), %eax;movl (%eax), %esi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %ebx;movl (%ebp), %eax;movl (%eax), %esi;testl %esi, %esi": 1,
                "jmp  <WmiUpdateTrace+>;movl $, %esi;jmp  <WmiUpdateTrace+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <WmiUpdateTrace+>;xorl %eax, %eax;cmpl %eax, %esi": 1,
                "movl (%esi), %eax;testl %eax, %eax;jbe  <WmiUpdateTrace+>;movl %eax, (%ebx);movl -(%ebp), %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;movl -(%ebp), %ebx;movl $, %eax": 1,
                "andl $, %ecx;movl %ecx, (%ebx);pushl -(%ebp);pushl %esi;calll  <IoWMISetNotificationCallback+>": 1,
                "movl %eax, %esi;movl -(%ebp), %ebx;addl $, %ebx;movl %ebx, -(%ebp);movl $, %eax": 1,
                "jne  <WmiFlushTrace+>;movl $, %eax;jmp  <WmiFlushTrace+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;pushl $;addl $, %eax;pushl %eax;calll - <KeReleaseMutex>": 1,
                "movl %eax, -(%ebp);movl (%edx), %edx;movl %edx, -(%ebp);movl %eax, %esi;orl %edx, %esi": 3,
                "movzwl -(%ebp), %eax;movl %eax, -(%ebp);cmpl $, %eax;ja  <WmiQueryTraceInformation+>;cmpl %ecx, %ebx": 1,
                "je  <WmiQueryTraceInformation+>;movl %eax, (%ebx);movl %edx, (%ebx);jmp  <WmiQueryTraceInformation+>;pushl $": 1,
                "jb - <WmiQueryTraceInformation+>;cmpl %ecx, %edx;je - <WmiQueryTraceInformation+>;movl (%edx), %eax;movl %eax, -(%ebp)": 2,
                "cmpl %ecx, %edx;je - <WmiQueryTraceInformation+>;movzbl -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, (%ebx)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);testl %ebx, %ebx;je  <WmiQueryTraceInformation+>": 1,
                "je  <WmiQueryTraceInformation+>;movl %edx, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);testl %esi, %esi": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);testl %esi, %esi;jmp  <WmiQueryTraceInformation+>;cmpl $, (%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);cmpl $-, %eax;jne  <WmiQueryTraceInformation+>;xorl %eax, %eax": 1,
                "xorl %edx, %edx;movl %edx, -(%ebp);xorl %esi, %esi;incl %esi;movl %esi, -(%ebp)": 1,
                "jne - <WmiQueryTraceInformation+>;cmpl %ecx, %edx;jne  <WmiQueryTraceInformation+>;movl $, %eax;jmp  <WmiQueryTraceInformation+>": 1,
                "jmp  <WmiQueryTraceInformation+>;cmpl %ecx, (%edx);je - <WmiQueryTraceInformation+>;cmpw %cx, (%edx);je - <WmiQueryTraceInformation+>": 1,
                "pushl %eax;calll - <WmiQueryTrace>;movl %eax, -(%ebp);testl %eax, %eax;jge  <WmiQueryTraceInformation+>": 1,
                "pushl %ebx;jne  <WmiStartTrace+>;movl (%esi), %eax;cmpl %edi, %eax;je  <WmiStartTrace+>": 1,
                "jl  <WmiStartTrace+>;movl (%esi), %eax;andl $, %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "xorl %edi, %edi;xorl %ebx, %ebx;cmpl %edi, ;movl %edi, -(%ebp);jne  <IoWMIRegistrationControl+>": 1,
                "movl $, %eax;jmp  <IoWMIRegistrationControl+>;movl (%ebp), %ecx;movl $, %eax;testl %ecx, %eax": 1,
                "je  <IoWMIRegistrationControl+>;movl $, %edi;jmp  <IoWMIRegistrationControl+>;pushl %edi;pushl (%ebp)": 1,
                "cmpl %edi, %esi;je - <IoWMIRegistrationControl+>;pushl %edi;calll - <NtTraceEvent+>;orl $, (%esi)": 1,
                "jl  <IoWMIRegistrationControl+>;pushl %ebx;pushl (%ebp);calll  <IoWMISetNotificationCallback+>;jmp - <IoWMIRegistrationControl+>": 1,
                "pushl %ebx;pushl %edi;pushl $;calll - <NtTraceEvent+>;movl , %edx": 1,
                "movl %edx, %esi;movl (%edx), %edx;testl %edx, %edx;jne - <IoWMIAllocateInstanceIds+>;pushl $": 1,
                "movl %ecx, (%eax);calll - <KeReleaseMutex>;movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax": 1,
                "calll - <KeReleaseMutex>;movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax;jmp  <IoWMIAllocateInstanceIds+>": 1,
                "int;popl %edi;addb %al, (%eax);addb %cl, %ah;int": 1,
                "subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jne  <IoWMISuggestInstanceName+>;movl $, %eax;jmp  <IoWMISuggestInstanceName+>;pushl %esi": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %edi": 1,
                "movw (%ebp), %ax;pushl %esi;movw %bx, (%esi);movw %ax, (%esi);calll - <RtlAppendUnicodeToString>": 1,
                "calll - <ExFreePoolWithTag>;movl %ebx, -(%ebp);jmp  <IoWMISuggestInstanceName+>;cmpl %ebx, -(%ebp);je  <IoWMISuggestInstanceName+>": 1,
                "subl $, %eax;addb %dh, (%edx);addb %bh, (%eax);andl $, %eax;addb %bh, (%eax)": 6,
                "andl $, %eax;addb %bh, (%eax);andl $, %eax;addb %bh, (%eax);addb %al, (%eax)": 3,
                "movzbl (%esi), %eax;pushl %eax;movzwl (%esi), %eax;pushl %eax;movzwl (%esi), %eax": 2,
                "calll - <RtlInitUnicodeString>;pushl $;xorl %eax, %eax;popl %ecx;leal -(%ebp), %edi": 3,
                "pushl %ecx;movl $, -(%ebp);sbbl %eax, %eax;andl $, %eax;xorl %edi, %edi": 1,
                "movl $, -(%ebp);sbbl %eax, %eax;andl $, %eax;xorl %edi, %edi;addl $, %eax": 1,
                "calll  <IoWMISetNotificationCallback+>;testl %eax, %eax;jl  <IoWMIQueryAllData+>;movl (%esi), %ecx;testb $, %ch": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%edi);leal -(%ebp), %ecx;cmpl %ecx, %esi;jne  <IoWMIQueryAllData+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;pushl %esi;movl (%ebp), %esi": 4,
                "movl (%esi), %ecx;pushl %edi;movl %eax, %edi;je  <IoWMIQueryAllDataMultiple+>;cmpl $, %ecx": 1,
                "pushl %edi;pushl %edi;pushl (%ebp);calll  <IoWMISetNotificationCallback+>;movl %eax, %esi": 1,
                "je  <IoWMIQuerySingleInstance+>;movl $, %esi;jmp  <IoWMIQuerySingleInstance+>;testb $, %al;movl (%ebp), %ecx": 1,
                "testb $, %al;movl (%ebp), %ecx;je  <IoWMIQuerySingleInstance+>;movl (%ebx), %eax;movl %eax, (%ecx)": 1,
                "movl -(%ebp), %eax;movl %eax, (%ecx);je  <IoWMIQuerySingleInstance+>;movl $, %esi;cmpl (%ebp), %ebx": 1,
                "pushl %ebx;calll  <IoWMISetNotificationCallback+>;cmpl %ebx, %eax;jl  <IoWMIQuerySingleInstanceMultiple+>;testb $, (%edi)": 1,
                "movl (%edi), %eax;movl %eax, (%esi);jmp  <IoWMIQuerySingleInstanceMultiple+>;movl -(%ebp), %ecx;movl %ecx, (%esi)": 1,
                "leal -(%ebp), %ecx;cmpl %ecx, %edi;jne  <IoWMIQuerySingleInstanceMultiple+>;movl $, %eax;movl -(%ebp), %ecx": 1,
                "addl $, %eax;pushl %edi;andl $-, %eax;movl %eax, -(%ebp);addl %ecx, %eax": 2,
                "pushl (%ebp);andl $, %ecx;pushl %ebx;pushl %edx;rep  movsb (%esi), %es:(%edi)": 1,
                "xorl %eax, %eax;popl %ecx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi);andl %eax, (%ebx)": 2,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);movl $, (%ebx);movw (%esi), %ax;movw %ax, (%ebx);movzwl (%esi), %ecx": 2,
                "movl %eax, -(%ebp);jbe  <IoWMIExecuteMethod+>;movl (%ebp), %ecx;addl %ecx, %eax;pushl $": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp - <IoWMIExecuteMethod+>;movl $, (%ebp)": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;pushl $": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;pushl $;pushl $": 1,
                "pushl $;pushl $;movl %ecx, (%eax);calll - <KeReleaseMutex>;xorl %eax, %eax": 1,
                "pushl %edi;movl (%esi), %edi;addl $, %ecx;subl %edi, %edx;andl $-, %ecx": 1,
                "je  <IoWMISetNotificationCallback+>;pushl %edi;movl $, %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl %eax, (%esi);addl $, %eax;movl %eax, (%esi);leal (%esi), %eax;pushl %eax": 1,
                "cmpl $, %eax;je  <IoWMISetNotificationCallback+>;pushl $;pushl (%ebp);addl $, %eax": 1,
                "cmpw $, %bx;jb - <IoWMISetNotificationCallback+>;popl %edi;andl $, (%esi);andl $, (%esi)": 1,
                "jb - <IoWMISetNotificationCallback+>;popl %edi;andl $, (%esi);andl $, (%esi);xorb %dl, %dl": 1,
                "movl , %eax;leal (%eax,%ecx), %edx;decl %eax;notl %eax;pushl %edi": 1,
                "jbe  <IoWMISetNotificationCallback+>;cmpl %eax, %esi;jae  <IoWMISetNotificationCallback+>;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl %ecx, %edx;shrl $, %ecx;orl $-, %eax;leal (%esi,%ebx), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "xorl %eax, %eax;pushl %eax;leal (%edi), %esi;pushl %esi;pushl (%edi)": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl (%ebp), %edx;movl (%ebx), %esi;movl (%ebp), %eax;shll $, %eax": 1,
                "addl %edx, %eax;movl %eax, (%esi);movl $, (%esi);movl %fs:, %eax;movl %eax, (%ebp)": 1,
                "movl (%eax), %eax;movl %eax, (%esi);movl (%ebp), %eax;movw %ax, (%esi);addl %eax, (%ebx)": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %ebx;movl %edi, -(%ebp)": 1,
                "xorl %edi, %edi;cmpl %edi, %ebx;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, (%edx);movl %eax, (%edx);movl %esi, %eax;movl %eax, (%edx);movl $, (%edx)": 1,
                "pushl %eax;pushl (%ebx);calll  <IoWMISetNotificationCallback+>;testl %eax, %eax;jge  <IoWMISetNotificationCallback+>": 1,
                "calll  <IoWMISetNotificationCallback+>;testl %eax, %eax;jge  <IoWMISetNotificationCallback+>;xorl %esi, %esi;jmp  <IoWMISetNotificationCallback+>": 1,
                "testl %eax, %eax;jge  <IoWMISetNotificationCallback+>;xorl %esi, %esi;jmp  <IoWMISetNotificationCallback+>;pushl $": 1,
                "jge  <IoWMISetNotificationCallback+>;xorl %esi, %esi;jmp  <IoWMISetNotificationCallback+>;pushl $;leal -(%ebp), %eax": 1,
                "jl  <IoWMISetNotificationCallback+>;testb $, (%ebx);je  <IoWMISetNotificationCallback+>;movl (%ebx), %eax;mull (%ebx)": 1,
                "leal (%ebx), %eax;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;cmpl %eax, %esi;je  <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>": 1,
                "pushl %ebx;calll - <IoWMISetNotificationCallback+>;testl %eax, %eax;je  <IoWMISetNotificationCallback+>;pushl $": 1,
                "calll - <ExFreePoolWithTag>;pushl $;pushl (%ebp);calll - <ExFreePoolWithTag>;movl %esi, %eax": 1,
                "leal (%eax), %ecx;cmpl %eax, %ecx;jb  <IoWMISetNotificationCallback+>;addl $, %eax;cmpl , %eax": 1,
                "xorl %edx, %edx;rep  cmpsl %es:(%edi), (%esi);je  <IoWMISetNotificationCallback+>;movl $, %esi;jmp  <IoWMISetNotificationCallback+>": 1,
                "cmpb $, (%edi);je  <IoWMISetNotificationCallback+>;testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;je  <IoWMISetNotificationCallback+>;movl (%eax), %esi;movl $, -(%ebp)": 1,
                "movl (%edi), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 2,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);jmp  <IoWMISetNotificationCallback+>": 1,
                "calll  <IoWMISetNotificationCallback+>;movl %eax, %ebx;movl %ebx, -(%ebp);testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl $, (%ebx);orb $-, (%ebx);movl , %eax": 1,
                "movl %ecx, (%ebx);movl %ebx, (%eax);movl %ebx, (%ecx);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);movl -(%ebp), %edi;jmp  <IoWMISetNotificationCallback+>;movl $, -(%ebp)": 1,
                "pushl -(%ebp);pushl $;calll  <IoWMISetNotificationCallback+>;pushl $;pushl $": 1,
                "movl %esi, %eax;jmp  <IoWMISetNotificationCallback+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl $, %eax;jmp  <IoWMISetNotificationCallback+>;cmpl $, %eax;je  <IoWMISetNotificationCallback+>;calll  <IoWMISetNotificationCallback+>": 1,
                "calll ;pushl $;pushl $;pushl %esi;calll  <IoWMISetNotificationCallback+>": 1,
                "movl $, %eax;jmp  <IoWMISetNotificationCallback+>;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <IoWMISetNotificationCallback+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "pushl (%ebx);leal -(%ebp), %eax;pushl %eax;calll - <RtlCreateUnicodeString>;orl $-, -(%ebp)": 1,
                "movw (%ebx), %bx;cmpw $, %bx;jne  <IoWMISetNotificationCallback+>;movl $, %ebx;jmp  <IoWMISetNotificationCallback+>": 1,
                "cmpl %esi, -(%ebp);je  <IoWMISetNotificationCallback+>;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>": 1,
                "testl %eax, %eax;je  <IoWMISetNotificationCallback+>;cmpl $, %eax;je  <IoWMISetNotificationCallback+>;xorl %eax, %eax": 1,
                "xorl %eax, %eax;testl %eax, %eax;je  <IoWMISetNotificationCallback+>;cmpl $, (%esi);je  <IoWMISetNotificationCallback+>": 1,
                "movl (%ebp), %esi;testl %esi, %esi;movl $, -(%ebp);je  <IoWMISetNotificationCallback+>;movl (%esi), %eax": 1,
                "cmpl $, (%ebp);jg - <IoWMISetNotificationCallback+>;movl $, %ebx;movl %ebx, %ecx;calll *": 1,
                "cmpl %eax, %ecx;jbe  <IoWMISetNotificationCallback+>;movl %ecx, %eax;movl (%esi), %edx;leal (%edi), %ecx": 1,
                "movl %ecx, %eax;movl (%esi), %edx;leal (%edi), %ecx;cmpl %ecx, %edx;ja  <IoWMISetNotificationCallback+>": 1,
                "jle  <IoWMISetNotificationCallback+>;movl %eax, (%ecx);movl %eax, (%esi);movl (%ecx), %ebx;andl $, (%ecx)": 1,
                "movl %edi, %eax;shll $, %eax;pushl %eax;pushl %esi;calll - <IoWMISetNotificationCallback+>": 1,
                "pushl %esi;calll - <IoWMISetNotificationCallback+>;testl %eax, %eax;movl %eax, (%esi);jne  <IoWMISetNotificationCallback+>": 1,
                "incl %ebx;cmpl -(%ebp), %ebx;jl - <IoWMISetNotificationCallback+>;xorl %eax, %eax;popl %edi": 1,
                "je  <IoWMISetNotificationCallback+>;testb $, %cl;jne  <IoWMISetNotificationCallback+>;testb $, %ch;je  <IoWMISetNotificationCallback+>": 1,
                "andl $, %eax;jne  <IoWMISetNotificationCallback+>;testb $, %ch;jne  <IoWMISetNotificationCallback+>;cmpl %edx, (%ebx)": 1,
                "je  <IoWMISetNotificationCallback+>;movl %ecx, %edi;andl $, %edi;je  <IoWMISetNotificationCallback+>;testb $, %cl": 1,
                "movl %ecx, %edi;andl $, %edi;je  <IoWMISetNotificationCallback+>;testb $, %cl;jne  <IoWMISetNotificationCallback+>": 1,
                "je  <IoWMISetNotificationCallback+>;movl $, -(%ebp);cmpl %edx, (%ebx);jne  <IoWMISetNotificationCallback+>;testb $, %ch": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);andl $, -(%ebp);je  <IoWMISetNotificationCallback+>;leal -(%ebp), %edx": 1,
                "cmpl %edi, (%ebx);jne  <IoWMISetNotificationCallback+>;movl $, %eax;jmp  <IoWMISetNotificationCallback+>;movl %fs:, %eax": 1,
                "jmp  <IoWMISetNotificationCallback+>;xorl %eax, %eax;leal -(%ebp), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "cmpxchgl %edx, (%ecx);testl %eax, %eax;jne  <IoWMISetNotificationCallback+>;movl , %eax;movl %eax, -(%ebp)": 1,
                "jne  <IoWMISetNotificationCallback+>;movl , %eax;movl %eax, -(%ebp);orb $, -(%ebp);jmp  <IoWMISetNotificationCallback+>": 1,
                "pushl ;pushl %esi;pushl %eax;calll - <ObReferenceObjectByHandle>;movl %eax, -(%ebp)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%ebx)": 1,
                "orl $-, %ecx;pushl %ecx;movl $, %ecx;pushl %ecx;pushl %edx": 1,
                "pushl %ecx;pushl %edx;pushl %eax;calll - <_allmul>;pushl $": 1,
                "js  <IoWMISetNotificationCallback+>;pushl $;leal (%ebx), %eax;pushl %eax;calll - <RtlCreateUnicodeString>": 1,
                "cmpl $, -(%ebp);jge  <IoWMISetNotificationCallback+>;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "movl $, %ecx;cmpl %ecx, %eax;jbe  <IoWMISetNotificationCallback+>;movl %ecx, (%esi);movl (%esi), %eax": 1,
                "testl %eax, %eax;je  <IoWMISetNotificationCallback+>;pushl $;popl %ecx;movl -(%ebp), %edx": 1,
                "cmpl $, (%ebx);je  <IoWMISetNotificationCallback+>;cmpb $, -(%ebp);je  <IoWMISetNotificationCallback+>;pushl $": 1,
                "testw %cx, %cx;jbe  <IoWMISetNotificationCallback+>;cmpb $, -(%ebp);je  <IoWMISetNotificationCallback+>;movl (%esi), %eax": 1,
                "jne  <IoWMISetNotificationCallback+>;movl $, -(%ebp);cmpb $, -(%ebp);je  <IoWMISetNotificationCallback+>;cmpl $, -(%ebp)": 1,
                "jae  <IoWMISetNotificationCallback+>;pushl $;popl %esi;movl %esi, -(%ebp);pushl %esi": 1,
                "pushl $;popl %esi;movl %esi, -(%ebp);pushl %esi;pushl %ebx": 1,
                "rep  stosb %al, %es:(%edi);cmpl $, -(%ebp);je  <IoWMISetNotificationCallback+>;movl -(%ebp), %eax;movzwl (%eax), %esi": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebx), %eax;movl %eax, -(%ebp);jmp  <IoWMISetNotificationCallback+>": 1,
                "leal (%ebx), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %edi, (%ebx);movl %edi, (%ebx);movl %edi, (%ebx);pushl %ebx;calll - <IoWMISetNotificationCallback+>": 1,
                "calll - <ExFreePoolWithTag>;pushl %edi;pushl %ebx;calll - <ExFreePoolWithTag>;movl -(%ebp), %edx": 1,
                "pushl (%ebx);pushl (%ebx);calll - <_alldiv>;pushl %edi;pushl $": 1,
                "movzwl -(%ebp), %eax;jne  <IoWMISetNotificationCallback+>;movl $, %eax;movw %ax, (%esi);movl (%ebx), %eax": 2,
                "jne  <IoWMISetNotificationCallback+>;movl $, %eax;movw %ax, (%esi);movl (%ebx), %eax;testb %ah, %ah": 1,
                "jmp  <IoWMISetNotificationCallback+>;testb $, %ah;je  <IoWMISetNotificationCallback+>;movl $, (%ebx);movb $, (%ebx)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);movb $, (%ebx);movb $, (%ebx);movl %edi, (%ebx)": 1,
                "pushl %eax;calll - <ObCloseHandle>;movl %edi, (%esi);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "je  <IoWMISetNotificationCallback+>;orl $, %eax;movl %eax, (%ebx);movl $, %ecx;calll *": 1,
                "cmpl $, ;jne  <IoWMISetNotificationCallback+>;pushl ;calll - <MmLockPagableSectionByHandle>;movl %edi, ": 1,
                "calll - <KeWaitForSingleObject>;leal (%ebx), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl $, %eax": 1,
                "xaddl %eax, (%ecx);movl (%ebx), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %ebx, (%eax)": 1,
                "movl -(%ebp), %eax;movl %eax, ;pushl $;popl %esi;movl %esi, %ecx": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);pushl $;pushl -(%ebp)": 1,
                "cmpl %edi, -(%ebp);je  <IoWMISetNotificationCallback+>;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>": 1,
                "pushl %edi;calll  <IoWMISetNotificationCallback+>;movl %eax, -(%ebp);testl %eax, %eax;jge  <IoWMISetNotificationCallback+>": 1,
                "jmp  <IoWMISetNotificationCallback+>;leal (%ebx), %eax;pushl $;popl %ecx;movl %eax, %esi": 1,
                "leal (%eax), %edi;movl $, %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "jbe  <IoWMISetNotificationCallback+>;testb %cl, %cl;je  <IoWMISetNotificationCallback+>;pushl $;movzwl %ax, %eax": 1,
                "movzwl %ax, %eax;incl %eax;incl %eax;pushl %eax;pushl (%esi)": 2,
                "calll  <ProbeForWrite>;pushl %edi;leal (%esi), %eax;pushl %eax;calll - <RtlCopyUnicodeString>": 1,
                "pushl %esi;calll - <RtlCopyUnicodeString>;orl $-, -(%ebp);cmpl $, -(%ebp);je  <IoWMISetNotificationCallback+>": 1,
                "je  <IoWMISetNotificationCallback+>;movl , %edi;cmpl %ebx, %edi;movl %ebx, ;je  <IoWMISetNotificationCallback+>": 1,
                "calll - <MmIsThisAnNtAsSystem+>;testl $, %esi;je  <IoWMISetNotificationCallback+>;pushl $;pushl %ebx": 1,
                "andl $, %esi;cmpl %ebx, %eax;movl %eax, -(%ebp);movl %esi, -(%ebp);jne  <IoWMISetNotificationCallback+>": 1,
                "movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;pushl %ebx": 1,
                "pushl -(%ebp);calll - <IoAllocateIrp>;movl -(%ebp), %edi;movl %eax, %esi;jmp  <IoWMISetNotificationCallback+>": 2,
                "jmp  <IoWMISetNotificationCallback+>;cmpl %ebx, %esi;je  <IoWMISetNotificationCallback+>;cmpl %ebx, (%edi);je  <IoWMISetNotificationCallback+>": 1,
                "je  <IoWMISetNotificationCallback+>;leal -(%ebp), %eax;pushl %eax;pushl $;pushl %ebx": 1,
                "calll - <IoFreeIrp>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;popl %edi": 1,
                "pushl %ecx;andl $, -(%ebp);cmpl $, (%ebp);je  <IoWMISetNotificationCallback+>;cmpl $, (%ebp)": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <IoWMISetNotificationCallback+>;addl $-, (%esi);decb (%esi)": 2,
                "calll - <IoFreeIrp>;cmpl $, %edi;je - <IoWMISetNotificationCallback+>;popl %edi;popl %esi": 1,
                "jbe  <IoWMISetNotificationCallback+>;cmpl %edi, (%ebx);je  <IoWMISetNotificationCallback+>;movl , %eax;movl (,%eax,), %eax": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);pushl $;popl %ecx": 2,
                "movl $, %edi;rep  stosl %eax, %es:(%edi);popl %edi;leave;retl": 1,
                "cmpb %bl, ;jle  <IoWMISetNotificationCallback+>;pushl %esi;xorl %esi, %esi;xorl %eax, %eax": 1,
                "jne  <IoWMISetNotificationCallback+>;movl , %ecx;calll ;testl %eax, %eax;je  <IoWMISetNotificationCallback+>": 3,
                "pushl %ebx;calll - <PsReferencePrimaryToken>;movl %eax, %esi;testl %esi, %esi;je  <IoWMISetNotificationCallback+>": 1,
                "movl %esi, %edx;movl %eax, %edi;calll - <ObQueryNameString+>;jmp  <IoWMISetNotificationCallback+>;pushl $": 1,
                "pushl %ebx;sbbl %eax, %eax;addl $, %eax;movw %ax, (%esi);calll - <MmGetSystemRoutineAddress+>": 1,
                "calll ;testl %eax, %eax;je  <IoWMISetNotificationCallback+>;pushl %esi;movl (%ebp), %esi": 1,
                "pushl %ebx;movl -(%ebp), %edx;leal (,%edx,), %ebx;movl %ebx, (%ebp);movl $, %eax": 1,
                "je  <IoWMISetNotificationCallback+>;movw $, (%eax);movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx": 2,
                "movw $, (%eax);movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 2,
                "movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;xorl %edx, %edx;cmpl %edx, %edi": 1,
                "jne  <IoWMISetNotificationCallback+>;movl (%edi), %ecx;movl %ecx, (%eax);movl (%edi), %ecx;movl %ecx, (%eax)": 1,
                "je  <IoWMISetNotificationCallback+>;pushl %ebx;movzwl (%edi), %ebx;testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>": 1,
                "jmp  <IoWMISetNotificationCallback+>;xorl %eax, %eax;incl %eax;retl;movl -(%ebp), %esp": 4,
                "movl -(%ebp), %ebx;leal -(%ebx), %ecx;xorl %eax, %eax;movl -(%ebp), %edx;movl %edx, %edi": 1,
                "andl $, %ecx;pushl $;rep  stosb %al, %es:(%edi);movl %edx, %esi;calll - <NtTraceEvent+>": 1,
                "je  <IoWMISetNotificationCallback+>;movl $, -(%ebp);jmp  <IoWMISetNotificationCallback+>;cmpl $, %eax;jne  <IoWMISetNotificationCallback+>": 1,
                "pushl $;pushl (%edi);pushl $;pushl %esi;calll  <IoWMISetNotificationCallback+>": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl %ecx, -(%ebp);addl $, %edi;decl -(%ebp);jns - <IoWMISetNotificationCallback+>": 1,
                "testb $, ;jne  <IoWMISetNotificationCallback+>;pushl $;calll - <PsSetLoadImageNotifyRoutine>;orl $, ": 1,
                "pushl $;calll - <PsSetLoadImageNotifyRoutine>;orl $, ;testl $, %ebx;je  <IoWMISetNotificationCallback+>": 1,
                "calll - <KeReleaseMutex>;movb $, %al;jmp - <IoWMISetNotificationCallback+>;int;int": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;movl (%eax), %ecx;testb $, %cl": 1,
                "jmp  <IoWMISetNotificationCallback+>;testb $, %cl;je  <IoWMISetNotificationCallback+>;movl (%eax), %edi;testl %edi, %edi": 1,
                "testb $, %cl;je  <IoWMISetNotificationCallback+>;movl (%eax), %edi;testl %edi, %edi;je  <IoWMISetNotificationCallback+>": 1,
                "testb $, %al;movl %edi, -(%ebp);je  <IoWMISetNotificationCallback+>;xorl %eax, %eax;jmp  <IoWMISetNotificationCallback+>": 1,
                "movl (%esi), %eax;addl $, %ecx;cmpl $, %eax;movl %ecx, -(%ebp);jbe  <IoWMISetNotificationCallback+>": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %ebx;leal (%esi), %ebx;movl (%ebx), %edx": 1,
                "cmpl (%esi), %edi;jae  <IoWMISetNotificationCallback+>;cmpb $, (%ebp);movl (%edx), %eax;je  <IoWMISetNotificationCallback+>": 1,
                "jne  <IoWMISetNotificationCallback+>;testb $, %al;je  <IoWMISetNotificationCallback+>;cmpb $, -(%ebp);jne  <IoWMISetNotificationCallback+>": 1,
                "jne  <IoWMISetNotificationCallback+>;testl %eax, -(%ebp);jne  <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx": 1,
                "movl (%edx), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx,%edi,);addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);incl %edi;movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);xorl %edi, %edi;cmpl %edi, -(%ebp);movl %ebx, -(%ebp);jbe  <IoWMISetNotificationCallback+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);jmp  <IoWMISetNotificationCallback+>;testb $, %al": 1,
                "je  <IoWMISetNotificationCallback+>;andl $, -(%ebp);andl $, -(%ebp);pushl %ebx;leal -(%ebp), %eax": 1,
                "jb - <IoWMISetNotificationCallback+>;cmpb $, (%ebp);popl %ebx;jne  <IoWMISetNotificationCallback+>;andl $, -(%ebp)": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;testb $, (%esi);jne  <IoWMISetNotificationCallback+>": 1,
                "movb $, (%ecx);movl (%eax), %ecx;movl %ebx, (%ecx);movl (%eax), %eax;addl $, %eax": 1,
                "movl %eax, (%eax);movl %eax, (%eax);orl $, (%esi);pushl %ebx;pushl $": 1,
                "calll - <IoWMISetNotificationCallback+>;testb %bl, %bl;movl %eax, (%ebp);je  <IoWMISetNotificationCallback+>;movl (%esi), %eax": 2,
                "pushl %esi;pushl $;calll  <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>;cmpb $, (%ebp)": 1,
                "jmp  <IoWMISetNotificationCallback+>;cmpb $, (%ebp);je  <IoWMISetNotificationCallback+>;testb $, (%esi);je  <IoWMISetNotificationCallback+>": 1,
                "pushl %eax;calll - <IoWMISetNotificationCallback+>;decl (%esi);movl %eax, (%ebp);jmp - <IoWMISetNotificationCallback+>": 1,
                "movl (%esi), %eax;jmp  <IoWMISetNotificationCallback+>;movl (%esi), %eax;testl %eax, %eax;je - <IoWMISetNotificationCallback+>": 1,
                "testl %eax, %eax;je - <IoWMISetNotificationCallback+>;movl (%ebp), %eax;notl %eax;andl %eax, (%esi)": 1,
                "pushl %esi;calll - <IoWMISetNotificationCallback+>;movl %edi, %eax;popl %edi;popl %esi": 2,
                "testl %ecx, %ecx;pushl $;popl %edx;je  <IoWMISetNotificationCallback+>;decl %ecx": 1,
                "jne  <IoWMISetNotificationCallback+>;pushl %edx;pushl (%ebp);orl %edx, %ecx;pushl (%ebp)": 1,
                "orl %edx, %ecx;pushl (%ebp);movl %ecx, (%eax);pushl (%ebp);pushl (%ebp)": 1,
                "calll - <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>;xorl %eax, %eax;popl %ebp;retl $": 1,
                "je  <IoWMISetNotificationCallback+>;movl $, %eax;jmp  <IoWMISetNotificationCallback+>;movb $, -(%ebp);movb $, (%ebp)": 2,
                "movb %bl, (%ebp);movb %bl, (%ebp);movb %bl, -(%ebp);calll - <NtTraceEvent+>;leal (%esi), %ecx": 1,
                "testb $-, -(%ebp);je  <IoWMISetNotificationCallback+>;cmpb %bl, (%ebp);jne  <IoWMISetNotificationCallback+>;cmpb %bl, (%ebp)": 1,
                "testb $, -(%ebp);movb %bl, (%ebp);je  <IoWMISetNotificationCallback+>;movb $, (%ebp);movl (%eax), %eax": 1,
                "movb %bl, (%ebp);je  <IoWMISetNotificationCallback+>;movb $, (%ebp);movl (%eax), %eax;cmpl %ecx, %eax": 1,
                "jne - <IoWMISetNotificationCallback+>;pushl %ebx;pushl %edi;calll - <KeReleaseMutex>;cmpb %bl, (%ebp)": 1,
                "pushl %ebx;pushl %edi;movl %eax, %esi;calll - <KeReleaseMutex>;cmpl %ebx, %esi": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jl  <IoWMISetNotificationCallback+>;pushl $;calll - <IoWMIDeviceObjectToInstanceName+>": 1,
                "jmp - <IoWMISetNotificationCallback+>;andl $-, -;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "pushl $;calll - <KeReleaseMutex>;xorl %eax, %eax;jmp  <IoWMISetNotificationCallback+>;pushl $": 1,
                "andl $-, -;movl (%ebx), %esi;movl (%ebx), %edi;pushl $;movl %esi, -(%ebp)": 1,
                "calll - <NtTraceEvent+>;pushl $;pushl %ebx;calll  <IoWMISetNotificationCallback+>;movl %eax, %ebx": 1,
                "testl %ebx, %ebx;jne  <IoWMISetNotificationCallback+>;cmpb %al, -(%ebp);je  <IoWMISetNotificationCallback+>;movl (%ebp), %edi": 1,
                "jne  <IoWMISetNotificationCallback+>;cmpb %al, -(%ebp);je  <IoWMISetNotificationCallback+>;movl (%ebp), %edi;pushl $": 1,
                "jmp  <IoWMISetNotificationCallback+>;orl $, %eax;movl %eax, (%ebx);leal (%ebp), %eax;pushl %eax": 1,
                "testb $-, (%ebx);je  <IoWMISetNotificationCallback+>;pushl %edi;pushl %esi;pushl (%ebp)": 1,
                "andb $, (%ebx);xorl %esi, %esi;pushl %ebx;pushl $;movl %esi, (%ebx)": 1,
                "movl %esi, (%ebx);calll  <IoWMISetNotificationCallback+>;movl %esi, -(%ebp);jmp  <IoWMISetNotificationCallback+>;movl (%ebp), %edi": 1,
                "je  <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>;movl -(%ebp), %esi;testb $-, (%esi);je  <IoWMISetNotificationCallback+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx": 1,
                "incl -(%ebp);movl -(%ebp), %eax;addl $, -(%ebp);cmpl (%ebx), %eax;jb - <IoWMISetNotificationCallback+>": 1,
                "pushl %edi;calll - <KeReleaseMutex>;jmp  <IoWMISetNotificationCallback+>;movl $, %edi;movl $, %ebx": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl $, %edi;movl $, %ebx;pushl $;calll - <NtTraceEvent+>": 1,
                "je  <IoWMISetNotificationCallback+>;testb $-, (%esi);je  <IoWMISetNotificationCallback+>;movw (%esi), %ax;cmpw $, %ax": 1,
                "movl %ecx, (%edx);movl %edx, (%ecx);movl (%ebp), %edx;testl %edx, %edx;je  <IoWMISetNotificationCallback+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);calll  <IoWMISetNotificationCallback+>": 1,
                "movl %ecx, -(%ebp);calll  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "cmpl %ebx, (%ebp);rep  stosb %al, %es:(%edi);leal -(%ebp), %eax;pushl %eax;je  <IoWMISetNotificationCallback+>": 1,
                "leal -(%ebp), %eax;pushl %eax;je  <IoWMISetNotificationCallback+>;pushl (%esi);jmp  <IoWMISetNotificationCallback+>": 1,
                "je  <IoWMISetNotificationCallback+>;pushl %ebx;leal (%esi), %eax;pushl %eax;calll - <SeImpersonateClientEx>": 1,
                "movl %eax, (%ebp);cmpl %ebx, (%ebp);jl  <IoWMISetNotificationCallback+>;pushl (%ebp);leal -(%ebp), %eax": 1,
                "cmpl %ebx, %edi;jge  <IoWMISetNotificationCallback+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl $, %eax;jne  <IoWMISetNotificationCallback+>;testb $, (%esi);je  <IoWMISetNotificationCallback+>;movl (%ebp), %eax": 1,
                "testb $, (%esi);je  <IoWMISetNotificationCallback+>;movl (%ebp), %eax;mull (%esi);movl %eax, -(%ebp)": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx;movl -(%ebp), %edi;movl (%esi), %ebx;andl $, %ebx": 1,
                "je  <IoWMISetNotificationCallback+>;cmpb $, -(%ebp);jne  <IoWMISetNotificationCallback+>;leal (%esi), %eax;jmp  <IoWMISetNotificationCallback+>": 1,
                "cmpl %ebx, -(%ebp);je  <IoWMISetNotificationCallback+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 2,
                "jmp  <IoWMISetNotificationCallback+>;incl %edi;pushl %edi;pushl (%esi);pushl %ebx": 1,
                "jne  <IoWMISetNotificationCallback+>;pushl %eax;pushl %ebx;calll - <ExFreePoolWithTag>;movl $, %eax": 1,
                "jmp  <IoWMISetNotificationCallback+>;pushl %ebx;pushl (%ebp);calll - <RtlInitUnicodeString>;xorl %eax, %eax": 1,
                "jne  <IoWMISetNotificationCallback+>;orw $, (%edx);movb , %al;movb %al, (%edx);leal (%edx), %edi": 1,
                "int;movl $, ;retl;int;int": 1,
                "pushl %esi;pushl -(%ebp);calll - <ZwWriteFile>;popl %edi;movl -(%ebp), %ecx": 1,
                "xorl %eax, %eax;cmpw %ax, (%esi);je  <IoWMISetNotificationCallback+>;cmpl %eax, (%esi);movl (%esi), %ebx": 1,
                "cmpl %eax, (%esi);movl (%esi), %ebx;jne  <IoWMISetNotificationCallback+>;testb $, %bh;jne  <IoWMISetNotificationCallback+>": 1,
                "cmpl %eax, %esi;jl  <IoWMISetNotificationCallback+>;movl $, %eax;jmp  <IoWMISetNotificationCallback+>;movl %esi, %eax": 1,
                "testb $, %bl;je  <IoWMISetNotificationCallback+>;cmpl %eax, (%esi);je - <IoWMISetNotificationCallback+>;leal -(%ebp), %eax": 1,
                "je  <IoWMISetNotificationCallback+>;testb $, (%esi);je  <IoWMISetNotificationCallback+>;leal (%esi), %ecx;calll - <InterlockedPopEntrySList>": 1,
                "movl %eax, %edi;calll - <InterlockedPushEntrySList>;movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "andl $, (%esi);movl %edi, %eax;shrl $, %eax;pushl %eax;pushl %edi": 1,
                "movl %ebx, (%esi);jl  <IoWMISetNotificationCallback+>;pushl %edi;leal (%esi), %eax;pushl %edi": 1,
                "pushl %eax;calll - <IoWMISetNotificationCallback+>;movl %eax, %ebx;cmpl %edi, %ebx;jl - <IoWMISetNotificationCallback+>": 1,
                "calll - <IoWMISetNotificationCallback+>;cmpl %edi, %eax;movl %eax, (%esi);jl - <IoWMISetNotificationCallback+>;andb $-, (%esi)": 1,
                "movl %eax, %ebx;je  <IoWMISetNotificationCallback+>;andl $, (%esi);pushl %edi;pushl %edi": 1,
                "jge  <IoWMISetNotificationCallback+>;pushl %esi;movl %ebx, (%esi);calll - <IoWMISetNotificationCallback+>;cmpl %edi, (%esi)": 1,
                "pushl %edi;pushl %edi;leal (%esi), %eax;pushl %eax;movl %edi, (%esi)": 1,
                "calll - <KeSetEvent>;pushl %esi;calll - <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>;movl (%esi), %eax": 1,
                "xorl %ebx, %ebx;cmpl $, (%ebp);jne  <IoWMISetNotificationCallback+>;pushl %esi;movl (%ebp), %esi": 1,
                "calll - <RtlWriteRegistryValue>;popl %ebp;retl $;int;pushl %edi": 1,
                "addb %dh, (%eax);addb %ch, ;addb %dh, (%eax);addb %dh, (%eax);addb %dh, (%eax)": 1,
                "calll - <RtlQueryRegistryValues>;movl (%ebp), %esi;movl %eax, %edi;cmpl %ebx, %edi;movl %ebx, (%esi)": 1,
                "movsl (%esi), %es:(%edi);movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl %eax, (%ecx);movl (%edx), %edi;addl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "jne  <IoWMISetNotificationCallback+>;pushl %esi;movl (%ebp), %esi;testb $, (%esi);je  <IoWMISetNotificationCallback+>": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "movl (%ebp), %esi;movl %eax, -(%ebp);movl (%esi), %eax;xorl %ebx, %ebx;testb $, %al": 1,
                "pushl $;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;movl $, -(%ebp)": 1,
                "addl $, %edi;decl -(%ebp);jne - <IoWMISetNotificationCallback+>;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "popl %edi;je  <IoWMISetNotificationCallback+>;movl (%eax), %ecx;cmpl %ebx, %ecx;je  <IoWMISetNotificationCallback+>": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;je  <IoWMISetNotificationCallback+>;cmpb %bl, (%esi);je  <IoWMISetNotificationCallback+>": 1,
                "pushl %eax;calll - <IoWMISetNotificationCallback+>;pushl %ebx;calll - <NtTraceEvent+>;movl (%esi), %eax": 1,
                "movl (%esi), %ecx;pushl %ebx;movl %eax, (%ecx);pushl $;movl %ecx, (%eax)": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;pushl %ebx;calll - <NtTraceEvent+>;movl (%esi), %eax": 1,
                "pushl %ebx;calll - <NtTraceEvent+>;movl (%esi), %eax;cmpl $, %eax;jne  <IoWMISetNotificationCallback+>": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx);cmpl %ebx, %eax;je  <IoWMISetNotificationCallback+>": 1,
                "addl %eax, %ecx;jmp  <IoWMISetNotificationCallback+>;cmpw $, %ax;jb  <IoWMISetNotificationCallback+>;cmpw $, %ax": 1,
                "shll $, %ecx;leal -(%ecx,%eax), %ecx;incl %esi;incl %edx;incl %edx": 1,
                "leal (%ebp), %eax;pushl %eax;addl $, %edi;pushl %edi;calll - <IoWMISetNotificationCallback+>": 10,
                "popl %ebx;movw %ax, (%esi);pushl %ebx;leal (%ebp), %eax;pushl %eax": 1,
                "pushl %edi;calll - <IoWMISetNotificationCallback+>;testb %al, %al;je - <IoWMISetNotificationCallback+>;movb (%ebp), %al": 7,
                "addb %dh, (%eax,%eax);js  <IoWMISetNotificationCallback+>;subl $, %eax;addb %dh, (%edx);addb %bh, (%eax)": 2,
                "pushl (%ebp);pushl %ebx;pushl %esi;calll - <ObCheckCreateObjectAccess+>;xorl %eax, %eax": 1,
                "cmpb %al, (%ebp);jne  <IoWMISetNotificationCallback+>;movl $, %eax;pushl -(%ebp);movl -(%ebp), %edi": 1,
                "calll - <KeAttachProcess>;pushl -(%ebp);calll - <ZwClose>;calll - <KeDetachProcess>;movl -(%ebp), %eax": 1,
                "calll - <KeDetachProcess>;movl -(%ebp), %eax;movl %edi, (%eax);movl %esi, %eax;movl -(%ebp), %ecx": 1,
                "je  <IoWMISetNotificationCallback+>;movl (%ebp), %ecx;testl %ecx, %ecx;jbe  <IoWMISetNotificationCallback+>;movl (%ebp), %eax": 1,
                "pushl %edx;pushl %eax;calll - <memmove>;addl $, %esp;movl %esi, %eax": 1,
                "andl $, (%eax);movl $, (%eax);movl %esi, (%eax);movl $, (%eax);addl $, %eax": 1,
                "rep  stosb %al, %es:(%edi);movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movzwl (%esi), %ecx;movl (%esi), %esi;incl %ecx;incl %ecx": 1,
                "leal (%ebx), %eax;andl $, %ecx;pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlQueryTimeZoneInformation>": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlQueryTimeZoneInformation>;movl -(%ebp), %ecx;movl (%ebp), %esi": 1,
                "calll - <RtlQueryTimeZoneInformation>;movl -(%ebp), %ecx;movl (%ebp), %esi;movl $, (%ebx);movl , %eax": 1,
                "calll - <ExFreePoolWithTag>;jmp  <IoWMISetNotificationCallback+>;leal (%esi), %edx;leal (%edi), %ecx;calll - <InterlockedPushEntrySList>": 1,
                "pushl %esi;andl $-, %ecx;addl $, %ecx;orl $, %ecx;pushl %ecx": 1,
                "orl $, %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <ZwCreateFile>": 1,
                "je  <IoWMISetNotificationCallback+>;cmpl %esi, %ecx;je  <IoWMISetNotificationCallback+>;pushl $;pushl %ecx": 1,
                "jne  <IoWMISetNotificationCallback+>;movl $, %eax;jmp  <IoWMISetNotificationCallback+>;pushl %esi;calll - <wcslen>": 1,
                "jmp  <IoWMISetNotificationCallback+>;pushl %esi;pushl $;pushl $;pushl %edi": 1,
                "int;andl $, %eax;addb %dh, (%ebx);je  <IoWMISetNotificationCallback+>;addb %ch, %gs:(%ebp)": 1,
                "addb %dh, (%eax,%eax);addb %ah, (%ecx);arpl %ax, (%eax);addb %ch, %gs:(%esi);addb %ch, (%eax,%eax)": 1,
                "je  <IoWMISetNotificationCallback+>;addb %ch, %gs:(%ebp);xorl (%eax), %eax;xorb (%eax), %al;popl %esp": 2,
                "addb %cl, (%ecx);addb %al, (%eax);addb %al, (%eax);je  <IoWMISetNotificationCallback+>;jb  <IoWMISetNotificationCallback+>": 1,
                "popal;addb %ah, (%ebx);addb %ch, %gs:(%esi);addb %ch, (%eax,%eax);addb %ah, (%edi)": 2,
                "testl %esi, %esi;jne  <IoWMISetNotificationCallback+>;movl $, %eax;jmp  <IoWMISetNotificationCallback+>;pushl %ebx": 1,
                "testl %ebx, %ebx;movl %ebx, -(%ebp);jne  <IoWMISetNotificationCallback+>;movl $, %eax;jmp  <IoWMISetNotificationCallback+>": 1,
                "pushl %eax;pushl %ebx;calll - <IoWMISetNotificationCallback+>;movl %eax, %edi;testl %edi, %edi": 1,
                "calll - <IoWMISetNotificationCallback+>;movl %eax, %ebx;testl %ebx, %ebx;jge  <IoWMISetNotificationCallback+>;pushl $": 1,
                "andw $, (%edi,%esi,);pushl $;pushl $;pushl %edi;calll - <IoWMISetNotificationCallback+>": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jl  <IoWMISetNotificationCallback+>;pushl (%ebp);pushl (%ebp)": 1,
                "testl %ebx, %ebx;jl  <IoWMISetNotificationCallback+>;pushl (%ebp);pushl (%ebp);pushl $": 1,
                "pushl (%ebp);movl %ebx, (%edi);pushl $;movb %bl, -(%ebp);movb $, -(%ebp)": 1,
                "jl  <IoWMISetNotificationCallback+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl %ebx;pushl %eax": 1,
                "testl %eax, %eax;jne  <IoWMISetNotificationCallback+>;pushl (%ebp);calll - <IoGetRelatedDeviceObject>;testl %eax, %eax": 1,
                "movl $, %eax;jne  <IoWMISetNotificationCallback+>;movl $, %eax;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;retl $;testb $, %al": 1,
                "movl (%ebx), %ecx;movl %ecx, (%ebp);je  <IoWMISetNotificationCallback+>;andl $, (%ebp);movl %ecx, %eax": 1,
                "je  <IoWMISetNotificationCallback+>;andl $, (%ebp);movl %ecx, %eax;leal (%ebp), %ecx;pushl %ecx": 1,
                "movl (%ebp), %ecx;movl %eax, %esi;movl (%ebp), %eax;pushl %ebx;movl %esi, (%eax)": 1,
                "calll - <IoWMIDeviceObjectToInstanceName+>;movl %esi, %eax;jmp - <IoWMISetNotificationCallback+>;cmpb $, (%ebp);pushl %edi": 1,
                "andl $, -(%ebp);movl (%ebp), %esi;movb $, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %edx, (%eax);movb $, (%eax);movl (%esi), %eax;movl $, %edi;movl %edi, (%esi)": 1,
                "movl $, %eax;movl %eax, (%ebp);movl %eax, (%esi);cmpb $, (%ebp);je  <IoWMISetNotificationCallback+>": 1,
                "pushl %ebx;pushl (%ebp);pushl (%ebp);pushl %esi;calll  <IoWMISetNotificationCallback+>": 1,
                "pushl %esi;calll  <IoWMISetNotificationCallback+>;pushl %ebx;calll  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx": 1,
                "calll  <IoWMISetNotificationCallback+>;pushl %ebx;calll  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "popl %edi;jmp - <IoWMISetNotificationCallback+>;int;int;int": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl , %eax;movsbl (%eax), %eax": 1,
                "incb %al;pushl $;pushl %eax;calll - <IoAllocateIrp>;movl %eax, %esi": 1,
                "movl %fs:, %eax;pushl %ebx;pushl (%ebp);movl %eax, (%esi);pushl (%ebp)": 1,
                "pushl $;pushl ;pushl %esi;pushl (%ebp);calll - <ObReferenceObjectByHandle>": 1,
                "jmp  <IoWMISetNotificationCallback+>;pushl %esi;pushl %esi;pushl $;pushl (%ebp)": 1,
                "cmpl %esi, %eax;movl %eax, (%ebp);jl  <IoWMISetNotificationCallback+>;leal -(%ebp), %eax;pushl %eax": 2,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;pushl %esi;movl $, (%ebp)": 1,
                "movl %eax, -(%ebp);xorl %esi, %esi;movl (%ebx), %ebx;cmpl -(%ebp), %ebx;jne - <IoWMISetNotificationCallback+>": 1,
                "movl (%ebx), %ebx;cmpl -(%ebp), %ebx;jne - <IoWMISetNotificationCallback+>;pushl %esi;pushl $": 1,
                "movl (%ebp), %ecx;shrl %eax;leal (%ecx,%eax,), %eax;andw $, (%eax);andw $, (%eax)": 1,
                "pushl $;pushl %edi;calll - <swprintf>;movl (%ebp), %ecx;addl $, %esp": 1,
                "movl (%ebp), %ecx;calll - <ObfDereferenceObject>;popl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %ecx;jne  <IoWMISetNotificationCallback+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl (%ebp), %eax": 1,
                "cmpl $, (%ebp);jne  <IoWMISetNotificationCallback+>;movl (%ebp), %edx;cmpl $, %edx;jb  <IoWMISetNotificationCallback+>": 1,
                "movb $, %al;jmp  <IoWMISetNotificationCallback+>;xorb %al, %al;popl %ebp;retl $": 1,
                "je  <IoWMISetNotificationCallback+>;leal (%eax), %edi;andl $-, %edi;cmpl %eax, %edi;jne  <IoWMISetNotificationCallback+>": 1,
                "movzwl (%edi,%eax), %edi;leal (%eax,%edi), %eax;cmpl %ecx, %eax;ja  <IoWMISetNotificationCallback+>;cmpb %dl, (%ebp)": 1,
                "jmp  <IoWMISetNotificationCallback+>;pushl %esi;movl (%ebp), %esi;pushl $;pushl $": 2,
                "popl %ecx;movl (%ebx), %esi;movl (%ebp), %eax;movl %eax, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "cmpl $, (%ebp);jne  <IoWMISetNotificationCallback+>;cmpl $, (%ebp);jne  <IoWMISetNotificationCallback+>;movl (%ebp), %eax": 1,
                "je  <IoWMISetNotificationCallback+>;cmpl $, %ecx;ja  <IoWMISetNotificationCallback+>;testl %esi, %esi;jbe  <IoWMISetNotificationCallback+>": 1,
                "testl %ecx, %ecx;jbe  <IoWMISetNotificationCallback+>;addl $, %eax;cmpl $, -(%eax);ja  <IoWMISetNotificationCallback+>": 1,
                "movl $, %eax;popl %esi;popl %ebp;retl $;addb %al, (%eax)": 1,
                "popl %esi;popl %ebp;retl $;addb %al, (%eax);int": 1,
                "movl , %eax;pushl %ebx;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %edx;pushl %esi;movl (%eax), %esi": 1,
                "movl $, %ebx;cmpl %ebx, %edx;jb  <IoWMISetNotificationCallback+>;cmpl %ebx, %edi;jb  <IoWMISetNotificationCallback+>": 2,
                "testb $, (%esi);jne  <IoWMISetNotificationCallback+>;andl $, -(%ebp);jmp  <IoWMISetNotificationCallback+>;pushl %esi": 1,
                "jb - <IoWMISetNotificationCallback+>;testb $, (%esi);je - <IoWMISetNotificationCallback+>;pushl $;pushl %esi": 1,
                "cmpl %ebx, %edx;jb  <IoWMISetNotificationCallback+>;cmpl %ebx, %edi;jb  <IoWMISetNotificationCallback+>;pushl %esi": 1,
                "pushl %esi;calll ;jmp  <IoWMISetNotificationCallback+>;cmpl $, %edi;jb  <IoWMISetNotificationCallback+>": 1,
                "pushl -(%ebp);pushl $;calll  <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>;movl $, %eax": 1,
                "subl $, %eax;je  <IoWMISetNotificationCallback+>;subl $, %eax;je  <IoWMISetNotificationCallback+>;subl $, %eax": 5,
                "jmp  <IoWMISetNotificationCallback+>;cmpl $, %edi;jb - <IoWMISetNotificationCallback+>;pushl $;pushl -(%ebp)": 1,
                "cmpl $, %edi;jb - <IoWMISetNotificationCallback+>;pushl $;pushl -(%ebp);pushl -(%ebp)": 1,
                "jmp  <IoWMISetNotificationCallback+>;cmpl $, %edi;jb  <IoWMISetNotificationCallback+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <IoWMISetNotificationCallback+>;cmpl $, %edx;jb  <IoWMISetNotificationCallback+>;movl -(%ebp), %edi;pushl $": 1,
                "pushl $;pushl $;pushl -(%ebp);pushl %edi;pushl (%esi)": 1,
                "pushl $;pushl -(%ebp);pushl %edi;pushl (%esi);pushl (%esi)": 1,
                "jne  <IoWMISetNotificationCallback+>;xorl %eax, %eax;jmp  <IoWMISetNotificationCallback+>;movl $, %eax;movl %eax, %edi": 1,
                "calll  <IoWMISetNotificationCallback+>;xorl %edi, %edi;movl %edi, -(%ebp);jmp  <IoWMISetNotificationCallback+>;pushl -(%ebp)": 1,
                "xorl %edi, %edi;movl %edi, -(%ebp);jmp  <IoWMISetNotificationCallback+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "movl $, %edi;jmp  <IoWMISetNotificationCallback+>;cmpl $, %edx;jne  <IoWMISetNotificationCallback+>;xorl %eax, %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <IoWMISetNotificationCallback+>": 1,
                "testl %edi, %edi;movl -(%ebp), %eax;movl %edi, (%eax);jl  <IoWMISetNotificationCallback+>;movl -(%ebp), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $;calll - <ExAllocateFromPagedLookasideList>": 1,
                "cmpl %ecx, %esi;je  <IoWMISetNotificationCallback+>;leal (%esi), %eax;movb $, (%esi);movb $, (%esi)": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, (%eax);je  <IoWMISetNotificationCallback+>": 1,
                "movl (%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, (%eax);je  <IoWMISetNotificationCallback+>;pushl %ecx": 1,
                "cmpl %ecx, (%eax);je  <IoWMISetNotificationCallback+>;pushl %ecx;pushl %ecx;pushl %ecx": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);cmpb $, (%ebp);je  <IoWMISetNotificationCallback+>;leal (%esi), %eax": 1,
                "movl %esi, -(%ebp);movb $, -(%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %eax, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp);cmpl %edi, (%ebx)": 1,
                "movl %ebx, %esi;xorl %edx, %edx;rep  cmpsl %es:(%edi), (%esi);jne  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx": 1,
                "testl %ecx, %ecx;movb $, -(%ebp);je  <IoWMISetNotificationCallback+>;calll - <ObfDereferenceObject>;andl $, -(%ebp)": 2,
                "cmpl -(%ebp), %edi;movl %edi, -(%ebp);jne  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx;orl $, (%ebx)": 1,
                "jne  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx;orl $, (%ebx);movl %ecx, (%ebx);jmp  <IoWMISetNotificationCallback+>": 1,
                "movzwl -(%ebp), %ecx;movl -(%ebp), %edi;addl %ecx, %eax;movw $, (%eax);incl %eax": 1,
                "movw $, (%eax);incl %eax;incl %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpl (%ecx), %edx;jb - <IoWMISetNotificationCallback+>;movl (%ebp), %edx;movl -(%ebp), %esi;movl %ecx, %ebx": 1,
                "movl -(%ebp), %ebx;movzwl -(%ebp), %esi;addl $, %ebx;andl $-, %ebx;movl %ebx, %eax": 1,
                "jne  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx;subl %eax, %ecx;cmpl %ecx, %esi;ja  <IoWMISetNotificationCallback+>": 1,
                "movsl (%esi), %es:(%edi);movl $, (%eax);movl -(%ebp), %eax;addl %ecx, %eax;leal (%ebx), %edx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <IoWMISetNotificationCallback+>;movb $, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, (%edx);popl %edi;popl %esi;popl %ebx;leave": 1,
                "pushl %esi;calll - <IoWMISetNotificationCallback+>;testl %eax, %eax;jl  <IoWMISetNotificationCallback+>;leal (%ebp), %eax": 1,
                "ja  <IoWMISetNotificationCallback+>;cmpb $, (%ebp);je  <IoWMISetNotificationCallback+>;pushl %edi;pushl %esi": 1,
                "cmpb $, (%ebp);je  <IoWMISetNotificationCallback+>;pushl %edi;pushl %esi;pushl (%ebp)": 1,
                "jge  <IoWMISetNotificationCallback+>;cmpl %ebx, %edi;je  <IoWMISetNotificationCallback+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, %edi;cmpl %ebx, %esi;je  <IoWMISetNotificationCallback+>;pushl %ebx;pushl %esi": 1,
                "testl %esi, %esi;je  <IoWMISetNotificationCallback+>;movl (%ebp), %edx;leal (%edx), %eax;movl %eax, (%ebp)": 1,
                "movl %edx, (%esi);calll - <NtTraceEvent+>;movl , %eax;movl $, (%esi);movl %eax, (%esi)": 1,
                "movl , %eax;movl $, (%esi);movl %eax, (%esi);pushl $;movl %esi, (%eax)": 1,
                "pushl $;pushl $;calll - <KeReleaseMutex>;pushl %esi;calll  <IoWMISetNotificationCallback+>": 1,
                "orl $, %ecx;orl %ecx, %eax;orl $, %eax;pushl %eax;pushl (%ebp)": 1,
                "andb $-, (%esi);jmp  <IoWMISetNotificationCallback+>;pushl $;calll - <IoWMISetNotificationCallback+>;movl %eax, %ebx": 1,
                "je  <IoWMISetNotificationCallback+>;pushl %esi;pushl $;calll - <IoWMISetNotificationCallback+>;pushl %esi": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl $, %edi;movl %edi, %eax;popl %edi;popl %esi": 1,
                "testl %eax, %eax;jl  <IoWMISetNotificationCallback+>;andb $-, (%edi);pushl %edi;calll - <IoWMISetNotificationCallback+>": 1,
                "andb $-, (%edi);pushl %edi;calll - <IoWMISetNotificationCallback+>;pushl $;pushl %esi": 1,
                "pushl %edi;calll - <IoWMISetNotificationCallback+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>": 1,
                "pushl $;pushl $;pushl %eax;movl %ecx, (%eax);calll  <IoWMISetNotificationCallback+>": 1,
                "xaddl %eax, (%ecx);decl %eax;jne - <IoWMISetNotificationCallback+>;popl %esi;retl $": 1,
                "movl %ebx, (%eax);calll - <KeReleaseMutex>;movl (%ebp), %eax;subl %esi, %eax;je  <IoWMISetNotificationCallback+>": 1,
                "je  <IoWMISetNotificationCallback+>;pushl %ebx;calll - <IoWMISetNotificationCallback+>;testb %al, %al;je  <IoWMISetNotificationCallback+>": 1,
                "orl $, (%eax);cmpl %edi, %ebx;jne  <IoWMISetNotificationCallback+>;calll  <IoWMISetNotificationCallback+>;movl %eax, %ebx": 1,
                "movl %ebx, (%ecx);movl (%ebp), %eax;addl $, %eax;leal (%ebx), %ecx;movl (%ecx), %edx": 1,
                "addl $, %eax;pushl %eax;pushl (%ebp);pushl %ebx;calll - <IoWMISetNotificationCallback+>": 1,
                "pushl (%ebp);movl (%ebp), %eax;pushl (%eax);calll - <ObCloseHandle>;movl $, (%ebp)": 2,
                "pushl (%eax);calll - <ObCloseHandle>;movl $, (%ebp);jmp  <IoWMISetNotificationCallback+>;orl $, (%eax)": 1,
                "jmp  <IoWMISetNotificationCallback+>;andl $, (%ebp);testl %edi, %edi;movl $, %ebx;jbe  <IoWMISetNotificationCallback+>": 1,
                "pushl %ebx;calll  <IoWMISetNotificationCallback+>;incl (%ebp);cmpl %edi, (%ebp);jb - <IoWMISetNotificationCallback+>": 1,
                "popl %ebx;je  <IoWMISetNotificationCallback+>;pushl $;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "pushl %ebx;movl (%eax), %ebx;xorl %eax, %eax;cmpl %eax, %ebx;pushl %esi": 1,
                "movl (%eax), %ebx;xorl %eax, %eax;cmpl %eax, %ebx;pushl %esi;pushl %edi": 1,
                "movb $, (%eax);jmp  <IoWMISetNotificationCallback+>;movl (%ebp), %ecx;movb $, (%ecx);movl (%ebp), %ecx": 1,
                "movl (%ecx), %edi;movl (%ebp), %ecx;movl (%ecx), %ecx;pushl %eax;movl %edi, (%ebp)": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);pushl %esi;pushl %edi": 1,
                "je  <IoWMISetNotificationCallback+>;movl (%esi), %eax;addl $, %eax;pushl %eax;calll - <wcslen>": 2,
                "testb $, %al;je  <IoWMISetNotificationCallback+>;cmpl %ebx, (%esi);jbe  <IoWMISetNotificationCallback+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;pushl (%eax,%ebx,);calll - <wcslen>;incl %ebx;cmpl (%esi), %ebx": 1,
                "cmpl (%esi), %ebx;popl %ecx;leal (%edi,%eax,), %edi;jb - <IoWMISetNotificationCallback+>;movl %edi, (%esi)": 1,
                "cmpl (%ebp), %eax;movl %eax, -(%ebp);jbe  <IoWMISetNotificationCallback+>;movl $, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);movl $, (%ebx);movl %eax, (%ebx);jmp  <IoWMISetNotificationCallback+>;leal (%ebx,%esi), %ecx": 1,
                "subl %ebx, %eax;movl %eax, (%ecx);addl $, %ecx;movl %ecx, -(%ebp);movl (%edi), %ecx": 1,
                "incl %eax;incl -(%ebp);leal (%eax,%eax), %ecx;movw %cx, (%esi);leal (%esi,%eax,), %esi": 1,
                "incl -(%ebp);leal (%eax,%eax), %ecx;movw %cx, (%esi);leal (%esi,%eax,), %esi;movl -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;movl (%eax,%ecx,), %eax;pushl %eax;movl %eax, -(%ebp)": 1,
                "movw %ax, (%esi);incl %esi;incl %esi;pushl %esi;movl %eax, -(%ebp)": 1,
                "cmpl %edi, %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %ecx, -(%ebp);je  <IoWMISetNotificationCallback+>": 1,
                "pushl %edi;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl ": 2,
                "jb  <IoWMISetNotificationCallback+>;movl -(%ebp), %ebx;jmp  <IoWMISetNotificationCallback+>;leal -(%ebp), %ebx;movl $, -(%ebp)": 1,
                "movl (%eax), %eax;xorl %esi, %esi;cmpl %esi, -(%ebp);movl %eax, (%ebx);movl %esi, (%ebx)": 1,
                "pushl %eax;pushl %esi;pushl -(%ebp);calll - <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>": 1,
                "testl %edx, %edx;jne  <IoWMISetNotificationCallback+>;movl $, %esi;jmp  <IoWMISetNotificationCallback+>;cmpb $, -(%ebp)": 1,
                "je  <IoWMISetNotificationCallback+>;cmpl $, -(%ebp);je  <IoWMISetNotificationCallback+>;pushl $;pushl -(%ebp)": 2,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl (%ebp), %esi;movl %ecx, -(%ebp);movl (%ebp), %ecx;pushl %edi;movl %eax, -(%ebp)": 1,
                "movl %esi, (%edx,%ecx,);incl %ecx;addl $, %eax;cmpl %edi, %ecx;jb - <IoWMISetNotificationCallback+>": 1,
                "cmpl %edi, %ecx;jb - <IoWMISetNotificationCallback+>;andl $, -(%ebp);jmp  <IoWMISetNotificationCallback+>;movl (%ebp), %edi": 1,
                "andl $, -(%ebp);andl $, -(%ebp);testl %edi, %edi;movl (%ebp), %eax;movl %ebx, -(%ebp)": 1,
                "jb  <IoWMISetNotificationCallback+>;movl (%ebp), %eax;movl -(%ebp), %esi;movl %eax, -(%ebp);jmp  <IoWMISetNotificationCallback+>": 1,
                "xorl %eax, %eax;cmpl %eax, -(%ebp);popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl $, (%esi);jne  <IoWMISetNotificationCallback+>;movl -(%ebp), %eax;movl (%eax,%edx), %eax;movl %eax, (%esi)": 1,
                "jne - <IoWMISetNotificationCallback+>;movl -(%ebp), %ebx;cmpl $, -(%ebp);je  <IoWMISetNotificationCallback+>;pushl $": 1,
                "calll - <wcslen>;pushl -(%ebp);movl %eax, -(%ebp);calll - <wcslen>;cmpl -(%ebp), %eax": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);calll - <wcslen>;cmpl -(%ebp), %eax;popl %ecx": 1,
                "calll - <wcslen>;cmpl -(%ebp), %eax;popl %ecx;popl %ecx;jbe  <IoWMISetNotificationCallback+>": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;je  <IoWMISetNotificationCallback+>;incl %edi": 2,
                "jge  <IoWMISetNotificationCallback+>;movb $, -(%ebp);movl (%esi), %esi;cmpl -(%ebp), %esi;jne - <IoWMISetNotificationCallback+>": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl -(%ebp), %edi;cmpl %esi, %edi;je  <IoWMISetNotificationCallback+>;cmpl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;pushl (%eax,%edi,);pushl $;calll  <IoWMISetNotificationCallback+>": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <IoWMISetNotificationCallback+>;movl (%ebp), %edi": 1,
                "je  <IoWMISetNotificationCallback+>;pushl %esi;pushl (%ebp);leal (%esi), %eax;pushl %eax": 1,
                "pushl %eax;pushl (%esi);pushl (%ebp);calll - <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %eax;popl %esi;popl %ebx;leave": 1,
                "movw (%eax), %cx;movw %cx, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax": 1,
                "movl %edx, -(%ebp);movl (%ecx,%eax,), %eax;movl %eax, -(%ebp);andl $, -(%ebp);movzwl -(%ebp), %esi": 1,
                "jb  <IoWMISetNotificationCallback+>;movl -(%ebp), %ebx;movl %eax, -(%ebp);jmp  <IoWMISetNotificationCallback+>;cmpl -(%ebp), %esi": 1,
                "movl $, (%ebx);movl %esi, (%ebx);leal (%ebx), %edi;movw -(%ebp), %cx;movw %cx, (%edi)": 1,
                "jne  <IoWMISetNotificationCallback+>;testw %cx, %cx;je  <IoWMISetNotificationCallback+>;testb $, -(%ebp);je  <IoWMISetNotificationCallback+>": 1,
                "testw %cx, %cx;je  <IoWMISetNotificationCallback+>;testb $, -(%ebp);je  <IoWMISetNotificationCallback+>;calll  <ExRaiseDatatypeMisalignment>": 1,
                "movl (%ebx), %ebx;jmp  <IoWMISetNotificationCallback+>;addl %ebx, -(%ebp);movl -(%ebp), %eax;movl (%eax), %ebx": 1,
                "movl (%eax), %ebx;testl %ebx, %ebx;jne - <IoWMISetNotificationCallback+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "movl $, (%ecx);movl -(%ebp), %esi;movl %esi, (%ecx);jmp  <IoWMISetNotificationCallback+>;movl -(%ebp), %eax": 1,
                "popl %ebx;testb $-, (%esi);je  <IoWMISetNotificationCallback+>;cmpl %edx, (%eax);jne  <IoWMISetNotificationCallback+>": 1,
                "testb $-, (%esi);je  <IoWMISetNotificationCallback+>;cmpl %edx, (%eax);jne  <IoWMISetNotificationCallback+>;movl (%esi), %ecx": 1,
                "je  <IoWMISetNotificationCallback+>;cmpl %edx, (%eax);jne  <IoWMISetNotificationCallback+>;movl (%esi), %ecx;cmpw $, %cx": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%esi);leal (%ebx,%ebx,), %eax;movl %ebx, (%esi)": 1,
                "pushl %edi;movl (%eax), %edi;testl %edi, %edi;je  <IoWMISetNotificationCallback+>;pushl $": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl $, -(%ebp);movl (%ebp), %ecx;calll - <ObfDereferenceObject>;popl %edi": 1,
                "pushl %esi;movl (%ebp), %esi;addl $, %esi;movl (%esi), %eax;jmp  <IoWMISetNotificationCallback+>": 1,
                "andl $, -(%eax);movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx);movl %edx, (%ecx)": 1,
                "jne  <IoWMISetNotificationCallback+>;pushl (%edi);calll - <ZwClose>;andl $, (%edi);andl $, (%edi)": 1,
                "movl %eax, (%ecx);movl %ecx, (%eax);popl %edi;movl %esi, (%esi);movl %esi, (%esi)": 1,
                "addl $, %esi;movl (%esi), %eax;leal -(%esi), %ecx;pushl %ecx;movl %eax, %esi": 1,
                "je  <IoWMISetNotificationCallback+>;movl (%eax), %edx;cmpl %edi, %edx;je  <IoWMISetNotificationCallback+>;cmpl %edi, (%eax)": 1,
                "decl %esi;jne - <IoWMISetNotificationCallback+>;movl %edi, -(%ebp);movl %edi, -(%ebp);orl $-, %ecx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <IoWMISetNotificationCallback+>;movl (%eax), %ebx": 1,
                "xorl %edx, %edx;movl -(%ebp), %eax;movl %edx, (%eax);jmp - <IoWMISetNotificationCallback+>;movl (%ebp), %eax": 1,
                "cmpb $, (%ebp);movl (%ebp), %eax;movl (%eax,%ebx,), %edi;leal (%edi), %esi;jne  <IoWMISetNotificationCallback+>": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;pushl ;pushl $": 2,
                "jl  <IoWMISetNotificationCallback+>;pushl $;calll - <NtTraceEvent+>;orl $, (%esi);cmpl $, (%esi)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jl  <IoWMISetNotificationCallback+>;movl -(%ebp), %edi;xorl %eax, %eax": 1,
                "movb $, -(%ebp);movl -(%ebp), %ecx;incl -(%ebp);movl %edi, (%ebx,%ecx,);cmpl %eax, (%edi)": 1,
                "andl $-, %eax;addl %eax, -(%ebp);incl -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax": 1,
                "andl $, (%ebp);cmpb $, (%ebp);movl %esi, %eax;je  <IoWMISetNotificationCallback+>;pushl $": 1,
                "pushl %eax;pushl %esi;pushl -(%ebp);pushl %ebx;calll - <IoWMISetNotificationCallback+>": 1,
                "movl %ecx, (%eax);jb - <IoWMISetNotificationCallback+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;movl (%ebp), %eax": 1,
                "pushl %esi;pushl %edi;calll - <ExFreePoolWithTag>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "pushl %esi;pushl -(%ebp);calll - <ZwRestoreKey+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "pushl %edi;movl (%ebp), %edi;leal (%edi), %esi;movl (%esi), %ecx;calll - <ObfReferenceObject+>": 1,
                "testb %al, %al;je  <IoWMISetNotificationCallback+>;pushl (%esi);calll - <IoWMISetNotificationCallback+>;movl (%esi), %ecx": 1,
                "calll - <ObfDereferenceObject>;movl (%esi), %ecx;calll - <ObfDereferenceObject>;pushl $;pushl %edi": 1,
                "pushl %edi;movl (%ebx), %edi;leal (%edi,%ecx), %edx;andl $-, %edx;cmpl (%ebx), %edx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %edi;xorl %esi, %esi;pushl %esi": 1,
                "rep  stosb %al, %es:(%edi);addl $, %esi;movl %edx, %eax;movl (%ebp), %edx;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);leal (%ebx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl (%ebx), %eax;pushl $;pushl %ebx;movl %eax, -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movl (%ebp), %esi;cmpl $, %edi;jne  <IoWMISetNotificationCallback+>;cmpl $, -(%ebp);jb - <IoWMISetNotificationCallback+>": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl $, %edi;jmp - <IoWMISetNotificationCallback+>;movl (%esi), %eax;andl $, %eax": 1,
                "movl %esi, -(%ebp);calll  <IoWMISetNotificationCallback+>;movl %eax, %edi;testl %edi, %edi;je  <IoWMISetNotificationCallback+>": 1,
                "leal (%eax,%eax), %eax;popl %ecx;movl %eax, -(%ebp);movl (%ebx), %eax;incl %eax": 1,
                "je  <IoWMISetNotificationCallback+>;movl -(%ebp), %eax;pushl -(%ebp);addl $-, %eax;movw %ax, (%esi)": 1,
                "pushl -(%ebp);leal (%esi), %edi;pushl %edi;calll - <wcscpy>;leal -(%ebp), %eax": 1,
                "testb $, %al;je  <IoWMISetNotificationCallback+>;andl $, (%ebx);jmp  <IoWMISetNotificationCallback+>;testb $, %al": 1,
                "movl (%esi), %ecx;movl (%ebx), %eax;cmpl (%eax), %ecx;pushl %edi;movl (%ebx), %edi": 1,
                "movl (%ebx), %eax;cmpl (%eax), %ecx;pushl %edi;movl (%ebx), %edi;movl %ecx, (%ebp)": 1,
                "calll - <IoWMISetNotificationCallback+>;movl %eax, %esi;jmp  <IoWMISetNotificationCallback+>;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl %ebx, -(%ebp);pushl %esi;movl -(%ebp), %esi;pushl %edi;pushl $": 1,
                "pushl %eax;calll - <IoWMISetNotificationCallback+>;movl -(%ebp), %eax;testb $-, (%eax);je  <IoWMISetNotificationCallback+>": 1,
                "movl -(%ebp), %eax;pushl $;addl $, %eax;pushl %eax;calll  <IoWMISetNotificationCallback+>": 1,
                "calll - <NtTraceEvent+>;addl $, %edi;movl (%edi), %eax;cmpl %edi, %eax;je  <IoWMISetNotificationCallback+>": 1,
                "movl (%esi), %eax;testb $, %al;jne  <IoWMISetNotificationCallback+>;testb $, %al;je  <IoWMISetNotificationCallback+>": 1,
                "pushl $;calll - <KeReleaseMutex>;pushl -(%ebp);pushl $;calll  <IoWMISetNotificationCallback+>": 1,
                "calll - <KeReleaseMutex>;pushl -(%ebp);pushl $;calll  <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>": 1,
                "je  <IoWMISetNotificationCallback+>;cmpl -(%ebp), %eax;je  <IoWMISetNotificationCallback+>;pushl %esi;pushl %eax": 1,
                "calll - <NtTraceEvent+>;pushl $;pushl $;calll - <IoWMISetNotificationCallback+>;pushl $": 1,
                "calll - <ExFreePoolWithTag>;movl $, -(%ebp);movl -(%ebp), %eax;pushl $;pushl (%eax)": 1,
                "cmpl %eax, -(%ebp);jl - <IoWMISetNotificationCallback+>;movl -(%ebp), %esi;pushl %eax;addl $, %edi": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);pushl %eax;pushl $;calll  <IoWMISetNotificationCallback+>": 2,
                "movl %ecx, (%esi);pushl %eax;pushl $;calll  <IoWMISetNotificationCallback+>;movl -(%ebp), %ecx": 1,
                "jmp  <IoWMISetNotificationCallback+>;orb $-, (%ebx);pushl %ebx;calll - <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>": 1,
                "rep  stosl %eax, %es:(%edi);movl (%ebp), %eax;movl %esi, (%ebx);movl $, (%ebx);leal (%eax), %esi": 1,
                "pushl %edi;pushl $;movl $, -(%ebp);calll - <NtTraceEvent+>;movl (%ebp), %edi": 1,
                "movl %eax, (%esi);jmp  <IoWMISetNotificationCallback+>;pushl $;pushl -(%ebp);calll - <ObCloseHandle>": 1,
                "pushl -(%ebp);calll - <ObCloseHandle>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;pushl %ebx": 1,
                "movl %edi, -(%ebp);movl %eax, (%ebp);jl  <IoWMISetNotificationCallback+>;pushl %esi;movl (%ebp), %esi": 1,
                "calll - <KeReleaseMutex>;jmp  <IoWMISetNotificationCallback+>;movl $, (%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "rep  stosb %al, %es:(%edi);leal (%ebx), %ecx;movl %ecx, (%ecx);movl %ecx, (%ecx);movl (%esi), %edx": 1,
                "movl (%esi), %ecx;movl %ecx, %edx;xorl %eax, %eax;shrl $, %ecx;movl %ebx, %edi": 1,
                "movl %eax, (%edi);movl %eax, (%ecx);addl (%esi), %eax;decl %edx;movl %ebx, (%eax)": 1,
                "testl $, %ecx;je  <IoWMISetNotificationCallback+>;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "je  <IoWMISetNotificationCallback+>;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);pushl %edi": 1,
                "movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);pushl %edi;pushl $": 1,
                "movl %ecx, (%eax);pushl %edi;pushl $;pushl $;calll - <KeReleaseMutex>": 1,
                "rep  cmpsl %es:(%edi), (%esi);jne  <IoWMISetNotificationCallback+>;pushl %eax;pushl $;calll - <KeReleaseMutex>": 1,
                "pushl $;pushl %ebx;calll  <IoWMISetNotificationCallback+>;pushl $;calll - <NtTraceEvent+>": 1,
                "pushl $;calll - <NtTraceEvent+>;pushl (%ebx);pushl $;calll - <IoWMISetNotificationCallback+>": 1,
                "movl (%ebp), %esi;andl $, (%ebx);movl (%edx), %edi;pushl %ebx;pushl $": 1,
                "leal (%esi), %ecx;cmpl %ecx, %eax;je  <IoWMISetNotificationCallback+>;pushl %ebx;pushl %eax": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %edi;testl %edi, %edi;je  <IoWMISetNotificationCallback+>;pushl $": 1,
                "movl %eax, %edi;testl %edi, %edi;je  <IoWMISetNotificationCallback+>;pushl $;calll - <IoWMISetNotificationCallback+>": 1,
                "testl %eax, %eax;je  <IoWMISetNotificationCallback+>;movl (%esi), %edx;notl %edx;andl $, %edx": 1,
                "popl %ebx;popl %ebp;retl $;leal (%edx), %eax;movl %eax, (%ebp)": 3,
                "cmpb $, (%ebp);je  <IoWMISetNotificationCallback+>;movl (%edx), %eax;movl (%edx), %ecx;movl %eax, (%ecx)": 1,
                "movl %ecx, (%eax);movl , %eax;movl %eax, %ecx;movl (%eax), %eax;movl %eax, (%edx)": 1,
                "calll - <IoWMISetNotificationCallback+>;testb %al, %al;je  <IoWMISetNotificationCallback+>;movl (%ebp), %eax;subl %edi, %edx": 1,
                "testb $, %al;je  <IoWMISetNotificationCallback+>;xorl %edi, %edi;cmpl %edi, (%esi);jbe  <IoWMISetNotificationCallback+>": 1,
                "calll - <RtlAnsiStringToUnicodeString>;leave;retl $;int;int": 1,
                "cmpl %eax, (%ebp);pushl %esi;pushl %edi;jbe  <IoWMISetNotificationCallback+>;movl (%ebp), %edx": 1,
                "retl $;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %ecx;leal (%eax,%eax,), %eax": 1,
                "xorl %edi, %edi;jmp  <IoWMISetNotificationCallback+>;movl (%esi), %eax;movl (%ebp), %ebx;addl %ebx, %eax": 1,
                "movl -(%ebp), %eax;movl (%esi,%ecx,), %edx;movl %eax, (%esi,%ecx,);leal (%edx,%eax), %eax;andl $-, %eax": 1,
                "movl %eax, -(%ebp);jb - <IoWMISetNotificationCallback+>;movl (%ebp), %eax;movl (%ebp), %ecx;movb (%ebp), %dl": 1,
                "jns  <IoWMISetNotificationCallback+>;popl %esp;addb %cl, (%ebp);popal;addb %ah, (%ebx)": 2,
                "popal;addb %dh, (%edx);addb %bl, %gs:(%eax,%eax);addb %ah, (%ebp);jae  <IoWMISetNotificationCallback+>": 2,
                "movl %eax, -(%ebp);movl (%ebp), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "calll  <IoWMISetNotificationCallback+>;cmpl %ebx, %eax;movl %eax, (%ebp);jl  <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>": 1,
                "jl  <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>;leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "movl (%ebp), %esi;xorl %eax, %eax;movl %ebx, -(%ebp);xorl %ecx, %ecx;pushl %ecx": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <RtlQueryRegistryValues>;testl %eax, %eax": 1,
                "pushl %ebx;pushl (%ebp);calll - <IoWMISetNotificationCallback+>;cmpl %ebx, %eax;movl %eax, (%ebp)": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl $, (%ebp);cmpl %ebx, (%ebp);jl  <IoWMISetNotificationCallback+>;movl -(%ebp), %esi": 1,
                "jl  <IoWMISetNotificationCallback+>;movzwl -(%ebp), %edx;incl %edx;incl %edx;leal (%edx), %eax": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;imull %ecx, %eax;cmpl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, %esi;addl %eax, %ebx;shrl $, %ecx;xorl %eax, %eax;movl %ebx, %edi": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl $, (%ebp);pushl %ebx;pushl -(%ebp);pushl (%ebp)": 1,
                "pushl (%edi);pushl (%edi);calll - <IoWMISetNotificationCallback+>;testb %al, %al;jne  <IoWMISetNotificationCallback+>": 1,
                "movl (%ebp), %ecx;andl $, %ecx;jne  <IoWMISetNotificationCallback+>;cmpl %edx, -(%ebp);jne  <IoWMISetNotificationCallback+>": 1,
                "movl %edi, -(%ebp);jmp  <IoWMISetNotificationCallback+>;movzwl -(%ebp), %ecx;orl $, (%ebp);incl %ecx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%edx), %edx;orl (%ebp), %edx;movl %edx, -(%ecx)": 1,
                "movl $, -(%ebp);jmp - <IoWMISetNotificationCallback+>;movl %edx, -(%ebp);cmpl %edx, -(%ebp);je  <IoWMISetNotificationCallback+>": 1,
                "pushl (%ebx);calll - <IoWMISetNotificationCallback+>;xorl %ecx, %ecx;cmpl %ecx, %eax;jne  <IoWMISetNotificationCallback+>": 1,
                "movl (%eax), %edx;movl %edx, (%ebp);jne  <IoWMISetNotificationCallback+>;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "calll *%edi;jmp  <IoWMISetNotificationCallback+>;movl $, %edi;jmp - <IoWMISetNotificationCallback+>;movl (%edi), %edi": 1,
                "cmpl %ecx, %edi;je  <IoWMISetNotificationCallback+>;pushl $;pushl %ecx;jmp  <IoWMISetNotificationCallback+>": 1,
                "pushl %ecx;pushl $;pushl (%ebp);pushl %esi;pushl (%ebp)": 1,
                "xorl %edi, %edi;movl %ecx, (%esi);movl %ecx, (%esi);jmp  <IoWMISetNotificationCallback+>;movl $, %edi": 1,
                "cmpb $-, %al;pushl %edx;addb %ch, %dl;xchgl %edx, %eax;pushl %edx": 1,
                "addb %al, %dl;nop;pushl %edx;addb %al, -(%ebx);xchgl %ebx, %eax": 1,
                "pushl %eax;pushl (%esi);pushl $;calll - <IoWMISetNotificationCallback+>;pushl %edi": 4,
                "jmp  <IoWMISetNotificationCallback+>;andl $-, (%ebx);cmpl %edi, (%ebx);jbe  <IoWMISetNotificationCallback+>;movl (%esi), %ecx": 1,
                "orl $, (%ebx);orl %eax, (%esi);pushl %edi;pushl $;calll - <KeReleaseMutex>": 1,
                "pushl %ebx;calll - <IoWMISetNotificationCallback+>;pushl %ebx;pushl $;calll - <IoWMISetNotificationCallback+>": 2,
                "je  <IoWMISetNotificationCallback+>;testb $-, (%edi);je  <IoWMISetNotificationCallback+>;testb $, (%edi);jne  <IoWMISetNotificationCallback+>": 1,
                "calll - <NtTraceEvent+>;movl (%ebp), %ebx;cmpl %esi, (%ebx);movl (%ebx), %eax;movl %esi, -(%ebp)": 1,
                "cmpl %esi, (%ebx);movl (%ebx), %eax;movl %esi, -(%ebp);movl %eax, (%ebp);jbe  <IoWMISetNotificationCallback+>": 1,
                "movl (%ebp), %ecx;addl $, %esi;leal (%eax), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl (%edx), %esi;movl %esi, (%eax);movl %ecx, (%eax);movl %eax, (%esi);movl %eax, (%edx)": 1,
                "cmpl %edi, %esi;jne - <IoWMISetNotificationCallback+>;pushl %ebx;pushl $;calll - <IoWMISetNotificationCallback+>": 1,
                "leal (%ebp), %eax;pushl %eax;pushl %edi;pushl (%ebp);calll - <IoWMISetNotificationCallback+>": 1,
                "pushl (%ebp);calll - <IoWMISetNotificationCallback+>;testl %eax, %eax;jne - <IoWMISetNotificationCallback+>;pushl (%ebp)": 1,
                "calll - <wcslen>;popl %ecx;incl %eax;popl %edi;popl %ebp": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %edx;pushl %esi": 1,
                "movl $, %edi;testl %edi, (%ebx);je  <IoWMISetNotificationCallback+>;movl $, %ecx;orl %ecx, (%esi)": 1,
                "pushl (%ebp);calll - <IoWMISetNotificationCallback+>;testl %eax, %eax;jl  <IoWMISetNotificationCallback+>;movl (%ebp), %eax": 1,
                "je  <IoWMISetNotificationCallback+>;movzwl (%eax), %eax;cmpl -(%ebp), %eax;jbe  <IoWMISetNotificationCallback+>;movl %eax, -(%ebp)": 1,
                "movl %eax, (%ebp);je  <IoWMISetNotificationCallback+>;andl $, (%ebp);testl %esi, %esi;jbe  <IoWMISetNotificationCallback+>": 1,
                "movzwl (%edi), %ecx;movl %ecx, %edx;shrl $, %ecx;leal (%ebx), %eax;leal (%edi), %esi": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movzwl (%ecx), %ecx": 1,
                "je  <IoWMISetNotificationCallback+>;orb $, (%esi);movl , %eax;leal (%eax), %ecx;movl (%ecx), %edx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl , %ecx": 1,
                "addb %al, (%esi);decl %edi;addb %al, (%eax);addb %cl, %ah;int": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>;pushl %esi": 1,
                "leal (%ebx), %edi;leal -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);addl $, %eax": 1,
                "leal (%ebx), %eax;pushl $;movsl (%esi), %es:(%edi);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);pushl %eax;movw $, (%ebx);calll - <wcscpy>;movl (%ebx), %eax": 1,
                "pushl %ebx;calll - <IoWMISetNotificationCallback+>;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "pushl %ecx;movl (%ebp), %eax;movl (%eax), %ecx;testl %ecx, %ecx;je  <IoWMISetNotificationCallback+>": 1,
                "testl %ecx, %ecx;jbe  <IoWMISetNotificationCallback+>;pushl %ebx;pushl %esi;pushl %edi": 1,
                "jmp  <IoWMISetNotificationCallback+>;movl (%ebp), %eax;movl (%eax), %ecx;testb $, %cl;je  <IoWMISetNotificationCallback+>": 1,
                "movl (%ebp), %esi;movl %edi, (%ebx);movl $, (%ebx);movl $, (%ebx);leal (%ebx), %edi": 1,
                "addl $-, %edx;movw %dx, (%esi);movl (%eax), %eax;pushl (%eax,%ecx,);addl $, %esi": 1,
                "pushl %ebx;calll - <ExFreePoolWithTag>;incl -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl $;leal (%eax,%esi), %esi;xorl %edi, %edi": 1,
                "testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>;andl $, (%ebx);movl (%ebp), %eax;movl %esi, (%ebx)": 1,
                "addl %ebx, %eax;decl %ecx;decl %ecx;movw %cx, (%eax);movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;decl %ecx;decl %ecx;movw %cx, (%eax);leal (%eax), %edi": 1,
                "calll - <ExAllocatePoolWithTag>;pushl %edi;pushl (%ebp);movl %eax, (%esi);calll - <wcslen>": 1,
                "pushl %ecx;calll - <wcscpy>;pushl (%ebp);pushl (%esi);calll - <wcscpy>": 1,
                "addl $, %esp;pushl %ebx;calll - <NtTraceEvent+>;movl , %eax;leal (%eax), %ecx": 1,
                "pushl $;movl %esi, (%ecx);calll - <KeReleaseMutex>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "movl (%edi), %edx;movl %edx, %ecx;movl (%ecx), %eax;cmpl %esi, %eax;je  <IoWMISetNotificationCallback+>": 1,
                "movl %esi, (%edx,%ebx,);movl (%edi), %eax;cmpl %eax, %ebx;jne  <IoWMISetNotificationCallback+>;leal (%edi), %edx": 1,
                "cmpl %eax, %ebx;jne  <IoWMISetNotificationCallback+>;leal (%edi), %edx;leal (%edi), %ebx;cmpl %edx, (%ebx)": 1,
                "pushl %eax;pushl %ebx;calll - <IoWMISetNotificationCallback+>;testb %al, %al;je  <IoWMISetNotificationCallback+>": 1,
                "jmp  <IoWMISetNotificationCallback+>;leal -(%eax), %edx;movl (%edx), %esi;testl %esi, %esi;je  <IoWMISetNotificationCallback+>": 1,
                "cmpl %ecx, %eax;jne - <IoWMISetNotificationCallback+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <IoWMISetNotificationCallback+>;orb $, (%esi);pushl %ebx": 1,
                "movl (%esi), %eax;pushl %edi;movl (%ebp), %edi;movl (%edi), %ecx;xorl %eax, %ecx": 1,
                "pushl (%eax,%ebx,);calll - <wcscmp>;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "movl %ecx, (%eax);pushl (%edi);pushl (%edi);pushl %esi;pushl (%ebp)": 1,
                "movl %eax, (%esi);movl %esi, (%ecx);movl %esi, (%eax);cmpl $, (%ebp);je  <IoWMISetNotificationCallback+>": 1,
                "pushl %ebx;calll - <IoWMISetNotificationCallback+>;jmp  <IoWMISetNotificationCallback+>;pushl %esi;pushl %ebx": 1,
                "jmp  <IoWMISetNotificationCallback+>;pushl %esi;pushl %ebx;calll - <IoWMISetNotificationCallback+>;pushl -(%ebp)": 1,
                "xorl %edi, %edi;jmp  <IoWMISetNotificationCallback+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;cmpl %eax, (%ecx);pushl %esi": 1,
                "movl (%ebx), %eax;cmpl %eax, (%ecx);pushl %esi;pushl %edi;jne  <IoWMISetNotificationCallback+>": 1,
                "movl %eax, %edi;testl %edi, %edi;movl %edi, (%ebp);je  <IoWMISetNotificationCallback+>;movl (%ebx), %ecx": 1,
                "movl %esi, (%eax,%edx,);incl (%ecx);popl %edi;popl %esi;popl %ebx": 1,
                "leal -(%ebp), %eax;jmp  <IoWMISetNotificationCallback+>;pushl (%ebp);pushl %esi;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl (%ebp);calll - <IoWMISetNotificationCallback+>": 1,
                "pushl (%ebx);calll - <IoWMISetNotificationCallback+>;incl (%ebp);movl (%ebp), %eax;cmpl -(%ebp), %eax": 1,
                "cmpl %eax, %esi;movl %ebx, -(%ebp);je  <IoWMISetNotificationCallback+>;pushl (%esi);incl %ebx": 1,
                "popl %ecx;movl %eax, -(%ebp);jne - <IoWMISetNotificationCallback+>;testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>": 1,
                "movl %ebx, (%ecx);movl , %eax;movl (%eax), %esi;cmpl %eax, %esi;je  <IoWMISetNotificationCallback+>": 1,
                "pushl %eax;calll - <wcscpy>;pushl (%esi);calll - <wcslen>;leal (%edi,%eax,), %edi": 1,
                "pushl (%esi);calll - <wcslen>;leal (%edi,%eax,), %edi;movl (%ebp), %eax;movl %edi, (%ebx)": 1,
                "jmp  <IoWMISetNotificationCallback+>;cmpl $, (%ebp);jne  <IoWMISetNotificationCallback+>;leal -(%esi), %eax;pushl %eax": 1,
                "je  <IoWMISetNotificationCallback+>;movl %edi, -(%ebp);movb $, -(%ebp);jmp  <IoWMISetNotificationCallback+>;calll - <IoWMISetNotificationCallback+>": 1,
                "cmpb $, -(%ebp);jne  <IoWMISetNotificationCallback+>;movl (%ebx), %eax;movl %eax, (%edi);movl (%ebp), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%edi);movl (%ebp), %eax;testl %eax, %eax;je  <IoWMISetNotificationCallback+>": 1,
                "jne  <IoWMISetNotificationCallback+>;testl $, %ecx;je  <IoWMISetNotificationCallback+>;testb $, %ch;je  <IoWMISetNotificationCallback+>": 1,
                "pushl (%eax);pushl %ebx;pushl (%ebp);pushl (%ebp);pushl %esi": 1,
                "rep  cmpsl %es:(%edi), (%esi);jne  <IoWMISetNotificationCallback+>;movl %ebx, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %esi;movl (%ebp), %ebx;movl (%ebp), %eax;incl -(%ebp);movl -(%ebp), %ecx": 1,
                "pushl %esi;pushl $;movl %eax, -(%ebp);calll - <KeReleaseMutex>;cmpl %esi, -(%ebp)": 1,
                "pushl %edi;pushl $;calll - <IoWMISetNotificationCallback+>;movl %esi, %eax;jmp  <IoWMISetNotificationCallback+>": 1,
                "xorl %ebx, %ebx;cmpb $, -(%ebp);jne  <IoWMISetNotificationCallback+>;testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>": 1,
                "jne  <IoWMISetNotificationCallback+>;testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>;movl %ebx, (%edi);xorl %esi, %esi": 1,
                "movl %eax, %esi;testl %ebx, %ebx;je  <IoWMISetNotificationCallback+>;cmpw $, (%ebx);je  <IoWMISetNotificationCallback+>": 1,
                "je  <IoWMISetNotificationCallback+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;pushl $": 1,
                "pushl $;pushl %esi;calll - <ExFreePoolWithTag>;pushl $;pushl %edi": 1,
                "retl $;cmpl $, %edx;movl (%ebp), %edi;jne  <IoWMISetNotificationCallback+>;addl $, %edi": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movb $, %al": 1,
                "popl %ecx;popl %ecx;je  <IoWMISetNotificationCallback+>;movl $, %eax;popl %ebp": 1,
                "cmpl %ecx, %eax;je  <IoWMISetNotificationCallback+>;cmpl $, (%eax);movl %ecx, (%ebp);jbe  <IoWMISetNotificationCallback+>": 1,
                "movl (%edi), %esi;cmpl %ecx, %esi;movl %esi, (%ebx);jbe  <IoWMISetNotificationCallback+>;pushl $": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);jmp  <IoWMISetNotificationCallback+>;movl $, (%ebp);movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 3,
                "pushl $;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);popl %eax": 2,
                "calll - <ZwClose>;xorl %eax, %eax;cmpl %esi, %edi;popl %edi;setge %al": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);movb $, -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <ZwEnumerateKey>;incl -(%ebp);cmpl %ebx, %eax": 1,
                "pushl $;pushl $;pushl $;pushl $;calll - <IoWMISetNotificationCallback+>": 2,
                "pushl $;calll - <IoWMISetNotificationCallback+>;movb $, ;pushl $;pushl $": 1,
                "shrl $, %ecx;movl %eax, %esi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 2,
                "cmpb %bl, %al;je  <IoWMISetNotificationCallback+>;xorl %esi, %esi;movl , %eax;movl %eax, %edx": 1,
                "pushl ;pushl %ecx;pushl %eax;calll - <MmMapIoSpace>;movl (%ebp), %ecx": 1,
                "cmpl %ebx, %eax;je  <IoWMISetNotificationCallback+>;movl , %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);movl , %eax;jmp  <IoWMISetNotificationCallback+>;movl $, %esi": 1,
                "movl %ebx, (%ecx);movl , %edx;leal (%edx,%eax), %esi;movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "jne  <IoWMISetNotificationCallback+>;movl %eax, (%ecx);movl %ebx, -(%ebp);orl $-, -(%ebp);jmp  <IoWMISetNotificationCallback+>": 1,
                "movl %eax, (%ecx);movl %ebx, -(%ebp);orl $-, -(%ebp);jmp  <IoWMISetNotificationCallback+>;movzbl (%eax), %edx": 1,
                "movl %eax, -(%ebp);cmpw %bx, (%eax);je  <IoWMISetNotificationCallback+>;cmpl %esi, %eax;jae  <IoWMISetNotificationCallback+>": 1,
                "orl $-, -(%ebp);xorl %ebx, %ebx;movl -(%ebp), %esi;cmpl %ebx, %esi;jge  <IoWMISetNotificationCallback+>": 1,
                "xorl %ecx, %ecx;pushl $;pushl $;pushl %ecx;pushl %eax": 1,
                "calll - <MmMapIoSpace>;movl %eax, %esi;movl %esi, -(%ebp);leal (%esi), %eax;movl %esi, %ecx": 1,
                "movzbl (%edx,%edi), %edx;addl -(%ebp), %edx;movb %dl, -(%ebp);incl -(%ebp);xorl %ebx, %ebx": 1,
                "je  <IoWMISetNotificationCallback+>;movl (%ebp), %edx;movl %ebx, (%edx);movl (%ecx), %eax;movl %eax, (%edx)": 1,
                "movl (%ecx), %eax;movl %eax, (%edx);movb (%ecx), %al;movl (%ebp), %edx;movb %al, (%edx)": 1,
                "movl %eax, (%edx);movb (%ecx), %al;movl (%ebp), %edx;movb %al, (%edx);movzwl (%ecx), %eax": 1,
                "movl %ebx, -(%ebp);je  <IoWMISetNotificationCallback+>;cmpl %eax, (%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);movl %eax, (%ebp);movl %eax, -(%ebp);jbe  <IoWMISetNotificationCallback+>": 1,
                "movl %esi, -(%ebp);movl %eax, (%ebp);movl %eax, -(%ebp);jbe  <IoWMISetNotificationCallback+>;pushl %edi": 1,
                "movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %ecx;movl %ecx, (%eax);addl $, %eax": 2,
                "movl %eax, (%ebp);subl %esi, -(%ebp);addl %esi, %ebx;incl -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;pushl -(%ebp);movl %ecx, (%eax);calll - <MmUnmapIoSpace>;jmp  <IoWMISetNotificationCallback+>": 1,
                "pushl %eax;calll - <IoWMISetNotificationCallback+>;cmpl %edi, %eax;jl  <IoWMISetNotificationCallback+>;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <IoWMISetNotificationCallback+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);xorl %edi, %edi;jmp  <IoWMISetNotificationCallback+>;pushl %edi": 1,
                "movl %ebx, -(%ebp);jmp  <IoWMISetNotificationCallback+>;movl %edi, ;movl %edi, ;orl $-, -(%ebp)": 1,
                "pushl -(%ebp);calll - <MmUnmapIoSpace>;cmpl $, %ebx;setne %al;movb %al, ": 1,
                "jb  <IoWMISetNotificationCallback+>;movzbw (%ecx), %di;movzbw (%ecx), %dx;movzbl %al, %eax;movb $, %bl": 1,
                "cmpb $, %bl;movl (%ebp), %eax;movl -(%ebp), %esi;movw %dx, (%eax);leal (%edi,%eax), %edx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <IoWMISetNotificationCallback+>;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "pushl -(%ebp);xorl %eax, %eax;pushl %eax;pushl -(%ebp);calll - <MmMapIoSpace>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;pushl %edx;andl $, %ecx;pushl %eax": 1,
                "pushl $;movb $, ;calll - <KeReleaseMutex>;xorl %eax, %eax;retl $": 1,
                "leal (,%eax,), %eax;pushl %eax;pushl $;pushl $;calll ": 1,
                "calll ;andl $, ;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 1,
                "int;int;movl , %eax;pushl %esi;pushl %edi": 1,
                "pushl %esi;pushl %edi;calll - <wctomb+>;pushl %esi;pushl %edi": 1,
                "je  <IoWMISetNotificationCallback+>;calll - <IoWMISetNotificationCallback+>;movl , %edi;testl %edi, %edi;je  <IoWMISetNotificationCallback+>": 1,
                "pushl $;xorl %eax, %eax;popl %ecx;rep  stosl %eax, %es:(%edi);andl %eax, ": 1,
                "je  <IoWMISetNotificationCallback+>;orl %edi, %eax;orl %edi, (%esi);movl %eax, (%esi);cmpl $, (%ebp)": 1,
                "orl %edi, %eax;orl %edi, (%esi);movl %eax, (%esi);cmpl $, (%ebp);jne  <IoWMISetNotificationCallback+>": 1,
                "jl  <IoWMISetNotificationCallback+>;testb $, (%esi);je  <IoWMISetNotificationCallback+>;calll ;testl %eax, %eax": 1,
                "cmpl $, (%ebp);je  <IoWMISetNotificationCallback+>;testl %esi, %esi;je  <IoWMISetNotificationCallback+>;testl %edi, (%esi)": 1,
                "jl  <IoWMISetNotificationCallback+>;movb $, -(%ebp);testb $, (%esi);je  <IoWMISetNotificationCallback+>;movl , %eax": 1,
                "movb $, -(%ebp);testb $, (%esi);je  <IoWMISetNotificationCallback+>;movl , %eax;orl $, (%eax)": 1,
                "xorb %al, %al;jmp  <ExAcquireRundownProtectionEx+>;movb $, %al;popl %esi;popl %ebx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);cmpl %esi, %eax": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;pushl $;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "cmpl %esi, %ebx;movl %ebx, -(%ebp);jne  <ExfAcquirePushLockExclusive+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movb $, -(%ebp);je  <ExfAcquirePushLockExclusive+>": 1,
                "pushl %ebx;movl (%ecx), %ebx;pushl %esi;pushl %edi;movl %ecx, -(%ebp)": 1,
                "xorl %ecx, %ecx;cmpb $, (%edx);je  <ExfReleasePushLock+>;leal (%edx), %eax;cmpl $, (%eax)": 1,
                "je  <ExfReleasePushLock+>;movl %eax, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "orl %ecx, %eax;shll %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %esi, -(%ebp);movl %ecx, -(%ebp);movl %edi, -(%ebp);movl %edi, (%esi);movl -(%ebp), %eax": 1,
                "jne - <ExfReleasePushLock+>;cmpl %ebx, %edi;je  <ExfReleasePushLock+>;cmpb %bl, -(%ebp);jne  <ExfReleasePushLock+>": 1,
                "pushl %ebx;pushl %edi;calll - <KeWaitForSingleObject>;popl %edi;popl %esi": 1,
                "je  <ExfReleasePushLock+>;cmpb %bl, ;jne  <ExfReleasePushLock+>;pushl $;pushl $": 1,
                "movl %edx, %ecx;shll %cl, %eax;pushl %eax;calll - <KeSetSystemAffinityThread>;pushl $": 1,
                "cmpl $, %eax;je  <ExfReleasePushLock+>;movl %edi, %ecx;calll - <ExfReleasePushLock>;addl $, %esi": 1,
                "pushl %esi;movl (%ebp), %esi;movl %edx, (%eax);movl %esi, (%eax);movl %ecx, (%eax)": 1,
                "calll - <NtFreeVirtualMemory+>;movl %eax, ;popl %ebp;retl $;int": 1,
                "pushl %ebx;pushl %ebx;pushl ;pushl %esi;calll - <ObOpenObjectByName>": 2,
                "calll - <ObOpenObjectByName>;movl %eax, %edi;jmp  <ExCreateCallback+>;movl $, %edi;cmpl %ebx, %edi": 1,
                "movb (%ebp), %al;movb %al, (%esi);leal (%esi), %eax;movl $, (%esi);movl %eax, (%eax)": 1,
                "pushl %ebx;leal (%ebp), %eax;pushl %eax;pushl %ebx;pushl ": 6,
                "pushl ;pushl %ebx;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;pushl -(%ebp)": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 2,
                "movl %ebx, %ecx;calll - <ExReleaseRundownProtectionEx>;popl %edi;movb $, %al;jmp  <ExCreateCallback+>": 1,
                "cmpl %edi, %eax;movl %esi, -(%ebp);ja  <ExCreateCallback+>;movl %esi, %eax;andl $-, %eax": 1,
                "movl %esi, %eax;andl $-, %eax;cmpl %eax, %ebx;jne  <ExCreateCallback+>;leal (%esi), %eax": 1,
                "leal (%eax), %edx;movl $, %ecx;calll - <ExfInterlockedInsertTailList>;popl %ebp;retl $": 1,
                "calll - <PsGetCurrentProcessSessionId>;cmpl %eax, (%ebp);jne  <ExInitializePagedLookasideList+>;pushl (%ebp);calll *(%ebp)": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl %eax, %esi;testl %esi, %esi;jne  <ExInitializePagedLookasideList+>;movl $, %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl %edx, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp)": 2,
                "movb (%ebp), %dl;movl $, (%ebp);movb %dl, -(%ebp);jne  <ExInitializePagedLookasideList+>;leal (%ebp), %eax": 1,
                "movl -(%eax), %eax;cmpl , %eax;jne  <ExInitializePagedLookasideList+>;pushl $;pushl %ecx": 1,
                "jne  <ExInitializePagedLookasideList+>;pushl $;pushl %ecx;leal (%ebp), %eax;pushl %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl ;calll - <ExInitializePagedLookasideList+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %ecx, -(%ebp);movb (%ebp), %cl;movb %cl, -(%ebp);movl (%ebp), %ecx": 1,
                "pushl (%ebp);pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi": 4,
                "imull $, %eax, %eax;xorl %edx, %edx;pushl $;popl %esi;divl %esi": 1,
                "divl %esi;incl %ecx;imull $, %ecx, %ecx;cmpl %eax, %ecx;jbe  <ExInitializePagedLookasideList+>": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);movl $, %eax;jmp  <ExInitializePagedLookasideList+>;movl (%ebp), %eax": 1,
                "testl %edx, %edx;jge  <ExInitializePagedLookasideList+>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 1,
                "pushl %ebx;calll - <PsReturnProcessNonPagedPoolQuota>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx)": 2,
                "pushl %ebx;calll - <PsChargeProcessPagedPoolQuota>;testl %eax, %eax;jge  <ExInitializePagedLookasideList+>;pushl $": 1,
                "jne  <ExInitializePagedLookasideList+>;pushl %eax;pushl %esi;calll - <ExFreePoolWithTag>;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;je  <ExInitializePagedLookasideList+>;pushl $;pushl %ebx;calll - <PsReturnProcessPagedPoolQuota>": 1,
                "xorl %eax, %eax;movl %ecx, (%esi);leal (%esi), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx": 2,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx;movl (%esi), %ecx": 1,
                "jb - <ExInitializePagedLookasideList+>;pushl $;pushl %ebx;pushl -(%ebp);calll - <ExInitializePagedLookasideList+>": 2,
                "jmp  <ExInitializePagedLookasideList+>;movl %edi, -(%ebp);movl %ebx, %esi;movl $, %edi;cmpl $, (%esi)": 1,
                "pushl %eax;pushl -(%ebp);calll - <ExInitializePagedLookasideList+>;addl $, %ebx;cmpl %edi, %ebx": 1,
                "calll - <ExInitializePagedLookasideList+>;incl -(%ebp);movl -(%ebp), %ebx;addl $, %esi;cmpl $, -(%ebp)": 1,
                "pushl %edi;calll - <ExInitializePagedLookasideList+>;testl %eax, %eax;jne  <ExInitializePagedLookasideList+>;pushl %esi": 1,
                "testl %eax, %eax;jne  <ExInitializePagedLookasideList+>;pushl %esi;pushl %ebx;pushl (%edi)": 1,
                "movl (%ebx), %eax;leal (%eax,%ecx,), %eax;movl %esi, -(%ebp);movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;xchgl %eax, (%ecx);leal (%edi), %eax;movl %eax, (%ebp)": 1,
                "addl $, %edi;movl %eax, (%ebp);movl %edi, -(%ebp);movl (%edi), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %eax, (%ebp);movl %edi, -(%ebp);movl (%edi), %ebx;movl %ebx, -(%ebp);movl %ebx, (%esi)": 1,
                "movl %ecx, %edx;movl (%esi,%ecx,), %ecx;shll $, %edx;subl %edx, %eax;movl %eax, %edx": 1,
                "cmpb $, (%ebp);je  <ExInitializePagedLookasideList+>;andl $, -(%ebp);movl -(%ebp), %eax;popl %edi": 1,
                "calll - <ExInitializePagedLookasideList+>;movb %al, %bl;movl %edi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl $, %edx;cmpxchgl %edx, (%ecx);cmpl $, %eax;je  <ExInitializePagedLookasideList+>": 2,
                "incl (%esi);jne  <ExInitializePagedLookasideList+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <ExInitializePagedLookasideList+>": 4,
                "calll - <ExInitializePagedLookasideList+>;movl %eax, -(%ebp);movl -(%ebp), %eax;shrl $, %eax;andl $, %eax": 1,
                "leal (%edi), %eax;movl %edi, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movb $, (%esi);calll *;movl -(%ebp), %edx;cmpl %edx, -(%ebp);jne - <ExInitializePagedLookasideList+>": 1,
                "leal -(%ebp), %edx;movl %esi, %ecx;calll - <ExfReleasePushLock+>;popl %esi;leave": 1,
                "xorl %edx, %edx;calll - <ExfReleasePushLock+>;leave;retl $;pushl %ecx": 1,
                "decl (%esi);movl $, %edi;pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl (%ebp), %eax": 1,
                "calll *(%ebp);addl $, %edi;addl $, %esi;decl -(%ebp);jne - <ExInitializePagedLookasideList+>": 1,
                "jne - <ExInitializePagedLookasideList+>;popl %ebx;popl %edi;popl %esi;leave": 1,
                "je  <ExEnumHandleTable+>;movl %esi, -(%ebp);movl (%esi), %ebx;testb $, %bl;movl %ebx, -(%ebp)": 2,
                "movl (%esi), %ebx;testb $, %bl;movl %ebx, -(%ebp);je  <ExEnumHandleTable+>;leal -(%ebx), %eax": 3,
                "pushl (%ebp);pushl -(%ebp);pushl %esi;calll *(%ebp);pushl %esi": 1,
                "calll - <ExInitializePagedLookasideList+>;cmpb $, -(%ebp);jne  <ExEnumHandleTable+>;addl $, -(%ebp);pushl -(%ebp)": 1,
                "calll - <ExAcquireResourceExclusiveLite>;movl , %ebx;cmpl $, %ebx;movl %ebx, -(%ebp);je  <ExEnumHandleTable+>": 2,
                "movl %esi, -(%ebp);movl (%esi), %eax;testb $, %al;movl %eax, -(%ebp);je  <ExEnumHandleTable+>": 2,
                "movl %eax, -(%ebp);je  <ExEnumHandleTable+>;decl %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 3,
                "jne - <ExEnumHandleTable+>;popl %esi;movl $, %ecx;calll - <ExReleaseResourceLite>;incl (%edi)": 2,
                "leal (%eax,%edx), %esi;movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 2,
                "pushl %eax;movl $, (%esi);calll - <RtlWalkFrameChain>;pushl $;pushl $": 2,
                "pushl %eax;calll - <RtlWalkFrameChain>;pushl %ebx;pushl (%ebp);calll - <ExInitializePagedLookasideList+>": 1,
                "pushl %ebx;pushl (%ebp);calll - <ExInitializePagedLookasideList+>;incl (%edi);jne  <ExEnumHandleTable+>": 1,
                "pushl (%ebp);movl %eax, %edi;pushl (%ebp);calll - <ExInitializePagedLookasideList+>;movl %eax, %esi": 1,
                "cmpxchgl %edx, (%ecx);cmpl %ebx, %eax;jne  <ExEnumHandleTable+>;pushl (%ebp);pushl %esi": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <ExEnumHandleTable+>;movl %esi, -(%ebp);movl (%esi), %ebx": 1,
                "movl %fs:, %eax;movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %eax;pushl $": 1,
                "int;incl %ecx;pushl %esi;pushl %edx;incl %esi": 1,
                "je  <ExEnumHandleTable+>;movl %eax, %esi;movl %esi, -(%ebp);movl (%esi), %eax;testb $, %al": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);movl (%esi), %eax;testb $, %al;movl %eax, (%ebp)": 1,
                "cmpxchgl %edx, (%ecx);cmpl (%ebp), %eax;jne  <ExEnumHandleTable+>;movl %esi, %eax;jmp  <ExEnumHandleTable+>": 1,
                "leal (%ecx), %eax;andl $, %eax;leal (%eax,%eax,), %eax;shll $, %eax;leal (%eax,%edx), %esi": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jne  <ExEnumHandleTable+>;incl (%edi);jmp  <ExEnumHandleTable+>": 1,
                "testl %eax, %eax;movl %eax, (%ebp);je  <ExEnumHandleTable+>;cmpl $-, (%eax);jne  <ExEnumHandleTable+>": 1,
                "testl %eax, %eax;movl (%ebp), %eax;jne  <ExEnumHandleTable+>;addl $, %eax;movl %eax, (%ebp)": 1,
                "movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp  <ExEnumHandleTable+>;pushl %edi": 1,
                "pushl %ebx;pushl (%eax);calll - <ExInitializePagedLookasideList+>;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "pushl (%ebp);calll - <ExEnumHandleTable+>;movl %eax, %ebx;testl %ebx, %ebx;je  <ExEnumHandleTable+>": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <ExEnumHandleTable+>;pushl %esi;pushl (%ebp)": 1,
                "je  <ExEnumHandleTable+>;cmpl $-, (%eax);jne  <ExEnumHandleTable+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "cmpl $-, (%eax);jne  <ExEnumHandleTable+>;movl (%eax), %eax;testl %eax, %eax;je  <ExEnumHandleTable+>": 1,
                "je  <ExEnumHandleTable+>;pushl %ebx;pushl (%ebp);calll - <ExInitializePagedLookasideList+>;xorl %eax, %eax": 1,
                "movl %eax, %edi;testl %edi, %edi;je  <ExEnumHandleTable+>;pushl -(%ebp);pushl (%ebp)": 1,
                "jne  <ExEnumHandleTable+>;movl (%ebx), %eax;movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi)": 1,
                "pushl %ebx;pushl (%ebp);calll - <ExInitializePagedLookasideList+>;jmp - <ExEnumHandleTable+>;andl $, -(%ebp)": 1,
                "pushl $;pushl -(%ebp);pushl -(%ebp);pushl %esi;calll - <ExEnumHandleTable+>": 1,
                "jmp  <ExEnumHandleTable+>;movl -(%ebp), %eax;testl %eax, %eax;je  <ExEnumHandleTable+>;andl $, (%eax)": 1,
                "pushl %edi;calll - <ExAcquireResourceExclusiveLite>;movl , %ecx;leal (%esi), %eax;movl %ecx, (%eax)": 1,
                "pushl $;pushl %edi;pushl %esi;calll - <ExEnumHandleTable+>;jmp  <ExEnumHandleTable+>": 1,
                "pushl %edi;pushl %esi;calll - <ExEnumHandleTable+>;jmp  <ExEnumHandleTable+>;xorl %eax, %eax": 1,
                "movl %esi, (%ebp);movl (%esi), %edi;movl (%ebp), %eax;movl %edi, -(%ebp);movl %edi, (%eax)": 1,
                "je  <ExEnumHandleTable+>;xorl %edx, %edx;calll - <ExfReleasePushLock+>;pushl (%ebp);pushl (%ebp)": 1,
                "movl %eax, %esi;testl %esi, %esi;movl (%ebp), %eax;movl %eax, %ecx;jl  <ExEnumHandleTable+>": 1,
                "andl $, (%eax);calll - <ObfDereferenceObject>;movl %esi, %eax;popl %esi;leave": 1,
                "movl (%ebp), %esi;cmpl %ebx, (%ebp);je  <NtCreateEvent+>;cmpl $, (%ebp);je  <NtCreateEvent+>": 1,
                "jl  <NtCreateEvent+>;movl -(%ebp), %ecx;movb (%ebp), %al;movb %al, (%ecx);movb $, (%ecx)": 1,
                "pushl %ebx;pushl %ebx;pushl (%ebp);pushl %ebx;pushl %ecx": 2,
                "calll - <wctomb+>;movl %fs:, %eax;movb (%eax), %bl;movb %bl, -(%ebp);testb %bl, %bl": 4,
                "jb  <NtCreateEvent+>;movl $, (%eax);movl (%esi), %eax;movl %eax, (%esi);orl $-, -(%ebp)": 1,
                "movl (%ebp), %esi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%ebp)": 4,
                "pushl %eax;pushl $;pushl (%ebp);pushl $;pushl -(%ebp)": 4,
                "pushl $;pushl -(%ebp);pushl ;pushl (%ebp);calll - <ObOpenObjectByName>": 4,
                "calll - <ObOpenObjectByName>;movl %eax, -(%ebp);testl %eax, %eax;jl  <NtCreateEvent+>;testb %bl, %bl": 1,
                "movl (%ebp), %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;je  <NtCreateEvent+>;cmpb %bl, %al": 1,
                "movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %esi;jb  <NtCreateEvent+>;movl %ebx, (%eax)": 1,
                "movl $, -(%ebp);movl %edi, (%esi);orl $-, -(%ebp);jmp  <NtCreateEvent+>;movl -(%ebp), %eax": 2,
                "movl %edi, (%esi);movl -(%ebp), %eax;calll - <wctomb+>;retl $;int": 2,
                "je  <NtCreateEvent+>;movl $, %eax;jmp  <NtCreateEvent+>;cmpl $, (%ebp);je  <NtCreateEvent+>": 1,
                "calll - <ObReferenceObjectByHandle>;movl %eax, -(%ebp);cmpl %edi, %eax;jl  <NtCreateEvent+>;movl -(%ebp), %edi": 1,
                "testl %esi, %esi;je  <NtCreateEvent+>;testb %bl, %bl;je  <NtCreateEvent+>;movl $, -(%ebp)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %edi;testb %al, %al;je  <NtSetEvent+>": 1,
                "testb %al, %al;je  <NtSetEvent+>;cmpl %ebx, %edi;je  <NtSetEvent+>;movl , %eax": 1,
                "popal;addb %ch, (%ebp);addb %dh, %gs:(%edi);outsl (%esi), %dx;addb %dh, (%edx)": 2,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;andl $, -(%ebp)": 10,
                "jl  <NtSetEvent+>;leal -(%ebp), %eax;pushl %eax;pushl $;leal -(%ebp), %eax": 7,
                "movl %eax, ;pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %ecx;movl %esi, %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl $, %esi;xorl %edi, %edi": 1,
                "addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);jne  <NtSetEvent+>;jb  <NtSetEvent+>": 5,
                "outsl (%esi), %dx;addb %dh, (%edx);je  <NtSetEvent+>;jae  <NtSetEvent+>;addb %al, (%eax)": 1,
                "addb %ah, %gs:(%eax);addb %al, (%edi);jb  <NtSetEvent+>;outsl (%esi), %dx;addb %dh, (%ebp)": 1,
                "jb  <NtSetEvent+>;outsl (%esi), %dx;addb %dh, (%ebp);jo  <NtSetEvent+>;jae  <NtSetEvent+>": 1,
                "leal -(%ebp), %eax;jae  <NtSetEvent+>;subl %ecx, %edx;movl %edx, %ecx;shrl %ecx": 1,
                "shrl %ecx;movl $, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);adcl %ecx, %ecx": 1,
                "leal -(%ebp,%edx,), %eax;movw %si, (%eax);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %eax, %edi;testl %edi, %edi;jl  <NtSetEvent+>;pushl $;leal -(%ebp), %eax": 2,
                "pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp);movl %ecx, -(%ebp);calll - <ZwOpenKey>": 2,
                "movl %eax, %edi;testl %edi, %edi;jl  <NtSetEvent+>;cmpl $, -(%ebp);jne  <NtSetEvent+>": 1,
                "jbe  <NtSetEvent+>;cmpw $, -(%ebp);jne  <NtSetEvent+>;cmpw $, -(%ebp);jne  <NtSetEvent+>": 1,
                "andl $, -(%ebp);pushl -(%ebp);calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl $, -(%ebp);xorl %edi, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %fs:, %eax": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movb (%eax), %cl": 1,
                "cmpl $, %eax;jg  <NtSetEvent+>;je  <NtSetEvent+>;subl $, %eax;je  <NtSetEvent+>": 1,
                "retl;movl -(%ebp), %esp;cmpl $, -(%ebp);je  <NtSetEvent+>;pushl $": 2,
                "cmpl $, -(%ebp);je  <NtSetEvent+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 4,
                "calll - <MmResetDriverPaging+>;movl $, %eax;jmp  <NtSetEvent+>;movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "calll  <MmMapUserAddressesToPage+>;jmp  <NtSetEvent+>;cmpl $, %esi;jne  <NtSetEvent+>;xorl %eax, %eax": 1,
                "incl %eax;movl %eax, -(%ebp);movl (%ebx), %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebx), %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp);pushl %ebx": 1,
                "calll - <SeSinglePrivilegeCheck>;testb %al, %al;je - <NtSetEvent+>;pushl %esi;pushl %ebx": 1,
                "movl (%ebx), %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp);jmp  <NtSetEvent+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <NtSetEvent+>;movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %eax, (%ebx);andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <NtFreeVirtualMemory+>": 1,
                "retl;movl -(%ebp), %esp;movl -(%ebp), %eax;jmp  <NtSetEvent+>;movl -(%ebp), %ecx": 1,
                "movl %ebx, -(%ebp);cmpl %edi, %ebx;jne  <NtSetEvent+>;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "andl $, -(%ebp);leal -(%ebp), %ebx;movl %ebx, -(%ebp);movl (%ebp), %eax;subl $, %eax": 1,
                "pushl %ebx;calll  <ProbeForRead+>;jmp  <NtSetEvent+>;cmpl $, %esi;je  <NtSetEvent+>": 1,
                "movl $, %eax;orl $-, -(%ebp);jmp  <NtSetEvent+>;pushl (%ebx);calll - <NtSetEvent+>": 1,
                "movl (%edi), %eax;mull ;movl %eax, (%esi);movl %edx, (%esi);movsbl (%edi), %eax": 1,
                "addl %eax, %esi;cmpl %ecx, %edi;movl %ebx, -(%ebp);je  <NtSetEvent+>;leal (%eax), %ecx": 1,
                "cmpl %ecx, %edi;movl %ebx, -(%ebp);je  <NtSetEvent+>;leal (%eax), %ecx;cmpl %eax, %ecx": 1,
                "movl $, -(%ebp);jmp  <NtSetEvent+>;xorl %eax, %eax;movl %eax, (%esi);movl (%edi), %ecx": 1,
                "movl (%edi), %ecx;movl %ecx, (%esi);movl (%edi), %ecx;movl %ecx, (%esi);movw (%edi), %cx": 2,
                "je  <NtSetEvent+>;leal (%eax), %ecx;addl $, %esi;movl %ecx, (%ebp);cmpl %eax, (%ebp)": 1,
                "movw (%edi), %cx;pushl %eax;movw %ax, -(%ebp);leal (%edi), %eax;pushl %eax": 1,
                "movl (%edi), %edi;incl %ebx;cmpl (%ebp), %edi;jne - <NtSetEvent+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <NtSetEvent+>;movl %eax, (%ecx);cmpl $, (%ebp)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);calll  <NtSetEvent+>": 1,
                "orl $-, -(%ebp);calll  <NtSetEvent+>;movl (%ebp), %eax;movl %ebx, (%eax);movl -(%ebp), %eax": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;retl;int;popl %esp": 1,
                "addb %cl, (%ecx);decl %esp;addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%edi)": 2,
                "jne  <NtSetEvent+>;popal;addb %ah, (%edi);addb %dh, %gs:(%ebx);addb %al, (%eax)": 1,
                "leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax;movb %bl, -(%ebp);xorl %edi, %edi": 1,
                "cmpw %bx, (%esi,%edi,);jne - <NtSetEvent+>;cmpl $, %edi;jl  <NtSetEvent+>;addl $, %esi": 1,
                "movb %al, -(%ebp);movl (%ebp), %esi;cmpb %cl, %al;je  <NtSetEvent+>;movl , %eax": 1,
                "subl $, %esp;movl , %eax;pushl %edi;movl (%ebp), %edi;testl $, %edi": 1,
                "pushl %esi;movl $, -(%ebp);movl %ecx, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwQueryValueKey>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "cmpl %ebx, %esi;jl  <NtSetEvent+>;cmpl $, -(%ebp);jne  <NtSetEvent+>;xorl %edx, %edx": 1,
                "jae  <NtSetEvent+>;shll $, %edi;orl %eax, %edi;incl %edx;incl %edx": 1,
                "cmpl $, -(%ebp);jne  <NtSetEvent+>;movl -(%ebp), %edi;jmp  <NtSetEvent+>;movl $, %esi": 1,
                "pushl %edi;calll - <NtSetEvent+>;movl %eax, %esi;cmpl %ebx, %esi;jl  <NtSetEvent+>": 1,
                "decl %eax;jmp  <NtSetEvent+>;movl %esi, %edx;andl $, %edx;cmpl $, %edx": 1,
                "pushl -(%ebp);calll - <ZwSetValueKey>;movl %eax, %esi;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl %esi, %eax;popl %esi;popl %ebx;movl -(%ebp), %ecx;popl %edi": 1,
                "int;decl %ebp;addb %dh, (%ebp);insb %dx, %es:(%edi);addb %dh, (%eax,%eax)": 2,
                "movl %eax, -(%ebp);calll - <NtSetEvent+>;movl %eax, %esi;testl %esi, %esi;jl  <NtSetEvent+>": 1,
                "jl  <NtSetEvent+>;andw $, -(%ebp);leal -(%ebp), %eax;movl %edi, %ecx;andl $, %ecx": 1,
                "decl %eax;decl %eax;leal -(%ebp), %ecx;shrl $, %edi;cmpl %ecx, %eax": 1,
                "andl $, -(%ebp);andl $, -(%ebp);cmpb $, (%ebp);leal -(%ebp), %ecx;movl $, -(%ebp)": 1,
                "testl %esi, %esi;jl  <NtSetEvent+>;movw -(%ebp), %ax;movw %ax, (%ebx);jmp  <NtSetEvent+>": 1,
                "retl $;decl %ebp;addb %dl, (%ebp);decl %ecx;addb %cl, (%eax,%eax)": 1,
                "jne  <NtSetEvent+>;pushl $;leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl (%ebp);pushl $;jmp  <NtSetEvent+>;pushl (%ebp);pushl $": 1,
                "andl $, (%eax);movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %ebx;pushl %ebx": 1,
                "calll - <MmProbeAndLockPages>;orl $-, -(%ebp);orb $, (%esi);testb $, (%esi);je  <NtSetEvent+>": 1,
                "orl $-, -(%ebp);orb $, (%esi);testb $, (%esi);je  <NtSetEvent+>;movl (%esi), %eax": 1,
                "movb %al, -(%ebp);movl (%ebp), %esi;testb %al, %al;je  <NtSetEvent+>;movl , %eax": 1,
                "cmpl $, (%ebp);setne %al;decl %eax;andl $-, %eax;addl $, %eax": 1,
                "pushl $;popl %eax;testl %esi, %esi;je  <NtQuerySystemInformation+>;andl $, (%esi)": 1,
                "cmpl $, %edi;je  <NtQuerySystemInformation+>;movl $, %eax;jmp  <NtQuerySystemInformation+>;pushl %ebx": 1,
                "testl %eax, %eax;jl  <NtQuerySystemInformation+>;testl %esi, %esi;je  <NtQuerySystemInformation+>;movl $, (%esi)": 1,
                "xorl %edx, %edx;movl %edx, -(%ebp);xorl %esi, %esi;movl %esi, -(%ebp);xorl %edi, %edi": 1,
                "movl %edi, -(%ebp);xorl %ecx, %ecx;movl %ecx, -(%ebp);andl %ecx, -(%ebp);movsbl , %eax": 1,
                "cmpl %eax, -(%ebp);jae  <NtQuerySystemInformation+>;movl -(%ebp), %eax;movl (,%eax,), %eax;movl %eax, -(%ebp)": 3,
                "addl (%eax), %edx;movl %edx, -(%ebp);addl (%eax), %esi;movl %esi, -(%ebp);addl (%eax), %edi": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl , %eax;movl %eax, -(%ebp);movl , %eax": 1,
                "je  <NtQuerySystemInformation+>;movl (%ebp), %eax;movl $, (%eax);jmp  <NtQuerySystemInformation+>;cmpl $, %edi": 1,
                "pushl %eax;pushl %edi;pushl %ebx;calll  <RtlCompressBuffer+>;jmp  <NtQuerySystemInformation+>": 3,
                "rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;calll - <KeQuerySystemTime>;movl , %eax": 1,
                "leal -(%ebp), %esi;movl %ebx, %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "je  <NtQuerySystemInformation+>;movl %edx, (%eax);andl $, -(%ebp);jmp  <NtQuerySystemInformation+>;movl -(%ebp), %eax": 1,
                "movl , %eax;movl %eax, (%ebx);movl , %eax;movl %eax, (%ebx);movb , %al": 1,
                "pushl -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;pushl %ebx;pushl %eax": 1,
                "pushl %ebx;pushl %eax;calll - <ExGetCurrentProcessorCounts+>;jmp  <NtQuerySystemInformation+>;pushl $": 1,
                "jmp  <NtQuerySystemInformation+>;pushl $;popl %ecx;movl %ecx, -(%ebp);movl $, %eax": 1,
                "jmp  <NtQuerySystemInformation+>;cmpl %eax, %edi;jne - <NtQuerySystemInformation+>;movl , %ecx;jmp  <NtQuerySystemInformation+>": 2,
                "movl , %ecx;jmp  <NtQuerySystemInformation+>;movl %fs:, %eax;movl %eax, -(%ebp);decl (%eax)": 1,
                "pushl %eax;pushl %edi;pushl %ebx;pushl $;jmp  <NtQuerySystemInformation+>": 1,
                "pushl $;popl %eax;cmpl %eax, %edi;jb  <NtQuerySystemInformation+>;movl %eax, -(%ebp)": 1,
                "movb , %cl;movb %cl, (%ebx);jmp  <NtQuerySystemInformation+>;pushl $;popl %edx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movsbl , %ecx;cmpl %ecx, -(%ebp);jae  <NtQuerySystemInformation+>": 1,
                "movl %ecx, -(%ebp);testl %ecx, %ecx;je  <NtQuerySystemInformation+>;addl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "calll  <LsaDeregisterLogonProcess+>;jmp  <NtQuerySystemInformation+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "pushl %ebx;calll - <NtSetEvent+>;jmp  <NtQuerySystemInformation+>;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %esi, %esi;je  <NtQuerySystemInformation+>;movl %eax, (%esi);cmpl %eax, %edi;jb - <NtQuerySystemInformation+>": 1,
                "pushl %ebx;adcb $, %al;addb %ch, (%esp,%edx);addb %cl, -(%eax);adcb $, %al": 1,
                "adcb $, %al;addb %dh, -(%esi);adcb $, %al;addb %dl, (%ebx);adcl $, %eax": 1,
                "pushl %ebx;addb %bh, (%ebp);pushl %ebx;addb %cl, (%ecx);pushl %ebx": 1,
                "adcl $, %eax;pushl %ebx;addb %bh, (%edx);pushl %ebx;addb %ah, (%edi)": 1,
                "addb %bh, (%edx);pushl %ebx;addb %ah, (%edi);popl %ss;pushl %ebx": 1,
                "pushl %ebx;addb %ah, (%edi);popl %ss;pushl %ebx;addb %ch, %ah": 1,
                "cmpl %ebx, (%eax);pushl %ebx;addb %cl, (%ebx);pushl %ebx;addb %cl, (%esi)": 1,
                "pushl %ebx;addb %dl, (%ecx,%ebx);addb %bl, (%ecx);sbbl %edx, (%ebx);xorb (%ecx), %bl": 1,
                "pushl $;pushl %esi;calll  <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax;jge  <NtQuerySystemInformation+>": 1,
                "pushl (%esi);calll  <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax;jge  <NtQuerySystemInformation+>;pushl %ebx": 3,
                "calll - <NtClose>;incl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl %edi;pushl %ebx;pushl -(%ebp);pushl (%esi)": 1,
                "pushl %ebx;pushl %ebx;pushl %eax;pushl $;jmp - <NtQuerySystemInformation+>": 2,
                "pushl $;jmp - <NtQuerySystemInformation+>;pushl %ebx;pushl %ebx;pushl %eax": 1,
                "pushl $;pushl %ebx;pushl %ebx;pushl %ebx;pushl $": 5,
                "pushl %esi;jne  <NtQuerySystemInformation+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "jne  <NtQuerySystemInformation+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 2,
                "movl , %edi;pushl $;popl %ecx;leal -(%ebp), %esi;rep  movsl (%esi), %es:(%edi)": 1,
                "movb %bl, -(%ebp);popl %edi;calll  <LsaDeregisterLogonProcess+>;movl , %eax;pushl (%eax)": 1,
                "movl , %eax;pushl (%eax);leal (%eax), %ecx;pushl %ecx;pushl (%eax)": 2,
                "jmp  <NtQuerySystemInformation+>;cmpl %ebx, ;leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %ebx;pushl %eax;pushl ;calll  <LsaDeregisterLogonProcess+>": 1,
                "cmpb %bl, -(%ebp);movl %eax, %esi;je  <NtQuerySystemInformation+>;calll  <LsaDeregisterLogonProcess+>;cmpl %ebx, %esi": 2,
                "cmpb %bl, -(%ebp);je  <NtQuerySystemInformation+>;pushl $;pushl $;pushl %ebx": 1,
                "pushl %eax;calll - <RtlInitUnicodeString>;calll  <LsaDeregisterLogonProcess+>;pushl $;pushl $": 2,
                "movl %ebx, -(%ebp);cmpl %edi, %ebx;jne  <NtShutdownSystem+>;movl $, %eax;jmp  <NtShutdownSystem+>": 1,
                "cmpl %edi, %ebx;jne  <NtShutdownSystem+>;movl $, %eax;jmp  <NtShutdownSystem+>;movl $, -(%ebp)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl %ebx, -(%ebp)": 1,
                "rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %esi;pushl $": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlUnicodeStringToOemString>;pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;orl $-, -(%ebp);jmp  <NtShutdownSystem+>;xorl %eax, %eax;jmp - <NtShutdownSystem+>": 1,
                "movl %fs:, %eax;movb (%eax), %al;xorl %ebx, %ebx;cmpb %bl, %al;je  <ExSystemExceptionFilter+>": 1,
                "movb (%eax), %al;xorl %ebx, %ebx;cmpb %bl, %al;je  <ExSystemExceptionFilter+>;movl %ebx, -(%ebp)": 1,
                "addb %ah, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx);addb %ah, (%di);jb  <ExSystemExceptionFilter+>": 1,
                "js  <ExSystemExceptionFilter+>;addb %al, (%eax);int;int;int": 1,
                "xorl %ebx, %ebx;pushl %esi;movb %bl, -(%ebp);calll - <ExAcquireResourceSharedLite>;movl , %eax": 1,
                "jne  <ExSystemExceptionFilter+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 2,
                "cmpb %bl, -(%ebp);je  <ExSystemExceptionFilter+>;calll  <LsaDeregisterLogonProcess+>;movl %esi, %ecx;calll - <ExReleaseResourceLite>": 1,
                "movb $, %cl;movb $, (%eax);calll *;xorb %al, %al;jmp  <ExSystemExceptionFilter+>": 1,
                "xorl %eax, %edx;incl %ecx;cmpl $, %ecx;jb - <ExSystemExceptionFilter+>;cmpw $, %dx": 1,
                "movl $, %eax;jmp  <ExSystemExceptionFilter+>;movl $, -(%ebp);movl -(%ebp), %eax;leal -(%ebp,%eax), %eax": 1,
                "addl %ecx, %edi;movl %esi, %ebx;andl $, %ebx;movl (,%ebx,), %ebx;addl %esi, %ebx": 1,
                "movl (,%ebx,), %ebx;addl %esi, %ebx;xorl %ebx, %edi;subl %edi, %edx;decl -(%ebp)": 1,
                "movl %fs:, %eax;xorl %ebx, %ebx;cmpb %bl, (%eax);je  <ExSystemExceptionFilter+>;movl %ebx, -(%ebp)": 1,
                "addl $, %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;cmpl %ebx, %eax;je  <ExSystemExceptionFilter+>": 1,
                "jmp  <ExSystemExceptionFilter+>;cmpl %ebx, %edi;jl  <ExSystemExceptionFilter+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "jl  <ExSystemExceptionFilter+>;pushl -(%ebp);cmpb %bl, -(%ebp);jne  <ExSystemExceptionFilter+>;calll - <ZwLoadKey+>": 1,
                "cmpl %ebx, %eax;jl  <ExSystemExceptionFilter+>;movl %ebx, -(%ebp);jmp  <ExSystemExceptionFilter+>;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);jmp  <ExSystemExceptionFilter+>;movl %eax, -(%ebp);pushl -(%ebp);calll - <ZwClose>": 1,
                "jmp  <ExSystemExceptionFilter+>;movl %eax, -(%ebp);pushl -(%ebp);calll - <ZwClose>;jmp  <ExSystemExceptionFilter+>": 1,
                "movl %eax, -(%ebp);pushl -(%ebp);calll - <ZwClose>;jmp  <ExSystemExceptionFilter+>;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <ExSystemExceptionFilter+>;pushl (%ebp)": 1,
                "movl , %eax;cmpl %eax, %ebx;jb  <ExSystemExceptionFilter+>;movl $, (%eax);movl (%ebx), %eax": 1,
                "movl $, %ecx;movl (%edi), %eax;movl %eax, %edx;andl %ecx, %edx;lock": 1,
                "pushl $;calll - <KeSetSystemAffinityThread>;pushl ;calll *;movl %eax, %esi": 2,
                "pushl %edi;calll *;movl %eax, %esi;calll - <KeRevertToUserAffinityThread>;movl %esi, ": 2,
                "movl (%ebp), %ebx;calll - <ExSystemExceptionFilter+>;movl %fs:, %eax;cmpb $, (%eax);je  <ExSystemExceptionFilter+>": 1,
                "movl %fs:, %eax;cmpb $, (%eax);je  <ExSystemExceptionFilter+>;movl $, -(%ebp);movl %esi, (%ebx)": 1,
                "movl -(%ebp), %esp;jmp - <ExSystemExceptionFilter+>;movl %esi, (%ebx);movl -(%ebp), %eax;calll - <wctomb+>": 1,
                "movl %ecx, %esi;jne  <ExSetTimerResolution+>;cmpl %eax, ;je  <ExSetTimerResolution+>;decl ": 1,
                "jae  <ExSetTimerResolution+>;movl %eax, %edi;cmpl %ecx, %edi;jae  <ExSetTimerResolution+>;pushl $": 1,
                "popl %edi;calll - <ExSystemExceptionFilter+>;movl %esi, %eax;popl %esi;popl %ebp": 1,
                "addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <ExSetTimerResolution+>;jns  <ExSetTimerResolution+>;popl %esp": 3,
                "je  <ExSetTimerResolution+>;jb  <ExSetTimerResolution+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%ebx)": 1,
                "outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%edi);imull $, (%eax), %eax;outsl (%esi), %dx": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %ebx;addb %ch, (%eax);jne  <ExSetTimerResolution+>": 1,
                "pushl %ebx;addb %ch, (%eax);jne  <ExSetTimerResolution+>;je  <ExSetTimerResolution+>;addb %ch, %fs:(%edi)": 1,
                "addb %ch, (%eax);jne  <ExSetTimerResolution+>;je  <ExSetTimerResolution+>;addb %ch, %fs:(%edi);ja  <ExSetTimerResolution+>": 1,
                "je  <ExSetTimerResolution+>;addb %ch, %fs:(%edi);ja  <ExSetTimerResolution+>;outsb (%esi), %dx;addb %dl, (%eax,%eax)": 1,
                "outsb (%esi), %dx;addb %dl, (%eax,%eax);addb %ch, (%ebp);addb %al, %gs:(%eax);addb %cl, %ah": 1,
                "pushl $;leal (%ebp), %eax;pushl %eax;movl %edi, -(%ebp);movl %ebx, -(%ebp)": 2,
                "jl  <ExSetTimerResolution+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 3,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 3,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 2,
                "calll  <LsaDeregisterLogonProcess+>;pushl (%ebp);calll - <NtClose>;cmpb %bl, ;jne  <ExSetTimerResolution+>": 1,
                "movl $, ;jne  <ExSetTimerResolution+>;cmpb %bl, ;jne  <ExSetTimerResolution+>;movl , %eax": 1,
                "cmpl $, %ecx;jne  <ExSetTimerResolution+>;xorl %ecx, %ecx;andl $, %eax;testl %edi, %edx": 1,
                "jne  <ExSetTimerResolution+>;orl %eax, -(%ebp);jmp  <ExSetTimerResolution+>;shrl $, %esi;notl %esi": 1,
                "orl %eax, -(%ebp);jmp  <ExSetTimerResolution+>;shrl $, %esi;notl %esi;andl $, %esi": 1,
                "calll - <ExReleaseResourceLite>;jmp  <ExSetTimerResolution+>;cmpl $, (%ebp);jne  <ExSetTimerResolution+>;testb $, ": 1,
                "cmpl $, (%ebp);jne  <ExSetTimerResolution+>;testb $, ;je  <ExSetTimerResolution+>;pushl %ebx": 1,
                "movw %bx, ;movw $, ;leal -(%ebp), %eax;pushl %eax;calll - <RtlQueryTimeZoneInformation>": 1,
                "movl (%edi), %eax;cmpl %edx, %eax;movl (%edi), %ecx;jl  <ExSetTimerResolution+>;jg  <ExSetTimerResolution+>": 1,
                "cmpl -(%ebp), %ecx;jae  <ExSetTimerResolution+>;pushl %ebx;pushl %edi;leal -(%ebp), %eax": 1,
                "cmpl -(%ebp), %eax;movl (%edi), %ecx;jl - <ExSetTimerResolution+>;jg  <ExSetTimerResolution+>;cmpl -(%ebp), %ecx": 1,
                "popl %eax;movl %eax, ;movl %eax, ;movl , %esi;cmpl $, %esi": 1,
                "jmp  <ExSetTimerResolution+>;pushl $;calll - <KeCancelTimer>;movl -(%ebp), %eax;movl %esi, ": 1,
                "movb %bl, ;movl -(%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "calll - <wctomb+>;movl (%ebp), %ebx;xorl %edi, %edi;cmpl %edi, %ebx;je  <ExSetTimerResolution+>": 1,
                "xorl %edi, %edi;cmpl %edi, %ebx;je  <ExSetTimerResolution+>;movl %fs:, %eax;movb (%eax), %al": 1,
                "je  <ExSetTimerResolution+>;calll  <ExRaiseDatatypeMisalignment>;movl , %eax;cmpl %eax, %ebx;jb  <ExSetTimerResolution+>": 1,
                "cmpl %eax, %ebx;jb  <ExSetTimerResolution+>;movl %edi, (%eax);movl , %eax;movl (%ebp), %ebx": 1,
                "movl , %eax;movl (%ebp), %ebx;cmpl %edi, %ebx;je  <ExSetTimerResolution+>;movl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlTimeFieldsToTime>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;movl $, %ecx;movb %bl, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "calll - <KeSetKernelStackSwapEnable>;jmp  <ExSetTimerResolution+>;leal (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "testb %al, %al;je  <ExSetTimerResolution+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "je  <ExSetTimerResolution+>;decl %eax;decl %eax;je  <ExSetTimerResolution+>;pushl $": 1,
                "leal (%ebp), %eax;pushl %eax;pushl %ebx;pushl ;pushl $": 3,
                "calll - <ObReferenceObjectByHandle>;movl %eax, %esi;cmpl %ebx, %esi;jl  <ExSetTimerResolution+>;pushl %edi": 1,
                "calll - <KeSetBasePriorityThread>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;pushl (%ebp);calll - <ZwClose>": 1,
                "pushl $;pushl %edi;calll - <ExSetTimerResolution+>;movl (%esi), %eax;movl %eax, (%esi)": 1,
                "addl $, %esi;decl %ebx;jne - <ExSetTimerResolution+>;popl %edi;popl %esi": 1,
                "decl %ebx;jne - <ExSetTimerResolution+>;popl %edi;popl %esi;popl %ebx": 1,
                "calll - <KeSetBasePriorityThread>;leal -(%ebp), %eax;pushl %eax;calll - <KeInitializeTimer>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeCancelTimer>;pushl %esi;pushl %esi": 1,
                "pushl %esi;pushl ;calll - <KeWaitForSingleObject>;movl , %ecx;calll - <ObfDereferenceObject>": 1,
                "jne  <ExRaiseDatatypeMisalignment+>;testl $, %esi;je  <ExRaiseDatatypeMisalignment+>;jmp  <ExRaiseDatatypeMisalignment+>;testb $, (%ebx)": 1,
                "movl %edx, -(%ebp);cmpl %edx, -(%ebp);je  <ExRaiseDatatypeMisalignment+>;testb $, %al;jne  <ExRaiseDatatypeMisalignment+>": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl %edx, -(%ebp);cmpl %edx, (%eax);je  <ExRaiseDatatypeMisalignment+>": 1,
                "pushl %esi;calll  <RtlCompressBuffer+>;xorl %edx, %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %eax;pushl -(%ebp);calll - <LpcRequestWaitReplyPort+>": 1,
                "jmp  <ExRaiseHardError+>;pushl %ebx;movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi": 1,
                "leal -(%ebp), %eax;subl %eax, -(%ebp);movl (%ebp), %edx;xorl %eax, %eax;incl %eax": 1,
                "shll $, %eax;addl %eax, %edx;leal -(%ebp,%edx), %edx;movl %edx, (%esi,%ecx,);movzwl -(%ebp,%eax), %ecx": 1,
                "movzwl -(%ebp,%eax), %ecx;movl -(%ebp,%eax), %esi;movl %ecx, -(%ebp);movl %ecx, %ebx;shrl $, %ecx": 1,
                "jmp  <ExRaiseHardError+>;movl %ebx, -(%ebp);leal (%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl %eax;pushl $-;calll - <ZwFreeVirtualMemory>;movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "testb %al, %al;jne  <ExRaiseHardError+>;movl $, %eax;jmp  <ExRaiseHardError+>;cmpb $, ": 1,
                "cmpb $, ;je  <ExRaiseHardError+>;movl $, %eax;jmp  <ExRaiseHardError+>;movl %fs:, %eax": 1,
                "subb (%edx), %ch;subb (%edx), %ch;orb (%eax), %al;addb %al, (%eax);subb (%eax), %ah": 1,
                "je  <ExRaiseHardError+>;calll - <ExRaiseDatatypeMisalignment>;leal (%esi,%ebx), %eax;cmpl %ebx, %eax;jb  <ExRaiseHardError+>": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %edi;testl %edi, %edi;je  <ExRaiseHardError+>;xorl %esi, %esi": 1,
                "movl (%ebp), %edi;testl %edi, %edi;je  <ExRaiseHardError+>;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);cmpl (%ebp), %esi;jae  <ExRaiseHardError+>;xorl %eax, %eax;incl %eax": 1,
                "cmpw $, -(%ebp);je  <ExRaiseHardError+>;movzwl -(%ebp), %eax;addl %ebx, %eax;cmpl %ebx, %eax": 1,
                "addl %ebx, %eax;cmpl %ebx, %eax;jb  <ExRaiseHardError+>;cmpl , %eax;jbe  <ExRaiseHardError+>": 1,
                "jmp - <ExRaiseHardError+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movb (%eax), %al;movb %al, -(%ebp);xorl %ebx, %ebx;cmpb %bl, %al;je  <ExRaiseHardError+>": 1,
                "movl , %eax;cmpl %eax, %esi;jb  <ExRaiseHardError+>;movl %ebx, (%eax);movl (%esi), %eax": 1,
                "movl %eax, (%esi);orl $-, -(%ebp);jmp  <ExRaiseHardError+>;movl -(%ebp), %eax;movl (%eax), %eax": 2,
                "jg  <ExRaiseHardError+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ebx": 1,
                "pushl -(%ebp);calll - <KeInitializeSemaphore>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl (%esi), %esi;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;cmpb $, -(%ebp);je  <ExRaiseHardError+>": 1,
                "retl;movl -(%ebp), %esp;jmp - <ExRaiseHardError+>;movl %edi, (%ebx);movl %esi, (%ebx)": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);xorl %ebx, %ebx;movl (%ebp), %edi;movl -(%ebp), %esi": 1,
                "addb %ah, (%esi);je  <ExRaiseHardError+>;popl %esp;addb %dl, (%edx);jo  <ExRaiseHardError+>": 2,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl %eax, -(%ebp);pushl $": 1,
                "pushl -(%ebp);movl %eax, %esi;calll - <ZwClose>;testl %esi, %esi;jl  <ExRaiseHardError+>": 1,
                "jmp  <ExRaiseHardError+>;incl ;movb $, ;movb $, ;pushl %edi": 1,
                "movl %ecx, ;xorl %edx, %edx;movl %eax, %ecx;orl %edx, %ecx;jne  <ExRaiseHardError+>": 1,
                "jmp  <ExRaiseHardError+>;testl %edx, %edx;jl  <ExRaiseHardError+>;movl $, %ecx;jg  <ExRaiseHardError+>": 1,
                "sbbl %edx, %esi;movl %esi, (%eax);movl %edi, (%eax);movl (%ecx), %ecx;movl , %eax": 1,
                "xorl %eax, %eax;popl %ebx;popl %edi;leave;retl $": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlCompareMemory>;cmpl $, %eax;je  <ExRaiseHardError+>": 1,
                "movb %cl, (%eax);movl -(%ebp), %ecx;movb %dl, (%eax);pushl %esi;xorl %esi, %esi": 1,
                "movb %cl, (%eax);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl , %eax;cmpl %eax, %ecx": 1,
                "movb %al, (%ecx);movb (%ecx), %al;movb %al, (%ecx);orl $-, -(%ebp);movl %fs:, %eax": 1,
                "calll *;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "decl (%esi);movl $, %ecx;calll - <ExAcquireFastMutexUnsafe>;movl -(%ebp), %eax;cmpl , %eax": 1,
                "movb $, %cl;movb $, (%esi);calll *;jmp - <ExUuidCreate+>;pushl $": 1,
                "calll *;jmp - <ExUuidCreate+>;pushl $;calll - <ExRaiseHardError+>;testl %eax, %eax": 1,
                "movl (%ebp), %edi;jne  <ExUuidCreate+>;movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax": 1,
                "movl , %eax;movl (%eax), %eax;xorl %ecx, %ecx;xorl %esi, %esi;cmpb %cl, (%ebp)": 1,
                "testl %ecx, %ecx;je  <NtAddAtom+>;leal (%ebx), %esi;andl $-, %esi;xorl %edi, %edi": 1,
                "cmpl %ecx, %eax;jb  <NtAddAtom+>;cmpl , %eax;jbe  <NtAddAtom+>;calll - <ExRaiseAccessViolation>": 1,
                "jbe  <NtAddAtom+>;calll - <ExRaiseAccessViolation>;orl $-, -(%ebp);cmpl $, %esi;ja  <NtAddAtom+>": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);jmp  <NtAddAtom+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %eax;movl $, -(%ebp);movl %ebx, %ecx;movl -(%ebp), %esi;movl %eax, %edi": 2,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;orl $-, -(%ebp);jmp  <NtAddAtom+>": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %edi;movl %edi, -(%ebp);calll - <ExUuidCreate+>": 1,
                "movl (%ebp), %ebx;cmpl $, %ebx;jbe  <NtFindAtom+>;movl $, %eax;jmp  <NtFindAtom+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);testb %al, %al;je  <NtFindAtom+>;testl %edi, %edi": 1,
                "je  <NtFindAtom+>;testl %edi, %edi;je  <NtFindAtom+>;andl $, -(%ebp);movl , %eax": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);jmp  <NtFindAtom+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "jl  <NtFindAtom+>;testl %edi, %edi;je  <NtFindAtom+>;movl $, -(%ebp);movw -(%ebp), %ax": 1,
                "movw %ax, (%edi);jmp  <NtFindAtom+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "orl $-, -(%ebp);jmp  <NtFindAtom+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "je  <NtFindAtom+>;leal -(%ebp), %ecx;cmpl %ecx, %eax;je  <NtFindAtom+>;pushl $": 1,
                "movl $, %eax;jmp  <NtQueryInformationAtom+>;movl %esi, -(%ebp);leal (%esi), %eax;pushl %eax": 1,
                "jmp  <NtQueryInformationAtom+>;movl %esi, -(%ebp);leal (%esi), %eax;pushl %eax;pushl %esi": 1,
                "shrl %edi;pushl %edi;pushl -(%ebp);calll - <RtlQueryAtomInAtomTable+>;movl %eax, -(%ebp)": 1,
                "movw %cx, (%esi);movw -(%ebp), %cx;movw %cx, (%esi);movw -(%ebp), %cx;movw %cx, (%esi)": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <NtQueryInformationAtom+>": 1,
                "je  <ProbeForWrite+>;movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;decl %ecx": 1,
                "jmp  <ProbeForWrite+>;calll - <ExRaiseDatatypeMisalignment>;popl %esi;popl %ebp;retl $": 1,
                "popl %ebp;retl $;int;pushl %edi;decl %ecx": 1,
                "cmpl $, %eax;popal;je  <ProbeForRead+>;insl %dx, %es:(%edi);jo  <ProbeForRead+>": 1,
                "insl %dx, %es:(%edi);jo  <ProbeForRead+>;cmpl $, %eax;jae  <ProbeForRead+>;arpl %sp, (%ebx)": 1,
                "outsl (%esi), %dx;arpl %sp, (%ecx);popl %edi;imull $, %fs:(%ebx), %esi;andb %ah, ": 1,
                "andl %ebx, (%eax);pushl %eax;incl %ebx;outsl (%esi), %dx;outsb (%esi), %dx": 1,
                "jae  <ProbeForRead+>;andl $, %eax;int;int;int": 1,
                "orl $, (%esi);subl $, %eax;movl %edi, (%esi);movl %edi, %ecx;movb $, (%eax)": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);calll - <IofCallDriver>;cmpl $, %eax": 1,
                "incl ;movl $, %eax;jmp - <ProbeForRead+>;cmpl %ebx, ;movl , %ecx": 1,
                "pushl $;calll - <DbgPrint>;addl $, %esp;cmpl %ebx, ;je  <ProbeForRead+>": 1,
                "calll - <DbgPrint>;addl $, %esp;cmpl %ebx, ;je  <ProbeForRead+>;calll - <DbgBreakPoint>": 1,
                "je  <ProbeForRead+>;incl ;movl $, %eax;jmp - <ProbeForRead+>;movl (%ebp), %eax": 1,
                "testl %esi, %esi;je  <ProbeForRead+>;testb $, (%ebp);je  <ProbeForRead+>;calll - <ExRaiseDatatypeMisalignment>": 1,
                "calll - <ExRaiseDatatypeMisalignment>;movl (%ebp), %ecx;leal (%ecx,%esi), %eax;cmpl %ecx, %eax;jb  <ProbeForRead+>": 1,
                "testl %esi, %esi;jl  <ProbeForRead+>;testb $-, (%ebx);je  <ProbeForRead+>;pushl -(%ebp)": 1,
                "calll - <SeSinglePrivilegeCheck>;testb %al, %al;je  <ProbeForRead+>;pushl -(%ebp);pushl ": 1,
                "jne  <ProbeForRead+>;movl $, %esi;jmp  <ProbeForRead+>;movl (%ebx), %eax;testl $, %eax": 1,
                "pushl (%ebx);pushl (%ebx);pushl (%ebx);pushl (%ebx);pushl (%ebx)": 14,
                "pushl (%ebx);calll - <NtMakePermanentObject+>;jmp  <ProbeForRead+>;testl %eax, %eax;jns  <ProbeForRead+>": 1,
                "jae  <ProbeForRead+>;addl %ecx, %eax;cmpl %edx, %eax;ja  <ProbeForRead+>;pushl %ebx": 1,
                "movl $, -(%ebp);jmp  <ProbeForRead+>;movl (%ebp), %eax;cmpl %eax, (%ebx);jne  <ProbeForRead+>": 1,
                "movl %esi, %eax;jmp  <ProbeForRead+>;movl $, %esi;jmp - <ProbeForRead+>;movl $, %eax": 1,
                "cmpw %si, %ax;jne  <ProbeForRead+>;movl $, %eax;orl $-, -(%ebp);jmp  <ProbeForRead+>": 1,
                "pushl $;movzwl (%ebp), %eax;pushl %eax;pushl (%ebp);calll - <ProbeForWrite>": 1,
                "pushl %eax;calll - <RtlxUnicodeStringToOemSize>;jmp  <ProbeForRead+>;movzwl -(%ebp), %eax;incl %eax": 3,
                "shrl %eax;movl %eax, %edi;movl %edi, -(%ebp);movl $, %esi;pushl %esi": 1,
                "cmpl %ebx, %eax;jge  <ProbeForRead+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl -(%ebp);calll *;movl %eax, %edi;movl %esi, %ecx;calll - <ExReleaseFastMutexUnsafe>": 1,
                "xorl %esi, %esi;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %esi, %edi": 1,
                "pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %esi, %edi;je  <ProbeForRead+>": 1,
                "jmp  <ProbeForRead+>;movl $, -(%ebp);pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "movw (%ebp), %ax;movw %ax, -(%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlAnsiStringToUnicodeString>;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %esp;cmpl $, -(%ebp);je  <ProbeForRead+>;pushl $;pushl -(%ebp)": 1,
                "cmpl %eax, %ebx;jb  <ProbeForRead+>;movl %edi, (%eax);movl (%ebx), %ecx;movl %ecx, -(%ebp)": 2,
                "orl $-, -(%ebp);movl $, %eax;jmp  <ProbeForRead+>;testb $, %al;je  <ProbeForRead+>": 1,
                "jbe  <ProbeForRead+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %ebx;testb $, %bl;je  <ProbeForRead+>": 1,
                "jge  <ProbeForRead+>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl %edi": 1,
                "pushl -(%ebp);pushl -(%ebp);calll *;movl %eax, %ebx;movl %esi, %ecx": 1,
                "cmpl %esi, -(%ebp);je  <ProbeForRead+>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 2,
                "pushl $;leal (%esi), %eax;pushl %eax;calll - <KeInitializeDpc>;pushl (%ebp)": 1,
                "calll - <KeInitializeSpinLock>;movb %bl, (%esi);movb %bl, (%esi);movl %ebx, (%esi);leal -(%ebp), %eax": 1,
                "movl %fs:, %eax;movb (%eax), %bl;movb %bl, -(%ebp);testb %bl, %bl;je  <ProbeForRead+>": 2,
                "movl (%ebp), %esi;movl , %eax;cmpl %eax, %esi;jb  <ProbeForRead+>;movl $, (%eax)": 3,
                "jmp - <ProbeForRead+>;movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;calll - <wctomb+>": 3,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;jmp  <ProbeForRead+>;movl (%ebp), %ebx": 1,
                "jmp  <ProbeForRead+>;movl (%ebp), %ebx;cmpl $, (%ebp);je  <ProbeForRead+>;movl $, %eax": 1,
                "movl (%edi), %esi;subl %ecx, %esi;movl (%edi), %edi;sbbl %eax, %edi;movl -(%ebp), %ecx": 1,
                "calll - <ObfDereferenceObject>;cmpb $, -(%ebp);je  <ProbeForRead+>;movl $, -(%ebp);movb -(%ebp), %al": 1,
                "jmp - <ProbeForRead+>;pause;jmp - <ProbeForRead+>;int;int": 1,
                "pause;jmp - <ProbeForRead+>;int;int;int": 1,
                "cmpb %bl, %al;je  <ProbeForRead+>;movl %ebx, -(%ebp);movl (%ebp), %esi;movl , %eax": 1,
                "movl (%ebp), %esi;movl , %eax;cmpl %eax, %esi;jb  <ProbeForRead+>;movl %ebx, (%eax)": 1,
                "jmp  <ProbeForRead+>;movl (%ebp), %esi;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "cmpl %esi, %edi;jl  <ProbeForRead+>;pushl %esi;pushl %esi;pushl -(%ebp)": 2,
                "pushl %ebx;pushl %edi;movl %fs:, %eax;movb (%eax), %bl;pushl $": 2,
                "movl %ebx, -(%ebp);jmp  <ProbeForRead+>;calll - <ExSystemExceptionFilter>;retl;movl -(%ebp), %esp": 2,
                "movl -(%ebp), %eax;jmp  <ProbeForRead+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 6,
                "movb %al, -(%ebp);movl (%ebp), %esi;cmpb %bl, %al;je  <ProbeForRead+>;movl , %eax": 1,
                "je  <ProbeForRead+>;movl %ebx, -(%ebp);movl , %eax;cmpl %eax, %ebx;jb  <ProbeForRead+>": 1,
                "je  <ProbeForRead+>;movl $, %eax;orl $-, -(%ebp);jmp  <ProbeForRead+>;movl , %eax": 1,
                "movl %esi, -(%ebp);movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <ProbeForRead+>;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);pushl %ebx;pushl %ebx;pushl %eax;pushl %esi": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl (%ebp);calll - <wctomb+>;xorl %eax, %eax": 1,
                "movl $, %eax;jmp  <ProbeForRead+>;movl %edi, -(%ebp);xorl %edi, %edi;xorl %ecx, %ecx": 1,
                "decl %eax;jmp  <ProbeForRead+>;incl %ecx;shrl %eax;jne - <ProbeForRead+>": 1,
                "cmpl $, %esi;jb  <ProbeForRead+>;leal -(%esi), %ecx;movl (%ebp), %eax;movl %eax, %edx": 1,
                "movl (%ebp), %eax;movl %eax, %edx;shrl %cl, %edx;cmpl (%ebp), %edx;jbe  <ProbeForRead+>": 1,
                "jbe  <ProbeForRead+>;movl $, %eax;jmp  <ProbeForRead+>;leal (%edi,%eax), %ecx;cmpl %eax, %ecx": 1,
                "pushl (%ebp);pushl (%ebp);calll - <ProbeForWrite>;orl $-, -(%ebp);cmpl %ebx, (%ebp)": 1,
                "cmpb %bl, %al;jne  <ProbeForRead+>;movl $, %eax;jmp  <ProbeForRead+>;movl %ebx, -(%ebp)": 1,
                "jne  <ProbeForRead+>;movl $, %eax;jmp  <ProbeForRead+>;movl %ebx, -(%ebp);jmp  <ProbeForRead+>": 1,
                "calll - <ObReferenceObjectByHandle>;movl -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl %ebx, %eax;jl  <ProbeForRead+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl %ebx, %eax;jl  <ProbeForRead+>;movl $, -(%ebp)": 1,
                "calll - <ObReferenceObjectByHandle>;cmpl %edi, %eax;jl  <ProbeForRead+>;pushl %edi;pushl %edi": 1,
                "addl $, %eax;pushl %eax;pushl %edi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx": 1,
                "jne  <ProbeForRead+>;pushl (%esi);calll - <MmUnlockPages>;pushl %edi;pushl %ebx": 1,
                "pushl (%esi);pushl %ebx;calll - <wctomb+>;pushl -(%ebp);pushl %ebx": 1,
                "movl %eax, (%esi);xorl %ebx, %ebx;pushl %edi;pushl $;calll - <KeReleaseMutex>": 1,
                "pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl %edi;pushl $": 1,
                "jne  <ProbeForRead+>;pushl %ebx;pushl %edi;calll - <KeReleaseMutex>;movl %esi, %ecx": 1,
                "pushl $;calll - <wctomb+>;movl %fs:, %eax;movb (%eax), %bl;testb %bl, %bl": 1,
                "movb (%ebx), %al;movb %al, (%ebx);movl (%ebp), %eax;testl %eax, %eax;je  <ProbeForRead+>": 1,
                "calll *;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl (%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);xorl %eax, %eax": 1,
                "je  <ProbeForRead+>;testb $, %bl;je  <ProbeForRead+>;calll - <ExRaiseDatatypeMisalignment>;leal (%ebx,%esi), %eax": 1,
                "testb $, %bl;je  <ProbeForRead+>;calll - <ExRaiseDatatypeMisalignment>;leal (%ebx,%esi), %eax;cmpl %ebx, %eax": 1,
                "movl %eax, (%ecx);movl (%ebp), %eax;decl %eax;cmpl $, %eax;ja  <ProbeForRead+>": 1,
                "calll ;jmp  <ProbeForRead+>;cmpl $, %esi;jne  <ProbeForRead+>;pushl %ebx": 1,
                "je  <ProbeForRead+>;pushl $;calll - <DbgBreakPointWithStatus>;jmp  <ProbeForRead+>;movl $, -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl (%ebx)": 6,
                "pushl (%ebx);pushl -(%ebp);pushl %eax;pushl (%ebx);calll ": 1,
                "pushl -(%ebp);pushl (%ebx);pushl (%ebx);jmp - <ProbeForRead+>;cmpl $, %esi": 1,
                "pushl (%ebx);pushl (%ebx);calll ;jmp  <ProbeForRead+>;cmpl $, %esi": 5,
                "jne  <ProbeForRead+>;movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%ebx)": 3,
                "cmpl $, %esi;jne  <ProbeForRead+>;movl %ebx, -(%ebp);leal (%ebx), %eax;pushl %eax": 2,
                "calll ;jmp  <ProbeForRead+>;calll ;movl %eax, -(%ebp);jmp  <ProbeForRead+>": 1,
                "jae  <ProbeForRead+>;addb %dh, (%ebx,%esi,);addb %dh, -(%ecx);jae  <ProbeForRead+>;addb %ah, (%edi)": 1,
                "je  <ProbeForRead+>;addb %ch, (%esi);pushl %ebx;addb %dh, -(%ebp);je  <ProbeForRead+>": 1,
                "cmpl %ebx, (%ebp);je  <ProbeForRead+>;movl $, %eax;jmp  <ProbeForRead+>;leal -(%ebp), %eax": 1,
                "pushl %ecx;calll - <ObInsertObject>;cmpl %ebx, %eax;jl  <ProbeForRead+>;movl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl (%ebp), %ebx;testb $, %bl;je  <ProbeForRead+>;movl $, %eax": 1,
                "movl (%ebp), %ebx;testb $, %bl;je  <ProbeForRead+>;movl $, %eax;jmp  <ProbeForRead+>": 1,
                "testl %edi, %edi;je  <ProbeForRead+>;andl $, -(%ebp);testb %al, %al;je  <ProbeForRead+>": 1,
                "testb %al, %al;je  <ProbeForRead+>;leal (%edi), %eax;cmpl %edi, %eax;jb  <ProbeForRead+>": 2,
                "movl -(%ebp), %eax;leal (%eax), %edi;decl (%esi);movl %eax, -(%ebp);movl $, %eax": 1,
                "cmpl %ebx, (%ecx);jne  <ProbeForRead+>;movl -(%ebp), %edx;cmpl %edx, (%ecx);je  <ProbeForRead+>": 1,
                "jne - <ProbeForRead+>;leal (%esi), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);orl $, %ebx": 1,
                "cmpl $, %eax;je  <ProbeForRead+>;movl %edi, %ecx;calll - <ExfReleasePushLock>;movl -(%ebp), %eax": 1,
                "jne  <ProbeForRead+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <ProbeForRead+>;movb $, (%esi)": 6,
                "leal (%esi), %eax;cmpl %eax, (%eax);je  <ProbeForRead+>;movl (%eax), %ecx;movl (%eax), %edx": 2,
                "calll *;testb %bl, %bl;je  <ProbeForRead+>;xorl %eax, %eax;pushl %eax": 2,
                "testb %bl, %bl;je  <ProbeForRead+>;xorl %eax, %eax;pushl %eax;pushl %eax": 2,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, %ecx": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <ProbeForRead+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);leal (%esi), %eax;movl (%edi), %ecx;movl %edi, (%eax)": 1,
                "movl (%edi), %ecx;movl %edi, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);movl %eax, (%edi)": 1,
                "testl %ebx, %ebx;jne  <ProbeForRead+>;incl (%esi);jne  <ProbeForRead+>;leal (%esi), %eax": 1,
                "pushl $-;calll - <ZwFreeVirtualMemory>;leave;retl $;int": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl $, -(%ebp)": 1,
                "jge  <LsaRegisterLogonProcess+>;movl (%edi), %eax;cmpl %ebx, %eax;je  <LsaRegisterLogonProcess+>;pushl %eax": 1,
                "movl (%ebp), %esi;pushl $;popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, (%ecx);jl  <LsaLogonUser+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movl (%ebp), %edi": 1,
                "movl -(%ebp), %edx;movl %edx, (%ecx);movl (%ebp), %ecx;movl -(%ebp), %edx;movl %edx, (%ecx)": 1,
                "subl $, %esp;pushl %edi;pushl $;xorl %eax, %eax;popl %ecx": 1,
                "movw $, -(%ebp);movw $, -(%ebp);calll - <ZwRequestWaitReplyPort>;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);andl $, -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;leal (%esi), %ecx;pushl %ecx;pushl %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;xorl %eax, %eax;rep  movsb (%esi), %es:(%edi)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "movl %eax, %esi;jmp  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;movl %eax, %esi;incl %esi": 1,
                "incl %esi;andl $-, %esi;pushl %ebx;pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;andw $, %ax": 1,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;cmpl %esi, %eax;jb  <LsaDeregisterLogonProcess+>;xorl %eax, %eax": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;xorl %esi, %esi;testl %edi, %edi": 1,
                "pushl %eax;calll - <wcschr>;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "calll - <wcslen>;leal (%edi,%eax,), %eax;cmpl %edi, %eax;popl %ecx;jb  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;pushl %esi": 2,
                "calll  <LsaDeregisterLogonProcess+>;retl;movl -(%ebp), %esp;orl $-, -(%ebp);calll - <wctomb+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;testl %edi, %edi;movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "testl %esi, %esi;je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %eax;pushl %edi": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "pushl %ebx;pushl %edi;je  <LsaDeregisterLogonProcess+>;movl (%esi), %ebx;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;jne  <LsaDeregisterLogonProcess+>;pushl (%esi);calll - <wcslen>;pushl (%esi)": 1,
                "pushl %eax;pushl (%esi);movl (%ebp), %eax;addl %ebx, %eax;pushl %eax": 1,
                "pushl %eax;calll  <LsaDeregisterLogonProcess+>;movl %edi, (%esi);popl %edi;popl %esi": 1,
                "movl %ebx, -(%ebp);movl %ebx, (%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "movl $, -(%ebp);pushl %esi;pushl $;pushl (%ebp);pushl (%ebp)": 1,
                "pushl -(%ebp);negl %esi;pushl (%ebp);sbbl %esi, %esi;negl %esi": 1,
                "movl %ebx, -(%ebp);testb $, (%edi);jne  <LsaDeregisterLogonProcess+>;pushl %edi;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <memmove>;movl -(%ebp), %eax;movl -(%ebp), %ecx;leal (%eax,%eax), %eax;pushl %eax": 1,
                "leal (%ecx,%eax,), %eax;pushl %eax;calll - <memmove>;addl $, %esp;pushl -(%ebp)": 1,
                "cmpl (%ebx), %eax;jl - <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi": 1,
                "jl - <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi;testl %esi, %esi": 1,
                "movl %edx, (%eax);movl %eax, -(%ebp);calll  <LsaDeregisterLogonProcess+>;andl $, (%ebp);xorl %ebx, %ebx": 1,
                "movl (%edi), %eax;negl %esi;sbbl %esi, %esi;negl %esi;cmpl %ebx, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%edi), %edi;cmpl %ebx, %edi;jne - <LsaDeregisterLogonProcess+>;movl (%ebp), %esi": 1,
                "xorl %ebx, %ebx;movl -(%ebp), %esi;cmpl %ebx, %esi;je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 2,
                "xorl %esi, %esi;pushl (%ebp);incl %esi;pushl %ecx;pushl -(%ebp)": 1,
                "pushl %eax;pushl (%edi);pushl %esi;pushl (%ebp);pushl %ebx": 1,
                "pushl %esi;pushl (%ebp);pushl %ebx;calll  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 2,
                "je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;cmpl $-, (%eax);je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;pushl (%ebp);pushl -(%ebp);pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "jne - <LsaDeregisterLogonProcess+>;xorl %esi, %esi;cmpl %esi, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "cmpl %esi, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;pushl $;pushl (%eax,%esi,)": 1,
                "incl %esi;cmpl -(%ebp), %esi;jb - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "leal -(%ebp), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);xorl %ebx, %ebx": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);jne  <LsaDeregisterLogonProcess+>;cmpl %ebx, %ecx;je  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl $;jmp  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax": 1,
                "calll - <wctomb+>;cmpl $, (%ebp);movl %eax, %esi;je  <LsaDeregisterLogonProcess+>;testl %esi, %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 7,
                "cmpl $, (%ebp);movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;popl %ebp;retl $;int;int": 11,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;movl %esi, (%ecx);popl %esi": 1,
                "movl %ebx, -(%ebp);je  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl $;movl %edx, (%esi);popl %edi;jne  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "jge  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl $;pushl %edi": 1,
                "jl  <LsaDeregisterLogonProcess+>;pushl -(%ebp);leal -(%ebp), %eax;pushl $;pushl $": 1,
                "pushl %ebx;pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);calll - <ZwCreateSection>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl %eax": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl %eax;calll - <ZwClose>": 1,
                "jge  <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;andl $, (%edi);testb $, (%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;addl %esi, %esi": 1,
                "movw %si, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);pushl %ebx;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;addl $, %esi;pushl %eax;movw %si, -(%ebp);movw %bx, -(%ebp)": 1,
                "orl $, (%eax);movl %edx, (%eax);movl %ecx, (%eax);xorl %eax, %eax;incl %eax": 1,
                "xorl %esi, %esi;cmpl %esi, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl (%ebp)": 1,
                "calll - <RtlInitUnicodeString>;pushl (%ebp);movzwl -(%ebp), %eax;pushl (%ebp);shrl %eax": 1,
                "pushl (%ebp);movzwl -(%ebp), %eax;pushl (%ebp);shrl %eax;pushl (%ebp)": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, %esi;movl %esi, %eax;popl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;testb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl $;popl %eax;jmp  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl $;jmp - <LsaDeregisterLogonProcess+>;pushl $;jmp - <LsaDeregisterLogonProcess+>": 1,
                "cmpl (%ebp), %esi;jbe  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "andl $, -(%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;andw $, %ax;cmpw $, %ax": 1,
                "xorl %edi, %edi;cmpl %edi, (%esi);je  <LsaDeregisterLogonProcess+>;movl (%esi), %esi;cmpl %edi, %esi": 1,
                "calll  <LsaDeregisterLogonProcess+>;cmpl %edi, %eax;movl %eax, (%esi);je  <LsaDeregisterLogonProcess+>;movl (%esi), %edi": 1,
                "pushl (%ebp);movl %esi, (%ebp);calll - <LsaDeregisterLogonProcess+>;andw $, %ax;cmpw $, %ax": 2,
                "calll - <LsaDeregisterLogonProcess+>;andw $, %ax;cmpw $, %ax;je  <LsaDeregisterLogonProcess+>;movw %si, %ax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl %esi, %edi;movl %edi, %eax;popl %edi;popl %esi": 1,
                "pushl %ebx;pushl %edi;pushl (%ebp);movl (%ebp), %edi;pushl %edi": 2,
                "calll - <LsaDeregisterLogonProcess+>;movl %eax, %ebx;testw %bx, %bx;jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax": 2,
                "pushl (%ebp);pushl %esi;pushl %edi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax": 2,
                "popl %ecx;je  <LsaDeregisterLogonProcess+>;pushl %esi;pushl (%ebp);pushl %edi": 2,
                "movw (%esi), %ax;pushl %eax;pushl %edi;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "popl %ecx;jge  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl (%esi)": 1,
                "jb - <LsaDeregisterLogonProcess+>;orl $-, %eax;popl %ebp;retl $;int": 1,
                "xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;shll $, %eax;leal (%eax,%ecx), %eax": 1,
                "movl (%ebp), %ecx;shll $, %eax;leal (%eax,%ecx), %eax;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "cmpl $, %edx;je  <LsaDeregisterLogonProcess+>;cmpl $, %edx;je  <LsaDeregisterLogonProcess+>;cmpl $, %edx": 1,
                "pushl %eax;pushl (%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;movw (%esi), %ax;pushl %ebx": 1,
                "pushl %eax;pushl %edi;calll - <LsaDeregisterLogonProcess+>;addl $, %esi;cmpl $, %esi": 1,
                "popl %esi;popl %ebp;retl $;movl %esi, %eax;jmp - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %edx;xorl %eax, %eax;testl %edx, %edx": 1,
                "movl (%edx), %eax;andw $, (%ebx,%eax);cmpl $, (%ebp);movl (%ebp), %eax;movl %eax, (%edx)": 1,
                "movl (%ebp), %eax;addl $, %eax;movl (%eax), %ecx;movl %ecx, (%edx);movl %edx, (%eax)": 1,
                "testl %esi, %esi;movl %esi, %eax;jne - <LsaDeregisterLogonProcess+>;popl %esi;andl $, (%edi)": 1,
                "cmpw $, (%eax);jne  <LsaDeregisterLogonProcess+>;pushl $;popl %esi;movl (%ebp), %eax": 1,
                "movl (%edi), %ecx;xorl %edx, %edx;movb (%eax), %dl;pushl %ebx;xorl %ebx, %ebx": 1,
                "popl %esi;popl %ebx;je  <LsaDeregisterLogonProcess+>;cmpl $, %edx;je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);xorl %eax, %eax;incl %eax;jmp - <LsaDeregisterLogonProcess+>": 1,
                "movl $, %eax;xorl %edx, %edx;cmpl %eax, %ecx;pushl %edi;movl %eax, %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;subl $, %edi;jns - <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl %ebx, %ecx;calll - <_aullshr>;movl (%ebp), %edx": 1,
                "cmpw %ax, %si;je  <LsaDeregisterLogonProcess+>;cmpw $, %si;jne  <LsaDeregisterLogonProcess+>;subl $, %ebx": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "leal -(%ebp), %ecx;andl %ecx, %eax;pushl %eax;pushl $;pushl %edi": 3,
                "movl %esi, %eax;negl %eax;sbbl %eax, %eax;leal (%ebp), %ecx;andl %ecx, %eax": 1,
                "negl %eax;sbbl %eax, %eax;leal (%ebp), %ecx;andl %ecx, %eax;pushl %eax": 1,
                "pushl $;pushl %edi;calll - <LsaDeregisterLogonProcess+>;negl %esi;sbbl %esi, %esi": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;movl %ebx, %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx": 1,
                "testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "je - <LsaDeregisterLogonProcess+>;movzwl (%ebp), %eax;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, %eax": 1,
                "pushl %edi;movl (%ebp), %edi;testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "andl $, %ecx;xorl %eax, %eax;cmpl $, %ecx;je  <LsaDeregisterLogonProcess+>;cmpl $, %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, %ecx;jne  <LsaDeregisterLogonProcess+>;pushl %edx;pushl %edi": 1,
                "orl $-, %eax;testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %edi": 1,
                "subl %edx, %eax;movl (%ebp), %edx;sarl %eax;leal (%eax,%eax,), %ecx;leal (%edx,%ecx,), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;movl -(%ecx), %edx;cmpl (%ebp), %edx;jne  <LsaDeregisterLogonProcess+>;movl -(%ecx), %ecx": 1,
                "movl -(%ecx), %edx;cmpl (%ebp), %edx;jne  <LsaDeregisterLogonProcess+>;movl -(%ecx), %ecx;cmpl (%ebp), %ecx": 1,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;cmpw $, %ax;je  <LsaDeregisterLogonProcess+>;xorl %eax, %eax": 3,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;pushl $;popl %ecx;xorl %edx, %edx": 2,
                "pushl (%ebp);movl %eax, -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "movl -(%ebp), %edx;movl (%esi), %ecx;decl %edx;cmpl %edx, %ecx;jae  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%ebp), %esi;xorl %eax, %eax;movw (%esi), %ax": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;xorl %eax, %eax;movw (%esi), %ax;testw %ax, %ax": 1,
                "movw (%esi), %ax;testw %ax, %ax;jne  <LsaDeregisterLogonProcess+>;cmpw %ax, (%edi);je  <LsaDeregisterLogonProcess+>": 1,
                "testw %ax, %ax;je  <LsaDeregisterLogonProcess+>;pushl %eax;calll - <RtlUpcaseUnicodeChar>;movw %ax, %bx": 1,
                "incl %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;popl %edi;popl %esi": 2,
                "incl %edx;decl %ecx;cmpl $, %edx;jl - <LsaDeregisterLogonProcess+>;movb $, (%esi)": 1,
                "movl %ebx, (%esi);calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;leal (%ecx,%ecx,), %ecx;movl %eax, (%esi,%ecx,);jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%ebp);movl (%ebp), %ecx;pushl (%ebp);movl %eax, (%ecx);calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %eax;leal -(%ebp), %esi;leal -(%ebp), %ebx;calll - <RtlInitUnicodeString>;leal -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movw $, -(%ebp);calll - <RtlUpcaseUnicodeString>": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax": 2,
                "jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi;movl (%edi), %esi;incl %esi": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;xorl %ecx, %ecx": 1,
                "movl %esi, (%edi);jmp - <LsaDeregisterLogonProcess+>;int;int;int": 1,
                "movw (%ecx), %dx;testw %dx, %dx;je  <LsaDeregisterLogonProcess+>;cmpw (%ebp), %dx;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%esi);movl %eax, (%esi);pushl (%ebp);movl %edx, (%esi);calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %eax;pushl %edi;pushl (%ebp);xorl %ebx, %ebx;pushl (%ebp)": 1,
                "rep  stosl %eax, %es:(%edi);leal -(%ebp), %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);pushl %edx": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%edi), %ebx;xorl %eax, %eax;movw (%esi), %ax": 1,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%esi)": 1,
                "testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;incl (%ebp);movl (%ebp), %eax;addl $, %edi": 1,
                "incl (%ebp);movl (%ebp), %eax;addl $, %edi;cmpl (%ebp), %eax;jb - <LsaDeregisterLogonProcess+>": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl (%esi), %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;leal (%esi), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;movl %esi, (%eax)": 1,
                "jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi": 1,
                "movw %bx, (%ecx);movl %ebx, -(%ebp);movl (%ebp), %ebx;movw %ax, -(%ebp);movw (%edi), %ax": 1,
                "cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;decl (%ebp);jmp  <LsaDeregisterLogonProcess+>;leal (%esi), %eax": 1,
                "movw %ax, (%ecx);xorl %esi, %esi;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl %esi, %eax": 1,
                "movl %edi, %ecx;sbbl %edx, %ecx;addl $, %eax;adcl $, %ecx;xorl %edx, %edx": 1,
                "addl $, %eax;adcl $, %ecx;xorl %edx, %edx;cmpl %ebx, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;xorl %edi, %edi;incl %ecx;jmp  <LsaDeregisterLogonProcess+>;movl (%eax), %edx": 1,
                "testl %edx, %edx;jbe  <LsaDeregisterLogonProcess+>;leal (%edx,%edx,), %edx;shll $, %edx;addl %edx, %edi": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%ebp), %edi;movl (%ebx), %ebx": 1,
                "addl $, %ebx;movl (%esi), %esi;cmpl %esi, (%ebp);jne - <LsaDeregisterLogonProcess+>;andl $, (%ebx)": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;cmpl %edi, %eax": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;cmpl %edi, %eax;movl (%eax), %ecx": 1,
                "jne - <LsaDeregisterLogonProcess+>;testb %dl, %dl;je - <LsaDeregisterLogonProcess+>;popl %edi;xorl %eax, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;pushl (%eax);calll - <RtlFreeRangeList>": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);movw %ax, -(%ebp);calll - <RtlCopyRangeList>;movl %eax, %ebx": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%edi)": 1,
                "pushl (%edi);pushl (%esi);calll - <RtlDeleteOwnersRanges>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;adcl $-, %ecx;pushl %esi": 1,
                "leal -(%ebp), %eax;movl $, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movw $, -(%ebp)": 1,
                "movl %ecx, (%ebx);xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %esi;movl -(%ebp), %edi;andl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %ecx, %edi;jb  <LsaDeregisterLogonProcess+>;ja  <LsaDeregisterLogonProcess+>;cmpl %eax, %esi;jb  <LsaDeregisterLogonProcess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll *(%ebx);movl %eax, %esi": 2,
                "jmp  <LsaDeregisterLogonProcess+>;pushl %esi;calll *(%esi);jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "pushl (%eax);pushl (%eax);pushl %esi;calll *(%esi);movl %eax, %edi": 1,
                "movl %eax, %edi;jmp  <LsaDeregisterLogonProcess+>;movl $, %edi;jmp  <LsaDeregisterLogonProcess+>;movl $, %edi": 1,
                "pushl (%esi);calll - <KeSetEvent>;movl %edi, %eax;popl %edi;popl %esi": 1,
                "popl %ebp;retl $;pushl %edx;movb $, %ah;addb %bl, -(%ebp)": 1,
                "retl $;pushl %edx;movb $, %ah;addb %bl, -(%ebp);pushl %ebx": 1,
                "pushl $;andl $, %ecx;leal (%ecx,%ecx), %ecx;pushl %ecx;xorl %ecx, %ecx": 1,
                "movb (%eax), %cl;pushl %ecx;pushl (%eax);pushl (%eax);pushl (%eax)": 1,
                "movl %ebx, %esi;movb $, (%ebp);cmpl %ebx, %esi;jb  <LsaDeregisterLogonProcess+>;cmpl $, (%esi)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %edi;calll *(%edi);testb %al, %al": 1,
                "calll *(%edi);testb %al, %al;je - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl $, (%eax)": 1,
                "pushl %esi;pushl %edi;calll *(%edi);jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "leal (%ebx), %esi;jmp  <LsaDeregisterLogonProcess+>;pushl (%eax);movl (%esi), %eax;pushl -(%esi)": 1,
                "movl %eax, (%ecx);addl $, %esi;movl (%esi), %eax;testl %eax, %eax;jne - <LsaDeregisterLogonProcess+>": 1,
                "addl $, %esi;movl (%esi), %eax;testl %eax, %eax;jne - <LsaDeregisterLogonProcess+>;popl %edi": 1,
                "pushl (%ebp);calll - <ZwQueryValueKey>;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, %eax": 1,
                "testl %esi, %esi;jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %edi": 2,
                "pushl %esi;pushl $;pushl %eax;pushl (%ebp);calll - <ZwQueryValueKey>": 2,
                "jne  <LsaDeregisterLogonProcess+>;movzwl %ax, %eax;addl $, %eax;pushl $;shll $, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movzwl (%ebx), %ecx;shll $, %ecx;movl %ecx, %eax;shrl $, %ecx": 1,
                "calll - <ExFreePoolWithTag>;movl (%ebp), %eax;addw $, (%ebx);movl %eax, (%ebx);popl %esi": 1,
                "movl (%ebx), %ecx;movl (%ebp), %edx;shll $, %eax;movl %edx, (%eax,%ecx);movl (%ebp), %edx": 2,
                "movl (%ebp), %edx;movl %edx, (%eax,%ecx);movzwl (%ebx), %eax;movl (%ebx), %ecx;movl (%ebp), %edx": 1,
                "movl %edx, (%eax,%ecx);incw (%ebx);xorl %eax, %eax;popl %edi;popl %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;cmpl (%ebp), %eax;pushl %ebx;pushl %esi": 1,
                "movl (%ebp), %eax;cmpl (%ebp), %eax;pushl %ebx;pushl %esi;pushl %edi": 1,
                "movl (%ebp), %esi;movl %edx, (%eax);movl (%ebp), %edx;addl $-, %edx;adcl $-, %esi": 1,
                "movl %edx, (%eax);movl %esi, (%eax);jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %edx;cmpl (%ecx), %edx": 1,
                "addl $, %ecx;addl (%ebx), %edx;cmpl %edx, %ecx;jb - <LsaDeregisterLogonProcess+>;subl (%ebp), %eax": 1,
                "cmpw (%ebx), %si;jbe  <LsaDeregisterLogonProcess+>;movzwl %si, %eax;pushl $;shll $, %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testb $, (%eax);je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl %edi, (%esi);movl %ecx, (%esi);movl %eax, (%esi);movb $, -(%ebp)": 1,
                "testl %eax, %eax;jne - <LsaDeregisterLogonProcess+>;movb -(%ebp), %al;popl %edi;popl %ebx": 1,
                "movb (%eax), %dl;andb $, %dl;testl %esi, %esi;movb %dl, (%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "subl %esi, %eax;movl (%ebp), %edi;movl (%edi), %esi;incl %eax;shll $, %eax": 1,
                "addl %edi, %esi;cmpl %esi, %eax;movl %esi, -(%ebp);jae  <LsaDeregisterLogonProcess+>;movl (%eax), %esi": 1,
                "cmpl %esi, %eax;movl %esi, -(%ebp);jae  <LsaDeregisterLogonProcess+>;movl (%eax), %esi;cmpl %esi, (%ecx)": 1,
                "testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "movl %esi, -(%ebp);popl %esi;pushl $;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebx);calll - <RtlDeleteOwnersRanges>;movl -(%ebp), %eax;andl $, (%ebp);movl %eax, -(%ebp)": 1,
                "jne  <LsaDeregisterLogonProcess+>;addl $, (%ebp);addl $, -(%ebp);pushl $;pushl (%ebp)": 1,
                "xorl %edx, %edx;cmpl %edx, %ecx;je  <LsaDeregisterLogonProcess+>;movl (%ecx), %ecx;movl (%ebp), %eax": 1,
                "movl %ecx, (%eax);movl (%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %ecx": 1,
                "movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;pushl (%eax)": 1,
                "calll - <RtlDeleteOwnersRanges>;movl %eax, %esi;testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "orl $-, (%eax);incl %ecx;movl %edx, (%eax);movl %edx, (%eax);movl %edx, (%eax)": 1,
                "calll - <RtlCopyRangeList>;movl %eax, %esi;testl %esi, %esi;jge  <LsaDeregisterLogonProcess+>;testl %edi, %edi": 1,
                "pushl $;pushl %edi;calll - <ExFreePoolWithTag>;pushl (%ebx);calll - <RtlFreeRangeList>": 1,
                "addb %al, (%eax);addb %dl, (%edx);decl %edi;addb %cl, (%edi);pushl %esp": 1,
                "jae  <LsaDeregisterLogonProcess+>;movl (%eax), %edi;cmpl %ecx, %edi;jb  <LsaDeregisterLogonProcess+>;ja  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %edx, %ecx;jb  <LsaDeregisterLogonProcess+>;ja  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;cmpl (%eax), %ecx": 1,
                "movl (%esi), %ecx;cmpl (%eax), %ecx;jb  <LsaDeregisterLogonProcess+>;movb (%eax), %cl;testb %cl, (%esi)": 1,
                "testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax": 1,
                "popl %ecx;je  <LsaDeregisterLogonProcess+>;movb $, -(%ebp);cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;pushl (%edi);pushl (%edi)": 1,
                "incl (%ebp);cmpl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl %eax;pushl (%edi)": 1,
                "jl  <LsaDeregisterLogonProcess+>;cmpl $, (%edi);setne %al;andl $, (%esi);testb %al, %al": 1,
                "retl $;movl $, %ebx;jmp - <LsaDeregisterLogonProcess+>;popl %esp;addb %dl, (%edx)": 1,
                "addb %cl, (%edi);jb  <LsaDeregisterLogonProcess+>;addb %ah, %fs:(%ebp);jb  <LsaDeregisterLogonProcess+>;addb %al, (%eax)": 1,
                "addb %dh, %gs:(%edx);jbe  <LsaDeregisterLogonProcess+>;addb %ah, %gs:(%eax,%eax);addb %ah, (%ebp);jae  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %ebx;pushl (%edi);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "leal (%edi), %esi;pushl %esi;calll - <LsaDeregisterLogonProcess+>;leal (%edi), %eax;pushl %eax": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ebx, %esi;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jge  <LsaDeregisterLogonProcess+>;cmpl %ebx, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>": 6,
                "cmpl %eax, (%ebp);jb - <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi;pushl %ebx;pushl %esi": 2,
                "cmpw %bx, -(%eax,%ecx,);je  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp - <LsaDeregisterLogonProcess+>;leal (%ebp), %ecx": 1,
                "pushl %eax;calll *(%ebp);movl %eax, %esi;cmpl %ebx, %esi;jl - <LsaDeregisterLogonProcess+>": 1,
                "movl (%esi), %eax;jb  <LsaDeregisterLogonProcess+>;ja  <LsaDeregisterLogonProcess+>;cmpl %eax, %ebx;jbe  <LsaDeregisterLogonProcess+>": 1,
                "calll *(%edi);jmp - <LsaDeregisterLogonProcess+>;int;int;int": 1,
                "movl (%edi), %eax;movl (%edi), %esi;leal (%eax,%eax,), %eax;shll $, %eax;addl %esi, %eax": 1,
                "leal (%esi), %ecx;addl %esi, %eax;cmpl %eax, %ecx;jae  <LsaDeregisterLogonProcess+>;movl (%edi), %eax": 1,
                "cmpl %eax, %ecx;jb - <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;cmpl $, %ecx;je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, %ecx;je  <LsaDeregisterLogonProcess+>;testl %ecx, %ecx;jle  <LsaDeregisterLogonProcess+>;leal -(%ecx), %eax": 1,
                "movl %ebx, -(%ebp);movl (%eax), %ebx;movl (%eax), %eax;movl (%esi), %edx;movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp);movl (%esi), %ebx;testl %ebx, %ebx": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;leal -(%eax), %ecx;addl %ecx, -(%ebp);pushl $": 1,
                "cmpl (%edi), %ebx;jne  <LsaDeregisterLogonProcess+>;cmpl (%edi), %edx;jne  <LsaDeregisterLogonProcess+>;cmpl (%edi), %ecx": 1,
                "movl (%ebp), %esi;pushl %edi;pushl $;pushl $;pushl $": 1,
                "movl %eax, (%esi);calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%esi);je  <LsaDeregisterLogonProcess+>": 1,
                "movl %ebx, (%eax);movl (%esi), %eax;pushl $;movl $, %edi;addl $, %eax": 1,
                "movl %eax, (%eax);calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%esi);je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %edi, (%esi);jne  <LsaDeregisterLogonProcess+>;movl $, (%esi);cmpl %edi, (%esi);jne  <LsaDeregisterLogonProcess+>": 10,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>": 7,
                "pushl $;leal -(%ebp), %eax;pushl $;xorl %esi, %esi;pushl %eax": 1,
                "pushl ;xorl %edi, %edi;incl %edi;pushl %edi;leal -(%ebp), %eax": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;movw %si, -(%ebp);movl $, -(%ebp)": 1,
                "pushl %eax;pushl %edi;pushl -(%ebp);calll  <LsaDeregisterLogonProcess+>;cmpl %esi, %eax": 1,
                "pushl -(%ebp);calll  <LsaDeregisterLogonProcess+>;cmpl %esi, %eax;jl  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "pushl $;popl %edi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %eax, %ecx;addl %ecx, -(%ebp);subl %ecx, %eax;je  <LsaDeregisterLogonProcess+>;movl -(%ebp,%edi,), %ecx": 1,
                "testb $, (%eax);je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;addl %eax, %ecx": 1,
                "incl %esi;xorl %ebx, %ebx;testl %esi, %esi;movl %esi, -(%ebp);jbe  <LsaDeregisterLogonProcess+>": 1,
                "addl $, %eax;cmpl , %eax;jae  <LsaDeregisterLogonProcess+>;movl , %eax;subl -(%ebp), %eax": 1,
                "movl %eax, -(%esi);movl -(%ebp), %eax;addl %eax, -(%ebp);incl -(%ebp);addl $, %esi": 1,
                "cmpl %esi, %ecx;je  <LsaDeregisterLogonProcess+>;testb $, (%ecx);je  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp)": 1,
                "testb $, (%ecx);je  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "insl %dx, %es:(%edi);addb %ah, (%ebp);addb %al, (%eax);int;int": 3,
                "pushl %eax;pushl $;movl %edi, -(%ebp);calll ;pushl %esi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl , %eax;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "movl %eax, %edi;calll - <ExReleaseResourceLite>;movl %fs:, %eax;movl %eax, %ecx;movl %fs:, %eax": 1,
                "pushl %eax;calll - <KeSetEvent>;jmp  <LsaDeregisterLogonProcess+>;movl , %eax;cmpl %ebx, %eax": 1,
                "cmpl %ebx, %eax;movl %eax, ;jne  <LsaDeregisterLogonProcess+>;movl $, %edi;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movb %bl, (%eax);movb $, (%eax);movl %ebx, (%eax);pushl $;leal (%eax), %ecx": 1,
                "pushl (%ebp);calll - <KeSetPriorityThread>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>;pushl -(%ebp)": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl ;jmp - <LsaDeregisterLogonProcess+>": 1,
                "calll - <ExFreePoolWithTag>;movl %ebx, ;jmp  <LsaDeregisterLogonProcess+>;movl $, %edi;popl %esi": 1,
                "pushl %edi;leal (%esi), %edi;xorl %ebx, %ebx;jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %ecx": 1,
                "calll - <ExFreePoolWithTag>;cmpl %edi, (%edi);jne - <LsaDeregisterLogonProcess+>;cmpl %ebx, (%esi);je  <LsaDeregisterLogonProcess+>": 1,
                "calll - <wctomb+>;movl $, %esi;movl %esi, %ecx;calll *;movb $, -(%ebp)": 1,
                "calll *;movb $, -(%ebp);movl , %ebx;movl $, %ecx;cmpl %ecx, %ebx": 1,
                "movb $, -(%ebp);movl , %eax;movl %eax, (%ebx);movl $, (%ebx);movl %ebx, (%eax)": 1,
                "jae  <LsaDeregisterLogonProcess+>;cmpl %edi, %eax;pushl $;popl %ecx;je  <LsaDeregisterLogonProcess+>": 1,
                "calll - <ExFreePoolWithTag>;popl %ebx;movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl %esi;pushl -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl -(%ebp)": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl %esi, (%ecx);pushl (%eax);calll - <ZwClose>": 1,
                "popl %esp;addb %dl, (%ebx);popl %ecx;addb %dl, (%ebx);pushl %esp": 4,
                "addb %dl, (%ebx);pushl %esp;addb %al, (%ebp);decl %ebp;addb %dh, (%ebx)": 4,
                "pushl %ebx;addb %dl, (%ebx);addb %al, %cs:(%ebp);popl %eax;addb %al, (%ebp)": 1,
                "addb %al, (%ebp);addb %al, (%eax);addb %al, (%eax);popl %esp;addb %dl, (%ebx)": 2,
                "addb %al, (%ebp);addb %al, (%eax);int;int;int": 4,
                "leal (%edx), %edi;movl -(%edi), %esi;movl (%edi), %eax;addl -(%ebp), %esi;cmpl -(%ebp), %eax": 1,
                "jbe  <LsaDeregisterLogonProcess+>;subl -(%ebp), %eax;pushl $;leal (%esi,%eax,), %eax;pushl %eax": 4,
                "jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);movl (%edi), %eax;testb $, %al;jne  <LsaDeregisterLogonProcess+>": 1,
                "testb $, %dl;je  <LsaDeregisterLogonProcess+>;cmpl $, (%eax);jne  <LsaDeregisterLogonProcess+>;cmpb $, (%ebp)": 2,
                "movl (%ebp), %edi;movl %esi, (%eax);movl %esi, (%edi);jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp)": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);movl $, (%ebp);movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl $, (%ebp);movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);movl $, (%ebp)": 1,
                "movl $, %ebx;pushl %edi;movl $, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl (%edi);leal -(%ebp), %eax;pushl -(%ebp);movl $, -(%ebp);pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);movl $, -(%ebp);pushl -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl -(%ebp);movl $, -(%ebp);pushl -(%ebp);movl %esi, -(%ebp);pushl %esi": 1,
                "cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl $, %eax;movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;movzwl (%ecx), %ecx;shrl %ecx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;movzwl (%ecx), %ecx;shrl %ecx;leal (%edx,%ecx,), %ecx": 1,
                "jae  <LsaDeregisterLogonProcess+>;movl %edi, %ecx;subl %edx, %ecx;addl %eax, %ecx;cmpl (%ebp), %edi": 1,
                "cmpl (%ebp), %edi;jae  <LsaDeregisterLogonProcess+>;movw (%ecx), %bx;cmpw (%edi), %bx;jne  <LsaDeregisterLogonProcess+>": 1,
                "jb - <LsaDeregisterLogonProcess+>;cmpl (%ebp), %edi;je  <LsaDeregisterLogonProcess+>;incl %eax;incl %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;xorl %esi, %esi": 1,
                "pushl %esi;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %esi;leal -(%ebp), %eax": 6,
                "andb $, %al;movb %al, (%ecx);xorl %edi, %edi;pushl (%ebp);calll - <ZwClose>": 1,
                "movb $, -(%ebp);jae  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;pushl %esi": 2,
                "je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl $, %eax;jb  <LsaDeregisterLogonProcess+>;cmpl $, %eax": 1,
                "movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);leal (%edx,%edx,), %eax;pushl %esi": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, %eax;ja  <LsaDeregisterLogonProcess+>": 1,
                "ja  <LsaDeregisterLogonProcess+>;pushl (%ebp);leal (%edx,%eax,), %edx;pushl %esi;leal (%edx), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;leal (%eax,%eax,), %edx;movl (%ebx,%edx,), %edx;leal (%ecx,%ecx,), %ecx;cmpl (%ebx,%ecx,), %edx": 1,
                "cmpl $-, %eax;jne - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;cmpl -(%edi), %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "incl -(%ebp);movl -(%ebp), %eax;addl $, %edi;cmpl (%esi), %eax;jb - <LsaDeregisterLogonProcess+>": 2,
                "movl (%edi), %edx;addl -(%ebp), %edx;pushl %ebx;pushl %esi;pushl %edx": 1,
                "pushl %ebx;pushl %esi;leal -(%eax,%edx), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>": 2,
                "addl $, %edi;cmpl (%esi), %eax;jb - <LsaDeregisterLogonProcess+>;movb $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "ja  <LsaDeregisterLogonProcess+>;movl (%esi), %edi;cmpl $, %edi;ja  <LsaDeregisterLogonProcess+>;cmpl %eax, (%esi)": 1,
                "cmpl %ebx, (%esi);je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;leal (%esi), %eax": 1,
                "addl %esi, %edx;pushl %edx;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 2,
                "addl $, %eax;cmpl (%esi), %ecx;jb - <LsaDeregisterLogonProcess+>;movl (%esi), %edx;xorl %edi, %edi": 1,
                "ja  <LsaDeregisterLogonProcess+>;movzwl %ax, %eax;cmpw $, (%edx,%eax,);jne  <LsaDeregisterLogonProcess+>;leal (%eax,%eax), %eax": 1,
                "xorl %ecx, %ecx;leal (%esi), %eax;popl %edx;addl (%eax), %ecx;addl $, %eax": 1,
                "jbe  <LsaDeregisterLogonProcess+>;pushl (%ebp);movl (%edx), %edi;leal (%edx,%edi,), %ebx;pushl %esi": 1,
                "leal (%esi), %eax;pushl %eax;calll - <ExQueueWorkItem>;leal (%esi), %ecx;calll - <wctomb+>": 1,
                "pushl ;pushl ;calll - <SeSinglePrivilegeCheck>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 14,
                "pushl ;calll - <SeSinglePrivilegeCheck>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp)": 1,
                "cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl (%eax), %ebx;movl %ebx, -(%ebp)": 1,
                "movb %al, (%ebx);addl $, %ebx;movb (%ebx), %al;movb %al, (%ebx);pushl $": 1,
                "addl $, %ebx;movb (%ebx), %al;movb %al, (%ebx);pushl $;popl %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);orl $-, -(%ebp);cmpl $, -(%ebp);jl  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>": 2,
                "jb  <LsaDeregisterLogonProcess+>;movl %ebx, (%eax);movl (%esi), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %esp;movl -(%ebp), %ebx;orl $-, -(%ebp);testl %ebx, %ebx;jl  <LsaDeregisterLogonProcess+>": 2,
                "movl $, %edi;rep  movsl (%esi), %es:(%edi);movl $, %ecx;calll - <ExReleaseResourceLite>;incl (%ebx)": 1,
                "movb $, %cl;calll *;calll  <LsaDeregisterLogonProcess+>;movl $, %esi;pushl %esi": 1,
                "jge  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl %edx, %eax": 1,
                "cmpl %edx, %eax;pushl %ebx;pushl %edi;je  <LsaDeregisterLogonProcess+>;cmpl %edx, (%esi)": 1,
                "movl (%ebx), %ebx;movl (%eax), %eax;leal (%edi,%ebx,), %edi;cmpl %ecx, %eax;jne - <LsaDeregisterLogonProcess+>": 1,
                "addl $, %esi;leal (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi;movl (%esi), %eax": 1,
                "andl $, %ecx;xorw %cx, -(%edi);movl (%esi), %esi;leal (%eax,%eax), %ecx;movl %ecx, %eax": 1,
                "movw -(%ebp), %dx;incl -(%ebp);movw %dx, (%eax,%ecx,);jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "jae  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movswl (%ecx,%edx,), %edx;cmpw $-, %dx;movl %edx, -(%ebp)": 1,
                "leal (%eax), %edx;cmpl %ecx, %edx;ja  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movl (%ecx), %edx": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;movl %edx, -(%eax);movw -(%ebp), %dx;movw %dx, (%eax)": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl %eax, %ecx;subl %ebx, %ecx": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl %eax, %ecx;subl %ebx, %ecx;movl %ecx, (%ebx);movl (%edx), %ecx": 1,
                "leal (%ecx,%ecx), %ecx;addl %eax, %ecx;cmpl (%ebp), %ecx;movl %ecx, -(%ebp);ja  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);incl (%ebx);cmpl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp);pushl %edi;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx;movl %eax, (%ebx)": 1,
                "movl %ebx, (%ecx);movl %ebx, (%eax);movl (%ebp), %eax;incl (%eax);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %eax;cmpl %ebx, %eax;jne  <LsaDeregisterLogonProcess+>;movl $, (%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "addl %eax, %ecx;addl %ecx, %eax;addl %esi, %edx;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "movl %edx, -(%ebp);jae  <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi;leal (%edx,%edx,), %edx;leal (%eax,%edx,), %eax": 1,
                "addl $, %ecx;pushl %ecx;pushl %eax;movl %eax, -(%ebp);calll - <wctomb+>": 1,
                "movl -(%ebp), %edi;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>;testb $, (%esi);je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%eax), %edx;testb $, %dl;jne  <LsaDeregisterLogonProcess+>;movl (%ebx), %edi;incl %ecx": 1,
                "movl %ebx, (%edx,%ecx);movl -(%ebp), %edx;movl %edx, (%ecx);movl -(%ebp), %edx;movl %eax, (%edx,%ecx)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $-, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;cmpl %ecx, (%eax);jae  <LsaDeregisterLogonProcess+>;movl %ecx, (%eax);xorl %eax, %eax": 1,
                "xorl %eax, %eax;cmpl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "calll - <ExFreePoolWithTag>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl %eax": 1,
                "movl (%eax,%esi), %ecx;testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>;movl -(%ebp), %eax": 1,
                "testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;movl (%esi,%eax), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>;addl $, %esi;decl (%ebp);jne - <LsaDeregisterLogonProcess+>": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>": 1,
                "calll - <ExFreePoolWithTag>;testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>;pushl $;pushl %ebx": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;addl $, %eax;pushl %esi;movl %eax, -(%ebp);leal (%ebx), %esi": 1,
                "addl %ebx, %eax;pushl %eax;calll - <wctomb+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;movzwl (%edi), %eax;incl (%ebp)": 1,
                "movl (%ebp), %eax;cmpl (%esi), %eax;jb - <LsaDeregisterLogonProcess+>;movl -(%ebp), %edi;incl -(%ebp)": 1,
                "addb %ah, ;addb %ch, ;addb %bh, (%eax);addb %bl, (%eax);addb %ah, %cs:": 1,
                "leal (%ecx,%eax,), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax": 1,
                "pushl -(%ebp);calll - <swprintf>;addl $, %esp;movl %edi, %ecx;calll - <ExReleaseResourceLite>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;pushl $;popl %ebx": 4,
                "xorl %edi, %edi;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %edi;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);calll - <ZwQueryInformationFile>;movl %eax, %esi;cmpl %edi, %esi;jl  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %edi, %esi;jl  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "jl  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;cmpl (%ebp), %eax": 1,
                "movl %ebx, (%eax);xorl %esi, %esi;jmp  <LsaDeregisterLogonProcess+>;movl $, %esi;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %eax;movl -(%ebx), %esi;andl $, -(%ebp);addl %eax, %esi;leal (%ebp), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 6,
                "movl -(%ebp), %eax;cmpl (%ebx), %eax;jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;cmpl (%ebx), %eax": 2,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl %eax, (%ecx);leal (%edi), %eax": 1,
                "pushl -(%ebp);calll - <ZwClose>;incl -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %esi;pushl %edi;pushl %esi;calll - <wctomb+>;movl (%esi), %edx": 1,
                "cmpl $, %edx;jge  <LsaDeregisterLogonProcess+>;leal (%esi), %eax;movl (%eax), %edi;leal (%esi), %ecx": 1,
                "cmpl %eax, %edi;je  <LsaDeregisterLogonProcess+>;leal (%esi,%edx,), %ecx;subl %edi, %eax;addl %eax, (%ecx)": 1,
                "je  <LsaDeregisterLogonProcess+>;leal (%esi,%edx,), %ecx;subl %edi, %eax;addl %eax, (%ecx);pushl %esi": 1,
                "addl %eax, (%ecx);pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;movl %ebx, (%esi);movl %edi, (%esi);calll - <LsaDeregisterLogonProcess+>;pushl $": 1,
                "calll - <ExFreePoolWithTag>;testl %ebx, %ebx;jl  <LsaDeregisterLogonProcess+>;movl $, %ebx;movl %ebx, %ecx": 1,
                "jl  <LsaDeregisterLogonProcess+>;movl %ebx, %ecx;calll *;cmpl %edi, ;jne  <LsaDeregisterLogonProcess+>": 1,
                "calll *;cmpl %edi, ;jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl %eax, ": 1,
                "movl %eax, -(%ebp);movl $, %eax;movl $, (%esp);pushl %eax;pushl $": 1,
                "movl %eax, %ecx;movl -(%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebx), %ecx": 1,
                "popl %ecx;popl %ecx;jne  <LsaDeregisterLogonProcess+>;andl $-, -(%ebx);movl -(%ebp), %esi": 1,
                "jge  <LsaDeregisterLogonProcess+>;pushl $;pushl -(%ebx);calll - <ExFreePoolWithTag>;andl $, -(%ebx)": 1,
                "movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;cmpl %edi, ;je  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl %edi, ;je  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx;cmpl $, (,%ecx,)": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;pushl %edi;pushl %edi;pushl %edi": 1,
                "xorl %esi, %esi;leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;popl %edi": 1,
                "movl $, %edi;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl $;pushl $": 1,
                "pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;cmpl %esi, %ebx;jne  <LsaDeregisterLogonProcess+>": 1,
                "addl $, %eax;movl (%eax), %ecx;movl %ecx, (%ebx);movl (%eax), %ecx;movl %ecx, (%ebx)": 1,
                "shll $, %esi;pushl %esi;pushl $;movl $, (%ebx);calll - <ExAllocatePoolWithTag>": 1,
                "calll - <ExFreePoolWithTag>;popl %ebx;movl %edi, %eax;popl %edi;popl %esi": 1,
                "movl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "jb  <LsaDeregisterLogonProcess+>;cmpw $, (%edx);je  <LsaDeregisterLogonProcess+>;incl %ebx;decl %edx": 1,
                "leal (%ecx,%edx,), %ebx;movw -(%ebp,%ebx), %bx;movw %bx, -(%ebp,%edx,);incl %edx;cmpl %eax, %edx": 1,
                "cmpl %edi, %ebx;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;calll - <KeQuerySystemTime>": 1,
                "movl -(%ebp), %edi;subl (%eax), %edi;movl -(%ebp), %esi;sbbl (%eax), %esi;cmpl (%eax), %esi": 1,
                "movl %eax, %ebx;jmp  <LsaDeregisterLogonProcess+>;xorl %edi, %edi;pushl %edi;pushl -(%ebp)": 1,
                "movl (%ebp), %ecx;pushl %ebx;pushl %esi;xorl %ebx, %ebx;movl $, %eax": 1,
                "pushl %ebx;pushl %esi;xorl %ebx, %ebx;movl $, %eax;xorl %esi, %esi": 1,
                "jge  <LsaDeregisterLogonProcess+>;cmpl $, -(%edx);ja  <LsaDeregisterLogonProcess+>;cmpl $, -(%edx);ja  <LsaDeregisterLogonProcess+>": 1,
                "jb  <LsaDeregisterLogonProcess+>;testl %esi, %esi;jg  <LsaDeregisterLogonProcess+>;jl  <LsaDeregisterLogonProcess+>;testl %edi, %edi": 1,
                "pushl %esi;pushl %eax;calll - <ZwSetEvent>;movl %esi, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <ZwOpenEvent>": 1,
                "popl %ebx;jne  <LsaDeregisterLogonProcess+>;leal (%esi), %eax;cmpl %eax, (%eax);je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, ;pushl $;movl %eax, %esi;movl $, %edi;setge -(%ebp)": 1,
                "calll - <ExAcquireResourceExclusiveLite>;cmpl %ebx, ;jne  <LsaDeregisterLogonProcess+>;movl $, %eax;cmpb $, -(%ebp)": 1,
                "cmpl %ebx, ;jne  <LsaDeregisterLogonProcess+>;movl $, %eax;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, %eax;jl - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;incl %ebx": 1,
                "movl %edi, %ecx;movl %ebx, ;calll - <ExReleaseResourceLite>;incl (%esi);jne  <LsaDeregisterLogonProcess+>": 1,
                "addl $, %esp;jmp  <LsaDeregisterLogonProcess+>;cmpl %esi, %eax;jb  <LsaDeregisterLogonProcess+>;cmpl -(%ebp), %eax": 1,
                "pushl %eax;calll - <wcsstr>;popl %ecx;popl %ecx;testl %eax, %eax": 1,
                "movl %ebx, %ecx;calll - <ExReleaseResourceLite>;incl (%edi);jne  <LsaDeregisterLogonProcess+>;leal (%edi), %eax": 1,
                "js  <LsaDeregisterLogonProcess+>;decl %esi;addb %dh, (%ebp);insl %dx, %es:(%edi);addb %dl, (%eax)": 2,
                "jae  <LsaDeregisterLogonProcess+>;je  <LsaDeregisterLogonProcess+>;addb %al, (%eax);int;int": 4,
                "jmp  <LsaDeregisterLogonProcess+>;leal (%esi), %eax;movl %eax, -(%ebp);leal (%esi), %eax;pushl %edi": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movl %eax, %esi;calll - <ExReleaseResourceLite>;testl %esi, %esi": 1,
                "testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;incl (%ebx);jne  <LsaDeregisterLogonProcess+>;leal (%ebx), %eax": 1,
                "jl  <LsaDeregisterLogonProcess+>;incl (%ebx);jne  <LsaDeregisterLogonProcess+>;leal (%ebx), %eax;cmpl %eax, (%eax)": 1,
                "cmpl (%eax), %ecx;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;calll - <ExReleaseResourceLite>;incl (%ebx)": 1,
                "je  <LsaDeregisterLogonProcess+>;movb $, %cl;movb $, (%ebx);calll *;popl %edi": 1,
                "movl (%ebp), %esi;movl %eax, -(%ebp);pushl %edi;movl %fs:, %eax;movl %eax, %ebx": 1,
                "andl $, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp);leal (%esi), %ebx;movl -(%ebp), %eax": 1,
                "pushl %eax;calll - <wcscat>;addl $, %esp;pushl $;leal -(%ebx), %eax": 2,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;pushl %esi;pushl $": 1,
                "addb %dl, (%ebx);addb %dh, %gs:(%ebx);jae  <LsaDeregisterLogonProcess+>;imull $, (%eax), %eax;andb %al, (%eax)": 1,
                "addb %ch, %gs:(%ebp);outsl (%esi), %dx;addb %dh, (%edx);jns  <LsaDeregisterLogonProcess+>;andb %al, (%eax)": 1,
                "jne  <LsaDeregisterLogonProcess+>;leal (%edi), %eax;cmpl %eax, (%eax);je  <LsaDeregisterLogonProcess+>;movb %bl, %cl": 2,
                "cmpl %eax, (%eax);je  <LsaDeregisterLogonProcess+>;movb %bl, %cl;movb %bl, (%edi);calll *": 2,
                "jge  <LsaDeregisterLogonProcess+>;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl %eax;movl %eax, -(%ebp)": 1,
                "movl %fs:, %eax;cmpb $, (%eax);jne  <LsaDeregisterLogonProcess+>;popl %ebp;jmp - <ZwFsControlFile+>": 1,
                "je - <LsaDeregisterLogonProcess+>;pushl %esi;pushl %eax;calll  <LsaDeregisterLogonProcess+>;movl %eax, %esi": 1,
                "incl %eax;retl;movl -(%ebp), %esp;andl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 6,
                "movl %eax, -(%ebp);movl $, -(%ebp);cmpb $, %bl;jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %edx": 1,
                "je  <LsaDeregisterLogonProcess+>;calll - <ExRaiseDatatypeMisalignment>;movl , %eax;movzwl -(%ebp), %ecx;movl -(%ebp), %edx": 10,
                "testb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);orl $-, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movzwl -(%ebp), %eax;movl %eax, %ecx;shrl %ecx;movl -(%ebp), %edx;cmpw $, -(%edx,%ecx,)": 1,
                "calll - <CmUnRegisterCallback+>;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jl  <LsaDeregisterLogonProcess+>;pushl %edi": 1,
                "movl %ecx, -(%ebp);testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %edi": 1,
                "testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %edi;pushl %edi": 1,
                "pushl $;leal -(%ebp), %edi;pushl %edi;pushl (%ebp);subl -(%ebp), %eax": 1,
                "movl -(%ebp), %esp;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax": 11,
                "movl (%eax), %eax;movl %eax, -(%ebp);cmpb $, %bl;jne  <LsaDeregisterLogonProcess+>;movl %esi, -(%ebp)": 1,
                "jb  <LsaDeregisterLogonProcess+>;cmpl %eax, %ecx;jbe  <LsaDeregisterLogonProcess+>;calll - <ExRaiseAccessViolation>;pushl $": 1,
                "jbe  <LsaDeregisterLogonProcess+>;calll - <ExRaiseAccessViolation>;pushl $;movzwl -(%ebp), %eax;pushl %eax": 1,
                "calll - <ExRaiseAccessViolation>;pushl $;movzwl -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movzwl -(%ebp), %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithQuotaTag>;movl %eax, -(%ebp)": 1,
                "jne  <LsaDeregisterLogonProcess+>;cmpl $, %ebx;ja  <LsaDeregisterLogonProcess+>;cmpw %si, -(%ebp);jbe  <LsaDeregisterLogonProcess+>": 1,
                "movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $;calll - <CmUnRegisterCallback+>": 1,
                "cmpl %edi, %esi;jl  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi;pushl (%ebp)": 1,
                "pushl (%ebp);pushl %edi;pushl (%ebp);pushl (%ebp);pushl %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %esi;movl %esi, -(%ebp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl $;pushl ;pushl %esi;pushl -(%ebp)": 2,
                "cmpl $, -(%ebp);jl  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;movl (%ebx), %ecx;testl %edi, (%ecx)": 1,
                "pushl (%ebx);calll  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);calll  <LsaDeregisterLogonProcess+>": 1,
                "movb (%eax), %bl;movb %bl, -(%ebp);pushl -(%ebp);pushl ;pushl ": 6,
                "movl (%ebp), %esi;cmpb $, %bl;jne  <LsaDeregisterLogonProcess+>;movl , %eax;cmpl %eax, %esi": 1,
                "testw %cx, %cx;je  <LsaDeregisterLogonProcess+>;testb $, %dl;je  <LsaDeregisterLogonProcess+>;calll - <ExRaiseDatatypeMisalignment>": 3,
                "movl -(%ebp), %esi;movl %eax, %edi;pushl -(%ebp);calll - <ZwClose>;cmpl $, (%ebp)": 1,
                "calll - <ZwClose>;testl %edi, %edi;jl  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "testl %edi, %edi;jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;orl %ebx, (%eax);movl (%esi), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>;movl %esi, %ecx;calll - <ObfDereferenceObject>;movl %edi, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);pushl %edi": 4,
                "movl , %ecx;movl %ecx, -(%ebp);cmpl %edi, %ecx;je  <LsaDeregisterLogonProcess+>;pushl $": 9,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);movl (%ebp), %esi;cmpb $, %al": 1,
                "andl $, -(%ebp);jmp - <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax;retl": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edi, -(%ebp);jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ecx;calll  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp)": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %esi;cmpb $, -(%ebp)": 1,
                "jbe  <LsaDeregisterLogonProcess+>;pushl $;calll - <ExRaiseStatus>;pushl $;movl (%ebp), %eax": 1,
                "movl -(%ebp), %ecx;cmpl %eax, %ecx;jb  <LsaDeregisterLogonProcess+>;movl $, (%eax);movl , %eax": 1,
                "movl (%ecx), %edx;movl %edx, -(%ebp);movl (%ecx), %esi;movl %esi, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %edx;jmp  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);pushl $;popl %ecx;movl -(%ebp), %esi": 1,
                "movl %ecx, -(%ebp);movw %si, (%ebx);movzwl %ax, %eax;movzwl -(%ebp), %ecx;leal (%eax,%ecx), %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithQuotaTag>;movl %eax, (%ebx);cmpl %esi, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <RtlAppendUnicodeStringToString>": 1,
                "leal -(%eax,%ecx), %eax;movl %eax, -(%ebp);cmpw $, (%eax);je  <LsaDeregisterLogonProcess+>;incl %eax": 1,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx": 1,
                "calll - <ExFreePoolWithTag>;pushl %edi;pushl %esi;calll - <ExFreePoolWithTag>;popl %edi": 1,
                "movl %eax, %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax": 1,
                "cmpl %ebx, %esi;jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;orl (%ebp), %eax": 1,
                "pushl %edi;movl %ebx, (%esi);calll - <ExAllocatePoolWithQuotaTag>;movl %eax, %ecx;cmpl %ebx, %ecx": 1,
                "movl %ecx, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);jmp  <LsaDeregisterLogonProcess+>": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);jmp  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "movl (%esi), %eax;cmpl %ebx, (%eax);jne  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %eax": 1,
                "movl %eax, (%ecx);movl (%esi), %ecx;movl (%ecx), %eax;cmpl %ebx, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl (%eax), %eax;movb $, (%eax);movl (%esi), %eax;movl (%eax), %eax;movl %ebx, (%eax)": 1,
                "movl %ebx, (%eax);movl (%esi), %eax;movl (%eax), %eax;addl %edi, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "popl %ecx;movl (%ebp), %esi;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %ecx;calll - <ObReferenceObjectByHandle>;movl %eax, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl (%eax), %esi;movl (%eax), %eax;movl (%esi), %ecx;cmpl (%ecx), %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "movzwl -(%ebp), %eax;shrl %eax;pushl %eax;pushl %esi;pushl $": 1,
                "stosw %ax, %es:(%edi);movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp);movl %ebx, -(%ebp)": 1,
                "jae  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;cmpw $, (%eax);jne  <LsaDeregisterLogonProcess+>;orl $-, -(%ebp)": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;addl $, -(%ebp);addl $, -(%ebp);jmp - <LsaDeregisterLogonProcess+>": 1,
                "orl $-, -(%ebp);movl (%ebp), %eax;pushl $;shll $, %eax;pushl %eax": 1,
                "incl %ebx;pushl %ebx;calll - <ExAllocatePoolWithTag>;movl %eax, %edi;movl %edi, -(%ebp)": 1,
                "cmpl (%ebp), %ecx;jb - <LsaDeregisterLogonProcess+>;movb $, (%esi);movl (%esi), %eax;addl $, %eax": 1,
                "movl -(%ebp), %ecx;leal -(%ecx,%eax,), %esi;movl %eax, %edi;movl (%esi), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl (%edi), %eax;movl (%eax), %edx;movl (%edx), %edx;movl (%eax), %eax;cmpl (%edx), %eax": 1,
                "cmpl (%edx), %eax;je  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;pushl (%ecx)": 1,
                "popl %esi;movl %edi, %eax;popl %edi;jmp  <LsaDeregisterLogonProcess+>;movl $, %eax": 1,
                "outsb (%esi), %dx;imull $, (%esi), %ebp;outsb (%esi), %dx;addb %cl, (%edx);orb (%eax), %dl": 1,
                "jae  <LsaDeregisterLogonProcess+>;jne  <LsaDeregisterLogonProcess+>;outsl %fs:(%esi), %dx;ja  <LsaDeregisterLogonProcess+>;orb %cs:(%eax), %al": 1,
                "pushl $;calll - <wctomb+>;xorl %ebx, %ebx;movl %ebx, -(%ebp);movw %bx, -(%ebp)": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %eax;pushl %eax;calll - <PsGetCurrentThreadId>;pushl %eax": 1,
                "jb  <LsaDeregisterLogonProcess+>;movl %ebx, (%eax);movl %ebx, (%edi);movl (%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 3,
                "pushl -(%ebp);pushl %eax;pushl %ebx;pushl %ecx;calll - <ObReferenceObjectByHandle>": 2,
                "jl  <LsaDeregisterLogonProcess+>;movl (%ecx), %eax;movl %eax, -(%ebp);calll - <ObfDereferenceObject>;movl %ebx, -(%ebp)": 1,
                "cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;movl , %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl %eax, (%esi);movl %esi, %ecx;calll - <ObfDereferenceObject>;movl (%ebp), %eax;cmpl %ebx, %eax": 1,
                "calll - <wctomb+>;xorl %edi, %edi;xorl %ebx, %ebx;cmpl %edi, ;je  <LsaDeregisterLogonProcess+>": 2,
                "je  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;cmpl (%eax), %ecx;je  <LsaDeregisterLogonProcess+>;movl , %eax": 1,
                "cmpl %esi, ;je  <LsaDeregisterLogonProcess+>;cmpl %esi, %edi;je  <LsaDeregisterLogonProcess+>;movl (%edi), %eax": 3,
                "cmpw %si, %cx;je  <LsaDeregisterLogonProcess+>;testb $, %dl;je  <LsaDeregisterLogonProcess+>;calll - <ExRaiseDatatypeMisalignment>": 2,
                "movl %eax, -(%ebp);testb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "calll *;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %edi, -(%ebp);movl , %ecx": 2,
                "movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jl  <LsaDeregisterLogonProcess+>;pushl %esi;pushl (%ebp)": 2,
                "pushl (%ebp);pushl (%edi);calll  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp);movl %edi, %ecx": 2,
                "pushl $;calll - <KeBugCheckEx>;movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp)": 1,
                "cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "cmpl %eax, (%ebp);je  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "cmpl %ebx, %eax;jl  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp);cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jge  <LsaDeregisterLogonProcess+>;orl $-, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;cmpl $, %edi;je  <LsaDeregisterLogonProcess+>;cmpl $, %edi": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %edi;jge  <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 2,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl %edi, %esi;jmp  <LsaDeregisterLogonProcess+>;movl %ebx, (%eax)": 1,
                "movl %ebx, (%eax);movl (%esi), %eax;cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx": 1,
                "movb %al, -(%ebp);cmpl %ebx, (%ebp);jne  <LsaDeregisterLogonProcess+>;movl $, (%ebp);movb $, -(%ebp)": 1,
                "testl %ebx, %ebx;jge  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx)": 1,
                "testl %ebx, %ebx;jl  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "movl %edx, (%edi);movl %edi, (%edx);movb %al, %cl;calll *;calll  <LsaDeregisterLogonProcess+>": 2,
                "jmp  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;movb $, %cl;calll *;cmpb $, -(%ebp)": 1,
                "movl %edi, (%edx);movb %al, %cl;calll *;calll  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>": 1,
                "calll - <ObfDereferenceObject>;movl %ebx, %eax;calll - <wctomb+>;retl $;int": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl %fs:, %eax;movb (%eax), %al": 1,
                "movl , %eax;movl (%ebp), %ecx;cmpl %eax, %ecx;jb  <LsaDeregisterLogonProcess+>;movl %esi, (%eax)": 1,
                "jb  <LsaDeregisterLogonProcess+>;movl %esi, (%eax);movl , %eax;movl (%ecx), %edx;movl %edx, -(%ebp)": 1,
                "movl %esi, (%eax);movl , %eax;movl (%ecx), %edx;movl %edx, -(%ebp);cmpl %eax, %edx": 1,
                "jbe  <LsaDeregisterLogonProcess+>;calll - <ExRaiseAccessViolation>;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl (%eax), %eax": 2,
                "movl (%ebp), %ecx;cmpl %esi, (%ecx);je  <LsaDeregisterLogonProcess+>;movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %esi, (%ecx);je  <LsaDeregisterLogonProcess+>;movl %fs:, %eax;movl %eax, -(%ebp);movb (%eax), %al": 1,
                "movl %eax, -(%ebp);cmpl %esi, %eax;jl  <LsaDeregisterLogonProcess+>;movl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ecx), %eax;movl %eax, (%edi);calll - <ObfDereferenceObject>;movl (%edi), %ebx;negl %ebx": 1,
                "cmpl $, %esi;jne  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %edi;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %esi;movl %esi, -(%ebp)": 1,
                "calll - <ProbeForWrite>;movl (%ebp), %edi;movl , %eax;cmpl %eax, %edi;jb  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%ebp);pushl (%esi);calll  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp);orl $-, -(%ebp)": 1,
                "pushl %ecx;pushl %ecx;pushl %ebx;movl %fs:, %eax;movb (%eax), %bl": 2,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %esi;xorl %esi, %esi": 3,
                "pushl %esi;xorl %esi, %esi;cmpb $, %bl;pushl %edi;jne  <LsaDeregisterLogonProcess+>": 3,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;xorl %ebx, %ebx;incl %ebx": 1,
                "xorl %ebx, %ebx;incl %ebx;cmpl %ebx, (%ebp);je  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp)": 1,
                "cmpb %bl, -(%ebp);jne  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);pushl $;popl %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi;cmpl %esi, %edi": 2,
                "pushl %eax;pushl %esi;pushl $;pushl ;pushl (%ebp)": 1,
                "jl  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);calll - <ZwSaveKeyEx+>": 1,
                "movl %fs:, %eax;incl (%eax);jne  <LsaDeregisterLogonProcess+>;leal (%eax), %ecx;cmpl %ecx, (%ecx)": 7,
                "cmpl %eax, (%ebp);jb  <LsaDeregisterLogonProcess+>;movl %edi, (%eax);movl , %eax;pushl $": 1,
                "rep  movsl (%esi), %es:(%edi);cmpb $, %bl;jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edx;cmpl %eax, %edx": 1,
                "movl %eax, -(%ebp);andl $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movzwl %ax, %esi": 1,
                "pushl -(%ebp);pushl ;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi": 1,
                "pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;movl %fs:, %eax;incl (%eax)": 1,
                "pushl %ebx;calll - <ExFreePoolWithTag>;movl %fs:, %eax;incl (%eax);jne  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %esi, -(%ebp)": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;testb $-, (%eax);je  <LsaDeregisterLogonProcess+>;movl $, %ebx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl (%eax);pushl (%eax);calll  <LsaDeregisterLogonProcess+>": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl %eax;movl %edi, -(%ebp);pushl %esi;leal -(%ebp), %eax;xorl %edi, %edi": 1,
                "pushl -(%ebp);movl %eax, %esi;calll - <ZwClose>;cmpl %edi, %esi;jge  <LsaDeregisterLogonProcess+>": 1,
                "calll - <ZwSetValueKey>;jmp  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);pushl -(%ebp);calll - <ZwClose>": 1,
                "pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "int;movl %edi, %edi;pushl %esi;xorl %esi, %esi;cmpb $, ": 1,
                "jbe  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax;movl %esi, %ecx;shll %cl, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%ebp);calll - <ZwClose>;movl -(%ebp), %eax;cmpl $, %eax": 1,
                "xorl %eax, %eax;movb (%edi), %al;pushl %ebx;pushl %eax;leal -(%ebp), %eax": 1,
                "movl (%ebp), %esi;movw %cx, (%eax);movl (%esi), %esi;movl (%esi), %eax;testb $, (%eax)": 1,
                "calll  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "sbbl %ebx, %ebx;andl $, %ebx;addl $, %ebx;movl %ebx, -(%ebp);calll  <LsaDeregisterLogonProcess+>": 1,
                "andl $, %ebx;addl $, %ebx;movl %ebx, -(%ebp);calll  <LsaDeregisterLogonProcess+>;movl %edi, %ecx": 1,
                "xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl (%ebp);calll - <ZwClose>": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;pushl (%ebp);xorl %ebx, %ebx": 1,
                "pushl %ebx;pushl ;leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp)": 2,
                "pushl $;pushl %esi;calll *(%esi);testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 2,
                "retl $;int;jae  <LsaDeregisterLogonProcess+>;addb %ch, %gs:(%eax,%eax);addb %ah, (%ebx)": 1,
                "pushl %edi;pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl %eax, %edi;cmpl $-, %edi": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl %eax, %edi;cmpl $-, %edi;je  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "cmpl $-, %edi;je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %edi;pushl %esi": 1,
                "testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;jge  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "calll *(%ecx);movl %eax, %edi;cmpl %ebx, %edi;je  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "movb $, -(%ebp);movl %esi, -(%ebp);je  <LsaDeregisterLogonProcess+>;orl $-, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl %esi, -(%ebp);je  <LsaDeregisterLogonProcess+>;orl $-, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "movb %bl, (%esi);jl  <LsaDeregisterLogonProcess+>;pushl %ebx;leal (%ebp), %eax;pushl %eax": 1,
                "pushl (%eax);pushl (%eax);pushl %eax;calll  <LsaDeregisterLogonProcess+>;movl %esi, %ecx": 1,
                "pushl (%eax);pushl %eax;calll  <LsaDeregisterLogonProcess+>;movl %esi, %ecx;calll - <ObfDereferenceObject>": 1,
                "jb  <LsaDeregisterLogonProcess+>;jb  <LsaDeregisterLogonProcess+>;addb %ch, %gs:(%esi);je  <LsaDeregisterLogonProcess+>;pushl %esi": 2,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);incl %ebx;addb %dh, (%ebp)": 2,
                "je  <LsaDeregisterLogonProcess+>;incl %edx;addb %dh, (%ebp);imull $, (%eax), %eax;decl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %esp;addb %bh, (%ecx);jo  <LsaDeregisterLogonProcess+>;addb %al, %gs:(%eax)": 1,
                "imull $, (%eax), %esi;jae  <LsaDeregisterLogonProcess+>;jb  <LsaDeregisterLogonProcess+>;addb %al, (%eax);addb %ah, ": 1,
                "addb %ah, ;addb %al, (%eax);addb %al, (%ebx);pushl %ebx;addb %al, (%eax,%eax)": 1,
                "movl %eax, -(%ebp);calll  <LsaDeregisterLogonProcess+>;xorl %esi, %esi;cmpl %esi, ;movl %eax, %ebx": 1,
                "movl -(%ebp), %eax;pushl %esi;pushl %esi;movl %eax, -(%ebp);pushl %edi": 2,
                "movl $, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl %esi, -(%ebp);calll - <ZwCreateKey>": 2,
                "pushl %eax;movw %si, -(%ebp);movw $, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax": 1,
                "calll *;pushl %esi;pushl $;calll - <RtlInitUnicodeString>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "calll - <RtlInitUnicodeString>;pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;pushl $": 1,
                "popl %ebx;calll - <KeRaiseUserException+>;leave;retl;pushl %esi": 1,
                "outsl (%esi), %dx;addb %cl, %ah;int;int;int": 1,
                "pushl $;calll *;popl %ebp;retl $;int": 2,
                "xorb %al, (%eax);cmpl %eax, (%eax);addb %al, (%eax);int;int": 1,
                "movl , %eax;pushl %esi;pushl ;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movw %si, -(%ebp);popl %ecx;andl $, %eax;movl %eax, -(%ebp);movzwl -(%ebp), %eax": 1,
                "cmpw $, %dx;jbe  <LsaDeregisterLogonProcess+>;addl $, %edx;jmp  <LsaDeregisterLogonProcess+>;addl $, %edx": 1,
                "leave;retl;popl %esp;addb %dl, (%ebx);jns  <LsaDeregisterLogonProcess+>": 1,
                "xorb (%eax), %al;popl %esp;addb %al, (%ebx);outsl (%esi), %dx;addb %ch, (%esi)": 2,
                "pushl %esi;pushl %edi;xorl %edi, %edi;cmpl , %ebx;movl %eax, -(%ebp)": 1,
                "calll - <RtlAppendStringToString>;pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>": 2,
                "pushl $;movl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "calll - <DbgPrintEx>;addl $, %esp;pushl -(%ebp);movb $, ;calll - <ZwClose>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl -(%ebp);pushl %ebx;calll - <RtlSetBits>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %ebx;calll - <RtlSetBits>;movl -(%ebp), %ecx": 1,
                "jb - <LsaDeregisterLogonProcess+>;pushl %ebx;calll - <RtlNumberOfSetBits>;movl %eax, (%edi);movl -(%ebp), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;movb $, ;movl (%edi), %eax;cmpl $, (%eax);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;leal (%edi), %ebx;pushl %ebx;calll - <RtlSetAllBits>;movl (%ebx), %eax": 1,
                "pushl $;movw $, ;movl $, ;calll - <RtlAppendStringToString>;cmpl $, %ebx": 1,
                "pushl $;pushl $;pushl $;calll - <KeSetEvent>;pushl -(%ebp)": 1,
                "subl $, %eax;addb %dh, ;addb %bh, (%eax);addb %al, (%eax);addb %cl, %ah": 1,
                "addb %dh, ;addb %bh, (%eax);addb %al, (%eax);addb %cl, %ah;int": 1,
                "pushl %edi;leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;movb %bl, ;movw $, -(%ebp);movw %bx, -(%ebp)": 1,
                "movl $, %eax;movl %eax, ;movl %eax, ;movl $, %eax;movb $, ": 1,
                "movl %eax, ;movl $, %eax;movb $, ;movb $, ;movl %ebx, ": 1,
                "pushl %eax;pushl (%esi);leal -(%ebp), %eax;pushl %ebx;pushl %eax": 2,
                "incl -(%ebp);addl $, %esi;cmpl $, %esi;jb - <LsaDeregisterLogonProcess+>;popl %esi": 1,
                "movb $, ;calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;popl %edi;popl %ebx": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, %ecx;jmp  <LsaDeregisterLogonProcess+>;movl , %edx;shrl $, %edx": 2,
                "divl %ecx;cmpl (%ebp), %esi;popl %esi;jbe  <LsaDeregisterLogonProcess+>;cmpb %bl, ": 1,
                "cmpb $, ;movb $, ;jmp  <LsaDeregisterLogonProcess+>;cmpb %bl, ;jne  <LsaDeregisterLogonProcess+>": 1,
                "movb $, ;jmp  <LsaDeregisterLogonProcess+>;cmpb %bl, ;jne  <LsaDeregisterLogonProcess+>;cmpl , %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl $;pushl $;pushl %ebx;movl %eax, ": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl (%eax), %eax;addl $, %eax;imull $, %eax, %eax": 1,
                "movl (%ebp), %esi;cmpl %edx, %eax;movb %cl, ;movl %esi, ;movl (%ebp), %esi": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;popl %esi;leave;retl $": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebx), %eax;movl $, (%eax)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpl , %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "shrl $, %esi;cmpl %eax, %esi;jae  <LsaDeregisterLogonProcess+>;movl %esi, %eax;shll $, %eax": 1,
                "movl %esi, %eax;shll $, %eax;pushl $;xorl %edx, %edx;leal (%eax,%eax,), %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movb $, ": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movb $, ;andl $, (%eax);pushl $": 1,
                "addb %al, %gs:(%eax);addb %al, (%eax);addb %ch, ;addb %ch, ;addb %ch, ": 1,
                "addb %al, (%eax);pushl %eax;addb %dh, (%edx);outsl (%esi), %dx;addb %ah, (%esi)": 4,
                "jb  <LsaDeregisterLogonProcess+>;imull $, (%eax), %eax;decl %esi;addb %dh, (%ebp);insl %dx, %es:(%edi)": 6,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi;movl %eax, -(%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl $;leal -(%ebp), %eax": 10,
                "movl %esi, (%eax);cmpl %esi, -(%ebp);movl %esi, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi": 1,
                "pushl %eax;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>": 10,
                "pushl $;leal -(%ebp), %eax;rep  movsb (%esi), %es:(%edi);andl $, -(%ebp);pushl %eax": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %edx;movl (%edx), %eax;cmpl %esi, (%eax);jbe  <LsaDeregisterLogonProcess+>": 1,
                "movl (%eax), %eax;subl %esi, %eax;decl %eax;leal (%eax,%eax,), %eax;shll $, %eax": 1,
                "decl %eax;leal (%eax,%eax,), %eax;shll $, %eax;pushl %eax;leal (%ecx), %eax": 1,
                "movl $, -(%ebp);calll - <ZwClose>;xorl %esi, %esi;jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edx;movl %edx, (%eax);movl (%ecx), %eax;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);jl  <LsaDeregisterLogonProcess+>;cmpl $, (%ebx);jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;movl (%edx), %ecx;movl %eax, (%edi,%ecx)": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%edx), %eax;cmpl %esi, (%edi,%eax);je  <LsaDeregisterLogonProcess+>;cmpl %esi, %ecx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%edi,%eax), %edi;movl (%ebx), %esi;movl %ecx, %eax": 1,
                "movl %edi, -(%ebp);jb - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;movl (%edi), %eax;movl (%ebx,%eax), %eax;cmpl %esi, %eax": 1,
                "movl (%edi), %eax;movl -(%ebp), %ecx;addl $, %ebx;cmpl (%eax), %ecx;jb - <LsaDeregisterLogonProcess+>": 2,
                "calll - <ExFreePoolWithTag>;movl %esi, (%edi);movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi": 1,
                "int;incl %ecx;addb %ah, (%ebx);jo  <LsaDeregisterLogonProcess+>;imull $, (%eax), %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);incl %esp;addb %ch, (%edi);arpl %ax, (%eax)": 3,
                "cmpl %ebx, %eax;movl %eax, (%ebp);jl  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>": 2,
                "movl %eax, (%ebp);jl  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <NtClose>;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;movl %ebx, (%ebp);cmpl %ebx, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;pushl $;popl %edi": 4,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %ebx;leal -(%ebp), %eax": 6,
                "pushl -(%ebp);calll - <NtClose>;movl (%ebp), %eax;leave;retl $": 1,
                "testl %ebx, %ebx;pushl %esi;pushl %edi;pushl $;movb $, -(%ebp)": 1,
                "movl (%edi), %eax;cmpl %edx, %eax;jne  <LsaDeregisterLogonProcess+>;pushl %eax;pushl (%edi)": 1,
                "jbe  <LsaDeregisterLogonProcess+>;leal (%ecx), %eax;movl -(%eax), %ebx;cmpl -(%edi), %ebx;jne  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;orl $, (%eax);movb $, -(%ebp);movl (%ebp), %ebx;movzwl (%ebx), %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;movb $, -(%ebp);movl (%ebp), %ebx;cmpl %ebx, -(%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "jb - <LsaDeregisterLogonProcess+>;movl (%ebp), %ebx;incl -(%ebp);movl -(%ebp), %eax;addl $, %edi": 1,
                "cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movzwl (%eax), %eax;cmpl %eax, (%ebp)": 1,
                "jne - <LsaDeregisterLogonProcess+>;movl (%ecx), %eax;subl -(%ebp), %eax;decl %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %esi": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;jl  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;shrl %eax": 2,
                "pushl %edi;pushl %ebx;calll - <wcscpy>;popl %ecx;popl %ecx": 1,
                "popl %ecx;pushl $;pushl (%ebp);pushl %esi;pushl %ebx": 1,
                "pushl $;pushl (%ebp);pushl %esi;pushl %ebx;pushl (%ebp)": 1,
                "ja  <LsaDeregisterLogonProcess+>;outsb (%esi), %dx;addb %al, (%eax);addb %al, (%eax,%eax);addb %ah, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%eax,%eax);addb %ah, (%ebx);imull $, (%eax), %eax;addb %ah, (%eax,%eax)": 1,
                "testl %esi, %esi;pushl %ebx;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;andl $, %eax": 1,
                "andl $, %eax;cmpb $, %al;movl $, %ebx;jne  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "cmpb $, %al;movl $, %ebx;jne  <LsaDeregisterLogonProcess+>;pushl $;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl $, -(%ebp);pushl $;jmp  <LsaDeregisterLogonProcess+>;testb $, (%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "movzbl %al, %eax;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;cmpw $, -(%ebp);jbe  <LsaDeregisterLogonProcess+>": 1,
                "andw $, (%ecx,%eax,);movzwl -(%ebp), %eax;addl $, %eax;cmpl $, %eax;jbe  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <ZwOpenKey>;movl %eax, %esi;testl %esi, %esi;jge  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl %esi, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "addb %ah, (%ebp);addb %al, %fs:(%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "jl  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%esi,%eax), %eax": 3,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <ZwOpenKey>;movl %eax, %edi": 1,
                "jl  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl -(%ebp), %ecx": 2,
                "jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl -(%ebp), %ecx;cmpl (%esi,%eax), %ecx;jne  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <ZwClose>;jmp  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "movl %ebx, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp);movl $, %edi;cmpl %ebx, -(%ebp)": 1,
                "popl %esp;addb %ah, ;addb %ah, (%eax,%eax);addb %al, (%eax);addb %cl, (%eax)": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl %esi;xorl %esi, %esi;movl %eax, -(%ebp)": 1,
                "xorl %esi, %esi;movl %eax, -(%ebp);movl (%ebp), %eax;movl %esi, (%eax);movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl $;pushl -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 2,
                "pushl -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;calll - <wctomb+>;cmpl (%edi), %eax": 1,
                "movl -(%ebp,%eax), %eax;cmpl -(%ebp), %eax;ja  <LsaDeregisterLogonProcess+>;cmpl $-, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "cmpl -(%ebp), %ebx;jb - <LsaDeregisterLogonProcess+>;incl -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %edi;movl (%edi), %ecx;pushl %esi;pushl %esi;pushl (%eax)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl $, %ebx;calll  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <NtClose>": 1,
                "addb %ch, (%esi);addb %ch, (%edi);addb %al, (%eax);incl %ebx;addb %dh, (%ebp)": 1,
                "calll - <ZwOpenKey>;cmpl %ebx, %eax;movl %eax, -(%ebp);jge  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp)": 3,
                "pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <LsaDeregisterLogonProcess+>": 1,
                "retl $;movl -(%ebp), %ecx;movl -(%ebp), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl - <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "jl - <LsaDeregisterLogonProcess+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 2,
                "movl %ecx, -(%ebp);jne  <LsaDeregisterLogonProcess+>;cmpl -(%ebp), %eax;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;cmpl -(%ebp), %eax;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <ZwSetValueKey>;testb $, -(%ebp);movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "testb $, -(%ebp);movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl $": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "pushl $;pushl %ebx;pushl $;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "cmpl %ebx, -(%ebp);jl - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "je  <LsaDeregisterLogonProcess+>;imull $, (%edi), %esp;andb %ch, (%esi);je  <LsaDeregisterLogonProcess+>;imulw $, (%ebx), %sp": 1,
                "jns  <LsaDeregisterLogonProcess+>;arpl %cx, (%ebx);jb  <LsaDeregisterLogonProcess+>;insb %dx, %es:(%edi);andb %al, (%eax)": 1,
                "andb %ah, ;incl %esp;jne  <LsaDeregisterLogonProcess+>;jo  <LsaDeregisterLogonProcess+>;outsb (%esi), %dx": 1,
                "movb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;leal (%eax), %ecx": 1,
                "calll - <DbgPrintEx>;movl -(%ebp), %eax;addl $, %esp;movl (%edi), %edi;leal (%eax), %ecx": 1,
                "cmpl , %edi;jl - <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;cmpl %ebx, ;movl %ebx, -(%ebp)": 1,
                "jl - <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;cmpl %ebx, ;movl %ebx, -(%ebp);movb %bl, -(%ebp)": 1,
                "xorl %esi, %esi;pushl %esi;pushl ;calll - <ExFreePoolWithTag>;pushl %esi": 1,
                "pushl %esi;leal -(%ebp), %ecx;pushl %ecx;pushl %esi;pushl %esi": 1,
                "cmpb $, ;jne  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;pushl $;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %eax;leal (%esi,%eax,), %edi;movl (%edi), %eax;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl %ebx, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl $;pushl $": 1,
                "pushl $;movb $, ;pushl (%esi);movb %bl, (%ebp);movb %bl, (%ebp)": 1,
                "movb %bl, (%ebp);calll - <ZwSetInformationObject>;pushl (%esi);calll - <ZwClose>;movb %bl, ": 1,
                "pushl %edi;pushl (%ebp);movl (%eax), %edi;pushl (%ebp);pushl (%ebp)": 1,
                "movl %eax, %esi;calll - <PsRevertToSelf>;popl %edi;movl %esi, %eax;popl %esi": 1,
                "int;int;cmpb $, ;jne  <LsaDeregisterLogonProcess+>;cmpb $, ": 1,
                "cmpb %bl, ;je  <LsaDeregisterLogonProcess+>;pushl $;pushl $;pushl %ebx": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;movb $, ;pushl $": 1,
                "int;pushl $;calll - <KeCancelTimer>;retl;int": 1,
                "calll  <LsaDeregisterLogonProcess+>;cmpb $, ;je  <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "movl %esp, %ebp;pushl %ebx;xorl %ebx, %ebx;pushl %ebx;pushl $": 1,
                "movb %al, ;movb (%ebp), %al;cmpb %bl, %al;movl $, ;movl %ebx, ": 1,
                "movb (%ebp), %al;cmpb %bl, %al;movl $, ;movl %ebx, ;movl %ebx, ": 1,
                "cmpb %bl, %al;movl $, ;movl %ebx, ;movl %ebx, ;movb %al, ": 1,
                "movl %ebx, ;movb %al, ;jne  <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>;cmpb %bl, ": 1,
                "cmpl %eax, %ecx;je  <LsaDeregisterLogonProcess+>;movl (%ecx), %eax;andl $, %eax;cmpl $, %eax": 1,
                "andl $, %eax;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;movb $, %al;jmp  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;movb $, %al;jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "cmpl %ecx, %eax;je  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx;movl (%eax), %edx;addl $-, %eax": 1,
                "movl (%eax), %edx;addl $-, %eax;movl %ecx, (%edx);movl %edx, (%ecx);movl (%eax), %ecx": 1,
                "addl $-, %eax;movl %ecx, (%edx);movl %edx, (%ecx);movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx);pushl %eax;movl %edx, (%ecx)": 1,
                "pushl %eax;movl %edx, (%ecx);calll - <LsaDeregisterLogonProcess+>;popl %ebp;retl $": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;movl (%ecx), %edx": 1,
                "movl %eax, (%edx);movl %eax, (%ecx);andl $, (%esi);popl %esi;popl %ebp": 1,
                "movl %esi, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp);movl (%esi), %ecx;movl (%ecx), %ecx": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;popl %ebp;retl $;int": 2,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);pushl %esi": 1,
                "pushl -(%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;testl %ecx, (%esi)": 1,
                "popl %esi;leave;retl $;movl (%esi), %eax;pushl $": 1,
                "pushl %esi;pushl (%ebp);pushl (%eax);calll - <KeInsertQueueApc>;jmp - <LsaDeregisterLogonProcess+>": 1,
                "pushl (%eax);calll - <KeSetEvent>;jmp - <LsaDeregisterLogonProcess+>;int;int": 1,
                "calll - <KeSetEvent>;jmp - <LsaDeregisterLogonProcess+>;int;int;int": 1,
                "movl %eax, (%edx);leal -(%ecx), %esi;movl %esi, -(%ebp);movl (%esi), %ecx;testl $, %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %edi;pushl %eax;calll - <KeSetEvent>": 1,
                "pushl (%eax);calll - <KeInsertQueueApc+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;leal (%esi), %ecx;movl (%eax), %edx;movl %eax, (%ecx)": 1,
                "movl %eax, (%eax);leal (%esi), %eax;movl %esi, (%edi);pushl %eax;movl %edi, (%esi)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;movl (%ecx), %edx;addl $, %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;addl $, %ecx;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "subl $, %esp;pushl %edi;pushl (%ebp);movl (%ebp), %edi;pushl %edi": 2,
                "pushl %esi;movb $, %cl;calll *;movb %al, (%ebp);leal -(%ebp), %eax": 1,
                "movl (%eax), %esi;testl %esi, %esi;je  <LsaDeregisterLogonProcess+>;pushl %ebx;movl (%ebp), %ebx": 1,
                "movb (%ebp), %cl;calll *;movl (%edi), %eax;testl %eax, %eax;popl %esi": 1,
                "calll *%eax;leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;popl %edi": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;jne  <LsaDeregisterLogonProcess+>": 1,
                "testb $, (%eax);movl (%ebp), %ecx;movl (%eax), %edi;je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "movl %edi, %ecx;testb $, (%eax);movl (%ebp), %edx;movl (%edx), %ebx;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;pushl %ebx;pushl %eax;pushl %eax": 1,
                "int;pushl $;pushl $;calll - <ExAcquireResourceExclusiveLite>;retl": 1,
                "pushl $;pushl $;calll - <ExAcquireResourceExclusiveLite>;retl;int": 2,
                "int;int;int;movl $, %ecx;jmp - <ExReleaseResourceLite>": 1,
                "int;movl $, %ecx;jmp - <ExReleaseResourceLite>;int;int": 1,
                "leal (%eax), %ecx;movl %ecx, (%ecx);movl %ecx, (%ecx);leal (%edx), %ecx;pushl %esi": 1,
                "movl (%edi), %eax;testl %eax, %eax;movl $, %ebx;je  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;leal (%esi), %edi;movl (%edi), %eax;testl %eax, %eax": 1,
                "movl $, %ebx;orl $-, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi;testl %ebx, %ebx": 1,
                "movl %eax, (%ecx);decw (%edi);incw (%edi);jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "cmpl %edi, %esi;jne  <LsaDeregisterLogonProcess+>;pushl %edi;pushl -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl , %esi;movl $, %ebx;cmpl %ebx, %esi;je  <LsaDeregisterLogonProcess+>;leal -(%esi), %edi": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, (%edi);je  <LsaDeregisterLogonProcess+>;pushl $;leal (%edi), %eax": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%esi), %esi;cmpl %ebx, %esi;jne - <LsaDeregisterLogonProcess+>": 1,
                "calll - <ExReleaseFastMutexUnsafe>;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%edi), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;andl $, (%eax)": 1,
                "movl (%ebp), %eax;andl $, (%eax);leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "movl $, %esi;calll - <LsaDeregisterLogonProcess+>;popl %edi;movl %esi, %eax;popl %esi": 1,
                "pushl %esi;movl (%ebp), %esi;jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "addl %eax, %edi;testl %ecx, %ecx;movl %ecx, (%ebp);movl %eax, (%ebp);movl $, %ebx": 1,
                "testl %ecx, %ecx;movl %ecx, (%ebp);movl %eax, (%ebp);movl $, %ebx;je  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;andl $-, %ecx;movl %ecx, (%eax);addl %ebx, (%ebp);addl %ebx, (%ebp)": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);movl (%ebp), %eax": 1,
                "movl %esi, (%edx);movl (%ecx), %edx;movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx)": 1,
                "addl %ecx, %edx;je  <LsaDeregisterLogonProcess+>;cmpl $, (%eax);je  <LsaDeregisterLogonProcess+>;cmpl (%ebp), %ecx": 1,
                "pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>;popl %edi;popl %esi": 1,
                "movl (%ebp), %esi;cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;leal (%esi), %ecx;cmpl %ecx, (%ecx)": 1,
                "pushl %edi;je  <LsaDeregisterLogonProcess+>;leal (%esi), %edi;movl (%ecx), %eax;movl (%eax), %edx": 1,
                "pushl (%eax);calll - <CcPurgeCacheSection>;movl (%esi), %eax;xorl %edi, %edi;pushl %edi": 1,
                "cmpl %edi, (%eax);popl %edi;popl %ebx;je  <LsaDeregisterLogonProcess+>;pushl %esi": 1,
                "shrl %eax;leal (%eax,%eax), %esi;pushl $;leal (%esi), %eax;pushl %eax": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl %eax, (%ecx);movl %ecx, (%eax);leal (%edi), %eax": 1,
                "movl %ecx, %esi;movl (%esi), %ecx;cmpl (%eax), %ecx;jne - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "cmpb %bl, -(%ebp);jne  <LsaDeregisterLogonProcess+>;xorl %esi, %esi;pushl %ebx;pushl -(%ebp)": 1,
                "pushl $;pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%edi), %eax": 1,
                "movl , %ebx;cmpl $, %ebx;je  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %edi": 1,
                "movw (%esi), %ax;testw %ax, %ax;movl (%esi), %edi;je  <LsaDeregisterLogonProcess+>;movzwl %ax, %eax": 1,
                "xorl %eax, %eax;cmpl %eax, (%edi);je  <LsaDeregisterLogonProcess+>;cmpl %eax, (%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %ebx;calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %esi;movl %eax, (%esi)": 1,
                "jae  <LsaDeregisterLogonProcess+>;pushl %ebx;calll - <LsaDeregisterLogonProcess+>;cmpl %edi, %eax;jne - <LsaDeregisterLogonProcess+>": 1,
                "jne - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl %edi, (%eax);je  <LsaDeregisterLogonProcess+>;xorb %cl, %cl": 1,
                "xorb %cl, %cl;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%eax), %eax;movl %eax, (%esi)": 1,
                "movl (%ebp), %edi;addl $, %edi;andl $, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %esp;movl $, -(%ebp);orl $-, -(%ebp);movl (%ebp), %esi;movl -(%ebp), %edi": 1,
                "cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movb $, -(%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%esi), %eax;movl (%eax), %ebx;movl (%eax), %eax": 1,
                "cmpb $, (%ebp);jne  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl (%ebx), %edx": 1,
                "cmpb $, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl -(%ebp);pushl (%ebp)": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl (%ebp);movl (%ebp), %esi": 2,
                "pushl (%ebp);pushl %esi;calll *%eax;xorl %eax, %eax;testl %edi, %edi": 1,
                "calll *%eax;xorl %eax, %eax;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>;setge %al": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;leal (%ebx), %eax;movl %eax, (%ebp);cmpl $, (%ebp)": 1,
                "movl %eax, (%ebp);cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "orl $-, %eax;jmp  <LsaDeregisterLogonProcess+>;movw (%eax), %cx;cmpw $, %cx;je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %esi, %edi;je  <LsaDeregisterLogonProcess+>;cmpw $, (%edi);jne  <LsaDeregisterLogonProcess+>;cmpw %si, (%edi)": 1,
                "jne  <LsaDeregisterLogonProcess+>;cmpw %si, (%edi);movl %esi, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;leal (%edi), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;pushl %eax;pushl %ebx;movl %eax, -(%ebp)": 1,
                "cmpw $, %cx;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;cmpl %ecx, (%edx);jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl -(%ebp);pushl %ebx;calll *%eax;pushl -(%ebp);pushl %ebx": 2,
                "shll $, %ecx;pushl %ecx;leal (%esi,%eax,), %ecx;pushl %ecx;leal (%esi,%eax,), %eax": 1,
                "pushl %ecx;leal (%esi,%eax,), %ecx;pushl %ecx;leal (%esi,%eax,), %eax;pushl %eax": 1,
                "pushl %ecx;leal (%esi,%eax,), %eax;pushl %eax;calll - <memmove>;addl $, %esp": 1,
                "addl $, %eax;cmpl %ecx, (%ebp);jb - <LsaDeregisterLogonProcess+>;movzwl (%edi), %eax;incl -(%ebp)": 1,
                "movw (%esi), %cx;movl (%ebp), %eax;movzwl %cx, %ecx;subl %eax, %ecx;leal (%esi,%eax,), %esi": 1,
                "leal (%esi,%eax,), %esi;shll $, %ecx;pushl %ecx;leal (%esi), %eax;pushl %eax": 2,
                "movl (%ebp), %esi;leal (%edi), %edx;movl %edx, -(%ebp);movl %edx, (%ebp);movw (%edi), %dx": 1,
                "movl %edx, -(%ebp);movl %edx, (%ebp);movw (%edi), %dx;cmpw $, %dx;je  <LsaDeregisterLogonProcess+>": 1,
                "cmpw $, %dx;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %edx;cmpl %esi, (%edx);jne  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %edx, %ecx;jb - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;subl %ecx, %eax;shll $, %eax": 1,
                "shll $, %eax;leal (%edi,%ecx,), %edx;pushl %eax;leal (%edx), %eax;pushl %eax": 1,
                "orl $-, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;movw (%eax), %di;movl (%esi), %eax": 1,
                "pushl %eax;pushl %esi;calll  <LsaDeregisterLogonProcess+>;cmpl $-, %eax;movl %eax, (%ebp)": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax": 2,
                "addl $, %esp;cmpl %ecx, %esi;jae  <LsaDeregisterLogonProcess+>;subl %esi, %eax;leal -(,%eax,), %eax": 1,
                "jae  <LsaDeregisterLogonProcess+>;subl %esi, %eax;leal -(,%eax,), %eax;pushl %eax;leal (%ebx,%esi,), %eax": 1,
                "movl (%edi), %eax;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %edi": 1,
                "pushl -(%ebp);pushl %edi;calll *%eax;movl (%ebp), %eax;movw $, (%esi)": 1,
                "subl %esi, %eax;leal (%esi), %ebx;movl %eax, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "andl $, (%ebp);cmpw $, (%esi);jbe  <LsaDeregisterLogonProcess+>;leal (%esi), %ebx;pushl (%ebx)": 1,
                "movl %ebx, (%ebp);jbe  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;movw (%edi), %ax;pushl %eax": 1,
                "xorl %eax, %eax;movw (%edi), %ax;pushl %eax;calll - <RtlUpcaseUnicodeChar>;imull $, %ebx, %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl (%eax);pushl (%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "incl %eax;cmpl %ecx, %eax;jb - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl %eax, %ecx": 1,
                "movw (%eax,%edi,), %bx;movzbw (%esi,%edi), %ax;pushl %eax;calll - <RtlUpcaseUnicodeChar>;movzwl %ax, %eax": 1,
                "pushl %eax;calll - <RtlUpcaseUnicodeChar>;movzwl %ax, %eax;pushl %ebx;movl %eax, (%ebp)": 1,
                "xorl %ecx, %ecx;testl %eax, %eax;setg %cl;leal -(%ecx,%ecx), %ecx;movl %ecx, %eax": 1,
                "movl %ecx, %eax;jmp - <LsaDeregisterLogonProcess+>;int;int;int": 1,
                "calll *(%edi);testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %eax": 2,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 3,
                "movl %eax, -(%ebp);calll *(%esi);movl %eax, -(%ebp);movl (%esi), %eax;testl %eax, %eax": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;andl $, -(%ebp);pushl %ebx": 1,
                "movl %edi, -(%ebp);shrl %edi;jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);movl (%ebp), %eax": 1,
                "pushl (%ebp);pushl $;pushl (%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>": 2,
                "je  <LsaDeregisterLogonProcess+>;testl %eax, %eax;jge  <LsaDeregisterLogonProcess+>;movl %edi, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jge  <LsaDeregisterLogonProcess+>;movl %edi, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl %edi, -(%ebp);movl -(%ebp), %edi": 1,
                "calll *%eax;movl (%ebp), %eax;shrl %edi;addl -(%ebp), %edi;movl (%eax,%edi,), %ebx": 1,
                "movl (%ebp), %edi;pushl %edi;pushl %eax;movzwl (%eax), %eax;decl %eax": 1,
                "orl $-, (%edi);movl $, %edi;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %eax": 1,
                "movl %edi, %esi;shrl %esi;testw %ax, %ax;jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;jge  <LsaDeregisterLogonProcess+>;movl %esi, %edi;jmp  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;shrl %eax;addl (%ebp), %eax;movl %eax, %esi;pushl (%ebp)": 1,
                "pushl %esi;pushl %ebx;pushl %edi;pushl (%ebp);pushl (%ebp)": 1,
                "xorl %edx, %edx;divl (%ebp);movl %esi, -(%ebp);cmpl $, %eax;jae  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;subl %esi, %eax;shll $, %eax;pushl %eax;leal (%edi,%esi,), %eax": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;movl (%ebp), %eax;je  <LsaDeregisterLogonProcess+>;leal (%ebx,%esi,), %esi": 1,
                "movl (%ebx,%eax,), %edi;pushl %edi;pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "pushl %esi;calll *%ecx;movl (%ebp), %eax;movw (%eax), %cx;movl (%eax), %eax": 1,
                "calll *%ecx;movl (%ebp), %eax;movw (%eax), %cx;movl (%eax), %eax;pushl %eax": 1,
                "leal (%ebx,%eax,), %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %edi;pushl %edi;pushl %esi": 1,
                "movl %ebx, (%eax);jmp  <LsaDeregisterLogonProcess+>;movl (%ebx,%eax,), %edi;pushl %edi;pushl %esi": 1,
                "movl %edi, (%ebx);calll *(%esi);movl %eax, %ebx;testl %ebx, %ebx;je  <LsaDeregisterLogonProcess+>": 1,
                "orl $-, -(%ebp);orl $-, -(%ebp);pushl %esi;movl (%ebp), %esi;pushl %edi": 2,
                "je  <LsaDeregisterLogonProcess+>;andl $, (%ebp);cmpl $, (%esi);jbe  <LsaDeregisterLogonProcess+>;addl $, %eax": 1,
                "cmpl $-, -(%ebp);movl (%eax), %ebx;je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "movl -(%ebp), %edi;cmpl $-, %edi;je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi": 1,
                "leave;retl $;cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %ebx;pushl %edi;movl %eax, -(%ebp)": 1,
                "calll *(%edi);movl %eax, %esi;testl %esi, %esi;je  <LsaDeregisterLogonProcess+>;movl (%edi), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %edi;calll *%eax;testb $, (%esi)": 1,
                "calll  <LsaDeregisterLogonProcess+>;cmpw $, %ax;movw %ax, -(%ebp);movw %ax, -(%ebp);jbe  <LsaDeregisterLogonProcess+>": 1,
                "movw %ax, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;movzwl %ax, %eax;pushl $;pushl %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movzwl (%esi), %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl -(%ebp);movzwl -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "movl %eax, -(%ebp);calll *(%edi);movl %eax, %esi;testl %esi, %esi;jne  <LsaDeregisterLogonProcess+>": 1,
                "testl %esi, %esi;jne  <LsaDeregisterLogonProcess+>;xorb %bl, %bl;jmp  <LsaDeregisterLogonProcess+>;cmpw $, (%esi)": 1,
                "pushl %ecx;leal (%eax,%edx,), %ecx;leal (%eax,%edx,), %eax;jmp  <LsaDeregisterLogonProcess+>;movzwl %cx, %ecx": 1,
                "calll *%eax;cmpl $-, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpw $, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "cmpl $, (%esi);pushl %edi;jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi;addl $, %edi": 1,
                "cmpl $, -(%edi);je  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %esi;calll *(%esi)": 1,
                "pushl %esi;calll *%eax;movl (%ebp), %ebx;cmpl $-, %ebx;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi;calll *(%esi);testl %eax, %eax": 3,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;cmpw $, (%eax);jne  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi;calll *%eax;jmp  <LsaDeregisterLogonProcess+>": 2,
                "pushl %esi;calll *%eax;jmp  <LsaDeregisterLogonProcess+>;leal (%ebp), %ecx;pushl %ecx": 1,
                "pushl %esi;calll *%eax;orl $-, %eax;popl %edi;popl %esi": 1,
                "movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;movzwl (%edi), %ecx": 1,
                "calll *%eax;movl (%ebp), %ebx;shrl $, %ebx;leal (%edi,%ebx,), %eax;cmpl $, (%eax)": 1,
                "movl (%ebp), %ebx;shrl $, %ebx;leal (%edi,%ebx,), %eax;cmpl $, (%eax);movl %ebx, -(%ebp)": 1,
                "shrl $, %ecx;cmpl %ebx, %ecx;je  <LsaDeregisterLogonProcess+>;orl $-, %eax;pushl %eax": 1,
                "cmpl %ebx, %ecx;je  <LsaDeregisterLogonProcess+>;orl $-, %eax;pushl %eax;pushl %ebx": 1,
                "orl $-, %eax;pushl %eax;pushl %ebx;pushl $;pushl %esi": 1,
                "movl (%esi), %eax;cmpl $, %eax;jb  <LsaDeregisterLogonProcess+>;movw $, (%edi);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $, %eax;sbbl %eax, %eax;andl $, %eax;addl $, %eax": 1,
                "andl $, %eax;addl $, %eax;movw %ax, (%edi);movl -(%ebp), %eax;andw $, (%edi)": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%ebx)": 3,
                "je  <LsaDeregisterLogonProcess+>;cmpw $, %cx;jne  <LsaDeregisterLogonProcess+>;cmpw $, (%edi);jb  <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;cmpl $-, %eax;je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %eax": 1,
                "decl %eax;je  <LsaDeregisterLogonProcess+>;decl %eax;jne - <LsaDeregisterLogonProcess+>;leal (%edi,%ebx,), %ebx": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl %edi, (%ebx);jmp - <LsaDeregisterLogonProcess+>;movl -(%ebp), %ebx": 1,
                "calll  <LsaDeregisterLogonProcess+>;orl $-, (%ebx);jmp - <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;incl (%ecx)": 1,
                "movl %eax, (%ebx);cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;movzwl -(%ebp), %eax;pushl %eax": 1,
                "pushl %ecx;movl (%ebp), %ecx;movl (%ecx), %edx;pushl %ebx;xorl %ebx, %ebx": 1,
                "cmpl %ebx, %edx;pushl %esi;movb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;movw (%ecx), %si": 1,
                "pushl %esi;movb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;movw (%ecx), %si;cmpw %bx, %si": 1,
                "addw $, (%ecx);movl %edx, (%ecx);movw %si, (%ecx);movl (%ebp), %esi;movl (%ecx), %eax": 1,
                "movl (%ebp), %esi;pushl $;pushl %eax;pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp);movl (%edi), %eax;movl (%eax), %ecx": 1,
                "testl %ecx, %ecx;je  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %eax;calll *%ecx": 4,
                "addl $, (%ebp);movl (%ebp), %eax;incl %ebx;incl %ebx;cmpl -(%ebp), %eax": 1,
                "cmpl -(%ebp), %eax;jb - <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;imull $, %eax, %eax": 1,
                "xorl %edx, %edx;movl $, %ecx;divl %ecx;movl %edx, %eax;xorl %edx, %edx": 3,
                "movl (%ebx), %eax;movl %eax, %ecx;shrl $, %ecx;cmpl %ecx, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %ebx;calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <RtlUpcaseUnicodeChar>;movw %ax, %bx;movl -(%ebp), %eax;movzwl (%eax), %eax": 1,
                "pushl %ebx;calll  <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl %edi": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;movb $, -(%ebp)": 1,
                "movw %cx, -(%ebp);movl %ecx, %edx;shrl $, %ecx;movw %si, -(%ebp);movl -(%ebp), %esi": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);jmp  <LsaDeregisterLogonProcess+>;testl %edi, %edi;movl -(%ebp), %eax": 1,
                "leal (%ecx,%eax,), %eax;pushl %eax;calll - <memmove>;movl -(%ebp), %eax;movl (%ebx), %ecx": 1,
                "addw $, %ax;addl $, %esp;addw %ax, (%ebx);movl -(%ebp), %ecx;movl -(%ebp), %esi": 1,
                "movl (%ebx), %ecx;shrl %eax;andw $, (%ecx,%eax,);cmpb $, -(%ebp);popl %ebx": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "movw %bx, -(%eax);xorl %ebx, %ebx;incl %edx;movl %ecx, -(%eax);addl $, %eax": 1,
                "cmpl $, %edx;jae  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;leal (%edx,%edx,), %eax;leal (%ecx,%eax,), %eax": 1,
                "movl %ecx, (%eax);movw %bx, (%eax);incl %edx;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;incl %eax;popl %edi;movl %eax, (%ecx);popl %esi": 1,
                "incl %eax;popl %edi;movl %eax, (%ecx);popl %esi;movl %edx, %eax": 1,
                "movl %eax, (%ecx);popl %esi;movl %edx, %eax;popl %ebx;leave": 1,
                "movl (%eax), %eax;movl (%eax), %ecx;andl $, -(%ebp);pushl %ebx;movl %eax, -(%ebp)": 1,
                "movl (%eax), %eax;imull $, %eax, %eax;xorl %edx, %edx;movl $, %ecx;divl %ecx": 1,
                "pushl %eax;pushl %ecx;calll  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;addl $, %eax": 1,
                "movl (%eax), %eax;testl %eax, %eax;movl %eax, -(%ebp);jne - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;cmpw $, (%eax);jne  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %eax;addl $, %eax;incl %ecx;movzwl (%eax), %edx;shrl %edx": 1,
                "movl (%ebp), %ecx;movl %edi, (%eax);movl (%edi), %eax;movl %eax, (%ecx);movl (%edi), %eax": 1,
                "movl (%ebp), %esi;movl (%ebp), %eax;movl (%eax), %eax;testb $, (%eax);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %eax;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "cmpl $, (%ebx);jne  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax": 1,
                "testl %ecx, %ecx;movl (%eax), %eax;movl %eax, (%ebp);je  <LsaDeregisterLogonProcess+>;movl %ecx, (%edi)": 1,
                "movl %eax, (%ebp);pushl (%ebp);pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "pushl %esi;calll *(%esi);testl %eax, %eax;je - <LsaDeregisterLogonProcess+>;testb $, (%eax)": 1,
                "je - <LsaDeregisterLogonProcess+>;testb $, (%eax);je  <LsaDeregisterLogonProcess+>;movzwl (%eax), %ecx;pushl %ecx": 1,
                "calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;leal (%eax), %ecx;movl %ecx, -(%ebp);movw (%eax), %ax": 1,
                "movl %ecx, -(%ebp);movl %edx, (%eax);cmpl %ecx, (%esi);movl %ecx, -(%ebp);jbe  <LsaDeregisterLogonProcess+>": 1,
                "testl %edi, %edi;je - <LsaDeregisterLogonProcess+>;cmpw $, (%edi);je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movb $, (%ebp);movl (%ebp), %ebx;movl (%esi), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %edi;incl -(%ebp);movzwl -(%ebp), %eax;cmpl (%esi), %eax;jb - <LsaDeregisterLogonProcess+>": 1,
                "andb $-, %al;orb $, %al;movb %al, (%edi);jmp - <LsaDeregisterLogonProcess+>;pushl $": 1,
                "cmpb $, -(%ebp);movl (%ebp), %edi;je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl $": 1,
                "jae  <LsaDeregisterLogonProcess+>;andb %dh, (%ecx,%edi,);andb %dh, %gs:(%eax,%ebp,);andb %ah, (%esi);insb %dx, %es:(%edi)": 2,
                "xorl %ebx, %ebx;movl (%ebp), %eax;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;movb %bl, (%eax)": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %esi;calll - <LsaDeregisterLogonProcess+>;movl %esi, %eax;jmp  <LsaDeregisterLogonProcess+>": 2,
                "testb $, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %ebx;movl (%ebp), %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;movb $, (%eax);jmp  <LsaDeregisterLogonProcess+>;pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, %edi;cmpl %ebx, %edi;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl %esi, (%ecx);movl %eax, -(%ebp);cmpl %ebx, %eax;jl  <LsaDeregisterLogonProcess+>;testb $, (%edi)": 1,
                "movl (%edi), %eax;movl %eax, (%esi);movl %edi, (%esi);movl $, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl %edx, (%ecx);movl %ecx, (%edx);movl %ecx, (%eax);movl %ebx, (%esi);calll - <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <LsaDeregisterLogonProcess+>;testb $, (%ecx);je  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%esi);calll - <ObCheckObjectAccess>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx": 1,
                "addl $, %eax;pushl %eax;pushl %ebx;calll  <LsaDeregisterLogonProcess+>;cmpl $-, %eax": 2,
                "cmpl $-, %eax;movl %eax, (%ebp);jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>": 2,
                "xorl %esi, %esi;cmpl %esi, %eax;movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "movl (%ecx), %ecx;calll - <ObfDereferenceObject>;jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);movl (%edi), %eax": 1,
                "pushl %eax;calll *(%eax);movl (%ebp), %eax;orb $, (%esi);pushl %eax": 1,
                "orl $-, (%esi);movl %eax, (%esi);xorl %eax, %eax;movl %eax, (%esi);movl %eax, (%esi)": 1,
                "movw %ax, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl (%ebp), %eax;pushl %ebx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movw (%ebp), %ax;movl (%esi), %ecx;movzwl %ax, %edx": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;jmp  <LsaDeregisterLogonProcess+>;pushl $;calll - <CmUnRegisterCallback+>": 2,
                "movl (%eax), %eax;movl $, %esi;testl %esi, (%eax);je  <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %edx;testl %edx, %edx;jbe  <LsaDeregisterLogonProcess+>;cmpw $, (%eax);jne  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;cmpw $, (%eax);jne  <LsaDeregisterLogonProcess+>;incl (%ebp);addw %cx, -(%ebp)": 1,
                "movl (%ebx), %eax;testb $, %al;jne  <LsaDeregisterLogonProcess+>;testb $, %al;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;testb $, (%ebx)": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl %edx, %eax;je  <LsaDeregisterLogonProcess+>;incl %esi;cmpl %edi, %esi": 1,
                "cmpl %edi, %esi;jb - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;subl -(%ebp), %eax;cmpl $, %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edi;movb $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;testb $, (%ebx)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;testb $, (%ebx);je  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl (%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;negb %al": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %esi;calll *(%esi);movl %eax, %edi": 3,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %ecx;calll *%eax;movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %esi, -(%ebp);movl %eax, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;cmpb $, %al": 1,
                "jne - <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $-, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movl (%ecx), %eax": 2,
                "orl $-, -(%ebp);cmpb $, (%eax);je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl %eax;pushl (%ebp);pushl (%ebp);pushl -(%ebp)": 1,
                "pushl (%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;cmpl , %esi": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;movl $, (%ebp);cmpl $, -(%ebp)": 1,
                "jmp - <LsaDeregisterLogonProcess+>;movl $, (%ebp);cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "cmpl $, ;je  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edi, %ebx;jne  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;cmpl $-, -(%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $-, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "cmpl (%eax), %edi;jne - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "calll *%eax;movb %bl, %al;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;orl $-, (%eax)": 1,
                "movl %edi, (%eax);movb $, %al;movl (%ebp), %ecx;orl $-, (%ecx);popl %edi": 1,
                "xorl %eax, %eax;incl %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;cmpl $, %eax": 3,
                "incl %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>": 3,
                "je - <LsaDeregisterLogonProcess+>;andl $, -(%ebp);movl -(%ebp), %eax;cmpw (%edi), %ax;jae  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;calll *%eax;retl;pushl (%esi);pushl %ebx": 1,
                "movl %eax, (%edi);testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>": 1,
                "cmpb $, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 3,
                "movl %eax, (%ebp);je  <LsaDeregisterLogonProcess+>;pushl %eax;pushl %edi;movl %eax, (%ebx)": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;leal -(%esi), %ecx;jmp  <LsaDeregisterLogonProcess+>;shll $, %ecx": 1,
                "pushl (%ebx);decl %esi;movl %esi, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi": 1,
                "movl %esi, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi;pushl %edi;calll *(%edi)": 1,
                "pushl %edi;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %ecx;cmpl $, %ecx;jae  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, %edi;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;cmpl $-, %eax": 1,
                "jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;movzwl %bx, %eax;movl (%ecx,%eax,), %eax;cmpl $-, %eax": 2,
                "jb - <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %esi;calll  <LsaDeregisterLogonProcess+>;testb %al, %al": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %esi;calll *%eax": 16,
                "pushl (%ebp);pushl %esi;calll *%eax;movl (%edi), %eax;cmpl $-, %eax": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;incl %ebx;cmpw (%edi), %bx;jb - <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, (%esi);jb  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);jae  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);jbe  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "andl $, -(%ebp);movl $, %ebx;movl %ebx, -(%ebp);pushl $;pushl %esi": 1,
                "pushl $;pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi;movl %eax, (%edi)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %eax;pushl %esi;calll *(%esi);movl %eax, -(%ebp)": 1,
                "movzwl (%ebx), %eax;movl (%ecx,%eax,), %ecx;cmpl $-, %ecx;je  <LsaDeregisterLogonProcess+>;pushl %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $-, -(%ebp);movl $, %eax": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ebx;movl (%ebp), %edi;movl (%ebp), %esi;testl %ebx, %ebx": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;decw (%ebx);cmpw $, (%ebx);jne - <LsaDeregisterLogonProcess+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %esi;calll  <LsaDeregisterLogonProcess+>;orl $-, (%edi)": 1,
                "calll  <LsaDeregisterLogonProcess+>;orl $-, (%esi);orl $-, -(%ebp);movl -(%ebp), %eax;calll - <wctomb+>": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 2,
                "pushl %ebx;movl %edi, (%esi);calll *(%ebx);testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je - <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax": 2,
                "movl (%ebx), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %ebx": 6,
                "calll  <LsaDeregisterLogonProcess+>;incl %edi;cmpw (%esi), %di;jb - <LsaDeregisterLogonProcess+>;movzwl (%ebp), %eax": 1,
                "pushl %edi;pushl %ebx;calll *%eax;movl %edi, (%esi);andl $, (%ebp)": 1,
                "pushl %ebx;calll *%eax;movl %edi, (%esi);andl $, (%ebp);cmpw $, (%ebp)": 1,
                "movl (%ebp), %esi;movl %eax, %ecx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "addb %dh, (%ebp);je  <LsaDeregisterLogonProcess+>;outsl (%esi), %dx;addb %dl, (%ebx);addb %ch, %gs:(%eax,%eax)": 1,
                "pushl %eax;pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>;orl $-, %edi": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;orl $-, %edi;cmpl %edi, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;movb $, (%ebx);jmp  <LsaDeregisterLogonProcess+>;pushl %eax;pushl %esi": 1,
                "pushl %esi;calll *(%esi);testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>": 2,
                "leal -(%ebp), %eax;addl $, %esp;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 2,
                "movl (%ebp), %esi;movl (%esi), %eax;shrl $, %eax;je  <LsaDeregisterLogonProcess+>;leal -(%eax), %ecx": 1,
                "leal -(%eax), %ecx;shrl $, %ecx;movl %ecx, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl -(%ebp), %ecx;cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;andl $, (%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;andl $-, %eax;pushl $;movl %eax, %ebx;pushl %ebx": 1,
                "movl %eax, %ebx;pushl %ebx;pushl %esi;calll  <LsaDeregisterLogonProcess+>;pushl %eax": 1,
                "cmpw $, %cx;jae  <LsaDeregisterLogonProcess+>;movzwl %cx, %ecx;jmp  <LsaDeregisterLogonProcess+>;movzwl %cx, %eax": 1,
                "cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;cmpl %edi, %eax": 2,
                "je  <LsaDeregisterLogonProcess+>;cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);sete %al;movb %al, (%ebx)": 1,
                "jne - <LsaDeregisterLogonProcess+>;orl $-, (%ebx);leal (%ebx), %eax;movl %edi, (%ebx);movl %edi, (%ebx)": 1,
                "calll - <RtlInitializeBitMap>;addl $, (%ebp);decl (%ebp);jne - <LsaDeregisterLogonProcess+>;pushl %edi": 1,
                "notb %al;andb $, %al;movb %al, (%ebp);movl (%ebp), %eax;cmpl %edi, %eax": 1,
                "andb $, %al;movb %al, (%ebp);movl (%ebp), %eax;cmpl %edi, %eax;movl %edi, (%ebx)": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;shll $, %eax;decl %eax": 1,
                "movl $, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl $, (%esi);movl %edi, (%esi)": 1,
                "movl %edi, (%esi);movl %eax, (%esi);movl %edi, (%esi);calll - <LsaDeregisterLogonProcess+>;movl %esi, (%ebx)": 1,
                "movl $, (%ebx);movl %edi, (%esi);xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;cmpl $, %eax": 1,
                "cmpl %edi, (%esi);jne  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>;cmpl $, (%esi)": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %esi;calll  <LsaDeregisterLogonProcess+>;cmpl (%esi), %eax;jne  <LsaDeregisterLogonProcess+>": 2,
                "jl  <LsaDeregisterLogonProcess+>;addl $, %esi;pushl %esi;pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "addl $, %esi;pushl %esi;pushl %ebx;calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax": 2,
                "movl (%ebx), %eax;movl %ecx, (%eax);movl (%ebx), %eax;movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl (%ebx), %eax;movl (%esi), %ecx;movl %ecx, (%eax);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl (%esi), %ecx;movl %ecx, (%eax);movl (%ebx), %eax;movl (%eax), %eax": 1,
                "testl %eax, %eax;jge  <LsaDeregisterLogonProcess+>;movl $, %esi;pushl $;pushl (%ebx)": 1,
                "jmp - <LsaDeregisterLogonProcess+>;leal (%ebx), %eax;pushl %eax;calll - <RtlClearAllBits>;pushl %edi": 1,
                "pushl %edi;pushl $;pushl %ebx;movl %edi, (%ebx);calll *(%ebx)": 1,
                "jmp - <LsaDeregisterLogonProcess+>;movl $, %eax;popl %ebx;popl %edi;popl %esi": 1,
                "movl %eax, %esi;shrl $, %esi;shll $, %eax;orl %eax, %esi;addl (%edx), %esi": 1,
                "movl (%ebp), %eax;movl %edx, (%eax);xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "je  <LsaDeregisterLogonProcess+>;decl %ecx;jne - <LsaDeregisterLogonProcess+>;testl %edx, %edx;movl (%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);jmp - <LsaDeregisterLogonProcess+>;shrl %eax;addl -(%ebp), %eax;jmp - <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;incl %eax;movl %eax, (%ecx);xorb %al, %al": 1,
                "movl (%ebx), %esi;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx": 1,
                "xorl %edi, %edi;cmpl %edi, (%esi);movl $, %ebx;jbe  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>": 1,
                "movl (%ebp), %ecx;movl %eax, -(%ebp);andl $, %eax;leal (%ecx,%eax,), %eax;movl (%eax), %ecx": 1,
                "movl %esi, %ecx;movl (%ebp), %esi;leal (%edx), %edi;xorl %ebx, %ebx;rep  cmpsb %es:(%edi), (%esi)": 1,
                "movl %ecx, (%ebp);jne - <LsaDeregisterLogonProcess+>;xorb %al, %al;popl %edi;popl %esi": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $-, (%ebp)": 1,
                "cmpl %edi, %eax;movl %eax, (%esi);jne  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl (%esi), %edx;movl (%eax,%edx), %edx;movl %edx, %ebx;andl %ecx, %ebx;cmpl %ecx, %ebx": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);pushl $;addl $, %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;cmpb $, (%ebp);movl (%ebx), %esi;movl %esi, (%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebx), %ecx;shll $, %ecx;movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%ebp), %edi;movl %edi, (%eax);movl (%ecx), %edx;movl %edx, (%eax);pushl (%ecx)": 1,
                "movl %edx, (%ecx);movl %ecx, (%edx);movl %ecx, (%eax);movl (%ebx), %eax;testl %eax, %eax": 1,
                "shll $, %ecx;movl %edi, (%ecx,%edx);movl (%eax), %eax;movl %esi, (%ecx,%eax);incl (%ebx)": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;andl $, (%esi);pushl %esi": 1,
                "movl (%esi), %eax;andl $, (%esi);pushl %esi;movb $, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);calll - <LsaDeregisterLogonProcess+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);leal (%edi), %eax;movl %eax, -(%ebp);orl $-, -(%ebp)": 1,
                "cmpl $, (%eax);je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %ebx;calll *(%ebx)": 3,
                "pushl %ebx;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jge  <LsaDeregisterLogonProcess+>;movl $, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeQuerySystemTime>;movl -(%ebp), %eax;movl %eax, (%edi)": 3,
                "xorl %eax, %eax;cmpl %eax, (%edi);jne  <LsaDeregisterLogonProcess+>;movl %eax, (%edi);movl %eax, (%edi)": 1,
                "retl $;movl -(%ebp), %edi;movl -(%ebp), %ebx;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %ebx;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;movl (%eax), %esi;movl %esi, -(%ebp)": 2,
                "movl (%eax), %edi;pushl %edi;pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;leal (%edi), %ebx;movl (%ebp), %eax;cmpl (%ebx), %eax;jb  <LsaDeregisterLogonProcess+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%ebx);movl (%eax), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%ebx);movl (%eax), %eax;movl %eax, (%edi)": 1,
                "pushl %ebx;pushl %esi;calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %esi;calll *%eax;calll - <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;andl $, -(%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "movl -(%ebp), %ebx;orl $-, -(%ebp);movl (%ebp), %edi;movl -(%ebp), %esi;movl (%esi), %eax": 1,
                "movl %eax, -(%ebp);movzwl %ax, %ecx;leal (%ecx), %eax;movl %eax, -(%ebp);pushl $": 1,
                "cmpl %ecx, %eax;jge  <LsaDeregisterLogonProcess+>;movl %eax, %ecx;movl %ecx, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %esi;addl $, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%eax), %esi;addl $, %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movzwl (%ebx), %ecx;shrl $, %ecx;movl %ecx, (%eax);movl %edi, -(%ebp)": 1,
                "pushl (%ebp);pushl %esi;pushl %eax;pushl (%ebx);calll  <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %eax;calll - <wctomb+>;retl $;movl (%ebp), %ebx;xorl %esi, %esi": 1,
                "calll - <ExFreePoolWithTag>;calll - <LsaDeregisterLogonProcess+>;retl;int;int": 1,
                "pushl %eax;calll *(%eax);testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl (%esi);pushl %eax;calll *%ecx;leal -(%ebp), %eax;pushl %eax": 2,
                "leal (%esi), %eax;pushl %eax;pushl (%esi);calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax": 2,
                "movl %edx, -(%ebp);movl (%eax), %edi;jmp  <LsaDeregisterLogonProcess+>;movl (%ecx), %edx;movl %edx, -(%ebp)": 1,
                "calll - <ExRaiseDatatypeMisalignment>;movl , %eax;movzwl -(%ebp), %edx;movl -(%ebp), %ecx;leal (%edx,%ecx), %edi": 1,
                "pushl %eax;pushl -(%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp)": 1,
                "incl %eax;jmp  <LsaDeregisterLogonProcess+>;movl %eax, %edx;xorl %eax, %eax;movl %edx, -(%ebp)": 1,
                "andl $-, %eax;movl %eax, -(%ebp);addl %edi, %edx;movl (%ebp), %eax;cmpl (%eax), %edx": 1,
                "movl %eax, -(%ebp);addl %edi, %edx;movl (%ebp), %eax;cmpl (%eax), %edx;ja  <LsaDeregisterLogonProcess+>": 1,
                "ja  <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %esi;movl (%ebp), %eax;addl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movb $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;addl %eax, -(%ebp);movl (%esi), %eax": 1,
                "cmpl $, -(%ebp);ja  <LsaDeregisterLogonProcess+>;cmpw $, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "testl %edi, %edi;jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, %ecx;shrl $, %ecx;cmpl (%ebp), %ecx;je  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, %ecx;shrl $, %ecx;cmpl (%ebp), %ecx;je  <LsaDeregisterLogonProcess+>;orl $-, %eax": 1,
                "pushl (%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;cmpw $, -(%ebp)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jl  <LsaDeregisterLogonProcess+>;movl %edi, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%ebx);pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "calll - <wctomb+>;movl (%ebp), %ecx;leal (%ecx), %eax;movl %eax, -(%ebp);movl (%ebp), %edi": 1,
                "pushl %ebx;pushl (%ebp);pushl %edi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax": 2,
                "testl %eax, %eax;jge  <LsaDeregisterLogonProcess+>;movl %eax, %esi;pushl -(%ebp);pushl %edi": 1,
                "pushl %ecx;andl $, -(%ebp);pushl %edi;calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %edi": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %edi;testb $, (%edi);je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp)": 1,
                "movl (%ebp), %edi;testb $, (%edi);je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;movl (%edi), %ebx;pushl %esi;movl (%edi), %esi": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "leal (%esi), %eax;pushl %eax;calll - <RtlCompareUnicodeString>;testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %eax;calll - <ExFreePoolWithTag>;movl %ebx, (%edi)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;xorl %ebx, %ebx;pushl %ebx;leal -(%ebp), %ecx": 1,
                "cmpl %ebx, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpb %bl, -(%ebp);jne  <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp);cmpb %bl, -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "calll - <ZwClose>;movl -(%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>;testb $, (%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%esi);calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi;cmpl %ebx, %edi;jl  <LsaDeregisterLogonProcess+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll  <LsaDeregisterLogonProcess+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl $, %esi;movl %esi, %ecx;calll - <ExAcquireFastMutexUnsafe>": 1,
                "movl %esi, %ecx;calll - <ExAcquireFastMutexUnsafe>;movl -(%ebp), %eax;addl $, %eax;movl (%eax), %ecx": 2,
                "movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, (%eax);movl %eax, (%ecx);movl %esi, %ecx": 2,
                "pushl %ebx;pushl (%eax);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;pushl %ebx": 1,
                "pushl (%eax);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;pushl %ebx;pushl (%eax)": 1,
                "movb $, ;calll - <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;testb %al, %al;je - <LsaDeregisterLogonProcess+>;movb $, -(%ebp)": 1,
                "pushl (%esi);pushl %ebx;calll *%eax;andl $, -(%ebp);leal (%ebp), %eax": 1,
                "calll  <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl (%esi)": 1,
                "cmpw $, (%esi);jne  <LsaDeregisterLogonProcess+>;andl $, -(%ebp);cmpw $, (%esi);jbe  <LsaDeregisterLogonProcess+>": 1,
                "movzwl %ax, %eax;cmpl %ecx, %eax;movw (%esi), %ax;jae  <LsaDeregisterLogonProcess+>;orw $, %ax": 1,
                "cmpl %ecx, %eax;movw (%esi), %ax;jae  <LsaDeregisterLogonProcess+>;orw $, %ax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movw (%esi), %ax;jae  <LsaDeregisterLogonProcess+>;orw $, %ax;jmp  <LsaDeregisterLogonProcess+>;andw $, %ax": 1,
                "movl %eax, (%esi);orl $-, -(%ebp);pushl -(%ebp);pushl %ebx;calll *(%ebx)": 1,
                "pushl -(%ebp);pushl %ebx;calll *%eax;cmpw $, (%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;calll *%eax;cmpw $, (%edi);jne  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 2,
                "andl $, -(%ebp);cmpw $, (%edi);jbe  <LsaDeregisterLogonProcess+>;leal (%edi), %eax;movl %eax, -(%ebp)": 3,
                "movzwl (%edi), %eax;cmpl %eax, -(%ebp);jb - <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %ebx": 1,
                "pushl -(%ebp);pushl %ebx;calll  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %ebx": 1,
                "leal (%esi), %edi;cmpl (%edi), %ebx;je  <LsaDeregisterLogonProcess+>;pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, %edi;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax": 2,
                "movl %eax, (%edi);jne  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl $;popl %eax;jmp  <LsaDeregisterLogonProcess+>;orl $-, (%eax)": 1,
                "andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %eax;calll *%ecx;movl (%esi), %eax;movl (%eax), %eax": 1,
                "pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "testb $, (%esi);je  <LsaDeregisterLogonProcess+>;movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;pushl %edi": 1,
                "movb $, -(%ebp);orl $-, -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %esi;testb $, (%esi)": 1,
                "jne  <LsaDeregisterLogonProcess+>;cmpl $, %ecx;sbbb %cl, %cl;incb %cl;cmpb $, %cl": 1,
                "cmpb $, %cl;jne  <LsaDeregisterLogonProcess+>;addl $, %eax;movl %eax, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $-, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "pushl %esi;calll *%eax;movb -(%ebp), %al;calll - <wctomb+>;retl $": 1,
                "cmpl $, (%esi);je  <LsaDeregisterLogonProcess+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl $, %edi;movl (%esi), %ecx": 1,
                "calll - <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>;testl %edi, (%esi);je - <LsaDeregisterLogonProcess+>;movl $, -(%ebp)": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %edi, (%esi);je - <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %ebx;pushl %ebx": 1,
                "calll *(%eax);movl %eax, -(%ebp);testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp)": 1,
                "calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl %ebx, (%esi);leal -(%ebp), %eax;pushl %eax;calll - <KeQuerySystemTime>;movl -(%ebp), %eax": 1,
                "movl %eax, %edi;movl -(%ebp), %eax;movl (%edi,%eax,), %eax;testb $, %al;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;pushl %esi": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>": 1,
                "calll  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl $, %eax;popl %edi": 1,
                "movl (%esi), %edi;cmpb $, (%edi);jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;pushl %esi;calll  <LsaDeregisterLogonProcess+>;testb %al, %al": 1,
                "movl %eax, -(%ebp);calll - <LsaDeregisterLogonProcess+>;testb $, (%esi);je  <LsaDeregisterLogonProcess+>;movl $, %ebx": 1,
                "movl %eax, -(%ebp);movl $, %eax;movl %eax, ;movl %eax, ;pushl $": 1,
                "calll *(%esi);pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>;cmpl $-, %eax": 1,
                "jge  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl %edi": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl %edi;pushl (%eax);calll - <ExFreePoolWithTag>": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;popl %esi;movl %ebx, %eax;popl %ebx": 1,
                "pushl -(%ebp);calll  <LsaDeregisterLogonProcess+>;xorl %edi, %edi;testb %al, %al;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %ebx;cmpl %edi, %ebx;jl - <LsaDeregisterLogonProcess+>": 1,
                "movl %edi, -(%ebp);jns  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl (%eax), %edi;jne  <LsaDeregisterLogonProcess+>;movl $, %eax": 1,
                "pushl %edi;pushl %esi;calll  <LsaDeregisterLogonProcess+>;testb %al, %al;movl (%esi), %eax": 2,
                "movl %eax, %ebx;testl %ebx, %ebx;je - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax": 3,
                "calll *%eax;movw (%ebx), %ax;cmpw $, %ax;jne  <LsaDeregisterLogonProcess+>;andl $, -(%ebp)": 1,
                "je - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;leal (%edi,%eax,), %eax;movl %eax, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;leal (%edi,%eax,), %eax;movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;leal (%ebx), %eax;movl (%eax), %edx;cmpl -(%ebp), %edx;je  <LsaDeregisterLogonProcess+>": 2,
                "jmp  <LsaDeregisterLogonProcess+>;movzwl (%ebx), %ecx;xorl %edi, %edi;testl %ecx, %ecx;jbe  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll *%eax;movl (%ebx), %eax;cmpl $-, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;pushl %eax;pushl -(%ebp)": 1,
                "jb - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl (%eax);pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %ebx;xorl %eax, %eax;pushl %eax;pushl -(%ebp);movl %eax, (%ebx)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;addl $, %esi;pushl %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;subl $, %edi;pushl %edi;calll - <LsaDeregisterLogonProcess+>;movl (%edi), %edi": 1,
                "movl (%edi), %edi;cmpl %esi, %edi;jne - <LsaDeregisterLogonProcess+>;popl %edi;popl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl %eax, -(%ebp);movl (%esi), %eax;cmpw %bx, (%eax)": 1,
                "incl %ebx;pushl %eax;calll - <RtlUpcaseUnicodeChar>;movl -(%ebp), %ecx;imull $, %ecx, %ecx": 1,
                "incl %esi;incl %edi;incl %edi;cmpl %eax, %edi;jb - <LsaDeregisterLogonProcess+>": 2,
                "incl %edi;incl %edi;cmpl %eax, %edi;jb - <LsaDeregisterLogonProcess+>;movw (%ebx), %cx": 1,
                "je  <LsaDeregisterLogonProcess+>;movzwl -(%ebp), %eax;pushl $;pushl %eax;leal (%esi), %eax": 1,
                "leal (%esi), %eax;movl %eax, (%ebp);movl (%ebx), %eax;movzwl (%eax,%edi,), %eax;pushl %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;pushl (%esi);calll - <ExFreePoolWithTag>;andb $-, (%esi)": 1,
                "orb $, (%esi);jmp  <LsaDeregisterLogonProcess+>;andb $-, (%esi);movl (%eax), %ecx;addl (%eax), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%esi);pushl %eax;calll *%ecx;popl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %ebx;andl $-, %eax;pushl %edi;addl $, %eax": 1,
                "pushl %edi;addl $, %eax;xorl %edi, %edi;cmpl %edi, (%esi);movl %eax, %ebx": 1,
                "movl (%esi), %ecx;xorl %edx, %edx;cmpb %dl, (%ecx);je  <LsaDeregisterLogonProcess+>;movw $, %dx": 1,
                "incl %edx;cmpw (%ebx), %dx;jb - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movw $, %dx": 1,
                "addl %edx, (%ebp);movzwl (%ebp), %ecx;movl (%edi), %edx;shrl %ecx;leal (%edx,%ecx,), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %eax;pushl %esi;calll  <LsaDeregisterLogonProcess+>;cmpw $, (%edi)": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;testl %eax, %eax;jne - <LsaDeregisterLogonProcess+>;movl %esi, (%ecx)": 1,
                "popal;arpl %bp, (%ebx);pushl %esp;jb  <LsaDeregisterLogonProcess+>;arpl %sp, (%ebp)": 1,
                "orb (%eax), %al;orl %esp, (%eax);incl %ebx;popal;insb %dx, %es:(%edi)": 1,
                "incl %ebx;popal;insb %dx, %es:(%edi);insb %dx, %es:(%edi);jb  <LsaDeregisterLogonProcess+>": 1,
                "insb %dx, %es:(%edi);jb  <LsaDeregisterLogonProcess+>;jb  <LsaDeregisterLogonProcess+>;jae  <LsaDeregisterLogonProcess+>;popl %ebx": 1,
                "movl -(%ebp), %ecx;xorl %edi, %edi;addl $, %esp;cmpl %edi, %ecx;je  <LsaDeregisterLogonProcess+>": 1,
                "addl $, %esp;cmpl %edi, %ecx;je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>;cmpl %edi, (%esi)": 1,
                "calll - <DbgPrintEx>;addl $, %esp;cmpl $, (%esi);jbe  <LsaDeregisterLogonProcess+>;leal (%esi), %ebx": 1,
                "movl %esi, (%eax);movl %eax, %esi;cmpl (%ebp), %esi;movl %ecx, %eax;jne - <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %edi;movl (%esi), %ecx;pushl %esi;movl %ecx, (%ebp)": 1,
                "movl %eax, (%esi);movw (%edi), %ax;movw %ax, (%esi);movw (%edi), %ax;movw %ax, (%esi)": 3,
                "movw (%edi), %ax;movw %ax, (%esi);movw (%edi), %ax;movw %ax, (%esi);movl (%edi), %eax": 3,
                "andl $, %ecx;xorl %eax, %ecx;movl %ecx, (%esi);movb (%edi), %al;movb %al, (%esi)": 2,
                "movl %esp, %ebp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ;pushl %esi": 1,
                "popl %ebx;popl %ebp;retl $;movl (%esi), %edi;subl $, %edi": 1,
                "movl (%ebp), %edi;pushl %ebx;pushl %esi;movl (%edi), %esi;leal -(%esi), %ebx": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;leal (%esi), %eax;movl (%eax), %eax": 1,
                "cmpl , %edi;jb - <LsaDeregisterLogonProcess+>;popl %esi;popl %edi;retl": 1,
                "pushl %esi;movl , %eax;leal (%eax,%ebx,), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;testb %dl, %dl;jns  <LsaDeregisterLogonProcess+>;incl (%ebp)": 1,
                "je - <LsaDeregisterLogonProcess+>;leal (%esi), %eax;jmp - <LsaDeregisterLogonProcess+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "leal (%esi), %eax;jmp - <LsaDeregisterLogonProcess+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;pushl (%esi)": 1,
                "movl (%eax), %eax;movl %ecx, -(%ebp);movl %eax, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;cmpw $, (%eax)": 1,
                "pushl (%ebp);pushl %edi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi;testl %edi, %edi": 1,
                "cmpl $, (%edi);movl %edi, %esi;jne  <LsaDeregisterLogonProcess+>;pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;xorl %esi, %esi;jmp  <LsaDeregisterLogonProcess+>;incl (%edi);testb $, (%esi)": 1,
                "andl $, %edx;xorl %ecx, %edx;movl %edx, (%esi);movb (%eax), %al;movb %al, (%esi)": 1,
                "shrl $, %eax;incl %eax;cmpl $, %eax;jae  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "andl $, %ecx;xorl %ecx, (%eax);cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;orb $, (%eax)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;pushl %edi;pushl (%esi);pushl %eax": 1,
                "movl %eax, %edi;testl %edi, %edi;movl %edi, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp)": 1,
                "pushl %eax;calll *%ecx;movl (%edi), %eax;addl (%edi), %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %edi;pushl %esi;movl %eax, -(%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl (%esi);calll - <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %edi;calll *(%edi)": 1,
                "calll - <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %edi;calll *(%edi);movl %eax, %ebx": 1,
                "pushl -(%ebp);pushl %edi;calll *(%edi);movl %eax, %ebx;testl %ebx, %ebx": 1,
                "movl -(%ebp), %ecx;movl (%eax), %eax;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl (%eax), %eax;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);orb $, (%esi)": 1,
                "orb $, (%esi);pushl %esi;calll - <LsaDeregisterLogonProcess+>;orl $-, (%esi);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%edi), %esi;cmpb $, (%esi)": 1,
                "testb $, (%edi);je - <LsaDeregisterLogonProcess+>;leal (%esi), %edi;jmp  <LsaDeregisterLogonProcess+>;pushl (%eax)": 1,
                "pushl %ebx;pushl %ebx;leal (%esi), %edi;pushl %esi;movl %eax, (%edi)": 2,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl %edi, -(%ebp);pushl %ebx;pushl %esi": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %edi;pushl $": 2,
                "je  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %edi;pushl $;pushl (%ebp)": 2,
                "incl (%esi);incl (%esi);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %esi, -(%ebp)": 1,
                "jl  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;leave": 1,
                "movl %eax, (%ecx);movl %edi, %ecx;calll - <ExReleaseFastMutexUnsafe>;pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "movl %edi, %ecx;calll - <ExReleaseFastMutexUnsafe>;pushl %esi;calll  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "andl $-, %eax;pushl $;pushl %eax;movl %eax, (%ebp);calll *(%esi)": 1,
                "movl (%ebp), %eax;pushl %ebx;movl %eax, (%esi);calll - <RtlSetAllBits>;movl (%ebx), %eax": 1,
                "movb $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx": 1,
                "movl (%eax), %ecx;movl (%ecx), %ecx;movl (%ebx), %edx;movl %ecx, (%edx);movl (%eax), %ecx": 2,
                "andl $, (%eax);pushl $;leal (%ebx), %ecx;cmpl %ecx, (%ebx);popl %ecx": 1,
                "cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;leal (%ebx), %ecx;movl %ecx, (%ebx);leal (%ebx), %ecx": 1,
                "movl (%eax), %esi;movl %esi, (%ecx);movl %ecx, (%esi);movl (%edx), %esi;movl %edx, (%eax)": 1,
                "leal (%ebx), %eax;movl (%eax), %esi;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %edi, (%eax)": 1,
                "movl (%eax), %edx;movl (%eax), %esi;movl %esi, (%edx);movl (%eax), %eax;cmpl %ecx, %eax": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <LsaDeregisterLogonProcess+>;pushl (%ebx)": 1,
                "movw (%esi), %ax;cmpw $, %ax;je  <LsaDeregisterLogonProcess+>;cmpw $, %ax;je  <LsaDeregisterLogonProcess+>": 2,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, (%ebx);jmp  <LsaDeregisterLogonProcess+>;pushl (%edi)": 1,
                "pushl %ebx;pushl %edi;movl -(%ebp), %eax;movl (%ebp), %ecx;leal (%eax,%ecx,), %edi": 1,
                "movl %eax, %esi;movl (%esi), %ebx;pushl %ebx;pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %edi;calll  <LsaDeregisterLogonProcess+>;pushl (%esi);movl %eax, (%esi)": 1,
                "pushl %ebx;pushl %ebx;pushl (%ebp);leal -(%ebp), %eax;pushl %ebx": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl %eax, %esi;cmpl %ebx, %esi;jge  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "pushl (%ebp);movl -(%ebp), %eax;pushl %eax;calll *(%eax);movl %eax, %esi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movw %di, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeToString>;testb $, (%esi);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movzwl (%esi), %eax;pushl %eax;leal (%esi), %edi;pushl %edi": 1,
                "calll - <LsaDeregisterLogonProcess+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %ebx, %esi": 1,
                "jne - <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %esi": 1,
                "movl (%ebp), %eax;movl (%esi), %ecx;pushl $;pushl $-;pushl %esi": 1,
                "movl %ebx, (%edi);calll - <ExReleaseFastMutexUnsafe>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "movl (%esi), %ebx;pushl %edi;movl (%eax), %edi;cmpl %ebx, %edi;jne  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;pushl $": 1,
                "movl %ecx, (%esi);je  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;pushl $;pushl $": 1,
                "pushl %eax;pushl %esi;pushl -(%ebp);movl %eax, (%ecx);pushl %ebx": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "pushl $;pushl (%ebp);pushl %esi;pushl -(%ebp);pushl %edi": 1,
                "movl -(%ebp), %eax;movl %eax, ;movl -(%ebp), %eax;movl %eax, ;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;pushl (%ebp);pushl %ebx": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl %eax, (%esi);pushl (%esi);pushl %ebx;calll  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl %eax;pushl %ebx;calll  <LsaDeregisterLogonProcess+>;movl %eax, (%esi)": 1,
                "calll  <LsaDeregisterLogonProcess+>;movl %eax, (%esi);movl (%ebp), %eax;addl $, %eax;movl (%eax), %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %esi;movl (%esi), %ebx;cmpl , %ebx;jne  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpb $, (%ebx);movl (%esi), %eax;movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;shrl $, %eax;andl $, %eax;pushl %eax": 1,
                "pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jne - <LsaDeregisterLogonProcess+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <LsaDeregisterLogonProcess+>;movl %eax, %esi;testl %esi, %esi": 1,
                "orl $-, %ecx;jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %ecx;movl -(%ebp), %eax;movl (%eax), %esi": 1,
                "movl (%ebx), %edi;andl $, (%eax);andl $, (%ebx);movl -(%ebp), %eax;pushl $": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movw (%ecx), %dx;movw %dx, (%eax);testb $, (%ecx)": 1,
                "pushl %ebx;movl %esi, (%eax);calll *(%ebx);testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl (%esi,%eax,), %edi;pushl %edi;pushl %ebx;movl %edi, -(%ebp);calll *(%ebx)": 1,
                "pushl %ebx;calll *%eax;cmpw $, (%esi);jne  <LsaDeregisterLogonProcess+>;movzwl (%esi), %eax": 1,
                "andl $, (%ebp);cmpl $, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl (%edi), %eax;movl %eax, (%esi);movw (%edi), %ax;movw %ax, (%esi);pushl (%edi)": 1,
                "xorl %ecx, %ecx;pushl %ebx;xorl (%esi), %eax;andl $, %eax;xorl %eax, (%esi)": 1,
                "xorl %eax, %ecx;movl %ecx, (%esi);movb (%edi), %al;movb %al, (%esi);movb $, (%esi)": 1,
                "cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;andl $, (%edi);movl %eax, (%edi);movl -(%edi), %eax": 1,
                "jbe  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;addl (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "calll *(%eax);movl %eax, (%esi);pushl (%edi);pushl (%ebp);calll  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, (%esi);movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "pushl %eax;movl (%ebp), %eax;pushl %eax;calll *(%eax);pushl %eax": 1,
                "pushl (%ebp);calll  <LsaDeregisterLogonProcess+>;movl %eax, (%ebx);decl (%ebp);subl $, %edi": 1,
                "pushl %esi;calll - <ExFreePoolWithTag>;movb -(%ebp), %al;popl %edi;popl %ebx": 1,
                "movl %eax, -(%ebp);xorl %ebx, %ebx;movl %ebx, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 1,
                "xorl %ebx, %ebx;incl %eax;cmpl (%edi), %eax;movl %eax, (%ebp);jb - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;pushl %edi;movl (%ebp), %edi": 1,
                "movl %eax, (%esi);je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl (%edi), %ecx;movl (%ecx), %ecx": 1,
                "movl (%eax), %eax;movl (%edi), %ecx;movl (%ecx), %ecx;movl %ecx, (%eax);movl (%esi), %eax": 1,
                "movl (%edi), %eax;movl (%esi), %ecx;movl (%eax), %eax;movl (%ecx), %ecx;movl %eax, (%ecx)": 1,
                "pushl %edi;pushl (%esi);calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>": 1,
                "testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "movl (%eax), %ecx;pushl (%ecx);pushl %eax;calll  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx": 1,
                "testl %ebx, %ebx;jge  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "andl $, -(%ebp);movl %edx, %ecx;movl -(%ebp), %esi;leal (%ebx), %edi;movl %ecx, %eax": 1,
                "movl -(%ebp), %eax;calll - <wctomb+>;retl $;pushl $;pushl -(%ebp)": 1,
                "calll - <ExFreePoolWithTag>;calll - <LsaDeregisterLogonProcess+>;retl;incl %ebx;decl %ebp": 1,
                "imull $, %gs:(%bp,%di), %esi;arpl %si, %gs:(%ebp);imull $, (%ecx,%edi,), %esi;jo  <LsaDeregisterLogonProcess+>;imull $, (%edi), %ebp": 1,
                "xorl %eax, %eax;addl $, %esp;incl %eax;popl %ebp;retl $": 1,
                "pushl $;pushl %esi;pushl (%ebp);calll - <SeAccessCheck>;pushl %esi": 1,
                "xorl %ebx, %ebx;pushl %edi;movl %ebx, -(%ebp);calll - <LsaDeregisterLogonProcess+>;testb %al, %al": 1,
                "pushl %esi;calll - <SeLockSubjectContext>;movl (%ebp), %ecx;movl (%edi), %eax;movl (%eax,%ecx,), %eax": 1,
                "movl , %eax;pushl %ebx;pushl %esi;xorl %ebx, %ebx;pushl %edi": 1,
                "pushl %esi;xorl %ebx, %ebx;pushl %edi;movl $, %edi;xorl %esi, %esi": 1,
                "movb %bl, -(%ebp);movb $, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp)": 1,
                "pushl -(%ebp);calll - <RtlInitializeSid>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "addl %ecx, %eax;leal (,%eax,), %eax;pushl %edi;pushl %eax;pushl %esi": 1,
                "leal (,%eax,), %eax;pushl %edi;pushl %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, %esi;movl %esi, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %ebx": 1,
                "orb $, (%eax);pushl %edi;movl -(%ebp), %edi;leal (%edi), %eax;pushl %eax": 1,
                "pushl %ebx;pushl $;jmp  <LsaDeregisterLogonProcess+>;leal (%eax), %edx;movl %edi, %ecx": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlCreateSecurityDescriptor>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;pushl %ebx;pushl %esi;pushl $": 2,
                "pushl -(%ebp);calll - <RtlSetDaclSecurityDescriptor>;movl %eax, %esi;cmpl %ebx, %esi;pushl %ebx": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl %ebx": 2,
                "pushl %esi;calll *%eax;movl $, %eax;movl %ebx, %ecx;andl %eax, %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %esi;calll *%eax;pushl (%ebx)": 2,
                "je  <LsaDeregisterLogonProcess+>;movl (%edi), %ecx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%ebx), %ecx": 1,
                "jmp  <LsaDeregisterLogonProcess+>;xorb %al, %al;popl %edi;popl %esi;popl %ebx": 1,
                "pushl (%edi);jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %ecx;pushl (%ebp);movl %ecx, (%ebx)": 1,
                "pushl %esi;calll *%eax;popl %ebx;popl %edi;popl %esi": 2,
                "testl %esi, %esi;jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx": 1,
                "pushl %ebx;pushl (%esi);pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax": 1,
                "pushl (%ebp);pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);movl , %eax": 1,
                "cmpb $, (%ebp);pushl %edi;movl (%ebp), %edi;movl (%edi), %ecx;movl %ecx, (%ebp)": 1,
                "movl %ecx, (%ebp);movl (%ebp), %ecx;movl %eax, (%edi);movl %ecx, (%ebx);sete %cl": 1,
                "pushl (%esi);pushl %edi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "incl (%ebp);addl $, %esi;cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;andl $, (%esi)": 1,
                "movl %eax, (%esi);movb $, (%esi);jmp  <LsaDeregisterLogonProcess+>;decl (%ebp);subl $, %esi": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;pushl (%ebx);movl (%ebx), %eax": 1,
                "calll  <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>": 2,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;cmpl -(%ebp), %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%edi);pushl %esi;calll  <LsaDeregisterLogonProcess+>;testb %al, %al;je - <LsaDeregisterLogonProcess+>": 2,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <LsaDeregisterLogonProcess+>;cmpl $, (%edi)": 1,
                "movl (%ebx), %eax;pushl %eax;calll *(%eax);testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl %esi, (%eax)": 1,
                "cmpl (%ebp), %ecx;jne  <LsaDeregisterLogonProcess+>;movl %esi, (%edi);jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax": 2,
                "movl (%ebx), %eax;pushl %ecx;pushl %eax;calll *(%eax);testl %eax, %eax": 2,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %ecx;movl %eax, (%ecx)": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%ebx)": 1,
                "calll - <ExFreePoolWithTag>;movl $, %eax;popl %esi;popl %edi;popl %ebx": 1,
                "testl %esi, %esi;je - <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);xorl %eax, %eax;popl %esi;popl %edi": 1,
                "movl (%ebp), %ecx;movl (%ecx), %esi;testb $, (%esi);je  <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <ObCheckCreateObjectAccess+>;movl %eax, -(%ebp);movl (%esi), %eax;pushl (%esi);pushl %eax": 1,
                "pushl %eax;calll *(%eax);pushl (%ebp);pushl %edi;pushl (%esi)": 1,
                "pushl (%esi);calll - <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp);pushl (%edi);pushl %esi": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;calll - <wctomb+>": 1,
                "movl (%esi), %eax;pushl %esi;pushl %eax;pushl %edi;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;pushl (%esi);orb $, (%esi)": 1,
                "pushl %edi;je  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%esi), %esi": 1,
                "movl %esi, (%eax);movl (%esi), %eax;pushl $;movl %edi, (%eax);pushl (%esi)": 1,
                "movl (%esi), %eax;pushl $;movl %edi, (%eax);pushl (%esi);calll - <ExQueueWorkItem>": 1,
                "calll - <ExQueueWorkItem>;movl (%esi), %ecx;calll - <ExReleaseFastMutexUnsafe>;calll - <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%ecx), %ecx;cmpw $, (%ecx);ja  <LsaDeregisterLogonProcess+>;incl %esi": 1,
                "jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi;movl (%eax), %edx;leal (%edx,%ecx,), %esi;cmpw $, (%esi)": 1,
                "jb - <LsaDeregisterLogonProcess+>;movzwl (%eax), %eax;shrl %eax;popl %edi;popl %esi": 1,
                "testl %ecx, %ecx;jbe  <LsaDeregisterLogonProcess+>;pushl %esi;movl (%ebp), %edx;movzbw (%eax,%edx), %dx": 1,
                "jb - <LsaDeregisterLogonProcess+>;popl %esi;popl %ebp;retl $;int": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;movw (%eax), %si;pushl %edi": 1,
                "movl (%ebp), %ebx;pushl %esi;movw (%eax), %si;pushl %edi;movl (%eax), %edi": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %eax;calll - <RtlUpcaseUnicodeChar>;testb $, (%ebp);movl %eax, (%ebp)": 2,
                "movl $, %eax;addl %eax, %esi;addl %eax, (%ebp);testw %si, %si;jne - <LsaDeregisterLogonProcess+>": 1,
                "calll *(%esi);testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>": 1,
                "addl $-, %eax;popl %esi;popl %ebp;retl $;int": 1,
                "andl $, %edx;shll $, %eax;addl (%ecx,%edx,), %eax;pushl %edi;leal (%esi), %edi": 1,
                "shll $, %eax;addl (%ecx,%edx,), %eax;pushl %edi;leal (%esi), %edi;movl (%edi), %ecx": 1,
                "calll - <ExReleaseFastMutexUnsafe>;movl (%ebx), %eax;movl %eax, -(%ebp);addl %edi, %eax;movl %eax, -(%ebp)": 1,
                "testl %ecx, %ecx;jge  <LsaDeregisterLogonProcess+>;negl %ecx;movl %ecx, -(%ebp);movl (%ebx), %eax": 1,
                "jge  <LsaDeregisterLogonProcess+>;negl %ecx;movl %ecx, -(%ebp);movl (%ebx), %eax;andl $-, %eax": 1,
                "movl %ecx, -(%ebp);movl (%ebx), %eax;andl $-, %eax;movl %eax, -(%ebp);leal (%ecx,%edi), %edx": 1,
                "cmpl (%eax), %edx;jbe  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>;testb $, (%ebx)": 1,
                "movl (%esi), %ecx;calll - <ExAcquireFastMutexUnsafe>;testb $, (%ebx);jne  <LsaDeregisterLogonProcess+>;cmpl $, (%esi)": 1,
                "cmpb $, ;jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, %edx": 1,
                "movl (%edx,%esi,), %edx;andl $, %edi;shll $, %edi;andl $, %eax;addl (%edx,%edi), %eax": 1,
                "pushl (%ebp);pushl %esi;calll *%eax;movl (%edi), %eax;sarl $, %eax": 1,
                "pushl $;popl %eax;jmp  <LsaDeregisterLogonProcess+>;movsbl (%eax), %eax;addl $, %eax": 3,
                "pushl (%ebp);pushl %eax;pushl (%ebp);pushl %esi;calll  <LsaDeregisterLogonProcess+>": 1,
                "popl %eax;subl -(%ecx), %eax;jmp  <LsaDeregisterLogonProcess+>;pushl $-;popl %eax": 1,
                "movl (%ebp), %ebx;jae  <LsaDeregisterLogonProcess+>;cmpl %ecx, (%esi);jg  <LsaDeregisterLogonProcess+>;movl (%ebp), %esi": 1,
                "movl (%ebp), %eax;shrl $, %eax;decl %eax;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edi;pushl %ebx;pushl %edi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %esi": 1,
                "testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;pushl $;pushl %ebx;pushl %edi": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%eax), %esi;andl $-, %esi;movl (%esi), %eax": 1,
                "cmpb $, (%ebp);movl (%ebp), %edi;je  <LsaDeregisterLogonProcess+>;movl (%edi), %ecx;movl %ebx, %eax": 1,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%eax), %edi": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl (%ebp), %ecx": 1,
                "andl $-, %eax;movl %eax, (%ebp);addl $, %eax;movl %eax, (%ebp);movl (%eax), %eax": 1,
                "testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;pushl $;pushl %ebx;jmp  <LsaDeregisterLogonProcess+>": 1,
                "andl $, (%ebp);shrl $, %eax;andl $, %eax;movl %eax, (%edi);cmpl $, (%esi)": 1,
                "movl %edi, %eax;shrl $, %eax;decl %eax;cmpl $, %eax;jb  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %ebx;calll - <LsaDeregisterLogonProcess+>;movl %eax, %esi": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %ebx;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "movl %edx, -(%ebp);movl (%eax), %edi;movl %edi, %esi;negl %esi;movl %esi, -(%ebp)": 1,
                "orl $-, -(%ebp);calll  <LsaDeregisterLogonProcess+>;movb $, %al;jmp  <LsaDeregisterLogonProcess+>;pushl $-": 1,
                "xorb %al, %al;calll - <wctomb+>;retl $;movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "pushl (%ebp);pushl %ebx;calll *%eax;retl;int": 1,
                "pushl %ebx;pushl (%ebp);pushl $;jmp  <LsaDeregisterLogonProcess+>;imull $, %esi, %esi": 1,
                "leal (%esi,%edx), %esi;movl (%esi), %eax;jmp  <LsaDeregisterLogonProcess+>;cmpl %edi, (%eax);je  <LsaDeregisterLogonProcess+>": 1,
                "calll - <KeBugCheckEx>;movl (%eax), %ecx;movl (%eax), %esi;pushl $;movl %ecx, (%esi)": 1,
                "movl (%eax), %ecx;movl (%eax), %esi;pushl $;movl %ecx, (%esi);pushl %eax": 1,
                "movl %edi, %ecx;shll %cl, %eax;notl %eax;andl %eax, (%esi);incl %edi": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %edi;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "movl (%eax), %esi;pushl %edi;pushl (%ebp);movl %edi, %ebx;shrl $, %ebx": 1,
                "cmpl $, (%eax);jne  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;addl %edi, %eax;movl %eax, %edx": 1,
                "movl %edx, (%eax);movl (%edi), %eax;addl %eax, (%ecx);movl %ecx, %edi;pushl %ebx": 1,
                "movl %ebx, %esi;jmp  <LsaDeregisterLogonProcess+>;jb - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;orl $-, %ebx": 1,
                "calll *(%edi);testl %eax, %eax;movl %eax, -(%ebp);je - <LsaDeregisterLogonProcess+>;movl (%edi), %eax": 1,
                "calll - <memmove>;addl $, %esp;pushl (%ebp);pushl %edi;calll - <LsaDeregisterLogonProcess+>": 1,
                "leal -(%eax,%ecx), %ecx;decl %eax;notl %eax;andl %eax, %ecx;movl $, %eax": 1,
                "decl %eax;notl %eax;andl %eax, %ecx;movl $, %eax;xorl %edx, %edx": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl %ebx, %ecx;shrl $, %ecx;cmpl (%ebp), %ecx;movl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "jne  <LsaDeregisterLogonProcess+>;testb $, (%ebp);je  <LsaDeregisterLogonProcess+>;cmpl %ebx, (%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "jl  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;cmpl $, %eax;jbe  <LsaDeregisterLogonProcess+>;movl $, %eax": 1,
                "pushl $;calll  <LsaDeregisterLogonProcess+>;movl %eax, %esi;cmpl %ebx, %esi;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>": 2,
                "movl $, %edi;jmp  <LsaDeregisterLogonProcess+>;pushl $;pushl $;pushl %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>;jmp - <LsaDeregisterLogonProcess+>": 1,
                "pushl (%esi);calll - <ExFreePoolWithTag>;jmp - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "movl (%esi), %eax;addl $, %eax;pushl %esi;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "pushl %ebx;pushl (%esi);calll - <ExFreePoolWithTag>;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %edi": 1,
                "movl %eax, ;calll - <ExReleaseFastMutexUnsafe>;movl (%ebp), %eax;movl %esi, (%eax);xorl %eax, %eax": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);xorl %eax, %eax;popl %esi;popl %edi": 1,
                "jne  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;movl (%eax), %edi": 2,
                "pushl $;pushl $;pushl (%ebp);pushl $;pushl %eax": 1,
                "pushl %eax;pushl (%ebp);pushl $;pushl (%ebp);calll - <ZwCreateFile>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpb %bl, %al;je  <LsaDeregisterLogonProcess+>;movl %edx, -(%ebp);movl %edx, (%ebp)": 1,
                "calll - <ZwCreateFile>;cmpl $, %eax;movl %eax, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl %esi": 2,
                "calll - <ZwFsControlFile>;cmpl $, %eax;movl %eax, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl %ebx": 2,
                "pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl (%ebp), %ebx;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl %ebx, -(%ebp);pushl (%edi);calll - <ZwFsControlFile>;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%edi);calll - <ZwQueryInformationFile>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;orl -(%ebp), %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, %eax;jae  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax;movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <_wcsnicmp>;addl $, %esp": 1,
                "pushl (%ebp);sbbl %esi, %esi;pushl (%ebp);andl $-, %esi;addl $, %esi": 1,
                "pushl %ebx;pushl %ebx;pushl -(%ebp);calll - <KeWaitForSingleObject>;cmpl %ebx, -(%ebp)": 1,
                "calll - <ZwClose>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %esi;pushl $-;pushl (%ebp);movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movl -(%ebp), %esi;movl %eax, %edi;movl %ecx, %eax": 1,
                "addl $, %esi;movw %cx, (%eax);movl %esi, (%eax);movw %cx, (%eax);popl %esi": 1,
                "pushl %ebx;calll - <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl -(%ebp);pushl (%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi": 1,
                "testb %al, %al;je - <LsaDeregisterLogonProcess+>;pushl (%ebx);pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;testb %al, %al;je - <LsaDeregisterLogonProcess+>;xorl %ebx, %ebx;cmpl %ebx, (%esi)": 1,
                "pushl (%esi);pushl %edi;calll  <LsaDeregisterLogonProcess+>;testb %al, %al;je - <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;pushl (%eax,%ebx,);pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "testb %al, %al;je - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;pushl (%eax,%ebx,);pushl %edi": 1,
                "incl %ebx;cmpl (%esi), %ebx;jb - <LsaDeregisterLogonProcess+>;movb $, %al;popl %ebx": 1,
                "cmpl $, (%esi);movl $, %eax;jb  <LsaDeregisterLogonProcess+>;cmpl $, %ecx;jae  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %eax, %ecx;ja  <LsaDeregisterLogonProcess+>;cmpl $, (%ebx);jb  <LsaDeregisterLogonProcess+>;cmpl $, %ecx": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 2,
                "movl %edi, -(%ebp);calll *(%esi);testl %eax, %eax;jne  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "pushl %ebx;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;je - <LsaDeregisterLogonProcess+>;incl %edi": 1,
                "cmpl (%esi), %edi;jb - <LsaDeregisterLogonProcess+>;pushl (%esi);pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl (%esi);pushl %ebx;calll - <LsaDeregisterLogonProcess+>;orl $-, (%esi);movw %di, (%esi)": 1,
                "movl (%ebp), %ebx;shrl $, %eax;cmpw $, (%ebx);movl %eax, -(%ebp);jbe  <LsaDeregisterLogonProcess+>": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;movl -(%ebp), %ecx;movl (%eax,%ecx,), %eax": 1,
                "pushl %edi;pushl (%ebp);movl %ebx, (%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl %ebx, (%edi);movl (%eax), %ecx;orl $-, (%edi)": 1,
                "movl (%eax), %ecx;orl $-, (%edi);xorl %ebx, %ebx;cmpl %ebx, %ecx;movl %ebx, (%edi)": 1,
                "orl $-, -(%ebp);pushl %ebx;pushl %esi;xorl %esi, %esi;cmpl $-, %eax": 1,
                "pushl -(%ebp);movl (%edi), %eax;movl (%ebp), %ebx;movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "movl (%ebp), %ebx;movl %eax, -(%ebp);movl (%edi), %eax;pushl %ebx;pushl (%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;orw $, %ax;movw %ax, (%esi);leal -(%ebp), %eax;pushl %eax": 1,
                "jl  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;orl $-, (%esi);andl $, (%esi);testl %eax, %eax": 1,
                "movl (%ebp), %eax;pushl %eax;calll *(%eax);testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl %ebx;calll *(%ebx);testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $-, %eax;movl %eax, -(%ebp);je - <LsaDeregisterLogonProcess+>;pushl %eax;pushl %ebx": 1,
                "pushl %ebx;calll *(%ebx);testl %eax, %eax;movl %eax, (%ebp);je - <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "pushl %ecx;pushl %eax;calll - <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl (%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%eax,%esi,);pushl %ebx;calll - <LsaDeregisterLogonProcess+>;cmpl $-, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %ecx;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %esi;andl $, (%esi);movl %esi, -(%ebp)": 1,
                "incl (%esi);cmpl $-, %eax;movl %eax, (%ebp);je  <LsaDeregisterLogonProcess+>;cmpb $, (%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%esi);pushl %ebx;calll *(%ebx);testl %eax, %eax": 1,
                "movl %eax, (%ebp);je  <LsaDeregisterLogonProcess+>;cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "calll *%eax;movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%esi)": 1,
                "cmpb $, -(%ebp);movl -(%ebp), %esi;je - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;cmpl %eax, (%ebp)": 1,
                "cmpl %eax, (%ebp);jne - <LsaDeregisterLogonProcess+>;movb $, -(%ebp);movb $, -(%ebp);jmp - <LsaDeregisterLogonProcess+>": 1,
                "jmp - <LsaDeregisterLogonProcess+>;movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%esi)": 1,
                "cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi;calll *(%edi)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi;calll *(%edi);testl %eax, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;movl -(%ebp), %eax": 1,
                "cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;movl (%esi), %ecx;movl -(%ebp), %eax;cmpl (%eax), %ecx": 1,
                "movl (%eax), %eax;movl %eax, (%esi);movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "movb $, -(%ebp);je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %edi;calll *%eax": 1,
                "pushl %ebx;pushl (%ebp);pushl %edi;calll - <LsaDeregisterLogonProcess+>;cmpl $-, %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl %eax, -(%ebp);movb $, -(%ebp);movl (%ebp), %eax": 1,
                "movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax);jmp - <LsaDeregisterLogonProcess+>;movl (%edi), %eax": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "pushl %ebx;calll *%eax;jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "movb $, -(%ebp);cmpl $, -(%ebp);popl %edi;popl %esi;popl %ebx": 1,
                "pushl %edi;movb %al, (%ebp);movl %ebx, (%esi);calll - <ExFreePoolWithTag>;movb (%ebp), %al": 1,
                "shrl $, %ecx;leal -(%eax), %edx;notl %edx;leal (%ecx,%eax), %ecx;andl %edx, %ecx": 1,
                "movl , %eax;testl %eax, %eax;jle  <LsaDeregisterLogonProcess+>;shll $, %eax;cmpl %eax, %edi": 2,
                "testl %eax, %eax;jle  <LsaDeregisterLogonProcess+>;shll $, %eax;cmpl %eax, %edi;jb  <LsaDeregisterLogonProcess+>": 2,
                "jle  <LsaDeregisterLogonProcess+>;shll $, %eax;cmpl %eax, %edi;jb  <LsaDeregisterLogonProcess+>;pushl %edi": 2,
                "andl %edx, %ecx;movl (%esi), %edx;pushl %edi;pushl (%esi);shll $, %edx": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;subl $, %esi;movl (%ebp), %ecx": 1,
                "movl %ecx, %eax;cmpl %eax, %esi;jae  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "pushl $;pushl $;pushl %ebx;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;cmpl %edi, (%edi);jne - <LsaDeregisterLogonProcess+>": 1,
                "retl $;pushl $;pushl %esi;pushl (%ebp);pushl $": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl $;calll - <KeBugCheckEx>": 4,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;cmpl %eax, %ebx;movl %eax, -(%ebp)": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;incl %ebx;cmpl -(%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);subl %esi, %eax;movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "andl $, %ecx;addl %eax, %ecx;movl %eax, -(%ebp);movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl (%ebp), %ecx;leal (%esi), %eax;movl %eax, (%ecx);movl (%ebp), %ecx": 1,
                "testl %ecx, %ecx;movl %ecx, (%ebp);je  <LsaDeregisterLogonProcess+>;movl (%ecx), %eax;testb $, %al": 1,
                "subl -(%ebp), %ecx;cmpl %esi, %ecx;jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;subl (%ebp), %ecx": 1,
                "pushl %esi;pushl %edi;pushl $;pushl $;calll - <KeBugCheckEx>": 2,
                "pushl %edi;pushl $;pushl $;calll - <KeBugCheckEx>;testb $, (%eax)": 1,
                "jl - <LsaDeregisterLogonProcess+>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "calll - <ExAcquireFastMutexUnsafe>;cmpl %esi, (%ebx);je  <LsaDeregisterLogonProcess+>;movl (%ebx), %ecx;calll - <ExReleaseFastMutexUnsafe>": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;leal -(%eax,%ecx), %ecx;pushl %ecx;pushl %eax": 1,
                "movl $, %esi;testl %edi, %edi;jge - <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "jge - <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;addl $, %edi;andl $, %edi": 1,
                "andl $, %edi;je  <LsaDeregisterLogonProcess+>;subl %esi, %edi;movl (%ebx), %eax;cmpl %eax, %edi": 1,
                "jbe  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %edi;pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "movl (%eax), %ecx;testb $, %cl;je  <LsaDeregisterLogonProcess+>;movl (%eax), %eax;addl (%eax), %edi": 1,
                "movl (%esi), %eax;addl %edi, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %ebx": 1,
                "movl %eax, (%edi);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %edi, -(%ebp);movl (%esi), %eax": 2,
                "addl %eax, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl -(%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;movl %eax, -(%ebp);pushl %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %edi;jmp  <LsaDeregisterLogonProcess+>;movl %ebx, %ecx;xorl %eax, %eax": 1,
                "movl %ecx, (%eax);movl %ebx, (%eax);leal -(%ebx), %ecx;movl %ecx, (%eax);cmpl $, (%esi)": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp);cmpb $, (%ebp)": 1,
                "pushl %esi;calll  <LsaDeregisterLogonProcess+>;movb %al, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp)": 1,
                "calll  <LsaDeregisterLogonProcess+>;movb %al, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp);movl $, %edi": 1,
                "pushl %esi;calll *(%esi);testb %al, %al;je  <LsaDeregisterLogonProcess+>;cmpb $, (%ebp)": 1,
                "pushl %eax;pushl $;pushl %esi;calll  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %esi;movl $, %eax;movl %esi, %ecx;andl %eax, %ecx;cmpl %eax, %ecx": 1,
                "testl %ebx, %ebx;jne  <LsaDeregisterLogonProcess+>;pushl $;pushl %esi;pushl %edi": 1,
                "leal (%ecx), %esi;andl $-, %esi;andl $-, %edx;subl $, %esi;testl %edx, %edx": 1,
                "cmpl %eax, (%eax);je  <LsaDeregisterLogonProcess+>;cmpl (%ebp), %esi;jb - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);jne  <LsaDeregisterLogonProcess+>;testl %ebx, %ebx": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl $;pushl $;pushl $;pushl %edi": 1,
                "testb %al, %al;jne  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "pushl %eax;calll - <RtlSetBits>;testb $, (%edi);jne  <LsaDeregisterLogonProcess+>;calll - <LsaDeregisterLogonProcess+>": 1,
                "movl (%esi), %eax;movl (%eax), %eax;pushl %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %esi;calll *%eax;movl (%ebp), %eax": 2,
                "pushl -(%ebp);pushl %esi;calll *%eax;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;incl (%esi);pushl %ebx;pushl (%esi)": 1,
                "movl %edi, -(%ebp);calll *(%esi);cmpb $, %al;je  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "testl %ecx, %ecx;movl (%eax), %edx;leal -(%edx,%ecx), %edx;movl %edx, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;subl $, %ecx;cmpl %edx, %ecx;movl %ecx, (%ebp);jae  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx": 3,
                "pushl -(%ebp);pushl %esi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "addl $, -(%ebp);cmpl %ecx, -(%ebp);jb - <LsaDeregisterLogonProcess+>;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "andl $, -(%ebp);movl %edi, -(%ebp);shrl $, -(%ebp);shrl $, %eax;movl %eax, -(%ebp)": 1,
                "shrl $, -(%ebp);shrl $, %eax;movl %eax, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "notl %eax;andl %eax, (%esi);incl -(%ebp);addl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl (%eax), %ecx;movl (%eax), %edi;pushl $;pushl $;pushl %eax": 1,
                "pushl $;pushl $;pushl %eax;pushl %esi;movl %ecx, (%ebp)": 1,
                "movl -(%ebp), %eax;andl $, %edi;movl %ecx, (%eax);leal (%edi), %eax;cmpl -(%ebp), %eax": 1,
                "addl $, %edi;cmpl (%ebp), %edi;jb - <LsaDeregisterLogonProcess+>;cmpl %ebx, (%ebx);jne - <LsaDeregisterLogonProcess+>": 1,
                "decw (%esi);cmpw %di, (%esi);movl %eax, -(%ebp);jne - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;subl $, %ebx;movl (%esi), %edx;movl (%edx), %edx;cmpl %edx, %ecx": 1,
                "addl (%ebx), %eax;movl %eax, (%ebp);jmp  <LsaDeregisterLogonProcess+>;addl $, (%ebp);movl (%ebp), %eax": 1,
                "leal -(%ebp), %eax;cmpl %eax, %ecx;jne - <LsaDeregisterLogonProcess+>;movl %edi, -(%ebp);leal (%esi), %ebx": 1,
                "leal (%esi), %ebx;jmp  <LsaDeregisterLogonProcess+>;pushl %esi;pushl $;jmp  <LsaDeregisterLogonProcess+>": 1,
                "calll  <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %edi": 1,
                "pushl (%ebp);pushl -(%ebp);pushl $;jmp  <LsaDeregisterLogonProcess+>;andl $, (%ecx)": 1,
                "pushl %eax;movl (%edi), %eax;shrl $, %eax;pushl %eax;leal (%esi), %eax": 1,
                "movl (%edi), %eax;shrl $, %eax;pushl %eax;leal (%esi), %eax;pushl %eax": 1,
                "calll - <RtlClearBits>;movl (%edi), %eax;addl (%edi), %eax;movl %eax, (%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %eax;cmpl (%esi), %eax;jb - <LsaDeregisterLogonProcess+>;xorl %edi, %edi;pushl %edi": 1,
                "pushl $;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "testb %al, %al;jne  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %esi;pushl $": 1,
                "je  <LsaDeregisterLogonProcess+>;decl %eax;imull $, (%esi), %esi;jae  <LsaDeregisterLogonProcess+>;cmpb (%eax), %ah": 5,
                "imull $, (%ebp), %ebp;insb %dx, %es:(%edi);jne  <LsaDeregisterLogonProcess+>;pushl $;jb  <LsaDeregisterLogonProcess+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax);jo  <LsaDeregisterLogonProcess+>;outsl (%esi), %dx": 1,
                "imull $, (%esp,%eax,), %esp;imull $, (%ebp), %ebp;andb %ch, (%eax);jbe  <LsaDeregisterLogonProcess+>;andb %ah, ": 1,
                "xorl %edi, %edi;cmpl %edi, (%ebx);je  <LsaDeregisterLogonProcess+>;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "pushl %ebx;calll *(%ebx);testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %esi": 1,
                "movl (%esi), %ecx;movl %ecx, -(%ebp);movl (%ebx), %eax;cmpl %eax, %ecx;jbe  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;cmpl %edi, (%ebx);je  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax": 2,
                "jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;pushl %eax": 2,
                "cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "andl $-, %eax;movl %eax, -(%ebp);pushl $;pushl %edi;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitializeBitMap>;xorl %edi, %edi;pushl %edi": 1,
                "cmpl %edi, %eax;jne  <LsaDeregisterLogonProcess+>;pushl $;pushl %edi;pushl %ebx": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;leal (%eax,%eax,), %eax;shll $, %eax;pushl %eax;pushl $": 1,
                "leal (%eax,%eax,), %eax;shll $, %eax;pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "calll - <LsaDeregisterLogonProcess+>;cmpb $, %al;je - <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi;xorl %eax, %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi": 2,
                "xorl %edi, %edi;movl (%ebx), %eax;addl $, %eax;pushl %eax;pushl %edi": 1,
                "pushl $;pushl $;pushl %edi;pushl $;calll - <DbgPrintEx>": 1,
                "cmpl %eax, %ecx;jbe  <LsaDeregisterLogonProcess+>;pushl %ecx;pushl %eax;pushl $": 1,
                "pushl %ebx;calll  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;shll $, %eax;movl %eax, (%ebx)": 1,
                "shll $, %eax;addl %edi, %ecx;leal (%eax,%ecx), %esi;movl (%ebx), %eax;andl $, %esi": 1,
                "jge  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;movl %esi, (%ebx);movl (%ebx), %esi": 1,
                "movl (%ebx), %esi;movl (%esi), %eax;cmpl (%esi), %eax;movl %esi, -(%ebp);jne - <LsaDeregisterLogonProcess+>": 1,
                "andl %edi, %eax;pushl %ebx;movl %eax, -(%ebp);calll *(%ebx);testb %al, %al": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;movl %eax, ;movl %esi, ;movl , %eax": 1,
                "incl (%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %ebx;addl $, %esi": 1,
                "movl -(%ebp), %esi;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %esi": 1,
                "pushl %ebx;calll *(%ebx);xorl %edi, %edi;pushl %edi;pushl %esi": 1,
                "pushl $;pushl $;pushl %ebx;calll *(%ebx);testb %al, %al": 1,
                "setne %al;popl %edi;popl %esi;popl %ebx;leave": 2,
                "pushl %esi;movl (%ebp), %esi;testb $, (%esi);pushl %edi;jne  <LsaDeregisterLogonProcess+>": 1,
                "andl %eax, %ecx;cmpl %eax, %ecx;je  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %esi": 1,
                "pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "pushl %esi;calll *%eax;pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "cmpl %ecx, (%ecx);jne  <LsaDeregisterLogonProcess+>;pushl (%eax);pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movb $, (%esi);jmp  <LsaDeregisterLogonProcess+>;movb $, %al;popl %edi": 1,
                "cmpb %bl, ;je  <LsaDeregisterLogonProcess+>;xorb %al, %al;jmp  <LsaDeregisterLogonProcess+>;pushl %esi": 1,
                "cmpl %ebx, (%eax);je  <LsaDeregisterLogonProcess+>;cmpl %esi, (%eax);je  <LsaDeregisterLogonProcess+>;cmpl %esi, (%eax)": 1,
                "calll *(%eax);movl %eax, %esi;testl %esi, %esi;movl %esi, -(%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "addl $, %eax;pushl %eax;pushl (%ebp);pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movb $, %al": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movb $, %al;popl %edi;popl %esi": 1,
                "imull $, (%eax), %eax;jb  <LsaDeregisterLogonProcess+>;jns  <LsaDeregisterLogonProcess+>;popl %esp;addb %ch, (%ebp)": 2,
                "testb $, (%eax);jne  <LsaDeregisterLogonProcess+>;leal -(%ebp), %ecx;pushl %ecx;pushl %edi": 1,
                "addl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %ecx;movl $, -(%ebp);pushl -(%ebp)": 1,
                "testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;pushl $;movl $, (%eax)": 1,
                "pushl $;movl $, (%eax);addl $, %eax;popl %edx;orb $, -(%eax)": 1,
                "movl %eax, (%ecx);movl %eax, ;addl $, %eax;decl %edx;jne - <LsaDeregisterLogonProcess+>": 1,
                "movl $, (%eax);movl %ecx, (%eax);movl %eax, (%ecx);andl $, %esi;movl %eax, ": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>": 2,
                "testb %al, %al;jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax": 1,
                "cmpl $, %eax;js  <LsaDeregisterLogonProcess+>;andb %cl, (%edx);addb %al, (%eax);addb %al, (%eax)": 1,
                "movl %edi, -(%ebp);pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "subl %edi, %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax": 1,
                "pushl (%eax);calll - <CcPurgeCacheSection>;pushl $;pushl %esi;leal -(%ebp), %eax": 1,
                "cmpb (%ecx), %cl;incl %esi;popal;imull $, (%ebp,%esi,), %ebp;jae  <LsaDeregisterLogonProcess+>": 1,
                "popal;imull $, (%ebp,%esi,), %ebp;jae  <LsaDeregisterLogonProcess+>;popal;je  <LsaDeregisterLogonProcess+>": 1,
                "jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <ZwEnumerateValueKey+>": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);calll - <ZwCreateEvent>;cmpl %edi, %eax": 1,
                "pushl %ecx;pushl %edi;pushl %edi;pushl %esi;pushl %eax": 1,
                "movl %eax, %esi;cmpl %edi, %esi;movl (%ebp), %eax;movl %ecx, (%eax);jge  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %ebx, %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %eax, (%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "movb $, %al;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;movl (%ebp), %edi;orl $-, %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;movl $, %esi;cmpl %esi, (%ebp);movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);ja  <LsaDeregisterLogonProcess+>;movl (%ebp), %esi;pushl %ebx;leal -(%ebp), %eax": 1,
                "movb $, %bl;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl $, ;movl %ecx, ;movl %eax, ;calll - <DbgPrintEx>;addl $, %esp": 1,
                "je  <LsaDeregisterLogonProcess+>;outsb (%esi), %dx;andb %ah, (%di);orb %fs:(%eax), %al;int": 1,
                "cmpl %esi, -(%ebp);movl %ebx, (%ebp);jae  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movl (%ebp), %edx": 1,
                "jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;movl (%ebp), %edi;leal (,%ecx,), %ecx;leal (,%edi,), %edi": 1,
                "movl (%ebp), %edi;leal (,%ecx,), %ecx;leal (,%edi,), %edi;movl %ecx, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl (%eax), %eax;movl $, %esi;cmpl %esi, (%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl %eax;pushl %edi;pushl $;calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %ebx;pushl %ebx;pushl (%edi)": 1,
                "pushl -(%ebp);pushl %ebx;pushl %ebx;pushl (%edi);pushl -(%ebp)": 1,
                "movl (%esi), %ecx;calll - <ObfDereferenceObject>;pushl (%esi);calll - <ZwClose>;addl $, %esi": 1,
                "movl $, %ecx;calll - <ExReleaseFastMutexUnsafe>;movb (%ebp), %al;popl %edi;popl %esi": 1,
                "pushl %ecx;pushl $;movl %ecx, ;movl %edx, ;movl %eax, ": 1,
                "andl $, (%esi);movl %esi, %eax;subl , %eax;pushl $;popl %ecx": 1,
                "int;int;int;movl , %eax;leal (%eax,%eax,), %eax": 1,
                "int;int;movl , %eax;leal (%eax,%eax,), %eax;pushl $": 1,
                "shrl $, %eax;andl $, %eax;leal (%eax,%eax,), %eax;shll $, %eax;andl $, (%eax,%edx)": 1,
                "movl , %edx;movl $, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, ": 1,
                "movl %esp, %ebp;calll - <LsaDeregisterLogonProcess+>;movl , %edx;leal (%eax,%eax,), %ecx;leal (%edx,%ecx,), %ecx": 1,
                "movl %eax, (%edx);movl %edx, (%eax);movl , %eax;movl %eax, (%ecx);movl $, (%ecx)": 1,
                "movl (%eax), %edi;movl (%edi), %eax;addl %eax, (%ebp);testb $, (%edi);je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebx), %edi;shrl $, %edi;decl %edi;shrl $, %edi;pushl %edi": 1,
                "calll  <LsaDeregisterLogonProcess+>;testl %edi, %edi;jbe  <LsaDeregisterLogonProcess+>;pushl $;pushl (%ebx)": 1,
                "addl $, %ebx;cmpl $, -(%ebp);jbe - <LsaDeregisterLogonProcess+>;pushl $;pushl (%esi)": 1,
                "cmpl %eax, %ebx;movl %eax, -(%ebp);je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;negl %eax": 1,
                "pushl $;movl %ecx, (%eax);addl (%esi), %ebx;pushl %esi;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%ebp);pushl %edi;calll  <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "jbe  <LsaDeregisterLogonProcess+>;leal -(%esi), %ecx;shrl $, %ecx;jmp  <LsaDeregisterLogonProcess+>;orl $-, %ecx": 1,
                "incl %ecx;pushl %ecx;pushl %edx;pushl %edi;calll  <LsaDeregisterLogonProcess+>": 1,
                "xorl %edi, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);orl $-, -(%ebp);movl %edi, -(%ebp)": 1,
                "pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "pushl %esi;calll *(%esi);movl %eax, %ebx;movl %ebx, -(%ebp);cmpl %edi, %ebx": 1,
                "cmpl $-, %eax;je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "pushl %edi;pushl $;pushl %edi;pushl (%ebp);pushl %edi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl %edi, (%ebx);movl (%ebp), %eax": 1,
                "testb %al, %al;jns  <LsaDeregisterLogonProcess+>;shll $, %eax;xorl (%ebx), %eax;andl $, %eax": 1,
                "movl -(%ebp), %esi;jmp  <LsaDeregisterLogonProcess+>;andb $, (%ebx);andb $, (%ebx);movl (%ebx), %eax": 1,
                "pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;movw %ax, (%ebx);movl (%ebp), %ecx;cmpw (%ecx), %ax": 1,
                "calll - <LsaDeregisterLogonProcess+>;movw %ax, (%ebx);movl (%ebp), %ecx;cmpw (%ecx), %ax;jae  <LsaDeregisterLogonProcess+>": 1,
                "movl %ebx, -(%ebp);cmpl %edi, %ebx;jne  <LsaDeregisterLogonProcess+>;movl $, %esi;movl (%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl (%esi), %eax;addl $, %eax;movl %eax, -(%ebp);movl (%eax), %edx": 1,
                "pushl (%eax);pushl %edi;pushl %edi;pushl -(%ebp);pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <SeDeassignSecurity>;cmpl %edi, -(%ebp);jge  <LsaDeregisterLogonProcess+>": 1,
                "jmp - <LsaDeregisterLogonProcess+>;movl -(%ebp), %ebx;xorl %edi, %edi;cmpl %edi, -(%ebp);jge  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;andb %ah, (%ecx);imull $, (%ebp), %esp;je  <LsaDeregisterLogonProcess+>;andb %ah, %fs:(%bx,%di)": 1,
                "imull $, (%ebp), %esp;je  <LsaDeregisterLogonProcess+>;andb %ah, %fs:(%bx,%di);andb %al, (%edx);incl %ebp": 1,
                "addl $, %edi;movl (%ebp), %eax;shrl $, %eax;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "andl $, (%esi);andl $, (%esi);movl %fs:, %eax;movb (%eax), %al;movb %al, -(%ebp)": 1,
                "pushl %ebx;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl $, %eax": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %edi;pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "pushl %ebx;calll *%eax;movl (%ebp), %eax;movl (%eax), %edi;movl (%edi), %eax": 1,
                "andl $, %ecx;movzwl %ax, %edx;cmpl %edx, %ecx;jae  <LsaDeregisterLogonProcess+>;movw %ax, (%esi)": 1,
                "cmpl %edx, %ecx;jae  <LsaDeregisterLogonProcess+>;movw %ax, (%esi);movl (%edi), %eax;movl (%eax), %eax": 1,
                "jae  <LsaDeregisterLogonProcess+>;movl %eax, (%esi);testb $, (%ecx);je  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "movw %si, (%eax);movl (%edi), %eax;movl (%eax), %eax;testb $-, (%eax);je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%eax), %eax;testb $-, (%eax);je  <LsaDeregisterLogonProcess+>;pushl $;calll - <DbgPrint>": 1,
                "divl %ebx;testl %edx, %edx;jne  <LsaDeregisterLogonProcess+>;testl %edi, %edi;jne  <LsaDeregisterLogonProcess+>": 2,
                "testb $, ;je  <LsaDeregisterLogonProcess+>;subl %esi, %ecx;addl %ebx, %ecx;movl %ecx, (%esi)": 2,
                "negl %edi;cmpl %ecx, %edi;ja  <LsaDeregisterLogonProcess+>;leal (%edi,%esi), %edx;cmpl %eax, %edx": 1,
                "ja  <LsaDeregisterLogonProcess+>;pushl %esi;movl (%ebp), %eax;leal (%eax,%edi,), %esi;movl (%esi), %eax": 1,
                "calll *(%eax);andl $, (%esi);incl %edi;cmpl %ebx, %edi;jbe - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll *(%ebx);testl %eax, %eax;movl %eax, (%ebp);jne  <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %ecx;movl %esi, (%ebx);xorl %esi, %esi;cmpl %esi, %ecx;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;movl $, %ecx;movl %esi, %edi;pushl %ebx;rep  stosl %eax, %es:(%edi)": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;andl $, (%ebx);movl %esi, (%ebx);movl (%ebp), %edi": 1,
                "movl %edx, (%eax);movl (%ecx), %edx;movl %edx, (%eax);jmp  <LsaDeregisterLogonProcess+>;andl $, (%eax)": 1,
                "cmpl %eax, %esi;jb - <LsaDeregisterLogonProcess+>;cmpb $, (%ebx);jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl $;leal (%edi), %eax;andl $-, %eax;pushl $": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl %edi, %ecx;movl -(%ebp), %edi": 1,
                "pushl %edi;pushl %ebx;pushl %esi;calll - <LsaDeregisterLogonProcess+>;pushl $": 1,
                "andl $-, %edi;pushl %edi;pushl -(%ebp);calll *(%esi);andl $, (%esi)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl %ebx, (%esi);movl %edi, (%esi);xorl %eax, %eax;popl %edi": 1,
                "orl $, %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;orl $, (%eax);movl (%esi), %eax;addl %ebx, (%ebp);addl %ebx, %edi": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "je  <LsaDeregisterLogonProcess+>;decl %eax;shrl $, %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl (%esi), %edi;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>;pushl %eax": 1,
                "pushl %eax;pushl %ecx;pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %edi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "movl (%esi), %ecx;cmpl %eax, %ecx;ja  <LsaDeregisterLogonProcess+>;cmpl $, %ecx;jb  <LsaDeregisterLogonProcess+>": 1,
                "cmpb $, ;movl %eax, (%ebp);jne  <LsaDeregisterLogonProcess+>;testb $, ;je  <LsaDeregisterLogonProcess+>": 1,
                "movl $, %ecx;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi;addl $, %eax": 1,
                "movl $, ;movl %edx, ;movl %eax, ;movl %ebx, ;jne  <LsaDeregisterLogonProcess+>": 1,
                "andl $, (%ebx);movl $, %ecx;movl %ecx, (%ebx);movl %ecx, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl $, %ecx;movl %ecx, (%ebx);movl %ecx, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%ebx)": 1,
                "cmpl $, %ecx;jb  <LsaDeregisterLogonProcess+>;testw $, %cx;je  <LsaDeregisterLogonProcess+>;movl $, %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, %ecx;movl %ecx, (%ebx);movl %ecx, -(%ebp);movl (%esi), %ecx": 1,
                "movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl $;movl $, %edi;pushl %edi;calll *(%ebx)": 1,
                "pushl $;popl %eax;jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;movl $, %ecx": 1,
                "pushl %esi;leal (%ebp), %eax;pushl %eax;xorl %edi, %edi;pushl %edi": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl (%esi), %ecx;pushl $;movl %ecx, (%eax)": 1,
                "calll *(%ebx);xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %eax;pushl (%ebx);calll - <ZwQueryVolumeInformationFile>;testl %eax, %eax;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %ecx;popl %eax;movl %esi, (%ecx);popl %edi;popl %esi": 1,
                "testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;cmpl %ebx, (%ebp);jbe  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %edi;calll - <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, (%esi);movl %eax, -(%ebp);movl %ebx, (%esi);movl $, (%esi);movl %eax, %ecx": 1,
                "movl %ebx, (%esi);movl $, (%esi);movl %eax, %ecx;jmp  <LsaDeregisterLogonProcess+>;leal (%ecx,%ebx), %edx": 1,
                "movl %eax, %ecx;jmp  <LsaDeregisterLogonProcess+>;leal (%ecx,%ebx), %edx;cmpl (%ebp), %edx;movl $, (%esi)": 1,
                "decl %eax;pushl %eax;pushl %ebx;calll  <LsaDeregisterLogonProcess+>;testb %al, %al": 1,
                "pushl %esi;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $": 2,
                "calll *(%edi);testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl $;jmp  <LsaDeregisterLogonProcess+>": 1,
                "cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;pushl $;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %edi, (%eax);calll *(%esi);cmpl %edi, (%edi);jne - <LsaDeregisterLogonProcess+>;andl $, (%esi)": 1,
                "popl %ebx;pushl %edi;calll - <RtlClearAllBits>;addl $, %edi;decl %ebx": 1,
                "movl (%eax), %eax;testl %eax, %eax;movl %eax, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "pushl ;leal (%ebp), %eax;pushl %eax;pushl $;pushl %esi": 1,
                "calll *(%esi);testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl , %eax;cmpl $, (%eax)": 1,
                "movl -(%ebp), %eax;movl (%eax), %edi;jmp  <LsaDeregisterLogonProcess+>;pushl $;pushl $": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;addl %ebx, (%ebp)": 1,
                "movl (%eax), %eax;movl %eax, (%ecx);movl (%ebx), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %edi;pushl $;calll *(%ebx);movl %eax, %esi;movl %esi, -(%ebp)": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl %esi, (%ebx);andl $, (%ebx);movb $, (%ebx)": 1,
                "andl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);jae  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jae  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl (%ebp)": 1,
                "pushl $;pushl -(%ebp);pushl %eax;pushl -(%ebp);pushl %ebx": 1,
                "jge  <LsaDeregisterLogonProcess+>;orl $-, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;orl $-, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;orl $-, -(%ebp);movl -(%ebp), %eax;addl %eax, -(%ebp);jmp - <LsaDeregisterLogonProcess+>": 1,
                "addl $, (%ebp);cmpl %ebx, (%ebp);jb - <LsaDeregisterLogonProcess+>;decl %ebx;shrl $, %ebx": 1,
                "shrl $, %ebx;leal -(%esi), %eax;pushl %ebx;shrl $, %eax;incl %eax": 1,
                "pushl %ebx;arpl %si, %gs:(%edi,%ebp,);decl %ecx;insl %dx, %es:(%edi);popal": 1,
                "popal;andb %bh, %gs:(%di);andb %ah, ;imull $, (%esi), %ebp;subb $, %al": 1,
                "jne  <LsaDeregisterLogonProcess+>;arpl %sp, (%ebp);cmpl $, %eax;addb %cl, %ah;int": 1,
                "calll - <ExAcquireFastMutexUnsafe>;movl -(%ebp), %eax;cmpl %eax, ;jae  <LsaDeregisterLogonProcess+>;addl $, %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;xorl %esi, %esi;incl %esi;movl $, %ecx;movl %esi, ": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl $, %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);calll - <RtlInitializeBitMap>;leal -(%ebp), %eax": 1,
                "calll - <RtlInitializeBitMap>;leal -(%ebp), %eax;pushl %eax;calll - <RtlNumberOfSetBits>;cmpl %esi, %eax": 1,
                "pushl $;andl $-, %esi;pushl %ebx;movl %eax, (%ebx);movl %esi, (%ebx)": 1,
                "cmpl %esi, %edi;movl %edi, -(%ebp);jb - <LsaDeregisterLogonProcess+>;movl %edi, -(%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "calll *(%ebx);testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);jae  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %ebx;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "pushl $;pushl $;pushl %edx;calll *(%eax);testl %eax, %eax": 1,
                "calll *(%eax);testl %eax, %eax;movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl $, ": 1,
                "movl %eax, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl $, ;jmp  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp)": 1,
                "subl -(%ebp), %edi;movl (%ebx), %ecx;addl -(%ebp), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;movl -(%ebp), %edi;movl (%ebx), %ecx": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;movl -(%ebp), %edi;movl (%ebx), %ecx;movl (%ebx), %eax": 1,
                "movl -(%ebp), %edi;movl (%ebx), %ecx;movl (%ebx), %eax;addl %ecx, %eax;movl (%ebp), %ecx": 1,
                "movl (%ebx), %eax;addl %ecx, %eax;movl (%ebp), %ecx;movl (%ecx), %ecx;cmpl (%ecx), %eax": 1,
                "jae  <LsaDeregisterLogonProcess+>;pushl %eax;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi": 1,
                "movl (%esi), %ecx;leal (%esi), %eax;jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp)": 1,
                "cmpl %eax, %edi;jae  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edx;movl %edi, %ecx;cmpl -(%ebp), %edx": 1,
                "jae  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edx;movl %edi, %ecx;cmpl -(%ebp), %edx;jae  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;pushl -(%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpb $, ;movl -(%ebp), %eax": 1,
                "cmpb $, ;movl -(%ebp), %eax;movl $, ;movl %eax, ;jne  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;orl $, (%eax);movl (%ebx), %eax;movl (%eax), %ecx": 1,
                "movl -(%ebp), %eax;subl %eax, %ecx;shrl $, %ecx;pushl %ecx;shrl $, %eax": 1,
                "pushl %esi;pushl %ebx;jmp  <LsaDeregisterLogonProcess+>;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl $, ;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebx), %eax;addl (%ebx), %eax;pushl $;pushl %eax;pushl (%ebp)": 1,
                "orl $, (%eax);pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl (%esi), %eax": 1,
                "shrl $, %eax;pushl %eax;shrl $, %ebx;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <RtlClearBits>;movl %esi, %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlClearBits>;movl %esi, %ebx;movl -(%ebp), %esi": 1,
                "cmpl %edi, %eax;jne  <LsaDeregisterLogonProcess+>;movl $, %edi;jmp  <LsaDeregisterLogonProcess+>;cmpl $, %eax": 2,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>": 2,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %edi;jmp  <LsaDeregisterLogonProcess+>;cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>": 4,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <LsaDeregisterLogonProcess+>;cmpl $, %eax": 2,
                "cmpl $, %eax;jne  <LsaDeregisterLogonProcess+>;movl $, (%esi);jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi": 1,
                "movl %esi, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);pushl %edi;pushl (%esi)": 1,
                "leal (%ebx), %eax;pushl %eax;pushl (%ebx);pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "movl (%esi), %eax;movl %eax, (%esi);jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %esi;pushl %ebx;calll - <LsaDeregisterLogonProcess+>;pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, (%ebp);jne  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);je  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp)": 1,
                "movl %edx, (%ebp);cmpl (%ebp), %edi;ja  <LsaDeregisterLogonProcess+>;pushl %esi;pushl (%ebx)": 1,
                "shrl $, %ecx;movl %ebx, %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;pushl %eax": 1,
                "movl (%ebp), %eax;andl $, %ecx;pushl %ebx;rep  movsb (%esi), %es:(%edi);calll *(%eax)": 1,
                "movl %ebx, %ecx;leal (%esi,%edi), %eax;shll %cl, %edx;popl %edi;popl %esi": 1,
                "shll %cl, %edx;popl %edi;popl %esi;popl %ebx;orl %edx, (%eax)": 1,
                "pushl $;pushl $;calll - <wctomb+>;movb $, -(%ebp);pushl (%ebp)": 1,
                "movl %eax, -(%ebp);movl (%eax), %edx;addl $, %edx;andl $, -(%ebp);leal (%eax), %esi": 1,
                "movl (%ebp), %ecx;andl $, %ecx;cmpl %ecx, %edx;je  <LsaDeregisterLogonProcess+>;movb $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);addl -(%ebp), %esi;movl %esi, -(%ebp);addl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;notl %edx;andl %edx, (%eax);calll - <wctomb+>;retl $": 1,
                "jne  <LsaDeregisterLogonProcess+>;orl $-, %eax;jmp  <LsaDeregisterLogonProcess+>;andl $, -(%ebp);leal (%edx), %ecx": 1,
                "jl  <LsaDeregisterLogonProcess+>;movl %eax, %edi;movl %edi, -(%ebp);movl %ecx, %eax;subl %edx, %eax": 1,
                "movl %esi, -(%ebp);cmpl %edi, (%ebp);ja  <LsaDeregisterLogonProcess+>;movl %edi, %eax;shrl $, %eax": 1,
                "movl %edi, %eax;shrl $, %eax;decl %eax;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "orl $-, %esi;jmp  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl %esi;pushl (%ebp)": 1,
                "testb $, %al;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;movl (%eax), %ecx;cmpl %edi, %ecx": 1,
                "addl $, %ecx;cmpl %ecx, %edi;movl %edx, -(%ebp);jbe  <LsaDeregisterLogonProcess+>;movl %ecx, %edi": 1,
                "sbbl %ebx, %ebx;movl %ecx, (%ebp);leal -(%eax), %ecx;andl %ecx, %ebx;subl %eax, %edi": 1,
                "pushl (%ebp);pushl (%ebp);pushl %edi;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "addl $, %ecx;xorl %ecx, %eax;andl $, %eax;negl %eax;sbbb %al, %al": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;cmpl $-, %eax;jne  <LsaDeregisterLogonProcess+>;movl %ebx, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;testb $, (%ebx);pushl %esi": 1,
                "testb $, (%ebx);pushl %esi;pushl %edi;je  <LsaDeregisterLogonProcess+>;movzwl (%ebx), %eax": 1,
                "movw (%ebx), %ax;movl (%ebp), %ecx;xorl %edx, %edx;subl %edx, %ecx;je  <LsaDeregisterLogonProcess+>": 1,
                "movl $, (%ebp);jmp  <LsaDeregisterLogonProcess+>;movzwl (%ebx), %ecx;movl (%ebp), %esi;pushl $": 1,
                "addl %eax, %ecx;movl %ecx, (%esi);movl (%ebp), %esi;cmpl %eax, %esi;movl %edx, (%ebp)": 1,
                "movl (%ebp), %edi;movl %ecx, (%edi);movl (%ebx), %ecx;movl %ecx, (%edi);movl %edx, (%edi)": 2,
                "movzwl (%ebx), %ecx;movl %ecx, (%edi);cmpw %dx, (%ebx);jbe  <LsaDeregisterLogonProcess+>;movl %eax, (%edi)": 1,
                "movl %eax, (%edi);pushl (%ebx);movl (%ebp), %eax;pushl %eax;calll *(%eax)": 1,
                "movl (%ebx), %eax;movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl %ecx, %eax;addl $, %edi;shrl $, %ecx;leal (%ebx), %esi": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;cmpw $, (%ebx);jbe  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "movl %eax, (%esi);movl (%ebp), %esi;cmpl $, %esi;movl %edx, (%ebp);jb - <LsaDeregisterLogonProcess+>": 1,
                "cmpb %bl, (%eax);je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movzwl (%eax), %ecx;pushl %ecx": 1,
                "movw (%eax), %ax;cmpl $, (%ebp);movl %ebx, (%ebp);je  <LsaDeregisterLogonProcess+>;movl $, (%ebp)": 1,
                "movl %ebx, (%ebp);je  <LsaDeregisterLogonProcess+>;movl $, (%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %edx": 1,
                "movl (%esi), %eax;movl %eax, (%edi);movzwl (%esi), %eax;movl %eax, (%edi);movzwl (%esi), %eax": 1,
                "movzwl (%esi), %eax;movl %eax, (%edi);movzwl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, (%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx;addl (%eax), %ecx": 1,
                "movzwl (%ebx), %eax;addl (%ebp), %eax;movl %eax, (%edi);movb $, %al;popl %edi": 1,
                "cmpl $, (%esi);ja  <LsaDeregisterLogonProcess+>;pushl (%esi);movl (%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;movl %eax, (%edi);je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;movl (%ebp), %ecx": 1,
                "jmp  <LsaDeregisterLogonProcess+>;pushl %eax;pushl %ecx;pushl %edi;leal (%ebp), %eax": 1,
                "cmpl $, %eax;jb  <LsaDeregisterLogonProcess+>;addl $, %eax;movb $, %dl;jmp  <LsaDeregisterLogonProcess+>": 2,
                "movl (%ebx), %esi;movl (%ebp), %edi;addl $-, %ecx;cmpl %eax, %ecx;movl %esi, (%edi)": 1,
                "movl %ebx, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 3,
                "movl %edi, (%ebp);jb  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi;andl $, (%edi);movl (%ebx), %esi": 1,
                "jb  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi;andl $, (%edi);movl (%ebx), %esi;addl $-, %ecx": 1,
                "movl %esi, %ecx;movl -(%ebp), %esi;addl $, %edi;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %esi": 1,
                "subl %ecx, %edi;addl %edi, %edx;movl (%ebp), %ecx;andl $, (%ebp);movl %edx, (%ecx)": 1,
                "movl $, (%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi;andl $, (%edi);movl (%ebx), %ecx": 1,
                "movl %eax, %ecx;shrl $, %ecx;leal (%ebx), %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movl %eax, %ecx;movl $, (%ebp);movl -(%ebp), %esi;testl %esi, %esi;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl -(%ebp);pushl %ecx;calll *%eax;jmp  <LsaDeregisterLogonProcess+>;orl $-, (%edi)": 1,
                "addl $-, %edx;cmpl %ecx, %edx;movl %esi, (%eax);movl %ecx, (%eax);jge  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %ecx, %edx;movl %esi, (%eax);movl %ecx, (%eax);jge  <LsaDeregisterLogonProcess+>;movl %edx, %ecx": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;pushl %ebx;pushl %eax;calll *(%eax)": 1,
                "movl %edx, (%eax);cmpl %ecx, (%esi);jbe  <LsaDeregisterLogonProcess+>;leal (%eax), %edx;movl (%edi,%ecx,), %ebx": 1,
                "leal (%eax), %edx;movl (%edi,%ecx,), %ebx;movl %ebx, (%edx);incl %ecx;addl $, %edx": 1,
                "movl %eax, %esi;movl (%ebp), %eax;movl %ebx, (%eax);jmp  <LsaDeregisterLogonProcess+>;pushl (%ebx)": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;movl (%ebp), %ecx": 1,
                "pushl %eax;pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;andw $, (%eax);movw %di, (%eax);movl %edi, %ecx;movl %ecx, %edx": 1,
                "movl (%ebp), %eax;leal (%ecx,%eax,), %edi;pushl (%edi);movl (%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll *(%eax);movl %eax, %esi;testl %esi, %esi;movl (%ebp), %eax": 1,
                "pushl %ecx;pushl %eax;pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp)": 1,
                "calll *%eax;movb $, %al;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi": 1,
                "movb $, %al;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;movl (%esi), %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ecx;movl (%ebp), %eax;pushl %esi;movl (%ebp), %esi;pushl %eax": 1,
                "movl (%eax), %ecx;addl (%eax), %ecx;movl (%eax), %edi;je  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl -(%ebp);pushl %esi;calll *%eax;cmpl $-, %ebx": 1,
                "testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%eax), %edi;addl (%eax), %edi;movl (%esi), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %eax;imull $, %eax, %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;addl (%esi), %eax;pushl %eax;pushl %ebx": 1,
                "jb - <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl (%ebp), %eax;jae  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "retl $;movl (%esi), %eax;pushl $;subl %edi, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;movl (%ebp), %edi;addl $, %edi;cmpl $, %edi;jae  <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne - <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);movl -(%ebp), %eax": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, (%ebp);jne  <LsaDeregisterLogonProcess+>;leal (%ebx), %eax": 1,
                "addl $, -(%ebp);andl $-, %eax;movl %eax, (%edi);movl -(%ebp), %eax;cmpl (%ebp), %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl (%eax);pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %eax;pushl $;pushl (%eax);jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esi);movl %ecx, (%esi);movl %esi, (%eax)": 1,
                "movl %eax, (%esi);movl %ecx, (%esi);movl %esi, (%eax);movl %esi, (%ecx);jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %edx": 1,
                "movl %edi, (%eax);jmp  <LsaDeregisterLogonProcess+>;andl $, (%eax);addl $, %esi;cmpl %edi, %esi": 1,
                "pushl %eax;movl %ecx, (%esi);calll *(%ebx);movl %esi, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;cmpl $, %edi": 1,
                "movl $, %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "andl $, (%eax);movl -(%ebp), %eax;movl %edx, (%eax);pushl -(%ebp);movl -(%ebp), %ecx": 1,
                "movl %edx, (%eax);pushl -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "pushl %ecx;pushl %eax;pushl %ebx;movl %eax, -(%ebp);calll - <LsaDeregisterLogonProcess+>": 1,
                "pushl $;pushl %eax;movl %eax, -(%ebp);calll *(%ebx);testl %eax, %eax": 1,
                "shrl $, %eax;pushl %eax;pushl -(%ebp);leal (%ebx), %eax;pushl %eax": 1,
                "pushl %eax;calll - <RtlInitializeBitMap>;pushl (%ebp);movl -(%ebp), %eax;pushl %ebx": 1,
                "addl $, %eax;pushl %eax;addl $, %esi;pushl %esi;pushl $": 1,
                "pushl %esi;pushl $;pushl %ebx;calll *(%ebx);testb %al, %al": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;je  <LsaDeregisterLogonProcess+>;subl -(%ebp), %eax": 1,
                "testl %esi, %esi;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl %ecx, (%esi);movl %eax, (%esi);cmpl $, (%ebx);jne  <LsaDeregisterLogonProcess+>;orl $-, (%esi)": 1,
                "pushl $;pushl $;pushl $;calll *(%ebx);movl %eax, %edi": 1,
                "movl %eax, %edi;testl %edi, %edi;jne  <LsaDeregisterLogonProcess+>;pushl (%esi);pushl %esi": 1,
                "pushl %esi;calll *(%ebx);movl -(%ebp), %eax;shrl $, %eax;pushl %eax": 1,
                "cmpl -(%ebp), %edx;movl -(%ebp), %ecx;movl -(%ebp), %eax;movl %eax, (%edi);movl %edx, (%edi)": 1,
                "negl %eax;shll $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "shll $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax;addl %ecx, %eax": 1,
                "cmpl -(%ebp), %edx;movl %ecx, (%eax);jne  <LsaDeregisterLogonProcess+>;orl $, %ecx;movl %ecx, (%eax)": 1,
                "orl $, %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;xorl %ebx, %ebx;orl $-, ;movl %eax, ;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;movl %ebx, -(%ebp);movl %ebx, ": 1,
                "addl $, %ecx;cmpl %eax, %ecx;ja  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl $, %eax": 1,
                "testl %eax, %eax;movl (%esi), %ecx;movl %ecx, -(%ebp);jne  <LsaDeregisterLogonProcess+>;cmpl $-, %ecx": 1,
                "calll *(%edi);movl %eax, %esi;testl %esi, %esi;je  <LsaDeregisterLogonProcess+>;cmpw $, (%esi)": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;cmpl $-, %eax;je  <LsaDeregisterLogonProcess+>;pushl %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpw %di, (%esi);jbe  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;pushl (%eax,%edi,)": 1,
                "movl %edi, ;movl %esi, ;jmp  <LsaDeregisterLogonProcess+>;movl $, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %edi, ;movl (%eax,%edi,), %eax;movl %eax, ;movl %esi, ": 1,
                "movl %ebx, ;movl %eax, -(%ebp);cmpb $, ;jne  <LsaDeregisterLogonProcess+>;testb $, ": 1,
                "je  <LsaDeregisterLogonProcess+>;pushl (%ebp);movl (%ebp), %eax;pushl %eax;calll *(%eax)": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;pushl (%esi);pushl %edi;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;decl (%esi);decl (%ebp)": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;decl (%esi);decl (%ebp);movl (%ebp), %eax": 1,
                "movl %eax, ;movl %ebx, ;movl %eax, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl $, ": 1,
                "calll - <LsaDeregisterLogonProcess+>;testb %al, %al;jne  <LsaDeregisterLogonProcess+>;movl $, %eax;movl %eax, ": 1,
                "testl %edi, %edi;jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %edi": 2,
                "calll - <LsaDeregisterLogonProcess+>;cmpl $, %eax;jbe  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movw $, (%edi);movl (%esi), %eax;orl $, (%eax);movl (%ebp), %ebx": 1,
                "calll - <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl %ebx, (%edi);movl (%esi), %eax": 1,
                "pushl (%ebp);andw $, (%edi);pushl %esi;calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %eax;pushl %esi;calll - <LsaDeregisterLogonProcess+>": 1,
                "movl %ebx, ;jne  <LsaDeregisterLogonProcess+>;testb $, ;jne  <LsaDeregisterLogonProcess+>;movl %ebx, %eax": 1,
                "andw $, (%edi);movl (%esi), %eax;orl $, (%eax);cmpl $-, -(%ebp);movl $, %eax": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;cmpl $-, (%ebp);je  <LsaDeregisterLogonProcess+>;cmpb $, ": 1,
                "movl %eax, (%ebp);movl %eax, ;jne  <LsaDeregisterLogonProcess+>;testb $, ;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, ;jne  <LsaDeregisterLogonProcess+>;testb $, ;jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;testb $, ;jne  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "testb %al, %al;je - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, (%edi)": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl %ebx, %ecx;shll $, %ecx;cmpl %eax, %ecx;jbe  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;movl %ebx, ;movw (%ebx), %ax": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpw $, %ax;je  <LsaDeregisterLogonProcess+>;cmpw $, %ax;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl (%eax);pushl %esi;calll *(%esi);testl %eax, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "pushl %esi;calll *(%esi);testl %eax, %eax;je  <LsaDeregisterLogonProcess+>;movw (%eax), %cx": 1,
                "testb $, %bl;je  <LsaDeregisterLogonProcess+>;cmpl $, (%edi);jne  <LsaDeregisterLogonProcess+>;testb $, %bl": 1,
                "jne  <LsaDeregisterLogonProcess+>;testb $, %bl;je  <LsaDeregisterLogonProcess+>;cmpl $-, (%edi);jne  <LsaDeregisterLogonProcess+>": 1,
                "je - <LsaDeregisterLogonProcess+>;andl $, (%edi);orl $-, (%edi);jmp - <LsaDeregisterLogonProcess+>;movzwl (%ebx), %eax": 1,
                "xorl %ebx, %ebx;movl %eax, (%edi);movl %ebx, (%edi);movb %bl, (%edi);movl %edi, %esi": 1,
                "jmp - <LsaDeregisterLogonProcess+>;decl %ebx;subl $, %esi;jmp - <LsaDeregisterLogonProcess+>;cmpb $, ": 1,
                "calll - <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;orl $, (%eax)": 1,
                "movl (%ebp), %esi;cmpl , %esi;movb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;xorl %eax, %eax": 1,
                "andl $, ;testb $, (%ebp);movl %esi, ;je  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax": 1,
                "testl %edx, %edx;jge  <LsaDeregisterLogonProcess+>;movl %edx, %edi;negl %edi;cmpl %esi, %edi": 1,
                "xorl %edi, %edi;movl -(%ebp), %eax;movl -(%ebp), %edx;leal (%eax,%edx), %eax;cmpl %esi, %eax": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl $;jmp  <LsaDeregisterLogonProcess+>;pushl $": 1,
                "cmpl %edi, %eax;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;addl %ecx, (%eax);xorl %eax, %eax": 1,
                "movl %ecx, ;orl $-, ;orl $-, ;movl %ecx, ;xorl %esi, %esi": 1,
                "movl %eax, -(%ebp);cmpl -(%ebp), %esi;jae  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %ebx": 1,
                "cmpl -(%ebp), %esi;jae  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "jae  <LsaDeregisterLogonProcess+>;pushl %esi;pushl %ebx;calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi": 1,
                "movl $, %eax;jmp - <LsaDeregisterLogonProcess+>;movl (%edi), %edi;movl %edi, -(%ebp);addl (%edi), %esi": 1,
                "sete (%ebp);calll - <LsaDeregisterLogonProcess+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax": 1,
                "movl %edi, -(%ebp);pushl %edi;pushl %esi;calll - <LsaDeregisterLogonProcess+>;testb %al, %al": 1,
                "je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx;cmpl %ecx, (%eax);jne  <LsaDeregisterLogonProcess+>;leal (%eax), %ecx": 1,
                "cmpl -(%ebp), %edi;jne - <LsaDeregisterLogonProcess+>;cmpb $, (%ebp);jne  <LsaDeregisterLogonProcess+>;pushl %esi": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl (%ebp), %esi;movl $, %ecx;calll *": 1,
                "pushl %ebx;pushl %edi;movl , %edi;movl $, %ebx;movl %ebx, %ecx": 1,
                "testl %esi, %esi;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;testb $, (%eax);jne  <LsaDeregisterLogonProcess+>": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;movl (%ebp), %esi;addl $, %esi": 1,
                "movl (%esi), %esi;testl %esi, %esi;je  <LsaDeregisterLogonProcess+>;movl %esi, %ecx;calll - <ObfReferenceObject>": 1,
                "movl %esi, %ecx;calll - <ObfReferenceObject>;movl %edi, %ecx;calll *;testl %esi, %esi": 1,
                "testl %esi, %esi;popl %edi;je  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl (%ebp)": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %edi;cmpb %bl, %al;je  <LsaDeregisterLogonProcess+>;movl , %eax": 1,
                "pushl -(%ebp);calll - <ObCreateObject>;cmpl %ebx, %eax;jl  <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax": 1,
                "movl %ebx, (%eax);leal (%eax), %ecx;movl %ecx, (%ecx);movl %ecx, (%ecx);movzbl (%ebp), %ecx": 1,
                "pushl %eax;calll - <ObCloseHandle>;movl (%esi), %ecx;calll - <ObfDereferenceObject>;movl (%esi), %ecx": 1,
                "movl %esi, (%ebx);calll - <ObfReferenceObject>;movl (%ebp), %ecx;calll - <ObfReferenceObject>;movl %fs:, %eax": 1,
                "movl (%ebp), %ecx;testb $-, (%ecx);je  <LsaDeregisterLogonProcess+>;andl $, (%ebp);cmpl $, %eax": 1,
                "movl %ebx, (%eax);jne  <LsaDeregisterLogonProcess+>;pushl %edi;pushl %edi;pushl %edx": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl %edi, (%ebp);jge  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "calll - <ObfReferenceObject>;jmp  <LsaDeregisterLogonProcess+>;pushl %ebx;pushl (%ebp);calll - <PsDereferencePrimaryToken+>": 1,
                "calll - <ObfDereferenceObject>;movl %esi, -(%ebp);movl %esi, %ecx;calll - <ObfReferenceObject>;leal (%esi), %ecx": 1,
                "movl %esi, -(%ebp);movl %esi, %ecx;calll - <ObfReferenceObject>;leal (%esi), %ecx;calll - <ExAcquireRundownProtection>": 1,
                "pushl %ebx;pushl %esi;calll - <PsLookupThreadByThreadId+>;cmpl %ebx, %eax;jl  <LsaDeregisterLogonProcess+>": 1,
                "movl %ebx, -(%ebp);pushl %eax;calll - <RtlImageNtHeader>;movl %eax, -(%ebp);cmpl %ebx, %eax": 3,
                "movl %esi, -(%ebp);pushl %esi;pushl (%ebp);calll - <PsDereferencePrimaryToken+>;movl %eax, %esi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp);movl (%eax), %eax": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll - <MmProbeAndLockProcessPages+>;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "movl (%esi), %esi;movl %esi, -(%ebp);incl -(%ebp);movl -(%ebp), %eax;jmp - <LsaDeregisterLogonProcess+>": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;decl %eax;decl %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %esi, %ebx;je  <LsaDeregisterLogonProcess+>;movl %fs:, %eax;jmp - <LsaDeregisterLogonProcess+>;addl $, %edi": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl (%edx), %ecx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%edx), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl (%edx), %ecx;subl $, %ecx;pushl %esi;pushl %edi": 1,
                "leal (%edx), %esi;leal (%eax), %edi;popl %ecx;rep  movsl (%esi), %es:(%edi);andl $, (%edx)": 1,
                "leal (%eax), %edi;popl %ecx;rep  movsl (%esi), %es:(%edi);andl $, (%edx);jmp  <LsaDeregisterLogonProcess+>": 1,
                "movl , %eax;cmpl %eax, %ebx;jb  <LsaDeregisterLogonProcess+>;movl %esi, (%eax);movl (%ebx), %eax": 1,
                "movl (%ebp), %ecx;movl %ecx, -(%ebp);movl , %eax;cmpl %eax, %ecx;jb  <LsaDeregisterLogonProcess+>": 1,
                "pushl ;pushl $;pushl (%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %edi": 1,
                "calll - <KeWaitForSingleObject>;movl %eax, %ebx;cmpl %esi, %ebx;jl  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;xorl %esi, %esi;cmpl $, %ebx;je  <LsaDeregisterLogonProcess+>;cmpl $, %ebx": 1,
                "andl $, (%edi);xorl %ebx, %ebx;jmp  <LsaDeregisterLogonProcess+>;movl $, %ebx;leal (%edi), %ecx": 1,
                "cmpb $, -(%ebp);jne  <LsaDeregisterLogonProcess+>;cmpl %esi, -(%ebp);jg  <LsaDeregisterLogonProcess+>;jl  <LsaDeregisterLogonProcess+>": 1,
                "sbbl -(%ebp), %esi;addl %edx, -(%ebp);adcl %esi, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "jae  <LsaDeregisterLogonProcess+>;pushl (%ebp);pushl (%ebp);pushl -(%ebp);pushl %esi": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %esi;cmpl %edi, %esi;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %ebx;testb $, %bl": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testb $, (%esi);pushl %edi": 1,
                "pushl %ebx;pushl %edi;calll - <KeSetEvent>;pushl %ebx;calll - <PsDereferencePrimaryToken+>": 1,
                "calll *;cmpl %edi, (%ebx);jne  <LsaDeregisterLogonProcess+>;andl $, (%ebx);movb $, (%ebp)": 1,
                "pushl (%ebp);calll - <PsDereferencePrimaryToken+>;testl %eax, %eax;movl %eax, (%ebp);jne - <LsaDeregisterLogonProcess+>": 1,
                "testl %eax, %eax;movl %eax, (%ebp);jne - <LsaDeregisterLogonProcess+>;cmpl %esi, (%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl (%eax), %edi;pushl %eax;movl %edi, (%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;pushl %eax;movl %edi, (%ebp);movl $, (%eax)": 1,
                "cmpl %esi, %edi;jne - <LsaDeregisterLogonProcess+>;popl %edi;popl %esi;popl %ebx": 1,
                "cmpl (%ebp), %esi;je  <LsaDeregisterLogonProcess+>;cmpl %ecx, (%ebp);jne  <LsaDeregisterLogonProcess+>;movl %ecx, (%eax)": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl %ecx, (%eax);movl %ecx, (%ebp);jmp  <LsaDeregisterLogonProcess+>;xorl %esi, %esi": 1,
                "movl $, (%ebp);movl %ebx, %ecx;calll *;cmpl $, (%ebp);jl  <LsaDeregisterLogonProcess+>": 1,
                "movl %ebx, %ecx;calll *;cmpl $, (%ebp);jl  <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "movl (%ebp), %edi;movl , %esi;jl  <LsaDeregisterLogonProcess+>;movl $, %ecx;movb $, -(%ebp)": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl (%ebp), %ebx;leal (%ebx), %ecx;movl %ecx, -(%ebp);calll *%esi;cmpl $, (%ebp)": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl $;popl %eax;leal (%edi), %ecx;lock": 1,
                "orl %eax, (%ecx);movl %ebx, %ecx;calll - <ObfReferenceObject>;jmp  <LsaDeregisterLogonProcess+>;andl $, (%edi)": 1,
                "movl %ebx, %ecx;calll - <ObfReferenceObject>;jmp  <LsaDeregisterLogonProcess+>;andl $, (%edi);movl $, (%ebp)": 1,
                "cmpl $, (%ebp);movl (%esi), %edx;movl %edx, -(%ebp);jl  <LsaDeregisterLogonProcess+>;cmpl $, (%edx)": 1,
                "movl -(%ebp), %eax;leal -(%ebp), %ecx;movl %eax, (%esi);movl %ecx, (%esi);movl %esi, (%eax)": 2,
                "movl (%esi), %eax;testb $, %al;je  <LsaDeregisterLogonProcess+>;andl $-, %eax;leal (%edx), %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;andl $-, %eax;leal (%edx), %ecx;movl %eax, (%esi);calll - <ExReleaseRundownProtection>": 1,
                "calll - <ExAcquireRundownProtection>;testb %al, %al;je  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax": 1,
                "cmpl %ebx, %eax;jl  <LsaDeregisterLogonProcess+>;movb $, -(%ebp);movl -(%ebp), %edi;leal (%edi), %ecx": 1,
                "cmpl %esi, %eax;jne - <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;andl $-, (%eax);pushl $": 1,
                "pushl %edi;calll - <KeSetEvent>;leal (%edi), %ecx;calll *;movl %edi, %ecx": 1,
                "subl $, %esp;cmpb $, (%ebp);je  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;movb %al, (%ebp)": 1,
                "xorl %ecx, %ecx;incl %ecx;addl $, %eax;lock;orl %ecx, (%eax)": 1,
                "xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl (%ecx), %eax;xorb %dl, %dl;jmp  <LsaDeregisterLogonProcess+>": 1,
                "popl %edi;sete %cl;testb %dl, %dl;popl %esi;pushl %ebx": 1,
                "je  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);jl  <LsaDeregisterLogonProcess+>": 1,
                "int;int;int;jmp - <KeSetPriorityThread+>;int": 1,
                "movl $, -(%ebp);movl $, -(%ebp);calll - <ZwOpenFile>;pushl $;pushl (%ebp)": 1,
                "addb %ch, (%esi);je  <LsaDeregisterLogonProcess+>;addb %ch, %fs:(%eax,%eax);addb %ch, (%esi);addb %ah, (%eax,%eax)": 2,
                "pushl %eax;pushl (%esi);jl  <LsaDeregisterLogonProcess+>;pushl -(%ebp);calll - <PsRemoveLoadImageNotifyRoutine+>": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll - <PsRemoveLoadImageNotifyRoutine+>;cmpl %ebx, (%esi)": 1,
                "cmpxchgl %edi, (%edx);jne - <LsaDeregisterLogonProcess+>;movl %ebx, -(%ebp);testb %al, %cl;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl (%eax), %esi;movl %esi, -(%ebp);cmpl %ebx, %esi;je  <LsaDeregisterLogonProcess+>;leal (%esi), %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <ZwOpenFile>;cmpl %ebx, %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);pushl $;leal -(%ebp), %eax": 2,
                "movl $, -(%ebp);xorl %eax, %eax;incl %eax;movl %eax, -(%ebp);pushl %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl %fs:, %eax;movl (%eax), %ecx;movl %fs:, %eax": 3,
                "movl $, -(%ebp);movl $, -(%ebp);calll - <LsaDeregisterLogonProcess+>;movb %al, %bl;pushl $": 1,
                "popl %ebx;je  <LsaDeregisterLogonProcess+>;calll - <KeSetPriorityThread+>;leave;retl $": 1,
                "pushl %eax;calll - <KeQuerySystemTime>;movl (%ebp), %eax;movl %eax, -(%ebp);pushl $": 1,
                "pushl $;calll - <wctomb+>;movl %fs:, %eax;xorl %ebx, %ebx;cmpb %bl, (%eax)": 1,
                "movl %fs:, %eax;testb $, (%eax);jne  <LsaDeregisterLogonProcess+>;cmpl $, (%ecx);je  <LsaDeregisterLogonProcess+>": 1,
                "movzwl -(%ebp), %eax;movl (%ebp), %edx;cmpl (%edx), %eax;jae  <LsaDeregisterLogonProcess+>;pushl %ebx": 2,
                "xorl %ebx, %ebx;cmpl %ebx, %esi;movl %esi, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl $, (%ebp)": 1,
                "cmpl %ebx, %esi;movl %esi, -(%ebp);jne  <LsaDeregisterLogonProcess+>;movl $, (%ebp);jmp  <LsaDeregisterLogonProcess+>": 1,
                "jmp  <LsaDeregisterLogonProcess+>;testb $, (%ebp);je  <LsaDeregisterLogonProcess+>;pushl $;movb $, (%ebp)": 1,
                "movl %ebx, -(%ebp);movl %edx, -(%ebp);movl %edx, -(%ebp);calll - <IoReportResourceUsage+>;cmpl %ebx, %eax": 1,
                "movw -(%ebp), %ax;cmpw -(%ebp), %ax;jb  <LsaDeregisterLogonProcess+>;decw -(%ebp);movzwl -(%ebp), %eax": 1,
                "movl (%ebp), %edx;movl -(%ebp), %eax;pushl %edi;movl (%ebp), %edi;cmpl %esi, %edi": 1,
                "pushl %ecx;pushl %ebx;xorl %ebx, %ebx;cmpb %bl, (%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "cmpl %ebx, %eax;je  <LsaDeregisterLogonProcess+>;cmpl %ebx, (%eax);je  <LsaDeregisterLogonProcess+>;cmpw %bx, (%eax)": 1,
                "popl %edi;movl %eax, (%edx);popl %esi;jmp  <LsaDeregisterLogonProcess+>;movl %ecx, (%edx)": 1,
                "pushl %eax;calll - <IoRegisterDeviceInterface+>;movl %eax, (%ebp);movl (%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;pushl $;calll - <IoReportResourceUsage+>;pushl (%ebp);calll - <IoReportResourceUsage+>": 1,
                "movl (%ebx), %eax;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>;cmpl $, %eax;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;decl %eax;movl $, %ecx;movl $, %edx;je  <LsaDeregisterLogonProcess+>": 1,
                "decl %eax;je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %ebx": 1,
                "je  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %ebx;testl %ebx, %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;testl %eax, %edx;je  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax": 1,
                "testl %eax, %edx;je  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %eax;testl %eax, %ecx": 1,
                "movl $, -(%ebp);jmp  <LsaDeregisterLogonProcess+>;movl $, -(%ebp);popl %ebx;pushl $": 1,
                "je  <LsaDeregisterLogonProcess+>;movl %edi, %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax;popl %edi": 1,
                "jmp  <LsaDeregisterLogonProcess+>;xorl %eax, %eax;incl %eax;popl %ebp;retl $": 1,
                "addl $, %esi;pushl %edi;calll - <IoReportTargetDeviceChangeAsynchronous+>;testb %al, %al;je  <LsaDeregisterLogonProcess+>": 1,
                "movl $, %esi;jmp  <LsaDeregisterLogonProcess+>;cmpb %bl, (%ebp);je  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movb (%ebp), %al;negb %al": 1,
                "leal -(%ebp), %ecx;sbbl %eax, %eax;andl %ecx, %eax;pushl %eax;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;movl %eax, %esi;testl %esi, %esi": 4,
                "movl %esp, %ebp;pushl %ecx;pushl %ecx;movl (%ebp), %eax;movw (%eax), %cx": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi;testl %edi, %edi;jl  <LsaDeregisterLogonProcess+>": 10,
                "testl %edi, %edi;jl  <LsaDeregisterLogonProcess+>;pushl %esi;movl %fs:, %eax;decl (%eax)": 1,
                "negb %al;pushl $;sbbl %eax, %eax;addl $, %eax;pushl %eax": 1,
                "pushl %edi;movl %eax, -(%ebp);movw %ax, -(%ebp);movw %ax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jl  <LsaDeregisterLogonProcess+>;movw (%esi), %ax;pushl $": 2,
                "movl %eax, %ebx;movl (%ebp), %eax;shrl %eax;movl %eax, (%esi);pushl -(%ebp)": 2,
                "pushl (%ebp);calll - <wctomb+>;pushl -(%ebp);pushl (%ebp);calll - <wctomb+>": 7,
                "pushl (%esi);calll - <IoReportResourceUsage+>;pushl (%ebp);pushl (%ebp);calll - <wctomb+>": 1,
                "movl (%esi), %eax;cmpl %ecx, %eax;pushl %edi;movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, (%ebp);pushl %ecx;pushl %eax;calll - <wctomb+>;movl %eax, %edi": 1,
                "pushl $;pushl %eax;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "jl  <LsaDeregisterLogonProcess+>;leal (%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 2,
                "calll - <LsaDeregisterLogonProcess+>;movl %eax, %edi;testl %edi, %edi;jl  <LsaDeregisterLogonProcess+>;movw (%esi), %ax": 3,
                "movl %eax, %edi;testl %edi, %edi;jl  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "testl %edi, %edi;jl  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;movl -(%ebp), %ecx;addl $-, %eax": 1,
                "movb (%esi), %al;pushl %eax;leal (%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl %eax, %edi;je  <LsaDeregisterLogonProcess+>;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;testl %edi, %edi": 1,
                "movl (%ebp), %esi;pushl %esi;calll - <wctomb+>;pushl -(%ebp);pushl %esi": 1,
                "pushl %edi;movl %ebx, -(%ebp);movw %bx, -(%ebp);movw %bx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "addl %eax, %eax;movl %eax, (%ebp);jmp  <LsaDeregisterLogonProcess+>;movl %ebx, (%ebp);pushl %ecx": 1,
                "pushl (%esi);leal (%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, -(%ebp);movl %eax, %edi;je  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, %edi;je  <LsaDeregisterLogonProcess+>;movl (%esi), %eax;pushl %ebx;pushl (%ebp)": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;pushl -(%ebp);movl %eax, %edi;pushl (%ebp)": 3,
                "je  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;movl (%eax), %edi;jmp  <LsaDeregisterLogonProcess+>;movl (%ebp), %edi": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl %eax, %esi;cmpl %ebx, %esi;jne  <LsaDeregisterLogonProcess+>": 1,
                "calll - <KeWaitForSingleObject>;movl %eax, %esi;cmpl %ebx, %esi;jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl -(%ebp), %esi;jmp  <LsaDeregisterLogonProcess+>;leal (%esi), %eax;pushl %eax": 1,
                "movl %eax, (%esi);xorl %esi, %esi;jmp  <LsaDeregisterLogonProcess+>;movl $, %esi;movl (%ebp), %ecx": 1,
                "cmpl %ebx, %ecx;popl %edi;je  <LsaDeregisterLogonProcess+>;calll - <ObfDereferenceObject>;movl %esi, %eax": 1,
                "pushl $;movl $, (%ebp);calll - <IoReportResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %esi;orl $-, -(%ebp);movl (%ebp), %ebx;movl -(%ebp), %eax;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %ebx;pushl %edi;pushl $;pushl (%ebp);xorl %ebx, %ebx": 1,
                "leal -(%ebp), %eax;pushl (%esi);movl %ebx, -(%ebp);pushl %eax;movl %ebx, (%ebp)": 1,
                "movl %ebx, -(%ebp);pushl %eax;movl %ebx, (%ebp);movl %ebx, -(%ebp);movw %bx, -(%ebp)": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movzwl (%ebx), %eax;movl (%edx), %ecx;xorl %esi, %esi": 2,
                "movl (%ebp), %edx;movl -(%ebp), %ebx;jmp  <LsaDeregisterLogonProcess+>;movl (%ebx), %esi;movl (%edx), %edi": 1,
                "testb $, %ah;movl $, %edx;je  <LsaDeregisterLogonProcess+>;orl %edx, -(%ebp);testl $, %eax": 1,
                "pushl $;popl %eax;jmp  <LsaDeregisterLogonProcess+>;movzbl %al, %eax;shrl $, %eax": 1,
                "popl %eax;jmp  <LsaDeregisterLogonProcess+>;movzbl %al, %eax;shrl $, %eax;andl $, %eax": 1,
                "popl %ecx;cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpl %eax, -(%ebp);jle  <LsaDeregisterLogonProcess+>": 1,
                "cmpl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpl %eax, -(%ebp);jle  <LsaDeregisterLogonProcess+>;decl %ecx": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;testl %edi, %edi;je  <LsaDeregisterLogonProcess+>;movl %eax, %ecx": 1,
                "calll - <wctomb+>;movl %edi, %eax;popl %edi;popl %esi;leave": 1,
                "calll - <wctomb+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <LsaDeregisterLogonProcess+>;pushl (%edi)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jl  <LsaDeregisterLogonProcess+>;pushl (%edi);pushl %esi": 1,
                "pushl $;pushl (%esi);pushl (%ebp);pushl %ebx;calll - <LsaDeregisterLogonProcess+>": 1,
                "calll - <wctomb+>;movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;cmpl $, (%esi);jne  <LsaDeregisterLogonProcess+>;movl $, %eax": 1,
                "movl $, %eax;jmp  <LsaDeregisterLogonProcess+>;pushl %edi;movl (%ebp), %edi;cmpl %edi, (%esi)": 1,
                "calll - <ExAcquireResourceSharedLite>;pushl $;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl (%ebp);calll - <IoReportResourceUsage+>;testl %eax, %eax;movl %eax, (%ebp);jl  <LsaDeregisterLogonProcess+>": 1,
                "movb $, (%eax);calll *;movl (%ebp), %eax;leave;retl $": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);leal -(%ebp), %eax;pushl -(%ebp)": 1,
                "cmpl %esi, %ebx;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl -(%ebp), %eax;pushl %esi;pushl (%ebp);addl $, %eax;pushl %eax": 1,
                "movl %eax, %ebx;pushl ;calll - <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;pushl (%eax)": 1,
                "movl %edi, -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, %ebx;cmpl $-, %ebx;jne  <LsaDeregisterLogonProcess+>": 1,
                "incl %esi;testl %eax, %eax;jne - <LsaDeregisterLogonProcess+>;pushl $;leal (,%esi,), %eax": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jge - <LsaDeregisterLogonProcess+>;xorl %eax, %eax;movl %eax, -(%ebp)": 1,
                "testl %esi, %esi;jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>": 1,
                "jl  <LsaDeregisterLogonProcess+>;leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "pushl %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl %ebx, -(%ebp)": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax": 1,
                "movl -(%ebp), %eax;shrl %eax;movl %eax, (%esi);pushl -(%ebp);pushl (%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl (%edi), %eax;movl (%eax), %eax;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "decl %eax;cmpl $, %eax;ja  <LsaDeregisterLogonProcess+>;jmpl *(,%eax,);pushl $": 1,
                "pushl (%ebp);pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;movl %eax, %ebx;cmpl $, %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;movl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;pushl $;jmp  <LsaDeregisterLogonProcess+>": 1,
                "pushl %edi;pushl -(%ebp);pushl $;pushl $;pushl $": 1,
                "calll - <IoForwardIrpSynchronously+>;jmp  <LsaDeregisterLogonProcess+>;cmpl $, (%ebp);jb  <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "jmp  <LsaDeregisterLogonProcess+>;movl $, %ebx;movl $, (%edi);jmp  <LsaDeregisterLogonProcess+>;movl $, %ebx": 1,
                "pushl %esi;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jge  <LsaDeregisterLogonProcess+>;movl %eax, %ebx": 1,
                "pushl %esi;addb %dh, -(%eax);pushl %ebp;pushl %esi;addb %dh, -(%ebp)": 1,
                "movl %edi, (%eax);movb $, (%eax);movb $, (%eax);xorl %edi, %edi;movl $, (%esi)": 1,
                "incl %edi;pushl %esi;movb %cl, (%eax);movl %edi, (%eax);calll - <IoQueueThreadIrp>": 1,
                "testb %al, %al;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;cmpl , %eax;movl $, %edx": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;cmpl , %eax;movl $, %edx;jae  <LsaDeregisterLogonProcess+>": 1,
                "movl %eax, %ecx;jne  <LsaDeregisterLogonProcess+>;xorl %ecx, %ecx;notl %eax;andl (%edx), %eax": 1,
                "xorl %ecx, %ecx;notl %eax;andl (%edx), %eax;orl %ecx, %eax;movl %eax, (%edx)": 1,
                "movl %eax, (%edx);xorl %eax, %eax;jmp  <LsaDeregisterLogonProcess+>;movl $, %eax;popl %ebp": 1,
                "pushl %eax;pushl $;pushl $;calll *;testl %eax, %eax": 4,
                "calll *;testl %eax, %eax;jl  <LsaDeregisterLogonProcess+>;cmpb $, -(%ebp);je  <LsaDeregisterLogonProcess+>": 1,
                "pushl %eax;pushl (%ebp);calll - <ZwYieldExecution+>;orb %al, %al;je  <LsaDeregisterLogonProcess+>": 1,
                "movl $, %ebx;incl %ss:(,%eax,);calll *%ss:(,%eax,);addl $, %esp;popl %ebp": 1,
                "calll - <KiDispatchInterrupt+>;jmp - <LsaDeregisterLogonProcess+>;xorl %eax, %eax;retl;incl %edi": 1,
                "shll $, %eax;movw (%ebp), %ax;pushl %eax;xorl %eax, %eax;movl $, %ecx": 4,
                "pushl %edx;calll - <KeUserModeCallback+>;retl;pushl %ebp;pushl %ebx": 3,
                "movzwl (%ebp), %ecx;movzwl (%ebp), %edx;pushl %ecx;pushl $;pushl %eax": 3,
                "calll - <KeUserModeCallback+>;retl;xorl %eax, %eax;retl;movzwl (%ebp), %eax": 1,
                "jne  <LsaDeregisterLogonProcess+>;testl $, ;jne  <LsaDeregisterLogonProcess+>;orl $, %ecx;andl $, %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;testl $, ;je - <LsaDeregisterLogonProcess+>;movl %eax, %ecx;andl $, %ecx": 1,
                "pushl $;pushl -;movl %esp, -;movl %esp, %ebp;subl $, %esp": 1,
                "orl %eax, (%edx);testl $, ;jne  <LsaDeregisterLogonProcess+>;testl $, %ebx;je  <LsaDeregisterLogonProcess+>": 1,
                "je - <LsaDeregisterLogonProcess+>;jmp - <LsaDeregisterLogonProcess+>;movl (%esp), %esp;jmp - <LsaDeregisterLogonProcess+>;leal (%ecx), %ecx": 1,
                "movl $, %ebx;cmpw $, (%ebp);jne  <LsaDeregisterLogonProcess+>;testl $, %eax;jne  <LsaDeregisterLogonProcess+>": 3,
                "movl (%esi), %eax;movl %eax, -(%ebp);leal -(%ebp), %esi;calll  <LsaDeregisterLogonProcess+>;testb $-, %al": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %esi;calll  <LsaDeregisterLogonProcess+>;testb $-, %al;je  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;movl (%ebp), %ecx;calll  <LsaDeregisterLogonProcess+>;testb $-, %al;je  <LsaDeregisterLogonProcess+>": 1,
                "jmp - <LsaDeregisterLogonProcess+>;movl $, %eax;movl (%ebp), %ebx;movl (%ebx), %ebx;decl %ebx": 1,
                "cmpl $, %ebx;jne  <LsaDeregisterLogonProcess+>;andl $, (%eax);movl (%eax), %eax;pushl $": 1,
                "pushl $;pushl %eax;jmp - <LsaDeregisterLogonProcess+>;addl $, %esp;jmp - <LsaDeregisterLogonProcess+>": 1,
                "popl %esi;addl $, %esp;cmpl , %ebx;jae - <LsaDeregisterLogonProcess+>;movl (%ebp), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;pushl %esi;movl $, %edx;testw $, (%esi);je  <LsaDeregisterLogonProcess+>": 1,
                "movl $, %edx;testw $, (%esi);je  <LsaDeregisterLogonProcess+>;subl $, %edx;addl %ebx, %edx": 1,
                "subl $, %edx;addl %ebx, %edx;movl (%ebp), %esi;movl (%ebp), %ecx;movl %eax, (%edx)": 1,
                "movl %ecx, (%edx);movl (%ebp), %ecx;movl (%ebp), %eax;movl (%ebp), %esi;movl %ecx, (%edx)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;movl (%ebp), %esi;movw %cx, (%edx);movw %ax, (%edx)": 1,
                "movl (%ebp), %eax;movl (%ebp), %esi;movw %cx, (%edx);movw %ax, (%edx);movw %si, (%edx)": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %ebp": 1,
                "pushl %eax;movl (%esi), %eax;calll - <LsaDeregisterLogonProcess+>;movl %eax, (%ebx,%edi);popl %eax": 1,
                "popl %esi;popl %edi;popl %ebx;retl;xorl %eax, %eax": 1,
                "shll $, (%esi);orl $, (%esi);movl $, %eax;retl;xorl %eax, %eax": 1,
                "jmp  <LsaDeregisterLogonProcess+>;cmpl (%esi), %eax;ja  <LsaDeregisterLogonProcess+>;movl $, %eax;retl": 2,
                "jmp  <LsaDeregisterLogonProcess+>;testl $, (%esi);jne  <LsaDeregisterLogonProcess+>;andl $, %eax;cmpl %eax, %ecx": 1,
                "decl %eax;testl $, (%esi);je  <LsaDeregisterLogonProcess+>;subl %ecx, %eax;cmpl (%esi), %eax": 1,
                "movl (%esi), %eax;movw %ax, (%edi);movzwl (%edi), %eax;popl -;addl $, %esp": 1,
                "pushl $;pushl -;movl %esp, -;incw (%edi);popl -": 1,
                "pushl %ebp;pushl %ebx;pushl %esi;pushl %edi;pushl %ecx": 1,
                "pushl -;movl %esp, -;movl $, %eax;mull %ecx;movl -, %edi": 1,
                "popl %esi;popl %ebx;popl %ebp;retl;movl (%esp), %esp": 1,
                "cmpl $, %ecx;ja  <LsaDeregisterLogonProcess+>;movl (%esi), %edx;movl (%esi), %ebx;andl $, %edx": 1,
                "movw %ax, (%edx,%ebx);subw $, %dx;movw (%esi), %ax;movw %ax, (%edx,%ebx);movl (,%ecx,), %eax": 1,
                "movw (%esi), %ax;movw %ax, (%edx,%ebx);movl (,%ecx,), %eax;popl -;addl $, %esp": 1,
                "movl (,%ecx,), %eax;popl -;addl $, %esp;popl %ebp;pushl %eax": 1,
                "testw $, (%edi);popl -;leal (%esp), %esp;popl %ebp;jne  <LsaDeregisterLogonProcess+>": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %ecx;movl $, %ecx;calll - <LsaDeregisterLogonProcess+>;popl %ecx": 1,
                "je  <LsaDeregisterLogonProcess+>;subl $, %edx;movl %edx, (%esi);pushl %ebp;pushl %esp": 2,
                "pushl -;movl %esp, -;movl (%esp), %eax;movw %ax, (%edx,%ebx);movl (%esp), %eax": 1,
                "movw %ax, (%edx,%ebx);movl (%esp), %eax;movw %ax, (%edx,%ebx);popl -;leal (%esp), %esp": 1,
                "pushl -;movl %esp, -;movl %eax, (%edx,%ebx);movzwl (%esi), %eax;movl %eax, (%edx,%ebx)": 1,
                "andl $, %eax;pushl %eax;xorl %ebx, %ebx;calll - <LsaDeregisterLogonProcess+>;popl %eax": 1,
                "movl $, %eax;popl %esi;popl %edi;popl %ebx;retl": 1,
                "int;orl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;orl $, %ebx;jmp  <LsaDeregisterLogonProcess+>": 1,
                "orl $, %ebx;jmp  <LsaDeregisterLogonProcess+>;pushl %ebp;movl (%esp), %ebp;movzwl (%ebp), %esi": 1,
                "movl $, %edi;xorl %ebx, %ebx;incl (,%edx,);calll *%ss:(,%edx,);popl %ebp": 1,
                "pushl %eax;calll - <KeUserModeCallback+>;retl;pushl %ebp;pushl %edi": 3,
                "testl $, ;je  <LsaDeregisterLogonProcess+>;movl (%ebp), %eax;leal , %ecx;orl $, (%ecx)": 1,
                "movl (%ebp), %eax;leal , %ecx;orl $, (%ecx);testl $, %eax;jne  <LsaDeregisterLogonProcess+>": 1,
                "je  <LsaDeregisterLogonProcess+>;testl $, %eax;je  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;movl $, %eax": 2,
                "calll  <LsaDeregisterLogonProcess+>;movl $, %eax;retl;subw $, %dx;movl %eax, (%edx,%ecx)": 1,
                "addl $, %edx;testl $, %ebx;jne  <LsaDeregisterLogonProcess+>;andl $, %ecx;subl $, %edx": 1,
                "leal (%esp), %esp;je  <LsaDeregisterLogonProcess+>;pushl %ebp;calll - <KiDispatchInterrupt+>;popl %eax": 1,
                "movl $, %eax;retl;movl (%ebp), %edx;testl $, ;je  <LsaDeregisterLogonProcess+>": 1,
                "andl $, %edx;jmp  <LsaDeregisterLogonProcess+>;leal , %eax;movl (%eax), %ecx;andl $, (%eax)": 1,
                "pushl %ecx;calll  <LsaDeregisterLogonProcess+>;orl %eax, %eax;popl %ecx;je  <LsaDeregisterLogonProcess+>": 1,
                "movl (%eax), %ebx;cmpl $, %ebx;je  <LsaDeregisterLogonProcess+>;leal (%ebx,%ecx,), %ebx;cmpl , %ebx": 1,
                "jae  <LsaDeregisterLogonProcess+>;testl $, (%ebx);je  <LsaDeregisterLogonProcess+>;leal (%eax), %ebx;movl (%ebx), %ebx": 1,
                "jne  <LsaDeregisterLogonProcess+>;pushl %ecx;pushl %edx;pushl %ebp;calll - <KiDispatchInterrupt+>": 1,
                "cmpw $, %ax;je  <LsaDeregisterLogonProcess+>;testl $, %ebx;je  <LsaDeregisterLogonProcess+>;testl $, %ebx": 1,
                "incl %edi;movzbl (%esi), %ecx;pushl %ebp;pushl %edi;pushl $": 3,
                "calll - <KeUserModeCallback+>;retl;leal , %eax;testl $, ;je  <LsaDeregisterLogonProcess+>": 1,
                "testl $, %eax;je  <LsaDeregisterLogonProcess+>;movl -(%ebp), %edi;movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "popl %esi;movl %ebp, %esp;popl %ebp;retl;pushl %ebp": 1,
                "addl %edi, (%ebp);movl $, %eax;retl;int;int": 1,
                "addl $, %esi;jmp  <LsaDeregisterLogonProcess+>;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "jae  <LsaDeregisterLogonProcess+>;movb (%esi), %al;testb $, %al;jne  <LsaDeregisterLogonProcess+>;movb (%esi), %dl": 1,
                "addb %al, (%edi);addb %al, (%eax);addb %cl, (%edi);addb %al, (%eax);addb %bl, (%edi)": 1,
                "leal (%ecx,%edi), %edx;cmpl -(%ebp), %edx;jae  <LsaDeregisterLogonProcess+>;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi": 8,
                "subl $, %edi;testb $, %al;jne  <LsaDeregisterLogonProcess+>;movb (%esi), %dl;movb %dl, (%edi)": 6,
                "jae  <LsaDeregisterLogonProcess+>;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;subl $, %edi;addl $, %esi": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;subl $, %edi;addl $, %esi;addl $, %edi": 1,
                "incl %edi;jmp  <LsaDeregisterLogonProcess+>;leal (%esi), %ecx;cmpl (%ebp), %ecx;ja  <LsaDeregisterLogonProcess+>": 8,
                "leal (%ecx,%edi), %edx;cmpl (%ebp), %edx;ja  <LsaDeregisterLogonProcess+>;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi": 8,
                "jle  <LsaDeregisterLogonProcess+>;addb %bh, %dh;popl %ecx;pushl %esi;addb %bh, %dh": 1,
                "jne  <LsaDeregisterLogonProcess+>;calll  <LsaDeregisterLogonProcess+>;jmp  <LsaDeregisterLogonProcess+>;cmpl $, %edx;jb  <LsaDeregisterLogonProcess+>": 1,
                "retl;xorl %eax, %eax;jmp - <LsaDeregisterLogonProcess+>;pushl %ebp;movl %esp, %ebp": 4,
                "xorl %eax, %eax;jmp - <LsaDeregisterLogonProcess+>;pushl %ebp;movl %esp, %ebp;pushl %edi": 2,
                "movl $, %eax;calll  <LsaDeregisterLogonProcess+>;testb $, %al;je  <LsaDeregisterLogonProcess+>;movl (%esi), %edi": 1,
                "movl $, %eax;popl %ebx;popl %esi;popl %edi;movl %ebp, %esp": 2,
                "retl;xorl %eax, %eax;jmp - <LsaDeregisterLogonProcess+>;incl (%esi);movl $, %eax": 1,
                "movl -, %edi;movl (%edi), %edi;andl $, %edi;movzbl (%edi), %edi;movl %cr, %eax": 1,
                "movl $, %eax;popl %edi;movl %ebp, %esp;popl %ebp;retl": 2,
                "cmpl $, %edx;jne  <LsaDeregisterLogonProcess+>;movzbl (%edi), %edx;testl $, %edx;jne  <LsaDeregisterLogonProcess+>": 1,
                "testl $, %edx;jne  <LsaDeregisterLogonProcess+>;andl $, %edx;movl (%esi), %edi;movl (,%edx,), %edx": 1,
                "xorl %eax, %eax;jmp - <LsaDeregisterLogonProcess+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 2,
                "jne  <LsaDeregisterLogonProcess+>;movl (%esi), %edi;movl -(%ebp), %edx;andl $, %edx;shrl $, %edx": 1,
                "movl %eax, -(%ebp);movl (%esi), %edi;addl (%esi), %edi;calll - <LsaDeregisterLogonProcess+>;testb $, %al": 1,
                "shrl $, %edx;andl $, %ecx;testl $, (%esi);jne  <LsaDeregisterLogonProcess+>;jmpl *(,%edx,)": 1,
                "testl $, (%esi);jne  <LsaDeregisterLogonProcess+>;jmpl *(,%edx,);movl $, %ebx;cmpl $, %ecx": 1,
                "testl $, -(%ebp);je  <LsaDeregisterLogonProcess+>;cmpl -(%ebp), %ebx;jae  <LsaDeregisterLogonProcess+>;addl -(%ebp), %ebx": 1,
                "retl;xorl %eax, %eax;jmp - <LsaDeregisterLogonProcess+>;cmpl $, %ecx;jne  <LsaDeregisterLogonProcess+>": 1,
                "movl -(%ebp), %ecx;andl $, %ecx;shrl $, %ecx;shll %cl, %eax;addl %eax, %ebx": 1,
                "int;movl (%esp), %edx;movl -, %ecx;movl (%ecx), %ecx;movl $, %eax": 1,
                "calll - <NtVdmControl+>;orl %eax, %eax;jne - <LsaDeregisterLogonProcess+>;movl (%esp), %edx;movl (%edx), %eax": 1,
                "movl %edi, %ecx;calll - <ObfDereferenceObject>;pushl $;pushl %ebx;calll - <ExFreePoolWithTag>": 1,
                "cmpl %ebx, %esi;jne - <IoUnregisterShutdownNotification+>;cmpb %bl, ;je  <IoUnregisterShutdownNotification+>;calll ": 1,
                "calll *%esi;movl , %edi;xorl %ebx, %ebx;jmp  <IoUnregisterShutdownNotification+>;calll *%edi": 1,
                "calll *%edi;pushl $;calll - <IoReportResourceUsage+>;pushl %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl $;calll - <KeWaitForSingleObject>;pushl $;calll - <IoReportResourceUsage+>": 1,
                "movb %al, %cl;jne - <IoUnregisterShutdownNotification+>;movb $, ;movl %ebx, ;calll *%edi": 1,
                "jne - <IoUnregisterShutdownNotification+>;movb $, ;movl %ebx, ;calll *%edi;popl %edi": 1,
                "jmp  <IoUnregisterShutdownNotification+>;pushl %eax;pushl %eax;pushl $;movb %al, ": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll - <IoReportResourceUsage+>;movw , %ax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movzwl , %eax;pushl %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %edi;pushl -(%ebp)": 1,
                "pushl %eax;pushl %edi;pushl -(%ebp);calll - <IoReportResourceUsage+>;testl %eax, %eax": 1,
                "movl %eax, (%ebp);jne  <IoUnregisterShutdownNotification+>;cmpl %edi, %eax;je  <IoUnregisterShutdownNotification+>;pushl $": 1,
                "je  <IoUnregisterShutdownNotification+>;pushl $;calll - <KeSetSystemAffinityThread>;cmpl %edi, %esi;je  <IoUnregisterShutdownNotification+>": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl (%esi), %eax;testl %eax, %eax;je  <IoUnregisterShutdownNotification+>": 1,
                "pushl %esi;pushl %edi;calll - <IoUnregisterShutdownNotification+>;movl (%ebp), %ebx;xorl %eax, %eax": 1,
                "movl , %eax;pushl $;movl %eax, (%ebx);leal (%ebx), %eax;popl %edx": 1,
                "leal (%edi), %eax;movl %edi, (%esi);movl (%eax), %ecx;movl %ecx, (%esi);pushl (%eax)": 1,
                "movzbl %dl, %eax;leal (%eax,%eax,), %eax;leal (%ebx,%eax,), %eax;incl (%eax);cmpl %ecx, (%edi)": 1,
                "movl %ecx, (%ebp);jmp  <IoUnregisterShutdownNotification+>;movl (%edi), %eax;decl (%ebp);movl %eax, -(%ebp)": 1,
                "movl %ecx, (%eax);movl %esi, (%eax);movl %eax, (%esi);movl %eax, (%ecx);movl %edx, %edi": 1,
                "decl (%ecx);orb $, (%eax);movzbl (%eax), %ecx;leal (%ecx,%ecx,), %ecx;leal (%ebx,%ecx,), %ecx": 1,
                "movl (%esi), %ecx;movb (%ecx), %cl;movb %cl, (%eax);movzbl %cl, %ecx;leal (%ecx,%ecx,), %ecx": 1,
                "movl %ecx, (%eax);movl %eax, (%edx);movl %eax, (%ecx);movl (%esi), %eax;testl %eax, %eax": 1,
                "jmp  <IoUnregisterShutdownNotification+>;movl (%esi), %esi;movl , %ecx;cmpl %ecx, %esi;jne - <IoUnregisterShutdownNotification+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl (%ebp), %esp;movl %esp, %eax;pushl (%ebp)": 1,
                "cmpl $, (%esi);jne - <IoUnregisterShutdownNotification+>;jmp  <IoUnregisterShutdownNotification+>;pushl %edi;movl $, %edi": 1,
                "adcl %ecx, %edi;movl %ecx, -(%ebp);calll *;xorl %ecx, %ecx;pushl %ecx": 1,
                "pushl %eax;calll - <_allmul>;movl %eax, -(%ebp);xorl %eax, %eax;pushl %eax": 1,
                "movl %edx, -(%ebp);pushl %eax;pushl -(%ebp);calll - <_allmul>;movl -(%ebp), %ecx": 1,
                "pushl %eax;pushl -(%ebp);calll - <_allmul>;movl -(%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "pushl %ecx;movl %edx, -(%ebp);calll - <KeSetDmaIoCoherency+>;pushl $;pushl $": 1,
                "pushl ;pushl %edi;pushl %ebx;calll - <RtlExtendedLargeIntegerDivide>;movl , %ecx": 1,
                "movl , %ecx;subl (%ebp), %ecx;movl %edx, -(%ebp);movl %ecx, ;movl (%esi), %ecx": 1,
                "movl %ecx, ;movl %eax, ;movl %ecx, ;movl %edi, -;movl %ebx, -": 1,
                "addl $, %esi;pushl -(%esi);pushl %esi;calll *;movl , %eax": 1,
                "popl %esi;popl %ebx;je  <IoUnregisterShutdownNotification+>;testb $-, (%eax);je  <IoUnregisterShutdownNotification+>": 1,
                "calll ;pushl -(%ebp);calll - <KeQueryTimeIncrement+>;leave;retl $": 1,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %edx;xorl %esi, %esi": 1,
                "movl (%edx), %esi;movl (%edx), %edi;movb %al, %cl;calll - <KiUnexpectedInterrupt+>;movl %edi, %edx": 1,
                "je  <KeISetGdtSelector+>;pushl %ebx;movl %eax, %edx;pushl %esi;movl (%ebp), %esi": 1,
                "movl %edi, %eax;shrl %cl, %eax;xorl %ebx, %ebx;incl %ebx;movsbl (%eax), %eax": 1,
                "movl %cr, %eax;movl %eax, %cr;pushl (%esi);pushl (%esi);pushl $": 1,
                "movb $, -(%ebp);calll *;movb %al, -(%ebp);movl %ds:, %eax;movl -(%ebp), %ecx": 1,
                "leal (%eax), %ecx;movl $, -(%ebp);movl %ecx, -(%ebp);movsbl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;pushl $": 1,
                "testl %edi, %edi;movl %edi, (%ebx);je  <KeISetGdtSelector+>;movl %esi, %ecx;movl %ecx, %edx": 1,
                "movl %edi, (%ebx);je  <KeISetGdtSelector+>;movl %esi, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "jne  <KeISetGdtSelector+>;movl $, (%ebx);jmp  <KeISetGdtSelector+>;movl %esi, %ecx;movl , %esi": 1,
                "movzbl (%eax), %eax;subl $, %eax;je  <KeISetGdtSelector+>;decl %eax;je  <KeISetGdtSelector+>": 1,
                "movl (%ebp), %esi;pushl %edi;pushl $;popl %edi;movl $, %edx": 1,
                "cmpl (%ebp), %ecx;ja  <KeISetGdtSelector+>;movl (%ebp), %eax;movl (%ebp), %ecx;addl $-, %eax": 1,
                "adcl $, %ecx;pushl %ecx;pushl %eax;pushl (%ebp);movb $, -(%ebp)": 1,
                "cmpl (%ebp), %ecx;ja  <KeISetGdtSelector+>;movl (%esi), %eax;cmpl %edi, %eax;ja  <KeISetGdtSelector+>": 1,
                "cmpl %edi, %eax;ja  <KeISetGdtSelector+>;jb  <KeISetGdtSelector+>;movl (%esi), %eax;cmpl (%ebp), %eax": 1,
                "addl $, %esi;cmpl %eax, -(%ebp);jb - <KeISetGdtSelector+>;popl %edi;movb -(%ebp), %al": 1,
                "calll - <KeISetGdtSelector+>;movl %eax, %ecx;xorl %eax, %eax;incl %eax;xorl %edx, %edx": 3,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);jne  <KeISetGdtSelector+>;cmpl $, (%ebp)": 1,
                "calll - <_allshl>;andl $, %edx;popl %ebp;retl $;int": 1,
                "subl $, %esp;pushl %ebx;calll - <ZwYieldExecution+>;movb %al, -(%ebp);movl %cr, %eax": 1,
                "movl $, %ebx;je  <KeISetGdtSelector+>;calll - <ZwYieldExecution+>;jmp  <KeISetGdtSelector+>;pushl %esi": 1,
                "addl $, (%ebp);addl $, %esi;cmpl (%edi), %eax;jb - <KeISetGdtSelector+>;popl %edi": 1,
                "cmpl (%edi), %eax;jb - <KeISetGdtSelector+>;popl %edi;popl %esi;wbinvd": 1,
                "movl %eax, %cr;pushl -(%ebp);calll - <KeQueryTimeIncrement+>;xorl %eax, %eax;popl %ebx": 1,
                "addl %esi, %eax;cmpb $, (%eax);je  <KeISetGdtSelector+>;movl (%eax), %edi;movl (%eax), %ebx": 1,
                "jmp  <KeISetGdtSelector+>;movl (%eax), %edi;andl %ecx, (%eax);movl %edi, (%eax);movl (%eax), %edi": 1,
                "jbe  <KeISetGdtSelector+>;andl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %esi": 2,
                "ja  <KeISetGdtSelector+>;jb  <KeISetGdtSelector+>;movl (%ecx), %ecx;cmpl (%eax), %ecx;jae  <KeISetGdtSelector+>": 1,
                "popl %ecx;movl %eax, %edi;rep  movsl (%esi), %es:(%edi);movl , %ecx;leal (%edx,%ecx), %edi": 1,
                "incl -(%ebp);movzbl %bl, %esi;addl $, %ecx;cmpl %esi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "addl $, -(%ebp);incl -(%ebp);movl -(%ebp), %eax;movzbl %bl, %ecx;decl %eax": 2,
                "movl -(%ebp), %esi;addl %esi, %edx;decl %ecx;leal (%ecx,%ecx,), %ecx;shll $, %ecx": 1,
                "leal (%ecx,%ecx,), %ecx;shll $, %ecx;leal (%edx), %esi;movl %edx, %edi;movl %ecx, %edx": 1,
                "subl $, -(%ebp);movb %bl, ;incl -(%ebp);addl $, -(%ebp);movzbl %bl, %ecx": 1,
                "movl -(%ebp), %eax;movzbl %bl, %ecx;decl %eax;leal -(%ecx), %esi;cmpl %esi, %eax": 1,
                "movzbl %bl, %ecx;decl %eax;leal -(%ecx), %esi;cmpl %esi, %eax;jb - <KeISetGdtSelector+>": 1,
                "leal -(%edi), %eax;testl %eax, %eax;movl %ecx, -(%ebp);jbe  <KeISetGdtSelector+>;movl %ecx, -(%ebp)": 1,
                "jne - <KeISetGdtSelector+>;movl -(%ebp), %eax;leal (%eax,%edx), %esi;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "cmpl %eax, -(%ebp);jbe  <KeISetGdtSelector+>;movb (%esi), %al;testb %al, %al;movb %al, -(%ebp)": 1,
                "je  <KeISetGdtSelector+>;pushl %esi;calll - <KeISetGdtSelector+>;pushl %ecx;movl %eax, %edi": 1,
                "cmpl %edi, %edx;jb  <KeISetGdtSelector+>;movl %edi, %edx;movl %ecx, %eax;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %edx;pushl -(%ebp)": 1,
                "xorl %ecx, %ecx;movl -(%ebp), %eax;cmpl %ecx, (%eax);movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "jae  <KeISetGdtSelector+>;movl -(%ebp), %eax;addl %edx, %eax;movl (%eax), %esi;movl (%eax), %ecx": 1,
                "movl (%eax), %esi;movl (%eax), %ecx;movl (%eax), %edi;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "cmpl -(%ebp), %edi;jbe  <KeISetGdtSelector+>;movl -(%ebp), %edi;movl -(%ebp), %esi;pushl %esi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movb (%eax), %al": 1,
                "je  <KeISetGdtSelector+>;movl -(%ebp), %edi;decl -(%ebp);shll $, %edi;subl $, %ebx": 1,
                "calll *;jmp  <KeISetGdtSelector+>;movl -(%ebp), %ebx;cmpl $, (%ebx);je  <KeISetGdtSelector+>": 1,
                "movb %al, -(%ebp);cmpl $, %esi;movzbl -(%ebp), %eax;jb  <KeISetGdtSelector+>;cmpl $, %esi": 1,
                "jne  <KeISetGdtSelector+>;cmpl $, %eax;jae  <KeISetGdtSelector+>;cli;movl %cr, %eax": 1,
                "jmp  <KeISetGdtSelector+>;movb $-, -(%ebp);movb -(%ebp), %al;cli;outb %al, $": 1,
                "inb $, %al;sti;movb %al, -(%ebp);movb -(%ebp), %al;andb $-, %al": 1,
                "movb %al, -(%ebp);movb -(%ebp), %al;andb $-, %al;orb $, %al;movb %al, -(%ebp)": 1,
                "jbe  <KeISetGdtSelector+>;movl $, %edx;testb $, (%edx);jne  <KeISetGdtSelector+>;incl %eax": 1,
                "movl $, %edx;testb $, (%edx);jne  <KeISetGdtSelector+>;incl %eax;addl $, %edx": 1,
                "movl (%edi), %ecx;cmpl $-, %ecx;je  <KeISetGdtSelector+>;cmpl $, (%edi);jne  <KeISetGdtSelector+>": 1,
                "cmpl $, -(%ebp);jne  <KeISetGdtSelector+>;andl $, %eax;orl %esi, %eax;shrl $, %eax": 2,
                "jne  <KeISetGdtSelector+>;andl $, %eax;orl %esi, %eax;shrl $, %eax;andl %edx, %ecx": 2,
                "xorl %eax, %eax;popl %edi;popl %esi;leave;retl": 3,
                "movl (%ebp), %esi;pushl %esi;calll - <KeISetGdtSelector+>;testl %eax, %eax;jne  <KeISetGdtSelector+>": 1,
                "movl %eax, %ecx;shrl $, %eax;pushl %esi;andl $, %ecx;andl $, %eax": 1,
                "pushl %esi;pushl %ecx;calll - <KeISetGdtSelector+>;incl ;popl %esi": 1,
                "movl (%ecx), %edx;cmpl $-, %edx;je  <KeISetGdtSelector+>;cmpl $, (%ecx);jne  <KeISetGdtSelector+>": 1,
                "movl (%ebp), %eax;addl %edi, %eax;cmpl %eax, %edx;jbe  <KeISetGdtSelector+>;movl (%ecx), %eax": 1,
                "jbe  <KeISetGdtSelector+>;movl (%ecx), %eax;addl %edx, %eax;cmpl %eax, %edi;ja  <KeISetGdtSelector+>": 1,
                "jmp  <KeISetGdtSelector+>;subl %edi, %esi;movl %esi, %eax;movl $, %edx;movl $, %ebx": 1,
                "je  <KeISetGdtSelector+>;shrl %edx;shrl %ebx;cmpl $, %edx;ja - <KeISetGdtSelector+>": 1,
                "jb - <KeISetGdtSelector+>;movl $, %eax;movl $, %ecx;cmpl (%ebp), %eax;je  <KeISetGdtSelector+>": 1,
                "decl %eax;je  <KeISetGdtSelector+>;decl %eax;je  <KeISetGdtSelector+>;movl $, %edi": 1,
                "pushl ;calll - <MmUnlockPagableImageSection>;popl %esi;popl %ebx;jmp  <KeISetGdtSelector+>": 1,
                "movl %ebx, -(%ebp);calll *;movl , %eax;leal -(%ebx), %ecx;cmpl %eax, %ecx": 1,
                "calll *;movl , %eax;leal -(%ebx), %ecx;cmpl %eax, %ecx;jbe  <MmMarkPhysicalMemoryAsGood+>": 1,
                "jb  <MmMarkPhysicalMemoryAsGood+>;movl $, %esi;jmp  <MmMarkPhysicalMemoryAsGood+>;pushl ;andl $, (%ebp)": 1,
                "pushl $;shll $, %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx": 1,
                "movl , %eax;xorl %edi, %edi;cmpl %ebx, (%eax);jbe  <MmGetPhysicalMemoryRanges+>;movl $, %ecx": 1,
                "movl %eax, (%esi);movl , %eax;movl (%eax,%edi,), %eax;movl %ecx, %edx;mull %edx": 1,
                "pushl %esi;pushl %edi;movl $, %esi;andl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);je  <MmGetPhysicalMemoryRanges+>;cmpl $, ;je  <MmGetPhysicalMemoryRanges+>;pushl %ebx": 1,
                "incl -(%ebp);jmp  <MmGetPhysicalMemoryRanges+>;cmpl $-, -(%ebp);jne  <MmGetPhysicalMemoryRanges+>;movl %ebx, -(%ebp)": 1,
                "cltd;pushl $;popl %ebx;idivl %ebx;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movl (%edx), %esi;movl %esi, (%ecx);movl -(%ebp), %esi": 1,
                "imull $, %edi, %edi;xorl %ebx, %ebx;addl , %edi;movl (%edi), %eax;movl %eax, %ecx": 1,
                "cmpl $, %ecx;jne  <MmGetPhysicalMemoryRanges+>;xorl %ecx, %ecx;cmpl %ecx, (%edi);je  <MmGetPhysicalMemoryRanges+>": 1,
                "cmpl $, (%eax);jne  <MmGetPhysicalMemoryRanges+>;xorl %ebx, %ebx;incl %ebx;movl %edi, %ecx": 1,
                "jne  <MmGetPhysicalMemoryRanges+>;xorl %ebx, %ebx;incl %ebx;movl %edi, %ecx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl (%ebp), %ecx;calll - <MmIsNonPagedSystemAddressValid+>;movl (%ebp), %edx;movl $, %ecx": 1,
                "movl $, %ecx;calll - <MmTrimAllSystemPagableMemory+>;incl -(%ebp);incl (%ebp);movl (%ebp), %eax": 1,
                "cmpl (%ebp), %eax;jb - <MmGetPhysicalMemoryRanges+>;cmpl $, %ebx;je - <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;testl %eax, (%esi);je  <MmGetPhysicalMemoryRanges+>;movl $, %eax": 1,
                "cmpl %edi, ;jne  <MmGetPhysicalMemoryRanges+>;movl $, %eax;jmp  <MmGetPhysicalMemoryRanges+>;movl , %eax": 1,
                "jmp  <MmGetPhysicalMemoryRanges+>;movl , %eax;shrl $, %eax;andl $, %eax;movl -(%eax), %eax": 1,
                "movl (%esi), %edx;movl %eax, %edi;movl (%esi), %eax;movb $, %cl;movl %edi, (%ebp)": 1,
                "calll *;movl , %eax;movl %eax, -(%ebp);movl (%eax), %eax;pushl $": 1,
                "calll *;movl $, %eax;jmp  <MmGetPhysicalMemoryRanges+>;pushl ;andl $, -(%ebp)": 1,
                "movl (%ecx), %edx;testl %edx, %edx;movl (%ecx), %ecx;je  <MmGetPhysicalMemoryRanges+>;addl %ecx, %edx": 1,
                "movl -(%ebp), %edx;addl $, %ecx;cmpl (%eax), %edx;movl %ecx, -(%ebp);jne - <MmGetPhysicalMemoryRanges+>": 1,
                "leal -(%ebx,%eax), %ecx;shrl $, %ecx;andl %edx, %ecx;movl -(%ebp), %edx;subl $, %ecx": 1,
                "incl -(%ebp);addl $, %edx;cmpl %ecx, %edx;jbe - <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax": 1,
                "jbe - <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax;cmpl %eax, ;jae  <MmGetPhysicalMemoryRanges+>;movl $, %esi": 1,
                "movb (%ebp), %cl;calll *;pushl ;calll - <MmUnlockPagableImageSection>;movl $, %ecx": 1,
                "andl $, %edx;andl $-, %ebx;orl %edx, %eax;orl %ebx, %ecx;movl -(%ebp), %ebx": 1,
                "movl %eax, (%ebx);addl $, %ebx;cmpl %ecx, %ebx;movl %ebx, -(%ebp);jbe - <MmGetPhysicalMemoryRanges+>": 1,
                "cmpl %ecx, %ebx;movl %ebx, -(%ebp);jbe - <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax;subl %eax, ": 1,
                "addl $, %edx;andl %ecx, -(%ebp);cmpl $, -(%ebp);movl (%eax,%ecx,), %ebx;movl %ebx, -(%ebp)": 1,
                "cmpl , %eax;jbe  <MmGetPhysicalMemoryRanges+>;movl %eax, ;subl %edi, %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl %edi;pushl $;calll - <RtlSetBits>;addl $, %ebx": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl $, %ecx;movl %esi, %eax": 1,
                "movl %eax, -(%ebp);movl , %eax;addl %esi, (%eax);movl , %eax;incl %ecx": 1,
                "cmpl (%eax), %edx;jne - <MmGetPhysicalMemoryRanges+>;movl (%eax), %edx;addl %edx, (%eax);movl , %eax": 1,
                "jne - <MmGetPhysicalMemoryRanges+>;movl (%eax), %edx;addl %edx, (%eax);movl , %eax;decl (%eax)": 1,
                "movl , %eax;movl (%eax), %edx;cmpl %edx, %ecx;je - <MmGetPhysicalMemoryRanges+>;subl %ecx, %edx": 1,
                "movl %edi, (%ecx,%eax);movl , %eax;leal (%ecx,%eax), %eax;addl %esi, (%eax);movl -(%ebp), %eax": 1,
                "andl $, %eax;movl -(%eax), %eax;pushl %edi;movl $, %ecx;xorl %edi, %edi": 1,
                "jne  <MmGetPhysicalMemoryRanges+>;movl , %eax;movl $, -(%ebp);jmp  <MmGetPhysicalMemoryRanges+>;movl , %eax": 1,
                "movl , %eax;movl %edx, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %edx;movl %eax, -(%ebp)": 1,
                "movl $, %eax;jmp  <MmGetPhysicalMemoryRanges+>;leal -(%ebx), %eax;cmpl -(%ebp), %eax;jbe  <MmGetPhysicalMemoryRanges+>": 1,
                "movl $, %eax;jmp  <MmGetPhysicalMemoryRanges+>;movl %edi, %eax;imull $, %eax, %eax;movl %eax, -(%ebp)": 1,
                "calll - <RtlAreBitsSet>;testb %al, %al;jne  <MmGetPhysicalMemoryRanges+>;movl $, %esi;jmp  <MmGetPhysicalMemoryRanges+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmGetPhysicalMemoryRanges+>;movl $, %esi;jmp  <MmGetPhysicalMemoryRanges+>": 1,
                "testl %eax, %eax;jne  <MmGetPhysicalMemoryRanges+>;movl $, %esi;jmp  <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %esi": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);movl %esi, (%ebp);movl (%ebp), %eax;movl $, %ecx": 1,
                "movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);pushl ;calll - <MmLockPagableSectionByHandle>": 1,
                "jmp  <MmGetPhysicalMemoryRanges+>;testb $-, (%eax);jne  <MmGetPhysicalMemoryRanges+>;addl $, %eax;cmpl -(%ebp), %eax": 1,
                "movl %eax, %esi;cmpl %edi, %esi;movl , %edi;je  <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %ebx": 1,
                "andl $, ;calll  <MmMapUserAddressesToPage+>;pushl $;pushl $;pushl $": 1,
                "cmpl %ecx, %ebx;je  <MmGetPhysicalMemoryRanges+>;movl $, (%ebp);jmp - <MmGetPhysicalMemoryRanges+>;andl $, (%ebp)": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);cmpl -(%ebp), %esi;je  <MmGetPhysicalMemoryRanges+>;movb (%ebp), %cl": 1,
                "jne - <MmGetPhysicalMemoryRanges+>;movb (%ebp), %cl;calll *%edi;pushl ;calll - <MmUnlockPagableImageSection>": 1,
                "calll *;jmp  <MmGetPhysicalMemoryRanges+>;cmpl $, (%ebp);jne  <MmGetPhysicalMemoryRanges+>;movl , %esi": 1,
                "jmp  <MmGetPhysicalMemoryRanges+>;cmpl $, (%ebp);jne  <MmGetPhysicalMemoryRanges+>;movl , %esi;andl $, -(%ebp)": 1,
                "movl , %eax;movl (%eax), %ebx;addl (%ebp), %ebx;pushl $;leal (,%ebx,), %ebx": 1,
                "calll *;movb %al, (%ebp);andb $-, (%esi);movl (%esi), %eax;andl $, %eax": 1,
                "movl %ebx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;addl $, %esi;incl %ebx;cmpl -(%ebp), %ebx": 1,
                "xaddl %eax, (%ecx);movb (%ebp), %cl;calll *%edi;movl -(%ebp), %eax;movl $, %ecx": 1,
                "movl , %eax;movl %ebx, %ecx;movl %ecx, %edx;shrl $, %ecx;movl %eax, -(%ebp)": 1,
                "addl %edi, %ecx;cmpl $, (%ebp);jne  <MmGetPhysicalMemoryRanges+>;cmpl %edi, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ecx;addl %ecx, (%esi);movl , %ecx;movl -(%ebp), %esi;leal (%edx,%ecx), %ecx": 1,
                "cmpl (%ecx), %edx;jne - <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax;decl %ebx;cmpl , %ebx": 1,
                "movl %eax, ;jne  <MmGetPhysicalMemoryRanges+>;movl -(%ebp), %eax;decl %eax;movl %eax, ": 1,
                "movl -(%ebp), %eax;andl $, (%ebp);cmpl %eax, %ebx;jae  <MmGetPhysicalMemoryRanges+>;subl %ebx, %eax": 1,
                "movl %eax, (%esi);movl , %eax;andl $, (%esi);movl %eax, (%esi);addl $, %esi": 1,
                "movl $, %ecx;andl %ecx, %esi;movl $, %eax;andl %ecx, %edi;subl %eax, %esi": 1,
                "andl %ecx, %esi;movl $, %eax;andl %ecx, %edi;subl %eax, %esi;subl %eax, %edi": 1,
                "movb (%ebp), %cl;calll *;testl %edi, %edi;je  <MmGetPhysicalMemoryRanges+>;movl (%ebp), %eax": 1,
                "popl %esi;leave;retl $;cmpl %ecx, %ebx;je - <MmGetPhysicalMemoryRanges+>": 1,
                "movl %edx, (%eax);addl $, %eax;movl %ebx, (%eax);subl %ebx, %ecx;jmp - <MmGetPhysicalMemoryRanges+>": 1,
                "movl %eax, (%ecx);movl %esi, %eax;shrl $, %eax;andl $, %eax;subl $, %eax": 1,
                "andl %ebx, %eax;pushl $;movl %eax, -(%ebp);popl %eax;je  <MmAddPhysicalMemory+>": 1,
                "pushl $;movl %eax, -(%ebp);popl %eax;je  <MmAddPhysicalMemory+>;cmpl %eax, %eax": 1,
                "jle  <MmAddPhysicalMemory+>;calll *;pushl ;calll - <MmUnlockPagableImageSection>;negl %ebx": 1,
                "calll *;pushl ;calll - <MmUnlockPagableImageSection>;negl %ebx;movl %ebx, -(%ebp)": 1,
                "orl %edx, %eax;movl -(%ebp), %edx;orl %ebx, %ecx;movl %ecx, (%edx);movl %eax, (%edx)": 1,
                "shrl $, %edx;movl %eax, (%ebx,%edx,);movl %ecx, (%ebx,%edx,);movl , %eax;pushl (%eax)": 1,
                "movl , %ecx;incl ;leal (%ebx,%ebx,), %eax;cmpl $-, (%ecx,%eax,);movl %ebx, -(%ebp)": 1,
                "leal (%ebx,%ebx,), %eax;cmpl $-, (%ecx,%eax,);movl %ebx, -(%ebp);je  <MmAddPhysicalMemory+>;movl %ebx, %ecx": 1,
                "movl %ebx, -(%ebp);je  <MmAddPhysicalMemory+>;movl %ebx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <RtlFillMemory+>;pushl $;pushl $;pushl %ebx": 1,
                "orl %edx, %eax;movl -(%ebp), %edx;orl %ebx, %ecx;orl $, %eax;movl %ecx, (%edx)": 1,
                "movl %ecx, (%edx);pushl $;pushl %edx;pushl -(%ebp);movl %eax, (%edx)": 1,
                "movl %ecx, (%eax);movl , %ecx;movl %eax, %edx;subl (%ecx), %edx;shrl $, %ecx": 1,
                "movl -(%ecx), %ecx;shrdl $, %ecx, %ebx;andl $, %ebx;imull $, %ebx, %ebx;shrl $, %ecx": 2,
                "andl %edi, %ecx;subl $, %ecx;shrl $, %ecx;andl %edi, %ecx;movl -(%ecx), %edi": 1,
                "imull $, %edi, %edi;shrl $, %ecx;movl , %ecx;sarl $, %edx;movl %edx, (%edi,%ecx)": 1,
                "subl (%ecx), %eax;orl $, (%ecx);movl , %ecx;addl $, %eax;sarl $, %eax": 1,
                "movl , %ecx;movl $, (%ecx);movl , %edi;xorl %ecx, %ecx;movb %cl, (%edi)": 1,
                "addl %ecx, %eax;movl %eax, (%esi);movl , %eax;addl $, %eax;movl %eax, (%esi)": 1,
                "je  <MmAddPhysicalMemory+>;movl %edx, -(%ebp);movl $, %esi;jmp  <MmAddPhysicalMemory+>;movl (%edi), %esi": 1,
                "jbe  <MmAddPhysicalMemory+>;movl %eax, (%ebp);movl %ecx, (%ebp);cmpl %eax, -(%ebp);jbe  <MmAddPhysicalMemory+>": 1,
                "subl %ecx, %eax;jmp  <MmAddPhysicalMemory+>;cmpl $, (%ebp);je  <MmAddPhysicalMemory+>;decl (%ebp)": 1,
                "subl (%ebp), %eax;pushl %esi;pushl %eax;calll - <MmIsDriverVerifying+>;movl (%ebp), %eax": 1,
                "subl (%esi), %ecx;subl %edx, %eax;testl %ecx, %ecx;movl %eax, (%ebp);jle  <MmAddPhysicalMemory+>": 1,
                "testl %ecx, %ecx;movl %eax, (%ebp);jle  <MmAddPhysicalMemory+>;negl %ecx;movl %ecx, (%ebp)": 1,
                "movl %ecx, (%ebp);movl (%ebp), %eax;movl $, %ecx;xaddl %eax, (%ecx);cmpl $, (%ebp)": 1,
                "xaddl %eax, (%ecx);cmpl $, -(%ebp);jne  <MmAddPhysicalMemory+>;movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "movl $, %ecx;calll - <ExReleaseResourceLite>;movb (%ebp), %cl;calll *%edi;jmp  <MmAddPhysicalMemory+>": 1,
                "leal (%edi), %ecx;calll *;pushl ;calll - <MmUnlockPagableImageSection>;movl (%ebp), %eax": 1,
                "movb $, %cl;calll - <KiDispatchInterrupt+>;addl $, %esi;addl $, %edi;decl %ebx": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);movl , %ebx;jmp  <MmAdjustWorkingSetSize+>;movb (%ebp), %cl": 1,
                "jb - <MmAdjustWorkingSetSize+>;movb %bl, %cl;calll *;popl %edi;popl %esi": 1,
                "decl ;decw (%eax);jmp  <MmAdjustWorkingSetSize+>;cmpw $, %dx;je  <MmAdjustWorkingSetSize+>": 1,
                "popl %ecx;idivl %ecx;decl ;movl %eax, %ecx;calll - <MmTrimAllSystemPagableMemory+>": 3,
                "idivl %ecx;decl ;movl %eax, %ecx;calll - <MmTrimAllSystemPagableMemory+>;addl $, %esi": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;addl $, %esi;cmpl %edi, %esi;jbe - <MmAdjustWorkingSetSize+>;movb %bl, %cl": 1,
                "leal (%edi), %ecx;movl %ecx, -(%ebp);calll *;movl (%ebp), %ecx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "calll *;movl (%ebp), %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl %eax, %esi;testl %esi, %esi": 1,
                "leal (%ecx,%eax,), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;shrl $, %eax;andl $, %eax": 1,
                "pushl $;pushl $;pushl (%ebp);calll - <ZwYieldExecution+>;movl (%esi), %eax": 1,
                "cmpl $, %eax;jne  <MmAdjustWorkingSetSize+>;movl (%esi), %eax;cmpl $, %eax;je  <MmAdjustWorkingSetSize+>": 1,
                "addl $, -(%ebp);addl $, -(%ebp);decl -(%ebp);addl $, (%ebp);addl $, -(%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;subl $, %esp;testw $, (%ebp)": 1,
                "subl %eax, %esi;movl %esi, -(%ebp);jne - <MmAllocatePagesForMdl+>;xorl %eax, %eax;jmp  <MmAllocatePagesForMdl+>": 1,
                "jmp  <MmAllocatePagesForMdl+>;xorl %edx, %edx;movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax": 1,
                "movl %esi, -(%ebp);movl %ecx, -(%ebp);movl %ecx, (%ebp);je  <MmAllocatePagesForMdl+>;pushl %eax": 1,
                "movl $, -(%ebp);calll - <MmLockPagableSectionByHandle>;jmp  <MmAllocatePagesForMdl+>;movl %ecx, -(%ebp);movl $, %edi": 1,
                "cmpl %eax, %esi;jbe  <MmAllocatePagesForMdl+>;movl %eax, %esi;movl %esi, -(%ebp);movl , %eax": 1,
                "jne  <MmAllocatePagesForMdl+>;pushl ;calll - <MmUnlockPagableImageSection>;pushl $;pushl -(%ebp)": 2,
                "calll - <MmUnlockPagableImageSection>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %eax": 1,
                "cmpl (%ebp), %ecx;je  <MmAllocatePagesForMdl+>;andl $, ;addl %esi, ;subl %esi, ": 1,
                "movl (%ebp), %ecx;movl %eax, -(%ebp);xorl %eax, %eax;leal -(%ebp,%ecx,), %ecx;movl %eax, -(%ebp)": 1,
                "jne  <MmAllocatePagesForMdl+>;incl (%ebp);addl $, %eax;addl $, %ecx;decl %edx": 1,
                "movl -(%ebp), %eax;movl %esi, %edi;imull $, %edi, %edi;addl , %edi;movl %eax, -(%ebp)": 1,
                "cmpl $-, %eax;movl %eax, -(%ebp);je  <MmAllocatePagesForMdl+>;movl (%edi), %ecx;movl (%ebx), %eax": 1,
                "je  <MmAllocatePagesForMdl+>;movl , %edx;imull $, %eax, %eax;movl %esi, (%eax,%edx);movl -(%ebp), %ebx": 1,
                "jb  <MmAllocatePagesForMdl+>;cmpl %ebx, %esi;ja  <MmAllocatePagesForMdl+>;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "ja  <MmAllocatePagesForMdl+>;cmpl %eax, (%ebp);jbe  <MmAllocatePagesForMdl+>;movl %eax, (%ebp);calll *%edi": 1,
                "jne - <MmAllocatePagesForMdl+>;jmp  <MmAllocatePagesForMdl+>;cmpl $, -(%ebp);jne  <MmAllocatePagesForMdl+>;movl -(%ebp), %eax": 1,
                "movl $, %ecx;calll *;cmpl $, -(%ebp);jne  <MmAllocatePagesForMdl+>;pushl ": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;movl -(%ebp), %edx;cmpl %edx, %esi": 1,
                "sarl $, %eax;cmpl %edx, (%ebp);rep  movsl (%esi), %es:(%edi);jbe  <MmAllocatePagesForMdl+>;movl %eax, %ecx": 1,
                "shll $, %eax;movl -(%ebp,%eax), %esi;leal -(%ebp,%eax), %eax;cmpl (%eax), %esi;jae  <MmAllocatePagesForMdl+>": 1,
                "cmpl $, (%ebp);jne - <MmAllocatePagesForMdl+>;orb $, (%ebx);movl %ebx, %eax;popl %edi": 1,
                "jne - <MmAllocatePagesForMdl+>;orb $, (%ebx);movl %ebx, %eax;popl %edi;popl %ebx": 1,
                "movl (%edi), %ecx;andl $, %eax;leal (%eax,%ecx), %ebx;shrl $, %ebx;leal (%edi), %esi": 1,
                "calll *;pushl ;calll - <MmUnlockPagableImageSection>;negl %ebx;movl %ebx, (%ebp)": 1,
                "pushl %edi;movl %fs:, %eax;movl (%eax), %edi;leal (%edi), %ecx;movl %edi, -(%ebp)": 1,
                "jmp  <MmMapUserAddressesToPage+>;movl %ebx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <MmMapUserAddressesToPage+>": 1,
                "movl %ecx, %ebx;movl %esi, %ecx;shrl $, %ecx;cmpl %ecx, (%eax);jae  <MmMapUserAddressesToPage+>": 1,
                "pushl -(%ebp);pushl %eax;pushl %eax;pushl (%ebp);calll - <ZwYieldExecution+>": 1,
                "calll - <MmUnlockPagableImageSection>;xorl %esi, %esi;movl -(%ebp), %ecx;calll *;movl %esi, %eax": 1,
                "andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 1,
                "shrl $, %esi;movl $, %ecx;shrl $, %edi;andl %eax, %esi;andl %eax, %edi": 1,
                "movl (%ebp), %eax;testb $-, (%eax);jne  <MmMapUserAddressesToPage+>;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "je  <MmMapUserAddressesToPage+>;movl (%eax), %eax;movl %eax, %edx;shll $, %edx;movl %edi, %ebx": 1,
                "shrl $, %edx;andl $, %edx;movl %ebx, %ecx;calll - <MmTrimAllSystemPagableMemory+>;jmp - <MmMapUserAddressesToPage+>": 1,
                "jmp - <MmMapUserAddressesToPage+>;movl (%edi), %eax;movl (%edi), %edx;movb $, %cl;calll - <_aullshr>": 1,
                "jne  <MmMapUserAddressesToPage+>;movl $, -(%ebp);calll *;movb %al, -(%ebp);movl (%ebp), %ebx": 1,
                "movl %ebx, %edx;shrdl $, %edx, %eax;movl %eax, %esi;andl $, %esi;imull $, %esi, %esi": 1,
                "addl , %esi;shrl $, %edx;cmpw $, (%esi);jne  <MmMapUserAddressesToPage+>;pushl (%esi)": 1,
                "andl $, %ecx;cmpl $, %ecx;jne - <MmMapUserAddressesToPage+>;cmpw $, (%esi);jne - <MmMapUserAddressesToPage+>": 1,
                "je  <MmMapUserAddressesToPage+>;cmpl $, -(%ebp);jne  <MmMapUserAddressesToPage+>;calll *;movl -(%ebp), %ecx": 1,
                "calll *;andl $, -(%ebp);testl %ebx, %ebx;jne - <MmMapUserAddressesToPage+>;andl %ebx, (%edi)": 1,
                "movl (%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);movb %dl, %cl;calll *": 1,
                "calll - <MmUnlockPagableImageSection>;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;shrl $, %esi;movl $, %ecx;shrl $, %edi": 1,
                "shrl $, %esi;movl $, %ecx;shrl $, %edi;movl %eax, -(%ebp);andl %ecx, %esi": 1,
                "pushl ;calll - <MmLockPagableSectionByHandle>;calll *;movb %al, (%ebp);movl -(%ebp), %eax": 1,
                "xaddl %eax, (%ecx);cmpl %edi, %esi;ja  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;addl $, %eax": 1,
                "pushl %esi;pushl $;movl $, ;calll - <KeSetEvent>;movl $, %edi": 1,
                "movl $, %edi;pushl $;pushl %esi;pushl %esi;calll - <KeDelayExecutionThread>": 1,
                "movl %eax, ;movl , %eax;pushl %esi;shrl $, %eax;cmpl $, %eax": 1,
                "movl %esi, ;movl %eax, ;jae  <MmMapUserAddressesToPage+>;pushl $;popl %eax": 1,
                "andl $, (%eax);andw $, (%eax);orl $, (%eax);calll - <MmTrimAllSystemPagableMemory+>;addl $, %esi": 1,
                "andl %eax, %ecx;subl $, %esi;subl %esi, %ecx;subl $, %ecx;sarl $, %ecx": 1,
                "pushl ;calll - <MmLockPagableSectionByHandle>;calll *;movl (%ebp), %edx;movl $, %ecx": 1,
                "movl $, %ecx;leal (%edx), %esi;lock;orl %ecx, (%esi);movl (%ebp), %esi": 1,
                "orl %ecx, (%esi);movl (%ebp), %esi;addl $, %edx;movl (%edx), %edi;movl %edx, (%esi)": 1,
                "pushl ;calll - <MmUnlockPagableImageSection>;popl %edi;popl %esi;popl %ebp": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %eax;movl $, ": 1,
                "testb $, %al;jne  <MmMapUserAddressesToPage+>;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>": 1,
                "jne  <MmMapUserAddressesToPage+>;pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>;movl (%esi), %esi": 1,
                "pushl %edi;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %ebx, %esi;jne - <MmMapUserAddressesToPage+>": 1,
                "calll - <ExFreePoolWithTag>;xorl %ebx, %ebx;cmpl %edi, ;jbe  <MmMapUserAddressesToPage+>;leal (,%ebx,), %esi": 1,
                "cmpl %edi, ;jbe  <MmMapUserAddressesToPage+>;leal (,%ebx,), %esi;movl (%esi), %eax;pushl %edi": 1,
                "je - <MmMapUserAddressesToPage+>;pushl ;calll - <ExFreePoolWithTag>;pushl %edi;pushl ": 1,
                "je  <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>;movl $, %ecx;calll - <InterlockedPopEntrySList>;cmpl %edi, %eax": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;cmpw %di, ;jne - <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>": 1,
                "calll - <ExFreePoolWithTag>;cmpw %di, ;jne - <MmMapUserAddressesToPage+>;movl , %esi;cmpl %edi, %esi": 1,
                "cmpl %ebx, %esi;jne - <MmMapUserAddressesToPage+>;popl %edi;popl %esi;popl %ebx": 1,
                "addl , %esi;movl (%esi), %eax;movl (%esi), %ecx;andl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %ebx, -(%ebp);movl (%edi), %eax;movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jl  <MmMapUserAddressesToPage+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jae  <MmMapUserAddressesToPage+>;pushl $;pushl %ebx;pushl %ebx;calll - <KeDelayExecutionThread>": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <KeSetEvent>;pushl $": 2,
                "pushl %eax;calll - <KeSetEvent>;pushl $;pushl %ebx;pushl %ebx": 2,
                "movl , %edi;movb -(%ebp), %cl;calll *;movl , %eax;addl %eax, %eax": 1,
                "pushl %ebx;pushl $;movl $, -(%ebp);calll - <KeSetEvent>;leal -(%ebp), %eax": 1,
                "imull $, %eax, %eax;addl , %eax;addl $, %esi;orl $, (%eax);incl -(%ebp)": 1,
                "testb $, %al;jne  <MmMapUserAddressesToPage+>;cmpl %ebx, %esi;jne  <MmMapUserAddressesToPage+>;movl -(%ebp), %eax": 1,
                "cmpl , %esi;jne  <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>;orl $, (%esi);movw (%esi), %ax": 1,
                "orl $, (%esi);movw (%esi), %ax;cmpw $, %ax;jne  <MmMapUserAddressesToPage+>;cmpl $, (%esi)": 1,
                "pushl %ebx;pushl %edi;calll - <MmProbeAndLockSelectedPages+>;jmp  <MmMapUserAddressesToPage+>;cmpl %ebx, %esi": 1,
                "shll $, %esi;movl %ecx, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);pushl (%eax)": 1,
                "testb $, -(%ebp);movl %eax, %esi;je  <MmMapUserAddressesToPage+>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <MmUnmapLockedPages>;cmpl $, %esi": 1,
                "pushl -(%ebp);calll - <MmUnmapLockedPages>;cmpl $, %esi;je  <MmMapUserAddressesToPage+>;xorl %esi, %esi": 1,
                "jb - <MmMapUserAddressesToPage+>;movl %ebx, -(%ebp);leal -(%ebp), %esi;movl (%esi), %ecx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "calll - <KeSetEvent>;movl %ebx, -(%ebp);cmpl $, ;je  <MmMapUserAddressesToPage+>;movb -(%ebp), %cl": 1,
                "calll *%edi;cmpl %ebx, ;movb %al, -(%ebp);jne  <MmMapUserAddressesToPage+>;orl $-, ": 1,
                "cmpl $, -(%ebp);jb - <MmMapUserAddressesToPage+>;movb -(%ebp), %cl;calll *;pushl %ebx": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;addl $, %esi;incl %ebx;cmpl , %ebx;jb - <MmMapUserAddressesToPage+>": 1,
                "pushl ;calll - <MmUnlockPagableImageSection>;xorb %al, %al;jmp  <MmMapUserAddressesToPage+>;movl (%esi), %eax": 1,
                "movl (%eax), %esi;pushl $;leal (,%esi,), %esi;pushl %esi;pushl %ebx": 1,
                "cmpl $, %esi;movl %esi, -(%ebp);jne - <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>;movl %ebx, ": 1,
                "popl %eax;cmpl %eax, ;jae  <MmMapUserAddressesToPage+>;testb %al, ;movl %eax, ": 1,
                "cmpl %esi, ;jbe  <MmMapUserAddressesToPage+>;movl (,%esi,), %eax;movl (%eax), %ecx;calll - <ObfDereferenceObject>": 1,
                "movb %al, %cl;movl , %eax;orl $, (%eax);movl , %eax;xorl %edx, %edx": 1,
                "movl %edx, (%ebx);movl %eax, (%eax);movl %eax, (%eax);calll *;xorl %eax, %eax": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %ecx;movb $, -(%ebp);movb $, -(%ebp);movl %edx, -(%ebp)": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;incl (%esi);jne  <MmMapUserAddressesToPage+>;leal (%esi), %eax": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, (%eax);movl %eax, (%ecx);movl , %eax": 1,
                "movl %edx, (%eax);movb -(%ebp), %cl;calll *;movl , %eax;movl (%eax), %ecx": 1,
                "calll - <NtFreeVirtualMemory+>;calll - <NtFreeVirtualMemory+>;movl , %eax;movl (%eax), %ecx;andl $, -(%ebp)": 1,
                "shrl $, %edx;andl %esi, %ecx;movl $, %edi;andl %esi, %edx;subl %edi, %ecx": 1,
                "je  <MmMapUserAddressesToPage+>;incl -(%ebp);addl $, %ecx;cmpl %edx, %ecx;jb - <MmMapUserAddressesToPage+>": 1,
                "movl , %eax;subl %edx, (%eax);addl %edx, -(%ebp);movl -(%ebp), %eax;negl %eax": 1,
                "addl $, %ebx;pushl %ebx;calll - <ExDeleteResourceLite>;movl , %ecx;movl (%ecx), %ecx": 1,
                "movl $, %eax;shrl $, %ecx;andl %eax, %edi;movl $, %edx;andl %eax, %ecx": 1,
                "movl (%ebx), %ecx;andl %esi, %ecx;movb %al, -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %ecx": 1,
                "movl , %eax;movl %eax, (%edi);movl , %eax;movb -(%ebp), %cl;movl %eax, (%edi)": 1,
                "movb %al, -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %eax;movl (%eax), %ecx;andl %esi, %ecx": 1,
                "xaddl %eax, (%ecx);movl , %esi;subl , %esi;xorl %edi, %edi;shrl $, %esi": 1,
                "calll *;pushl $;pushl $;calll - <KeFlushEntireTb>;movl -(%ebp), %esi": 1,
                "andl %eax, (%ecx);pushl ;calll - <MmUnlockPagableImageSection>;testb $, (%esi);je  <MmMapUserAddressesToPage+>": 1,
                "orl %esi, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "jne  <MmMapUserAddressesToPage+>;movl -(%ebp), %ecx;movl $, %eax;lock;andl %eax, (%ecx)": 2,
                "rep  stosl %eax, %es:(%edi);movl $, %edi;movl %edi, %ecx;calll *;pushl $": 1,
                "calll - <MmLockPagableSectionByHandle>;pushl $;xorl %edx, %edx;popl %ecx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "subl , %edx;movb %al, %cl;pushl $;popl %eax;cmpl %eax, %edx": 1,
                "movb %al, %cl;pushl $;popl %eax;cmpl %eax, %edx;movb %cl, -(%ebp)": 1,
                "andl $, -(%ebp);movl -(%ebp), %ecx;movl %eax, -(%ebp);movl $, %esi;andl %esi, %eax": 1,
                "jmp  <MmMapUserAddressesToPage+>;andl $, -(%ebp);cmpl $, -(%ebp);jne  <MmMapUserAddressesToPage+>;movl %edi, %ecx": 2,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movl -(%ebp), %edi;movl %eax, -(%ebp);andl %esi, %eax": 1,
                "movl -(%ebp), %eax;andl $-, %edx;orl -(%ebp), %edx;movl %edi, (%eax);movl -(%ebp), %edi": 1,
                "xorl %ecx, %ecx;shldl $, %eax, %ecx;andl $-, %edi;orl %edi, %ecx;movl , %edi": 1,
                "andl %ebx, %esi;movl , %ebx;orl -(%ebp), %esi;shrl $, %ebx;andl $-, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);pushl $;popl %eax;movl %eax, (%esi)": 1,
                "subl %ecx, %edx;movl (%edi), %ecx;addl $, %edx;sarl $, %edx;movl %ecx, (%eax,%edx,)": 1,
                "movl -(%ebp), %edi;leal (%edi), %eax;pushl %eax;movl $, -(%ebp);calll - <MmGetSystemRoutineAddress+>": 1,
                "pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>;cmpl %esi, -(%ebp);jne  <MmMapUserAddressesToPage+>": 1,
                "jne  <MmMapUserAddressesToPage+>;movl , %edi;shrl $, %edi;andl $, %edi;subl $, %edi": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "addl $, ;calll *;movl $, %edi;cmpl $, -(%ebp);je  <MmMapUserAddressesToPage+>": 1,
                "movl -(%ebp), %ecx;movl $, %eax;lock;andl %eax, (%ecx);movl $, %eax": 1,
                "movl $, %eax;jmp  <MmMapUserAddressesToPage+>;pushl ;calll - <MmUnlockPagableImageSection>;movl -(%ebp), %ecx": 1,
                "calll - <MmUnlockPagableImageSection>;movl -(%ebp), %ecx;leal (%edi), %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "xorl %edx, %edx;cmpl $, (%ebp);leal (%edi), %eax;movl %edx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, (%edi);movl , %eax;cmpl , %eax;movl %eax, (%ebp);jae  <MmMapUserAddressesToPage+>": 2,
                "andl $, %edx;movl %edx, %ecx;xorl %edx, %ecx;notl %ecx;testl %ecx, %ecx": 1,
                "movl %edi, %ecx;shrl %cl, %eax;incl -(%ebp);testb $, %al;jne  <MmMapUserAddressesToPage+>": 1,
                "shrl %cl, %ebx;andl $, %ebx;xorl %edx, %ebx;notl %ebx;testl %ebx, %ebx": 1,
                "jne - <MmMapUserAddressesToPage+>;movl (%ebp), %edi;movl %edi, %eax;subl -(%ebp), %eax;xorl %esi, %esi": 1,
                "movl (%ebp), %edi;movl %edi, %eax;subl -(%ebp), %eax;xorl %esi, %esi;cmpl %esi, %edx": 1,
                "pushl %ebx;pushl (%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "incl (%ecx);movl (%ebp), %ecx;addl $, (%ebx);cmpl (%ebx), %ecx;jae  <MmMapUserAddressesToPage+>": 1,
                "movl , %eax;movl %eax, (%edi);movl , %eax;movl %eax, (%edi);movl , %eax": 1,
                "jae  <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>;movl (%ebp), %edi;xorl %edx, %edx;movl %edx, -(%ebp)": 1,
                "cmpl $, ;jne  <MmMapUserAddressesToPage+>;pushl %edx;pushl %esi;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "shll $, %eax;incl (%edi);addl $, (%ecx);cmpl (%ecx), %esi;jae  <MmMapUserAddressesToPage+>": 1,
                "movb $, (%ecx);movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %ecx;movw %dx, (%ecx)": 1,
                "addl $, -(%ebp);movl %edx, -(%ebp);addl %eax, (%ebp);movl $, -(%ebp);incl -(%ebp)": 1,
                "cmpl $, -(%ebp);jb - <MmMapUserAddressesToPage+>;movl (%ebp), %eax;subl , %eax;movl %eax, %ecx": 1,
                "sbbl %ecx, %ecx;negl %ecx;shrl $, %eax;addl %eax, %ecx;cmpl , %ecx": 1,
                "negl %ecx;shrl $, %eax;addl %eax, %ecx;cmpl , %ecx;jae  <MmMapUserAddressesToPage+>": 1,
                "shrdl $, %edx, %eax;shrl $, %edx;movl (%ebp), %edx;shrl $, %edx;andl $, %eax": 1,
                "shrl $, %edx;movl (%ebp), %edx;shrl $, %edx;andl $, %eax;andl $, %edx": 1,
                "jmp  <MmMapUserAddressesToPage+>;movl (%ebp), %ecx;shrl $, %ecx;andl $, %ecx;movl -(%ecx), %edx": 1,
                "testb $, (%eax);je - <MmMapUserAddressesToPage+>;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 1,
                "jne  <MmMapUserAddressesToPage+>;movl -(%ebp), %eax;pushl (%eax);pushl %eax;calll - <MmTrimAllSystemPagableMemory+>": 2,
                "movl %edi, -(%ebp);addl %esi, (%ebp);movl (%ebp), %eax;cmpl , %eax;jb - <MmMapUserAddressesToPage+>": 1,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;jmp  <MmMapUserAddressesToPage+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <MmLockPagableSectionByHandle>;pushl %esi": 1,
                "pushl %esi;calll - <ExAcquireSharedWaitForExclusive+>;movb %al, -(%ebp);movl (%ebp), %eax;decl %eax": 1,
                "leal (%esi), %ecx;movl (%ecx), %eax;cmpl (%ebp), %eax;movl %esi, %ebx;movl %ecx, -(%ebp)": 1,
                "andl %edi, %esi;cmpl $, ;jne  <MmMapUserAddressesToPage+>;movl (%ebx), %eax;movl (%ebx), %ecx": 1,
                "andl %edi, %edx;xorl %eax, %eax;cmpl %edi, %edx;jne  <MmMapUserAddressesToPage+>;testl %eax, %eax": 1,
                "subl $, %ecx;movl (%ecx), %eax;shrdl $, %edx, %eax;shrl $, %edx;movl $, %edx": 1,
                "cmpl %eax, (%ebp);jne  <MmMapUserAddressesToPage+>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <MmMapUserAddressesToPage+>": 1,
                "movl %eax, -(%ebp);jmp - <MmMapUserAddressesToPage+>;xorl %edi, %edi;cmpl $, (%ebp);je  <MmMapUserAddressesToPage+>": 1,
                "shrdl $, %eax, %ebx;shrl $, %eax;movl %eax, (%ebp);movl %ebx, %eax;movl (%ebp), %ebx": 1,
                "subl $, %ecx;movl (%ecx), %eax;shrdl $, %ebx, %eax;shrl $, %ebx;andl %edx, %eax": 1,
                "movl (%ecx), %eax;movl (%ecx), %ebx;shrdl $, %ebx, %eax;andl %edx, %eax;imull $, %eax, %eax": 1,
                "shrdl $, %ebx, %eax;andl %edx, %eax;imull $, %eax, %eax;shrl $, %ebx;addl , %eax": 1,
                "movl (%ebp), %edi;andl %edx, %eax;shrl $, %esi;andl $, %esi;addl %esi, %eax": 1,
                "subl $, %esi;movl %esi, %ecx;movl (%ecx), %eax;movl (%ecx), %esi;shrdl $, %esi, %eax": 1,
                "shrdl $, %esi, %eax;andl %edx, %eax;imull $, %eax, %eax;shrl $, %esi;addl , %eax": 1,
                "subl %edi, ;movl $, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx)": 1,
                "xaddl %eax, (%ecx);movb (%ebp), %cl;calll *;movl -(%ebp), %ecx;movl , %eax": 1,
                "jbe  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;incl %eax;movl %eax, -(%ebp);movl (%ebp), %edx": 1,
                "testl %ecx, %ecx;je  <MmMapUserAddressesToPage+>;leal (%esi,%edi), %ecx;cmpl %eax, %ecx;ja  <MmMapUserAddressesToPage+>": 1,
                "andl $, %eax;cmpl $, %eax;jne  <MmMapUserAddressesToPage+>;movl %edi, %ecx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "jne  <MmMapUserAddressesToPage+>;movb (%ebp), %cl;calll *;andl $, -(%ebp);calll *%ebx": 1,
                "incl %esi;incl -(%ebp);addl $, %edi;cmpl -(%ebp), %esi;jb - <MmMapUserAddressesToPage+>": 1,
                "jb - <MmMapUserAddressesToPage+>;movb (%ebp), %cl;calll *;movl (%ebp), %edi;incl -(%ebp)": 1,
                "andl $, %eax;orl (%ebp), %eax;movl $, (%edi);andl $-, %eax;orl $, %eax": 1,
                "orl $, (%esi);movb (%ebp), %cl;movl , %ebx;orl $, (%edi);calll *%ebx": 1,
                "calll *;andl $-, (%esi);andl $-, (%edi);movb %al, (%ebp);addl $, %esi": 1,
                "retl;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ;jne  <MmMapUserAddressesToPage+>": 1,
                "movl $, ;movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll *;movl %eax, %esi": 1,
                "movb %al, -(%ebp);movl (,%ebx,), %eax;movl (%eax), %ecx;testl %ecx, %ecx;je  <MmMapUserAddressesToPage+>": 1,
                "je  <MmMapUserAddressesToPage+>;cmpl $, %ebx;jne  <MmMapUserAddressesToPage+>;cmpl , %ecx;je  <MmMapUserAddressesToPage+>": 1,
                "movb -(%ebp), %cl;movl $, ;calll *;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "calll - <MmUnlockPagableImageSection>;andl $, ;jmp  <MmMapUserAddressesToPage+>;calll *;pushl %edi": 1,
                "andl $, ;jmp  <MmMapUserAddressesToPage+>;calll *;pushl %edi;movb %al, -(%ebp)": 1,
                "jge  <MmMapUserAddressesToPage+>;pushl ;calll - <MmUnlockPagableImageSection>;movl %edi, ;movl %edi, ": 1,
                "movl %edi, ;movl %edi, ;jmp  <MmMapUserAddressesToPage+>;testb $, ;je  <MmMapUserAddressesToPage+>": 1,
                "je  <MmMapUserAddressesToPage+>;subl %esi, %eax;incl %eax;pushl %eax;pushl %esi": 1,
                "testb $, ;je  <MmMapUserAddressesToPage+>;movl , %eax;subl %esi, %eax;incl %eax": 1,
                "pushl %esi;pushl ;calll - <RtlClearBits>;xorl %esi, %esi;pushl %esi": 1,
                "cmpl (%eax), %esi;jb - <MmMapUserAddressesToPage+>;testb $, ;je  <MmMapUserAddressesToPage+>;xorl %esi, %esi": 1,
                "calll *%ebx;movl , %ecx;testl %ecx, %ecx;movb %al, %dl;je  <MmMapUserAddressesToPage+>": 1,
                "movl , %ecx;testl %ecx, %ecx;movb %al, %dl;je  <MmMapUserAddressesToPage+>;addl $, %ecx": 1,
                "cmpl %ebx, ;pushl %esi;jne  <MmMapUserAddressesToPage+>;calll *;cmpl %ebx, ": 1,
                "je  <MmMapUserAddressesToPage+>;calll - <PsTerminateSystemThread+>;pushl %ebx;pushl %ebx;pushl $": 1,
                "movl %esi, %ecx;movb %bl, ;calll *;movl $, %esi;jmp  <MmMapUserAddressesToPage+>": 1,
                "pushl (%eax);calll *(%eax);movl , %eax;cmpl %esi, %eax;jne - <MmMapUserAddressesToPage+>": 1,
                "calll - <MmMapUserAddressesToPage+>;movl %ebx, ;movl %fs:, %eax;movl , %ecx;pushl %ebx": 1,
                "cmpl $, (%ebx);je  <MmMapUserAddressesToPage+>;pushl %esi;pushl %edi;movl (%ebp), %edi": 1,
                "movl (%ebp), %edi;movl (%ebx), %esi;movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax": 1,
                "calll - <MmUnmapLockedPages>;pushl %esi;calll - <MmAdjustWorkingSetSize+>;pushl $;pushl %esi": 1,
                "movl (%ebp), %ecx;addl $, %edx;movl (%edx), %eax;cmpl %eax, %ecx;ja  <MmMapUserAddressesToPage+>": 1,
                "movl (%eax), %esi;movl %ecx, (%ebp);jmp  <MmMapUserAddressesToPage+>;movl (%esi), %edx;cmpl %edx, %edi": 1,
                "cmpl %edi, %edx;jb  <MmMapUserAddressesToPage+>;cmpl (%esi), %ecx;jae  <MmMapUserAddressesToPage+>;cmpl %edi, %edx": 1,
                "jbe  <MmMapUserAddressesToPage+>;movl %ecx, (%esi);jmp  <MmMapUserAddressesToPage+>;movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %eax, (%esi);incl (%ebx);popl %edi;popl %esi;popl %ebx": 1,
                "movl $, %ecx;calll - <PoSetPowerState+>;subl %ebx, %esi;movl %esi, %eax;cmpl $, %eax": 1,
                "movl %ecx, (%esi);movl %edi, (%esi);movw %di, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "decl %eax;jne - <MmMapUserAddressesToPage+>;pushl %esi;calll - <MmMapMemoryDumpMdl>;orb $, (%esi)": 1,
                "calll - <MmMapMemoryDumpMdl>;orb $, (%esi);testw $, (%esi);je  <MmMapUserAddressesToPage+>;pushl %edi": 1,
                "andb %dh, (%ebx);jae  <MmMapUserAddressesToPage+>;insl %dx, %es:(%edi);orb (%eax), %al;int": 1,
                "pushl $;pushl $;pushl $;movl %eax, %esi;calll - <InbvSolidColorFill>": 1,
                "je  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;movb $, (%eax);jmp  <MmMapUserAddressesToPage+>;jmp - <MmMapUserAddressesToPage+>": 1,
                "incl %ebp;insb %dx, %es:(%edi);popal;jo  <MmMapUserAddressesToPage+>;andb %dh, %fs:(%ecx,%ebp,)": 1,
                "arpl %cx, (%edx);addb %al, (%eax);addb %al, (%eax);decl %eax;decl %ecx": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andl $, %eax;xorb %dh, (%ebx);andb %dh, %fs:(%ebx)": 1,
                "incl %ebx;outsl (%esi), %dx;jo  <MmMapUserAddressesToPage+>;andb %dh, (%ecx,%ebp,);andb %ah, %gs:(%eax)": 1,
                "addl $, %esp;testl %ecx, %ecx;je  <MmMapUserAddressesToPage+>;movl (%esi), %eax;imull $, %eax, %eax": 2,
                "movl %edi, %ebx;divl %ebx;pushl %ecx;pushl %edx;pushl %eax": 1,
                "divl %ebx;pushl %ecx;pushl %edx;pushl %eax;pushl $": 1,
                "pushl (%esi);pushl %ecx;pushl %edx;pushl %eax;pushl $": 1,
                "calll - <DbgPrint>;addl $, %esp;popl %edi;popl %esi;popl %ebx": 2,
                "je  <MmMapUserAddressesToPage+>;addl %ecx, %edx;movl %edx, (%eax);jmp  <MmMapUserAddressesToPage+>;addl %ecx, (%eax)": 1,
                "addl %ecx, (%eax);movl (%eax), %ecx;cmpl (%eax), %ecx;jne  <MmMapUserAddressesToPage+>;movl (%eax), %ecx": 1,
                "xorl %ecx, %ecx;cmpb %bl, (%ebp);setne %cl;incl %ecx;incl %ecx": 1,
                "xorl %ebx, %ebx;addl $, %eax;pushl %eax;pushl (%ebp);pushl %edi": 1,
                "cmpb $, (%ebx);je  <MmMapUserAddressesToPage+>;cmpl $, (%ebx);jl  <MmMapUserAddressesToPage+>;pushl %esi": 1,
                "movl %edx, (%eax,%ecx);addl $, %eax;incl (%ebp);subl $, %edi;jne - <MmMapUserAddressesToPage+>": 1,
                "pushl $;pushl %ebx;calll - <MmMapUserAddressesToPage+>;popl %edi;popl %esi": 1,
                "movl (%ebp), %esi;cmpl %ecx, %esi;leal -(%ebp), %eax;pushl %edi;movl %eax, (%ebp)": 1,
                "je  <MmMapUserAddressesToPage+>;movl (%ebx), %eax;cmpl %ecx, (%eax);movl %esi, (%ebp);je  <MmMapUserAddressesToPage+>": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, (%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, (%ebp);movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl $, %ecx;calll - <PoSetPowerState+>;movl (%ebp), %eax;andl $, (%ebp);movl (%ebp), %ecx": 1,
                "calll - <PoSetPowerState+>;movl (%ebp), %eax;andl $, (%ebp);movl (%ebp), %ecx;movl (%ebx), %edi": 1,
                "jbe  <MmMapUserAddressesToPage+>;movl (%edi), %eax;movl (%eax), %ecx;addl %ecx, (%edi);movl (%eax), %ecx": 1,
                "movl (%ebp), %edx;movl %eax, -(%ebp);movl (%edi), %ecx;xorl %eax, %eax;addl -(%ebp), %edx": 1,
                "movl %eax, (%ebp);rdtsc;subl %esi, %eax;sbbl %edi, %edx;leal (%ebx), %ecx": 1,
                "leal (%ebx), %ecx;addl %eax, (%ecx);adcl %edx, (%ecx);xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "movl (%ebx), %ecx;movl $, (%ecx);movl (%ebx), %ecx;movl %eax, (%ecx);pushl (%ebp)": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;movl %edx, (%ecx);movl %eax, (%ecx);movw $, (%ecx)": 1,
                "movl %eax, (%ebp);pushl (%ebp);calll - <MmGetPhysicalAddress>;movb $, %cl;movl %eax, -(%ebp)": 1,
                "movl %edx, -(%ebp);calll - <_allshr>;movl -(%ebp), %ecx;movl -(%ebp), %edx;addl $, (%ebp)": 1,
                "movl (%ebx), %eax;andl $, (%eax);movl (%ebp), %ecx;movl (%ebx), %eax;pushl %ecx": 1,
                "leal (%ebx), %eax;sbbl -(%ebp), %ecx;addl %edx, (%eax);adcl %ecx, (%eax);movl (%ebp), %eax": 1,
                "addl %ecx, (%ebx);incl (%ebx);subl %eax, (%ebp);addl %eax, -(%ebp);adcl $, -(%ebp)": 1,
                "pushl (%ebx);leal (%ebx), %eax;pushl %eax;pushl %ebx;calll - <MmMapUserAddressesToPage+>": 1,
                "leal (%esi), %eax;pushl %eax;pushl $;pushl %esi;calll - <MmMapUserAddressesToPage+>": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;popl %edi;je  <MmMapUserAddressesToPage+>;pushl %ebx": 1,
                "jae  <MmMapUserAddressesToPage+>;movl %ecx, (%ebp);leal (%esi,%edi,), %ecx;movl -(%ecx), %edx;incl %edx": 1,
                "calll - <ExFreePoolWithTag>;cmpb %bl, (%ebp);je  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "cmpb %bl, (%ebp);je  <MmMapUserAddressesToPage+>;movl (%ebp), %eax;cmpl %ebx, (%eax);jl  <MmMapUserAddressesToPage+>": 1,
                "calll - <MmMapUserAddressesToPage+>;jmp  <MmMapUserAddressesToPage+>;pushl %edx;pushl %ecx;pushl %eax": 1,
                "jmp  <MmMapUserAddressesToPage+>;pushl %edx;pushl %ecx;pushl %eax;calll - <RtlClearBits>": 1,
                "je  <MmMapUserAddressesToPage+>;cmpl $, (%esi);jne  <MmMapUserAddressesToPage+>;cmpl %ecx, (%esi);jb  <MmMapUserAddressesToPage+>": 1,
                "calll - <MmMapLockedPages>;testl %eax, %eax;movl %eax, (%edi);je  <MmMapUserAddressesToPage+>;movl (%esi), %eax": 1,
                "pushl %edi;calll - <MmMapUserAddressesToPage+>;testl %eax, %eax;je  <MmMapUserAddressesToPage+>;cmpl (%edi), %ebx": 1,
                "calll - <MmGetPhysicalAddress>;movb $, %cl;calll - <_allshr>;movl %eax, %ecx;leal (%esi), %eax": 1,
                "movl $, -(%ebp);jae  <PoSetHiberRange+>;leal (%esi), %edi;movl %ecx, -(%ebp);shll $, %edi": 1,
                "calll *;movb %al, %bl;leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "pushl (%ebp);pushl $;pushl %esi;calll - <PoSetHiberRange>;movl $, %eax": 1,
                "calll - <PoSetHiberRange>;movl $, %eax;pushl $;pushl $;pushl %eax": 1,
                "pushl $;pushl %eax;pushl $;pushl %esi;calll - <PoSetHiberRange>": 2,
                "je  <PoSetHiberRange+>;leal (%ebx), %eax;cmpl %eax, %edi;jne - <PoSetHiberRange+>;andl $, (%ebp)": 1,
                "calll - <PoUnregisterSystemState+>;movl $, %esi;addl %esi, %eax;xorl %edx, %edx;movl $, %ecx": 1,
                "movl (%ebx), %edx;movl %edx, (%eax);movl %eax, (%ebx);addl $, %eax;decl %ecx": 1,
                "addl %edi, (%ebp);pushl %ebx;calll - <PoUnregisterSystemState+>;addl %esi, %eax;xorl %edx, %edx": 1,
                "movl (%esi), %esi;testl %esi, %esi;jne  <PoSetHiberRange+>;movl $, %ecx;calll - <PoSetPowerState+>": 2,
                "testl %esi, %esi;jne  <PoSetHiberRange+>;movl $, %ecx;calll - <PoSetPowerState+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;cmpl (%edi), %eax;movl %eax, -(%ebp);jb - <PoSetHiberRange+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebx), %eax;jmp  <PoSetHiberRange+>;movl $, %eax": 1,
                "testl %ecx, %ecx;je  <PoSetHiberRange+>;movl %ecx, %eax;shll $, %eax;addl %eax, (%esi)": 1,
                "movl (%ebx), %eax;cmpl %ebx, %eax;jne  <PoSetHiberRange+>;pushl (%ebp);subl %edi, %eax": 1,
                "pushl %eax;pushl %edi;pushl (%ebp);pushl %esi;pushl $": 1,
                "pushl (%ebp);pushl %esi;pushl $;calll - <PoSetHiberRange+>;addl $, -(%ebp)": 1,
                "movl (%ebp), %ecx;addl $, %ecx;subl -(%ebp), %eax;sbbl -(%ebp), %edx;addl %eax, (%ecx)": 1,
                "pushl %ebx;calll - <MmMapUserAddressesToPage+>;movl (%ebp), %eax;addl %eax, (%esi);movl %edi, %ecx": 1,
                "rep  movsb (%esi), %es:(%edi);rdtsc;subl -(%ebp), %eax;leal (%ebx), %ecx;sbbl -(%ebp), %edx": 1,
                "calll  <RtlCompressBuffer+>;movl %eax, (%ebp);movl %eax, %ecx;cmpl (%ebp), %ecx;jb  <PoSetHiberRange+>": 1,
                "leal (%ebx), %ecx;addl %eax, (%ecx);adcl %edx, (%ecx);movl (%ebp), %ecx;movl , %eax": 1,
                "movl (%ebp), %edx;movl %eax, (%esi);movl , %eax;movl %eax, (%esi);leal -(%ecx), %eax": 1,
                "pushl %edi;pushl $;pushl %ebx;calll - <PoSetHiberRange>;movl %edi, %eax": 1,
                "movl (%ebp), %edi;je  <PoSetHiberRange+>;pushl %edi;subl %esi, %eax;sarl $, %eax": 1,
                "popal;je  <PoSetHiberRange+>;pushl $;insb %dx, %es:(%edi);andb %ah, ": 1,
                "rep  stosl %eax, %es:(%edi);movl (%ebx), %eax;testl %eax, %eax;movl %edx, -(%ebp);je  <PoSetHiberRange+>": 1,
                "cmpl %esi, ;ja  <PoSetHiberRange+>;movl (%eax), %esi;movl (%ebp), %eax;shrl $, %esi": 1,
                "jb  <PoSetHiberRange+>;movl (%ebx), %esi;pushl $;movl %edx, %edi;addl $, %esi": 1,
                "movl -(%ebp), %edi;movl (%ebp), %ecx;pushl $;pushl $;pushl $": 1,
                "movl $, %ecx;rep  stosl %eax, %es:(%edi);movl (%ebx), %esi;movl -(%ebp), %edi;pushl $": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);xorl %esi, %esi;pushl %esi;calll - <PoSetPowerState+>": 1,
                "movl %edx, (%ebp);movl $, -(%ebp);movl %esi, (%ebx);movl %eax, -(%ebp);movl $, (%ebp)": 1,
                "movl %edx, -(%ebp);pushl %esi;pushl %ebx;calll - <MmMapUserAddressesToPage+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl -(%ebp), %eax;je  <PoSetHiberRange+>;pushl %eax;pushl %ebx;movl %eax, -(%ebp)": 2,
                "je  <PoSetHiberRange+>;pushl %eax;pushl %ebx;movl %eax, -(%ebp);calll - <MmMapUserAddressesToPage+>": 2,
                "movl -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "addl %esi, -(%ebp);cmpl -(%ebp), %eax;je  <PoSetHiberRange+>;pushl %eax;pushl %ebx": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx;cmpl (%eax), %ecx;jbe - <PoSetHiberRange+>": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;cmpl (%eax), %ecx;jbe - <PoSetHiberRange+>;leal (%ebp), %eax": 1,
                "pushl (%ebp);pushl $;pushl %eax;pushl %ebx;calll - <MmMapUserAddressesToPage+>": 1,
                "pushl %eax;pushl %ebx;calll - <MmMapUserAddressesToPage+>;movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "calll - <PoUnregisterSystemState+>;subl (%ebx), %eax;pushl %esi;sbbl (%ebx), %edx;movl $, %esi": 1,
                "calll - <_aulldiv>;pushl $;pushl %esi;pushl (%ebx);movl %eax, (%ebx)": 2,
                "movl , %eax;shrl $, %eax;pushl $;decl %eax;movl %eax, (%ebx)": 1,
                "shrl $, %eax;pushl $;decl %eax;movl %eax, (%ebx);movl $, (%edi)": 1,
                "pushl $;pushl %ebx;calll - <MmMapUserAddressesToPage+>;cmpl %esi, (%ebx);jge - <PoSetHiberRange+>": 1,
                "testl $, %eax;je  <PoSetHiberRange+>;leal (%ebx), %eax;pushl %eax;calll - <MmMapUserAddressesToPage+>": 1,
                "je  <PoSetHiberRange+>;leal (%ebx), %eax;pushl %eax;calll - <MmMapUserAddressesToPage+>;movl , %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;subl $, %esp;calll - <ZwYieldExecution+>": 1,
                "movl %esp, %ebp;subl $, %esp;calll - <ZwYieldExecution+>;testb %al, %al;je  <PoSetHiberRange+>": 1,
                "calll - <ZwYieldExecution+>;testb %al, %al;je  <PoSetHiberRange+>;movl $, %ecx;calll - <PoSetPowerState+>": 1,
                "movl $, %ecx;calll - <PoSetPowerState+>;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebx), %esi;leal -(%ebp), %eax;movl $, %edx": 1,
                "movl %eax, (%ebx);xorl %eax, %eax;movl %edx, %edi;movl $, %ecx;pushl %edx": 1,
                "calll - <DbgBreakPoint>;movl $, %eax;jmp  <PoSetHiberRange+>;movl $, (%esi);cmpb $, (%ebx)": 1,
                "pushl $;calll - <InbvDisplayString+>;pushl $;movl %eax, (%ebp);calll - <InbvDisplayString+>": 1,
                "jmp  <PoSetHiberRange+>;movl %edi, (%ecx);xorl %ecx, %ecx;incl %ecx;incl %edi": 1,
                "int;aas;addb %al, (%eax);addb %dl, (%ebx);jne  <PoSetHiberRange+>": 1,
                "xorl %eax, (%bx,%si);addb %al, (%eax);pushl %edi;outsl (%esi), %dx;jb  <PoSetHiberRange+>": 1,
                "outsl (%esi), %dx;jb  <PoSetHiberRange+>;imull $, (%esi), %ebp;jo  <PoSetHiberRange+>;arpl %bp, (%ecx)": 1,
                "imull $, (%esi), %ebp;jo  <PoSetHiberRange+>;arpl %bp, (%ecx);imull $, (%ebp), %esp;int": 1,
                "movl $, %eax;jmp  <PoSetHiberRange+>;movl $, %eax;jmp  <PoSetHiberRange+>;movl $, %eax": 6,
                "calll - <ObIsDosDeviceLocallyMapped+>;testl %eax, %eax;jne  <PoSetHiberRange+>;pushl %ebx;pushl %esi": 1,
                "jne  <PoSetHiberRange+>;pushl %ebx;pushl %esi;calll - <ObIsDosDeviceLocallyMapped+>;testl %eax, %eax": 1,
                "calll *;cmpl %ebx, (%esi);movb %al, (%ebp);je  <PoSetHiberRange+>;movl (%esi), %eax": 1,
                "cmpb %bl, %al;je  <PoSetHiberRange+>;pushl -(%ebp);pushl ;pushl ": 1,
                "movl $, %esi;pushl %ebx;calll - <PoShutdownBugCheck+>;pushl ;calll - <MmUnlockPagableImageSection>": 1,
                "pushl ;calll - <MmUnlockPagableImageSection>;pushl $;calll - <ExSetTimerResolution+>;pushl %ebx": 1,
                "jne  <PoSetHiberRange+>;calll - <PoShutdownBugCheck+>;movb $, -(%ebp);cmpl %ebx, ;je  <PoSetHiberRange+>": 1,
                "calll  <PoSetHiberRange+>;movl , %eax;movl %eax, ;movl , %eax;shrl $, %eax": 1,
                "pushl $;calll - <PoShutdownBugCheck+>;movb $, ;cmpb %bl, -(%ebp);je  <PoSetHiberRange+>": 1,
                "je  <PoSetHiberRange+>;movb %bl, -(%ebp);movl -(%ebp), %eax;movl %eax, ;andb $-, ": 1,
                "testb %al, %al;je  <PoSetHiberRange+>;cmpl $, -(%ebp);je  <PoSetHiberRange+>;cmpl $, ": 1,
                "cmpb %bl, -(%ebp);jne  <PoSetHiberRange+>;cmpb %bl, ;je  <PoSetHiberRange+>;leal -(%ebp), %eax": 1,
                "movb $, -(%ebp);calll - <PoShutdownBugCheck+>;movb $, ;cmpb %bl, ;jne  <PoSetHiberRange+>": 1,
                "movb $, ;cmpb %bl, ;jne  <PoSetHiberRange+>;cmpb %bl, -(%ebp);jne  <PoSetHiberRange+>": 1,
                "jne  <PoSetHiberRange+>;cmpb %bl, -(%ebp);jne  <PoSetHiberRange+>;movb $, -(%ebp);pushl $": 1,
                "cmpb %bl, ;je  <PoSetHiberRange+>;cmpb %bl, ;je  <PoSetHiberRange+>;movl $, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %esi;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %ecx": 1,
                "pushl -(%ebp);calll - <ObReferenceObjectByHandle>;movl -(%ebp), %ecx;movl %ecx, -(%ebp);calll - <ObfDereferenceObject>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <XIPDispatch+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <RtlCompressBuffer+>;movl , %eax;cmpl %ebx, %eax": 1,
                "movl $, %eax;jmp  <PoSetHiberRange+>;calll - <MmMapUserAddressesToPage+>;pushl $;calll *": 1,
                "jne  <PoSetHiberRange+>;movl -(%ebp), %esi;cmpl %ebx, %esi;je  <PoSetHiberRange+>;pushl %ebx": 1,
                "je  <PoSetHiberRange+>;pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "incl %esi;pushl %esi;calll - <MmMapUserAddressesToPage+>;testb $, ;jne  <PoSetHiberRange+>": 1,
                "je  <PoSetHiberRange+>;calll - <ExSystemExceptionFilter+>;pushl %esi;pushl $;calll - <ExQueueWorkItem>": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl %edi, %eax;movl -(%ebp), %ecx;calll - <KeRaiseUserException+>;calll - <wctomb+>": 1,
                "int;int;int;pushl $;calll - <MmMapUserAddressesToPage+>": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax;cmpl %edx, %eax;je  <PoSetHiberRange+>": 1,
                "je  <PoSetHiberRange+>;pushl %esi;movl %eax, %ecx;movl (%eax), %eax;cmpl %edx, %eax": 1,
                "movl %esi, (%ecx);jne - <PoSetHiberRange+>;popl %esi;popl %ebp;retl $": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;xorl %edx, %edx;cmpl %edx, %ecx;jge  <PoSetHiberRange+>": 1,
                "ja  <PoSetHiberRange+>;andb %al, (%eax);addb %al, (%eax);addb %ah, ;jb  <PoSetHiberRange+>": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %esi;decl %eax": 1,
                "movl $, %ebx;pushl (%ebp);pushl $;calll - <DbgPrint>;movl (%esi), %eax": 1,
                "popl %ecx;popl %ecx;je  <PoSetHiberRange+>;pushl %eax;pushl $": 2,
                "pushl (%eax);movl , %eax;pushl (%eax);calll - <PoSetHiberRange+>;pushl %eax": 1,
                "movl (%ebx), %eax;andl $, (%edx);movl %eax, (%edx);movb $, (%edx);movl , %eax": 1,
                "movl (%ecx), %eax;cmpl , %eax;je  <PoSetHiberRange+>;movb $, (%ecx);popl %ebp": 1,
                "je  <PoSetHiberRange+>;leal (%esi), %edx;movl (%edx), %edi;leal (%ecx), %eax;movl %edx, (%eax)": 2,
                "movl $, -(%ebp);jne - <PoSetHiberRange+>;movb (%ebp), %dl;movl -(%ebp), %ecx;calll *": 1,
                "calll *%ebx;movb %al, (%ebp);jmp - <PoSetHiberRange+>;leal (%esi), %eax;cmpl %eax, (%eax)": 1,
                "movb $, -(%ebp);movl (%esi), %edi;movl (%edi), %eax;movl (%edi), %ecx;movl %eax, (%ecx)": 1,
                "movb (%ebp), %dl;movl -(%ebp), %ecx;calll *;pushl %edi;pushl $": 1,
                "movl %ecx, (%edi);movl %edi, (%eax);jmp  <PoSetHiberRange+>;leal (%esi), %ecx;movl (%ecx), %edx": 1,
                "jne - <PoSetHiberRange+>;movb (%ebp), %dl;movl -(%ebp), %ecx;calll *;popl %edi": 1,
                "movb (%ebp), %dl;movl -(%ebp), %ecx;calll *;popl %edi;popl %esi": 1,
                "movl %edx, (%ecx);leal (%ebx), %ecx;movl (%ecx), %edx;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "decl (%eax);jne  <PoSetHiberRange+>;movl (%eax), %ecx;movl (%eax), %edx;movl %ecx, (%edx)": 1,
                "jne  <PoSetHiberRange+>;movb $, -(%ebp);pushl $;pushl (%ebp);pushl %esi": 1,
                "je  <PoSetHiberRange+>;pushl $;pushl $;addl $, %esi;pushl %esi": 1,
                "je  <PoSetHiberRange+>;movl $, %esi;movl %esi, %ecx;calll *;movb %al, %dl": 1,
                "movl (%ebp), %eax;movb $, (%eax);movl (%ebp), %eax;movl %eax, (%esi);leal (%edi), %eax": 1,
                "andl $, (%edx);jmp  <PoSetHiberRange+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movl %eax, (%esi)": 1,
                "movl %ecx, (%eax);leal (%edi), %ecx;movl (%ecx), %eax;movl %ecx, (%esi);movl %eax, (%esi)": 1,
                "cmpl $, (%edi);je  <PoSetHiberRange+>;movl %esi, %ecx;calll *%ebx;pushl $": 1,
                "jae  <PoSetHiberRange+>;pushl %ebx;leal (%esi), %ebx;cmpl %ebx, (%ebx);je  <PoSetHiberRange+>": 1,
                "popl %ebp;retl $;int;jo  <PoSetHiberRange+>;cmpb (%eax), %ah": 1,
                "pushl %eax;andb %ah, (%ebp);popal;bound (%ebp), %ebp;orb %cs:(%eax), %al": 1,
                "movb , %al;movb %al, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <PoSetHiberRange+>;movb $, -(%ebp);cmpb $, ;je  <PoSetHiberRange+>;movb $, (%esi)": 1,
                "testb %bl, %bl;jne  <PoSetHiberRange+>;cmpb %bl, (%esi);je  <PoSetHiberRange+>;leal (%esi), %edi": 1,
                "cmpb $, -(%ebp);je  <PoSetHiberRange+>;cmpl $, %edi;jg  <PoSetHiberRange+>;movb $, -(%ebp)": 1,
                "xchgl %eax, (%ecx);cmpl $, ;je  <PoSetHiberRange+>;pushl $;calll - <MmMapUserAddressesToPage+>": 1,
                "calll - <MmMapUserAddressesToPage+>;pushl (%esi);pushl $;calll - <PoSetPowerState+>;cmpb $, ": 1,
                "jge  <PoSetHiberRange+>;movb $, -(%ebp);testb $-, ;je  <PoSetHiberRange+>;movl (%esi), %eax": 1,
                "pushl %esi;calll - <PoSetHiberRange+>;xorl %eax, %eax;cmpl %eax, (%esi);jl  <PoSetHiberRange+>": 1,
                "jge - <PoSetHiberRange+>;jmp  <PoSetHiberRange+>;cmpl %eax, (%esi);movb $, (%ebp);je  <PoSetHiberRange+>": 1,
                "pushl (%esi);pushl ;calll - <PoSetPowerState+>;cmpl $, %eax;jne  <PoSetHiberRange+>": 1,
                "testb $, ;je  <PoSetHiberRange+>;cmpb $, ;jne  <PoSetHiberRange+>;pushl $": 1,
                "popl %ecx;movb $, (%ebp);movl $, (%esi);jmp  <PoSetHiberRange+>;movl , %ecx": 1,
                "movl %edx, (%ecx);calll - <PoSetHiberRange+>;pushl (%edi);calll - <IoFreeIrp>;andl $, (%edi)": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;calll ;movl (%esi), %eax": 1,
                "pushl %eax;pushl $;calll ;movl (%esi), %eax;popl %edi": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %al, (%eax);pushl %esp;pushl $": 1,
                "jne - <PoSetHiberRange+>;pushl $;calll - <InbvDisplayString>;pushl $;calll - <InbvDisplayString>": 1,
                "movl %eax, %ebx;jmp  <PoSetHiberRange+>;pause;movl (%esi), %eax;cmpl (%edi), %eax": 1,
                "decl %eax;jne  <PoSetHiberRange+>;cmpb $, (%edi);je  <PoSetHiberRange+>;addl $, %edi": 1,
                "movb (%ebx), %cl;calll *(%ebx);jmp  <PoSetHiberRange+>;xorl %eax, %eax;movb (%edi), %al": 1,
                "pushl (%eax);pushl (%esi);calll *(%eax);jmp  <PoSetHiberRange+>;movl (%esi), %eax": 1,
                "movb %al, (%edi);calll - <ZwYieldExecution+>;movb %al, (%edi);jmp  <PoSetHiberRange+>;pushl (%esi)": 1,
                "jmp  <PoSetHiberRange+>;pushl (%esi);calll - <PoSetHiberRange+>;jmp  <PoSetHiberRange+>;leal (%edi), %eax": 1,
                "pushl (%ebp);calll - <PoSetHiberRange+>;cmpl $, -(%ebp);jne - <PoSetHiberRange+>;leave": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);leal -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "addl $, %eax;movl %eax, -(%ebp);cmpl $, (%eax);jne  <PoSetHiberRange+>;movl $, %eax": 1,
                "movl $, %eax;jmp  <PoSetHiberRange+>;movsbl , %eax;pushl %ebx;xorl %ebx, %ebx": 1,
                "jb  <PoSetHiberRange+>;movl -(%ebp), %eax;pushl $;leal (%eax), %ecx;pushl %ecx": 1,
                "cmpl %edi, ;jae - <PoSetHiberRange+>;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, -(%ebp);calll - <PoSetHiberRange+>;movl -(%ebp), %ebx": 2,
                "movl %esi, ;calll - <PoSetHiberRange+>;pushl %edi;calll - <InbvAcquireDisplayOwnership+>;jmp  <PoSetHiberRange+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "jbe  <PoSetHiberRange+>;movl $, %eax;movl $, %ecx;xchgl %eax, (%ecx);jmp  <PoSetHiberRange+>": 1,
                "jmp  <PoSetHiberRange+>;movl $, %eax;movl $, %ecx;xchgl %eax, (%ecx);incl ": 1,
                "pushl %eax;movb $, -(%ebp);calll - <PoSetHiberRange+>;movl -(%ebp), %ebx;pushl $": 1,
                "movl %edi, -(%ebp);cmpb $-, (%eax);je  <PoSetHiberRange+>;incb (%eax);movb -(%ebp), %cl": 1,
                "calll *;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi;calll - <KeRaiseUserException+>": 1,
                "je  <PoSetHiberRange+>;decl %eax;je  <PoSetHiberRange+>;pushl $;calll *": 1,
                "popl %esi;movl $, %ecx;calll - <PoSetPowerState+>;jmp  <PoSetHiberRange+>;pushl $": 1,
                "pushl %esi;calll - <PoSetHiberRange+>;movl %eax, %esi;testl %esi, %esi;jge  <PoSetHiberRange+>": 1,
                "movl %ebx, -(%ebp);cmpl %edi, %ebx;jne  <PoSetHiberRange+>;movl $, %esi;jmp  <PoSetHiberRange+>": 1,
                "movl $, %esi;jmp  <PoSetHiberRange+>;pushl ;calll - <MmLockPagableSectionByHandle>;calll *": 1,
                "jmp  <PoSetHiberRange+>;movl $, (%ebx);movb %al, %cl;calll *;movl %edi, -(%ebp)": 1,
                "calll - <MmUnlockPagableImageSection>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, %eax;calll - <wctomb+>": 1,
                "jne - <RtlCompressBuffer+>;movl -(%ebp), %eax;addl %edx, %ecx;movl %ecx, %esi;andl $, %esi": 1,
                "xorl %ebx, %edx;movzbl (%eax), %ebx;movzwl (,%ebx,), %ebx;xorl %ebx, %edx;movl -(%ebp), %ebx": 1,
                "addl $, %ecx;cmpl %ecx, %eax;jae  <RtlCompressBuffer+>;subl %eax, %ecx;xorl %eax, %eax": 1,
                "int;int;int;movl -(%esi), %ecx;pushl %edi": 1,
                "movl -(%esi), %edi;movl %edi, %edx;leal (%esp), %esp;leal (%ecx,%ecx), %eax;orl $, %eax": 1,
                "movl %eax, %ecx;je - <RtlCompressBuffer+>;movl %eax, -(%esi);popl %edi;retl": 1,
                "incl %esi;movb %al, -(%ebx);addl %ebp, %ebp;jb  <RtlCompressBuffer+>;cmpl -(%edx), %esi": 2,
                "movl (%edx,%eax,), %edi;movl %esi, (%edx,%eax,);cmpl %ecx, %edi;js - <RtlCompressBuffer+>;testl %edi, %edi": 1,
                "movl (%esi), %eax;subl (%edi), %eax;je  <RtlCompressBuffer+>;testl $, %eax;jne - <RtlCompressBuffer+>": 2,
                "je  <RtlCompressBuffer+>;bsfl %eax, %ecx;subl %esi, %edi;shrl $, %ecx;notl %edi": 2,
                "notl %edi;addl $, %ecx;addl $, %ebx;leal (%esi,%ecx), %eax;shll $, %edi": 2,
                "movl %ebx, -(%edx);addl $, %ebx;movl %ebp, (%ecx);movl $, %ebp;jmp - <RtlCompressBuffer+>": 6,
                "shlb $, %al;movl $, -(%edx);orb %al, (%edi);subl $, %ecx;jae  <RtlCompressBuffer+>": 2,
                "jmp - <RtlCompressBuffer+>;movb %cl, (%ebx);incl %ebx;cmpl $, %ecx;jb - <RtlCompressBuffer+>": 2,
                "jmp - <RtlCompressBuffer+>;incl %esi;incl %edi;jmp - <RtlCompressBuffer+>;pushl %eax": 2,
                "jmp - <RtlCompressBuffer+>;pushl %eax;jmp  <RtlCompressBuffer+>;movzbl (%esi), %eax;movzbl (%esi), %ecx": 2,
                "movl %ebp, -(%edx);subl -(%edx), %esi;movl %esi, -(%edx);popl %ebp;popl %edi": 2,
                "xorl %ecx, %eax;xorl %edi, %eax;movl -(%edx), %ecx;movzwl (%edx,%eax,), %di;subl %ecx, %esi": 1,
                "incl %ebp;cmpl (%esp), %esi;jne - <RtlCompressBuffer+>;popl %eax;popl %ebp": 1,
                "movl (%ebp), %ecx;pushl %ebx;pushl %esi;movl -(%ecx), %esi;pushl %edi": 1,
                "movl -(%ecx), %edx;cmpw $, (%ecx,%edx,);je  <RtlCompressBuffer+>;movl -(%ecx), %ebx;movw %dx, (%ecx)": 1,
                "movzwl (%ecx,%eax,), %edi;je  <RtlCompressBuffer+>;cmpw %dx, (%ebx,%edi);movzwl (%ecx,%edi,), %eax;je  <RtlCompressBuffer+>": 4,
                "xorl %ebx, %edx;je  <RtlCompressBuffer+>;testl $, %edx;jne  <RtlCompressBuffer+>;movl -(%ecx), %edx": 1,
                "cmpl %edx, %eax;ja  <RtlCompressBuffer+>;movl $, -(%ecx);jmp  <RtlCompressBuffer+>;movl -(%ecx), %edx": 1,
                "movl $, -(%ecx);jmp  <RtlCompressBuffer+>;movl -(%ecx), %edx;cmpl %edx, %eax;ja  <RtlCompressBuffer+>": 1,
                "cmpl %edx, %eax;ja  <RtlCompressBuffer+>;jmp  <RtlCompressBuffer+>;leal (%esp), %esp;nop": 1,
                "leal (%esp), %esp;nop;movb (%eax), %bl;cmpb (%esi), %bl;jne  <RtlCompressBuffer+>": 1,
                "jne  <RtlCompressBuffer+>;addl $, %eax;addl $, %esi;cmpl %edx, %eax;ja  <RtlCompressBuffer+>": 2,
                "addl $, %eax;addl $, %esi;cmpl %edx, %eax;ja  <RtlCompressBuffer+>;movb (%eax), %bl": 2,
                "addl $, %eax;jmp  <RtlCompressBuffer+>;addl $, %eax;jmp  <RtlCompressBuffer+>;incl %eax": 1,
                "cmpl %edx, %eax;jne - <RtlCompressBuffer+>;movl -(%ecx), %ebx;movl -(%ecx), %esi;subl %ebx, %eax": 1,
                "incl %esi;jmp  <RtlCompressBuffer+>;cmpl $, %edx;jl  <RtlCompressBuffer+>;movl $, %eax": 2,
                "orb %al, (%edi);movl $, -(%ecx);subl $, %edx;js  <RtlCompressBuffer+>;movb %dl, (%esi)": 2,
                "incl %esi;cmpl $, %edx;jl  <RtlCompressBuffer+>;addl $, %edx;movb %dl, (%esi)": 2,
                "jl  <RtlCompressBuffer+>;addl $, %edx;movb %dl, (%esi);sarl $, %edx;movb $-, -(%esi)": 2,
                "movb %dl, (%esi);sarl $, %edx;movb $-, -(%esi);movb %dl, (%esi);addl $, %esi": 2,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %ecx;movl -(%ecx), %eax": 1,
                "pushl %esi;movl %eax, (%ebp);pushl %edi;movl -(%ecx), %esi;cmpw $, (%ecx,%esi,)": 1,
                "je  <RtlCompressBuffer+>;cmpw %si, (%edx,%edi);movzwl (%ecx,%edi,), %eax;je  <RtlCompressBuffer+>;cmpw %si, (%edx,%eax)": 3,
                "subl -(%ecx), %eax;movl -(%ecx), %ebx;movl %ebx, %edx;subl %edx, %eax;cmpl -(%ecx), %eax": 1,
                "movl -(%ecx), %eax;movl -(%ecx), %esi;movb (%eax,%esi), %dl;movl (%ebp), %edi;movl -(%ecx), %eax": 1,
                "movl (%ebp), %edi;movl -(%ecx), %eax;movb %dl, (%edi);incl %edi;testl %eax, %eax": 1,
                "movl %eax, -(%ecx);movl -(%ecx), %eax;addl %ebx, %eax;movl %esi, (%ebp);movl %eax, -(%ecx)": 1,
                "addl %ebx, %eax;movl %esi, (%ebp);movl %eax, -(%ecx);movl -(%ecx), %eax;cmpl %eax, -(%ecx)": 1,
                "pushl %edi;movl -(%esi), %edi;movl -(%esi), %eax;movl -(%esi), %edx;movl %eax, %ecx": 1,
                "je  <RtlCompressBuffer+>;cmpl $, (%edx);jne  <RtlCompressBuffer+>;movl (%ebp), %eax;pushl %ebx": 1,
                "jle  <RtlCompressBuffer+>;cmpl $, (%ebp);jl  <RtlCompressBuffer+>;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl %edx, -(%esi);movl %ebx, -(%esi);movl %eax, -(%esi);movl %eax, -(%esi);movl $, -(%esi)": 1,
                "jmp  <RtlCompressBuffer+>;cmpl $, %ecx;jne  <RtlCompressBuffer+>;movl $, %ecx;xorl %eax, %eax": 1,
                "pushl $;pushl %edx;movl $, -(%esi);calll *%edi;movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl -(%esi), %eax;movl -(%esi), %ecx;movl %eax, -(%esi);movl %eax, -(%esi)": 1,
                "addl $, %eax;subl %eax, %ecx;movl %eax, -(%esi);movl (%ebp), %eax;leal -(%ecx,%eax), %eax": 1,
                "leal (%eax), %ecx;sarl $, %ecx;subl %ecx, %eax;cmpl $, %eax;movl $, -(%esi)": 1,
                "cmpl %ecx, %edx;movl %ecx, -(%esi);jge  <RtlCompressBuffer+>;movl (%ebp), %edx;movl (%ebp), %eax": 1,
                "movl %eax, (%ecx);movl -(%esi), %eax;movl %eax, -(%esi);addl $, %eax;movl %eax, -(%esi)": 1,
                "movl -(%esi), %eax;movl -(%esi), %edx;movl (%ebp), %ecx;subl %edx, %eax;cmpl %ecx, %eax": 1,
                "addl %eax, %edx;movl %edx, %eax;movl %edx, -(%esi);movl (%ebp), %edx;subl %ecx, %eax": 1,
                "xorl %ecx, %ecx;cmpl $, %ebx;movl $, %eax;jle  <RtlCompressBuffer+>;movl $, %ebx": 1,
                "movl $, %ebx;jmp  <RtlCompressBuffer+>;cmpl $, %ebx;jl  <RtlCompressBuffer+>;cmpl $, %ebx": 1,
                "cmpl $, %ebx;movl $, %eax;jl  <RtlCompressBuffer+>;leal (%edx,%edx), %eax;movl $, %ecx": 1,
                "movl (%ebp), %ecx;andl $-, %esi;leal (%eax,%esi), %eax;pushl %eax;pushl %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;movl $, %edx;subl %ecx, %edx;addl %edx, %eax": 1,
                "popl %edi;popl %ebp;retl $;xorl %eax, %eax;popl %edi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpw $, (%ebp);jne  <RtlCompressBuffer+>": 1,
                "movl (%ebp), %eax;movl $, (%eax);xorl %eax, %eax;jmp  <RtlCompressBuffer+>;cmpw $, (%ebp)": 1,
                "andl $, -(%ebp);pushl %ebx;movl (%ebp), %ebx;leal (%ebx), %ecx;cmpl %eax, %ecx": 1,
                "movl -(%ebp), %ecx;movb $, %al;shlb %cl, %al;notb %al;andb %al, -(%ebp)": 1,
                "movl -(%ebp), %ecx;orb %bl, -(%ebp);testl %ecx, %ecx;jne  <RtlCompressBuffer+>;leal -(%eax), %ecx": 1,
                "movl (%ebp), %esi;movl -(%ebp), %edi;movl (%ebp), %eax;movl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movb %al, (%edx);movb %ah, (%edx);jmp  <RtlCompressBuffer+>;movw %ax, (%edx);xorl %eax, %eax": 1,
                "subl %edx, %esi;movl %esi, (%eax);movzwl %si, %eax;subw $, %ax;andl $, %eax": 1,
                "movb %ah, (%edx);jmp  <RtlCompressBuffer+>;movw %ax, (%edx);movb -(%ebp), %al;negb %al": 1,
                "leal (%edx,%ecx,), %edi;leal (%edx,%ecx,), %ecx;movl %ecx, -(%ebp);movl (%ecx), %ecx;movl %edi, -(%ebp)": 1,
                "cmpb (%ecx,%eax), %bl;jne  <RtlCompressBuffer+>;incl (%ebp);movl (%ebp), %ebx;incl %eax": 2,
                "cmpl %esi, %ecx;jae  <RtlCompressBuffer+>;movb (%esi), %al;cmpb %al, (%ecx);jne  <RtlCompressBuffer+>": 1,
                "movb (%esi), %al;cmpb %al, (%ecx);jne  <RtlCompressBuffer+>;pushl $;popl %eax": 1,
                "popl %eax;cmpl %eax, (%edx);movl %eax, (%ebp);jbe  <RtlCompressBuffer+>;leal (%esi), %eax": 1,
                "movl -(%ebp), %eax;movl %edi, (%eax);movl -(%ebp), %eax;movl %esi, (%eax);movl (%ebp), %eax": 1,
                "jmp  <RtlCompressBuffer+>;movl -(%ebp), %ecx;movl %edi, (%ecx);movl -(%ebp), %ecx;movl %esi, (%ecx)": 1,
                "movl %edi, (%ecx);movl -(%ebp), %ecx;movl %esi, (%ecx);movl -(%ebp), %ecx;movl %ecx, (%edx)": 1,
                "addl %esi, %ecx;cmpw $, (%ebp);movb $, %bl;movl %ecx, (%ebp);jne  <RtlCompressBuffer+>": 1,
                "movb $, %bl;movl %ecx, (%ebp);jne  <RtlCompressBuffer+>;movl $, (%ebp);jmp  <RtlCompressBuffer+>": 1,
                "calll - <wctomb+>;pushl $;popl %eax;movl %eax, -(%ebp);movl (%ebp), %edi": 1,
                "movl $, -(%ebp);movl , %eax;movl %eax, -(%ebp);cmpl -(%ebp), %eax;je  <RtlCompressBuffer+>": 1,
                "cmpl %edx, %eax;jne  <RtlCompressBuffer+>;movl -(%ebp), %eax;jmp - <RtlCompressBuffer+>;movl %edx, %eax": 1,
                "movb $, -(%ebp);movl (%esi), %ebx;movl (%esi), %eax;movl , %edi;xorl %ecx, %ecx": 1,
                "xorl %ebx, %ebx;pushl %ebx;pushl %edi;pushl %ebx;pushl %eax": 1,
                "movl %edx, -(%ebp);movl (%esi), %eax;pushl %ebx;pushl %edi;pushl %ebx": 1,
                "movzbl (%esi), %eax;movl %eax, -(%ebp);movb -(%ebp), %cl;calll *;andl %ebx, -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <_alldiv>;movl %eax, %edi;movl %edx, -(%ebp)": 1,
                "popl %ecx;leal -(%ebp), %esi;movl -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);orl $-, -(%ebp)": 1,
                "pushl -(%ebp);calll - <ExRaiseStatus>;orl $-, -(%ebp);movl $, %ebx;addl $, -(%ebp)": 1,
                "pushl ;calll - <MmLockPagableSectionByHandle>;movl %edi, -(%ebp);pushl %esi;pushl (%ebp)": 2,
                "pushl %ebx;movl %eax, -(%ebp);movl %edx, %ebx;je  <RtlCompressBuffer+>;leal -(%ebp), %eax": 1,
                "jb  <RtlCompressBuffer+>;ja  <RtlCompressBuffer+>;cmpl -(%ebp), %edx;jbe  <RtlCompressBuffer+>;leal -(%ebp), %eax": 1,
                "jbe  <RtlCompressBuffer+>;leal -(%ebp), %eax;pushl %eax;pushl %esi;pushl %edi": 1,
                "movl , %ecx;movl %eax, %edx;orl %ecx, %edx;je  <RtlCompressBuffer+>;cmpl %ebx, %ecx": 1,
                "je  <RtlCompressBuffer+>;cmpl %edx, %esi;jne  <RtlCompressBuffer+>;testb $, %al;jne  <RtlCompressBuffer+>": 1,
                "jmp  <RtlCompressBuffer+>;cmpl %edx, %esi;jne - <RtlCompressBuffer+>;testb $, %al;jne - <RtlCompressBuffer+>": 1,
                "jne - <RtlCompressBuffer+>;testb $, %al;jne - <RtlCompressBuffer+>;cmpl %ebx, %ecx;jne - <RtlCompressBuffer+>": 1,
                "jne - <RtlCompressBuffer+>;xorl %ecx, %ecx;incl %ecx;jmp - <RtlCompressBuffer+>;movl %ebx, ": 1,
                "pushl ;pushl ;pushl $;pushl %ebx;calll - <PoShutdownBugCheck>": 1,
                "pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax;movb $, ": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, ;calll - <PsCreateSystemThread>;testl %eax, %eax": 1,
                "xaddl %eax, (%ecx);decl %eax;jne - <RtlCompressBuffer+>;pushl $;pushl ": 1,
                "cmpl %ebx, ;je  <RtlCompressBuffer+>;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;calll - <ExSystemTimeToLocalTime>;leal -(%ebp), %eax": 1,
                "movl (%ebp), %eax;movzbl (%eax), %eax;pushl %eax;calll - <KeSetKernelStackSwapEnable>;pushl $": 1,
                "movl %eax, (%edi);movl %fs:, %eax;movl %eax, %ecx;movl %eax, (%edi);calll - <ObfReferenceObject>": 1,
                "calll - <ObfReferenceObject>;pushl %edi;leal (%esi), %eax;pushl %eax;calll - <KeInsertQueue>": 1,
                "movl (%esi), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax;pushl %edi;je  <RtlCompressBuffer+>": 1,
                "xaddl %eax, (%ecx);movl %fs:, %eax;pushl %esi;pushl $;movl %eax, %edi": 1,
                "movl %eax, %edi;calll - <RtlCompressBuffer+>;testl %eax, %eax;jne  <RtlCompressBuffer+>;pushl %esi": 1,
                "pushl %ebx;calll - <RtlCompressBuffer+>;testl %eax, %eax;jne  <RtlCompressBuffer+>;movl %edi, %ecx": 1,
                "pushl $;calll - <KeSetKernelStackSwapEnable>;andl $-, (%edi);pushl $;calll - <PsTerminateSystemThread>": 1,
                "calll - <KeSetKernelStackSwapEnable>;andl $-, (%edi);pushl $;calll - <PsTerminateSystemThread>;popl %edi": 1,
                "pushl %eax;popal;jb  <RtlCompressBuffer+>;insl %dx, %es:(%edi);je  <RtlCompressBuffer+>": 1,
                "movl %ecx, %esi;shll $, %esi;pushl $;leal (%ebx,%esi), %eax;pushl -(%ebp,%eax)": 1,
                "testb %dl, %dl;jne - <RtlCompressBuffer+>;subl %ecx, %eax;movl %eax, -(%ebp);cmpl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;orl $-, -(%ebp);movl $, -(%ebp);pushl %esi": 1,
                "addl $, %esp;orl $-, -(%ebp);pushl ;calll - <MmLockPagableSectionByHandle>;movl , %eax": 1,
                "incl %eax;incl %eax;shrl %eax;movw %ax, -(%ebp);movw %ax, -(%ebp)": 2,
                "xorl %esi, %esi;cmpl $, %ebx;movb %al, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %edx, %esi;movl %edi, -(%ebp);jmp  <RtlCompressBuffer+>;leal (%edi), %eax;movl (%eax), %ecx": 1,
                "movl (%ebp), %eax;popl %esi;movl %ecx, (%eax);popl %ebx;leave": 1,
                "cmpl $, (%eax);jl  <PAGEVRFY+>;movb $, %al;jmp  <PAGEVRFY+>;xorb %al, %al": 1,
                "cmpw $, (%esi);je  <PAGEVRFY+>;pushl %ebx;pushl %ebx;pushl %esi": 1,
                "pushl %esi;pushl $;pushl $;calll - <KeBugCheckEx>;leal (%ebp), %edx": 1,
                "leal (%ebp), %edx;movl %esi, %ecx;calll  <PAGEVRFY+>;cmpb %bl, (%ebp);jne  <PAGEVRFY+>": 1,
                "cmpb %bl, (%ebp);jne  <PAGEVRFY+>;pushl %esi;calll - <IoFreeIrp+>;popl %esi": 1,
                "pushl %ecx;pushl %edx;pushl $;jmp  <PAGEVRFY+>;pushl %edi": 1,
                "movl %esp, %ecx;movl %ecx, -(%ebp);calll  <PAGEVRFY+>;pushl -(%ebp);leal -(%ebp), %edx": 1,
                "movl %ecx, -(%ebp);calll  <PAGEVRFY+>;pushl -(%ebp);leal -(%ebp), %edx;movl %edi, %ecx": 1,
                "movl %edi, %ecx;calll - <IoBuildPartialMdl+>;pushl -(%ebp);leal -(%ebp), %edx;movl %edi, %ecx": 1,
                "movl %eax, -(%ebp);calll  <PAGEVRFY+>;movl -(%ebp), %ecx;calll  <PAGEVRFY+>;pushl -(%ebp)": 1,
                "pushl %edi;pushl $;pushl $;calll - <KeBugCheckEx>;movl -(%ebp), %eax": 1,
                "calll - <KeBugCheckEx>;pushl (%ebp);pushl (%ebp);pushl %eax;calll - <IoInitializeTimer>": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);jne  <PAGEVRFY+>;cmpb %al, (%edi);je  <PAGEVRFY+>": 1,
                "pushl (%ebx);pushl %edi;pushl (%ebp);calll *(%ebx);pushl (%esi)": 1,
                "pushl $;popl %ecx;movl %ebx, %esi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx": 1,
                "cmpb $, (%ecx);je  <PAGEVRFY+>;testb $, (%ebx);je  <PAGEVRFY+>;movl (%ebx), %ecx": 1,
                "movl (%ebp), %eax;movl $, (%ebx);movl %eax, (%ebx);movl (%ebp), %eax;popl %edi": 1,
                "cmpl $, ;jb  <PAGEVRFY+>;movl (%ebp), %edx;movl (%ebp), %ecx;leal (%ebp), %eax": 1,
                "calll  <PAGEVRFY+>;movb (%ebp), %al;popl %ebp;retl $;int": 1,
                "je  <PAGEVRFY+>;pushl $;pushl $;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "movl -(%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, %eax;jne  <PAGEVRFY+>;testb $, ": 1,
                "leal (,%esi,), %esi;movl %esi, -(%ebp);cmpb $, (%ebp);je  <PAGEVRFY+>;movl %ecx, -(%ebp)": 1,
                "calll - <ExAllocatePoolWithTagPriority>;movl %eax, -(%ebp);orl $-, -(%ebp);jmp  <PAGEVRFY+>;xorl %eax, %eax": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %esi;movl (%ebp), %ebx;jmp  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;movzwl %si, %ecx;movl %ecx, %edx;shrl $, %ecx;rep  stosl %eax, %es:(%edi)": 1,
                "ja  <PAGEVRFY+>;pushl $;pushl $;pushl %ecx;pushl $": 2,
                "movl %eax, -(%ebp);movb %dl, -(%ebp);movl %ecx, %ebx;jne  <PAGEVRFY+>;calll - <IoCancelIrp+>": 1,
                "leave;retl;leal -(%ebp), %eax;pushl %eax;calll  <PAGEVRFY+>": 1,
                "retl;leal -(%ebp), %eax;pushl %eax;calll  <PAGEVRFY+>;movb (%ebx), %al": 1,
                "movl %edi, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp);pushl $;popl %ecx": 1,
                "jmp - <PAGEVRFY+>;pushl $;pushl $;pushl $;pushl %ebx": 1,
                "pushl $;pushl $;pushl %ebx;pushl $;calll - <KeBugCheckEx>": 1,
                "xorl %esi, %esi;calll - <ObCreateObjectType+>;movl %eax, -(%ebp);movl , %eax;cmpl %ebx, %eax": 1,
                "pushl (%edi);calll - <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>;movl (%edi), %ecx": 1,
                "orl $-, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;movl $, -(%ebp)": 1,
                "xorl %eax, %eax;incl %eax;retl;shrl $, %eax;notl %eax": 1,
                "je  <PAGEVRFY+>;imull $, %eax, %eax;addl %edx, %eax;cmpw $, (%eax);jne  <PAGEVRFY+>": 1,
                "cmpl $, (%ebp);jne  <PAGEVRFY+>;movl (%eax), %ebx;andl $, %ebx;cmpl $, %ebx": 1,
                "jne  <PAGEVRFY+>;cmpb $, %al;jbe  <PAGEVRFY+>;pushl $;pushl (%ebp)": 2,
                "jbe  <PAGEVRFY+>;pushl $;pushl (%ebp);movzbl %al, %eax;pushl %eax": 4,
                "pushl (%ebp);movzbl %al, %eax;pushl %eax;pushl $;jmp  <PAGEVRFY+>": 6,
                "pushl $;jmp  <PAGEVRFY+>;cmpb %bl, %al;jbe  <PAGEVRFY+>;movsbl (%ebp), %ecx": 2,
                "testb $, (%esi);jne  <PAGEVRFY+>;pushl %ebx;pushl %esi;calll - <PAGEVRFY+>": 1,
                "movw (%ecx), %ax;testb $, %al;jne  <PAGEVRFY+>;pushl $;movswl %ax, %eax": 1,
                "jmp  <PAGEVRFY+>;testb $, %al;je  <PAGEVRFY+>;pushl $;movswl %ax, %eax": 1,
                "testb $, %al;je  <PAGEVRFY+>;pushl $;movswl %ax, %eax;pushl %eax": 1,
                "movswl %ax, %eax;pushl %eax;pushl %ecx;pushl $;pushl $": 1,
                "movzbl %al, %eax;pushl %ecx;pushl %eax;pushl $;jmp  <PAGEVRFY+>": 1,
                "movl %esp, %ebp;calll *;cmpb $, %al;jbe  <PAGEVRFY+>;pushl (%ebp)": 2,
                "pushl %esi;pushl %edi;calll *;movl (%ebp), %ebx;jmp  <PAGEVRFY+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTagPriority>;movl %eax, %edi;movl %edi, -(%ebp);calll *": 1,
                "xorl %esi, %esi;incl %esi;movb %al, %cl;calll *;movl %esi, %eax": 1,
                "xorl %esi, %esi;jmp - <PAGEVRFY+>;int;int;int": 2,
                "movl %edx, (%ecx);movl (%ebp), %edx;movl %edx, (%ecx);movl (%ebp), %edx;movl %edx, (%ecx)": 2,
                "movl (%edi), %ebx;cmpl (%ebp), %ebx;movl %ebx, (%ebp);je  <PAGEVRFY+>;movl (%ebp), %eax": 1,
                "popl %ebx;je  <PAGEVRFY+>;pushl %ecx;pushl %edi;pushl (%ebp)": 1,
                "movl %esp, %ebp;calll *;movl (%ebp), %edx;decl (%edx);movb %al, %cl": 1,
                "addl $, %esi;jmp  <PAGEVRFY+>;testw $, %si;je  <PAGEVRFY+>;subl $, %edi": 1,
                "je  <PAGEVRFY+>;subl $, %edi;leal -(%esi,%edi), %esi;movl (%esi), %ebx;testb $, %bl": 1,
                "cmpl $, (%ebx);jne  <PAGEVRFY+>;movl (%esi), %eax;movl , %esi;movl %eax, (%ebp)": 1,
                "calll *%esi;pushl %edi;pushl (%ebp);movb %al, (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);movb %al, (%ebp);pushl (%ebp);pushl %ebx;calll - <PAGEVRFY+>": 1,
                "calll  <PAGEVRFY+>;popl %ebp;jmp - <ExFreePoolWithTag>;int;int": 1,
                "popl %ebp;jmp - <ExFreePoolWithTag>;int;int;int": 1,
                "movzbl %al, %eax;pushl %eax;pushl $;pushl $;calll - <KeBugCheckEx>": 10,
                "testb $, (%eax);jne  <PAGEVRFY+>;movl %fs:, %eax;cmpl $, (%eax);jne  <PAGEVRFY+>": 5,
                "cmpl $, ;jne  <PAGEVRFY+>;movl , %eax;incl ;pushl %esi": 1,
                "movl %eax, %esi;shrl $, %esi;testb $, %al;je  <PAGEVRFY+>;pushl %esi": 1,
                "je  <PAGEVRFY+>;pushl %esi;calll  <PAGEVRFY+>;cmpl $, %eax;jne  <PAGEVRFY+>": 2,
                "jae  <PAGEVRFY+>;pushl $;pushl %esi;movzbl %al, %eax;pushl %eax": 2,
                "pushl $;pushl $;calll - <KeBugCheckEx>;incl ;movl %esi, %ecx": 1,
                "cmpl $, (%eax);jne  <PAGEVRFY+>;movl %fs:, %eax;pushl %esi;pushl (%eax)": 1,
                "calll  <PAGEVRFY+>;movl %esi, %ecx;popl %esi;popl %ebp;jmpl *": 1,
                "popl %ebp;jmp - <KeInitializeTimerEx>;int;int;int": 1,
                "testl %edi, %edi;je  <PAGEVRFY+>;movl (%edi), %eax;orl (%edi), %eax;je  <PAGEVRFY+>": 1,
                "pushl $;pushl %esi;calll  <PAGEVRFY+>;popl %edi;popl %esi": 1,
                "calll - <KeInitializeMutex>;pushl $;pushl (%ebp);pushl $;pushl (%ebp)": 1,
                "pushl $;pushl (%ebp);calll  <PAGEVRFY+>;popl %ebp;jmp - <KeReleaseMutant>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);calll - <KeInitializeSpinLock>;pushl $": 1,
                "movl (%ebp), %ecx;movl %eax, %esi;movl (%ebp), %eax;movl %ecx, (%eax);je  <PAGEVRFY+>": 1,
                "movl %eax, %esi;movl (%ebp), %eax;movl %ecx, (%eax);je  <PAGEVRFY+>;movl %fs:, %eax": 1,
                "cmpl $, %esi;jne  <PAGEVRFY+>;calll  <PAGEVRFY+>;cmpl $, %eax;jle  <PAGEVRFY+>": 1,
                "calll  <PAGEVRFY+>;cmpl $, %eax;jle  <PAGEVRFY+>;pushl $;pushl (%ebp)": 1,
                "calll - <KeInitializeSpinLock>;orl $-, (%esi);xorl %edi, %edi;cmpl $, (%ebp);movl %edi, (%esi)": 1,
                "movl %edi, (%esi);movl %edi, (%esi);calll *;movb %al, %cl;movl %edi, (%esi)": 1,
                "movl %edi, (%esi);calll *;popl %edi;popl %esi;popl %ebp": 1,
                "cmpl (%edx), %edi;jb  <PAGEVRFY+>;movl (%edx), %edx;cmpl %esi, %edx;jne - <PAGEVRFY+>": 1,
                "pushl %edi;movl , %edi;xorl %esi, %esi;movl $, %ebx;jmp  <PAGEVRFY+>": 1,
                "movl , %edi;xorl %esi, %esi;movl $, %ebx;jmp  <PAGEVRFY+>;movl (%ebp), %eax": 1,
                "je  <PAGEVRFY+>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);cmpl %edx, (%esi)": 1,
                "xorl %edi, %edi;cmpl %edi, (%esi);je  <PAGEVRFY+>;movl (%esi), %eax;addl (%esi), %eax": 1,
                "pushl $;pushl (%ebp);calll - <ExFreePoolWithTag>;calll *%ebx;andl $, (%esi)": 1,
                "popl %ebp;retl $;leal (%esi), %eax;movl %eax, ;movl (%esi), %eax": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl , %esi;decl %esi": 1,
                "movzbl %ds:-, %eax;movb %al, (%esi);leal -(%ebp), %eax;pushl %eax;calll - <KeQueryTickCount>": 1,
                "jne  <PAGEVRFY+>;xorl %eax, %eax;leave;retl;pushl %esi": 1,
                "leave;retl;pushl %esi;xorl %esi, %esi;incl %esi": 1,
                "pushl %esi;xorl %esi, %esi;incl %esi;cmpl $, ;jne  <PAGEVRFY+>": 1,
                "calll - <KeQueryTickCount>;movl -(%ebp), %eax;testb $, %al;jne  <PAGEVRFY+>;incl ": 1,
                "cmpl $-, ;je  <PAGEVRFY+>;orl $-, ;orl $-, ;calll - <PAGEVRFY+>": 1,
                "pushl %edi;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);movl (%ebp), %esi": 1,
                "xaddl %eax, (%ecx);movl (%ebp), %esi;cmpl $, %esi;movl $, %edi;jbe  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;andl %edi, %eax;addl $, (%ebp);leal (%eax), %edi;jmp  <PAGEVRFY+>": 1,
                "incl (%esi);movl (%esi), %eax;cmpl (%esi), %eax;jbe  <PAGEVRFY+>;movl %eax, (%esi)": 2,
                "cmpl $, (%ebp);movl (%ebp), %eax;movl %eax, (%edi);jne  <PAGEVRFY+>;movl $, %esi": 1,
                "movl %edx, ;movb %al, %cl;calll *%esi;movl (%ebp), %eax;popl %edi": 1,
                "testb $, (%ebp);jne  <PAGEVRFY+>;pushl %esi;pushl (%ebp);leal (%edi), %esi": 1,
                "pushl %eax;pushl $;pushl $;calll - <KeBugCheckEx>;cmpl $, ": 2,
                "pushl (%ebp);pushl (%ebp);calll *%eax;movl %fs:, %eax;jmp  <PAGEVRFY+>": 1,
                "pushl (%ebp);calll *%eax;movl %fs:, %eax;jmp  <PAGEVRFY+>;movl (%ebp), %ecx": 1,
                "jae  <PAGEVRFY+>;movzbl %bl, %ecx;pushl %ecx;pushl %esi;movzbl %al, %eax": 1,
                "retl;movl %fs:, %eax;pushl (%ebp);pushl %eax;pushl $": 1,
                "calll  <PAGEVRFY+>;popl %edi;movl %esi, %ecx;popl %esi;movb %bl, %dl": 1,
                "je  <PAGEVRFY+>;calll *%eax;jmp  <PAGEVRFY+>;calll *;popl %ebx": 1,
                "int;movl %edi, %edi;pushl %ebx;calll *;pushl $": 1,
                "jmpl *%eax;jmpl *;int;int;int": 2,
                "calll *;movl (%ebp), %ebx;movl (%ebp), %esi;pushl %ebx;movb %al, (%esi)": 1,
                "movl (%ebp), %esi;pushl %ebx;movb %al, (%esi);calll - <PAGEVRFY+>;incl ": 1,
                "calll *%eax;jmp  <PAGEVRFY+>;movb %bl, %cl;calll *;movb %al, (%esi)": 1,
                "testb $, ;je  <PAGEVRFY+>;cmpb $, %bl;jae  <PAGEVRFY+>;cmpb $, (%esi)": 1,
                "cmpb $, %al;jbe  <PAGEVRFY+>;movsbl (%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "movl (%edi), %ecx;movl %esi, %eax;andl $, %eax;leal (%eax,%ecx), %eax;leal (%edi), %ebx": 1,
                "leal (%eax,%ecx), %eax;leal (%edi), %ebx;shrl $, %eax;leal (%ebx,%eax,), %eax;movl %ebx, (%ebp)": 1,
                "leal (%edi), %ebx;shrl $, %eax;leal (%ebx,%eax,), %eax;movl %ebx, (%ebp);movl %eax, -(%ebp)": 1,
                "je  <PAGEVRFY+>;andl $, (%ebp);cmpl $, (%edx);jbe  <PAGEVRFY+>;leal (%edx), %eax": 1,
                "jbe  <PAGEVRFY+>;leal (%edx), %eax;movl (%eax), %ecx;cmpl %ecx, (%ebx);jb  <PAGEVRFY+>": 1,
                "movl (%eax), %eax;ja  <PAGEVRFY+>;testb $, (%eax);je  <PAGEVRFY+>;leal (%eax), %ecx": 1,
                "popl %esi;popl %ebx;leave;retl $;movl (%eax), %edx": 1,
                "cmpl (%eax), %esi;jb  <PAGEVRFY+>;cmpl (%eax), %esi;jbe - <PAGEVRFY+>;movl (%eax), %eax": 1,
                "jb  <PAGEVRFY+>;cmpl (%eax), %esi;jbe - <PAGEVRFY+>;movl (%eax), %eax;cmpl %ecx, %eax": 1,
                "jne  <PAGEVRFY+>;testb $, (%esi);je  <PAGEVRFY+>;cmpb $, (%ebp);jne  <PAGEVRFY+>": 2,
                "pushl %edi;pushl (%ebp);pushl %ebx;calll - <MmMapIoSpace>;popl %edi": 1,
                "je  <PAGEVRFY+>;orb $-, (%ebp);pushl -(%ebp);incl ;pushl $": 1,
                "testb $, (%eax);je  <PAGEVRFY+>;orb $-, (%ebp);pushl %esi;pushl %edi": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <PAGEVRFY+>": 1,
                "movw (%eax), %cx;cmpw %si, %cx;ja  <PAGEVRFY+>;movzwl %cx, %ecx;cmpl (%eax), %ecx": 1,
                "ja  <PAGEVRFY+>;movzwl %cx, %ecx;cmpl (%eax), %ecx;ja  <PAGEVRFY+>;cmpl $, (%eax)": 1,
                "imull $, %edx, %edx;addl , %edx;movw (%edx), %di;movzwl %di, %ecx;cmpl (%edx), %ecx": 1,
                "addl , %edx;movw (%edx), %di;movzwl %di, %ecx;cmpl (%edx), %ecx;ja  <PAGEVRFY+>": 1,
                "leal (%ebx), %edi;movl %esi, -(%ebp);calll *;testb %al, %al;jne  <PAGEVRFY+>": 1,
                "movb $, %cl;movl $, (%edi);calll *;movl (%edi), %esi;movl (%esi), %eax": 1,
                "movl %eax, -(%ebp);jbe - <PAGEVRFY+>;pushl %edi;calll - <MmIsDriverVerifying+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl (%esi), %edx;xorl %ecx, %ecx;cmpl %edx, %eax;movl %eax, (%esi)": 1,
                "cmpl $, (%ebp);jne  <PAGEVRFY+>;calll - <MmTrimAllSystemPagableMemory+>;movl $, %eax;movl $, %ecx": 2,
                "movl (%edi), %eax;testb $, (%eax);je  <PAGEVRFY+>;testb $, (%eax);jne  <PAGEVRFY+>": 1,
                "movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);jmp  <PAGEVRFY+>;movl , %eax": 1,
                "jne  <PAGEVRFY+>;movl , %eax;andl $, (%eax);movl , %ecx;addl $, %ecx": 1,
                "cmpl %eax, %ecx;je  <PAGEVRFY+>;leal (%esi), %edx;cmpl %edx, %ecx;je  <PAGEVRFY+>": 1,
                "xaddl %eax, (%ecx);jmp  <PAGEVRFY+>;movl (%ecx), %eax;movl (%ecx), %ecx;movl , %ebx": 1,
                "jmp  <PAGEVRFY+>;movl $, %edx;pushl %esi;movl (%ebp), %esi;andl $, -(%ebp)": 1,
                "pushl %esi;movl (%ebp), %esi;andl $, -(%ebp);andl $, -(%ebp);andl $, -(%ebp)": 1,
                "popl %ecx;pushl (%ebp);xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl %edi, (%eax);movl , %eax;movl %edi, (%eax);movl , %eax;movl %edi, (%eax)": 1,
                "movl %edi, (%eax);movl , %eax;movl , %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "movl $, %ecx;divl %ecx;movl , %ecx;pushl %ecx;movl $, %edx": 1,
                "addl $, %ecx;pushl %eax;pushl %edi;pushl %edx;pushl %ecx": 1,
                "pushl %edx;pushl %ecx;calll - <KeSetTimerEx>;popl %esi;popl %edi": 1,
                "calll - <KeSetTimerEx>;popl %esi;popl %edi;popl %ebx;retl": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);testb $, (%ebp);movl (%ebp), %ecx;je  <PAGEVRFY+>": 1,
                "movzbl %dl, %edi;incl %eax;pushl %ebx;movl %eax, %ecx;shll $, %ecx": 1,
                "cmpl $, %eax;jb - <PAGEVRFY+>;movl (%ebp), %eax;movl (%ebp), %ecx;popl %ebx": 1,
                "movl (%ebp), %ecx;popl %ebx;testb $, %al;je  <PAGEVRFY+>;testl %ecx, %ecx": 1,
                "subb $, %al;subb %dl, (%edi);popal;jb  <PAGEVRFY+>;andb %ch, (%edi)": 1,
                "subb %dl, (%edi);popal;jb  <PAGEVRFY+>;andb %ch, (%edi);insb %dx, %es:(%edi)": 1,
                "jbe  <PAGEVRFY+>;andb %ah, (%ecx);jae  <PAGEVRFY+>;jb  <PAGEVRFY+>;aas": 1,
                "je  <PAGEVRFY+>;testb $, %al;je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>": 1,
                "je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>;popl %ecx;pushl $": 1,
                "cmpl $, %eax;jg  <PAGEVRFY+>;je  <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>": 1,
                "jg  <PAGEVRFY+>;je  <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>;cmpl $, %eax": 1,
                "jmp  <PAGEVRFY+>;calll - <DbgBreakPoint>;jmp - <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>": 1,
                "movl %edi, (%esi);jmp - <PAGEVRFY+>;pushl %edi;pushl %edi;pushl %edi": 1,
                "jmp - <PAGEVRFY+>;pushl %edi;pushl %edi;pushl %edi;pushl (%ebp)": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %edi, %eax;movl %eax, (%esi);je  <PAGEVRFY+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl $;calll - <MmAllocateContiguousMemory>;movl (%esi), %ecx;movl %eax, (%ecx,%edi,)": 1,
                "pushl %edi;pushl %ebx;calll - <RtlSetBits>;leal (%esi), %eax;movl %eax, (%ebp)": 1,
                "pushl %ebx;calll - <RtlSetBits>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax": 1,
                "jmp  <PAGEVRFY+>;leal (%esi), %eax;movl %eax, (%ebp);movl $, %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);incl %edi;cmpl $, %edi;jb - <PAGEVRFY+>": 1,
                "outsb (%esi), %dx;je  <PAGEVRFY+>;jb  <PAGEVRFY+>;pushl $;arpl %si, %gs:(%edx)": 1,
                "arpl %si, %gs:(%edx);popal;jae  <PAGEVRFY+>;subl $, %eax;xorl %edi, (%edx)": 1,
                "pushl (%ebp);calll *%esi;movl %eax, %edi;movl %edx, -(%ebp);calll *": 1,
                "movl %eax, %edi;movl %edx, -(%ebp);calll *;movb %al, %bl;leal -(%ebp), %eax": 1,
                "calll *;movb %al, %bl;leal -(%ebp), %eax;pushl %eax;calll - <KeQuerySystemTime>": 1,
                "movl , %eax;cmpl $-, %eax;jne  <PAGEVRFY+>;movzbl , %eax;movl %eax, ": 18,
                "jb  <PAGEVRFY+>;jbe  <PAGEVRFY+>;jb  <PAGEVRFY+>;pushl $;je  <PAGEVRFY+>": 1,
                "jb  <PAGEVRFY+>;pushl $;je  <PAGEVRFY+>;insl %dx, %es:(%edi);jo  <PAGEVRFY+>": 1,
                "xorl %eax, %eax;jmp  <PAGEVRFY+>;pushl %esi;pushl %edi;movl $, %edi": 1,
                "movl %edi, %ecx;calll *;movl , %eax;cmpl $-, %eax;jne  <PAGEVRFY+>": 1,
                "popal;jo  <PAGEVRFY+>;jb  <PAGEVRFY+>;andb %ah, (%ecx);outsb %gs:(%esi), %dx": 1,
                "andb %ah, (%ecx);outsb %gs:(%esi), %dx;daa;je  <PAGEVRFY+>;jae  <PAGEVRFY+>": 1,
                "cmpl $-, %eax;jne  <PAGEVRFY+>;movzbl , %eax;movl %eax, ;cmpl $, ": 1,
                "insb %dx, %es:(%edi);andb %ah, (%ecx);insb %dx, %es:(%edi);andb %ah, (%ecx);popal": 1,
                "andb %ah, %gs:(%esi);andb %ch, %fs:(%eax);andl $, %eax;je  <PAGEVRFY+>;addb %al, (%eax)": 2,
                "andl $, %eax;je  <PAGEVRFY+>;addb %al, (%eax);orb (%eax), %al;addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);andb %ch, (%ebp);jo  <PAGEVRFY+>;jb  <PAGEVRFY+>;imull $, (%bp,%di), %esi": 1,
                "andb %ch, (%edx);andb %ch, (%edx);andb %cl, (%eax);decl %esp;andb %dl, (%esi)": 5,
                "movl %esp, %ebp;pushl %ebx;pushl %edi;pushl $;calll - <VfFailDriver+>": 1,
                "calll - <VfFailDriver+>;movl (%ebp), %edi;pushl $;pushl %edi;calll - <PAGEVRFY+>": 1,
                "movl %eax, ;cmpl %ebx, (%esi);je  <PAGEVRFY+>;cmpl %ebx, %eax;je  <PAGEVRFY+>": 2,
                "calll - <PAGEVRFY+>;popl %ebp;jmpl *%eax;int;incl %ebx": 1,
                "outsb %fs:(%esi), %dx;daa;je  <PAGEVRFY+>;je  <PAGEVRFY+>;popal": 1,
                "addl $, %esp;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl (%ebp), %eax": 1,
                "pushl %eax;pushl %esi;calll - <ExFreePoolWithTag>;xorl %eax, %eax;jmp  <PAGEVRFY+>": 1,
                "movl -(%ebp), %ecx;movw %ax, (%esi);movl (%ebp), %eax;leal (%edx,%ebx), %edi;movl %ecx, (%esi)": 1,
                "pushl %eax;movl %ecx, (%esi);movl -(%ebp), %ecx;pushl %edi;pushl -(%ebp)": 1,
                "pushl %edx;movl %ecx, (%esi);calll - <PAGEVRFY+>;movl (%ebp), %eax;xorl %ecx, %ecx": 1,
                "leal (%ebx), %ecx;calll - <ExfInterlockedInsertHeadList>;pushl %ebx;calll - <VfFailDriver+>;movl %edi, %eax": 1,
                "calll - <VfFailDriver+>;movl %edi, %eax;popl %edi;popl %ebx;popl %esi": 1,
                "imull $, (%ebp), %ebp;andb %ah, ;insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx)": 1,
                "calll - <VfFailDriver+>;testl %eax, %eax;movl %eax, (%edi);je  <PAGEVRFY+>;movl (%ebp), %eax": 1,
                "jne  <PAGEVRFY+>;pushl %edi;pushl (%ebx);calll - <ExFreePoolWithTag>;decl (%ebp)": 1,
                "leal (%esi), %eax;pushl %eax;movl $, (%esi);calll - <KeInitializeSpinLock>;movl (%ebp), %eax": 1,
                "leal (%eax), %ecx;pushl %ecx;leal (%esi), %edx;leal (%eax), %ecx;calll - <ExfInterlockedInsertHeadList>": 1,
                "andb %dl, (%esi);cmpb (%eax), %ah;addb %al, (%eax);addb %al, (%eax);incl %ecx": 2,
                "cmpb (%eax), %ah;addb %al, (%eax);addb %al, (%eax);incl %ecx;jb  <PAGEVRFY+>": 2,
                "andb %ah, (%ecx);insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);imull $, (%edi), %ebp": 3,
                "movl %eax, ;pushl $;leal -(%edi), %eax;pushl %esi;pushl %eax": 1,
                "pushl $;pushl %esi;leal -(%edi), %eax;pushl %eax;calll - <RtlCompareMemory>": 1,
                "outsl (%esi), %dx;jb  <PAGEVRFY+>;pushl $;popal;jb  <PAGEVRFY+>": 1,
                "popal;imull $, %fs:(%esi), %ebp;outsl (%esi), %dx;jb  <PAGEVRFY+>;andb %ah, (%ecx)": 1,
                "calll *;xorl %ebx, %ebx;cmpb $, %al;jbe  <PAGEVRFY+>;cmpl %ebx, ": 1,
                "cmpb $, %al;jbe  <PAGEVRFY+>;cmpl %ebx, ;je  <PAGEVRFY+>;movl , %eax": 1,
                "je  <PAGEVRFY+>;pushl $;calll - <VfFailDriver+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "calll - <VfFailDriver+>;movl (%esi), %eax;movl %eax, -(%ebp);leal (%edi), %eax;movl %eax, (%ebp)": 1,
                "calll - <VfFailDriver+>;cmpl %ebx, ;popl %edi;je  <PAGEVRFY+>;cmpl %ebx, (%ebp)": 1,
                "jne  <PAGEVRFY+>;movl $, (%ebp);movl (%ebp), %eax;popl %esi;popl %ebx": 1,
                "pushl %eax;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;xorl %eax, %eax;testl %ebx, %ebx": 1,
                "movl %eax, %ebx;xorl %eax, %eax;testl %ebx, %ebx;je  <PAGEVRFY+>;pushl %edi": 2,
                "je  <PAGEVRFY+>;pushl %edi;pushl $;popl %ecx;movl %ebx, %edi": 1,
                "popl %ecx;leal (%ebx), %edi;movl %eax, %esi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx": 1,
                "jne  <PAGEVRFY+>;movb $, (%ebx);leal (%ebx), %eax;pushl %eax;calll - <KeInitializeSpinLock>": 1,
                "cmpb $, (%eax);je  <PAGEVRFY+>;cmpb $, (%eax);je  <PAGEVRFY+>;cmpl $, ": 1,
                "cmpl $, ;je  <PAGEVRFY+>;pushl %ebx;calll - <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "movb $, (%ebx);movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%ebx);movl $, (%eax)": 1,
                "pushl %esi;calll - <VfFailDriver+>;cmpl %esi, %ebx;je  <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "movl %ecx, (%eax);movl %edi, %eax;jmp  <PAGEVRFY+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %edi;pushl $;pushl (%ebp);calll - <PAGEVRFY+>;pushl (%ebp)": 7,
                "jne  <PAGEVRFY+>;xorl %eax, %eax;jmp  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "testl %esi, %esi;je  <PAGEVRFY+>;testl %edi, %edi;je  <PAGEVRFY+>;pushl %edi": 1,
                "movl $, (%esp);calll - <DbgPrint>;movl $, (%esp);pushl $;pushl %ebx": 1,
                "pushl %esi;pushl (%ebp);calll *;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "pushl (%esi);pushl (%ebp);pushl %edi;calll - <PAGEVRFY+>;cmpl %ebx, %eax": 1,
                "calll - <PAGEVRFY+>;cmpl %ebx, %eax;jne  <PAGEVRFY+>;movl (%edi), %eax;pushl %edi": 1,
                "daa;je  <PAGEVRFY+>;imulw $, (%esi), %bp;jne  <PAGEVRFY+>;jb  <PAGEVRFY+>": 1,
                "pushl $;calll - <DbgPrint>;popl %ecx;popl %ecx;xorl %eax, %eax": 3,
                "popl %ebx;popl %ebp;retl $;andb %ah, (%eax);andb %ah, (%eax)": 1,
                "insl %dx, %es:(%edi);popal;outsb (%esi), %dx;jae  <PAGEVRFY+>;je  <PAGEVRFY+>": 1,
                "andb %ah, (%ecx);popal;andb %ch, (%edi,%ebp,);jae  <PAGEVRFY+>;addb %al, (%eax)": 1,
                "xorl %ebx, %ebx;pushl (%esi);movl %ebx, (%esi);calll - <MmUnmapLockedPages>;cmpl %ebx, (%esi)": 1,
                "testl %ebx, %ebx;je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>;movl $, (%esp)": 1,
                "jmp  <PAGEVRFY+>;pushl %ebx;pushl %ebx;pushl $;pushl (%edi)": 1,
                "pushl $;calll - <DbgPrint>;popl %ecx;popl %ecx;pushl %ebx": 1,
                "calll - <ExFreePoolWithTag>;xorl %eax, %eax;popl %edi;incl %eax;popl %ebx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;movl (%ebp), %edx;pushl %ebx;pushl %esi": 1,
                "calll - <PAGEVRFY+>;movl (%esi), %eax;andl $, (%esi);andl $, (%esi);movl %eax, (%esi)": 1,
                "movl (%esi), %eax;andl $, (%esi);andl $, (%esi);movl %eax, (%esi);movl %edi, (%ebp)": 1,
                "addl $, %esi;decl (%ebp);jne - <PAGEVRFY+>;xorl %eax, %eax;incl %eax": 1,
                "subl $, %eax;leal (%eax), %esi;cmpl %esi, %edi;jne - <PAGEVRFY+>;popl %ebx": 1,
                "pushl $;calll - <VfFailDriver+>;movzbl (%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "calll - <VfFailDriver+>;movzbl (%ebp), %eax;pushl %eax;pushl (%ebp);pushl %esi": 1,
                "calll - <PAGEVRFY+>;movl %ebx, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "popal;andb %dh, (%eax);subl $, %eax;je  <PAGEVRFY+>;andb %dh, (%edx,%esi,)": 1,
                "jb  <PAGEVRFY+>;andb %ah, ;je  <PAGEVRFY+>;jae  <PAGEVRFY+>;andb %ah, ": 2,
                "jne  <PAGEVRFY+>;movl , %eax;cmpl $-, %eax;jne  <PAGEVRFY+>;movzbl , %eax": 3,
                "cmpb $, (%eax);pushl %edi;movl (%ebp), %edi;jne  <PAGEVRFY+>;movl %edi, %ecx": 1,
                "subl %ecx, %edx;subl %eax, %edx;cmpl (%esi), %edx;jb  <PAGEVRFY+>;movl , %eax": 1,
                "movl %edi, %ecx;subl (%esi), %ecx;subl (%esi), %ecx;cmpl (%esi), %ecx;jb - <PAGEVRFY+>": 1,
                "subl (%esi), %edi;pushl $;cmpl (%esi), %edi;sbbl %eax, %eax;negl %eax": 1,
                "testl %ebx, %ebx;jne - <PAGEVRFY+>;movl (%esi), %ebx;subl (%esi), %ebx;leal (%ebp), %eax": 1,
                "subl (%esi), %ebx;pushl %eax;pushl (%ebp);addl %edi, %ebx;pushl (%ebp)": 1,
                "testl %edi, %edi;je  <PAGEVRFY+>;cmpl $, (%edi);jne  <PAGEVRFY+>;movl (%edi), %eax": 1,
                "subl %ecx, %eax;addl (%ebp), %eax;movl (%ebp), %ecx;decl %ecx;xorl %ecx, %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movl (%eax), %ebx;subl %ecx, (%ebp);jne - <PAGEVRFY+>;jmp - <PAGEVRFY+>;movl , %eax": 1,
                "cmpl $-, %eax;jne  <PAGEVRFY+>;movzbl , %eax;movl %eax, ;movl (%ebp), %ecx": 1,
                "pushl (%ebp);pushl %esi;pushl $;calll - <DbgPrint>;pushl $": 1,
                "addl $, %esp;addl (%edi), %eax;xorl %ecx, %ecx;shrl $, %eax;cmpl %eax, %ebx": 1,
                "pushl (%ebp);pushl (%esi);pushl (%ebp);calll - <PAGEVRFY+>;jmp - <PAGEVRFY+>": 1,
                "calll - <PAGEVRFY+>;jmp - <PAGEVRFY+>;int;subb (%eax), %ah;subb (%eax), %ah": 1,
                "outsb (%esi), %dx;andb %ch, (%edi);insb %dx, %es:(%edi);jns  <PAGEVRFY+>;insb %dx, %es:(%edi)": 1,
                "jae  <PAGEVRFY+>;je  <PAGEVRFY+>;andb %ah, (%ebp);andb %ch, %fs:(%edi);andb %ch, (%ebp)": 1,
                "addb %al, (%esi);jne  <PAGEVRFY+>;pushl $;je  <PAGEVRFY+>;outsl (%esi), %dx": 1,
                "movl (%eax), %ebx;subl (%eax), %ebx;pushl %edi;subl (%eax), %ebx;movl (%ebp), %edi": 1,
                "pushl $;calll - <PAGEVRFY+>;movl %edi, (%ebp);cmpb $, (%ebp);jne  <PAGEVRFY+>": 1,
                "calll - <PAGEVRFY+>;testl %eax, %eax;je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <PAGEVRFY+>;cmpl $, (%ebp)": 1,
                "pushl (%ebp);pushl %ebx;pushl (%ebp);calll - <PAGEVRFY+>;testl %eax, %eax": 1,
                "pushl %edi;pushl (%ebp);pushl (%ebp);calll *-(%ebp);movl %eax, %esi": 1,
                "calll *-(%ebp);movl %eax, %esi;testl %esi, %esi;je  <PAGEVRFY+>;testl %ebx, %ebx": 1,
                "calll - <VfFailDriver+>;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "popal;jae  <PAGEVRFY+>;andb %ah, ;insb %dx, %es:(%edi);jne  <PAGEVRFY+>": 1,
                "calll - <VfFailDriver+>;testl %eax, %eax;jne  <PAGEVRFY+>;movl , %eax;cmpl $-, %eax": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);andb %dl, %fs:(%edi);imull $, (%eax), %esi": 2,
                "calll - <VfFailDriver+>;movl $, %eax;jmp  <PAGEVRFY+>;subl %eax, %ecx;addl -(%ebp), %ecx": 1,
                "movl (%ecx), %esi;subl $, %esi;leal (%esi), %ecx;cmpl %ecx, %edi;jne - <PAGEVRFY+>": 1,
                "subl $, %esi;leal (%esi), %ecx;cmpl %ecx, %edi;jne - <PAGEVRFY+>;leal (%ebx), %ecx": 1,
                "pushl %ebx;calll - <VfFailDriver+>;pushl (%ebp);pushl (%esi);pushl (%esi)": 1,
                "movl %eax, -(%ebp);calll - <PAGEVRFY+>;movl (%ebp), %ebx;xorl %edi, %edi;cmpl %edi, %eax": 1,
                "pushl %ecx;pushl %edi;movl %edi, (%esi);movl %ecx, (%esi);movl %eax, (%esi)": 1,
                "pushl %eax;movl %esi, (%ebp);movl $, (%ebp);calll - <VfFailDriver+>;jmp  <PAGEVRFY+>": 1,
                "jmp  <PAGEVRFY+>;pushl %edi;pushl -(%ebp);calll - <PAGEVRFY+>;pushl $": 1,
                "calll - <PAGEVRFY+>;pushl $;pushl %esi;calll - <ExFreePoolWithTag>;pushl (%ebp)": 1,
                "int;int;testl %ecx, %ecx;je  <PAGEVRFY+>;pushl $": 2,
                "int;testl %ecx, %ecx;je  <PAGEVRFY+>;pushl $;pushl %ecx": 2,
                "movl %esp, %ebp;pushl %ecx;pushl %edi;pushl $;movl %ecx, %edi": 1,
                "pushl %edi;pushl $;movl %ecx, %edi;popl %edx;xorl %ecx, %ecx": 1,
                "testb %al, %al;je  <PAGEVRFY+>;pushl %esi;movl %edi, %ecx;calll  <PAGEVRFY+>": 1,
                "orb $, (%esi);orb $-, (%edi);orb $, (%edi);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl $;calll - <RtlCaptureStackBackTrace>;cmpw $, %ax;je  <PAGEVRFY+>": 5,
                "calll  <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 5,
                "je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;pushl %ebx;pushl -(%ebp)": 1,
                "addl $, %esp;jmp  <PAGEVRFY+>;movl %esi, %ecx;calll  <PAGEVRFY+>;testl %eax, %eax": 1,
                "popl %edx;calll  <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;testb $, (%esi)": 1,
                "movl %ebx, (%eax);calll - <PAGEVRFY+>;movl %eax, %esi;cmpl %ebx, %esi;je  <PAGEVRFY+>": 1,
                "cmpl %ebx, %esi;je  <PAGEVRFY+>;cmpb %bl, -(%ebp);movl %ebx, -(%ebp);je  <PAGEVRFY+>": 1,
                "movl $, %ecx;movl %ecx, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;pushl %ecx": 1,
                "calll - <PAGEVRFY+>;cmpb $, -(%ebp);je  <PAGEVRFY+>;pushl -(%ebp);pushl %ebx": 1,
                "jmp  <PAGEVRFY+>;orl $, (%edi);xorl %edx, %edx;incl %edx;movl %edi, %ecx": 1,
                "jne  <PAGEVRFY+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "testl %eax, %eax;je  <PAGEVRFY+>;movl %esi, (%eax);movl (%ebp), %eax;testl %eax, %eax": 1,
                "pushl %ebx;calll - <IoFreeIrp>;movb $, %al;popl %edi;popl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl $, %ecx;calll *": 1,
                "andl $, ;movl $, %ecx;calll *;popl %ebp;retl $": 1,
                "testl %eax, %eax;je  <PAGEVRFY+>;leal (%ecx,%eax,), %edi;subl $, %edi;movl (%edi), %edx": 1,
                "popl %esi;popl %ebx;leave;retl;incl (%ecx)": 1,
                "movl , %eax;pushl (%eax);calll - <PAGEVRFY+>;movl (%eax), %edx;leal (%esi), %ecx": 1,
                "calll - <PAGEVRFY+>;movl (%eax), %edx;leal (%esi), %ecx;movl %eax, (%ecx);movl %edx, (%ecx)": 1,
                "movl (%edx), %ecx;xorl %eax, %eax;testl %ecx, %ecx;jbe  <PAGEVRFY+>;decl %ecx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%edx)": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %esi, %esi;je  <PAGEVRFY+>;addl %edi, (%eax);pushl -(%ebp);calll - <PAGEVRFY+>": 1,
                "jmp  <PAGEVRFY+>;movl , %eax;decl (%eax);movl , %eax;pushl $": 1,
                "movl , %eax;subl %esi, (%eax);popl %esi;popl %ebp;retl $": 1,
                "je  <PAGEVRFY+>;cmpl $, (%eax);ja  <PAGEVRFY+>;cmpl $, (%eax);ja  <PAGEVRFY+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi": 1,
                "jne - <PAGEVRFY+>;movl -(%ebp), %esi;jmp  <PAGEVRFY+>;leal -(%esi), %eax;movl (%esi), %esi": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <PAGEVRFY+>;movl , %eax;pushl -(%ebp)": 1,
                "pushl %edx;pushl %ecx;pushl %eax;movl %eax, ;movl %ecx, ": 1,
                "leal -(%esi), %ecx;movl (%esi), %esi;leal (%ecx), %eax;movl (%eax), %edi;movl (%eax), %ebx": 1,
                "movl (%eax), %edi;movl (%eax), %ebx;movl %edi, (%ebx);movl %ebx, (%edi);movl (%edx), %edi": 1,
                "leal (%edx), %ebx;movl (%ebx), %ecx;jmp  <PAGEVRFY+>;leal -(%ecx), %eax;movl (%eax), %esi": 1,
                "incl %eax;jmp  <PAGEVRFY+>;xorl %eax, %eax;popl %ebp;retl $": 1,
                "jmp  <PAGEVRFY+>;xorl %eax, %eax;popl %ebp;retl $;int": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;je  <PAGEVRFY+>;movl %ecx, (%eax)": 1,
                "je  <PAGEVRFY+>;movl %ecx, (%eax);pushl $;popl %ecx;leal (%edx), %esi": 1,
                "leal -(%ecx), %eax;movl (%eax), %ebx;movl (%ecx), %ecx;movl %eax, (%ebp);addl $, %eax": 1,
                "movl %edi, (%eax);movl %eax, (%edi);movl %eax, (%esi);leal (%edx), %eax;cmpl %eax, %ecx": 1,
                "cmpb $, (%ebp);je  <PAGEVRFY+>;pushl %esi;movl %fs:, %eax;movl %eax, %esi": 1,
                "cmpl (%eax), %edx;jbe  <PAGEVRFY+>;movl $, %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "pushl $;pushl (%eax);pushl $;pushl $;calll - <KeBugCheckEx>": 1,
                "xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl %esi, ;movl %esi, ;pushl %ebx": 1,
                "movl , %eax;movl (%eax), %eax;addl %ecx, %eax;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "movl , %eax;cmpl %edi, %eax;jne  <PAGEVRFY+>;movl $, %eax;cmpl %edi, (%ebp)": 1,
                "pushl $;pushl %eax;calll - <PAGEVRFY+>;incl %edi;cmpl , %edi": 1,
                "calll - <ExFreePoolWithTag>;movl , %edi;movl (%edi), %eax;cmpl %esi, %eax;je  <PAGEVRFY+>": 1,
                "movl %esi, ;jmp - <PAGEVRFY+>;int;int;int": 1,
                "xorb %al, %al;jmp  <PAGEVRFY+>;cmpb $, ;je - <PAGEVRFY+>;calll *": 1,
                "cmpl $, (%ebp);je - <PAGEVRFY+>;calll - <PAGEVRFY+>;testb %al, %al;jne - <PAGEVRFY+>": 1,
                "orb (%eax), %al;addb %al, (%eax);subb (%edx), %ch;andb %ah, (%eax);andb %ah, (%eax)": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);subb (%edx), %ch": 1,
                "arpl %si, (%ebp);andl %esp, (%eax);pushl %esp;jns  <PAGEVRFY+>;andb %ah, %gs:(%ecx)": 1,
                "jb  <PAGEVRFY+>;insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <PAGEVRFY+>;andb %ch, (%ecx)": 1,
                "outsl (%esi), %dx;jb  <PAGEVRFY+>;andb %ch, (%ecx);outsw (%esi), %dx;jb  <PAGEVRFY+>": 1,
                "andb %ch, (%ecx);outsw (%esi), %dx;jb  <PAGEVRFY+>;popal;je  <PAGEVRFY+>": 1,
                "andb %ch, (%edx);subb (%edx), %cl;addb %al, (%eax);addb %ch, (%edx);subb (%edx), %ch": 1,
                "movl , %eax;je  <PAGEVRFY+>;xorl %ecx, %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "movl , %eax;movl (%eax), %eax;movl (%ebx), %ecx;shll $, %eax;andl $, %ecx": 1,
                "pushl %edi;jne  <PAGEVRFY+>;pushl %ebx;movb $, (%ebp);calll - <PAGEVRFY+>": 1,
                "movl (%ecx), %edi;cmpl %ecx, %edi;movb $, (%ebp);movl %ecx, -(%ebp);je  <PAGEVRFY+>": 1,
                "cmpl %ecx, %edi;movb $, (%ebp);movl %ecx, -(%ebp);je  <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "movb %al, (%ebp);jne  <PAGEVRFY+>;movl -(%ebp), %ecx;movl (%edi), %edi;cmpl %ecx, %edi": 1,
                "movl (%edi), %edi;cmpl %ecx, %edi;jne - <PAGEVRFY+>;jmp  <PAGEVRFY+>;pushl %esi": 1,
                "calll - <PAGEVRFY+>;testb %al, %al;movl , %eax;je  <PAGEVRFY+>;pushl $": 1,
                "movb $, (%ebp);jmp  <PAGEVRFY+>;movl , %eax;cmpb $, (%ebp);je  <PAGEVRFY+>": 1,
                "movl (%edi), %esi;cmpl %edi, %esi;movl %edx, (%ebp);je  <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "pushl $;pushl %ecx;calll - <PAGEVRFY+>;incl -(%ebp);cmpl %edi, %esi": 1,
                "movl -(%ebp), %ecx;addl %ecx, (%eax);movl (%ebx), %eax;andl $, %eax;cmpl (%ebp), %eax": 1,
                "pushl %eax;calll - <PAGEVRFY+>;incl -(%ebp);cmpl %edi, %esi;jne - <PAGEVRFY+>": 1,
                "cmpl %edi, %esi;jne - <PAGEVRFY+>;popl %ebx;popl %edi;popl %esi": 2,
                "leal (%ecx,%eax), %edi;shrl $, %edi;cmpl $, %edi;jbe  <PAGEVRFY+>;pushl $": 1,
                "movl %eax, %ebx;movl (%ebx), %esi;jmp  <PAGEVRFY+>;leal -(%esi), %eax;movl (%eax), %ecx": 1,
                "jb  <PAGEVRFY+>;cmpl -(%ebp), %ecx;jae  <PAGEVRFY+>;pushl $;pushl %eax": 2,
                "movl (%eax), %ecx;cmpl %ebx, %ecx;movl (%esi), %esi;jb  <PAGEVRFY+>;cmpl -(%ebp), %ecx": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;jmp  <PAGEVRFY+>;pushl ;leal -(%esi), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movl , %eax;pushl %esi;pushl %edi": 1,
                "movl (%esi), %ecx;jmp  <PAGEVRFY+>;leal -(%ecx), %eax;cmpl %edi, (%eax);je  <PAGEVRFY+>": 1,
                "pushl %edi;pushl (%ebp);movb $, -(%ebp);pushl (%ebp);movb $, -(%ebp)": 1,
                "pushl (%ebp);movb $, -(%ebp);pushl (%ebp);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "calll - <PAGEVRFY+>;pushl $;calll - <PAGEVRFY+>;pushl $;movl %eax, -(%ebp)": 1,
                "calll - <PAGEVRFY+>;andl $, -(%ebp);testl %eax, %eax;movl %eax, -(%ebp);je  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;movb $, -(%ebp);pushl %ebx;pushl (%ebp);calll - <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;cmpb %al, ;je  <PAGEVRFY+>;pushl %eax;pushl %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%ebx), %ecx;testl %ecx, %ecx": 1,
                "jbe  <PAGEVRFY+>;cmpb $, (%ebp);jne  <PAGEVRFY+>;pushl $;pushl $": 1,
                "testb %al, %al;jne  <PAGEVRFY+>;jmp  <PAGEVRFY+>;movl -(%ebp), %eax;leal -(%eax), %edi": 1,
                "pushl $;popl %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);andl $-, (%esi)": 1,
                "movl -(%ebp), %ecx;leal (%esi), %eax;movl %ecx, (%esi);movl %ebx, (%esi);movl %eax, (%eax)": 1,
                "movl %eax, (%eax);movl %eax, (%eax);movzbl (%ebp), %eax;shll %eax;xorl (%esi), %eax": 1,
                "orl $, ;movl (%ebp), %edi;testl %edi, %edi;je  <PAGEVRFY+>;orl $, (%edi)": 1,
                "jbe  <PAGEVRFY+>;jb  <PAGEVRFY+>;subl $, %eax;jb  <PAGEVRFY+>;addb %al, (%eax)": 1,
                "jne  <PAGEVRFY+>;arpl %sp, (%ebp);andl $, %eax;jno  <PAGEVRFY+>;imull $, (%edx), %esi": 1,
                "calll - <DbgPrint>;movl (%edi), %eax;addl $, %esp;pushl %esi;pushl (%eax)": 1,
                "pushl $;calll - <PAGEVRFY+>;xorl %ecx, %ecx;cmpl %ebx, (%edi);je  <PAGEVRFY+>": 1,
                "andl $-, (%edi);jmp  <PAGEVRFY+>;andl $-, (%edi);movl %edi, (%ebp);movl (%ebp), %edi": 1,
                "shrl $, %ecx;incl %ecx;movl %ebx, %eax;rep  stosl %eax, %es:(%edi);movb %dl, %cl": 1,
                "jne  <PAGEVRFY+>;leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax": 1,
                "calll - <MmIsDriverVerifying>;testl %eax, %eax;je  <PAGEVRFY+>;pushl $;popl %edx": 1,
                "je  <PAGEVRFY+>;movl (%ebp), %eax;cmpl $, %eax;jne  <PAGEVRFY+>;pushl $": 2,
                "pushl $;popl %eax;pushl %eax;pushl (%ebp);calll  <PAGEVRFY+>": 1,
                "testl %eax, %eax;je  <PAGEVRFY+>;movl (%ebp), %eax;cmpl $, %eax;jne  <PAGEVRFY+>": 1,
                "pushl $;popl %eax;pushl %eax;pushl %edi;calll  <PAGEVRFY+>": 1,
                "pushl %esi;pushl $;calll  <PAGEVRFY+>;addl $, %esp;pushl $": 1,
                "je  <PAGEVRFY+>;movl $, %ebx;movl (%ebp), %ecx;pushl $;popl %edx": 1,
                "popl %edx;calll  <PAGEVRFY+>;testb %al, %al;movl (%ebp), %ecx;jne  <PAGEVRFY+>": 1,
                "movl (%ebp), %ecx;jne  <PAGEVRFY+>;movl (%ecx), %eax;andl $, %eax;cmpb $, %al": 1,
                "addl $, %esp;andb $, (%ecx);movl (%ebp), %ecx;movl $, %eax;testl %eax, (%edi)": 1,
                "pushl %ecx;pushl (%ebp);pushl %esi;pushl %ebx;calll  <PAGEVRFY+>": 2,
                "setne %dl;addl $, %edx;movl %edx, %eax;imull $, %eax, %eax;addl $, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movb (%esi), %al": 2,
                "movl %edi, %edx;pushl (%ebp);movl %ebx, %ecx;pushl %esi;pushl (%ebp)": 2,
                "pushl (%ebp);calll *%eax;movl , %eax;testl %eax, %eax;je  <PAGEVRFY+>": 2,
                "pushl %edi;movl %edx, %edi;ja  <PAGEVRFY+>;movzbl %al, %eax;jmp  <PAGEVRFY+>": 2,
                "movl , %eax;testl %eax, %eax;je  <PAGEVRFY+>;movl %edi, %ecx;popl %edi": 3,
                "movl -(%ebx), %edx;movl -(%ebp), %ebx;leal (%eax,%edi,), %ecx;addl %edi, %ecx;movl %edx, (%ebx,%ecx,)": 1,
                "jmp  <PAGEVRFY+>;incl -(%ebp);movl -(%ebp), %eax;cmpb $, (%eax);jne - <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;pushl %ebx;pushl %edi;pushl %eax;pushl %ecx": 1,
                "movb $, (%ebx);movl -(%ebp), %eax;movl (%ebp), %ebx;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "retl $;andl $, %eax;jo  <PAGEVRFY+>;int;int": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;decl %ecx;movl %edx, -(%ebp);movl %edx, (%ebp)": 1,
                "movl %edx, (%ebp);movl %ecx, -(%ebp);jmp  <PAGEVRFY+>;cmpl $, -(%ebp);jle  <PAGEVRFY+>": 1,
                "testb %bl, %bl;jne - <PAGEVRFY+>;subl %edx, %eax;movl %eax, %ebx;pushl %ebx": 1,
                "pushl %ecx;leal (%esi), %eax;pushl %eax;calll - <RtlCompareMemory>;cmpl %ebx, %eax": 1,
                "jne  <PAGEVRFY+>;testb $, %bl;je  <PAGEVRFY+>;calll - <PAGEVRFY+>;cmpl $, %eax": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "calll - <KeStackAttachProcess+>;pushl (%esi);leal -(%ebp), %eax;pushl (%esi);pushl %eax": 1,
                "leal -(%ebp), %eax;pushl (%esi);pushl %eax;pushl (%esi);pushl (%esi)": 1,
                "movl (%esi), %esi;pushl (%esi);pushl (%esi);pushl (%esi);pushl %ecx": 1,
                "pushl %ebp;pushl %ebx;incl %ebp;andb %dl, (%eax,%ecx,);andb %dl, (%esi)": 1,
                "pushl %edi;decl %eax;incl %ebp;decl %esi;andb %dl, (%eax,%ecx,)": 1,
                "incl %ebp;decl %esi;andb %dl, (%eax,%ecx,);andb %cl, (%ebp);incl %ebx": 1,
                "incl %eax;andb %dh, (%eax);js  <PAGEVRFY+>;jo  <PAGEVRFY+>;andb %al, (%eax)": 1,
                "jae  <PAGEVRFY+>;addb %ah, ;jae  <PAGEVRFY+>;addb %ah, ;jae  <PAGEVRFY+>": 1,
                "movb (%eax), %dl;incl %eax;testb %dl, %dl;jne - <PAGEVRFY+>;pushl %ecx": 1,
                "popl %ecx;jmp  <PAGEVRFY+>;xorl %ebx, %ebx;leal (%ebx), %eax;cmpl $, %eax": 1,
                "testl %ebx, %ebx;jle  <PAGEVRFY+>;movl %ebx, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl $, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl $": 1,
                "calll - <DbgPrint>;popl %ecx;leal -(%ebp), %eax;popl %ecx;leal (%eax), %edx": 1,
                "popl %ecx;leal -(%ebp), %eax;popl %ecx;leal (%eax), %edx;movb (%eax), %cl": 1,
                "calll - <DbgPrint>;movl -(%ebp), %esi;leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 2,
                "pushl $;popl %ecx;subl -(%ebp), %ecx;movl %edi, %eax;subl -(%ebp), %eax": 1,
                "cmpl $, %eax;popl %ecx;popl %ecx;jge  <PAGEVRFY+>;movl %eax, %ecx": 1,
                "popl %ecx;movl -(%ebp), %eax;incl %eax;movl %eax, -(%ebp);cmpl %edi, -(%ebp)": 1,
                "movl %edi, %edi;pushl %esi;movl %ecx, %esi;movl (%esi), %eax;movl (%eax), %eax": 1,
                "pushl $;das;das;ja  <PAGEVRFY+>;ja  <PAGEVRFY+>": 1,
                "bound (%ebx), %esp;popaw;jne  <PAGEVRFY+>;je  <PAGEVRFY+>;popal": 1,
                "int;pushl $;pushl (%ecx);pushl (%ecx);pushl $": 1,
                "pushl (%ecx);pushl $;pushl $;pushl $;pushl $": 1,
                "popal;imull $, (%eax), %ebp;outsb (%si), %dx;outsl (%esi), %dx;jb  <PAGEVRFY+>": 2,
                "outsb (%si), %dx;outsl (%esi), %dx;jb  <PAGEVRFY+>;subb $, %al;popl %edx": 1,
                "bound (%ecx), %ebp;jb  <PAGEVRFY+>;subl %edi, (%edi);andb %al, (%eax);addb %al, (%eax)": 1,
                "subl %edi, (%edi);andb %al, (%eax);addb %al, (%edx);popal;imull $, (%eax), %esi": 1,
                "andb %ch, (%ecx);andb %ch, %cs:(%eax);jo  <PAGEVRFY+>;jae  <PAGEVRFY+>;andb %ah, (%edi)": 1,
                "jmp  <PAGEVRFY+>;pushl $;calll - <DbgPrompt>;movsbl -(%ebp), %eax;cmpl $, %eax": 1,
                "cmpl $, (%esi);je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>;orl $, %ebx": 1,
                "calll - <DbgPrint>;orl $, %ebx;jmp  <PAGEVRFY+>;pushl $;movl $, ": 1,
                "xorl %eax, %eax;jmp  <PAGEVRFY+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %edx": 1,
                "decl %edi;movb (%edi), %cl;incl %edi;testb %cl, %cl;jne - <PAGEVRFY+>": 1,
                "xorl %edx, %edx;incl %edx;xorl %ecx, %ecx;calll  <PAGEVRFY+>;testb %al, %al": 3,
                "calll - <PAGEVRFY+>;addl $, %esp;popl %ebp;jmp - <NtWriteFile>;int": 1,
                "jmp - <NtWriteFile>;int;int;int;int": 1,
                "pushl %esi;movl %ecx, %esi;jge  <PAGEVRFY+>;testl %edx, %edx;je  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;xorl %eax, %eax;movl %edx, %ecx;andl $, %ecx;incl %eax": 1,
                "retl;xorb %al, %al;popl %esi;retl;int": 1,
                "movl %ecx, %eax;jge  <PAGEVRFY+>;testl %edx, %edx;je  <PAGEVRFY+>;pushl %esi": 1,
                "pushl %edi;jne  <PAGEVRFY+>;movl , %eax;leal (%eax,%edx,), %edi;cmpb $, (%ebp)": 1,
                "movl %edx, -(%ebp);movl %edi, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;xchgl %eax, (%ecx)": 1,
                "movl (%eax,%edx,), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);jmp  <PAGEVRFY+>;movl (%ebp), %eax": 1,
                "calll - <PAGEVRFY+>;testb %bl, %bl;jns  <PAGEVRFY+>;pushl %esi;pushl $": 1,
                "xorl %ecx, %ecx;calll - <PAGEVRFY+>;popl %edi;popl %esi;popl %ebx": 1,
                "int;int;jmp  <PAGEVRFY+>;int;int": 5,
                "decl %eax;je  <PAGEVRFY+>;decl %eax;jne  <PAGEVRFY+>;pushl $": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jne  <PAGEVRFY+>;xorl %eax, %eax;jmp  <PAGEVRFY+>": 1,
                "negb %al;sbbl %eax, %eax;andl %esi, %eax;popl %edi;popl %esi": 1,
                "andl %esi, %eax;popl %edi;popl %esi;popl %ebx;retl": 1,
                "je  <PAGEVRFY+>;orl $, (%eax);xorl %eax, %eax;popl %ebp;retl $": 1,
                "movl (%eax), %eax;pushl %esi;pushl %edi;movl %eax, (%ebp);je  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;decl %ecx;decl %ecx;je  <PAGEVRFY+>;subl $, %ecx": 1,
                "decl %ecx;je  <PAGEVRFY+>;subl $, %ecx;je  <PAGEVRFY+>;movl (%edx), %esi": 1,
                "popl %ecx;movl %eax, %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx;movb $, (%eax)": 1,
                "calll - <IoDetachDevice>;pushl %ebx;calll - <IoDeleteDevice>;movl %esi, %eax;jmp  <PAGEVRFY+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %eax;cmpl $, (%eax)": 1,
                "movl $, (%edx);movl $, (%edx);xorl %eax, %eax;popl %edi;popl %ebp": 1,
                "pushl %edi;pushl %eax;calll - <IoAttachDeviceToDeviceStack>;testl %eax, %eax;movl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl %edi, (%esi);movl -(%ebp), %eax;andb $, (%eax)": 1,
                "retl $;decl %ecx;pushl %edx;pushl %eax;popl %edi": 3,
                "incl %ebx;pushl %ebx;decl %ecx;addb %cl, (%ecx);pushl %eax": 1,
                "decl %ebp;decl %edx;popl %edi;incl %edx;decl %edi": 1,
                "calll - <DbgPrint>;popl %ecx;retl;int;int": 2,
                "pushl %esi;movl %ecx, %esi;movl (%esi), %ecx;pushl $;popl %edx": 1,
                "movl (%esi), %eax;testl $, %eax;je  <PAGEVRFY+>;testl $, %eax;jne  <PAGEVRFY+>": 1,
                "movl (%esi), %eax;movl $, %ecx;testl %eax, %ecx;jne  <PAGEVRFY+>;cmpb $, (%ebp)": 1,
                "cmpb $, (%ebp);je  <PAGEVRFY+>;testb %bl, %bl;jne  <PAGEVRFY+>;orl %ecx, %eax": 1,
                "movl %eax, (%esi);cmpl $, ;je  <PAGEVRFY+>;pushl %edi;pushl (%ebp)": 1,
                "calll - <PAGEVRFY+>;addl $, %esp;cmpb $, -(%ebp);je  <PAGEVRFY+>;orb $, (%esi)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl $;jmp  <PAGEVRFY+>": 1,
                "pushl %esi;pushl (%ebp);pushl $;pushl $;calll - <PAGEVRFY+>": 13,
                "je  <PAGEVRFY+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl $;popl %edx": 2,
                "int;int;int;int;movl %edx, %eax": 1,
                "int;int;movl %edx, %eax;shrl $, %eax;movl %edx, %ecx": 1,
                "andl $, %ecx;testl $, %edx;je  <PAGEVRFY+>;xorb %al, %al;retl": 1,
                "retl;testl $, %edx;jne  <PAGEVRFY+>;cmpl $, %eax;jae  <PAGEVRFY+>": 1,
                "jb  <PAGEVRFY+>;cmpl $, %ecx;jne  <PAGEVRFY+>;movb $, %al;retl": 1,
                "movb (%edx), %al;cmpb (%ecx), %al;jne  <PAGEVRFY+>;xorb %al, %al;retl": 1,
                "cmpl %ebx, (%edx);jne  <PAGEVRFY+>;cmpl %ebx, (%edx);je  <PAGEVRFY+>;movl (%edx), %eax": 1,
                "movl (%ebp), %eax;orb $, (%eax);cmpl $, ;je  <PAGEVRFY+>;pushl %esi": 1,
                "cmpl $, ;je  <PAGEVRFY+>;pushl %eax;pushl (%ecx);pushl (%esi)": 1,
                "decl %edx;popl %edi;pushl %ebx;popl %ecx;pushl %ebx": 1,
                "subl %eax, (%eax);int;int;int;int": 2,
                "movl %esi, -(%ebp);calll - <PAGEVRFY+>;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "calll - <PAGEVRFY+>;addl $, %esp;orb $, (%ebx);cmpl $, %edi;jne  <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;cmpl %eax, ;je  <PAGEVRFY+>;pushl %edi;pushl %ebx": 1,
                "movb (%esi), %al;cmpb $, %al;popl %ecx;ja  <PAGEVRFY+>;movzbl %al, %eax": 2,
                "pushl (,%eax,);calll - <DbgPrint>;movb (%esi), %al;cmpb $, %al;popl %ecx": 1,
                "pushl $;calll - <DbgPrint>;popl %ecx;popl %esi;retl": 2,
                "orb $, (%edi);jmp  <PAGEVRFY+>;movl (%ebp), %edi;movl (%ebp), %eax;cmpb $, (%eax)": 1,
                "addl $, %esp;cmpw $, (%edi);jae  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "movl (%ebp), %edi;movl (%ebx), %ecx;pushl $;popl %edx;calll - <PAGEVRFY+>": 1,
                "testb %al, %al;je  <PAGEVRFY+>;cmpl $, (%edi);jne  <PAGEVRFY+>;movl -(%ebp), %eax": 1,
                "pushl %esp;jns  <PAGEVRFY+>;incl %esp;jne  <PAGEVRFY+>;jo  <PAGEVRFY+>": 1,
                "imull $, (%ebp), %ebp;incl %esp;jbe  <PAGEVRFY+>;arpl %sp, (%ebp);jae  <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;jb  <PAGEVRFY+>;decl %eax;popal;jb  <PAGEVRFY+>": 1,
                "outsb (%esi), %dx;subl %eax, (%eax);addb %ch, (%eax);pushl %edx;insl %dx, %es:(%edi)": 1,
                "jae  <PAGEVRFY+>;addb %ch, (%eax);incl %edx;jne  <PAGEVRFY+>;pushl %edx": 1,
                "jne  <PAGEVRFY+>;movl (%esi), %eax;subl $, %eax;je  <PAGEVRFY+>;decl %eax": 1,
                "je  <PAGEVRFY+>;cmpl $, %ecx;je  <PAGEVRFY+>;jle  <PAGEVRFY+>;cmpl $, %ecx": 1,
                "cmpl $, %ecx;jle - <PAGEVRFY+>;cmpl $, %ecx;jne - <PAGEVRFY+>;xorb %al, %al": 1,
                "jne - <PAGEVRFY+>;xorb %al, %al;retl;movsl (%esi), %es:(%edi);andl %ebx, (%eax)": 1,
                "andl %ebx, (%eax);leal (%ecx), %esp;popl %eax;addb %bh, -(%ebx);andl %ebx, (%eax)": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movb $, -(%ebp)": 5,
                "movb $, -(%ebp);calll - <PAGEVRFY+>;pushl $;popl %edx;xorl %ecx, %ecx": 1,
                "pushl $;popl %edx;xorl %ecx, %ecx;calll - <PAGEVRFY+>;testb %al, %al": 5,
                "cmpl %eax, ;je  <PAGEVRFY+>;pushl %ebx;pushl (%ebp);pushl $": 1,
                "calll - <VfFailDriver+>;popl %esi;popl %ebx;popl %edi;leave": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);je  <PAGEVRFY+>;movl (%eax), %eax": 1,
                "addl $, %esp;testb %bl, %bl;je  <PAGEVRFY+>;pushl -(%ebp);xorl %eax, %eax": 1,
                "pushl %eax;movl -(%ebp), %eax;pushl (%eax);pushl $;pushl -(%ebp)": 1,
                "decl (%esi);andb $-, (%ebx);xorl %ecx, %ecx;cmpl %ecx, -(%ebp);movl %ecx, (%ebx)": 1,
                "jne  <PAGEVRFY+>;cmpl %ecx, ;je  <PAGEVRFY+>;pushl %edi;pushl -(%ebp)": 1,
                "testb %al, %al;je  <PAGEVRFY+>;movl (%esi), %ecx;leal -(%ebp), %edx;calll  <PAGEVRFY+>": 1,
                "leal -(%ebp), %edx;calll  <PAGEVRFY+>;movl -(%ebp), %ecx;testl %ecx, %ecx;movl $, %edi": 1,
                "addl $, %esp;movl (%esi), %ecx;xorl %edx, %edx;calll  <PAGEVRFY+>;testb %al, %al": 1,
                "testb %al, %al;je  <PAGEVRFY+>;movl (%esi), %eax;cmpl %ebx, %eax;jbe  <PAGEVRFY+>": 1,
                "movl (%esi), %edx;decl %edx;movl %ebx, %ecx;calll  <PAGEVRFY+>;movl (%esi), %ecx": 1,
                "shrl %eax;cmpl %eax, %edi;jb - <PAGEVRFY+>;popl %edi;popl %ebx": 1,
                "pushl %esi;movl %ecx, %esi;leal (%esi), %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);cmpl $, %edx;jne  <PAGEVRFY+>": 1,
                "movl %ecx, %esi;jne  <PAGEVRFY+>;decl (%esi);jne  <PAGEVRFY+>;pushl %ebx": 1,
                "movl %esi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx;xaddl %eax, (%ecx);popl %esi": 3,
                "int;movl (%ecx), %edx;subl $, %edx;movl %edx, %eax;subl (%ecx), %eax": 1,
                "movl %eax, -(%ebp);jne  <PAGEVRFY+>;calll *%ebx;movb %al, -(%ebp);movl (%esi), %eax": 1,
                "jmp - <PAGEVRFY+>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "movl %ecx, %edi;movl %edx, -(%ebp);movl %edi, -(%ebp);calll *;leal -(%ebp), %edx": 1,
                "movl %edi, -(%ebp);calll *;leal -(%ebp), %edx;movl %edi, %ecx;movb %al, -(%ebp)": 1,
                "movl %edi, %ecx;movb %al, -(%ebp);calll - <PAGEVRFY+>;testl %eax, %eax;je  <PAGEVRFY+>": 1,
                "leal (%esi), %eax;xorl %ebx, %ebx;incl %ebx;movl %ebx, (%esi);leal (%esi), %edi": 1,
                "xorl %ebx, %ebx;incl %ebx;movl %ebx, (%esi);leal (%esi), %edi;movl %ebx, (%edi)": 1,
                "movl %edx, %eax;addl %edi, %eax;popl %edi;popl %esi;leave": 1,
                "jmp  <PAGEVRFY+>;leal (%eax,%eax,), %edx;leal (,%edx,), %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "leal (,%edx,), %edx;movl (%ebp), %eax;movl %edx, (%eax);popl %esi;popl %ebp": 1,
                "movl (%ebp), %eax;addl $, %edi;cmpl (%esi), %eax;jb - <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;movl %esi, %ecx;calll - <PAGEVRFY+>": 1,
                "calll - <DbgPrint>;addl $, %esp;popl %esi;popl %ebp;retl $": 1,
                "testb %al, %al;je  <PAGEVRFY+>;pushl $;calll - <DbgPrint>;popl %ecx": 1,
                "testl %esi, %esi;jbe  <PAGEVRFY+>;pushl %ebx;calll - <MmIsAddressValid>;testb %al, %al": 2,
                "addl $, %ebx;subl $, %esi;cmpl $, %esi;ja - <PAGEVRFY+>;testl %esi, %esi": 1,
                "movl $, %esi;subl %eax, %esi;pushl %esi;pushl %ebx;calll - <KeReadStateTimer+>": 1,
                "pushl %esi;pushl %ebx;calll - <KeReadStateTimer+>;pushl %esi;pushl %ebx": 2,
                "calll - <ExQueueWorkItem+>;popl %esi;popl %ebx;popl %ebp;retl $": 1,
                "testw $, %bx;jne  <PAGEVRFY+>;pushl %ebx;calll - <MmTrimAllSystemPagableMemory+>;testb $, %al": 1,
                "pushl %ebx;calll - <ExIsResourceAcquiredSharedLite+>;jmp  <PAGEVRFY+>;testb $, %bl;je  <PAGEVRFY+>": 1,
                "je  <PAGEVRFY+>;pushl $;pushl %ebx;pushl $;pushl $": 1,
                "calll *%edi;cmpb $, %al;jbe  <PAGEVRFY+>;pushl %ebx;pushl (%ebp)": 2,
                "calll - <ExIsResourceAcquiredSharedLite+>;popl %edi;testl %eax, %eax;je - <PAGEVRFY+>;pushl %ebx": 1,
                "movl %esi, %ecx;calll - <PAGEVRFY+>;movl %eax, (%edi);jmp  <PAGEVRFY+>;movl %esi, %ecx": 1,
                "orb $-, (%esi);popl %edi;popl %esi;retl;int": 1,
                "jne  <PAGEVRFY+>;calll - <PAGEVRFY+>;movl %eax, %edi;testl %edi, %edi;jne  <PAGEVRFY+>": 1,
                "movl %eax, %edi;testl %edi, %edi;jne  <PAGEVRFY+>;jmp  <PAGEVRFY+>;movl %esi, %ecx": 1,
                "jmp  <PAGEVRFY+>;orb $-, (%esi);xorb %al, %al;popl %edi;popl %esi": 1,
                "pushl (%esi);pushl $;popl %edx;calll - <PAGEVRFY+>;movl -(%ebp), %eax": 1,
                "pushl $;popl %edx;calll - <PAGEVRFY+>;movl -(%ebp), %eax;cmpl $, (%eax)": 1,
                "jne  <PAGEVRFY+>;movl (%esi), %ecx;calll - <PAGEVRFY+>;testl %eax, %eax;jne  <PAGEVRFY+>": 1,
                "pushl %eax;pushl (%esi);pushl %edi;pushl $;calll - <PAGEVRFY+>": 3,
                "jne  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;pushl %ebx;leal (%esi), %eax": 2,
                "pushl %eax;pushl (%esi);pushl %edi;pushl $;jmp  <PAGEVRFY+>": 1,
                "jmp  <PAGEVRFY+>;cmpl $, %eax;jne  <PAGEVRFY+>;xorl %edx, %edx;cmpl (%esi), %ebx": 1,
                "cmpl $, -(%ebp);movl $, %edi;jne  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "addl $, %esp;movl -(%ebp), %edi;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <PAGEVRFY+>": 1,
                "movl -(%ebp), %ecx;testl %ecx, %ecx;je  <PAGEVRFY+>;calll - <ObfDereferenceObject>;movl $, %ebx": 1,
                "pushl $;calll - <PAGEVRFY+>;addl $, %esp;orl $, (%edi);testl %ebx, (%esi)": 1,
                "cmpl (%esi), %eax;je  <PAGEVRFY+>;cmpl $, %eax;je  <PAGEVRFY+>;movl (%edi), %ecx": 1,
                "testb %al, %al;je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;leal (%esi), %eax": 1,
                "pushl -(%ebp);movl %edi, %ecx;pushl %ebx;pushl $;popl %edx": 1,
                "testb $, (%eax);jne  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;pushl %esi": 1,
                "jne  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>;pushl %esi;pushl %ebx": 1,
                "movl %edx, %esi;movl (%esi), %ebx;testl %ebx, %ebx;je  <PAGEVRFY+>;pushl %edi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);leal (%eax,%eax,), %eax;sete %dl;shll $, %eax": 1,
                "cmpl %ebx, (%ebp);leal (%eax,%eax,), %eax;sete %dl;shll $, %eax;pushl %esi": 1,
                "movl %eax, (%eax);movl (%ebp), %eax;movl %eax, (%esi);testb %dl, %dl;movl (%ebp), %ecx": 1,
                "leal (%eax), %edx;movl %edx, (%ebp);leal (%eax), %edx;movl %edx, (%ebp);movl (%eax), %edx": 1,
                "addl $, %edx;xorl %eax, %eax;decl (%ebp);leal -(%edx), %edi;pushl $": 1,
                "movl %ecx, (%edx);movl (%eax), %eax;movl %eax, (%edx);movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "movl (%esi), %eax;andl $-, (%eax);movl (%esi), %ecx;xorl %edx, %edx;incl %edx": 1,
                "calll - <IofCompleteRequest>;pushl %ebx;pushl %esi;calll - <ExFreePoolWithTag>;popl %esi": 1,
                "calll - <PAGEVRFY+>;movl (%eax), %ebx;addl $-, (%edi);decb (%edi);decb (%ebx)": 1,
                "movl (%eax), %ebx;addl $-, (%edi);decb (%edi);decb (%ebx);addl $-, (%ebx)": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %ecx, (%eax);movb (%esi), %cl;movb %cl, (%eax)": 1,
                "movl %ecx, (%eax);movb (%esi), %cl;movb %cl, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "movl (%edi), %eax;movl (%esi), %ecx;pushl $;subl $, %eax;popl %edx": 1,
                "movl (%esi), %ecx;pushl $;subl $, %eax;popl %edx;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;movl (%ebp), %edx": 1,
                "je  <PAGEVRFY+>;movl (%ebp), %edx;movl %esi, %ecx;calll - <PAGEVRFY+>;movb (%esi), %al": 1,
                "pushl %edi;movl %esi, %edx;calll  <PAGEVRFY+>;movl -(%ebp), %ecx;calll  <PAGEVRFY+>": 1,
                "pushl %eax;pushl $;pushl $;calll - <PAGEVRFY+>;addl $, %esp": 1,
                "movl (%ebp), %eax;pushl %esi;pushl %edi;movl %eax, (%ecx);movl (%eax), %esi": 1,
                "movl %esi, (%eax);je  <PAGEVRFY+>;testb $, (%esi);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "calll - <PAGEVRFY+>;addl $, %esp;movb -(%ebp), %al;pushl $;movb %al, (%esi)": 1,
                "leal (%eax,%eax,), %ecx;movl -(%ebp), %eax;leal (%eax,%ecx,), %ecx;pushl %ecx;pushl %eax": 1,
                "addl $, %ebx;pushl %eax;pushl %ebx;calll - <PAGEVRFY+>;movl %esi, %ecx": 1,
                "movl %edi, -(%ebp);calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;movl (%esi), %ecx": 1,
                "testb %al, %al;je  <PAGEVRFY+>;movl (%esi), %ecx;pushl $;popl %edx": 1,
                "je  <PAGEVRFY+>;movl (%esi), %ecx;pushl $;popl %edx;calll - <PAGEVRFY+>": 1,
                "jne  <PAGEVRFY+>;testb $, (%ebx);je  <PAGEVRFY+>;cmpl $, ;je  <PAGEVRFY+>": 1,
                "movl %edx, (%edx);movl %edx, (%edx);movl -(%ebp), %eax;movl (%eax), %ecx;pushl $": 1,
                "movl %ecx, (%esi);movb (%eax), %cl;movb %cl, (%esi);movl (%eax), %eax;movl %eax, (%esi)": 1,
                "movb %cl, (%esi);movl (%eax), %eax;movl %eax, (%esi);movl (%ebx), %eax;subl $, %eax": 1,
                "movb $-, (%eax);jmp  <PAGEVRFY+>;movl (%ebx), %ebx;movl (%esi), %ecx;pushl $": 1,
                "incl %edx;movl %esi, %ecx;calll - <PAGEVRFY+>;jmp  <PAGEVRFY+>;movl -(%ebp), %ecx": 1,
                "leal (%edx), %esi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);je  <PAGEVRFY+>;sbbl %eax, %eax": 1,
                "testl %eax, %eax;sete %al;andb %al, %cl;cmpl $, (%ebp);sete %al": 1,
                "sete %al;andb %al, %cl;cmpl $, (%ebp);sete %al;testb %cl, %al": 1,
                "andl $, (%ebp);movl $, (%ebp);movl (%ebp), %esi;jmp  <PAGEVRFY+>;testl %ecx, %ecx": 1,
                "pushl $;pushl $;calll - <PAGEVRFY+>;addl $, %esp;movl (%ebx), %eax": 1,
                "calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;cmpl $, (%ebp);jne  <PAGEVRFY+>": 1,
                "rep  movsl (%esi), %es:(%edi);movb $, (%eax);movl (%ebx), %eax;subl $, %eax;movl $, (%eax)": 1,
                "cltd;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %edi;movl (%esi), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;movl (%esi), %eax;subl $, %edi;movl %eax, (%edi)": 1,
                "movl (%esi), %eax;subl $, %edi;movl %eax, (%edi);movl (%esi), %eax;movl %edx, -(%ebp)": 1,
                "calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;pushl (%edi);calll - <PAGEVRFY+>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %edi;calll - <KeSetTimerEx>;movl $, (%esi)": 1,
                "addl $, %esi;pushl $;pushl %esi;movl %ebx, (%esi);calll - <ExQueueWorkItem>": 1,
                "movb %al, -(%ebp);calll - <PAGEVRFY+>;movl -(%ebp), %eax;testl %eax, %eax;je  <PAGEVRFY+>": 1,
                "pushl $;calll - <RtlCaptureStackBackTrace>;movzwl %ax, %eax;cmpl $, %eax;je  <PAGEVRFY+>": 1,
                "pushl %eax;movl %edi, %edx;movb $, -(%ebp);calll  <PAGEVRFY+>;jmp  <PAGEVRFY+>": 1,
                "movb $, -(%ebp);calll  <PAGEVRFY+>;movl %eax, -(%ebp);movl %eax, %edi;movl -(%ebp), %ecx": 1,
                "movl (%ecx), %ecx;pushl $;popl %edx;calll - <PAGEVRFY+>;testb %al, %al": 1,
                "pushl $;calll - <PAGEVRFY+>;addl $, %esp;movl (%edi), %edx;movl -(%ebp), %ecx": 1,
                "movl %eax, (%eax);movl -(%ebp), %eax;movl %eax, (%edi);movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "addl $-, (%esi);decb %al;movb %al, (%esi);movl (%esi), %eax;orb $, -(%eax)": 1,
                "orb $, -(%eax);incb (%esi);addl $, (%esi);pushl $;popl %edx": 1,
                "xorl %ecx, %ecx;calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>;testb $, (%esi)": 1,
                "jmp  <PAGEVRFY+>;xorl %eax, %eax;testb %al, %al;movl -(%ebp), %ecx;movb %al, (%esi)": 1,
                "testb %al, %al;movl -(%ebp), %ecx;movb %al, (%esi);movl %ecx, (%esi);jne  <PAGEVRFY+>": 1,
                "subl $, %esi;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;je  <PAGEVRFY+>;movl %ebx, (%eax)": 1,
                "movl %ecx, (%eax);movl %edi, (%eax);movb (%ebx), %cl;movb %cl, (%eax);xorl %edx, %edx": 1,
                "movl %ebx, %ecx;movl $, (%esi);movl %eax, (%esi);calll - <PAGEVRFY+>;movl %ebx, %ecx": 1,
                "movl (%esi), %eax;movl (%eax), %esi;testl %esi, %esi;je  <PAGEVRFY+>;movl %esi, %ecx": 1,
                "calll *;movl %edi, (%ebx);popl %edi;popl %esi;popl %ebx": 1,
                "pushl %ecx;pushl %ebx;pushl %edi;movl %ecx, %edi;movl (%edi), %eax": 1,
                "je  <PAGEVRFY+>;movb $, -(%ebp);testl %edi, %edi;movl $, %ecx;je  <PAGEVRFY+>": 1,
                "movl %edx, %edi;cmpl $, %edi;movl %ecx, %esi;jne  <PAGEVRFY+>;calll *": 1,
                "jmp  <PAGEVRFY+>;shrl $, %eax;andl $, %eax;retl;int": 1,
                "int;int;movl (%ecx), %eax;andl $-, (%eax);andl $, (%eax)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;pushl %esi;pushl %edi": 2,
                "movb %al, (%ecx);movl (%esi), %esi;movl (%edi), %ecx;pushl $;popl %edx": 1,
                "popl %edx;xorl %ecx, %ecx;movb %al, (%edi);calll - <PAGEVRFY+>;testb %al, %al": 1,
                "incl %eax;andb %al, (%edi);jmp  <PAGEVRFY+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "movl (%edi), %ecx;pushl $;movl %edx, %esi;popl %edx;calll - <PAGEVRFY+>": 1,
                "movl %edx, %esi;popl %edx;calll - <PAGEVRFY+>;testb %al, %al;je  <PAGEVRFY+>": 1,
                "cmpl %ebx, %eax;je  <PAGEVRFY+>;cmpl %ebx, (%eax);jne  <PAGEVRFY+>;testb $, %cl": 1,
                "movl (%eax), %eax;pushl $;pushl $;pushl %eax;pushl %ebx": 1,
                "pushl %ebx;pushl %eax;calll - <MmMapLockedPagesSpecifyCache>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <MmProbeAndLockPages>;movl -(%ebp), %eax;orb $, (%edi);movl %eax, (%edi)": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl (%ebx);calll - <MmUnlockPages>;pushl (%ebx)": 1,
                "int;int;movl %edi, %edi;pushl %edi;movl %ecx, %edi": 1,
                "xorl %edx, %edx;movl %eax, (%eax);movl %eax, (%eax);calll - <PAGEVRFY+>;pushl $": 1,
                "orl $, (%edi);movl (%esi), %eax;movl %eax, (%edi);calll - <PAGEVRFY+>;movl (%esi), %esi": 1,
                "movb (%eax), %al;movb %al, (%esi);movb (%ecx), %al;movb %al, (%esi);movb (%ecx), %al": 1,
                "movl %esi, %ecx;movl %esi, (%eax);calll - <PAGEVRFY+>;movb $, %al;popl %edi": 1,
                "movl %eax, %edi;movl (%edi), %eax;je  <PAGEVRFY+>;movl (%eax), %ecx;orb $, (%ecx)": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);movl %edx, %ecx;testb $, %cl;je  <PAGEVRFY+>": 1,
                "movl (%ebp), %eax;pushl %esi;movb $, (%eax);movl (%edx), %eax;movl (%eax), %eax": 1,
                "leal (%ecx,%ecx,), %ecx;shll $, %ecx;pushl $;leal (%eax,%ecx), %esi;pushl %esi": 1,
                "movl (%ebx), %ecx;pushl $;pushl $;popl %edx;calll - <PAGEVRFY+>": 2,
                "movl %ebx, (%esi);movb (%edi), %al;movb %al, (%esi);movl (%esi), %eax;andl $, %eax": 1,
                "andl $, %eax;orl $, %eax;cmpb $, -(%ebp);movl %eax, (%esi);movl %edi, (%ebx)": 1,
                "movl $, %eax;jmp  <PAGEVRFY+>;movl (%ebp), %ecx;subl %esi, %edx;movl %edx, (%ecx)": 1,
                "xorl %eax, %eax;incl %eax;retl $;addb %al, (%eax);addb %al, (%eax)": 1,
                "movl $, %eax;movl $, %ecx;xchgl %eax, (%ecx);xorl %eax, %eax;retl": 2,
                "movl (%ecx), %ebx;pushl %esi;pushl %edi;movl %edx, %edi;movl (%edi), %esi": 1,
                "pushl %esi;pushl %edi;movl %edx, %edi;movl (%edi), %esi;movl %ecx, -(%ebp)": 1,
                "calll - <ObfReferenceObject>;movl $, %eax;movl $, %ecx;xaddl %eax, (%ecx);leal (%eax), %ecx": 1,
                "testb $, (%edi);movzbl (%esi), %eax;movzbl (%esi), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "calll  <PAGEWMI+>;movl -(%ebp), %ecx;movl %edi, %edx;calll - <IoBuildPartialMdl+>;movl %eax, %esi": 1,
                "movl %eax, %esi;movl , %eax;testl %eax, %eax;je  <PAGEWMI+>;testb $, (%eax)": 1,
                "calll - <MmIsThisAnNtAsSystem+>;calll - <NtFreeVirtualMemory+>;movl (%ebp), %ebx;addl $-, %ebx;leal (%ebx), %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll  <PAGEWMI+>;testl %eax, %eax": 2,
                "movl %ecx, %edx;shrl $, %ecx;pushl %edi;addl $, %eax;addl $, %esi": 1,
                "shrl $, %ecx;pushl %edi;addl $, %eax;addl $, %esi;movl %eax, %edi": 1,
                "cmpl $, %edx;jae  <PAGEWMI+>;movl $, %eax;jmp  <PAGEWMI+>;xorl %edi, %edi": 1,
                "pushl %esi;pushl %edi;movl %edx, -(%ebp);movl %ecx, %ebx;movzbl %ds:-, %eax": 1,
                "movzbl %cl, %esi;leal (,%esi,), %esi;movl (%esi), %edi;testl %edi, %edi;movl %ecx, -(%ebp)": 1,
                "movw $, (%esi);calll *;movl %eax, (%esi);movl -(%ebp), %eax;movl %edx, (%esi)": 1,
                "movl , %eax;movl , %ecx;pushl %ebx;movl (%ebp), %ebx;andl $, (%ebp)": 1,
                "movl (%ebp), %ebx;andl $, (%ebp);pushl %edi;movl (%ebx), %edi;movl %eax, -(%ebp)": 1,
                "calll - <PAGEWMI+>;testl %eax, %eax;movl %eax, -(%ebp);je  <PAGEWMI+>;pushl %esi": 1,
                "addb $, %al;movb %al, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebx), %eax": 1,
                "cmpl $, -(%ebp);movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 1,
                "je  <PAGEWMI+>;cmpw %dx, (%esi);je  <PAGEWMI+>;cmpl %edx, (%ebx);je  <PAGEWMI+>": 1,
                "calll - <ObReferenceObjectByPointer>;movsbl (%ebx), %eax;pushl %edi;pushl %edi;pushl %edi": 1,
                "pushl $;pushl %eax;pushl (%ebx);pushl (%ebp);calll - <KeInitializeApc>": 1,
                "pushl %edi;pushl %esi;pushl (%ebp);calll - <KeInsertQueueApc>;testb %al, %al": 1,
                "movl %esi, %ecx;calll - <ObfDereferenceObject>;popl %esi;popl %edi;popl %ebx": 1,
                "leave;retl $;cmpl $, %edx;jbe - <PAGEWMI+>;leal (%eax,%ecx,), %ecx": 1,
                "cmpl $, %edx;jbe - <PAGEWMI+>;leal (%eax,%ecx,), %ecx;movl (%ecx), %ebx;movl %esi, (%ecx)": 1,
                "leal (%eax,%ecx,), %ecx;movl (%ecx), %ebx;movl %esi, (%ecx);movl %ebx, (%eax,%edx,);incl ": 1,
                "pushl (%ebx);calll - <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;je  <PAGEWMI+>": 1,
                "movl (%ebp), %ecx;xaddl %eax, (%ecx);jmp  <PAGEWMI+>;movl %edi, (%ebp);movl $, %eax": 1,
                "leal (%ecx,%eax,), %ecx;calll - <InterlockedPushEntrySList>;leal (%edi), %esi;cmpl $, (%esi);je  <PAGEWMI+>": 1,
                "je  <PAGEWMI+>;calll *;cmpb $, %al;ja  <PAGEWMI+>;movl %edi, %ecx": 1,
                "pushl %edi;jne  <PAGEWMI+>;cmpl $, (%esi);je  <PAGEWMI+>;leal (%esi), %edi": 1,
                "movb -(%ebp), %al;movb %al, (%edx);movl (%esi), %eax;movl %eax, (%edx);movl %edx, %eax": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;leal (%edi), %ebx;cmpl $, (%ebx)": 1,
                "leal (%edi), %eax;movl %eax, (%ebp);leal (%edi), %eax;movl %eax, -(%ebp);movl %esi, %edx": 1,
                "movl -(%ebp), %ecx;xaddl %eax, (%ecx);leal (%edi), %ecx;calll - <InterlockedPopEntrySList>;movl %eax, %esi": 1,
                "je  <PAGEWMI+>;movb %bl, (%edx);jmp  <PAGEWMI+>;leal -(%eax), %edx;movl (%edx), %eax": 1,
                "testb $, (%esi);jne - <PAGEWMI+>;calll *;cmpb $, %al;ja  <PAGEWMI+>": 1,
                "jmp  <PAGEWMI+>;movl (%edx), %edi;movl %eax, (%edx);movl (%esi), %esi;addl %edx, %edi": 1,
                "cmpl %ebx, %eax;movl %eax, (%ebp);jl  <PAGEWMI+>;pushl -(%ebp);movl %ebx, (%esi)": 1,
                "pushl %edi;pushl -(%ebp);calll - <ObCloseHandle>;cmpl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl %eax;calll - <RtlFreeUnicodeString>;pushl %edi;pushl $;pushl %esi": 1,
                "je  <PAGEWMI+>;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <PAGEWMI+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;jmp  <PAGEWMI+>;movl $, %eax;pushl $": 1,
                "leal -(%ebp), %eax;pushl (%ebp);pushl %eax;pushl %ebx;pushl %ebx": 1,
                "pushl (%ebp);pushl %eax;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "pushl %esi;movl %edx, %ebx;movl %ecx, %esi;movl %esi, %edx;shll $, %edx": 1,
                "pushl %edi;leal (%edx), %edi;movl %edi, -(%ebp);movl $, %eax;movl -(%ebp), %ecx": 2,
                "jae  <PAGEWMI+>;movl (%edx), %ecx;jmp  <PAGEWMI+>;xorl %ecx, %ecx;pushl (%ebp)": 1,
                "jmp  <PAGEWMI+>;xorl %ecx, %ecx;pushl (%ebp);addl $, %ebx;movl %ebx, %edx": 1,
                "movl %ecx, (%esi);movl (%eax), %eax;movl %eax, (%esi);movw %bx, (%esi);jmp  <PAGEWMI+>": 1,
                "xorl %eax, %eax;movl -(%ebp), %edx;movl (%ebp), %esi;leal (%edx,%esi), %edi;movl %ecx, %esi": 1,
                "movl (%ebp), %esi;leal (%edx,%esi), %edi;movl %ecx, %esi;shrl $, %ecx;rep  stosl %eax, %es:(%edi)": 1,
                "leal (%ebp), %eax;pushl %eax;movb $, -(%ebp);calll - <PAGEWMI+>;xorl %edx, %edx": 1,
                "movl (%eax), %esi;pushl %edi;leal (,%esi,), %esi;pushl $;andl $, %esi": 1,
                "rep  stosb %al, %es:(%edi);pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll  <PAGEWMI+>": 1,
                "jne - <PAGEWMI+>;pushl %eax;pushl %edi;calll - <ExFreePoolWithTag>;xorl %edi, %edi": 1,
                "cmpl %edi, -(%ebp);jle  <PAGEWMI+>;movl -(%ebp), %eax;movl (%eax,%edi,), %esi;testl %esi, %esi": 1,
                "movl (%eax,%edi,), %esi;testl %esi, %esi;je  <PAGEWMI+>;leal (%esi), %eax;pushl %eax": 1,
                "je  <PAGEWMI+>;leal (%esi), %eax;pushl %eax;pushl %esi;calll - <PAGEWMI+>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;addl $, %ebx;pushl %esi;pushl %ebx": 1,
                "movl %eax, -(%ebp);jne - <PAGEWMI+>;movl $, %eax;jmp  <PAGEWMI+>;cmpl %edi, %eax": 1,
                "cmpw %di, %ax;jbe  <PAGEWMI+>;movzwl %ax, %eax;shrl %eax;incl %eax": 1,
                "movl %edi, (%eax);movl -(%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "pushl -(%ebp);pushl %edi;pushl $;calll - <NtQuerySystemInformation>;cmpl $, %eax": 1,
                "calll  <PAGEWMI+>;testl %eax, %eax;movl %eax, -(%ebp);jl  <PAGEWMI+>;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movw %bx, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;movl -(%ebp), %ecx": 1,
                "pushl %edi;movl %edx, %edi;je  <PAGEWMI+>;testb $, (%eax);jne  <PAGEWMI+>": 1,
                "pushl %esi;movl %fs:, %eax;cmpb $, ;movl (%eax), %esi;je  <PAGEWMI+>": 1,
                "cmpl $, %edx;jae  <PAGEWMI+>;leal (%eax,%eax,), %eax;shll $, %eax;movl %esi, (%eax)": 1,
                "shll $, %eax;movl %esi, (%eax);movl %edi, (%eax);movl $, (%eax);incl ": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp);pushl %eax;calll - <PAGEWMI+>": 1,
                "calll - <PAGEWMI+>;popl %edi;xorl %eax, %eax;popl %esi;leave": 1,
                "addl $-, %eax;movl $, %edi;jmp  <PAGEWMI+>;pushl (%eax);pushl (%ebp)": 1,
                "cmpl %edi, %esi;jne - <PAGEWMI+>;movb %bl, %cl;calll *;popl %edi": 1,
                "je  <PAGEWMI+>;pushl %esi;calll - <ObMakeTemporaryObject+>;popl %esi;popl %ebp": 1,
                "andl $, ;pushl %ebx;pushl (%ebp);pushl (%ebp);calll - <ZwYieldExecution+>": 1,
                "movb %al, %bl;calll - <KiReleaseSpinLock+>;pushl $;movb %al, ;calll - <wctomb+>": 1,
                "testl %eax, %eax;pushl %edi;movl $, %edx;jbe  <PAGEKD+>;movl %edx, (%ebp)": 1,
                "incl %esi;cmpl %eax, %esi;jb - <PAGEKD+>;jmp  <PAGEKD+>;imull $, %esi, %esi": 1,
                "orl $, (%esi);movl %eax, ;movl (%esi), %eax;testb $, %al;je  <PAGEKD+>": 1,
                "testl %eax, %eax;je  <PAGEKD+>;pushl %eax;calll  <PAGEKD+>;andl $, (%esi)": 1,
                "testb $, %dl;je  <PAGEKD+>;pushl (%esi);calll  <PAGEKD+>;movl %eax, (%esi)": 1,
                "jmp  <PAGEKD+>;xorl %edx, %edx;cmpl %edx, ;jbe  <PAGEKD+>;movl (%ebp), %ecx": 1,
                "jbe  <PAGEKD+>;movl (%ebp), %ecx;addl $, %ecx;testb $, (%eax);jne  <PAGEKD+>": 1,
                "movl (%esi), %ebx;cmpl (%eax), %ebx;jne  <PAGEKD+>;movl (%esi), %ebx;cmpl (%eax), %ebx": 1,
                "pushl %eax;pushl $;pushl $;pushl (%ebp);pushl (%edi)": 1,
                "movb $, ;pushl $;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $;calll - <wctomb+>": 1,
                "je  <PAGEKD+>;andl $, (%ecx);movl %ds:, %eax;movsbw (%eax), %ax;movw (%ecx), %cx": 1,
                "calll  <PAGEKD+>;movl %eax, (%esi);negl %eax;sbbl %eax, %eax;andl $, %eax": 1,
                "movw $, -(%ebp);movl %esi, -(%ebp);calll  <PAGEKD+>;negb %al;pushl $": 1,
                "movl , %ecx;je  <PAGEKD+>;andl $, ;movb %dl, (,%ecx,);movl (%ebp), %edx": 1,
                "jae  <PAGEKD+>;cmpl $-, %eax;je  <PAGEKD+>;movb (%ebp), %dl;shll $, %ecx": 1,
                "movl %eax, (%ecx);jae  <PAGEKD+>;movl $, %eax;jmp  <PAGEKD+>;movl , %ecx": 1,
                "movl %eax, (%esi);movl (%ebp), %eax;pushl $;movl %eax, (%esi);pushl %edi": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%esi)": 1,
                "calll - <KeInitializeTimer>;pushl $;pushl $;pushl %edi;calll - <KeInsertQueueDpc>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;movl $, (%esi);calll - <wctomb+>": 2,
                "jbe  <PAGEKD+>;leal -(%ebp), %edi;movl (%edi), %eax;cmpl %ebx, %eax;je  <PAGEKD+>": 1,
                "calll - <wctomb+>;movl (%esi), %eax;popl %ebx;popl %edi;popl %esi": 1,
                "movw $, -(%ebp);movl %esi, -(%ebp);je  <PAGEKD+>;movl $, (%esi);jmp  <PAGEKD+>": 1,
                "pushl %edi;leal (%ebp), %edx;pushl %edx;pushl $;xorl %edi, %edi": 1,
                "pushl %edi;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "movl $, (%esi);incl %edi;addl $, %ebx;cmpl (%esi), %edi;jb - <PAGEKD+>": 1,
                "subl %edx, %ecx;shll $, %ecx;shrl %cl, %eax;andl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "jmp  <PAGEKD+>;pushl $;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "popl %ecx;subl %esi, %ecx;cmpl -(%ebp), %ecx;jae  <PAGEKD+>;movl -(%ebp), %ecx": 1,
                "jae  <PAGEKD+>;movl -(%ebp), %ecx;testl %ecx, %ecx;movl %ebx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ecx, -(%ebp);je  <PAGEKD+>;addl %esi, %eax;addl (%ebp), %eax": 1,
                "jne - <PAGEKD+>;cmpl $, -(%ebp);je  <PAGEKD+>;movl -(%ebp), %eax;incl %esi": 1,
                "jb - <PAGEKD+>;movl -(%ebp), %ebx;addl $, (%ebp);xorl %esi, %esi;cmpl %ebx, (%ebp)": 1,
                "andl $, (%edi);addl %eax, %esi;andl $, (%edi);movl %esi, (%edi);pushl $": 1,
                "pushl %eax;pushl $;movw $, -(%ebp);movl %edi, -(%ebp);calll - <wctomb+>": 1,
                "je  <PAGEKD+>;incl %eax;shrl %ecx;decl %edx;jne - <PAGEKD+>": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;xorl %ecx, %ecx;movl %esi, %eax": 2,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jl  <PAGEKD+>;movl -(%ebp), %eax": 2,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jl  <PAGEKD+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "cmpl $, %eax;jne  <PAGEKD+>;movl , %eax;cmpl %ebx, %eax;jae  <PAGEKD+>": 1,
                "incl %eax;popl %edi;retl;int;int": 1,
                "pushl $;pushl (%ebp);pushl -(%ebp);pushl -(%ebp);calll  <PAGEKD+>": 1,
                "calll  <PAGEKD+>;testl %eax, %eax;jl  <PAGEKD+>;addl $, -(%ebp);adcl $, -(%ebp)": 1,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;negl %eax;sbbl %eax, %eax;incl %eax": 1,
                "sbbl %eax, %eax;incl %eax;incl %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl %eax, (%esi);movl $, (%esi);jmp  <PAGEKD+>;movl $, %ebx;pushl $": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *": 2,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, ;je  <PAGEKD+>;calll - <PAGEKD+>": 1,
                "popl %esi;movl %edi, %eax;popl %edi;leave;retl": 1,
                "movl $, %ecx;xaddl %eax, (%ecx);pushl %ebx;pushl %ebx;pushl $": 1,
                "setg %cl;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl -(%ebp), %eax;movl $, %ecx": 1,
                "cmpb $, ;je  <PAGEKD+>;pushl ;calll  <PAGEKD+>;movb $, ": 1,
                "andb $-, (%esi);andl $, (%edi);testb $, (%edi);je  <PAGEKD+>;pushl (%edi)": 1,
                "movl (%edi), %eax;andl $, ;movl %eax, ;movl (%esi), %eax;orl %ebx, (%esi)": 1,
                "jne  <PAGEKD+>;movl , %eax;xorl %edi, %edi;cmpl %edi, %eax;je  <PAGEKD+>": 1,
                "movl , %edx;cmpl %edx, (%esi);jbe  <PAGEKD+>;cmpl -(%ebp), %eax;ja  <PAGEKD+>": 1,
                "jbe  <PAGEKD+>;cmpl -(%ebp), %eax;ja  <PAGEKD+>;cmpl %ecx, -(%ebp);jae  <PAGEKD+>": 1,
                "pushl %esi;pushl -(%ebp);calll  <PAGEKD+>;incl ;addl %eax, ": 1,
                "cmpl $-, %eax;je  <PAGEKD+>;subl %eax, ;pushl %esi;pushl -(%ebp)": 1,
                "movl (%esi), %eax;movl %eax, ;jmp  <PAGEKD+>;cmpl $, %eax;jne - <PAGEKD+>": 1,
                "movl %fs:, %eax;cmpl %eax, ;jne  <PAGEKD+>;movl , %eax;movl (%esi), %ecx": 1,
                "imull $, %edi, %edi;incl ;movl %eax, (%edi);calll  <PAGEKD+>;orb $, (%esi)": 1,
                "calll  <PAGEKD+>;orb $, (%esi);testb $, (%edi);jne  <PAGEKD+>;pushl %esi": 1,
                "pushl (%edi);calll  <PAGEKD+>;orl $, (%ebx);andl $, ;movb $, ": 1,
                "andl $, ;movb $, ;jmp - <PAGEKD+>;pushl -(%ebp);pushl ": 1,
                "cmpb $, (%ebp);movl %edi, ;movl %eax, ;je  <PAGEKD+>;cmpl $-, %eax": 1,
                "je  <PAGEKD+>;movl %edi, ;movb $, ;movl %fs:, %eax;pushl %esi": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl (%ebp), %esi;movw $, -(%ebp)": 1,
                "jmp - <PAGEKD+>;pushl $;calll *;jmp - <PAGEKD+>;pushl %edi": 1,
                "jmp - <PAGEKD+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $;movw %bx, -(%ebp)": 1,
                "pushl %eax;pushl $;movw %bx, -(%ebp);movl $, -(%ebp);calll - <wctomb+>": 1,
                "jmp  <PAGEKD+>;cmpl %ebx, -(%ebp);jl - <PAGEKD+>;pushl %edi;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <PAGEKD+>;jmp - <PAGEKD+>;leal -(%ebp), %eax": 1,
                "movl %eax, %esi;calll - <wctomb+>;movl %esi, %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "retl $;sbbb (%eax,%ebx,), %al;addb %ch, -(%eax);popl %eax;addb %bh, -(%ebx)": 1,
                "pushl %ebp;testb %bl, (%eax);incl %ecx;xchgb %bl, (%eax);jg - <PAGEKD+>": 1,
                "calll - <PAGEKD+>;testb %al, %al;je  <PAGEKD+>;movb $, %al;jmp  <PAGEKD+>": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %edi;pushl (%ebp);movl %esi, -(%ebp)": 1,
                "pushl $;calll - <IoReportTargetDeviceChangeAsynchronous+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 2,
                "movw %ax, -(%ebp);movzwl %ax, %eax;movl %edi, -(%ebp);movb $, (%eax);leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);calll - <PAGEKD+>;cmpl $, %eax;je - <PAGEKD+>;popl %edi": 1,
                "movzwl %ax, %eax;movb %bl, -(%eax,%ecx);movzwl -(%ebp), %ecx;movzwl (%edi), %edx;movl $, %eax": 1,
                "pushl %edx;pushl $;pushl %ebx;pushl %eax;movl -(%ebp), %eax": 1,
                "addl %eax, %ecx;pushl %ecx;pushl %ebx;pushl (%edi);calll  <PAGEKD+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl (%ebp);incl %eax;addw %ax, -(%ebp)": 1,
                "movl %esi, (%ecx);movl %edi, (%ecx);movl %ecx, (%edi);movl %ecx, ;movb $, (%ebp)": 1,
                "decl %eax;incl %esp;incl %ebp;incl %edx;pushl %ebp": 1,
                "movw %ax, ;movl $, %eax;cltd;movl %eax, ;movl %esi, %eax": 1,
                "popl %ecx;popl %ecx;jne  <PAGEKD+>;xorb %bl, %bl;pushl $": 1,
                "calll - <KeInitializeTimer>;movl $, ;movl %esi, ;movl %esi, ;movb $, ": 1,
                "movl %esi, ;movl %esi, ;movb $, ;movb $, ;movb $, -": 1,
                "calll - <RtlInitString>;pushl $-;pushl (%esi);leal -(%ebp), %eax;pushl %eax": 2,
                "movl (%ebp), %esi;shll $, %esi;movl (%esi), %eax;testb $, %al;je  <PAGEKD+>": 2,
                "pushl (%esi);calll  <PAGEKD+>;testl %eax, %eax;jge - <PAGEKD+>;orl $, (%esi)": 1,
                "jge - <PAGEKD+>;orl $, (%esi);movb $, ;xorb %al, %al;jmp - <PAGEKD+>": 1,
                "cmpl $, %eax;ja  <PAGEKD+>;movl %ecx, %eax;shll $, %eax;leal (%eax), %esi": 1,
                "calll - <PAGEKD+>;popl %ebp;retl $;int;int": 2,
                "andl $-, %eax;movl %eax, (%esi);jmp  <PAGEKD+>;movb (%esi), %al;cmpb , %al": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;xorl %edx, %edx;movl $, %eax": 1,
                "movl %esi, (%ecx);jl  <PAGEKD+>;movb (%ebp), %al;xorl %edx, %edx;incl %edx": 1,
                "incl %eax;incl %ecx;decl %esi;jne - <PAGEKD+>;popl %esi": 1,
                "jb - <PAGEKD+>;jmp  <PAGEKD+>;shrl %esi;cmpl %ebx, %esi;ja - <PAGEKD+>": 1,
                "andl $, %eax;popl %ebx;popl %ebp;retl $;int": 1,
                "xchgl %ecx, %eax;popl %eax;addb %dl, -(%edx);popl %eax;addb %bl, -(%ebp)": 1,
                "addb %bh, -(%esi);popl %eax;addb %cl, -(%ecx);xchgl %ecx, %eax;popl %eax": 1,
                "testl %eax, %eax;jl  <PAGEKD+>;pushl %esi;pushl %edi;pushl %esi": 1,
                "shll $, %eax;jmp  <PAGEKD+>;movl -(%ebp), %eax;addl %eax, %eax;movl %eax, -(%ebp)": 1,
                "cmpb $, %cl;je  <PAGEKD+>;xorl %esi, %esi;pushl %esi;pushl $": 1,
                "addl %ecx, %eax;jmp  <PAGEKD+>;andb $, %cl;cmpb $, %cl;je  <PAGEKD+>": 1,
                "calll - <PAGEKD+>;testl %eax, %eax;jge  <PAGEKD+>;xorl %eax, %eax;jmp  <PAGEKD+>": 2,
                "jb - <PAGEKD+>;xorb %al, %al;popl %edi;popl %esi;popl %ebx": 1,
                "leal (%ebp), %eax;pushl %eax;movl (%ebp), %eax;pushl $;pushl (%eax)": 1,
                "testl %eax, %eax;jge  <PAGEKD+>;andl $, (%ebp);movl (%ebp), %eax;popl %ebp": 1,
                "incl %edx;cmpl %eax, %edx;jb - <PAGEKD+>;popl %esi;movl (%ecx), %eax": 1,
                "pushl %edi;movl (%ebp), %edi;ja  <PAGEKD+>;movl (%ebp), %ecx;movl $, %eax": 1,
                "pushl (%ebp);movl (,%edx,), %eax;pushl $;pushl $;pushl %edi": 1,
                "pushl $;pushl $;pushl %edi;leal (%eax,%ecx), %eax;pushl %eax": 1,
                "je  <PAGEKD+>;decl %eax;je  <PAGEKD+>;decl %eax;decl %eax": 2,
                "movl %eax, (%ecx);movl (%ebp), %eax;movl $, (%eax);jmp  <PAGEKD+>;movl (%ebp), %eax": 1,
                "je  <PAGEKD+>;movl $, %edi;jmp  <PAGEKD+>;pushl (%ebp);calll *": 1,
                "pushl (%ebp);calll *;movl (%ebp), %eax;movl %esi, (%eax);movl %edi, %eax": 1,
                "calll - <wctomb+>;xorl %esi, %esi;movl %esi, -(%ebp);movl (%ebp), %eax;pushl (%eax)": 1,
                "jne  <PAGEKD+>;leal (%edi), %eax;jmp  <PAGEKD+>;cmpb $-, %al;jne  <PAGEKD+>": 2,
                "jmp  <PAGEKD+>;cmpb $-, %al;jne  <PAGEKD+>;cmpb $, %ah;jne  <PAGEKD+>": 1,
                "addl %edi, %eax;leal (%eax,%ecx), %eax;jmp  <PAGEKD+>;xorl %eax, %eax;popl %edi": 1,
                "pushl %ebx;pushl $;leal (%ebp), %eax;pushl %eax;leal (%esi), %eax": 1,
                "leal (%esi), %eax;pushl %ebx;pushl %eax;calll - <PAGEKD+>;testl %eax, %eax": 1,
                "pushl (%ebp);pushl %esi;calll - <KdPollBreakIn+>;testb %al, %al;je  <PAGEKD+>": 1,
                "movw (%eax), %dx;movw %dx, (%ecx);movw (%eax), %dx;movw %dx, (%ecx);movw (%eax), %dx": 2,
                "movl (%ebp), %ecx;cmpl $, %ecx;jbe  <PAGEKD+>;movl %ecx, %eax;jmp  <PAGEKD+>": 1,
                "movl %ecx, %eax;jmp  <PAGEKD+>;xorl %eax, %eax;incl %eax;shll %cl, %eax": 1,
                "testl %eax, ;jne  <PAGEKD+>;movl (%ebp), %ecx;cmpl , %ecx;jae  <PAGEKD+>": 1,
                "je  <PAGEKD+>;movzwl %si, %eax;movl (%ebp), %ecx;addl %ecx, %eax;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;jb  <PAGEKD+>;cmpl , %eax;jbe  <PAGEKD+>;calll - <ExRaiseAccessViolation>": 2,
                "cmpl , %eax;jbe  <PAGEKD+>;calll - <ExRaiseAccessViolation>;movl %edi, %eax;calll - <_alloca_probe>": 1,
                "movl %esp, %eax;movl %eax, %edi;movl %edi, -(%ebp);movzwl %si, %eax;pushl %eax": 1,
                "cmpb %bl, ;jne  <PAGEKD+>;pushl (%ebp);pushl (%ebp);calll - <PAGEKD+>": 1,
                "movl $, %eax;jmp  <PAGEKD+>;movl $, %esi;movl (%ebp), %eax;movb $, (%eax)": 1,
                "movb $, (%eax);movl %esi, %eax;leal -(%ebp), %esp;calll - <wctomb+>;retl $": 1,
                "movl $, %esi;cmpw %si, %di;jbe  <PAGEKD+>;movl %esi, %edi;movl (%ebp), %ebx": 1,
                "movl %esi, %edi;movl (%ebp), %ebx;cmpw %si, %bx;jbe  <PAGEKD+>;movl %esi, %ebx": 1,
                "cmpl , %eax;jbe  <PAGEKD+>;calll - <ExRaiseAccessViolation>;movl %esi, %eax;calll - <_alloca_probe>": 1,
                "movl %esp, %eax;movl %eax, -(%ebp);movzwl %di, %ecx;pushl %ecx;pushl (%ebp)": 1,
                "movzwl %di, %ecx;pushl %ecx;pushl (%ebp);pushl %eax;calll - <PAGEKD+>": 1,
                "calll  <PAGEKD+>;cmpb $, %al;je - <PAGEKD+>;pushl -(%ebp);calll - <PAGEKD+>": 1,
                "movl $, -(%ebp);movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl (%ebp)": 1,
                "calll - <PAGEKD+>;pushl %esi;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;movl %ecx, -(%ebp);pushl %eax;leal -(%ebp), %ecx": 1,
                "cmpl %eax, (%ebp);jbe  <PAGEKD+>;movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax": 1,
                "cmpw $, (%edi);jbe  <PAGEKD+>;movl $, %eax;jmp  <PAGEKD+>;cmpb $, ": 1,
                "orl (,%eax,), %ecx;je  <PAGEKD+>;incl %eax;cmpl $, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;movzwl (%edi), %eax;pushl $;pushl %ebx;pushl %eax": 1,
                "pushl %eax;pushl $;calll - <wctomb+>;cmpb $, ;je - <PAGEKD+>": 1,
                "calll - <wctomb+>;cmpb $, ;je - <PAGEKD+>;movl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "cmpl $, %eax;je - <PAGEKD+>;cmpl %edi, %eax;jne  <PAGEKD+>;cmpl %edi, -(%ebp)": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $;movw $, -(%ebp)": 1,
                "pushl $;calll - <wctomb+>;cmpl $, %eax;je - <PAGEKD+>;cmpl %ebx, %eax": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %edi;pushl %esi;pushl $": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl  <PAGEKD+>;movl -(%ebp), %eax;pushl %esi": 1,
                "xorl %ebx, %ebx;cmpl %esi, -(%ebp);movl %esi, -(%ebp);ja  <PAGEKD+>;jmp  <PAGEKD+>": 1,
                "cmpl %esi, (%ebp);je  <PAGEKD+>;movl -(%ebp), %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "movl $, %edi;cmpl %esi, -(%ebp);je  <PAGEKD+>;pushl -(%ebp);calll - <PAGEKD+>": 1,
                "calll *;cmpl %esi, ;je  <PAGESPEC+>;movl , %edx;movl $, %esi": 1,
                "pushl %esi;pushl %edi;movl %fs:, %eax;movb $, %cl;movl %eax, %edi": 1,
                "movl %esi, %ecx;calll - <ExReleaseResourceLite>;movb %bl, %cl;calll *;movl %edi, %eax": 1,
                "pushl %edi;movl (%ebp), %edi;cmpl , %edi;jb  <PAGESPEC+>;cmpl , %edi": 1,
                "xorl %ecx, %ecx;movl %eax, -(%ebp);orl %ecx, %eax;jne  <PAGESPEC+>;movb (%ebp), %cl": 1,
                "calll *;movl %ebx, %eax;andl $, %eax;pushl $;movl %eax, -(%ebp)": 2,
                "jne - <PAGESPEC+>;shrdl $, %esi, %ebx;andl $, %ebx;imull $, %ebx, %ebx;addl , %ebx": 1,
                "andl $, %eax;pushl %ebx;orl $, %eax;pushl %edi;shrl $, %esi": 1,
                "orl $, %eax;pushl %edi;shrl $, %esi;movl %eax, (%ebx);movl %ecx, (%ebx)": 1,
                "movl (%ebx), %eax;movl (%ebx), %ecx;movl $, %esi;andl %esi, %eax;movl $, %edx": 1,
                "orl %edx, %eax;movl %eax, (%ebx);movl %ecx, (%ebx);movl (%edi), %eax;movl (%edi), %ecx": 1,
                "movl (%edi), %eax;movl (%edi), %ecx;andl $, %eax;orl $, %eax;movl %eax, (%edi)": 1,
                "calll *;pushl -(%ebp);movl (%esi), %ecx;pushl %ebx;pushl %edi": 1,
                "orl %edx, %eax;je  <PAGESPEC+>;movl (%esi), %eax;orl $, %ecx;andl $, %eax": 1,
                "andl $, %eax;orl %edx, %eax;movl %ecx, (%esi);jne  <PAGESPEC+>;testb $, %cl": 1,
                "andl $, %eax;imull $, %eax, %eax;addl , %eax;andl $, %ecx;movl (%eax), %ebx": 1,
                "pushl (%ebp);calll - <ZwYieldExecution+>;jmp  <PAGESPEC+>;movl %ebx, %edx;andl $, %edx": 1,
                "shrdl $, %esi, %ebx;andl $, %ebx;jmp  <PAGESPEC+>;movl -(%ebp), %ecx;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %eax;andl $, %eax;xorl %ecx, %ecx;shldl $, %eax, %ecx;orl %ebx, %ecx": 1,
                "orl %edx, %eax;je - <PAGESPEC+>;movl (%ebx), %eax;orl $, %ecx;andl $, %eax": 1,
                "orl %edx, %eax;movl %ecx, (%ebx);jne - <PAGESPEC+>;testb $, %cl;jne - <PAGESPEC+>": 1,
                "shldl $, %ecx, %eax;shll $, %ecx;andl $, %edx;orl %edx, %ecx;orl %esi, %eax": 1,
                "movb -(%ebp), %cl;calll *;xorl %eax, %eax;jmp  <PAGESPEC+>;orl $-, %eax": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;testl %eax, %eax;jne  <PAGESPEC+>;incl ;jmp  <PAGESPEC+>": 1,
                "xaddl %eax, (%ecx);jmp - <PAGESPEC+>;cmpl $, -(%ebp);jne  <PAGESPEC+>;movl , %eax": 1,
                "jmp  <PAGESPEC+>;movl , %eax;incl %eax;cmpl , %eax;movl %eax, ": 1,
                "movb $, %cl;calll - <_aullshr>;movl , %ecx;leal (%ecx,%eax,), %eax;movl , %ecx": 1,
                "movl %eax, ;jbe  <PAGESPEC+>;movl %eax, ;movl -(%ebp), %eax;andl $, %eax": 1,
                "movl %ebx, -(%ebp);movl %edx, %eax;shll $, %eax;cmpl $, (%ebp);movw %dx, %ax": 1,
                "movl %ebx, -(%ebp);jmp  <PAGESPEC+>;leal (%ebx), %eax;movl %eax, (%ebp);movl %eax, %ecx": 1,
                "xorl %eax, %eax;cmpl $, -(%ebp);movl %ecx, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "stosl %eax, %es:(%edi);movl %edx, (%ecx);jne  <PAGESPEC+>;pushl (%ebp);orl $, %edx": 1,
                "pushl %esi;pushl $;pushl $;pushl -(%ebp);addl %ecx, %edi": 1,
                "movl %ebx, %edi;shrl $, %edi;andl $, %edi;movl -(%edi), %ecx;subl $, %edi": 1,
                "subl $, %edi;movl (%edi), %edx;movl %edx, %eax;andl $, %eax;xorl %esi, %esi": 1,
                "shrdl $, %ecx, %eax;andl $, %eax;xorl %ecx, %ecx;movl %eax, %esi;orl %ecx, %esi": 1,
                "jmp - <PAGESPEC+>;andl $, -(%ebp);movzwl (%esi), %esi;andl $, %esi;cmpl $, -(%ebp)": 1,
                "jae  <PAGESPEC+>;pushl $;jmp - <PAGESPEC+>;movl -(%ebp), %ecx;leal (%ecx), %eax": 1,
                "jmp - <PAGESPEC+>;movl -(%ebp), %ecx;leal (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax": 1,
                "leal (%esi,%eax), %edx;andl $, %eax;subl %edx, %eax;addl $, %eax;cmpl $, -(%ebp)": 1,
                "pushl (%ebp);calll - <ZwYieldExecution+>;leal -(%ebp), %eax;pushl %eax;movl $, (%ebx)": 1,
                "andl $, %edx;pushl %edx;pushl %ecx;movl $, %eax;pushl %eax": 1,
                "movb %al, (%ebp);jmp  <PAGESPEC+>;movl -(%ebp), %eax;pushl $;pushl (%eax)": 1,
                "movl -(%ebp), %ecx;calll - <MmTrimAllSystemPagableMemory+>;pushl ;pushl ;pushl -(%ebp)": 1,
                "testb $, (%eax);jne  <PAGEHDLS+>;movl $, %eax;jmp  <PAGEHDLS+>;cmpb $, (%ebp)": 1,
                "jbe  <PAGEHDLS+>;movl , %eax;movl (%eax), %ecx;movzbl (%ecx,%esi), %ecx;pushl %ecx": 1,
                "movl , %eax;incl %esi;cmpl %ebx, %esi;jb - <PAGEHDLS+>;cmpb $, (%ebp)": 1,
                "popl %ebp;retl $;incl %ebp;addb %ch, (%esi);je  <PAGEHDLS+>": 1,
                "addb %ah, (%ebx);imull $, (%eax), %eax;addb %ch, (%edi);addb %ah, (%eax);addb %ch, (%ebp)": 2,
                "addb %ch, (%edi);addb %ah, (%eax);addb %ch, (%ebp);addb %ch, %gs:(%ebp);outsl (%esi), %dx": 2,
                "leal (%eax,%eax), %esi;calll *;cmpb $, %al;jae  <PAGEHDLS+>;pushl %edi": 1,
                "movl %esi, %edi;idivl %edi;movw %dx, (%ecx);movl , %eax;movw (%eax), %cx": 1,
                "movzwl %cx, %ecx;imull $, %ecx, %ecx;pushl $;pushl (%ecx,%eax);calll - <wcscmp>": 1,
                "movl (%eax), %edx;imull $, %ecx, %ecx;movl (%ecx,%edx), %ecx;movl %ecx, -(%ebp);incw (%eax)": 1,
                "movl (%eax), %eax;popl %edi;jne  <PAGEHDLS+>;imull $, %ecx, %ecx;movl $, (%ecx,%eax)": 1,
                "cmpl %edx, %ecx;jae  <PAGEHDLS+>;addl %edi, %ecx;cmpb $, (%ecx);movl %ecx, -(%ebp)": 1,
                "je  <PAGEHDLS+>;addl $, %edi;movl %edi, -(%ebp);movl -(%ebp), %edi;movl (%esi), %eax": 1,
                "movb %cl, (%eax);incl %eax;testb %cl, %cl;jne - <PAGEHDLS+>;movl (%ebp), %ebx": 1,
                "pushl %ecx;calll *;cmpb $, %al;movb %al, -(%ebp);jae  <PAGEHDLS+>": 1,
                "calll - <ExSetTimerResolution>;movl (%ebp), %eax;pushl %ebx;xorl %ebx, %ebx;cmpb %bl, (%eax)": 1,
                "pushl %eax;movl , %eax;pushl (%eax);calll - <wctomb+>;movl , %eax": 1,
                "cmpl $, (%eax);jne  <PAGEHDLS+>;cmpb $, -(%ebp);jae  <PAGEHDLS+>;addl $, %eax": 1,
                "cmpb %bl, (%esi);jne - <PAGEHDLS+>;cmpb $, -(%ebp);jae  <PAGEHDLS+>;pushl %ebx": 1,
                "addl $, %eax;cmpl %eax, %esi;jb  <PAGEHDLS+>;movb $, (%eax);movl , %eax": 1,
                "popl %eax;addb %al, -(%ebp);popl %eax;addb %cl, -(%ecx);popl %eax": 1,
                "pushl %es;pushl %es;addb %al, (%eax);addl (%edx), %eax;addb (%edx), %al": 1,
                "orb %ah, ;addb %al, (%eax);orb %ah, (%eax);orb %al, (%eax);popl %es": 1,
                "addb %cl, -;int;int;int;movl %edi, %edi": 1,
                "jmp  <PAGEHDLS+>;orl $, (%ecx);cmpb $-, %dl;je  <PAGEHDLS+>;movl , %ecx": 1,
                "pushl (%eax);calll - <wctomb+>;testb %al, %al;je  <PAGEHDLS+>;leal -(%ebp), %eax": 1,
                "testb %al, %al;je  <PAGEHDLS+>;leal -(%ebp), %eax;pushl %eax;movl , %eax": 1,
                "movl , %eax;pushl (%eax);calll - <wctomb+>;testb %al, %al;jne  <PAGEHDLS+>": 1,
                "calll - <sprintf>;movl , %eax;addl $, %esp;pushl (%eax);calll - <PAGEHDLS+>": 3,
                "jne  <PAGEHDLS+>;decl %ecx;jne - <PAGEHDLS+>;movl (%eax), %edx;addl %edx, %ecx": 1,
                "jne - <PAGEHDLS+>;cmpl %ebx, %esi;je  <PAGEHDLS+>;movl (%eax), %eax;leal (%eax,%esi), %ecx": 1,
                "movb (%ecx), %dl;incl %ecx;movb %dl, (%eax);incl %eax;cmpb %bl, %dl": 1,
                "movl , %eax;andl $-, (%eax);jmp  <PAGEHDLS+>;movl %edx, %ecx;movl %ecx, %eax": 1,
                "jmp  <PAGEHDLS+>;movl %edx, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "leal (%edi,%edx), %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 1,
                "int;subl $, %eax;jb  <PAGEHDLS+>;jae  <PAGEHDLS+>;andb %bh, (,%eax,)": 1,
                "cmpb $, %al;pushl %eax;addb %al, %ds:(%eax);orl $, %eax;pushl %ebx": 1,
                "addb %al, %ds:(%eax);orl $, %eax;pushl %ebx;pushl %esp;incl %ecx": 1,
                "pushl %esp;popl %ecx;andb %cl, (%esi);decl %ebp;incl %ebp": 1,
                "andb %cl, (%esi);decl %ebp;incl %ebp;cmpl $, %eax;pushl %eax": 1,
                "andl $, %eax;cmpb (%eax), %ah;addb %al, (%eax);orl $, %eax;addb %al, (%eax)": 1,
                "jb  <PAGEHDLS+>;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movb %al, %bl;jmp  <PAGEHDLS+>;orb $-, %bl;cmpw $, (%ecx);jne  <PAGEHDLS+>": 1,
                "orb $-, %bl;cmpw $, (%ecx);jne  <PAGEHDLS+>;cmpb $-, %bl;je  <PAGEHDLS+>": 1,
                "popl %ecx;jb  <PAGEHDLS+>;movl (%esi), %eax;andw $, (%eax);pushl (%esi)": 1,
                "movl , %ecx;movzwl (%ecx), %eax;movl -(%ebp), %esi;incl -(%ebp);cmpl %eax, %esi": 1,
                "cmpl %eax, %esi;je  <PAGEHDLS+>;cmpb $, (%ebp);je  <PAGEHDLS+>;cmpl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <PAGEHDLS+>;movl , %ecx;testb $, (%ecx)": 1,
                "addb %dl, (%ecx,%edi,);andb %bh, %gs:(%edi);andb %ch, (%edi);andb %cl, (%eax);insb %dx, %es:(%edi)": 1,
                "popl %ecx;popl %ecx;je  <PAGEHDLS+>;leal -(%ebp), %eax;pushl $": 2,
                "pushl $;pushl $;pushl %eax;pushl %eax;calll - <InbvSolidColorFill>": 1,
                "pushl $;pushl %eax;pushl %eax;calll - <InbvSolidColorFill>;pushl $": 1,
                "pushl %eax;calll - <InbvSolidColorFill>;pushl $;popl %esi;pushl $": 1,
                "cmpl $, (%ebp);je  <PAGEHDLS+>;cmpl $, (%ebp);je  <PAGEHDLS+>;movl , %ecx": 1,
                "calll *;movl , %ecx;movl -(%ebp), %edx;jmp  <PAGEHDLS+>;orb $-, %al": 1,
                "testl %esi, %esi;je  <PAGEHDLS+>;movl , %eax;testb $, (%eax);je - <PAGEHDLS+>": 1,
                "testb $, (%eax);je - <PAGEHDLS+>;pushl (%ebp);pushl %esi;calll - <PAGEHDLS+>": 1,
                "je - <PAGEHDLS+>;decl %edx;pushl %edx;leal (%ebx), %eax;pushl %eax": 1,
                "pushl %edx;leal (%ebx), %eax;pushl %eax;calll - <PAGEHDLS+>;movb %al, (%ebx)": 1,
                "pushl %eax;calll - <PAGEHDLS+>;movb %al, (%ebx);jmp - <PAGEHDLS+>;movl , %eax": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);movl , %eax;movb (%eax), %al;movb %al, (%ebx)": 1,
                "testl %esi, %esi;je  <PAGEHDLS+>;cmpl $, (%ebp);jne  <PAGEHDLS+>;movl (%esi), %eax": 1,
                "jmp - <PAGEHDLS+>;testl %esi, %esi;je  <PAGEHDLS+>;pushl (%ebp);pushl %esi": 1,
                "je  <PAGEHDLS+>;pushl (%ebp);pushl %esi;calll - <PAGEHDLS+>;jmp - <PAGEHDLS+>": 1,
                "pushl %esi;calll - <PAGEHDLS+>;jmp - <PAGEHDLS+>;movl , %eax;movl (%eax), %eax": 1,
                "je  <PAGEHDLS+>;testl %edx, %edx;je  <PAGEHDLS+>;cmpl $, (%edx);jb  <PAGEHDLS+>": 1,
                "testl %edx, %edx;je  <PAGEHDLS+>;cmpl $, (%edx);jb  <PAGEHDLS+>;movl , %esi": 1,
                "jmp - <PAGEHDLS+>;movl $, %edi;movl (%ebp), %eax;cmpl $, %eax;je  <PAGEHDLS+>": 1,
                "addb %dl, (%edx);decl %esi;addb %cl, (%eax,%eax);addb %ah, (%eax);addb %cl, (%eax,%eax)": 2,
                "addb %al, (%eax);addb %cl, (%ebx);pushl %edx;addb %cl, (%esi);decl %esp": 16,
                "addb %ah, %gs:(%ecx);je  <PAGEHDLS+>;addb %ah, %gs:(%eax);addb %ah, (%ebp);jbe  <PAGEHDLS+>": 1,
                "addb %ah, %gs:(%eax);addb %ah, (%ebp);jbe  <PAGEHDLS+>;addb %ch, %gs:(%esi);je  <PAGEHDLS+>": 1,
                "jb  <PAGEHDLS+>;addb %ah, %gs:(%ecx);je  <PAGEHDLS+>;addb %ah, %gs:(%eax);addb %ch, (%edi)": 1,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %ch, (%edi);je  <PAGEHDLS+>;andb %al, (%eax)": 1,
                "jb  <PAGEHDLS+>;addb %ah, %gs:(%ebx);je  <PAGEHDLS+>;outsl (%esi), %dx;addb %dh, (%edx)": 1,
                "jo  <PAGEHDLS+>;pushl $;addb %ah, (%ebp);andb %al, (%eax);xorb %al, (%eax)": 1,
                "jo  <PAGEHDLS+>;pushl $;addb %ah, (%ebp);andb %al, (%eax);xorl %eax, (%eax)": 1,
                "xorl %eax, (%eax);subl %eax, (%eax);andb %al, (%eax);jo  <PAGEHDLS+>;insb %dx, %es:(%edi)": 1,
                "addb %ch, %fs:(%eax,%eax);addb %ch, (%esi);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebx)": 1,
                "addb %ch, %gs:(%ebp);andb %al, (%eax);jb  <PAGEHDLS+>;outsl (%esi), %dx;addb %ch, (%edi)": 3,
                "addb %dh, (%eax,%eax);addb %ah, (%ebx);je  <PAGEHDLS+>;andb %al, (%eax);jae  <PAGEHDLS+>": 1,
                "addb %al, (%ecx);outsb (%esi), %dx;addb %dh, (%ebx);imull $, (%eax), %eax;jns  <PAGEHDLS+>": 1,
                "andb %al, (%eax);je  <PAGEHDLS+>;outsl (%esi), %dx;addb %ah, (%eax);addb %ah, (%eax,%eax)": 1,
                "je  <PAGEHDLS+>;addb %al, %cs:(%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popal;addb %dh, (%edx);imull $, (%eax), %eax;addb %ch, (%esi);addb %ah, (%bx,%si)": 1,
                "calll - <wcscpy>;popl %ecx;popl %ecx;jmp  <PAGEHDLS+>;movl $, %esi": 1,
                "xorl %esi, %esi;movw %si, -(%ebp);cmpl $, %edi;jne  <PAGEHDLS+>;testl %ebx, %ebx": 1,
                "jne  <PAGEHDLS+>;testl %ebx, %ebx;je  <PAGEHDLS+>;pushl %esi;calll - <wcslen>": 1,
                "movzwl (%ebx), %ecx;movl (%ebx), %esi;shrl %ecx;cmpw $, -(%esi,%ecx,);je  <PAGEHDLS+>": 1,
                "andw $, -(%ebp,%edx,);pushl $;leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "salc;rcrb (%eax);fst %st();popl %eax;addb %ah, %ah": 1,
                "addb %dh, %dl;rcrb (%eax);stc;rcrb (%eax);addb %dl, %cl": 1,
                "movl , %eax;decl %eax;movl %eax, ;movl , %eax;shrl $, %eax": 1,
                "pushl $;pushl %ebx;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;je  <INIT+>": 1,
                "decl %eax;jne  <INIT+>;movl $, -(%ebp);calll - <MmIsThisAnNtAsSystem>;testb %al, %al": 1,
                "je  <INIT+>;movl $, -(%ebp);jmp  <INIT+>;pushl %ebx;pushl %ebx": 1,
                "pushl $;movl %esi, (%ebx);calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "pushl %esi;pushl $;movl %eax, ;calll - <ExAllocatePoolWithTag>;movl %eax, %edi": 1,
                "imull $, (%eax), %eax;insl %dx, %es:(%edi);addb %dl, (%eax,%eax);addb %ch, (%esi);outsb (%esi), %dx": 2,
                "addb %ah, (%edi);addb %cl, %gs:(%ecx);outsb (%esi), %dx;addb %dl, (%ebx);addb %ah, %gs:(%ebx)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx;calll - <MmIsThisAnNtAsSystem>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 4,
                "movw $, -(%ebp);movw $, -(%ebp);calll - <CmUnRegisterCallback+>;movl , %ecx;xorl %edx, %edx": 1,
                "jmp  <INIT+>;movl , %eax;imull $, %ecx, %ecx;cmpl $, %eax;movl %ecx, ": 1,
                "movl $, %ecx;pushl %ecx;pushl $;pushl $;pushl %edx": 1,
                "pushl %esi;pushl $;calll - <ExInitializePagedLookasideList>;movl $, %eax;pushl $": 1,
                "testl %esi, %esi;je  <INIT+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %edi;addb %ch, (%ecx);outsb (%esi), %dx;addb %bh, (%ecx);addb %dh, ": 1,
                "jae  <INIT+>;imull $, (%eax), %eax;jae  <INIT+>;addb %al, (%eax);int": 1,
                "calll - <ExAllocatePoolWithTag>;movl %eax, ;xorl %edi, %edi;movl , %eax;addl %edi, %eax": 1,
                "movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);calll - <INIT+>;testl %eax, %eax": 1,
                "pushl %edi;movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "calll - <PsCreateSystemThread>;testl %eax, %eax;jl  <INIT+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "incl %eax;movl $, %ecx;movb %al, ;movb $, ;movl %eax, ": 1,
                "addb %dl, (%ebx);decl %ebx;addb %dl, (%edx);decl %esi;addb %cl, (%eax,%eax)": 1,
                "addb %al, (%eax);decl %esi;addb %dl, (%eax,%eax);addb %dl, (%edx);decl %esi": 1,
                "jne - <INIT+>;cmpl (%ebp), %esi;popl %edi;je  <INIT+>;movl (%ebp), %eax": 1,
                "incl %edi;decl %edi;addb %cl, %ah;int;int": 1,
                "pushl %ebx;xorl %ebx, %ebx;incl %ebx;cmpb %bl, ;movb $, -(%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <INIT+>;pushl %eax": 1,
                "cmpl %ebx, %edi;movl %edi, ;jb  <INIT+>;pushl %esi;movl $, %esi": 1,
                "pushl %ebx;pushl (%ebp);calll - <INIT+>;movl %eax, (%esi);incl %ebx": 1,
                "pushl %ebp;pushl %edx;decl %esi;decl %ebp;incl %ebp": 1,
                "cmpl $, %eax;cmpb , %ah;addb %ah, ;jns  <INIT+>;je  <INIT+>": 1,
                "cmpl %edi, (%ebp);jne  <INIT+>;movb $, ;movb $, ;movl (%ebx), %eax": 1,
                "movb $, ;movl (%ebx), %eax;cmpl %edi, %eax;je  <INIT+>;testb $, (%eax)": 1,
                "movl %edi, ;movl (%ebx), %esi;cmpl %edi, %esi;je  <INIT+>;pushl %esi": 1,
                "movl $, (%esp);pushl %esi;calll - <strstr>;cmpl %edi, %eax;popl %ecx": 2,
                "pushl %eax;pushl %ebx;calll - <INIT+>;movl %eax, ;pushl $": 1,
                "pushl $;pushl %esi;calll - <strstr>;cmpl %edi, %eax;popl %ecx": 1,
                "pushl ;calll *;testb %al, %al;je  <INIT+>;sti": 1,
                "sti;movl %edi, -;pushl (%ebx);leal -(%ebp), %eax;pushl $": 1,
                "pushl (%ebx);leal -(%ebp), %eax;pushl $;pushl %eax;calll - <sprintf>": 1,
                "testl %eax, %eax;jge  <INIT+>;pushl $;jmp  <INIT+>;movl (%ebx), %esi": 1,
                "pushl -(%ebp);pushl (%esi);calll - <LdrAccessResource>;testl %eax, %eax;jl  <INIT+>": 1,
                "pushl (%esi);calll - <LdrAccessResource>;testl %eax, %eax;jl  <INIT+>;movl -(%ebp), %eax": 1,
                "pushl (%ebx);calll  <KeFindConfigurationEntry+>;andb $-, ;testw $, ;movl $, ": 1,
                "testl $, %eax;jne  <INIT+>;andb $-, ;calll  <KeFindConfigurationEntry+>;testb %al, %al": 1,
                "jmp  <INIT+>;calll  <KeFindConfigurationEntry+>;pushl %ebx;pushl %edi;calll  <KeFindConfigurationEntry+>": 1,
                "pushl %ebx;pushl %edi;calll  <KeFindConfigurationEntry+>;movl (%ebx), %esi;movl %edi, -(%ebp)": 1,
                "calll  <KeFindConfigurationEntry+>;movl (%ebx), %esi;movl %edi, -(%ebp);jmp  <INIT+>;cmpl $, -(%ebp)": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll - <DbgLoadImageSymbols>;incl -(%ebp)": 1,
                "incl -(%ebp);movl (%esi), %esi;cmpl %ebx, %esi;jne - <INIT+>;cmpb $, ": 1,
                "jne - <INIT+>;cmpb $, ;je  <INIT+>;pushl $;calll - <DbgBreakPointWithStatus>": 1,
                "andl %ecx, %edx;pushl %edx;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "jne  <INIT+>;leal -(%ebp), %eax;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 1,
                "testb %cl, %cl;jne - <INIT+>;subl %edx, %eax;leal -(%ebp,%eax), %esi;leal -(%ebp), %eax": 2,
                "jne - <INIT+>;subl %edx, %eax;leal -(%ebp,%eax), %esi;leal -(%ebp), %eax;cmpl %eax, %esi": 2,
                "movl %eax, ;calll - <atoi>;movl %eax, ;movl -(%ebp), %eax;addl $, %esp": 1,
                "cmpl , %edx;jne  <INIT+>;movzwl (%eax), %esi;movl , %ecx;cmpl %ecx, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll - <RtlPrefixString+>;testb $, ": 1,
                "pushl %esi;pushl %eax;calll - <RtlUnwind+>;testb $-, ;je  <INIT+>": 1,
                "pushl %edi;movl %eax, ;pushl $-;movl %eax, ;movl , %esi": 1,
                "incl %eax;movl %eax, ;movl , %eax;movl %edi, ;movl %eax, ": 1,
                "calll *;testb %al, %al;jne - <INIT+>;pushl $;calll - <KeBugCheck>": 1,
                "popl %esp;addb %al, (%ecx);jb  <INIT+>;arpl %ax, (%eax);decl %esi": 1,
                "addb %dh, (%esi);imull $, (%eax), %eax;addb %al, (%eax);popl %esp;pushl %ebx": 1,
                "movl %ebx, -(%ebp);calll - <NtDuplicateObject+>;cmpl %ebx, %eax;jge  <INIT+>;pushl %ebx": 2,
                "calll - <RtlInitUnicodeString>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 2,
                "pushl %ebx;pushl $;jmp - <INIT+>;pushl -(%ebp);calll - <NtClose>": 1,
                "jmp - <INIT+>;pushl -(%ebp);calll - <NtClose>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl $;jmp - <INIT+>;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <RtlInitString>;pushl $;leal -(%ebp), %eax;pushl %eax": 5,
                "leal (%eax,%esi,), %edi;movl (%edi), %eax;addl (%ebp), %eax;movb (%ecx), %bl;movb %bl, %dl": 1,
                "jmp  <INIT+>;sbbl %eax, %eax;sbbl $-, %eax;testl %eax, %eax;je  <INIT+>": 1,
                "testl %eax, %eax;jge  <INIT+>;movl %esi, (%ebp);jmp  <INIT+>;movl (%ebp), %eax": 1,
                "movl %edi, (%ebp);cmpl $, (%ebp);jne - <INIT+>;orw $, %ax;popl %edi": 1,
                "int;decl %esi;decl %edi;incl %edi;pushl %ebp": 1,
                "andb %cl, (%ebp);insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <INIT+>;popl %ebp": 1,
                "decl %esp;addb %cl, (%esi);pushl %esp;pushl %edi;decl %edi": 1,
                "decl %esi;incl %ecx;pushl %esp;incl %ebp;pushl %ebx": 1,
                "decl %esp;decl %esp;subl %eax, (%eax);addb %al, (%eax);addb %al, (%edx)": 1,
                "incl %edi;addb %al, (%ecx);insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %dh, (%edx)": 1,
                "jo  <INIT+>;je  <INIT+>;imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);addb %dh, (%ebp);addb %al, %gs:(%eax);addb %dl, (%ebp);jae  <INIT+>": 1,
                "jae  <INIT+>;addb %al, %gs:(%ecx);insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %dh, (%edx)": 1,
                "addb %ch, (%edi);insb %dx, %es:(%edi);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebp)": 1,
                "xorb (%eax), %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %eax": 1,
                "je  <INIT+>;addb %ch, %gs:(%ebp);incl %esp;addb %dh, (%edx);imull $, (%eax), %eax": 1,
                "jns  <INIT+>;jae  <INIT+>;je  <INIT+>;addb %ch, %gs:(%ebp);pushl %edx": 1,
                "addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax);addb %cl, %ah": 3,
                "pushl $;movl %eax, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movb %bl, -(%ebp)": 1,
                "pushl %eax;calll - <_strupr>;popl %ecx;movl %eax, %edi;jmp  <INIT+>": 1,
                "je  <INIT+>;pushl %ebx;calll - <InbvEnableDisplayString>;jmp  <INIT+>;pushl -(%ebp)": 1,
                "addl $, %esp;leal -(%ebp,%eax), %esi;movb %bl, (%esi);incl %esi;cmpl %ebx, -(%ebp)": 1,
                "movb %bl, (%eax,%esi);calll - <InbvDisplayString>;pushl $;popl %ecx;leal -(%ebp), %esi": 1,
                "calll - <strstr>;movl %eax, %esi;cmpl %ebx, %esi;popl %ecx;popl %ecx": 2,
                "movl %ebx, ;calll *;testb %al, %al;je - <INIT+>;pushl $": 1,
                "addl $, %edx;shrl $, %edx;pushl %edx;pushl %ecx;pushl %eax": 1,
                "pushl $;pushl $;jmp  <INIT+>;calll  <KeFindConfigurationEntry+>;testb %al, %al": 1,
                "pushl ;calll - <PAGEKD+>;testb %al, %al;jne  <INIT+>;pushl %ebx": 1,
                "cmpl %ebx, %eax;jge  <INIT+>;pushl %ebx;pushl %ebx;pushl %ebx": 4,
                "pushl $;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl %eax, ;calll - <RtlInitCodePageTable+>;pushl %esi;calll - <RtlInitCodePageTable+>;movl %ebx, -(%ebp)": 1,
                "pushl $;jmp  <INIT+>;calll  <KeFindConfigurationEntry+>;calll *;pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;xorl %edx, %edx;decl %ecx;je  <INIT+>": 1,
                "xorl %edx, %edx;decl %ecx;je  <INIT+>;decl %ecx;je  <INIT+>": 1,
                "addl $, %eax;pushl %eax;calll - <InbvDisplayString>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpb %bl, ;je  <INIT+>;pushl $;popl %ecx;xorl %eax, %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwCreateKey>;movl %eax, %edi;cmpl %ebx, %edi": 2,
                "calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>;cmpl %ebx, %edi;jge  <INIT+>": 1,
                "calll  <KeFindConfigurationEntry+>;calll  <KeFindConfigurationEntry+>;pushl $;calll  <KeFindConfigurationEntry+>;testb %al, %al": 1,
                "pushl $;calll  <KeFindConfigurationEntry+>;testb %al, %al;je - <INIT+>;pushl %esi": 1,
                "jmp  <INIT+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "addl (%eax), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;movw $, (%eax);movl , %eax": 1,
                "movl , %eax;cmpl $, %eax;movl , %ecx;jne  <INIT+>;cmpl $-, %ecx": 1,
                "cmpl $, %eax;movl , %ecx;jne  <INIT+>;cmpl $-, %ecx;je  <INIT+>": 1,
                "jne  <INIT+>;cmpl $-, %ecx;je  <INIT+>;cmpl $, %ecx;jb  <INIT+>": 1,
                "movw %bx, (%ecx,%edx,);movl -(%ebp), %ecx;movzwl (%ecx), %edx;addl (%ecx), %edx;pushl %eax": 1,
                "pushl %eax;movw %bx, -(%ebp);calll - <RtlAppendUnicodeToString>;movl -(%ebp), %eax;addl $, %eax": 1,
                "pushl $;jmp  <INIT+>;pushl -(%ebp);calll - <ZwRestoreKey+>;cmpl %ebx, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl -(%ebp);movl $, -(%ebp)": 1,
                "movl (%esi), %eax;addl %edi, %eax;pushl %eax;movl (%esi), %eax;addl %edi, %eax": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %eax;calll - <INIT+>;movzwl %ax, %eax": 1,
                "addb %dh, %gs:(%edx);addb %al, (%eax);incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "addb %al, (%eax);incl %esp;addb %ah, (%ebp);jbe  <INIT+>;imull $, (%eax), %eax": 1,
                "insl %dx, %es:(%edi);addb %dh, (%eax);insb %dx, %es:(%edi);addb %ah, (%ebp);je  <INIT+>": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "pushl -(%ebp);calll - <NtClose>;movb $, %al;popl %esi;leave": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax;jl  <INIT+>": 12,
                "testl %eax, %eax;jl  <INIT+>;pushl $;popl %eax;pushl %eax": 1,
                "pushl $;popl %eax;pushl %eax;movl %eax, -(%ebp);pushl %ebx": 1,
                "calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;jge  <INIT+>;leal -(%ebp), %eax;pushl %eax": 1,
                "leave;retl $;popl %esp;pushl %ebx;jns  <INIT+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 3,
                "movw %bx, -(%ebp);movw $, -(%ebp);calll - <ObInsertObject+>;testl %eax, %eax;jl - <INIT+>": 1,
                "calll - <RtlUnicodeStringToAnsiString>;movzwl -(%ebp), %eax;pushl -(%ebp);movb %bl, -(%ebp,%eax);calll - <NtClose>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;testl %eax, %eax;jl - <INIT+>": 1,
                "pushl %edi;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movw %di, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 2,
                "pushl -(%ebp);movl %eax, -(%ebp);calll - <NtClose>;cmpl %edi, -(%ebp);jl  <INIT+>": 1,
                "xorl %eax, %eax;movw (%esi), %ax;cmpw $, %ax;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "cmpw $, -(%edx,%ecx);jne  <INIT+>;addl $-, %eax;movw %ax, (%esi);movzwl %ax, %eax": 1,
                "pushl %ebx;addb %bl, (%edi);incl %ebp;addb %dl, (%esi);incl %ebp": 1,
                "andl $, %eax;andb %ah, (%esi);imull $, (%ebp), %ebp;js  <INIT+>;addb %al, (%eax)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;xorl %ebx, %ebx;pushl $;movl %eax, -(%ebp)": 1,
                "pushl $;movl %eax, -(%ebp);movw $, -(%ebp);movw %bx, -(%ebp);calll - <ExInitializeResourceLite>": 1,
                "pushl $;calll - <ExInitializeResourceLite>;movl $, %eax;movl %eax, ;movl %eax, ": 3,
                "movl %eax, ;movl $, %eax;pushl $;movl %eax, ;movl %eax, ": 4,
                "pushl $;popl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp)": 4,
                "pushl %ebx;pushl $;calll  <KeFindConfigurationEntry+>;movl , %eax;pushl %esi": 1,
                "leal (,%eax,), %eax;pushl %eax;pushl %ebx;pushl $;movl %eax, -(%ebp)": 1,
                "je  <INIT+>;pushl %esi;pushl -(%ebp);pushl $;pushl -(%ebp)": 1,
                "calll - <ZwOpenKey>;testl %eax, %eax;jl  <INIT+>;pushl $;leal -(%ebp), %eax": 1,
                "movl %ebx, ;movl %ebx, ;movl %eax, ;movl %eax, ;calll - <KeInitializeSpinLock>": 1,
                "movl %eax, ;calll - <KeInitializeSpinLock>;pushl $;pushl %ebx;pushl $": 1,
                "calll - <RtlInitUnicodeString>;pushl %ebx;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %ebx": 1,
                "calll - <NtCreateEvent>;testl %eax, %eax;pushl %ebx;jge  <INIT+>;pushl $": 1,
                "pushl $;calll - <HeadlessDispatch+>;jmp  <INIT+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;movl %eax, ;movl $, %eax;movl %eax, ;movl %eax, ": 1,
                "movb $, ;movl %ebx, ;movb $, ;movb $, ;movl %esi, ": 1,
                "calll - <INIT+>;testb %al, %al;pushl %ebx;jne  <INIT+>;pushl $": 1,
                "movl $, ;jmp  <INIT+>;movl -(%ebp), %edi;pushl %edi;calll  <IoReportHalResourceUsage+>": 1,
                "cmpb %bl, ;movl %edi, ;je  <INIT+>;pushl %edi;calll  <KeFindConfigurationEntry+>": 1,
                "calll  <IoReportHalResourceUsage+>;testl %eax, %eax;jge  <INIT+>;pushl %ebx;pushl $": 1,
                "movl $, ;jmp  <INIT+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "calll - <HeadlessDispatch+>;movl $, ;jmp  <INIT+>;cmpb %bl, ;movl %ebx, ": 1,
                "jmp  <INIT+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %edx": 1,
                "pushl %eax;pushl %esi;calll - <RtlAnsiStringToUnicodeString>;cmpl %ebx, %eax;jge  <INIT+>": 1,
                "calll  <KeFindConfigurationEntry+>;pushl $;calll  <KeFindConfigurationEntry+>;movb $, %al;movl -(%ebp), %ecx": 1,
                "calll  <KeFindConfigurationEntry+>;movb $, %al;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "addb %al, (%eax);popl %esp;incl %ecx;jb  <INIT+>;decl %esi": 1,
                "popal;jb  <INIT+>;imull $, (%ecx,%ebp,), %esi;addb %bl, (%ecx,%eax,);arpl %cx, (%esi)": 1,
                "andl $, %eax;je  <INIT+>;je  <INIT+>;outsl (%esi), %dx;outsb (%esi), %dx": 1,
                "pushl $;leal (%eax), %esi;pushl %esi;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, ;je  <INIT+>;movl -(%ebp), %edx": 1,
                "je  <INIT+>;movl -(%ebp), %edx;movl %esi, %ecx;movl (%edx), %esi;movl %eax, %edi": 1,
                "cmpl $, %esi;jne  <INIT+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "cmpw %bx, (%edi);jne  <INIT+>;cmpl $-, -(%ebp);jne  <INIT+>;movl %ebx, -(%ebp)": 1,
                "pushl %eax;calll - <RtlFreeUnicodeString>;orl $-, -(%ebp);cmpl %ebx, %esi;jl  <INIT+>": 1,
                "pushl %eax;calll - <KeWaitForSingleObject>;movl -(%ebp), %eax;cmpl %ebx, %eax;jl  <INIT+>": 2,
                "calll - <ExAllocatePoolWithTag>;movl %eax, %esi;cmpl %ebx, %esi;movl %esi, -(%ebp);je  <INIT+>": 1,
                "je  <INIT+>;cmpb %bl, -(%ebp);je  <INIT+>;cmpl $, -(%ebp);jne  <INIT+>": 1,
                "movl -(%ebp), %eax;cmpl %ebx, (%eax);jbe  <INIT+>;xorl %esi, %esi;incl %esi": 1,
                "jbe  <INIT+>;xorl %esi, %esi;incl %esi;cmpl $-, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %esi;jne  <INIT+>;pushl -(%ebp);pushl $;jmp  <INIT+>": 1,
                "testl %eax, %eax;jl  <INIT+>;pushl %esi;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlEqualString>;testb %al, %al;je  <INIT+>": 2,
                "pushl (%eax);leal -(%ebp), %eax;pushl %eax;calll - <RtlInitAnsiString>;pushl $": 1,
                "pushl %eax;calll - <RtlFreeUnicodeString>;pushl %esi;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;incl -(%ebp);jmp - <INIT+>": 1,
                "andl $, (%eax);pushl %esi;movl (%ebp), %esi;pushl %edi;pushl %esi": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %ecx;movzwl (%ecx), %ecx;shrl %ecx;andw $, (%eax,%ecx,)": 1,
                "movl %eax, (%edi);movl %ecx, %edx;addl $, %edi;movw %si, (%edi);movl (%ebp), %esi": 1,
                "movw %si, (%edi);movl (%ebp), %esi;shrl $, %ecx;movl %edi, (%ebp);movl %eax, %edi": 1,
                "pushl $;pushl (%ebp);shrl %ecx;andw $, (%eax,%ecx,);pushl $": 1,
                "testl %esi, %esi;jl  <INIT+>;pushl (%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);movl %eax, %esi;calll - <NtClose>;testl %esi, %esi;jl  <INIT+>": 1,
                "calll - <HeadlessDispatch+>;pushl %ebx;calll - <ObMakeTemporaryObject>;movl %ebx, %ecx;calll - <ObfDereferenceObject>": 1,
                "movl $, ;jne  <INIT+>;testb $-, %bl;je  <INIT+>;andl $, ": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <INIT+>;jmp  <INIT+>;pushl $": 2,
                "pushl %eax;pushl -(%ebp);movb $, -(%ebp);movb $, -(%ebp);calll  <KeFindConfigurationEntry+>": 1,
                "pushl $;subl $, %eax;movl $, %edi;pushl %edi;sbbl %ecx, %ecx": 1,
                "calll - <_allmul>;testl %edx, %edx;jl  <INIT+>;jle  <INIT+>;incl %esi": 1,
                "jl  <INIT+>;testl %eax, %eax;ja - <INIT+>;addl $, %ebx;decl -(%ebp)": 1,
                "pushl $;movl %edi, -(%ebp);calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "rep  stosb %al, %es:(%edi);movl -(%ebp), %eax;xorl %edi, %edi;movl %esi, (%ebx);movl $, (%ebx)": 1,
                "leal (%ebx), %esi;movl %edi, -(%ebp);jbe  <INIT+>;addl $, %eax;movl %eax, -(%ebp)": 1,
                "jg - <INIT+>;jl  <INIT+>;testl %edx, %edx;ja - <INIT+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;addl $, %edx;incl -(%ebp);movl %edx, -(%esi)": 1,
                "calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <INIT+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "cmpl %esi, -(%ebp);je  <IoReportHalResourceUsage+>;pushl %esi;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl , %esi;leal -(%ebp), %ecx": 1,
                "jb - <IoReportHalResourceUsage+>;jmp  <IoReportHalResourceUsage+>;xorl %ebx, %ebx;incl %ebx;movl %ebx, %eax": 1,
                "jmp  <IoReportHalResourceUsage+>;xorl %ebx, %ebx;incl %ebx;movl %ebx, %eax;popl %esi": 1,
                "calll - <ObfDereferenceObject>;movb $, %al;popl %esi;popl %ebp;retl $": 1,
                "movl (%ebp), %ebx;movw (%ebx), %cx;movw (%esi), %ax;cmpw %ax, %cx;jae  <IoReportHalResourceUsage+>": 1,
                "testl %eax, %eax;jne - <IoReportHalResourceUsage+>;cmpb %al, (%ebp);je  <IoReportHalResourceUsage+>;pushl %ebx": 1,
                "jmp  <IoReportHalResourceUsage+>;pushl $;leal (%esi), %eax;pushl %eax;pushl %ebx": 2,
                "addb %al, (%edi);jb  <IoReportHalResourceUsage+>;outsl (%esi), %dx;addb %dh, (%ebp);jo  <IoReportHalResourceUsage+>": 3,
                "je  <IoReportHalResourceUsage+>;addb %al, (%eax);incl %edi;addb %dh, (%edx);outsl (%esi), %dx": 1,
                "pushl %eax;movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "cmpl %edi, (%ecx);je  <IoReportHalResourceUsage+>;movl (%ecx), %eax;addl %ecx, %eax;movl (%eax), %edx": 1,
                "movl $, -(%ebp);jb  <IoReportHalResourceUsage+>;cmpl (%eax), %ebx;je  <IoReportHalResourceUsage+>;addl $, %eax": 1,
                "pushl %ecx;calll - <ExFreePoolWithTag>;movw -(%ebp), %ax;jmp - <IoReportHalResourceUsage+>;int": 1,
                "movl (%eax), %esi;testl %esi, %esi;je  <IoReportHalResourceUsage+>;pushl %edi;pushl %esi": 1,
                "testl %esi, %esi;je  <IoReportHalResourceUsage+>;pushl %edi;pushl %esi;calll - <IoReportHalResourceUsage+>": 1,
                "pushl %edi;calll - <IoRegisterPlugPlayNotification+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl %eax;pushl $;leal (%esi), %eax;pushl %eax;calll - <IoReportResourceUsage+>": 1,
                "testl %eax, %eax;jl  <IoReportHalResourceUsage+>;testb $, (%esi);movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "je  <IoReportHalResourceUsage+>;cmpl $, (%esi);jne  <IoReportHalResourceUsage+>;pushl %esi;calll - <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "calll - <ExFreePoolWithTag>;movl , %eax;movl (%esi), %esi;addl %edi, %eax;cmpl %eax, %esi": 1,
                "jmp  <IoReportHalResourceUsage+>;movl (%esi), %ebx;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;popl %edi;movl %ebx, %eax;popl %esi": 1,
                "jb  <IoReportHalResourceUsage+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx)": 1,
                "imull $, (%eax), %eax;incl %edi;addb %dh, (%edx);outsl (%esi), %dx;addb %dh, (%ebp)": 2,
                "movl %esp, %ebp;subl $, %esp;pushl %edi;xorl %edi, %edi;cmpl %edi, ": 1,
                "movl %ecx, -(%ebp);jbe  <IoReportHalResourceUsage+>;movl , %ecx;movzwl %si, %eax;pushl $": 1,
                "popl %esp;addb %dl, (%edx);popal;addb %ch, (%ebp);addb %ch, %fs:(%ecx)": 2,
                "pushl %esp;addb %al, (%eax);addb %bh, ;incl %esp;decl %ecx": 1,
                "decl %ebp;incl %ecx;incl %edi;incl %ebp;decl %esp": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);xorl %edi, %edi;movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl (%ebx), %eax;shll $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpl %edi, %esi;movl %edi, -(%ebp);je  <IoReportHalResourceUsage+>;pushl %esi;calll - <_strupr>": 1,
                "subl %eax, -(%ebp);pushl $;pushl %esi;sbbl %edi, -(%ebp);calll - <strstr>": 1,
                "movl %edi, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);calll - <NtOpenFile>": 1,
                "jmp  <IoReportHalResourceUsage+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlStringFromGUID>;movl %eax, %esi;cmpl %edi, %esi;jge  <IoReportHalResourceUsage+>;pushl $": 1,
                "addb %dh, (%edx);je  <IoReportHalResourceUsage+>;decl %edi;addb %dh, (%edx);addb %ah, %fs:(%ebp)": 1,
                "jb  <IoReportHalResourceUsage+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %dl, (%eax);outsb (%esi), %dx": 1,
                "movb %bl, ;movl %ecx, ;movl %eax, ;calll - <LsaDeregisterLogonProcess+>;pushl (%ebp)": 1,
                "calll - <RtlLengthSid>;pushl ;movl %eax, %edi;addl $, %edi;calll - <RtlLengthSid>": 1,
                "movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "calll - <IoReportResourceUsage+>;pushl (%ebp);movl %eax, %edi;calll - <NtClose>;cmpl %ebx, %edi": 1,
                "pushl (%ebp);movl %eax, %edi;calll - <NtClose>;cmpl %ebx, %edi;jl  <IoReportHalResourceUsage+>": 1,
                "pushl $;movl %eax, ;movl %eax, ;calll - <ExInitializeResourceLite>;pushl $": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;jl  <IoReportHalResourceUsage+>;leal -(%ebp), %eax;pushl %eax": 2,
                "calll - <PsDereferencePrimaryToken>;cmpl %ebx, %edi;jl  <IoReportHalResourceUsage+>;calll - <IoReportResourceUsage+>;movl %eax, %edi": 1,
                "cmpl $, (%eax);jne  <IoReportHalResourceUsage+>;movl (%eax), %ecx;movb (%eax,%ecx), %cl;movb %cl, (%ebp)": 1,
                "movb $, %al;jmp  <IoReportHalResourceUsage+>;movl -(%ebp), %eax;pushl %esi;movl (%eax), %esi": 1,
                "movl (%eax), %esi;pushl %edi;movl (%eax), %edi;movb $, (%ebp);jmp  <IoReportHalResourceUsage+>": 1,
                "pushl %eax;pushl $;calll - <IoReportResourceUsage+>;popl %ebp;retl $": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl , %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl , %eax;pushl %ebx": 1,
                "pushl (%eax);calll - <IoReportTargetDeviceChangeAsynchronous+>;testl %eax, %eax;jl  <IoReportHalResourceUsage+>;pushl %ebx": 1,
                "calll - <RtlFreeUnicodeString>;cmpl %ebx, %edi;je  <IoReportHalResourceUsage+>;movl %edi, %ecx;calll - <ObfDereferenceObject>": 1,
                "je  <IoReportHalResourceUsage+>;movw (%eax), %cx;movw %cx, -(%ebp);movw %cx, -(%ebp);movl (%eax), %ecx": 2,
                "movw %cx, -(%ebp);movw %cx, -(%ebp);movl (%eax), %ecx;addl %eax, %ecx;pushl $": 2,
                "movw %cx, -(%ebp);movl (%eax), %ecx;addl %eax, %ecx;pushl $;leal -(%ebp), %eax": 2,
                "pushl %eax;calll - <ExFreePoolWithTag>;jmp  <IoReportHalResourceUsage+>;xorl %edi, %edi;pushl (%esi)": 1,
                "pushl (%esi);calll - <ZwClose>;calll - <INIT+>;addl $, %esi;movl (%esi), %eax": 1,
                "jne - <IoReportHalResourceUsage+>;popl %edi;pushl %ebx;pushl -(%ebp);calll - <ExFreePoolWithTag>": 2,
                "pushl $;pushl $;calll - <KeBugCheckEx>;calll - <IoReportResourceUsage+>;movb $, %al": 1,
                "addb %bh, (%ecx);jae  <IoReportHalResourceUsage+>;je  <IoReportHalResourceUsage+>;addb %ch, %gs:(%ebp);popl %esp": 1,
                "jae  <IoReportHalResourceUsage+>;je  <IoReportHalResourceUsage+>;addb %ch, %gs:(%ebp);popl %esp;addb %dl, (%edx)": 1,
                "popl %esp;addb %dl, (%edx);incl %ecx;addb %dl, (%edi);addb %al, (%eax)": 1,
                "xorl %esi, %esi;pushl %esi;pushl %esi;pushl $;leal -(%ebp), %eax": 2,
                "je  <IoReportHalResourceUsage+>;pushl %esi;calll - <IoReportHalResourceUsage+>;movzwl %ax, %eax;cmpl $, %eax": 1,
                "jmp  <IoReportHalResourceUsage+>;xorl %ecx, %ecx;cmpl %esi, ;jbe  <IoReportHalResourceUsage+>;xorl %eax, %eax": 1,
                "movl , %edx;leal (%edx,%eax,), %eax;incl %ecx;movl %eax, (%eax);movl %eax, (%eax)": 1,
                "cmpl , %eax;jb - <IoReportHalResourceUsage+>;pushl %edi;movl (%ebp), %edi;movb $, ": 1,
                "leal (%edi), %eax;pushl %ebx;movl (%eax), %ebx;jmp  <IoReportHalResourceUsage+>;movl (%ebx), %eax": 1,
                "movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>;movl %eax, %esi;testl %esi, %esi;je  <IoReportHalResourceUsage+>": 1,
                "leal (%ecx,%eax,), %eax;pushl %eax;calll - <IoReportHalResourceUsage+>;movl (%ebp), %eax;movl (%ebx), %ebx": 1,
                "jmp  <IoReportHalResourceUsage+>;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %ebx;movl (%ebx), %edi": 1,
                "movl (%esi), %ebx;movl (%ebx), %edi;leal -(%ebp), %eax;pushl %eax;movb $, (%esi)": 1,
                "movb $, (%esi);pushl -(%ebp);calll - <NtWriteFile+>;testl %eax, %eax;jge  <IoReportHalResourceUsage+>": 1,
                "pushl -(%ebp);calll - <NtWriteFile+>;testl %eax, %eax;jl  <IoReportHalResourceUsage+>;movl -(%ebp), %eax": 4,
                "calll - <INIT+>;movl %eax, (%esi);movl -(%ebp), %ecx;testl %ecx, %ecx;je  <IoReportHalResourceUsage+>": 1,
                "jne  <IoReportHalResourceUsage+>;movl -(%ebp), %ecx;xorl %edi, %edi;cmpl %edi, (%ecx);jne  <IoReportHalResourceUsage+>": 1,
                "pushl %eax;pushl %edi;calll - <IoReportResourceUsage+>;jmp  <IoReportHalResourceUsage+>;movl -(%ebp), %ecx": 1,
                "addl %ecx, %eax;cmpl %eax, %esi;jne - <IoReportHalResourceUsage+>;cmpw $, -(%ebp);jne  <IoReportHalResourceUsage+>": 1,
                "jne  <IoReportHalResourceUsage+>;pushl $;pushl $;calll  <IoReportHalResourceUsage+>;movl $, ": 1,
                "pushl $;pushl $;calll  <IoReportHalResourceUsage+>;movl $, ;movb $, ": 1,
                "movzwl -(%ebp), %eax;cmpl , %eax;jb - <IoReportHalResourceUsage+>;xorl %edi, %edi;cmpb $, ": 1,
                "cmpl , %eax;jb - <IoReportHalResourceUsage+>;xorl %edi, %edi;cmpb $, ;movl $, %ebx": 1,
                "pushl $;pushl (%esi);calll - <wctomb+>;addl $, %esp;testl %eax, %eax": 1,
                "addl $, %esp;testl %eax, %eax;jne  <IoReportHalResourceUsage+>;pushl %esi;calll - <IoReportHalResourceUsage+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;movl %ebx, -(%ebp);calll - <ZwCreateTimer+>": 1,
                "jne  <IoReportHalResourceUsage+>;movb $, (%esi);movl -(%ebp), %ecx;testb $, (%ecx);jne  <IoReportHalResourceUsage+>": 1,
                "calll - <ObMakeTemporaryObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;cmpl %edi, %ecx": 1,
                "movl -(%ebp), %ecx;cmpl %edi, %ecx;je  <IoReportHalResourceUsage+>;calll - <ObfDereferenceObject>;cmpb $, (%esi)": 1,
                "cmpb $, (%esi);je  <IoReportHalResourceUsage+>;movl (%esi), %eax;movl (%eax), %eax;orb $, (%eax)": 1,
                "jbe  <IoReportHalResourceUsage+>;pushl %esi;leal (%edi), %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "calll - <ExAllocatePoolWithTag>;xorl %ecx, %ecx;cmpl %ecx, %eax;movl %eax, ;jne  <IoReportHalResourceUsage+>": 1,
                "movl %eax, ;movl %eax, ;movl %ecx, ;movl $, ;movl %ecx, ": 1,
                "movl $, %eax;jmp  <IoReportHalResourceUsage+>;movl (%ecx), %eax;pushl %esi;movl (%ecx), %esi": 1,
                "cmpl %esi, %eax;jne - <IoReportHalResourceUsage+>;cmpl %esi, %eax;jne  <IoReportHalResourceUsage+>;incl -(%ebp)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebx), %edx;movl %eax, %ecx": 1,
                "movl (%ebp), %edi;cmpl %esi, %eax;jne  <IoReportHalResourceUsage+>;subl (%ebp), %eax;pushl $": 1,
                "testl %ecx, %ecx;je  <IoReportHalResourceUsage+>;movl (%ebp), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "je  <IoReportHalResourceUsage+>;movl (%ebp), %esi;movl %ecx, %eax;shrl $, %ecx;movl %edx, %edi": 1,
                "pushl %ecx;pushl $;pushl $;movl $, %eax;pushl $": 1,
                "rep  movsl (%esi), %es:(%edi);movzwl (%ebx), %ecx;movl (%ebx), %esi;subl %edx, %ecx;shrl %edx": 1,
                "movl (%ebx), %esi;subl %edx, %ecx;shrl %edx;leal (%esi,%edx,), %esi;movl %ecx, %edx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %ecx, %ecx": 1,
                "subw (%ebp), %cx;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ebx, %eax;jl  <IoReportHalResourceUsage+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "xorl %edi, %edi;cmpl %ebx, %edi;jl  <IoReportHalResourceUsage+>;cmpb %bl, (%ebp);je  <IoReportHalResourceUsage+>": 1,
                "pushl %esi;xorl %eax, %eax;leal -(%ebp), %ecx;incl %eax;pushl %ecx": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwEnumerateValueKey>;testl %eax, %eax;jge - <IoReportHalResourceUsage+>": 1,
                "pushl -(%ebp);calll - <ZwEnumerateValueKey>;testl %eax, %eax;jge - <IoReportHalResourceUsage+>;leal -(%ebp), %eax": 1,
                "int;popl %esp;addb %dl, (%ebx);jns  <IoReportHalResourceUsage+>;jae  <IoReportHalResourceUsage+>": 1,
                "addb %ch, %gs:(%ebp);popl %esp;addb %cl, (%eax,%eax);addb %dh, (%ebx);je  <IoReportHalResourceUsage+>": 2,
                "addb %ch, (%esi);outsl (%esi), %dx;addb %dh, (%edi);outsb (%esi), %dx;addb %al, (%edi)": 3,
                "addb %dh, (%edi);outsb (%esi), %dx;addb %al, (%edi);outsl (%esi), %dx;addb %ch, (%edi)": 3,
                "addb %bl, (%eax,%eax);addb %bh, (%ecx);jae  <IoReportHalResourceUsage+>;je  <IoReportHalResourceUsage+>;addb %ch, %gs:(%ebp)": 1,
                "outsl (%esi), %dx;addb %ah, (%eax,%eax);addb %dl, (%eax,%eax);addb %dh, (%eax);addb %al, (%eax)": 2,
                "addb %dl, (%eax,%eax);addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "testl %eax, %eax;movl %eax, (%esi);je  <IoReportHalResourceUsage+>;movl (%ebp), %esi;movl %edi, %ecx": 1,
                "jmp  <IoReportHalResourceUsage+>;xorl %ebx, %ebx;pushl $;pushl $;pushl $": 1,
                "addl $, %ebx;movl (%ebx), %eax;testl %eax, %eax;je  <IoReportHalResourceUsage+>;pushl $": 1,
                "testl %ebx, %ebx;je  <IoReportHalResourceUsage+>;movl (%ebx), %ecx;jmp  <IoReportHalResourceUsage+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);movl , %ecx;movl %ecx, (%eax);movl %eax, ": 1,
                "movl %eax, ;xorl %eax, %eax;popl %esi;popl %ebx;popl %edi": 1,
                "pushl %edi;je  <IoReportHalResourceUsage+>;movl , %eax;testl %eax, %eax;je  <IoReportHalResourceUsage+>": 1,
                "calll - <IoReportResourceUsage+>;pushl %edi;pushl %esi;calll - <IoReportResourceUsage+>;testl %esi, %esi": 1,
                "cmpl %eax, (%edi);jne  <IoReportHalResourceUsage+>;pushl %edi;pushl (%esi);pushl $": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;jmp  <IoReportHalResourceUsage+>": 1,
                "jne  <IoReportHalResourceUsage+>;movl $, %esi;jmp  <IoReportHalResourceUsage+>;movl $, %esi;jmp  <IoReportHalResourceUsage+>": 1,
                "jne  <IoReportHalResourceUsage+>;testl %eax, %eax;je  <IoReportHalResourceUsage+>;pushl %eax;pushl $": 1,
                "testl %eax, %eax;je  <IoReportHalResourceUsage+>;pushl %eax;pushl $;calll - <IoReportHalResourceUsage+>": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <IoReportHalResourceUsage+>;pushl %ebx;movl (%ebp), %ebx": 1,
                "movl %eax, (%ebx);je  <IoReportHalResourceUsage+>;movl (%esi), %eax;cmpl $, %eax;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);je  <IoReportHalResourceUsage+>;movl (%ebx), %eax;testl %eax, %eax;je  <IoReportHalResourceUsage+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);popl %edi;movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "popl %esi;movl %eax, (%ebx);popl %ebx;xorl %eax, %eax;popl %ebp": 1,
                "movl %eax, -(%ebp);je  <IoReportHalResourceUsage+>;movl (%eax), %eax;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "jne  <IoReportHalResourceUsage+>;pushl %eax;pushl %ebx;calll - <ExFreePoolWithTag>;movl $, %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl %eax, (%ebx);movl (%ebp), %eax;movl (%eax), %edi": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;testl %edi, %edi;je  <IoReportHalResourceUsage+>;movl (%edi), %eax": 1,
                "subl $, %eax;je  <IoReportHalResourceUsage+>;decl %eax;je  <IoReportHalResourceUsage+>;decl %eax": 1,
                "decl %eax;je  <IoReportHalResourceUsage+>;decl %eax;jne  <IoReportHalResourceUsage+>;movl $, -(%ebp)": 1,
                "jmp  <IoReportHalResourceUsage+>;movl $, -(%ebp);pushl %ebx;pushl $;pushl $": 1,
                "pushl $;pushl %ebx;calll - <ExFreePoolWithTag>;xorl %eax, %eax;popl %edi": 1,
                "movl -(%ebp,%esi,), %eax;pushl $;pushl $;pushl %edi;pushl %edi": 1,
                "jne  <IoReportHalResourceUsage+>;testb $, (%ecx);jne  <IoReportHalResourceUsage+>;orb $, (%ecx);incl %edx": 1,
                "shll $, %edi;decl %ecx;shll $, %ecx;leal (%ecx,%eax), %eax;cmpb $, (%eax)": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <IoReportHalResourceUsage+>;cmpl $, (%esi)": 1,
                "popl %ecx;jne  <IoReportHalResourceUsage+>;cmpl $, (%esi);jne  <IoReportHalResourceUsage+>;movl (%esi), %ecx": 1,
                "movl $, (%eax);movl (%ebx), %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "incl (%edx);addl $, (%ebx);calll - <ExFreePoolWithTag>;jmp  <IoReportHalResourceUsage+>;movl %esi, -(%ebp)": 1,
                "leave;retl $;int;incl %ebx;addb %cl, (%edi)": 1,
                "retl $;int;incl %ebx;addb %cl, (%edi);decl %ebp": 1,
                "decl %esi;addb %ah, (%ecx);insl %dx, %es:(%edi);addb %ah, (%ebp);andb %al, (%eax)": 1,
                "addb %ah, (%eax);addb %cl, (%ebp);addb %dh, %gs:(%edx);addb %ah, (%di);addb %al, (%eax)": 1,
                "jae  <IoReportHalResourceUsage+>;incl %esp;addb %ah, (%ebp);jbe  <IoReportHalResourceUsage+>;imull $, (%eax), %eax": 2,
                "pushl -(%ebp);calll - <ZwQueryValueKey>;cmpl $, %eax;jne  <IoReportHalResourceUsage+>;pushl %edi": 1,
                "popl %edi;cmpl %ebx, %eax;jl  <IoReportHalResourceUsage+>;movl -(%ebp), %ecx;decl %ecx": 1,
                "decl %ecx;movl %ecx, %eax;andl $, %ecx;movb $, %dl;shrl $, %eax": 1,
                "pushl %eax;pushl (%ebp);calll - <ZwSetValueKey>;popl %esi;popl %ebx": 1,
                "xorl %eax, %eax;movl $, %ecx;rep  stosl %eax, %es:(%edi);pushl (%esi);pushl (%esi)": 2,
                "pushl (%esi);pushl (%esi);pushl $;pushl -(%ebp);calll - <swprintf>": 2,
                "addb %al, (%eax);popl %esp;addb %cl, (%eax,%eax);addb %ah, (%edi);incl %ebx": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);movzwl %ax, %eax;leal (%ecx,%eax), %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);calll - <ZwClose>;movl (%ebp), %eax;cmpl %esi, (%eax);je  <IoReportHalResourceUsage+>": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;addl $, %eax;pushl $;pushl %eax": 1,
                "cmpl %esi, %eax;je  <IoReportHalResourceUsage+>;movl $, (%eax);movl (%edi), %ecx;movl (%edi), %esi": 1,
                "pushl $;pushl %esi;calll - <ExFreePoolWithTag>;xorl %esi, %esi;pushl (%ebp)": 1,
                "pushl %edx;addb %al, (%eax,%eax);addb %al, (%eax);addb %ch, (%edx);addb %dl, (%eax)": 1,
                "pushl %eax;addb %dl, (%ebx);xorb (%eax), %al;popl %edi;addb %cl, (%ebp)": 1,
                "testb $, (%ebx);je  <IoReportHalResourceUsage+>;movl (%ebp), %eax;cmpl $, (%eax);jne  <IoReportHalResourceUsage+>": 1,
                "xorl %eax, %eax;leal -(%ebp), %ecx;pushl %ecx;pushl -(%ebx);movl %eax, -(%ebp)": 1,
                "pushl (%eax);leal -(%ebp), %eax;pushl $;pushl %eax;pushl -(%ebp)": 1,
                "shrl %ecx;andw $, -(%eax,%ecx,);jmp  <IoReportHalResourceUsage+>;cmpl %ebx, %ecx;jne  <IoReportHalResourceUsage+>": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %esi;pushl -(%esi)": 1,
                "jne  <IoReportHalResourceUsage+>;calll - <IoReportHalResourceUsage+>;jmp  <IoReportHalResourceUsage+>;pushl %esi;pushl $": 1,
                "testl %eax, %eax;jl  <IoReportHalResourceUsage+>;pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %edi": 1,
                "jl  <IoReportHalResourceUsage+>;xorl %edi, %edi;incl %edi;cmpl %edi, -(%ebp);je  <IoReportHalResourceUsage+>": 3,
                "xorl %edi, %edi;incl %edi;cmpl %edi, -(%ebp);je  <IoReportHalResourceUsage+>;leal -(%ebp), %eax": 3,
                "cmpl %edi, -(%ebp);jne  <IoReportHalResourceUsage+>;pushl (%ebp);leal -(%ebp), %eax;pushl %esi": 1,
                "calll - <ZwClose>;movl (%esi), %esi;cmpl %ebx, %esi;jne - <IoReportHalResourceUsage+>;pushl %ebx": 1,
                "movl %eax, (%ecx);calll - <ExAllocatePoolWithTag>;xorl %edx, %edx;cmpl %edx, %eax;je  <IoReportHalResourceUsage+>": 1,
                "calll - <ExAllocatePoolWithTag>;xorl %edx, %edx;cmpl %edx, %eax;je  <IoReportHalResourceUsage+>;movl %esi, (%eax)": 1,
                "shrl (%ebp);incl %esi;testb $, (%ebp);je  <IoReportHalResourceUsage+>;andl $, (%ecx)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);calll - <IoReportResourceUsage+>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "jbe  <IoReportHalResourceUsage+>;cmpb $, (%eax);jne  <IoReportHalResourceUsage+>;pushl %ebx;pushl %esi": 1,
                "subl %edx, %ebx;addl %ebx, %eax;leal (%esi,%edx), %esi;incl %ecx;cmpl $, %ecx": 1,
                "pushl -(%ebp);calll - <IoReportHalResourceUsage+>;movl %eax, -(%ebp);pushl %edi;pushl -(%ebp)": 1,
                "jmp - <IoReportHalResourceUsage+>;int;popl %esp;addb %dl, (%edx);addb %ah, %gs:(%edi)": 1,
                "andb %al, (%eax);incl %ebp;addb %ch, (%ecx);jae  <IoReportHalResourceUsage+>;popal": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);decl %eax;addb %ah, (%ecx);jb  <IoReportHalResourceUsage+>": 1,
                "calll - <ZwDeleteValueKey>;cmpl %edi, -(%ebp);jne  <IoReportHalResourceUsage+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwSetValueKey>;pushl $;popl %ecx": 1,
                "movl %esi, -(%ebp);calll - <ZwSetValueKey>;pushl %esi;pushl %esi;pushl %ebx": 1,
                "pushl -(%ebp);movw $, -(%ebp);pushl $;pushl %esi;pushl %eax": 1,
                "shrb $, %cl;movzbw %cl, %dx;movl (%ebp), %ecx;pushl %ebx;pushl %esi": 1,
                "movw %dx, (%ecx);movb (%eax), %dl;movb (%eax), %bl;andb $, %dl;movzbw %dl, %dx": 1,
                "shrl $, %edx;movsbw (%edx), %dx;movw %dx, (%ecx);movzbl (%eax), %eax;andl $, %eax": 1,
                "movzbl (%eax), %eax;andl $, %eax;movsbw (%eax), %ax;andw $, (%ecx);movw %ax, (%ecx)": 1,
                "andl $, %eax;movsbw (%eax), %ax;andw $, (%ecx);movw %ax, (%ecx);popl %ebp": 1,
                "pushl %esi;calll - <wcslen>;popl %ecx;leal (%eax,%eax), %edi;pushl %edi": 1,
                "calll - <RtlCompareMemory>;cmpl %edi, %eax;je  <IoReportHalResourceUsage+>;leal (%esi,%edi), %esi;cmpw $, (%esi)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;andl $, -(%ebp);pushl $": 1,
                "calll - <NtWriteFile+>;pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;leave": 1,
                "pushl %edi;calll - <RtlCompareMemory>;cmpl %ebx, %eax;je  <IoReportHalResourceUsage+>;movl (%ebp), %edi": 1,
                "addl $, %edi;cmpw $, (%edi);jne - <IoReportHalResourceUsage+>;cmpw $, (%edi);jne  <IoReportHalResourceUsage+>": 1,
                "leal -(%ecx,%eax,), %eax;shll $, %eax;addl $, %eax;pushl $;xorl %edi, %edi": 1,
                "andl $, %ecx;incl %ecx;andb $-, %dl;jmp  <IoReportHalResourceUsage+>;movzwl (%eax), %ecx": 1,
                "addl $, %ecx;cmpb $, %dl;jne  <IoReportHalResourceUsage+>;incl %esi;addl %ecx, %eax": 1,
                "movb %bl, -(%ebp);movl %ebx, -(%ebp);jbe  <IoReportHalResourceUsage+>;pushl %esi;pushl %edi": 1,
                "jbe  <IoReportHalResourceUsage+>;pushl %esi;pushl %edi;movl (%ebp), %edi;addl $, %edi": 1,
                "je  <IoReportHalResourceUsage+>;pushl $;pushl (%ebp);pushl %esi;calll - <RtlCompareMemory>": 1,
                "cmpl %ebx, %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);jbe  <IoReportHalResourceUsage+>": 1,
                "movl %eax, -(%ebp);movzbl (%ecx), %eax;movl %eax, -(%ebp);decl %eax;je  <IoReportHalResourceUsage+>": 1,
                "movl (%eax), %ebx;addl %edi, %ebx;cmpl %edx, %ebx;ja  <IoReportHalResourceUsage+>;xorl %ebx, %ebx": 1,
                "cmpl (%eax), %edx;jne  <IoReportHalResourceUsage+>;addl $, -(%ebp);jmp  <IoReportHalResourceUsage+>;addl $, -(%ebp)": 1,
                "addl $, %ecx;decl -(%ebp);jne - <IoReportHalResourceUsage+>;cmpl %ebx, -(%ebp);je  <IoReportHalResourceUsage+>": 1,
                "cmpl %ebx, -(%ebp);je  <IoReportHalResourceUsage+>;cmpl $-, -(%ebp);jne  <IoReportHalResourceUsage+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movb (%ebp), %al;movb %al, -(%ebp);incl -(%ebp)": 1,
                "cmpb %bl, -(%ebp);jne  <IoReportHalResourceUsage+>;jmp  <IoReportHalResourceUsage+>;movl $, %edx;cmpl %edx, %ecx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %ah, (%edi);incl %ebx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movw $, -(%ebp)": 1,
                "movl $, %ebx;pushl %ebx;pushl $;calll - <ExAllocatePoolWithTag>;pushl %esi": 1,
                "movl %edi, -(%ebp);calll - <ExAllocatePoolWithTag>;pushl $;movl %eax, %ebx;popl %eax": 1,
                "je  <IoReportHalResourceUsage+>;cmpl $, %esi;je  <IoReportHalResourceUsage+>;cmpl $, %esi;jne  <IoReportHalResourceUsage+>": 1,
                "pushl %eax;calll - <IoReportResourceUsage+>;movl %eax, %esi;testl %esi, %esi;jl  <IoReportHalResourceUsage+>": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebx), %eax;shrl %eax;movw $, -(%ebp,%eax,);movl (%ebx), %edi": 1,
                "movw $, -(%ebp,%eax,);movl (%ebx), %edi;shrl %edi;leal -(%ebp,%edi,), %edi;movl $, %esi": 1,
                "calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;pushl $;pushl %eax;pushl $": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwQueryValueKey>;testl %eax, %eax;jl  <IoReportHalResourceUsage+>": 1,
                "movl %eax, -(%ebp);calll - <IoReportHalResourceUsage+>;movl %eax, %esi;cmpl $-, %esi;je  <IoReportHalResourceUsage+>": 1,
                "andl $, -(%ebp);movl -(%ebp), %edi;incl -(%ebp);jmp - <IoReportHalResourceUsage+>;andl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <IoReportHalResourceUsage+>;pushl $;pushl -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;xorl %edx, %edx;decl %eax;testl %eax, %eax": 1,
                "retl $;incl %esp;addb %ah, (%ebp);jbe  <IoReportHalResourceUsage+>;imull $, (%eax), %eax": 1,
                "imull $, (%eax), %eax;andb %al, (%eax);pushl %eax;addb %ah, (%ecx);jb  <IoReportHalResourceUsage+>": 1,
                "popal;addb %ch, (%ebp);addb %dh, %gs:(%eax,%eax);addb %dh, (%edx);jae  <IoReportHalResourceUsage+>": 1,
                "addb %al, (%eax);addb %al, (%eax,%eax);addb %dh, (%ebx);incl %esp;addb %ah, (%ebp)": 1,
                "movw (%esi), %ax;pushl (%ebp);movw %ax, -(%ebp);movw %ax, -(%ebp);leal (%esi), %eax": 1,
                "incl (%ebp);jmp - <IoReportHalResourceUsage+>;movl $, %ebx;jmp  <IoReportHalResourceUsage+>;cmpl $, %ebx": 1,
                "leal (%eax), %ecx;movl (%eax), %eax;cmpl %ebx, %eax;pushl %esi;movl $, -(%ebp)": 1,
                "movl (%ebp), %ebx;pushl %edi;xorl %edi, %edi;cmpl %edi, %eax;jbe  <IoReportHalResourceUsage+>": 1,
                "pushl %eax;calll - <ExFreePoolWithTag>;movl -(%esi), %eax;cmpl %edi, %eax;je  <IoReportHalResourceUsage+>": 2,
                "popl %edi;xorl %eax, %eax;popl %ebx;popl %ebp;retl $": 1,
                "cmpl $, (%eax);jne  <IoReportHalResourceUsage+>;movl (%eax), %ecx;movl (%eax), %edx;movl (%eax), %ebx": 1,
                "movl %ecx, (%eax);incl (%ebp);movl (%ebp), %ecx;addl $, %eax;cmpl (%esi), %ecx": 1,
                "cmpl (%esi), %ecx;jb - <IoReportHalResourceUsage+>;movl -(%ebp), %eax;movl (%esi), %esi;shll $, %esi": 1,
                "incl %esi;addb %dh, (%ebp);insb %dx, %es:(%edi);addb %ch, (%eax,%eax);addb %ah, (%ebp)": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %edi;xorl %edi, %edi;cmpl $, %ebx": 1,
                "movl %edi, (%ebp);jbe  <IoReportHalResourceUsage+>;movzwl (%edx), %edi;cmpl %eax, %edi;movl %edx, %ecx": 1,
                "jg  <IoReportHalResourceUsage+>;movzwl (%ecx), %ecx;addl %edi, %edx;subl %ecx, %eax;incl (%ebp)": 1,
                "pushl %edi;pushl %eax;calll - <ExFreePoolWithTag>;movzbl (%esi), %eax;addl %eax, %esi": 1,
                "addl $, %ebx;jmp  <IoReportHalResourceUsage+>;movl -(%ebp), %esi;xorl %edi, %edi;movzwl (%esi), %eax": 1,
                "movl %esi, -(%ebp);jg  <IoReportHalResourceUsage+>;leal -(%ebx), %eax;pushl %eax;leal (%esi), %eax": 1,
                "leal (%ebx), %edi;movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl -(%ebp), %edi;movw (%edi), %ax": 1,
                "leal (%ebx), %eax;pushl %eax;leal (%ebx), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl %eax;pushl (%ebp);calll - <IoReportHalResourceUsage+>;leal (%ebx), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;pushl %esi;calll - <IoReportResourceUsage+>": 1,
                "movl %ecx, (%eax);xorl %eax, %eax;jmp  <IoReportHalResourceUsage+>;movl $, %eax;popl %esi": 1,
                "addb %dh, (%eax,%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %dh, (%ebx);popal": 1,
                "addb %ah, (%eax,%eax);addb %ah, (%ebp);addb %al, (%eax);incl %esi;addb %ch, (%ecx)": 1,
                "pushl $;calll - <IoReportHalResourceUsage+>;testb %al, %al;jne  <IoReportHalResourceUsage+>;movzbl -(%esi), %eax": 1,
                "calll - <IoReportResourceUsage+>;testl %eax, %eax;jl  <IoReportHalResourceUsage+>;xorl %edi, %edi;incl %edi": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %ebx;pushl %eax;pushl -(%ebp)": 3,
                "pushl -(%ebp);calll - <ZwSetValueKey>;jmp  <IoReportHalResourceUsage+>;cmpb %bl, -(%ebp);jne  <IoReportHalResourceUsage+>": 1,
                "testl %eax, %eax;jl  <IoReportHalResourceUsage+>;pushl $;movl %edi, -(%ebp);popl %edi": 1,
                "movl %edi, -(%ebp);popl %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%esi);movw $, -(%ebp);pushl %eax;pushl $;pushl %ebx": 2,
                "cmpl (%ebp), %eax;jb - <IoReportHalResourceUsage+>;xorl %esi, %esi;pushl -(%ebp);calll - <ZwClose>": 1,
                "movl %esi, %eax;movl -(%ebp), %ecx;popl %esi;popl %ebx;calll - <KeRaiseUserException+>": 2,
                "pushl $;pushl -(%ebp);movl %eax, %esi;calll - <ExFreePoolWithTag>;testl %esi, %esi": 1,
                "movl %eax, ;movl %edx, ;calll - <KeInitializeSemaphore>;retl;int": 1,
                "incl (%eax);jne  <IoReportHalResourceUsage+>;leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <IoReportHalResourceUsage+>": 1,
                "leal (%eax), %ecx;cmpl %ecx, (%ecx);je  <IoReportHalResourceUsage+>;movb $, %cl;movb $, (%eax)": 1,
                "je  <IoReportHalResourceUsage+>;movb $, %cl;movb $, (%eax);calll *;movl %edi, %eax": 1,
                "pushl $;pushl $;pushl $;calll - <RtlInitializeGenericTableAvl>;movl $, %eax": 1,
                "decl %edi;addb %dl, (%ebp);pushl %esp;addb %ah, (%eax);addb %cl, (%edi)": 1,
                "addb %ah, (%eax);addb %cl, (%edi);incl %esi;addb %ah, (%eax);addb %cl, (%ebp)": 1,
                "movl %esi, ;movl %esi, ;calll - <ExInitializeResourceLite>;cmpb $, ;movl $, ": 1,
                "calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax;movl %eax, ;jne  <IoReportHalResourceUsage+>;testb $, ": 1,
                "pushl $;calll - <IoReportResourceUsage+>;movl $, %eax;popl %esi;popl %ebx": 1,
                "jl  <IoReportHalResourceUsage+>;pushl %esi;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);pushl $;leal -(%ebp), %eax;pushl %eax": 3,
                "jne  <IoReportHalResourceUsage+>;movl $, %eax;jmp  <IoReportHalResourceUsage+>;cmpb $, (%ebp);je  <IoReportHalResourceUsage+>": 1,
                "pushl $;pushl %esi;calll - <IoReportHalResourceUsage+>;movl (%ebp), %eax;pushl $": 1,
                "andl $, (%ebx);movb %al, (%ebx);movl (%ebp), %eax;movzwl (%eax), %eax;movl %eax, (%ebx)": 1,
                "pushl %eax;movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl (%ebp), %eax;pushl %edi;movl (%ebp), %edi;pushl $;pushl %esi": 1,
                "pushl $;pushl -(%ebp);calll - <ZwWaitForSingleObject>;movl -(%ebp), %eax;cmpl %esi, %eax": 1,
                "leal (%edi,%eax,), %eax;movw (%eax), %cx;movw %si, (%eax);jmp  <IoReportHalResourceUsage+>;pushl (%ebp)": 1,
                "leal (%ebx), %eax;andw $, (%eax);leal (%ebx), %ecx;pushl %eax;movw %si, (%ebx)": 1,
                "popl %ecx;movb $, (%ebp);jne  <IoReportHalResourceUsage+>;movb $, (%ebp);testb $, (%ebp)": 1,
                "je  <IoReportHalResourceUsage+>;testb $, (%ebp);je  <IoReportHalResourceUsage+>;cmpb $, (%ebp);jne  <IoReportHalResourceUsage+>": 1,
                "cmpb $, (%ebp);jne  <IoReportHalResourceUsage+>;pushl (%ebp);leal -(%ebp), %eax;pushl (%edi)": 1,
                "pushl (%ebp);pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);leal -(%ebp), %ecx;movl %ecx, (%eax);movl %ecx, %eax": 1,
                "movl %eax, (%edx);movl $, (%edx);movl $, (%edx);movw $, (%edx);movw $, (%edx)": 2,
                "pushl -(%ebp);calll - <KeIFlatToGdtSelector+>;incb ;xorl %eax, %eax;movl %eax, ": 1,
                "movl %eax, ;cmpb $, -(%ebp);jne  <IoReportHalResourceUsage+>;pushl ;pushl $": 1,
                "orb %al, %al;je  <IoReportHalResourceUsage+>;pushl $;calll - <DbgBreakPointWithStatus>;nop": 1,
                "pushl %eax;pushl %fs:;pushl %edx;pushl %ebx;pushl $": 1,
                "movl %fs:, %ebx;movb $, (%ebx);sti;movl $, %ecx;calll *": 1,
                "pushl $;jmp - <KiDispatchInterrupt+>;nop;movl %cr, %eax;cmpb $, %fs:": 1,
                "js  <KeSetProfileIrql+>;addb %al, (%eax);outb %al, %dx;orb %al, (%eax);sarb $, (%ecx)": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %bl, (%esi);incl %esi;addb %al, (%eax)": 2,
                "addb %bl, (%esi);incl %esi;addb %al, (%eax);movw (%eax), %cs;addb %ch, (%eax)": 2,
                "movw (%eax), %cs;addb %bh, (%ebx,%ebx,);addb %al, (%eax);movw (%eax), %cs;addb %al, (%esi)": 1,
                "addb %dl, (%eax);movw (%eax), %cs;addb %bl, (%edx);movw (%eax), %cs;addb %ah, -(%ebx,%ebx,)": 1,
                "popl %ebx;incl %esi;addb %al, (%eax);movw (%eax), %cs;addb %cl, (%eax)": 1,
                "popl %esp;incl %esi;addb %al, (%eax);movw (%eax), %cs;addb %al, (%esp,%ebx,)": 1,
                "movw (%eax), %cs;addb %bl, (%eax);incl %esi;addb %al, (%eax);movw (%eax), %cs": 2,
                "movw (%eax), %cs;addb %ch, (%eax);movw (%eax), %cs;addb %dh, (%edx);movw (%eax), %cs": 2,
                "addb %ch, %dh;popl %esp;incl %esi;addb %al, (%eax);movw (%eax), %cs": 1,
                "incl %esi;addb %al, (%eax);movw (%eax), %cs;addb %dh, -(,%ebx,);orb %al, (%eax)": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %cl, (%eax);incl %esi;addb %al, (%eax)": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %bh, (%edx);incl %esi;addb %al, (%eax)": 2,
                "addb %ah, (%edx);movw (%eax), %cs;addb %ch, -(%ebp,%ebx,);orb %al, (%eax);movb $, %dh": 1,
                "popl %ebp;incl %esi;addb %al, (%eax);movw (%eax), %cs;addb %dl, %ah": 1,
                "movw (%eax), %cs;addb %bl, (%edx);popl %esi;incl %esi;addb %al, (%eax)": 1,
                "addb %dh, (%eax);movw (%eax), %cs;addb %bh, (%edx);movw (%eax), %cs;addb %al, %ah": 1,
                "movw (%eax), %cs;addb %cl, %dh;popl %esi;incl %esi;addb %al, (%eax)": 1,
                "movw (%eax), %cs;addb %dl, (%edi,%ebx,);incl %esi;addb %al, (%eax);movw (%eax), %cs": 1,
                "movw (%eax), %cs;addb %bh, (%edi,%ebx,);incl %esi;addb %al, (%eax);movw (%eax), %cs": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %ch, (%esi);incl %esi;addb %al, (%eax)": 1,
                "addb %cl, -(%edi,%ebx,);orb %al, (%eax);xchgl %esi, %eax;popl %edi;incl %esi": 1,
                "movw (%eax), %cs;addb %bh, %dl;popl %edi;incl %esi;addb %al, (%eax)": 1,
                "addb %dl, (%eax);movw (%eax), %cs;addb %bl, (%edx);movw (%eax), %cs;addb %ah, -(%eax)": 1,
                "pushal;incl %esi;addb %al, (%eax);movw (%eax), %cs;addb %dl, %dh": 1,
                "addb %ah, %al;pushal;incl %esi;addb %al, (%eax);movw (%eax), %cs": 1,
                "addb %bh, %dh;pushal;incl %esi;addb %al, (%eax);movw (%eax), %cs": 1,
                "addb %bh, -(%ecx);orb %al, (%eax);addb %al, (%eax);movw (%eax), %cs;addb %dl, %al": 1,
                "orb %al, (%eax);addb %al, (%eax);movw (%eax), %cs;addb %dl, %al;popal": 1,
                "incl %esi;addb %al, (%eax);movw (%eax), %cs;addb %dl, (%esi);bound (%esi), %eax": 1,
                "movw (%eax), %cs;addb %ch, (%edx);bound (%esi), %eax;addb %cl, (%esi);incl %esi": 1,
                "addb %bl, (%eax);movw (%eax), %cs;addb %ah, (%edx);movw (%eax), %cs;addb %ch, (%ecx)": 1,
                "addb %ch, (%ecx);movw (%eax), %cs;addb %dh, (%eax);movw (%eax), %cs;addb %dh, (%edi)": 1,
                "addb %cl, (%esi);incl %esi;addb %al, (%eax);movw (%eax), %cs;addb %bl, (%ecx)": 1,
                "addb %al, (%eax);movw (%eax), %cs;addb %cl, %ah;int;int": 1,
                "movl %eax, -(%ebp);jmp  <KeFindConfigurationNextEntry+>;andl $, -(%ebp);andl $, -(%ebp);pushl %ebx": 1,
                "pushl %edi;movl (%ebp), %edi;testl %edi, %edi;je  <KeFindConfigurationNextEntry+>;movl (%ebp), %ebx": 1,
                "cmpl -(%ebp), %eax;je  <KeFindConfigurationNextEntry+>;movl (%edi), %esi;jmp  <KeFindConfigurationNextEntry+>;movl (%ebx), %eax": 1,
                "je  <KeFindConfigurationNextEntry+>;movl (%edi), %esi;jmp  <KeFindConfigurationNextEntry+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "pushl %eax;calll - <KeFindConfigurationNextEntry>;testl %eax, %eax;jne  <KeFindConfigurationNextEntry+>;movl (%esi), %esi": 1,
                "jne - <KeFindConfigurationNextEntry+>;movl (%edi), %edi;testl %edi, %edi;jne - <KeFindConfigurationNextEntry+>;xorl %eax, %eax": 1,
                "testl %edi, %edi;jne - <KeFindConfigurationNextEntry+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "popl %ebx;leave;retl $;movl %edi, %eax;jmp - <KeFindConfigurationNextEntry+>": 1,
                "calll - <KeSetTargetProcessorDpc>;pushl $;pushl %ebx;calll - <KeSetImportanceDpc>;cmpl %edi, (%ebp)": 1,
                "jne  <KeFindConfigurationEntry+>;pushl %eax;calll - <KeInitializeSpinLock>;pushl $;calll - <KeInitializeSpinLock>": 1,
                "calll - <KeInitializeSpinLock>;popl %edi;popl %esi;popl %ebx;popl %ebp": 1,
                "xorl %esi, %esi;xorl %ecx, %ecx;incl %esi;xorl %eax, %eax;xorl %edx, %edx": 1,
                "xorl %edx, %edx;pushl %edi;movl %eax, %edi;shrl $, %edi;addl %edx, %edx": 1,
                "jne  <KeFindConfigurationEntry+>;xorl %eax, %eax;cmpl $-, %edx;jne  <KeFindConfigurationEntry+>;movl $, %edx": 1,
                "addl $, %eax;decl %ecx;jne - <KeFindConfigurationEntry+>;pushl %esi;movl $, %eax": 1,
                "calll - <KeInitializeSpinLock>;movl $, %eax;movl %eax, ;movl %eax, ;movl $, %eax": 3,
                "movl $, %eax;movl $, %ecx;movl %eax, (%eax);movl %eax, (%eax);addl $, %eax": 1,
                "leal (%esi), %edx;pushl $;leal (%esi), %edi;orl $-, %eax;movl $, %ecx": 1,
                "popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);popl %edi;movb $, (%edx)": 1,
                "andb %al, (%eax);incl %ebx;addb %ch, (%eax);addb %ah, %gs:(%ebx);imull $, (%eax), %eax": 2,
                "addb %ah, %gs:(%ebx);imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%edx)": 1,
                "pushl %esi;movl %ds:, %eax;movl $, %esi;addl $, %eax;movb (%eax), %dl": 1,
                "calll - <KeSetSystemAffinityThread>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "rep  movsl (%esi), %es:(%edi);movl $, %esi;pushl %esi;leal (%ebx), %edi;calll - <wcslen>": 1,
                "cmpl %ecx, %eax;movl %ecx, -(%ebp);ja  <KeFindConfigurationEntry+>;movl %eax, -(%ebp);pushl $": 1,
                "shrl $, %eax;shll $, %eax;movw %ax, (%ebx);movl %ecx, (%ebx);movl $, %eax": 1,
                "movl $, -(%ebp);incb -(%ebp);jmp - <KeFindConfigurationEntry+>;shll -(%ebp);testl %esi, %esi": 1,
                "addl %edi, %ecx;addl %edi, %esi;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;xorl %ecx, %ecx": 5,
                "jne  <KeFindConfigurationEntry+>;movl -(%ebp), %edx;movl %edx, %ecx;andl $, %ecx;movl $, %eax": 1,
                "movl $, %eax;cmpl %eax, %ecx;jb  <KeFindConfigurationEntry+>;jne  <KeFindConfigurationEntry+>;movl %edx, %eax": 1,
                "jb  <KeFindConfigurationEntry+>;movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>;andl $, %edx;cmpb $, %dl": 1,
                "pushl %eax;pushl %eax;pushl %edi;pushl $;calll - <ZwYieldExecution+>": 1,
                "cmpw $, (%ebx);jae  <KeFindConfigurationEntry+>;andb $-, -(%ebp);cmpl $, -(%ebp);jne  <KeFindConfigurationEntry+>": 1,
                "calll *%esi;testb $, -(%ebp);je  <KeFindConfigurationEntry+>;orl $, -(%ebp);testb $, -(%ebp)": 1,
                "cmpb $, (%ebx);jl  <KeFindConfigurationEntry+>;cmpw $, (%ebx);jb  <KeFindConfigurationEntry+>;movl $, %edi": 1,
                "movl $, %edi;popl %ebx;movl %edi, %ecx;calll - <ZwYieldExecution+>;andl -(%ebp), %edx": 1,
                "andl -(%ebp), %edx;orl $, %eax;pushl %edx;andl %ebx, %eax;pushl %eax": 1,
                "movb $, ;testl %eax, -(%ebp);je  <KeFindConfigurationEntry+>;orl $, -(%ebp);movl $, %ecx": 1,
                "testl %eax, -(%ebp);je  <KeFindConfigurationEntry+>;orl $, -(%ebp);movl $, %ecx;testl %ecx, -(%ebp)": 1,
                "testb $, -(%ebp);je  <KeFindConfigurationEntry+>;orl %edi, -(%ebp);testb $, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "testb $, -(%ebp);je  <KeFindConfigurationEntry+>;orl %eax, -(%ebp);movl -(%ebp), %edi;cmpl $, %edi": 1,
                "je  <KeFindConfigurationEntry+>;movb -(%ebp), %cl;cmpb $, %cl;leal (%ebx), %eax;movb %cl, (%eax)": 1,
                "pushl $;pushl %ecx;calll - <ZwYieldExecution+>;movl -(%ebp), %eax;testb $-, %ah": 1,
                "movl $, %esi;pushl %esi;calll - <ZwYieldExecution+>;movl -(%ebp), %eax;andl $, %eax": 1,
                "pushl %ecx;pushl $;pushl %eax;calll - <ZwYieldExecution+>;testb $, -(%ebp)": 1,
                "pushl $;pushl %eax;calll - <ZwYieldExecution+>;testb $, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "pushl %eax;calll - <ZwYieldExecution+>;testb $, -(%ebp);je  <KeFindConfigurationEntry+>;orb $, -(%ebp)": 1,
                "je  <KeFindConfigurationEntry+>;orb $, -(%ebp);movl %edi, %eax;decl %eax;decl %eax": 1,
                "decl %eax;decl %eax;jne  <KeFindConfigurationEntry+>;testl %esi, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "testl %esi, -(%ebp);je  <KeFindConfigurationEntry+>;orb $, -(%ebp);movl -(%ebp), %eax;popl %edi": 1,
                "movl -(%ebp), %eax;movl $, %esi;andl %esi, %eax;movl %eax, ;leal -(%ebp), %eax": 1,
                "pushl $;pushl %ebx;calll - <ZwYieldExecution+>;movl $, %eax;cmpl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, %eax;andl %esi, %eax;movl %eax, -(%ebp);movl %ecx, %eax": 1,
                "pushl %eax;pushl %esi;pushl %esi;calll - <ZwYieldExecution+>;cmpl $, -(%ebp)": 1,
                "pushl %esi;pushl %esi;calll - <ZwYieldExecution+>;cmpl $, -(%ebp);jb  <KeFindConfigurationEntry+>": 1,
                "shrl $, %eax;testb %cl, %cl;movl %eax, -(%ebp);je  <KeFindConfigurationEntry+>;cmpb $, %cl": 1,
                "cmpb $, %al;jne  <KeFindConfigurationEntry+>;movl $, %eax;cmpl %eax, -(%ebp);jae  <KeFindConfigurationEntry+>": 1,
                "jne  <KeFindConfigurationEntry+>;movl $, %eax;cmpl %eax, -(%ebp);jae  <KeFindConfigurationEntry+>;movl %eax, -(%ebp)": 1,
                "movl $, %ecx;jmp  <KeFindConfigurationEntry+>;movl $, %ecx;jmp  <KeFindConfigurationEntry+>;movl $, %ecx": 2,
                "pushl $;pushl $;leal -(%ebp), %eax;pushl %eax;calll  <KeFindConfigurationEntry+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <KeFindConfigurationEntry+>;testb %al, %al;je  <KeFindConfigurationEntry+>": 1,
                "calll - <ZwYieldExecution+>;leal -(%ebp), %eax;pushl %eax;calll  <KeFindConfigurationEntry+>;testb $, ": 1,
                "pushl %eax;calll  <KeFindConfigurationEntry+>;testb $, ;je  <KeFindConfigurationEntry+>;movsbl , %eax": 1,
                "testb $, ;je  <KeFindConfigurationEntry+>;movsbl , %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 2,
                "je  <KeFindConfigurationEntry+>;movsbl , %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 3,
                "pushl $;calll *;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;cmpb %bl, -(%ebp)": 1,
                "movl %cr, %eax;movl %eax, %ecx;andl $-, %eax;movl %eax, %cr;fninit": 1,
                "movl %eax, %cr;fninit;fldl ;fstpl -(%ebp);fldl ": 1,
                "movl , %esi;movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>;testl %esi, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "testl %esi, -(%ebp);je  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;pushl -(%ebp);notl %eax": 1,
                "calll *;movl %eax, (%esi);movl %edx, (%esi);calll - <ZwYieldExecution+>;movl (%esi), %ecx": 1,
                "adcl %ebx, %eax;movl %eax, -(%ebp);calll - <_allmul>;pushl %edx;pushl %eax": 1,
                "pushl %eax;pushl %edi;calll - <_alldiv>;xorl %ebx, %ebx;cmpl %ebx, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);movl %eax, (%esi);je  <KeFindConfigurationEntry+>;movl -(%esi), %ecx;cmpl %ecx, %eax": 1,
                "jne - <KeFindConfigurationEntry+>;pushl $;xorl %edx, %edx;popl %ecx;divl %ecx": 1,
                "movl %eax, -(%esi);movl %ds:, %eax;movzwl -(%esi), %ecx;movl -(%ebp), %esi;movl %ecx, (%eax)": 1,
                "calll - <KeBugCheckEx>;int;decl %esi;decl %edi;incl %ebp": 1,
                "decl %esi;decl %edi;incl %ebp;popl %eax;incl %ebp": 3,
                "pushl %ebp;pushl %esp;incl %ebp;cmpl $, %eax;pushl %ebp": 1,
                "decl %edi;incl %esi;incl %esi;addb %cl, (%esi);incl %ebp": 1,
                "jne  <KeFindConfigurationEntry+>;pushl $;movl , %eax;pushl (%eax);calll - <strstr>": 1,
                "pushl %esi;pushl %eax;pushl %edi;calll - <ZwYieldExecution+>;movl $, ": 1,
                "pushl %edi;calll - <ZwYieldExecution+>;movl $, ;movl $, ;movl %esi, ": 1,
                "calll - <ZwYieldExecution+>;movl $, ;movl $, ;movl %esi, ;movl $, ": 1,
                "cmpb $, (%ebp);jne  <KeFindConfigurationEntry+>;movl $, %eax;movl %eax, ;movl %eax, (%ebx)": 1,
                "movsl (%esi), %es:(%edi);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);movsbl (%ebx), %eax": 1,
                "pushl $;calll - <KeInitializeSpinLock>;calll - <KeFindConfigurationEntry+>;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $-;pushl %esi": 1,
                "pushl %esi;pushl (%ebp);movl (%ebp), %esi;pushl %esi;calll - <KeFindConfigurationEntry+>": 1,
                "movl %eax, ;testl %eax, %eax;jne  <KeFindConfigurationEntry+>;pushl %eax;pushl %eax": 1,
                "jne  <KeFindConfigurationEntry+>;pushl %eax;pushl %eax;pushl %edi;pushl $": 1,
                "incl %eax;movb (%ebp), %cl;shll %cl, %eax;orl %eax, ;movb $, %cl": 1,
                "int;int;popl %esp;addb %dl, (%edx);incl %ebp": 1,
                "movl , %eax;pushl %ebx;pushl %esi;xorl %ebx, %ebx;incl %ebx": 1,
                "movl %esi, -(%ebp);calll - <ZwOpenKey>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;pushl $": 1,
                "testl %eax, %eax;jl  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 12,
                "int;int;int;movb $, %fs:;pushl %edi": 1,
                "movl %cr, %eax;pushl %eax;pushfl;popl %ebx;pushl %ebx": 1,
                "cpuid;cmpl $, %ebx;jne  <KeFindConfigurationEntry+>;cmpl $, %ecx;jne  <KeFindConfigurationEntry+>": 1,
                "jae  <KeFindConfigurationEntry+>;movw $, %ax;retl;calll  <KeFindConfigurationEntry+>;orw %ax, %ax": 1,
                "movl %fs:, %ebx;pushl (%ebx);pushl (%ebx);movl $, %eax;movw %ax, (%ebx)": 3,
                "shrl $, %eax;movw %ax, (%ebx);movl %dr, %eax;nop;nop": 1,
                "movl $, (%esp);iretl;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "orw $, -(%ebp);fldcw -(%ebp);fldl -(%ebp);fldt -(%ebp);fscale": 1,
                "clc;jmp  <KeFindConfigurationEntry+>;stc;movl %ebp, %esp;popl %ebp": 1,
                "movw %ax, (%ebx);subl $, %esp;movl $, %esi;movl %esp, %edi;movl $, %ecx": 1,
                "addl $, %esp;popl (%ebx);popl (%ebx);stc;jecxz  <KeFindConfigurationEntry+>": 1,
                "stc;jne  <KeFindConfigurationEntry+>;clc;retl;pushl %ebp": 1,
                "xorl %edx, %edx;fninit;movl $, %ecx;pushl %ecx;movl %esp, %ebp": 1,
                "int;incl %edi;outsb %gs:(%esi), %dx;jne  <KeFindConfigurationEntry+>;outsb (%esi), %dx": 1,
                "cmpb $, (%eax);movl $, %ebx;jne  <KeFindConfigurationEntry+>;pushl $;calll - <KeInitializeSpinLock>": 1,
                "pushl $;calll - <KeInitializeSpinLock>;movl %ebx, %ecx;calll - <ZwYieldExecution+>;movl $, %ecx": 1,
                "calll - <KeInitializeSpinLock>;movl %ebx, %ecx;calll - <ZwYieldExecution+>;movl $, %ecx;movl %eax, ": 1,
                "movl %edx, ;movb $, ;je  <KeFindConfigurationEntry+>;movb , %al;testb %al, %al": 1,
                "movl %edi, ;je  <KeFindConfigurationEntry+>;movzbl , %eax;leal (%eax,%eax,), %ecx;shll $, %ecx": 1,
                "cmpw $, %cx;je  <KeFindConfigurationEntry+>;cmpw $, %cx;jne  <KeFindConfigurationEntry+>;leal (%eax), %esi": 1,
                "cmpl , %esi;jne  <KeFindConfigurationEntry+>;cmpl , %edi;je  <KeFindConfigurationEntry+>;movb $, -(%ebp)": 1,
                "movl -(%ebp), %edi;leal -(%edi), %ecx;calll - <ZwYieldExecution+>;movl %eax, %esi;movl %edi, %ecx": 1,
                "movl %esi, -(%ebp);movl %edx, %ebx;calll - <ZwYieldExecution+>;movl $, %ecx;movl %eax, %edi": 1,
                "jne  <KeFindConfigurationEntry+>;cmpl $, %eax;jne  <KeFindConfigurationEntry+>;movb %al, ;addl $, -(%ebp)": 1,
                "shldl $, %ecx, %edx;pushl %ebx;movl (%esi), %ebx;shll $, %ecx;andl $, %edi": 1,
                "orl $, (%esi);movl %edx, %ecx;movl %edx, (%esi);movl %ecx, (%esi);popl %ebx": 1,
                "pushl %esi;calll - <KeFindConfigurationEntry+>;testb %al, %al;je  <KeFindConfigurationEntry+>;movl (%ebp), %ecx": 1,
                "xorl (%esi), %eax;andl $, %edx;xorl %edx, (%esi);andl $, %eax;xorl %eax, (%esi)": 1,
                "pushl %esi;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "cmpl -(%ebp), %eax;jne  <KeFindConfigurationEntry+>;cmpl -(%ebp), %edx;je - <KeFindConfigurationEntry+>;movl (%ebp), %esi": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;cmpl %ebx, (%esi);jbe  <KeFindConfigurationEntry+>": 1,
                "jbe  <KeFindConfigurationEntry+>;pushl %edi;leal (%esi), %edi;pushl (%edi);calll - <MmFreeContiguousMemory>": 1,
                "je  <KeFindConfigurationEntry+>;pushl %edi;calll - <KeFindConfigurationEntry+>;movl %eax, %esi;movl $, (%ebp)": 1,
                "movl %eax, (%ebx);movl %edx, -(%ebp);movb $, %al;popl %edi;popl %esi": 1,
                "movl $, -(%ebp);movb $, -(%ebp);calll - <ObCreateObjectType>;pushl $;leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movb %bl, -(%ebp);calll - <ObCreateObjectType>;pushl $;calll  <KeFindConfigurationEntry+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl $;pushl $;pushl %eax": 1,
                "pushl $;pushl %eax;movl %eax, ;xorl %eax, %eax;pushl %eax": 1,
                "int;movl , %eax;movl $, %ecx;cmpl %ecx, %eax;jbe  <KeFindConfigurationEntry+>": 1,
                "cmpl %ecx, %eax;je  <KeFindConfigurationEntry+>;movl %ecx, %edx;andl %eax, %edx;cmpl %ecx, %edx": 1,
                "movl %ecx, %edx;andl %eax, %edx;cmpl %ecx, %edx;je  <KeFindConfigurationEntry+>;shrl %ecx": 1,
                "calll - <ExAllocatePoolWithTagPriority>;movl %eax, ;retl;outsb (%esi), %dx;addb %dh, (%eax,%eax)": 1,
                "insb %dx, %es:(%edi);addb %ch, (%esi);addb %ah, (%ebp);js  <KeFindConfigurationEntry+>;addb %al, %gs:(%eax)": 4,
                "addb %ah, (%ebp);js  <KeFindConfigurationEntry+>;addb %al, %gs:(%eax);addb %cl, %ah;int": 1,
                "movl , %eax;orl $-, %esi;incl %ebx;cmpl %esi, %eax;pushl %edi": 1,
                "cmpw $, %ax;je  <KeFindConfigurationEntry+>;testw %ax, %ax;je  <KeFindConfigurationEntry+>;incl %esi": 1,
                "pushl $;pushl %ebx;movl %ebx, -(%ebp);calll - <RtlImageDirectoryEntryToData>;testl %eax, %eax": 1,
                "sbbl %eax, %eax;sbbl $-, %eax;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;leal -(%ecx), %edi": 1,
                "sbbl $-, %eax;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;leal -(%ecx), %edi;jmp  <KeFindConfigurationEntry+>": 1,
                "cmpl $, -(%ebp);je  <KeFindConfigurationEntry+>;movl (%esi), %esi;cmpl (%ebp), %esi;movl %esi, -(%ebp)": 1,
                "jne - <KeFindConfigurationEntry+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl $;pushl (%eax);calll - <RtlImageDirectoryEntryToData>;testl %eax, %eax;movl %eax, (%ebp)": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;xorl %edi, %edi;testl %edx, %edx;leal (%ecx), %ebx": 1,
                "movl %edx, (%esi,%eax);movl $, -(%ebp);cmpl $, -(%ebp);je  <KeFindConfigurationEntry+>;movl (%ecx), %ecx": 1,
                "cmpl %ebx, ;je  <KeFindConfigurationEntry+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl %edi, (%ecx);movl (%edx), %ecx;movl %ecx, (%eax);incl %ebx;addl $, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlEqualUnicodeString>;testb %al, %al;jne  <KeFindConfigurationEntry+>": 6,
                "cmpl %ebx, %esi;jne - <KeFindConfigurationEntry+>;popl %edi;popl %esi;popl %ebx": 1,
                "popl %ebx;leave;retl $;int;outsb (%esi), %dx": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;movl , %ecx": 1,
                "incl %ecx;incl %ecx;cmpl %edx, %ecx;movl %ecx, -(%ebp);jb - <KeFindConfigurationEntry+>": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %edi;movl -(%ebp), %edx;addl $, %edi;jmp  <KeFindConfigurationEntry+>": 1,
                "incl %edi;incl %edi;cmpl %edx, %edi;jb - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>": 1,
                "incl %edi;cmpl %edx, %edi;jb - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;movl $, ": 1,
                "calll - <ExAcquireSharedWaitForExclusive+>;pushl ;calll - <INIT+>;movl (%ebp), %ebx;pushl %ebx": 1,
                "calll - <MmIsVerifierEnabled+>;incl (%ebp);movl (%esi), %esi;cmpl %ebx, %esi;jne - <KeFindConfigurationEntry+>": 1,
                "int;xorl %eax, %eax;cmpl %eax, ;je  <KeFindConfigurationEntry+>;pushl $": 1,
                "cmpl %eax, ;je  <KeFindConfigurationEntry+>;pushl $;movl %eax, ;movl %eax, ": 1,
                "sbbl %edi, %edi;shrl $, %eax;negl %edi;addl %eax, %edi;calll *": 1,
                "orl (%ebx), %eax;orl %edi, %ecx;orl (%ebx), %ecx;movl %edx, %edi;orl , %edi": 1,
                "movl %edx, %edi;orl , %edi;je  <KeFindConfigurationEntry+>;cmpl $, %esi;jb  <KeFindConfigurationEntry+>": 1,
                "jb  <KeFindConfigurationEntry+>;cmpl $, %esi;jae  <KeFindConfigurationEntry+>;movl , %edi;notl %edx": 1,
                "jae  <KeFindConfigurationEntry+>;movl , %edi;notl %edx;notl %edi;andl %edx, %eax": 1,
                "andl %edx, %eax;andl %edi, %ecx;movl %eax, %edx;xorl -(%ebp), %edx;xorl $, %ecx": 1,
                "popl %ebx;popl %esi;leave;retl $;pushl %ebx": 1,
                "calll - <RtlInitUnicodeString>;movl $, -(%ebp);movl $, -(%ebp);movl %ebx, %esi;leal -(%ebp), %edi": 1,
                "movb $, -(%ebp);calll - <ObCreateObjectType>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;xorl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;xorl %edi, %edi;leal -(%ebp), %eax": 1,
                "xorl %edi, %edi;leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <RtlInitUnicodeString>;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlInitUnicodeString>;movl , %esi;cmpl $, %esi": 1,
                "pushl $;pushl (%esi);calll - <RtlImageDirectoryEntryToData>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "movl (%eax), %esi;movl (%eax), %ecx;addl %esi, %ecx;cmpl %esi, %edi;jb  <KeFindConfigurationEntry+>": 1,
                "cmpl %esi, %ecx;jne  <KeFindConfigurationEntry+>;movl -(%ebp), %ecx;movl %edx, %eax;orl %esi, %eax": 1,
                "cmpl -(%ebp), %esi;jb - <KeFindConfigurationEntry+>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jne - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>": 1,
                "movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>;movl %esi, -(%ebp);xorl %ebx, %ebx;pushl %ebx": 1,
                "movl $, %eax;jmp  <KeFindConfigurationEntry+>;xorl %eax, %eax;jmp  <KeFindConfigurationEntry+>;movl $, %eax": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "jne  <KeFindConfigurationEntry+>;andl %ecx, -(%ebp);jmp  <KeFindConfigurationEntry+>;movl (%eax), %eax;addl %ecx, %eax": 1,
                "movl %eax, -(%ebp);jne  <KeFindConfigurationEntry+>;calll *;xorl %edx, %edx;xorl %ecx, %ecx": 1,
                "movl %ecx, %edx;orl , %edx;je  <KeFindConfigurationEntry+>;cmpl $, %esi;jb  <KeFindConfigurationEntry+>": 2,
                "jb  <KeFindConfigurationEntry+>;cmpl $, %esi;jae  <KeFindConfigurationEntry+>;movl , %edx;notl %ecx": 2,
                "orl $, %eax;movl %ecx, (%esi);movl %eax, (%esi);addl $, -(%ebp);addl $, %esi": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;orl $, (%eax);calll - <MmTrimAllSystemPagableMemory+>;addl $, %esi": 1,
                "subl %eax, %esi;pushl $;pushl %edi;pushl %esi;calll - <MISYSPTE+>": 1,
                "calll - <KeFindConfigurationEntry+>;movl -(%ebp), %eax;orb $, (%ebx);movl -(%ebp), %ecx;movl %eax, (%ebx)": 1,
                "movl %ecx, (%eax);movl , %ecx;movl %ecx, (%eax);movl %esi, %eax;shrl $, %eax": 1,
                "je  <KeFindConfigurationEntry+>;cmpl $, %eax;jne  <KeFindConfigurationEntry+>;cmpl $, (%ecx);jne  <KeFindConfigurationEntry+>": 1,
                "addl %esi, %eax;movl %eax, ;jmp  <KeFindConfigurationEntry+>;cmpl $, %eax;jne  <KeFindConfigurationEntry+>": 1,
                "movl (%ecx), %ecx;addl %edi, %ecx;leal (%ecx,%esi), %ecx;shrl $, %ecx;andl %edx, %ecx": 1,
                "calll - <KeInitializeSpinLock>;movl (%ebp), %edi;movl $, %eax;movl %eax, ;movl %eax, ": 1,
                "jne  <KeFindConfigurationEntry+>;calll - <KeFindConfigurationEntry+>;xorl %eax, %eax;incl %eax;popl %edi": 1,
                "rep  movsl (%esi), %es:(%edi);movl -(%ebp), %esi;xorl %edi, %edi;movl %edi, (%ebx);movl %edi, (%ebx)": 1,
                "calll - <ExFreePoolWithTag>;xorl %eax, %eax;jmp - <KeFindConfigurationEntry+>;int;int": 1,
                "shll $, %edx;addl $, %edi;movl %eax, -(%ebp);movl (%edi), %eax;movl %edx, -(%ebp)": 1,
                "jbe  <KeFindConfigurationEntry+>;subl -(%ebp), %ecx;movl %ecx, %edx;movl %edx, -(%ebp);addl %edx, -(%ebp)": 1,
                "movl %edx, %ecx;movl %ecx, -(%ebp);movl %ecx, (%esi);movl %ebx, (%esi);addl $, %esi": 1,
                "movl %ecx, (%esi);movl %ebx, (%esi);addl $, %esi;incl (%ebp);decl -(%ebp)": 1,
                "incl %edi;cmpl %ecx, %eax;jne - <KeFindConfigurationEntry+>;movl %edi, -(%ebp);pushl $": 1,
                "addl $, %esi;movl (%esi), %eax;orl $-, %ecx;cmpl %esi, %eax;movl %esi, -(%ebp)": 1,
                "movl %esi, (%edx);addl $, %edx;movl (%eax), %eax;cmpl -(%ebp), %eax;jne - <KeFindConfigurationEntry+>": 1,
                "calll - <ExFreePoolWithTag>;movl (%ebp), %ebx;movl (%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "jbe  <KeFindConfigurationEntry+>;subl %ecx, %edx;movl %edx, (%eax);movl (%eax), %ecx;movl -(%ebp), %edx": 1,
                "shll $, %eax;movl %edi, %ecx;movl %eax, (%esi);calll - <MmTrimAllSystemPagableMemory+>;jmp  <KeFindConfigurationEntry+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;jmp  <KeFindConfigurationEntry+>;testl %edi, %edi;je  <KeFindConfigurationEntry+>;movl (%esi), %ecx": 1,
                "movl %edx, (%eax);addl $, %eax;decl %ecx;jne - <KeFindConfigurationEntry+>;pushl $": 1,
                "xorl %ebx, %ebx;orl %eax, %ecx;orl %ebx, %edx;pushl %edx;orl $, %ecx": 1,
                "pushl $;pushl $;pushl (%ebp);calll - <ZwYieldExecution+>;movl %edi, %ecx": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>;pushl %esi;pushl %edi": 1,
                "cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>;pushl %esi;pushl %edi;pushl ": 1,
                "pushl %edi;pushl %esi;calll - <RtlCreateAcl>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "pushl %esi;calll - <RtlAddAccessAllowedAce>;cmpl %ebx, %eax;movl %eax, -(%ebp);jl - <KeFindConfigurationEntry+>": 1,
                "movl (%ecx), %eax;movl (%ecx), %esi;shrdl $, %esi, %eax;andl $, %eax;movl %eax, (%edx)": 1,
                "addl $, %ecx;cmpl $, %edx;movl %edi, (%eax,%esi);jb - <KeFindConfigurationEntry+>;pushl %edi": 1,
                "cmpl %edx, %eax;jbe  <KeFindConfigurationEntry+>;movl %edx, %eax;movl %eax, %edx;andl $, %edx": 1,
                "sbbl %edx, %edx;shrl $, %eax;negl %edx;addl %eax, %edx;movl $, %eax": 1,
                "movl $, %eax;subl %ecx, %eax;shrl $, %eax;cmpl %eax, %edx;jbe  <KeFindConfigurationEntry+>": 1,
                "movl %eax, %edx;addl $, %edx;shrl $, %edx;movl %edx, %esi;shll $, %esi": 1,
                "xorl %edx, %edx;movl %edi, %eax;popl %ebx;divl %ebx;shll $, %eax": 1,
                "movl %esi, ;jmp  <KeFindConfigurationEntry+>;andl $-, ;movl %esi, %eax;shrl $, %eax": 1,
                "movl %ecx, ;shrl $, %ecx;movl %edi, -(%ebp);movl , %edi;movl $, %ebx": 1,
                "shrl $, %eax;movl $, %edx;shrl $, %esi;andl %edx, %eax;andl %edx, %esi": 1,
                "subl %esi, %eax;subl $, %eax;pushl $;shrl $, %ecx;sarl $, %eax": 1,
                "subl %edi, %ecx;pushl %esi;movl %ecx, ;calll - <RtlFillMemory+>;calll *": 1,
                "movl %eax, %ecx;andl $, %edx;xorl %eax, %eax;shldl $, %ecx, %eax;movl %edx, -(%ebp)": 1,
                "andl $, %edx;xorl %eax, %eax;shldl $, %ecx, %eax;movl %edx, -(%ebp);movl -(%ebp), %edx": 1,
                "pushl %eax;calll - <RtlClearAllBits>;cmpl $-, ;je  <KeFindConfigurationEntry+>;pushl %esi": 1,
                "shrl $, %ecx;subl %edi, %eax;shrl $, %edx;andl %ebx, %ecx;movl %eax, -(%ebp)": 1,
                "ja  <KeFindConfigurationEntry+>;addl $, %esi;movl %esi, -(%ebp);movl , %ecx;andl , %ecx": 1,
                "shll $, %eax;andl $-, %esi;orl %edx, %eax;movl -(%ebp), %edx;orl %esi, %ecx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movl , %ebx;movl -(%ebp), %edi;movl %esi, ": 1,
                "movl %esi, ;movl , %esi;orl $-, %edx;subl %ecx, %edx;leal (%eax,%ecx), %eax": 1,
                "pushl $;calll - <MmGetSystemRoutineAddress+>;popl %edi;popl %esi;popl %ebx": 1,
                "pushl $;pushl $;movl %edi, -(%ebp);calll - <ExAcquireResourceExclusiveLite>;movl , %ebx": 1,
                "movl , %ebx;cmpl $, %ebx;movl %ebx, -(%ebp);je  <KeFindConfigurationEntry+>;pushl %esi": 1,
                "jle  <KeFindConfigurationEntry+>;movl (%esi), %eax;cmpl $, %eax;je  <KeFindConfigurationEntry+>;testb $, (%esi)": 1,
                "testb $, (%esi);jne  <KeFindConfigurationEntry+>;cmpl $, %eax;jne  <KeFindConfigurationEntry+>;cmpb $, (%esi)": 1,
                "cmpb $, (%esi);jne  <KeFindConfigurationEntry+>;cmpl $-, ;jmp  <KeFindConfigurationEntry+>;cmpl $, (%esi)": 1,
                "jg - <KeFindConfigurationEntry+>;movl (%ebx), %ebx;cmpl $, %ebx;movl %ebx, -(%ebp);jne - <KeFindConfigurationEntry+>": 1,
                "movl %edi, -(%ebp);calll - <ExAcquireResourceExclusiveLite>;movl , %ecx;cmpl $, %ecx;movl %ecx, -(%ebp)": 1,
                "andl %edx, %eax;xorl %edi, %edi;cmpl %edx, %eax;jne  <KeFindConfigurationEntry+>;testl %edi, %edi": 1,
                "jne  <KeFindConfigurationEntry+>;movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>;andl $, -(%ebp);cmpl %ecx, (%edi)": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl (%edi), %ecx;cmpl %ecx, %eax;jae  <KeFindConfigurationEntry+>": 1,
                "movl (%edi), %eax;movl (%edi), %ecx;cmpl %ecx, %eax;jae  <KeFindConfigurationEntry+>;movl %ecx, %eax": 1,
                "movl %ecx, %eax;movl -(%ebp), %ecx;movl (%ecx), %ecx;addl (%edi), %ecx;addl %eax, %ecx": 1,
                "cmpl %edx, -(%ebp);je  <KeFindConfigurationEntry+>;movb $, %cl;calll *;pushl $": 2,
                "jae  <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;movl -(%ebp), %ecx;calll - <MmIsNonPagedSystemAddressValid+>;testl %eax, %eax": 2,
                "testl %eax, %eax;jne  <KeFindConfigurationEntry+>;addl $, -(%ebp);cmpl %edi, -(%ebp);jb - <KeFindConfigurationEntry+>": 2,
                "jns  <KeFindConfigurationEntry+>;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx;addb %ah, (%eax,%eax)": 2,
                "jae  <KeFindConfigurationEntry+>;popl %esp;addb %cl, (%eax);imull $, (%eax), %eax;decl %ebp": 1,
                "addb %ch, (%edi);outsb (%esi), %dx;addb %al, (%eax);addb %cl, %ah;int": 1,
                "subl $, %esp;movl , %eax;testl %eax, %eax;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movl , %ecx;cmpl $, %ecx;movl %edx, %eax;movl %eax, ;jbe  <KeFindConfigurationEntry+>": 1,
                "shrl $, %eax;addl %edx, %eax;movl %eax, ;movl $, %ecx;cmpl %ecx, %eax": 1,
                "movl $, ;movl $, ;movl $, ;movl $, ;movl (%edi), %eax": 1,
                "movl $, %eax;incl %esi;subl %edx, %eax;andl $-, %esi;shrl $, %eax": 1,
                "andl $-, %ecx;shrl $, %edi;cmpl %edi, %ecx;ja  <KeFindConfigurationEntry+>;cmpl %ebx, %ecx": 1,
                "leal -(%eax,%ecx), %eax;movl %eax, ;movl $, %edi;subl %ecx, %edi;movl %ecx, ": 1,
                "movl %eax, ;movl $, %edi;subl %ecx, %edi;movl %ecx, ;movl , %ecx": 1,
                "cmpl $, ;je  <KeFindConfigurationEntry+>;movl $, %esi;subl %eax, %esi;subl %edx, %esi": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, %ecx;jmp  <KeFindConfigurationEntry+>;movl $, %esi;subl %eax, %esi": 1,
                "movl $, ;movl $, ;movl $, ;movl $, %eax;subl , %eax": 1,
                "movl , %eax;leal -(%eax,%ecx), %eax;movl %eax, ;cmpl $, %esi;jbe  <KeFindConfigurationEntry+>": 1,
                "jae  <KeFindConfigurationEntry+>;addl $, %esi;shll $, %esi;cmpl %ecx, %esi;movl %esi, -(%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, %esi;movl %esi, -(%ebp);movl , %eax;addl %esi, ": 1,
                "movl $, %esi;cmpl %esi, -(%ebp);movl %eax, ;je  <KeFindConfigurationEntry+>;movl , %edi": 1,
                "movl %eax, ;movl , %eax;andl $, %edi;subl %esi, %edi;shrl $, %eax": 1,
                "movl , %eax;andl $, %edi;subl %esi, %edi;shrl $, %eax;movl %edx, %esi": 1,
                "movl %eax, ;movl %esi, ;movl %esi, ;movl %ecx, ;movl %ecx, ": 1,
                "shrl $, %ecx;shrl $, %eax;shrl $, %esi;subl %esi, ;andl $, %ecx": 1,
                "pushl $;movb $, ;movl %ebx, ;movb %bl, ;movb $, ": 1,
                "movb $, ;movl %ebx, ;movl %eax, ;movl %eax, ;calll - <KeInitializeDpc>": 1,
                "movl %ebx, ;movl %ebx, ;movl %ebx, ;movl %ebx, ;movl %ebx, ": 2,
                "popl %ecx;popl %ecx;je  <KeFindConfigurationEntry+>;orl $-, ;orl $-, ": 1,
                "jne  <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;cmpl $-, %eax;jne  <KeFindConfigurationEntry+>;orl %eax, ": 1,
                "jne  <KeFindConfigurationEntry+>;orl %eax, ;movl $, %eax;jmp  <KeFindConfigurationEntry+>;movl $, %ecx": 1,
                "movl %ecx, %eax;cmpl %ebx, ;jne  <KeFindConfigurationEntry+>;movl $, ;cmpl %ebx, ": 1,
                "movl , %ecx;cmpl %ebx, %ecx;je  <KeFindConfigurationEntry+>;cmpl $-, %ecx;je  <KeFindConfigurationEntry+>": 1,
                "pushl -(%ebp);calll - <KeFindConfigurationEntry+>;movl $, %eax;movl %eax, ;movl %eax, ": 1,
                "movl $, %eax;movl %eax, ;movl %eax, ;movl , %eax;cmpl %ebx, %eax": 1,
                "jmp  <KeFindConfigurationEntry+>;shll $, %eax;addl $, %eax;andl $, %eax;cmpl %edi, %eax": 1,
                "movl %eax, ;calll  <KeFindConfigurationEntry+>;calll - <KeRaiseUserException+>;cmpl %ebx, ;je  <KeFindConfigurationEntry+>": 1,
                "movl , %eax;addl $, %eax;movl %eax, ;movl , %eax;addl $, %eax": 1,
                "pushl %ebx;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;jne  <KeFindConfigurationEntry+>;pushl $": 1,
                "pushl %edi;calll - <RtlClearAllBits>;movl , %eax;cmpl %ebx, (%eax);movl %ebx, -(%ebp)": 1,
                "pushl %edx;pushl (%ecx);pushl %edi;calll - <RtlSetBits>;movl , %eax": 1,
                "je  <KeFindConfigurationEntry+>;movl , %eax;addl $, %eax;shrl $, %eax;movl $, %edi": 1,
                "pushl %eax;pushl %ebx;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, ": 3,
                "incl %ecx;pushl %ecx;leal (%eax), %ecx;pushl %ecx;pushl %eax": 2,
                "pushl %eax;calll - <RtlInitializeBitMap>;cmpl %ebx, ;jne  <KeFindConfigurationEntry+>;pushl %ebx": 2,
                "movl , %ecx;cmpl $, %ecx;ja  <KeFindConfigurationEntry+>;pushl $;popl %edi": 1,
                "popl %edi;movl $, %eax;addl %eax, ;movl %ebx, ;movl %edi, ": 1,
                "movl %esi, ;movl $, ;movl $, ;movl $, ;movl $, ": 1,
                "addl $, ;addl $, ;addl $, ;movl $, ;movl $, ": 1,
                "jge  <KeFindConfigurationEntry+>;cmpl %eax, ;jge  <KeFindConfigurationEntry+>;movl %eax, ;leal -(%ebp), %eax": 1,
                "cmpl %ebx, %eax;movl %ebx, ;movl %ebx, ;jbe  <KeFindConfigurationEntry+>;movl %eax, -(%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;xorl %ecx, %ecx;cmpl $, %eax;setne %cl;addl %edi, %ecx": 1,
                "subl , %eax;subl $, %eax;movl %eax, ;movl %eax, ;js  <KeFindConfigurationEntry+>": 1,
                "js  <KeFindConfigurationEntry+>;pushl $;calll - <KeInitializeSpinLock>;movl $, %eax;pushl $": 1,
                "movl %ebx, ;movl %eax, ;movl %eax, ;calll - <ExInitializeResourceLite>;pushl $": 2,
                "cmpl %edx, %ecx;movl %ecx, ;jbe  <KeFindConfigurationEntry+>;movl %edx, %ecx;movl %ecx, ": 1,
                "movl %ecx, ;jbe  <KeFindConfigurationEntry+>;movl %edx, %ecx;movl %ecx, ;jmp  <KeFindConfigurationEntry+>": 1,
                "movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);calll *;movb %al, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);calll *;movb %al, -(%ebp);jmp  <KeFindConfigurationEntry+>": 1,
                "movl %ecx, -(%ebp);movl %ecx, (%edi);pushl %esi;pushl %edi;pushl -(%ebp)": 2,
                "addl $, %edi;movl %edi, -(%ebp);cmpl -(%ebp), %edi;jbe - <KeFindConfigurationEntry+>;movb -(%ebp), %cl": 1,
                "movl , %ecx;leal (%eax), %edx;cmpl %edx, %ecx;jbe  <KeFindConfigurationEntry+>;leal -(%ecx), %eax": 1,
                "movl %ecx, %eax;movl %eax, ;jbe  <KeFindConfigurationEntry+>;addl $, %ecx;movl %ecx, ": 1,
                "movl %eax, %ecx;movl %ebx, ;movl %esi, ;movl %ebx, ;movl %ebx, ": 1,
                "movl %eax, (%edi);calll - <MmIsAddressValid+>;addl $, %edi;addl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "andl %esi, %eax;orl %ebx, %eax;je - <KeFindConfigurationEntry+>;movb -(%ebp), %cl;calll *": 1,
                "orl %ebx, %eax;je - <KeFindConfigurationEntry+>;movb -(%ebp), %cl;calll *;movl -(%ebp), %esi": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;movl %ebx, ;jmp  <KeFindConfigurationEntry+>;cmpl $, (%ebp);jne  <KeFindConfigurationEntry+>": 1,
                "calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "imull $, %esi, %esi;xorl %edi, %edi;shldl $, %edx, %edi;shll $, %edx;orl %edx, %eax": 1,
                "movl %ebx, ;movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movb $, ;movl $, ;movl %eax, ;movl %eax, ;popl %ebp": 1,
                "shldl $, %ebx, %ecx;andl $-, %edx;orl %edx, %ecx;shll $, %ebx;andl $, %esi": 1,
                "andl $-, %edx;orl %edx, %ecx;shll $, %ebx;andl $, %esi;orl %esi, %ebx": 1,
                "orl %edx, %ecx;shll $, %ebx;andl $, %esi;orl %esi, %ebx;movl %ecx, -(%ebp)": 1,
                "movb -(%ebp), %cl;calll *;movl , %eax;movl %eax, ;leal (%eax), %ecx": 1,
                "movl %eax, ;movl , %eax;movl %eax, ;movl %ecx, ;movl $, ": 1,
                "movl %ecx, ;movl $, ;xorl %edx, %edx;movl %edx, ;movl $, %ecx": 1,
                "movb $, ;movl %esi, (%eax);movl , %eax;movl %esi, (%eax);movl , %eax": 1,
                "movl %esi, (%eax);movl , %eax;movl , %edx;movl %eax, %ecx;movl $, %edi": 1,
                "testl %ecx, %ecx;movl $, ;movl %eax, ;movl $, %ebx;jbe  <KeFindConfigurationEntry+>": 1,
                "sarl $, %edx;testl %edi, %edi;movl %edx, (%eax);movl %ecx, %eax;movl $, %ecx": 1,
                "movl $, %esi;pushl %esi;movb %al, %bl;calll - <ExAcquireResourceExclusiveLite>;movl %fs:, %eax": 1,
                "xorl %ecx, %ecx;incl %ecx;movl $, %esi;movl $, %eax;pushl %esi": 1,
                "incl %ecx;movl $, %esi;movl $, %eax;pushl %esi;pushl %ecx": 1,
                "imulw $, (%ebp), %sp;jne  <KeFindConfigurationEntry+>;andb %dh, (%edi,%ebp,);jbe  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>": 1,
                "jb  <KeFindConfigurationEntry+>;addb %al, (%eax);addb %al, (%eax);decl %ebp;popal": 1,
                "andb %dh, (%edx,%esi,);popal;andb %ah, %gs:(%si);insl %dx, %es:(%edi);jo  <KeFindConfigurationEntry+>": 1,
                "jns  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>;insl %dx, %es:(%edi);cmpb (%eax), %ah;outsb %gs:(%esi), %dx": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;jae  <KeFindConfigurationEntry+>;bound (%ebp), %esp;outsl (%esi), %dx": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;calll - <PAGEVRFY+>;testl %eax, %eax": 1,
                "calll - <PAGEVRFY+>;testl %eax, %eax;jne  <KeFindConfigurationEntry+>;pushl $;calll - <DbgPrint>": 1,
                "jne - <KeFindConfigurationEntry+>;pushl %ebx;calll - <wctomb+>;cmpl %esi, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %esi, %eax;movl %eax, -(%ebp);je - <KeFindConfigurationEntry+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jbe  <KeFindConfigurationEntry+>;pushl %esi;pushl %ebx;calll - <wctomb+>;testl %eax, %eax": 1,
                "je  <KeFindConfigurationEntry+>;incl %edi;cmpl -(%ebp), %edi;jb - <KeFindConfigurationEntry+>;addl $, %esi": 1,
                "cmpl -(%ebp), %edi;jb - <KeFindConfigurationEntry+>;addl $, %esi;pushl %esi;pushl $": 1,
                "jae  <KeFindConfigurationEntry+>;orl $, ;jmp  <KeFindConfigurationEntry+>;orl %ebx, ;jmp  <KeFindConfigurationEntry+>": 1,
                "testb $, %al;je  <KeFindConfigurationEntry+>;movl , %ecx;andl $-, %ecx;orl %ebx, %ecx": 1,
                "pushl %ecx;testb $, ;je  <KeFindConfigurationEntry+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edi, -(%ebp);movl %edi, (%ebp);jbe  <KeFindConfigurationEntry+>;pushl %ebx;pushl %esi": 1,
                "pushl -(%ebp);calll - <wctomb+>;movl %eax, %ebx;testl %ebx, %ebx;je  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;testb $, (%ebx);jne  <KeFindConfigurationEntry+>;leal (%ebx), %esi;pushl %esi": 1,
                "leal (%ebx), %esi;pushl %esi;pushl $;calll - <DbgPrint>;movzwl (%esi), %esi": 1,
                "jb - <KeFindConfigurationEntry+>;popl %esi;popl %ebx;movl %edi, %eax;popl %edi": 1,
                "decl %ecx;jne - <KeFindConfigurationEntry+>;movl , %ecx;movl , %eax;movl %ecx, %edx": 1,
                "pushl %edi;leal -(%ecx), %edi;movl %edi, %edx;cmpl $, %edx;movl %ecx, ": 1,
                "decl %edi;movl %eax, (%edx);jne - <KeFindConfigurationEntry+>;movl , %ecx;movl %ecx, %eax": 1,
                "shrl $, %esi;movl %ecx, %esi;shrl $, %esi;andl $, %edx;andl $, %esi": 1,
                "movl -(%edx), %esi;movl -(%edx), %edx;shrdl $, %edx, %esi;shrl $, %edx;movl %edx, %edi": 1,
                "movl %edx, %edi;movl %esi, %edx;andl $, %edx;movl , %edi;addl %edi, %ecx": 1,
                "addl %edi, %ecx;movl %ecx, ;decl %ecx;movl %ecx, %esi;shrl $, %esi": 1,
                "jmp  <KeFindConfigurationEntry+>;movl , %eax;movl $, %ecx;xorl %edx, %edx;cmpl %ecx, %eax": 1,
                "pushl $;jmp  <KeFindConfigurationEntry+>;pushl $;popl %esi;divl %esi": 1,
                "je  <KeFindConfigurationEntry+>;cmpl %edi, ;jne  <KeFindConfigurationEntry+>;cmpl $-, ;je  <KeFindConfigurationEntry+>": 1,
                "movl , %eax;movl %ecx, ;movl %eax, %ecx;shll $, %edx;sarl $, %ecx": 1,
                "incl %eax;popl %esi;popl %edi;retl $;int": 1,
                "shll $, %eax;testl %edi, %edi;leal -(%eax,%esi), %ecx;movl $, ;movl %esi, (,%ebx,)": 1,
                "jmp  <KeFindConfigurationEntry+>;pushl ;pushl ;pushl %eax;pushl %esi": 1,
                "movl (%eax), %edx;imull %ecx, %edx;addl %edx, (%ebp);addl $, %eax;addl %ecx, %esi": 1,
                "shrl $, %edi;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;je  <KeFindConfigurationEntry+>;shrl $, %esi": 1,
                "cmpl %ebx, %edi;movl %esi, ;movl %eax, (%ebp);movl $, %esi;jbe  <KeFindConfigurationEntry+>": 1,
                "movl %esi, %ecx;calll - <InterlockedPushEntrySList>;addl $, (%ebp);decl %edi;jne - <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;pushl %eax;calll - <RtlClearAllBits>;pushl ;calll - <RtlClearAllBits>": 1,
                "calll - <MISYSPTE+>;cmpl %ebx, %eax;movl %eax, (%ebp);jne  <KeFindConfigurationEntry+>;pushl %ebx": 1,
                "outsl (%esi), %dx;je  <KeFindConfigurationEntry+>;bound (%ebp), %esp;jne  <KeFindConfigurationEntry+>;andb %ah, %fs:(%esi)": 1,
                "insb %dx, %es:(%edi);andb %dh, (%edx);outsb (%esi), %dx;jae  <KeFindConfigurationEntry+>;jne  <KeFindConfigurationEntry+>": 2,
                "jne  <KeFindConfigurationEntry+>;andb %dh, (%edi,%ebp,);outsl (%esi), %dx;jbe  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>": 2,
                "andb %dh, (%edi,%ebp,);outsl (%esi), %dx;jbe  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;popal": 2,
                "je  <KeFindConfigurationEntry+>;cmpl %edx, ;movl %edx, -(%ebp);jbe  <KeFindConfigurationEntry+>;pushl %esi": 1,
                "movl -(%ecx), %ebx;movl -(%ecx), %ecx;shrdl $, %eax, %edi;shrdl $, %ecx, %ebx;shrl $, %eax": 1,
                "shrl $, %eax;movl $, %eax;andl %eax, %ebx;andl %eax, %edi;movl , %eax": 1,
                "movl , %eax;shrl $, %ecx;orl $, %ebx;addl $, %eax;movl -(%eax), %ecx": 1,
                "movl , %ecx;movl -(%ebp), %edx;addl $, %eax;cmpl (%ecx), %edx;jne - <KeFindConfigurationEntry+>": 1,
                "addl $, %esp;cmpl %eax, ;movl %eax, (,%ecx,);movl %eax, -(%ebp);jbe  <KeFindConfigurationEntry+>": 1,
                "jbe  <KeFindConfigurationEntry+>;cmpl %eax, -(%ebp);je  <KeFindConfigurationEntry+>;movl %eax, %edx;shll $, %edx": 1,
                "cmpl %edi, %eax;jb  <KeFindConfigurationEntry+>;cmpl %ebx, %eax;jbe  <KeFindConfigurationEntry+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);popl %eax;je  <KeFindConfigurationEntry+>;cmpl %eax, %eax": 1,
                "incl (%ebp);cmpl $, (%ebp);movl %edx, -(%ebp);jb - <KeFindConfigurationEntry+>;cmpl $, -(%ebp)": 1,
                "shll $, %eax;pushl %ecx;andl $, %edx;orl %edx, %eax;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);movl %ecx, -(%ebp);shrl $, %eax;andl %edi, %ebx;calll - <ZwYieldExecution+>": 1,
                "retl $;int;decl %esi;decl %edi;decl %esp": 1,
                "decl %esi;decl %edi;decl %esp;decl %edi;pushl %edi": 1,
                "je  <KeFindConfigurationEntry+>;xorl %esi, %esi;cmpl %esi, ;jbe  <KeFindConfigurationEntry+>;movl (,%esi,), %eax": 1,
                "pushl (,%esi,);pushl %eax;calll - <KeFindConfigurationEntry+>;incl %esi;cmpl , %esi": 1,
                "pushl %eax;calll - <KeFindConfigurationEntry+>;incl %esi;cmpl , %esi;jb - <KeFindConfigurationEntry+>": 1,
                "jne  <KeFindConfigurationEntry+>;andl $-, ;movl , %eax;cmpl $, %eax;jbe  <KeFindConfigurationEntry+>": 1,
                "movl , %ecx;movl $, %eax;orl %eax, ;movl %ecx, ;movl %edi, ": 1,
                "movl $, %eax;orl %eax, ;movl %ecx, ;movl %edi, ;movl %eax, ": 1,
                "movl -(%ebp), %eax;movl %eax, (%ecx);pushl ;pushl ;pushl $": 1,
                "movl (%eax), %edx;cmpl , %edx;jae  <KeFindConfigurationEntry+>;movl %edx, ;movl (%eax), %edx": 1,
                "jbe  <KeFindConfigurationEntry+>;testl %esi, %esi;je  <KeFindConfigurationEntry+>;cmpl %edi, ;movl %edi, %ecx": 1,
                "movl %ecx, ;jbe  <KeFindConfigurationEntry+>;movl %edi, ;jmp  <KeFindConfigurationEntry+>;andl $, -(%ebp)": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;je  <KeFindConfigurationEntry+>;cmpl $, ": 1,
                "cmpl $, ;jb  <KeFindConfigurationEntry+>;movl %edi, ;cmpl $, ;je  <KeFindConfigurationEntry+>": 1,
                "shrl $, %edi;imull , %edi;addl %ecx, %edi;movl $, %eax;cmpl %eax, %edi": 1,
                "movl $, %ecx;cmpl %ecx, %eax;movl %eax, -(%ebp);jae  <KeFindConfigurationEntry+>;movl %ecx, %eax": 1,
                "incl %eax;imull $, %eax, %eax;andl $, %eax;leal (%eax,%edi), %eax;cmpl %eax, %ecx": 1,
                "andl $, %eax;leal (%eax,%edi), %eax;cmpl %eax, %ecx;jae  <KeFindConfigurationEntry+>;movl %eax, %ecx": 1,
                "leal (%eax,%edi), %eax;cmpl %eax, %ecx;jae  <KeFindConfigurationEntry+>;movl %eax, %ecx;movl %ecx, ": 1,
                "jbe  <KeFindConfigurationEntry+>;movl %edx, %ecx;movl %ecx, ;cmpl %esi, %ecx;jbe  <KeFindConfigurationEntry+>": 1,
                "jne  <KeFindConfigurationEntry+>;cmpl $, %eax;jb  <KeFindConfigurationEntry+>;cmpl $, %eax;jbe  <KeFindConfigurationEntry+>": 1,
                "cmpl $, %eax;jb  <KeFindConfigurationEntry+>;cmpl $, %eax;jbe  <KeFindConfigurationEntry+>;pushl $": 1,
                "addl %eax, %ecx;movl %ecx, ;movl , %eax;movl , %edx;subl %ecx, %eax": 1,
                "cmpl $, ;ja  <KeFindConfigurationEntry+>;cmpl $, ;jne  <KeFindConfigurationEntry+>;cmpl $-, %edx": 1,
                "jne  <KeFindConfigurationEntry+>;cmpl $-, ;je  <KeFindConfigurationEntry+>;andl $, -(%ebp);xorl %edx, %edx": 1,
                "xorl %edx, %edx;incl %edx;testl %ecx, %ecx;movl $, ;movl %edx, -(%ebp)": 1,
                "shll $, %ecx;movl %ecx, %edx;movl %eax, %ecx;subl %edx, %ecx;andl $, %ecx": 1,
                "movl , %edx;movl %ecx, %esi;subl , %esi;cmpl %esi, %edx;jbe  <KeFindConfigurationEntry+>": 1,
                "movl %ecx, %esi;subl , %esi;cmpl %esi, %edx;jbe  <KeFindConfigurationEntry+>;addl $, %edx": 1,
                "pushl $;calll - <KeFindConfigurationEntry+>;movl -(%ebp), %edi;movl -(%ebp), %edx;andl %ebx, %eax": 4,
                "shll $, %eax;andl %esi, %edx;orl %edx, %eax;movl %eax, (%edi);movl %ecx, (%edi)": 3,
                "xorl %eax, %eax;shll $, %edi;movl $, %ecx;rep  stosl %eax, %es:(%edi);movl -(%ebp), %eax": 2,
                "cmpl %eax, ;movl %eax, ;jne  <KeFindConfigurationEntry+>;testb $, ;je  <KeFindConfigurationEntry+>": 1,
                "movl (%eax), %ecx;movl , %edx;movl %ecx, (,%edx,);movl (%eax), %edx;movl (%eax), %ecx": 1,
                "movl (%eax), %edx;movl (%eax), %ecx;leal -(%ecx,%edx), %ecx;movl , %edx;incl ": 1,
                "movl , %edx;incl ;incl -(%ebp);cmpl $, -(%ebp);movl %ecx, (,%edx,)": 1,
                "je  <KeFindConfigurationEntry+>;movl (%eax), %eax;cmpl (%ebp), %eax;jne - <KeFindConfigurationEntry+>;testb $, ": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);jmp  <KeFindConfigurationEntry+>;movl , %eax;andl $-, ": 1,
                "shll $, %ecx;addl %eax, %ecx;movl %eax, ;movl %ecx, -(%ebp);jmp  <KeFindConfigurationEntry+>": 1,
                "movl , %edx;leal (%ecx), %eax;shll $, %eax;subl %edi, %edx;cmpl %edx, %eax": 1,
                "jae  <KeFindConfigurationEntry+>;movl $, %eax;subl %ecx, %eax;shll $, %eax;addl %eax, %edi": 1,
                "addl -(%ebp), %ecx;subl %edi, %eax;subl -(%ebp), %eax;movl -(%ebp), %edi;addl %ecx, -(%ebp)": 1,
                "movl $, %edi;subl %edi, %eax;movl %eax, -(%ebp);movl , %eax;leal -(%eax,%edx), %edx": 1,
                "movl %ecx, %edx;andl %esi, %edx;negl %edx;sbbl %edx, %edx;negl %edx": 1,
                "negl %edx;shrl $, %ecx;addl %ecx, %edx;movl %edx, ;movl -(%ebp), %edx": 1,
                "movl %edx, ;movl -(%ebp), %edx;jmp  <KeFindConfigurationEntry+>;movl -(%ebp), %ecx;movl (%ecx), %ecx": 1,
                "andl $-, %edi;orl %edi, %ecx;movl -(%ebp), %edi;shll $, %eax;andl %esi, %edx": 1,
                "jbe - <KeFindConfigurationEntry+>;movl , %ecx;testl %ecx, %ecx;je  <KeFindConfigurationEntry+>;movl , %edx": 1,
                "movl $, %edx;andl %edx, %ecx;movl %edi, ;movl $, %edi;subl %edi, %ecx": 2,
                "movl %ecx, -(%ebp);jae  <KeFindConfigurationEntry+>;pushl $;calll - <KeFindConfigurationEntry+>;movl -(%ebp), %edi": 2,
                "movl %ecx, (%edi);movl %eax, -(%ebp);xorl %eax, %eax;movl %ecx, -(%ebp);shll $, %edi": 2,
                "movl %edi, -(%ebp);je  <KeFindConfigurationEntry+>;testl %ecx, %esi;je  <KeFindConfigurationEntry+>;movl %ecx, %edx": 1,
                "testl %edi, %esi;je  <KeFindConfigurationEntry+>;andl $, %edi;addl $, %edi;movl %edi, -(%ebp)": 1,
                "movl , %edi;shll $, %edi;movl %edx, (%edi);movl -(%ebp), %edx;decl %edx": 1,
                "andl %ebx, %eax;xorl %edi, %edi;shldl $, %eax, %edi;shll $, %eax;andl %esi, %ecx": 2,
                "orl %edx, %edi;movl %eax, %ecx;movl -(%ebp), %eax;movl %edi, %edx;movl %ecx, (%eax)": 2,
                "movl %ecx, (%eax);addl $, %eax;incl -(%ebp);cmpl -(%ebp), %eax;movl %edx, -(%eax)": 3,
                "cmpl -(%ebp), %eax;movl %edx, -(%eax);movl %eax, -(%ebp);jb - <KeFindConfigurationEntry+>;movl , %eax": 1,
                "jbe - <KeFindConfigurationEntry+>;movl , %eax;movl -(%ebp), %ecx;addl %eax, %ecx;movl %ecx, ": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %edx;subl %ecx, %eax;sarl $, %eax;subl %eax, %edx": 1,
                "shll $, %eax;andl %esi, %ecx;orl %ecx, %eax;andl $-, %edi;movl %eax, %ecx": 1,
                "andl $-, %edi;movl %eax, %ecx;movl -(%ebp), %eax;orl %edi, %edx;movl %ecx, (%eax)": 1,
                "pushl %esi;calll - <MISYSPTE+>;testl %eax, %eax;jne  <KeFindConfigurationEntry+>;pushl $": 1,
                "pushl %esi;pushl %esi;calll - <MISYSPTE+>;testl %eax, %eax;jne  <KeFindConfigurationEntry+>": 1,
                "xorl %edi, %edi;incl %edi;pushl %edi;pushl %edi;movl %eax, ": 1,
                "movl %edi, %edx;imull $, %ecx, %ecx;movl , %edi;imull $, %edx, %edx;addl , %edx": 1,
                "movl (%edx), %eax;andl $, %eax;xorl %edi, %edi;orl %edi, %eax;jne  <KeFindConfigurationEntry+>": 1,
                "andl %esi, %edx;andl $-, %edi;orl %edx, %eax;orl %edi, %ecx;incl -(%ebp)": 1,
                "je  <KeFindConfigurationEntry+>;movl -(%ebp), %edx;incl -(%ebp);movl %eax, (%edx);movl %ecx, %eax": 1,
                "movl -(%ebp), %edx;incl -(%ebp);movl %eax, (%edx);movl %ecx, %eax;movl %eax, (%edx)": 1,
                "movl %ecx, (%eax);xorl %ecx, %ecx;cmpl %ecx, ;je  <KeFindConfigurationEntry+>;movl , %eax": 1,
                "incl %eax;imull $, %eax, %eax;addl , %eax;leal (%edx,%edx,), %ecx;shll $, %ecx": 1,
                "imull $, %eax, %eax;addl , %eax;leal (%edx,%edx,), %ecx;shll $, %ecx;leal (%ecx,%eax), %edi": 1,
                "andl $, %esi;andl $, %ecx;subl $, %ecx;subl $, %esi;cmpl %ecx, %esi": 1,
                "movl -(%esi), %edi;movl -(%esi), %esi;shrdl $, %esi, %edi;xorl (%eax), %edi;shrl $, %esi": 1,
                "incl -(%eax);andl $, %esi;orl $, %esi;incl -(%ebp);movl %esi, -(%eax)": 1,
                "jmp  <KeFindConfigurationEntry+>;movl (%eax), %edx;movl (%eax), %eax;movl %edx, %ecx;andl $, %ecx": 1,
                "orl %ecx, (%eax);movl $, -(%ebp);movl (%edi), %eax;andl $, %eax;pushl $": 1,
                "movl %ecx, -(%ebp);movl %eax, %ecx;andl %ebx, %ecx;movl %ecx, -(%ebp);xorl %ecx, %ecx": 1,
                "leal -(%edx,%ecx), %edx;cmpl %edx, -(%ebp);jae  <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;movl , %ecx": 1,
                "addl , %eax;pushl %eax;movl %eax, -(%ebp);calll - <MmIsAddressValid>;testb %al, %al": 1,
                "xorl -(%ebp), %ecx;movw $, (%eax);andl %ebx, %ecx;xorl %ecx, (%eax);movl (%eax), %ecx": 2,
                "andl %ebx, %ecx;xorl %ecx, (%eax);movl (%eax), %ecx;incl (%eax);andl $, %ecx": 2,
                "andl $, %ecx;orl $, %ecx;movl %edi, (%eax);movl %ecx, (%eax);addl $, -(%ebp)": 1,
                "je  <KeFindConfigurationEntry+>;movl (%eax), %esi;movl , %ecx;cmpl %ecx, %esi;movl (%eax), %edx": 1,
                "cmpl $, %eax;jg  <KeFindConfigurationEntry+>;andl $, (%ebp);movl %esi, %eax;imull $, %eax, %eax": 1,
                "movl %eax, -(%edi);calll - <MmTrimAllSystemPagableMemory+>;incl (%ebp);jmp  <KeFindConfigurationEntry+>;testl %edx, %edx": 1,
                "je  <KeFindConfigurationEntry+>;movl %edx, %edi;movl %esi, %edx;movl $, %ecx;calll - <MmTrimAllSystemPagableMemory+>": 1,
                "cmpl $, %eax;jle  <KeFindConfigurationEntry+>;cmpl $, %eax;jle  <KeFindConfigurationEntry+>;movl -(%ebp), %ecx": 1,
                "andl $, %ecx;subl $, %ecx;testl %edx, %edx;movl %esi, %eax;je  <KeFindConfigurationEntry+>": 1,
                "movw $, (%eax);movl (%eax), %edx;andl $, %edx;orl $, %edx;andl %ebx, %edi": 1,
                "movl %edx, (%eax);movl (%eax), %edx;andl $, %edx;orl $, %edx;movl %edx, (%eax)": 1,
                "movl (%eax), %edx;andl $, %edx;orl $, %edx;movl %edx, (%eax);movl (%eax), %edx": 1,
                "shrl $, %edx;andl $, %edx;subl %esi, %edx;cmpl %edx, %ecx;ja  <KeFindConfigurationEntry+>": 1,
                "movl %edx, %eax;andl %ebx, %eax;imull $, %eax, %eax;addl %ecx, %eax;orl $, (%eax)": 1,
                "shll $, %edi;movl %edi, -(%eax);movl (%eax), %edi;andl $, %edi;orl $, %edi": 1,
                "decl %edx;jne - <KeFindConfigurationEntry+>;cmpl %esi, ;jne  <KeFindConfigurationEntry+>;movl , %edi": 1,
                "cmpl %edx, %esi;jbe  <KeFindConfigurationEntry+>;leal (%esi), %eax;shll $, %eax;movl %eax, -(%ebp)": 1,
                "shrl $, %ecx;andl %esi, %ecx;movl $, %edx;subl %edx, %eax;movl %ecx, %esi": 1,
                "movl %eax, -(%ebp);cmpl $, (%ebp);je  <KeFindConfigurationEntry+>;incl -(%ebp);pushl -(%ebp)": 1,
                "cmpl $, (%ebp);je  <KeFindConfigurationEntry+>;incl -(%ebp);pushl -(%ebp);calll - <MmTrimAllSystemPagableMemory+>": 1,
                "movl -(%ebp), %ecx;shrl $, %edx;andl %ebx, %ecx;xorl %edx, %edx;shldl $, %ecx, %edx": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;pushl -(%ebp);shrdl $, %eax, %ecx": 1,
                "andl %ebx, %eax;imull $, %eax, %eax;addl , %eax;orl $, (%eax);movl , %esi": 1,
                "pushl %eax;calll - <MmTrimAllSystemPagableMemory+>;movl , %eax;cmpl %esi, %eax;je  <KeFindConfigurationEntry+>": 1,
                "andl $-, %edx;movl %edx, (%eax);calll *;xorl %ecx, %ecx;movb %al, (%ebp)": 1,
                "shldl $, %edi, %edx;shll $, %edi;andl $, %eax;orl %eax, %edi;andl $-, %ecx": 1,
                "movl %eax, -(%ebp);calll - <MmTrimAllSystemPagableMemory+>;movl -(%ebp), %edx;movl %eax, -(%ebp);andl %ebx, %eax": 1,
                "andl $, %edi;shll $, %eax;orl %edi, %eax;movl , %edi;shrl $, %edi": 1,
                "calll - <MmGrowKernelStack+>;cmpl $, ;movl , %eax;jne  <KeFindConfigurationEntry+>;movl %eax, %ecx": 1,
                "movl -(%ebp), %edx;movl (%edx), %ecx;movl (%edx), %edx;shrdl $, %edx, %ecx;xorl (%edi), %ecx": 1,
                "movw $, (%edi);andl %ebx, %ecx;xorl %ecx, (%edi);movl -(%ebp), %ecx;movl %ecx, (%edi)": 1,
                "pushl $;movl %esi, (%ebp);calll - <ExAllocatePoolWithTag>;movl , %ecx;leal (%ecx,%ecx,), %edx": 1,
                "calll *;andl $, (%esi);orl $, (%esi);movl %edi, %ecx;movb %al, %bl": 1,
                "movl $, -(%ebp);movl %ecx, -(%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);jae  <KeFindConfigurationEntry+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;cmpl $, ;jne  <KeFindConfigurationEntry+>": 1,
                "jmp  <KeFindConfigurationEntry+>;movl %ebx, %esi;imull $, %esi, %esi;addl , %esi;pushl %esi": 1,
                "calll - <MmIsAddressValid>;testb %al, %al;je  <KeFindConfigurationEntry+>;leal (%esi), %eax;pushl %eax": 1,
                "ja  <KeFindConfigurationEntry+>;xorl %ecx, %ecx;cmpl %ecx, (%esi);je  <KeFindConfigurationEntry+>;cmpl %ecx, (%esi)": 1,
                "movl %esi, %ecx;calll - <MmTrimAllSystemPagableMemory+>;movl %ebx, %ecx;calll - <MmIsNonPagedSystemAddressValid+>;jmp  <KeFindConfigurationEntry+>": 1,
                "calll - <MmTrimAllSystemPagableMemory+>;andw $, (%esi);andl $, (%esi);xorl %eax, %eax;incl %eax": 1,
                "movl %eax, (%esi);movl (%esi), %eax;andl $, %eax;orl $, %eax;movl $, (%esi)": 1,
                "movl %eax, (%esi);movb -(%ebp), %cl;decl ;calll *%edi;leal -(%ebp), %eax": 1,
                "movl %ebx, %eax;orl $, %eax;pushl %eax;pushl $;pushl %esi": 1,
                "incl -(%ebp);calll *;movb %al, -(%ebp);addl , %ebx;cmpl , %ebx": 1,
                "movl %eax, (%ebp);jb - <KeFindConfigurationEntry+>;popl %edi;popl %esi;popl %ebx": 1,
                "cmpl %esi, ;je  <KeFindConfigurationEntry+>;pushl %ebx;pushl %edi;movl %esi, -(%ebp)": 1,
                "pushl %edi;movl %esi, -(%ebp);calll *;cmpl %esi, ;movb %al, -(%ebp)": 1,
                "movl , %eax;movl -(%ebp), %ecx;orl $-, -(%ebp);leal (%ecx,%eax), %ebx;cmpl $-, (%ebx)": 1,
                "movl -(%ebp), %edx;cmpl %edx, ;movl %eax, -(%ebp);jne  <KeFindConfigurationEntry+>;movl (%esi), %ebx": 1,
                "movl %eax, (%ecx);movl -(%ebp), %eax;movl (%edi), %ecx;movl %ecx, (%esi);movl %eax, (%esi)": 1,
                "jne  <KeFindConfigurationEntry+>;movl %esi, -(%ebp);movl %esi, (%ebp);pushl %esi;pushl $": 1,
                "movl $, %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movb $, ;jmp  <KeFindConfigurationEntry+>": 1,
                "movb $, ;jmp  <KeFindConfigurationEntry+>;pushl %ebx;pushl ;calll - <ExFreePoolWithTag>": 1,
                "rep  stosl %eax, %es:(%edi);popl %edi;popl %esi;popl %ebx;leave": 1,
                "calll - <RtlCreateSecurityDescriptor>;testb $, ;je  <KeFindConfigurationEntry+>;pushl ;calll - <RtlLengthSid>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %edi;calll - <RtlGetAce>": 2,
                "pushl %ebx;pushl %edi;calll - <RtlGetAce>;movl -(%ebp), %eax;orb $, (%eax)": 2,
                "testl %edi, %edi;jne  <KeFindConfigurationEntry+>;movl $, %eax;jmp  <KeFindConfigurationEntry+>;pushl $": 1,
                "pushl -(%ebp);calll - <ExFreePoolWithTag>;leave;retl $;int": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%edi);insb %dx, %es:(%edi);addb %ch, (%edi)": 1,
                "addb %ch, (%edi);bound (%eax), %eax;popal;addb %ch, (%eax,%eax);addb %al, (%eax)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);movl $, %esi": 1,
                "pushl %eax;calll - <RtlInitUnicodeString>;movl -(%ebp), %eax;andl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jl  <KeFindConfigurationEntry+>;pushl -(%ebp);calll - <NtClose>;pushl -(%ebp)": 1,
                "calll - <NtClose>;leal -(%ebp), %eax;pushl %eax;calll - <KeFindConfigurationEntry+>;xorl %eax, %eax": 1,
                "addb %al, (%eax);popl %esp;addb %cl, (%edi);bound (%eax), %eax;pushl $": 1,
                "movl %eax, -(%ebp);calll - <MmQuerySystemSize>;cmpl $, %eax;jne  <KeFindConfigurationEntry+>;calll - <MmIsThisAnNtAsSystem>": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, -(%ebp);movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>;pushl $": 1,
                "pushl %esi;pushl %edi;jne  <KeFindConfigurationEntry+>;movl $, %esi;pushl %esi": 1,
                "pushl $;pushl $;pushl %ebx;pushl %edi;calll  <KeFindConfigurationEntry+>": 2,
                "calll - <RtlInitUnicodeString>;movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movl $, %esi": 2,
                "pushl %eax;movb $, -(%ebp);movb %bl, -(%ebp);movl %ebx, -(%ebp);calll - <ObCreateObjectType>": 1,
                "movl %edi, (%esi);pushl $;movl $, %edi;pushl %ebx;movl %edi, (%esi)": 1,
                "pushl $;leal (,%eax,), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlAddAccessAllowedAceEx+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;leal -(%ebp), %eax": 1,
                "je  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;orb $, (%eax);leal -(%ebp), %esi;pushl %edi": 1,
                "pushl -(%ebp);pushl %edi;calll - <RtlCreateAcl>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>": 1,
                "pushl %edi;calll - <ExFreePoolWithTag>;jmp  <KeFindConfigurationEntry+>;pushl ;pushl %esi": 1,
                "pushl $;pushl %edi;calll - <RtlAddAccessAllowedAce>;testl %eax, %eax;jl - <KeFindConfigurationEntry+>": 2,
                "calll - <RtlAddAccessAllowedAce>;testl %eax, %eax;jl - <KeFindConfigurationEntry+>;pushl ;pushl %esi": 1,
                "pushl %ebx;pushl %edi;jl - <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <RtlSetDaclSecurityDescriptor>;testl %eax, %eax;jl - <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "leal (%esi), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl ": 1,
                "movl %ebx, -(%ebp);calll - <KeFindConfigurationEntry+>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;xorb %al, %al": 1,
                "pushl %eax;pushl (%ebp);pushl $;pushl ;pushl (%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwQueryValueKey>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>": 2,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);jne  <KeFindConfigurationEntry+>;pushl $;calll - <KeInitializeSpinLock>": 1,
                "cmpl %ebx, (%ebp);jne  <KeFindConfigurationEntry+>;pushl $;calll - <KeInitializeSpinLock>;pushl $": 1,
                "calll - <KeInitializeSpinLock>;movl %ebx, ;movl $, ;movl %ebx, ;movl %ebx, ": 1,
                "movl %ebx, ;movl $, ;movl %ebx, ;movl %ebx, ;movb $, ": 1,
                "movl %eax, ;movl %eax, ;pushl $;pushl $;pushl $": 1,
                "pushl %ebx;pushl %ebx;pushl $;calll - <ExInitializeNPagedLookasideList>;movl %ebx, ": 1,
                "jmp  <KeFindConfigurationEntry+>;xorl %edi, %edi;incl %edi;pushl $;popl %esi": 1,
                "movb $, ;incl ;calll - <PoShutdownBugCheck+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll - <ZwQueryValueKey>;subl $, -(%ebp);cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>": 2,
                "jne  <KeFindConfigurationEntry+>;movl %esi, %ecx;leal -(%ebp), %esi;movl $, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>;movl %ebx, -(%ebp);pushl -(%ebp);leal -(%ebp), %eax": 1,
                "calll *;pushl $;pushl $;calll - <KeFindConfigurationEntry+>;pushl $": 1,
                "pushl $;pushl $;pushl $;leal (%eax), %ecx;imull $, %eax, %eax": 1,
                "calll - <PAGEKD+>;movl %edi, %eax;popl %edi;popl %esi;retl": 1,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %ah, (%ebx);addb %dh, %gs:(%ebx);jae  <KeFindConfigurationEntry+>": 1,
                "addb %al, %fs:(%eax);addb %al, (%eax);addb %cl, (%edx);outsl (%esi), %dx;addb %ah, (%edx)": 1,
                "pushl %ebx;calll - <PsTerminateSystemThread+>;cmpl %ebx, ;jne  <KeFindConfigurationEntry+>;cmpl %ebx, ": 1,
                "movl , %eax;movl %ebx, (%eax);movl , %eax;movl %ebx, (%eax);pushl $": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, %esi": 3,
                "movl %eax, ;je  <KeFindConfigurationEntry+>;pushl %eax;calll  <KeFindConfigurationEntry+>;pushl ": 1,
                "movl (%eax), %eax;pushl %ebx;andl $-, %eax;pushl %ebx;movl %eax, ": 1,
                "addl $, %edi;movl $, %esi;movsl (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl , %edi": 1,
                "movl , %edi;addl $, %edi;movl $, %esi;movsl (%esi), %es:(%edi);pushl $": 1,
                "je  <KeFindConfigurationEntry+>;pushl (%ebp);xorl %eax, %eax;pushl $;stosl %eax, %es:(%edi)": 1,
                "pushl %ebx;pushl -(%ebp);calll - <ObReferenceObjectByHandle>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>": 1,
                "calll - <ZwClose>;movb $, %al;jmp  <KeFindConfigurationEntry+>;xorb %al, %al;popl %edi": 1,
                "leal -(%ebp), %eax;movl $, %esi;pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl -(%ebp);movl %eax, %edi;calll - <ZwClose>;cmpl %ebx, %edi;jge  <KeFindConfigurationEntry+>": 1,
                "pushl %edi;jmp  <KeFindConfigurationEntry+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll - <ObReferenceObjectByHandle>;pushl -(%ebp);movl %eax, %esi;calll - <ZwClose>": 1,
                "je  <KeFindConfigurationEntry+>;movb $, %cl;movb $, (%eax);calll *;cmpl %ebx, %edi": 1,
                "jge  <KeFindConfigurationEntry+>;pushl %ebx;pushl %ebx;pushl $;pushl %eax": 1,
                "movl %eax, %ecx;xorl %edx, %edx;subl %edx, %ecx;je  <KeFindConfigurationEntry+>;decl %ecx": 3,
                "xorl %ebx, %ebx;movl $, %eax;movl %eax, ;movl %eax, ;movl $, %eax": 1,
                "calll - <KeInitializeDpc>;pushl $;movl $, ;movl %ebx, ;movl %ebx, ": 1,
                "pushl $;pushl $;calll - <KeFindConfigurationEntry+>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>": 5,
                "testl %ecx, %ecx;je  <KeFindConfigurationEntry+>;subl %eax, %ecx;movl %ecx, (%edx);andl $-, %ebx": 1,
                "movl %ebx, (%eax);popl %ebx;popl %ebp;retl $;int": 1,
                "movl (%ebp), %esi;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl $, (%esi);pushl $": 1,
                "cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>;pushl -(%ebp);pushl $;pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <ZwCreateSection>;movl %eax, %edi;pushl -(%ebp)": 1,
                "calll - <ZwClose>;cmpl %ebx, %edi;jge  <KeFindConfigurationEntry+>;movl %edi, %eax;jmp  <KeFindConfigurationEntry+>": 1,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);calll - <RtlGetNtGlobalFlags>;testl $, %eax;je  <KeFindConfigurationEntry+>": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp);cmpb %bl, (%ebp);jne  <KeFindConfigurationEntry+>": 1,
                "movl %ebx, (%eax);leal (%esi), %edi;pushl (%ebp);pushl (%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl (%ebp);pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;calll - <ZwCreateKey+>;cmpl %ebx, %eax;jge  <KeFindConfigurationEntry+>;movl %eax, %ebx": 1,
                "calll - <ZwClose>;pushl -(%ebp);calll - <ZwClose>;retl;incl %eax": 1,
                "movw (%eax), %dx;incl %eax;incl %eax;testw %dx, %dx;jne - <KeFindConfigurationEntry+>": 1,
                "pushl (%esi);calll - <ZwWriteFile+>;movl %eax, -(%ebp);cmpl %ebx, %eax;jge  <KeFindConfigurationEntry+>": 1,
                "leal (%esi), %eax;pushl %eax;pushl %edi;pushl (%esi);pushl (%esi)": 1,
                "calll - <RtlTimeToElapsedTimeFields+>;movl %eax, %edi;cmpl %ebx, %edi;jge  <KeFindConfigurationEntry+>;pushl (%esi)": 1,
                "incl %ecx;addb %dl, (%eax);pushl %eax;addb %al, (%eax,%eax);addb %dl, (%edx)": 1,
                "movb $, -(%ebp);movl (%ebx), %eax;movl (%eax), %esi;movl %esi, -(%ebp);cmpb $, ": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>;cmpl %edi, %esi;je  <KeFindConfigurationEntry+>": 1,
                "subl -(%ebp), %eax;sarl %eax;shll %eax;movw %ax, -(%ebp);movl -(%ebp), %eax": 2,
                "jb  <KeFindConfigurationEntry+>;movzwl %ax, %ecx;movl -(%ebp), %esi;movl (%ebx), %edi;movl %ecx, %eax": 2,
                "movw -(%ebp), %ax;cmpw %ax, (%ebx);jbe  <KeFindConfigurationEntry+>;movzwl %ax, %eax;shrl %eax": 2,
                "calll - <RtlEqualUnicodeString>;testb %al, %al;je  <KeFindConfigurationEntry+>;cmpb $, -(%ebp);jne  <KeFindConfigurationEntry+>": 1,
                "movl %eax, -(%ebp);jmp  <KeFindConfigurationEntry+>;pushl $;pushl $;pushl (%ebp)": 1,
                "calll - <RtlEqualUnicodeString>;testb %al, %al;je  <KeFindConfigurationEntry+>;movl %edi, -(%ebp);cmpb $, -(%ebp)": 1,
                "je  <KeFindConfigurationEntry+>;calll - <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %eax;calll - <wctomb+>;retl $": 1,
                "calll - <RtlTimeToElapsedTimeFields+>;movl -(%ebp), %eax;calll - <wctomb+>;retl $;int": 1,
                "pushl -(%ebp);pushl ;calll - <RtlCreateAcl>;pushl %edi;pushl -(%ebp)": 2,
                "pushl %ebx;pushl ;calll - <RtlCreateAcl>;pushl %edi;pushl -(%ebp)": 1,
                "pushl %edi;pushl ;calll - <RtlAddAccessAllowedAce>;pushl ;pushl %esi": 11,
                "calll - <RtlSetDaclSecurityDescriptor>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "movl $, ;calll - <ExAllocatePoolWithTag>;pushl %esi;pushl ;movl %eax, ": 1,
                "movl , %esi;movl %esi, (%ecx);movl , %esi;movl %esi, (%ecx);movl %edx, (%ecx)": 1,
                "movl %edx, (%ecx);andl $, (%eax);movl $, (%eax);movl , %ecx;movl %ecx, (%eax)": 1,
                "movl , %ecx;movl %ecx, (%eax);movl , %ecx;movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "movl , %ecx;movl %ecx, (%eax);movl , %ecx;movl %eax, ;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl %edx, (%eax);popl %esi;retl;int": 1,
                "xorl %ebx, %ebx;incl %ebx;pushl %ebx;movl %eax, -(%ebp);calll - <RtlLengthRequiredSid>": 1,
                "cmpl %edi, %ecx;movl %eax, ;je  <KeFindConfigurationEntry+>;cmpl %edi, ;je  <KeFindConfigurationEntry+>": 2,
                "pushl %ecx;calll - <RtlInitializeSid>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl ;calll - <RtlInitializeSid>": 18,
                "pushl %edi;movl %edi, (%eax);pushl ;calll - <RtlSubAuthoritySid>;pushl %edi": 4,
                "calll - <RtlSubAuthoritySid>;pushl %edi;movl $, (%eax);pushl ;calll - <RtlSubAuthoritySid>": 11,
                "movl $, (%eax);pushl $;calll - <ExAllocatePoolWithTag>;pushl %esi;pushl -(%ebp)": 1,
                "cmpl %edi, ;je  <KeFindConfigurationEntry+>;cmpl %edi, %eax;je  <KeFindConfigurationEntry+>;pushl %edi": 1,
                "pushl ;calll - <RtlInitializeSid>;pushl $;popl %esi;pushl %esi": 1,
                "movl %ebx, (%eax);pushl ;calll - <RtlSubAuthoritySid>;pushl %edi;movl %esi, (%eax)": 1,
                "movl %esi, (%eax);pushl ;calll - <RtlSubAuthoritySid>;pushl %ebx;movl %esi, (%eax)": 1,
                "movl %esi, ;xorl %esi, %esi;pushl $;movl %esi, ;popl %esi": 17,
                "pushl $;movl , %edi;movl %eax, ;popl %eax;movl %eax, ": 1,
                "movl %eax, -(%ebp);movl %edi, -(%ebp);movl %ecx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movzbl (%edx), %edx;movzbl (%esi), %esi;leal (,%edx,), %edx;andl $-, %edx": 1,
                "movl , %edx;pushl $;popl %esi;movl %edx, -(%ebp);movl , %edx": 1,
                "calll - <RtlSetOwnerSecurityDescriptor>;pushl %edi;pushl ;pushl -(%ebp);calll - <RtlSetGroupSecurityDescriptor>": 1,
                "calll - <RtlSetGroupSecurityDescriptor>;pushl $;popl %eax;movl -(%ebp), %ecx;pushl %edi": 1,
                "pushl $;popl %eax;movl -(%ebp), %ecx;pushl %edi;pushl %edi": 1,
                "andl $-, %ebx;pushl %edi;addl $, %ebx;movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>": 1,
                "calll - <RtlAddAccessAllowedAce>;pushl $;pushl $;pushl %edi;calll - <ExAllocatePoolWithTag>": 1,
                "movl $, -(%ebp);calll - <ObCreateObjectType>;cmpl $, ;popl %edi;popl %esi": 1,
                "testb %al, %al;je  <KeFindConfigurationEntry+>;calll - <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>": 1,
                "movb %cl, %al;popl %esi;retl;int;popl %esp": 1,
                "popl %esp;pushl %ebx;arpl %si, %gs:(%ebp);imull $, (%ecx,%edi,), %esi;incl %ecx": 1,
                "arpl %si, %gs:(%ebp);imull $, (%ecx,%edi,), %esi;incl %ecx;popl %edi;incl %ecx": 1,
                "movl (%eax), %eax;xorl %esi, %esi;pushl %esi;pushl %esi;pushl %esi": 1,
                "pushl %eax;calll - <ObInsertObject>;calll - <KeFindConfigurationEntry+>;movl %eax, ;calll - <RtlUnwind+>": 1,
                "movl %eax, ;pushl $;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitString>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlAnsiStringToUnicodeString>;pushl $": 4,
                "movl $, %edi;pushl %edi;pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx": 1,
                "pushl %edi;pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;cmpl %esi, %ebx": 1,
                "pushl %esi;calll - <ExAllocatePoolWithTag>;movl %eax, %ebx;cmpl %esi, %ebx;jne  <KeFindConfigurationEntry+>": 2,
                "pushl %edi;pushl $;pushl %ebx;calll - <RtlAddAccessAllowedAce>;pushl ": 1,
                "pushl %eax;calll - <RtlSetDaclSecurityDescriptor>;leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);calll - <NtDuplicateObject+>;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>": 1,
                "pushl %eax;calll - <RtlAnsiStringToUnicodeString>;movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "popl %ebx;pushl $;pushl $;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl $;pushl $;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl $": 1,
                "leal -(%ebp), %eax;xorl %esi, %esi;pushl %eax;pushl $;movl %ebx, -(%ebp)": 1,
                "pushl $;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 2,
                "leal (,%edi,), %edi;pushl %edi;pushl $;calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;cmpl %esi, %eax;movl %eax, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "pushl $;pushl $;pushl -(%ebp);calll - <RtlAddAccessAllowedAce>;testl %eax, %eax": 1,
                "calll - <ExInitializeResourceLite>;pushl $;xorl %ebx, %ebx;incl %ebx;xorl %esi, %esi": 1,
                "movl %esi, (%ecx,%eax);addl $, %ecx;cmpl $, %ecx;jb - <KeFindConfigurationEntry+>;pushl $": 1,
                "movl %esi, ;movl %ebx, ;movb %bl, %al;popl %esi;popl %ebx": 1,
                "addb %dh, (%ebx);pushl $;addb %al, (%ecx);jne  <KeFindConfigurationEntry+>;addb %ch, %fs:(%ecx)": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, ;calll - <RtlInitUnicodeString>;andl $, -(%ebp)": 1,
                "pushl %eax;movb $, ;calll - <RtlInitUnicodeString>;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "je  <KeFindConfigurationEntry+>;imull $, (%eax), %eax;addb %al, (%eax);int;int": 2,
                "movb %al, -(%ebp);pushl -(%ebp);calll - <KeFindConfigurationEntry+>;popl %edi;movl -(%ebp), %ecx": 1,
                "pushl -(%ebp);calll - <KeFindConfigurationEntry+>;popl %edi;movl -(%ebp), %ecx;calll - <KeRaiseUserException+>": 1,
                "calll - <KeInitializeSpinLock>;movl $, %eax;pushl $;popl %edx;xorl %ecx, %ecx": 1,
                "movl $, %eax;pushl $;popl %edx;xorl %ecx, %ecx;movl %eax, ": 1,
                "popl %edx;xorl %ecx, %ecx;calll - <PAGEVRFY+>;testb %al, %al;je  <KeFindConfigurationEntry+>": 2,
                "calll  <KeFindConfigurationEntry+>;calll - <KeFindConfigurationEntry+>;calll  <KeFindConfigurationEntry+>;calll  <KeFindConfigurationEntry+>;calll  <KeFindConfigurationEntry+>": 1,
                "calll - <PAGEVRFY+>;cmpl $, %eax;jg  <KeFindConfigurationEntry+>;andl $, ;andl $, ": 1,
                "pushl %edi;movl $, %ecx;xorl %eax, %eax;movl $, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl $, %edi;rep  stosl %eax, %es:(%edi);popl %edi;retl;int": 1,
                "pushl %eax;pushl $;movl %eax, ;movl %eax, ;calll - <RtlInitUnicodeString>": 1,
                "pushl %eax;pushl $;pushl $;pushl $;movl $, %edx": 2,
                "pushl $;pushl $;pushl $;movl $, %edx;movb $, %cl": 3,
                "addb %ch, (%ecx);jbe  <KeFindConfigurationEntry+>;addb %dh, %gs:(%edx);popl %esp;addb %dl, (%edi)": 1,
                "pushl %edi;addb %al, (%eax,%eax);addb %al, (%eax);addb %cl, %ah;int": 1,
                "calll - <IoCreateDriver>;jmp  <KeFindConfigurationEntry+>;pushl (%ebp);calll  <KeFindConfigurationEntry+>;xorl %eax, %eax": 1,
                "pushl %esi;movzbl (%eax), %esi;movl , %eax;movzbl (%eax), %eax;addl %eax, %esi": 1,
                "pushl $;leal (,%esi,), %esi;pushl %esi;pushl $;calll - <ExAllocatePoolWithTag>": 1,
                "pushl $;pushl %eax;movl %eax, ;calll - <RtlCreateSecurityDescriptor>;pushl $": 1,
                "calll - <RtlCreateSecurityDescriptor>;pushl $;pushl %ebx;pushl $;pushl ": 1,
                "pushl ;pushl ;calll - <RtlSetOwnerSecurityDescriptor>;movl %eax, %esi;testl %esi, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <ObCreateObjectType>;movl %eax, %esi;testl %esi, %esi": 1,
                "imull $, (%eax), %eax;insl %dx, %es:(%edi);addb %dh, (%ebp);insl %dx, %es:(%edi);addb %al, (%edx)": 1,
                "jae  <KeFindConfigurationEntry+>;addb %al, (%eax);addb %al, (%eax);pushl %edi;addb %cl, (%ebp)": 1,
                "decl %ecx;addb %bl, (%eax,%eax);addb %ch, (%eax,%eax);addb %ah, (%edx);popal": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll - <MmLockPagableImageSection>;pushl %eax": 1,
                "movl %esi, ;movl %esi, ;movl %esi, ;movl $, -(%ebp);addl $, %eax": 1,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);leal -(%ebp), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "cmpl %esi, -(%ebp);je  <KeFindConfigurationEntry+>;cmpl %esi, -(%ebp);je  <KeFindConfigurationEntry+>;pushl $": 1,
                "cmpl %esi, -(%ebp,%edx,);jne  <KeFindConfigurationEntry+>;decl %ecx;cmpw %si, %cx;jge - <KeFindConfigurationEntry+>": 1,
                "jns  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>;insl %dx, %es:(%edi);popl %esp;incl %ebx": 3,
                "je  <KeFindConfigurationEntry+>;insl %dx, %es:(%edi);popl %esp;incl %ebx;jne  <KeFindConfigurationEntry+>": 2,
                "pushl %eax;pushl %ebx;pushl %esi;calll - <IoCreateDevice>;cmpl %ebx, %eax": 1,
                "movb $, (%eax);pushl %esi;pushl %ebx;movl $, %eax;pushl %ebx": 1,
                "pushl %esi;pushl %ebx;movl $, %eax;pushl %ebx;pushl $": 1,
                "movl %ebx, -;popl %edi;movl (%ebp), %eax;popl %esi;popl %ebx": 1,
                "jne  <KeFindConfigurationEntry+>;pushl %eax;pushl $;pushl $;pushl %eax": 1,
                "decl %ebp;addb %ch, (%edi);addb %dl, (%edx);addb %dh, %gs:(%ebx);outsl (%esi), %dx": 1,
                "movb $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movb $-, -(%ebp)": 1,
                "int;int;int;orl $-, ;movl $, %eax": 1,
                "int;int;orl $-, ;movl $, %eax;pushl $": 1,
                "pushl $;movl $, ;movl %eax, ;movl %eax, ;calll - <KeInitializeSpinLock>": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);pushl %esi;pushl %edi;jne  <KeFindConfigurationEntry+>": 1,
                "movl , %eax;leal (%eax,%eax,), %ecx;shll $, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "pushl %eax;movl %eax, ;calll - <ExfReleasePushLock+>;jmp  <KeFindConfigurationEntry+>;pushl $-": 1,
                "xorl %edi, %edi;pushl %esi;incl %edi;leal (%ecx), %edx;pushl %edi": 1,
                "movb $, (%ecx);movl %ebx, (%ecx);pushl %eax;movl %edx, (%edx);movl %edx, (%edx)": 1,
                "movl %esi, ;movl %ebx, (%ebp);je  <KeFindConfigurationEntry+>;xorl %ecx, %ecx;incl %ecx": 1,
                "jae  <KeFindConfigurationEntry+>;movl $, %eax;movl $, %ecx;lock;orl %eax, (%ecx)": 1,
                "addb %ah, (%ecx);arpl %ax, (%eax);imull $, (%eax), %eax;addb %cl, %ah;int": 1,
                "arpl %ax, (%eax);imull $, (%eax), %eax;addb %cl, %ah;int;int": 1,
                "imull $, (%eax), %eax;addb %cl, %ah;int;int;int": 1,
                "pushl $;leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax;movl %ebx, ": 1,
                "pushl %eax;movsl (%esi), %es:(%edi);leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);calll - <ObCreateObjectType>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;pushl $": 1,
                "addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%eax,%eax);addb %dh, (%edi);pushl %ebx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);calll - <ObCreateObjectType>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>": 1,
                "movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl $;calll - <RtlTimeToElapsedTimeFields+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;pushl (%ebp);calll - <KeFindConfigurationEntry+>": 1,
                "movb $, -(%ebp);calll - <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>;movb %al, -(%ebp)": 3,
                "movl $, %ebx;movl $, %edi;movl -(%ebp), %eax;pushl %esi;pushl %ebx": 1,
                "pushl %ebx;pushl %edi;pushl -(%ebp);leal (%eax), %eax;pushl $": 2,
                "movl $, %esi;pushl $;pushl %esi;calll - <wcscmp>;testl %eax, %eax": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <KeFindConfigurationEntry+>;orl $, ": 7,
                "leal (%esi,%eax,), %esi;cmpw $, (%esi);popl %ecx;jne - <KeFindConfigurationEntry+>;movb -(%ebp), %al": 1,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax": 2,
                "pushl %ebx;pushl ;calll - <ObReferenceObjectByHandle>;cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>": 2,
                "movb $, ;calll - <ObfDereferenceObject>;movl %ebx, ;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl $;jmp  <KeFindConfigurationEntry+>;pushl %ebx;pushl %ebx": 3,
                "movl $, ;movl %ebx, ;movl %ebx, ;calll - <RtlInitUnicodeString>;leal -(%ebp), %eax": 2,
                "calll - <RtlInitUnicodeString>;movl $, %edi;pushl %edi;pushl $;pushl $": 1,
                "je  <KeFindConfigurationEntry+>;orl $, ;movl , %eax;movl %eax, ;cmpl %ebx, ": 1,
                "pushl %eax;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl ": 2,
                "pushl -(%ebp);pushl $;jmp  <KeFindConfigurationEntry+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %eax;pushl ;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>": 1,
                "pushl ;calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;pushl %ebx": 1,
                "jne  <KeFindConfigurationEntry+>;cmpb %bl, ;jne  <KeFindConfigurationEntry+>;movl $, %esi;pushl %esi": 1,
                "jne  <KeFindConfigurationEntry+>;cmpl %ecx, ;jne  <KeFindConfigurationEntry+>;cmpb %bl, ;jne  <KeFindConfigurationEntry+>": 1,
                "cmpb %bl, ;jne  <KeFindConfigurationEntry+>;movb $, -;movl %ecx, -;cmpb %bl, ": 1,
                "movl , %esi;testl $, %esi;je  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "calll - <RtlEqualUnicodeString>;testb %al, %al;jne  <KeFindConfigurationEntry+>;pushl %ebx;pushl %ebx": 1,
                "movl , %eax;movl %esi, %edx;movb $, %cl;calll - <_allshr>;movl , %ecx": 1,
                "pushl $;pushl %ebx;pushl ;calll - <LsaDeregisterLogonProcess+>;cmpl %ebx, %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;pushl %esi;calll - <wcslen>": 1,
                "pushl %esi;pushl %eax;pushl %ebx;movl %eax, -(%ebp);calll - <ExAllocatePoolWithTag>": 2,
                "cmpl %ebx, %edi;jne  <KeFindConfigurationEntry+>;pushl %ebx;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl -(%ebp);jmp - <KeFindConfigurationEntry+>;movl -(%ebp), %eax;movl %eax, ": 1,
                "shll $, %eax;jmp  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl , %eax;pushl $;addl %esi, %eax;pushl %eax;movl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);pushl $;pushl %eax;movl , %eax": 1,
                "pushl $;leal (%eax), %ecx;pushl %ecx;pushl $;leal (%eax), %ecx": 1,
                "pushl $;movb $, -(%ebp);calll - <RtlAddAccessAllowedAceEx+>;calll  <KeFindConfigurationEntry+>;testl %eax, %eax": 1,
                "movb $, -(%ebp);calll - <RtlAddAccessAllowedAceEx+>;calll  <KeFindConfigurationEntry+>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>": 1,
                "jne  <KeFindConfigurationEntry+>;movb %al, -(%ebp);andl $, -(%ebp);cmpb $, ;jbe  <KeFindConfigurationEntry+>": 1,
                "addl $, %ebx;pushl $;pushl $;pushl %edi;pushl -(%ebp)": 1,
                "jb - <KeFindConfigurationEntry+>;popl %edi;popl %esi;popl %ebx;movb -(%ebp), %al": 1,
                "calll - <KeFindConfigurationEntry+>;orl $-, -;retl;int;int": 1,
                "movl $, -(%ebp);calll - <ZwLoadKey+>;cmpb %bl, ;je  <KeFindConfigurationEntry+>;movl %ebx, ": 1,
                "calll - <KeQuerySystemTime>;jmp  <KeFindConfigurationEntry+>;movl %eax, ;movl %ecx, ;movl , %eax": 1,
                "movl , %eax;imull $, %eax, %eax;pushl %ebx;cltd;pushl $": 1,
                "jl  <KeFindConfigurationEntry+>;pushl $;pushl $;pushl $;pushl %ebx": 1,
                "pushl %esi;movl %eax, ;movl %ecx, ;calll - <KeSetTimer>;pushl $": 1,
                "xorl %eax, %eax;movl $, %edi;rep  stosl %eax, %es:(%edi);movl $, %edi;pushl %ebx": 1,
                "pushl %eax;calll - <KeInitializeQueue>;orl $, (%edi);addl $, %edi;cmpl $, %edi": 1,
                "movl %eax, %esi;calll - <ZwClose>;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "leave;retl;pushl %ebx;addb %ah, (%ebp);insl %dx, %es:(%edi)": 1,
                "retl;pushl %ebx;addb %ah, (%ebp);insl %dx, %es:(%edi);addb %ah, (%ecx)": 1,
                "movl %ecx, ;movl %eax, ;movl %eax, ;movb %cl, ;calll - <KeQuerySystemTime>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%eax), %eax;pushl %esi": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <KeFindConfigurationEntry+>;pushl %edi;pushl $": 1,
                "movl %eax, (%ebx);movzbl (%esi), %ecx;shll $, %ecx;xorl %eax, %ecx;andl $, %ecx": 1,
                "pushl %eax;pushl %esi;incl %ebp;pushl %edx;incl %edx": 1,
                "jb  <KeFindConfigurationEntry+>;xorl %esi, (%ebx);andb %dh, (%edx);xorb %dh, (%eax);cmpb %al, (%eax)": 1,
                "js  <KeFindConfigurationEntry+>;js  <KeFindConfigurationEntry+>;jo  <KeFindConfigurationEntry+>;imull $, (%ebx), %esi;orb (%edx), %cl": 1,
                "popl %eax;decl %ecx;pushl %eax;cmpb (%eax), %ah;bound %gs:(%ebp), %esi": 1,
                "andl $, %eax;addb %al, (%eax);addb %bl, (%eax);pushl %eax;decl %ebp": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;insb %dx, %es:(%edi);jns  <KeFindConfigurationEntry+>;andl $, %eax": 1,
                "jb  <KeFindConfigurationEntry+>;andl $, %eax;insb %dx, %es:(%edi);jne  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>": 1,
                "movl %eax, %esi;xorl %edi, %edi;cmpl %edi, %esi;movl %esi, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "pushl %esi;xorl %ecx, %ecx;shll $, %eax;pushl %ecx;pushl %eax": 1,
                "movb (%eax), %cl;movb %cl, -(%ebp);movw (%eax), %cx;movw %cx, -(%ebp);movb (%eax), %cl": 1,
                "movzwl %bx, %edx;movzbl -(%ebp), %ebx;movzwl -(%ebp), %eax;movzwl -(%ebp), %ecx;shll $, %edx": 1,
                "calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, ;je  <KeFindConfigurationEntry+>;movb $, ": 1,
                "pushl %ecx;pushl $;calll - <DbgPrint>;addl $, %esp;popl %ebx": 1,
                "pushl %esi;pushl %edi;pushl $;calll - <KeInitializeSpinLock>;movl $, %eax": 1,
                "popal;addb %ch, (%esi);je  <KeFindConfigurationEntry+>;addb %al, (%eax);int": 1,
                "pushl %eax;movl %edi, -(%ebp);movl %edi, -(%ebp);movb $, -(%ebp);calll - <ObCreateObjectType>": 1,
                "cmpl %edi, %eax;jl  <KeFindConfigurationEntry+>;pushl ;calll - <RtlLengthSid>;pushl ": 1,
                "pushl ;addl %eax, %esi;calll - <RtlLengthSid>;leal (%esi,%eax), %eax;pushl $": 1,
                "jmp  <KeFindConfigurationEntry+>;pushl $;pushl -(%ebp);pushl %esi;calll - <RtlCreateAcl>": 1,
                "pushl -(%ebp);pushl %esi;calll - <RtlCreateAcl>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "jl  <KeFindConfigurationEntry+>;pushl ;pushl %ebx;pushl $;pushl %esi": 2,
                "pushl %edi;pushl %esi;calll - <ExFreePoolWithTag>;movl -(%ebp), %eax;jmp  <KeFindConfigurationEntry+>": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %edi": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "addb %ah, %gs:(%esi);addb %dh, %gs:(%eax,%eax);addb %ch, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "decl %esi;addb %al, (%eax,%eax);addb %cl, (%eax,%eax);addb %dh, (%edx);addb %ch, (%esi)": 1,
                "leal (%eax,%esi), %eax;orl $-, (%eax);movl %ecx, %edi;subl $, %edi;je  <KeFindConfigurationEntry+>": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, (%eax);movl $, (%eax);movl $, (%eax);movl , %eax": 1,
                "popal;addb %ch, (%ebp);addb %dh, %gs:(%eax,%eax);addb %dh, (%edx);jae  <KeFindConfigurationEntry+>": 3,
                "pushl (%ebx);calll - <ZwNotifyChangeKey>;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ebp), %esi;pushl %edi;pushl %esi;calll *(%esi);testl %eax, %eax": 1,
                "movl (%ebp), %esi;xorl %edi, %edi;pushl %edi;xorl %ebx, %ebx;incl %ebx": 1,
                "pushl %eax;pushl %ebx;jmp  <KeFindConfigurationEntry+>;movl (%esi), %esi;pushl $": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;cmpl $-, %eax": 3,
                "leal -(%ebp), %eax;pushl %eax;calll - <LsaDeregisterLogonProcess+>;cmpl $-, %eax;jne  <KeFindConfigurationEntry+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $;jmp  <KeFindConfigurationEntry+>": 1,
                "calll - <KeBugCheckEx>;movl (%ebp), %ebx;jmp  <KeFindConfigurationEntry+>;orl $-, (%ebp);pushl %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;cmpl $-, %eax;je  <KeFindConfigurationEntry+>;movl (%ebx), %ecx;cmpl %edi, %ecx": 1,
                "popl %esi;jmp  <KeFindConfigurationEntry+>;movl (%ecx), %esi;pushl %eax;leal -(%ebp), %eax": 1,
                "jb  <KeFindConfigurationEntry+>;addl $, %eax;cmpl %eax, %esi;movl %eax, (%ebp);jae  <KeFindConfigurationEntry+>": 1,
                "calll *-(%ebp);xorl %edi, %edi;movl (%ebx), %eax;cmpl %edi, %eax;je  <KeFindConfigurationEntry+>": 1,
                "cmpl $, ;movl %esi, ;jne  <KeFindConfigurationEntry+>;pushl ;pushl $": 1,
                "calll - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;movw %si, %ax;movw %ax, ;movl %esi, ": 1,
                "jmp  <KeFindConfigurationEntry+>;movw %si, %ax;movw %ax, ;movl %esi, ;movw %ax, ": 1,
                "movl %ebx, (%esi);calll - <LsaDeregisterLogonProcess+>;movw %ax, (%esi);cmpw -(%ebp), %ax;jae  <KeFindConfigurationEntry+>": 1,
                "jne - <KeFindConfigurationEntry+>;popl %edi;popl %ebx;popl %esi;popl %ebp": 1,
                "popl %esi;popl %ebp;retl $;incl %esp;addb %ch, (%edi)": 1,
                "jl  <KeFindConfigurationEntry+>;movzwl (%esi), %eax;movl %eax, (%ebp);pushl $;leal -(%ebp), %eax": 1,
                "calll - <RtlInitUnicodeString>;pushl %edi;leal (%ebp), %eax;pushl %eax;pushl %edi": 3,
                "pushl %eax;calll - <ZwCreateKey>;movl %eax, %ebx;cmpl %edi, %ebx;jge  <KeFindConfigurationEntry+>": 2,
                "movl %edi, -(%ebp);jmp  <KeFindConfigurationEntry+>;incl -(%ebp);pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;movw $, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "calll - <ZwSetValueKey>;movl %eax, %ebx;cmpl %edi, -(%ebp);je  <KeFindConfigurationEntry+>;pushl -(%ebp)": 1,
                "movl %eax, %ebx;cmpl %edi, -(%ebp);je  <KeFindConfigurationEntry+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "addb %dh, (%ebp);jb  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;addb %ch, %gs:(%esi);je  <KeFindConfigurationEntry+>": 4,
                "addb %al, (%si);incl %edx;addb %al, (%eax);addb %al, (%eax);addb %al, (%ebx)": 1,
                "incl %edx;addb %al, (%eax);addb %al, (%eax);addb %al, (%ebx);jne  <KeFindConfigurationEntry+>": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);popl %esp;addb %dl, (%edx)": 1,
                "outsl (%esi), %dx;addb %ah, (%esi);imull $, (%eax), %eax;jae  <KeFindConfigurationEntry+>;addb %al, (%eax)": 1,
                "jae  <KeFindConfigurationEntry+>;addb %al, (%eax);addb %al, (%eax);andl $, %eax;addb %al, (%eax)": 1,
                "jb  <KeFindConfigurationEntry+>;addb %ch, %gs:(%esi);je  <KeFindConfigurationEntry+>;incl %esp;addb %ch, (%edi)": 1,
                "outsl (%esi), %dx;addb %ah, (%esi);imull $, (%eax), %eax;jae  <KeFindConfigurationEntry+>;popl %esp": 1,
                "andb %dl, (%eax);outsl (%esi), %dx;imulw $, (%ebp), %bp;xorb %dh, (%esp);addb %cl, %ah": 1,
                "movb %bl, -(%ebp);calll - <RtlInitUnicodeString>;pushl $;popl %edi;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwCreateKey>;cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>": 1,
                "cmpl %ebx, %eax;jl  <KeFindConfigurationEntry+>;pushl -(%ebp);leal -(%ebp), %eax;pushl $": 1,
                "pushl %eax;movw $, -(%ebp);calll - <RtlAnsiStringToUnicodeString>;movzwl -(%ebp), %eax;pushl %eax": 2,
                "calll - <RtlAnsiStringToUnicodeString>;movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl $": 2,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwOpenKey>;pushl -(%ebp);movl %eax, -(%ebp)": 1,
                "movzwl (%eax), %ecx;decl %ecx;je  <KeFindConfigurationEntry+>;decl %ecx;je  <KeFindConfigurationEntry+>": 1,
                "pushl -(%ebp);calll - <ZwSetValueKey>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;pushl -(%ebp);addl $, %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movw %bx, -(%ebp);calll - <LsaDeregisterLogonProcess+>;pushl -(%ebp)": 1,
                "jb  <KeFindConfigurationEntry+>;addb %ch, %gs:(%esi);je  <KeFindConfigurationEntry+>;addb %al, (%eax);decl %esp": 1,
                "outsb (%esi), %dx;addb %al, (%edi);outsl (%esi), %dx;addb %ch, (%edi);addb %al, %fs:(%eax)": 1,
                "movl %edx, %ecx;pushl %eax;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);calll - <RtlQueryRegistryValues>;testl %eax, %eax;popl %esi": 1,
                "movl %eax, -(%ebp);calll - <RtlQueryRegistryValues>;testl %eax, %eax;popl %esi;jl  <KeFindConfigurationEntry+>": 1,
                "calll - <RtlQueryRegistryValues>;testl %eax, %eax;popl %esi;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %eax": 1,
                "cmpl %eax, -(%ebp);jne  <KeFindConfigurationEntry+>;cmpl -(%ebp), %eax;je  <KeFindConfigurationEntry+>;movb $, %al": 1,
                "incl %ebx;addb %dl, (%eax);pushl %ebx;addb %ah, (%ebp);jb  <KeFindConfigurationEntry+>": 1,
                "jb  <KeFindConfigurationEntry+>;jbe  <KeFindConfigurationEntry+>;addb %dh, %gs:(%edx);incl %ecx;addb %al, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%edx);outsl (%esi), %dx;addb %ch, (%edi);je  <KeFindConfigurationEntry+>": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <RtlInitUnicodeString>;pushl (%esi);leal -(%ebp), %eax;pushl (%esi);pushl $": 1,
                "pushl %ebx;addb %bh, (%ecx);jae  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>;addb %ch, %gs:(%ebp)": 2,
                "calll - <ZwSetValueKey>;movl %eax, %esi;cmpl %edi, %esi;jl  <KeFindConfigurationEntry+>;pushl $": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl ;movl $, %ebx;pushl %edi": 1,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);calll - <ObCreateObject>;movl -(%ebp), %esi;pushl %edi": 1,
                "movl -(%ebp), %esi;pushl %edi;pushl -(%ebp);movl %eax, -(%ebp);calll - <ExFreePoolWithTag>": 1,
                "pushl %edi;pushl %edi;pushl %edi;pushl %esi;calll - <ObInsertObject>": 1,
                "pushl %edi;pushl %edi;pushl $;pushl ;calll - <ObReferenceObjectByHandle>": 1,
                "xorl %edi, %edi;pushl %eax;incl %edi;xorl %ebx, %ebx;pushl %edi": 1,
                "movl %eax, ;pushl %ebx;jne  <KeFindConfigurationEntry+>;pushl %esi;pushl %edi": 1,
                "movw %bx, (%ecx,%eax,);addw $, ;movl (%esi), %esi;cmpl %ebx, %esi;leal (%ebp), %eax": 1,
                "pushl %ebx;pushl %edi;pushl $;pushl %ebx;pushl %eax": 1,
                "testl %eax, %eax;jl  <KeFindConfigurationEntry+>;movb $, -(%ebp);jmp  <KeFindConfigurationEntry+>;pushl $": 1,
                "movl %eax, %esi;pushl %esi;pushl -(%ebp);pushl (%ebp);pushl %ebx": 1,
                "subl $, %esp;leal -(%ebp), %eax;pushl %esi;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "jl  <KeFindConfigurationEntry+>;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "movl (%edi), %edi;leal -(%ebp), %eax;cmpl %eax, %edi;jne - <KeFindConfigurationEntry+>;movl -(%ebp), %eax": 1,
                "xorl %ebx, %ebx;cmpb %bl, %al;pushl %esi;je  <KeFindConfigurationEntry+>;movb %al, ": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl %eax, ;calll - <LsaDeregisterLogonProcess+>;calll - <KeFindConfigurationEntry+>": 1,
                "pushl %ebx;pushl %ebx;pushl %esi;pushl %ebx;pushl $": 1,
                "jge  <KeFindConfigurationEntry+>;pushl %ebx;pushl %eax;pushl $;jmp  <KeFindConfigurationEntry+>": 3,
                "pushl %esi;calll - <ExAllocatePoolWithTag>;cmpl %ebx, %eax;movl %eax, ;jne  <KeFindConfigurationEntry+>": 1,
                "cmpl %ebx, %eax;movl %eax, ;jne  <KeFindConfigurationEntry+>;pushl %ebx;pushl %ebx": 1,
                "pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "jge  <KeFindConfigurationEntry+>;pushl %eax;pushl $;jmp  <KeFindConfigurationEntry+>;pushl %ebx": 1,
                "pushl %edi;calll - <KeFindConfigurationEntry+>;cmpl %ebx, %eax;pushl %ebx;jge  <KeFindConfigurationEntry+>": 1,
                "movl (%edi), %eax;cmpl $, (%eax);popl %edi;jb  <KeFindConfigurationEntry+>;movl (%eax), %eax": 1,
                "int;movl %edi, %edi;pushl %esi;movl , %esi;pushl $": 1,
                "movl , %esi;pushl $;xorl %edx, %edx;movl %esi, %eax;popl %ecx": 1,
                "movl $, %ecx;cmpl %ecx, %eax;jae  <KeFindConfigurationEntry+>;movl %ecx, %eax;movl %eax, ": 1,
                "calll *(%esi);movl %eax, %edi;testl %edi, %edi;jne  <KeFindConfigurationEntry+>;xorb %al, %al": 1,
                "cmpl $-, %eax;je - <KeFindConfigurationEntry+>;pushl %eax;pushl %esi;calll *(%esi)": 1,
                "pushl %edi;movzwl (%ecx), %edi;addl %eax, %edi;cmpl %eax, %edi;jbe  <KeFindConfigurationEntry+>": 1,
                "jne  <KeFindConfigurationEntry+>;movl %edi, -(%ebp);decl %edi;decl %edi;cmpw $, -(%edi)": 1,
                "decl %edi;cmpw $, -(%edi);je  <KeFindConfigurationEntry+>;cmpl %eax, %edi;jne - <KeFindConfigurationEntry+>": 1,
                "cmpl $, (%esi);movl (%esi), %eax;movl %eax, (%ebp);je  <KeFindConfigurationEntry+>;pushl $": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);movl %ebx, (%esi);movl %esi, (%eax);movl %esi, (%ebx)": 1,
                "movl %esi, (%eax);movl %esi, (%ebx);cmpl %ebx, (%ebp);jne - <KeFindConfigurationEntry+>;movl (%ebp), %ecx": 1,
                "cmpl %ebx, %eax;jne - <KeFindConfigurationEntry+>;popl %esi;popl %edi;movb $, %al": 1,
                "calll - <LsaDeregisterLogonProcess+>;movl -(%ebp), %eax;testl %eax, %eax;je  <KeFindConfigurationEntry+>;movl (%eax), %edx": 1,
                "je  <KeFindConfigurationEntry+>;movl (%eax), %edx;xorl %esi, %esi;incl %esi;cmpl %esi, %edx": 1,
                "jb  <KeFindConfigurationEntry+>;movl (%edi), %ecx;cmpl %ecx, (%eax,%esi,);je  <KeFindConfigurationEntry+>;incl %esi": 1,
                "jae  <KeFindConfigurationEntry+>;popl %esp;addb %al, (%eax);addb %al, (%eax);addb %ch, (%esi)": 1,
                "movl %eax, %ebx;xorl %ecx, %ecx;cmpl %ecx, %ebx;je  <KeFindConfigurationEntry+>;movl %ecx, (%ebx)": 1,
                "cmpl %ecx, %ebx;je  <KeFindConfigurationEntry+>;movl %ecx, (%ebx);movl %ecx, (%ebx);testb $, (%esi)": 1,
                "je - <KeFindConfigurationEntry+>;leal (%ebp), %ecx;pushl %ecx;pushl %eax;pushl %edi": 3,
                "testl %eax, %eax;movl %eax, (%esi);je - <KeFindConfigurationEntry+>;pushl (%ebp);pushl %esi": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;je - <KeFindConfigurationEntry+>;movl (%eax), %eax;movl %eax, (%ebx)": 1,
                "jne  <KeFindConfigurationEntry+>;xorl %eax, %eax;movl %eax, (%ebx);jmp  <KeFindConfigurationEntry+>;pushl %eax": 1,
                "insb %dx, %es:(%edi);addb %al, (%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <KeFindConfigurationEntry+>": 1,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %dh, (%ebp);jo  <KeFindConfigurationEntry+>;decl %edi": 1,
                "cmpl %edi, %esi;je  <KeFindConfigurationEntry+>;pushl %ebx;movl %esi, %ebx;movl %esi, (%ebp)": 1,
                "calll - <KeFindConfigurationEntry+>;cmpl %edi, %esi;jne - <KeFindConfigurationEntry+>;popl %ebx;popl %edi": 1,
                "addb %dh, %gs:(%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <KeFindConfigurationEntry+>;imull $, (%eax), %eax": 3,
                "calll *(%esi);cmpl %ebx, %eax;movl %eax, -(%ebp);je  <KeFindConfigurationEntry+>;pushl $": 1,
                "xorb %al, %al;jmp  <KeFindConfigurationEntry+>;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <RtlAppendUnicodeToString>;pushl %ebx;pushl -(%ebp)": 1,
                "calll - <KeFindConfigurationEntry+>;testb %al, %al;je - <KeFindConfigurationEntry+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "testb %al, %al;je - <KeFindConfigurationEntry+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ecx,%eax), %ecx;cmpl %ecx, %esi;movl %ecx, -(%ebp);jae  <KeFindConfigurationEntry+>;leal (%esi), %edi": 1,
                "cmpb $, (%esi);jne  <KeFindConfigurationEntry+>;cmpb $, (%esi);jne  <KeFindConfigurationEntry+>;movb -(%esi), %al": 1,
                "jg  <KeFindConfigurationEntry+>;movb (%esi), %al;cmpb $, %al;jl  <KeFindConfigurationEntry+>;cmpb $, %al": 3,
                "cmpl %eax, %ecx;sbbl %eax, %eax;negl %eax;cmpl %edi, %ecx;sbbl %ecx, %ecx": 1,
                "sbbl %eax, %eax;negl %eax;cmpl %edi, %ecx;sbbl %ecx, %ecx;negl %ecx": 1,
                "jmp  <KeFindConfigurationEntry+>;cmpl $, -(%ebp);jae  <KeFindConfigurationEntry+>;movb $, -(%ebp);movb $, -(%ebp)": 1,
                "cmpb $, -(%ebp);je  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movb -(%ebp), %al;movb %al, (%ebx);movb -(%ebp), %al;movb %al, (%ebx);addl $, %esp": 1,
                "jne  <KeFindConfigurationEntry+>;movb (%eax), %cl;cmpb $, %cl;jl  <KeFindConfigurationEntry+>;cmpb $, %cl": 1,
                "jl  <KeFindConfigurationEntry+>;cmpb $, %cl;jle  <KeFindConfigurationEntry+>;incl %eax;cmpl %edx, %eax": 1,
                "cmpl %ebx, ;je - <KeFindConfigurationEntry+>;movl $, %eax;pushl (%eax);pushl %edi": 1,
                "int;andb %ch, ;int;int;int": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $;calll  <KeFindConfigurationEntry+>": 1,
                "leal (%edi,%eax), %ecx;cmpl $, %ecx;jb - <KeFindConfigurationEntry+>;pushl (%esi);pushl $": 1,
                "calll - <MmUnmapIoSpace>;movb $, %al;popl %edi;jmp  <KeFindConfigurationEntry+>;xorb %al, %al": 1,
                "pushl %eax;pushl $;calll  <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>": 1,
                "movzbl (%eax), %ecx;movl %ecx, (%esi);cmpb $, (%eax);pushl %ebx;pushl (%ebp)": 1,
                "pushl %ebx;pushl (%ebp);seta %bl;pushl %eax;calll - <MmUnmapIoSpace>": 1,
                "jo  <KeFindConfigurationEntry+>;imull $, (%edi), %ebp;int;int;movl %edi, %edi": 1,
                "movsl (%esi), %es:(%edi);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "movsw (%esi), %es:(%edi);calll - <strchr>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <strchr>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll - <atoi>": 1,
                "pushl %esi;calll - <atoi>;popl %ecx;jmp  <KeFindConfigurationEntry+>;xorl %eax, %eax": 1,
                "outsl (%esi), %dx;addb %ah, (%ebx);addb %dh, %gs:(%ebx);jae  <KeFindConfigurationEntry+>;outsl (%esi), %dx": 1,
                "addb %dh, (%edx);addb %al, (%eax);addb %al, (%eax);cmpb %dh, (%eax);xorl (%eax), %edi": 1,
                "jb  <KeFindConfigurationEntry+>;jns  <KeFindConfigurationEntry+>;addb %al, (%eax);addb %al, (%eax);pushl %ebx": 1,
                "incl %esp;addb %ah, (%ecx);je  <KeFindConfigurationEntry+>;addb %al, %gs:(%eax);addb %al, (%eax)": 1,
                "jne  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;addb %al, %gs:(%eax);addb %al, (%eax);addb %dl, (%eax)": 1,
                "movl (%ebp), %eax;pushl $;movl %eax, -(%ebp);xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "pushl $;setne %al;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "jl  <KeFindConfigurationEntry+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ebx": 1,
                "incl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %edx, %ecx;shll %cl, %eax": 1,
                "cmpb %bl, (%esi);pushl %ecx;jne  <KeFindConfigurationEntry+>;addl $, %eax;pushl %eax": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <KeFindConfigurationEntry+>;cmpl %ebx, %eax": 1,
                "jl  <KeFindConfigurationEntry+>;cmpb %bl, ;je  <KeFindConfigurationEntry+>;xorl %eax, %eax;pushl $": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);cmpb $, (%esi);jne  <KeFindConfigurationEntry+>;movl $, %esi;leal -(%ebp), %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <LsaDeregisterLogonProcess+>;leal (%esi), %edi": 2,
                "je  <KeFindConfigurationEntry+>;movb (%eax), %dl;movb %dl, %cl;cmpb (%edi), %dl;jne  <KeFindConfigurationEntry+>": 1,
                "movb (%eax), %dl;movb %dl, %cl;cmpb (%edi), %dl;jne  <KeFindConfigurationEntry+>;incl %eax": 1,
                "cmpb %bl, (%eax);je  <KeFindConfigurationEntry+>;orb $, ;movsbl , %eax;incl -(%ebp)": 1,
                "movl , %eax;cmpl %ebx, %eax;je  <KeFindConfigurationEntry+>;pushl %ebx;pushl %eax": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwOpenSection>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <ZwOpenSection>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;pushl $;pushl $;pushl $": 1,
                "movl %eax, -(%ebp);je  <KeFindConfigurationEntry+>;movl %ebx, -(%ebp);cmpl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "je  <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;decl %eax;negl %eax": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp);pushl $;pushl %ebx": 1,
                "calll - <ZwUnmapViewOfSection>;pushl -(%ebp);calll - <ZwClose>;cmpl %ebx, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "movl (%ebp), %eax;pushl %edi;movl %ecx, -(%ebp);jne  <KeFindConfigurationEntry+>;movl %esi, (%ebx)": 1,
                "cmpl %esi, %eax;jl  <KeFindConfigurationEntry+>;cmpl %esi, (%ebx);je  <KeFindConfigurationEntry+>;movl (%ebx), %eax": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;movl %eax, %edi;cmpl %esi, %edi;je  <KeFindConfigurationEntry+>": 1,
                "movl (%ebx), %ecx;movl (%ebx), %esi;jmp  <KeFindConfigurationEntry+>;movl %esi, (%ebx);movl %esi, (%ebx)": 1,
                "leal (,%eax,), %eax;cmpl %edi, (%eax);jne - <KeFindConfigurationEntry+>;movzwl %bx, %eax;shll $, %eax": 1,
                "incl ;movl %edi, -(%ebp);jmp  <KeFindConfigurationEntry+>;movl , %ebx;incl ": 1,
                "cmpl %edi, %esi;jne - <KeFindConfigurationEntry+>;xorl %eax, %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "leave;retl $;pushl -(%ebp);calll - <NtClose>;movl %edi, %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;cmpl %esi, %eax;jl  <KeFindConfigurationEntry+>;pushl (%ebp);calll - <NtClose>": 1,
                "movl %eax, %edi;jmp  <KeFindConfigurationEntry+>;xorl %edi, %edi;pushl %esi;pushl ": 1,
                "calll - <NtClose>;movl %edi, %eax;popl %edi;popl %esi;popl %ebx": 2,
                "pushl %edi;pushl ;pushl $;calll - <RtlInitUnicodeString>;pushl ": 1,
                "calll - <RtlInitUnicodeString>;movl $, %edi;xorl %esi, %esi;pushl (%esi);pushl %edi": 1,
                "incl %ebx;testb %al, %al;je  <KeFindConfigurationEntry+>;pushl %ebx;pushl (%ebp)": 1,
                "popl %ebx;popl %ebp;retl $;int;incl %edx": 1,
                "cmpl $, (%ebp);movb $, -(%ebp);je  <KeFindConfigurationEntry+>;pushl %edi;movl (%ebp), %edi": 1,
                "movl (%edi), %eax;pushl %ebx;pushl $;pushl %esi;movl %eax, -(%ebp)": 1,
                "pushl $;pushl %ebx;calll - <wctomb+>;addl $, %esp;testb %al, %al": 1,
                "pushl $;pushl %esi;calll - <_stricmp>;testl %eax, %eax;popl %ecx": 1,
                "movb (%ecx), %dl;incl %ecx;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;subl %edi, %ecx": 1,
                "incl %ecx;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;subl %edi, %ecx;movl %ecx, %edx": 1,
                "movl $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);calll - <ZwOpenSection>;testl %eax, %eax": 1,
                "andl $, %ecx;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "movl %edi, -(%ebp);calll - <ZwMapViewOfSection>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;movl (%ebp), %eax": 1,
                "movl %esi, %edi;movl %eax, (%ebx);popl %esi;movl %edi, %eax;popl %edi": 1,
                "popl %ebx;leave;retl $;int;cmpl $, %eax": 1,
                "retl $;int;cmpl $, %eax;cmpl $, %eax;addb %al, (%eax)": 2,
                "xorl %edx, %edx;rep  cmpsb %es:(%edi), (%esi);je  <KeFindConfigurationEntry+>;pushl %eax;pushl $": 1,
                "movl (%ebp), %eax;cmpl (%ebp), %eax;setne %al;jmp  <KeFindConfigurationEntry+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %esi;addl %esi, %ebx;leal (%esi,%edi), %eax;cmpl %ebx, %eax;jae  <KeFindConfigurationEntry+>": 1,
                "jae  <KeFindConfigurationEntry+>;movl %eax, (%ebp);cmpb $, (%ebp);pushl %edi;pushl (%ebp)": 1,
                "pushl %edi;pushl (%ebp);pushl %esi;je  <KeFindConfigurationEntry+>;calll - <_strnicmp>": 1,
                "popl %ebx;popl %ebp;retl $;movl %esi, %eax;jmp - <KeFindConfigurationEntry+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>": 7,
                "movb (%eax), %dl;movzbl %dl, %ecx;xorl %esi, %esi;xorl %ebx, %ebx;testl %ecx, %ecx": 1,
                "retl $;incl %ebx;insb %dx, %es:(%edi);popal;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;jne  <KeFindConfigurationEntry+>;addb %cl, %ah;int;int": 1,
                "pushl %edi;pushl (%ebp);pushl %esi;calll  <KeFindConfigurationEntry+>;cmpl %ebx, %eax": 1,
                "pushl (%ebp);movl %eax, -(%ebp);calll  <KeFindConfigurationEntry+>;pushl $;pushl %esi": 1,
                "movl %eax, (%ebp);calll  <KeFindConfigurationEntry+>;pushl $;pushl %esi;pushl %edi": 1,
                "pushl %ebx;pushl -(%ebp);addl %eax, %esi;shll $, %esi;calll - <wctomb+>": 1,
                "pushl $;movw %ax, (%ebp);leal (%ebp), %eax;pushl %ebx;pushl %eax": 2,
                "testb %al, %al;je  <KeFindConfigurationEntry+>;pushl $;pushl %ebx;pushl -(%ebp)": 2,
                "pushl %eax;calll - <KeFindConfigurationEntry+>;cmpl %ebx, %eax;je  <KeFindConfigurationEntry+>;pushl -(%ebp)": 1,
                "pushl %ecx;pushl %eax;calll - <RtlCompareMemory>;pushl -(%ebp);cmpl -(%ebp), %eax": 3,
                "pushl %ebx;pushl %ebx;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "testb %al, %al;je  <KeFindConfigurationEntry+>;pushl $;pushl $;pushl %ebx": 1,
                "pushl %esi;movl %eax, -(%ebp);calll  <KeFindConfigurationEntry+>;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "pushl %edi;pushl %esi;movl $, -(%ebp);calll - <KeFindConfigurationEntry+>;testb %al, %al": 1,
                "addl $, %esp;shll $, %esi;jmp  <KeFindConfigurationEntry+>;calll - <wctomb+>;pushl %edi": 1,
                "addl $, %esp;addl %eax, %esi;pushl $;pushl %esi;leal -(%ebp), %eax": 2,
                "je  <KeFindConfigurationEntry+>;pushl -(%ebp);leal -(%ebp), %ecx;pushl -(%ebp);pushl %ecx": 1,
                "pushl %eax;calll - <KeFindConfigurationEntry+>;movl %eax, %ebx;testl %ebx, %ebx;je  <KeFindConfigurationEntry+>": 1,
                "calll - <KeFindConfigurationEntry+>;movl %eax, %ebx;testl %ebx, %ebx;je  <KeFindConfigurationEntry+>;pushl $": 1,
                "je  <KeFindConfigurationEntry+>;pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>;movl (%eax), %esi;movzwl (%eax), %eax": 1,
                "jne  <KeFindConfigurationEntry+>;movzwl (%eax), %ecx;leal (%eax,%ecx), %eax;pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "movzwl (%eax), %ecx;leal (%eax,%ecx), %eax;pushl -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "insb %dx, %es:(%edi);je  <KeFindConfigurationEntry+>;jne  <KeFindConfigurationEntry+>;arpl %si, (%ecx,%ebp,);outsb (%esi), %dx": 2,
                "imull $, (%bp,%di), %esi;jns  <KeFindConfigurationEntry+>;orb (%eax), %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl %eax;decl %ecx;andb %al, (%edx);decl %edi;pushl %ebx": 1,
                "calll - <ZwOpenKey>;cmpl %ebx, %eax;movl %eax, -(%ebp);jge  <KeFindConfigurationEntry+>;pushl $": 1,
                "pushl -(%ebp);calll - <KeFindConfigurationEntry+>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %eax": 1,
                "je  <KeFindConfigurationEntry+>;movl %eax, %edx;shrl %edx;cmpw %bx, -(%ecx,%edx,);jne  <KeFindConfigurationEntry+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlEqualUnicodeString>;pushl %ebx": 1,
                "pushl -(%ebp);calll - <ZwClose>;movl $, %eax;jmp  <KeFindConfigurationEntry+>;movl -(%ebp), %esi": 1,
                "leal (%eax,%eax,), %edi;pushl $;leal (,%edi,), %edi;pushl %edi;pushl %ebx": 1,
                "pushl %ebx;incl %esp;pushl %esp;andb %ah, (%ecx);andb %ah, ": 3,
                "incl %ecx;incl %esp;pushl %esp;andb %ah, (%ecx);andb %ah, ": 1,
                "movl %edi, ;calll - <KeFindConfigurationEntry+>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;xorl %eax, %eax": 1,
                "testl %eax, %eax;jge  <KeFindConfigurationEntry+>;xorl %eax, %eax;jmp  <KeFindConfigurationEntry+>;movl -(%ebp), %eax": 1,
                "pushl %edi;pushl %eax;movl %ecx, ;calll - <ExFreePoolWithTag>;movl , %ecx": 1,
                "cmpl $, (%ebp);jne  <KeFindConfigurationEntry+>;movl %esi, -(%ebp);movl %ebx, -(%ebp);jmp  <KeFindConfigurationEntry+>": 1,
                "calll - <KeFindConfigurationEntry+>;cmpl %edi, %eax;je  <KeFindConfigurationEntry+>;pushl -(%ebp);movl (%eax), %edi": 1,
                "calll - <MmMapIoSpace>;movl %eax, %edi;testl %edi, %edi;movl %edi, -(%ebp);jne  <KeFindConfigurationEntry+>": 1,
                "cmpl %ebx, %eax;movl %eax, %ecx;jb  <KeFindConfigurationEntry+>;movl %ebx, %ecx;subl %ecx, %eax": 1,
                "xorl %eax, %eax;pushl %eax;pushl %edi;calll - <MmMapIoSpace>;movl %eax, %esi": 1,
                "pushl %edi;calll - <MmMapIoSpace>;movl %eax, %esi;testl %esi, %esi;je  <KeFindConfigurationEntry+>": 1,
                "calll - <MmMapIoSpace>;pushl %ebx;pushl %esi;movl %eax, -(%ebp);calll - <MmUnmapIoSpace>": 1,
                "cmpl $, -(%ebp);jne  <KeFindConfigurationEntry+>;xorl %eax, %eax;pushl %eax;pushl %edi": 1,
                "movl %eax, -(%ebp);pushl %edi;pushl %esi;movb $, -(%ebp);movb $, -(%ebp)": 1,
                "testl %ebx, %ebx;movl %eax, -(%ebp);je  <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>": 1,
                "pushl %eax;calll - <RtlInitString>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlEqualString>;pushl -(%ebp)": 1,
                "calll - <KeFindConfigurationEntry+>;movl %eax, %esi;testl %esi, %esi;je  <KeFindConfigurationEntry+>;leal -(%ebp), %eax": 3,
                "movb $, (%edi);movl (%ebp), %eax;movl (%eax), %esi;movl (%ebp), %ebx;cmpl %ebx, %esi": 1,
                "popl %ecx;je  <KeFindConfigurationEntry+>;incl %ebx;cmpl (%ebp), %ebx;jb - <KeFindConfigurationEntry+>": 1,
                "popl %ecx;jne  <KeFindConfigurationEntry+>;incl %esi;cmpl %ebx, %esi;jb - <KeFindConfigurationEntry+>": 1,
                "pushl $;calll - <ExAllocatePoolWithTag>;testl %eax, %eax;movl %eax, -(%ebp);jne  <KeFindConfigurationEntry+>": 1,
                "movl $, (%edi);jmp  <KeFindConfigurationEntry+>;pushl %ebx;pushl -(%ebp);pushl %eax": 1,
                "movl %ebx, (%edi);jmp  <KeFindConfigurationEntry+>;movl $, (%edi);jmp  <KeFindConfigurationEntry+>;movl $, (%edi)": 1,
                "jmp  <KeFindConfigurationEntry+>;movl (%ebp), %eax;movl %esi, (%eax);andl $, (%edi);andl $, (%edi)": 1,
                "movb (%eax), %dl;incl %eax;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;subl %ecx, %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;jne  <KeFindConfigurationEntry+>;cmpl $, %ebx;jbe  <KeFindConfigurationEntry+>": 1,
                "popl %esi;movl (%ebp), %eax;popl %edi;popl %ebx;popl %ebp": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <KeFindConfigurationEntry+>": 4,
                "pushl $;pushl %eax;calll - <ExFreePoolWithTag>;pushl (%esi);calll - <KeFindConfigurationEntry+>": 2,
                "je  <KeFindConfigurationEntry+>;movl (%esi), %eax;testl %eax, %eax;je  <KeFindConfigurationEntry+>;pushl (%ebp)": 1,
                "testl %eax, %eax;je  <KeFindConfigurationEntry+>;pushl (%ebp);pushl %eax;calll - <_stricmp>": 1,
                "pushl (%ebp);pushl (%ebp);calll - <KeFindConfigurationEntry+>;negl %eax;sbbl %eax, %eax": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl (%ebp);calll - <KeFindConfigurationEntry+>;testl %eax, %eax": 2,
                "pushl %esi;pushl (%ebp);xorl %esi, %esi;pushl (%ebp);calll - <KeFindConfigurationEntry+>": 2,
                "calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>;cmpb $, (%eax);je  <KeFindConfigurationEntry+>": 1,
                "jmp  <KeFindConfigurationEntry+>;xorb %al, %al;popl %ebp;retl $;int": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %edi;pushl (%ebp)": 1,
                "pushl %eax;calll - <KeFindConfigurationEntry+>;testl %eax, %eax;je  <KeFindConfigurationEntry+>;pushl %ebx": 1,
                "movl (%eax), %esi;xorl %eax, %eax;testl %esi, %esi;je  <KeFindConfigurationEntry+>;cmpl (%ebp), %eax": 1,
                "testl %esi, %esi;je  <KeFindConfigurationEntry+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "incl (%ebp);movb %al, (%ecx);movl (%esi), %esi;testl %esi, %esi;jne - <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;movb $, -(%ebp);popl %esi;popl %ebx;movl (%ebp), %eax": 1,
                "testl %edi, %edi;je  <KeFindConfigurationEntry+>;movl (%ebx), %esi;testl %esi, %esi;je  <KeFindConfigurationEntry+>": 1,
                "movw (%eax), %ax;cmpw %cx, %ax;jne  <KeFindConfigurationEntry+>;movl $, (%ebp);jmp  <KeFindConfigurationEntry+>": 1,
                "cmpw %dx, %cx;jne  <KeFindConfigurationEntry+>;movl $, (%ebp);jmp  <KeFindConfigurationEntry+>;andw %ax, %cx": 1,
                "movl $, (%ebp);jmp  <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>;movl $, (%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>;movl $, (%ebp);movl (%ebp), %eax": 1,
                "cmpl (%ebx), %eax;jle  <KeFindConfigurationEntry+>;movl %esi, (%ebx);andl $, (%ebx);andl $, (%ebx)": 1,
                "cmpl %ebx, %esi;jne  <KeFindConfigurationEntry+>;xorl %eax, %eax;jmp  <KeFindConfigurationEntry+>;movl (%ebp), %eax": 1,
                "movb (%eax), %cl;movb %cl, (%edx,%eax);incl %eax;cmpb %bl, %cl;jne - <KeFindConfigurationEntry+>": 1,
                "movb -(%ebp), %al;movl %ecx, -(%ebp);movb %al, -(%ebp);jmp  <KeFindConfigurationEntry+>;movl %edi, -(%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;movl %edi, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);jmp  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;movl %ebx, -(%ebp);jmp  <KeFindConfigurationEntry+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "movb $, (%ebp);je  <KeFindConfigurationEntry+>;movl %ebx, -(%ebp);jmp  <KeFindConfigurationEntry+>;movl -(%ebp), %eax": 1,
                "pushl %esi;movl %edi, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);calll - <KeFindConfigurationEntry+>": 3,
                "cmpl %ebx, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);je  <KeFindConfigurationEntry+>": 1,
                "cmpl %ebx, -(%ebp);je  <KeFindConfigurationEntry+>;cmpb %bl, -(%ebp);je  <KeFindConfigurationEntry+>;pushl %ebx": 1,
                "movb %bl, -(%ebp);calll - <KeFindConfigurationEntry+>;testb %al, %al;jne - <KeFindConfigurationEntry+>;movb $, (%ebp)": 1,
                "jmp - <KeFindConfigurationEntry+>;cmpl $, -(%ebp);jne  <KeFindConfigurationEntry+>;incl -(%ebp);cmpb %bl, (%ebp)": 1,
                "je - <KeFindConfigurationEntry+>;cmpl %ebx, %esi;je  <KeFindConfigurationEntry+>;movl %ebx, (%esi);movl %esi, %eax": 1,
                "popl %ds;popl %ebp;addb %bh, (%edi,%ebx);popl %ebp;addb %al, (%edx)": 1,
                "jo  <KeFindConfigurationEntry+>;jo  <KeFindConfigurationEntry+>;outsb (%esi), %dx;decl %ecx;outsb (%esi), %dx": 1,
                "xorl %esi, %esi;andl %esi, -(%ebp);movl -(%ebp), %eax;pushl (%eax);pushl %edi": 1,
                "movb %al, -(%ebp);incl (%ebp);pushl (%ebp);pushl (%ebp);pushl %ebx": 1,
                "pushl %ebx;calll - <KeFindConfigurationEntry+>;movl %eax, %edi;testl %edi, %edi;jne - <KeFindConfigurationEntry+>": 1,
                "movb $, -(%ebp);cmpl $, (%ebp);popl %esi;je  <KeFindConfigurationEntry+>;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);popl %edi;movb -(%ebp), %al;popl %ebx;leave": 1,
                "movl $, %edi;movl %edi, -(%ebp);jbe  <KeFindConfigurationEntry+>;cmpl $, %ecx;jbe  <KeFindConfigurationEntry+>": 1,
                "movl %eax, (%ebp);je  <KeFindConfigurationEntry+>;movl (%ebp), %eax;addl %edi, %eax;pushl %eax": 1,
                "je  <KeFindConfigurationEntry+>;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlInitAnsiString>": 2,
                "movl -(%ebp), %eax;leal (%eax,%eax), %eax;movw %ax, -(%ebp);pushl %ebx;leal -(%ebp), %eax": 1,
                "movzwl -(%ebp), %eax;addl %eax, -(%ebp);incl %esi;cmpl (%ebp), %esi;jb - <KeFindConfigurationEntry+>": 1,
                "cmpl (%ebp), %esi;jne  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;movw %bx, (%eax);movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %esi;movl %eax, (%esi);je  <KeFindConfigurationEntry+>;pushl (%ebp);pushl (%ebp)": 1,
                "jne  <KeFindConfigurationEntry+>;pushl %ebx;pushl (%edi);pushl (%esi);pushl (%ebp)": 1,
                "movl (%ebp), %ecx;leal (%eax,%eax), %eax;pushl $;movl %eax, (%ecx);pushl %eax": 1,
                "movl %eax, -(%ebp);movl %ebx, (%esi);je  <KeFindConfigurationEntry+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "je  <KeFindConfigurationEntry+>;jmp - <KeFindConfigurationEntry+>;movl $, -(%ebp);jmp  <KeFindConfigurationEntry+>;movl %edi, -(%ebp)": 1,
                "testb %cl, %cl;jne - <KeFindConfigurationEntry+>;subl %edx, %eax;pushl $;pushl (%ebp)": 1,
                "movb (%eax), %dl;incl %eax;testb %dl, %dl;jne - <KeFindConfigurationEntry+>;movl %ebx, %edi": 1,
                "insb %dx, %es:(%edi);je  <KeFindConfigurationEntry+>;pushl %ebx;jp  <KeFindConfigurationEntry+>;andb %al, (%esi)": 2,
                "cmpl %esi, %eax;movl %eax, -(%ebp);jl  <KeFindConfigurationEntry+>;leal (%ebp), %eax;pushl %eax": 1,
                "jl  <KeFindConfigurationEntry+>;leal (%ebp), %eax;pushl %eax;pushl %esi;pushl %esi": 2,
                "pushl %eax;pushl (%ebp);movl %esi, (%ebp);calll - <ZwQueryValueKey>;cmpl %esi, (%ebp)": 1,
                "pushl (%ebp);movl %esi, (%ebp);calll - <ZwQueryValueKey>;cmpl %esi, (%ebp);movl %eax, -(%ebp)": 1,
                "je  <KeFindConfigurationEntry+>;movl (%ebx), %ecx;movl (%ebx), %esi;movl %ecx, %edx;shrl $, %ecx": 1,
                "pushl %edi;pushl (%ebp);movl $, %esi;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl %edi;pushl (%ebp);calll - <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;cmpl $, %edi;je  <KeFindConfigurationEntry+>;movl $, %eax;jmp  <KeFindConfigurationEntry+>": 1,
                "andl $, %ecx;pushl %ecx;pushl %esi;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl %ecx;pushl %ecx;pushl %ecx;pushl $;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll - <ZwDeleteValueKey>;jmp  <KeFindConfigurationEntry+>;andl $-, (%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;testb $, (%ebp);je  <KeFindConfigurationEntry+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>;pushl -(%ebp)": 1,
                "jmp  <KeFindConfigurationEntry+>;testb $, (%ebp);je  <KeFindConfigurationEntry+>;xorl %esi, %esi;movl %esi, %eax": 1,
                "calll - <KeFindConfigurationEntry+>;pushl $;pushl (%ebp);movl %eax, %edi;pushl (%ebp)": 1,
                "pushl %ebx;movl %eax, (%ebp);pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <KeFindConfigurationEntry+>;movl %eax, %esi;testl %esi, %esi;jl  <KeFindConfigurationEntry+>;cmpl $, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <ZwDeleteValueKey>;movl %eax, %esi": 1,
                "calll - <ZwDeleteValueKey>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll - <RtlFreeUnicodeString>": 1,
                "je  <KeFindConfigurationEntry+>;bound (%ebp), %esp;jb  <KeFindConfigurationEntry+>;popal;andb %ah, %fs:(%esi)": 1,
                "je  <KeFindConfigurationEntry+>;pushl $;pushl %ebx;pushl (%ebp);pushl %esi": 1,
                "movl %esi, (%ebp);calll - <ZwQueryValueKey>;cmpl %esi, (%ebp);movl %eax, %edi;je  <KeFindConfigurationEntry+>": 1,
                "cmpl %esi, (%ebp);movl %eax, %edi;je  <KeFindConfigurationEntry+>;pushl $;pushl (%ebp)": 1,
                "jne  <KeFindConfigurationEntry+>;cmpl $, (%esi);jne  <KeFindConfigurationEntry+>;movl (%esi), %eax;movl -(%ebp), %ecx": 1,
                "notb %cl;andb %cl, (%eax);pushl (%esi);movl (%esi), %eax;addl %esi, %eax": 1,
                "jne  <KeFindConfigurationEntry+>;addb %cl, (%bx);bound (%eax), %eax;pushl $;addb %ah, %gs:(%ebx)": 1,
                "movl $, %esi;pushl %eax;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movb $, ;movl %ebx, ;calll - <RtlInitUnicodeString>;movl %esi, -(%ebp);movw $, -(%ebp)": 1,
                "cmpl %ebx, ;jne  <KeFindConfigurationEntry+>;movl $, ;popl %edi;popl %esi": 1,
                "cmpb (%eax), %al;addb %al, (%eax);addb %al, (%eax);popl %esp;addb %al, (%eax,%eax)": 1,
                "je  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;pushl $;movb $, (%ebx);movl (%eax), %eax": 1,
                "pushl %eax;calll - <IoCreateSymbolicLink>;testl %eax, %eax;jge  <KeFindConfigurationEntry+>;pushl $": 1,
                "popl %edi;popl %esi;movb $, (%ebx);popl %ebx;calll - <KeRaiseUserException+>": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;pushl $;pushl $;movl $, -(%ebp)": 1,
                "movl %eax, %edi;calll - <NtClose>;movl %edi, %eax;popl %edi;popl %esi": 1,
                "cmpw $, (%esi);pushl %edi;movl (%eax), %edi;je  <KeFindConfigurationEntry+>;leal (%edi), %ebx": 1,
                "popl %ecx;popl %ecx;je  <KeFindConfigurationEntry+>;pushl %esi;calll - <wcslen>": 1,
                "addb %al, (%edx);incl %ebp;addb %dh, (%ecx);addb %dh, (%eax);addb %dh, (%ebx)": 4,
                "addb %dh, (%edi);addb %al, (%eax,%eax);addb %dh, (%eax,%eax);xorb %al, (%eax);subl $, %eax": 3,
                "addb %bh, (%ecx);addb %dh, ;addb %al, (%eax);addb %dl, (%eax);outsb (%esi), %dx": 1,
                "addb %dl, (%eax);outsb (%esi), %dx;addb %dl, (%eax);decl %ecx;addb %ch, (%esi)": 1,
                "addb %dh, %gs:(%eax,%eax);addb %ah, (%ecx);jb  <KeFindConfigurationEntry+>;addb %cl, %fs:(%ecx);outsb (%esi), %dx": 2,
                "addb %bh, (%eax);addb %bh, (%ebp);popl %esp;addb %dh, (%eax);addb %dh, (%eax)": 2,
                "outsb (%esi), %dx;addb %ah, (%esi);outsl (%esi), %dx;addb %al, (%eax);addb %cl, (%eax)": 1,
                "jbe  <KeFindConfigurationEntry+>;imull $, (%eax), %eax;decl %ecx;addb %ch, (%esi);jae  <KeFindConfigurationEntry+>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);je  <KeFindConfigurationEntry+>;xorl %eax, %eax;jmp  <KeFindConfigurationEntry+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);calll - <IoReportResourceUsage+>;cmpl %ebx, %eax": 1,
                "calll - <ZwCreateKey>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;pushl $;popl %ecx": 1,
                "movl $, -(%ebp);calll - <ZwQueryValueKey>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;cmpl $, -(%ebp)": 2,
                "pushl -(%ebp);calll - <ZwSetValueKey>;pushl $;pushl $;pushl $": 1,
                "movl %edi, %eax;leal (%eax), %ecx;movb (%eax), %dl;incl %eax;cmpb %bl, %dl": 3,
                "leal (%eax), %ecx;movb (%eax), %dl;incl %eax;cmpb %bl, %dl;jne - <KeFindConfigurationEntry+>": 3,
                "pushl %eax;pushl -(%ebp);calll - <ZwSetValueKey>;movl %edi, %eax;leal (%eax), %ecx": 2,
                "cmpb %bl, %dl;jne - <KeFindConfigurationEntry+>;jmp  <KeFindConfigurationEntry+>;cmpb $, %al;jne  <KeFindConfigurationEntry+>": 1,
                "pushl %edi;xorl %edi, %edi;incl %edi;pushl %edi;pushl %ebx": 1,
                "popl %edi;popl %esi;je  <KeFindConfigurationEntry+>;pushl -(%ebp);calll - <ZwClose>": 1,
                "pushl -(%ebp);calll - <ZwClose>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;xorl %ecx, %ecx;movb (%ebp), %ch;movl %eax, %edx": 1,
                "shll $, %eax;orl %eax, %edx;shll $, %edx;movb (%ebp), %cl;orl %edx, %ecx": 1,
                "movb (%ebp), %cl;orl %edx, %ecx;movl %ecx, %eax;popl %ebp;retl $": 1,
                "addb %dh, (%esi);imull $, (%eax), %eax;popl %esp;addb %cl, (%esi);addb %dh, %gs:(%eax,%eax)": 1,
                "addb %dl, (%eax,%eax);addb %dh, (%eax);imull $, (%eax), %eax;jnp  <KeFindConfigurationEntry+>;xorl $, %eax": 1,
                "movl $, %eax;jmp  <KeFindConfigurationEntry+>;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "pushl %eax;pushl %eax;movsl (%esi), %es:(%edi);pushl %eax;pushl (%ebp)": 1,
                "calll - <NtDeviceIoControlFile>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "movl $, %eax;jmp  <KeFindConfigurationEntry+>;pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "imull $, (%eax), %eax;jae  <KeFindConfigurationEntry+>;popl %esp;addb %dl, (%eax,%eax);addb %dh, (%eax)": 2,
                "popl %esp;addb %dl, (%eax,%eax);addb %dh, (%eax);imull $, (%eax), %eax;pushl %eax": 2,
                "outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %al, (%eax);addb %bl, (%esp,%eax,);jbe  <KeFindConfigurationEntry+>": 1,
                "outsl (%esi), %dx;addb %ch, (%edi);je  <KeFindConfigurationEntry+>;pushl %edx;addb %ch, (%edi)": 1,
                "je  <KeFindConfigurationEntry+>;pushl %edx;addb %ch, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax)": 1,
                "pushl $;addb %ah, (%ebp);incl %esp;addb %ch, (%ecx);jb  <KeFindConfigurationEntry+>": 1,
                "addb %ah, (%ebp);incl %esp;addb %ch, (%ecx);jb  <KeFindConfigurationEntry+>;addb %ah, %gs:(%ebx)": 1,
                "insl %dx, %es:(%edi);addb %ah, (%ecx);addb %ah, (%di);pushl %eax;addb %ah, (%ecx)": 1,
                "calll - <RtlFreeUnicodeString>;cmpl %edi, %esi;jl  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <_wcslwr>;leal -(%ebp), %eax;movl $, (%esp);pushl %eax": 1,
                "calll - <_wcslwr>;leal -(%ebp), %eax;movl $, (%esp);pushl %eax;calll - <RtlInitUnicodeString>": 1,
                "leal -(%ebp), %eax;movl $, (%esp);pushl %eax;calll - <RtlInitUnicodeString>;movl (%ebx), %eax": 1,
                "calll - <LsaDeregisterLogonProcess+>;testl %eax, %eax;jl  <KeFindConfigurationEntry+>;pushl $;pushl (%ebx)": 1,
                "jne - <KeFindConfigurationEntry+>;movl %edx, %ecx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx": 1,
                "jl  <KeFindConfigurationEntry+>;movl (%ebx), %eax;addl $, %eax;pushl %eax;pushl $": 2,
                "leal (%eax,%eax), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;xorl %ebx, %ebx": 1,
                "incl %ebx;pushl %ebx;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);calll - <KeFindConfigurationEntry+>;pushl -(%ebp)": 1,
                "pushl %edx;addb %ah, (%ebp);arpl %ax, (%eax);addb %ch, %gs:(%ecx);jbe  <KeFindConfigurationEntry+>": 1,
                "movl %eax, %ebx;cmpl %esi, %ebx;jne  <KeFindConfigurationEntry+>;movl $, %edi;jmp  <KeFindConfigurationEntry+>": 1,
                "cmpl %esi, %ebx;jne  <KeFindConfigurationEntry+>;movl $, %edi;jmp  <KeFindConfigurationEntry+>;pushl $": 1,
                "movl %eax, %edi;cmpl %esi, %edi;jl  <KeFindConfigurationEntry+>;pushl $;leal -(%ebp), %eax": 2,
                "pushl %esi;pushl -(%ebp);calll - <NtFsControlFile>;movl %eax, %edi;cmpl %esi, %edi": 1,
                "cmpl %esi, %edi;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %edi;testl %edi, %edi;jl  <KeFindConfigurationEntry+>": 1,
                "leal (%ebx), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <RtlCreateUnicodeString>": 2,
                "movl %eax, %esi;calll - <NtClose>;testl %esi, %esi;jl - <KeFindConfigurationEntry+>;leal (%ebx), %eax": 1,
                "testl %esi, %esi;jl - <KeFindConfigurationEntry+>;leal (%ebx), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movzwl -(%ebp), %ecx;movl -(%ebp), %esi;movl %ecx, %eax;shrl $, %ecx;leal (%ebx), %edi": 1,
                "pushl %eax;rep  movsb (%esi), %es:(%edi);calll - <RtlFreeUnicodeString>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl %edx, -(%ebp)": 1,
                "testl %edi, %edi;jl  <KeFindConfigurationEntry+>;movl -(%ebp), %edi;testl %edi, %edi;jl  <KeFindConfigurationEntry+>": 2,
                "pushl $;calll - <KeDelayExecutionThread>;pushl $;popl %ecx;pushl $": 1,
                "pushl %esi;pushl %ebx;calll - <ExFreePoolWithTag>;cmpl %esi, -(%ebp);je  <KeFindConfigurationEntry+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;subl $, %eax;je  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;subl $, %eax;je  <KeFindConfigurationEntry+>;orl $-, %eax;jmp  <KeFindConfigurationEntry+>": 1,
                "jmp  <KeFindConfigurationEntry+>;movl $, %eax;popl %ebp;retl $;int": 1,
                "movl -(%ebp), %esp;movb $, -(%ebp);orl $-, -(%ebp);movb -(%ebp), %al;calll - <wctomb+>": 1,
                "pushl %esi;calll - <KeFindConfigurationEntry+>;testb %al, %al;je  <KeFindConfigurationEntry+>;movl , %eax": 1,
                "addl %esi, %eax;jne  <KeFindConfigurationEntry+>;movl $, %eax;jmp  <KeFindConfigurationEntry+>;movl (%eax), %eax": 1,
                "movl (%ebp), %esi;pushl %esi;calll - <KeFindConfigurationEntry+>;testb %al, %al;jne  <KeFindConfigurationEntry+>": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%esi), %eax;movl (%ebp), %ecx": 4,
                "movl (%esi), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);xorl %eax, %eax;popl %esi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dh, %ah": 10,
                "movw %es, (%eax);andb %cl, (%ebx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "xorb (%eax), %cl;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%edx,%esi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movl (%eax), %eax;jl - <KeFindConfigurationEntry+>;incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "adcb $-, %al;incl %eax;addb %cl, (%eax);incl %edi;addb %al, (%eax)": 1,
                "movb (%eax), %al;lock;adcl (%eax), %ecx;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb %cl, (%eax,%eax,);addb %dl, %ah": 1,
                "addb %cl, (%eax);movw %es, (%eax);addb %cl, (%edx);decl %eax;addb %ch, (%esp,%ebx,)": 1,
                "movw %es, (%eax);incl %esp;movl %eax, (%eax);incl %esp;iretl": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax);movw %es, (%eax);pushfl": 1,
                "insb %dx, %es:(%edi);xchgl %eax, (%eax);cwtl;cmpl %eax, (%edi);addb %al, (%eax)": 1,
                "addb %ch, (%ecx,%ebx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "xchgb %al, (%eax);pushfl;xorb $, %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "nop;xchgb %al, (%eax);addb $, %al;decl %eax;addb %al, (%eax)": 1,
                "calll -;incl %eax;decl %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, -(%eax);incl %eax;addb %ah, %ah": 1,
                "addb %al, (%eax);addb %cl, -(%eax);incl %eax;addb %dl, -(%eax);incl %eax": 1,
                "subb %al, (%eax,%eax,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "incl %eax;addb %bh, %ah;addl $, (%eax);popl %esp;incl %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, %al;addl $-, (%eax)": 6,
                "jg  <KeFindConfigurationEntry+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jle  <KeFindConfigurationEntry+>;addb %dl, (%esi,%esi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "testl %eax, (%eax);pushl %esp;jle  <KeFindConfigurationEntry+>;addb %al, (%eax);incl %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, (%esi,%edi,)": 3,
                "addb %al, (%eax);addb %al, (%eax);addb %bl, (%esi,%edi,);incl %eax;addb %bh, %ah": 1,
                "jge  <KeFindConfigurationEntry+>;addb %cl, %al;testb $, %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bl, (%esp,%edi,);incl %eax;addb %bh, (%eax);incl %esp;decl %eax": 1,
                "popl %esp;popl %ebp;addb %ah, (%esp,%ebx,);popl %ebp;addb %dh, %ah": 1,
                "popl %ebp;addb %ah, (%esp,%ebx,);popl %ebp;addb %dh, %ah;jnp  <KeFindConfigurationEntry+>": 1,
                "addb %bl, (%eax);popl %ebx;popl %ebp;addb %bl, (%ebx,%ebx,);popl %ebp": 1,
                "addb %cl, -(%eax);popl %ecx;addb %cl, (%esp,%ebx,);addb %dl, -(%eax);popl %ecx": 1,
                "addb %al, (%eax);addb %al, (%eax);sbbb %bh, (%edx);addb %dh, %al;jns  <KeFindConfigurationEntry+>": 1,
                "addb %bl, (%eax);jp  <KeFindConfigurationEntry+>;addb %dl, %ah;jns  <KeFindConfigurationEntry+>;addb %dl, (%esp,%edi,)": 1,
                "sbbb %bh, (%edx);addb %ch, -(%ecx,%edi,);incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "sbbb %bh, (%eax);addb %al, (%eax,%edi,);incl %eax;addb %dh, -(%eax);incl %esi": 1,
                "incl %eax;addb %dh, -(%eax);incl %esi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %dh, -(%eax);pushl %edx": 1,
                "addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %ah, -(%eax);pushl %edx;incl %edi": 1,
                "addb %cl, (%eax);pushl %ebx;incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dh, (%ebx,%edx,);incl %edi;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bl, (%esi,%esi,);addb %bh, (%eax);pushl %ebx;incl %edi;addb %al, (%eax)": 1,
                "incl %eax;addb %bh, (%ebx,%edx,);incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %al, (%esi,%esi,)": 1,
                "jne  <KeFindConfigurationEntry+>;addb %bl, (%eax);incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %cl, %al;jne  <KeFindConfigurationEntry+>;addb %ah, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %dl, (%ebp,%esi,);addb %bh, (%ebx,%edx,)": 1,
                "addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %dh, -(%eax);pushl %ebx;incl %edi": 1,
                "addb %dh, -(%eax);pushl %ebx;incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %cl, (%esp,%esi,);incl %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %al, (%esp,%esi,)": 1,
                "js  <KeFindConfigurationEntry+>;addb %dh, (%esp,%esi,);incl %eax;addb %cl, %al;pushl %ebx": 1,
                "incl %eax;addb %cl, %ah;pushl %ebx;incl %edi;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %bl, (%esp,%esi,);incl %eax": 1,
                "js  <KeFindConfigurationEntry+>;addb %dl, %al;jae  <KeFindConfigurationEntry+>;addb %ah, %al;pushl %ebx": 1,
                "js  <KeFindConfigurationEntry+>;addb %bl, -(%eax);pushl %ebx;incl %edi;addb %al, (%eax)": 1,
                "addb %bl, -(%eax);pushl %ebx;incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%eax);pushl %esp;incl %edi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%eax);js  <KeFindConfigurationEntry+>;addb %dh, (%edx,%esi,);incl %edi": 1,
                "incl %esp;jno  <KeFindConfigurationEntry+>;addb %dh, %al;calll -;incl %esi": 1,
                "addb %bl, (%edi,%edx,);decl %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, %al;imull $, (%eax), %ecx;addb %al, (%eax);addb %cl, %ah;imull $, (%eax), %ecx": 1,
                "addb %al, (%eax);incl %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%esi);js  <KeFindConfigurationEntry+>;addb %al, (%eax)": 1,
                "jl  <KeFindConfigurationEntry+>;sbbl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %ah, (%esi)": 1,
                "addb %ah, (%esi);popl %es;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, %dl;ja  <KeFindConfigurationEntry+>;addb %ch, -(%esi);ja  <KeFindConfigurationEntry+>;addb %cl, (%edx)": 1,
                "sbbl $, %eax;addb %bh, %al;ja  <KeFindConfigurationEntry+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, %dl;jb  <KeFindConfigurationEntry+>;addb %ch, %dl;jb  <KeFindConfigurationEntry+>;addb %al, (%esi)": 1,
                "addb %bl, %ah;jno  <KeFindConfigurationEntry+>;addb %al, %dh;jno  <KeFindConfigurationEntry+>;addb %ch, (%esi)": 1,
                "js  <KeFindConfigurationEntry+>;addb %bh, (%eax,%edi,);sbbl $, %eax;addb %cl, (%ebp);decl %ebx": 1,
                "jb  <KeFindConfigurationEntry+>;insb %dx, %es:(%edi);addb %al, (%eax,%eax);pushl %edx;popal": 1,
                "incl %edi;je  <KeFindConfigurationEntry+>;outsb (%esi), %dx;je  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>": 1,
                "addb %cl, (%esi);decl %ebx;pushw %dx;popal;imull $, (%ebx), %esi": 1,
                "pushl %edx;jo  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;pushl %edx;jae  <KeFindConfigurationEntry+>": 1,
                "arpl %sp, (%ebp);jae  <KeFindConfigurationEntry+>;addb %al, %gs:(%bx,%si);addl $, %eax;incl %ecx": 1,
                "jae  <KeFindConfigurationEntry+>;addb %al, %gs:(%bx,%si);addl $, %eax;incl %ecx;insb %dx, %es:(%edi)": 1,
                "pushl %edx;popal;insb %dx, %es:(%edi);pushl %esp;imull $, (%ebp), %ebp": 1,
                "arpl %sp, (%ecx);incl %ecx;popal;jo  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);incl %ebp;js  <KeFindConfigurationEntry+>;arpl %si, (%ebp)": 1,
                "insb %dx, %es:(%edi);pushl %esp;jb  <KeFindConfigurationEntry+>;outsb (%esi), %dx;jae  <KeFindConfigurationEntry+>": 1,
                "arpl %bp, (%ebx);decl %esp;addb %cl, (%ebx);incl %ecx;arpl %si, (%ecx)": 1,
                "andl (%eax), %eax;decl %eax;popal;insb %dx, %es:(%edi);pushl %edx": 1,
                "jb  <KeFindConfigurationEntry+>;pushl %esp;outsl (%esi), %dx;incl %esi;imull $, (%edx), %esi": 1,
                "pushl %edx;incl %ebp;incl %ecx;incl %esp;popl %edi": 2,
                "incl %ecx;incl %esp;popl %edi;pushl %eax;decl %edi": 3,
                "incl %esp;popl %edi;pushl %eax;decl %edi;pushl %edx": 3,
                "pushl %edx;pushl %esp;addb %al, (%eax);pushl %esp;addb %dl, (%edx)": 1,
                "decl %esi;incl %edi;addb %bl, (%ecx);pushl %edi;pushl %edx": 1,
                "outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi;pushl %eax;jb  <KeFindConfigurationEntry+>;arpl %sp, (%ebp)": 1,
                "outsl (%esi), %dx;jne  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;addb %ch, (%ecx)": 1,
                "je  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;jne  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>;incl %ebp": 1,
                "outsb (%esi), %dx;popal;bound (%ebp), %ebp;jns  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);addb (%eax), %al;incl %ebp;js  <KeFindConfigurationEntry+>": 1,
                "jb  <KeFindConfigurationEntry+>;insb %dx, %es:(%edi);addb %al, %gs:(%eax);popl %ds;addb %cl, (%eax)": 1,
                "outsb (%esi), %dx;jae  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;xorl (%eax), %eax;decl %ecx": 1,
                "incl %esi;jb  <KeFindConfigurationEntry+>;incl %ecx;popal;jo  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;imull $, (%ebp), %ebp;insl %dx, %es:(%edi);outsb %gs:(%esi), %dx;je  <KeFindConfigurationEntry+>": 1,
                "je  <KeFindConfigurationEntry+>;outsb (%esi), %dx;jbe  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;outsb (%esi), %dx": 2,
                "popal;bound (%ebp), %ebp;decl %eax;incl %ecx;decl %esp": 1,
                "decl %esp;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %al, (%edx);addb %dl, (%esi)": 1,
                "pushl %ebx;arpl %si, (%edx);outsb %gs:(%esi), %dx;pushl %esp;outsl (%esi), %dx": 1,
                "arpl %si, (%edx);outsb %gs:(%esi), %dx;pushl %esp;outsl (%esi), %dx;incl %edx": 1,
                "incl %edx;jne  <KeFindConfigurationEntry+>;jb  <KeFindConfigurationEntry+>;outsl (%esi), %dx;pushl %ebx": 1,
                "addl (%eax), %eax;pushl %esi;imull $, (%esp,%eax,), %esp;jns  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>": 1,
                "pushl %esi;imull $, (%esp,%eax,), %esp;jns  <KeFindConfigurationEntry+>;je  <KeFindConfigurationEntry+>;imull $, (%esi), %ebp": 1,
                "imull $, (%ebx,%edx,), %esp;outsl (%esi), %dx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);pushl %edx": 1,
                "incl %esp;bound %gs:(%ebp), %esi;jb  <KeFindConfigurationEntry+>;outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi": 2,
                "je ;jb ;pushl %eax;jb ;imulw $, (%ebp), %bp": 1,
                "jb ;imulw $, (%ebp), %bp;jb ;jne ;je  <KeFindConfigurationEntry+>": 1,
                "imulw $, (%ebp), %bp;jb ;jne ;je  <KeFindConfigurationEntry+>;addb %ch, ": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                "XRich": 1,
                ".text": 1,
                "hPOOLMI": 1,
                "hMISYSPTE": 1,
                "hPOOLCODE": 1,
                "h.data": 1,
                "INITDATA8": 1,
                "INITCONSU": 1,
                "HPAGE": 1,
                "`PAGELK": 1,
                "`PAGEVRFY": 1,
                "`PAGEWMI": 1,
                "`PAGEKD": 1,
                "`PAGESPEC<": 1,
                "`PAGEHDLS": 1,
                "`.edata": 1,
                "@PAGEDATA": 1,
                "PAGECONS@0": 1,
                "@PAGEKD": 1,
                "PAGECONS": 1,
                "PAGELKCO": 1,
                "@PAGEVRFCI4": 1,
                "@PAGEVRFDH": 1,
                ".rsrc": 1,
                "@.reloc": 1,
                "\\REGISTRY\\MACHINE\\SYSTEM\\DISK": 1,
                "\\Device\\Harddisk%d\\Partition%d": 4,
                "2600.xpsp.080413-2111": 1,
                "VDEST": 1,
                "-np1A": 1,
                "'+?2LF": 1,
                "E:Jess*": 1,
                "EricF.Nelson": 1,
                "@R.!z": 1,
                "MmCaMmxx": 1,
                ":!A!B!C!D!E!F!G!H!I!2": 1,
                "Q!R!S!T!]!c!d!e!m!w": 1,
                "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *": 28,
                "**** Bad IRQL -- needed %x, got %x ****": 1,
                "* * VF: ": 28,
                "* * * * * * * * HAL Verifier Detected Violation * * * * * * * *": 28,
                "**** Bad IRQL -- needed %x or less, got %x ****": 1,
                "Allocated too many map registers : %x (max %x)": 1,
                "Allocating too many map registers at a time: %x (max %x)": 1,
                "Freed too many map registers: %x": 1,
                "Freed too many common buffers": 1,
                "Driver did not flush adapter buffers -- bytes mapped: %x (%x max)": 1,
                "Driver has allocated too many simultaneous adapter channels": 1,
                "Driver has freed too many simultaneous adapter channels": 1,
                "Driver has freed too many scatter gather lists %x allocated, %x freed": 1,
                "DMA Pages Not Locked! MDL %p for DMA not locked": 1,
                "EX: Invalid attempt to free protected pool block %x (%c%c%c%c)": 1,
                " (8PX": 1,
                "700WP": 1,
                "`h````": 1,
                "ppxxxx": 1,
                "(null)": 1,
                "_nextafter": 1,
                "_logb": 1,
                "frexp": 1,
                "_hypot": 1,
                "_cabs": 1,
                "ldexp": 1,
                "floor": 1,
                "atan2": 1,
                "log10": 1,
                "RSDS1": 1,
                "ntkrnlpa.pdb": 1,
                "9~Lt@": 1,
                "ShCcDwj(3": 1,
                "Gl u@": 1,
                "hCcBrj j": 1,
                "t%SSP": 1,
                "Fl u=9^`u8": 2,
                "VhCcBch": 1,
                "9_`u-9_": 1,
                "N49^4u": 1,
                "t09^tt": 1,
                "SSPhQ": 1,
                ";F,ui": 1,
                "u<VVVV": 1,
                "tv9s8t": 1,
                "9^LtKW": 1,
                ";F,|(": 1,
                ";~(v!": 1,
                ";F(w$": 1,
                "Fl u>9~`u9": 3,
                "t}=33": 1,
                "f9X2t": 1,
                ";^ r3": 1,
                "Nl 9^\\": 1,
                "9^LtU": 1,
                "hCcSch0": 1,
                "ueSPh": 1,
                "9~|uGhCcEvj": 1,
                "f9;u-": 1,
                "uzf9;t19}": 1,
                "hCcPcjXW": 1,
                "u-9~`u(9~": 1,
                "t49^Hu": 1,
                "Fl u@": 2,
                "9~Lt+": 1,
                "uA9~\\u<": 1,
                "Gl u>9w`u9": 1,
                "9V`tR": 1,
                "~`@r%": 1,
                "NluE9u": 1,
                "HtTHt": 1,
                "HuSSS": 1,
                "SSSSV": 5,
                "uFhCcVlh": 1,
                "hCcVlh": 1,
                "@_^[]": 9,
                "hCcVp": 1,
                "C@WVS": 1,
                "tC9sHu>9": 1,
                "Cl u@": 1,
                "hFSmg": 2,
                "hFSrmP": 1,
                "hFSrmjx": 1,
                "hFSrm": 1,
                ";7u+;W": 1,
                "SVWt`": 1,
                "J8_^[": 1,
                ";H4w!r": 1,
                "r%;H$w r": 1,
                "~ WVP": 2,
                "N QVP": 1,
                "9V u/": 1,
                "F(PQW": 1,
                "9N(u/": 1,
                "VWt-h": 1,
                "9V$uN": 1,
                "9F(ue": 1,
                "9F,u]": 1,
                "9F$uOV": 1,
                "uQ9E,tL": 1,
                "HtiHtNHt": 1,
                "VhFSrt": 2,
                "t=8X$t8": 1,
                "hFSroj": 1,
                "tnIt-IIuK": 1,
                "Jt{Jt`JtEJt*Jt": 1,
                "F.f;F,s": 1,
                "PPPPj\"": 1,
                "FSmgV": 1,
                "hFSmg3": 1,
                "@0f!V.f=": 1,
                "uehFOCXj(W": 1,
                "NX99t": 1,
                ";KDr9": 1,
                "hFSrN": 2,
                "C<;CDr": 1,
                "9:u.9{4t": 1,
                "ShFSrsj": 1,
                "SSSSh ": 2,
                "hFstbPj": 5,
                "FstbV3": 1,
                "PPPj\\": 1,
                "hFstBVj": 2,
                "uLSWj": 1,
                "SSSSj": 14,
                "tdSSW": 1,
                "tmIt^": 1,
                "hDriv": 1,
                "PSjpjpSS": 2,
                "F`^[]": 1,
                "hIrp Pj": 2,
                ";PDu\"": 1,
                "tDhKAPCj0j": 1,
                "hIoErj": 2,
                "hIoErPV": 1,
                "tIhKAPCj0V": 1,
                "ShIoUsj": 1,
                "QQVW3": 3,
                "hIoErSj": 1,
                "hIrp ": 2,
                "hMdl Pj": 1,
                "t|hIo  ": 1,
                "t;hIo  Vj": 1,
                "hIo  Rj": 1,
                "8^$tD": 1,
                "u*_^[": 1,
                "F&SSSh": 2,
                "t*8^!u%": 1,
                "N&SSSh": 1,
                "hIo  j": 3,
                "C%VWP": 1,
                "WjhVj": 1,
                "hcbuf": 2,
                "hDImg": 1,
                "PAGEWh": 1,
                "E$tHW": 1,
                "E$t|V": 1,
                "E$tQQ": 1,
                "%Z: %3d": 2,
                "hSDMPj ": 1,
                "|6)] ": 1,
                "]$VW3": 1,
                "8;M(s": 2,
                "hPAGEh": 1,
                "E$PSW": 1,
                "PSSWh": 2,
                "hD2d Pj": 1,
                "B\"@@;": 1,
                "B#:B\"": 1,
                "tFSVW": 1,
                "t(VVP": 1,
                "K QPh": 1,
                "QQSVW": 19,
                "hIo  ": 26,
                "u&;wP": 1,
                "RRRRj": 1,
                "VhPpioj": 1,
                "Rhn*J": 1,
                "tMWPS": 1,
                "t0WPS": 1,
                "hPp  ": 7,
                "t\"VVP": 1,
                "~t_^3": 1,
                "VhPpenj S": 1,
                "9N$txQQQ": 1,
                "9~$t6WWWW": 1,
                "PpdeW": 1,
                "twWVj": 1,
                "t>Ht#HuY9": 1,
                "It!It": 1,
                "@hCM  ": 2,
                "PPPPj": 1,
                "sdVWVj": 1,
                "|MVWVW": 1,
                "9~Dt-": 1,
                "9~Dt3": 1,
                "BAANu": 1,
                "%s**  %12s - Address %p base at %p, DateStamp %08lx": 1,
                "*** Fatal System Error: 0x%08lx": 1,
                "                       (0x%p,0x%p,0x%p,0x%p)": 1,
                "Driver at fault: %s.": 1,
                "*** STOP: 0x%08lX (0x%p,0x%p,0x%p,0x%p)": 1,
                "uP95 ": 1,
                "VVVVj": 2,
                "PPPPP": 3,
                "Gn(G3": 1,
                "F3:G3": 1,
                "u!*Fn": 1,
                "A0;F0u)": 1,
                "$SVWd": 3,
                "Wu0hKe  h": 1,
                "fhs7B": 1,
                "fh/:B": 1,
                "u4SWd": 1,
                "RPVj0": 1,
                "$SVW>": 1,
                "Ht&Ht": 1,
                "u5hNPX h": 1,
                "IIt&IIt": 1,
                "AhSVWd": 1,
                "P,SVW": 1,
                "_^[uo": 1,
                "u;8QHu6R": 1,
                "_^[]Z": 2,
                "QSVW>": 1,
                "FD8Xit": 1,
                "t]Ht.H": 1,
                "S3tRHt)HuI;": 1,
                "F38N3}": 1,
                "SWVTh": 1,
                "SWVTh{": 1,
                "SVt9Wj": 1,
                "uwQRS": 1,
                "t8Ht+Ht": 1,
                " ,,@,@D": 1,
                "j hWrap": 2,
                ";F$sK": 1,
                "@[_^]": 1,
                "A<_^[": 1,
                "B9V<v>": 1,
                "F<_^[": 1,
                "pDWVS": 1,
                "VhMmLkj0j": 1,
                ";B,uE": 1,
                "9B uV": 1,
                "hMmSyj0P": 1,
                "tAHHuF": 1,
                "tKHt6H": 1,
                "t2hMmPmj": 1,
                "u`G;}": 1,
                "t!HHu ": 1,
                "HtyHt`H": 1,
                "t9Ht$Hul": 1,
                "hContS": 1,
                "VVSj`h": 1,
                "hMmdlWV": 1,
                "hCont": 4,
                "Wu;hMmCm": 1,
                "u$VPW": 1,
                "hVadlj4j": 4,
                "hMmpvj": 3,
                "twOtfOtFOu}": 1,
                "JtvJtVJ": 1,
                "v#hMmPr": 1,
                "tl9P$": 1,
                "Mp10W": 1,
                "F u 9^": 1,
                "vRSSh": 1,
                "f9N,vX": 1,
                "QQSVWd": 3,
                "QQSVW3": 5,
                "Cf9z.t": 1,
                "f9s,u": 1,
                "hMmCaj`V": 1,
                "}f9u$u$": 1,
                "tQhMm  j,3": 1,
                "t5hMmdpj": 1,
                "t>VVh ": 1,
                "}6hX\"@": 1,
                "F<f9O": 1,
                "VWu(3": 1,
                "9=@WG": 1,
                "Vt#+A": 1,
                "F(9^ ": 1,
                "G(9W t<": 1,
                "PWCSS": 1,
                "u/hMmTxj": 1,
                "SVhQ4": 1,
                "XSVWd": 1,
                "Ph 0`": 1,
                "A driver has leaked %d bytes of physical memory.": 1,
                "QQSV3": 4,
                "hMmInh": 1,
                "G' t ": 1,
                "C  t0": 1,
                "PWSVjz": 1,
                "t0f9Y": 1,
                ";5|5G": 1,
                "r,;=X": 1,
                "*******************************************************************************": 4,
                "* A driver is mapping physical memory %p->%p": 1,
                "* that it does not own.  This can cause internal CPU corruption.": 1,
                "* A checked build will stop in the kernel debugger": 1,
                "* so this problem can be fully debugged.": 1,
                "Hu 9U": 1,
                "F(9N t?": 1,
                "Z9N t?": 1,
                "hE#E#P": 1,
                "w4WPj": 1,
                ";5T2H": 5,
                "t_HtHHt:H": 1,
                "S8_^[": 1,
                "@^_[]": 1,
                "95(WG": 1,
                "G' t=": 1,
                "u\"9^$t": 1,
                "YQRPW": 2,
                "(SVWd": 1,
                "RRVhx": 1,
                "~qSVW": 1,
                "jDhX%@": 1,
                "It)It": 1,
                "u:j(W": 1,
                "@(C;]": 1,
                "tbj(W": 1,
                "hMmGcPS": 1,
                "@VWtD": 1,
                "MmEnsureAvailablePageOrWait: 7 min timeout": 1,
                "Without a debugger attached, the following bugcheck would have occurred.": 1,
                "%3lx ": 1,
                "%3lxp ": 1,
                "%p %p %p %p": 1,
                "RQPjM": 1,
                "SVWj ": 1,
                "w*uV3": 1,
                "hPaeDj": 1,
                "VHPVh": 1,
                "t)90u": 1,
                "hObSTP": 1,
                "ObpPushStackInfo -- ObpStackTable overflow!": 1,
                "ObpRegisterObject - ExAllocatePoolWithTag failed.": 1,
                "uQhObSTh": 1,
                "@PPPQ": 1,
                "8PNB u^": 1,
                "8P ^t": 1,
                "hPNB j$j": 1,
                "VhPNSCj": 1,
                "hPNTGj": 1,
                "WWWSj": 1,
                "NONOP": 1,
                "teSV3": 1,
                "SSSPj": 1,
                "uIhDOPEjLW": 1,
                "QSVW3": 5,
                "hPstaj": 1,
                "tGHuU": 1,
                "t<JuE": 1,
                "HL9HH|": 1,
                "9=d*H": 2,
                "QQSV>": 1,
                "tRSV3": 1,
                "hPoPs": 2,
                "t9SV3": 1,
                "HuESW": 1,
                "VWt?f": 1,
                "Function: ": 1,
                "*** Assertion failed: %s%s": 1,
                "***   %s%s%sSource File: %s, line %ld": 1,
                "Break repeatedly, break Once, Ignore, terminate Process, or terminate Thread (boipt)? ": 1,
                "Execute '.cxr %p' to dump context": 1,
                "VRQWPh\"\"E": 1,
                "Phj\"E": 1,
                "j4h(7@": 1,
                "|tj!j": 1,
                "SVWtv": 1,
                "____^[]": 1,
                "H_t4Ht(Ht": 1,
                "WjGY3": 1,
                ":MZu'": 1,
                "ffff:": 2,
                "::%hs%u.%u.%u.%u": 1,
                "::ffff:0:%u.%u.%u.%u": 1,
                ":%u.%u.%u.%u": 1,
                "u2f9V": 1,
                "%u.%u.%u.%u": 1,
                "u3f9V": 1,
                "PhFEE": 1,
                ":u>9U": 1,
                "VWtW9M": 1,
                ">%u}F": 1,
                "HtzHtJHt": 2,
                "f90u\"9U": 1,
                ":u:9U": 1,
                "uBGG3": 1,
                "YYt=j": 1,
                "u!GGf": 1,
                "YYtYj": 1,
                ";N@sB": 1,
                "FHv_E": 1,
                "Trace database: failed to release segment %p ": 1,
                "Trace database: failing attempt to save biiiiig trace (size %u) ": 1,
                "Sh&cE": 1,
                "t6HtVHt": 1,
                "Ht9HHt/": 1,
                "hEdbgPj": 1,
                "v8;NPr": 1,
                "SVWt?": 1,
                "Failed to normalize PE header for validation": 1,
                "Header too large (%u>%u) for copy/normalize/validate": 1,
                "2hNpE": 1,
                "Qh~pE": 1,
                "PE header hash ID comparsion failure (PE2)": 1,
                "Unrecognized": 1,
                "HOTP_ID_PeDebugSignature": 1,
                "HOTP_ID_PeHeaderHash2": 1,
                "HOTP_ID_PeHeaderHash1": 1,
                "HOTP_ID_None": 1,
                "t^HtTHt2Ht!": 1,
                "QSWWS": 1,
                "hSeAc": 7,
                "hSeAch": 1,
                "hSeSdj": 3,
                "VVVVVVP": 1,
                "VWjFY3": 1,
                "j hPO@": 1,
                "j$h`O@": 1,
                "|sSVd": 1,
                "jlhpO@": 1,
                "hVDM ": 5,
                ",j#Z3": 1,
                " j\"Z3": 1,
                "QjPVP": 1,
                "t_VhpP@": 3,
                "Ph0P@": 1,
                "$h<9G": 1,
                "$h@9G": 1,
                "tXhpP@": 1,
                "$9^@hH9G": 1,
                ";N@v_": 1,
                "t[hpP@": 1,
                "$9^@hD9G": 1,
                "tWVhpP@": 1,
                "ShPQ@": 1,
                " hL9G": 1,
                ";~Tv_": 1,
                "t[ShpP@": 1,
                "9~ThP9G": 1,
                "tXWhpP@": 1,
                "$hT9G": 1,
                "t`WhpP@": 1,
                ";~\\ta": 1,
                "t]ShpP@": 1,
                ";~\\h\\9G": 1,
                "QPhPR@": 1,
                "$h`9G": 1,
                "t`VhpP@": 1,
                " hd9G": 1,
                "Too many outstanding reference counts (%x) for adapter %p": 1,
                "Driver is trying to map an address range(%p-%p) that is already mapped    at %p": 1,
                "Map registers needed: %x available: %x": 1,
                "Virtual address %p out of bounds of MDL %p": 1,
                "It~ItqItKIt": 1,
                "hWmiwj": 1,
                "79F u": 1,
                "G9A u": 1,
                "C3:A3}\"j": 1,
                "hReTa": 1,
                "EX: ExFreePool( %p, %lx ) contains an ERESOURCE structure that has not been ExDeleteResourced": 1,
                "ReEv3": 1,
                "ReSe3": 1,
                "98t8f9^.t78]": 1,
                "f9^.t": 1,
                "9>txC": 1,
                "PoolV": 2,
                "hNone": 2,
                ";=T2H": 2,
                "hCBRej": 1,
                "PPPPh": 6,
                "F(f.E": 1,
                "FX_^]": 1,
                "j$hxV@": 1,
                "KP+KH": 1,
                "Kd+KH": 1,
                "WhInfoS": 1,
                ";5T1H": 3,
                "C:;5T1H": 1,
                "Ph`BH": 1,
                "t$;~0u": 1,
                ";N0u,": 1,
                "<$tPf": 2,
                "SVWUj": 1,
                ";t$(v(": 1,
                "UQPXY]Y[": 1,
                "VC10XC00U": 1,
                "VC20XC00U": 1,
                " BBFFf": 1,
                " BBFF": 1,
                "1AA9U": 1,
                "tlHt.": 1,
                "PPPPPPPP": 1,
                "BBFFf": 2,
                "AABBf": 1,
                "SVWt+": 1,
                "AAFFf": 2,
                "GGBBf": 1,
                "t%HHt": 1,
                "HHtxHHtt": 1,
                "rof=p": 1,
                "r_f=Z": 1,
                "rAf=*": 1,
                "r1f=J": 1,
                "tRHtCHt4Ht%HtFHHt": 1,
                "Ht+HHt Ht": 1,
                "HtYHHt7Ht!": 1,
                "u!9=|": 1,
                "hCcPBh": 1,
                "t(It It": 1,
                ";AhrF": 1,
                "`SVWd": 1,
                "PVVVVj": 1,
                "WhProf": 1,
                "eT_^[]f": 5,
                "T_^[]": 4,
                "U<PPPRQS": 1,
                "7USVW": 1,
                "L$0]_^[": 1,
                "tkSWV": 1,
                "U\\RQP": 1,
                "<5t~<&tz<": 1,
                "<$vj<0r|<3vb": 1,
                "]hWSP": 1,
                "9Mht*": 1,
                "9Mhu@": 1,
                "Eh8fF": 2,
                "uhUVQPWj": 1,
                "s @C%": 1,
                "f;N$u": 3,
                "O(TPQ": 1,
                "O(8O)t": 1,
                "TUSVW": 1,
                "GD;FD": 1,
                "f9B t/": 1,
                "L$$+\\$": 1,
                "tAJQt-": 1,
                "F Qt<": 1,
                "WSjPh": 1,
                ")^ SW": 1,
                "^ 9;u7": 1,
                "6PVj j": 1,
                "(96tQ": 1,
                "f.>&de6": 1,
                "*** ISR at %lx appears to have an interrupt storm": 1,
                "D@<\\t`XTD@<\\EA=]": 1,
                "DmaVrfy0": 1,
                "X9x}.A": 1,
                "_#z^W": 1,
                "%$%a%b%V%U%c%Q%W%]%\\%[%": 1,
                "%4%,%": 1,
                "%<%^%_%Z%T%i%f%`%P%l%g%h%d%e%Y%X%R%S%k%j%": 1,
                "e\"d\" #!#": 1,
                "0123456789ABCDEFO": 1,
                "Keeping previous autotriage settings": 1,
                "Driver Verifying Pre-Windows 2000 built drivers": 1,
                "Making accesses to freed nonpaged pool cause bugchecks": 1,
                "System PTE usage tracking": 1,
                "Locked pages tracking": 1,
                "MPIPI": 1,
                "PCMCIA": 1,
                "80%u86-%c%x": 1,
                "x86 Family %u Model %u Stepping %u": 1,
                "ACPICreatorRevision": 1,
                "ACPIRevision": 1,
                "ACPIOemRevision": 1,
                "ACPIOemTableId": 1,
                "ACPIOemId": 1,
                "Install": 1,
                "RmPmSame": 1,
                "PMode": 1,
                "OemId": 1,
                "Pointer": 1,
                "NextMatch": 1,
                "Search": 1,
                "Memory": 1,
                "DBLSPACE_SECTION": 1,
                "BitReg": 1,
                "DelReg": 1,
                "AddReg": 1,
                "CcZeVWj": 1,
                "hCcOb": 1,
                "hCcVpVj": 1,
                "CMcbSj": 1,
                "hTunK": 1,
                "hTunPVh": 1,
                "3hTun4": 1,
                "tr;~$|m": 1,
                ";^ vf": 1,
                "tU;~$|1": 1,
                ";^ v*9~$t": 2,
                "t3;~ v": 1,
                ";N w>": 1,
                ";~$|z": 1,
                ";^ vs": 1,
                ";F$| ": 1,
                "tf;~$|1": 1,
                "<{f;<N": 1,
                "hFSrn": 1,
                "PSSSSS": 2,
                "FSroSj h": 1,
                "hFSunPj": 1,
                "|eSWWWW": 1,
                "VVVVh": 4,
                "hFSunPV": 1,
                "utOf;": 1,
                "hFSrd": 1,
                "<.t{<\"twf": 1,
                "tf<\"u": 1,
                "vMAfJf": 1,
                "< tc<.t_<\"t[": 1,
                "WhFSrNj(3": 1,
                "hFSrNjTj": 1,
                "VHRRPVS": 1,
                "<N\\u93": 1,
                "u+9^4t": 1,
                "tZHtPHtFHt<Ht2Ht": 1,
                "PSSQhH": 1,
                "hFstb": 1,
                "uF8F!tA8F#u": 1,
                "(SVhFstbj": 1,
                "PVSj ": 1,
                "FstbWP3": 1,
                "QSSPh": 1,
                "\\DosDevices\\PhysicalDrive%d": 1,
                "FstbV": 1,
                "t5CSV": 1,
                "hFstB": 3,
                "FstbSj 3": 1,
                "t-WSVj ": 1,
                "VVVVS": 1,
                "ShFstBj8j": 1,
                "S$9U8": 1,
                "CLj\\SR": 1,
                "u6f9V": 1,
                "|6F;u": 1,
                ">EFI S": 1,
                "hFstBQj": 1,
                "C0+C(": 1,
                "u8f9F": 1,
                "u2f9F": 1,
                "F(+F ": 2,
                "$SVWhFstB3": 1,
                "F0PQj": 1,
                "G4_VVV": 1,
                "E#PVVj": 1,
                "M#QPPj": 1,
                "QQSVhFstb3": 1,
                "{(WVV": 1,
                "hVpb jXj": 1,
                "u0hIoTij": 1,
                "j\\Yv f9K": 1,
                "v9f9K": 1,
                "?u%f9K": 1,
                "hIo  h": 2,
                "~ du4f": 1,
                "~\"iu-f": 1,
                "~$ru&3": 1,
                "j-Xf9C6": 1,
                "hIoFcPj": 1,
                "hIoRij": 2,
                "hIoFsj": 1,
                "WhIoShj": 2,
                "8P(t5": 1,
                "8A(t3:": 1,
                "hIoSePj": 1,
                "@hIo  @Pj": 2,
                "hIo  Pj": 2,
                "QSVWj": 3,
                "hIoin": 1,
                "hIoOpj`j": 1,
                "9U4th": 1,
                "u(9U8t": 1,
                "hIoEa": 1,
                "ti9U0tdhIoEa": 1,
                "f9x0t": 1,
                "VWj@3": 1,
                "\\Device\\Harddisk%d\\Partition0": 5,
                "\\ArcName\\%s": 6,
                "%spartition(%d)": 2,
                "<hIo  j": 1,
                "DumpWj": 1,
                "PWWWj(": 1,
                "Ph.YI": 1,
                "DumpSjxW": 1,
                "F\\u&W": 1,
                "WWWWh.": 1,
                "\\Device\\ScsiPort%d": 1,
                "hDump": 2,
                "Wj6Y3": 1,
                "sPtJhDumpj": 1,
                "PVVhH": 1,
                "j8WVVh": 1,
                "VVVVh-": 2,
                "Ph`cI": 1,
                "hDumph": 1,
                "WWWWh1": 1,
                "u*WWW": 1,
                " hIoKBPj": 1,
                "SSSSSSQP": 1,
                "E hIoRN": 1,
                "QSSj(S": 1,
                "hIcp j": 2,
                "ShIcp j": 1,
                "9slt(9u": 1,
                "AhIo  j": 1,
                ".t#HHt": 1,
                "9{lt$9}": 1,
                "9u$u&": 1,
                "9M t3": 1,
                "t=9u t8": 1,
                "LhIo  j": 1,
                ";hIo  j": 1,
                "BhIo  j": 1,
                "6hIo  j": 1,
                "|khIoCcj": 1,
                "] 9]$tAhIo  Wj": 1,
                "OhIo  j": 1,
                "u;hIo  j": 1,
                "3hIo  j": 1,
                "W\\t)f": 1,
                "t`9M tR": 1,
                "9]$t$": 1,
                "9] tNhIo  Vj": 1,
                "9] tE": 1,
                "x\\u2;": 1,
                "t_9u tU": 1,
                "tj9u tk": 1,
                "tWhIo  Vj": 1,
                "9E tF": 1,
                "uKVhIo  ": 1,
                "Io  S": 1,
                "QSSSSSP": 1,
                "QSSSSSPS": 1,
                "SSSSh": 5,
                "PSSSj": 2,
                "QSSSSSPh": 1,
                "hIo  3": 1,
                "VVjdj": 1,
                "f90tc": 1,
                "FF@@Iu": 1,
                "hIo  f": 1,
                "E _^[]": 1,
                "9^lt(9]": 1,
                "9~lt(9}": 1,
                "t=9E t8hIo  ": 1,
                "S;M,w": 1,
                "M,hIo  Q": 1,
                "%2d %2d %4d %02d:%02d:%02d.%03d": 1,
                "SAFEBOOT: skipping device = %wZ(%wZ)": 1,
                "PSSSQ": 1,
                "Io  W": 1,
                "@W@Pj": 1,
                "PSSSS": 2,
                "|yj13": 1,
                "Io  VPj": 1,
                "G t;f": 1,
                "Io  Vh": 1,
                "=hIo  j": 1,
                "hIo  j`S": 1,
                "PSSSSSVj": 1,
                "VhIo  h": 1,
                "PjlX+": 1,
                "VhIo  jHj": 1,
                "hIo  Wj": 1,
                "9H$t.": 1,
                "RPPQP": 1,
                "PLj$Y3": 1,
                "txf=8": 1,
                "C2hIoNm": 1,
                ":f9{0t": 1,
                "sAhIoFc": 1,
                "f9{0t": 2,
                "@.@t$f9{0u": 1,
                "I(8FK": 1,
                "u_hIo  j(W": 1,
                "v<j8j\"S": 1,
                "f9s0u": 1,
                "WWWWj/j": 1,
                "PPQPj": 1,
                "PpioV": 1,
                "|KG;}": 1,
                "hPpioWj": 1,
                "hPpioPj": 1,
                "hPpio": 3,
                "hPpioP": 1,
                "SSj@P": 1,
                "8] tDj": 1,
                "Ph08J": 1,
                "@hPpio@Pj": 1,
                "@@PQj": 1,
                "8] t2": 1,
                "WhPpio": 1,
                "HtgHt": 1,
                "1h.OJ": 1,
                "PSSSVj": 1,
                "hPp  Vj": 1,
                "+3hPp  ": 1,
                "BBAAKu": 1,
                "@hPp  @Pj": 1,
                "PSSSV": 2,
                "_WhhYJ": 1,
                "WhtYJ": 1,
                "Phv[J": 1,
                "PVVVS": 1,
                "PWWWWWS": 1,
                "Pp  Vj": 1,
                "Ph6iJ": 1,
                "QQSVd": 1,
                "<Gf97u": 1,
                "hPp  h": 1,
                "|.SSSS": 1,
                "9?t$V": 1,
                "tMWPV": 1,
                "t0WPV": 1,
                "hPp  j0j": 1,
                "tahPp  j": 1,
                "hPp  j8j": 1,
                "tXhPp  j": 2,
                "hPp  j(j": 1,
                "whPp  j(j": 1,
                "t;SPV": 1,
                "t%SWV": 1,
                "PPPPV": 1,
                "whPpEEjXj": 1,
                "hPpsuSj": 1,
                "hPpsu": 8,
                "Xv6SV": 1,
                "hPpsuPj": 2,
                "7hPpsu": 1,
                "tTHtIHtNHt5Ht*H": 1,
                "tdIt\\It^It4II": 1,
                "It$It": 1,
                "t&hPpsu": 1,
                "F|tPS%": 1,
                "t:hPpsu": 1,
                "Wu]hPpsu": 1,
                "VVj&Vj": 1,
                "hPpsuVj": 1,
                "SSVh(": 1,
                "tUhPpsuPj": 1,
                "?@hPpsu@Pj": 1,
                "AAQPj": 1,
                "hPpen": 1,
                "F93tZ": 1,
                "N|@9]": 1,
                "hPpenPW": 1,
                ";0v!;": 1,
                "hPpenj": 1,
                "PpenVj": 1,
                "PpenVPj": 1,
                "hPpenh": 1,
                "j*Yj 3": 1,
                "Yj0_j": 1,
                "F}`tR": 1,
                "Pj.Sj": 1,
                "t3WWh?": 1,
                "M SVW": 1,
                "hPpenPj": 1,
                "F}`uW": 1,
                "F} WtN": 1,
                "Ht\"Ht": 1,
                "hPp  Wj": 1,
                "*** IopQueryLegacyBusInformation - Driver %wZ returned STATUS_SUCCESS": 1,
                "    for IRP_MN_QUERY_LEGACY_BUS_INFORMATION, and a NULL POINTER.": 1,
                "*** IopQueryPnpBusInformation - Driver %wZ returned STATUS_SUCCESS": 1,
                "    for IRP_MN_QUERY_BUS_INFORMATION, and a NULL POINTER.": 1,
                "t>hPp  ": 1,
                "t6VPV": 1,
                "hPp  Pj": 3,
                "9^ t!8^,t": 1,
                "hPpde": 1,
                "Vh~*K": 1,
                "t0Ht#Ht": 1,
                "t_HtPHt3Hub": 1,
                "VhDnodh": 1,
                "vZSVW": 1,
                "9A t<": 1,
                "C hPpre": 2,
                "PpreW": 1,
                "y,9s ": 1,
                "It,It": 1,
                "It&It": 1,
                "|}f9}": 1,
                "tihPpreWj": 1,
                "jJ@^9u": 1,
                "tF(;u": 1,
                "PpreV": 1,
                "hPpre": 7,
                "s=VW+": 1,
                "hPprej8h": 1,
                "hPprej": 2,
                "PpreV3": 1,
                "WQSSS": 1,
                "hPpreSj": 1,
                "sjSVW+": 1,
                "j Y9M": 1,
                "HtqHt": 1,
                "G}pu\"V": 1,
                ",SVWj": 1,
                "VhPpre3": 1,
                "_^[u1j": 1,
                "hPprePj": 1,
                "t:97t": 1,
                "FFhPpEE": 1,
                "QVhPpEL3": 1,
                "PpUBS": 1,
                "sIhPpEBPV": 1,
                ":hPpEE": 5,
                "<hPpEE": 2,
                "D8:hPpEE": 1,
                "hPpEEWj": 1,
                ";C@tS": 1,
                "SSPh$": 2,
                "SSPh4": 1,
                "hPp  j8S": 1,
                "u*hPpWIj": 1,
                "hPpEEVj": 1,
                "hPpEE": 1,
                "[hPpEEjXj": 1,
                "RhPpEEjXj": 1,
                "lhPpEEjXj": 1,
                "ShPpEEjXj": 1,
                "F}`u%": 1,
                "PpddW": 1,
                "Pp  WV3": 1,
                "_vAWh": 1,
                "VhPpdd3": 1,
                "uVhPpdd": 1,
                "t=f9]": 1,
                "PpddVh": 1,
                "hPpdd3": 1,
                "ItGIt8It)It": 1,
                "t]IIt": 1,
                "hPpddQj": 1,
                "hPpddPj": 1,
                "BB@@3": 2,
                "PRRh:": 1,
                "tBhPpdd": 1,
                "QPVhb": 1,
                "MapPWjjj": 1,
                "SWj`j": 1,
                "Pj`Sj": 2,
                "PPPPh`": 1,
                "F} tC": 1,
                "96u4W": 1,
                "hCM  j": 3,
                "SWSh`": 1,
                "O_^u4": 1,
                "QPPWj": 1,
                "VVVVVh": 1,
                "$Pp  Pj": 1,
                "9*uCV": 1,
                "VWhPp  h": 1,
                ",WhPp  h": 1,
                "hPprl": 2,
                "sShPprl": 1,
                "SVWt9": 1,
                "PnPbS": 1,
                "hPnPb": 1,
                "RhPnPb": 1,
                "ItQIt;It%It": 1,
                "hCM  ": 15,
                "FFhCM  ": 1,
                "hKe  h": 1,
                "It^II": 1,
                "PPPPW": 1,
                "HtMHt$HHur": 1,
                "j0hx @": 1,
                "Ht#Ht": 1,
                "HHu+;": 1,
                "PQQWV": 1,
                "9}$tI": 1,
                ";HDtw": 1,
                "j0h`!@": 1,
                "QWWVW": 1,
                "jdhx!@": 1,
                "VhPortj": 1,
                "9F$t3": 1,
                "tSVWd": 1,
                "ShMmVt": 1,
                "j0h`\"@": 1,
                "j$hp\"@": 1,
                "* This is the string you add to your checkin description": 1,
                "* Driver Verifier: Enabled for %Z on Build %ld %wZ": 1,
                "hMmLd": 3,
                "Xu&f=0": 1,
                "r f=9": 1,
                "F.hMmLd": 2,
                ">_^[]": 1,
                "hMmBk": 1,
                "t IIu\"": 1,
                "Mm  W": 3,
                "QQVWd": 2,
                "v;WPj": 1,
                "'hMmExj": 1,
                "hVadSj": 2,
                "hMmwwPj": 1,
                "hMmWwj": 1,
                "DOSCALLS": 1,
                "16STUB": 1,
                "Phar Lap Software, Inc.": 1,
                "Copyright (C) Rational Systems, Inc.": 1,
                "1-2-3 Preloader": 1,
                "PKtff": 1,
                "POt_f": 1,
                "ShMmSmj8j": 1,
                "$hMmScj0W": 1,
                "hMmCajpj": 1,
                "hMmCajPj": 1,
                "WhMmxxh": 1,
                "hMmxx": 1,
                "hMmCajPW": 1,
                "hMmCi": 2,
                "uEhMmxxWj": 1,
                "F0f98t": 1,
                "f9~2t": 1,
                "@SVW3": 1,
                "hMm  ": 9,
                " hDaclVj": 1,
                "WSSSSh": 2,
                "hMm  jDS": 1,
                "p(hMm  ": 1,
                "hMm  PS": 1,
                "9^(u#S": 1,
                "j(hH#@": 1,
                "q,;q(u": 1,
                "=PAGEtP=.edatI=INITtB": 1,
                "u/hMmDTh": 1,
                "hMmDTPW": 1,
                "jth`#@": 1,
                "DllInitialize": 1,
                "F,SWf": 1,
                "MmDTSPj": 1,
                ";A,u ": 1,
                "PAGEt": 1,
                ".edat": 1,
                "H,;H(t": 1,
                "f9G8t": 1,
                "DllUnload": 1,
                " SVWh": 1,
                "MmLoadSystemImage: Pulled %wZ from kd": 1,
                "SYSLDR": 2,
                "%ws%wZ": 1,
                "hMmLnh": 1,
                "u$j j": 1,
                ";H,tU": 1,
                "NhMmLdPV": 1,
                "hMmDT": 3,
                "f!C$f!C&": 1,
                "win32k": 3,
                "dxapi": 1,
                "coverage": 1,
                "ntdll": 1,
                "winsrv": 1,
                "advapi32": 1,
                "kernel32": 1,
                "user32": 1,
                "gdi32": 1,
                "ntoskrnl": 2,
                "t:hMmDT": 1,
                "t.Vhl": 1,
                "hMmDTf": 1,
                "hMmDT@@f": 1,
                "tKhMmDT": 1,
                "VhVadlj4j": 1,
                "9^Lt^": 1,
                "|:hMmTxj": 1,
                "hPte j": 1,
                "hMmDb": 1,
                "hMm  WP": 1,
                "F0;F,u": 1,
                "B;Q,r": 1,
                "tMhMmSej": 1,
                "t>hMmSej": 1,
                "@48H\"": 1,
                "j4_hVadl": 1,
                "ShMmCxj": 1,
                "F t93": 1,
                "jDh($@": 1,
                "E+@u\"": 1,
                "E) t%": 1,
                "@  t};}": 1,
                "hMmRl": 2,
                ";H8uv": 1,
                "t,jUPSW": 1,
                "j|hP$@": 1,
                "hVadFj": 1,
                "B$Du1": 1,
                "hMmSdj0j": 1,
                "j WWVWS": 1,
                "hMmRwWj": 1,
                "} v#W": 1,
                "HdSVW": 1,
                "Mm  S": 1,
                "s5WhMmSPh": 1,
                "@hMp10": 1,
                "QQSVhMmAwj": 1,
                "hMmRwVW": 1,
                "hMmRwSj": 1,
                "v)hMmRwSj": 1,
                "hVadLWj": 1,
                "jLhH&@": 1,
                "t+;q,w": 1,
                ";Q wq": 1,
                ";N w@": 1,
                "t)Ht Ht)Ht": 1,
                "WWWh ": 1,
                "ShMmHvj j": 1,
                "@hMmHn@Ph": 1,
                "VhMmHij": 1,
                "hHotP": 3,
                "hPaeDV": 1,
                "hMmClPj": 1,
                "hMmChj": 1,
                "hMmCdj(W": 1,
                "@'@t,hVadlj4W": 1,
                "j WWj": 1,
                "B' t'": 1,
                "MmCd3": 1,
                "tK9?tGd": 1,
                "E SV3": 1,
                "hObSth": 1,
                "hObHd": 1,
                "OB: GrantedAccess cache limit hit.": 1,
                "E  tP": 1,
                "u!8S}t": 1,
                "jXhH'@": 1,
                "9HDt\"": 2,
                "E uTd": 1,
                "j(hX'@": 1,
                "hObDij": 1,
                "|Hj)Y3": 1,
                "hObNmPj": 3,
                "I@AAf": 1,
                "E,SVW3": 1,
                "u:f9;t^": 1,
                "uU9}$tP": 1,
                "WhObSqQj": 1,
                "hObSqP": 1,
                "E#_^[": 1,
                "hWaitPV": 1,
                "hObNmSj": 1,
                "ObjTt": 1,
                "6;wXv": 1,
                "j(hP(@": 1,
                "j h`(@": 1,
                "QQSVW>": 1,
                "_hObArV": 1,
                "CH`'H": 1,
                "vDhObAr": 1,
                ";=p'H": 2,
                "hObSc": 1,
                "WWj@P": 3,
                "VWWWj": 1,
                "SVWt&": 1,
                "8X|td;": 1,
                "hObNm": 2,
                "PVVj V": 1,
                "hSymtWj": 1,
                "jDh )@": 1,
                ";5x'H": 2,
                "HtsHt": 1,
                "VhObDmj0j": 2,
                "VhPoSLj": 1,
                "hhibrPh": 2,
                "HSVWh|": 1,
                "hhibrVj": 1,
                "SSSSSh ": 1,
                "Vhhibrh": 1,
                "VhPoZr": 1,
                "|FVhD": 1,
                "hsrpX": 1,
                "u@hHmaph": 1,
                "{X97u:95l_G": 1,
                "hHmap": 2,
                "hMem ": 1,
                "hDbg Vh": 1,
                "Vh0[N": 1,
                "hrfbWh": 1,
                "hklbCh": 1,
                "hkbOIh": 1,
                "95t_G": 1,
                "hhibr": 1,
                "hDmem": 1,
                "WWWWjpZ": 1,
                "vLPWS": 1,
                "C090u": 1,
                "Cp9sp}": 1,
                "tGHHt": 1,
                "SSSSjPZ": 1,
                "VWj:Y3": 1,
                "uJhPAcWj S": 1,
                "AuthenticAMD": 2,
                "0[_^]": 1,
                "Ht0Ht": 1,
                "hThrmh": 1,
                "DhPSwtj": 1,
                "Ph +H": 2,
                "[t8Ht!Ht": 1,
                "S09S0u": 1,
                "Z9S<v": 1,
                "CD9CH}": 1,
                "CH9CL~": 1,
                "tWjL_;": 1,
                "t<jL_;": 1,
                "t{HtYHt7Ht": 1,
                "q09>tn9y<ti": 1,
                "v=SVW": 1,
                "ev?SVW": 1,
                "SVhPDssh ": 1,
                "Wh +H": 1,
                "Wh!+H": 1,
                "tFWh\"+H": 1,
                "s`j$Z+": 1,
                "It=It\"WWW": 1,
                ";=t*H": 1,
                "Ht;Ht,Ht!QQQWjpZ": 1,
                "NPQRP": 1,
                "j0h0,@": 1,
                "j4h@,@": 1,
                "hPSSh": 1,
                "hPsQbj@W": 1,
                "HHtQH": 1,
                "HHtZH": 1,
                "|zhPsWsWj": 1,
                "HtjHHt": 1,
                "uEhPsI": 1,
                "QSVWd": 1,
                "j4hP.@": 1,
                "j hh.@": 1,
                "9w<uB": 1,
                "t8SVWj": 1,
                "PVVhX": 1,
                "u0Ph,": 1,
                "9} tnhPsCaj0W": 1,
                "PVVh`": 1,
                "9u$t*V": 1,
                "hSePaWj": 1,
                "hSePaj": 1,
                "hPVVh": 1,
                "RWhPsapj0j": 1,
                "}SSSS": 1,
                "HVVVVh": 1,
                "WWWWV": 2,
                "Break, or Ignore (bi)? ": 1,
                "t/;5T1H": 1,
                "t';5(@H": 1,
                "\";5T2H": 1,
                "PWWWV": 1,
                "Critical thread 0x%p (in %s) exited": 1,
                "Critical process 0x%p (%s) exited": 1,
                "PPPVh": 1,
                "PPPPS": 1,
                "oSSSWh": 1,
                "|2hPsT": 1,
                "Terminating critical thread 0x%p (in %s)": 1,
                "Terminating critical process 0x%p (%s)": 2,
                "t?;5T1H": 1,
                "t7;5(@H": 1,
                "j$h(/@": 1,
                "hPsLd": 3,
                "j hX/@": 1,
                "xDSSSSh": 1,
                "r`QQW": 1,
                "u#hPsLdj": 1,
                "hVmdl": 1,
                "u'hPsLdj": 1,
                "WWWWh": 3,
                "u$hPsLdj": 1,
                "hPs  j@V": 1,
                "Nu;8Y": 1,
                "Nu78Y": 1,
                "hPs  jxj": 1,
                "hPsTfj$3": 1,
                " uOj Y": 1,
                " u#j Y": 1,
                "j h@0@": 1,
                "hPsjbVj": 1,
                "j hP0@": 1,
                " SVWd": 1,
                "v;j j": 1,
                "u'j j": 1,
                "t4hPsCrj": 1,
                "u%j j": 1,
                "uFSSV": 1,
                "u#SSV": 1,
                "uMRQV": 1,
                "tFHt9": 1,
                "SSSSj\"": 1,
                "N\\;H\\v": 1,
                "Vt Ht": 1,
                "PSSWhH": 1,
                "t>HHt+Ht": 1,
                "|B9^4u": 1,
                "h waRjXS": 1,
                "j,h81@": 1,
                "jXhH1@": 1,
                "Ht!Ht": 1,
                "<Of;=": 1,
                "P$f92v": 1,
                "@@_^[": 2,
                "@BBIu": 1,
                "j,hX1@": 1,
                "VWrL<": 1,
                "ItRIt": 1,
                "9Atomu3Vd": 1,
                "j%[VW": 1,
                "hAtmT": 1,
                "j hh1@": 1,
                "j hx1@": 1,
                "9#ufAA3": 1,
                "9wO@@f": 1,
                "hAtmA": 1,
                "lf9>u": 1,
                "tuf9p": 1,
                "t5f9p": 1,
                "QQSVWh": 2,
                "9M0t(P": 1,
                "SSSSWWPQ": 1,
                ";w$se": 1,
                "Abandoning uncommitted range (%x for %x)": 1,
                "Heap missing last entry in committed range near %x": 1,
                ";K$u6": 1,
                "HEAP: Free Heap block %lx modified at %lx after it was freed": 7,
                "Ignoring RtlDestroyHeap( NULL )": 1,
                "Failed to initialize a new segment (%x)": 1,
                "r8;E ": 1,
                "t\";y(w": 1,
                "Failing creating uncommitted range (%x for %x)": 1,
                "Invalid flags (%08x) specified to RtlCreateHeap": 1,
                "jLh(2@": 1,
                "Jt\"Jt6JtJ": 1,
                "jThP2@": 1,
                "rJf=z": 1,
                "rJf=Z": 1,
                "FFBBf": 1,
                "FFGGf;": 2,
                "3GGCCf;": 1,
                "48GGf;": 1,
                "8f99s": 1,
                "hSeAcSj": 1,
                "NtzNt": 1,
                "E(SVWj": 1,
                "SSSSSSS": 1,
                "hSeSd": 2,
                "f%0(f": 1,
                "tJ8]7tE8]": 1,
                "hSeSdPj": 1,
                "E @tu": 1,
                "E  t1": 1,
                "uW9}$": 1,
                "j<h87@": 1,
                "t*HHt!": 2,
                "<a|$<f": 1,
                "r0f=f": 2,
                "j\\hh7@": 1,
                "t@HHt0": 2,
                "SVWtO": 1,
                "hRqrv": 1,
                ">%u'3": 1,
                "?%t.GG@@;": 1,
                "KKFF3": 1,
                "SSSSPW": 1,
                "RTL: Expand variables for %wZ failed - Status == %lx Size %x > %x <%x>": 1,
                "RTL: Expand variables for %wZ failed - Status == %lx": 1,
                "RtlpCallQueryRegistryRoutine: skipping expansion.  Status=%x RequiredLength=%x": 1,
                "RtlpCallQueryRegistryRoutine: skipping environment expansion.  ValueLength=%x": 1,
                "@@IIu": 1,
                "Ph6aP": 1,
                "Ph~aP": 1,
                "RtlQueryRegistryValues: Miscomputed buffer size at line %d": 2,
                "VWj+Yj83": 1,
                "|hVWj": 1,
                "hVolS": 1,
                "VVj!j": 2,
                "SVWuq": 1,
                "4Ff;5": 1,
                "j<Yj<[": 1,
                "LdrRelocateImageWithBias": 1,
                "%s: %s() failed 0x%lx": 1,
                "%s: OldBase     : %p": 1,
                "%s: NewBase     : %p": 1,
                "%s: Diff        : 0x%I64x": 1,
                "%s: NextOffset  : %p": 1,
                "%s: *NextOffset : 0x%x": 1,
                "%s: SizeOfBlock : 0x%lx": 1,
                "VPQPSP": 1,
                ".hotp1  ": 1,
                "8HOT1u": 1,
                "(no change)": 3,
                "%08I64X: VA64 %016I64X -> %016I64X %s": 1,
                "%08I64X: PC32 %08X -> %08X (target %08X) %s": 1,
                "%08I64X: VA32 %08X -> %08X %s": 1,
                " (padding)": 1,
                "          None%s": 1,
                "%08I64X: Unknown": 1,
                "Invalid fixup information": 1,
                "y$+x(": 1,
                "Validation failure. Source = %lx, Target = %lx, Size = %lx": 1,
                "Invalid target validation range": 1,
                "Invalid source hotpatch validation range": 1,
                "Skipping hook-specific validation range during global validation": 1,
                "Validation failed for global range %u of %u": 1,
                "Invalid hotpatch validation array pointer": 1,
                "/WCSh": 1,
                "Invalid hotpatch validation pointer in hook record": 1,
                "Hook type not yet implemented": 1,
                "IItOIIt": 1,
                "Invalid hotpatch hook pointer": 1,
                "Invalid hook type specified": 1,
                "Invalid hotpatch relative address": 2,
                "%08I64X: jmp %08X (PC+%08X) {": 1,
                " %02X": 1,
                ">;QPr": 1,
                "No hooks defined in hotpatch": 1,
                "Inserting %u hooks into target image": 1,
                "Invalid hotpatch hook array pointer": 1,
                "QQVhHotPj4j": 1,
                "E$_^3": 1,
                "sL^[]": 1,
                "t>hSe  j": 1,
                "hSeTdj8W": 2,
                "A;HLr": 1,
                "A;HPr": 1,
                "hSeTdVj": 1,
                "J0+rx": 2,
                "VVVVVW": 3,
                "t<hSe  j": 1,
                "FP;E$w": 1,
                "hSeTdWj": 1,
                "89NPtA9KPu?": 1,
                "E,_^[": 2,
                "jDh0H@": 1,
                "jPhHH@": 1,
                "PVVSV": 1,
                "90uGG": 1,
                "},VVVVVW": 1,
                "hSe  Pj": 1,
                "jphxH@": 1,
                "RRQWP": 1,
                "hSe  ": 4,
                "hSe  Sj": 1,
                "@hSe  ": 1,
                "hSe  Vj": 1,
                "hSe  j": 2,
                "OhSe  j": 1,
                "hSe  j8j": 1,
                "hSeOt": 1,
                ";x t%": 1,
                "SVWtJHt%H": 1,
                "hSePr": 1,
                "SVWtr": 1,
                "tphSeGa": 1,
                "u4VPW": 2,
                "8]$u)": 1,
                "u SSW": 1,
                "hSePrPj": 1,
                "Wj~Y3": 2,
                "u9hSeOn": 1,
                "u-hSeTn": 1,
                "VWj~Y3": 1,
                "SePaS": 1,
                "hSePaWV": 1,
                "hSePa": 1,
                "PDj~Y3": 1,
                "A@;E@r": 1,
                "IhSeAp": 1,
                "A;M@j": 1,
                "tOhSeUs": 1,
                "~0tV8F`t": 1,
                "2PPPj": 1,
                "}$t39": 1,
                "t>v4S": 1,
                "hSePrWj": 4,
                "9u t#": 1,
                "8]Ht[hSeGa": 1,
                "hSeGa": 1,
                "t$hSeGa": 1,
                "M$QRP": 1,
                "u PPPP": 1,
                "uE9u(t@": 1,
                "0hSeSi": 2,
                "Se  tB": 2,
                "tS8] ": 1,
                "E$u0SSSj": 1,
                "hSeScP": 1,
                "VhToPdj": 1,
                "hToPdPj": 1,
                "8hSe  j": 1,
                "JhSeSiV": 1,
                "MhSeAcV": 1,
                "HhSeLuV": 1,
                "hSeTaS": 1,
                "2hSeSaS": 1,
                "hSePaV": 1,
                "G;~Lr": 1,
                "uGG;~Lr": 1,
                "VWhSeHah": 1,
                "hSeDbVj": 1,
                "hSeHa": 1,
                "VWhSeLwj0j": 1,
                "tVhSeFSj": 1,
                "VhSeLsj": 1,
                "hSeFSj": 1,
                "PPPPjF": 1,
                "j<h(L@": 1,
                "tJHt1Ht$Ht": 1,
                "|%VVVVV": 1,
                "9u@u2": 1,
                "hSeTdj8j": 1,
                "F;u,r": 1,
                "09uXt&hSe  j": 1,
                "hSeTd": 1,
                "E,|Wd": 1,
                "VVVPS": 1,
                "VVVVVS": 1,
                "E,9u,": 1,
                "Php|Q": 1,
                "j,h8L@": 1,
                "PVVSSWV": 1,
                "RVVSSWQ": 2,
                "QVVSSWP": 2,
                "QVSSSWP": 1,
                "Pj(hh": 1,
                "v_hSeTdPj": 1,
                "j|hxL@": 1,
                ";F\\vK": 1,
                ";F\\v0": 1,
                "t]VWh`": 1,
                "hSeAp": 1,
                "SVWhSeAi3": 1,
                "|~Vh6": 1,
                "XhSe  Pj": 1,
                "Fp@uZ": 1,
                "$f9Vlt$": 1,
                "Npt:V": 1,
                "F8_^[]": 1,
                "IOCTL_VDM_PAR_WRITE_DATA_PORT failed %lx %x": 1,
                "j0h`N@": 1,
                "LF(f;": 1,
                "j$hxN@": 1,
                "VdmPrintStatus: failed to flush buffered data, status = %ls": 1,
                "VdmPrinterStatus: failed to get status from printer, status = %lx": 1,
                "j,h@O@": 1,
                "C, t(": 1,
                "hVDM j$j": 1,
                "hWmith@": 1,
                "j$^VS": 1,
                "ItnItaItEIt6It": 1,
                "hWmiih": 1,
                "Wmiptd": 1,
                "hWmipVj": 3,
                "SQWSS": 1,
                "hWmipPj": 6,
                "VhWmith": 1,
                "Wj*Y3": 1,
                "SQPPP": 1,
                "F ^[_": 1,
                "hWmitVj": 1,
                "x0Hv23": 1,
                "hWmip": 11,
                "9sPtP": 1,
                "PhHA\"": 1,
                "Sh<:G": 8,
                "j<hXS@": 1,
                "QQQQP": 1,
                "X(C;]": 1,
                "PQQQW": 1,
                "9SPto": 1,
                "hWmitWj": 1,
                "Wj<RP": 2,
                "CXHHt9Ht": 1,
                "hWmit": 7,
                "v]9{4tX": 1,
                "t|j$Z": 1,
                "v!hWmip": 1,
                "w;~ sv": 1,
                "Vh :G": 2,
                "Vh<:G": 1,
                "tfhWmijj@j": 1,
                " ;C4r": 2,
                ";5h9H": 1,
                "WhWmit": 1,
                "f9F|t=9F": 1,
                "~Lte3": 1,
                ";FT~\"": 1,
                "t4hWmip": 1,
                "\\SVWj": 1,
                "|Xj-3": 1,
                "t98^xt": 1,
                "v(h<:G": 1,
                "FBB;u": 1,
                "t2j-j": 1,
                "tFHt4Ht&Ht": 1,
                "RQSWV": 1,
                "u@hWmit": 1,
                "YhWmit": 1,
                "$WmitPj": 1,
                "9s vc": 1,
                "hWmiI": 1,
                "w98U$t": 1,
                "u#8U(t": 1,
                "v0j@V": 2,
                "v0jDV": 2,
                "PhxHR": 1,
                "hWmiD": 1,
                "VhWmipj": 1,
                "?hWmip": 1,
                "C;^(Y": 1,
                "C, t`": 1,
                ">hWmip": 1,
                "G;~(r": 2,
                "SVWj$Y": 1,
                "w096u": 1,
                "v\"hWmip": 1,
                "s<VVVj": 1,
                "|FWhWmipj0V": 1,
                "t'VVVVh*": 1,
                "uKhWmiCj": 1,
                "t/PPPW": 1,
                "WhWmip": 1,
                "Wh<:G": 3,
                "C4;F(": 1,
                "VhX:G": 4,
                "BdVPR": 1,
                "C- t(S": 1,
                "PhX:G": 1,
                "Ph<:G": 2,
                "QQSW3": 1,
                "s h<:G": 1,
                ":ShX:G": 1,
                "Pht:G": 1,
                "VWhWmipj": 1,
                "t-h<:G": 1,
                "6;5|9H": 1,
                "YYt(G;~(r": 1,
                "QhWmip": 1,
                "SMBiosData": 1,
                "Wt\\It.": 1,
                "~0j8Y": 1,
                "Qj<h#": 1,
                "9{@vW": 1,
                "WWWWS": 2,
                "9{@vM": 1,
                "vq9s8tlhWmijj@j": 1,
                "tXSVW": 1,
                "'PhX:G": 1,
                "WmipW": 1,
                "Vht:G": 2,
                "F(;G(u": 2,
                "YYt82": 1,
                "C;^(r": 1,
                "VWuShWmip": 1,
                "Wh :G": 3,
                "v h<:G": 1,
                ";5|9H": 2,
                "tjhX:G": 1,
                "}+Wh :G": 1,
                "=_SM_u)": 1,
                "SVWu`": 1,
                "3vBhWmipVj": 1,
                "9_SYSu8f": 1,
                "_UUID_": 1,
                "_1394_": 1,
                "hWmisPj": 1,
                "vGhWmisj": 1,
                "9=L9H": 1,
                "t>Ht;Ht8Hu5j": 1,
                "SSSSW": 2,
                "SVWhPlcp3": 1,
                "hPlclj": 2,
                "hStrg": 3,
                "hCbrbj": 1,
                "VhObtb": 1,
                "WhObtdVj": 1,
                "VhObtbjDj": 1,
                "AVRF: Invalid handle %p in process %p ": 1,
                "F8;G8r": 1,
                "0SVWh": 1,
                "hInfo": 2,
                "(t:Ht/": 1,
                "6thHHtS": 1,
                "FT_^]": 1,
                "_^[|P": 1,
                "AAf=0": 1,
                "hInfoPj": 1,
                " !0000\"#0$0%&": 1,
                "+,-000-.0/": 1,
                "8hKey PS": 1,
                "$Key ": 1,
                "^u,8]": 1,
                "j0h`W@": 1,
                "u;h\"$S": 1,
                "^txhz,S": 1,
                "tc9= ": 1,
                "DSVWd": 1,
                "PSSShp\\W": 1,
                "4SVWd": 1,
                "VVVVVj": 1,
                "t<Ht2Hu;": 1,
                "****************************************************************": 2,
                "* The system detected a bad signature on file %wZ": 1,
                "j4h0X@": 1,
                "RQPVV": 1,
                "hAtomVW": 2,
                "j4h@Y@": 1,
                "WILL BREAK": 1,
                "no break": 1,
                "DISABLED": 1,
                "enabled": 1,
                "Break top of XIPLocatePages.  bounced=%x  attempted=%x  succeeded=%x": 1,
                "  %x nt!XIPlocate_disable  %s": 1,
                "  %x nt!XIPlocate_breakin %s": 1,
                "  %x nt!XIPConfiguration": 1,
                "  Would have returned address %x  (npages was %x)": 1,
                "RVPWh0": 1,
                "hHotPVj": 1,
                "EnvrVW3": 1,
                "EnvrVSW": 1,
                "PSSj$S": 1,
                "j,hXZ@": 1,
                "QSSj S": 1,
                "Pj\\Sj0S": 1,
                "WWWWh`?H": 1,
                "hProf": 1,
                "Wh`?H": 2,
                "|cWSSSS": 1,
                "j<hX[@": 1,
                "j8hh[@": 1,
                "VWhNBqhj": 1,
                "Shx[@": 1,
                "u$j)Y": 1,
                "VWj)Y3": 1,
                "sdbfu": 1,
                "VWQPS": 1,
                "WQPSV": 1,
                "SSj`j": 1,
                "|+f9u": 1,
                "PPj`j": 1,
                "hSdba": 2,
                "PhHb@": 1,
                "9MZu5": 1,
                "VWj0_": 1,
                "pu>f;": 1,
                "tjf=*": 1,
                "ta<*t ": 1,
                "YYuHF": 1,
                "WjdY3": 1,
                ",_^[]": 1,
                "WjAY3": 1,
                "j(h@p@": 1,
                "9{0s.hArbAWj": 1,
                "uOVhArbM": 1,
                "hArbLh": 1,
                "hArbL": 3,
                "vkf;s": 1,
                "hArbCh": 1,
                "hArbC": 1,
                "WhArbMj": 1,
                "hArbA": 1,
                "ArbRWj": 1,
                "49A4t": 3,
                "VhCcPwjHj": 1,
                "Vh:?F": 1,
                " SSSSP": 1,
                "hCcPwj@S": 1,
                "9^dtI9^p": 1,
                " ;Fpr": 2,
                "WWQVh ": 1,
                "ShCcPMh": 1,
                "SSh!@": 1,
                "|zVhCcPq": 1,
                "j(X9E": 1,
                "VVVVj@j": 1,
                "GGAA;": 1,
                "VVj j": 4,
                ";V\\snA": 1,
                "9~\\v;SVR": 1,
                "tTG;~\\r": 1,
                "t9~\\t": 1,
                "Ht{Ht": 1,
                "hCcPD": 1,
                "ASCCY": 1,
                "FphCcPD": 1,
                "CX9Np": 1,
                ";VpsS": 1,
                ";K\\s8": 1,
                "hCcPv": 2,
                "YtVHtDHt": 1,
                "hCcPI": 1,
                "hCcPL": 1,
                "(;Gpr": 1,
                "hCcPF": 2,
                "DAfPh": 1,
                "p<PSh": 1,
                "u^hCcPpPj": 1,
                "SPWWW": 1,
                "$CcPqPh": 1,
                "WWWWW": 1,
                "WWWWj": 3,
                "u;95|": 1,
                "ShCcPThp": 1,
                "Sh CF": 1,
                "ClhCcPBh": 1,
                "hCcPs": 1,
                "hCmVn": 1,
                "Hu\"9}": 1,
                "SVhCMpbj$j": 1,
                "hCM44j": 1,
                "Ht5Ht": 1,
                "hCMpaj0W": 1,
                "hCMpej": 1,
                "@ hCM45j": 1,
                " Subkeys open inside the hive (%p) (%.*S) :": 1,
                "QPVPP": 1,
                "N$;A$t": 1,
                "PVhL*T": 1,
                "w'f9]": 1,
                "Unknown": 2,
                "Process.Thread : %p.%p (%s) is trying to create key: ": 1,
                "ObjectAttributes = %p": 1,
                "The caller should not rely on data written to the registry after shutdown...": 1,
                "RSPSQ": 1,
                "hCM  Vj": 3,
                "u>hCM  ": 1,
                "t=SWV": 1,
                "tGhR^T": 1,
                "^8|>S": 1,
                "Uniprocessor": 1,
                "%s %s": 1,
                "LastKnownGood": 2,
                "HHt;Hu]": 1,
                "Failed to convert SYSTEM hive to mapped (0x%lx) ... loading it in paged pool": 1,
                "PhphT": 1,
                "u6hCM  j": 1,
                "CM  W": 1,
                "t.hCM  j": 1,
                "hCM  Pj": 5,
                "u-hCM  ": 1,
                "u=hb~T": 1,
                "uDhCM  ": 1,
                "Dumping untriggered notifications for hive (%lx) (%.*S) ": 1,
                "AsyncKernel ": 1,
                "AsyncUser   ": 1,
                "Synchronous ": 1,
                "Notification, PostBlock %p not triggered on KCB %p": 1,
                "Dumping open handles : ": 1,
                "0Pj Vh(": 1,
                "DSVW3": 1,
                "t,hCM  j": 1,
                "HtzHuP": 1,
                "hCMnbj,j": 1,
                "vNSVW": 1,
                "SPPPWP": 1,
                "CM  Vj": 1,
                ";HXs$QP": 1,
                "SharedCacheMap still has dirty pages after purge and flush; FileObject = %p ": 1,
                "9x`_[t": 1,
                "9x t>2": 1,
                ";riVW": 1,
                "f=lft": 3,
                "f=lht": 3,
                "lftLf": 1,
                "lft f": 1,
                "lfVWt7f": 1,
                "u0G;}": 1,
                "tISPW": 1,
                "hCM8 ": 1,
                "lfu5f": 1,
                "lhu`f": 1,
                "tkf=\\": 1,
                "f=lhu": 1,
                "1f=lf": 1,
                " Current process is opening a key tagged as BREAK ON OPEN": 1,
                "Please type the following in the debugger window: !reg kcb %p": 2,
                "8]$tV": 1,
                "PSSjDS": 1,
                "FLPSf": 1,
                "FHf;E": 2,
                "t0Cf;_": 1,
                "ControlSet%03d": 1,
                "hCM11": 1,
                "hCM12j": 1,
                ">regfun9~": 1,
                ">regfu": 2,
                "hCM13": 1,
                "hCM14j": 1,
                "@u_WS": 1,
                "WsahCMS": 1,
                "WhCM  ": 1,
                ">riu,": 1,
                "?riu,": 3,
                "u<hCM  j": 2,
                "FB9_@s": 1,
                "F$;H$t": 1,
                "F$;x$u": 1,
                "?riu0": 1,
                "f=lftCf=lht=": 1,
                "}f=lft>f=lht8": 1,
                "?riu%": 1,
                "FFGG;": 2,
                "G;~$r": 2,
                "AA@Bf;S": 1,
                "AA@@BBf;S": 1,
                "CMCaV": 1,
                "Process %p (PID = %lx ImageFileName = %s) (KCB = %p) :: Key %wZ ": 1,
                "Callers Stack Trace : ": 1,
                " CallerAddress[%lu] = %p ": 1,
                "t9hl8U": 1,
                "FJ_^]": 1,
                "G63FH": 1,
                "PPPPPPPj": 1,
                "hCM22": 1,
                "K`9K\\Yj5": 1,
                "P`9P\\": 1,
                "@J@u#": 1,
                "SSSSSSSj": 1,
                "hCM  GG": 1,
                "t49_0t/9": 1,
                "N$SSPV": 1,
                "f=lft$f=lht": 1,
                "VhCM  h": 1,
                "CM: Registry security exception %lx, ExceptionPointers = %p": 1,
                "hQSSj": 1,
                "CM  3": 1,
                "CM  S": 1,
                "QSVhCM ": 1,
                "s+QPW": 1,
                ">20ykuB": 1,
                ">20ykuMW": 1,
                ";JX^r": 1,
                "hCM7 j": 1,
                "tRWSV": 1,
                "9]$Wt": 1,
                "uC9] u>9] t": 1,
                "u!9]$u": 1,
                "VhCM10Sh": 1,
                "hCM  j S": 1,
                "$CM  Pj": 1,
                "uT8]$tO9] |OSSSShO": 2,
                "t'9] }\"": 1,
                "9],t<j": 1,
                "FHSWP": 1,
                "St6PW": 1,
                "9^$vO": 1,
                "9^$v/": 1,
                "C;^$r": 1,
                "9~$v7": 1,
                "|SC;]": 1,
                "N<9H<": 1,
                "N@9H@s": 1,
                "hCM  h": 2,
                ")hCM  h": 1,
                "WhCM  h": 2,
                "LogFile for hive %p is %lx; will flush upon lock release": 2,
                ";qXspVQ": 1,
                "FileAddress = %lx, Map = %lx": 2,
                "O$9A(w-": 1,
                "mhCMHbSj": 1,
                "t0PVj": 1,
                "Primary": 10,
                "HvpDoWriteHive[2,%s]: Invalid sequence number for hive%p": 1,
                "HvpDoWriteHive[3,%s]: Failed to write header for hive%p": 1,
                "HvpDoWriteHive[4,%s]: Failed to flush header for hive%p": 1,
                "HvpDoWriteHive[5,%s]: Failed to allocate CopyDirtyVectorfor hive%p": 1,
                "HvpDoWriteHive[8,%s]: Failed to allocate offsetArray for hive%p": 1,
                "HvpDoWriteHive[10,%s]: Failed to write dirty run for hive%p": 1,
                "HvpDoWriteHive[11,%s]: Failed to flush hive%p": 1,
                "HvpDoWriteHive[12,%s]: CcSetValidDataFailed for hive %p": 1,
                "HvpDoWriteHive[11,%s]: Failed to write header for hive%p": 1,
                "HvpDoWriteHive[12,%s]: Failed to flush hive%p": 1,
                "HvpDoWriteHive[1]: Failed to flush hive %p": 1,
                "hCM38WP": 1,
                "u Sh(": 1,
                "hCMSb": 1,
                "SWhCM  ": 1,
                "=hCMA": 1,
                "CmpFileSetSize:": 1,
                "Handle=%08lx  OldLength = %08lx NewLength=%08lx  ": 1,
                "Disk is full while attempting to grow file %lx; will flush upon lock release": 1,
                "CmpFileFlush:": 1,
                "Failure1: status = %08lx  IoStatus = %08lx": 1,
                "QWWVP": 1,
                "CmpFileRead:": 1,
                "Failure2: status = %08lx  IoStatus = %08lx": 1,
                "CmpFileWrite: error exiting %d": 1,
                "SSSSSh": 2,
                "@hCMDc": 1,
                "PAQRW": 1,
                "QWWjDW": 1,
                "E f9x": 2,
                "Ht*Ht": 1,
                " Current process is creating a subkey to a key tagged as BREAK ON OPEN": 1,
                "hCM29j": 1,
                "CXuRhCM22": 1,
                "u)hCM23Vh": 1,
                "FhCM24Vh": 1,
                ">hbin": 1,
                "hCM25j": 1,
                "^XuZhCM27": 1,
                "u)hCM26Qh": 1,
                "yhCM28Qh": 1,
                ">hbinu": 3,
                ">hbinu/": 1,
                "u!hCM31j": 1,
                "hCM30j": 1,
                "VWhCM32j": 1,
                "hCM33j": 1,
                ">hbinu$": 1,
                "VhCM34j": 1,
                ">regfu49~": 1,
                "u:hCM35j": 1,
                "8hbin": 1,
                "hCM35j": 2,
                "u)hCM23Wh": 1,
                "BhCM24Wh": 1,
                "HvpRecoverData: SectorOffsetInBin = %lx,SectorImage = %p, Bin = %p, Source = %p": 1,
                "hCMSbPj": 1,
                "8DIRTt": 1,
                "hCM36": 1,
                "hCM  Wj": 1,
                "hCM37j": 1,
                "I$;A(s9P": 1,
                "VSWPh": 1,
                "hCM39j": 1,
                "j(Y9M": 1,
                "E SVW": 1,
                "hCMDa": 1,
                "E$_^[": 1,
                "hCMVI": 1,
                "hCMVa": 1,
                "9_$vP": 1,
                "C;_$r": 2,
                "K$;A(": 1,
                "hCMHb": 1,
                "hCM15": 1,
                "2hCM16": 1,
                "u6hCM17Vh": 1,
                "A`9A\\": 1,
                "u7hCM18j": 1,
                "@\\AQPS": 1,
                "hCM19": 1,
                "hCM20": 1,
                "hCM21j": 1,
                "?nkt>": 1,
                "?hbinu39w": 1,
                "PSSj<S": 1,
                "FPHHt": 1,
                "tHhDbgEh": 1,
                "|;WWWW": 1,
                "VVWPSP": 1,
                "7_^[]": 1,
                "VWtvIt_ItEIt4It)It": 1,
                ";pDtn;5T2H": 1,
                "SSRPQ": 1,
                "t hPp  Sj": 1,
                "|_SSSS": 1,
                "|4SSSS": 1,
                "Wj8Xj": 1,
                "PhBNV": 1,
                "PhZNV": 1,
                "E<USj": 2,
                "URSVW": 1,
                "_^[Z]": 2,
                "URSVWhG_V": 1,
                "[hKRQPj": 1,
                "VUh|dV": 1,
                "SVWUh3fV": 1,
                "t&Uh3fV": 1,
                "USVWQRh": 1,
                "ZY_^[]": 1,
                "Uh5nV": 1,
                "]<UWj": 2,
                "PSSSWj": 1,
                "QSSSPj": 1,
                "SSSSh0": 1,
                "t/hPp  ": 1,
                "9?tLV": 1,
                "@hDPwr@PS": 1,
                "hDPwrj(j": 1,
                "4@hKe  ": 1,
                "FhKe  ": 1,
                "4IhKe  ": 1,
                "teHt]Ht": 1,
                "@hMmPh": 1,
                "tPf9O": 1,
                "hMmdl": 1,
                "t=WVVh": 1,
                "hMmWe": 1,
                "Sh(IC": 1,
                "t j2[9~": 1,
                "s.hH\"@": 1,
                "0hMmDT": 1,
                "0SVWd": 1,
                "hMmHth": 1,
                "hHmapj": 1,
                "u 9Cp|:": 1,
                "C$_^[]": 1,
                "t!WWWWj": 1,
                "State saved, power off the system": 1,
                "HIBER: %lu Pages written in %lu Dumps (%lu runs).": 1,
                "HIBER: %lu Pages processed (%d %% compression)": 1,
                "HIBER: Elapsed time %3d.%03d seconds": 1,
                "HIBER: I/O time     %3d.%03d seconds (%2d%%)  %d MB/sec": 1,
                "HIBER: Init time     %3d.%03d seconds (%2d%%)": 1,
                "HIBER: Copy time     %3d.%03d seconds (%2d%%)  %d Bytes": 1,
                "SRPhr": 1,
                "v8QRPh": 1,
                "PopSave: %d%%": 1,
                "9X4Wty3": 1,
                "9^p|x": 1,
                "~X9_Tt": 1,
                "CX9HT": 1,
                "CXQQj": 1,
                "F0PSV": 1,
                "F@PSV": 1,
                "FLt#SSSS": 1,
                "hGathS": 1,
                "#90tI": 1,
                "G@PSW": 1,
                "t&;_<w": 1,
                "G8)_<": 1,
                "hstacP": 1,
                "hpcr hp": 1,
                "hpcrbhP": 1,
                "WhMimgh": 1,
                "xpress": 1,
                "KX9ATt.": 1,
                "Checksum for context page changed from %lx to %lx": 1,
                "Checksum for partial context page %lx doesn't match full %lx": 1,
                "MemImage->WakeCheck %lx doesn't make PoWakeCheck %lx": 1,
                "1tB+E": 1,
                "hibrY": 1,
                "9>Yt@": 1,
                ">brkpu": 1,
                ";=p_G": 1,
                "%hh_G": 1,
                "Shutdown": 1,
                "Hibernate": 1,
                "Sleeping3": 1,
                "Sleeping2": 1,
                "Sleeping1": 1,
                "Working": 1,
                "Unspecified": 1,
                "tCHt9Ht/Ht%Ht": 1,
                "SSSV3": 1,
                "9XXtz9]": 1,
                "@uF9]": 1,
                "QueryPower": 1,
                "SetPower": 1,
                "irp (%x) %s-%s status %x": 1,
                "Phh&W": 1,
                "Pht&W": 1,
                "Abort": 1,
                "Waiting on": 1,
                "ignored": 1,
                "SYS STATE": 1,
                "WWWV3": 1,
                "RPh`(H": 1,
                "po: POP_WAKE_DEVICE_AFTER_SLEEP enabled.": 1,
                "Retry": 1,
                "tph`(H": 1,
                "ShP'W": 1,
                "                       ": 1,
                "The system may be powered off now.": 1,
                "^h85W": 1,
                "HteHtJHt1H": 1,
                "H@QVP": 1,
                "PhP7W": 1,
                "t,9=H_G": 1,
                "]_^[]": 2,
                ",BFE;4$u": 1,
                "<AtXf9T;": 1,
                "ytOf9T": 1,
                "<AtBf9T;": 1,
                "yt9f9T": 1,
                "<At,f9T;": 1,
                "yt#f9T": 1,
                "<AtHf94:": 1,
                "yt@f94": 1,
                "<At4f94:": 1,
                "yt,f94": 1,
                "<At f94:": 1,
                "D08PQ": 1,
                "jdhXV@": 1,
                "j\\hhV@": 1,
                "SSSSP": 1,
                "VVVVP": 1,
                "STOP: %lx %s": 1,
                "HardError %lx": 1,
                "Exception Processing Message %lx Parameters %lx %lx %lx %lx": 1,
                "Unknown Hard Error": 1,
                "hErr ": 4,
                "O#:O\"": 2,
                "t=hIvo": 1,
                "j(hIrp ": 2,
                "C#:C\"": 1,
                "VWSh~iW": 1,
                "PQj}h": 1,
                "QPjzh": 1,
                "j hVeppPh": 1,
                "KD9K4": 1,
                "KD9K4w": 1,
                "u4){P": 1,
                "vPj`h": 1,
                "FP;FXv": 1,
                "F@;FHv!": 1,
                "FT;F\\v": 1,
                "FD;FLv": 1,
                "3Wjoh": 1,
                "SWhHalVh": 1,
                " PWRQ": 1,
                "*** Verifier assertion failed ***": 1,
                "(B)reak, (I)gnore, (W)arn only, (R)emove assert? ": 1,
                "hHalVh": 1,
                "Performance counter has decreased-- PC1: %I64x, PC0: %I64x": 1,
                "Performance counter skipped too far -- %I64x (%d milliseconds)": 1,
                "XP;XL": 1,
                "HP;HL": 1,
                "Hp;Hl": 1,
                "F`;F\\": 1,
                "QP_^[": 1,
                "Driver has attempted to access an adapter (%p) that has already been released": 1,
                "DMA adapters aren't supposed to be NULL anymore": 1,
                "Cannot put adapter %p until all adapter channels are freed (%x left)": 1,
                "Cannot put adapter %p until all common buffers are freed (%x left)": 1,
                "Cannot put adapter %p until all map registers are freed (%x left)": 1,
                "Cannot put adapter %p until all scatter gather lists are freed (%x left)": 1,
                "N\\;N`tq;": 1,
                "F\\+F`PWh$": 1,
                "F\\+F`": 1,
                "NT;NXtq;": 1,
                "FT+FXPWh": 1,
                "FT+FX": 1,
                "9^Htj;": 1,
                "9^Ptj;": 1,
                "Couldn't track common buffer allocation": 1,
                "Common buffer req len:%x alloc len %x, padding %x / %x": 1,
                "VhHalVj0j": 1,
                "%p Allocated Map register file": 1,
                "    %p Allocated MDL": 1,
                "    %p Allocated Map Register (%x)": 1,
                "hHalV": 1,
                "1hHalVh": 1,
                "F uT3": 1,
                "Area before %x byte allocation at %p has been modified": 1,
                "Area after %x byte allocation at %p has been modified": 1,
                "Verified driver or hardware has corrupted memory at %p": 1,
                "Padding before allocation at %p has been illegally modified at %p": 1,
                "Padding after allocation at %p has been illegally modified at %p": 1,
                "ShHalVh": 1,
                "QQVWj": 1,
                "HalGetAdapter API obsolete -- use IoGetDmaAdapter instead": 1,
                "HV: Couldn't find buffer %p": 1,
                "    %p Freeing Map Register (%x)": 1,
                "Freeing map register (%p) that has data and was not flushed.    This means that there was a data loss.": 1,
                "    %p Freeing MDL": 1,
                "%p Freeing Map Register File": 1,
                "x(9?tf": 1,
                "Driver at address %p has a problem": 1,
                "Master devices should return DeallocateObjectKeepRegisters": 1,
                "Driver is attempting to map a 0-length transfer": 1,
                "Virtual address %p is before the first MDL %p": 1,
                "Virtual address %p is after the first MDL %p": 1,
                "Dbl buffer: %x bytes, %p src, %p dest": 1,
                "Extra transfer length crosses a page boundary: Mdl %p, Length %x": 1,
                "Cannot flush buffers that aren't mapped (Addr %p)": 1,
                "FLUSH: Can only flush %x bytes to end of map register file (%x attempted)": 1,
                "Flush buffer: %x bytes, %p src, %p dest": 1,
                "Mapped and flushed transfer but hardware did not touch buffer %p": 1,
                "Flushing too many map registers": 1,
                "Cannot flush map register that isn't mapped! (Map register base %p, flushing address %p, MDL %p)": 1,
                "QSVWj ": 1,
                "    %p Allocated Wait Block": 2,
                "%p Freeing Wait Block": 3,
                "SVWj,": 1,
                "hHalVj,W": 2,
                "QQSVWj0": 1,
                "QQSVWj8": 1,
                "hIrp+Pj": 1,
                "G2 t\"": 1,
                "Ht2Ht": 1,
                "HpQj@": 1,
                "hDlckWj": 1,
                "Ht8Ht": 1,
                "Ht;Ht": 1,
                ")p(^]": 1,
                "xx v23": 1,
                "Verifier: deadlock: stop: %p %p %p %p %p ": 1,
                "SVWtC": 1,
                "@$3A$": 1,
                "DlckSh": 1,
                "v4SjhW": 1,
                "****************************************************************************": 2,
                "**                                                                        **": 2,
                "** Deadlock detected! Type !deadlock in the debugger for more information **": 1,
                ";HHt6": 1,
                "H@;HPr": 1,
                "H@;HDv": 1,
                "H<_^[": 1,
                "^j Y3": 1,
                "Deadlock detection: Must release resources in reverse-order": 1,
                "Resource %p acquired before resource %p -- ": 1,
                "Current thread (%p) is trying to release it first": 1,
                "9p t$": 1,
                "t1SVj": 1,
                "tBVWd": 1,
                "IO SYSTEM VERIFICATION ERROR in %s (%s %x)": 1,
                "[%s+%x at %p]": 1,
                "v(Ph(": 1,
                "***********************************************************************": 2,
                "* THIS VALIDATION BUG IS FATAL AND WILL CAUSE THE VERIFIER TO HALT    *": 1,
                "* WINDOWS (BUGCHECK) WHEN THE MACHINE IS NOT UNDER A KERNEL DEBUGGER! *": 1,
                "[%s @ 0x%p] ": 1,
                "[0x%p] ": 1,
                "NYY}.": 1,
                "http://www.microsoft.com/hwdq/bc/default.asp?os=%d.%d.%d&major=0x%x&minor=0x%x&lang=0x%x": 1,
                "Break, Ignore, Zap, Remove, Disable all (bizrd)? ": 1,
                "Break, Ignore, Disable all (bid)? ": 1,
                "Breakpoint zapped (OS will print text and return)": 1,
                "Breakpoint removed": 1,
                "Verification asserts disabled.": 1,
                "Breaking in... (press g<enter> to return to assert menu)": 1,
                "Bt}HHtT": 1,
                "SVWhVfGoj": 1,
                "Vj!Z3": 1,
                "@tnVj": 1,
                "Vj Z3": 1,
                "Vj\"Z3": 1,
                "Vj#Z3": 1,
                "hIrpt": 1,
                "IRP_MJ_SCSI": 1,
                "IRP_MJ_BOGUS": 1,
                "IRP_MJ_??": 1,
                ";O@t=": 1,
                "9Z,tU": 1,
                "IRP_MJ_SYSTEM_CONTROL.": 1,
                "IRP_MN_BOGUS": 3,
                "(Bogus)": 7,
                "tJWSj": 1,
                "t0WSj": 1,
                "IRP_MJ_POWER.": 1,
                "IRP_MJ_PNP.": 1,
                "(DeviceUsageTypeDumpFile": 1,
                "(DeviceUsageTypeHibernation": 1,
                "(DeviceUsageTypePaging": 1,
                "(DeviceUsageTypeUndefined": 1,
                ", InPath=TRUE)": 1,
                ", InPath=FALSE)": 1,
                "(BusQueryInstanceID)": 1,
                "(BusQueryCompatibleIDs)": 1,
                "(BusQueryHardwareIDs)": 1,
                "(BusQueryDeviceID)": 1,
                "(True)": 1,
                "(False)": 1,
                "(WhichSpace=%x, Buffer=%x, Offset=%x, Length=%x)": 1,
                "(DeviceTextLocationInformation)": 1,
                "(DeviceTextDescription)": 1,
                "(TargetDeviceRelation)": 1,
                "(RemovalRelations)": 1,
                "(PowerRelations)": 1,
                "(EjectionRelations)": 1,
                "(BusRelations)": 1,
                "t1Nt$Nt": 1,
                "t/Nt%Nt": 1,
                "SSSVW": 3,
                "K0|$;": 1,
                "u$9C@t": 1,
                "H$j Z": 1,
                "8_^[]": 1,
                "[ DevObj=%p, FileObject=%p, Parameters=%p %p %p %p ]": 1,
                "Next:    >": 1,
                "Current:  ": 1,
                "O$j Z": 1,
                "t1Ht*Ht+Ht$Ht!Hu\"": 1,
                "P ;V ": 1,
                "t^HtBHt": 1,
                "_Vh2?X": 1,
                "F$J6X": 1,
                "w`hIrpdh": 1,
                "t+It#It": 1,
                "j(hIrpBPS": 1,
                "j SSj": 1,
                "hIrps": 1,
                "sPj(Z": 1,
                "hWmitj0W": 1,
                "tAWWWV": 1,
                "C&WWWWh": 1,
                "_,_^[": 1,
                "hPerf": 1,
                "tSSVWW": 1,
                "9~ u(": 1,
                "SShdTG": 1,
                "PWh00": 1,
                "?t>9B": 1,
                "DEBUG": 1,
                "NODEBUG": 1,
                "CRASHDEBUG": 1,
                "hKDBG": 1,
                "YYt(2": 1,
                "90t*B": 1,
                "SVWu-": 1,
                "E Ht`Ht3HHt": 1,
                "E HtaHt3HHt": 1,
                "tzItFIt)It\"I": 1,
                "DVhKdIo3": 1,
                "hHdlsVS": 1,
                "H>f9H<uJ": 1,
                "tKhHdlsCSj": 1,
                "HdlsWj": 1,
                "tEW@P3": 1,
                "----Press <Enter> for more----": 1,
                "<?xml>": 1,
                "<INSTANCE CLASSNAME=\"BLUESCREEN\">": 1,
                "<PROPERTY NAME=\"STOPCODE\" TYPE=\"string\"><VALUE>\"0x%0X\"</VALUE></PROPERTY>": 1,
                "</INSTANCE>": 1,
                "</BP>": 1,
                "%02d:%02d:%02d.%03d : ": 1,
                "New log entries have been added during dump, command aborted.": 1,
                "New log entries have been added while waiting, command aborted.": 1,
                "restart": 1,
                "Type ? or Help for a list of commands.": 1,
                "d        Display all log entries, paging is on.": 1,
                "help     Display this list.": 1,
                "restart  Restart the system immediately.": 1,
                "?        Display this list.": 1,
                "!SAC>": 2,
                "YYu/VPh": 1,
                "reboot": 1,
                "shutdown": 1,
                "[%d;%dH": 1,
                "[%d;%dm": 1,
                "t{HtqHtgHt]HtSHt0H": 1,
                "YjPY+": 1,
                "ntoskrnl.exe": 1,
                "ExAcquireFastMutexUnsafe": 2,
                "ExAcquireRundownProtection": 1,
                "ExAcquireRundownProtectionEx": 1,
                "ExInitializeRundownProtection": 1,
                "ExInterlockedAddLargeStatistic": 1,
                "ExInterlockedCompareExchange64": 1,
                "ExInterlockedFlushSList": 1,
                "ExInterlockedPopEntrySList": 1,
                "ExInterlockedPushEntrySList": 1,
                "ExReInitializeRundownProtection": 1,
                "ExReleaseFastMutexUnsafe": 2,
                "ExReleaseResourceLite": 2,
                "ExReleaseRundownProtection": 1,
                "ExReleaseRundownProtectionEx": 1,
                "ExRundownCompleted": 1,
                "ExWaitForRundownProtectionRelease": 1,
                "ExfAcquirePushLockExclusive": 1,
                "ExfAcquirePushLockShared": 1,
                "ExfInterlockedAddUlong": 1,
                "ExfInterlockedCompareExchange64": 1,
                "ExfInterlockedInsertHeadList": 1,
                "ExfInterlockedInsertTailList": 1,
                "ExfInterlockedPopEntryList": 1,
                "ExfInterlockedPushEntryList": 1,
                "ExfInterlockedRemoveHeadList": 1,
                "ExfReleasePushLock": 1,
                "Exfi386InterlockedDecrementLong": 1,
                "Exfi386InterlockedExchangeUlong": 1,
                "Exfi386InterlockedIncrementLong": 1,
                "HalExamineMBR": 1,
                "InterlockedCompareExchange": 1,
                "InterlockedDecrement": 1,
                "InterlockedExchange": 1,
                "InterlockedExchangeAdd": 1,
                "InterlockedIncrement": 1,
                "InterlockedPopEntrySList": 1,
                "InterlockedPushEntrySList": 1,
                "IoAssignDriveLetters": 1,
                "IoReadPartitionTable": 1,
                "IoSetPartitionInformation": 1,
                "IoWritePartitionTable": 1,
                "IofCallDriver": 2,
                "IofCompleteRequest": 2,
                "KeAcquireInStackQueuedSpinLockAtDpcLevel": 1,
                "KeReleaseInStackQueuedSpinLockFromDpcLevel": 1,
                "KeSetTimeUpdateNotifyRoutine": 1,
                "KefAcquireSpinLockAtDpcLevel": 2,
                "KefReleaseSpinLockFromDpcLevel": 2,
                "KiAcquireSpinLock": 1,
                "KiReleaseSpinLock": 1,
                "ObfDereferenceObject": 1,
                "ObfReferenceObject": 1,
                "RtlPrefetchMemoryNonTemporal": 1,
                "RtlUlongByteSwap": 1,
                "RtlUlonglongByteSwap": 1,
                "RtlUshortByteSwap": 1,
                "WmiGetClock": 1,
                "Kei386EoiHelper": 1,
                "Kii386SpinOnSpinLock": 1,
                "CcCanIWrite": 1,
                "CcCopyRead": 1,
                "CcCopyWrite": 1,
                "CcDeferWrite": 1,
                "CcFastCopyRead": 1,
                "CcFastCopyWrite": 1,
                "CcFastMdlReadWait": 1,
                "CcFastReadNotPossible": 1,
                "CcFastReadWait": 1,
                "CcFlushCache": 1,
                "CcGetDirtyPages": 1,
                "CcGetFileObjectFromBcb": 1,
                "CcGetFileObjectFromSectionPtrs": 1,
                "CcGetFlushedValidData": 1,
                "CcGetLsnForFileObject": 1,
                "CcInitializeCacheMap": 1,
                "CcIsThereDirtyData": 1,
                "CcMapData": 1,
                "CcMdlRead": 1,
                "CcMdlReadComplete": 1,
                "CcMdlWriteAbort": 1,
                "CcMdlWriteComplete": 1,
                "CcPinMappedData": 1,
                "CcPinRead": 1,
                "CcPrepareMdlWrite": 1,
                "CcPreparePinWrite": 1,
                "CcPurgeCacheSection": 1,
                "CcRemapBcb": 1,
                "CcRepinBcb": 1,
                "CcScheduleReadAhead": 1,
                "CcSetAdditionalCacheAttributes": 1,
                "CcSetBcbOwnerPointer": 1,
                "CcSetDirtyPageThreshold": 1,
                "CcSetDirtyPinnedData": 1,
                "CcSetFileSizes": 1,
                "CcSetLogHandleForFile": 1,
                "CcSetReadAheadGranularity": 1,
                "CcUninitializeCacheMap": 1,
                "CcUnpinData": 1,
                "CcUnpinDataForThread": 1,
                "CcUnpinRepinnedBcb": 1,
                "CcWaitForCurrentLazyWriterActivity": 1,
                "CcZeroData": 1,
                "CmRegisterCallback": 1,
                "CmUnRegisterCallback": 1,
                "DbgBreakPoint": 1,
                "DbgBreakPointWithStatus": 1,
                "DbgLoadImageSymbols": 1,
                "DbgPrint": 1,
                "DbgPrintEx": 1,
                "DbgPrintReturnControlC": 1,
                "DbgPrompt": 1,
                "DbgQueryDebugFilterState": 1,
                "DbgSetDebugFilterState": 1,
                "ExAcquireResourceExclusiveLite": 2,
                "ExAcquireResourceSharedLite": 1,
                "ExAcquireSharedStarveExclusive": 1,
                "ExAcquireSharedWaitForExclusive": 1,
                "ExAllocateFromPagedLookasideList": 1,
                "ExAllocatePool": 2,
                "ExAllocatePoolWithQuota": 2,
                "ExAllocatePoolWithQuotaTag": 2,
                "ExAllocatePoolWithTag": 2,
                "ExAllocatePoolWithTagPriority": 2,
                "ExConvertExclusiveToSharedLite": 1,
                "ExCreateCallback": 1,
                "ExDeleteNPagedLookasideList": 1,
                "ExDeletePagedLookasideList": 1,
                "ExDeleteResourceLite": 1,
                "ExDesktopObjectType": 1,
                "ExDisableResourceBoostLite": 1,
                "ExEnumHandleTable": 1,
                "ExEventObjectType": 1,
                "ExExtendZone": 1,
                "ExFreePool": 2,
                "ExFreePoolWithTag": 2,
                "ExFreeToPagedLookasideList": 1,
                "ExGetCurrentProcessorCounts": 1,
                "ExGetCurrentProcessorCpuUsage": 1,
                "ExGetExclusiveWaiterCount": 1,
                "ExGetPreviousMode": 1,
                "ExGetSharedWaiterCount": 1,
                "ExInitializeNPagedLookasideList": 1,
                "ExInitializePagedLookasideList": 1,
                "ExInitializeResourceLite": 1,
                "ExInitializeZone": 1,
                "ExInterlockedAddLargeInteger": 1,
                "ExInterlockedAddUlong": 1,
                "ExInterlockedDecrementLong": 1,
                "ExInterlockedExchangeUlong": 1,
                "ExInterlockedExtendZone": 1,
                "ExInterlockedIncrementLong": 1,
                "ExInterlockedInsertHeadList": 1,
                "ExInterlockedInsertTailList": 1,
                "ExInterlockedPopEntryList": 1,
                "ExInterlockedPushEntryList": 1,
                "ExInterlockedRemoveHeadList": 1,
                "ExIsProcessorFeaturePresent": 1,
                "ExIsResourceAcquiredExclusiveLite": 1,
                "ExIsResourceAcquiredSharedLite": 1,
                "ExLocalTimeToSystemTime": 1,
                "ExNotifyCallback": 1,
                "ExQueryPoolBlockSize": 1,
                "ExQueueWorkItem": 1,
                "ExRaiseAccessViolation": 1,
                "ExRaiseDatatypeMisalignment": 1,
                "ExRaiseException": 1,
                "ExRaiseHardError": 1,
                "ExRaiseStatus": 1,
                "ExRegisterCallback": 1,
                "ExReinitializeResourceLite": 1,
                "ExReleaseResourceForThreadLite": 1,
                "ExSemaphoreObjectType": 1,
                "ExSetResourceOwnerPointer": 1,
                "ExSetTimerResolution": 1,
                "ExSystemExceptionFilter": 1,
                "ExSystemTimeToLocalTime": 1,
                "ExUnregisterCallback": 1,
                "ExUuidCreate": 1,
                "ExVerifySuite": 1,
                "ExWindowStationObjectType": 1,
                "Exi386InterlockedDecrementLong": 1,
                "Exi386InterlockedExchangeUlong": 1,
                "Exi386InterlockedIncrementLong": 1,
                "FsRtlAcquireFileExclusive": 1,
                "FsRtlAddLargeMcbEntry": 1,
                "FsRtlAddMcbEntry": 1,
                "FsRtlAddToTunnelCache": 1,
                "FsRtlAllocateFileLock": 1,
                "FsRtlAllocatePool": 1,
                "FsRtlAllocatePoolWithQuota": 1,
                "FsRtlAllocatePoolWithQuotaTag": 1,
                "FsRtlAllocatePoolWithTag": 1,
                "FsRtlAllocateResource": 1,
                "FsRtlAreNamesEqual": 1,
                "FsRtlBalanceReads": 1,
                "FsRtlCheckLockForReadAccess": 1,
                "FsRtlCheckLockForWriteAccess": 1,
                "FsRtlCheckOplock": 1,
                "FsRtlCopyRead": 1,
                "FsRtlCopyWrite": 1,
                "FsRtlCreateSectionForDataScan": 1,
                "FsRtlCurrentBatchOplock": 1,
                "FsRtlDeleteKeyFromTunnelCache": 1,
                "FsRtlDeleteTunnelCache": 1,
                "FsRtlDeregisterUncProvider": 1,
                "FsRtlDissectDbcs": 1,
                "FsRtlDissectName": 1,
                "FsRtlDoesDbcsContainWildCards": 1,
                "FsRtlDoesNameContainWildCards": 1,
                "FsRtlFastCheckLockForRead": 1,
                "FsRtlFastCheckLockForWrite": 1,
                "FsRtlFastUnlockAll": 1,
                "FsRtlFastUnlockAllByKey": 1,
                "FsRtlFastUnlockSingle": 1,
                "FsRtlFindInTunnelCache": 1,
                "FsRtlFreeFileLock": 1,
                "FsRtlGetFileSize": 1,
                "FsRtlGetNextFileLock": 1,
                "FsRtlGetNextLargeMcbEntry": 1,
                "FsRtlGetNextMcbEntry": 1,
                "FsRtlIncrementCcFastReadNoWait": 1,
                "FsRtlIncrementCcFastReadNotPossible": 1,
                "FsRtlIncrementCcFastReadResourceMiss": 1,
                "FsRtlIncrementCcFastReadWait": 1,
                "FsRtlInitializeFileLock": 1,
                "FsRtlInitializeLargeMcb": 1,
                "FsRtlInitializeMcb": 1,
                "FsRtlInitializeOplock": 1,
                "FsRtlInitializeTunnelCache": 1,
                "FsRtlInsertPerFileObjectContext": 1,
                "FsRtlInsertPerStreamContext": 1,
                "FsRtlIsDbcsInExpression": 1,
                "FsRtlIsFatDbcsLegal": 1,
                "FsRtlIsHpfsDbcsLegal": 1,
                "FsRtlIsNameInExpression": 1,
                "FsRtlIsNtstatusExpected": 1,
                "FsRtlIsPagingFile": 1,
                "FsRtlIsTotalDeviceFailure": 1,
                "FsRtlLegalAnsiCharacterArray": 1,
                "FsRtlLookupLargeMcbEntry": 1,
                "FsRtlLookupLastLargeMcbEntry": 1,
                "FsRtlLookupLastLargeMcbEntryAndIndex": 1,
                "FsRtlLookupLastMcbEntry": 1,
                "FsRtlLookupMcbEntry": 1,
                "FsRtlLookupPerFileObjectContext": 1,
                "FsRtlLookupPerStreamContextInternal": 1,
                "FsRtlMdlRead": 1,
                "FsRtlMdlReadComplete": 1,
                "FsRtlMdlReadCompleteDev": 1,
                "FsRtlMdlReadDev": 1,
                "FsRtlMdlWriteComplete": 1,
                "FsRtlMdlWriteCompleteDev": 1,
                "FsRtlNormalizeNtstatus": 1,
                "FsRtlNotifyChangeDirectory": 1,
                "FsRtlNotifyCleanup": 1,
                "FsRtlNotifyFilterChangeDirectory": 1,
                "FsRtlNotifyFilterReportChange": 1,
                "FsRtlNotifyFullChangeDirectory": 1,
                "FsRtlNotifyFullReportChange": 1,
                "FsRtlNotifyInitializeSync": 1,
                "FsRtlNotifyReportChange": 1,
                "FsRtlNotifyUninitializeSync": 1,
                "FsRtlNotifyVolumeEvent": 1,
                "FsRtlNumberOfRunsInLargeMcb": 1,
                "FsRtlNumberOfRunsInMcb": 1,
                "FsRtlOplockFsctrl": 1,
                "FsRtlOplockIsFastIoPossible": 1,
                "FsRtlPostPagingFileStackOverflow": 1,
                "FsRtlPostStackOverflow": 1,
                "FsRtlPrepareMdlWrite": 1,
                "FsRtlPrepareMdlWriteDev": 1,
                "FsRtlPrivateLock": 1,
                "FsRtlProcessFileLock": 1,
                "FsRtlRegisterFileSystemFilterCallbacks": 1,
                "FsRtlRegisterUncProvider": 1,
                "FsRtlReleaseFile": 1,
                "FsRtlRemoveLargeMcbEntry": 1,
                "FsRtlRemoveMcbEntry": 1,
                "FsRtlRemovePerFileObjectContext": 1,
                "FsRtlRemovePerStreamContext": 1,
                "FsRtlResetLargeMcb": 1,
                "FsRtlSplitLargeMcb": 1,
                "FsRtlSyncVolumes": 1,
                "FsRtlTeardownPerStreamContexts": 1,
                "FsRtlTruncateLargeMcb": 1,
                "FsRtlTruncateMcb": 1,
                "FsRtlUninitializeFileLock": 1,
                "FsRtlUninitializeLargeMcb": 1,
                "FsRtlUninitializeMcb": 1,
                "FsRtlUninitializeOplock": 1,
                "HalDispatchTable": 1,
                "HalPrivateDispatchTable": 1,
                "HeadlessDispatch": 1,
                "InbvAcquireDisplayOwnership": 1,
                "InbvCheckDisplayOwnership": 1,
                "InbvDisplayString": 1,
                "InbvEnableBootDriver": 1,
                "InbvEnableDisplayString": 1,
                "InbvInstallDisplayStringFilter": 1,
                "InbvIsBootDriverInstalled": 1,
                "InbvNotifyDisplayOwnershipLost": 1,
                "InbvResetDisplay": 1,
                "InbvSetScrollRegion": 1,
                "InbvSetTextColor": 1,
                "InbvSolidColorFill": 1,
                "InitSafeBootMode": 1,
                "IoAcquireCancelSpinLock": 1,
                "IoAcquireRemoveLockEx": 1,
                "IoAcquireVpbSpinLock": 1,
                "IoAdapterObjectType": 1,
                "IoAllocateAdapterChannel": 2,
                "IoAllocateController": 1,
                "IoAllocateDriverObjectExtension": 1,
                "IoAllocateErrorLogEntry": 1,
                "IoAllocateIrp": 1,
                "IoAllocateMdl": 1,
                "IoAllocateWorkItem": 1,
                "IoAssignResources": 1,
                "IoAttachDevice": 1,
                "IoAttachDeviceByPointer": 1,
                "IoAttachDeviceToDeviceStack": 1,
                "IoAttachDeviceToDeviceStackSafe": 1,
                "IoBuildAsynchronousFsdRequest": 2,
                "IoBuildDeviceIoControlRequest": 2,
                "IoBuildPartialMdl": 1,
                "IoBuildSynchronousFsdRequest": 1,
                "IoCallDriver": 1,
                "IoCancelFileOpen": 1,
                "IoCancelIrp": 1,
                "IoCheckDesiredAccess": 1,
                "IoCheckEaBufferValidity": 1,
                "IoCheckFunctionAccess": 1,
                "IoCheckQuerySetFileInformation": 1,
                "IoCheckQuerySetVolumeInformation": 1,
                "IoCheckQuotaBufferValidity": 1,
                "IoCheckShareAccess": 1,
                "IoCompleteRequest": 1,
                "IoConnectInterrupt": 1,
                "IoCreateController": 1,
                "IoCreateDevice": 1,
                "IoCreateDisk": 1,
                "IoCreateDriver": 1,
                "IoCreateFile": 1,
                "IoCreateFileSpecifyDeviceObjectHint": 1,
                "IoCreateNotificationEvent": 1,
                "IoCreateStreamFileObject": 1,
                "IoCreateStreamFileObjectEx": 1,
                "IoCreateStreamFileObjectLite": 1,
                "IoCreateSymbolicLink": 1,
                "IoCreateSynchronizationEvent": 1,
                "IoCreateUnprotectedSymbolicLink": 1,
                "IoCsqInitialize": 1,
                "IoCsqInsertIrp": 1,
                "IoCsqRemoveIrp": 1,
                "IoCsqRemoveNextIrp": 1,
                "IoDeleteController": 1,
                "IoDeleteDevice": 1,
                "IoDeleteDriver": 1,
                "IoDeleteSymbolicLink": 1,
                "IoDetachDevice": 1,
                "IoDeviceHandlerObjectSize": 1,
                "IoDeviceHandlerObjectType": 1,
                "IoDeviceObjectType": 1,
                "IoDisconnectInterrupt": 1,
                "IoDriverObjectType": 1,
                "IoEnqueueIrp": 1,
                "IoEnumerateDeviceObjectList": 1,
                "IoEnumerateRegisteredFiltersList": 1,
                "IoFastQueryNetworkAttributes": 1,
                "IoFileObjectType": 1,
                "IoForwardAndCatchIrp": 1,
                "IoForwardIrpSynchronously": 1,
                "IoFreeController": 1,
                "IoFreeErrorLogEntry": 1,
                "IoFreeIrp": 2,
                "IoFreeMdl": 1,
                "IoFreeWorkItem": 1,
                "IoGetAttachedDevice": 1,
                "IoGetAttachedDeviceReference": 1,
                "IoGetBaseFileSystemDeviceObject": 1,
                "IoGetBootDiskInformation": 1,
                "IoGetConfigurationInformation": 1,
                "IoGetCurrentProcess": 1,
                "IoGetDeviceAttachmentBaseRef": 1,
                "IoGetDeviceInterfaceAlias": 1,
                "IoGetDeviceInterfaces": 1,
                "IoGetDeviceObjectPointer": 1,
                "IoGetDeviceProperty": 1,
                "IoGetDeviceToVerify": 1,
                "IoGetDiskDeviceObject": 1,
                "IoGetDmaAdapter": 2,
                "IoGetDriverObjectExtension": 1,
                "IoGetFileObjectGenericMapping": 1,
                "IoGetInitialStack": 1,
                "IoGetLowerDeviceObject": 1,
                "IoGetRelatedDeviceObject": 1,
                "IoGetRequestorProcess": 1,
                "IoGetRequestorProcessId": 1,
                "IoGetRequestorSessionId": 1,
                "IoGetStackLimits": 1,
                "IoGetTopLevelIrp": 1,
                "IoInitializeCrashDump": 1,
                "IoInitializeIrp": 1,
                "IoInitializeRemoveLockEx": 1,
                "IoInitializeTimer": 2,
                "IoInvalidateDeviceRelations": 1,
                "IoInvalidateDeviceState": 1,
                "IoIsFileOriginRemote": 1,
                "IoIsOperationSynchronous": 1,
                "IoIsSystemThread": 1,
                "IoIsValidNameGraftingBuffer": 1,
                "IoIsWdmVersionAvailable": 1,
                "IoMakeAssociatedIrp": 1,
                "IoOpenDeviceInterfaceRegistryKey": 1,
                "IoOpenDeviceRegistryKey": 1,
                "IoPageRead": 1,
                "IoPnPDeliverServicePowerNotification": 1,
                "IoQueryDeviceDescription": 1,
                "IoQueryFileDosDeviceName": 1,
                "IoQueryFileInformation": 1,
                "IoQueryVolumeInformation": 1,
                "IoQueueThreadIrp": 1,
                "IoQueueWorkItem": 1,
                "IoRaiseHardError": 1,
                "IoRaiseInformationalHardError": 1,
                "IoReadDiskSignature": 1,
                "IoReadOperationCount": 1,
                "IoReadPartitionTableEx": 1,
                "IoReadTransferCount": 1,
                "IoRegisterBootDriverReinitialization": 1,
                "IoRegisterDeviceInterface": 1,
                "IoRegisterDriverReinitialization": 1,
                "IoRegisterFileSystem": 1,
                "IoRegisterFsRegistrationChange": 1,
                "IoRegisterLastChanceShutdownNotification": 1,
                "IoRegisterPlugPlayNotification": 1,
                "IoRegisterShutdownNotification": 1,
                "IoReleaseCancelSpinLock": 1,
                "IoReleaseRemoveLockAndWaitEx": 1,
                "IoReleaseRemoveLockEx": 1,
                "IoReleaseVpbSpinLock": 1,
                "IoRemoveShareAccess": 1,
                "IoReportDetectedDevice": 1,
                "IoReportHalResourceUsage": 1,
                "IoReportResourceForDetection": 1,
                "IoReportResourceUsage": 1,
                "IoReportTargetDeviceChange": 1,
                "IoReportTargetDeviceChangeAsynchronous": 1,
                "IoRequestDeviceEject": 1,
                "IoReuseIrp": 1,
                "IoSetCompletionRoutineEx": 1,
                "IoSetDeviceInterfaceState": 1,
                "IoSetDeviceToVerify": 1,
                "IoSetFileOrigin": 1,
                "IoSetHardErrorOrVerifyDevice": 1,
                "IoSetInformation": 1,
                "IoSetIoCompletion": 1,
                "IoSetPartitionInformationEx": 1,
                "IoSetShareAccess": 1,
                "IoSetStartIoAttributes": 1,
                "IoSetSystemPartition": 1,
                "IoSetThreadHardErrorMode": 1,
                "IoSetTopLevelIrp": 1,
                "IoStartNextPacket": 1,
                "IoStartNextPacketByKey": 1,
                "IoStartPacket": 1,
                "IoStartTimer": 1,
                "IoStatisticsLock": 1,
                "IoStopTimer": 1,
                "IoSynchronousInvalidateDeviceRelations": 1,
                "IoSynchronousPageWrite": 1,
                "IoThreadToProcess": 1,
                "IoUnregisterFileSystem": 1,
                "IoUnregisterFsRegistrationChange": 1,
                "IoUnregisterPlugPlayNotification": 1,
                "IoUnregisterShutdownNotification": 1,
                "IoUpdateShareAccess": 1,
                "IoValidateDeviceIoControlAccess": 1,
                "IoVerifyPartitionTable": 1,
                "IoVerifyVolume": 1,
                "IoVolumeDeviceToDosName": 1,
                "IoWMIAllocateInstanceIds": 1,
                "IoWMIDeviceObjectToInstanceName": 1,
                "IoWMIExecuteMethod": 1,
                "IoWMIHandleToInstanceName": 1,
                "IoWMIOpenBlock": 1,
                "IoWMIQueryAllData": 1,
                "IoWMIQueryAllDataMultiple": 1,
                "IoWMIQuerySingleInstance": 1,
                "IoWMIQuerySingleInstanceMultiple": 1,
                "IoWMIRegistrationControl": 1,
                "IoWMISetNotificationCallback": 1,
                "IoWMISetSingleInstance": 1,
                "IoWMISetSingleItem": 1,
                "IoWMISuggestInstanceName": 1,
                "IoWMIWriteEvent": 1,
                "IoWriteErrorLogEntry": 1,
                "IoWriteOperationCount": 1,
                "IoWritePartitionTableEx": 1,
                "IoWriteTransferCount": 1,
                "KdDebuggerEnabled": 1,
                "KdDebuggerNotPresent": 1,
                "KdDisableDebugger": 1,
                "KdEnableDebugger": 1,
                "KdEnteredDebugger": 1,
                "KdPollBreakIn": 1,
                "KdPowerTransition": 1,
                "Ke386CallBios": 1,
                "Ke386IoSetAccessProcess": 1,
                "Ke386QueryIoAccessMap": 1,
                "Ke386SetIoAccessMap": 1,
                "KeAcquireInterruptSpinLock": 1,
                "KeAcquireSpinLockAtDpcLevel": 1,
                "KeAddSystemServiceTable": 1,
                "KeAreApcsDisabled": 1,
                "KeAttachProcess": 1,
                "KeBugCheck": 1,
                "KeBugCheckEx": 1,
                "KeCancelTimer": 1,
                "KeCapturePersistentThreadState": 1,
                "KeClearEvent": 1,
                "KeConnectInterrupt": 1,
                "KeDcacheFlushCount": 1,
                "KeDelayExecutionThread": 1,
                "KeDeregisterBugCheckCallback": 1,
                "KeDeregisterBugCheckReasonCallback": 1,
                "KeDetachProcess": 1,
                "KeDisconnectInterrupt": 1,
                "KeEnterCriticalRegion": 1,
                "KeEnterKernelDebugger": 1,
                "KeFindConfigurationEntry": 1,
                "KeFindConfigurationNextEntry": 1,
                "KeFlushEntireTb": 1,
                "KeFlushQueuedDpcs": 1,
                "KeGetCurrentThread": 1,
                "KeGetPreviousMode": 1,
                "KeGetRecommendedSharedDataAlignment": 1,
                "KeI386AbiosCall": 1,
                "KeI386AllocateGdtSelectors": 1,
                "KeI386Call16BitCStyleFunction": 1,
                "KeI386Call16BitFunction": 1,
                "KeI386FlatToGdtSelector": 1,
                "KeI386GetLid": 1,
                "KeI386MachineType": 1,
                "KeI386ReleaseGdtSelectors": 1,
                "KeI386ReleaseLid": 1,
                "KeI386SetGdtSelector": 1,
                "KeIcacheFlushCount": 1,
                "KeInitializeApc": 1,
                "KeInitializeDeviceQueue": 1,
                "KeInitializeDpc": 1,
                "KeInitializeEvent": 1,
                "KeInitializeInterrupt": 1,
                "KeInitializeMutant": 2,
                "KeInitializeMutex": 2,
                "KeInitializeQueue": 1,
                "KeInitializeSemaphore": 1,
                "KeInitializeSpinLock": 2,
                "KeInitializeTimer": 2,
                "KeInitializeTimerEx": 2,
                "KeInsertByKeyDeviceQueue": 1,
                "KeInsertDeviceQueue": 1,
                "KeInsertHeadQueue": 1,
                "KeInsertQueue": 1,
                "KeInsertQueueApc": 1,
                "KeInsertQueueDpc": 1,
                "KeIsAttachedProcess": 1,
                "KeIsExecutingDpc": 1,
                "KeLeaveCriticalRegion": 1,
                "KeLoaderBlock": 1,
                "KeNumberProcessors": 1,
                "KeProfileInterrupt": 1,
                "KeProfileInterruptWithSource": 1,
                "KePulseEvent": 1,
                "KeQueryActiveProcessors": 1,
                "KeQueryInterruptTime": 1,
                "KeQueryPriorityThread": 1,
                "KeQueryRuntimeThread": 1,
                "KeQuerySystemTime": 1,
                "KeQueryTickCount": 1,
                "KeQueryTimeIncrement": 1,
                "KeRaiseUserException": 1,
                "KeReadStateEvent": 1,
                "KeReadStateMutant": 1,
                "KeReadStateMutex": 1,
                "KeReadStateQueue": 1,
                "KeReadStateSemaphore": 1,
                "KeReadStateTimer": 1,
                "KeRegisterBugCheckCallback": 1,
                "KeRegisterBugCheckReasonCallback": 1,
                "KeReleaseInterruptSpinLock": 1,
                "KeReleaseMutant": 2,
                "KeReleaseMutex": 2,
                "KeReleaseSemaphore": 1,
                "KeReleaseSpinLockFromDpcLevel": 1,
                "KeRemoveByKeyDeviceQueue": 1,
                "KeRemoveByKeyDeviceQueueIfBusy": 1,
                "KeRemoveDeviceQueue": 1,
                "KeRemoveEntryDeviceQueue": 1,
                "KeRemoveQueue": 1,
                "KeRemoveQueueDpc": 1,
                "KeRemoveSystemServiceTable": 1,
                "KeResetEvent": 1,
                "KeRestoreFloatingPointState": 1,
                "KeRevertToUserAffinityThread": 1,
                "KeRundownQueue": 1,
                "KeSaveFloatingPointState": 1,
                "KeSaveStateForHibernate": 1,
                "KeServiceDescriptorTable": 1,
                "KeSetAffinityThread": 1,
                "KeSetBasePriorityThread": 1,
                "KeSetDmaIoCoherency": 1,
                "KeSetEvent": 2,
                "KeSetEventBoostPriority": 1,
                "KeSetIdealProcessorThread": 1,
                "KeSetImportanceDpc": 1,
                "KeSetKernelStackSwapEnable": 1,
                "KeSetPriorityThread": 1,
                "KeSetProfileIrql": 1,
                "KeSetSystemAffinityThread": 1,
                "KeSetTargetProcessorDpc": 1,
                "KeSetTimeIncrement": 1,
                "KeSetTimer": 1,
                "KeSetTimerEx": 1,
                "KeStackAttachProcess": 1,
                "KeSynchronizeExecution": 2,
                "KeTerminateThread": 1,
                "KeTickCount": 1,
                "KeUnstackDetachProcess": 1,
                "KeUpdateRunTime": 1,
                "KeUpdateSystemTime": 1,
                "KeUserModeCallback": 1,
                "KeWaitForMultipleObjects": 1,
                "KeWaitForMutexObject": 1,
                "KeWaitForSingleObject": 2,
                "KiBugCheckData": 1,
                "KiCoprocessorError": 1,
                "KiDeliverApc": 1,
                "KiDispatchInterrupt": 1,
                "KiEnableTimerWatchdog": 1,
                "KiIpiServiceRoutine": 1,
                "KiUnexpectedInterrupt": 1,
                "LdrAccessResource": 1,
                "LdrEnumResources": 1,
                "LdrFindResourceDirectory_U": 1,
                "LdrFindResource_U": 1,
                "LpcPortObjectType": 1,
                "LpcRequestPort": 1,
                "LpcRequestWaitReplyPort": 1,
                "LsaCallAuthenticationPackage": 1,
                "LsaDeregisterLogonProcess": 1,
                "LsaFreeReturnBuffer": 1,
                "LsaLogonUser": 1,
                "LsaLookupAuthenticationPackage": 1,
                "LsaRegisterLogonProcess": 1,
                "Mm64BitPhysicalAddress": 1,
                "MmAddPhysicalMemory": 1,
                "MmAddVerifierThunks": 1,
                "MmAdjustWorkingSetSize": 1,
                "MmAdvanceMdl": 1,
                "MmAllocateContiguousMemory": 1,
                "MmAllocateContiguousMemorySpecifyCache": 1,
                "MmAllocateMappingAddress": 1,
                "MmAllocateNonCachedMemory": 1,
                "MmAllocatePagesForMdl": 1,
                "MmBuildMdlForNonPagedPool": 1,
                "MmCanFileBeTruncated": 1,
                "MmCommitSessionMappedView": 1,
                "MmCreateMdl": 1,
                "MmCreateSection": 1,
                "MmDisableModifiedWriteOfSection": 1,
                "MmFlushImageSection": 1,
                "MmForceSectionClosed": 1,
                "MmFreeContiguousMemory": 1,
                "MmFreeContiguousMemorySpecifyCache": 1,
                "MmFreeMappingAddress": 1,
                "MmFreeNonCachedMemory": 1,
                "MmFreePagesFromMdl": 1,
                "MmGetPhysicalAddress": 1,
                "MmGetPhysicalMemoryRanges": 1,
                "MmGetSystemRoutineAddress": 1,
                "MmGetVirtualForPhysical": 1,
                "MmGrowKernelStack": 1,
                "MmHighestUserAddress": 1,
                "MmIsAddressValid": 1,
                "MmIsDriverVerifying": 1,
                "MmIsNonPagedSystemAddressValid": 1,
                "MmIsRecursiveIoFault": 1,
                "MmIsThisAnNtAsSystem": 1,
                "MmIsVerifierEnabled": 1,
                "MmLockPagableDataSection": 1,
                "MmLockPagableImageSection": 1,
                "MmLockPagableSectionByHandle": 1,
                "MmMapIoSpace": 2,
                "MmMapLockedPages": 2,
                "MmMapLockedPagesSpecifyCache": 2,
                "MmMapLockedPagesWithReservedMapping": 1,
                "MmMapMemoryDumpMdl": 1,
                "MmMapUserAddressesToPage": 1,
                "MmMapVideoDisplay": 1,
                "MmMapViewInSessionSpace": 1,
                "MmMapViewInSystemSpace": 1,
                "MmMapViewOfSection": 1,
                "MmMarkPhysicalMemoryAsBad": 1,
                "MmMarkPhysicalMemoryAsGood": 1,
                "MmPageEntireDriver": 1,
                "MmPrefetchPages": 1,
                "MmProbeAndLockPages": 2,
                "MmProbeAndLockProcessPages": 2,
                "MmProbeAndLockSelectedPages": 1,
                "MmProtectMdlSystemAddress": 1,
                "MmQuerySystemSize": 1,
                "MmRemovePhysicalMemory": 1,
                "MmResetDriverPaging": 1,
                "MmSectionObjectType": 1,
                "MmSecureVirtualMemory": 1,
                "MmSetAddressRangeModified": 1,
                "MmSetBankedSection": 1,
                "MmSizeOfMdl": 1,
                "MmSystemRangeStart": 1,
                "MmTrimAllSystemPagableMemory": 1,
                "MmUnlockPagableImageSection": 1,
                "MmUnlockPages": 2,
                "MmUnmapIoSpace": 2,
                "MmUnmapLockedPages": 2,
                "MmUnmapReservedMapping": 1,
                "MmUnmapVideoDisplay": 1,
                "MmUnmapViewInSessionSpace": 1,
                "MmUnmapViewInSystemSpace": 1,
                "MmUnmapViewOfSection": 1,
                "MmUnsecureVirtualMemory": 1,
                "MmUserProbeAddress": 1,
                "NlsAnsiCodePage": 1,
                "NlsLeadByteInfo": 1,
                "NlsMbCodePageTag": 1,
                "NlsMbOemCodePageTag": 1,
                "NlsOemCodePage": 1,
                "NlsOemLeadByteInfo": 1,
                "NtAddAtom": 1,
                "NtAdjustPrivilegesToken": 1,
                "NtAllocateLocallyUniqueId": 1,
                "NtAllocateUuids": 1,
                "NtAllocateVirtualMemory": 1,
                "NtBuildNumber": 1,
                "NtClose": 1,
                "NtConnectPort": 1,
                "NtCreateEvent": 1,
                "NtCreateFile": 2,
                "NtCreateSection": 1,
                "NtDeleteAtom": 1,
                "NtDeleteFile": 1,
                "NtDeviceIoControlFile": 1,
                "NtDuplicateObject": 1,
                "NtDuplicateToken": 1,
                "NtFindAtom": 1,
                "NtFreeVirtualMemory": 1,
                "NtFsControlFile": 1,
                "NtGlobalFlag": 1,
                "NtLockFile": 1,
                "NtMakePermanentObject": 1,
                "NtMapViewOfSection": 1,
                "NtNotifyChangeDirectoryFile": 1,
                "NtOpenFile": 1,
                "NtOpenProcess": 1,
                "NtOpenProcessToken": 1,
                "NtOpenProcessTokenEx": 1,
                "NtOpenThread": 1,
                "NtOpenThreadToken": 1,
                "NtOpenThreadTokenEx": 1,
                "NtQueryDirectoryFile": 1,
                "NtQueryEaFile": 1,
                "NtQueryInformationAtom": 1,
                "NtQueryInformationFile": 1,
                "NtQueryInformationProcess": 1,
                "NtQueryInformationThread": 1,
                "NtQueryInformationToken": 1,
                "NtQueryQuotaInformationFile": 1,
                "NtQuerySecurityObject": 1,
                "NtQuerySystemInformation": 1,
                "NtQueryVolumeInformationFile": 1,
                "NtReadFile": 2,
                "NtRequestPort": 1,
                "NtRequestWaitReplyPort": 1,
                "NtSetEaFile": 1,
                "NtSetEvent": 1,
                "NtSetInformationFile": 1,
                "NtSetInformationProcess": 1,
                "NtSetInformationThread": 1,
                "NtSetQuotaInformationFile": 1,
                "NtSetSecurityObject": 1,
                "NtSetVolumeInformationFile": 1,
                "NtShutdownSystem": 1,
                "NtTraceEvent": 1,
                "NtUnlockFile": 1,
                "NtVdmControl": 1,
                "NtWaitForSingleObject": 1,
                "NtWriteFile": 2,
                "ObAssignSecurity": 1,
                "ObCheckCreateObjectAccess": 1,
                "ObCheckObjectAccess": 1,
                "ObCloseHandle": 1,
                "ObCreateObject": 1,
                "ObCreateObjectType": 1,
                "ObDereferenceObject": 1,
                "ObDereferenceSecurityDescriptor": 1,
                "ObFindHandleForObject": 1,
                "ObGetObjectSecurity": 1,
                "ObInsertObject": 1,
                "ObIsDosDeviceLocallyMapped": 1,
                "ObLogSecurityDescriptor": 1,
                "ObMakeTemporaryObject": 1,
                "ObOpenObjectByName": 1,
                "ObOpenObjectByPointer": 1,
                "ObQueryNameString": 1,
                "ObQueryObjectAuditingByHandle": 1,
                "ObReferenceObjectByHandle": 2,
                "ObReferenceObjectByName": 1,
                "ObReferenceObjectByPointer": 1,
                "ObReferenceSecurityDescriptor": 1,
                "ObReleaseObjectSecurity": 1,
                "ObSetHandleAttributes": 1,
                "ObSetSecurityDescriptorInfo": 1,
                "ObSetSecurityObjectByPointer": 1,
                "PfxFindPrefix": 1,
                "PfxInitialize": 1,
                "PfxInsertPrefix": 1,
                "PfxRemovePrefix": 1,
                "PoCallDriver": 1,
                "PoCancelDeviceNotify": 1,
                "PoQueueShutdownWorkItem": 1,
                "PoRegisterDeviceForIdleDetection": 1,
                "PoRegisterDeviceNotify": 1,
                "PoRegisterSystemState": 1,
                "PoRequestPowerIrp": 1,
                "PoRequestShutdownEvent": 1,
                "PoSetHiberRange": 1,
                "PoSetPowerState": 1,
                "PoSetSystemState": 1,
                "PoShutdownBugCheck": 1,
                "PoStartNextPowerIrp": 1,
                "PoUnregisterSystemState": 1,
                "ProbeForRead": 1,
                "ProbeForWrite": 1,
                "PsAssignImpersonationToken": 1,
                "PsChargePoolQuota": 1,
                "PsChargeProcessNonPagedPoolQuota": 1,
                "PsChargeProcessPagedPoolQuota": 1,
                "PsChargeProcessPoolQuota": 1,
                "PsCreateSystemProcess": 1,
                "PsCreateSystemThread": 1,
                "PsDereferenceImpersonationToken": 1,
                "PsDereferencePrimaryToken": 1,
                "PsDisableImpersonation": 1,
                "PsEstablishWin32Callouts": 1,
                "PsGetContextThread": 1,
                "PsGetCurrentProcess": 1,
                "PsGetCurrentProcessId": 1,
                "PsGetCurrentProcessSessionId": 1,
                "PsGetCurrentThread": 1,
                "PsGetCurrentThreadId": 1,
                "PsGetCurrentThreadPreviousMode": 1,
                "PsGetCurrentThreadStackBase": 1,
                "PsGetCurrentThreadStackLimit": 1,
                "PsGetJobLock": 1,
                "PsGetJobSessionId": 1,
                "PsGetJobUIRestrictionsClass": 1,
                "PsGetProcessCreateTimeQuadPart": 1,
                "PsGetProcessDebugPort": 1,
                "PsGetProcessExitProcessCalled": 1,
                "PsGetProcessExitStatus": 1,
                "PsGetProcessExitTime": 1,
                "PsGetProcessId": 1,
                "PsGetProcessImageFileName": 1,
                "PsGetProcessInheritedFromUniqueProcessId": 1,
                "PsGetProcessJob": 1,
                "PsGetProcessPeb": 1,
                "PsGetProcessPriorityClass": 1,
                "PsGetProcessSectionBaseAddress": 1,
                "PsGetProcessSecurityPort": 1,
                "PsGetProcessSessionId": 1,
                "PsGetProcessWin32Process": 1,
                "PsGetProcessWin32WindowStation": 1,
                "PsGetThreadFreezeCount": 1,
                "PsGetThreadHardErrorsAreDisabled": 1,
                "PsGetThreadId": 1,
                "PsGetThreadProcess": 1,
                "PsGetThreadProcessId": 1,
                "PsGetThreadSessionId": 1,
                "PsGetThreadTeb": 1,
                "PsGetThreadWin32Thread": 1,
                "PsGetVersion": 1,
                "PsImpersonateClient": 1,
                "PsInitialSystemProcess": 1,
                "PsIsProcessBeingDebugged": 1,
                "PsIsSystemThread": 1,
                "PsIsThreadImpersonating": 1,
                "PsIsThreadTerminating": 1,
                "PsJobType": 1,
                "PsLookupProcessByProcessId": 1,
                "PsLookupProcessThreadByCid": 1,
                "PsLookupThreadByThreadId": 1,
                "PsProcessType": 1,
                "PsReferenceImpersonationToken": 1,
                "PsReferencePrimaryToken": 1,
                "PsRemoveCreateThreadNotifyRoutine": 1,
                "PsRemoveLoadImageNotifyRoutine": 1,
                "PsRestoreImpersonation": 1,
                "PsReturnPoolQuota": 1,
                "PsReturnProcessNonPagedPoolQuota": 1,
                "PsReturnProcessPagedPoolQuota": 1,
                "PsRevertThreadToSelf": 1,
                "PsRevertToSelf": 1,
                "PsSetContextThread": 1,
                "PsSetCreateProcessNotifyRoutine": 1,
                "PsSetCreateThreadNotifyRoutine": 1,
                "PsSetJobUIRestrictionsClass": 1,
                "PsSetLegoNotifyRoutine": 1,
                "PsSetLoadImageNotifyRoutine": 1,
                "PsSetProcessPriorityByClass": 1,
                "PsSetProcessPriorityClass": 1,
                "PsSetProcessSecurityPort": 1,
                "PsSetProcessWin32Process": 1,
                "PsSetProcessWindowStation": 1,
                "PsSetThreadHardErrorsAreDisabled": 1,
                "PsSetThreadWin32Thread": 1,
                "PsTerminateSystemThread": 1,
                "PsThreadType": 1,
                "READ_REGISTER_BUFFER_UCHAR": 1,
                "READ_REGISTER_BUFFER_ULONG": 1,
                "READ_REGISTER_BUFFER_USHORT": 1,
                "READ_REGISTER_UCHAR": 1,
                "READ_REGISTER_ULONG": 1,
                "READ_REGISTER_USHORT": 1,
                "RtlAbsoluteToSelfRelativeSD": 1,
                "RtlAddAccessAllowedAce": 1,
                "RtlAddAccessAllowedAceEx": 1,
                "RtlAddAce": 1,
                "RtlAddAtomToAtomTable": 1,
                "RtlAddRange": 1,
                "RtlAllocateHeap": 1,
                "RtlAnsiCharToUnicodeChar": 1,
                "RtlAnsiStringToUnicodeSize": 1,
                "RtlAnsiStringToUnicodeString": 1,
                "RtlAppendAsciizToString": 1,
                "RtlAppendStringToString": 1,
                "RtlAppendUnicodeStringToString": 1,
                "RtlAppendUnicodeToString": 1,
                "RtlAreAllAccessesGranted": 1,
                "RtlAreAnyAccessesGranted": 1,
                "RtlAreBitsClear": 1,
                "RtlAreBitsSet": 1,
                "RtlAssert": 1,
                "RtlCaptureContext": 1,
                "RtlCaptureStackBackTrace": 1,
                "RtlCharToInteger": 1,
                "RtlCheckRegistryKey": 1,
                "RtlClearAllBits": 1,
                "RtlClearBit": 1,
                "RtlClearBits": 1,
                "RtlCompareMemory": 1,
                "RtlCompareMemoryUlong": 1,
                "RtlCompareString": 1,
                "RtlCompareUnicodeString": 1,
                "RtlCompressBuffer": 1,
                "RtlCompressChunks": 1,
                "RtlConvertLongToLargeInteger": 1,
                "RtlConvertSidToUnicodeString": 1,
                "RtlConvertUlongToLargeInteger": 1,
                "RtlCopyLuid": 1,
                "RtlCopyRangeList": 1,
                "RtlCopySid": 1,
                "RtlCopyString": 1,
                "RtlCopyUnicodeString": 1,
                "RtlCreateAcl": 1,
                "RtlCreateAtomTable": 1,
                "RtlCreateHeap": 1,
                "RtlCreateRegistryKey": 1,
                "RtlCreateSecurityDescriptor": 1,
                "RtlCreateSystemVolumeInformationFolder": 1,
                "RtlCreateUnicodeString": 1,
                "RtlCustomCPToUnicodeN": 1,
                "RtlDecompressBuffer": 1,
                "RtlDecompressChunks": 1,
                "RtlDecompressFragment": 1,
                "RtlDelete": 1,
                "RtlDeleteAce": 1,
                "RtlDeleteAtomFromAtomTable": 1,
                "RtlDeleteElementGenericTable": 1,
                "RtlDeleteElementGenericTableAvl": 1,
                "RtlDeleteNoSplay": 1,
                "RtlDeleteOwnersRanges": 1,
                "RtlDeleteRange": 1,
                "RtlDeleteRegistryValue": 1,
                "RtlDescribeChunk": 1,
                "RtlDestroyAtomTable": 1,
                "RtlDestroyHeap": 1,
                "RtlDowncaseUnicodeString": 1,
                "RtlEmptyAtomTable": 1,
                "RtlEnlargedIntegerMultiply": 1,
                "RtlEnlargedUnsignedDivide": 1,
                "RtlEnlargedUnsignedMultiply": 1,
                "RtlEnumerateGenericTable": 1,
                "RtlEnumerateGenericTableAvl": 1,
                "RtlEnumerateGenericTableLikeADirectory": 1,
                "RtlEnumerateGenericTableWithoutSplaying": 1,
                "RtlEnumerateGenericTableWithoutSplayingAvl": 1,
                "RtlEqualLuid": 1,
                "RtlEqualSid": 1,
                "RtlEqualString": 1,
                "RtlEqualUnicodeString": 1,
                "RtlExtendedIntegerMultiply": 1,
                "RtlExtendedLargeIntegerDivide": 1,
                "RtlExtendedMagicDivide": 1,
                "RtlFillMemory": 1,
                "RtlFillMemoryUlong": 1,
                "RtlFindClearBits": 1,
                "RtlFindClearBitsAndSet": 1,
                "RtlFindClearRuns": 1,
                "RtlFindFirstRunClear": 1,
                "RtlFindLastBackwardRunClear": 1,
                "RtlFindLeastSignificantBit": 1,
                "RtlFindLongestRunClear": 1,
                "RtlFindMessage": 1,
                "RtlFindMostSignificantBit": 1,
                "RtlFindNextForwardRunClear": 1,
                "RtlFindRange": 1,
                "RtlFindSetBits": 1,
                "RtlFindSetBitsAndClear": 1,
                "RtlFindUnicodePrefix": 1,
                "RtlFormatCurrentUserKeyPath": 1,
                "RtlFreeAnsiString": 1,
                "RtlFreeHeap": 1,
                "RtlFreeOemString": 1,
                "RtlFreeRangeList": 1,
                "RtlFreeUnicodeString": 1,
                "RtlGUIDFromString": 1,
                "RtlGenerate8dot3Name": 1,
                "RtlGetAce": 1,
                "RtlGetCallersAddress": 1,
                "RtlGetCompressionWorkSpaceSize": 1,
                "RtlGetDaclSecurityDescriptor": 1,
                "RtlGetDefaultCodePage": 1,
                "RtlGetElementGenericTable": 1,
                "RtlGetElementGenericTableAvl": 1,
                "RtlGetFirstRange": 1,
                "RtlGetGroupSecurityDescriptor": 1,
                "RtlGetNextRange": 1,
                "RtlGetNtGlobalFlags": 1,
                "RtlGetOwnerSecurityDescriptor": 1,
                "RtlGetSaclSecurityDescriptor": 1,
                "RtlGetSetBootStatusData": 1,
                "RtlGetVersion": 1,
                "RtlHashUnicodeString": 1,
                "RtlImageDirectoryEntryToData": 1,
                "RtlImageNtHeader": 1,
                "RtlInitAnsiString": 1,
                "RtlInitCodePageTable": 1,
                "RtlInitString": 1,
                "RtlInitUnicodeString": 1,
                "RtlInitializeBitMap": 1,
                "RtlInitializeGenericTable": 1,
                "RtlInitializeGenericTableAvl": 1,
                "RtlInitializeRangeList": 1,
                "RtlInitializeSid": 1,
                "RtlInitializeUnicodePrefix": 1,
                "RtlInsertElementGenericTable": 1,
                "RtlInsertElementGenericTableAvl": 1,
                "RtlInsertElementGenericTableFull": 1,
                "RtlInsertElementGenericTableFullAvl": 1,
                "RtlInsertUnicodePrefix": 1,
                "RtlInt64ToUnicodeString": 1,
                "RtlIntegerToChar": 1,
                "RtlIntegerToUnicode": 1,
                "RtlIntegerToUnicodeString": 1,
                "RtlInvertRangeList": 1,
                "RtlIpv4AddressToStringA": 1,
                "RtlIpv4AddressToStringExA": 1,
                "RtlIpv4AddressToStringExW": 1,
                "RtlIpv4AddressToStringW": 1,
                "RtlIpv4StringToAddressA": 1,
                "RtlIpv4StringToAddressExA": 1,
                "RtlIpv4StringToAddressExW": 1,
                "RtlIpv4StringToAddressW": 1,
                "RtlIpv6AddressToStringA": 1,
                "RtlIpv6AddressToStringExA": 1,
                "RtlIpv6AddressToStringExW": 1,
                "RtlIpv6AddressToStringW": 1,
                "RtlIpv6StringToAddressA": 1,
                "RtlIpv6StringToAddressExA": 1,
                "RtlIpv6StringToAddressExW": 1,
                "RtlIpv6StringToAddressW": 1,
                "RtlIsGenericTableEmpty": 1,
                "RtlIsGenericTableEmptyAvl": 1,
                "RtlIsNameLegalDOS8Dot3": 1,
                "RtlIsRangeAvailable": 1,
                "RtlIsValidOemCharacter": 1,
                "RtlLargeIntegerAdd": 1,
                "RtlLargeIntegerArithmeticShift": 1,
                "RtlLargeIntegerDivide": 1,
                "RtlLargeIntegerNegate": 1,
                "RtlLargeIntegerShiftLeft": 1,
                "RtlLargeIntegerShiftRight": 1,
                "RtlLargeIntegerSubtract": 1,
                "RtlLengthRequiredSid": 1,
                "RtlLengthSecurityDescriptor": 1,
                "RtlLengthSid": 1,
                "RtlLockBootStatusData": 1,
                "RtlLookupAtomInAtomTable": 1,
                "RtlLookupElementGenericTable": 1,
                "RtlLookupElementGenericTableAvl": 1,
                "RtlLookupElementGenericTableFull": 1,
                "RtlLookupElementGenericTableFullAvl": 1,
                "RtlMapGenericMask": 1,
                "RtlMapSecurityErrorToNtStatus": 1,
                "RtlMergeRangeLists": 1,
                "RtlMoveMemory": 1,
                "RtlMultiByteToUnicodeN": 1,
                "RtlMultiByteToUnicodeSize": 1,
                "RtlNextUnicodePrefix": 1,
                "RtlNtStatusToDosError": 1,
                "RtlNtStatusToDosErrorNoTeb": 1,
                "RtlNumberGenericTableElements": 1,
                "RtlNumberGenericTableElementsAvl": 1,
                "RtlNumberOfClearBits": 1,
                "RtlNumberOfSetBits": 1,
                "RtlOemStringToCountedUnicodeString": 1,
                "RtlOemStringToUnicodeSize": 1,
                "RtlOemStringToUnicodeString": 1,
                "RtlOemToUnicodeN": 1,
                "RtlPinAtomInAtomTable": 1,
                "RtlPrefixString": 1,
                "RtlPrefixUnicodeString": 1,
                "RtlQueryAtomInAtomTable": 1,
                "RtlQueryRegistryValues": 1,
                "RtlQueryTimeZoneInformation": 1,
                "RtlRaiseException": 1,
                "RtlRandom": 1,
                "RtlRandomEx": 1,
                "RtlRealPredecessor": 1,
                "RtlRealSuccessor": 1,
                "RtlRemoveUnicodePrefix": 1,
                "RtlReserveChunk": 1,
                "RtlSecondsSince1970ToTime": 1,
                "RtlSecondsSince1980ToTime": 1,
                "RtlSelfRelativeToAbsoluteSD2": 1,
                "RtlSelfRelativeToAbsoluteSD": 1,
                "RtlSetAllBits": 1,
                "RtlSetBit": 1,
                "RtlSetBits": 1,
                "RtlSetDaclSecurityDescriptor": 1,
                "RtlSetGroupSecurityDescriptor": 1,
                "RtlSetOwnerSecurityDescriptor": 1,
                "RtlSetSaclSecurityDescriptor": 1,
                "RtlSetTimeZoneInformation": 1,
                "RtlSizeHeap": 1,
                "RtlSplay": 1,
                "RtlStringFromGUID": 1,
                "RtlSubAuthorityCountSid": 1,
                "RtlSubAuthoritySid": 1,
                "RtlSubtreePredecessor": 1,
                "RtlSubtreeSuccessor": 1,
                "RtlTestBit": 1,
                "RtlTimeFieldsToTime": 1,
                "RtlTimeToElapsedTimeFields": 1,
                "RtlTimeToSecondsSince1970": 1,
                "RtlTimeToSecondsSince1980": 1,
                "RtlTimeToTimeFields": 1,
                "RtlTraceDatabaseAdd": 1,
                "RtlTraceDatabaseCreate": 1,
                "RtlTraceDatabaseDestroy": 1,
                "RtlTraceDatabaseEnumerate": 1,
                "RtlTraceDatabaseFind": 1,
                "RtlTraceDatabaseLock": 1,
                "RtlTraceDatabaseUnlock": 1,
                "RtlTraceDatabaseValidate": 1,
                "RtlUnicodeStringToAnsiSize": 1,
                "RtlUnicodeStringToAnsiString": 1,
                "RtlUnicodeStringToCountedOemString": 1,
                "RtlUnicodeStringToInteger": 1,
                "RtlUnicodeStringToOemSize": 1,
                "RtlUnicodeStringToOemString": 1,
                "RtlUnicodeToCustomCPN": 1,
                "RtlUnicodeToMultiByteN": 1,
                "RtlUnicodeToMultiByteSize": 1,
                "RtlUnicodeToOemN": 1,
                "RtlUnlockBootStatusData": 1,
                "RtlUnwind": 1,
                "RtlUpcaseUnicodeChar": 1,
                "RtlUpcaseUnicodeString": 1,
                "RtlUpcaseUnicodeStringToAnsiString": 1,
                "RtlUpcaseUnicodeStringToCountedOemString": 1,
                "RtlUpcaseUnicodeStringToOemString": 1,
                "RtlUpcaseUnicodeToCustomCPN": 1,
                "RtlUpcaseUnicodeToMultiByteN": 1,
                "RtlUpcaseUnicodeToOemN": 1,
                "RtlUpperChar": 1,
                "RtlUpperString": 1,
                "RtlValidRelativeSecurityDescriptor": 1,
                "RtlValidSecurityDescriptor": 1,
                "RtlValidSid": 1,
                "RtlVerifyVersionInfo": 1,
                "RtlVolumeDeviceToDosName": 1,
                "RtlWalkFrameChain": 1,
                "RtlWriteRegistryValue": 1,
                "RtlZeroHeap": 1,
                "RtlZeroMemory": 1,
                "RtlxAnsiStringToUnicodeSize": 1,
                "RtlxOemStringToUnicodeSize": 1,
                "RtlxUnicodeStringToAnsiSize": 1,
                "RtlxUnicodeStringToOemSize": 1,
                "SeAccessCheck": 1,
                "SeAppendPrivileges": 1,
                "SeAssignSecurity": 1,
                "SeAssignSecurityEx": 1,
                "SeAuditHardLinkCreation": 1,
                "SeAuditingFileEvents": 1,
                "SeAuditingFileEventsWithContext": 1,
                "SeAuditingFileOrGlobalEvents": 1,
                "SeAuditingHardLinkEvents": 1,
                "SeAuditingHardLinkEventsWithContext": 1,
                "SeCaptureSecurityDescriptor": 1,
                "SeCaptureSubjectContext": 1,
                "SeCloseObjectAuditAlarm": 1,
                "SeCreateAccessState": 1,
                "SeCreateClientSecurity": 1,
                "SeCreateClientSecurityFromSubjectContext": 1,
                "SeDeassignSecurity": 1,
                "SeDeleteAccessState": 1,
                "SeDeleteObjectAuditAlarm": 1,
                "SeExports": 1,
                "SeFilterToken": 1,
                "SeFreePrivileges": 1,
                "SeImpersonateClient": 1,
                "SeImpersonateClientEx": 1,
                "SeLockSubjectContext": 1,
                "SeMarkLogonSessionForTerminationNotification": 1,
                "SeOpenObjectAuditAlarm": 1,
                "SeOpenObjectForDeleteAuditAlarm": 1,
                "SePrivilegeCheck": 1,
                "SePrivilegeObjectAuditAlarm": 1,
                "SePublicDefaultDacl": 1,
                "SeQueryAuthenticationIdToken": 1,
                "SeQueryInformationToken": 1,
                "SeQuerySecurityDescriptorInfo": 1,
                "SeQuerySessionIdToken": 1,
                "SeRegisterLogonSessionTerminatedRoutine": 1,
                "SeReleaseSecurityDescriptor": 1,
                "SeReleaseSubjectContext": 1,
                "SeSetAccessStateGenericMapping": 1,
                "SeSetSecurityDescriptorInfo": 1,
                "SeSetSecurityDescriptorInfoEx": 1,
                "SeSinglePrivilegeCheck": 1,
                "SeSystemDefaultDacl": 1,
                "SeTokenImpersonationLevel": 1,
                "SeTokenIsAdmin": 1,
                "SeTokenIsRestricted": 1,
                "SeTokenIsWriteRestricted": 1,
                "SeTokenObjectType": 1,
                "SeTokenType": 1,
                "SeUnlockSubjectContext": 1,
                "SeUnregisterLogonSessionTerminatedRoutine": 1,
                "SeValidSecurityDescriptor": 1,
                "VerSetConditionMask": 1,
                "VfFailDeviceNode": 1,
                "VfFailDriver": 1,
                "VfFailSystemBIOS": 1,
                "VfIsVerificationEnabled": 1,
                "WRITE_REGISTER_BUFFER_UCHAR": 1,
                "WRITE_REGISTER_BUFFER_ULONG": 1,
                "WRITE_REGISTER_BUFFER_USHORT": 1,
                "WRITE_REGISTER_UCHAR": 1,
                "WRITE_REGISTER_ULONG": 1,
                "WRITE_REGISTER_USHORT": 1,
                "WmiFlushTrace": 1,
                "WmiQueryTrace": 1,
                "WmiQueryTraceInformation": 1,
                "WmiStartTrace": 1,
                "WmiStopTrace": 1,
                "WmiTraceMessage": 1,
                "WmiTraceMessageVa": 1,
                "WmiUpdateTrace": 1,
                "XIPDispatch": 1,
                "ZwAccessCheckAndAuditAlarm": 1,
                "ZwAddBootEntry": 1,
                "ZwAdjustPrivilegesToken": 1,
                "ZwAlertThread": 1,
                "ZwAllocateVirtualMemory": 1,
                "ZwAssignProcessToJobObject": 1,
                "ZwCancelIoFile": 1,
                "ZwCancelTimer": 1,
                "ZwClearEvent": 1,
                "ZwClose": 1,
                "ZwCloseObjectAuditAlarm": 1,
                "ZwConnectPort": 1,
                "ZwCreateDirectoryObject": 1,
                "ZwCreateEvent": 1,
                "ZwCreateFile": 1,
                "ZwCreateJobObject": 1,
                "ZwCreateKey": 1,
                "ZwCreateSection": 1,
                "ZwCreateSymbolicLinkObject": 1,
                "ZwCreateTimer": 1,
                "ZwDeleteBootEntry": 1,
                "ZwDeleteFile": 1,
                "ZwDeleteKey": 1,
                "ZwDeleteValueKey": 1,
                "ZwDeviceIoControlFile": 1,
                "ZwDisplayString": 1,
                "ZwDuplicateObject": 1,
                "ZwDuplicateToken": 1,
                "ZwEnumerateBootEntries": 1,
                "ZwEnumerateKey": 1,
                "ZwEnumerateValueKey": 1,
                "ZwFlushInstructionCache": 1,
                "ZwFlushKey": 1,
                "ZwFlushVirtualMemory": 1,
                "ZwFreeVirtualMemory": 1,
                "ZwFsControlFile": 1,
                "ZwInitiatePowerAction": 1,
                "ZwIsProcessInJob": 1,
                "ZwLoadDriver": 1,
                "ZwLoadKey": 1,
                "ZwMakeTemporaryObject": 1,
                "ZwMapViewOfSection": 1,
                "ZwNotifyChangeKey": 1,
                "ZwOpenDirectoryObject": 1,
                "ZwOpenEvent": 1,
                "ZwOpenFile": 1,
                "ZwOpenJobObject": 1,
                "ZwOpenKey": 1,
                "ZwOpenProcess": 1,
                "ZwOpenProcessToken": 1,
                "ZwOpenProcessTokenEx": 1,
                "ZwOpenSection": 1,
                "ZwOpenSymbolicLinkObject": 1,
                "ZwOpenThread": 1,
                "ZwOpenThreadToken": 1,
                "ZwOpenThreadTokenEx": 1,
                "ZwOpenTimer": 1,
                "ZwPowerInformation": 1,
                "ZwPulseEvent": 1,
                "ZwQueryBootEntryOrder": 1,
                "ZwQueryBootOptions": 1,
                "ZwQueryDefaultLocale": 1,
                "ZwQueryDefaultUILanguage": 1,
                "ZwQueryDirectoryFile": 1,
                "ZwQueryDirectoryObject": 1,
                "ZwQueryEaFile": 1,
                "ZwQueryFullAttributesFile": 1,
                "ZwQueryInformationFile": 1,
                "ZwQueryInformationJobObject": 1,
                "ZwQueryInformationProcess": 1,
                "ZwQueryInformationThread": 1,
                "ZwQueryInformationToken": 1,
                "ZwQueryInstallUILanguage": 1,
                "ZwQueryKey": 1,
                "ZwQueryObject": 1,
                "ZwQuerySection": 1,
                "ZwQuerySecurityObject": 1,
                "ZwQuerySymbolicLinkObject": 1,
                "ZwQuerySystemInformation": 1,
                "ZwQueryValueKey": 1,
                "ZwQueryVolumeInformationFile": 1,
                "ZwReadFile": 1,
                "ZwReplaceKey": 1,
                "ZwRequestWaitReplyPort": 1,
                "ZwResetEvent": 1,
                "ZwRestoreKey": 1,
                "ZwSaveKey": 1,
                "ZwSaveKeyEx": 1,
                "ZwSetBootEntryOrder": 1,
                "ZwSetBootOptions": 1,
                "ZwSetDefaultLocale": 1,
                "ZwSetDefaultUILanguage": 1,
                "ZwSetEaFile": 1,
                "ZwSetEvent": 1,
                "ZwSetInformationFile": 1,
                "ZwSetInformationJobObject": 1,
                "ZwSetInformationObject": 1,
                "ZwSetInformationProcess": 1,
                "ZwSetInformationThread": 1,
                "ZwSetSecurityObject": 1,
                "ZwSetSystemInformation": 1,
                "ZwSetSystemTime": 1,
                "ZwSetTimer": 1,
                "ZwSetValueKey": 1,
                "ZwSetVolumeInformationFile": 1,
                "ZwTerminateJobObject": 1,
                "ZwTerminateProcess": 1,
                "ZwTranslateFilePath": 1,
                "ZwUnloadDriver": 1,
                "ZwUnloadKey": 1,
                "ZwUnmapViewOfSection": 1,
                "ZwWaitForMultipleObjects": 1,
                "ZwWaitForSingleObject": 1,
                "ZwWriteFile": 1,
                "ZwYieldExecution": 1,
                "_CIcos": 1,
                "_CIsin": 1,
                "_CIsqrt": 1,
                "_abnormal_termination": 1,
                "_alldiv": 1,
                "_alldvrm": 1,
                "_allmul": 1,
                "_alloca_probe": 1,
                "_allrem": 1,
                "_allshl": 1,
                "_allshr": 1,
                "_aulldiv": 1,
                "_aulldvrm": 1,
                "_aullrem": 1,
                "_aullshr": 1,
                "_except_handler2": 1,
                "_except_handler3": 1,
                "_global_unwind2": 1,
                "_itoa": 1,
                "_itow": 1,
                "_local_unwind2": 1,
                "_purecall": 1,
                "_snprintf": 1,
                "_snwprintf": 1,
                "_stricmp": 1,
                "_strlwr": 1,
                "_strnicmp": 1,
                "_strnset": 1,
                "_strrev": 1,
                "_strset": 1,
                "_strupr": 1,
                "_vsnprintf": 1,
                "_vsnwprintf": 1,
                "_wcsicmp": 1,
                "_wcslwr": 1,
                "_wcsnicmp": 1,
                "_wcsnset": 1,
                "_wcsrev": 1,
                "_wcsupr": 1,
                "isdigit": 1,
                "islower": 1,
                "isprint": 1,
                "isspace": 1,
                "isupper": 1,
                "isxdigit": 1,
                "mbstowcs": 1,
                "mbtowc": 1,
                "memchr": 1,
                "memcpy": 1,
                "memmove": 1,
                "memset": 1,
                "qsort": 1,
                "sprintf": 1,
                "srand": 1,
                "strcat": 1,
                "strchr": 1,
                "strcmp": 1,
                "strcpy": 1,
                "strlen": 1,
                "strncat": 1,
                "strncmp": 1,
                "strncpy": 1,
                "strrchr": 1,
                "strspn": 1,
                "strstr": 1,
                "swprintf": 1,
                "tolower": 1,
                "toupper": 1,
                "towlower": 1,
                "towupper": 1,
                "vDbgPrintEx": 1,
                "vDbgPrintExWithPrefix": 1,
                "vsprintf": 1,
                "wcscat": 1,
                "wcschr": 1,
                "wcscmp": 1,
                "wcscpy": 1,
                "wcscspn": 1,
                "wcslen": 1,
                "wcsncat": 1,
                "wcsncmp": 1,
                "wcsncpy": 1,
                "wcsrchr": 1,
                "wcsspn": 1,
                "wcsstr": 1,
                "wcstombs": 1,
                "wctomb": 1,
                ")#_ck": 1,
                "*MdI.": 1,
                "uaUyA": 1,
                "mario": 1,
                "IoFreeMapRegisters": 2,
                "IoFreeAdapterChannel": 2,
                "HalFreeCommonBuffer": 2,
                "HalAllocateCommonBuffer": 2,
                "IoFlushAdapterBuffers": 2,
                "IoMapTransfer": 2,
                "HalGetAdapter": 2,
                "HalAllocateCrashDumpRegisters": 2,
                "KeQueryPerformanceCounter": 2,
                "KfReleaseSpinLock": 2,
                "KfAcquireSpinLock": 2,
                "KfLowerIrql": 2,
                "KeRaiseIrqlToDpcLevel": 2,
                "KfRaiseIrql": 2,
                "KeReleaseSpinLock": 2,
                "KeAcquireSpinLock": 2,
                "KeLowerIrql": 2,
                "KeRaiseIrql": 2,
                "ExReleaseFastMutex": 2,
                "ExTryToAcquireFastMutex": 2,
                "ExAcquireFastMutex": 2,
                "$*06<": 1,
                "0123456789ABCDEF0": 1,
                "Qkkbal": 1,
                "wn>Jj": 1,
                "*SYSTEM*": 1,
                "EXWORKER: worker exit with APCs disabled, worker routine %x, parameter %x, item %x": 1,
                "CyrixInstead": 1,
                "GenuineIntel": 2,
                "GenuineTMx86": 1,
                "CentaurHauls": 1,
                "RiseRiseRise": 1,
                "DEVICE FAILURE": 1,
                "Pvoid": 1,
                "Ulong": 1,
                "Status": 1,
                "DevObj": 1,
                "Snapshot": 1,
                "Routine": 1,
                "IRP_MJ_PNP": 1,
                "IRP_MJ_SET_QUOTA": 1,
                "IRP_MJ_QUERY_QUOTA": 1,
                "IRP_MJ_DEVICE_CHANGE": 1,
                "IRP_MJ_SYSTEM_CONTROL": 1,
                "IRP_MJ_POWER": 1,
                "IRP_MJ_SET_SECURITY": 1,
                "IRP_MJ_QUERY_SECURITY": 1,
                "IRP_MJ_CREATE_MAILSLOT": 1,
                "IRP_MJ_CLEANUP": 1,
                "IRP_MJ_LOCK_CONTROL": 1,
                "IRP_MJ_SHUTDOWN": 1,
                "IRP_MJ_INTERNAL_DEVICE_CONTROL": 1,
                "IRP_MJ_DEVICE_CONTROL": 1,
                "IRP_MJ_FILE_SYSTEM_CONTROL": 1,
                "IRP_MJ_DIRECTORY_CONTROL": 1,
                "IRP_MJ_SET_VOLUME_INFORMATION": 1,
                "IRP_MJ_QUERY_VOLUME_INFORMATION": 1,
                "IRP_MJ_FLUSH_BUFFERS": 1,
                "IRP_MJ_SET_EA": 1,
                "IRP_MJ_QUERY_EA": 1,
                "IRP_MJ_SET_INFORMATION": 1,
                "IRP_MJ_QUERY_INFORMATION": 1,
                "IRP_MJ_WRITE": 1,
                "IRP_MJ_READ": 1,
                "IRP_MJ_CLOSE": 1,
                "IRP_MJ_CREATE_NAMED_PIPE": 1,
                "IRP_MJ_CREATE": 1,
                "IRP_MN_EXECUTE_METHOD": 1,
                "IRP_MN_REGINFO": 1,
                "IRP_MN_DISABLE_COLLECTION": 1,
                "IRP_MN_ENABLE_COLLECTION": 1,
                "IRP_MN_DISABLE_EVENTS": 1,
                "IRP_MN_ENABLE_EVENTS": 1,
                "IRP_MN_CHANGE_SINGLE_ITEM": 1,
                "IRP_MN_CHANGE_SINGLE_INSTANCE": 1,
                "IRP_MN_QUERY_SINGLE_INSTANCE": 1,
                "IRP_MN_QUERY_ALL_DATA": 1,
                "PowerActionWarmEject": 1,
                "PowerActionShutdownOff": 1,
                "PowerActionShutdownReset": 1,
                "PowerActionShutdown": 1,
                "PowerActionHibernate": 1,
                "PowerActionSleep": 1,
                "PowerActionReserved": 1,
                "PowerActionNone": 1,
                "PowerDeviceD3": 1,
                "PowerDeviceD2": 1,
                "PowerDeviceD1": 1,
                "PowerDeviceD0": 1,
                "PowerDeviceUnspecified": 1,
                "PowerSystemShutdown.S5": 1,
                "PowerSystemHibernate.S4": 1,
                "PowerSystemSleeping3.S3": 1,
                "PowerSystemSleeping2.S2": 1,
                "PowerSystemSleeping1.S1": 1,
                "PowerSystemWorking.S0": 1,
                "PowerSystemUnspecified": 1,
                "IRP_MN_QUERY_POWER": 1,
                "IRP_MN_SET_POWER": 1,
                "IRP_MN_POWER_SEQUENCE": 1,
                "IRP_MN_WAIT_WAKE": 1,
                "IRP_MN_QUERY_LEGACY_BUS_INFORMATION": 1,
                "IRP_MN_SURPRISE_REMOVAL": 1,
                "IRP_MN_DEVICE_USAGE_NOTIFICATION": 1,
                "IRP_MN_QUERY_BUS_INFORMATION": 1,
                "IRP_MN_QUERY_PNP_DEVICE_STATE": 1,
                "IRP_MN_QUERY_ID": 1,
                "IRP_MN_SET_LOCK": 1,
                "IRP_MN_EJECT": 1,
                "IRP_MN_WRITE_CONFIG": 1,
                "IRP_MN_READ_CONFIG": 1,
                "INVALID_IRP_CODE": 1,
                "IRP_MN_FILTER_RESOURCE_REQUIREMENTS": 1,
                "IRP_MN_QUERY_DEVICE_TEXT": 1,
                "IRP_MN_QUERY_RESOURCE_REQUIREMENTS": 1,
                "IRP_MN_QUERY_RESOURCES": 1,
                "IRP_MN_QUERY_CAPABILITIES": 1,
                "IRP_MN_QUERY_INTERFACE": 1,
                "IRP_MN_QUERY_DEVICE_RELATIONS": 1,
                "IRP_MN_CANCEL_STOP_DEVICE": 1,
                "IRP_MN_QUERY_STOP_DEVICE": 1,
                "IRP_MN_STOP_DEVICE": 1,
                "IRP_MN_CANCEL_REMOVE_DEVICE": 1,
                "IRP_MN_REMOVE_DEVICE - ": 1,
                "IRP_MN_QUERY_REMOVE_DEVICE": 1,
                "IRP_MN_START_DEVICE": 1,
                "A driver has passed an invalid device object to a function that requires a PDO (DevObj = %DevObj).": 1,
                "A driver has returned STATUS_PENDING but did not mark the IRP pending via a call to IoMarkIrpPending (Irp = %Snapshot).": 1,
                "A driver has succeeded IRP_MJ_PNP.IRP_MN_QUERY_DEVICE_RELATIONS(TargetRelations) but didn't properly fill out the request or forward the IRP to the underlying hardware stack (DevObj = %DevObj).": 1,
                "A driver has mistakenly called a file I/O function at an IRQL other than PASSIVE_LEVEL.": 1,
                "A driver has enumerated two child PDO's that returned identical Device ID's (DevObj1 = %DevObj1 , DevObj2 = %DevObj2 ).": 1,
                "A driver has added a device object that is not a PDO to a device relations query (Irp = %Irp, DevObj = %DevObj).": 1,
                "A driver has failed an IRP that cannot legally be failed IRP (Irp = %Irp).": 1,
                "A driver has failed to copy the DeviceType field from the device object it is attaching to (DevObj = %DevObj).": 1,
                "A driver has set both the DO_BUFFERED_IO and the DO_DIRECT_IO flags. These flags are mutually exclusive (DevObj = %DevObj).": 1,
                "A driver has not copied either the DO_BUFFERED_IO or the DO_DIRECT_IO flag from the device object it is attaching to (DevObj = %DevObj).": 1,
                "A driver has failed to clear the DO_DEVICE_INITIALIZING flag at the end of AddDevice (DevObj = %DevObj).": 1,
                "A driver has deleted it's device object during a surprise remove IRP (Irp = %Irp  DevObj = %DevObj).": 1,
                "A driver has detached it's device object during a surprise remove IRP (Irp = %Irp  DevObj = %DevObj).": 1,
                "A driver is attempting to delete a device object that has already been deleted via a prior call to IoDeleteDevice.": 1,
                "A driver has not inherited the DO_POWER_PAGABLE bit from the stack it has attached to (DevObj = %DevObj).": 1,
                "A driver has marked an IRP pending but didn't return STATUS_PENDING. (Irp = %Snapshot).": 1,
                "A driver has returned STATUS_PENDING but did not mark the IRP pending via a call to IoMarkIrpPending (Irp = %Irp).": 1,
                "A driver has completed an IRP without setting the CancelRoutine in the Irp to NULL (Irp = %Irp ).": 1,
                "A driver has forwarded an IRP at an IRQL that is illegal for this major code. (Irp = %Irp ).": 1,
                "The caller of IoCompleteRequest is completing an IRP that has never been forwarded via a call to IoCallDriver or PoCallDriver. This may be a bug. (Irp = %Irp ).": 1,
                "Caller of IoInitializeIrp has passed an IRP that was allocated with IoAllocateIrp. This is illegal, unneccessary, and negatively impacts performace in normal use. Check the documentation for IoReuseIrp if this IRP is being recycled.": 1,
                "A driver has sent an IRP that is restricted for system use only. (Irp = %Irp ).": 1,
                "The UI Number field of the query capabilities structure in a query capabilities IRP was not properly initialized to -1. (Irp = %Irp ).": 1,
                "The address field of the query capabilities structure in a query capabilities IRP was not properly initialized to -1. (Irp = %Irp ).": 1,
                "The size field of the query capabilities structure in a query capabilities IRP was not properly initialized. (Irp = %Irp ).": 1,
                "The version field of the query capabilities structure in a query capabilities IRP was not properly initialized. (Irp = %Irp ).": 1,
                "Caller has completed untouched IRP_MJ_POWER (instead of passing the irp down) or non-PDO has failed the irp using illegal value of STATUS_NOT_SUPPORTED. (Irp = %Irp ).": 1,
                "Caller has completed successful IRP_MJ_POWER instead of passing it down (Irp = %Irp ).": 1,
                "Caller has completed a IRP_MJ_POWER it didn't understand instead of passing it down (Irp = %Irp ).": 1,
                "Caller has completed untouched IRP_MJ_PNP (instead of passing the irp down) or non-PDO has failed the irp using illegal value of STATUS_NOT_SUPPORTED. (Irp = %Irp ).": 1,
                "Caller has completed successful IRP_MJ_PNP instead of passing it down (Irp = %Irp ).": 1,
                "Caller has completed a IRP_MJ_PNP it didn't understand instead of passing it down (Irp = %Irp ).": 1,
                "The code implementing the TargetDeviceRelation query has not called ObReferenceObject on the PDO (Irp = %Irp ).": 1,
                "PDO has forgotten to fill out the device relation list with the PDO for the TargetDeviceRelation query (Irp = %Irp )": 1,
                "PDO has not responded to a required IRP (Irp = %Irp )": 1,
                "A cancel routine has been set for an IRP that is currently being processed by drivers lower in the stack, possibly stomping their cancel routine (Irp = %Irp, Routine=%Routine ).": 1,
                "A driver's completion routine ( %Routine ) has not marked the IRP pending if the PendingReturned field was set in the IRP passed to it. This may cause the OS to hang, especially if an error is returned by the  stack. (Irp = %Irp )": 1,
                "IRP completion routines must be in nonpagable code, and this one is not: %Routine. (Irp = %Irp )": 1,
                "An IRP dispatch handler has returned without passing down or completing this Irp or someone forgot to return STATUS_PENDING. (Irp = %Snapshot ).": 1,
                "An IRP dispatch handler has returned a status that is illegal (0xFFFFFFFF). This is probably due to an uninitialized stack variable. Please do an ln on address %lx and file a bug. (Irp = %Snapshot )": 1,
                "An IRP dispatch handler ( %Routine ) has returned a status that is inconsistent with the Irp's IoStatus.Status field. ( Irp = %Snapshot - Irp->IoStatus.Status = %Status1 - returned = %Status2 )": 1,
                "An IRP dispatch handler for a bus filter has deleted it's device object, but the PDO is still present! Bus filters must clean up in FastIoDetach callbacks. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot": 1,
                "A Bus Filter's IRP dispatch handler has detached upon receiving a remove IRP when the PDO is still alive. Bus Filters must clean up in FastIoDetach callbacks. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot": 1,
                "An IRP dispatch handler for a PDO has deleted it's device object, but the hardware has not been reported as missing in a bus relations query. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot ": 1,
                "IRP_MJ_SYSTEM_CONTROL has been completed by someone other than the ProviderId. This IRP should either have been completed earlier or should have been passed down (Irp = %Irp ). The IRP was targetted at DeviceObject %DevObj": 1,
                "This driver has not filled out a dispatch routine for a required IRP major function (Irp = %Irp ).": 1,
                "An IRP dispatch handler has not properly deleted it's device object upon receiving a remove IRP. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot": 1,
                "An IRP dispatch handler has not properly detached from the stack below it upon receiving a remove IRP. DeviceObject = %DevObj - Dispatch = %Routine - Irp = %Snapshot": 1,
                "Caller has copied the Irp stack but not set a completion routine. This is inefficient, use IoSkipCurrentIrpStackLocation instead (Irp = %Irp ).": 1,
                "Driver has returned a suspicious status. This is probably due to an uninitiaized variable bug in the driver. (Irp = %Irp )": 1,
                "Previously set IRP_MJ_POWER status has been converted to STATUS_NOT_SUPPORTED. This failure status is reserved for use of the OS - drivers cannot fail a Power IRP with this value (Irp = %Irp ).": 1,
                "Non-successful non-STATUS_NOT_SUPPORTED IRP status for IRP_MJ_POWER is being passed down stack (Irp = %Irp ). Failed POWER IRPs must be completed.": 1,
                "The driver has responded to an IRP that is that is reserved for other device objects elsewhere in the stack. (Irp = %Irp )": 1,
                "The driver has not handled a required IRP. The driver must update the status of the IRP to indicate whether it's been handled or not. (Irp = %Irp ).": 1,
                "Previously set IRP_MJ_PNP status has been converted to STATUS_NOT_SUPPORTED. This failure status is reserved for use of the OS - drivers cannot fail a PnP IRP with this value. (Irp = %Irp ).": 1,
                "Non-successful non-STATUS_NOT_SUPPORTED IRP status for IRP_MJ_PNP is being passed down stack (Irp = %Irp ). Failed PNP IRPs must be completed.": 1,
                "Caller has changed the information field of an IRP it does not understand (Irp = %Irp ).": 1,
                "Caller has changed the status field of an IRP it does not understand (Irp = %Irp ).": 1,
                "Caller has trashed or has not properly copied IRP's stack (Irp = %Irp ).": 1,
                "Caller has forwarded an Irp while skipping a device object in the stack. The caller is probably sending IRPs to the PDO instead of to the device returned by IoAttachDeviceToDeviceStack (Irp = %Irp ).": 1,
                "Any WMI IRP must have status initialized to STATUS_NOT_SUPPORTED (Irp = %Irp ).": 1,
                "Any Power IRP must have status initialized to STATUS_NOT_SUPPORTED (Irp = %Irp ).": 1,
                "Any PNP IRP must have status initialized to STATUS_NOT_SUPPORTED (Irp = %Irp ).": 1,
                "Caller of IoInitializeIrp has passed an IRP that was allocated with IoAllocateIrp. This is illegal and unneccessary, and has caused a quota leak. Check the documentation for IoReuseIrp if this IRP is being recycled.": 1,
                "Caller of IoFreeIrp is freeing an IRP that is still enqueued against a thread! (Irp = %Irp )": 1,
                "Caller of IoFreeIrp is freeing an IRP that is still in use! (Irp = %Irp )": 1,
                "Caller of IoFreeIrp is freeing an IRP that is still in use! (Original Irp = %Irp1, Irp in usage is %Irp2 )": 1,
                "Caller is completing an IRP that is currently queued beneath it! The code handling IRPs returning STATUS_PENDING in this driver appears to be broken. (Irp = %Irp )": 1,
                "This IRP is about to run out of stack locations. Someone may have forwarded this IRP from another stack (Irp = %Irp ).": 1,
                "Caller has manually copied the stack and has inadvertantly copied the upper layer's completion routine. Please use IoCopyCurrentIrpStackLocationToNext. (Irp = %Irp ).": 1,
                "Caller has incorrectly forwarded an IRP (control field not zerod). The driver should use IoCopyCurrentIrpStackLocationToNext or IoSkipCurrentIrpStackLocation. (Irp = %Irp )": 1,
                "Caller is forwarding an IRP that is currently queued beneath it! The code handling IRPs returning STATUS_PENDING in this driver appears to be broken (Irp = %Irp ).": 1,
                "Caller has passed in NULL as a DeviceObject. This is fatal (Irp = %Irp ).": 1,
                "A driver has called IoCallDriver without setting the CancelRoutine in the Irp to NULL (Irp = %Irp ).": 1,
                "Driver has attempted to detach from device object %DevObj, which is not attached to anything. This may occur if detach was called twice on the same device object.": 1,
                "A device is deleting itself while there is another device beneath it in the driver stack. This may be because the caller has forgotten to call IoDetachDevice first, or the lower driver may have incorrectly deleted itself.": 1,
                "SWENUM.SYS": 1,
                "SCSIPORT.SYS": 1,
                "ACPI.SYS": 1,
                "NDIS.SYS": 1,
                "NTKRPAMP.EXE": 1,
                "NTKRNLPA.EXE": 1,
                "NTKRNLMP.EXE": 1,
                "NTOSKRNL.EXE": 1,
                "HAL.DLL": 1,
                "CORE DRIVER ERROR": 1,
                "POSTPONED WDM DRIVER BUG": 1,
                "WDM DRIVER WARNING": 1,
                "WDM DRIVER ERROR": 1,
                "tZHt8Ht": 1,
                "v<hCcWqj": 1,
                "t7Ht+Hu8": 1,
                "hCcWkj": 1,
                "4@hCcVa": 1,
                "QhTunLh": 1,
                "hFSimjxj": 1,
                "j hFSfmj j": 1,
                "hFLshj03": 1,
                "hFLexj8VVVh": 1,
                "hFLwlj": 1,
                "hFLlnj VVVh": 1,
                "hFLlij VVVh": 1,
                "hFLflj@VVVh": 1,
                "hFat ": 1,
                "VWhFSrt": 1,
                "BOOTLOGO": 1,
                "PERFMEM": 1,
                "BURNMEMORY": 1,
                "%ws\\System32\\Drivers\\%wZ": 1,
                "%Z %u%c": 1,
                "CSD %04x": 1,
                "%Z %u": 1,
                "5.1.2600.5512": 2,
                "%u.%u": 2,
                "YYt1h": 1,
                "YYt @P": 1,
                "YYt(h": 2,
                "F,Ph4": 1,
                "hNls ": 1,
                "hStacVj": 1,
                "\\SystemRoot": 2,
                "\\ArcName\\%s%s": 1,
                "NOGUIBOOT": 1,
                "MININT": 1,
                "INRAM": 1,
                ": %wZ": 1,
                "MICROSOFT (R) WINDOWS (TM)": 1,
                "%u System Processor [%u MB Memory] %Z": 2,
                "SAFEBOOT:": 2,
                "MINIMAL": 1,
                "NETWORK": 1,
                "DSREPAIR": 1,
                "(ALTERNATESHELL)": 1,
                "BOOTLOG": 1,
                "YYt+h": 1,
                "SSSPjd": 1,
                "SSSPjm": 1,
                "QSSSSSSP": 1,
                "SSVjo": 1,
                "SSSPjp": 1,
                "TSVWj": 1,
                "jt[WW": 1,
                "IOINIT: UnicodeToAnsi( %wZ ) failed - %x": 1,
                "IOINIT: AnsiToUnicode( %Z ) failed - %x": 1,
                "t-j`X": 1,
                "hIrpl": 1,
                "hIrpsh": 1,
                "hMdl jxSh": 1,
                "hIcpPj": 1,
                "hIrpL": 1,
                "hIrpSh": 1,
                "hMdlPjxS": 1,
                "}#PVh": 1,
                "cdrom": 1,
                "\\Device\\LanmanRedirector": 4,
                "\\ArcName\\%spartition(%d)": 1,
                "\\Device\\CdRom%d": 1,
                "FF@@:": 1,
                "$SVWh": 1,
                "BhPp  Wj": 1,
                "hPpin": 2,
                "PPPPPV": 1,
                "Phf%[": 1,
                "Phr%[": 1,
                "PPPPh0": 1,
                "PPPPh@": 1,
                "Phd)[": 1,
                "PhD*[": 1,
                "RDIMAGEOFFSET": 1,
                "RDIMAGELENGTH": 1,
                "YYt%h": 1,
                "jPYjZXh": 1,
                "PpinV": 1,
                "hPpinWj": 1,
                "|<SSV": 1,
                "hPpinj": 2,
                "PhJ/[": 1,
                "ramdisk(0)": 1,
                "Ph49[": 1,
                "hPpsuh": 1,
                "@@AA;": 1,
                "ShPpsu": 1,
                "hPpsuFFVj": 1,
                "hPpLg": 1,
                " hjF[": 1,
                "u,hPpreWj": 1,
                "SVWt~": 1,
                "t%Ph@XH": 1,
                "tGhMaprPj": 1,
                "MaprVj<j": 1,
                "t2hMapr": 1,
                "hMapr": 1,
                "hMaprj0j": 1,
                "Pj0Vj": 1,
                "MaprVh": 2,
                "0SVWj": 1,
                "0hzT[": 1,
                "hMaprPV": 1,
                "0WhMaprh": 1,
                "YYt\"h": 1,
                "$hPpeiPj": 1,
                " rj9x": 1,
                "PhX_[": 1,
                "$hMapP3": 1,
                "Kt3Kt": 1,
                "Kt-Ku:": 1,
                " ;^$r": 1,
                "hMapPPj": 2,
                "Jt\"Jt": 1,
                "MapPV": 1,
                "hMapP": 1,
                "MapPWPj": 1,
                "u<f9]": 1,
                "MapPWj`j": 1,
                "Pj`Vj": 1,
                "w vpS": 1,
                "<hMapPPj": 1,
                "Ph x[": 1,
                "hPp  Qj": 1,
                "Wh\"@ ": 1,
                "WhIoFu": 1,
                "hIoFuFF": 1,
                "|'VVVj": 1,
                " t7hH": 1,
                "PPPPSS": 2,
                "SRPWj>": 1,
                "NOEXECUTE=ALWAYSON": 1,
                "NOEXECUTE=OPTOUT": 1,
                "NOEXECUTE=OPTIN": 1,
                "NOEXECUTE=ALWAYSOFF": 1,
                "NOEXECUTE": 1,
                "EXECUTE": 1,
                "WVVVVV": 1,
                "hKe  ": 1,
                "Genuu3": 1,
                "ntelu+": 1,
                "ineIu#": 1,
                "ZZZZQ": 1,
                "@hKe  ": 1,
                "Wj\"Y3": 1,
                "j hLpcMP": 1,
                "hIrql": 1,
                "j hFltt": 1,
                "95d4G": 2,
                "txf= ": 1,
                "tgf=*": 1,
                "t`SVh": 1,
                "hMmSgjHj": 1,
                "PWj(j(WW": 1,
                "0SVW3": 2,
                "NhMmDT": 1,
                "=.rsrt|=POOLuA": 1,
                "CODEu": 1,
                "&=MISYu": 1,
                "SPTEu": 1,
                "QSVWh": 1,
                "F&@hMmDT@Pj": 1,
                "hMmMl": 2,
                "v1hMmMl": 1,
                "hDacl": 1,
                "=INITtF": 1,
                "u@=PAGE": 1,
                "u`9W ": 1,
                "PAGE;": 1,
                ".edau": 1,
                "SPECu": 1,
                "USERVA": 1,
                "YYt)h": 1,
                "v795 WH": 1,
                "hMmDmjHS": 1,
                "hMm  j": 1,
                "Mm  W3": 1,
                "u&WVj": 1,
                "MiTriageSystem: Disabled verifier due to verifier mode setting.": 1,
                "MiTriageSystem: Previous bugcheck was %x %p %p %p %p": 1,
                "MiTriageSystem: Triage disabled in registry by administrator": 1,
                "MiTriageSystem: Triage ENABLED in registry by administrator": 1,
                "Matching checksum for module %wZ not found in triage dump": 1,
                "MiTriageSystem: enabling options below to find who caused the last crash": 1,
                "N@;H@t": 1,
                "MiTriageAddDrivers: Marking %wZ for verification when it is loaded": 1,
                "6YYhMmLd": 1,
                "t%9= WH": 1,
                "hMmSP": 1,
                "Mm  WPS": 1,
                "MM: Loader/HAL memory block indicates large pages cannot be used for %p->%p": 1,
                "MM: Disabling large pages for all ranges due to overlap": 2,
                "NOLOWMEM": 1,
                "+5|5G": 1,
                "u3f9p": 1,
                "hMm  Q": 1,
                "ObSTSh": 1,
                "tHShD": 1,
                "hOb  ": 2,
                "tp,Vj": 1,
                "hObCij0SW": 1,
                "hObNmh": 1,
                "t'hObAgPj": 1,
                "hObCIh": 1,
                "hObCIj0SW": 1,
                "hObNM": 1,
                "hObNMh": 1,
                ",hDaclPj": 2,
                "hidlej`SSSh": 1,
                "LdrInitializeThunk": 1,
                "95P2H": 1,
                "System": 1,
                "dSVWj": 2,
                "hSePaf": 1,
                "KiUserExceptionDispatcher": 1,
                "KiUserApcDispatcher": 1,
                "KiUserCallbackDispatcher": 1,
                "KiRaiseUserExceptionDispatcher": 1,
                "KiFastSystemCall": 1,
                "KiFastSystemCallRet": 1,
                "KiIntSystemCall": 1,
                "QQVWhnV\\": 1,
                "F4ToO": 1,
                "hRRlej(h": 1,
                "t`hJY\\": 1,
                ";pHutj": 1,
                "tUf==": 1,
                ";AHu'": 1,
                "SeAcVRj": 1,
                "SePrVPj": 1,
                "SeSiV": 1,
                "VVVSPW": 1,
                "\\Security": 1,
                "LSA_AUTHENTICATION_INITIALIZED": 1,
                "VVVVV": 1,
                "RRPRj3": 1,
                "\\SeRmCommandPort": 1,
                "\\SeLsaInitEvent": 1,
                "dSVWh": 1,
                "VVVj8h": 1,
                "SVhLgG": 1,
                "hSeLS3": 1,
                "|=Wh:": 1,
                "PhIrpCjPPPPh": 1,
                "PPPPPPh": 1,
                "PPPPPh": 1,
                "hIoTt": 1,
                "\\Registry\\Machine\\System\\CurrentControlSet\\Services\\WMI": 1,
                "u!PhWmiRj8PPPh": 1,
                "thVWj": 1,
                "PhPool": 2,
                "v@Sh4": 1,
                "hPoolVS": 1,
                "pSVWh": 1,
                "TVWh>": 1,
                "TVWhh": 1,
                "}NSSPj": 1,
                "u&SSPj": 1,
                "Key Wj\"j": 1,
                "Qj\"Pj": 1,
                "ucSSSj": 1,
                "Key j": 1,
                "Key VPS": 1,
                "hKey PS": 1,
                "hAtom": 1,
                "$SVW3": 1,
                "Wj-Y3": 1,
                "ShHdlsjXj": 1,
                "HdlsWh": 1,
                "t!WjPV": 1,
                "XIPBOOT": 1,
                "XIPROM=": 1,
                "XIPRAM=": 1,
                "XIPMEGS=": 1,
                "XIPVERBOSE": 1,
                "21:45:18": 1,
                "Apr 13 2008": 1,
                "d:\\xpsp\\base\\ntos\\ex\\xipdisp.c": 1,
                "XIP: debug timestamp at line %d in %s:   <<<%s %s>>>": 1,
                "XIP: Base %x  Count %x": 1,
                "XIPMEGS=%d in boot options is %d pages, but only %d pages were allocated by NTLDR": 1,
                "XIP: Malformed FAT Filesystem: BytesPerSector=%x  BytesPerCluster=%x  ClusterZeroOffset=%x": 1,
                "H2VPf": 1,
                "hXIP j@j": 1,
                "TVWh|": 1,
                "TVWj@h`?H": 1,
                "WjxY3": 1,
                "F PWj": 1,
                "PZtP3": 1,
                "CSWWWWWWVWSj": 1,
                "\\Registry\\Machine\\System\\ControlSet%03d": 1,
                "\\Registry\\Machine\\System\\CurrentControlSet\\Hardware Profiles\\%04d": 1,
                "(SWh\"": 1,
                "PWWjDWj": 1,
                "u\"Shh": 1,
                "SSSSWj": 1,
                "SSSVWj": 1,
                "SSSSSSVSh(": 1,
                "WhCMSb": 1,
                "SSSSSSVS": 1,
                "Q,;P,v5;": 1,
                "Q,;P,w": 1,
                "ShCM1 j": 1,
                "C$hCM2 ": 2,
                "hCM3 ": 1,
                "hCM3 j": 1,
                "hCM4 f": 1,
                "j1Y;M": 1,
                "<0|:<9": 1,
                "wj@@3": 1,
                " - %x": 1,
                "PhRSDT": 1,
                "PhFACP": 2,
                "MachineDescription": 1,
                "80387": 1,
                "tjhLmH": 1,
                "tih(mH": 1,
                "t)htmH": 1,
                "@@GG:": 1,
                "9s(tUhL": 1,
                "v=hCM  Pj": 1,
                "9s0u!": 1,
                "HtvHHt": 1,
                "9=Hn]": 1,
                "@0SVWj@[": 1,
                "|RhCM  ": 1,
                "Invalid operator %s used!": 1,
                "sGSVW": 1,
                "8$PnPu\"": 1,
                "uOVhACPI": 1,
                "Cleanup": 1,
                "t3j!P": 1,
                "CmpFindRSDTTable: Cannot open MultifunctionAdapter registry key.": 1,
                "CmpFindRSDTTable: ACPI BIOS MultifunctionAdapter registry key not found.": 1,
                "<@hACPI": 1,
                "CmpFindACPITable: Cannot map RSDT at %I64x": 2,
                "CmpFindACPITable: Cannot map DSDT at %I64x": 1,
                "CmpFindACPITable: Cannot find FADT": 1,
                "CmpFindACPITable: Cannot map FADT at %I64x": 1,
                "CmpFindACPITable: Cannot map header at %I64x": 1,
                "j$[SPQ": 1,
                "RSDTu": 1,
                "DSDTue": 1,
                "S=FACPuF": 1,
                "QQSVWj": 3,
                "hCMpij": 3,
                "t6hCMpij": 1,
                "Ph|pH": 1,
                "hCMpi": 1,
                "Strings": 1,
                "<.ufj": 1,
                "(SVWhCMpi3": 1,
                "Error on line %d in CmpOpenInfFile!": 1,
                "G;} r": 1,
                "6hCMgiVj": 1,
                "F;u r": 1,
                "} hCMgiPj": 1,
                "hCMgi": 2,
                "u VSS": 1,
                "t<hCMgiPj": 1,
                "\\Registry\\Machine\\": 1,
                "SVhCMgi": 1,
                "CmpAppendStringToMultiSz: Failed to allocate memory!": 2,
                "CMgiV": 1,
                "t<Ht5": 1,
                "t(Ht +": 1,
                "PQQQh": 1,
                "Value cannot be read for BitReg in %s line %d": 1,
                "|&VVj": 1,
                "jNh04]": 1,
                "<1uIGG3": 1,
                "m<2uwG": 1,
                "%d.%d.%d.%d": 1,
                "SSj j": 1,
                "hIoRbPj": 2,
                "VVj 3": 1,
                "hIoRbhN": 1,
                "^j-Zj": 1,
                "PPjPSh": 1,
                "Pj$Sh": 1,
                "DUMPu7": 1,
                "9PAGEu/": 1,
                "KeReleaseInStackQueuedSpinLock": 1,
                "KeAcquireInStackQueuedSpinLock": 1,
                "HalRequestSoftwareInterrupt": 1,
                "KeGetCurrentIrql": 1,
                "HalGetInterruptVector": 1,
                "HalInitSystem": 1,
                "HalReportResourceUsage": 1,
                "HalAllProcessorsStarted": 1,
                "HalQueryRealTimeClock": 1,
                "HalAllocateAdapterChannel": 1,
                "KeStallExecutionProcessor": 1,
                "HalTranslateBusAddress": 1,
                "HalGetBusDataByOffset": 1,
                "HalSetBusDataByOffset": 1,
                "HalReturnToFirmware": 1,
                "READ_PORT_UCHAR": 1,
                "READ_PORT_USHORT": 1,
                "READ_PORT_ULONG": 1,
                "WRITE_PORT_UCHAR": 1,
                "WRITE_PORT_USHORT": 1,
                "WRITE_PORT_ULONG": 1,
                "HalInitializeProcessor": 1,
                "HalCalibratePerformanceCounter": 1,
                "HalSetRealTimeClock": 1,
                "HalHandleNMI": 1,
                "HalBeginSystemInterrupt": 1,
                "HalEndSystemInterrupt": 1,
                "KeRaiseIrqlToSynchLevel": 1,
                "KeAcquireInStackQueuedSpinLockRaiseToSynch": 1,
                "HalSystemVectorDispatchEntry": 1,
                "HalDisableSystemInterrupt": 1,
                "HalEnableSystemInterrupt": 1,
                "HalClearSoftwareInterrupt": 1,
                "KeAcquireSpinLockRaiseToSynch": 1,
                "KeFlushWriteBuffer": 1,
                "HalProcessorIdle": 1,
                "HalReadDmaCounter": 1,
                "HalSetTimeIncrement": 1,
                "HalGetEnvironmentVariable": 1,
                "HalSetEnvironmentVariable": 1,
                "HAL.dll": 1,
                "VidCleanUp": 1,
                "VidResetDisplay": 1,
                "VidScreenToBufferBlt": 1,
                "VidBufferToScreenBlt": 1,
                "VidBitBlt": 1,
                "VidSolidColorFill": 1,
                "VidSetTextColor": 1,
                "VidDisplayString": 1,
                "VidInitialize": 1,
                "VidSetScrollRegion": 1,
                "BOOTVID.dll": 1,
                "KdDebuggerInitialize1": 1,
                "KdSave": 1,
                "KdSendPacket": 1,
                "KdD0Transition": 1,
                "KdD3Transition": 1,
                "KdRestore": 1,
                "KdReceivePacket": 1,
                "KdDebuggerInitialize0": 1,
                "KDCOM.dll": 1,
                "HalSetProfileInterval": 1,
                "HalStartProfileInterrupt": 1,
                "HalStopProfileInterrupt": 1,
                "APC_INDEX_MISMATCH": 1,
                "DEVICE_QUEUE_NOT_BUSY": 1,
                "INVALID_AFFINITY_SET": 1,
                "INVALID_DATA_ACCESS_TRAP": 1,
                "INVALID_PROCESS_ATTACH_ATTEMPT": 1,
                "INVALID_PROCESS_DETACH_ATTEMPT": 1,
                "INVALID_SOFTWARE_INTERRUPT": 1,
                "IRQL_NOT_DISPATCH_LEVEL": 1,
                "IRQL_NOT_GREATER_OR_EQUAL": 1,
                "IRQL_NOT_LESS_OR_EQUAL": 1,
                "NO_EXCEPTION_HANDLING_SUPPORT": 1,
                "MAXIMUM_WAIT_OBJECTS_EXCEEDED": 1,
                "MUTEX_LEVEL_NUMBER_VIOLATION": 1,
                "NO_USER_MODE_CONTEXT": 1,
                "SPIN_LOCK_ALREADY_OWNED": 1,
                "SPIN_LOCK_NOT_OWNED": 1,
                "THREAD_NOT_MUTEX_OWNER": 1,
                "TRAP_CAUSE_UNKNOWN": 1,
                "EMPTY_THREAD_REAPER_LIST": 1,
                "CREATE_DELETE_LOCK_NOT_LOCKED": 1,
                "LAST_CHANCE_CALLED_FROM_KMODE": 1,
                "CID_HANDLE_CREATION": 1,
                "CID_HANDLE_DELETION": 1,
                "REFERENCE_BY_POINTER": 1,
                "BAD_POOL_HEADER": 1,
                "MEMORY_MANAGEMENT": 1,
                "PFN_SHARE_COUNT": 1,
                "PFN_REFERENCE_COUNT": 1,
                "NO_SPIN_LOCK_AVAILABLE": 1,
                "Check to be sure you have adequate disk space. If a driver is": 1,
                "identified in the Stop message, disable the driver or check": 1,
                "with the manufacturer for driver updates. Try changing video": 1,
                "adapters.": 1,
                "Check with your hardware vendor for any BIOS updates. Disable": 2,
                "BIOS memory options such as caching or shadowing. If you need": 2,
                "to use Safe Mode to remove or disable components, restart your": 2,
                "computer, press F8 to select Advanced Startup Options, and then": 2,
                "select Safe Mode.": 3,
                "SHARED_RESOURCE_CONV_ERROR": 1,
                "KERNEL_APC_PENDING_DURING_EXIT": 1,
                "QUOTA_UNDERFLOW": 1,
                "FILE_SYSTEM": 1,
                "Disable or uninstall any anti-virus, disk defragmentation": 1,
                "or backup utilities. Check your hard drive configuration,": 1,
                "and check for any updated drivers. Run CHKDSK /F to check": 1,
                "for hard drive corruption, and then restart your computer.": 1,
                "NTFS_FILE_SYSTEM": 1,
                "NPFS_FILE_SYSTEM": 1,
                "CDFS_FILE_SYSTEM": 1,
                "RDR_FILE_SYSTEM": 1,
                "CORRUPT_ACCESS_TOKEN": 1,
                "SECURITY_SYSTEM": 1,
                "INCONSISTENT_IRP": 1,
                "PANIC_STACK_SWITCH": 1,
                "PORT_DRIVER_INTERNAL": 1,
                "SCSI_DISK_DRIVER_INTERNAL": 1,
                "Run system diagnostics supplied by your hardware manufacturer.": 1,
                "In particular, run a memory check, and check for faulty or": 1,
                "mismatched memory. Try changing video adapters.": 1,
                "INSTRUCTION_BUS_ERROR": 1,
                "SET_OF_INVALID_CONTEXT": 1,
                "PHASE0_INITIALIZATION_FAILED": 1,
                "PHASE1_INITIALIZATION_FAILED": 1,
                "UNEXPECTED_INITIALIZATION_CALL": 1,
                "CACHE_MANAGER": 1,
                "NO_MORE_IRP_STACK_LOCATIONS": 1,
                "DEVICE_REFERENCE_COUNT_NOT_ZERO": 1,
                "FLOPPY_INTERNAL_ERROR": 1,
                "SERIAL_DRIVER_INTERNAL": 1,
                "SYSTEM_EXIT_OWNED_MUTEX": 1,
                "SYSTEM_UNWIND_PREVIOUS_USER": 1,
                "SYSTEM_SERVICE_EXCEPTION": 1,
                "INTERRUPT_UNWIND_ATTEMPTED": 1,
                "INTERRUPT_EXCEPTION_NOT_HANDLED": 1,
                "MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED": 1,
                "Remove any recently installed software including backup": 1,
                "utilities or disk-intensive applications.": 1,
                "If you need to use Safe Mode to remove or disable components,": 2,
                "restart your computer, press F8 to select Advanced Startup": 1,
                "Options, and then select Safe Mode.": 1,
                "TARGET_MDL_TOO_SMALL": 1,
                "MUST_SUCCEED_POOL_EMPTY": 1,
                "ATDISK_DRIVER_INTERNAL": 1,
                "NO_SUCH_PARTITION": 1,
                "MULTIPLE_IRP_COMPLETE_REQUESTS": 1,
                "INSUFFICIENT_SYSTEM_MAP_REGS": 1,
                "DEREF_UNKNOWN_LOGON_SESSION": 1,
                "REF_UNKNOWN_LOGON_SESSION": 1,
                "CANCEL_STATE_IN_COMPLETED_IRP": 1,
                "PAGE_FAULT_WITH_INTERRUPTS_OFF": 1,
                "IRQL_GT_ZERO_AT_SYSTEM_SERVICE": 1,
                "STREAMS_INTERNAL_ERROR": 1,
                "FATAL_UNHANDLED_HARD_ERROR": 1,
                "NO_PAGES_AVAILABLE": 1,
                "PFN_LIST_CORRUPT": 1,
                "NDIS_INTERNAL_ERROR": 1,
                "PAGE_FAULT_IN_NONPAGED_AREA": 1,
                "REGISTRY_ERROR": 1,
                "MAILSLOT_FILE_SYSTEM": 1,
                "NO_BOOT_DEVICE": 1,
                "LM_SERVER_INTERNAL_ERROR": 1,
                "DATA_COHERENCY_EXCEPTION": 1,
                "INSTRUCTION_COHERENCY_EXCEPTION": 1,
                "XNS_INTERNAL_ERROR": 1,
                "FTDISK_INTERNAL_ERROR": 1,
                "PINBALL_FILE_SYSTEM": 1,
                "CRITICAL_SERVICE_FAILED": 1,
                "SET_ENV_VAR_FAILED": 1,
                "HAL_INITIALIZATION_FAILED": 1,
                "UNSUPPORTED_PROCESSOR": 1,
                "OBJECT_INITIALIZATION_FAILED": 1,
                "SECURITY_INITIALIZATION_FAILED": 1,
                "PROCESS_INITIALIZATION_FAILED": 1,
                "HAL1_INITIALIZATION_FAILED": 1,
                "OBJECT1_INITIALIZATION_FAILED": 1,
                "SECURITY1_INITIALIZATION_FAILED": 1,
                "SYMBOLIC_INITIALIZATION_FAILED": 1,
                "MEMORY1_INITIALIZATION_FAILED": 1,
                "CACHE_INITIALIZATION_FAILED": 1,
                "CONFIG_INITIALIZATION_FAILED": 1,
                "FILE_INITIALIZATION_FAILED": 1,
                "IO1_INITIALIZATION_FAILED": 1,
                "LPC_INITIALIZATION_FAILED": 1,
                "PROCESS1_INITIALIZATION_FAILED": 1,
                "REFMON_INITIALIZATION_FAILED": 1,
                "SESSION1_INITIALIZATION_FAILED": 1,
                "SESSION2_INITIALIZATION_FAILED": 1,
                "SESSION3_INITIALIZATION_FAILED": 1,
                "SESSION4_INITIALIZATION_FAILED": 1,
                "SESSION5_INITIALIZATION_FAILED": 1,
                "ASSIGN_DRIVE_LETTERS_FAILED": 1,
                "CONFIG_LIST_FAILED": 1,
                "BAD_SYSTEM_CONFIG_INFO": 1,
                "CANNOT_WRITE_CONFIGURATION": 1,
                "PROCESS_HAS_LOCKED_PAGES": 1,
                "KERNEL_STACK_INPAGE_ERROR": 1,
                "PHASE0_EXCEPTION": 1,
                "Mismatched kernel and hal image.": 1,
                "KERNEL_DATA_INPAGE_ERROR": 1,
                "Check for viruses on your computer. Remove any newly installed": 1,
                "hard drives or hard drive controllers. Check your hard drive": 1,
                "to make sure it is properly configured and terminated.": 1,
                "Run CHKDSK /F to check for hard drive corruption, and then": 1,
                "restart your computer.": 1,
                "INSTALL_MORE_MEMORY": 1,
                "SYSTEM_THREAD_EXCEPTION_NOT_HANDLED": 1,
                "Run a system diagnostic utility supplied by your hardware manufacturer.": 1,
                "In particular, run a memory check, and check for faulty or mismatched": 1,
                "memory. Try changing video adapters.": 1,
                "Disable or remove any newly installed hardware and drivers. Disable or": 1,
                "remove any newly installed software. If you need to use Safe Mode to": 1,
                "remove or disable components, restart your computer, press F8 to select": 1,
                "Advanced Startup Options, and then select Safe Mode.": 1,
                "Hardware malfunction.": 1,
                "SPIN_LOCK_INIT_FAILURE": 1,
                "DFS_FILE_SYSTEM": 1,
                "OFS_FILE_SYSTEM": 1,
                "RECOM_DRIVER": 1,
                "SETUP_FAILURE": 1,
                "Audit attempt has failed.": 1,
                "This system may be infected with a virus.": 1,
                "KERNEL_MODE_EXCEPTION_NOT_HANDLED": 1,
                "PP0_INITIALIZATION_FAILED": 1,
                "PP1_INITIALIZATION_FAILED": 1,
                "WIN32K_INIT_OR_RIT_FAILURE": 1,
                "UP_DRIVER_ON_MP_SYSTEM": 1,
                "INVALID_KERNEL_HANDLE": 1,
                "KERNEL_STACK_LOCKED_AT_EXIT": 1,
                "PNP_INTERNAL_ERROR": 1,
                "INVALID_WORK_QUEUE_ITEM": 1,
                "BOUND_IMAGE_UNSUPPORTED": 1,
                "END_OF_NT_EVALUATION_PERIOD": 1,
                "INVALID_REGION_OR_SEGMENT": 1,
                "SYSTEM_LICENSE_VIOLATION": 1,
                "UDFS_FILE_SYSTEM": 1,
                "MACHINE_CHECK_EXCEPTION": 1,
                "DRIVER_POWER_STATE_FAILURE": 1,
                "INTERNAL_POWER_ERROR": 1,
                "Inconsistency detected in the PCI Bus driver's internal structures.": 1,
                "A CRC check on the memory range has failed": 1,
                "ACPI_DRIVER_INTERNAL": 1,
                "Internal inconsistency while representing": 1,
                "Ntfs Structured Storage as a DOCFILE.": 1,
                "The BIOS in this system is not fully ACPI compliant.  Please contact your": 1,
                "system vendor or visit http://www.hardware-update.com for an updated BIOS.": 1,
                "If you are unable to obtain an updated BIOS or the latest BIOS supplied by": 1,
                "your vendor is not ACPI compliant, you can turn off ACPI mode during text": 1,
                "mode setup.  To do this, simply press the F7 key when you are prompted to": 1,
                "install storage drivers.  The system will not notify you that the F7 key": 1,
                "was pressed - it will silently disable ACPI and allow you to continue": 1,
                "your installation.": 1,
                "FP_EMULATION_ERROR": 1,
                "BAD_EXHANDLE": 1,
                "The system is booting in safemode - Minimal Services": 1,
                "The system is booting in safemode - Minimal Services with Network": 1,
                "The system is booting in safemode - Directory Services Repair": 1,
                "SESSION_HAS_VALID_POOL_ON_EXIT": 1,
                "Allocate from NonPaged Pool failed for a HAL critical allocation.": 1,
                "The video driver failed to initialize": 1,
                "Loaded driver": 1,
                "Did not load driver": 1,
                "Boot Logging Enabled": 1,
                "A wait operation, attach process, or yield was attempted from a DPC routine.": 1,
                "A parity error in the system memory or I/O system was detected.": 1,
                "SESSION_HAS_VALID_VIEWS_ON_EXIT": 1,
                "An initialization failure occurred while attempting to boot from the network.": 1,
                "A duplicate IP address was assigned to this machine while attempting to": 1,
                "boot from the network.": 1,
                "The hibernated memory image does not match the current hardware configuration.": 1,
                "An attempt was made to write to read-only memory.": 1,
                "MUTEX_ALREADY_OWNED": 1,
                "An attempt to access PCI configuration space failed.": 1,
                "SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION": 1,
                "BAD_POOL_CALLER": 1,
                "A system file that is owned by Windows was replaced by an application": 1,
                "running on your system.  The operating system detected this and tried to": 1,
                "verify the validity of the file's signature.  The operating system found that": 1,
                "the file signature is not valid and put the original, correct file back": 1,
                "so that your operating system will continue to function properly.": 1,
                "A device driver attempting to corrupt the system has been caught.": 2,
                "The faulty driver currently on the kernel stack must be replaced": 2,
                "with a working version.": 2,
                "A device driver has pool.": 1,
                "Check to make sure any new hardware or software is properly installed.": 2,
                "If this is a new installation, ask your hardware or software manufacturer": 2,
                "for any Windows updates you might need.": 2,
                "Run the driver verifier against any new (or suspect) drivers.": 1,
                "If that doesn't reveal the corrupting driver, try enabling special pool.": 1,
                "Both of these features are intended to catch the corruption at an earlier": 1,
                "point where the offending driver can be identified.": 1,
                "restart your computer, press F8 to select Advanced Startup Options,": 1,
                "and then select Safe Mode.": 1,
                "A kernel timer or DPC was found in memory which must not contain such": 1,
                "items.  Usually this is memory being freed.  This is usually caused by": 2,
                "a device driver that has not cleaned up properly before freeing memory.": 2,
                "The processor's IRQL is not valid for the currently executing context.": 1,
                "This is a software error condition and is usually caused by a device": 1,
                "driver changing IRQL and not restoring it to its previous value when": 1,
                "it has finished its task.": 1,
                "The IO manager has detected a violation by a driver that is being verified.": 1,
                "The faulty driver that is being verified must be debugged and": 1,
                "replaced with a working version.": 1,
                "Plug and Play detected an error most likely caused by a faulty driver.": 1,
                "DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS": 1,
                "The system is attempting to access memory after it has been freed.": 1,
                "This usually indicates a system-driver synchronization issue.": 2,
                "The system is attempting to access memory beyond the end of the allocation.": 1,
                "DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS": 1,
                "TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE": 1,
                "DRIVER_CORRUPTED_MMPOOL": 1,
                "DRIVER_IRQL_NOT_LESS_OR_EQUAL": 1,
                "The driver mistakenly marked a part of it's image pagable instead of nonpagable.": 1,
                "The driver unloaded without cancelling pending operations.": 1,
                "The driver is attempting to access memory after it has been freed.": 1,
                "The driver is attempting to access memory beyond the end of the allocation.": 1,
                "The driver is attempting to unmap an invalid memory address.": 1,
                "The driver has used an excessive number of system PTEs.": 1,
                "The driver is corrupting the locked pages tracking structures.": 1,
                "The driver is mismanaging system PTEs.": 1,
                "A driver has corrupted the memory management system PTEs.": 1,
                "A driver accessed a stack address that lies below the current stack pointer": 1,
                "of the stack's thread.": 1,
                "A driver corrupted pool memory used for holding pages destined for disk.": 1,
                "A worker thread is impersonating another process. The work item forgot to": 1,
                "disable impersonation before it returned.": 1,
                "Your computer (BIOS) has reported that a component in your system is faulty and": 1,
                "has prevented Windows from operating.  You can determine which component is": 1,
                "faulty by running the diagnostic disk or tool that came with your computer.": 1,
                "If you do not have this tool, you must contact your system vendor and report": 1,
                "this error message to them.  They will be able to assist you in correcting this": 1,
                "hardware problem thereby allowing Windows to operate.": 1,
                "WORKER_THREAD_RETURNED_AT_BAD_IRQL": 1,
                "The end-user manually generated the crashdump.": 1,
                "A thread tried to release a resource it did not own.": 1,
                "A executive worker item was found in memory which must not contain such": 1,
                "POWER_FAILURE_SIMULATE": 1,
                "The DMA Subsystem has detected an illegal DMA operation initiated by": 1,
                "a driver being verified. The faulty driver must be replaced with a": 1,
                "working version.": 1,
                "While restoring the previously saved floating point state for a thread,": 1,
                "the state was found to be invalid.": 1,
                "The fileobject passed to IoCancelFileOpen is invalid. It should have reference of 1. The driver": 1,
                "that called IoCancelFileOpen is at fault.": 1,
                "An executive worker thread is being terminated without having gone through the worker thread rundown code.": 1,
                "Work items queued to the Ex worker queue must not terminate their threads.": 1,
                "A stack trace should indicate the culprit.": 1,
                "The device driver got stuck in an infinite loop. This usually indicates": 1,
                "problem with the device itself or with the device driver programming the": 1,
                "hardware incorrectly.": 1,
                "Please check with your hardware device vendor for any driver updates.": 1,
                "The filesystem driver stack has deadlocked and all the modified pages are": 1,
                "destined for the filesystem.  Since the filesystem is nonoperational, the": 1,
                "system has crashed because none of the modified pages can be reused with": 1,
                "losing data.  Any filesystem or filter driver in the stack may be at fault.": 1,
                "SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT": 1,
                "UNMOUNTABLE_BOOT_VOLUME": 1,
                "The kernel attempted to ready a thread that was in an incorrect state such as terminated.": 1,
                "The SCSI verifier has detected an error in a SCSI miniport driver being verified.": 1,
                "An interrupt storm has caused the system to hang.": 1,
                "The system does not shutdown in a deterministic manner so bugchecks can occur.": 1,
                "A process or thread crucial to system operation has unexpectedly exited or been terminated.": 1,
                "FLTMGR_FILE_SYSTEM": 1,
                "The PCI driver has detected an error in a PCI device or BIOS being verified.": 1,
                "A driver has overrun a stack-based buffer.  This overrun could potentially allow a malicious": 1,
                "user to gain control of this machine.": 1,
                "An attempt was made to execute non-executable memory.": 1,
                "BUGCODE_USB_DRIVER": 1,
                "An invalid AGP memory access was detected.": 1,
                "The Graphics Aperture Redirection Table (Gart) is corrupt.": 1,
                "The AGP HW has been reprogrammed by an unauthorized agent.": 1,
                "A 3rd Party file system or file system filter has failed in an unrecoverable way.": 1,
                "Microsoft (R) Windows (R) Version %hs (Build %u%hs)": 1,
                "A problem has been detected and Windows has been shut down to prevent damage": 1,
                "to your computer.": 1,
                "The problem seems to be caused by the following file:": 1,
                "If this is the first time you've seen this Stop error screen,": 1,
                "restart your computer. If this screen appears again, follow": 1,
                "these steps:": 1,
                "If problems continue, disable or remove any newly installed hardware": 1,
                "or software. Disable BIOS memory options such as caching or shadowing.": 1,
                "If you need to use Safe Mode to remove or disable components, restart": 1,
                "your computer, press F8 to select Advanced Startup Options, and then": 1,
                "Technical information:": 1,
                "Service Pack": 1,
                "MultiProcessor Kernel": 1,
                "A kernel thread terminated while holding a mutex": 1,
                "Beginning dump of physical memory": 1,
                "Dumping physical memory to disk": 1,
                "Physical memory dump complete.": 1,
                "Contact your system administrator or technical support group for further": 1,
                "assistance.": 1,
                "%u System Processors [%u MB Memory] %Z": 1,
                "Undocked Profile": 1,
                "Docked Profile": 1,
                "Profile": 1,
                "wGwyw": 1,
                "LGuwy|": 1,
                "uyw|y": 1,
                "yGWwyw": 1,
                "}]}u]": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"22\"\"\"22223333333333333CCD44DDDDDDDDdFDDFDdddfFFFffdffffffffffff": 1,
                "hhhffffffffffffffffffFfFFFFFDDDDDDDDDDDDDDDDDDDD333333333333333222\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"333333333333444444DD444DDDDDDDDDDDDFFFFFFFFffdfFffffffffff": 1,
                "hffffffffffdfFffddddddddDDDDDDDDDDDDCCCDDCCCCCC333333333333\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"###333333333333333DDDDDDDDDDDDDDDDDDDDdddddfdffffffffffffffffff": 1,
                "hffffffffffffFffdddfFFFDdDDdFDDDDDDDDCCD443333333333333####\"\"\"##\"\"\"\"\"\"\"\"\"(": 1,
                "fffffffffffffffffffffffffffffffffffffffffffffvvvvvvwwwwwwwwwwwwwwwwwwwwwww": 1,
                "xxxxw": 1,
                "xxxxxw": 1,
                "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwvwgwggfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffgggwwwwwwwwwwwwwwwwwwwwwwwwwww": 1,
                "xxxxxxxxxxw": 1,
                "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwvvvvvfffffffffffffffffffffffffffffffffffe
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 1,
                "bg": 1,
                "e\"\"\"\"\"\"\"\"\"fR\"\"b\"\"\"\"\"\"\"e\"\"\"\"\"\"\"\"&e\"\"\"\"\"\"\"\"\"&": 1,
h": 1,
                "\"\"\"\"\"Z": 1,

                "WR\"\"\"\"\"": 1,
                "\"\"\"\"\"\"\"v\"*": 1,
                "fey\"-~f": 1,
                "ffn\"\"\"": 1,
w&": 1,
                "R\"\"\"\"\"\"\"g": 1,
                "z\"~Xv": 1,
                "njr
                "R\"\"\" i": 1,
                "r\"\"\"\"\"\"Y": 1,

                "r\"\"\"\"\"\"~": 1,

                "\"\"\"\"\"\"}\"kr&u\"fge\"e%v\"Vg\"\"": 1,
                "\"\"'w\"&'bWb&R": 1,
                "e\"e~": 1,
                "\"\"\"\"\"\"]": 1,
                "R\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 1,
                "\"\"\"\"\"\"\"\")b": 1,
n": 1,
                "\"\"\"\"\"\"&wu\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"wwv\"\"\"\"\"\"\"\"'bv


                "b\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"%fR\"\"\"%fb\"\"\"\"\"\"\"\"\"\"ff
                "r\"\"\"\"\"~": 1,

                "\"\"\"\"\"": 1,
                "w\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"~": 1,
                "\"\"\"\"&u\"\"\"\"\"": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"m": 1,
                "'b gx": 1,
                "vR\"\"\"\"\"&": 1,
                "\"\"'u)": 1,

                "u\"\"\"\"'": 1,
                "\"\"\"\")": 1,

                "R\"\"\")": 1,
                "wwwv)": 1,
y": 1,
                "r\"\"\"^": 1,
                "R\"\"\".": 1,
x": 1,
                "v\"&R~": 1,
                "v\"\"\"\"\".": 1,
f\"\"": 1,
                "\"%}rm": 1,
                "r\"wb\"\"\".": 1,
}": 1,
                "r\"\"\".": 1,
n": 1,
                "y\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 1,
                "'w&we": 1,
                "\"wv\"'w\"&w&": 1,
                "\"\"\"'rx": 1,
                "R\"\"gwww{": 1,
                "ww\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"'": 1,
                "'w\"\"\"\"\"\"\"\"\"\"": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\")": 2,

                "\"\"\"\"\"\"\"\"\"\"": 2,


                "\"gw\"\"'wb\"&wgw\"\"\"\"\"\"\"\"\"\"wr~": 1,
                "\"VV&V&bb&bVbfRbm": 1,
                "\"fVVVWu`Wvgugp`": 1,
                "b
                "R\"\" g": 1,
                "gzggwfuwhfwvwug
                "\"\"\"\"\" \"gwwgv%vv": 1,
                "wwrwug
                "\"\"\"\"\"\"\"\"hu": 1,
                "wwwvww": 1,

                "R\"\"\"\"\"\"\"\"\"mb": 1,
                "V&pfVp": 1,
{": 1,
                "\"\"\"\"\"\"\"\"\"\"W": 1,
                "\"\"\"\"\"\"\"\"\"g": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"&x": 1,
wwe
                "xwxwxw": 1,
                "wxwxwxw": 1,
                "vfgfw": 1,
                "wgwgvwgvwgw": 1,
                "8 808@8L8T8X8h8x8": 1,
                "9$9(94989D9H9P9T9`9p9": 1,
                "; ;0;@;P;`;p;": 1,
                "L7P7\\7`7l7p7|7": 1,
                "8 8,80888<8D8H8P8T8\\8`8h8l8t8x8": 1,
                "9$9(94989@9D9L9P9\\9`9h9l9t9x9": 1,
                ":$:(:0:4:<:@:H:L:T:X:d:h:p:t:|:": 1,
                ";$;(;0;4;<;@;L;P;\\;`;h;l;t;x;": 1,
                "<(<4<8<@<D<L<P<X<\\<d<h<t<x<": 1,
                "= =$=,=0=<=@=L=P=X=\\=d=h=t=x=": 1,
                "0 0,000<0@0L0P0\\0`0l0p0|0": 1,
                "1$1(10141<1@1H1L1T1X1d1h1p1t1|1": 1,
                "2 2d2h2t2x2": 1,
                "3 3(3,34383@3D3L3P3X3\\3d3h3t3x3": 1,
                "4 4,40484<4T4X4`4d4l4p4|4": 1,
                "5\\5`5h5l5t5x5": 1,
                "6 6(6,64686@6D6L6P6X6\\6d6h6t6x6": 1,
                "7 7@7P7\\7`7h7l7t7x7": 1,
                "8 8$8,80888<8D8H8T8X8d8h8x8": 1,
                "9$9(94989@9D9L9P9\\9d9h9t9|9": 1,
                ":$:(:4:8:@:D:L:P:X:\\:d:h:p:t:|:": 1,
                "; ;$;,;0;8;<;D;H;P;T;\\;`;l;p;x;|;": 1,
                "<$<(<4<8<D<H<T<X<`<d<l<p<x<|<": 1,
                "= =$=,=0=8=<=D=H=P=T=\\=`=l=p=|=": 1,
                ">$>(>0>4><>@>H>L>T>X>l>p>|>": 1,
                "? ?,?0?8?<?D?H?P?T?\\?`?h?l?t?x?": 1,
                "0 0(0,04080D0H0T0X0`0d0l0p0x0|0": 1,
                "1 1,101<1@1L1P1\\1`1l1p1|1": 1,
                "2 2$20282<2H2T2X2d2l2p2|2": 1,
                "2,707<7@7L7P7\\7`7l7p7|7": 1,
                "4\\7`7h7l7t7x7": 1,
                "8 8(8,84888@8D8L8P8X8\\8d8h8p8t8|8": 1,
                "9$9(90949<9@9H9L9T9X9`9d9l9p9x9|9": 1,
                ":$:(:0:4:<:@:H:L:T:X:`:d:l:p:x:|:": 1,
                "; ;$;,;0;8;<;D;H;P;T;\\;`;h;l;t;x;": 1,
                "< <$<,<0<<<@<H<L<T<X<`<d<l<p<|<": 1,
                "=$=(=0=4=<=@=L=P=\\=`=l=p=|=": 1,
                ">$>(>4>8>D>H>T>X>d>h>p>t>|>": 1,
                "?$?(?4?8?D?H?T?X?d?h?t?x?": 1,
                "3 3,30383<3D3H3P3T3\\3`3l3p3x3|3": 1,
                "3l4p4": 1,
                "4D5H5T5X5`5d5l5p5x5|5": 1,
                "6 6(6,64686@6D6L6P6\\6`6l6p6": 1,
                "7 7,707<7@7H7L7T7X7d7h7p7t7": 1,
                "8$8(84888@8D8L8P8X8\\8d8h8p8t8|8": 1,
                "9 9$9,90989<9D9H9\\9`9l9p9|9": 1,
                ": :$:,:0:8:<:D:H:P:T:\\:`:h:l:t:x:": 1,
                "; ;,;0;8;<;D;H;P;T;\\;`;l;p;": 1,
                "D0H0T0X0d0h0t0x0": 1,
                "> >(>,>4>8>@>D>L>P>\\>`>h>l>t>x>": 1,
                "? ?(?,?4?8?D?H?T?X?`?d?l?p?|?": 1,
                "0 0,00080<0D0H0P0T0\\0`0l0p0x0|0": 1,
                "1 1(1,14181@1D1L1P1\\1`1": 1,
                "2 202<2@2H2L2X2d2h2t2x2": 1,
                "3 3,303<3@3P3\\3`3l3p3|3": 1,
                "4$4(44484@4D4L4P4\\4`4l4p4x4|4": 1,
                "5$5(5l5p5": 1,
                "7'787": 1,
                "798w8": 1,
                "0x0|0": 1,
                "1%1+121": 1,
                "505I5X5": 1,
                "6$6>6|6": 1,
                "8*:7:": 1,
                ";';D;J;T;": 1,
                "=U>c>h>": 1,
                "091A1F1O1c1": 1,
                "8!8'818": 1,
                ";P<^<": 1,
                "6\\7|8": 1,
                "8:9F9": 1,
                "9f:j:w:": 1,
                ";$;>;": 1,
                "<y<}<": 1,
                "=,=2=T=": 1,
                "=I>s>": 1,
                "1g1o1": 1,
                "4%595": 1,
                "5L6a6": 1,
                "7A8p8/9L9X9_9": 1,
                "9<:H:": 1,
                ":);e;": 1,
                "=w>}>": 1,
                ">0Q0w0}0": 1,
                "0\"141G1": 1,
                "4%4+4B4": 1,
                "5K5}5": 1,
                "6T7y7": 1,
                ";&;.;3;A;J;T;": 1,
                ";[<b<h<s<z<": 1,
                "=(=.=E=c=k=": 1,
                "0@0H0a0f0": 1,
                "1%1+1A1J1Q1Z1e1k1q1w1{1": 1,
                "3#373v3": 1,
                "4!4J4Q4Y4_4|4": 1,
                "=X>`>": 1,
                "5#5-5;5": 1,
                "5O6h6": 1,
                "1X2p2{2": 1,
                "4Q5k5": 1,
                "696[6n6": 1,
                "7)<7<J<": 1,
                "=-=@=": 1,
                "=+=G=c=y=": 1,
                "?#?F?}?": 1,
                "4+5;5": 1,
                "5h7q7": 1,
                ":2;E;": 1,
                "778G9y9": 1,
                ":h:u:;;": 1,
                "4G5N5V5]5": 1,
                "748o8": 1,
                ";\";7;": 1,
                "?g?q?": 1,
                "4-434A4N4W4w4": 1,
                "5@5G5": 2,
                "6o6w6}6": 1,
                "7'7,7D7M7e7s7": 1,
                "898[8u8": 1,
                ";*;3;B;K;X;b;g;m;s;": 1,
                "<5<J<U<a<l<y<": 1,
                "=3===R=^=h=|=": 1,
                ">0>6>?>I>P>h>y>": 1,
                "\"0\"1E1L1x1": 1,
                "1@2K3d3o3": 1,
                "3m4t4": 1,
                "586Y6": 1,
                "8I97:a:{:": 1,
                ":;;^;q;*<j<o<t<": 1,
                "<O=c=": 1,
                ">3>8>N>": 1,
                "?!?R?": 1,
                "0~1+3T3": 1,
                "4G4r4": 1,
                "5c5k5": 1,
                "5-686k6v6": 1,
                "8\"8v8": 1,
                "8e9s9v;Y<p<": 1,
                "<#=?=I=a=": 1,
                "R0c0}0": 1,
                "091?1": 1,
                "4A5a5}5": 1,
                "7-828U8m8r8": 1,
                "9u;p<z>": 1,
                ">9?^?": 1,
                "3Q4[4)5a5f5": 1,
                "1;2C2Q2": 1,
                ":&:x<": 1,
                "=/>o>": 2,
                "3*313L3Z3": 1,
                "5)50545<5": 1,
                "576E6": 1,
                "7*70767>7d7": 1,
                "8+8B8Q8f8": 1,
                "9/9=9": 1,
                "=A>[>": 1,
                "?#?/?4?@?": 1,
                "0-0H0Y0": 1,
                "0)1d1": 1,
                "2'2-242Y2`2h2n2r2": 1,
                "4,4H4}4": 1,
                "5;5y5j6": 1,
                "3D4o4": 1,
                "4-5S5": 1,
                "6 6F6": 1,
                "8(9.9<9N9R9V9Z9^9b9f9j9n9r9v9z9~9": 1,
                ":+:=:E:M:T:Z:a:g:k:q:w:": 1,
                ";A<O<": 1,
                ".0d0m0": 1,
                "1#161>1\\1b1|1": 1,
                "2 2E2Z2": 1,
                "3&3:3Z3r3": 1,
                "505\\5l5": 1,
                "5-6L6T6Z6q6w6": 1,
                "8 8-8>8M8": 1,
                "999_9g9n9": 1,
                ":!:[:u:": 1,
                ";g;|;": 1,
                "J0O0_0k0q0w0}0": 1,
                "1%2a2": 1,
                "4d5h5p5": 1,
                "5<6~6": 1,
                "6F7y7": 1,
                ":Y:l:}:": 1,
                ">:>?>s>": 1,
                "?&?0?": 1,
                "0W0`0h0{0": 1,
                "2L3Z3`3f3l3": 1,
                "5:5F5U5\\5d5l5": 1,
                "5-636F6N6Z6": 1,
                "7 7%737<7G7": 1,
                "7B8W8b8~8": 1,
                "9$9?9P9W9^9": 1,
                "9B:\\;b;z;": 1,
                "<$<*<0<6<\\<": 1,
                "?0U1l1v1": 1,
                "2\"292": 1,
                "444s4P647S7": 1,
                ";@<F=O=Y=": 1,
                "2K2]2v2": 1,
                "2!3;3U3i3|3": 1,
                "4)4/4N4Y4b4u4": 1,
                "5&535M5m5t5|5": 1,
                "5!6/6D6I6": 1,
                "7b7m7|7": 1,
                "8#999?9E9K9Q9W9]9c9i9o9u9": 1,
                ":):2:": 1,
                ":*;X;": 1,
                ">*>e>": 1,
                "859n9": 1,
                "<!={=": 1,
                ">=?S?": 1,
                "1'3k3z3t4": 1,
                "819D9N9": 1,
                "=%=/=C=I=O=": 1,
                "1\\1f1": 1,
                "1B2K2b2": 1,
                "3I3Q3Y3_3e3m3t3}3": 1,
                "8E8g8x8": 1,
                ":A:K:": 1,
                ";B;V;h;": 1,
                ";J=c=": 1,
                "1-2?2N2": 1,
                "213L3": 1,
                "5 5/5": 1,
                "9D9K9": 1,
                ":\":L:t:": 1,
                ";<;y;": 1,
                ";.<@<K<e<": 1,
                "Z0s0X1": 1,
                "252j2": 1,
                "3$5M6e6": 1,
                "9=9N9X9`9": 1,
                "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<": 1,
                "= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\\=`=d=h=l=p=t=x=|=": 1,
                "> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\\>`>d>h>l>p>t>x>|>": 2,
                "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?": 2,
                "2.2K2": 1,
                "575X5^5": 1,
                "5&6,686": 1,
                "6H7P7V7": 1,
                "<#<m=v=": 1,
                "=0>=>H>N>X>d>t>|>": 1,
                "?8?@?": 1,
                "0<1U1\\1o1": 1,
                "2/2@2j2": 1,
                "7@7K7X7b7q7w7": 1,
                "8(8D8b8l8u8": 1,
                "8v:~:": 1,
                "< <P<": 1,
                "=\"===": 1,
                "=!><>H>t>": 1,
                "U0[0a0j0u0{0": 1,
                "0 1o1u1": 1,
                "2\"2(242@2P2s2": 1,
                "484>4Y4e4": 1,
                "5A5G5f5t5": 1,
                "879R9^9": 1,
                "9S;Y;": 1,
                ";C<O<b<l<r<|<": 1,
                "=G=M=Z=b=h=": 1,
                ">=>n>": 1,
                "?q?w?}?": 1,
                "0D0J0P0V0": 1,
                "1Y1_1": 1,
                "232=2I2Q2Y2a2": 1,
                "3$3+3=3J3<4v495X5}5": 1,
                "5z6f8q8x8": 1,
                "939H9": 1,
                ":/:P:\\:": 1,
                ";\";4;E;K;_;r;x;": 1,
                "<0<?<V<q<": 1,
                "=*=0=A=R=b=": 1,
                "?0?C?L?k?": 1,
                "191L1y1": 1,
                "575F5x5": 1,
                "60696D6": 1,
                "6=7r7": 1,
                "7T8\\8": 1,
                "8(9w9}9": 1,
                "<&<}<": 1,
                "=*=K=W=y=": 1,
                ">6>Q>r>": 1,
                "1/151;1H1T1\\1h1p1x1": 1,
                "1/2R2": 1,
                "2)3O3c3": 1,
                "4*424>4Q4": 1,
                "5/585": 1,
                "777O7v7": 1,
                "9>9J9s9": 1,
                ";%;.;": 1,
                "=$=+=D=f=k=": 1,
                ">L?Z?": 1,
                "4N5U5p5": 1,
                "6#7;7S7_7": 1,
                "90:I:p:": 1,
                ";>;a;": 1,
                "<(<5<?<H<x<": 1,
                "=\"=0=7=A=I=q=": 1,
                "?#?>?U?": 1,
                "%0B0U0o0~0": 1,
                "1@1I1r1": 1,
                "232R2Z2`2h2t2": 1,
                "3B3X3v3}3": 1,
                "6#626": 1,
                "6%7_7-8p8": 1,
                ":=:T:f:": 1,
                "=l=y=": 1,
                ">#?1?`?": 1,
                "1i1o2": 1,
                "4,5O5Z5a5l5": 1,
                "5n6t6": 1,
                "6 7/7@7D7Y7s7z7": 1,
                "7(81878D8J8S8m8}8": 1,
                "8%9j9": 1,
                ":-:3:P:z:": 1,
                ";\";/;9;@;I;U;Z;a;l;s;|;": 1,
                "<'<D<J<u<": 1,
                "=e=w=": 1,
                "=?>W>x>": 1,
                ">\\?w?": 1,
                "0-0q0": 1,
                "1?1E1Q1Y1_1g1": 1,
                "1$2N2b2": 1,
                "4@5F5a5w5": 1,
                "6&6B6": 1,
                "7G7R7": 1,
                "72888@8S8h8": 1,
                "9W9t9": 1,
                ":F:M:T:Y:s:": 1,
                ";+;3;f;j;": 1,
                "< <*<2<@<P<Y<`<k<v<}<": 1,
                "> >n>": 1,
                "0;1k1~1": 1,
                "162^2+3": 1,
                "585Y5": 1,
                "5H6Q6[6`6g6l6s6": 1,
                "8-9U9": 1,
                ":X;z;": 1,
                "?3?:?P?W?i?": 1,
                "0K0Y0p0}0": 1,
                "2\"3@3T3`3p3": 1,
                "5 606E6q6}6": 1,
                "7*7P7": 1,
                "9(9{9": 1,
                "9B:U:": 1,
                ";(;1;<;S;": 1,
                ";)<M<": 1,
                "?H?T?i?p?": 1,
                "90[0z0": 1,
                "0%1+131;1S1v1|1": 1,
                "262a2": 1,
                "3#393": 1,
                "43494?4s4y4": 1,
                "6'7-7": 1,
                "8Y8b8": 1,
                "8Q9Z9": 1,
                ";&;W;w;": 1,
                ";)<\\<": 1,
                "<F=L=k=p=": 1,
                ">!>+>": 1,
                "?#?)?/?M?": 1,
                "1&1@1z1": 1,
                "2#2+212C2L2V2n2u2": 1,
                "2%363k3": 1,
                "525`5p5": 1,
                "6'6[6": 1,
                "6\"7R7": 1,
                "8R8X8d8l8y8": 1,
                ";#<j=": 1,
                ">\">->": 1,
                "4+4l4": 1,
                "5@5_5h5}5": 1,
                "626@6o6{6": 1,
                "70787H7g7": 1,
                "818I8a8o8w8": 1,
                "9L92:": 1,
                ";T;Z;y;": 1,
                ";3<H<O<U<j<~<": 1,
                "<M=S=h=": 1,
                "=3>V>K?b?|?": 1,
                "0^0y0": 1,
                "575p5": 1,
                "9)9C9V9^9i9x9": 1,
                ";%;<;G;s;|;": 1,
                "=e>t>": 1,
                "/0q0~0": 1,
                "1V1_1r1z1": 1,
                "1H2]2e2m2u2": 1,
                "565X5": 1,
                "7-7:7C7": 1,
                "9,929": 1,
                ":/:7:A:F:L:": 1,
                ";:<O<l<": 1,
                "<\"=,=1=>=x=": 1,
                "=@>S>x>": 1,
                "?B?K?\\?g?": 1,
                "+0A0G0n0": 1,
                "021X1": 1,
                "313L3X3k3w3": 1,
                "3%4M4S4`4h4m4": 1,
                "5)6V6o6{6": 1,
                "7#7<7k7": 1,
                ":6:r:": 1,
                ":#;7;};": 1,
                "<+<<<l<": 1,
                ">Y>w>": 1,
                "?,?j?}?": 1,
                "0\"0;0A0": 1,
                "0A1[1c1": 1,
                "2\"2-23292I2S2d2p2": 1,
                "2E4h4": 1,
                "505|5": 1,
                "606D6": 1,
                "6 7/7<7H7Q7W7^7d7l7": 1,
                "848<8B8J8|8": 1,
                ";0<v<": 1,
                "=\"=+=T=l=r=x=": 1,
                "1U2a2": 1,
                "2 3Q3_3w3": 1,
                "314L4Y4": 1,
                "545H5?6X6d6": 1,
                "7!7'7F7i7": 1,
                "7B8i8": 1,
                "8&:Z:u:": 1,
                ";?;X;d;t;": 1,
                "<7<d<}<": 1,
                "=&=,=4=@=Y=a=g=t=": 1,
                "=&>e>m>*?H?": 1,
                "2(20262@2K2Q2Z2_2": 1,
                "4 484>4M4_4r4": 1,
                "51575>5E5N5Z5a5j5u5z5": 1,
                "6(6:6]6": 1,
                "767L7l7": 1,
                "8 8%8[8": 1,
                "9(909E9N9Y9d9m9~9": 1,
                ":+:I:^:": 1,
                ";D;X;z;": 1,
                "<!<*<b=": 1,
                "? ?H?P?V?^?": 1,
                "090w0": 1,
                "1%2K2": 1,
                "203I3": 1,
                "4!4d4": 1,
                "5%5T5o5": 1,
                "5F6M6Y6g6|6": 1,
                "8Q9p9": 1,
                ":\":6:n:w:": 1,
                ";$;8;c;": 1,
                "<-<5<H<g<": 1,
                "<;=N=": 1,
                "> >6>E>": 1,
                ">2?h?o?": 1,
                "0r0}0": 1,
                "2&262\\2": 1,
                "4&4V4": 1,
                "5!5/555N5Z5": 1,
                "5-686B6M6X6^6l6": 1,
                "6S7Y7b7k7": 1,
                "818O8": 1,
                "8!9/9M9": 1,
                ":/:y:": 1,
                ";J;`;x;~;": 1,
                ";7<=<F<L<f<[=": 1,
                ">3>;>": 1,
                ">I?w?": 1,
                "0!0A0": 1,
                "243g3": 1,
                "4!5>5F5T5_5o5v5": 1,
                "6V6^6z6": 1,
                "6W7f7": 1,
                "8:8N8Y8": 1,
                "9$909@9L9f9p9": 1,
                ":-:Y:e:k:q:": 1,
                ";/;Y;w;": 1,
                ";3<w<": 1,
                "<2=8===": 1,
                ">L>j>": 1,
                "?8?O?\\?p?}?": 1,
                "040B0I0[0j0": 1,
                "001H1": 1,
                "1>2f2r2y2": 1,
                "8!8)868<8K8k8t8}8": 1,
                "9#9)949W9d9j9p9": 1,
                ":4:<:": 1,
                "<B<X<": 1,
                "<-=5=": 1,
                ">&>5>=>": 1,
                "? ?W?": 1,
                "0#0o0x0": 1,
                "141;1M1Z1}1": 1,
                "2*3?3}3": 1,
                "4/484H4W4]4d4": 1,
                "6]6}6": 1,
                "9 9&9a9": 1,
                "9':M:": 1,
                ";I;Z;f;U<[<": 1,
                "/0A0\\0~0": 1,
                "3+4/4_4": 1,
                "4S5[5g5k5": 1,
                "6b6j6": 1,
                "7\"7&7J7": 1,
                "8C8]8e8w8": 1,
                "9&929:9": 1,
                "<Q<Y<b<j<": 1,
                ">A?J?": 1,
                "0.050": 1,
                "1$1>1G1X1c1": 1,
                "3&3A3M3\\3": 1,
                ":/;v;": 1,
                "><?{?": 1,
                "O0m0v0": 1,
                "3$3G3M3S3^3o3": 1,
                "3&4.4M4V4f4s4~4": 1,
                "5\"5-5?5G5L5R5s5{566S6f6m6y6": 1,
                "7#7O7]7i7t7": 1,
                "8)8G8M8Z8`8i8|8": 1,
                "8 9>9D9Y9_9": 1,
                ":%:7:o:|:": 1,
                ":5;=;Q;W;^;d;o;": 1,
                "<!<(<3<=<H<Y<a<n<t<": 1,
                "=>=^=q={=": 1,
                ">'>Q>]>r>": 1,
                "?#?(?.?I?O?Z?j?t?}?": 1,
                "0\"0-0=0C0b0o0z0": 1,
                "161M1W1e1v1": 1,
                "2 2&222M2^2d2j2": 1,
                "2#3C3K3S3": 1,
                "3!4'4": 1,
                "5@5U5m5": 1,
                "636C7i7": 1,
                "9!:):I:O:}:": 1,
                ";I;T;_;e;": 1,
                ">7>C>": 1,
                "7(707C7I7": 1,
                "8,8;8": 1,
                ":B:]:": 1,
                ">D?J?": 1,
                "1%1+161B1L1V1": 1,
                "1$2L2[2a2i2o2z2": 1,
                "3$3.343:3I3e3w3": 1,
                "4!4B4J4k4t4": 1,
                "555?5L5R5]5f5l5": 1,
                "666<6L6b6": 1,
                "7C7W7u7": 1,
                "9!9<9C9I9U9": 1,
                "=G=p=": 1,
                "=D?N?": 1,
                "2c3k3": 1,
                "4$424": 1,
                "4P5V5[5~5": 1,
                "777j7": 1,
                "9(9>9X9": 1,
                ":I;p;": 1,
                "<S<|<": 1,
                "=I=v=": 1,
                ">1>9>@>Q>": 1,
                ">T?\\?q?": 1,
                "0#0D0e0x0": 1,
                "1$191e1j1": 1,
                "273D3J3": 1,
                "3-474=4t4": 1,
                "5(565=5C5": 1,
                "6&6b6": 1,
                "7*7H7N7": 1,
                "8.949": 1,
                ":L;{;": 1,
                "<8=D=J=V=": 1,
                ">5>C>o>{>": 1,
                ">,?2?\\?d?": 1,
                "0=0C0N0V0": 1,
                "0X1a1p1{1\\2e2k2": 1,
                "2m4y4": 1,
                "585@5V5k5p5u5z5": 1,
                "5 626R6^6h6": 1,
                "8U8]8": 1,
                ";';K;c;": 1,
                "=,=@=": 1,
                ">1?B?": 1,
                "0<0Q0Z0d0q0": 1,
                "061?1R1w1": 1,
                "5@6s7": 1,
                "?5?p?": 1,
                "=0E0N0X0n0w0}0": 1,
                "1(1.1H1Y1p1": 1,
                "1X2r2": 1,
                "343:3L3T3": 1,
                "3G4<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5": 1,
                "7$717@7G7V7n7w7": 1,
                "8%838]8b8": 1,
                ";&;M;": 1,
                ";-<`<": 1,
                "=A=H=": 1,
                "H0V0}0": 1,
                "1g2q2": 1,
                "6R9Z9`9": 1,
                "5d5o5": 1,
                "6*7M7[7|7": 1,
                "9W9i9": 1,
                "9\":Y:": 1,
                ";*;0;5;h;~;": 1,
                "<&=E=": 1,
                "=!>'>6>R>": 1,
                "2'3.333:3A3P3c3y3": 1,
                "6$656V7';": 1,
                ";R<b>i>": 1,
                ">N?l?": 1,
                "%0H0k0": 1,
                "3*4c4": 1,
                "405]5": 1,
                "9$9+9": 1,
                ">&>I>V>": 1,
                "1y2.4": 1,
                "9'9?9R9j9z9": 1,
                ";!;&<3<<=G=V=S>": 1,
                "4,4A4`4g4": 1,
                "5 6&6,666M6": 1,
                "8*8o8u8": 1,
                "9+9W9": 1,
                ":4;J;": 1,
                ";.<=<S<i<": 1,
                ">:?M?j?": 1,
                "2@2I2N2S2{2": 1,
                "3'3}3": 1,
                "4,4?4h4": 1,
                "525}5": 1,
                "8(9O9n9v9|9": 1,
                ": :%:C:[:": 1,
                ";L;i;": 1,
                ";*<2<8<><j<q<}<": 1,
                "='=1=<=O=Y=i=v=": 1,
                ">->C>O>T>e>u>": 1,
                "?(?3?=?M?Z?": 1,
                "0N0Z0_0m0w0": 1,
                "1%1/191I1a1": 1,
                "2?2K2P2^2h2s2": 1,
                "3\"323?3_4t4": 1,
                "505=5E5Y5": 1,
                "8$808E8O8Y8c8p8": 1,
                "9 9-9": 1,
                ";/;9;C;M;g;": 1,
                "<6<e<": 1,
                "?0?o?": 1,
                "4=4u4": 1,
                "4-5i5": 1,
                ":!;/;6;K;Z;": 1,
                ";&<+<": 1,
                "3\"3y4": 1,
                ";<;K;X;k;q;": 1,
                "<'<L<Z<d<s<{<": 1,
                "<%=0=G=S=Y=f=t={=": 1,
                "=4><>B>H>g>": 1,
                "?%?y?": 1,
                "0#0,030=0F0X0c0m0": 1,
                "1;1[1|1": 1,
                "2<2N2": 1,
                "3)32373?3": 1,
                "374D4a4": 1,
                "5#6C6": 1,
                "6G7W7": 1,
                "778b8": 1,
                ";*;7;E;": 1,
                ";m=s=y=": 1,
                ">/>6>W>n>s>z>": 1,
                "030G0Q0\\0j0": 1,
                "4<5Y5": 1,
                "8f8n8v8": 1,
                "809h9z9": 1,
                ":0:?:a:": 1,
                ":A;i;": 1,
                "<&<V=": 1,
                "=P>w>": 1,
                "?7?^?k?": 1,
                "0:0V0q0": 1,
                "0M1v1": 1,
                "283^5l5~5": 1,
                "6,6>6I6v6": 1,
                "7B7M7_7|7": 1,
                "7G8a8j8": 1,
                "4>5V5": 1,
                "646M6g6": 1,
                "90979?9D9H9L9u9": 1,
                "9\":(:,:0:4:": 1,
                ";M;T;X;\\;`;d;h;l;p;": 1,
                ";X<p<w<": 1,
                "=b=h=l=p=t=": 1,
                ">1>[>": 1,
                "2R:j:S>": 1,
                "0\\1f3": 1,
                "7,7=7E7U7f7": 1,
                "9)9D94;": 1,
                ">3>J>": 1,
                "C2G2K2O2S2W2[2_2": 1,
                "8m9S<": 1,
                "5$5]5": 1,
                "5W6c6": 1,
                "7B8N8Z8f8r8~8": 1,
                "9&929>9J9V9b9n9z9": 1,
                "?$?0?D?": 1,
                "#1+1M1": 1,
                "929T9|9": 1,
                ":$:7:D:J:": 1,
                ";(;r;": 1,
                "<8<w<": 1,
                "<9=Z=^=d=h=p=t=z=~=": 1,
                "=4>F>": 1,
                "80=0F0i0": 1,
                "1 1M1u1": 1,
                "2_2l2": 1,
                "3b3h3q3w3": 1,
                "5(575S5i5": 1,
                "6>6Y6": 1,
                "7d7r7": 1,
                "8,868": 1,
                "8)979L9": 1,
                "9):/:=:R:": 1,
                "*3.3R3": 1,
                "4L7V7p;": 1,
                ";K<g<": 1,
                "<<>T>": 1,
                "50=0H0": 1,
                "0E2Y2": 1,
                "3*4=4b4": 1,
                "2%3C3L3b3": 1,
                "5\"565L5Z5d5|5": 1,
                "5:6E6^6e6p6": 1,
                ">S?X?q?": 1,
                "0F0L0U0]0c0r0": 1,
                "0\\1m1y1": 1,
                "3,3W3k3": 1,
                "4'545Y5o5": 1,
                "5C7U7\\7": 1,
                ":5;N;": 1,
                "<@=F=d=l=": 1,
                "8B<L<j<": 1,
                "=7===X=": 1,
                "?#?2?H?N?Y?_?e?l?": 1,
                "1&1M1S1c1l1r1": 1,
                "3$3A3G3M3": 1,
                "4A4L4T4f4": 1,
                "5/5C5I5{5": 1,
                "6?6H6N6": 1,
                "6p7z7": 1,
                "8W8_8q8": 1,
                ":8:p:": 1,
                ";#;n;": 1,
                "=+=i=": 1,
                "=.>8>\\>z>": 1,
                "1&121@1c1": 1,
                "2.2;2M2S2\\2`2e2r2{2": 1,
                "344C4R4r4": 1,
                "5?5G5X5c5u5": 1,
                "5H7N7T7\\7h7n7": 1,
                "8D9j9r9": 1,
                "=>>M>X>": 1,
                "?%?.?P?_?p?{?": 1,
                "0!0'0p0v0": 1,
                "0O1s1": 1,
                "3E3M3^3i3": 1,
                "3$4*414<4d4j4x4": 1,
                "4 6+666A6n6": 1,
                "7$7/7a7l7w7": 1,
                "7(80848<8@8D8L8P8T8X8\\8`8d8h8l8p8x8|8": 1,
                ":h:l:p:t:x:|:": 1,
                ";(;0;8;@;H;P;X;`;h;p;x;": 1,
                "< <(<0<8<@<H<P<`<h<p<x<": 1,
                "= =(=0=8=@=H=P=X=`=x=|=": 1,
                "0\\0`0P1T1X1\\1`1d1": 1,
                "6T8X8\\8`8d8h8l8p8t8x8|8": 1,
                "90:L:h:": 1,
                "?$?,?4?<?D?L?T?\\?d?l?t?|?": 2,
                ",040<0D0L0T0\\0d0l0t0|0": 1,
                "1$1,141<1D1L1T1\\1d1l1t1|1": 3,
                "2$2,242<2D2L2T2\\2d2l2t2|2": 2,
                "3$3,343<3D3L3T3\\3d3l3t3|3": 1,
                "4$4,444<4D4": 1,
                "@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8": 1,
                "9(989H9X9x9": 1,
                "9H?P?X?`?h?p?x?": 1,
                "0$0,040<0D0L0T0\\0d0l0t0|0": 2,
                "1X8\\8`8d8h8l8p8t8x8|8": 1,
                "1 1$1(1,10141": 1,
                "2x2~2": 1,
                "4\"6&6": 1,
                "3Z3`3d3l3": 1,
                "7 8$8q8": 1,
                "9D:H:": 1,
                "<>=H=": 1,
                ">`>~>": 1,
                ">.?`?": 1,
                "8&9,9": 1,
                "1g2s2y2:3T4": 1,
                ">e>q>x>": 1,
                "1+151@1K1]1t1": 1,
                "2;2f2": 1,
                "20383": 1,
                "659=9X9": 1,
                "9/;7;U;": 1,
                "5(6g6s8;:": 1,
                ":*=u>": 1,
                "0d1,3m3": 1,
                ">$?m?~?": 1,
                "8?9C9G9K9O9S9W9[9_9c9g9k9o9s9w9{9": 1,
                "9F;{<": 1,
                "2-353e3": 1,
                "9!969B9N9Z9": 1,
                ":%:,:w:": 1,
                "<\"=F=": 1,
                "0%001": 1,
                "4,4T4k4": 1,
                "7(8T8q8": 1,
                ":(;5;": 1,
                "=*=I=": 1,
                "1(222`2": 1,
                "6^7n7z7": 1,
                "778t9": 1,
                "9':_:": 1,
                ":H;b;": 1,
                "1$2H3M3": 1,
                "515Y5": 1,
                "<5=]=y=": 1,
                ">)>X>": 1,
                "1\"1G1w1": 1,
                "535>5[5": 1,
                "404p4": 1,
                "9E9~9L<z<": 1,
                "2$3a3r3": 1,
                "7a8(:M:": 1,
                ":0;\\;": 1,
                "4[4}4": 1,
                "8d8p8": 1,
                "8`9;=q=": 1,
                "3(4[8": 1,
                ":K;]>": 1,
                "536Y6g677": 1,
                "<I>1?M?T?": 1,
                "0S1v1": 1,
                "292.4:4H4": 1,
                ":\";);.;5;9;?;E;x;": 1,
                "<7<D<T<": 1,
                "=>>H>@?": 1,
                "627%8Z<v<": 1,
                "=(=I=Z=m=": 1,
                "=I>N>|>": 1,
                ">A?[?{?": 1,
                "\"0L0V0y0": 1,
                "2A2L2": 1,
                "5A6b6": 1,
                "8)9b9": 1,
                "<\"<A<": 1,
                "=5=I=U=Z=z=x>": 1,
                "2_2f2": 1,
                "4J5q5": 1,
                "5@6K6": 1,
                "7-;<;": 1,
                "1H1h1": 1,
                "=)=W=n=k>": 1,
                "3#3m4": 1,
                ";d<v<": 1,
                "9D:h:": 1,
                "1$2N2": 1,
                "364x4": 1,
                "6,7H8": 1,
                ":e<n<u<|<": 1,
                "1o254": 1,
                ">g>!?": 1,
                "9O:g:": 1,
                ">.>F>M>": 1,
                ">#?~?": 1,
                "2(3N3'4": 1,
                "5E8{8": 1,
                ":$:):.:3:8:=:B:J:P:U:]:b:g:l:q:v:|:": 1,
                "?&?,?2?7?E?{?": 1,
                "!0B0_0": 1,
                "1(1.141R1X1": 1,
                "2 2D2": 1,
                "4O4T4p4": 1,
                "5%5`5": 1,
                "7#7)7.737;7E7": 1,
                "8!8&8,898?8D8I8Q8[8u8": 1,
                "< =S=": 1,
                "4U5<6o6": 1,
                ";%<g<w<": 1,
                "<M=X=a=n=": 1,
                "=1=9=E=j=p=": 1,
                "Y0/1l1": 1,
                "3;3h3M4u4": 1,
                "6#7V7k7": 1,
                "9\":`:": 1,
                "<#=a=": 1,
                "2;3/4t4": 1,
                "7G7[7": 1,
                "8\"9N9": 1,
                ":*:E:Q:l:": 1,
                ":0;^;": 1,
                "<f<i=": 1,
                ">B?u?": 1,
                "2.2T2e3": 1,
                "=E>\\>": 1,
                ">o?w?": 1,
                "1)202": 1,
                "8E8l8": 1,
                "84=M=k=": 1,
                "1f1z1": 1,
                "2H4:5I5": 1,
                "6)6<6O6b6\"7": 1,
                "0>0d0": 1,
                "111M1X1a1": 1,
                "4(5v5": 1,
                "596@6|7+:/:3:7:;:?:C:G:K:O:S:": 1,
                "<K<l<p<t<x<t=": 1,
                "0c0I1": 1,
                "4T5^5": 1,
                "6#7v7{7": 1,
                "8I9M<w<": 1,
                "0D6M6Y6": 1,
                ":?:D:": 1,
                ":[=g=l=": 1,
                ">+>O>V>x>|>": 1,
                "111=1G1N1t1": 1,
                "3I4e4": 1,
                "4H9V9z9o<": 1,
                "<W<\"?4?": 1,
                ":+;h=": 1,
                "2P2c2": 1,
                "2F3Q3b3": 1,
                "576B6M6b6u6": 1,
                "6&7E7Q7Y7a7j7s7{7": 1,
                "7 8)818>8G8P8X8e8n8w8": 1,
                "9%9?9_9p9": 1,
                ":7:Q:q:V;": 1,
                ">.>5>": 1,
                "1Q6c6": 1,
                "8(8C8": 1,
                "<'<.<;<A<L<V<[<a<x<": 1,
                "<,=5=:=L=T=[=f=v=": 1,
                ">(>C>K>a>": 1,
                "2)3a3": 1,
                "3$425=5D5m5": 1,
                "6I7p7": 1,
                ";i<%>": 1,
                "3$353z3": 1,
                "5:6h6": 1,
                "2@3T3": 1,
                "485F5m5": 1,
                "<\"<:<J<]<m<": 1,
                "<\">n?v?{?": 1,
                "0*000E0d0": 1,
                "1/171n1": 1,
                "272.333;3A3E3K3O3U3Y3_3c3": 1,
                ">+>3>:>": 1,
                ">.?:?": 1,
                "0A2\\2": 1,
                "3.373D3X3`3n3{3": 1,
                "3#4a4": 1,
                "8.869q9": 1,
                "<)===": 1,
                "6%697": 1,
                "858x8": 1,
                "8#8)8/858=8C8I8O8d8o8": 1,
                "<y<m=t=U>": 1,
                "0H3\\3p3": 1,
                ";L;l;;<i<e=": 1,
                "3M4V4^4": 1,
                "4`5f5l5": 1,
                "5P6V6\\6": 1,
                "6>7C7I7": 1,
                ":J;P;\\;": 1,
                ">3>\\>": 1,
                "?+?1?": 1,
                "0\"1[1q1": 1,
                "1P2t2h3": 1,
                "6s6x6~6": 1,
                "6.848:8^8c8i8N9w9": 1,
                "9Q:W:b:": 1,
                "=%=+=1=": 1,
                "=8?@?K?]?e?": 1,
                "181>1s1": 1,
                "1<2C2@3": 1,
                "4*5q5y5": 1,
                "5R6Z6g6o6": 1,
                "657V7y7": 1,
                "9P9V9^9Z:_:e:": 1,
                ";-<5<;<~=": 1,
                "=8>@>": 1,
                "0V0^0i0": 1,
                "2:2H2Z2": 1,
                "3\"4l4t4t5|5": 1,
                "969A9^9h9s9": 1,
                "9/:8:F:q;w;};%</<5<H<N<\\<b<": 1,
                "<Q=Z=n=w=": 1,
                ">(>{>": 1,
                ">1?c?y?": 1,
                "'0J0`0": 1,
                "181W1m1": 1,
                "2 2(20282@2H2P2X2`2h2p2c3": 1,
                "4\"4(4\\4|4": 1,
                "5%6k6": 1,
                "7)707G7": 1,
                "7;8F8K8W8a8f8z8": 1,
                "8 9D9_9~9": 1,
                "; ;?;Q;b;k;t;": 1,
                ";A<J<": 1,
                "=(=<=j=s=|=": 1,
                ">S>i>r>x>": 1,
                "1(1@1G1f1l1t1|1": 1,
                "222O2h2": 1,
                "476@6_6p6x6": 1,
                "6@7`7": 1,
                "7:8Z8%9+939;9U9b9~9e:": 1,
                "=$=Z=b=g=v=": 1,
                "5(6S6]7e8": 1,
                "6%7J7": 1,
                "8F:_<": 1,
                "485F5": 1,
                "6]7w7": 1,
                ":,:c:h:n:": 1,
                ";B;n;": 1,
                ">-><>N>": 1,
                "2$343b30464<4C4Y4_4e4": 1,
                "5)5~5": 1,
                "7*757=7E7d7": 1,
                ";Y;y;k<t<": 1,
                ">'>A>M>S>": 1,
                "%2*2[3": 1,
                "465A5": 1,
                "738i8o8": 1,
                ";L;u;{;": 1,
                "<0<r<": 1,
                "<2=o=z=": 1,
                ">,>3>": 1,
                "?@?s?": 1,
                "2$2X2": 1,
                "3=3]3": 1,
                "3(464": 1,
                "6 6N6Y6^6": 1,
                "9%9K9\\9e9": 1,
                ";p<y<": 1,
                "3c6w6": 1,
                "7#7:7R7j7}7": 1,
                "7[8`8M9Y9u9K:": 1,
                "=#>6>": 1,
                ">-?G?": 1,
                "1.1?1N1n1v1": 1,
                "2`3q3v3|3": 1,
                "6_6r6": 1,
                "898l8v8{8@9F9Q9\\9|9": 1,
                "</=A=p=": 1,
                ">(>l>": 1,
                "495B5": 1,
                "5C8O8a8": 1,
                "/060C0W0p0": 1,
                "1F1h1o1": 1,
                "434e4": 1,
                "5*5L5": 1,
                "*0D0Z0f0|0": 1,
                "1%2B2": 1,
                "4S4f4": 1,
                "7[8z8": 1,
                ";=<I<": 1,
                "=*=/=;={>": 1,
                "1)1P1": 1,
                "7K7c7": 1,
                "8U8m8": 1,
                ":7:m:s:~:": 1,
                ":N;k;p;": 1,
                "<%<+<1<:<S<": 1,
                "=!=)=<=D=W=n=": 1,
                ">!>7>@>I>s>}>": 1,
                "?G?x?": 1,
                "070?0Z0P2": 1,
                "3k324f4": 1,
                "5(6/6?6K6d6": 1,
                "0$0,0": 1,
                "4!50565": 1,
                "5;6\\6b6": 1,
                "8R9W9": 1,
                "='=n=": 1,
                "0z0.161A1": 1,
                "1;3C3P3x3": 1,
                "5A5g5": 1,
                "748N9W9": 1,
                ";(;U<s=&?2?8?": 1,
                ":P:b:t:": 1,
                ":f;y;": 1,
                "<y<Y?": 1,
                "6&7+8": 1,
                "=[>q>y>": 1,
                "0f0k0Q1}1": 1,
                "1,292M2Y2": 1,
                "3E3R3f3v3": 1,
                "484E4X4": 1,
                "4`5r5z5": 1,
                "8'828I8": 1,
                "= >:>m?": 1,
                "1A3k3": 1,
                "5.636C6": 1,
                "8&8t8\"949:9,:": 1,
                "='>t>": 1,
                "? ?)?Q?^?": 1,
                "2\"5(7m7": 1,
                "9':W:": 1,
                ":8;k;": 1,
                "2+222F2P2b2": 1,
                "383z3": 1,
                "304v4": 1,
                "9W;J<": 1,
                "1=2P2": 1,
                "7Q8}8": 1,
                "<C=h=": 1,
                "6M6V6h6": 1,
                "767y7": 1,
                "9\"919b9": 1,
                "9%:2:": 1,
                "5x6J7^7": 1,
                "3)4_4": 1,
                "5)5;5A5X5n5^6": 1,
                "4,5B5M5": 1,
                "5W6r6": 1,
                "6$7/7:7E7P7Z7x7}7": 1,
                "7'8/8": 1,
                "8P8[8q8": 1,
                "?#?/?9?": 1,
                "1&3~3": 1,
                "4-4Z4": 1,
                "4*5S5Y5": 1,
                "5<6f6": 1,
                "31696M6e6{6": 1,
                "6&777T7h7": 1,
                "859F9s9~9": 1,
                ";&;M;U;k;};": 1,
                ">&>0>h>": 1,
                "?>?q?": 1,
                "2(2V2": 1,
                "6D6n6": 1,
                ":!:':E:T:f:": 1,
                "=F=}>": 1,
                "242m2": 1,
                "2*3m3": 1,
                "4&4-4X4n4": 1,
                "5U6_6": 1,
                "7 7-7T7Y7a7g7": 1,
                "8F9Z9": 1,
                ";U;j<": 1,
                "<1=@=I=R=[=n=w=": 1,
                ">'>.>C>|>": 1,
                ",0c0i0n0": 1,
                "6>7k7": 1,
                "8,8w8": 1,
                "9*:1:;:n:t:": 1,
                ":5;K;": 1,
                "1\"1>1": 1,
                "2L3V3": 1,
                "3,4_4x4": 1,
                "6#6E6M6U6]6i6": 1,
                "7)70777l7t7": 1,
                "8E8^8f8q8T9_9j9p9~9": 1,
                ":W:i:x:2;6;:;>;B;F;J;N;R;V;Z;^;b;f;j;n;r;v;z;~;": 1,
                "<@<O<Y<d<s<y<": 1,
                "=%=2=?=g=": 1,
                "=(><>B>I>P>\\>a>k>": 1,
                "?C?K?S?^?d?i?o?v?": 1,
                "0h0u0": 1,
                "1!1-1;1": 1,
                "1,2<2": 1,
                "4,4?4": 1,
                "5F5J5V5i5": 1,
                "506<6F6": 1,
                "7c7l7v7": 1,
                "7K8P8": 1,
                "8l9q9": 1,
                ":&:/:L:V:a:n:": 1,
                ";$;0;9;a;n;{;": 1,
                "< <+<0<6<<<A<G<S<d<j<p<w<|<": 1,
                "=,=2===T=]=o=x=": 1,
                ">'>6>O>U>a>": 1,
                "?%?0?;?D?P?X?j?": 1,
                "040:0F0L0P0j0t0z0": 1,
                "4(5W5v5": 1,
                "6J6P6": 1,
                "859M9#:": 1,
                "=y=)>": 1,
                "2l3r3": 2,
                "6#6,656>6G6P6Y6b6k6t6}6": 1,
                "6#7J7`7": 1,
                "7?8M8U8c8u8": 1,
                "8O9s9s:": 1,
                "<U=p=1>V?": 1,
                "3&454": 1,
                ";O;{;": 1,
                "<\"<0<": 1,
                "J0x0~0": 1,
                "3p3%4": 1,
                "6,727N7": 1,
                "748=9": 1,
                ";?<G<": 1,
                "< =(=": 1,
                ">_>j>": 1,
                ">1?M?": 1,
                "J0t0/1A1": 1,
                "2M2X2": 1,
                "3T3u3": 1,
                "5U6s6|6B7U7^7": 1,
                ";&;.;I;": 1,
                "\"03090C0H0h0r0": 1,
                "2/2O2": 1,
                "2?3m3": 1,
                "4 5*5~5": 1,
                "5+6Y6;7": 1,
                ">'?a?": 1,
                "3\\3e3": 1,
                "?7?\\?d?l?": 1,
                "030C0I0T0_0i0o0": 1,
                "1(171]1": 1,
                "2 2:2F2K2]2v2": 1,
                "404n4": 1,
                "7`8w9$:=;": 1,
                "0_2#3L3V3": 1,
                "5`6u6": 1,
                "81:_;": 1,
                ";%<Q<m<": 1,
                "3G4X4`4e4k4z4": 1,
                "5G5M5": 1,
                ":6:n:/<N<V<y<)=": 1,
                ">9>A>n>": 1,
                "?#?r?": 1,
                "0(1C1": 1,
                "303a3": 1,
                ";Z<d<": 1,
                "#0)0Q1:2@2": 1,
                "6M6S6^6i6": 1,
                "677}7": 1,
                ":#:):1:7:=:B:O:_:i:": 1,
                "=6=W=<>": 1,
                "?'?2?V?a?l?": 1,
                ";$<L<W<": 1,
                "2%3)3-3135393=3A3E3I3M3Q3U3Y3]3a3e3i3m3q3u3y3}3": 1,
                "5R5V5Z5^5b5f5j5n5r5v5z5~5": 1,
                "6J6p6": 1,
                "8.8;8q8": 1,
                ":-;X;": 1,
                "<,<k<": 1,
                "=?=j=": 1,
                ">>>}>": 1,
                "?'?9?E?o?": 1,
                "0 060_0|0J1": 1,
                "2,292o2": 1,
                "4+5V5": 1,
                "5*6i6": 1,
                "6=7h7": 1,
                "8<8{8": 1,
                "9%979C9m9": 1,
                ":!:%:8:X:t:": 1,
                "<J=d>h>l>p>t>x>|>": 1,
                "5{5D6": 1,
                "7:8P8Z8b8j8r8": 1,
                "9.9>9": 1,
                ";U;T>": 1,
                "0G1{3": 1,
                "859>;": 1,
                "4e6s7": 1,
                "=,=9=F=": 1,
                "3-4<4Z4": 1,
                "6P6d7r7x:": 1,
                "=&>o?": 1,
                "656x6": 1,
                "718`8": 1,
                "9,:r:": 1,
                ":F;g;": 1,
                "=B=k=|=": 1,
                "2E3m4": 1,
                "8F9P97:n:": 1,
                "5v8&:": 1,
                "=H=h=": 1,
                ",3]374": 1,
                "6*9u9": 1,
                ";P;b;m;": 1,
                "<,<]<": 1,
                "=E>T>": 1,
                ">1?R?": 1,
                "2\\3u3": 1,
                "3r5~5": 1,
                "9F;P;": 1,
                "3A4H4b4": 1,
                "5\"6>6E6[7": 1,
                "0h1v1": 1,
                ":!:2:::K:S:": 1,
                ";%;0;": 1,
                "2O2r2": 1,
                "6!6A6c6": 1,
                ">X>y>n?": 1,
                "2W2x2L3": 1,
                "4=5^5": 1,
                "4;5s5": 1,
                "63<3n3t3": 1,
                "4C5h5": 1,
                "5(6:6L6~6": 1,
                ":':K:{:": 1,
                "<'=3>F>": 1,
                "212s2": 1,
                "7s8{8": 1,
                "8%9-9:9": 1,
                "<$=&>": 1,
                ">#?5?O?": 1,
                "89;E<": 1,
                "5-6l6": 1,
                "<G=|=": 1,
                "<%>->5>=>C>": 1,
                "4R4_4": 1,
                "4'5^5": 1,
                "6+6Q6w6": 1,
                "617{7": 1,
                "7:8V8": 1,
                ":Y;j;p<": 1,
                ">B>g>": 1,
                "8<:n:t:": 1,
                ";==]=b=u=}=": 1,
                "5,5C5": 1,
                ":T;c;v;": 1,
                "</<9<G<O<W<": 1,
                "=*=5=|=": 1,
                "=]>i>m>z>": 1,
                "3>3D3": 1,
                "5A6G6$7}7": 1,
                "9_9t:": 1,
                "=c=p=": 1,
                "0)050=0F0Q0W0]0": 1,
                "1>1q1}1": 1,
                "1R2W2w2": 1,
                "7$7X7": 1,
                "8#949g9x9": 1,
                "=B=}=R>]>(?D?": 1,
                "2\"2]2": 1,
                "3$4.4E4": 1,
                "4'5C5x5": 1,
                "1W2p2": 1,
                "2;3s3": 1,
                "4\"6G6S7": 1,
                "96;V;": 1,
                "2^2f2": 1,
                "415\\5": 1,
                "7D8Q8": 1,
                "=O?S?W?[?_?c?g?k?": 1,
                "='=r=": 1,
                "2=4I4U4": 1,
                "4d5t5": 1,
                "5-6R6a6": 1,
                "6S7`7/8": 1,
                "9!979": 1,
                "<;=I=": 1,
                "3#4{4": 1,
                "4R5V5`5m5q5{5": 1,
                "7F8u8": 1,
                ";L;Q;": 1,
                "<8=a=h=": 1,
                "=$>+>4>?>Y>p>": 1,
                ">6?@?": 1,
                "0)0^0o0": 1,
                "2>4B4L4P4V4": 1,
                "505W5": 1,
                "6W6j6": 1,
                "8n9W:": 1,
                "<&=Z=|=": 1,
                "?#?6?B?N?": 1,
                "0#1v1": 1,
                "<6=Q=f=": 1,
                ">W>^>": 1,
                "-0c0s0": 1,
                "5;6^6": 1,
                "9p;w;": 1,
                "=A=F=L=Q=": 1,
                "U0g0x0": 1,
                "6_6n6x6": 1,
                ">2?M?": 1,
                "5!5P6": 1,
                "8s8~8": 1,
                "2<3n3": 1,
                "5&5A5]5": 1,
                "6$7?7": 1,
                "0+4/43474;4?4C4G4K4O4S4W4i4": 1,
                "7m8z8": 1,
                ",0>0S0": 1,
                "5G5U5": 1,
                "6 6o6}6": 1,
                "8,9c9": 1,
                ";S=f=m={=H>n>": 1,
                "$0,01060;0F0N0`0h0v0|0": 1,
                "1\"1'1,171@1R1Z1f1{1": 1,
                "5@5H5N5V5": 1,
                "5%6+616<6G6R6]6h6o6": 1,
                "8!8.8A8J8Z8j8u8": 1,
                "9&9;9T9~9": 1,
                "9?:H:": 1,
                "787Y7a7r7": 1,
                "8#848": 1,
                "8I9S9r9": 1,
                "91:4<": 1,
                "313Z3": 1,
                "3<5y5": 1,
                "6!6A6": 1,
                "6(777W7;8": 1,
                ";(;O<": 1,
                "0'1L1": 1,
                "1'2K2": 1,
                "3$3<3": 1,
                "5a6+747B7`8n8": 1,
                ">%>K>|>": 1,
                ">T?Z?": 1,
                "0%0B0H0y0": 1,
                "3'4-4F4": 1,
                "5`5f5": 1,
                "7B9M9U9]9e9m9u9}9": 1,
                ":%:-:5:=:H:P:-<f=t=k>": 1,
                "0,0=0K2i2": 1,
                "2n3~3": 1,
                "4%5L6": 1,
                "6=8N8X8m8S9": 1,
                ";6<A<L<W<b<m<x<": 1,
                "=$=/=:=E=P=[=f=q=|=": 1,
                ">#>,>": 1,
                "?%?0?;?F?Q?\\?g?r?}?": 1,
                "10D0e0w0": 1,
                "0(131>1I1T1_1j1u1}1": 1,
                "4J4?5J5V5\\5g5p5": 1,
                "6f6n6": 1,
                "7Y7a7i7q7": 1,
                "8c9g9k9o9s9w9{9": 1,
                "=-=@=J=c=": 1,
                ">3>H>d>l>y>": 1,
                "?\"?D?m?}?": 1,
                "000?0G0N0U0": 1,
                "333>3I3a4q4": 1,
                "5'5.555o5": 1,
                "566@6d6": 1,
                "6J7v7": 1,
                ";);/;<;[;c;o;": 1,
                "<$<,<4<9<?<[<h<U>`>i>s>": 1,
                "0+01080@0H0t0": 1,
                "1$13191H1M1^1c1t1y1": 1,
                "2 2&2,272<2F2L2R2X2d2k2t2}2": 1,
                "3'4.484B4U4f4o4u4": 1,
                "495E5O5`5f5l5q5|5": 1,
                "7&7J7}7": 1,
                "7%8g8m8": 1,
                ":C:N:q:{:": 1,
                "<>>D>Z>": 1,
                "0K0w0": 1,
                "1W2{2": 1,
                "363]3": 1,
                "3?4h4": 1,
                "8(8.8>8S8Y8`8": 1,
                "8`9m9~9?:m:": 1,
                ";B;q;": 1,
                "<-<7<?<P<^<f<m<": 1,
                "203'4Q4": 1,
                "4,5S6l6": 1,
                "6I7i7y7": 1,
                "848J8": 1,
                "8 9z9": 1,
                "<\"<(<O<": 1,
                "5@6Y6": 1,
                "707{7": 1,
                "8A9l9": 1,
                ">3>N>^?": 1,
                "1D1k1": 1,
                "2J2p2": 1,
                "6!6%6)656b6": 1,
                "7N7l7": 1,
                "8D8c9": 1,
                "9 :]:": 1,
                "3&:Y:": 1,
                "131M1?3": 1,
                ";%;1;=;M;];i;u;": 1,
                ";T<x<": 1,
                "=)=/=": 1,
                "293>3]3g3": 1,
                "3?4s4~4": 1,
                "4[5e5m5w5|5": 1,
                "566<6E6N6W6]6|6": 1,
                ":/=f=7?": 1,
                "<#<C<M<": 1,
                "d7o7}7": 1,
                "=$=*=2=;=J=": 1,
                "2_2w3": 1,
                "8 8'828A8P8p8u8": 1,
                "889N:": 1,
                "151[1": 1,
                "4,4>4S4l4u4": 1,
                "4\"5J5h5s5": 1,
                "6.6a6|6": 1,
                "8.868Y8t8": 1,
                "9B:P:c:9;X;^;": 1,
                "; <K<i<S=x=~=": 1,
                ">=>h>": 1,
                "030A0T0": 1,
                "2L3Z3m3": 1,
                "424O4": 1,
                "4=5H5[5": 1,
                ";>;n;": 1,
                ";C<^<v<": 1,
                "=Y>z>": 1,
                "0o1u1": 1,
                "3$3b3": 1,
                "7(707V7w7": 1,
                "909N9j9": 1,
                "9S:a:t:": 1,
                ";4;U;`;o;": 1,
                "<3=C=K=v=": 1,
                "=<>Z>": 1,
                ">(?6?I?": 1,
                "30>0Q0": 1,
                "2D2r2": 1,
                "5#6^6": 1,
                "6'7V7z7": 1,
                ":&:1:D:": 1,
                ";<;U;": 1,
                ";Z<`<": 1,
                "<V=\\=": 1,
                "=;>A>": 1,
                ">e?k?": 1,
                "0$1C1O1": 1,
                "3P3V3": 1,
                ":/:\"<": 1,
                "3/3@3": 1,
                "314B4G4R4": 1,
                "505C5R5^5": 1,
                "6?6E6K6\\6b6": 1,
                "7'7G7N7": 1,
                "8#939w9": 1,
                "9):B:S:u:": 1,
                ":=;U;g;": 1,
                "=#=?=J=^=n=z=": 1,
                "?F?p?u?z?": 1,
                "%000>0J0": 1,
                "0!1&10151;1F1": 1,
                "2(2?2M2R2": 1,
                "3$3,333<3D3L3S3c3v3": 1,
                "4!4'4": 1,
                "5-5`5o5": 1,
                "6.7L7": 1,
                "5!585E5": 1,
                "6%7g799X9": 1,
                ";!<k<": 1,
                "4E4z4": 1,
                "5O54:p:J;": 1,
                "565@5M5`5": 1,
                "6$696D6I6s6{6": 1,
                "637V7": 1,
                "9I9Q9Y9a9z9": 1,
                ":\":2:;:G:V:z:": 1,
                ";S<`<": 1,
                "<@=p=": 1,
                "=Y>o>": 1,
                "2/3X3q3": 1,
                "3-484O4a4q4": 1,
                "4!5K6": 1,
                "7,8z;": 1,
                ";A?F?": 1,
                "7F<q<": 1,
                "1J3Q3i:C<": 1,
                ": ;(;0;j;|;": 1,
                "2A2N2t2": 1,
                ";G<R<": 1,
                "$2.2v3": 1,
                "7=7x7}7": 1,
                "979S9v;": 1,
                "<S<[<": 1,
                "2)3p3{3": 1,
                "4c5);": 1,
                "<`=h=": 1,
                ">=?H?U?Z?": 1,
                ":R;Y>": 1,
                "3j6m7m<": 1,
                ">W?d?s?}?": 1,
                "1+3]3": 1,
                "4%575I5": 1,
                "6d8a9": 1,
                ";F<K<h<m<": 1,
                "<n=s=#>(>Z>_>": 1,
                "?I?N?": 1,
                "1;1`1x3": 1,
                "4V5l6": 1,
                "8Q9^9g9w9);3;=;B;X;g;y;": 1,
                "=b=l=v={=": 1,
                "?&?0?5?w?": 1,
                "T0[0e0": 1,
                "1@1_1f1": 1,
                "252=2C2I2T2^2d2w2|2": 1,
                "313:3C3": 1,
                "9M:4;:;S;Y;": 1,
                "<`=m=": 1,
                "6R7^7": 1,
                "?,?8?D?_?": 1,
                "3$333<3Y3f3q3": 1,
                ":!:':X;n;": 1,
                "=T>_>g>": 1,
                "0!1-151": 1,
                "1 2+232e2": 1,
                "2J3P3X3": 1,
                "4W4]4c4%5+5?5c5v5|5": 1,
                "6Y6b6h6n6": 1,
                "7#8S8Y8": 1,
                "9 9N9V9k9|9": 1,
                ";-<h<r<x<": 1,
                "?0?Z?": 1,
                "00<0?1_1": 1,
                "3$4#5a5u5": 1,
                ";Q<v<": 1,
                "165|5": 1,
                "6!6%6)6-61656#8)8;8@8I8": 1,
                ": :(:0:};": 1,
                "; <G<n<": 1,
                "=*>a>": 1,
                ">*?;?": 1,
                "2)3A3S3?4": 1,
                "6J6o6z6": 1,
                "6;7c7": 1,
                "8=9[9c9n9v9r:": 1,
                "191^1X3": 1,
                "7-7y7": 1,
                "7B8x8": 1,
                ":*;~;": 1,
                ";*<\\<`<d<h<l<p<t<": 1,
                "=D>s>": 1,
                "0(0H0O0": 1,
                "1,2D203": 1,
                "4$4*454i4": 1,
                "5P5a5": 1,
                "5.666L6`6j6q6": 1,
                "6$777O7j7x7": 1,
                "8S8|8": 1,
                ":6;r<`=": 1,
                "2M2m2u2": 1,
                "223b3": 1,
                "3:4_4f4C5J5P5i5o5": 1,
                "7M7e7~7": 1,
                "7D8U8[8": 1,
                "9H9N9]9": 1,
                "?8???J?X?": 1,
                "192B2G2e2t2|2": 1,
                "23393A3L3U3_3e3": 1,
                "4$42484e4p4": 1,
                "4*5[5": 2,
                "7<7]7z7": 1,
                "7$8{8": 1,
                "8=9B9O9a9": 1,
                ": :':0:\\:b:h:{:": 1,
                ";K;\\;d;": 1,
                ";.<i<r<}<": 1,
                "='=9=J=w=": 1,
                ">'>2>A>": 1,
                "?.?`?o?": 1,
                "0$040M0": 1,
                "1\"1F1": 1,
                "2%202D2M2W2]2": 1,
                "4#4U4e4n4t4": 1,
                "5D5y5": 1,
                "6C6I6h6": 1,
                "727A7]7": 1,
                "898F8e8m8": 1,
                "9N9|9": 1,
                ":$:[:": 1,
                "=)=Q=f=": 1,
                ">!>9>Z>p>v>": 1,
                "?*?5?`?f?": 1,
                "1(2a2g2": 1,
                "3,343:3I3O3c3y3": 1,
                "4-4R4b4u4": 1,
                "5!6'6-6L6}6": 1,
                "8$8I8+9Z9q9": 1,
                ": :&:8:Y:": 1,
                ">i>o>": 1,
                "?0?S?": 1,
                "0P0Y0d0q0": 1,
                "0\"1-191@1": 1,
                "2#2-232F2T2a2w2|2": 1,
                "383F3K3S3g3l3q3v3|3": 1,
                "535>5u5{5": 1,
                "6@6J6Z6m6v6": 1,
                "7-757>7U7Z7": 1,
                "8L8e8": 1,
                "8#9I9d9p9": 1,
                ":):<:[:c:s:": 1,
                "<\"<(<3<A<I<[<_<j<o<~<": 1,
                "<h=u={=": 1,
                "> >/><>D>I>v>~>": 1,
                ">(?n?": 1,
                "0L0T0]0": 1,
                "1R1[1y1": 1,
                "2!20282I2O2Z2}2": 1,
                "4!4'4-4?4E4P4]4k4q4": 1,
                "5/555;5A5s5": 1,
                "6/686B6S6": 1,
                "8-898b8": 1,
                "91999": 1,
                ";;<g<": 1,
                "=3=v=": 1,
                "0B0q0": 1,
                "1'1-1I1[1a1k1{1": 1,
                "1o2{2": 1,
                "4&4,424": 1,
                "5(535@5V5`5q5|5": 1,
                "6 6*686S6i6": 1,
                "7\"7-767A7G7N7f7q7~7": 1,
                "8-8A8M8[8v8": 1,
                "9#989>9H9j9}9": 1,
                ": :-:n:{:": 1,
                "8-9>9": 1,
                "6!6\"8": 1,
                "8`9x9": 1,
                ":-:8:A:L:X:D;": 1,
                "<<=F=L=Q=W=": 1,
                ">5?@?H?Y?l?": 1,
                "0$03090D0c0h0s0": 1,
                "1J1Q1|1": 1,
                "2&2_2m2": 1,
                "3$3;3A3W3b3q3": 1,
                "4%4/4D4R4h4": 1,
                "6!6,616": 1,
                "7%777S7": 1,
                "8A8N8Z8v8": 1,
                ":];c;q;": 1,
                ";&<,<w<": 1,
                "=&>->5>?>E>": 1,
                "0)1/171K1R1j1": 1,
                "1(2B2J2f2o2|2": 1,
                "2,343N3f3w3": 1,
                "424R4_4": 1,
                "6&606;6": 1,
                "8/8M8t8": 1,
                "9=9j9": 1,
                "96:>:D:r:y:": 1,
                ";F;U;c;": 1,
                "=-=B=z=": 1,
                ">!>'>@>F>": 1,
                "2d3l3t3": 1,
                "4&4+4": 1,
                "7P7j7": 1,
                "8F8t8": 1,
                "9V:b:j:q:w:": 1,
                ";%;9;F;N;W;];c;z;": 1,
                ";*<2<X<]<": 1,
                "<2=g=s=": 1,
                "?T?x?": 1,
                "0]1k1": 1,
                "304<4:5": 1,
                "9*9G9": 1,
                "9&:Q:": 1,
                ":(<.<": 1,
                "<0=o=": 1,
                "171f1": 1,
                "2/2T2": 1,
                "5/5b5": 1,
                "5/6@6K6S6Y6t6z6": 1,
                "7S7r7": 1,
                "<!<'<,<M<l<s<": 1,
                "=<=B=M=V=^=c=o=": 1,
                ">&>/>>>j>{>": 1,
                "?\"?d?": 1,
                "H0Z0b0g0o0t0{0": 1,
                "121D1J1O1U1k1u1": 1,
                "1 2:2": 1,
                "3&363@3L3T3\\3": 1,
                "535t5": 1,
                "6 6/6A6U6[6r6": 1,
                "7$8E8": 1,
                ":#:):": 1,
                "=J=W=b=": 1,
                ">0>:>H>Y>c>n>s>": 1,
                ">f?r?x?": 1,
                "020=0D0W0a0": 1,
                "1,1E1X1}1": 1,
                "3\"3(30363>3D3]3": 1,
                "4&4,41474M4W4o4": 1,
                "4O6[6l6": 1,
                ":#:;:Z:n:s:": 1,
                ";*;a;": 1,
                "<$<0<5<B<N<Z<m<w<": 1,
                "=!==>G>\\>d>j>q>": 1,
                "0#0(0.0>0J0V0b0n0z0": 1,
                "5\"5,565@5U5e5q5v5": 1,
                "6+696C6M6W6i6y6": 1,
                "808M9": 1,
                "9Y:i:": 1,
                ">$>1>i>s>x>": 1,
                "2*2/2D2P2\\2g2q2{2": 1,
                "3\"3.383B3L3Y3t3": 1,
                "4\"4O4": 1,
                "7)858:8C8O8[8g8s8": 1,
                "8:9D9U9s9": 1,
                "<*<6<@<J<T<a<": 1,
                "5^5j5o5": 1,
                "6&626>6J6T6^6h6{6": 1,
                "7\\7i7": 1,
                "8$8D8": 1,
                "<8<F<K<Y<e<q<": 1,
                "=$=0=<=G=Q=[=e=r=": 1,
                "0 0,080I0S0]0g0w0|0?2b2j2!3-3u3": 1,
                "4A4w4": 1,
                ";*<0<@<X<^<d<": 1,
                ">(?2?D?K?\\?d?v?|?": 1,
                "0.0?0d0n0": 1,
                "0\"1-1`1h1": 1,
                "262<2B2H2T2|2": 1,
                "2W4`4": 1,
                "6 6+636J6S6j6w6": 1,
                "7!737=7V7`7q7y7": 1,
                "898V8j8": 1,
                "?p?y?": 1,
                ":[;f;": 1,
                "<*<z<": 1,
                "<.=K=": 1,
                "=B>[>": 1,
                "?&?z?": 1,
                "081E1": 1,
                "2u2{2": 1,
                "9'9.9~9": 1,
                ";'<1<": 1,
                "=E=S=Y>V?": 1,
                "0%1W1s1}1": 1,
                "3=4l4": 1,
                "4F5\\5": 1,
                "7Z8t8": 1,
                ":N;g;};": 1,
                "=&=H=": 1,
                "0Z0a0h0o0v0": 1,
                "1&1A1H1O1V1]1d1": 1,
                "1)2K3": 1,
                "5=6v6": 1,
                "8;9u9": 1,
                ":.:{:": 1,
                ":=;n;": 1,
                "<'=8=": 1,
                ">\">s>": 1,
                "9Q;n<": 1,
                "5(6J6a6": 1,
                "9)?3?R?": 1,
                "0\"0'0Z0e0": 1,
                "1\"1'1>1": 1,
                "4m4s4T5b5": 1,
                "667P7o7v7|7": 1,
                ">7>T>": 1,
                "1O5c5v5": 1,
                "6!6&6": 1,
                "737;7\\7~7": 1,
                "8 8&8,81878?8F8X8f8s8": 1,
                "9R9`9": 1,
                "9M:o:y:": 1,
                "=)=^=u=": 1,
                "=.>>>G>e>": 1,
                "?$?)?;?A?a?i?q?y?": 1,
                "0&0Z0x0": 1,
                "324~4": 1,
                "5r5M6c6": 1,
                "9N9\\9c9i9": 1,
                ":':-:::": 1,
                ":A;j;": 1,
                "=$=*=6=?=E=K=P=\\=o=y=": 1,
                ">1>:>C>L>W>^>": 1,
                "?!?+?X?^?s?}?": 1,
                "050D0s0y0": 1,
                "1#1*151@1N1U1d1j1": 1,
                "2 3f3": 1,
                "7\"7&7*7.72767:7>7B7F7J7N7R7V7Z7^7b7f7j7n7r7v7z7~7": 1,
                ":/:8:>:L:n:{:": 1,
                ";$;*;4;:;C;H;N;V;];d;j;p;|;": 1,
                "<6<=<A<I<N<T<[<e<i<s<~<": 1,
                "<#=*=0=b=~=": 1,
                "=/>|>": 1,
                "?6?>?w?": 1,
                "0(0=0G0\\0C1": 1,
                "4O5`5": 1,
                "9M;p;{;": 1,
                ">'?L?|?": 1,
                "0\"0(0.0d0": 1,
                "2-272": 1,
                "6'646Q6a6g6m6y6": 1,
                "7>7J7": 1,
                "8>8b8g8": 1,
                ":%:-:": 1,
                ":-;6;J;T;l;": 1,
                ";L<R<`<q<w<": 1,
                "=%=0=<=r=x=": 1,
                ">*>0>:>H>O>_>f>k>r>y>": 1,
                "0I0Q0`0f0p0X1t1": 1,
                "3R3g3m3": 1,
                "4$4.4": 1,
                "4*5F5R5l5": 1,
                "7 727<7S7k7|7": 1,
                "9B9O9": 1,
                "9T:`:": 1,
                ";6;=;d;": 1,
                "<*<0<H<^<d<i<": 1,
                "=$=1=C=P=`=h=r=": 1,
                "><>`>h>": 1,
                "020L0e061C1I1i1}1": 1,
                "1+272=2[2f2": 1,
                "4+4?4S4s4": 1,
                "6L6h6y6": 1,
                "6-7L7z7": 1,
                "8)848y8": 1,
                "9,9M9n9": 1,
                "1$1+121<1F1P1": 1,
                "2 2$2(2,20242": 1,
                ",:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:": 1,
                "8 8$8(8,8084888<8@8D8H8": 1,
                "; =,=8=D=P=h=t=": 1,
                "P2T2X3\\3`3d3h3l3p3t3x3|3": 1,
                "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4": 1,
                "5(5,5054585<5@5D5H5L5P5T5X5\\5": 1,
                "; ;(;l>p>t>x>|>": 1,
                "0 0$0(0,00040@0D0H0L0P0T0`0d0h0l0p0t0": 1,
                "8084888d:h:l:": 1,
                "0 0$0(0": 1,
                "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3": 1,
                "7 7$7(7074787<7@7D7H7P7T7X7\\7`7h7l7p7t7x7|7": 1,
                "L5T5\\5d5l5t5|5": 1,
                "507<7D7P7X7d7l7x7": 1,
                "8 8,848@8H8T8\\8h8p8|8": 1,
                "9$90989D9L9X9`9l9t9": 1,
                ": :(:4:<:H:P:\\:d:p:x:": 1,
                ";$;,;8;@;L;T;`;h;t;|;": 1,
                "<(<0<<<D<P<X<d<l<x<": 1,
                "= =,=8=@=": 1,
                ">+>0>F>Q>W>_>o>z>": 1,
                "?#?(?2?<?C?I?O?Y?c?": 1,
                "0)03080=0S0m0|0": 1,
                "0r1{1": 1,
                "282Q2r2": 1,
                "3#3.3": 1,
                "3?5F5p5": 1,
                "666;6A6G6M6S6h6m6x6": 1,
                "858f9": 1,
                ":(:U:[:i:v:}:": 1,
                "=%=+=2=9=B=O=[=": 1,
                ">\">/>": 1,
                ">3?9?g?q?": 1,
                "0C0H0M0R0`0": 1,
                "1G1M1": 1,
                "1;2X2": 1,
                "346@6`6q6": 1,
                "7T7e7l7~7": 1,
                "9=9G9S9i9o9z9": 1,
                "9):N:": 1,
                "; <&<@<f<": 1,
                "=\"=A=y=": 1,
                ">E>l>": 1,
                "101Q1": 1,
                "1F2!3)3": 1,
                "4D5r5": 1,
                "7:8B8F8L8T8X8^8f8j8p8x8|8": 1,
                "9%9C9a9r9": 1,
                ": :8:B:[:m:": 1,
                "<+=<=L=\\=": 1,
                "0z1B4^4~4": 1,
                "5)5/575>5": 1,
                "6,666S6u6": 1,
                "647{7": 1,
                "8!8&8+808?8N8`8": 1,
                "9 9&9+979X9]9c9g9m9s9x9}9": 1,
                ":1:6:;:@:G:N:T:[:a:h:o:t:y:": 1,
                ";.;V;e;k;": 1,
                "<5<D<_<k<": 1,
                ">1?b?u?": 1,
                ".090w0": 1,
                "2]5j5": 1,
                "5I6V6": 1,
                ">+>2>9>C>H>M>T>Y>`>e>": 1,
                "?(?f?t?": 1,
                "0T1o1": 1,
                "1M2c2": 1,
                "3*4I4": 1,
                "8 8f8": 1,
                ":(:5:=:c:x:": 1,
                ";\";1;": 1,
                "0-060K0Q0U0_0": 1,
                "1'1Z1": 1,
                "142Y2": 1,
                "3#3)30353:3I3N3S3X3b3h3o3v3": 1,
                "474C4f4q4": 1,
                "475I5": 1,
                ";/;>;T;": 1,
                ">V?h?p?{?": 1,
                "9%9@9K9x9": 1,
                "0/1X1": 1,
                "5<6J7Y7": 1,
                "8K8]8": 1,
                "8#979H9Y9s9": 1,
                "1A1o1": 1,
                "1%292": 1,
                "1&222": 1,
                ":%:p:": 1,
                "<4=}=": 1,
                ">,>n>": 1,
                "0 0%0*00060<0B0H0N0U0Z0_0e0": 1,
                "2!2V2d2n2y2": 1,
                "9%9L9k9": 1,
                ":&:-:9:\\:e:": 1,
                ";$;,;4;<;D;L;T;\\;d;l;t;|;": 1,
                ";L<T<\\<d<l<t<|<": 1,
                "=$=,=4=<=D=L=T=\\=d=l=t=|=": 1,
                ">$>,>4><>D>L>T>\\>d>l>t>|>": 1,
                "4g4l4y4": 1,
                "6$646D6T6d6i6": 1,
                "8!8&8+80888>8E8L8R8X8^8d8n8t8z8": 1,
                ";1;[;": 1,
                "<-<><]<1=X=": 1,
                ">8?n?": 1,
                "707G7Q7]7m7": 1,
                "878D8R8Z8d8j8": 1,
                "9E9j9": 1,
                "<9<><Z<_<r<w<": 1,
                "=E=J=Y=c=l=u=|=": 1,
                ">!>+>Z>i>x>": 1,
                ">D?J?T?Z?_?j?u?": 1,
                "1-151@1": 1,
                "2<3c3": 1,
                "4%4U4": 1,
                "5\"5/555;5G5Q5Z5c5l5s5}5": 1,
                "676P6X6`6h6)7/7<7O7X7n7": 1,
                "8$8#<+<0<5<?<I<O<U<\\<c<i<": 1,
                "<1=;=O=v=": 1,
                ">#>3>9>Q>r>y>": 1,
                "1#232K2j2": 1,
                "2n3{3": 1,
                "5-565;5T5Y5": 1,
                ":C:H:": 1,
                "> >&>;>f>n>w>": 1,
                "?#?+?C?": 1,
                "1B1Z1f1": 1,
                "2(2S2l2": 1,
                "2e3k3v3": 1,
                "4+414": 1,
                "697J7": 1,
                "7Q8X8": 1,
                "8D9f9l9": 1,
                ":[:y:": 1,
                ";a;m;{;": 1,
                "=&=2=>=Q=": 1,
                ">->L>`>s>": 1,
                "?5?M?_?d?o?": 1,
                ">0G0M0_0j0p0v0": 1,
                "1A2{2": 1,
                "3-4G4b4": 1,
                "5&6@6P6p6": 1,
                "7*7=7J7P7]7": 1,
                "7-8J8P8Z8d8n8x8": 1,
                "819>9D9M9": 1,
                ":\":+:1:9:C:M:W:a:p:v:": 1,
                ": ;&;,;7;D;L;R;X;s;x;": 1,
                "<)</<8<G<c<i<n<t<y<": 1,
                "=\"='=,=1=6=;=@=J=_=d=i=n=s={=": 1,
                ">!>&>+>0>5>:>?>D>J>P>W>]>c>j>p>v>}>": 1,
                "?!?1?6?;?@?I?O?U?[?a?g?m?s?": 1,
                "0:0N0q0y0": 1,
                "1!161P1X1i1": 1,
                "2)2.2R2X2^2k2s2": 1,
                "3!3)3;3D3O3]3s3": 1,
                "4%444:4D4N4X4a4f4l4": 1,
                "5B5H5e5u5": 1,
                "6 6*6/656;6A6G6N6U6Z6_6i6s6|6": 1,
                "7-757>7I7O7U7": 1,
                "8%848B8I8T8Z8_8d8i8v8|8": 1,
                "92989H9M9_9t9": 1,
                ":!:2:": 1,
                ";+;?;[;": 1,
                "<(<4<9<t<": 1,
                "=$=)=?=G=N=f=l=r=x=": 1,
                ">'>/>5>=>E>M>S>[>d>|>": 1,
                ">!?'?-?v?": 1,
                "0!0)010;0X0q0": 1,
                "1\"1(1-191O1c1y1(333:3": 1,
                "5(595>5L5V5`5k5u5z5": 1,
                "7$7*797`7": 1,
                "7M8R8n8{8": 1,
                "9%9-969=9I9n9": 1,
                "91:<:C:K:R:Z:p:v:": 1,
                "; ;,;o;w;": 1,
                "< <3<<<G<L<V<d<o<": 1,
                ">9>i>": 1,
                "?H?X?a?g?m?w?": 1,
                "1(1d1": 1,
                "2%2I2Q2\\2g2m2s2x2~2": 1,
                "3&3X3a3i3w3": 1,
                "4\"4+434L4f4m4w4": 1,
                "51595M5V5b5h5q5z5": 1,
                "6N6]6e6p6v6": 1,
                "6\"7>7C7b7q7y7": 1,
                "8'898F8N8Z8a8~8": 1,
                "9*9@9R9[9g9w9|9": 1,
                ":':.:>:D:R:a:i:r:z:": 1,
                ";&;,;2;<;`;f;l;": 1,
                "<0<c<j<p<v<~<": 1,
                "<!=0=>=_=o=": 1,
                ">N>W>a>g>": 1,
                ">/?:?@?Q?r?": 1,
                "0 0/050": 1,
                "0$1M1X1k1": 1,
                "3A3G3": 1,
                "4)474": 1,
                "7/7p7": 1,
                "959>9L9r9": 1,
                ":&:/:": 1,
                ":A;H;Q;Z;z;": 1,
                "< <&<:<": 1,
                "=,=6=E=b=r=z=": 1,
                ">$>5>C>[>g>}>": 1,
                "? ?)?U?l?r?": 1,
                "040O0": 1,
                "0$1,151;1Z1\"2T2Z2c2v2": 1,
                "253~3": 1,
                "4&474=4Q4o4|4": 1,
                "6)626I6N6": 1,
                "6/7P7q7": 1,
                "8L8^8q8": 1,
                "8.9@9S9!:):/:;:S:": 1,
                ":V;d;F<": 1,
                "=\"=)=.=3=9=a=g=m=s=y=": 1,
                ">9>>>W>": 1,
                "?%?/?9?G?Y?`?q?}?": 1,
                "020c0u0{0": 1,
                "2T2g2z2": 1,
                "4d4~4": 1,
                "676=6_6w6": 1,
                "7#7)7/757;7@7K7Q7U7[7a7g7n7x7}7": 1,
                "8$8)8.83888=8B8G8L8Q8V8[8`8e8j8o8": 1,
                "9&949;9B9G9L9Q9W9\\9f9q9{9": 1,
                ":\":=:": 1,
                "; ;);4;?;E;U;": 1,
                "<8<E<": 1,
                "> >&>/>5><>C>L>R>W>\\>a>g>q>w>}>": 1,
                "?#?-?J?d?p?z?": 1,
                "0&0-02070C0U0y0": 1,
                "1\"1-1E1P1d1": 1,
                "3-323<3q3": 1,
                "3%474G4M4S4X4n4s4x4}4": 1,
                "6(656H6h6": 1,
                "7'7B7S7a7|7": 1,
                "8*8U8": 1,
                ":.:R:": 1,
                "?2?w?": 1,
                "e0i0q0u0": 1,
                "1&181>1M1\\1k1x1": 1,
                "2&2.292A2L2T2_2g2r2z2": 1,
                "3'3.3:3A3K3R3^3e3o3v3": 1,
                "4\"4/4>4G4X4d4m4": 1,
                "5a5q5": 1,
                "6%656E6U6e6u6": 1,
                "7(787H7X7h7x7": 1,
                "8(858<8H8T8`8l8x8": 1,
                "9 9D9T9d9t9": 1,
                ":':7:G:W:g:w:": 1,
                ";/;A;S;d;r;": 1,
                "< <2<D<d<k<u<~<": 1,
                "=!=(=2=9=C=J=T=[=e=l=v=}=": 1,
                ">#>)>/>5>?>F>L>R>X>^>h>o>u>{>": 1,
                "?%?*?3?9?B?H?Q?W?`?f?o?u?~?": 1,
                "0#0+01070<0D0K0S0Z0b0i0q0x0": 1,
                "2\"2.2:2F2R2^2j2v2": 1,
                "3'333?3K3W3c3o3{3": 1,
                "4#4/4;4G4S4": 1,
                "5Q5`5v5|5": 1,
                "5)6/6": 1,
                "909:9?9": 1,
                ":6;u;": 1,
                ";'<1<S<^<s<": 1,
                "1(121<1A1S1g1{1": 1,
                "2(2-222F2K2P2U2\\2a2f2k2": 1,
                "343;3": 1,
                "374U4n4": 1,
                "5#5@5G5N5X5{5": 1,
                "7#70767<7d7r7}7": 1,
                "8'8=8S8": 1,
                "8n9Y:d:": 1,
                ";!;,;<;L;S;];i;v;": 1,
                "<$<8<?<E<K<O<": 1,
                "=$=.=": 1,
                ">!>(>H>N>S>Y>b>g>": 1,
                "?#?4?\\?k?u?": 1,
                "0$010g0t0z0": 1,
                "161@1X1_1~1": 1,
                "232=2O2k2": 1,
                "494>4C4H4": 1,
                "6L7Q7W7a7g7m7t7{7": 1,
                "8)8/84898F8R8W8i8t8": 1,
                "9.969H9P9b9": 1,
                ":):.:V:": 1,
                ";%;+;D;Z;v;": 1,
                "<*<1<B<G<i<": 1,
                "=;=_=o=z=": 1,
                ">?>b>y>": 1,
                "?%?T?\\?c?j?y?": 1,
                "494Z4_4d4i4n4s4x4}4": 1,
                "6%6+6D6m6u6|6": 1,
                "7 7&7-74797>7D7x7": 1,
                "8\"8:8@8`8n8": 1,
                "9%9[9`9f9p9v9|9": 1,
                "1@1O1": 1,
                "2I2S2": 1,
                "384N4d4": 1,
                "5 5'5,51565;5A5K5R5X5]5": 1,
                "656R6q6": 1,
                "9c;l;q;": 1,
                ";#<Y<`<g<n<u<O>": 1,
                "><?U?": 1,
                "1V4l4": 1,
                "9F:x:": 1,
                "<,=W=U>": 1,
                ">O?U?": 1,
                "1+1<1M1W1z1": 1,
                "4 4'4,414;4E4J4O4T4Y4^4c4i4o4u4{4": 1,
                "5J5[5y5": 1,
                "6A7S7\\7e7": 1,
                "78;z;": 1,
                ":0[0'1": 1,
                "4D4K4d4n4": 1,
                "9):6:": 1,
                ">3>>>F>c>s>": 1,
                "6.7J7l7q7|7": 1,
                "9-939": 1,
                "9\":?:M:w:": 1,
                ";!;,;1;<;A;L;Q;\\;a;l;q;|;": 1,
                "<!<,<1<<<A<L<Q<\\<a<l<q<{<": 1,
                "=&>6>g>": 1,
                "0&090L0_0t0": 1,
                "1(2:2": 1,
                ">R>q>": 1,
                "101;1F1K1p1v1{1": 1,
                "2\"262<2A2": 1,
                "253O3": 1,
                "3-4=8": 1,
                "?:?|?": 1,
                "g2k2o2s2w2{2": 1,
                "0+030": 1,
                "1/686~6": 1,
                "969B9n9~9": 1,
                "=p={=": 1,
                "=0>??L?": 1,
                "071~1": 1,
                "5X60<4<8<D<H<L<X<\\<`<l<p<t<": 1,
                "= =$=(=4=8=<=H=L=P=\\=`=d=p=t=x=": 1,
                ">$>(>,>8><>@>L>P>T>`>d>h>t>x>|>": 1,
                "?(?,?0?<?@?D?P?T?X?d?h?l?p?t?x?|?": 1,
                "0 0,00040@0D0H0L0T0X0\\0h0l0p0|0": 1,
                "1 1$1014181D1H1L1X1\\1`1l1p1t1": 1,
                "2 2$2(24282<2H2L2P2\\2`2d2p2t2x2": 1,
                "3$3(3,383<3@3L3P3T3`3d3h3t3x3|3": 1,
                "4(4,404<4@4D4P4T4X4d4h4l4p4t4x4|4": 1,
                "5 5,50545@5D5H5T5X5\\5h5l5p5|5": 1,
                "6 6$6064686D6H6L6X6\\6`6l6p6t6": 1,
                "7 7$7(74787<7H7L7P7\\7`7d7p7t7x7": 1,
                "8$8(8,888<8@8L8P8T8`8d8h8t8x8|8": 1,
                "9(9,909<9@9D9P9T9X9d9h9l9x9|9": 1,
                ": :,:0:4:@:D:H:T:X:\\:h:l:p:|:": 1,
                "; ;$;0;4;8;D;H;L;X;\\;`;l;p;t;": 1,
                "< <$<(<4<8<<<H<L<P<\\<`<d<p<t<x<": 1,
                "=$=(=,=8=<=@=L=P=T=`=d=h=t=x=|=": 1,
                "=H>P>X>`>h>p>x>": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-r-x name=POOLMI": 1,
                "perm=m-r-x name=MISYSPT": 1,
                "perm=m-r-x name=POOLCOD": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-rw- name=INITDAT": 1,
                "perm=m-r-- name=INITCON": 1,
                "perm=m-r-x name=PAGE": 1,
                "perm=m-r-x name=PAGELK": 1,
                "perm=m-r-x name=PAGEVRF": 1,
                "perm=m-r-x name=PAGEWMI": 1,
                "perm=m-r-x name=PAGEKD": 1,
                "perm=m-r-x name=PAGESPE": 1,
                "perm=m-r-x name=PAGEHDL": 1,
                "perm=m-r-- name=.edata": 1,
                "perm=m-rw- name=PAGEDAT": 1,
                "perm=m-r-- name=PAGECON": 1,
                "perm=m-rw- name=PAGEKD_1": 1,
                "perm=m-rw- name=PAGECON_1": 1,
                "perm=m-r-- name=PAGELKC": 1,
                "perm=m-r-- name=PAGEVRF_1": 1,
                "perm=m-rw- name=PAGEVRF_2": 1,
                "perm=m-rwx name=INIT": 1,
                "perm=m-r-- name=.rsrc": 1,
                "perm=m-r-- name=.reloc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=HAL.dll_HalReportResourceUsage": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalAllProcessorsStarted": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalQueryRealTimeClock": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalAllocateAdapterChannel": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeStallExecutionProcessor": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalTranslateBusAddress": 3,
                "bind=NONE type=FUNC name=HAL.dll_KfReleaseSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_KfAcquireSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalGetBusDataByOffset": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetBusDataByOffset": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeQueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalReturnToFirmware": 3,
                "bind=NONE type=FUNC name=HAL.dll_READ_PORT_UCHAR": 3,
                "bind=NONE type=FUNC name=HAL.dll_READ_PORT_USHORT": 3,
                "bind=NONE type=FUNC name=HAL.dll_READ_PORT_ULONG": 3,
                "bind=NONE type=FUNC name=HAL.dll_WRITE_PORT_UCHAR": 3,
                "bind=NONE type=FUNC name=HAL.dll_WRITE_PORT_USHORT": 3,
                "bind=NONE type=FUNC name=HAL.dll_WRITE_PORT_ULONG": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalInitializeProcessor": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalCalibratePerformanceCounter": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetRealTimeClock": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalHandleNMI": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalBeginSystemInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalEndSystemInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeRaiseIrqlToSynchLevel": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeAcquireInStackQueuedSpinLockRaiseToSynch": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalInitSystem": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalDisableSystemInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalEnableSystemInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeRaiseIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeLowerIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalClearSoftwareInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeReleaseSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeAcquireSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_ExTryToAcquireFastMutex": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeAcquireSpinLockRaiseToSynch": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeFlushWriteBuffer": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalProcessorIdle": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalReadDmaCounter": 3,
                "bind=NONE type=FUNC name=HAL.dll_IoMapTransfer": 3,
                "bind=NONE type=FUNC name=HAL.dll_IoFreeMapRegisters": 3,
                "bind=NONE type=FUNC name=HAL.dll_IoFreeAdapterChannel": 3,
                "bind=NONE type=FUNC name=HAL.dll_IoFlushAdapterBuffers": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalFreeCommonBuffer": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalAllocateCommonBuffer": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalAllocateCrashDumpRegisters": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalGetAdapter": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetTimeIncrement": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalGetEnvironmentVariable": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetEnvironmentVariable": 3,
                "bind=NONE type=FUNC name=HAL.dll_KfRaiseIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalGetInterruptVector": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeGetCurrentIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalRequestSoftwareInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeAcquireInStackQueuedSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeReleaseInStackQueuedSpinLock": 3,
                "bind=NONE type=FUNC name=HAL.dll_ExAcquireFastMutex": 3,
                "bind=NONE type=FUNC name=HAL.dll_ExReleaseFastMutex": 3,
                "bind=NONE type=FUNC name=HAL.dll_KeRaiseIrqlToDpcLevel": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSystemVectorDispatchEntry": 3,
                "bind=NONE type=FUNC name=HAL.dll_KfLowerIrql": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalStartProfileInterrupt": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalSetProfileInterval": 3,
                "bind=NONE type=FUNC name=HAL.dll_HalStopProfileInterrupt": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidInitialize": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidDisplayString": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidSetTextColor": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidSolidColorFill": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidBitBlt": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidBufferToScreenBlt": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidScreenToBufferBlt": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidResetDisplay": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidCleanUp": 3,
                "bind=NONE type=FUNC name=BOOTVID.dll_VidSetScrollRegion": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdD0Transition": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdD3Transition": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdRestore": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdReceivePacket": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdDebuggerInitialize0": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdSave": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdDebuggerInitialize1": 3,
                "bind=NONE type=FUNC name=KDCOM.dll_KdSendPacket": 3,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireFastMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireRundownProtectionEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializeRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedAddLargeStatistic": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedCompareExchange64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedFlushSList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedPopEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedPushEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReInitializeRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseFastMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseRundownProtectionEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRundownCompleted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExWaitForRundownProtectionRelease": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfAcquirePushLockExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfAcquirePushLockShared": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedAddUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedCompareExchange64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedInsertHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedInsertTailList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedPopEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedPushEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfInterlockedRemoveHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExfReleasePushLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exfi386InterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exfi386InterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exfi386InterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_HalExamineMBR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedCompareExchange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedDecrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedExchange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedExchangeAdd": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedPopEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InterlockedPushEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAssignDriveLetters": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadPartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetPartitionInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWritePartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IofCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IofCompleteRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAcquireInStackQueuedSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseInStackQueuedSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTimeUpdateNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KefAcquireSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KefReleaseSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiAcquireSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiReleaseSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObfDereferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObfReferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlPrefetchMemoryNonTemporal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUlongByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUlonglongByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUshortByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiGetClock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Kei386EoiHelper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Kii386SpinOnSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcCanIWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcDeferWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastMdlReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastReadNotPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFastReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcFlushCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetDirtyPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetFileObjectFromBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetFileObjectFromSectionPtrs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetFlushedValidData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcGetLsnForFileObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcInitializeCacheMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcIsThereDirtyData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMapData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMdlRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMdlReadComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMdlWriteAbort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcMdlWriteComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPinMappedData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPinRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPrepareMdlWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPreparePinWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcPurgeCacheSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcRemapBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcRepinBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcScheduleReadAhead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetAdditionalCacheAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetBcbOwnerPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetDirtyPageThreshold": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetDirtyPinnedData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetFileSizes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetLogHandleForFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcSetReadAheadGranularity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcUninitializeCacheMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcUnpinData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcUnpinDataForThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcUnpinRepinnedBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcWaitForCurrentLazyWriterActivity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CcZeroData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CmRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_CmUnRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgBreakPoint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgBreakPointWithStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgLoadImageSymbols": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgPrint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgPrintEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgPrintReturnControlC": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgPrompt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgQueryDebugFilterState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_DbgSetDebugFilterState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireResourceExclusiveLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireResourceSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireSharedStarveExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAcquireSharedWaitForExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocateFromPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePoolWithQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePoolWithQuotaTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExAllocatePoolWithTagPriority": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExConvertExclusiveToSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExCreateCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDeleteNPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDeletePagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDeleteResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDesktopObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExDisableResourceBoostLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExEnumHandleTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExEventObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExExtendZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExFreePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExFreePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExFreeToPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetCurrentProcessorCounts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetCurrentProcessorCpuUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetExclusiveWaiterCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExGetSharedWaiterCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializeNPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializePagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializeResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInitializeZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedAddLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedAddUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedExtendZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedInsertHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedInsertTailList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedPopEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedPushEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExInterlockedRemoveHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExIsProcessorFeaturePresent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExIsResourceAcquiredExclusiveLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExIsResourceAcquiredSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExLocalTimeToSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExNotifyCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExQueryPoolBlockSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExQueueWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseAccessViolation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseDatatypeMisalignment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRaiseStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReinitializeResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExReleaseResourceForThreadLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSemaphoreObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSetResourceOwnerPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSetTimerResolution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSystemExceptionFilter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExSystemTimeToLocalTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExUnregisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExUuidCreate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExVerifySuite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ExWindowStationObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exi386InterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exi386InterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Exi386InterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAcquireFileExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAddLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAddMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAddToTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocateFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocatePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocatePoolWithQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocatePoolWithQuotaTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocatePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAllocateResource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlAreNamesEqual": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlBalanceReads": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCheckLockForReadAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCheckLockForWriteAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCheckOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCreateSectionForDataScan": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlCurrentBatchOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDeleteKeyFromTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDeleteTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDeregisterUncProvider": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDissectDbcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDissectName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDoesDbcsContainWildCards": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlDoesNameContainWildCards": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastCheckLockForRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastCheckLockForWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastUnlockAll": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastUnlockAllByKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFastUnlockSingle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFindInTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlFreeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlGetFileSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlGetNextFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlGetNextLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlGetNextMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIncrementCcFastReadNoWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIncrementCcFastReadNotPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIncrementCcFastReadResourceMiss": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIncrementCcFastReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInitializeTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInsertPerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlInsertPerStreamContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsDbcsInExpression": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsFatDbcsLegal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsHpfsDbcsLegal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsNameInExpression": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsNtstatusExpected": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsPagingFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlIsTotalDeviceFailure": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLegalAnsiCharacterArray": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupLastLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupLastLargeMcbEntryAndIndex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupLastMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupPerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlLookupPerStreamContextInternal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlReadComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlReadCompleteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlReadDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlWriteComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlMdlWriteCompleteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNormalizeNtstatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyCleanup": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyFilterChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyFilterReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyFullChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyFullReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyInitializeSync": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyUninitializeSync": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNotifyVolumeEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNumberOfRunsInLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlNumberOfRunsInMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlOplockFsctrl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlOplockIsFastIoPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPostPagingFileStackOverflow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPostStackOverflow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPrepareMdlWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPrepareMdlWriteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlPrivateLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlProcessFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRegisterFileSystemFilterCallbacks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRegisterUncProvider": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlReleaseFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRemoveLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRemoveMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRemovePerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlRemovePerStreamContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlResetLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlSplitLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlSyncVolumes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlTeardownPerStreamContexts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlTruncateLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlTruncateMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlUninitializeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlUninitializeLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlUninitializeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_FsRtlUninitializeOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_HalDispatchTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_HalPrivateDispatchTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_HeadlessDispatch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvAcquireDisplayOwnership": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvCheckDisplayOwnership": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvEnableBootDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvEnableDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvInstallDisplayStringFilter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvIsBootDriverInstalled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvNotifyDisplayOwnershipLost": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvResetDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvSetScrollRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvSetTextColor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InbvSolidColorFill": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_InitSafeBootMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAcquireCancelSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAcquireRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAcquireVpbSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAdapterObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateAdapterChannel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateDriverObjectExtension": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAllocateWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAssignResources": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAttachDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAttachDeviceByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAttachDeviceToDeviceStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoAttachDeviceToDeviceStackSafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoBuildAsynchronousFsdRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoBuildDeviceIoControlRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoBuildPartialMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoBuildSynchronousFsdRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCancelFileOpen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCancelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckDesiredAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckEaBufferValidity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckFunctionAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckQuerySetFileInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckQuerySetVolumeInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckQuotaBufferValidity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCheckShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCompleteRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoConnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateDisk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateFileSpecifyDeviceObjectHint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateNotificationEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateStreamFileObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateStreamFileObjectEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateStreamFileObjectLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateSynchronizationEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCreateUnprotectedSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCsqInitialize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCsqInsertIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCsqRemoveIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoCsqRemoveNextIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeleteController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeleteDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeleteDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeleteSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDetachDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeviceHandlerObjectSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeviceHandlerObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDeviceObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDisconnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoDriverObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoEnqueueIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoEnumerateDeviceObjectList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoEnumerateRegisteredFiltersList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFastQueryNetworkAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFileObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoForwardAndCatchIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoForwardIrpSynchronously": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoFreeWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetAttachedDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetAttachedDeviceReference": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetBaseFileSystemDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetBootDiskInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetConfigurationInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetCurrentProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceAttachmentBaseRef": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceInterfaceAlias": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceInterfaces": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceObjectPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceProperty": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDeviceToVerify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDiskDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDmaAdapter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetDriverObjectExtension": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetFileObjectGenericMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetInitialStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetLowerDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetRelatedDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetRequestorProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetRequestorProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetRequestorSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetStackLimits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoGetTopLevelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInitializeCrashDump": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInitializeIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInitializeRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInitializeTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInvalidateDeviceRelations": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoInvalidateDeviceState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsFileOriginRemote": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsOperationSynchronous": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsValidNameGraftingBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoIsWdmVersionAvailable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoMakeAssociatedIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoOpenDeviceInterfaceRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoOpenDeviceRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoPageRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoPnPDeliverServicePowerNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueryDeviceDescription": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueryFileDosDeviceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueryFileInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueryVolumeInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueueThreadIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoQueueWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRaiseHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRaiseInformationalHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadDiskSignature": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadOperationCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadPartitionTableEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReadTransferCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterBootDriverReinitialization": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterDeviceInterface": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterDriverReinitialization": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterFileSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterFsRegistrationChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterLastChanceShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterPlugPlayNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRegisterShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReleaseCancelSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReleaseRemoveLockAndWaitEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReleaseRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReleaseVpbSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRemoveShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportDetectedDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportHalResourceUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportResourceForDetection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportResourceUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportTargetDeviceChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReportTargetDeviceChangeAsynchronous": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoRequestDeviceEject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoReuseIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetCompletionRoutineEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetDeviceInterfaceState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetDeviceToVerify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetFileOrigin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetHardErrorOrVerifyDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetIoCompletion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetPartitionInformationEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetStartIoAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetSystemPartition": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetThreadHardErrorMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSetTopLevelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStartNextPacket": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStartNextPacketByKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStartPacket": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStartTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStatisticsLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoStopTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSynchronousInvalidateDeviceRelations": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoSynchronousPageWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoThreadToProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUnregisterFileSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUnregisterFsRegistrationChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUnregisterPlugPlayNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUnregisterShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoUpdateShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoValidateDeviceIoControlAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoVerifyPartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoVerifyVolume": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoVolumeDeviceToDosName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIAllocateInstanceIds": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIDeviceObjectToInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIExecuteMethod": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIHandleToInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIOpenBlock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIQueryAllData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIQueryAllDataMultiple": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIQuerySingleInstance": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIQuerySingleInstanceMultiple": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIRegistrationControl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMISetNotificationCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMISetSingleInstance": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMISetSingleItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMISuggestInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWMIWriteEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWriteErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWriteOperationCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWritePartitionTableEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_IoWriteTransferCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdDebuggerEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdDebuggerNotPresent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdDisableDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdEnableDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdEnteredDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdPollBreakIn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KdPowerTransition": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Ke386CallBios": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Ke386IoSetAccessProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Ke386QueryIoAccessMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Ke386SetIoAccessMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAcquireInterruptSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAcquireSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAddSystemServiceTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAreApcsDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeAttachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeBugCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeBugCheckEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeCancelTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeCapturePersistentThreadState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeClearEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeConnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDcacheFlushCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDelayExecutionThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDeregisterBugCheckCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDeregisterBugCheckReasonCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDetachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeDisconnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeEnterCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeEnterKernelDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeFindConfigurationEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeFindConfigurationNextEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeFlushEntireTb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeFlushQueuedDpcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeGetCurrentThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeGetPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeGetRecommendedSharedDataAlignment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386AbiosCall": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386AllocateGdtSelectors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386Call16BitCStyleFunction": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386Call16BitFunction": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386FlatToGdtSelector": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386GetLid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386MachineType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386ReleaseGdtSelectors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386ReleaseLid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeI386SetGdtSelector": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeIcacheFlushCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInitializeTimerEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertByKeyDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertHeadQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertQueueApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeInsertQueueDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeIsAttachedProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeIsExecutingDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeLeaveCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeLoaderBlock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeNumberProcessors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeProfileInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeProfileInterruptWithSource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KePulseEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryActiveProcessors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryInterruptTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryPriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryRuntimeThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQuerySystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryTickCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeQueryTimeIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRaiseUserException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReadStateTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRegisterBugCheckCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRegisterBugCheckReasonCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseInterruptSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeReleaseSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveByKeyDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveByKeyDeviceQueueIfBusy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveEntryDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveQueueDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRemoveSystemServiceTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeResetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRestoreFloatingPointState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRevertToUserAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeRundownQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSaveFloatingPointState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSaveStateForHibernate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeServiceDescriptorTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetBasePriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetDmaIoCoherency": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetEventBoostPriority": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetIdealProcessorThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetImportanceDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetKernelStackSwapEnable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetPriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetProfileIrql": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetSystemAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTargetProcessorDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTimeIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSetTimerEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeStackAttachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeSynchronizeExecution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeTerminateThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeTickCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeUnstackDetachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeUpdateRunTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeUpdateSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeUserModeCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeWaitForMultipleObjects": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeWaitForMutexObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KeWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiBugCheckData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiCoprocessorError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiDeliverApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiDispatchInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiEnableTimerWatchdog": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiIpiServiceRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_KiUnexpectedInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LdrAccessResource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LdrEnumResources": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LdrFindResourceDirectory_U": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LdrFindResource_U": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LpcPortObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LpcRequestPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LpcRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaCallAuthenticationPackage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaDeregisterLogonProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaFreeReturnBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaLogonUser": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaLookupAuthenticationPackage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_LsaRegisterLogonProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_Mm64BitPhysicalAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAddPhysicalMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAddVerifierThunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAdjustWorkingSetSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAdvanceMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocateContiguousMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocateContiguousMemorySpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocateMappingAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocateNonCachedMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmAllocatePagesForMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmBuildMdlForNonPagedPool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmCanFileBeTruncated": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmCommitSessionMappedView": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmCreateMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmDisableModifiedWriteOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFlushImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmForceSectionClosed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreeContiguousMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreeContiguousMemorySpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreeMappingAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreeNonCachedMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmFreePagesFromMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGetPhysicalAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGetPhysicalMemoryRanges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGetSystemRoutineAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGetVirtualForPhysical": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmGrowKernelStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmHighestUserAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsAddressValid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsDriverVerifying": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsNonPagedSystemAddressValid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsRecursiveIoFault": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsThisAnNtAsSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmIsVerifierEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmLockPagableDataSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmLockPagableImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmLockPagableSectionByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapIoSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapLockedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapLockedPagesSpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapLockedPagesWithReservedMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapMemoryDumpMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapUserAddressesToPage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapVideoDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapViewInSessionSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapViewInSystemSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMarkPhysicalMemoryAsBad": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmMarkPhysicalMemoryAsGood": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmPageEntireDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmPrefetchPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmProbeAndLockPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmProbeAndLockProcessPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmProbeAndLockSelectedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmProtectMdlSystemAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmQuerySystemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmRemovePhysicalMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmResetDriverPaging": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSectionObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSecureVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSetAddressRangeModified": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSetBankedSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSizeOfMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmSystemRangeStart": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmTrimAllSystemPagableMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnlockPagableImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnlockPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapIoSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapLockedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapReservedMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapVideoDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapViewInSessionSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapViewInSystemSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnmapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUnsecureVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_MmUserProbeAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsAnsiCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsLeadByteInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsMbCodePageTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsMbOemCodePageTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsOemCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NlsOemLeadByteInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAddAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAdjustPrivilegesToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAllocateLocallyUniqueId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAllocateUuids": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtAllocateVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtBuildNumber": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtClose": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtConnectPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtCreateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDeleteAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDeleteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDeviceIoControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDuplicateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtDuplicateToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtFindAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtFreeVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtFsControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtGlobalFlag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtLockFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtMakePermanentObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtNotifyChangeDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenProcessToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenProcessTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenThreadToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtOpenThreadTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryQuotaInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQuerySecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQuerySystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtQueryVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtReadFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtRequestPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetQuotaInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetSecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtSetVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtShutdownSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtTraceEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtUnlockFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtVdmControl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_NtWriteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObAssignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCheckCreateObjectAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCheckObjectAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCloseHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCreateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObCreateObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObDereferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObDereferenceSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObFindHandleForObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObGetObjectSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObInsertObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObIsDosDeviceLocallyMapped": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObLogSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObMakeTemporaryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObOpenObjectByName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObOpenObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObQueryNameString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObQueryObjectAuditingByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReferenceObjectByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReferenceObjectByName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReferenceObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReferenceSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObReleaseObjectSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObSetHandleAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObSetSecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ObSetSecurityObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PfxFindPrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PfxInitialize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PfxInsertPrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PfxRemovePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoCancelDeviceNotify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoQueueShutdownWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRegisterDeviceForIdleDetection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRegisterDeviceNotify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRegisterSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRequestPowerIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoRequestShutdownEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoSetHiberRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoSetPowerState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoSetSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoShutdownBugCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoStartNextPowerIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PoUnregisterSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ProbeForRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ProbeForWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsAssignImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsChargePoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsChargeProcessNonPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsChargeProcessPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsChargeProcessPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsCreateSystemProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsCreateSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsDereferenceImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsDereferencePrimaryToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsDisableImpersonation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsEstablishWin32Callouts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetContextThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentProcessSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThreadPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThreadStackBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetCurrentThreadStackLimit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetJobLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetJobSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetJobUIRestrictionsClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessCreateTimeQuadPart": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessDebugPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessExitProcessCalled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessExitStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessExitTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessImageFileName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessInheritedFromUniqueProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessJob": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessPeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessPriorityClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessSectionBaseAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessSecurityPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessWin32Process": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetProcessWin32WindowStation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadFreezeCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadHardErrorsAreDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadTeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetThreadWin32Thread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsGetVersion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsImpersonateClient": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsInitialSystemProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsIsProcessBeingDebugged": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsIsSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsIsThreadImpersonating": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsIsThreadTerminating": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsJobType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsLookupProcessByProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsLookupProcessThreadByCid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsLookupThreadByThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsProcessType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReferenceImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReferencePrimaryToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRemoveCreateThreadNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRemoveLoadImageNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRestoreImpersonation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReturnPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReturnProcessNonPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsReturnProcessPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRevertThreadToSelf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsRevertToSelf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetContextThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetCreateProcessNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetCreateThreadNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetJobUIRestrictionsClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetLegoNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetLoadImageNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessPriorityByClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessPriorityClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessSecurityPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessWin32Process": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetProcessWindowStation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetThreadHardErrorsAreDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsSetThreadWin32Thread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsTerminateSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_PsThreadType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_BUFFER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_BUFFER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_BUFFER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_READ_REGISTER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAbsoluteToSelfRelativeSD": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddAccessAllowedAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddAccessAllowedAceEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddAtomToAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAddRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAllocateHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAnsiCharToUnicodeChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAnsiStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAnsiStringToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAppendAsciizToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAppendStringToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAppendUnicodeStringToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAppendUnicodeToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAreAllAccessesGranted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAreAnyAccessesGranted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAreBitsClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAreBitsSet": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlAssert": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCaptureContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCaptureStackBackTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCharToInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCheckRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlClearAllBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlClearBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompareMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompareMemoryUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompareString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompareUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompressBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCompressChunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlConvertLongToLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlConvertSidToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlConvertUlongToLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopyLuid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopyRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopySid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopyString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCopyUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateAcl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateSystemVolumeInformationFolder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCreateUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlCustomCPToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDecompressBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDecompressChunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDecompressFragment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDelete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteAtomFromAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteNoSplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteOwnersRanges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDeleteRegistryValue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDescribeChunk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDestroyAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDestroyHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlDowncaseUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEmptyAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnlargedIntegerMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnlargedUnsignedDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnlargedUnsignedMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTableLikeADirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTableWithoutSplaying": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEnumerateGenericTableWithoutSplayingAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEqualLuid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEqualSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEqualString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlEqualUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlExtendedIntegerMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlExtendedLargeIntegerDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlExtendedMagicDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFillMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFillMemoryUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindClearBitsAndSet": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindClearRuns": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindFirstRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindLastBackwardRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindLeastSignificantBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindLongestRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindMessage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindMostSignificantBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindNextForwardRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindSetBitsAndClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFindUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFormatCurrentUserKeyPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlFreeUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGUIDFromString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGenerate8dot3Name": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetCallersAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetCompressionWorkSpaceSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetDaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetDefaultCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetFirstRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetGroupSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetNextRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetNtGlobalFlags": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetOwnerSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetSaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetSetBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlGetVersion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlHashUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlImageDirectoryEntryToData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlImageNtHeader": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitCodePageTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeBitMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInitializeUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertElementGenericTableFull": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertElementGenericTableFullAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInsertUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInt64ToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIntegerToChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIntegerToUnicode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIntegerToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlInvertRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4AddressToStringA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4AddressToStringExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4AddressToStringExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4AddressToStringW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4StringToAddressA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4StringToAddressExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4StringToAddressExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv4StringToAddressW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6AddressToStringA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6AddressToStringExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6AddressToStringExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6AddressToStringW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6StringToAddressA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6StringToAddressExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6StringToAddressExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIpv6StringToAddressW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsGenericTableEmpty": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsGenericTableEmptyAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsNameLegalDOS8Dot3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsRangeAvailable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlIsValidOemCharacter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerAdd": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerArithmeticShift": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerNegate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerShiftLeft": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerShiftRight": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLargeIntegerSubtract": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLengthRequiredSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLengthSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLengthSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLockBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupElementGenericTableFull": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlLookupElementGenericTableFullAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMapGenericMask": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMapSecurityErrorToNtStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMergeRangeLists": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMoveMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMultiByteToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlMultiByteToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNextUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNtStatusToDosError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNtStatusToDosErrorNoTeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNumberGenericTableElements": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNumberGenericTableElementsAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNumberOfClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlNumberOfSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlOemStringToCountedUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlOemStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlOemStringToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlOemToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlPinAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlPrefixString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlPrefixUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlQueryAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlQueryRegistryValues": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlQueryTimeZoneInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRaiseException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRandom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRandomEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRealPredecessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRealSuccessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlRemoveUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlReserveChunk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSecondsSince1970ToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSecondsSince1980ToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSelfRelativeToAbsoluteSD2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSelfRelativeToAbsoluteSD": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetAllBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetDaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetGroupSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetOwnerSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetSaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSetTimeZoneInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSizeHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlStringFromGUID": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSubAuthorityCountSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSubAuthoritySid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSubtreePredecessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlSubtreeSuccessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTestBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeFieldsToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeToElapsedTimeFields": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeToSecondsSince1970": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeToSecondsSince1980": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTimeToTimeFields": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseAdd": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseCreate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseDestroy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseEnumerate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseFind": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseUnlock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlTraceDatabaseValidate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToAnsiSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToCountedOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToOemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeStringToOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeToCustomCPN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeToMultiByteN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeToMultiByteSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnicodeToOemN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnlockBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUnwind": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeStringToAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeStringToCountedOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeStringToOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeToCustomCPN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeToMultiByteN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpcaseUnicodeToOemN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpperChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlUpperString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlValidRelativeSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlValidSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlValidSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlVerifyVersionInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlVolumeDeviceToDosName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlWalkFrameChain": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlWriteRegistryValue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlZeroHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlZeroMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlxAnsiStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlxOemStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlxUnicodeStringToAnsiSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_RtlxUnicodeStringToOemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAccessCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAppendPrivileges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAssignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAssignSecurityEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditHardLinkCreation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingFileEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingFileEventsWithContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingFileOrGlobalEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingHardLinkEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeAuditingHardLinkEventsWithContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCaptureSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCaptureSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCloseObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCreateAccessState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCreateClientSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeCreateClientSecurityFromSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeDeassignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeDeleteAccessState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeDeleteObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeExports": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeFilterToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeFreePrivileges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeImpersonateClient": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeImpersonateClientEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeLockSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeMarkLogonSessionForTerminationNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeOpenObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeOpenObjectForDeleteAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SePrivilegeCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SePrivilegeObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SePublicDefaultDacl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeQueryAuthenticationIdToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeQuerySecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeQuerySessionIdToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeRegisterLogonSessionTerminatedRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeReleaseSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeReleaseSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSetAccessStateGenericMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSetSecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSetSecurityDescriptorInfoEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSinglePrivilegeCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeSystemDefaultDacl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenImpersonationLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenIsAdmin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenIsRestricted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenIsWriteRestricted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeTokenType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeUnlockSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeUnregisterLogonSessionTerminatedRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_SeValidSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VerSetConditionMask": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VfFailDeviceNode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VfFailDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VfFailSystemBIOS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_VfIsVerificationEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_BUFFER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_BUFFER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_BUFFER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WRITE_REGISTER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiFlushTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiQueryTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiQueryTraceInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiStartTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiStopTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiTraceMessage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiTraceMessageVa": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_WmiUpdateTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_XIPDispatch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAccessCheckAndAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAddBootEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAdjustPrivilegesToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAlertThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAllocateVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwAssignProcessToJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCancelIoFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCancelTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwClearEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwClose": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCloseObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwConnectPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateSymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwCreateTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeleteBootEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeleteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeleteKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeleteValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDeviceIoControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDuplicateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwDuplicateToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwEnumerateBootEntries": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwEnumerateKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwEnumerateValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFlushInstructionCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFlushKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFlushVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFreeVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwFsControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwInitiatePowerAction": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwIsProcessInJob": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwLoadDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwLoadKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwMakeTemporaryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwNotifyChangeKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenProcessToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenProcessTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenSymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenThreadToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenThreadTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwOpenTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwPowerInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwPulseEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryBootEntryOrder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryBootOptions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryDefaultLocale": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryDefaultUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryFullAttributesFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryInstallUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQuerySection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQuerySecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQuerySymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQuerySystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwQueryVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwReadFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwReplaceKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwResetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwRestoreKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSaveKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSaveKeyEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetBootEntryOrder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetBootOptions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetDefaultLocale": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetDefaultUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetSecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetSystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwSetVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwTerminateJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwTerminateProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwTranslateFilePath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwUnloadDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwUnloadKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwUnmapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwWaitForMultipleObjects": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwWriteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_ZwYieldExecution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__CIcos": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__CIsin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__CIsqrt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__abnormal_termination": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__alldiv": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__alldvrm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__allmul": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__alloca_probe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__allrem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__allshl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__allshr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__aulldiv": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__aulldvrm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__aullrem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__aullshr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__except_handler2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__except_handler3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__global_unwind2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__itoa": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__itow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__local_unwind2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__purecall": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__snprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__snwprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__stricmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strlwr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strnicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strnset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__strupr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__vsnprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__vsnwprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcslwr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsnicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsnset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe__wcsupr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_atoi": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_atol": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isdigit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_islower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isprint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isspace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_isxdigit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_mbstowcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_mbtowc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_memchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_memcpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_memmove": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_memset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_qsort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_rand": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_sprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_srand": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strcat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strcmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strcpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strlen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strncat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strncmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strncpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strrchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_strstr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_swprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_tolower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_toupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_towlower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_towupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_vDbgPrintEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_vDbgPrintExWithPrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_vsprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcscat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcschr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcscmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcscpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcscspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcslen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsncat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsncmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsncpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsrchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcsstr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wcstombs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntoskrnl.exe_wctomb": 1,
                "section=.data type=utf16le string=&I4IBI": 1,
                "section=.data type=utf16le string=I^I\u620aA\u6218AjI\u6218A blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=PI\u944cV\u8406V\u6226A\u6226A\u623aA blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=\\SystemRoot\\System32\\smss.exe": 1,
                "section=.data type=utf32le string=\\t\\n\\v\\f\\f": 1,
                "section=.data type=utf16le string=\\DRIVER\\VERIFIER": 1,
                "section=.data type=utf8 string=X9x}.A": 1,
                "section=.data type=utf16le string=InvalidTag": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=NT Kernel & System": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2111)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=ntkrnlpa.exe": 2,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le string= \\r\uee04\u6d02\uee04\u6002 blocks=Basic Latin,Private Use Area,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string= n\uee0c\u0400\u62ed blocks=Basic Latin,Private Use Area,Cyrillic,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string= n\uee06\ue202\\f\u6e02\uee08\u0400\u02e2\uee04\ued02\\n\u0400 blocks=Basic Latin,Private Use Area,CJK Unified Ideographs,Cyrillic,Spacing Modifier Letters": 1,
                "section=.rsrc type=utf16le string=`L\u0400\u4401\u7c04\ucc18 blocks=Basic Latin,Cyrillic,CJK Unified Ideographs Extension A,CJK Unified Ideographs,Hangul Syllables": 1,
                "section=.rsrc type=utf16le string= H\u0400\u4701\u7704 blocks=Basic Latin,Cyrillic,CJK Unified Ideographs Extension A,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf8 string=\\b\u071c\u071c\\b blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf16le string=\\f\u00f0\u00f0\u06f0 blocks=Basic Latin,Latin-1 Supplement,Arabic": 1,
                "section=.rsrc type=utf16le string=p\\a\uff06\ue002 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area": 1,
                "section=.rsrc type=utf16le string=p?\uff04\uf702\\n\uef02\uff04 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area": 1,
                "section=.rsrc type=utf16le string=p\u00ef\uff04\uf302\\n\u7f02\uff04 blocks=Basic Latin,Latin-1 Supplement,Halfwidth and Fullwidth Forms,Private Use Area,CJK Unified Ideographs": 2,
                "section=.rsrc type=utf16le string=p\u00ef\uff04\uf202\\n\u3f02\uff04 blocks=Basic Latin,Latin-1 Supplement,Halfwidth and Fullwidth Forms,Private Use Area,CJK Unified Ideographs Extension A": 2,
                "section=.rsrc type=utf16le string=p\u00ef\uff04\uf002\\n\u7f02\uff04 blocks=Basic Latin,Latin-1 Supplement,Halfwidth and Fullwidth Forms,Private Use Area,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=p?\uff04\u0400\u07f3\uff04\u0400\u0720\uff04\u0400 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Cyrillic,NKo,Syriac": 1,
                "section=.rsrc type=utf16le string=p\u00ef\uff04\u0400\u02e0\uff04\u0400\u3f70\uff04\u0400\u0370\uff04\u0800\u00e2\uef02\uff0e\u0400 blocks=Basic Latin,Latin-1 Supplement,Halfwidth and Fullwidth Forms,Cyrillic,Spacing Modifier Letters,CJK Unified Ideographs Extension A,Greek and Coptic,Samaritan,Private Use Area": 1,
                "section=.rsrc type=utf16le /\uff04\ue002 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area": 1,
                "section=.rsrc type=utf16le /\uff04\u0400 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Cyrillic": 1,
                "section=.rsrc type=utf16le string=r?\uff04\ue002\\n blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area": 1,
                "section=.rsrc type=utf16le string=r\\b\u3306\u3002\\b\u0302\u3304\u3002\\b\u0302\u3304\u2002 blocks=Basic Latin,CJK Compatibility,CJK Symbols and Punctuation,Combining Diacritical Marks,General Punctuation": 1,
                "section=.rsrc type=utf8 string=\\b\u0608U \\e blocks=Basic Latin,Arabic": 1,
                "section=.rsrc type=utf16le string= @\u0402\u4404 blocks=Basic Latin,Cyrillic,CJK Unified Ideographs Extension A": 1,
                "section=.rsrc type=utf8 string=\\b\u0208UP\\v blocks=Basic Latin,Latin Extended-B": 1,
                "section=.rsrc type=utf8 string=\\b\u020cU \\t blocks=Basic Latin,Latin Extended-B": 1,
                "section=.rsrc type=utf16le string= \\f\u0400\uff0f\u2208\u0800\u0121\u60ff blocks=Basic Latin,Cyrillic,Halfwidth and Fullwidth Forms,Mathematical Operators,Samaritan,Latin Extended-A,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string= \\b\u0400\uff0f\\f blocks=Basic Latin,Cyrillic,Halfwidth and Fullwidth Forms": 1,
                "section=.rsrc type=utf16le string=`\\b\u0400\u621e blocks=Basic Latin,Cyrillic,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=`\\b\u0400\ue66fR\u0400\uff0f@\u0400\uf62f blocks=Basic Latin,Cyrillic,Private Use Area,Halfwidth and Fullwidth Forms": 1,
                "section=.rsrc type=utf16le string=`R\u0400\uff0f\u220a\u2102, blocks=Basic Latin,Cyrillic,Halfwidth and Fullwidth Forms,Mathematical Operators,Letterlike Symbols": 1,
                "section=.rsrc type=utf8 string=\u0687e\"\"\"\"\"\"\"\"\"fR\"\"b\"\"\"\"\"\"\"e\"\"\"\"\"\"\"\"&e\"\"\"\"\"\"\"\"\"& blocks=Arabic,Basic Latin": 1,
                "section=.rsrc type=utf8 string=\"k\u0782n\"\"\" blocks=Basic Latin,Thaana": 1,
                "section=.rsrc type=utf8 string=R\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\ua657\"\"\"\"\"\"\"\")b blocks=Basic Latin,Cyrillic Extended-B": 1,
                "arch     x86": 1,
                "binsz    2065792": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x001f9273": 1,
                "compiled Sun Apr 13 19:31:06 2008": 1,
                "crypto   false": 1,
                "dbg_file ntkrnlpa.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x00204e7e": 1,
                "guid     30B5FB31AE7E4ACAABA750AA241FF3311": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       native": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Native": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x19": 1,
                "TimeDateStamp : 0x4802516a": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x12e": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0x19ee00": 1,
                "SizeOfInitializedData : 0x59180": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x600": 1,
                "BaseOfData : 0x6e800": 1,
                "ImageBase : 0x400000": 1,
                "SectionAlignment : 0x80": 1,
                "FileAlignment : 0x80": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x5": 1,
                "MinorSubsystemVersion : 0x1": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x1f8580": 1,
                "SizeOfHeaders : 0x600": 1,
                "CheckSum : 0x204e7e": 1,
                "Subsystem : 0x1": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x40000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x18d280": 1,
                "Size : 0xb5a2": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x1d6ffc": 1,
                "Size : 0x50": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x1d7900": 1,
                "Size : 0x106f8": 1,
                "IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "VirtualAddress : 0x1e8000": 1,
                "Size : 0xfd3c": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x760": 1,
                "Size : 0x1c": 1,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0x9530": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x600": 1,
                "Size : 0x154": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "hal.dll": 1,
                "bootvid.dll": 1,
                "kdcom.dll": 1,
                "2065792": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x1": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: NT Kernel & System": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2111)": 1,
                "InternalName: ntkrnlpa.exe": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: ntkrnlpa.exe": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}