{
    "filepath": "/corpus/benign/d9fcf8051179f9a6ed0a1ee42c62320ea3fde31d",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "2709466d4165f71d13a7b2f117026110"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "movl $, (%esp);calll *;subl $, %esp;movl %eax, %ebx;movl %esi, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <FT_Stream_OpenLZW+>;movb $, (%ebx)": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp;retl": 93,
                "movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %ebx;movl $, (%esp);calll  <.text+>": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);calll  <FT_New_Memory_Face>;testl %eax, %eax;je  <.text+>;movl $, (%esp)": 3,
                "movl $, (%esp);calll *;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 2,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);testl %edi, %edi": 1,
                "movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <FT_Select_Charmap>;addl $, %ebx": 1,
                "movl %edi, (%esp);movl $, (%esp);calll  <.text+>;movl %esi, %eax;movl -(%ebp), %ebx": 1,
                "subl $, %esp;movl %edi, (%esp);calll *;subl $, %esp;movl $, %eax": 1,
                "popl %ebx;popl %esi;popl %edi;popl %ebp;retl $": 3,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %esi;movl $, (%esp);calll  <.text+>": 1,
                "movl (%ebp), %esi;movl $, (%esp);calll  <.text+>;cmpl %esi, (%ebx);jb  <.text+>": 1,
                "movl $, %esi;jmp  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp);subl $, %esi": 1,
                "movl %eax, (%esp);calll  <FT_Done_Face>;movl $, %esi;jmp  <.text+>;movl %eax, %esi": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);movb $, (%eax)": 2,
                "jne - <.text+>;movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movb $, (%ebx)": 1,
                "movzwl (%edx), %edi;movw %di, (%ebx);negl %edi;movw %di, (%ebx);movw %cx, (%ebx)": 1,
                "movw %cx, (%ebx);movl %eax, %ecx;shrw $, %cx;addl %eax, %ecx;sarw %cx": 1,
                "movl (%edx), %eax;movl %eax, (%ebx);movl (%edx), %eax;movl %eax, (%ebx);movb $, (%ebx)": 1,
                "movw $, (%ebx);movw $, (%ebx);movw $, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl (%edx), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 3,
                "movl (%ebp), %ebx;movl $, (%esp);calll  <.text+>;cmpl $, (%ebp);jbe  <.text+>": 1,
                "jmp  <.text+>;movl $, %eax;addl $, %esp;popl %ebx;popl %ebp": 1,
                "movl $, %eax;addl $, %esp;popl %ebx;popl %ebp;retl $": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;subl $, %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;jne  <.text+>;movl $, (%esp);calll  <.text+>;movl $, %esi": 1,
                "addl $, %edi;addl $, %esi;testl %ebx, %ebx;je  <.text+>;cmpl %edi, -(%ebp)": 1,
                "movl $, %edi;subl $, %edi;movl %edi, -(%ebp);movl -(%ebp), %edx;leal (%edi,%edx,), %ebx": 1,
                "leal (%esi,%edx,), %edi;movl -(%ebp), %edx;movl (%edx), %eax;movw %ax, (%esi);movw $, (%esi)": 1,
                "cmpl %eax, -(%ebp);jne - <.text+>;movl -(%ebp), %esi;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "je  <.text+>;movl %esi, (%eax);addl $, %ebx;movl -(%edi), %eax;cmpl %esi, %eax": 1,
                "calll  <FT_Stream_OpenLZW+>;subl $, %edi;movl %edi, (%esp);calll *;subl $, %esp": 1,
                "leave;retl;nop;nop;nop": 10,
                "movl $, %ebx;leal (%ebx,%ebx,), %ebx;movsbl %cl, %ecx;leal -(%ecx,%ebx,), %ebx;movl %edx, (%eax)": 1,
                "movsbl %cl, %ecx;leal -(%ecx,%ebx,), %ebx;movl %edx, (%eax);movzbl (%edx), %ecx;addl $, %edx": 1,
                "subl $, %esp;movl %eax, %ebx;movl %edx, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi": 1,
                "movl $, -(%ebp);testb $, (%ebp);je  <.text+>;movl $, -(%ebp);testb $, (%ebp)": 1,
                "testl %edi, %edi;jns  <.text+>;negl %esi;adcl $, %edi;negl %edi": 1,
                "je  <.text+>;subl $, (%ebp);movb $, -(%ebp);movl (%ebp), %ecx;andl $, %ecx": 1,
                "movl $, %ebx;movl %esi, -(%ebp);movl %edi, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %edx, (%esp)": 1,
                "cmpb $, -(%ebp);je  <.text+>;cmpl -(%ebp), %ebx;ja  <.text+>;movzbl -(%ebp), %ecx": 1,
                "cmpl $, (%ebp);jne  <.text+>;cmpl -(%ebp), %ebx;ja  <.text+>;movb $, (%ebx)": 1,
                "leal -(%esi), %edx;testl %esi, %esi;jle  <.text+>;leal (%ebx,%esi), %edx;movl %eax, %esi": 1,
                "leal (%ebx,%esi), %edx;movl %eax, %esi;movzbl -(%ebp), %eax;movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "testl %esi, %esi;jle  <.text+>;leal (%ebx,%esi), %eax;movl -(%ebp), %edx;cmpl %ebx, %edx": 1,
                "cmpl $, %esi;sbbl %esi, %esi;andl $-, %esi;addl $, %esi;testl %ecx, %ecx": 2,
                "ja  <.text+>;leal (%esi), %esi;jmp  <.text+>;movl $, %ebx;movl $, %ecx": 1,
                "movl $, %ecx;jmp  <.text+>;movl $, %ebx;jmp  <.text+>;movl $, %ebx": 2,
                "movl %edi, %ebx;testb $, (%ebp);jne  <.text+>;movl (%ebp), %edi;subl $, %edi": 2,
                "movl %esi, %ecx;movl -(%ebp), %esi;cmpl %eax, %edx;jb  <.text+>;movb %cl, (%eax)": 2,
                "addl $, %eax;cmpl %esi, %eax;jne - <.text+>;movl %edi, %ebx;cmpl (%ebp), %ebx": 2,
                "subl %ebx, %ecx;addl %eax, %ecx;cmpl %eax, %edx;jb  <.text+>;movb $, (%eax)": 2,
                "testl %edi, %edi;je  <.text+>;cmpw $, (%ecx);je  <.text+>;movl $, %ebx": 1,
                "addl $, %ebx;cmpl %edi, %ebx;je  <.text+>;cmpw $, (%ecx,%ebx,);jne - <.text+>": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;leal -(%esi,%ebx), %ebx;movl %ebx, -(%ebp);movl %esi, %eax": 1,
                "movl $, -(%ebp);movl (%ebp), %eax;movzbl (%eax), %eax;testb %al, %al;je  <.text+>": 1,
                "orl $, %ebx;jmp - <.text+>;orl $, %ebx;nop;jmp - <.text+>": 1,
                "jne  <.text+>;addl $, %eax;movl %eax, (%ebp);movl (%ebp), %eax;addl $, %eax": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);movl %eax, (%ebp);testl %edx, %edx;jns  <.text+>": 1,
                "movl %edx, (%ebp);movzbl (%eax), %edx;movsbl %dl, %ecx;subl $, %ecx;cmpl $, %ecx": 1,
                "addl $, %ecx;movl %ecx, (%ebp);orb $, %bh;movl (%ebp), %esi;movzbl (%esi), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 7,
                "cmpl %eax, %edi;jne - <.text+>;movl $, -(%ebp);jmp  <.text+>;movl %eax, -(%ebp)": 1,
                "jmp  <.text+>;movl %eax, -(%ebp);cmpl $, %edx;jne  <.text+>;cmpl -(%ebp), %edi": 1,
                "jne  <.text+>;cmpl -(%ebp), %edi;ja  <.text+>;movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "jne  <.text+>;movl (%ebp), %esi;addl $, %esi;movl %ebx, (%esp);movl -(%ebp), %eax": 2,
                "jmp  <.text+>;movl (%ebp), %esi;addl $, %esi;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl (%ecx), %eax;testl %eax, %eax;je  <.text+>;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "movl %esi, (%ebp);jmp  <.text+>;cmpl $-, -(%ebp);je  <.text+>;orl $, %ebx": 1,
                "cmpl $, %edx;jne  <.text+>;movl (%ebp), %esi;movl (%esi), %eax;movl %edi, %edx": 1,
                "andw $, %ax;cmpw $, %ax;jne  <.text+>;movl -(%ebp), %eax;testl $, %eax": 1,
                "movl -(%ebp), %esi;movl %esi, (%ebp);jmp  <.text+>;movl $, -(%ebp);fnstcw -(%ebp)": 1,
                "fnstcw -(%ebp);movzwl -(%ebp), %eax;movb $, %ah;movw %ax, -(%ebp);fldl -(%ebp)": 1,
                "movb $, %ah;movw %ax, -(%ebp);fldl -(%ebp);fldcw -(%ebp);fistpl -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %esi, %ebx;jmp  <.text+>;fnstcw -(%ebp)": 1,
                "movzwl -(%ebp), %eax;movb $, %ah;movw %ax, -(%ebp);fldcw -(%ebp);fistpll -(%ebp)": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edi;movl $, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "movl %esi, (%esp);movl %edi, (%esp);calll  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "jne  <.text+>;leal -(%ecx), %edx;testl %ecx, %ecx;jle  <.text+>;addl %edi, %ecx": 2,
                "addl %edi, %ecx;movl -(%ebp), %edx;cmpl %edi, %edx;jb  <.text+>;movb $, (%edi)": 1,
                "movl -(%ebp), %ebx;movl %ecx, -(%ebp);cmpl %eax, %ebx;jb  <.text+>;movzbl (%edx), %ecx": 1,
                "orl $, %ebx;movl $, %ecx;jmp  <.text+>;orl $, %ebx;movl $, %ecx": 1,
                "jmp  <.text+>;movl (%ebp), %esi;movl (%esi), %eax;movl $, %edx;leal (%esi), %esi": 3,
                "movl (%esi), %eax;movl $, %edx;leal (%esi), %esi;movl %esi, (%ebp);jmp  <.text+>": 2,
                "leal (%esi), %esi;movl %esi, (%ebp);jmp  <.text+>;testb $, %bl;je  <.text+>": 1,
                "movl -(%ebp), %esi;movl %esi, (%esp);movl %ecx, (%esp);movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movl %ecx, (%esp);movl %eax, (%esp);movl %edx, (%esp);movl -(%ebp), %edx;movl %edi, %eax": 1,
                "calll - <.text+>;movl %eax, %edi;movl (%ebp), %eax;leal (%eax), %edx;movl %edx, (%ebp)": 1,
                "leal (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 12,
                "nop;nop;pushl %ebp;movl %esp, %ebp;subl $, %esp": 5,
                "movl %eax, %ebx;movl $, %esi;movl $, %eax;addl %ebx, %ebx;addl %eax, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%eax), %ebx": 3,
                "movzbl %dl, %edx;addl %edx, %eax;movl %ebx, (%ecx);movl %eax, (%ecx);movl -(%ebp), %ebx": 1,
                "pushl %ebx;movswl (%eax), %ecx;leal (,%ecx,), %edx;movl (%eax), %ebx;addl %edx, %ebx": 1,
                "subl $, %edx;cmpl %edx, %ebx;jbe - <.text+>;jmp  <.text+>;movl (%esi), %edx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movzwl (%eax), %edx;movl (%ebp), %eax": 4,
                "movl %ebx, %eax;testl %ecx, %ecx;jns  <.text+>;negl %eax;movl -(%ebp), %ebx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %eax, -(%ebp);movl %eax, %ecx": 1,
                "movl %eax, %ecx;movl (%eax), %eax;movl (%ecx), %ecx;cmpl $, %edx;jl  <.text+>": 1,
                "movl %edi, %ecx;movl %eax, %edi;negl %edi;addl $, %edx;movl %ecx, %eax": 1,
                "jns  <.text+>;movl -(%ebp), %esi;addl %ebx, %esi;movl %esi, %edi;sarl %cl, %edi": 1,
                "movl %edi, -(%ebp);subl %esi, %eax;addl %ebx, %ebx;addl $, %ecx;cmpl $, %ecx": 1,
                "movl %edx, %ebx;movl $, -(%ebp);jmp  <.text+>;testl %eax, %eax;jle  <.text+>": 1,
                "jmp  <.text+>;testl %eax, %eax;jle  <.text+>;leal (%eax,%edx), %esi;sarl %cl, %esi": 1,
                "addl $, %eax;andl $-, %eax;jmp  <.text+>;movl $, %eax;subl -(%ebp), %eax": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax": 7,
                "js  <FT_RoundFix+>;addl $, %eax;movw $, %ax;jmp  <FT_RoundFix+>;movl $, %edx": 1,
                "jmp  <FT_RoundFix+>;movl $, %edx;subl %eax, %edx;movl %edx, %eax;movw $, %ax": 1,
                "movw $, %ax;jmp  <FT_FloorFix+>;negl %eax;movw $, %ax;negl %eax": 1,
                "shrl $, %edx;addl $, %eax;cmpl $, %edx;jbe  <FT_FloorFix+>;shrl $, %edx": 2,
                "sarl $, %eax;movl %eax, %ecx;xorl %edi, %ecx;subl %eax, %ecx;movl %ecx, %eax": 1,
                "movl %ecx, %eax;negl %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 2,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %eax": 18,
                "movl %eax, %edx;sarl $, %edx;idivl %ebx;jmp  <FT_MulDiv+>;movl $, %eax": 2,
                "movl $, -(%ebp);movl %ebx, %eax;sarl %eax;movl %eax, -(%ebp);leal -(%ebp), %ecx": 2,
                "leal -(%ebp), %ecx;leal -(%ebp), %edx;movl %ecx, %eax;calll - <.text+>;movl %ebx, %ecx": 2,
                "leal -(%ebp), %edx;movl %ecx, %eax;calll - <.text+>;movl %ebx, %ecx;movl -(%ebp), %edx": 2,
                "movl %eax, (%esp);calll - <FT_MulDiv>;movl %eax, (%esi,%ebx,);addl $, %ebx;cmpl -(%ebp), %ebx": 1,
                "cmpl $, %edx;jg  <FT_MulDiv+>;cmpl $, %edi;jg  <FT_MulDiv+>;movl $, %eax": 1,
                "testl %eax, %eax;jne  <FT_DivFix+>;movl %ebx, %eax;sarl %eax;shll $, %edi": 1,
                "testl %esi, %esi;je  <FT_Matrix_Multiply+>;movl (%ebx), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "je  <FT_Matrix_Invert+>;movl %esi, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <FT_DivFix>": 1,
                "movl %esi, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <FT_DivFix>;negl %eax": 2,
                "addl %eax, %edi;movl %edi, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <FT_MulDiv>;movl %eax, -(%ebp)": 2,
                "movl $, %ecx;movl $, %edx;movl $, %eax;shll $, %edx;movl %ebx, %esi": 1,
                "shll $, %ebx;addl %eax, %eax;leal (%eax,%eax), %esi;cmpl %esi, %edx;jb  <FT_Matrix_Invert+>": 1,
                "jne - <FT_Matrix_Invert+>;jmp  <FT_Matrix_Invert+>;movl $, %eax;popl %ebx;popl %esi": 1,
                "testl %ebx, %ebx;jne  <FT_Matrix_Invert+>;movl (%ebp), %eax;testl %esi, %esi;jns  <FT_Matrix_Invert+>": 1,
                "jne  <FT_Matrix_Invert+>;movl %ebx, %eax;cmpl $, (%ebp);jns  <FT_Matrix_Invert+>;negl %eax": 1,
                "cmpl $, (%ebp);jne  <FT_Matrix_Invert+>;movl %esi, %eax;cmpl $, (%ebp);js  <FT_Matrix_Invert+>": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %eax;leal (%eax,%ecx), %edi;movl (%ebp), %esi": 1,
                "movw $, (%eax);movl $, (%eax);movl (%eax), %edx;movl %edx, (%eax);movl (%eax), %edx": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;movw $, (%ebx);movw $, (%ebx)": 1,
                "pushl %ebx;movl (%ebp), %ebx;movw $, (%ebx);movw $, (%ebx);movl $, (%ebx)": 1,
                "movw $, (%ebx);movw $, (%ebx);movl $, (%ebx);movl %ebx, %eax;calll - <.text+>": 1,
                "movl %ebx, %eax;calll - <.text+>;popl %ebx;popl %ebp;retl": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <FT_Matrix_Invert+>;movzwl (%ecx), %eax;movswl %ax, %ebx": 1,
                "movzwl (%ecx), %eax;movswl %ax, %ebx;movzwl (%ecx), %edx;movswl %dx, %esi;addw (%ecx), %dx": 1,
                "testl %esi, %esi;je  <FT_Matrix_Invert+>;testl %ebx, %ebx;je  <FT_Matrix_Invert+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;jmp  <FT_Matrix_Invert+>;addl $, %ebx;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jne - <FT_Matrix_Invert+>;jmp  <FT_Matrix_Invert+>;movl $, %eax": 1,
                "jmp  <FT_Matrix_Invert+>;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl %edx, (%eax);movl $, (%eax);popl %ebp;retl;pushl %ebp": 1,
                "movl %esp, %ebp;movl $, %eax;popl %ebp;retl;pushl %ebp": 10,
                "testl %eax, %eax;jne  <FT_Set_Transform+>;movl $, (%ecx);movl $, (%ecx);movl $, (%ecx)": 1,
                "movl $, (%ecx);movl $, (%ecx);movl %ecx, %eax;jmp  <FT_Set_Transform+>;movl (%eax), %edx": 1,
                "movl (%ebp), %edx;cmpl $, (%edx);jne  <FT_Set_Transform+>;movl (%edx), %eax;testl %eax, %eax": 1,
                "andl $-, %esi;movl (%ecx), %ebx;testl %ebx, %ebx;jle  <FT_Set_Transform+>;movl (%ecx), %edx": 1,
                "cmpl %ebx, %eax;jne - <FT_Set_Transform+>;movl $, %eax;jmp  <FT_Set_Transform+>;movl $, %eax": 1,
                "sarl $, %esi;subl %esi, %edx;movl (%ecx), %eax;movl %eax, %esi;shrl $, %esi": 1,
                "subl %esi, %edx;movl (%ecx), %eax;movl %eax, %esi;shrl $, %esi;addl %esi, %eax": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edi;movl (%edi), %ebx": 3,
                "subl (%eax), %ecx;movl %eax, %edx;movl (%eax), %eax;subl (%edx), %eax;jmp  <FT_Set_Transform+>": 1,
                "movl (%ebx), %edx;movl %edx, (%esi);testl %eax, %eax;jne  <FT_Set_Transform+>;movl %edx, (%esi)": 1,
                "movl (%ebx), %edi;cmpl $, (%ebx);je  <FT_Set_Transform+>;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "cmpl %edx, %eax;jle  <FT_Set_Transform+>;movl %edx, (%esi);jmp  <FT_Set_Transform+>;movl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_MulDiv>;movl %eax, %edi;jmp  <FT_Set_Transform+>": 1,
                "movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <FT_MulDiv>": 1,
                "movzwl (%ecx), %eax;movl %eax, (%esp);calll - <FT_MulFix>;movl %eax, %edi;movl -(%ebp), %eax": 1,
                "movl $, %ecx;movl $, %ebx;testb $, %dl;je  <FT_Set_Transform+>;movb $, (%esi)": 1,
                "testb $, %dl;je  <FT_Set_Transform+>;movb $, (%esi);movl -(%ebp), %edx;addl $, %edx": 1,
                "je  <FT_Select_Size+>;movl %ecx, (%esp);movl (%edx), %edx;movl %edx, (%esp);calll *%eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %edx": 5,
                "cmpl $, %eax;jne  <FT_Request_Size+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);calll - <FT_Set_Transform+>;movl %eax, %edx;testl %edx, %edx;jne  <FT_Request_Size+>": 1,
                "calll - <FT_Select_Size>;jmp  <FT_Request_Size+>;movl %edx, (%esp);movl %ebx, (%esp);calll - <FT_Set_Transform+>": 1,
                "nop;jmp  <FT_Set_Char_Size+>;movl %edx, %ecx;testl %eax, %eax;je  <FT_Set_Char_Size+>": 1,
                "movl %eax, %edx;jmp  <FT_Set_Pixel_Sizes+>;movl $, %edx;movl $, %eax;jmp  <FT_Set_Pixel_Sizes+>": 1,
                "movl %eax, (%esp);calll - <FT_Request_Size>;jmp  <FT_Set_Pixel_Sizes+>;movl %edx, %eax;testl %eax, %eax": 1,
                "calll - <FT_Request_Size>;jmp  <FT_Set_Pixel_Sizes+>;movl %edx, %eax;testl %eax, %eax;jne - <FT_Set_Pixel_Sizes+>": 1,
                "je  <FT_Get_Kerning+>;movb $, %bl;testl %esi, %esi;je  <FT_Get_Kerning+>;movl (%edi), %eax": 1,
                "movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <FT_MulFix>;movl %eax, (%esi)": 2,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx": 48,
                "movl (%ebx), %ecx;movl (%ecx), %eax;movl (%eax), %edx;movl $, %eax;testl %edx, %edx": 9,
                "movl %ecx, (%esp);calll *%edx;movl %eax, %edx;movl $, %eax;testl %edx, %edx": 4,
                "leal (%edx,%eax,), %eax;cmpl %eax, %edx;jae  <FT_Select_Charmap+>;movl (%edx), %ebx;cmpl %ecx, (%ebx)": 1,
                "jne  <FT_Select_Charmap+>;movl %ebx, (%esi);movl $, %eax;jmp  <FT_Select_Charmap+>;addl $, %edx": 1,
                "jmp  <FT_Select_Charmap+>;movl $, %eax;popl %ebx;popl %esi;popl %ebp": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %edx;testl %edx, %edx;je  <FT_Get_Charmap_Index+>": 1,
                "movl (%ebp), %edx;testl %edx, %edx;je  <FT_Get_Charmap_Index+>;movl (%edx), %eax;testl %eax, %eax": 1,
                "je  <FT_Get_Char_Index+>;movl (%edx), %eax;movl (%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp)": 1,
                "sbbl %edx, %edx;notl %edx;andl -(%ebp), %edx;jmp  <FT_Get_Next_Char+>;movl $, %eax": 1,
                "movl $, %eax;movl $, %edx;cmpl $, (%ebp);je  <FT_Get_Next_Char+>;movl (%ebp), %ecx": 1,
                "je  <FT_Get_First_Char+>;cmpl $, (%ebx);je  <FT_Get_First_Char+>;movl $, %eax;cmpl $, (%ebx)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %ebx, (%esp);calll - <FT_Get_Next_Char>": 1,
                "movl -(%ebp), %edx;movl %edx, (%esi);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 2,
                "movl %ebx, (%esp);calll *(%eax);jmp  <FT_Get_Sfnt_Table+>;movl $, %eax;jmp  <FT_Get_Sfnt_Table+>": 1,
                "je  <FT_Load_Sfnt_Table+>;movl (%ebx), %ecx;movl (%ecx), %eax;movl (%eax), %edx;movl $, %eax": 1,
                "jmp  <FT_Get_CMap_Language_ID+>;movl $, %eax;addl $, %esp;popl %ebx;popl %ebp": 1,
                "jae  <FT_Get_CMap_Format+>;movl (%ebx), %eax;cmpl $, (%eax);jne  <FT_Get_CMap_Format+>;movl %eax, (%esp)": 1,
                "jne  <FT_Get_CMap_Format+>;movl %eax, (%esp);calll - <FT_Get_CMap_Format>;cmpl $, %eax;jne  <FT_Get_CMap_Format+>": 1,
                "je  <FT_Get_CMap_Format+>;movl %ebx, %eax;calll - <FT_Get_CMap_Format+>;testl %eax, %eax;je  <FT_Get_CMap_Format+>": 3,
                "cmpl $, (%edx);jne  <FT_Get_CMap_Format+>;movl %ebx, %eax;calll - <FT_Get_CMap_Format+>;movl %eax, %edx": 1,
                "jne  <FT_Get_CMap_Format+>;movl %ebx, %eax;calll - <FT_Get_CMap_Format+>;movl %eax, %edx;movl (%ebx), %ecx": 1,
                "movl %edx, (%esp);calll *(%eax);jmp  <FT_Get_CMap_Format+>;movl $, %eax;jmp  <FT_Get_CMap_Format+>": 1,
                "je  <FT_Set_Charmap+>;movl (%edi), %ebx;movb $, %al;testl %ebx, %ebx;je  <FT_Set_Charmap+>": 1,
                "movl %eax, %edx;movl $, %eax;cmpl $, %edx;je  <FT_Set_Charmap+>;movl (%edi), %eax": 1,
                "movl (%edx), %eax;cmpl %ecx, (%eax);jne  <FT_Activate_Size+>;testl %ebx, %ebx;je  <FT_Activate_Size+>": 1,
                "movl %eax, (%ebx);addl $, %esp;popl %ebx;popl %ebp;retl": 3,
                "testl %eax, %eax;je  <FT_Get_Module+>;leal (%eax), %ebx;movl (%eax), %edx;leal (%eax,%edx,), %edx": 1,
                "cmpl %ebx, -(%ebp);ja - <FT_Get_Module+>;movl $, %esi;jmp  <FT_Get_Module+>;movl $, %esi": 1,
                "subl $, %esp;movl (%ebp), %esi;testl %esi, %esi;je  <FT_Get_Module+>;movl (%esi), %eax": 1,
                "je  <FT_Get_Module+>;movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);calll *%eax": 1,
                "jmp  <FT_Get_Module+>;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl %eax, (%esp);calll *%edx;jmp  <FT_Get_Module+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%eax), %esi;movl (%eax), %eax;jmp  <FT_Library_Version+>;movl $, %eax;movl $, %esi": 1,
                "movl %eax, (%esp);calll - <FT_Get_Module>;movl $, %edx;testl %eax, %eax;je  <FT_Get_TrueType_Engine_Type+>": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl (%edx), %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 2,
                "movl (%edx), %ecx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%edx), %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;movl -(%ebp), %ebx;movzwl (%eax,%ebx,), %eax;movswl %ax, %ebx": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %ecx;leal (%edx,%ecx,), %ebx;movl (%ebx), %edx;movl (%ebx), %ecx": 1,
                "leal (%edx,%ecx,), %ebx;movl (%ebx), %edx;movl (%ebx), %ecx;movl %edx, %esi;movl %ecx, -(%ebp)": 1,
                "movl (%ebx), %ecx;movl %edx, %esi;movl %ecx, -(%ebp);movzbl -(%ebp), %ecx;shll %cl, %esi": 1,
                "movl %ecx, -(%ebp);movzbl -(%ebp), %ecx;shll %cl, %esi;subl -(%ebp), %esi;movl %esi, -(%ebp)": 1,
                "addl %edx, %ecx;movl %ecx, -(%ebp);movzbl (%ecx), %ecx;movb %cl, -(%ebp);andl $, %ecx": 1,
                "movb %cl, -(%ebp);andl $, %ecx;cmpl $, %ecx;je  <FT_Outline_Decompose+>;testl %ecx, %ecx": 1,
                "subl -(%ebp), %edi;shll %cl, %esi;subl -(%ebp), %esi;movzbl (%edx,%eax), %eax;andl $, %eax": 1,
                "shrl $, %eax;addl %eax, %esi;sarl %esi;movl %esi, -(%ebp);subl $, %ebx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx": 1,
                "subl -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;shll %cl, %eax;subl -(%ebp), %eax": 6,
                "subl -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl $, %edx;je  <FT_Outline_Decompose+>;testl %edx, %edx": 1,
                "movl (%ebp), %ebx;movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 3,
                "jne  <FT_Outline_Decompose+>;movl %edi, -(%ebp);movl %esi, %ebx;jmp  <FT_Outline_Decompose+>;testl %edx, %edx": 1,
                "movl %edi, -(%ebp);movl %esi, %ebx;jmp  <FT_Outline_Decompose+>;testl %edx, %edx;jne  <FT_Outline_Decompose+>": 1,
                "addl -(%ebp), %eax;movl %eax, %edx;shrl $, %edx;addl %edx, %eax;sarl %eax": 3,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);cmpl %esi, -(%ebp)": 1,
                "movl %edx, -(%ebp);cmpl %esi, -(%ebp);ja - <FT_Outline_Decompose+>;jmp  <FT_Outline_Decompose+>;movl $, %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %ebx;calll *(%ebx);jmp  <FT_Outline_Decompose+>": 2,
                "shll %cl, %eax;subl -(%ebp), %eax;movl %eax, -(%ebp);cmpl %esi, -(%ebp);jb  <FT_Outline_Decompose+>": 1,
                "jmp  <FT_Outline_Decompose+>;cmpl %ebx, -(%ebp);ja - <FT_Outline_Decompose+>;movl (%ebp), %ebx;movl %ebx, (%esp)": 1,
                "jg - <FT_Outline_Decompose+>;jmp  <FT_Outline_Decompose+>;movl $, %eax;jmp  <FT_Outline_Decompose+>;movl $, %eax": 1,
                "jmp  <FT_Outline_Decompose+>;movl $, %eax;jmp  <FT_Outline_Decompose+>;movl $, %eax;jmp  <FT_Outline_Decompose+>": 3,
                "movswl %bx, %ebx;testl %ebx, %ebx;jle  <FT_Outline_Check+>;testl %esi, %esi;jle  <FT_Outline_Check+>": 1,
                "movswl (%edi), %ecx;cmpl %esi, %ecx;jge  <FT_Outline_Check+>;movl %ecx, %eax;shrl $, %eax": 1,
                "movl %ebx, %edi;movl (%ebp), %eax;movl %edi, (%eax);movl %ebx, (%eax);movl %esi, (%eax)": 1,
                "movl %edi, (%eax);movl %ebx, (%eax);movl %esi, (%eax);movl %ecx, (%eax);addl $, %esp": 1,
                "movzwl -(%ebp), %ecx;movl (%esi), %eax;movswl (%eax,%ecx,), %edi;movl (%esi), %eax;movl %edx, -(%ebp)": 1,
                "movswl (%eax,%ecx,), %edi;movl (%esi), %eax;movl %edx, -(%ebp);leal (%eax,%edx,), %edx;leal (%eax,%edi,), %eax": 1,
                "movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <FT_MulFix>;addl %eax, %edi": 1,
                "calll - <FT_MulFix>;movl %edi, (%ebx);addl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %ebx": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <FT_Outline_Get_CBox>;movl -(%ebp), %eax;sarl $, %eax": 1,
                "movzwl (%ebx), %eax;testw %ax, %ax;jle  <FT_Outline_Get_Orientation+>;movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebx), %ebx;movl %ebx, -(%ebp);movl $, -(%ebp);movl $, %edx;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);cwtl;movl %eax, -(%ebp);movl -(%ebp), %ebx;movl -(%ebp), %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebx), %edx;movl $, %eax;cmpl %esi, %edx": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp)": 1,
                "movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "movl %esi, (%ebx);cmpl (%ebp), %edi;sbbl %eax, %eax;andl $, %eax;movl -(%ebp), %ebx": 1,
                "andl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "movl (%ebx), %edx;movl $, %esi;cmpl %edx, %eax;jae  <FT_Get_Sfnt_Name_Count+>;movl (%ebx), %ecx": 1,
                "movl %esi, (%esp);movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;leal (%edx), %ebx;movl $, %eax;cmpl %ebx, (%ecx)": 6,
                "je  <FT_Get_Sfnt_Name_Count+>;movl $, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl (%ebx), %edx": 1,
                "movb %al, -(%ebp);addl $, (%ebx);movzbl -(%ebp), %eax;jmp  <FT_Get_Sfnt_Name_Count+>;movl $, (%esi)": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;movl $, (%esi);movl (%ebx), %eax;leal (%eax), %edx": 5,
                "jmp  <FT_Get_Sfnt_Name_Count+>;movl (%ebx), %edx;addl %eax, %edx;je  <FT_Get_Sfnt_Name_Count+>;movzbl (%edx), %eax": 2,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %edi;movl %edi, (%esp)": 1,
                "movl (%ebp), %edi;movl %edi, (%esp);movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;jne  <FT_Get_Sfnt_Name_Count+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "addl %eax, %esi;movzbl -(%ebp), %edx;shll $, %edx;movzbl -(%ebp), %eax;shll $, %eax": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Get_Sfnt_Name_Count+>;movzbl -(%ebp), %eax": 1,
                "movl $, %edx;movl $, %ecx;movl %esi, -(%ebp);movl %edx, %esi;movzbl -(%ebp,%eax), %edx": 1,
                "movl -(%ebp), %esi;movb $, %al;orl %edx, %ecx;je  <FT_Get_Sfnt_Name_Count+>;movl $, (%esp)": 1,
                "movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, %edx;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "movl $, -(%ebp);movl (%ebp), %edx;leal -(%ebp), %eax;calll - <.text+>;movl -(%ebp), %eax": 2,
                "movl (%ebp), %edx;leal -(%ebp), %eax;calll - <.text+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $-, %eax;sarl $, %eax;movl %eax, (%ebx);movl (%ebx), %eax;subl $-, %eax": 1,
                "testl %eax, %eax;jne  <FT_Vector_Rotate+>;testl %edx, %edx;je  <FT_Vector_Rotate+>;leal -(%ebp), %eax": 1,
                "sarl $, %esi;addl %ecx, %esi;movl %edi, %ecx;sarl %cl, %esi;movl %esi, (%ebx)": 1,
                "movl %ecx, %edx;sarl $, %edx;movl %edx, %eax;xorl %ecx, %eax;subl %edx, %eax": 1,
                "leal -(%ebx), %ecx;movl $, %edx;shll %cl, %edx;addl %edx, %eax;movl %ebx, %ecx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%ebp), %ecx": 1,
                "calll - <FT_Outline_Get_Orientation>;movl %eax, -(%ebp);cmpl $, %eax;jne  <FT_Vector_Length+>;cmpw $, (%esi)": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %eax;subl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;subl -(%ebp), %eax": 3,
                "movl %eax, (%esp);calll - <FT_MulFix>;subl %ebx, %eax;movl %eax, -(%ebp);jmp  <FT_Vector_Length+>": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);calll - <FT_MulDiv>;movl %eax, %esi;movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "addl %ecx, %esi;movl %esi, (%ebx,%edx);movl (%edi), %ebx;movl -(%ebp), %ecx;addl -(%ebp), %ecx": 1,
                "cmpl %eax, -(%ebp);jge - <FT_Vector_Length+>;movl -(%ebp), %esi;addl $, %esi;addl $, -(%ebp)": 1,
                "jge - <FT_Vector_Length+>;movl -(%ebp), %esi;addl $, %esi;addl $, -(%ebp);movswl (%edi), %eax": 1,
                "movswl (%edi), %eax;cmpl -(%ebp), %eax;jg - <FT_Vector_Length+>;movl $, %eax;jmp  <FT_Vector_Length+>": 1,
                "jg - <FT_Vector_Length+>;movl $, %eax;jmp  <FT_Vector_Length+>;movl $, %eax;addl $, %esp": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "testl %eax, %eax;jne  <FT_Vector_Polarize+>;testl %ecx, %ecx;je  <FT_Vector_Polarize+>;leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll *(%eax);cmpl $, %eax;sbbl %edx, %edx;andl $, %edx": 1,
                "jne  <FT_Angle_Diff+>;testl %ebx, %ebx;jle  <FT_Angle_Diff+>;movl %ebx, (%esp);movl $, (%esp)": 1,
                "idivl %ecx;cmpl %eax, %ebx;jle  <FT_Angle_Diff+>;movl $, -(%ebp);jmp  <FT_Angle_Diff+>": 1,
                "movl %eax, %edi;cmpl $, -(%ebp);jne  <FT_Angle_Diff+>;cmpl %esi, %ebx;jge  <FT_Angle_Diff+>": 1,
                "imull (%ebp), %ebx;addl %eax, %ebx;movl %esi, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl %ebx, %eax;calll - <.text+>;movl -(%ebp), %eax;addl $, %esp;popl %ebx": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>": 2,
                "movl %esi, (%esp);movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl $, -(%ebp);jmp  <FT_Angle_Diff+>;movl (%ebx), %edx;addl %eax, %edx;movl %edx, (%ebx)": 1,
                "movl %edx, (%ebx);addl %esi, %edx;movl %edx, (%ebx);addl %esi, %eax;movl %eax, (%ebx)": 1,
                "shll $, %esi;movzbl (%eax), %ecx;orl %ecx, %esi;movzwl %si, %esi;leal (%eax), %eax": 2,
                "leal (%eax), %eax;movl $, %ecx;jmp  <FT_Angle_Diff+>;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movw %si, (%ecx);jmp - <FT_Angle_Diff+>;movl %esi, (%ecx);jmp - <FT_Angle_Diff+>;movl %esi, (%ecx)": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);movl $, (%ebx);movl $, (%ebx);addl $, %esp": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ebx": 2,
                "je  <FT_Get_Sfnt_Name+>;testl %eax, %eax;je  <FT_Get_Sfnt_Name+>;testb $, (%eax);je  <FT_Get_Sfnt_Name+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movzwl %dx, %edx": 1,
                "movzwl %ax, %eax;addl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "movl -(%ebp), %esi;movl $, %ebx;movl %ebx, -(%ebp);movl %esi, %ebx;leal -(%ebp), %ecx": 1,
                "movl %ebx, -(%ebp);movw %ax, (%ebx);cmpl $, -(%ebp);jne  <FT_Get_Sfnt_Name+>;movl $, (%esp)": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, %esi;cmpl $, -(%ebp);jne  <FT_Get_Sfnt_Name+>;movl $, (%esp)": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Get_Sfnt_Name+>;andl $, %esi": 1,
                "movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Angle_Diff+>;cmpl $, -(%ebp);jne  <FT_Get_Sfnt_Name+>": 1,
                "cmpl $, (%edx);jle  <FT_Get_Sfnt_Name+>;movl $, %edx;movl -(%ebp), %ebx;movl (%ebp), %ecx": 1,
                "movl (%ebp), %edx;movl $, %eax;testl %edx, %edx;je  <FT_Outline_Done+>;movl (%ebp), %eax": 1,
                "movl $, %eax;jmp  <FT_Outline_New_Internal+>;movl $, %eax;addl $, %esp;popl %ebx": 1,
                "movl $, %ebx;testl %esi, %esi;je  <FT_New_Library+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, %edi;movl -(%ebp), %ebx;testl %ebx, %ebx;jne  <FT_New_Library+>;movl %esi, (%eax)": 1,
                "testl %ebx, %ebx;jne  <FT_New_Library+>;movl %esi, (%eax);movl $, (%eax);leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl %eax, (%edi)": 3,
                "movl $, (%edi);movl $, (%edi);movl $, (%edi);movl (%ebp), %eax;movl %edi, (%eax)": 1,
                "movl %edi, (%eax);jmp  <FT_New_Library+>;movl %edi, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>": 1,
                "movl %ebx, (%esp);calll *%eax;movl %ebx, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>": 3,
                "calll - <FT_Angle_Diff+>;movl %eax, %edi;cmpl $, -(%ebp);jne  <FT_New_Library+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%edi);movl (%ebp), %edx;movl %edx, (%edi);movl (%edx), %eax": 1,
                "movl %edi, (%eax,%edx,);addl $, %edx;movl %edx, (%esi);cmpl $, (%ebp);je  <FT_New_Library+>": 1,
                "subl $, %esp;movl (%ebp), %esi;testl %esi, %esi;je  <FT_New_Library+>;movl (%esi), %edi": 1,
                "movl (%edi), %ecx;movl (%edi), %eax;testl %eax, %eax;jle  <FT_New_Library+>;movl (%edi), %edx": 1,
                "jle  <FT_New_Library+>;movl (%edi), %edx;cmpl %esi, (%edx);je  <FT_New_Library+>;movl $, -(%ebp)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl %ecx, (%esp);calll - <FT_Angle_Diff+>;movl %eax, (%edi)": 1,
                "calll - <FT_Angle_Diff+>;movl %eax, (%edi);cmpl $, -(%ebp);jne  <FT_New_Library+>;movl -(%ebp), %eax": 1,
                "jne  <FT_New_Library+>;movl -(%ebp), %eax;addl $, %eax;movl (%edi), %edx;cmpl %edx, %eax": 1,
                "jne  <FT_New_Library+>;movl $, (%edi);movl %esi, %eax;calll - <FT_New_Library+>;jmp  <FT_New_Library+>": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx)": 86,
                "movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "calll *%eax;movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <FT_New_Library+>;movl %ebx, %eax": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %eax;movl (%eax), %esi": 6,
                "movl (%ebx), %eax;movl (%eax), %edx;testb $, %dl;je  <FT_New_Library+>;movl (%ebx), %eax": 1,
                "testl %eax, %eax;je  <FT_New_Library+>;testb $, (%eax);je  <FT_New_Library+>;movl (%ebx), %eax": 1,
                "movl %ebx, (%esp);calll - <FT_New_Library+>;movl (%ebp), %eax;movl %eax, (%ebx);addl $, %esp": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;je  <FT_New_Library+>;movl (%ebx), %esi;movl %ebx, (%esp)": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edx;movl (%ebp), %ebx": 4,
                "movl $, -(%ebp);movl $, -(%ebp);movl %edx, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl %esi, %eax;jbe  <FT_Attach_File+>;addl $, %eax;andl $-, %eax;movl %eax, -(%ebp)": 1,
                "movl %esi, (%esp);movl $, (%esp);movl %edi, (%esp);calll - <FT_Angle_Diff+>;movl %eax, (%ebx)": 2,
                "cmpl $, -(%ebp);jne  <FT_Attach_File+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "cmpb $, (%ebx);je  <FT_Attach_File+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "addl %eax, %esi;addl (%ebp), %esi;cmpl %esi, %edx;jb - <FT_Attach_File+>;jmp - <FT_Attach_File+>": 1,
                "jmp - <FT_Attach_File+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 2,
                "leal (,%edi,), %ecx;movl %ecx, -(%ebp);movl (%ebx), %eax;movl (%esi), %edx;movl %ecx, (%esp)": 1,
                "movl (%ebx), %eax;movl (%esi), %edx;movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;cmpb $, (%ebx);je  <FT_Attach_File+>": 1,
                "movl (%esi), %edi;movl (%esi), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FT_Attach_File+>": 1,
                "je  <FT_Attach_File+>;movl (%ebx), %ecx;movl (%ecx), %eax;movl (%eax), %esi;movl (%ecx), %eax": 1,
                "leal (%esi), %esi;jne  <FT_Attach_File+>;testl %eax, %eax;jne  <FT_Attach_File+>;movl %edx, %eax": 1,
                "testl %edx, %edx;jne - <FT_Attach_File+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl (%edx), %edi;leal -(%ebp), %eax;movl %eax, (%esp);movl (%edx), %eax;movl (%eax), %eax": 1,
                "movl %esi, (%esp);movl %edi, (%esp);calll - <FT_Angle_Diff+>;jmp  <FT_Attach_File+>;movl (%ebx), %eax": 1,
                "jmp  <FT_Attach_File+>;movl (%ebx), %eax;movl %eax, (%esi);movl %esi, (%ebx);cmpl $, (%ebp)": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);movl %esi, (%ebx);cmpl $, (%ebp);je  <FT_Attach_File+>": 1,
                "je  <FT_Attach_File+>;movl (%ebp), %ecx;movl %esi, (%ecx);jmp  <FT_Attach_File+>;cmpl $, (%ebp)": 1,
                "jmp  <FT_Attach_File+>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <FT_Attach_File+>;movl $, -(%ebp)": 1,
                "movl (%ebp), %esi;leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl (%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 2,
                "movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl %ebx, %eax;movl -(%ebp), %ebx": 1,
                "movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx;jmp  <FT_Attach_File+>;movl $, %ecx": 1,
                "movl (%ebp), %ebx;cmpl $, %ebx;jbe  <FT_Attach_File+>;movzbl (%edx), %ecx;testb %cl, %cl": 1,
                "cmpl %edx, (%eax);nop;je  <FT_List_Find+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ebp), %eax": 2,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax": 2,
                "movl (%ebp), %edx;movl %eax, (%edx);popl %ebp;retl;pushl %ebp": 1,
                "movl (%ebx), %esi;movb $, %al;testl %esi, %esi;je  <FT_Done_Size+>;movl (%esi), %edi": 1,
                "testl %edi, %edi;je  <FT_Done_Size+>;movl (%edi), %eax;movl %eax, -(%ebp);leal (%esi), %eax": 1,
                "movl %eax, (%esp);calll - <FT_List_Find>;movl %eax, -(%ebp);movl $, %eax;cmpl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl $, %eax;cmpl $, -(%ebp);je  <FT_Done_Size+>;movl -(%ebp), %eax": 1,
                "je  <FT_Done_Size+>;movl (%eax), %eax;movl %eax, (%esi);movl %edi, (%esp);movl %ebx, (%esp)": 1,
                "testl %ebx, %ebx;je  <FT_List_Up+>;movl %ecx, (%ebx);jmp  <FT_List_Up+>;movl %ecx, (%edx)": 1,
                "movb $, %al;testl %esi, %esi;je  <FT_Set_Renderer+>;movl (%ebp), %edi;addl $, %edi": 1,
                "je  <FT_Outline_Render+>;movb $, -(%ebp);movl (%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "movl %edi, (%esp);calll - <FT_Activate_Size+>;movl %eax, %esi;movb $, -(%ebp);testl %eax, %eax": 1,
                "movl (%ebp), %edx;movl $, %eax;testl %edx, %edx;je  <FT_Outline_Get_Bitmap+>;movl %edx, -(%ebp)": 1,
                "je  <FT_Outline_Get_Bitmap+>;movb $, -(%ebp);movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %edi, (%esp);movl %ebx, (%esp);calll *(%ebx)": 1,
                "movl %eax, %esi;testl %eax, %eax;je  <FT_Outline_Get_Bitmap+>;cmpb $, %al;jne  <FT_Outline_Get_Bitmap+>": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl (%edi), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edi;movl $, %ebx": 1,
                "leal (%esi), %edx;movb $, %cl;testb $, %dl;je  <FT_Load_Glyph+>;movw $, (%edx)": 1,
                "cmpl -(%ebp), %eax;jb - <FT_Load_Glyph+>;addl %eax, %edx;testb $, %cl;je  <FT_Load_Glyph+>": 1,
                "je  <FT_Load_Glyph+>;movl (%edi), %edx;cmpb $, (%edx);jne  <FT_Load_Glyph+>;testb $, %bl": 1,
                "cmpb $, (%edx);jne  <FT_Load_Glyph+>;testb $, %bl;je  <FT_Load_Glyph+>;cmpl $, (%edi)": 1,
                "je  <FT_Load_Glyph+>;testb $, (%ebp);jne  <FT_Load_Glyph+>;movl (%eax), %eax;movl (%ebp), %edx": 1,
                "movl %edx, %ecx;addl (%esi), %ecx;addl $, %ecx;andl $-, %ecx;movl (%esi), %eax": 2,
                "movl %ecx, (%esi);movl -(%ebp), %edx;subl %eax, %edx;movl %edx, (%esi);jmp  <FT_Load_Glyph+>": 1,
                "addl $, %eax;andl $-, %eax;movl %eax, (%esi);testb $, (%ebp);je  <FT_Load_Glyph+>": 1,
                "movl %eax, (%esp);calll - <FT_MulDiv>;movl %eax, (%esi);movl $, (%esp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl (%esi), %eax;movl %eax, (%esp);calll - <FT_MulDiv>;movl %eax, (%esi);testl $, (%ebp)": 1,
                "je  <FT_Load_Glyph+>;movl (%esi), %ecx;cmpl %ecx, (%eax);je  <FT_Load_Glyph+>;movl $, (%esp)": 1,
                "cmpl $, (%esi);jne  <FT_Load_Glyph+>;testb $, (%edi);je  <FT_Load_Glyph+>;movl %edi, (%esp)": 1,
                "calll - <FT_Outline_Translate>;movl %edi, (%esp);leal (%esi), %eax;movl %eax, (%esp);calll - <FT_Vector_Transform>": 1,
                "movl %eax, %ebx;jmp  <FT_Load_Glyph+>;cmpl $, (%ecx);je - <FT_Load_Glyph+>;jmp - <FT_Load_Glyph+>": 1,
                "movl (%ebp), %edx;movl $, %eax;testl %ebx, %ebx;je  <FT_Load_Char+>;movl %edx, %eax": 1,
                "je  <FT_Load_Char+>;movl %edx, %eax;cmpl $, (%ebx);je  <FT_Load_Char+>;movl %edx, (%esp)": 1,
                "cmpl $, (%ebx);je  <FT_Load_Char+>;movl %edx, (%esp);movl %ebx, (%esp);calll - <FT_Get_Char_Index>": 1,
                "jne  <FT_Load_Char+>;movl (%ebp), %edx;sarl $, %edx;andl $, %edx;cmpl $, %edx": 2,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %edx": 2,
                "negl %eax;movl (%ebp), %edx;leal (%edx,%eax,), %eax;movl %eax, -(%ebp);movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %ecx;andl $, %ecx;movl %ecx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%edx), %edx;shll $, %edx;jmp  <FT_Load_Char+>;movl (%esi), %edx;movl (%edx), %edx": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;testl %edx, %edx;je  <FT_List_Iterate+>;movl (%edx), %ebx": 1,
                "movl (%ebp), %edi;movl (%ebp), %eax;movl (%eax), %ebx;testl %ebx, %ebx;je  <FT_List_Finalize+>": 1,
                "movl %ebx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <FT_Angle_Diff+>;movl %esi, %ebx": 1,
                "cmpl %ebx, (%ecx);jne  <FT_Remove_Module+>;jmp  <FT_Remove_Module+>;cmpl %ebx, (%eax);leal (%esi), %esi": 1,
                "jne  <FT_Remove_Module+>;movl $, (%eax);movl (%ebx), %eax;testb $, (%eax);je  <FT_Remove_Module+>": 1,
                "movl -(%ebp), %eax;calll - <FT_Activate_Size+>;movl (%ebx), %eax;testb $, (%eax);je  <FT_Remove_Module+>": 1,
                "addl $, %eax;cmpl %eax, %edx;ja - <FT_Remove_Module+>;movl $, %eax;jmp  <FT_Remove_Module+>": 1,
                "movl (%ebp), %edx;movl (%edx,%ebx,), %edi;movl (%edi), %esi;movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %ecx, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "calll - <FT_Remove_Module>;jmp  <FT_Add_Module+>;addl $, %ebx;cmpl -(%ebp), %ebx;jne - <FT_Add_Module+>": 1,
                "movl (%ebp), %edx;movl (%edx), %esi;movl $, -(%ebp);cmpl $, (%edx);jbe  <FT_Add_Module+>": 1,
                "movl (%ecx), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl %eax, %ebx": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl %eax, %ebx;cmpl $, -(%ebp)": 1,
                "testl %eax, %eax;jne  <FT_Add_Module+>;movl (%ebx), %eax;testb $, (%eax);je  <FT_Add_Module+>": 1,
                "movl (%ebp), %ecx;movl %ebx, (%ecx);movl (%ebx), %eax;testb $, (%eax);je  <FT_Add_Module+>": 1,
                "movl (%edx), %eax;testl %eax, %eax;je  <FT_Add_Module+>;movl %ebx, (%esp);calll *%eax": 1,
                "testl %eax, %eax;je  <FT_Add_Module+>;movl %ebx, (%esp);calll *%eax;movl %eax, -(%ebp)": 1,
                "movl (%eax), %eax;testb $, %al;je  <FT_Add_Module+>;testb $, %ah;jne  <FT_Add_Module+>": 1,
                "movl (%ebp), %ebx;movl (%ebp), %eax;movl (%eax), %edi;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jne - <FT_Add_Module+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, %edi;movl $, %eax;testl %edi, %edi;je  <FT_Done_Face+>;movl %edi, (%esp)": 1,
                "movl $, %eax;testl %edi, %edi;je  <FT_Done_Face+>;movl %edi, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <FT_Add_Module+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "cmpb $, -(%ebp);jne  <FT_Open_Face+>;movl $, %eax;testl %edi, %edi;je  <FT_Open_Face+>": 1,
                "je  <FT_Open_Face+>;movl (%edi), %esi;testl %esi, %esi;je  <FT_Open_Face+>;movl (%esi), %edx": 1,
                "movl (%edi), %edx;movl (%edi), %ecx;jmp  <FT_Open_Face+>;movl $, %ecx;movl $, %edx": 1,
                "movl $, %esi;movl %esi, %edx;movl (%ebx), %esi;movl (%esi), %eax;testb $, (%eax)": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %ecx;movl -(%ebp), %edx;movl %esi, %eax": 1,
                "testl %eax, %eax;jne  <FT_Open_Face+>;movl -(%ebp), %edx;movl -(%ebp), %eax;movl %edx, (%eax)": 1,
                "addl (%ecx), %eax;movzwl (%eax), %ecx;testw %cx, %cx;jns  <FT_Open_Face+>;negl %ecx": 1,
                "jns  <FT_Open_Face+>;negl %ecx;movw %cx, (%eax);movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "testl %ebx, %ebx;je  <FT_Open_Face+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Done_Face>": 1,
                "movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Add_Module+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <FT_Open_Face>;leave;retl": 2,
                "movl %eax, (%esp);calll - <FT_Open_Face>;leave;retl;pushl %ebp": 2,
                "je  <FT_New_Face+>;movl $, -(%ebp);movl %edx, -(%ebp);movl $, -(%ebp);movl (%ebp), %eax": 1,
                "movl $, -(%ebp);movl %edx, -(%ebp);movl $, -(%ebp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edi;calll  <FT_Stream_OpenLZW+>;movl %eax, %esi;movl $, %ebx;testl %eax, %eax": 1,
                "calll - <FT_New_Library>;movl %eax, %ebx;testl %eax, %eax;je  <FT_Init_FreeType+>;movl %esi, (%esp)": 1,
                "movl $, %eax;movl %ecx, (%ebx,%eax);addl $, %eax;cmpl %edx, %eax;jb - <FT_Bitmap_New+>": 1,
                "movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl $, %eax;jmp  <FT_Bitmap_Copy+>": 1,
                "subl %eax, %ecx;movl %ecx, %eax;imull (%ebx), %eax;cmpl %edi, %eax;je  <FT_Bitmap_Copy+>": 1,
                "movl %edi, (%esp);movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%ebx);jmp  <FT_Bitmap_Copy+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl %edx, (%esp);calll - <FT_MulDiv>;movl %eax, -(%ebp)": 1,
                "addl %edx, %eax;movl %eax, %edi;movl %esi, %eax;movl %esi, %edx;imull %edx": 1,
                "adcl $, %edx;shrl $, %eax;shll $, %edx;addl %edx, %eax;sarl $, %eax": 1,
                "subl $, %esp;movl (%ebp), %edx;movl $, -(%ebp);movl $, %eax;testl %edx, %edx": 1,
                "movl $, %eax;testl %edx, %edx;je  <FT_Bitmap_Convert+>;movl (%edx), %esi;movl (%ebp), %eax": 1,
                "movl (%ebp), %ecx;subl %edx, %ecx;movl (%ebp), %eax;addl (%eax), %ecx;movl (%ebp), %edx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;sarl $, %eax;movl %eax, -(%ebp);testl %eax, %eax": 2,
                "negl %eax;movb %al, (%edx);addl $, %edx;addl $, %ecx;cmpl %esi, %ecx": 1,
                "cmpl %esi, %ecx;jne - <FT_Bitmap_Convert+>;movl -(%ebp), %edx;movl -(%ebp), %ebx;leal (%ebx,%edx,), %eax": 2,
                "movb %cl, (%eax);addl %edx, %edx;addl $, %eax;cmpl %ebx, %eax;jne - <FT_Bitmap_Convert+>": 1,
                "movl (%ebp), %ebx;movw $, (%ebx);movl (%ebp), %eax;movl (%eax), %ebx;testl %ebx, %ebx": 1,
                "addl %eax, %ebx;movl %edx, %ecx;andl $, %ecx;sarl $, %ecx;movb %cl, (%eax)": 1,
                "jne - <FT_Bitmap_Convert+>;movl -(%ebp), %ecx;movl -(%ebp), %ebx;leal (%ebx,%ecx,), %edx;jmp  <FT_Bitmap_Convert+>": 1,
                "addl $, %ebx;cmpl %edi, %ebx;jne - <FT_Bitmap_Convert+>;movl -(%ebp), %ebx;addl %ebx, -(%ebp)": 1,
                "jne  <FT_GlyphSlot_Own_Bitmap+>;movl -(%ebp), %edx;movl %edx, (%ebx);movl -(%ebp), %edx;movl %edx, (%ebx)": 1,
                "subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ebx;movl $, %eax;testl %edx, %edx": 1,
                "movb $, %al;testl %ebx, %ebx;je  <FT_Bitmap_Done+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "je  <FT_Bitmap_Done+>;movl (%ebx), %eax;movl %eax, (%esp);movl (%edx), %eax;movl %eax, (%esp)": 1,
                "jne  <FT_Bitmap_Embolden+>;movzbl (%ebx), %eax;cmpb $, %al;ja  <FT_Bitmap_Embolden+>;movzbl %al, %edx": 1,
                "jle  <FT_Bitmap_Embolden+>;movl $, -(%ebp);movl -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;movl (%edi), %edi;movl %edi, -(%ebp)": 3,
                "movzbl (%ebx), %edx;jmpl *(,%edx,);leal (%eax,%edi), %edx;shrl $, %edx;movl %edx, -(%ebp)": 1,
                "leal (%eax,%edi), %edx;shrl $, %edx;movl %edx, -(%ebp);movl $, -(%ebp);jmp  <FT_Bitmap_Embolden+>": 2,
                "jle  <FT_Bitmap_Embolden+>;movl %ebx, -(%ebp);movl -(%ebp), %ebx;movl %edi, %eax;cmpl $, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;movl %edi, %eax;cmpl $, -(%ebp);jle  <FT_Bitmap_Embolden+>": 1,
                "movl %edx, (%esp);movl $, (%esp);movl -(%ebp), %eax;addl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;imull %esi, %eax": 1,
                "movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);calll  <FT_Stream_OpenLZW+>;addl $, %edi": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);cmpl $, (%ebx);jns  <FT_Bitmap_Embolden+>;negl -(%ebp)": 1,
                "movzbl -(%ebx), %ebx;movl $, %ecx;subl %edi, %ecx;shll %cl, %ebx;orl %ebx, %edx": 1,
                "movl -(%ebp), %esi;movzbl (%esi,%eax), %ecx;movl -(%ebp), %esi;movzwl (%esi), %ebx;movzbl %dl, %esi": 1,
                "movb %bl, -(%eax);jmp  <FT_Bitmap_Embolden+>;addl %ecx, %edx;movl -(%ebp), %ebx;movb %dl, -(%ebx)": 1,
                "movl $, %ecx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ecx, %eax;imull (%ebx), %eax": 1,
                "subl %eax, %edx;testl %esi, %esi;jle  <FT_Bitmap_Embolden+>;movl $, %eax;movl %ecx, -(%ebp)": 1,
                "movzbl (%edi,%eax), %ecx;orb %cl, (%edx,%eax);addl $, %eax;cmpl %esi, %eax;jne - <FT_Bitmap_Embolden+>": 1,
                "orb %cl, (%edx,%eax);addl $, %eax;cmpl %esi, %eax;jne - <FT_Bitmap_Embolden+>;movl -(%ebp), %ecx": 1,
                "movl %edx, (%esp);movl (%eax), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>;leave": 4,
                "je  <FT_ClassicKern_Validate+>;movb $, %al;cmpl $, (%ebp);je  <FT_ClassicKern_Validate+>;movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;addl $, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edi;addl $, %edi;movl %edi, (%esp);movswl (%ebx), %eax": 1,
                "movl (%ebp), %ebx;movl (%eax), %edx;movl $, %esi;cmpl $, (%ebx);jne  <FT_ClassicKern_Free+>": 1,
                "movl (%eax), %ecx;movl (%eax), %ebx;movl %ebx, (%edx);movl (%eax), %ebx;movl %ebx, (%edx)": 1,
                "movl %edx, (%esp);addl $, %eax;movl %eax, (%esp);movl %ecx, (%esp);calll - <FT_Bitmap_Copy>": 1,
                "movl (%ebp), %ebx;movl (%edx), %esi;movl $, %eax;cmpl $, (%ebx);jne  <FT_ClassicKern_Free+>": 1,
                "movl (%ebx), %eax;movl %eax, (%edx);movl (%ebx), %eax;andl $-, (%eax);movl $, %eax": 1,
                "movl %eax, (%edx);movl (%ebx), %eax;andl $-, (%eax);movl $, %eax;jmp  <FT_ClassicKern_Free+>": 1,
                "movl %edx, (%eax);movl %eax, (%esi);movl -(%ebp), %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl (%ebp), %ebx;movl $, %eax;testl %ebx, %ebx;je  <FT_Glyph_Transform+>;movl (%ebx), %edx": 1,
                "movl $, %eax;movl $, %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);leal -(%ebp), %edx": 1,
                "movb $, %cl;movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl %esi, (%esp);movl -(%ebp), %edx;calll *(%edx);movl %eax, %ebx": 1,
                "testl %ebx, %ebx;je  <FT_Glyph_To_Bitmap+>;testl %edi, %edi;je  <FT_Glyph_To_Bitmap+>;movl %edi, (%esp)": 1,
                "movl %edx, (%eax);movl (%esi), %edx;shll $, %edx;movl %edx, (%eax);movl %esi, (%esp)": 1,
                "shll $, %edx;movl %edx, (%eax);movl %esi, (%esp);movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "jmp  <FT_Get_Glyph+>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <FT_Get_Glyph+>": 1,
                "movl %edx, (%ecx);movl (%esi), %eax;movl %eax, (%ecx);movl (%edi), %eax;testl %eax, %eax": 1,
                "movl %ecx, (%esp);movl %esi, (%esp);calll *%eax;movl %eax, %esi;testl %eax, %eax": 1,
                "movl %eax, %esi;movl %edx, %ebx;movl %edx, (%esp);movl %eax, (%esp);calll - <FT_Angle_Diff+>": 1,
                "movl %eax, %edi;testl %eax, %eax;je  <FT_Glyph_Copy+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;testl %eax, %eax;jne  <FT_Glyph_Copy+>": 1,
                "movl $, %edi;testb $, (%esi);je  <FT_Face_CheckTrueTypePatents+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "calll - <FT_Glyph_Copy+>;movl %eax, %edi;testb %al, %al;jne  <FT_Face_CheckTrueTypePatents+>;movl (%esi), %edx": 1,
                "movl %edi, %eax;movb %al, -(%ebp);movl -(%ebp), %edi;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "movl %eax, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Face_CheckTrueTypePatents+>": 2,
                "jmp  <FT_Face_CheckTrueTypePatents+>;testb $, %bl;je  <FT_Face_CheckTrueTypePatents+>;addl $, %eax;jmp  <FT_Face_CheckTrueTypePatents+>": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;cmpl $, -(%ebp);jne  <FT_Face_CheckTrueTypePatents+>": 1,
                "movl %ebx, %eax;calll - <FT_Face_SetUnpatentedHinting+>;testl %eax, %eax;jne  <FT_Get_Multi_Master+>;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %edx;movl %ebx, %eax;calll - <FT_Face_SetUnpatentedHinting+>;testl %eax, %eax;jne  <FT_Set_MM_Design_Coordinates+>": 1,
                "movl $, %eax;testl %edx, %edx;je  <FT_Set_MM_Design_Coordinates+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "testl %edx, %edx;je  <FT_Set_Var_Design_Coordinates+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl $, %eax;testl %edx, %edx;je  <FT_Set_MM_Blend_Coordinates+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %edx;movl %ebx, %eax;calll - <FT_Face_SetUnpatentedHinting+>;testl %eax, %eax;jne  <FT_Set_Var_Blend_Coordinates+>": 1,
                "jne  <FT_Set_Var_Blend_Coordinates+>;movl $, %edx;jmp  <FT_Set_Var_Blend_Coordinates+>;movl $, %eax;movl $, %edx": 1,
                "jmp  <FT_Set_Var_Blend_Coordinates+>;movl $, %eax;movl $, %edx;jmp  <FT_Set_Var_Blend_Coordinates+>;movl %eax, %edx": 1,
                "je  <FT_Get_PFR_Kerning+>;movl %ebx, %eax;calll - <FT_Set_Var_Blend_Coordinates+>;testl %eax, %eax;je  <FT_Get_PFR_Kerning+>": 1,
                "je  <FT_Get_PFR_Kerning+>;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <FT_Get_Kerning>;addl $, %esp;popl %ebx": 1,
                "calll *%edx;testl %eax, %eax;je  <FT_Get_PS_Font_Info+>;movl (%eax), %edx;movl $, %eax": 1,
                "movl $, %eax;testl %edx, %edx;je  <FT_Get_PS_Font_Info+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ecx, (%esp);calll *%edx;testl %eax, %eax;je  <FT_Has_PS_Glyph_Names+>;movl (%eax), %edx": 1,
                "je  <FT_Get_PS_Font_Private+>;movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll *%edx": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;cmpl $, (%eax);jne  <FT_GlyphSlot_Oblique+>": 1,
                "addl %edx, %eax;movl %eax, %edi;movl $, %edx;imull %edx;sarl $, %edx": 1,
                "jmp  <FT_GlyphSlot_Embolden+>;movl %edi, %esi;andl $-, %esi;movl $, %edi;testl %esi, %esi": 1,
                "movl %esi, %edi;movl %ebx, (%esp);calll - <FT_GlyphSlot_Own_Bitmap>;testl %eax, %eax;jne  <FT_GlyphSlot_Embolden+>": 1,
                "addl %edi, (%ebx);addl %esi, (%ebx);addl %edi, (%ebx);addl %esi, (%ebx);cmpl $, (%ebx)": 1,
                "jne  <FT_GlyphSlot_Embolden+>;sarl $, %esi;addl %esi, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "sarl $, %edx;xorl %edx, %eax;subl %edx, %eax;popl %ebp;retl": 1,
                "movl %ecx, (%eax);jmp  <FT_GlyphSlot_Embolden+>;subl $, %edi;movl %edi, (%eax);movl (%eax), %esi": 1,
                "popl %ebp;retl;pushl %ebp;movl %esp, %ebp;movl $, (%eax)": 5,
                "testb $, %dl;je  <FT_GlyphSlot_Embolden+>;testl %ecx, %ecx;jne  <FT_GlyphSlot_Embolden+>;movb $, %cl": 1,
                "jne  <FT_GlyphSlot_Embolden+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %edi;movl (%edi), %esi;movl (%edi), %edi;movl %esi, (%ecx);movl %edi, (%ecx)": 2,
                "movl %edx, -(%esi,%ecx,);movl $, %eax;jmp  <FT_GlyphSlot_Embolden+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "ja  <FT_GlyphSlot_Embolden+>;movl (%eax), %edx;subl (%edi), %edx;addl $, %edx;movl $, %eax": 1,
                "movl -(%ebp), %edx;movb $, (%edx);addl $, (%ebx);movzbl -(%ebp), %ecx;movb %cl, (%ebx)": 1,
                "movb $, (%ebx);movl $, %ecx;movl %esi, %edx;movl %ebx, %eax;calll - <FT_GlyphSlot_Embolden+>": 1,
                "movl (%ebx), %ecx;leal (%ecx,%edx,), %ecx;movl %ecx, -(%ebp);addl (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Vector_From_Polar>": 2,
                "addl $, %esi;movl (%ebx), %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "jne  <FT_GlyphSlot_Embolden+>;movl %esi, %eax;negl %eax;addl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, %ebx;cmpl $, %eax;jle  <FT_GlyphSlot_Embolden+>;movl $, %ebx;movl -(%ebp), %edx": 1,
                "movl %edi, (%esp);calll - <FT_Cos>;movl %eax, %esi;movl %edi, (%esp);calll - <FT_Sin>": 1,
                "calll - <FT_Cos>;movl %eax, %esi;movl %edi, (%esp);calll - <FT_Sin>;leal (%esi,%esi,), %edx": 1,
                "movl %eax, (%esp);movl %esi, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Vector_From_Polar>": 1,
                "addl %eax, -(%ebp);movl -(%ebp), %eax;addl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "addl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, %ecx;leal -(%ebp), %edx": 1,
                "jne  <FT_GlyphSlot_Embolden+>;movl %edx, (%ebx);addl $, %esi;movl %esi, (%eax);movl %ecx, %edx": 1,
                "testl %eax, %eax;jne  <FT_GlyphSlot_Embolden+>;movl %esi, %eax;subl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %esi, %eax;subl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);leal -(%ebp), %eax": 1,
                "addl (%ebx), %eax;addl %eax, -(%ebp);movl $, %ecx;movl %esi, %edx;movl -(%ebp), %eax": 1,
                "movl %ecx, %edi;leal (%edx), %esi;shll $, %esi;addl %eax, %esi;imull $, %edx, %edx": 1,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);imull $, %edx, %edx;addl $, %edx;movl %edx, -(%ebp)": 1,
                "movl %eax, (%esp);movl $, %eax;subl %edi, %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;calll - <FT_GlyphSlot_Embolden+>;testl %eax, %eax;jne  <FT_GlyphSlot_Embolden+>;jmp - <FT_GlyphSlot_Embolden+>": 1,
                "testl %eax, %eax;sete %al;movzbl %al, %eax;leave;retl": 1,
                "movl %eax, (%esp);calll - <FT_Outline_Get_Orientation>;testl %eax, %eax;setne %al;movzbl %al, %eax": 1,
                "movl %eax, %esi;cmpl $, -(%ebp);jne  <FT_Stroker_New+>;movl %ebx, (%eax);leal (%eax), %eax": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;je  <FT_Stroker_Rewind+>;leal (%ebx), %eax;calll - <FT_GlyphSlot_Embolden+>": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;movl (%esi), %eax;subl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "subl (%ebx), %eax;movl %eax, -(%ebp);movl (%esi), %edx;subl (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "calll - <FT_Vector_Length>;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);addl $, %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %ebx, %eax;calll - <FT_GlyphSlot_Embolden+>;testl %eax, %eax;je  <FT_Stroker_LineTo+>;jmp  <FT_Stroker_LineTo+>": 1,
                "movl -(%ebp), %edx;movl %ebx, %eax;calll - <FT_GlyphSlot_Embolden+>;testl %eax, %eax;jne  <FT_Stroker_LineTo+>": 1,
                "movl %edi, (%ebx);movl -(%ebp), %edx;movl %edx, (%ebx);addl $, %esp;popl %ebx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;movl (%edi), %edx;subl %eax, %edx;addl $, %edx": 1,
                "cmpl $, %eax;ja  <FT_Stroker_ConicTo+>;movl (%ebx), %eax;movl (%ebx), %edx;movl %eax, (%edi)": 1,
                "movl (%edi), %eax;movl (%edi), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movb $, -(%ebp)": 2,
                "movl %ebx, -(%ebp);subl -(%ebp), %ebx;movl %ebx, -(%ebp);movl (%edi), %ebx;movl %ebx, -(%ebp)": 1,
                "setbe %dl;movzbl %dl, %edx;movl %edx, -(%ebp);movl -(%ebp), %edx;addl $, %edx": 1,
                "jbe  <FT_Stroker_ConicTo+>;jmp  <FT_Stroker_ConicTo+>;movl %ecx, (%esp);movl %eax, (%esp);calll - <FT_Atan>": 1,
                "je  <FT_Stroker_ConicTo+>;movl %ebx, (%esi);movl -(%ebp), %ebx;movl %ebx, (%edi);movl -(%ebp), %eax": 1,
                "calll - <FT_GlyphSlot_Embolden+>;movl %eax, -(%ebp);jmp  <FT_Stroker_ConicTo+>;movl %ebx, (%esi);movl $, %edx": 1,
                "cmpl $, %eax;jle  <FT_Stroker_ConicTo+>;movl (%edi), %eax;movl (%edi), %edx;movl %eax, (%esi)": 1,
                "calll - <FT_GlyphSlot_Embolden+>;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, (%esi);cmpl $, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %eax, (%esp);calll - <FT_Cos>;movl %eax, (%esp);movl (%esi), %eax": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Vector_From_Polar>;movl (%edi), %eax;addl %eax, -(%ebp)": 2,
                "calll - <FT_Vector_Length>;movl %eax, -(%ebp);movl -(%ebp), %eax;subl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl %ebx, %eax;calll - <FT_GlyphSlot_Embolden+>;testl %eax, %eax;jne  <FT_Stroker_ConicTo+>;leal -(%ebp), %ecx": 1,
                "jne - <FT_Stroker_ConicTo+>;movl %eax, -(%ebp);subl $, %edi;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "cmpl $, -(%ebp);je - <FT_Stroker_ConicTo+>;movl -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %ebx": 1,
                "movl %eax, -(%ebp);movl %eax, %ebx;jmp - <FT_Stroker_ConicTo+>;movl %eax, -(%ebp);jmp  <FT_Stroker_ConicTo+>": 1,
                "ja  <FT_Stroker_CubicTo+>;movl (%edx), %esi;subl %esi, %ecx;addl $, %ecx;cmpl $, %ecx": 1,
                "subl %ecx, %ebx;addl $, %ebx;cmpl $, %ebx;ja  <FT_Stroker_CubicTo+>;movl (%ebp), %ebx": 1,
                "cmpl $, %ebx;ja  <FT_Stroker_CubicTo+>;movl (%ebp), %ebx;subl (%ebx), %esi;leal (%esi), %ebx": 1,
                "cmpl $, %ebx;ja  <FT_Stroker_CubicTo+>;movl (%ebp), %esi;subl (%esi), %ecx;addl $, %ecx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%edi), %eax;movl (%edi), %edx": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);subl -(%ebp), %eax;movl %eax, -(%ebp);movl (%edi), %edx": 1,
                "subl -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %edx;addl $, %edx;movl $, %eax": 1,
                "je  <FT_Stroker_CubicTo+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);testl %edx, %edx": 1,
                "je  <FT_Stroker_CubicTo+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "calll - <FT_Atan>;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %eax": 1,
                "calll - <FT_Angle_Diff>;calll - <FT_GlyphSlot_Embolden+>;cmpl $, %eax;jg  <FT_Stroker_CubicTo+>;cmpl $, -(%ebp)": 1,
                "je  <FT_Stroker_CubicTo+>;movl $, %ecx;movl -(%ebp), %edx;movl %ebx, %eax;calll - <FT_GlyphSlot_Embolden+>": 1,
                "movl %edx, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx);movl $, %edx": 1,
                "movl %eax, (%ebx);testl %esi, %esi;jne  <FT_Stroker_CubicTo+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "shrl $, %eax;addl %eax, %esi;sarl %esi;movl %esi, (%esp);calll - <FT_Cos>": 1,
                "movl -(%ebp), %eax;shrl $, %eax;addl -(%ebp), %eax;sarl %eax;movl %eax, (%esp)": 1,
                "movl $, %esi;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "addl %eax, -(%ebp);movl -(%ebp), %edx;leal (%esi,%edx), %eax;movl %eax, (%esp);movl -(%ebp), %ecx": 1,
                "je  <FT_Stroker_CubicTo+>;movl (%ebx), %ecx;movl (%ebx), %edx;leal -(%edx,%ecx,), %ecx;movl (%ecx), %edx": 1,
                "calll - <FT_GlyphSlot_Embolden+>;testl %eax, %eax;jne  <FT_Stroker_CubicTo+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <FT_GlyphSlot_Embolden+>;testl %eax, %eax;jne  <FT_Stroker_CubicTo+>;jmp  <FT_Stroker_CubicTo+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movb $, -(%ebp);leal -(%ebp), %eax;cmpl %eax, %edi": 1,
                "jne  <FT_Stroker_BeginSubPath+>;movb $, %al;testb %dl, %dl;je  <FT_Stroker_BeginSubPath+>;cmpl $, (%ecx)": 1,
                "testb %dl, %dl;je  <FT_Stroker_BeginSubPath+>;cmpl $, (%ecx);sete %al;movzbl %al, %eax": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;cmpb $, (%ebx);je  <FT_Stroker_EndSubPath+>;movl $, %ecx": 1,
                "movl %ebx, %eax;calll - <FT_GlyphSlot_Embolden+>;movl %eax, %esi;testl %eax, %eax;jne  <FT_Stroker_EndSubPath+>": 3,
                "testl %eax, %eax;jne  <FT_Stroker_EndSubPath+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "movl (%ebx), %edx;subl $, %edx;movl (%ebx), %ecx;leal (%ecx,%edx,), %eax;addl (%ebx), %edx": 1,
                "movl -(%ebp), %esi;movl %ebx, -(%ebp);movl (%eax), %ecx;movl (%eax), %ebx;movl %ecx, (%esi)": 1,
                "movl %ebx, (%esi);movzbl (%edx), %ecx;andl $-, %ecx;movb %cl, (%edi);subl $, %eax": 1,
                "subl $, %edx;addl $, %esi;addl $, %edi;movl -(%ebp), %ebx;movl (%ebx), %ecx": 1,
                "addl $, %edi;movl -(%ebp), %ebx;movl (%ebx), %ecx;movl (%ebx), %ebx;leal (%ebx,%ecx,), %ebx": 1,
                "movl %eax, %edi;shrl $, %edi;movl (%ebx), %ecx;movl %edi, %edx;movl %ebx, %eax": 1,
                "subl %edi, %edx;movl %ebx, %eax;calll - <FT_GlyphSlot_Embolden+>;movl %eax, %esi;testl %eax, %eax": 1,
                "movl (%ebx), %edx;addl $, %edx;movl $, %ecx;movl %ebx, %eax;calll - <FT_GlyphSlot_Embolden+>": 1,
                "movl %edx, (%ebx);addl $, %esp;popl %ebx;popl %esi;popl %ebp": 3,
                "leal -(%ebp), %ecx;leal -(%ebp), %edx;calll - <FT_GlyphSlot_Embolden+>;movl $, %edx;movl $, %ecx": 1,
                "jmp  <FT_Stroker_GetCounts+>;movl $, %edx;movl $, %ecx;movl (%ebp), %ebx;movl %ecx, (%ebx)": 1,
                "movl (%ebp), %ebx;movl %ecx, (%ebx);movl (%ebp), %ecx;movl %edx, (%ecx);addl $, %esp": 1,
                "movswl (%ebx), %edx;addl (%ebx), %edx;testl %edi, %edi;je  <FT_Stroker_ExportBorder+>;addl %eax, %edi": 1,
                "cmpw $, (%edx);jle  <FT_Stroker_ParseOutline+>;movl $, %esi;movl $, -(%ebp);movzbl %bl, %ebx": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %eax;movl -(%ebp), %edx;movswl (%eax,%edx,), %eax": 1,
                "movl (%ecx), %eax;cmpl %esi, -(%ebp);ja  <FT_Stroker_ParseOutline+>;movl -(%ebp), %esi;addl $, %esi": 1,
                "jne  <FT_Stroker_ParseOutline+>;addl $, %edi;movl %ebx, %eax;jmp  <FT_Stroker_ParseOutline+>;movl (%eax), %edx": 1,
                "movl %edx, -(%ebp);cmpl $, %ecx;jne  <FT_Stroker_ParseOutline+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "ja - <FT_Stroker_ParseOutline+>;jmp  <FT_Stroker_ParseOutline+>;movl $, %eax;jmp  <FT_Stroker_ParseOutline+>;leal -(%ebp), %edx": 1,
                "movl %ecx, (%esp);calll - <FT_Stroker_ConicTo>;jmp  <FT_Stroker_ParseOutline+>;leal (%eax), %edx;cmpl %edx, -(%ebp)": 1,
                "movl (%eax), %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp);cmpl %ebx, -(%ebp);jb  <FT_Stroker_ParseOutline+>": 1,
                "movl $, %ebx;testl %esi, %esi;je  <FT_Glyph_Stroke+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <FT_Glyph_Copy>;movl %eax, %ebx": 2,
                "movl %eax, -(%ebp);movl $, (%esp);movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "testl %eax, %eax;jne  <FT_Glyph_Stroke+>;leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 3,
                "movl -(%ebp), %eax;movw $, (%eax);movw $, (%eax);movl -(%ebp), %edx;movl %edx, (%esp)": 2,
                "movw $, (%eax);movw $, (%eax);movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);jmp  <FT_Glyph_Stroke+>;movl $, (%esi);movl %ebx, %eax": 1,
                "movl $, (%esi);movl %ebx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 2,
                "je  <FT_Glyph_StrokeBorder+>;cmpl $, (%eax);jne  <FT_Glyph_StrokeBorder+>;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "testl %eax, %eax;jne  <FT_Glyph_StrokeBorder+>;movl -(%ebp), %edx;movl %edx, -(%ebp);addl $, %edx": 1,
                "jne  <FT_Glyph_StrokeBorder+>;leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edx, (%esp);calll - <FT_Stroker_GetBorderCounts>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "calll - <FT_Stroker_GetBorderCounts>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Done_Glyph>;cmpb $, -(%ebp);je  <FT_Glyph_StrokeBorder+>": 1,
                "jmp  <FT_Glyph_StrokeBorder+>;movl $, (%esi);movl %ebx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl %edx, %edi;movl %ebx, %eax;movl %ebx, %edx;imull %edx;movl %edx, %ecx": 1,
                "movl (%ebp), %eax;cmpl (%eax), %edx;jle  <FT_OpenType_Free+>;movl %edx, (%eax);cmpl (%ebp), %ebx": 1,
                "jmp  <FT_OpenType_Free+>;movl (%ebp), %edx;cmpl %edx, -(%ebp);jl  <FT_OpenType_Free+>;cmpl -(%ebp), %ebx": 1,
                "jl  <FT_OpenType_Free+>;cmpl -(%ebp), %ebx;jl  <FT_OpenType_Free+>;cmpl %edx, -(%ebp);jl  <FT_OpenType_Free+>": 1,
                "leal (%edx,%eax,), %esi;addl %ebx, %esi;movl -(%ebp), %eax;subl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "subl %eax, %edx;movl %ecx, %eax;orl %edx, %eax;movl %eax, (%esp);calll - <FT_FloorFix+>": 1,
                "jmp  <FT_OpenType_Free+>;movl $, %ecx;subl %eax, %ecx;shll %cl, %edi;shll %cl, %esi": 1,
                "subl -(%ebp), %eax;js  <FT_OpenType_Free+>;testl %eax, %eax;jne  <FT_OpenType_Free+>;movl %edi, (%esp)": 1,
                "movl -(%ebp), %edx;movl %ebx, %eax;calll - <FT_OpenType_Free+>;movl %edi, (%esp);addl -(%ebp), %esi": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movl %ebx, %eax;calll - <FT_OpenType_Free+>;addl $, %esp": 1,
                "calll - <FT_OpenType_Free+>;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "subl $, %esp;movl (%ebp), %edi;movl (%ebp), %esi;movl (%ebp), %ebx;movl (%ebp), %eax": 1,
                "movl %eax, %ebx;movl (%ebp), %edi;movl (%ebp), %esi;cmpl %ecx, %eax;jg  <FT_OpenType_Free+>": 1,
                "movl (%ebp), %esi;cmpl %ecx, %eax;jg  <FT_OpenType_Free+>;cmpl %eax, %edx;je  <FT_OpenType_Free+>": 1,
                "jle  <FT_OpenType_Free+>;movl %edx, %eax;subl %ebx, %eax;negl %edx;leal (%ebx,%edx,), %edx": 1,
                "pushl %edi;pushl %esi;pushl %ebx;subl $, %esp;movl $, %eax": 1,
                "cmpl $, %eax;jle  <FT_Outline_Get_BBox+>;movl (%esi), %ebx;movl %ebx, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %edx, -(%ebp);movl $, %ebx;movw %bx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl $, %ebx;movw %bx, -(%ebp);movl %edi, -(%ebp);movl (%ecx), %edx": 1,
                "cmpl -(%ebp), %ecx;jg  <FT_Outline_Get_BBox+>;cmpl %eax, -(%ebp);nop;jle  <FT_Outline_Get_BBox+>": 1,
                "jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %esi, (%ebx);movl -(%ebp), %edi;movl %edi, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl $, %esi;movzbl -(%ebp), %ecx;shll %cl, %esi;cmpl %ebx, %eax;jbe  <FT_Outline_Get_BBox+>": 1,
                "cmpl %ebx, %eax;jbe  <FT_Outline_Get_BBox+>;movl %esi, %ecx;subl -(%ebp,%ebx,), %ecx;movl %ecx, %esi": 1,
                "movl %esi, %ecx;subl -(%ebp,%ebx,), %ecx;movl %ecx, %esi;testl %ecx, %ecx;js  <FT_Outline_Get_BBox+>": 1,
                "movl %ecx, %esi;testl %ecx, %ecx;js  <FT_Outline_Get_BBox+>;movl %ebx, %edx;jmp  <FT_Outline_Get_BBox+>": 1,
                "cmpl %eax, %edx;jb - <FT_Outline_Get_BBox+>;movl %ecx, %esi;movl %esi, %edx;subl -(%ebp,%eax,), %edx": 1,
                "movl $, %edx;movl $, %ecx;addl -(%ebp,%edx,), %ecx;movl %ecx, -(%ebp,%edx,);addl $, %edx": 1,
                "movl (%ebp), %esi;leal (%esi,%edx,), %edx;movl %edx, -(%ebp);leal -(%ebp,%ebx,), %edx;movl %edx, -(%ebp)": 1,
                "cmpl %edx, -(%ebp);ja  <FT_Outline_Get_BBox+>;jmp  <FT_Outline_Get_BBox+>;addl %ecx, %ecx;movl (%esi,%eax,), %edx": 1,
                "jmp  <FT_Outline_Get_BBox+>;addl %ecx, %ecx;movl (%esi,%eax,), %edx;cmpl %edx, %ecx;jbe  <FT_Outline_Get_BBox+>": 1,
                "movl (%esi,%eax,), %edx;cmpl %edx, %ecx;jbe  <FT_Outline_Get_BBox+>;jmp  <FT_Outline_Get_BBox+>;movl %esi, -(%ebp)": 1,
                "leal (%ecx,%ebx,), %ecx;movb %al, (%ecx);movzbl -(%ebp), %eax;movb %al, (%ecx);movl -(%ebp), %ebx": 1,
                "movb %al, (%ecx);movl -(%ebp), %ebx;movl %ebx, (%ecx);movl %esi, -(%ebp);jmp  <FT_Outline_Get_BBox+>": 1,
                "movl -(%ebp), %ebx;movl (%ebp), %eax;movl %ebx, (%eax);movl %esi, -(%ebp);addl -(%ebp), %edi": 1,
                "movl %esi, -(%ebp);addl -(%ebp), %edi;movl -(%ebp), %esi;addl %esi, -(%ebp);movl -(%ebp), %eax": 1,
                "andl $, %eax;movb %al, -(%ebp);addl $, -(%ebp);jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %eax": 1,
                "movb %cl, (%eax);movl -(%ebp), %ebx;movl %ebx, (%eax);addl %edi, %eax;movl %edx, %ebx": 1,
                "jne - <FT_Outline_Get_BBox+>;movl %edx, -(%ebp);jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %eax;xorl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;subl $, %esi;subl %eax, %ecx;movl $, %ebx": 1,
                "subl $, %esi;subl %eax, %ecx;movl $, %ebx;shll %cl, %ebx;subl $, %ebx": 1,
                "movl %ecx, -(%ebp);addl $, -(%ebp);movl -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;leal (%edx,%eax,), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;movl %ebx, %edi": 1,
                "movl %ebx, %edi;jmp - <FT_Outline_Get_BBox+>;addl $, -(%ebp);addl $, -(%ebp);subl $, -(%ebp)": 1,
                "jne  <FT_Outline_Get_BBox+>;jmp  <FT_Outline_Get_BBox+>;movl $, %eax;jmp  <FT_Outline_Get_BBox+>;movl $, %eax": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %ebx;movl %edx, %esi;testl %ecx, %ecx": 1,
                "cmpl $, %eax;ja  <FT_Outline_Get_BBox+>;movl (%ebx), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "ja  <FT_Outline_Get_BBox+>;movl (%ebx), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll *(%esi)": 1,
                "calll - <FT_Outline_Get_BBox+>;movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl (%ebx), %eax": 1,
                "je  <FT_Outline_Get_BBox+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll *%eax": 1,
                "andl $, %eax;movl %eax, (%ecx);movl (%edx), %eax;movl (%eax), %eax;movl $, %ecx": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <FT_Outline_Get_BBox+>": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <FT_Outline_Get_BBox+>;cmpl $, (%ebx);je  <FT_Outline_Get_BBox+>": 1,
                "movl %esi, %eax;calll - <FT_Outline_Get_BBox+>;movl (%esi), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "calll *(%ebx);movl (%esi), %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "calll *(%ebx);movl %esi, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll *(%ebx)": 1,
                "addl %ecx, %esi;addl %esi, %eax;addl %edi, %eax;addl %eax, -(%ebp);addl $, %edx": 1,
                "movl (%ebp), %edx;addl -(%ebp), %edx;movl -(%ebp), %ecx;movl (%ebp), %eax;movzbl (%eax), %ebx": 1,
                "addl %edi, %ecx;cmpl %edx, %eax;jne - <FT_Outline_Get_BBox+>;movl %ecx, -(%ebp);movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);movl $, %eax;mull %edi;shrl $, %edx;imull $, %edx, %edx": 1,
                "cmpl $, (%ebp);jne - <FT_Outline_Get_BBox+>;movl -(%ebp), %eax;shll $, %eax;orl %edi, %eax": 1,
                "jne - <FT_Outline_Get_BBox+>;movl -(%ebp), %eax;shll $, %eax;orl %edi, %eax;jmp  <FT_Outline_Get_BBox+>": 1,
                "movl %eax, (%esp);calll - <FT_Outline_Get_BBox+>;leave;retl;pushl %ebp": 2,
                "calll - <FT_Outline_Get_BBox+>;leave;retl;pushl %ebp;movl %esp, %ebp": 3,
                "jne  <FT_Outline_Get_BBox+>;movzwl %ax, %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "movl %ecx, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp);movl (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "testl %esi, %esi;je  <FT_Outline_Get_BBox+>;cmpl $-, -(%ebp);sete %dl;cmpb $, %dl": 1,
                "cmpl %eax, %edx;jbe  <FT_Outline_Get_BBox+>;movl %eax, %esi;cmpl $-, -(%ebp);jne  <FT_Outline_Get_BBox+>": 1,
                "movl %edx, (%esp);calll  <FT_Stream_OpenLZW+>;addl %esi, -(%ebp);addl -(%ebp), %esi;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;je  <FT_Outline_Get_BBox+>;movl $, (%esp);movl -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;addl %esi, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %eax": 1,
                "andl $, %edx;cmpb $, %dl;je  <FT_Outline_Get_BBox+>;movl (%edi), %eax;movl $, (%eax)": 1,
                "movzbl %al, %ecx;movl (%ebx), %eax;shll $, %eax;addl %eax, %ecx;movl $, %edx": 1,
                "jmp - <FT_Outline_Get_BBox+>;testl $, %esi;jne  <FT_Outline_Get_BBox+>;movl $, (%ebx);movl $, %ebx": 1,
                "movl %eax, (%edi);addl $, (%edi);movl (%edi), %edx;movl (%edi), %eax;movzbl (%eax), %ecx": 8,
                "movl %eax, (%edi);movl (%edi), %eax;movl $, (%eax);movl $, %esi;jmp  <FT_Outline_Get_BBox+>": 3,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %esi;movl (%eax), %edx": 1,
                "subl $, %eax;movl %eax, -(%ebp);jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %eax;movl (%eax), %eax": 4,
                "movl (%eax), %eax;subl -(%ebp), %eax;movl %eax, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "cmpl $, %edi;jbe  <FT_Outline_Get_BBox+>;jmp  <FT_Outline_Get_BBox+>;cmpl $, %edi;nop": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %eax;movl %edi, %ecx;subl $, %esi": 3,
                "movl $, %ebx;movl -(%ebp), %ecx;movl -(%ebp), %eax;movl %ecx, (%eax);movl %esi, (%eax)": 2,
                "movl -(%ebp), %eax;subl (%edi), %eax;addl %eax, (%edi);movl -(%ebp), %esi;movl %esi, (%edi)": 15,
                "cmpl $, -(%ebp);jne - <FT_Outline_Get_BBox+>;movl -(%ebp), %ebx;movl %edi, %esi;movl -(%ebp), %edi": 3,
                "jne - <FT_Outline_Get_BBox+>;movl -(%ebp), %ebx;movl %edi, %esi;movl -(%ebp), %edi;jmp - <FT_Outline_Get_BBox+>": 3,
                "je  <FT_Outline_Get_BBox+>;cmpl $, %eax;jb  <FT_Outline_Get_BBox+>;cmpl $, %eax;je  <FT_Outline_Get_BBox+>": 1,
                "leal -(%esi), %eax;movl %eax, (%edx);movl -(%ebp), %ebx;movl %ebx, (%edi);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl %esi, (%edi);movl -(%ebp), %ebx;movl %ebx, (%edx);movl $, %ecx": 1,
                "movl %eax, %ecx;andl $, %ecx;shrl %cl, %edx;movl %edx, -(%ebp);movl %eax, %edi": 1,
                "movl %eax, %edi;subl %ecx, %edi;movl -(%ebp), %eax;movl $, (%eax);jmp - <FT_Outline_Get_BBox+>": 1,
                "movl %eax, (%esi);testl %eax, %eax;jne  <FT_Outline_Get_BBox+>;movl %edi, %esi;movl %ebx, %edi": 1,
                "movl %ebx, %edi;movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %ebx, (%eax);movl %esi, (%eax)": 2,
                "movl $, (%eax);jmp - <FT_Outline_Get_BBox+>;shrl $, -(%ebp);subl $, %edi;movl -(%ebp), %eax": 1,
                "addl %eax, (%edi);movl -(%ebp), %ebx;movl %ebx, (%edi);movl -(%ebp), %ebx;movl -(%ebp), %eax": 3,
                "jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %eax;movl %edx, (%eax);movl $, %eax;testl %edx, %edx": 1,
                "andl $, %eax;movl -(%ebp), %edx;movl %eax, (%edx);movl $, %edi;movl $, -(%ebp)": 1,
                "movl -(%ebp), %esi;movl (%esi), %esi;movl %esi, -(%ebp);movl -(%ebp), %edx;movl (%edx), %ecx": 1,
                "movl -(%ebp), %esi;subl %edx, %esi;movl %esi, -(%ebp);movl %edx, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %esi;movl %esi, (%esp);movl -(%ebp), %esi": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);subl %ebx, %eax;movl -(%ebp), %edx": 1,
                "movl %esi, (%edx);movl $, %ecx;movl %edi, %edx;movl -(%ebp), %eax;calll - <FT_Outline_Get_BBox+>": 1,
                "movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl -(%ebp), %eax;movl (%eax), %edx": 1,
                "movl -(%ebp), %esi;movl %esi, -(%ebp);movl %edi, %ecx;movl -(%ebp), %edi;cmpl $, %ecx": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;cmpl $, %eax;ja  <FT_Outline_Get_BBox+>;movl (,%eax,), %ebx": 1,
                "movl %edi, %esi;movl -(%ebp), %edi;movl $, (%edi);jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %eax": 1,
                "je  <FT_Outline_Get_BBox+>;movl %edi, %esi;movl -(%ebp), %edi;movl %ebx, %ecx;cmpl $-, %ebx": 1,
                "subl $, %esi;movzbl (%ebx), %eax;shll %cl, %eax;orl %eax, %edx;addl $, %ebx": 2,
                "movl %ebx, -(%ebp);movl %ecx, %edi;movl $, -(%ebp);jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %edi": 2,
                "movl %edx, -(%ebp);movl %ecx, %esi;movl $, %ebx;movl -(%ebp), %edx;movl -(%ebp), %eax": 2,
                "movl %eax, -(%ebp);movl -(%ebp), %ebx;movl %esi, -(%ebp);movl %edx, -(%ebp);movl %edi, %esi": 2,
                "movl %ebx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);cmpl $, %eax;ja  <FT_Outline_Get_BBox+>": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;movl -(%ebp), %ebx;movl %ecx, (%eax,%ebx,);movl %ebx, %eax": 1,
                "jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %ebx;movl %edi, %ecx;movl %eax, %edi;subl $, %esi": 1,
                "movl %edi, %esi;movl -(%ebp), %edi;jmp - <FT_Outline_Get_BBox+>;movl %edx, %eax;movzbl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;andl (,%ecx,), %edx;addl -(%ebp), %edx;movl %edx, -(%ebp);movl %eax, %edx": 1,
                "addl -(%ebp), %edx;movl %edx, -(%ebp);movl %eax, %edx;shrl %cl, %edx;subl %ecx, %edi": 1,
                "movl %eax, %edx;shrl %cl, %edx;subl %ecx, %edi;movl -(%ebp), %ebx;addl -(%ebp), %ebx": 1,
                "subl %ecx, %edi;movl -(%ebp), %ebx;addl -(%ebp), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);movl %edi, %esi;movl -(%ebp), %edi;movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;movl %edx, -(%ebp);movl -(%ebp), %edx;movl (%esi), %ebx": 1,
                "movl $, (%ebx);movl $, %ebx;movl %esi, (%esp);movl -(%ebp), %esi;movl (%esi), %eax": 2,
                "movl %esi, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "calll *(%esi);jmp  <FT_Outline_Get_BBox+>;movl %esi, (%esp);movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl %eax, %ebx;jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %esi;movl %eax, (%esi);movl (%esi), %eax": 1,
                "movl %edi, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %ebx, (%eax);movl (%eax), %esi": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edi;cmpl $, (%edi);ja  <FT_Outline_Get_BBox+>;movl (%edi), %eax": 1,
                "movl (%eax), %edx;leal (%eax,%edx,), %eax;movl %eax, (%edi);jmp - <FT_Outline_Get_BBox+>;testb $, %dl": 1,
                "ja  <FT_Outline_Get_BBox+>;jmp  <FT_Outline_Get_BBox+>;testl %eax, %eax;je  <FT_Outline_Get_BBox+>;nop": 1,
                "andl (,%edx,), %eax;movl -(%ebp), %edi;addl %eax, (%edi);movl %edx, %ecx;shrl %cl, -(%ebp)": 2,
                "cmpl %eax, %edi;jae  <FT_Outline_Get_BBox+>;movl (%edx), %ecx;movl %ecx, %edx;subl %eax, %edx": 1,
                "movl (%edx), %ecx;movl %ecx, %edx;subl %eax, %edx;addl %edx, %edi;cmpl %edi, %eax": 1,
                "subl %eax, %edx;addl %edx, %edi;cmpl %edi, %eax;ja - <FT_Outline_Get_BBox+>;movl -(%ebp), %eax": 1,
                "cmpl %edx, %eax;jae  <FT_Outline_Get_BBox+>;subl %eax, %edx;subl $, %edx;jmp  <FT_Outline_Get_BBox+>": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %eax;cmpl (%eax), %edi;jne  <FT_Outline_Get_BBox+>;movl (%eax), %edx": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;calll - <FT_Outline_Get_BBox+>;movl %eax, %ecx;movl -(%ebp), %eax": 1,
                "cmpl %edx, -(%ebp);jae  <FT_Outline_Get_BBox+>;movl %edx, %eax;subl -(%ebp), %eax;subl $, %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edi;movl -(%ebp), %eax;cmpl (%eax), %edi;jne  <FT_Outline_Get_BBox+>": 1,
                "subl $, %edx;movl %edx, -(%ebp);movl %eax, -(%ebp);jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %edi": 1,
                "movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <FT_Outline_Get_BBox+>;movl -(%ebp), %edi;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edi;movb %al, (%edi);addl $, %edi;movl %edi, -(%ebp);subl $, -(%ebp)": 1,
                "movl -(%ebp), %edi;cmpl $, %ebx;jbe  <FT_Outline_Get_BBox+>;subl $, %ebx;addl $, -(%ebp)": 1,
                "cmpl $, %ebx;jbe  <FT_Outline_Get_BBox+>;subl $, %ebx;addl $, -(%ebp);subl $, %esi": 1,
                "subl (%ebx), %edx;addl %edx, (%ebx);movl %esi, (%ebx);movl -(%ebp), %edx;movl %ecx, (%edx)": 1,
                "movl %ebx, %edx;movl -(%ebp), %eax;calll - <FT_Outline_Get_BBox+>;jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %edx;calll - <FT_Outline_Get_BBox+>;cmpl $, %eax;je  <FT_Outline_Get_BBox+>;movl -(%ebp), %edi": 1,
                "movl (%edi), %edi;movl %edi, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;cmpl %eax, %esi;jae  <FT_Outline_Get_BBox+>;subl %esi, %eax": 1,
                "jne  <FT_Outline_Get_BBox+>;movl $, (%eax);movl $, -(%ebp);jmp - <FT_Outline_Get_BBox+>;movl %edi, %esi": 1,
                "movl -(%ebp), %esi;movl %esi, (%edi);movl -(%ebp), %edx;movl %ecx, (%edx);movl %eax, %ecx": 1,
                "movl %esi, (%edi);movl -(%ebp), %edx;movl %ecx, (%edx);movl %eax, %ecx;movl %edi, %edx": 1,
                "leal (%eax), %ecx;movl (%eax), %eax;movl %edi, %edx;calll - <FT_Outline_Get_BBox+>;movl (%edi), %eax": 1,
                "movl %ebx, %esi;jmp  <FT_Outline_Get_BBox+>;movl %ebx, %esi;jmp  <FT_Outline_Get_BBox+>;movl %ebx, %esi": 4,
                "movl %ebx, %esi;cmpl $, %esi;nop;jne  <FT_Outline_Get_BBox+>;movl -(%ebp), %edi": 1,
                "nop;jne  <FT_Outline_Get_BBox+>;movl -(%ebp), %edi;jmp  <FT_Outline_Get_BBox+>;movl -(%ebp), %edi": 1,
                "setne %al;movzbl %al, %eax;subl $, %eax;andl $, %eax;jmp  <FT_Outline_Get_BBox+>": 1,
                "jmp  <FT_Outline_Get_BBox+>;movl %edi, %esi;movl -(%ebp), %edi;movl $, %ecx;jmp - <FT_Outline_Get_BBox+>": 1,
                "jmp - <FT_Outline_Get_BBox+>;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "movl $, -(%ebp);testl %eax, %eax;jne  <FT_Outline_Get_BBox+>;leal (%ebx), %eax;calll - <FT_Outline_Get_BBox+>": 1,
                "leal (%ebx), %eax;movl %eax, (%ebx);movl %eax, (%ebx);movl $, (%ebx);movl (%ebx), %eax": 1,
                "subl %eax, %edx;movl %edi, %esi;cmpl %edx, %edi;jbe  <FT_Outline_Get_BBox+>;movl %edx, %esi": 1,
                "movl (%eax), %eax;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl (%ebp), %edx": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;movl %eax, -(%ebp);movl %esi, %eax;calll - <FT_Outline_Get_BBox+>": 1,
                "movb $, %dl;testl $, %edi;je  <FT_Stream_OpenGzip+>;movw $, (%edi);addl $, %edi": 1,
                "je  <FT_Stream_OpenGzip+>;movw $, (%edi);addl $, %edi;subl $, %edx;movl %edx, %ecx": 1,
                "je  <FT_Stream_OpenGzip+>;movw $, (%edi);addl $, %edi;testb $, %dl;je  <FT_Stream_OpenGzip+>": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Angle_Diff+>;movl %eax, %ebx;cmpl $, -(%ebp)": 1,
                "movl %esi, %eax;calll - <FT_Outline_Get_BBox+>;testl %eax, %eax;jne  <FT_Stream_OpenGzip+>;leal (%ebx), %eax": 1,
                "movl %eax, (%ebx);cmpl $, -(%ebp);je  <FT_Stream_OpenGzip+>;movl $, (%ebx);movl $, (%esp)": 1,
                "movl %eax, (%ebx);testl %eax, %eax;je  <FT_Stream_OpenGzip+>;movl $, (%eax);movl (%ebx), %eax": 1,
                "movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll *(%ebx);movl %eax, %edi": 1,
                "movl -(%ebp), %eax;movl %eax, (%edi);movl $, (%edi);movl $, %ecx;movl -(%ebp), %edx": 1,
                "movl %edi, %eax;calll - <FT_Outline_Get_BBox+>;movl -(%ebp), %edx;movl %edi, (%edx);movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenGzip+>;movl %edi, (%esp);movl %esi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "movl %esi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl -(%ebp), %eax;subl $, %eax;cmpl $, %eax": 1,
                "movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Angle_Diff+>;movl %eax, %esi": 1,
                "movl $, -(%ebp);movl (%ebp), %eax;movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "movl $, (%eax);movl $, (%eax);movl -(%ebp), %eax;jmp  <FT_Stream_OpenGzip+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edi, (%edx);movl -(%ebp), %eax;calll - <FT_Outline_Get_BBox+>;movl $, %eax": 1,
                "movl %edi, (%esp);movl %esi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;jmp - <FT_Stream_OpenGzip+>;addl $, %esp": 1,
                "jmp  <FT_Stream_OpenGzip+>;movl (%ebx), %edx;cmpl %edx, (%ebx);jb  <FT_Stream_OpenGzip+>;addl $, %esi": 1,
                "movl %ebx, -(%ebp);subl %ebx, %esi;cmpl $, %esi;ja  <FT_Stream_OpenGzip+>;addl $, %edi": 1,
                "subl %ebx, %esi;cmpl $, %esi;ja  <FT_Stream_OpenGzip+>;addl $, %edi;jmp  <FT_Stream_OpenGzip+>": 1,
                "shll %cl, %ebx;orl %ebx, %eax;addl $, %edi;movl $, %ebx;subl %edx, %ebx": 1,
                "movl (%eax), %eax;cmpl %eax, (%ebx);jb  <FT_Stream_OpenGzip+>;movl (%ebx), %ecx;movl %eax, %edx": 1,
                "leal (%eax,%edx), %esi;leal (%ebx), %edx;cmpl %edx, (%ebx);jne  <FT_Stream_OpenGzip+>;movl $, (%ebx)": 1,
                "leal (%ebx), %edx;cmpl %edx, (%ebx);jne  <FT_Stream_OpenGzip+>;movl $, (%ebx);movl $, %eax": 1,
                "jmp  <FT_Stream_OpenGzip+>;movl $, %eax;jmp  <FT_Stream_OpenGzip+>;movl $, %eax;addl $, %esp": 2,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl $, (%eax)": 10,
                "movb $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "subl $, %ebx;movl %ebx, %ecx;shrl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi)": 2,
                "movw $, (%edi);addl $, %edi;testb $, %bl;je  <FT_Stream_OpenGzip+>;movb $, (%edi)": 1,
                "movl %eax, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx);leal (%edx), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;calll - <FT_Stream_OpenGzip+>;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movw $, (%edi);addl $, %edi;subl $, %edx;movl %edx, %ecx": 13,
                "movl (%ebp), %ebx;movl (%ebx), %edi;movl %ebx, (%esp);calll - <FT_Stream_OpenGzip+>;movl (%ebx), %eax": 1,
                "movl (%esi), %edi;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;leal (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "setne %al;movzbl %al, %eax;movl %eax, (%ebx);movl $, %eax;cmpl $, %esi": 1,
                "movl %eax, (%ebx);movl %ebx, %eax;calll - <FT_Stream_OpenGzip+>;cmpl $, %eax;ja  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl $, %esi;movl %esi, -(%ebp);movl %eax, %esi": 1,
                "movl $, -(%ebp);movl $, %esi;movl %esi, -(%ebp);movl %eax, %esi;movl %eax, %edi": 1,
                "movl %eax, %edi;cmpl $, %eax;jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;cmpl %eax, (%ebx);jb  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;cmpl %eax, (%ebx);jb  <FT_Stream_OpenLZW+>;movl %ebx, %eax": 1,
                "movl (%ebx), %edx;movb %cl, (%edx,%eax);addl $, %eax;movl %eax, (%ebx);movl (%ebx), %eax": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;movl (%ebx), %eax;testl %eax, %eax;jne - <FT_Stream_OpenLZW+>": 1,
                "movl %edi, (%esp);movl $, (%esp);movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl %eax, (%ebx)": 1,
                "movl %edi, -(%ebp);movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);movl -(%ebp), %esi": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%ebp), %eax;movl (%eax), %edi": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;movl (%edi), %eax;cmpl %eax, %esi;jae  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, (%edi);jmp  <FT_Stream_OpenLZW+>;movl $, (%esp);movl (%edi), %eax;movl %eax, (%esp)": 1,
                "movl $, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;leal (%edi), %eax;movl %eax, (%esp)": 1,
                "movl %ecx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %esi;movl (%edi), %eax;movl (%edi), %edx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, %eax;cmpl %ecx, (%edx);jb  <FT_Stream_OpenLZW+>;movl (%edx), %esi": 1,
                "movl (%edx), %esi;cmpl %ecx, (%edx);je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %ecx, (%esp)": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl -(%ebp), %ebx": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edx;movl $, %eax;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>": 2,
                "movl $, (%ebx);movl $, (%ebx);movl $, (%esp);movl %edx, (%esp);calll - <.text+>": 1,
                "calll - <.text+>;movl %esi, (%ebx);movl $, (%ebx);movl $, (%ebx);movl $, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "movl $, (%eax);movl $, (%eax);leave;retl;pushl %ebp": 1,
                "subl $, %edx;jne - <FT_Stream_OpenLZW+>;addl $, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;cmpl %eax, %edx;je  <FT_Stream_OpenLZW+>;testl %edx, %edx": 1,
                "je - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;leal (%eax,%edx,), %esi;movl (%esi), %ecx;leal -(%eax,%edx,), %edi": 1,
                "addl %ecx, %edx;movl (%edx), %ebx;leal -(%esi,%esi,), %eax;movl -(%ebp), %edi;leal (%edi,%eax,), %eax": 1,
                "movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl %ebx, -(%ebp);movl $, %eax;leal (%ebx,%ebx,), %esi;movl $, %edx;divl -(%ebp)": 1,
                "cmpl $, %eax;jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;movl $, %ecx": 1,
                "movl -(%ebp), %esi;cmpl $, (%eax);je  <FT_Stream_OpenLZW+>;leal (%ecx,%ecx,), %ebx;movl -(%ebp), %edi": 1,
                "movl %edi, (%ebx);movl (%eax), %edi;movl %edi, (%ebx);movl (%eax), %edi;movl %edi, (%ebx)": 1,
                "retl;pushl %ebp;movl %esp, %ebp;pushl %ebx;cmpl %eax, %edx": 1,
                "pushl %ebp;movl %esp, %ebp;movl %edx, (%eax);movl (%edx), %edx;movl %edx, (%eax)": 1,
                "movl %esp, %ebp;pushl %esi;pushl %ebx;movl (%eax), %ecx;movl (%eax), %eax": 1,
                "leal (%ecx,%eax,), %esi;movl (%edx), %eax;movl (%edx), %edx;cmpl %esi, %ecx;jae  <FT_Stream_OpenLZW+>": 1,
                "andw $, %bx;cmpw $, %bx;sbbl %ebx, %ebx;addl $, %ebx;movb %bl, (%edx)": 1,
                "movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %edx;leal (%edx,%edx,), %edx;shll $, %edx": 1,
                "cmpl %eax, (%edi);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movzwl (%edi), %ebx;movzwl (%esi), %ecx": 1,
                "jge  <FT_Stream_OpenLZW+>;movswl (%edi), %edx;movl %edx, -(%ebp);movswl (%edi), %ebx;movswl (%esi), %edx": 1,
                "movswl (%edi), %edx;movl %edx, -(%ebp);movswl (%edi), %ebx;movswl (%esi), %edx;movswl (%esi), %eax": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %esi;movl (%esi), %edi": 1,
                "movl %eax, -(%ebp);testb $, %al;je  <FT_Stream_OpenLZW+>;imull $, %edx, %eax;leal (%ebx,%eax), %ebx": 1,
                "cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl %ecx, %esi;movl $, -(%ebp);testl %ecx, %ecx": 1,
                "cmpl $, %ecx;jle  <FT_Stream_OpenLZW+>;movl %ecx, %esi;jmp  <FT_Stream_OpenLZW+>;cmpl $, %esi": 1,
                "leal (%edx), %esi;nop;jmp  <FT_Stream_OpenLZW+>;addl $, %esi;andl $-, %esi": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;addl $, %ebx;movl %ebx, -(%ebp);testl %eax, %eax": 1,
                "xorl %ecx, %eax;subl %ecx, %eax;cmpl %eax, %edi;jle  <FT_Stream_OpenLZW+>;movl %ebx, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;leal (%esi), %eax;andl $-, %eax;movl %esi, -(%ebp);jmp - <FT_Stream_OpenLZW+>": 2,
                "movl %eax, -(%ebp);cmpl $, %eax;jle  <FT_Stream_OpenLZW+>;movl $, -(%ebp);cmpl -(%ebp), %esi": 1,
                "xorl %edx, %esi;subl %edx, %esi;movl %esi, %edx;movl %ecx, %esi;cmpl %edx, %edi": 1,
                "sarl $, %edx;xorl %edx, %eax;subl %edx, %eax;movl -(%ebp), %edx;imull %edx": 3,
                "xorl %edx, %eax;subl %edx, %eax;movl -(%ebp), %edx;imull %edx;movl %edx, %ecx": 3,
                "addl $, %ebx;cmpl -(%ebp), %ebx;jb - <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%ebx);movl (%esi), %eax;movl (%ebx), %edi;leal -(%eax), %edx;cmpl $, %edx": 1,
                "movl (%esi), %eax;movl (%ebx), %edi;leal -(%eax), %edx;cmpl $, %edx;setbe %dl": 1,
                "sete %cl;cmpl $, %eax;je  <FT_Stream_OpenLZW+>;testb %cl, %cl;je  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;orl $, %edx;testb %cl, %cl;je  <FT_Stream_OpenLZW+>;orl $, %edx": 1,
                "movl %eax, %edx;shrl $, %edx;addl %edx, %eax;sarl %eax;addl %eax, %esi": 1,
                "subl $, %esp;movl %edx, %ebx;movl %ecx, %esi;movl (%ebp), %edx;movl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);jne  <FT_Stream_OpenLZW+>;testb $, (%ebx);je  <FT_Stream_OpenLZW+>;testb $, (%esi)": 1,
                "movl %ecx, -(%ebp);movl (%esi), %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);cmpl %edx, -(%ebp);jl  <FT_Stream_OpenLZW+>;movl $, %eax;cmpl -(%ebp), %edx": 1,
                "movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;negl %ecx": 1,
                "movl %edi, (%esi);jmp  <FT_Stream_OpenLZW+>;addl %edi, %edx;movl %edx, (%ebx);movl %edi, (%esi)": 1,
                "je  <FT_Stream_OpenLZW+>;movb $, (%edi);leal (%ebx), %eax;movl %esi, %edx;calll - <FT_Stream_OpenLZW+>": 1,
                "addl $, %ebx;movl %ebx, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %ebx": 1,
                "movl %eax, %edi;movl %edx, -(%ebp);movl %ecx, %ebx;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edx, -(%ebp);movl %ecx, %ebx;leal -(%ebp), %eax;movl %eax, (%esp);movl (%edi), %eax": 1,
                "movl %edi, (%eax);movl (%edi), %eax;movl -(%ebp), %edx;movl %eax, (%edx);addl $, %edx": 1,
                "movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl %edi, (%esp);calll - <FT_Get_Next_Char>;movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll - <FT_Get_Next_Char>;movl -(%ebp), %edx;testl %edx, %edx": 1,
                "calll - <FT_Get_Next_Char>;movl -(%ebp), %edx;testl %edx, %edx;je  <FT_Stream_OpenLZW+>;cmpl (%esi), %eax": 1,
                "testl %eax, %eax;jne - <FT_Stream_OpenLZW+>;movl $, %ebx;movl %edi, %esi;movl -(%ebp), %edi": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);calll - <FT_Get_Char_Index>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 2,
                "cmpl $, (%edx);jle  <FT_Stream_OpenLZW+>;movl $, %eax;movzbl (%edx,%eax), %ecx;movl %ecx, %ebx": 1,
                "andl $, %ebx;cmpl $, %ebx;jne  <FT_Stream_OpenLZW+>;andl $-, %ecx;movb %cl, (%edx,%eax)": 1,
                "cmpl $, %ebx;jne  <FT_Stream_OpenLZW+>;andl $-, %ecx;movb %cl, (%edx,%eax);movl (%edx), %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %edx, (%esp);movl %edi, (%esp);calll - <FT_Set_Charmap>": 1,
                "movl %ebx, -(%ebp);movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;movb %al, (%esi);testb %al, %al": 1,
                "movl %edx, -(%ebp);movl %edx, (%esi);movl (%ebx), %edx;movl %edx, (%esi);movl (%ebx), %eax": 1,
                "movl %eax, (%esi);movl -(%ebp), %ebx;movl (%ebx), %ecx;movl (%ebx), %ebx;movl %ecx, (%esi)": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl $, %eax;jne  <FT_Stream_OpenLZW+>;cmpb $, (%esi);je  <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, %eax;addl $, %eax;movl %eax, (%esp);calll - <FT_Outline_Translate>;movl -(%ebp), %eax": 1,
                "addl %ecx, %edx;leal (%eax,%edx), %eax;cmpl (%edi), %eax;ja  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movswl (%ecx), %eax;movl %eax, (%esp);movswl %bx, %ebx;addl $, %ebx": 1,
                "movswl (%ebx), %ecx;shll $, %ecx;movl (%ebx), %edx;movl %ecx, (%esp);movl %edx, (%esp)": 1,
                "movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;movl (%edi), %eax": 2,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl (%esi), %edx;imull %edx;movl %edx, %ecx": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "shll $, %ebx;addl %eax, %ebx;movl (%esi), %edx;subl (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "leal (%eax), %ecx;andl $-, %ecx;movl %ecx, -(%ebp);movl %ecx, (%esi);movl -(%ebp), %ecx": 1,
                "movl %ebx, (%ecx);movl (%esi), %ebx;subl %eax, %ebx;movl %ebx, (%ecx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, (%ecx);jmp  <FT_Stream_OpenLZW+>;movl (%esi), %edx;movl (%esi), %eax;movl %edx, %ebx": 1,
                "movl -(%ebp), %edx;movl %ebx, (%edx);movl (%esi), %ecx;subl %eax, %ecx;movl %ecx, (%edx)": 1,
                "movl %esi, %eax;movl %edi, %esi;movl %eax, %edi;movl (%edi), %ebx;movl (%edi), %eax": 1,
                "movl %ecx, -(%ebp);movswl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl -(%ebp), %edx": 1,
                "jae  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;movl %esi, -(%ebp);movl %ecx, %esi": 1,
                "movl -(%ebp), %ebx;testb $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl -(%ebp), %edx": 1,
                "jbe  <FT_Stream_OpenLZW+>;cmpl %eax, -(%ebp);jbe  <FT_Stream_OpenLZW+>;movl (%esi), %ecx;leal (%ecx,%edx,), %edx": 1,
                "addl (%edi), %ebx;addl $, %ebx;andl $-, %ebx;addl (%edi), %eax;addl $, %eax": 1,
                "cmpl $, (%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%eax), %ebx;subl (%eax), %ebx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal (%edi), %eax;movl %eax, (%esp);calll - <FT_Outline_Get_CBox>": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%esi), %eax;subl (%esi), %eax;movl %eax, (%ebx);movl -(%ebp), %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 2,
                "movl %eax, -(%ebp);movl %esi, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl (%ebx), %eax": 1,
                "movl %ebx, %ecx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%edx), %eax": 1,
                "movl %edx, (%esp);calll *%eax;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "calll *%eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;leal (%ebx), %eax;movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;movl %edx, %esi;imull $, %edx, %eax;leal (%ebx,%eax), %eax": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "jb  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl (%ebx), %edx;leal (%edx,%edx,), %edx": 1,
                "subl %eax, %edx;cmpl -(%ebp), %edx;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movsbl (%ecx), %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;cmpl %ebx, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %ebx, (%esi);addl %ecx, %edi": 1,
                "orw (%eax), %dx;testb $, %dl;je  <FT_Stream_OpenLZW+>;orb $, (%esi);movl (%ebx), %edx": 1,
                "movl %eax, %ecx;cmpl %edx, %eax;jle  <FT_Stream_OpenLZW+>;movl %edx, %ecx;movl %eax, %edi": 1,
                "cmpl %edx, %eax;jle  <FT_Stream_OpenLZW+>;movl %edx, %ecx;movl %eax, %edi;cmpl %edx, %eax": 1,
                "movl $, %eax;cmpl %ebx, -(%ebp);jne  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl %eax, %edx;sarl $, %edx;leal (%eax,%edx), %esi": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%esp);movl %esi, (%esp);movl %eax, (%esp)": 2,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;leal (%edx,%edx,), %esi;shll $, %esi;addl %eax, %esi": 1,
                "movl (%eax), %ecx;movl (%eax), %edx;movl (%ecx), %edi;movl (%edx), %ebx;cmpl %edx, %ecx": 1,
                "movl (%ecx), %ecx;movl (%ecx), %ecx;cmpl %ecx, %edi;jle  <FT_Stream_OpenLZW+>;subl %ecx, %edi": 1,
                "movl (%edx), %edx;movl (%edx), %edx;cmpl %edx, %ebx;jge  <FT_Stream_OpenLZW+>;subl %ebx, %edx": 1,
                "subl %edi, %ecx;sarl %ecx;addw %cx, (%eax);movl (%edx), %edx;movl (%edx), %edx": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);movl -(%ebp), %eax;addl $, %esp;popl %ebx": 4,
                "movl %ebx, -(%ebp);movl (%eax), %esi;movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "movl $, (%eax);movl -(%ebp), %edx;movswl (%edx), %ebx;movl (%eax), %eax;cmpl %eax, %ebx": 1,
                "movswl (%edx), %ebx;movl (%eax), %eax;cmpl %eax, %ebx;jbe  <FT_Stream_OpenLZW+>;addl $, %ebx": 1,
                "jbe  <FT_Stream_OpenLZW+>;addl $, %ebx;andl $-, %ebx;leal -(%ebp), %edx;movl %edx, (%esp)": 2,
                "andl $-, %ebx;leal -(%ebp), %edx;movl %edx, (%esp);movl (%edi), %edx;movl %edx, (%esp)": 2,
                "movl %ebx, (%edi);movl -(%ebp), %edx;movswl (%edx), %ebx;addl $, %ebx;movl (%edi), %eax": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %ebx, (%edi);movl -(%ebp), %edx;movswl (%edx), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;leal (%eax,%eax,), %eax;leal (%ebx,%eax,), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;movl $, -(%ebp);movl %edi, -(%ebp);movl %edx, %edi": 1,
                "movl $, -(%ebp);movl %edi, -(%ebp);movl %edx, %edi;movl (%esi), %eax;movw %ax, (%ebx)": 1,
                "movl -(%ebp), %edx;movswl (%edx), %eax;cmpl %eax, -(%ebp);jge  <FT_Stream_OpenLZW+>;movl (%edx), %eax": 1,
                "movl -(%ebp), %edi;movl (%edi), %eax;movl (%edi), %edx;leal (%eax,%edx,), %ecx;movl -(%ebp), %ebx": 1,
                "movzwl (%edx), %ebx;addl $, %ebx;addl $, %eax;addl $, %edx;cmpl %eax, %ecx": 1,
                "movswl (%edi), %edx;movswl (%esi), %eax;subl %eax, %edx;movl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);cmpl %edi, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl $, %esi;movl %esi, %edi;movl %ebx, -(%ebp);imull $, %edi, %eax;movl -(%ebp), %edx": 2,
                "movswl %si, %esi;movswl %cx, %ecx;subl %ecx, %esi;movl %esi, -(%ebp);leal (%ebx,%ebx,), %ecx": 2,
                "shrl $, %ecx;addl %eax, %ecx;sarl $, %ecx;movl $, %edx;movl %ecx, %eax": 2,
                "movl %edx, (%ebx);movl %ecx, (%ebx);movb $, (%ebx);leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 2,
                "subl %eax, %edx;movl %edx, (%ebx);movl %ecx, (%ebx);movb $, (%ebx);cmpl $, (%ebx)": 2,
                "movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;movl -(%ebp), %edx;movb %al, (%edx)": 1,
                "movzwl (%edx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl $, (%esp);movl %edx, (%esp)": 1,
                "movl $, (%esp);movl %edx, (%esp);calll - <FT_Select_Charmap>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%ecx), %edx;movl %edx, -(%ebp);cwtl;addl %eax, %eax;movl %eax, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;testl %ecx, %ecx;js  <FT_Stream_OpenLZW+>;cmpl %ebx, (%esi,%eax,);jge  <FT_Stream_OpenLZW+>": 2,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %ebx, -(%ebp,%edx,);addl $, %edx;movl %edx, -(%ebp)": 1,
                "cmpl %ebx, %eax;je  <FT_Stream_OpenLZW+>;cmpl %ebx, %eax;setl -(%ebp);cmpl $, -(%ebp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;cmpl $, %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %edi;movl %edi, (%esp);calll - <FT_Select_Charmap>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movzbl (%eax), %eax;testb %al, %al;je  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl -(%ebp), %edi;andl $-, %edi;movl %edi, -(%ebp);movsbl %al, %eax": 1,
                "testw %dx, %dx;jle  <FT_Stream_OpenLZW+>;movswl %dx, %edx;addl %edx, %edx;movl %edx, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;testl %edx, %edx;js  <FT_Stream_OpenLZW+>;cmpl %edi, (%ebx,%eax,);jge  <FT_Stream_OpenLZW+>": 1,
                "cmpl %edi, (%ebx,%eax,);jge  <FT_Stream_OpenLZW+>;movl (%ebx,%eax,), %edi;movl %eax, %edx;addl $, %eax": 1,
                "movl %eax, %edx;addl $, %eax;cmpl %eax, %ecx;jge - <FT_Stream_OpenLZW+>;cmpl -(%ebp), %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %ecx, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;movl %edi, -(%ebp);cmpl -(%ebp), %eax;jle  <FT_Stream_OpenLZW+>": 1,
                "subl -(%ebp), %edx;movl %edx, %ecx;sarl $, %ecx;xorl %ecx, %edx;subl %ecx, %edx": 2,
                "xorl %ecx, %edi;subl %ecx, %edi;leal (%edx,%edx,), %edx;shll $, %edx;cmpl %edx, %edi": 1,
                "jle  <FT_Stream_OpenLZW+>;movzbl (%ebx,%esi), %edx;andl $, %edx;cmpb $, %dl;jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);shrl $, %eax;cmpl %eax, %edx;ja  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl (%ebp), %edi;movl (%edi), %eax;imull $, %eax, %edx": 1,
                "cmpl %eax, %edx;je  <FT_Stream_OpenLZW+>;cmpl %eax, %edx;setg %bl;movl $, %ecx": 1,
                "movl %edi, (%esp);calll - <FT_Get_Char_Index>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl %esi, (%esp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl %edx, -(%ebp);imull $, %edx, %eax;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;leal (%edx,%eax), %eax;movl %eax, -(%ebp);addl $, %eax;movl %eax, -(%ebp)": 1,
                "movzwl (%eax), %esi;andl $, %esi;movzwl %si, %edx;orw %di, %si;je  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);movl %edx, (%esp);movl $, (%esp);calll - <FT_DivFix>;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%esi), %ebx;cmpl %ebx, (%esi);je  <FT_Stream_OpenLZW+>": 1,
                "cmpl %edx, -(%ebp);jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;shll $, %ecx;movl (%esi), %ebx": 1,
                "cmpl (%esi), %edx;jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, (%esi);movl %edx, (%esi)": 1,
                "movl %ebx, (%esi);movl %edx, (%esi);movl %eax, (%esi);movl (%eax), %ebx;leal (%ebx,%ebx,), %edi": 1,
                "movl %edx, (%eax);movl %esi, (%eax);addl $, %eax;cmpl %eax, -(%ebp);ja - <FT_Stream_OpenLZW+>": 1,
                "movl $, (%esi);movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;addl $, %ecx;cmpl %ecx, -(%ebp)": 1,
                "cmpl %edx, %ebx;jg  <FT_Stream_OpenLZW+>;shll $, %edx;cmpl %edx, (%esi);jge  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>;subl $, (%eax);addl $, %esi;cmpl %esi, %ecx": 1,
                "cmpl %ebx, -(%ebp);jle  <FT_Stream_OpenLZW+>;cmpl %ebx, -(%ebp);jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl (%edi), %edx;movl %edx, %eax;movl $, %ecx;movl %edi, -(%ebp);movl %edx, %esi": 1,
                "jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl -(%ebp), %ebx;cmpl %ecx, -(%ebp);jle  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl $, %edx": 2,
                "addl $, %edi;testb $, %dl;je  <FT_Stream_OpenLZW+>;movb $, (%edi);movl -(%ebp), %eax": 2,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movswl (%esi), %eax;movl -(%ebp), %edx;imull %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl (%edx), %eax;movl -(%ebp), %ebx;movl %eax, (%ebx)": 1,
                "movl %ebx, (%eax);movl %ebx, (%edx);addl $, -(%ebp);movl -(%ebp), %esi;cmpl %esi, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx": 1,
                "leal (%eax,%eax,), %eax;shll $, %eax;addl %edi, %eax;movl %eax, -(%ebp);cmpl %eax, %edi": 1,
                "cmpl (%eax), %esi;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;testl %ecx, %ecx;je  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;testl %ecx, %ecx;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movswl (%esi), %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%eax), %ecx;cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl %ecx, (%eax);orb $, (%ecx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ecx, (%ebx)": 1,
                "movzwl (%eax), %esi;andl $, %esi;orl %esi, %edx;je - <FT_Stream_OpenLZW+>;movl %esi, %edx": 1,
                "sbbl %edi, %edi;andl $-, %edi;subl $-, %edi;cmpl %eax, %ebx;jae  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movswl (%esi), %edi;movl %edi, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movswl (%esi), %edi;movl %edi, -(%ebp);movl (%esi), %edx": 1,
                "addl (%edi), %eax;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movswl -(%edi), %ecx;cmpl %ecx, -(%ebp)": 1,
                "movl %edx, %eax;addl -(%edi), %eax;jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jg  <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %edi;movl -(%ebp), %ebx;jmp  <FT_Stream_OpenLZW+>;movswl (%eax), %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, %ecx;jmp  <FT_Stream_OpenLZW+>;movl $, %ecx;jmp  <FT_Stream_OpenLZW+>": 17,
                "movl $, %ecx;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;leal (%ecx,%ecx,), %eax;shll $, %eax": 1,
                "addl -(%ebp), %esi;movswl (%esi), %ebx;movl %edx, %eax;cmpl %ebx, %edi;jge - <FT_Stream_OpenLZW+>": 1,
                "shll $, %eax;movl -(%ebp), %edi;addl %eax, %edi;cmpl $, (%edi);jne  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%ebx);movl %edx, (%eax);movl %ecx, (%ebx);cmpl $, (%ebx)": 1,
                "cmpl $, %eax;ja  <FT_Stream_OpenLZW+>;addl $, %edi;andl $-, %edi;movl %edi, (%ebx)": 1,
                "shrl $, %eax;shll $, %edx;addl %edx, %eax;movl $, %edx;cmpl $, %eax": 1,
                "addl $, %esi;movl -(%ebp), %ebx;cmpl %esi, (%ebx);ja - <FT_Stream_OpenLZW+>;addl $, %esp": 1,
                "movl -(%ebp), %ebx;cmpl %esi, (%ebx);ja - <FT_Stream_OpenLZW+>;addl $, %esp;popl %ebx": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);calll - <FT_DivFix>;movl %eax, -(%ebp)": 1,
                "shll $, %edx;addl %edx, %eax;movl %eax, %edx;cmpl $, %eax;jle  <FT_Stream_OpenLZW+>": 1,
                "leal (%eax,%eax,), %eax;movl %eax, -(%ebp);movswl (%esi), %eax;cmpl -(%ebp), %eax;jl  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);movswl (%esi), %eax;cmpl -(%ebp), %eax;jl  <FT_Stream_OpenLZW+>;cmpl $, (%esi)": 1,
                "jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movsbl (%esi), %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%eax), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %esi, (%eax)": 1,
                "testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 2,
                "cmpl %edx, %eax;setne %al;movzbl %al, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "cmpl (%edx), %ecx;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;cmpl %eax, -(%ebp);jl  <FT_Stream_OpenLZW+>": 1,
                "addl $, %edx;cmpl %edx, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %esp": 1,
                "cmpl %edx, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %esp;popl %ebx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %edx, %edi;movl %ecx, -(%ebp)": 1,
                "movl %eax, %ebx;movl %edx, %ecx;movl (%ebx), %eax;leal (%eax,%ecx), %edx;cmpl %eax, %esi": 1,
                "movl %edx, (%esp);subl %esi, %eax;movl %eax, (%esp);calll - <FT_MulDiv>;addl -(%ebp), %eax": 1,
                "addl $, %ebx;cmpl %ebx, %edi;jae - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %eax, %ebx": 1,
                "movl %edx, (%esp);subl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_MulDiv>;addl -(%ebp), %eax": 2,
                "addl $, %eax;cmpl %eax, %ecx;ja - <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 2,
                "ja - <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "testl %eax, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %edx, %ebx;movl -(%ebp), %edx;jmp  <FT_Stream_OpenLZW+>": 1,
                "addl $, %ebx;cmpl %ebx, %edi;jae - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;addl $, %ecx": 1,
                "jne  <FT_Stream_OpenLZW+>;addl $, %ebx;cmpl %ebx, %edi;jae - <FT_Stream_OpenLZW+>;movl %ecx, -(%ebp)": 1,
                "movl %ebx, %ecx;jmp - <FT_Stream_OpenLZW+>;movl %ecx, -(%ebp);movl -(%ebp), %ebx;cmpl %ebx, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl (%ecx), %edx;subl (%ecx), %edx": 1,
                "movl -(%ebp), %ecx;movl %edi, %edx;calll - <FT_Stream_OpenLZW+>;cmpl %ebx, -(%ebp);jae  <FT_Stream_OpenLZW+>": 1,
                "addl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);ja - <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "calll - <FT_Stream_OpenLZW+>;movl (%ebp), %eax;testb $, (%eax);jne  <FT_Stream_OpenLZW+>;movl $, %edx": 1,
                "imull $, %ebx, %eax;movl (%ebp), %edx;leal (%edx,%eax), %eax;movl %eax, -(%ebp);movl (%eax), %ecx": 1,
                "movl (%ebp), %edx;leal (%edx,%eax), %eax;movl %eax, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "orb $, (%ecx);testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;cmpl $, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>;orb $, (%esi);jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl $, (%esp);movl %edi, %ecx": 1,
                "movl -(%ebp), %edx;subl -(%ebp), %edx;sarl $, %edx;imull $, %edx, %edx;cmpl $, %edx": 1,
                "sete %al;cmpl $, %edx;sete -(%ebp);je  <FT_Stream_OpenLZW+>;testb %al, %al": 1,
                "addl $, %eax;movl (%esi), %edx;movl %edx, -(%ebp);movl (%edi), %ecx;movl (%eax), %edx": 1,
                "movl (%edi), %ecx;movl (%eax), %edx;movl %edx, -(%ebp);leal (%edi), %edx;cmpl %edx, (%edi)": 1,
                "cmpl %edx, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;subl %ecx, %edx;movl %edx, %ecx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;subl %ecx, %edx;movl %edx, %ecx;movl -(%ebp), %edx": 1,
                "subl %ecx, %edx;movl %edx, %ecx;movl -(%ebp), %edx;subl -(%ebp), %edx;subl %edx, %ecx": 1,
                "movl -(%ebp), %esi;movl %ebx, -(%ebp);movl %ecx, %edi;movl -(%ebp), %ebx;testb $, (%esi)": 1,
                "movl %edi, %ecx;movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>;nop;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esp);movswl (%edi), %eax;subl %ecx, %eax;movl %eax, (%esp);calll - <FT_MulDiv>": 1,
                "addl $, %edi;cmpl %edi, %ebx;ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl -(%ebp), %eax": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;leal (%eax,%eax,), %eax;shll $, %eax;leal (%ecx,%eax), %edi": 1,
                "cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%edx), %eax;testl %ebx, %ebx;jne  <FT_Stream_OpenLZW+>": 1,
                "cmpl (%edx), %eax;je  <FT_Stream_OpenLZW+>;movl (%eax), %eax;jmp - <FT_Stream_OpenLZW+>;movl (%edx), %edx": 2,
                "jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%ecx), %esi;subl (%ecx), %esi;movl (%edx), %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;addl $, -(%ebp);cmpl $, -(%ebp);jne - <FT_Stream_OpenLZW+>;movl (%ebp), %edx": 2,
                "jmp - <FT_Stream_OpenLZW+>;addl $, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %esp": 2,
                "cmpl $, %eax;jle  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movl -(%ebp), %ecx;leal (%ecx,%eax), %edx;leal (%edx), %ebx;movl (%ebx), %eax;testb $, %al": 1,
                "je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);setl %al;cmpb %al, -(%ebp)": 1,
                "movl %eax, (%ecx);addl $, -(%ebp);movl -(%ebp), %edx;cmpl %edx, -(%ebp);ja - <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;cmpl %edx, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl %ebx, %ecx;movl (%eax), %eax": 1,
                "testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl %ebx, %ecx;movl (%eax), %eax;movl %eax, (%ecx)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %ebx, -(%ebp);addl $, %ebx;cmpl %esi, %ebx;jb - <FT_Stream_OpenLZW+>": 1,
                "movzbl %dl, %edx;subl $, %edx;andl $-, %edx;addl $, %edx;cmpl $, %eax": 1,
                "cmpl $, -(%ebp);jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;sarl %ecx;addl -(%ebp), %ecx": 1,
                "movl %edx, %eax;movl %edx, (%edi);addl -(%ebp), %eax;movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;andl $-, %eax": 1,
                "addl $, %eax;andl $-, %eax;movl %eax, (%edi);orb $, (%edi);movl %ebx, (%esp)": 1,
                "movl -(%ebp), %edx;movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);testb $, -(%ebp)": 1,
                "addl -(%ebp), %eax;sarl %eax;movl -(%ebp), %edx;subl %eax, %edx;movl %edx, (%edi)": 1,
                "subl %eax, %edx;movl %edx, (%edi);addl -(%ebp), %eax;movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;addl $, %edx;andl $-, %edx;movl %edx, -(%ebp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %esi, %eax;subl -(%ebp), %eax;sarl $, %eax;imull $, %eax, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;subl %edx, (%ecx);subl %edx, (%ecx);orb $, (%ebx)": 1,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpl -(%ebp), %esi": 1,
                "testb $, -(%ebx);jne  <FT_Stream_OpenLZW+>;movl -(%ebx), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "addl (%eax), %edx;movl %edx, -(%esi);jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "cmpl %eax, -(%ebp);ja  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;testb $, -(%ebx);je  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %esi, %edx;jmp  <FT_Stream_OpenLZW+>;testb $, (%edx);jne  <FT_Stream_OpenLZW+>": 1,
                "jbe  <FT_Stream_OpenLZW+>;cmpl %eax, -(%ebp);ja  <FT_Stream_OpenLZW+>;cmpl %edx, -(%ebp);jae  <FT_Stream_OpenLZW+>": 1,
                "jbe  <FT_Stream_OpenLZW+>;movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;subl -(%ebp), %ecx": 1,
                "jge  <FT_Stream_OpenLZW+>;movl %eax, -(%esi);cmpl %esi, %edi;jbe  <FT_Stream_OpenLZW+>;movl %ebx, %edx": 1,
                "cmpl %ebx, %edx;leal (%esi), %esi;jae  <FT_Stream_OpenLZW+>;movl (%edx), %esi;testl %esi, %esi": 1,
                "testl %esi, %esi;je  <FT_Stream_OpenLZW+>;movl (%edx), %eax;movl (%edx), %edi;movl (%esi), %ecx": 2,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "leal (%eax,%eax,), %eax;shll $, %eax;movl -(%ebp), %esi;addl %eax, %esi;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %esi;addl %eax, %esi;movl -(%ebp), %ebx;movl $, -(%ebp);cmpl %ebx, %esi": 1,
                "movl -(%ebp), %ebx;movl $, -(%ebp);cmpl %ebx, %esi;ja - <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "ja - <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl $, -(%ebp);jmp - <FT_Stream_OpenLZW+>;addl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);imull $, -(%ebp), %eax;leal (%esi,%eax), %eax": 1,
                "adcl $, %edx;shrl $, %eax;shll $, %edx;addl %edx, %eax;movl (%esi), %edx": 1,
                "movl %ecx, (%edx);movl -(%ebp), %eax;movl %eax, (%edi);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "leal (%edi,%eax,), %eax;leal (%eax), %esi;movl (%eax), %eax;movl -(%ebp), %edx;imull %edx": 1,
                "addl $, %ebx;cmpl %ebx, (%edi);ja - <FT_Stream_OpenLZW+>;movl (%edi), %eax;movl -(%ebp), %edx": 1,
                "movl (%edi), %eax;movl -(%ebp), %edx;imull %edx;movl %edx, %ecx;sarl $, %ecx": 4,
                "movl %ecx, -(%ebp);movl %ecx, (%ebx);movl -(%ebp), %eax;subl (%ebx), %eax;movl -(%ebp), %edx": 1,
                "movl %esi, %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "movl (%ebp), %ecx;leal -(%ebp), %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;addl $, %esp;popl %ebx": 1,
                "movl %eax, (%esp);calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 2,
                "movl (%edx), %edx;movl (%ebp), %ecx;movl %edx, (%ecx);jmp  <FT_Stream_OpenLZW+>;movl $, %edi": 1,
                "movl %eax, (%esp);movl (%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp);calll - <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %ebx;movl $, %edi": 1,
                "movl (%ebp), %ebx;movl $, %edi;movl $, %ecx;movl (%ebp), %esi;rep  cmpsb %es:(%edi), (%esi)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpw $, (%edx);je  <FT_Stream_OpenLZW+>;movl (%edx), %esi;leal (%esi,%eax,), %ebx;movzbl (%ebx), %edi": 1,
                "movl %eax, %ecx;cmpl %esi, %edi;jb  <FT_Stream_OpenLZW+>;movzbl (%ebx), %esi;shll $, %esi": 1,
                "ja  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;movl $, %ebx;subl %eax, %ebx": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%eax), %ecx": 1,
                "leal -(%ebp), %esi;movl %esi, (%esp);movl $, (%esp);movl %edx, (%esp);movl (%eax), %eax": 1,
                "movb $, (%ebx);movl %eax, (%ebx);addl $, %esp;popl %ebx;popl %esi": 1,
                "jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;addl %ecx, (%edx,%ebx,);incl %ebx;jmp  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;addl %esi, (%edx,%ecx,);incl %ecx;cmpl %eax, %ecx;jne - <FT_Stream_OpenLZW+>": 1,
                "jb  <FT_Stream_OpenLZW+>;movzbl (%edx), %eax;shll $, %eax;movzbl (%edx), %ebx;orl %ebx, %eax": 1,
                "movzbl (%edx), %eax;shll $, %eax;movzbl (%edx), %ebx;orl %ebx, %eax;cwtl": 4,
                "pushl %esi;pushl %ebx;movl (%ebp), %esi;movw (%edx), %bx;subl %ecx, %ebx": 1,
                "movl %ecx, (%eax,%edx,);movl $, %eax;popl %ebp;retl;pushl %ebp": 1,
                "movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx)": 5,
                "subl %ecx, %edi;movl %edx, %ecx;sarl $, %ecx;movl %ecx, %ebx;xorl %edx, %ebx": 1,
                "xorl %edx, %ebx;subl %ecx, %ebx;movl %edi, %ecx;andl $, %ecx;shrl $, %edi": 1,
                "orl %esi, %ecx;xorl %eax, %edx;js  <FT_Stream_OpenLZW+>;movl %ecx, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, %ecx;shll $, %ecx;movl %ecx, -(%ebp);sarl $, %eax;movl %edi, %ecx": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%ebp), %ecx;addl %ecx, (%eax,%edx,);popl %ebp": 3,
                "pushl %ebp;movl %esp, %ebp;movl (%eax), %edx;addl $, %edx;movl %edx, (%eax)": 1,
                "cmpl $, %ebx;jbe  <FT_Stream_OpenLZW+>;movl $, (%eax);movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %esp, %ebp;movzwl (%ebp), %edx;movl (%ebp), %eax;movl (%eax), %eax;movl (%ebp), %ecx": 2,
                "movl (%ebp), %ecx;leal (%edx,%ecx), %eax;testl %eax, %eax;jle  <FT_Stream_OpenLZW+>;andl $-, %eax": 3,
                "testl %eax, %eax;setg %dl;movzbl %dl, %edx;subl $, %edx;andl %edx, %eax": 6,
                "jmp  <FT_Stream_OpenLZW+>;movl $, %eax;popl %ebp;retl;pushl %ebp": 11,
                "subl %esi, %eax;popl %ebx;popl %esi;popl %ebp;retl": 1,
                "setne %dl;cmpb $, %dl;sbbl %edx, %edx;andl %edx, %eax;addl %esi, %eax": 1,
                "movzbl %dl, %edx;subl $, %edx;movl %esi, %eax;andl %edx, %eax;subl %edi, %eax": 1,
                "andl $, %edx;cmpl $, %edx;je  <FT_Stream_OpenLZW+>;cmpl $, %edx;jg  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, %ebx;sarl $, %ebx;shrl $, %ebx;addl %ebx, %edx;sarl $, %edx": 2,
                "sarl $, %edx;shrl $, %edx;addl %edx, %ecx;sarl $, %ecx;movl %ecx, (%eax)": 1,
                "sarl $, %ecx;shrl $, %ecx;addl %ecx, %edx;sarl $, %edx;movl %edx, (%eax)": 3,
                "movl %esp, %ebp;movl (%ebp), %eax;popl %ebp;retl;pushl %ebp": 2,
                "cmpl %ecx, %eax;jge  <FT_Stream_OpenLZW+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "cmpl $, (%edx);jne  <FT_Stream_OpenLZW+>;pushl %ebp;movl %esp, %ebp;pushl %esi": 1,
                "pushl %esi;pushl %ebx;movl %eax, %ebx;movl $, %esi;movl %ebx, %eax": 1,
                "cmpb $, %dl;je  <FT_Stream_OpenLZW+>;movl $, %eax;cmpb $, %dl;jne  <FT_Stream_OpenLZW+>": 1,
                "subl $, %esi;sete %al;jmp  <FT_Stream_OpenLZW+>;testb %al, %al;je - <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;cmpl (%esi), %edi;jb  <FT_Stream_OpenLZW+>;movl $, (%esi);jmp  <FT_Stream_OpenLZW+>": 2,
                "addl $, %edi;movl %edi, (%esi);cmpl $, %edx;jbe  <FT_Stream_OpenLZW+>;movl $, (%esi)": 1,
                "movl %edi, (%esi);cmpl $, %edx;jbe  <FT_Stream_OpenLZW+>;movl $, (%esi);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%ebx);movzwl %dx, %eax;movl %eax, (%ebx);movl (%esi), %ecx;addl $, %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax;movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl %esi, %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al;je - <FT_Stream_OpenLZW+>": 2,
                "popl %esi;popl %edi;popl %ebp;retl;movl (%eax), %edx": 1,
                "retl;movl (%eax), %edx;testl %edx, %edx;jg  <FT_Stream_OpenLZW+>;movl $, (%eax)": 1,
                "testl %edx, %edx;jg  <FT_Stream_OpenLZW+>;movl $, (%eax);retl;subl $, %edx": 1,
                "leal (%edx,%eax,), %eax;cmpl %ecx, (%eax);je  <FT_Stream_OpenLZW+>;leal (%esi,%esi,), %eax;leal (%edx,%eax,), %eax": 1,
                "cmpl %eax, %edx;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %eax, %edx;cmpb $, (%edx)": 1,
                "jl  <FT_Stream_OpenLZW+>;movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>;leal (%eax,%eax,), %ecx;movl (%ebx), %eax": 1,
                "leal (%ecx,%ecx,), %eax;leal (%ebx,%eax,), %eax;cmpl %ecx, (%eax);je  <FT_Stream_OpenLZW+>;leal (%edi,%edi,), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%esi), %eax;cmpl (%esi), %eax;jl  <FT_Stream_OpenLZW+>;movl $, (%esi)": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;addl $, %ecx;movl %ecx, (%eax)": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl %eax, (%ecx);je  <FT_Stream_OpenLZW+>;addl $, %ecx;cmpl %ecx, %ebx": 1,
                "jbe  <FT_Stream_OpenLZW+>;andl $, %eax;movl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>;movzbl (%esi), %eax": 1,
                "addl $, %ecx;subl (%esi), %ecx;cmpl %ecx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl $, (%esi)": 1,
                "je  <FT_Stream_OpenLZW+>;subl $, %edx;movzwl %dx, %edx;leal (,%edx,), %edx;movl %edx, -(%ebp)": 1,
                "jne - <FT_Stream_OpenLZW+>;movb $, (%esi);movl -(%ebp), %eax;addl %eax, (%esi);addl $, %esp": 1,
                "movl %edx, %ebx;movl (%edx), %edx;movzwl (%eax), %ecx;cmpl %ecx, %edx;jb  <FT_Stream_OpenLZW+>": 1,
                "movl (%edx), %edx;movzwl (%eax), %ecx;cmpl %ecx, %edx;jb  <FT_Stream_OpenLZW+>;movl $, %edx": 1,
                "calll *(%eax);movl %eax, %edx;jmp  <FT_Stream_OpenLZW+>;movl (%eax), %ecx;leal (%ecx,%edx,), %edx": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll *(%eax);movl %eax, %edx;movl %edx, (%ebx)": 1,
                "ja  <FT_Stream_OpenLZW+>;cmpb $, (%eax);je  <FT_Stream_OpenLZW+>;movl $, (%eax);jmp  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>;testb $, (%ebx);je  <FT_Stream_OpenLZW+>": 1,
                "cmpl (%ebx), %eax;jl  <FT_Stream_OpenLZW+>;movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>;leal (%eax,%eax,), %esi": 1,
                "movl %edi, -(%ebp);movl %eax, %ebx;movb $, (%eax);movl (%eax), %esi;movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);movl (%ebx), %edx;movl %edx, (%ebx);movl (%ebx), %edx": 1,
                "addl $, %eax;andl $-, %eax;movl %eax, (%ebx);movswl (%esi), %eax;movl %edi, %edx": 2,
                "addl $, %eax;andl $-, %eax;movl %eax, (%ebx);movzwl (%ebx), %eax;movzwl (%ebx), %edx": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll - <FT_Set_Transform+>;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;leal (,%edx,), %esi;movl %edx, %edi;movb $, -(%ebp);movl $, -(%ebp)": 1,
                "leal (,%edx,), %esi;movl %edx, %edi;movb $, -(%ebp);movl $, -(%ebp);subl -(%ebp), %eax": 1,
                "movb $, -(%ebp);movl (%ebx), %eax;movl (%eax,%esi), %eax;subl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "shrl $, %eax;shll $, %edx;addl %edx, %eax;addl -(%ebp), %eax;movl (%ebx), %ecx": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <FT_Stream_OpenLZW+>;movl %eax, %edi;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl (%ebp), %edx;movl %eax, (%edx);movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %ebx, (%edi);jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "testb $, %dl;je  <FT_Stream_OpenLZW+>;movb $, (%edi);movl (%ebx), %edi;movl %edi, (%ebx)": 1,
                "movl (%ebx), %eax;movl %eax, (%ebx);movl %edi, (%ebx);movl %esi, (%ebx);movl (%ebx), %esi": 1,
                "movl %esi, (%ebx);movl %ecx, (%ebx);movl %edx, (%ebx);movl %eax, (%ebx);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl -(%ebp), %esi;movzwl (%esi), %edx;movl %edx, (%esp);leal (%ebx), %edx": 1,
                "movzwl (%esi), %edx;movl %edx, (%esp);leal (%ebx), %edx;movl %edx, (%esp);movl $, %ecx": 1,
                "movl %edi, (%ebx);movl (%ebx), %esi;movl %esi, (%ebx);movl (%ebx), %esi;movl %esi, (%ebx)": 2,
                "movl %esi, (%ebx);movl %ecx, (%ebx);movl %edx, (%ebx);movb $, (%ebx);addl $, %esp": 1,
                "movl %edi, %eax;movb %al, (%ebx);movl (%esi), %ecx;movl (%esi), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;movl (%eax), %esi;testl %esi, %esi;je  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl (%ecx), %edx;movl %edx, (%ebx)": 1,
                "movw %dx, (%ebx);movb $, (%ebx);movb $, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movzwl -(%ebp), %edi;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %edi, (%esp)": 1,
                "movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %edx;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "addl $, %esi;cmpl (%ebx), %esi;jb - <FT_Stream_OpenLZW+>;cmpw $, (%ebx);je  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %eax;andl $, %eax;movl -(%ebp), %edx;movb %al, (%edx);movl -(%ebp), %eax": 1,
                "testl %edx, %edx;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "movl (%edx), %edx;movl %edx, (%eax);movzwl (%ebx), %edx;movl (%ebx), %eax;leal -(%eax,%edx,), %eax": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;addl $, %edi;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;addl $, %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %edi": 1,
                "movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx);movl (%edx), %eax": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %esi;movl (%esi), %ebx": 1,
                "cmpl %edx, %eax;jle  <FT_Stream_OpenLZW+>;subl -(%ebp), %eax;movl %eax, (%esp);subl -(%ebp), %edx": 1,
                "movl (%esi), %edi;movl (%ebx), %edx;movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %eax": 1,
                "addl %eax, %edi;movl %edi, (%esi);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "leal (%edx,%edi,), %edx;movl %edx, -(%ebp);movl (%edx), %edx;movl %edx, -(%ebp);movl (%esi), %edx": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);movl (%esi), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movzwl %bx, %ebx;movl (%ebp), %ecx;movl (%ecx), %edx": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl (%ebp), %edi;testb $, (%eax);je  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, (%edi);movl -(%ebp), %ecx;movl %ecx, (%edi);movl -(%ebp), %edx;movl %edx, (%edi)": 1,
                "movl %ecx, (%esp);movl (%edx), %edx;subl (%eax), %edx;movl %edx, (%esp);movl %ebx, (%esp)": 1,
                "cmpl -(%ebp), %ebx;jl - <FT_Stream_OpenLZW+>;movzbl -(%ebp), %eax;movl -(%ebp), %edx;leal (%edx,%eax), %edx": 2,
                "movl -(%ebp), %edx;leal (%edx,%eax), %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;cmpl %ecx, -(%ebp)": 1,
                "testb %al, %al;js  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movw $, (%edi,%ebx,);incl %ebx": 1,
                "js  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movw $, (%edi,%ebx,);incl %ebx;jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl -(%ebp), %ebx;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl %eax, -(%ebp);jb  <FT_Stream_OpenLZW+>;cmpl -(%ebp), %ebx;jne - <FT_Stream_OpenLZW+>;movb -(%ebp), %dl": 1,
                "movl $, %eax;movl -(%ebp), %edx;cmpl %edx, (%esi);jbe  <FT_Stream_OpenLZW+>;movl (%esi), %ecx": 1,
                "movl (%ecx,%edx,), %ecx;movl %ecx, -(%ebp);addl $, %edx;movl %edx, -(%ebp);movl (%esi), %ebx": 1,
                "cmpl (%ebx,%edx,), %ecx;je  <FT_Stream_OpenLZW+>;movl %ecx, (%esp);movl %edi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl (%esi), %eax": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Angle_Diff+>;movl %eax, -(%ebp);cmpl $, -(%ebp)": 5,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;testw $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx,%ebx,);addl $, %ebx;cmpl %ebx, (%esi);ja - <FT_Stream_OpenLZW+>": 2,
                "movl %eax, (%esp);movl -(%ebp), %ecx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp)": 2,
                "testw $, -(%ebp);je  <FT_Stream_OpenLZW+>;addl -(%ebp), %eax;movl %eax, (%edi);leal -(%ebp), %edx": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "je  <FT_Stream_OpenLZW+>;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "shrl $, %eax;shll $, %edx;addl %edx, %eax;movl -(%ebp), %ecx;addl %eax, (%ecx,%ebx,)": 2,
                "addl %eax, (%ecx,%ebx,);addl $, %ebx;jmp  <FT_Stream_OpenLZW+>;movl $, %ebx;cmpl (%ebp), %ebx": 1,
                "movl -(%ebp), %edx;movzwl (%edx,%ebx,), %eax;cmpl %eax, (%ebp);jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "cmpw %cx, (%eax);ja  <FT_Stream_OpenLZW+>;movl $, %eax;cmpb $, (%ebx);je  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, %ecx;jmp  <FT_Stream_OpenLZW+>;movl %esi, %edx;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movzwl (%eax), %esi;testw %si, %si;jne  <FT_Stream_OpenLZW+>;movl (%eax), %eax": 1,
                "movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>;movswl %dx, %edx;movl (%eax), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Outline_Embolden+>;movl %eax, (%ebx);movl (%ebx), %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl %eax, (%ebx);movl (%ebx), %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl %eax, %ebx;calll - <FT_Stream_OpenLZW+>;movl %eax, %edx;movzwl (%ebx), %eax;imull %edx": 1,
                "movl (%esi), %eax;cmpl $, %eax;jg  <FT_Stream_OpenLZW+>;cmpb $, (%esi);je  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%esi);movl $, (%esi);jmp  <FT_Stream_OpenLZW+>;leal -(%eax), %ecx;movl %ecx, (%esi)": 1,
                "cmpl $, %eax;adcl $, %eax;shll $, %eax;movswl (%esi), %ecx;movl $, %edx": 1,
                "movl (%eax), %edx;movl (%ebp), %ecx;leal (%edx,%ecx,), %ebx;movl (%ebx), %esi;calll - <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;movl (%ebp), %ecx;leal (%edx,%ecx,), %ebx;calll - <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <FT_DivFix>;movl %eax, (%ebx)": 1,
                "movl %ebx, -(%ebp);movl (%edi), %ebx;movl %ebx, -(%ebp);movl (%edi), %esi;movzwl (%edi), %ebx": 1,
                "movzwl (%edi), %ebx;movw %bx, -(%ebp);movswl %bx, %ebx;movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "jl  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;addl $, %ecx;movzbl -(%ecx), %ebx;shll $, %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;addl $, %ecx;movzbl -(%ecx), %ebx;shll $, %ebx;movzbl -(%ecx), %esi": 1,
                "movzbl -(%ecx), %esi;orl %esi, %ebx;movw %bx, (%eax);cmpw %dx, %bx;jle  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %ecx;movl %edi, -(%ebp)": 1,
                "ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl -(%ebp), %ebx;movl %ecx, -(%ebp);movl -(%ebp), %edi": 1,
                "leal (%edx,%eax), %eax;addl -(%ebp), %eax;cmpl (%esi), %eax;jbe  <FT_Stream_OpenLZW+>;movl $, (%esp)": 1,
                "addl -(%ebp), %eax;cmpl (%esi), %eax;jbe  <FT_Stream_OpenLZW+>;movl $, (%esp);movl -(%ebp), %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%edi), %eax;movl $, (%eax);movl (%edi), %eax;movl $, (%eax)": 1,
                "movl $, (%eax);movl -(%ebp), %ebx;addl $, %ebx;movl $, %eax;cmpl %ebx, -(%ebp)": 1,
                "movl $, %eax;cmpl %ebx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movzbl (%ecx), %eax": 1,
                "movzbl (%ecx), %eax;shll $, %eax;movzbl (%ecx), %edx;orl %eax, %edx;movw %dx, -(%ebp)": 1,
                "movl (%edi), %eax;movl (%eax), %eax;movzwl -(%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp)": 1,
                "addl $, %ecx;cmpl %ebx, %ecx;je  <FT_Stream_OpenLZW+>;movzbl -(%ecx), %edx;movb %dl, (%eax)": 1,
                "movb %cl, -(%ebp);movzbl %cl, %ecx;addl %eax, %ecx;movl %ecx, -(%ebp);cmpl %ecx, -(%ebp)": 1,
                "testb $, %dl;je  <FT_Stream_OpenLZW+>;leal (%ebx), %eax;cmpl %eax, -(%ebp);jb  <FT_Stream_OpenLZW+>": 2,
                "movl -(%ebp), %ebx;movl %ecx, (%ebx);andl $-, %edx;movl -(%ebp), %ebx;movb %dl, (%ebx)": 1,
                "jb - <FT_Stream_OpenLZW+>;movl (%esi), %edx;movl %edx, -(%ebp);addl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %ecx;movl %ebx, (%ecx);andl $, %edx;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jb - <FT_Stream_OpenLZW+>;movzwl -(%ebp), %edx;movw %dx, (%esi)": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movzbl (%ebp), %eax;movb %al, -(%ebp);movl (%ebx), %esi": 1,
                "cmpl $, %ecx;jbe  <FT_Stream_OpenLZW+>;movzwl (%esi), %eax;movb $, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%eax), %edx;leal -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl (%eax), %eax": 1,
                "testl %edx, %edx;jle  <FT_Stream_OpenLZW+>;movl (%ebx), %ecx;testl %ecx, %ecx;jne  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll *(%esi)": 2,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll *(%esi);movl %eax, -(%ebp)": 1,
                "movl $, (%ebx);movl $, (%ebx);cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 1,
                "cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl %eax, %edx;negl %edx": 1,
                "addl %edx, %eax;movl %eax, (%ebx);movl (%ebx), %eax;movl -(%ebp), %edx;imull %edx": 10,
                "movl %eax, (%ebx);movl (%ebx), %eax;movl -(%ebp), %edx;imull %edx;movl %edx, %ecx": 10,
                "movl (%ebx), %eax;addl (%ebx), %eax;movl %eax, (%ebx);movl $, (%ebx);subl (%ebx), %eax": 1,
                "movl %ecx, (%eax,%edi,);movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, %ecx;movl (%ebx), %eax": 2,
                "movl (%eax), %edx;movb $, (%edx,%edi);movl (%eax), %edx;movb $, (%edx,%edi);movl (%eax), %edx": 2,
                "cmpb $, (%eax);je  <FT_Stream_OpenLZW+>;movl (%eax), %edi;movl %edi, -(%ebp);movl (%ebx), %edx": 1,
                "leal -(%ebp), %ecx;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl $, %ecx": 1,
                "testb $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;addl $, %edx;leal (%ebx), %eax": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %edi;movl (%edi), %eax;movl -(%ebp), %edi;movl -(%eax,%edi,), %edx": 1,
                "movl -(%ebp), %edi;movl (%edi), %eax;movl -(%ebp), %edi;movl -(%eax,%edi,), %edx;movl -(%eax,%edi,), %eax": 4,
                "movl -(%eax,%edi,), %eax;movl %eax, (%ebx);movl %edx, (%ebx);testb $, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%edx), %eax;addl %eax, (%ebx);movl (%edx), %edx;addl %edx, (%ebx);leal (%edi,%ecx,), %edx": 3,
                "addl %edx, (%ebx);leal (%edi,%ecx,), %edx;movl (%edx), %ecx;addl %ecx, (%ebx);movl (%edx), %edx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx), %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl (%ebx), %edi": 1,
                "movl -(%ebp), %edx;movl %eax, (%ebx);movl %edx, (%ebx);movl -(%ebp), %eax;movl -(%ebp), %edx": 3,
                "cmpl %edi, -(%ebp);ja - <FT_Stream_OpenLZW+>;movzwl (%esi), %eax;testb $, %al;jne  <FT_Stream_OpenLZW+>": 1,
                "jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl (%edi), %eax;leal (%eax,%edx,), %edx;leal (%eax,%ecx,), %eax": 1,
                "testb $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl (%ebx), %ecx;movl (%ecx), %edx;movl -(%ebp), %eax": 1,
                "movl (%ebx), %ecx;movl (%ecx), %edx;movl %edi, %eax;imull %edx;movl %edx, %ecx": 1,
                "movl (%ecx), %edx;movl %edi, %eax;imull %edx;movl %edx, %ecx;sarl $, %ecx": 1,
                "andl $-, %edi;movl -(%ebp), %eax;orl %edi, %eax;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;addl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;addl $, -(%ebp);movl -(%ebp), %edi;cmpl %edi, -(%ebp)": 1,
                "leal (%edx,%eax,), %edx;cmpl (%edi), %edx;jbe  <FT_Stream_OpenLZW+>;movl $, (%esp);addl $, %eax": 1,
                "movl $, (%esp);addl $, %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <FT_Attach_File+>": 1,
                "movl -(%ebp), %ecx;movl %eax, (%edi,%ecx,);movl %edx, (%edi,%ecx,);movl -(%ebp), %edi;movswl (%edi), %edi": 3,
                "movl (%edi), %edx;movb $, (%edx,%eax);movswl (%edi), %eax;movl (%edi), %edx;movb $, (%edx,%eax)": 3,
                "movb $, (%edx,%eax);movswl (%edi), %eax;movl (%edi), %edx;movb $, (%edx,%eax);movl (%ebx), %edi": 1,
                "movl (%eax), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "addl $, %edx;leal (%ebx), %eax;movswl -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll *(%esi)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebx), %eax;movl $, %edi": 1,
                "testb $, (%eax);je  <FT_Stream_OpenLZW+>;andl $-, %esi;testl $, %esi;je  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %edi;movl %edi, (%esp);movl %edx, (%esp);movl %eax, (%esp);calll *(%ecx)": 1,
                "movzbl -(%ebp), %eax;shll $, %eax;movl %eax, (%ebx);movsbl -(%ebp), %edx;movl %edx, %eax": 2,
                "movl %ebx, %ecx;movl (%ebp), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl $, (%esp)": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%ebp), %edi;movl (%edi), %edx;imull %edx": 1,
                "movl %ebx, %ecx;movl (%ebp), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %edi": 1,
                "movl (%ecx), %edx;movl %edx, -(%ebp);cmpl $, (%esi);je  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax": 1,
                "cmpl $, (%eax);jne  <FT_Stream_OpenLZW+>;testb $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "cmpl %eax, -(%ebp);je  <FT_Stream_OpenLZW+>;movl $, %eax;movl %edi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movzbl (%edi,%eax), %edx;cmpl %edx, %ebx;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl -(%ebp), %ecx": 1,
                "movl $, %eax;movl (%ebp), %edx;addl $, %edx;cmpl %edx, -(%ebp);jbe  <FT_Stream_OpenLZW+>": 1,
                "cmpl %ecx, %eax;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl -(%ebp), %ecx;movl -(%ebp), %ebx": 1,
                "jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl -(%ebp), %ecx;movl -(%ebp), %ebx;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esi);movl -(%ebp), %edx;cmpb $, (%edx);je  <FT_Stream_OpenLZW+>;cmpw $, (%edx)": 1,
                "je  <FT_Stream_OpenLZW+>;cmpw $, (%edx);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, (%esp);calll - <FT_DivFix>;cwtl;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <FT_DivFix>;cwtl": 1,
                "movl -(%ebp), %ecx;subl %edx, %ecx;movl %ecx, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl (%eax), %edx": 1,
                "movl %ecx, -(%ebp);movl (%eax), %edx;leal -(%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>": 35,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx)": 36,
                "je  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl -(%ebp), %edi;shll $, %edi;movl (%ebx), %eax": 1,
                "movl $, -(%ebp);movl -(%ebp), %edi;shll $, %edi;movl (%ebx), %eax;movl (%eax,%edi), %eax": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpl $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "movl (%edi), %ecx;movl %ecx, -(%ebp);movl %edi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;cmpl $, %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;testw $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%esi), %eax;addl %eax, %eax": 1,
                "movl %eax, %ebx;movl %edx, %esi;movl (%edx), %edi;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <FT_Angle_Diff+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebx), %edi": 1,
                "movl %esi, (%esp);calll - <FT_Angle_Diff+>;cmpb $, (%ebx);je  <FT_Stream_OpenLZW+>;movl %esi, %edx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp)": 2,
                "shll $, %eax;leal (%ebx,%eax), %eax;movl %eax, (%esp);movl %edi, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;addl $, %ebx;cmpl $, %ebx;jne - <FT_Stream_OpenLZW+>;leal -(%ebp), %edx": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movw $, -(%ebp);leal -(%ebp), %ebx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%edi), %edx;testl %edx, %edx;je  <FT_Stream_OpenLZW+>;movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpl %ecx, -(%edx);jne  <FT_Stream_OpenLZW+>;addl $, (%esi)": 1,
                "je  <FT_Stream_OpenLZW+>;addl $, %eax;addl $, %edx;cmpl -(%ebp), %eax;jne - <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Angle_Diff+>;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);movzbl (%edi), %eax;shll $, %eax;movzbl (%edi), %edx": 1,
                "orl %edx, %eax;movzwl %ax, %ecx;movl %ecx, -(%ebp);movzbl (%edi), %edx;shll $, %edx": 1,
                "jbe  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %edi;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;addl %ebx, %edx;movl %ebx, %ecx": 1,
                "movl (%ebp), %ebx;movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %ebx, %eax;addl $, %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "cmpb $-, %al;jne  <FT_Stream_OpenLZW+>;movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "movl $, %esi;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;cmpw $, (%ebx);je  <FT_Stream_OpenLZW+>": 1,
                "movl $, %ecx;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl $, %esi;cmpl $, %eax": 1,
                "movl (%ebp), %ebx;movl %eax, (%ebx);movl $, %ecx;movl (%ebp), %ebx;movl (%ebx), %edx": 1,
                "movl (%ecx), %ecx;movl %ecx, %edx;subl %eax, %edx;cmpl %edx, %esi;jg  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Angle_Diff+>;movl %eax, %esi;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebp), %edx": 1,
                "movl $, (%eax);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "cmpl $, (%eax);jne  <FT_Stream_OpenLZW+>;cmpl $, (%ebx);je  <FT_Stream_OpenLZW+>;cmpl $, (%ebx)": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl $, (%ebx);je  <FT_Stream_OpenLZW+>;movl $, %edi;movl $, -(%ebp)": 1,
                "ja  <FT_Stream_OpenLZW+>;movl %ebx, %edi;addl $, %ebx;movl (%ebp), %ecx;cmpl (%ecx), %ebx": 1,
                "movl %ebx, (%esp);calll - <FT_Get_Glyph_Name>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp)": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebp), %ebx;andl $-, (%ebx);movl (%ebp), %ebx": 1,
                "movl (%eax), %edi;movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl $, %ebx;leal (%ebx), %edx;movl %edx, -(%ebp);movl %edx, (%esp);movl -(%ebp), %eax": 1,
                "shll $, %edx;movzbl (%edi), %eax;orl %eax, %edx;movw %dx, (%ebx);leal (%edi), %esi": 1,
                "jmp  <FT_Stream_OpenLZW+>;testb $-, %dl;nop;je  <FT_Stream_OpenLZW+>;addl $, %eax": 1,
                "shll $, %edx;movl %edx, -(%ebp);movl %edx, %eax;movl $, -(%ebp);movl $, %ecx": 1,
                "orl %edi, %ecx;movswl %cx, %ecx;shll $, %ecx;leal (%eax), %edi;movzbl (%eax), %edx": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;movl $, %edi;movl $, %ecx;movl (%ebp), %esi": 1,
                "movl (%ebp), %esi;rep  cmpsb %es:(%edi), (%esi);seta %bl;setb %cl;movl $, %eax": 2,
                "movl $, (%eax);movl $, %eax;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "movzwl -(%ebp), %eax;movl -(%ebp), %edx;imull %eax, %edx;movl %edx, -(%ebp);imull $, -(%ebp), %edx": 1,
                "leal (%eax,%edx,), %eax;movl %eax, (%ecx);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "movl %eax, (%esp);movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esp);movl %esi, (%esp)": 2,
                "movl (%eax), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl %eax, -(%ebp)": 1,
                "movl %ecx, (%eax);movzwl -(%ebp), %eax;movl %eax, (%ecx);movl $, (%ecx);movzwl -(%ebp), %eax": 1,
                "jl - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movzwl -(%ebp), %eax;addl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%esi), %edx;movl (%esi), %eax;movb %al, (%edx);movl (%esi), %eax;movb $, (%eax)": 1,
                "cmpl %eax, -(%ebp);jl - <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl -(%ebp), %ebx;cmpl $, (%ebp)": 1,
                "calll - <FT_Angle_Diff+>;movl %eax, %esi;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 1,
                "movl %eax, (%esp);movl %edx, (%esp);movl %esi, (%esp);calll  <FT_Stream_OpenLZW+>;leal (%esi), %eax": 1,
                "movl %esi, (%esp);calll  <FT_Stream_OpenLZW+>;leal (%esi), %eax;movl %eax, (%esi);movl (%esi), %edx": 1,
                "leal (%edx,%edx,), %edx;leal (%eax,%edx,), %edx;movl %edx, (%esi);movl (%esi), %eax;leal (%edx,%eax,), %edx": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%esi,%eax,), %edx;addl $, %edx;cmpl $, %edx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl (%eax), %edx": 1,
                "movl -(%ebp), %edx;leal (%eax,%edx,), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %ecx, (%esp);calll - <FT_Angle_Diff+>;movl %eax, (%edi);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Angle_Diff+>;movl -(%ebp), %eax;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 7,
                "je  <FT_Stream_OpenLZW+>;movl (%esi), %ecx;cmpl %ecx, (%edx);jne  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl %eax, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl %ebx, (%edi);movl (%edi), %eax;shll $, %ebx": 1,
                "movl %esi, (%esp);movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movb $, (%eax)": 3,
                "movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movb $, (%eax);jmp - <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %edx;cmpl $, (%edx);jne  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, (%edx);jne  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %edx, (%esp);calll - <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %edx, (%esp);calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp)": 1,
                "movl %edx, (%esp);calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl $, -(%ebp);testl %eax, %eax": 1,
                "addl $, %edi;movl -(%ebp), %edx;cmpl %ebx, (%edx);ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "cmpl $, %ebx;jne  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl (%esi), %edx;cmpl (%edx), %eax": 1,
                "cmpl (%edx), %eax;jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "shll $, %esi;movl (%ebx), %eax;addl %esi, %eax;movl %eax, -(%ebp);movl %edi, (%esp)": 1,
                "movl %eax, (%esi);addl $, -(%ebp);movzwl (%ebx), %eax;cmpl %eax, -(%ebp);jl - <FT_Stream_OpenLZW+>": 1,
                "movl %eax, %edi;addl $, %eax;movl -(%eax), %ecx;cmpl %esi, %ecx;jle  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movl (%edx,%eax,), %esi;movl (%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %eax, %ebx;movl (%edx), %eax;testl %eax, %eax;jle  <FT_Stream_OpenLZW+>;movl (%ebx), %edx": 1,
                "subl $, %esp;movl (%ebp), %edi;movl $, (%edi);movzwl (%edi), %eax;cmpw %ax, (%edi)": 1,
                "movl (%ebp), %edi;movl $, (%edi);movzwl (%edi), %eax;cmpw %ax, (%edi);je  <FT_Stream_OpenLZW+>": 1,
                "ja - <FT_Stream_OpenLZW+>;movl $, (%edi);movl (%edi), %edx;movzbl (%edi), %eax;movzbl %al, %ebx": 1,
                "movl %ecx, -(%ebp);cmpl %ecx, %esi;jbe  <FT_Stream_OpenLZW+>;movl $, (%edi);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al": 2,
                "movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al;jne  <FT_Stream_OpenLZW+>;movl %edi, %eax": 1,
                "movswl (%edi), %eax;movl %eax, (%esi);movswl (%edi), %eax;movl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>": 2,
                "movl (%edi), %ecx;andl $, %eax;movl %eax, -(%ebp);shll $, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);shll $, %eax;movl %eax, -(%ebp);addl %ecx, %eax;andl $, %edx": 1,
                "movl %edx, -(%ebp);movl (%eax), %eax;subl %edx, %eax;movl %eax, -(%ebp);movl (%edi), %edx": 1,
                "movl %eax, (%esp);calll - <FT_MulDiv>;movl %eax, -(%ebp);movl $, (%esp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;addl %eax, %edx;movl %edx, %eax;sarl $, %eax;xorl %eax, %edx": 1,
                "movl (%edi), %edx;movl (%edi), %ecx;movl -(%ebp), %esi;addl (%ecx,%esi), %eax;movl %eax, (%edx,%ebx,)": 1,
                "addl (%eax,%esi,), %edx;movl %edx, %eax;sarl $, %edx;shrl $, %edx;addl %edx, %eax": 1,
                "movl (%edi), %eax;movl %eax, (%edi);jmp  <FT_Stream_OpenLZW+>;cmpb $, (%edi);je  <FT_Stream_OpenLZW+>": 4,
                "cmpb $, (%edi);je  <FT_Stream_OpenLZW+>;movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax": 3,
                "movl %ecx, (%edi);movl (%edi), %eax;movl %eax, (%edi);movl (%edi), %eax;movl %eax, (%edi)": 1,
                "movl (%edi), %edx;movl %edx, (%edi);movl %ecx, (%edi);movl (%edi), %ecx;movl %ecx, (%edi)": 1,
                "movl %edx, (%edi);movl %ecx, (%edi);movl (%edi), %ecx;movl %ecx, (%edi);movl %eax, (%edi)": 1,
                "movl %eax, (%edi);jmp  <FT_Stream_OpenLZW+>;movl $, (%edi);movl $, (%edi);jmp  <FT_Stream_OpenLZW+>": 2,
                "movl %eax, (%edi);jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax;movl (%edi), %edx;imull %edx": 1,
                "movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;andl $, %edx;movl %edx, -(%ebp);movl (%edi), %edx": 1,
                "movl -(%ebp), %esi;leal (%edx,%esi,), %edx;movzwl %ax, %esi;movl (%edi), %eax;leal (%eax,%esi,), %eax": 1,
                "leal (%eax,%edx,), %eax;movl (%eax), %edx;movl %edx, (%esp);movl (%eax), %eax;movl %eax, (%esp)": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpw $, (%edi);je  <FT_Stream_OpenLZW+>;testb $, %al;je  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);movb $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%edi), %eax;addl $, %eax": 1,
                "movl %eax, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);movswl -(%ebp), %edx;movl (%edi), %eax": 1,
                "movl (%edi), %eax;movzwl (%eax,%edx,), %edx;movzwl (%edi), %eax;subl %eax, %edx;movl %edx, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %ebx, -(%ebp);movzbl -(%ebp), %ebx;movl -(%ebp), %edx;movl (%edi), %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, (%edi);je  <FT_Stream_OpenLZW+>;movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax": 3,
                "cmpl $, (%edi);jle  <FT_Stream_OpenLZW+>;movl (%edi), %eax;subl $, %eax;movl %eax, (%edi)": 1,
                "jle  <FT_Stream_OpenLZW+>;movl (%edi), %eax;subl $, %eax;movl %eax, (%edi);movl (%edi), %edx": 2,
                "movl (%edi), %eax;subl $, %eax;movl %eax, (%edi);testl %eax, %eax;jg - <FT_Stream_OpenLZW+>": 5,
                "movl (%edi), %edx;addw (%edx,%eax,), %si;cmpw %bx, %si;jbe  <FT_Stream_OpenLZW+>;movl (%edi), %edx": 1,
                "testw %si, %si;je  <FT_Stream_OpenLZW+>;movl $, %ebx;movl (%edi), %ecx;cmpl %ecx, -(%ebp)": 1,
                "movl %ebx, %edx;movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;addl $, %ebx;cmpw %bx, %si": 1,
                "movl %eax, -(%ebp);addl $, %eax;cmpl %eax, (%edi);jge  <FT_Stream_OpenLZW+>;cmpb $, (%edi)": 1,
                "calll *(%edi);movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movzwl %ax, %eax;movl (%edi), %ecx": 1,
                "movl %edi, (%esp);calll *(%edi);movl %eax, -(%ebp);movzwl (%edi), %edx;movl (%edi), %eax": 1,
                "movl (%eax), %eax;subl (%ecx), %eax;movl %eax, (%esp);movl %edi, (%esp);calll *(%edi)": 2,
                "subl $, %eax;movl %eax, (%edi);movl (%edx,%eax,), %eax;movl %eax, -(%ebp);movzwl (%edi), %eax": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll *(%edi);movl %eax, %ebx;jmp  <FT_Stream_OpenLZW+>": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll *(%edi);movl %eax, %ebx": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll *(%edi);movl %eax, -(%ebp);movl $, %eax": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl %edx, (%ecx,%ebx,);movzwl -(%ebp), %ebx;movl (%edi), %eax;leal (%eax,%ebx,), %edx;movzwl (%edi), %ecx": 1,
                "movzwl (%edi), %ecx;movl (%edi), %eax;leal (%eax,%ecx,), %eax;movl (%edx), %ecx;subl (%eax), %ecx": 4,
                "movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;movl (%edi), %eax;subl $, %eax;movl %eax, (%edi)": 2,
                "movl %eax, (%esp);movl %ebx, (%esp);movl -(%ebp), %esi;movl %esi, (%esp);movl %edi, (%esp)": 1,
                "movl (%edi), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %edi, (%esp);calll *(%edi)": 1,
                "movzwl (%edi), %edx;cmpl %edx, %eax;jb  <FT_Stream_OpenLZW+>;cmpb $, (%edi);jne  <FT_Stream_OpenLZW+>": 1,
                "jb  <FT_Stream_OpenLZW+>;cmpb $, (%edi);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%esi), %ecx": 1,
                "cmpl %edx, %eax;jb  <FT_Stream_OpenLZW+>;cmpb $, (%edi);jne - <FT_Stream_OpenLZW+>;movl $, (%esi)": 1,
                "jne - <FT_Stream_OpenLZW+>;movl $, (%esi);jmp  <FT_Stream_OpenLZW+>;movl (%edi), %edx;movl (%edx,%eax,), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%esi), %edx;movl %edx, (%esp);movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movb $, (%edi);jmp  <FT_Stream_OpenLZW+>;movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax": 1,
                "sete %al;movzbl %al, %eax;movl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>;movl %esi, %edx": 2,
                "jmp  <FT_Stream_OpenLZW+>;cmpl $, (%esi);sete %al;movzbl %al, %eax;movl %eax, (%esi)": 1,
                "subl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%esi), %esi;movl %esi, -(%ebp)": 1,
                "shrl $, %eax;movzbl (%edi), %edx;cmpb $, %dl;je  <FT_Stream_OpenLZW+>;cmpb $, %dl": 1,
                "addl %eax, %edx;movl %edx, -(%ebp);movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;cmpl -(%ebp), %eax": 1,
                "leal -(%eax), %eax;cmpl $, %eax;adcl $, %eax;shll $, %eax;movswl (%edi), %ecx": 1,
                "movb $, (%edi);jmp  <FT_Stream_OpenLZW+>;cmpl $, (%esi);jne  <FT_Stream_OpenLZW+>;cmpl $, (%esi)": 1,
                "movl $, (%edi);movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;movl %esi, %edx;movl %edi, %eax": 1,
                "movl $, (%edi);movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;movl (%edi), %eax;cmpl %eax, (%edi)": 1,
                "addl $, %eax;cmpw %ax, %cx;jae - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %esi, %edx": 1,
                "jne  <FT_Stream_OpenLZW+>;movb $, (%edi);jmp  <FT_Stream_OpenLZW+>;testb $, %dh;je  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;addl (%edi), %eax;movl (%ecx), %edx;subl (%eax), %edx;movl (%ecx), %ecx": 1,
                "movl %edx, %ecx;movl %eax, %edx;jmp  <FT_Stream_OpenLZW+>;movl $, %edx;leal (%edi), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%esi), %edx;movl (%esi), %eax;movl (%esi), %ecx;movl %ecx, (%esi)": 1,
                "movl (%esi), %edx;movl (%esi), %eax;movl (%esi), %ecx;movl %ecx, (%esi);movl %edx, (%esi)": 1,
                "jbe  <FT_Stream_OpenLZW+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %edx;movl %edx, -(%ebp)": 1,
                "movw %cx, -(%ebp);movl (%esi), %edx;cmpw (%edi), %cx;jae  <FT_Stream_OpenLZW+>;addl $, %edx": 1,
                "jae  <FT_Stream_OpenLZW+>;addl $, %edx;movl (%edi), %eax;addl $, %eax;cmpl %eax, %edx": 1,
                "testl %edx, %edx;je  <FT_Stream_OpenLZW+>;subl $, %edx;movl %edx, (%esp);movl %edi, (%esp)": 1,
                "movl %esi, -(%ebp);shll $, %esi;movl %esi, -(%ebp);movl %esi, %edx;addl (%edi), %edx": 1,
                "shll $, %esi;movl %esi, -(%ebp);movl %esi, %edx;addl (%edi), %edx;movzwl (%edi), %ecx": 1,
                "movl %edx, (%esp);movl (%ecx), %edx;subl (%eax), %edx;movl %edx, (%esp);movl %edi, (%esp)": 1,
                "movl (%ecx), %edx;subl (%eax), %edx;movl %edx, (%esp);movl %edi, (%esp);calll *(%edi)": 1,
                "cmpl %ecx, -(%ebp);jge  <FT_Stream_OpenLZW+>;movl %esi, %ebx;andl $, %eax;movl (%edi,%eax,), %eax": 1,
                "movl %esi, %ebx;andl $, %eax;movl (%edi,%eax,), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl (%edi), %edx;leal (%edx,%ecx,), %edx;movzwl %ax, %eax;movl (%edi), %ecx;leal (%ecx,%eax,), %eax": 1,
                "movl (%edi), %ecx;leal (%ecx,%eax,), %eax;movl (%edx), %ecx;subl (%eax), %ecx;movl %ecx, (%esp)": 1,
                "movl %eax, %esi;testb $, (%edi);je  <FT_Stream_OpenLZW+>;testl %ebx, %ebx;js  <FT_Stream_OpenLZW+>": 1,
                "cmpl %ecx, %edx;jb  <FT_Stream_OpenLZW+>;movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;addl $, (%edi)": 1,
                "leal (,%eax,), %eax;movl %eax, -(%ebp);movl $, %ebx;movl %edi, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "cwtl;movl %eax, (%esi,%ebx);addl $, %ebx;cmpl -(%ebp), %ebx;jne - <FT_Stream_OpenLZW+>": 1,
                "movl (%edi), %edx;leal (%edx,%edx,), %edx;leal (%eax,%edx,), %edx;cmpl %edx, %eax;jae  <FT_Stream_OpenLZW+>": 1,
                "movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;cmpb $, %al;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, (%edi);je  <FT_Stream_OpenLZW+>;movl (%edi), %eax;addl %eax, (%edi);addl $, -(%ebp)": 1,
                "addl %eax, (%edi);addl $, -(%ebp);cmpl $, -(%ebp);jg  <FT_Stream_OpenLZW+>;movl (%edi), %esi": 1,
                "movl (%edi), %eax;movb $, (%eax);movl (%edi), %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl %eax, (%edi);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movw $, (%edi);movw $, (%edi)": 1,
                "movl $, (%edi);movl $, (%edi);jmp  <FT_Stream_OpenLZW+>;movl %edi, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl $, (%ebx);movb $, %dl;movl %edx, %eax;addl $, %esp;popl %ebx": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, %eax;leal (%eax,%eax), %ebx;leal (%ebx,%eax), %ecx;movl (%ebp), %esi": 1,
                "leal (%esi), %ebx;movl (%edx,%eax,), %ecx;movl %ecx, (%edi);movl (%esi), %edi;movl (%edi), %edi": 1,
                "movl (%ecx), %edx;movl %eax, (%edx,%esi,);addl $, %esi;cmpl %esi, (%ecx);jbe  <FT_Stream_OpenLZW+>": 1,
                "cmpl %esi, (%ecx);jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "calll *(%ebx);movl (%ebx), %eax;cmpl %eax, %esi;jbe  <FT_Stream_OpenLZW+>;movzbl (%eax), %eax": 1,
                "movl -(%ebp), %eax;addl $, %eax;addl %eax, (%ebx);movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movl %esp, %ebp;subl $, %esp;movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi": 2,
                "subl $, %esp;movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;addl $, %esi": 2,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%ebp), %eax;movl (%edx), %ecx;shll $, %ecx": 2,
                "movl (%edx), %ecx;shll $, %ecx;orl (%edx), %ecx;movl (%eax), %edx;shll $, %edx": 2,
                "movl (%eax), %edx;shll $, %edx;orl (%eax), %edx;movl $, %eax;cmpl %edx, %ecx": 2,
                "orl (%eax), %ecx;cmpl %ecx, %esi;jne  <FT_Stream_OpenLZW+>;movl (%eax), %edx;movl %edx, (%edi)": 1,
                "jae - <FT_Stream_OpenLZW+>;movl $, %eax;popl %ebx;popl %esi;popl %edi": 1,
                "calll *%edx;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;nop;jmp  <FT_Stream_OpenLZW+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;cmpl $, (%ebx);je  <FT_Stream_OpenLZW+>": 2,
                "movl (%edx), %edx;movl %edx, (%esp);calll *(%eax);movl %eax, %edx;testl %eax, %eax": 2,
                "testl %esi, %esi;je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl (%eax), %eax;movl (%eax), %eax": 3,
                "calll *(%esi);movl (%ebx), %edx;movl %eax, (%edx);movl $, %eax;movl -(%ebp), %ebx": 3,
                "calll - <FT_RoundFix>;sarl $, %eax;movl %eax, -(%ebp);movl (%esi), %eax;leal -(%ebp), %edx": 2,
                "shll $, %edx;movl %edx, (%ebx);movl -(%ebp), %edx;shll $, %edx;movl %edx, (%ebx)": 2,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl $, (%edx);movl (%eax), %eax;movl $, (%esp)": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll *(%eax);movl %eax, -(%ebp);testl %eax, %eax": 2,
                "movl %eax, -(%ebp);movl $, (%edi);cmpl $, (%esi);jle  <FT_Stream_OpenLZW+>;movl $, %ebx": 1,
                "movl %eax, (%edi);addl $, %ebx;cmpl %ebx, (%esi);jg - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl (%esi), %eax;testb $, (%ebp);je  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl (%ebp), %ebx": 1,
                "movl %ebx, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, (%eax);movl %eax, (%esi);testl %edi, %edi;je  <FT_Stream_OpenLZW+>": 1,
                "testl %edi, %edi;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl %edi, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 3,
                "movl $, (%esp);movl %edi, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %ecx": 1,
                "jae - <FT_Stream_OpenLZW+>;movl %edi, (%ebx);jmp  <FT_Stream_OpenLZW+>;cmpl %eax, %edi;jne  <FT_Stream_OpenLZW+>": 1,
                "movl %edi, (%ebx);jmp  <FT_Stream_OpenLZW+>;cmpl %eax, %edi;jne  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "movl %esi, %eax;imull %edi, %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;cmpl $, %edi;jbe  <FT_Stream_OpenLZW+>;shll $, %esi": 1,
                "shll $, %esi;movl %ebx, %eax;leal -(%ebx,%edi,), %edi;movl %esi, %edx;movl (%ebx), %ecx": 1,
                "addl %esi, %edx;addl $, %eax;cmpl %edi, %eax;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx": 2,
                "movl %esi, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;jne  <FT_Stream_OpenLZW+>;movl $, %ecx;movl %ebx, %eax": 1,
                "movl (%ebx), %ebx;movl %ebx, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, %eax;cmpl %edx, %ecx": 1,
                "movl (%ebp), %edi;movl %edi, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%edi);movl (%edx), %eax;movl %eax, (%edi)": 2,
                "movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebp), %eax": 2,
                "movl -(%ebp), %edx;movl (%edx,%ecx,), %eax;leal (%eax,%ebx,), %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "addl %eax, %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %ecx": 1,
                "cmpl $, -(%ebp);jle  <FT_Stream_OpenLZW+>;leal -(%ebp), %ebx;movl $, -(%ebp);movl (%ebx), %eax": 1,
                "addl $, %ebx;movl -(%ebp), %edx;cmpl %edx, -(%ebp);jg - <FT_Stream_OpenLZW+>;addl $, -(%ebp)": 1,
                "cmpl %edx, -(%ebp);jg - <FT_Stream_OpenLZW+>;addl $, -(%ebp);addl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl $, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl %eax, %ebx;cmpl $, -(%ebp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;cmpl $, %eax;jbe  <FT_Stream_OpenLZW+>;cmpb $, (%ecx)": 1,
                "orl %edx, %eax;cmpw $, %ax;jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movzbl (%edx), %eax": 1,
                "leal (%ecx,%eax,), %edx;cmpl %edx, -(%ebp);jae  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %edi, (%esp);calll - <FT_Get_Char_Index>;movl %eax, (%esi);movzbl (%ebx), %eax;shll $, %eax": 1,
                "movl %edx, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);movl $, (%ebx);movl -(%ebp), %eax": 1,
                "calll - <FT_Angle_Diff+>;movl $, (%ebx);movl $, (%ebx);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "sarl $, %eax;movl %eax, (%edi);movl (%ebx), %eax;addl $, %eax;sarl $, %eax": 2,
                "movl %eax, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %esi": 1,
                "movl $, (%eax);addl $, %eax;cmpl %edx, %eax;jne - <FT_Stream_OpenLZW+>;movl (%esi), %eax": 2,
                "movl %edx, (%esp);calll - <FT_Angle_Diff+>;movl $, (%esi);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "calll - <FT_Angle_Diff+>;movl $, (%esi);testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;leal (%esi), %eax": 1,
                "leal (%edx,%eax,), %esi;movl (%esi), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, (%ebx);movl $, (%ebx);movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;movl $, (%ebx)": 1,
                "ja  <FT_Stream_OpenLZW+>;movl (%eax), %edx;movl %edx, -(%ebp);testl %edx, %edx;jle  <FT_Stream_OpenLZW+>": 1,
                "movl $, %eax;repne  scasb %es:(%edi), %al;notl %ecx;subl $, %ecx;cmpl (%ebp), %ecx": 1,
                "cmpl -(%ebp), %ebx;jne - <FT_Stream_OpenLZW+>;movl $, %ebx;jmp  <FT_Stream_OpenLZW+>;movl $, %ebx": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl %eax, -(%ebp);testb %dl, %dl;je  <FT_Stream_OpenLZW+>": 2,
                "calll *(%ebx);movl %eax, -(%ebp);movb $, -(%ebp);movl %ebx, (%esp);calll *(%ebx)": 2,
                "movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Angle_Diff+>;movl (%ebp), %edx": 3,
                "leal (%esi), %esi;je  <FT_Stream_OpenLZW+>;testb %al, %al;je  <FT_Stream_OpenLZW+>;cmpb $, %al": 1,
                "movl %edi, -(%ebp);leal (%esi), %esi;jmp  <FT_Stream_OpenLZW+>;cmpb $, %al;jne  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp);calll *(%ebx)": 1,
                "nop;jmp  <FT_Stream_OpenLZW+>;movl %edi, -(%ebp);movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl $, (%eax);movl -(%ebp), %edx;movl %edx, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 2,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_RoundFix>": 1,
                "sarl $, %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "movl -(%ebp), %eax;movl %eax, (%edx);movb $, (%edx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "calll - <FT_RoundFix>;sarl $, %eax;movl %eax, (%ebx);movl (%ebx), %eax;movb $, (%eax)": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%esi), %eax;subl (%esi), %eax;sarl $, %eax;movl %eax, (%ebx)": 1,
                "subl (%esi), %eax;sarl $, %eax;movl %eax, (%ebx);movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp);cmpb $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movswl (%eax), %eax;testl %eax, %eax;jle  <FT_Stream_OpenLZW+>": 2,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl (%esi), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;movl %edx, -(%ebp)": 3,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;testl %eax, %eax": 4,
                "pushl %ebx;subl $, %esp;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %ecx, (%edx);addl (%ebp), %ecx;movl %ecx, -(%ebp);movl %ecx, (%edx)": 1,
                "cmpl %edx, -(%ebp);jbe  <FT_Stream_OpenLZW+>;movzbl (%ebx), %edx;cmpb $, %dl;je  <FT_Stream_OpenLZW+>": 3,
                "movl %ebx, %esi;rep  cmpsb %es:(%edi), (%esi);seta %cl;setb %dl;cmpb %dl, %cl": 3,
                "rep  cmpsb %es:(%edi), (%esi);seta %cl;setb %dl;cmpb %dl, %cl;jne  <FT_Stream_OpenLZW+>": 10,
                "je  <FT_Stream_OpenLZW+>;cmpb $, %dl;je  <FT_Stream_OpenLZW+>;cmpb $, %dl;jne  <FT_Stream_OpenLZW+>": 7,
                "cmpl %eax, -(%ebp);jbe  <FT_Stream_OpenLZW+>;cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp)": 2,
                "jmp  <FT_Stream_OpenLZW+>;cmpb $, %al;leal (%esi), %esi;jne  <FT_Stream_OpenLZW+>;leal (%ebx), %eax": 1,
                "movl $, %ebx;movzbl -(%ebp), %eax;cmpb (%esi), %al;jne  <FT_Stream_OpenLZW+>;movl %esi, %edi": 1,
                "movl %esi, %edi;movl $, %ecx;movl $, %eax;repne  scasb %es:(%edi), %al;notl %ecx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, %edx;andl $, %edx": 1,
                "testb $, %al;je  <FT_Stream_OpenLZW+>;movl $, %edi;movl $, %ecx;rep  cmpsb %es:(%edi), (%esi)": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl $, (%eax);sbbl %edx, %edx;notl %edx;andl %eax, %edx": 1,
                "movl (%edx), %edx;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %edx, -(%ebp);movl $, %edx": 1,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);movl $, %edx;leal -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>": 2,
                "leal -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, %edx;leal -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %edx": 2,
                "movb $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movb $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movb $, -(%ebp)": 5,
                "movl %edx, %ebx;movl %ecx, -(%ebp);movw $, (%edx);movl $, (%ecx);leal -(%ebp), %eax": 1,
                "movw $, (%edx);movl $, (%ecx);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, %ebx;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %edi, (%esp)": 1,
                "movl (%ebx), %eax;addl (%ebx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "addl (%ebx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movb $, -(%ebp)": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ecx;leal -(%ebp), %edx;movl -(%ebp), %eax": 2,
                "leal -(%ebp), %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);testl %eax, %eax": 2,
                "movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);leal -(%ebp), %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;addl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;addl %eax, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, %eax": 1,
                "jbe  <FT_Stream_OpenLZW+>;cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>;cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %esi;movl %esi, -(%ebp);addl $, %ebx;movl %ebx, -(%ebp);cmpl %ebx, %esi": 1,
                "cmpb $, (%esi);jne  <FT_Stream_OpenLZW+>;movl $, %edi;movl $, %ecx;rep  cmpsb %es:(%edi), (%esi)": 1,
                "cmpb %al, %dl;je  <FT_Stream_OpenLZW+>;leal -(%ebp), %ecx;movl %ecx, (%esp);calll *-(%ebp)": 1,
                "movl -(%ebp), %esi;cmpl %esi, %ebx;ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll *-(%ebp);movl -(%ebp), %ebx;movl -(%ebp), %esi;cmpl %esi, %ebx": 1,
                "cmpl %esi, %ebx;je  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;cmpb $, %al;je - <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movb $, -(%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);leal -(%ebp), %edx": 1,
                "calll *(%eax);cmpl $, -(%ebp);ja  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, %eax;cmpb $, (%edx);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;addl $, %edx": 1,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);testl %eax, %eax;jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx": 2,
                "jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 3,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl $, (%ebx);movl $, (%esp)": 1,
                "movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <FT_Get_Module+>;movl %eax, -(%ebp)": 1,
                "calll - <FT_Get_Module+>;movl %eax, -(%ebp);movl %eax, (%ebx);movl $, -(%ebp);testl %eax, %eax": 1,
                "movl %eax, (%ebx);movl $, -(%ebp);testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl $, (%esp)": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, (%ebx);cmpl $, (%ebx);je  <FT_Stream_OpenLZW+>;orl $, (%ebx)": 1,
                "je  <FT_Stream_OpenLZW+>;movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl $, (%ebx);movl $, (%ebx)": 1,
                "sarl $, %esi;movl %esi, (%ebx);cmpw $, (%ebx);jne  <FT_Stream_OpenLZW+>;movw $, (%ebx)": 1,
                "shll $, %eax;movl $, %edx;imull %edx;shrl $, %edx;movswl %dx, %eax": 2,
                "movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <FT_New_Library+>;testl %eax, %eax": 2,
                "movl %eax, (%esp);calll - <FT_New_Library+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;cmpb $-, %al": 2,
                "calll - <FT_New_Library+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;cmpb $-, %al;jne  <FT_Stream_OpenLZW+>": 2,
                "movl %edx, (%esp);movl $, (%esp);movl %eax, (%esp);calll - <FT_New_Library+>;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esp);calll - <FT_New_Library+>;movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, (%ebx)": 1,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, (%esp);calll *(%ebx)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jns  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 2,
                "jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpl $, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);leal (%ebx), %edx;movl %edx, -(%ebp);leal (%ebx), %ecx;movl %ecx, -(%ebp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movzbl (%esi), %eax;cmpb $, %al;jne  <FT_Stream_OpenLZW+>;cmpb $, (%esi)": 1,
                "cmpl $, (%ebx);jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;subl %edi, %eax;movl %eax, -(%ebp)": 1,
                "cmpb %dl, %cl;jne  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movb $, -(%ebp);movl (%ebp), %edx": 1,
                "movl %eax, -(%ebp);movb $, -(%ebp);movl (%ebp), %edx;movl (%edx), %eax;testl %eax, %eax": 1,
                "jl  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edx, (%esp);addl %esi, %eax;movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "calll *(%ebx);movl %eax, -(%ebp);movl %esi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%ebx);cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 2,
                "movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 3,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll *(%ebx);movl %eax, -(%ebp);testl %eax, %eax": 4,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);calll *(%ebx);movl (%ebx), %eax;cmpl (%ebx), %eax;jae  <FT_Stream_OpenLZW+>": 2,
                "leal (%ebx), %eax;movl %eax, -(%ebp);movl %ebx, (%esp);calll *(%ebx);cmpl $, (%ebx)": 1,
                "calll *(%ebx);movl -(%ebp), %edx;movl %edx, (%esp);calll *(%ebx);movl %eax, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>": 1,
                "movl (%eax,%ecx,), %edx;movl %edx, %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al": 2,
                "movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;movl %ecx, %esi;notl %esi": 3,
                "je  <FT_Stream_OpenLZW+>;movl %esi, (%esp);movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "calll  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movb $, -(%edx,%esi);jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %ecx": 1,
                "movb $, -(%edx,%esi);jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %ecx;cmpl (%edx), %ecx;jae  <FT_Stream_OpenLZW+>": 1,
                "cmpl %ebx, (%ebp);jl  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>;movl (%edx), %edx": 2,
                "calll  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movb $, -(%edx,%esi);jmp  <FT_Stream_OpenLZW+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);jle  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>;movzwl (%edx), %eax": 5,
                "cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>;movzwl (%edx), %eax;movl (%ebp), %edx;movw %ax, (%edx)": 2,
                "movb %al, (%ecx);movl $, %ebx;jmp  <FT_Stream_OpenLZW+>;movzbl (%edx), %eax;cmpl %eax, (%ebp)": 5,
                "jae  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);jle  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>": 6,
                "movl %ecx, (%esp);movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <FT_Stream_OpenLZW+>": 2,
                "movl $, %ebx;jmp  <FT_Stream_OpenLZW+>;movl $, %ebx;movl %ebx, %eax;movl -(%ebp), %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;sarl $, %eax;movl %eax, %ebx;xorl -(%ebp), %ebx": 1,
                "xorl -(%ebp), %ebx;subl %eax, %ebx;jne  <FT_Stream_OpenLZW+>;movl $, (%esi);jmp  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, (%esi);jmp  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);movl $, (%esp)": 1,
                "calll - <FT_DivFix>;movw %ax, (%edi);cmpl $, %ebx;je  <FT_Stream_OpenLZW+>;movl %ebx, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;leal (%eax,%eax,), %eax;leal (,%eax,), %eax": 1,
                "movl -(%ebp), %eax;leal (%eax,%eax,), %eax;leal (,%eax,), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <FT_Angle_Diff+>;movl %eax, %ebx;cmpl $, -(%ebp)": 1,
                "movl %edx, %ecx;addl (%eax), %ecx;movl %ecx, -(%ebp);addl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl $, %ecx;jne  <FT_Stream_OpenLZW+>;movl (%eax), %edx;movl (%eax), %ecx": 1,
                "addl %edi, %esi;addl (%eax), %esi;movl %esi, -(%ebp);addl (%eax), %edx;leal (%edi,%edx), %esi": 1,
                "addl (%eax), %edx;leal (%edi,%edx), %esi;addl (%eax), %esi;movl %esi, -(%ebp);addl %ecx, %edx": 1,
                "addl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %esi;addl %edi, %esi;addl (%eax), %esi": 1,
                "addl (%eax), %ecx;addl (%eax), %ecx;movl %ecx, -(%ebp);addl %esi, %edx;addl (%eax), %edx": 1,
                "cmpl %edx, %ebx;jg  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl %esi, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;addl $, %eax;cmpl %eax, -(%ebp);jg - <FT_Stream_OpenLZW+>;movzbl -(%ebp), %edx": 1,
                "movl -(%eax,%edx,), %ebx;shll $, %ebx;movl -(%ebp), %esi;movl %ebx, (%esi);addl $, -(%ebp)": 1,
                "movl -(%ebp), %edi;cmpl %edi, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl (%ebp), %eax": 1,
                "leal (%ebx,%ebx,), %eax;movl -(%ebp), %ebx;leal (%ebx,%eax,), %eax;movl (%eax), %ebx;movl (%eax), %edx": 1,
                "cmpl %edx, %ecx;jge  <FT_Stream_OpenLZW+>;testl %esi, %esi;jns  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi": 2,
                "leal -(%esi), %edx;movl $, %eax;cmpl $, %edx;ja  <FT_Stream_OpenLZW+>;testl %esi, %esi": 1,
                "movl $, %eax;testl %edi, %edi;je  <FT_Stream_OpenLZW+>;cmpl $, (%edi);jle  <FT_Stream_OpenLZW+>": 1,
                "movl $, %ebx;leal (%ebx,%ebx,), %edx;movl (%edi), %eax;leal (%eax,%edx,), %esi;movl (%ebp), %eax": 1,
                "leal -(%ecx), %eax;cmpl $, %ecx;jle  <FT_Stream_OpenLZW+>;cmpl $, %ecx;jg  <FT_Stream_OpenLZW+>": 1,
                "shll $, %eax;movzbl (%ebx), %edx;subl %edx, %eax;subl $, %eax;movl -(%ebp), %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl %edx, (%eax);jbe  <FT_Stream_OpenLZW+>;movl (%eax), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl %edx, (%esp);calll *(%eax);jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%ebx), %edx;movl $, %eax;cmpl $, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %edx;je  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>;cmpl $, (%ebx)": 1,
                "movl (%eax), %eax;movzwl (%eax,%edx,), %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;popl %ebp": 1,
                "movl %edi, -(%ebp);movzbl (%ebp), %esi;movl (%eax), %ebx;cmpb $, (%eax);je  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edi;movl %ebp, %esp;popl %ebp;retl;movl (%eax), %eax": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movzwl (%eax), %edx": 1,
                "movl (%eax), %esi;leal -(%esi,%edi,), %esi;movl %esi, -(%ebp);movl (%eax), %edi;movl %edi, -(%ebp)": 2,
                "testw %dx, %dx;jle  <FT_Stream_OpenLZW+>;movzwl (%eax), %ebx;movswl %bx, %esi;subl $, %esi": 2,
                "movl %esp, %ebp;movl (%ebp), %edx;movl $, %eax;cmpl $, %edx;ja  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %edx;movl (%ebp), %ecx;movzwl (%edx,%ecx,), %edx": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx": 7,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%eax), %eax;popl %ebp": 1,
                "movl %eax, %esi;sarl $, %esi;movl (%ebp), %ebx;subl %edx, %ebx;sarl $, %ebx": 1,
                "popl %ebp;retl;pushl %ebp;movl %esp, %ebp;testb $, (%eax)": 2,
                "pushl %edi;pushl %esi;pushl %ebx;movl %eax, %esi;movl %edx, %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%esi), %ecx;leal (%ecx,%ecx,), %edx;leal (%esi,%edx,), %edx;subl $, %edi": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %ecx, (%esi);jmp - <FT_Stream_OpenLZW+>;movl %edx, (%esi);jmp - <FT_Stream_OpenLZW+>": 1,
                "movl %edx, (%esi);jmp - <FT_Stream_OpenLZW+>;popl %ebx;popl %esi;popl %edi": 1,
                "je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al;jne  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;movl -(%ebp), %edx;addl (%edx), %eax;movl %eax, %edx": 1,
                "subl $, %eax;cmpl $-, %esi;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;leal (%ebx,%ebx,), %eax": 1,
                "subl $, %edi;jmp - <FT_Stream_OpenLZW+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl (%ebp), %ecx;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;addl %eax, (%edx);testl %edi, %edi": 1,
                "testl %edi, %edi;js  <FT_Stream_OpenLZW+>;testl %esi, %esi;js  <FT_Stream_OpenLZW+>;leal (%esi,%esi), %eax": 1,
                "movl $, %eax;imull %edx;movl %edx, %ecx;sarl $, %ecx;addl $, %ecx": 9,
                "shrl $, %eax;shll $, %edx;addl %edx, %eax;movl (%ebp), %esi;movl %eax, (%esi)": 8,
                "movl (%ebx), %eax;negl %eax;movl (%ebp), %esi;movl %eax, (%esi);movl (%ebx), %eax": 2,
                "movl %edi, %eax;negl %eax;addl %eax, %eax;cmpl %eax, %esi;jle  <FT_Stream_OpenLZW+>": 2,
                "leal (%edx), %ecx;shrl $, %ecx;movl %ecx, (%eax);movb $, (%eax);movb $, (%eax)": 1,
                "movl (%eax), %eax;subl %edx, %eax;sarl $, %eax;popl %ebp;retl": 1,
                "movl (%eax), %eax;movl $, %edx;calll - <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 3,
                "calll - <FT_Stream_OpenLZW+>;cmpl %esi, %eax;ja  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl $, %edx": 1,
                "movl (%ebx,%esi,), %eax;shll $, %eax;jmp  <FT_Stream_OpenLZW+>;movl (%ebx,%esi,), %edx;leal (%edx), %eax": 1,
                "leal (%eax), %edx;movl %edx, (%eax);popl %ebp;retl;pushl %ebp": 1,
                "movl (%ebx), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx)": 2,
                "movl %edx, (%esp);movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);addl $, %esp": 2,
                "testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl (%edx,%ebx,), %eax;movl (%eax), %esi": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp);calll - <FT_MulDiv>": 2,
                "movl (%ebx), %eax;movl (%eax), %edx;movl (%edx), %esi;testl %esi, %esi;je  <FT_Stream_OpenLZW+>": 1,
                "calll *(%edx);subl $, %ebx;jne - <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "subl $, %ebx;jne - <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl %eax, %edi;movl $, %esi;testb $, %al;je  <FT_Stream_OpenLZW+>;movb $, (%eax)": 1,
                "addl $, %edi;testl $, %esi;je  <FT_Stream_OpenLZW+>;movb $, (%edi);movzbl (%edx), %eax": 1,
                "movzbl (%edx), %eax;movb %al, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl %edx, (%ebx)": 1,
                "movl %eax, %ebx;movl $, %esi;movl $, %edi;testb $, %al;je  <FT_Stream_OpenLZW+>": 1,
                "movzbl (%ebp), %edx;movb %dl, -(%ebp);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl %ecx, %edx;calll - <FT_Stream_OpenLZW+>;movl %eax, %esi;movl (%eax), %edx;movl (%eax), %ecx": 1,
                "cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl %edx, (%ebx);movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>": 2,
                "movl %edx, (%ebx);movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl %ecx, (%ebx);movl $, (%ebx)": 1,
                "movl %edx, (%ebx);movl $, (%ebx);movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al": 1,
                "movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al;je  <FT_Stream_OpenLZW+>;movl (%ebp), %eax": 1,
                "movl (%eax), %eax;addl %eax, %eax;addl %eax, (%ebx);movl (%ebp), %eax;addl (%ebx), %eax": 1,
                "addl (%ebx), %eax;movl %eax, (%ebx);movl (%ebp), %edx;movl %edx, (%ebx);movl %edi, (%ebx)": 1,
                "movl %edx, %esi;movl %ecx, -(%ebp);movl %eax, %edi;movl $, %edx;movl $, %eax": 1,
                "movl %eax, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, %edi;movl $, %eax;testl %edi, %edi": 1,
                "movl %eax, %ebx;shll $, %ebx;movzbl -(%ebp,%ecx), %eax;orl %ebx, %eax;addl $, %ecx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%esi), %ecx;testl %ecx, %ecx;jne  <FT_Stream_OpenLZW+>": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "leal (%edx), %ecx;subl %eax, %ecx;cmpl %ecx, (%esi);jbe  <FT_Stream_OpenLZW+>;subl (%esi), %edx": 1,
                "jbe  <FT_Stream_OpenLZW+>;subl (%esi), %edx;leal (%edx), %eax;cmpl %edi, %eax;jbe  <FT_Stream_OpenLZW+>": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;leal -(%eax,%edi), %eax;movl -(%ebp), %ecx": 1,
                "movl (%eax), %ecx;movl (%ecx), %ebx;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 1,
                "calll *(%eax);movl -(%ebp), %edx;movl %edx, (%esi);movl -(%ebp), %edx;movl (%ebp), %ecx": 1,
                "movl %edx, (%ecx);jmp  <FT_Stream_OpenLZW+>;movl (%eax), %eax;addl $, %eax;movl (%ebp), %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%eax), %eax;addl $, %eax;movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, %eax;testl %edx, %edx;jns  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %eax;movl %eax, (%esp);movl -(%ebp), %edx;calll *(%edx);movl %eax, -(%ebp)": 2,
                "testl %esi, %esi;je  <FT_Stream_OpenLZW+>;cmpl $, (%esi);jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx": 1,
                "cmpl $, (%esi);jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, (%edi);movl (%esi), %edx;movl %esi, %eax": 4,
                "movl (%esi), %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, (%edi);movl (%esi), %eax": 1,
                "addw $, (%esi);jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movswl (%eax), %ecx;movswl (%eax), %edx": 1,
                "testw %ax, %ax;jle  <FT_Stream_OpenLZW+>;cwtl;movl (%esi), %edx;movzwl (%esi), %ecx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebx), %ecx;movl (%ebx), %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>": 2,
                "shrl $, %eax;shll $, %edx;addl %edx, %eax;movl %eax, -(%ebp);cmpl $, %esi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp);movzbl (%ebp), %eax;movb %al, -(%ebp)": 1,
                "movzbl (%ebp), %eax;movb %al, -(%ebp);leal (%esi), %edx;movl %edx, -(%ebp);leal (%esi), %eax": 1,
                "shrl $, %eax;shll $, %edx;addl %edx, %eax;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "addl %edx, %eax;movl %eax, %ebx;movl -(%ebp), %eax;subl -(%ebp), %eax;addl $, %eax": 1,
                "jge  <FT_Stream_OpenLZW+>;movl %edi, -(%ebp);cmpl %ebx, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "shrl $, %edx;addl %edx, %eax;sarl %eax;movl -(%ebp), %edx;subl %eax, %edx": 1,
                "movl -(%ebp), %edx;subl %ebx, %edx;movl %edx, %eax;sarl $, %eax;xorl %eax, %edx": 1,
                "movl %edx, (%eax);jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl $, -(%ebp);movl $, %ebx": 1,
                "movl %eax, (%esp);calll *(%eax);movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%esi)": 3,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%esi), %eax;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %edx, -(%ebp);movl (%esi), %eax;leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>;movl (%ebp), %ebx": 1,
                "je  <FT_Stream_OpenLZW+>;addl $, %eax;cmpl -(%ebp), %eax;jae  <FT_Stream_OpenLZW+>;movzbl (%eax), %edx": 1,
                "movzbl (%eax), %edx;sarl %cl, %edx;andl $, %edx;movl %esi, %edi;subl %ecx, %edi": 1,
                "jle  <FT_Stream_OpenLZW+>;addl $, -(%ebp);jmp - <FT_Stream_OpenLZW+>;testl %edx, %edx;jne  <FT_Stream_OpenLZW+>": 1,
                "addl $, -(%ebp);jmp - <FT_Stream_OpenLZW+>;testl %edx, %edx;jne  <FT_Stream_OpenLZW+>;testl %ebx, %ebx": 1,
                "testl %edx, %edx;jne  <FT_Stream_OpenLZW+>;testl %ebx, %ebx;je - <FT_Stream_OpenLZW+>;addl $, -(%ebp)": 1,
                "movl %ebx, %ecx;cmpl $, %esi;ja  <FT_Stream_OpenLZW+>;cmpl $, %edx;jg - <FT_Stream_OpenLZW+>": 1,
                "jle  <FT_Stream_OpenLZW+>;movl %edi, %ecx;subl %eax, %ecx;imull (,%edx,), %ebx;cmpl $, %ebx": 1,
                "movl (%ebp), %ebx;movl %ecx, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl (,%esi,), %ecx;movl %ebx, %eax": 1,
                "calll - <FT_DivFix>;subl $, %edi;movl (%ebp), %ebx;movl %edi, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %esi;subl %edx, %esi;testl %ecx, %ecx;jns  <FT_Stream_OpenLZW+>;movl %ecx, %edi": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edx, %esi;movl (%eax), %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movzbl (%edi), %eax;cmpl $, %eax;je  <FT_Stream_OpenLZW+>;cmpl $, %eax": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;addl $, %ebx;movl (%ebx), %eax": 1,
                "cmpl -(%ebp), %edi;jb - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, %eax;cmpl %edx, (%ebx);jb  <FT_Stream_OpenLZW+>;leal (%ebx), %eax;calll - <FT_Stream_OpenLZW+>": 3,
                "movl (%ebx), %edx;leal -(%ebp), %ecx;movl %ecx, (%esp);movl $, %ecx;calll - <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %edx;calll - <FT_Stream_OpenLZW+>;movl %eax, %edi": 1,
                "jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, %ecx;leal -(%ecx), %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, %edx;sarl $, %edx;idivl -(%ebp);cmpl $, %eax;jle  <FT_Stream_OpenLZW+>": 1,
                "sarl $, %edx;idivl -(%ebp);cmpl $, %eax;jle  <FT_Stream_OpenLZW+>;subl $, %ecx": 1,
                "movl %edi, -(%ebp);movl %eax, %ebx;movl %edx, %esi;movl $, -(%ebp);movl (%eax), %ecx": 1,
                "movl %edx, %esi;movl $, -(%ebp);movl (%eax), %ecx;movl (%eax), %edi;movl $, %eax": 1,
                "movl $, %eax;movl $, %edx;divl %edi;cmpl %eax, %esi;ja  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %esi, (%ebx);movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 1,
                "movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl $, %edx;calll - <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%ebx);movl %esi, (%ebx);movl -(%ebp), %eax;addl $, %esp;popl %ebx": 1,
                "movl %edx, %esi;movl (%eax), %edx;cmpl (%eax), %edx;jne  <FT_Stream_OpenLZW+>;addl (%eax), %edx": 1,
                "movl (%ecx), %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;movl (%esi), %eax;movl $, (%esp)": 1,
                "movl -(%ebp), %edx;calll - <FT_Stream_OpenLZW+>;movl (%ebp), %ecx;cmpb $, (%ecx);jne  <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, %edx;movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "cmpl %edx, %eax;jb - <FT_Stream_OpenLZW+>;negl %ebx;movl %ebx, %ecx;andl $, %ecx": 1,
                "calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;addl $, %ecx;leal -(%ebp), %edx;movl %esi, %eax": 1,
                "addl $, %ebx;movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx": 1,
                "subl -(%ebp), %eax;movl -(%ebp), %ecx;cmpl (%ecx), %eax;jl  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "addl $, %ebx;movw $, %bx;subl -(%ebp), %ebx;jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax": 1,
                "movl %eax, %edx;subl -(%ebp), %edx;cmpl -(%ebp), %edx;jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "subl %eax, %ecx;movl -(%ebp), %edx;cmpl (%edx), %ecx;jl  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;cmpl (%edx), %ecx;jl  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;addl $, %edx": 1,
                "cmpl (%edx), %ecx;jl  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;addl $, %edx;movw $, %dx": 1,
                "movl -(%ebp), %edx;addl $, %edx;movw $, %dx;leal (%esi,%esi,), %eax;movl -(%ebp), %ecx": 1,
                "leal (%esi,%esi,), %eax;movl -(%ebp), %ecx;movl (%ecx,%eax,), %eax;addl $, %eax;movl %edx, %ebx": 1,
                "movl (%ecx,%eax,), %eax;addl $, %eax;movl %edx, %ebx;cmpl %eax, %edx;jge  <FT_Stream_OpenLZW+>": 1,
                "testb %al, %al;je  <FT_Stream_OpenLZW+>;addl %ebx, -(%ebp);leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "shrb -(%ebp);cmpl $, %eax;jne  <FT_Stream_OpenLZW+>;addl $, -(%ebp);movb $-, -(%ebp)": 1,
                "cmpl -(%ebp), %edi;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;cmpl $, (%esi)": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, %ecx;movl -(%ebp), %edx": 1,
                "leal (%esi,%eax,), %eax;movl %eax, -(%ebp);calll - <FT_Stream_OpenLZW+>;movb %al, -(%ebp);cmpb $, %al": 1,
                "jne  <FT_Stream_OpenLZW+>;leal (%ebx,%ebx,), %eax;movl (%esi,%eax,), %eax;movl %eax, -(%ebp);movzwl %ax, %edx": 1,
                "movl %eax, -(%ebp);andl $, %eax;movl %edx, %ecx;negl %ecx;movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;cmpl %edx, %eax;jge  <FT_Stream_OpenLZW+>;movl %edx, -(%ebp)": 1,
                "cmpl %eax, %edi;jae  <FT_Stream_OpenLZW+>;leal (%edi), %eax;leal (%eax,%eax,), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %eax;negl %eax;cmpl %eax, -(%ebp);jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "je  <FT_Stream_OpenLZW+>;leal -(%ebx,%ebx,), %edx;movl %edx, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;leal -(%edx,%ecx), %ecx;movl -(%ebp), %edx;cmpl %ecx, (%esi,%edx,)": 1,
                "cmpl %ecx, (%esi,%edx,);jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;negl %edx;cmpl %edx, -(%ebp)": 1,
                "leal (%edi,%edi,), %eax;addl %ecx, (%esi,%eax,);testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;leal (%ebx,%ebx,), %eax": 1,
                "movl (%esi,%eax,), %eax;movl -(%ebp), %edx;addl (%edx), %eax;leal (%ebx,%ebx,), %ecx;leal (%eax), %edx": 1,
                "movb $, (%edx);jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al": 1,
                "movl %eax, %esi;movl %edx, %ebx;movl %ecx, %edi;calll  <FT_Stream_OpenLZW+>;movl %ebx, (%esi)": 1,
                "movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;leal (%esi), %edi;addl $, %esi;movl $, %ecx": 1,
                "addl $, %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "testb %al, %al;jne  <FT_Stream_OpenLZW+>;movl (%ebx), %ecx;movl (%ebx), %edx;movl %ebx, %eax": 1,
                "movl %esi, (%ebx);movl %edi, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl %eax, %ebx;movl %edx, %esi;movl %ecx, -(%ebp);movl (%eax), %edx;cmpl %esi, %edx": 1,
                "movl (%eax), %edx;cmpl %esi, %edx;jne  <FT_Stream_OpenLZW+>;cmpl %ecx, (%eax);je  <FT_Stream_OpenLZW+>": 1,
                "cmpl %esi, %edx;jne  <FT_Stream_OpenLZW+>;cmpl %ecx, (%eax);je  <FT_Stream_OpenLZW+>;movl (%ebx), %ecx": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%ebx), %ecx;leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl %edx, (%ebx);cmpb $, (%ebx);je  <FT_Stream_OpenLZW+>;leal (%ebx), %edx": 1,
                "movl %edi, (%esp);movl (%ebx), %edx;calll - <FT_Stream_OpenLZW+>;movl %esi, (%ebx);movl -(%ebp), %eax": 1,
                "movl %eax, %ebx;cmpb $, (%eax);je  <FT_Stream_OpenLZW+>;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;addl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "addl %eax, %ecx;movl %ecx, -(%ebp);addl (%ebp), %edx;movl %edx, -(%ebp);addl (%ebp), %eax": 1,
                "movl %eax, (%ebx);movl -(%ebp), %ecx;movl %ecx, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %ecx;movl %ecx, (%ebx);addl $, %esp": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp);movl (%ebp), %edi": 1,
                "shll $, %edx;sarl $, %edx;addl $, %edx;movl %edx, -(%ebp);movl $, %ebx": 1,
                "cmpb $, (%edi,%ebx);je  <FT_Stream_OpenLZW+>;leal (%edx), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;addl %eax, %esi;movl %esi, -(%ebp,%ebx,)": 1,
                "calll - <FT_Stream_OpenLZW+>;addl %eax, %esi;movl %esi, -(%ebp,%ebx,);movl -(%ebp), %edx;addl $, %ebx": 1,
                "sarl $, %eax;xorl %eax, %ebx;subl %eax, %ebx;movl -(%ebp), %edi;movl %edi, %esi": 1,
                "xorl %eax, %esi;subl %eax, %esi;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;cmpl %esi, %ebx": 1,
                "movl (%ecx), %edx;movl %edx, -(%ebp);addl %edi, %eax;movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;addl %eax, %ebx;movl %ebx, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "subl $, %esp;movl (%eax), %ebx;movl (%ebx), %ebx;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl -(%ebp), %ecx;movl %ebx, %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 3,
                "movl %edx, (%esp);movl %edi, (%esp);leal -(%ebp), %ecx;movl -(%ebp), %edx;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl %edx, %ecx;sarl $, %ecx": 1,
                "subl %ecx, %edx;movl %eax, %ecx;sarl $, %ecx;xorl %ecx, %eax;subl %ecx, %eax": 1,
                "movl (%esi), %eax;movl %eax, (%edx);movl (%esi), %eax;movl %eax, (%edx);movl (%esi), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %edx;cmpl %edx, (%eax);jb  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 3,
                "jmp  <FT_Stream_OpenLZW+>;addl %eax, (%ebp);xorl $, %esi;movl (%ebp), %ecx;movl (%ebp), %edx": 1,
                "movl -(%ebp), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %esi, (%ebp);movl %ebx, (%ebp)": 1,
                "movl %ebx, (%ebp);movl -(%ebp), %eax;addl $, %eax;movl -(%ebp), %ebx;cmpl %eax, -(%ebp)": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;movl %esi, %edx": 1,
                "cmpl $, %eax;je  <FT_Stream_OpenLZW+>;cmpl $, %eax;jne  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp)": 1,
                "movl $, %edx;cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %edi, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "movl $, %edx;jmp  <FT_Stream_OpenLZW+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpb $, (%eax);jne  <FT_Stream_OpenLZW+>;movl %esi, %ecx;cmpb $, %cl;jne  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %esi, %ecx;cmpb $, %cl;jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %esi;leal -(%ebp), %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);leal -(%ebp), %ecx;leal -(%ebp), %edx;leal -(%ebp), %eax": 1,
                "movl %ecx, (%ebp);movl (%ebp), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;leal (%ebx), %eax": 1,
                "leal (%ebx), %eax;leal (%ebx), %edx;movl %eax, %ebx;cmpl %edx, %esi;ja - <FT_Stream_OpenLZW+>": 1,
                "leal (%ebx), %edx;movl %eax, %ebx;cmpl %edx, %esi;ja - <FT_Stream_OpenLZW+>;movl %eax, %esi": 1,
                "je  <FT_Stream_OpenLZW+>;movl %edi, %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;addl (%ebp), %eax": 2,
                "leal (%edi), %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;addl %eax, %ebx": 2,
                "addl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);leal (%edi), %eax": 1,
                "movl (%ebp), %ecx;movl %ecx, -(%ebp);leal (%edi), %eax;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "movl -(%ebp), %eax;subl %edi, %eax;movl -(%ebp), %esi;movb $, -(%ebp);cmpl $, %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;addl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %edi;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %esi, (%esp);movl -(%ebp), %eax": 1,
                "movl %ebx, %edx;shll $, %edx;orl %edx, %eax;movswl %ax, %edx;movl %edi, %eax": 1,
                "movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;jmp - <FT_Stream_OpenLZW+>;movl %esi, %eax;cmpb $-, %dl": 1,
                "ja  <FT_Stream_OpenLZW+>;movzbl %al, %ebx;subl $, %ebx;shll $, %ebx;movl -(%ebp), %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;leal (%ebx,%eax), %edx;movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;jmp - <FT_Stream_OpenLZW+>": 1,
                "orl %ebx, %eax;movl -(%ebp), %edx;shll $, %edx;orl %eax, %edx;movl (%edi), %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;addl $, %esp;popl %ebx": 1,
                "movl (%ebx), %esi;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %edx": 1,
                "testb $, %cl;je  <FT_Stream_OpenLZW+>;movw $, (%eax);addl $, %eax;testb $, %cl": 2,
                "testb $, %cl;je  <FT_Stream_OpenLZW+>;movb $, (%eax);movl -(%ebp), %ecx;movl %ecx, (%esi)": 1,
                "movzwl (%eax), %edx;movzwl %dx, %eax;movl %eax, (%esi);cmpl $, %eax;jg  <FT_Stream_OpenLZW+>": 1,
                "shll $, %edx;movl %edx, (%esp);movl $, (%esp);calll - <FT_DivFix>;cmpl -(%ebp), %eax": 1,
                "movl %edi, (%esi);movl -(%ebp), %ecx;movl %ecx, (%esi);movl -(%ebp), %edx;movl %edx, (%esi)": 1,
                "movl %edi, (%esi);movl %ecx, (%esi);movl %edx, (%esi);movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "movl %edi, (%esp);calll - <FT_DivFix>;movl %eax, -(%ebp);movl (%esi), %ecx;movl $, (%esp)": 1,
                "movl (%esi), %ecx;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);leal (%esi), %eax": 1,
                "movl %eax, (%esp);movl %ebx, %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%esi), %ecx;movzbl (%esi), %eax;movl %eax, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%esi), %ecx;movzbl (%esi), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl $, %edx;testl $, %edi;je  <FT_Stream_OpenLZW+>;movb $, (%esi);movl -(%ebp), %edi": 1,
                "movl %eax, (%esi);movl $, (%esp);movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esp)": 1,
                "movl $, -(%ebp);movl $, %eax;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%eax), %edx;shll $, %edx;cmpl $, %edx": 1,
                "shll $, %edx;cmpl $, %edx;jge  <FT_Stream_OpenLZW+>;movl (%eax), %edx;shll $, %edx": 2,
                "movl %ebx, (%edx);movl (%edi,%eax,), %ebx;shll $, %ebx;movl %ebx, -(%ebp);movl %ebx, (%edx)": 1,
                "addl $, (%esi);addl $, %eax;cmpl -(%ebp), %eax;jb - <FT_Stream_OpenLZW+>;movl -(%ebp), %esi": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl $, %edx;cmpl $, -(%ebp);ja  <FT_Stream_OpenLZW+>": 1,
                "movl $, %esi;movl $, %edx;movl %edi, -(%ebp);movl %esi, %edi;movl -(%ebp), %esi": 1,
                "movl (%esi,%edx,), %ebx;shll $, %ebx;movl -(%ebp), %eax;subl %ebx, %eax;movl %eax, %ecx": 1,
                "movl $, %esi;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl -(%ebp), %ebx;movl %eax, %esi": 1,
                "addl $, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %eax;cmpl (%eax), %edx;jb - <FT_Stream_OpenLZW+>": 1,
                "movl %ecx, (%esp);movl $, (%esp);calll - <FT_DivFix>;cmpl %eax, %ebx;jle  <FT_Stream_OpenLZW+>": 1,
                "movl $, %edi;movl %esi, -(%ebp);movl %ebx, %esi;cmpb $, (%ebx);je  <FT_Stream_OpenLZW+>": 1,
                "shll $, %edx;addl %edx, %eax;subl (%esi), %eax;addl $, %eax;movw $, %ax": 1,
                "shrl $, %eax;shll $, %edx;addl %edx, %eax;addl (%esi), %eax;addl $, %eax": 1,
                "movl (%esi), %ebx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "calll - <FT_Matrix_Invert+>;movl -(%ebp), %ebx;leal (%esi), %eax;movl $, %edx;calll - <FT_Stream_OpenLZW+>": 1,
                "movl $, %edx;calll - <FT_Stream_OpenLZW+>;movl (%esi), %eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%esi), %edx;addl $, %ebx;sarl $, %ebx": 1,
                "movl %ebx, (%edx);jmp  <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl %eax, -(%ebp);movl (%esi), %ebx;movl %ebx, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %ebx;movl %ebx, -(%ebp)": 1,
                "cmpl %eax, (%esi);jne - <FT_Stream_OpenLZW+>;cmpl %edx, %ecx;setne %al;movl %eax, %edi": 1,
                "cmpl $, (%edx);je  <FT_Stream_OpenLZW+>;cmpl $, (%edx);je  <FT_Stream_OpenLZW+>;testl %ecx, %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <FT_MulDiv>;movl %eax, (%ebx);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %edi, (%esp)": 1,
                "movl %eax, (%ebx);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %edi, (%esp);movl (%ebx), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl %edi, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "andl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 2,
                "movl $, -(%ebp);movl $, -(%ebp);cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;testl %esi, %esi": 1,
                "movl %ecx, -(%ebp);movl (%ecx), %edx;movl %edx, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %edi;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl $, %edi;movl -(%ebp), %ecx;cmpl (%ecx), %edx;jae  <FT_Stream_OpenLZW+>;movl %edx, %eax": 1,
                "cmpb $-, %al;jne  <FT_Stream_OpenLZW+>;movb $, (%ebx);movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl (%ecx), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 2,
                "testl %eax, %eax;jle  <FT_Stream_OpenLZW+>;movl %edi, -(%ebp);movl -(%ebp), %edi;movl %ebx, -(%ebp)": 1,
                "cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%ebx), %edx;movl %edx, %ecx;shrl $, %ecx": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%ebx), %edx;movl %edx, %ecx;shrl $, %ecx;addl %ecx, %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %eax, %edi;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;cmpw $-, (%ecx);jne - <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl (%eax), %eax;testl %eax, %eax;jne - <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;testl %edx, %edx;jne  <FT_Stream_OpenLZW+>;orl $, (%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "addl %ebx, %edx;movl %edx, -(%ebp);movl %ebx, %ecx;negl %ecx;movl (%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movl %edx, (%ecx,%ebx,);addl $, %ebx;cmpl -(%ebp), %ebx;jne - <FT_Stream_OpenLZW+>": 1,
                "movl $, %ecx;movl $, %esi;testb $, %bl;je  <FT_Stream_OpenLZW+>;movb $, (%ebx)": 1,
                "movl $, %eax;movl %esi, (%edx,%eax);addl $, %eax;cmpl %ebx, %eax;jb - <FT_Stream_OpenLZW+>": 1,
                "testl %edx, %edx;je  <FT_Stream_OpenLZW+>;movl %eax, %esi;leal (%edx), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "movl $, (%esi);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl $, (%edx);addl $, %esp;popl %ebx;popl %esi;popl %edi": 2,
                "movl (%ebx), %edx;cmpl $, %edx;je  <FT_Stream_OpenLZW+>;movl $, %eax;cmpl $, %edx": 1,
                "cmpb %al, %dl;jne  <FT_Stream_OpenLZW+>;movl $, %eax;movl (%ebp), %edx;cmpl $, (%edx)": 1,
                "movl $, %ebx;movl (%esi), %eax;movzwl (%eax,%ebx,), %edx;cmpw $, %dx;jbe  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, (%esp);movl -(%ebp), %edx;calll *(%edx);testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "calll *(%edx);testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl %eax, (%esp);movl %edi, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "movb $, %dl;testb $, %al;je  <FT_Stream_OpenLZW+>;movw $, (%eax);addl $, %eax": 1,
                "leal -(%eax), %edx;cmpb $, %dl;jbe  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Angle_Diff+>;movl $, (%ebx);movl -(%ebp), %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "movl $, -(%ebp);movl (%eax), %eax;movl (%eax), %ebx;movl -(%ebp), %edx;movl $, (%edx)": 1,
                "movzbl (%ecx), %eax;shll $, %eax;orl %eax, %edx;movzbl (%ecx), %eax;orl %edx, %eax": 1,
                "orl %eax, %edx;movzbl (%ecx), %eax;orl %edx, %eax;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "movzbl (%ecx), %eax;orl %eax, %edx;movzbl (%ecx), %eax;shll $, %eax;orl %edx, %eax": 2,
                "movl (%ecx), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %eax": 1,
                "calll - <FT_Angle_Diff+>;movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx), %eax;movl (%eax), %esi;decl %esi": 1,
                "decl %esi;cmpl %esi, (%edx);seta %al;movzbl %al, %eax;negl %eax": 1,
                "movl -(%ebp), %ecx;addl %eax, %ecx;addl -(%ebp), %ecx;movl -(%ebp), %edi;movl %ecx, (%edi,%ebx,)": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %ebx;movl %edx, -(%ebp);movl %ecx, %esi": 1,
                "movl $, %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %ebx, %edi;movl $, %edx": 1,
                "movl %edx, %ecx;addl -(%ebp), %ecx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %esi": 1,
                "cmpl $, (%ebx);je  <FT_Stream_OpenLZW+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl %eax, %edi": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;leal (%ebx), %edi;movl $, %ecx;movl (%ebp), %edx": 1,
                "movl %eax, (%esp);calll - <FT_Attach_File+>;leave;retl;pushl %ebp": 2,
                "calll - <FT_Get_Module+>;movl %eax, %esi;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp);testl %eax, %eax": 2,
                "movl (%ebp), %edi;movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll *(%esi)": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, %edi;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;cmpb $, (%eax);jne  <FT_Stream_OpenLZW+>;movl %eax, %edx;movzbl (%eax), %eax": 1,
                "cmpb $, (%eax);jne  <FT_Stream_OpenLZW+>;movl %eax, %edx;movzbl (%eax), %eax;cmpb $, %al": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax": 4,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl $, %ecx": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl $, %ecx;movl (%ebp), %edx;leal -(%ebp), %eax": 2,
                "je  <FT_Stream_OpenLZW+>;movl (%edx), %eax;cmpl %eax, (%ebp);jl  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "jl  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %edi, %eax;movl -(%ebp), %ecx;addl (%ecx), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx)": 1,
                "movl (%edx), %ebx;movl $, -(%ebp);cmpl $, %eax;jbe  <FT_Stream_OpenLZW+>;addl %edi, %eax": 1,
                "movl %eax, (%ecx);movl %eax, (%esp);movl %edx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp)": 1,
                "movzbl %al, %eax;movl -(%ebp), %edx;movl %eax, (%edx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax": 3,
                "movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %ecx": 2,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movw $, (%eax);movl (%ecx), %eax;testl %eax, %eax": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;movw %ax, (%edi);addl $, -(%ebp);cmpl %esi, -(%ebp);jne - <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <FT_Angle_Diff+>;jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %ecx": 1,
                "movl %ebx, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %edx;movl %eax, (%edx);cmpl $, -(%ebp)": 2,
                "movl %eax, (%edx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;leal (%esi,%esi), %edx;movl %edx, (%esp)": 2,
                "jne  <FT_Stream_OpenLZW+>;leal (%esi,%esi), %edx;movl %edx, (%esp);movl $, (%esp);movl %eax, (%esp)": 3,
                "movl %eax, (%ecx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;leal (%esi,%esi), %edx;movl %edx, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl %ebx, %ecx;movl %esi, %edx": 1,
                "cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl %ebx, %ecx;movl %esi, %edx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %esi;cmpl $, (%esi);jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %eax;jne - <FT_Stream_OpenLZW+>;cmpl $, %edx;jbe  <FT_Stream_OpenLZW+>;addl %edi, %edx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movzbl %al, %eax;movl -(%ebp), %esi": 1,
                "movb $, %al;movl -(%ebp), %edi;jmp  <FT_Stream_OpenLZW+>;movzbl -(%ecx,%eax), %edx;cmpl %eax, -(%ebp)": 1,
                "movl (%ecx), %ecx;movzwl (%ecx,%edx), %ecx;movw %cx, (%esi,%edx);addl $, %eax;addl $, %edx": 1,
                "addl $, -(%ebp);movl -(%ebp), %esi;cmpl %esi, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movw %ax, (%ebx,%edi,)": 1,
                "movl %ebx, %ecx;movl -(%ebp), %ebx;movw %ax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movzwl -(%ebp), %edi": 1,
                "movl $, %edx;testb $, %al;je  <FT_Stream_OpenLZW+>;movzwl (%esi), %edx;movw %dx, (%edi)": 2,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movzbl (%esi,%edx), %eax;movb %al, (%edi,%edx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movzwl (%esi), %edx;testl %edx, %edx;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "cmpl $, (%edi);jne  <FT_Stream_OpenLZW+>;testl %ecx, %ecx;jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebp), %ebx;movzwl (%ebx), %eax;movl -(%ebp), %esi;movl %eax, (%esi)": 1,
                "movl %ebx, (%esp);movl (%edx), %eax;movl %eax, (%esp);calll - <FT_DivFix>;movl -(%ebp), %ecx": 1,
                "movl (%esi), %eax;movl %eax, (%esp);calll - <FT_DivFix>;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;sarl $, (%eax);sarl $, (%eax);movl (%eax), %edi;testl %edi, %edi": 1,
                "sarl $, (%eax);movl (%eax), %edi;testl %edi, %edi;je  <FT_Stream_OpenLZW+>;addl $, %eax": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %edi;movl -(%ebp), %esi;movl (%edi,%esi,), %ebx;cmpb $, (%ebx)": 1,
                "cmpb $, (%edi);je  <FT_Stream_OpenLZW+>;movl (%edi), %eax;movl $, %esi;cmpl $, %eax": 1,
                "cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ebp), %ebx": 1,
                "addl $, %eax;sarl $, %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "cmpl %eax, %esi;jl  <FT_Stream_OpenLZW+>;movl (%ebp), %ebx;movw %dx, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %eax;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;testb %dl, %dl;je  <FT_Stream_OpenLZW+>": 1,
                "movb %cl, -(%eax);addl $, %eax;cmpl %edi, %eax;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "je  <FT_Stream_OpenLZW+>;movl %eax, %ebx;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;testl %esi, %esi": 1,
                "jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movzbl (%ebx), %ecx;cmpb %cl, %al;jne  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, %cl;je  <FT_Stream_OpenLZW+>;cmpb $, %cl;jne  <FT_Stream_OpenLZW+>;addl $, %ebx": 1,
                "subl $, %ecx;movl %ecx, -(%ebp);movl $, %eax;cmpl %ecx, -(%ebp);jg  <FT_Stream_OpenLZW+>": 1,
                "cmpb (%ecx,%eax), %bl;je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;addl %ebx, %edi": 1,
                "jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%eax), %edx;calll - <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;movl (%ebp), %ebx;movl %eax, (%ebx);cmpb $, -(%ebp);sbbl %eax, %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);jne  <FT_Stream_OpenLZW+>;movl (%ebp), %ebx;orl $, (%ebx)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl (%ebp), %ecx;cmpl $, (%ecx);jne  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);movl (%ebp), %eax": 1,
                "nop;nop;nop;nop;movl (%eax), %ecx": 1,
                "nop;nop;movl (%eax), %ecx;testb %dl, %dl;je  <FT_Stream_OpenLZW+>": 1,
                "movl %esp, %ebp;pushl %esi;pushl %ebx;subl $, %edx;movzbl %dl, %edx": 1,
                "leal (%ecx,%edx), %esi;movl $, %edx;shll $, %edx;movzbl (%ecx), %ebx;orl %ebx, %edx": 1,
                "shll $, %edx;movzbl (%ecx), %ebx;orl %ebx, %edx;addl $, %ecx;cmpl %esi, %ecx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ecx;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%eax), %ebx;movl %ebx, (%ecx);testl %edx, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %ebx;movl %ebx, (%ecx);testl %edx, %edx;je  <FT_Stream_OpenLZW+>;movl (%eax), %eax": 1,
                "testl %edx, %edx;je  <FT_Stream_OpenLZW+>;movl (%eax), %eax;movl %eax, (%edx);movl $, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl (%ebx), %edx;movl %edx, (%esp);movl (%ebx), %edx;movl %edx, (%esp)": 1,
                "movl $, -(%ebp);testl %edi, %edi;je  <FT_Stream_OpenLZW+>;subl (%ebx), %edi;movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl (%ebx), %eax": 1,
                "movl %edi, (%esp);movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;addl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movzbl (%ebx), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "addl %eax, -(%ebp);movzbl (%ebx), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;addl (%ebx), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl (%ebp), %ecx;movl %edx, (%ecx);movl (%eax), %eax;movl %eax, (%ecx);movl $, (%ecx)": 1,
                "movl %eax, (%ecx);movl (%edi), %eax;movl %eax, (%ecx);movl (%edi), %eax;movl %eax, (%ecx)": 2,
                "movl (%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp);calll - <FT_RoundFix>;sarl $, %eax": 2,
                "calll - <FT_RoundFix>;sarl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl (%ebp), %edx": 1,
                "calll - <FT_RoundFix>;sarl $, %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "sarl $, %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%edi);movl (%edx), %eax;movl %eax, (%edi);movw $, (%edi);movw $, (%edi)": 1,
                "movb %al, -(%ebp);movb %al, -(%ebp);movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%edi);cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%edi), %ebx;movl -(%ebp), %eax": 1,
                "cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%edi), %ebx;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "orl $, (%edi);leal (%edi), %edx;movl %edx, -(%ebp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "leal (%edi), %edx;movl %edx, -(%ebp);leal -(%ebp), %ebx;movl %ebx, (%esp);movl %edx, (%esp)": 1,
                "movl %edx, -(%ebp);leal -(%ebp), %ebx;movl %ebx, (%esp);movl %edx, (%esp);calll - <FT_Outline_Transform>": 1,
                "movl %eax, (%edi);movl $, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);movl %ebx, (%esp)": 1,
                "movl $, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);movl %ebx, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, %esi;movl %edi, -(%ebp);movl -(%ebp), %edi;movl (%ebx), %eax;movl -(%ebp), %edx": 1,
                "subl $, %esi;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl -(%ebp), %edi;movl (%edi), %eax": 1,
                "subl %edx, %eax;movl %eax, (%edi);movl -(%ebp), %eax;movl %eax, %ecx;subl -(%ebp), %ecx": 1,
                "movl %eax, (%edi);movl -(%ebp), %eax;movl %eax, %ecx;subl -(%ebp), %ecx;movl %ecx, (%edi)": 1,
                "jle  <FT_Stream_OpenLZW+>;movl $, %edi;movl (%ebx), %eax;leal (%eax,%edi,), %esi;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl $, (%ebx);movl $, (%ebx);movl (%ebx), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 3,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);addl $, %esp": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_DivFix>;movl %eax, -(%ebp);movl $, -(%ebp)": 2,
                "movl $, (%esp);movl -(%ebp), %esi;movl %esi, (%esp);calll - <FT_Angle_Diff+>;testl %eax, %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp)": 1,
                "movl %ecx, (%esp);movl -(%ebp), %esi;movl %esi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;testl %eax, %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movl %ebx, -(%ebp);testl %eax, %eax": 1,
                "setb %al;cmpb %al, %dl;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "calll *-(%ebp);movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);ja - <FT_Stream_OpenLZW+>;leal -(%ebp), %edx": 1,
                "movl -(%ebp), %ebx;movl %ebx, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "jle  <FT_Stream_OpenLZW+>;addl $, -(%ebp);addl $, %ebx;cmpl %eax, %ebx;jne - <FT_Stream_OpenLZW+>": 1,
                "movl $, %edx;movl $, %ebx;movzbl -(%ebp), %ecx;cmpb (%edx), %cl;jne  <FT_Stream_OpenLZW+>": 1,
                "movl $, %eax;repne  scasb %es:(%edi), %al;notl %ecx;subl $, %ecx;cmpl %ecx, %esi": 1,
                "cmpl $, %esi;jle  <FT_Stream_OpenLZW+>;movzbl (%edx), %ecx;movl -(%ebp), %eax;cmpb %cl, (%eax)": 1,
                "movl %eax, (%esp);calll *(%ebx);movl -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %edx": 1,
                "cmpl $, %edx;je  <FT_Stream_OpenLZW+>;cmpl $, %edx;nop;jne  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %eax;ja  <FT_Stream_OpenLZW+>;movl $, (%esp);movl $, (%esp);leal -(%ebp), %esi": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %edi, %ebx": 1,
                "jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);calll - <FT_Angle_Diff+>;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ebx;movl %eax, (%ebx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "subl %eax, %edx;je  <FT_Stream_OpenLZW+>;movl %edx, %eax;cmpl $, %edx;jbe  <FT_Stream_OpenLZW+>": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %edi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;subl %esi, %eax": 1,
                "subl %esi, %eax;movl %eax, %esi;leal -(%ebp), %ecx;addl %ecx, %esi;movl %ecx, %edx": 1,
                "cmpb $, %cl;ja  <FT_Stream_OpenLZW+>;leal -(%eax), %ecx;movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;cmpb $, %al;nop;je  <FT_Stream_OpenLZW+>;cmpb $, %al": 2,
                "addl $, %edx;jmp  <FT_Stream_OpenLZW+>;cmpb $, %al;jne  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);movl (%ebx), %eax;movl (%ebp), %edx;addl (%edx), %eax": 1,
                "calll - <FT_Angle_Diff+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%esi), %eax": 1,
                "leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, (%edi,%esi,);addl $, %esi;cmpl -(%ebp), %esi": 1,
                "movl %ebx, (%esp);calll - <FT_Angle_Diff+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%edi), %esi": 1,
                "movl -(%ebp), %eax;movl %ebx, (%eax);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx": 1,
                "movl (%edi), %eax;movl (%ebp), %ebx;addl (%ebx), %eax;movl %eax, (%esp);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %edx;movl (%edx), %eax;movl (%eax), %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl %esi, -(%ebp)": 1,
                "movl %ebx, (%eax);addl $, -(%ebp);addl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %esi": 1,
                "movl (%ebx), %esi;movl %esi, -(%ebp);cmpl $-, %esi;je - <FT_Stream_OpenLZW+>;movl $, %edi": 1,
                "movl %edi, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %edi, -(%ebp);movl (%ebp), %ebx;leal (,%esi,), %edi;movl (%ebx), %eax": 1,
                "leal (,%esi,), %edi;movl (%ebx), %eax;movl (%eax,%edi), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "jmp - <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movl (%edx), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%edx);movswl (%edx), %eax;movl %eax, (%edx);movswl (%edx), %ecx;movl %ecx, (%edx)": 1,
                "movswl (%edx), %ecx;movl %ecx, (%edx);movl (%edx), %esi;movl %esi, %eax;addl $, %eax": 1,
                "subl %ecx, %eax;cmpl %eax, %edi;jl  <FT_Stream_OpenLZW+>;movl (%ebp), %ecx;movw %dx, (%ecx)": 1,
                "jl  <FT_Stream_OpenLZW+>;movl (%ebp), %ecx;movw %dx, (%ecx);jmp  <FT_Stream_OpenLZW+>;subl %ecx, %esi": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl -(%ebp), %ebx;movl -(%ebp), %esi;addl %ebx, %esi": 1,
                "leal (%edi,%eax), %ebx;cmpl %ebx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl %ecx, (%eax);jne  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl %edi, -(%ebp);movl (%edi), %esi;movl -(%ebp), %edi;cmpl %esi, (%edi);jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%edi), %esi;movl -(%ebp), %edi;cmpl %esi, (%edi);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi": 1,
                "movl (%eax), %edx;cmpl %edx, (%eax);jae  <FT_Stream_OpenLZW+>;movl $, %edx;jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl (%eax), %ecx;jae  <FT_Stream_OpenLZW+>;addl $, %edx;cmpl %ebx, %edx;jne - <FT_Stream_OpenLZW+>": 1,
                "cmpl %ebx, %edx;jne - <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl %esi, %ebx;jb  <FT_Stream_OpenLZW+>;movl %eax, %ecx;cmpl %ecx, %edx": 1,
                "shll $, %eax;movl (%edi,%eax), %eax;cmpl %esi, %eax;je - <FT_Stream_OpenLZW+>;cmpl %eax, %esi": 1,
                "movl -(%ebp), %ebx;movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl %edx, %ecx;subl %eax, %ecx": 1,
                "movl %ecx, %ebx;shll $, %ebx;movl (%edi,%ebx), %ebx;cmpl %esi, %ebx;jne  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %edx, %ebx;nop;jmp  <FT_Stream_OpenLZW+>;movl %edx, %ecx": 1,
                "movl %edx, %ecx;leal (%ecx), %eax;cmpl %ebx, %eax;jae  <FT_Stream_OpenLZW+>;movl %ebx, %edx": 1,
                "cmpl %ebx, %eax;jae  <FT_Stream_OpenLZW+>;movl %ebx, %edx;subl %eax, %edx;shrl %edx": 1,
                "movl $, %esi;testl %edx, %edx;je  <FT_Stream_OpenLZW+>;leal (%edx), %eax;shll $, %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movl %esi, (%edx);addl $, %esp;popl %ebx": 1,
                "movl %ecx, %edi;addl %edx, %edi;leal (%esi,%edi,), %edx;cmpl %edx, (%ebp);jb  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;addl $, %esi;movzbl -(%esi), %edx;shll $, %edx;movzbl -(%esi), %ecx": 1,
                "jb  <FT_Stream_OpenLZW+>;movzbl (%ebx), %esi;movzbl (%ebx), %eax;movl %eax, -(%ebp);addl $, %ebx": 1,
                "cmpb $, %cl;sbbl $-, %eax;movl (%ebp), %esi;movl (%esi), %ecx;movl (%esi), %edx": 1,
                "addl %ebx, %eax;cmpl %eax, (%ebp);jb  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "shll $, %ebx;movzbl (%ecx), %ecx;orl %ecx, %ebx;movzwl %bx, %ebx;jmp  <FT_Stream_OpenLZW+>": 1,
                "addl %eax, (%esi);movl -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp - <FT_Stream_OpenLZW+>": 1,
                "movl %esi, -(%ebp);movl (%eax), %ebx;cmpb $, (%eax);je  <FT_Stream_OpenLZW+>;movl %edx, %esi": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <FT_Attach_File+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 3,
                "calll - <FT_Attach_File+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movswl (%ebx), %ecx;movl (%esi), %eax": 1,
                "movl (%esi), %edx;movl (%ebx), %esi;movl %eax, (%esi,%ecx,);movl %edx, (%esi,%ecx,);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movb $, (%eax,%ecx);addw $, (%ebx);movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "jns  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %esi": 1,
                "movl (%esi), %esi;movl %esi, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp);movl (%ecx), %esi": 1,
                "leal (%eax), %edx;cmpl %edx, %ebx;jb  <FT_Stream_OpenLZW+>;movzbl (%eax), %eax;movl %edx, -(%ebp)": 2,
                "jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl %eax, %ecx;andl $, %ecx;cmpb $, %cl;je  <FT_Stream_OpenLZW+>;cmpb $, %cl": 1,
                "andl $, %edx;cmpl $, %edx;je  <FT_Stream_OpenLZW+>;cmpl $, %edx;jne  <FT_Stream_OpenLZW+>": 1,
                "jns  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;leal (%eax), %edx;cmpl %edx, %ebx;jb  <FT_Stream_OpenLZW+>": 1,
                "addl $, (%eax);addl $, -(%ebp);addl $, %esi;movl -(%ebp), %edx;cmpl %edx, -(%ebp)": 1,
                "movl -(%ebp), %edx;cmpl %edx, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Angle_Diff+>;testl %edi, %edi": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi": 4,
                "cmpl -(%ebp), %edi;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movswl %bx, %ebx;movl -(%ebp), %edx": 1,
                "jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;jmp  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movzbl (%eax), %eax;movl %edx, -(%ebp);movl %eax, %esi;andl $, %esi;movl %esi, -(%ebp)": 1,
                "cmpl %edx, %ebx;jb  <FT_Stream_OpenLZW+>;movzbl (%eax), %eax;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "cmpl %eax, %esi;jbe  <FT_Stream_OpenLZW+>;addl $, %esi;andl $-, %esi;leal -(%ebp), %edx": 1,
                "jb  <FT_Stream_OpenLZW+>;movzbl (%eax), %eax;movl %edx, -(%ebp);movl %eax, %edx;andl $, %edx": 1,
                "movl $, %ebx;movl $, %edx;jmp  <FT_Stream_OpenLZW+>;movl $, %ebx;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);addl $, %eax;addl $, %ecx;cmpl %ebx, %ecx": 1,
                "movswl (%ebx), %eax;movl (%ebx), %edx;leal (%edx,%eax,), %edx;addl (%ebx), %eax;movl -(%ebp), %esi": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%ebp), %ebx;cmpl (%edi), %ebx;jae  <FT_Stream_OpenLZW+>;testb $, (%ebp)": 1,
                "movl (%edi), %esi;movl %esi, -(%ebp);movl (%edi), %ebx;movl %ebx, -(%ebp);movl (%edi), %ebx": 1,
                "movl -(%ebp), %edi;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl (%ebx), %eax;movl %eax, %edx": 1,
                "movl (%ebx), %ebx;movl (%esi), %ecx;movl %ecx, -(%ebp);movl (%esi), %esi;movl %esi, -(%ebp)": 1,
                "sbbl $-, %esi;movl $, -(%ebp);movl %edi, -(%ebp);movl %edx, %edi;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, -(%ebp);leal (%eax,%esi), %edx;cmpl %edx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl %ecx, %edx": 1,
                "leal (%eax,%esi), %edx;cmpl %edx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl %ecx, %edx;cmpb $, -(%ebp)": 1,
                "cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;leal (%eax), %ecx;movl %ecx, -(%ebp);movzbl (%eax), %ecx": 1,
                "cmpl %ecx, -(%ebp);jae - <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;jmp  <FT_Stream_OpenLZW+>;cmpl %edx, %ebx": 1,
                "movzbl (%eax), %edx;shll $, %edx;movzbl (%eax), %esi;orl %edx, %esi;movzwl %si, %esi": 1,
                "testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl (%edx), %eax;movl (%edi), %ecx": 1,
                "movl %edx, -(%ebp);shll $, %eax;sarb $, %al;movsbl %al, %eax;movl %eax, -(%ebp)": 1,
                "jb  <FT_Stream_OpenLZW+>;movsbl (%eax), %ecx;movl %ecx, -(%ebp);movsbl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);movzbl -(%ebp), %eax;shrb $, %al;movb %al, -(%ebp);andl $, %eax": 1,
                "orl %edx, %eax;movzwl %ax, %eax;movl %eax, -(%ebp);movzbl (%ebx), %eax;shll $, %eax": 1,
                "orl %edx, %eax;movzwl %ax, %eax;leal (%ebx), %ebx;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "leal (%ebx), %ebx;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;movl $, -(%ebp);movzbl -(%ebp), %ecx": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;leal (%ebx), %ecx;cmpl %ecx, %esi;jb  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;andl $, %ecx;movl %ecx, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, %ecx;movl %esi, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi": 1,
                "jg  <FT_Stream_OpenLZW+>;movb %dl, (%eax);movl -(%ebp), %eax;addl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;testl %edx, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl $, %esi;jmp  <FT_Stream_OpenLZW+>;testl %esi, %esi": 1,
                "testl %ecx, %ecx;setle %bl;movzbl %bl, %ebx;movl %ebx, -(%ebp);subl $, -(%ebp)": 1,
                "setle %bl;movzbl %bl, %ebx;movl %ebx, -(%ebp);subl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 2,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %eax, -(%ebp);cmpl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jbe  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax": 1,
                "movl (%ebp), %esi;movl $, (%esi);movw $, (%esi);movw $, (%esi);movl (%edi), %ecx": 1,
                "movl (%ebp), %eax;movl $, (%eax);addl $, %eax;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%ecx);movl (%eax), %edx;movl %edx, (%ecx);movl (%eax), %eax;andl $-, %eax": 1,
                "movswl (%esi), %eax;cmpl %edi, %eax;jg - <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl (%ebp), %ebx": 1,
                "movl %ebx, (%esp);calll - <FT_Angle_Diff+>;jmp - <FT_Stream_OpenLZW+>;movl (%ebp), %esi;movl $, (%esi)": 1,
                "je - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, (%esp);calll - <FT_Angle_Diff+>;jmp - <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%eax), %esi;movl %eax, (%esp);movl %edi, (%esp);calll - <FT_Angle_Diff+>": 1,
                "movzbl (%ebx), %edx;shll $, %edx;movzbl (%ebx), %ecx;orl %ecx, %edx;movw %dx, (%eax)": 1,
                "shll $, %edx;movzbl (%ebx), %ecx;orl %ecx, %edx;movw %dx, (%eax);movzbl (%ebx), %ecx": 1,
                "movl %ecx, %edx;andl $, %edx;movb %dl, -(%ebp);cmpb $, %dl;sbbl %edx, %edx": 1,
                "movzbl -(%ebp), %edx;imull %ecx, %edx;addl -(%ebp), %edx;cmpl %edx, (%ebp);jb  <FT_Stream_OpenLZW+>": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx;movl $, -(%ebp)": 1,
                "movl %esi, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 1,
                "movb $, (%eax,%esi);movl -(%ebp), %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 1,
                "testb %al, %al;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, %edx;movzbl (%edi), %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %esi, (%esp);movl %edi, (%esp);movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>": 2,
                "jne  <FT_Stream_OpenLZW+>;addl $, %ecx;movzbl -(%ebp), %edx;andb $, %dl;movb %dl, -(%ebp)": 1,
                "addl $, %ecx;movzbl -(%ebp), %edx;andb $, %dl;movb %dl, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "orl %ecx, %eax;movl %eax, (%edi);cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;testb $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movzbl (%ecx), %eax;addl $, %ecx;movl %ecx, -(%ebp);movl %eax, (%edi)": 1,
                "cmpl %edx, -(%ebp);jb  <FT_Stream_OpenLZW+>;leal (%eax), %edx;movl %edx, -(%ebp);movzbl (%eax), %edx": 1,
                "movswl %dx, %edx;movl %edx, (%edi);movzbl (%eax), %edx;shll $, %edx;movzbl (%eax), %ecx": 3,
                "movl %edx, (%edi);leal (%eax), %edx;movl %edx, -(%ebp);movzbl -(%ebp), %ecx;andl $, %ecx": 1,
                "leal (%eax), %edx;cmpl %edx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl %edx, -(%ebp);movzbl (%eax), %edx": 1,
                "cmpb $, -(%ebp);jns  <FT_Stream_OpenLZW+>;movl %eax, (%esp);movl $, %ecx;movl -(%ebp), %edx": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "cmpl %eax, -(%ebp);jb  <FT_Stream_OpenLZW+>;cmpl $, %eax;ja  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "leal -(%ebx), %edx;movl -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %ecx;calll - <FT_Stream_OpenLZW+>": 2,
                "cwtl;movl -(%ebp), %edx;movl %eax, (%edx);movzbl (%ecx), %eax;shll $, %eax": 2,
                "orl %edx, %eax;cwtl;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <FT_Stream_OpenLZW+>": 1,
                "andb $, %cl;movb %cl, -(%ebp);cmpb $, %cl;sbbl $-, %eax;movzbl -(%ebp), %edx": 1,
                "jb  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;shll $, %eax": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl %edx, (%eax);cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>": 2,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl (%esi), %edx;movl %edx, (%eax);cmpb $, -(%ebp)": 1,
                "movl %edx, -(%ebp);cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;leal (%edx), %ecx;movl %ecx, -(%ebp)": 1,
                "shll $, %ecx;orl %esi, %ecx;movzbl (%edx), %edx;orl %ecx, %edx;jmp  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;addl $, %eax;cmpl %ecx, %eax;jne - <FT_Stream_OpenLZW+>;cmpl $, (%edi)": 1,
                "addl $, %eax;cmpl %ecx, %eax;jne - <FT_Stream_OpenLZW+>;cmpl $, (%edi);je  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;orl $, (%edi);movl (%edi), %ebx;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%edi);movl $, (%edi);movl (%edi), %eax;movl %eax, (%edi);movl (%edi), %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;subl %ecx, %esi;movw %si, (%edi);testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>": 1,
                "subl $, %eax;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, %ebx;movw %bx, (%edi)": 1,
                "movl %eax, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl $, -(%ebp);movzwl %ax, %eax;movl %eax, (%edi)": 1,
                "movl %ecx, -(%ebp);testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;cmpl (%ebx), %esi;jb  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, %ecx;andl $, %ecx;movb %cl, -(%ebp);andl $, %edx;movb %dl, -(%ebp)": 1,
                "je  <FT_Stream_OpenLZW+>;leal (%edx), %ecx;movl %ecx, -(%ebp);movzbl (%edx), %eax;movl %eax, %ecx": 1,
                "movl %eax, %ecx;shll $, %ecx;movzbl (%edx), %eax;shll $, %eax;orl %eax, %ecx": 1,
                "shll $, %ecx;movzbl (%edx), %eax;orl %ecx, %eax;cmpl %esi, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "cmpl %esi, %eax;je  <FT_Stream_OpenLZW+>;cmpl %esi, %eax;jae  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl %edx, -(%ebp);cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;addl $, %ecx": 1,
                "movzbl (%edx), %eax;movswl (%ebx), %edx;addl %edx, %eax;movl (%ebp), %ebx;movl %eax, (%ebx)": 1,
                "movl (%ebp), %esi;movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl (%ebx), %edx;cmpl %edx, %eax;je  <FT_Stream_OpenLZW+>;movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "movl (%esi), %ecx;testl %ecx, %ecx;je  <FT_Stream_OpenLZW+>;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %edx;movl (%ebp), %eax;movl (%ebx), %esi": 1,
                "movl (%edx), %edx;movl (%edx), %ecx;movl %ecx, (%ebx);movl (%edx), %ecx;movl %ecx, (%ebx)": 2,
                "je  <FT_Stream_OpenLZW+>;movw $, (%edx);addl $, %edx;subl $, %ecx;movl %ecx, %eax": 3,
                "movl %eax, (%esp);movl (%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movl -(%ebp), %edx;calll *(%edx)": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll - <FT_Attach_File+>;leave;retl": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebx), %eax;cmpl $, (%eax)": 1,
                "movl (%ebx), %eax;movl (%eax), %eax;addl $, %eax;movl %eax, (%esp);calll - <FT_List_Find>": 1,
                "movzbl %dl, %eax;subl $, %eax;cmpl $, %eax;ja  <FT_Stream_OpenLZW+>;movl %ebx, (%esp)": 1,
                "cmpl $, %eax;ja  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll *(%ebx);movl %eax, (%ebx)": 1,
                "calll *(%ebx);movl %eax, (%ebx);cmpl $, (%ebx);je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebx), %eax;cmpl %eax, %edi;ja - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "cmpl $, (%ebx);jne  <FT_Stream_OpenLZW+>;cmpb $, (%edi);jne - <FT_Stream_OpenLZW+>;leal (%edi), %eax": 1,
                "movl %edi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "addl $, -(%ebp);movl -(%ebp), %eax;cmpl (%ebx), %eax;jb - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll - <FT_Get_Module+>;movl %eax, -(%ebp);movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);movl $, %ebx;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl (%ecx), %esi;movl $, -(%ebp);movl -(%ebp), %edx;movl (%edx), %eax;movl %ebx, (%esp)": 1,
                "movl (%edx), %eax;movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %edx": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll *(%eax);movl %esi, -(%ebp);movl $, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "calll - <FT_Angle_Diff+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %edi, (%esp);movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "setb %dl;cmpb %dl, %cl;je  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll *-(%ebp)": 1,
                "cmpb %dl, %cl;je  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll *-(%ebp);cmpl $, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);ja - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpl %eax, -(%ebp);jbe  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl %eax, -(%ebp);jbe  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll *-(%ebp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll *-(%ebp);cmpl $, -(%ebp)": 1,
                "movl %ebx, (%esp);calll *-(%ebp);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl $, %edi;movl %esi, -(%ebp);movl %edi, %esi;leal (%esi,%esi,), %eax;leal (,%eax,), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll *(%ecx);movl -(%ebp), %eax": 1,
                "addl $, %eax;movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;addl $, %eax": 3,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll *-(%ebp)": 1,
                "movl %edx, (%esp);movl %ebx, (%esp);calll *-(%ebp);movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebp), %ecx": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;movl %eax, (%ecx)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "movl -(%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);jmp  <FT_Stream_OpenLZW+>;addl $, %ebx": 1,
                "addl $, %ebx;cmpl -(%ebp), %ebx;jne - <FT_Stream_OpenLZW+>;addl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "orl $, (%eax);movl (%eax), %edx;movl %edx, (%eax);movl $, (%eax);testl %edx, %edx": 1,
                "testl %edx, %edx;je  <FT_Stream_OpenLZW+>;movl (%eax), %ecx;testl %ecx, %ecx;jne  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, %al;jne  <FT_Stream_OpenLZW+>;addl $, %ecx;jmp  <FT_Stream_OpenLZW+>;cmpb $, %bl": 1,
                "cmpb $, %bl;jne  <FT_Stream_OpenLZW+>;addl $, %edx;jmp  <FT_Stream_OpenLZW+>;testb %bl, %bl": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);jmp  <FT_Stream_OpenLZW+>;movzbl (%ecx), %eax;testb %al, %al": 1,
                "movzbl (%ecx), %eax;testb %al, %al;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %ecx": 1,
                "addl $, %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl (%eax), %eax;movl %eax, (%esp)": 1,
                "cmpl $, (%ecx);je  <FT_Stream_OpenLZW+>;movl $, (%ecx);testb $, (%eax);je  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%esp);movl %eax, (%esp);calll - <FT_New_Library+>;movl %eax, %ebx;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl %ecx, (%esp)": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl %eax, (%esp);calll *(%eax)": 1,
                "movl (%ebp), %ecx;cmpl $, (%ecx);jne  <FT_Stream_OpenLZW+>;movl %ebx, %eax;notl %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %ebx, %eax;notl %eax;addl (%ecx), %eax;movl %eax, %edx": 1,
                "movl $, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %edx;subl %eax, %edx;cmpl %edx, -(%ebp);jle  <FT_Stream_OpenLZW+>": 1,
                "leal (%eax,%edx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, %ecx;addl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpl $, %edi;je  <FT_Stream_OpenLZW+>": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpl $, %edi;je  <FT_Stream_OpenLZW+>;cmpl $, %edi": 1,
                "cmpl $, %edi;je  <FT_Stream_OpenLZW+>;cmpl $, %edi;jb  <FT_Stream_OpenLZW+>;cmpl $, %edi": 1,
                "cmpl $, -(%ebp);ja  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;movl (%ebp), %ecx;movl (%ecx), %edx": 1,
                "ja  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;movl (%ebp), %ecx;movl (%ecx), %edx;movl -(%ebp), %ecx": 1,
                "movzbl (%eax), %ecx;shll $, %ecx;movzbl (%eax), %edx;addl %ecx, %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %edi;shll $, %edi;addl %eax, %edi;movzbl (%eax), %ecx;shll $, %ecx": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;shll $, %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "shll $, %eax;addl $, %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "addl $, %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, %edi;cmpl -(%ebp), %esi;ja  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl -(%ebp), %esi;ja  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax": 1,
                "ja  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;movl (%ebp), %ecx": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;calll *(%edx);movl (%ebp), %ecx;movl (%ecx), %ebx": 1,
                "movl %edi, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpb $, %al;jne  <FT_Stream_OpenLZW+>;addl $, %esi": 1,
                "jbe  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp)": 1,
                "cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpb $, -(%ebp);nop": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp);calll *(%ebx);movl %eax, %esi": 1,
                "jbe  <FT_Stream_OpenLZW+>;addl $, %edi;movl %edi, (%ebx);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %edi, (%ebx);movl -(%ebp), %edx;movl %edx, (%esp);calll *(%ebx);cmpl $, (%ebx)": 1,
                "movl %eax, (%esp);movl %edi, (%esp);movl %esi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %eax;movl $, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "movl (%eax,%esi), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;addl $, %ebx": 1,
                "movl (%ebp), %ebx;movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <FT_Get_Module>": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;movl (%edx), %ecx;movzbl (%ecx), %edx;movl %edx, (%eax)": 1,
                "subl %edx, %ecx;movl %ecx, (%eax);movl $, %eax;popl %ebp;retl": 1,
                "pushl %ebx;movl (%ebp), %edx;movl (%ebp), %ecx;subl (%edx), %ecx;leal (%ecx), %ebx": 1,
                "shll $, %eax;movl %eax, (%ebx);movzwl (%esi), %eax;shll $, %eax;movl %eax, (%ebx)": 2,
                "sarl $, %edx;movl -(%ebp), %eax;sarl $, %eax;subl %eax, %edx;jmp  <FT_Stream_OpenLZW+>": 2,
                "addl $, %eax;sarl $, %eax;cmpl %edx, %eax;je  <FT_Stream_OpenLZW+>;movl $, %eax": 3,
                "jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%eax), %esi;testl %esi, %esi": 1,
                "subl $, %edx;jmp  <FT_Stream_OpenLZW+>;movzbl (%esi), %edx;cmpw $, (%esi);je  <FT_Stream_OpenLZW+>": 1,
                "jb  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "jbe  <FT_Stream_OpenLZW+>;movl %eax, %edx;movl %eax, -(%ebp);movzbl (%edi), %eax;movb %al, (%edx)": 1,
                "movzwl %di, %edi;jmp - <FT_Stream_OpenLZW+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl (%eax), %eax;movl (%esi), %ebx;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;cmpl $, (%ebx)": 1,
                "movl %edx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;leal (%ebx), %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;leal (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "movzwl (%ebx), %ecx;movl %ecx, %edx;andb $-, %dh;movb $, %al;cmpw $, %dx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movzwl -(%ebp), %eax;cmpw $, %ax;jne  <FT_Stream_OpenLZW+>": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movw %ax, -(%ebp)": 1,
                "movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl (%ebx), %edx;subl (%ebx), %edx;leal (%eax,%edx), %edx": 1,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpw $, -(%ebp);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esi);cmpl %eax, %edi;jl  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;testl %edi, %edi;js  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax": 1,
                "movzwl -(%ebp), %ecx;movl %ecx, -(%ebp);movzwl %ax, %eax;shll %cl, %eax;movl -(%ebp), %edx": 1,
                "movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movzwl %ax, %eax;movzbl -(%ebp), %ecx;shll %cl, %eax": 1,
                "movl $, (%esi);movw $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movw $, -(%ebp);addl $, %ebx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, %ebx;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, (%eax);movl (%edi), %eax;movl -(%ebp), %edx;movl %edx, (%eax);movl (%edi), %eax": 1,
                "movl %edx, (%eax);movl (%edi), %eax;movl %esi, %edx;calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;testb %bl, %bl;je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "orl $, (%esi);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "addw (%ebx), %ax;movw %ax, (%edi);movzwl (%ebx), %edx;shll $, %edx;movl %edx, (%edi)": 1,
                "jne  <FT_Stream_OpenLZW+>;movb $, %al;movzwl %ax, %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "movl %eax, (%edi);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %edx;movb $, (%eax,%edx);movl (%ebx), %edx;movl %edx, %edi;movl $, %eax": 1,
                "movb $, (%eax,%edx);movl (%ebx), %edx;movl %edx, %edi;movl $, %eax;movl $, %ecx": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %eax, (%esi);movl $, (%esi);movl (%esi), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %esi, (%esp);calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movzwl (%edi), %eax;addl $, %eax;jmp  <FT_Stream_OpenLZW+>;cmpl %esi, %ecx": 2,
                "movl %eax, %ecx;movl $, %ebx;jmp  <FT_Stream_OpenLZW+>;leal (%eax,%ebx), %edx;shrl %edx": 2,
                "cmpl %ecx, %esi;jae  <FT_Stream_OpenLZW+>;movl %edx, %eax;cmpl %eax, %ebx;jb - <FT_Stream_OpenLZW+>": 2,
                "cmpl %ebx, -(%ebp);jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;leal (%ecx,%ebx,), %eax;movl (%eax), %esi": 2,
                "leal (%ecx,%ebx,), %eax;movl (%eax), %esi;movzwl (%eax), %eax;addl $, %eax;jmp  <FT_Stream_OpenLZW+>": 2,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 2,
                "movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;popl %ebp;retl": 3,
                "movl %edi, -(%ebp);movl (%ebp), %edi;movl (%ebp), %eax;movl (%eax), %ebx;testl %ebx, %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;addl $, %edx;sarl $, %edx;addl %edx, %edx;movl (%ebp), %ecx": 1,
                "addl %edx, %edx;movl (%ebp), %ecx;movl %edx, (%ecx);jmp  <FT_Stream_OpenLZW+>;addl $, %edx": 1,
                "movl (%ebp), %edx;imull (%edx), %eax;movl %eax, -(%ebp);movl %eax, (%esp);movl %edx, (%esp)": 1,
                "je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;addl %eax, %edx;movl %esi, -(%ebp);movl %edx, %esi": 1,
                "movl $, %edx;movl %edx, %eax;shll %cl, %eax;cmpl $, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %edx;movl $, %eax;testl %edx, %edx": 2,
                "movl %eax, (%ebx);movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, (%ebx);movl (%edx), %eax": 3,
                "movl %ecx, (%esp);movl %eax, (%esp);calll - <FT_Angle_Diff+>;jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx": 1,
                "movl %ebx, %edi;addl $, %ebx;cmpl %edx, -(%ebx);jne  <FT_Stream_OpenLZW+>;movl (%eax), %ecx": 1,
                "movl (%edi), %ebx;movl $, %edx;cmpl %ebx, %ecx;ja  <FT_Stream_OpenLZW+>;subl %ecx, %ebx": 1,
                "movl $, %edx;cmpl %ebx, %ecx;ja  <FT_Stream_OpenLZW+>;subl %ecx, %ebx;movl %ebx, (%esp)": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, %edx;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%edi), %eax": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %edx, (%esp);movl $, (%esp)": 1,
                "cmpl $, %edx;jne  <FT_Stream_OpenLZW+>;leal (%ebx), %ecx;movzbl %al, %edx;movl %esi, %eax": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);movl $, %ebx;movl %esi, (%esp);movl $, (%esp)": 1,
                "movl %edx, %ebx;movl (%ebx), %ecx;movl %ecx, -(%ebp);movl $, %edx;movl %edi, -(%ebp)": 1,
                "jbe  <FT_Stream_OpenLZW+>;movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %ebx;movl %ebx, -(%ebp)": 1,
                "subl %ecx, %ebx;cmpl %ebx, (%edx);ja  <FT_Stream_OpenLZW+>;movl %edi, %edx;notl %edx": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebx), %esi;movl (%ebx), %ecx": 3,
                "movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 6,
                "jae  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "testb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);movl $, (%esp);movl %edi, (%esp)": 1,
                "movl %esi, (%esp);calll - <FT_Angle_Diff+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %eax, (%ebx)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %eax, (%ebx);movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "testb %dl, %dl;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl -(%ebp), %ebx;movl $, -(%ebp)": 2,
                "leal -(%ebp), %edi;movl %edi, (%esp);addl -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "addl -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Attach_File+>;movl %eax, (%ebx)": 1,
                "movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %eax;movl %eax, -(%ebp);testl %eax, %eax": 4,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebx), %ecx;movl (%ebx), %esi": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;testl $, %eax;jne  <FT_Stream_OpenLZW+>;testl $, %eax": 1,
                "movl %eax, -(%ebp);movl %edi, (%esp);calll - <FT_Angle_Diff+>;testl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);movl $, %ebx;jmp  <FT_Stream_OpenLZW+>;testb $, -(%ebp)": 1,
                "movl %edi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl -(%ebp), %ecx;movl %eax, (%ecx,%ebx,);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx,%ebx,);jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movw %ax, (%ebx);movl %edi, (%esp);calll - <FT_Angle_Diff+>": 1,
                "subl -(%ebp), %edx;addl $, %edx;movl -(%ebp), %eax;subl -(%ebp), %eax;addl $, %eax": 1,
                "movl (%eax), %edx;movzbl (%edx), %edx;movl %edx, %ecx;andl $-, %ecx;cmpb $, %cl": 1,
                "movzbl (%eax), %edx;andl $-, %edx;movl $, %eax;cmpb $, %dl;jne  <FT_Stream_OpenLZW+>": 2,
                "jne  <FT_Stream_OpenLZW+>;movl $, %eax;movl %eax, -(%ebp);movl $, %edx;movl %ebx, %eax": 2,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;cmpb $, (%eax);je  <FT_Stream_OpenLZW+>;movl (%eax), %eax": 3,
                "cmpb $, (%eax);je  <FT_Stream_OpenLZW+>;movl (%eax), %eax;movzbl (%eax), %eax;andl $-, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%eax), %eax;movzbl (%eax), %eax;andl $-, %eax;cmpb $, %al": 1,
                "movl (%eax), %eax;movzbl (%eax), %eax;andl $-, %eax;cmpb $, %al;jne  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%eax), %eax;movzbl (%eax), %edx;testb %dl, %dl;je  <FT_Stream_OpenLZW+>": 2,
                "jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp,%edx,);movl -(%ebp,%edx,), %edi;testl %edi, %edi;je  <FT_Stream_OpenLZW+>": 2,
                "addl $, %edx;cmpl $, %edx;jne - <FT_Stream_OpenLZW+>;testl %esi, %esi;jne  <FT_Stream_OpenLZW+>": 1,
                "movw $, %si;leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl -(%ebp), %ecx": 1,
                "addl $, %esi;movl %ebx, (%esp);movl %eax, (%esp);movl %esi, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl (%eax), %eax;movl %eax, (%esp);movl -(%ebp), %ecx": 1,
                "movw $, -(%ebp);movl $, %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "movl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax;movl %eax, (%esi);movl $, %edx": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Attach_File+>": 1,
                "jmp - <FT_Stream_OpenLZW+>;movl $, %ecx;movl %ebx, %edx;movl %edi, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl %edi, (%esp);calll - <FT_Stream_OpenGzip>;cmpb $, %al;je  <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "movl $, %ecx;movl %edx, %esi;rep  cmpsb %es:(%edi), (%esi);seta %dl;setb %cl": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll - <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "addl $, %edx;cmpl %edx, %ecx;ja - <FT_Stream_OpenLZW+>;popl %ebx;popl %ebp": 1,
                "jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movzbl (%ecx), %ebx;cmpb $, %bl;je  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, %bl;je  <FT_Stream_OpenLZW+>;addl $, %ecx;cmpl %edx, %ecx;jne - <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);cmpl %edx, %ecx;jae  <FT_Stream_OpenLZW+>;movzbl (%ecx), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;subl $, %eax;cmpb $, %al;ja  <FT_Stream_OpenLZW+>": 1,
                "movl $, %eax;movl %ecx, (%esi);addl $, %esp;popl %ebx;popl %esi": 1,
                "leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;cmpl %edx, %ebx;jbe  <FT_Stream_OpenLZW+>": 1,
                "movzbl (%edx), %eax;leal -(%eax), %ecx;cmpb $, %cl;jbe  <FT_Stream_OpenLZW+>;leal -(%eax), %ecx": 1,
                "movl %edx, -(%ebp);movl $, %eax;movl -(%ebp), %edx;movl %edx, (%esi);jmp  <FT_Stream_OpenLZW+>": 1,
                "jne - <FT_Stream_OpenLZW+>;jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;jmp - <FT_Stream_OpenLZW+>;addl $, %esp": 1,
                "leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "testl %esi, %esi;jne  <FT_Stream_OpenLZW+>;cmpl %eax, %ebx;ja - <FT_Stream_OpenLZW+>;testl %edi, %edi": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx);movl %esi, %eax;addl $, %esp;popl %ebx": 1,
                "calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;cmpl %edx, %esi;jbe  <FT_Stream_OpenLZW+>;movzbl (%edx), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpb $, %al;jne  <FT_Stream_OpenLZW+>;leal (%edx), %eax;cmpl %eax, %esi": 1,
                "jne  <FT_Stream_OpenLZW+>;leal (%edx), %eax;cmpl %eax, %esi;jbe  <FT_Stream_OpenLZW+>;cmpb $, (%edx)": 1,
                "testb %al, %al;je  <FT_Stream_OpenLZW+>;addl $, %edx;jmp  <FT_Stream_OpenLZW+>;movzbl (%edx), %eax": 1,
                "nop;leal (%esi), %esi;je  <FT_Stream_OpenLZW+>;cmpb $, %al;je  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;cmpb $, %al;je  <FT_Stream_OpenLZW+>;movl %edx, -(%ebp);cmpl %edx, %esi": 1,
                "movl $, %eax;movl %eax, (%ebx);movl %edx, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl -(%ebp), %edx;jmp - <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "cmpb $, %dl;jne  <FT_Stream_OpenLZW+>;movl $, (%esi);movl %eax, (%esi);movl %edi, %edx": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>": 2,
                "cmpl %eax, %edi;jbe  <FT_Stream_OpenLZW+>;cmpl $, (%ebx);je - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%eax);leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl -(%ebp), %ebx;jae  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "cmpl -(%ebp), %ebx;jae  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%ebx);addl $, %ebx;movl (%esi), %eax;cmpl %eax, (%esi);jb - <FT_Stream_OpenLZW+>": 1,
                "jb - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %ebx;subl (%ebp), %ebx;sarl $, %ebx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);movl %edx, (%eax);movl (%ebp), %edx;movl %edx, (%eax)": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%edx), %edx;movl (%edx), %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movzwl (%eax), %edx": 1,
                "movl %ecx, (%eax);movl (%ebx), %ecx;movl %ecx, (%eax);testl %edx, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "addl (%eax), %ecx;cmpl %ecx, %edx;jae  <FT_Stream_OpenLZW+>;movl (%eax), %ebx;movzwl (%ebx,%edx,), %eax": 1,
                "addl $, %edx;cmpl %ecx, %edx;jb - <FT_Stream_OpenLZW+>;movl $, %edx;jmp  <FT_Stream_OpenLZW+>": 1,
                "calll *(%ecx);addl $, %esp;popl %ebx;popl %ebp;retl": 1,
                "cmpl %ebx, %ecx;jae  <FT_Stream_OpenLZW+>;movzbl (%ecx), %eax;addl $, %ecx;movl %ecx, (%edx)": 1,
                "addl $, %edx;movl %edx, (%ebx);cmpl $, %ecx;je  <FT_Stream_OpenLZW+>;cmpl $, %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl $, %ecx;jne - <FT_Stream_OpenLZW+>;movl $, (%ebx);subl $, %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;movl $, (%ebx);movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "jg  <FT_Stream_OpenLZW+>;cmpl $, %eax;jg - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %ebx, %eax": 1,
                "jle - <FT_Stream_OpenLZW+>;movl $, (%ebx);movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "notl %edx;addl (%ebx), %edx;movl %edx, (%esi);jmp  <FT_Stream_OpenLZW+>;testl %esi, %esi": 1,
                "jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;movl $, %edx;testl %esi, %esi": 1,
                "movl %eax, -(%ebp);movl %edx, %esi;movl (%eax), %ebx;movl $, %eax;cmpl %edx, %ebx": 1,
                "movl $, %eax;cmpl %edx, %ebx;jae  <FT_Stream_OpenLZW+>;leal -(%ecx), %edx;movl $, %eax": 1,
                "testb %dl, %dl;js  <FT_Stream_OpenLZW+>;movsbl %dl, %edi;cmpl %edi, %ecx;jle  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %ebx;movl %ebx, (%esp);calll - <FT_Stream_OpenLZW+>;movl (%ebx), %edx;movl %ebx, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;testl %edx, %edx;je  <FT_Stream_OpenLZW+>;cmpl $, %edx;nop": 1,
                "addl $, %eax;cmpl %edi, %eax;jne - <FT_Stream_OpenLZW+>;movl %ebx, %ecx;movl -(%ebp), %ebx": 1,
                "je  <FT_Stream_OpenLZW+>;shll $, %ecx;movl (%ebp), %edx;movl -(%ebp), %edi;movb %cl, (%edx,%edi)": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <FT_Stream_OpenLZW+>;movzwl %dx, %edx;movl %ecx, %eax": 1,
                "addl $, %ebx;cmpl $, %ebx;ja  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "jne  <FT_Stream_OpenLZW+>;addl $, %ebx;cmpl $, %ebx;jne - <FT_Stream_OpenLZW+>;movw $, %bx": 1,
                "movl (,%ebx,), %eax;movzbl -(%ebp), %edx;cmpb %dl, (%eax);jne  <FT_Stream_OpenLZW+>;cmpl $, %ebx": 1,
                "cmpb (%eax), %dl;jne  <FT_Stream_OpenLZW+>;movl %esi, (%esp);movl %edi, (%esp);movl %eax, (%esp)": 1,
                "movl %eax, -(%ebp);movl $, %ebx;cmpl -(%ebp), %eax;jae  <FT_Stream_OpenLZW+>;movl %ecx, %edi": 1,
                "movb $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movb $, -(%ebp);movl $, %ebx;movl -(%ebp), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movzbl (%eax), %edx;cmpb $, %dl;je  <FT_Stream_OpenLZW+>;cmpb $, %dl": 1,
                "je  <FT_Stream_OpenLZW+>;addl $, %eax;testb %dl, %dl;js  <FT_Stream_OpenLZW+>;andl $, %edx": 1,
                "movzbl (%edx), %edx;cmpb $, %dl;ja  <FT_Stream_OpenLZW+>;cmpl $, %esi;jg  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %ebx;jle  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpl $, %ecx;jg  <FT_Stream_OpenLZW+>": 1,
                "sarl $, %ebx;subl %ebx, %ecx;movl %ecx, %ebx;cmpl $, %edi;jg  <FT_Stream_OpenLZW+>": 1,
                "subl %esi, %edx;movl %edx, %esi;orl %esi, %ecx;je  <FT_Stream_OpenLZW+>;addl $, -(%ebp)": 1,
                "movl $, %ebx;cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;negl %ebx;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, %ebx;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %edx, (%eax);orl %ebx, %esi": 1,
                "movl -(%ebp), %eax;movl %edx, (%eax);orl %ebx, %esi;movl $, %ebx;testl %esi, %esi": 1,
                "movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl $, %eax;cmpl $, %ecx": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl -(%ebp), %edx;testl %edx, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %esi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, %eax;cmpl $, %esi;jne  <FT_Stream_OpenLZW+>;movl $, %edi": 1,
                "setb %al;cmpb %al, %dl;sete %al;movzbl %al, %eax;movb %al, (%ebx)": 1,
                "jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "pushl %ebx;subl $, %esp;movl %edx, %ebx;movl $, -(%ebp);movl $, %ecx": 1,
                "calll - <FT_Stream_OpenLZW+>;cmpl $, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%ebx)": 5,
                "movl %ebx, %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %eax, (%edx);cmpl -(%ebp), %esi": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movl (%edx), %ebx;movl (%edx), %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edi;movl (%ebp), %esi;movl %esi, (%ebx);leal -(%ebp), %eax": 1,
                "movl $, -(%ebp);movl $, %edi;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;leal -(%ebp), %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;nop;calll - <FT_Stream_OpenLZW+>;cmpl $, %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%esi), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 2,
                "cmpl $, %eax;ja  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpl $, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl $, %edi;jmp  <FT_Stream_OpenLZW+>;leal -(%ebp), %ecx;movl $, %edx;movl %edi, %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl $, %edi": 2,
                "movl -(%ebp), %edx;calll - <FT_Stream_OpenLZW+>;movl %eax, %esi;leal -(%eax), %eax;cmpl $, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %edx, (%ebx)": 1,
                "movl %eax, (%esi);movl $, (%esp);movl $, (%esp);movl %eax, (%esp);movl (%esi), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %edi;leal -(%ebp), %ecx;movl $, %edx;movl %edi, %eax": 1,
                "movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "jmp - <FT_Stream_OpenLZW+>;movl $, %edi;jmp  <FT_Stream_OpenLZW+>;movl $, %edi;jmp - <FT_Stream_OpenLZW+>": 1,
                "jbe  <FT_Stream_OpenLZW+>;movl (%esi), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;subl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);calll  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);movl %edx, (%esp);calll  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %esi, %eax": 1,
                "movl %edx, (%esp);calll  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "calll  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "js  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;addl (%esi), %edx;movl %edx, (%ebp);movl (%esi), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%ebx);movl %esi, (%esp);movl %edi, (%esp);calll - <FT_Angle_Diff+>": 1,
                "movl %edi, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl (%ebx), %edx;leal (%edx,%eax,), %edi;movl (%ebx), %esi;addl %eax, %esi;movl (%ebp), %eax": 1,
                "notl %eax;addl $, %eax;movb %al, (%esi);addw $, (%ebx);movl -(%ebp), %ebx": 1,
                "pushl %ebx;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "movl %ebx, (%ecx);movl %esi, (%ecx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);ja  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);ja  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;jmpl *(,%ecx,)": 1,
                "jne  <FT_Stream_OpenLZW+>;addl $, %edx;movl $, %eax;jmp  <FT_Stream_OpenLZW+>;leal (%edx), %ecx": 1,
                "addl $, %edx;movl %edx, -(%ebp);movzbl %al, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %ecx": 1,
                "movl -(%ebp), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl (%ebp), %ecx;movzbl (%ecx), %edx;cmpb $, %dl;je  <FT_Stream_OpenLZW+>;cmpb $, %dl": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Angle_Diff+>;movl $, (%ebx);leal -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax": 1,
                "jns  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <FT_RoundFix>;movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_RoundFix>": 3,
                "calll - <FT_RoundFix>;movl %eax, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movl (%edx), %edx": 1,
                "movl $, -(%ebp);movl (%ebp), %ecx;shll $, %ecx;movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "leal (%edx,%edx,), %eax;shll $, %eax;movl %eax, -(%ebp);jmp - <FT_Stream_OpenLZW+>;addl $, %esp": 1,
                "movl -(%ebp), %edx;movl $, %eax;testl %edx, %edx;js  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 1,
                "cmpl %eax, %edx;jbe  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, -(%ebp);cmpl $, (%ebx);je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%ebp), %edx": 1,
                "leal -(%ebp), %edi;movl (%ebx), %eax;movl %eax, (%esi);movl (%ebx), %eax;movl %eax, (%esi)": 1,
                "jg - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %edx;movl %edx, (%esi)": 1,
                "movzwl (%ebx), %eax;testw %ax, %ax;jle  <FT_Stream_OpenLZW+>;cwtl;movl (%ebx), %edx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %edi;movl %ebx, (%edi);movl $, (%edi);movl (%edi), %ebx": 1,
                "movl %edi, (%ebx);movl (%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %edi;movl (%edi), %ebx": 1,
                "leal (%esi), %esi;jmp  <FT_Stream_OpenLZW+>;cmpb $, %al;je  <FT_Stream_OpenLZW+>;cmpb $, %al": 2,
                "cmpb $, %al;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpb $, %al;leal (%esi), %esi": 1,
                "je  <FT_Stream_OpenLZW+>;cmpb $-, %al;jne  <FT_Stream_OpenLZW+>;nop;jmp  <FT_Stream_OpenLZW+>": 1,
                "shll $, %edi;movzbl (%eax), %eax;shll $, %eax;orl %eax, %edi;movl -(%ebp), %ecx": 1,
                "movzbl (%eax), %eax;shll $, %eax;orl %eax, %edi;movl -(%ebp), %ecx;movzbl (%ecx), %eax": 1,
                "movzbl (%ecx), %eax;shll $, %eax;orl %eax, %edi;movl %edi, %eax;leal (%edi), %ecx": 1,
                "cmpb $-, %al;ja  <FT_Stream_OpenLZW+>;movzbl %al, %eax;subl $, %eax;shll $, %eax": 1,
                "movl $, %eax;movl $, -(%ebp);cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpl $, %ecx": 1,
                "movl %eax, (%ebx);addl $, %ebx;movl (%ebp), %eax;movl %ebx, (%eax);jmp  <FT_Stream_OpenLZW+>": 1,
                "movswl %ax, %edi;movl %edi, -(%ebp);movzwl -(%ebx), %ebx;movswl %bx, %edi;movl %edi, -(%ebp)": 1,
                "movswl %bx, %edi;movl %edi, -(%ebp);movl %ecx, %edi;subl %edx, %edi;sarl $, %edi": 1,
                "jne  <FT_Stream_OpenLZW+>;cmpl $, (%esi);je  <FT_Stream_OpenLZW+>;movl (%esi), %eax;leal (%eax), %edx": 1,
                "movl %eax, (%esp);movl -(%ebp), %edi;movl %edi, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "movl -(%ebp), %edi;movl %edi, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %edi": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%esi), %esi;movl %esi, -(%ebp);testl %esi, %esi": 1,
                "movl %esi, -(%ebp);testl %esi, %esi;je  <FT_Stream_OpenLZW+>;cwtl;cmpl $, -(%ebp)": 1,
                "cwtl;cmpl $, -(%ebp);sete %dl;movzbl %dl, %edx;leal -(%eax,%edx), %edx": 1,
                "movl -(%ebp), %ebx;movl (%ebx,%edi,), %edi;movl %edi, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %ebx": 1,
                "movl (%ebx,%edi,), %edi;movl %edi, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebx), %ebx;movl %ebx, -(%ebp);cmpl $, %ebx;jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edi;movl -(%ebp), %ebx;movl %eax, (%ebx,%edi,);addl $, %edi": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl (%ebx), %eax": 2,
                "movl (%edi), %eax;subl %eax, (%edi);movl $, -(%ebp);movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%edi);movl $, -(%ebp);movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 2,
                "jne  <FT_Stream_OpenLZW+>;cmpl $, (%esi);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movzwl (%ebx), %eax": 1,
                "shll $, %edx;addl %edx, %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %edx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "subl %eax, %edi;cmpl $, %ecx;ja  <FT_Stream_OpenLZW+>;jmpl *(,%ecx,);movl -(%ebp), %ebx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "movl %eax, (%ebx);movl $, (%ebx);movl (%ebx), %eax;addl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "movl $, (%ebx);movl (%ebx), %eax;addl (%edi), %eax;movl %eax, -(%ebp);movl (%ebx), %ebx": 1,
                "movl (%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx;cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%edi), %edx;movl (%edi), %ebx;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %edi": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %edi;movl (%esi), %eax;movl $, -(%ebp)": 1,
                "movl %edx, -(%ebp);cmpl $, (%esi);jne  <FT_Stream_OpenLZW+>;movl (%eax), %eax;cmpl $, (%eax)": 1,
                "movl %ebx, (%esi);movl -(%ebp), %edi;movl %edi, (%esi);movl -(%ebp), %ebx;movl %ebx, (%esi)": 1,
                "movl (%edi), %eax;movl %eax, (%ebx);movl (%edi), %eax;movl %eax, (%ebx);movl (%ebx), %eax": 1,
                "movl (%ebx), %ebx;movl %ebx, %eax;subl $, %eax;cmpl $, %eax;ja  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %eax;ja  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, (%esp);calll - <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%edi), %eax;addl %eax, -(%ebp)": 3,
                "movl -(%ebp), %ebx;addl (%edi), %ebx;movl $, (%esp);movl %ebx, (%esp);movl %esi, (%esp)": 2,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Stream_OpenLZW+>;addl (%edi), %ebx;movl %ebx, -(%ebp)": 2,
                "calll - <FT_Stream_OpenLZW+>;addl (%edi), %ebx;movl %ebx, -(%ebp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %ebx": 3,
                "movl (%edi), %eax;addl %eax, -(%ebp);movl (%edi), %edx;addl %edx, -(%ebp);cmpl $, (%esi)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;addl (%edi), %esi;movl -(%ebp), %ebx;addl (%edi), %ebx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <FT_Stream_OpenLZW+>;addl (%edi), %esi;addl (%edi), %ebx": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl %esi, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "movl %ebx, (%esp);calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;addl (%edi), %ebx;addl (%edi), %esi": 1,
                "movl (%edi), %eax;movl %eax, (%esp);calll - <FT_DivFix>;movl %eax, (%edi);addl $, %edi": 1,
                "movswl %dx, %eax;testl %eax, %eax;js  <FT_Stream_OpenLZW+>;cmpl (%esi), %eax;jge  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %eax;jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl -(%ebp), %ebx;movl %eax, (%ebx)": 1,
                "jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl -(%ebp), %ebx;movl %eax, (%ebx);movl %ebx, %esi": 1,
                "movl %eax, (%ebx);movl %ebx, %esi;addl $, %esi;movl (%ebp), %eax;movswl %dx, %edx": 1,
                "sarl $, %ebx;notl %ebx;andl (%eax), %ebx;addl %ebx, %ecx;movl -(%ebp), %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;leal (%esi), %eax;cmpl %eax, -(%ebp);jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl -(%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx;movl -(%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "calll *(%ebx);jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx": 2,
                "jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;addl %ebx, (%edi)": 2,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, %ecx": 1,
                "movl %edx, -(%ebp);movl $, %eax;cmpl $, -(%ebp);jle - <FT_Stream_OpenLZW+>;jmp - <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %eax;movl (%ebp), %esi;movzbl (%ebp), %edi;movl $, (%ebx);movb $, (%ebx)": 1,
                "movl (%ebp), %esi;movzbl (%ebp), %edi;movl $, (%ebx);movb $, (%ebx);movl %eax, (%ebx)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl $, %edx;movl %edx, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "leal (%ebx,%edx), %eax;sarl %eax;movzbl (%eax,%eax), %ecx;shll $, %ecx;movzbl (%eax,%eax), %edi": 1,
                "cmpl %esi, %ecx;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movzbl %bl, %ebx;leal (%edx,%ebx,), %ebx;jmp  <FT_Stream_OpenLZW+>;movzbl (%ecx), %edx;shll $, %edx": 1,
                "andl $, %edx;cmpl %eax, %edx;je - <FT_Stream_OpenLZW+>;cmpl %ebx, %ecx;jne - <FT_Stream_OpenLZW+>": 1,
                "addl $, %esi;subl $, -(%ebp);jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %ebx, %edx;cmpb $, %cl;jne  <FT_Stream_OpenLZW+>;cmpl %edx, %ebx": 1,
                "addl $, %edx;movzbl (%edx), %ecx;testb %cl, %cl;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 2,
                "movl (%ebp), %eax;movl (%eax), %esi;movl %esi, %ecx;andl $, %ecx;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %ebx;movl %ebx, %edx;andl $, %edx;cmpl %edx, %ecx": 1,
                "andl $, %edx;cmpl %edx, %ecx;jne  <FT_Stream_OpenLZW+>;movl $, %eax;cmpl %ebx, %esi": 1,
                "sbbl %eax, %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;cmpl %edx, %ecx;ja  <FT_Stream_OpenLZW+>": 1,
                "pushl %ebx;movl (%ebp), %edx;movl (%ebp), %ecx;movl (%edx), %eax;movl (%edx), %edx": 1,
                "leal (%eax,%ebx,), %ebx;movl (%ebx), %esi;cmpl %ecx, %esi;je  <FT_Stream_OpenLZW+>;movl $, %edi": 1,
                "cmpl %ecx, %esi;je  <FT_Stream_OpenLZW+>;cmpl %edx, %eax;je  <FT_Stream_OpenLZW+>;cmpl %esi, %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %esi, %ecx;subl %eax, %ecx;shrl %ecx;addl %eax, %ecx": 1,
                "movl %ecx, %esi;jmp  <FT_Stream_OpenLZW+>;cmpl %edx, %ebx;jbe  <FT_Stream_OpenLZW+>;leal (%ecx), %eax": 1,
                "movl %ecx, %esi;cmpl %eax, %esi;ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;testl %edx, %edx": 1,
                "movl -(%ebp), %edx;leal (%edx,%eax,), %eax;movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %ebx": 1,
                "movl %edx, -(%ebp);movl (%eax), %ebx;andl $, %ebx;jmp  <FT_Stream_OpenLZW+>;movl $, %ebx": 1,
                "andl $, %ebx;jmp  <FT_Stream_OpenLZW+>;movl $, %ebx;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;calll *%edx;movl %eax, %esi;testl %eax, %eax": 1,
                "movl %esi, (%esp);movl (,%ebx,), %eax;addl $, %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, %edx;movl $, -(%ebp,%edx,);jmp  <FT_Stream_OpenLZW+>;addl $, %edx": 1,
                "movl $, %edx;movl $, -(%ebp,%edx,);jmp  <FT_Stream_OpenLZW+>;addl $, %edx;cmpl $, %edx": 1,
                "movl (%ebp), %edx;calll *%edx;addl $, %edi;cmpl (%ebp), %edi;jne - <FT_Stream_OpenLZW+>": 1,
                "subl %eax, %ebx;sarl $, %ebx;testl %ebx, %ebx;jne  <FT_Stream_OpenLZW+>;movl %eax, (%esp)": 1,
                "movl %ebx, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "movl (%edx), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "cmpl (%eax), %edx;jae  <FT_Stream_OpenLZW+>;pushl %ebp;movl %esp, %ebp;pushl %ebx": 1,
                "sarl $, %ecx;movl (%eax), %eax;movzbl (%eax,%ecx), %ebx;movl %edx, %ecx;andl $, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;movl %eax, %ebx;leal -(%edx), %eax": 1,
                "movl $, (%ebx);movl %edx, (%ebx);leal (%ebx), %eax;calll - <FT_Stream_OpenLZW+>;leal (%ebx), %eax": 1,
                "movl -(%ebp), %edx;movb $, -(%ebp);movb $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movswl (%edi), %ebx": 1,
                "nop;jne  <FT_Stream_OpenLZW+>;movl (%ecx), %eax;cmpl $, -(%ebp);jns  <FT_Stream_OpenLZW+>": 1,
                "jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%eax), %ecx;movl %ecx, (%eax);movl -(%eax), %ecx": 1,
                "movl -(%eax), %ecx;movl %ecx, (%eax);movl -(%eax), %ecx;movl %ecx, (%eax);subl $, %eax": 1,
                "movl %ecx, (%eax);subl $, %eax;subl $, %edx;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "cmpl $, %esi;ja - <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "cmpl (%eax), %ecx;jge  <FT_Stream_OpenLZW+>;movl %ecx, (%eax);movl (%eax), %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl (%eax), %ecx;movl %ecx, (%eax);addl (%eax), %ecx;movl %ecx, (%eax)": 2,
                "addl $, %ecx;movl (%ebx,%ecx), %edi;movl %edi, %esi;subl %edx, %esi;cmpl -(%ebp), %esi": 1,
                "jmp  <FT_Stream_OpenLZW+>;addl (%ebp), %edx;movl %edx, (%eax);subl (%ebp), %edi;movl %edi, (%ebx,%ecx)": 1,
                "subl (%ebp), %edi;movl %edi, (%ebx,%ecx);addl $, %eax;movl (%eax), %edx;subl $, -(%ebp)": 1,
                "addl $, %eax;movl (%eax), %edx;subl $, -(%ebp);jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %esi;movl (%ebp), %eax;movl (%ebp), %edx;movl (%ebp), %edi;cmpl %eax, (%esi)": 1,
                "calll - <FT_Stream_OpenLZW+>;movl (%ebp), %edx;cmpl %edx, (%esi);jne  <FT_Stream_OpenLZW+>;cmpl %edi, (%esi)": 1,
                "movl %edi, (%esi);movl $, %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;leal (%esi), %eax": 1,
                "movl $, %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "jle  <FT_Stream_OpenLZW+>;movl (%esi), %ecx;shll $, %ecx;movl $, %edx;movl %ecx, %eax": 1,
                "addl %edx, %eax;cmpl $, %eax;jle  <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);movl (%ebp), %esi": 1,
                "cmpl $, -(%ebp);jb  <FT_Stream_OpenLZW+>;addl $, %eax;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%edx);movl (%ebx), %eax;movl %eax, (%edx);jmp  <FT_Stream_OpenLZW+>;addl $, %ebx": 1,
                "movl (%ebx), %eax;movl %eax, (%edx);jmp  <FT_Stream_OpenLZW+>;addl $, %ebx;subl $, %esi": 1,
                "jne - <FT_Stream_OpenLZW+>;addl $, -(%ebp);cmpl $, -(%ebp);jne - <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl (%edx), %esi;cmpl %esi, %eax;jl  <FT_Stream_OpenLZW+>;addl (%edx), %esi;cmpl %esi, -(%ebp)": 1,
                "movl %edi, (%ecx,%edx,);addl $, %edx;movl %edx, (%eax);jmp  <FT_Stream_OpenLZW+>;addl $, %ecx": 1,
                "popl %edi;popl %ebp;rep  retl;pushl %ebp;movl %esp, %ebp": 1,
                "movl $, -(%ebp);movl $, %edx;movl %eax, -(%ebp);testl %edx, %edx;jne  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);addl $, %ebx;movb $-, %dl;testl %edx, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, (%eax,%edi,);addl $, %edi;movl %edi, -(%ebp);sarl %edx;addl $, %ecx": 1,
                "js  <FT_Stream_OpenLZW+>;movl (%esi), %ecx;movl (%ebx), %edi;cmpl %edi, (%ecx);jl  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);imull %edx;movl %edx, %ecx;sarl $, %ecx;addl $, %ecx": 1,
                "shll $, %edx;addl %edx, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%edi);orl $, %ebx;movl %ebx, (%edi);jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, (%edx);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;addl %esi, %eax;movl -(%ebp), %edx;movzbl (%edx), %edx;movl %edx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);cmpl %ebx, %esi;jl  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "cmpl %esi, %eax;jg  <FT_Stream_OpenLZW+>;movl %ebx, -(%ebp);movl -(%ebp), %edi;cmpl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %ecx;movl (%ecx), %edx;leal -(%edx), %eax": 1,
                "leal (%ecx,%eax), %eax;testl %edx, %edx;je  <FT_Stream_OpenLZW+>;movl (%eax), %ecx;subl -(%ebp), %ecx": 1,
                "cmpl %edi, %ebx;jl  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 2,
                "movl %eax, (%edi);jmp  <FT_Stream_OpenLZW+>;movl %edx, (%edi);jmp  <FT_Stream_OpenLZW+>;movl %edx, (%edi)": 1,
                "movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;movl (%edi), %eax;sarl %eax;addl (%edi), %eax": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jle  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, %ecx;subl -(%ebp), %ecx;movl %ebx, %edx;subl %eax, %edx;movl %ecx, %eax": 1,
                "movl %edx, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;andl $-, %eax": 1,
                "movl -(%ebp), %eax;addl $, %eax;andl $-, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "xorl %eax, %ecx;subl %edx, %ecx;movl %esi, %edx;sarl $, %edx;movl %edx, %ebx": 1,
                "subl %edx, %ecx;movl %esi, %edx;sarl $, %edx;movl %edx, %ebx;xorl %esi, %ebx": 1,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%edi), %ecx;movl (%edi), %edx;movl $, %eax": 1,
                "sarl %edx;addl %ecx, %edx;andl $-, %edx;addl $, %edx;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, %eax;cmpl %ebx, %ecx;jle  <FT_Stream_OpenLZW+>;movl %edx, %eax;sarl $, %eax": 1,
                "movl %esi, (%ecx);movl (%ebx), %esi;movl %esi, (%ecx);jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %esi": 1,
                "addl $, %ecx;addl $, %ebx;subl $, %eax;jne - <FT_Stream_OpenLZW+>;popl %ebx": 1,
                "movl %eax, (%edx);movl %edi, (%edx);jmp  <FT_Stream_OpenLZW+>;addl $, %ecx;cmpl -(%ebp), %ecx": 1,
                "movl -(%ebp), %edx;movl %esi, (%edx);jmp  <FT_Stream_OpenLZW+>;addl $, %ecx;cmpl %edi, %ecx": 1,
                "leal (%esi), %esi;jmp - <FT_Stream_OpenLZW+>;testb $, -(%ebp);jne - <FT_Stream_OpenLZW+>;nop": 1,
                "testl %esi, %esi;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl %eax, (%esp);movl %edi, (%esp)": 2,
                "movl %edi, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax)": 1,
                "movl (%eax), %edx;movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %ebx;movl %edx, %esi;movl (%eax), %eax": 1,
                "movl $, (%esi);movl $, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);leal (%esi), %eax": 1,
                "subl $, %esp;movl (%ebp), %edi;movl (%ebp), %ebx;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%ecx);addl $, %ecx;addl $, %edx;subl $, %eax;jne - <FT_Stream_OpenLZW+>": 2,
                "movl -(%ebp), %ecx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;movl $, %ecx": 1,
                "movl %edi, %edx;calll - <FT_Stream_OpenLZW+>;cwtl;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl %eax, %ebx;movl %ecx, -(%ebp);movl (%eax), %esi": 1,
                "calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl %eax, (%ebx);movl -(%ebp), %ebx": 3,
                "addl $, %eax;shrl $, %eax;addl $, %edx;shrl $, %edx;movl $, -(%ebp)": 1,
                "cmpl (%eax), %edx;jb  <FT_Stream_OpenLZW+>;leal (%edx), %edi;movl %edi, %edx;calll - <FT_Stream_OpenLZW+>": 1,
                "jb  <FT_Stream_OpenLZW+>;leal (%edx), %edi;movl %edi, %edx;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl $, -(%ebp);cmpl $, (%ebp)": 1,
                "cmpl %ecx, (%eax);je  <FT_Stream_OpenLZW+>;addl $, %ebx;addl $, %eax;cmpl %esi, %ebx": 1,
                "addl $, %eax;cmpl %esi, %ebx;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpl %ebx, %esi": 1,
                "jb  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jbe  <FT_Stream_OpenLZW+>;leal (%esi), %ecx;andl $-, %ecx": 1,
                "movl %ecx, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %edx;movl %eax, (%edx);movl -(%ebp), %eax": 1,
                "movl (%ecx), %eax;leal (%eax,%edx,), %eax;movl -(%ebp), %edx;movl %edx, (%ecx);movl %edi, (%eax)": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %edi;movl (%ebp), %ebx;cmpl $, (%eax)": 1,
                "setne %dl;movzbl %dl, %edx;movl (%edi), %eax;subl $, %eax;cmpl $, %eax": 1,
                "movl %esi, %edx;shrl $, %edx;addl %edx, %edi;movl %esi, %ecx;andl $, %ecx": 1,
                "testl %ecx, %edi;je  <FT_Stream_OpenLZW+>;orl %edx, %eax;movb %al, (%ebx);sarl %ecx": 1,
                "movl $, %edx;subl $, (%ebp);jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl -(%ebp), %ebx": 1,
                "movl (%ebx), %esi;movl (%ebx), %edi;leal (%edi,%esi), %eax;cmpl (%ebp), %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebx), %edi;leal (%edi,%esi), %eax;cmpl (%ebp), %eax;jne  <FT_Stream_OpenLZW+>;leal (%ebx), %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;leal (%ebx), %eax;movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 2,
                "leal (%ebx), %eax;movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl %edi, (%esp)": 1,
                "jne  <FT_Stream_OpenLZW+>;leal (%ebx), %eax;movl %edi, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl -(%ebp), %edx;movl %eax, (%edx)": 3,
                "movl $, (%edx);movl (%edx), %edx;movl (%edi), %eax;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>": 1,
                "subl $, %ebx;jne - <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;movl %edx, (%eax);cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%eax), %edi;movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%ecx), %esi;movl (%ecx), %eax;movl %eax, -(%ebp);testl %esi, %esi;je  <FT_Stream_OpenLZW+>": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;addl $, %ebx;movl %ebx, -(%ebp);subl $, %esi": 1,
                "addl $, %eax;leal -(%ebp), %ecx;movl -(%ebp), %edx;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax": 2,
                "movl $, %ecx;movl (%ebp), %edx;movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>;addl $, %esp": 1,
                "testl %eax, %eax;jle  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);movl $, %edi;movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp,%eax,);addl $, %eax;cmpl %esi, %eax;jl - <FT_Stream_OpenLZW+>;leal -(%ebp), %eax": 1,
                "jle  <FT_Stream_OpenLZW+>;addl $, %eax;shll $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl (%ebx), %ebx;movl %ebx, -(%ebp);movl %ebx, %eax;addl -(%ebp), %eax;movl (%eax), %ebx": 1,
                "movl -(%ebp), %edi;movl (%esi), %eax;movl -(%esi), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;cmpl %edx, %ecx;jbe  <FT_Stream_OpenLZW+>;movl %edx, -(%ebp);cmpl $, -(%ebp)": 1,
                "cmpl %edx, %ecx;jbe  <FT_Stream_OpenLZW+>;movl %edx, -(%ebp);cmpl $, -(%ebp);jbe  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;andb (%edx), %al;movzbl %al, %eax;testl %eax, %ecx;je  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %edi, %eax;cmpl -(%ebp), %eax;nop;jg  <FT_Stream_OpenLZW+>": 1,
                "cmpl %edi, %esi;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl (%ebx), %edx;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ebx;movl %ebx, -(%ebp);testl %ebx, %ebx;jg - <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl %esi, (%ebx);testl %esi, %esi;jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;leal -(%ecx,%ecx,), %eax": 1,
                "movl %ebx, (%edi);cmpl $, %esi;jle  <FT_Stream_OpenLZW+>;movl %edi, %ecx;leal (%ecx), %eax": 1,
                "movl (%eax), %esi;subl (%edi), %esi;movl %esi, %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "movl %esi, (%esp);movl -(%ebp), %esi;movl %esi, (%esp);calll - <FT_Matrix_Invert+>;testl %eax, %eax": 1,
                "addl $, %edi;movl -(%ebp), %esi;cmpl -(%ebp), %esi;jb - <FT_Stream_OpenLZW+>;movl (%ebp), %ebx": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edi;leal (%eax,%edi,), %eax": 1,
                "leal (%eax,%edi,), %eax;cmpl $, (%eax);jbe  <FT_Stream_OpenLZW+>;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl %eax, %esi;movl (%esi), %esi;cmpl %esi, %eax": 1,
                "movl -(%ebp), %edi;movl %esi, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl %ebx, %edi;movl (%edi), %ebx": 1,
                "movl %eax, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp)": 1,
                "cmpl %esi, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl (%esi), %eax;subl (%ebx), %eax": 1,
                "movl (%ecx), %ecx;cmpl %ecx, %edx;jne - <FT_Stream_OpenLZW+>;orl $, (%edx);cmpl $, -(%ebp)": 1,
                "jb - <FT_Stream_OpenLZW+>;movl (%ebp), %ecx;addl $, %ecx;movl (%ebp), %edx;addl $, %edx": 1,
                "movl %esi, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp);leal -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;movl (%eax), %edi;movl %edi, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "shrl $, %eax;shll $, %edx;addl %edx, %eax;movl %eax, %ebx;leal (%eax), %esi": 1,
                "andl $-, %esi;cmpl %eax, %esi;je  <FT_Stream_OpenLZW+>;testl %esi, %esi;je  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);addl $, %edx;movl %edx, -(%ebp)": 1,
                "cmpl $, (%edi,%esi,);je  <FT_Stream_OpenLZW+>;movl %eax, %esi;movl (%esi), %esi;cmpl %esi, %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl -(%ebp), %ecx;jge  <FT_Stream_OpenLZW+>;orl $, (%edx);movl (%edx), %edx": 1,
                "movl (%edx), %edx;cmpl %edx, %esi;jne - <FT_Stream_OpenLZW+>;movl (%esi), %esi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %eax;leal (%eax,%edx,), %edx;movl (%edx), %esi;testl $, %esi;je  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;addl $, %esi;subl $, %ebx": 1,
                "addl $, %esi;subl $, %ebx;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl (%esi), %ebx;cmpl %edx, %ebx;jbe  <FT_Stream_OpenLZW+>;movl %edx, %ebx;movl %ebx, %ecx": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl (%eax), %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "movl %esi, %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %edx;movzbl (%edx), %eax;cmpb $-, %al;je  <FT_Stream_OpenLZW+>;cmpb $, %al": 1,
                "jge  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %edx, %esi;subl (%eax), %esi;movl (%edi), %ebx": 1,
                "cmpl %esi, (%edi);jl  <FT_Stream_OpenLZW+>;movl (%eax), %ebx;movl -(%ebp), %esi;movl %ebx, (%esi)": 1,
                "movl (%eax), %esi;subl %edx, %esi;movl %esi, -(%ebp);movl (%edi), %ebx;movl %ebx, %esi": 1,
                "subl %edx, %esi;movl %esi, -(%ebp);movl (%edi), %ebx;movl %ebx, %esi;negl %esi": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%eax), %esi;subl -(%ebp), %esi;movl (%edi), %ebx;movl %ebx, %ecx": 1,
                "movl (%edi), %eax;testb $, %ah;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl %eax, (%edi)": 1,
                "testb $, %ah;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;addl (%ebx), %eax;movl %eax, (%edi)": 1,
                "movl (%edi), %eax;subl (%ebx), %eax;testl %eax, %eax;jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "subl $, %esi;jne - <FT_Stream_OpenLZW+>;imull $, -(%ebp), %eax;movl -(%ebp), %edx;movl (%edx,%eax), %edx": 1,
                "movl $, (%esp);movl %edx, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %ebx": 1,
                "jmp  <FT_Stream_OpenLZW+>;testb $, (%ecx);je  <FT_Stream_OpenLZW+>;leal (%ebx,%esi,), %eax;cmpl %eax, %ebx": 1,
                "leal (%ebx,%esi,), %eax;cmpl %eax, %ebx;jae  <FT_Stream_OpenLZW+>;movl (%ecx), %edx;movl -(%eax), %edi": 1,
                "cmpl %edx, (%edi);jg  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%ecx), %edx;movl -(%eax), %esi": 1,
                "jg  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%ecx), %edx;movl -(%eax), %esi;cmpl %edx, (%esi)": 1,
                "testb $, %al;jne  <FT_Stream_OpenLZW+>;testb $, %dl;je  <FT_Stream_OpenLZW+>;andl $-, %edx": 1,
                "adcl $, %edx;shrl $, %eax;shll $, %edx;addl %edx, %eax;movl (%ebx), %ecx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;cmpl %ecx, (%eax);jl  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;addl (%ecx), %eax;movl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>;movl (%ebx,%eax,), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%ebx,%eax,), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl (%edx), %ecx": 1,
                "movl $, %edx;movl $, %edi;testb $, (%eax);je  <FT_Stream_OpenLZW+>;testl %edi, %edi": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%edi), %eax;movl -(%ebp), %edx;imull %edx;movl %edx, %ecx": 1,
                "movl (%edi), %eax;subl %ecx, %eax;movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%edi), %edx": 1,
                "cmpl %ebx, -(%ebp);jne - <FT_Stream_OpenLZW+>;addl $, -(%ebp);subl $, -(%ebp);jne - <FT_Stream_OpenLZW+>": 1,
                "jb - <FT_Stream_OpenLZW+>;cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %ebx, %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "movl %edi, -(%ebp);movl %esi, -(%ebp);movl $, %esi;jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "movl (%eax), %ebx;movl $, (%ebx);movl (%eax), %ebx;movl $, (%ebx);movl (%eax), %ebx": 2,
                "movl %esi, (%ebx);movl (%eax), %ebx;movl $, (%ebx);movl (%eax), %ebx;movl $, (%ebx)": 1,
                "movl $, (%ebx);movzbl (%eax), %ebx;movl (%eax), %esi;movl %ebx, (%esi);cmpl $, %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%eax), %ebx;orl $, (%ebx);testb %cl, %cl;je  <FT_Stream_OpenLZW+>": 1,
                "movl (%eax), %edx;movl (%edx), %ecx;testb $, %cl;je  <FT_Stream_OpenLZW+>;orl $, %ecx": 1,
                "movl %ecx, (%edx);jmp  <FT_Stream_OpenLZW+>;orl $, %ecx;movl %ecx, (%edx);movl (%eax), %ecx": 1,
                "movl (%eax), %ecx;movl (%eax), %edx;movl %edx, (%eax);leal (%edx), %ebx;movl %ebx, (%eax)": 1,
                "pushl %edi;pushl %esi;pushl %ebx;movl %eax, %edi;movl (%eax), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%edi), %eax;incl %eax;movl %eax, (%edi);imull $-, %eax, %eax": 1,
                "movl (%eax), %ebx;addl %ebx, %ecx;movl %ecx, %edx;shrl $, %edx;addl %edx, %ecx": 2,
                "addl %edx, %ecx;sarl %ecx;movl %ecx, (%eax);movl %ebx, %edx;addl (%eax), %edx": 2,
                "addl (%eax), %ecx;addl $, %ecx;sarl %ecx;movl %ecx, (%eax);leal (%ebx,%edx), %ebx": 2,
                "movl %edx, (%eax);leal (%ecx,%edx), %edx;sarl %edx;movl %edx, (%eax);popl %ebx": 1,
                "subl $, %esp;movl %eax, %ebx;movl %ecx, -(%ebp);movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "movl (%eax), %esi;movl %esi, -(%ebp);shll $, %edx;movl %edx, -(%ebp);movl %esi, %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%esi), %esi;movl (%ecx), %eax;subl %esi, %eax;movl %ebx, %edx": 1,
                "cltd;idivl %edi;addl %esi, %eax;movl -(%ebp), %esi;movl %eax, (%esi)": 1,
                "movb $, (%eax);movl (%ecx), %eax;movl -(%ebp), %esi;movl %eax, (%esi);addl $, %esi": 1,
                "addl $, %esi;movl %esi, -(%ebp);movl %edi, %ebx;movl -(%ebp), %eax;addl (%eax), %ebx": 1,
                "movl -(%ebp), %eax;addl (%eax), %ebx;movl %ecx, %esi;subl -(%ebp), %esi;movl %esi, %ecx": 1,
                "movl -(%ebp), %ebx;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %esi, (%ebx)": 1,
                "movl (%ebp), %eax;negl %eax;movl %eax, (%esp);movl (%ebp), %eax;negl %eax": 1,
                "andl %eax, %ecx;cmpl (%ebx), %ecx;setge -(%ebp);testl %edx, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al;jne  <FT_Stream_OpenLZW+>": 1,
                "movl $, %ecx;movl $, %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al": 2,
                "jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %ebx, -(%ebp);movl %esi, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movzbl %bl, %ebx;incl %ebx;movl (%edi), %ecx;cmpl %ecx, %ebx;je  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, %eax;movsbl %al, %edx;movl %edi, %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al": 1,
                "calll - <FT_Stream_OpenLZW+>;testb %al, %al;je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl (%edi), %eax": 1,
                "movl %ecx, (%edx);movl %edx, (%eax);popl %ebx;popl %ebp;retl": 1,
                "pushl %esi;pushl %ebx;movl (%eax), %edx;jmp  <FT_Stream_OpenLZW+>;movl (%edx), %ebx": 1,
                "leal (%edx), %ebx;movl (%edx), %edx;testl %edx, %edx;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movswl (%ecx), %ecx;negl %ecx;imull %edx, %ecx;movl %ecx, (%eax);testl %edx, %edx": 1,
                "js  <FT_Stream_OpenLZW+>;movzwl (%eax), %ebx;cmpl %ebx, %esi;jge  <FT_Stream_OpenLZW+>;movl %esi, %ecx": 1,
                "movl %esi, %ecx;sarl $, %ecx;notl %ecx;andl %esi, %ecx;cmpl %ebx, %edx": 1,
                "shrl $, %ebx;movw %bx, -(%ebp);movswl %bx, %esi;movl %esi, -(%ebp);movl %edx, %ebx": 1,
                "movl %esi, -(%ebp);movl %edx, %ebx;shrl $, %ebx;movw %bx, -(%ebp);movswl %bx, %esi": 1,
                "jge  <FT_Stream_OpenLZW+>;movzwl -(%ebp), %ebx;movw %bx, (%eax);movswl (%eax), %ecx;cmpl %ecx, %esi": 1,
                "leal -(%esi,%ebx), %ecx;andl %edx, %ecx;movl (%ebp), %ebx;andl %edx, %ebx;cmpl %ebx, %ecx": 1,
                "andl %edx, %ebx;cmpl %ebx, %ecx;jle  <FT_Stream_OpenLZW+>;movl (%ebp), %edi;movl (%edi), %edi": 1,
                "cmpl $, %edi;je  <FT_Stream_OpenLZW+>;cmpl $, %edi;jg  <FT_Stream_OpenLZW+>;testl %edi, %edi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edi;cmpl %ecx, (%edi);jne  <FT_Stream_OpenLZW+>;cmpl $, (%edi)": 1,
                "cmpl $, (%edi);jg  <FT_Stream_OpenLZW+>;testb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%ebp), %edi": 1,
                "cmpl %edi, (%ecx);jne  <FT_Stream_OpenLZW+>;testb $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%ebp), %edi": 1,
                "shrl $, %edi;movl -(%ebp), %ecx;addl %edi, %ecx;sarl %ecx;movl %ecx, %edi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movswl (%eax), %edx;addl %edx, (%eax);popl %ebp": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edx;movl (%ebp), %ebx;movl (%ebp), %ecx": 1,
                "cmpl %ecx, %eax;jne  <FT_Stream_OpenLZW+>;movl (%edx), %ebx;movl (%edx), %ecx;sarl %cl, %eax": 1,
                "jge  <FT_Stream_OpenLZW+>;movl (%edx), %edx;movl %esi, %edi;sarw $, %di;movswl %di, %edi": 1,
                "movw %dx, -(%ebp);movl (%eax), %edi;movl %edi, %ebx;negl %ebx;movl (%ebp), %ecx": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl $, %ecx;jg  <FT_Stream_OpenLZW+>;testl %ecx, %ecx;je  <FT_Stream_OpenLZW+>": 1,
                "addl (%eax), %edx;andl %ebx, %edx;jmp  <FT_Stream_OpenLZW+>;movl %esi, %edx;testl %edx, %edx": 1,
                "testb %bl, (%esi);jne  <FT_Stream_OpenLZW+>;movl (%eax), %ebx;movl (%eax), %ecx;sarl %cl, %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl $, (%eax);movl $, (%eax);movl $, (%eax);popl %ebx": 1,
                "calll *(%ecx);movl $, %eax;addl $, %esp;popl %ebx;popl %ebp": 2,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax": 2,
                "movl (%ebp), %edx;movl (%ebp), %eax;movl $, (%eax);movl $, (%eax);movl $, (%eax)": 2,
                "calll - <FT_Outline_Get_CBox>;addl $, %esp;popl %ebx;popl %ebp;retl": 2,
                "movl %eax, (%esp);leal (%ebx), %eax;movl %eax, (%esp);calll - <FT_Outline_Transform>;movl $, %eax": 2,
                "movl (%edx), %eax;movl %eax, (%esp);addl $, %ebx;movl %ebx, (%esp);calll - <FT_Outline_Translate>": 2,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl (%eax), %eax": 2,
                "movl %eax, (%esp);movl (%eax), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>;leave": 2,
                "movl (%edi), %edi;cmpl %edi, (%ebx);je  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %ecx, -(%ebp);subl %eax, %edi;sarl $, %edi;cmpl $, %edi;ja  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%ebx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;orl $, (%eax)": 1,
                "negl %eax;movl %eax, (%esp);movl -(%ebp), %eax;negl %eax;movl %eax, (%esp)": 2,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "movl $, -(%ebp);cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "sarl %cl, %eax;movl %eax, -(%ebp);movl $, %edi;jmp  <FT_Stream_OpenLZW+>;movl (%esi), %ecx": 1,
                "negl %edi;movl -(%ebp), %ecx;movl %ecx, (%esp);movl %edi, (%esp);movl (%esi), %eax": 1,
                "movl %eax, %ecx;negl %ecx;movl %edi, %eax;imull (%esi), %eax;cltd": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp);movl %edi, (%esp);movl %ebx, %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl (%ebx), %edx": 1,
                "movl %eax, %edi;movl %edx, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%edi), %edx;addl $, %eax": 1,
                "imull %eax, %edx;movl %edx, (%edi);movl (%edi), %eax;movl %eax, (%edi);movl $, (%edi)": 1,
                "movl %ebx, -(%ebp);movzwl -(%ebp), %edx;movl (%edi), %eax;movl (%edi), %ecx;movl -(%ebp), %esi": 1,
                "movl %ebx, -(%ebp);leal (%eax,%edx,), %esi;movl (%edi), %ecx;movl (%esi), %ebx;shll %cl, %ebx": 1,
                "shll %cl, %ebx;movl %ebx, %ecx;subl (%edi), %ecx;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;movb (%edx), %dl;movb %dl, -(%ebp);andl $, %edx;cmpl $, %edx": 1,
                "jae  <FT_Stream_OpenLZW+>;addl $, %ebx;incl -(%ebp);movl -(%ebp), %eax;movb (%eax), %al": 1,
                "shll %cl, %esi;subl (%edi), %esi;movl (%ebx), %edx;shll %cl, %edx;movl %edx, %ecx": 1,
                "testb %al, %al;je  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "setne %al;jmp  <FT_Stream_OpenLZW+>;leal (%esi), %eax;cmpl %eax, -(%ebp);jb  <FT_Stream_OpenLZW+>": 1,
                "movl (%edi), %ecx;movl (%edi), %eax;movl (%esi), %edx;shll %cl, %edx;subl %eax, %edx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %edx, -(%ebp);movl -(%ebp), %edx;movl %edx, -(%ebp);movl -(%ebp), %edx": 1,
                "subl %eax, %edx;movl (%esi), %esi;shll %cl, %esi;movl %esi, %ecx;subl %eax, %ecx": 1,
                "movl %esi, %ecx;subl %eax, %ecx;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %ecx, %eax": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl (%edi), %edx;leal -(%edx), %ecx;andl %eax, %ecx": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl (%edi), %ecx;setge %dl;jmp  <FT_Stream_OpenLZW+>;leal -(%eax,%edx), %ecx": 1,
                "jg - <FT_Stream_OpenLZW+>;movl (%edi), %esi;movl (%edi), %ebx;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>": 1,
                "ja  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpw $, %si;jbe  <FT_Stream_OpenLZW+>;movl (%ebx), %edx": 1,
                "subl (%ebx), %edx;incl %edx;movl %edx, (%ebx);movl (%ebx), %eax;leal -(,%eax,), %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;testb %al, %al;jne  <FT_Stream_OpenLZW+>;leal (%edi), %edx;movl -(%ebp), %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;leal (%edi), %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;testb %al, %al": 1,
                "leal (%ecx), %eax;movw %dx, (%edi,%eax,);movw %si, (%edi,%eax,);movl -(%ebp), %eax;decl %eax": 1,
                "movw %ax, (%edi,%ecx,);movl %ebx, (%edi);jmp  <FT_Stream_OpenLZW+>;cmpl $, (%edi);je  <FT_Stream_OpenLZW+>": 1,
                "subl %ecx, %edx;movzwl %dx, %edx;movl %edx, (%eax);movl (%eax), %eax;testl %eax, %eax": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movw %si, -(%ebp)": 1,
                "testl %eax, %eax;jle  <FT_Stream_OpenLZW+>;imull $-, %eax, %ecx;addl (%edi), %ecx;movswl %si, %edx": 1,
                "calll - <FT_Stream_OpenLZW+>;testb $, (%ebx);je  <FT_Stream_OpenLZW+>;movl %ebx, %edx;leal -(%ebp), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl %ebx, %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %ecx;addl (%ecx), %edx;movl (%edx), %edi;movw %di, -(%ebp);decl %eax": 1,
                "jg  <FT_Stream_OpenLZW+>;movl %edx, %ecx;movl %eax, %edx;movl %ecx, %eax;movl -(%ebp), %ebx": 1,
                "movl (%edi), %edi;movl (%esi), %esi;testl %edi, %edi;jne - <FT_Stream_OpenLZW+>;cmpw $, -(%ebp)": 1,
                "movw $, -(%ebp);movl %edi, -(%ebp);movl -(%ebp), %eax;cmpl $, (%eax);jg - <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %ebx;jmp  <FT_Stream_OpenLZW+>;movl %edi, (%esp);calll *(%edi);incl %ebx": 1,
                "je  <FT_Stream_OpenLZW+>;movswl %cx, %ecx;movl %ecx, -(%ebp);movswl %di, %edi;movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movb $, %al;movl -(%ebp), %ecx;cmpl $, (%ecx)": 1,
                "movl -(%ebp), %ecx;cmpl $, (%ecx);je  <FT_Stream_OpenLZW+>;cmpl $, (%ecx);je  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %esi;rep  movsl (%esi), %es:(%edi);movl (%edx), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "andl $, %eax;movl -(%ebp), %edx;movb %al, (%edx);movl $, (%edx);movl $, (%edx)": 1,
                "movb %al, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx)": 1,
                "movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx)": 2,
                "movw %ax, (%edx);movl $, %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %ebx;movl $, (%ebx)": 2,
                "pushl %ebp;movl %esp, %ebp;movl (%eax), %ecx;movzwl (%eax), %eax;shll $, %eax": 1,
                "cmpl %ecx, %eax;ja - <FT_Stream_OpenLZW+>;movl $, %ecx;jmp  <FT_Stream_OpenLZW+>;movl $, %ecx": 1,
                "jbe - <FT_Stream_OpenLZW+>;movl $, %eax;movl $, %edx;movl %edx, (%ebx);popl %ebx": 1,
                "orl %ecx, %edx;andl $, %edx;leal (%edx,%eax), %edx;cmpl %eax, %edx;sete %al": 1,
                "movl $, %eax;testl %edx, %edx;je  <FT_Stream_OpenLZW+>;shll $, %edi;movzbl -(%ebp), %eax": 1,
                "movl %eax, %edi;addl $, %edi;cmpl $, %edi;ja  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movzbl (%eax), %esi;movzbl (%eax), %ecx": 1,
                "shll $, %ecx;movzbl -(%ebp), %esi;orl %ecx, %esi;movzwl %si, %esi;leal (%edx,%edi,), %edx": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edi;leal (%edi,%esi,), %ebx;addl %ebx, %edx;addl %ecx, %edx": 1,
                "movl -(%ebp), %ecx;subl $, %ecx;movl %ecx, -(%ebp);movzbl (%eax), %ebx;shll $, %ebx": 1,
                "movzbl (%edx), %esi;shll $, %esi;movzbl (%edx), %edi;orl %edi, %esi;movzwl %si, %esi": 2,
                "movl (%edi), %esi;movl (%edi), %edx;movl %edx, -(%ebp);cmpl %esi, %ebx;ja  <FT_Stream_OpenLZW+>": 1,
                "cmpl %ebx, %esi;jae - <FT_Stream_OpenLZW+>;movl (%edi), %edx;addl $, %edx;movl %edi, %eax": 1,
                "testl %eax, %eax;js  <FT_Stream_OpenLZW+>;movl (%edi), %eax;cmpl %eax, %ebx;jae - <FT_Stream_OpenLZW+>": 1,
                "movl $, (%edi);movl $, (%edi);addl $, %esp;popl %ebx;popl %esi": 1,
                "movzbl (%ecx), %ebx;shll $, %ebx;movzbl (%ecx), %esi;orl %esi, %ebx;movzwl %bx, %ebx": 1,
                "orl %esi, %ebx;movzwl %bx, %ebx;addl $, %eax;movzbl -(%eax), %esi;shll $, %esi": 1,
                "movl %edx, %ecx;movl -(%ebp), %edi;movzbl (%edx,%edi), %esi;shll $, %esi;movl %esi, -(%ebp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;movl (%edi), %ebx;movl (%ebx), %edi;movl (%ebx), %ebx": 1,
                "testl %esi, %esi;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;subl -(%ebp), %eax;leal (%esi,%eax,), %eax": 1,
                "movl %edx, -(%ebp);movb %cl, -(%ebp);movl (%edx), %ebx;movl %ebx, -(%ebp);movl (%eax), %esi": 1,
                "movswl %dx, %edx;movl %edx, -(%ebp);movl -(%ebp), %edi;addl %eax, %edi;movzbl (%edi), %eax": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;cmpl $, %esi;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "shll $, %eax;movzbl (%edx), %esi;orl %esi, %eax;movzwl %ax, %eax;leal -(%ecx), %esi": 1,
                "movl -(%ebp), %edx;movzbl -(%ebp), %eax;shll $, %eax;movl %eax, %esi;movzbl -(%ebp), %eax": 1,
                "jae  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;leal (%edx,%ecx,), %edi;movzbl (%edi), %eax;movl %eax, %edx": 1,
                "shll $, %edx;movzbl (%edi), %eax;orl %edx, %eax;movzwl %ax, %eax;movl %eax, -(%ebp)": 2,
                "cmpl %eax, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;leal (%esi,%ecx,), %eax;movl -(%ebp), %esi": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %eax;negl %eax;movl %eax, -(%ebp);movl %ecx, %eax": 1,
                "movl -(%ebp), %eax;negl %eax;movl %eax, -(%ebp);movl %ecx, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "movzbl (%edi), %ecx;orl %ecx, %edx;movzwl %dx, %ecx;cmpl $, %ecx;je  <FT_Stream_OpenLZW+>": 1,
                "cmpl %eax, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl %ecx, -(%ebp);movzbl -(%ebp), %ebx;movl %eax, %ecx": 1,
                "movl %ecx, -(%ebp);movzbl -(%ebp), %ebx;movl %eax, %ecx;movl -(%ebp), %esi;jmp  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %ecx, -(%ebp);movzbl -(%ebp), %ebx;movl %eax, %ecx;movl -(%ebp), %esi": 1,
                "movl %eax, %ecx;movl -(%ebp), %esi;movzbl -(%ebp), %edx;shll $, %edx;movzbl %bl, %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %ebx;cmpl %ecx, %ebx": 1,
                "movl %eax, -(%ebp);addl -(%ebp), %edi;movzbl (%edi), %eax;shll $, %eax;movzbl (%edi), %esi": 1,
                "shll $, %eax;movzbl (%edi), %edx;orl %edx, %eax;cwtl;movl %eax, -(%ebp)": 1,
                "movzwl %ax, %esi;jmp  <FT_Stream_OpenLZW+>;movl %ebx, %edx;cmpl %edx, %ecx;jb - <FT_Stream_OpenLZW+>": 1,
                "movl $, %esi;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl $, %esi;movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jae  <FT_Stream_OpenLZW+>;addl $, %ebx;cmpl -(%ebp), %ebx": 1,
                "jae  <FT_Stream_OpenLZW+>;addl $, %ebx;cmpl -(%ebp), %ebx;je  <FT_Stream_OpenLZW+>;movl %ebx, %edx": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %edx;movl %ebx, (%edx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %ebx, (%eax);testl %esi, %esi;je  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%eax), %esi": 1,
                "addl $, %ecx;cmpl -(%ebp), %ecx;je - <FT_Stream_OpenLZW+>;movl %ebx, %ecx;jmp - <FT_Stream_OpenLZW+>": 1,
                "movl $, %esi;jmp - <FT_Stream_OpenLZW+>;movl $, %esi;cmpb $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;movl $, %eax": 1,
                "ja  <FT_Stream_OpenLZW+>;testb $, (%ebx);je  <FT_Stream_OpenLZW+>;movl $, %ecx;movl %esi, %edx": 1,
                "movl %esi, %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpl (%ebx), %edx": 1,
                "movzwl %bx, %ebx;movl $, %eax;cmpl %ecx, %ebx;jbe  <FT_Stream_OpenLZW+>;leal (%edx,%ecx,), %edx": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);addl $, %edx;movzbl (%eax), %edi;movzbl (%eax), %ecx": 1,
                "leal (%ecx), %edx;movzbl (%ecx), %eax;shll $, %eax;movzbl (%ecx), %ecx;orl %ecx, %eax": 2,
                "shll $, %edx;orl %edx, %esi;movzbl (%eax), %edi;shll $, %edi;movzbl (%eax), %edx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "orl %edx, %ecx;movzbl (%eax), %edx;orl %edx, %ecx;movzbl (%eax), %edx;shll $, %edx": 3,
                "leal (%eax), %ebx;orl %edx, %ecx;movl %ecx, -(%ebp);je  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);movl -(%ebp), %eax;addl $, %esp": 1,
                "orl %ecx, %eax;movl %eax, (%edx);movl $, %eax;popl %ebx;popl %ebp": 4,
                "shll $, %eax;orl %eax, %ebx;movzbl (%edx), %eax;orl %eax, %ebx;movzbl (%edx), %eax": 2,
                "shll $, %ebx;orl %ebx, %esi;movzbl (%eax), %ebx;orl %ebx, %esi;movzbl (%eax), %ebx": 1,
                "orl %ebx, %esi;movzbl (%eax), %ebx;orl %ebx, %esi;movzbl (%eax), %ebx;shll $, %ebx": 1,
                "movzbl (%ebx), %esi;shll $, %esi;movzbl (%ebx), %edx;shll $, %edx;orl %edx, %esi": 2,
                "shll $, %edx;orl %edx, %esi;movzbl (%ebx), %edx;orl %edx, %esi;movzbl (%ebx), %edx": 2,
                "cmpl %ecx, %eax;jae  <FT_Stream_OpenLZW+>;movl %ecx, %eax;cmpl %eax, %edi;jb  <FT_Stream_OpenLZW+>": 1,
                "jb  <FT_Stream_OpenLZW+>;movl %eax, %edx;subl %ecx, %edx;addl %esi, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl %edx, -(%ebp);movb %cl, -(%ebp);movl (%eax), %eax": 2,
                "shll $, %eax;orl %eax, %edx;movl -(%ebp), %ecx;movzbl (%ecx), %eax;orl %eax, %edx": 3,
                "shll $, %ecx;orl %ecx, %ebx;movzbl (%eax), %ecx;orl %ebx, %ecx;movzbl (%eax), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %ebx;movl (%ebx), %edx": 1,
                "jae  <FT_Stream_OpenLZW+>;leal (%ebx,%ebx,), %edx;movl -(%ebp), %esi;movl (%esi), %eax;leal (%eax,%edx,), %esi": 1,
                "shll $, %ebx;orl %ebx, %eax;movzbl -(%ebp), %ebx;orl %ebx, %eax;movzbl -(%ebp), %ebx": 1,
                "shll $, %ebx;orl %ebx, %eax;je  <FT_Stream_OpenLZW+>;movl %eax, %edi;movl -(%ebp), %eax": 1,
                "cmpl -(%ebp), %edx;jb - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movb $, (%eax);addl $, %esp": 1,
                "shll $, %esi;orl %esi, %edi;movl %edi, -(%ebp);movzbl (%edx), %edi;shll $, %edi": 1,
                "cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %ecx, %eax;cmpl %ebx, %eax": 1,
                "movl -(%ebp), %edx;movb $, (%edx);movl -(%ebp), %ebx;movl %ebx, (%edx);movl %ecx, (%edx)": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %edx, -(%ebp);movzbl (%eax), %edi": 3,
                "movzbl (%eax), %edx;orl %edx, %edi;movzbl (%eax), %edx;shll $, %edx;addl $, %eax": 3,
                "movzbl (%eax), %eax;cmpl -(%ebp), %esi;jbe  <FT_Stream_OpenLZW+>;movl %ecx, %edx;cmpl %edx, %ebx": 1,
                "orl %ecx, %esi;movzbl (%eax), %eax;movzbl %al, %eax;movl %edx, %ecx;cmpl %esi, -(%ebp)": 1,
                "movl %edx, %ecx;cmpl %esi, -(%ebp);jae - <FT_Stream_OpenLZW+>;jmp - <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "orl %edx, %edi;movl $, %ebx;jmp  <FT_Stream_OpenLZW+>;leal (%ecx,%ebx), %edx;shrl %edx": 2,
                "movzbl (%eax), %edx;orl %edx, %esi;movl %ecx, %edx;cmpl %esi, -(%ebp);jae - <FT_Stream_OpenLZW+>": 1,
                "movl $, %eax;jmp  <FT_Stream_OpenLZW+>;addl $, %eax;movl %ecx, %edi;cmpl %esi, -(%ebp)": 1,
                "leal (%edx), %ebx;cmpl %edi, %ebx;jae  <FT_Stream_OpenLZW+>;leal (%edi,%ebx), %ecx;shrl %ecx": 2,
                "movzbl (%eax), %edx;orl %edx, %esi;addl $, %eax;movl %ecx, %edx;cmpl %esi, -(%ebp)": 1,
                "movzbl (%eax), %edi;orl %edi, %esi;movzbl (%eax), %eax;shll $, %eax;orl %eax, %esi": 2,
                "movl (%ebp), %edx;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%ebp), %edx": 1,
                "testl %edx, %edx;jne  <FT_Stream_OpenLZW+>;testl %esi, %esi;je  <FT_Stream_OpenLZW+>;leal (%ebx,%esi), %eax": 1,
                "movl (%ecx), %ecx;movl %ecx, -(%ebp);testl %ecx, %ecx;je  <FT_Stream_OpenLZW+>;addl $, %eax": 1,
                "jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %esi;testl %esi, -(%ebp)": 1,
                "movl %edx, %esi;shll $, %ebx;movzbl %cl, %ecx;orl %ecx, %ebx;movw %bx, -(%ebp)": 1,
                "movzbl (%edi), %edx;shll $, %edx;orl %edx, %eax;cmpl -(%ebp), %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, %ecx;cmpl %ecx, %ebx;jb - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %ecx, %edi": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl (%ebp), %edx;movl $, %eax;cmpl $, %edx": 1,
                "movl (%ebp), %edx;testl %edx, %edx;je  <FT_Stream_OpenLZW+>;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, (%ebp);jne  <FT_Stream_OpenLZW+>;movl (%ebp), %ecx;movzwl (%ecx), %eax;movl %eax, (%edx)": 1,
                "movl (%ebx), %ecx;movl (%ecx,%eax), %eax;movl %eax, (%edx);movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "ja  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;movb %al, (%esi);movzbl (%ebx), %eax;movb %al, (%esi)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %eax;movl (%ebp), %esi;movl (%eax), %ecx": 1,
                "movl (%ecx), %edx;movl (%ecx), %ebx;movl %ebx, -(%ebp);movl (%ecx), %edi;movl (%ecx), %ecx": 1,
                "movb %al, -(%ebp);movl $, %eax;testl %esi, %esi;js  <FT_Stream_OpenLZW+>;movzbl %cl, %ecx": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %edx;addl %ebx, %edx;cmpl %edx, -(%ebp);jl  <FT_Stream_OpenLZW+>": 1,
                "sarl $, %edx;imull %ebx, %edx;addl (%ebp), %edx;movl $, %eax;cmpl %edx, (%ebp)": 1,
                "imull %edi, %edx;movl %esi, %eax;sarl $, %eax;addl %edx, %eax;movl -(%ebp), %ebx": 1,
                "andl $, %ecx;je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;subl $, %eax": 1,
                "addl $, %eax;cmpl %ecx, %esi;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;leal (%ebx,%edx), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);cmpl $, -(%ebp);jle  <FT_Stream_OpenLZW+>": 1,
                "addl $, %esi;addl -(%ebp), %ebx;subl $, %edi;je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "addl %esi, %edi;movl -(%ebp), %ebx;movl $, %eax;movl %edx, %ecx;jmp - <FT_Stream_OpenLZW+>": 1,
                "movl $, %eax;cmpl %edx, (%ebp);jb  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;imull -(%ebp), %edx": 1,
                "movl $, %edx;movl $, -(%ebp);movl -(%ebp), %eax;subl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "subl %ecx, -(%ebp);movzwl %dx, %eax;movzbl -(%ebp), %ecx;sarl %cl, %eax;andb -(%ebp), %al": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);cmpl $, -(%ebp);jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "sarl %cl, %ebx;orb %bl, (%eax);addl $, %eax;shll $, %edx;cmpl %esi, %edi": 1,
                "andl %ebx, %eax;movl -(%ebp), %ebx;orb %al, (%ebx);movl -(%ebp), %ecx;subl %ecx, -(%ebp)": 1,
                "testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl (%edx), %eax;movl %eax, (%ebx);movl (%edx), %eax": 1,
                "cmpl %eax, %edi;jb  <FT_Stream_OpenLZW+>;movl %ecx, (%esp);movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>": 1,
                "movl %ecx, (%esp);movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %esi;movl $, (%ebx)": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl %eax, %ecx;testl %eax, %eax": 1,
                "jae  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;subl $, %esi;movl $, %edx;movl %esi, %eax": 1,
                "imull %edx;sarl $, %edx;sarl $, %esi;subl %esi, %edx;movl %edx, (%ebx)": 1,
                "sarl $, %esi;subl %esi, %edx;movl %edx, (%ebx);movl %ecx, %eax;movl -(%ebp), %ebx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movw $, %si;cmpl $, %eax;jbe  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %edx;addl $, %edx;movl %edx, (%esp);movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movzwl %ax, %eax;movzbl (%edx), %ecx;shll $, %ecx;movzbl (%edx), %edx;orl %ecx, %edx": 1,
                "movzbl (%ebx), %edx;orl %edx, %eax;movzwl %ax, %eax;movzbl (%ebx), %edx;shll $, %edx": 1,
                "andl $-, %edx;cmpl $, %edx;jne  <FT_Stream_OpenLZW+>;leal (%edi), %eax;cmpl %eax, -(%ebp)": 1,
                "shll $, %edx;movzbl (%edi), %ecx;orl %ecx, %edx;movl %ebx, %ecx;subl %eax, %ecx": 1,
                "movl %ebx, %ecx;subl %eax, %ecx;movzwl %dx, %eax;leal (%eax,%eax,), %eax;addl %eax, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movzbl (%edi), %ecx;shll $, %ecx;movzbl (%edi), %eax;shll $, %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %edx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "jmp  <FT_Stream_OpenLZW+>;leal (%eax), %esi;leal (%eax), %edi;movl $, %edx;leal -(%ebp), %ecx": 1,
                "cmpl $, (%ebx);jle  <FT_Stream_OpenLZW+>;movl %edi, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "movw $, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "movl (%ebp), %esi;cmpb $, (%ebp);je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "movl %ebx, (%esp);calll *(%ebx);addl $, %ebx;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %esi": 1,
                "testl %ecx, %ecx;je  <FT_Stream_OpenLZW+>;movl $, %edx;jmp  <FT_Stream_OpenLZW+>;movzbl (%esi,%edx), %ecx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edi;movzwl (%eax), %ebx": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;leal (%edi), %esi": 1,
                "movl $, %ecx;jmp  <FT_Stream_OpenLZW+>;movl $, %ecx;movb $, (%eax,%ecx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %esi, (%ebx);movl -(%ebp), %eax": 1,
                "movl %edx, %edi;movl %ecx, %esi;movl %edx, %eax;calll - <FT_Stream_OpenLZW+>;leal (%edi), %ebx": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%eax), %esi;cmpl $, -(%ebp)": 1,
                "movzbl (%ebx), %edx;orl %edx, %eax;movzbl (%ebx), %edx;addl $, %ebx;movzbl %dl, %edi": 1,
                "leal (%edi), %eax;movl (%ebp), %edx;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;leal (%ecx,%eax), %edx;movl (%ebp), %ecx": 1,
                "movzbl (%ecx), %edx;orl %edx, %ebx;movl %ebx, -(%ebp);addl $, %ecx;movl %ecx, -(%ebp)": 1,
                "cmpl %ebx, %esi;jae - <FT_Stream_OpenLZW+>;addl $, -(%ebp);movl -(%ebp), %ebx;cmpl %ebx, -(%ebp)": 1,
                "orl %ecx, %edi;movzbl (%ebx), %esi;addl $, %ebx;movl %ebx, -(%ebp);movl %edx, %ecx": 1,
                "jmp - <FT_Stream_OpenLZW+>;cmpl -(%ebp), %edi;jbe  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %edx, (%eax,%ecx,)": 1,
                "movl -(%ebp), %ebx;cmpl %ebx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movzbl (%edx), %ebx": 1,
                "jae - <FT_Stream_OpenLZW+>;jmp - <FT_Stream_OpenLZW+>;movl %edx, %edi;movl -(%ebp), %ebx;cmpl %ebx, -(%ebp)": 1,
                "addl $, %ebx;movl %eax, %edx;addl $, %edx;movl (%ebp), %ecx;movl (%ebp), %eax": 1,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movzbl (%ebx), %edx;movb %dl, -(%ebp);movzbl (%ebx), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movzbl (%ebx), %edx;movb %dl, -(%ebp);movzbl (%ebx), %eax;movb %al, -(%ebp)": 1,
                "movb %dl, -(%ebp);movzbl (%ebx), %eax;movb %al, -(%ebp);movzbl (%ebx), %edx;movb %dl, -(%ebp)": 1,
                "movzbl -(%ebp), %edx;orl %edx, %eax;movl -(%ebp), %edx;movl %eax, (%edx);addl $, %edx": 1,
                "movl %edx, -(%ebp);subl $, -(%ebp);jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl $, (%eax)": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp);movl %ebx, (%esp)": 1,
                "leal -(%ebp), %edi;movl %edi, (%esp);movl $, (%esp);movl %ebx, (%esp);calll - <FT_Angle_Diff+>": 1,
                "addw $, -(%ebp);movl -(%ebp), %ecx;cmpl $, %ecx;je  <FT_Stream_OpenLZW+>;cmpl $, %ecx": 1,
                "movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;cmpl $, %eax": 1,
                "addl $, %eax;shll $, %eax;addl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;cmpl $, %ecx;je  <FT_Stream_OpenLZW+>;cmpl $, %ecx;jne  <FT_Stream_OpenLZW+>": 1,
                "movw %ax, -(%ebp);testw %ax, %ax;jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esi);movl %ebx, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, (%esi);movl %ebx, (%esp)": 2,
                "addl $, %esi;addl $, %edi;movzwl -(%ebp), %eax;cmpl %edi, %eax;jg - <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <FT_Stream_OpenLZW+>;addl $, %esp": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edi;movl (%ebp), %ebx;movl (%ebx), %esi": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl %edi, (%esp);calll *(%edi);movl %eax, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp);cmpb $, (%ebx)": 1,
                "movl (%ebx), %eax;movl (%eax,%edi,), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <FT_Angle_Diff+>;movl (%ebp), %eax;movl $, (%eax);movl (%ebp), %edx;movl $, (%edx)": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll *%eax": 2,
                "movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "cmpw $, (%esi);jbe  <FT_Stream_OpenLZW+>;movw $, (%esi);movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movw $, (%esi);movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movzwl (%esi), %eax;movw %ax, -(%ebp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movzwl -(%ebp), %eax;movl %eax, -(%ebp);shll $, %eax;movl %eax, (%esp)": 1,
                "addl $, %esi;cmpl %edi, -(%ebp);ja - <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll - <FT_Angle_Diff+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %edi, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl (%edi), %eax": 1,
                "movzwl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "calll - <FT_Get_Sfnt_Name_Count+>;movl -(%ebp), %edx;subl %esi, %edx;cmpl %edx, %eax;jg  <FT_Stream_OpenLZW+>": 1,
                "leal (%esi), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %esi, (%esp);movl %eax, (%esp);movl %edi, (%esp)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl (%edx,%ebx,), %eax;movb $, (%eax,%esi);addl $, %ebx": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movw %si, -(%ebp)": 1,
                "movl -(%ebp), %esi;movzwl -(%ebp), %eax;cmpw %ax, -(%ebp);jae  <FT_Stream_OpenLZW+>;movzwl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);jmp  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Angle_Diff+>;movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movzwl -(%ebp), %eax": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "calll - <FT_Angle_Diff+>;movl %eax, -(%ebp);cmpl $, -(%ebp);jne - <FT_Stream_OpenLZW+>;movw $, -(%ebp)": 1,
                "movzwl (%ebx), %edx;movb $, %al;cmpl (%ebp), %edx;jbe  <FT_Stream_OpenLZW+>;movl (%ebx), %esi": 1,
                "movl %eax, (%esp);calll *(%esi);movl (%ebp), %edx;movl %eax, (%edx);movl $, %eax": 3,
                "cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %edx": 2,
                "movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %edx;movl $, %eax;testl %edx, %edx": 2,
                "cmpw $, %ax;ja  <FT_Stream_OpenLZW+>;movzwl %ax, %eax;movl %eax, (%esp);calll *(%esi)": 1,
                "movl $, %eax;cmpl $, %edx;jne  <FT_Stream_OpenLZW+>;cmpb $, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "movl $, -(%ebp);movl %eax, -(%ebp);cmpw %dx, (%ebx);jne  <FT_Stream_OpenLZW+>;cmpw $, (%ebx)": 1,
                "movl %esi, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpw $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl %esi, -(%ebp)": 1,
                "cmpw $, (%ebx);ja  <FT_Stream_OpenLZW+>;movswl (%ebx), %ecx;movl $, %eax;shll %cl, %eax": 1,
                "andw $, %cx;cmpw $, %cx;sete -(%ebp);movl %esi, -(%ebp);addl $, %ebx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;testl %edx, %edx;jns  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movl $, -(%ebp);movl $, %edx;testl %edx, %edx;js  <FT_Stream_OpenLZW+>;leal (%edx,%edx,), %edx": 1,
                "cmpl $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl (%eax), %edi;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl %ecx, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);movw $, (%ebx);movl $, %edx": 1,
                "movl (%edx), %edi;cmpl $, %edi;jne  <FT_Stream_OpenLZW+>;cmpw $, (%edx);jne  <FT_Stream_OpenLZW+>": 1,
                "addl $, %edx;cmpl %esi, %ecx;jl - <FT_Stream_OpenLZW+>;cmpl $-, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);movl (%edi), %eax;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movzwl %dx, %edx;movl -(%ebp), %ecx;movl (%ecx), %eax;testl %edx, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Angle_Diff+>;movl $, (%esi);movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %edx;testl %edx, %edx;je  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movzbl (%ecx), %eax": 1,
                "leal (%eax), %esi;movzbl (%eax), %ebx;shll $, %ebx;movzbl (%eax), %eax;orl %ebx, %eax": 1,
                "movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movzbl (%ecx), %edx;shll $, %edx": 1,
                "movb %bl, -(%ebp);movzbl (%edx), %ebx;movb %bl, -(%ebp);movzbl (%edx), %ebx;movb %bl, -(%ebp)": 2,
                "orl %eax, %ebx;movzbl (%ecx), %eax;orl %ebx, %eax;movzbl (%ecx), %ebx;shll $, %ebx": 1,
                "movzbl (%edx), %eax;movb %al, -(%ebp);movzbl (%edx), %esi;movzbl (%edx), %edx;movb %dl, -(%ebp)": 1,
                "movl $, %ecx;leal (%ebx), %eax;movl %eax, -(%ebp);movzbl (%ebx), %eax;shll $, %eax": 1,
                "movl %eax, %edx;movl $, %eax;testl %edx, %edx;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movzbl (%edx), %ecx;shll $, %ecx;orl %eax, %ecx;movzbl (%edx), %eax;orl %ecx, %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);leal (%edx,%edi), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;cmpl (%ecx), %eax;jbe  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;cmpl %eax, %esi;jb  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;addl $, %eax;cmpl %eax, %esi;jb  <FT_Stream_OpenLZW+>;movl %eax, -(%ebp)": 1,
                "jmpl *(,%ecx,);movb $, (%edx);addl $, %eax;sarl $, %eax;movl %eax, (%edx)": 1,
                "movb $, (%edx);addl $, %eax;sarl $, %eax;movl %eax, (%edx);movw $, (%edx)": 2,
                "movw $, (%edx);jmp  <FT_Stream_OpenLZW+>;movb $, (%edx);addl $, %eax;sarl %eax": 1,
                "shll $, %eax;movl %eax, (%edx);movw $, (%edx);jmp  <FT_Stream_OpenLZW+>;movb $, (%edx)": 1,
                "movl %eax, (%esp);calll - <FT_Bitmap_New>;movl -(%ebp), %edx;movl (%edx), %eax;movl (%eax), %edx": 1,
                "imull %edx, %eax;movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Angle_Diff+>": 1,
                "movl (%ebp), %edi;movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "calll - <FT_Angle_Diff+>;movl -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "jmp - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);jmp - <FT_Stream_OpenLZW+>;addl $, %esp;popl %ebx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebx), %esi;leal -(%ebp), %eax": 1,
                "movl %ebx, (%esp);calll *(%ebx);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %ebx, -(%ebp)": 1,
                "leal (%ebx), %esi;movl $, %eax;cmpl %esi, %edx;jb  <FT_Stream_OpenLZW+>;leal (%ecx,%ebx), %eax": 1,
                "movzbl (%eax), %ebx;shll $, %ebx;movzbl (%eax), %ecx;shll $, %ecx;orl %ebx, %ecx": 1,
                "jb  <FT_Stream_OpenLZW+>;leal (%ecx,%ebx,), %ecx;cmpl %ecx, %edx;jb  <FT_Stream_OpenLZW+>;movl $, (%esp)": 1,
                "ja  <FT_Stream_OpenLZW+>;movzbl (%edx), %eax;shll $, %eax;movzbl (%edx), %edx;orl %edx, %eax": 1,
                "movzbl (%ebx), %ecx;shll $, %ecx;movzbl (%ebx), %eax;orl %eax, %ecx;movzwl %cx, %ecx": 1,
                "movzbl (%ebx), %eax;orl %eax, %ecx;movzwl %cx, %ecx;movzbl (%ebx), %eax;movzbl (%ebx), %edx": 1,
                "movb %cl, (%edx);movl (%esi), %edx;movl (%esi), %ecx;movl (%ecx), %ecx;movb %cl, (%edx)": 2,
                "calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;addl (%eax), %edi;movl (%eax), %edx": 1,
                "movl (%eax), %edx;jmp  <FT_Stream_OpenLZW+>;movl (%esi), %eax;movl (%eax), %edx;testl %ebx, %ebx": 1,
                "movl (%esi), %eax;movl (%eax), %edx;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %edx, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %edx": 1,
                "movl -(%ebp), %eax;movl (%eax), %edx;movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpl %edx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movw %ax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);subl $, %edx": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);subl $, %edx;cmpl %edx, %eax;ja  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;cmpl %eax, (%edx);jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl $, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl (%edx), %eax;movl %eax, -(%ebp);leal -(%ebp), %ecx;movl %ecx, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "movl %ecx, (%esp);movl %edx, (%esp);calll *(%eax);movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %ecx, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp);calll - <FT_New_Library+>;testl %eax, %eax": 1,
                "addl $, %eax;cmpl %eax, -(%ebp);jae - <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %edx;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl $, %ebx;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl %esi, (%esp);movl -(%ebp), %edx": 4,
                "jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl (%esi), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "movb $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl (%esi), %eax;movl (%eax), %eax": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);calll *%eax;movl %eax, -(%ebp)": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll *%eax;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movl %esi, (%esp);calll *%eax;movl %eax, -(%ebp);testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl %edi, %ecx": 1,
                "jne  <FT_Stream_OpenLZW+>;cmpl $, (%esi);jne  <FT_Stream_OpenLZW+>;movl %edi, %eax;testb %al, %al": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%esi), %eax;cmpb $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esi);movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;cmpl $, (%esi);jle  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%edi);addl $, %ebx;cmpl %ebx, (%esi);jg - <FT_Stream_OpenLZW+>;movl (%esi), %ecx": 1,
                "movzwl %ax, %eax;movl %eax, -(%ebp);movl $, %edi;movswl %bx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %eax, %edx;sarl $, %edx;idivl -(%ebp);movw %ax, (%ebx)": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);addl $, %edi;cmpl -(%ebp), %edi;jne - <FT_Stream_OpenLZW+>": 1,
                "addl $, %edi;cmpl -(%ebp), %edi;jne - <FT_Stream_OpenLZW+>;orl $, (%esi);movl -(%ebp), %ecx": 1,
                "jne  <FT_Stream_OpenLZW+>;orl $, (%esi);testb $, (%esi);je  <FT_Stream_OpenLZW+>;movswl (%esi), %eax": 1,
                "movzwl (%esi), %eax;movw %ax, (%esi);movzwl (%esi), %edx;movw %dx, (%esi);movl %eax, %ecx": 1,
                "jne  <FT_Stream_OpenLZW+>;cmpw $, (%esi);je  <FT_Stream_OpenLZW+>;movw %ax, (%esi);movzwl (%esi), %edx": 1,
                "movw %ax, (%esi);movzwl (%esi), %edx;movw %dx, (%esi);addw (%esi), %ax;subl %edx, %eax": 1,
                "movw %dx, (%esi);addw (%esi), %ax;subl %edx, %eax;movw %ax, (%esi);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;movl %eax, %edx;movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>;movl %eax, -(%ebp)": 1,
                "cmpl %ecx, %edx;ja  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %eax;shll $, %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %esi;movl (%ebp), %eax;movl %eax, (%esp);calll - <FT_Angle_Diff+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %edi, (%esp);calll - <FT_Angle_Diff+>;movl %eax, %edx;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl %eax, %edx;movl %eax, (%ebx);movl -(%ebp), %eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esp);calll - <FT_Get_Sfnt_Name_Count+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebp), %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebx), %edx;movl %edx, (%ebx);movl %edi, (%ebx);addl $, %esp": 1,
                "movl -(%ebp), %eax;cmpl $, %eax;jbe  <FT_Stream_OpenLZW+>;leal (%esi), %ebx;movl %ebx, (%esp)": 1,
                "movb %cl, -(%ebp);movzbl (%eax), %edx;movb %dl, -(%ebp);movzbl (%eax), %edx;movl %edx, %ecx": 1,
                "movl %ecx, -(%ebp);cmpl $, %ecx;jbe  <FT_Stream_OpenLZW+>;movzbl (%eax), %edx;movl %edx, %ecx": 1,
                "cmpl %edx, -(%ebp);jb  <FT_Stream_OpenLZW+>;movl %ecx, (%esi);movl -(%ebp), %edx;addl %eax, %edx": 1,
                "testl %ecx, %ecx;je  <FT_Stream_OpenLZW+>;movl %edi, -(%ebp);movzbl (%eax), %edx;shll $, %edx": 1,
                "movl %ebx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll - <FT_Angle_Diff+>;movl %edi, %eax": 1,
                "andl $-, %esi;movl $, %edx;movl %ebx, (%eax,%edx);addl $, %edx;cmpl %esi, %edx": 1,
                "movzwl %cx, %ecx;movl -(%ebp), %edi;movzwl (%edi), %edi;movw %di, -(%ebp);movzbl (%edx), %edi": 1,
                "orl %edx, %edi;leal (%eax), %edx;movl %edx, %eax;movzbl -(%edx), %ecx;shll $, %ecx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);movl -(%ebp), %esi;movl %ecx, %ebx;movl -(%ebp), %edi": 1,
                "movl %ebx, %esi;movzbl (%edi), %ebx;shll $, %ebx;movzbl (%edi), %eax;orl %eax, %ebx": 1,
                "cmpw $, %bx;jb  <FT_Stream_OpenLZW+>;cmpw $, %bx;jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %eax;addl -(%ebp), %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "movl %edi, (%ecx);movl $, %eax;jmp  <FT_Stream_OpenLZW+>;movl (%ebp), %edi;movl $, (%edi)": 1,
                "calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "shll $, %ebx;movzbl (%eax), %eax;shll $, %eax;orl %eax, %ebx;movl (%ebp), %edx": 1,
                "movzbl (%edx), %eax;orl %eax, %edi;movzbl (%edx), %esi;shll $, %esi;movzbl (%edx), %eax": 1,
                "movzbl -(%edx), %eax;shll $, %eax;orl %eax, %ebx;movzbl -(%edx), %eax;orl %eax, %ebx": 1,
                "movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <FT_Matrix_Invert+>;addl $, %edi": 1,
                "movzbl (%esi), %eax;shll $, %eax;orl %eax, %edx;movzbl (%esi), %eax;orl %eax, %edx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;movl -(%ebp), %ecx;leal (%ebx,%ecx,), %eax;cmpl %eax, %edx": 1,
                "leal (%ebx,%ecx,), %eax;cmpl %eax, %edx;jae  <FT_Stream_OpenLZW+>;movl $, (%esp);movl (%ebp), %eax": 1,
                "movzbl (%ebx), %edi;shll $, %edi;movzbl (%ebx), %eax;shll $, %eax;orl %eax, %edi": 1,
                "addl $, %ebx;addl %edi, %esi;cmpl $, %esi;jbe  <FT_Stream_OpenLZW+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Matrix_Invert+>;addl $, %esi": 1,
                "movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Matrix_Invert+>;testl %esi, %esi": 1,
                "je  <FT_Stream_OpenLZW+>;leal (%esi,%esi,), %eax;addl %ebx, %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%edx), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movzbl -(%ebp), %edx;shll $, %edx": 2,
                "movl (%ebp), %eax;movl (%eax), %edx;leal (%ebx), %eax;cmpl %eax, %edx;jae  <FT_Stream_OpenLZW+>": 3,
                "cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl $, -(%ebp);movzbl (%edi), %esi": 2,
                "movl $, (%esp);movl %ecx, (%esp);calll - <FT_Matrix_Invert+>;addl $, -(%ebp);movl %ebx, -(%ebp)": 2,
                "orl %ecx, %eax;movzbl -(%ebp), %ecx;orl %ecx, %eax;movzbl -(%ebp), %ecx;shll $, %ecx": 1,
                "movzbl -(%ebp), %ecx;orl %ecx, %eax;movzbl -(%ebp), %ecx;shll $, %ecx;orl %ecx, %eax": 2,
                "orl %ecx, %eax;movzbl -(%ebp), %ecx;shll $, %ecx;orl %ecx, %eax;addl %edx, %eax": 2,
                "leal (%esi,%esi), %edx;cmpl %edx, %eax;jae  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %edi, (%esp)": 2,
                "jae  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %edi, (%esp);calll - <FT_Matrix_Invert+>;movl (%edi), %eax": 2,
                "movl -(%ebp), %ecx;movzbl (%ecx), %eax;shll $, %eax;orl %eax, %edx;movzbl (%ecx), %eax": 1,
                "shll $, %eax;andl $, %edi;shll $, %edi;orl %edi, %eax;movzbl -(%ebp), %ecx": 1,
                "orl %ecx, %eax;addl %edx, %eax;movl (%ebp), %edx;cmpl (%edx), %eax;jb  <FT_Stream_OpenLZW+>": 1,
                "movl -(%ebp), %esi;movl %ebx, %ecx;shrl $, %ecx;movzwl %bx, %edi;movl %ebx, %eax": 1,
                "sarl %cl, %edx;testl %edx, %eax;jne  <FT_Stream_OpenLZW+>;movl $, (%esp);movl (%ebp), %ecx": 1,
                "testl %edx, %eax;jne  <FT_Stream_OpenLZW+>;movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movzbl (%ebx), %edx;orl %edx, %eax;movzwl %ax, %eax;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "cmpl %eax, %edx;jae  <FT_Stream_OpenLZW+>;movl (%ecx), %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "jbe  <FT_Stream_OpenLZW+>;testb $, %al;je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %ecx, (%esp)": 2,
                "calll - <FT_Matrix_Invert+>;shrl %esi;movl %esi, -(%ebp);leal (,%esi,), %eax;cmpl %eax, -(%ebp)": 1,
                "shrl %edi;leal (%edi,%esi), %eax;cmpl -(%ebp), %eax;jne  <FT_Stream_OpenLZW+>;movzbl -(%ebp), %ecx": 1,
                "shll $, %edx;movzbl (%eax), %eax;orl %edx, %eax;cmpw $-, %ax;je  <FT_Stream_OpenLZW+>": 1,
                "movl %eax, (%esp);calll - <FT_Matrix_Invert+>;cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl %edi, -(%ebp)": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;subl $, %eax;movl %eax, -(%ebp);addl -(%ebp), %ebx": 1,
                "movl %eax, -(%ebp);addl $, -(%ebp);movl -(%ebp), %ecx;movzbl -(%ecx), %eax;shll $, %eax": 1,
                "movzbl -(%ecx), %edx;orl %edx, %eax;movzwl %ax, %edi;addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movzbl -(%edx), %edx;movb %dl, -(%ebp);leal (%esi), %ecx;movl %ecx, -(%ebp);movzbl (%esi), %ebx": 1,
                "movzbl -(%ebp), %eax;orl %edx, %eax;cwtl;movl %eax, -(%ebp);movl -(%ebp), %esi": 1,
                "addl $, %esi;cmpl %esi, %edi;ja - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;cmpl $, %ebx": 1,
                "ja  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);jne  <FT_Stream_OpenLZW+>;cmpl $, %edi": 1,
                "shll $, %eax;movzbl (%edx), %edx;orl %edx, %eax;movzwl %ax, %eax;movl (%ebp), %ecx": 1,
                "movl $, -(%ebp);movl %edi, -(%ebp);movl $, %edi;movzbl (%ebx), %eax;shll $, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %ecx, (%esp);calll - <FT_Matrix_Invert+>;shrl $, %esi": 1,
                "shrl $, %esi;cmpl %esi, %edi;jae  <FT_Stream_OpenLZW+>;movl %esi, %edi;addl $, %ebx": 1,
                "movl %esi, %edi;addl $, %ebx;cmpl -(%ebp), %ebx;jne - <FT_Stream_OpenLZW+>;movl %edi, -(%ebp)": 1,
                "movl $, (%esp);movl %edx, (%esp);calll - <FT_Matrix_Invert+>;jmp  <FT_Stream_OpenLZW+>;movzbl (%ebx), %ecx": 1,
                "leal (%ebx), %edi;movzbl (%ebx), %eax;movb %al, -(%ebp);movzbl (%ebx), %eax;movb %al, -(%ebp)": 1,
                "movzwl %ax, %eax;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;leal -(%edi,%eax), %eax;cmpl %eax, -(%ebp)": 1,
                "orl %edx, %eax;movzwl %ax, %eax;movl (%esi), %ecx;leal (%edi,%eax), %edx;cmpl %edx, %ecx": 1,
                "sarl $, %eax;sarl $, %esi;xorl %esi, %eax;subl %esi, %eax;testb $, (%ebx)": 1,
                "jne  <FT_Stream_OpenLZW+>;movzwl (%edx), %ecx;movw %cx, -(%ebp);movswl (%edx), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movzwl -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx;addl -(%ebp), %ecx": 1,
                "movzwl -(%ebp), %eax;addw (%ebp), %ax;movw %ax, (%edx);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "testl %edx, %edx;je  <FT_Stream_OpenLZW+>;testl %eax, %eax;jle  <FT_Stream_OpenLZW+>;movl (%ebx), %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll *%edx;movl $, (%ebx);movl -(%ebp), %ecx": 1,
                "movl (%ebx), %edx;testl %edx, %edx;jne - <FT_Stream_OpenLZW+>;jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %edx;testl %eax, %eax": 1,
                "calll - <FT_Outline_Translate>;movb $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %edx;addl $, %edx;andl $-, %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %edx;subl %eax, %edx;sarl $, %edx;movl %edx, -(%ebp);testl %ecx, %ecx": 1,
                "movzbl %dl, %edx;movl %edx, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);testl %edx, %edx": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movb $, (%ebx);movw $, (%ebx);movl -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;movl %edx, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "addl %esi, %eax;movl %ebx, %edx;testl %ebx, %ebx;je  <FT_Stream_OpenLZW+>;movzbl -(%esi,%edx), %ecx": 1,
                "movzbl -(%esi,%edx), %ecx;movb %cl, -(%eax);movb %cl, -(%eax);movb %cl, -(%eax);subl $, %eax": 1,
                "movb %cl, -(%eax);movb %cl, -(%eax);subl $, %eax;subl $, %edx;jne - <FT_Stream_OpenLZW+>": 1,
                "imull -(%ebp), %edi;addl %esi, %edi;movl -(%ebp), %eax;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "leal (%eax,%eax,), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "calll - <FT_Outline_Translate>;jmp - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%ebp), %ebx;movl (%ebp), %edx": 1,
                "orl (%eax), %edx;je  <FT_Stream_OpenLZW+>;pushl %ebp;movl %esp, %ebp;pushl %esi": 1,
                "je  <FT_Stream_OpenLZW+>;leal (%edx), %esi;movl (%edx), %edx;testl %edx, %edx;jne - <FT_Stream_OpenLZW+>": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);addl $, %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "movl $, -(%ebp);addl $, %eax;movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "calll  <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <FT_Outline_Decompose>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl $, %eax;cmpl %ebx, -(%ebp);jge  <FT_Stream_OpenLZW+>;movl (%edi), %esi;movl %esi, -(%ebp)": 1,
                "cmpl %esi, -(%ebp);jge  <FT_Stream_OpenLZW+>;cmpl -(%ebp), %edx;jle  <FT_Stream_OpenLZW+>;movl %edx, (%edi)": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movl %edx, (%edi)": 1,
                "idivl (%edi);movl %eax, -(%ebp);movl -(%ebp), %eax;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, -(%ebp);leal (%edi), %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;addl (%edi), %eax": 1,
                "cmpl %eax, %edx;jbe  <FT_Stream_OpenLZW+>;subl %eax, %edx;sarl $, %edx;movl %edx, (%edi)": 1,
                "movl $, (%edx,%eax,);addl $, %eax;cmpl %eax, (%edi);jg - <FT_Stream_OpenLZW+>;movl $, (%edi)": 1,
                "jle  <FT_Stream_OpenLZW+>;movl $, -(%ebp);movl (%edi), %eax;movl -(%ebp), %esi;movl (%eax,%esi,), %ebx": 1,
                "jne - <FT_Stream_OpenLZW+>;testl %esi, %esi;je  <FT_Stream_OpenLZW+>;movl (%edi), %eax;subl %edx, %eax": 1,
                "jle  <FT_Stream_OpenLZW+>;movl (%edi), %ecx;movl %ecx, (%esp);movl -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpl $, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax": 1,
                "addl $, (%edi);movl -(%ebp), %ebx;movl %eax, (%ebx);movl -(%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);movl -(%ebp), %eax;movl %ecx, (%eax);movl -(%ebp), %eax;movl %edx, (%eax)": 1,
                "cmpl $, (%esi);je  <FT_Stream_OpenLZW+>;cmpl $, (%esi);jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "jne  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax)": 1,
                "movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl -(%ebp), %esi;movl (%esi), %eax": 1,
                "jmp  <FT_Stream_OpenLZW+>;testb $, %cl;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;addl $, %edi": 1,
                "testb $, %cl;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;addl $, %edi;movl (%ebp), %esi": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl $, (%eax)": 1,
                "movl -(%ebp), %esi;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %eax;movl $, (%eax);movl %eax, (%eax)": 1,
                "addl %edi, %eax;cmpl %edi, -(%ebp);jne - <FT_Stream_OpenLZW+>;movl (%ebp), %eax;subl -(%ebp), %eax": 1,
                "subl %esi, %eax;movl -(%ebp), %edx;imull %eax, %edx;addl %edx, (%ebx);addl %eax, (%ebx)": 1,
                "movl %esi, %ecx;movl -(%ebp), %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>;movl %esi, %eax": 1,
                "movl %eax, (%esp);movl %esi, (%esp);movl %edi, %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "cmpl -(%ebp), %esi;je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;shll $, %eax;movl %eax, %edx": 1,
                "addl %ecx, %edi;movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);movl -(%ebp), %edx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ecx": 1,
                "shll $, %ebx;movl (%ebp), %esi;movl %ebx, (%esi);movl (%eax), %eax;shll $, %eax": 1,
                "movl %eax, (%esi);movl (%ecx), %ebx;shll $, %ebx;movl %ebx, (%esi);movl (%ecx), %ebx": 1,
                "movl %ebx, %edi;movl %edi, %esi;cmpl %ecx, %edi;jle  <FT_Stream_OpenLZW+>;movl %ecx, %esi": 1,
                "addl $, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "subl %esi, %ebx;cmpl %ebx, %edi;jle  <FT_Stream_OpenLZW+>;imull $, %edi, %edi;imull $, %ebx, %ebx": 1,
                "addl %ebx, %edi;sarl $, %edi;cmpl $, %edi;jg  <FT_Stream_OpenLZW+>;imull $, %edi, %edi": 1,
                "sarl $, %ebx;xorl %ebx, %esi;subl %ebx, %esi;cmpl %esi, %edi;jl  <FT_Stream_OpenLZW+>": 2,
                "jl  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl (%ebx), %ebx;subl %edx, %ebx;movl %ebx, -(%ebp)": 1,
                "testl %esi, %esi;jg  <FT_Stream_OpenLZW+>;movl -(%ebp), %edi;subl %ecx, %edi;movl -(%ebp), %ebx": 1,
                "imull %edi, %ebx;movl -(%ebp), %ecx;subl -(%ebp), %ecx;imull -(%ebp), %ecx;addl %ebx, %ecx": 1,
                "sarl %esi;movl -(%ebp), %edi;movl %esi, (%edi);addl %ebx, %ecx;movl %ecx, %ebx": 2,
                "shrl $, %ebx;addl %ebx, %edx;sarl %edx;movl -(%ebp), %ebx;movl %edx, (%ebx)": 2,
                "movl %edx, (%ecx);movl -(%ebp), %esi;movl -(%ebp), %ebx;movl %esi, (%ebx);movl (%eax), %ebx": 1,
                "addl $, %edi;movl %edi, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl (%ebp), %eax;movl (%eax), %ecx": 1,
                "movl %eax, -(%ebp);movl %eax, (%edi);movl (%edx), %eax;shll $, %eax;movl %eax, (%edi)": 1,
                "movl %eax, (%edi);movl (%edx), %edx;shll $, %edx;movl %edx, -(%ebp);movl %edx, (%edi)": 1,
                "movl %esi, %ecx;movl %ecx, %esi;cmpl %edx, %ecx;jle  <FT_Stream_OpenLZW+>;movl %edx, %esi": 1,
                "jl  <FT_Stream_OpenLZW+>;movl $, %edx;sarl $, %eax;addl $, %edx;cmpl $, %eax": 1,
                "movl $, %esi;jmp  <FT_Stream_OpenLZW+>;movl $, %esi;jmp  <FT_Stream_OpenLZW+>;movl $, %esi": 1,
                "nop;nop;nop;testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "retl;movl (%eax), %edx;leal (%edx,%ecx), %esi;movl (%esi,%edi), %esi;movl %esi, (%edx,%ecx)": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl $, (%ecx);testl %eax, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "movl %ecx, -(%ebp);movl $, (%ecx);testl %eax, %eax;je  <FT_Stream_OpenLZW+>;cmpl $, (%eax)": 1,
                "movzbl (%edi,%edx), %ecx;testb %cl, %cl;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %edx": 1,
                "movzbl (%eax), %edx;movl $, %eax;testb %dl, %dl;je  <FT_Stream_OpenLZW+>;movl $, %edi": 3,
                "jne  <FT_Stream_OpenLZW+>;movzbl (%ebx), %eax;andl $-, %eax;cmpb $, %al;jne  <FT_Stream_OpenLZW+>": 3,
                "movsbl %dl, %edx;movzbl (%edx), %edx;addl %edx, %eax;addl $, %ebx;movzbl (%ebx), %edx": 3,
                "cmpw $, -(%ebp);je  <FT_Stream_OpenLZW+>;negl %eax;jmp  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "movl $, %eax;jmp  <FT_Stream_OpenLZW+>;leal (%edx), %ebx;cmpl %ecx, %ebx;jae  <FT_Stream_OpenLZW+>": 1,
                "leal (%ecx,%ebx), %eax;shrl %eax;movl -(%ebp), %edx;leal (%edx,%eax,), %edi;movl (%edi), %edx": 1,
                "movzwl (%eax), %edx;movw %dx, -(%ebp);movzwl (%eax), %edx;movw %dx, -(%ebp);movl (%eax), %edx": 1,
                "movzwl (%eax), %edx;movw %dx, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %edx": 1,
                "movzwl (%eax), %eax;movl %eax, (%ebx);movzwl %cx, %ecx;movl %ecx, (%ebx);movl %edx, (%ebx)": 1,
                "jne  <FT_Stream_OpenLZW+>;nop;jmp  <FT_Stream_OpenLZW+>;movb $, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movb $, (%ebx);jmp  <FT_Stream_OpenLZW+>;movb $, (%ebx);movw $, (%ebx)": 1,
                "shll $, %eax;movl %eax, (%ebx);movl (%ebx), %eax;shll $, %eax;movl %eax, (%ebx)": 2,
                "movl %ebx, (%esp);calll - <FT_Set_Transform+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%eax), %esi": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl %esi, %edx;calll - <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);cmpl $, (%ebx)": 1,
                "movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);cmpl $, (%ebx);je  <FT_Stream_OpenLZW+>": 1,
                "movl %esi, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);addl $, %esp;popl %ebx": 2,
                "leal (%ecx,%eax), %esi;movl (%ebx), %eax;cmpl $, %ecx;jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;cmpl $, %esi;ja  <FT_Stream_OpenLZW+>;cmpl %esi, %ecx": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%ebx), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl $, %ecx;cmpl $, (%ebp);je  <FT_Stream_OpenLZW+>;cmpb $, (%eax);je  <FT_Stream_OpenLZW+>": 1,
                "jb - <FT_Stream_OpenLZW+>;movzbl (%edx), %ecx;testb %cl, %cl;je  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "shll %cl, %eax;orb %al, -(%ebp,%ebx);jmp  <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);addl $, %edx": 1,
                "movzbl (%edx), %ecx;testb %cl, %cl;jne - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "movl (%edi), %eax;cmpl (%edi), %eax;jne  <FT_Stream_OpenLZW+>;leal (%eax), %edx;movl %edi, %eax": 1,
                "movl (%edi), %edx;leal (%edx,%eax,), %ecx;movl %esi, %edx;cmpl %ebx, %esi;jb  <FT_Stream_OpenLZW+>": 1,
                "cmpl %ebx, %esi;jb  <FT_Stream_OpenLZW+>;movl $, %edx;movl %edx, (%ecx);addl $, %eax": 1,
                "btl %eax, %edx;jae  <FT_Stream_OpenLZW+>;movl %ebx, %esi;movb $, (%esi);addl $, %esi": 1,
                "movb $, (%esi);addl $, %esi;movzbl (%esi), %eax;testb %al, %al;je  <FT_Stream_OpenLZW+>": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %ebx, %esi;movl $, %ebx;cmpl -(%ebp), %esi;jae  <FT_Stream_OpenLZW+>": 1,
                "movl $, %ebx;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx": 1,
                "movl (%edi), %eax;movl $, (%eax,%edx,);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %ecx;movl %ecx, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl %esi, %ecx;movl -(%ebp), %edx;movl $, %eax;movl %eax, %ebx": 1,
                "movl -(%ebp), %edx;movl $, %eax;movl %eax, %ebx;shll $, %ebx;subl %eax, %ebx": 1,
                "movl $, %edx;divl %ecx;leal (%edi,%edx,), %ebx;leal -(%edi,%ecx,), %ecx;movl %ecx, -(%ebp)": 1,
                "testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%eax), %eax;shll $, %eax;addl (%ebx), %eax": 1,
                "movl %eax, -(%ebp);movl %esi, (%esp);movl %edi, (%esp);movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "movl $, %ecx;movl $, %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, (%ebx)": 2,
                "movl %edx, -(%ebp);movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, %edi;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %edi;movl %edi, (%esp)": 1,
                "movl %eax, (%edx);cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl %edi, (%esp);movl %esi, (%esp)": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;addl $, (%ebx);movl %eax, -(%ebp);testl %eax, %eax": 1,
                "jne  <FT_Stream_OpenLZW+>;addl $, (%ebx);movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);movl -(%ebp), %eax": 1,
                "movzbl (%eax), %eax;andl $-, %eax;cmpb $, %al;jne  <FT_Stream_OpenLZW+>;movl $, (%ebx)": 1,
                "andl $-, %eax;cmpb $, %al;jne  <FT_Stream_OpenLZW+>;movl $, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll  <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>": 9,
                "movl (%ebp), %eax;movl (%eax), %ebx;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ecx), %edx;movl (%edx), %edx;movl %edx, (%eax);movl (%ecx), %eax;movl $, (%eax)": 1,
                "movl %ecx, (%esp);calll - <FT_Angle_Diff+>;movl %eax, (%ebx);cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>": 1,
                "negl %edx;movw %dx, (%eax);orl $, (%ecx);jmp  <FT_Stream_OpenLZW+>;movl $, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl %ebx, (%esp);movl %eax, (%esp);calll  <FT_Stream_OpenLZW+>;movl (%ebp), %ecx;movl (%ecx), %esi": 1,
                "cmpb $, (%eax);je  <FT_Stream_OpenLZW+>;movl (%ebx), %edx;leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "cmpl $, %esi;ja  <FT_Stream_OpenLZW+>;leal -(%ebp), %edi;movl %esi, (%esp);movl %edx, (%esp)": 1,
                "calll  <FT_Stream_OpenLZW+>;movl %esi, (%esp);movl %edi, %ecx;movl $, %edx;leal -(%ebp), %eax": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, (%ebx);movl (%ebp), %eax;movl (%eax), %ebx;movl (%eax), %eax": 1,
                "jne - <FT_Stream_OpenLZW+>;movl $, %eax;cmpw $, %cx;ja  <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "movswl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 3,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebp), %edx;movl (%edx), %eax;movw $, (%eax)": 1,
                "leal -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>;movl %esi, -(%ebp);jmp - <FT_Stream_OpenLZW+>;leal -(%ebp), %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %edi;movl $, (%esp)": 1,
                "movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);calll - <.text+>;movl (%edi), %eax": 2,
                "movw $, (%eax);movl (%edi), %ebx;movl $, %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "testl %edx, %edx;je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "testb $-, %al;je  <FT_Stream_OpenLZW+>;cmpb $, %al;jne - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;movsbl %al, %eax;movl %eax, -(%ebp);movb $, (%esi);testl %ebx, %ebx": 1,
                "leal (%edx), %eax;shll $, %eax;movl -(%ebp), %edx;addl (%edx), %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "cmpb $, %dl;je - <FT_Stream_OpenLZW+>;cmpb $, %dl;jne  <FT_Stream_OpenLZW+>;addl $, %ecx": 1,
                "calll - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %ebx, %esi;jmp - <FT_Stream_OpenLZW+>;movl %ecx, %esi": 1,
                "movl $, %edx;movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je - <FT_Stream_OpenLZW+>": 1,
                "movl $, -(%ebp);cmpl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;subl -(%ebp), %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);cmpl %esi, -(%ebp);jge  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx": 1,
                "cmpl %esi, -(%ebp);jge  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;addl %edi, %ebx;movl %ebx, -(%ebp)": 1,
                "addl %edi, %ebx;movl %ebx, -(%ebp);movzbl (%ebx), %eax;movsbl %al, %edx;cmpl -(%ebp), %edx": 1,
                "jne  <FT_Stream_OpenLZW+>;movl %ebx, -(%ebp);movl $, -(%ebp);jmp - <FT_Stream_OpenLZW+>;subl -(%ebp), %esi": 1,
                "calll  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi;movl -(%ebp), %ebx;movl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);cmpl $, -(%ebp);je - <FT_Stream_OpenLZW+>;cmpl $, -(%ebp)": 1,
                "andb $, %bl;addl $, %ebx;movl %ebx, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl %edi, (%esp)": 1,
                "jmp - <FT_Stream_OpenLZW+>;movl %edi, (%esp);movl -(%ebp), %esi;movl %esi, (%esp);calll - <FT_Angle_Diff+>": 1,
                "movw $, (%eax);movl -(%ebp), %ebx;movl (%ebx), %eax;cmpl $, (%eax);je  <FT_Stream_OpenLZW+>": 1,
                "movl %ecx, (%esp);movl (%ebx), %ecx;movl %ecx, (%esp);leal (%eax), %ecx;movl %ecx, (%esp)": 1,
                "addl $, %eax;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ebx": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%ebp), %esi;movl %eax, (%esi)": 1,
                "jne  <FT_Stream_OpenLZW+>;movl -(%ebp), %eax;movl (%ebp), %esi;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl %eax, %edx;andl $-, %edx;cmpb $, %dl;je  <FT_Stream_OpenLZW+>;cmpb $, %al": 1,
                "cmpb $, %dl;je  <FT_Stream_OpenLZW+>;cmpb $, %al;je  <FT_Stream_OpenLZW+>;cmpb $, %al": 1,
                "je  <FT_Stream_OpenLZW+>;leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl -(%ebp), %esi": 2,
                "movl $, -(%ebp);movl $, (%esi);movl $, %edx;movl %ebx, %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "cmpb $, %dl;jne  <FT_Stream_OpenLZW+>;movl (%ebp), %esi;movl $, (%esi);movl (%eax), %eax": 1,
                "movl $, -(%ebp,%edx,);movl -(%ebp,%edx,), %edi;testl %edi, %edi;je  <FT_Stream_OpenLZW+>;movl %esi, %ecx": 1,
                "notl %ecx;subl $, %ecx;movl %ecx, -(%ebp,%edx,);leal (%ecx,%ebx), %ebx;addl $, %edx": 1,
                "addl $, %eax;movl (%ebp), %ebx;movl %eax, (%ebx);movl $, (%ebx);leal -(%ebp), %eax": 1,
                "movl (%eax), %esi;addw (%eax), %si;movw %si, (%ebx);movl $, %edx;calll - <FT_Stream_OpenLZW+>": 1,
                "movl $, %edx;calll - <FT_Stream_OpenLZW+>;testl %eax, %eax;je  <FT_Stream_OpenLZW+>;movl (%eax), %ecx": 1,
                "je  <FT_Stream_OpenLZW+>;movzwl (%eax), %edi;jmp  <FT_Stream_OpenLZW+>;movl $, %edi;movl $, %edx": 1,
                "je  <FT_Stream_OpenLZW+>;movzwl (%eax), %ecx;jmp  <FT_Stream_OpenLZW+>;movl $, %ecx;cmpl $, (%ebx)": 1,
                "movl $, %ecx;cmpl $, (%ebx);jne  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;testw %cx, %cx": 1,
                "testw %di, %di;je  <FT_Stream_OpenLZW+>;movswl %di, %eax;imull (%ebx), %eax;movswl %cx, %ecx": 1,
                "movl (%edx), %edi;movl %edi, (%esi,%eax,);movl (%ecx), %esi;movw %ax, (%esi,%eax,);movl (%ebx), %esi": 1,
                "movl (%ebx), %esi;cmpl %esi, (%edx);jne  <FT_Stream_OpenLZW+>;cmpl $-, %eax;je  <FT_Stream_OpenLZW+>": 1,
                "cmpl %eax, (%ebx);ja - <FT_Stream_OpenLZW+>;movl $, %edx;movl -(%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "andl $-, %edx;cmpb $, %dl;jne  <FT_Stream_OpenLZW+>;movzbl (%eax), %edx;andl $-, %edx": 2,
                "movzbl (%eax), %edx;andl $-, %edx;cmpb $, %dl;jne  <FT_Stream_OpenLZW+>;leal (%eax), %ebx": 1,
                "jne  <FT_Stream_OpenLZW+>;leal (%eax), %ebx;movl $, (%esp);movl %ebx, (%esp);calll  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, (%esp);movl %ebx, (%esp);calll  <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "movl (%ebp), %ebx;movl %ebx, (%esp);calll - <FT_Stream_OpenLZW+>;movl $, %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "movb %dl, -(%ebp);movsbl %dl, %ecx;movl %ecx, -(%ebp);movb $, (%eax);movl -(%ebp), %edx": 1,
                "nop;jmp - <FT_Stream_OpenLZW+>;movl $, %ebx;movl $, %edx;movl $, %esi": 1,
                "jmp - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);jmp - <FT_Stream_OpenLZW+>;movl (%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %ebx;movl $, -(%ebp);movl (%ebx), %esi;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %esi, %eax;calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %edx": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl (%ebx), %edx;movl %edx, -(%ebp);testb $, %dl;jne  <FT_Stream_OpenLZW+>": 1,
                "calll - <FT_Stream_OpenLZW+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl (%ebx), %eax": 5,
                "movl %edi, (%esp);calll  <FT_Stream_OpenLZW+>;testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;movl $, (%esp)": 1,
                "andl $, %edx;movl %edx, -(%ebp);je  <FT_Stream_OpenLZW+>;cmpl $-, (%ebx);jne  <FT_Stream_OpenLZW+>": 1,
                "testl %eax, %eax;jne  <FT_Stream_OpenLZW+>;cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <FT_Stream_OpenLZW+>;testl %ecx, %ecx;js  <FT_Stream_OpenLZW+>;movl %ecx, %eax": 1,
                "je  <FT_Stream_OpenLZW+>;movl $, (%ebx);movw $, (%esi);jmp  <FT_Stream_OpenLZW+>;orl %edi, %edx": 1,
                "cmpl $, -(%ebp);jne  <FT_Stream_OpenLZW+>;addl $, (%esi);imull $, (%esi), %edx;addl (%esi), %edx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <FT_Angle_Diff+>;movl $, (%ebx);movl (%ebx), %eax": 1,
                "testl $, -(%ebp);je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl -(%ebp), %ecx;movzwl (%ecx), %edx": 1,
                "je  <FT_Stream_OpenLZW+>;movzbl (%edi), %ecx;movsbl %cl, %edx;movl %edx, -(%ebp);movl %ecx, %edx": 1,
                "leal (%ecx), %edx;cmpl -(%ebp), %edx;je  <FT_Stream_OpenLZW+>;testb $, %cl;je  <FT_Stream_OpenLZW+>": 1,
                "testb $, %cl;je  <FT_Stream_OpenLZW+>;movb $, (%eax);leal (%eax), %eax;jmp  <FT_Stream_OpenLZW+>": 1,
                "orl $, %edx;movl %edx, (%ebx);movw $, (%esi);jmp  <FT_Stream_OpenLZW+>;movl -(%ebp), %esi": 1,
                "orl $, %eax;movl %eax, (%ebx);movw $, (%esi);addl $, (%ebx);jmp  <FT_Stream_OpenLZW+>": 1,
                "movl $, %edx;calll - <FT_Stream_OpenLZW+>;movl -(%ebp), %edx;movw %ax, (%edx);testl $, (%ebx)": 1,
                "movl (%esi), %edx;imull (%esi), %edx;movl %edx, (%esp);movl $, (%esp);andl $, %eax": 1,
                "cmpw %cx, %dx;jge  <FT_Stream_OpenLZW+>;movl %ecx, %eax;movw %ax, (%ebx);movzwl (%ebx), %edx": 1,
                "movzwl (%ebx), %ecx;movl %eax, %edx;cmpw %cx, %ax;jge  <FT_Stream_OpenLZW+>;movl %ecx, %edx": 1,
                "movl %ecx, %edx;movw %dx, (%ebx);movzwl (%ebx), %edx;movl -(%ebp), %ecx;movzwl (%ecx), %eax": 1,
                "movw $, (%esi);orl $, (%ebx);jmp  <FT_Stream_OpenLZW+>;movl $, (%esp);movl $, (%esp)": 1,
                "sarl $, %eax;movl %eax, (%ecx);movzwl (%ecx), %edx;cmpl $, %eax;ja  <FT_Stream_OpenLZW+>": 1,
                "je  <FT_Stream_OpenLZW+>;testb $, (%ebx);je  <FT_Stream_OpenLZW+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movzbl (%esi), %esi;movzbl (%edi,%edx), %ebx;andl $, %ebx;btl %ebx, %esi;jb - <FT_Stream_OpenLZW+>": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %eax;popl %edi;popl %esi;leave": 1,
                "cld;movl (%ebp), %eax;popl %edi;popl %esi;leave": 1,
                "movl %ecx, %edx;cld;repne  scasb %es:(%edi), %al;sete %al;subl %ecx, %edx": 1,
                "xorl %eax, %eax;cld;lodsb (%esi), %al;scasb %es:(%edi), %al;jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%ecx), %ebx;movl (%ecx), %edi;movl (%ecx), %esi;movl (%ecx), %esp;jmpl *%edx": 1,
                "nop;pushl %ebp;movl %esp, %ebp;pushl %edi;movl (%ebp), %edi": 2,
                "je  <FT_Stream_OpenLZW+>;rep  stosb %al, %es:(%edi);popl %edi;movl (%ebp), %eax;leave": 1,
                "movl -(%ebp), %edx;leal (%edx,%edx,), %eax;addl %eax, %eax;movl %eax, -(%ebp);movl (%ebp), %esi": 1,
                "calll *%edx;testl %eax, %eax;jle  <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;movl %esi, (%esp)": 1,
                "movl %edi, %eax;movl %ebx, %edi;jmp  <FT_Stream_OpenLZW+>;movl %esi, %edi;movl %esi, %eax": 1,
                "movl %esi, %edi;movl %esi, %eax;movl -(%ebp), %ecx;addl %ebx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %edi, %ebx;testl %eax, %eax;jg - <FT_Stream_OpenLZW+>;movl -(%ebp), %ebx;jmp - <FT_Stream_OpenLZW+>": 1,
                "movl %edx, (%esp);movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %eax;calll - <FT_Stream_OpenLZW+>": 1,
                "leal (%edx,%eax,), %edi;movl (%ebp), %esi;movl %esi, %ebx;jmp  <FT_Stream_OpenLZW+>;movl %esi, (%esp)": 1,
                "jmp  <FT_Stream_OpenLZW+>;movl %esi, (%esp);movl %ebx, (%esp);movl (%ebp), %ecx;calll *%ecx": 1,
                "addl (%ebp), %esi;cmpl %esi, %edi;ja - <FT_Stream_OpenLZW+>;cmpl (%ebp), %ebx;jne  <FT_Stream_OpenLZW+>": 1,
                "movl (%ebp), %eax;movl %ecx, %esi;movzbl (%ebx), %ecx;movzbl (%eax), %edx;movb %dl, (%ebx)": 1,
                "cmpl %eax, %edi;ja  <FT_Stream_OpenLZW+>;movl %ecx, %edi;subl $, %edi;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %esi;movzbl (%edi), %eax;movb %al, -(%ebp);movl -(%ebp), %eax;cmpl %eax, %ebx": 1,
                "ja  <FT_Stream_OpenLZW+>;movl %edi, %ecx;jmp  <FT_Stream_OpenLZW+>;movl %edx, %eax;movzbl (%eax), %edx": 1,
                "movl %edx, %eax;movzbl (%eax), %edx;movb %dl, (%ecx);leal (%eax,%esi), %edx;movl %eax, %ecx": 1,
                "cmpl %edx, %ebx;jbe - <FT_Stream_OpenLZW+>;jmp  <FT_Stream_OpenLZW+>;movl %edi, %eax;movzbl -(%ebp), %edx": 1,
                "movl %edi, %eax;movzbl -(%ebp), %edx;movb %dl, (%eax);subl $, %edi;subl $, -(%ebp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %eax;movzbl (%eax), %esi": 1,
                "js  <FT_Stream_OpenLZW+>;lodsb (%esi), %al;scasb %es:(%edi), %al;jne  <FT_Stream_OpenLZW+>;testl %eax, %eax": 1,
                "orb $, %al;popl %edi;popl %esi;retl;nop": 1,
                "popl %esi;retl;nop;pushl %ebp;movl %esp, %ebp": 1,
                "testl %eax, (%ecx);popl %eax;popl %ecx;retl;pushl %ebp": 1,
                "movzwl (%ebp), %eax;movl %eax, (%esp);calll - <FT_Stream_OpenLZW+>;leave;retl": 1,
                "movl $, %eax;cmpl $, %ebx;jg  <FT_Stream_OpenLZW+>;movl %ebx, (%esp);calll - <FT_Stream_OpenLZW+>": 2,
                "movl %esp, %ebp;movl (%ebp), %eax;andl $, %eax;popl %ebp;retl": 1,
                "andw (%edx,%edx), %ax;movzwl %ax, %eax;popl %ebp;retl;nop": 1,
                "movzwl %ax, %eax;popl %ebp;retl;nop;nop": 1,
                "movl (%esp), %edx;movl %edi, (%esp);movl (%esp), %ecx;movl (%esp), %edi;movl %ebx, (%esp)": 1,
                "movl (%esp), %ecx;movl (%esp), %edi;movl %ebx, (%esp);movl (%esp), %ebx;testl %edx, %edx": 1,
                "cmpl %ebx, %ecx;ja  <FT_Stream_OpenLZW+>;testl %ecx, %ecx;jne  <FT_Stream_OpenLZW+>;movl $, %eax": 1,
                "jb  <FT_Stream_OpenLZW+>;leal (%esi), %esi;xorl %edx, %edx;xorl %eax, %eax;movl (%esp), %ebx": 1,
                "xorl %edx, %edx;jmp - <FT_Stream_OpenLZW+>;movl %edi, %ecx;movl $, %eax;subl %edi, %eax": 1,
                "subl %edi, %eax;shll %cl, %edx;movl %eax, %ecx;movl %edx, (%esp);movl %esi, %edx": 1,
                "shrl %cl, %edx;movl (%esp), %ecx;orl %ecx, %edx;movl %edi, %ecx;shll %cl, %esi": 1,
                "shll %cl, %esi;movl %eax, %ecx;movl %esi, (%esp);movl %ebx, %esi;shrl %cl, %esi": 1,
                "movl %esi, (%esp);movl %ebx, %esi;shrl %cl, %esi;movl %edi, %ecx;movl %edx, (%esp)": 1,
                "nop;nop;subl $, %esp;movl %esi, (%esp);movl (%esp), %esi": 1,
                "movl %ecx, %edi;movl %eax, %ebp;movl %eax, (%esp);movl %ebx, %edx;jne  <FT_Stream_OpenLZW+>": 1,
                "shrl %cl, %ebp;movzbl (%esp), %ecx;orl %eax, %ebp;movl (%esp), %eax;shll %cl, %edi": 1,
                "movl (%esp), %eax;shll %cl, %edi;movl %esi, %ecx;shrl %cl, %edx;movzbl (%esp), %ecx": 1,
                "movl %edx, %ecx;jb  <FT_Stream_OpenLZW+>;cmpl %eax, (%esp);jb  <FT_Stream_OpenLZW+>;movl (%esp), %eax": 1,
                "movzbl (%esp), %ecx;movl %ebx, %edx;shrl %cl, %eax;movl %esi, %ecx;shll %cl, %edx": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                ".text": 1,
                "P`.data": 1,
                ".rdata": 1,
                "0@.bss": 1,
                ".edata": 1,
                "0@.idata": 1,
                ".rsrc": 1,
                ".reloc": 1,
                "0B.rossym": 1,
                "^<Iu>": 1,
                "hu+;}": 1,
                "cinuu": 3,
                "H<+H4": 1,
                "@@+B8": 1,
                "cinuu>": 1,
                "xHpmocuL": 1,
                "t[^_]": 4,
                "<[^_]": 14,
                "9Y$v!": 2,
                "h[^_]": 1,
                "W(92t": 1,
                "W$9w\\u": 1,
                "4[^_]": 15,
                "8rcniu": 1,
                "ltuou": 2,
                "$[^_]": 24,
                "=stib": 1,
                "=ltuou": 1,
                "~Hstib": 1,
                "~Hltuo": 1,
                "~Hltuou4": 1,
                "FH=stibtD=pmoct=": 1,
                "x$ltuou": 2,
                "$ltuou/": 1,
                "D[^_]": 9,
                "{Hstibue": 1,
                "l[^_]": 3,
                "@Hltuo": 1,
                "{Hltuou4": 1,
                "{Hstibuk": 1,
                "FH=stib": 1,
                "=ltuo": 2,
                "xHltuou.": 1,
                "stibt": 1,
                "{Hstibu": 1,
                ",[^_]": 26,
                "T[^_]": 6,
                "C`+Ct": 1,
                "\\[^_]": 8,
                "@[^_]": 1,
                ";X,u(": 1,
                ";^,u#": 1,
                ";C,u$": 1,
                ";x,u(": 1,
                ";x,u#": 1,
                ";J0t/": 1,
                ";K0t5": 1,
                "K<9K8s": 1,
                "S<9S8r%": 1,
                "s4;s(s": 1,
                "@`9C\\rv": 1,
                "Sd9SXu": 1,
                "S`9S\\r": 2,
                "C`9C\\r": 1,
                "C8;C0": 1,
                "G,9G(t}": 1,
                "([^_]": 3,
                "CH=pmoc": 1,
                "X0+X$": 1,
                "@,+B ": 1,
                "CHltuo": 6,
                "^,9^(": 1,
                "@9G$|6": 1,
                "L[^_]": 7,
                "H [^_]": 1,
                "f9Xtw": 1,
                "f9C,v": 1,
                "f9SPw": 1,
                "f9Ptv": 1,
                "f9HPw": 1,
                "C$+C4": 1,
                "@Hpmoc": 1,
                "CHstib": 6,
                "{Hpmocu": 1,
                "~Hpmoct": 1,
                "=eurt": 1,
                "=mgpft.=perpt": 1,
                "= tvc": 1,
                "thgwu": 1,
                "htdwu": 1,
                "zspou": 1,
                "tnlsu": 1,
                "d[^_]": 1,
                "OPf;M": 1,
                "f9_tw": 1,
                "f9GPv": 1,
                "f9W,w": 2,
                "f;w,r": 1,
                "f9Gtw": 2,
                "f;G,r": 3,
                "f;OPs": 2,
                "f9GPw": 1,
                "f;W,s": 1,
                "f9OPv": 1,
                "f9Wtw": 1,
                "f;WPs": 1,
                "D$ E7": 3,
                "BODAf": 3,
                "EBDAf": 2,
                "CBDAf": 2,
                "1talf": 2,
                "< tL<": 1,
                "t0</t,<)t(<<": 1,
                "t <>t": 1,
                "ZH+ZD": 1,
                "YH+YDx": 1,
                "OTTOt": 2,
                "f;<Pu": 1,
                "GHltuo": 2,
                ";y`vB": 1,
                "|[^_]": 3,
                "FHltuof": 1,
                "FHstib": 1,
                " <_wQ": 1,
                " <_wF": 1,
                "S +S$": 1,
                "Cff9Cdu": 1,
                "nmraf": 1,
                "@Hstib": 1,
                "cinuf": 2,
                "< t&<": 1,
                "<\\uP9": 1,
                "<(tB</t><)": 1,
                "t<<<t?<>tB<[": 1,
                "tA<]tD<{tG<}": 1,
                "tF<%tI": 1,
                ";F }rk": 1,
                ";P(}v": 1,
                "CHpmoc": 1,
                "+H ;H": 1,
                "f+4Zf9": 1,
                ";99|2": 1,
                "N +H ": 1,
                "w +s ": 1,
                "~ +{ ": 1,
                "Z 9X t": 1,
                "t7;Y t": 1,
                "X$9X(r": 1,
                "P$9P(r": 1,
                "G$;G(w": 1,
                "8[^_]": 2,
                "9KHuC": 2,
                "H#CH;C": 1,
                "u&;GL|!;GP": 1,
                "W$9W(": 1,
                "0[^_]": 1,
                "H[^_]": 1,
                "dehbt": 1,
                "daehut": 1,
                "GNISt": 1,
                "ATEMu#": 1,
                "fpgit": 1,
                "spgiu": 1,
                "eurtu": 1,
                "fcttt.": 1,
                "eurtt": 1,
                "H4;H0|": 1,
                "CL;CH": 1,
                "<Pt;<P": 1,
                "<pt <c": 1,
                "$9C0w": 1,
                "F4;F0u=": 1,
                "F@;F<u=": 1,
                "r/9D$": 1,
                "FtfdDisablePDEV()": 1,
                "FtfdCompletePDEV()": 1,
                "FtfdEnablePDEV(hdev=%p)": 1,
                "FtfdEnableDriver()": 1,
                "an error occurred during library initialization: %ld.": 1,
                "FtfdLoadFontFile()": 1,
                "Only 1 File is allowed, got %ld!": 1,
                "Could not map font file!": 1,
                "No faces found in file": 1,
                "EngAllocMem() failed.": 1,
                "Success! Returning %ld faces": 1,
                "FtfdUnloadFontFile()": 1,
                "FtfdQueryFontFile(ulMode=%ld)": 1,
                "FtfdQueryFont()": 1,
                "iFace > pfile->cNumFaces || !pid": 1,
                "FT_New_Memory_Face failed": 1,
                "Finished with the ifi: %p": 1,
                "FtfdQueryFontCaps()": 1,
                "FtfdQueryFontTree()": 1,
                "FT_New_Memory_Face() failed.": 1,
                "charcode=0x%lx, index=0x%lx": 1,
                "pcp[0].index = 0x%lx": 1,
                "adding new run": 1,
                "pGlyphSet=%p": 1,
                "FtfdFree()": 1,
                "ft2: ": 1,
                "../../win32ss/drivers/font/ftfd/rosglue.c": 1,
                "(%s:%d) Freetype tries to open file %s": 1,
                "(%s:%d) DbgPrint() failed!": 1,
                "(%s:%d) Doubleplus ungood: freetype shouldn't fseek!": 1,
                "(%s:%d) Doubleplus ungood: freetype shouldn't ftell!": 1,
                "(%s:%d) Doubleplus ungood: freetype shouldn't fread!": 1,
                "(%s:%d) Doubleplus ungood: freetype shouldn't fclose!": 1,
                "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ": 1,
                "0123456789abcdefghijklmnopqrstuvwxyz": 1,
                "<NULL>": 1,
                "kerning": 2,
                "glyph-dict": 5,
                "postscript-font-name": 6,
                "sfnt-table": 3,
                "tt-cmaps": 3,
                "properties": 4,
                "truetype": 3,
                "truetype-engine": 2,
                "type42": 2,
                "truetypegx-validate": 1,
                "classickern-validate": 1,
                "ltuor": 1,
                "stibI": 1,
                "tt-glyf": 2,
                "multi-masters": 3,
                "pfr-metrics": 2,
                "postscript-info": 5,
                "winfonts": 2,
                "opentype-validate": 1,
                "unknown compression method": 1,
                "invalid window size": 1,
                "incorrect header check": 1,
                "need dictionary": 1,
                "invalid block type": 1,
                "invalid stored block lengths": 1,
                "too many length or distance symbols": 1,
                "oversubscribed dynamic bit lengths tree": 1,
                "incomplete dynamic bit lengths tree": 1,
                "invalid bit length repeat": 1,
                "oversubscribed literal/length tree": 1,
                "incomplete literal/length tree": 1,
                "oversubscribed distance tree": 1,
                "incomplete distance tree": 1,
                "empty distance tree with lengths": 1,
                "invalid literal/length code": 1,
                "invalid distance code": 1,
                "incorrect data check": 1,
                "glyph-to-script-map": 1,
                "fallback-script": 1,
                "increase-x-height": 1,
                "autofitter": 1,
                "THEZOCQS": 1,
                "HEZLOCUS": 1,
                "fijkdbh": 1,
                "xzroesc": 2,
                "pqgjy": 1,
                ".notdef": 4,
                "interpreter-version": 1,
                "Weight": 5,
                "Width": 2,
                "OpticalSize": 2,
                "Slant": 1,
                "DFKaiSho-SB": 1,
                "DFKaiShu": 1,
                "DFKai-SB": 1,
                "HuaTianKaiTi?": 1,
                "HuaTianSongTi?": 1,
                "MingLiU": 1,
                "PMingLiU": 1,
                "MingLi43": 1,
                "xf86-driver-name": 9,
                "TrueType": 1,
                "      ": 1,
                "!!!!!!": 1,
                "                                ": 1,
                "pshinter": 4,
                "StandardEncoding": 2,
                "ExpertEncoding": 2,
                "ISOLatin1Encoding": 2,
                "version": 3,
                "eexec": 1,
                "closefile": 1,
                "FontDirectory": 2,
                "CharStrings": 2,
                "%!PS-AdobeFont": 1,
                "%!FontType": 1,
                "postscript-cmaps": 6,
                "psaux": 4,
                "Regular": 8,
                "Black": 4,
                "type1": 1,
                "Notice": 4,
                "FullName": 4,
                "FamilyName": 4,
                "ItalicAngle": 4,
                "isFixedPitch": 3,
                "UnderlinePosition": 4,
                "UnderlineThickness": 4,
                "FSType": 3,
                "UniqueID": 2,
                "lenIV": 2,
                "LanguageGroup": 2,
                "password": 2,
                "BlueScale": 2,
                "BlueShift": 2,
                "BlueFuzz": 2,
                "BlueValues": 2,
                "OtherBlues": 2,
                "FamilyBlues": 2,
                "FamilyOtherBlues": 2,
                "StdHW": 3,
                "StdVW": 3,
                "MinFeature": 2,
                "StemSnapH": 2,
                "StemSnapV": 2,
                "ExpansionFactor": 2,
                "ForceBold": 2,
                "FontName": 3,
                "PaintType": 3,
                "FontType": 3,
                "StrokeWidth": 3,
                "FontBBox": 4,
                "DesignVector": 1,
                "FontMatrix": 3,
                "Encoding": 2,
                "Subrs": 1,
                "Private": 1,
                "BlendDesignPositions": 2,
                "BlendDesignMap": 2,
                "BlendAxisTypes": 2,
                "WeightVector": 2,
                "BuildCharArray": 1,
                "Type 1": 1,
                "hinting-engine": 1,
                "no-stem-darkening": 1,
                "CIDFontName": 1,
                "%!PS-Adobe-3.0 Resource-CIDFont": 1,
                "StartData": 1,
                "/sfnts": 1,
                "(Hex)": 1,
                "%ADOBeginFontDict": 1,
                "t1cid": 1,
                "CIDFontVersion": 1,
                "CIDFontType": 1,
                "Registry": 1,
                "Ordering": 1,
                "Supplement": 1,
                "UIDBase": 1,
                "CIDMapOffset": 1,
                "FDBytes": 1,
                "GDBytes": 1,
                "CIDCount": 1,
                "SubrMapOffset": 1,
                "SDBytes": 1,
                "SubrCount": 1,
                "lenBuildCharArray": 1,
                "ForceBoldThreshold": 1,
                "FDArray": 1,
                "CID Type 1": 1,
                "%!PS-TrueTypeFont": 1,
                "known": 1,
                "sfnts": 1,
                "Type 42": 1,
                "Bold Italic": 1,
                "Italic": 3,
                "Windows FNT": 1,
                "Oblique": 2,
                "SLANT": 2,
                "WEIGHT_NAME": 2,
                "SETWIDTH_NAME": 2,
                "ADD_STYLE_NAME": 2,
                "FAMILY_NAME": 2,
                "AVERAGE_WIDTH": 2,
                "POINT_SIZE": 2,
                "PIXEL_SIZE": 2,
                "RESOLUTION_X": 2,
                "RESOLUTION_Y": 2,
                "CHARSET_REGISTRY": 3,
                "CHARSET_ENCODING": 3,
                "10646": 2,
                "StartFontMetrics": 1,
                "Ascender": 1,
                "AxisLabel": 1,
                "AxisType": 1,
                "CapHeight": 1,
                "CharWidth": 1,
                "CharacterSet": 1,
                "Characters": 1,
                "Descender": 1,
                "EncodingScheme": 1,
                "EndAxis": 1,
                "EndCharMetrics": 1,
                "EndComposites": 1,
                "EndDirection": 1,
                "EndFontMetrics": 1,
                "EndKernData": 1,
                "EndKernPairs": 1,
                "EndTrackKern": 1,
                "EscChar": 1,
                "IsBaseFont": 1,
                "IsCIDFont": 1,
                "IsFixedPitch": 1,
                "IsFixedV": 1,
                "MappingScheme": 1,
                "MetricsSets": 1,
                "StartAxis": 1,
                "StartCharMetrics": 1,
                "StartComposites": 1,
                "StartDirection": 1,
                "StartKernData": 1,
                "StartKernPairs": 1,
                "StartKernPairs0": 1,
                "StartKernPairs1": 1,
                "StartTrackKern": 1,
                "TrackKern": 1,
                "VVector": 1,
                "Version": 1,
                "XHeight": 1,
                "psnames": 1,
                ".null": 1,
                "nonmarkingreturn": 1,
                "notequal": 1,
                "infinity": 1,
                "lessequal": 1,
                "greaterequal": 1,
                "partialdiff": 1,
                "summation": 1,
                "product": 1,
                "integral": 1,
                "Omega": 2,
                "radical": 1,
                "approxequal": 1,
                "Delta": 2,
                "nonbreakingspace": 1,
                "lozenge": 1,
                "apple": 1,
                "franc": 1,
                "Gbreve": 1,
                "gbreve": 1,
                "Idotaccent": 1,
                "Scedilla": 1,
                "scedilla": 1,
                "Cacute": 1,
                "cacute": 1,
                "Ccaron": 1,
                "ccaron": 1,
                "dcroat": 1,
                "space": 2,
                "exclam": 1,
                "quotedbl": 1,
                "numbersign": 1,
                "dollar": 1,
                "percent": 1,
                "ampersand": 1,
                "quoteright": 1,
                "parenleft": 1,
                "parenright": 1,
                "asterisk": 1,
                "comma": 1,
                "hyphen": 2,
                "period": 1,
                "slash": 1,
                "three": 1,
                "seven": 1,
                "eight": 1,
                "colon": 1,
                "semicolon": 1,
                "equal": 1,
                "greater": 1,
                "question": 1,
                "bracketleft": 1,
                "backslash": 1,
                "bracketright": 1,
                "asciicircum": 1,
                "underscore": 1,
                "quoteleft": 1,
                "braceleft": 1,
                "braceright": 1,
                "asciitilde": 1,
                "exclamdown": 1,
                "sterling": 1,
                "fraction": 2,
                "florin": 1,
                "section": 1,
                "currency": 1,
                "quotesingle": 1,
                "quotedblleft": 1,
                "guillemotleft": 1,
                "guilsinglleft": 1,
                "guilsinglright": 1,
                "endash": 1,
                "dagger": 1,
                "daggerdbl": 1,
                "periodcentered": 2,
                "paragraph": 1,
                "bullet": 1,
                "quotesinglbase": 1,
                "quotedblbase": 1,
                "quotedblright": 1,
                "guillemotright": 1,
                "ellipsis": 1,
                "perthousand": 1,
                "questiondown": 1,
                "grave": 1,
                "acute": 1,
                "circumflex": 1,
                "tilde": 1,
                "macron": 2,
                "breve": 1,
                "dotaccent": 1,
                "dieresis": 1,
                "cedilla": 1,
                "hungarumlaut": 1,
                "ogonek": 1,
                "caron": 1,
                "emdash": 1,
                "ordfeminine": 1,
                "Lslash": 1,
                "Oslash": 1,
                "ordmasculine": 1,
                "dotlessi": 1,
                "lslash": 1,
                "oslash": 1,
                "germandbls": 1,
                "onesuperior": 1,
                "logicalnot": 1,
                "trademark": 1,
                "onehalf": 1,
                "plusminus": 1,
                "Thorn": 1,
                "onequarter": 1,
                "divide": 1,
                "brokenbar": 1,
                "degree": 1,
                "thorn": 1,
                "threequarters": 1,
                "twosuperior": 1,
                "registered": 1,
                "minus": 1,
                "multiply": 1,
                "threesuperior": 1,
                "copyright": 1,
                "Aacute": 1,
                "Acircumflex": 1,
                "Adieresis": 1,
                "Agrave": 1,
                "Aring": 1,
                "Atilde": 1,
                "Ccedilla": 1,
                "Eacute": 1,
                "Ecircumflex": 1,
                "Edieresis": 1,
                "Egrave": 1,
                "Iacute": 1,
                "Icircumflex": 1,
                "Idieresis": 1,
                "Igrave": 1,
                "Ntilde": 1,
                "Oacute": 1,
                "Ocircumflex": 1,
                "Odieresis": 1,
                "Ograve": 1,
                "Otilde": 1,
                "Scaron": 1,
                "Uacute": 1,
                "Ucircumflex": 1,
                "Udieresis": 1,
                "Ugrave": 1,
                "Yacute": 1,
                "Ydieresis": 1,
                "Zcaron": 1,
                "aacute": 1,
                "acircumflex": 1,
                "adieresis": 1,
                "agrave": 1,
                "aring": 1,
                "atilde": 1,
                "ccedilla": 1,
                "eacute": 1,
                "ecircumflex": 1,
                "edieresis": 1,
                "egrave": 1,
                "iacute": 1,
                "icircumflex": 1,
                "idieresis": 1,
                "igrave": 1,
                "ntilde": 1,
                "oacute": 1,
                "ocircumflex": 1,
                "odieresis": 1,
                "ograve": 1,
                "otilde": 1,
                "scaron": 1,
                "uacute": 1,
                "ucircumflex": 1,
                "udieresis": 1,
                "ugrave": 1,
                "yacute": 1,
                "ydieresis": 1,
                "zcaron": 1,
                "exclamsmall": 1,
                "Hungarumlautsmall": 1,
                "dollaroldstyle": 1,
                "dollarsuperior": 1,
                "ampersandsmall": 1,
                "Acutesmall": 1,
                "parenleftsuperior": 1,
                "parenrightsuperior": 1,
                "twodotenleader": 1,
                "onedotenleader": 1,
                "zerooldstyle": 1,
                "oneoldstyle": 1,
                "twooldstyle": 1,
                "threeoldstyle": 1,
                "fouroldstyle": 1,
                "fiveoldstyle": 1,
                "sixoldstyle": 1,
                "sevenoldstyle": 1,
                "eightoldstyle": 1,
                "nineoldstyle": 1,
                "commasuperior": 1,
                "threequartersemdash": 1,
                "periodsuperior": 1,
                "questionsmall": 1,
                "asuperior": 1,
                "bsuperior": 1,
                "centsuperior": 1,
                "dsuperior": 1,
                "esuperior": 1,
                "isuperior": 1,
                "lsuperior": 1,
                "msuperior": 1,
                "nsuperior": 1,
                "osuperior": 1,
                "rsuperior": 1,
                "ssuperior": 1,
                "tsuperior": 1,
                "parenleftinferior": 1,
                "parenrightinferior": 1,
                "Circumflexsmall": 1,
                "hyphensuperior": 1,
                "Gravesmall": 1,
                "Asmall": 1,
                "Bsmall": 1,
                "Csmall": 1,
                "Dsmall": 1,
                "Esmall": 1,
                "Fsmall": 1,
                "Gsmall": 1,
                "Hsmall": 1,
                "Ismall": 1,
                "Jsmall": 1,
                "Ksmall": 1,
                "Lsmall": 1,
                "Msmall": 1,
                "Nsmall": 1,
                "Osmall": 1,
                "Psmall": 1,
                "Qsmall": 1,
                "Rsmall": 1,
                "Ssmall": 1,
                "Tsmall": 1,
                "Usmall": 1,
                "Vsmall": 1,
                "Wsmall": 1,
                "Xsmall": 1,
                "Ysmall": 1,
                "Zsmall": 1,
                "colonmonetary": 1,
                "onefitted": 1,
                "rupiah": 1,
                "Tildesmall": 1,
                "exclamdownsmall": 1,
                "centoldstyle": 1,
                "Lslashsmall": 1,
                "Scaronsmall": 1,
                "Zcaronsmall": 1,
                "Dieresissmall": 1,
                "Brevesmall": 1,
                "Caronsmall": 1,
                "Dotaccentsmall": 1,
                "Macronsmall": 1,
                "figuredash": 1,
                "hypheninferior": 1,
                "Ogoneksmall": 1,
                "Ringsmall": 1,
                "Cedillasmall": 1,
                "questiondownsmall": 1,
                "oneeighth": 1,
                "threeeighths": 1,
                "fiveeighths": 1,
                "seveneighths": 1,
                "onethird": 1,
                "twothirds": 1,
                "zerosuperior": 1,
                "foursuperior": 1,
                "fivesuperior": 1,
                "sixsuperior": 1,
                "sevensuperior": 1,
                "eightsuperior": 1,
                "ninesuperior": 1,
                "zeroinferior": 1,
                "oneinferior": 1,
                "twoinferior": 1,
                "threeinferior": 1,
                "fourinferior": 1,
                "fiveinferior": 1,
                "sixinferior": 1,
                "seveninferior": 1,
                "eightinferior": 1,
                "nineinferior": 1,
                "centinferior": 1,
                "dollarinferior": 1,
                "periodinferior": 1,
                "commainferior": 1,
                "Agravesmall": 1,
                "Aacutesmall": 1,
                "Acircumflexsmall": 1,
                "Atildesmall": 1,
                "Adieresissmall": 1,
                "Aringsmall": 1,
                "AEsmall": 1,
                "Ccedillasmall": 1,
                "Egravesmall": 1,
                "Eacutesmall": 1,
                "Ecircumflexsmall": 1,
                "Edieresissmall": 1,
                "Igravesmall": 1,
                "Iacutesmall": 1,
                "Icircumflexsmall": 1,
                "Idieresissmall": 1,
                "Ethsmall": 1,
                "Ntildesmall": 1,
                "Ogravesmall": 1,
                "Oacutesmall": 1,
                "Ocircumflexsmall": 1,
                "Otildesmall": 1,
                "Odieresissmall": 1,
                "OEsmall": 1,
                "Oslashsmall": 1,
                "Ugravesmall": 1,
                "Uacutesmall": 1,
                "Ucircumflexsmall": 1,
                "Udieresissmall": 1,
                "Yacutesmall": 1,
                "Thornsmall": 1,
                "Ydieresissmall": 1,
                "001.000": 1,
                "001.001": 1,
                "001.002": 1,
                "001.003": 1,
                "Light": 1,
                "Medium": 1,
                "Roman": 1,
                "Semibold": 1,
                "Tcommaaccent": 1,
                "tcommaaccent": 1,
                "PmXh]=b": 1,
                "j[ros": 1,
                " < C O [ c": 1,
                "Y!Q!t!": 1,
                "\"(\"4\"<\"Da": 1,
                "#\\#g#w#": 1,
                "(D(~(": 1,
                "$2$r$": 1,
                "'!$J$N$R$V$Z$^$b$f$j$n0": 1,
                "%2%6%:%>%B%F%J%N%R%V0": 1,
                "%r%v%z%~%": 1,
                "&2&6&:&>&B&F&J&N&R&V0": 1,
                "&r&v&z&~&": 1,
                "' '$'(','0'4'8'<'@0": 1,
                "'\\'`'d'h'l'p't'x'|'": 1,
                "( ($(((,(0(4(8(<(@0": 1,
                "(Z(^(b(f(j(n(r(v(z1": 1,
                ")*)4);": 1,
                ")P)y)": 1,
                "*I*T*e*l*u": 1,
                "+!+5-": 1,
                "+>-V-": 1,
                "+R+f+": 1,
                ", ,^,": 1,
                "+Z+^+b7": 1,
                ",6,:,>,B,F,J,N,R,V,Z0": 1,
                ",t,x,|,": 1,
                "-.-2-6-:->-B-F-J-N-R0": 1,
                "-v-z-~-": 1,
                "1\"1i3": 1,
                ".\".08": 1,
                ".(.,1": 1,
                ".B.F.J.N.R.V.Z.^2": 1,
                "/./f/": 1,
                "/\"/&/*0": 1,
                "/B/F/J/N/R/V/Z/^/b0": 1,
                "/z/~/": 1,
                "050s0": 1,
                "0!0%0)0-014": 1,
                "0K0O0S0W0[0_0c0g0k0o0": 1,
                "1*1V1[0": 1,
                "1:1>1B1F1J1N1R0": 1,
                "1a1e1": 1,
                "2)202<2U2e2": 1,
                "2q2z2": 1,
                "4G4Pe": 1,
                "3)323A3O3": 1,
                "4j4r4}4": 1,
                "5_5i5p": 1,
                "6*6.6[": 1,
                "6o6v6": 1,
                "797k7": 1,
                "7F7W7c": 1,
                "9@9Y9`9y9": 1,
                ">H>T>": 1,
                "@'@0a": 1,
                ":>:H:`:g:": 1,
                ";(;1;?;];": 1,
                "<U<`<k<y<": 1,
                ">7>Ba": 1,
                ">\\>i>t": 1,
                "? ?(?-": 1,
                "[?O?T?Y?e": 1,
                "@8@C@N": 1,
                " \"@^@h": 1,
                "AiAtA": 1,
                "E+E\\HTH\\HfHrH": 1,
                "A;AAA[": 1,
                "B<B{B": 1,
                "BFBQB[Bb": 1,
                "CQCtC": 1,
                "D&D4a": 1,
                "DWDbDgD": 1,
                "E3EAEL": 1,
                "EnEyE": 1,
                "F'F2F>F\\Fsa": 1,
                "G+GXGfGkGpGuG{G": 1,
                "G!G&C": 1,
                "G7G;G@GEGJM": 1,
                "GPGTB": 1,
                "G^GbF": 1,
                "LrMDM": 1,
                "N;NHNQNkN": 1,
                "J1J7JU": 1,
                "I&I,I:IJ": 1,
                "IaIrI": 1,
                "JvKsK}l": 1,
                "K&K8KFKQ": 1,
                "L'LZa": 1,
                "L0L:LA": 1,
                "MJM|a": 1,
                "MRM\\Mc": 1,
                "O5OFO\\OgO": 1,
                "OpOti": 1,
                "P(P;P`": 1,
                "R%R<RqS": 1,
                "V$VYW": 1,
                "Q)Q7QWQ": 1,
                "RFRQR\\Rf": 1,
                "SLSnSzS": 1,
                "S%S?a": 1,
                "T#T.Tk": 1,
                "TETNTc": 1,
                "UEUeUt": 1,
                "KUMUX": 1,
                "V,V7VB": 1,
                "VgVrV": 1,
                "W$W>WBWSW": 1,
                "XCXVXac": 1,
                "Y]Ym[u[": 1,
                "]!])a": 1,
                "YLYVh": 1,
                "YeYii": 1,
                "ZDZUZ]Zj": 1,
                "[#[/[:[[[c[n": 1,
                "\\!\\(\\A\\\\\\~\\": 1,
                "g]a^+^B^": 1,
                "_A`:`": 1,
                "a'aCaYb\"b8b": 1,
                "^L^S^\\^r": 1,
                "`*`0a": 1,
                "_W_a_x_": 1,
                "`B`M`X": 1,
                "bBbMb": 1,
                "eZe}e": 1,
                "gZgnhKhWhci": 1,
                "c7cPc": 1,
                "d6d?a": 1,
                "cZcccqc": 1,
                "d]dbdpdyd": 1,
                "dhdl3": 1,
                "e e%e.e=eM": 1,
                "ebegeq": 1,
                "g5g>gK": 1,
                "f!f=fEfwf": 1,
                "i(i4i:iP": 1,
                "-j'j2j>jU": 1,
                "qYqaqnq": 1,
                "k k.k;m": 1,
                "kZkjk": 1,
                "lElblrl": 1,
                "mRmom}m": 1,
                "oEoOoZoaozo": 1,
                "p#p7pP": 1,
                "q4qIqQ": 1,
                "r*r4r;": 1,
                "s1s:sHsX": 1,
                "vnvyv": 1,
                "yZygy": 1,
                "z<zRz_zvz": 1,
                "t/tOtet": 1,
                "u,uEu": 1,
                "v8vUb": 1,
                "uluzu": 1,
                "wDwNwYw`wy": 1,
                "x>xoxyx~": 1,
                "xIxRx[xe": 1,
                "y'y6y?yMa": 1,
                "}V}|~": 1,
                "~-~E~W~": 1,
                "|=|K|^|n|": 1,
                "{U{c{": 1,
                "}%}.}I": 1,
                "@}`}i": 1,
                "~c~{~": 1,
                "raster5": 1,
                "raster1": 1,
                "smooth-lcdv": 1,
                "smooth-lcd": 1,
                "smooth": 1,
                "ltuo<": 1,
                "COMMENT": 1,
                "DEFAULT_CHAR": 1,
                "FONT_ASCENT": 1,
                "FONT_DESCENT": 1,
                "SPACING": 1,
                "STARTFONT": 1,
                "STARTPROPERTIES": 1,
                "FONTBOUNDINGBOX": 1,
                "CHARS": 1,
                "ENDPROPERTIES": 1,
                "_XFREE86_GLYPH_RANGES": 1,
                "ENDFONT": 1,
                "ENDCHAR": 1,
                "STARTCHAR": 1,
                "ENCODING": 1,
                "SWIDTH": 1,
                "DWIDTH": 1,
                "BITMAP": 1,
                "AVG_CAPITAL_WIDTH": 1,
                "AVG_LOWERCASE_WIDTH": 1,
                "CAP_HEIGHT": 1,
                "CHARSET_COLLECTIONS": 1,
                "COPYRIGHT": 1,
                "DESTINATION": 1,
                "DEVICE_FONT_NAME": 1,
                "END_SPACE": 1,
                "FACE_NAME": 1,
                "FIGURE_WIDTH": 1,
                "FONTNAME_REGISTRY": 1,
                "FOUNDRY": 1,
                "FULL_NAME": 1,
                "ITALIC_ANGLE": 1,
                "MAX_SPACE": 1,
                "MIN_SPACE": 1,
                "NORM_SPACE": 1,
                "NOTICE": 1,
                "QUAD_WIDTH": 1,
                "RAW_ASCENT": 1,
                "RAW_AVERAGE_WIDTH": 1,
                "RAW_AVG_CAPITAL_WIDTH": 1,
                "RAW_AVG_LOWERCASE_WIDTH": 1,
                "RAW_CAP_HEIGHT": 1,
                "RAW_DESCENT": 1,
                "RAW_END_SPACE": 1,
                "RAW_FIGURE_WIDTH": 1,
                "RAW_MAX_SPACE": 1,
                "RAW_MIN_SPACE": 1,
                "RAW_NORM_SPACE": 1,
                "RAW_PIXEL_SIZE": 1,
                "RAW_POINT_SIZE": 1,
                "RAW_PIXELSIZE": 1,
                "RAW_POINTSIZE": 1,
                "RAW_QUAD_WIDTH": 1,
                "RAW_SMALL_CAP_SIZE": 1,
                "RAW_STRIKEOUT_ASCENT": 1,
                "RAW_STRIKEOUT_DESCENT": 1,
                "RAW_SUBSCRIPT_SIZE": 1,
                "RAW_SUBSCRIPT_X": 1,
                "RAW_SUBSCRIPT_Y": 1,
                "RAW_SUPERSCRIPT_SIZE": 1,
                "RAW_SUPERSCRIPT_X": 1,
                "RAW_SUPERSCRIPT_Y": 1,
                "RAW_UNDERLINE_POSITION": 1,
                "RAW_UNDERLINE_THICKNESS": 1,
                "RAW_X_HEIGHT": 1,
                "RELATIVE_SETWIDTH": 1,
                "RELATIVE_WEIGHT": 1,
                "RESOLUTION": 1,
                "SMALL_CAP_SIZE": 1,
                "STRIKEOUT_ASCENT": 1,
                "STRIKEOUT_DESCENT": 1,
                "SUBSCRIPT_SIZE": 1,
                "SUBSCRIPT_X": 1,
                "SUBSCRIPT_Y": 1,
                "SUPERSCRIPT_SIZE": 1,
                "SUPERSCRIPT_X": 1,
                "SUPERSCRIPT_Y": 1,
                "UNDERLINE_POSITION": 1,
                "UNDERLINE_THICKNESS": 1,
                "WEIGHT": 1,
                "X_HEIGHT": 1,
                "_MULE_BASELINE_OFFSET": 1,
                "_MULE_RELATIVE_COMPOSE": 1,
                " b b b b": 1,
                "libgcc.a.dbg": 1,
                "0 ]libgcc.a.dbg": 1,
                "ftfd.dll": 1,
                "FT_Activate_Size": 2,
                "FT_Add_Default_Modules": 2,
                "FT_Add_Module": 2,
                "FT_Angle_Diff": 2,
                "FT_Atan2": 2,
                "FT_Attach_File": 2,
                "FT_Attach_Stream": 2,
                "FT_Bitmap_Convert": 2,
                "FT_Bitmap_Copy": 2,
                "FT_Bitmap_Done": 2,
                "FT_Bitmap_Embolden": 2,
                "FT_Bitmap_New": 2,
                "FT_CeilFix": 2,
                "FT_ClassicKern_Free": 2,
                "FT_ClassicKern_Validate": 2,
                "FT_Cos": 2,
                "FT_DivFix": 2,
                "FT_Done_Face": 2,
                "FT_Done_FreeType": 2,
                "FT_Done_Glyph": 2,
                "FT_Done_Library": 2,
                "FT_Done_Size": 2,
                "FT_Face_CheckTrueTypePatents": 2,
                "FT_Face_SetUnpatentedHinting": 2,
                "FT_FloorFix": 2,
                "FT_Get_CMap_Format": 2,
                "FT_Get_CMap_Language_ID": 2,
                "FT_Get_Char_Index": 2,
                "FT_Get_Charmap_Index": 2,
                "FT_Get_First_Char": 2,
                "FT_Get_Glyph": 2,
                "FT_Get_Glyph_Name": 2,
                "FT_Get_Kerning": 2,
                "FT_Get_MM_Var": 2,
                "FT_Get_Module": 2,
                "FT_Get_Multi_Master": 2,
                "FT_Get_Name_Index": 2,
                "FT_Get_Next_Char": 2,
                "FT_Get_PFR_Advance": 2,
                "FT_Get_PFR_Kerning": 2,
                "FT_Get_PFR_Metrics": 2,
                "FT_Get_PS_Font_Info": 2,
                "FT_Get_PS_Font_Private": 2,
                "FT_Get_Postscript_Name": 2,
                "FT_Get_Renderer": 2,
                "FT_Get_Sfnt_Name": 2,
                "FT_Get_Sfnt_Name_Count": 2,
                "FT_Get_Sfnt_Table": 2,
                "FT_Get_SubGlyph_Info": 2,
                "FT_Get_Track_Kerning": 2,
                "FT_Get_TrueType_Engine_Type": 2,
                "FT_Get_WinFNT_Header": 2,
                "FT_GlyphSlot_Embolden": 2,
                "FT_GlyphSlot_Oblique": 2,
                "FT_GlyphSlot_Own_Bitmap": 2,
                "FT_Glyph_Copy": 2,
                "FT_Glyph_Get_CBox": 2,
                "FT_Glyph_Stroke": 2,
                "FT_Glyph_StrokeBorder": 2,
                "FT_Glyph_To_Bitmap": 2,
                "FT_Glyph_Transform": 2,
                "FT_Has_PS_Glyph_Names": 2,
                "FT_Init_FreeType": 2,
                "FT_Library_Version": 2,
                "FT_List_Add": 2,
                "FT_List_Finalize": 2,
                "FT_List_Find": 2,
                "FT_List_Insert": 2,
                "FT_List_Iterate": 2,
                "FT_List_Remove": 2,
                "FT_List_Up": 2,
                "FT_Load_Char": 2,
                "FT_Load_Glyph": 2,
                "FT_Load_Sfnt_Table": 2,
                "FT_Matrix_Invert": 2,
                "FT_Matrix_Multiply": 2,
                "FT_MulDiv": 2,
                "FT_MulFix": 2,
                "FT_New_Face": 2,
                "FT_New_Library": 2,
                "FT_New_Memory_Face": 2,
                "FT_New_Size": 2,
                "FT_OpenType_Free": 2,
                "FT_OpenType_Validate": 2,
                "FT_Open_Face": 2,
                "FT_Outline_Check": 2,
                "FT_Outline_Copy": 2,
                "FT_Outline_Decompose": 2,
                "FT_Outline_Done": 2,
                "FT_Outline_Done_Internal": 2,
                "FT_Outline_Embolden": 2,
                "FT_Outline_GetInsideBorder": 2,
                "FT_Outline_GetOutsideBorder": 2,
                "FT_Outline_Get_BBox": 2,
                "FT_Outline_Get_Bitmap": 2,
                "FT_Outline_Get_CBox": 2,
                "FT_Outline_Get_Orientation": 2,
                "FT_Outline_New": 2,
                "FT_Outline_New_Internal": 2,
                "FT_Outline_Render": 2,
                "FT_Outline_Reverse": 2,
                "FT_Outline_Transform": 2,
                "FT_Outline_Translate": 2,
                "FT_Remove_Module": 2,
                "FT_Render_Glyph": 2,
                "FT_Request_Size": 2,
                "FT_RoundFix": 2,
                "FT_Select_Charmap": 2,
                "FT_Select_Size": 2,
                "FT_Set_Char_Size": 2,
                "FT_Set_Charmap": 2,
                "FT_Set_Debug_Hook": 2,
                "FT_Set_MM_Blend_Coordinates": 2,
                "FT_Set_MM_Design_Coordinates": 2,
                "FT_Set_Pixel_Sizes": 2,
                "FT_Set_Renderer": 2,
                "FT_Set_Transform": 2,
                "FT_Set_Var_Blend_Coordinates": 2,
                "FT_Set_Var_Design_Coordinates": 2,
                "FT_Sfnt_Table_Info": 2,
                "FT_Sin": 2,
                "FT_Stream_OpenGzip": 2,
                "FT_Stream_OpenLZW": 2,
                "FT_Stroker_BeginSubPath": 2,
                "FT_Stroker_ConicTo": 2,
                "FT_Stroker_CubicTo": 2,
                "FT_Stroker_Done": 2,
                "FT_Stroker_EndSubPath": 2,
                "FT_Stroker_Export": 2,
                "FT_Stroker_ExportBorder": 2,
                "FT_Stroker_GetBorderCounts": 2,
                "FT_Stroker_GetCounts": 2,
                "FT_Stroker_LineTo": 2,
                "FT_Stroker_New": 2,
                "FT_Stroker_ParseOutline": 2,
                "FT_Stroker_Rewind": 2,
                "FT_Stroker_Set": 2,
                "FT_Tan": 2,
                "FT_TrueTypeGX_Free": 2,
                "FT_TrueTypeGX_Validate": 2,
                "FT_Vector_From_Polar": 2,
                "FT_Vector_Length": 2,
                "FT_Vector_Polarize": 2,
                "FT_Vector_Rotate": 2,
                "FT_Vector_Transform": 2,
                "FT_Vector_Unit": 2,
                "EngAllocMem": 2,
                "EngDebugPrint": 2,
                "EngFreeMem": 2,
                "EngMapFontFileFD": 2,
                "EngMultiByteToUnicodeN": 2,
                "EngUnmapFontFileFD": 2,
                "win32k.sys": 1,
                "0<0X0o0": 1,
                "101X1f1": 1,
                "3L3c3": 1,
                "6\"7J7]7": 1,
                "8n8~8": 1,
                "9M9`9": 1,
                ":K:~:": 1,
                ";0;7;Y;`;y;": 1,
                "7q=o>": 1,
                "52H3c7": 1,
                "=Y>i?": 1,
                ";3;D;": 1,
                ";t=)>": 1,
                "8);0;": 1,
                "*2127:": 1,
                "6S6x6": 1,
                "b1l1x1": 1,
                "4(4?4K4U4_4~4": 1,
                "4 4*444^4": 1,
                "7&7p7": 1,
                "7{8<:": 1,
                ":m:(>K>": 1,
                ";);A;.=": 1,
                "3(4?4": 1,
                "4B4m4": 1,
                "616W8Z?": 1,
                ",004y4);": 1,
                ">5?m?": 1,
                ":L;S=u=": 1,
                "4c6.?": 1,
                "304B4K4X4": 1,
                ">)>a?": 1,
                "<&<O<T<": 1,
                "/1G1`1": 1,
                "3^9e9l9s9z9": 1,
                "=#=*=1=": 1,
                "k2r2y2": 1,
                "4N4Y4a4h4": 1,
                "4'515_8d8{8": 1,
                "81969": 1,
                "!?(?/?": 1,
                ")030=0G0Q0[0": 1,
                "1A2K2U2_2": 1,
                "2'3I3": 1,
                "9 9'9s9": 1,
                "N0%7C7": 1,
                "1i2s2}2": 1,
                "<\"<+<4<=<R=D>": 1,
                "829G9": 1,
                "9O:u:": 1,
                ">J>e>": 1,
                "?4?R?s?": 1,
                ";@;[;w;": 1,
                "<c={=": 1,
                "1%2z4": 1,
                "515k5": 1,
                "0$0,040<0D0L0T0\\0`0d0": 1,
                "4484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4": 1,
                "5 5$5(5,5054585<5@5D5H5L5`5d5h5l5p5": 1,
                "6 6$6(6": 1,
                "7 7$7(7,7074787<7@7D7H7L7P7T7X7": 1,
                "7@8D8H8L8X:\\:`:d:h:l:p:t:x:|:": 1,
                "(?4?8?<?@?P?d?p?t?|?": 1,
                "0<0@0P0T0`0d0h0l0(7,7@7D7H7L7P7T7X7\\7": 1,
                "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8": 2,
                "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9": 2,
                "9H:X:\\:`:p:t:x:|:": 1,
                ":@=D=H=L=P=T=X=\\=`=d=": 1,
                "(0,00080<0@0": 1,
                "0H1L1P1T1X1\\1`1d1h1l1p1t1x1|1": 1,
                "1(282<2@2P2T2X2\\2`2d2h2l2p2t2x2`4": 1,
                "585\\5": 1,
                "646X6|6": 1,
                "707T7x7": 1,
                "8,8P8t8": 1,
                "9(9L9p9|9": 1,
                ":$:0:H:T:l:x:": 1,
                ":`;d;h;l;p;t;x;|;": 1,
                "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<": 1,
                "<$=(=,=0=h=x=|=": 1,
                "0$0H0l0": 1,
                "0 1D1h1": 1,
                "2@2d2": 1,
                "3<3`3": 1,
                "484\\4": 1,
                "545X5|5": 1,
                "606T6x6": 1,
                "8(8@8P8T8`8d8h8l8": 1,
                "8d9l9t9|9": 1,
                "<,<P<t<": 1,
                "=(=L=p=": 1,
                ">$>0>H>T>": 1,
                "3$3(3,303": 1,
                "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5": 1,
                "6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6": 1,
                "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7": 2,
                ": :$:(:,:0:4:8:d:h:l:p:": 1,
                ":$;(;,;0;h;t;": 1,
                "< <`?d?h?l?p?t?x?|?": 1,
                "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0": 1,
                "0 1$1(1,1014181h1t1": 1,
                " 1$1(1,1014181<1h5t5x5|5": 1,
                "5(686H6L6P6T6X6`6d6h6l6p6": 1,
                "8$8(8,8084888<8@8D8L8P8d8l8p8": 1,
                "9$9,909L9P9d9l9p9": 1,
                ":$:,:0:L:P:": 1,
                "? ?$?(?,?0?4?@?D?H?L?P?T?X?\\?": 1,
                "0H0X0h0l0p0t0x0": 1,
                "7 707@7P7`7p7": 1,
                "8 808@8P8`8p8": 1,
                "9 909@9P9`9p9": 1,
                ": :0:@:P:`:p:": 1,
                "; ;0;@;P;`;p;": 1,
                "< <X=\\=`=d=p=t=": 1,
                "lib/3rdparty/freetype/src/lzw/ftzopen.c": 1,
                "PCF_Size_Request": 1,
                "iswlower": 1,
                "t1_builder_add_contour": 1,
                "FT_GlyphLoader_Add": 1,
                "FT_GlyphLoader_Rewind": 1,
                "FT_Property_Get": 1,
                "t1_cmap_unicode_init": 1,
                "cid_driver_done": 1,
                "lib/3rdparty/freetype/src/autofit/afhints.c": 1,
                "ft_highpow2": 1,
                "inflate_blocks_reset": 1,
                "_bdf_list_shift": 1,
                "ft_ansi_stream_close": 1,
                "cid_slot_init": 1,
                "FT_Stream_ReadULong": 1,
                "_bdf_add_comment": 1,
                "ft_smooth_init": 1,
                "FT_Stream_GetUShort": 1,
                "ft_mem_strcpyn": 1,
                "TT_Load_Context": 1,
                "cff_parse_real": 1,
                "Read_CVT_Stretched": 1,
                "Project_x": 1,
                "Project_y": 1,
                "afm_parser_read_vals": 1,
                "lib/3rdparty/freetype/src/cff/cffparse.c": 1,
                "tt_face_get_name": 1,
                "Round_None": 1,
                "tt_property_set": 1,
                "cff_parse_num": 1,
                "hash_insert": 1,
                "af_hint_normal_stem": 1,
                "FT_Stream_Close": 1,
                "t42_parse_encoding": 1,
                "ft_free": 1,
                "ft_cmap_done_internal": 1,
                "ft_stroke_border_conicto": 1,
                "cf2_hintmask_isNew": 1,
                "T1_Size_Get_Globals_Funcs": 1,
                "af_autofitter_init": 1,
                "cf2_hint_initZero": 1,
                "tt_face_find_bdf_prop": 1,
                "cff_face_done": 1,
                "ft_var_readpackedpoints": 1,
                "lib/3rdparty/freetype/src/winfonts/winfnt.c": 1,
                "TT_Access_Glyph_Frame": 1,
                "T1_Face_Init": 1,
                "afm_parser_next_key": 1,
                "isupper": 1,
                "cf2_getSeacComponent": 1,
                "sfnt_get_interface": 1,
                "tt_face_load_hhea": 1,
                "lib/3rdparty/freetype/src/autofit/afglobal.c": 1,
                "BBox_Cubic_Check": 1,
                "af_glyph_hints_rescale": 1,
                "af_glyph_hints_align_strong_points": 1,
                "_bdf_list_split": 1,
                "tt_cmap10_validate": 1,
                "FT_GlyphLoader_CheckSubGlyphs": 1,
                "t1_cmap_custom_char_index": 1,
                "tt_cmap8_char_index": 1,
                "t1_cmap_std_done": 1,
                "ft_stroker_cap": 1,
                "cff_charset_compute_cids": 1,
                "t1_ps_get_font_private": 1,
                "ft_outline_glyph_transform": 1,
                "cid_get_is_cid": 1,
                "t1_get_name_index": 1,
                "ps_parser_to_int": 1,
                "T42_Face_Init": 1,
                "t42_get_glyph_name": 1,
                "af_dummy_hints_apply": 1,
                "cid_size_init": 1,
                "tt_cmap14_ensure": 1,
                "Compute_Point_Displacement": 1,
                "lib/3rdparty/freetype/src/cff/cf2read.c": 1,
                "ft_pos_abs": 1,
                "af_glyph_hints_dump_points": 1,
                "compare_uni_maps": 1,
                "T1_Open_Face": 1,
                "FT_Stream_ReadUShort": 1,
                "gray_raster_reset": 1,
                "Ins_ENDF": 1,
                "parse_buildchar": 1,
                "cff_cmap_unicode_char_index": 1,
                "ft_gzip_file_io": 1,
                "cff_get_cid_from_glyph_index": 1,
                "lib/3rdparty/freetype/src/sfnt/ttsbit.c": 1,
                "BDF_Face_Init": 1,
                "cff_parser_run": 1,
                "t42_get_ps_font_name": 1,
                "lib/3rdparty/freetype/src/gzip/inftrees.c": 1,
                "cff_property_get": 1,
                "lib/3rdparty/freetype/src/pshinter/pshalgo.c": 1,
                "TT_Load_Simple_Glyph": 1,
                "__pwctype_func": 1,
                "_atoi64": 1,
                "cff_fd_select_get": 1,
                "Project": 1,
                "cf2_hint_isValid": 1,
                "ft_mem_strdup": 1,
                "ps_mask_table_done": 1,
                "psh_calc_max_height": 1,
                "ft_black_done": 1,
                "zcfree": 1,
                "_isctype": 1,
                "cff_index_access_element": 1,
                "lib/3rdparty/freetype/src/type42/t42drivr.c": 1,
                "cff_get_ros": 1,
                "do_fixed": 1,
                "ft_trig_pseudo_polarize": 1,
                "cff_check_points": 1,
                "af_dummy_hints_init": 1,
                "ft_bitmap_glyph_init": 1,
                "cf2_hintmask_init": 1,
                "translate_array": 1,
                "pshinter_get_globals_funcs": 1,
                "ps_parser_load_field": 1,
                "PCF_Size_Select": 1,
                "ft_validator_init": 1,
                "ft_gzip_stream_close": 1,
                "lib/3rdparty/freetype/src/autofit/afcjk.c": 1,
                "psaux_get_glyph_name": 1,
                "ft_mem_qalloc": 1,
                "afm_parser_init": 1,
                "af_latin_metrics_scale_dim": 1,
                "t42_ps_get_font_extra": 1,
                "af_cjk_metrics_check_digits": 1,
                "cf2_hintmask_read": 1,
                "skip_spaces": 1,
                "cf2_glyphpath_lineTo": 1,
                "af_cjk_hints_init": 1,
                "ft_gzip_file_done": 1,
                "lib/3rdparty/freetype/src/sfnt/sfdriver.c": 1,
                "af_cjk_hints_detect_features": 1,
                "af_latin_metrics_init_widths": 1,
                "_bdf_atol": 1,
                "ft_stroker_arcto": 1,
                "tt_cmap10_char_index": 1,
                "pcf_cmap_done": 1,
                "t1_decrypt": 1,
                "t1_decoder_done": 1,
                "FT_CMap_Done": 1,
                "psh_globals_set_scale": 1,
                "_bdf_atos": 1,
                "tt_cmap14_find_variant": 1,
                "FT_Stream_GetChar": 1,
                "T1_Set_MM_Design": 1,
                "pfr_face_get_kerning": 1,
                "BBox_Move_To": 1,
                "__isascii": 1,
                "T1_Size_Done": 1,
                "lib/3rdparty/freetype/src/base/ftstroke.c": 1,
                "T1_Get_Track_Kerning": 1,
                "ft_glyphslot_set_bitmap": 1,
                "psh_hint_align": 1,
                "Cubic_To": 1,
                "ps_mask_table_last": 1,
                "t1_parse_font_matrix": 1,
                "number": 1,
                "tt_face_init": 1,
                "lib/3rdparty/freetype/src/base/ftbitmap.c": 1,
                "pcf_load_font": 1,
                "FT_Get_Module_Interface": 1,
                "lib/3rdparty/freetype/src/pfr/pfrdrivr.c": 1,
                "cf2_setError": 1,
                "inflate_codes_free": 1,
                "FT_Stream_ReadAt": 1,
                "af_latin_hints_link_segments": 1,
                "FT_Stream_ReadULongLE": 1,
                "T1_Read_Metrics": 1,
                "cf2_stack_count": 1,
                "T42_Size_Done": 1,
                "gray_render_line": 1,
                "afm_parser_parse": 1,
                "Move_Zp2_Point": 1,
                "FNT_Face_Done": 1,
                "T42_Size_Request": 1,
                "pfr_cmap_char_index": 1,
                "iswxdigit": 1,
                "gray_line_to": 1,
                "fnt_font_load": 1,
                "Ins_LOOPCALL": 1,
                "tt_cmap13_char_index": 1,
                "gray_conic_to": 1,
                "lib/3rdparty/freetype/src/base/ftinit.c": 1,
                "tt_cmap2_get_info": 1,
                "ft_ansi_stream_io": 1,
                "lib/3rdparty/freetype/src/sfnt/ttbdf.c": 1,
                "T1_Size_Request": 1,
                "t1_cmap_standard_init": 1,
                "skip_comment": 1,
                "lib/sdk/crt/stdlib/qsort.c": 1,
                "pcf_seek_to_table_type": 1,
                "cid_ps_get_font_extra": 1,
                "cf2_freeSeacComponent": 1,
                "tt_get_advances": 1,
                "pshinter_get_t1_funcs": 1,
                "Vertical_Sweep_Span": 1,
                "lib/3rdparty/freetype/src/cff/cf2intrp.c": 1,
                "T1_GlyphSlot_Done": 1,
                "TT_Set_MM_Blend": 1,
                "T1_Set_Var_Design": 1,
                "TT_Done_Context": 1,
                "afm_stream_skip_spaces": 1,
                "cff_builder_close_contour": 1,
                "cff_strcpy": 1,
                "pcf_cmap_char_next": 1,
                "lib/3rdparty/freetype/src/cff/cffload.c": 1,
                "tt_cmap14_validate": 1,
                "af_get_interface": 1,
                "FT_Stream_Open": 1,
                "bdf_driver_requester": 1,
                "T1_Compute_Max_Advance": 1,
                "lib/3rdparty/freetype/src/base/ftpatent.c": 1,
                "ps_hints_t2mask": 1,
                "lib/3rdparty/freetype/src/base/ftadvanc.c": 1,
                "pfr_cmap_init": 1,
                "FtfdLoadFontFile": 1,
                "af_property_get_face_globals": 1,
                "ft_gzip_alloc": 1,
                "ps_parser_to_fixed_array": 1,
                "lib/3rdparty/freetype/src/base/fttype1.c": 1,
                "iswprint": 1,
                "bdf_cmap_char_index": 1,
                "ft_angle_mean": 1,
                "lib/3rdparty/freetype/src/autofit/afmodule.c": 1,
                "lib/3rdparty/freetype/src/sfnt/ttpost.c": 1,
                "tt_size_select": 1,
                "af_sort_and_quantize_widths": 1,
                "gray_hline": 1,
                "af_loader_load_g": 1,
                "af_latin_hints_compute_segments": 1,
                "tt_driver_init": 1,
                "tt_cmap13_char_next": 1,
                "TT_Goto_CodeRange": 1,
                "cff_cmap_encoding_init": 1,
                "cff_make_private_dict": 1,
                "cf2_stack_popInt": 1,
                "ft_lzwstate_init": 1,
                "t1_allocate_blend": 1,
                "bdf_cmap_done": 1,
                "lib/3rdparty/freetype/src/sfnt/ttmtx.c": 1,
                "lib/3rdparty/freetype/src/gzip/inflate.c": 1,
                "tt_cmap13_get_info": 1,
                "FT_Stream_ReadUShortLE": 1,
                "Render_Single_Pass": 1,
                "tt_cmap4_char_next": 1,
                "Bezier_Down": 1,
                "ft_lzwstate_reset": 1,
                "tt_cmap14_char_map_def_binary": 1,
                "FT_Stream_GetULongLE": 1,
                "TT_Save_Context": 1,
                "afm_tokenize": 1,
                "af_axis_hints_new_edge": 1,
                "cf2_hintmap_init": 1,
                "ft_stroker_outside": 1,
                "ps_hints_stem": 1,
                "isalpha": 1,
                "ft_new_glyph": 1,
                "tt_size_done": 1,
                "afm_compare_kern_pairs": 1,
                "bdf_cmap_char_next": 1,
                "ft_validator_error": 1,
                "af_property_get": 1,
                "cid_size_get_globals_funcs": 1,
                "tt_face_free_ps_names": 1,
                "FT_Stream_OpenMemory": 1,
                "include/crt/mingw32/intrin_x86.h": 1,
                "af_cjk_compute_stem_width": 1,
                "SkipCode": 1,
                "T42_Size_Select": 1,
                "_snprintf": 1,
                "pfr_glyph_line_to": 1,
                "tt_get_interface": 1,
                "T42_Driver_Init": 1,
                "Ins_NPUSHB": 1,
                "pfr_slot_init": 1,
                "TT_Load_Composite_Glyph": 1,
                "af_glyph_hints_save": 1,
                "Horizontal_Sweep_Span": 1,
                "PS_Conv_Strtol": 1,
                "iscntrl": 1,
                "hash_bucket": 1,
                "tt_cmap10_char_next": 1,
                "inflate_flush": 1,
                "Compute_Round": 1,
                "islower": 1,
                "PS_Conv_ToInt": 1,
                "Update_Max": 1,
                "tt_face_load_os2": 1,
                "t1_builder_close_contour": 1,
                "tt_property_get": 1,
                "FT_Get_PS_Font_Value": 1,
                "psh_blues_set_zones_0": 1,
                "FT_Stream_New": 1,
                "Ins_NPUSHW": 1,
                "cid_driver_init": 1,
                "iswalnum": 1,
                "tt_prepare_zone": 1,
                "lib/3rdparty/freetype/src/raster/ftraster.c": 1,
                "af_indic_metrics_init": 1,
                "lib/3rdparty/freetype/src/cff/cffcmap.c": 1,
                "af_face_globals_free": 1,
                "pfr_extra_item_load_font_id": 1,
                "inflateEnd": 1,
                "af_latin_metrics_scale": 1,
                "tt_face_load_any": 1,
                "lib/3rdparty/freetype/src/gzip/infcodes.c": 1,
                "lib/sdk/crt/string/atoi64.c": 1,
                "tt_cmap12_init": 1,
                "cff_get_interface": 1,
                "ft_synthesize_vertical_metrics": 1,
                "memcmp": 1,
                "cf2_glyphpath_pushMove": 1,
                "tt_cmap0_validate": 1,
                "cf2_builder_cubeTo": 1,
                "af_direction_compute": 1,
                "bdf_free_font": 1,
                "Ins_DELTAP": 1,
                "cff_builder_add_point": 1,
                "sfnt_load_face": 1,
                "ft_gzip_file_fill_output": 1,
                "cf2_arrstack_init": 1,
                "tt_cmap6_get_info": 1,
                "ft_mem_qrealloc": 1,
                "lib/3rdparty/freetype/src/base/ftutil.c": 1,
                "gray_move_to": 1,
                "cff_index_done": 1,
                "tt_cmap0_char_index": 1,
                "t42_ps_has_glyph_names": 1,
                "cf2_glyphpath_computeOffset": 1,
                "cff_face_init": 1,
                "afm_stream_read_string": 1,
                "ps_unicodes_char_index": 1,
                "cff_ps_get_font_info": 1,
                "lib/3rdparty/freetype/src/smooth/ftgrays.c": 1,
                "cff_subfont_done": 1,
                "ft_lzw_stream_close": 1,
                "ps_mask_set_bit": 1,
                "ft_stroke_border_lineto": 1,
                "malloc": 1,
                "lib/3rdparty/freetype/src/gzip/infblock.c": 1,
                "DbgPrint": 1,
                "TT_Forget_Glyph_Frame": 1,
                "t1_cmap_std_init": 1,
                "fread": 1,
                "tt_face_get_kerning": 1,
                "pfr_cmap_char_next": 1,
                "hash_free": 1,
                "Bezier_Up": 1,
                "Ins_CALL": 1,
                "ft_raccess_sort_ref_by_id": 1,
                "lib/3rdparty/freetype/src/pcf/pcfread.c": 1,
                "inflateReset": 1,
                "pfr_slot_load": 1,
                "FT_Get_Advance": 1,
                "FT_GlyphLoader_CopyPoints": 1,
                "FT_GlyphLoader_CreateExtra": 1,
                "cf2_builder_lineTo": 1,
                "FtfdCompletePDEV": 1,
                "parse_expansion_factor": 1,
                "T1_Done_Blend": 1,
                "ft_raster1_init": 1,
                "ft_module_get_service": 1,
                "lib/3rdparty/freetype/src/type1/t1load.c": 1,
                "FT_Face_GetVariantSelectors": 1,
                "ps_parser_to_token": 1,
                "Vertical_Sweep_Drop": 1,
                "tt_cmap14_done": 1,
                "tt_cmap4_set_range": 1,
                "Insert_Y_Turn": 1,
                "cff_slot_done": 1,
                "ft_black_render": 1,
                "Round_Super": 1,
                "FtfdQueryFontCaps": 1,
                "FT_Render_Glyph_Internal": 1,
                "ft_black_reset": 1,
                "tt_cmap4_next": 1,
                "t1_hints_open": 1,
                "sfnt_init_face": 1,
                "Dual_Project": 1,
                "FT_Stream_ReadUOffset": 1,
                "pcf_find_property": 1,
                "psh_hint_table_activate_mask": 1,
                "pfr_extra_item_load_bitmap_info": 1,
                "cff_ps_has_glyph_names": 1,
                "tt_cmap14_char_map_nondef_binary": 1,
                "pcf_get_bdf_property": 1,
                "af_latin_metrics_init": 1,
                "lib/3rdparty/freetype/src/pfr/pfrload.c": 1,
                "Direct_Move_X": 1,
                "cid_get_postscript_name": 1,
                "Direct_Move_Y": 1,
                "tt_glyph_load": 1,
                "lib/sdk/crt/string/ctype.c": 1,
                "_iup_worker_interpolate": 1,
                "FtfdQueryGlyphAttrs": 1,
                "ft_trig_downscale": 1,
                "cff_parser_init": 1,
                "pshinter_get_t2_funcs": 1,
                "t42_get_name_index": 1,
                "ft_face_get_mm_service": 1,
                "cff_cmap_encoding_char_next": 1,
                "Vertical_Sweep_Init": 1,
                "cff_size_request": 1,
                "ft_trig_prenorm": 1,
                "lib/3rdparty/freetype/src/base/ftglyph.c": 1,
                "FtfdQueryFont": 1,
                "gray_convert_glyph_inner": 1,
                "tt_cmap6_char_index": 1,
                "BBox_Conic_Check": 1,
                "tt_cmap10_get_info": 1,
                "af_cjk_align_serif_edge": 1,
                "cf2_arrstack_getPointer": 1,
                "gray_convert_glyph": 1,
                "lib/3rdparty/freetype/src/base/ftbbox.c": 1,
                "t1_ps_has_glyph_names": 1,
                "afm_stream_read_one": 1,
                "FT_Stream_Skip": 1,
                "tt_cmap_init": 1,
                "af_glyph_hints_align_weak_points": 1,
                "cf2_glyphpath_closeOpenPath": 1,
                "T1_Done_Metrics": 1,
                "FT_Face_GetCharsOfVariant": 1,
                "FT_CMap_New": 1,
                "destroy_size": 1,
                "FT_Done_GlyphSlot": 1,
                "winfnt_get_service": 1,
                "ft_black_set_mode": 1,
                "BDF_Size_Select": 1,
                "cf2_interpT2CharString": 1,
                "lib/3rdparty/freetype/src/type42/t42objs.c": 1,
                "tt_cmap14_get_def_chars": 1,
                "Init_Linked": 1,
                "tt_cmap2_get_subheader": 1,
                "tt_size_run_prep": 1,
                "pcf_cmap_init": 1,
                "cff_free_glyph_data": 1,
                "gray_raster_new": 1,
                "t1_decoder_init": 1,
                "lib/3rdparty/freetype/src/truetype/ttdriver.c": 1,
                "cff_size_done": 1,
                "lib/3rdparty/freetype/src/cff/cf2arrst.c": 1,
                "sfnt_get_charset_id": 1,
                "FT_Outline_EmboldenXY": 1,
                "pcf_get_accel": 1,
                "t1_builder_done": 1,
                "Normalize": 1,
                "T1_Size_Init": 1,
                "tt_cmap14_char_var_isdefault": 1,
                "lib/3rdparty/freetype/src/psaux/t1decode.c": 1,
                "lib/3rdparty/freetype/src/psnames/pstables.h": 1,
                "lib/3rdparty/freetype/src/base/ftsnames.c": 1,
                "Write_CVT": 1,
                "t1_ps_get_font_value": 1,
                "cff_cmap_unicode_done": 1,
                "gray_cubic_to": 1,
                "FT_Stream_GetUShortLE": 1,
                "FT_MSB": 1,
                "lib/3rdparty/freetype/src/cff/cffdrivr.c": 1,
                "t42_parse_font_matrix": 1,
                "lib/3rdparty/freetype/src/cid/cidriver.c": 1,
                "FT_Stream_GetUOffset": 1,
                "Horizontal_Sweep_Drop": 1,
                "Current_Ratio": 1,
                "ft_stroke_border_close": 1,
                "lib/3rdparty/freetype/src/base/ftwinfnt.c": 1,
                "ft_glyphslot_alloc_bitmap": 1,
                "tt_cmap4_validate": 1,
                "huft_build": 1,
                "ft_stroker_subpath_start": 1,
                "cff_index_read_offset": 1,
                "win32ss/drivers/font/ftfd/enable.c": 1,
                "T42_Size_Init": 1,
                "gray_raster_done": 1,
                "cff_size_get_globals_funcs": 1,
                "FNT_Face_Init": 1,
                "T42_Get_Interface": 1,
                "FT_Lookup_Renderer": 1,
                "lib/3rdparty/freetype/src/lzw/ftlzw.c": 1,
                "lib/3rdparty/freetype/src/gzip/infutil.c": 1,
                "BDF_Glyph_Load": 1,
                "lib/3rdparty/freetype/src/psaux/t1cmap.c": 1,
                "Ins_ELSE": 1,
                "af_cjk_align_linked_edge": 1,
                "lib/3rdparty/freetype/src/truetype/ttinterp.c": 1,
                "DelOld": 1,
                "tt_face_load_name": 1,
                "cf2_hintmap_isValid": 1,
                "cf2_stack_clear": 1,
                "af_indic_hints_apply": 1,
                "lib/3rdparty/freetype/src/base/ftstream.c": 1,
                "FT_GlyphLoader_Done": 1,
                "cff_index_get_sid_string": 1,
                "t42_parse_charstrings": 1,
                "tt_slot_init": 1,
                "pfr_get_metrics": 1,
                "iswpunct": 1,
                "T1_GlyphSlot_Init": 1,
                "FT_Stream_ReadChar": 1,
                "ft_stroker_inside": 1,
                "lib/sdk/crt/string/iswctype.c": 1,
                "ft_pfr_check": 1,
                "tt_cmap13_init": 1,
                "FT_Match_Size": 1,
                "Horizontal_Sweep_Init": 1,
                "t1_builder_start_point": 1,
                "Direct_Move_Orig": 1,
                "cid_get_ros": 1,
                "cid_face_done": 1,
                "tt_sbit_decoder_load_metrics": 1,
                "cff_index_get_name": 1,
                "afm_parser_read_int": 1,
                "TT_RunIns": 1,
                "FT_Stream_Free": 1,
                "towupper": 1,
                "af_cjk_hints_apply": 1,
                "lib/3rdparty/freetype/src/pfr/pfrcmap.c": 1,
                "tt_face_load_font_dir": 1,
                "isprint": 1,
                "Line_To": 1,
                "ps_table_release": 1,
                "tt_cmap13_char_map_binary": 1,
                "_bdf_list_done": 1,
                "FT_Add64": 1,
                "ps_dimension_done": 1,
                "FT_MulDiv_No_Round": 1,
                "adler32": 1,
                "FT_Select_Metrics": 1,
                "cf2_arrstack_size": 1,
                "ft_stroke_border_reset": 1,
                "ps_hinter_done": 1,
                "ft_stroke_border_done": 1,
                "af_glyph_hints_done": 1,
                "cid_parse_font_matrix": 1,
                "tt_face_goto_table": 1,
                "lib/3rdparty/freetype/src/base/ftpfr.c": 1,
                "ft_stroke_border_cubicto": 1,
                "ft_raster1_transform": 1,
                "lib/3rdparty/freetype/src/bdf/bdfdrivr.c": 1,
                "t1_decoder_parse_glyph": 1,
                "cff_index_get_pointers": 1,
                "cf2_stack_pushInt": 1,
                "tt_cmap4_char_map_binary": 1,
                "tt_cmap8_char_next": 1,
                "ft_black_new": 1,
                "FT_Stream_TryRead": 1,
                "_tt_check_patents_in_table": 1,
                "bdf_cmap_init": 1,
                "parse_encoding": 1,
                "FNT_Size_Select": 1,
                "ft_mem_alloc": 1,
                "gray_raster_render": 1,
                "win32ss/drivers/font/ftfd/glyph.c": 1,
                "T42_GlyphSlot_Done": 1,
                "pfr_extra_items_parse": 1,
                "tt_face_load_bhed": 1,
                "cf2_hintmap_map": 1,
                "cf2_glyphpath_pushPrevElem": 1,
                "cff_parse_cid_ros": 1,
                "Line_Up": 1,
                "toupper": 1,
                "_bdf_atoul": 1,
                "FT_Stream_ReleaseFrame": 1,
                "ft_property_do": 1,
                "lib/3rdparty/freetype/src/pcf/pcfdrivr.c": 1,
                "cff_get_glyph_name": 1,
                "tt_get_cmap_info": 1,
                "ps_parser_done": 1,
                "tt_size_done_bytecode": 1,
                "tt_size_init": 1,
                "ft_outline_glyph_copy": 1,
                "tt_face_free_name": 1,
                "FtfdEnableDriver": 1,
                "tt_cmap14_get_info": 1,
                "hash_init": 1,
                "t1_cmap_custom_char_next": 1,
                "t1_get_index": 1,
                "lib/3rdparty/freetype/src/truetype/truetype.c": 1,
                "FT_GlyphLoader_Adjust_Subglyphs": 1,
                "iswspace": 1,
                "lib/3rdparty/freetype/src/base/fttrigon.c": 1,
                "t42_parse_sfnts": 1,
                "tt_cmap14_char_index": 1,
                "af_face_globals_new": 1,
                "ft_outline_glyph_done": 1,
                "lib/3rdparty/freetype/src/type1/t1afm.c": 1,
                "t1_cmap_custom_done": 1,
                "lib/3rdparty/freetype/src/cid/cidobjs.c": 1,
                "T1_Parse_Glyph_And_Get_Char_String": 1,
                "T1_Load_Glyph": 1,
                "End_Profile": 1,
                "Read_CVT": 1,
                "tt_cmap14_char_next": 1,
                "lib/3rdparty/freetype/src/pshinter/pshrec.c": 1,
                "ps_hints_apply": 1,
                "read_pfb_tag": 1,
                "Ins_MINDEX": 1,
                "_toupper": 1,
                "FT_GlyphLoader_CheckPoints": 1,
                "lib/3rdparty/freetype/src/truetype/ttobjs.c": 1,
                "cid_load_glyph": 1,
                "lib/3rdparty/freetype/src/autofit/afloader.c": 1,
                "FT_Vector_Transform_Scaled": 1,
                "FT_SqrtFixed": 1,
                "tt_face_get_ps_name": 1,
                "check_type1_format": 1,
                "cff_get_cmap_info": 1,
                "isalnum": 1,
                "lib/3rdparty/freetype/src/psaux/psobjs.c": 1,
                "Compute_Funcs": 1,
                "lib/3rdparty/freetype/src/cff/cf2ft.c": 1,
                "FT_Reference_Library": 1,
                "ft_set_current_renderer": 1,
                "ps_hints_close": 1,
                "lib/3rdparty/freetype/src/raster/ftrend1.c": 1,
                "winfnt_get_header": 1,
                "cff_driver_done": 1,
                "af_sort_pos": 1,
                "t1_cmap_unicode_char_index": 1,
                "open_face": 1,
                "parse_charstrings": 1,
                "tt_face_vary_cvt": 1,
                "iswdigit": 1,
                "ps_parser_to_coord_array": 1,
                "ft_outline_glyph_bbox": 1,
                "tt_cmap8_validate": 1,
                "tt_size_request": 1,
                "t1_cmap_std_char_next": 1,
                "Ins_PUSHB": 1,
                "FtfdQueryFontData": 1,
                "af_glyph_hints_dump_edges": 1,
                "pcf_cmap_char_index": 1,
                "fseek": 1,
                "cf2_glyphpath_curveTo": 1,
                "cid_slot_load_glyph": 1,
                "ps_table_new": 1,
                "tt_sbit_decoder_load_byte_aligned": 1,
                "cf2_hint_isPair": 1,
                "FT_Reference_Face": 1,
                "FT_Stream_ReadFields": 1,
                "Vertical_Sweep_Step": 1,
                "T1_Get_Multi_Master": 1,
                "ft_smooth_render_lcd_v": 1,
                "cff_index_init": 1,
                "lib/3rdparty/freetype/src/raster/raster.c": 1,
                "New_Profile": 1,
                "cff_get_kerning": 1,
                "t42_ps_get_font_info": 1,
                "Ins_FDEF": 1,
                "cf2_hintmask_setCounts": 1,
                "ft_corner_is_flat": 1,
                "tt_face_load_kern": 1,
                "psh_compute_dir": 1,
                "lib/3rdparty/freetype/src/gzip/ftgzip.c": 1,
                "ft_div64by32": 1,
                "lib/3rdparty/freetype/src/bdf/bdflib.c": 1,
                "Round_To_Double_Grid": 1,
                "__toascii": 1,
                "ps_hints_t2counter": 1,
                "ft_lzwstate_io": 1,
                "ps_unicodes_init": 1,
                "lib/3rdparty/freetype/src/base/ftotval.c": 1,
                "af_cjk_metrics_scale_dim": 1,
                "tt_cmap2_char_next": 1,
                "ps_parser_to_bytes": 1,
                "af_cjk_metrics_init_widths": 1,
                "ps_hints_open": 1,
                "ft_mem_realloc": 1,
                "bdf_get_bdf_property": 1,
                "lib/3rdparty/freetype/src/pfr/pfrsbit.c": 1,
                "cf2_hint_isLocked": 1,
                "pcf_get_metric": 1,
                "Write_CVT_Stretched": 1,
                "gray_set_cell": 1,
                "t42_is_space": 1,
                "tt_cmap14_init": 1,
                "tt_cmap0_get_info": 1,
                "find_unicode_charmap": 1,
                "cff_slot_init": 1,
                "t1_cmap_std_char_index": 1,
                "iswgraph": 1,
                "FtfdFree": 1,
                "t1_cmap_unicode_char_next": 1,
                "ps_parser_skip_PS_token": 1,
                "tt_cmap14_char_var_index": 1,
                "cff_cmap_encoding_char_index": 1,
                "tt_face_load_eblc": 1,
                "FT_Raccess_Get_DataOffsets": 1,
                "lib/3rdparty/freetype/src/base/ftrfork.c": 1,
                "TT_Set_Var_Design": 1,
                "tt_cmap12_validate": 1,
                "lib/sdk/crt/string/atol.c": 1,
                "FT_GlyphLoader_Reset": 1,
                "FT_Done_Memory": 1,
                "cff_get_is_cid": 1,
                "inflate_codes_new": 1,
                "lib/3rdparty/freetype/src/sfnt/sfobjs.c": 1,
                "ft_raster1_render": 1,
                "lib/3rdparty/freetype/src/base/ftobjs.c": 1,
                "_bdf_parse_glyphs": 1,
                "cff_index_get_string": 1,
                "t1_builder_add_point": 1,
                "ft_glyphslot_free_bitmap": 1,
                "ft_smooth_get_cbox": 1,
                "lib/3rdparty/freetype/src/cff/cf2blues.c": 1,
                "sfnt_get_glyph_name": 1,
                "Round_Super_45": 1,
                "FT_Stream_Read": 1,
                "ps_parser_skip_spaces": 1,
                "skip_atoi": 1,
                "pfr_glyph_load_rec": 1,
                "af_indic_hints_init": 1,
                "af_glyph_hints_reload": 1,
                "cf2_arrstack_finalize": 1,
                "Horizontal_Sweep_Step": 1,
                "cff_compute_bias": 1,
                "lib/3rdparty/freetype/src/truetype/ttgxvar.c": 1,
                "PS_Conv_ToFixed": 1,
                "ft_outline_glyph_prepare": 1,
                "t42_ps_get_font_private": 1,
                "ft_trig_pseudo_rotate": 1,
                "tt_glyphzone_done": 1,
                "lib/3rdparty/freetype/src/cff/cf2error.c": 1,
                "cff_subfont_load": 1,
                "lib/3rdparty/freetype/src/pfr/pfrgload.c": 1,
                "cf2_free_instance": 1,
                "cf2_decoder_parse_charstrings": 1,
                "cf2_stack_getReal": 1,
                "pfr_aux_name_load": 1,
                "compare_kern_pairs": 1,
                "T1_Driver_Done": 1,
                "TT_Clear_CodeRange": 1,
                "tt_cmap14_get_nondef_chars": 1,
                "af_latin_hints_init": 1,
                "psh_globals_new": 1,
                "__p__pwctype": 1,
                "read_binary_data": 1,
                "af_latin_hints_detect_features": 1,
                "Ins_UNKNOWN": 1,
                "cff_size_init": 1,
                "t1_builder_init": 1,
                "lib/3rdparty/freetype/src/base/ftoutln.c": 1,
                "lib/3rdparty/freetype/src/cid/cidgload.c": 1,
                "skip_procedure": 1,
                "FtfdQueryFontTree": 1,
                "tt_face_load_cvt": 1,
                "lib/3rdparty/freetype/src/autofit/afindic.c": 1,
                "ft_smooth_set_mode": 1,
                "lib/3rdparty/freetype/src/base/ftsynth.c": 1,
                "towlower": 1,
                "TT_Get_HMetrics": 1,
                "win32ss/drivers/font/ftfd/sprintf.c": 1,
                "lib/3rdparty/freetype/src/base/ftmm.c": 1,
                "TT_Vary_Get_Glyph_Deltas": 1,
                "Move_CVT_Stretched": 1,
                "cff_cmap_unicode_init": 1,
                "tt_name_entry_ascii_from_utf16": 1,
                "tt_cmap12_next": 1,
                "af_indic_metrics_scale": 1,
                "lib/3rdparty/freetype/src/sfnt/ttkern.c": 1,
                "tt_face_free_eblc": 1,
                "pcf_get_charset_id": 1,
                "cff_slot_load": 1,
                "tt_cmap4_char_index": 1,
                "Get_Interface": 1,
                "tt_sbit_decoder_load_compound": 1,
                "lib/3rdparty/freetype/src/truetype/ttpload.c": 1,
                "ps_table_add": 1,
                "tt_cmap14_variants": 1,
                "parse_private": 1,
                "t2_hints_stems": 1,
                "pfr_get_service": 1,
                "psh_globals_destroy": 1,
                "cff_builder_add_point1": 1,
                "tt_face_build_cmaps": 1,
                "lib/3rdparty/freetype/src/cff/cf2font.c": 1,
                "ft_gray_for_premultiplied_srgb_bgra": 1,
                "shift_elements": 1,
                "pfr_face_done": 1,
                "cf2_getWindingMomentum": 1,
                "t2_hints_open": 1,
                "tt_sbit_decoder_load_bit_aligned": 1,
                "ps_mask_table_alloc": 1,
                "ps_mask_ensure": 1,
                "cf2_getNominalWidthX": 1,
                "cf2_hint_init": 1,
                "realloc": 1,
                "T1_Parse_Glyph": 1,
                "ft_alloc": 1,
                "isxdigit": 1,
                "ispunct": 1,
                "ps_dimension_end_mask": 1,
                "pfr_glyph_close_contour": 1,
                "Round_To_Half_Grid": 1,
                "tt_face_load_maxp": 1,
                "tolower": 1,
                "t1_builder_add_point1": 1,
                "ft_get_adobe_glyph_index": 1,
                "ft_recompute_scaled_metrics": 1,
                "lib/3rdparty/freetype/src/base/ftgxval.c": 1,
                "tt_sbit_decoder_load_image": 1,
                "tt_cmap14_variant_chars": 1,
                "cid_face_init": 1,
                "TT_Load_Glyph_Header": 1,
                "cff_sid_to_glyph_name": 1,
                "ft_validator_run": 1,
                "cf2_arrstack_push": 1,
                "lib/3rdparty/freetype/src/type42/t42parse.c": 1,
                "FT_Stream_Pos": 1,
                "destroy_charmaps": 1,
                "lib/3rdparty/freetype/src/psnames/psmodule.c": 1,
                "ft_gzip_check_header": 1,
                "tt_face_load_generic_header": 1,
                "_bdf_list_init": 1,
                "tt_face_load_post": 1,
                "ps_dimension_init": 1,
                "lib/3rdparty/freetype/src/type1/t1driver.c": 1,
                "hash_lookup": 1,
                "ps_hinter_init": 1,
                "bdf_get_charset_id": 1,
                "ft_stroke_border_init": 1,
                "_atoldbl": 1,
                "af_glyph_hints_init": 1,
                "Move_CVT": 1,
                "tt_face_set_sbit_strike": 1,
                "tt_face_load_head": 1,
                "tt_cmap4_get_info": 1,
                "lib/3rdparty/freetype/src/autofit/afdummy.c": 1,
                "tt_face_load_pclt": 1,
                "cf2_glyphpath_hintPoint": 1,
                "cff_parse_font_bbox": 1,
                "FT_Stream_ExitFrame": 1,
                "psh_hint_table_done": 1,
                "_tolower": 1,
                "cff_builder_start_point": 1,
                "PCF_Face_Done": 1,
                "tt_face_get_location": 1,
                "tt_cmap4_char_map_linear": 1,
                "t1_cmap_unicode_done": 1,
                "cff_glyph_load": 1,
                "T42_GlyphSlot_Init": 1,
                "TT_Get_VMetrics": 1,
                "InsNew": 1,
                "ft_gzip_free": 1,
                "cff_index_forget_element": 1,
                "cid_slot_done": 1,
                "_bdf_list_ensure": 1,
                "load_post_names": 1,
                "ps_hints_t1stem3": 1,
                "cff_parse_fixed": 1,
                "BBox_Conic_To": 1,
                "af_cjk_metrics_scale": 1,
                "PCF_Glyph_Load": 1,
                "FT_New_Memory": 1,
                "FtfdUnloadFontFile": 1,
                "get_sfnt_table": 1,
                "ps_parser_init": 1,
                "load_truetype_glyph": 1,
                "ft_glyphslot_done": 1,
                "af_iup_interp": 1,
                "sprintf": 1,
                "t1_get_glyph_name": 1,
                "ps_get_macintosh_name": 1,
                "isspace": 1,
                "FT_Property_Set": 1,
                "cff_get_glyph_data": 1,
                "af_cjk_hints_compute_blue_edges": 1,
                "ft_corner_orientation": 1,
                "Round_To_Grid": 1,
                "ft_outline_glyph_init": 1,
                "cff_get_ps_name": 1,
                "ft_lzwstate_get_code": 1,
                "af_latin_compute_stem_width": 1,
                "lib/3rdparty/freetype/include/freetype/config/ftconfig.h": 1,
                "t1_cmap_custom_init": 1,
                "af_autofitter_done": 1,
                "lib/3rdparty/freetype/src/cid/cidparse.c": 1,
                "pfr_get_kerning": 1,
                "tt_face_load_cmap": 1,
                "tt_name_entry_ascii_from_other": 1,
                "tt_face_lookup_table": 1,
                "ft_lzw_stream_io": 1,
                "lib/sdk/crt/string/strstr.c": 1,
                "Ins_SCFS": 1,
                "T1_Face_Done": 1,
                "ps_parser_load_field_table": 1,
                "tt_get_metrics_incr_overrides": 1,
                "GetShortIns": 1,
                "TT_Set_CodeRange": 1,
                "t1_decoder_parse_charstrings": 1,
                "sfnt_get_ps_name": 1,
                "fclose": 1,
                "fnt_cmap_char_index": 1,
                "parse_dict": 1,
                "iswupper": 1,
                "lib/3rdparty/freetype/src/gzip/adler32.c": 1,
                "lib/3rdparty/freetype/src/base/ftcalc.c": 1,
                "HackFixup": 1,
                "cf2_glyphpath_moveTo": 1,
                "cff_get_name_index": 1,
                "af_glyph_hints_get_segment_offset": 1,
                "cff_size_select": 1,
                "T1_Get_Advances": 1,
                "Ins_Goto_CodeRange": 1,
                "isdigit": 1,
                "cff_driver_init": 1,
                "T42_Face_Done": 1,
                "ps_table_done": 1,
                "cid_size_done": 1,
                "Split_Cubic": 1,
                "lib/3rdparty/freetype/src/base/ftsystem.c": 1,
                "ft_smooth_render": 1,
                "cff_parse_font_matrix": 1,
                "Ins_GC": 1,
                "ps_tofixedarray": 1,
                "parse_weight_vector": 1,
                "win32ss/drivers/font/ftfd/font.c": 1,
                "_bdf_add_property": 1,
                "FT_Request_Metrics": 1,
                "iswctype": 1,
                "FT_Matrix_Multiply_Scaled": 1,
                "FT_GlyphLoader_Adjust_Points": 1,
                "FT_Face_GetCharVariantIsDefault": 1,
                "fnt_cmap_init": 1,
                "cf2_doFlex": 1,
                "TT_Hint_Glyph": 1,
                "T42_GlyphSlot_Load": 1,
                "BDF_Face_Done": 1,
                "cid_get_interface": 1,
                "tt_cmap12_char_index": 1,
                "ps_parser_to_fixed": 1,
                "TT_MulFix14": 1,
                "pfr_extra_items_skip": 1,
                "FT_GlyphLoader_Prepare": 1,
                "fnt_font_done": 1,
                "lib/3rdparty/freetype/src/cff/cffobjs.c": 1,
                "ft_smooth_render_lcd": 1,
                "_tt_check_patents_in_range": 1,
                "ps_unicode_value": 1,
                "T1_Get_MM_Var": 1,
                "lib/3rdparty/freetype/src/smooth/ftsmooth.c": 1,
                "parse_blend_axis_types": 1,
                "af_cjk_metrics_init": 1,
                "lib/3rdparty/freetype/src/cff/cf2hints.c": 1,
                "af_glyph_hints_dump_segments": 1,
                "psh_glyph_load_points": 1,
                "FT_Stream_GetULong": 1,
                "FNT_Size_Request": 1,
                "FT_Stream_ExtractFrame": 1,
                "tt_cmap13_next": 1,
                "Ins_SxVTL": 1,
                "sfnt_table_info": 1,
                "Get_Kerning": 1,
                "FT_Stream_EnterFrame": 1,
                "cf2_arrstack_setNumElements": 1,
                "cf2_stack_popFixed": 1,
                "af_autofitter_load_glyph": 1,
                "ps_dimension_set_mask_bits": 1,
                "cff_cmap_unicode_char_next": 1,
                "tt_cmap14_char_variants": 1,
                "Direct_Move": 1,
                "cf2_hintmap_insertHint": 1,
                "strstr": 1,
                "ft_bitmap_glyph_copy": 1,
                "cf2_hint_lock": 1,
                "ps_unicodes_char_next": 1,
                "tt_cmap6_char_next": 1,
                "FtfdEnablePDEV": 1,
                "lib/3rdparty/freetype/src/sfnt/ttload.c": 1,
                "iswascii": 1,
                "vsprintf": 1,
                "ft_bitmap_glyph_done": 1,
                "cff_property_set": 1,
                "t1_ps_get_font_extra": 1,
                "win32ss/drivers/font/ftfd/rosglue.c": 1,
                "Ins_IDEF": 1,
                "lib/3rdparty/freetype/src/psaux/psconv.c": 1,
                "FT_Face_GetVariantsOfChar": 1,
                "tt_cmap2_validate": 1,
                "gray_render_span": 1,
                "tt_size_reset": 1,
                "t1_builder_check_points": 1,
                "afm_parser_done": 1,
                "cf2_buf_readByte": 1,
                "psh_globals_scale_widths": 1,
                "FtfdDisablePDEV": 1,
                "tt_cmap8_get_info": 1,
                "ft_lzwstate_stack_grow": 1,
                "FT_Stream_Seek": 1,
                "isgraph": 1,
                "BDF_Size_Request": 1,
                "ft_smooth_render_generic": 1,
                "t1_cmap_expert_init": 1,
                "cid_size_request": 1,
                "Round_Up_To_Grid": 1,
                "Current_Ppem": 1,
                "_bdf_list_join": 1,
                "ps_dimension_reset_mask": 1,
                "ft_gzip_stream_io": 1,
                "tt_face_load_hmtx": 1,
                "lib/3rdparty/freetype/src/type1/t1gload.c": 1,
                "ftell": 1,
                "lib/3rdparty/freetype/src/cid/cidload.c": 1,
                "lib/3rdparty/freetype/src/psaux/afmparse.c": 1,
                "Ins_IF": 1,
                "lib/3rdparty/freetype/src/cff/cf2stack.c": 1,
                "fopen": 1,
                "ft_mem_free": 1,
                "tt_face_done": 1,
                "FT_GlyphLoader_New": 1,
                "af_glyph_hints_get_num_segments": 1,
                "FT_Raccess_Guess": 1,
                "ft_bitmap_glyph_bbox": 1,
                "tt_cmap12_char_next": 1,
                "cff_parse_private_dict": 1,
                "cff_charset_cid_to_gindex": 1,
                "FT_New_GlyphSlot": 1,
                "TT_Get_MM_Var": 1,
                "zcalloc": 1,
                "parse_subrs": 1,
                "lib/sdk/crt/mem/memcmp.c": 1,
                "skip_string": 1,
                "ft_smooth_transform": 1,
                "sfnt_done_face": 1,
                "Conic_To": 1,
                "ps_hints_t1reset": 1,
                "ps_parser_to_token_array": 1,
                "lib/3rdparty/freetype/src/pshinter/pshmod.c": 1,
                "gray_record_cell": 1,
                "tt_loader_init": 1,
                "_bdf_parse_properties": 1,
                "_ft_face_scale_advances": 1,
                "lib/3rdparty/freetype/src/autofit/aflatin.c": 1,
                "pfr_extra_item_load_stem_snaps": 1,
                "tt_cmap13_validate": 1,
                "destroy_face": 1,
                "skip_literal_string": 1,
                "ft_lzw_check_header": 1,
                "ps_get_standard_strings": 1,
                "__iscsymf": 1,
                "lib/3rdparty/freetype/src/cff/cffgload.c": 1,
                "FT_Get_Advances": 1,
                "t1_lookup_glyph_by_stdcharcode": 1,
                "ft_service_list_lookup": 1,
                "parse_fd_array": 1,
                "psh_hint_table_record": 1,
                "T1_Driver_Init": 1,
                "lib/3rdparty/freetype/src/base/ftgloadr.c": 1,
                "ps_mask_test_bit": 1,
                "pfr_cmap_done": 1,
                "ps_dimension_add_t1stem": 1,
                "T1_Set_MM_Blend": 1,
                "FT_Raccess_Get_HeaderInfo": 1,
                "ft_var_apply_tuple": 1,
                "sfnt_get_name_index": 1,
                "cid_ps_get_font_info": 1,
                "_bdf_parse_start": 1,
                "FT_Face_GetCharVariantIndex": 1,
                "lib/3rdparty/freetype/src/autofit/afangles.c": 1,
                "tt_cmap12_get_info": 1,
                "cid_get_offset": 1,
                "parse_blend_design_map": 1,
                "tt_driver_done": 1,
                "cf2_hintmap_build": 1,
                "test_cubic_extrema": 1,
                "cff_cmap_encoding_done": 1,
                "cf2_hint_isTop": 1,
                "ft_realloc": 1,
                "lib/3rdparty/freetype/src/sfnt/ttcmap.c": 1,
                "tt_face_load_strike_metrics": 1,
                "ft_lzwstate_done": 1,
                "gray_render_scanline": 1,
                "by_encoding": 1,
                "ft_var_readpackeddeltas": 1,
                "cff_parse_fixed_scaled": 1,
                "SetSuperRound": 1,
                "fnt_cmap_char_next": 1,
                "pcf_driver_requester": 1,
                "pfr_extra_item_load_kerning_pairs": 1,
                "ft_raster1_get_cbox": 1,
                "psnames_get_service": 1,
                "Round_Down_To_Grid": 1,
                "t1_ps_get_font_info": 1,
                "ft_stroke_border_get_counts": 1,
                "lib/3rdparty/freetype/src/pcf/pcfutil.c": 1,
                "tt_cmap12_char_map_binary": 1,
                "pfr_face_init": 1,
                "ft_stroker_process_corner": 1,
                "cf2_computeDarkening": 1,
                "cid_get_cid_from_glyph_index": 1,
                "tt_cmap4_init": 1,
                "af_latin_align_linked_edge": 1,
                "tt_cmap0_char_next": 1,
                "lib/3rdparty/freetype/src/pshinter/pshglob.c": 1,
                "tt_get_kerning": 1,
                "ft_multo64": 1,
                "cff_parse_integer": 1,
                "__iscsym": 1,
                "pfr_get_advance": 1,
                "Direct_Move_Orig_X": 1,
                "Direct_Move_Orig_Y": 1,
                "iswalpha": 1,
                "TT_DotFix14": 1,
                "psh_hint_table_find_strong_points": 1,
                "ps_dimension_end": 1,
                "lib/3rdparty/freetype/src/type1/t1objs.c": 1,
                "psh_blues_set_zones": 1,
                "parse_blend_design_positions": 1,
                "tt_face_load_gasp": 1,
                "ft_mem_dup": 1,
                "tt_cmap14_def_char_count": 1,
                "t1_hints_stem": 1,
                "bdf_get_font_property": 1,
                "t1_get_ps_name": 1,
                "tt_cmap6_validate": 1,
                "ft_stroke_border_moveto": 1,
                "tt_face_load_sbit_image": 1,
                "af_latin_hints_apply": 1,
                "lib/3rdparty/freetype/src/truetype/ttgload.c": 1,
                "_vsnprintf": 1,
                "T42_Driver_Done": 1,
                "ft_raster1_set_mode": 1,
                "FNT_Load_Glyph": 1,
                "lib/3rdparty/freetype/src/type1/t1parse.c": 1,
                "tt_face_get_metrics": 1,
                "ft_stroke_border_grow": 1,
                "FT_Hypot": 1,
                "tt_cmap2_char_index": 1,
                "stringw": 1,
                "pfr_slot_done": 1,
                "find_variant_selector_charmap": 1,
                "FtfdQueryFontFile": 1,
                "BBox_Cubic_To": 1,
                "cff_get_advances": 1,
                "TT_New_Context": 1,
                "iswcntrl": 1,
                "lib/3rdparty/freetype/src/pfr/pfrobjs.c": 1,
                "af_property_set": 1,
                "Split_Conic": 1,
                "psh_hint_table_init": 1,
                "string": 1,
                "cf2_doStems": 1,
                "qsort": 1,
                "cf2_builder_moveTo": 1,
                "PCF_Face_Init": 1,
                "Ins_MD": 1,
                "__udivdi3": 1,
                "__umoddi3": 1,
                "ps_table_funcs": 1,
                "t1_driver_class": 1,
                "__RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "tt_cmap13_class_rec": 1,
                "_data_start__": 1,
                "__DTOR_LIST__": 1,
                "pcf_cmap_class": 1,
                "strcmp": 1,
                "bdf_driver_class": 1,
                "_ctype": 1,
                "_setjmp3": 1,
                "ft_grays_raster": 1,
                "__tls_start__": 1,
                "longjmp": 1,
                "t1_cmap_expert_class_rec": 1,
                "tt_cmap12_class_rec": 1,
                "_rt_psrelocs_start": 1,
                "_dll_characteristics__": 1,
                "_size_of_stack_commit__": 1,
                "_size_of_stack_reserve__": 1,
                "_major_subsystem_version__": 1,
                "__crt_xl_start__": 1,
                "ft_smooth_lcd_renderer_class": 1,
                "cff_cmap_encoding_class_rec": 1,
                "__crt_xi_start__": 1,
                "t1cid_driver_class": 1,
                "__crt_xi_end__": 1,
                "t1_cmap_unicode_class_rec": 1,
                "bdf_cmap_class": 1,
                "ft_smooth_renderer_class": 1,
                "strnlen": 1,
                "tt_cmap6_class_rec": 1,
                "sfnt_module_class": 1,
                "winfnt_driver_class": 1,
                "wine_wctype_table": 1,
                "ft_raster1_renderer_class": 1,
                "_bss_start__": 1,
                "_pctype": 1,
                "_wctype": 1,
                "__RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "pcf_driver_class": 1,
                "_size_of_heap_commit__": 1,
                "_win32ss_libwin32k_a_iname": 1,
                "cff_driver_class": 1,
                "__crt_xp_start__": 1,
                "tt_default_graphics_state": 1,
                "tt_cmap2_class_rec": 1,
                "t1_cmap_standard_class_rec": 1,
                "_setjmp": 1,
                "__crt_xp_end__": 1,
                "_dll__": 1,
                "_minor_os_version__": 1,
                "af_latin_script_class": 1,
                "_image_base__": 1,
                "ps_parser_funcs": 1,
                "ft_standard_raster": 1,
                "_section_alignment__": 1,
                "memcpy": 1,
                "_IAT_end__": 1,
                "_pwctype": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "memset": 1,
                "cff_cmap_unicode_class_rec": 1,
                "af_cjk_script_class": 1,
                "_data_end__": 1,
                "pfr_driver_class": 1,
                "_CTOR_LIST__": 1,
                "_imp__EngAllocMem": 1,
                "_bss_end__": 1,
                "__crt_xc_end__": 1,
                "pfr_metrics_service_rec": 1,
                "afm_parser_funcs": 1,
                "__crt_xc_start__": 1,
                "__CTOR_LIST__": 1,
                "_rt_psrelocs_size": 1,
                "pshinter_module_class": 1,
                "ft_smooth_lcdv_renderer_class": 1,
                "tt_cmap10_class_rec": 1,
                "_file_alignment__": 1,
                "_head_win32ss_libwin32k_a": 1,
                "_imp__EngMapFontFileFD": 1,
                "t1_cmap_custom_class_rec": 1,
                "tt_cmap0_class_rec": 1,
                "memchr": 1,
                "_major_os_version__": 1,
                "_IAT_start__": 1,
                "_end__": 1,
                "_DTOR_LIST__": 1,
                "pfr_cmap_class_rec": 1,
                "_size_of_heap_reserve__": 1,
                "__crt_xt_start__": 1,
                "__ImageBase": 1,
                "_subsystem__": 1,
                "autofit_module_class": 1,
                "gftlibrary": 1,
                "_imp__EngUnmapFontFileFD": 1,
                "__tls_end__": 1,
                "tt_cmap4_class_rec": 1,
                "strncmp": 1,
                "t1_cmap_classes": 1,
                "_major_image_version__": 1,
                "_loader_flags__": 1,
                "tt_driver_class": 1,
                "__chkstk_ms": 1,
                "_imp__EngFreeMem": 1,
                "t42_driver_class": 1,
                "_rt_psrelocs_end": 1,
                "tt_cmap8_class_rec": 1,
                "psaux_module_class": 1,
                "af_indic_script_class": 1,
                "af_autofitter_interface": 1,
                "_minor_subsystem_version__": 1,
                "ft_outline_glyph_class": 1,
                "_minor_image_version__": 1,
                "t1_decoder_funcs": 1,
                "_imp__EngDebugPrint": 1,
                "memmove": 1,
                "ft_raster5_renderer_class": 1,
                "ft_bitmap_glyph_class": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "tt_cmap14_class_rec": 1,
                "t1_builder_funcs": 1,
                "__crt_xt_end__": 1,
                "_imp__EngMultiByteToUnicodeN": 1,
                "af_dummy_script_class": 1,
                "psnames_module_class": 1,
                ".gnu_debuglink": 1,
                ".debug_aranges": 1,
                ".debug_info": 1,
                ".debug_abbrev": 1,
                ".debug_line": 1,
                ".debug_frame": 1,
                ".debug_str": 1,
                ".debug_loc": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rdata": 1,
                "perm=m-r-- name=.gnu_debuglink": 1,
                "perm=m-rw- name=.bss": 1,
                "perm=m-r-- name=.edata": 1,
                "perm=m-rw- name=.idata": 1,
                "perm=m-rw- name=.rsrc": 1,
                "perm=m-r-- name=.reloc": 1,
                "perm=m-r-- name=.rossym": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=win32k.sys_EngAllocMem": 2,
                "bind=NONE type=FUNC name=win32k.sys_EngDebugPrint": 2,
                "bind=NONE type=FUNC name=win32k.sys_EngFreeMem": 2,
                "bind=NONE type=FUNC name=win32k.sys_EngMapFontFileFD": 2,
                "bind=NONE type=FUNC name=win32k.sys_EngMultiByteToUnicodeN": 2,
                "bind=NONE type=FUNC name=win32k.sys_EngUnmapFontFileFD": 2,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Activate_Size": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Add_Default_Modules": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Add_Module": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Angle_Diff": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Atan2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Attach_File": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Attach_Stream": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Bitmap_Convert": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Bitmap_Copy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Bitmap_Done": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Bitmap_Embolden": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Bitmap_New": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_CeilFix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_ClassicKern_Free": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_ClassicKern_Validate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Cos": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_DivFix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Done_Face": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Done_FreeType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Done_Glyph": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Done_Library": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Done_Size": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Face_CheckTrueTypePatents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Face_SetUnpatentedHinting": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_FloorFix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_CMap_Format": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_CMap_Language_ID": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Char_Index": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Charmap_Index": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_First_Char": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Glyph": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Glyph_Name": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Kerning": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_MM_Var": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Module": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Multi_Master": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Name_Index": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Next_Char": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_PFR_Advance": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_PFR_Kerning": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_PFR_Metrics": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_PS_Font_Info": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_PS_Font_Private": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Postscript_Name": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Renderer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Sfnt_Name": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Sfnt_Name_Count": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Sfnt_Table": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_SubGlyph_Info": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_Track_Kerning": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_TrueType_Engine_Type": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Get_WinFNT_Header": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_GlyphSlot_Embolden": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_GlyphSlot_Oblique": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_GlyphSlot_Own_Bitmap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Glyph_Copy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Glyph_Get_CBox": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Glyph_Stroke": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Glyph_StrokeBorder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Glyph_To_Bitmap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Glyph_Transform": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Has_PS_Glyph_Names": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Init_FreeType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Library_Version": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_List_Add": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_List_Finalize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_List_Find": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_List_Insert": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_List_Iterate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_List_Remove": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_List_Up": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Load_Char": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Load_Glyph": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Load_Sfnt_Table": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Matrix_Invert": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Matrix_Multiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_MulDiv": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_MulFix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_New_Face": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_New_Library": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_New_Memory_Face": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_New_Size": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_OpenType_Free": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_OpenType_Validate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Open_Face": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Check": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Copy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Decompose": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Done": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Done_Internal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Embolden": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_GetInsideBorder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_GetOutsideBorder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Get_BBox": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Get_Bitmap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Get_CBox": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Get_Orientation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_New": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_New_Internal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Render": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Reverse": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Transform": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Outline_Translate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Remove_Module": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Render_Glyph": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Request_Size": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_RoundFix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Select_Charmap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Select_Size": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_Char_Size": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_Charmap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_Debug_Hook": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_MM_Blend_Coordinates": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_MM_Design_Coordinates": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_Pixel_Sizes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_Renderer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_Transform": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_Var_Blend_Coordinates": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Set_Var_Design_Coordinates": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Sfnt_Table_Info": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Sin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stream_OpenGzip": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stream_OpenLZW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_BeginSubPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_ConicTo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_CubicTo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_Done": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_EndSubPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_Export": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_ExportBorder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_GetBorderCounts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_GetCounts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_LineTo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_New": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_ParseOutline": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_Rewind": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Stroker_Set": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Tan": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_TrueTypeGX_Free": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_TrueTypeGX_Validate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Vector_From_Polar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Vector_Length": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Vector_Polarize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Vector_Rotate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Vector_Transform": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ftfd.dll_FT_Vector_Unit": 1,
                "section=.rdata type=utf16le string=<NULL>": 1,
                "section=.rdata type=utf32le string=\\a\\b\\t\\n\\v\\r": 1,
                "section=.rdata type=utf32le string=#+3;CScs": 1,
                "section=.rdata type=utf32le string=!1Aa": 1,
                "section=.rdata type=utf32le string=\\a\\a\\b\\b\\t\\t\\n\\n\\v\\v\\f\\f\\r\\r": 1,
                "section=.rdata type=utf32le string=@@@\u0100\u4000\u0100\u0100\u4400 blocks=Basic Latin,Latin Extended-A,CJK Unified Ideographs Extension A": 1,
                "section=.rdata type=utf8 string=;#(\u0107 blocks=Basic Latin,Latin Extended-A": 2,
                "section=.rdata type=utf16le string=\\a\\b\\t\\n\\v\\f\\r": 4,
                "section=.rdata type=utf16le string= !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_": 2,
                "section=.rdata type=utf16le string=`abcdefghijklmn": 2,
                "section=.rdata type=utf16le string=opqr": 2,
                "section=.rdata type=utf16le string=stuvwxyz": 2,
                "section=.rdata type=utf32le string=\\nd\u03e8\u2710 blocks=Basic Latin,Greek and Coptic,Dingbats": 1,
                "section=.rdata type=utf16le string= !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~": 1,
                "section=.rdata type=utf16le string=c\u00ef\u00f0\u00f1\u00f2\u00f3\u00f4\u00f5\u00f6\u00f7\u00f8\\e blocks=Basic Latin,Latin-1 Supplement": 4,
                "section=.rdata type=utf16le string=mn\u010b\u010c\u010d\u010e\u010f\u0110\u0111\u0112\u0113\u0114\u0115\u0116\u0117\u0118\u0119\u011a\u011b\u011c\u011d\u011e\u011f\u0120\u0121\u0122\u0123\u0124\u0125\u0126\u0127\u0128\u0129\u012a\u012b\u012c\u012d\u012e\u012f\u0130\u0131\u0132\u0133\u0134\u0135\u0136\u0137\u0138\u0139\u013a\u013b\u013c\u013d\u013e blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf16le string=mn\u010b\u010c\u010d\u010e\u0110\u012c\u012d\u012e\u0131\u013a\u013b blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf16le string=mn\u010b\u010c\u010d blocks=Basic Latin,Latin Extended-A": 2,
                "section=.rdata type=utf16le string=ABCDEFGHIJKLMNOPQRSTUVWXYZ\u7262\u6361\u656b\u6c74\u6665t\u6162\u6b63\u6c73\u7361h\u7262\u6361\u656b\u7274\u6769\u7468\u6100\u6373\u6969\u6963\u6372\u6d75\u7500\u646e\u7265\u6373\u726fe\u7571\u746f\u6c65\u6665tabcdefghijklmnopqrstuvwxyz\u7262\u6361\u6c65\u6665t\u6162r\u7262\u6361\u7265\u6769\u7468\u6100\u6373\u6969\u6974\u646ce\u7865\u6c63\u6d61\u6f64\u6e77\u6300\u6e65t\u7473\u7265\u696c\u676e\u6600\u6172\u7463\u6f69n\u6579n\u6c66\u726f\u6e69\u7300\u6365\u6974\u6e6f\u6300\u7275\u6572\u636ey\u7571\u746f\u7365\u6e69\u6c67e\u7571\u746f\u6465\u6c62\u656c\u7466\u6700\u6975\u6c6c\u6d65\u746f\u656c\u7466\u6700\u6975\u736c\u6e69\u6c67\u656c\u7466\u6700\u6975\u736c\u6e69\u6c67\u6972\u6867t\u6966\u6600l\u6e65\u6164\u6873\u6400\u6761\u6567r\u6164\u6767\u7265\u6264l\u6570\u6972\u646f\u6563\u746e\u7265\u6465\u7000\u7261\u6761\u6172\u6870\u6200\u6c75\u656ct\u7571\u746f\u7365\u6e69\u6c67\u6162\u6573\u7100\u6f75\u6574\u6264\u626c\u7361e\u7571\u746f\u6465\u6c62\u6972\u6867t\u7567\u6c69\u656c\u6f6d\u7274\u6769\u7468\u6500\u6c6c\u7069\u6973s\u6570\u7472\u6f68\u7375\u6e61d\u7571\u7365\u6974\u6e6f\u6f64\u6e77\u6700\u6172\u6576\u6100\u7563\u6574\u6300\u7269\u7563\u666d\u656cx\u6974\u646ce\u616d\u7263\u6e6f\u6200\u6572\u6576\u6400\u746f\u6361\u6563\u746e\u6400\u6569\u6572\u6973s\u6972\u676e\u6300\u6465\u6c69\u616c\u6800\u6e75\u6167\u7572\u6c6d\u7561t\u676f\u6e6f\u6b65\u6300\u7261\u6e6f\u6500\u646d\u7361h\u4541\u6f00\u6472\u6566\u696d\u696e\u656e\u4c00\u6c73\u7361h\u734f\u616c\u6873\u4f00E\u726f\u6d64\u7361\u7563\u696c\u656e\u6100e\u6f64\u6c74\u7365\u6973\u6c00\u6c73\u7361h\u736f\u616c\u6873\u6f00e\u6567\u6d72\u6e61\u6264\u736c\u6f00\u656e\u7573\u6570\u6972\u726f\u6c00\u676f\u6369\u6c61\u6f6et\u756d\u7400\u6172\u6564\u616d\u6b72\u4500\u6874\u6f00\u656e\u6168\u666c\u7000\u756c\u6d73\u6e69\u7375\u5400\u6f68\u6e72\u6f00\u656e\u7571\u7261\u6574r\u6964\u6976\u6564\u6200\u6f72\u656b\u626e\u7261\u6400\u6765\u6572e\u6874\u726fn\u6874\u6572\u7165\u6175\u7472\u7265s\u7774\u736f\u7075\u7265\u6f69r\u6572\u6967\u7473\u7265\u6465\u6d00\u6e69\u7375\u6500\u6874\u6d00\u6c75\u6974\u6c70y\u6874\u6572\u7365\u7075\u7265\u6f69r\u6f63\u7970\u6972\u6867t\u6141\u7563\u6574\u4100\u6963\u6372\u6d75\u6c66\u7865\u4100\u6964\u7265\u7365\u7369\u4100\u7267\u7661e\u7241\u6e69g\u7441\u6c69\u6564\u4300\u6563\u6964\u6c6ca\u6145\u7563\u6574\u4500\u6963\u6372\u6d75\u6c66\u7865\u4500\u6964\u7265\u7365\u7369\u4500\u7267\u7661e\u6149\u7563\u6574\u4900\u6963\u6372\u6d75\u6c66\u7865\u4900\u6964\u7265\u7365\u7369\u4900\u7267\u7661e\u744e\u6c69\u6564\u4f00\u6361\u7475e\u634f\u7269\u7563\u666d\u656cx\u644f\u6569\u6572\u6973s\u674f\u6172\u6576\u4f00\u6974\u646ce\u6353\u7261\u6e6f\u5500\u6361\u7475e\u6355\u7269\u7563\u666d\u656cx\u6455\u6569\u6572\u6973s\u6755\u6172\u6576\u5900\u6361\u7475e\u6459\u6569\u6572\u6973s\u635a\u7261\u6e6f\u6100\u6361\u7475e\u6361\u7269\u7563\u666d\u656cx\u6461\u6569\u6572\u6973s\u6761\u6172\u6576\u6100\u6972\u676e\u6100\u6974\u646ce\u6363\u6465\u6c69\u616c\u6500\u6361\u7475e\u6365\u7269\u7563\u666d\u656cx\u6465\u6569\u6572\u6973s\u6765\u6172\u6576\u6900\u6361\u7475e\u6369\u7269\u7563\u666d\u656cx\u6469\u6569\u6572\u6973s\u6769\u6172\u6576\u6e00\u6974\u646ce\u616f\u7563\u6574\u6f00\u6963\u6372\u6d75\u6c66\u7865\u6f00\u6964\u7265\u7365\u7369\u6f00\u7267\u7661e\u746f\u6c69\u6564\u7300\u6163\u6f72n\u6175\u7563\u6574\u7500\u6963\u6372\u6d75\u6c66\u7865\u7500\u6964\u7265\u7365\u7369\u7500\u7267\u7661e\u6179\u7563\u6574\u7900\u6964\u7265\u7365\u7369\u7a00\u6163\u6f72n\u7865\u6c63\u6d61\u6d73\u6c61l\u7548\u676e\u7261\u6d75\u616c\u7475\u6d73\u6c61l\u6f64\u6c6c\u7261\u6c6f\u7364\u7974\u656c\u6400\u6c6f\u616c\u7372\u7075\u7265\u6f69r\u6d61\u6570\u7372\u6e61\u7364\u616d\u6c6c\u4100\u7563\u6574\u6d73\u6c61l\u6170\u6572\u6c6e\u6665\u7374\u7075\u7265\u6f69r\u6170\u6572\u726e\u6769\u7468\u7573\u6570\u6972\u726f\u7400\u6f77\u6f64\u6574\u6c6e\u6165\u6564r\u6e6f\u6465\u746f\u6e65\u656c\u6461\u7265\u7a00\u7265\u6f6f\u646c\u7473\u6c79e\u6e6f\u6f65\u646c blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A": 1,
                "section=.rdata type=utf16le string=)3\u02da\u04aa@LV^a\u0441\u045ej\u046b\u047e\u03c6\u02b8\u049fp\u02dex blocks=Basic Latin,Spacing Modifier Letters,Cyrillic,Greek and Coptic": 1,
                "section=.rdata type=utf32le string=#&5;H": 1,
                "section=.rdata type=utf8 string=To\\a9": 1,
                "section=.rdata type=utf8 \u010e\u0117\u0121\u013f blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=s\u0154\u015c\u0174 blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=\u0247\u0251\u0258\u0271 blocks=Latin Extended-B,IPA Extensions": 1,
                "section=.rdata type=utf8 string=t\u028f\u02af\u02bb blocks=Basic Latin,IPA Extensions,Spacing Modifier Letters": 1,
                "section=.rdata type=utf8 string=]\u0428\u0430\u0437 blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=a\\v\u044b\u0457\u0461\u0468\u046f\u0479 blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=e\\a\u0499\u04e1\u04ea\u04fc blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=[h\\b\u04ab\u04b4 blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=]\u054b\u0554d blocks=Basic Latin,Armenian": 1,
                "section=.rdata type=utf8 string=d\u0680\u0688\u0698\u06a1a\\n blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=~\u05c7\u05d5\u05f3 blocks=Basic Latin,Hebrew": 1,
                "section=.rdata type=utf16le string=         h((((                  H": 1,
                "section=.rdata type=utf16le string=                                 H": 1,
                "section=.rdata type=utf16le string=         (((((                  H": 1,
                "section=.rdata type=utf16le string= !\"#$%&'()%*+,-./012": 1,
                "section=.rdata type=utf16le :;": 1,
                "section=.rdata type=utf16le string=<(((((((((((((((((((((((((((((((((": 1,
                "section=.rdata type=utf16le string==>?@A\u2042\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u68e2\u2892\u2882\u2892\u28a2\u2082\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u2082\u2082\u2082\u4892\u10a2\u10b2\u10b2\u1052\u1052\u1052\u10b2\u10b2\u10b2\u10b2\u10b2\u1042\u1072\u1042\u1072\u8472\u8432\u8432\u8432\u8432\u8432\u8432\u8432\u8432\u8432\u1032\u1072\u10b2\u10b2\u10b2\u10b2\u10b2\u81b2\u8113\u8113\u8113\u8113\u8113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u1013\u10b2\u10b2\u10b2\u10b2\u10b2\u82b2\u8213\u8213\u8213\u8213\u8213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u1013\u10b2\u10b2\u10b2\u20b2\u20e2\u20e2\u20e2\u20e2\u20e2\u28e2\u2082\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u48e2\u1072\u10b2\u1052\u1052\u1052\u1052\u10b2\u10b2\u10b2\u12b2\u1013\u10b2\u30b2\u10e2\u10b2\u10b2\u1052\u1452\u1432\u1032\u12b2\u1013\u10b2\u10b2\u14b2\u1232\u1013\u10b2\u10b2\u10b2\u10b2\u01b2\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u1013\u01b2\u0113\u0113\u0113\u0113\u0113\u0113\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u1013\u02b2\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0113\u0213\u0113\u0213\u0113\u0213\u0213\u0213\u0113\u0113\u0213\u0113\u0213\u0113\u0113\u0213\u0113\u0113\u0113\u0213\u0213\u0113\u0113\u0113\u0113\u0213\u0113\u0113\u0213\u0113\u0113\u0113\u0213\u0213\u0213\u0113\u0113\u0213\u0113\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0113\u0213\u0113\u0213\u0213\u0113\u0213\u0113\u0113\u0213\u0113\u0113\u0113\u0213\u0113\u0213\u0113\u0113\u0213\u0213 blocks=Basic Latin,General Punctuation,Combining Diacritical Marks for Symbols,CJK Unified Ideographs,Braille Patterns,Superscripts and Subscripts,CJK Unified Ideographs Extension A,Georgian,Myanmar,Latin Extended-A,Latin Extended-B,Currency Symbols,Ethiopic,Katakana,Unified Canadian Aboriginal Syllabics,Spacing Modifier Letters": 1,
                "section=.rdata type=utf16le string=\"\u00d2\u10d2\"\u00d2\u10d2\"\u00d2 blocks=Basic Latin,Latin-1 Supplement,Georgian": 1,
                "section=.rdata type=utf16le string=###########################": 1,
                "section=.rdata type=utf16le string=##\u1023\u1022\" blocks=Basic Latin,Myanmar": 1,
                "section=.rdata type=utf16le \u00c3\u00c3\u00c3\u00c2\u00c2\u10c3\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u00c2\u2000b\u00c3\u00d2\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2 blocks=Basic Latin,Latin-1 Supplement,Georgian,General Punctuation": 1,
                "section=.rdata type=utf16le string=\"#################################\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2##\u10b2\u10b2\u10b2\u00b2# blocks=Basic Latin,Latin-1 Supplement,Georgian": 1,
                "section=.rdata type=utf16le string=######################\u00d2\u00d2\u00d2\u00d2#\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2#\u00d2\u00d2\u00d2#\u00d2\u00d2\u00d2\u00d2\u00d2 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=#######################\u00d2\u00d2\u00d2 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le BB\u10b2\u10b2\u02b2 blocks=Basic Latin,Georgian,Spacing Modifier Letters": 1,
                "section=.rdata type=utf16le BB\u10b2\u10b2\u00b2 blocks=Basic Latin,Georgian,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=RRRRRRRRRRRRRRRRRRRRRRRRRR": 1,
                "section=.rdata type=utf16le string=BR\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u10b2\u10b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2 blocks=Basic Latin,Latin-1 Supplement,Georgian": 1,
                "section=.rdata type=utf16le": 1,
                "section=.rdata type=utf16le string=#\u00d2##########B############# blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=#####": 1,
                "section=.rdata type=utf16le string=##########\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=B\u00b2\u00b2\u00b2\u1000\u00b2\u1052\u1052\u00b2 blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rdata type=utf16le string=RR\u00b2\u00b2\u00b2RR blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le b0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=ReactOS Development Team/FreeType Team": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=FreeType font handling library": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .4-SVN": 2,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=freetype": 1,
                "section=.rsrc type=utf16le string=OriginalCopyright": 1,
                "section=.rsrc type=utf16le string=Copyright 1996-2013 FreeType Team": 1,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string=Copyright 1998-2011 ReactOS Team": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=freetype.dll": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=ReactOS Operating System": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "arch     x86": 1,
                "binsz    1031168": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x00108821": 1,
                "compiled Tue Jul 15 17:26:33 2014": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x000fcc81": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       native": 1,
                "overlay  true": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Native": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0xa": 1,
                "TimeDateStamp : 0x53c55639": 1,
                "PointerToSymbolTable : 0xfba00": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x2102": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x2": 1,
                "MinorLinkerVersion : 0x17": 1,
                "SizeOfCode : 0x53800": 1,
                "SizeOfInitializedData : 0x23c00": 1,
                "SizeOfUninitializedData : 0x200": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x55000": 1,
                "ImageBase : 0x10000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x4": 1,
                "MinorOperatingSystemVersion : 0x0": 1,
                "MajorImageVersion : 0x1": 1,
                "MinorImageVersion : 0x0": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x104000": 1,
                "SizeOfHeaders : 0x400": 1,
                "CheckSum : 0xfcc81": 1,
                "Subsystem : 0x1": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x200000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x79000": 1,
                "Size : 0x1044": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x7b000": 1,
                "Size : 0xf4": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x7c000": 1,
                "Size : 0x418": 1,
                "IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "VirtualAddress : 0x7d000": 1,
                "Size : 0x157c": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x7b044": 1,
                "Size : 0x1c": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "win32k.sys": 1,
                "type=SET_32 win32k.sys_EngAllocMem": 1,
                "type=SET_32 win32k.sys_EngDebugPrint": 1,
                "type=SET_32 win32k.sys_EngFreeMem": 1,
                "type=SET_32 win32k.sys_EngMapFontFileFD": 1,
                "type=SET_32 win32k.sys_EngMultiByteToUnicodeN": 1,
                "type=SET_32 win32k.sys_EngUnmapFontFileFD": 1,
                "1031168": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 42.4.0.0": 1,
                "ProductVersion: 0.4.0.0": 1,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x2": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: ReactOS Development Team/FreeType Team": 1,
                "FileDescription: FreeType font handling library": 1,
                "FileVersion: 42.4-SVN": 1,
                "InternalName: freetype": 1,
                "OriginalCopyright: Copyright 1996-2013 FreeType Team": 1,
                "LegalCopyright: Copyright 1998-2011 ReactOS Team": 1,
                "OriginalFilename: freetype.dll": 1,
                "ProductName: ReactOS Operating System": 1,
                "ProductVersion: 0.4-SVN": 1
            }
        }
    ]
}