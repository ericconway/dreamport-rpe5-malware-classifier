{
    "filepath": "/corpus/benign/smlogsvc.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "b7a95ca67b1518fb54b5e964413ed10c"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "loop ;cmpl %ebx, -(%edx);fbstp (%edi);addb %al, (%eax);addb %ah, -(%edi)": 1,
                "addb %al, (%eax);addb %ah, -(%edi);scasb %es:(%edi), %al;cmpb $-, -(%esp,%esi,);jl  <.text+>": 1,
                "jl - <.text+>;movl $, %eax;cmpb $-, (%esi,%esi);jl - <.text+>;movb , %al": 1,
                "movb , %al;cmpb $-, (%esi,%eax,);jl - <.text+>;lahf;cmpb $-, -(%esi,%ebp,)": 1,
                "jl - <.text+>;xchgl %edi, %eax;cmpb $-, -(%eax,%esi,);jl  <.text+>;pushl %ds": 1,
                "testb %bh, (%ebp,%ebp,);cmpl $, (%esi,%ebp,);cmpb $-, -(%edx,%edi,);jl  <.text+>;scasb %es:(%edi), %al": 1,
                "cmpb $-, -(%ecx,%esi);jl  <.text+>;pushl %cs;cmpl $, (%ecx,%ecx,);cmpb $-, -(%edi,%edx,)": 1,
                "subl $, %eax;cmpb $-, -(%eax,%ecx,);jl  <.text+>;movw -(%ebx), %es;jl - <.text+>": 1,
                "movw -(%ebx), %es;jl - <.text+>;stosl %eax, %es:(%edi);xchgl %edx, %eax;jl  <.text+>": 1,
                "xchgl %edx, %eax;jl  <.text+>;cwtl;cmpb $-, (%ebx,%edi,);jl - <.text+>": 1,
                "sahf;incl %ecx;jle  <.text+>;addb %al, (%eax);addb %dh, (%eax)": 1,
                "adcl %ebx, (%edx);testb $, %al;cmpl %ebx, (%eax,%eax);addb %al, (%eax,%eax);addb %ah, (%esi)": 1,
                "addb %al, (%eax,%eax);addb %ah, (%esi);popal;addb %dh, (%ebp);insb %dx, %es:(%edi)": 1,
                "addb %dh, (%eax,%eax);addb %dh, (%ebp);insb %dx, %es:(%edi);addb %ch, (%eax,%eax);addb %ah, (%ecx)": 1,
                "addb %ah, (%ecx);je  <.text+>;popal;addb %dl, (%ebx);outsl (%esi), %dx": 2,
                "outsl (%esi), %dx;addb %ah, (%esi);je  <.text+>;popl %esp;addb %dl, (%edi)": 1,
                "incl %esp;addb %cl, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "js  <.text+>;subl $, %eax;addb %dh, (%eax,%eax);js  <.text+>;subl $, %eax": 1,
                "subl $, %eax;addb %dh, (%edx);addb %bh, (%eax);andl $, %eax;addb %bh, (%eax)": 2,
                "addb %al, (%esi);imull $, (%eax), %eax;andb %al, (%eax);pushl %esp;addb %bh, (%ecx)": 1,
                "addb %al, (%eax);pushl %edx;addb %ah, (%ebp);jae  <.text+>;je  <.text+>": 1,
                "jb  <.text+>;jb  <.text+>;addb %ch, %gs:(%esi);je  <.text+>;andb %al, (%eax)": 2,
                "addb %dh, (%ebp);outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax);addb %dl, (%eax,%eax)": 1,
                "arpl %ax, (%eax);addb %ah, %gs:(%eax);addb %dl, (%eax);jb  <.text+>;outsl (%esi), %dx": 1,
                "incl %ebx;addb %ch, (%edi);insl %dx, %es:(%edi);addb %ch, (%ebp);popal": 2,
                "andb %al, (%eax);incl %esi;addb %ch, (%eax,%eax);addb %ah, (%edi);jae  <.text+>": 1,
                "addb %ah, (%ebp);andb %al, (%eax);decl %ecx;addb %ch, (%esi);je  <.text+>": 1,
                "addb %al, (%ebp);decl %edi;addb %al, (%esi);andb %al, (%eax);incl %ebx": 1,
                "addb %dh, (%eax);addb %al, %gs:(%eax);addb %al, (%eax);addb %dl, (%eax);addb %ch, %fs:(%eax)": 1,
                "je  <.text+>;popal;addb %al, (%ebx);outsl (%esi), %dx;addb %ch, (%eax,%eax)": 1,
                "addb %ah, (%ebp);andb %al, (%eax);pushl %ebx;addb %dh, (%eax,%eax);addb %dh, (%eax)": 1,
                "je  <.text+>;andb %al, (%eax);decl %ebp;addb %ch, (%edi);addb %ch, %fs:(%ecx)": 1,
                "insl %dx, %es:(%edi);addb %ah, (%eax,%eax);addb %al, (%eax);addb %ch, (%esi);addb %ah, (%edx)": 1,
                "addb %bh, %bh;ljmpl *(%esi);arpl %ax, (%eax);addl %esi, (%edx);arpl %ax, (%eax)": 1,
                "addb %bh, %dl;xchgl %eax, (%eax);addl %edi, %esi;xchgl %eax, (%eax);addl %edi, %edi": 1,
                "xchgl %ebx, %eax;addb %al, (%ecx);decl %edx;xchgl %ebx, %eax;addb %al, (%ecx)": 1,
                "jb  <.text+>;addb %al, (%eax);orl $, %eax;decl %esp;decl %edi": 1,
                "orl $, %eax;decl %esp;decl %edi;pushl %ebx;pushl %ebx": 1,
                "decl %edi;pushl %ebx;pushl %ebx;andb %ah, (%ebp);jb  <.text+>": 1,
                "decl %ecx;decl %esi;andb %ah, (%ebp);jb  <.text+>;jb  <.text+>": 1,
                "andb %ah, (%ebp);jb  <.text+>;jb  <.text+>;orb (%eax), %al;addb %dl, (%edx)": 1,
                "xorb %dh, (%edx);cmpb %cl, ;outsb (%esi), %dx;popal;bound (%ebp), %ebp": 1,
                "outsb (%esi), %dx;popal;bound (%ebp), %ebp;je  <.text+>;andb %ch, (%ecx)": 1,
                "andb %ch, (%eax);popal;jo  <.text+>;orb (%eax), %al;addb %al, (%eax)": 1,
                "popal;jo  <.text+>;orb (%eax), %al;addb %al, (%eax);addb %dl, (%edx)": 1,
                "orb (%eax), %al;addb %al, (%eax);addb %dl, (%edx);xorb %dh, (%ecx);cmpl %ecx, ": 1,
                "addb %al, (%eax);addb %dl, (%edx);xorb %dh, (%ecx);cmpl %ecx, ;outsb (%esi), %dx": 1,
                "insb %dx, %es:(%edi);andb %ah, %gs:(%ebp);imull $, (%ebx), %esp;addb %al, (%eax);pushl %edx": 1,
                "imull $, (%eax), %esp;jb  <.text+>;outsl (%esi), %dx;jb  <.text+>;orb (%eax), %al": 1,
                "insb %dx, %es:(%edi);imull $, (%ebx), %esp;andb %ch, (%eax);jae  <.text+>;jb  <.text+>": 1,
                "popal;jae  <.text+>;andb %ah, (%ebx);outsb (%esi), %dx;je  <.text+>": 1,
                "pushl $;jo  <.text+>;imull $, (%ebx), %esp;daa;jae  <.text+>": 1,
                "andb %ah, (%esi);jb  <.text+>;insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <.text+>": 1,
                "outsw (%esi), %dx;jb  <.text+>;outsb %gs:(%esi), %dx;jbe  <.text+>;jb  <.text+>": 1,
                "je  <.text+>;orb (%eax), %al;pushl %edx;xorb %dh, %ss:(%eax);cmpb %cl, ": 1,
                "pushl %edx;xorb %dh, %ss:(%eax);cmpb %cl, ;outsl (%esi), %dx;je  <.text+>": 1,
                "outsw (%esi), %dx;jb  <.text+>;popal;jb  <.text+>;jne  <.text+>": 1,
                "xorb , %cl;insb %dx, %es:(%edi);outsl (%esi), %dx;popal;je  <.text+>": 1,
                "popal;je  <.text+>;outsb (%esi), %dx;andb %dh, (%bx,%si);imull $, (%esi), %ebp": 1,
                "orb (%edx), %cl;addb %al, (%eax);pushl %edx;jne  <.text+>;je  <.text+>": 1,
                "orb (%edx), %cl;pushl %eax;jb  <.text+>;jb  <.text+>;insl %dx, %es:(%edi)": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax)": 37,
                "adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);testb %al, (%eax);testb %al, (%eax)": 1,
                "addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %ah, (%eax)": 1,
                "adcb %al, (%eax);addl $, (%ecx);addl $, (%ecx);addl %eax, (%ecx);addl %eax, (%ecx)": 1,
                "adcb %al, (%eax);addb $-, (%ecx);addl %eax, -(%edx);addl %eax, (%edx);addl %eax, (%edx)": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb $, %al;adcb %al, (%eax);adcb %al, (%eax)": 1,
                "addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addl %eax, (%ecx)": 1,
                "jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;imull $, (%esi), %ebp;popal": 1,
                "arpl %sp, (%ebp);jae  <.text+>;imull $, (%esi), %ebp;popal;je  <.text+>": 1,
                "jae  <.text+>;jb  <.text+>;bound (%edx), %ebp;arpl %si, (%ecx,%ecx,);outsw (%esi), %dx": 1,
                "popal;je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;incl %ecx": 1,
                "imull $, (%esi), %ebp;jae  <.text+>;popal;incl %edx;outsl (%esi), %dx": 1,
                "incl %edx;outsl (%esi), %dx;js  <.text+>;addb %dh, (%ebp);jb  <.text+>": 1,
                "jb  <.text+>;xorb (%esi), %ch;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %al, (%eax)": 1,
                "pushl %es;addb %al, (%ecx);addb %al, (%eax);adcb %al, (%eax);addl (%esi), %eax": 1,
                "addb %al, (%eax);addb %cl, (%eax);pushal;pushl $;addb %al, (%eax)": 1,
                "addb %cl, (%eax);pushal;pushl $;addb %al, (%eax);jo  <.text+>": 1,
                "pushal;pushl $;addb %al, (%eax);jo  <.text+>;js  <.text+>": 1,
                "orb %cl, (%eax);addb %al, (%eax);orb %al, (%eax);orb %al, (%eax);popl %es": 1,
                "popl %es;orb %al, (%eax);addb %al, (%eax);subb %al, (%eax);outsb (%esi), %dx": 1,
                "addb %ch, (%eax);outsb (%esi), %dx;jne  <.text+>;insb %dx, %es:(%edi);subl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl -(%ecx);addb %al, (%ecx)": 1,
                "addb %al, (%eax);popl %ebp;cli;addb %al, (%ecx);popal": 1,
                "pushl %ebx;subl $, %eax;movl %edx, (%eax,%eax,);outb %al, $;movl , %eax": 1,
                "jo  <.text+>;bound (%eax), %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %esi;movl , %eax;popl %ebx;leave;retl": 1,
                "int;int;int;int;int": 331,
                "je  <.text+>;movw (%edi), %cx;shll $, %eax;cmpw $, %cx;jb  <.text+>": 1,
                "shll $, %eax;cmpw $, %cx;jb  <.text+>;cmpw $, %cx;ja  <.text+>": 1,
                "movzwl %cx, %ecx;leal -(%eax,%ecx), %eax;jmp  <.text+>;cmpw $, %cx;jb  <.text+>": 2,
                "leal -(%eax,%ecx), %eax;addl %ebx, %edi;decl (%ebp);testl %esi, %esi;jne - <.text+>": 1,
                "movw %ax, (%ecx);incl -(%ebp);xorl %esi, %esi;jmp  <.text+>;cmpl %esi, (%ebp)": 1,
                "jmp  <.text+>;cmpl %esi, (%ebp);je  <.text+>;cmpw %ax, (%edi);jne  <.text+>": 1,
                "jne  <.text+>;addl %ebx, %edi;decl (%ebp);addl %ebx, %edx;movw (%edx), %ax": 1,
                "movzwl %ax, %ecx;cmpl %esi, %ecx;jne - <.text+>;jmp  <.text+>;orl $-, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 14,
                "popl %ecx;xorl %eax, %eax;movl $, %esi;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "calll *;movl %eax, %esi;testl %esi, %esi;je  <.text+>;movl $, %edi": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%ebp)": 2,
                "pushl %esi;calll *;movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);je  <.text+>;movl , %esi;leal -(%ebp), %eax": 1,
                "movl , %esi;leal -(%ebp), %eax;pushl %eax;pushl %ebx;leal -(%ebp), %eax": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <.text+>;cmpl $, -(%ebp);jne  <.text+>": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 3,
                "jmp  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp);cmpl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);je  <.text+>;leal -(%ebp), %eax": 1,
                "cmpl %esi, (%ebp);pushl %edi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %edi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl (%edi), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl %esi, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl %esi;xorl %esi, %esi;xorl %ebx, %ebx;cmpl %esi, (%ebp);pushl %edi": 1,
                "calll *;testl %eax, %eax;jne  <.text+>;movl $, -(%ebp);jmp  <.text+>": 2,
                "cmpl %esi, %ebx;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "cmpl $, %eax;movl %eax, -(%ebp);jbe  <.text+>;addl %eax, %eax;pushl %eax": 2,
                "pushl (%ebp);calll *;popl %ebp;retl $;int": 2,
                "pushl $;popl %edi;movl $, (%esi);jmp  <.text+>;movl $, (%esi)": 1,
                "pushl %eax;pushl %edi;pushl %esi;pushl %ebx;pushl (%ebp)": 2,
                "pushl %edi;pushl %esi;pushl %ebx;pushl (%ebp);calll  <.text+>": 2,
                "ja  <.text+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 11,
                "pushl %edi;pushl $;pushl $;pushl (%ebp);movl %eax, %ebx": 1,
                "pushl $;pushl (%ebp);movl %eax, %ebx;calll *;movl %eax, %edi": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $;leal (%ebx), %eax": 5,
                "movw $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %esi;leal (%ebx), %edi;movsl (%esi), %es:(%edi)": 1,
                "cmpl %edi, %esi;jne  <.text+>;leal (%ebx), %esi;movl (%esi), %eax;cmpl %edi, %eax": 1,
                "movl $, (%ebx);cmpl %edi, (%ebx);jne  <.text+>;cmpl %eax, -(%ebp);je  <.text+>": 1,
                "calll *;testl %eax, %eax;jne  <.text+>;movl (%esi), %esi;cmpl %edi, %esi": 1,
                "pushl %edi;pushl %edi;pushl -(%ebp);calll *;cmpl %edi, %eax": 1,
                "cmpl %edi, %eax;movl %eax, (%ebx);je  <.text+>;pushl -(%ebp);pushl %eax": 1,
                "calll *;cmpl %edi, %esi;jne  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;pushl $;leal (%ebx), %esi;pushl %esi;pushl (%ebx)": 1,
                "pushl $;leal (%ebx), %esi;pushl %esi;pushl (%ebx);calll - <.text+>": 1,
                "calll - <.text+>;leal (%ebx), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;pushl $;popl %ebx;leal (%ebp), %ecx;pushl %ecx": 1,
                "pushl (%esi);calll - <.text+>;cmpl %edi, -(%ebp);jne  <.text+>;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jne  <.text+>;testb $, (%esi);movl $, %ebx;je  <.text+>": 1,
                "leal (%esi), %eax;pushl %eax;pushl %ebx;pushl $;leal (%esi), %eax": 2,
                "pushl (%esi);calll - <.text+>;movl %eax, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>": 1,
                "jmp  <.text+>;cmpl $, %eax;jne  <.text+>;leal (%esi), %eax;pushl %eax": 1,
                "leal (%esi), %ebx;pushl %ebx;pushl (%esi);movl %edi, -(%ebp);calll - <.text+>": 1,
                "leal (%esi), %eax;pushl %eax;pushl %edi;pushl $;pushl %ebx": 2,
                "movl %eax, (%esi);je  <.text+>;movw %di, (%eax);jmp  <.text+>;leal -(%ebp), %eax": 1,
                "je  <.text+>;movw %di, (%eax);jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);calll *;cmpl %edi, -(%ebp);jne  <.text+>;leal (%esi), %eax": 1,
                "pushl %esi;calll - <.text+>;movl , %esi;jmp  <.text+>;pushl (%ebp)": 1,
                "cmpl (%eax), %ecx;je  <.text+>;movl %eax, %esi;movl (%esi), %eax;testl %eax, %eax": 2,
                "testl %eax, %eax;je  <.text+>;pushl %eax;pushl $;calll *": 4,
                "calll *%ebx;movl (%esi), %eax;andl $, (%edi,%eax);movl (%esi), %eax;movl (%edi,%eax), %eax": 1,
                "movl %edi, -(%ebp);calll *;cmpl %edi, %eax;movl %eax, -(%ebp);jne  <.text+>": 1,
                "cmpl %edi, %eax;movl %eax, -(%ebp);jne  <.text+>;pushl %ebx;movl , %ebx": 1,
                "movl %eax, %esi;cmpl %edi, %esi;je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl -(%ebp);movl %edi, -(%ebp);calll *%ebx;cmpl %edi, %eax": 1,
                "jne  <.text+>;cmpl %edi, -(%ebp);jbe  <.text+>;cmpw %di, (%esi);je  <.text+>": 1,
                "movl %edi, -(%ebp);jle  <.text+>;cmpw %di, (%ebx);je  <.text+>;pushl %ebx": 1,
                "pushl %ebx;calll  <.text+>;movl -(%ebp), %edx;popl %ecx;movl , %ecx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;xorl %edi, %edi;cmpl %edi, %eax": 1,
                "calll *%esi;movl , %ebx;pushl %eax;calll *%ebx;testl %eax, %eax": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp);jmp  <.text+>;andl $, -(%ebp)": 1,
                "pushl (%eax,%ecx);leal -(%ebp), %eax;pushl %eax;movw $, -(%ebp);calll - <.text+>": 1,
                "cmpl $, -(%ebp);movl -(%ebp), %edx;movl %edx, (%eax);movl -(%ebp), %edx;movl %edx, (%eax)": 1,
                "movl %ecx, (%eax);je  <.text+>;cmpl $, -(%ebp);je  <.text+>;jmp  <.text+>": 1,
                "je  <.text+>;cmpl $, -(%ebp);je  <.text+>;jmp  <.text+>;movl -(%ebp), %eax": 1,
                "pushl %eax;calll *;decl -(%ebp);jns - <.text+>;pushl -(%ebp)": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;movl (%eax,%edi,), %eax;testl %eax, %eax;je  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;pushl %esi;pushl %edi": 1,
                "incl %esi;jmp  <.text+>;cmpl $, %edx;jne  <.text+>;xorl %edi, %edi": 1,
                "testl %ecx, %ecx;je  <.text+>;movl %esi, (%ecx);movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "xorl %edi, %edi;cmpl %edi, %ebx;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%ebp), %esi;xorl %edi, %edi;pushl %ebx;calll - <.text+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl %ebx;calll - <.text+>;cmpl %edi, -(%ebp);je  <.text+>": 1,
                "jmp  <.text+>;movl (%ebx), %eax;pushl %esi;pushl (%ebx);movl %eax, (%ebp)": 1,
                "pushl %edi;pushl (%ebx);leal (%ebx), %eax;pushl (%ebx);pushl (%ebx)": 1,
                "leal (%ebx), %eax;incl (%eax);cmpl $, (%eax);jbe  <.text+>;movl %esi, (%eax)": 1,
                "leal (%ebx), %eax;movl $, (%eax);jne  <.text+>;movl $, (%eax);movl (%ebx), %eax": 1,
                "jmp  <.text+>;testb $, %al;je  <.text+>;orl $, (%ebx);testb $, %al": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %esi": 1,
                "pushl %eax;calll *;movl (%esi), %eax;movl %edi, (%eax,%ebx,);incl %ebx": 1,
                "calll *;movl %edi, (%esi);jmp  <.text+>;movl (%esi), %eax;movl (%eax), %ecx": 1,
                "calll *;cmpl %edi, (%esi);jne - <.text+>;movl (%esi), %eax;cmpl %edi, %eax": 1,
                "pushl %esi;pushl %edi;leal -(%ebp), %eax;xorl %edi, %edi;pushl %eax": 1,
                "jne  <.text+>;cmpl $, (%ebx);je  <.text+>;movl (%ebx), %ecx;cmpl -(%ebp), %ecx": 1,
                "je  <.text+>;movl (%ebx), %ecx;cmpl -(%ebp), %ecx;jg  <.text+>;jl  <.text+>": 1,
                "cmpl $, %eax;jne  <.text+>;cmpl %edi, (%ebx);jne  <.text+>;movl (%ebx), %ecx": 1,
                "jl - <.text+>;cmpl -(%ebp), %ecx;jb - <.text+>;cmpl $, (%ebx);leal (%ebx), %esi": 1,
                "adcl -(%ebp), %eax;cmpl $, (%ebx);movl %ecx, (%ebx);movl %eax, (%ebx);jne  <.text+>": 1,
                "movl %ecx, (%ebx);movl %eax, (%ebx);jne  <.text+>;movl -(%ebp), %ecx;subl -(%ebp), %ecx": 1,
                "movl $, -(%ebp);calll - <.text+>;movl (%ebx), %edi;cmpl -(%ebp), %edi;movl (%ebx), %ecx": 1,
                "movl (%ebx), %edi;cmpl -(%ebp), %edi;movl (%ebx), %ecx;jg  <.text+>;jl  <.text+>": 1,
                "movl -(%ebp), %ecx;addl %eax, %ecx;adcl %edx, %esi;movl %ecx, (%ebx);movl %esi, (%ebx)": 1,
                "adcl %edx, %esi;movl %ecx, (%ebx);movl %esi, (%ebx);popl %edi;popl %esi": 1,
                "pushl %esi;pushl %edi;movl %eax, -(%ebp);xorl %esi, %esi;xorl %eax, %eax": 1,
                "pushl %eax;calll *;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "pushl %eax;calll *;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;popl %edi;popl %esi;calll  <.text+>;leave": 1,
                "movl %eax, -(%ebp);jne  <.text+>;movl %edi, -(%ebp);movw $, (%esi);incl %esi": 1,
                "incl %esi;cmpw %di, (%esi);jne - <.text+>;pushl %edi;leal -(%ebp), %eax": 1,
                "movl (%ebp), %eax;leal -(%ebp), %ecx;pushl %ecx;negl %eax;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;sbbl %eax, %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl (%ebp)": 1,
                "pushl $;calll *;popl %ebp;retl $;int": 1,
                "movl %eax, -(%ebp);pushl %edi;leal -(%ebp), %eax;xorl %esi, %esi;pushl %eax": 1,
                "cmpl $, %eax;jne  <.text+>;movl %esi, -(%ebp);jmp  <.text+>;calll *": 1,
                "calll *;cmpl $, %eax;movl %eax, -(%ebp);je  <.text+>;movl , %edi": 1,
                "pushl %esi;pushl $;pushl -(%ebp);calll  <.text+>;cmpl %esi, -(%ebp)": 2,
                "pushl -(%ebp);calll - <.text+>;cmpl %esi, -(%ebp);movl %eax, -(%ebp);je  <.text+>": 1,
                "movl %esi, -(%ebp);calll - <.text+>;cmpl %ebx, -(%ebp);movl %eax, -(%ebp);jne  <.text+>": 1,
                "pushl %eax;pushl $;pushl -(%ebp);movl %esi, -(%ebp);calll - <.text+>": 1,
                "calll - <.text+>;cmpl %esi, %eax;movl %eax, -(%ebp);je  <.text+>;leal -(%ebp), %eax": 3,
                "cmpl %esi, -(%ebp);popl %edi;popl %esi;je  <.text+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll *;movl -(%ebp), %ecx;movl -(%ebp), %eax;calll  <.text+>": 2,
                "testl %eax, %eax;je  <.text+>;xorl %eax, %eax;jmp  <.text+>;pushl (%edi)": 1,
                "movl (%edi), %edi;movl (%esi), %esi;jmp  <.text+>;pushl %edi;pushl %esi": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 2,
                "movl (%ebp), %edi;pushl %edi;pushl %esi;calll - <.text+>;testl %eax, %eax": 1,
                "movl (%esi), %esi;cmpw $, (%esi);movl (%edi), %edi;je  <.text+>;movl , %ebx": 1,
                "jne - <.text+>;pushl %edi;calll *%ebx;pushl %esi;leal (%edi,%eax,), %edi": 1,
                "xorl %eax, %eax;incl %eax;leal -(%ebp), %ecx;pushl %ecx;movl %eax, (%ebx)": 1,
                "incl %eax;leal -(%ebp), %ecx;pushl %ecx;movl %eax, (%ebx);movw %ax, -(%ebp)": 1,
                "jl  <.text+>;movl -(%ebp), %eax;cmpl (%esi), %eax;ja  <.text+>;andl $, (%ebx)": 1,
                "rep  stosl %eax, %es:(%edi);leal (%esi), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;movl $, (%ebx);jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %esi;calll - <.text+>;negl %eax;sbbl %eax, %eax": 1,
                "movl $, (%eax);leal (%edi), %eax;pushl %eax;movl $, (%esi);pushl (%edi)": 1,
                "pushl (%esi);xorl %edi, %edi;movl %edi, (%eax);calll - <.text+>;cmpl %edi, (%esi)": 1,
                "pushl $;pushl (%esi);movl $, (%esi);calll - <.text+>;movl %eax, %ebx": 1,
                "pushl %eax;calll *;movl (%esi), %eax;cmpl %edi, %eax;movl -(%ebp), %ecx": 1,
                "cmpl $, %eax;jne  <.text+>;cmpl $, (%esi);je  <.text+>;cmpl (%esi), %ecx": 1,
                "calll - <.text+>;xorl %eax, %eax;popl %ebp;retl $;int": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;testl %eax, %eax;pushl %ebx": 1,
                "testl %eax, %eax;pushl %ebx;pushl %esi;je  <.text+>;cmpl $, (%ebp)": 1,
                "movl , %esi;pushl %edi;pushl (%ebp);calll *%esi;movl %eax, %edi": 1,
                "pushl (%ebp);calll *%esi;movl %eax, %edi;leal (%edi,%edi), %eax;pushl %eax": 1,
                "leal (%edi,%edi), %eax;pushl %eax;pushl $;calll *;movl , %ebx": 1,
                "pushl %eax;calll *%ebx;movl %eax, -(%ebp);movl (%ebp), %eax;pushl (%eax)": 1,
                "movl %eax, %ebx;movl -(%ebp), %eax;testl %eax, %eax;je  <.text+>;testl %ebx, %ebx": 1,
                "cmpl $, (%ebp);movl $, %eax;jne  <.text+>;movl $, %eax;pushl %eax": 1,
                "calll *%esi;pushl $;xorl %eax, %eax;popl %ecx;leal -(%ebp), %edi": 1,
                "movl $, -(%ebp);movw $, -(%ebp);stosl %eax, %es:(%edi);calll *;movl (%ebp), %edi": 1,
                "movw $, (%ebx);pushl (%edi);leal (%ebx), %eax;pushl %eax;calll *%esi": 1,
                "leal (%ebx), %eax;pushl %eax;calll *%esi;pushl %ebx;calll *": 1,
                "pushl %esi;pushl %ebx;pushl %esi;je  <.text+>;pushl %edi": 1,
                "cmpl %esi, -(%ebp);je  <.text+>;cmpl $-, -(%ebp);je  <.text+>;pushl -(%ebp)": 2,
                "leal (%esi), %eax;movl %ebx, -(%ebp);movl %eax, -(%ebp);calll - <.text+>;movl %eax, -(%ebp)": 1,
                "pushl $;calll *;pushl %eax;calll *%esi;jmp  <.text+>": 1,
                "testl %eax, %eax;jle  <.text+>;movl (%ebp), %eax;cmpl %esi, %eax;jbe  <.text+>": 1,
                "calll *;cmpl $, %eax;je  <.text+>;movl $, %edi;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);calll *;jmp  <.text+>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll *%ebx;incl %eax;cmpl %edi, %eax;jle  <.text+>": 1,
                "movl $, -(%ebp);cmpl %esi, -(%ebp);popl %edi;popl %esi;popl %ebx": 1,
                "rep  cmpsl %es:(%edi), (%esi);jne  <.text+>;cmpl $, (%eax);jb  <.text+>;movl , %esi": 1,
                "cmpl %ebx, %esi;movl %ebx, -(%ebp);je  <.text+>;movl (%esi), %edi;cmpl %ecx, %edi": 1,
                "pushl %ebx;pushl %esi;calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "movl (%esi), %eax;cmpl (%ebx), %eax;jne  <.text+>;movl (%esi), %eax;cmpl (%ebx), %eax": 3,
                "jne  <.text+>;movl (%esi), %eax;cmpl (%ebx), %eax;jne  <.text+>;testl $, (%ebx)": 1,
                "andl $, %ecx;testl %edx, %edx;sete %al;cmpl %eax, %ecx;movl (%ebp), %eax": 1,
                "movl (%ecx), %esi;movl %esi, %edx;shrl $, %edx;xorl %eax, %edx;testb $, %dl": 1,
                "pushl %eax;leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax;movl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax;movl %ebx, -(%ebp);calll *": 1,
                "je  <.text+>;cmpl %ebx, %eax;jne  <.text+>;pushl %edi;leal -(%ebp), %eax": 1,
                "pushl (%esi);pushl (%esi);calll *;movl %eax, -(%ebp);jmp  <.text+>": 1,
                "pushl (%esi);calll *;movl %eax, -(%ebp);jmp  <.text+>;pushl (%esi)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;leal (%ebp), %eax": 1,
                "movl %edi, -(%ebp);movl %edi, (%esi);calll *;cmpl %edi, %eax;je  <.text+>": 1,
                "pushl ;calll *;cmpl %edi, -(%ebp);je  <.text+>;pushl %esi": 1,
                "cmpl %ebx, %esi;je  <.text+>;leal (%ebp), %eax;pushl %eax;pushl %esi": 1,
                "xorl %eax, %eax;movl $, %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %eax": 1,
                "calll *%edi;pushl (%ebp);leal (%esi), %eax;pushl %eax;calll *%edi": 1,
                "je  <.text+>;cmpl %ebx, %eax;jne  <.text+>;pushl %ebx;pushl %esi": 1,
                "calll - <.text+>;movl , %eax;cmpl , %eax;pushl %ebx;jae  <.text+>": 1,
                "cmpl , %eax;pushl %ebx;jae  <.text+>;movl , %edi;pushl %ebx": 1,
                "movl %eax, (%esi);je  <.text+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "jmp  <.text+>;movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl $;pushl ;calll *;pushl %esi": 1,
                "pushl %eax;pushl -(%ebp);pushl -(%ebp);calll *;movl %eax, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "calll *;movl %esi, -(%ebp);incl -(%ebp);movw %si, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movw %si, -(%ebp);movl %ebx, -(%ebp);movw %si, -(%ebp);movl %ebx, -(%ebp);jmp - <.text+>": 1,
                "je  <.text+>;pushl $;pushl ;calll *;jmp  <.text+>": 1,
                "calll - <.text+>;popl %esi;popl %ebp;retl $;int": 1,
                "cmpl %eax, (%ebp);pushl %edi;movl , %edi;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl $, ;movl $, ;movl $, ;movl %esi, ;movl %esi, ": 1,
                "movl %esi, ;movl %esi, ;movl %esi, ;movl $, ;calll *": 1,
                "pushl $;pushl %esi;pushl $;pushl ;calll *%ebx": 8,
                "pushl $;pushl ;movl $, ;movl %esi, ;calll *": 1,
                "pushl $;pushl ;movl $, ;calll *;jmp  <.text+>": 1,
                "movl %ecx, %ebx;shrl $, %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl %ebx, %ecx": 1,
                "movl %eax, (,%ebx,);incl %ebx;movl (%edx), %edx;cmpl %esi, %edx;jne - <.text+>": 1,
                "cmpl %esi, %edx;jne - <.text+>;calll - <.text+>;pushl $-;pushl %esi": 1,
                "calll *;movl %esi, ;popl %edi;popl %esi;popl %ebx": 1,
                "jle  <.text+>;movl (%ebp), %eax;movl (%eax), %eax;movb (%eax), %cl;cmpb $, %cl": 1,
                "calll *;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "xorl %eax, %eax;popl %esi;leave;retl $;int": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;leal -(%ebp), %eax": 1,
                "pushl (%esi);pushl %edi;pushl (%ebp);calll  <.text+>;movl %eax, (%ebp)": 1,
                "pushl (%ebp);calll  <.text+>;movl %eax, (%ebp);movl %eax, (%ebp);movl $, %ecx": 1,
                "andl %ecx, %edx;cmpl %ecx, %edx;je  <.text+>;cmpl $, %edx;movl (%ebp), %ebx": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %eax, %eax;testl %esi, %esi;pushl %edi": 1,
                "testl %esi, %esi;je  <.text+>;orl $-, (%esi);orl $-, (%esi);cmpl $, (%edi)": 1,
                "pushl %esi;addl $, %edi;pushl %edi;calll  <.text+>;jmp  <.text+>": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl (%ebp), %esi;xorl %eax, %eax": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %eax, %eax;incl %eax;xorl %ebx, %ebx": 1,
                "movl (%ebp), %esi;xorl %eax, %eax;incl %eax;xorl %ebx, %ebx;cmpl %ebx, %esi": 1,
                "je - <.text+>;pushl $;leal (%edi), %eax;pushl %eax;pushl $": 1,
                "pushl $;leal (%edi), %eax;pushl %eax;pushl $;pushl (%edi)": 1,
                "jne  <.text+>;movl (%ebp), %eax;movl $, (%eax);jmp  <.text+>;movl (%ebp), %eax": 1,
                "movl $, (%edx);cmpl $, (%ecx);jne  <.text+>;movl $, (%edx);cmpl $, (%eax)": 1,
                "pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl (%esi);movl %ebx, -(%ebp);pushl -(%ebp);calll - <.text+>;cmpl %ebx, -(%ebp)": 1,
                "pushl -(%ebp);calll - <.text+>;cmpl %ebx, -(%ebp);movl %eax, -(%ebp);jne  <.text+>": 1,
                "stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);calll - <.text+>;cmpl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl -(%ebp);movw $, -(%ebp)": 1,
                "jne  <.text+>;pushl $;pushl %ebx;pushl %ebx;calll *": 1,
                "pushl %ebx;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl %ebx": 1,
                "je  <.text+>;pushl (%ebp);calll *%edi;leal (%esi,%eax), %esi;cmpl $, (%ebp)": 2,
                "je  <.text+>;pushl (%ebp);calll *%edi;leal (%esi,%eax), %esi;movl (%ebx), %eax": 1,
                "leal (%esi,%eax), %esi;movl (%ebx), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 1,
                "calll *%esi;pushl -(%ebp);pushl %ebx;calll *%esi;movl (%ebp), %ecx": 5,
                "movl (%eax), %eax;pushl (%eax);pushl %ebx;calll *%esi;pushl -(%ebp)": 1,
                "je  <.text+>;cmpl %edx, (%ebp);je  <.text+>;cmpl %edx, (%ebp);je  <.text+>": 1,
                "xorl %edx, %edx;jmp  <.text+>;movl $, -(%ebp);cmpl %edx, -(%ebp);je  <.text+>": 1,
                "cmpl %edx, -(%ebp);je  <.text+>;cmpl %edx, -(%ebp);je  <.text+>;pushl %edi": 1,
                "addl $, %esi;testl %ebx, %ebx;je  <.text+>;pushl %ebx;calll *%edi": 1,
                "testl %ebx, %ebx;je  <.text+>;pushl %ebx;calll *%edi;leal (%esi,%eax), %esi": 1,
                "movl $, (%ebp);movl (%ebp), %eax;movw $, (%esi);pushl (%eax);leal (%esi), %eax": 1,
                "leal (%esi), %eax;pushl %eax;calll *%edi;pushl %esi;calll *": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;movl (%eax), %eax;xorl %esi, %esi;cmpl %esi, %eax": 1,
                "leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;pushl %esi": 1,
                "cmpl %esi, %ebx;movl , %edi;je  <.text+>;pushl %ebx;pushl %esi": 1,
                "pushl %esi;calll *;pushl %eax;calll *%edi;cmpl %esi, -(%ebp)": 1,
                "pushl %esi;calll *;pushl %eax;calll *%edi;movl -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%edi)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%edi);calll  <.text+>": 1,
                "testb $, (%esi);je  <.text+>;fldl -(%ebp);pushl %ecx;pushl %ecx": 1,
                "pushl ;calll *%ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl $;pushl ": 2,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %eax, %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "pushl %esi;calll - <.text+>;testb $, (%esi);je  <.text+>;pushl %esi": 1,
                "int;pushl $;pushl $;calll  <.text+>;xorl %esi, %esi": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %edi;pushl %edi;calll - <.text+>": 1,
                "pushl -(%ebp);movl -(%ebp), %eax;pushl (%eax);pushl -(%ebp);calll  <.text+>": 2,
                "cmpl %esi, %eax;je  <.text+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);leal (%edi), %ecx": 1,
                "jmp - <.text+>;movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);leal (%edi), %ecx": 1,
                "pushl %esi;pushl $;pushl %esi;pushl $;pushl %esi": 4,
                "cmpl %esi, -(%ebp);je  <.text+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "pushl $;pushl (%edi);calll - <.text+>;movl %eax, -(%ebp);leal (%edi), %eax": 1,
                "pushl %eax;pushl $;pushl %edi;calll - <.text+>;cmpl $-, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;cmpl %esi, (%edi);jne  <.text+>": 1,
                "movl %eax, -(%ebp);pushl %eax;calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "testl %eax, %eax;jne  <.text+>;movl -(%ebp), %eax;andl $, %eax;cmpl $, %eax": 1,
                "movl %esi, -(%ebp);cmpl %esi, -(%ebp);je - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "je - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;calll - <.text+>": 1,
                "pushl %eax;pushl %edi;calll - <.text+>;movl %eax, -(%ebp);jmp - <.text+>": 1,
                "pushl %edi;calll - <.text+>;movl %eax, -(%ebp);jmp - <.text+>;cmpl %esi, -(%ebp)": 1,
                "movl -(%ebp), %esp;xorl %esi, %esi;movl %esi, -(%ebp);cmpl %esi, -(%ebp);je  <.text+>": 1,
                "cmpl %edi, %eax;jne  <.text+>;cmpl %edi, %edx;jne  <.text+>;movl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;cmpl $, (%esi);jne  <.text+>": 1,
                "calll  <.text+>;movl %eax, -(%ebp);cmpl %ebx, %eax;je  <.text+>;leal (%esi), %ecx": 1,
                "pushl $;pushl %edi;calll  <.text+>;popl %ecx;popl %ecx": 1,
                "pushl %edi;calll  <.text+>;popl %ecx;popl %ecx;testl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp);pushl %edi": 2,
                "jmp  <.text+>;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl (%esi), %eax;cmpl $, %eax": 1,
                "pushl %edi;pushl -(%ebp);calll  <.text+>;movl %eax, -(%ebp);jmp  <.text+>": 1,
                "pushl %eax;pushl -(%ebp);calll  <.text+>;movl %eax, -(%ebp);cmpl %ebx, %eax": 2,
                "testl %eax, %eax;jne - <.text+>;movl (%edi), %edi;cmpl %ebx, %edi;je  <.text+>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;je  <.text+>;movl %ebx, -(%ebp);jmp - <.text+>": 1,
                "cmpl $, %eax;jne  <.text+>;cmpl %ebx, -(%ebp);jne - <.text+>;cmpl %ebx, -(%ebp)": 1,
                "jne - <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>": 1,
                "calll *;cmpl %ebx, -(%ebp);je  <.text+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "cmpl $-, -(%ebp);jne  <.text+>;movl %ebx, -(%ebp);pushl -(%ebp);calll  <.text+>": 1,
                "pushl (%esi);pushl (%esi);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "pushl %eax;pushl (%esi);pushl (%esi);pushl (%esi);leal (%esi), %eax": 2,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <.text+>": 1,
                "je  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "cmpl %ebx, -(%ebp);jne  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;cmpl %ebx, %edi": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);cmpl $, -(%ebp);je  <.text+>;movl (%esi), %ecx": 1,
                "je - <.text+>;subl %ecx, %edi;movl %edi, -(%ebp);movl -(%ebp), %ecx;sbbl -(%ebp), %ecx": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;leal -(%ebp), %edx;pushl %edx;pushl %ecx": 1,
                "cmpl %ebx, -(%ebp);je - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "leal (%esi), %eax;movl $, (%eax);pushl $;pushl %eax;pushl $": 2,
                "movl $, (%eax);pushl $;pushl %eax;pushl $;pushl (%esi)": 2,
                "pushl (%esi);pushl -(%ebp);calll  <.text+>;movl %eax, %edi;movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);pushl %edi;calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %ebx;pushl -(%ebp);calll  <.text+>;movl %ebx, -(%ebp);cmpl %ebx, (%esi)": 1,
                "calll - <.text+>;movl -(%ebp), %edi;cmpl $-, %edi;jne  <.text+>;cmpl %edi, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);jne  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;cmpl $, (%esi)": 1,
                "pushl %eax;calll *;cmpl %ebx, -(%ebp);je  <.text+>;pushl %ebx": 1,
                "movl (%esi), %eax;movl (%eax), %ecx;movl %ecx, (%esi);pushl %eax;pushl %ebx": 1,
                "cmpl %edi, -(%ebp);je  <.text+>;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "pushl %edi;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "leal (%esi), %eax;pushl %eax;leal (%esi), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %ebx;calll *;movl %eax, -(%ebp);cmpl %edi, %eax;jne  <.text+>": 1,
                "pushl %edi;pushl %edi;pushl $;calll *;movl %eax, -(%ebp)": 1,
                "calll *;movl %eax, -(%ebp);cmpl %edi, %eax;jne  <.text+>;incl -(%ebp)": 1,
                "pushl %edi;pushl $;pushl ;calll *;incl -(%ebp)": 1,
                "jne  <.text+>;cmpl %edi, %ecx;je  <.text+>;movl -(%ebp), %edx;cmpl %ebx, %edx": 1,
                "cmpl %ebx, %ecx;je  <.text+>;cmpl %ecx, -(%ebp);jg  <.text+>;jl  <.text+>": 1,
                "jl  <.text+>;cmpl %edi, %eax;jae  <.text+>;jmp  <.text+>;cmpl %ebx, %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);jmp  <.text+>;movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "je  <.text+>;movl %edi, -(%ebp);cmpl $, -(%ebp);jne  <.text+>;movl (%esi), %eax": 1,
                "pushl (%esi);pushl (%esi);calll *;movl %eax, -(%ebp);jmp - <.text+>": 1,
                "calll - <.text+>;movl %eax, -(%ebp);jmp - <.text+>;xorl %eax, %eax;incl %eax": 1,
                "movl (%esi), %eax;cmpl $, %eax;jne  <.text+>;pushl %esi;calll - <.text+>": 1,
                "cmpl $, %eax;jne  <.text+>;pushl %esi;calll - <.text+>;jmp  <.text+>": 1,
                "pushl %ebx;pushl %edi;pushl $;pushl ;calll *": 1,
                "incl %edi;cmpl %eax, %edi;jb - <.text+>;cmpl %eax, %edi;popl %ebx": 1,
                "incl %edi;xorl %eax, %eax;cmpw $, (%edx);pushl $;sete %al": 1,
                "movl (%ebp), %eax;movl -(%ebp), %ecx;addl $, %esp;movl %edi, (%esi);cmpl %edi, (%eax)": 1,
                "cmpl %edi, (%eax);popl %edi;sbbl %eax, %eax;incl %eax;popl %esi": 1,
                "movl (%eax), %eax;movl %eax, (%esi);andl $, (%esi);pushl $;pushl $": 1,
                "leal (%esi,%esi), %eax;pushl %eax;pushl $;calll *%ebx;pushl %eax": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);pushl (%ebp);calll *": 1,
                "testl %edi, %edi;je  <.text+>;pushl %edi;calll *;testl %eax, %eax": 1,
                "jne  <.text+>;movl $, -(%ebp);jmp  <.text+>;cmpl $, -(%ebp);jge  <.text+>": 1,
                "movl $, -(%ebp);jmp  <.text+>;pushl %ebx;movl , %ebx;pushl %esi": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);calll *%edi;testl %eax, %eax": 1,
                "pushl (%ebp);calll *%edi;testl %eax, %eax;movl %eax, -(%ebp);jne  <.text+>": 1,
                "cmpl $, -(%ebp);je  <.text+>;pushl -(%ebp);pushl $;calll *%esi": 1,
                "andl $, -(%ebp);andl $, -(%ebp);cmpl $, (%ebp);je  <.text+>;pushl (%ebp)": 1,
                "movl %eax, -(%ebp);pushl %eax;pushl %edi;pushl %esi;calll  <.text+>": 1,
                "calll - <.text+>;pushl $;pushl $;pushl (%esi);pushl (%esi)": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;testl %eax, %eax;je  <.text+>": 1,
                "calll *;movl -(%ebp), %esi;xorl -(%ebp), %esi;calll *;xorl %eax, %esi": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movw %ss, -(%ebp);movw %cs, -(%ebp)": 1,
                "leal (%ebp), %eax;movl %eax, -(%ebp);leal (%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl $": 1,
                "movl %esp, %ebp;cmpl $, ;je  <.text+>;calll  <.text+>;pushl (%ebp)": 1,
                "pushl $;calll  <.text+>;movl $, %edi;movl %edi, %eax;calll  <.text+>": 1,
                "andl $, %esi;movl %esi, ;cmpl $, %eax;je  <.text+>;orl $, %esi": 1,
                "calll - <.text+>;popl %ecx;calll *;movl %eax, ;calll  <.text+>": 1,
                "calll - <.text+>;popl %ecx;calll  <.text+>;testl %eax, %eax;jge  <.text+>": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;popl %ecx;popl %ecx": 2,
                "movzwl (%esi), %eax;incl %esi;incl %esi;pushl %eax;calll  <.text+>": 1,
                "popl %edi;popl %esi;popl %ebp;retl;int": 6,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;popl %ebp;jmp - <.text+>": 1,
                "popl %ebp;jmp - <.text+>;int;int;int": 1,
                "movl %eax, %ebx;movl (%esp), %ecx;movl (%esp), %edx;movl (%esp), %eax;shrl %ebx": 1,
                "rcrl %ecx;shrl %edx;rcrl %eax;orl %ebx, %ebx;jne - <.text+>": 1,
                "mull (%esp);movl %eax, %ecx;movl (%esp), %eax;mull %esi;addl %ecx, %edx": 2,
                "decl %esi;xorl %edx, %edx;movl %esi, %eax;decl %edi;jne  <.text+>": 1,
                "decl %edi;jne  <.text+>;negl %edx;negl %eax;sbbl $, %edx": 1,
                "popl %edi;retl $;int;int;int": 1,
                "incl %ecx;incl %ecx;cmpw %bx, (%ecx);jne - <.text+>;jmp  <.text+>": 1,
                "cmpw %bx, (%ecx);jne - <.text+>;jmp  <.text+>;pushl ;pushl %ebx": 1,
                "movl %ebx, -(%ebp);leal (%esi,%esi), %eax;addl $, %eax;andl $-, %eax;calll  <.text+>": 1,
                "calll  <.text+>;movl %esp, -(%ebp);movl %esp, %edi;movl %edi, -(%ebp);orl $-, -(%ebp)": 1,
                "movl -(%ebp), %esi;cmpl %ebx, %edi;jne  <.text+>;leal (%esi,%esi), %eax;pushl %eax": 1,
                "movl $, -(%ebp);cmpl %ebx, %edi;je  <.text+>;pushl ;pushl %esi": 1,
                "pushl %edi;pushl $-;pushl (%ebp);pushl $;pushl ": 1,
                "je  <.text+>;pushl %edi;pushl (%ebp);calll  <.text+>;popl %ecx": 1,
                "movl (%ebp), %eax;leal -(%ebp), %esp;calll  <.text+>;retl;int": 1,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "pushl %esi;incl %ebx;xorb (%eax), %dh;popl %eax;incl %ebx": 1,
                "incl %ebx;xorb %dh, (%eax);pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "jne  <.text+>;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "cmpl $-, %esi;je  <.text+>;leal (%esi,%esi,), %ecx;movl (%edi,%ecx,), %eax;orl %eax, %eax": 1,
                "je  <.text+>;pushl %esi;pushl %ebp;leal (%ebx), %ebp;xorl %ebx, %ebx": 1,
                "movl (%ebx), %edi;pushl %ebx;calll  <.text+>;addl $, %esp;leal (%ebx), %ebp": 1,
                "pushl $-;pushl %ebx;calll  <.text+>;addl $, %esp;popl %ebp": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movw (%eax), %cx;testw %cx, %cx;jne - <.text+>;cmpw %dx, %cx;je  <.text+>": 1,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <.text+>": 8,
                "addl $, %esp;popl %esi;popl %ebp;retl;int": 1,
                "cmpl %ebx, %ecx;jbe  <.text+>;movl %edi, %eax;movl %ecx, %edx;cmpw %bx, (%eax)": 1,
                "cmpw %bx, (%eax);jne  <.text+>;subl %edi, %eax;sarl %eax;incl %eax": 1,
                "jne  <.text+>;subl %edi, %eax;sarl %eax;incl %eax;movl %eax, (%ebp)": 1,
                "incl %eax;movl %eax, (%ebp);movl %eax, %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;pushl %ebx;pushl ;calll *;movl %eax, %esi": 1,
                "cmpl %ebx, -(%ebp);jne  <.text+>;leal -(%esi), %eax;jmp  <.text+>;cmpl %ebx, -(%ebp)": 1,
                "calll *;cmpl $, %eax;je  <.text+>;movl $, ;orl $-, %eax": 1,
                "leave;retl;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl $;calll *": 1,
                "testl %eax, %eax;jne  <.text+>;movl (%edi), %ecx;testl %ecx, %ecx;je  <.text+>": 1,
                "pushl $;movl $, %eax;calll - <.text+>;popl %ecx;testl %ebx, %ebx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx;pushl $": 2,
                "popl %ecx;popl %ecx;popl %ebx;popl %ebp;retl": 2,
                "pushl %ebx;pushl $;xorl %ebx, %ebx;pushl $;incl %ebx": 1,
                "cmpl (%esi), %ecx;movl %esi, -(%ebp);jne  <.text+>;movl , %eax;cmpl $, %eax": 1,
                "jne  <.text+>;pushl $;popl %ecx;movl $, %esi;leal -(%ebp), %edi": 1,
                "jbe  <.text+>;leal -(%ebp), %eax;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 1,
                "subl %edx, %eax;movl %eax, %ecx;movl -(%ebp), %eax;movl (%eax), %eax;leal (%eax), %esi": 1,
                "leal (%eax,%ecx), %eax;addl $, %eax;andl $-, %eax;calll  <.text+>;movl %esp, %edx": 1,
                "movl $, %esi;movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl (%eax), %eax;movl %eax, %esi": 1,
                "incl %ecx;testb %bl, %bl;jne - <.text+>;pushl $;subl %edx, %ecx": 1,
                "popl %ecx;je  <.text+>;calll *%eax;pushl $;calll - <.text+>": 1,
                "je  <.text+>;cmpl $, %ebx;jne  <.text+>;andl $, (%ecx);xorl %eax, %eax": 1,
                "andl $, (%ecx);xorl %eax, %eax;incl %eax;jmp  <.text+>;cmpl $, %ebx": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;movl %eax, ;movl (%ecx), %eax;cmpl $, %eax": 1,
                "movl , %edx;addl %eax, %edx;cmpl %edx, %eax;jge  <.text+>;leal (%eax,%eax,), %esi": 1,
                "jne - <.text+>;movl (%ecx), %ecx;cmpl $, %ecx;movl , %esi;jne  <.text+>": 1,
                "cmpb $, %cl;je  <.text+>;incl %edi;movl %eax, %ecx;leal (%ecx), %esi": 1,
                "movb (%ecx), %al;incl %ecx;movb %al, (%edx);incl %edx;testb %al, %al": 1,
                "incl %edx;testb %al, %al;jne - <.text+>;addl $, %ebx;addl %edi, %esi": 1,
                "jne - <.text+>;addl $, %ebx;addl %edi, %esi;movb (%esi), %cl;testb %cl, %cl": 1,
                "incl %eax;jmp - <.text+>;decl %eax;jmp - <.text+>;cmpb $, (%eax)": 1,
                "cmpl $, (%ebp);je  <.text+>;movl (%ebp), %ecx;addl $, (%ebp);movl %edi, (%ecx)": 1,
                "cmpb $, (%ecx);jne  <.text+>;movl %ecx, %eax;jmp  <.text+>;xorl %ebx, %ebx": 1,
                "testl %edx, %edx;je  <.text+>;testl %edi, %edi;je  <.text+>;movb $, (%edi)": 1,
                "testl %edi, %edi;je  <.text+>;movzbl %cl, %edx;testb $, (%edx);je  <.text+>": 1,
                "testb $, (%edx);je  <.text+>;movb %cl, (%edi);incl %edi;incl %eax": 1,
                "movl (%ebp), %ebx;jmp - <.text+>;movl (%ebp), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl -(%ebp), %eax;shll $, %esi;addl %esi, %eax;pushl %eax;calll  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%esi,%edi), %ecx;pushl %edi;leal -(%ebp), %esi": 1,
                "subl %edi, %eax;pushl %ebx;sarl %eax;incl %eax;pushl %eax": 1,
                "incl %eax;pushl %eax;pushl %edi;pushl %ebx;pushl %ebx": 1,
                "pushl -(%ebp);pushl %eax;pushl -(%ebp);pushl %edi;pushl %ebx": 1,
                "calll  <.text+>;cmpl %ebx, %eax;popl %ecx;je  <.text+>;movl %edi, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;pushl $;calll  <.text+>": 1,
                "leal (%ebx,%edi), %eax;movl %eax, -(%ebp);movl $, %eax;cmpl %eax, %edi;jl  <.text+>": 1,
                "movl %eax, (%esi);leal (%eax), %ecx;jmp  <.text+>;orl $-, (%eax);movb $, (%eax)": 1,
                "cmpl $-, %ecx;je  <.text+>;movb (%ebx), %al;testb $, %al;je  <.text+>": 1,
                "movl (,%eax,), %eax;movl %esi, %ecx;andl $, %ecx;leal (%eax,%ecx,), %eax;movl -(%ebp), %ecx": 1,
                "addl $, -(%ebp);incl %esi;incl %ebx;cmpl %edi, %esi;jl - <.text+>": 1,
                "xorl %ebx, %ebx;movl , %eax;leal (%eax,%ebx,), %esi;cmpl $-, (%esi);jne  <.text+>": 1,
                "je  <.text+>;pushl %edi;calll *;testl %eax, %eax;je  <.text+>": 1,
                "orb $, (%esi);jmp  <.text+>;orb $-, (%esi);incl %ebx;cmpl $, %ebx": 1,
                "popl %esi;xorl %eax, %eax;popl %ebx;leave;retl": 1,
                "je  <.text+>;calll - <.text+>;cmpl $, %eax;movl %eax, ;jne  <.text+>": 1,
                "int;int;cmpl $, %eax;jae  <.text+>;negl %eax": 1,
                "testl %eax, (%eax);xchgl %esp, %eax;movl (%eax), %eax;pushl %eax;retl": 1,
                "pushl %ecx;leal (%esp), %ecx;subl $, %ecx;subl $, %eax;testl %eax, (%ecx)": 1,
                "retl;orl $-, %eax;popl %ebp;retl;int": 1,
                "pushl %ecx;cmpw $, (%ebp);je  <.text+>;cmpw $, (%ebp);jae  <.text+>": 1,
                "jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl -(%ebp), %eax;movzwl (%ebp), %ecx": 1,
                "pushl %esi;jne  <.text+>;calll  <.text+>;testl %eax, %eax;popl %ecx": 1,
                "calll *;popl %esi;popl %ebp;retl;int": 2,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movw (%edx), %ax;movw %ax, (%ecx);incl %ecx": 1,
                "testw %ax, %ax;jne - <.text+>;movl (%ebp), %eax;popl %ebp;retl": 1,
                "jne  <.text+>;testl %esi, %esi;jne  <.text+>;incl %esi;cmpl $, ": 1,
                "pushl %esi;pushl $;pushl ;calll *;popl %esi": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $-, (%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;popl %ecx;jne  <.text+>;cmpl %eax, (%ebp)": 1,
                "pushl %esi;pushl %edi;pushl $;popl %eax;calll - <.text+>": 1,
                "sbbl %ecx, %ecx;leal -(%esi), %edx;andl $, %ecx;notl %edx;andl %ebx, %edx": 1,
                "andl %ebx, %edx;incl %ecx;subl %esi, %edx;decl %eax;negl %eax": 1,
                "pushl $;pushl $;calll - <.text+>;xorl %ebx, %ebx;xorl %edi, %edi": 1,
                "movl , %eax;cmpl %edi, %eax;jne  <.text+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *": 3,
                "cmpl %eax, (%ebp);je  <.text+>;cmpl $-, %eax;je  <.text+>;movl %eax, (%ebp)": 2,
                "jne  <.text+>;pushl -(%ebp);calll - <.text+>;popl %ecx;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, %eax;je - <.text+>;movl %edi, -(%ebp);pushl %ebx;pushl %ebx": 1,
                "pushl %esi;calll - <.text+>;popl %ecx;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "pushl -(%ebp);pushl (%ebp);pushl (%ebp);calll *;testl %eax, %eax": 2,
                "pushl (%ebp);pushl %esi;pushl %edi;pushl $;pushl (%ebp)": 1,
                "calll - <.text+>;popl %ecx;movl -(%ebp), %eax;leal -(%ebp), %esp;calll - <.text+>": 2,
                "movl $, %eax;retl;pushl %ebx;pushl %esi;pushl %edi": 1,
                "pushl %edi;movl (%esp), %eax;pushl %ebp;pushl %eax;pushl $-": 1,
                "movl %ecx, (%esp);movl %ecx, (%eax);cmpl $, (%ebx,%esi,);jne  <.text+>;pushl $": 1,
                "jne  <.text+>;movl (%ecx), %edx;movl (%edx), %edx;cmpl %edx, (%ecx);jne  <.text+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%ebx);movl %eax, (%ebx);movl %ebp, (%ebx);pushl %ebp": 1,
                "pushl %ebp;pushl %ecx;pushl %eax;popl %eax;popl %ecx": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx": 1,
                "je  <.text+>;incl %esi;cmpl %eax, %esi;jl - <.text+>;pushl $": 1,
                "jne  <.text+>;cmpw $, (%eax);jne  <.text+>;subl %ecx, %ebx;cmpw $, (%eax)": 1,
                "jge  <.text+>;incl %ecx;movl %ecx, ;pushl $;pushl $": 1,
                "movl %ecx, ;pushl $;pushl $;calll *;jmp - <.text+>": 1,
                "jle - <.text+>;movl , %ebx;pushl $;pushl $;calll *%ebx": 1,
                "je  <.text+>;movl , %eax;leal -(%eax), %esi;testl %esi, %esi;jl  <.text+>": 1,
                "je  <.text+>;xorl %ecx, %ecx;testl %esi, %esi;jl  <.text+>;leal (,%ecx,), %eax": 1,
                "movl %ecx, (%esi);movl (%esi), %ecx;subl %eax, %edi;decl %ecx;testl %edi, %edi": 1,
                "decl %ecx;testl %edi, %edi;movl %ecx, (%esi);jle  <.text+>;pushl %edi": 1,
                "movl (%esi), %eax;movb (%ebp), %cl;movb %cl, (%eax);jmp  <.text+>;xorl %edi, %edi": 1,
                "pushl %eax;pushl %ebx;calll  <.text+>;addl $, %esp;movl %eax, (%ebp)": 1,
                "testb $, (%eax);je  <.text+>;cmpl $, (%eax);je  <.text+>;pushl %eax": 1,
                "movl (%ebp), %eax;addl %eax, (%esi);jmp  <.text+>;decl (%ebp);xorl %eax, %eax": 1,
                "addl %eax, (%esi);jmp  <.text+>;decl (%ebp);xorl %eax, %eax;movw (%ebx), %ax": 1,
                "movl %ecx, -(%ebp);xorl %ecx, %ecx;cmpw %cx, %bx;movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "jmp  <.text+>;orl $, -(%ebp);jmp  <.text+>;orb $-, -(%ebp);jmp  <.text+>": 1,
                "jg  <.text+>;cmpl $, %eax;jge  <.text+>;cmpl $, %eax;jg  <.text+>": 1,
                "cmpl $, %eax;jge  <.text+>;cmpl $, %eax;jg  <.text+>;je  <.text+>": 1,
                "cmpl $, %eax;jg  <.text+>;je  <.text+>;subl $, %eax;je  <.text+>": 1,
                "movl -(%ebp), %edx;cmpl $-, %edx;jne  <.text+>;movl $, %edx;addl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl": 1,
                "je  <.text+>;movl %eax, -(%ebp);movl %eax, %edi;jmp  <.text+>;movl %esi, -(%ebp)": 1,
                "je  <.text+>;subl $, %eax;je - <.text+>;subl %edi, %eax;je - <.text+>": 1,
                "jne - <.text+>;subl -(%ebp), %eax;sarl %eax;jmp  <.text+>;movl $, -(%ebp)": 1,
                "jmp - <.text+>;addl $, -(%ebp);testb $, -(%ebp);movl -(%ebp), %eax;movl -(%eax), %eax": 1,
                "je  <.text+>;movw -(%ebp), %cx;movw %cx, (%eax);jmp  <.text+>;movl -(%ebp), %ecx": 1,
                "jae  <.text+>;negl %eax;adcl $, %edx;negl %edx;orb $, -(%ebp)": 1,
                "jmp  <.text+>;andl $-, -(%ebp);movl $, %eax;cmpl %eax, -(%ebp);jle  <.text+>": 1,
                "addl -(%ebp), %ecx;movb %cl, (%esi);decl %esi;jmp - <.text+>;leal -(%ebp), %eax": 1,
                "movb %cl, (%esi);decl %esi;jmp - <.text+>;leal -(%ebp), %eax;subl %esi, %eax": 1,
                "cmpb $, (%ecx);jne  <.text+>;testl %eax, %eax;jne  <.text+>;decl -(%ebp)": 1,
                "testb $, %al;je  <.text+>;movw $, -(%ebp);jmp  <.text+>;testb $, %al": 1,
                "testb $, -(%ebp);jne  <.text+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %ebx": 1,
                "calll - <.text+>;addl $, %esp;cmpl $, -(%ebp);jne  <.text+>;movl -(%ebp), %eax": 1,
                "calll - <.text+>;andl $, -(%ebp);popl %ecx;movl -(%ebp), %eax;movw (%eax), %bx": 1,
                "popl %ecx;movl -(%ebp), %eax;movw (%eax), %bx;testw %bx, %bx;jne - <.text+>": 1,
                "movb %bh, -(%ebx);addb %al, (%ecx);xorb (%eax,%eax), %bh;addl %ecx, -(%ecx);movl $, %ebp": 1,
                "cmpl $, %eax;popl %ecx;je  <.text+>;incl %esi;cmpl $, ": 1,
                "fldl (%eax);fcompl ;fnstsw %ax;testb $, %ah;jne  <.text+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);leave": 1,
                "calll  <.text+>;addl $, %esp;popl %esi;retl;int": 1,
                "movl (%ebp), %ebx;movl %eax, %esi;pushl %esi;leal (%ebx), %eax;pushl %eax": 1,
                "addl %ebx, %ecx;pushl %ecx;calll  <.text+>;cmpl $, (%ebp);popl %ecx": 1,
                "jl  <.text+>;cltd;pushl $;popl %esi;idivl %esi": 2,
                "popl %esi;idivl %esi;addb %al, (%ecx);movl %edx, %eax;addb %al, (%ecx)": 1,
                "movl %eax, %esi;movl (%esi), %eax;addl (%ebp), %eax;pushl %esi;pushl %eax": 1,
                "calll  <.text+>;addl $, %esp;cmpl $, (%esi);movl (%ebp), %ebx;jne  <.text+>": 1,
                "cmpl $, (%eax);pushl %eax;sete %cl;pushl %ebx;movl %eax, ": 1,
                "cmpl %eax, ;movl %eax, ;setl %cl;cmpl $-, %eax;movb %cl, ": 1,
                "movl %eax, ;setl %cl;cmpl $-, %eax;movb %cl, ;jl  <.text+>": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp)": 1,
                "jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <.text+>": 1,
                "addl $, %esp;testb $, %bl;je  <.text+>;movl $, %edi;movl %esi, -(%ebp)": 1,
                "cmpl $, %eax;jne  <.text+>;movl $, %edi;testb $, %bl;jne  <.text+>": 1,
                "testb $, %bl;jne  <.text+>;cmpl $, %eax;jne  <.text+>;orl $, %edi": 1,
                "popl %ebx;calll - <.text+>;leave;retl;int": 7,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ": 1,
                "calll *%esi;cmpl $, ;movl %eax, ;jne  <.text+>;pushl $": 1,
                "pushl %edi;calll *%esi;movl %eax, ;movl , %eax;testl %eax, %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl %ebx;calll *;popl %edi": 1,
                "testl %ecx, %ecx;je  <.text+>;pushl %esi;pushl %ebx;movl %ecx, %ebx": 1,
                "jne - <.text+>;movl %ecx, %ebx;shrl $, %ecx;jne  <.text+>;movb %al, (%edi)": 1,
                "movl $, %edx;movl (%esi), %eax;addl %eax, %edx;xorl $-, %eax;xorl %edx, %eax": 1,
                "testl $, %edx;jne - <.text+>;movl %edx, (%edi);jmp  <.text+>;andl $, %edx": 1,
                "andl $, %edx;movl %edx, (%edi);jmp  <.text+>;xorl %edx, %edx;movl %edx, (%edi)": 1,
                "movl %eax, -(%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl ": 1,
                "movb $, -(%ebp);je  <.text+>;pushl %ebx;leal -(%ebp), %edx;pushl %edi": 1,
                "subl %eax, %ecx;incl %ecx;movl %ecx, %ebx;shrl $, %ecx;leal -(%ebp,%eax), %edi": 1,
                "testb %al, %al;jne - <.text+>;popl %edi;popl %ebx;pushl $": 1,
                "addl $, %esp;xorl %eax, %eax;movw -(%ebp,%eax,), %cx;testb $, %cl;je  <.text+>": 1,
                "jb - <.text+>;jmp  <.text+>;xorl %eax, %eax;cmpl $, %eax;jb  <.text+>": 1,
                "movb %cl, (%eax);jmp  <.text+>;cmpl $, %eax;jb  <.text+>;cmpl $, %eax": 1,
                "pushl %edi;movl %ebx, ;jne  <.text+>;movl $, ;calll *": 1,
                "cmpl $, %eax;jb - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "movzbl %dl, %edi;cmpl %edi, %eax;ja  <.text+>;movl -(%ebp), %edx;movb (%edx), %dl": 1,
                "cmpb $, -(%ecx);jne - <.text+>;movl %edi, %eax;orb $, (%eax);incl %eax": 1,
                "jb - <.text+>;movl %esi, %eax;calll - <.text+>;movl %eax, ;movl %edi, ": 1,
                "je  <.text+>;calll - <.text+>;calll - <.text+>;xorl %eax, %eax;jmp  <.text+>": 1,
                "int;cmpl $, ;jne  <.text+>;pushl $-;calll - <.text+>": 1,
                "andl $, ;movl %eax, ;xorl %eax, %eax;movl %ecx, ;movl $, ": 1,
                "movl , %eax;leal (%eax,%eax,), %ecx;movl , %eax;leal (%eax,%ecx,), %ecx;jmp  <.text+>": 1,
                "decb (%ecx);jne  <.text+>;movl (%ebp), %ecx;andl %ebx, (%ecx);jmp  <.text+>": 1,
                "movl %ecx, %edx;sarl $, %edx;decl %edx;cmpl %esi, %edx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);jbe  <.text+>;movl %esi, %edx;cmpl %edx, %ebx;je  <.text+>": 1,
                "andl %esi, (%eax,%edi,);decb (%ebx,%eax);jne  <.text+>;movl (%ebp), %ecx;andl %esi, (%ecx)": 2,
                "orl %edx, (%eax);movl -(%ebp), %eax;movl %eax, (%esi);movl %eax, -(%eax,%esi);movl -(%ebp), %eax": 1,
                "movl , %ecx;movl , %esi;pushl $;shll $, %ecx;addl (%eax), %ecx": 1,
                "pushl $;shll $, %ecx;addl (%eax), %ecx;movl $, %ebx;pushl %ebx": 1,
                "movl , %eax;pushl (%eax);pushl $;pushl ;calll *": 1,
                "movl %eax, %ecx;movl , %eax;subl %eax, %ecx;leal -(%ecx,%edx), %ecx;pushl %ecx": 1,
                "movl (%ebp), %eax;addl $, %esp;decl ;cmpl , %eax;jbe  <.text+>": 1,
                "decl ;cmpl , %eax;jbe  <.text+>;subl $, (%ebp);movl , %eax": 1,
                "popl %edi;popl %esi;leave;retl;int": 3,
                "cmpl %ecx, %eax;jne  <.text+>;leal (%ecx,%ecx,), %eax;shll $, %eax;pushl %eax": 1,
                "jne  <.text+>;xorl %eax, %eax;popl %edi;retl;addl $, ": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;pushl %ebx;pushl %esi;movl (%ecx), %esi": 1,
                "popl %edx;movl %eax, (%eax);movl %eax, (%eax);addl $, %eax;decl %edx": 1,
                "movl -(%ebp), %eax;addl $, %eax;leal (%edi), %ecx;movl %ecx, (%eax);movl %eax, (%ecx)": 1,
                "incl %edi;movl %edi, (%esi,%ebx,);movb (%esi), %al;movb %al, %cl;incb %cl": 1,
                "movb %cl, (%esi);jne  <.text+>;orl %edi, (%eax);movl $, %edx;movl %ebx, %ecx": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %ecx;movl , %eax;movl , %edx": 1,
                "decl %ecx;cmpl $, %ecx;leal (%edx,%eax,), %edi;movl %edi, -(%ebp);jge  <.text+>": 1,
                "orl $-, -(%ebp);jmp  <.text+>;addl $-, %ecx;orl $-, %eax;xorl %esi, %esi": 1,
                "addl $-, %ecx;orl $-, %eax;xorl %esi, %esi;shrl %cl, %eax;movl %eax, -(%ebp)": 1,
                "jne  <.text+>;addl $, %ebx;cmpl %eax, %ebx;movl %ebx, (%ebp);jb - <.text+>": 2,
                "movl %ebx, ;movl (%ebx), %eax;movl (%eax), %edx;cmpl $-, %edx;movl %edx, -(%ebp)": 1,
                "andl -(%ebp), %esi;orl %esi, %edx;movl -(%ebp), %esi;jne  <.text+>;movl (%ecx), %edx": 1,
                "movl %edx, %ebx;jmp  <.text+>;cmpl $, (%ebx);jne  <.text+>;addl $, %ebx": 1,
                "jmp  <.text+>;cmpl $, (%ebx);jne  <.text+>;addl $, %ebx;cmpl %eax, %ebx": 1,
                "jb - <.text+>;cmpl %eax, %ebx;jne  <.text+>;calll - <.text+>;movl %eax, %ebx": 1,
                "movl (%ebx), %eax;cmpl $-, (%eax);jne - <.text+>;xorl %eax, %eax;jmp  <.text+>": 1,
                "xorl %eax, %eax;jmp  <.text+>;shll %ecx;incl %edi;testl %ecx, %ecx": 1,
                "andl %ecx, (%ebx);jmp  <.text+>;leal -(%edi), %ecx;shrl %cl, %ebx;movl -(%ebp), %ecx": 1,
                "jmp  <.text+>;cmpb $, (%ebp);jne  <.text+>;leal -(%esi), %ecx;movl $, %edi": 1,
                "leal -(%esi), %ecx;movl $, %esi;shrl %cl, %esi;orl %esi, (%edi);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %esi;addl %ecx, %edx;leal (%esi), %ecx;movl %ecx, (%edx)": 1,
                "leal (%esi), %ecx;movl %ecx, (%edx);movl %ecx, -(%edx,%esi);movl -(%ebp), %esi;movl (%esi), %ecx": 1,
                "jne  <.text+>;andl $, ;movl -(%ebp), %ecx;movl %ecx, (%eax);leal (%edx), %eax": 1,
                "cmpl %edi, %eax;jne  <.text+>;movl %edi, -(%ebp);movl %edi, -(%ebp);cmpl %edi, (%ebp)": 1,
                "movl %eax, %ebx;movl %ebx, -(%ebp);cmpl %edi, %ebx;jne  <.text+>;xorl %eax, %eax": 1,
                "cmpl %edi, %ebx;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl %edi, -(%ebp)": 1,
                "popl %ecx;je  <.text+>;xorl %eax, %eax;incl %eax;popl %ebp": 1,
                "calll  <.text+>;popl %ecx;movl -(%ebp), %ecx;calll - <.text+>;leave": 1,
                "popl %ecx;movl -(%ebp), %ecx;calll - <.text+>;leave;retl": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %ecx;pushl %eax;movl , %esi;calll *%esi;testl %eax, %eax": 1,
                "je  <.text+>;xorl %eax, %eax;incl %eax;cmpl %eax, -(%ebp);jne  <.text+>": 1,
                "testb %cl, %cl;jne - <.text+>;subl %edx, %eax;leal (%eax), %esi;movl %esi, -(%ebp)": 1,
                "pushl %eax;pushl %edi;pushl %ebx;pushl $;pushl (%ebp)": 1,
                "movl %esp, %ebx;movl %ebx, -(%ebp);movl %edi, %ecx;xorl %eax, %eax;movl %ebx, %edi": 1,
                "movl %ebx, %edi;movl %ecx, %edx;shrl $, %ecx;rep  stosl %eax, %es:(%edi);movl %edx, %ecx": 3,
                "testl %eax, %eax;je  <.text+>;xorl %edi, %edi;cmpl %edi, -(%ebp);je  <.text+>": 1,
                "pushl %edi;pushl %edi;pushl (%ebp);pushl -(%ebp);pushl %esi": 1,
                "calll *;movl %eax, %esi;cmpl %edi, %esi;je  <.text+>;xorl %edi, %edi": 1,
                "calll *;jmp  <.text+>;xorl %eax, %eax;testl %eax, %eax;je  <.text+>": 2,
                "movl %ebx, %eax;jmp  <.text+>;andl $, ;movl $, ;orl $-, %eax": 1,
                "orl $-, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 2,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %ecx;cmpl , %ecx": 1,
                "xorl %eax, %eax;jmp  <.text+>;testb $, %al;je  <.text+>;pushl $": 1,
                "pushl $;pushl $;pushl %ecx;calll  <.text+>;addl $, %esp": 1,
                "cmpl $, %edi;jl - <.text+>;movl %eax, %edi;leal -(%ebp), %eax;subl %eax, %edi": 1,
                "movl -(%ebp), %eax;subl -(%ebp), %eax;cmpl (%ebp), %eax;jb - <.text+>;jmp  <.text+>": 1,
                "pushl $;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %edi": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;jne  <.text+>;cmpl %eax, -(%ebp);je  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;incl ;pushl $;calll - <.text+>": 1,
                "cmpl , %eax;jb  <.text+>;xorl %eax, %eax;popl %ebp;retl": 1,
                "int;movl , %eax;testl %eax, %eax;pushl %esi;pushl $": 1,
                "movl (,%ecx,), %ecx;andl $, %eax;leal (%ecx,%eax,), %eax;jmp  <.text+>;movl $, %eax": 1,
                "movb -(%ebp,%edi), %cl;movb %cl, (%eax);movl (%esi), %ecx;movzbl (%ecx), %eax;incl %ecx": 1,
                "pushl %eax;calll - <.text+>;popl %ecx;popl %ecx;cmpl $-, %eax": 1,
                "pushl %esi;pushl %eax;calll  <.text+>;popl %ecx;popl %ecx": 1,
                "cmpl %ebx, %eax;je  <.text+>;movw %bx, (%eax);xorl %eax, %eax;popl %esi": 1,
                "movw %bx, (%eax);xorl %eax, %eax;popl %esi;popl %ebx;popl %ebp": 1,
                "popl %esi;popl %ebx;popl %ebp;retl;cmpl %ebx, ": 1,
                "jne - <.text+>;movl $, ;orl $-, %eax;jmp - <.text+>;xorl %eax, %eax": 1,
                "divl %ecx;movl %eax, %esi;movl %ebx, %eax;mull (%esp);movl %eax, %ecx": 1,
                "subl (%esp), %eax;sbbl (%esp), %edx;xorl %ebx, %ebx;subl (%esp), %eax;sbbl (%esp), %edx": 1,
                "popl %esi;retl $;int;int;int": 1,
                "cmpl $, ;pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;je  <.text+>;cmpl $, ": 1,
                "cmpl $, ;je  <.text+>;cmpl $, %ebx;jbe  <.text+>;xorl %esi, %esi": 1,
                "movb $, -(%ebp);popl %eax;jmp  <.text+>;movb %bl, -(%ebp);movb $, -(%ebp)": 1,
                "calll  <.text+>;addl $, %esp;testl %eax, %eax;je  <.text+>;cmpl %esi, %eax": 1,
                "movl %eax, %esi;leal (%edi,%esi,), %eax;pushl %eax;pushl $;popl %ecx": 1,
                "cltd;idivl %ecx;pushl $;popl %esi;subl %edx, %esi": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "rep  stosl %eax, %es:(%edi);movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "addl $, %eax;decl %edx;jne - <.text+>;popl %esi;popl %ebp": 1,
                "movl %edx, %ecx;shrl %cl, %esi;movl (%ebp), %ecx;orl -(%ebp), %esi;movl %esi, (%ebx,%eax,)": 1,
                "movl %eax, %ecx;subl -(%ebp), %ecx;leal (%ebx,%ecx,), %ecx;cmpl -(%ebp), %eax;jl  <.text+>": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl %ecx, %edi;andl $, %ecx": 1,
                "pushl %edi;movl %ecx, %edi;andl $, %ecx;movl %ecx, (%ebp);movl (%eax), %ecx": 1,
                "subl (%esi), %ecx;cmpl %ecx, %edi;jge  <.text+>;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;leal -(%ebp), %eax;pushl %edi": 1,
                "pushl $;popl %ecx;subl (%esi), %ecx;movl (%esi), %esi;shll %cl, %ebx": 1,
                "sbbl %ecx, %ecx;andl $, %ecx;orl %ecx, %ebx;orl -(%ebp), %ebx;cmpl $, %esi": 1,
                "movl %edx, (%ecx);jmp  <.text+>;cmpl $, %esi;jne  <.text+>;movl (%ebp), %ecx": 1,
                "addl $, %esp;popl %esi;calll - <.text+>;leave;retl": 2,
                "movl (%ebp), %ecx;movl (%ebp), %edi;movl %ecx, %eax;movl %ecx, %edx;addl %esi, %eax": 1,
                "jmpl *(,%edx,);nop;andl %ecx, %edx;movb (%esi), %al;movb %al, (%edi)": 1,
                "movl %gs, %ecx;addb %al, (%ecx);testb %ch, %cl;addb %al, (%ecx);jl - <.text+>": 1,
                "nop;movb (%esi), %al;andl %ecx, %edx;movb %al, (%edi);movb (%esi), %al": 1,
                "cld;jmpl *(,%edx,);leal (%ecx), %ecx;adcb $-, %al;addb %al, (%ecx)": 1,
                "movl (%ecx), %eax;movl $, %edx;addl %eax, %edx;xorl $-, %eax;xorl %edx, %eax": 2,
                "je - <.text+>;movl -(%ecx), %eax;testb %al, %al;je  <.text+>;testb %ah, %ah": 2,
                "je  <.text+>;testl $, %eax;je  <.text+>;jmp - <.text+>;leal -(%ecx), %eax": 1,
                "leal -(%ecx), %eax;movl (%esp), %ecx;subl %ecx, %eax;retl;int": 1,
                "int;int;pushl %edi;movl (%esp), %edi;jmp  <.text+>": 1,
                "addl $, %ecx;testl $, %eax;je - <.text+>;testb %dl, %dl;je  <.text+>": 1,
                "movl (%ebp), %edx;testl %ebx, %ebx;movb $, (%eax);jl  <.text+>;cmpb $, (%ecx)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %edx;xorl %eax, %eax": 1,
                "movzwl %cx, %ebx;andl $, %eax;testl %ebx, %ebx;je  <.text+>;cmpl %edi, %ebx": 1,
                "je  <.text+>;cmpl %edi, %ebx;je  <.text+>;leal (%ecx), %edi;jmp  <.text+>": 1,
                "je  <.text+>;leal (%ecx), %edi;jmp  <.text+>;movl $, %edi;jmp  <.text+>": 1,
                "shll %edx;shrl $, %ebx;orl %ebx, %edx;addl %ecx, %ecx;addl $, %edi": 1,
                "pushl $;subl $, %esp;leal -(%ebp), %esi;movl %esp, %edi;movsl (%esi), %es:(%edi)": 1,
                "movb %al, (%edi);incl %edi;decl %edx;jne - <.text+>;movl (%esp), %eax": 1,
                "cmpl $, %ecx;je  <.text+>;cmpl $, %ecx;je  <.text+>;cmpl %esi, %ecx": 1,
                "cmpl $, %ecx;je  <.text+>;cmpl %esi, %ecx;jne  <.text+>;orl %edi, %eax": 1,
                "testb $, %bl;je  <.text+>;orl $, %eax;testl $, %ebx;je  <.text+>": 1,
                "movl , %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "je  <.text+>;cmpb $, %al;je  <.text+>;cmpb $, %al;je  <.text+>": 1,
                "cmpb $, %al;jne  <.text+>;incl %edi;jmp - <.text+>;pushl $": 1,
                "jmp  <.text+>;cmpb , %bl;jne  <.text+>;pushl $;jmp  <.text+>": 1,
                "pushl $;jmp  <.text+>;movsbl %bl, %eax;subl $, %eax;je  <.text+>": 1,
                "movsbl %bl, %eax;subl $, %eax;je  <.text+>;decl %eax;decl %eax": 2,
                "jne  <.text+>;movl %edx, %ecx;jmp - <.text+>;movl %edx, -(%ebp);cmpl %edx, ": 1,
                "jne  <.text+>;movl %esi, %ecx;jmp - <.text+>;cmpl $, -(%ebp);movl %edx, -(%ebp)": 1,
                "jmp  <.text+>;decl -(%ebp);movb (%edi), %bl;incl %edi;cmpb $, %bl": 1,
                "cmpl $, (%ebp);je  <.text+>;movsbl %bl, %eax;subl $, %eax;leal -(%edi), %ecx": 1,
                "movl %ecx, -(%ebp);je  <.text+>;decl %eax;decl %eax;jne  <.text+>": 1,
                "pushl $;popl %ecx;decl %edi;cmpl $, %ecx;jne - <.text+>": 1,
                "movl -(%ebp), %edi;jmp  <.text+>;movl $, -(%ebp);xorl %esi, %esi;cmpl $, ": 1,
                "pushl $;pushl %eax;calll - <.text+>;popl %ecx;popl %ecx": 3,
                "incl -(%ebp);jmp  <.text+>;movl -(%ebp), %eax;cmpl $, -(%ebp);jbe  <.text+>": 1,
                "jge  <.text+>;negl %eax;addl -(%ebp), %eax;cmpl %ecx, -(%ebp);jne  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %esi": 1,
                "rep  addb %al, (%ecx);fcompi %st();addb %al, (%ecx);leave;rep  addb %al, (%ecx)": 1,
                "xchgl %ebp, %eax;rep  addb %al, (%ecx);int;int;int": 1,
                "int;pushl $;pushl $;calll - <.text+>;xorl %esi, %esi": 1,
                "cmpl $, %eax;jne  <.text+>;movl %esi, -(%ebp);movl %esi, -(%ebp);cmpl %esi, (%ebp)": 1,
                "cmpl %esi, (%ebp);jne  <.text+>;movl , %eax;movl %eax, (%ebp);pushl %esi": 1,
                "pushl (%ebp);xorl %eax, %eax;cmpl %esi, (%ebp);setne %al;leal (,%eax,), %eax": 1,
                "movl %esp, -(%ebp);movl %esp, %esi;movl %esi, -(%ebp);movl %edi, %ecx;xorl %eax, %eax": 1,
                "popl %ecx;popl %ecx;movl %eax, %esi;testl %esi, %esi;je  <.text+>": 1,
                "pushl $;pushl $;leal (%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "pushl $;leal (%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %eax": 1,
                "calll *;movl %eax, %esi;movl %esi, -(%ebp);xorl %ebx, %ebx;cmpl %ebx, %esi": 1,
                "leal (%esi,%esi), %eax;pushl %eax;calll - <.text+>;popl %ecx;movl %eax, -(%ebp)": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);cmpl %ebx, %edi;je  <.text+>;testb $, (%ebp)": 1,
                "testb $, (%ebp);je  <.text+>;cmpl %ebx, (%ebp);je  <.text+>;cmpl (%ebp), %edi": 1,
                "leal (%edi,%edi), %eax;addl $, %eax;andl $-, %eax;calll - <.text+>;movl %esp, -(%ebp)": 1,
                "pushl %ebx;jmp  <.text+>;pushl (%ebp);pushl (%ebp);pushl %edi": 1,
                "je  <.text+>;pushl -(%ebp);calll - <.text+>;popl %ecx;movl %edi, %eax": 1,
                "popl %ecx;movl %edi, %eax;jmp  <.text+>;movl %edi, -(%ebp);xorl %ebx, %ebx": 1,
                "pushl %edi;pushl %edi;leal (%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);jmp  <.text+>;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <.text+>;xorl %esi, %esi;jmp  <.text+>": 1,
                "pushl %eax;pushl %ebx;pushl (%ebp);pushl -(%ebp);calll - <.text+>": 1,
                "pushl (%ebp);pushl (%ebp);calll *;movl %eax, %esi;cmpl $, -(%ebp)": 1,
                "calll *;movl %eax, %esi;cmpl $, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "ja  <.text+>;cmpl $, ;jne  <.text+>;addl $, %esi;andl $-, %esi": 1,
                "cmpl $, ;jne  <.text+>;addl $, %esi;andl $-, %esi;cmpl , %edi": 1,
                "jne  <.text+>;addl $, %esi;andl $-, %esi;cmpl , %edi;ja  <.text+>": 1,
                "pushl %edi;calll - <.text+>;movl %eax, %edx;testl %edx, %edx;popl %ecx": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testl %esi, %esi;jne  <.text+>": 2,
                "jne  <.text+>;movzbl (%esi), %ecx;incl %esi;xorl %eax, %eax;cmpl $, %ecx": 1,
                "jb  <.text+>;cmpl $, %eax;ja  <.text+>;movl $, ;popl %ebp": 1,
                "retl;movl (,%ecx,), %eax;movl %eax, ;popl %ebp;retl": 1,
                "je  <.text+>;cmpl $, ;jne  <.text+>;xorl %eax, %eax;subl %eax, %ecx": 1,
                "pushl $-;jmp  <.text+>;pushl %eax;pushl $-;calll *": 1,
                "pushl %eax;pushl $-;calll *;movl (%edi), %eax;orl $-, (%esi,%eax)": 1,
                "xorl %eax, %eax;jmp  <.text+>;andl $, ;movl $, ;orl $-, %eax": 2,
                "shll $, %esi;testb $, (%ecx,%esi);je  <.text+>;movl (%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl , %eax;pushl (%eax,%esi,);calll - <.text+>;movl , %eax;andl $, (%eax,%esi,)": 1,
                "movl , %eax;andl $, (%eax,%esi,);popl %ecx;incl %esi;cmpl , %esi": 1,
                "movl %edi, %eax;popl %edi;popl %esi;retl;int": 1,
                "cmpb $, %cl;jne  <.text+>;testw $, %ax;je  <.text+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;testb %al, %al;jns  <.text+>;andl $-, %eax;movl %eax, (%esi)": 1,
                "pushl %ebx;pushl %esi;pushl %edi;xorl %esi, %esi;xorl %ebx, %ebx": 1,
                "movl %ebx, %eax;je  <.text+>;movl %edi, %eax;popl %edi;popl %esi": 1,
                "pushl %edi;je  <.text+>;movl (%esi), %eax;movl (%esi), %edi;leal (%eax), %edx": 1,
                "pushl %edi;pushl %eax;pushl %ecx;calll - <.text+>;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);jmp  <.text+>;cmpl $-, %ecx;je  <.text+>;movl %ecx, %eax": 1,
                "cmpw $, %cx;ja  <.text+>;movb %cl, (%eax);xorl %eax, %eax;incl %eax": 1,
                "xorl %eax, %eax;incl %eax;movl (%ebp), %edx;movl %ecx, (%edx);popl %esi": 1,
                "leal (%esi), %eax;pushl %eax;pushl $;pushl (%eax);calll - <.text+>": 1,
                "movl %esi, (%eax);movl %ecx, (%eax);popl %esi;popl %ebp;retl": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "decl -(%ebp);jne - <.text+>;xorl %edx, %edx;cmpl %edx, (%ebx);jne  <.text+>": 1,
                "movb $-, -(%ebp);movb $, -(%ebp);movl $, -(%ebp);movl %eax, %edx;je  <.text+>": 1,
                "movl $, %eax;cmpl %eax, %edi;movw $, (%ebx);jne  <.text+>;cmpl $, -(%ebp)": 1,
                "jmp - <.text+>;movzwl %dx, %eax;movl %eax, %esi;imull $, %eax, %eax;andw $, -(%ebp)": 1,
                "movb $, (%ebx);jmp  <.text+>;cmpl $, %edi;jle  <.text+>;pushl $": 1,
                "jne - <.text+>;movl -(%ebp), %eax;decl %eax;movb (%eax), %cl;decl %eax": 1,
                "pushl %edi;movl %ecx, %edi;movl $, %edx;andl %edx, %ecx;xorl %eax, %edi": 1,
                "testw %ax, %ax;movl $, %edx;jne  <.text+>;incl -(%ebp);xorl %eax, %eax": 1,
                "jne  <.text+>;cmpl %eax, (%ebx);jne  <.text+>;cmpl %eax, (%ebx);jne  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;addl $, -(%ebp);cmpw $, -(%ebp)": 1,
                "movl -(%ebp), %eax;negl %eax;movzwl %ax, %ebx;addl %ebx, -(%ebp);testb $, -(%ebp)": 1,
                "testb $, -(%ebp);je  <.text+>;incl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl $, -(%ebp);je  <.text+>;orb $, -(%ebp);cmpw $, -(%ebp);ja  <.text+>": 1,
                "cmpl %edx, %eax;je  <.text+>;leal (%eax,%eax,), %eax;leal (%ebx,%eax,), %esi;cmpw $, (%esi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);decl -(%ebp);leal -(%ebp), %esi": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;pushl %edi;orl $-, %edi": 1,
                "cmpl , %ebx;pushl %esi;pushl %edi;jae  <.text+>;movl %ebx, %eax": 1,
                "je  <.text+>;cmpl $, %ebx;je  <.text+>;cmpl $, %ebx;jne  <.text+>": 1,
                "movl %eax, %ebx;calll - <.text+>;popl %ecx;cmpl %ebx, %eax;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ebx;popl %ecx;je  <.text+>;pushl %ebx;calll - <.text+>": 1,
                "calll - <.text+>;cmpl $, (%ebp);movl (%edi), %eax;popl %ecx;movb $, (%eax,%esi)": 1,
                "addb %ch, -(%eax);ljmpl *-(%edx);adcl %eax, (%eax);addb %dh, -(%eax);adcl $, %eax": 1,
                "pushl %cs;addl %eax, (%eax);popl %esp;pushl %cs;addl %eax, (%eax)": 1,
                "sbbb (%esi), %dl;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);movb $, %dl": 1,
                "addb %al, (%eax);addb %al, (%eax);movb $, %dl;addl %eax, (%eax);lesl (%edi), %ecx": 1,
                "addl %eax, (%eax);lesl (%edi), %ecx;addl %eax, (%eax);aam $;addl %eax, (%eax)": 1,
                "adcb %al, (%ecx);addb %ch, -(%esi);adcb %al, (%ecx);addb %bl, %ah;adcb %al, (%ecx)": 1,
                "adcl (%ecx), %eax;addb %ah, (%eax);addl %eax, (%eax);jo  <.text+>;addl %eax, (%eax)": 1,
                "addb %ah, -(%eax);adcb $, %al;addb %bh, (%esp,%edx);addl %eax, (%eax);loop ": 1,
                "addl %eax, (%eax);into;adcl $, %eax;addb %al, (%eax);incl %esi": 1,
                "outb %al, $;addl %eax, (%eax);cld;pushl %ss;addl %eax, (%eax)": 1,
                "addl %eax, (%eax);sbbb $, %al;addl %eax, (%eax);xorb %dl, (%edi);addl %eax, (%eax)": 1,
                "xorb %dl, (%edi);addl %eax, (%eax);popl %ss;addl %eax, (%eax);decl %esi": 1,
                "jo  <.text+>;jb  <.text+>;incl %ebp;jbe  <.text+>;outsb (%esi), %dx": 1,
                "cmpl (%edx), %eax;pushl %ebx;je  <.text+>;jb  <.text+>;imull $, (%ebx), %esp": 1,
                "jl  <.text+>;pushl %ebp;jo  <.text+>;popal;je  <.text+>": 1,
                "jb  <.text+>;imull $, (%ebx), %esp;decl %eax;popal;outsb (%esi), %dx": 1,
                "je  <.text+>;jb  <.text+>;pushl %ebx;jb  <.text+>;imull $, (%ebx), %esp": 1,
                "jb  <.text+>;imull $, (%ebx), %esp;insb %dx, %es:(%edi);addb %al, %gs:(%eax);scasb %es:(%edi), %al": 1,
                "jb  <.text+>;imull $, (%ebx), %esp;addl %ecx, (%edi);outsb %gs:(%esi), %dx;pushl %ebx": 1,
                "jb  <.text+>;addb %al, (%eax);incl %edi;addb (%ebx), %dl;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;jo  <.text+>;jb  <.text+>;arpl %sp, (%ebp);addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);addb %al, (%eax);lock;addb %al, (%esi);decl %esp": 1,
                "addb %al, (%eax);lock;addb %al, (%esi);decl %esp;imull $, (%edx), %esp": 1,
                "jb  <.text+>;outsb %gs:(%esi), %dx;pushl %edi;addb %al, (%eax);addl $, %eax": 1,
                "outsl (%esi), %dx;jae  <.text+>;decl %eax;popal;outsb (%esi), %dx": 1,
                "pushl %edi;addb %cl, (%edx);incl %ebx;jb  <.text+>;popal": 1,
                "jne  <.text+>;insb %dx, %es:(%edi);pushl %eax;popal;je  <.text+>": 1,
                "pushl %eax;jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;addb %al, (%eax)": 1,
                "imull $, (%esi,%eax,), %esi;je  <.text+>;jo  <.text+>;decl %edi;bound (%edx), %ebp": 2,
                "bound (%edx), %ebp;arpl %si, (%ebx,%esi,);addb %bh, (%edi);je  <.text+>;jbe  <.text+>": 1,
                "insb %dx, %es:(%edi);jo  <.text+>;sbbb %al, (%edx);decl %ecx;outsb (%esi), %dx": 1,
                "decl %eax;popal;outsb (%esi), %dx;insb %dx, %es:(%edi);pushl %edi": 1,
                "addb %al, (%eax);testl $, %eax;jb  <.text+>;popal;je  <.text+>": 1,
                "jb  <.text+>;outsb (%esi), %dx;je  <.text+>;pushl $;addb %al, (%eax)": 1,
                "outsb (%esi), %dx;arpl %sp, (%ebp);outsl (%esi), %dx;jne  <.text+>;je  <.text+>": 1,
                "pushl $;decl %ecx;addb %al, %fs:(%eax);cmpb $, %al;incl %edi": 1,
                "imull $, (%esi), %ebp;outsl (%esi), %dx;arpl %sp, (%ebp);jae  <.text+>;addb %bh, (%ebx)": 1,
                "jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;popl %ebx;addl (%ebp), %edx": 1,
                "incl %edi;je  <.text+>;outsl (%esi), %dx;insl %dx, %es:(%edi);insl %dx, %es:(%edi)": 1,
                "je  <.text+>;jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;cwtl": 1,
                "je  <.text+>;jb  <.text+>;arpl %ax, (%ecx);jb  <.text+>;jae  <.text+>": 1,
                "imull $, (%ebp), %ebp;je  <.text+>;je  <.text+>;decl %eax;popal": 1,
                "je  <.text+>;addb %bl, (%esi);incl %edi;je  <.text+>;imull $, (%ebp), %ebp": 1,
                "popal;jo  <.text+>;jae  <.text+>;jb  <.text+>;jns  <.text+>": 1,
                "pushl %esi;imull $, (%edx), %esi;jb  <.text+>;addb %dh, %gs:(%ebx,%eax);imull $, (%edx), %esi": 1,
                "jb  <.text+>;je  <.text+>;arpl %si, (%eax,%eax);movl $, %ebx;pushl %ebx": 1,
                "insl %dx, %es:(%edi);decl %ecx;outsb (%esi), %dx;outsw (%esi), %dx;addb %dh, (%esi)": 1,
                "insb %dx, %es:(%edi);pushl %ebp;outsb (%esi), %dx;ja  <.text+>;outsb (%esi), %dx": 1,
                "incl %ebp;decl %ebp;incl %ebx;pushl %eax;addb %al, (%eax)": 1,
                "incl %ecx;addb %al, (%eax);movb $, %ah;incl %edi;je  <.text+>": 1,
                "je  <.text+>;imull $, (%ebp), %ebp;jb  <.text+>;addb %ah, ;pushl %ebx": 1,
                "pushl %ebx;je  <.text+>;imull $, (%esi), %ebp;incl %ebp;pushl %edx": 1,
                "outsb %gs:(%esi), %dx;addb %al, %fs:(%eax);decl %esi;incl %ebp;pushl %esp": 1,
                "je  <.text+>;outsl (%esi), %dx;incl %esi;imull $, (%ebp), %ebp;addb %ah, (%edx)": 1,
                "outsb (%esi), %dx;outsw (%esi), %dx;pushl %edi;addb %al, (%eax);wait": 1,
                "pushl $;popaw;jne  <.text+>;je  <.text+>;popal": 1,
                "pushl %eax;pushl $;outsl (%esi), %dx;jne  <.text+>;je  <.text+>": 1,
                "outsl (%esi), %dx;jne  <.text+>;je  <.text+>;jb  <.text+>;addb %al, (%eax)": 2,
                "outsl (%esi), %dx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);arpl %si, %gs:(%ecx,%edx,);jb  <.text+>": 1,
                "popal;je  <.text+>;addb %cl, (%eax,%eax);pushl %eax;pushl $": 1,
                "pushl %eax;pushl $;pushl %ecx;jne  <.text+>;jb  <.text+>": 2,
                "addb %bh, (%ebx);addb %dl, (%eax);pushl $;outsl (%esi), %dx;incl %esi": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                ".text": 1,
                "`.data": 1,
                ".rsrc": 1,
                "ADVAPI32.dll": 2,
                "KERNEL32.dll": 2,
                "NTDLL.DLL": 1,
                "USER32.dll": 2,
                "NETAPI32.dll": 2,
                "SHLWAPI.dll": 2,
                "pdh.dll": 2,
                "CorExitProcess": 1,
                "mscoree.dll": 1,
                "runtime error ": 1,
                "TLOSS error": 1,
                "SING error": 1,
                "DOMAIN error": 1,
                "R6028": 1,
                "- unable to initialize heap": 1,
                "R6027": 1,
                "- not enough space for lowio initialization": 1,
                "R6026": 1,
                "- not enough space for stdio initialization": 1,
                "R6025": 1,
                "- pure virtual function call": 1,
                "R6024": 1,
                "- not enough space for _onexit/atexit table": 1,
                "R6019": 1,
                "- unable to open console device": 1,
                "R6018": 1,
                "- unexpected heap error": 1,
                "R6017": 1,
                "- unexpected multithread lock error": 1,
                "R6016": 1,
                "- not enough space for thread data": 1,
                "This application has requested the Runtime to terminate it in an unusual way.": 1,
                "Please contact the application's support team for more information.": 1,
                "R6009": 1,
                "- not enough space for environment": 1,
                "R6008": 1,
                "- not enough space for arguments": 1,
                "R6002": 1,
                "- floating point not loaded": 1,
                "Microsoft Visual C++ Runtime Library": 1,
                "Runtime Error!": 1,
                "Program: ": 1,
                "<program name unknown>": 1,
                "e+000": 1,
                "GetProcessWindowStation": 1,
                "GetUserObjectInformationA": 1,
                "GetLastActivePopup": 1,
                "GetActiveWindow": 1,
                "MessageBoxA": 1,
                "user32.dll": 1,
                " (8PX": 1,
                "700WP": 1,
                "`h````": 1,
                "ppxxxx": 1,
                "(null)": 1,
                "1#QNAN": 1,
                "1#INF": 1,
                "1#IND": 1,
                "1#SNAN": 1,
                "RSDS-": 1,
                "smlogsvc.pdb": 1,
                "C@PWh": 1,
                "9{4tq": 1,
                "CPPWh": 1,
                "9{Tu<": 1,
                "v|f9>tw": 1,
                "~.f9;t)S": 1,
                "jWX_^]": 1,
                "9{$t\\": 1,
                "u>9{8u": 1,
                "u*9{Tu%": 1,
                "ChVWQP": 1,
                "sl_^[": 1,
                ">\\u5W": 1,
                "FFf9>u": 1,
                "VVVVV": 1,
                "@_^[]": 1,
                "F$;G$u@": 1,
                "F4;G4u8": 1,
                "FT;GTu0": 1,
                "F(;G(u(": 1,
                "F,;G,u ": 1,
                "F8;G8u": 1,
                "F<;G<u": 1,
                "FX;GXu": 1,
                "F\\;G\\t": 1,
                "FD;GDu": 1,
                "FH;GHu": 1,
                "FL;GLu": 1,
                "@[_^]": 2,
                "FD;GD": 1,
                "FH;GH": 1,
                "FL;GL": 1,
                "t(;N<|#": 1,
                "VVVSVt": 1,
                "VVVVVh": 2,
                "FD;CDuU": 1,
                "FH;CHuH": 1,
                "FL;CLu@": 1,
                "f93t-": 1,
                "KSSSV": 1,
                "PWVho": 1,
                "twSSSS": 1,
                "HVt7HtpHtmHHt-": 1,
                " t@9U": 1,
                "jWX^[": 1,
                "f90t2P": 1,
                "AABBGG;": 1,
                "t,It!It": 1,
                "VC20XC00U": 1,
                "PSQVQWS": 1,
                "PSQVj": 1,
                "PSSSj": 1,
                "QQSVW3": 1,
                "@PWSS": 1,
                "rof=p": 1,
                "r_f=Z": 1,
                "rAf=*": 1,
                "r1f=J": 1,
                "AABBf": 1,
                "DSVWj": 1,
                "u5SSWh": 1,
                "Y9E t": 1,
                "E SSSS": 1,
                "SVWUj": 1,
                ";t$(v(": 1,
                "UQPXY]Y[": 1,
                "j ^f;": 1,
                "eYt*F": 1,
                "SVWt'": 1,
                "SVWt(": 1,
                "VWumh": 1,
                "PPWSj": 1,
                "WWWWVSW": 1,
                "WWVPVSW": 1,
                "SVWsc": 1,
                "VWj Y": 1,
                "SVWj ^": 1,
                "+tnHHt^": 1,
                "j4hp#": 1,
                "u8WW3": 1,
                "t!SS9]": 1,
                "Yu+Vj": 1,
                "RegCloseKey": 1,
                "RegQueryValueExW": 1,
                "RegOpenKeyExW": 1,
                "ReportEventW": 1,
                "RegSetValueExW": 1,
                "SetServiceStatus": 1,
                "RegEnumKeyExW": 1,
                "QueryTraceW": 1,
                "CreateProcessAsUserW": 1,
                "UpdateTraceW": 1,
                "DeregisterEventSource": 1,
                "RegisterServiceCtrlHandlerW": 1,
                "StartServiceCtrlDispatcherW": 1,
                "RegisterEventSourceW": 1,
                "ControlService": 1,
                "CloseServiceHandle": 1,
                "OpenServiceW": 1,
                "OpenSCManagerW": 1,
                "StopTraceW": 1,
                "EnableTrace": 1,
                "StartTraceW": 1,
                "FreeLibrary": 1,
                "FormatMessageW": 1,
                "LoadLibraryW": 1,
                "lstrcpyW": 1,
                "HeapFree": 1,
                "lstrlenW": 1,
                "HeapAlloc": 1,
                "GetProcessHeap": 1,
                "CloseHandle": 1,
                "GetLastError": 1,
                "CreateFileW": 1,
                "SetErrorMode": 1,
                "ExpandEnvironmentStringsW": 1,
                "SystemTimeToFileTime": 1,
                "GetLocalTime": 1,
                "EnterCriticalSection": 1,
                "LeaveCriticalSection": 1,
                "WaitForSingleObject": 1,
                "lstrcmpiW": 1,
                "CreateDirectoryW": 1,
                "GetFullPathNameW": 1,
                "lstrcpynW": 1,
                "CreateProcessW": 1,
                "SetEvent": 1,
                "CreateThread": 1,
                "CreateEventW": 1,
                "GetSystemTimeAsFileTime": 1,
                "DeleteCriticalSection": 1,
                "WaitForMultipleObjects": 1,
                "ResetEvent": 1,
                "Sleep": 1,
                "InitializeCriticalSection": 1,
                "GetModuleHandleW": 1,
                "lstrcatW": 1,
                "SetLastError": 1,
                "SetThreadPriority": 1,
                "GetCurrentThread": 1,
                "QueryPerformanceCounter": 1,
                "GetTickCount": 1,
                "GetCurrentThreadId": 1,
                "GetCurrentProcessId": 1,
                "TerminateProcess": 1,
                "GetCurrentProcess": 1,
                "UnhandledExceptionFilter": 1,
                "SetUnhandledExceptionFilter": 1,
                "GetCommandLineA": 1,
                "GetVersionExA": 1,
                "WideCharToMultiByte": 1,
                "ExitProcess": 1,
                "GetProcAddress": 1,
                "GetModuleHandleA": 1,
                "WriteFile": 1,
                "GetStdHandle": 1,
                "GetModuleFileNameA": 1,
                "FreeEnvironmentStringsA": 1,
                "GetEnvironmentStrings": 1,
                "FreeEnvironmentStringsW": 1,
                "GetEnvironmentStringsW": 1,
                "SetHandleCount": 1,
                "GetFileType": 1,
                "GetStartupInfoA": 1,
                "HeapDestroy": 1,
                "HeapCreate": 1,
                "VirtualFree": 1,
                "VirtualProtect": 1,
                "GetSystemInfo": 1,
                "VirtualQuery": 1,
                "MultiByteToWideChar": 1,
                "LCMapStringA": 1,
                "LCMapStringW": 1,
                "RtlUnwind": 1,
                "InterlockedExchange": 1,
                "LoadLibraryA": 1,
                "GetACP": 1,
                "GetOEMCP": 1,
                "GetCPInfo": 1,
                "VirtualAlloc": 1,
                "HeapReAlloc": 1,
                "GetStringTypeA": 1,
                "GetStringTypeW": 1,
                "GetLocaleInfoA": 1,
                "SetFilePointer": 1,
                "SetStdHandle": 1,
                "FlushFileBuffers": 1,
                "LoadStringW": 1,
                "NtWaitForSingleObject": 1,
                "NtWaitForMultipleObjects": 1,
                "ntdll.dll": 1,
                "NetMessageBufferSend": 1,
                "WmiNotificationRegistrationW": 1,
                "PdhPlaGetLogFileNameW": 1,
                "PdhPlaGetInfoW": 1,
                "PdhiPlaRunAs": 1,
                "PdhSetDefaultRealTimeDataSource": 1,
                "PdhAddCounterW": 1,
                "PdhAdd009CounterW": 1,
                "PdhGetFormattedCounterValue": 1,
                "PdhCollectQueryData": 1,
                "PdhCloseQuery": 1,
                "PdhOpenQueryH": 1,
                "PdhGetLogFileSize": 1,
                "PdhCloseLog": 1,
                "PdhUpdateLogW": 1,
                "PdhOpenLogW": 1,
                "PdhExpandWildCardPathW": 1,
                "PdhParseCounterPathW": 1,
                "PdhTranslateLocaleCounterW": 1,
                "PdhiPlaFormatBlanksW": 1,
                "z?aUY": 1,
                "zc%C1": 1,
                "-64OS": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rsrc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegCloseKey": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegQueryValueExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegOpenKeyExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_ReportEventW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegSetValueExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_SetServiceStatus": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegEnumKeyExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_QueryTraceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_CreateProcessAsUserW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_UpdateTraceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_DeregisterEventSource": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegisterServiceCtrlHandlerW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_StartServiceCtrlDispatcherW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegisterEventSourceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_ControlService": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_CloseServiceHandle": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_OpenServiceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_OpenSCManagerW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_StopTraceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_EnableTrace": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_StartTraceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_WmiNotificationRegistrationW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FormatMessageW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcpyW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrlenW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcessHeap": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CloseHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetErrorMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExpandEnvironmentStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SystemTimeToFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocalTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_EnterCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LeaveCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WaitForSingleObject": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcmpiW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFullPathNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcpynW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateProcessW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetEvent": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateEventW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeleteCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WaitForMultipleObjects": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ResetEvent": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_Sleep": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InitializeCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetThreadPriority": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCommandLineA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVersionExA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WideCharToMultiByte": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExitProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStdHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleFileNameA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeEnvironmentStringsA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetEnvironmentStrings": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeEnvironmentStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetEnvironmentStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetHandleCount": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileType": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStartupInfoA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapDestroy": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapCreate": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualProtect": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualQuery": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MultiByteToWideChar": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LCMapStringA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LCMapStringW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_RtlUnwind": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InterlockedExchange": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetACP": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetOEMCP": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCPInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapReAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStringTypeA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStringTypeW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocaleInfoA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFilePointer": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetStdHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FlushFileBuffers": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleHandleW": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadStringW": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtWaitForSingleObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtWaitForMultipleObjects": 3,
                "bind=NONE type=FUNC name=NETAPI32.dll_NetMessageBufferSend": 3,
                "bind=NONE type=FUNC name=SHLWAPI.dll_Ordinal_439": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhPlaGetLogFileNameW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhPlaGetInfoW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhiPlaRunAs": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhSetDefaultRealTimeDataSource": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhAddCounterW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhAdd009CounterW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhGetFormattedCounterValue": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhCollectQueryData": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhCloseQuery": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhOpenQueryH": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhGetLogFileSize": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhCloseLog": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhUpdateLogW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhOpenLogW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhExpandWildCardPathW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhParseCounterPathW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhTranslateLocaleCounterW": 3,
                "bind=NONE type=FUNC name=pdh.dll_PdhiPlaFormatBlanksW": 3,
                "section=.data type=utf32le \\v@\u03ff blocks=Basic Latin,Greek and Coptic": 1,
                "section=.data type=utf32le string=\\t\\a\\f\\b\\f\\t\\f\\n\\a\\v\\b\\f": 1,
                "section=.data type=utf32le string=R\\rS\\rW": 1,
                "section=.data type=utf32le string=Y\\vl\\rm p": 1,
                "section=.data type=utf32le string=\\v\u00a7\\r\u00b7 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.data type=utf8 string=HMXB\u49d39;5 blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "section=.data type=utf8 string=]\u0740nL\u025b blocks=Basic Latin,Syriac,IPA Extensions": 1,
                "section=.data type=utf8 string=?q=\\n\u05e3p=\\n\u05e3 blocks=Basic Latin,Hebrew": 1,
                "section=.data type=utf8 string=\u03d4?$# blocks=Greek and Coptic,Basic Latin": 1,
                "section=.data type=utf8 string=\u2f3a;1a blocks=Kangxi Radicals,Basic Latin": 1,
                "section=.data type=utf8 string=zc%C1,<!": 1,
                "section=.data type=utf8 string=;\u0708X\\b\\e blocks=Basic Latin,Syriac": 1,
                "section=.data type=utf8 string=;\u0184EB\\a blocks=Basic Latin,Latin Extended-B": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=Performance Logs and Alerts Service": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2108)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=SMLOGSVC.EXE": 2,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le string=Log %1 has been started or restarted and is logging data to file %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Log %1, logging data to file %2, has been stopped.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Counter: %1 has tripped its alert threshold. The counter value of %2 is %3 the limit\\r\\nvalue of %4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Alert %1 has been started or restarted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Starting service.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Handler registered.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Clear run states.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Default folder loaded.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Event source registered.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Config event created.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Service control dispatcher started.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The service was unable to open the log file %1 for log %2 and will be stopped.\\r\\nCheck the log folder for existence, spelling, permissions, and ensure that \\r\\nno other logs or applications are writing to this log file. You can reenter\\r\\nthe log file name using the configuration program.  \\r\\nThis log will not be started.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read the configuration of the %1 log or alert.\\r\\nThis log or alert will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read the %1 value of the %2 log or alert configuration.\\r\\nThe default value will be used.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read the %1 value of the %2 log or alert configuration.\\r\\nAn error occurred while trying to allocate memory for the default value.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Log Type for the %1 log or alert configuration has invalid value.\\r\\nThis log or alert will not be started.\\r\\nThe invalid value is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to allocate a data block for the %1 log or alert configuration.\\r\\nThis log or alert will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to start the thread for the %1 log or alert configuration.\\r\\nThis log or alert will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to start the trace session for the %1 trace log configuration.\\r\\nThe Kernel trace provider and some application trace providers require \\r\\nAdministrator privileges in order to collect data.  Use the Run As option \\r\\nin the configuration application to log under an Administrator account\\r\\nfor these providers. \\r\\nSystem error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to enable any trace providers for the %1 trace log configuration.\\r\\nThis log will not be started.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to enable trace provider %1 for the %2 trace log configuration.\\r\\nOnly one instance of each trace provider can be enabled at any given time.\\r\\nThe Kernel trace provider and some application trace providers require \\r\\nAdministrator privileges in order to collect data.  Use the Run As option \\r\\nin the configuration application to log under an Administrator account\\r\\nfor these providers. \\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create the exit event for the %1 log or alert configuration.\\r\\nThis log or alert will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to start the thread for the %1 log or alert configuration.\\r\\nThe maximum number of active logs and alerts has been reached.\\r\\nRestart the log or alert when fewer logs and alerts are active.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read the list of counters from the %1 log or alert configuration.\\r\\nThis log or alert will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read the list of trace providers to log for the %1 trace log configuration.\\r\\nThis log will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An error occurred while trying to update the log file with the current data\\r\\nfor the %1 log session.  This log session will be stopped.\\r\\nThe Pdh error returned is: %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An error occurred while trying to reset the current state of the %1 log or alert to Stopped.\\r\\nThe service will continue, but the configuration of that log or alert might\\r\\nbe incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An error occurred while trying to reset the current manual start state\\r\\nof the %1 log or alert to match its current stopped state.  The service\\r\\nwill continue, but the configuration of that log or alert might be incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The service was unable to add the counter '%1' to the %2 log or alert.  This log or alert\\r\\nwill continue, but data for that counter will not be collected.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The service was unable to add any counters to the %1 log or alert.  \\r\\nThis log or alert will not be started.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The service was unable to parse the alert info for the %2 alert so this counter\\r\\nwill not be monitored.\\r\\nThe path string in error is: %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=An error occurred while trying to reset the current manual stop state\\r\\nof the %1 log or alert to match the its current stopped state.  The service\\r\\nwill continue, but the configuration of that log or alert might be incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create the reconfigure event for the %1 log or alert configuration.\\r\\nThis log or alert will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An error occurred while trying to collect data for the %1 alert scan.\\r\\nThe service will continue, but that alert scan will be stopped.\\r\\nThe error returned is: %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The addition of counter '%1' to the %2 log or alert generated a warning.\\r\\nData for that counter might not be collected.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create the %1 folder for the %2 log configuration.\\r\\nThis log will not be started.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to execute command '%1' for the %2 alert.  \\r\\nThe alert will continue as scheduled.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to execute command '%1' for the %2 log.  \\r\\nThe log will continue as scheduled.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The service was unable to open the command or program file: %1. The %2 log or alert will\\r\\ncontinue as scheduled.  Check the file for existence, spelling and permissions or reenter\\r\\nthe file name using the configuration program.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to allocate memory while starting the %1 log. \\r\\nThis log will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The service was unable to send a message for alert %1 to machine %2. The alert will\\r\\ncontinue as scheduled.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read the configuration of the %1 log, started in response to the %2 alert trigger.  The alert will\\r\\ncontinue as scheduled.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to start the %1 log in response to the %2 alert trigger.  The alert will\\r\\ncontinue as scheduled.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The service was unable to add the counter '%1' to the %2 log or alert.\\r\\nThis log or alert will continue, but data for that counter will not be collected.\\r\\nUse the Run As option in the configuration program to run the log under \\r\\nan account that has access to the performance data on the computer \\r\\nfrom which you are collecting data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create the %1 folder for the %2 log configuration.\\r\\nThis log will be stopped.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creation of the %1 log or alert is not complete.\\r\\nThis log will not be started.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The open operation on log file: %1 for log %2 generated a warning.\\r\\nThe log will continue.\\r\\nThe warning returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to allocate memory while starting the %1 alert. \\r\\nThis alert will not be started.\\r\\nThe error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An error occurred while trying to open the %1 log or alert session.  \\r\\nThis session will be stopped.\\r\\nThe Pdh error returned is: %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid user name or password for the %1 log session.\\r\\nThis session will not be started.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The service was unable to parse the counter '%1' in the %2 log.  This log\\r\\nwill continue, but data for that counter will not be collected.\\r\\nThe error returned is: %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Log %1 has failed. General internal application failure.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to start the trace session for the %1 trace log configuration.\\r\\nOnly one instance of each trace provider can be enabled at any given time.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to initialize the service. Win32 error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to register the Service Control Handler function. Win32 error code returned\\r\\nis in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create the configuration event. Win32 error code returned is in the data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to open the Performance Logs and Alerts configuration.\\r\\nThis configuration is initialized when you use the Performance\\r\\nLogs and Alerts Management Console snapin to create a Log or\\r\\nAlert session.\\r\\n": 1,
                "section=.rsrc type=utf16le string=under": 1,
                "section=.rsrc type=utf16le string=overB%s %s tripped its alert threshold. %s is %s the limit value of %s.#%2.2d-%2.2d-%2.2d %2.2d:%2.2d:%2.2d": 1,
                "section=.rsrc type=utf16le string=_%3.3d": 1,
                "section=.rsrc type=utf16le At least one counter has not been validated nor accessed.": 1,
                "arch     x86": 1,
                "binsz    89600": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x0002138d": 1,
                "compiled Sun Apr 13 19:32:08 2008": 1,
                "crypto   false": 1,
                "dbg_file smlogsvc.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x0001e248": 1,
                "guid     63C1C22D89B44094B4008C2AE618A1951": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   true": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows GUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x3": 1,
                "TimeDateStamp : 0x480251a8": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x10f": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0x10800": 1,
                "SizeOfInitializedData : 0x6c00": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x12000": 1,
                "ImageBase : 0x1000000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x1a000": 1,
                "SizeOfHeaders : 0x400": 1,
                "CheckSum : 0x1e248": 1,
                "Subsystem : 0x2": 1,
                "DllCharacteristics : 0x8000": 1,
                "SizeOfStackReserve : 0x40000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x10b48": 1,
                "Size : 0xa0": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x15000": 1,
                "Size : 0x46f0": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x1220": 1,
                "Size : 0x1c": 1,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0x23b8": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT": 1,
                "VirtualAddress : 0x258": 1,
                "Size : 0x98": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x1000": 1,
                "Size : 0x220": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "advapi32.dll": 1,
                "kernel32.dll": 1,
                "user32.dll": 1,
                "ntdll.dll": 1,
                "netapi32.dll": 1,
                "shlwapi.dll": 1,
                "pdh.dll": 1,
                "89600": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x1": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: Performance Logs and Alerts Service": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2108)": 1,
                "InternalName: SMLOGSVC.EXE": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: SMLOGSVC.EXE": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}