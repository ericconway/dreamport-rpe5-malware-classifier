{
    "filepath": "/corpus/benign/c2d40ff84a6f5c0da1f0e89f8ae0dc4046d31026",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "d7f9baea5b1c908c3b4a6a027be08afb"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "movl $, (%eax);movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax;movl %esi, (%eax)": 2,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl %ebx, %edi;movl $, %edx;testb $, %bl": 2,
                "leal (%ebx), %edi;movb $-, %dl;testl $, %edi;je  <jpeg_CreateCompress+>;movw $, (%edi)": 1,
                "movw $, (%edi);addl $, %edi;testb $, %dl;je  <jpeg_CreateCompress+>;movb $, (%edi)": 1,
                "addl $, %edi;testb $, %dl;je  <jpeg_CreateCompress+>;movb $, (%edi);movl %esi, (%ebx)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);calll  <jpeg_destroy>": 1,
                "calll *(%eax);cmpl $, (%ebx);je  <jpeg_finish_compress+>;movl $, %esi;movl (%ebx), %eax": 1,
                "movl %ebx, (%esp);calll  <jpeg_abort>;addl $, %esp;popl %ebx;popl %esi": 1,
                "jbe  <jpeg_write_marker+>;movl (%edi), %eax;movl $, (%eax);movl (%edi), %eax;movl (%edi), %edx": 1,
                "jne  <jpeg_write_m_header+>;movl (%ebx), %eax;subl $, %eax;cmpl $, %eax;jbe  <jpeg_write_m_header+>": 1,
                "movl (%ebx), %eax;movl %ebx, (%esp);calll *(%eax);movl (%ebx), %eax;movl (%ebp), %edx": 3,
                "movl %ebx, (%esp);calll *(%eax);movl (%ebx), %eax;movl (%ebp), %edx;movl %edx, (%esp)": 3,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx": 6,
                "calll *(%eax);movl %ebx, (%esp);calll  <jinit_compress_master>;movl (%ebx), %eax;movl %ebx, (%esp)": 1,
                "movl (%ebx), %eax;movl %ebx, (%esp);calll *(%eax);movl $, (%ebx);cmpb $, (%ebx)": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %esi;cmpl $, (%ebx);je  <jpeg_write_scanlines+>": 1,
                "movl $, -(%ebp);movl (%ebx), %edx;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll *(%eax);movl $, %esi;jmp  <jpeg_write_raw_data+>;movl (%ebx), %edx;testl %edx, %edx": 1,
                "jmp  <jpeg_write_raw_data+>;movl $, %esi;movl %esi, %eax;addl $, %esp;popl %ebx": 1,
                "testl %eax, %eax;jne  <jpeg_write_raw_data+>;movl %ebx, (%esp);calll *(%ecx);testb %al, %al": 1,
                "calll *(%ecx);testb %al, %al;jne  <jpeg_write_raw_data+>;movl (%ebx), %eax;movl $, (%eax)": 1,
                "jne  <jpeg_write_raw_data+>;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax;movl %ebx, (%esp)": 1,
                "jle  <jpeg_write_raw_data+>;addl $, %edx;movl %edx, (%ebx);jmp  <jpeg_write_raw_data+>;movl %edx, (%ebx)": 1,
                "movl (%ebx), %eax;subl $, %eax;movl %eax, (%ebx);testl %eax, %eax;jne - <jpeg_write_raw_data+>": 9,
                "movl (%ebx), %eax;addl $, %eax;movl %esi, %edx;calll - <jpeg_write_raw_data+>;cmpl $, (%ebx)": 2,
                "movl %esi, %edx;movl $, %eax;calll - <jpeg_write_raw_data+>;movl (%ebx), %eax;addl %eax, (%ebx)": 2,
                "testl %eax, %eax;jne - <jpeg_write_raw_data+>;testl $, (%ebx);je  <jpeg_write_raw_data+>;cmpl $, (%ebx)": 1,
                "jne - <jpeg_write_raw_data+>;testl $, (%ebx);je  <jpeg_write_raw_data+>;cmpl $, (%ebx);je  <jpeg_write_raw_data+>": 1,
                "subl -(%ebp), %edx;movl %edx, (%ebx);movzbl %cl, %edi;sarl $, %edi;cmpl -(%ebp), %edi": 1,
                "cmpl $, %edx;jg  <jpeg_write_raw_data+>;cmpl %edx, -(%ebp);jle  <jpeg_write_raw_data+>;addl %edx, (%ebx)": 1,
                "jmp  <jpeg_write_raw_data+>;cmpl $, %edi;jne  <jpeg_write_raw_data+>;addl $, (%ebx);jmp  <jpeg_write_raw_data+>": 1,
                "calll *(%eax);cmpb $, (%ebx);je  <jpeg_write_raw_data+>;cmpl $, (%ebx);jne  <jpeg_write_raw_data+>": 1,
                "jg - <jpeg_write_raw_data+>;movl -(%ebp), %esi;movl $, (%esi);movl $, (%esi);movl $, (%esi)": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %ebx;movl %edx, %esi;movl (%eax), %eax": 1,
                "calll - <jpeg_write_raw_data+>;movl %ebx, %edx;movl $, %eax;calll - <jpeg_write_raw_data+>;leal (%esi), %eax": 1,
                "cmpl $, (%ebx);jle  <jpeg_write_raw_data+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl $, %esi": 1,
                "jle  <jpeg_write_raw_data+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl $, %esi;movl $, %eax": 1,
                "je  <jpeg_write_raw_data+>;movb $, (%edi);addl $, %edi;movl $, -(%ebp);testl $, %edi": 1,
                "jg - <jpeg_write_raw_data+>;movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);addl $, %esp": 3,
                "movl (%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl (%ebp), %ecx;cmpl $, (%ecx)": 2,
                "movl (%ecx,%edx,), %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;movl (%ebp), %eax;movl (%eax,%ecx,), %ebx": 1,
                "movl (%edx), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax;movl (%eax,%ecx,), %esi;addl (%eax,%ebx,), %esi": 1,
                "movl -(%ebp), %eax;movl (%eax,%ecx,), %esi;addl (%eax,%ebx,), %esi;movl -(%ebp), %edx;movswl (%edx), %eax": 1,
                "movl %esi, %edx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>;movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "movl %esi, %edx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>;movl (%ebp), %edx;movl -(%ebp), %eax": 1,
                "setne %cl;movzbl %cl, %ecx;movl %esi, %edx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>": 2,
                "sarl %ebx;jne - <jpeg_write_raw_data+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);testl %eax, %eax;je  <jpeg_write_raw_data+>": 1,
                "movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %ebx": 1,
                "movl $, %ecx;movl %ebx, %edx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>;addl $, %edi": 1,
                "movl %ebx, %edx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>;addl $, %edi;movl -(%ebp), %edx": 1,
                "testl %esi, %esi;jne  <jpeg_write_raw_data+>;movl %edx, %esi;leal (%ebx), %edx;movl $, %ecx": 1,
                "movl (%ebp), %eax;calll - <jpeg_write_raw_data+>;testl %esi, %esi;jle  <jpeg_write_raw_data+>;movl $, %ecx": 1,
                "jle  <jpeg_write_raw_data+>;movl $, %ecx;movl -(%ebp), %edx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>": 1,
                "movl (%ebp), %eax;calll - <jpeg_write_raw_data+>;jmp  <jpeg_write_raw_data+>;negl %esi;movl $, %ecx": 1,
                "movl -(%ebp), %ecx;sarl %ecx;movl %ecx, -(%ebp);je  <jpeg_write_raw_data+>;movl $, %ecx": 1,
                "calll - <jpeg_write_raw_data+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movzbl (%ecx,%edx), %eax;cmpl %edi, %eax": 1,
                "movl $, %ecx;movl %esi, %edx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>;addl %ebx, %ebx": 1,
                "calll - <jpeg_write_raw_data+>;addl %ebx, %ebx;addl $, %esi;sarl %edi;jne - <jpeg_write_raw_data+>": 1,
                "calll - <jpeg_write_raw_data+>;addl $, %esi;sarl %ebx;je  <jpeg_write_raw_data+>;testl %ebx, -(%ebp)": 1,
                "movl $, %ecx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>;addl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "addl $, -(%ebp);movl -(%ebp), %ecx;movl (%ebp), %edx;cmpl %ecx, (%edx);jg - <jpeg_write_raw_data+>": 1,
                "cmpl %ecx, (%edx);jg - <jpeg_write_raw_data+>;jmp  <jpeg_write_raw_data+>;movl $, %ecx;movl %esi, %edx": 1,
                "jmp  <jpeg_write_raw_data+>;movl $, %ecx;movl %esi, %edx;movl (%ebp), %eax;calll - <jpeg_write_raw_data+>": 1,
                "addl $, %esi;movl $, %ebx;jmp - <jpeg_write_raw_data+>;movl $, %ecx;movl %ebx, %edx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%edi), %ecx;movl %ecx, %eax;movl %edx, %ebx": 1,
                "movl %eax, -(%ebp);jmp  <jpeg_write_raw_data+>;movl %eax, -(%ebp);testl %eax, %eax;jle  <jpeg_write_raw_data+>": 1,
                "leal (%ebx,%ebx,), %esi;movl -(%ebp), %eax;movl -(%ebp), %edx;addl (%edx,%eax,), %esi;cmpl -(%ebp), %ebx": 1,
                "movl %esi, %edx;movl %edi, %eax;calll - <jpeg_write_raw_data+>;addl $, %ebx;movl -(%ebp), %ecx": 1,
                "addl $, %ebx;movl -(%ebp), %ecx;movl (%ecx,%ebx,), %eax;movl -(%ebp), %edx;movswl (%edx,%eax,), %eax": 1,
                "movl -(%ebp), %edx;movswl (%edx,%eax,), %eax;testl %eax, %eax;js  <jpeg_write_raw_data+>;movl (%edi), %ecx": 1,
                "js  <jpeg_write_raw_data+>;movl (%edi), %ecx;sarl %cl, %eax;testl %eax, %eax;je  <jpeg_write_raw_data+>": 1,
                "movl -(%ebp), %eax;addl (%eax,%ecx,), %edx;movl $, %ecx;movl %edi, %eax;calll - <jpeg_write_raw_data+>": 1,
                "movl %ecx, -(%ebp);cmpl $, (%esi);jle  <jpeg_write_raw_data+>;movl $, %ebx;movl (%edi,%ebx,), %eax": 1,
                "subl $, %eax;jne - <jpeg_write_raw_data+>;movl %eax, -(%ebp);jmp  <jpeg_write_raw_data+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%esi), %ebx;subl $, %ebx;cmpl %ebx, -(%ebp);jle  <jpeg_write_raw_data+>": 1,
                "leal (%ebx,%ebx,), %eax;movl -(%ebp), %edx;movl -(%ebp), %ecx;addl (%ecx,%edx,), %eax;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;je  <jpeg_write_raw_data+>;movl %edi, -(%ebp);movl %eax, %edi;movl -(%ebp), %edx": 2,
                "sarl %edx;movl %edx, -(%ebp);je  <jpeg_write_raw_data+>;movl $, %ecx;movl -(%ebp), %edx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;movl $, %ecx;movl %edi, %edx;movl %esi, %eax": 1,
                "movl $, %ecx;movl %esi, %eax;calll - <jpeg_write_raw_data+>;jmp  <jpeg_write_raw_data+>;movl $, %ecx": 1,
                "cmpl $, (%edi);jle  <jpeg_write_raw_data+>;movl $, -(%ebp);movl -(%ebp), %edx;movl (%edi,%edx,), %esi": 1,
                "movl %edx, -(%ebp);jne  <jpeg_write_raw_data+>;movl $, %ecx;movl %ebx, %edx;movl %edi, %eax": 1,
                "movl %edi, %eax;calll - <jpeg_write_raw_data+>;movl -(%ebp), %ecx;movl $, (%ecx,%esi,);jmp  <jpeg_write_raw_data+>": 1,
                "movl %ebx, %edx;movl %edi, %eax;calll - <jpeg_write_raw_data+>;cmpl $, -(%ebp);jle  <jpeg_write_raw_data+>": 1,
                "movl %edi, %eax;calll - <jpeg_write_raw_data+>;cmpl $, -(%ebp);jle  <jpeg_write_raw_data+>;leal (%ebx), %edx": 1,
                "subl $, %edx;movl %edx, -(%ebp);je  <jpeg_write_raw_data+>;movl $, %ecx;movl %ebx, %edx": 1,
                "movl -(%ebp), %eax;sarl %eax;movl %eax, -(%ebp);je  <jpeg_write_raw_data+>;movl %esi, -(%ebp)": 1,
                "sarl %eax;movl %eax, -(%ebp);je  <jpeg_write_raw_data+>;movl %esi, -(%ebp);movl %eax, %esi": 1,
                "movl $, %ecx;movl %ebx, %edx;movl %edi, %eax;calll - <jpeg_write_raw_data+>;movl -(%ebp), %edx": 1,
                "sarl %eax;cmpl %eax, -(%ebp);jge  <jpeg_write_raw_data+>;movl -(%ebp), %ecx;movl $, (%ecx,%esi,)": 1,
                "addl $, %ebx;movl -(%ebp), %esi;sarl %esi;je  <jpeg_write_raw_data+>;testl %esi, -(%ebp)": 1,
                "movl $, (%eax);movl $, %edx;movl $, (%eax,%edx,);movl $, (%eax,%edx,);addl $, %edx": 3,
                "movl $, %edx;movl $, (%eax,%edx,);movl $, (%eax,%edx,);addl $, %edx;cmpl $, %edx": 3,
                "movl $, (%eax,%edx,);addl $, %edx;cmpl $, %edx;jne - <jinit_arith_encoder+>;movb $, (%eax)": 1,
                "jne - <jinit_arith_encoder+>;movb $, (%eax);addl $, %esp;popl %ebx;popl %ebp": 1,
                "nop;pushl %ebp;movl %esp, %ebp;movl (%eax), %edx;cmpl $, (%eax)": 2,
                "movl (%eax), %eax;movl %eax, (%edx);movl $, (%edx);movl $, (%edx);popl %ebp": 3,
                "jne  <jinit_arith_encoder+>;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax;movl %ebx, (%esp)": 2,
                "movl %eax, %esi;movl (%esi,%ebx,), %eax;movl (%eax), %edx;movl (%esi), %ecx;movl $, (%esp)": 3,
                "jg - <jinit_arith_encoder+>;movl (%edi), %edx;movl %edx, -(%ebp);cmpl (%edi), %edx;jge  <jinit_arith_encoder+>": 1,
                "movl (%eax,%ecx,), %ebx;movl (%ebx), %eax;cmpl $, (%ebx);jle  <jinit_arith_encoder+>;shll $, %eax": 1,
                "movl (%ebp), %eax;cmpl %edx, (%eax);jg - <jinit_arith_encoder+>;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "cmpl %edx, (%eax);jg - <jinit_arith_encoder+>;movl (%ebp), %ecx;movl (%ecx), %eax;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %ecx, (%esp);calll *(%eax);testb %al, %al": 2,
                "movl -(%ebp), %eax;movl %eax, (%edi);movl $, %eax;jmp  <jinit_arith_encoder+>;addl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl (%ebp), %eax;cmpl %edx, (%eax);jbe  <jinit_arith_encoder+>;movl $, -(%ebp)": 1,
                "jle  <jinit_arith_encoder+>;movl $, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %eax;movl -(%ebp), %ebx": 1,
                "movl (%ebx), %edx;movl $, (%esp);movl %eax, (%esp);movl -(%ebp), %ebx;imull (%ebx), %eax": 1,
                "movl (%ebx,%ecx,), %eax;movl %eax, (%esp);movl (%ebp), %ebx;movl %ebx, (%esp);calll *(%edx)": 1,
                "cmpl (%ebx), %eax;jbe  <jinit_arith_encoder+>;movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "jle  <jinit_arith_encoder+>;subl %edx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl -(%ebp), %ebx;movl (%eax,%ebx,), %eax;movl %eax, -(%ebp);cmpl $, -(%ebp);jle  <jinit_arith_encoder+>": 1,
                "movl %esi, (%esp);movl $, (%esp);movl %ebx, (%esp);calll  <__mingw_get_msvcrt_handle+>;movzwl -(%ebx), %edx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ebx;cmpl %eax, (%ebx);jne  <jinit_arith_encoder+>;movl -(%ebp), %ecx": 1,
                "calll  <__mingw_get_msvcrt_handle+>;cmpl $, -(%ebp);je  <jinit_arith_encoder+>;addl -(%ebp), %edi;movl $, %ecx": 1,
                "movl %ebx, (%esp);calll - <jinit_arith_encoder+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %edi;movl (%eax), %edx;subl $, %edx": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;movl (%eax), %edx;subl $, %edx;movl %edx, -(%ebp)": 1,
                "movl (%eax), %ecx;subl $, %ecx;movl %ecx, -(%ebp);movl (%edi), %ebx;movl %ebx, -(%ebp)": 1,
                "imull (%ebx), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax;imull (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "cmpl (%edi), %edx;ja  <jinit_arith_encoder+>;movl -(%ebp), %eax;addl -(%ebp), %eax;cmpl (%ebx), %eax": 1,
                "subl -(%ebp), %eax;shll $, %eax;movl -(%ebp), %ecx;leal (%ecx,%esi), %edx;movl (%edi,%edx,), %edx": 1,
                "movl -(%ebp), %eax;cmpl (%ebx), %eax;jge  <jinit_arith_encoder+>;leal (%edi,%esi,), %edx;movl %esi, -(%ebp)": 1,
                "movzwl (%ecx), %ecx;movl (%edx,%eax,), %esi;movw %cx, (%esi);addl $, %eax;cmpl %eax, (%ebx)": 1,
                "jb  <jinit_arith_encoder+>;movl $, -(%ebp);movl $, %esi;movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "movl $, (%edi);addl $, -(%ebp);movl -(%ebp), %ebx;cmpl %ebx, (%edi);jg - <jinit_arith_encoder+>": 1,
                "addl $, -(%ebp);movl -(%ebp), %ebx;cmpl %ebx, (%edi);jg - <jinit_arith_encoder+>;addl $, (%edi)": 1,
                "testb %bl, %bl;je  <jinit_c_coef_controller+>;movl (%esi), %ebx;cmpl $, (%esi);jle  <jinit_c_coef_controller+>": 1,
                "movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll  <jround_up>;movl -(%ebp), %edx": 2,
                "movl -(%ebp), %edx;movl %eax, (%edx,%edi,);addl $, %edi;addl $, %ebx;cmpl %edi, (%esi)": 3,
                "cmpl %edi, (%esi);jg - <jinit_c_coef_controller+>;jmp  <jinit_c_coef_controller+>;movl (%esi), %eax;movl $, (%esp)": 1,
                "movl $, (%esp);movl %eax, (%esp);calll *(%edx);movl %eax, (%ebx);movl $, %ebx": 1,
                "movl %eax, (%esp);calll *(%edx);movl %eax, (%ebx);movl $, %ebx;movl $, %ecx": 1,
                "movl %ebx, (%eax);imull $, %edx, %esi;movl %esi, (%eax);imull $, %edx, %esi;movl %esi, (%eax)": 1,
                "addl $, %ebx;cmpl $, %edx;jne - <jinit_c_coef_controller+>;addl $, %esp;popl %ebx": 1,
                "movl (%ecx), %ecx;movl (%esi), %esi;movl %esi, -(%ebp);leal (,%eax,), %esi;negl %eax": 1,
                "movl %eax, -(%ebp);movl %ebx, %eax;jmp  <jinit_c_coef_controller+>;movl -(%ebp), %ebx;movl (%ebx,%esi), %edi": 1,
                "movl (%ebx,%esi), %ebx;movl %ebx, -(%ebp);movl (%edx), %ebx;movl (%ebx,%esi), %ebx;movl %ebx, -(%ebp)": 2,
                "movl (%edx), %ebx;movl (%ebx,%esi), %ebx;movl %ebx, -(%ebp);cmpl $, -(%ebp);je  <jinit_c_coef_controller+>": 1,
                "movl $, %ebx;movl %esi, -(%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);movl %ebx, %eax": 1,
                "movl %esi, -(%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);movl %ebx, %eax;movzbl (%edi), %ebx": 1,
                "movl %eax, -(%ebp);movl %ebx, %eax;movzbl (%edi), %ebx;movzbl (%edi), %esi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %esi;movb %dl, (%esi,%eax);movl (%ecx,%ebx,), %ebx;movl -(%ebp), %edx;addl (%ecx,%edx,), %ebx": 1,
                "cmpl -(%ebp), %eax;jne - <jinit_c_coef_controller+>;movl -(%ebp), %esi;movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ebx;movl (%ebx,%eax), %edx;movl (%esi), %ebx;movl (%ebx,%eax), %ebx;testl %edi, %edi": 1,
                "addl $, %edx;addl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ebx;cmpl %ebx, %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;movl (%ebp), %esi;movl (%edx), %ebx;movl (%ebx), %ebx": 1,
                "addl (%ebp), %eax;movl %eax, -(%ebp);jmp  <jinit_c_coef_controller+>;movl -(%ebp), %eax;movl (%eax,%edx), %edi": 1,
                "movl -(%ebp), %eax;addl (%ebx,%eax,), %ecx;movl -(%ebp), %esi;addl (%ebx,%esi,), %ecx;sarl $, %ecx": 1,
                "movl (%ebp), %edx;movl (%ebp), %ebx;movl (%ebx), %edi;leal (,%eax,), %esi;negl %eax": 2,
                "movl %edx, -(%ebp);movl $, %edx;movzbl (%edi), %ecx;movzbl (%edi), %eax;movb %al, -(%ebp)": 1,
                "addl $-, %ebx;subl %ecx, %ebx;movl -(%ebp), %eax;movb %bl, (%eax,%edx);addl $, %edi": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %esi;movl (%ebp), %ecx": 2,
                "addl (%ebp), %ecx;movl %ecx, -(%ebp);jmp  <jinit_c_coef_controller+>;movl -(%ebp), %ebx;movl (%ebx,%eax), %ecx": 1,
                "movl (%ebx,%eax), %ecx;movl (%esi), %ebx;movl (%ebx,%eax), %ebx;testl %edi, %edi;je  <jinit_c_coef_controller+>": 1,
                "addl -(%ebp), %ecx;addl $, %ebx;cmpl -(%ebp), %ebx;jne - <jinit_c_coef_controller+>;movl -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);movl %eax, %edi;movl $, %eax;movzbl (%edx), %ebx": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;subl $, %eax": 2,
                "je  <jinit_c_coef_controller+>;movl $, %esi;testl %ecx, %ecx;jg - <jinit_c_coef_controller+>;jmp - <jinit_c_coef_controller+>": 1,
                "movl %eax, (%ebx);movl $, (%eax);cmpl $, (%ebx);ja  <jinit_color_converter+>;movl (%ebx), %eax": 1,
                "movl $, (%eax);cmpl $, (%ebx);ja  <jinit_color_converter+>;movl (%ebx), %eax;jmpl *(,%eax,)": 1,
                "calll *(%eax);movl (%ebx), %eax;cmpl $, %eax;ja  <jinit_color_converter+>;jmpl *(,%eax,)": 1,
                "jne  <jinit_color_converter+>;movl (%ebx), %eax;testl %eax, %eax;je  <jinit_color_converter+>;cmpl $, %eax": 1,
                "jne  <jinit_color_converter+>;movl $, (%esi);movl $, (%esi);jmp  <jinit_color_converter+>;cmpl $, %eax": 2,
                "movl $, (%esi);addl $, %esp;popl %ebx;popl %esi;popl %ebp": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %eax;movl (%ebp), %ecx": 1,
                "jne - <jinit_color_converter+>;addl $, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx;addl %ecx, (%ebp)": 1,
                "fadd %st();fldcw -(%ebp);fistpl -(%ebp);fldcw -(%ebp);movl -(%ebp), %edx": 1,
                "jne  <jinit_color_converter+>;jmp  <jinit_color_converter+>;cmpl $, %eax;je  <jinit_color_converter+>;cmpl $, %eax": 8,
                "movl $, -(%ebp);jmp  <jinit_color_converter+>;movl -(%ebp), %edx;movl $, (%edx);movl $, -(%ebp)": 11,
                "jmp  <jinit_color_converter+>;movl -(%ebp), %edx;movl $, (%edx);movl $, -(%ebp);jmp  <jinit_color_converter+>": 11,
                "movl -(%ebp), %ecx;movl $, (%ecx);movl $, -(%ebp);jmp  <jinit_color_converter+>;movl (%edi), %eax": 2,
                "cmpl $, %eax;je  <jinit_color_converter+>;cmpl $, %eax;jb  <jinit_color_converter+>;cmpl $, %eax": 1,
                "calll *(%eax);jmp  <jinit_color_converter+>;movl (%edi), %eax;movl $, (%eax);movl (%edi), %eax": 1,
                "addl $, %eax;cmpl $, %eax;jne - <jinit_color_converter+>;movl -(%ebp), %edx;movl $, (%edx)": 2,
                "movl -(%ebp), %ecx;cmpl $, (%ecx,%ebx,);jne  <jinit_color_converter+>;movl (%edi), %eax;movl $, (%esp)": 2,
                "movl %eax, (%edx,%ebx,);movl -(%ebp), %ecx;movl (%ecx,%ebx,), %ebx;movl $, %eax;flds ": 1,
                "je  <jinit_color_converter+>;fldl (%edi);movl $, %ecx;jmp - <jinit_color_converter+>;fstp %st()": 1,
                "movl $, (%eax);movl $, (%eax);addl $, %esp;popl %ebx;popl %ebp": 2,
                "nop;nop;pushl %ebp;movl %esp, %ebp;subl $, %esp": 5,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp;retl": 13,
                "movl (%ecx,%edx,), %ecx;movl %ecx, -(%ebp);movl (%ebp), %edx;movl (%edx,%ecx,), %eax;movl (%eax), %edx": 1,
                "cmpl $, -(%ebp);jle  <jinit_forward_dct+>;movl $, %edi;movl $, %esi;movl -(%ebp), %ecx": 1,
                "movl (%edx), %ecx;movl %edi, %edx;subl $, %edx;cmpl $, %edx;jg - <jinit_forward_dct+>": 1,
                "movl -(%ebp), %ecx;movl %edx, (%ecx);movl %eax, %edx;sarl $, %edx;xorl %edx, %eax": 1,
                "sarl $, %edx;xorl %edx, %eax;subl %edx, %eax;sarl %eax;je  <jinit_forward_dct+>": 1,
                "movswl (%eax), %eax;movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %eax, (%ecx,%edx,);addl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %ecx, %ebx;movl (%ebp), %esi;movb %dl, -(%ebp);cmpl $, %ecx": 1,
                "movl $, %edi;movl -(%ebp), %eax;movzbl (%eax,%ebx), %eax;movb %al, -(%ebp);movzbl %al, %esi": 1,
                "addl $, %eax;movl %eax, %edi;movl $, %edx;testb $, %al;je  <jinit_forward_dct+>": 1,
                "rep  stosl %eax, %es:(%edi);testb $, %dl;je  <jinit_forward_dct+>;movw $, (%edi);addl $, %edi": 4,
                "je  <jinit_forward_dct+>;movl -(%ebp), %ecx;movl (%ecx), %eax;movl $, (%eax);movl (%ecx), %eax": 1,
                "movl (%ecx), %eax;movl %ecx, (%esp);calll *(%eax);movl -(%ebp,%edi,), %eax;movl -(%ebp), %edx": 1,
                "testb %al, %al;je  <jinit_forward_dct+>;movl $, (%edx);cmpb $, (%ebx);jne  <jinit_forward_dct+>": 1,
                "movl -(%ebp), %eax;movl $, (%eax);cmpb $, (%ebx);je  <jinit_forward_dct+>;movl -(%ebp), %edx": 1,
                "movl $, (%edx);jmp  <jinit_forward_dct+>;movl -(%ebp), %edx;movl $, (%edx);jmp  <jinit_forward_dct+>": 1,
                "jne  <jinit_forward_dct+>;movl (%ebx), %eax;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 3,
                "movl %esi, -(%ebp);movl (%ebx,%esi,), %eax;movl %eax, -(%ebp);cmpl $, (%ebx);jne  <jinit_forward_dct+>": 1,
                "movl %eax, -(%ebp);cmpl $, (%ebx);jne  <jinit_forward_dct+>;cmpl $, (%ebx);jne  <jinit_forward_dct+>": 1,
                "movl %ebx, (%esp);calll *(%eax);movl -(%ebp), %edx;cmpl $, (%edx,%edi,);jne  <jinit_forward_dct+>": 2,
                "addl $, %edi;movb $, %dl;testl $, %edi;je  <jinit_forward_dct+>;movw $, (%edi)": 2,
                "testb $, %dl;je  <jinit_forward_dct+>;movb $, (%edi);jmp  <jinit_forward_dct+>;movl -(%ebp), %edx": 2,
                "calll - <jinit_forward_dct+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movl $, (%edx,%eax,);cmpl $, (%ebx)": 1,
                "jg - <jinit_forward_dct+>;movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl (%ebx), %eax": 1,
                "movl $, (%edx);addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "cmpl %edx, %eax;jne - <jinit_forward_dct+>;movl $, (%esi);movl %ebx, -(%ebp);movl $, %ecx": 1,
                "movl $, (%eax);addl $, -(%ebp,%ecx,);movl -(%ebp,%ecx,), %eax;testl %eax, %eax;jns  <jinit_forward_dct+>": 1,
                "subl $, %eax;cmpb $, -(%ebp,%eax);je - <jinit_forward_dct+>;subl $, %ecx;movb %cl, (%edx)": 1,
                "subl $, %ecx;movb %cl, (%edx);addb $, -(%edx);addb $, -(%ebp,%eax);subb $, -(%ebp,%eax)": 1,
                "addb $, -(%ebp,%eax);subb $, -(%ebp,%eax);movzbl (%edx), %ecx;testb %cl, %cl;jne - <jinit_forward_dct+>": 1,
                "movzbl (%edx), %ecx;testb %cl, %cl;jne - <jinit_forward_dct+>;subl $, %esi;cmpl -(%ebp), %esi": 1,
                "testb %cl, %cl;jne - <jinit_forward_dct+>;jmp - <jinit_forward_dct+>;movzbl -(%ebp), %edx;testb %dl, %dl": 1,
                "addl $, %eax;cmpl $, %eax;jne - <jinit_forward_dct+>;addl $, %edx;cmpl $, %edx": 1,
                "je  <jinit_forward_dct+>;movl -(%ebp), %edx;movzbl (%edx), %ebx;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "andl $, %ebx;addl $, %eax;movl %eax, -(%ebp);movl $, %ecx;subl -(%ebp), %ecx": 1,
                "sarl $, %edi;andl $, %edi;movl (%esi), %eax;movl %edi, %edx;movb %dl, (%eax)": 6,
                "andl $, %edi;movl (%esi), %eax;movl %edi, %edx;movb %dl, (%eax);addl $, %eax": 6,
                "subl $, -(%ebp);cmpl $, -(%ebp);jg - <jinit_forward_dct+>;movl -(%ebp), %eax;subl $, %eax": 2,
                "shll %cl, %eax;orl (%ebx), %eax;movl %eax, -(%ebp);cmpl $, %esi;jle  <jinit_forward_dct+>": 2,
                "movl %eax, -(%ebp);cmpl $, %esi;jle  <jinit_forward_dct+>;movl -(%ebp), %edi;sarl $, %edi": 2,
                "movl %ebx, %eax;calll - <jinit_forward_dct+>;cmpl $, %edi;jne  <jinit_forward_dct+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movb $, (%eax);addl $, %eax;movl %eax, (%ebx);movl (%ebx), %eax": 2,
                "jne  <jinit_forward_dct+>;movl %ebx, %eax;calll - <jinit_forward_dct+>;shll $, -(%ebp);subl $, %esi": 1,
                "movl %ebx, %eax;calll - <jinit_forward_dct+>;testb %al, %al;je  <jinit_forward_dct+>;cmpl $, %edi": 1,
                "calll - <jinit_forward_dct+>;testb %al, %al;je  <jinit_forward_dct+>;cmpl $, %edi;jne  <jinit_forward_dct+>": 4,
                "je  <jinit_forward_dct+>;cmpl $, %edi;jne  <jinit_forward_dct+>;movl (%ebx), %eax;movb $, (%eax)": 1,
                "movl $, %eax;jmp  <jinit_forward_dct+>;movl $, %eax;addl $, %esp;popl %ebx": 2,
                "cmpl $, %ebx;jle  <jinit_forward_dct+>;movl (%edi), %eax;movl (%eax), %eax;movl $, (%eax)": 1,
                "movl (%edx,%eax,), %edx;movl %edx, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);testl %esi, %esi": 1,
                "movl (%edi), %eax;subl $, %eax;movl %eax, (%edi);testl %eax, %eax;jne  <jinit_forward_dct+>": 4,
                "calll - <jinit_forward_dct+>;shll $, -(%ebp);subl $, %ebx;cmpl $, %ebx;jg - <jinit_forward_dct+>": 3,
                "movl (%edi), %edx;movl (%edi), %eax;cmpb $, (%edi);jne  <jinit_forward_dct+>;movl $, %esi": 1,
                "movl %ebx, -(%ebp);cmpl $, %eax;jle  <jinit_forward_dct+>;movl %eax, %esi;movl -(%ebp), %ebx": 1,
                "jne  <jinit_forward_dct+>;movl %edi, %eax;calll - <jinit_forward_dct+>;shll $, -(%ebp);subl $, %esi": 1,
                "movl -(%ebp), %edx;movl %edx, (%edi);movl $, (%edi);movl (%edi), %ecx;movl (%edi), %edx": 1,
                "pushl %esi;pushl %ebx;movl %eax, %ebx;movl %edx, %esi;calll - <jinit_forward_dct+>": 1,
                "movb $-, (%eax);addl $, %eax;movl %eax, (%ebx);movl (%ebx), %eax;subl $, %eax": 1,
                "jle  <jinit_forward_dct+>;movl $, -(%ebp);movl -(%ebp), %ebx;movl (%ebp), %eax;movl (%eax,%ebx,), %edx": 1,
                "movl %edx, (%esp);calll *(%eax);jmp  <jinit_forward_dct+>;movl $, %ebx;movl (%edi), %eax": 1,
                "jg - <jinit_forward_dct+>;movl -(%ebp), %ebx;andl $, -(%ebp);movl -(%ebp), %ecx;movl %ecx, (%esi)": 1,
                "addl $, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ebx;cmpl %eax, (%ebx);jg - <jinit_forward_dct+>": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %esi": 5,
                "calll - <jinit_forward_dct+>;movl (%ebp), %ecx;cmpl $, (%ecx);jle  <jinit_forward_dct+>;movl $, -(%ebp)": 1,
                "movzwl (%eax), %eax;movl (%esi), %edx;movl %edx, -(%ebp);cmpb $, (%esi);jne  <jinit_forward_dct+>": 1,
                "addl $, %ebx;movl $, %ecx;subl %edx, %ecx;shll %cl, %eax;orl (%esi), %eax": 1,
                "movl %eax, -(%ebp);cmpl $, %ebx;jle  <jinit_forward_dct+>;movl -(%ebp), %edi;sarl $, %edi": 1,
                "movl -(%ebp), %edx;movl (%ebp), %eax;cmpl %edx, (%eax);jg - <jinit_forward_dct+>;movl (%ebp), %ecx": 1,
                "calll - <jinit_forward_dct+>;movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl (%ebp), %eax": 2,
                "cmpl %ecx, -(%ebp);jl  <jinit_forward_dct+>;movl $, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;cmpb $, (%esi);je  <jinit_forward_dct+>;movl (%esi,%eax,), %eax": 1,
                "andl %eax, %edi;addl -(%ebp), %ebx;movl %ebx, -(%ebp);movl $, %ecx;subl %ebx, %ecx": 2,
                "orl (%esi), %ebx;cmpl $, -(%ebp);jle  <jinit_forward_dct+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "movl (%esi), %edx;cmpb $, (%esi);je  <jinit_forward_dct+>;movl (%esi,%edx,), %edx;addl $, (%edx,%eax,)": 2,
                "movl (%esi,%edx,), %edx;addl $, (%edx,%eax,);jmp  <jinit_forward_dct+>;movl (%esi,%edx,), %edx;movsbl (%edx,%eax), %edi": 1,
                "shll %cl, %edi;orl (%esi), %edi;cmpl $, -(%ebp);jle  <jinit_forward_dct+>;movl -(%ebp), %eax": 2,
                "andl -(%ebp), %eax;addl %ebx, %edi;movl %edi, -(%ebp);movl $, %ecx;subl %edi, %ecx": 2,
                "cmpl $, -(%ebp);jle  <jinit_forward_dct+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl %edi, %ebx": 2,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movswl (%edi,%edx,), %edx;movl %edx, %ebx;sarl $, %ebx;xorl %ebx, %edx;subl %ebx, %edx": 1,
                "jmp  <jinit_forward_dct+>;addl $, -(%ebp);jmp  <jinit_forward_dct+>;movl %esi, %eax;calll - <jinit_forward_dct+>": 1,
                "movl -(%ebp), %eax;andl $, %eax;movl -(%ebp), %edx;movl -(%ebp), %ecx;movb %al, (%edx,%ecx)": 1,
                "movl (%esi,%edx,), %edx;addl $, (%edx,%eax,);jmp  <jinit_forward_dct+>;movl (%esi,%edx,), %edx;movsbl (%edx,%eax), %ebx": 1,
                "movsbl (%edx,%eax), %ebx;movl (%edx,%eax,), %edx;movl %edx, -(%ebp);movl (%esi), %edi;testl %ebx, %ebx": 1,
                "movl %edx, -(%ebp);movl (%esi), %edi;testl %ebx, %ebx;jne  <jinit_forward_dct+>;movl (%esi), %eax": 1,
                "movl %edx, (%esi);movl -(%ebp), %ecx;movl -(%ebp), %edx;movl (%edx,%ecx,), %eax;movl -(%ebp), %ecx": 1,
                "cmpl %ecx, -(%ebp);jge - <jinit_forward_dct+>;cmpl $, -(%ebp);jne  <jinit_forward_dct+>;cmpl $, -(%ebp)": 1,
                "calll - <jinit_forward_dct+>;movl %ebx, %eax;calll - <jinit_forward_dct+>;movl (%esi), %eax;movl (%ebx), %edx": 1,
                "movl (%ebx), %edx;movl %edx, (%eax);jmp  <jinit_forward_dct+>;movl (%esi), %eax;movl (%eax), %edx": 1,
                "jne  <jinit_forward_dct+>;movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl %esi, (%esp)": 1,
                "cmpb $, (%ebx);je  <jinit_forward_dct+>;calll - <jinit_forward_dct+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "cmpl $, (%ebx);jle  <jinit_forward_dct+>;movl $, %edi;movl (%ebx,%edi,), %esi;cmpl $, (%ebx)": 1,
                "jne  <jinit_forward_dct+>;movl (%esi), %edx;movl %edx, -(%ebp);cmpb $, -(%ebp,%edx);jne  <jinit_forward_dct+>": 1,
                "movl %eax, (%ebx,%edx,);movl -(%ebp), %eax;movl -(%ebp), %edx;movl (%edx,%eax,), %ecx;movl (%ebx,%eax,), %edx": 1,
                "jne  <jinit_forward_dct+>;movl %ebx, (%esp);calll  <jpeg_alloc_huff_table>;movl %eax, (%ebx,%esi,);movl -(%ebp), %edx": 1,
                "movl %ebx, (%esp);calll  <jpeg_alloc_huff_table>;movl %eax, (%ebx,%esi,);movl -(%ebp), %edx;movl (%edx,%esi,), %ecx": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp)": 7,
                "subl $, %eax;movl %eax, -(%ebp);testl %eax, %eax;jne  <jinit_forward_dct+>;leal -(%ebp), %eax": 14,
                "jne  <jinit_forward_dct+>;leal -(%ebp), %eax;calll - <jinit_forward_dct+>;testb %al, %al;je  <jinit_forward_dct+>": 14,
                "cmpl %edx, %eax;jl - <jinit_forward_dct+>;movl (%ebp), %edx;cmpl $, (%edx);jle  <jinit_forward_dct+>": 1,
                "jle  <jinit_forward_dct+>;movl $, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp)": 1,
                "subl $, -(%ebp);testl %eax, %eax;je  <jinit_forward_dct+>;movl $, %ecx;addl $, %ecx": 1,
                "jle  <jinit_forward_dct+>;movl %ebx, %edi;movl %esi, %ebx;sarl $, %ebx;andl $, %ebx": 2,
                "calll - <jinit_forward_dct+>;testb %al, %al;je  <jinit_forward_dct+>;shll $, %esi;subl $, %edi": 2,
                "movl %edi, %ebx;movl %esi, -(%ebp);movl %ebx, -(%ebp);cmpl $, -(%ebp);je  <jinit_forward_dct+>": 1,
                "testb %al, %al;je  <jinit_forward_dct+>;cmpl $, %edi;jne  <jinit_forward_dct+>;movl -(%ebp), %eax": 3,
                "movl (%eax), %esi;movl -(%ebp), %edi;testl %ebx, %ebx;jne  <jinit_forward_dct+>;movl -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);cmpl $, -(%ebp);jne  <jinit_forward_dct+>;movl -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);addl $, -(%ebp);movl -(%ebp), %ecx;cmpl %ecx, -(%ebp)": 1,
                "addl %edi, %esi;movl $, %ecx;subl %esi, %ecx;shll %cl, %ebx;movl %ebx, %edi": 1,
                "movl %eax, %edx;movl $, %ecx;movl $, (%edx);movl $, (%edx);movl $, (%edx)": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl $, (%esp);movl %ebx, (%esp);calll  <jinit_c_master_control>": 1,
                "movl %ebx, (%esp);calll  <jinit_c_master_control>;cmpb $, (%ebx);jne  <jinit_compress_master+>;movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll  <jinit_c_prep_controller>;movl %ebx, (%esp);calll - <jinit_forward_dct>": 1,
                "movl %ebx, (%esp);calll  <jinit_c_prep_controller>;movl %ebx, (%esp);calll - <jinit_forward_dct>;cmpb $, (%ebx)": 1,
                "calll - <jinit_arith_encoder>;jmp  <jinit_compress_master+>;movl %ebx, (%esp);calll - <jinit_huff_encoder>;movl $, %eax": 1,
                "cmpb $, (%ebx);setne %al;movzbl %al, %eax;andl $, %eax;movl %eax, (%esp)": 2,
                "movl (%esi), %ebx;movl (%esi), %eax;cmpl %eax, (%ebx);jae  <jinit_compress_master+>;leal (%ebx), %eax": 1,
                "movl %edi, (%esp);movl %esi, (%esp);calll *(%eax);testb %al, %al;jne  <jinit_compress_master+>": 1,
                "calll *(%eax);jmp  <jinit_c_main_controller+>;movl (%esi), %ebx;cmpl $, (%esi);jle  <jinit_c_main_controller+>": 1,
                "movl $, (%esp);movl %esi, (%esp);calll *(%eax);movl -(%ebp), %edx;movl %eax, (%edx,%edi,)": 3,
                "cmpl %edi, (%esi);jg - <jinit_c_main_controller+>;addl $, %esp;popl %ebx;popl %esi": 2,
                "subl $, %esp;movl %eax, %ebx;movl %edx, -(%ebp);movl (%eax,%edx,), %edi;testl %edi, %edi": 1,
                "movl %edx, -(%ebp);movl (%eax,%edx,), %edi;testl %edi, %edi;jne  <jinit_c_main_controller+>;movl (%eax), %eax": 1,
                "shll $, %edx;addl -(%ebp), %edx;movl %ebx, %eax;calll - <jinit_c_main_controller+>;cmpl $, (%ebx)": 1,
                "movl %ebx, %eax;calll - <jinit_c_main_controller+>;cmpl $, (%ebx);js  <jinit_c_main_controller+>;movl $, %esi": 1,
                "cmpl $, (%ebx);js  <jinit_c_main_controller+>;movl $, %esi;movl %edi, -(%ebp);movl (%ebx), %eax": 1,
                "cmpl $, -(%ebp);je  <jinit_c_main_controller+>;movl %edi, %edx;shrl $, %edx;movl %ebx, %eax": 1,
                "movb $, (%edi);movl -(%ebp), %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl %esi, %eax;calll - <jinit_c_main_controller+>;addl $, %ebx;cmpl $, %ebx;jne - <jinit_c_main_controller+>": 3,
                "calll - <jinit_c_main_controller+>;addl $, %ebx;cmpl %edi, %ebx;jne - <jinit_c_main_controller+>;movl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx": 6,
                "calll - <jinit_c_main_controller+>;movl (%ebx), %edx;movl %ebx, %eax;calll - <jinit_c_main_controller+>;movl $, %edx": 1,
                "calll - <jinit_c_main_controller+>;jmp  <jinit_c_main_controller+>;movl $, %edx;movl %ebx, %eax;calll - <jinit_c_main_controller+>": 5,
                "movl %ebx, %eax;calll - <jinit_c_main_controller+>;addl %eax, -(%ebp);addl $, %edi;addl $, %esi": 1,
                "addl $, %esi;movl (%ebx), %eax;cmpl %edi, %eax;jg - <jinit_c_main_controller+>;jmp  <jinit_c_main_controller+>": 1,
                "jmp  <jinit_c_main_controller+>;movl $, -(%ebp);cmpb $, (%ebx);jne  <jinit_c_main_controller+>;cmpb $, (%ebx)": 1,
                "testl %eax, %eax;jle  <jinit_c_main_controller+>;movl $, %edx;movl $, %esi;movl %ebx, -(%ebp)": 1,
                "movl $, %esi;movl %ebx, -(%ebp);cmpl $, (%ecx);jg  <jinit_c_main_controller+>;cmpl $, (%ecx)": 1,
                "movl %ebx, (%esp);calll *(%eax);movl $, %edx;movl %ebx, %eax;calll - <jinit_c_main_controller+>": 1,
                "je  <jinit_c_main_controller+>;cmpl $, (%ebx);je  <jinit_c_main_controller+>;movl $, %edx;movl %ebx, %eax": 1,
                "movl $, %edx;movl %ebx, %eax;calll - <jinit_c_main_controller+>;movl (%ebx), %eax;imull %eax, %eax": 1,
                "jmp  <jinit_c_main_controller+>;movl $, %edx;cmpb $, (%ebx);je - <jinit_c_main_controller+>;jmp - <jinit_c_main_controller+>": 1,
                "jg  <jinit_c_main_controller+>;jmp  <jinit_c_main_controller+>;movl $, %eax;movb $, -(%ebp,%eax);movb $, -(%ebp,%eax)": 1,
                "jmp  <jinit_c_main_controller+>;movl $, %eax;movb $, -(%ebp,%eax);movb $, -(%ebp,%eax);addl $, %eax": 1,
                "movl (%ebx), %edi;movl (%ebx), %esi;movb $, %al;movl %ecx, -(%ebp);movl (%ebx,%eax,), %edx": 1,
                "jne - <jinit_c_main_controller+>;testl %esi, %esi;je  <jinit_c_main_controller+>;movl $, %edx;movl %ebx, %eax": 1,
                "testl %esi, %esi;je  <jinit_c_main_controller+>;movl $, %edx;movl %ebx, %eax;calll - <jinit_c_main_controller+>": 1,
                "cmpl $, (%ebx);jne  <jinit_c_main_controller+>;movl (%edi), %edx;movl $, %ecx;movl %ebx, %eax": 1,
                "jg - <jinit_c_main_controller+>;movl -(%ebp), %eax;movl (%eax), %eax;cmpl %eax, (%ebx);je  <jinit_c_main_controller+>": 1,
                "movl (%eax), %eax;cmpl %eax, (%ebx);je  <jinit_c_main_controller+>;movl $, %edx;movl %ebx, %eax": 1,
                "calll - <jinit_c_main_controller+>;movl $, %edx;movl %ebx, %eax;calll - <jinit_c_main_controller+>;movl (%ebx), %edx": 1,
                "calll - <jinit_c_main_controller+>;movl (%ebx), %eax;leal (%eax,%eax), %edx;movl %ebx, %eax;calll - <jinit_c_main_controller+>": 1,
                "jne - <jinit_c_main_controller+>;movl $, %edx;movl %esi, %eax;calll - <jinit_c_main_controller+>;addl $, %esp": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %edi;cmpl $, (%eax);jg  <jinit_marker_writer+>": 1,
                "je  <jinit_marker_writer+>;movb $, (%edi);movl (%edi), %esi;movl $, %ebx;leal -(%ebp), %ecx": 1,
                "testl %esi, %esi;jg  <jinit_marker_writer+>;jmp  <jinit_marker_writer+>;movl $, (%eax);addl $, %eax": 1,
                "addl $, %ecx;addl $, %ebx;cmpl %esi, %ebx;jge  <jinit_marker_writer+>;leal (%ecx), %edx": 1,
                "movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl %edx, %eax;subl $, %eax": 1,
                "movl $, (%eax);movl (%edi), %eax;movl %edx, (%eax);movl (%edi), %eax;movl $, (%eax)": 1,
                "testl %ebx, %ebx;js  <jinit_marker_writer+>;cmpl (%edi), %ebx;jl  <jinit_marker_writer+>;movl (%edi), %eax": 1,
                "movl (%edi), %eax;movl %edi, (%esp);calll *(%eax);testl %esi, %esi;jle  <jinit_marker_writer+>": 1,
                "testl %esi, %esi;jle  <jinit_marker_writer+>;movl -(%ebp), %eax;cmpl (%eax), %ebx;jg  <jinit_marker_writer+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx), %edx": 2,
                "movl $, -(%ebp);movl -(%ebp), %eax;subl $, %eax;movl %eax, -(%ebp);jmp  <jinit_marker_writer+>": 1,
                "movl %edx, (%eax);movl (%edi), %eax;movl %edi, (%esp);calll *(%eax);jmp  <jinit_marker_writer+>": 1,
                "jne  <jinit_marker_writer+>;movl -(%ebp), %edx;orl -(%ebp), %edx;je  <jinit_marker_writer+>;movl (%edi), %eax": 1,
                "jge - <jinit_marker_writer+>;cmpb $, (%edi);jne  <jinit_marker_writer+>;movl $, %ebx;cmpl $, (%edi)": 1,
                "movl %edi, (%esp);calll *(%eax);addl $, %ebx;cmpl %ebx, (%edi);jg - <jinit_marker_writer+>": 2,
                "movl %eax, %ebx;movl (%eax), %eax;testl %eax, %eax;je  <jinit_marker_writer+>;movl (%ebx), %edx": 1,
                "movl %ebx, %eax;leal (%ebx,%ecx,), %ecx;movl %edx, (%eax);addl $, %edx;addl $, %eax": 1,
                "leal (%ebx,%ecx,), %ecx;movl %edx, (%eax);addl $, %edx;addl $, %eax;cmpl %ecx, %eax": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %esi;movl (%esi), %ebx": 1,
                "movl (%eax), %eax;cmpl $, %eax;jne  <jinit_marker_writer+>;movl (%edi), %ecx;movl (%ecx), %eax": 1,
                "movl %eax, (%ecx);movl $, (%ecx);movl (%ecx), %ebx;movl (%ecx), %eax;movl $, %edx": 1,
                "imull %ebx, %eax;movl %eax, -(%ebp);movl %eax, (%ecx);movl %ebx, %eax;imull (%ecx), %eax": 1,
                "imull (%ecx), %eax;movl %eax, (%ecx);movl (%ecx), %eax;movl $, %edx;divl %ebx": 1,
                "movl $, %edx;divl -(%ebp);testl %edx, %edx;je  <jinit_marker_writer+>;movl %edx, -(%ebp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll *(%eax);movl (%ebx), %eax;movl %ebx, (%esp)": 1,
                "movl %ebx, (%esp);calll *%edx;movl (%ebx), %eax;movl $, (%esp);movl %ebx, (%esp)": 2,
                "sete (%esi);jmp  <jinit_marker_writer+>;movl %ebx, %eax;calll - <jinit_marker_writer+>;movl %ebx, %eax": 1,
                "calll *(%eax);cmpl $, (%esi);jne  <jinit_marker_writer+>;movl (%ebx), %eax;movl %ebx, (%esp)": 1,
                "leal (%eax,%eax), %esi;cmpl %esi, %edx;ja  <jpeg_calc_jpeg_dimensions+>;movl $, (%esp);imull (%ebx), %ecx": 1,
                "movl %ecx, (%esp);calll  <jdiv_round_up>;movl %eax, (%ebx);movl $, (%esp);movl (%ebx), %eax": 15,
                "movl $, (%ebx);jmp  <jpeg_calc_jpeg_dimensions+>;leal (,%eax,), %esi;subl %eax, %esi;cmpl %esi, %edx": 1,
                "leal (%eax,%eax,), %esi;shll $, %esi;cmpl %esi, %edx;ja  <jpeg_calc_jpeg_dimensions+>;movl $, (%esp)": 1,
                "imull $, %eax, %esi;cmpl %esi, %edx;ja  <jpeg_calc_jpeg_dimensions+>;movl $, (%esp);imull (%ebx), %ecx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movzbl (%ebp), %eax": 2,
                "movl %eax, -(%ebp);movl %eax, (%esi);movl $, (%eax);movl $, (%eax);movl $, (%eax)": 2,
                "movl (%esi), %eax;cmpl $, %eax;ja  <jinit_c_master_control+>;jmpl *(,%eax,);movl $, (%esi)": 1,
                "subl $, %eax;jmp  <jinit_c_master_control+>;movl $, %eax;movl %eax, (%esi);cmpl $, (%esi)": 1,
                "je  <jinit_c_master_control+>;cmpl $, (%esi);jle  <jinit_c_master_control+>;cmpl $, (%esi);jg  <jinit_c_master_control+>": 1,
                "jg  <jinit_c_master_control+>;movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl %esi, (%esp)": 1,
                "calll *(%eax);cmpl $, (%esi);je  <jinit_c_master_control+>;movl (%esi), %eax;movl $, (%eax)": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jle  <jinit_c_master_control+>;cmpl $, %eax;jle  <jinit_c_master_control+>": 1,
                "testl %eax, %eax;jle  <jinit_c_master_control+>;cmpl $, %eax;jle  <jinit_c_master_control+>;movl (%esi), %eax": 1,
                "movl %edi, -(%ebp);jmp  <jinit_c_master_control+>;addl %ecx, %ecx;movl -(%ebp), %edi;imull %ecx, %edi": 1,
                "movl -(%ebp), %eax;addl %eax, %eax;cmpl %edx, %eax;jge  <jinit_c_master_control+>;movl %eax, (%edi)": 1,
                "movl %eax, (%esp);calll  <jdiv_round_up>;movl %eax, (%edi);movl (%esi), %eax;imull (%esi), %eax": 3,
                "movl (%edi), %eax;imull (%edi), %eax;imull (%esi), %eax;movl %eax, (%esp);calll  <jdiv_round_up>": 2,
                "imull (%esi), %eax;movl %eax, (%esp);calll  <jdiv_round_up>;movl %eax, (%edi);movb $, (%edi)": 1,
                "movb $, (%edi);addl $, -(%ebp);addl $, %edi;movl -(%ebp), %eax;cmpl (%esi), %eax": 1,
                "addl $, %edi;movl -(%ebp), %eax;cmpl (%esi), %eax;jl - <jinit_c_master_control+>;movl (%esi), %eax": 1,
                "movl %eax, (%esi);cmpl $, (%esi);je  <jinit_c_master_control+>;movl %esi, %eax;calll - <jinit_marker_writer+>": 1,
                "jg  <jinit_c_master_control+>;movl (%esi), %edx;movl %edx, -(%ebp);cmpl $, (%esi);jle  <jinit_c_master_control+>": 1,
                "movl $, %edx;movl $, %ecx;jmp  <jinit_c_master_control+>;cmpl %edx, %ecx;je  <jinit_c_master_control+>": 1,
                "jmp  <jinit_c_master_control+>;cmpl %edx, %ecx;je  <jinit_c_master_control+>;leal (%edx,%edx,), %ebx;movl -(%ebp), %edi": 1,
                "movl %edi, (%ebx);movl (%eax), %edi;movl %edi, (%ebx);movl (%eax), %edi;movl %edi, (%ebx)": 7,
                "movl %edi, (%ebx);addl $, %eax;leal (%edx,%edx,), %ebx;movl -(%ebp), %edi;leal (%edi,%ebx,), %ebx": 1,
                "jmp  <jinit_c_master_control+>;movl $, %edx;movl %edx, (%esi);jmp  <jinit_c_master_control+>;movb $, (%esi)": 1,
                "leave;retl;nop;nop;nop": 3,
                "movl (%ebp), %edx;movl %edx, (%eax);addl $, %eax;popl %ebp;retl": 1,
                "movl %ebx, (%eax);movl %ecx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl %esi, (%eax)": 1,
                "addl $, %eax;addl $, %ebx;cmpl -(%ebp), %ebx;jne - <jpeg_alloc_huff_table+>;movl -(%ebp), %edx": 1,
                "subl $, %esp;cmpl $, %edx;jg  <jpeg_alloc_huff_table+>;movl %edx, (%eax);testl %edx, %edx": 1,
                "jg  <jpeg_alloc_huff_table+>;movl %edx, (%eax);testl %edx, %edx;jle  <jpeg_alloc_huff_table+>;movl $, %ebx": 1,
                "cmpl $, %eax;jne - <jpeg_alloc_huff_table+>;movl %edx, %ebx;subl $, %edx;cmpl $, %edx": 1,
                "cmpl $, %edx;jbe  <jpeg_alloc_huff_table+>;movl (%edi), %eax;movl $, (%eax);movl (%edi), %eax": 1,
                "jne  <jpeg_add_quant_table+>;movl %ebx, (%esp);calll - <jpeg_alloc_quant_table>;movl %eax, (%ebx,%esi,);jmp  <jpeg_add_quant_table+>": 1,
                "movl %esi, -(%ebp);movl (%ebp), %ebx;movzbl (%ebp), %esi;movl %esi, (%esp);movl (%ebx), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);calll - <jpeg_add_quant_table>;movl %esi, (%esp)": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax": 1,
                "movl $, %ecx;cmpl $, %ecx;jg  <jpeg_quality_scaling+>;jmp  <jpeg_quality_scaling+>;movl $, %ecx": 1,
                "movl %eax, %edx;sarl $, %edx;idivl %ecx;jmp  <jpeg_quality_scaling+>;movl $, %eax": 1,
                "movl (%ebp), %esi;cmpl $, (%ebx);je  <jpeg_set_colorspace+>;movl (%ebx), %eax;movl $, (%eax)": 1,
                "movl %esi, (%ebx);movb $, (%ebx);movb $, (%ebx);cmpl $, %esi;ja  <jpeg_set_colorspace+>": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);cmpl $, (%ebx)": 1,
                "jbe  <jpeg_set_colorspace+>;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax;movl (%ebx), %edx": 1,
                "jmp  <jpeg_default_colorspace+>;movl $, (%esp);movl %eax, (%esp);calll - <jpeg_set_colorspace>;jmp  <jpeg_default_colorspace+>": 5,
                "movl %ebx, (%esp);calll *(%eax);cmpl $, (%ebx);jne  <jpeg_set_defaults+>;movl (%ebx), %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll *(%eax);movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl %ebx, (%esp);calll *(%eax);movl %eax, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "addl $, %ecx;addl $, %edx;cmpl $, %ecx;jne - <jpeg_set_defaults+>;movl $, (%ebx)": 1,
                "movb $, (%ebx);movb $, (%ebx);movb $, (%ebx);cmpl $, (%ebx);jle  <jpeg_set_defaults+>": 1,
                "movb $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl %ebx, (%esp)": 1,
                "jne  <jpeg_simple_progression+>;jmp  <jpeg_simple_progression+>;cmpl $, %esi;jle  <jpeg_simple_progression+>;leal (%esi,%esi,), %edi": 1,
                "movl $, %eax;movl %eax, (%ebx);movl (%ebx), %edx;leal (%eax,%eax,), %eax;shll $, %eax": 1,
                "movl $, %edx;calll - <jpeg_alloc_huff_table+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 8,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, %ecx;movl $, %edx": 8,
                "calll - <jpeg_alloc_huff_table+>;jmp  <jpeg_simple_progression+>;movl $, (%esp);movl $, %ecx;movl %esi, %edx": 1,
                "jg - <jpeg_simple_progression+>;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "leal (%edi), %esi;movl %esi, -(%ebp);jmp  <jpeg_simple_progression+>;movl (%edi), %eax;movl (%ebp), %edx": 1,
                "addl %esi, (%eax);movl %esi, %edx;addl (%edi), %edx;movl %edx, (%edi);movl (%edi), %eax": 1,
                "cmpl (%ebx), %edx;jge  <jpeg_simple_progression+>;cmpl $, (%ebx);jle  <jpeg_simple_progression+>;movl $, %esi": 1,
                "movl (%ebx), %eax;movl %eax, (%edi);movl (%ebx), %ecx;cmpl %ecx, (%edi);jne  <jpeg_simple_progression+>": 1,
                "cmpl $, (%ebx);jle  <jpeg_simple_progression+>;movl (%ebp), %edi;movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "jmp  <jpeg_simple_progression+>;movl (%ebp), %esi;movl (%esi), %ecx;cmpl (%ebp), %ecx;jae  <jpeg_simple_progression+>": 1,
                "cmpl $, (%esi);jg - <jpeg_simple_progression+>;jmp - <jpeg_simple_progression+>;movl -(%ebp), %edi;movl -(%ebp), %eax": 1,
                "movl (%edi), %eax;movl %eax, (%edi);movl (%edi), %ecx;cmpl %ecx, (%edi);jne  <jpeg_simple_progression+>": 1,
                "cmpl %edx, -(%ebp);setle %al;movzbl %al, %eax;subl $, %eax;andl %edx, %eax": 1,
                "cmpl (%edi), %ebx;jg  <jpeg_simple_progression+>;movl $, (%edi);movl (%edi), %eax;addl (%esi), %eax": 1,
                "addl (%esi), %eax;movl %eax, (%edi);movl (%ebp), %eax;movl (%ebp), %ebx;cmpl %eax, (%ebx)": 1,
                "leal (,%ebx,), %edx;movl %edx, -(%ebp);movl %edx, %eax;addl %ebx, %eax;shll $, %eax": 1,
                "jle  <jinit_c_prep_controller+>;movl -(%ebp), %ecx;addl %ebx, %ecx;movl -(%ebp), %edx;addl %edi, %edx": 1,
                "jne - <jinit_c_prep_controller+>;movl -(%ebp), %esi;movl -(%ebp), %edx;movl -(%ebp), %ebx;movl -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);addl $, -(%ebp);movl -(%ebp), %ecx;cmpl (%ecx), %ebx;jl - <jinit_c_prep_controller+>": 1,
                "cmpl $, (%esi);jle  <jinit_c_prep_controller+>;movl $, -(%ebp);movl %edi, -(%ebp);movl $, %edi": 1,
                "idivl (%ebx);movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);calll *(%ecx)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);calll *(%ecx);movl -(%ebp), %edx": 1,
                "movl %edx, -(%ebp);movl (%esi), %eax;addl %ecx, %eax;movzbl -(%eax), %ebx;leal (%eax,%edi), %edx": 1,
                "movl (%esi), %eax;addl %ecx, %eax;movzbl -(%eax), %ebx;leal (%eax,%edi), %edx;movb %bl, (%eax)": 1,
                "addl $, %ebx;addl $, %edi;addl $, %esi;movl (%ebp), %edx;cmpl %ebx, (%edx)": 1,
                "jg - <jinit_c_prep_controller+>;movl -(%ebp), %eax;addl %edx, %eax;movl %eax, %edx;sarl $, %edx": 1,
                "movl -(%ebp), %ecx;movb %al, (%ecx);addl $, %ecx;movl %ecx, -(%ebp);addl -(%ebp), %ebx": 1,
                "jmp - <jinit_c_prep_controller+>;movl -(%ebp), %edx;addl %edx, -(%ebp);addl $, -(%ebp);movl -(%ebp), %ecx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;imull (%eax), %edx": 1,
                "movl -(%ebp), %edx;movl (%ebp), %ebx;movl (%ebx,%edx,), %eax;movl (%ebp), %ebx;movl (%ebx,%edx,), %edx": 1,
                "addl $, %eax;xorl $, %ecx;addl $, %edx;cmpl %edi, %eax;jne - <jinit_c_prep_controller+>": 1,
                "cmpl %edi, %eax;jne - <jinit_c_prep_controller+>;addl $, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %ebx": 1,
                "movl (%ebx), %ecx;movl (%ebx), %edi;movl %edi, %edx;addl $, %edx;leal -(%esi), %eax": 1,
                "movzbl (%edx), %edi;addl %edi, %ebx;addl %ebx, %ecx;movzbl (%eax), %ebx;addl %ebx, %ecx": 1,
                "addl -(%ebp), %edi;addl -(%ebp), %edi;movl %edi, -(%ebp);movl -(%ebp), %edi;movzbl (%edi), %ebx": 1,
                "cmpl $, -(%ebp);je  <jinit_c_prep_controller+>;movl -(%ebp), %edi;addl -(%ebp), %edi;movl %edi, -(%ebp)": 1,
                "je  <jinit_c_prep_controller+>;movl -(%ebp), %edi;addl -(%ebp), %edi;movl %edi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "addl %ecx, %ebx;movzbl -(%edi), %ecx;addl %ecx, %ebx;movzbl (%edi), %ecx;addl %ecx, %ebx": 1,
                "movzbl (%edx), %ebx;addl %ecx, %ebx;movl -(%ebp), %ecx;leal (%ebx,%ecx,), %ebx;imull -(%ebp), %ebx": 1,
                "sarl $, %eax;movl -(%ebp), %edx;movb %al, (%edx);addl $, -(%ebp);addl $, -(%ebp)": 1,
                "movl (%edi), %eax;movl $, %edx;subl %eax, %edx;shll $, %edx;movl %edx, -(%ebp)": 1,
                "movl $, -(%ebp);subl $, %ebx;movl %ebx, -(%ebp);movl -(%ebp), %edx;movl (%ebp), %ebx": 1,
                "subl $, %ebx;movl %ebx, -(%ebp);movl -(%ebp), %edx;movl (%ebp), %ebx;movl (%ebx,%edx,), %edx": 1,
                "movl -(%ecx), %ebx;movl %ebx, -(%ebp);movl (%ecx), %edi;movl %edi, -(%ebp);movzbl (%ebx), %ecx": 1,
                "movzbl (%edi), %eax;addl %eax, %ecx;movzbl (%esi), %eax;leal (%ecx,%eax), %edi;leal (%esi), %edx": 1,
                "leal (%eax,%ecx), %eax;sarl $, %eax;movl -(%ebp), %edx;movb %al, (%edx);addl $, %edx": 1,
                "je  <jinit_c_prep_controller+>;movl %edi, -(%ebp);movl %ebx, %edx;movl $, %eax;jmp  <jinit_c_prep_controller+>": 1,
                "jmp  <jinit_c_prep_controller+>;movl %ebx, %edx;movzbl (%esi,%eax), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %edi;imull -(%ebp), %edi;movl %edx, %ecx;subl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movzbl (%ecx), %eax;movl -(%ebp), %ecx;imull %eax, %ecx;movl %ebx, %esi": 1,
                "calll  <jcopy_sample_rows>;movl (%ebx), %ecx;movl (%ebx), %edx;movl (%edi), %eax;imull (%edi), %eax": 1,
                "movl %edi, (%esp);calll *(%eax);movl %eax, -(%ebp);movl %eax, (%edi);movl $, (%eax)": 2,
                "sarl $, %edx;idivl -(%ebp);testl %edx, %edx;jne  <jinit_downsampler+>;movl %ecx, %eax": 1,
                "movl %edi, (%esp);calll *(%eax);addl $, -(%ebp);addl $, %ebx;addl $, -(%ebp)": 1,
                "jmp  <jinit_downsampler+>;movl (%eax), %ecx;subl $, %ecx;cmpl %ecx, (%edx);jae  <jinit_downsampler+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%edx);jmp  <jinit_downsampler+>;movl (%eax), %eax": 1,
                "cmpl $, (%ebp);je  <jinit_downsampler+>;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax": 1,
                "movl (%eax), %eax;subl $, %eax;movl %eax, -(%ebp);movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "ja  <jinit_downsampler+>;movl (%ecx), %edx;movl %edx, -(%ebp);cmpl $, (%ecx);jle  <jinit_downsampler+>": 1,
                "movl -(%ebp), %edi;movl %edi, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl -(%ebp,%edx,), %eax;movl -(%ebp), %edx;movl -(%ebp), %edi;addl (%eax,%edi), %edx": 1,
                "cmpl $, -(%ebp);jle  <jinit_downsampler+>;leal (%esi,%ebx,), %eax;movl -(%ebp), %edi;addl %ebx, %edi": 1,
                "jle  <jinit_downsampler+>;leal (%esi,%ebx,), %eax;movl -(%ebp), %edi;addl %ebx, %edi;leal (%esi,%edi,), %edi": 1,
                "leal (%esi,%ebx,), %eax;movl -(%ebp), %edi;addl %ebx, %edi;leal (%esi,%edi,), %edi;movl %edx, (%eax)": 1,
                "leal (%edi,%ebx), %eax;cmpl %eax, (%ecx);jg - <jinit_downsampler+>;jmp  <jinit_downsampler+>;movl %eax, %ebx": 1,
                "movl $, %eax;jmp  <jinit_downsampler+>;addl $, -(%ebp);movl -(%ebp), %edi;movl (%ebp), %eax": 1,
                "movl $, %ebx;movl (%ebp), %eax;cmpl $, (%eax);jg - <jinit_downsampler+>;jmp - <jinit_downsampler+>": 1,
                "jg - <jinit_downsampler+>;jmp - <jinit_downsampler+>;movl -(%ebp), %edi;movl $, (%edi);addl $, -(%ebp)": 1,
                "calll - <jinit_downsampler+>;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "calll - <jinit_arith_encoder>;jmp  <jpeg_write_coefficients+>;movl %ebx, (%esp);calll - <jinit_huff_encoder>;movl (%ebx), %eax": 1,
                "calll *(%eax);movl %eax, -(%ebp);movl %eax, %edi;movl $, %edx;testb $, %al": 1,
                "testl $, %edi;je  <jpeg_write_coefficients+>;movw $, (%edi);addl $, %edi;subl $, %edx": 1,
                "movb $, (%edi);movl -(%ebp), %edx;movl $, %eax;movl %edx, (%esi,%eax,);addl $, %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "movl (%edx), %eax;movl %edx, %ecx;movl (%edx), %edx;movl %edx, (%eax);movl (%ecx), %eax": 3,
                "movl (%esi), %eax;movl %eax, (%edx);movl (%esi), %eax;movl %eax, (%edx);movl (%esi), %eax": 5,
                "movl %eax, (%edx);movl (%esi), %eax;movl %eax, (%edx);movl %edx, (%esp);calll - <jpeg_set_defaults>": 1,
                "movl %edx, (%esp);calll - <jpeg_set_defaults>;movl (%esi), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl (%esi), %eax;movl (%ebp), %esi;movl %eax, (%esi);movl (%ebp), %edx;movzbl (%edx), %eax": 1,
                "movl (%ebp), %esi;movl %eax, (%esi);movl (%ebp), %edx;movzbl (%edx), %eax;movb %al, (%esi)": 1,
                "movl $, %eax;testb $, %dl;je  <jpeg_copy_critical_parameters+>;movzbl (%ecx), %eax;movb %al, (%edx)": 1,
                "je  <jpeg_copy_critical_parameters+>;movzwl (%esi), %edx;movw %dx, (%edi);addl $, %edi;addl $, %esi": 1,
                "movw %dx, (%edi);movl $, %edx;testb $, %al;je  <jpeg_copy_critical_parameters+>;movzbl (%esi,%edx), %eax": 1,
                "addl $, -(%ebp);addl $, -(%ebp);addl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, (%esi)": 1,
                "movl (%ebp), %esi;movzbl (%esi), %eax;movl (%ebp), %edx;movb %al, (%edx);movl (%esi), %eax": 1,
                "movl $, (%ebx);movl %ebx, (%esp);calll  <jinit_marker_reader>;movl %ebx, (%esp);calll  <jinit_input_controller>": 1,
                "movl (%ebx), %eax;movzbl (%ebx), %edx;movl %edx, (%eax);movl (%ebx), %eax;movl $, (%esp)": 3,
                "movl $, (%esp);movl %ebx, (%esp);calll *(%eax);movl $, (%ebx);jmp  <jpeg_consume_input+>": 2,
                "fld;fstpl (%ebx);movb $, (%ebx);movb $, (%ebx);movl $, (%ebx)": 1,
                "jmp  <jpeg_consume_input+>;movl $, %esi;movl %esi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "jmp  <jpeg_finish_decompress+>;movl %ebx, (%esp);calll *(%eax);testl %eax, %eax;nop": 1,
                "je - <jpeg_finish_decompress+>;movl (%ebx), %eax;movl %ebx, (%esp);calll *(%eax);movl %ebx, (%esp)": 1,
                "movl (%ebx), %eax;leal (%ebx), %esi;cmpb $, (%eax);jne  <jpeg_finish_decompress+>;jmp  <jpeg_finish_decompress+>": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;cmpl $, %eax;jne  <jpeg_start_decompress+>;movl %ebx, (%esp)": 1,
                "cmpl $, %eax;jne - <jpeg_start_decompress+>;movl (%edx), %eax;addl $, %eax;movl %eax, (%edx)": 1,
                "movl (%edx), %eax;addl $, %eax;movl %eax, (%edx);movl (%ebx), %edx;movl (%edx), %ecx": 2,
                "movl (%edx), %ecx;cmpl %ecx, %eax;jl - <jpeg_start_decompress+>;addl (%ebx), %ecx;movl %ecx, (%edx)": 1,
                "movl (%ebx), %eax;cmpl (%ebx), %eax;jb  <jpeg_read_scanlines+>;movl (%ebx), %eax;movl $, (%eax)": 1,
                "movl $, (%ebx);jmp  <jpeg_finish_output+>;cmpl $, %eax;je  <jpeg_finish_output+>;movl (%ebx), %eax": 1,
                "testl %eax, %eax;je  <jpeg_finish_output+>;movl (%ebx), %eax;cmpl %eax, (%ebx);jg  <jpeg_finish_output+>": 1,
                "movl $, (%ebx);movl $, %eax;jmp  <jpeg_finish_output+>;movl $, %eax;addl $, %esp": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %eax, %esi;movl (%eax), %ebx;cmpl $, (%ebx)": 1,
                "jne  <jpeg_finish_output+>;movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl %esi, (%esp)": 1,
                "movl %eax, %edx;addl $, %edx;js  <jpeg_finish_output+>;movl %edx, (%ebx);jmp  <jpeg_finish_output+>": 1,
                "jle - <jpeg_finish_output+>;movl -(%ebp), %ecx;movzbl (%ecx), %edx;movzbl %dl, %esi;movl %esi, -(%ebp)": 1,
                "movzbl (%ecx), %edx;movzbl %dl, %esi;movl %esi, -(%ebp);movl %edx, %ecx;andl $, %ecx": 1,
                "movl -(%ebp), %esi;movb %al, (%esi);addl $-, %edx;movzbl %dl, %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %eax;movb %dl, (%eax);movl -(%ebp), %eax;sarl $, %eax;addl $, %esp": 1,
                "movb %dl, (%eax);movl -(%ebp), %eax;sarl $, %eax;addl $, %esp;popl %ebx": 1,
                "jns  <jpeg_finish_output+>;movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl -(%ebp), %edx": 1,
                "movl (%esi), %eax;movl %ebx, (%eax);movl (%esi), %eax;movl $, (%esp);movl %esi, (%esp)": 1,
                "calll *(%eax);movl (%esi), %eax;movl -(%ebp), %edx;movl %eax, (%edi,%edx,);addl $, %ebx": 1,
                "cmpl %ebx, (%esi);jge - <jpeg_finish_output+>;addl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, (%esi)": 1,
                "cmpl $, (%esi);jne  <jpeg_finish_output+>;movl -(%ebp), %edx;movl $, (%edx);jmp  <jpeg_finish_output+>": 1,
                "je  <jpeg_finish_output+>;movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl $, (%esp)": 1,
                "movl %esi, (%esp);calll *(%eax);movl -(%ebp), %eax;movl $, (%eax);jmp - <jpeg_finish_output+>": 1,
                "cmpl $, (%esi);jne  <jpeg_finish_output+>;cmpl $, (%esi);jne  <jpeg_finish_output+>;movl -(%ebp), %eax": 1,
                "jbe  <jpeg_finish_output+>;movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl %edi, (%eax)": 2,
                "testl $, %edi;je  <jpeg_finish_output+>;movw $, (%edi);addl $, %edi;subl $, %edx": 3,
                "jne  <jpeg_finish_output+>;cmpl $, (%esi);jne  <jpeg_finish_output+>;jmp  <jpeg_finish_output+>;cmpl $, (%esi)": 1,
                "testl $, %edi;je  <jpeg_finish_output+>;movb $, (%edi);addl $, %edi;movw $, %dx": 2,
                "je  <jpeg_finish_output+>;movb $, (%edi);addl $, %edi;movw $, %dx;testl $, %edi": 2,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movl %ebx, (%esp);calll *(%eax)": 1,
                "movl -(%ebp), %ecx;movl (%ecx,%edx,), %edi;movl $, %edx;testl $, %edi;je  <jpeg_finish_output+>": 1,
                "movl (%ecx,%edx,), %edi;movl $, %edx;testl $, %edi;je  <jpeg_finish_output+>;movb $, (%edi)": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;movl %eax, -(%ebp);cmpl $, (%edi);je  <jpeg_finish_output+>": 3,
                "testl %eax, %eax;jne  <jpeg_finish_output+>;movl -(%ebp), %edx;movl -(%ebp), %ecx;movl $, (%ecx,%edx,)": 1,
                "movl -(%ebp), %edx;addl %eax, (%edx,%ecx,);movl -(%ebp), %ecx;movl -(%ebp), %edx;movl (%edx,%ecx,), %eax": 1,
                "movl -(%ebp), %ecx;movw %ax, (%ecx);cmpl $, (%esi);je  <jpeg_finish_output+>;movl -(%ebp), %eax": 1,
                "movw %ax, (%ecx);cmpl $, (%esi);je  <jpeg_finish_output+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %esi, %eax;calll - <jpeg_finish_output+>;testl %eax, %eax;jne  <jpeg_finish_output+>;addl $, %ebx": 2,
                "movl %edi, %edx;movl %esi, %eax;calll - <jpeg_finish_output+>;movl %eax, %edi;testl %eax, %eax": 2,
                "movl %ebx, %edx;movl %esi, %eax;calll - <jpeg_finish_output+>;testl %eax, %eax;jne - <jpeg_finish_output+>": 2,
                "movl -(%ebp), %ecx;movl (%esi,%eax,), %edx;cmpw $, (%ecx,%edx,);jne  <jpeg_finish_output+>;subl $, %eax": 1,
                "movl (%esi,%eax,), %edx;cmpw $, (%ecx,%edx,);jne  <jpeg_finish_output+>;subl $, %eax;jne - <jpeg_finish_output+>": 1,
                "addl $, %eax;movl %eax, -(%ebp);movl %edi, -(%ebp);movl %esi, %edi;leal (%ebx,%ebx,), %esi": 1,
                "movl -(%ebp), %eax;addl (%eax,%edx,), %esi;cmpl -(%ebp), %ebx;jl  <jpeg_finish_output+>;movl %esi, %edx": 1,
                "movl -(%ebp), %eax;calll - <jpeg_finish_output+>;testl %eax, %eax;jne  <jpeg_finish_output+>;addl $, %ebx": 1,
                "je  <jpeg_finish_output+>;cmpl $, (%ebx);jne  <jpeg_finish_output+>;movl %esi, %eax;calll - <jpeg_finish_output+>": 1,
                "addl $, %ebx;cmpl %ebx, (%esi);jg - <jpeg_finish_output+>;movl $, %eax;addl $, %esp": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movl (%edx,%ecx,), %eax;movl (%esi), %ecx;shll %cl, %edi": 1,
                "movl -(%ebp), %edx;movl $, (%edx,%esi,);jmp  <jpeg_finish_output+>;movl -(%ebp), %eax;movzbl (%edi,%eax), %ecx": 1,
                "jmp  <jpeg_finish_output+>;movl -(%ebp), %eax;movzbl (%edi,%eax), %ecx;movl $, %eax;shll %cl, %eax": 1,
                "addl $, %ecx;addl $, %esi;cmpl %esi, (%ebx);jle  <jinit_arith_decoder+>;leal (%ecx), %edx": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %ebx": 2,
                "movl %eax, (%ebx);movl $, (%ebx);addl $, %esp;popl %ebx;popl %ebp": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %eax": 1,
                "testl %eax, %eax;jne  <jinit_arith_decoder+>;movl (%ebp), %edx;movl (%edx), %eax;movl $, (%eax)": 1,
                "movl (%ebx), %eax;leal (%esi,%eax), %edx;movl %edx, (%ebx);movl %eax, (%ebx);movl %esi, (%ebx)": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll *;cmpl $, %eax;je  <jinit_arith_decoder+>": 1,
                "movl %eax, (%ebx);movl $, (%ebx);movl $, %eax;addl $, %esp;popl %ebx": 1,
                "movl (%esi), %eax;movl %esi, (%esp);calll *(%eax);movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll *(%eax);movl %eax, (%ebx);movl (%ebx), %eax": 1,
                "movl $, (%ebx);movl $, (%ebx);movl %edi, (%ebx);movl %esi, (%ebx);movl $, (%ebx)": 1,
                "movl %edi, (%ebx);movl %esi, (%ebx);movl $, (%ebx);cmpl $, (%edi);je  <jpeg_mem_dest+>": 1,
                "movl $, (%ebx);cmpl $, (%edi);je  <jpeg_mem_dest+>;cmpl $, (%esi);jne  <jpeg_mem_dest+>": 1,
                "movl %eax, (%edi);movl %eax, (%ebx);testl %eax, %eax;jne  <jpeg_mem_dest+>;movl (%ebp), %edx": 1,
                "movl (%edx), %eax;movl %edx, (%esp);calll *(%eax);movl $, (%esi);movl (%edi), %eax": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl %eax, (%ebx)": 1,
                "calll *(%eax);movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl $, (%esp)": 1,
                "movl %eax, (%ebx);movl (%ebx), %eax;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;movl (%ebp), %ebx;testl %ebx, %ebx;je  <jpeg_mem_src+>": 1,
                "movl (%edi), %eax;movl %edi, (%esp);calll *(%eax);cmpl $, (%edi);jne  <jpeg_mem_src+>": 1,
                "movl (%eax), %edx;cmpl $, (%eax);jle  <jpeg_mem_src+>;movl $, (%edx);jmp  <jpeg_mem_src+>": 1,
                "jmp  <jpeg_mem_src+>;movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%edx);movl $, (%edx)": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl $, (%eax)": 2,
                "movl %esp, %ebp;movl $, %eax;popl %ebp;retl;pushl %ebp": 2,
                "movl %edx, (%esp);imull (%esi), %edx;movl %edx, (%esp);movl (%eax), %eax;movl (%edi,%eax,), %eax": 1,
                "movl (%ebp), %edx;cmpl (%edx), %eax;jb  <jpeg_mem_src+>;jmp  <jpeg_mem_src+>;movl -(%ebp), %ecx": 1,
                "addl (%eax,%ecx,), %edx;cmpl $, (%ebx);jle  <jpeg_mem_src+>;movl %esi, %eax;movl %edx, (%edi,%eax,)": 1,
                "movl (%ebp), %eax;cmpl %edx, (%eax);jbe  <jpeg_mem_src+>;movl $, -(%ebp);movl $, %esi": 1,
                "movl $, %esi;movl (%ebp), %eax;cmpl $, (%eax);jg - <jpeg_mem_src+>;jmp - <jpeg_mem_src+>": 1,
                "jg - <jpeg_mem_src+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);addl $, %eax": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %eax;movl (%eax,%edi,), %ebx;cmpl $, (%esi);je  <jpeg_mem_src+>": 1,
                "cmpl $, (%esi);je  <jpeg_mem_src+>;movl $, %edi;movl $, -(%ebp);movl %edi, (%esp)": 1,
                "addl $, %eax;movl (%ebp), %edi;movl %eax, (%edi);cmpl (%edi), %eax;sbbl %eax, %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll *(%edx);movl %eax, (%esi);movl (%esi), %ecx": 1,
                "je  <jpeg_mem_src+>;cmpl $, (%eax);je  <jpeg_mem_src+>;movb $, -(%ebp);movl $, %edi": 1,
                "movl -(%ebp), %esi;cmpb $, -(%ebp);je  <jpeg_mem_src+>;movl $, (%esi);jmp  <jpeg_mem_src+>": 1,
                "movl -(%ebp), %ecx;cmpl (%ecx), %edx;jge  <jpeg_mem_src+>;addl $, %ecx;movl %ecx, -(%ebp)": 1,
                "jg  <jpeg_mem_src+>;jmp  <jpeg_mem_src+>;movl -(%ebp), %ecx;movl -(%ebp), %edx;movl %ecx, (%edx)": 1,
                "movl %ecx, (%edx);movl -(%ebp), %eax;movl %eax, (%edx);movl $, %eax;jmp  <jpeg_mem_src+>": 1,
                "cmpl $, -(%ebp);jg  <jpeg_mem_src+>;jmp  <jpeg_mem_src+>;movl -(%ebp), %eax;addl -(%ebp), %eax": 1,
                "calll *%edx;addl (%edi), %esi;addl $, %ebx;cmpl -(%ebp), %ebx;jne - <jpeg_mem_src+>": 1,
                "cmpl %ecx, (%edi);jg - <jpeg_mem_src+>;addl $, -(%ebp);movl -(%ebp), %edx;movl (%ebp), %eax": 1,
                "addl $, -(%ebp);movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);jae - <jpeg_mem_src+>;movl -(%ebp), %eax": 1,
                "cmpl (%ecx), %eax;jae  <jpeg_mem_src+>;movl %ecx, %eax;calll - <jpeg_mem_src+>;movl $, %eax": 1,
                "movl (%esi), %eax;movl (%esi), %edx;cmpl %edx, %eax;jg  <jpeg_mem_src+>;movl (%esi), %ecx": 1,
                "movl (%ebp), %edi;movl (%edi), %edi;movl %edi, -(%ebp);movl (%ebp), %esi;cmpl $, (%esi)": 1,
                "movl (%ebx), %eax;movl $, %edx;divl %edi;testl %edx, %edx;je  <jpeg_mem_src+>": 1,
                "je  <jpeg_mem_src+>;movl -(%ebp), %esi;movl (%esi), %edx;movl (%ebp), %edi;movl (%edi), %ebx": 1,
                "jle  <jpeg_mem_src+>;leal (,%eax,), %edx;leal (%edx,%eax), %esi;shll $, %esi;movl %esi, -(%ebp)": 1,
                "shll $, %esi;movl %esi, -(%ebp);movl %ebx, %esi;shll $, %esi;movl %esi, -(%ebp)": 1,
                "addl %eax, %edx;movl %edx, -(%ebp);movl %edi, %ebx;shll $, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%eax), %edi;movl %edi, -(%ebp);cmpl $, -(%ebp);jne  <jpeg_mem_src+>;movl %edi, %esi": 1,
                "movl %esi, -(%ebp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movswl (%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %eax;subl -(%ebp), %eax;movl -(%ebp), %ebx": 1,
                "cmpl %edx, %eax;jl  <jpeg_mem_src+>;leal -(%edx), %ebx;jmp  <jpeg_mem_src+>;movl -(%ebp), %ebx": 5,
                "movl %ebx, %edx;sarl $, %edx;idivl -(%ebp);movl %eax, %ebx;testl %ecx, %ecx": 5,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;movl %ebx, -(%ebp);cmpl %esi, -(%ebp);jae - <jpeg_mem_src+>": 1,
                "leal (%edi,%eax,), %edi;movl %edi, -(%ebp);addl $, -(%ebp);addl $, -(%ebp);movl -(%ebp), %ebx": 1,
                "addl $, -(%ebp);movl -(%ebp), %edi;movl (%ebp), %esi;cmpl %edi, (%esi);jg - <jpeg_mem_src+>": 1,
                "movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll  <jround_up>;movl %eax, -(%ebp)": 1,
                "movl $, (%eax);movl $, (%eax);addl $, %eax;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "movw $, (%edi);addl $, %edi;testb $, %dl;je  <jinit_d_coef_controller+>;movb $, (%edi)": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %esi;sarl $, %esi;movl (%ebx), %edi;movl %esi, (%edi,%eax)": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%ebp), %ecx": 1,
                "movl (%edx), %edi;movl %edi, -(%ebp);movl (%edx), %esi;movl %esi, -(%ebp);movl (%edx), %edx": 1,
                "movl (%eax,%edi), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx,%edi), %eax;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl (%edx,%edi), %eax;cmpl $, -(%ebp);je  <jinit_d_coef_controller+>;movl $, %edx": 1,
                "cmpl $, -(%ebp);je  <jinit_d_coef_controller+>;movl $, %edx;movl %edi, -(%ebp);movl %ecx, -(%ebp)": 1,
                "addl (%ecx,%ebx,), %edi;movzbl (%edi,%edx), %ecx;movb %cl, (%eax);movzbl -(%ebp), %ecx;movl -(%ebp), %edi": 1,
                "addl %edx, %edi;movzbl (%edi,%ebx), %ebx;movb %bl, (%eax);movl -(%ebp), %ebx;movl (%ebx,%ecx,), %ecx": 1,
                "movzbl (%ecx,%edx), %edx;movb %dl, (%eax);addl $, %eax;addl $, %esi;cmpl -(%ebp), %esi": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ecx, %eax;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "movzbl (%ebx,%eax), %ecx;movl -(%ebp), %ebx;movzbl (%ebx,%eax), %edx;movl -(%ebp), %ebx;movl (%ebx,%ecx,), %ecx": 1,
                "addl %ecx, %edx;movl %edx, %ebx;addl $-, %ebx;movb %bl, (%eax);movb %cl, (%eax)": 1,
                "movl %edx, -(%ebp);movl %ecx, %edx;movl %esi, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %ebx;movzbl (%ebx,%edx), %ecx;movl -(%ebp), %edi": 1,
                "movzbl (%ebx,%edx), %ecx;movl -(%ebp), %edi;movzbl (%edi,%edx), %esi;leal -(%ecx,%esi), %edi;movl -(%ebp), %ebx": 1,
                "addl $, %edx;cmpl %eax, %edx;jne - <jinit_d_coef_controller+>;movl -(%ebp), %edx;movl -(%ebp), %esi": 1,
                "movl (%edx,%ecx), %edx;movl %edx, -(%ebp);movl (%eax), %edx;movl (%edx,%ecx), %edx;movl %edx, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <jinit_d_coef_controller+>;movl -(%ebp), %ebx;addl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %edx;movl (%ebp), %edi;movl (%ebp), %eax;movl (%eax), %ebx;leal (,%edx,), %eax": 1,
                "jmp  <jinit_d_coef_controller+>;movl (%ecx), %edx;movl (%edx,%eax), %esi;movl -(%ebp), %edx;movl (%edx,%eax), %edx": 1,
                "movl (%ecx), %edx;movl (%edx,%eax), %esi;movl -(%ebp), %edx;movl (%edx,%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %edi;movl %edi, -(%ebp);movl (%edx), %ecx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax,%ecx), %edi;cmpl $, -(%ebp);je  <jinit_d_coef_controller+>": 1,
                "movl $, %eax;movl %ecx, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %ecx": 1,
                "subl %esi, %ebx;movl %ebx, %esi;movl -(%ebp), %ebx;movzbl (%ebx,%esi), %ebx;movb %bl, (%edi)": 1,
                "movl (%esi,%ebx,), %esi;movl %esi, -(%ebp);movl -(%ebp), %esi;movl (%esi,%ecx,), %ecx;addl -(%ebp), %ecx": 1,
                "jne - <jinit_d_coef_controller+>;movl -(%ebp), %ecx;movl -(%ebp), %esi;movl -(%ebp), %ebx;addl $, %ecx": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);calll  <jcopy_sample_rows>": 1,
                "je  <jinit_color_deconverter+>;cmpl $, %eax;je  <jinit_color_deconverter+>;cmpl $, %eax;jne  <jinit_color_deconverter+>": 8,
                "movl (%ebx), %eax;movl %eax, %edx;andl $-, %edx;cmpl $, %edx;jne  <jinit_color_deconverter+>": 1,
                "cmpl %eax, (%ebx);jg - <jinit_color_deconverter+>;jmp  <jinit_color_deconverter+>;cmpl $, %eax;jne  <jinit_color_deconverter+>": 1,
                "jmp  <jinit_color_deconverter+>;movl $, (%ebx);movl (%ebx), %eax;cmpl $, %eax;jne  <jinit_color_deconverter+>": 2,
                "movl $, (%esi);movl %ebx, %eax;calll - <jinit_d_coef_controller+>;jmp  <jinit_color_deconverter+>;cmpl $, %eax": 2,
                "calll *(%eax);jmp  <jinit_color_deconverter+>;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax": 1,
                "jmp  <jinit_color_deconverter+>;cmpl (%ebx), %eax;jne  <jinit_color_deconverter+>;movl (%ebx), %eax;movl %eax, (%ebx)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);jmp  <jinit_color_deconverter+>;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "jmp  <jinit_color_deconverter+>;movl $, -(%ebp);movl $, -(%ebp);jmp  <jinit_color_deconverter+>;movl (%ebp), %edx": 1,
                "movl %edx, (%esp);calll *(%eax);jmp  <jinit_color_deconverter+>;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl %edi, -(%ebp);movl %eax, %edi;jmp  <jinit_color_deconverter+>;movl (%esi,%ecx,), %eax;movl $, %edx": 1,
                "fmul %st();fstps (%ebx,%ecx,);addl $, %ecx;cmpl $, %ecx;jne - <jinit_color_deconverter+>": 1,
                "addl $, %ebx;cmpl $, %edi;je  <jinit_color_deconverter+>;fldl (%edi);movl $, %ecx": 1,
                "testb %al, %al;je  <jinit_inverse_dct+>;movl (%esi), %eax;movl (%eax), %ecx;movl (%eax), %edx": 2,
                "addl $, %ecx;cmpl $, %edi;jne  <jinit_inverse_dct+>;testl %edx, %edx;jne  <jinit_inverse_dct+>": 1,
                "je - <jinit_inverse_dct+>;testl %eax, %eax;je  <jinit_inverse_dct+>;movl %esi, %edi;movl %ecx, %esi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %edi;movl (%ebp), %ebx;cmpl %ecx, %ebx;jle  <jinit_inverse_dct+>": 1,
                "sarl %cl, %eax;andl $, %eax;orl %eax, %esi;addl $, %ebx;cmpl %esi, (%edi,%ebx,)": 1,
                "movl (%eax), %esi;movl (%eax), %eax;movl (%esi), %edx;movl %edx, %ecx;sarl $, %ecx": 1,
                "movl %ebx, (%esp);calll *(%eax);testb %al, %al;je  <jinit_inverse_dct+>;cmpl $, (%ebx)": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);movl $, %eax;cmpl $, (%ebx);jne  <jinit_inverse_dct+>": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;cmpl $, (%eax);jle  <jinit_inverse_dct+>;movl $, -(%ebp)": 1,
                "movl $, %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %edi, %ecx;leal -(%ebp), %eax": 1,
                "testl %eax, %eax;js  <jinit_inverse_dct+>;movl -(%ebp), %edx;movl -(%ebp), %edi;testl %ebx, %ebx": 1,
                "jle  <jinit_inverse_dct+>;movl %ebx, (%esp);movl %edi, %ecx;leal -(%ebp), %eax;calll - <jinit_inverse_dct+>": 1,
                "movl %ebx, (%esp);movl %edi, %ecx;leal -(%ebp), %eax;calll - <jinit_inverse_dct+>;testb %al, %al": 1,
                "movl (%ecx), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl (%ebx), %ebx;movl %ebx, -(%ebp);movl (%ebp), %ebx;cmpl $, (%ebx);je  <jinit_inverse_dct+>": 1,
                "je  <jinit_inverse_dct+>;subl %ecx, %edx;movzbl (%ebx,%eax), %eax;jmp  <jinit_inverse_dct+>;movl $, %eax": 1,
                "movl %ebx, (%esp);movl %edx, %ecx;movl %edi, %edx;leal -(%ebp), %eax;calll - <jinit_inverse_dct+>": 2,
                "movl %eax, %ecx;sarl $, %ecx;movl %eax, %ebx;andl $, %ebx;je  <jinit_inverse_dct+>": 1,
                "subl %ebx, %edx;movl (,%ebx,), %eax;movl %eax, -(%ebp);movl %edi, %eax;movl %edx, %ecx": 1,
                "cmpl $, %ecx;je  <jinit_inverse_dct+>;movl %edi, -(%ebp);movl %ecx, %esi;testl %ecx, %ecx": 1,
                "cmpl %esi, %edx;jge  <jinit_inverse_dct+>;movl %esi, (%esp);movl %edx, %ecx;movl %edi, %edx": 1,
                "subl %esi, %edx;movl -(%ebp), %eax;movl %edx, %ecx;sarl %cl, %eax;andl (,%esi,), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;movl -(%ebp), %ebx;movl %eax, (%ebx)": 1,
                "shll %cl, %eax;movl %eax, -(%ebp);cmpl $, (%edi);je  <jinit_inverse_dct+>;movl -(%ebp), %eax": 1,
                "testb %al, %al;je  <jinit_inverse_dct+>;movl -(%ebp), %edx;movl -(%ebp), %ecx;subl $, %ecx": 1,
                "movl -(%ebp), %eax;movl %edx, (%eax);movl %ecx, (%eax);subl $, (%eax);movl $, %eax": 1,
                "movl (%ebp), %edx;movl (%edx), %ebx;testl %ecx, %ecx;jne  <jinit_inverse_dct+>;movl $, -(%ebp)": 1,
                "movl $, (%esp);movl %edi, %ecx;movl -(%ebp), %edx;leal -(%ebp), %eax;calll - <jinit_inverse_dct+>": 2,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);movl -(%ebp), %edi;cmpl $, %edi;jle  <jinit_inverse_dct+>": 1,
                "andl $, %eax;movl -(%ebp), %ecx;movl (%ecx,%eax,), %edx;testl %edx, %edx;je  <jinit_inverse_dct+>": 3,
                "movl %edi, %ecx;movl -(%ebp), %edx;leal -(%ebp), %eax;calll - <jinit_inverse_dct+>;testl %eax, %eax": 1,
                "movl %ecx, -(%ebp);andl $, %eax;movl %eax, -(%ebp);je  <jinit_inverse_dct+>;cmpl $, %eax": 1,
                "je  <jinit_inverse_dct+>;cmpl $, %eax;je  <jinit_inverse_dct+>;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "jmp  <jinit_inverse_dct+>;cmpl $, -(%ebp);je  <jinit_inverse_dct+>;movl -(%ebp), %esi;movl $, %edx": 1,
                "je  <jinit_inverse_dct+>;movl -(%ebp), %esi;movl $, %edx;movzbl -(%ebp), %ecx;shll %cl, %edx": 1,
                "cmpl $, -(%ebp);je  <jinit_inverse_dct+>;movl -(%ebp), %ecx;movl (%ecx,%ebx,), %eax;movzwl -(%ebp), %ecx": 1,
                "movl $, -(%ebp);movl %edi, %ecx;movl -(%ebp), %edi;movl (%edi,%ebx,), %eax;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;subl $, (%eax);movl $, %eax;jmp  <jinit_inverse_dct+>;movl -(%ebp), %edx": 1,
                "movl %edi, -(%ebp);movl (%ebp), %edi;cmpl $, (%edi);je  <jinit_inverse_dct+>;movl -(%ebp), %edi": 2,
                "je  <jinit_inverse_dct+>;movl -(%ebp), %edi;cmpl $, (%edi);jne  <jinit_inverse_dct+>;movl (%ebp), %eax": 2,
                "movl -(%ebp), %edi;cmpl $, (%edi);jne  <jinit_inverse_dct+>;movl (%ebp), %eax;calll - <jinit_inverse_dct+>": 2,
                "movl %eax, -(%ebp);movl -(%ebp), %edi;movl (%edi), %edx;movl (%edi), %esi;movl (%edi), %eax": 2,
                "movl -(%ebp), %esi;cmpl $, %esi;jle  <jinit_inverse_dct+>;leal -(%esi), %ecx;movl -(%ebp), %eax": 4,
                "sarl %cl, %eax;andl $, %eax;movl (%ebx,%eax,), %edx;testl %edx, %edx;je  <jinit_inverse_dct+>": 2,
                "andl $, %eax;movl (%ebx,%eax,), %edx;testl %edx, %edx;je  <jinit_inverse_dct+>;subl %edx, %esi": 2,
                "je  <jinit_inverse_dct+>;testl %ebx, %ebx;je  <jinit_inverse_dct+>;cmpl %ebx, %esi;jge  <jinit_inverse_dct+>": 2,
                "movl %ebx, %edi;cmpl $, %esi;jg  <jinit_inverse_dct+>;movl $, (%esp);movl %esi, %ecx": 2,
                "movl -(%ebp), %ecx;movl (%ecx,%eax,), %edx;testl %edx, %edx;je  <jinit_inverse_dct+>;subl %edx, %esi": 2,
                "cmpl %edi, -(%ebp);jg - <jinit_inverse_dct+>;movl %edi, %ebx;jmp  <jinit_inverse_dct+>;testl %ebx, %ebx": 1,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);movl -(%ebp), %esi;subl %ebx, %esi;movl $, %ebx": 1,
                "movl $, %ebx;jmp  <jinit_inverse_dct+>;movl $, %ebx;jmp  <jinit_inverse_dct+>;movl $, %ebx": 1,
                "cmpl %ebx, -(%ebp);jl  <jinit_inverse_dct+>;movl -(%ebp), %edx;movl %esi, %eax;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;cmpl $, %eax;jg  <jinit_inverse_dct+>;movl $, (%esp);movl %eax, %ecx": 2,
                "andl $, %edi;je  <jinit_inverse_dct+>;addl %ecx, %ebx;cmpl %edi, %eax;jge  <jinit_inverse_dct+>": 2,
                "movl %edx, -(%ebp);movl %eax, %esi;jmp  <jinit_inverse_dct+>;movl %edx, -(%ebp);movl %eax, %esi": 2,
                "movl -(%ebp), %edi;subl $, (%edi);movl $, %eax;jmp  <jinit_inverse_dct+>;movl $, %eax": 2,
                "jmp  <jinit_inverse_dct+>;movl -(%ebp), %edx;movl %esi, %eax;movl -(%ebp), %esi;cmpl $, %eax": 1,
                "jmp - <jinit_inverse_dct+>;addl $, %esp;popl %ebx;popl %esi;popl %edi": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %eax, -(%ebp);movl %ecx, %edi": 1,
                "movl (%eax,%edi,), %ebx;testl %ebx, %ebx;jne  <jinit_inverse_dct+>;movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "jne  <jinit_inverse_dct+>;movl -(%ebp), %edx;movl (%edx), %eax;movl $, (%eax);movl (%edx), %eax": 1,
                "movl -(%ebp), %eax;leal (%eax,%ecx), %eax;movl %eax, -(%ebp);addl $, %ebx;cmpl $, %ebx": 1,
                "cmpl $, %ebx;jne - <jinit_inverse_dct+>;movl %edi, %ebx;movl -(%ebp), %esi;movl -(%ebp), %edx": 1,
                "movsbl %al, %ecx;movl %ecx, -(%ebp);movl $, %edi;movl $, -(%ebp);testb %al, %al": 1,
                "jne  <jinit_inverse_dct+>;jmp  <jinit_inverse_dct+>;movl %edi, (%esi,%edi,);addl $, %ebx;addl $, %edi": 1,
                "testb $, %dl;je  <jinit_inverse_dct+>;movb $, (%edi);movl $, %edi;movl $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;addl %eax, %ecx;movl %ecx, -(%ebp);movl %edi, (%esi,%eax,);movzbl (%ebx,%edx), %ecx": 1,
                "movl %ecx, -(%ebp);movl $, %eax;shll %cl, %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %esi;movl %esi, %ecx;movl $, %edx;movl $, %eax;jmp - <jinit_inverse_dct+>": 1,
                "movl %esi, %ecx;movl $, %edx;movl $, %eax;jmp - <jinit_inverse_dct+>;addl $, %esp": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);cmpb $, (%edi);je  <jinit_inverse_dct+>;movl (%edi), %eax": 1,
                "jne  <jinit_inverse_dct+>;cmpl $, (%edi);jne  <jinit_inverse_dct+>;jmp  <jinit_inverse_dct+>;movl (%edi), %edx": 1,
                "jle  <jinit_inverse_dct+>;movl (%edi), %eax;movl $, (%eax);movl (%edi), %eax;movl (%edi), %edx": 1,
                "movl $, -(%ebp);movl -(%ebp), %edx;movl (%edi,%edx,), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl (%edi,%edx,), %eax;movl (%eax), %eax;movl %eax, -(%ebp);shll $, %eax": 1,
                "movl (%edi,%edx,), %eax;movl (%eax), %eax;movl %eax, -(%ebp);shll $, %eax;movl (%edi), %esi": 1,
                "cmpl $, (%edi);jg  <jinit_inverse_dct+>;jmp  <jinit_inverse_dct+>;cmpl $, (%edi);jne  <jinit_inverse_dct+>": 1,
                "cmpl $, (%edi);jne  <jinit_inverse_dct+>;movl -(%ebp), %eax;movl $, (%eax);jmp - <jinit_inverse_dct+>": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movl (%edx,%ecx,), %eax;movl %eax, (%edx);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;movl $, (%eax);jmp  <jinit_inverse_dct+>;cmpl $, (%edi);jne  <jinit_inverse_dct+>": 1,
                "movl $, (%eax);jmp  <jinit_inverse_dct+>;cmpl $, (%edi);jne  <jinit_inverse_dct+>;cmpl $, (%edi)": 1,
                "jg  <jinit_inverse_dct+>;movl (%edi), %edx;cmpl %edx, (%edi);je  <jinit_inverse_dct+>;movl (%edi), %eax": 1,
                "movl $, (%eax,%ecx,);addl $, %esi;cmpl %esi, (%edi);jg - <jinit_inverse_dct+>;cmpl $, (%edi)": 1,
                "movl (%ecx), %edx;movl (%ecx), %ecx;movl %ecx, -(%ebp);cmpl $, (%edi);ja  <jinit_inverse_dct+>": 1,
                "movl -(%ebp), %ecx;leal -(%ecx,%edx), %edx;movl (,%edx,), %edx;addl $, %edx;movl -(%ebp), %ecx": 2,
                "jbe  <jinit_inverse_dct+>;movl $, -(%ebp);subl $, %edx;movl -(%ebp), %ecx;leal (%ecx,%edx,), %ecx": 1,
                "movl -(%ebp), %ecx;leal (%ecx,%edx,), %ecx;movl %ecx, -(%ebp);subl %edx, %ecx;movl (,%ecx,), %edx": 1,
                "movl %ecx, -(%ebp);subl %edx, %ecx;movl (,%ecx,), %edx;addl $, %edx;movl -(%ebp), %ecx": 1,
                "cmpb $, (%ebx);je  <jinit_huff_decoder+>;movl (%ebx), %eax;movl (%ebx), %edx;shll $, %edx": 1,
                "movl %ecx, %edx;jmp - <jinit_huff_decoder+>;movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;cmpl $, %eax;jne  <jinit_huff_decoder+>;movl (%ebx), %ecx": 1,
                "jne  <jinit_huff_decoder+>;movl (%ebx), %ecx;movl (%ecx), %eax;movl %eax, (%ebx);movl (%ecx), %eax": 1,
                "calll  <jdiv_round_up>;movl %eax, (%ebx);movl (%ebx), %eax;imull (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;leal (%eax,%esi,), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %esi": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %esi;movl %edi, (%eax);addl $, %eax": 1,
                "movl (%ebx,%edx,), %edx;movl %edx, -(%ebp);cmpl $, (%edx);jne  <jinit_huff_decoder+>;movl (%edx), %esi": 1,
                "movzbl (%ecx), %edx;movb %dl, (%eax);leal (%eax), %edi;leal (%ecx), %esi;movl $, %edx": 1,
                "movl (%ebx), %eax;movl (%ebx), %edx;movl (%edx), %edx;movl %edx, (%eax);addl $, %esp": 1,
                "ja  <jinit_huff_decoder+>;movl (%esi), %eax;testl %eax, %eax;jle  <jinit_huff_decoder+>;cmpl $, %eax": 1,
                "movl %ebx, (%esp);calll *(%eax);movl (%ebx), %edx;movl (%esi), %eax;cmpl %edx, %eax": 1,
                "cmpl $, %eax;jg  <jinit_huff_decoder+>;cmpl $, %eax;jne  <jinit_huff_decoder+>;jmp  <jinit_huff_decoder+>": 1,
                "jmp  <jinit_huff_decoder+>;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax;movl (%ebx), %edx": 1,
                "movb $, (%eax);cmpl $, (%ebx);jne  <jinit_huff_decoder+>;movl -(%ebp), %edx;movl $, (%edx)": 1,
                "cmpl $, (%ebx);jne  <jinit_huff_decoder+>;movl -(%ebp), %edx;movl $, (%edx);jmp - <jinit_huff_decoder+>": 1,
                "movl $, (%edi);jmp  <jinit_huff_decoder+>;movl -(%ebp), %eax;cmpb $, (%eax);jne  <jinit_huff_decoder+>": 1,
                "movl %ebx, (%esp);calll - <jinit_huff_decoder+>;jmp  <jinit_huff_decoder+>;movb $, (%edi);cmpl $, (%edi)": 1,
                "movl (%ebx), %eax;leal (,%eax,), %edx;subl %eax, %edx;movl %edx, (%esp);calll  <jdiv_round_up>": 2,
                "jmp  <jpeg_core_output_dimensions+>;movl %eax, %esi;shll $, %esi;subl %eax, %esi;cmpl %esi, %edx": 1,
                "movl %eax, (%ebx);movl $, (%ebx);movl $, (%ebx);jmp  <jpeg_core_output_dimensions+>;movl %ecx, (%esp)": 1,
                "cmpl $, (%ebx);jle  <jpeg_core_output_dimensions+>;movl $, %edx;movl (%ebx), %ecx;movl %ecx, (%eax)": 1,
                "jle  <jpeg_core_output_dimensions+>;movl $, %edx;movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %ecx": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);movb $, (%eax)": 1,
                "imull -(%ebp), %edi;shll $, %edi;movl %edi, -(%ebp);movl %edi, %esi;addl %ecx, %esi": 1,
                "movl %edi, %esi;addl %ecx, %esi;movl -(%ebp), %edi;imull -(%ebp), %edi;shll $, %edi": 1,
                "movl -(%ebp), %edi;addl %eax, %edi;movl $, %eax;movl %edx, -(%ebp);movl (%esi,%eax,), %edx": 1,
                "movl %edx, %ecx;movl (%edx), %ebx;movl %ebx, (%eax);addl $, %eax;cmpl %ecx, %eax": 1,
                "movl %ecx, (%esp);calll *(%eax);addl $, %esp;popl %ebx;popl %esi": 1,
                "movl (%esi), %ebx;cmpb $, (%ebx);jne  <jinit_input_controller+>;movl (%esi), %eax;leal (%ebx), %edx": 1,
                "je  <jinit_input_controller+>;movb $, (%ebx);movl (%esi), %edi;movl (%esi), %eax;movl (%ebp), %edx": 1,
                "movb $, (%ebx);movl (%esi), %edi;movl (%esi), %eax;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%esi), %eax;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movb $, (%ebx);movl $, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movb $, (%esi);addl $, (%esi);movl (%esi), %eax;cmpl $, %eax;je  <jinit_input_controller+>": 1,
                "je  <jinit_input_controller+>;jmp  <jinit_input_controller+>;movl (%ebp), %edi;movl (%edi), %eax;movl (%ebp), %edx": 1,
                "movl %edi, (%esp);calll *(%eax);movl (%esi), %edi;cmpl %edi, (%esi);jb  <jinit_input_controller+>": 2,
                "movl (%ebp), %ecx;movl %ebx, %edx;sarl $, %edx;idivl (%ecx);movl %eax, %esi": 1,
                "movl (%ecx), %eax;movl (%ecx,%eax,), %eax;movl -(%ebp), %ecx;movl (%eax,%ecx,), %eax;addl %esi, %esi": 1,
                "addl $, -(%ebp);addl $, %edi;movl -(%ebp), %esi;movl (%ebp), %ebx;cmpl (%ebx), %esi": 1,
                "movl $, (%esi);movl (%ebp), %edi;movl (%edi), %eax;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "cmpl $, (%esi);jne  <jinit_input_controller+>;movl (%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);cmpl $, (%edi);jle  <jinit_input_controller+>;movl $, -(%ebp);leal (%eax), %ebx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;movl (%ecx), %eax;movl -(%ebp), %esi;movl (%eax,%esi,), %ecx": 1,
                "movl -(%ebp), %esi;movl (%eax,%esi,), %ecx;movl -(%ebp), %edi;movl (%edi), %eax;movl (%eax,%esi,), %edx": 1,
                "movl %ebx, %eax;negl %eax;shll $, %eax;leal (%ecx,%eax), %edi;movl %edi, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %edi;movl %ebx, -(%ebp);movl (%edi,%eax,), %ebx;movl -(%ebp), %edx": 1,
                "movl %ebx, (%edx,%eax,);movl (%esi,%eax,), %ebx;movl -(%ebp), %edx;movl %ebx, (%edx,%eax,);movl (%ecx,%eax,), %ebx": 1,
                "addl $, %eax;cmpl -(%ebp), %eax;jne - <jinit_input_controller+>;addl $, -(%ebp);addl $, -(%ebp)": 1,
                "cmpl (%ebx), %esi;jl - <jinit_input_controller+>;movl -(%ebp), %esi;xorl $, (%esi);movb $, (%esi)": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %ecx": 1,
                "movl $, (%eax);movl %esi, %eax;testb %al, %al;je  <jinit_d_main_controller+>;movl (%ebx), %eax": 1,
                "idivl (%ebx);movl %eax, %edi;movl (%ebx), %eax;movl -(%ebp), %edx;imull %edi, %edx": 1,
                "leal (%eax,%edi,), %eax;movl -(%ebp), %ecx;movl (%ecx), %edx;movl -(%ebp), %ecx;movl %eax, (%edx,%ecx,)": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;movl -(%ebp), %ecx;movl %eax, (%edx,%ecx,);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;imull -(%ebp), %edi;addl %edi, %eax;movl -(%ebp), %ecx": 1,
                "addl $, %esi;cmpl (%ebx), %ecx;jl - <jinit_d_main_controller+>;movl (%ebx), %eax;addl $, %eax": 1,
                "sarl $, %edx;idivl (%ebx);imull -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "cmpl %edi, (%ebx);jg - <jinit_d_main_controller+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl (%ebx), %eax;movl -(%ebp), %ebx;movb %dl, (%ebx);movb %cl, (%ebx);movl (%ebp), %edx": 1,
                "calll *(%esi);movl $, %edx;testb %al, %al;je  <jinit_d_main_controller+>;movl -(%ebp), %ebx": 1,
                "movl $, %edx;testb %al, %al;je  <jinit_d_main_controller+>;movl (%esi), %ecx;movl (%esi), %eax": 4,
                "je  <jinit_d_main_controller+>;movl (%esi), %edx;movl (%esi), %eax;movzbl (%edx), %ecx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);jne  <jinit_d_main_controller+>;movl %eax, %edx;movl (%eax), %eax": 1,
                "movl $, %eax;movl (%edx), %edi;cmpl %edi, %ecx;jge  <jinit_d_main_controller+>;movl %edi, %ecx": 1,
                "movzbl %al, %ecx;shrl $, %ecx;movl %ecx, (%ebx);andl $, %eax;movl %eax, (%ebx)": 1,
                "movl $, %edx;movl %edx, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "movzbl (%esi), %edx;movb %dl, (%ebx);movzbl (%esi), %ecx;shll $, %ecx;movzbl (%esi), %edx": 1,
                "movl (%ebx), %eax;movl $, (%esp);movl %ebx, (%esp);calll *(%eax);movzbl (%esi), %eax": 1,
                "cmpl $, %ecx;jbe  <jinit_d_main_controller+>;cmpb $, (%esi);jne  <jinit_d_main_controller+>;cmpb $, (%esi)": 1,
                "cmpb $, (%esi);jne  <jinit_d_main_controller+>;cmpb $, (%esi);jne  <jinit_d_main_controller+>;movzbl (%esi), %eax": 1,
                "movzbl (%esi), %edx;movl %edx, (%eax);movl (%ebx), %eax;movl %edi, (%eax);movl (%ebx), %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll *(%eax);movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "shll $, %ecx;movzbl (%edx), %eax;addl %eax, %ecx;movzbl (%edx), %edi;shll $, %edi": 1,
                "movb %al, -(%ebp);movl (%ebx), %eax;movzbl (%edx), %esi;shll $, %esi;movzbl (%edx), %edx": 1,
                "shll $, %esi;movzbl (%edx), %edx;addl %esi, %edx;movl %edx, (%eax);movl %ecx, (%eax)": 1,
                "movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax;addl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movzbl (%edi), %ebx;shll $, %ebx;subl $, %esi;je  <jinit_d_main_controller+>;addl $, %edi": 1,
                "movl -(%ebp), %ecx;calll *(%ecx);movl %eax, %edx;movl $, %eax;testb %dl, %dl": 1,
                "movb %cl, -(%ebp,%ebx);addl $, %edx;addl $, %ebx;cmpl %esi, %ebx;jb - <jinit_d_main_controller+>": 1,
                "jmp  <jinit_d_main_controller+>;movl %ebx, (%esp);movl -(%ebp), %ecx;leal -(%ebp), %edx;movl (%ebp), %eax": 2,
                "movl (%esi), %ebx;movl %ebx, -(%ebp);movl (%esi), %ebx;testl %eax, %eax;jne  <jinit_d_main_controller+>": 1,
                "movb %al, (%ecx);movl -(%ebp), %eax;movl %eax, (%ecx);movl %edi, (%ecx);addl $, %ecx": 1,
                "addl %edi, %edx;movl %edx, -(%ebp);movl $, -(%ebp);jmp  <jinit_d_main_controller+>;movl -(%ebp), %edx": 1,
                "addl $, %edi;cmpl %edi, -(%ebp);jbe  <jinit_d_main_controller+>;testl %eax, %eax;jne - <jinit_d_main_controller+>": 1,
                "movl -(%ebp), %ebx;movl %ecx, -(%ebp);jmp  <jinit_d_main_controller+>;movl -(%ebp), %ebx;movl %ecx, -(%ebp)": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movl $, (%ecx);movl (%ebp), %edx;movl (%edx), %eax;cmpl $, %eax": 1,
                "movl (%ebp), %eax;calll - <jinit_d_main_controller+>;jmp  <jinit_d_main_controller+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <jinit_d_main_controller+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "movl %edx, (%eax);movl (%ecx), %eax;movl -(%ebp), %edx;addl -(%ebp), %edx;movl %edx, (%eax)": 1,
                "movl $, %eax;cmpl $, -(%ebp);jle  <jinit_d_main_controller+>;movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "cmpl $, -(%ebp);jle  <jinit_d_main_controller+>;movl (%ebp), %ebx;movl (%ebx), %eax;movl -(%ebp), %ebx": 1,
                "movl (%ebp), %ebx;movl %ebx, (%esp);calll *(%eax);movl $, %eax;jmp  <jinit_d_main_controller+>": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %esi;movl (%esi), %edx;movl (%esi), %eax": 1,
                "movl %eax, -(%ebp);je  <jinit_d_main_controller+>;addl $, %edx;movl %edx, -(%ebp);jmp  <jinit_d_main_controller+>": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %edx;movl %edx, -(%ebp);movl -(%ebp), %edx": 1,
                "movl (%edi), %eax;movl (%edi), %ebx;subl $, %ebx;movzbl (%eax), %edx;addl $, %eax": 3,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;movl %edx, (%eax);movl %esi, (%edi);movl %ebx, (%edi)": 1,
                "jmp  <jinit_d_main_controller+>;movl $, %eax;jmp  <jinit_d_main_controller+>;movl $, %eax;addl $, %esp": 3,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "calll *(%edx);movl %eax, %edx;movl $, %eax;testb %dl, %dl;je  <jinit_d_main_controller+>": 1,
                "testl %eax, %eax;jne  <jinit_d_main_controller+>;movl -(%ebp), %eax;movl %eax, (%esp);calll *(%ebx)": 2,
                "calll *(%eax);cmpl -(%ebp), %edi;jg  <jinit_d_main_controller+>;cmpl $, %edi;jle  <jinit_d_main_controller+>": 1,
                "subl $, %ecx;movl %ecx, -(%ebp);leal (%eax,%ecx,), %esi;cmpl $, -(%ebp);jbe  <jinit_d_main_controller+>": 1,
                "jbe  <jinit_d_main_controller+>;movl -(%ebp), %edx;movl (%edx), %eax;movl $, (%eax);movl (%edx), %eax": 1,
                "cmpl $, (%esi);jne  <jinit_d_main_controller+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <jpeg_alloc_huff_table>": 1,
                "movl %eax, (%esi);movl (%esi), %eax;movl -(%ebp), %edx;movl %edx, (%eax);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edx, (%eax);movl -(%ebp), %edx;movl %edx, (%eax);movzbl -(%ebp), %edx": 1,
                "je  <jinit_d_main_controller+>;movzwl (%esi), %edx;movw %dx, (%edi);movl $, %edx;testb $, %al": 1,
                "je  <jinit_d_main_controller+>;movl -(%ebp), %edx;movl (%edx), %eax;movl $, (%eax);movl (%edx), %eax": 1,
                "movl %edx, (%eax);movl (%edi), %eax;movl %esi, (%eax);movl (%edi), %eax;movl %edi, (%esp)": 1,
                "movl %edi, (%esp);calll *(%eax);jmp  <jinit_d_main_controller+>;movb $, (%eax);movb $, (%eax)": 1,
                "movb $, (%edi);movb $, (%edi);movl $, (%edi);movl $, (%edi);movb $, (%edi)": 1,
                "jne  <jinit_d_main_controller+>;jmp  <jinit_d_main_controller+>;movl $, (%esp);movl $, %ecx;movl $, %edx": 4,
                "movl %esi, -(%ebp);movl %esi, %eax;movl (%esi), %esi;movl (%eax), %ebx;movl (%edi), %eax": 1,
                "jne  <jinit_d_main_controller+>;movl %edi, (%esp);movl -(%ebp), %esi;calll *(%esi);testb %al, %al": 4,
                "shll $, %eax;movl %eax, -(%ebp);subl $, %ebx;je  <jinit_d_main_controller+>;addl $, %esi": 1,
                "movl %eax, -(%ebp);subl $, %ebx;je  <jinit_d_main_controller+>;addl $, %esi;jmp  <jinit_d_main_controller+>": 2,
                "movl (%edi), %eax;movl $, (%esp);movl %edi, (%esp);calll *(%eax);movl -(%ebp), %esi": 1,
                "movl %edi, (%esp);calll *(%eax);movl -(%ebp), %esi;leal (%esi,%esi), %eax;cmpl %eax, -(%ebp)": 1,
                "movl %esi, (%edi);testl %esi, %esi;jle  <jinit_d_main_controller+>;movl %edi, -(%ebp);leal -(%edi), %esi": 1,
                "jle  <jinit_d_main_controller+>;movl (%edi), %eax;movl (%eax), %esi;cmpl %esi, %edx;je  <jinit_d_main_controller+>": 1,
                "jge  <jinit_d_main_controller+>;movl %edx, %esi;addl $, %eax;cmpl %ecx, %eax;jne - <jinit_d_main_controller+>": 1,
                "jmp  <jinit_d_main_controller+>;cmpl %edx, (%esi);je  <jinit_d_main_controller+>;addl $, %eax;addl $, %esi": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;movzbl (%esi), %eax;movl %eax, (%edi);movl -(%ebp), %ebx": 1,
                "subl $, %ebx;je  <jinit_d_main_controller+>;addl $, %eax;jmp  <jinit_d_main_controller+>;movl %edi, (%esp)": 1,
                "movl %esi, (%eax);movl $, (%edi);movl $, %eax;jmp  <jinit_d_main_controller+>;movl (%edi), %eax": 1,
                "calll *(%eax);movl $, (%edi);movl $, %eax;jmp  <jinit_d_main_controller+>;movl (%edi), %esi": 1,
                "movl %edx, -(%ebp);leal -(%ebx,%eax), %eax;movl %eax, -(%ebp);testl %eax, %eax;jle  <jinit_d_main_controller+>": 1,
                "movl (%esi), %edx;leal -(%edx), %esi;movzbl (%eax), %edx;movb %dl, -(%ebp);movzbl %dl, %ecx": 1,
                "jbe  <jinit_d_main_controller+>;movl (%edi), %eax;movl $, (%eax);movl (%edi), %eax;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movl %esi, (%ecx);jmp  <jinit_d_main_controller+>;movl %edi, %eax": 1,
                "movl -(%ebp), %edi;movl (%edi), %eax;movl $, (%esp);movl %edi, (%esp);calll *(%eax)": 1,
                "movl %ebx, (%eax);movl (%edi), %eax;movl %edi, (%esp);calll *(%eax);movl -(%ebp), %edi": 1,
                "cmpl $, (%edi,%ebx,);jne  <jinit_d_main_controller+>;movl %edi, (%esp);calll - <jpeg_alloc_quant_table>;movl %eax, (%edi,%ebx,)": 1,
                "jne  <jinit_d_main_controller+>;movl %edi, (%esp);calll - <jpeg_alloc_quant_table>;movl %eax, (%edi,%ebx,);movl -(%ebp), %edi": 1,
                "jmp  <jinit_d_main_controller+>;movl $, %edi;jmp  <jinit_d_main_controller+>;movl $, %edi;jmp  <jinit_d_main_controller+>": 1,
                "jmp  <jinit_d_main_controller+>;cmpl $, -(%ebp);je  <jinit_d_main_controller+>;testl %eax, %eax;jne  <jinit_d_main_controller+>": 1,
                "movl %ecx, -(%ebp);addl $, %edx;movl -(%ebp), %esi;movl (%esi,%ebx,), %esi;movl -(%ebp), %ecx": 1,
                "addl $, %edx;movl -(%ebp), %esi;movl (%esi,%ebx,), %esi;movl -(%ebp), %ecx;movl -(%ebp), %edi": 1,
                "addl $, %ebx;cmpl $, %edi;jne - <jinit_d_main_controller+>;movl -(%ebp), %esi;movl -(%ebp), %eax": 1,
                "movl (%edi), %ebx;movl (%ebx), %ecx;movl (%ebx), %eax;testl %eax, %eax;jne  <jinit_d_main_controller+>": 1,
                "movl (%ebx), %eax;movzbl (%ecx), %edx;shll $, %edx;movl %edx, -(%ebp);subl $, %eax": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);jmp  <jinit_d_main_controller+>;movl %edi, (%esp);calll *(%ebx)": 2,
                "addl -(%ebp), %eax;cmpl $, %eax;je  <jinit_d_main_controller+>;movl (%edi), %eax;movl $, (%eax)": 2,
                "movl (%ebx), %edx;movl (%ebx), %esi;movzbl (%edx), %eax;shll $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebx), %esi;movzbl (%edx), %eax;shll $, %eax;movl %eax, -(%ebp);subl $, %esi": 1,
                "shll $, %eax;movl %eax, -(%ebp);subl $, %esi;movl %esi, -(%ebp);je  <jinit_d_main_controller+>": 1,
                "testb %al, %al;je  <jinit_d_main_controller+>;movl (%ebx), %esi;movl %esi, -(%ebp);movl (%ebx), %esi": 14,
                "movl $, (%eax);movl (%edi), %eax;movl %esi, (%eax);movl (%edi), %eax;movl $, (%esp)": 1,
                "movl $, (%esp);movl %edi, (%esp);calll *(%eax);movl %esi, (%edi);movl -(%ebp), %eax": 1,
                "jle  <jinit_d_main_controller+>;testl %esi, %esi;jne  <jinit_d_main_controller+>;movl %edi, (%esp);calll *(%ebx)": 1,
                "movzbl (%eax), %eax;addl -(%ebp), %eax;cmpl $, %eax;jne  <jinit_d_main_controller+>;testl %esi, %esi": 3,
                "movl (%ebx), %esi;subl $, %esi;movl -(%ebp), %edx;movzbl (%edx), %eax;addl $, %edx": 4,
                "movzbl (%edx), %eax;shll $, %eax;movl %eax, -(%ebp);movl %edx, %eax;addl $, %eax": 6,
                "addl $, %edx;movl %edx, -(%ebp);testb %al, %al;jne  <jinit_d_main_controller+>;testl %esi, %esi": 2,
                "leal (%eax), %ecx;movl %ecx, -(%ebp);movzbl (%eax), %eax;addl -(%ebp), %eax;je  <jinit_d_main_controller+>": 1,
                "jmp  <jinit_d_main_controller+>;movl (%edi), %edx;movl %edi, (%esp);calll *-(%edx,%eax,);testb %al, %al": 1,
                "jmp - <jinit_d_main_controller+>;movl $, %eax;jmp  <jinit_d_main_controller+>;movl $, %eax;jmp  <jinit_d_main_controller+>": 3,
                "movl (%ebp), %edi;movl (%ebx), %esi;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax": 1,
                "je  <jpeg_resync_to_restart+>;leal -(%edi), %eax;andl $, %eax;addl $, %eax;cmpl %esi, %eax": 2,
                "movl %ebx, (%esp);calll - <jinit_d_main_controller+>;addl $, %esp;popl %ebx;popl %ebp": 1,
                "movl (%ebp), %ebx;movl (%ecx), %esi;movl (%ecx), %eax;movl (%eax), %eax;subl $, %eax": 1,
                "movl (%ecx), %esi;movl (%ecx), %eax;movl (%eax), %eax;subl $, %eax;cmpl %ebx, %eax": 1,
                "je  <jpeg_save_markers+>;movl $, %ebx;cmpl $, %edx;jne  <jpeg_save_markers+>;jmp  <jpeg_save_markers+>": 1,
                "movl $, %ebx;cmpl $, %edx;jne  <jpeg_save_markers+>;movl %ebx, (%esi);movl %eax, (%esi)": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl (%edx), %ecx;cmpl $, %eax;jne  <jpeg_set_marker_processor+>;movl (%ebp), %eax": 1,
                "movl (%edx), %ecx;movl %eax, (%ecx);movl (%edx), %eax;movl %edx, (%esp);calll *(%eax)": 1,
                "pushl %ebx;movl (%ecx), %ebx;cmpl (%edx), %ebx;jne  <jpeg_set_marker_processor+>;cmpl (%ecx), %ebx": 1,
                "cmpb $, (%ebx);je  <jpeg_set_marker_processor+>;cmpl $, (%ebx);jne  <jpeg_set_marker_processor+>;cmpb $, (%ebx)": 1,
                "cmpb $, (%esi);jne  <jpeg_set_marker_processor+>;movl (%ebx), %eax;movl %ebx, (%esp);calll *(%eax)": 1,
                "movl (%ebx), %eax;movzbl (%esi), %edx;movl %edx, (%esp);movl %ebx, (%esp);calll *(%eax)": 1,
                "movl (%ebx), %eax;testl %eax, %eax;je  <jpeg_set_marker_processor+>;movl (%esi), %edx;movl %edx, (%eax)": 1,
                "movl (%edi), %eax;movl $, -(%ebp);testl %eax, %eax;jg  <jpeg_calc_output_dimensions+>;jmp  <jpeg_calc_output_dimensions+>": 1,
                "cmpl %esi, %eax;jl  <jpeg_calc_output_dimensions+>;movl %ecx, %ebx;movl -(%ebp), %edx;imull (%edx), %ebx": 2,
                "imull (%edx), %ebx;addl %ebx, %ebx;movl (%edi), %eax;movl %eax, %edx;sarl $, %edx": 2,
                "idivl %ebx;testl %edx, %edx;je - <jpeg_calc_output_dimensions+>;movl -(%ebp), %eax;movl %esi, (%eax)": 1,
                "cmpl -(%ebp), %eax;jge  <jpeg_calc_output_dimensions+>;movl -(%ebp), %edx;movl %eax, (%edx);jmp  <jpeg_calc_output_dimensions+>": 1,
                "cmpb $, (%edi);jne  <jpeg_calc_output_dimensions+>;movl (%edi), %eax;movl %eax, (%edi);movl %edi, %eax": 1,
                "movl %eax, (%edi);movl %edi, %eax;calll - <jpeg_set_marker_processor+>;testb %al, %al;je  <jpeg_calc_output_dimensions+>": 1,
                "leal (%edx), %edi;movw $, %si;testl $, %edi;je  <jinit_master_decompress+>;movw $, (%edi)": 2,
                "movw $, %si;testl $, %edi;je  <jinit_master_decompress+>;movw $, (%edi);addl $, %edi": 2,
                "testb $, %al;je  <jinit_master_decompress+>;movzwl (%esi), %edx;movw %dx, (%edi);movl $, %edx": 1,
                "testb $, %al;je  <jinit_master_decompress+>;movzbl (%esi,%edx), %eax;movb %al, (%edi,%edx);movl -(%ebp), %eax": 1,
                "calll *(%eax);cmpl $, (%ebx);je  <jinit_master_decompress+>;movb $, (%ebx);movb $, (%ebx)": 1,
                "jmp  <jinit_master_decompress+>;movb $, (%ebx);jmp  <jinit_master_decompress+>;cmpb $, (%ebx);je  <jinit_master_decompress+>": 1,
                "calll  <jinit_merged_upsampler>;jmp  <jinit_master_decompress+>;movl %ebx, (%esp);calll - <jinit_color_deconverter>;movl %ebx, (%esp)": 1,
                "calll  <jinit_upsampler>;movzbl (%ebx), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <jinit_d_post_controller>": 1,
                "cmpb $, (%ebx);je  <jinit_master_decompress+>;movl %ebx, (%esp);calll - <jinit_arith_decoder>;jmp  <jinit_master_decompress+>": 1,
                "cmpb $, (%edx);jne  <jinit_master_decompress+>;cmpb $, (%ebx);setne %al;movzbl %al, %eax": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;addl $, (%eax);jmp  <jinit_master_decompress+>;movb $, (%ebx)": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movb $, (%eax);movl (%edx), %edx;movl %edx, (%eax)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %edi;movl (%edi), %edi": 1,
                "movl %edi, -(%ebp);shrl %edi;movl %edi, -(%ebp);je  <jinit_master_decompress+>;addl %edi, %ecx": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %esi;movzbl (%esi), %ebx;addl $, %esi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %ebx;addl (%ebx,%edi,), %esi;movl %esi, %edx;sarl $, %edx;movl -(%ebp), %esi": 1,
                "addl -(%ebp), %edi;movzbl (%edi,%ecx), %ebx;movb %bl, (%eax);movl -(%ebp), %esi;addl %edx, %esi": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);shrl %edx;movl %edx, -(%ebp);je  <jinit_master_decompress+>": 1,
                "movl -(%ebp), %edx;movl %eax, -(%ebp);movl -(%ebp), %esi;movzbl (%esi), %ecx;addl $, %esi": 1,
                "movl %ebx, %edx;addl %eax, %edx;addl %edx, %edx;addl %edx, -(%ebp);addl %eax, -(%ebp)": 1,
                "movzbl (%edi), %eax;movl -(%ebp), %ecx;movzbl (%ecx), %edx;movl -(%ebp), %ebx;movl (%ebx,%edx,), %ecx": 1,
                "movb %cl, (%esi);movl -(%ebp), %ecx;addl %ebx, %ecx;movzbl (%ecx,%edx), %ebx;movb %bl, (%esi)": 1,
                "movl $, (%esp);movl $, (%esp);movl (%edi), %eax;leal (%ecx,%eax,), %eax;movl %eax, (%esp)": 1,
                "movl $, %eax;movl (%edi), %edx;movl (%ebp), %esi;subl %edx, %esi;movl %esi, -(%ebp)": 1,
                "movl (%ecx,%edx,), %eax;movl %eax, -(%ebp);jmp  <jinit_master_decompress+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movb $, (%ebx);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl (%edx), %eax": 1,
                "cmpb $, (%ebx);jne  <jinit_master_decompress+>;movl (%ebp), %esi;addl $, (%esi);movl -(%ebp), %ebx": 1,
                "movl %eax, (%esp);calll *(%edx);movl $, (%ebx);jmp  <jinit_merged_upsampler+>;cmpl $, (%ebx)": 1,
                "movl $, (%ebx);jmp  <jinit_merged_upsampler+>;cmpl $, (%ebx);jne  <jinit_merged_upsampler+>;movl (%eax), %edx": 1,
                "movl %ecx, %edx;movl %edx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%edi), %eax": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl (%esi), %ecx;movl (%ebp), %edx;leal (%edx,%ecx,), %edx": 1,
                "movl %edi, -(%ebp);movl (%ebp), %esi;movl (%esi), %ebx;cmpl $, (%ebx);jne  <jinit_merged_upsampler+>": 1,
                "movl (%ebp), %esi;movl (%esi), %ebx;cmpl $, (%ebx);jne  <jinit_merged_upsampler+>;movl (%esi), %eax": 2,
                "cmpl $, (%ebx);jne  <jinit_merged_upsampler+>;movl (%esi), %eax;movl $, (%esp);movl (%ebx), %edx": 2,
                "movl $, (%esp);movl (%ebx), %edx;movl %edx, (%esp);movl (%ebx), %edx;movl %edx, (%esp)": 2,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp)": 1,
                "movl (%ebx), %edi;subl %eax, %edi;movl (%ebp), %ecx;movl (%ecx), %edx;movl (%esi), %ecx": 1,
                "movl (%esi), %ecx;subl (%ebx), %ecx;movl %ecx, %eax;cmpl %edi, %ecx;jbe  <jinit_merged_upsampler+>": 1,
                "movl (%esi), %eax;movl %edi, (%esp);movl (%ebp), %ecx;leal (%ecx,%edx,), %edx;movl %edx, (%esp)": 1,
                "leal (%edx,%ecx,), %edx;movl %edx, (%esp);movl %esi, (%esp);calll *(%eax);movl (%ebp), %eax": 1,
                "movl -(%ebp), %edx;leal (%edx,%ebx,), %eax;movl %eax, (%esp);movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "addl (%edx,%ebx,), %eax;movl %eax, (%esp);movl %edi, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "addl $, %edi;addl $, %esi;movl -(%ebp), %eax;cmpl %ebx, (%eax);jg - <jinit_d_post_controller+>": 1,
                "movl -(%ebp), %edx;movl $, (%edx);movl -(%ebp), %ecx;movl (%ecx), %esi;movl (%edi), %edx": 1,
                "movl -(%ebp), %edx;subl %ebx, (%edx);addl (%edx), %ebx;movl %ebx, (%edx);cmpl (%edi), %ebx": 1,
                "movl (%ebp), %ecx;addl $, (%ecx);addl $, %esp;popl %ebx;popl %esi": 1,
                "addl $, %esi;cmpl %esi, (%edi);jg - <jinit_d_post_controller+>;addl $, %esp;popl %ebx": 1,
                "movl %esi, -(%ebp);subl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "jne - <jinit_d_post_controller+>;movl %edi, -(%ebp);cmpl %edx, %ecx;ja - <jinit_d_post_controller+>;movl -(%ebp), %edi": 1,
                "addl $, %eax;movl %eax, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "addl -(%ebp), %edi;addl $, -(%ebp);movl (%ebp), %ebx;cmpl %edi, (%ebx);jg - <jinit_d_post_controller+>": 1,
                "movl (%ebp), %ebx;cmpl %edi, (%ebx);jg - <jinit_d_post_controller+>;addl $, %esp;popl %ebx": 1,
                "movb $, (%eax);cmpb $, (%ebx);je  <jinit_upsampler+>;movl (%ebx), %eax;movl $, (%eax)": 1,
                "movl (%esi), %ecx;movl %ecx, %eax;imull (%esi), %eax;movl %eax, %edx;sarl $, %edx": 1,
                "sarl $, %edx;idivl -(%ebp);movl %eax, -(%ebp);cmpl -(%ebp), %ecx;sete %dl": 1,
                "movl -(%ebp), %edx;movl $, (%edx);jmp  <jinit_upsampler+>;movl -(%ebp), %eax;movl %eax, %edx": 1,
                "idivl -(%ebp);movl -(%ebp), %edx;movb %al, (%edx);movl -(%ebp), %eax;movl %eax, %edx": 1,
                "jmp  <jinit_upsampler+>;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax;movl %ebx, (%esp)": 1,
                "movl -(%ebp), %eax;cmpl %eax, (%ebx);jg - <jinit_upsampler+>;jmp  <jinit_upsampler+>;movl (%ebx), %eax": 1,
                "movl -(%ebp), %edx;calll *%edx;movl -(%ebp), %edx;movl %eax, (%edx);jmp - <jinit_upsampler+>": 1,
                "je  <jpeg_read_coefficients+>;cmpb $, (%ebx);je  <jpeg_read_coefficients+>;movl (%ebx), %edx;leal (%edx,%edx,), %edx": 1,
                "movl $, %edx;cmpb $, (%ecx);je  <jpeg_read_coefficients+>;movl (%ebx), %edx;movl $, (%eax)": 1,
                "je  <jpeg_read_coefficients+>;cmpl $, %eax;je  <jpeg_read_coefficients+>;movl (%ebx), %edx;testl %edx, %edx": 1,
                "movl %edx, (%eax);movl (%ebx), %eax;movl %ebx, (%esp);calll *(%eax);movl $, %eax": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;movl (%edx), %ebx;testl %eax, %eax;jns  <jpeg_read_coefficients+>": 1,
                "cmpl $, (%ebx);je  <jpeg_read_coefficients+>;cmpl $, (%ebx);jle  <jpeg_read_coefficients+>;movl %edx, (%esp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx;movl $, (%edx)": 1,
                "subl %ebx, %esi;movl (%edx,%esi,), %ebx;testl %ebx, %ebx;jne  <jpeg_read_coefficients+>;movl %eax, (%ecx)": 1,
                "testl %ebx, %ebx;jne  <jpeg_read_coefficients+>;movl %eax, (%ecx);movl (%ecx), %eax;movl (%eax), %ebx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;leal -(%ebp), %ebx": 1,
                "movl $, (%eax);popl %ebp;retl;nop;nop": 1,
                "movzbl (%edx), %edx;leal (%ebx,%edx), %esi;movl %esi, -(%ebp);fildl -(%ebp);fld %st()": 1,
                "fsubrp %st();fstps (%eax);fxch %st();fsubrp %st();fxch %st()": 1,
                "flds -(%ebp);fadd %st();fld %st();fsub %st();fmuls ": 1,
                "fld %st();fsub %st();fmuls ;fxch %st();fmuls ": 2,
                "fxch %st();fmuls ;faddp %st();fxch %st();fadds -(%ebp)": 1,
                "fmuls ;faddp %st();fxch %st();fadds -(%ebp);fmulp %st()": 1,
                "fsubrp %st();flds (%eax);flds (%eax);fld %st();fadd %st()": 2,
                "fld %st();fadd %st();fxch %st();fsubp %st();flds (%eax)": 2,
                "fadd %st();fxch %st();fsubp %st();flds (%eax);flds (%eax)": 2,
                "fstps -(%ebp);flds (%eax);fsts -(%ebp);flds (%eax);faddp %st()": 1,
                "fadds -(%ebp);fld %st();fadd %st();fld %st();fsub %st()": 1,
                "fstps (%eax);fld %st();fadd %st();fstps (%eax);fsubrp %st()": 1,
                "fadd %st();fstps (%eax);fsubrp %st();fstps (%eax);addl $, %eax": 1,
                "subl %ecx, %edx;movl %edx, (%eax);movl -(%ebp), %edx;subl -(%ebp), %edx;addl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;subl -(%ebp), %edx;addl -(%ebp), %edx;movl -(%ebp), %ebx;addl -(%ebp), %ebx": 1,
                "imull $, %edx, %edx;sarl $, %edx;addl %ecx, %edx;imull $, %ebx, %ebx;sarl $, %ebx": 1,
                "leal (%ebx,%ecx), %edx;movl %edx, (%edi);subl %ecx, %ebx;movl %ebx, (%edi);movl -(%ebp), %edx": 1,
                "movl %ebx, (%edi);movl -(%ebp), %edx;subl -(%ebp), %edx;addl %eax, %edx;imull $, %edx, %edx": 1,
                "subl %edx, %ecx;movl %ecx, (%edi);addl $, %edi;cmpl -(%ebp), %edi;jne - <jpeg_fdct_ifast+>": 1,
                "leal -(%edx,%esi), %eax;shll $, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edx, %eax": 2,
                "addl (%ebx), %eax;movl (%ebx), %edi;addl (%ebx), %edi;movl (%ebx), %ecx;addl (%ebx), %ecx": 3,
                "movl %edi, -(%ebp);movl (%ebx), %edi;subl (%ebx), %edi;movl %edi, -(%ebp);movl (%ebx), %edi": 6,
                "sarl $, %edx;movl %edx, (%ebx);imull $, %eax, %eax;addl %ecx, %eax;sarl $, %eax": 2,
                "addl -(%ebp), %edi;leal (%edx,%edi), %esi;imull $, %esi, %esi;addl $, %esi;imull $, %eax, %eax": 2,
                "addl $, %esi;imull $, %eax, %eax;imull $, %ecx, %ecx;imull $, %edx, %edx;imull $, %edi, %edi": 2,
                "movl (%ebp), %edi;movl $, %edx;testl $, %edi;je  <jpeg_fdct_x+>;movb $, (%edi)": 13,
                "movl (%ebp), %esi;movl (%ebp), %eax;movl -(%ebp), %ebx;addl (%ebx), %eax;movzbl (%eax), %edi": 1,
                "movl -(%ebp), %ebx;addl -(%ebp), %ebx;movl -(%ebp), %edx;addl %ebx, %edx;leal -(%eax,%edx), %edx": 1,
                "movl -(%ebp), %ecx;subl -(%ebp), %ecx;imull $, %ecx, %ecx;movl -(%ebp), %edx;subl -(%ebp), %edx": 4,
                "movl -(%ebp), %edx;subl -(%ebp), %edx;imull $, %edx, %edx;movl %edx, -(%ebp);addl %ecx, %ebx": 1,
                "movl %edx, %ebx;subl %eax, %ebx;addl %edx, %eax;addl -(%ebp), %edi;imull $, %edi, %edi": 2,
                "addl %edx, %eax;addl -(%ebp), %edi;imull $, %edi, %edi;movl -(%ebp), %edx;addl -(%ebp), %edx": 2,
                "addl $, %esi;addl $, -(%ebp);cmpl -(%ebp), %esi;jne - <jpeg_fdct_x+>;movl (%ebp), %edx": 3,
                "subl %edx, %edi;imull $, %edi, %edi;leal (%esi,%ebx), %edx;leal (%edi,%edx), %edx;sarl $, %edx": 2,
                "leal (%esi,%ebx), %edx;leal (%edi,%edx), %edx;sarl $, %edx;movl %edx, (%ecx);movl -(%ebp), %edx": 2,
                "leal (%edi,%edx), %edx;sarl $, %edx;movl %edx, (%ecx);movl -(%ebp), %edx;subl -(%ebp), %edx": 2,
                "imull $, %eax, %eax;movl %edx, %esi;subl %eax, %esi;addl %edx, %eax;movl -(%ebp), %edx": 2,
                "leal (%eax,%edx), %eax;sarl $, %eax;movl %eax, (%ecx);imull $, -(%ebp), %edi;addl %edi, %ebx": 2,
                "leal -(%edi,%edx), %edx;movl %edx, -(%ebp);shll $, %edx;movl %edx, (%ebx);movl -(%ebp), %edi": 3,
                "addl $, %eax;sarl $, %eax;movl %eax, (%ebx);movl -(%ebp), %eax;addl %ecx, %eax": 3,
                "sarl $, %eax;movl %eax, (%ebx);movl -(%ebp), %eax;addl %ecx, %eax;imull $, %eax, %eax": 3,
                "movl %eax, (%ebx);addl $, %ebx;addl $, -(%ebp);cmpl -(%ebp), %ebx;jne - <jpeg_fdct_x+>": 1,
                "addl $, %edx;movl %edx, -(%ebp);movl (%ebp), %eax;movl (%eax), %edi;movl (%eax), %esi": 5,
                "movl %edx, -(%ebp);movl (%ebp), %eax;movl (%eax), %edi;movl (%eax), %esi;addl %edi, %esi": 2,
                "movl %edi, (%eax);subl -(%ebp), %esi;imull $, %esi, %esi;addl $, %esi;sarl $, %esi": 2,
                "addl $, %ebx;sarl $, %ebx;movl %ebx, (%eax);subl -(%ebp), %edx;imull $, %edx, %edx": 2,
                "movl %ebx, (%eax);subl -(%ebp), %edx;imull $, %edx, %edx;leal (%ecx,%edx), %edx;sarl $, %edx": 2,
                "subl -(%ebp), %edi;movl -(%ebp), %ebx;subl -(%ebp), %ebx;movl %ebx, -(%ebp);subl %edx, %ecx": 2,
                "subl -(%ebp), %ebx;movl %ebx, -(%ebp);subl %edx, %ecx;movl -(%ebp), %ebx;leal -(%eax,%ebx), %edx": 2,
                "leal (%edi,%eax), %edx;sarl $, %edx;movl %edx, (%esi);subl %eax, %edi;addl $, %edi": 2,
                "movl %edi, (%esi);leal (%ecx,%edx), %eax;imull $, %eax, %eax;imull $, %ecx, %ecx;leal (%eax,%ecx), %ecx": 2,
                "movl (%ebp), %esi;movl $, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %edx;movl (%ebp), %ecx": 1,
                "movl %edx, (%esi);leal (%edi,%ebx), %eax;imull $, %eax, %eax;addl $, %eax;imull $, %edi, %edi": 2,
                "movl (%eax), %esi;leal (%edi,%esi), %ecx;movl (%eax), %ebx;movl (%eax), %edx;addl %ebx, %edx": 3,
                "movl %esi, (%eax);subl %edx, %ecx;sarl $, %ecx;movl %ecx, (%eax);leal (%edi,%ebx), %edx": 2,
                "addl %ebx, %edx;sarl $, %edx;movl %edx, (%eax);addl $, %eax;cmpl -(%ebp), %eax": 3,
                "je  <jpeg_fdct_x+>;movb $, (%edi);movl (%ebp), %eax;movl $, %ecx;movl (%ebp), %edx": 1,
                "movzbl (%edx), %ebx;movl -(%ebp), %esi;addl %ebx, %esi;movzbl (%edx), %edx;leal -(%esi,%edx), %edi": 1,
                "testl $, %edi;je  <jpeg_fdct_x+>;movw $, (%edi);addl $, %edi;subl $, %ebx": 1,
                "subl $, %ebx;movl %ebx, %ecx;shrl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi)": 1,
                "je  <jpeg_fdct_x+>;movb $, (%ebx);leal (%ebx), %edi;movw $, %dx;testl $, %edi": 3,
                "testb $, %dl;je  <jpeg_fdct_x+>;movb $, (%edi);movl (%ebp), %eax;movl (%eax), %edx": 1,
                "movzbl (%edx,%eax), %eax;addl $-, %eax;shll $, %eax;movl %eax, (%ebx);popl %ebx": 1,
                "addl %esi, %ecx;movl %ecx, -(%ebp);movzbl (%eax), %edx;movl %edx, -(%ebp);movzbl (%eax), %ebx": 2,
                "addl %ebx, %edx;movl %edx, -(%ebp);movzbl (%eax), %ecx;movzbl (%eax), %edx;leal (%ecx,%edx), %esi": 2,
                "subl -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %esi;subl %ebx, %esi;subl %edx, %ecx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;subl %ebx, %esi;subl %edx, %ecx;movl %ecx, -(%ebp)": 1,
                "addl %eax, %edx;leal -(%ecx,%edx), %ebx;addl %ebx, %ebx;movl %ebx, (%edi);subl %edx, %ecx": 1,
                "leal -(%ecx,%edx), %ebx;addl %ebx, %ebx;movl %ebx, (%edi);subl %edx, %ecx;subl %edx, %ecx": 1,
                "addl $, %ecx;sarl $, %ecx;movl %ecx, (%edi);movl -(%ebp), %edx;subl -(%ebp), %edx": 1,
                "subl -(%ebp), %eax;imull $, %eax, %eax;addl %edx, %eax;leal (%ecx,%eax), %eax;sarl $, %eax": 1,
                "movl %eax, (%edi);movl -(%ebp), %eax;subl -(%ebp), %eax;imull $, %eax, %eax;subl %ecx, %edx": 1,
                "je - <jpeg_fdct_x+>;cmpl $, -(%ebp);je  <jpeg_fdct_x+>;addl $, %edi;jmp - <jpeg_fdct_x+>": 4,
                "addl $, %edi;jmp - <jpeg_fdct_x+>;movl (%ebp), %eax;leal -(%ebp), %edi;movl %edi, -(%ebp)": 1,
                "movl (%eax), %ecx;addl (%eax), %ecx;movl (%eax), %esi;movl (%eax), %ebx;leal (%esi,%ebx), %edi": 1,
                "subl (%eax), %esi;imull $, %esi, %esi;subl -(%ebp), %ecx;imull $, %ecx, %ecx;addl %ebx, %ecx": 1,
                "subl -(%ebp), %ecx;imull $, %ecx, %ecx;addl %ebx, %ecx;leal (%esi,%ecx), %ecx;sarl $, %ecx": 1,
                "leal (%esi,%ecx), %ecx;sarl $, %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;subl %edx, %ecx": 1,
                "sarl $, %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;subl %edx, %ecx;imull $, %ecx, %edx": 1,
                "movzbl (%eax), %edx;movzbl (%eax), %eax;leal (%edx,%eax), %esi;movl %esi, -(%ebp);movl -(%ebp), %esi": 2,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;subl %ebx, %esi;movl -(%ebp), %ebx;subl -(%ebp), %ebx": 2,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;subl -(%ebp), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 4,
                "imull $, %ecx, %ebx;leal (%esi,%ebx), %ebx;sarl $, %ebx;movl %ebx, (%edi);movl -(%ebp), %ebx": 2,
                "movl -(%ebp), %ebx;subl %ecx, %ebx;imull $, %ebx, %ebx;movl -(%ebp), %esi;addl -(%ebp), %esi": 2,
                "subl %ecx, %ebx;imull $, %ebx, %ebx;movl -(%ebp), %esi;addl -(%ebp), %esi;imull $, %esi, %esi": 2,
                "addl %eax, %ecx;imull $, %ecx, %ecx;shll $, %eax;addl %ecx, %eax;subl %edx, %eax": 2,
                "addl $, -(%ebp);cmpl $, -(%ebp);je - <jpeg_fdct_+>;cmpl $, -(%ebp);je  <jpeg_fdct_+>": 1,
                "je - <jpeg_fdct_+>;cmpl $, -(%ebp);je  <jpeg_fdct_+>;addl $, %edi;jmp - <jpeg_fdct_+>": 1,
                "movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl (%ecx), %edi;addl %edx, %edi": 1,
                "movl %ebx, -(%ebp);movl (%ecx), %ebx;addl -(%ebp), %ebx;movl (%ecx), %esi;addl (%ecx), %esi": 1,
                "subl %esi, %edi;leal (%ebx,%edx), %esi;subl %edx, %ebx;movl (%ecx), %edx;subl -(%ebp), %edx": 2,
                "subl -(%ebp), %edx;movl %edx, -(%ebp);movl (%ecx), %edx;subl -(%ebp), %edx;movl %edx, -(%ebp)": 2,
                "imull $, %ebx, %ebx;leal (%eax,%ebx), %eax;sarl $, %eax;movl %eax, (%ecx);movl -(%ebp), %ebx": 2,
                "movl %edx, (%ecx);imull $, -(%ebp), %edx;imull $, -(%ebp), %edi;imull $, -(%ebp), %esi;addl %esi, %edi": 2,
                "subl %eax, %esi;addl $, %esi;sarl $, %esi;movl %esi, (%ecx);addl $, %ecx": 2,
                "movl %edx, -(%ebp);movl (%ebp), %eax;movl -(%ebp), %ecx;movl (%ebp), %ebx;addl (%ebx,%ecx,), %eax": 4,
                "addl -(%ebp), %ebx;imull $, %ebx, %ebx;movl -(%ebp), %edx;addl -(%ebp), %edx;imull $, %edx, %edx": 5,
                "imull $, %esi, %esi;movl %esi, -(%ebp);leal (%ebx,%edx), %edi;addl -(%ebp), %edi;imull $, -(%ebp), %esi": 1,
                "imull $, -(%ebp), %esi;addl %edi, %esi;leal (%ebx,%esi), %ebx;sarl $, %ebx;movl -(%ebp), %esi": 2,
                "addl %ebx, %ecx;leal (%edx,%ecx), %edx;sarl $, %edx;movl %edx, (%esi);addl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);je - <jpeg_fdct_x+>;cmpl $, -(%ebp);je  <jpeg_fdct_x+>;addl $, %edx": 1,
                "movl (%eax), %ebx;addl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %ebx;subl -(%ebp), %ebx": 1,
                "addl $, %ebx;sarl $, %ebx;movl %ebx, (%eax);movl (%eax), %ebx;addl %ebx, %ebx": 1,
                "subl %ebx, %ecx;movl -(%ebp), %edx;subl %ebx, %edx;movl -(%ebp), %esi;addl %ecx, %esi": 1,
                "imull $, -(%ebp), %ecx;addl %esi, %ecx;imull $, %edx, %edx;leal (%ecx,%edx), %edx;sarl $, %edx": 1,
                "movzbl (%eax), %eax;leal (%edx,%eax), %edi;movl -(%ebp), %ecx;addl %edi, %ecx;movl %ecx, -(%ebp)": 2,
                "leal (%edx,%eax), %edi;movl -(%ebp), %ecx;addl %edi, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx": 2,
                "addl -(%ebp), %eax;leal -(%edi,%eax), %eax;movl -(%ebp), %edx;movl %eax, (%edx);movl -(%ebp), %eax": 1,
                "movl (%eax), %esi;addl %ebx, %esi;movl %esi, -(%ebp);movl -(%ebp), %edx;movl (%edx), %edx": 1,
                "movl (%eax), %esi;addl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %esi;addl (%eax), %esi": 2,
                "subl -(%ebp), %edx;movl %edx, -(%ebp);movl (%eax), %ecx;subl (%eax), %ecx;movl (%eax), %edx": 2,
                "subl %esi, %edx;imull $, %edx, %edx;addl $, %edx;sarl $, %edx;movl %edx, (%eax)": 2,
                "addl $, %edx;sarl $, %edx;movl %edx, (%eax);subl %ebx, %edi;imull $, %edi, %edi": 2,
                "addl -(%ebp), %ebx;imull $, %ebx, %ebx;leal (%edi,%ebx), %edx;sarl $, %edx;movl %edx, (%eax)": 2,
                "addl %edi, %eax;addl %esi, %ebx;imull $, %ebx, %ebx;addl %ecx, %edx;imull $, %edx, %edx": 1,
                "movl -(%ebp), %eax;addl -(%ebp), %eax;imull $, %eax, %eax;addl %edx, %eax;movl %eax, -(%ebp)": 3,
                "subl -(%ebp), %ecx;imull $, %ecx, %ecx;movl -(%ebp), %eax;addl -(%ebp), %eax;imull $, %eax, %eax": 1,
                "imull $, -(%ebp), %ebx;addl %ebx, %ecx;movl -(%ebp), %edi;leal (%edi,%ecx), %ecx;sarl $, %ecx": 2,
                "movl -(%ebp), %edi;leal (%edi,%ecx), %ecx;sarl $, %ecx;movl %ecx, (%esi);addl %edx, %eax": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %esi;movl (%esi), %esi;movl %esi, -(%ebp);movl (%eax), %ecx": 1,
                "movl (%eax), %ebx;movl (%eax), %edi;addl %ebx, %edi;movl (%eax), %esi;subl -(%ebp), %esi": 1,
                "addl -(%ebp), %ebx;addl -(%ebp), %ebx;addl -(%ebp), %ebx;addl %edi, %ebx;addl (%eax), %ebx": 1,
                "imull $, %ecx, %esi;addl %esi, %edi;imull $, %edx, %esi;addl %esi, %edi;imull $, -(%ebp), %esi": 1,
                "addl -(%ebp), %edx;imull $, %edx, %edx;addl %edx, %ebx;leal (%esi,%ebx), %edx;sarl $, %edx": 1,
                "addl $, %esi;sarl $, %esi;movl %esi, (%eax);movl -(%ebp), %ebx;addl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ecx;leal (%ecx,%edx), %edx;sarl $, %edx;movl %edx, (%eax);addl $, %eax": 1,
                "movl -(%ebp), %ecx;subl -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx;addl %esi, %ecx": 2,
                "movl %ecx, %ebx;movl -(%ebp), %esi;subl -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %eax;addl -(%ebp), %eax;addl -(%ebp), %eax;movl -(%ebp), %edx": 2,
                "movl -(%ebp), %eax;addl -(%ebp), %eax;imull $, %eax, %eax;imull $, -(%ebp), %ecx;addl %eax, %ecx": 2,
                "addl %eax, %ecx;imull $, %ebx, %edx;leal (%ecx,%edx), %edx;sarl $, %edx;movl %edx, (%edi)": 2,
                "movl %eax, (%edi);movl -(%ebp), %eax;shll $, %eax;imull $, %ebx, %ecx;imull $, %edx, %edx": 2,
                "imull $, %edx, %edx;subl %eax, %edx;leal (%edx,%ecx), %ebx;movl -(%ebp), %ecx;addl %esi, %ecx": 2,
                "movl -(%ebp), %edx;addl -(%ebp), %edx;imull $, %edx, %edx;addl %edx, %ecx;leal (%ebx,%ecx), %edx": 4,
                "je  <jpeg_fdct_x+>;addl $, %edi;jmp - <jpeg_fdct_x+>;movl (%ebp), %ecx;addl $, %ecx": 1,
                "movl %edx, %edi;movl (%eax), %ebx;addl (%edi), %ebx;movl %ebx, -(%ebp);movl (%eax), %esi": 1,
                "movl (%eax), %ecx;addl (%edi), %ecx;movl %ecx, -(%ebp);movl (%eax), %edx;addl (%edi), %edx": 1,
                "movl (%eax), %ebx;addl (%edi), %ebx;movl (%eax), %esi;addl (%eax), %esi;movl -(%ebp), %ecx": 1,
                "movl (%eax), %esi;addl (%eax), %esi;movl -(%ebp), %ecx;addl %esi, %ecx;movl %ecx, -(%ebp)": 1,
                "addl %ebx, %esi;movl -(%ebp), %ecx;subl %ebx, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ebx": 2,
                "subl %ebx, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ebx;addl %edx, %ebx;movl -(%ebp), %ecx": 2,
                "movl -(%ebp), %ecx;subl %edx, %ecx;movl %ecx, -(%ebp);movl (%eax), %edx;subl (%edi), %edx": 2,
                "movl -(%ebp), %ecx;subl %ebx, %ecx;addl -(%ebp), %ecx;subl %edx, %ecx;subl -(%ebp), %ecx": 2,
                "addl -(%ebp), %edx;imull $, %edx, %edx;addl %edx, %ecx;leal (%ebx,%ecx), %edx;imull $, -(%ebp), %esi": 2,
                "subl %ebx, %esi;movl %esi, -(%ebp);subl %edx, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx": 1,
                "leal -(%ebp), %edx;movl (%eax), %ecx;addl (%edx), %ecx;movl %ecx, -(%ebp);movl (%eax), %esi": 1,
                "subl %esi, %edi;movl %edi, -(%ebp);subl %ecx, %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "addl $, %edi;sarl $, %edi;movl %edi, (%eax);addl %esi, %esi;subl %esi, %ebx": 1,
                "movl %ecx, %edi;subl -(%ebp), %edi;imull $, %edi, %edi;addl %edi, %esi;leal (%ebx,%esi), %esi": 1,
                "movl -(%ebp), %edi;subl -(%ebp), %edi;subl -(%ebp), %edi;imull $, %edi, %edi;movl -(%ebp), %ebx": 1,
                "subl -(%ebp), %ebx;subl -(%ebp), %ebx;imull $, %ebx, %ebx;leal (%edi,%ebx), %ebx;sarl $, %ebx": 1,
                "imull $, %ebx, %ebx;addl $, %ebx;sarl $, %ebx;movl %ebx, (%eax);imull $, -(%ebp), %edi": 1,
                "subl %edi, %edx;movl %edx, -(%ebp);movl -(%ebp), %edi;addl %esi, %edi;movl -(%ebp), %edx": 2,
                "movl -(%ebp), %eax;subl %ebx, %eax;imull $, %eax, %eax;subl %esi, %edi;imull $, %edi, %edi": 2,
                "movl %eax, (%edx);movl %ecx, %edx;subl -(%ebp), %edx;imull $, %edx, %edx;movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;subl -(%ebp), %eax;imull $, %eax, %eax;addl %edx, %eax;movl -(%ebp), %edi": 1,
                "imull $, -(%ebp), %edx;addl %edx, %edi;imull $, -(%ebp), %edx;leal (%edi,%edx), %edx;sarl $, %edx": 1,
                "addl %eax, %ebx;imull $, -(%ebp), %edx;addl %edx, %ebx;imull $, -(%ebp), %edx;addl %ebx, %edx": 2,
                "movl -(%ebp), %ebx;addl %ecx, %ebx;movl -(%ebp), %edx;subl %ecx, %edx;movl %edx, -(%ebp)": 2,
                "imull $, -(%ebp), %ebx;leal (%ecx,%ebx), %ecx;sarl $, %ecx;movl %ecx, (%eax);imull $, -(%ebp), %ecx": 2,
                "imull $, -(%ebp), %ebx;addl %ebx, %ecx;movl -(%ebp), %ebx;leal (%ebx,%ecx), %ecx;sarl $, %ecx": 2,
                "movl -(%ebp), %eax;subl -(%ebp), %eax;imull $, %eax, %eax;addl %eax, %edi;movl -(%ebp), %edx": 1,
                "subl -(%ebp), %eax;imull $, %eax, %eax;addl %eax, %edi;movl -(%ebp), %edx;addl -(%ebp), %edx": 1,
                "imull $, -(%ebp), %edi;addl %edi, %ecx;leal (%edx,%ecx), %edx;sarl $, %edx;movl %edx, (%ebx)": 1,
                "cmpl -(%ebp), %ebx;jne - <jpeg_fdct_x+>;addl $, %esp;popl %ebx;popl %esi": 2,
                "subl $, %esp;movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "cmpl %ebx, %eax;jb - <jpeg_fdct_x+>;addl %eax, %edx;testb $, %cl;je  <jpeg_fdct_x+>": 1,
                "addl $, %edi;movb $, %dl;testl $, %edi;je  <jpeg_fdct_x+>;movw $, (%edi)": 1,
                "movl (%ebp), %eax;movl -(%ebp), %ecx;addl (%ecx), %eax;movzbl (%eax), %ebx;movl %ebx, -(%ebp)": 1,
                "addl (%ecx), %eax;movzbl (%eax), %ebx;movl %ebx, -(%ebp);movzbl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "movzbl (%eax), %ecx;movl %ecx, -(%ebp);movzbl (%eax), %ebx;movl %ebx, -(%ebp);movl %ecx, %esi": 1,
                "movl (%ebp), %eax;movl (%eax), %edi;movl (%eax), %esi;addl %edi, %esi;movl (%eax), %edx": 1,
                "movl -(%ebp), %edi;addl -(%ebp), %edi;imull $, %edi, %edi;addl $, %edi;sarl $, %edi": 1,
                "imull $, %ebx, %ebx;movl -(%ebp), %esi;addl %ecx, %esi;imull $, %esi, %esi;leal (%ebx,%esi), %esi": 1,
                "imull $, %ecx, %ecx;addl %ecx, %eax;sarl $, %eax;movl %eax, (%esi);addl $, %esi": 1,
                "addl %ecx, %eax;sarl $, %eax;movl %eax, (%esi);addl $, %esi;addl $, -(%ebp)": 1,
                "movzbl (%eax), %edx;movl %edx, -(%ebp);movzbl (%eax), %ecx;movl %ecx, -(%ebp);movl %edx, %ecx": 1,
                "leal -(%ecx,%esi), %eax;shll $, %eax;movl %eax, (%edi);movl %ecx, %eax;subl %esi, %eax": 1,
                "movl -(%ebp), %eax;addl %ebx, %eax;imull $, %eax, %eax;imull $, -(%ebp), %edx;leal (%eax,%edx), %edx": 1,
                "leal (%ebx,%esi), %esi;sarl $, %esi;movl %esi, (%edi);imull $, -(%ebp), %esi;addl %esi, %ecx": 1,
                "addl %esi, %ecx;leal (%edx,%ecx), %edx;sarl $, %edx;movl %edx, (%edi);imull $, -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;subl %edi, %eax;movl %eax, -(%ebp);movl %esi, %edi;subl -(%ebp), %edi": 1,
                "movl %eax, -(%ebp);movl %esi, %edi;subl -(%ebp), %edi;subl %edx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %edx, (%eax);movl %esi, %eax;addl %eax, %eax;subl %eax, %ecx;subl %eax, %ecx": 1,
                "jmp  <jpeg_fdct_x+>;leal -(%ebp), %ebx;movl (%ebp), %eax;movl -(%ebp), %edx;movl (%ebp), %esi": 1,
                "addl %esi, %ebx;movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl (%eax), %ecx": 1,
                "movl (%ecx), %ebx;addl %edx, %ebx;movl (%ecx), %eax;addl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "movzbl (%edx), %ebx;movzbl (%edx), %ecx;leal (%ebx,%ecx), %esi;movzbl (%edx), %edx;leal -(%esi,%edx), %edi": 1,
                "movzbl (%ecx), %ecx;leal -(%esi,%ecx), %edi;shll $, %edi;movl %edi, (%edx);subl %ecx, %esi": 1,
                "fsubp %st();fld %st();fadd %st();fxch %st();fsubrp %st()": 1,
                "fmuls ;fxch %st();fmuls ;fsubr %st();fsub %st()": 2,
                "fsubrp %st();fxch %st();fmuls ;fsub %st();fxch %st()": 2,
                "jne - <jpeg_idct_float+>;movl -(%ebp), %ebx;movl (%ebp), %esi;leal -(%ebp), %eax;fnstcw -(%ebp)": 1,
                "fsubr %st(), %st();fld %st();fadd %st();fldcw -(%ebp);fistpl -(%ebp)": 1,
                "movb %cl, (%edx);fsubrp %st();fxch %st();fldcw -(%ebp);fistpl -(%ebp)": 1,
                "movb %cl, (%edx);flds -(%ebp);fadd %st();fldcw -(%ebp);fistpl -(%ebp)": 2,
                "movl -(%ebp), %ecx;andl $, %ecx;movzbl (%ebx,%ecx), %ecx;movb %cl, (%edx);fsubp %st()": 1,
                "jne - <jpeg_idct_float+>;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax": 4,
                "movl (%ebp), %eax;movl (%eax), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 4,
                "movzwl (%eax), %ebx;testw %bx, %bx;jne  <jpeg_idct_ifast+>;cmpw $, (%eax);jne  <jpeg_idct_ifast+>": 1,
                "movl %ecx, -(%ebp);movswl (%eax), %ecx;imull (%edx), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %edx": 1,
                "subl %edx, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %edx;addl %edi, %edx;movl %edx, -(%ebp)": 1,
                "addl %edi, %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx;subl %edi, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %edi, %eax;subl %ecx, %eax;leal (%ebx,%edx), %edi;subl %edx, %ebx": 1,
                "imull $, %eax, %eax;sarl $, %eax;addl %ecx, %eax;subl %edx, %eax;subl -(%ebp), %edi": 1,
                "subl %eax, %edi;imull $, %ebx, %ebx;sarl $, %ebx;subl %ecx, %ebx;addl %edi, %ebx": 1,
                "addl %edx, %ecx;movl %ecx, (%esi);movl -(%ebp), %ecx;subl %edx, %ecx;movl %ecx, (%esi)": 1,
                "subl %ebx, %ecx;movl %ecx, (%esi);addl $, %esi;addl $, -(%ebp);addl $, -(%ebp)": 1,
                "sarl $, %edx;andl $, %edx;movzbl (%esi,%edx), %edx;movb %dl, (%ecx);movb %dl, (%ecx)": 1,
                "movb %dl, (%ecx);movb %dl, (%ecx);movb %dl, (%ecx);addl $, %eax;jmp  <jpeg_idct_ifast+>": 1,
                "movl %edx, -(%ebp);leal (%ecx,%ebx), %edx;movl %edx, -(%ebp);movl -(%ebp), %edx;addl %edi, %edx": 1,
                "subl -(%ebp), %edi;subl %ebx, %ecx;imull $, %ecx, %ecx;sarl $, %ecx;movl %ecx, %ebx": 1,
                "addl -(%ebp), %edx;sarl $, %edx;andl $, %edx;movzbl (%esi,%edx), %edx;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movb %dl, (%ecx);movl -(%ebp), %edx;subl -(%ebp), %edx;sarl $, %edx": 2,
                "movl -(%ebp), %edx;addl %edi, %edx;sarl $, %edx;andl $, %edx;movzbl (%esi,%edx), %edx": 4,
                "subl %edi, %edx;sarl $, %edx;andl $, %edx;movzbl (%esi,%edx), %edx;movb %dl, (%ecx)": 1,
                "movl -(%ebp), %ecx;movb %dl, (%ecx);addl $, %eax;addl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl (%eax), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);leal -(%ebp), %edx": 3,
                "movswl -(%eax), %eax;movl -(%ebp), %ebx;imull -(%ebx), %eax;shll $, %eax;movl -(%ebp), %esi": 3,
                "movswl (%eax), %esi;imull (%ebx), %esi;shll $, %edi;shll $, %esi;addl $, %edi": 2,
                "sarl $, %edx;movl %edx, (%esi);movl -(%ebp), %edx;addl %eax, %edx;sarl $, %edx": 3,
                "sarl $, %edx;andl $, %edx;movzbl (%esi,%edx), %edx;movb %dl, (%edi);movb %dl, (%edi)": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %ecx;addl %edi, %ecx;movl %ecx, -(%ebp);subl -(%ebp), %edi": 3,
                "movswl (%ebx), %edx;imull (%esi), %edx;movl -(%ebp), %ebx;subl %edx, %ebx;imull $, %ebx, %ebx": 2,
                "subl -(%ebp), %ecx;imull $, %ecx, %ecx;leal (%ebx,%ecx), %esi;addl -(%ebp), %esi;movl %esi, -(%ebp)": 2,
                "addl -(%ebp), %esi;movl %esi, -(%ebp);imull $, -(%ebp), %esi;addl -(%ebp), %esi;movl %esi, -(%ebp)": 2,
                "leal (%eax,%edx), %esi;movl %esi, -(%ebp);imull $, %esi, %esi;addl -(%ebp), %esi;imull $, %edx, %edx": 2,
                "addl $, -(%ebp);addl $, -(%ebp);addl $, %edi;cmpl -(%ebp), %edi;jne - <jpeg_idct_x+>": 8,
                "imull $, (%eax), %esi;addl %edi, %esi;movl %esi, -(%ebp);movl (%eax), %esi;addl (%eax), %esi": 2,
                "movl %ebx, -(%ebp);movl (%eax), %ebx;addl (%eax), %ebx;imull $, %ebx, %ebx;addl %ebx, %edi": 2,
                "addl %edi, %ecx;sarl $, %ecx;andl $, %ecx;movzbl (%edx,%ecx), %ecx;movl -(%ebp), %esi": 2,
                "sarl $, %ecx;andl $, %ecx;movzbl (%edx,%ecx), %ecx;movl -(%ebp), %esi;movb %cl, (%esi)": 2,
                "addl %ebx, %ecx;sarl $, %ecx;andl $, %ecx;movzbl (%edx,%ecx), %ecx;movb %cl, (%esi)": 2,
                "movl (%eax), %eax;subl $-, %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %edi": 3,
                "subl -(%ebp), %ecx;subl %eax, %ecx;shll $, %ecx;movl -(%ebp), %eax;addl -(%ebp), %eax": 3,
                "sarl $, %edx;movl %edx, (%esi);addl $, %edi;addl $, %ebx;addl $, %esi": 3,
                "cmpl -(%ebp), %esi;jne - <jpeg_idct_x+>;movl (%ebp), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %eax;movl -(%ebp), %edx;movl (%ebp), %edi;movl -(%ebp), %ebx": 2,
                "shll $, %edx;addl $, %edx;movl %edx, -(%ebp);movswl (%edi), %esi;imull (%eax), %esi": 2,
                "leal (%esi,%ecx), %edx;imull $, %edx, %edx;subl %ecx, %esi;imull $, %esi, %esi;movl %esi, -(%ebp)": 2,
                "movl %esi, -(%ebp);movl -(%ebp), %ecx;addl %esi, %ecx;leal (%ecx,%edx), %esi;subl %edx, %ecx": 2,
                "leal (%ecx,%edx), %edi;imull $, %edi, %edi;imull $, %ecx, %ecx;addl %edi, %ecx;imull $, %edx, %edx": 2,
                "addl %edi, %edx;leal (%esi,%ecx), %edi;sarl $, %edi;movl %edi, (%ebx);subl %ecx, %esi": 2,
                "addl $, -(%ebp);addl $, %eax;addl $, %ebx;cmpl -(%ebp), %ebx;jne - <jpeg_idct_x+>": 1,
                "shll $, %edx;movl %edx, -(%ebp);movl (%edi), %ebx;movl (%edi), %ecx;leal (%ebx,%ecx), %edx": 3,
                "movl -(%ebp), %ebx;addl -(%ebp), %ebx;leal (%ebx,%edx), %ecx;subl %edx, %ebx;movl %ebx, -(%ebp)": 2,
                "movl %edi, -(%ebp);subl %ebx, %esi;shll $, %esi;movl %esi, -(%ebp);movswl (%edx), %esi": 3,
                "imull $, %esi, %esi;imull $, %ebx, %ebx;addl %esi, %ebx;movl %ebx, -(%ebp);imull $, %edi, %edi": 3,
                "movl %ebx, -(%ebp);imull $, %edi, %edi;addl %esi, %edi;movl -(%ebp), %esi;addl %ebx, %esi": 3,
                "andl $, %esi;movzbl (%ecx,%esi), %ebx;movb %bl, (%edx);movl -(%ebp), %ebx;subl -(%ebp), %ebx": 3,
                "addl %edi, %ebx;sarl $, %ebx;andl $, %ebx;movzbl (%ecx,%ebx), %ebx;movb %bl, (%edx)": 3,
                "movb %bl, (%edx);addl $, %eax;addl $, -(%ebp);leal -(%ebp), %esi;cmpl %esi, %eax": 3,
                "movb %cl, (%eax);movl -(%ebp), %ecx;subl -(%ebp), %ecx;subl -(%ebp), %ecx;sarl $, %ecx": 2,
                "movl (%edx), %ecx;movswl (%ebx), %edi;imull (%ecx), %edi;movswl (%ebx), %edx;imull (%ecx), %edx": 1,
                "leal (%edx,%ebx), %ebx;subl %ecx, %edx;movl %edx, -(%ebp);movl (%ebp), %ecx;movl (%ebp), %edx": 1,
                "sarl $, %esi;andl $, %esi;movzbl (%eax,%esi), %ebx;movb %bl, (%ecx);movl (%ebp), %ebx": 1,
                "movl (%ebp), %ebx;movl (%ebp), %ecx;addl (%ecx), %ebx;movl -(%ebp), %ecx;addl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;addl -(%ebp), %ecx;sarl $, %ecx;andl $, %ecx;movzbl (%eax,%ecx), %ecx": 4,
                "subl %ebx, %esi;subl %ebx, %esi;movl %esi, -(%ebp);movl %ecx, %ebx;subl %edx, %ebx": 1,
                "subl %ebx, %esi;movl %esi, -(%ebp);movl %ecx, %ebx;subl %edx, %ebx;imull $, %ebx, %ebx": 1,
                "leal (%eax,%ebx), %esi;subl %edx, %esi;movl %esi, -(%ebp);movl %eax, %esi;subl %ebx, %esi": 1,
                "movswl (%edx), %edx;imull (%ecx), %edx;movl -(%ebp), %ebx;movswl (%ebx), %eax;imull (%ecx), %eax": 1,
                "addl %eax, %ecx;imull $, %ecx, %ecx;leal (%esi,%ecx), %ebx;subl %edx, %ebx;movl %ebx, -(%ebp)": 1,
                "subl %eax, %edx;imull $, %edx, %eax;movl -(%ebp), %edx;addl -(%ebp), %edx;sarl $, %edx": 1,
                "sarl $, %eax;movl %eax, (%edi);movl -(%ebp), %eax;subl %ebx, %eax;movl %eax, %ebx": 1,
                "movl -(%ebp), %eax;subl %ebx, %eax;movl %eax, %ebx;sarl $, %ebx;movl %ebx, (%edi)": 1,
                "movl -(%ebp), %ecx;addl (%ecx), %ebx;movl %ebx, -(%ebp);movl (%edi), %esi;addl $, %esi": 1,
                "movl (%edi), %esi;addl %ebx, %esi;imull $, %esi, %esi;imull $, %ebx, %ebx;imull $, (%edi), %ecx": 1,
                "movzbl (%eax,%edx), %edx;movb %dl, (%esi);movl -(%ebp), %esi;subl -(%ebp), %esi;subl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;subl -(%ebp), %esi;subl -(%ebp), %esi;sarl $, %esi;andl $, %esi": 1,
                "movb %dl, (%ecx);addl $, %edi;addl $, -(%ebp);leal -(%ebp), %ebx;cmpl %ebx, %edi": 2,
                "subl -(%ebp), %ecx;addl -(%ebp), %ecx;movl %ecx, -(%ebp);imull $, -(%ebp), %ecx;subl %eax, %edx": 2,
                "movl %ecx, -(%ebp);imull $, -(%ebp), %ecx;subl %eax, %edx;movl %esi, %eax;shll $, %eax": 2,
                "movl %ebx, %eax;subl %esi, %eax;subl -(%ebp), %eax;leal (,%eax,), %esi;imull $, %ebx, %eax": 2,
                "subl %edx, %eax;imull $, %ebx, %ebx;subl %ecx, %ebx;addl %ebx, %edx;movl -(%ebp), %ecx": 2,
                "movl %ecx, (%edi);movl -(%ebp), %ebx;subl %eax, %ebx;movl %ebx, %eax;sarl $, %eax": 2,
                "movl (%esi), %edx;addl $, %edx;shll $, %edx;movl (%esi), %ebx;imull $, %ebx, %edi": 2,
                "movl (%esi), %ebx;movl (%esi), %edi;shll $, %edi;movl %edi, -(%ebp);movl (%esi), %edx": 2,
                "shll $, %edi;movl %edi, -(%ebp);movl (%esi), %edx;leal (%ebx,%edx), %ecx;subl %edx, %ebx": 2,
                "movl %ebx, -(%ebp);movl (%esi), %edx;subl -(%ebp), %edx;shll $, %edx;movl %edx, %edi": 2,
                "subl %ebx, %edx;imull $, (%esi), %ebx;subl %ecx, %ebx;movl %ebx, %ecx;addl -(%ebp), %ecx": 2,
                "andl $, %edx;movzbl (%eax,%edx), %edx;movb %dl, (%ebx);movl -(%ebp), %edx;subl %edi, %edx": 2,
                "sarl $, %edi;andl $, %edi;movzbl (%eax,%edi), %edx;movb %dl, (%ebx);movl -(%ebp), %edx": 2,
                "addl $, -(%ebp);leal -(%ebp), %ebx;cmpl %ebx, %esi;jne - <jpeg_idct_+>;addl $, %esp": 2,
                "leal -(%ebp), %edx;movl %edx, -(%ebp);leal -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ebx": 3,
                "movl %ecx, -(%ebp);movl -(%ebp), %ebx;movswl (%ebx), %eax;movl -(%ebp), %esi;imull (%esi), %eax": 3,
                "addl $, %eax;movl %eax, -(%ebp);movswl (%ebx), %eax;movl %eax, %edi;imull (%esi), %edi": 1,
                "movl -(%ebp), %ebx;imull (%ebx), %edx;movswl (%eax), %eax;imull (%ebx), %eax;movl -(%ebp), %esi": 1,
                "movswl (%eax), %eax;imull (%ebx), %eax;movl -(%ebp), %esi;movswl (%esi), %ebx;movl -(%ebp), %esi": 1,
                "leal (%ecx,%eax), %ebx;imull $, %ebx, %ebx;movl -(%ebp), %edi;addl %ecx, %edi;imull $, %edi, %edi": 1,
                "imull $, %edx, %edi;addl %ecx, %edi;addl %edi, %esi;imull $, %eax, %edi;addl %edi, %ecx": 1,
                "subl %ebx, %esi;movl %esi, %ebx;sarl $, %ebx;movl %ebx, (%ecx);movl -(%ebp), %eax": 1,
                "movl %esi, %ebx;sarl $, %ebx;movl %ebx, (%ecx);movl -(%ebp), %eax;addl %edx, %eax": 1,
                "movl %ebx, (%ecx);movl -(%ebp), %eax;addl %edx, %eax;sarl $, %eax;movl %eax, (%ecx)": 1,
                "movl -(%ebp), %eax;addl %edx, %eax;sarl $, %eax;movl %eax, (%ecx);movl -(%ebp), %eax": 3,
                "movl %ecx, (%eax);addl $, -(%ebp);addl $, -(%ebp);addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%edi), %ebx;subl (%edi), %ebx;imull $, %ebx, %ebx;movl (%edi), %ecx;subl (%edi), %ecx": 1,
                "addl %ebx, %esi;movl %esi, -(%ebp);imull $, (%edi), %ebx;addl %edx, %ebx;addl %ecx, %ebx": 1,
                "movl %esi, -(%ebp);imull $, (%edi), %ebx;addl %edx, %ebx;addl %ecx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%edi), %edx;movl (%edi), %ebx;addl %edx, %ebx;movl (%edi), %ecx;addl %ebx, %ecx": 1,
                "movl (%edi), %esi;addl %edx, %esi;imull $, %esi, %esi;addl -(%ebp), %esi;movl %esi, -(%ebp)": 1,
                "addl %edx, %esi;imull $, %esi, %esi;addl -(%ebp), %esi;movl %esi, -(%ebp);leal (%ebx,%ecx), %esi": 1,
                "movl %esi, -(%ebp);leal (%ebx,%ecx), %esi;addl -(%ebp), %esi;imull $, %edx, %edx;addl %esi, %edx": 1,
                "addl %esi, %ebx;imull $, (%edi), %esi;addl %esi, %edx;leal (%edx,%ecx), %esi;movl (%edi), %edx": 1,
                "movl -(%ebp), %edx;addl %ebx, %edx;sarl $, %edx;andl $, %edx;movzbl (%eax,%edx), %edx": 2,
                "movzbl (%eax,%edx), %edx;movb %dl, (%ecx);movl -(%ebp), %edx;addl %esi, %edx;sarl $, %edx": 1,
                "andl $, %edx;movzbl (%eax,%edx), %edx;movb %dl, (%ecx);movl -(%ebp), %edx;subl %esi, %edx": 1,
                "sarl $, %edx;andl $, %edx;movzbl (%eax,%edx), %edx;movb %dl, (%ecx);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ecx;subl %edx, %ecx;movl %ecx, -(%ebp);addl %eax, %ecx;movl %ecx, -(%ebp)": 2,
                "leal (%ebx,%edx), %eax;leal (%esi,%eax), %ecx;movl %ecx, -(%ebp);subl %eax, %esi;movl %esi, -(%ebp)": 2,
                "movl %ecx, -(%ebp);subl %eax, %esi;movl %esi, -(%ebp);subl -(%ebp), %ebx;subl %edx, %ebx": 2,
                "movl %esi, -(%ebp);subl -(%ebp), %ebx;subl %edx, %ebx;movl -(%ebp), %esi;addl %ebx, %esi": 2,
                "imull $, -(%ebp), %edx;addl %esi, %edx;movl %edx, -(%ebp);movl -(%ebp), %edx;addl %eax, %edx": 2,
                "addl -(%ebp), %esi;addl %ebx, %esi;movl -(%ebp), %ebx;subl %ecx, %ebx;imull $, %eax, %ecx": 2,
                "addl -(%ebp), %edx;sarl $, %edx;movl %edx, (%edi);movl -(%ebp), %edx;subl -(%ebp), %edx": 3,
                "movl %edx, %eax;sarl $, %eax;movl %eax, (%edi);movl -(%ebp), %eax;addl %esi, %eax": 2,
                "movl -(%ebp), %eax;subl %ebx, %eax;sarl $, %eax;movl %eax, (%edi);movl -(%ebp), %eax": 3,
                "leal -(%ebp), %edi;movl %edi, %esi;movl -(%ebp), %edi;movl (%ebp), %eax;movl -(%ebp), %ebx": 2,
                "movl %ebx, -(%ebp);movl (%esi), %ecx;imull $, %ecx, %ebx;shll $, %ecx;movl %ecx, -(%ebp)": 2,
                "addl %eax, %ecx;leal (%ecx,%edx), %ebx;imull $, (%esi), %eax;addl %ebx, %eax;movl %eax, -(%ebp)": 2,
                "imull $, %eax, %eax;movl -(%ebp), %ebx;addl %eax, %ebx;movl %ebx, -(%ebp);imull $, (%esi), %ebx": 2,
                "addl %edx, %eax;addl -(%ebp), %eax;movl %eax, -(%ebp);movl (%esi), %edx;subl (%esi), %edx": 2,
                "addl %eax, %edx;imull $, %ecx, %ecx;addl %eax, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax": 2,
                "imull (%ebx), %eax;movl %eax, -(%ebp);movswl (%ecx), %ecx;imull (%ebx), %ecx;movl -(%ebp), %esi": 1,
                "subl %edx, %ecx;movl %ecx, -(%ebp);imull $, %eax, %ecx;imull $, -(%ebp), %edx;addl -(%ebp), %edx": 1,
                "subl %edx, %ecx;movl %ecx, -(%ebp);imull $, -(%ebp), %ecx;addl %ecx, %eax;subl %edx, %eax": 1,
                "movl %eax, -(%ebp);movswl (%esi), %edx;movl -(%ebp), %ecx;imull (%ecx), %edx;movswl (%esi), %eax": 1,
                "movl %eax, %ecx;sarl $, %ecx;movl %ecx, (%edi);movl -(%ebp), %ecx;subl -(%ebp), %ecx": 1,
                "movl (%edi), %ebx;movl (%edi), %ecx;leal (%ebx,%ecx), %edx;subl %ecx, %ebx;movl %ebx, -(%ebp)": 1,
                "imull $, %edx, %ebx;imull $, -(%ebp), %ecx;addl -(%ebp), %ecx;imull $, (%edi), %esi;subl %ebx, %esi": 1,
                "imull $, (%edi), %esi;subl %ebx, %esi;addl %ecx, %esi;movl %esi, -(%ebp);imull $, (%edi), %esi": 1,
                "movl (%edi), %edx;addl (%edi), %edx;movl %edx, -(%ebp);imull $, %edx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);leal (%esi,%ecx), %ebx;movl -(%ebp), %edx;addl %ebx, %edx;imull $, (%edi), %ebx": 1,
                "addl (%edi), %ecx;imull $, %ecx, %ecx;movl -(%ebp), %ebx;addl %ecx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %ebx;addl %ecx, %ebx;movl %ebx, -(%ebp);imull $, (%edi), %ebx;addl %ebx, %ecx": 1,
                "movl -(%ebp), %edx;addl %ecx, %edx;movl (%edi), %esi;addl (%edi), %esi;imull $, %esi, %esi": 1,
                "movl %ecx, -(%ebp);addl %edx, %esi;movl %esi, -(%ebp);imull $, -(%ebp), %edx;imull $, (%edi), %ebx": 1,
                "addl $, -(%ebp);leal -(%ebp), %ecx;cmpl %ecx, %edi;jne - <jpeg_idct_x+>;addl $, %esp": 1,
                "movswl (%ebx), %eax;imull (%edi), %eax;movswl (%ebx), %ebx;imull (%edi), %ebx;movl %ebx, -(%ebp)": 2,
                "movswl (%ebx), %ebx;imull (%edi), %ebx;movl %ebx, -(%ebp);shll $, %ebx;movl %ebx, -(%ebp)": 2,
                "addl %ecx, %ebx;movl %ebx, -(%ebp);leal (%edx,%eax), %ecx;imull $, %ecx, %ecx;subl -(%ebp), %ecx": 2,
                "leal (%edx,%eax), %ecx;imull $, %ecx, %ecx;subl -(%ebp), %ecx;imull $, %edx, %ebx;addl %ecx, %ebx": 2,
                "movl -(%ebp), %eax;addl %ebx, %eax;sarl $, %eax;movl %eax, (%esi);movl -(%ebp), %eax": 2,
                "movl (%edi), %edx;shll $, %edx;movl %edx, -(%ebp);movl (%edi), %ecx;addl %eax, %ecx": 1,
                "movl (%edi), %edx;addl %eax, %edx;imull $, %edx, %edx;imull $, %ecx, %esi;movl %esi, -(%ebp)": 1,
                "imull $, %edx, %edx;imull $, %ecx, %esi;movl %esi, -(%ebp);addl %edx, %esi;addl -(%ebp), %esi": 1,
                "addl %esi, %ecx;subl (%edi), %eax;movl %eax, -(%ebp);imull $, %eax, %eax;subl -(%ebp), %eax": 1,
                "imull $, %eax, %eax;subl -(%ebp), %eax;movl %eax, -(%ebp);addl %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "subl -(%ebp), %eax;imull $, (%edi), %ecx;addl %eax, %ecx;addl %edx, %ecx;movl %ecx, -(%ebp)": 1,
                "subl (%edi), %eax;imull $, %eax, %eax;movl -(%ebp), %ecx;addl %eax, %ecx;imull $, (%edi), %edx": 1,
                "movb %al, (%ecx);movl -(%ebp), %eax;addl %esi, %eax;sarl $, %eax;andl $, %eax": 2,
                "addl %esi, %eax;sarl $, %eax;andl $, %eax;movzbl (%ebx,%eax), %eax;movb %al, (%ecx)": 2,
                "sarl $, %eax;andl $, %eax;movzbl (%ebx,%eax), %eax;movb %al, (%ecx);addl $, %edi": 1,
                "movswl (%ebx), %ecx;imull (%esi), %ecx;movswl (%ebx), %edx;imull (%esi), %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;subl %esi, %ecx;subl %ebx, %ecx;movl %ecx, -(%ebp);addl -(%ebp), %esi": 1,
                "movl %esi, -(%ebp);imull $, %edx, %edx;imull $, %eax, %eax;movl -(%ebp), %ecx;addl %edx, %ecx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %edx;movswl (%edx), %eax;movl -(%ebp), %ecx;imull (%ecx), %eax": 1,
                "movswl (%esi), %edx;imull (%ebx), %edx;movl %ecx, %ebx;subl %edx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, (%edi);movl -(%ebp), %eax;addl -(%ebp), %eax;sarl $, %eax;movl %eax, (%edi)": 1,
                "subl -(%ebp), %eax;sarl $, %eax;movl %eax, (%edi);addl $, -(%ebp);addl $, -(%ebp)": 1,
                "movl (%ecx), %esi;movl %esi, -(%ebp);movl (%ecx), %ecx;imull $, %ecx, %edx;imull $, %ecx, %ecx": 1,
                "movl %eax, %esi;subl %edx, %esi;movl %esi, -(%ebp);leal (%eax,%ecx), %esi;movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);subl %edx, %ecx;addl %ecx, %ecx;subl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edi;subl %esi, %edi;subl %ecx, %edi;movl %edi, -(%ebp);addl -(%ebp), %esi": 1,
                "movl %eax, %edi;subl -(%ebp), %edi;movl %edi, -(%ebp);imull $, %edi, %esi;addl -(%ebp), %esi": 1,
                "imull $, -(%ebp), %edi;addl %esi, %edi;subl -(%ebp), %edi;imull $, %eax, %ecx;addl %ecx, %esi": 1,
                "movb %al, (%ecx);movl -(%ebp), %ecx;subl %edx, %ecx;sarl $, %ecx;andl $, %ecx": 1,
                "movl -(%ebp), %eax;subl -(%ebp), %eax;subl -(%ebp), %eax;sarl $, %eax;andl $, %eax": 1,
                "cmpl %eax, -(%ebp);jne - <jpeg_idct_x+>;addl $, %esp;popl %ebx;popl %esi": 3,
                "addl -(%ebp), %eax;movl -(%ebp), %edi;addl %ebx, %edi;movl %edi, -(%ebp);movl -(%ebp), %edi": 2,
                "movl -(%ebp), %edi;subl %edx, %edi;movl %edi, -(%ebp);movl -(%ebp), %edx;addl %eax, %edx": 2,
                "subl %edx, %edi;movl %edi, -(%ebp);movl -(%ebp), %edx;addl %eax, %edx;movl %edx, -(%ebp)": 2,
                "imull (%edi), %ecx;movswl (%esi), %eax;imull (%edi), %eax;movswl (%esi), %edx;imull (%edi), %edx": 2,
                "imull $, %ebx, %ebx;imull $, %ecx, %esi;addl %ebx, %esi;movl -(%ebp), %edi;addl %esi, %edi": 2,
                "movl %eax, (%ecx);movl -(%ebp), %eax;subl %ebx, %eax;sarl $, %eax;movl %eax, (%ecx)": 2,
                "addl $, -(%ebp);addl $, -(%ebp);addl $, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ebx": 2,
                "imull $, %ecx, %ecx;leal (%edx,%esi), %edi;movl %edi, -(%ebp);movl %edx, %edi;subl %esi, %edi": 2,
                "movl %edx, %edi;subl %esi, %edi;movl %edi, -(%ebp);leal (%edx,%ecx), %esi;movl %esi, -(%ebp)": 2,
                "movl %esi, -(%ebp);subl %ecx, %edx;movl %edx, -(%ebp);movl (%ebx), %edi;movl %edi, %edx": 2,
                "movl (%ebx), %esi;addl %ecx, %esi;leal (%ecx,%edx), %edi;imull $, %edi, %edi;movl %edi, -(%ebp)": 2,
                "addl %edx, %ecx;imull $, %ecx, %ecx;imull $, %edx, %esi;addl %ecx, %esi;movl -(%ebp), %edi": 2,
                "addl %edx, %ecx;movl (%ebx), %esi;subl (%ebx), %esi;imull $, %esi, %esi;addl %esi, %edi": 2,
                "subl %ecx, %edx;sarl $, %edx;andl $, %edx;movzbl (%eax,%edx), %edx;movb %dl, (%esi)": 2,
                "leal -(%ebp), %eax;movl %eax, %ebx;movl -(%ebp), %eax;movl (%ebp), %edi;movl -(%ebp), %esi": 1,
                "addl %ebx, %ecx;addl %ecx, %esi;imull $, (%edi), %ecx;addl %ecx, %edx;addl -(%ebp), %edx": 1,
                "movzbl (%eax,%edx), %edx;movb %dl, (%ebx);movl -(%ebp), %edx;subl %esi, %edx;sarl $, %edx": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, %esi;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "leal -(%ebp), %eax;movl -(%ebp), %esi;movl (%ebp), %ecx;movl -(%ebp), %edx;addl (%edx), %ecx": 1,
                "addl (%eax), %edx;imull $, %edx, %edx;imull $, (%eax), %ebx;imull $, (%eax), %ecx;movl %ecx, -(%ebp)": 2,
                "movzbl (%esi,%ebx), %edx;movl -(%ebp), %edi;movb %dl, (%edi);addl $, %eax;addl $, -(%ebp)": 2,
                "imull (%ecx), %esi;movswl (%edx), %ebx;imull (%ecx), %ebx;leal (%esi,%ebx), %edi;movl %edi, (%eax)": 1,
                "andl $, %ecx;movzbl (%edx,%ecx), %ecx;movb %cl, (%edi);addl $, %eax;addl $, -(%ebp)": 1,
                "cmpl -(%ebp), %edi;jne - <jpeg_idct_x+>;movl (%ebp), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl %ecx, (%esi);movl -(%ebp), %ecx;subl %edx, %ecx;movl %ecx, %edx": 1,
                "movl %edx, (%esi);movl -(%ebp), %esi;subl %eax, %esi;movl %esi, %eax;sarl $, %eax": 1,
                "imull $, %edi, %edi;imull $, %esi, %esi;addl %edi, %esi;imull $, %ebx, %ebx;addl %edi, %ebx": 1,
                "movl (%edx), %edx;movl (%ebp), %ebx;movl (%ebx), %esi;movswl (%ecx), %ebx;imull (%esi), %ebx": 1,
                "leal (%ebx,%ecx), %esi;sarl $, %esi;andl $, %esi;movzbl (%edx,%esi), %eax;movl (%ebp), %esi": 1,
                "movzbl (%edx,%ebx), %edx;movl (%ebp), %ecx;movl (%ecx), %eax;movb %dl, (%eax,%edi);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);jne  <jpeg_idct_x+>;movl -(%ebp), %edx;movb $, (%edx)": 1,
                "movl (%edx), %eax;movl (%eax,%ecx,), %eax;movl %eax, -(%ebp);subl $, %edi;movl %edi, (%esp)": 1,
                "movl (%eax,%ecx,), %eax;movl %eax, -(%ebp);subl $, %edi;movl %edi, (%esp);movl $, %ecx": 1,
                "movl $, %esi;movl $, %ebx;jmp  <jpeg_idct_x+>;addl $, %ebx;movl %edi, (%esp)": 1,
                "je  <jpeg_idct_x+>;movl -(%ebp), %eax;subl $, %eax;movl -(%ebp), %edx;addl $, %edx": 1,
                "movzbl (%esi), %ebx;movb %bl, (%eax);movzbl (%esi), %ebx;movb %bl, (%edx);subl $, %eax": 1,
                "movl %ecx, -(%ebp);movl (%edx), %edi;movl (%eax), %eax;movl %eax, -(%ebp);cmpl $, (%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);cmpl $, (%ebp);jle  <jpeg_idct_x+>;movl $, -(%ebp)": 3,
                "movl %eax, -(%ebp);cmpl $, (%ebp);jle  <jpeg_idct_x+>;movl $, -(%ebp);movl -(%ebp), %ebx": 2,
                "movl -(%ebp), %ebx;addl %edx, %ebx;movl %ebx, -(%ebp);movl %esi, -(%ebp);movzbl (%eax), %ecx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%edx), %edx;movl (%edx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl (%edx), %esi;movl %esi, -(%ebp);movl (%edx), %edx;movl %edx, -(%ebp)": 1,
                "movl $, %edx;movl %edi, -(%ebp);movzbl (%eax), %ebx;addl -(%ebp), %ebx;movl -(%ebp), %edi": 1,
                "addl $, %edx;andl $, %edx;cmpl -(%ebp), %ecx;jne - <jpeg_idct_x+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;leal (%eax,%eax), %edi;cmpl $, (%esi);jle  <jpeg_idct_x+>": 1,
                "jle  <jpeg_idct_x+>;movl $, %ebx;movl (%esi), %eax;movl %edi, (%esp);movl $, (%esp)": 1,
                "movl (%esi), %eax;movl %edi, (%esp);movl $, (%esp);movl %esi, (%esp);calll *(%eax)": 2,
                "movl (%ebp), %eax;movl (%eax), %edx;movl $, (%edx);movl (%eax), %edx;movl %eax, (%esp)": 2,
                "movl (%edi), %ebx;movl (%ebx), %eax;movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi)": 1,
                "cmpb $, (%ebx);jne  <jpeg_idct_x+>;movl %edi, %eax;calll - <jpeg_idct_x+>;cmpl $, (%ebx)": 1,
                "cmpl $, -(%ebp);jle  <jpeg_idct_x+>;movl -(%ebp), %eax;cmpl (%eax), %ebx;je  <jpeg_idct_x+>": 1,
                "movl -(%ebp), %eax;cmpl (%eax), %ebx;je  <jpeg_idct_x+>;movl $, %eax;movl -(%ebp), %ecx": 1,
                "movl (%edx), %eax;movl $, (%esp);movl $, (%esp);movl %edx, (%esp);calll *(%eax)": 2,
                "movl %eax, -(%ebp);subl $, %ebx;shll $, %ebx;movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl $, %esi;jmp  <jpeg_idct_x+>;movl %ecx, %ebx;movzbl (%esi,%ecx), %eax;imull $, %eax, %eax": 1,
                "cmpl $, %ecx;jne - <jpeg_idct_x+>;addl $, -(%ebp);addl $, %esi;cmpl $, %esi": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;cmpl (%eax), %edx;jl - <jpeg_idct_x+>;jmp  <jpeg_idct_x+>": 1,
                "jl - <jpeg_idct_x+>;jmp  <jpeg_idct_x+>;movl $, (%ebx);movb $, (%ebx);cmpl $, (%ebx)": 1,
                "movl $, (%ebx);movb $, (%ebx);cmpl $, (%ebx);jne  <jpeg_idct_x+>;movl %edi, %eax": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <__mingw_get_msvcrt_handle+>": 3,
                "movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);cmpl $, (%ebp)": 1,
                "subl $, %eax;imull %edi, %eax;movl %eax, -(%ebp);leal (%ebx,%ebx), %edi;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %ebx;negl %ebx;movl %ebx, -(%ebp);movl -(%ebp), %edi;movl %edi, -(%ebp)": 1,
                "movl $, %eax;jmp  <jpeg_idct_x+>;movl -(%ebp), %edx;movl -(%ebp), %ebx;movl (%ebx,%edx,), %edx": 1,
                "movl %ebx, -(%ebp);addl %edi, %ebx;movl -(%ebp), %edi;movw %bx, (%ecx,%edi);movl -(%ebp), %ebx": 1,
                "addl %edx, -(%ebp);addl -(%ebp), %esi;movl %eax, -(%ebp);subl $, -(%ebp);jne - <jpeg_idct_x+>": 1,
                "movl -(%ebp), %ebx;movl %ebx, -(%ebp);movl (%ebp), %edx;movl (%edx,%ebx,), %eax;movl -(%ebp), %ebx": 1,
                "movl (%ecx,%ebx,), %eax;movl -(%ebp), %ebx;movl (%ebx), %ecx;movl -(%ebp), %ebx;movl (%ecx,%ebx,), %ecx": 1,
                "addl $, %eax;andl $, %eax;movl -(%ebp), %ebx;movl %eax, (%ebx);addl $, -(%ebp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %edx, (%esp);calll *(%eax);movl (%ebp), %ecx": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);jle  <jinit_pass_quantizer+>;movl %eax, %edx;movl (%eax), %eax": 1,
                "jle  <jinit_pass_quantizer+>;movl %eax, %edx;movl (%eax), %eax;movl $, (%eax);movl (%edx), %eax": 1,
                "movl %ebx, (%eax);imull %ebx, %ecx;addl $, %eax;cmpl %edx, %eax;jne - <jinit_pass_quantizer+>": 1,
                "movl %eax, %edx;sarl $, %edx;idivl (%ebx);movl (%ebx), %edx;addl $, %edx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %esi;movl (%esi), %edx;movl %edx, (%eax)": 1,
                "movl (%ecx), %eax;movl -(%ebp), %esi;movl %esi, (%eax);movl (%ecx), %eax;movl $, (%esp)": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %edx;movl (%edx,%ebx,), %esi;movl -(%ebp), %eax;movl %eax, %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;movl %edx, -(%ebp);movl %esi, %edx;shll $, %edx": 1,
                "addl $, %edx;cmpl %edi, %edx;jne - <jinit_pass_quantizer+>;movl -(%ebp), %esi;addl -(%ebp), %esi": 1,
                "cmpl -(%ebp), %esi;jge  <jinit_pass_quantizer+>;cmpl $, -(%ebp);jle - <jinit_pass_quantizer+>;movl %esi, %edx": 1,
                "jne  <jinit_pass_quantizer+>;calll - <jpeg_idct_x+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl -(%ebp), %edx;movl (%edx), %edx;movl %edx, -(%ebp);movl -(%ebp), %edx;movl (%edx), %edi": 1,
                "movl -(%ebp), %edx;addl %ecx, %edx;cmpl %edi, -(%ebp);jg  <jinit_pass_quantizer+>;movl -(%ebp), %eax": 2,
                "cmpl $, (%ecx,%eax,);je  <jinit_pass_quantizer+>;jmp  <jinit_pass_quantizer+>;cmpl $, (%edx,%eax,);je  <jinit_pass_quantizer+>": 2,
                "jge - <jinit_pass_quantizer+>;addl $, -(%ebp);subl $-, %ecx;movl -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;addl (%eax,%ebx,), %ecx;movl -(%ebp), %edx;movl %edx, -(%ebp);jmp - <jinit_pass_quantizer+>": 1,
                "jge  <jinit_pass_quantizer+>;movl -(%ebp), %eax;shll $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;addl (%edx,%ecx,), %eax;movl -(%ebp), %edx;addl %eax, %edx;movl %edx, -(%ebp)": 2,
                "jl  <jinit_pass_quantizer+>;movl %esi, %ecx;cmpl %esi, -(%ebp);jge - <jinit_pass_quantizer+>;jmp - <jinit_pass_quantizer+>": 2,
                "addl %eax, %edx;cmpl %edi, -(%ebp);jg  <jinit_pass_quantizer+>;cmpl $, (%eax,%ebx,);jne  <jinit_pass_quantizer+>": 2,
                "movl %ebx, %eax;jmp  <jinit_pass_quantizer+>;movl -(%ebp), %edi;movl %ebx, %eax;movl -(%ebp), %edx": 1,
                "movl %ebx, -(%ebp);jmp  <jinit_pass_quantizer+>;addl $, %eax;subl $-, %edx;cmpl %eax, %edi": 1,
                "imull %ecx, %ecx;imull %edx, %edx;addl %ecx, %edx;imull %eax, %eax;addl %edx, %eax": 1,
                "sarl $, %esi;movl %esi, -(%ebp);movl %edx, %eax;shll $, %eax;leal (%eax), %edi": 1,
                "movl %ecx, -(%ebp);movl %esi, %ecx;shll $, %ecx;leal (%ecx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%esi), %esi;movl %esi, -(%ebp);addl $, %eax;movl %eax, -(%ebp);movl %edi, %eax": 1,
                "movl $, %eax;movl %eax, %ebx;movl -(%ebp), %esi;movzbl (%esi,%eax), %edi;cmpl %edi, -(%ebp)": 1,
                "movl %eax, %ebx;movl -(%ebp), %esi;movzbl (%esi,%eax), %edi;cmpl %edi, -(%ebp);jle  <jinit_pass_quantizer+>": 1,
                "addl %edx, %edx;imull %edx, %edx;subl -(%ebp), %edi;addl %edi, %edi;imull %edi, %edi": 2,
                "jl  <jinit_pass_quantizer+>;subl -(%ebp), %ecx;imull %ecx, %ecx;addl %esi, %ecx;jmp  <jinit_pass_quantizer+>": 1,
                "jle  <jinit_pass_quantizer+>;movl %ecx, -(%ebp);addl $, %eax;cmpl -(%ebp), %eax;jne - <jinit_pass_quantizer+>": 1,
                "movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %eax": 1,
                "movl %edi, -(%ebp);addl %edi, %edx;movl %edx, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movzbl (%edx), %edx;movb %dl, -(%ebp);movzbl %dl, %edx;movl -(%ebp), %ecx;movzbl (%ecx,%edx), %eax": 1,
                "movl -(%ebp), %ecx;subl %eax, %ecx;addl %ecx, %ecx;movl %ecx, %esi;imull %ecx, %esi": 1,
                "movl %edi, %edx;movl %eax, %ebx;imull %eax, %ebx;addl %ebx, %esi;movl %edi, %ebx": 1,
                "movb %bl, (%ecx);addl %edx, %edi;subl $-, %edx;addl $, %eax;addl $, %ecx": 1,
                "subl $-, %edx;addl $, %eax;addl $, %ecx;cmpl -(%ebp), %eax;jne - <jinit_pass_quantizer+>": 1,
                "cmpl %edx, -(%ebp);je  <jinit_pass_quantizer+>;movl %edi, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "addl $, %ecx;subl $-, %esi;cmpl $, %esi;jne - <jinit_pass_quantizer+>;addl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl -(%ebp), %edx;movl (%ebp), %eax;movl (%eax,%edx,), %ebx;movl (%ebp), %eax": 1,
                "movzbl %cl, %edi;shll $, %edi;movl -(%ebp), %edx;addl (%edx,%eax,), %edi;cmpl $, (%edi,%esi,)": 1,
                "movl -(%ebp), %edx;addl (%edx,%eax,), %edi;cmpl $, (%edi,%esi,);jne  <jinit_pass_quantizer+>;movzbl %cl, %ecx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp);movl (%ebx), %edi;movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp);movl (%ebp), %edi": 1,
                "movl (%edi), %edi;movl %edi, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%edi), %eax;movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %edi;movl %edi, -(%ebp)": 1,
                "movl (%ebx,%edi,), %edi;movl %edi, -(%ebp);movl -(%ebp), %ebx;cmpb $, (%ebx);je  <jinit_pass_quantizer+>": 1,
                "movl $, -(%ebp);movl $, %ebx;movl $, %edi;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "addl (%ebx,%edx,), %edi;movl -(%ebp), %ebx;sarl $, %ebx;cmpl $, (%edi,%ebx,);jne  <jinit_pass_quantizer+>": 1,
                "movl -(%ebp), %edi;movw %bx, (%esi,%edi);movl -(%ebp), %ebx;addl %ecx, %ebx;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %ebx;addl %ecx, %ebx;movl -(%ebp), %edi;addl %ebx, %edi;movl %edi, -(%ebp)": 3,
                "movl -(%ebp), %ebx;addl %ecx, %ebx;movl %ebx, -(%ebp);movzwl -(%ebp), %edi;addl %ebx, %edi": 1,
                "movl -(%ebp), %edi;addl %edi, -(%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp  <jinit_pass_quantizer+>;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movzwl -(%ebp), %edi": 1,
                "movw %dx, (%ebx);addl $, -(%ebp);movl (%ebp), %ebx;cmpl %ebx, -(%ebp);jne - <jinit_pass_quantizer+>": 1,
                "movl %ecx, %esi;negl %esi;movl %esi, (%edi);addl $, %edx;testb $, %dl": 1,
                "sete %bl;movzbl %bl, %ebx;addl %ebx, %ecx;subl $, %edi;cmpl $, %edx": 1,
                "cmpl %eax, -(%ebp);jge  <jinit_pass_quantizer+>;movl $, %edx;testl %ebx, %ebx;jle  <jinit_pass_quantizer+>": 1,
                "movl %eax, (%esi);movl (%edx), %eax;movl %eax, (%esi);movl (%edx), %eax;movl %eax, -(%ebp)": 1,
                "addl -(%ebp), %ecx;movl %ecx, %eax;shrl $, %eax;addl %ecx, %eax;sarl %eax": 1,
                "cmpl -(%ebp), %ebx;jne - <jinit_pass_quantizer+>;movl -(%ebp), %edi;movl %ebx, -(%ebp);testl %ebx, %ebx": 1,
                "shll $, %edx;movl %edx, -(%ebp);movl -(%ebp), %eax;negl %eax;shll $, %eax": 1,
                "movl $, %edi;movl -(%ebp), %ecx;shll $, %ecx;movl %ecx, -(%ebp);jmp  <jinit_pass_quantizer+>": 1,
                "movl -(%ebp), %edi;imull %edx, %edi;addl %edi, -(%ebp);leal (,%eax,), %edi;imull %edi, %edx": 1,
                "jge - <jinit_pass_quantizer+>;addl $, -(%ebp);subl $-, -(%ebp);movl -(%ebp), %edx;cmpl %edx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %edi, %ebx;jmp - <jinit_pass_quantizer+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movb %al, (%ecx,%edx);movl (%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %ecx": 2,
                "movb %al, (%ecx,%edx);addl $, -(%ebp);addl $, -(%ebp);movl -(%ebp), %ecx;cmpl %ecx, -(%ebp)": 1,
                "movl (%edx), %ebx;cmpl $, (%esi);je  <jinit_pass_quantizer+>;movl $, (%esi);testb %al, %al": 1,
                "testl %edi, %edi;jg  <jinit_pass_quantizer+>;movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax": 1,
                "movl %esi, (%esp);calll *(%eax);cmpl $, (%esi);jne  <jinit_pass_quantizer+>;movl (%esi), %eax": 1,
                "movl $, %esi;movl $, %eax;movl (%ebx,%esi,), %edi;movl $, %edx;testl $, %edi": 1,
                "movb $, (%edi);addl $, %edi;movw $, %dx;testl $, %edi;je  <jinit_pass_quantizer+>": 1,
                "addl $, %edi;testb $, %dl;je  <jinit_pass_quantizer+>;movb $, (%edi);addl $, %esi": 1,
                "movl %eax, (%edx);movl %ebx, (%edx);jmp  <jinit_pass_quantizer+>;movl -(%ebp), %eax;movl $, (%eax)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);calll *(%edx);movl -(%ebp), %edx": 1,
                "testl %edi, %edi;jle  <jcopy_sample_rows+>;movl (%ebx), %edx;addl $, %ebx;movl (%esi), %eax": 1,
                "movl (%ebx), %eax;cmpl %ecx, %eax;jle  <jcopy_block_row+>;movl %ecx, %eax;movl (%ebx), %esi": 2,
                "testl %edi, %edi;jle  <jcopy_block_row+>;movl $, %esi;leal (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "cmpl %edi, %ecx;jle  <jcopy_block_row+>;movl %edi, %edx;movl (%ebx), %ecx;subl %eax, %ecx": 2,
                "movl %edi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax;movl (%eax,%esi,), %eax": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll *(%ebx);jmp  <jcopy_block_row+>;movl %edi, (%esp)": 2,
                "movl %edi, %eax;calll - <jcopy_block_row+>;movl %ebx, %eax;andl $, %eax;je  <jcopy_block_row+>": 1,
                "jne - <jcopy_block_row+>;movl %edx, -(%ebp);testl %edx, %edx;jne  <jcopy_block_row+>;jmp  <jcopy_block_row+>": 1,
                "movl $, %edx;subl %ebx, %edx;movl %eax, %esi;cmpl %edx, %eax;jbe  <jcopy_block_row+>": 1,
                "cmpl %edx, %eax;jbe  <jcopy_block_row+>;movl %edx, %esi;leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, %esi;leal (%ebx), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx);movl (%eax), %edx;leal (%ebx,%edx), %ecx;movl %ecx, (%eax)": 1,
                "movl %edx, %eax;jmp - <jcopy_block_row+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movzbl (%ebp), %eax;movb %al, -(%ebp);movl (%ebx), %esi;cmpl $, %edi;je  <jcopy_block_row+>": 2,
                "cmpl (%ebx), %eax;jbe  <jcopy_block_row+>;movl %eax, (%ebx);jmp  <jcopy_block_row+>;movl %edi, %edx": 2,
                "jbe  <jcopy_block_row+>;movl %eax, (%ebx);jmp  <jcopy_block_row+>;movl %edi, %edx;subl (%ebx), %edx": 2,
                "andl %edx, %eax;movl %eax, (%ebx);movl $, %ecx;movl %ebx, %edx;movl %esi, %eax": 2,
                "jmp  <jcopy_block_row+>;movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl %esi, (%esp)": 2,
                "cmpb $, (%ebx);jne - <jcopy_block_row+>;jmp - <jcopy_block_row+>;addl $, %esp;popl %ebx": 2,
                "andl $, %eax;je  <jcopy_block_row+>;movl (%ebp), %edx;addl $, %edx;subl %eax, %edx": 1,
                "movl (%ebp), %edx;addl $, %edx;subl %eax, %edx;movl %edx, (%ebp);cmpl $, (%ebp)": 1,
                "jg  <jcopy_block_row+>;movl (%ebp), %ecx;movl (%ecx), %eax;movl $, (%eax);movl (%ecx), %eax": 1,
                "movl %ebx, (%esi);leal (,%edi,), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <jcopy_block_row+>": 1,
                "movl %eax, -(%ebp);testl %edi, %edi;je  <jcopy_block_row+>;movl $, %esi;movl %edi, %eax": 2,
                "testl %edi, %edi;je  <jcopy_block_row+>;movl $, %esi;movl %edi, %eax;subl %esi, %eax": 2,
                "imull %ebx, %eax;movl %eax, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %edx;leal (%edx,%esi,), %ecx;movl -(%ebp), %edx;movl %eax, (%edx);addl -(%ebp), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;movl $, %eax;movl $, %edx;divl (%ebp)": 1,
                "testl %eax, %eax;je  <jcopy_block_row+>;movl $, %edi;movl $, %ebx;cmpl $, (%eax)": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <jcopy_block_row+>;testl %ebx, %ebx;jle  <jcopy_block_row+>": 1,
                "movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <jpeg_mem_available>;movl $, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);jl  <jcopy_block_row+>;movl %edi, (%ebx);jmp  <jcopy_block_row+>;imull -(%ebp), %ecx": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <jpeg_open_backing_store>;movb $, (%ebx);movl (%ebx), %eax": 2,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <jcopy_block_row+>;movl %eax, (%ebx)": 2,
                "movb $, (%ebx);movl (%ebx), %ebx;testl %ebx, %ebx;jne - <jcopy_block_row+>;movl (%esi), %ebx": 1,
                "shll $, %edi;movl %edi, (%esp);leal (%ebx), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl $, (%eax);movl (%esi), %eax;movl %esi, (%esp);calll *(%eax);movl $, (%ebx)": 1,
                "calll *(%eax);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%esp);movl %eax, (%esp);calll *;testl %eax, %eax;jle  <jinit_memory_mgr+>": 1,
                "jne  <jinit_memory_mgr+>;imull $, -(%ebp), %eax;movl %eax, -(%ebp);imull $, -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;popl %ebp;retl;pushl %ebp": 3,
                "cmpl %ebx, %eax;je  <_CRT_INIT@+>;movl $, (%esp);calll *%esi;subl $, %esp": 1,
                "je  <_CRT_INIT@+>;movl , %eax;movl %eax, (%esp);calll  <_decode_pointer>;movl %eax, %ebx": 1,
                "movl %edx, %ebx;movl %ecx, %edi;movl %edx, ;testl %edx, %edx;jne  <_CRT_INIT@+>": 1,
                "movl %eax, %esi;testl %eax, %eax;jne  <_CRT_INIT@+>;cmpl $, %ebx;jne  <_CRT_INIT@+>": 1,
                "movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <_CRT_INIT@>;subl $, %esp": 2,
                "subl $, %esp;jmp  <_CRT_INIT@+>;cmpl $, %ebx;jne  <_CRT_INIT@+>;calll  <__main>": 1,
                "movl %edi, (%esp);movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <__main+>": 1,
                "popl %ebp;retl $;nop;nop;nop": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <mingw_onexit>;cmpl $, %eax;sbbl %eax, %eax": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <__mingw_TLScallback>": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx": 1,
                "movl $, (%esp);calll  <__mingw_get_msvcrt_handle+>;subl $, %esp;movl %eax, ;testl %eax, %eax": 1,
                "calll  <__mingw_get_msvcrt_handle+>;subl $, %esp;movl %eax, ;movl $, (%esp);movl , %eax": 1,
                "movl %eax, (%esp);calll  <__mingw_get_msvcrt_handle+>;subl $, %esp;movl %eax, ;movl , %edx": 1,
                "je  <__dyn_tls_init@+>;cmpl $, ;je  <__dyn_tls_init@+>;testl %eax, %eax;jne  <__dyn_tls_init@+>": 1,
                "cmpl $, ;je  <__dyn_tls_init@+>;testl %eax, %eax;jne  <__dyn_tls_init@+>;jmp  <__dyn_tls_init@+>": 1,
                "movl $, ;jmp  <__dyn_tls_init@+>;movl $, ;jmp  <__dyn_tls_init@+>;cmpl $, ": 1,
                "calll  <__mingw_get_msvcrt_handle+>;subl $, %esp;jmp - <__dyn_tls_init@+>;movl $, ;movl $, ": 1,
                "calll  <_GetPEImageBase>;movl -(%ebp), %edx;addl (%edx), %eax;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "addl , %ebx;movl %ebx, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll  <__mingw_get_msvcrt_handle+>;movl -(%ebp), %eax;cmpl $, %eax;je  <_encode_pointer+>;cmpl $, %eax": 1,
                "popl %edi;popl %ebp;retl;cmpl $, ;jne  <_encode_pointer+>": 1,
                "jmp  <_encode_pointer+>;movl $, %ebx;jmp  <_encode_pointer+>;movl $, %ebx;cmpl $, %ebx": 1,
                "movl (%edx), %edx;addl (%ebx), %edx;movl %edx, -(%ebp);movl $, %ecx;leal -(%ebp), %edx": 1,
                "movl $, %ebx;movl (%ebx), %eax;cmpl $, %eax;je  <_encode_pointer+>;movl %eax, (%esp)": 1,
                "cmpl $, %eax;je  <_encode_pointer+>;movl %eax, (%esp);movl $, (%esp);calll - <_encode_pointer+>": 1,
                "calll - <_encode_pointer+>;addl $, %ebx;cmpl $, %ebx;jae  <_encode_pointer+>;movl (%ebx), %ecx": 1,
                "movzbl (%ebx), %edx;cmpl $, %edx;je  <_encode_pointer+>;cmpl $, %edx;je  <_encode_pointer+>": 1,
                "movl , %eax;movl (%eax), %eax;testl %eax, %eax;je  <__do_global_dtors+>;pushl %ebp": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <__do_global_dtors+>;pushl %ebp;movl %esp, %ebp": 1,
                "jne - <__do_global_dtors+>;popl %ebp;rep  retl;pushl %ebp;movl %esp, %ebp": 1,
                "je  <__do_global_ctors+>;calll *(,%ebx,);subl $, %ebx;nop;jne - <__do_global_ctors+>": 1,
                "popl %ebp;retl;cmpl $, ;jne  <__main+>;pushl %ebp": 1,
                "movl %eax, (%esp);calll  <__mingw_get_msvcrt_handle+>;subl $, %esp;movl $, %eax;leave": 1,
                "movl $, (%esp);calll  <__mingw_get_msvcrt_handle+>;subl $, %esp;movl $, (%esp);calll  <__mingw_get_msvcrt_handle+>": 1,
                "calll  <__mingw_get_msvcrt_handle+>;subl $, %esp;movl , %ebx;testl %ebx, %ebx;je  <__report_gsfailure+>": 1,
                "subl $, %esp;movl %eax, %esi;calll  <__mingw_get_msvcrt_handle+>;testl %eax, %eax;jne  <__report_gsfailure+>": 1,
                "jne  <__report_gsfailure+>;testl %esi, %esi;je  <__report_gsfailure+>;movl (%ebx), %eax;movl %esi, (%esp)": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl , %eax": 1,
                "testl %eax, %eax;je  <___w_mingwthr_remove_key_dtor+>;movl $, (%esp);calll  <__mingw_get_msvcrt_handle+>;subl $, %esp": 1,
                "testl %edx, %edx;jne  <___w_mingwthr_remove_key_dtor+>;movl %eax, %edx;movl (%edx), %eax;movl %eax, ": 1,
                "movl %eax, (%esp);calll  <__mingw_get_msvcrt_handle+>;jmp  <___w_mingwthr_remove_key_dtor+>;movl %eax, %edx;movl (%edx), %eax": 1,
                "subl $, %esp;movl (%ebp), %eax;cmpl $, %eax;je  <__mingw_TLScallback+>;cmpl $, %eax": 1,
                "testl %eax, %eax;jne  <__mingw_TLScallback+>;movl $, (%esp);calll  <__mingw_get_msvcrt_handle+>;subl $, %esp": 1,
                "jmp  <__mingw_TLScallback+>;calll - <__report_gsfailure+>;movl , %eax;cmpl $, %eax;jne  <__mingw_TLScallback+>": 1,
                "nop;nop;nop;pushl %ecx;pushl %eax": 1,
                "jne  <_ValidateImageBase+>;addl (%edx), %edx;cmpl $, (%edx);jne  <_ValidateImageBase+>;cmpw $, (%edx)": 1,
                "jne  <_ValidateImageBase+>;cmpw $, (%edx);sete %al;movzbl %al, %eax;popl %ebp": 1,
                "testl %eax, %eax;je  <_FindPESectionByName+>;movl , %eax;movzwl (%eax), %edx;addl $, %eax": 1,
                "cmpl -(%ebp), %edi;jb - <_FindPESectionByName+>;movl $, %ebx;jmp  <_FindPESectionByName+>;movl $, %ebx": 1,
                "movl $, %ebx;jmp  <_FindPESectionByName+>;movl $, %ebx;jmp  <_FindPESectionByName+>;movl $, %ebx": 2,
                "jmp  <_FindPESectionByName+>;movl $, %ebx;jmp  <_FindPESectionByName+>;movl $, %ebx;jmp  <_FindPESectionByName+>": 1,
                "jmp  <_FindPESectionByName+>;movl $, %ebx;movl %ebx, %eax;addl $, %esp;popl %ebx": 1,
                "je  <_FindPESectionExec+>;movl , %edx;movzwl (%edx), %eax;addl $, %edx;leal (%edx,%eax), %eax": 1,
                "je  <_FindPESectionExec+>;subl $, %ebx;addl $, %edx;addl $, %eax;cmpl %ecx, %edx": 1,
                "calll - <_ValidateImageBase>;cmpl $, %eax;sbbl %eax, %eax;notl %eax;andl $, %eax": 1,
                "je  <__mingw_enum_import_library_names+>;movl %esi, (%esp);movl $, (%esp);calll - <_FindPESection>;testl %eax, %eax": 1,
                "movl %esi, %eax;addl $, %eax;je  <__mingw_enum_import_library_names+>;cmpl $, (%eax);jne  <__mingw_enum_import_library_names+>": 1,
                "subl $, %ebx;addl $, %eax;jmp - <__mingw_enum_import_library_names+>;movl $, %eax;jmp  <__mingw_enum_import_library_names+>": 1,
                "jmp  <__mingw_enum_import_library_names+>;movl $, %eax;jmp  <__mingw_enum_import_library_names+>;movl $, %eax;addl $, %esp": 1,
                "andl $-, %ecx;cmpb $, %cl;jne  <__mingw_get_msvcrt_handle+>;movzbl (%eax), %ecx;andl $-, %ecx": 4
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                ".text": 1,
                "P`.data": 1,
                ".rdata": 1,
                "0@.bss": 1,
                ".edata": 1,
                "0@.idata": 1,
                ".reloc": 1,
                "0B.rossym": 1,
                ";C r ": 1,
                "$[^_]": 18,
                "<[^_]": 13,
                ",[^_]": 23,
                "L[^_]": 3,
                "\\[^_]": 5,
                ";C8}k": 1,
                "0[^_]": 3,
                " [^_]": 5,
                "$;C(u": 2,
                "C$9CLt": 1,
                "@, zRs": 1,
                "l[^_]": 3,
                "9O4u8": 1,
                "F 9G0ul": 1,
                "_4)G0": 1,
                "G<9G4}.": 1,
                "O<9O4ue": 1,
                "4[^_]": 8,
                "D[^_]": 4,
                "P[^_]": 3,
                "8[^_]": 2,
                "9AL~9": 1,
                ";y8}%": 1,
                "C`9Cxs": 1,
                "9{xtG": 1,
                "Cx;C`r": 1,
                "Cx;C`r ": 2,
                "T[^_]": 3,
                "X;{$|": 2,
                "d[^_]": 1,
                "@[^_]": 1,
                "9{$~D": 1,
                "~H9~4": 2,
                "X;K$|": 1,
                "u1;Y|u,;": 1,
                "9P\\|h": 1,
                "V +V`": 2,
                "J$[^_]": 1,
                "|[^_]": 1,
                "P@+W`": 2,
                "H`+O@": 2,
                "x`+z`": 1,
                "H[^_]": 1,
                "([^_]": 1,
                "h[^_]": 2,
                "t[^_]": 1,
                "5h1Ts": 1,
                "(@Ts9": 1,
                "%L1Ts": 1,
                "%X1Ts": 1,
                "%<1Ts": 1,
                "%$1Ts": 1,
                "%|1Ts": 1,
                "%x1Ts": 1,
                "%41Ts": 1,
                "%@1Ts": 1,
                "%,1Ts": 1,
                "%01Ts": 1,
                "%D1Ts": 1,
                "%`1Ts": 1,
                "%d1Ts": 1,
                "%t1Ts": 1,
                "%(1Ts": 1,
                "%l1Ts": 1,
                "% 1Ts": 1,
                "%p1Ts": 1,
                "%T1Ts": 1,
                "%H1Ts": 1,
                "%81Ts": 1,
                "%\\1Ts": 1,
                "Z@&LHA'": 1,
                "MQC,ARD": 1,
                "/TF<)VGy#WH": 1,
                "Q2XXR": 1,
                "YpU_Z": 1,
                "Da\\\">c]$8c^": 1,
                "VeaFOfb": 1,
                "Ahd=<c]^7if1Rjg": 1,
                "Lkh9Fgc^A": 1,
                "j'Vlk": 1,
                "UokOP": 1,
                "Zpm\"U": 1,
                ";QsP:Qs": 1,
                ";Qsp;Qs": 1,
                "sAmTb": 2,
                "BKbhTb~XBK!;": 2,
                "A!;I2": 2,
                "%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz": 1,
                "&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz": 1,
                "GRs>GRscGRs": 1,
                "GRs;MRs": 1,
                "VRsLFRs": 1,
                "GRsOMRs": 1,
                "VRscPRs": 1,
                "VRslVRslVRslVRslVRslVRslVRslVRslVRslVRslVRslVRslVRslVRslVRslVRslVRs": 1,
                "VRscQRs": 1,
                "NRs}WRs": 1,
                "Bogus message code %d": 1,
                "ALIGN_TYPE is wrong, please fix": 1,
                "MAX_ALLOC_CHUNK is wrong, please fix": 1,
                "Bogus buffer control mode": 1,
                "Invalid component ID %d in SOS": 1,
                "Invalid crop request": 1,
                "DCT coefficient out of range": 1,
                "DCT scaled block size %dx%d not supported": 1,
                "Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c": 1,
                "Bogus Huffman table definition": 1,
                "Bogus input colorspace": 1,
                "Bogus JPEG colorspace": 1,
                "Bogus marker length": 1,
                "Wrong JPEG library version: library is %d, caller expects %d": 1,
                "Sampling factors too large for interleaved scan": 1,
                "Invalid memory pool code %d": 1,
                "Unsupported JPEG data precision %d": 1,
                "Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d": 1,
                "Invalid progressive parameters at scan script entry %d": 1,
                "Bogus sampling factors": 1,
                "Invalid scan script at entry %d": 1,
                "Improper call to JPEG library in state %d": 1,
                "JPEG parameter struct mismatch: library thinks size is %u, caller expects %u": 1,
                "Bogus virtual array access": 1,
                "Buffer passed to JPEG library is too small": 1,
                "Suspension not allowed here": 1,
                "CCIR601 sampling not implemented yet": 1,
                "Too many color components: %d, max %d": 1,
                "Unsupported color conversion request": 1,
                "Bogus DAC index %d": 1,
                "Bogus DAC value 0x%x": 1,
                "Bogus DHT index %d": 1,
                "Bogus DQT index %d": 1,
                "Empty JPEG image (DNL not supported)": 1,
                "Read from EMS failed": 1,
                "Write to EMS failed": 1,
                "Didn't expect more than one scan": 1,
                "Input file read error": 1,
                "Output file write error --- out of disk space?": 1,
                "Fractional sampling not implemented yet": 1,
                "Huffman code size table overflow": 1,
                "Missing Huffman code table entry": 1,
                "Maximum supported image dimension is %u pixels": 1,
                "Empty input file": 1,
                "Premature end of input file": 1,
                "Cannot transcode due to multiple use of quantization table %d": 1,
                "Scan script does not transmit all data": 1,
                "Invalid color quantization mode change": 1,
                "Not implemented yet": 1,
                "Requested feature was omitted at compile time": 1,
                "Arithmetic table 0x%02x was not defined": 1,
                "Backing store not supported": 1,
                "Huffman table 0x%02x was not defined": 1,
                "JPEG datastream contains no image": 1,
                "Quantization table 0x%02x was not defined": 1,
                "Not a JPEG file: starts with 0x%02x 0x%02x": 1,
                "Insufficient memory (case %d)": 1,
                "Cannot quantize more than %d color components": 1,
                "Cannot quantize to fewer than %d colors": 1,
                "Cannot quantize to more than %d colors": 1,
                "Invalid JPEG file structure: %s before SOF": 1,
                "Invalid JPEG file structure: two SOF markers": 1,
                "Invalid JPEG file structure: missing SOS marker": 1,
                "Unsupported JPEG process: SOF type 0x%02x": 1,
                "Invalid JPEG file structure: two SOI markers": 1,
                "Failed to create temporary file %s": 1,
                "Read failed on temporary file": 1,
                "Seek failed on temporary file": 1,
                "Write failed on temporary file --- out of disk space?": 1,
                "Application transferred too few scanlines": 1,
                "Unsupported marker type 0x%02x": 1,
                "Virtual array controller messed up": 1,
                "Image too wide for this implementation": 1,
                "Read from XMS failed": 1,
                "Write to XMS failed": 1,
                "Copyright (C) 2013, Thomas G. Lane, Guido Vollbeding": 1,
                "9  13-Jan-2013": 1,
                "Caution: quantization tables are too coarse for baseline JPEG": 1,
                "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d": 1,
                "Unknown APP0 marker (not JFIF), length %u": 1,
                "Unknown APP14 marker (not Adobe), length %u": 1,
                "Define Arithmetic Table 0x%02x: 0x%02x": 1,
                "Define Huffman Table 0x%02x": 1,
                "Define Quantization Table %d  precision %d": 1,
                "Define Restart Interval %u": 1,
                "Freed EMS handle %u": 1,
                "Obtained EMS handle %u": 1,
                "End Of Image": 1,
                "        %3d %3d %3d %3d %3d %3d %3d %3d": 1,
                "JFIF APP0 marker: version %d.%02d, density %dx%d  %d": 1,
                "Warning: thumbnail image size does not match data length %u": 1,
                "JFIF extension marker: type 0x%02x, length %u": 1,
                "    with %d x %d thumbnail image": 1,
                "Miscellaneous marker 0x%02x, length %u": 1,
                "Unexpected marker 0x%02x": 1,
                "        %4u %4u %4u %4u %4u %4u %4u %4u": 1,
                "Quantizing to %d = %d*%d*%d colors": 1,
                "Quantizing to %d colors": 1,
                "Selected %d colors for quantization": 1,
                "At marker 0x%02x, recovery action %d": 1,
                "RST%d": 1,
                "Smoothing not supported with nonstandard sampling ratios": 1,
                "Start Of Frame 0x%02x: width=%u, height=%u, components=%d": 1,
                "    Component %d: %dhx%dv q=%d": 1,
                "Start of Image": 1,
                "Start Of Scan: %d components": 1,
                "    Component %d: dc=%d ac=%d": 1,
                "  Ss=%d, Se=%d, Ah=%d, Al=%d": 1,
                "Closed temporary file %s": 1,
                "Opened temporary file %s": 1,
                "JFIF extension marker: JPEG-compressed thumbnail image, length %u": 1,
                "JFIF extension marker: palette thumbnail image, length %u": 1,
                "JFIF extension marker: RGB thumbnail image, length %u": 1,
                "Unrecognized component IDs %d %d %d, assuming YCbCr": 1,
                "Freed XMS handle %u": 1,
                "Obtained XMS handle %u": 1,
                "Unknown Adobe color transform code %d": 1,
                "Corrupt JPEG data: bad arithmetic code": 1,
                "Inconsistent progression sequence for component %d coefficient %d": 1,
                "Corrupt JPEG data: %u extraneous bytes before marker 0x%02x": 1,
                "Corrupt JPEG data: premature end of data segment": 1,
                "Corrupt JPEG data: bad Huffman code": 1,
                "Warning: unknown JFIF revision number %d.%02d": 1,
                "Premature end of JPEG file": 1,
                "Corrupt JPEG data: found marker 0x%02x instead of RST%d": 1,
                "Invalid SOS parameters for sequential JPEG": 1,
                "Application transferred too many scanlines": 1,
                "?u='@": 1,
                "JPEGMEM": 1,
                "%ld%c": 1,
                "mingwm10.dll": 1,
                "__mingwthr_remove_key_dtor": 1,
                "__mingwthr_key_dtor": 1,
                "SsMingw-w64 runtime failure:": 1,
                "Address %p has no image-section": 1,
                "  VirtualQuery failed for %d bytes at address %p": 1,
                "  VirtualProtect failed with code 0x%x": 1,
                "  Unknown pseudo relocation protocol version %d.": 1,
                "  Unknown pseudo relocation bit size %d.": 1,
                "libgcc.a.dbg": 1,
                "libjpeg.dll": 1,
                "DllEntryPoint@12": 1,
                "_CRT_INIT@12": 1,
                "_CRT_MT": 2,
                "_FindPESection": 2,
                "_FindPESectionByName": 2,
                "_FindPESectionExec": 2,
                "_GetPEImageBase": 2,
                "_IsNonwritableInCurrentImage": 2,
                "_ValidateImageBase": 2,
                "__RUNTIME_PSEUDO_RELOC_LIST_END__": 2,
                "__RUNTIME_PSEUDO_RELOC_LIST__": 2,
                "___w64_mingwthr_add_key_dtor": 2,
                "___w64_mingwthr_remove_key_dtor": 2,
                "__chkstk_ms": 2,
                "__do_global_ctors": 2,
                "__do_global_dtors": 2,
                "__dyn_tls_init@12": 1,
                "__dyn_tls_init_callback": 2,
                "__main": 2,
                "__mingw_GetSectionCount": 2,
                "__mingw_GetSectionForAddress": 2,
                "__mingw_TLScallback": 2,
                "__mingw_enum_import_library_names": 2,
                "__mingw_gMTKeyDtor": 2,
                "__mingw_gMTRemoveKeyDtor": 2,
                "__mingw_get_msvcrt_handle": 2,
                "__mingw_usemthread_dll": 2,
                "__native_dllmain_reason": 2,
                "__native_startup_lock": 2,
                "__native_startup_state": 2,
                "__native_vcclrit_reason": 2,
                "__onexitbegin": 2,
                "__onexitend": 2,
                "__report_gsfailure": 2,
                "__security_cookie": 2,
                "__security_cookie_complement": 2,
                "__security_init_cookie": 2,
                "__tlregdtor": 2,
                "__xc_a": 2,
                "__xc_z": 2,
                "__xi_a": 2,
                "__xi_z": 2,
                "__xl_a": 2,
                "__xl_c": 2,
                "__xl_d": 2,
                "__xl_z": 2,
                "_decode_pointer": 2,
                "_encode_pointer": 2,
                "_tls_end": 2,
                "_tls_index": 2,
                "_tls_start": 2,
                "_tls_used": 2,
                "atexit": 2,
                "jcopy_block_row": 2,
                "jcopy_sample_rows": 2,
                "jdiv_round_up": 2,
                "jinit_1pass_quantizer": 2,
                "jinit_2pass_quantizer": 2,
                "jinit_arith_decoder": 2,
                "jinit_arith_encoder": 2,
                "jinit_c_coef_controller": 2,
                "jinit_c_main_controller": 2,
                "jinit_c_master_control": 2,
                "jinit_c_prep_controller": 2,
                "jinit_color_converter": 2,
                "jinit_color_deconverter": 2,
                "jinit_compress_master": 2,
                "jinit_d_coef_controller": 2,
                "jinit_d_main_controller": 2,
                "jinit_d_post_controller": 2,
                "jinit_downsampler": 2,
                "jinit_forward_dct": 2,
                "jinit_huff_decoder": 2,
                "jinit_huff_encoder": 2,
                "jinit_input_controller": 2,
                "jinit_inverse_dct": 2,
                "jinit_marker_reader": 2,
                "jinit_marker_writer": 2,
                "jinit_master_decompress": 2,
                "jinit_memory_mgr": 2,
                "jinit_merged_upsampler": 2,
                "jinit_upsampler": 2,
                "jpeg_CreateCompress": 2,
                "jpeg_CreateDecompress": 2,
                "jpeg_abort": 2,
                "jpeg_abort_compress": 2,
                "jpeg_abort_decompress": 2,
                "jpeg_add_quant_table": 2,
                "jpeg_alloc_huff_table": 2,
                "jpeg_alloc_quant_table": 2,
                "jpeg_aritab": 2,
                "jpeg_calc_jpeg_dimensions": 2,
                "jpeg_calc_output_dimensions": 2,
                "jpeg_consume_input": 2,
                "jpeg_copy_critical_parameters": 2,
                "jpeg_core_output_dimensions": 2,
                "jpeg_default_colorspace": 2,
                "jpeg_default_qtables": 2,
                "jpeg_destroy": 2,
                "jpeg_destroy_compress": 2,
                "jpeg_destroy_decompress": 2,
                "jpeg_fdct_10x10": 2,
                "jpeg_fdct_10x5": 2,
                "jpeg_fdct_11x11": 2,
                "jpeg_fdct_12x12": 2,
                "jpeg_fdct_12x6": 2,
                "jpeg_fdct_13x13": 2,
                "jpeg_fdct_14x14": 2,
                "jpeg_fdct_14x7": 2,
                "jpeg_fdct_15x15": 2,
                "jpeg_fdct_16x16": 2,
                "jpeg_fdct_16x8": 2,
                "jpeg_fdct_1x1": 2,
                "jpeg_fdct_1x2": 2,
                "jpeg_fdct_2x1": 2,
                "jpeg_fdct_2x2": 2,
                "jpeg_fdct_2x4": 2,
                "jpeg_fdct_3x3": 2,
                "jpeg_fdct_3x6": 2,
                "jpeg_fdct_4x2": 2,
                "jpeg_fdct_4x4": 2,
                "jpeg_fdct_4x8": 2,
                "jpeg_fdct_5x10": 2,
                "jpeg_fdct_5x5": 2,
                "jpeg_fdct_6x12": 2,
                "jpeg_fdct_6x3": 2,
                "jpeg_fdct_6x6": 2,
                "jpeg_fdct_7x14": 2,
                "jpeg_fdct_7x7": 2,
                "jpeg_fdct_8x16": 2,
                "jpeg_fdct_8x4": 2,
                "jpeg_fdct_9x9": 2,
                "jpeg_fdct_float": 2,
                "jpeg_fdct_ifast": 2,
                "jpeg_fdct_islow": 2,
                "jpeg_finish_compress": 2,
                "jpeg_finish_decompress": 2,
                "jpeg_finish_output": 2,
                "jpeg_free_large": 2,
                "jpeg_free_small": 2,
                "jpeg_get_large": 2,
                "jpeg_get_small": 2,
                "jpeg_has_multiple_scans": 2,
                "jpeg_idct_10x10": 2,
                "jpeg_idct_10x5": 2,
                "jpeg_idct_11x11": 2,
                "jpeg_idct_12x12": 2,
                "jpeg_idct_12x6": 2,
                "jpeg_idct_13x13": 2,
                "jpeg_idct_14x14": 2,
                "jpeg_idct_14x7": 2,
                "jpeg_idct_15x15": 2,
                "jpeg_idct_16x16": 2,
                "jpeg_idct_16x8": 2,
                "jpeg_idct_1x1": 2,
                "jpeg_idct_1x2": 2,
                "jpeg_idct_2x1": 2,
                "jpeg_idct_2x2": 2,
                "jpeg_idct_2x4": 2,
                "jpeg_idct_3x3": 2,
                "jpeg_idct_3x6": 2,
                "jpeg_idct_4x2": 2,
                "jpeg_idct_4x4": 2,
                "jpeg_idct_4x8": 2,
                "jpeg_idct_5x10": 2,
                "jpeg_idct_5x5": 2,
                "jpeg_idct_6x12": 2,
                "jpeg_idct_6x3": 2,
                "jpeg_idct_6x6": 2,
                "jpeg_idct_7x14": 2,
                "jpeg_idct_7x7": 2,
                "jpeg_idct_8x16": 2,
                "jpeg_idct_8x4": 2,
                "jpeg_idct_9x9": 2,
                "jpeg_idct_float": 2,
                "jpeg_idct_ifast": 2,
                "jpeg_idct_islow": 2,
                "jpeg_input_complete": 2,
                "jpeg_mem_available": 2,
                "jpeg_mem_dest": 2,
                "jpeg_mem_init": 2,
                "jpeg_mem_src": 2,
                "jpeg_mem_term": 2,
                "jpeg_natural_order": 2,
                "jpeg_natural_order2": 2,
                "jpeg_natural_order3": 2,
                "jpeg_natural_order4": 2,
                "jpeg_natural_order5": 2,
                "jpeg_natural_order6": 2,
                "jpeg_natural_order7": 2,
                "jpeg_new_colormap": 2,
                "jpeg_open_backing_store": 2,
                "jpeg_quality_scaling": 2,
                "jpeg_read_coefficients": 2,
                "jpeg_read_header": 2,
                "jpeg_read_raw_data": 2,
                "jpeg_read_scanlines": 2,
                "jpeg_resync_to_restart": 2,
                "jpeg_save_markers": 2,
                "jpeg_set_colorspace": 2,
                "jpeg_set_defaults": 2,
                "jpeg_set_linear_quality": 2,
                "jpeg_set_marker_processor": 2,
                "jpeg_set_quality": 2,
                "jpeg_simple_progression": 2,
                "jpeg_start_compress": 2,
                "jpeg_start_decompress": 2,
                "jpeg_start_output": 2,
                "jpeg_std_error": 2,
                "jpeg_std_message_table": 2,
                "jpeg_stdio_dest": 2,
                "jpeg_stdio_src": 2,
                "jpeg_suppress_tables": 2,
                "jpeg_write_coefficients": 2,
                "jpeg_write_m_byte": 2,
                "jpeg_write_m_header": 2,
                "jpeg_write_marker": 2,
                "jpeg_write_raw_data": 2,
                "jpeg_write_scanlines": 2,
                "jpeg_write_tables": 2,
                "jround_up": 2,
                "mingw_app_type": 2,
                "mingw_initltsdrot_force": 2,
                "mingw_initltsdyn_force": 2,
                "mingw_initltssuo_force": 2,
                "mingw_onexit": 2,
                "pcinit": 2,
                "DeleteCriticalSection": 2,
                "DisableThreadLibraryCalls": 2,
                "EnterCriticalSection": 2,
                "FreeLibrary": 2,
                "GetCurrentProcess": 2,
                "GetCurrentProcessId": 2,
                "GetCurrentThreadId": 2,
                "GetLastError": 2,
                "GetModuleHandleA": 2,
                "GetProcAddress": 2,
                "GetSystemTimeAsFileTime": 2,
                "GetTickCount": 2,
                "InitializeCriticalSection": 2,
                "InterlockedCompareExchange": 2,
                "InterlockedExchange": 2,
                "LeaveCriticalSection": 2,
                "LoadLibraryA": 2,
                "LoadLibraryW": 2,
                "QueryPerformanceCounter": 2,
                "SetUnhandledExceptionFilter": 2,
                "Sleep": 2,
                "TerminateProcess": 2,
                "TlsGetValue": 2,
                "UnhandledExceptionFilter": 2,
                "VirtualProtect": 2,
                "VirtualQuery": 2,
                "__dllonexit": 2,
                "_amsg_exit": 2,
                "_initterm": 2,
                "_lock": 2,
                "_onexit": 2,
                "_unlock": 2,
                "_winmajor": 1,
                "abort": 2,
                "calloc": 2,
                "ferror": 2,
                "fflush": 2,
                "fprintf": 2,
                "fread": 2,
                "fwrite": 2,
                "getenv": 2,
                "malloc": 2,
                "memcpy": 2,
                "memmove": 2,
                "memset": 2,
                "sprintf": 2,
                "sscanf": 2,
                "strncmp": 2,
                "strncpy": 2,
                "vfprintf": 2,
                "kernel32.dll": 1,
                "msvcrt.dll": 1,
                "9L:v:": 1,
                "::;A;R;": 1,
                "1)1?1U1k1": 1,
                "212G2]2s2": 1,
                "2(3;3N3!4c4": 1,
                "5U;m;": 1,
                ";7<C<": 1,
                "00*<1<8<?<F<M<T<": 1,
                "F<M<T<": 1,
                "=(=4=@=": 1,
                "485X5/6P:N;S;g;l;};": 1,
                "=5>K>e>": 1,
                "7#7*7v<": 1,
                "7.858": 1,
                "1Y2q2": 1,
                "3_5r5": 1,
                "606C6V6i6|6": 1,
                "7'7:7M7`7s7": 1,
                ";6>N>": 1,
                "778y8": 1,
                "1=1`1": 1,
                "222U2x2": 1,
                ";K<e<": 1,
                "72999@9G9[9r9y9": 1,
                "V8t8{8": 1,
                "1K5P5\\5": 1,
                "4E5h5": 1,
                "7)909": 1,
                "Z8a8h8o8v8}8": 1,
                "9':7:=:Q:v:": 1,
                ";9;g;x;": 1,
                ";=<L<": 1,
                ">$>9>I>n>": 1,
                "?!?1?A?I?N?^?d?r?": 1,
                "0.080}0": 1,
                "0,1<1r1": 1,
                "3!353>3F3L3V3h3o3u3": 1,
                "4A4i4w4": 1,
                "5,5S5": 1,
                "7$7-757N7": 1,
                "7*878@8G8p8{8": 1,
                "9,979B9-:;:B:G:": 1,
                ";$;+;1;": 1,
                "<&<@<q<": 1,
                "=%=2=:=B=J=R=Z=b=j=r=z=": 1,
                ">\">*>2>:>B>J>R>Z>b>j>": 1,
                "3 3$3(3,3034383<3@3D3H3L3@7D7H7L7P7T7X7\\7`7d7h7p7t7x7|7": 1,
                "9 9$9(9,9094989<9@9(=,=0=4=8=<=@=D=H=L=P=T=X=\\=`=d=h=l=p=t=x=|=": 1,
                "> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\\>`>d>h>l>p>t>x>|>": 1,
                "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?": 1,
                "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0": 1,
                "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1": 1,
                "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5": 1,
                "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6": 1,
                "do_sarray_io": 1,
                "arith_decode": 1,
                "jpeg_gen_optimal_table": 1,
                "alloc_sarray": 1,
                "new_color_map_2_quant": 1,
                "start_pass_huff": 1,
                "sep_upsample": 1,
                "finish_pass_1_quant": 1,
                "reset_marker_reader": 1,
                "h2v2_merged_upsample": 1,
                "largest_input_value": 1,
                "skip_input_data": 1,
                "lib/sdk/crt/startup/dllmain.c": 1,
                "lib/sdk/crt/startup/crtdll.c": 1,
                "fill_mem_input_buffer": 1,
                "self_destruct": 1,
                "rgb_ycc_convert": 1,
                "__DllMainCRTStartup": 1,
                "dll/3rdparty/libjpeg/jccolor.c": 1,
                "get_dht": 1,
                "post_process_prepass": 1,
                "lib/sdk/crt/startup/pesect.c": 1,
                "update_box": 1,
                "fill_input_buffer": 1,
                "lib/sdk/crt/startup/pseudo-reloc.c": 1,
                "pre_c_init": 1,
                "pre_process_data": 1,
                "start_pass_dcolor": 1,
                "access_virt_sarray": 1,
                "dll/3rdparty/libjpeg/jdmaster.c": 1,
                "post_process_2pass": 1,
                "emit_message": 1,
                "lib/sdk/crt/startup/gccmain.c": 1,
                "output_message": 1,
                "skip_variable": 1,
                "start_pass_downsample": 1,
                "start_pass_coef": 1,
                "dll/3rdparty/libjpeg/jdapistd.c": 1,
                "jpeg_make_c_derived_tbl": 1,
                "dll/3rdparty/libjpeg/jcomapi.c": 1,
                "get_interesting_appn": 1,
                "_CRT_INIT": 1,
                "emit_buffered_bits": 1,
                "decode_mcu_AC_refine": 1,
                "rgb1_rgb_convert": 1,
                "lib/sdk/crt/startup/atonexit.c": 1,
                "emit_dht": 1,
                "get_byte": 1,
                "emit_restart_e": 1,
                "prepare_for_output_pass": 1,
                "dll/3rdparty/libjpeg/jfdctflt.c": 1,
                "realize_virt_arrays": 1,
                "color_quantize": 1,
                "h2v2_downsample": 1,
                "get_sof": 1,
                "expand_bottom_edge": 1,
                "dll/3rdparty/libjpeg/jmemnobs.c": 1,
                "decompress_onepass": 1,
                "include/crt/mingw32/intrin_x86.h": 1,
                "finish_pass_gather": 1,
                "quantize_ord_dither": 1,
                "compress_output": 1,
                "ycck_cmyk_convert": 1,
                "write_frame_header": 1,
                "start_pass_merged_upsample": 1,
                "rgb1_gray_convert": 1,
                "pass2_fs_dither": 1,
                "fill_dc_scans": 1,
                "_pei386_runtime_relocator": 1,
                "dll/3rdparty/libjpeg/jccoefct.c": 1,
                "encode_mcu": 1,
                "dump_buffer_e": 1,
                "__mingwthr_run_key_dtors": 1,
                "init_destination": 1,
                "encode_mcu_AC_first": 1,
                "dll/3rdparty/libjpeg/jdcolor.c": 1,
                "dummy_consume_data": 1,
                "dump_buffer_s": 1,
                "noop_upsample": 1,
                "arith_encode": 1,
                "dll/3rdparty/libjpeg/jchuff.c": 1,
                "rgb_gray_convert": 1,
                "build_ycc_rgb_table": 1,
                "lib/sdk/crt/startup/mingw_helpers.c": 1,
                "select_scan_parameters": 1,
                "validate_script": 1,
                "init_mem_source": 1,
                "dll/3rdparty/libjpeg/jctrans.c": 1,
                "rgb_ycc_start": 1,
                "write_tables_only": 1,
                "start_pass_main": 1,
                "alloc_barray": 1,
                "emit_sof": 1,
                "dll/3rdparty/libjpeg/jdpostct.c": 1,
                "null_method": 1,
                "init_source": 1,
                "consume_markers": 1,
                "alloc_fs_workspace": 1,
                "dll/3rdparty/libjpeg/jdatasrc.c": 1,
                "pass2_no_dither": 1,
                "forward_DCT": 1,
                "expand_right_edge": 1,
                "start_iMCU_row": 1,
                "alloc_large": 1,
                "emit_eobrun": 1,
                "start_pass_1_quant": 1,
                "h2v1_upsample": 1,
                "dll/3rdparty/libjpeg/jcparam.c": 1,
                "save_marker": 1,
                "access_virt_barray": 1,
                "lib/sdk/crt/startup/gs_support.c": 1,
                "forward_DCT_float": 1,
                "dll/3rdparty/libjpeg/jutils.c": 1,
                "__dyn_tls_init": 1,
                "dll/3rdparty/libjpeg/jdinput.c": 1,
                "emit_marker": 1,
                "start_input_pass": 1,
                "fullsize_upsample": 1,
                "h2v2_smooth_downsample": 1,
                "emit_dqt": 1,
                "write_scan_header": 1,
                "dll/3rdparty/libjpeg/jcmainct.c": 1,
                "request_virt_sarray": 1,
                "write_marker_byte": 1,
                "__write_memory": 1,
                "error_exit": 1,
                "dll/3rdparty/libjpeg/jerror.c": 1,
                "process_data_simple_main": 1,
                "dll/3rdparty/libjpeg/jdhuff.c": 1,
                "start_pass_upsample": 1,
                "lib/sdk/crt/startup/tlssup.c": 1,
                "gray_rgb_convert": 1,
                "encode_mcu_huff": 1,
                "write_file_trailer": 1,
                "merged_1v_upsample": 1,
                "alloc_small": 1,
                "quantize3_ord_dither": 1,
                "dll/3rdparty/libjpeg/jidctint.c": 1,
                "jpeg_make_d_derived_tbl": 1,
                "pass_startup": 1,
                "decode_mcu_sub": 1,
                "int_upsample": 1,
                "dll/3rdparty/libjpeg/jdcoefct.c": 1,
                "consume_data": 1,
                "emit_restart": 1,
                "term_destination": 1,
                "h2v1_merged_upsample": 1,
                "free_pool": 1,
                "null_convert": 1,
                "read_restart_marker": 1,
                "compress_data": 1,
                "dll/3rdparty/libjpeg/jdtrans.c": 1,
                "decompress_smooth_data": 1,
                "emit_2bytes": 1,
                "quantize_fs_dither": 1,
                "__dyn_tls_dtor": 1,
                "ycc_rgb_convert": 1,
                "start_pass_prep": 1,
                "dll/3rdparty/libjpeg/jcsample.c": 1,
                "dll/3rdparty/libjpeg/jcmarker.c": 1,
                "start_pass_huff_decoder": 1,
                "__report_error": 1,
                "lib/sdk/crt/startup/tlsthrd.c": 1,
                "encode_mcu_gather": 1,
                "encode_mcu_DC_refine": 1,
                "reset_input_controller": 1,
                "decode_mcu_DC_first": 1,
                "rgb_convert": 1,
                "start_pass_2_quant": 1,
                "process_data_context_main": 1,
                "fullsize_smooth_downsample": 1,
                "int_downsample": 1,
                "dll/3rdparty/libjpeg/jidctfst.c": 1,
                "dll/3rdparty/libjpeg/jcarith.c": 1,
                "process_restart": 1,
                "process_data_crank_post": 1,
                "write_marker_header": 1,
                "init_error_limit": 1,
                "DllMainCRTStartup": 1,
                "fill_scans": 1,
                "dll/3rdparty/libjpeg/jdatadst.c": 1,
                "jpeg_fill_bit_buffer": 1,
                "start_pass_dpost": 1,
                "term_mem_destination": 1,
                "add_huff_table": 1,
                "grayscale_convert": 1,
                "per_scan_setup": 1,
                "dll/3rdparty/libjpeg/jmemmgr.c": 1,
                "DllMain": 1,
                "h2v2_upsample": 1,
                "start_output_pass": 1,
                "dll/3rdparty/libjpeg/jdmainct.c": 1,
                "dll/3rdparty/libjpeg/jcapimin.c": 1,
                "dll/3rdparty/libjpeg/jcdctmgr.c": 1,
                "out_of_memory": 1,
                "use_merged_upsample": 1,
                "fullsize_downsample": 1,
                "finish_output_pass": 1,
                "decode_mcu": 1,
                "compress_first_pass": 1,
                "do_barray_io": 1,
                "lib/sdk/crt/startup/dllentry.c": 1,
                "dll/3rdparty/libjpeg/jcinit.c": 1,
                "emit_byte": 1,
                "dll/3rdparty/libjpeg/jfdctint.c": 1,
                "finish_pass1": 1,
                "finish_pass2": 1,
                "dll/3rdparty/libjpeg/jdmerge.c": 1,
                "next_marker": 1,
                "create_colorindex": 1,
                "request_virt_barray": 1,
                "prescan_quantize": 1,
                "new_color_map_1_quant": 1,
                "cmyk_ycck_convert": 1,
                "dll/3rdparty/libjpeg/jdsample.c": 1,
                "dll/3rdparty/libjpeg/jdmarker.c": 1,
                "merged_2v_upsample": 1,
                "fill_inverse_cmap": 1,
                "pre_process_context": 1,
                "encode_mcu_AC_refine": 1,
                "decompress_data": 1,
                "dll/3rdparty/libjpeg/jdarith.c": 1,
                "empty_mem_output_buffer": 1,
                "finish_pass": 1,
                "output_pass_setup": 1,
                "finish_pass_huff": 1,
                "finish_pass_master": 1,
                "rgb_rgb1_convert": 1,
                "dll/3rdparty/libjpeg/jfdctfst.c": 1,
                "dll/3rdparty/libjpeg/jcmaster.c": 1,
                "start_pass_fdctmgr": 1,
                "examine_app14": 1,
                "write_file_header": 1,
                "flush_bits_e": 1,
                "h2v1_downsample": 1,
                "dll/3rdparty/libjpeg/jcapistd.c": 1,
                "color_quantize3": 1,
                "flush_bits_s": 1,
                "finish_input_pass": 1,
                "examine_app0": 1,
                "sep_downsample": 1,
                "decode_mcu_DC_refine": 1,
                "prepare_for_pass": 1,
                "format_message": 1,
                "read_markers": 1,
                "decode_mcu_AC_first": 1,
                "init_mem_destination": 1,
                "dll/3rdparty/libjpeg/jquant1.c": 1,
                "DllEntryPoint": 1,
                "empty_output_buffer": 1,
                "encode_mcu_DC_first": 1,
                "dll/3rdparty/libjpeg/jidctflt.c": 1,
                "dll/3rdparty/libjpeg/jcprepct.c": 1,
                "fill_a_scan": 1,
                "dll/3rdparty/libjpeg/jdapimin.c": 1,
                "dll/3rdparty/libjpeg/jddctmgr.c": 1,
                "start_pass": 1,
                "term_source": 1,
                "post_process_1pass": 1,
                "reset_error_mgr": 1,
                "jpeg_huff_decode": 1,
                "dll/3rdparty/libjpeg/jquant2.c": 1,
                "_imp__getenv": 1,
                "_data_start__": 1,
                "_dll_win32_msvcrt_libmsvcrt_a_iname": 1,
                "__DTOR_LIST__": 1,
                "_imp__VirtualProtect": 1,
                "_imp___onexit": 1,
                "_imp__GetLastError": 1,
                "_imp__VirtualQuery": 1,
                "__tls_start__": 1,
                "_imp__TlsGetValue": 1,
                "_imp__InterlockedExchange": 1,
                "_imp__InitializeCriticalSection": 1,
                "_rt_psrelocs_start": 1,
                "_imp__abort": 1,
                "_dll_characteristics__": 1,
                "_size_of_stack_commit__": 1,
                "_size_of_stack_reserve__": 1,
                "_major_subsystem_version__": 1,
                "__crt_xl_start__": 1,
                "__crt_xi_start__": 1,
                "_imp___amsg_exit": 1,
                "__crt_xi_end__": 1,
                "_imp__QueryPerformanceCounter": 1,
                "_imp___iob": 1,
                "_imp__strncmp": 1,
                "_head_dll_win32_msvcrt_libmsvcrt_a": 1,
                "_bss_start__": 1,
                "_size_of_heap_commit__": 1,
                "_imp__GetCurrentProcess": 1,
                "_imp__GetProcAddress": 1,
                "__crt_xp_start__": 1,
                "_imp__ferror": 1,
                "__crt_xp_end__": 1,
                "_dll__": 1,
                "_minor_os_version__": 1,
                "_image_base__": 1,
                "_imp__exit": 1,
                "_section_alignment__": 1,
                "_imp__memmove": 1,
                "_imp__FreeLibrary": 1,
                "_IAT_end__": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "_data_end__": 1,
                "_CTOR_LIST__": 1,
                "_imp__sprintf": 1,
                "_bss_end__": 1,
                "__crt_xc_end__": 1,
                "_imp__GetTickCount": 1,
                "__crt_xc_start__": 1,
                "__CTOR_LIST__": 1,
                "_imp__GetCurrentProcessId": 1,
                "_imp__TerminateProcess": 1,
                "_rt_psrelocs_size": 1,
                "_imp__fread": 1,
                "_imp____dllonexit": 1,
                "_imp__memcpy": 1,
                "_file_alignment__": 1,
                "_imp__LoadLibraryW": 1,
                "_imp___unlock": 1,
                "_imp__LeaveCriticalSection": 1,
                "_imp__malloc": 1,
                "_imp__strncpy": 1,
                "_major_os_version__": 1,
                "_IAT_start__": 1,
                "_end__": 1,
                "_imp__GetModuleHandleA": 1,
                "_imp___lock": 1,
                "_DTOR_LIST__": 1,
                "_imp__fprintf": 1,
                "_imp__memset": 1,
                "_imp___initterm": 1,
                "_size_of_heap_reserve__": 1,
                "__crt_xt_start__": 1,
                "__ImageBase": 1,
                "_subsystem__": 1,
                "_imp__fflush": 1,
                "_imp__calloc": 1,
                "_imp__GetSystemTimeAsFileTime": 1,
                "_dll_win32_kernel32_libkernel32_a_iname": 1,
                "_imp___winmajor": 1,
                "__tls_end__": 1,
                "_imp__free": 1,
                "_imp__SetUnhandledExceptionFilter": 1,
                "_major_image_version__": 1,
                "_loader_flags__": 1,
                "_imp__UnhandledExceptionFilter": 1,
                "_rt_psrelocs_end": 1,
                "_minor_subsystem_version__": 1,
                "_minor_image_version__": 1,
                "_imp__DisableThreadLibraryCalls": 1,
                "_imp__Sleep": 1,
                "_imp__vfprintf": 1,
                "_imp__InterlockedCompareExchange": 1,
                "_imp__GetCurrentThreadId": 1,
                "_head_dll_win32_kernel32_libkernel32_a": 1,
                "_imp__DeleteCriticalSection": 1,
                "_imp__LoadLibraryA": 1,
                "_imp__sscanf": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "__crt_xt_end__": 1,
                "_imp__EnterCriticalSection": 1,
                "_imp__fwrite": 1,
                ".gnu_debuglink": 1,
                ".debug_aranges": 1,
                ".debug_info": 1,
                ".debug_abbrev": 1,
                ".debug_line": 1,
                ".debug_frame": 1,
                ".debug_str": 1,
                ".debug_loc": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rdata": 1,
                "perm=m-r-- name=.gnu_debuglink": 1,
                "perm=m-rw- name=.bss": 1,
                "perm=m-r-- name=.edata": 1,
                "perm=m-rw- name=.idata": 1,
                "perm=m-rw- name=.CRT": 1,
                "perm=m-rw- name=.tls": 1,
                "perm=m-r-- name=.reloc": 1,
                "perm=m-r-- name=.rossym": 1,
                "type=program": 1,
                "type=tls": 2,
                "bind=NONE type=FUNC name=kernel32.dll_DeleteCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_DisableThreadLibraryCalls": 3,
                "bind=NONE type=FUNC name=kernel32.dll_EnterCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InitializeCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InterlockedCompareExchange": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InterlockedExchange": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LeaveCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LoadLibraryA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LoadLibraryW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_SetUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_Sleep": 3,
                "bind=NONE type=FUNC name=kernel32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=kernel32.dll_TlsGetValue": 3,
                "bind=NONE type=FUNC name=kernel32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_VirtualProtect": 3,
                "bind=NONE type=FUNC name=kernel32.dll_VirtualQuery": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___dllonexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__amsg_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__initterm": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__iob": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__lock": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__onexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__unlock": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__winmajor": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_abort": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_calloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_ferror": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fflush": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fread": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_free": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fwrite": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_getenv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_malloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memcpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memmove": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memset": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_sprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_sscanf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strncmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strncpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_vfprintf": 3,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_DllEntryPoint@12": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__CRT_INIT@12": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__CRT_MT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__FindPESection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__FindPESectionByName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__FindPESectionExec": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__GetPEImageBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__IsNonwritableInCurrentImage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__ValidateImageBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll____w64_mingwthr_add_key_dtor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll____w64_mingwthr_remove_key_dtor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___chkstk_ms": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___do_global_ctors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___do_global_dtors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___dyn_tls_init@12": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___dyn_tls_init_callback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___main": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___mingw_GetSectionCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___mingw_GetSectionForAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___mingw_TLScallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___mingw_enum_import_library_names": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___mingw_gMTKeyDtor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___mingw_gMTRemoveKeyDtor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___mingw_get_msvcrt_handle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___mingw_usemthread_dll": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___native_dllmain_reason": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___native_startup_lock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___native_startup_state": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___native_vcclrit_reason": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___onexitbegin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___onexitend": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___report_gsfailure": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___security_cookie": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___security_cookie_complement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___security_init_cookie": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___tlregdtor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___xc_a": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___xc_z": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___xi_a": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___xi_z": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___xl_a": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___xl_c": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___xl_d": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll___xl_z": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__decode_pointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__encode_pointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__tls_end": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__tls_index": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__tls_start": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll__tls_used": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_atexit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jcopy_block_row": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jcopy_sample_rows": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jdiv_round_up": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_1pass_quantizer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_2pass_quantizer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_arith_decoder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_arith_encoder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_c_coef_controller": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_c_main_controller": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_c_master_control": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_c_prep_controller": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_color_converter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_color_deconverter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_compress_master": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_d_coef_controller": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_d_main_controller": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_d_post_controller": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_downsampler": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_forward_dct": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_huff_decoder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_huff_encoder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_input_controller": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_inverse_dct": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_marker_reader": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_marker_writer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_master_decompress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_memory_mgr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_merged_upsampler": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jinit_upsampler": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_CreateCompress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_CreateDecompress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_abort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_abort_compress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_abort_decompress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_add_quant_table": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_alloc_huff_table": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_alloc_quant_table": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_aritab": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_calc_jpeg_dimensions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_calc_output_dimensions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_consume_input": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_copy_critical_parameters": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_core_output_dimensions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_default_colorspace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_default_qtables": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_destroy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_destroy_compress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_destroy_decompress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_10x10": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_10x5": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_11x11": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_12x12": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_12x6": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_13x13": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_14x14": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_14x7": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_15x15": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_16x16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_16x8": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_1x1": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_1x2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_2x1": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_2x2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_2x4": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_3x3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_3x6": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_4x2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_4x4": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_4x8": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_5x10": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_5x5": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_6x12": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_6x3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_6x6": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_7x14": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_7x7": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_8x16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_8x4": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_9x9": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_float": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_ifast": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_fdct_islow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_finish_compress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_finish_decompress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_finish_output": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_free_large": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_free_small": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_get_large": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_get_small": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_has_multiple_scans": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_10x10": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_10x5": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_11x11": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_12x12": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_12x6": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_13x13": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_14x14": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_14x7": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_15x15": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_16x16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_16x8": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_1x1": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_1x2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_2x1": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_2x2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_2x4": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_3x3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_3x6": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_4x2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_4x4": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_4x8": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_5x10": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_5x5": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_6x12": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_6x3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_6x6": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_7x14": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_7x7": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_8x16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_8x4": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_9x9": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_float": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_ifast": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_idct_islow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_input_complete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_mem_available": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_mem_dest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_mem_init": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_mem_src": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_mem_term": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_natural_order": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_natural_order2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_natural_order3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_natural_order4": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_natural_order5": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_natural_order6": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_natural_order7": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_new_colormap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_open_backing_store": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_quality_scaling": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_read_coefficients": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_read_header": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_read_raw_data": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_read_scanlines": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_resync_to_restart": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_save_markers": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_set_colorspace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_set_defaults": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_set_linear_quality": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_set_marker_processor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_set_quality": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_simple_progression": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_start_compress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_start_decompress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_start_output": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_std_error": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_std_message_table": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_stdio_dest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_stdio_src": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_suppress_tables": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_write_coefficients": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_write_m_byte": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_write_m_header": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_write_marker": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_write_raw_data": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_write_scanlines": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jpeg_write_tables": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_jround_up": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_mingw_app_type": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_mingw_initltsdrot_force": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_mingw_initltsdyn_force": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_mingw_initltssuo_force": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_mingw_onexit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libjpeg.dll_pcinit": 1,
                "section=.rdata type=utf8 string=Qs\u0697Qs\u0118Qs blocks=Basic Latin,Arabic,Latin Extended-A": 1,
                "section=.rdata type=utf32le string=(3=\\f\\f": 1,
                "section=.rdata type=utf32le string=(9E8": 1,
                "section=.rdata type=utf32le WP>": 1,
                "section=.rdata type=utf32le string=%8DmgM": 1,
                "section=.rdata type=utf32le string=#7@Qhq\\1@NWgyxeH\\_bpdgc": 1,
                "section=.rdata type=utf32le string=/cccc": 1,
                "section=.rdata type=utf32le string=Bcccc": 1,
                "section=.rdata type=utf32le ccccc/Bcccccccccccccccccccccccccccccccccccccc": 1,
                "section=.rdata type=utf32le string=\\b\\v\\r\\t\\n": 1,
                "section=.rdata type=utf32le string= #),.": 1,
                "section=.rdata type=utf32le string=!\"*+/0": 1,
                "section=.rdata type=utf32le string=)+\\t\\v": 1,
                "section=.rdata type=utf32le string=(,5\\n": 1,
                "section=.rdata type=utf32le string= '-46": 1,
                "section=.rdata type=utf32le string=!&.37<": 1,
                "section=.rdata type=utf32le string=\"%/28;=#$019:>?": 1,
                "section=.rdata type=utf8 string=>\u050b\\n?u= blocks=Basic Latin,Cyrillic Supplement": 1,
                "section=.rdata type=utf8 string=?u='@\u050b blocks=Basic Latin,Cyrillic Supplement": 1,
                "section=.rdata type=utf32le string=\\b\\t????????????????": 1,
                "section=.rdata type=utf32le string=????????????????": 1,
                "section=.rdata type=utf32le string=\\e????????????????": 1,
                "section=.rdata type=utf32le string=#$????????????????": 1,
                "section=.rdata type=utf32le string=!()\"\\e": 1,
                "section=.rdata type=utf32le string=#*+$": 1,
                "section=.rdata type=utf32le string=%,-????????????????": 1,
                "section=.rdata type=utf32le string=!(0)\"\\e": 2,
                "section=.rdata type=utf32le string=#*12+$": 1,
                "section=.rdata type=utf32le string=%,34-&.56????????????????": 1,
                "section=.rdata type=utf32le string=#*1892+$": 1,
                "section=.rdata type=utf32le string=%,3:;4-&": 1,
                "section=.rdata type=utf32le string='.5<=6/7>?????????????????": 1,
                "section=.rdata type=utf16le string=svcrt.dll": 1,
                "arch     x86": 1,
                "binsz    456704": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x00079fbd": 1,
                "compiled Tue Jul 15 17:22:42 2014": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x00077197": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  true": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows CUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0xb": 1,
                "TimeDateStamp : 0x53c55552": 1,
                "PointerToSymbolTable : 0x6f600": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x2102": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x2": 1,
                "MinorLinkerVersion : 0x17": 1,
                "SizeOfCode : 0x2a000": 1,
                "SizeOfInitializedData : 0x6600": 1,
                "SizeOfUninitializedData : 0x400": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x2b000": 1,
                "ImageBase : 0x73510000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x4": 1,
                "MinorOperatingSystemVersion : 0x0": 1,
                "MajorImageVersion : 0x1": 1,
                "MinorImageVersion : 0x0": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x76000": 1,
                "SizeOfHeaders : 0x600": 1,
                "CheckSum : 0x77197": 1,
                "Subsystem : 0x3": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x200000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x31000": 1,
                "Size : 0x18e5": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x33000": 1,
                "Size : 0x618": 1,
                "IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "VirtualAddress : 0x36000": 1,
                "Size : 0xa2c": 1,
                "IMAGE_DIRECTORY_ENTRY_TLS": 1,
                "VirtualAddress : 0x35004": 1,
                "Size : 0x18": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x33118": 1,
                "Size : 0xdc": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "kernel32.dll": 1,
                "msvcrt.dll": 1,
                "456704": 1,
                "=== VS_VERSIONINFO ===": 1
            }
        }
    ]
}