{
    "filepath": "/corpus/benign/autofmt.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "4b6fb744cce2b5b92dfbc7e819848ea4"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "jl  <.text+>;fsts -(%eax);jl -;addb %dl, -(%ecx);jl  <.text+>": 1,
                "cmc;xchgl %esi, %eax;jl - <.text>;testb %dl, -(%ecx);jl -": 1,
                "jl  <.text+>;subb -(%ecx), %dl;jl - <.text+>;andb %dl, -(%eax);jl  <.text+>": 1,
                "jl - <.text+>;aad $-;jl  <.text+>;fsts -(%eax);jl - <.text+>": 1,
                "jl  <.text+>;fists -(%eax);jl - <.text+>;rcll %cl, -(%eax);jl - <.text+>": 1,
                "fists -(%eax);jl - <.text+>;rcll %cl, -(%eax);jl - <.text+>;incl %esi": 1,
                "incl %esi;xchgl %ecx, %eax;jl  <.text+>;fstl -(%eax);jl  <.text+>": 1,
                "rclb %cl, -(%eax);jl  <.text+>;rclb %cl, -(%eax);jl  <.text+>;rclb -(%eax)": 1,
                "rclb %cl, -(%eax);jl  <.text+>;rclb -(%eax);jl  <.text+>;calll *-(%eax)": 1,
                "adcb $, -(%ecx);pushl %eax;movb $-, %ch;jl  <.text+>;xorl %edx, -(%ecx)": 1,
                "xorl %edx, -(%ecx);jl - <.text+>;into;xchgl %edx, %eax;jl - <.text+>": 1,
                "xchgl %edx, %eax;jl - <.text+>;xchgl %edx, -(%ecx);jl - <.text+>;movb $-, %dl": 1,
                "fists -(%edx);jl  <.text+>;sti;xchgl %edx, %eax;jl  <.text+>": 1,
                "fcoms (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%ebx);pushl %edx": 1,
                "outsl (%esi), %dx;arpl %bp, (%eax);arpl %bp, (%ebx);addb %al, (%eax);andb %al, (%eax)": 1,
                "xorl (%edx), %esi;addb %al, (%eax);addb %cl, (%esi);incl %esi;pushl %ebx": 1,
                "pushl %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cmpb $-, %al": 1,
                "rolb %cl, (%eax);addl %eax, %ebp;addb $, (%ecx);andl $, %eax;jae  <.text+>": 1,
                "jo - <.text+>;addb %al, (%ecx);je - <.text+>;addb %al, (%ecx);pushl %cs": 1,
                "addb %al, (%ecx);je - <.text+>;addb %al, (%ecx);pushl %cs;faddl (%eax)": 1,
                "addb %al, (%eax);addb %dl, (%edx);pushl %edi;addb %cl, (%edi);das": 1,
                "addb %al, (%ecx);andl $, %eax;addb %al, (%eax);addb %ah, (%ebp);pushl %ebp": 1,
                "xorb %dl, %bh;addb %al, (%ecx);sbbb %cl, %bh;addb %al, (%ecx);andb $, %al": 1,
                "addb %al, (%eax);andl $, %eax;xorb $, %al;andl $, %eax;bound (%ebx), %edx": 1,
                "addb %al, (%ecx);decl %edi;popl %ds;addl %eax, (%ecx);imull $, (%ebp), %edx": 1,
                "cli;addb %al, (%ecx);xorb %dl, %bh;addb %al, (%ecx);subl %ss:(%ecx), %eax": 1,
                "rep  roll (%eax);addl %esi, %esp;andb %al, (%ecx);addl %edi, (%ebx);andb (%ecx), %al": 1,
                "addb %bl, (%eax,%eax);addb %ah, (%ebp);jbe  <.text+>;imull $, (%eax), %eax;popl %esp": 1,
                "pushl %ebp;addl %eax, (%ecx);decl %eax;iretl;addb %al, (%ecx)": 1,
                "addb %dh, (%eax);addb %al, (%eax);fildll (%edi);addl %eax, (%ecx);imull $, (%ebp), %edx": 1,
                "addb %al, (%eax);addb %al, (%eax);popl %ebp;addb %al, (%eax);movb %dl, (%esi)": 1,
                "pushl $;addb %cl, (%esi);pushl %esp;addb %al, (%esi);pushl %ebx": 1,
                "addb %dh, (%eax,%eax);addb %dh, (%edx);imull $, (%eax), %eax;je  <.text+>;addb %ah, %gs:(%eax)": 1,
                "imull $, (%eax), %eax;je  <.text+>;addb %ah, %gs:(%eax);addb %ch, (%ecx);outsb (%esi), %dx": 1,
                "andl $, %eax;addb %ch, (%eax);popal;addb %dh, (%ebx);andb %al, (%eax)": 1,
                "jb  <.text+>;jo  <.text+>;pushl $;addb %ah, (%ebp);addb %ah, %fs:(%eax)": 1,
                "je  <.text+>;jae  <.text+>;andb %al, (%eax);addb %ch, (%ecx);insb %dx, %es:(%edi)": 1,
                "andb %al, (%eax);imull $, (%eax), %eax;je  <.text+>;pushl $;addb %ch, (%edi)": 1,
                "imull $, (%eax), %eax;je  <.text+>;pushl $;addb %ch, (%edi);jb  <.text+>": 1,
                "addb %ah, (%eax);addb %dh, (%edx);addb %ah, %gs:(%ebx);outsl (%esi), %dx;addb %dh, (%esi)": 1,
                "pushl $;addb %ah, (%ebp);addb %al, %cs:(%eax);addb %al, (%eax,%eax);addb %ch, (%eax,%eax)": 1,
                "addb %ch, (%eax,%eax);addb %dh, (%eax,%eax);addb %ah, (%eax,%eax);addb %ch, (%ecx);outsb (%esi), %dx": 1,
                "addb %ah, (%eax,%eax);addb %ah, (%esi);imull $, (%eax), %eax;outsb (%esi), %dx;addb %ah, (%ecx)": 1,
                "addb %ah, (%eax);addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%eax);addb %ah, (%eax,%eax)": 1,
                "outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %bh, (%eax);addb %ah, %gs:(%ebx);jne  <.text+>": 1,
                "je  <.text+>;outsl (%esi), %dx;addb %al, (%ebx);pushl $;addb %ch, (%ecx)": 1,
                "jns  <.text+>;jae  <.text+>;je  <.text+>;addb %ch, %gs:(%ebp);popl %esp": 1,
                "addl %eax, (%ecx);testb %ch, (%eax);addl %edx, ;pushl %ebp;addl %eax, (%ecx)": 1,
                "andb %ah, (%eax);andb %ah, (%eax);addb %al, (%esi);pushl %esp;xorl %esi, (%esi)": 1,
                "xorb %al, (%ecx);addl %edx, %esi;lretl $;imull $, (%ebp), %edx;jmp -": 1,
                "aam $;addl %ebp, (%ebx);addl %eax, (%ecx);addl %eax, (%ecx);imull $, (%ebp), %edx": 1,
                "addb %cl, (%ebp);pushl %edx;addb %ch, ;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dh, (%edx);addb %bl, %gs:(%eax,%eax);addb %al, (%ebp);pushl %ebx;addb %al, (%ebx)": 1,
                "addb %ah, (%eax,%eax);addb %ch, (%esi);je  <.text+>;imull $, (%eax), %eax;addb %dh, %gs:(%edx)": 1,
                "addb %ch, (%esi);je  <.text+>;imull $, (%eax), %eax;addb %dh, %gs:(%edx);addb %al, (%eax)": 1,
                "addl %esp, -(%ebx);addl %eax, (%ecx);incb %fs:(%ebx);addl %ecx, (%eax);addb $, %al": 1,
                "addb (%edx), %al;addl (%ecx), %eax;addb (%edx), %al;addl (%edx), %eax;addl (%ebx), %eax": 1,
                "addb $, %al;addl $, %eax;popl %es;addb $, %al;addl $, %eax": 1,
                "addb %bl, (%ebp);addb (%ecx), %al;imull $, (%ebp), %edx;jg  <.text+>;addb (%ecx), %al": 1,
                "lretl $;addl %ebp, (%eax);addb (%ecx), %al;decl %edx;aaa": 1,
                "addb (%ecx), %al;inb %dx, %al;cmpl %eax, (%edx);addl %ebp, (%ebx);addl %eax, (%ecx)": 1,
                "addl %eax, (%ebp);addb (%ecx), %al;shlb %cl, (%edi);orb %al, (%eax);orb $, %al": 1,
                "addl %eax, (%ebp);addb (%ecx), %al;shlb %cl, (%edi);xorb $, %al;addb %al, (%eax)": 1,
                "addb (%ecx), %al;shlb %cl, (%edi);xorb $, %al;addb %al, (%eax);addb %ah, ": 1,
                "addb %al, (%eax);addb %ah, ;decl %ecx;xorb $, %al;addb %al, (%eax)": 2,
                "xorb $, %al;addb %al, (%eax);addb %ah, ;andl $, %eax;addb %al, (%eax)": 1,
                "andl $, %eax;addb %al, (%eax);addb %ah, ;andl $, %eax;andl $, %eax": 1,
                "cli;retl;addb (%ecx), %al;incb %bl;addb (%ecx), %al": 1,
                "shlb %cl, (%edi);andl $, %eax;js  <.text+>;js  <.text+>;decl %ecx": 1,
                "decl %ecx;xorb $, %al;addb %al, (%eax);addb %ah, ;js  <.text+>": 2,
                "xorb $, %al;andl $, %eax;andl $, %eax;addb %ah, ;xorb $, %al": 1,
                "addl %eax, (%ebp);addb (%ecx), %al;shlb %cl, (%edi);pushl %esp;incl %esi": 1,
                "incl %ebx;popal;outsb (%esi), %dx;daa;je  <.text+>": 1,
                "pushl %ebx;cmpb (%eax), %ah;decl %esp;outsl (%esi), %dx;andb %al, (%bp)": 1,
                "outsb %gs:(%esi), %dx;je  <.text+>;orb (%eax), %al;addb %al, (%eax);cmpb (%esi), %dh": 1,
                "cmpb (%esi), %dh;addl (%ecx), %eax;imull $, (%ebp), %edx;incl %edx;cmpb $, %al": 1,
                "outsl (%esi), %dx;addl (%ecx), %eax;imull $, (%ebp), %edx;andb $, %al;pushl %ebx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax)": 3,
                "decl %esp;addb %al, (%ebp);popl %edi;addb %cl, (%esi);incl %ecx": 2,
                "addb %cl, (%edi);decl %esp;addb %dl, (%ebp);decl %ebp;addb %al, (%ebp)": 5,
                "addb %al, (%eax);incl %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 3,
                "addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ah, (%eax,%eax);pushl %esi": 2,
                "addb %al, (%eax);addb %al, (%eax);orb $, %al;addb %al, (%eax);addb %al, (%eax)": 2,
                "incl %ecx;addb %cl, (%eax,%eax);addb %cl, (%edi);incl %ebx;addb %al, (%ecx)": 2,
                "addb %cl, (%eax,%eax);addb %cl, (%edi);incl %ebx;addb %al, (%ecx);pushl %esp": 2,
                "addb %cl, (%eax,%eax);addb %al, (%ebx);popl %edi;addb %cl, (%eax,%eax);addb %cl, (%esi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %al": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);rolb (%eax);addb %al, (%eax)": 2,
                "andb $, %al;decl %edi;addb %al, (%edx);decl %edx;addb %al, (%ebp)": 1,
                "addb %al, (%edi);incl %ebp;addb %al, (%eax,%eax);addb %dl, (%ebp);pushl %esp": 1,
                "popl %edi;addb %dl, (%ebx);pushl %esp;addb %dl, (%edx);incl %ebp": 1,
                "pushl %esp;addb %dl, (%edx);incl %ebp;addb %al, (%ecx);decl %ebp": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ah, %cl;addb %al, (%eax);addb %dl, (%eax)": 1,
                "addb %al, (%edi);je  <.text+>;addl %ebp, (%ebx);addl %eax, (%ecx);inl %dx, %eax": 1,
                "movl , %eax;addl %eax, (%ecx);addl $, %eax;xorb %al, (%ecx);addl %eax, ": 1,
                "addb %bh, (%edi);addb %al, (%eax);addb %al, (%eax);addb %ah, ;pushl %edi": 1,
                "addb %bl, (%ebp,%eax,);andb %al, (%ecx,%eax,);incl %ecx;andb %dl, %cs:(%ebx);addb %al, (%eax)": 1,
                "pushl %esp;addb %cl, (%ebp);imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %cl, (%ebp);imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);andb $, %al": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);andb $, %al;pushl %esi": 1,
                "insl %dx, %es:(%edi);addb %ah, (%ebp);addb %al, (%eax);andb $, %al;incl %ecx": 1,
                "addb %ah, (%ebp);addb %al, (%eax);addb %al, (%eax);addb %ch, (%esi);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, (%eax,%eax);pushl %ebp;addb %dh, (%eax);incl %ebx": 1,
                "incl %esi;pushl %ebx;andb %ah, (%eax);andb %ah, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (,%eax,);addb %ah, %fs:(,%edx,);addb %ah, %gs:(%ecx,%edx,);jne  <.text+>;je  <.text+>": 1,
                "outsl (%esi), %dx;insb %dx, %es:(%edi);jne  <.text+>;addb %ah, %gs:(%esp,%ecx,);outsl (%esi), %dx": 1,
                "decl %ebp;incl %esi;pushl %esp;decl %ebp;imull $, (%edx), %esi": 1,
                "incl %esi;pushl %esp;decl %ebp;imull $, (%edx), %esi;andb $, %al": 1,
                "andb $, %al;incl %esi;pushl %esp;addb %al, (%eax);addb %al, (%eax)": 1,
                "jb  <.text+>;insb %dx, %es:(%edi);addb %al, (%eax);addb %al, (%eax);andb $, %al": 1,
                "addb %ah, ;andl $, %eax;addb %al, (%eax);andb $, %al;incl %esp": 1,
                "addb %al, (%eax);andl $, %eax;andl $, %eax;xorb $, %al;andl $, %eax": 1,
                "addb %al, (%eax);andl $, %eax;xorb $, %al;andl $, %eax;addb %al, (%eax)": 1,
                "addb %ah, ;js  <.text+>;decl %ecx;xorb $, %al;addb %ah, (%ecx,%ebp,)": 1,
                "js  <.text+>;decl %ecx;xorb $, %al;addb %ah, (%ecx,%ebp,);andl $, %eax": 1,
                "orb $-, %al;addl $, %eax;addl %eax, (%edx);addb %al, (%eax);addb %dl, (%edx)": 1,
                "int;int;int;int;int": 1190,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);movl (%ebp), %eax;pushl (%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl (%ebp)": 10,
                "leal -(%ebp), %ecx;calll  <.text+>;pushl $-;pushl $;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;xorl %esi, %esi;incl %esi": 1,
                "cmpl %esi, (%ebp);jle  <.text+>;movl (%ebp), %eax;pushl $-;pushl (%eax,%esi,)": 1,
                "je  <.text+>;incl %esi;cmpl (%ebp), %esi;jl - <.text+>;pushl $-": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;testb %al, %al;je  <.text+>": 19,
                "movl %edi, -(%ebp);cmpl %edi, -(%ebp);je  <.text+>;pushl $;popl %ebx": 1,
                "cmpl %ebx, (%ebp);jl  <.text+>;movl (%ebp), %eax;pushl $-;pushl (%eax)": 1,
                "cmpb $, %cl;je  <.text+>;cmpb $, %cl;jne  <.text+>;movb (%eax), %cl": 1,
                "jne  <.text+>;addl $, %eax;pushl %eax;calll  <.text+>;popl %ecx": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "popl %ecx;popl %ecx;je  <.text+>;pushl $;pushl (%esi)": 6,
                "jmp  <.text+>;cmpb $, -(%ebp);je  <.text+>;pushl $;calll  <.text+>": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;cmpl %edi, -(%ebp);jne  <.text+>": 3,
                "movl (%ebx), %eax;subl %edi, %eax;pushl $;je  <.text+>;popl %ecx": 1,
                "calll *(%eax);pushl %eax;pushl (%ebx);leal -(%ebp), %eax;pushl (%ebx)": 7,
                "pushl %edi;pushl %esi;leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 2,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;cmpl $, %eax;jne  <.text+>": 2,
                "popl %ecx;pushl (%ebp);pushl (%ebp);calll - <.text+>;leal -(%ebp), %ecx": 1,
                "cmpl $, -(%ebp);setne %al;jmp  <.text+>;pushl $;jmp  <.text+>": 1,
                "pushl $;jmp - <.text+>;leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;movl %esi, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movw %ss, -(%ebp);movw %cs, -(%ebp)": 1,
                "leal (%ebp), %eax;movl %eax, -(%ebp);leal (%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 8,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "xorl %eax, %edx;andl $, %edx;movl %edx, (%ecx);jmp  <.text+>;xorl %eax, %eax": 1,
                "xorl %ecx, %eax;movl %eax, (%ecx);orl $-, -(%ebp);movl (%ecx), %eax;testl %eax, %eax": 1,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "pushl %esi;incl %ebx;xorb (%eax), %dh;popl %eax;incl %ebx": 1,
                "incl %ebx;xorb %dh, (%eax);pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "jne  <.text+>;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "cmpl $-, %esi;je  <.text+>;leal (%esi,%esi,), %ecx;movl (%edi,%ecx,), %eax;orl %eax, %eax": 1,
                "je  <.text+>;pushl %esi;pushl %ebp;leal (%ebx), %ebp;xorl %ebx, %ebx": 1,
                "movl (%ebx), %edi;pushl %ebx;calll  <.text+>;addl $, %esp;leal (%ebx), %ebp": 1,
                "pushl $-;pushl %ebx;calll  <.text+>;addl $, %esp;popl %ebp": 1,
                "movl $, %eax;retl;pushl %ebx;pushl %esi;pushl %edi": 1,
                "pushl %edi;movl (%esp), %eax;pushl %ebp;pushl %eax;pushl $-": 1,
                "movl %ecx, (%esp);movl %ecx, (%eax);cmpl $, (%ebx,%esi,);jne  <.text+>;pushl $": 1,
                "jne  <.text+>;movl (%ecx), %edx;movl (%edx), %edx;cmpl %edx, (%ecx);jne  <.text+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%ebx);movl %eax, (%ebx);movl %ebp, (%ebx);pushl %ebp": 1,
                "pushl %ebp;pushl %ecx;pushl %eax;popl %eax;popl %ecx": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx": 1,
                "pushl %ebx;orl $-, %edi;pushl %edi;calll  <.text+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jl  <.text+>;leal (,%edx,), %ecx;movl (%ecx), %edi;incl %edx": 1,
                "xchgl %eax, (%ebx);jmp - <.text+>;xorl %eax, %eax;testl %eax, %eax;je  <.text+>": 1,
                "jne  <.text+>;cmpw $, (%eax);jne  <.text+>;subl %ecx, %ebx;cmpw $, (%eax)": 1,
                "leal (,%edx,), %eax;movl (%eax), %edi;incl %edx;cmpl %ebx, %edx;movl %esi, (%eax)": 1,
                "movl $, %ecx;xchgl %eax, (%ecx);jmp - <.text+>;movl %edi, %eax;popl %edi": 1,
                "cmpl %ebx, %esi;leal -(%ebp), %eax;movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl %ebx, -(%ebp);je  <.text+>": 1,
                "movl %edi, %eax;je  <.text+>;movb (%edi), %cl;cmpb %bl, %cl;je  <.text+>": 1,
                "movb (%eax), %cl;cmpb %bl, %cl;je  <.text+>;incl -(%ebp);cmpb $, %cl": 1,
                "jle  <.text+>;incl %eax;cmpb $, (%eax);jg - <.text+>;movb (%eax), %cl": 1,
                "cmpw %bx, (%eax);jne - <.text+>;movl -(%ebp), %edx;movl (%esi), %eax;incl %edx": 1,
                "leal (%esi), %eax;movl %ebx, (%edi);cmpl %ebx, (%eax);movl %edi, -(%ebp);je  <.text+>": 1,
                "movzwl -(%ebp), %ecx;je  <.text+>;movl %fs:, %eax;addl $, %ecx;pushl %ecx": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl (%eax);calll *;cmpl %ebx, %eax": 1,
                "movl (%eax), %eax;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <.text+>;movl $, -(%ebp)": 1,
                "movl %eax, (%edi);addl $, %edi;movw (%eax), %cx;incl %eax;incl %eax": 1,
                "popl %edi;je  <.text+>;calll  <.text+>;cmpl %ebx, -(%ebp);jl  <.text+>": 1,
                "calll *;popl %ecx;movl %eax, (%esi);popl %esi;popl %ebp": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp)": 11,
                "int;int;int;xorl %eax, %eax;movl %eax, (%ecx)": 13,
                "int;int;int;calll - <.text+>;orl $-, (%ecx)": 1,
                "calll - <.text+>;orl $-, (%ecx);movl $, (%ecx);addl $, %ecx;jmp  <.text+>": 1,
                "cmpl %ecx, %eax;ja  <.text+>;je  <.text+>;subl $, %eax;je  <.text+>": 1,
                "jne  <.text+>;movb $, %al;retl;cmpl $, %eax;je - <.text+>": 1,
                "je - <.text+>;cmpl $, %eax;je - <.text+>;cmpl $, %eax;jbe  <.text+>": 1,
                "pushl %edx;pushl (%ebp);calll *(%eax);popl %ebp;retl": 1,
                "leal (%edi), %esi;incl %ecx;xorl %eax, %eax;lock;cmpxchgl %ecx, (%esi)": 3,
                "popl %edi;popl %esi;popl %ebp;retl;int": 3,
                "pushl (%ebp);calll *(%eax);movl (%edi), %eax;leal (%ebp), %ecx;pushl %ecx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;popl %ebp;retl;int": 1,
                "movl %ecx, %esi;movl (%esi), %eax;cmpl (%esi), %eax;pushl %edi;movl (%esi), %edi": 1,
                "pushl $-;leal (%edi,%eax,), %eax;pushl %eax;calll - <.text+>;movl (%esi), %edx": 1,
                "pushl $;shll $, %eax;pushl %eax;leal (%esi), %ecx;calll  <.text+>": 1,
                "incl %eax;addl %eax, (%esi);movb $, %al;popl %edi;popl %esi": 1,
                "movl %edi, %edi;pushl %esi;movl %ecx, %esi;calll  <.text+>;leal (%esi), %ecx": 7,
                "movl %esi, %ecx;movl %eax, (%esi);calll - <.text+>;movl %esi, %eax;popl %esi": 21,
                "movl %eax, (%esi);calll - <.text+>;movl %esi, %eax;popl %esi;retl": 21,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 30,
                "leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>;cmpb $, (%esi);je  <.text+>": 1,
                "cmpb $, (%esi);je  <.text+>;pushl %ebx;pushl %edi;pushl (%esi)": 1,
                "popl %esi;movb %bl, %al;popl %ebx;calll  <.text+>;leave": 11,
                "movl %ecx, %esi;calll - <.text+>;testb $, (%ebp);je  <.text+>;pushl %esi": 53,
                "je  <.text+>;movl %edi, -(%ebp);cmpw $, -(%ebp);jae  <.text+>;movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);cmpw $, -(%ebp);jae  <.text+>;movl %edi, -(%ebp);movzwl -(%ebp), %edi": 1,
                "movl -(%ebp), %eax;addl %edi, %eax;movl %eax, -(%ebp);movzbl (%eax), %eax;pushl %eax": 1,
                "movl , %ebx;calll *%ebx;movl -(%ebp), %eax;movzbl (%eax), %eax;pushl %eax": 1,
                "leal -(%ebp,%edi,), %eax;pushl %eax;calll *%ebx;addl $, %esp;jmp  <.text+>": 1,
                "movw $, -(%ebp,%eax);movw $, -(%ebp,%eax);movw $, -(%ebp,%ecx,);orl $-, -(%ebp);movl -(%ebp), %esi": 1,
                "movw $, -(%ebp,%ecx,);orl $-, -(%ebp);movl -(%ebp), %esi;incl -(%ebp);xorl %edi, %edi": 1,
                "movb $, -(%ebp);jmp - <.text+>;movb $, -(%ebp);jmp - <.text+>;movb -(%ebp), %al": 1,
                "jmp - <.text+>;movb $, -(%ebp);jmp - <.text+>;movb -(%ebp), %al;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;calll  <.text+>;calll - <.text+>;retl $;int": 1,
                "pushl %esi;movl %ecx, %esi;leal -(%ebp), %ecx;movl %esi, -(%ebp);calll  <.text+>": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edi;addl %ebx, %eax;shll %eax;cmpl (%edi), %eax": 1,
                "addl %ebx, %eax;shll %eax;cmpl (%edi), %eax;jbe  <.text+>;addl $, %eax": 1,
                "leave;retl $;xorb %bl, %bl;jmp - <.text+>;int": 3,
                "jmp  <.text+>;calll *;xorl %ecx, %ecx;testl %eax, %eax;setge %cl": 2,
                "cmpl %eax, %ebx;movl %ecx, %edi;jb  <.text+>;movl %eax, %ebx;movl (%edi), %eax": 1,
                "popl %ecx;movl %eax, %esi;movl (%edi), %eax;pushl %esi;movl %edi, %ecx": 1,
                "movl %esi, %ecx;movl (%ebp), %esi;rep  movsw (%esi), %es:(%edi);movb $, %al;popl %edi": 1,
                "jne  <.text+>;movl %ebx, %eax;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 1,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <.text+>": 4,
                "subl %edx, %eax;movl %eax, %edi;testl %edi, %edi;movl (%esi), %eax;movl %esi, %ecx": 1,
                "shrl (%ebp);testb %al, %al;je  <.text+>;movl (%esi), %eax;pushl (%ebp)": 1,
                "testb %al, %al;je  <.text+>;movl (%esi), %eax;pushl (%ebp);movl %esi, %ecx": 1,
                "movl (%esi), %eax;pushl (%ebp);movl %esi, %ecx;calll *(%eax);jmp  <.text+>": 1,
                "pushl (%ebp);movl %esi, %ecx;calll *(%eax);jmp  <.text+>;pushl %edi": 1,
                "subl (%ebp), %eax;cmpl %eax, %ebx;jb  <.text+>;movl %eax, %ebx;movl (%ebp), %eax": 1,
                "jbe  <.text+>;movl (%edi), %esi;movl (%ebp), %edi;leal (%ebx,%ebx), %edx;movl %edx, %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);andw $, (%edx,%eax);jmp  <.text+>;leal (%esi,%esi), %edx": 1,
                "movl %ecx, %esi;movl (%esi), %eax;subl (%ebp), %eax;cmpl %eax, (%ebp);jb  <.text+>": 1,
                "cmpl %eax, (%ebp);jb  <.text+>;movl %eax, (%ebp);movl (%ebp), %eax;testl %eax, %eax": 1,
                "jmp  <.text+>;pushl (%ebp);calll  <.text+>;movl (%ebp), %eax;movl (%esi), %ecx": 1,
                "pushl %edi;calll  <.text+>;movl %eax, %ebx;testl %ebx, %ebx;jne  <.text+>": 1,
                "jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%ebp), %eax;cmpl %eax, %edi": 1,
                "movl %ebx, %eax;popl %edi;popl %ebx;popl %esi;popl %ebp": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl %ecx, %edi;movl (%edi), %ebx": 1,
                "movl (%edi), %eax;addl %ebx, %ecx;pushl %ecx;movl %edi, %ecx;calll *(%eax)": 1,
                "addl %ebx, %ecx;pushl %ecx;movl %edi, %ecx;calll *(%eax);testb %al, %al": 1,
                "movl (%edi), %eax;movl (%esi), %esi;shll %ecx;leal (%eax,%ebx,), %edi;movl %ecx, %eax": 1,
                "movl (%esi), %esi;shll %ecx;leal (%eax,%ebx,), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movb $, %al": 4,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movb $, %al;popl %edi;popl %esi": 2,
                "shll %edi;addl %edi, %eax;movw (%eax), %si;movw %si, (%ebp);movl (%ebp), %esi": 1,
                "jmpl *(%eax);int;int;int;int": 3,
                "movl %eax, (%ecx);movl (%ecx), %ecx;andw $, (%ecx,%eax,);movb $, %al;popl %ebp": 1,
                "jmp  <.text+>;movl %eax, (%esi);leal (%edi), %eax;movl %eax, (%esi);movl (%esi), %eax": 1,
                "movl %eax, (%esi);movl %edi, (%esi);andw $, (%eax,%edi,);movb $, %al;popl %edi": 2,
                "calll - <.text+>;movl $, (%esi);movl , %eax;andl $, (%esi);andl $, (%esi)": 6,
                "movl %esp, %ebp;pushl %esi;movl %ecx, %esi;calll  <.text+>;testb $, (%ebp)": 2,
                "je  <.text+>;movl %eax, %ecx;calll - <.text+>;movl %eax, %esi;jmp  <.text+>": 12,
                "je  <.text+>;pushl (%ebp);movl %esi, %ecx;pushl (%ebp);pushl %edi": 3,
                "calll - <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax;je  <.text+>;movw (%esi), %ax": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $": 2,
                "pushl $;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);popl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl -(%ebp);xorl %ecx, %ecx": 1,
                "calll *;testl %eax, %eax;jge  <.text+>;pushl -(%ebp);calll *": 1,
                "popl %edi;popl %ebx;movl -(%ebp), %ecx;calll  <.text+>;leave": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 44,
                "pushl $;calll *;movl %edi, %ecx;movl %esi, %edx;xorl %eax, %eax": 1,
                "xorl %eax, %eax;lock;cmpxchgl %ecx, (%edx);testl %eax, %eax;jne - <.text+>": 7,
                "je  <.text+>;movl %eax, %ecx;calll  <.text+>;jmp  <.text+>;xorl %eax, %eax": 15,
                "je  <.text+>;movl (%ecx), %eax;pushl %edi;calll *(%eax);andl $, ": 1,
                "popl %edi;popl %esi;leave;retl;int": 4,
                "testl %eax, %eax;jge  <.text+>;xorl %eax, %eax;leave;retl": 1,
                "movl (%ebp), %ecx;pushl %ebx;pushl %esi;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %ecx, -(%ebp);calll *;movl , %ebx": 1,
                "movl %ecx, -(%ebp);jmp  <.text+>;pushl $;pushl %esi;pushl -(%ebp)": 1,
                "xorl %eax, %eax;cmpl %eax, -(%ebp);jl  <.text+>;movl %edi, %ecx;movl %esi, %edi": 1,
                "testl %eax, %eax;jge - <.text+>;movzwl (%edi), %eax;movl -(%ebp), %ecx;shrl %eax": 1,
                "pushl %eax;pushl (%edi);calll - <.text+>;movl -(%ebp), %ecx;popl %edi": 1,
                "movl -(%ebp), %ecx;popl %edi;testb %al, %al;popl %esi;setne %al": 1,
                "movw %ax, -(%ebp);movw %ax, -(%ebp);pushl $;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "pushl %ebx;pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 5,
                "pushl %ebx;pushl -(%ebp);calll *;pushl -(%ebp);movl %eax, %esi": 1,
                "pushl (%ebp);calll *;popl %ebp;retl $;int": 1,
                "movw (%ecx), %bx;pushl %esi;movw (%ecx), %si;movl %edx, (%ebp);movb (%ecx), %dl": 1,
                "cmpb $-, %dl;je  <.text+>;cmpb $, %dl;jne  <.text+>;cmpw $, %si": 2,
                "cmpb $, %dl;jne  <.text+>;cmpw $, %si;je  <.text+>;cmpw $, %si": 1,
                "movb (%ecx), %dl;cmpb $-, %dl;pushl %ebx;movw (%ecx), %bx;pushl %esi": 1,
                "movw (%ecx), %si;pushl %edi;movl (%ecx), %edi;movb $, %al;je  <.text+>": 1,
                "movl (%ecx), %edi;movb $, %al;je  <.text+>;cmpb $-, %dl;je  <.text+>": 1,
                "movl (%ebp), %ecx;cmpl $, (%ecx);jne  <.text+>;cmpl $, (%ecx);jne  <.text+>": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;cmpb $, (%esi);movw (%esi), %cx": 1,
                "je  <.text+>;cmpb $, %al;je  <.text+>;cmpb $, %al;je  <.text+>": 4,
                "je  <.text+>;cmpb $, %al;je  <.text+>;cmpb $-, %al;jne  <.text+>": 1,
                "testb %al, %al;jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%esi)": 2,
                "testb %cl, %cl;movl $, %eax;jge  <.text+>;negl %ecx;movl %ebx, %edx": 1,
                "cmpb %bl, %cl;je  <.text+>;cmpb $, %cl;je  <.text+>;cmpb $, %cl": 2,
                "testb %cl, %cl;jge  <.text+>;negl %ecx;shll %cl, %ebx;cmpl %eax, %ebx": 1,
                "jge  <.text+>;xorb %al, %al;jmp  <.text+>;cmpb $, %cl;je  <.text+>": 1,
                "movb $, (%ebp);movb (%ebp), %al;popl %edi;popl %esi;popl %ebx": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;movl (%ebp), %esi;movb (%esi), %cl;testb %cl, %cl": 1,
                "shll %cl, %eax;movzwl (%esi), %ecx;cltd;idivl %ecx;movl %eax, (%ebp)": 1,
                "pushl %eax;calll  <.text+>;testb %al, %al;je  <.text+>;leal -(%ebp), %ecx": 10,
                "jne  <.text+>;cmpb $, (%edx);jne  <.text+>;movzwl (%edx), %eax;addl %edx, %eax": 1,
                "andl $-, %ecx;cmpl %ecx, %eax;jne  <.text+>;movzwl (%esi), %ecx;imull (%ebp), %ecx": 1,
                "movl (%eax), %edx;testl %edx, %edx;je  <.text+>;cmpl $, %edi;je  <.text+>": 1,
                "andl $-, %ecx;cmpl %ecx, %eax;jne  <.text+>;movb (%eax), %dl;movl (%ebp), %ecx": 1,
                "movb %dl, (%ecx);movb (%eax), %al;movl (%ebp), %edx;movb %al, (%edx);movb (%ecx), %cl": 1,
                "jne  <.text+>;testb %al, %al;je  <.text+>;cmpb $, %cl;jne  <.text+>": 1,
                "testb %al, %al;je  <.text+>;cmpb $, %cl;jne  <.text+>;testb %al, %al": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;xorb %al, %al": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;movb %bl, %al;jmp - <.text+>;int": 2,
                "movb %bl, %al;jmp - <.text+>;int;int;int": 3,
                "leal -(%ebp), %eax;movl %eax, (%ebp);pushl %edi;pushl %edi;pushl %edi": 1,
                "movl %eax, (%ebp);pushl %edi;pushl %edi;pushl %edi;pushl (%ebp)": 1,
                "cmpl %edi, -(%ebp);movb $, (%ebp);movb $, (%ebp);je  <.text+>;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl (%ebp), %ecx;pushl $-;je  <.text+>;pushl $;calll - <.text+>": 2,
                "cmpb $, -(%ebp);je  <.text+>;leal -(%ebp), %ecx;movl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "je  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;testb %al, %al;jne  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 8,
                "pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;pushl %esi;leal -(%ebp), %eax": 1,
                "cmpl $, %eax;je  <.text+>;movl %eax, %esi;jmp  <.text+>;testl %edi, %edi": 1,
                "testl %edi, %edi;jne  <.text+>;leal -(%ebp), %edi;movl (%esi), %eax;pushl $": 1,
                "popl %edi;movl %esi, %eax;popl %esi;popl %ebx;leave": 4,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $": 3,
                "movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;movl (%esi), %eax;pushl $": 1,
                "popl %ecx;jmp  <.text+>;pushl $;pushl (%ebp);movl %esi, %ecx": 1,
                "pushl $;pushl (%ebp);movl %esi, %ecx;pushl (%ebp);pushl (%ebp)": 1,
                "movl %esi, %ecx;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 5,
                "calll - <.text+>;addl $, %esp;popl %ebp;retl $;int": 4,
                "movl %ecx, %esi;andl $, (%esi);leal (%esi), %ecx;movl $, (%esi);calll  <.text+>": 2,
                "movl %esi, %ecx;pushl %edi;pushl (%ebp);calll  <.text+>;testb %al, %al": 1,
                "popl %ecx;popl %ecx;jmp  <.text+>;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "calll - <.text+>;jmp  <.text+>;cmpb %bl, (%ebp);jne  <.text+>;cmpl %ebx, %eax": 1,
                "pushl %eax;pushl $;calll *%edi;pushl %ebx;pushl (%ebp)": 1,
                "pushl $;calll *%edi;pushl %ebx;pushl (%ebp);movl %eax, (%ebp)": 1,
                "pushl -(%ebp);calll *%edi;cmpb %bl, (%ebp);jmp  <.text+>;movl (%esi), %eax": 1,
                "movl (%eax), %eax;addl $, %ecx;adcl %ebx, %eax;pushl %eax;pushl %ecx": 3,
                "pushl %eax;pushl %ecx;calll - <.text+>;cmpb %bl, %al;je  <.text+>": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, -(%ebp);movl %eax, -(%ebp);movl %ebx, (%ebp)": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;jmp  <.text+>;movl -(%ebp), %edi": 1,
                "calll - <.text+>;addl $, %esp;testb %al, %al;je  <.text+>;pushl %ecx": 3,
                "pushl %ecx;movl (%ebp), %ecx;movl %esp, %eax;pushl %ebx;pushl $": 1,
                "pushl -(%ebp);movl %eax, %esi;movl %edx, %eax;pushl %edi;pushl %eax": 1,
                "je  <.text+>;leal -(%ebp), %eax;jmp  <.text+>;movl %esi, -(%ebp);movl %edi, -(%ebp)": 3,
                "jmp  <.text+>;cmpb $, (%edi);je  <.text+>;pushl $;pushl %ebx": 1,
                "pushl $;pushl %ebx;pushl $;movl (%esi), %eax;movl %esi, %ecx": 1,
                "pushl %esi;calll - <.text+>;popl %ecx;popl %ecx;xorl %esi, %esi": 1,
                "popl %esi;jmp - <.text+>;pushl (%ebp);movl (%edi), %ecx;pushl (%ebp)": 1,
                "pushl %ebx;calll  <.text+>;cmpl %ebx, %eax;jge  <.text+>;movl $, %ebx": 1,
                "calll  <.text+>;cmpl %ebx, %eax;jge  <.text+>;movl $, %ebx;cmpl $, %eax": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;jl - <.text+>;leal -(%ebp), %ecx": 1,
                "movl %esp, %eax;andl $, (%eax);andl $, (%eax);pushl (%esi);calll  <.text+>": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %eax;cmpl (%esi), %eax": 1,
                "movsbl (%ecx), %ecx;imull %ecx, %eax;popl %esi;retl;int": 1,
                "movl %ecx, %esi;calll - <.text+>;leal (%esi), %ecx;movl $, (%esi);calll  <.text+>": 7,
                "leal -(%ebp), %ecx;calll - <.text+>;xorl %ebx, %ebx;pushl %ebx;pushl (%ebp)": 2,
                "xorl %ebx, %ebx;pushl %ebx;pushl (%ebp);leal (%esi), %edi;pushl (%ebp)": 1,
                "int;int;int;int;movl %ecx, %edx": 3,
                "movl %ecx, %edx;pushl %ebx;pushl %edi;xorl %ebx, %ebx;pushl $": 1,
                "movb %bl, (%edx);movb %bl, (%edx);movw %bx, (%edx);leal (%edx), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %esi": 3,
                "cmpl %ebx, %eax;je  <.text+>;pushl %eax;calll *%edi;movl %ebx, (%esi)": 1,
                "rep  stosl %eax, %es:(%edi);popl %edi;popl %esi;popl %ebx;leave": 1,
                "andl $, (%esi);popl %esi;retl;int;int": 10,
                "movl %ecx, %edi;movl (%edi), %eax;calll *(%eax);movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "movl %ecx, -(%ebp);pushl %esi;movl %ebx, (%ebp);movl %esi, (%ebp);pushl %ebx": 1,
                "movl (%eax), %eax;pushl -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);xorl %ecx, %ecx;addl (%ebp), %eax;adcl (%ebp), %ecx;pushl %ecx": 1,
                "xorl %ecx, %ecx;addl (%ebp), %eax;adcl (%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "cmpl %ecx, %edx;je  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>;addl %esi, (%ebp)": 1,
                "popl %ebx;leave;retl $;movl (%edi), %edi;cmpl %ebx, %edi": 1,
                "movl (%edi), %edi;cmpl %ebx, %edi;je  <.text+>;movl %eax, %edx;andl %ecx, %edx": 1,
                "movl (%ecx), %eax;movl (%ecx), %esi;movl (%ecx), %ecx;addl %edx, %eax;adcl %esi, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx;movl (%ecx), %edx": 3,
                "xorl %ebx, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ebx": 2,
                "movl %ecx, %esi;pushl %ebx;pushl (%esi);movb %bl, (%esi);calll *%edi": 1,
                "pushl %ebx;pushl (%esi);movb %bl, (%esi);calll *%edi;cmpl %ebx, %eax": 1,
                "calll *%edi;cmpl %ebx, %eax;movl %eax, (%esi);jl  <.text+>;cmpl $, -(%ebp)": 1,
                "pushl (%esi);calll *%edi;cmpl %ebx, %eax;movl %eax, (%esi);jge  <.text+>": 1,
                "pushl %eax;movb %bl, (%esi);calll  <.text+>;cmpl %ebx, %eax;movl %eax, (%esi)": 1,
                "calll *;cmpl %ebx, %eax;movl %eax, (%esi);jl  <.text+>;cmpw $, -(%ebp)": 1,
                "movl $, (%esi);xorb %al, %al;movl -(%ebp), %ecx;popl %esi;popl %ebx": 1,
                "movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <.text+>;cmpb %bl, -(%ebp);jne  <.text+>": 1,
                "pushl (%esi);movl $, %edi;pushl %edi;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "je  <.text+>;movl %esi, -(%ebp);movl %edi, %ebx;movl -(%ebp), %eax;addl (%ebp), %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <.text+>;testb %al, %al;jne - <.text+>": 11,
                "cmpb %bl, (%esi);je  <.text+>;movb $, %al;jmp  <.text+>;cmpb %bl, (%esi)": 1,
                "calll *;cmpl %ebx, %eax;movl %eax, (%esi);setge %al;cmpb %bl, %al": 1,
                "movl %eax, (%esi);setge %al;cmpb %bl, %al;movb %al, (%esi);je  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx;xorl %edx, %edx": 2,
                "pushl %edx;pushl %edx;pushl %eax;calll *;testl %eax, %eax": 2,
                "calll *;testl %eax, %eax;setge %al;leave;retl": 2,
                "je  <.text+>;testb %bl, %bl;je  <.text+>;movb $, %bl;jmp  <.text+>": 2,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp)": 7,
                "shlw %ax;movw %ax, -(%ebp);movw %ax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "pushl %ebx;pushl %esi;leal -(%ebp), %eax;movl %eax, -(%ebp);movb (%ebp), %al": 1,
                "andl $-, %eax;incl %eax;incl %eax;orl $, %eax;pushl %eax": 1,
                "pushl %ecx;pushl %ecx;movl %esp, %eax;andl $, (%eax);movl $, (%eax)": 17,
                "retl;xorb %al, %al;leave;retl;sbbb , %al": 1,
                "addl %edx, (%esi);addl $, %eax;addl %eax, (%ecx);movb $, (%ecx,%eax);pushl %ds": 1,
                "addb $, %al;pushl %es;popl %es;addl %ecx, (%eax);orb %al, (%eax)": 1,
                "popl %es;addl %ecx, (%eax);orb %al, (%eax);addb %al, ;addl %eax, (%ecx)": 1,
                "pushl (%ebx,%edi);calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebx,%edi), %eax": 1,
                "xorl %ecx, %ecx;cmpl %ecx, %esi;pushl %edi;jne  <.text+>;cmpl %ecx, (%ebx)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;movl %ebx, %ecx;calll *(%eax);pushl (%eax)": 1,
                "jle  <.text+>;movl (%ebx), %edx;movl %edx, %ecx;cmpl %esi, (%ecx);je  <.text+>": 1,
                "je  <.text+>;incl %eax;addl $, %ecx;cmpl (%ebx), %eax;jl - <.text+>": 1,
                "addl $, %ecx;cmpl (%ebx), %eax;jl - <.text+>;xorb %al, %al;popl %edi": 1,
                "rep  movsl (%esi), %es:(%edi);movb $, %al;jmp - <.text+>;int;int": 1,
                "cmpl %ebx, %ecx;je  <.text+>;movl (%ecx), %eax;pushl $;calll *(%eax)": 12,
                "movl %ebx, (%edi);leal (%esi), %edi;cmpb %bl, (%edi);je  <.text+>;movl %esi, %ecx": 1,
                "calll - <.text+>;movb %bl, (%edi);popl %edi;movl %ebx, (%esi);movl %ebx, (%esi)": 1,
                "movl , %eax;pushl %ebx;movl %ecx, %ebx;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;imull %edi, %eax;movl %eax, -(%ebp);movl %eax, %edi": 1,
                "pushl %edi;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "pushl %ecx;pushl %edi;pushl -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "leave;retl $;movl (%ebx), %ebx;testl %ebx, %ebx;je  <.text+>": 1,
                "andl %esi, %ecx;cmpl %esi, %ecx;pushl %edi;je - <.text+>;pushl -(%ebp)": 1,
                "movl (%eax), %eax;movl %edi, -(%ebp);xorl %edi, %edi;pushl %edi;pushl %edi": 1,
                "pushl %edi;pushl $;movl %eax, (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %esi;pushl %edi;pushl %ecx;pushl %ecx": 3,
                "testb %al, %al;je  <.text+>;leal (%ebp), %eax;jmp  <.text+>;movl %esi, -(%ebp)": 1,
                "jmp  <.text+>;movl %esi, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax;jmp  <.text+>": 1,
                "movl $, (%eax);movl %ebx, (%eax);pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "xorb %al, %al;jmp  <.text+>;addl %esi, (%ebp);adcl %edi, (%ebp);subl %esi, (%ebp)": 1,
                "pushl %ebx;calll  <.text+>;movl %eax, %ebx;testl %ebx, %ebx;popl %ecx": 1,
                "popl %ecx;je  <.text+>;pushl $;pushl %esi;pushl $": 1,
                "xorl %eax, %eax;addl (%ebp), %ecx;adcl (%ebp), %eax;pushl %ecx;movl %ecx, (%ebx,%esi)": 1,
                "pushl %ecx;movl -(%ebp), %ecx;movl %esp, %eax;movl %ecx, (%eax);movl %edi, (%eax)": 2,
                "pushl (%edi);addl %edi, %ebx;pushl (%ebx);pushl (%ebx);calll - <.text+>": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;pushl (%ebx);movl (%ebp), %ecx": 1,
                "jmp - <.text+>;pushl %ecx;pushl %ecx;movl %esp, %eax;andl $, (%eax)": 2,
                "movl %eax, -(%ebp);je  <.text+>;pushl (%esi);movl (%esi), %eax;movl %esi, %ecx": 1,
                "leal -(%ebp), %eax;je  <.text+>;pushl $;pushl %eax;pushl $": 1,
                "pushl (%esi);calll *;movl , %ebx;movl %eax, (%esi);pushl $": 1,
                "addl $, %esp;jmp  <.text+>;pushl $;pushl %eax;pushl $": 1,
                "movl -(%ebp), %ecx;movl %esp, %eax;movl %ecx, (%eax);movl %esi, %ecx;movl %edi, (%eax)": 1,
                "movl -(%ebp), %eax;xorl %edx, %edx;divl -(%ebp);cmpl -(%ebp), %eax;jbe  <.text+>": 1,
                "pushl $;pushl %ebx;calll - <.text+>;addl $, %esp;testb %al, %al": 1,
                "je  <.text+>;movl $, %eax;jmp  <.text+>;movl $, %eax;jmp  <.text+>": 3,
                "testl %ebx, %ebx;je  <.text+>;pushl $;movl %ebx, %ecx;calll - <.text+>": 1,
                "movl %ecx, %esi;calll - <.text+>;movl $, (%esi);movl , %eax;movl %esi, %ecx": 11,
                "movl $, (%esi);movl , %eax;movl %esi, %ecx;movl %eax, (%esi);calll - <.text+>": 12,
                "leal (%ebx), %edi;pushl %edi;pushl (%ebp);movl %edi, -(%ebp);pushl $": 1,
                "movl %edi, -(%ebp);pushl $;pushl %esi;calll - <.text+>;xorl %esi, %esi": 1,
                "calll *;pushl (%ebp);cmpl $, %eax;movl %eax, (%ebx);setne %al": 1,
                "movl -(%ebp), %eax;testb $, %al;je  <.text+>;movl $, (%ebx);jmp  <.text+>": 1,
                "pushl $;popl %edx;cmpl %edx, %ecx;jbe  <.text+>;cmpl $, %ecx": 1,
                "pushl %esi;pushl (%edi);calll *;cmpl %esi, %eax;movl %eax, (%ebx)": 1,
                "leal (%ebx), %edi;popl %ecx;leal -(%ebp), %esi;rep  movsl (%esi), %es:(%edi);movl , %eax": 1,
                "testb %al, %al;je  <.text+>;movl -(%ebp), %eax;movw (%eax), %ax;movw %ax, -(%ebp)": 1,
                "movw %ax, -(%ebp);jmp  <.text+>;leal (%edi), %eax;pushl %eax;leal (%edi), %eax": 1,
                "pushl %eax;leal (%edi), %eax;pushl %eax;pushl %edi;xorl %eax, %eax": 1,
                "movl %ecx, (%eax);leal -(%ebp), %eax;pushl %eax;calll - <.text+>;movl (%eax), %ecx": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;movl (%eax), %ecx;movl %ecx, (%ebx)": 1,
                "leal (%ebx), %eax;pushl %eax;pushl %ecx;pushl %ecx;movl -(%ebp), %ecx": 1,
                "movl %esp, %eax;andl $, (%eax);movl %ecx, (%eax);pushl %ecx;pushl %ecx": 1,
                "movl %ecx, (%eax);leal -(%ebp), %eax;pushl %eax;calll - <.text+>;pushl (%eax)": 3,
                "calll - <.text+>;xorl %esi, %esi;leal (%ebx), %eax;cmpl %esi, (%eax);jne  <.text+>": 1,
                "jmp  <.text+>;leal (%ebx), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, (%ebx);jge  <.text+>;movl %ebx, %ecx;calll - <.text+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;cmpl %esi, %ecx;je  <.text+>;movl (%ebx), %ebx;cmpl $, %ebx": 1,
                "xorl %edx, %edx;popl %ecx;divl %ecx;cmpl %esi, %eax;movl %eax, (%ebx)": 1,
                "popl %ecx;divl %ecx;cmpl %esi, %eax;movl %eax, (%ebx);jne  <.text+>": 1,
                "leal (%eax,%eax,), %ecx;movl -(%ebp), %eax;shll $, %ecx;shrl $, %ecx;movl %edx, %edi": 2,
                "rep  movsl (%esi), %es:(%edi);xorl %esi, %esi;movl %eax, (%ebx);incl -(%ebp);movl -(%ebp), %eax": 1,
                "jl - <.text+>;movl (%ebx), %edi;cmpl %esi, %edi;movl %edi, -(%ebp);jle  <.text+>": 1,
                "popl %ecx;leal -(%eax), %esi;movl %edx, %edi;rep  movsl (%esi), %es:(%edi);pushl $": 1,
                "leal -(%eax), %esi;movl %edx, %edi;rep  movsl (%esi), %es:(%edi);pushl $;popl %ecx": 1,
                "cmpl %esi, %edi;movl %edi, (%ebx);je - <.text+>;pushl $;leal (%ebx), %esi": 1,
                "cmpb $, -(%ebp);jne  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>;cmpl $, -(%ebp)": 1,
                "pushl $;pushl %edi;pushl (%ebp);movl %esi, %ecx;calll - <.text+>": 1,
                "pushl $;movb %bl, (%esi);calll  <.text+>;testl %eax, %eax;popl %ecx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;popl %ebp;jmp - <.text+>": 2,
                "popl %ebp;jmp - <.text+>;int;int;int": 4,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);calll  <.text+>;movl %eax, %edx": 1,
                "rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);popl %edi": 1,
                "movb $, %bl;leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %ecx;popl %edi": 3,
                "negb %al;pushl $;sbbl %eax, %eax;addl $, %eax;pushl %eax": 5,
                "testb %al, %al;leal -(%ebp), %ecx;jne  <.text+>;calll - <.text+>;jmp  <.text+>": 1,
                "pushl $;pushl $;pushl $-;pushl $;calll - <.text+>": 1,
                "movw %ax, -(%ebp);movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp)": 1,
                "pushl -(%ebp);calll  <.text+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx;movl %eax, -(%ebp)": 2,
                "calll *;addl $, %esp;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "movl %eax, -(%ebp);pushl $;pushl (%ebp);pushl %edi;calll - <.text+>": 1,
                "subl %edi, %eax;movl %eax, -(%ebp);jmp  <.text+>;cmpl $, %eax;je - <.text+>": 2,
                "jmp  <.text+>;cmpl $, %eax;je - <.text+>;movl -(%ebp), %eax;movl %ebx, (%eax,%esi,)": 2,
                "pushl (%eax,%edi);pushl (%edi);calll *;cmpl %ebx, %eax;movl %eax, -(%ebp)": 2,
                "pushl (%edi);calll *;cmpl %ebx, %eax;movl %eax, -(%ebp);jl  <.text+>": 2,
                "calll - <.text+>;cmpl %ebx, -(%ebp);popl %edi;je  <.text+>;pushl -(%ebp)": 2,
                "movl -(%ebp), %eax;movl %ebx, (%eax,%esi,);movb $, -(%ebp);jmp  <.text+>;movb $, -(%ebp)": 1,
                "leal -(%ebp), %ecx;pushl %ecx;movl -(%ebp), %ecx;pushl $;addl %edx, %ecx": 1,
                "movl -(%ebp), %ecx;pushl $;addl %edx, %ecx;pushl %ecx;pushl -(%ebp)": 1,
                "cmpb %bl, -(%ebp);movl -(%ebp), %ecx;popl %esi;sete %al;popl %ebx": 1,
                "testl %eax, %eax;jne  <.text+>;xorb %bl, %bl;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "pushl $;leal -(%ebp), %eax;pushl $;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "jmp  <.text+>;subl $, %ecx;je  <.text+>;subl $, %ecx;je  <.text+>": 1,
                "je  <.text+>;subl $, %ecx;je  <.text+>;subl $, %ecx;jne - <.text+>": 4,
                "je  <.text+>;subl $, %ecx;jne - <.text+>;orl $, (%esi);movl (%esi), %eax": 1,
                "jmp  <.text+>;movw $, (%esi);movw $, (%esi);jmp - <.text+>;movw $, (%esi)": 1,
                "int;xorl %eax, %eax;retl;int;int": 1,
                "orl %eax, %esi;testl %esi, %esi;ja  <.text+>;jb  <.text+>;cmpl $, %edi": 1,
                "pushl $;pushl $;pushl %esi;pushl %edi;calll  <.text+>": 1,
                "calll *;testl %eax, %eax;je  <.text+>;movl (%ebp), %ecx;subl %ecx, ": 1,
                "xorl %ecx, %ecx;incl %ecx;movl %esi, %edx;xorl %eax, %eax;lock": 2,
                "lock;cmpxchgl %ecx, (%edx);testl %eax, %eax;jne - <.text+>;movl , %eax": 1,
                "je  <.text+>;pushl %ebx;calll - <.text+>;movl (%ebp), %eax;popl %edi": 1,
                "movl %edi, %edi;pushl %esi;pushl $;popl %esi;pushl %esi": 3,
                "popl %esi;pushl %esi;calll - <.text+>;testl %eax, %eax;popl %ecx": 3,
                "je  <.text+>;movb $, %al;popl %esi;retl;xorb %al, %al": 4,
                "retl;xorb %al, %al;popl %esi;retl;int": 5,
                "movl %esi, ;calll - <.text+>;pushl ;movl %esi, ;calll - <.text+>": 101,
                "addl $, %esp;pushl ;movl %esi, ;calll - <.text+>;pushl ": 5,
                "movl , %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "testb %al, %al;jne  <.text+>;xorb %al, %al;jmp  <.text+>;leal -(%ebp), %eax": 2,
                "int;movl %edi, %edi;pushl %ebx;pushl %esi;pushl $": 1,
                "pushl %ebx;pushl %esi;pushl $;popl %esi;pushl %esi": 1,
                "andl %edi, %edx;movl %esi, %ecx;shrl $, %ecx;xorl %eax, %eax;movl %edx, %edi": 1,
                "jb  <.text+>;movl (%ebp), %eax;movl (%ebx), %esi;movl %eax, %ecx;shrl $, %ecx": 1,
                "pushl %esi;movl %ecx, %esi;movl (%esi), %eax;andl $, (%esi);testl %eax, %eax": 1,
                "movl , %eax;movl %eax, (%esi);xorl %eax, %eax;movl %eax, (%esi);movl %eax, (%esi)": 13,
                "testb $, (%ebp);je  <.text+>;pushl %esi;calll - <.text+>;popl %ecx": 56,
                "movl %ecx, %esi;movl $, (%esi);je  <.text+>;pushl %esi;calll - <.text+>": 1,
                "incl %ecx;jmp  <.text+>;cmpw $, %ax;je  <.text+>;cmpw $, %ax": 1,
                "pushl $;leal -(%ebp), %eax;pushl $;decl %esi;pushl %eax": 1,
                "jmp  <.text+>;addl $, %edi;pushl (%edi);addl $, %ebx;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;popl %ecx;leal (%eax,%eax), %eax": 1,
                "pushl %eax;calll *;popl %ecx;leal (%eax,%eax), %eax;pushl %eax": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "cmpb $, -(%ebp);je  <.text+>;pushl (%ebp);calll - <.text+>;movl %edx, -(%ebp)": 1,
                "pushl %eax;pushl (%ebp);pushl %edx;pushl $;pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;testb $, (%eax);jne  <.text+>;addl $, %eax;pushl %eax": 1,
                "testl %eax, %eax;jl - <.text+>;movl -(%ebp), %eax;jmp  <.text+>;addl $, %eax": 1,
                "pushl %edx;pushl %eax;calll *;xorl %edi, %edi;cmpl %edi, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;xorl %eax, %eax;jmp  <.text+>": 1,
                "movl (%ebp), %ecx;xorl %eax, %eax;jmp  <.text+>;incl %ecx;incl %ecx": 1,
                "jne - <.text+>;incl %ecx;incl %ecx;incl %eax;movw (%ecx), %dx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movw %cx, -(%ebp)": 1,
                "calll - <.text+>;leal (%eax,%eax), %eax;pushl %eax;pushl (%ebp);pushl $": 1,
                "movw %ax, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "ja  <.text+>;jmpl *(,%eax,);movl (%ecx), %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movl (%ecx), %eax;jmp  <.text+>;movl (%ecx), %eax;movl (%ebp), %edx;movl %eax, (%edx)": 8,
                "movl (%ecx), %eax;jmp  <.text+>;movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax": 1,
                "movl (%ebp), %eax;andl $, (%eax);xorl %eax, %eax;popl %ebp;retl $": 1,
                "addl %eax, (%ecx);imull $, (%ebx), %ebx;js  <.text+>;addl %eax, (%ecx);testl %ebx, (%ebx)": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;pushl %edi;movl (%ebp), %edi": 5,
                "movl (%ebp), %edi;pushl $;movl %eax, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp)": 5,
                "pushl %ebx;calll - <.text+>;testl %eax, %eax;setge %al;popl %esi": 1,
                "pushl (%ebp);pushl %ebx;calll *;testl %eax, %eax;jge  <.text+>": 1,
                "movl , %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 8,
                "pushl $;popl %edi;pushl %edi;pushl (%ebp);pushl %esi": 1,
                "pushl %esi;calll *;testl %eax, %eax;jge  <.text+>;xorb %al, %al": 1,
                "pushl %edi;movl (%ebp), %edi;pushl $;popl %ebx;pushl %ebx": 1,
                "popl %ebx;pushl %ebx;pushl (%ebp);movl %eax, -(%ebp);pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;testb %al, %al;je - <.text+>": 10,
                "pushl %eax;calll - <.text+>;testb %al, %al;je - <.text+>;pushl %esi": 3,
                "testb %al, %al;je - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl $": 6,
                "jl - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl $;pushl %ebx": 2,
                "pushl %edi;calll *;testl %eax, %eax;setge %al;popl %esi": 1,
                "testl %eax, %eax;setge %al;popl %esi;movl -(%ebp), %ecx;popl %edi": 2,
                "jmp  <.text+>;pushl %esi;movl , %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "movl , %esi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl %ebx": 1,
                "pushl %ebx;pushl -(%ebp);pushl %edi;calll *;testl %eax, %eax": 1,
                "calll *%edi;movl %ebx, (%esi);cmpl %ebx, (%esi);je  <.text+>;movl %fs:, %eax": 6,
                "je  <.text+>;cmpl %ebx, %eax;je  <.text+>;jle  <.text+>;cmpl $, %eax": 1,
                "testb %al, %al;jne  <.text+>;movl %fs:, %eax;pushl -(%ebp);movl (%eax), %eax": 1,
                "movl (%eax), %eax;pushl %esi;pushl (%eax);calll *;xorl %eax, %eax": 1,
                "pushl (%eax);calll *;xorl %eax, %eax;jmp  <.text+>;pushl %edi": 1,
                "pushl -(%ebp);calll *;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jge  <.text+>;pushl -(%ebp);calll - <.text+>;jmp  <.text+>": 1,
                "pushl -(%ebp);pushl %edi;pushl %edi;pushl %edi;pushl $": 1,
                "pushl %ebx;calll - <.text+>;movl %esi, %ecx;calll - <.text+>;xorb %al, %al": 1,
                "int;int;int;int;pushl (%ecx)": 3,
                "pushl (%ecx);movl (%ecx), %ecx;calll - <.text+>;retl;int": 2,
                "pushl %esi;movl %ecx, %esi;movl (%ebp), %ecx;andl $, (%esi);movl %eax, (%esi)": 1,
                "calll *(%edx);testl %edi, %edi;popl %edi;movl %eax, (%esi);popl %esi": 1,
                "movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movl %esi, %eax": 3,
                "int;int;int;orl $-, (%ecx);xorl %eax, %eax": 3,
                "movl %ecx, %esi;movl (%esi), %ecx;je  <.text+>;shrl %eax;addl %ecx, %eax": 1,
                "movb %cl, (%eax);popl %ebx;jmp  <.text+>;shrl %eax;leal (%eax,%ecx), %edx": 1,
                "negl %eax;sbbl %eax, %eax;popl %edi;negl %eax;popl %esi": 1,
                "movl (%eax), %ecx;leal (%ecx,%edx,), %edx;movl (%eax), %ecx;andl (%ebp), %ecx;xorl %eax, %eax": 2,
                "movl %esp, %ebp;pushl (%ebp);calll - <.text+>;negl %eax;sbbb %al, %al": 1,
                "movl %ecx, %esi;calll - <.text+>;cmpl (%esi), %eax;jb  <.text+>;pushl (%ebp)": 1,
                "cmpb $, %bl;jne  <.text+>;movl %edx, (%esi);movl $, (%esi);movl $, (%esi)": 1,
                "movl $, (%esi);movl $, (%esi);movl $, (%esi);movl $, (%esi);leal -(%eax,%ecx), %eax": 1,
                "movl $, (%esi);movl $, (%esi);movl $, (%esi);leal -(%eax,%ecx), %eax;xorl %edx, %edx": 1,
                "cmpb $, %bl;jne  <.text+>;imull %edx, %ecx;shrl %ecx;jmp - <.text+>": 1,
                "movl %ecx, %eax;imull %edx, %eax;pushl $;shll %eax;xorl %edx, %edx": 1,
                "incl %edi;movl %esi, %ecx;pushl %edi;calll - <.text+>;testb %al, %al": 5,
                "retl $;xorl %eax, %eax;jmp - <.text+>;int;int": 1,
                "testl %esi, %esi;pushl %edi;movl %ecx, %edi;jne  <.text+>;movl (%ebp), %eax": 1,
                "pushl %esi;movl %edi, %ecx;calll - <.text+>;testb %al, %al;jne  <.text+>": 2,
                "jne - <.text+>;movl (%ebp), %eax;testl %eax, %eax;je  <.text+>;movl %esi, (%eax)": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 1,
                "movl %esi, %ecx;calll - <.text+>;testb %al, %al;jne  <.text+>;pushl (%esi)": 2,
                "movb $, (%ebx);incl %edi;movl %esi, %ecx;pushl %edi;calll - <.text+>": 1,
                "jne - <.text+>;popl %edi;popl %esi;popl %ebx;popl %ebp": 3,
                "movb $, (%ebx);movb $, (%edi);calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl (%ebp), %ecx;pushl %edi;calll - <.text+>;pushl %edi;movl %esi, %ecx": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%ebp), %edi;pushl %edi": 1,
                "pushl %edi;calll - <.text+>;popl %edi;popl %esi;popl %ebx": 1,
                "movb $, (%eax);movl (%ebp), %eax;movl %edi, (%eax);jmp - <.text+>;pushl (%esi)": 1,
                "movl (%ebp), %eax;movl %edi, (%eax);jmp - <.text+>;pushl (%esi);movl %esi, %ecx": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);pushl %esi;movl %ecx, %esi;jne  <.text+>": 1,
                "movl %esi, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;testl %ebx, %ebx": 1,
                "movl %edi, -(%ebp);je  <.text+>;incl %edi;movl %esi, %ecx;pushl %edi": 1,
                "calll - <.text+>;testb %al, %al;jne - <.text+>;jmp  <.text+>;pushl (%esi)": 1,
                "pushl %esi;pushl (%ebp);movl %ecx, %esi;calll - <.text+>;testb %al, %al": 2,
                "movl -(%ebp), %eax;jmp  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%ebp), %eax": 1,
                "movl %eax, -(%ebp);popl %ebx;jmp  <.text+>;pushl %ebx;movl %esi, %ecx": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %edi;movl %ecx, %esi;calll - <.text+>": 2,
                "movl $, (%ecx);movl %eax, (%ecx);movl %eax, (%ecx);movb %al, (%ecx);movb %al, (%ecx)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ecx;xorl %edx, %edx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ecx;xorl %edx, %edx;divl %ecx": 1,
                "cmpl %eax, %ecx;ja  <.text+>;addl %ecx, (%ebp);imull (%ebp), %ecx;subl %ecx, %esi": 1,
                "subl %ecx, %esi;addl %eax, (%ebp);cmpl $, -(%ebp);jne - <.text+>;movl (%ebp), %eax": 1,
                "movl %ecx, %edx;je  <.text+>;pushl %edi;shrl %ecx;movl $, %eax": 1,
                "calll - <.text+>;popl %esi;popl %ebp;retl $;int": 5,
                "pushl %ebp;movl %esp, %ebp;cmpb $, (%ecx);movl (%ebp), %eax;jne  <.text+>": 1,
                "movw %dx, (%esi);popl %esi;movl (%ecx), %ecx;movw %ax, (%ecx);popl %ebp": 1,
                "popl %esi;movl (%ecx), %ecx;movw %ax, (%ecx);popl %ebp;retl $": 1,
                "testb %al, %al;jne  <.text+>;movl (%esi), %eax;pushl $;pushl $": 4,
                "andl $, (%eax);pushl %edx;movl $, (%eax);pushl %ecx;leal -(%ebp), %eax": 3,
                "calll - <.text+>;movl (%eax), %eax;movl %eax, -(%ebp);movl $, %eax;jmp  <.text+>": 10,
                "pushl %ecx;movl $, (%eax);pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;movb $, -(%ebp);calll - <.text+>;movl (%eax), %edi;movl $, %eax": 1,
                "movb $, -(%ebp);calll - <.text+>;movl (%eax), %edi;movl $, %eax;jmp - <.text+>": 1,
                "movl (%ebp), %ecx;addl $, %eax;movl %eax, -(%ebp);xorl %edx, %edx;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);xorl %edx, %edx;xorl %eax, %eax;subl -(%ebp), %ecx;sbbl %edx, %eax": 1,
                "jne  <.text+>;addl $-, -(%ebp);adcl $-, %eax;movl %eax, -(%ebp);pushl (%ebp)": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll - <.text+>;cmpb $, -(%ebp)": 2,
                "pushl $;pushl $;movl $, %edi;pushl %edi;movl %esi, %ecx": 2,
                "calll *(%eax);movl $, %ebx;pushl %ebx;pushl %esi;calll - <.text+>": 1,
                "calll - <.text+>;addl $, %esp;cmpl $, -(%ebp);je  <.text+>;movl (%esi), %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);movl (%ebp), %eax": 1,
                "movl (%ebp), %edx;leal (%ecx,%ecx,), %ecx;andl $, %eax;testb $, %cl;je  <.text+>": 1,
                "leal (%ecx,%ecx,), %ecx;andl $, %eax;testb $, %cl;je  <.text+>;shrl %ecx": 1,
                "andb $, %cl;shlb $, %dl;orb %dl, %cl;movb %cl, (%esi);shrl $, %eax": 1,
                "popl %esi;jmp  <.text+>;shrl %ecx;addl %edx, %ecx;movb %al, (%ecx)": 1,
                "shrl $, %eax;xorb (%ecx), %al;andb $, %al;xorb %al, (%ecx);popl %ebp": 1,
                "andl $, %eax;subl (%ebp), %ecx;movl %eax, (%edx,%ecx,);popl %ebp;retl $": 1,
                "pushl %ebx;pushl %esi;movl %ecx, %esi;leal -(%ebp), %ecx;calll - <.text+>": 17,
                "pushl $;movl %esi, %ecx;calll *(%eax);pushl (%ebp);pushl $": 2,
                "je  <.text+>;movl (%esi), %ecx;movl (%esi), %edi;pushl $;pushl %ebx": 2,
                "pushl %ebx;calll - <.text+>;movl %eax, %ebx;movl (%esi), %eax;movl %esi, %ecx": 2,
                "testb %al, %al;jne  <.text+>;pushl $;pushl $;pushl $": 9,
                "movl %edi, (%eax);movl -(%ebp), %ecx;movl (%ecx), %eax;calll *(%eax);testb %al, %al": 1,
                "pushl $;movl %esi, %ecx;calll *(%eax);pushl %ebx;pushl %edi": 2,
                "movl %esi, %ecx;calll *(%eax);pushl %ebx;pushl %edi;pushl $": 2,
                "movl %ebx, (%esi);je  <.text+>;movl (%ecx), %eax;pushl $;calll *(%eax)": 3,
                "imull %edi, %eax;addl (%ebx), %eax;movl %ecx, -(%ebp);movl %eax, %edi;movl (%ebx), %eax": 1,
                "movl %ebx, %ecx;movl %esi, -(%ebp);calll *(%eax);testw %ax, %ax;jbe  <.text+>": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %esi;addl -(%ebp), %edx;movl (%ebx), %eax;incl -(%ebp)": 1,
                "jge  <.text+>;addl %ebp, (,%edi,);addl %eax, (%ecx);addb (%edx), %al;addb (%edx), %al": 1,
                "calll  <.text+>;xorb %bl, %bl;jmp  <.text+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;addl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp  <.text+>;movb $, -(%ebp);movl (%edi), %ebx;andl $, -(%ebp);testl %ebx, %ebx": 1,
                "movb $, -(%ebp);movl (%edi), %ebx;andl $, -(%ebp);testl %ebx, %ebx;je  <.text+>": 1,
                "movl (%edi), %ebx;andl $, -(%ebp);testl %ebx, %ebx;je  <.text+>;jmp  <.text+>": 1,
                "testb %al, %al;je - <.text+>;movl (%esi), %ecx;pushl %ebx;calll - <.text+>": 1,
                "movb $, (%eax);je  <.text+>;pushl %ebx;calll - <.text+>;cmpl $, -(%ebp)": 1,
                "pushl %ebx;je  <.text+>;calll - <.text+>;movl (%esi), %ecx;pushl %eax": 1,
                "je  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%esi), %ecx;pushl %ebx": 1,
                "movl %edi, (%eax);cmpl $, (%ebp);je  <.text+>;movl (%ebp), %ecx;pushl %edi": 1,
                "int;int;int;xorl %eax, %eax;cmpl $, (%ecx)": 1,
                "movl (%esi), %esi;pushl $;popl %ecx;cmpl %ecx, %esi;jne  <.text+>": 1,
                "cmpl %ecx, %esi;jne  <.text+>;testb %al, %bl;jne  <.text+>;testl $, %edx": 1,
                "movl %ecx, %esi;movl (%esi), %ecx;je  <.text+>;notb %al;andb %al, (%esi)": 1,
                "jne  <.text+>;testb %bl, (%ebp);je  <.text+>;orl $, %eax;testb $, (%ebp)": 2,
                "je  <.text+>;andl $, %eax;jmp  <.text+>;cmpl %ebx, %ecx;jne  <.text+>": 1,
                "je  <.text+>;andl $, %eax;movl (%esi), %ecx;pushl %eax;pushl %ebx": 1,
                "incl %ebx;calll - <.text+>;testb %al, %al;je - <.text+>;movl (%esi), %ecx": 1,
                "int;int;movb (%ecx), %al;testb %al, %al;movzbl %al, %eax": 1,
                "int;int;movzbw (%ecx), %ax;retl;int": 1,
                "movb %cl, (%ebx);movzwl (%eax), %ecx;movw (%ecx), %cx;movw %cx, (%ebx);movzwl (%eax), %ecx": 1,
                "leal (%ebx), %edi;je  <.text+>;movb (%eax), %cl;movb %cl, (%ebx);movb (%eax), %cl": 3,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl (%eax), %ecx": 6,
                "movb $, %al;popl %ebx;retl;int;int": 3,
                "pushl $;pushl $;movl %edi, %ecx;calll *(%eax);pushl $": 12,
                "movl (%esi), %eax;addl $, %eax;movl %eax, (%esi);movb $, %al;popl %edi": 1,
                "movl %eax, (%esi);movb $, %al;popl %edi;popl %esi;popl %ebp": 1,
                "xorl %edx, %edx;movl $, %eax;divl %ecx;andl $, (%edi);leal -(%ebp), %edx": 1,
                "pushl %edx;je  <.text+>;andw $, (%esi);movl (%ecx), %eax;calll *(%eax)": 1,
                "movl (%edi), %eax;movl %ecx, -(%ebp);movl %eax, (%esi);jmp  <.text+>;movl (%esi), %eax": 1,
                "movl %eax, (%esi);jmp  <.text+>;movl (%esi), %eax;movl (%eax), %ecx;movl (%eax), %eax": 1,
                "movl (%esi), %eax;movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp);movl %ecx, (%esi)": 1,
                "movl %eax, %ecx;movl %edi, %eax;subl $, %eax;je  <.text+>;decl %eax": 1,
                "imull %ebx, %esi;shrl $, %esi;jmp  <.text+>;xorl %edx, %edx;leal (%ecx,%ecx), %eax": 1,
                "shrl $, %esi;jmp  <.text+>;xorl %edx, %edx;leal (%ecx,%ecx), %eax;divl %ebx": 1,
                "movzwl (%esi), %esi;movl %eax, -(%ebp);xorl %eax, %eax;testl %edx, %edx;setne %al": 1,
                "addl %eax, %ebx;cmpl %esi, %ebx;jbe  <.text+>;movl %esi, %eax;imull -(%ebp), %eax": 1,
                "movl (%ebp), %eax;popl %edi;popl %esi;movl %edx, (%eax);movl %ecx, %eax": 1,
                "jmp  <.text+>;movl (%ebp), %eax;movl (%eax), %eax;cmpl $, %eax;pushl %edi": 1,
                "divl %ebx;xorl %ecx, %ecx;testl %edx, %edx;setne %cl;addl %ecx, %eax": 6,
                "jbe  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>;movl %edi, %eax": 1,
                "cmpl $, %eax;ja - <.text+>;movl (%ebp), %eax;cmpl $, (%eax);jne  <.text+>": 1,
                "jne  <.text+>;movl $, (%eax);jmp  <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "jmp  <.text+>;cmpl $, %eax;jne  <.text+>;movl (%ebp), %eax;imull $, %eax, %eax": 1,
                "pushl (%ebp);leal (%eax,%ecx), %eax;pushl %eax;pushl %ebx;pushl (%ebp)": 2,
                "cmpl $, %edi;movl (%ebp), %eax;movl %eax, (%esi);ja - <.text+>;movl (%ebp), %eax": 2,
                "popl %ebx;leave;retl $;testl %eax, %eax;jne - <.text+>": 1,
                "xorl %esi, %esi;jmp  <.text+>;cmpl $, (%ebp);jb  <.text+>;pushl $": 1,
                "popl %esi;pushl (%ebp);leal (%ebp), %eax;pushl %eax;leal (%ecx), %ebx": 1,
                "jne - <.text+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movl %esi, %eax": 1,
                "andb $, %al;xorl %esi, %esi;movl %ecx, %ebx;movb %al, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal (%ebx), %edi;jne  <.text+>;movl $, (%edi);movl $, -(%ebp)": 1,
                "calll *(%eax);cmpl %esi, (%eax);movl (%eax), %ecx;movl %ecx, -(%ebp);je  <.text+>": 1,
                "cmpl %esi, (%eax);movl (%eax), %ecx;movl %ecx, -(%ebp);je  <.text+>;movl (%ebp), %edi": 1,
                "movl %edi, %ecx;calll *(%eax);pushl -(%ebp);pushl $;pushl %edi": 1,
                "cmpl $, %eax;ja  <.text+>;pushl $;popl %eax;movl %eax, (%ebx)": 1,
                "popl %eax;movl %eax, (%ebx);movl (%ebp), %ecx;movw (%ebx), %ax;cmpl %esi, %ecx": 1,
                "pushl %esi;calll - <.text+>;addl $, %esp;jmp  <.text+>;pushl $": 2,
                "decl %eax;jne  <.text+>;pushl $;pushl $;pushl $": 1,
                "pushl $;pushl $;pushl $;jmp  <.text+>;cmpb $, -(%ebp)": 2,
                "je  <.text+>;xorl %edx, %edx;movl $, %eax;divl -(%ebp);cmpl %eax, -(%ebp)": 1,
                "incl %eax;movl %eax, (%edi);cmpl $, -(%ebp);jne  <.text+>;movl (%ebx), %eax": 1,
                "pushl %ecx;pushl (%edi);movl %ebx, %ecx;pushl %eax;movzwl (%ebx), %eax": 1,
                "movl %eax, -(%ebp);jne  <.text+>;pushl $;pushl %eax;pushl $": 1,
                "movl -(%ebp), %ecx;shll $, %ecx;cmpl %ecx, %eax;ja  <.text+>;xorl %edx, %edx": 1,
                "ja  <.text+>;xorl %edx, %edx;movl $, %eax;divl -(%ebp);xorl %edx, %edx": 1,
                "je  <.text+>;pushl $;calll *(%eax);pushl $;pushl %esi": 1,
                "jmp  <.text+>;pushl $;calll *(%eax);pushl $;pushl %esi": 2,
                "movl , %ecx;movl %ecx, (%ebx);movl , %ecx;movl %ecx, (%ebx);leal (%ebx), %edi": 1,
                "movl %ebx, %ecx;calll - <.text+>;movl (%ebx), %ecx;movw %ax, (%ebx);movl (%ecx), %eax": 1,
                "jae  <.text+>;pushl $;popl %eax;jmp  <.text+>;movzwl %ax, %eax": 1,
                "pushl %ecx;pushl (%ebx);movl %ebx, %ecx;calll *(%eax);movl %eax, %esi": 1,
                "divl %ecx;incl %eax;movl %eax, -(%ebp);pushl %eax;pushl %ecx": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;pushl -(%ebp);calll *": 1,
                "pushl -(%ebp);calll  <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %eax": 3,
                "testb %al, %al;je  <.text+>;movl -(%ebp), %eax;orb $, (%eax);leal -(%ebp), %ecx": 3,
                "pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;testb %al, %al;jne  <.text+>": 3,
                "movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);pushl %edi;pushl %esi": 1,
                "movb $, %bl;leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 2,
                "movl (%ebx), %ecx;movl (%ecx), %eax;calll *(%eax);movl %eax, %esi;movzwl (%ebx), %eax": 1,
                "movl (%ecx), %eax;calll *(%eax);movl %eax, %esi;movzwl (%ebx), %eax;leal (%ebx), %edi": 1,
                "leal (%ebx), %edi;imull %eax, %esi;movl %edi, %ecx;calll - <.text+>;testb %al, %al": 1,
                "movl %edi, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;pushl (%ebp)": 4,
                "testb %al, %al;je  <.text+>;movl (%ebx), %edi;movl %esi, %ecx;movl %ecx, %edx": 1,
                "cmpl $, (%ebx);movl -(%ebp), %eax;movl (%ebx), %edi;movl (%ebx), %esi;jne  <.text+>": 1,
                "movl %edx, %ecx;jmp  <.text+>;movl $, %ecx;rep  movsl (%esi), %es:(%edi);movw (%ebx), %dx": 1,
                "movl (%ebx), %ecx;movb %dl, (%ecx);movw (%ebx), %dx;movl (%ebx), %ecx;movw %dx, (%ecx)": 3,
                "movl (%ebx), %ecx;movw %dx, (%ecx);movb (%ebx), %dl;movl (%ebx), %ecx;movb %dl, (%ecx)": 3,
                "leal (%ebx), %esi;je  <.text+>;movb (%ebx), %dl;movb %dl, (%ecx);movb (%ebx), %dl": 1,
                "movb %dl, (%ecx);movb (%ebx), %dl;movl (%ebx), %ecx;movb %dl, (%ecx);movl (%ebx), %ecx": 2,
                "movl (%ebx), %ecx;movl %edx, (%ecx);movl (%ebx), %edx;movl %edx, (%ecx);jmp  <.text+>": 1,
                "pushl %eax;xorl %eax, %eax;movw (%esi), %ax;movl %esi, %ecx;pushl %eax": 1,
                "movl (%esi), %eax;calll *(%eax);movzwl %ax, %edi;movl (%ebx), %eax;movl %ebx, %ecx": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx": 1,
                "movl %edx, (%eax);leal -(%ebp), %eax;pushl %eax;calll - <.text+>;pushl %ecx": 1,
                "xorl %ecx, %ecx;testb %al, %al;sete %cl;movl %ecx, %eax;movl (%ebp), %ecx": 1,
                "movl -(%ebp), %eax;movb (%eax), %cl;movb %cl, (%ebx);movw (%eax), %cx;movw %cx, (%ebx)": 1,
                "movw (%eax), %cx;movw %cx, (%ebx);movb (%eax), %cl;movb %cl, (%ebx);movw (%eax), %cx": 9,
                "xorl %edx, %edx;divl %ecx;incl %eax;pushl %eax;pushl $": 2,
                "popl %ecx;popl %ecx;jmp  <.text+>;movl (%ebx), %ecx;movl (%ecx), %eax": 1,
                "movl %edi, -(%ebp);jne  <.text+>;movl (%ebx), %eax;jmp  <.text+>;movzwl %ax, %eax": 1,
                "jne  <.text+>;movl (%ebx), %eax;jmp  <.text+>;movzwl %ax, %eax;andl $, -(%ebp)": 1,
                "leal -(%ebp), %ecx;pushl %eax;jne  <.text+>;pushl %edi;jmp  <.text+>": 1,
                "pushl (%ebp);movl %edi, %ecx;pushl (%ebx);pushl %eax;calll - <.text+>": 1,
                "movl -(%ebp), %eax;addl %eax, -(%ebp);movl (%ebx), %eax;incl -(%ebp);movl %ebx, %ecx": 1,
                "incl -(%ebp);movl %ebx, %ecx;calll *(%eax);movzwl %ax, %eax;cmpl %eax, -(%ebp)": 1,
                "xorb %bl, %bl;jmp  <.text+>;movl %edi, (%ebx);cmpl $, (%ebx);jne  <.text+>": 1,
                "je  <.text+>;pushl (%ebx);movl (%ebx), %ecx;pushl (%ebx);pushl %ebx": 1,
                "pushl (%ebx);pushl (%ebx);calll  <.text+>;testb %al, %al;je  <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;calll - <.text+>;movb $, %al": 1,
                "cmpl %edi, %ebx;je  <.text+>;movl (%ebx), %eax;movl %ebx, %ecx;calll *(%eax)": 1,
                "pushl $;pushl %edi;jmp - <.text+>;movl (%ebx), %eax;movb (%eax), %cl": 1,
                "movw (%eax), %cx;movw %cx, (%ebx);movw (%eax), %cx;movw %cx, (%ebx);movw (%eax), %cx": 1,
                "cmpw %cx, (%ebx);leal (%ebx), %edi;je  <.text+>;movb (%eax), %dl;movb %dl, (%ebx)": 1,
                "leal (%ebx), %edi;je  <.text+>;movb (%eax), %dl;movb %dl, (%ebx);movb (%eax), %dl": 1,
                "movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl (%eax), %edx;movl %edx, (%ebx)": 2,
                "addl %esi, %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;testb %al, %al": 1,
                "jmp - <.text+>;pushl $;calll - <.text+>;xorl %edi, %edi;cmpl %edi, %eax": 1,
                "jmp - <.text+>;movl %eax, %ecx;calll - <.text+>;testb %al, %al;jne  <.text+>": 1,
                "cmpl $, (%ebx);je  <.text+>;movl %ebx, %ecx;calll - <.text+>;movw (%ebx), %cx": 1,
                "movb %cl, (%eax);movw (%ebx), %cx;movl (%ebx), %eax;movw %cx, (%eax);movw (%ebx), %cx": 4,
                "movb (%ebx), %cl;movb %cl, (%eax);movb (%ebx), %cl;movl (%ebx), %eax;movb %cl, (%eax)": 2,
                "movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %eax;leal (%eax), %edi;leal (%ebx), %esi": 4,
                "leal (%ebx), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi)": 4,
                "movl %ecx, (%eax);movb (%ebx), %cl;movl (%ebx), %eax;movb %cl, (%eax);movl (%ebx), %eax": 2,
                "movb %cl, (%eax);movl (%ebx), %eax;movw (%ebx), %cx;movw %cx, (%eax);movl (%ebx), %ecx": 1,
                "cmpl %eax, (%ebx);je  <.text+>;cmpw %ax, (%ebx);movw (%ebx), %cx;movl (%ebx), %eax": 1,
                "je  <.text+>;cmpw %ax, (%ebx);movw (%ebx), %cx;movl (%ebx), %eax;movw %cx, (%eax)": 1,
                "testb %al, %al;je  <.text+>;cmpl %edi, (%ebx);jne  <.text+>;movl (%ebx), %ecx": 1,
                "movl (%ebx), %eax;movl %ebx, %ecx;calll *(%eax);movl %eax, %esi;movl (%ebx), %eax": 2,
                "movl (%eax), %eax;pushl %esi;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "pushl %edi;movl %esi, %ecx;jne  <.text+>;pushl $;jmp  <.text+>": 1,
                "pushl %esi;calll - <.text+>;popl %ecx;popl %ecx;movb $, %bl": 1,
                "imull -(%ebp), %eax;movl %eax, -(%ebp);addl %ecx, %edi;jmp  <.text+>;movl -(%ebp), %eax": 1,
                "imull %eax, %edi;movzwl (%esi), %eax;addl %eax, %edi;movzwl (%esi), %eax;shll $, %eax": 1,
                "decl %eax;xorl %edx, %edx;divl %ebx;movl (%esi), %ecx;incl %eax": 1,
                "imull %ebx, %eax;pushl %eax;movl %edi, %eax;imull %ebx, %eax;addl %ecx, %eax": 1,
                "movzwl (%esi), %eax;movl (%esi), %ecx;pushl %eax;pushl %edi;pushl (%esi)": 1,
                "calll  <.text+>;pushl %eax;movl %esi, %ecx;calll *(%edi);pushl (%ebp)": 1,
                "movl %esi, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;movl (%esi), %eax": 6,
                "je  <.text+>;movl (%esi), %eax;cmpl $, (%eax);setne %al;decb %al": 1,
                "movb $, %al;jmp  <.text+>;xorb %al, %al;popl %edi;popl %esi": 17,
                "movl %ecx, %ebx;calll - <.text+>;movl (%ebp), %esi;movl (%esi), %eax;movl %esi, %ecx": 1,
                "movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);testl %eax, %eax;je  <.text+>": 3,
                "movl %esi, %ecx;calll *(%eax);testl %eax, %eax;je  <.text+>;leal (%ebx), %edi": 1,
                "movb (%eax), %cl;movb %cl, (%ebx);movw (%eax), %cx;movw %cx, (%ebx);cmpw $, (%ebx)": 1,
                "je  <.text+>;leal (%ebx), %edi;leal (%ebx), %eax;pushl %edi;pushl %eax": 1,
                "movw %ax, (%ebp);movl (%ebx), %eax;movl %ebx, %ecx;calll *(%eax);movzwl %ax, %esi": 1,
                "movl %ebx, %ecx;calll *(%eax);movzwl %ax, %esi;movl (%ebx), %eax;movl %ebx, %ecx": 1,
                "imull %eax, %esi;movzwl (%ebp), %eax;movl (%ebp), %ecx;addl %eax, %esi;movl (%ecx), %eax": 1,
                "pushl %eax;calll - <.text+>;movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp)": 4,
                "movl (%ebx), %eax;movl %ebx, %ecx;calll *(%eax);cmpl $, %eax;jae  <.text+>": 1,
                "movzwl %ax, %eax;jmp  <.text+>;movl (%ebx), %ecx;movl (%ecx), %eax;calll *(%eax)": 1,
                "movl %eax, %ecx;movl %edi, %eax;xorl %edx, %edx;divl %ecx;jmp  <.text+>": 2,
                "movl %eax, (%ebx);calll - <.text+>;testb %al, %al;je  <.text+>;movzwl (%ebx), %eax": 1,
                "calll - <.text+>;testb %al, %al;je - <.text+>;pushl (%ebp);pushl (%ebx)": 1,
                "pushl (%ebx);jmp - <.text+>;pushl (%ebp);movl %ebx, %ecx;calll - <.text+>": 1,
                "movl %ebx, %ecx;calll - <.text+>;xorb %al, %al;popl %edi;popl %esi": 2,
                "pushl %edx;calll *(%eax);movl (%esi), %eax;movl %esi, %ecx;calll *(%eax)": 1,
                "calll *(%eax);movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);movzwl %ax, %eax": 1,
                "movl (%esi), %eax;subl $, %eax;movl %ecx, -(%ebp);je  <.text+>;decl %eax": 1,
                "subl $, %eax;movl %ecx, -(%ebp);je  <.text+>;decl %eax;je  <.text+>": 1,
                "pushl $;jmp  <.text+>;movl -(%ebp), %ecx;movl %ebx, %eax;imull %edi, %eax": 1,
                "jne  <.text+>;movl -(%ebp), %eax;imull -(%ebp), %eax;shrl $, %eax;jmp  <.text+>": 1,
                "shll %eax;xorl %edx, %edx;popl %ebx;divl %ebx;movl %eax, -(%ebp)": 1,
                "xorl %edx, %edx;popl %ebx;divl %ebx;movl %eax, -(%ebp);cmpl $, %ecx": 1,
                "popl %ebx;divl %ebx;movl %eax, -(%ebp);cmpl $, %ecx;jne  <.text+>": 1,
                "movl %eax, -(%ebp);movl %ecx, %eax;subl (%esi), %eax;xorl %edx, %edx;divl -(%ebp)": 2,
                "xorl %ebx, %ebx;pushl %ebx;pushl $;movl %edi, %ecx;calll *(%eax)": 1,
                "cmpb %bl, (%esi);movl %ebx, -(%ebp);jbe  <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "movzwl (%esi), %ebx;movl -(%ebp), %edi;andl $, -(%ebp);addl -(%ebp), %ebx;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);addl -(%ebp), %ebx;andl $, -(%ebp);decl %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;leal -(%ebp), %ecx;movl %edi, -(%ebp);movl %eax, -(%ebp)": 1,
                "je - <.text+>;pushl %edi;pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "testb %al, %al;je - <.text+>;movl %edi, %ecx;imull -(%ebp), %ecx;movl -(%ebp), %edi": 1,
                "andl $, (%ebp);cmpl $, -(%ebp);je  <.text+>;movl (%ebp), %edi;jmp  <.text+>": 1,
                "pushl %eax;pushl -(%ebp);calll - <.text+>;movl (%ebp), %eax;incl (%eax)": 1,
                "cmpl %eax, (%ebp);movl (%edi), %ecx;movl %ecx, -(%ebp);jb - <.text+>;cmpl $, (%esi)": 1,
                "je  <.text+>;pushl %edi;pushl %ecx;pushl %ecx;movl %esp, %eax": 4,
                "movl (%ecx), %eax;xorl %edx, %edx;divl %esi;movb $, %bl;movl %eax, (%ecx)": 1,
                "movl (%esi), %eax;pushl %ebx;pushl %ebx;movl $, %ebx;pushl %ebx": 1,
                "popl %ecx;je  <.text+>;movl -(%ebp), %ecx;pushl %esi;pushl (%ebp)": 2,
                "popl %ecx;popl %ecx;xorb %al, %al;popl %ebx;popl %edi": 1,
                "popl %ecx;xorb %al, %al;popl %ebx;popl %edi;popl %esi": 1,
                "movl -(%ebp), %ecx;pushl %esi;pushl (%ebp);calll - <.text+>;movb $, %al": 1,
                "orl %ecx, %edx;pushl %ebx;pushl %esi;je  <.text+>;movl (%ebp), %edx": 1,
                "je  <.text+>;xorb %bl, %bl;jmp  <.text+>;testb $, (%ebp);jne  <.text+>": 1,
                "movl (%edx), %edi;imull (%edx), %edi;xorb %bl, %bl;addl (%ebp), %eax;pushl $": 1,
                "pushl %ecx;pushl %eax;calll  <.text+>;testl %edx, %edx;popl %edi": 1,
                "jmp  <.text+>;testb %bl, %bl;je  <.text+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "pushl $;jmp  <.text+>;pushl $;popl %eax;jmp  <.text+>": 1,
                "xorl %eax, %eax;jmp  <.text+>;movl $, %eax;popl %esi;popl %ebx": 1,
                "subl $, %esp;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "pushl %eax;pushl %eax;pushl $;pushl $;pushl $": 1,
                "pushl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "jne  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "movl -(%ebp), %eax;movl $, -(%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp);cmpl %edi, %ebx": 1,
                "popl %ebx;jmp  <.text+>;movl $, %eax;popl %edi;leave": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <.text+>;movb $, -(%ebp);jmp  <.text+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%ebp);movl (%ebp), %eax;testl %eax, %eax;jne  <.text+>": 1,
                "jb - <.text+>;cmpl %ebx, %esi;je  <.text+>;leal -(%ebx), %eax;cmpl %eax, %esi": 1,
                "cmpl %eax, %esi;jne  <.text+>;xorl %esi, %esi;jmp  <.text+>;incl %esi": 1,
                "calll  <.text+>;movl (%ebp), %ecx;pushl %eax;calll  <.text+>;testb %al, %al": 2,
                "testl %edi, %edi;je - <.text+>;jmp  <.text+>;cmpl $, -(%ebp);jne  <.text+>": 1,
                "movl (%ebp), %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %eax": 1,
                "je  <.text+>;movl -(%ebp), %eax;pushl %edi;pushl (%eax);movl -(%ebp), %edi": 1,
                "incl %esi;leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "cmpl $, %ecx;sete %dl;incl %edx;movl (%esi), %ecx;cmpb %bl, (%ecx)": 1,
                "je  <.text+>;pushl %ecx;pushl %ecx;movl (%esi), %ecx;movl (%ecx), %eax": 1,
                "xorl %edx, %edx;movl $, %eax;divl %ecx;movl %ebx, (%edi);leal -(%ebp), %edx": 1,
                "pushl %esi;pushl %edi;movl %ecx, %edi;leal -(%ebp), %ecx;calll  <.text+>": 2,
                "calll *(%eax);leal -(%ebp), %ecx;pushl %eax;calll  <.text+>;testb %al, %al": 1,
                "popl %ebx;leave;retl $;pushl (%ebp);leal -(%ebp), %ecx": 1,
                "testl %eax, %eax;setne %cl;movb %cl, %al;popl %ebp;retl $": 2,
                "movb $, %al;calll  <.text+>;leave;retl;int": 1,
                "orl -(%ebp), %edi;subl %edx, %eax;sarl %eax;shll $, %ecx;orl -(%ebp), %ecx": 2,
                "shll $, %edi;orl %eax, %edi;movl (%esi), %eax;movw %di, (%eax);movl (%esi), %eax": 2,
                "movw %cx, (%eax);movb $, %al;popl %esi;leave;retl": 2,
                "movb $, %al;leave;retl;int;int": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;pushl $;cltd": 1,
                "idivl %ecx;testl %edx, %edx;je  <.text+>;movb (%ebp), %al;shrb (%ebp)": 1,
                "cmpb $, %cl;ja  <.text+>;movl %eax, %ecx;andw $, %cx;cmpw $, %cx": 1,
                "movb %al, %cl;andl $, %ecx;cmpw $, %cx;jb  <.text+>;cmpw $, %cx": 1,
                "pushl %esi;movl (%ebx), %esi;testl %esi, %esi;jne  <.text+>;xorb %al, %al": 1,
                "je  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;jmp  <.text+>": 2,
                "popl %esi;popl %ebx;popl %ebp;retl $;xorb %al, %al": 2,
                "popl %ebp;retl $;xorb %al, %al;jmp - <.text+>;int": 4,
                "movzbl (%eax), %eax;andl $, %eax;retl;xorl %eax, %eax;retl": 1,
                "int;int;andl $, (%ecx);movl $, (%ecx);jmp - <.text+>": 2,
                "pushl $;pushl -(%ebp);calll - <.text+>;addb (%esi), %al;incl %esi": 1,
                "jmp  <.text+>;xorb %al, %al;movl -(%ebp), %ecx;popl %ebx;calll  <.text+>": 2,
                "movl %eax, -(%ebp);je  <.text+>;calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "pushl %esi;pushl %edi;leal (%ebx), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movl (%ebx), %eax;popl %edi;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "jb - <.text+>;movl -(%ebp), %ecx;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %ecx;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 3,
                "movl %edi, -(%ebp);calll - <.text+>;leal -(%ebp), %ecx;calll - <.text+>;movl (%ebx), %esi": 1,
                "xorb %bl, %bl;jmp  <.text+>;movl -(%ebp), %esi;jmp  <.text+>;pushl %esi": 1,
                "jns - <.text+>;incl %esi;pushl %esi;pushl $;leal -(%ebp), %eax": 1,
                "incl %esi;je  <.text+>;pushl $-;pushl $;leal -(%ebp), %ecx": 1,
                "testb %al, %al;je - <.text+>;movl -(%ebp), %ecx;leal -(%ebp), %eax;pushl %eax": 4,
                "cmpl $, %esi;ja  <.text+>;pushl %edi;calll - <.text+>;testb %al, %al": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <.text+>;movl (%edi), %ebx": 1,
                "testb %cl, %cl;jne - <.text+>;subl %edx, %eax;movl %eax, %edx;cmpl $, %edx": 1,
                "movl $, %eax;rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;cmpl %ebx, %esi": 1,
                "pushl $;leal -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax;je - <.text+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %edi;leal -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movl (%eax), %edi;leal -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi)": 1,
                "movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl (%eax), %eax;cmpb $-, (%eax);jne  <.text+>": 1,
                "pushl %edi;calll *(%eax);movl %eax, %ebx;leal -(%ebp), %ecx;pushl %ebx": 1,
                "calll - <.text+>;xorl %ebx, %ebx;jmp  <.text+>;movl -(%ebp), %eax;movb (%eax), %al": 1,
                "pushl %eax;pushl %ebx;movl %esi, %ecx;calll - <.text+>;testb %al, %al": 3,
                "movl %esi, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %ecx": 2,
                "jmp  <.text+>;xorl %eax, %eax;popl %esi;popl %ebp;retl $": 3,
                "int;cmpb $, (%ecx);je  <.text+>;movl (%ecx), %eax;retl": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "pushl %ebx;pushl (%ebp);leal (%edi), %ecx;movl %eax, (%edi);calll  <.text+>": 1,
                "andl $, (%edi);xorb %al, %al;jmp  <.text+>;movb $, %al;popl %edi": 1,
                "movl (%ecx), %eax;pushl %edi;calll *(%eax);movl (%ebp), %edi;incl %edi": 1,
                "movl %edx, (%ecx);movl (%eax), %eax;popl %edi;movl %eax, (%ecx);popl %esi": 1,
                "calll *(%eax);testl %eax, %eax;movl %eax, (%esi);je  <.text+>;movb $, %al": 2,
                "calll *(%eax);movl %eax, %esi;testl %esi, %esi;je  <.text+>;movl (%ebp), %ebx": 2,
                "testl %esi, %esi;je  <.text+>;movl (%esi), %edx;movl (%esi), %eax;movl (%esi), %ecx": 2,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;pushl -(%ebp);pushl -(%ebp)": 6,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>;movl (%ebp), %ecx;movl (%ebp), %eax": 2,
                "pushl (%ebx);calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebx), %eax": 2,
                "pushl %esi;pushl %edi;movl %ebx, %esi;addl (%ebp), %esi;movl %eax, %edi": 2,
                "movb $, (%ebp);movl %eax, (%ebp);pushl %eax;jmp  <.text+>;pushl (%ebp)": 2,
                "popl %esi;popl %ebx;leave;retl $;xorb %al, %al": 7,
                "pushl %esi;pushl %edi;movl %ecx, %edi;movb $, (%eax);movl (%edi), %ecx": 1,
                "movl (%esi), %eax;pushl (%esi);movl (%esi), %edi;movl (%esi), %ecx;pushl (%esi)": 1,
                "movl (%esi), %edi;movl (%esi), %ecx;pushl (%esi);addl %edx, %eax;adcl %edi, %ecx": 1,
                "adcl %edi, %ecx;movl %eax, %edi;movl %ecx, -(%ebp);calll - <.text+>;testb %al, %al": 1,
                "orl $-, %ecx;addl %ecx, (%esi);adcl %ecx, (%esi);jmp  <.text+>;pushl -(%ebp)": 1,
                "addl %ecx, (%eax);adcl %ecx, (%eax);movb $, %al;popl %edi;popl %esi": 1,
                "testl %eax, %eax;je  <.text+>;pushl %edi;leal (%esi), %edi;pushl (%esi)": 1,
                "calll *(%edx);movl (%esi), %ecx;movl (%ecx), %eax;calll *(%eax);testl %eax, %eax": 1,
                "andl $, (%esi);movb $, %al;popl %esi;retl;int": 1,
                "testb %al, %al;jne  <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %eax": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;pushl %edi;pushl %ecx": 1,
                "movl (%ebp), %ebx;addl (%ebp), %ebx;movl (%ebp), %eax;adcl (%ebp), %eax;movl (%edi), %ecx": 1,
                "adcl (%ebp), %eax;movl (%edi), %ecx;movl %eax, -(%ebp);movl (%ecx), %eax;calll *(%eax)": 1,
                "movl %eax, (%ebp);movl %ecx, (%ebp);calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "pushl -(%ebp);pushl %ebx;calll - <.text+>;testb %al, %al;jne  <.text+>": 1,
                "andl $, -(%ebp);jmp  <.text+>;movl -(%ebp), %eax;incl %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %eax;movl $, (%eax)": 1,
                "calll - <.text+>;movl -(%ebp), %eax;leave;retl;int": 1,
                "movl -(%ebp), %ecx;calll - <.text+>;movzwl %ax, %eax;shll %eax;movw %ax, -(%ebp)": 1,
                "movl $, -(%ebp);andl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);calll *;movl %eax, -(%ebp);cmpl $, -(%ebp);jl  <.text+>": 3,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax": 1,
                "movl (%ecx), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax;movl (%eax), %ecx;movl -(%ebp), %esi": 1,
                "movl %esp, %ebp;pushl %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "movb $, ;movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "calll *;cmpl %ebx, %esi;jl  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;pushl $;leal -(%ebp), %eax": 3,
                "calll *;testb %al, %al;je  <.text+>;movl $, ;jmp  <.text+>": 1,
                "sbbl %eax, %eax;andl $, %eax;addl $, %eax;movl %eax, ;xorl %eax, %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movw (%ecx), %ax;pushl %esi;movw (%ecx), %si": 1,
                "cmpl %edi, %ebx;popl %ebx;ja  <.text+>;shrl $, %edi;incl %edi": 1,
                "addl %ecx, %eax;xorl %edx, %edx;movw (%eax), %dx;incl %edx;testw %dx, %dx": 1,
                "movw (%eax), %dx;incl %edx;testw %dx, %dx;je - <.text+>;cmpw $, %dx": 1,
                "jne  <.text+>;movl %esi, %eax;subl %edx, %eax;movb $, (%ebp);movl %edx, %ebx": 1,
                "jl  <.text+>;cmpl $, %ecx;jle  <.text+>;cmpl $, %ecx;jle  <.text+>": 1,
                "cmpl $, %eax;ja  <.text+>;addl %ebx, %eax;cmpw $, (%edi,%eax,);jne - <.text+>": 1,
                "int;int;movl %ecx, %edx;pushl %ebx;xorl %ebx, %ebx": 2,
                "movb (%ecx), %dl;movl (%ecx), %eax;movb %dl, (%eax);movw (%ecx), %dx;movl (%ecx), %eax": 3,
                "movw %dx, (%eax);movw (%ecx), %dx;movl (%ecx), %eax;movw %dx, (%eax);movb (%ecx), %dl": 1,
                "movl (%ecx), %eax;movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %eax;movl (%ecx), %edx": 1,
                "incl %ecx;cmpl %ecx, %eax;jae  <.text+>;movl %ecx, (%ebp);jmp  <.text+>": 1,
                "pushl %ebx;calll - <.text+>;testb %al, %al;je  <.text+>;movl (%esi), %eax": 5,
                "movl (%esi), %ecx;movl (%ecx), %eax;leal -(%ebp), %edx;pushl %edx;calll *(%eax)": 2,
                "calll *(%eax);movl (%eax), %ecx;movl (%eax), %eax;subl $, %ecx;sbbl %edi, %eax": 2,
                "movl (%esi), %eax;movl %eax, %ebx;leal -(%ebp), %ecx;movl %eax, -(%ebp);movl (%ebx), %eax": 2,
                "movl %eax, %ebx;leal -(%ebp), %ecx;movl %eax, -(%ebp);movl (%ebx), %eax;pushl %ecx": 2,
                "pushl %ecx;pushl %ecx;movl %esp, %eax;movl $, (%eax);movl %edi, (%eax)": 5,
                "movw (%esi), %cx;movl (%esi), %eax;movw %cx, (%eax);movw (%esi), %cx;movl (%esi), %eax": 2,
                "pushl $;calll - <.text+>;jmp  <.text+>;movl (%ebp), %ecx;pushl $": 4,
                "jmp  <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>;movl (%esi), %eax": 2,
                "testl %eax, %eax;je  <.text+>;movb $, (%eax);movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "calll - <.text+>;movl (%esi), %edi;andl $, -(%ebp);pushl %ebx;pushl (%edi)": 1,
                "movl (%eax), %edx;movl (%eax), %eax;movl -(%ebp), %ecx;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl (%edi), %edi;movl %esi, %ecx;movl %eax, -(%ebp)": 1,
                "movl %ecx, %edi;calll - <.text+>;movl (%eax), %edx;movl -(%ebp), %ecx;movl (%eax), %eax": 1,
                "movb (%esi), %al;pushl $;movl %esi, %ecx;movb %al, -(%ebp);calll - <.text+>": 3,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp);leal -(%ebp), %ecx;pushl (%esi)": 3,
                "pushl (%esi);pushl %eax;calll  <.text+>;testb %al, %al;je  <.text+>": 4,
                "pushl %eax;calll - <.text+>;testb %al, %al;je - <.text+>;movl -(%ebp), %edi": 1,
                "jne  <.text+>;cmpb $, (%edi);jne  <.text+>;movl (%edi), %eax;cmpl $, %eax": 1,
                "jmp  <.text+>;movl (%edi), %edx;cmpb $, %bl;jne  <.text+>;xorl %ecx, %ecx": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;xorl %edi, %edi;pushl %edi": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <.text+>;movb (%eax), %dl;movb %dl, (%ecx)": 1,
                "jne  <.text+>;movl -(%ebp), %eax;movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp - <.text+>;movw (%eax), %si;jmp  <.text+>;movl (%ebp), %eax": 1,
                "movb $, (%eax);movw $, %si;leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx": 1,
                "calll - <.text+>;leal (%eax,%eax,), %eax;movl %eax, -(%ebp);jmp  <.text+>;movl (%esi), %eax": 1,
                "je  <.text+>;pushl -(%ebp);movl (%esi), %eax;pushl %eax;leal -(%ebp), %ecx": 2,
                "pushl %edi;movb $, -(%ebp);jne  <.text+>;testb $, %al;jne  <.text+>": 1,
                "movzwl %ax, %eax;leal (%eax,%edi,), %ebx;cmpl %ecx, %ebx;movl %edi, (%ebp);ja  <.text+>": 1,
                "jb - <.text+>;jmp  <.text+>;movl (%ebp), %ecx;testl %ecx, %ecx;je  <.text+>": 1,
                "jmp  <.text+>;movl (%ebp), %ecx;testl %ecx, %ecx;je  <.text+>;movl (%ecx), %ecx": 1,
                "pushl %ecx;movl %esi, %ecx;calll *(%eax);movl %eax, %edi;movl (%esi), %eax": 1,
                "pushl %edi;movl $, (%eax);calll - <.text+>;testb %al, %al;je  <.text+>": 4,
                "movl (%esi), %ecx;movl (%ecx), %eax;calll *(%eax);movl (%esi), %eax;movl (%eax), %ecx": 2,
                "movb (%esi), %al;pushl %edi;movl %ecx, -(%ebp);xorl %ebx, %ebx;pushl %ebx": 1,
                "pushl %ebx;pushl %ebx;jmp  <.text+>;movl (%esi), %eax;pushl %edi": 2,
                "pushl %ebx;jmp  <.text+>;movl (%esi), %eax;pushl %edi;pushl %eax": 2,
                "pushl (%esi);calll  <.text+>;pushl %ecx;pushl %ecx;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;cmpb %bl, %al;jne  <.text+>;pushl %ecx;pushl %ecx": 5,
                "cmpb $, (%eax);jne  <.text+>;cmpb $, (%eax);je  <.text+>;cmpl $, (%eax)": 1,
                "movb %bl, %al;popl %ebx;leave;retl $;movw (%ebp), %cx": 1,
                "movl %eax, (%ecx);xorl %edx, %edx;shrl %eax;incl %edx;testl %eax, %eax": 1,
                "je  <.text+>;movl (%esi), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 2,
                "leal (%edx), %ecx;cmpl %edi, %ecx;ja  <.text+>;movl %ecx, %esi;movl (%eax), %ecx": 2,
                "movl %edx, %ebx;shrl %cl, %ebx;movl (%eax), %ecx;addl $, %esi;addl $, %edx": 2,
                "movl %edx, %esi;shrl %cl, %esi;movl (%eax), %ecx;xorl %ebx, %ebx;incl %ebx": 2,
                "incl %ebx;leal (%ecx,%esi,), %esi;movl (%eax), %ecx;andl %edx, %ecx;shll %cl, %ebx": 2,
                "andl %edx, %ecx;shll %cl, %ebx;orl %ebx, (%esi);incl %edx;cmpl %edi, %edx": 1,
                "shll %cl, %ebx;notl %ebx;andl %ebx, (%esi);incl %edx;cmpl %edi, %edx": 2,
                "andl $, %ecx;rep  stosb %al, %es:(%edi);popl %edi;popl %ebx;popl %ebp": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;cmpl (%ebp), %eax;jb  <.text+>;ja  <.text+>": 1,
                "ja  <.text+>;jb  <.text+>;movl (%ebp), %eax;cmpl (%ebp), %eax;ja  <.text+>": 1,
                "movl (%esi), %ecx;pushl (%ebp);pushl (%ebp);calll  <.text+>;testb %al, %al": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;jmp  <.text+>;xorl %ecx, %ecx;xorl %eax, %eax": 1,
                "jmp  <.text+>;xorl %ecx, %ecx;xorl %eax, %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "leal -(%ebp), %eax;pushl (%edi);pushl %eax;calll - <.text+>;movl (%eax), %ecx": 1,
                "calll - <.text+>;movl (%eax), %ecx;movl (%eax), %eax;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl (%esi), %eax;addl %eax, -(%ebp)": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %eax;movl %eax, (%esi);pushl %ebx": 1,
                "movl (%eax), %eax;movl %eax, (%esi);pushl %ebx;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);pushl %eax;calll - <.text+>;movl (%eax), %edx": 2,
                "pushl %eax;calll - <.text+>;movl (%eax), %edx;movl (%ebp), %ecx;movl %edx, (%ecx)": 2,
                "movb $, %al;jmp  <.text+>;cmpl $, %eax;jne  <.text+>;movb $, %al": 3,
                "int;int;jmp - <.text+>;int;int": 1,
                "movzwl (%eax), %edx;movl (%ecx), %eax;addl $, %edx;cmpl %eax, %edx;ja  <.text+>": 1,
                "ja  <.text+>;subl %edx, %eax;retl;int;int": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ecx), %ecx;movl (%ebp), %eax": 1,
                "andl $, (%eax);movl $, (%eax);jmp  <.text+>;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "int;xorl %eax, %eax;movl %eax, (%ecx);movw %ax, (%ecx);movb %al, (%ecx)": 1,
                "xorl %eax, %eax;movl %eax, (%ecx);movw %ax, (%ecx);movb %al, (%ecx);movl %eax, (%ecx)": 1,
                "pushl %eax;calll - <.text+>;movl %ebx, (%esi);movl (%esi), %ecx;cmpl %ebx, %ecx": 1,
                "leal (%ebx), %ecx;pushl $-;je  <.text+>;pushl $;pushl (%ebp)": 1,
                "jne  <.text+>;testw $, (%ebp);movl (%ebp), %ecx;movl (%ebp), %ebx;movl %ecx, (%esi)": 1,
                "cmpl %ebx, (%ebp);leal (%esi), %ecx;pushl $-;je  <.text+>;pushl %ebx": 1,
                "pushl (%ebp);calll - <.text+>;testb %al, %al;jne  <.text+>;movl %esi, %ecx": 1,
                "movl (%ebp), %edx;pushl %ecx;pushl %eax;pushl %edi;pushl %edx": 1,
                "pushl %edx;movl %ebx, (%esi);movb $, (%esi);movl %eax, (%esi);movl %ecx, (%esi)": 1,
                "calll - <.text+>;testb %al, %al;jne - <.text+>;movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "movb $, (%esi);movb $, (%esi);movb $, %al;jmp - <.text+>;int": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);movl %edi, (%ebx);movl (%esi), %eax;cmpb $, (%eax)": 1,
                "calll - <.text+>;movl %eax, %edi;testl %edi, %edi;movl %edi, (%ebx);je  <.text+>": 1,
                "cmpb $, (%eax);jne  <.text+>;andl $, (%ebp);jmp  <.text+>;movl (%eax), %eax": 1,
                "testb %al, %al;je  <.text+>;leal (%edi), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "leal (%edi), %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx": 1,
                "movl %esi, %ecx;calll  <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %ebx": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;testl %eax, %eax;movl %eax, (%ebp);jbe  <.text+>": 1,
                "pushl %esi;leal -(%ebp), %ecx;calll  <.text+>;testb %al, %al;je  <.text+>": 4,
                "testb %al, %al;je  <.text+>;pushl -(%ebp);movl (%ebx), %ecx;pushl -(%ebp)": 2,
                "je  <.text+>;incl %esi;cmpl (%ebp), %esi;jb - <.text+>;xorl %esi, %esi": 1,
                "je  <.text+>;incl %esi;cmpl (%ebp), %esi;jb - <.text+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl (%edi), %esi;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 2,
                "calll - <.text+>;pushl (%eax);movl %esi, %ecx;pushl (%eax);calll  <.text+>": 1,
                "calll - <.text+>;pushl (%eax);movl (%ebx), %ecx;pushl (%eax);calll  <.text+>": 2,
                "movl (%edi), %ecx;pushl (%eax);calll  <.text+>;movl (%ebp), %ecx;leal -(%ebp), %eax": 1,
                "movl %edi, (%eax);movl %edi, (%eax);calll  <.text+>;testb %al, %al;je  <.text+>": 3,
                "movl %edi, (%eax);calll - <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);leal -(%ebp), %ecx;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 5,
                "pushl %eax;pushl %ebx;movl (%esi), %ecx;calll  <.text+>;testb %al, %al": 1,
                "addl %ebx, %eax;adcl -(%ebp), %ecx;pushl %ecx;pushl %eax;leal -(%ebp), %ecx": 1,
                "testb %al, %al;movl $, %ebx;movl $, %edi;je  <.text+>;movl (%esi), %eax": 1,
                "pushl %edx;pushl (%esi);pushl %ebx;pushl %edi;pushl -(%ebp)": 2,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp);je  <.text+>;movl %esi, %eax": 1,
                "calll - <.text+>;leal (%edi), %ecx;leal (%ecx,%esi), %eax;cmpb $, (%eax);jne - <.text+>": 1,
                "jne - <.text+>;movl (%ebp), %ebx;cmpb $, (%ecx,%esi);movl %ebx, %ecx;jne  <.text+>": 1,
                "calll  <.text+>;testb %al, %al;je - <.text+>;incl %esi;cmpl %edi, %esi": 1,
                "popl %ecx;jne  <.text+>;cmpl %edi, %eax;je  <.text+>;movl %eax, %ecx": 1,
                "cmpl %edi, %edx;movl %eax, -(%ebp);je  <.text+>;incl %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, (%eax);calll  <.text+>;testb %al, %al;jne  <.text+>;cmpl $, %esi": 1,
                "movl %esp, %eax;movl %ecx, (%eax);movl %edi, (%eax);movl (%ebx), %ecx;calll  <.text+>": 1,
                "movl %edi, (%eax);movl (%ebx), %ecx;calll  <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "pushl -(%ebp);pushl (%ebx);pushl %eax;calll  <.text+>;testb %al, %al": 7,
                "jae  <.text+>;movl %edx, %ecx;movl (%ebx), %esi;movl -(%ebp), %edi;addl %eax, %esi": 1,
                "pushl %ecx;movl %esp, %eax;movl %esi, (%eax);movl %edi, (%eax);pushl -(%ebp)": 1,
                "calll *(%eax);movl %edi, (%ebx);xorb %bl, %bl;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl %ecx, %ebx;pushl %esi;pushl (%ebx);pushl (%ebx);calll - <.text+>": 1,
                "cmpl $, (%ebp);jne  <.text+>;pushl %esi;calll - <.text+>;movl %eax, %edi": 1,
                "rep  stosb %al, %es:(%edi);movl (%ebx), %eax;cmpl %esi, %eax;jb  <.text+>;movl %esi, %eax": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 3,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl (%ebx), %eax;testl %eax, %eax;movl %ecx, (%ebx)": 1,
                "calll - <.text+>;andl $, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);jmp  <.text+>": 1,
                "pushl (%ebp);movl %edi, (%eax);pushl (%ebp);movl %esi, (%eax);leal -(%ebp), %eax": 2,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;movl %edi, %ecx": 1,
                "adcl (%ebp), %edx;movl %ecx, -(%ebp);movl %edx, -(%ebp);pushl %ecx;pushl %ecx": 2,
                "movl %esp, %eax;pushl -(%ebp);movl %edi, (%eax);pushl -(%ebp);movl %esi, (%eax)": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %edi;testb $-, (%edi)": 1,
                "calll *(%eax);movl (%ebp), %ecx;movl (%ebp), %edx;movl %eax, %esi;imull (%edi), %esi": 1,
                "pushl %ecx;movl %esp, %eax;pushl %ecx;movl %ebx, (%eax);movl %ebx, (%eax)": 12,
                "pushl %eax;movl %ecx, -(%ebp);movl %edx, -(%ebp);calll - <.text+>;pushl (%eax)": 1,
                "pushl -(%ebp);movl %esi, (%eax);pushl -(%ebp);movl %ebx, (%eax);leal -(%ebp), %eax": 1,
                "cmpl %ecx, (%edi);je  <.text+>;pushl (%ebp);pushl %ecx;pushl %ecx": 1,
                "pushl %ebx;pushl %esi;calll  <.text+>;testb %al, %al;je  <.text+>": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;movl (%ebp), %edi;movl (%ebp), %esi": 1,
                "testb %al, %al;je  <.text+>;andl $, (%ebp);jmp  <.text+>;movl (%ebp), %ecx": 1,
                "pushl (%ebx);calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %edx": 1,
                "andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%ebp), %eax;movl %edx, (%eax);movb $, %bl": 1,
                "movl (%ebp), %eax;subl -(%ebp), %eax;cmpl %ecx, %eax;movl %eax, -(%ebp);jb  <.text+>": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx": 4,
                "movl -(%ebp), %ecx;movl (%ebp), %edi;leal (%eax,%edx), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "addl %eax, (%ebp);adcl %ecx, (%ebp);jmp  <.text+>;pushl %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl %ecx;movl %esp, %eax;pushl (%ebp);xorl %ecx, %ecx": 5,
                "pushl %ecx;movl %esp, %eax;pushl (%ebp);xorl %ecx, %ecx;pushl (%ebp)": 2,
                "pushl (%ebp);movl %esi, (%eax);movl %ecx, (%eax);leal -(%ebp), %eax;pushl %eax": 2,
                "addl $, %esp;xorb %bl, %bl;leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx": 1,
                "je  <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %edi;movl %ecx, %edx;shrl $, %ecx": 3,
                "je - <.text+>;leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;je - <.text+>": 10,
                "pushl (%ebx);pushl (%ebp);pushl (%ebp);calll - <.text+>;testb %al, %al": 4,
                "movl (%ebp), %ecx;movl $, %eax;cmpl %eax, %ecx;movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "shrl -(%ebp);jne - <.text+>;cmpl $, -(%ebp);pushl %edi;je  <.text+>": 1,
                "cmpl $, -(%ebp);pushl %edi;je  <.text+>;movl -(%ebp), %edi;testl %edi, %edi": 1,
                "andl $, %ecx;cmpl $, (%ebp);rep  stosb %al, %es:(%edi);jbe  <.text+>;pushl %esi": 1,
                "cmpl %esi, -(%ebp);je  <.text+>;movb $, (%ebp);xorl %eax, %eax;addl %esi, (%ebp)": 1,
                "popl %esi;pushl -(%ebp);calll - <.text+>;movb (%ebp), %al;jmp  <.text+>": 1,
                "je  <.text+>;calll  <.text+>;movl %eax, %edi;xorl %esi, %esi;testl %edi, %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax;movl (%eax), %ecx;pushl %esi": 2,
                "movl -(%ebp), %eax;movl (%eax), %ecx;pushl %esi;calll  <.text+>;testb %al, %al": 2,
                "cmpl %edi, %esi;jb - <.text+>;xorl %esi, %esi;testl %edi, %edi;jbe  <.text+>": 1,
                "cmpl %edi, %esi;jb - <.text+>;movb $, %al;popl %edi;popl %esi": 1,
                "addl (%ebp), %esi;movl %ecx, %edi;adcl (%ebp), %edi;movl %eax, (%ebp);pushl %edi": 1,
                "jmp  <.text+>;pushl %ebx;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 2,
                "calll - <.text+>;jmp  <.text+>;andl $, (%eax);calll - <.text+>;pushl (%ebp)": 1,
                "jne - <.text+>;jmp  <.text+>;xorb %bl, %bl;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "movl %esi, (%eax);calll  <.text+>;testb %al, %al;je  <.text+>;pushl (%edi)": 1,
                "pushl (%edi);leal -(%ebp), %ecx;calll  <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl -(%ebp), %ecx;adcl (%ebp), %ecx;pushl %esi;pushl %ebx;pushl -(%ebp)": 1,
                "xorl %esi, %esi;jmp  <.text+>;cmpb $, (%ebp);jne  <.text+>;pushl %ecx": 1,
                "pushl %ecx;movl %esp, %eax;pushl -(%ebp);movl $, (%eax);movl %esi, (%eax)": 1,
                "cmpl %esi, %ebx;jbe  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "je  <.text+>;incl %esi;cmpl %ebx, %esi;jb - <.text+>;movb $, %bl": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi": 2,
                "movl (%ebx), %eax;cmpl (%edi), %eax;jne  <.text+>;leal (%edi), %eax;pushl %eax": 1,
                "jne  <.text+>;leal (%edi), %eax;pushl %eax;leal (%ebx), %ecx;calll - <.text+>": 1,
                "cmpl (%ebp), %esi;jb - <.text+>;movb $, %al;jmp  <.text+>;xorb %al, %al": 2,
                "je  <.text+>;movl (%esi), %eax;pushl %edi;pushl %ebx;pushl (%ebp)": 1,
                "movb %al, %bl;jmp  <.text+>;cmpl %edi, (%esi);je  <.text+>;xorl %eax, %eax": 1,
                "movl %esi, %ecx;calll *(%eax);testb %al, %al;je - <.text+>;testw $, (%esi)": 1,
                "movl (%esi), %ecx;addl $, %ecx;pushl %edi;andl $-, %ecx;subl %ecx, %eax": 1,
                "pushl (%eax);pushl (%eax);leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 4,
                "pushl -(%ebp);movb $, -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "calll  <.text+>;movb %al, %bl;jmp  <.text+>;shrl (%ebp);jne  <.text+>": 1,
                "movl (%esi), %eax;pushl %edi;pushl -(%ebp);leal -(%ebp), %ecx;pushl (%ebp)": 1,
                "pushl %edx;calll *(%eax);testb %al, %al;je  <.text+>;movb $, %bl": 1,
                "xorb %bl, %bl;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "testb %al, %al;je  <.text+>;movb $, %bl;jmp - <.text+>;xorb %bl, %bl": 1,
                "movb $, (%esi);pushl (%ebp);calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "movl %esi, (%eax);movl %esi, (%eax);pushl (%ebx);leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebx), %ecx;movl (%ecx), %eax;movl %edi, -(%ebp);calll *(%eax);imull %esi, %eax": 1,
                "pushl %ecx;calll - <.text+>;movl %eax, -(%ebp);orl %edx, %eax;movl %edx, -(%ebp)": 1,
                "je  <.text+>;xorl %eax, %eax;cmpl %eax, -(%ebp);movb $, -(%ebp);ja  <.text+>": 1,
                "addl -(%ebp), %edx;adcl -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx;addl %edx, %ecx": 1,
                "movl %ebx, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;pushl %ecx": 1,
                "testb %al, %al;jne  <.text+>;andl $, -(%ebp);cmpl $, -(%ebp);jbe  <.text+>": 1,
                "movl -(%ebp), %eax;xorl %ecx, %ecx;addl -(%ebp), %eax;adcl -(%ebp), %ecx;pushl %ecx": 2,
                "movl (%ebp), %ecx;pushl %eax;calll - <.text+>;incl -(%ebp);movl -(%ebp), %eax": 1,
                "incl -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb - <.text+>;movb $, -(%ebp)": 1,
                "jb - <.text+>;jmp  <.text+>;movl -(%ebp), %eax;addl %esi, %eax;cmpl %edi, %eax": 1,
                "testb %al, %al;je  <.text+>;incl -(%ebp);jmp  <.text+>;pushl -(%ebp)": 1,
                "movl -(%ebp), %esi;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %esi, %edx;addl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;sbbl %ecx, %eax;movl -(%ebp), %ecx;subl %ecx, %esi;sbbl %edx, %eax": 1,
                "movl %esi, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;jmp  <.text+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;jmp  <.text+>;pushl %ecx;pushl %ecx": 1,
                "pushl -(%ebp);movl %esi, %edi;pushl %eax;calll - <.text+>;movl (%eax), %ecx": 1,
                "pushl -(%ebp);calll - <.text+>;testl %esi, %esi;je  <.text+>;pushl %esi": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 4,
                "popl %esi;popl %ebx;leave;retl $;movl -(%ebp), %ebx": 1,
                "movl %esi, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ecx": 1,
                "je  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;xorl %eax, %eax;testl %ebx, %ebx": 1,
                "jmp  <.text+>;movl (%ebp), %edi;pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "jne  <.text+>;cmpl %ebx, (%esi);jne  <.text+>;pushl $;pushl (%ebp)": 1,
                "movb %al, %bl;jmp  <.text+>;cmpl %ebx, (%esi);je  <.text+>;xorl %eax, %eax": 1,
                "je  <.text+>;xorl %eax, %eax;movb (%esi), %al;andl $, %eax;cmpb %bl, %al": 1,
                "cmpl %ebx, (%ebp);je  <.text+>;pushl (%ebp);movl (%esi), %eax;movl %esi, %ecx": 2,
                "subl $, %eax;movl (%esi), %ecx;pushl (%esi);addl $, %ecx;andl $-, %ecx": 1,
                "je  <.text+>;cmpb %bl, -(%ebp);jne  <.text+>;movl (%esi), %eax;pushl %ebx": 1,
                "imull (%esi), %eax;pushl %eax;movzbw (%esi), %ax;leal -(%ebp), %ecx;pushl %eax": 1,
                "movb $, (%ebp);jmp - <.text+>;movb %bl, (%ebp);cmpb %bl, (%ebp);jne - <.text+>": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;movl (%ebp), %eax": 2,
                "testb %al, %al;je  <.text+>;pushl %esi;pushl %edi;pushl (%ebx)": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);xorb %bl, %bl;leal -(%ebp), %ecx": 1,
                "movl %eax, %ecx;jmp  <.text+>;cmpl $, (%ebx);je - <.text+>;movl (%ebx), %ecx": 1,
                "movl %ecx, (%eax);pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 4,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <.text+>;movl (%eax), %eax": 2,
                "pushl %eax;calll - <.text+>;movl (%eax), %esi;movl (%eax), %edi;leal -(%ebp), %ecx": 2,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %ecx;testl %ecx, %ecx": 4,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %ecx;pushl %ecx": 4,
                "movl (%ebp), %edx;xorl %esi, %esi;incl %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %edi;pushl (%ebx);pushl $;pushl $": 1,
                "movb $, (%ebx);movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movb $, %bl": 1,
                "movl (%ebp), %eax;cmpl %edi, %eax;je  <.text+>;movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "movl (%esi), %ebx;calll *(%eax);movl %eax, %ecx;imull %ebx, %ecx;xorl %edx, %edx": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %ecx;movl %eax, -(%ebp);calll - <.text+>;testb %al, %al": 1,
                "movl -(%ebp), %ecx;movb %al, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "adcl -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %edx;leal -(%ebp), %eax": 1,
                "adcl -(%ebp), %edi;addl %edx, %eax;adcl %edi, %ecx;subl -(%ebp), %eax;sbbl -(%ebp), %ecx": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;addl %ecx, (%ebx);adcl %eax, (%ebx);jmp  <.text+>": 1,
                "addl %edx, %eax;adcl %edi, %ecx;pushl %ecx;pushl %eax;leal -(%ebp), %ecx": 1,
                "addl $, %eax;adcl $, %ecx;pushl %ecx;pushl %eax;calll - <.text+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;addl %edx, %eax;adcl -(%ebp), %ecx;movl %edx, -(%ebp)": 1,
                "movl %esp, %eax;andl $, (%eax);movl %ecx, (%eax);pushl -(%ebp);movl (%ebp), %ecx": 1,
                "calll  <.text+>;movl -(%ebp), %edi;movl -(%ebp), %eax;addl %edi, %eax;je  <.text+>": 1,
                "pushl %ecx;subl %edi, %edx;pushl %ecx;decl %edx;movl %esp, %eax": 1,
                "xorl %ecx, %ecx;pushl %eax;movl -(%ebp), %eax;xorl %edi, %edi;addl -(%ebp), %edx": 1,
                "addl -(%ebp), %ecx;pushl -(%ebp);movl -(%ebp), %eax;adcl -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;pushl (%esi);movl (%eax), %ecx;pushl (%esi);movl (%eax), %edi": 1,
                "movl (%esi), %eax;movl (%esi), %esi;subl %edi, %eax;sbbl -(%ebp), %esi;addl %eax, (%ebx)": 1,
                "subl %edi, %eax;sbbl -(%ebp), %esi;addl %eax, (%ebx);adcl %esi, (%ebx);jmp - <.text+>": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl %ecx, %edi": 2,
                "pushl %edi;movl %ecx, %edi;movl (%edi), %ecx;pushl %ecx;pushl %ecx": 1,
                "pushl %ecx;movl (%edi), %ecx;movl %esp, %eax;andl $, (%eax);movl %ecx, (%eax)": 1,
                "movl (%edi), %ecx;movl %esp, %eax;andl $, (%eax);movl %ecx, (%eax);movl (%esi), %eax": 1,
                "movl %edi, %ecx;calll *(%eax);movl %eax, %ecx;imull (%ebp), %ecx;movl (%ebp), %eax": 1,
                "pushl $;pushl (%ebp);movl %edi, %ecx;pushl (%ebp);leal (%esi), %ebx": 1,
                "pushl (%ebp);leal (%esi), %eax;pushl (%ebp);movl %ebx, %ecx;pushl (%ebp)": 1,
                "movb $, (%esi);pushl %edi;calll  <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl %eax, %ebx;movl (%esi), %eax;imull (%ebp), %ebx;imull (%ebp), %eax;leal -(%eax,%ebx), %eax": 1,
                "movl %eax, (%ebp);movl %esp, %eax;pushl %ecx;movl %edi, (%eax);movl %edi, (%eax)": 1,
                "pushl (%esi);pushl (%esi);pushl %ecx;pushl %ecx;movl %esp, %eax": 2,
                "imull (%ebp), %eax;pushl %edi;pushl %edi;pushl $;pushl %ecx": 1,
                "sbbl %ebx, %ebx;andl %eax, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ecx": 1,
                "movl %esp, %eax;movl %ecx, (%eax);movl %ecx, (%eax);leal -(%ebp), %ecx;calll  <.text+>": 1,
                "movl %ecx, (%eax);leal -(%ebp), %ecx;calll  <.text+>;testb %al, %al;je  <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;xorl %ebx, %ebx;movl %esi, %ecx;movb %bl, (%esi)": 1,
                "calll - <.text+>;movb %bl, %al;jmp  <.text+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);movl %ecx, (%eax);pushl -(%ebp);movl %ebx, (%eax);leal -(%ebp), %eax": 2,
                "movl (%eax), %eax;pushl %ebx;pushl %ebx;pushl $;pushl %ecx": 1,
                "movl %eax, %ecx;movl (%esi), %eax;leal -(%ecx,%eax,), %eax;xorl %edx, %edx;divl %ecx": 1,
                "pushl (%ebp);pushl %ecx;pushl %ecx;movl (%ebp), %ecx;movl %esp, %eax": 5,
                "movl %ebx, (%eax);pushl (%esi);leal -(%ebp), %eax;pushl (%esi);pushl %eax": 5,
                "pushl (%eax);leal -(%ebp), %eax;pushl %eax;calll - <.text+>;pushl (%eax)": 17,
                "movl %esp, %eax;movl %ebx, (%eax);movl %ebx, (%eax);movl (%esi), %eax;movl %esi, %ecx": 1,
                "pushl %edi;pushl (%esi);leal (%esi), %edi;pushl (%esi);movl %edi, %ecx": 1,
                "movl %ecx, %esi;xorl %eax, %eax;leal (%esi), %ecx;movl $, (%esi);movl %eax, (%esi)": 2,
                "calll - <.text+>;movb (%esi), %al;xorl %ebx, %ebx;cmpb %bl, %al;je  <.text+>": 1,
                "testb %al, %al;je  <.text+>;leal (%esi), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;cmpb %bl, -(%ebp);je  <.text+>": 26,
                "cmpb %bl, -(%ebp);je  <.text+>;pushl (%esi);leal -(%ebp), %eax;pushl %eax": 2,
                "movl (%esi), %ecx;movl (%esi), %edx;movl (%esi), %edi;leal -(%ebp), %ebx;pushl %ebx": 2,
                "movl %esi, %ecx;calll  <.text+>;testb %al, %al;je  <.text+>;pushl (%esi)": 2,
                "testb %al, %al;je  <.text+>;cmpb %bl, -(%ebp);je  <.text+>;pushl %ebx": 2,
                "pushl %ebx;pushl %esi;calll *(%eax);testb %al, %al;je  <.text+>": 2,
                "testb %al, %al;jne - <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx;calll - <.text+>;testb %al, %al": 36,
                "movw (%ecx,%eax,), %ax;jmp  <.text+>;movl (%ebp), %eax;popl %ebp;retl $": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;testl %eax, %eax;jne  <.text+>;movl (%edi), %ebx": 1,
                "xorl %eax, %eax;cmpl %edi, (%esi);jbe  <.text+>;movl (%esi), %ecx;movw %ax, (%ecx,%eax,)": 1,
                "testl %edx, %edx;jne  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>": 1,
                "movl (%ebp), %esi;leal (%ebx,%ebx), %ecx;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);je  <.text+>": 1,
                "jbe  <.text+>;movl (%ebp), %edi;movl (%ebp), %ebx;subl %edi, %ebx;movl (%ebp), %ecx": 1,
                "jb - <.text+>;movl (%ebp), %edx;movl (%ebp), %ebx;movl %ebx, %eax;subl %edx, %eax": 1,
                "subl %ecx, %edx;movzwl (%ecx,%edx), %eax;movzwl (%ecx), %edi;subl %edi, %eax;jne  <.text+>": 1,
                "movzwl (%ecx), %edi;subl %edi, %eax;jne  <.text+>;incl %esi;incl %ecx": 1,
                "popl %esi;popl %ebx;leave;retl $;movl %esi, %eax": 1,
                "popl %ebx;leave;retl $;movl %esi, %eax;jmp - <.text+>": 1,
                "movl (%ebp), %eax;testb $, %al;movl %ecx, (%esi);movb (%ebp), %cl;movb %cl, (%esi)": 1,
                "testb %al, %al;je  <.text+>;movl (%esi), %ecx;movl (%esi), %eax;shll $, %ecx": 1,
                "movl %ecx, %esi;calll - <.text+>;testb %al, %al;je  <.text+>;pushl (%ebp)": 2,
                "movl (%ebp), %esi;pushl %edi;pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;movl (%ebp), %edi;pushl %ecx;pushl %ecx": 1,
                "movl (%esi), %edi;movl %eax, (%ebp);pushl (%esi);movl (%ebp), %eax;addl (%ebp), %eax": 1,
                "jmp  <.text+>;movb $, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;movl (%ebp), %edi": 1,
                "pushl %ecx;movl $, (%eax);pushl %ecx;movl %esp, %eax;movl %esi, %ecx": 3,
                "movl %ebx, (%eax);calll - <.text+>;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%esi), %eax": 2,
                "movl %eax, -(%ebp);movl (%esi), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 2,
                "jne  <.text+>;cmpb %al, -(%ebp);je  <.text+>;pushl (%ebp);movl %esi, %ecx": 2,
                "je - <.text+>;pushl %ebx;pushl %esi;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "movl %ebx, (%ebp);jmp - <.text+>;pushl (%ebp);movl (%ebp), %eax;pushl (%ebp)": 1,
                "movl (%ebp), %ecx;movl %ecx, %eax;shrl $, %eax;testb $, %cl;je  <.text+>": 1,
                "andl $-, %esi;cmpl (%ebx), %esi;movl %esi, -(%ebp);jne  <.text+>;movl %ecx, (%ebx)": 1,
                "jne  <.text+>;movl %ecx, (%ebx);movl %edx, (%ebx);movb $, %al;jmp  <.text+>": 1,
                "je  <.text+>;movl %esi, %ecx;movl (%ebx), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%ebx), %ecx;movl (%ebx), %edx;subl %ecx, %eax;movl (%ebp), %ecx;sbbl %edx, %ecx": 1,
                "calll - <.text+>;movl (%ebx), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 1,
                "int;movl $, (%ecx);jmp  <.text+>;int;int": 3,
                "movl %esp, %eax;andl $, (%eax);movl $, (%eax);calll  <.text+>;popl %ebp": 2,
                "movl %esi, -(%ebp);jne  <.text+>;movl (%edi), %eax;movl (%edi), %ecx;movl %eax, (%ebp)": 1,
                "movl %esp, %eax;movl %ecx, (%eax);movl %esi, (%eax);movl (%edi), %eax;movl (%edi), %ecx": 3,
                "movl %esp, %ebp;pushl %esi;movl %ecx, %esi;movl $, (%esi);calll  <.text+>": 3,
                "movl (%ecx), %eax;movl (%ecx), %ecx;leal -(%ebp), %edx;pushl %edx;pushl %eax": 2,
                "cmpb %bl, %al;jne  <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>": 1,
                "movl (%ebp), %edi;pushl %edi;leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al": 3,
                "movl %esp, %eax;leal -(%ebp), %ecx;movl %esi, (%eax);movl %ebx, (%eax);calll - <.text+>": 3,
                "je  <.text+>;decl %eax;je  <.text+>;subl $, %eax;je  <.text+>": 1,
                "decl %eax;jne  <.text+>;movl (%ebp), %ebx;xorl %eax, %eax;cmpl (%ebp), %ebx": 1,
                "popl %ecx;leal (%ebp), %edi;leal (%ebp), %esi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi)": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);je  <.text+>": 2,
                "sbbl $-, %eax;jmp  <.text+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl (%eax), %eax": 1,
                "negl %eax;jmp  <.text+>;xorl %eax, %eax;jmp  <.text+>;pushl (%ebp)": 1,
                "jmp  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll - <.text+>": 1,
                "pushl (%ebp);calll - <.text+>;jmp  <.text+>;movl (%ebp), %edx;cmpl (%ebp), %edx": 1,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl (%ebp), %edi;movl (%ebp), %ebx;movl %eax, (%esi)": 1,
                "movl %eax, (%esi);calll - <.text+>;testl %eax, %eax;popl %ecx;je  <.text+>": 1,
                "movl %edi, (%esi);calll - <.text+>;testl %eax, %eax;movl %eax, (%esi);je  <.text+>": 1,
                "je  <.text+>;andl $, (%esi);leal (%esi), %ecx;calll  <.text+>;testb %al, %al": 1,
                "testb %al, %al;je  <.text+>;movb $, %al;jmp  <.text+>;movl %esi, %ecx": 2,
                "je  <.text+>;pushl (%esi);movl (%ebp), %edi;pushl %edi;leal -(%ebp), %ecx": 1,
                "cmpl $, (%ebp);je  <.text+>;pushl %ecx;pushl $-;pushl $": 1,
                "andl $, %eax;testl %ebx, %ebx;leal (%ecx,%eax,), %edx;jl  <.text+>;cmpl $, %ebx": 1,
                "jle  <.text+>;cmpl $, %ebx;je  <.text+>;cmpl $, %ebx;je  <.text+>": 1,
                "pushl %esi;movl %edi, %ecx;calll - <.text+>;movl %edi, %ecx;calll - <.text+>": 6,
                "calll - <.text+>;pushl $;pushl $;pushl $;jmp - <.text+>": 2,
                "pushl %eax;pushl (%esi);movl %edi, %ecx;pushl (%esi);calll - <.text+>": 1,
                "movl (%ebp), %ecx;pushl $;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 12,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%esi), %eax": 1,
                "xorl %eax, %eax;cmpl %ebx, %eax;movl %eax, (%esi);je  <.text+>;pushl $-": 3,
                "testb %al, %al;je  <.text+>;movl (%esi), %eax;movl (%eax), %ecx;movl (%ecx), %ecx": 1,
                "movl (%ecx), %eax;xorl %edx, %edx;divl (%esi);movl (%ecx), %ecx;pushl $": 1,
                "movl %eax, %edi;calll - <.text+>;cmpl %ebx, %eax;popl %ecx;je  <.text+>": 1,
                "je  <.text+>;pushl (%ebp);movl (%ebp), %ecx;pushl $;leal -(%ebp), %eax": 1,
                "calll *(%eax);imull (%esi), %eax;xorl %ebx, %ebx;cmpl %ebx, (%esi);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jbe  <.text+>;pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "movl (%esi), %ecx;calll - <.text+>;cmpb %bl, %al;jne  <.text+>;movl (%esi), %ecx": 1,
                "movl (%esi), %eax;shrl $, %eax;jmp  <.text+>;movl %ecx, %eax;pushl (%esi)": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;xorl %ecx, %ecx;movl %ecx, (%eax);pushl (%esi)": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;testb %al, %al;je  <.text+>;incl %edi": 1,
                "movl (%ebp), %esi;pushl %esi;leal (%ebp), %ecx;pushl %ecx;movl (%ebx), %ecx": 1,
                "movb $, -(%ebp);jmp  <.text+>;movl (%esi), %eax;xorl %edi, %edi;cmpl %edi, %eax": 1,
                "movl (%esi), %eax;movzwl (%eax), %ecx;pushl -(%ecx,%eax);pushl -(%ecx,%eax);calll - <.text+>": 5,
                "movl (%ebp), %ecx;calll  <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %ecx": 1,
                "testb %al, %al;jne  <.text+>;andl $, (%esi);xorl %edi, %edi;cmpl %edi, (%esi)": 1,
                "andl $, (%esi);xorl %edi, %edi;cmpl %edi, (%esi);jne - <.text+>;cmpl %edi, (%esi)": 1,
                "sete (%ebp);cmpb $, (%ebp);je  <.text+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "testb $, (%edi);jne  <.text+>;movzwl (%edi), %eax;addl %eax, %edi;jmp - <.text+>": 2,
                "movl (%esi), %ecx;pushl (%esi);movl (%ecx), %eax;pushl (%esi);pushl (%esi)": 5,
                "jne - <.text+>;testb $, (%edi);jne  <.text+>;movzwl (%edi), %eax;addl %eax, %edi": 1,
                "movl (%ebp), %eax;pushl (%esi);movzwl (%eax), %ecx;pushl (%esi);movl -(%ecx,%eax), %ebx": 1,
                "calll *(%eax);imull (%esi), %eax;pushl %eax;pushl %edi;pushl %ebx": 1,
                "jmp  <.text+>;movzwl (%edi), %eax;addl %eax, %edi;movl %esi, %ecx;pushl %edi": 1,
                "je - <.text+>;pushl -(%ebp);movl %esi, %ecx;pushl %ebx;calll - <.text+>": 1,
                "movl %esi, %ecx;pushl %ebx;calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;movl (%esi), %eax;movb %bl, (%esi)": 1,
                "jne - <.text+>;movb $, %al;popl %edi;popl %esi;popl %ebx": 3,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);jne  <.text+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "pushl %eax;movl %edi, %ecx;calll  <.text+>;movl (%eax), %ebx;movl (%eax), %eax": 1,
                "movl (%eax), %ecx;leal (%ecx,%eax), %eax;movb $, (%esi);jmp  <.text+>;movl (%esi), %edi": 1,
                "testb $, (%eax);je  <.text+>;pushl -(%ebp);movzwl (%eax), %ecx;pushl -(%ebp)": 1,
                "movl %eax, (%ebx);je  <.text+>;movl (%esi), %eax;movl %eax, (%ebx);movb (%esi), %al": 1,
                "movl (%esi), %eax;movl %eax, (%ebx);movb (%esi), %al;movb %al, (%ebx);movl (%esi), %eax": 1,
                "movl %eax, (%ebx);movb (%esi), %al;movb %al, (%ebx);movl (%esi), %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);cmpl %edi, (%esi);je  <.text+>;cmpl %edi, (%ebx);jne  <.text+>": 1,
                "cmpl %edi, (%ebx);jne  <.text+>;pushl (%ebx);calll - <.text+>;cmpl %edi, %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %esi;leal (%ebx), %edi;movl %edi, %ecx": 1,
                "pushl %edi;leal (%esi), %ebx;pushl %ebx;pushl (%esi);movl %esi, %ecx": 1,
                "movl %esi, %ecx;pushl (%esi);pushl %eax;calll - <.text+>;testb %al, %al": 1,
                "pushl (%esi);pushl %eax;calll - <.text+>;testb %al, %al;jne  <.text+>": 1,
                "movb $, (%eax);jmp - <.text+>;leal (%esi), %ecx;calll  <.text+>;testb %al, %al": 1,
                "movl (%eax), %ecx;leal (%ecx,%eax), %eax;movl %eax, (%esi);movb $, (%esi);testb $, (%eax)": 1,
                "calll - <.text+>;movl %esi, %ecx;calll - <.text+>;cmpl %edi, (%esi);jmp - <.text+>": 1,
                "movl %eax, (%ecx);movl (%ebp), %eax;movb $, (%eax);movl (%esi), %eax;popl %edi": 1,
                "movl (%ebp), %eax;movb $, (%eax);movb $, (%ebp);jmp  <.text+>;cmpl $, -(%ebp)": 1,
                "movb %al, (%ecx);leal -(%ebp), %ecx;calll  <.text+>;popl %esi;movb %bl, %al": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movzbl (%ebx), %eax;pushl %edi": 1,
                "pushl %eax;movzbl (%ebx), %eax;pushl %edi;pushl %ebx;leal (%eax,%eax), %eax": 1,
                "pushl %ebx;leal (%eax,%eax), %eax;pushl %eax;movl %esi, %ecx;calll - <.text+>": 1,
                "leal (%ebx), %esi;leal (%eax), %edi;popl %ecx;rep  movsl (%esi), %es:(%edi);movb (%ebx), %cl": 1,
                "movb (%ebx), %cl;movb %cl, (%eax);movl -(%ebp), %ecx;testl %ecx, %ecx;je  <.text+>": 1,
                "movl %ecx, %esi;movzwl (%eax), %ecx;movl -(%ecx,%eax), %edx;movl -(%ecx,%eax), %eax;pushl %edi": 1,
                "movl %edi, %ecx;pushl -(%ebp);pushl (%esi);calll  <.text+>;testb %al, %al": 1,
                "je  <.text+>;movl (%edi), %eax;movl (%eax), %ecx;leal (%ecx,%eax), %ebx;testb $, (%ebx)": 1,
                "jne  <.text+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax;movl (%ebp), %edi": 1,
                "testb %al, %al;je  <.text+>;movl (%ebp), %eax;movb $, (%eax);movl (%esi), %ecx": 1,
                "jmp  <.text+>;movl (%ebp), %eax;movb $, (%eax);movl (%esi), %eax;pushl $": 1,
                "calll  <.text+>;movb %al, %bl;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <.text+>;pushl (%ebx);movl (%ebx), %ecx;pushl (%ebx);movl (%ecx), %eax": 1,
                "pushl (%ebx);movl (%ebx), %ecx;pushl (%ebx);movl (%ecx), %eax;pushl (%ebx)": 3,
                "pushl %eax;pushl -(%ebp);leal -(%ebp), %ecx;pushl -(%ebp);pushl (%ebx)": 1,
                "movl %eax, -(%ebp);jne  <.text+>;pushl -(%ebp);movl %ebx, %ecx;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <.text+>;jmp - <.text+>;movzwl (%esi), %ecx;movl %ecx, %edx": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %esi;movl (%esi), %ecx": 1,
                "movl (%ebp), %esi;movl (%esi), %ecx;movb (%ecx), %cl;notb %cl;testb $, %cl": 1,
                "jmp  <.text+>;movzwl (%eax), %ecx;pushl -(%ecx,%eax);pushl -(%ecx,%eax);pushl $": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl %ebx, %ecx;calll - <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp);jne  <.text+>;movl (%ebp), %eax": 1,
                "movl %eax, -(%ebp);jne  <.text+>;movl (%ebp), %eax;movb $, (%eax);xorb %al, %al": 1,
                "movw (%esi), %ax;testb $, %al;movl -(%ebp), %edi;jne  <.text+>;cmpb $, -(%ebp)": 1,
                "movb $, -(%ebp);jmp  <.text+>;pushl (%ebx);pushl (%ebx);pushl -(%ebp)": 1,
                "movl %edi, %ecx;calll *(%eax);movzwl (%esi), %eax;movl -(%ebp), %ebx;pushl %eax": 1,
                "pushl %edi;calll - <.text+>;movw (%ebx), %ax;addl $, %esp;cmpw $, %ax": 1,
                "testb $, (%esi);jne  <.text+>;cmpb $, -(%ebp);jne  <.text+>;movb $, -(%ebp)": 1,
                "movl %edi, -(%ebp);jmp  <.text+>;cmpl -(%ebp), %edi;jne  <.text+>;movb $, -(%ebp)": 1,
                "jne  <.text+>;movb $, -(%ebp);jmp  <.text+>;pushl %ecx;pushl %ecx": 1,
                "movzwl (%esi), %eax;pushl %eax;pushl $;pushl %edi;calll - <.text+>": 2,
                "calll *(%eax);movzwl (%esi), %eax;pushl %eax;pushl $;pushl %edi": 1,
                "pushl %eax;pushl %edi;pushl -(%ebp);pushl $;pushl %ebx": 1,
                "calll - <.text+>;movb $, -(%ebp);pushl -(%ebp);calll - <.text+>;movb -(%ebp), %al": 1,
                "pushl (%esi);calll  <.text+>;testb %al, %al;jne  <.text+>;pushl -(%ebp)": 1,
                "testb $, (%eax);je - <.text+>;testb $, (%eax);je  <.text+>;pushl %ecx": 1,
                "pushl %ebx;leal -(%ebp), %ecx;calll  <.text+>;pushl (%esi);leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "decl %eax;pushl %eax;leal (%esi), %eax;pushl %eax;movzwl (%esi), %eax": 1,
                "xorb %bl, %bl;jmp  <.text+>;cmpl $, -(%ebp);je - <.text+>;movl (%ebp), %edi": 1,
                "movl (%ebp), %edi;testl %edi, %edi;pushl -(%ebp);movl %ebx, %ecx;pushl %esi": 1,
                "movl %ebx, %ecx;pushl (%ebp);calll - <.text+>;testb %al, %al;jne  <.text+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);je  <.text+>;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %edi;movl -(%ebp), %esi": 1,
                "pushl %edi;pushl %esi;movl %ebx, %ecx;calll - <.text+>;pushl $": 1,
                "calll - <.text+>;pushl $;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "imull (%ebx), %eax;pushl %eax;pushl %edi;pushl %esi;pushl (%ebx)": 1,
                "pushl %ecx;jne  <.text+>;movl (%ebx), %ecx;shrl $, %ecx;imull %esi, %ecx": 1,
                "imull %esi, %eax;movl %esp, %ecx;movl %eax, (%ecx);movl %edi, (%ecx);movl %ebx, %ecx": 1,
                "movl %esp, %ecx;movl %eax, (%ecx);movl %edi, (%ecx);movl %ebx, %ecx;calll - <.text+>": 1,
                "movzwl (%esi), %eax;movl %esi, -(%ebp);addl %eax, %esi;movl %esi, -(%ebp);movw (%esi), %ax": 1,
                "je  <.text+>;movl -(%ebp), %eax;testl %eax, %eax;je - <.text+>;testb $, (%eax)": 1,
                "je - <.text+>;movzwl (%esi), %ecx;movl %ecx, %edx;shrl $, %ecx;movl %eax, %edi": 1,
                "testl %ebx, %ebx;jne  <.text+>;xorb %al, %al;jmp  <.text+>;movl %edi, %ecx": 1,
                "pushl %ebx;movl %edi, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>": 2,
                "movl -(%eax,%esi), %edx;movl %edx, -(%ecx,%ebx);movl -(%eax,%esi), %eax;movl %eax, -(%ecx,%ebx);movl (%edi), %ecx": 2,
                "je - <.text+>;movzwl (%esi), %ebx;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "andl $, (%esi);testl %ecx, %ecx;movb %al, -(%ebp);je  <.text+>;movl (%ecx), %eax": 1,
                "calll *(%eax);andl $, (%esi);movb -(%ebp), %al;movl $, (%esi);jmp  <.text+>": 1,
                "testl %esi, %esi;movb %al, %bl;je  <.text+>;movl (%esi), %eax;pushl $": 1,
                "pushl $;movl %esi, %ecx;calll *(%eax);popl %esi;leal -(%ebp), %ecx": 1,
                "pushl $;pushl $;pushl $;calll  <.text+>;testb %al, %al": 1,
                "jne  <.text+>;movl (%esi), %ecx;testl %ecx, %ecx;je  <.text+>;movl (%ecx), %eax": 3,
                "cmpw (%ecx), %dx;jne  <.text+>;movl (%eax), %edx;cmpl (%ecx), %edx;jne  <.text+>": 1,
                "movl %eax, %esi;cmpl %edi, %esi;jne - <.text+>;cmpl %edi, %esi;jne  <.text+>": 1,
                "jmp  <.text+>;cmpl $, (%eax);je  <.text+>;movl (%eax), %ecx;cmpl (%esi), %ecx": 1,
                "movl (%ebx), %eax;movl (%ebx), %ecx;movl (%ebx), %edx;movl (%ebx), %esi;pushl %ebx": 1,
                "jne  <.text+>;xorl %esi, %esi;jmp  <.text+>;pushl (%ebp);leal -(%ebp), %eax": 1,
                "shrl %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp);pushl %ecx": 1,
                "calll - <.text+>;testb %al, %al;je - <.text+>;pushl %edi;leal -(%ebp), %ecx": 1,
                "jne  <.text+>;movzwl (%esi), %ecx;movzwl (%esi), %eax;addl $, %ecx;cmpl %ecx, %eax": 1,
                "addl $, %ecx;cmpl %ecx, %eax;jb  <.text+>;pushl %eax;calll - <.text+>": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;movl %eax, (%ebp);je  <.text+>": 1,
                "pushl $;jmp  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;pushl (%ebp)": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl (%ebp);calll - <.text+>;pushl $": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;calll - <.text+>;movl %esi, %eax": 1,
                "movl (%esi), %ecx;pushl %ecx;pushl %ecx;movl %esp, %eax;andl $, (%eax)": 3,
                "pushl %ebx;pushl %esi;shrl %eax;pushl %eax;pushl %ecx": 1,
                "popl %ecx;xorl %eax, %eax;pushl $;movl %esi, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "int;movl (%ecx), %eax;cmpb $, (%eax);jne  <.text+>;testb $, (%eax)": 1,
                "andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%ebp), %eax;andw $, (%ebx);movw %ax, (%ebx)": 2,
                "movl %eax, %ecx;movl %ecx, %edx;shrl $, %ecx;movw $, (%ebx);leal (%ebx), %edi": 2,
                "leal (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 2,
                "leal (%eax,%ebx), %edi;pushl $;rep  movsl (%esi), %es:(%edi);movl (%ebp), %ecx;pushl %ebx": 2,
                "testb %al, %al;pushl %ebx;je  <.text+>;calll - <.text+>;pushl -(%ebp)": 1,
                "calll - <.text+>;pushl -(%ebp);movl (%ebp), %ecx;calll - <.text+>;negb %al": 2,
                "pushl $;calll *(%eax);andl $, -(%ebp);movl (%ebp), %ecx;pushl $": 1,
                "je - <.text+>;movl %edi, %ecx;movl %ecx, %edx;shrl $, %ecx;xorl %eax, %eax": 2,
                "leal (%edi), %ecx;pushl (%ebp);calll  <.text+>;popl %edi;popl %esi": 1,
                "calll - <.text+>;movl (%ebp), %esi;andl $, (%edi);leal (%edi), %ebx;movl %ebx, %ecx": 1,
                "calll *(%eax);testl %eax, %eax;movl %eax, (%edi);je  <.text+>;leal (%edi), %ebx": 1,
                "rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%edx), %eax": 2,
                "xorl %eax, %eax;incl %eax;movl (%edx), %esi;movw %ax, (%esi);movl (%edx), %eax": 1,
                "movw %cx, (%eax);movl (%edx), %edi;xorl %eax, %eax;addl $, %edi;stosl %eax, %es:(%edi)": 1,
                "popl %edi;popl %esi;addl $, %ecx;andw $, %cx;movw %cx, (%eax)": 1,
                "pushl %esi;movl %ecx, %esi;leal -(%ebp), %ecx;calll - <.text+>;pushl (%ebp)": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>;pushl %ecx": 1,
                "cmpb %bl, (%ebp);je  <.text+>;pushl (%ebp);pushl %ecx;pushl %ecx": 1,
                "pushl %esi;calll - <.text+>;testb %al, %al;jne  <.text+>;pushl (%ebp)": 1,
                "orb $, -(%ebp);pushl %ebx;pushl %esi;leal -(%ebp), %ecx;calll - <.text+>": 2,
                "movl (%esi), %ecx;xorl %ebx, %ebx;pushl %ebx;pushl (%ebp);pushl (%ebp)": 2,
                "jne  <.text+>;pushl %edi;pushl %ecx;pushl %ecx;movl %esp, %eax": 2,
                "pushl (%ebp);movl %eax, %ecx;calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;pushl (%ebp);movl (%esi), %ecx": 2,
                "jmp  <.text+>;movl (%esi), %eax;pushl %edi;movzwl (%eax), %edi;jmp  <.text+>": 1,
                "movl (%esi), %eax;addl %edi, %eax;pushl %eax;pushl %ecx;leal -(%ebp), %ecx": 8,
                "calll  <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %eax;cmpl $-, (%eax)": 9,
                "leal -(%ebp), %ecx;pushl %ecx;movl (%ebp), %ecx;pushl %eax;pushl %esi": 3,
                "movl -(%ebp), %eax;movl %eax, %ecx;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);jne  <.text+>": 1,
                "movl (%esi), %edx;pushl %eax;pushl %ecx;movl (%ebp), %ecx;pushl %edx": 1,
                "calll - <.text+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 6,
                "testb %al, %al;je  <.text+>;movl -(%ebp), %eax;movw (%eax), %bx;movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 3,
                "pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl (%esi), %eax;cmpl %eax, %edi;jb - <.text+>;movb $, %bl;popl %edi": 1,
                "testb %al, %al;je  <.text+>;movl (%ebx), %eax;cmpl $-, (%eax);je  <.text+>": 1,
                "je  <.text+>;pushl $;pushl $;pushl (%ebp);movl %ebx, %ecx": 1,
                "pushl (%ebp);movl %ebx, %ecx;pushl (%ebp);calll  <.text+>;testb %al, %al": 1,
                "addl (%eax), %edi;movl (%esi), %eax;cmpl %eax, %edi;jb - <.text+>;jmp  <.text+>": 1,
                "movl (%ebp), %ebx;jae  <.text+>;movl (%esi), %ecx;pushl $;subl %edi, %eax": 1,
                "ja  <.text+>;jne  <.text+>;movb (%ecx), %al;testb %al, %al;jbe  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %edi;pushl (%ebp);movl %ecx, %edi": 1,
                "testb %al, %al;je  <.text+>;movl %edi, %ecx;pushl %esi;calll - <.text+>": 1,
                "calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>;cmpb $, (%ebp);jne  <.text+>": 1,
                "testb %al, %al;jne  <.text+>;xorb %bl, %bl;jmp  <.text+>;pushl %ecx": 1,
                "calll  <.text+>;testb %al, %al;je - <.text+>;leal -(%ebp), %ecx;leal -(%ebp), %eax": 1,
                "testb %al, %al;je - <.text+>;leal -(%ebp), %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;jmp - <.text+>;movl (%ebx), %eax;movw %di, (%eax);calll - <.text+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl (%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;pushl (%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movl (%eax), %ecx;movl (%eax), %eax;movb (%esi), %bl": 1,
                "movb (%esi), %bl;movl %eax, -(%ebp);movzbl %bl, %eax;leal (%eax,%eax), %edi;pushl %edi": 1,
                "calll - <.text+>;movl (%ebp), %edi;xorl %ebx, %ebx;cmpl $, (%ebp);movl %ebx, -(%ebp)": 1,
                "xorb %bl, %bl;jmp  <.text+>;movl %esi, %ecx;movb $, (%edi);calll - <.text+>": 1,
                "jmp  <.text+>;movl %esi, %ecx;movb $, (%edi);calll - <.text+>;testb %al, %al": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll  <.text+>;testb %al, %al": 2,
                "orl %ecx, %edi;movl %edi, -(%ebp);jmp  <.text+>;movl (%esi), %eax;movl (%esi), %ebx": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl $;pushl %esi": 1,
                "movl (%esi), %ecx;testl %ecx, %ecx;je  <.text+>;xorl %edi, %edi;andl %edi, -(%ebp)": 1,
                "movl (%ecx), %eax;pushl $;calll *(%eax);movb $, %bl;andl $, -(%ebp)": 1,
                "retl $;movl (%ebp), %eax;cmpl %eax, -(%ebp);jne - <.text+>;movl (%ebp), %ecx": 1,
                "jne - <.text+>;movl (%ebp), %ecx;testl %ecx, %ecx;jne  <.text+>;cmpl %ecx, -(%ebp)": 1,
                "pushl %ebx;calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %ecx;pushl (%ebp);pushl %ecx;movl %eax, %ecx": 1,
                "andl $, -(%ebp);testl %eax, %eax;je - <.text+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "je - <.text+>;movl (%eax), %eax;testl %eax, %eax;je - <.text+>;pushl %edi": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;movl (%ebp), %ebx;pushl $": 1,
                "cmpl %ebx, %ecx;je  <.text+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "pushl %eax;pushl %edi;calll  <.text+>;testb %al, %al;jne  <.text+>": 1,
                "pushl (%esi);jmp  <.text+>;movzwl -(%ebp), %eax;movl -(%ebp), %ecx;cltd": 1,
                "cltd;xorl %ebx, %ebx;xorl %edx, %edx;orl %ecx, %ebx;orl %edx, %eax": 1,
                "orl %ecx, %ebx;orl %edx, %eax;movl %eax, -(%ebp);jmp  <.text+>;movl (%esi), %eax": 1,
                "movl (%esi), %ebx;movl %eax, -(%ebp);pushl (%esi);pushl (%esi);pushl %eax": 1,
                "calll - <.text+>;addl $, %esp;jmp - <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "addl $, %esp;jmp - <.text+>;movl (%ebp), %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <.text+>;movl (%ebp), %esi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl %eax;pushl $;pushl %esi;pushl (%ebp);leal -(%ebp), %ecx": 1,
                "cmpb $, (%eax);jne  <.text+>;movl (%esi), %eax;addl $, %eax;andl $-, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 2,
                "jne - <.text+>;movl (%ebp), %eax;movb $, (%eax);xorb %bl, %bl;leal -(%ebp), %ecx": 1,
                "pushl %eax;pushl %edi;pushl (%ebp);pushl (%ebp);movl %esi, %ecx": 1,
                "pushl (%ebp);movl %eax, %ecx;calll - <.text+>;testb %al, %al;jne  <.text+>": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <.text+>;pushl %ebx;pushl %edi": 1,
                "calll - <.text+>;addl $, %esp;movl (%ebp), %eax;movb $, (%eax);jmp - <.text+>": 1,
                "jmp - <.text+>;movl (%ebp), %edi;movb $, (%edi);pushl %edi;pushl $": 1,
                "pushl $;pushl %ebx;movl %esi, %ecx;calll  <.text+>;movl %eax, %ebx": 2,
                "calll  <.text+>;movl %eax, %ebx;testl %ebx, %ebx;je - <.text+>;cmpb $, (%edi)": 2,
                "je  <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;cmpl $-, %ecx;je - <.text+>": 2,
                "andl $, (%eax);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>": 4,
                "pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;pushl (%eax);pushl (%eax)": 6,
                "pushl %eax;pushl %esi;calll - <.text+>;testb %al, %al;je  <.text+>": 3,
                "jne  <.text+>;movb $, (%edi);jmp - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;movl (%esi), %eax;movzwl (%eax), %edi;movb %bl, (%ebp);jmp  <.text+>": 1,
                "cmpb $, (%ebp);je  <.text+>;movl %esi, %ecx;calll - <.text+>;testb %al, %al": 2,
                "calll - <.text+>;testb %al, %al;je - <.text+>;pushl -(%ebp);movl (%esi), %ecx": 2,
                "movl (%esi), %ecx;leal (%eax,%edi), %edx;movl (%esi), %eax;subl %edx, %ecx;pushl %ecx": 2,
                "movl (%ebp), %ebx;movl (%esi), %ecx;movl (%ecx), %eax;calll *(%eax);jmp  <.text+>": 1,
                "movl (%esi), %ecx;movl (%ecx), %eax;calll *(%eax);jmp  <.text+>;xorb %bl, %bl": 1,
                "calll *(%eax);jmp  <.text+>;xorb %bl, %bl;jmp  <.text+>;leal -(%ebp), %eax": 1,
                "jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax": 2,
                "pushl (%ebp);pushl (%ebp);calll - <.text+>;testb %al, %al;je - <.text+>": 3,
                "calll - <.text+>;testb %al, %al;je - <.text+>;cmpb $, (%ebx);jne  <.text+>": 1,
                "je - <.text+>;cmpb $, (%ebx);jne  <.text+>;movl (%esi), %ecx;movl (%ecx), %eax": 1,
                "movl %eax, %edi;testl %edi, %edi;jne - <.text+>;movl (%ebp), %edi;cmpb $, (%ebx)": 1,
                "movl -(%ebp), %edi;movl %ecx, -(%ebp);movl %eax, -(%ebp);jmp - <.text+>;leal -(%ebp), %eax": 1,
                "pushl (%esi);pushl (%esi);calll - <.text+>;testb %al, %al;movb %al, -(%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;cmpl $, %eax;je  <.text+>": 1,
                "testb %al, %al;jne - <.text+>;xorl %ebx, %ebx;movl (%esi), %ecx;movl (%ecx), %eax": 1,
                "movl %edi, %ecx;calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl (%esi)": 1,
                "pushl %eax;calll - <.text+>;pushl -(%ebp);pushl (%eax);pushl (%eax)": 3,
                "popl %edi;movl %esi, %ecx;movl %edi, (%eax);movl %ebx, (%eax);calll - <.text+>": 1,
                "movl %eax, (%ebp);leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx;calll - <.text+>": 1,
                "movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl -(%ebp), %edi;pushl $;leal (%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl %ecx;pushl %ecx": 17,
                "pushl %ebx;pushl $;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "jne  <.text+>;movw -(%ebp), %ax;movw %ax, (%esi);movl -(%ebp), %ecx;leal (%ebp), %eax": 1,
                "cmpl $, (%eax);je  <.text+>;xorb %bl, %bl;jmp  <.text+>;movl %ebx, %ecx": 1,
                "cltd;pushl (%ebx);movl %eax, %edi;movl -(%ebp), %eax;xorl %ecx, %ecx": 1,
                "orl %eax, %esi;pushl %edi;pushl %esi;calll - <.text+>;testb %al, %al": 1,
                "pushl (%ebp);calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebx), %ecx": 1,
                "movl (%ebp), %esi;pushl $;leal (%eax), %edi;popl %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);leal -(%ebp), %eax;cmpl $, (%ebp);movl (%eax), %ecx": 1,
                "pushl %edi;pushl (%ebp);movl %ebx, %ecx;calll  <.text+>;cmpl %edi, %eax": 1,
                "je  <.text+>;movl -(%ebp), %eax;pushl (%eax);leal -(%ebp), %ecx;pushl %edi": 1,
                "pushl $;calll  <.text+>;testb %al, %al;movl -(%ebp), %eax;je  <.text+>": 1,
                "jne  <.text+>;pushl (%ebp);movl (%esi), %edi;pushl %edi;calll - <.text+>": 1,
                "movb (%edi), %al;movl (%ebp), %ecx;cmpb (%ecx), %al;jne  <.text+>;movb $, -(%ebp)": 1,
                "cmpl %eax, %edi;movb $, -(%ebp);jae  <.text+>;movl (%esi), %ecx;subl %edi, %eax": 1,
                "movb $, -(%ebp);jmp  <.text+>;movb $, -(%ebp);jmp  <.text+>;xorl %ebx, %ebx": 1,
                "jmp - <.text+>;xorl %ebx, %ebx;pushl (%ebp);movl (%esi), %ecx;movl (%ecx), %eax": 1,
                "jne - <.text+>;jmp  <.text+>;pushl %esi;calll - <.text+>;movl %eax, %edi": 1,
                "jmp  <.text+>;pushl %esi;calll - <.text+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "testb %al, %al;je  <.text+>;movl -(%ebp), %ebx;movl -(%ebp), %eax;cmpl (%ebx), %eax": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl (%eax);pushl (%eax);pushl -(%ebp)": 1,
                "movl %esi, %ecx;calll - <.text+>;pushl %eax;leal -(%ebp), %eax;pushl %eax": 5,
                "testb %al, %al;je  <.text+>;movw -(%ebp), %ax;cmpw (%ebx), %ax;jne  <.text+>": 1,
                "popl %ecx;je  <.text+>;movl (%esi), %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;addl %eax, %esi;movl (%ebx), %eax;cmpl %eax, %esi;jb - <.text+>": 1,
                "jne  <.text+>;movl (%ebx), %ecx;movw (%ecx), %cx;movw %cx, (%eax);movl (%ebx), %eax": 1,
                "movl (%ebx), %edi;addl (%ebp), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl (%esi), %eax;movw (%eax), %di;movl (%eax), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;movl %edi, %ecx;calll - <.text+>;pushl (%eax);pushl (%eax)": 2,
                "movl %ebx, %ecx;calll  <.text+>;cmpl %esi, %eax;movl %eax, -(%ebp);jne  <.text+>": 1,
                "pushl (%ebp);movl %eax, %esi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;pushl -(%ebp);movl %ebx, %ecx": 1,
                "testb %al, %al;je  <.text+>;pushl -(%ebp);movl %ebx, %ecx;calll  <.text+>": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%ebx), %ecx;leal -(%ebp), %eax": 1,
                "calll  <.text+>;testb %al, %al;jne - <.text+>;jmp  <.text+>;movl (%ebx), %ecx": 1,
                "testb %al, %al;jne - <.text+>;jmp  <.text+>;movl (%ebx), %ecx;leal -(%ebp), %eax": 1,
                "movb (%ebp), %bl;leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "calll *(%eax);jmp  <.text+>;pushl %ebx;xorl %ebx, %ebx;cmpb %bl, (%ebp)": 1,
                "calll - <.text+>;testb %al, %al;je - <.text+>;pushl %edi;movl (%esi), %ecx": 1,
                "pushl (%edi);movl (%esi), %ecx;pushl (%edi);calll - <.text+>;pushl (%esi)": 1,
                "je - <.text+>;movl (%eax), %edx;pushl $;movl %eax, %ecx;calll *(%edx)": 1,
                "movl %eax, %ecx;calll *(%edx);jmp - <.text+>;pushl %ebx;pushl %ebx": 1,
                "testb %al, %al;je  <.text+>;movl -(%ebp), %ecx;calll - <.text+>;testb %al, %al": 1,
                "movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;movl %ebx, (%esi);movl %ebx, (%esi)": 1,
                "movl %ebx, (%esi);movl $, -(%ebp);movl %ebx, (%edi);movl %ebx, (%edi);jmp  <.text+>": 1,
                "cmpl $-, %ecx;je  <.text+>;cmpb $, (%ebp);jb  <.text+>;cmpl $, %ecx": 1,
                "addl %eax, (%esi);movl -(%ebp), %eax;adcl %eax, (%esi);movl -(%ebp), %eax;addl %eax, (%edi)": 1,
                "leal -(%ebp), %ecx;pushl -(%ebp);movb $, -(%ebp);calll - <.text+>;testb %al, %al": 1,
                "jne - <.text+>;jmp  <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;cmpl %ebx, %eax": 1,
                "jmp  <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;cmpl %ebx, %eax;movl %ecx, -(%ebp)": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;jmp  <.text+>;cmpl $-, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);jne  <.text+>;pushl (%ebp);pushl %ecx;pushl %ecx": 2,
                "cmpb %bl, -(%ebp);movb $, -(%ebp);jne  <.text+>;movb %bl, -(%ebp);pushl %ebx": 2,
                "jne  <.text+>;movb %bl, -(%ebp);pushl (%edi);movl (%edi), %ecx;pushl (%edi)": 1,
                "movl (%edi), %ecx;pushl (%edi);calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %esi;movl %eax, -(%ebp);jne  <.text+>;pushl $": 1,
                "jmp  <.text+>;movl (%ebx), %eax;movb (%eax), %al;shrb %al;andb $, %al": 1,
                "je  <.text+>;cmpb $, -(%ebp);je  <.text+>;testb %al, %al;jne  <.text+>": 1,
                "testb %al, %al;je - <.text+>;movl -(%ebp), %eax;cmpb $, (%eax);jb  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %ebx, %ecx;movb $, -(%ebp);movb $, -(%ebp)": 2,
                "je  <.text+>;movb $, -(%ebp);testb $, -(%ebp);je  <.text+>;cmpl $, -(%ebp)": 1,
                "testb $, -(%ebp);je  <.text+>;cmpl $, -(%ebp);je  <.text+>;pushl (%ebx)": 1,
                "je  <.text+>;cmpl $, -(%ebp);je  <.text+>;pushl (%ebx);andb $-, -(%ebp)": 1,
                "pushl (%ebx);andb $-, -(%ebp);pushl (%ebx);movb $, -(%ebp);pushl %edi": 1,
                "testb $, %al;je  <.text+>;andl $-, %eax;orl $, %eax;movl %eax, (%esi)": 1,
                "pushl -(%ebp);calll - <.text+>;pushl (%ebx);pushl (%ebx);pushl $": 2,
                "addl $, %esp;andb $-, (%esi);movb $, -(%ebp);cmpb $, (%ebp);je  <.text+>": 1,
                "jmp  <.text+>;movl (%ebx), %eax;movl (%ebx), %ecx;pushl %eax;pushl -(%ebp)": 1,
                "testb %al, %al;je - <.text+>;xorl %eax, %eax;pushl %eax;movl %eax, -(%ebp)": 1,
                "cmpb $, (%ebp);je  <.text+>;pushl $;popl %ecx;leal -(%ebp), %edi": 1,
                "pushl %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax;movl %ebx, %ecx": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %eax;cmpl %esi, %eax": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %esi;pushl $": 2,
                "calll - <.text+>;addl $, %esp;movb $, -(%ebp);jmp  <.text+>;cmpb $, -(%ebp)": 2,
                "pushl %esi;pushl %ecx;addl $, %eax;pushl %eax;calll - <.text+>": 2,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;jne  <.text+>;movb $, -(%ebp)": 2,
                "jmp  <.text+>;cmpb $, -(%ebp);je  <.text+>;movb -(%ebp), %al;pushl (%ebx)": 1,
                "pushl %edi;jmp  <.text+>;movl -(%ebp), %ecx;leal (%ecx), %esi;testb $, (%esi)": 1,
                "testb $, (%esi);jne  <.text+>;incl -(%ebp);jmp  <.text+>;movl -(%ebp), %edx": 1,
                "testb %al, %al;je  <.text+>;movl %edi, -(%ebp);pushl -(%ebp);pushl $": 1,
                "je  <.text+>;movl -(%ebp), %edi;leal (%edi), %esi;movb (%esi), %al;movb %al, %cl": 1,
                "movb %al, %cl;andb $, %cl;je  <.text+>;testb $, %al;jne  <.text+>": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %eax;movl %ecx, -(%ebp);xorl %esi, %esi;pushl %esi": 1,
                "movl -(%ebp), %eax;movl %ecx, -(%ebp);xorl %esi, %esi;pushl %esi;leal -(%ebp), %ecx": 1,
                "pushl %ecx;pushl %eax;pushl %edi;pushl %esi;pushl $": 1,
                "andl $, -(%ebp);jmp  <.text+>;incl -(%ebp);pushl -(%ebp);leal -(%ebp), %eax": 1,
                "jne - <.text+>;xorl %edi, %edi;jmp  <.text+>;movl -(%ebp), %ecx;pushl $": 1,
                "calll - <.text+>;addl $, %esp;cmpl %edi, (%ebp);je  <.text+>;pushl %edi": 2,
                "pushl (%ebp);calll - <.text+>;movl %eax, %esi;testl %esi, %esi;jne  <.text+>": 2,
                "je  <.text+>;pushl (%esi);calll  <.text+>;movb %bl, (%esi);pushl (%esi)": 1,
                "movb $, %al;jmp  <.text+>;xorl %eax, %eax;incl %eax;retl": 2,
                "movl -(%ebp), %ecx;calll - <.text+>;orl $-, -(%ebp);xorb %al, %al;calll - <.text+>": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "pushl (%esi);calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movb $, %al": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "orl $-, -(%ebp);pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;pushl (%esi);pushl (%esi)": 3,
                "je  <.text+>;movl (%esi), %eax;movl (%esi), %esi;subl %ebx, %eax;sbbl %edi, %esi": 1,
                "movl %edi, (%eax);jmp  <.text+>;movl (%ebp), %eax;testl %eax, %eax;je  <.text+>": 1,
                "jmp  <.text+>;movl -(%ebp), %esi;pushl (%ebp);movl -(%ebp), %edi;pushl (%ebp)": 1,
                "movl -(%ebp), %esi;pushl (%ebp);movl -(%ebp), %edi;pushl (%ebp);movl %esi, %eax": 1,
                "sbbl -(%ebp), %ecx;cmpl $, (%ebp);je  <.text+>;movl -(%ebp), %edx;subl %eax, %esi": 1,
                "cmpl $, (%ebp);je  <.text+>;movl -(%ebp), %edx;subl %eax, %esi;sbbl %ecx, %edi": 1,
                "pushl %edi;addl %eax, %edx;adcl %ecx, %ebx;movl (%ebp), %ecx;pushl %esi": 1,
                "movl %eax, (%esi);calll  <.text+>;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;pushl %ebx": 1,
                "cltd;pushl $;popl %ebx;idivl %ebx;shrl $, %esi": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "testb %cl, %cl;je  <.text+>;movl (%ebp), %eax;cmpl %eax, (%ebp);jae  <.text+>": 1,
                "shrb $, %cl;incl %edi;movb %cl, (%ebp);movzbl %dl, %ebx;addl %ebx, (%ebp)": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %eax;cmpl %eax, (%ebp);ja  <.text+>": 1,
                "cmpl %edi, (%ebp);movl %eax, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;movl %ecx, -(%ebp);pushl %eax;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;cmpb $, -(%ebp);je  <.text+>;pushl %ecx": 1,
                "orl $-, (%eax);orl $-, (%eax);pushl (%ebx);pushl (%ebx);calll - <.text+>": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;xorb %al, %al;movb %al, -(%ebp)": 1,
                "addb -(%ebp), %al;movb %al, (%edi);movzbl -(%ebp), %ecx;addl %ecx, %esi;incl %edi": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movzbl -(%ebp), %ecx;movzbl -(%ebp), %eax;addl %ecx, -(%ebp)": 1,
                "adcl %eax, -(%ebp);incl -(%ebp);movl -(%ebp), %eax;addl $, %ebx;cmpl (%ebp), %eax": 1,
                "pushl %ecx;movl (%ecx), %edx;pushl %esi;pushl %edi;pushl $": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ecx)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movl %ebx, %ecx;calll - <.text+>": 1,
                "pushl %eax;pushl -(%ebp);movl %ebx, %ecx;calll - <.text+>;testb %al, %al": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;pushl -(%ebp);pushl -(%ebp)": 16,
                "jne  <.text+>;pushl -(%ebp);movl %edi, %ecx;pushl -(%ebp);pushl -(%ebp)": 1,
                "movl (%ebp), %ebx;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl -(%ebp)": 1,
                "je  <.text+>;movb $, (%eax);xorb %bl, %bl;jmp  <.text+>;andl $, (%ebp)": 1,
                "pushl %eax;pushl (%ebp);movl %ecx, %esi;calll - <.text+>;testb %al, %al": 1,
                "testb %al, %al;je - <.text+>;subl %ebx, (%ebp);sbbl %edi, (%ebp);andl $, -(%ebp)": 1,
                "testb %al, %al;je  <.text+>;cmpl %edi, (%ebp);je  <.text+>;movl (%ebp), %eax": 1,
                "je  <.text+>;movl (%esi), %ecx;andl $, -(%ebp);cmpl $, -(%ebp);movl (%esi), %ebx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);addl $, %eax;addl $, %edi;incl -(%ebp)": 1,
                "jb - <.text+>;pushl (%esi);pushl (%esi);pushl -(%ebp);pushl %ebx": 1,
                "movl (%esi), %ecx;movl %ecx, (%eax);movb %bl, %al;popl %edi;popl %esi": 1,
                "pushl (%ebp);calll - <.text+>;testb %al, %al;je  <.text+>;pushl (%ebp)": 3,
                "cmpl %ebx, %edx;je  <.text+>;incl %eax;pushl %ecx;pushl %ecx": 1,
                "cmpl %ecx, %eax;jae  <.text+>;movl %ecx, -(%ebp);jmp  <.text+>;movl (%esi), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ebx;leal -(%ebp), %ecx": 1,
                "adcl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "calll - <.text+>;movl (%ebp), %eax;movl (%ebp), %ecx;pushl $;movb $, (%eax)": 1,
                "testl %edi, %edi;movl %edi, (%ebp);jne  <.text+>;xorb %al, %al;jmp  <.text+>": 1,
                "xorb %al, %al;jmp  <.text+>;movl %esi, %ecx;movl %ecx, %eax;shrl $, %ecx": 1,
                "pushl %ebx;calll *;movl (%ebx), %edi;movl -(%ebp), %ecx;movl (%ebp), %esi": 1,
                "movl (%ebx), %edi;movl -(%ebp), %ecx;movl (%ebp), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl (%ebp), %eax;movl %ecx, (%esi);movl (%ebp), %ecx;movl %ecx, (%esi);movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esi);movl %eax, (%esi);movl %edx, (%esi);movl %eax, (%esi)": 1,
                "movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %edi, (%esi)": 1,
                "calll *(%eax);movl %eax, %ecx;movl (%ebp), %eax;xorl %edx, %edx;divl %ecx": 1,
                "addl %ecx, %ebx;movl (%ebp), %ecx;adcl %eax, %ecx;pushl %ecx;movl (%esi), %ecx": 1,
                "calll - <.text+>;testb %al, %al;popl %edi;je  <.text+>;movl -(%ebp), %eax": 1,
                "je  <.text+>;movl (%esi), %eax;pushl (%eax);movl (%esi), %ecx;pushl %edx": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;movl %ecx, %esi;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;addl $, %eax;adcl $, %ecx;movl %eax, (%esi)": 1,
                "calll - <.text+>;leal -(%ebp), %ecx;pushl %ecx;movl (%esi), %ecx;pushl %edi": 3,
                "movl (%esi), %ecx;pushl %edi;pushl (%eax);pushl (%eax);pushl (%esi)": 2,
                "jne  <.text+>;movl (%esi), %eax;movl (%eax), %ecx;movl (%esi), %eax;pushl (%eax)": 1,
                "movb %al, (%esi);popl %ebx;jmp  <.text+>;xorb %al, %al;popl %esi": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;pushl %eax;pushl -(%ebp);movl %edi, -(%ebp)": 1,
                "jmp  <.text+>;movw -(%ebp), %cx;cmpw -(%ebp), %cx;jae  <.text+>;pushl (%ebx)": 1,
                "pushl %esi;movl %ecx, %esi;pushl (%esi);pushl (%esi);calll - <.text+>": 1,
                "pushl (%esi);pushl (%esi);calll - <.text+>;cmpl $, (%esi);je  <.text+>": 1,
                "cmpl $, (%esi);je  <.text+>;movl (%esi), %ebx;pushl %edi;movl (%esi), %edi": 1,
                "movl -(%ebp), %eax;cmpl (%esi), %eax;jne  <.text+>;movb $, %bl;jmp  <.text+>": 2,
                "movzwl (%eax), %edi;addl %eax, %edi;leal (%edi), %eax;cmpl %ebx, %eax;ja  <.text+>": 1,
                "movl (%edi), %eax;testl %eax, %eax;jne  <.text+>;cmpl %eax, (%ebp);je  <.text+>": 2,
                "pushl (%esi);pushl %eax;pushl %edx;pushl $;pushl $": 2,
                "pushl (%esi);pushl %ecx;pushl %edx;pushl %eax;pushl $": 2,
                "jne  <.text+>;movl (%ecx), %ecx;movl (%esi), %eax;subl %edi, %ebx;subl $, %ebx": 1,
                "pushl %edi;calll - <.text+>;addl $, %esp;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "calll - <.text+>;addl $, %esp;movl (%esi), %eax;movl (%esi), %ecx;subl %ebx, %eax": 1,
                "movl %eax, (%ecx);movl (%ebp), %eax;testl %eax, %eax;je  <.text+>;movb $, (%eax)": 2,
                "cmpl $, (%ebp);je  <.text+>;pushl (%esi);movzwl (%edi), %edx;pushl (%esi)": 1,
                "pushl %ebx;pushl %ebx;movl %ecx, %esi;pushl %ebx;jmp  <.text+>": 1,
                "movl (%ebp), %ecx;pushl %ebx;pushl %ebx;pushl %ebx;leal -(%ebp), %eax": 1,
                "cmpl %ebx, %eax;jne  <.text+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "jmp  <.text+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "testb %al, %al;je  <.text+>;pushl (%esi);pushl %ebx;pushl %edi": 1,
                "testl %eax, %eax;jg  <.text+>;jne  <.text+>;movl %ebx, %ecx;calll - <.text+>": 1,
                "movl %ebx, %edi;movl %eax, %ebx;movl -(%ebp), %eax;pushl $;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;pushl (%esi);movl (%ebx), %eax": 1,
                "jmp - <.text+>;movl (%esi), %eax;testl %eax, %eax;je  <.text+>;movl (%eax), %ecx": 1,
                "pushl (%esi);movzwl (%eax), %edx;pushl %edx;pushl (%eax);pushl $": 1,
                "movb $, -(%ebp);movb $, -(%ebp);jne  <.text+>;cmpb $, (%eax);jne  <.text+>": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%ebp), %ecx;pushl $;pushl $": 1,
                "pushl (%esi);pushl $;pushl %eax;pushl $;pushl $": 2,
                "testb %al, %al;je  <.text+>;movb $, %bl;jmp  <.text+>;cmpw $, (%eax)": 1,
                "cmpw $, (%eax);movl $, %ebx;movl $, %edi;je  <.text+>;pushl %ecx": 1,
                "movl $, %ebx;movl $, %edi;je  <.text+>;pushl %ecx;pushl %ecx": 1,
                "movl %ecx, -(%ebp);calll - <.text+>;movl (%esi), %ecx;movl (%esi), %eax;movl %ecx, -(%ebp)": 1,
                "movl (%esi), %ecx;movl %eax, -(%ebp);movl (%esi), %eax;movw %ax, (%ecx);movl (%esi), %ecx": 1,
                "movl %ecx, -(%ebp);movl (%esi), %ecx;addl $, %esp;movl %eax, (%ecx);movb $, -(%ebp)": 1,
                "pushl $;pushl (%ebp);leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>": 1,
                "pushl %ecx;movl %esp, %eax;andl $, (%eax);movl $, (%eax);movzwl (%edi), %eax": 1,
                "andl $, (%eax);movl $, (%eax);movzwl (%edi), %eax;pushl %ecx;pushl %ecx": 1,
                "movzwl %ax, %eax;jb  <.text+>;pushl (%esi);movzwl %cx, %ecx;pushl (%esi)": 1,
                "movl %eax, %edi;testl %edi, %edi;jne - <.text+>;jmp  <.text+>;pushl %ecx": 1,
                "pushl %ebx;pushl %eax;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%eax), %edi;movl (%eax), %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "cmpb $, (%edi);je  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%edi), %eax": 1,
                "movzwl (%eax), %ecx;pushl (%esi);pushl %ecx;pushl (%eax);pushl $": 2,
                "movb $, -(%ebp);je  <.text+>;xorl %ebx, %ebx;jmp  <.text+>;testw $, (%eax)": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl %ebx;pushl (%eax);pushl (%eax)": 1,
                "pushl -(%ebp);movl %eax, %edi;pushl -(%ebp);movl (%edi), %eax;movl (%edi), %ebx": 1,
                "cmpb $, -(%ebp);je  <.text+>;movb $, (%edi);movl (%esi), %eax;movl (%esi), %ecx": 1,
                "cmpl $, %eax;sbbl %eax, %eax;incl %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "incl %eax;cmpl %ebx, %eax;je  <.text+>;movl (%esi), %eax;movl (%esi), %edi": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);movb $, -(%ebp);pushl %eax;calll - <.text+>": 1,
                "pushl -(%ebp);movb $, -(%ebp);pushl %eax;calll - <.text+>;movl %eax, %ebx": 1,
                "movl %esi, %ecx;calll - <.text+>;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jne - <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;xorb %bl, %bl;jmp  <.text+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %eax;cmpl %ebx, %eax;je  <.text+>;movb $, (%eax);cmpl %ebx, (%ebp)": 2,
                "cmpl %ebx, (%ebp);je  <.text+>;movl %esi, %ecx;calll - <.text+>;testb %al, %al": 3,
                "ja  <.text+>;movl (%ebp), %eax;movb $, (%eax);movb $, %bl;jmp  <.text+>": 1,
                "calll - <.text+>;addl $, %esp;movl (%ebp), %eax;pushl %edi;xorl %edi, %edi": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;movw %di, (%eax);incl %edi;pushl %ebx;movl %esi, %ecx": 1,
                "cmpl %ebx, (%ebp);movl (%esi), %eax;movw %di, (%eax);je  <.text+>;movl %esi, %ecx": 1,
                "cmpl %eax, %edi;jbe  <.text+>;xorb %al, %al;jmp  <.text+>;movl (%ebx), %ecx": 1,
                "movb $, (%ebp);jmp  <.text+>;movl (%esi), %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "je  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;pushl %ebx;pushl %ebx": 1,
                "movl %esi, %ecx;calll - <.text+>;movl %eax, %edi;cmpl %ebx, %edi;jne - <.text+>": 1,
                "pushl (%esi);movl (%ebp), %ecx;pushl (%esi);calll - <.text+>;testb %al, %al": 1,
                "je  <.text+>;movb $, %bl;jmp  <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "pushl -(%ebp);calll - <.text+>;testb %al, %al;jne  <.text+>;cmpl %ebx, -(%ebp)": 1,
                "jne  <.text+>;movzwl -(%ebp), %eax;pushl (%esi);movl -(%ebp), %ecx;pushl (%esi)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>": 69,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl %eax;calll - <.text+>;testb %al, %al": 1,
                "je  <.text+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;pushl %ebx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;calll *(%eax);movl %ebx, -(%ebp);jmp - <.text+>;movl -(%ebp), %ecx": 1,
                "cmpl %ebx, %eax;jne  <.text+>;movl (%ebp), %esi;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "pushl (%esi);movl -(%ebp), %ecx;pushl (%esi);calll - <.text+>;pushl %ebx": 1,
                "pushl $-;calll *;xorl %eax, %eax;jmp  <.text+>;movl $, %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl %eax, ;movl (%ebp), %eax;movl %eax, ": 2,
                "movl (%ebp), %eax;movl %eax, ;movl (%ebp), %eax;movl %eax, ;movb $, %al": 2,
                "pushl %edi;leal -(%ebp), %ecx;calll - <.text+>;movl (%ebp), %eax;movl (%ebp), %edi": 1,
                "movl %ebx, (%eax);calll - <.text+>;pushl (%ebp);movl %edx, %edi;pushl (%ebp)": 2,
                "pushl (%ebp);movl %edi, %ecx;pushl %ecx;pushl %eax;movl %eax, %esi": 2,
                "je  <.text+>;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp);pushl %edi": 3,
                "jmp  <.text+>;movl -(%ebp), %edi;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "cmpl %edx, %eax;jae  <.text+>;cmpl %ebx, %ecx;jne  <.text+>;movl %eax, (%esi)": 1,
                "movl %edx, (%esi);pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;cmpb %bl, %al;je  <.text+>;movl (%ebp), %eax;movl %edi, -(%ebp)": 1,
                "jmp  <.text+>;cmpb %bl, -(%ebp);je  <.text+>;pushl %ecx;xorl %edi, %edi": 1,
                "incl %edi;movl %edi, (%eax);movl %ebx, (%eax);movl (%ebp), %eax;cmpb %bl, (%eax)": 1,
                "pushl -(%ebp);calll - <.text+>;cmpb %bl, %al;jne  <.text+>;movl -(%ebp), %ecx": 1,
                "testb %al, %al;je  <.text+>;cmpb %bl, (%ebp);movl (%ebp), %esi;je  <.text+>": 1,
                "movb %bl, -(%ebp);calll - <.text+>;testb %al, %al;je  <.text+>;cmpl %ebx, (%ebp)": 2,
                "movl (%ebp), %eax;cmpb %bl, (%eax);je  <.text+>;movl (%eax), %eax;jmp  <.text+>": 21,
                "pushl %eax;calll - <.text+>;movl -(%ebp), %eax;cmpl %ebx, %eax;movl -(%ebp), %esi": 2,
                "addl $, %esp;movb $, -(%ebp);jmp  <.text+>;pushl %edi;pushl %esi": 1,
                "cmpb $, (%eax);jb  <.text+>;movl -(%ebp), %ecx;pushl %ebx;pushl $": 1,
                "movl %ebx, (%eax);pushl %ecx;movl %esp, %eax;movl %ecx, (%eax);movl (%ebp), %ecx": 2,
                "pushl -(%ebp);movb $, (%eax);pushl -(%ebp);pushl $;pushl $": 4,
                "testb %al, %al;jne  <.text+>;pushl -(%ebp);movl (%ebp), %eax;pushl -(%ebp)": 4,
                "jne  <.text+>;pushl -(%ebp);movl (%ebp), %eax;pushl -(%ebp);movb $, (%eax)": 4,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%edi), %eax;movl (%edi), %ecx": 3,
                "jmp  <.text+>;cmpb %bl, -(%ebp);je  <.text+>;pushl -(%ebp);movl $, %esi": 1,
                "je  <.text+>;movl (%edi), %eax;jmp  <.text+>;xorl %eax, %eax;movl -(%ebp), %ecx": 4,
                "calll - <.text+>;testb %al, %al;je  <.text+>;cmpb %bl, (%edi);je  <.text+>": 8,
                "jne - <.text+>;pushl $;pushl $;pushl $;pushl (%ebp)": 3,
                "movl %ebx, (%eax);movl %esp, %eax;pushl -(%ebp);movl $, %esi;movl %esi, (%eax)": 1,
                "pushl %eax;pushl -(%ebp);pushl %edi;calll - <.text+>;testb %al, %al": 1,
                "pushl %edi;calll - <.text+>;testb %al, %al;je  <.text+>;pushl %ecx": 6,
                "xorl %esi, %esi;pushl %ecx;movl %esp, %eax;incl %esi;movl %esi, (%eax)": 1,
                "movl (%eax), %ecx;jmp  <.text+>;xorl %ecx, %ecx;pushl -(%ebp);pushl %edi": 1,
                "pushl %ebx;pushl %ebx;pushl $-;calll *;movl %eax, %edi": 2,
                "jge  <.text+>;pushl -(%ebp);movl , %esi;calll *%esi;pushl -(%ebp)": 2,
                "pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl %eax;leal -(%ebp), %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl -(%ebp);movl $, -(%ebp)": 2,
                "movl , %esi;calll *%esi;pushl -(%ebp);calll *%esi;pushl -(%ebp)": 2,
                "movl %edi, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;movl (%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl %esi, (%eax);movl %ebx, (%eax);calll - <.text+>;cmpb %bl, %al": 1,
                "jmp  <.text+>;movl (%ebp), %ecx;movl %ecx, (%eax);pushl %ebx;pushl (%ebp)": 1,
                "movl %ecx, (%eax);pushl %ebx;pushl (%ebp);calll *;cmpl %ebx, %eax": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;movl (%edi), %esi;movl %ecx, -(%ebp);movl %edi, %ecx": 1,
                "movl %eax, -(%ebp);calll - <.text+>;movl (%esi), %edx;movzbl %al, %eax;movl %esi, %ecx": 1,
                "movl (%esi), %edx;movzbl %al, %eax;movl %esi, %ecx;movl %eax, -(%ebp);calll *(%edx)": 2,
                "cmpl $, %eax;jae  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl (%edi), %ecx": 1,
                "movl %edi, %ecx;movl %eax, -(%ebp);calll - <.text+>;movl -(%ebp), %ecx;movzbl %al, %eax": 1,
                "xorl %edx, %edx;divl %ecx;movl -(%ebp), %edi;movl %eax, -(%ebp);movzbl (%edi), %eax": 1,
                "testl %eax, %eax;jne  <.text+>;movl (%ebp), %edi;movl (%edi), %eax;addl %eax, -(%ebp)": 1,
                "pushl $;pushl $;pushl (%ebp);movb $, (%eax);calll - <.text+>": 1,
                "pushl %edi;movl %ebx, (%eax);calll - <.text+>;cmpb %bl, %al;je  <.text+>": 3,
                "cmpb %bl, %al;je  <.text+>;pushl -(%ebp);pushl %edi;pushl %ecx": 1,
                "movl %ebx, (%eax);calll - <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %edx": 2,
                "calll - <.text+>;pushl (%eax);movl (%ebp), %ecx;pushl (%eax);calll - <.text+>": 5,
                "testb $, (%eax);je  <.text+>;movl %esi, %ecx;calll - <.text+>;testb %al, %al": 1,
                "je  <.text+>;pushl %ecx;pushl %ecx;movl , %ecx;movl %esp, %eax": 1,
                "je  <.text+>;movl (%esi), %eax;movl (%eax), %ecx;movl %ecx, ;movl (%eax), %eax": 2,
                "pushl %eax;pushl -(%ebp);leal -(%ebp), %ecx;pushl -(%ebp);pushl (%ebp)": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;cmpb %bl, -(%ebp);jne  <.text+>": 1,
                "movl (%eax), %edi;movl %esi, %ecx;calll - <.text+>;pushl %eax;pushl %edi": 1,
                "pushl %ebx;pushl (%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp)": 1,
                "testl %edi, %edi;jne  <.text+>;movl (%ebp), %esi;movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "pushl %ebx;pushl %edi;calll - <.text+>;movl -(%ebp), %ecx;movzbl %al, %eax": 1,
                "xorl %ebx, %ebx;pushl %ebx;pushl (%ebp);calll *;movl %eax, %edi": 1,
                "jmp  <.text+>;pushl $;pushl $-;calll *;xorl %eax, %eax": 1,
                "movb $, %bl;jmp  <.text+>;movl , %esi;pushl %ebx;pushl $": 1,
                "divl %ecx;pushl $;movl %eax, %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;movl %eax, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ecx": 1,
                "movl %esi, (%eax);movl (%ebx), %eax;movl (%ebx), %ecx;leal -(%ebp), %edx;pushl %edx": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;cmpb $, (%ebp)": 1,
                "movl %ecx, (%eax);movl %esi, (%eax);pushl -(%ebp);pushl -(%ebp);calll - <.text+>": 1,
                "addl $, %esp;jmp  <.text+>;movl -(%ebp), %edi;pushl %ecx;pushl %ecx": 1,
                "testb %al, %al;je  <.text+>;movl (%ebx), %ecx;movl -(%ebp), %eax;leal -(%ecx,%eax), %eax": 1,
                "je  <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>;movl (%ebp), %ecx": 1,
                "pushl %ebx;calll - <.text+>;testb %al, %al;je - <.text+>;cmpb $, (%ebp)": 1,
                "jmp  <.text+>;movl (%ebp), %ecx;pushl $;xorb %bl, %bl;calll - <.text+>": 2,
                "pushl %esi;movl %ecx, %esi;leal -(%ebp), %ecx;calll - <.text+>;xorl %ebx, %ebx": 3,
                "calll  <.text+>;movl (%ebp), %edx;movl %eax, %ecx;xorl %eax, %eax;movl %edx, %edi": 2,
                "stosl %eax, %es:(%edi);popl %edi;movl %ecx, (%edx);popl %esi;popl %ebp": 2,
                "pushl %edi;pushl $;pushl %esi;pushl $;calll  <.text+>": 1,
                "movl %ecx, %esi;calll - <.text+>;movl (%ebp), %eax;movl %eax, %edi;shll $, %edi": 1,
                "popl %esi;retl;movl (%esi), %ecx;shll $, %ecx;movl %ecx, %edx": 1,
                "retl;movl (%esi), %ecx;shll $, %ecx;movl %ecx, %edx;pushl %edi": 1,
                "testl %esi, %esi;je  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx": 1,
                "movb (%eax), %al;movl -(%ebp), %ecx;movb %al, (%esi,%ecx,);incl -(%ebp);movzwl -(%ebp), %eax": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl %ecx, %esi;cmpb $, (%esi)": 1,
                "pushl %esi;movl %ecx, %esi;cmpb $, (%esi);pushl %edi;je  <.text+>": 1,
                "movl (%esi), %ecx;pushl $;pushl %ebx;pushl %edi;calll - <.text+>": 1,
                "jne  <.text+>;pushl (%esi);movl (%esi), %ecx;movl (%ecx), %eax;pushl %ebx": 1,
                "pushl (%eax);calll - <.text+>;testb %al, %al;je  <.text+>;movl (%esi), %ecx": 1,
                "andl $, (%eax);movl $, (%eax);pushl -(%ebp);movl (%esi), %ecx;pushl -(%ebp)": 2,
                "movl (%esi), %ecx;calll - <.text+>;testb %al, %al;je - <.text+>;xorl %ecx, %ecx": 1,
                "leal -(%eax,%edi), %eax;divl %edi;movl (%esi), %edx;testl %edx, %edx;je - <.text+>": 1,
                "pushl %edx;pushl %eax;pushl (%ecx);pushl (%ecx);movl (%esi), %ecx": 1,
                "pushl (%ecx);pushl (%ecx);movl (%esi), %ecx;calll - <.text+>;testb %al, %al": 1,
                "subl %eax, %ecx;sbbl %edx, %esi;jmp  <.text+>;calll - <.text+>;movl (%esi), %ecx": 1,
                "pushl $;popl %esi;pushl %esi;pushl %ecx;pushl %ecx": 1,
                "cmpl $, (%ebp);jb - <.text+>;movb $, %bl;jmp  <.text+>;pushl $": 1,
                "movl (%ebp), %ecx;pushl $;calll - <.text+>;xorl %ebx, %ebx;pushl %ebx": 1,
                "movl (%eax), %edi;pushl %ecx;pushl %ecx;movl %esp, %eax;pushl %edi": 1,
                "pushl %esi;leal (%ebp), %eax;pushl %eax;calll - <.text+>;movl (%eax), %ecx": 1,
                "calll - <.text+>;movl (%eax), %ecx;movl (%eax), %eax;addl $, %ecx;pushl %ecx": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;calll - <.text+>;pushl %ecx": 1,
                "cmpb %bl, %al;je  <.text+>;calll - <.text+>;cmpl %eax, -(%ebp);jne  <.text+>": 1,
                "movl (%ebp), %edi;pushl %esi;pushl %edi;calll - <.text+>;testb %al, %al": 1,
                "movl (%ebp), %ecx;xorl %eax, %eax;subl -(%ebp), %edi;sbbl %eax, %esi;pushl %esi": 1,
                "movl -(%ebp), %eax;pushl %ecx;pushl %eax;pushl %ebx;pushl %edi": 1,
                "pushl %eax;pushl %ebx;pushl %edi;movl %eax, (%ebp);movl %ecx, (%ebp)": 1,
                "movl (%ebp), %ecx;pushl %ebx;movb %al, (%ecx);pushl %edi;leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;pushl (%esi);movl %eax, -(%ebp);movl (%esi), %eax;pushl %eax": 1,
                "calll - <.text+>;cmpb %bl, (%ebp);movl %eax, %edi;je  <.text+>;movl (%ebp), %edx": 1,
                "cmpl $-, %edx;jbe  <.text+>;pushl $;movl (%ebp), %ecx;calll - <.text+>": 1,
                "pushl $;movl (%ebp), %ecx;calll - <.text+>;movl (%ebp), %eax;movl -(%ebp), %ecx": 1,
                "jmp - <.text+>;pushl -(%ebp);pushl -(%ebp);pushl %ecx;pushl %ecx": 1,
                "sbbl -(%ebp), %eax;movl %edi, %ecx;subl $, %ecx;sbbl %ebx, %eax;pushl %eax": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;pushl %ebx;pushl (%ebp)": 4,
                "pushl %edi;calll - <.text+>;testb %al, %al;je  <.text+>;movl %esi, %ecx": 1,
                "je  <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>;cmpb %bl, (%ebp)": 1,
                "cmpl %ebx, (%ebp);je  <.text+>;pushl (%ebp);pushl %ecx;pushl %ecx": 1,
                "je  <.text+>;movl %edi, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %ecx;pushl $": 1,
                "movl %ebx, (%eax);calll - <.text+>;cmpb %bl, %al;jne  <.text+>;movl (%ebp), %edi": 1,
                "movl (%ebp), %ecx;je  <.text+>;pushl $;jmp - <.text+>;pushl $": 2,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <.text+>": 1,
                "pushl $;calll - <.text+>;movl (%ebp), %ecx;pushl $;movb $, (%edi)": 1,
                "testb %al, %al;movl (%ebp), %eax;jne - <.text+>;movl %ebx, (%eax);movl %ebx, (%eax)": 1,
                "cmpl $, (%ebp);pushl %esi;movl %ecx, %esi;jne  <.text+>;pushl (%esi)": 1,
                "pushl %esi;movl %ecx, %esi;jne  <.text+>;pushl (%esi);movl (%esi), %eax": 1,
                "movl %eax, (%esi);je  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl (%esi)": 1,
                "jmp  <.text+>;movl (%esi), %ecx;xorl %eax, %eax;movl %ecx, %edx;shrl $, %ecx": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl (%esi), %eax": 1,
                "movl %ecx, (%eax);movl (%esi), %eax;movl $, (%eax);movl (%esi), %eax;movl (%eax), %edx": 1,
                "pushl %esi;pushl %edi;movl %ecx, %edi;movl (%edi), %eax;movl (%eax), %ecx": 2,
                "popl %ebx;movl (%ebp), %eax;movl %esi, (%eax);movb -(%ebp), %al;popl %edi": 2,
                "movl (%ebp), %edi;subl %edi, %ecx;leal (%ecx,%eax), %eax;pushl %eax;movzwl (%esi), %eax": 1,
                "movl (%ecx), %eax;movl (%eax), %esi;movl %esi, (%eax);movl (%ecx), %ecx;movl (%ecx), %eax": 1,
                "movl (%ecx), %ecx;movl (%ecx), %eax;leal (%eax,%ecx), %ecx;pushl %edi;xorl %eax, %eax": 1,
                "movl %ebx, (%eax);movl (%edi), %eax;movl %edi, %ecx;calll *(%eax);cmpb %bl, %al": 1,
                "movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;leal (%esi), %edi": 1,
                "popl %esi;jne  <.text+>;movl (%ebp), %ecx;movw $, (%eax);movw $, (%eax)": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;testl %ebx, %ebx;pushl %esi": 1,
                "je  <.text+>;movl (%ebx), %eax;movl %eax, -(%ebp);jmp  <.text+>;andl $, -(%ebp)": 1,
                "pushl %eax;pushl %ecx;pushl (%esi);movl (%ebp), %ecx;calll - <.text+>": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %ecx;cmpl (%esi), %ecx": 1,
                "calll - <.text+>;testb %al, %al;je - <.text+>;xorb %bl, %bl;popl %edi": 1,
                "pushl (%esi);pushl (%esi);calll - <.text+>;movl (%esi), %ecx;movl (%esi), %eax": 1,
                "pushl %edi;movl %ecx, %edi;movzwl (%esi), %ecx;movl (%edi), %eax;addl (%eax), %ecx": 1,
                "jmp  <.text+>;cmpl $, (%ebp);jne  <.text+>;andl $, (%ebp);leal (%ebp), %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %esi;movl %edi, %ecx": 1,
                "pushl %eax;pushl %esi;movl %edi, %ecx;calll - <.text+>;movl (%edi), %eax": 1,
                "pushl %esi;movl %edi, %ecx;calll - <.text+>;movl (%edi), %eax;movl (%eax), %ecx": 1,
                "movl (%edi), %eax;addl %ecx, (%eax);movzwl (%esi), %ecx;movl %ecx, %eax;shrl $, %ecx": 1,
                "leal (%edi,%esi), %eax;pushl %edi;pushl %eax;calll *;movl %esi, %ecx": 1,
                "movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;addl $, %esp": 1,
                "movl (%ebp), %ecx;addl %ecx, (%eax);popl %edi;popl %esi;popl %ebx": 1,
                "addl %ecx, (%eax);popl %edi;popl %esi;popl %ebx;popl %ebp": 1,
                "movl %esp, %ebp;pushl %esi;movl %ecx, %esi;movl (%esi), %eax;movl (%eax), %ecx": 1,
                "movl (%esi), %ecx;movl (%ebx), %esi;movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "calll - <.text+>;movl %edi, %ecx;imull (%ebp), %ecx;pushl %ecx;pushl (%eax)": 1,
                "movl %esi, %ecx;pushl (%eax);pushl (%ebp);pushl (%ebp);calll - <.text+>": 1,
                "movl %ecx, %esi;pushl (%esi);movl (%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %edi;pushl (%ebp);movl %esi, %ecx;movl %edi, (%esi);calll - <.text+>": 1,
                "movl (%ebp), %edi;addl $, %edi;movl (%edi), %eax;movl %edi, %ecx;calll *(%eax)": 1,
                "testl %eax, %eax;jbe  <.text+>;movl (%ebp), %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "jbe  <.text+>;movl (%ebp), %ecx;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "andl $, (%eax);calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%ebp), %eax": 1,
                "je  <.text+>;subl (%ebp), %edi;sbbl (%ebp), %ebx;movl %edi, (%ebp);movl %ebx, (%ebp)": 1,
                "subl (%ebp), %edi;sbbl (%ebp), %ebx;movl %edi, (%ebp);movl %ebx, (%ebp);cmpl $, (%esi)": 1,
                "movl %esi, %ecx;calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%ebp), %ecx": 2,
                "pushl $;movb $, (%edi);calll - <.text+>;movl (%esi), %ecx;pushl %ecx": 1,
                "calll - <.text+>;movl (%esi), %ecx;pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "movl (%ebp), %ecx;calll - <.text+>;jmp  <.text+>;movl (%esi), %eax;cmpb %bl, (%eax)": 1,
                "pushl (%ebp);movl (%ecx), %eax;pushl %esi;calll *(%eax);testb %al, %al": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;cmpl $, (%esi);jne  <.text+>;pushl $-": 1,
                "calll - <.text+>;movl (%ebp), %eax;popl %esi;leave;retl $": 1,
                "movl (%ebx), %eax;pushl %esi;movl %eax, -(%ebp);movl (%ebx), %eax;pushl %edi": 1,
                "retl $;movl (%ebp), %edx;pushl %esi;movl (%eax), %esi;movl %esi, (%edx)": 1,
                "movl %esi, (%eax);movl (%edx), %edx;movl %edx, (%eax);movl (%ebp), %eax;cmpl %ebx, %eax": 2,
                "movl (%ebp), %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;movb $, %al": 1,
                "calll - <.text+>;movl (%esi), %eax;movl (%ebp), %ecx;cmpl (%eax), %ecx;je  <.text+>": 1,
                "je  <.text+>;movl (%esi), %eax;movzbl (%eax), %ecx;pushl %ecx;movzwl (%eax), %ecx": 1,
                "jne  <.text+>;cmpl %ebx, (%ebp);je  <.text+>;movl (%esi), %eax;cmpb %bl, (%eax)": 1,
                "movl (%ebp), %ecx;cmpl (%eax), %ecx;jne  <.text+>;movl (%ebp), %esi;pushl %edi": 1,
                "jne  <.text+>;movl (%ebp), %esi;pushl %edi;movzwl (%eax), %edi;addl %eax, %edi": 1,
                "movl %ecx, (%eax);movl (%esi), %eax;movw (%ebp), %cx;pushl %ebx;xorl %ebx, %ebx": 1,
                "addl $, %edx;andw $, %dx;movw %dx, (%eax);jmp  <.text+>;movb %bl, (%eax)": 1,
                "jmp  <.text+>;movb %bl, (%eax);movl (%esi), %eax;movw %bx, (%eax);movl (%esi), %eax": 2,
                "pushl %edx;addl %eax, %ebx;pushl %ebx;pushl %edx;pushl $": 1,
                "movl %ecx, %ebx;shrl $, %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi);movl %ebx, %ecx": 1,
                "movl (%esi), %eax;addl $, %edx;xorl %ebx, %ebx;andw $, %dx;cmpl %ebx, %edi": 1,
                "movl (%esi), %eax;movw %dx, (%eax);cmpw %bx, -(%ebp);movl (%esi), %eax;movb (%ebp), %cl": 1,
                "movw %dx, (%eax);cmpw %bx, -(%ebp);movl (%esi), %eax;movb (%ebp), %cl;movb %cl, (%eax)": 1,
                "cmpw %bx, -(%ebp);movl (%esi), %eax;movb (%ebp), %cl;movb %cl, (%eax);movl (%esi), %eax": 1,
                "movb %cl, (%eax);movl (%esi), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;movl (%ebp), %ecx": 2,
                "cmpl $, %edi;je  <.text+>;testb $, (%eax);jne  <.text+>;movl (%esi), %ecx": 1,
                "movb (%eax), %al;movl %ecx, %edx;movzwl (%edx), %ecx;addl %edx, %ecx;xorb %dl, %dl": 1,
                "pushl %eax;pushl %edi;movl (%ebp), %edi;movl %edi, %ecx;calll  <.text+>": 1,
                "pushl %ecx;jmp  <.text+>;pushl $;pushl $;pushl (%eax)": 1,
                "jne - <.text+>;cmpb $, (%eax);je - <.text+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "testb $, (%eax);jne  <.text+>;movl (%esi), %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "movl (%eax), %ebx;andl $, -(%ebp);jmp  <.text+>;pushl %ecx;pushl %ecx": 1,
                "movl (%ebp), %ecx;movl (%esi), %esi;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 2,
                "pushl (%ebp);jmp  <.text+>;pushl %ecx;pushl %ecx;movl (%ebp), %ecx": 1,
                "pushl %ecx;movl (%ebp), %ecx;movl %esp, %eax;orl $-, (%eax);orl $-, (%eax)": 1,
                "movl (%esi), %eax;movl (%eax), %eax;cmpl $, %eax;je  <.text+>;cmpl $, %eax": 2,
                "pushl $;pushl $;jmp - <.text+>;movl (%esi), %eax;cmpl %ebx, %eax": 1,
                "jmp  <.text+>;testb $, (%eax);je  <.text+>;cmpb $, (%eax);je  <.text+>": 1,
                "pushl (%esi);pushl %ecx;pushl $;pushl $;jmp - <.text+>": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl (%esi), %eax;cmpw $, (%eax)": 2,
                "movl (%eax), %edx;movzwl (%eax), %eax;movzwl %cx, %ecx;pushl %ecx;pushl %edx": 1,
                "movzwl (%eax), %eax;addl %edi, %edx;cmpl %eax, %edx;jle  <.text+>;movl (%esi), %eax": 1,
                "addl $, %ecx;pushl %ecx;jmp  <.text+>;movl (%esi), %edi;movl (%edi), %eax": 1,
                "addl $, %eax;pushl -(%ebp);adcl %ebx, %edi;pushl %edi;pushl %eax": 1,
                "testb %al, %al;je  <.text+>;cmpb $, (%ebp);jne  <.text+>;movl (%esi), %eax": 1,
                "movl %ecx, (%eax);movl %edx, (%eax);movl (%esi), %eax;movl (%eax), %ecx;movl (%eax), %edx": 2,
                "jne  <.text+>;movl (%esi), %eax;testw $, (%eax);je  <.text+>;movl (%eax), %edx": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);movl (%esi), %eax;movl (%eax), %ecx;movl (%eax), %edx": 1,
                "pushl %edi;shll %cl, %eax;pushl %eax;movl (%esi), %eax;pushl (%eax)": 1,
                "pushl %edx;pushl (%eax);movl %eax, %esi;pushl (%eax);pushl (%eax)": 1,
                "jmp  <.text+>;movl (%esi), %eax;cmpl $, (%eax);jne  <.text+>;movl %esi, %ecx": 1,
                "movzbl %cl, %edx;leal (%edx,%edx), %edx;cmpl %eax, %edx;je  <.text+>;movl (%esi), %eax": 1,
                "pushl $;pushl %ebx;calll - <.text+>;addl $, %esp;pushl $": 1,
                "movl %ebx, %ecx;calll - <.text+>;movl %ebx, %ecx;jmp  <.text+>;movl (%esi), %eax": 1,
                "movl (%esi), %esi;movzbl (%esi), %eax;addl $, %esp;leal (%eax,%eax), %eax;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al": 28,
                "pushl -(%ebp);calll - <.text+>;incl -(%ebp);cmpl %edi, -(%ebp);jb - <.text+>": 1,
                "calll - <.text+>;incl -(%ebp);cmpl %edi, -(%ebp);jb - <.text+>;leal -(%ebp), %eax": 1,
                "calll - <.text+>;incl %edi;cmpl -(%ebp), %edi;jb - <.text+>;jmp - <.text+>": 1,
                "movl (%esi), %eax;testl %eax, %eax;je - <.text+>;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "testl %eax, %eax;je - <.text+>;movl (%eax), %ecx;testl %ecx, %ecx;je - <.text+>": 1,
                "pushl $;pushl %ecx;calll - <.text+>;addl $, %esp;jmp - <.text+>": 1,
                "xorl %ebx, %ebx;pushl (%ebp);movl %ecx, -(%ebp);movb %bl, (%esi);calll - <.text+>": 1,
                "je  <.text+>;movb $, %al;jmp  <.text+>;movl (%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "movl %esp, %eax;movl %esi, (%eax);movl %ebx, (%eax);calll - <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);movl -(%ebp), %ecx;pushl (%ebp);calll - <.text+>;pushl %ecx": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;movl (%esi), %eax;subl (%edx), %eax;jne  <.text+>": 1,
                "movzbl (%edx), %eax;pushl $;pushl (%ebp);pushl %eax;calll - <.text+>": 1,
                "pushl %eax;movl %edi, %ecx;calll - <.text+>;pushl %eax;calll - <.text+>": 3,
                "pushl %eax;calll - <.text+>;popl %edi;popl %esi;popl %ebp": 1,
                "pushl %edi;pushl %edi;pushl (%ebp);movl %esi, %ecx;pushl (%ebp)": 1,
                "pushl %ecx;pushl %eax;pushl %ebx;calll *;movzwl (%ebx), %edi": 1,
                "cmpl $, -(%ebp);je  <.text+>;pushl -(%ebp);calll - <.text+>;movb $, %al": 3,
                "movzbl (%edi), %eax;addl %edi, %eax;pushl %eax;movzbl (%esi), %eax;pushl %eax": 1,
                "movzbl (%esi), %eax;addl %esi, %eax;pushl %eax;calll - <.text+>;testl %eax, %eax": 1,
                "negb %al;sbbl %eax, %eax;popl %edi;popl %esi;popl %ebp": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl %ecx, %esi;movl (%esi), %ecx": 1,
                "pushl %ecx;pushl %eax;calll *;addl $, %esp;subl %edi, (%esi)": 1,
                "pushl %eax;calll *;addl $, %esp;subl %edi, (%esi);popl %edi": 1,
                "movw (%esi), %ax;cmpw (%ebp), %ax;jne  <.text+>;leal (%ebp), %eax;pushl %eax": 1,
                "movl %eax, (%ecx);movl (%esi), %ecx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%esi), %ecx": 1,
                "movl %edi, -(%ebp);jb - <.text+>;cmpl $, (%ebp);je  <.text+>;cmpl %eax, %edi": 1,
                "pushl -(%ebp);calll - <.text+>;testl %eax, %eax;jle  <.text+>;movzwl (%ebx), %eax": 1,
                "movl -(%ebp), %eax;cmpl %ecx, %eax;jne  <.text+>;movzbl (%ebx), %edi;movl -(%ebp), %esi": 5,
                "pushl %ecx;pushl %ecx;movl %esp, %eax;pushl (%ebp);orl $-, (%eax)": 3,
                "testb %al, %al;jne  <.text+>;pushl (%ebx);pushl (%ebx);pushl (%ebp)": 2,
                "jae  <.text+>;movl (%ebp), %eax;cmpl (%ebx), %eax;jne  <.text+>;cmpb $, (%ebx)": 1,
                "cmpb $, (%ebx);jne  <.text+>;pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "pushl %ecx;movl (%ebp), %ecx;calll - <.text+>;jmp  <.text+>;movl (%esi), %ecx": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;xorl %eax, %eax;incl %eax": 1,
                "je  <.text+>;movl (%ebp), %eax;movb $, (%eax);jmp - <.text+>;movl (%ebx), %eax": 1,
                "movl (%ebp), %eax;movb $, (%eax);movb $, -(%ebp);cmpb $, -(%ebp);je - <.text+>": 1,
                "pushl %ecx;pushl %ecx;movl %eax, -(%ebp);movl %esp, %eax;andl $, (%eax)": 2,
                "movl (%esi), %edi;xorl %ebx, %ebx;cmpl $, (%esi);movb $, -(%ebp);jbe  <.text+>": 1,
                "movl (%esi), %eax;cmpl %eax, %ebx;movl $, %edi;je  <.text+>;pushl (%ebp)": 1,
                "movb $, -(%ebp);pushl %edi;pushl $;pushl (%ebp);calll - <.text+>": 1,
                "pushl %edi;pushl $;pushl (%ebp);calll - <.text+>;addl $, %esp": 9,
                "je  <.text+>;pushl (%ebp);pushl %edi;pushl $;pushl (%ebp)": 1,
                "pushl (%ebp);pushl %edi;pushl $;pushl (%ebp);calll - <.text+>": 1,
                "incl %ebx;cmpl (%ebp), %ebx;jb - <.text+>;cmpl $, (%ebp);je  <.text+>": 1,
                "popl %ebx;leave;retl $;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %eax;calll *;xorl %eax, %eax;movl %ebx, %ecx;movl %ecx, %edx": 1,
                "movl %ebx, %ecx;movl %ecx, %edx;shrl $, %ecx;movl %esi, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %eax;movl (%ebp), %ecx;movl %eax, (%esi)": 1,
                "testl %ecx, %ecx;movw %ax, (%esi);movb $, (%esi);je  <.text+>;pushl $": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %esi": 1,
                "jne  <.text+>;cmpl %edi, -(%ebp);jmp  <.text+>;cmpl %edi, (%ebp);je  <.text+>": 1,
                "jne  <.text+>;cmpl %edi, (%ebp);je  <.text+>;movzbl (%ebx), %ecx;movl -(%ebp), %eax": 1,
                "pushl (%ebx);calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %esi": 1,
                "je  <.text+>;movl (%ebp), %esi;pushl $;popl %ecx;leal (%ebx), %edi": 1,
                "addl %eax, %ebx;movl -(%ebp), %eax;cmpl (%eax), %ecx;jb - <.text+>;movl -(%ebp), %eax": 1,
                "cmpl %eax, (%ebx);jne  <.text+>;cmpl $, (%ebp);je  <.text+>;movzbl (%ebx), %ecx": 2,
                "leal (%esi,%ebx), %eax;pushl %edi;pushl %eax;pushl %ebx;calll *": 1,
                "pushl %ebx;calll *;movl -(%ebp), %eax;addl $, %esp;subl %esi, (%eax)": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %edi;movl (%ebp), %ecx": 2,
                "pushl %edi;movl (%ebp), %edi;xorl %ebx, %ebx;cmpl %ebx, %edi;movl %ecx, %esi": 1,
                "movl %esp, %eax;pushl %edi;pushl (%ebp);movl %esi, %ecx;movl %ebx, (%eax)": 1,
                "rep  cmpsb %es:(%edi), (%esi);jne  <.text+>;movl (%ebp), %esi;testl %esi, %esi;je  <.text+>": 1,
                "movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;pushl (%esi);pushl (%esi)": 1,
                "cmpl -(%ebp), %eax;jb - <.text+>;movl -(%ebp), %ebx;decl -(%ebp);movl (%ebx), %ecx": 1,
                "testl %eax, %eax;je  <.text+>;movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %ecx": 1,
                "movb $, %al;jmp  <.text+>;cmpl $, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;xorb %al, %al;jmp  <.text+>": 4,
                "movl (%ebp), %ecx;cmpl (%ebx), %ecx;jb  <.text+>;movl (%ebp), %ecx;orl $-, (%esi)": 1,
                "pushl %ebx;pushl %esi;movl %ecx, %ebx;calll  <.text+>;movl (%ebp), %eax": 1,
                "movl %ecx, %ebx;calll  <.text+>;movl (%ebp), %eax;leal (%eax,%eax,), %esi;shll $, %esi": 1,
                "movl %ebx, %ecx;calll  <.text+>;xorb %al, %al;jmp  <.text+>;cmpl $, (%ebp)": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);popl %edi;movb $, %al": 1,
                "testb %al, %al;je  <.text+>;cmpb $, (%edi);movl (%edi), %eax;movl (%edi), %ecx": 1,
                "je  <.text+>;cmpb $, (%edi);movl $, %ecx;jae  <.text+>;movl $, %ecx": 1,
                "cmpb %bl, %al;je  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>;pushl (%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %ebx;movl (%eax), %eax;leal (%ebx,%ebx,), %ebx;shll $, %ebx": 1,
                "movl %esi, (%eax);movl %esp, %eax;movl %esi, (%eax);movl %esi, (%eax);movl (%ecx), %eax": 1,
                "pushl %ecx;movl %esp, %eax;movl %ebx, (%eax);movl %esi, (%eax);calll - <.text+>": 1,
                "jmp  <.text+>;movl -(%ebp), %edi;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "cmpl %ebx, -(%ebp);jne - <.text+>;movl (%ebp), %esi;movl %ebx, %ecx;xorl %eax, %eax": 1,
                "movl %ecx, (%eax);leal -(%ebp), %ecx;movl %ebx, (%eax);calll - <.text+>;testb %al, %al": 2,
                "je  <.text+>;pushl %esi;pushl (%ebp);leal -(%ebp), %ecx;pushl %edi": 1,
                "pushl %esi;pushl (%ebp);leal -(%ebp), %ecx;pushl %edi;calll - <.text+>": 1,
                "pushl -(%ebp);calll - <.text+>;popl %ecx;leal -(%ebp), %ecx;calll - <.text+>": 2,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi;movl (%ebp), %edi": 1,
                "leal (%eax), %esi;jmp  <.text+>;leal (%eax), %ecx;movl %ecx, %eax;leal (%eax), %esi": 1,
                "incl %eax;testb %dl, %dl;jne - <.text+>;subl %esi, %eax;incl %eax": 1,
                "pushl %eax;pushl (%ebp);pushl %edi;calll *;movl -(%ebp), %edx": 1,
                "pushl (%ebp);pushl %edi;calll *;movl -(%ebp), %edx;xorl %ecx, %ecx": 1,
                "je  <.text+>;cmpb $, (%edi,%ecx);jne  <.text+>;cmpb $, (%edi,%ecx);je  <.text+>": 1,
                "movl %ecx, %esi;andl $, (%esi);testl %edi, %edi;je  <.text+>;movl (%edi), %eax": 1,
                "calll - <.text+>;movl %ebx, (%esi);movw %bx, (%esi);movw %bx, (%esi);movw %bx, (%esi)": 1,
                "xorb %al, %al;jmp  <.text+>;movzwl (%esi), %eax;leal (%eax,%eax,), %ecx;shll $, %ecx": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <.text+>;movl (%ecx), %eax;calll *(%eax)": 1,
                "testl %ecx, %ecx;je  <.text+>;movl (%ecx), %eax;calll *(%eax);testl %eax, %eax": 1,
                "testb %al, %al;je  <.text+>;movl (%edi), %eax;addl $, %eax;xorl %edx, %edx": 1,
                "movb $, %bl;jmp  <.text+>;movl %edi, %ecx;xorb %bl, %bl;calll - <.text+>": 1,
                "pushl %esi;movl %ecx, %esi;je  <.text+>;movb $, (%eax);movl %esi, %ecx": 1,
                "subl -(%ebp), %edi;addl %eax, %edi;cmpl (%esi), %edi;ja  <.text+>;cmpb $, (%edx,%eax)": 1,
                "testb %cl, %cl;jne  <.text+>;cmpb %cl, (%eax);je  <.text+>;movzbl %dl, %edi": 1,
                "movzbl (%eax), %edx;shll $, %edx;movzbl %cl, %ecx;addl %edi, %edx;leal (%ecx,%edx), %ecx": 1,
                "pushl %ebx;movl %ecx, %ebx;calll - <.text+>;testl %eax, %eax;jne  <.text+>": 2,
                "movw %cx, (%ebx);movl (%eax), %ecx;pushl %edi;movl %ecx, (%ebx);leal (%eax), %esi": 1,
                "pushl %esi;movl %ecx, %esi;calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl %ecx, %edi;leal -(%ebp), %ecx;calll - <.text+>;movl (%ebp), %ebx;andl $, (%edi)": 1,
                "testl %ebx, %ebx;movl (%ebp), %esi;jne  <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "testb %al, %al;je  <.text+>;movl %edi, %ecx;calll - <.text+>;testl %eax, %eax": 2,
                "movl $, %ebx;cmpw $, (%ecx);jne  <.text+>;incl %edx;incl %ecx": 1,
                "calll *(%eax);movl (%ebp), %ecx;movzwl %ax, %esi;movl (%ecx), %eax;calll *(%eax)": 1,
                "xorl %edi, %edi;cmpw %bx, (%esi);jbe  <.text+>;movl (%esi), %eax;movl (%eax,%edi,), %ecx": 2,
                "movl (%esi), %eax;movl (%eax,%edi,), %ecx;movl (%ecx), %eax;calll *(%eax);testb %al, %al": 2,
                "movb $, %bl;calll - <.text+>;cmpb $, (%esi);jne  <.text+>;xorl %edi, %edi": 1,
                "movl %ebx, (%esi);movw %bx, (%esi);movl %ebx, (%esi);popl %esi;popl %ebx": 1,
                "je  <.text+>;movl (%ebp), %eax;testl %eax, %eax;jne  <.text+>;movl (%ebp), %ecx": 1,
                "movl (%esi), %eax;shll $, %eax;pushl %eax;movl %ebx, (%esi);calll - <.text+>": 1,
                "movl %esi, %ecx;calll - <.text+>;calll  <.text+>;xorb %bl, %bl;jmp  <.text+>": 1,
                "calll - <.text+>;calll  <.text+>;xorb %bl, %bl;jmp  <.text+>;movl (%ebp), %eax": 1,
                "testb %al, %al;jne  <.text+>;movl (%ebp), %eax;incl %eax;movl %eax, (%ebp)": 1,
                "calll - <.text+>;testb %al, %al;je - <.text+>;addl %edi, (%ebp);pushl $": 1,
                "movl (%ebp), %ecx;pushl %ebx;calll - <.text+>;movl (%ebp), %ecx;movl %eax, %ebx": 1,
                "pushl %ebx;calll - <.text+>;testb %al, %al;jne - <.text+>;movl %esi, %ecx": 1,
                "pushl %edi;movl %ecx, %esi;calll - <.text+>;movw (%ebp), %di;movzwl %di, %eax": 1,
                "testl %eax, %eax;movl %eax, (%esi);jne  <.text+>;xorb %al, %al;jmp  <.text+>": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;addl $, %eax;adcl $, %ecx;movl %edx, (%esi)": 1,
                "movl %eax, (%esi);movl (%ebp), %eax;incw (%eax);addl $, (%ebp);addl $, %esi": 1,
                "incw (%edi);addl (%ebp), %eax;movl %eax, -(%ebp);movl %eax, (%esi);jmp - <.text+>": 1,
                "xorl %eax, %eax;movl %ecx, -(%ebp);movw (%ecx), %cx;movw %cx, %ax;shrw %ax": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jle  <.text+>;leal (%ebx,%ebx,), %ecx;leal (%ebx,%eax), %edi": 1,
                "movl %eax, -(%ebp);jle  <.text+>;leal (%ebx,%ebx,), %ecx;leal (%ebx,%eax), %edi;leal (%eax,%eax,), %esi": 1,
                "jle  <.text+>;leal (%ebx,%ebx,), %ecx;leal (%ebx,%eax), %edi;leal (%eax,%eax,), %esi;shll $, %ecx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;pushl (%edi,%eax);pushl (%edi,%eax);pushl (%esi,%eax)": 1,
                "jne  <.text+>;movl %eax, (%ecx);movl %eax, (%edx);movl %ecx, (%ebx);movl %ecx, (%eax)": 1,
                "movl %ecx, (%ebx);movl %ecx, (%eax);movl %edx, (%eax);movl %ebx, (%ecx);jmp  <.text+>": 1,
                "movw (%ecx), %cx;incl %eax;cmpw %cx, %ax;movl %eax, -(%ebp);jbe - <.text+>": 1,
                "movl %ecx, %edi;movl (%edi), %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;movl %ebx, (%edi)": 1,
                "je  <.text+>;movl $, -(%ebp);movl (%esi), %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "movl %ebx, (%esi);movl %ebx, (%esi);movl %ebx, (%esi);movl %ebx, (%esi);addl $, %esi": 1,
                "jne  <.text+>;xorb %al, %al;retl;movl $, %edx;movl %ecx, (%eax)": 1,
                "decl %edx;jne - <.text+>;movb $, %al;retl;int": 1,
                "movb %bl, (%eax);movl %ecx, -(%ebp);movb -(%ebp), %al;xorb -(%ebp), %al;xorb %ch, %al": 1,
                "leal (%ecx,%eax,), %esi;cmpl %ebx, (%esi);jne  <.text+>;pushl $;calll - <.text+>": 1,
                "incl -(%ebp);jmp - <.text+>;movl (%ebp), %eax;movb $, (%eax);jmp  <.text+>": 1,
                "je  <.text+>;movl (%esi), %eax;leal (,%eax,), %eax;pushl %eax;pushl (%esi)": 1,
                "movl (%esi), %edx;movl (%ebp), %eax;adcl %edi, (%esi);movl (%esi), %ecx;movl (%edx,%ecx,), %esi": 1,
                "adcl %edi, (%ebx);jmp  <.text+>;movb $, (%edi);popl %edi;popl %esi": 1,
                "pushl %edi;jbe  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "addl (%ebp), %ecx;adcl (%ebp), %eax;pushl %eax;pushl %ecx;movl %ebx, %ecx": 1,
                "pushl %ebx;movl (%ebp), %ebx;testl %ebx, %ebx;pushl %esi;movl %ecx, %esi": 1,
                "testl %ebx, %ebx;pushl %esi;movl %ecx, %esi;je  <.text+>;pushl %edi": 1,
                "calll - <.text+>;decl (%esi);decl %ebx;popl %ecx;movl %edi, (%esi)": 1,
                "popl %edi;andl $, (%esi);popl %esi;retl;int": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;movl (%ecx), %ecx;je  <.text+>": 1,
                "je  <.text+>;testl %ecx, %ecx;je  <.text+>;movl (%ecx), %ecx;jmp  <.text+>": 1,
                "movl (%esi), %esi;testl %esi, %esi;jne - <.text+>;xorb %al, %al;popl %esi": 1,
                "calll  <.text+>;leal (%esi), %ecx;calll  <.text+>;movl %esi, %ecx;popl %esi": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%ecx), %ecx;movl %edx, %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *;subl -(%ebp), %esi": 1,
                "pushl %eax;calll *;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "pushl %edi;calll *;popl %edi;movb $, %al;popl %esi": 1,
                "calll *;movl (%ebx), %eax;movl %esi, (%edi,%eax);movl (%ebp), %edi;pushl $": 1,
                "movl %ecx, %esi;movl (%ebp), %ecx;pushl %edi;calll - <.text+>;testb %al, %al": 1,
                "addl $, %eax;pushl %ecx;movl %eax, (%ebp);pushl %eax;jmp  <.text+>": 1,
                "pushl %eax;jmp  <.text+>;pushl $;leal (%esi), %eax;pushl %eax": 1,
                "calll *%edi;movl %eax, %esi;testl %esi, %esi;jne - <.text+>;movb $, %al": 1,
                "pushl %esi;movl %ecx, %ebx;movl (%ebp), %ecx;andl $-, %eax;pushl %edi": 1,
                "calll *;movl (%ebp), %ecx;subl -(%ebp), %ecx;movl -(%ebp), %edx;movl %ecx, %eax": 1,
                "movl %edx, (%eax);calll - <.text+>;jmp  <.text+>;movl , %ebx;movl %edx, -(%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;movl %ecx, -(%ebp);movl (%ebp), %ecx;pushl %edi": 1,
                "leal -(%ebp), %ecx;addl $, %eax;pushl %ecx;pushl %eax;movl %esi, -(%ebp)": 1,
                "movl (%ebx), %eax;movl -(%ebp), %ecx;leal (%eax,%ecx), %edi;movl (%ebp), %ecx;pushl %edi": 1,
                "testl %esi, %esi;je  <.text+>;movl %esi, %ecx;calll - <.text+>;testb %al, %al": 3,
                "je  <.text+>;pushl %ecx;pushl %ecx;movl (%ebx), %ecx;addl -(%ebp), %ecx": 1,
                "calll *;movl %eax, %ebx;testl %ebx, %ebx;jne - <.text+>;testl %esi, %esi": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jne - <.text+>;testl %esi, %esi;je  <.text+>": 1,
                "jmp  <.text+>;testl %esi, %esi;je  <.text+>;movl (%esi), %eax;pushl $": 1,
                "xorl %ebx, %ebx;pushl %ebx;pushl %ebx;pushl (%esi);leal -(%ebp), %ecx": 1,
                "movl , %edi;jmp  <.text+>;leal (%ebx), %eax;pushl %eax;pushl $": 1,
                "calll *%edi;xorl %ecx, %ecx;incl %ecx;xorl %eax, %eax;lock": 1,
                "movl (%ebx), %eax;movl (%ebx), %edx;movl (%edx,%eax,), %edi;movl (%ebx), %ecx;movl (%ebp), %esi": 1,
                "lock;xaddl %ecx, (%eax);movl (%ebx), %eax;incl %eax;xorl %edx, %edx": 1,
                "movl (%ebx), %eax;incl %eax;xorl %edx, %edx;divl (%ebx);movl -(%ebp), %ecx": 1,
                "movl %ecx, %esi;calll - <.text+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%esi)": 1,
                "cmpl (%esi), %eax;jb - <.text+>;xorl %edi, %edi;cmpl %ebx, (%esi);jbe  <.text+>": 1,
                "jbe  <.text+>;pushl (%esi);calll - <.text+>;movl (%esi), %ecx;movl %eax, (%ecx,%edi,)": 1,
                "cmpl %esi, (%ebx);pushl %edi;jbe  <.text+>;movl %esi, %edi;shll $, %edi": 1,
                "movl (%ebp), %edi;movl %esi, %eax;shll $, %eax;movl (%edx,%eax), %esi;movl %ecx, %edx": 1,
                "incl %edi;cmpl (%esi), %edi;jb - <.text+>;popl %ebx;popl %edi": 1,
                "xorl %edi, %edi;cmpl %edi, %eax;je  <.text+>;pushl %eax;calll - <.text+>": 1,
                "pushl %edi;leal (%esi), %edi;jmp  <.text+>;movl (%esi), %eax;incl %eax": 1,
                "pushl %esi;movl %ecx, %esi;jne  <.text+>;movb $, %al;jmp  <.text+>": 1,
                "pushl %esi;pushl %edi;movl %ecx, %edi;xorl %ebx, %ebx;leal (%edi), %eax": 1,
                "incl %ebx;cmpl $, (%esi);movl %esi, %eax;jne - <.text+>;pushl $": 1,
                "jne  <.text+>;addl $, %esi;cmpl $, (%esi);movl %esi, %eax;jne - <.text+>": 1,
                "pushl %ebx;pushl %esi;movl %ecx, %esi;calll - <.text+>;movl (%ebp), %eax": 1,
                "calll - <.text+>;movl (%ebp), %eax;testl %eax, %eax;je  <.text+>;movl (%ebp), %ebx": 1,
                "xorl %eax, %eax;jmp  <.text+>;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, (%esi)": 1,
                "movl (%esi), %ecx;movl %ecx, (%esi);addl $-, %ecx;movl %ebx, (%esi);movl %ecx, (%esi)": 1,
                "movl %edi, %edi;pushl %esi;pushl %edi;movl %ecx, %edi;movl (%edi), %eax": 1,
                "xorb %al, %al;jmp  <.text+>;movl (%esi), %eax;movl %esi, %ecx;calll *(%eax)": 1,
                "pushl %edi;movl %ecx, %esi;xorl %edi, %edi;pushl $;pushl $": 1,
                "movl %ecx, %esi;xorl %edi, %edi;pushl $;pushl $;leal (%esi), %ecx": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl %edi, (%esi);movl %edi, (%esi)": 1,
                "calll - <.text+>;movl (%esi), %ecx;movl %eax, (%ecx);movl (%esi), %eax;movl (%eax), %ecx": 1,
                "movl (%esi), %eax;movl (%eax), %ecx;testl %ecx, %ecx;jne  <.text+>;xorb %al, %al": 1,
                "movl %ecx, %esi;je  <.text+>;movl (%edx), %eax;testl %eax, %eax;je  <.text+>": 1,
                "je  <.text+>;movl (%eax), %ecx;testl %ecx, %ecx;pushl %edi;je  <.text+>": 1,
                "movl (%eax), %ecx;testl %ecx, %ecx;je  <.text+>;movl (%eax), %edi;movl %edi, (%ecx)": 1,
                "jne  <.text+>;movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %ecx;movl %ecx, (%edx)": 1,
                "leal (%esi), %ecx;calll - <.text+>;decl (%esi);movl %edi, %eax;popl %edi": 1,
                "testl %eax, %eax;jne  <.text+>;popl %esi;retl;movl %esi, (%eax)": 1,
                "pushl %edi;calll *(%eax);movl %eax, %edi;testl %edi, %edi;je  <.text+>": 1,
                "jne  <.text+>;decl %eax;cmpl $, %eax;jg - <.text+>;cmpl $, %eax": 1,
                "rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl $, (%ebx)": 1,
                "cmpb $, %al;jb  <.text+>;cmpb $, %al;jne  <.text+>;movb $, (%esi,%edx)": 1,
                "movb $, (%esi,%edx);decl %esi;incl %ecx;cmpl $, %ecx;jle - <.text+>": 1,
                "incb (%eax);movb $, %al;jmp - <.text+>;int;int": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl $;calll - <.text+>": 1,
                "jmp  <.text+>;calll - <.text+>;movl (%ebp), %ecx;pushl %esi;calll - <.text+>": 1,
                "pushl %esi;movzbl (%ecx), %esi;shll $, %eax;xorl %esi, %eax;incl %ecx": 1,
                "decl %edx;jne - <.text+>;popl %esi;popl %ebp;retl $": 1,
                "sbbl , %edx;movl %edx, -(%ebp);js  <.text+>;jg  <.text+>;cmpl $, %eax": 1,
                "ja  <.text+>;cmpb %bl, %dl;je  <.text+>;cmpb %bl, %dl;movl %ebx, ": 1,
                "movb %bl, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "decl %eax;je  <.text+>;decl %eax;je  <.text+>;movb $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl $;pushl ": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%ebp), %esi": 2,
                "jmp  <.text+>;movl (%edi), %ecx;movl (%ecx), %eax;pushl $;pushl (%esi)": 1,
                "movl (%esi), %edi;movl %esi, %ecx;movl %eax, %ebx;calll *(%edi);movl %esi, %ecx": 1,
                "pushl %eax;pushl %ebx;calll *(%edi);testb %al, %al;jne - <.text+>": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl %edi, ;xorb %bl, %bl": 1,
                "cmpl -(%ebp), %eax;jae  <.text+>;incl -(%ebp);incl -(%ebp);movl (%esi), %edi": 1,
                "jae  <.text+>;incl -(%ebp);incl -(%ebp);movl (%esi), %edi;pushl -(%ebp)": 1,
                "jne - <.text+>;cmpl $, -(%ebp);je  <.text+>;movl (%esi), %eax;movl %esi, %ecx": 1,
                "movl %esi, %ecx;calll *(%eax);addl %eax, %edi;movl (%esi), %eax;movl %esi, %ecx": 1,
                "movzwl %ax, %eax;imull -(%ebp), %eax;leal -(%ebp), %ecx;movl %eax, -(%ebp);calll - <.text+>": 1,
                "movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);subl %eax, %edi;movl (%esi), %eax": 1,
                "xorl %edx, %edx;divl -(%ebp);movl %ecx, -(%ebp);cmpl -(%ebp), %eax;jbe  <.text+>": 1,
                "divl -(%ebp);movl %ecx, -(%ebp);cmpl -(%ebp), %eax;jbe  <.text+>;movl %eax, -(%ebp)": 1,
                "movl %edi, %ecx;calll - <.text+>;testb %al, %al;jne - <.text+>;pushl $": 3,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;andl $, ;jmp - <.text+>": 1,
                "popl %ecx;popl %ecx;movl (%ebx), %eax;pushl $;pushl $": 1,
                "je  <.text+>;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;pushl $": 1,
                "pushl %ecx;pushl %ecx;movl %esp, %edi;pushl $;pushl %ebx": 1,
                "movl (%esi), %ecx;pushl (%ecx);pushl %ebx;calll - <.text+>;movl (%esi), %ecx": 1,
                "calll - <.text+>;movl (%esi), %ecx;calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "je  <.text+>;movl (%ebp), %eax;cmpl $, (%eax);je  <.text+>;movl $, (%eax)": 4,
                "movb $, %bl;jmp  <.text+>;movl (%ebp), %esi;movl (%esi), %eax;pushl $": 1,
                "movl -(%ebp), %esi;cmpl %edi, %esi;je  <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl (%ebx), %ecx;pushl %eax;pushl (%ebp);calll - <.text+>;jmp  <.text+>": 2,
                "je  <.text+>;movl (%ebx), %ebx;movzwl %ax, %eax;pushl %eax;movl %ebx, %ecx": 1,
                "pushl $;pushl %ebx;calll - <.text+>;movl (%ebx), %eax;popl %ecx": 4,
                "calll - <.text+>;movl (%ebx), %eax;popl %ecx;popl %ecx;pushl $": 3,
                "jne  <.text+>;movl $, (%esi);cmpl $, (%esi);je  <.text+>;movl $, (%esi)": 1,
                "xorb %bl, %bl;popl %ecx;popl %ecx;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl (%ebp), %esi;pushl %edi;movl %eax, -(%ebp);movl (%ebp), %eax;movl %ecx, %edi": 1,
                "movl -(%ebp), %ecx;cmpb $, -(%ebp);je  <.text+>;cmpl -(%ebp), %ecx;jae  <.text+>": 1,
                "pushl %esi;calll - <.text+>;movl -(%ebp), %eax;addl $, %esp;movl %eax, -(%ebp)": 2,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl %eax, (%ebx);movsw (%esi), %es:(%edi)": 1,
                "movb $, (%ebx);je  <.text+>;cmpl $, (%ebp);je  <.text+>;leal -(%ebp), %ecx": 1,
                "movl (%ebx), %ebx;jmp  <.text+>;movl (%esi), %eax;pushl $;xorl %ebx, %ebx": 1,
                "movl %esi, %ecx;pushl $;calll *(%eax);pushl $;pushl %esi": 1,
                "xorb %dl, %dl;leal -(%esi), %eax;andl $, -(%ebp);testl %eax, %eax;movb $, -(%ebp)": 1,
                "movl -(%ebp), %eax;pushl -(%ebx);movl (%eax), %ecx;movb $, -(%ebp);calll - <.text+>": 1,
                "movl (%eax), %ecx;movb $, -(%ebp);calll - <.text+>;pushl -(%ebx);pushl (%ebx)": 1,
                "leal -(%ebx), %edi;rep  movsl (%esi), %es:(%edi);pushl $;popl %ecx;leal -(%ebp), %esi": 1,
                "jb - <.text+>;cmpb $, -(%ebp);je - <.text+>;testb %dl, %dl;je  <.text+>": 1,
                "movl $, (%eax);movl -(%ebp), %ecx;popl %edi;popl %esi;movb $, %al": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;calll *(%eax);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movzwl %ax, %ebx;movl (%ecx), %eax;calll *(%eax);imull %eax, %ebx": 1,
                "cmpl %eax, -(%ebp);movl (%ebp), %ebx;movl %eax, -(%ebp);jbe  <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);movl $, -(%ebp);pushl %ebx;calll - <.text+>;movl (%ebx), %eax": 8,
                "movl %esi, %ecx;calll *(%eax);testb %al, %al;je  <.text+>;pushl -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <.text+>;jae  <.text+>;pushl (%ebp)": 1,
                "popl %ecx;movl (%esi), %ecx;decl %eax;pushl %eax;movl (%ebp), %eax": 1,
                "movb $, -(%ebp);je  <.text+>;movl (%esi), %eax;pushl $;pushl $": 1,
                "jns - <.text+>;jmp  <.text+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movzwl (%ecx,%edx,), %edx": 1,
                "movl (%ebp), %ecx;movl -(%ebp), %edx;movzwl (%ecx,%edx,), %edx;subl %edx, %eax;leal (%ecx,%edi,), %ecx": 1,
                "je  <.text+>;movw %ax, (%ecx);movb $, -(%ebp);movl (%ebp), %eax;incl %edi": 1,
                "jge  <.text+>;movl (%ebp), %eax;leal (%eax,%edi,), %eax;cmpw $, (%eax);je  <.text+>": 1,
                "calll - <.text+>;popl %ecx;popl %ecx;cmpl $, -(%ebp);je  <.text+>": 1,
                "popl %ecx;popl %ecx;cmpl $, -(%ebp);je  <.text+>;movl (%ebp), %eax": 1,
                "cmpl $, -(%ebp);je  <.text+>;movl (%ebp), %eax;cmpl $, (%eax);je  <.text+>": 2,
                "cmpl $, (%eax);je  <.text+>;movl $, (%eax);movb $, %al;jmp  <.text+>": 1,
                "movl $, (%eax);movb $, %al;jmp  <.text+>;movl $, %edi;pushl $": 1,
                "jmp  <.text+>;movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax;pushl %edi": 1,
                "movzwl %ax, %edi;movl (%ecx), %eax;calll *(%eax);imull %eax, %edi;movl %esi, %ecx": 1,
                "jne  <.text+>;cmpb %al, (%ebp);je  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "testb %al, %al;je  <.text+>;pushl -(%ebp);pushl $;jmp  <.text+>": 1,
                "pushl $;movl -(%ebp), %ecx;movl (%ecx), %eax;pushl $;leal -(%ebp), %edx": 1,
                "testb %al, %al;movb %al, -(%ebp);jne  <.text+>;movl (%ebx), %eax;pushl $": 1,
                "popl %ecx;jmp - <.text+>;movb $, -(%ebp);movb $, -(%ebp);cmpb $, -(%ebp)": 1,
                "calll *(%edx);jmp  <.text+>;pushl $;calll *(%edx);pushl -(%ebp)": 1,
                "pushl %ebx;calll - <.text+>;addl $, %esp;jmp  <.text+>;cmpb $, -(%ebp)": 1,
                "jmp  <.text+>;cmpb $, -(%ebp);movl (%ebx), %eax;pushl $;je  <.text+>": 1,
                "movl (%eax), %ecx;movl (%eax), %eax;testl %eax, %eax;je  <.text+>;cmpl $, %eax": 1,
                "cmpl $, %eax;jne  <.text+>;testl %ecx, %ecx;je  <.text+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;xorl %ecx, %ecx;testl %ecx, %ecx;movl %edx, -(%ebp)": 1,
                "calll - <.text+>;movl -(%ebp), %ecx;addl %ecx, -(%ebp);movl -(%ebp), %ecx;adcl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);je  <.text+>;cmpl -(%ebp), %eax;ja  <.text+>;cmpl -(%ebp), %eax": 1,
                "pushl %edi;pushl %ebx;calll - <.text+>;movl (%esi), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %esi;movl $, %edi;movl (%esi), %eax;cmpl $, (%eax);je  <.text+>": 1,
                "movl $, (%eax);cmpb $, -(%ebp);je  <.text+>;cmpl %ecx, (%eax);jne  <.text+>": 1,
                "popl %ecx;movb $, %al;popl %edi;movl -(%ebp), %ecx;popl %esi": 1,
                "movl (%ebp), %edi;leal -(%ebp), %ecx;movl %ebx, -(%ebp);movl %eax, -(%ebp);calll - <.text+>": 2,
                "jmp  <.text+>;movl -(%ebp), %edx;cmpw (%ecx), %dx;je  <.text+>;incl %eax": 1,
                "andw $, (%eax);jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx": 1,
                "addl $, %esp;andw $, (%eax);jmp  <.text+>;pushl -(%ebp);pushl %esi": 1,
                "sbbl %eax, %eax;sbbl $-, %eax;testl %eax, %eax;je  <.text+>;movb $, (%ebx)": 1,
                "testl %eax, %eax;je  <.text+>;movb $, (%ebx);cmpl $, (%ebx);je  <.text+>": 1,
                "pushl $;pushl (%ebx);leal -(%ebp), %ecx;calll - <.text+>;pushl %eax": 1,
                "movl (%eax), %ecx;movl (%ecx), %eax;pushl $;pushl (%ebx);calll *(%eax)": 1,
                "pushl %ebx;pushl %ebx;pushl (%ebp);calll - <.text+>;movl (%esi), %ecx": 1,
                "movl (%esi), %eax;pushl %ebx;pushl $;pushl %ebx;leal -(%ebp), %ecx": 1,
                "calll *(%eax);testb %al, %al;je  <.text+>;pushl (%edi);movl %esi, %ecx": 1,
                "movl (%edi), %ebx;jmp  <.text+>;calll - <.text+>;movl (%esi), %ecx;pushl %ebx": 1,
                "calll - <.text+>;movl (%esi), %ecx;pushl %ebx;calll - <.text+>;movl %eax, %ebx": 1,
                "jmp  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;pushl $;pushl %edi": 1,
                "andl $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;jne  <.text+>": 1,
                "movl -(%ebp), %ecx;movl %eax, %esi;cmpl (%ebx), %esi;pushl %esi;jne - <.text+>": 1,
                "movl (%ecx), %esi;cmpl (%ebx), %esi;jne  <.text+>;movl -(%ebx), %esi;movl %esi, (%ecx)": 1,
                "leal (%ebx), %eax;movl %eax, -(%ebp);leal (%ebx), %eax;movb (%eax), %cl;movl -(%ebp), %edx": 1,
                "movl (%edi), %ecx;pushl $;pushl %eax;calll - <.text+>;pushl %eax": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;pushl -(%ebp);movl $, -(%ebp)": 1,
                "calll *(%eax);pushl %eax;movl %eax, -(%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "pushl %eax;movl %eax, -(%ebp);calll - <.text+>;testl %eax, %eax;popl %ecx": 1,
                "movl (%ebx), %edi;movl %ebx, %ecx;calll *(%eax);movzwl %ax, %eax;movl %eax, -(%ebp)": 1,
                "calll *(%eax);movzwl %ax, %eax;movl %eax, -(%ebp);movl (%edi), %eax;movl %edi, %ecx": 1,
                "pushl %edi;calll - <.text+>;testb %al, %al;jne  <.text+>;incl -(%ebp)": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;incl -(%ebp);pushl $": 1,
                "jne  <.text+>;incl -(%ebp);pushl $;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl -(%ebp), %ecx;incl -(%ebp);pushl %edi;calll - <.text+>;movl -(%ebp), %eax": 1,
                "movb $, (%edi,%eax);incl -(%ebp);pushl -(%ebp);movl (%ebx), %edi;movl %edi, %ecx": 1,
                "movl %edi, %ecx;calll - <.text+>;testb %al, %al;jne - <.text+>;jmp  <.text+>": 1,
                "jbe  <.text+>;movb $, -(%ebp);pushl -(%ebp);pushl %esi;calll - <.text+>": 1,
                "calll *(%eax);testb %al, %al;jne  <.text+>;cmpl $, (%ebp);je  <.text+>": 1,
                "pushl $;popl %eax;movl %eax, -(%ebp);pushl %eax;jmp  <.text+>": 1,
                "calll - <.text+>;cmpb $, -(%ebp);movl (%eax), %ecx;movl (%eax), %eax;je  <.text+>": 4,
                "movl %ecx, -(%ebp);movl (%esi), %eax;pushl $;pushl $;pushl %edi": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl $, %eax;jmp  <.text+>;movl %edx, -(%ebp)": 5,
                "movl $, %eax;jmp  <.text+>;movl %edx, -(%ebp);jmp  <.text+>;movl $, %eax": 1,
                "movl %eax, -(%ebp);calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp);jne  <.text+>": 2,
                "calll *(%edx);pushl -(%ebp);pushl -(%ebp);pushl $;pushl %esi": 2,
                "pushl -(%ebp);pushl -(%ebp);pushl $;pushl %esi;calll - <.text+>": 3,
                "calll - <.text+>;movl -(%ebp), %eax;movl %edi, (%eax);jmp  <.text+>;cmpl $, (%ebp)": 1,
                "pushl $;pushl $;pushl $;leal -(%ebp), %ecx;pushl %ecx": 1,
                "testb %al, %al;je  <.text+>;pushl -(%ebp);movl %ebx, %ecx;calll - <.text+>": 1,
                "orb $, (%eax);leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;je  <.text+>": 3,
                "leal -(%ebp), %ecx;calll - <.text+>;xorl %edi, %edi;cmpl %edi, (%ebx);je  <.text+>": 1,
                "cmpl %edi, (%ebx);je  <.text+>;cmpl %edi, (%ebp);je  <.text+>;movl (%ebx), %ecx": 1,
                "je  <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;pushl -(%ebp)": 1,
                "calll - <.text+>;pushl $;popl %eax;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "pushl -(%ebp);calll - <.text+>;imull -(%ebp), %eax;movl -(%ebp), %ecx;incl -(%ebp)": 1,
                "pushl %ecx;movl %esp, %edx;pushl %eax;pushl %ecx;leal -(%ebp), %eax": 2,
                "movl %esp, %edx;pushl %eax;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl $;movl %esi, %ecx;calll *(%eax);movl -(%ebp), %eax;imull -(%ebp), %eax": 1,
                "je  <.text+>;pushl %ecx;pushl %ecx;movl %esp, %ecx;pushl %eax": 1,
                "calll - <.text+>;popl %ecx;movl (%esi), %eax;pushl $;pushl $": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebp)": 1,
                "cmpb $, -(%ebp);movl (%ebp), %edi;movl $, %ebx;je  <.text+>;pushl (%ebp)": 1,
                "popl %ecx;jmp  <.text+>;cmpb $, -(%ebp);je  <.text+>;movl -(%ebp), %eax": 1,
                "movl (%esi), %edx;pushl %eax;movl %esi, %ecx;calll *(%edx);movl (%esi), %ecx": 1,
                "jne - <.text+>;xorb %al, %al;jmp - <.text+>;int;int": 1,
                "pushl %edi;pushl $;pushl (%ebp);movl %ecx, %esi;movw $, (%eax)": 1,
                "pushl %edi;calll - <.text+>;movl %eax, %ebx;testl %ebx, %ebx;popl %ecx": 1,
                "movzwl %ax, %eax;testl %eax, %eax;jbe  <.text+>;addl $, %ebx;movl %eax, (%ebp)": 1,
                "movl (%esi), %eax;xorl %edi, %edi;movl %esi, %ecx;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "imull %eax, %esi;movl %esi, -(%ebp);orl $-, %esi;pushl %esi;pushl $": 1,
                "calll - <.text+>;movl %eax, -(%ebp);jmp  <.text+>;movl %edi, -(%ebp);cmpl %edi, -(%ebp)": 1,
                "movl %esi, %ecx;calll *(%eax);pushl $;pushl %esi;jmp  <.text+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;cmpl %edi, %ecx;je  <.text+>;movl %ecx, -(%ebp)": 1,
                "andl $, %eax;pushl %eax;movl %eax, -(%ebp);calll *(%edx);pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;pushl $-;xorl %edi, %edi": 1,
                "pushl %ebx;calll - <.text+>;addl $, %esp;movl -(%ebp), %edi;leal -(%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl -(%ebp);movl (%ecx), %eax;calll *(%eax)": 1,
                "movl -(%ebp), %edi;calll - <.text+>;cmpb $, -(%ebp);je  <.text+>;movl -(%ebp), %eax": 1,
                "pushl (%ebp);movl %eax, -(%ebp);pushl %ebx;calll - <.text+>;movl (%ebx), %eax": 1,
                "testb %al, %al;je  <.text+>;movl (%ebx), %eax;pushl $;pushl $": 1,
                "pushl %ebx;calll - <.text+>;cmpb $, -(%ebp);popl %ecx;popl %ecx": 1,
                "jmp  <.text+>;cmpl %esi, (%eax);jne  <.text+>;movl -(%ebp), %edx;movl %edx, (%eax)": 1,
                "je  <.text+>;movl (%ebp), %ecx;incl %eax;cmpw (%ecx), %ax;jb - <.text+>": 1,
                "testb %al, %al;je  <.text+>;movl -(%ebp), %esi;pushl $;popl %ecx": 1,
                "movl $, %edi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);jne  <.text+>;leal -(%ebp), %ecx": 1,
                "cmpl -(%ebp), %eax;jne  <.text+>;movl -(%ebp), %eax;cmpl %esi, (%eax);jne  <.text+>": 1,
                "calll - <.text+>;addl $, %esp;pushl -(%ebp);leal -(%ebp), %ecx;movl $, -(%ebp)": 1,
                "testb %al, %al;je  <.text+>;pushl %edi;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "je  <.text+>;pushl $;leal -(%ebp), %ecx;calll - <.text+>;pushl %eax": 1,
                "calll - <.text+>;movl %eax, %edi;movl -(%ebp), %eax;testb $, (%eax);je  <.text+>": 1,
                "pushl (%ebp);xorl %esi, %esi;incl %esi;pushl %ebx;movl %esi, -(%ebp)": 1,
                "movl %eax, (%ecx);jmp - <.text+>;pushl (%ebp);movl -(%ebp), %eax;pushl (%eax)": 1,
                "calll - <.text+>;testb %al, %al;movl $, %esi;jne - <.text+>;cmpb $, (%ebp)": 1,
                "movb $, (%eax);pushl -(%ebp);incl -(%ebp);pushl -(%ebp);movl (%edi), %eax": 1,
                "xorl %edi, %edi;leal -(%ebp), %ecx;calll - <.text+>;cmpl %edi, -(%ebp);je  <.text+>": 1,
                "pushl %eax;movl %edi, -(%ebp);calll - <.text+>;testb %al, %al;jne - <.text+>": 1,
                "movl %edi, -(%ebp);calll - <.text+>;testb %al, %al;jne - <.text+>;xorl %edi, %edi": 1,
                "popl %ecx;popl %ecx;movl (%ebp), %ecx;movw %ax, (%ecx);movb $, ": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>": 2,
                "leal -(%ebp), %ecx;calll - <.text+>;movb (%ebp), %al;andl $, -(%ebp);movb %al, %cl": 1,
                "andb $, %cl;movb %cl, -(%ebp);movb %al, %cl;andb $, %cl;movb %cl, -(%ebp)": 1,
                "andb $, %cl;andb $, %al;movb %cl, -(%ebp);movb %al, -(%ebp);pushl $": 1,
                "movb %al, -(%ebp);pushl $;xorl %eax, %eax;andb $, %dl;cmpl %eax, -(%ebp)": 1,
                "calll - <.text+>;movl -(%ebp), %eax;movb $, (%ebx);movl %edi, (%eax);movb $, %bl": 1,
                "movl -(%ebp), %eax;movb $, (%ebx);movl %edi, (%eax);movb $, %bl;jmp  <.text+>": 1,
                "movl (%esi), %eax;pushl $;pushl %ebx;pushl (%esi);movl %esi, %ecx": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl %esi, %ecx;calll *(%eax)": 2,
                "movb $, (%ebx);je  <.text+>;movl (%ebx), %eax;pushl $;pushl %edi": 1,
                "calll - <.text+>;addl $, %esp;movl (%ebx), %eax;pushl $;pushl %edi": 1,
                "movl $, %eax;pushl %eax;pushl $;pushl %ebx;calll - <.text+>": 1,
                "testb %al, %al;movl $, %edi;je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "andl $, (%eax);popl %ecx;popl %ecx;movb $, %bl;jmp  <.text+>": 1,
                "movb $, %bl;jmp  <.text+>;pushl $;jmp  <.text+>;testb $, -(%ebp)": 1,
                "jmp  <.text+>;testb $, -(%ebp);je  <.text+>;movl (%ebx), %eax;pushl $": 1,
                "cmpb $-, %al;je  <.text+>;cmpb $-, %al;je  <.text+>;movl (%esi), %ecx": 1,
                "movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <.text+>;cmpb $, -(%ebp);je  <.text+>;leal -(%ebp), %eax": 2,
                "movb -(%ebp), %cl;cmpb %al, %cl;je  <.text+>;cmpl $, ;jne  <.text+>": 1,
                "cmpl $, %eax;jne  <.text+>;movl (%esi), %eax;movl %esi, %ecx;calll *(%eax)": 1,
                "calll *(%eax);testb %al, %al;jne  <.text+>;movb $, %bl;jmp  <.text+>": 1,
                "calll - <.text+>;movl $, -(%ebp);jmp  <.text+>;movl $, %edi;movl (%esi), %eax": 1,
                "pushl $;pushl $;pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>": 2,
                "movl -(%ebp), %eax;andw $, (%eax);popl %ecx;popl %ecx;movl $, -(%ebp)": 1,
                "popl %ecx;movl $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx": 1,
                "popl %ecx;popl %ecx;movl $, -(%ebp);pushl $;pushl $": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %ebx;pushl (%ebp);movl %esi, %ecx": 4,
                "movl %esi, %ecx;calll - <.text+>;testb %al, %al;je - <.text+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movzwl -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;movb $, -(%ebp);calll - <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl %eax;calll - <.text+>;cmpb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <.text+>;cmpl $, -(%ebp);je  <.text+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;subl $, %eax;je  <.text+>;decl %eax;je  <.text+>": 1,
                "negl %eax;sbbl %eax, %eax;addl $, %eax;pushl %eax;jmp  <.text+>": 2,
                "movl (%eax), %esi;jne  <.text+>;cmpl $, %esi;ja  <.text+>;movl $, %eax": 1,
                "pushl %ecx;movl $, (%eax);pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl %ebx;calll - <.text+>;addl $, %esp;movl -(%ebp), %eax": 2,
                "calll *(%eax);cmpl %edi, (%ebp);je  <.text+>;movl (%esi), %eax;pushl %ebx": 1,
                "jmp  <.text+>;pushl $;pushl %edi;pushl $;movl (%ebx), %eax": 1,
                "pushl %ebx;calll - <.text+>;xorb %bl, %bl;popl %ecx;popl %ecx": 1,
                "movl (%ebp), %edi;je  <.text+>;movl (%esi), %ecx;movl (%ecx), %eax;calll *(%eax)": 1,
                "calll *(%eax);movl (%esi), %ecx;movl (%ecx), %eax;calll *(%eax);imull %ebx, %eax": 1,
                "movl %ecx, %esi;leal -(%ebp), %ecx;calll - <.text+>;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "movl (%ebp), %eax;pushl %esi;movl %eax, -(%ebp);movl (%ebp), %eax;movl %ecx, %ebx": 1,
                "cmpl %esi, %eax;movl %eax, -(%ebp);je  <.text+>;movl (%ebx), %ecx;movl (%ecx), %eax": 1,
                "xorl %edi, %edi;incl %edi;pushl -(%ebp);pushl $;pushl %ecx": 1,
                "pushl %ecx;pushl %ecx;xorl %ecx, %ecx;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %ecx;pushl %ecx;pushl (%eax)": 3,
                "movl $, (%eax);pushl -(%ebp);movl %esi, (%eax);calll - <.text+>;incl -(%ebp)": 1,
                "movl %ecx, (%eax);pushl %ecx;movl -(%ebp), %ecx;movl %esp, %eax;movl %esi, (%eax)": 2,
                "movl (%ebp), %eax;shll $, %eax;movl %eax, -(%ebp);leal -(%edi,%eax), %eax;xorl %edx, %edx": 1,
                "pushl (%eax);pushl (%eax);pushl (%ebx);pushl (%ebx);calll - <.text+>": 1,
                "pushl (%ebx);calll - <.text+>;xorl %edx, %edx;divl %edi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %ecx;xorl %eax, %eax;addl -(%ebp), %ecx;adcl -(%ebp), %eax;movl %ecx, -(%ebp)": 1,
                "pushl (%ebx);calll - <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %ecx": 1,
                "je  <.text+>;movl -(%ebp), %ecx;movl (%ecx), %eax;pushl $;pushl %esi": 1,
                "pushl $;calll *(%eax);pushl %ecx;pushl %ecx;movl %esp, %eax": 3,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);calll *(%eax);movl %eax, %ecx;xorl %edx, %edx": 1,
                "pushl %ecx;movl %ecx, (%eax);movl %esi, (%eax);pushl %ecx;movl %esp, %eax": 1,
                "movl %esi, (%ecx);xorl %ecx, %ecx;incl %ecx;pushl %ecx;movl $, %eax": 1,
                "xorl %edx, %edx;testb %al, %al;movl %esi, -(%ebp);movl $, %eax;jne  <.text+>": 1,
                "pushl -(%ebp);movl %esi, (%eax);calll - <.text+>;xorl %edx, %edx;leal (%edi), %eax": 1,
                "pushl %esi;pushl %esi;pushl $;movl %edi, %ecx;calll *(%eax)": 2,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movzbl -(%ebp), %ecx;shll %ecx;movl %ecx, %eax": 11,
                "pushl %eax;pushl -(%ebp);andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebx), %ecx": 1,
                "je - <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;pushl $;calll - <.text+>": 10,
                "calll *;movb %al, -(%ebp);popl %ecx;xorl %eax, %eax;pushl $": 9,
                "pushl $;movb $, -(%ebp);popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 9,
                "leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movb -(%ebp), %al;andl $, %ecx": 8,
                "pushl %esi;pushl %esi;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jmp  <.text+>;movl %esi, -(%ebp);movb -(%ebp), %al;negb %al": 1,
                "testb %al, %al;je - <.text+>;pushl %esi;pushl $;leal -(%ebp), %ecx": 1,
                "movl (%eax), %eax;pushl %esi;pushl -(%ebp);addl %eax, %eax;pushl %eax": 1,
                "movl -(%ebp), %edi;movl (%edi), %eax;popl %ecx;pushl %esi;pushl %esi": 1,
                "popl %ecx;xorl %eax, %eax;pushl $;popl %ecx;movb $, -(%ebp)": 1,
                "popl %ecx;pushl $;movb $, -(%ebp);popl %ecx;leal -(%ebp), %edi": 1,
                "movl %esp, %eax;leal -(%ebp), %ecx;movl %esi, (%eax);movl %edi, (%eax);calll - <.text+>": 1,
                "movl %edi, (%eax);calll - <.text+>;testb %al, %al;je - <.text+>;pushl %edi": 1,
                "stosb %al, %es:(%edi);movl (%ebx), %eax;cmpl $, (%eax);movl (%ebx), %ecx;setne %al": 1,
                "movl (%ebx), %ecx;movl (%ecx), %eax;calll *(%eax);movl (%eax), %ecx;movl (%eax), %eax": 1,
                "movl (%eax), %edx;movl (%ebx), %ecx;movl %edx, (%ecx);movl (%eax), %eax;movl %eax, (%ecx)": 1,
                "incl %eax;cmpl %edi, %ecx;ja - <.text+>;negb %al;jmp  <.text+>": 1,
                "incl %edx;shrl %eax;cmpl %edi, %eax;ja - <.text+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %ecx;pushl $;movb %al, (%ecx);calll - <.text+>;movl (%ebx), %ecx": 1,
                "calll - <.text+>;movl (%ebx), %ecx;movl %eax, (%ecx);movl (%ebx), %eax;pushl (%eax)": 1,
                "movl (%ebx), %eax;pushl (%eax);calll - <.text+>;movl (%ebx), %ecx;movl %eax, (%ecx)": 1,
                "movl %edi, -(%ebp);calll - <.text+>;leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx": 3,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;cmpl %esi, (%eax);movl (%eax), %ecx": 1,
                "movl %ecx, -(%ebp);calll - <.text+>;movl (%eax), %ebx;movl (%edi), %ecx;movl (%ecx), %eax": 1,
                "calll - <.text+>;movl (%eax), %ebx;movl (%edi), %ecx;movl (%ecx), %eax;movl %ebx, -(%ebp)": 1,
                "calll *(%eax);movl %eax, (%ebp);movl (%edi), %ecx;movl (%ecx), %eax;calll *(%eax)": 1,
                "movl %eax, (%ebp);movl -(%ebp), %eax;pushl %esi;pushl %esi;movl %eax, (%edi)": 1,
                "movl %eax, (%edi);movl %esp, %eax;xorl %ecx, %ecx;movl %ecx, (%eax);leal -(%ebp), %ecx": 1,
                "testb %al, %al;jne  <.text+>;movb %al, (%ebp);jmp  <.text+>;pushl $": 1,
                "pushl %esi;movl %ebx, %ecx;pushl $;calll *(%eax);pushl $": 1,
                "calll *(%eax);movl -(%ebp), %ecx;movl %eax, %esi;imull (%ebp), %esi;pushl %ecx": 1,
                "pushl $;movl %ecx, -(%ebp);movl %eax, -(%ebp);testl %eax, %eax;movl (%ebx), %eax": 1,
                "calll - <.text+>;pushl (%eax);jmp  <.text+>;pushl $;calll *(%eax)": 2,
                "leal -(%ebp), %eax;pushl %esi;pushl %eax;calll - <.text+>;pushl (%eax)": 1,
                "testl %esi, %esi;movl (%ebx), %eax;pushl $;movl %ecx, -(%ebp);movl %ebx, %ecx": 1,
                "pushl %ebx;calll - <.text+>;addl $, %esp;movb $, (%ebp);jmp - <.text+>": 1,
                "movl (%ebx), %ecx;movl (%ecx), %eax;calll *(%eax);movl %ebx, %ecx;movl %eax, %esi": 1,
                "pushl %ecx;movl (%ebp), %ecx;movl %esp, %eax;xorl %edi, %edi;movl %edi, (%eax)": 1,
                "addl $, %esp;jmp  <.text+>;movl (%ebx), %eax;pushl (%eax);pushl (%eax)": 1,
                "movl (%ebx), %eax;pushl (%eax);pushl (%eax);pushl -(%ebp);pushl -(%ebp)": 1,
                "movl %edi, (%ecx);movl %eax, (%ecx);pushl -(%ebp);pushl -(%ebp);calll - <.text+>": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;subl $, %ecx;sbbl $, %edx;addl %ecx, %eax": 1,
                "je  <.text+>;pushl $;leal -(%ebp), %ecx;calll - <.text+>;negl %eax": 1,
                "incb %al;movb %al, (%ebp);je  <.text+>;pushl $;pushl $": 1,
                "leal -(%ebp), %ecx;pushl (%eax);calll - <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "divl %esi;pushl %ecx;pushl %ecx;movl %esp, %ecx;xorl %esi, %esi": 1,
                "pushl (%eax);pushl (%eax);pushl %ecx;pushl %ecx;movl (%ebp), %ecx": 1,
                "pushl $;movl %edi, %ecx;jmp  <.text+>;cmpl %esi, (%ebp);je  <.text+>": 1,
                "pushl %eax;pushl -(%ebp);movl %ebx, %ecx;pushl %esi;calll - <.text+>": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %ecx;movl (%eax), %eax;pushl $": 1,
                "pushl (%esi);movl %ecx, -(%ebp);pushl %eax;calll - <.text+>;pushl (%eax)": 2,
                "pushl %ecx;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "cltd;movl %eax, %edi;movl -(%ebp), %eax;xorl %esi, %esi;orl %eax, %esi": 1,
                "xorl %esi, %esi;calll - <.text+>;testl %eax, %eax;popl %ecx;je  <.text+>": 1,
                "calll - <.text+>;pushl (%eax);movl %esi, %ecx;pushl (%eax);pushl (%ebp)": 1,
                "calll *(%eax);testb %al, %al;je  <.text+>;movl (%esi), %eax;testb $, (%eax)": 1,
                "jmp  <.text+>;pushl %ecx;pushl %ecx;movl , %ecx;movl %esp, %eax": 1,
                "calll - <.text+>;testl %esi, %esi;je - <.text+>;jmp - <.text+>;int": 1,
                "movl (%ebx), %eax;pushl %ecx;pushl (%eax);pushl $;pushl $": 1,
                "pushl %edx;pushl %ecx;pushl (%eax);leal -(%ebp), %eax;pushl %eax": 1,
                "movzwl (%eax), %ecx;pushl %ecx;pushl (%eax);pushl $;pushl $": 4,
                "movl (%esi), %edx;movl %ecx, (%eax);movl (%ebx), %ecx;movl (%ecx), %ecx;movl %ecx, (%eax)": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;pushl %eax;calll - <.text+>;pushl -(%ebp)": 1,
                "movl (%eax), %ecx;pushl -(%ebp);movzwl (%ebp), %edx;pushl -(%ebp);movl (%eax), %eax": 1,
                "popl %ecx;popl %ecx;je  <.text+>;pushl (%esi);movl (%ebx), %eax": 1,
                "testb %al, %al;jne  <.text+>;movl (%ebp), %eax;movb $, (%edi);pushl (%esi)": 1,
                "addl $, %esp;movb $, (%eax);movl -(%ebp), %eax;addl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "calll - <.text+>;movzbl %al, %eax;pushl %eax;movl (%ebp), %eax;pushl (%eax)": 1,
                "pushl %eax;calll - <.text+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl $;pushl (%ebp);calll - <.text+>;addl $, %esp;cmpb $, (%edi)": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;pushl %eax;movl (%ebx), %eax;pushl (%eax)": 1,
                "movl $, -(%ebp);movb $, (%ebp);calll *(%eax);jmp  <.text+>;movl (%ebp), %ecx": 1,
                "pushl %ecx;pushl (%eax);movl (%ebp), %ecx;pushl (%eax);pushl %ebx": 1,
                "movl -(%ebp), %edi;movl (%edi), %ecx;movl (%ecx), %eax;calll *(%eax);pushl %eax": 1,
                "calll - <.text+>;movzbl %al, %eax;pushl %eax;pushl (%esi);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;cmpl (%ebp), %esi": 1,
                "leal -(%ebp), %ecx;pushl %ecx;movl (%ebp), %ecx;pushl %edi;pushl (%eax)": 1,
                "pushl %ecx;movl (%ebp), %ecx;pushl %edi;pushl (%eax);pushl (%eax)": 1,
                "je  <.text+>;movl -(%ebp), %eax;movw (%eax), %di;movl (%eax), %ebx;leal -(%ebp), %eax": 1,
                "pushl (%ebp);calll - <.text+>;addl $, %esp;cmpl $, -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl (%esi);pushl (%esi);pushl %eax;movl -(%ebp), %eax": 1,
                "movl %esi, %ecx;calll - <.text+>;andl $, -(%ebp);movb $, -(%ebp);xorl %ebx, %ebx": 1,
                "movl %edi, %ecx;calll *(%eax);movl -(%ebp), %ecx;movl (%ecx), %eax;calll *(%eax)": 1,
                "jne - <.text+>;movl -(%ebp), %ecx;movl (%ecx), %eax;pushl $;calll *(%eax)": 1,
                "calll - <.text+>;addl $, %esp;xorb %bl, %bl;jmp  <.text+>;movl (%ebp), %ecx": 1,
                "addl $, %esp;xorb %bl, %bl;jmp  <.text+>;movl (%ebp), %ecx;pushl $": 1,
                "xorb %bl, %bl;jmp  <.text+>;movl (%ebp), %ecx;pushl $;xorb %bl, %bl": 1,
                "movl (%ebp), %ecx;movl %ebx, (%eax);leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "pushl %eax;calll - <.text+>;movl (%eax), %edi;movl (%eax), %eax;movl %esi, %ecx": 1,
                "movl %edi, %ecx;addl -(%ebp), %ecx;adcl -(%ebp), %eax;pushl %eax;pushl %ecx": 2,
                "calll - <.text+>;movl %esi, %ecx;calll - <.text+>;cmpl -(%ebp), %eax;jae  <.text+>": 1,
                "movl %edi, %ecx;movl %eax, -(%ebp);calll *(%edx);movl %eax, %ecx;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;movl %eax, -(%ebp);calll - <.text+>;movl (%ebp), %ecx;pushl %ebx": 1,
                "calll - <.text+>;movl (%ebp), %ecx;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);calll - <.text+>;movl %eax, %ecx;movl -(%ebp), %eax;xorl %edx, %edx": 1,
                "addl %ecx, %edi;adcl %eax, %ebx;pushl %ebx;pushl %edi;pushl (%esi)": 1,
                "je  <.text+>;movl (%esi), %eax;movl (%eax), %edi;movl (%eax), %ebx;pushl $": 1,
                "andl $, %ecx;rep  stosb %al, %es:(%edi);movl -(%ebp), %eax;andb $-, (%eax);cmpl $, (%ebp)": 1,
                "popl %ebx;leave;retl $;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "addl $, %esp;jmp - <.text+>;movl (%ebp), %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;movb $, (%ecx);movl (%ebp), %eax;movl (%eax), %esi;movl (%eax), %eax": 1,
                "testb $, %bl;movl (%eax), %eax;movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);je  <.text+>;cmpl %edi, %ecx;je  <.text+>": 1,
                "cmpl %ebx, %esi;jne  <.text+>;movl %esi, (%ebp);movl (%ebp), %eax;movl $, %esi": 1,
                "movl %esi, %eax;jae  <.text+>;movl -(%ebp), %ecx;cmpb $, (%eax,%ecx);jne  <.text+>": 1,
                "jb - <.text+>;movl -(%ebp), %eax;subl %esi, %eax;movl %eax, %ebx;jne  <.text+>": 1,
                "xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);jne  <.text+>;addl $, %ebx;xorl %edi, %edi": 1,
                "xorl %eax, %eax;cmpl %eax, %ecx;je  <.text+>;cmpl %eax, (%ebp);jbe  <.text+>": 1,
                "cmpl (%ebp), %eax;jb - <.text+>;jmp  <.text+>;pushl %ebx;calll - <.text+>": 1,
                "incl %eax;cmpl %ebx, %eax;jb - <.text+>;movb $, %bl;jmp  <.text+>": 1,
                "xorl %ebx, %ebx;leal -(%ebp), %ecx;movb %bl, (%eax);calll - <.text+>;testb %al, %al": 1,
                "movl (%esi), %ecx;movl %ecx, (%ebp);jmp  <.text+>;movl %ebx, (%ebp);cmpb %bl, %al": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);jmp  <.text+>;movl %ebx, -(%ebp);pushl %esi": 1,
                "movl %esp, %eax;leal -(%ebp), %ecx;movl $, (%eax);movl %ebx, (%eax);calll - <.text+>": 6,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %ecx;pushl %ecx": 4,
                "jmp  <.text+>;cmpb %bl, -(%ebp);jne  <.text+>;pushl %ecx;pushl %ecx": 2,
                "pushl %ecx;movl -(%ebp), %ecx;movl %esp, %eax;movl %ebx, (%eax);movl %ebx, (%eax)": 2,
                "je  <.text+>;cmpb %bl, (%ebp);jne  <.text+>;movl (%ebp), %eax;subl %ebx, %eax": 2,
                "decl %eax;jne  <.text+>;pushl $;jmp  <.text+>;movb (%ebp), %al": 2,
                "testb %al, %al;je  <.text+>;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;incl -(%ebp);cmpb %bl, (%ebp)": 1,
                "movl %ebx, -(%ebp);calll - <.text+>;pushl %ebx;pushl $;pushl $": 1,
                "jbe  <.text+>;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %eax;xorl %edx, %edx": 2,
                "xorl %edx, %edx;divl -(%ebp);cmpl -(%ebp), %eax;je  <.text+>;pushl %eax": 2,
                "testl %edx, %edx;jne  <.text+>;movl -(%ebp), %eax;imull %edi, %eax;pushl %eax": 1,
                "pushl %edx;movl -(%ebp), %edx;shrl %edx;pushl %edx;pushl %ecx": 17,
                "shrl %edx;pushl %edx;pushl %ecx;movl -(%ebp), %ecx;pushl %eax": 9,
                "movl (%ebp), %eax;addl $, -(%ebp);addl %edi, -(%ebp);cmpl -(%ebp), %eax;jb - <.text+>": 1,
                "jb - <.text+>;pushl $;pushl $;pushl $;pushl (%ebp)": 3,
                "jmp  <.text+>;leal (%eax), %ebx;movl (%ebx), %eax;testb $, %al;je  <.text+>": 1,
                "je  <.text+>;pushl (%esi);movl %eax, %edi;pushl (%esi);andl $-, %edi": 1,
                "pushl (%esi);andl $-, %edi;orl (%ebp), %edi;orl $, %edi;pushl %edi": 1,
                "pushl $;pushl (%ebp);calll - <.text+>;movl %edi, (%ebx);movl (%esi), %eax": 1,
                "pushl (%ebp);calll - <.text+>;movl %edi, (%ebx);movl (%esi), %eax;movl (%esi), %ecx": 1,
                "testb %al, %al;je  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl %ecx;pushl %ecx;movl %esp, %eax": 3,
                "movl %edi, (%eax);calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%esi), %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "cmpb $, (%ebp);ja  <.text+>;pushl $-;pushl $;jmp - <.text+>": 1,
                "movb %cl, %dl;movw (%eax), %bx;incl %eax;movw %bx, (%esi);incl %eax": 1,
                "movw %ax, (%edx,%ebx,);movl (%ecx), %eax;movw (%eax), %ax;xorl %edi, %edi;cmpw %di, %ax": 1,
                "testb %al, %al;movb $, (%ebp);jne  <.text+>;movb $, (%ebp);movl %edi, -(%ebp)": 1,
                "cmpb $, (%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "jne - <.text+>;movb $, -(%ebp);jmp - <.text+>;cmpb $, (%esi);jb - <.text+>": 1,
                "movl (%ebp), %ecx;pushl $;calll - <.text+>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "movl %esp, %eax;pushl %ecx;pushl %ecx;leal (%esi), %ecx;jmp  <.text+>": 1,
                "jmp  <.text+>;cmpb $, -(%ebp);jne  <.text+>;pushl $;pushl $": 1,
                "movl (%ebp), %ecx;pushl $;pushl %eax;movb %al, -(%ebp);leal -(%ebp), %eax": 1,
                "testb %dl, %bl;jne  <.text+>;orb $, (%eax);pushl $;pushl %esi": 1,
                "orb $, (%eax);pushl %esi;pushl $;pushl (%ebp);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);calll - <.text+>;pushl -(%ebp);pushl %edi;pushl $": 1,
                "xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax;leal -(%ebp), %ecx": 7,
                "movl %esp, %eax;movl %ecx, (%eax);movl (%ebp), %ecx;movl %ebx, (%eax);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl %eax;pushl %ecx;calll - <.text+>;testb %al, %al": 1,
                "je  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl %eax;pushl %esi": 1,
                "movl %ecx, -(%ebp);calll - <.text+>;xorl %ecx, %ecx;addl $, %esp;cmpl %ecx, (%ebp)": 1,
                "xorl %ecx, %ecx;addl $, %esp;cmpl %ecx, (%ebp);je  <.text+>;movl (%ebp), %eax": 1,
                "cmpb %cl, (%eax);je  <.text+>;movl (%eax), %eax;jmp  <.text+>;xorl %eax, %eax": 1,
                "jne  <.text+>;pushl %edi;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;cmpl %edi, %eax;movl %esi, -(%ebp);jne  <.text+>;pushl %ecx": 1,
                "pushl %esi;pushl $;pushl $;jmp  <.text+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);calll - <.text+>;testb %al, %al;je - <.text+>": 1,
                "je - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl $;pushl %ecx": 1,
                "movl %esp, %eax;movl %edi, (%eax);movl %edi, (%eax);pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "movl (%ebp), %esi;addl $, %esp;cmpb $, (%ebp);movb $, (%eax);je  <.text+>": 1,
                "movl -(%ebp), %eax;addl %esi, %eax;cmpl %eax, %esi;movl %eax, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);jae  <.text+>": 1,
                "jmp  <.text+>;movl (%ebp), %ecx;movb $, -(%ebp);calll - <.text+>;movl (%ebp), %ecx": 2,
                "jbe  <.text+>;pushl %eax;pushl -(%ebp);pushl (%ebx);pushl (%ebx)": 1,
                "pushl %eax;pushl (%ebx);pushl (%ebx);pushl $;pushl %edi": 1,
                "testw $, -(%ebp);je  <.text+>;pushl -(%ebp);movb $, -(%ebp);pushl (%ebx)": 1,
                "movw %ax, -(%ebp);movw -(%ebp), %ax;movw %ax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movzwl -(%ebp), %eax;pushl %eax;movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "testb %al, %al;je - <.text+>;xorl %edi, %edi;cmpl %edi, (%ebp);je  <.text+>": 1,
                "je - <.text+>;xorl %edi, %edi;cmpl %edi, (%ebp);je  <.text+>;pushl %edi": 1,
                "movl %ebx, -(%ebp);movl %eax, -(%ebp);pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "addl $-, %edi;adcl $-, -(%ebp);pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "je - <.text+>;movl $, -(%ebp);jmp - <.text+>;movl (%ebp), %ecx;pushl $": 1,
                "pushl %ebx;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <.text+>": 1,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <.text+>;testb %al, %al": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %esi;movl $, %edi": 1,
                "je  <.text+>;movl %esi, %ecx;calll - <.text+>;movl (%esi), %eax;pushl $": 4,
                "calll *(%eax);pushl $;pushl -(%ebp);pushl -(%ebp);pushl $": 1,
                "calll - <.text+>;addl $, %esp;jmp  <.text+>;pushl -(%ebp);movzwl -(%ebp), %eax": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;cmpl $, -(%ebp);jne  <.text+>;movl %esi, %ecx": 1,
                "cmpl %ebx, -(%ebp);movl $, (%ebp);leal -(%ebp), %ecx;jne  <.text+>;leal -(%ebp), %ecx": 1,
                "pushl %eax;pushl %ecx;pushl -(%ebp);movl %edx, -(%ebp);pushl $": 1,
                "testb %al, %al;je  <.text+>;movl $, -(%ebp);pushl %ebx;pushl %ebx": 1,
                "testb %al, %al;je  <.text+>;pushl -(%ebp);movl $, (%ebp);pushl -(%ebp)": 1,
                "movl $, (%ebp);pushl -(%ebp);pushl %edi;pushl $;pushl %esi": 1,
                "je  <.text+>;addl $, -(%ebp);adcl %ebx, -(%ebp);xorl %eax, %eax;pushl %eax": 1,
                "je  <.text+>;leal (%esi), %eax;cmpl $, (%eax);je  <.text+>;movl $, (%eax)": 2,
                "pushl $;pushl %ebx;movl %ecx, -(%ebp);pushl %ebx;movl %esi, %ecx": 1,
                "pushl %esi;pushl $;pushl $;pushl (%ebp);calll - <.text+>": 1,
                "pushl -(%ebp);movl %esi, %eax;pushl -(%ebp);addl $, %eax;movl %edi, %ecx": 1,
                "pushl %edi;pushl %ecx;pushl %ecx;movl (%ebx), %ecx;movl %esp, %eax": 1,
                "movl (%edi), %eax;jmp  <.text+>;movl %esi, -(%ebp);jmp  <.text+>;leal (%ebx), %eax": 1,
                "pushl (%ebx);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);pushl %ecx;pushl %ecx;movl (%ebx), %ecx;addl (%ebx), %ecx": 1,
                "adcl -(%ebp), %eax;movl %esi, %ecx;pushl %eax;pushl %ecx;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;movl -(%ebp), %edi;leal -(%ebp), %ecx": 1,
                "xorl %ebx, %ebx;pushl $;pushl $;pushl %ebx;leal -(%ebp), %ecx": 1,
                "pushl %ecx;pushl (%eax);leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al": 1,
                "movl (%ebx), %ebx;jmp  <.text+>;xorl %ebx, %ebx;pushl %esi;pushl %esi": 2,
                "leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;cmpb $, (%ebx)": 7,
                "pushl $;pushl (%ebp);calll - <.text+>;addl $, %esp;movl -(%ebp), %eax": 2,
                "pushl %ecx;movl %eax, (%ebp);movl %esp, %eax;movl $, (%eax);movl %esi, (%eax)": 1,
                "movl %ebx, %ecx;calll - <.text+>;movl (%eax), %ecx;movl (%eax), %eax;pushl %esi": 1,
                "movl %edi, -(%ebp);je  <.text+>;movl -(%ebp), %edx;movl -(%ebp), %ecx;jmp  <.text+>": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;jmp  <.text+>;movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;pushl %ecx;pushl %ecx;movl %esp, %eax": 1,
                "je  <.text+>;pushl (%ebx);addl $, %esi;pushl (%ebx);adcl $, %edi": 1,
                "pushl (%ebx);adcl $, %edi;movl %esi, %eax;addl -(%ebp), %eax;movl %edi, %ecx": 1,
                "pushl %eax;movl %edi, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);calll - <.text+>": 1,
                "movl %edi, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);calll - <.text+>;testb %al, %al": 1,
                "pushl %esi;pushl %eax;calll - <.text+>;pushl (%ebp);movl %eax, -(%ebp)": 1,
                "pushl %ecx;movl -(%ebp), %ecx;pushl (%ecx);pushl (%ecx);movl -(%ebp), %ecx": 1,
                "calll *(%eax);testl %eax, %eax;jbe  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %ecx;pushl %eax;pushl -(%ebp);pushl -(%ebp);calll - <.text+>": 1,
                "pushl %esi;pushl -(%ebp);pushl -(%ebp);calll - <.text+>;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);subl $, %esi;pushl -(%ebp);sbbl $, %edi;addl %esi, -(%ebp)": 1,
                "subl $, %esi;pushl -(%ebp);sbbl $, %edi;addl %esi, -(%ebp);movl %ecx, (%eax)": 1,
                "movl (%ebp), %eax;pushl %edi;movl (%ebp), %edi;leal -(%ebp), %ecx;movl %eax, -(%ebp)": 2,
                "calll - <.text+>;testl %ebx, %ebx;je  <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "calll *(%eax);movl %eax, %ecx;movl (%ebx), %eax;imull %edi, %ecx;decl %eax": 1,
                "xorl %edx, %edx;divl %ecx;xorl %edx, %edx;movl %ecx, -(%ebp);movl %eax, %ecx": 1,
                "movl -(%ebp), %ecx;pushl $;calll - <.text+>;xorb %bl, %bl;leal -(%ebp), %ecx": 2,
                "andl $, -(%ebp);movl (%esi), %ecx;movl (%esi), %edx;leal -(%ebp), %edi;pushl %edi": 2,
                "pushl (%esi);pushl -(%ebp);pushl %ecx;pushl %edx;leal -(%ebp), %ecx": 1,
                "pushl %edx;leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;je - <.text+>": 1,
                "jmp  <.text+>;xorl %eax, %eax;pushl %eax;pushl $;leal -(%ebp), %ecx": 1,
                "pushl $;pushl %edi;pushl %edi;pushl %eax;pushl %ecx": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;je - <.text+>;xorl %edi, %edi": 1,
                "je - <.text+>;xorl %edi, %edi;cmpb $, (%ebx);je  <.text+>;movl (%ebx), %eax": 1,
                "xorl %edi, %edi;cmpb $, (%ebx);je  <.text+>;movl (%ebx), %eax;jmp  <.text+>": 2,
                "movl (%ebp), %edi;jmp  <.text+>;movl (%ebx), %eax;movl %ebx, %ecx;calll *(%eax)": 1,
                "movl %ebx, %ecx;calll *(%eax);movl %eax, %edi;testl %edi, %edi;je  <.text+>": 1,
                "pushl %eax;pushl %eax;pushl %eax;movl %edi, %ecx;calll - <.text+>": 1,
                "je  <.text+>;cmpl $, -(%ebp);je  <.text+>;pushl %ecx;pushl %ecx": 1,
                "movl (%eax), %eax;pushl %eax;movl %edi, %ecx;calll - <.text+>;testb %al, %al": 1,
                "jne  <.text+>;movzwl -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 1,
                "movl %esi, %ecx;calll *(%eax);leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "jne - <.text+>;movl (%esi), %eax;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "movl %ebx, -(%ebp);cmpl $, (%ebp);je  <.text+>;pushl (%ebp);movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%edi), %eax": 1,
                "movl (%edi), %ecx;pushl %eax;pushl $;pushl $;pushl (%ebp)": 1,
                "pushl %eax;calll - <.text+>;pushl $;movl (%esi), %eax;movl %esi, %ecx": 1,
                "calll - <.text+>;pushl $;movl (%esi), %eax;movl %esi, %ecx;calll *(%eax)": 1,
                "jmp  <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>;xorb %bl, %bl": 2,
                "pushl %ebx;calll - <.text+>;movzbl %al, %eax;pushl %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl (%eax);movl %esi, %ecx;pushl (%eax);calll - <.text+>": 2,
                "leal -(%ebp), %ecx;pushl %edi;pushl (%esi);calll - <.text+>;testb %al, %al": 2,
                "pushl (%edi);pushl %eax;calll - <.text+>;pushl (%eax);movl (%esi), %ecx": 1,
                "movl %ebx, (%ecx);incl %eax;movl %eax, (%ecx);calll - <.text+>;cmpb %bl, %al": 1,
                "jmp  <.text+>;movl -(%ebp), %edi;cmpb %bl, (%ebp);je  <.text+>;cmpl %ebx, (%ebp)": 1,
                "pushl (%eax);pushl (%esi);jne  <.text+>;calll - <.text+>;shrl $, %eax": 1,
                "movl %ebx, (%eax);movl %ebx, (%eax);movb -(%ebp), %al;negb %al;leal -(%ebp), %ecx": 1,
                "jmp  <.text+>;xorl %eax, %eax;pushl -(%ebp);movl %eax, %ecx;calll - <.text+>": 1,
                "xorl %eax, %eax;pushl -(%ebp);movl %eax, %ecx;calll - <.text+>;cmpb %bl, %al": 1,
                "calll - <.text+>;cmpb %bl, %al;je  <.text+>;cmpl %edi, -(%ebp);jne  <.text+>": 1,
                "movl (%esi), %eax;addl $, %eax;pushl %eax;calll - <.text+>;testb %al, %al": 1,
                "movl (%ebp), %eax;pushl %edi;movl (%ebp), %edi;movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "shrb %al;testb $, %al;movb $, -(%ebp);je  <.text+>;cmpb $, (%ebx)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl $, -(%ebp);movl %eax, (%esi)": 1,
                "shrl $, %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 4,
                "calll - <.text+>;testb %al, %al;je - <.text+>;cmpb $, (%ebx);movl (%ebx), %ecx": 4,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp);movl $, %edi;pushl %eax": 2,
                "pushl %eax;pushl %ecx;movl %esi, %ecx;calll - <.text+>;movzbl %al, %eax": 4,
                "movzbl %al, %eax;pushl %eax;pushl (%esi);leal -(%ebp), %ecx;pushl $": 3,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 3,
                "pushl $;jmp  <.text+>;movl -(%ebp), %esi;addl $, (%esi);leal -(%ebp), %eax": 2,
                "pushl %eax;pushl (%edi);leal -(%ebp), %ecx;movl %eax, -(%ebp);calll - <.text+>": 2,
                "leal -(%ebp), %eax;pushl %ebx;pushl %edi;pushl $;pushl %eax": 2,
                "pushl %edi;calll - <.text+>;testb %al, %al;je  <.text+>;cmpb $, -(%ebp)": 1,
                "cmpl %edi, (%ebp);je  <.text+>;cmpb $, (%ebx);je  <.text+>;movl (%ebx), %eax": 4,
                "testb %al, %al;movl $, %edi;jne  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "cmpl %edi, %eax;je  <.text+>;cmpl $, %eax;jle  <.text+>;cmpl $, %eax": 1,
                "je - <.text+>;cmpl %edi, (%ebp);je  <.text+>;cmpb $, (%ebx);je  <.text+>": 1,
                "movl (%ebx), %eax;jmp  <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;subl $, %esp": 1,
                "movl $, (%eax);movl -(%ebp), %eax;pushl %eax;pushl $;pushl $": 1,
                "je - <.text+>;addl $, (%esi);leal -(%ebp), %eax;pushl %eax;adcl %edi, (%esi)": 1,
                "addl %ecx, (%esi);adcl %eax, (%esi);pushl $-;pushl $;leal -(%ebp), %ecx": 1,
                "je - <.text+>;movl -(%ebp), %eax;movb (%eax), %cl;shrb $, %cl;testb $, %cl": 1,
                "xorl %edi, %edi;incl %edi;cmpb $, -(%ebp);je  <.text+>;xorl %esi, %esi": 1,
                "calll - <.text+>;jmp - <.text+>;movl %edi, -(%ebp);cmpl $, -(%ebp);je  <.text+>": 1,
                "pushl %edi;calll - <.text+>;jmp  <.text+>;movl (%edi), %eax;pushl $": 1,
                "jne  <.text+>;movl %ebx, (%ebp);testb $, -(%ebp);jne  <.text+>;cmpb %bl, -(%ebp)": 1,
                "je  <.text+>;movb $, -(%ebp);cmpb %bl, -(%ebp);je  <.text+>;pushl $": 1,
                "cmpb %bl, -(%ebp);je  <.text+>;pushl $;jmp  <.text+>;cmpb $, -(%ebp)": 1,
                "pushl $;jmp  <.text+>;cmpb $, -(%ebp);jbe  <.text+>;pushl $": 1,
                "jbe  <.text+>;pushl $;jmp  <.text+>;testb $, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;cmpl %ebx, (%ebp);jne  <.text+>;pushl $;jmp  <.text+>": 1,
                "cmpl %ebx, -(%ebp);movl (%ebp), %edi;je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %esi, %ecx;pushl -(%ebp);pushl %edi;calll - <.text+>;testb %al, %al": 1,
                "pushl -(%ebp);pushl %edi;calll - <.text+>;testb %al, %al;jne  <.text+>": 2,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %ebx;xorl %eax, %eax;pushl %eax": 1,
                "cmpb %bl, -(%ebp);je  <.text+>;pushl $;movl %edi, %ecx;calll - <.text+>": 5,
                "pushl $;pushl %edi;calll - <.text+>;addl $, %esp;cmpl %ebx, -(%ebp)": 1,
                "calll - <.text+>;cmpb %bl, -(%ebp);je  <.text+>;pushl $;movl %edi, %ecx": 2,
                "je  <.text+>;leal (%ebp), %eax;pushl %eax;calll - <.text+>;testb %al, %al": 1,
                "pushl %eax;calll - <.text+>;testb %al, %al;jne  <.text+>;movl $, (%ebp)": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl $, (%ebp);cmpl $, (%ebp)": 1,
                "calll - <.text+>;pushl %edi;pushl -(%ebp);pushl $;pushl $": 1,
                "movl %eax, (%ebp);calll *(%edx);movl (%ebp), %ecx;imull %eax, %ecx;movl $, %eax": 1,
                "movl %ebx, -(%ebp);calll - <.text+>;testb %al, %al;je  <.text+>;movl %esi, %ecx": 1,
                "movl %eax, -(%ebp);je  <.text+>;pushl %ebx;pushl %ebx;pushl $": 1,
                "movl -(%ebp), %edi;xorl %eax, %eax;rep  stosw %ax, %es:(%edi);movl -(%ebp), %ecx;movl -(%ebp), %edi": 1,
                "movl %ebx, (%eax);movl %ebx, (%eax);calll - <.text+>;movl (%esi), %eax;movl (%eax), %ecx": 1,
                "pushl %ecx;movl (%ebp), %ecx;movl %esp, %eax;pushl %ecx;pushl %ecx": 1,
                "pushl %eax;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx": 1,
                "pushl %eax;calll - <.text+>;movl -(%ebp), %eax;subl %eax, -(%ebp);movl -(%ebp), %eax": 5,
                "calll - <.text+>;movl -(%ebp), %eax;subl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);pushl %eax;leal -(%ebp), %ecx;movl %edi, -(%ebp);calll - <.text+>": 1,
                "pushl %eax;leal -(%ebp), %ecx;movl %edi, -(%ebp);calll - <.text+>;movl (%eax), %ecx": 1,
                "movl %edi, -(%ebp);calll - <.text+>;movl (%eax), %ecx;movl (%eax), %edx;movl -(%ebp), %eax": 1,
                "pushl %ecx;movl %ecx, -(%ebp);pushl %edi;leal -(%ebp), %ecx;movl $, (%eax)": 1,
                "testb %al, %al;je  <.text+>;jmp - <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl (%ecx), %eax;calll *(%eax);pushl %eax;movl %esi, %ecx;calll - <.text+>": 1,
                "je  <.text+>;pushl %edi;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 4,
                "movl %esi, %ecx;pushl -(%ebp);pushl -(%ebp);pushl %eax;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);movl %ebx, -(%ebp);calll - <.text+>;cmpb $, -(%ebp);popl %ecx": 1,
                "movl -(%ebp), %eax;pushl (%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;subl %eax, -(%ebp);movl -(%ebp), %eax;sbbl %eax, -(%ebp);leal -(%ebp), %eax": 2,
                "movb -(%ebp), %al;negb %al;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "je  <.text+>;movb -(%ebp), %al;movb %al, %cl;negb %cl;pushl %edi": 1,
                "movb %al, %cl;negb %cl;pushl %edi;pushl (%ebp);leal -(%ebp), %edx": 1,
                "pushl -(%ebp);movl (%eax), %ecx;movl (%eax), %eax;pushl %edi;pushl %eax": 1,
                "movl (%eax), %edx;movl (%esi), %ecx;movl (%ebp), %edi;movl %edx, (%ecx);movl (%eax), %eax": 1,
                "movb $, -(%ebp);cmpb %bl, -(%ebp);je  <.text+>;movl $, -(%ebp);pushl -(%ebp)": 1,
                "andl -(%ebp), %eax;leal -(%ebp), %ecx;pushl %eax;calll - <.text+>;testb %al, %al": 2,
                "movl $, -(%ebp);pushl %ecx;pushl %ecx;movl %esp, %eax;pushl %ecx": 1,
                "movl $, (%eax);movl %ebx, (%eax);movl %esp, %eax;movl $, (%eax);movl %ebx, (%eax)": 1,
                "pushl $;jmp  <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>": 1,
                "sbbl %eax, %eax;andl $, %eax;addl $, %eax;pushl %eax;jmp  <.text+>": 1,
                "cmpl %ebx, (%ebp);je  <.text+>;cmpb $, -(%ebp);jb  <.text+>;pushl %edi": 1,
                "je  <.text+>;pushl $;movl %edi, %ecx;calll - <.text+>;movl $, -(%ebp)": 1,
                "pushl -(%ebp);movl (%esi), %eax;movl (%eax), %edx;movl (%eax), %edi;negb %cl": 1,
                "movl (%eax), %edx;movl (%eax), %edi;negb %cl;movl %edx, -(%ebp);sbbl %ecx, %ecx": 1,
                "pushl $;movl (%ebp), %ecx;calll - <.text+>;cmpb %bl, (%esi);je  <.text+>": 1,
                "jmp  <.text+>;movl $, (%eax);pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp)": 2,
                "movl (%eax), %eax;pushl %ecx;pushl %ecx;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "addl $, %esp;negb %cl;leal -(%ebp), %eax;pushl %eax;sbbl %ecx, %ecx": 1,
                "calll - <.text+>;movl (%eax), %ecx;pushl (%ebp);subl -(%ebp), %esi;pushl (%eax)": 1,
                "pushl %ecx;sbbl -(%ebp), %eax;movl %esp, %ecx;pushl %eax;cmpl $, %eax": 1,
                "movl $, (%eax);movl %ebx, (%eax);pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp)": 1,
                "pushl %eax;cmpl $, %eax;pushl %edx;leal -(%ebp), %eax;movl %ebx, (%ecx)": 1,
                "addl $, %esp;pushl (%ebp);pushl %edi;pushl $;pushl %esi": 1,
                "movl %eax, -(%ebp);pushl $;movl %esi, %ecx;calll - <.text+>;pushl $": 1,
                "movb %bl, (%esi);je  <.text+>;pushl %ebx;calll - <.text+>;leal -(%ebp), %ecx": 1,
                "je  <.text+>;pushl %ebx;calll - <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl %esi, %ecx;movb $, (%ebp);calll - <.text+>;movl $, %eax;testw %ax, -(%ebp)": 1,
                "testb %al, %al;je  <.text+>;pushl (%ebp);movl (%ebp), %edi;movl (%edi), %eax": 1,
                "movl (%edi), %eax;pushl %ebx;pushl (%ebp);leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl -(%ebp);movl %esi, %ecx;pushl %eax;pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %eax;pushl (%ebp)": 1,
                "pushl (%ebp);pushl %eax;pushl (%ebp);pushl %edi;calll - <.text+>": 1,
                "movl %eax, -(%ebp);movl %esp, %eax;andl $, (%eax);movl %ecx, (%eax);movl (%ebp), %ecx": 1,
                "movl %ecx, (%eax);movl (%ebp), %ecx;calll - <.text+>;movl (%esi), %eax;movl %esi, %ecx": 1,
                "pushl (%ebp);movl %edi, %ecx;calll - <.text+>;testb %al, %al;movl (%esi), %eax": 1,
                "jmp  <.text+>;movb -(%ebp), %bl;calll *(%eax);jmp  <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %ecx;pushl %ecx;movl (%ebp), %ecx;movzbl (%ecx), %ecx": 1,
                "movl %eax, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;orb -(%ebp), %bl": 1,
                "je  <.text+>;movl (%ecx), %eax;pushl %edi;calll *(%eax);andl $, (%ebx)": 1,
                "cmpb $-, -(%ecx,%esi);jb  <.text+>;orl $-, (%edi);orl $-, (%edi);jmp  <.text+>": 1,
                "cmpb $-, (%ecx,%eax);jne  <.text+>;decl %ecx;jns - <.text+>;testl %ecx, %ecx": 1,
                "cmpb $-, (%ecx,%eax);jae  <.text+>;jmp  <.text+>;cmpb $, (%ecx,%eax);jne  <.text+>": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;xorl %eax, %eax;shrl $, %ecx;testl %edx, %edx": 1,
                "movl %eax, %esi;shrl $, %esi;shll $, %eax;orl %eax, %esi;addl (%edx), %esi": 1,
                "rep  stosb %al, %es:(%edi);popl %edi;popl %ebp;retl $;int": 2,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;addl %eax, %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;shrl %edi;pushl %edi;pushl (%ebp)": 1,
                "pushl %eax;shrl %edi;pushl %edi;pushl (%ebp);movb $, -(%ebp)": 1,
                "pushl (%ebp);pushl %esi;pushl %ebx;pushl %edi;pushl (%ebp)": 1,
                "pushl %esi;pushl %ebx;pushl %edi;pushl (%ebp);pushl (%ebp)": 1,
                "jmp  <.text+>;movzwl (%esi), %eax;movl (%ebp), %ecx;shll $, %eax;movl %ecx, (%eax,%ebx)": 1,
                "addl (%ebp), %eax;pushl %edi;adcl (%ebp), %ecx;addl $, %eax;adcl $, %ecx": 1,
                "je  <.text+>;movb $, -(%ebp);jmp  <.text+>;movb $, -(%ebp);jmp  <.text+>": 1,
                "movl %edi, %eax;addl (%ebp), %eax;adcl (%ebp), %ecx;shll $, %edx;movl %eax, (%edx,%ebx)": 1,
                "movl %ecx, (%edx,%ebx);movzwl (%esi), %eax;shll $, %eax;movl %edi, (%eax,%ebx);incw (%esi)": 1,
                "pushl %ebx;pushl %esi;xorl %esi, %esi;pushl %edi;leal -(%ebp), %ecx": 1,
                "xorl %esi, %esi;pushl %edi;leal -(%ebp), %ecx;movl %esi, -(%ebp);calll - <.text+>": 1,
                "movl %esi, -(%ebp);movl (%ebp), %esi;pushl %edi;pushl %esi;movl %ebx, (%eax)": 1,
                "movl %ebx, (%eax);calll - <.text+>;testb %al, %al;je  <.text+>;pushl -(%ebp)": 1,
                "testb %al, %al;je  <.text+>;leal -(%ebp), %eax;jmp  <.text+>;movl %edi, -(%ebp)": 1,
                "pushl %eax;pushl %edi;pushl -(%ebp);movl %edi, -(%ebp);pushl -(%ebp)": 1,
                "pushl (%ebp);calll - <.text+>;testb %al, %al;jne  <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);calll - <.text+>;movzwl -(%ebp), %ecx;movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "calll - <.text+>;movzwl -(%ebp), %ecx;movl -(%ebp), %eax;movl -(%ebp), %edx;shrl %eax": 1,
                "movl -(%ebp), %edx;shrl %eax;subl %ecx, %edx;cmpl %eax, %edx;movb $, -(%ebp)": 1,
                "shll $, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "cmpl $, -(%ebp);rep  movsb (%esi), %es:(%edi);je  <.text+>;pushl -(%ebp);calll - <.text+>": 1,
                "je  <.text+>;pushl -(%ebp);calll - <.text+>;movl (%ebp), %eax;movl -(%ebp), %edi": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movb $, -(%ebp);addl $, -(%ebp)": 1,
                "movb $, -(%ebp);addl $, -(%ebp);pushl %ecx;pushl %ecx;adcl %esi, -(%ebp)": 1,
                "subl %edi, -(%ebp);movl %esp, %eax;movl %ebx, (%eax);sbbl %esi, -(%ebp);pushl -(%ebp)": 1,
                "movl %esp, %eax;movl %ebx, (%eax);sbbl %esi, -(%ebp);pushl -(%ebp);movl %esi, (%eax)": 1,
                "movl %esi, -(%ebp);jmp - <.text+>;cmpb $, -(%ebp);jne  <.text+>;cmpb $, -(%ebp)": 1,
                "jne  <.text+>;xorb %al, %al;jmp  <.text+>;movb $, %al;testb %al, %al": 1,
                "movb $, %al;testb %al, %al;movl (%ebp), %ecx;movb %al, (%ecx);je  <.text+>": 1,
                "testb %al, %al;je  <.text+>;cmpb $, -(%ebp);je  <.text+>;movl -(%ebp), %edi": 1,
                "leal -(%ebp), %edx;pushl %edx;movl %eax, -(%ebp);movl %ecx, -(%ebp);addl $, %edi": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);addl $, %edi;addl %ebx, %eax;pushl %esi": 1,
                "je  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "pushl %esi;pushl -(%ebp);pushl -(%ebp);pushl (%ebp);calll *(%eax)": 1,
                "calll *(%eax);testb %al, %al;je  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>": 1,
                "ja - <.text+>;addl $, -(%ebp);jmp  <.text+>;pushl $;jmp  <.text+>": 1,
                "movl (%ebp), %ecx;calll - <.text+>;jmp  <.text+>;movb $, -(%ebp);cmpb $, -(%ebp)": 1,
                "movb $, -(%ebp);cmpb $, -(%ebp);je  <.text+>;movl (%ebp), %ecx;cmpb $, (%ecx)": 1,
                "movl (%ebp), %ecx;cmpb $, (%ecx);je  <.text+>;pushl (%ebp);movl (%ebp), %esi": 1,
                "pushl (%ebp);movl (%ebp), %esi;movl (%ecx), %eax;pushl %esi;calll *(%eax)": 1,
                "je  <.text+>;movl -(%ebp), %eax;testb $, (%eax);je  <.text+>;leal -(%ebp), %ecx": 2,
                "cmpb $, (%esi);je  <.text+>;movl (%esi), %eax;jmp  <.text+>;pushl -(%ebp)": 1,
                "movl -(%ebp), %ecx;shrl %ecx;pushl %ecx;pushl %eax;pushl %ebx": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;movl $, %ebx;jne  <.text+>": 1,
                "movl $, -(%ebp);movb $, -(%ebp);je  <.text+>;movl (%esi), %ecx;jmp  <.text+>": 2,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 2,
                "pushl %ecx;pushl %eax;movl %edi, %ecx;calll - <.text+>;movzbl %al, %eax": 1,
                "calll - <.text+>;movzbl %al, %eax;pushl %eax;pushl (%edi);xorl %edi, %edi": 1,
                "pushl %eax;pushl (%edi);xorl %edi, %edi;pushl %edi;leal -(%ebp), %ecx": 1,
                "jmp  <.text+>;xorl %eax, %eax;pushl (%ebp);movl -(%ebp), %ecx;pushl (%ebp)": 1,
                "pushl %eax;calll - <.text+>;movl (%esi), %edx;movzbl %al, %eax;movl %esi, %ecx": 1,
                "imull %eax, %ecx;pushl %ecx;pushl %edi;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "je  <.text+>;cmpl %esi, (%ebp);movl $, -(%ebp);movb $, -(%ebp);jne  <.text+>": 1,
                "pushl $;pushl (%ebp);calll - <.text+>;addl $, %esp;cmpl %esi, -(%ebp)": 1,
                "addl $, %esp;movb $, -(%ebp);xorl %ebx, %ebx;movl %esi, -(%ebp);jmp  <.text+>": 1,
                "movb $, -(%ebp);xorl %ebx, %ebx;movl %esi, -(%ebp);jmp  <.text+>;addl $, %ebx": 1,
                "xorl %ebx, %ebx;movl %esi, -(%ebp);jmp  <.text+>;addl $, %ebx;adcl $-, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl %esi, -(%ebp)": 1,
                "movb $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);leal -(%ebp), %eax;jmp  <.text+>;leal -(%ebp), %eax": 1,
                "pushl %ecx;pushl %ecx;movl %esp, %eax;pushl -(%ebp);xorl %ebx, %ebx": 1,
                "movl %esp, %eax;pushl -(%ebp);xorl %ebx, %ebx;pushl -(%ebp);movl $, (%eax)": 1,
                "jbe  <.text+>;testl %edi, %edi;movb $, -(%ebp);je  <.text+>;cmpl $, (%edi)": 1,
                "movb $, -(%ebp);je  <.text+>;cmpl $, (%edi);je  <.text+>;movl (%edi), %edx": 1,
                "cmpl %ecx, %esi;je  <.text+>;cmpb $, -(%ebp);jne  <.text+>;xorl %eax, %eax": 1,
                "cmpl %eax, (%esi);jne  <.text+>;cmpl %eax, (%esi);jne  <.text+>;cmpb $, -(%ebp)": 1,
                "movb $, -(%ebp);jne  <.text+>;cmpb $, -(%ebp);jne  <.text+>;movl %eax, %ecx": 1,
                "pushl %ebx;addl $-, %edi;pushl %edi;calll - <.text+>;testb %al, %al": 1,
                "subl -(%ebp), %eax;addl -(%ebp), %eax;adcl -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "movl %edi, (%esi);movb $, -(%ebp);movl (%esi), %edx;movl %esi, %edi;subl -(%ebp), %edi": 1,
                "movl %esi, %edi;subl -(%ebp), %edi;xorl %ecx, %ecx;movl %edi, %eax;addl -(%ebp), %eax": 1,
                "xorl %eax, %eax;pushl -(%ebp);addl -(%ebp), %edi;pushl %ebx;pushl (%esi)": 1,
                "testl %eax, %eax;je  <.text+>;cmpl %edi, %eax;jle  <.text+>;cmpl $, %eax": 2,
                "pushl %eax;pushl $;pushl $;jmp - <.text+>;pushl -(%ebp)": 1,
                "pushl (%ebp);calll - <.text+>;addl $, %esp;pushl %edi;pushl %esi": 1,
                "movl %ecx, (%eax);calll - <.text+>;testb %al, %al;jne  <.text+>;movl -(%ebp), %ecx": 1,
                "pushl $;pushl $;jmp  <.text+>;pushl $;pushl %eax": 1,
                "pushl $;jmp  <.text+>;pushl $;pushl %eax;movl %esi, %eax": 1,
                "movb $, -(%ebp);jmp  <.text+>;xorl %ecx, %ecx;movl %ecx, -(%ebp);movl %ebx, %eax": 1,
                "movl %esi, %ebx;subl %eax, %ebx;leal (%eax), %edi;jmp - <.text+>;xorl %ebx, %ebx": 1,
                "jmp  <.text+>;testl %edi, %edi;je  <.text+>;pushl %ecx;pushl %ecx": 1,
                "xorl %esi, %esi;pushl %ebx;orl %esi, %eax;orl %edx, %ecx;pushl %eax": 1,
                "jmp  <.text+>;xorl %ecx, %ecx;cmpl %ecx, %edi;movl %ecx, -(%ebp);je  <.text+>": 1,
                "movl %ecx, -(%ebp);movl %eax, -(%ebp);movb $, -(%ebp);jmp  <.text+>;movl -(%ebp), %eax": 1,
                "pushl %edi;pushl -(%ebp);leal -(%ebp), %ecx;pushl -(%ebp);pushl -(%ebp)": 1,
                "movl %eax, -(%ebp);xorl %esi, %esi;movl $, %edi;jmp - <.text+>;pushl $": 1,
                "movb $, -(%ebp);movl $, -(%ebp);je  <.text+>;cmpb $, (%ebx);je  <.text+>": 1,
                "cmpb $, -(%ebp);je  <.text+>;cmpb $, (%ebx);je  <.text+>;movl (%ebx), %eax": 1,
                "movl -(%ebp), %eax;pushl -(%ebp);movl -(%ebp), %ecx;pushl %eax;pushl $": 1,
                "calll - <.text+>;testb %al, %al;jne - <.text+>;jmp - <.text+>;pushl $": 1,
                "jne - <.text+>;jmp - <.text+>;pushl $;movl (%ebp), %ecx;calll - <.text+>": 1,
                "pushl $;movl (%ebp), %ecx;calll - <.text+>;jmp - <.text+>;xorl %eax, %eax": 1,
                "calll - <.text+>;pushl (%ebp);movl (%ebp), %edi;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl (%ebp);leal -(%ebp), %ecx;pushl %ecx;movl -(%ebp), %ecx": 1,
                "pushl %ecx;movl -(%ebp), %ecx;pushl %edi;pushl (%ebp);pushl %esi": 1,
                "testb %al, %al;jne  <.text+>;cmpb %al, -(%ebp);je  <.text+>;movl (%ebp), %ecx": 1,
                "jmp  <.text+>;movl (%ebp), %eax;cmpb $, (%eax);movb $, -(%ebp);jne  <.text+>": 1,
                "pushl (%ebp);calll - <.text+>;addl $, %esp;cmpl %edi, (%ebp);je - <.text+>": 1,
                "addl $, %esp;cmpl %edi, (%ebp);je - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jne - <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl %eax;pushl $": 1,
                "movl %ecx, -(%ebp);calll - <.text+>;addl $, %esp;cmpl %edi, -(%ebp);jmp  <.text+>": 1,
                "addl %ecx, (%esi);adcl %eax, (%esi);jmp  <.text+>;movl (%ebp), %esi;movl -(%ebp), %eax": 1,
                "movl %esp, %eax;andl $, (%eax);pushl %ecx;movl %ebx, (%eax);pushl %ecx": 1,
                "cmpb %al, -(%ebp);jne  <.text+>;testl %edi, %edi;jne  <.text+>;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);je - <.text+>;movl (%ebp), %eax;cmpb %bl, (%eax);jne  <.text+>": 1,
                "je - <.text+>;movl (%ebp), %eax;cmpb %bl, (%eax);jne  <.text+>;cmpb %bl, -(%ebp)": 1,
                "jne  <.text+>;cmpb %bl, -(%ebp);jne  <.text+>;pushl %edi;pushl -(%ebp)": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "testb %al, %al;je  <.text+>;movl (%ebx), %eax;subl $, %eax;pushl %eax": 1,
                "addl %eax, %ebx;jmp - <.text+>;cmpb $, -(%ebp);je  <.text+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);je  <.text+>;movl (%ebp), %eax;cmpb $, (%eax);je  <.text+>": 3,
                "pushl %ecx;sbbl %eax, -(%ebp);pushl %ecx;movl %esp, %eax;pushl -(%ebp)": 1,
                "adcl $-, -(%ebp);jmp  <.text+>;xorl %esi, %esi;movl %edi, -(%ebp);movl -(%ebp), %edi": 1,
                "pushl $;movl (%ebp), %ecx;calll - <.text+>;jmp - <.text+>;cmpb $, -(%ebp)": 1,
                "cmpb $, -(%ebp);jne  <.text+>;cmpl %ebx, (%ebp);movb $, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;movb $, -(%ebp);cmpb $, -(%ebp);je  <.text+>;movl (%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);movb $, (%ebp);movl %ebx, -(%ebp);calll - <.text+>": 1,
                "subl %ebx, %esi;sbbl -(%ebp), %edi;pushl %edi;pushl %esi;pushl -(%ebp)": 1,
                "je  <.text+>;cmpl -(%ebp), %esi;je  <.text+>;movl (%ebp), %ecx;pushl $": 1,
                "jne - <.text+>;cmpb %al, (%ebp);je  <.text+>;cmpb %al, -(%ebp);jne  <.text+>": 1,
                "pushl -(%ebp);calll - <.text+>;movl (%ebp), %edi;pushl $;pushl $": 1,
                "pushl %esi;pushl $;popl %ebx;pushl %ebx;pushl $": 1,
                "movzwl (%edx), %eax;movzwl (%ecx), %ebx;decl %esi;subl %ebx, %eax;incl %ecx": 1,
                "pushl $;calll - <.text+>;xorl %eax, %eax;movl %eax, -(%ebp);movl (%ebp), %esi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %esi;movl (%ebp), %ecx;cmpl (%ecx), %esi;jb  <.text+>": 1,
                "xorl %ecx, %ecx;movl (%ebp), %eax;cmpl $-, (%eax);setne %cl;decl %ecx": 1,
                "cltd;subl %edx, %eax;sarl %eax;je  <.text+>;movl (%esi), %edi": 1,
                "pushl %edi;movl (%esi), %edi;subl %ebx, %eax;shll $, %eax;shll $, %edx": 1,
                "movl (%esi), %edi;subl %ebx, %eax;shll $, %eax;shll $, %edx;pushl %eax": 1,
                "movzbl , %eax;movl (,%eax,), %eax;retl;pushl $;calll - <.text+>": 1,
                "movl (%ebp), %esi;pushl %esi;calll - <.text+>;testb %al, %al;jne  <.text+>": 1,
                "movb %al, -(%ebp);jmp  <.text+>;movl (%ebp), %ecx;testl %ecx, %ecx;je  <.text+>": 1,
                "addl %edx, %eax;movl (%eax), %edx;movl (%eax), %edi;movl %edx, %ebx;andl %edi, %ebx": 1,
                "movl %eax, (%ecx);movl (%ebp), %eax;movl -(%ebp), %edi;testl %eax, %eax;je  <.text+>": 1,
                "movl %ecx, (%eax);movl (%ebp), %edx;testl %edx, %edx;je  <.text+>;movl %edi, %ecx": 1,
                "testl %edi, %edi;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl %edi, %eax": 1,
                "je  <.text+>;andl $, (%eax);movl (%ebp), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl %ecx, %eax;shrl $, %ecx;movl %edi, -(%ebp);rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);cmpl $, (%ebx);popl %edi;jne  <.text+>": 1,
                "jne  <.text+>;pushl (%ebx);calll - <.text+>;jmp  <.text+>;pushl (%ebx)": 1,
                "andl %edi, %ebx;movl %ebx, -(%ebp);testl %edx, %edx;jne  <.text+>;xorl %ecx, %ecx": 1,
                "xorl %ecx, %ecx;jmp  <.text+>;movl -(%ecx), %ecx;movl (%esi), %edx;addl %eax, %edx": 1,
                "subl $, %eax;sbbl %edi, %ecx;addl $, %eax;adcl %edi, %ecx;movl %eax, -(%ebp)": 1,
                "shll $, %ecx;movl -(%ecx,%eax), %eax;cmpl %ebx, %eax;jbe  <.text+>;leal -(%ebp), %eax": 1,
                "movl -(%ecx,%eax), %eax;cmpl %ebx, %eax;jbe  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "addl %ebx, %eax;movl %eax, -(%ebp);leal -(%eax), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %edi": 1,
                "xorl %eax, %eax;jmp  <.text+>;movl -(%edx), %eax;cmpl %ebx, %eax;ja  <.text+>": 1,
                "movl (%edx), %eax;decl %eax;movl %eax, -(%ebp);cmpl %eax, %ecx;ja  <.text+>": 1,
                "movl (%esi), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax,%edi);jmp  <.text+>;cmpl $, -(%ebp)": 1,
                "cmpl $-, %ecx;je - <.text+>;leal -(%eax), %ecx;testl %ecx, %ecx;jne  <.text+>": 1,
                "leal -(%eax), %ecx;testl %ecx, %ecx;jne  <.text+>;xorl %ebx, %ebx;jmp  <.text+>": 1,
                "jne  <.text+>;xorl %ebx, %ebx;jmp  <.text+>;leal -(%eax), %ecx;shll $, %ecx": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;testl %eax, %eax;jne  <.text+>;orl $-, %ecx": 1,
                "jmp  <.text+>;movl (%edx), %ebx;movl (%edx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "jne  <.text+>;cmpl %eax, -(%ebp);jne  <.text+>;movl -(%ebp), %eax;movl %eax, (%edx)": 1,
                "subl $, %eax;sbbl %edx, %ecx;movl -(%ebp), %edx;movl -(%ebp), %ebx;addl $, %eax": 1,
                "sbbl %edx, %ecx;movl -(%ebp), %edx;movl -(%ebp), %ebx;addl $, %eax;adcl $, %ecx": 1,
                "addl %eax, %edi;movl (%edi), %eax;movl %eax, -(%edi);pushl $;pushl %ebx": 1,
                "movl -(%ebp), %eax;movl %eax, (%edx);jmp  <.text+>;movb $, -(%ebp);jmp  <.text+>": 1,
                "movl %ecx, %eax;jmp  <.text+>;leal -(%edi), %ecx;testl %ecx, %ecx;jne  <.text+>": 1,
                "jmp  <.text+>;leal -(%edi), %ecx;testl %ecx, %ecx;jne  <.text+>;xorl %ebx, %ebx": 1,
                "testl %ecx, %ecx;jne  <.text+>;xorl %ebx, %ebx;jmp  <.text+>;leal -(%edi), %edx": 1,
                "je  <.text+>;testl %edi, %edi;jne  <.text+>;orl $-, %eax;jmp  <.text+>": 1,
                "movl %edx, (%ecx,%eax);movl -(%ebp), %ecx;addl %ebx, %ecx;movl (%esi), %edx;movl %ecx, (%edx,%eax)": 1,
                "movl -(%ebp), %ecx;addl %ebx, %ecx;movl (%esi), %edx;movl %ecx, (%edx,%eax);jmp  <.text+>": 1,
                "addl %ebx, %eax;movl (%esi), %ecx;movl %eax, (%edi,%ecx);movb $, -(%ebp);orl $-, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;pushl %edi;calll - <.text+>": 1,
                "movl -(%ebp), %ebx;testl %ebx, %ebx;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>": 1,
                "cmpl %esi, %eax;jne  <.text+>;movl (%edi), %eax;movl (%ebp), %edx;movl %ebx, %ecx": 1,
                "jae  <.text+>;testl %ebx, %ebx;jne  <.text+>;xorl %edx, %edx;jmp  <.text+>": 1,
                "jne  <.text+>;xorl %edx, %edx;jmp  <.text+>;movl -(%eax), %edx;subl %edx, %ecx": 1,
                "testl %ebx, %ebx;je  <.text+>;movl -(%eax), %ecx;movl -(%eax), %edx;movl %ecx, -(%ebp)": 1,
                "je  <.text+>;pushl $;jmp  <.text+>;testl %ebx, %ebx;je  <.text+>": 1,
                "testl %ebx, %ebx;je  <.text+>;movl -(%eax), %ecx;movl -(%eax), %edx;andl %edx, %ecx": 3,
                "orl $-, (%eax);orl $-, (%eax);jmp  <.text+>;testl %ebx, %ebx;je  <.text+>": 1,
                "orl $-, (%eax);jmp  <.text+>;testl %ebx, %ebx;je  <.text+>;movl -(%eax), %ecx": 1,
                "jne  <.text+>;testl %ebx, %ebx;jne  <.text+>;cmpl (%ebp), %ebx;jae - <.text+>": 1,
                "cmpl (%ebp), %ebx;jae - <.text+>;movl (%eax), %ecx;andl (%eax), %ecx;cmpl $-, %ecx": 1,
                "movl (%eax), %ecx;andl (%eax), %ecx;cmpl $-, %ecx;je - <.text+>;testl %ebx, %ebx": 1,
                "cmpl $-, %ecx;jne  <.text+>;cmpl (%ebp), %ebx;jae  <.text+>;movl (%eax), %ecx": 1,
                "movl (%edi), %eax;movl (%ebp), %ecx;movl %ecx, (%esi,%eax);movl (%edi), %eax;orl $-, (%eax,%esi)": 1,
                "andl $, (%ebp);movl %ecx, (%ebp);cmpl $, (%ebp);ja - <.text+>;jmp  <.text+>": 1,
                "ja - <.text+>;jmp  <.text+>;leal (%esi,%eax), %ecx;movl (%ecx), %eax;andl (%ecx), %eax": 1,
                "jmp  <.text+>;leal (%esi,%eax), %ecx;movl (%ecx), %eax;andl (%ecx), %eax;cmpl $-, %eax": 1,
                "movl %eax, (%esi,%edx);movl (%edi), %eax;leal (%eax,%esi), %eax;addl %ecx, (%eax);adcl $, (%eax)": 1,
                "addl %ecx, (%eax);adcl $, (%eax);popl %ebx;popl %edi;popl %esi": 1,
                "int;pushl $;pushl $;calll - <.text+>;xorl %esi, %esi": 1,
                "pushl %eax;pushl (%ebp);pushl %ebx;calll - <.text+>;movl (%ebx), %ecx": 1,
                "popl %edx;cmpl %edx, %ecx;jbe  <.text+>;addl %eax, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edx, %ecx;jbe  <.text+>;addl %eax, %eax;movl %eax, -(%ebp);cmpl %edx, %eax": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);cmpl %esi, %edi;je  <.text+>;movl (%ebx), %ecx": 1,
                "movzbl %dl, %eax;pushl %esi;leal (%eax,%eax), %esi;cmpl (%ebp), %esi;jbe  <.text+>": 1,
                "leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);adcl %ecx, %ecx;rep  movsw (%esi), %es:(%edi);movb %al, %bl": 1,
                "pushl %eax;calll - <.text+>;popl %ebx;popl %esi;movl -(%ebp), %ecx": 1,
                "cmpl (%ecx), %eax;sete %al;popl %ebp;retl $;int": 1,
                "pushl %eax;pushl $;pushl $;pushl %edi;movl %eax, (%ecx)": 1,
                "pushl %edx;pushl %ecx;xorl %eax, %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "cmpw %ax, -(%ebp);je  <.text+>;movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "andl $, (%eax);pushl %edx;movl %ecx, -(%ebp);pushl %ecx;movl (%ebp), %ecx": 2,
                "movl %eax, -(%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax;movzwl (%esi), %eax": 2,
                "calll *(%eax);pushl -(%ebp);movzwl (%esi), %eax;pushl -(%ebp);pushl %eax": 2,
                "cmpl $, %ecx;jbe  <.text+>;cmpw $, %ax;jbe  <.text+>;movl $, %eax": 5,
                "pushl -(%ebp);andl $, (%eax);pushl %ecx;leal (%esi), %ecx;movl $, (%eax)": 1,
                "pushl -(%ebp);pushl (%ebx);pushl (%ebx);calll - <.text+>;testb %al, %al": 2,
                "pushl -(%ebp);pushl %ecx;movl -(%ebp), %ecx;pushl (%ecx);pushl (%ecx)": 3,
                "jne  <.text+>;cmpb $, (%ebp);jne  <.text+>;movl -(%ebp), %ecx;calll - <.text+>": 1,
                "movzwl %ax, %eax;jmp  <.text+>;movl -(%ebp), %ecx;pushl %esi;leal -(%ebp), %eax": 1,
                "calll - <.text+>;movb $, (%ebp);cmpb $, (%ebp);jne  <.text+>;cmpb $, (%ebp)": 1,
                "pushl (%edi);calll - <.text+>;testb %al, %al;je  <.text+>;movb $, (%ebp)": 10,
                "movl (%ebp), %eax;movb $, (%eax);cmpl $, (%ebp);movl -(%ebp), %eax;pushl $": 3,
                "movb $, (%eax);movl $, -(%ebp);je  <.text+>;cmpb $, -(%ebp);jne  <.text+>": 1,
                "pushl %edi;calll - <.text+>;addl $, %esp;jmp  <.text+>;movl (%ebx), %ecx": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;pushl (%ecx);pushl %eax;pushl $": 4,
                "movl (%esi), %eax;leal (%eax,%edi,), %eax;decw (%eax);movl (%ebp), %eax;addl $, (%eax)": 2,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %edi;cmpw $, -(%ebp)": 1,
                "addl $, %ecx;movl %edx, -(%ebp);movl $, (%eax);calll - <.text+>;testb %al, %al": 1,
                "je  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;pushl (%ebp);leal -(%ebp), %ecx": 1,
                "testb %al, %al;je  <.text+>;movl -(%ebp), %eax;testb $, (%eax);jne  <.text+>": 1,
                "cmpw $, %ax;ja  <.text+>;movzwl %ax, %ecx;cmpl $, %ecx;jbe - <.text+>": 2,
                "addl $, %ecx;movl $, (%eax);calll - <.text+>;cmpb $, (%ebp);jne  <.text+>": 1,
                "cmpb $, -(%ebp);jne  <.text+>;movl (%ebx), %ecx;movl (%ebp), %esi;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl (%esi)": 1,
                "xorb %bl, %bl;jmp  <.text+>;movl (%ebp), %esi;movl -(%ebp), %edi;pushl %ecx": 1,
                "movl (%esi), %eax;leal (%eax,%edi,), %eax;decw (%eax);cmpb $, (%ebp);jne  <.text+>": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %edi;movl (%ebp), %ecx": 1,
                "movl (%ebp), %edi;movl %eax, -(%ebp);movl (%ebp), %eax;movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "cmpb $, -(%ebp);je  <.text+>;pushl -(%ebp);movl -(%ebp), %eax;pushl -(%ebp)": 1,
                "movl %edx, -(%ebp);calll - <.text+>;addl $, %esp;cmpl $, (%ebp);je  <.text+>": 4,
                "leal (%eax), %ecx;movzwl (%ecx), %eax;movl %ecx, -(%ebp);addl $, %ecx;movl (%ecx), %ecx": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl %ebx, %ecx;jmp  <.text+>": 2,
                "testb %al, %al;je  <.text+>;movl %ebx, %ecx;jmp  <.text+>;pushl -(%ebp)": 1,
                "pushl (%ebx);pushl (%ebx);pushl $;pushl -(%ebp);jmp  <.text+>": 1,
                "jmp  <.text+>;leal -(%ebp), %ecx;xorl %esi, %esi;pushl %esi;pushl $": 1,
                "addl $, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %eax": 1,
                "je  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %esi;movl %esi, %ecx;movb $, (%eax)": 1,
                "calll - <.text+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%ebx), %ecx;movl (%ebx), %edx": 1,
                "je  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movb $, (%eax);calll - <.text+>": 1,
                "pushl -(%ebp);movl $, -(%ebp);calll - <.text+>;movl -(%ebp), %esi;movl (%esi), %eax": 1,
                "leal -(%ebp), %edi;pushl %edi;pushl %ebx;shrl %eax;pushl %eax": 1,
                "pushl %edx;pushl %ecx;movl -(%ebp), %ecx;calll - <.text+>;movzbl %al, %eax": 1,
                "movzbl %al, %eax;pushl %eax;pushl %esi;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl (%eax), %ecx;movl (%eax), %edi;pushl %ecx;movl %ecx, -(%ebp);pushl %edi": 1,
                "jne  <.text+>;movl -(%ebp), %edx;pushl $;xorl %eax, %eax;popl %ecx": 1,
                "pushl $;xorl %eax, %eax;popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "pushl %esi;calll - <.text+>;addl $, %esp;pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %edi;addl $, %esp;cmpb $, (%edi);je  <.text+>;movl (%edi), %eax": 1,
                "pushl %ecx;movl %esp, %eax;andl $, (%eax);andl $, (%eax);leal -(%ebp), %ecx": 1,
                "pushl $;movl -(%ebp), %ecx;calll - <.text+>;pushl -(%ebp);calll - <.text+>": 1,
                "pushl %ebx;leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;jne - <.text+>": 1,
                "movl (%ebp), %eax;xorl %edi, %edi;addl $, %eax;movl (%eax), %ecx;pushl %edi": 1,
                "testb %al, %al;je  <.text+>;xorl %esi, %esi;xorl %ebx, %ebx;jmp  <.text+>": 1,
                "addl $, %ecx;movl $, (%eax);movl %edi, (%eax);calll - <.text+>;testb %al, %al": 1,
                "pushl %ecx;movl %esp, %eax;pushl %ebx;pushl %esi;leal -(%ebp), %ecx": 1,
                "pushl %eax;calll - <.text+>;cmpl %edi, %eax;movl (%ebp), %esi;movl %eax, -(%ebp)": 1,
                "pushl (%esi);pushl (%esi);pushl $;pushl -(%ebp);jmp  <.text+>": 1,
                "movb $, -(%ebp);andl $, (%eax);pushl %ebx;leal -(%ebp), %ecx;movl $, (%eax)": 1,
                "addl $, %esp;jmp  <.text+>;movl (%ebp), %eax;pushl %edi;pushl %ebx": 1,
                "jmp  <.text+>;movl (%ebp), %eax;pushl %edi;pushl %ebx;movb $, (%eax)": 1,
                "cmpb %al, -(%ebp);je  <.text+>;cmpl %eax, (%ebp);je  <.text+>;movl (%ebp), %edi": 1,
                "je  <.text+>;cmpl %eax, (%ebp);je  <.text+>;movl (%ebp), %edi;pushl %esi": 1,
                "movl (%esi), %eax;movl (%esi), %edx;je  <.text+>;movl (%ecx), %ecx;movl %ecx, (%ebp)": 1,
                "calll - <.text+>;movzbl %al, %eax;pushl %eax;pushl %ebx;leal -(%ebp), %ecx": 1,
                "movb $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);jmp  <.text+>;pushl %ecx": 1,
                "pushl -(%ebp);movl $, (%eax);movl %edi, (%eax);calll - <.text+>;testb %al, %al": 1,
                "popl %ecx;movl %ebx, %edi;rep  stosl %eax, %es:(%edi);xorl %edi, %edi;movw $, (%ebx)": 1,
                "pushl -(%ebp);movl %ecx, (%ebx);movl (%eax), %eax;pushl -(%ebp);movl %eax, (%ebx)": 1,
                "pushl $;pushl %ebx;leal -(%ebp), %ecx;movb $, (%eax);calll - <.text+>": 1,
                "pushl $;movl (%ebp), %ecx;calll - <.text+>;pushl %ebx;calll - <.text+>": 1,
                "cmpb $, -(%ebp);je - <.text+>;pushl %esi;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "jmp  <.text+>;movl (%ebp), %edi;pushl %edi;pushl %ecx;pushl %ecx": 1,
                "pushl %ecx;movl %esp, %eax;movl %ecx, (%eax);xorl %ebx, %ebx;leal -(%ebp), %ecx": 1,
                "calll - <.text+>;cmpb %bl, %al;je  <.text+>;movl -(%ebp), %eax;leal -(%ebp), %ecx": 1,
                "cmpl %ecx, (%eax);movl %eax, -(%ebp);jne  <.text+>;pushl %ebx;leal -(%ebp), %ecx": 1,
                "movl %esi, (%eax);movl %ebx, (%eax);calll - <.text+>;cmpb %bl, -(%ebp);jne  <.text+>": 1,
                "je  <.text+>;movl (%edi), %eax;testb $, (%eax);je  <.text+>;movl %edi, %ecx": 1,
                "movl %edi, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %ebx": 1,
                "pushl %eax;pushl -(%ebp);movl %esi, %ecx;pushl %edi;pushl $": 1,
                "movl (%edi), %ecx;pushl %eax;pushl (%esi);leal -(%ebp), %eax;pushl (%esi)": 1,
                "pushl (%esi);movl %ecx, -(%ebp);pushl %eax;pushl $;pushl $": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl -(%ebp);leal (%ebp), %eax;pushl $": 1,
                "movl (%edi), %ecx;pushl %eax;pushl %ecx;movl (%ebp), %ecx;movl %edx, -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);movl %esi, %ecx;pushl $;pushl $": 1,
                "incl -(%ebp);pushl -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 6,
                "cmpl %ebx, (%ebp);je  <.text+>;pushl (%ebp);leal (%ebp), %eax;pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl $;pushl %eax": 1,
                "cmpl %ebx, (%ebp);je  <.text+>;cmpb %bl, (%esi);je  <.text+>;movl (%esi), %eax": 1,
                "movl (%eax), %esi;pushl %ecx;pushl %ecx;movl %esp, %eax;andl $, (%eax)": 1,
                "movl (%ebp), %esi;cmpl $, %esi;movl (%ebp), %edi;leal (%edi,%esi), %ecx;movl %eax, -(%ebp)": 1,
                "addl $, %esp;jmp  <.text+>;movl (%edi), %eax;cmpl $, %eax;jae  <.text+>": 1,
                "jmp  <.text+>;movl (%edi), %eax;cmpl $, %eax;jae  <.text+>;pushl (%ebp)": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%edi), %eax;cmpl %esi, %eax": 1,
                "testb %al, %al;jne  <.text+>;movl (%edi), %eax;cmpl %esi, %eax;je  <.text+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl %esi;pushl %eax;pushl (%ebp)": 3,
                "movzwl (%ebx), %eax;leal -(%eax,%ebx), %esi;pushl (%esi);leal -(%ebp), %eax;pushl (%esi)": 2,
                "pushl (%ebp);pushl (%ebp);pushl (%esi);pushl (%esi);pushl (%ebp)": 2,
                "testb %al, %al;je  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%esi)": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl (%ebp), %eax;cmpb $, (%eax)": 1,
                "pushl (%edi);movl (%esi), %eax;pushl %eax;pushl %ecx;pushl %edi": 1,
                "je  <.text+>;cmpb $, (%edi);jne  <.text+>;cmpb $, (%edi);jne  <.text+>": 1,
                "movl (%edi), %ecx;pushl (%ebp);movl (%edi), %eax;pushl %ecx;pushl %eax": 1,
                "pushl (%ebp);movzwl -(%ebp), %ecx;pushl (%ebp);movl (%edi), %esi;movl (%edi), %eax": 1,
                "pushl (%ebp);pushl $;pushl $;jmp - <.text+>;pushl %ecx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);leal (%edi), %eax": 1,
                "testb %al, %al;je  <.text+>;cmpb $, -(%ebp);jne  <.text+>;cmpb $, -(%ebp)": 1,
                "addl $, %esp;cmpb $, -(%ebp);movb $, (%eax);je  <.text+>;movl (%ebp), %eax": 1,
                "movzwl (%ebx), %eax;orl $-, -(%eax,%ebx);orl $-, -(%eax,%ebx);pushl (%ebp);pushl %edi": 1,
                "calll - <.text+>;movl %esi, %ecx;calll - <.text+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "jg  <.text+>;pushl %ecx;pushl %ecx;movl %esp, %eax;orl $-, (%eax)": 2,
                "calll - <.text+>;testb %al, %al;movl %ebx, %eax;jne  <.text+>;movl -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);calll - <.text+>;testl %eax, %eax;jl  <.text+>": 1,
                "pushl %ebx;pushl (%ebp);calll - <.text+>;testl %eax, %eax;jl  <.text+>": 1,
                "pushl (%eax);pushl (%ebp);pushl %ebx;pushl -(%ebp);calll - <.text+>": 1,
                "calll - <.text+>;jmp  <.text+>;pushl -(%ebp);calll - <.text+>;pushl (%ebp)": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);xorl %eax, %eax;movw (%ebx), %ax;xorl %edx, %edx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl -(%ebp)": 1,
                "je  <.text+>;pushl %esi;calll - <.text+>;cmpl $, (%ebp);je - <.text+>": 1,
                "calll - <.text+>;cmpl $, (%ebp);je - <.text+>;pushl (%ebp);jmp - <.text+>": 1,
                "calll - <.text+>;movl %eax, %edi;testl %edi, %edi;je  <.text+>;movl (%ebp), %ebx": 1,
                "pushl $;pushl $;pushl %esi;movl %eax, (%ecx);calll - <.text+>": 1,
                "pushl $;pushl %esi;movl %eax, (%ecx);calll - <.text+>;addl $, %esp": 1,
                "calll - <.text+>;addl $, %esp;testb %al, %al;je  <.text+>;movzwl (%edi), %eax": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;xorl %ecx, %ecx;orl %eax, %ecx;movl -(%ebp), %eax": 1,
                "movl (%edi), %eax;xorl %ecx, %ecx;orl %eax, %ecx;movl -(%ebp), %eax;xorl %edx, %edx": 1,
                "pushl %esi;calll - <.text+>;addl $, %esp;jmp  <.text+>;movl %esi, %ecx": 1,
                "je  <.text+>;movl (%ebp), %esi;pushl %ecx;pushl %ecx;movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax;movzwl (%edi), %eax": 1,
                "movl $, %eax;cmpw %ax, %di;ja  <.text+>;movzwl %di, %eax;jmp  <.text+>": 2,
                "cmpw %ax, %di;ja  <.text+>;movzwl %di, %eax;jmp  <.text+>;pushl $": 2,
                "movl -(%ebp), %ecx;movl -(%ebp), %eax;movl %ecx, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "calll - <.text+>;jmp - <.text+>;cmpb $, -(%ebp);je  <.text+>;cmpb $, (%ebp)": 1,
                "movb %cl, -(%ebp);calll - <.text+>;testb %al, %al;je  <.text+>;movb -(%ebp), %al": 1,
                "jne  <.text+>;movb -(%ebp), %cl;cmpb (%eax), %cl;je  <.text+>;pushl %ecx": 1,
                "testb %al, %al;je  <.text+>;pushl -(%ebp);movl -(%ebp), %esi;pushl -(%ebp)": 1,
                "movl -(%ebp), %esi;pushl -(%ebp);pushl (%esi);pushl (%esi);calll - <.text+>": 1,
                "cmpb %al, (%esi);je  <.text+>;movb $, (%ebp);cmpb $, (%ebp);jne  <.text+>": 1,
                "pushl %ecx;movl %esp, %eax;xorl %ecx, %ecx;movl $, (%eax);movl %ecx, (%eax)": 1,
                "xorl %ecx, %ecx;movl $, (%eax);movl %ecx, (%eax);cmpb %cl, (%ebx);je  <.text+>": 1,
                "cmpl %ebx, (%ebp);je  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %eax": 1,
                "movl (%eax), %esi;pushl %ecx;pushl %ecx;movl %esp, %eax;xorl %ecx, %ecx": 1,
                "leal -(%ebp), %ecx;movb %bl, -(%ebp);movl %ebx, -(%ebp);calll - <.text+>;testb %al, %al": 1,
                "testb %al, %al;je  <.text+>;cmpl %ebx, (%ebp);movl %ebx, -(%ebp);je  <.text+>": 1,
                "pushl $;calll - <.text+>;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl %eax;pushl %esi;calll - <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;jmp  <.text+>;movl -(%ebp), %ecx;pushl $": 1,
                "pushl %esi;movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;leal -(%ebp), %ecx": 1,
                "pushl (%ebp);pushl -(%ebp);pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpb $, -(%ebp);jne - <.text+>;movl -(%ebp), %edi;addl $, (%edi);pushl $": 1,
                "movl $, (%eax);movl %esi, (%eax);calll - <.text+>;pushl -(%ebp);xorl %ebx, %ebx": 1,
                "calll - <.text+>;movl (%eax), %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "jae  <.text+>;cmpl %eax, -(%ebp);jae  <.text+>;pushl %ecx;pushl %ecx": 1,
                "pushl %esi;pushl %esi;pushl $;popl %esi;jmp  <.text+>": 1,
                "calll - <.text+>;testb %al, %al;jne - <.text+>;movl -(%ebp), %eax;andw $, (%eax)": 1,
                "divl %ecx;xorl %edx, %edx;popl %ecx;movw $, -(%ebp);movw $, -(%ebp)": 2,
                "divl %ecx;xorl %edx, %edx;movl %ebx, %ecx;divl %ecx;movl -(%ebp), %eax": 2,
                "addl %esi, %edx;movw %dx, -(%ebp);xorl %edx, %edx;divl %ecx;movl %ebx, %esi": 2,
                "pushl -(%ebp);calll - <.text+>;jmp - <.text+>;pushl $;movl -(%ebp), %ecx": 1,
                "movb $, (%esi);movl (%edi), %ebx;cmpl $, %ebx;movl (%edi), %eax;movb $, -(%ebp)": 1,
                "pushl (%ebp);pushl $;pushl %ebx;pushl %edi;pushl $": 1,
                "movl (%ebp), %ecx;leal -(%ebp), %eax;addl $, %ecx;pushl %eax;movl %ecx, -(%ebp)": 4,
                "pushl %eax;movl %ecx, -(%ebp);calll - <.text+>;testl %eax, %eax;jne  <.text+>": 2,
                "movl $, (%esi);calll - <.text+>;movb $, -(%ebp);addl $, %esp;andl $, -(%ebp)": 1,
                "jmp  <.text+>;pushl %ebx;pushl %edi;pushl -(%ebp);pushl $": 1,
                "pushl $;pushl $;jmp - <.text+>;movl (%ebp), %eax;pushl (%eax)": 1,
                "movb $, -(%ebp);movl -(%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %eax;calll *(%eax)": 1,
                "pushl %ecx;movl %esp, %eax;movl %ebx, (%eax);movl %ecx, (%eax);pushl (%edi)": 1,
                "pushl (%edi);pushl %eax;calll - <.text+>;pushl (%eax);pushl (%eax)": 2,
                "pushl %ecx;movl %esp, %eax;xorl %ecx, %ecx;movl %ecx, (%eax);movl %ebx, (%eax)": 1,
                "movl %ebx, (%eax);leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx;calll - <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;pushl (%eax);movl (%edi), %edx": 1,
                "testb %al, %al;je  <.text+>;pushl %ebx;calll - <.text+>;pushl %ebx": 1,
                "leal (%edi), %eax;pushl %eax;pushl (%ebp);pushl $;pushl $": 1,
                "je  <.text+>;pushl (%ebp);calll - <.text+>;testl %ebx, %ebx;je  <.text+>": 1,
                "je  <.text+>;pushl %ebx;calll - <.text+>;xorb %bl, %bl;pushl %esi": 1,
                "movb (%eax), %al;shrb %al;testb $, %al;jne  <.text+>;pushl $": 1,
                "addl $, %esp;movl (%ebp), %ecx;pushl $;calll - <.text+>;cmpb %bl, (%edi)": 1,
                "pushl $;calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %eax": 1,
                "je  <.text+>;movl (%ebp), %eax;addl $, (%eax);adcl %ebx, (%eax);cmpl %ebx, (%ebp)": 1,
                "testb %al, %al;je  <.text+>;movl (%ebp), %eax;xorl %esi, %esi;cmpl %ebx, (%eax)": 1,
                "je  <.text+>;movl (%ebp), %eax;xorl %esi, %esi;cmpl %ebx, (%eax);jbe  <.text+>": 1,
                "calll - <.text+>;cmpb %bl, %al;je  <.text+>;movl (%ebp), %eax;incl %esi": 1,
                "movl (%ebp), %eax;incl %esi;cmpl (%eax), %esi;jb - <.text+>;pushl %ecx": 1,
                "cmpl (%eax), %esi;jb - <.text+>;pushl %ecx;pushl %ecx;leal (%eax), %esi": 1,
                "pushl (%ebp);movl $, -(%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll - <.text+>;testb %al, %al": 1,
                "movl (%ebp), %ecx;movl %esp, %eax;movl %ecx, (%eax);movl %ebx, (%eax);leal -(%ebp), %eax": 1,
                "je  <.text+>;incl (%ebp);movl (%ebp), %eax;cmpl -(%ebp), %eax;jb - <.text+>": 1,
                "cmpl -(%ebp), %eax;jb - <.text+>;movl (%ebp), %esi;movl (%esi), %eax;movl %esi, %ecx": 1,
                "pushl (%ebp);pushl %edi;pushl (%esi);pushl (%esi);pushl %eax": 1,
                "movb $, %bl;jmp  <.text+>;pushl $;movl (%ebp), %ecx;calll - <.text+>": 1,
                "movl (%ebp), %ebx;pushl $;leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);calll - <.text+>;leal -(%ebp), %ecx;calll - <.text+>;orl $-, -(%ebp)": 1,
                "xorl %ecx, %ecx;incl %ecx;addl $, %esp;cmpw %cx, %ax;movl %ecx, (%ebp)": 1,
                "movl -(%ebp), %ecx;movl %esp, %eax;pushl %ebx;movl %ecx, (%eax);movl %ebx, (%eax)": 1,
                "movl (%esi), %eax;movl -(%ebp), %edi;pushl $;pushl %ecx;pushl %eax": 1,
                "movl (%ebp), %eax;cmpb %bl, (%eax);movl -(%ebp), %edi;leal -(,%edi,), %edi;movl %ebx, -(%ebp)": 1,
                "pushl %eax;calll - <.text+>;cmpw $, (%ebp);movl (%eax), %ecx;movl %eax, (%ebp)": 1,
                "pushl %ecx;pushl %ecx;movl %esp, %eax;movl $, %ecx;pushl %ecx": 4,
                "pushl %ecx;movl %esp, %eax;movl $, %ecx;pushl %ecx;movl %ecx, (%eax)": 4,
                "orl $-, -(%ebp);orl $-, -(%ebp);cmpw %bx, (%ebp);je  <.text+>;movzwl (%ebp), %eax": 1,
                "movl -(%ebp), %eax;pushl $;pushl $;pushl (%ebp);movl %edi, -(%ebp)": 1,
                "pushl %eax;movl %ebx, -(%ebp);calll - <.text+>;cmpl %ebx, (%esi);movl %eax, %edi": 1,
                "cmpl %ebx, (%esi);movl %eax, %edi;movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);movl $, (%ebp)": 1,
                "orl $-, -(%ebp);orl $-, -(%ebp);movl $, (%ebp);jmp  <.text+>;cmpw %bx, (%ebp)": 1,
                "jne  <.text+>;addl $, -(%ebp);adcl %ebx, -(%ebp);pushl %ecx;pushl %ecx": 1,
                "movl %ecx, (%eax);xorl %edi, %edi;leal (%esi), %ecx;movl %edi, (%eax);calll - <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;testb %al, %al;je - <.text+>;decl -(%ebp)": 4,
                "andl %ecx, %eax;pushl %eax;movb -(%ebp), %al;negb %al;leal -(%ebp), %ecx": 2,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <.text+>": 2,
                "movl (%ebp), %ecx;cmpb %bl, (%ecx);jne  <.text+>;cmpb %bl, -(%ebp);jne  <.text+>": 2,
                "movb $, %al;cmpb %bl, -(%ebp);movb %al, (%ecx);je  <.text+>;movl -(%ebp), %ecx": 2,
                "leal -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax;jne  <.text+>;movl -(%ebp), %eax": 2,
                "pushl %eax;calll - <.text+>;cmpb %bl, %al;jne  <.text+>;pushl %ecx": 2,
                "pushl %ecx;pushl -(%ebp);setne %al;pushl -(%ebp);movb $, (%ebp)": 2,
                "movl -(%ebp), %ecx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 2,
                "pushl -(%ebp);pushl -(%ebp);calll - <.text+>;movzbl %al, %eax;pushl %eax": 2,
                "cmpb %bl, %al;je  <.text+>;pushl (%esi);pushl (%esi);pushl %edi": 1,
                "ja  <.text+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%ebp), %edi;leal -(%ebp), %ecx": 1,
                "movl (%ebp), %edi;addl $, (%edi);adcl %ebx, (%edi);cmpb %bl, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;cmpb $, (%esi);jb  <.text+>;pushl %ecx;pushl %ecx": 2,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;movl (%ebp), %eax;cmpb %bl, (%eax)": 1,
                "pushl %ecx;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;cmpl $, %eax": 2,
                "leal -(%ebp), %ecx;calll - <.text+>;jmp  <.text+>;pushl (%esi);pushl (%esi)": 2,
                "pushl (%esi);leal (%esi), %ecx;pushl (%esi);calll - <.text+>;cmpb %bl, (%ebp)": 1,
                "pushl (%esi);calll - <.text+>;movl (%ebp), %edi;cmpb %bl, (%edi);movl (%edi), %eax": 1,
                "movl (%edi), %eax;je  <.text+>;movl (%edi), %ecx;jmp  <.text+>;xorl %ecx, %ecx": 3,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;jmp - <.text+>;movl (%ebp), %edi": 1,
                "testb %al, %al;je  <.text+>;cmpb %bl, -(%ebp);je  <.text+>;cmpl %ebx, (%ebp)": 4,
                "cmpb %bl, (%ebp);je  <.text+>;cmpl %ebx, (%ebp);movl (%ebp), %eax;movb $, (%eax)": 4,
                "movl -(%ebp), %eax;cmpl (%esi), %eax;jb - <.text+>;cmpb %bl, (%ebp);je  <.text+>": 1,
                "testb %al, %al;jne - <.text+>;jmp  <.text+>;movl (%esi), %eax;movzwl (%ebp), %ecx": 1,
                "shrl $, %ecx;movl %eax, %edx;shrl $, %edx;addl %edx, %ecx;leal (%ecx,%eax,), %eax": 1,
                "pushl %edx;pushl %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll - <.text+>;movl (%eax), %ecx;movl (%eax), %edx;subl %ecx, %edi": 1,
                "movl (%ebp), %edi;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);jbe  <.text+>": 1,
                "popl %eax;adcl %eax, -(%ebp);pushl %edi;pushl %ecx;pushl %ecx": 1,
                "testb %al, %al;je - <.text+>;incl -(%ebp);pushl -(%ebp);pushl $": 1,
                "leal -(%ebp), %ecx;pushl %ecx;movl (%ebp), %ecx;pushl %eax;calll - <.text+>": 1,
                "pushl %ecx;movl (%ebp), %ecx;pushl %eax;calll - <.text+>;movl -(%ebp), %eax": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;cmpb %bl, (%edi);je  <.text+>": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp);pushl (%ebp);pushl %ebx": 1,
                "pushl -(%ebp);movl (%edi), %eax;pushl -(%ebp);xorl %ecx, %ecx;movb , %cl": 1,
                "pushl $;pushl -(%ebp);pushl -(%ebp);calll - <.text+>;movl %eax, -(%ebp)": 1,
                "pushl %eax;calll - <.text+>;movl (%eax), %eax;cmpl -(%ebp), %eax;movl (%ebp), %edi": 1,
                "pushl $;pushl $;pushl %edi;movl %eax, -(%ebp);calll - <.text+>": 1,
                "leal (%esi), %ecx;movl %ebx, (%eax);calll - <.text+>;cmpb %bl, %al;movb %al, (%ebp)": 1,
                "cmpl $, -(%ebp);je  <.text+>;pushl (%esi);pushl (%esi);pushl %ecx": 1,
                "incl -(%ebp);movl -(%ebp), %eax;cmpl (%esi), %eax;jb - <.text+>;incl (%ebp)": 1,
                "calll - <.text+>;popl %ecx;popl %ecx;jmp  <.text+>;movl %edi, %ecx": 1,
                "jne  <.text+>;pushl %edi;pushl $;pushl $;pushl (%ebp)": 2,
                "movw (%eax), %ax;movl (%esi), %ecx;movw %ax, (%ecx,%edi,);incl %edi;cmpl (%esi), %edi": 1,
                "movl %esp, %eax;leal (%esi), %ecx;movl %edi, (%eax);movl %ebx, (%eax);calll - <.text+>": 1,
                "leal (%esi), %ecx;movl %edi, (%eax);movl %ebx, (%eax);calll - <.text+>;cmpb %bl, %al": 1,
                "jmp  <.text+>;movl (%ebp), %edi;cmpb %bl, (%edi);movl (%edi), %ecx;je  <.text+>": 1,
                "testb %al, %al;jne - <.text+>;cmpb %bl, -(%ebp);jne  <.text+>;cmpb %bl, (%ebp)": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %ecx;movzwl (%ecx), %ecx": 1,
                "je  <.text+>;movl $, (%eax);cmpb %bl, ;je  <.text+>;movl (%ebp), %ecx": 1,
                "calll - <.text+>;jmp  <.text+>;cmpl %ebx, (%ebp);setne %al;addl $, %eax": 1,
                "movl (%edi), %ecx;jmp  <.text+>;xorl %ecx, %ecx;calll - <.text+>;pushl %edi": 1,
                "jmp  <.text+>;pushl (%ebp);movb $, -(%ebp);pushl -(%ebp);pushl $": 1,
                "movb $, -(%ebp);pushl -(%ebp);pushl $;pushl $;pushl (%ebp)": 1,
                "popl %ebx;leave;retl $;cmpb %bl, -(%ebp);je - <.text+>": 1,
                "retl $;cmpb %bl, -(%ebp);je - <.text+>;movl (%ebp), %ecx;pushl $": 1,
                "cmpb %bl, -(%ebp);je - <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>": 1,
                "jmp  <.text+>;pushl $;pushl $;pushl $;pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;testb $, %al;je  <.text+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %edi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 2,
                "adcl $-, (%eax);xorl %edi, %edi;cmpb $, (%ebx);je  <.text+>;movl (%ebx), %eax": 1,
                "movl %esp, %eax;leal -(%ebp), %ecx;movl $, (%eax);movl %edi, (%eax);calll - <.text+>": 1,
                "pushl %ebx;pushl (%ebp);pushl (%ebp);pushl %esi;calll - <.text+>": 1,
                "popl %ebx;leave;retl $;xorl %eax, %eax;pushl %eax": 1,
                "pushl %edi;pushl %edi;leal -(%ebp), %ecx;pushl %ebx;calll - <.text+>": 1,
                "cltd;movl %eax, %ebx;movl %ecx, -(%ebp);xorl %eax, %eax;xorl %ecx, %ecx": 1,
                "movl %ecx, -(%ebp);xorl %eax, %eax;xorl %ecx, %ecx;andl $, %edi;orl %edi, %ecx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl $": 3,
                "je - <.text+>;cmpb $, (%ebx);je - <.text+>;movl (%ebx), %ebx;jmp - <.text+>": 1,
                "cmpb %al, (%edi);je  <.text+>;movl (%edi), %eax;pushl $;pushl $": 1,
                "addl $, %esi;addl $, %esp;cmpl $, (%esi);je - <.text+>;movl $, (%esi)": 1,
                "movl $, (%esi);jmp - <.text+>;movl -(%ebp), %eax;movl (%eax), %edi;leal -(%ebp), %eax": 1,
                "jmp - <.text+>;testb $-, -(%ebp);movb $, (%ebp);movb $, (%ebp);jne  <.text+>": 1,
                "pushl (%ebp);calll - <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;addl $, %esp": 1,
                "pushl %edi;movb $, -(%ebp);andl $, (%eax);andl $, (%eax);pushl %ebx": 1,
                "cmpb $, -(%ebp);je  <.text+>;movl , %ecx;movl , %eax;addl $, %ecx": 1,
                "movl , %ecx;movl , %eax;addl $, %ecx;adcl $, %eax;addl $, %ecx": 1,
                "xorl %eax, %eax;andl $, %ecx;xorl %ebx, %ebx;orl %eax, %edi;orl %ecx, %ebx": 1,
                "orl %ecx, %ebx;cmpl $, %edi;jl  <.text+>;jg  <.text+>;testl %ebx, %ebx": 1,
                "cmpb $, (%ebp);movl $, -(%ebp);je  <.text+>;pushl %ecx;pushl %ecx": 1,
                "movl %eax, -(%ebp);ja  <.text+>;movl %ecx, -(%ebp);movl -(%ebp), %edi;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "jne  <.text+>;movl $, %eax;cmpl -(%ebp), %eax;movl %ebx, -(%ebp);sbbb %al, %al": 1,
                "addl -(%ebp), %eax;movl %edx, -(%ebp);adcl -(%ebp), %ecx;movl %eax, %ebx;movl %ecx, -(%ebp)": 1,
                "jb  <.text+>;movw (%edi), %ax;cmpw $, %ax;jne  <.text+>;movl (%edi), %ecx": 1,
                "jne  <.text+>;movl (%edi), %ecx;cmpl %ebx, %ecx;jne  <.text+>;movl (%edi), %ecx": 2,
                "movl (%edi), %ecx;cmpl %ebx, %ecx;jne  <.text+>;movl (%edi), %ecx;cmpl -(%ebp), %ecx": 2,
                "pushl %eax;pushl %edx;pushl -(%ebp);pushl %ebx;pushl $": 3,
                "movl (%esi), %eax;pushl %eax;pushl -(%ebp);pushl %edx;pushl -(%ebp)": 1,
                "pushl %ebx;pushl $;pushl $;jmp  <.text+>;pushl (%esi)": 3,
                "pushl $;jmp  <.text+>;movl (%ebp), %ecx;calll - <.text+>;movl (%ebp), %ecx": 2,
                "pushl -(%ebp);pushl %ebx;pushl (%edi);pushl (%edi);pushl $": 1,
                "addl $, %esp;movb $, (%ebp);movl -(%ebp), %ebx;movl $, %eax;subl %edi, %ebx": 1,
                "jne  <.text+>;pushl (%esi);movl (%esi), %edx;movl %edi, %eax;subl -(%ebp), %eax": 1,
                "je - <.text+>;addl $, %eax;subl -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl $, -(%ebp);je  <.text+>;movl (%ebp), %eax;cmpb $, (%eax);je  <.text+>": 1,
                "pushl $;calll - <.text+>;xorl %ebx, %ebx;cmpl %ebx, (%ebp);je  <.text+>": 1,
                "je  <.text+>;movl (%edi), %eax;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;addl $, %esp;jmp  <.text+>;xorl %eax, %eax;pushl %eax": 1,
                "calll - <.text+>;addl $, %esp;cmpb $, (%edi);je  <.text+>;movl (%edi), %edi": 1,
                "movl (%ebp), %eax;andl $, (%ebp);addl %ecx, %eax;movzbl (%eax), %eax;addl $, %eax": 1,
                "incl %edi;testb %dl, %dl;jne - <.text+>;movl %ebx, %esi;leal (%esi), %edi": 1,
                "cmpl (%ebp), %esi;movl %esi, (%ebp);jb - <.text+>;popl %edi;popl %esi": 1,
                "int;jmpl *;movw %ds, -(%esi);retl $;addb %al, (%eax)": 1,
                "addb %dl, (%edx);movl , %eax;addl $, %eax;addb %bl, -(%eax);addl $, %eax": 1,
                "addb %ch, -(%esi);addl $, %eax;addb %bl, -(%ecx);addl $, %eax;addb %dl, %ah": 1,
                "movb %al, ;addl $, %eax;addb %ch, %dl;movb %al, ;addl $, %eax": 1,
                "addl $, %eax;addb %dh, (%ebx);addl $, %eax;addb %dl, -(%eax);addl $, %eax": 1,
                "addb %dl, -(%eax);addl $, %eax;addb %dh, -(%edx);addl $, %eax;addb %bh, -(%eax)": 1,
                "addb %cl, -(%ebp);addl $, %eax;addb %dl, %al;movsl (%esi), %es:(%edi);addl $, %eax": 1,
                "addb %cl, (%esi);addl $, %eax;addb %al, (%esi);addb %ah, (%esi);addb %al, -(%edx)": 1,
                "addb %al, (%esi);addb %ah, (%esi);addb %al, -(%edx);cmpsb %es:(%edi), (%esi);addl $, %eax": 1,
                "addb $, %al;ja  <.text+>;jae  <.text+>;jo  <.text+>;addb %ah, (%esi)": 1,
                "jne  <.text+>;addb %ah, (%esp,%eax);imull $, %fs:(%esi), %esi;incl %esp;insb %dx, %es:(%edi)": 1,
                "jae  <.text+>;sbbb %al, ;outsb %gs:(%esi), %dx;addb %al, (%eax);loop ": 1,
                "jns  <.text+>;pushl %esp;outsl (%esi), %dx;pushl %ebp;outsb (%esi), %dx": 1,
                "outsl (%esi), %dx;jbe  <.text+>;addb %cl, %ch;addb $, %al;ja  <.text+>": 1,
                "jae  <.text+>;ja  <.text+>;addb %dl, ;arpl %bp, (%ebp);addb %al, (%eax)": 1,
                "outsb (%esi), %dx;imull $, (%ebx), %esp;jb  <.text+>;outsb (%esi), %dx;addb %al, (%bx,%si)": 2,
                "jb  <.text+>;outsb (%esi), %dx;addb %al, (%bx,%si);addb $, %al;pushl %edx": 1,
                "decl %esi;popal;insl %dx, %es:(%edi);pushl %esp;outsl (%esi), %dx": 1,
                "je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;addb %al, (%eax);cld": 1,
                "je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;incl %esi;imull $, (%ebp), %ebp": 4,
                "je  <.text+>;incl %esi;imull $, (%ebp), %ebp;je  <.text+>;jae  <.text+>": 1,
                "popal;insb %dx, %es:(%edi);imull $, (%edx,%edx,), %esp;jbe  <.text+>;pushl %ebx": 1,
                "imull $, (%esi), %ebp;incl %esi;addl %ecx, (%esi);pushl %ebx;je  <.text+>": 1,
                "imull $, (%esi,%eax,), %esi;je  <.text+>;jo  <.text+>;decl %edi;bound (%edx), %ebp": 1,
                "decl %esi;je  <.text+>;jb  <.text+>;popal;je  <.text+>": 1,
                "outsb (%esi), %dx;addb %al, (%bx,%si);jo  <.text+>;pushl %edx;je  <.text+>": 1,
                "pushl %edx;je  <.text+>;decl %ecx;outsb (%esi), %dx;imull $, (%ecx,%eax,), %esi": 1,
                "je  <.text+>;decl %ecx;outsb (%esi), %dx;imull $, (%ecx,%eax,), %esi;jb  <.text+>": 1,
                "jae  <.text+>;addb %ch, (%ebx);pushl %edx;je  <.text+>;pushl %edi": 1,
                "pushl %edx;je  <.text+>;pushl %edi;jb  <.text+>;je  <.text+>": 1,
                "outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi;pushl %ebx;imull $, (%eax,%eax), %esp;insb %dx, %es:(%edi)": 1,
                "pushl %edx;je  <.text+>;incl %ebx;outsl (%esi), %dx;jo  <.text+>": 1,
                "outsb %gs:(%esi), %dx;je  <.text+>;pushl %ebx;imull $, (%eax,%eax), %esp;insb %dx, %es:(%edi)": 1,
                "popal;je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;incl %ecx": 1,
                "je  <.text+>;pushl %ebx;arpl %si, %gs:(%ebp);imull $, (%ecx,%edi,), %esi;imull $, (%eax), %esi": 2,
                "jne  <.text+>;pushl %ebx;arpl %si, %gs:(%ebp);imull $, (%ecx,%edi,), %esi;imull $, (%eax), %esi": 1,
                "imull $, (%ebp), %ebp;decl %esi;je  <.text+>;je  <.text+>;outsl (%esi), %dx": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);jb  <.text+>;insl %dx, %es:(%edi);addb %ah, %ch": 1,
                "imull $, (%ebx), %esp;jb  <.text+>;outsb (%esi), %dx;addb %al, (%bx,%si);addb (%edx), %dl": 1,
                "addb %al, (%eax);faddl (%ecx);pushl %edx;je  <.text+>;incl %ebx": 1,
                "addb %dh, (%edx);incl %ebx;outsl (%esi), %dx;insl %dx, %es:(%edi);jo  <.text+>": 1,
                "pushl %eax;jb  <.text+>;outsb (%esi), %dx;je  <.text+>;addb %ch, %ah": 1,
                "incl %esp;insb %dx, %es:(%edi);je  <.text+>;incl %ebp;insb %dx, %es:(%edi)": 1,
                "je  <.text+>;incl %ebp;insb %dx, %es:(%edi);insl %dx, %es:(%edi);outsb %gs:(%esi), %dx": 1,
                "addb %al, %gs:(%eax);aaa;addb (%edx), %dl;insb %dx, %es:(%edi);incl %esi": 1,
                "outsl (%esi), %dx;imull $, (%ebp), %esi;insb %dx, %es:(%edi);insl %dx, %es:(%edi);outsb %gs:(%esi), %dx": 1,
                "addb %al, %gs:(%eax);rolb %cl, (%edx);pushl %edx;je  <.text+>;decl %esi": 1,
                "addb %cl, (%di);addl (%edx), %edx;insb %dx, %es:(%edi);pushl %ebx;je  <.text+>": 1,
                "insb %dx, %es:(%edi);pushl %ebx;je  <.text+>;imull $, (%ebx,%esi,), %esi;je  <.text+>": 1,
                "je  <.text+>;imull $, (%ebx,%esi,), %esi;je  <.text+>;decl %ecx;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;arpl %sp, (%ebp);outsl (%esi), %dx;jne  <.text+>;je  <.text+>": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                "AWRich=": 1,
                ".text": 1,
                "`.data": 1,
                ".rsrc": 1,
                "B.reloc": 1,
                "ntdll.dll": 2,
                "autocheck ": 1,
                "AUTOFMT": 1,
                "FAT32": 1,
                "%ws%ws": 1,
                "OS/2 Boot Manager": 1,
                "NTFS 4.0": 1,
                "NTFS 5.0": 1,
                "%I64d%x%x": 1,
                "%x%I64x%x": 1,
                "%I64x%x%x": 1,
                "%I64x%x": 1,
                "%04X%04X": 1,
                "             ": 1,
                "MSDOS5.0": 1,
                "NO NAME    ": 1,
                "FAT16   ": 1,
                "FAT32   ": 1,
                "FAT12   ": 1,
                "FAT16/12": 1,
                "..         ": 1,
                ".          ": 1,
                "%x%x%x": 1,
                "%I64x%I64x%I64x%x": 1,
                "%x%I64x%I64x": 1,
                "%x%I64x": 1,
                "%I64x": 1,
                "%x%W%I64x": 1,
                "%I64x%I64x": 1,
                "%I64d": 1,
                "%I64x%I64x%I64x": 1,
                "%W%d%I64d": 1,
                "%x%x%x%x%x%I64x": 1,
                "%x%x%x%x%I64x": 1,
                "%x%x%x%I64x": 1,
                "%x%x%I64x": 1,
                "%d%W%d": 1,
                "%x%x%I64x%I64x%I64x": 1,
                "%x%I64x%x%I64x": 1,
                "UNTFS: Can't read log file signature.": 1,
                "UNTFS: Log File $DATA attribute is resident.": 1,
                "%I64x%I64x%I64x%x%x": 1,
                "%I64x%I64x%x%x": 1,
                "%x%x%x%x%x": 1,
                "%I64x%x%x%x": 1,
                "%x%x%x%x": 1,
                "%x%x%I64x%I64x": 1,
                "%x%I64x%I64x%I64x": 1,
                "%d%s%s": 1,
                "FILE%04d.CHK": 1,
                "FOUND.%03d": 1,
                "%W%W%W": 1,
                "\\EA DATA. SF": 1,
                "EA DATA. SF": 1,
                "NTFS    ": 3,
                "%x%x%W%x%W%I64x": 1,
                "%x%x%I64x%x%I64x%I64x": 1,
                "%d%W%I64d": 1,
                "$Extend": 1,
                "$UpCase": 1,
                "$Quota": 1,
                "$Secure": 1,
                "$BadClus": 1,
                "$Boot": 1,
                "$Bitmap": 1,
                "$AttrDef": 1,
                "$Volume": 1,
                "$LogFile": 1,
                "$MFTMirr": 1,
                "%I64x%ws%ws": 1,
                "%x%x%x%x%x%x": 1,
                "$UsnJrnl": 1,
                "$Reparse": 1,
                "$ObjId": 1,
                "%I64x%W": 1,
                "%10u%u": 1,
                "%I64x%W%d": 1,
                "%W%I64x": 1,
                "%d%W%W": 1,
                "%I64x%W%I64x%I64x": 1,
                "%I64x%W%W%I64x%I64x": 1,
                "%I64x%W%I64x%W%I64x": 1,
                "%I64x%W%I64x": 1,
                "%I64x%W%W%I64x": 1,
                "%I64x%W%x%I64x": 1,
                "%I64x%x%x%I64x": 1,
                "%W%I64d%d": 1,
                "%W%I64x%x%I64x": 1,
                "%W%I64x%I64x%I64x": 1,
                "%W%I64x%x%x%I64x": 1,
                "%W%I64x%I64x": 1,
                "%W%x%I64x": 1,
                "%W%x%x%I64x": 1,
                "dir%04d.chk": 1,
                "found.%03d": 1,
                "%W%W%I64x": 1,
                "%W%I64x%x%x": 1,
                "%I64x%x%I64x": 1,
                "%I64x%I64x%I64x%I64x": 1,
                "%x%W%I64x%x%I64x": 1,
                "RSDS+W": 1,
                "autofmt.pdb": 1,
                "tKF;u": 1,
                "YYt|h0": 1,
                "YYtdh,": 1,
                "YYtRh(": 1,
                "WWPWV": 1,
                "VC20XC00U": 1,
                "SVWUj": 1,
                ";t$(v(": 1,
                "UQPXY]Y[": 1,
                "F8WQP": 1,
                "PSPSW": 1,
                "|[SWj": 1,
                "|0VSSj": 1,
                "t~VQQ": 1,
                "t:VQQ": 1,
                "^$j$Y": 1,
                "PSShP": 1,
                "F4|uh": 1,
                "F4|Hf": 1,
                "O8^,t": 1,
                "F$SSSSh": 1,
                "QSSSP": 1,
                "A$RRRRh": 1,
                "QRRRP": 2,
                "A$RRRRh ": 1,
                "u>8^,u9": 1,
                "t2SSj": 1,
                "VVVVh": 1,
                "QQSV3": 1,
                "0SVWQQ": 1,
                "9X4uiQQ": 1,
                "tPjDPh,": 1,
                "F49~4": 1,
                "v/jdY;": 1,
                "VVVVh$": 1,
                "C4}\\=": 1,
                "PVVh\\@": 1,
                "C4}&=": 1,
                "PVVhH": 1,
                "PVVhP": 1,
                "C4}L=": 1,
                "8^8t)": 1,
                "(SVWh": 1,
                "rZ=^f": 1,
                ">Wu#j": 1,
                "t.f=s": 1,
                "^,9^0t": 1,
                "^09^4t": 1,
                "^49^8t": 1,
                "^89^<t": 1,
                "^<9^@t": 1,
                "^@9^Dt/d": 1,
                "^L_^[": 1,
                "9~,t>9~0t99~4t49~8t/9~<t*9~@t%9~Dt 9~Ht": 1,
                "N0St\"": 1,
                "N0GWC": 1,
                "tZHt/H": 1,
                "t6Ht3Ht": 1,
                "Ht*HuR": 1,
                "QQSVW": 4,
                "@@PQQ": 1,
                "9{<tw9{@uQj": 1,
                "@V9K0": 1,
                "WuNjT": 1,
                "PWWhH": 1,
                "PWWh\\@": 1,
                "_^t&j": 1,
                "QQSVWQQ": 1,
                "DNBf= ": 1,
                "|t?B;": 1,
                "|_@ t": 1,
                "|GB u": 1,
                "f9H$u": 1,
                "f9H&u": 1,
                "FDt#W": 1,
                "CDt,P": 1,
                "93u3j ": 1,
                "t$QQ3": 1,
                "9ODtB": 1,
                "C,f;G,": 1,
                "C.:G.": 1,
                "CH:GH": 1,
                "9~@tx": 1,
                "N/WQ3": 2,
                "GWPQQ": 1,
                "uS9^ uNj": 1,
                "tISSj": 1,
                "tESSh": 1,
                "tVSSh": 1,
                "M haj": 1,
                "SSWQQ": 1,
                "M hrj": 1,
                "M hcj": 1,
                "t9WQQ": 1,
                "HtlHtIH": 1,
                "tnWPQh$": 1,
                "t%SSj": 1,
                "@9A8t": 1,
                "F$ttSSj": 1,
                "9^Du\"j@": 1,
                "Cd9~DtM9{Du": 1,
                "VD+J8": 1,
                "K@9~\\t.9{\\u": 1,
                "F@_^[]": 1,
                "N8SSj": 1,
                "|?BWRPQ": 1,
                "PPPj ": 1,
                "tFSSS": 1,
                "t0SSSj ": 1,
                "tTSSS": 1,
                "u!SSh": 1,
                "Pj0QQ": 1,
                "N3 Sh": 1,
                "tOSSSj ": 1,
                "t4SSSj ": 1,
                "t:Sj ": 1,
                "RPQWj0": 1,
                "QPWVj0": 1,
                "t'C;]": 1,
                " SVWQQ": 1,
                "tCSSh": 1,
                "N4RQP": 1,
                "V4QRP": 1,
                "f9H*u": 1,
                "~8SPQ": 1,
                "E08X t": 6,
                "u8tXQQ": 1,
                "E08X ": 1,
                "PjHQQ": 3,
                "}08_ t": 1,
                "8]<t[QQ": 1,
                "tC8_ t": 1,
                "SSSSSj": 2,
                "N8SSh": 1,
                "M hdj": 1,
                "VVWQQ": 2,
                "M h`j": 1,
                "AQSQQ": 2,
                "~$_^[]": 1,
                "QSVW3": 1,
                "M hPf": 1,
                "M(hSf": 1,
                "t4hTf": 1,
                "M(hUf": 1,
                "M(hRf": 1,
                "M(hNf": 1,
                "M(hPf": 1,
                "SSSSSW": 1,
                "E,SVWj@%": 1,
                "P f9]": 1,
                "j@Ys8": 1,
                "N Qh4": 1,
                "N j Qh4": 1,
                "6jDPh4": 1,
                "t!WWj WW": 1,
                ")~d_^": 1,
                "v/WVPWQ": 1,
                "Au%VW": 1,
                "uf9^@ua": 1,
                "t)C;] r": 1,
                ";Adse": 1,
                ";Ods.9": 1,
                "t{SSh": 1,
                "M hnj": 1,
                "M hYj": 1,
                "t;WQQ": 1,
                "tLf9^": 1,
                "8EDu~f": 1,
                "t*f9~": 1,
                "VWuIj": 1,
                "jdX9E": 1,
                " t Ht": 1,
                "9^,tn": 1,
                "q0@@P": 1,
                "}(jx3": 1,
                ";~H}\"": 1,
                "G@@;~H|": 1,
                "1;s0u": 1,
                "[SWh&": 1,
                "N<;APt": 1,
                "8E#t4": 1,
                "u6f9E": 1,
                "HHu\"hh": 1,
                "P(_^[]": 1,
                "VVjpj": 1,
                "YVVh'": 1,
                "] t/j": 1,
                "E HPQQ": 1,
                "tYVVh": 1,
                "t0SSS": 1,
                "t9h2f": 1,
                "@FFIu": 1,
                "uLjdh": 1,
                "N8WWh": 1,
                "t(8K t": 2,
                "t\\9] ": 1,
                "9] tI": 1,
                "HHu#hh": 1,
                "0Wh<f": 1,
                "0Wh=f": 1,
                "0Wh>f": 1,
                "YYuNhN": 1,
                "u(;}$": 1,
                "u$VSW": 1,
                "u9;}$v08E": 1,
                "t\"WSh": 1,
                "8X(u/8]": 1,
                "IA:HA": 2,
                "G<f;E": 2,
                "q(Pht": 2,
                "v(Pht": 1,
                "VPSj0": 1,
                "t=8_ t": 1,
                "9] tb": 1,
                "9] t+8^ t": 1,
                ";B,s%f": 1,
                "u$j(P": 1,
                "F<f;E": 1,
                "wE9](": 1,
                "QPVSj0": 1,
                "tJ9](t'": 1,
                "VVj0^": 1,
                "j SWhX": 1,
                "t%SWj": 2,
                "9X,v.": 1,
                "F;p,r": 1,
                "E ;F0v(Ph": 1,
                "M0hZf": 1,
                "f9] u": 1,
                "8]$t)": 1,
                "N,SSj": 1,
                "^<9^,": 1,
                "tHSjZ": 1,
                "tL8_ t": 2,
                ",8X t": 1,
                "u,WPV": 4,
                "tT9],tK": 4,
                "t09],": 2,
                "J8_ t": 1,
                "tS8_ ": 2,
                ",8_ t": 1,
                "u(SWP": 1,
                "t-9],": 1,
                "t\"8_ t": 1,
                "N,PQQ": 1,
                "@f9E ": 1,
                "tt9],": 1,
                "yG;~,": 1,
                "thG;~,": 1,
                "^D8_ t": 1,
                "Huk8]": 1,
                "t 8_ t": 1,
                "t`8_ t": 1,
                "t 8G t": 1,
                "t[8_ t ": 1,
                "v}SVW": 1,
                "_^[9E": 1,
                "_wcsicmp": 1,
                "_wcsupr": 1,
                "_allmul": 1,
                "_alldiv": 1,
                "NtDelayExecution": 1,
                "_stricmp": 1,
                "NtTerminateProcess": 1,
                "RtlUnhandledExceptionFilter": 1,
                "RtlUnwind": 1,
                "NtQueryVirtualMemory": 1,
                "DbgBreakPoint": 1,
                "RtlAllocateHeap": 1,
                "RtlUnicodeStringToAnsiString": 1,
                "RtlNormalizeProcessParams": 1,
                "wcslen": 1,
                "isprint": 1,
                "swprintf": 1,
                "RtlOemToUnicodeN": 1,
                "RtlMultiByteToUnicodeN": 1,
                "RtlUnicodeToOemN": 1,
                "RtlUnicodeToMultiByteN": 1,
                "sprintf": 1,
                "memmove": 1,
                "_wcslwr": 1,
                "wcscmp": 1,
                "_chkstk": 1,
                "RtlFreeUnicodeString": 1,
                "RtlDosPathNameToNtPathName_U": 1,
                "NtClose": 1,
                "NtShutdownSystem": 1,
                "NtAdjustPrivilegesToken": 1,
                "NtOpenProcessToken": 1,
                "NtQuerySystemTime": 1,
                "NtQuerySystemInformation": 1,
                "NtQuerySymbolicLinkObject": 1,
                "NtOpenSymbolicLinkObject": 1,
                "RtlInitUnicodeString": 1,
                "NtSetInformationFile": 1,
                "NtQueryInformationFile": 1,
                "NtOpenFile": 1,
                "NtWriteFile": 1,
                "NtCreateFile": 1,
                "NtFsControlFile": 1,
                "RtlValidRelativeSecurityDescriptor": 1,
                "RtlExpandEnvironmentStrings_U": 1,
                "NtSetThreadExecutionState": 1,
                "NtReadFile": 1,
                "NtDeviceIoControlFile": 1,
                "NtQueryVolumeInformationFile": 1,
                "NtDisplayString": 1,
                "NtWaitForMultipleObjects": 1,
                "NtCreateEvent": 1,
                "_aulldiv": 1,
                "RtlFreeHeap": 1,
                "RtlSizeHeap": 1,
                "RtlFormatMessage": 1,
                "RtlAnsiStringToUnicodeString": 1,
                "RtlInitAnsiString": 1,
                "RtlFindMessage": 1,
                "wcscpy": 1,
                "wcsncmp": 1,
                "RtlQueryRegistryValues": 1,
                "RtlWriteRegistryValue": 1,
                "RtlSubAuthoritySid": 1,
                "RtlInitializeSid": 1,
                "RtlLengthRequiredSid": 1,
                "RtlAddAce": 1,
                "RtlCopySid": 1,
                "RtlLengthSid": 1,
                "RtlQueryInformationAcl": 1,
                "RtlCreateAcl": 1,
                "RtlAddAccessAllowedAce": 1,
                "RtlLengthSecurityDescriptor": 1,
                "RtlValidSecurityDescriptor": 1,
                "RtlNewSecurityObject": 1,
                "RtlSetDaclSecurityDescriptor": 1,
                "RtlSetGroupSecurityDescriptor": 1,
                "RtlCreateSecurityDescriptor": 1,
                "RtlTimeToTimeFields": 1,
                "RtlSystemTimeToLocalTime": 1,
                "NtSetVolumeInformationFile": 1,
                "RtlPrefixUnicodeString": 1,
                "NtQueryValueKey": 1,
                "NtOpenKey": 1,
                "_allrem": 1,
                "RtlDecompressBuffer": 1,
                "RtlUpcaseUnicodeString": 1,
                "RtlRaiseStatus": 1,
                "NtTerminateThread": 1,
                "NtSetEvent": 1,
                "NtWaitForSingleObject": 1,
                "NtQueryInformationThread": 1,
                "RtlCreateUserThread": 1,
                "RtlComputeCrc32": 1,
                "DbgPrint": 1,
                "RtlDeleteElementGenericTable": 1,
                "RtlFindSetBits": 1,
                "RtlClearBits": 1,
                "RtlInitializeBitMap": 1,
                "RtlLookupElementGenericTable": 1,
                "RtlNumberOfSetBits": 1,
                "RtlEnumerateGenericTableWithoutSplaying": 1,
                "RtlSetBits": 1,
                "RtlInsertElementGenericTable": 1,
                "RtlInitializeGenericTable": 1,
                "NtQueryPerformanceCounter": 1,
                "MSWIN4.1": 4,
                "NO NAME    FAT12   3": 2,
                "|8N$}$": 1,
                "r9&8-t": 1,
                "at2Nt": 1,
                "NTLDR      ": 4,
                "NTLDR is missing": 5,
                "Disk error": 3,
                "Press any key to restart": 3,
                "NO NAME    FAT32   3": 1,
                "f`f;F": 1,
                "fXfXfXfX": 1,
                "_[YZr": 2,
                "NO NAME    FAT32   VW": 1,
                "A disk read error occurred": 2,
                "NTLDR is compressed": 1,
                "Press Ctrl+Alt+Del to restart": 1,
                "fSfPfQfVfW": 2,
                "f_f^fYf": 2,
                "fTfVgf": 2,
                "fPfPgf": 2,
                "fZfYfBfQfV": 2,
                "f^fYf": 4,
                "fYfZfQfVf": 2,
                "f_fYf": 2,
                "fXf[f": 2,
                "f`&gf": 2,
                "fRfQfRf": 2,
                "f`fPfQf3": 2,
                "fYfXf": 2,
                "fPfSfQf": 2,
                "fYf[fX": 2,
                "fSfRf": 2,
                "fIfKf": 4,
                "fSfRf+": 2,
                "fQfVg": 2,
                "fPfQf": 2,
                "fYfYf3": 4,
                "fPfVfXf^f;": 2,
                "fVf@fPfH": 2,
                "fZf^fYf[fSfQfVfRf": 2,
                "fYfYfYfY": 2,
                "fQfPf": 2,
                "f[fYf": 2,
                "f[f_f": 2,
                "fRfQf": 2,
                "fYfZ&f9": 2,
                "fYfZf3": 2,
                "D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2": 1,
                "24383<3@3D3P3T3X3\\3`3d3h3l3p3t3": 1,
                "4 4$4(4`4d4h4l4p4t4x4|4": 1,
                "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8": 1,
                "8 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9": 1,
                ": :$:(:,:0:4:8:<:@:D:H:": 1,
                "; ;8<<<l<p<t<x<|<": 1,
                "=T=X=d=h=l=p=t=x=|=": 1,
                "> >$>(>,>0>4>8><>@>D>H>L>P>T>": 1,
                ">P?T?X?\\?`?d?h?": 1,
                "064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6": 1,
                "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7": 1,
                "7 :0:@:P:`:p:l<p<": 1,
                " 050G0Y0k0}0": 1,
                "3]4~4": 1,
                "93:M:V:": 1,
                ";G;[;k;": 1,
                ";)<5<B<h<": 1,
                "2:2,3": 1,
                "4+4=4S4": 1,
                "6'6/6": 1,
                ":y;~;": 1,
                "<F=C>": 1,
                "?>?R?_?": 1,
                "0>0[0}0": 1,
                "=&=h=": 1,
                "1y2`3": 1,
                "6D8N8": 1,
                "=[>d>E?": 1,
                "4&5*5.52565:5>5B5F5J5": 1,
                "9q9 :W:u:": 1,
                ":x;7=h=v?": 1,
                "0I1O1": 1,
                "1K2T3": 1,
                "5U6_6": 1,
                "7>7(8,:": 1,
                "?3?8?": 1,
                "0#0}0": 1,
                ":@;n;": 1,
                "<+=^=y=~=": 1,
                "'050J0R0a0": 1,
                "0 1-131q1x1": 1,
                "2)3[3": 1,
                "3#4U4": 1,
                "6I6{6": 1,
                "7C7u7": 1,
                "8!8,828=8C8N8T8_8e8p8v8": 1,
                "9#9.949?9E9P9V9a9g9r9x9": 1,
                ":&;X;": 1,
                "; <R<": 1,
                "=-=8=@=K=Q=\\=b=m=s=~=": 1,
                "?K?}?": 1,
                "0E0w0": 1,
                "1?1q1": 1,
                "292k2": 1,
                "3+3U3x3": 1,
                "4$4/454@4F4Q4W4b4h4s4y4": 1,
                "5%6W6": 1,
                "8K8}8": 1,
                "9E9w9": 1,
                ":?:q:": 1,
                ";9;k;": 1,
                "<3<e<": 1,
                "<-=_=": 1,
                "='>Y>": 1,
                ">!?O?y?": 1,
                "0'0-080>0I0O0Z0`0k0q0|0": 1,
                "1)1/1:1@1K1Q1\\1b1m1s1~1": 1,
                "2 2+212<2B2M2S2^2d2o2u2": 1,
                "3\"3-333>3D3O3U3c3": 1,
                "4.5:5R5": 1,
                "6d7r7": 1,
                "718V8l8": 1,
                ":S:c:l:": 1,
                "<&<6<_<": 1,
                "<5=v=": 1,
                "=!>4>D>i>": 1,
                "?(?k?z?": 1,
                "3F3Q3": 1,
                "6C6p6": 1,
                "8*9/9": 1,
                "4N5l5": 1,
                "=2=6=:=>=B=F=": 1,
                "1 111": 1,
                "254u4": 1,
                "4t5D9": 1,
                "9>:I:G>": 1,
                "3N3B5": 1,
                "5Q7V7": 1,
                "9L:U;Z;": 1,
                "6B7|7": 1,
                "8J9S9": 1,
                ":-:;:Z:d:": 1,
                "69;C;a;": 1,
                "2A4i4": 1,
                "=@>p>": 1,
                "7H;T;": 1,
                "999|=": 1,
                "2S2$3": 1,
                "=$>_>": 1,
                "2\"2@2": 1,
                "2#3L3r3": 1,
                "4S4o4": 1,
                "7J7|8": 1,
                ":J;a;": 1,
                "*6/6I6": 1,
                "7\"747:7@7F7L7R7X7^7d7j7": 1,
                "7+898": 1,
                "5#6`6m6|6": 1,
                "7\"777L7x7": 1,
                "8.9E9": 1,
                "9#:w:": 1,
                ":(=2=\\=d=O>d>": 1,
                "0<1M1`1n1": 1,
                "3*393F3": 1,
                "4?4b4g4y4k8": 1,
                ";@<E<J<": 1,
                "<K=S=[=y>": 1,
                "3&3=3F3": 1,
                "6\"6<6": 1,
                "6&9+9S9a<": 1,
                "<^>u>": 1,
                "2(3p3": 1,
                "527o7": 1,
                "7@8m8": 1,
                "0'0E1L1": 1,
                "4?4f4": 1,
                "4-575": 1,
                "8\"9'9E9": 1,
                "<S?]?{?": 1,
                "7r8|8": 1,
                "8@:E:d:": 1,
                "=2=G=": 1,
                "= >*>2><>W>o>": 1,
                ",0W0a0 1>1": 1,
                ":8<=<": 1,
                "<[=`=z=": 1,
                "1/141N1w1": 1,
                "4/474F4W4a4g4m4x4": 1,
                "=*>T>": 1,
                "9,99;": 1,
                ";9>f>": 1,
                "?A?o?": 1,
                "9^:&;W;^;": 1,
                "4E4D5": 1,
                "7o8Q9": 1,
                ";*;C;": 1,
                "=k>J?": 1,
                "0.1/2": 1,
                "6/6M6'7?7": 1,
                ":H;O;v<": 1,
                "7A8f8": 1,
                "8B9O9": 1,
                "<A>e>r>": 1,
                "1=1J1x2": 1,
                "465Z5g5": 1,
                "7)7+:5:_:g:": 1,
                "=)=`=": 1,
                ">=>k>": 1,
                "9#:M:": 1,
                "8!9B9c9": 1,
                ":>:h:": 1,
                "===F=L=R=": 1,
                "2171J517": 1,
                "8;8t8": 1,
                "2,5E6": 1,
                "< =e=~=": 1,
                ":3:d:{:[<": 1,
                "0.2[2": 1,
                "8;:B>": 1,
                ">.?A?F?h?": 1,
                "k0q0{0": 1,
                "5|6C7Y;~<D?": 1,
                "033M3": 1,
                "2\"4i4?5": 1,
                "?T?z?": 1,
                "1@1a1": 1,
                "7!9O9": 1,
                "9#;Q;": 1,
                "4)4D4": 1,
                "7#8d8": 1,
                "8=9':e:6<": 1,
                "5/6Q6N7": 1,
                "7\\8!:": 1,
                "=(=t?": 1,
                ".0P0n0-1?3": 1,
                "465V5": 1,
                "4'5C5": 1,
                "7A7S7]7": 1,
                "8f:I;": 1,
                "7B8I8": 1,
                "</>6>": 1,
                "5%6e6|6": 1,
                "6)7@7k7": 1,
                "9*9^9": 1,
                ";Q<o<": 1,
                "=$>P?": 1,
                "5?5p5": 1,
                "5'6C7": 1,
                "y0g2r4": 1,
                "8'9X9": 1,
                ";(> ?": 1,
                "5,6U6": 1,
                "9z<B=Q=": 1,
                "585>5D5J5Q5": 1,
                "9$9?9`9~9": 1,
                ";,<p<": 1,
                ">$>0><>H>T>`>": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rsrc": 1,
                "perm=m-r-- name=.reloc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=ntdll.dll__wcsicmp": 3,
                "bind=NONE type=FUNC name=ntdll.dll__wcsupr": 3,
                "bind=NONE type=FUNC name=ntdll.dll__allmul": 3,
                "bind=NONE type=FUNC name=ntdll.dll__alldiv": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtDelayExecution": 3,
                "bind=NONE type=FUNC name=ntdll.dll__stricmp": 3,
                "bind=NONE type=FUNC name=ntdll.dll_atoi": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtTerminateProcess": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUnwind": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryVirtualMemory": 3,
                "bind=NONE type=FUNC name=ntdll.dll_DbgBreakPoint": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAllocateHeap": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUnicodeStringToAnsiString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlNormalizeProcessParams": 3,
                "bind=NONE type=FUNC name=ntdll.dll_wcslen": 3,
                "bind=NONE type=FUNC name=ntdll.dll_isprint": 3,
                "bind=NONE type=FUNC name=ntdll.dll_swprintf": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlOemToUnicodeN": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlMultiByteToUnicodeN": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUnicodeToOemN": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUnicodeToMultiByteN": 3,
                "bind=NONE type=FUNC name=ntdll.dll_sprintf": 3,
                "bind=NONE type=FUNC name=ntdll.dll_memmove": 3,
                "bind=NONE type=FUNC name=ntdll.dll__wcslwr": 3,
                "bind=NONE type=FUNC name=ntdll.dll_wcscmp": 3,
                "bind=NONE type=FUNC name=ntdll.dll__chkstk": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFreeUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlDosPathNameToNtPathName_U": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtClose": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtShutdownSystem": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtAdjustPrivilegesToken": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtOpenProcessToken": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQuerySystemTime": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQuerySystemInformation": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQuerySymbolicLinkObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtOpenSymbolicLinkObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtSetInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtOpenFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtWriteFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtCreateFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtFsControlFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlValidRelativeSecurityDescriptor": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlExpandEnvironmentStrings_U": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtSetThreadExecutionState": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtReadFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtDeviceIoControlFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryVolumeInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtDisplayString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtWaitForMultipleObjects": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtCreateEvent": 3,
                "bind=NONE type=FUNC name=ntdll.dll__aulldiv": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFreeHeap": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlSizeHeap": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFormatMessage": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAnsiStringToUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitAnsiString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFindMessage": 3,
                "bind=NONE type=FUNC name=ntdll.dll_wcscpy": 3,
                "bind=NONE type=FUNC name=ntdll.dll_wcsncmp": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlQueryRegistryValues": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlWriteRegistryValue": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlSubAuthoritySid": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitializeSid": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlLengthRequiredSid": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAddAce": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlCopySid": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlLengthSid": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlQueryInformationAcl": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlCreateAcl": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAddAccessAllowedAce": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlLengthSecurityDescriptor": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlValidSecurityDescriptor": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlNewSecurityObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlSetDaclSecurityDescriptor": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlSetGroupSecurityDescriptor": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlCreateSecurityDescriptor": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlTimeToTimeFields": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlSystemTimeToLocalTime": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtSetVolumeInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlPrefixUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryValueKey": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtOpenKey": 3,
                "bind=NONE type=FUNC name=ntdll.dll__allrem": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlDecompressBuffer": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUpcaseUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlRaiseStatus": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtTerminateThread": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtSetEvent": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtWaitForSingleObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryInformationThread": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlCreateUserThread": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlComputeCrc32": 3,
                "bind=NONE type=FUNC name=ntdll.dll_DbgPrint": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlDeleteElementGenericTable": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFindSetBits": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlClearBits": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitializeBitMap": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlLookupElementGenericTable": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlNumberOfSetBits": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlEnumerateGenericTableWithoutSplaying": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlSetBits": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInsertElementGenericTable": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitializeGenericTable": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryPerformanceCounter": 3,
                "section=.data type=utf8 string=NO NAME    FAT12   3\u024e\u047c blocks=Basic Latin,Latin Extended-B,Cyrillic": 1,
                "section=.data type=utf8 string=NO NAME    FAT32   3\u024e\u047c blocks=Basic Latin,Latin Extended-B,Cyrillic": 1,
                "section=.data type=utf8 string=r\u040aV@ blocks=Basic Latin,Cyrillic": 2,
                "section=.data type=utf16le string=p#\\a\u00f5 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.data type=utf8 string=NO NAME    FAT12   3": 1,
                "section=.data type=utf16le string=@\u00b8\uf780\ua2f6B\u20b8\uf700\u1126\u4e00\uc603\ud283\u4600\uf6f7\uc88b\u10a0\u3200\uf7e4\u1626\u0300\u0e06\u8300\u00d2\u4ba3\u8900\u4d16\u0300\ua3c1>\u5651\u00bb\u8e10\u33c3\u33db\ub8d2\u4000\uf6f7\u0e50\u95e8\u5800\u7372 blocks=Basic Latin,Latin-1 Supplement,Private Use Area,Yi Syllables,Currency Symbols,Hangul Jamo,CJK Unified Ideographs,Hangul Syllables,CJK Unified Ideographs Extension A,Georgian,Enclosed CJK Letters and Months,Unified Canadian Aboriginal Syllabics,Combining Diacritical Marks,Thai,CJK Compatibility": 1,
                "section=.data type=utf16le string=Sh\u680d\u026a\u8acb\u2416\ub400\ucd08\u7313\ub905 blocks=Basic Latin,CJK Unified Ideographs,IPA Extensions,Control Pictures,Hangul Syllables": 1,
                "section=.data type=utf16le string=NTLDR": 2,
                "section=.data type=utf16le string=$I30\ue000 blocks=Basic Latin,Private Use Area": 2,
                "section=.data type=utf8 string=\\aZY[X\u00e0 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=Auto File System Conversion Utility": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2111)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=autoconv": 1,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=AUTOCONV.EXE": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le string=Convert lost chains to files (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unrecoverable error in folder %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Convert folder to file (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n%1 bytes total disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes in bad sectors.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes in %2 hidden files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes in %2 folders.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes in %2 files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes in %2 recovered files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes in %2 recoverable files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes available on disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 total bytes memory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes free.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows cannot check a disk attached through a network.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows cannot check a disk that is substituted or\\r\\nassigned using the SUBST or ASSIGN command.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified disk appears to be a non-Windows XP disk.\\r\\nDo you want to continue? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=An error occurred while reading the file allocation table (FAT %1).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Folder %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 contains %2 non-contiguous blocks.\\r\\n": 1,
                "section=.rsrc type=utf16le string=All specified files are contiguous.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows found errors on the disk, but will not fix them\\r\\nbecause disk checking was run without the /F (fix) parameter.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   The file allocation table (FAT) on disk %1 is corrupted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1  first allocation unit is not valid. The entry will be truncated.\\r\\n": 1,
                "section=.rsrc type=utf16le string=File and folder verification is complete.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume is too large to convert.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume may have inconsistencies. Run Chkdsk, the disk checking utility.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   An allocation error occurred. The file size will be adjusted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   Cannot recover .. entry, processing continued.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   Folder is totally empty, no . or ..\\r\\n": 1,
                "section=.rsrc type=utf16le string=   Folder is joined.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   Cannot recover .. entry.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The %1 entry contains a nonvalid link.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   Windows has found an entry that contains a nonvalid attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The size of the %1 entry is not valid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 is cross-linked on allocation unit %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   Windows cannot find the %1 folder.\\r\\n   Disk check cannot continue past this point in the folder structure.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   The folder structure past this point cannot be processed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes of free disk space added.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes of free disk space would be added.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume %1 created %2 %3\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 total allocation units on disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes in each allocation unit.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Disk checking is not available on disk %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=A nonvalid parameter was specified.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified path was not found.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The %1 file was not found.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   %1 lost allocation units were found in %2 chains.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   The CHDIR command cannot switch to the root folder.\\r\\n": 1,
                "section=.rsrc type=utf16le string=   A disk error occurred during writing of the file allocation table.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1\\r\\n": 9,
                "section=.rsrc type=utf16le string=   The root folder on this volume is full. To perform a disk check,\\r\\n   Windows requires space in the root folder. Remove some files\\r\\n   from this folder, then run disk checking again.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 %2 %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 %2, %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1%2%3%4%5.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1%2%3%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 available allocation units on disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows disk checking cannot fix errors (/F) when run from an\\r\\nMS-DOS window. Try again from the Windows XP shell or command prompt.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An unspecified error occurred.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This never gets printed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Checks a disk and displays a status report.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK [volume[[path]filename]]] [/F] [/V] [/R] [/X] [/I] [/C] [/L[:size]]\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=  volume          Specifies the drive letter (followed by a colon),\\r\\n                  mount point, or volume name.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  filename        FAT/FAT32 only: Specifies the files to check for fragmentation.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /F              Fixes errors on the disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /V              On FAT/FAT32: Displays the full path and name of every file\\r\\n                  on the disk.\\r\\n                  On NTFS: Displays cleanup messages if any.\\r\\n  /R              Locates bad sectors and recovers readable information\\r\\n                  (implies /F).\\r\\n  /L:size         NTFS only:  Changes the log file size to the specified number\\r\\n                  of kilobytes.  If size is not specified, displays current\\r\\n                  size.\\r\\n  /X              Forces the volume to dismount first if necessary.\\r\\n                  All opened handles to the volume would then be invalid\\r\\n                  (implies /F).\\r\\n  /I              NTFS only: Performs a less vigorous check of index entries.\\r\\n  /C              NTFS only: Skips checking of cycles within the folder\\r\\n                  structure.\\r\\n\\r\\nThe /I or /C switch reduces the amount of time required to run Chkdsk by\\r\\nskipping certain checks of the volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=To check the current disk, type CHKDSK with no parameters.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows cannot run disk checking on CD-ROM and DVD-ROM drives.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Checking file system on %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume is clean.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Removing trailing folder entries from %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows replaced bad clusters in file %1\\r\\nof name %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The disk does not have enough space to replace bad clusters\\r\\ndetected in file %1 of name %2.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows is verifying free space...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Free space verification is complete.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows is verifying files and folders...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows cannot upgrade this FAT volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified volume name does not have a mount point or drive letter.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume is dirty.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Do you want to schedule Windows to check your disk the next time\\r\\nyou start your computer? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows will check your disk the next time you start\\r\\nyour computer.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nWindows has finished checking your disk.\\r\\nPlease wait while your computer restarts.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Removing nonvalid long folder entry from %1...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Now checking %1...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Removing orphaned long folder entry %1...\\r\\n": 1,
                "section=.rsrc type=utf16le string=The log file size must be greater than 0.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows can set log file size on NTFS volumes only.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The drive, the path, or the file name is not valid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB in %2 files.\\r\\n": 2,
                "section=.rsrc type=utf16le string=%1 KB in %2 folders.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB in %2 hidden files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB in %2 recoverable files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB in %2 recovered files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=To skip disk checking, press any key within %1 second(s). %r%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Disk checking has been cancelled.                       %b\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows will now check the disk.                        %b\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB of free disk space added.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB of free disk space would be added.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The /I option functions only on NTFS volumes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The /C option functions only on NTFS volumes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows has finished checking the disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nOne of your disks needs to be checked for consistency. You\\r\\nmay cancel the disk check, but it is strongly recommended\\r\\nthat you continue.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nA disk check has been scheduled.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows was unable to determine if the specified volume is a system volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows has checked the file system and found no problems.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows has made corrections to the file system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows found problems with the file system.\\r\\nRun CHKDSK with the /F (fix) option to correct these.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows found problems with the file system that could not be corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=THIS IS AN EXPERIMENTAL VERSION OF CHKDSK.\\r\\nPLEASE USE IT ACCORDING TO THE GIVEN INSTRUCTIONS.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The /I and /I:passes cannot be specified at the same time.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The number of passes specified through /I is invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows cannot run disk checking on this volume because it is write protected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows cannot run disk checking on more than one volume of the same file system.\\r\\nTo do so, please run CHKDSK from the command line.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error in writing the output log.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 percent completed.               %r%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Format complete.                        %b\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insert new disk for drive %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Reinsert disk for drive %1:\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 percent completed.%2             %r%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error in IOCTL call.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot open volume for direct access.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error writing File Allocation Table (FAT).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error writing folder.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot format a network drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Parameters not supported.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid media or Track 0 bad - disk unusable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error reading folder %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=and press ENTER when ready... %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Enter current volume label for drive %1 %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Parameters incompatible with fixed disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error reading partition table.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Parameters not supported by drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insert Windows XP disk in drive %1:\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nWARNING, ALL DATA ON NON-REMOVABLE DISK\\r\\nDRIVE %1 WILL BE LOST!\\r\\nProceed with Format (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFormat another (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error writing partition table.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Parameters not compatible.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 allocation units available on disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n%1 bytes in each allocation unit.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Same parameter entered twice.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Must enter both /t and /n parameters.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Trying to recover allocation unit %1.                          %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume label is not supported with /8 parameter.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient memory.\\r\\n": 2,
                "section=.rsrc type=utf16le string=\\r\\nQuickFormat another (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid existing format.\\r\\nThis disk cannot be QuickFormatted.\\r\\nProceed with unconditional format (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Formatting %1K\\r\\n": 1,
                "section=.rsrc type=utf16le string=Formatting %1M\\r\\n": 1,
                "section=.rsrc type=utf16le string=Formatting %1.%2M\\r\\n": 1,
                "section=.rsrc type=utf16le string=Verifying %1K\\r\\n": 1,
                "section=.rsrc type=utf16le string=Verifying %1M\\r\\n": 1,
                "section=.rsrc type=utf16le string=Verifying %1.%2M\\r\\n": 1,
                "section=.rsrc type=utf16le string=Saving UNFORMAT information.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Checking existing disk format.\\r\\n": 1,
                "section=.rsrc type=utf16le string=QuickFormatting %1K\\r\\n": 1,
                "section=.rsrc type=utf16le string=QuickFormatting %1M\\r\\n": 1,
                "section=.rsrc type=utf16le string=QuickFormatting %1.%2M\\r\\n": 1,
                "section=.rsrc type=utf16le string=Formats a disk for use with Windows XP.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=FORMAT volume [/FS:file-system] [/V:label] [/Q] [/A:size] [/C] [/X]\\r\\nFORMAT volume [/V:label] [/Q] [/F:size]\\r\\n": 1,
                "section=.rsrc type=utf16le string=FORMAT volume [/V:label] [/Q] [/T:tracks /N:sectors]\\r\\n": 1,
                "section=.rsrc type=utf16le string=FORMAT volume [/V:label] [/Q]\\r\\n": 1,
                "section=.rsrc type=utf16le string=FORMAT volume [/Q]\\r\\n\\r\\n  volume          Specifies the drive letter (followed by a colon),\\r\\n                  mount point, or volume name.\\r\\n  /FS:filesystem  Specifies the type of the file system (FAT, FAT32, or NTFS).\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /V:label        Specifies the volume label.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /Q              Performs a quick format.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /C              NTFS only: Files created on the new volume will be compressed\\r\\n                  by default.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /A:size         Overrides the default allocation unit size. Default settings\\r\\n                  are strongly recommended for general use.\\r\\n                  NTFS supports 512, 1024, 2048, 4096, 8192, 16K, 32K, 64K.\\r\\n                  FAT supports 512, 1024, 2048, 4096, 8192, 16K, 32K, 64K,\\r\\n                  (128K, 256K for sector size > 512 bytes).\\r\\n                  FAT32 supports 512, 1024, 2048, 4096, 8192, 16K, 32K, 64K,\\r\\n                  (128K, 256K for sector size > 512 bytes).\\r\\n\\r\\n                  Note that the FAT and FAT32 files systems impose the\\r\\n                  following restrictions on the number of clusters on a volume:\\r\\n\\r\\n                  FAT: Number of clusters <= 65526\\r\\n                  FAT32: 65526 < Number of clusters < 4177918\\r\\n\\r\\n                  Format will immediately stop processing if it decides that\\r\\n                  the above requirements cannot be met using the specified\\r\\n                  cluster size.\\r\\n\\r\\n                  NTFS compression is not supported for allocation unit sizes\\r\\n                  above 4096.\\r\\n\\r\\n  /F:size         Specifies the size of the floppy disk to format (1.44)\\r\\n": 1,
                "section=.rsrc type=utf16le string=                  180, 320, 360, 640, 720, 1.2, 1.23, 1.44, 2.88, or 20.8).\\r\\n": 1,
                "section=.rsrc type=utf16le string=An incorrect volume label was entered for this drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /T:tracks       Specifies the number of tracks per disk side.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /N:sectors      Specifies the number of sectors per track.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /1              Formats a single side of a floppy disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /4              Formats a 5.25-inch 360K floppy disk in a\\r\\n                  high-density drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /8              Formats eight sectors per track.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /X              Forces the volume to dismount first if necessary.  All opened\\r\\n                  handles to the volume would no longer be valid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot format a CD-ROM drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot format a RAM DISK drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Please use the /FS switch to specify the file system\\r\\nyou wish to use on this volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Format failed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot format.  This volume is write protected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nWARNING!  The %1 file system is not enabled.\\r\\nWould you like to enable it (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThe file system will be enabled when you restart the system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFORMAT cannot enable the file system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume is too small for the specified file system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creating file system structures.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 FORMAT does not support user selected allocation unit sizes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The device is busy.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified format cannot be mastered on 2.88MB drives.\\r\\n": 1,
                "section=.rsrc type=utf16le string=FORMAT does not support the HPFS file system type.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Allocation unit size changed to %1 bytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Allocation unit size must be less than or equal to 64K.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Number of clusters exceeds 32 bits.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot determine the number of sectors on this volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nPreinstallation completed successfully.  Press any key to\\r\\nshut down/reboot.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nConvert will take some time to process the files on the volume.\\r\\nWhen this phase of conversion is complete, the computer will restart.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bits in each FAT entry.\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  The cluster size chosen by the system is %1 bytes which\\r\\ndiffers from the specified cluster size.\\r\\nProceed with Format using the cluster size chosen by the\\r\\nsystem (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  The cluster size chosen by the system is %1 bytes which\\r\\ndiffers from the specified cluster size.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified cluster size is too big for %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume is too big for %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume is too small for %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Failed to write to the root folder.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Failed to initialize the volume label.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Initializing the File Allocation Table (FAT)...\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  The cluster size for this volume, 64K bytes, may cause\\r\\napplication compatibility problems, particularly with setup applications.\\r\\nThe volume must be less than 2048 MB in size to change this if the\\r\\ndefault cluster size is being used.\\r\\nProceed with Format using a 64K cluster (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  The cluster size for this volume, 64K bytes, may cause\\r\\napplication compatibility problems, particularly with setup applications.\\r\\nThe volume must be less than 2048 MB in size to change this if the\\r\\ndefault cluster size is being used.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Environmental variable FORMAT_SECTORS error.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFormat cannot run because the volume is in use by another\\r\\nprocess.  Format may run if this volume is dismounted first.\\r\\nALL OPENED HANDLES TO THIS VOLUME WOULD THEN BE INVALID.\\r\\nWould you like to force a dismount on this volume? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=There is no media in the drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The given volume name does not have a mount point or drive letter.\\r\\n": 3,
                "section=.rsrc type=utf16le string=Invalid drive specification.\\r\\n": 3,
                "section=.rsrc type=utf16le string=The specified cluster size is too small. The minimum valid\\r\\ncluster size value for this drive is %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Floppy disk is too small to hold the FAT32 file system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTFS file system is not supported on this device.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified cluster size is too small for %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Set number of sectors on drive to %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /R:revision     UDF only: Forces the format to a specific UDF version\\r\\n                  (2.00, 2.01).  The default revision is 2.01.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This device cannot be formatted in quick mode.\\r\\nProceed with unconditional format (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Communication failure with device.  Format failed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Format failed due to timeout.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This device cannot be formatted in quick mode.\\r\\nAn unconditional format will be performed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This device requires proprietary format utility from manufacturer.\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  This device may not work properly if /A option is specified.\\r\\nProceed (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  This device may not work properly since /A option is specified.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create the MEMSTICK.IND file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=FAT32 file system is not supported on this device.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This device does not support the /F option.\\r\\n": 1,
                "section=.rsrc type=utf16le string=System Partition is not allowed to be formatted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTFS file system is not supported on this device optimized for removal.\\r\\nTo change the way this device is optimized, select the Policies tab in\\r\\nthe device's property sheet.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot lock the drive.  The volume is still in use.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot read boot sector.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume Serial Number is %1-%2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume label (11 characters, ENTER for none)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid characters in volume label\\r\\n": 1,
                "section=.rsrc type=utf16le string=There are no readable file allocation tables (FAT).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Some file allocation tables (FAT) are unreadable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot write boot sector.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Some file allocation tables (FAT) are unwriteable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB total disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB are available.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Disk not formatted or not FAT.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Required parameter missing -\\r\\n": 1,
                "section=.rsrc type=utf16le string=The type of the file system is %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The new file system is %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An error occurred while running Format.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 is not available for %2 drives.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot determine file system of drive %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot dismount the drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 is not a complete name.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Yes\\r\\n": 1,
                "section=.rsrc type=utf16le string=No\\r\\n": 1,
                "section=.rsrc type=utf16le string=Disk is not formatted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Specified drive does not exist.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid parameter - %1\\r\\n": 5,
                "section=.rsrc type=utf16le string=Out of memory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Access denied - %1\\r\\n": 4,
                "section=.rsrc type=utf16le string=Access denied.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot lock current drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid volume label\\r\\n": 1,
                "section=.rsrc type=utf16le string=The disk is too large to format for the specified file system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume label (ENTER for none)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nChkdsk cannot run because the volume is in use by another\\r\\nprocess.  Would you like to schedule this volume to be\\r\\nchecked the next time the system restarts? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nChkdsk could not schedule this volume to be checked\\r\\nthe next time the system restarts.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThis volume will be checked the next time the system restarts.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Compression is not available for %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot enable compression for the volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Compression is not supported on volumes with clusters larger than\\r\\n4096 bytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot unlock the drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nChkdsk cannot run because the volume is in use by another\\r\\nprocess.  Chkdsk may run if this volume is dismounted first.\\r\\nALL OPENED HANDLES TO THIS VOLUME WOULD THEN BE INVALID.\\r\\nWould you like to force a dismount on this volume? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume dismounted.  All opened handles to this volume are now invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nChkdsk cannot dismount the volume because it is a system drive or\\r\\nthere is an active paging file on it.  Would you like to schedule\\r\\nthis volume to be checked the next time the system restarts? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 MB total disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 MB are available.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Errors in file allocation table (FAT) corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Extended attribute file has handle.  Handle removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Extended attribute file contains no extended attributes.  File deleted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Erasing invalid label.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 bytes in extended attributes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unreadable extended attribute header.\\r\\nCannot check extended attribute log.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Extended attribute log is unintelligible.\\r\\nIgnore log and continue? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unused, unreadable, or unwriteable portion of extended attribute file removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Total size entry for extended attribute set at cluster %1 corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Need count entry for extended attribute set at cluster %1 corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Extended attribute file is unsorted.\\r\\nSorting extended attribute file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient space in extended attribute file for its header.\\r\\nAttempting to allocate more disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to correct disk error.\\r\\nPlease free some disk space and run CHKDSK again.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Bad clusters in extended attribute file header relocated.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Errors in extended attribute file header corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=More than one dot entry in folder %1.  Entry removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Dot entry found in root folder.  Entry removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Dot-dot entry found in root folder.  Entry removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Dot entry in folder %1 has incorrect link.  Link corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Dot-dot entry in folder %1 has incorrect link.  Link corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=More than one %1 entry in folder %2.  Entry removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Folder %1 causes cycle in folder structure.\\r\\nFolder entry removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Folder %1 has bad clusters.\\r\\nBad clusters removed from folder.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Folder %1 is entirely unreadable.\\r\\nFolder entry removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Folder truncated.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cross link resolved by copying.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to copy cross-linked portion.\\r\\nFile being truncated.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1  Invalid name.  Folder entry removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1  Invalid time stamp.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1  Folder has non-zero file size.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1  Unrecognized extended attribute handle.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1  Has handle extended attribute set belonging to another file.\\r\\n    Handle removed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unused extended attribute set with handle %1 deleted from\\r\\nextended attribute file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Extended attribute set with handle %1 owner changed\\r\\nfrom %2 to %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Bad links in lost chain at cluster %1 corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Lost chain cross-linked at cluster %1.  Orphan truncated.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to recover lost data.\\r\\n": 3,
                "section=.rsrc type=utf16le string=Error in extended attribute log.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 Errors in . and/or .. corrected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=More than one %1 entry in folder %2.\\r\\nRenamed to %3 but still could not resolve the name conflict.\\r\\n": 1,
                "section=.rsrc type=utf16le string=More than one %1 entry in folder %2.\\r\\nRenamed to %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 may be an invalid name in folder %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Corrected name %1 in folder %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid media byte.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Repaired extended attributes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Bad sectors found.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Detected minor inconsistencies on the drive.  This is not a corruption.\\r\\n": 2,
                "section=.rsrc type=utf16le string=Cleaning up minor inconsistencies on the drive.\\r\\n": 2,
                "section=.rsrc type=utf16le string=Creates, changes, or deletes the volume label of a disk.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=LABEL [drive:][label]\\r\\nLABEL [/MP] [volume] [label]\\r\\n\\r\\n  drive:          Specifies the drive letter of a drive.\\r\\n  label           Specifies the label of the volume.\\r\\n  /MP             Specifies that the volume should be treated as a\\r\\n                  mount point or volume name.\\r\\n  volume          Specifies the drive letter (followed by a colon),\\r\\n                  mount point, or volume name.  If volume name is specified,\\r\\n                  the /MP flag is unnecessary.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume in drive %1 has no label\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume in drive %1 is %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nDelete current volume label (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot change label on this volume.  The request is not supported.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot change label.  This volume is write protected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume label cannot be added because the root directory on this volume is full.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume label change cancelled.\\r\\n": 1,
                "section=.rsrc type=utf16le string=File not found - %1\\r\\n": 3,
                "section=.rsrc type=utf16le string=Path not found - %1\\r\\n": 3,
                "section=.rsrc type=utf16le string=Parameter format not correct -\\r\\n": 1,
                "section=.rsrc type=utf16le string=Not resetting system file - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Not resetting hidden file - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1  %2%3%4     %5\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays or changes file attributes.\\r\\n\\r\\nATTRIB [+R | -R] [+A | -A ] [+S | -S] [+H | -H] [drive:][path][filename]\\r\\n       [/S [/D]]\\r\\n\\r\\n  +   Sets an attribute.\\r\\n  -   Clears an attribute.\\r\\n  R   Read-only file attribute.\\r\\n  A   Archive file attribute.\\r\\n  S   System file attribute.\\r\\n  H   Hidden file attribute.\\r\\n  [drive:][path][filename]\\r\\n      Specifies a file or files for attrib to process.\\r\\n  /S  Processes matching files in the current folder\\r\\n      and all subfolders.\\r\\n  /D  Processes folders as well.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid switch - %1\\r\\n": 4,
                "section=.rsrc type=utf16le string=Unable to change attribute - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=The /D switch is only valid with the /S switch.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Do not specify filename(s)\\r\\nCommand Format: DISKCOPY [drive1: [drive2:]] [/1] [/V]\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInvalid drive specification.\\r\\nThe specified drive does not exist\\r\\nor is non-removable.\\r\\n": 2,
                "section=.rsrc type=utf16le string=\\r\\nCannot DISKCOPY to or from\\r\\na network drive\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFormatting while copying\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInsert SOURCE disk in drive %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInsert TARGET disk in drive %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Make sure a disk is inserted into\\r\\nthe drive and the drive door is closed\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThe target disk may be unusable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThe target disk is unusable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCopy another disk (Y/N)?  %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCopying %1 tracks\\r\\n%2 sectors per track, %3 side(s)\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThe drive types or disk types\\r\\nare not compatible.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nUnrecoverable read error on drive %1\\r\\nside %2, track %3\\r\\n": 2,
                "section=.rsrc type=utf16le string=\\r\\nUnrecoverable write error on drive %1\\r\\nside %2, track %3\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCopy process ended\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nSOURCE disk bad or incompatible.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nTARGET disk bad or incompatible.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Copies the contents of one floppy disk to another.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=DISKCOPY [drive1: [drive2:]] [/V]\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=  /V   Verifies that the information is copied correctly.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=The two floppy disks must be the same type.\\r\\nYou may specify the same drive for drive1 and drive2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInsert SOURCE disk in drive %1\\r\\n\\r\\nInsert TARGET disk in drive %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unrecognized format.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Only an administrator can copy this disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot copy disk larger than %1 megabytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unrecognized media.  Please insert the correct media into drive %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There is no disk in the drive.  Please insert a disk into drive %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The disk in drive %1 is write-protected.  Please use a writeable disk.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Do not specify filename(s)\\r\\nCommand format: DISKCOMP [drive1: [drive2:]] [/1] [/8]\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInsert FIRST disk in drive %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInsert SECOND disk in drive %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFIRST disk is bad or incompatible\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nSECOND disk is bad or incompatible\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCompare another disk (Y/N) ? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nComparing %1 tracks\\r\\n%2 sectors per track, %3 side(s)\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThe drive types or disk types are not compatible.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCompare error on\\r\\nside %1, track %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Make sure a disk is inserted into\\r\\nthe drive and the drive door is closed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCompare process ended.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCompare OK\\r\\n": 1,
                "section=.rsrc type=utf16le string=Compares the contents of two floppy disks.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=DISKCOMP [drive1: [drive2:]]\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid switch - /%1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid path - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=No subfolders exist %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Folder PATH listing\\r\\n": 1,
                "section=.rsrc type=utf16le string=Folder PATH listing for volume %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume serial number is %1-%2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume serial number is %1 %2:%3\\r\\n": 1,
                "section=.rsrc type=utf16le string=Graphically displays the folder structure of a drive or path.\\r\\n\\r\\nTREE [drive:][path] [/F] [/A]\\r\\n\\r\\n   /F   Display the names of the files in each folder.\\r\\n   /A   Use ASCII instead of extended characters.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Parameter format not correct - %1\\r\\n": 2,
                "section=.rsrc type=utf16le string=Too many parameters - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid drive specification\\r\\n": 2,
                "section=.rsrc type=utf16le string=FIND:  %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=FIND: Incorrect Windows XP version\\r\\n": 1,
                "section=.rsrc type=utf16le string=FIND: Invalid switch\\r\\n": 1,
                "section=.rsrc type=utf16le string=FIND: Parameter format not correct\\r\\n": 1,
                "section=.rsrc type=utf16le string=Searches for a text string in a file or files.\\r\\n\\r\\nFIND [/V] [/C] [/N] [/I] [/OFF[LINE]] \"string\" [[drive:][path]filename[ ...]]\\r\\n\\r\\n  /V         Displays all lines NOT containing the specified string.\\r\\n  /C         Displays only the count of lines containing the string.\\r\\n  /N         Displays line numbers with the displayed lines.\\r\\n  /I         Ignores the case of characters when searching for the string.\\r\\n  /OFF[LINE] Do not skip files with offline attribute set.\\r\\n  \"string\"   Specifies the text string to find.\\r\\n  [drive:][path]filename\\r\\n             Specifies a file or files to search.\\r\\n\\r\\nIf a path is not specified, FIND searches the text typed at the prompt\\r\\nor piped from another command.\\r\\n": 1,
                "section=.rsrc type=utf16le string=FIND: Required parameter missing\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n---------- %1: %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n---------- %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=[%1]%2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient memory\\r\\n": 2,
                "section=.rsrc type=utf16le string=Unable to read file\\r\\n": 1,
                "section=.rsrc type=utf16le string=Files with offline attribute were skipped.\\r\\nUse /OFFLINE for not skipping such files.\\r\\n": 3,
                "section=.rsrc type=utf16le string=Compares two files or sets of files and displays the differences between\\r\\nthem\\r\\n\\r\\n\\r\\nFC [/A] [/C] [/L] [/LBn] [/N] [/OFF[LINE]] [/T] [/U] [/W] [/nnnn]\\r\\n   [drive1:][path1]filename1 [drive2:][path2]filename2\\r\\nFC /B [drive1:][path1]filename1 [drive2:][path2]filename2\\r\\n\\r\\n  /A         Displays only first and last lines for each set of differences.\\r\\n  /B         Performs a binary comparison.\\r\\n  /C         Disregards the case of letters.\\r\\n  /L         Compares files as ASCII text.\\r\\n  /LBn       Sets the maximum consecutive mismatches to the specified\\r\\n             number of lines.\\r\\n  /N         Displays the line numbers on an ASCII comparison.\\r\\n  /OFF[LINE] Do not skip files with offline attribute set.\\r\\n  /T         Does not expand tabs to spaces.\\r\\n  /U         Compare files as UNICODE text files.\\r\\n  /W         Compresses white space (tabs and spaces) for comparison.\\r\\n  /nnnn      Specifies the number of consecutive lines that must match\\r\\n             after a mismatch.\\r\\n  [drive1:][path1]filename1\\r\\n             Specifies the first file or set of files to compare.\\r\\n  [drive2:][path2]filename2\\r\\n             Specifies the second file or set of files to compare.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=FC: Incompatible Switches\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=FC: Invalid Switch\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=FC: Insufficient number of file specifications\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Comparing files %1 and %2\\r\\n": 2,
                "section=.rsrc type=utf16le string=FC: cannot open %1 - No such file or folder\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1      %2\\r\\nCould not expand second file name so as to match first\\r\\n\\r\\n": 2,
                "section=.rsrc type=utf16le string=FC: no differences encountered\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=File(s) not found : %1\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1:  %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=***** %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=*****\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=FC: %1 longer than %2\\r\\n\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Resync Failed.  Files are too different.\\r\\n": 1,
                "section=.rsrc type=utf16le string=FC: Unable to open %1.  File unavailable for read access.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=FC: Incorrect Windows XP Version\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=...\\r\\n": 1,
                "section=.rsrc type=utf16le string=  ...\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1: %2 %3\\r\\n": 1,
                "section=.rsrc type=utf16le string=FC: Out of memory\\r\\n": 1,
                "section=.rsrc type=utf16le string=Compares the contents of two files or sets of files.\\r\\n\\r\\nCOMP [data1] [data2] [/D] [/A] [/L] [/N=number] [/C] [/OFF[LINE]]\\r\\n\\r\\n  data1      Specifies location and name(s) of first file(s) to compare.\\r\\n  data2      Specifies location and name(s) of second files to compare.\\r\\n  /D         Displays differences in decimal format.\\r\\n  /A         Displays differences in ASCII characters.\\r\\n  /L         Displays line numbers for differences.\\r\\n  /N=number  Compares only the first specified number of lines in each file.\\r\\n  /C         Disregards case of ASCII letters when comparing files.\\r\\n  /OFF[LINE] Do not skip files with offline attribute set.\\r\\n\\r\\nTo compare sets of files, use wildcards in data1 and data2 parameters.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Files compare OK\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=No memory available.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Can't find/open file: %1\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Can't read file: %1\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Bad command line syntax\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Bad numeric argument:\\r\\n%1\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Compare error at %1 %2\\r\\nfile1 = %3\\r\\nfile2 = %4\\r\\n": 1,
                "section=.rsrc type=utf16le string=Name of first file to compare: %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Name of second file to compare: %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Option: %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Comparing %1 and %2...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Files are different sizes.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Format for /n switch is /n=XXXX\\r\\n": 1,
                "section=.rsrc type=utf16le string=Compare more files (Y/N) ? %0\\r\\n": 1,
                "section=.rsrc type=utf16le  mismatches - ending compare\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Incorrect Windows XP version\\r\\n\\r\\n": 2,
                "section=.rsrc type=utf16le string=Unexpected end of file\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid switch - %1\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFile1 only has %1 lines\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFile2 only has %1 lines\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=*.*%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=OFFSET%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=LINE%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFile not found\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCannot RECOVER an ASSIGNed or SUBSTed drive\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInvalid drive or file name\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCannot RECOVER a network drive\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n%1 file(s) recovered.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n%1 of %2 bytes recovered.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nPress ENTER to begin recovery of the file on drive %1\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCannot read the file allocation table (FAT).\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCannot write the file allocation table (FAT).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Recovers readable information from a bad or defective disk.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=RECOVER [drive:][path]filename\\r\\n": 1,
                "section=.rsrc type=utf16le string=RECOVER drive:\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Consult the online Command Reference in Windows XP Help\\r\\nbefore using the RECOVER command.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Write error.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Internal consistency error.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Read error.\\r\\n": 1,
                "section=.rsrc type=utf16le string=RECOVER on an entire volume is no longer supported.\\r\\nTo get equivalent functionality use CHKDSK.\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTFS RECOVER has detected that the volume is corrupt.  Run CHKDSK /f\\r\\nto fix it.\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTFS Recover could not write elementary disk structures.  The volume\\r\\nmay be corrupt; run CHKDSK /f to fix it.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Files on this volume cannot be recovered with this version of UNTFS.DLL.\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTFS RECOVER cannot be used to recover system files. Use CHKDSK instead.\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTFS RECOVER failed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Switch %1 is not implemented\\r\\n": 1,
                "section=.rsrc type=utf16le string=No file to print\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to initialize device %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Can't find file %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 is currently being printed\\r\\n": 1,
                "section=.rsrc type=utf16le string=Prints a text file.\\r\\n\\r\\nPRINT [/D:device] [[drive:][path]filename[...]]\\r\\n\\r\\n   /D:device   Specifies a print device.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Provides help information for Windows XP commands.\\r\\n\\r\\nHELP [command]\\r\\n\\r\\n    command - displays help information on that command.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Help file could not be found.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error reading help file.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n\\r\\nFor more information on a specific command, type HELP command-name.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This command is not supported by the help utility.  Try \"%1 /?\".\\r\\n": 1,
                "section=.rsrc type=utf16le string=@ %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=cmd /c %1 /? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 /? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=--- MORE ---%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\help%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=MORE%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/E%0\\r\\n": 2,
                "section=.rsrc type=utf16le string=/C%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/P%0\\r\\n": 3,
                "section=.rsrc type=utf16le string=/S%0\\r\\n": 3,
                "section=.rsrc type=utf16le string=/?%0\\r\\n": 3,
                "section=.rsrc type=utf16le string=/H%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=+*%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/ECPSH?%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/-%0\\r\\n": 3,
                "section=.rsrc type=utf16le string=-- More %1%2%3 -- %4%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=(%1%%)%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=[Line: %1]%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=[Options: psfq=<space><ret>]%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Lines: %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=P%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=S%0\\r\\n": 1,
                "section=.rsrc type=utf16le string==%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Q%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=?%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=H%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=F%0\\r\\n": 2,
                "section=.rsrc type=utf16le string=Displays output one screen at a time.\\r\\n\\r\\nMORE [/E [/C] [/P] [/S] [/Tn] [+n]] < [drive:][path]filename\\r\\ncommand-name | MORE [/E [/C] [/P] [/S] [/Tn] [+n]]\\r\\nMORE /E [/C] [/P] [/S] [/Tn] [+n] [files]\\r\\n\\r\\n    [drive:][path]filename  Specifies a file to display one\\r\\n                            screen at a time.\\r\\n\\r\\n    command-name            Specifies a command whose output\\r\\n                            will be displayed.\\r\\n\\r\\n    /E      Enable extended features\\r\\n    /C      Clear screen before displaying page\\r\\n    /P      Expand FormFeed characters\\r\\n    /S      Squeeze multiple blank lines into a single line\\r\\n    /Tn     Expand tabs to n spaces (default 8)\\r\\n\\r\\n            Switches can be present in the MORE environment\\r\\n            variable.\\r\\n\\r\\n    +n      Start displaying the first file at line n\\r\\n\\r\\n    files   List of files to be displayed. Files in the list\\r\\n            are separated by blanks.\\r\\n\\r\\n    If extended features are enabled, the following commands\\r\\n    are accepted at the -- More -- prompt:\\r\\n\\r\\n    P n     Display next n lines\\r\\n    S n     Skip next n lines\\r\\n    F       Display next file\\r\\n    Q       Quit\\r\\n    =       Show line number\\r\\n    ?       Show help line\\r\\n    <space> Display next page\\r\\n    <ret>   Display next line\\r\\n": 1,
                "section=.rsrc type=utf16le string=Internal error.\\r\\n": 2,
                "section=.rsrc type=utf16le string=Too many arguments in command line.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Not enough memory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot access file %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid registry entry.\\r\\n": 1,
                "section=.rsrc type=utf16le string=/A%0\\r\\n": 2,
                "section=.rsrc type=utf16le string=/R%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/U%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/W%0\\r\\n": 2,
                "section=.rsrc type=utf16le string=/APRSUW?%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Replacing %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Adding %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 file(s) replaced\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 file(s) added\\r\\n": 1,
                "section=.rsrc type=utf16le string=No files replaced\\r\\n": 1,
                "section=.rsrc type=utf16le string=No files added\\r\\n": 1,
                "section=.rsrc type=utf16le string=Press any key to continue . . .\\r\\n": 1,
                "section=.rsrc type=utf16le string=Replace %1? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Add %1? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Replaces files.\\r\\n\\r\\nREPLACE [drive1:][path1]filename [drive2:][path2] [/A] [/P] [/R] [/W]\\r\\nREPLACE [drive1:][path1]filename [drive2:][path2] [/P] [/R] [/S] [/W] [/U]\\r\\n\\r\\n  [drive1:][path1]filename Specifies the source file or files.\\r\\n  [drive2:][path2]         Specifies the directory where files are to be\\r\\n                           replaced.\\r\\n  /A                       Adds new files to destination directory. Cannot\\r\\n                           use with /S or /U switches.\\r\\n  /P                       Prompts for confirmation before replacing a file or\\r\\n                           adding a source file.\\r\\n  /R                       Replaces read-only files as well as unprotected\\r\\n                           files.\\r\\n  /S                       Replaces files in all subdirectories of the\\r\\n                           destination directory. Cannot use with the /A\\r\\n                           switch.\\r\\n  /W                       Waits for you to insert a disk before beginning.\\r\\n  /U                       Replaces (updates) only files that are older than\\r\\n                           source files. Cannot use with the /A switch.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Incorrect Windows version\\r\\n": 1,
                "section=.rsrc type=utf16le string=Source path required\\r\\n": 1,
                "section=.rsrc type=utf16le string=File cannot be copied onto itself\\r\\n": 2,
                "section=.rsrc type=utf16le string=Insufficient disk space\\r\\n": 2,
                "section=.rsrc type=utf16le string=No files found - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Extended Error %1\\r\\n": 2,
                "section=.rsrc type=utf16le string=Parse Error %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Out of memory\\r\\n": 2,
                "section=.rsrc type=utf16le string=Invalid parameter combination\\r\\n": 1,
                "section=.rsrc type=utf16le string=The /Z and /O (or /X) options conflict: cannot copy security\\r\\nin restartable mode.\\r\\n": 1,
                "section=.rsrc type=utf16le string=/D:*%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/M%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/V%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=/AEMPSVW?%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid path\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot perform a cyclic copy\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid date\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create directory\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot XCOPY from a reserved device\\r\\n": 1,
                "section=.rsrc type=utf16le string=Access denied\\r\\n": 1,
                "section=.rsrc type=utf16le string=Too many open files\\r\\n": 1,
                "section=.rsrc type=utf16le string=General failure\\r\\n": 1,
                "section=.rsrc type=utf16le string=Sharing violation\\r\\n": 1,
                "section=.rsrc type=utf16le string=Lock violation\\r\\n": 1,
                "section=.rsrc type=utf16le string=Path not found\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid number of parameters\\r\\n": 2,
                "section=.rsrc type=utf16le string=Unable to create directory - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=File creation error - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid switch\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Path, not all directories/files copied\\r\\n": 1,
                "section=.rsrc type=utf16le string=Parse Error\\r\\n": 2,
                "section=.rsrc type=utf16le string=Write protect error accessing drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Copies files and directory trees.\\r\\n\\r\\nXCOPY source [destination] [/A | /M] [/D[:date]] [/P] [/S [/E]] [/V] [/W]\\r\\n                           [/C] [/I] [/Q] [/F] [/L] [/G] [/H] [/R] [/T] [/U]\\r\\n                           [/K] [/N] [/O] [/X] [/Y] [/-Y] [/Z]\\r\\n                           [/EXCLUDE:file1[+file2][+file3]...]\\r\\n\\r\\n  source       Specifies the file(s) to copy.\\r\\n  destination  Specifies the location and/or name of new files.\\r\\n  /A           Copies only files with the archive attribute set,\\r\\n               doesn't change the attribute.\\r\\n  /M           Copies only files with the archive attribute set,\\r\\n               turns off the archive attribute.\\r\\n  /D:m-d-y     Copies files changed on or after the specified date.\\r\\n               If no date is given, copies only those files whose\\r\\n               source time is newer than the destination time.\\r\\n  /EXCLUDE:file1[+file2][+file3]...\\r\\n               Specifies a list of files containing strings.  Each string\\r\\n               should be in a separate line in the files.  When any of the\\r\\n               strings match any part of the absolute path of the file to be\\r\\n               copied, that file will be excluded from being copied.  For\\r\\n               example, specifying a string like \\obj\\ or .obj will exclude\\r\\n               all files underneath the directory obj or all files with the\\r\\n               .obj extension respectively.\\r\\n  /P           Prompts you before creating each destination file.\\r\\n  /S           Copies directories and subdirectories except empty ones.\\r\\n  /E           Copies directories and subdirectories, including empty ones.\\r\\n               Same as /S /E. May be used to modify /T.\\r\\n  /V           Verifies each new file.\\r\\n  /W           Prompts you to press a key before copying.\\r\\n  /C           Continues copying even if errors occur.\\r\\n  /I           If destination does not exist and copying more than one file,\\r\\n               assumes that destination must be a directory.": 1,
                "section=.rsrc type=utf16le string=\\n  /Q           Does not display file names while copying.\\r\\n  /F           Displays full source and destination file names while copying.\\r\\n  /L           Displays files that would be copied.\\r\\n  /G           Allows the copying of encrypted files to destination that does\\r\\n               not support encryption.\\r\\n  /H           Copies hidden and system files also.\\r\\n  /R           Overwrites read-only files.\\r\\n  /T           Creates directory structure, but does not copy files. Does not\\r\\n               include empty directories or subdirectories. /T /E includes\\r\\n               empty directories and subdirectories.\\r\\n  /U           Copies only files that already exist in destination.\\r\\n  /K           Copies attributes. Normal Xcopy will reset read-only attributes.\\r\\n  /N           Copies using the generated short names.\\r\\n  /O           Copies file ownership and ACL information.\\r\\n  /X           Copies file audit settings (implies /O).\\r\\n  /Y           Suppresses prompting to confirm you want to overwrite an\\r\\n               existing destination file.\\r\\n  /-Y          Causes prompting to confirm you want to overwrite an\\r\\n               existing destination file.\\r\\n  /Z           Copies networked files in restartable mode.\\r\\n\\r\\nThe switch /Y may be preset in the COPYCMD environment variable.\\r\\nThis may be overridden with /-Y on the command line.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Press any key when ready to begin copying file(s)%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Does %1 specify a file name\\r\\nor directory name on the target\\r\\n(F = file, D = directory)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 File(s) copied\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 -> %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInsufficient disk space on current disk.\\r\\nInsert another disk and type <Return> to continue... %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=D%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Y%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=N%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 File(s)\\r\\n": 1,
                "section=.rsrc type=utf16le string=File verification failed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=A%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Overwrite %1 (Yes/No/All)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=File path is too long to be displayed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient privilege to perform the operation or access denied.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Encryption failed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Security Information not supported by destination file system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unknown error.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Source directory may be changing.\\r\\nXCOPY may not be able to copy all files or directories within the directory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient stack space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 -> %2 (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=LPT%1: rerouted to COM%2:\\r\\n": 1,
                "section=.rsrc type=utf16le string=Active code page for device %1 is %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Configures system devices.\\r\\n\\r\\nSerial port:       MODE COMm[:] [BAUD=b] [PARITY=p] [DATA=d] [STOP=s]\\r\\n                                [to=on|off] [xon=on|off] [odsr=on|off]\\r\\n                                [octs=on|off] [dtr=on|off|hs]\\r\\n                                [rts=on|off|hs|tg] [idsr=on|off]\\r\\n\\r\\nDevice Status:     MODE [device] [/STATUS]\\r\\n\\r\\nRedirect printing: MODE LPTn[:]=COMm[:]\\r\\n\\r\\nSelect code page:  MODE CON[:] CP SELECT=yyy\\r\\n\\r\\nCode page status:  MODE CON[:] CP [/STATUS]\\r\\n\\r\\nDisplay mode:      MODE CON[:] [COLS=c] [LINES=n]\\r\\n\\r\\nTypematic rate:    MODE CON[:] [RATE=r DELAY=d]\\r\\n": 1,
                "section=.rsrc type=utf16le string=Status for device *:%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Baud:            %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Parity:          %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Data Bits:       %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Stop Bits:       %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Timeout:         %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    XON/XOFF:        %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    CTS handshaking: %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    DSR handshaking: %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    DSR sensitivity: %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    DTR circuit:     %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    RTS circuit:     %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Lines:          %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Columns:        %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Code page:      %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Printer output is being rerouted to serial port %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Printer output is not being rerouted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Keyboard rate:  %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=    Keyboard delay: %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=To change printer settings use the Printers option in Control Panel\\r\\n": 1,
                "section=.rsrc type=utf16le string=Incorrect operating system version\\r\\n": 1,
                "section=.rsrc type=utf16le string=Illegal device name - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid baud rate specified\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1: not rerouted\\r\\n": 1,
                "section=.rsrc type=utf16le string=Failure to access device: %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Code page operation not supported on this device\\r\\n": 1,
                "section=.rsrc type=utf16le string=Current keyboard does not support this code page\\r\\n": 1,
                "section=.rsrc type=utf16le string=Extended error %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified options are not supported by this serial device\\r\\n": 1,
                "section=.rsrc type=utf16le string=The screen cannot be set to the number of lines and columns specified.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The device cannot be set to the specified number of lines and/or columns.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot stop printer rerouting at this time.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot reroute printer output to serial device %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid keyboard rate\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid keyboard delay\\r\\n": 1,
                "section=.rsrc type=utf16le string=The number of lines and columns cannot be changed in a full screen.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The code page specified is not valid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified option is not supported.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Default to even parity.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Default to %1 data bits.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Default to %1 stop bits.\\r\\n": 1,
                "section=.rsrc type=utf16le string=No serial port setting changed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This operation is not necessary under Windows XP.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Device %1 is not currently available.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first NTFS boot sector is unreadable.\\r\\nReading second NTFS boot sector instead.\\r\\n": 1,
                "section=.rsrc type=utf16le string=All NTFS boot sectors are unreadable.  Cannot continue.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The second NTFS boot sector is unwriteable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first NTFS boot sector is unwriteable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=All NTFS boot sectors are unwriteable.  Cannot continue.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The NTFS file system does not function on floppy disks.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting corrupt file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting corrupt attribute record (%1, %2)\\r\\nfrom file record segment %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Truncating badly linked attribute records\\r\\nfrom file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Sorting attribute records for file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting duplicate attribute records (%1, %2)\\r\\nfrom file record segment %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleted corrupt attribute list for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleted unreadable attribute list for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleted corrupt attribute list entry\\r\\nwith type code %1 in file %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Truncating corrupt attribute list for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Sorting attribute list for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unreadable master file table.  CHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Corrupt master file table.  CHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Corrupt Attribute Definition Table.\\r\\nCHKDSK is assuming the default.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to determine volume version and state.  CHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=File record segment %1 is unreadable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting orphan file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to hotfix unreadable system file %1.\\r\\nCHKDSK Aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to hotfix unreadable file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=First free byte offset corrected in file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the Master File Table (MFT) mirror.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to repair master file table (MFT) mirror.\\r\\nCHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to record bad clusters.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the master file table's (MFT) DATA attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix master file table (MFT).  CHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the master file table's (MFT) BITMAP attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix volume bitmap.  CHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the Volume Bitmap.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the Attribute Definition Table.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the attribute definition table.\\r\\nCHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the Bad Clusters File.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the bad clusters file.\\r\\nCHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the Boot File.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the boot file.\\r\\nCHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Adding %1 bad clusters to the Bad Clusters File.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n%1 KB total disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB in %2 indexes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB in bad sectors.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB in use by the system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB available on disk.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting error in index %2 for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to correct errors\\r\\nin index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Removing corrupt index %2 in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting directory entries in %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK cannot delete all corrupt directory entries.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is recovering lost files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space for CHKDSK to recover lost files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting error in directory %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Sorting index %2 in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting extended attribute information in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting corrupt extended attribute set in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Incorrect duplicate information in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is creating new root directory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to create new root directory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Recovering orphaned file %1 (%2) into directory file %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Too much lost data to recover it all.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Fixing critical master file table (MFT) files with MFT mirror.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting a minor error in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Corrupt uppercase Table.\\r\\nUsing current system uppercase Table.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot retrieve current system uppercase table.\\r\\nCHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK discovered free space marked as allocated in the\\r\\nmaster file table (MFT) bitmap.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK discovered free space marked as allocated in the volume bitmap.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the uppercase file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the uppercase file.\\r\\nCHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting index entry %3 in index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Verbose output not supported by NTFS CHKDSK.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nWARNING!  F parameter not specified.\\r\\nRunning CHKDSK in read-only mode.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nErrors found.  CHKDSK cannot continue in read-only mode.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting cycles in directory tree.\\r\\nBreaking links between parent file %1 and child file %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting minor file name errors in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Inserting data attribute into file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to insert missing data attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting errors in the Log File.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the log file.\\r\\nCHKDSK aborted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCHKDSK is verifying files (stage %1 of %2)...\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is verifying indexes (stage %1 of %2)...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Index verification completed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=File verification completed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is verifying security descriptors (stage %1 of %2)...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Security descriptor verification completed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Replacing missing or invalid security descriptor for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space for security descriptor for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This volume cannot be checked with this version of UNTFS.DLL.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting an index entry from index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting cross-link for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is verifying file data (stage %1 of %2)...\\r\\n": 1,
                "section=.rsrc type=utf16le string=File data verification completed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Index entries referencing file %1 will not be validated\\r\\nbecause this file contains too many file names.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is resetting recovery information...\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is resetting the log file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is adjusting the size of the log file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK was unable to adjust the size of the log file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cleaning up instance tags for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Fixing corrupt attribute record (%1, %2)\\r\\nin file record segment %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 KB occupied by the log file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Readable file record segment %1 is not writeable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Inserting default quota record into index %2 in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creating a default security descriptor.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to set the quota out of date flag.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Repairing an index entry in index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Inserting an index entry into index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the security descriptors data stream.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to write to attribute %1 of file %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read the security descriptors data stream.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Fixing mirror copy of the security descriptors data stream.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Fixing collation rule value for index %1 of file %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creating index %1 for file %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Repairing the security file record segment.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Repairing the unreadable security descriptors data stream.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the object id file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the quota file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creating object id file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creating quota file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Fixing flags for file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to correct an error in system file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create index %1 for file %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Replacing invalid security id with default security id for file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Multiple quota file found.  Ignoring extra quota files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Multiple object id file found.  Ignoring extra object id files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The size specified for the log file is too big.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The current log file size is %1 KB.\\r\\nThe default log file size for this volume is %2 KB.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The size specified for the log file is too small.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting file name errors in system file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Inserting an index entry with Id %3 into index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting an index entry with Id %3 from index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cleaning up %3 unused index entries from index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Repairing an index entry with id %3 in index %2 of file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting sparse file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting extended attribute set\\r\\ndue to the presence of reparse point in file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting reparse point file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Correcting encrypted file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Multiple Usn Journal file found.  Ignoring extra Usn Journal files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the Usn Journal file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creating Usn Journal file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is verifying Usn Journal...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creating Usn Journal %1 data stream\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the Usn Journal %1 data stream.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Repairing Usn Journal %1 data stream.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read the Usn Journal %1 data stream.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Repairing Usn Journal file record segment.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Usn Journal verification completed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is resetting Usn information...\\r\\n": 1,
                "section=.rsrc type=utf16le string=This version of NTFS volume cannot be downgraded.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is determining if the volume is downgradeable...\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume is downgradeable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is downgrading the volume...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume downgraded.                              %b\\r\\n": 1,
                "section=.rsrc type=utf16le string=Reparse point found in file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Encrypted data stream found in file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Sparse data stream found in file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to change the volume version.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to downgrade the volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Updating the master file table's (MFT) DATA attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Updating the master file table's (MFT) BITMAP attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Updating the Volume Bitmap.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Upgrading and downgrading the volume at the same time will have no effect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Property set found in file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Multiple reparse file found.  Ignoring extra reparse files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to fix the reparse point file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creating reparse point file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Missing object id index entry or duplicate object id detected\\r\\nfor file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space to insert the index entry.\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  I parameter specified.\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  C parameter specified.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Your drive may still be corrupt even after running CHKDSK.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n%1 MB total disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 MB in %2 files.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 MB in %2 indexes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 MB in bad sectors.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 MB in use by the system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 MB available on disk.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to set chkdsk ran flag.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting USN Journal file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK is verifying free space (stage %1 of %2)...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleting duplicate object id from file record segment %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to create a thread with error code %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to collect logged messages.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to obtain a handle to the event log.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Failed to transfer logged messages to the event log with status %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume label is %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to set chkdsk ran once flag.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to clear chkdsk ran once flag.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cleaning up %1 unused security descriptors.\\r\\n": 2,
                "section=.rsrc type=utf16le string=Replacing bad clusters in logfile.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The deleting of the USN Journal is in progress.\\r\\nYour volume cannot be checked at this time.\\r\\nPlease wait a few minutes and try again.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK was unable to adjust the size of the log file\\r\\ndue to too much fragmentation within the volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKDSK was unable to adjust the size of the log file.\\r\\nPlease use the /f parameter as well.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Attribute list found in the log file.\\r\\n": 2,
                "section=.rsrc type=utf16le string=There is not enough disk space to enlarge the logfile to the specified size.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There is not enough disk space to enlarge the logfile to the default size.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The current logfile size is too big.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 MB of additional physical memory is needed\\r\\nto enable windows to check your disk at full speed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Index verification stage will be splitted into %1 passes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows is checking your disk with a slower index verification algorithm\\r\\nas commanded.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Index verification stage cannot be splitted into %1 passes.\\r\\nIt will be reduced.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There are too many files and directories on this volume for windows to\\r\\ncheck your disk at full speed.  Make sure the allowed user address space\\r\\nis set to a maximum.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An attempt to split the index verification stage into %1 or less passes\\r\\nhas failed.  Windows will not be able to check your disk at full speed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Windows cannot adjust the size of the log file due to possible\\r\\ncorruption.  Please run CHKDSK with the /F (fix) option to correct these.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume has 0x%1 file record segments which is more than 32 bits.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file name index present bit is not set for file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The view index present bit is not set for file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system file bit is not set for file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The %2 index is missing from file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=EA Information is incorrect.\\r\\n                 Actual          On Disk\\r\\nPackedEaSize      0x%1            0x%4\\r\\nNeedEaCount       0x%2            0x%5\\r\\nUnpackedEaSize    0x%3            0x%6\\r\\n": 1,
                "section=.rsrc type=utf16le string=The EA INFORMATION attribute is not consistency with the EA DATA attribute\\r\\nfor file 0x%1.  EA INFORMATION equals 0x%2 while EA DATA equals 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The EA INFORMATION is not readable for file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The EA INFORMATION size, 0x%2, in file 0x%1 is incorrect.\\r\\nThe expected size is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The EA DATA is not readable for file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The EA DATA size, 0x%2, in file 0x%1 is incorrect.\\r\\nThe expected size is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1%2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Corrupt EA set for file 0x%1.  The remaining length, 0x%2,\\r\\nis too small.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Corrupt EA set for file 0x%1.  The unpacked total length, 0x%2,\\r\\nis larger than the total data length, 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Corrupt EA set for file 0x%1.  The EA name is of length 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Corrupt EA set for file 0x%1.  The unpacked length, 0x%2,\\r\\nis not the same as the record length, 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The EA Information value length, 0x%1, in file 0x%2 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The EA total packed length, 0x%2, is too large in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The second MFT starting LCN in the boot sector is incorrect.\\r\\nThe actual value is 0x%2 while the expected value is 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse point length, 0x%1, has exceeded a maximum of 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse point length, 0x%1, is less than a minimum of 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to read reparse point data buffer.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Only 0x%1 bytes returned from a read of 0x%d bytes\\r\\nof the reparse data buffer.\\r\\n": 1,
                "section=.rsrc type=utf16le string=ReparseDataLength, 0x%1, inconsistence with the attribute length 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Reparse Tag, 0x%1, is a reserved tag.\\r\\n": 1,
                "section=.rsrc type=utf16le string=File 0x%1 has bad reparse point attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Both reparse point and EA INFORMATION attributes exist in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute definition table length, 0x%1, is not divisible by 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to find child frs 0x%1 with sequence number 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to locate attribute of type 0x%1, lowest vcn 0x%2,\\r\\ninstance tag 0x%3 in file 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The is an attribute list attribute within the attribute list in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The lowest vcn, 0x%2, is not zero for attribute of type 0x%1\\r\\nand instance tag 0x%3 in file 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The lowest vcn, 0x%2, is not zero for attribute of type 0x%1\\r\\nin file 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first attribute of type 0x%1 and instance tag 0x%2\\r\\nin file 0x%3 should not be resident.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2\\r\\nin file 0x%3 should not be resident.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attributes with instance tags 0x%2 and 0x%4 have different\\r\\ntype codes 0x%1 and 0x%3 respectively in file 0x%5.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attributes with same type code 0x%1 but different instance tags\\r\\n0x%2 and 0x%4 have non-contiguous VCN numbers 0x%3 and 0x%5\\r\\nrespectively in file 0x%6.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attributes with same type code 0x%1 but different instance tags\\r\\n0x%2 and 0x%4 have different names %3 and %5\\r\\nrespectively in file 0x%6.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2 in file 0x%5\\r\\nhas allocated length of 0x%3 instead of 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 in file 0x%4 has allocated length\\r\\nof 0x%2 instead of 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file attributes flag 0x%1 in file 0x%3 is incorrect.\\r\\nThe expected value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The sequence number 0x%1 in file 0x%2 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The total allocated size 0x%3 of attribute of type 0x%1 and instance\\r\\ntag 0x%2 in file 0x%5 is incorrect.  The expected value is %4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Read failure with status 0x%1 at offset 0x%2 for 0x%3 bytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Incorrect read at offset 0x%1 for 0x%3 bytes but got 0x%2 bytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Write failure with status 0x%1 at offset 0x%2 for 0x%3 bytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Incorrect write at offset 0x%1 for 0x%3 bytes but wrote 0x%2 bytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The data written out is different from what is being read back\\r\\nat offset 0x%1 for 0x%2 bytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file 0x%1 belongs to parent 0x%3 but got 0x%2 as parent.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file 0x%1 has file name %2 when it should be %3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The multi-sector header with total size 0x%1, USA offset 0x%2,\\r\\nand USA count 0x%3 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USA check value, 0x%2, at block 0x%1 is incorrect.\\r\\nThe expected value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to query LCN from VCN 0x%2 for attribute of type 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Attribute record of type 0x%1 and instance tag 0x%2 is cross linked\\r\\nstarting at 0x%3 for possibly 0x%4 clusters.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Attribute record of type 0x%1 is cross linked starting at\\r\\ncluster 0x%2 for possibly 0x%3 clusters.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute list in file 0x%1 does not contain\\r\\nstandard information attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute list in file 0x%1 indicates the standard information\\r\\nattribute is outside the base file record segment.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index root %2 is missing in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index bitmap %2 is missing in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index bitmap %2 in file 0x%1 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index bitmap %2 is present but there is no corresponding\\r\\nindex allocation attribute in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The length, 0x%2, of the root index %1 in file 0x%4\\r\\nis too small.  The minimum length is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The root index %1 in file 0x%3 is incorrect.\\r\\nThe expected name is %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The collation rule 0x%3 for index root %1 in file 0x%2\\r\\nis incorrect.  The expected value is 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Breaking the parent 0x%1 and child 0x%2\\r\\nfile relationship.  This also makes the child an orphan.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index attribute of type 0x%2 for index root %1\\r\\nin file 0x%4 is incorrect.  The expected value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index %1 is not a known quota index in file 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index %1 is not a known security index in file 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index attribute of type 0x%2 for index root %1\\r\\nin file 0x%3 is not recognized.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index attribute of type 0x%2 for index root %1\\r\\nin file 0x%3 is not indexable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The bytes per index buffer, 0x%2, for index root %1 in file\\r\\n0x%4 is incorrect.  The expected value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The clusters per index buffer, 0x%2, for index root %1 in file\\r\\n0x%4 is incorrect.  The expected value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index allocation value length, 0x%2, for index %1 in file\\r\\n0x%4 is not in multiple of 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index allocation allocated length, 0x%2, for index %1 in file\\r\\n0x%4 is not in multiple of 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first free byte, 0x%2, and bytes available, 0x%3, for\\r\\nroot index %1 in file 0x%4 are not equal.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry offset, 0x%3, of index %1 and VCN 0x%2\\r\\nin file 0x%4 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry offset, 0x%2, of index %1\\r\\nin file 0x%3 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The bytes available, 0x%2, in index header for index %1 in file\\r\\n0x%4 is not equal to 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index header for index %1 and VCN 0x%2 in file 0x%3\\r\\nis not marked as index node.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The VCN 0x%2 of index %1 in file 0x%3 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index bitmap for index %1 in file 0x%2 is invalid or missing.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The VCN 0x%2 of index %1 in file 0x%3 is already in use.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index allocation for index %1 in file 0x%2 is invalid or missing.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The multi-sector header signature for VCN 0x%2 of index %1\\r\\nin file 0x%3 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USA offset 0x%3 of VCN 0x%2 of index %1\\r\\nin file 0x%5 is below 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The VCN 0x%2 of index %1 in file 0x%4 is inconsistence with\\r\\nthe VCN 0x%3 stored inside the index buffer.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The bytes per block, 0x%3, read from index buffer of VCN 0x%2\\r\\nof index %1 in file 0x%4 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USA offset 0x%3 of VCN 0x%2 of index %1\\r\\nin file 0x%4 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USA size 0x%3 of VCN 0x%2 of index %1 in file\\r\\n0x%5 is incorrect.  The expected value is 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index header of index %1 in file 0x%2\\r\\nis marked as index node when it should not.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first free byte, 0x%2, in index header of index %1\\r\\nin file 0x%4 is not equal to 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to query the name of a file name index entry of length 0x%3\\r\\nof index %2 in file 0x%4 with parent 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Index entry %3 of index %2 in file 0x%1 points to unused file 0x%4.\\r\\n": 2,
                "section=.rsrc type=utf16le string=An index entry of index %2 in file 0x%1 points to unused file 0x%3.\\r\\n": 2,
                "section=.rsrc type=utf16le string=The file 0x%4 pointed to by index entry %3 of index %2 with\\r\\nparent file 0x%1 is not a base file record segment.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file 0x%3 pointed to by an index entry of index %2 with\\r\\nparent file 0x%1 is not a base file record segment.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to locate the file name attribute of index entry %3\\r\\nof index %2 with parent 0x%1 in file 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to locate the file name attribute of an index entry\\r\\nof index %2 with parent 0x%1 in file 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The object id index entry in file 0x%1 points to file 0x%2\\r\\nbut the file has no object id in it.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The object id index entry in file 0x%1 points to file 0x%2\\r\\nwhich is not a base file record segment.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The object id in index entry in file 0x%1 is incorrect.\\r\\nThe entry points to file 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The parent 0x%2 in an object id index entry in file 0x%1\\r\\nis incorrect.  The correct value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The object id in file 0x%2 already existed in the object\\r\\nid index in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The object id in file 0x%2 does not appear in the object\\r\\nid index in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse point index entry in file 0x%1 points to file 0x%2\\r\\nwhich is not a base file record segment.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse tag 0x%2 of reparse point index entry in file 0x%1\\r\\nis incorrect.  The correct reparse tag in file 0x%4 is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The parent 0x%2 in the reparse point index entry with tag 0x%4\\r\\nin file 0x%1 is incorrect.  The correct value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse point index entry in file 0x%1 points to file 0x%2\\r\\nbut the file has no reparse point in it.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse point in file 0x%2 does not appear in\\r\\nthe reparse point index in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file name index present bit is set in file 0x%1\\r\\nbut there is no file name index.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The root index %2 in file 0x%1 is missing or invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry length 0x%1 is incorrect.  The maximum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry attribute length 0x%2 of index entry type 0x%1\\r\\nis incorrect.  The correct length is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry data offset 0x%1 and length 0x%2 is\\r\\ninconsistence with the index entry length 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry length is incorrect for index entry type 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry length is too small for index entry type 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume information attribute is missing from file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute record length 0x%1 is too small for attribute of\\r\\ntype 0x%3 and instance tag 0x%4.  The minimum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute form code 0x%1 is invalid for attribute of type 0x%2\\r\\nand instance tag 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2 should be resident.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The standard information attribute length 0x%1 is incorrect.\\r\\nThe expected value is 0x%2 or 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Attribute name is not allowed for attribute of type 0x%1\\r\\nand instance tag 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2 should not be resident.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute name offset for attribute of type 0x%1\\r\\nand instance tag 0x%2 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute name for attribute of type 0x%1 and instance tag 0x%2\\r\\ncontains unicode NULL.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unknown attribute of type 0x%1 and instance tag 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2 should not be indexed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2 should be indexed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The indexable attribute of type 0x%1 and instance tag 0x%2\\r\\nshould not have name.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2 should have a name.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute length 0x%1 for attribute of type 0x%3 and\\r\\ninstance tag 0x%4 is too small.  The minimum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute length 0x%1 for attribute of type 0x%3 and\\r\\ninstance tag 0x%4 is too big.  The maximum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The resident attribute for attribute of type 0x%1 and instance\\r\\ntag 0x%2 is incorrect.  The attribute has value of length 0x%1,\\r\\nand offset 0x%2.  The attribute length is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The resident attribute name is colliding with the resident value for attribute\\r\\nof type 0x%4 and instance tag 0x%5.  The attribute name offset is\\r\\n0x%2, length 0x%1, and the attribute value offset is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The mapping pairs offset 0x%1 for attribute of type 0x%3 and instance\\r\\ntag 0x%4 exceeded the attribute length 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The mapping pairs offset 0x%1 for attribute of type 0x%3 and instance\\r\\ntag 0x%4 is too small.  The minimum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute name is colliding with the mapping pairs for attribute\\r\\nof type %4 and instance tag 0x%5.  The attribute name offset is\\r\\n0x%2, length 0x%1, and the mapping pairs offset is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2 has bad mapping pairs.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to initialize an extent list for attribute type 0x%1 with\\r\\ninstance tag 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The highest VCN 0x%1 of attribute of type 0x%3 and instance\\r\\ntag 0x%4 is incorrect.  The expected value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The non resident attribute of type 0x%4 and instance tag 0x%5 is\\r\\ninconsistent.  The valid data length is 0x%1, file size 0x%2, and\\r\\nallocated length 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The non resident attribute of type 0x%4 is inconsistent.  The valid data\\r\\nlength is 0x%1, file size 0x%2, and allocated length 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The allocated length 0x%1 is not in multiple of 0x%2 for attribute\\r\\nof type 0x%3 and instance tag 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file name value length 0x%1 for attribute of type 0x%3 with\\r\\ninstance tag 0x%4 is too small.  The minimum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%2 and instance tag 0x%3 is inconsistence.\\r\\nThe attribute value length is 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file name length is zero for attribute of type 0x%1\\r\\nand instance tag 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file name in file name value in attribute of type 0x%1 and instance\\r\\ntag %2 contains unicode NULL.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The multi-sector header signature in file 0x%1 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USA offset 0x%1 in file 0x%3 is too small.\\r\\nThe minimum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file record segment size 0x%1 is invalid in file 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USA offset 0x%1 in file 0x%2 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USA size 0x%1 in file 0x%3 is incorrect.\\r\\nThe expected value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first attribute offset 0x%1 in file 0x%2 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The bytes available, 0x%1, in the file record segment header for\\r\\nfile 0x%3 is incorrect.  The expected value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The instance tag 0x%2 of attribute of type 0x%1 in file 0x%3\\r\\nis already in use.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The instance tag 0x%2 of attribute of type 0x%1 in file 0x%4\\r\\nis too large.  The instance tag should be less than 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The standard information attribute in file 0x%1 is missing.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute record offset 0x%1 is too large for attribute of type 0x%3\\r\\nand instance tag 0x%4 in file 0x%5.  The maximum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The record length of attribute of type 0x%1 and instance tag 0x%2\\r\\nin file 0x%3 should not be zero.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The record length 0x%1 of attribute of type 0x%2 and\\r\\ninstance tag 0x%3 in file 0x%4 is not aligned.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The record length 0x%1 is too large for attribute of type 0x%3\\r\\nand instance tag 0x%4 in file 0x%5.  The maximum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first free byte, 0x%1, in file 0x%4 is incorrect.  The number of\\r\\nbytes free in the file record segment is 0x%2 and the total length\\r\\nis 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 and instance tag 0x%2 should be after\\r\\nattribute of type 0x%3 and instance tag 0x%4 in file 0x%5.\\r\\n": 1,
                "section=.rsrc type=utf16le string=All attribute of type 0x%1 and instance tag 0x%2 should be indexed\\r\\nin file 0x%5.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Two identical attributes of type 0x%1 and instance tag 0x%2 are\\r\\nin file 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file name index present bit in file 0x%1 should not be set.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The sparse flag in the standard information attribute in file 0x%1\\r\\nis not set.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The old encrypted flag is being replaced by the new encrypted flag\\r\\nin file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The encrypted flag in standard information attribute in file 0x%1\\r\\nis not set.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse flag in standard information attribute in file 0x%1\\r\\nis not set.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse flag in standard information attribute in file 0x%1\\r\\nshould not be set.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There are more than one NTFS file name attribute in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file name attributes in file 0x%3 has different parents.\\r\\nThe DOS name has 0x%1 as parent.  The NTFS name has 0x%2 as parent.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There are more than one DOS file name attribute in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The DOS file name attribute in file 0x%1 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There is no NTFS file name attribute in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There is no DOS file name attribute in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The DOS and NTFS file name attributes in file 0x%1 are identical.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to setup the attribute list in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute type 0x%1 with name %2 in file 0x%3 is missing.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute of type 0x%1 in file 0x%2 is missing.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The unnamed data attribute in file 0x%1 is missing.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute list in file 0x%1 is missing.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The length, 0x%3, of the attribute list entry with attribute of type\\r\\n0x%1 and instance tag 0x%2 in file 0x%4 is not aligned.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute list entry with attribute of type 0x%1 and instance tag 0x%2\\r\\nin file 0x%6 is incorrect.  The attribute list entry name length is 0x%3,\\r\\nand offset 0x%4.  The attribute list length is 0x%5.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute name offset 0x%3 of attribute list entry with attribute of\\r\\ntype 0x%1 and instance tag 0x%2 in file 0x%5 is too small.\\r\\nThe minimum value is 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute list length 0x%2 in file 0x%3 is incorrect.\\r\\nThe expected value is 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The extent list of the attribute list is crossed linked at 0x%1\\r\\nfor possibly 0x%2 clusters in file 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute list entry with attribute of type 0x%1 and instance tag\\r\\n0x%2 should be after attribute of type 0x%3 and instance tag 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Two identical attribute list entries of type 0x%1 and instance tag 0x%2\\r\\nare found.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute length 0x%3 of attribute of type 0x%1 and name %2 in\\r\\nfile 0x%5 is too small.  The minimum value is 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The sparse flag of attribute of type 0x%1 and name %2 in file\\r\\n0x%3 is not set.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal offset 0x%1 in file 0x%2 is not at a page boundary.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal length 0x%1 in file 0x%3 is too large.\\r\\nThe maximum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal length 0x%1 in file 0x%3 is less than\\r\\nits offset 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The remaining USN block at offset 0x%1 in file 0x%2 is\\r\\nless than a page.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The remaining of an USN page at offset 0x%1 in file 0x%2\\r\\nshould be filled with zeros.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal entry at offset 0x%1 and length 0x%2 crosses\\r\\nthe page boundary.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal entry length 0x%2 at offset 0x%1, in file\\r\\n0x%4 is larger than the remaining length 0x%3 of a page.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal entry length 0x%2 at offset 0x%1 in file\\r\\n0x%4 exceeded the page size 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal entry length 0x%2 at offset 0x%1 in file\\r\\n0x%3 is not aligned.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal entry version %2.%3 at offset 0x%1\\r\\nin file 0x%4 is not recognized.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal entry length 0x%2 at offset 0x%1 in file\\r\\n0x%4 is too small.  The minimum value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The remaining USN page length 0x%2 is too small to fit another\\r\\nUSN Journal entry at offset 0x%1 in file 0x%4.\\r\\nIt needs at least 0x%3 bytes.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN value 0x%1 of USN Journal entry at offset 0x%2\\r\\nin file 0x%3 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal entry at offset 0x%1 in file 0x%4 is not\\r\\nconsistence.  The entry has length of 0x%3 and a file name length of 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN Journal length 0x%1 in file 0x%4 is less the\\r\\nlargest USN encountered, 0x%2, plus eight in file 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security data stream is missing from file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security data stream size 0x%1 should not be less than 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The remaining of a security data stream page starting at offset 0x%1\\r\\nfor 0x%2 bytes contains non-zero.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security data stream entry at offset 0x%1 with length 0x%2\\r\\ncrosses the page boundary.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The length, 0x%2, of the security data stream entry at offset\\r\\n0x%1 is too small.  The minimum value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The length, 0x%2, of the security data stream entry at offset\\r\\n0x%1 exceeded the page size 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security data stream entry at offset 0x%1 does not fit into the\\r\\nremaining length, 0x%2, of a page.  The minimum value is 0x%3.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security descriptor entry with Id 0x%2 at offset 0x%1 is invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security Id 0x%2 of security descriptor entry at offset 0x%1\\r\\nis a duplicate.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The hash value 0x%2 of the security descriptor entry with Id\\r\\n0x%4 at offset 0x%1 is invalid.  The correct value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The offset 0x%2 stored in the security descriptor entry with Id\\r\\n0x%4 at offset 0x%1 is invalid.  The correct value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security descriptor in file 0x%1 is invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security Id 0x%1 in file 0x%2 is invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The data stream with name %1 in file 0x%2 is not recognized.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute definition table length 0x%1 is incorrect.\\r\\nThe correct value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute defintion table content is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cluster zero is missing from the data attribute in boot file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The data attribute is either resident or missing in the log file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to obtain the LCN in data attribute of the MFT mirror.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There is no physical LCN for VCN 0 in data attribute of the MFT mirror.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The data attribute of the MFT mirror is not contiguous for 0x%1 sectors.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The MFT mirror is different from the MFT.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The data attribute is missing from the upcase file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The upcase file length 0x%1 is incorrect.  The expected value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The upcase file content is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The data attribute is either resident or missing in the MFT mirror.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The two index entries of length 0x%1 and 0x%2 are either identical\\r\\nor appear in the wrong order.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first index entry of length 0x%1 is a leaf but it is not in the root.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first index entry of length 0x%1 is a leaf but the previous entry is not.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Current leaf index entry of length 0x%3 is at depth 0x%2 which\\r\\nis different from other leaf index entry which has a depth of 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The down pointer of current index entry with length 0x%1 is invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry length 0x%1 is too large.  The maximum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The allocation attribute does not exist.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Clearing unused security descriptor stream entries.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Mirror security descriptor block different from that of\\r\\nmaster security descriptor at offset 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The attribute defintion table cannot be read.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index buffer at VCN 0x%2 of index %1 in file 0x%3\\r\\ncannot be read.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The MFT mirror starting at cluster 0x%1 for 0x%2 sectors\\r\\ncannot be read.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The security descriptor in file 0x%1 cannot be read.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The upcase table cannot be read.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The USN attrib of type code 0x%1 and name %2 cannot be\\r\\nread in file 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The EA Data value length, 0x%1, in file 0x%2 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The index entry length 0x%2 for index %1 in file 0x%4\\r\\nis too large.  The maximum value is 0x%3.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to query extent list entry 0x%3 from attribute\\r\\nof type 0x%1 and instance tag 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The total allocated size 0x%1 for attribute of type 0x%3 and\\r\\ninstance tag 0x%4 is larger than the allocated length 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to locate attribute with instance tag 0x%2 and segment\\r\\nreference 0x%3.  The expected attribute type is 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The first index entry offset, 0x%2, for index %1 in file 0x%4\\r\\npoints beyond the length, 0x%3, of the index.  VCN is unknown.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Some clusters occupied by attribute of type 0x%1 and instance tag 0x%2\\r\\nin file 0x%3 is already in use.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to setup the child file record segment 0x%2 in file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The parent 0x%3 of index entry %4 of index %2\\r\\nin file 0x%5 is incorrect.  The expected parent is 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file reference 0x%4 of index entry %3 of index %2\\r\\nwith parent 0x%1 is not the same as 0x%5.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file reference 0x%3 of an index entry of index %2\\r\\nwith parent 0x%1 is not the same as 0x%4.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Multiple object id index entries in file 0x%1\\r\\npoint to the same file 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The object id index entry in file 0x%1 points to file 0x%2\\r\\nwhich is unreadable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The object id index entry in file 0x%1 points to file 0x%2\\r\\nwhich is not in use.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse point index entry in file 0x%1 points to file 0x%2\\r\\nwhich is not in use.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The reparse point index entry in file 0x%1 points to file 0x%2\\r\\nwhich is unreadable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=----------------------------------------------------------------------\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cleaning up instance tags for file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cleaning up encrypted flag for file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cleaning up sparse flag for file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cleaning up %3 unused index entries from index %2 of file 0x%1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The value length, 0x%1, of the MFT mirror is too small.\\r\\nThe minimum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The valid data length, 0x%1, of the MFT mirror is too small.\\r\\nThe minimum value is 0x%2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to obtain the LCN in data attribute for VCN 0x%1 of the MFT.\\r\\n": 1,
                "section=.rsrc type=utf16le string=An index entry of index %2 in file 0x%1 points to file 0x%3\\r\\nwhich is beyond the MFT.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The segment number 0x%1 in file 0x%2 is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nInternal Info:\\r\\n": 1,
                "section=.rsrc type=utf16le string=The mapping pairs offset 0x%1 for attribute of type 0x%2 and instance\\r\\ntag 0x%3 is not quad aligned.\\r\\n": 1,
                "section=.rsrc type=utf16le string=There is no help for this utility.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Critical error encountered.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Incorrect Windows XP version\\r\\n": 1,
                "section=.rsrc type=utf16le string=Converts FAT volumes to NTFS.\\r\\n\\r\\nCONVERT volume /FS:NTFS [/V] [/CvtArea:filename] [/NoSecurity] [/X]\\r\\n\\r\\n  volume      Specifies the drive letter (followed by a colon),\\r\\n              mount point, or volume name.\\r\\n  /FS:NTFS    Specifies that the volume is to be converted to NTFS.\\r\\n  /V          Specifies that Convert should be run in verbose mode.\\r\\n  /CvtArea:filename\\r\\n              Specifies a contiguous file in the root directory to be\\r\\n              the place holder for NTFS system files.\\r\\n  /NoSecurity Specifies the converted files and directories security\\r\\n              settings to be accessible by everyone.\\r\\n  /X          Forces the volume to dismount first if necessary.\\r\\n              All opened handles to the volume would then be invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Parameter - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Must specify a file system\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot CONVERT a network drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 is not a valid file system\\r\\n": 1,
                "section=.rsrc type=utf16le string=Conversion from %1 volume to %2 volume is not available.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The conversion will take place automatically the next time the\\r\\nsystem restarts.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot determine location of system directory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Could not find file %1\\r\\nMake sure that the required file exists and try again.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Could not schedule an automatic conversion of the drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The %1 drive is already scheduled for an automatic\\r\\nconversion.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Converting drive %1 to %2...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Drive %1 is already %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Could not check volume %1 for errors.\\r\\nThe conversion to %2 did not take place.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The /C option is only valid with the /UNCOMPRESS option.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Determining disk space required for file system conversion...\\r\\n": 1,
                "section=.rsrc type=utf16le string=Total disk space:              %1 KB\\r\\n": 1,
                "section=.rsrc type=utf16le string=Free space on volume:          %1 KB\\r\\n": 1,
                "section=.rsrc type=utf16le string=Space required for conversion: %1 KB\\r\\n": 1,
                "section=.rsrc type=utf16le string=Converting file system\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 percent completed.                  %r%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Conversion complete\\r\\n": 1,
                "section=.rsrc type=utf16le string=The conversion failed.\\r\\n%1 was not converted to %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=The conversion has probably failed.\\r\\n%1 may not be converted to %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error during disk read\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error during disk write\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient Memory\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient disk space for conversion\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot relocate existing file system structures\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot create the elementary file system structures.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error reading directory %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error converting directory %1.\\r\\nThe directory may be damaged or there may be insufficient disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error converting file %1.\\r\\nThe file may be damaged or there may be insufficient disk space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error converting file data.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot convert an extended attribute.\\r\\n": 1,
                "section=.rsrc type=utf16le string=A file contains extended attributes,\\r\\nbut the extended attribute file was not found.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot locate or create an NTFS index.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This volume cannot be converted to %1.\\r\\nPossible causes are:\\r\\n    1.- Bad sectors in required areas of the volume.\\r\\n    2.- %2 structures in areas required by %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Convert cannot gain exclusive access to the %1 drive,\\r\\nso it cannot convert it now.  Would you like to\\r\\nschedule it to be converted the next time the\\r\\nsystem restarts (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The %1 file system is not enabled.  The volume\\r\\nwill not be converted.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unsupported sector size.  Cannot convert volume to %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThe file system has been converted.\\r\\nPlease wait while the system restarts.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified drive is the system partition on an ARC-compliant\\r\\nsystem; its file system cannot be converted\\r\\n": 1,
                "section=.rsrc type=utf16le string=The disk geometry recorded in the volume's Bios Parameter\\r\\nBlock differs from the geometry reported by the driver.\\r\\nThis volume cannot be converted to %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Name table translation is not available for conversion to %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume is too fragmented to be converted to NTFS.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot find the utility library which contains CHKDSK for the\\r\\n%1 file system. This volume cannot be converted to %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 cannot be converted because it contains files or directories\\r\\nwith reserved NTFS names in the root directory. There can be no\\r\\nfiles or directories named $Mft, $MftMirr, $LogFile, $Volume,\\r\\n$AttrDef, $BitMap, $Boot, $BadClus, $Secure, $UpCase, $Extend\\r\\nor $Quota in the root directory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This drive is dirty and cannot be converted. You will need to\\r\\nclear the dirty bit on this drive by running CHKDSK /F or allowing\\r\\nAUTOCHK to run on it the next time you reboot.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file %1 specified to the /CvtArea option cannot be found at the root.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file %1 specified to the /CvtArea option must be in one contiguous block.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The name %1 specified to the /CvtArea option must be a file name.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Convert cannot run because the volume is in use by another\\r\\nprocess.  Convert may run if this volume is dismounted first.\\r\\nALL OPENED HANDLES TO THIS VOLUME WOULD THEN BE INVALID.\\r\\nWould you like to force a dismount on this volume? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Convert failed to dismount the volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to set security attributes (%1).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to schedule the setting of security attributes (%1).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot convert %1.  The volume is write protected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot CONVERT volume on this device.\\r\\n": 1,
                "section=.rsrc type=utf16le string=WARNING!  The file specified to /CvtArea is too small and its\\r\\nspace will not be used.  A file of at least %1 MB is needed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=This conversion will also remove your previous operating system\\r\\nbackup.  Do you want to continue? (Y/N) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to delete uninstall backup image - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to notify other components that this volume has changed.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Convert has relocated existing file system structures.\\r\\nA restart of your computer is necessary in order for convert to continue.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Active code page: %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid code page\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays or sets the active code page number.\\r\\n\\r\\nCHCP [nnn]\\r\\n\\r\\n  nnn   Specifies a code page number.\\r\\n\\r\\nType CHCP without a parameter to display the active code page number.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid macro definition.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Edits command lines, recalls Windows XP commands, and creates macros.\\r\\n\\r\\nDOSKEY [/REINSTALL] [/LISTSIZE=size] [/MACROS[:ALL | :exename]]\\r\\n  [/HISTORY] [/INSERT | /OVERSTRIKE] [/EXENAME=exename] [/MACROFILE=filename]\\r\\n  [macroname=[text]]\\r\\n\\r\\n  /REINSTALL          Installs a new copy of Doskey.\\r\\n  /LISTSIZE=size      Sets size of command history buffer.\\r\\n  /MACROS             Displays all Doskey macros.\\r\\n  /MACROS:ALL         Displays all Doskey macros for all executables which have\\r\\n                      Doskey macros.\\r\\n  /MACROS:exename     Displays all Doskey macros for the given executable.\\r\\n  /HISTORY            Displays all commands stored in memory.\\r\\n  /INSERT             Specifies that new text you type is inserted in old text.\\r\\n  /OVERSTRIKE         Specifies that new text overwrites old text.\\r\\n  /EXENAME=exename    Specifies the executable.\\r\\n  /MACROFILE=filename Specifies a file of macros to install.\\r\\n  macroname           Specifies a name for a macro you create.\\r\\n  text                Specifies commands you want to record.\\r\\n\\r\\nUP and DOWN ARROWS recall commands; ESC clears command line; F7 displays\\r\\ncommand history; ALT+F7 clears command history; F8 searches command\\r\\nhistory; F9 selects a command by number; ALT+F10 clears macro definitions.\\r\\n\\r\\nThe following are some special codes in Doskey macro definitions:\\r\\n$T     Command separator.  Allows multiple commands in a macro.\\r\\n$1-$9  Batch parameters.  Equivalent to %%1-%%9 in batch programs.\\r\\n$*     Symbol replaced by everything following macro name on command line.\\r\\n": 1,
                "section=.rsrc type=utf16le string=To specify the size of the command history buffer under Window NT,\\r\\nuse the /listsize switch which sets the number of commands to remember.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insufficient memory to grow DOSKEY list.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Associates a path with a drive letter.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Drive already SUBSTed\\r\\n": 1,
                "section=.rsrc type=utf16le string=SUBST [drive1: [drive2:]path]\\r\\nSUBST drive1: /D\\r\\n\\r\\n  drive1:        Specifies a virtual drive to which you want to assign a path.\\r\\n  [drive2:]path  Specifies a physical drive and path you want to assign to\\r\\n                 a virtual drive.\\r\\n  /D             Deletes a substituted (virtual) drive.\\r\\n\\r\\nType SUBST with no parameters to display a list of current virtual drives.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1: => %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=Incorrect number of parameters - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKNTFS: Incorrect command-line format.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKNTFS: drive specifiers may not contain wildcards.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays or modifies the checking of disk at boot time.\\r\\n\\r\\nCHKNTFS volume [...]\\r\\nCHKNTFS /D\\r\\nCHKNTFS /T[:time]\\r\\nCHKNTFS /X volume [...]\\r\\nCHKNTFS /C volume [...]\\r\\n\\r\\n  volume         Specifies the drive letter (followed by a colon),\\r\\n                 mount point, or volume name.\\r\\n  /D             Restores the machine to the default behavior; all drives are\\r\\n                 checked at boot time and chkdsk is run on those that are\\r\\n                 dirty.\\r\\n  /T:time        Changes the AUTOCHK initiation countdown time to the\\r\\n                 specified amount of time in seconds.  If time is not\\r\\n                 specified, displays the current setting.\\r\\n  /X             Excludes a drive from the default boot-time check.  Excluded\\r\\n                 drives are not accumulated between command invocations.\\r\\n  /C             Schedules a drive to be checked at boot time; chkdsk will run\\r\\n                 if the drive is dirty.\\r\\n\\r\\nIf no switches are specified, CHKNTFS will display if the specified drive is\\r\\ndirty or scheduled to be checked on next reboot.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Specify only one of /D, /X, /C, and /E.\\r\\n": 1,
                "section=.rsrc type=utf16le string=You must specify at least one drive name.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 is not a valid drive specification.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot query state of drive %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 is dirty.  You may use the /C option to schedule chkdsk for\\r\\n    this drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 is not dirty.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Drive %1 does not exist.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKNTFS cannot be used for the network drive %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKNTFS cannot be used for the cdrom drive %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKNTFS cannot be used for the ram disk %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to enable automatic volume upgrade on drive %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Skipping drive %1 because it is not an NTFS volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=CHKNTFS does not work on floppy drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Skipping drive %1 because it is not an NTFS, FAT, or FAT32 volume.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume %1\\r\\ndoes not have a mount point or drive letter.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Chkdsk has been scheduled manually to run on next reboot\\r\\non volume %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The specified AUTOCHK initiation countdown time cannot be less than zero or\\r\\nlarger than %1 seconds.  The default is %2 seconds.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to set the AUTOCHK initiation countdown time.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The AUTOCHK initiation countdown time is set to %1 second(s).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Remove disks or other media.%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Disk error%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Press any key to restart%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTLDR is missing%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTLDR is compressed%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=A disk read error occurred%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Press Ctrl+Alt+Del to restart%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Volume %1 is UDF version %2.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume in %1 contains an unsupported UDF version.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Checking File System %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid System Stream detected.  System stream information is lost.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The volume was not previously closed properly and may contain errors.\\r\\n": 1,
                "arch     x86": 1,
                "binsz    580608": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x00097c4a": 1,
                "compiled Sun Apr 13 19:33:39 2008": 1,
                "crypto   false": 1,
                "dbg_file autofmt.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x0009765f": 1,
                "guid     6D86572BCCAB47898636BE0D89E42E4C1": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       native": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Native": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x4": 1,
                "TimeDateStamp : 0x48025203": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x10e": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0x59a00": 1,
                "SizeOfInitializedData : 0x34000": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x5b000": 1,
                "ImageBase : 0x1000000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x5": 1,
                "MinorSubsystemVersion : 0x1": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x90000": 1,
                "SizeOfHeaders : 0x400": 1,
                "CheckSum : 0x9765f": 1,
                "Subsystem : 0x1": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x40000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x59e64": 1,
                "Size : 0x28": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x61000": 1,
                "Size : 0x2cd00": 1,
                "IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "VirtualAddress : 0x8e000": 1,
                "Size : 0x1788": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x11b0": 1,
                "Size : 0x1c": 2,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0xbc30": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT": 1,
                "VirtualAddress : 0x278": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x1000": 1,
                "Size : 0x1b0": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "ntdll.dll": 1,
                "580608": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x1": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: Auto File System Conversion Utility": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2111)": 1,
                "InternalName: autoconv": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: AUTOCONV.EXE": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}