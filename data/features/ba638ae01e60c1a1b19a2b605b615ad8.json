{
    "filepath": "/corpus/benign/aed0ec0e36186c944cf6b892e80f559b386fb253",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "ba638ae01e60c1a1b19a2b605b615ad8"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "leal (%esi,%esi), %eax;movl %eax, (%ebx);calll  <SymSetSymWithAddr+>;shll $, %esi;movl %esi, (%esp)": 1,
                "movl %eax, (%esi);jmp  <.text+>;movl $, (%esi);calll  <SymSetSymWithAddr+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl %edi, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl (%esi), %eax;leal (%eax), %edx": 1,
                "calll  <SymSetSymWithAddr+>;movb $, ;movl $, %eax;jmp  <.text+>;addl (%eax), %edx": 1,
                "movl %eax, -(%ebp);testb $, ;je  <.text+>;movl %ebx, (%esp);movl $, (%esp)": 1,
                "addl -(%ebp), %eax;cmpl $-, (%eax);je  <.text+>;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%esp);movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "je  <.text+>;movzbl (%edi), %eax;movl %eax, (%esp);movswl (%edi), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %ebx, %ecx;movl (%ebp), %ebx": 1,
                "calll - <.text+>;jmp  <.text+>;testb $, ;je  <.text+>;movzbl (%edi), %ebx": 1,
                "movzbl (%edi), %ebx;movswl (%edi), %edx;movl %edx, -(%ebp);movzwl (%edi), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl (%edi), %ecx;movl %ecx, -(%ebp);movl (%eax), %eax;movl (%eax), %eax": 1,
                "jmp  <.text+>;movzbl -(%ebp), %eax;addl %esi, %eax;cmpw $, (%edi);jne  <.text+>": 1,
                "addl %esi, %eax;cmpw $, (%edi);jne  <.text+>;movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "je  <.text+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "shll $, %ebx;movl $, (%esp);movl $, (%esp);movl -(%ebp), %edx;addl (%edi), %edx": 1,
                "movl -(%ebp), %edx;movl (%edx,%ebx), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>": 1,
                "movl %eax, %edx;movl %ebx, %eax;calll - <.text>;movzbl -(%ebp), %eax;addl %esi, %eax": 1,
                "movzbl -(%ebp), %eax;addl %esi, %eax;jmp  <.text+>;cmpb $, %bl;jne  <.text+>": 1,
                "movl $, %edx;addl %ecx, %eax;adcl %ebx, %edx;movl (%ebp), %ebx;movl (%ebx), %ecx": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 7,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);testl %edx, %edx;jle  <.text+>;movl -(%ebp), %edx": 1,
                "movl %edx, -(%ebp);testl %edx, %edx;jle  <.text+>;movl -(%ebp), %edx;addl (%edi), %edx": 1,
                "movl (%ebp), %edi;movl (%edi), %ecx;movl $, (%esp);movl $, (%esp);addl (%ecx), %edx": 1,
                "movl -(%ebp), %edx;movl %edi, %eax;calll - <.text+>;movl %eax, %ebx;testb $, ": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movzbl -(%ebp), %eax": 1,
                "addl %esi, %eax;jmp  <.text+>;testb $, ;je  <.text+>;movswl (%edi), %ecx": 1,
                "cmpl %esi, (%ebx);ja - <.text+>;cmpl $, -(%ebp);je  <.text+>;cmpl $, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl (%ecx), %eax;movl (%ecx), %edx": 1,
                "movl (%ecx), %ecx;movl %ecx, -(%ebp);movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;addl -(%ebp), %eax;cmpl (%eax), %ebx;jl - <.text+>;addl $, -(%ebp)": 1,
                "movl $, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl (%ebp), %edi": 1,
                "movl $, (%eax);movl $, %eax;jmp  <.text+>;movl $, %eax;leal -(%ebp), %esp": 1,
                "movl %esp, %ebp;movl $, %eax;popl %ebp;retl;pushl %ebp": 32,
                "movl $, %eax;cmpl $, %edx;je  <.text+>;movb $, %al;testb $, ": 2,
                "leave;retl;nop;nop;nop": 4,
                "sbbl %edx, %edx;notl %edx;andl %ecx, %edx;movl $, (%esp);subl $-, %eax": 1,
                "movl %edx, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <UnmapDebugInformation+>": 1,
                "addl $, %eax;jmp  <.text+>;movl (%ebp), %eax;movl $, (%eax);movl (%ebp), %eax": 30,
                "subl $, %esp;movl (%ebp), %edx;cmpl $, %edx;ja  <.text+>;jmpl *(,%edx,)": 1,
                "cmpl $, %edx;ja  <.text+>;jmpl *(,%edx,);movl $, %eax;jmp  <.text+>": 2,
                "movl $, %eax;jmp  <.text+>;movl $, %eax;jmp  <.text+>;leal (%edx), %eax": 2,
                "jbe  <.text+>;testl %eax, %eax;je  <.text+>;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp;retl": 25,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);movl %ecx, (%esp);movl %esi, (%esp)": 1,
                "movl $, %eax;jmp  <.text+>;movl $, -(%ebp);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %edi, (%esp);movl %esi, (%esp)": 1,
                "testl %edx, %edx;jne  <.text+>;movl (%ebx), %edx;movb $, %al;testl %edx, %edx": 1,
                "movl %eax, (%esp);addl $, %edx;movl %edx, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "andl $, %eax;je  <.text+>;movl $, %esi;cmpl $, %eax;jne  <.text+>": 1,
                "movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 3,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp);movl (%ebp), %edx": 1,
                "movl $, (%ebx);movl (%ebx), %eax;andl $, %eax;xorl $, %eax;cmpl $, %eax": 1,
                "movl $, (%ebx);movl $, (%ebx);jmp  <.text+>;cmpl $, (%ebx);jne  <.text+>": 1,
                "ja  <.text+>;cmpl %eax, (%ebx);jae  <.text+>;jmp  <.text+>;movl $, (%esp)": 1,
                "movzwl -(%ebp), %eax;movl %eax, (%esp);movzwl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movzwl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 8,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, (%ebx);movzwl -(%ebp), %eax;movw %ax, (%ebx)": 1,
                "movzwl -(%ebp), %edx;movl %edx, (%ebx);movl $, (%ebx);movl $, (%ebx);movzwl (%ebx), %edx": 1,
                "movl %ecx, (%ebx);movl $, (%ebx);movl $, (%ebx);movw %dx, (%ebx);movl $, (%ebx)": 1,
                "movl %ecx, (%esp);calll  <SymGetSourceFileTokenW+>;movl %eax, %ecx;subl -(%ebp), %ecx;movl (%ebp), %edx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <SymGetSourceFileTokenW+>;testl %eax, %eax;je  <.text+>": 1,
                "movzwl -(%ebp), %eax;movw %ax, (%ebx);jmp  <.text+>;movzwl -(%ebp), %eax;movl %eax, %edx": 1,
                "movl $, %edi;movl %ebx, -(%ebp);movl $, (%esp);leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl %esi, %eax;movl %edi, %edx": 1,
                "movl %esi, (%ebx);movl %edi, (%ebx);movl $, %eax;testb $, ;je  <.text+>": 1,
                "movl $, %eax;testb $, ;je  <.text+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl $, %eax;jmp  <.text+>;movl -(%ebp), %ecx;andl $-, %ecx;movl -(%ebp), %esi": 1,
                "movl $, %edx;jmp - <.text+>;movl -(%ebp), %ecx;andl $-, %ecx;movl -(%ebp), %esi": 1,
                "jmp  <.text+>;leal -(%edx), %eax;cmpl $, %eax;ja  <.text+>;leal (%edx), %eax": 2,
                "cmpl $, %eax;ja  <.text+>;leal (%edx), %eax;jmp  <.text+>;cmpl $, %edx": 1,
                "movl $, %ebx;leal -(%ebp), %esi;movl , %edi;jmp  <.text+>;movzbl (%edx), %eax": 1,
                "addl $, %edx;cmpl %ecx, %edx;jne - <.text+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "nop;nop;pushl %ebp;movl %esp, %ebp;subl $, %esp": 8,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi": 13,
                "movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %ebx;movl $, (%esp)": 1,
                "calll  <SymLoadModuleExW>;subl $, %esp;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "subl $, %esp;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 6,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;cmpl $, (%ebp);jne  <.text+>": 1,
                "cmpl $, (%ebp);jne  <.text+>;movl , %eax;testl %eax, %eax;je  <.text+>": 1,
                "leave;retl $;pushl %ebp;movl %esp, %ebp;pushl %ebx": 5,
                "je  <.text+>;movl %ebx, (%eax);movl -(%ebp), %edx;movl %edx, (%eax);movl (%ebp), %edx": 1,
                "movl %edx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl %esi, (%eax);movl %edi, (%eax)": 1,
                "movl $, %eax;jmp  <.text+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, %eax;leave;retl": 3,
                "cmpl $, (%ebp);jbe  <.text+>;cmpl $, (%ebp);jne  <.text+>;jmp  <.text+>": 1,
                "je  <.text+>;cmpl $, (%ebp);jne  <.text+>;jmp  <.text+>;movl (%ebx), %eax": 1,
                "testl %edi, %edi;je  <.text+>;calll  <SymSetSymWithAddr+>;movl %esi, (%esp);movl %edi, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, (%ebx);jmp  <.text+>;calll  <SymSetSymWithAddr+>": 1,
                "movl (%eax), %edx;movl %edx, (%esp);movzwl (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 3,
                "testl %eax, %eax;je  <.text+>;cmpl %ecx, (%eax);je  <.text+>;movl $, %edx": 1,
                "subl $, %esp;movl %esi, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 1,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 9,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 45,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %edi;calll  <SymSetSymWithAddr+>": 5,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %ebx;movl $, %esi": 3,
                "subl $, %esp;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 6,
                "popl %ebx;popl %esi;popl %edi;popl %ebp;retl $": 25,
                "testl %edx, %edx;je  <SymCleanup+>;cmpl %ecx, (%edx);jne  <SymCleanup+>;jmp  <SymCleanup+>": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 4,
                "je  <SymInitializeW+>;movl $, %eax;testb $, ;je  <SymInitializeW+>;movl $, (%esp)": 1,
                "leal (%esi,%esi), %edx;movl %edx, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 5,
                "movl (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 1,
                "movl %esi, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;cmpl %eax, %esi;jbe - <SymInitializeW+>": 1,
                "movw $, (%eax,%ecx,);movl %esi, (%esp);movl -(%ebp), %eax;addl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <SymInitializeW>": 1,
                "movl %esp, %ebp;movl , %eax;popl %ebp;retl;testb $, ": 1,
                "testb $, ;je  <SymSetParentWindow+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "movl %eax, (%esp);calll - <.text+>;movl %eax, %edi;testl %eax, %eax;je  <SymSetContext+>": 1,
                "jne  <SymSetContext+>;movl (%edi), %eax;movl (%edi), %edx;xorl (%esi), %edx;xorl (%esi), %eax": 1,
                "movl %eax, %ebx;movl (%edi), %edx;movl (%edi), %eax;testl %eax, %eax;je  <SymSetContext+>": 1,
                "calll  <SymSetSymWithAddr+>;jmp  <SymSetContext+>;movl %edx, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "jne  <SymSetContext+>;cmpl $, %esi;ja  <SymSetContext+>;cmpl $, %esi;jae  <SymSetContext+>": 1,
                "movl %edx, (%esp);movl %edi, (%esp);movl $, (%esp);movl %esi, (%esp);movl (%ebx), %eax": 1,
                "testl %ebx, %ebx;je  <SymSetOptions+>;leal (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %edi, (%esp);movl %ebx, (%esp);movl $, %ecx;movl %esi, %edx;movl (%ebp), %eax": 2,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax": 3,
                "popl %ebp;retl $;nop;nop;nop": 5,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%eax), %eax;popl %ebp": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%eax), %edx;movl (%eax), %eax": 1,
                "cmpl $, %edx;jne  <WinDbgExtensionDllInit+>;jmp  <WinDbgExtensionDllInit+>;calll - <WinDbgExtensionDllInit+>;leal (%esi), %esi": 1,
                "calll - <WinDbgExtensionDllInit+>;jmp  <WinDbgExtensionDllInit+>;movl $, %eax;testb $, ;je  <WinDbgExtensionDllInit+>": 2,
                "movl -(%ebp), %edx;cmpl %edx, -(%ebp);jae  <WinDbgExtensionDllInit+>;movl -(%ebp), %edx;cmpl %edx, -(%ebp)": 1,
                "addl %eax, %ebx;movl %ebx, (%edx);movl (%edi), %eax;movzbl (%eax), %eax;movb %al, (%edx)": 1,
                "movb %al, (%edx);movl $, %eax;jmp  <WinDbgExtensionDllInit+>;addl %eax, %ebx;movl (%esi), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;cmpl $, %ebx;setbe %al": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;cmpl $, %ebx;setbe %al;movzbl %al, %eax": 1,
                "cmpl $, %ebx;setbe %al;movzbl %al, %eax;addl $, %esp;popl %ebx": 1,
                "imull (%ebp), %ebx;calll  <SymSetSymWithAddr+>;movl %ebx, (%esp);movl $, (%esp);movl %eax, (%esp)": 1,
                "calll - <WinDbgExtensionDllInit+>;addl %ebx, %eax;jmp  <WinDbgExtensionDllInit+>;calll - <WinDbgExtensionDllInit+>;cwtl": 1,
                "calll - <WinDbgExtensionDllInit+>;cwtl;addl %ebx, %eax;jmp  <WinDbgExtensionDllInit+>;leal (%esi), %esi": 1,
                "cwtl;addl %ebx, %eax;jmp  <WinDbgExtensionDllInit+>;leal (%esi), %esi;calll - <WinDbgExtensionDllInit+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, (%ebx,%esi,);jmp  <WinDbgExtensionDllInit+>": 3,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, (%ebx,%esi,);jmp  <WinDbgExtensionDllInit+>;movzbl %al, %esi": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;addl %esi, (%ebx);jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax": 3,
                "movl -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, %esi;imull (%ebx), %esi;jmp  <WinDbgExtensionDllInit+>": 1,
                "calll - <WinDbgExtensionDllInit+>;movl %eax, %esi;imull (%ebx), %esi;jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %edi, (%ebx,%esi,)": 1,
                "calll  <SymSetSymWithAddr+>;movzbl (%ebx), %edx;cmpb $, %dl;jbe  <WinDbgExtensionDllInit+>;testb $, ": 1,
                "jbe  <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "jmp  <WinDbgExtensionDllInit+>;movzbl %dl, %eax;imull $, %eax, %eax;leal (%ebx,%eax), %eax;movl %eax, %edi": 1,
                "calll  <SymSetSymWithAddr+>;jmp  <WinDbgExtensionDllInit+>;subl $, %eax;movb %al, (%ebx);movzbl %al, %eax": 1,
                "movzbl %al, %eax;imull $, %eax, %eax;leal (%ebx,%eax), %esi;movl -(%ebp), %edi;movl $, %ecx": 1,
                "jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;movl (%eax), %esi;calll - <WinDbgExtensionDllInit+>;movl %eax, %edi": 1,
                "testb $, ;je  <WinDbgExtensionDllInit+>;movl -(%ebp), %edx;addl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl , %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);movl %edi, (%esp)": 1,
                "movl %eax, (%ebx,%edi,);movl -(%ebp), %edx;movl -(%ebp), %eax;addl %edx, (%eax);jmp  <WinDbgExtensionDllInit+>": 1,
                "cmpl %edx, (%eax);jae  <WinDbgExtensionDllInit+>;movzbl (%ebx), %eax;addl -(%ebp), %eax;cmpl %eax, (%ebx)": 1,
                "cmpl %eax, (%ebx);jbe - <WinDbgExtensionDllInit+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl $, (%esp);calll *;testb $, ;je  <WinDbgExtensionDllInit+>;movl (%edi), %ebx": 1,
                "movl (%edi), %ebx;movl %edi, %eax;calll - <WinDbgExtensionDllInit+>;movl %ebx, (%esp);movl %eax, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;movl $, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %edi, %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, %ebx": 1,
                "movl %ebx, (%esi);movl %edi, %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, (%esi);movl %edi, %eax": 1,
                "movb %al, -(%ebp);movb %al, (%esi);movl $, (%esi);movl $, (%esi);testb $, ": 1,
                "testb $, ;je  <WinDbgExtensionDllInit+>;movl (%esi), %edx;movl %edx, -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "movl %edx, (%esp);movl %ebx, (%esp);movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, -(%ebp);testl %ebx, %ebx;je  <WinDbgExtensionDllInit+>;movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esi);addl $, (%esi);movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <WinDbgExtensionDllInit+>": 1,
                "jmp - <WinDbgExtensionDllInit+>;movl (%edi), %edx;cmpl %edx, (%edi);jb - <WinDbgExtensionDllInit+>;testb $, ": 1,
                "jmp  <WinDbgExtensionDllInit+>;movl %ecx, %eax;calll - <WinDbgExtensionDllInit+>;movzwl %ax, %eax;addl (%edi), %eax": 1,
                "pushl %ebx;subl $, %esp;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%ebp), %ebx": 1,
                "testl %ebx, %ebx;je  <WinDbgExtensionDllInit+>;movl (%ebx), %eax;cmpl %edi, %eax;je  <WinDbgExtensionDllInit+>": 1,
                "movl (%ebx), %eax;cmpl %edi, %eax;je  <WinDbgExtensionDllInit+>;movl $, %edx;movl $, %esi": 1,
                "testb $, ;je  <WinDbgExtensionDllInit+>;movl %eax, (%esp);movl (%edx), %eax;movl %eax, (%esp)": 1,
                "jne - <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <WinDbgExtensionDllInit+>;movl $, %eax": 3,
                "movl %ebx, %eax;calll - <WinDbgExtensionDllInit+>;testl %eax, %eax;je  <WinDbgExtensionDllInit+>;movl (%ebx), %eax": 2,
                "movl $, (%edi);movl (%ebp), %eax;movl $, (%eax);jmp  <WinDbgExtensionDllInit+>;leal -(%ebp), %eax": 1,
                "jmp  <WinDbgExtensionDllInit+>;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, %ebx;leal -(%ebp), %eax": 1,
                "jne  <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>;movl $, (%esp);movl $, (%esp)": 6,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <WinDbgExtensionDllInit+>;movl (%edi), %eax": 2,
                "movl (%edi), %eax;cmpl %eax, %ebx;jb  <WinDbgExtensionDllInit+>;movl %eax, %ebx;movl %ebx, (%edi)": 1,
                "movzbl -(%ebp), %edx;movl -(%ebp), %eax;leal (%eax,%edx,), %eax;cmpl %eax, -(%ebp);ja - <WinDbgExtensionDllInit+>": 1,
                "retl;movl $, %eax;jmp  <WinDbgExtensionDllInit+>;movl (%eax), %eax;cmpb $, (%eax)": 1,
                "jmp  <WinDbgExtensionDllInit+>;movl (%eax), %eax;cmpb $, (%eax);je - <WinDbgExtensionDllInit+>;jmp - <WinDbgExtensionDllInit+>": 1,
                "movl %eax, -(%ebp);movl %edx, %esi;movl %ecx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "je  <WinDbgExtensionDllInit+>;movl %edi, (%esp);movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll *;movl %ebx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <SymRegisterFunctionEntryCallback+>": 1,
                "movl %edi, (%esp);movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;movl (%eax), %ebx;testl %ebx, %ebx;je  <WinDbgExtensionDllInit+>": 1,
                "movl (%esi), %edx;movl -(%ebp), %ecx;movl (%ecx), %eax;movl -(%ebp), %ecx;movl %edx, (%eax,%ecx)": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;movl -(%ebp), %ecx;movl %edx, (%eax,%ecx);testb $, ": 1,
                "movl -(%ebp), %ecx;movl %edx, (%eax,%ecx);testb $, ;je  <WinDbgExtensionDllInit+>;movl (%ebx), %eax": 1,
                "notl %eax;jmp  <WinDbgExtensionDllInit+>;movl %esi, %eax;calll - <WinDbgExtensionDllInit+>;jmp  <WinDbgExtensionDllInit+>": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl $, %eax;jmp  <WinDbgExtensionDllInit+>;movl $, %eax": 1,
                "movl %eax, %esi;movl %edx, %ebx;movl $, (%esp);movl $, (%esp);movl %edx, (%esp)": 1,
                "movl %esi, %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, (%ebx);movl %esi, %eax;calll - <WinDbgExtensionDllInit+>": 2,
                "je  <WinDbgExtensionDllInit+>;movl $, %edi;movl -(%ebp), %eax;movzbl (%eax), %edx;leal -(%edx), %eax": 1,
                "leal -(%edx), %eax;cmpb $, %al;ja  <WinDbgExtensionDllInit+>;movzbl %al, %eax;jmpl *(,%eax,)": 1,
                "cmpl $-, %eax;jne  <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>;movl $, (%esp)": 1,
                "calll - <WinDbgExtensionDllInit+>;cmpl -(%ebp), %edi;ja  <WinDbgExtensionDllInit+>;addl %edi, %eax;cmpl %eax, -(%ebp)": 1,
                "jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;movl %eax, (%ebx);addl $, %eax;cmpl %eax, (%ebx)": 1,
                "movl %ecx, -(%ebp);movl (%edx), %eax;cmpl $, (%eax);je  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax": 1,
                "addl $, %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "jne  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;addl $, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 2,
                "jne  <WinDbgExtensionDllInit+>;movl $, -(%ebp);testb $, ;je  <WinDbgExtensionDllInit+>;movl $, (%esp)": 1,
                "repne  scasb %es:(%edi), %al;movl %ecx, %edi;notl %edi;leal -(%edi), %eax;movl %eax, -(%ebp)": 1,
                "movl $, (%edx);movl $, -(%ebp);movl $, %esi;jmp  <WinDbgExtensionDllInit+>;movl %ebx, %eax": 1,
                "movzbl %al, %eax;subl $, %eax;movl %eax, -(%ebp,%esi,);jmp  <WinDbgExtensionDllInit+>;leal -(%eax), %edx": 1,
                "movl %eax, -(%ebp);cmpl $, (%edi);je  <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>": 3,
                "calll *(%eax);movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp);movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl , %eax;calll *(%eax);movl %eax, -(%ebp);movl (%edi), %edx": 1,
                "movl %eax, -(%ebp);movl (%edi), %edx;movl %edx, -(%ebp);movl %edx, (%esp);movl , %eax": 1,
                "movl %eax, %esi;jmp  <WinDbgExtensionDllInit+>;subl $, %esi;jmp  <WinDbgExtensionDllInit+>;leal (%esi), %eax": 1,
                "movl %eax, %esi;jmp  <WinDbgExtensionDllInit+>;leal (%esi), %edx;movl %edx, -(%ebp);movl %ebx, %eax": 1,
                "xorl %eax, -(%ebp,%esi,);subl %eax, -(%ebp,%esi,);jmp  <WinDbgExtensionDllInit+>;negl -(%ebp,%esi,);jmp  <WinDbgExtensionDllInit+>": 1,
                "notl -(%ebp,%esi,);jmp  <WinDbgExtensionDllInit+>;leal -(%esi), %eax;movl -(%ebp,%esi,), %edx;andl %edx, -(%ebp,%eax,)": 1,
                "movl -(%ebp,%esi,), %edx;xorl %edx, -(%ebp,%eax,);movl %eax, %esi;jmp  <WinDbgExtensionDllInit+>;leal -(%esi), %eax": 1,
                "shrl %cl, -(%ebp,%eax,);movl %eax, %esi;jmp  <WinDbgExtensionDllInit+>;movl -(%ebp,%esi,), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %ecx, %esi;jmp  <WinDbgExtensionDllInit+>;leal -(%esi), %eax;movl -(%ebp,%esi,), %edx;cmpl %edx, -(%ebp,%eax,)": 1,
                "leal -(%esi), %eax;movl -(%ebp,%esi,), %ecx;cmpl %ecx, -(%ebp,%eax,);seta %dl;movzbl %dl, %edx": 1,
                "jmp  <WinDbgExtensionDllInit+>;leal -(%esi), %eax;movl -(%ebp,%esi,), %ecx;cmpl %ecx, -(%ebp,%eax,);setne %dl": 1,
                "cmpl %ecx, -(%ebp,%eax,);setne %dl;movzbl %dl, %edx;movl %edx, -(%ebp,%eax,);movl %eax, %esi": 1,
                "jmp  <WinDbgExtensionDllInit+>;movl %ebx, %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, -(%ebp);cmpl $, -(%ebp)": 1,
                "cmpl $, (%edi);je  <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>;movl $, (%esp)": 2,
                "movzbl (%ecx), %eax;cmpb $, %al;jne  <WinDbgExtensionDllInit+>;movb $, (%edi);movl (%ecx), %eax": 1,
                "movl %eax, (%edi);addl $, %esi;movl %ebx, %eax;calll - <WinDbgExtensionDllInit+>;movl (%ebp), %ecx": 1,
                "calll  <SymSetSymWithAddr+>;movl $, %edx;jmp  <WinDbgExtensionDllInit+>;cmpl $, (%edi);je  <WinDbgExtensionDllInit+>": 2,
                "jmp  <WinDbgExtensionDllInit+>;cmpl $, (%edi);je  <WinDbgExtensionDllInit+>;movl $, %edx;testb $, ": 2,
                "je  <WinDbgExtensionDllInit+>;movl -(%ebp,%esi,), %eax;movl %eax, -(%ebp);movl $, (%esp);movl $, (%esp)": 1,
                "movzbl -(%ebp), %eax;movl %eax, -(%ebp,%esi,);jmp  <WinDbgExtensionDllInit+>;movzwl -(%ebp), %eax;movl %eax, -(%ebp,%esi,)": 1,
                "movzwl -(%ebp), %eax;movl %eax, -(%ebp,%esi,);jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;movl %eax, -(%ebp,%esi,)": 1,
                "jns  <WinDbgExtensionDllInit+>;movb $, (%edi);movl %eax, (%edi);jmp  <WinDbgExtensionDllInit+>;cmpb $, (%edi)": 1,
                "cmpb $, (%edi);jne  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx;movl -(%ebp), %eax": 1,
                "movl $, %eax;jmp  <WinDbgExtensionDllInit+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl %eax, -(%ebp);movl $, %ebx;movl (%ebp), %esi;addl $, %esi;jmp  <WinDbgExtensionDllInit+>": 1,
                "movl (%ebp), %esi;addl $, %esi;jmp  <WinDbgExtensionDllInit+>;movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, %ecx;movl (%ebp), %eax;calll - <WinDbgExtensionDllInit+>": 2,
                "movl $, (%esp);leal -(%ebp), %edx;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;testl %eax, %eax": 1,
                "js  <WinDbgExtensionDllInit+>;cmpb $, -(%ebp);jbe  <WinDbgExtensionDllInit+>;movl $, %eax;testb $, ": 1,
                "movl $, %eax;jmp  <WinDbgExtensionDllInit+>;testl %eax, %eax;jne  <WinDbgExtensionDllInit+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movzbl (%eax), %edx;cmpb $, %dl;je  <WinDbgExtensionDllInit+>;cmpb $, %dl": 1,
                "jne  <WinDbgExtensionDllInit+>;leal (%esi), %esi;jmp  <WinDbgExtensionDllInit+>;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "addl (%eax), %edx;leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, %ecx;movl (%ebp), %eax": 1,
                "testb $, ;je  <WinDbgExtensionDllInit+>;movl (%eax), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl (%ebp), %esi;movl (%eax), %eax;cmpl $-, %eax;je  <WinDbgExtensionDllInit+>;leal (%esi), %edx": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, %eax;jmp  <WinDbgExtensionDllInit+>;addl %esi, %eax": 1,
                "leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movzbl %al, %eax": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;leal (%ebx), %eax;addl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx": 4,
                "calll  <SymSetSymWithAddr+>;cmpb $, -(%ebx,%edi);je  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;movb $, -(%ebx,%eax)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl -(%ebp), %esi;cmpb $, (%esi)": 1,
                "movl -(%ebp), %esi;cmpb $, (%esi);je  <WinDbgExtensionDllInit+>;movl %esi, %edi;movl $, %eax": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);movl $, %eax;subl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "jmp  <WinDbgExtensionDllInit+>;movl $, %esi;movl $, -(%ebp);movl $, %ebx;leal -(%ebp), %eax": 1,
                "ja  <WinDbgExtensionDllInit+>;movl %edi, %eax;subl -(%ebp), %eax;movl $, %edx;divl -(%ebp)": 1,
                "movl $, %edx;divl -(%ebp);imull -(%ebp), %eax;addl %eax, %ebx;movsbl -(%ebp), %eax": 1,
                "jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %edx;movl (%edx), %eax;movl %esi, (%esp);movl -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;movl %ebx, %edx;calll - <WinDbgExtensionDllInit+>;jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %edx": 1,
                "testb $, ;je - <WinDbgExtensionDllInit+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;addl $, %edi": 1,
                "movl (%eax), %eax;movzbl (%eax), %eax;movb %al, -(%ebp);movl $, %ebx;jmp  <WinDbgExtensionDllInit+>": 1,
                "addl $, %ebx;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movzbl %al, %eax;movl %eax, -(%ebp,%ebx,)": 1,
                "addl $, %ebx;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movsbl %al, %eax;movl %eax, -(%ebp,%ebx,)": 1,
                "leal -(%ebx), %ecx;movl -(%ebp,%ecx,), %eax;movl %eax, -(%ebp,%ebx,);leal -(%ebx), %eax;movl -(%ebp,%eax,), %esi": 1,
                "leal -(%ebx), %ecx;movl -(%ebp,%ecx,), %eax;movl %eax, %edx;sarl $, %edx;idivl -(%ebp,%ebx,)": 2,
                "leal -(%ebx), %eax;movl -(%ebp,%ebx,), %edx;cmpl %edx, -(%ebp,%eax,);setg %dl;movzbl %dl, %edx": 1,
                "jmp  <WinDbgExtensionDllInit+>;leal -(%ebx), %eax;movl -(%ebp,%ebx,), %edx;cmpl %edx, -(%ebp,%eax,);setle %dl": 1,
                "movl %eax, %ebx;jmp  <WinDbgExtensionDllInit+>;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;cwtl": 1,
                "movl %eax, -(%ebp);movl -(%ebp,%ebx,), %edx;subl $, %ebx;testl %edx, %edx;jne  <WinDbgExtensionDllInit+>": 1,
                "subl $, %ebx;testl %edx, %edx;jne  <WinDbgExtensionDllInit+>;addl %eax, -(%ebp);jmp  <WinDbgExtensionDllInit+>": 1,
                "movl %eax, %esi;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, -(%ebp);addl $, %ebx": 1,
                "jmp  <WinDbgExtensionDllInit+>;movzwl -(%ebp), %eax;movl %eax, -(%ebp,%ebx,);jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax": 1,
                "jmp  <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp,%ebx,), %eax;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "movl %eax, %edi;cmpl $, (%ebp);je  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;cmpl $, %eax": 1,
                "testl %eax, %eax;jne  <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>;movl (%ebp), %eax": 1,
                "movl (%eax), %eax;addl $, %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, (%esp)": 1,
                "movl %eax, -(%ebp);movl %edx, %edi;movl (%edx), %eax;testl %eax, %eax;jne  <WinDbgExtensionDllInit+>": 1,
                "movl %edx, %edi;movl (%edx), %eax;testl %eax, %eax;jne  <WinDbgExtensionDllInit+>;testb $, ": 1,
                "movl %eax, %ebx;movl -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movl %ebx, (%esp);movl %eax, (%esp)": 2,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, %ecx;movl %edi, %edx;movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;cmpl $, %eax;je  <WinDbgExtensionDllInit+>;cmpl $, %eax;jne  <WinDbgExtensionDllInit+>": 2,
                "jne  <WinDbgExtensionDllInit+>;jmp  <WinDbgExtensionDllInit+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <WinDbgExtensionDllInit+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %edx": 3,
                "calll  <SymSetHomeDirectoryW+>;jmp  <WinDbgExtensionDllInit+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 35,
                "movl (%ebx), %eax;cmpl $, (%eax);jne  <WinDbgExtensionDllInit+>;movl -(%ebp), %edx;movl (%edx), %edx": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;addl $, %esi;jmp  <WinDbgExtensionDllInit+>;movl %edi, -(%ebp)": 1,
                "calll  <SymSetSymWithAddr+>;addl $, %esi;jmp  <WinDbgExtensionDllInit+>;movl %edi, -(%ebp);movl %eax, %edi": 1,
                "jne  <WinDbgExtensionDllInit+>;movl $, -(%ebp);movb $, -(%ebp);movl (%ebx), %eax;movl -(%ebp), %edx": 1,
                "movl $, (%esp);movl (%ebx), %edx;movl %edx, (%esp);movl (%eax), %eax;movl %eax, (%esp)": 1,
                "movl (%ebx), %edx;movl %edx, (%esp);movl (%eax), %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;addl $, %esp;popl %ebx": 3,
                "movl %eax, %edi;movl %edx, %ebx;movl (%edx), %eax;cmpl $, (%eax);ja  <WinDbgExtensionDllInit+>": 1,
                "movl %ebx, %edx;movl %edi, %eax;calll  <WinDbgExtensionDllInit+>;movl -(%ebp), %edx;testl %edx, %edx": 1,
                "movl -(%ebp), %edx;testl %edx, %edx;je  <WinDbgExtensionDllInit+>;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp);calll  <SymSetHomeDirectoryW+>;movl %eax, (%ebx)": 3,
                "testl %eax, %eax;jne  <WinDbgExtensionDllInit+>;movl $, -(%ebp);jmp  <WinDbgExtensionDllInit+>;cmpl $, -(%ebp)": 1,
                "ja  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;jmpl *(,%eax,);movl $, %edx;jmp  <WinDbgExtensionDllInit+>": 1,
                "movl $, %edx;jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %ebx, %edx": 6,
                "movl $, -(%ebp);movl $, -(%ebp);jmp  <WinDbgExtensionDllInit+>;movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "cmpl $, (%eax);jne  <WinDbgExtensionDllInit+>;movl %esi, %edx;movl -(%ebp), %eax;calll  <WinDbgExtensionDllInit+>": 1,
                "movl %eax, (%esp);movl $, %ecx;movl %esi, %edx;movl -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>": 2,
                "testb $, ;je  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, -(%ebp)": 5,
                "movl %eax, (%esp);calll  <SymSetHomeDirectoryW+>;movl %eax, (%ebx);jmp  <WinDbgExtensionDllInit+>;cmpl $, (%ebx)": 1,
                "calll  <SymSetSymWithAddr+>;movl %esi, (%ebx);jmp  <WinDbgExtensionDllInit+>;cmpl $, (%ebx);jne  <WinDbgExtensionDllInit+>": 2,
                "calll  <WinDbgExtensionDllInit+>;movl $, (%esp);movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp)": 1,
                "movl %ebx, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl (%eax), %edx;movl (%edx), %eax;movl (%eax), %eax": 1,
                "movl %esi, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl (%eax), %edx;movl %edi, %eax;calll - <WinDbgExtensionDllInit+>": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, %eax;jmp  <WinDbgExtensionDllInit+>;cmpl $, (%eax)": 1,
                "calll - <WinDbgExtensionDllInit+>;movl %eax, -(%ebp);movl (%ebx), %eax;calll - <WinDbgExtensionDllInit+>;movl -(%ebp), %edx": 1,
                "calll  <SymSetSymWithAddr+>;movl $, -(%ebp);testl %esi, %esi;jne  <WinDbgExtensionDllInit+>;movl (%edi), %eax": 1,
                "movl (%ebx), %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;je  <WinDbgExtensionDllInit+>;leal (%ebx), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "calll  <SymSetSymWithAddr+>;movzbl -(%ebp), %eax;cmpb $, %al;je  <WinDbgExtensionDllInit+>;cmpb $, %al": 1,
                "jmp  <WinDbgExtensionDllInit+>;cmpb $, %al;ja  <WinDbgExtensionDllInit+>;leal (%esi), %esi;jmp  <WinDbgExtensionDllInit+>": 1,
                "movl %ecx, (%esp);movl $, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %ecx": 1,
                "movl $, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %ecx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %esi, (%esp);movl %eax, (%esp)": 1,
                "movl (%edx), %eax;movl %eax, (%esp);movl (%edx), %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>": 1,
                "calll *;cmpl $, -(%ebp);sbbl %eax, %eax;andl $-, %eax;addl $, %eax": 1,
                "addl $, %eax;movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;jmp  <WinDbgExtensionDllInit+>;leal -(%ebp), %eax": 1,
                "calll  <SymSetSymWithAddr+>;cmpl $, -(%ebp);je  <WinDbgExtensionDllInit+>;testb $, ;je  <WinDbgExtensionDllInit+>": 1,
                "movw $, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);jmp  <WinDbgExtensionDllInit+>;movw $, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);sbbl %eax, %eax;andl $-, %eax;addl $, %eax;movl -(%ebp), %ecx": 1,
                "movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esp);calll  <SymSetHomeDirectoryW+>;movl %edi, %edx": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <WinDbgExtensionDllInit+>;movl -(%ebp), %ecx;movl -(%ebp), %edx": 2,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;movl (%ecx), %eax;calll - <WinDbgExtensionDllInit+>;movl %eax, %edi": 2,
                "calll  <SymRegisterFunctionEntryCallback+>;movl (%eax), %esi;movl (%esi), %eax;movl (%eax), %eax;cmpl $, %eax": 3,
                "movl (%esi), %eax;movl (%eax), %eax;cmpl $, %eax;ja  <WinDbgExtensionDllInit+>;cmpl $, %eax": 2,
                "jae  <WinDbgExtensionDllInit+>;cmpl $, %eax;ja  <WinDbgExtensionDllInit+>;cmpl $, %eax;jae  <WinDbgExtensionDllInit+>": 1,
                "movl %eax, (%esp);movl $, %ecx;movl %esi, %edx;movl %edi, %eax;calll - <WinDbgExtensionDllInit+>": 4,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, %ecx;movl %esi, %edx": 1,
                "ja  <WinDbgExtensionDllInit+>;cmpl $, %eax;jae  <WinDbgExtensionDllInit+>;cmpl $, %eax;je  <WinDbgExtensionDllInit+>": 1,
                "jmp  <WinDbgExtensionDllInit+>;cmpl $, %eax;nop;je  <WinDbgExtensionDllInit+>;cmpl $, %eax": 1,
                "cmpl $, %eax;jne  <WinDbgExtensionDllInit+>;nop;leal (%esi), %esi;jmp  <WinDbgExtensionDllInit+>": 1,
                "movl %ebx, (%esp);movl %edi, (%esp);movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "calll  <SymSetHomeDirectoryW+>;movl -(%ebp), %edx;movl %eax, (%edx);movl %esi, %eax;calll - <WinDbgExtensionDllInit+>": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx);movl %esi, %eax;calll - <WinDbgExtensionDllInit+>;movl $, %edi": 1,
                "calll  <SymRegisterFunctionEntryCallback+>;movl (%eax), %ebx;movl (%ebx), %eax;cmpl $, (%eax);ja  <WinDbgExtensionDllInit+>": 1,
                "movl %edx, -(%ebp);testl %edx, %edx;jne  <WinDbgExtensionDllInit+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;movl -(%ebp), %edx": 1,
                "je  <WinDbgExtensionDllInit+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, %ecx;movl %ebx, %edx": 1,
                "movl %ebx, %edx;movl -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;jmp  <WinDbgExtensionDllInit+>;movl %ebx, %edx": 1,
                "movl -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;jmp  <WinDbgExtensionDllInit+>;movl %ebx, %edx;movl -(%ebp), %eax": 1,
                "addl $, %edi;jmp  <WinDbgExtensionDllInit+>;movl %esi, -(%ebp);movl %eax, %esi;movl %esi, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebx), %eax;cmpl $, (%eax)": 1,
                "movl (%edi), %ecx;addl (%eax), %ecx;subl %edx, %ecx;movl $, (%esp);leal -(%ebp), %edx": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, %edx;movl (%ebp), %eax": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;calll - <WinDbgExtensionDllInit+>": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, %edx;movl (%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "movl %eax, (%esp);movl %edi, %ecx;movl %esi, %edx;movl %ebx, %eax;calll - <WinDbgExtensionDllInit+>": 3,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl , %eax": 1,
                "movl %edx, (%esp);movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);movl -(%ebp), %eax": 1,
                "movl $, %edx;jmp  <WinDbgExtensionDllInit+>;movzbl -(%ebp), %edx;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl %esi, (%esp)": 15,
                "movl $, (%esp);movl %esi, (%esp);calll  <SymFindFileInPath+>;jmp  <WinDbgExtensionDllInit+>;movl $, (%esp)": 15,
                "jmp  <WinDbgExtensionDllInit+>;movl $, -(%ebp);jmp  <WinDbgExtensionDllInit+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl (%esi), %eax;cmpl $, %eax;je  <WinDbgExtensionDllInit+>;cmpl $, %eax": 10,
                "movl $, %eax;jmp  <WinDbgExtensionDllInit+>;movl $, %eax;movl %eax, -(%ebp);jmp  <WinDbgExtensionDllInit+>": 5,
                "movl %eax, (%esp);calll  <SymFindFileInPath+>;movl %eax, %ebx;jmp  <WinDbgExtensionDllInit+>;movl $, (%esp)": 5,
                "calll  <WinDbgExtensionDllInit+>;movl %eax, %edi;jmp  <WinDbgExtensionDllInit+>;leal -(%ebp), %eax;movl %eax, (%esp)": 5,
                "movl (%ebx), %eax;bswapl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);calll  <SymSetSymWithAddr+>": 5,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, (%esp);movl $, (%esp)": 8,
                "movl $, (%esp);movl $, (%esp);calll *;movl -(%ebp), %eax;subl $, %eax": 1,
                "subl $, %eax;cmpl $-, %eax;jbe  <WinDbgExtensionDllInit+>;movl -(%ebp), %eax;subl $, %eax": 1,
                "calll  <SymSetSymWithAddr+>;movl -(%ebp), %eax;movl %eax, -(%ebp);addl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movb $, -(%ebp);calll  <SymSetSymWithAddr+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%edi);movl $, (%edi);movl $, (%edi);leal (%edi), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 3,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <WinDbgExtensionDllInit+>;movl %edi, -(%ebp)": 2,
                "subl %eax, %edx;movl %edx, -(%ebp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl %eax, (%ebx);leal -(%ebp), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;jmp  <WinDbgExtensionDllInit+>": 2,
                "movl $, (%esp);calll *;movl (%edi), %ebx;movl $, (%ebx);movl (%esi), %eax": 1,
                "movl (%edi), %eax;movl $, (%eax);movl -(%ebp), %edx;movl %edx, (%eax);movl -(%ebp), %edx": 1,
                "testb $, ;je  <WinDbgExtensionDllInit+>;movzbl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <SymSetHomeDirectoryW+>": 1,
                "movl %edx, -(%ebp);addl -(%ebp), %eax;movl %eax, -(%ebp);movzbl -(%ebp), %eax;movb %al, -(%ebp)": 1,
                "movl -(%ebp), %edx;leal -(%ebp), %eax;calll - <WinDbgExtensionDllInit+>;testl %eax, %eax;jne  <WinDbgExtensionDllInit+>": 2,
                "addl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <SymRegisterFunctionEntryCallback+>": 1,
                "movl $, %ebx;cmpl $, -(%ebp);je  <WinDbgExtensionDllInit+>;movl -(%ebp), %esi;calll  <SymSetSymWithAddr+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;testl %eax, %eax": 4,
                "je  <UnmapDebugInformation+>;movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %esi;testl %esi, %esi;jne  <UnmapDebugInformation+>;movl $, (%ebx);movl $, (%ebx)": 1,
                "movl -(%ebp), %eax;movl $, %edx;movl $, (%esp);movl %edi, (%esp);movl $, (%esp)": 2,
                "movl %ebx, (%esp);calll - <WinDbgExtensionDllInit+>;testl %eax, %eax;jne  <UnmapDebugInformation+>;movl $, -(%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi": 2,
                "orl %eax, %ecx;je  <UnmapDebugInformation+>;movl , %ecx;movl (%ecx), %ecx;movl $, %ebx": 1,
                "cmpl %ecx, %eax;jb  <UnmapDebugInformation+>;movl -(%ebp), %esi;cmpl $, %edx;ja  <UnmapDebugInformation+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp": 1,
                "movl %ecx, (%esp);movl %edx, %ecx;movl (%eax), %edx;calll - <UnmapDebugInformation+>;addl %esi, (%ebx)": 1,
                "imull $, %ecx, %ecx;addl $, %ecx;movl %ecx, -(%ebp);movl %ecx, %eax;addl %edx, %eax": 1,
                "orl $, %ebx;testb $, %ah;je  <UnmapDebugInformation+>;orl $, %ebx;addl $, %edx": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;leal (%eax,%eax), %eax;movl %eax, -(%ebp);addl $, %eax": 1,
                "addl (%esi), %ecx;movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%ecx), %eax": 2,
                "movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp)": 18,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <UnmapDebugInformation+>;movl %eax, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;je  <UnmapDebugInformation+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl %ebx, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 3,
                "movl %ebx, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;testl %eax, %eax;je  <UnmapDebugInformation+>": 1,
                "movl -(%ebp), %eax;leal (%eax), %edx;movl %edx, -(%ebp);imull $, %eax, %eax;movl -(%ebp), %ecx": 1,
                "movl (%edi), %ecx;movl (%ecx,%ebx), %eax;movl (%ecx,%ebx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "leal -(%ebp), %ecx;movl %edi, %eax;calll - <UnmapDebugInformation+>;addl $, -(%ebp);addl $, -(%ebp)": 1,
                "cmpl %edi, (%ebx);jb  <UnmapDebugInformation+>;leal (%edi,%edi), %eax;movl %eax, (%ebx);calll  <SymSetSymWithAddr+>": 1,
                "shll $, %eax;addl (%ebx), %eax;movl (%ebp), %edx;movl %edx, (%eax);addl $, (%ebx)": 1,
                "movl %edx, (%eax);addl $, (%ebx);jmp  <UnmapDebugInformation+>;movl $, (%ebx);movl $, (%ebx)": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl %eax, %ecx;movl (%eax), %eax;leal (%eax,%eax,), %eax": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;testl %eax, %eax;jne  <UnmapDebugInformation+>;movl -(%ebp), %edx": 1,
                "je  <UnmapDebugInformation+>;movl $, -(%ebp);leal -(%ebp), %ecx;movl %ecx, (%esp);movl %ebx, (%esp)": 1,
                "movl %ecx, (%esp);movl %ebx, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;testl %eax, %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;calll - <UnmapDebugInformation+>;addl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "ja - <UnmapDebugInformation+>;movl $, (%esp);leal -(%ebp), %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <EnumerateLoadedModulesW>;subl $, %esp": 1,
                "calll - <UnmapDebugInformation+>;cmpl $, (%ebp);sbbl %edx, %edx;addl $, %edx;cmpl $, (%ebp)": 1,
                "je  <MiniDumpWriteDump+>;testb $, ;je  <MiniDumpWriteDump+>;movl $, (%esp);movl $, (%esp)": 5,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 2,
                "subl $, %esp;movl $, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 2,
                "movw %ax, -(%ebp);movl -(%ebp), %eax;movb %al, -(%ebp);movb $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %esi;leal (%esi,%eax), %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %edx, -(%ebp);movl %esi, -(%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %edx, -(%ebp);movl %edx, -(%ebp);jmp  <MiniDumpWriteDump+>;movl $, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl -(%ebp), %edi;movl $, %ecx": 3,
                "notl %ecx;movl $, (%esp);movl %ebx, (%esp);movl %ecx, (%esp);movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl -(%ebp), %eax": 2,
                "subl $, %esp;movl -(%ebp), %edx;addl %edx, -(%ebp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, (%esp);movl %esi, (%esp)": 1,
                "subl $, %esp;movl -(%ebp), %eax;addl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "je  <MiniDumpWriteDump+>;movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%eax), %ebx;movl (%edx), %eax;movl %eax, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp)": 1,
                "movl (%edx), %ecx;movl %ecx, -(%ebp);movl $, -(%ebp);testl %ecx, %ecx;je  <MiniDumpWriteDump+>": 1,
                "movl %eax, -(%ebp);addl $, -(%ebp);movl -(%ebp), %eax;addl %ebx, %eax;leal (%eax,%eax,), %edx": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl -(%ebp), %ebx;calll  <SymSetSymWithAddr+>": 3,
                "retl $;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx": 12,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%ebp), %ecx": 1,
                "movl %eax, (%edx);cmpl $, (%ebp);je  <MiniDumpReadDumpStream+>;addl (%eax), %esi;movl (%ebp), %edx": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, %eax;jmp  <MiniDumpReadDumpStream+>": 1,
                "movl $, %eax;jmp  <MiniDumpReadDumpStream+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "subl $, %esp;movl %edx, %edi;movl (%eax), %esi;testl %esi, %esi;je  <MiniDumpReadDumpStream+>": 1,
                "cmpl %edi, %esi;je  <MiniDumpReadDumpStream+>;movl (%esi), %ecx;movl (%esi), %ebx;movl (%edi), %eax": 1,
                "jne - <MiniDumpReadDumpStream+>;movl %esi, %eax;addl $, %esp;popl %ebx;popl %esi": 2,
                "movl %ebx, (%esp);calll - <UnmapDebugInformation+>;testl %eax, %eax;setne %al;movzbl %al, %eax": 1,
                "calll - <UnmapDebugInformation+>;testl %eax, %eax;setne %al;movzbl %al, %eax;jmp  <MiniDumpReadDumpStream+>": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 2,
                "movl %ebx, (%esp);calll *(%edx);subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "je  <MiniDumpReadDumpStream+>;subl $, %ecx;cmpl %ecx, %ebx;jbe - <MiniDumpReadDumpStream+>;leal (%ecx), %eax": 1,
                "subl $, %ecx;cmpl %ecx, %ebx;jbe - <MiniDumpReadDumpStream+>;leal (%ecx), %eax;addl $, %esp": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl %edx, %edi;movl $, %eax;movl $, %esi": 1,
                "movl %eax, (%esp);movl -(%ebp), %edx;calll *%edx;movl %eax, %ebx;cmpl %edi, %eax": 1,
                "movl (%esi), %eax;movl %eax, (%esp);movl %edi, %eax;subl %ebx, %eax;movl -(%ebp), %edx": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, %esi;testl %eax, %eax;je  <MiniDumpReadDumpStream+>": 1,
                "movl $, (%esp);movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>": 4,
                "calll *;leal (%esi,%eax,), %edi;movl %edi, %edx;movl %esi, %eax;calll - <MiniDumpReadDumpStream+>": 1,
                "movl %edi, %esi;cmpl %edx, %edi;jbe  <MiniDumpReadDumpStream+>;movl %edx, %esi;leal (%esi,%esi), %edx": 1,
                "movl %ebx, %eax;calll - <MiniDumpReadDumpStream+>;testl %eax, %eax;je  <MiniDumpReadDumpStream+>;movl $, (%esp)": 1,
                "jmp  <MiniDumpReadDumpStream+>;movl , %esi;movzwl (%ebx), %eax;movl %eax, (%esp);calll *%esi": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%ebp), %edx": 1,
                "movl (%ebp), %eax;subl $, %eax;cmpl $, %eax;jbe  <MiniDumpReadDumpStream+>;movl $, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;je  <MiniDumpReadDumpStream+>;movl (%edi), %eax;movl %eax, (%ebx)": 1,
                "movl %edx, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, -(%ebp);jmp  <MiniDumpReadDumpStream+>": 1,
                "jmp  <MiniDumpReadDumpStream+>;movl %eax, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, -(%ebp)": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;cmpl $, (%ebp);je  <MiniDumpReadDumpStream+>;cmpl $, (%ebp)": 1,
                "je  <MiniDumpReadDumpStream+>;movl $, %edx;jmp  <MiniDumpReadDumpStream+>;movl %esi, (%esp);movl -(%ebp), %ecx": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, (%ebx)": 1,
                "je  <MiniDumpReadDumpStream+>;movb $, (%ebx);leal (%ebx), %edi;movb $, %dl;testl $, %edi": 1,
                "movw %dx, (%ebx);movzbl (%ebp), %eax;andl $, %eax;movzbl (%ebx), %edx;andl $-, %edx": 1,
                "movl $, (%esp);calll *;movl %eax, (%ebx);testl %eax, %eax;je  <MiniDumpReadDumpStream+>": 1,
                "movl %edi, %edx;movl %esi, %eax;calll - <MiniDumpReadDumpStream+>;movl %eax, (%ebx);testl %eax, %eax": 1,
                "calll - <UnmapDebugInformation+>;movl %eax, %esi;jmp  <MiniDumpReadDumpStream+>;testl %esi, %esi;jne  <MiniDumpReadDumpStream+>": 1,
                "movl $, (%esp);movl $, (%esp);calll *;movl (%ebx), %eax;movl (%eax), %edx": 1,
                "setne %al;movzbl %al, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "jne  <MiniDumpReadDumpStream+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 3,
                "movl %ebx, (%esp);calll - <MiniDumpReadDumpStream+>;movl %eax, %esi;testl %eax, %eax;jne  <MiniDumpReadDumpStream+>": 3,
                "calll - <MiniDumpReadDumpStream+>;movl %eax, %esi;testl %eax, %eax;jne  <MiniDumpReadDumpStream+>;jmp  <MiniDumpReadDumpStream+>": 1,
                "jb  <MiniDumpReadDumpStream+>;ja  <MiniDumpReadDumpStream+>;cmpl %eax, -(%ebp);jb  <MiniDumpReadDumpStream+>;movl (%esi), %esi": 1,
                "movl %esi, %edx;subl $, %edx;je  <MiniDumpReadDumpStream+>;movzwl -(%ebx,%edx,), %eax;subl $, %eax": 1,
                "subl $, %edx;je  <MiniDumpReadDumpStream+>;movzwl -(%ebx,%edx,), %eax;subl $, %eax;cmpl $, %eax": 1,
                "movl $, (%esp);leal -(%ebx,%esi,), %eax;movl %eax, (%esp);calll *;movl $, %edx": 1,
                "je  <MiniDumpReadDumpStream+>;movl $, %edx;cmpl %esi, %eax;jge  <MiniDumpReadDumpStream+>;movl %esi, %ecx": 1,
                "cmpw $, -(%ebx,%ecx,);jne  <MiniDumpReadDumpStream+>;movl %edi, (%esp);subl %eax, %esi;leal (%ebx,%esi,), %eax": 1,
                "movl %eax, %esi;movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "movl %esi, (%esp);movl %eax, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %eax": 1,
                "calll  <SymSetSymWithAddr+>;cmpl $, (%ebp);je  <SymLoadModuleExW+>;testb $, ;je  <SymLoadModuleExW+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl $, %edx;movl (%ebp), %eax;calll - <MiniDumpReadDumpStream+>;movl %eax, -(%ebp);movl %eax, (%esp)": 1,
                "calll *;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movl %eax, %ebx;movzwl (%ebx), %eax;andl $-, %eax;cmpw $, %ax;jne  <SymLoadModuleExW+>": 1,
                "je  <SymLoadModuleExW+>;movl (%ebx), %ebx;testl %ebx, %ebx;jne - <SymLoadModuleExW+>;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edi;movl -(%ebp), %ebx;testb $, ;je  <SymLoadModuleExW+>": 1,
                "jmp  <SymLoadModuleExW+>;cmpl $, (%ebp);je  <SymLoadModuleExW+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "je  <SymLoadModuleExW+>;movl (%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp);calll - <MiniDumpReadDumpStream+>": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll  <SymFindFileInPath+>;movl %eax, -(%ebp);testl %eax, %eax": 3,
                "movl %eax, -(%ebp);testl %eax, %eax;jne - <SymLoadModuleExW+>;jmp - <SymLoadModuleExW+>;leal -(%ebp), %esp": 1,
                "jne - <SymLoadModuleExW+>;jmp - <SymLoadModuleExW+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, %edi;testl %ebx, %ebx": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <SymLoadModuleExW>": 1,
                "calll - <SymLoadModuleExW>;subl $, %esp;movl %eax, -(%ebp);movl %edx, -(%ebp);calll  <SymSetSymWithAddr+>": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp);movl (%ebp), %eax": 3,
                "movl (%edx), %eax;testl %eax, %eax;jne - <SymLoadModule+>;movl $, %eax;testb $, ": 1,
                "je  <SymLoadModule+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll - <MiniDumpReadDumpStream+>;movl $, %edx;testl %eax, %eax;je  <SymUnloadModule+>;movl %eax, (%esp)": 1,
                "je  <SymEnumerateModulesW+>;movl (%ebx), %ebx;testl %ebx, %ebx;jne - <SymEnumerateModulesW+>;movl $, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 7,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 7,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %esi;movl $, %eax;testl %esi, %esi": 1,
                "testl %eax, %eax;je  <EnumerateLoadedModulesW+>;movl $, %ebx;movl $, (%esp);leal -(%ebp), %eax": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;testl %eax, %eax;je  <EnumerateLoadedModulesW+>;movl $, %ecx": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl -(%ebp), %edx;movl $, %eax": 1,
                "jmp  <SymGetModuleInfoW+>;movl %edi, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl (%ebp), %edx": 1,
                "calll  <SymSetSymWithAddr+>;movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %ecx": 1,
                "je  <SymGetModuleInfoW+>;movl $, %eax;movl (%ebp), %edx;cmpl $, (%edx);ja  <SymGetModuleInfoW+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx;movl $, %eax": 1,
                "jbe  <SymGetModuleInfo+>;movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl -(%ebp), %eax": 4,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <SymGetModuleInfoW>;subl $, %esp;movl $, %edx": 2,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;cmpl $, (%ebx);jbe  <SymGetModuleInfo+>": 1,
                "jbe  <SymGetModuleInfo+>;testb $, ;je  <SymGetModuleInfo+>;movl $, (%esp);movl $, (%esp)": 1,
                "testb $, ;je  <SymGetModuleInfo+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;movl $, %edx;movl %edx, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%ebp), %edi;movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl %eax, %ecx": 1,
                "movl %eax, (%esp);calll - <.text+>;movl %eax, %ecx;movl $, %eax;movl $, %edx": 1,
                "movl $, %eax;movl $, %edx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "calll - <SymGetModuleBase>;subl $, %esp;movl %eax, %ebx;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "andl %edx, %eax;movl -(%ebp), %ebx;leave;retl $;pushl %ebp": 3,
                "leal (%ebx), %esi;movl %esi, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl $, (%ebx);movl $, (%ebx)": 1,
                "subl $, %esp;movl (%ebp), %ebx;testb $, ;je  <SymRefreshModuleList+>;movl %ebx, (%esp)": 1,
                "movl $, %eax;jmp  <SymFunctionTableAccess+>;movl $, %eax;addl $, %esp;popl %esi": 1,
                "je  <SymFunctionTableAccess+>;testl %ebx, %ebx;je  <SymFunctionTableAccess+>;leal -(%ebx), %eax;testl %eax, %eax": 1,
                "cmpl $, %eax;ja  <SymFunctionTableAccess+>;imull $, %eax, %edx;addl $, %edx;jmp  <SymFunctionTableAccess+>": 1,
                "testb $, ;je  <SymFunctionTableAccess+>;movl %ebx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %ebx, %eax;andl $, %eax;leal -(%eax), %ecx;cmpl (%edx), %ecx;jae  <SymFunctionTableAccess+>": 1,
                "andl $, %eax;leal -(%eax), %ecx;cmpl (%edx), %ecx;jae  <SymFunctionTableAccess+>;movl (%edx), %edx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %esi, %eax;movl -(%ebp), %ebx": 1,
                "movzwl (%edx), %ecx;testw %cx, %cx;js  <SymFunctionTableAccess+>;movzwl %cx, %ecx;movl %ecx, (%eax)": 1,
                "movl $, %eax;jmp  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>;movzwl %cx, %ecx": 1,
                "calll  <SymSetSymWithAddr+>;movl $, (%esi);movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "leal -(%eax), %edx;cmpw $, %dx;ja  <SymFunctionTableAccess+>;movzwl %dx, %edx;jmpl *(,%edx,)": 1,
                "movw $, (%ebx);movl (%esi), %eax;movl (%esi), %edx;movl %eax, (%ebx);movl %edx, (%ebx)": 2,
                "movw $, (%ebx);fldl (%esi);fstps (%ebx);movl $, %eax;jmp  <SymFunctionTableAccess+>": 1,
                "jmp  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>;movzwl %ax, %eax;movl %eax, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %ebx;movl $, ;movl $, ": 1,
                "movl %edx, %eax;movl %ecx, %esi;testl %edx, %edx;jne  <SymFunctionTableAccess+>;movl %ecx, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;jmp  <SymFunctionTableAccess+>;cmpl $, -(%ebx)": 1,
                "je  <SymFunctionTableAccess+>;testb $-, (%ebp);jne  <SymFunctionTableAccess+>;cmpl $, (%eax);jne  <SymFunctionTableAccess+>": 1,
                "jmp  <SymFunctionTableAccess+>;movl $, %eax;jmp  <SymFunctionTableAccess+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;jne  <SymFunctionTableAccess+>;jmp  <SymFunctionTableAccess+>;movl %ecx, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %edi;movl $, %edx;cmpl $, -(%ebp);je  <SymFunctionTableAccess+>;movw $, -(%ebp)": 1,
                "je  <SymFunctionTableAccess+>;movw $, -(%ebp);leal (%edi), %edi;movb $, %dl;movl %edx, %ecx": 1,
                "andl $, %ebx;movzbl (%ebx), %ebx;movb %bl, (%edx);movb $, (%edx);leal -(%ecx), %esi": 1,
                "movzbl -(%ebp), %ecx;movb %cl, -(%ebp,%eax);addl $, %eax;addl $, %edx;cmpl -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;cmpl $, ": 2,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl , %esi": 1,
                "movl $, -(%ebp);movl -(%ebp), %edx;movl %edx, (%esi);calll  <SymSetSymWithAddr+>;movl -(%ebp), %edx": 1,
                "subl $, %esp;movl %eax, (%esi);movl , %eax;cmpl $, (%eax);je  <SymFunctionTableAccess+>": 1,
                "cmpl $, (%eax);je  <SymFunctionTableAccess+>;leal -(%ebx), %esi;movl , %eax;movl (%eax), %eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl %eax, %ebx;calll  <SymSetSymWithAddr+>": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <SymFunctionTableAccess+>;movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "movl $, %ecx;rep  cmpsb %es:(%edi), (%esi);seta %al;setb %dl;subl %edx, %eax": 1,
                "movsbl %al, %eax;cmpl $, %eax;sbbl %eax, %eax;notl %eax;andl $, %eax": 1,
                "movl %edx, %eax;movl (%edx), %edx;movl (%eax), %eax;addl (%edx,%ecx,), %eax;leal (%eax), %esi": 1,
                "movl (%eax), %eax;addl (%edx,%ecx,), %eax;leal (%eax), %esi;movzwl (%eax), %edx;leal (%eax,%edx), %ebx": 1,
                "cmpl %ebx, %esi;jae  <SymFunctionTableAccess+>;movzbl (%esi), %eax;cmpb $-, %al;jbe  <SymFunctionTableAccess+>": 1,
                "jmp  <SymFunctionTableAccess+>;movzwl (%esi), %edx;cmpw $, %dx;jg  <SymFunctionTableAccess+>;cmpw $, %dx": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl -(%ebp), %edx;movl %edx, (%esp)": 2,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax": 6,
                "movzbl (%edx), %eax;leal (%edi,%eax), %eax;addl %eax, %esi;jmp  <SymFunctionTableAccess+>;leal (%esi), %eax": 1,
                "movl %edi, %edx;leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl %eax, -(%ebp);addl %eax, %edi": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;leal (%esi,%ecx), %esi;jmp  <SymFunctionTableAccess+>;addl $, %esi": 1,
                "calll - <SymFunctionTableAccess+>;testl %eax, %eax;je  <SymFunctionTableAccess+>;addl $, %esi;jmp  <SymFunctionTableAccess+>": 2,
                "addl $, %esi;jmp  <SymFunctionTableAccess+>;movl (%esi), %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl %edx, %edi;movl %ecx, %ebx;movl $, %edx;movl %edi, %eax": 1,
                "je  <SymFunctionTableAccess+>;cmpw $, %ax;jg  <SymFunctionTableAccess+>;cmpw $, %ax;je  <SymFunctionTableAccess+>": 4,
                "je  <SymFunctionTableAccess+>;movl $, %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl %eax, %esi": 3,
                "calll - <SymFunctionTableAccess+>;movl %eax, %esi;jmp  <SymFunctionTableAccess+>;leal (%ebx), %esi;movl %esi, %edx": 3,
                "movl %eax, %esi;jmp  <SymFunctionTableAccess+>;leal (%ebx), %esi;movl %esi, %edx;leal -(%ebp), %eax": 4,
                "cmpw $, (%ebx);sete %dl;movzbl %dl, %edx;movl %edx, -(%ebp);movl -(%ebp), %edx": 2,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl %eax, %esi;cmpl $, (%ebp)": 10,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 2,
                "calll - <SymFunctionTableAccess+>;movl (%ebx), %ecx;movl %esi, %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 2,
                "movl %eax, -(%ebp);movswl (%ebx), %esi;leal (%ebx), %eax;calll - <SymFunctionTableAccess+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);movl %eax, %ecx;movl -(%ebp), %edx": 2,
                "movl %eax, %esi;jmp  <SymFunctionTableAccess+>;leal (%ebx), %ecx;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movzbl (%ebx), %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl %eax, %esi": 4,
                "movl %esi, %edx;movl -(%ebp), %eax;calll  <SymFunctionTableAccess+>;jmp  <SymFunctionTableAccess+>;movzbl (%ebx), %ecx": 3,
                "movl %eax, %edx;movl %edi, %eax;calll - <SymFunctionTableAccess+>;movl (%ebx), %ecx;movl (%ebx), %eax": 2,
                "movl -(%ebp), %esi;testl %esi, %esi;jne  <SymFunctionTableAccess+>;movl %edi, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll  <SymSetHomeDirectoryW+>;movl %eax, %esi": 1,
                "cmpl %eax, %edx;jae  <SymFunctionTableAccess+>;movl (%esi), %eax;movl (%esi), %ecx;addl -(%eax,%ebx,), %ecx": 1,
                "movl (%edi), %ecx;addl (%edx,%eax,), %ecx;jne  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>": 1,
                "movl %esp, %ebp;pushl %esi;subl $, %esp;movl %eax, %esi;movl %edx, %eax": 1,
                "movl (%esi), %eax;movl %eax, (%esp);calll  <SymSetHomeDirectoryW+>;addl $, %esp;popl %esi": 1,
                "movl (%ebp), %edx;movl %ebx, %eax;calll - <SymFunctionTableAccess+>;movl %eax, (%esp);movl %esi, (%esp)": 2,
                "negl %eax;movl %eax, (%esp);movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %edi, %eax;je  <SymFunctionTableAccess+>;movzwl (%edi), %ecx;cmpw $, %cx;je  <SymFunctionTableAccess+>": 1,
                "calll  <SymSetHomeDirectoryW+>;movl -(%ebp), %eax;shll $, %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl %eax, (%esp);movl %edi, (%esp);movl %esi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "je  <SymFunctionTableAccess+>;movl $, %edx;calll - <SymFunctionTableAccess+>;movl %eax, %esi;testl %eax, %eax": 1,
                "movl $, %edx;calll - <SymFunctionTableAccess+>;movl %eax, %esi;testl %eax, %eax;jne  <SymFunctionTableAccess+>": 1,
                "movl %eax, %esi;testl %eax, %eax;jne  <SymFunctionTableAccess+>;jmp  <SymFunctionTableAccess+>;movl %ecx, %esi": 1,
                "movl %ebx, -(%ebp);leal (%eax), %ebx;movzwl (%eax), %edx;leal (%eax,%edx), %edx;movl %edx, -(%ebp)": 1,
                "movl %esi, -(%ebp);movzbl (%ebx), %eax;cmpb $-, %al;jbe  <SymFunctionTableAccess+>;andl $, %eax": 1,
                "movl (%ebp), %esi;movl $, %ecx;calll - <SymFunctionTableAccess+>;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "cmpw $, (%edx);je  <SymFunctionTableAccess+>;movl $, %edi;movzwl (%esi,%edi,), %edx;movl $, %ecx": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movzwl (%edx), %eax;testw %ax, %ax;jle  <SymFunctionTableAccess+>": 1,
                "movl %edx, -(%ebp);movzwl (%edx), %eax;testw %ax, %ax;jle  <SymFunctionTableAccess+>;cwtl": 1,
                "cwtl;addl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %edx": 1,
                "movl %edx, -(%ebp);movzwl (%edx), %esi;movswl %si, %ebx;leal (%edx,%ebx,), %ecx;movl %ecx, -(%ebp)": 1,
                "movl (%edx), %eax;movl %eax, (%esp);calll  <SymGetUnwindInfo+>;movl %eax, -(%ebp);jmp  <SymFunctionTableAccess+>": 1,
                "movl $, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %ecx;movl -(%ebp), %eax;addl (%eax,%ecx,), %edx": 1,
                "je  <SymFunctionTableAccess+>;jmp  <SymFunctionTableAccess+>;movl (%ebx), %eax;jmp  <SymFunctionTableAccess+>;movl $, %eax": 1,
                "movl %eax, (%esp);movzwl (%ecx), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;addl $, %esi;movl -(%ebp), %ecx;movzwl (%ecx), %eax": 1,
                "movl %eax, -(%ebp);imull %eax, %edi;calll  <SymSetSymWithAddr+>;movl %edi, (%esp);movl $, (%esp)": 2,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %edi;testl %esi, %esi;jle  <SymFunctionTableAccess+>": 2,
                "movl -(%ebp), %ecx;imull (%ecx,%esi,), %edx;addl %ebx, %edx;movl %edx, (%esp);imull %esi, %eax": 1,
                "movl %ecx, %eax;addl (%edi,%ebx,), %eax;movl $, %edx;divl -(%ebp);leal (%esi,%eax,), %esi": 1,
                "leal (%esi,%eax,), %esi;addl $, %ebx;cmpl -(%ebp), %ebx;jne - <SymFunctionTableAccess+>;movl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl %edx, %ecx;movl (%eax), %ebx": 1,
                "movl %edx, %ecx;movl (%eax), %ebx;testl %ebx, %ebx;je  <SymFunctionTableAccess+>;cmpl $, %ebx": 1,
                "movl (%eax), %edx;movl (%eax), %eax;calll - <SymFunctionTableAccess+>;jmp  <SymFunctionTableAccess+>;movl (%eax), %edx": 1,
                "calll - <SymFunctionTableAccess+>;movl $, %eax;testb $, ;je  <SymFunctionTableAccess+>;movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;movl %edx, %esi;movl %ecx, %edi;leal (%edx,%ecx), %eax": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl (%ebx), %eax;movl -(%ebp), %edi;addl (%esi), %edi;movl %edi, (%eax,%edx,);movl (%esi), %edi": 1,
                "movl (%esi), %edi;movl (%ebx), %eax;movl %edi, (%eax,%edx,);addl $, %esi;addl $, %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;leal -(%ebp), %edi;jmp  <SymFunctionTableAccess+>": 1,
                "jmp  <SymFunctionTableAccess+>;movl %esi, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 2,
                "movl $, %eax;jmp  <SymFunctionTableAccess+>;movl %edi, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx": 2,
                "calll  <SymSetSymWithAddr+>;testl %eax, %eax;jne  <SymFunctionTableAccess+>;movl -(%ebx), %eax;movl -(%ebp), %edx": 1,
                "jne  <SymFunctionTableAccess+>;movl -(%ebx), %eax;movl -(%ebp), %edx;movl %eax, (%edx);movl $, %eax": 1,
                "cmpl %esi, %edx;je  <SymFunctionTableAccess+>;movl $, %eax;cmpb $, (%edx);je  <SymFunctionTableAccess+>": 1,
                "movl %esi, %ecx;leal -(%ebp), %edx;movl %ebx, %eax;calll - <SymFunctionTableAccess+>;testl %eax, %eax": 1,
                "calll  <SymRegisterFunctionEntryCallback+>;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 2,
                "movb $, -(%ebp);movl $, -(%ebp);movzwl %di, %edx;movl -(%ebp), %ecx;movl -(%ebp), %eax": 2,
                "movzwl -(%ebp), %eax;movl $, %edx;calll - <SymFunctionTableAccess+>;movl -(%ebp), %ecx;movl (%ecx), %edx": 4,
                "sete %al;movzbl %al, %eax;movl %eax, (%esp);movl %esi, (%esp);movl -(%ebp), %eax": 4,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);cmpw $, %bx": 1,
                "movl (%esi), %eax;movl (%esi), %edi;movl %esi, %edx;addl $, %edx;movl %edx, -(%ebp)": 1,
                "cmpb $, (%esi);je  <SymFunctionTableAccess+>;movb $, -(%ebp);movl $, -(%ebp);movl $, %edx": 2,
                "calll - <SymFunctionTableAccess+>;movl %eax, %edi;movzbl (%esi), %ebx;leal (%esi), %eax;calll - <SymFunctionTableAccess+>": 1,
                "movl %ecx, -(%ebp);movl (%esi), %ecx;movzwl (%esi), %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 2,
                "movb $, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %ecx": 3,
                "movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp)": 6,
                "calll  <SymSetSymWithAddr+>;movl (%esi), %eax;movl $, %edx;calll - <SymFunctionTableAccess+>;movl %eax, %ebx": 1,
                "calll - <SymFunctionTableAccess+>;movl %ebx, (%esp);movl (%esi), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "sbbl %edx, %edx;andl $-, %edx;addl $, %edx;movl %ebx, (%esp);movl %eax, (%esp)": 2,
                "leal (%edx,%edx), %edx;movl %ebx, (%esp);movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "calll  <SymSetSymWithAddr+>;testb $, ;je  <SymFunctionTableAccess+>;movl $, (%esp);calll  <SymSetSymWithAddr+>": 2,
                "movl %esi, %edi;movl $, %ecx;movl $, %eax;repne  scasb %es:(%edi), %al;notl %ecx": 2,
                "calll  <SymSetSymWithAddr+>;testb $, %al;je  <SymFunctionTableAccess+>;movl $, %eax;movl $, %ecx": 1,
                "testb $, %al;je  <SymFunctionTableAccess+>;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al": 1,
                "leal (%esi), %eax;calll - <SymFunctionTableAccess+>;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %edx": 1,
                "movl (%esi), %ecx;movzwl (%esi), %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl -(%ebp), %ecx": 1,
                "movzwl (%esi), %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl -(%ebp), %ecx;subl (%ecx), %eax": 1,
                "movl %ecx, (%esp);movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>": 1,
                "calll - <SymFunctionTableAccess+>;movl %eax, (%esp);addl $, %esi;movl %esi, (%esp);movl -(%ebp), %eax": 1,
                "leal (%esi), %ebx;movl %ebx, %edx;leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>;addl %eax, %ebx": 2,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %ebx, %eax;calll - <SymFunctionTableAccess+>": 3,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;leal -(%ebp), %ecx;movl %ecx, (%esp);movl %ebx, (%esp)": 1,
                "je  <SymFunctionTableAccess+>;leal (%esi), %eax;calll - <SymFunctionTableAccess+>;movl %eax, (%esp);movl %ebx, (%esp)": 2,
                "movl (%esi), %eax;testl %eax, %eax;je  <SymFunctionTableAccess+>;movl $, %edx;calll - <SymFunctionTableAccess+>": 2,
                "je  <SymFunctionTableAccess+>;movl (%esi), %ebx;leal (%esi), %eax;calll - <SymFunctionTableAccess+>;movl %ebx, (%esp)": 1,
                "movl (%esi), %ebx;leal (%esi), %eax;calll - <SymFunctionTableAccess+>;movl %ebx, (%esp);movl %eax, (%esp)": 1,
                "testl %eax, %eax;je  <SymFunctionTableAccess+>;addl $, %esi;movl %esi, (%esp);movl %eax, (%esp)": 1,
                "movl %esi, (%esp);movl %eax, (%esp);movl -(%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp)": 1,
                "jmp  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>;movl (%esi), %eax;movl %eax, (%esp)": 2,
                "testb $, ;je  <SymFunctionTableAccess+>;movl (%esi), %eax;movl %eax, (%esp);movzwl (%esi), %eax": 1,
                "calll  <SymSetSymWithAddr+>;jmp  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>;movswl %bx, %ebx": 2,
                "cmpl %eax, (%ebp);jg - <SymFunctionTableAccess+>;cmpl $, -(%ebp);je  <SymFunctionTableAccess+>;movl -(%ebp), %eax": 1,
                "testb $, ;je  <SymFunctionTableAccess+>;movl $, (%esp);movl %ecx, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "movl $, (%esp);movl %ecx, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, (%esp);movl (%edi), %eax": 1,
                "movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 7,
                "testl %eax, %eax;jne  <SymFunctionTableAccess+>;movl (%ebx), %ecx;leal (%ebx), %edx;movl %ebx, %eax": 1,
                "movl %ebx, %eax;calll - <SymFunctionTableAccess+>;movl $, %edx;jmp  <SymFunctionTableAccess+>;movl $, (%esp)": 1,
                "movl $, %edx;testl %eax, %eax;jne  <SymFunctionTableAccess+>;movl (%ebx), %ecx;movl (%ebx), %edx": 1,
                "cmpl $, -(%ebp);je  <SymFunctionTableAccess+>;movl -(%ebp), %eax;shrl $, %eax;testl %eax, %eax": 3,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, -(%ebp);jmp  <SymFunctionTableAccess+>;movzbl (%edi), %eax": 1,
                "movzbl (%edi), %eax;movl %eax, (%esp);movzwl (%edi), %eax;movl %eax, (%esp);movzwl (%edi), %eax": 1,
                "jmp  <SymFunctionTableAccess+>;movl $, %eax;movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl $, %edx;movl %edx, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "testl %eax, %eax;jne  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>;movl (%esi), %eax": 2,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, -(%ebp);cmpl $-, %eax;je  <SymFunctionTableAccess+>": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 7,
                "movl %ebx, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, %eax;jmp  <SymFunctionTableAccess+>": 1,
                "movl $, %eax;jmp  <SymFunctionTableAccess+>;movl -(%ebp), %eax;movl %ebx, (%eax);movl -(%ebp), %edx": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp);movzwl (%edx), %eax": 1,
                "movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;calll  <SymFunctionTableAccess+>;movl $, %edx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;calll  <SymFunctionTableAccess+>;movl $, %edx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;addl $, %eax;movl %eax, %edi": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %ebx;movl %esi, %edx;addl -(%ebp), %edx": 1,
                "jne - <SymFunctionTableAccess+>;movl -(%ebp), %esi;jmp  <SymFunctionTableAccess+>;movl -(%ebp), %esi;movl %ebx, -(%ebp)": 1,
                "movl $, (%esp);movl %eax, (%esp);movl $, %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax": 2,
                "ja  <SymFunctionTableAccess+>;movl $, %ecx;movl $, %eax;movl -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movb $, (%edi);movl -(%ebp), %esi;movzwl (%esi), %eax": 1,
                "movl $, -(%ebp);jmp  <SymFunctionTableAccess+>;movl $, (%esp);movl -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <SymFunctionTableAccess+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "movzbl %al, %eax;movl %eax, (%esp);movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;cmpl $, -(%ebp)": 1,
                "calll - <SymFunctionTableAccess+>;movl -(%ebp), %ecx;movl -(%ebp), %edx;leal (%edx,%ecx), %ebx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %esi;addl %ebx, %esi;subl %ecx, %eax;subl %edx, %eax;addl %esi, %eax": 1,
                "movl %esi, %edi;testl %edi, %edi;jne  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl (%esi), %eax;movl -(%ebp), %edx": 1,
                "movl (%edx), %eax;movl %eax, (%esp);calll  <SymGetUnwindInfo+>;movl %eax, -(%ebp);movl %ebx, (%esp)": 1,
                "testl %eax, %eax;je  <SymFunctionTableAccess+>;movl (%eax), %eax;cmpl $, %eax;jne  <SymFunctionTableAccess+>": 1,
                "jmp  <SymFunctionTableAccess+>;movl %esi, -(%ebp);movl -(%ebp), %esi;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll  <SymRegisterFunctionEntryCallback+>;addl $, %edi": 1,
                "leal (%esi), %eax;cmpl %eax, -(%ebp);ja - <SymFunctionTableAccess+>;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 1,
                "subl -(%ebp), %eax;movl -(%ebp), %edx;addl -(%ebp), %edx;cmpl %edx, %eax;jb - <SymFunctionTableAccess+>": 1,
                "movl -(%ebp), %edx;addl -(%ebp), %edx;cmpl %edx, %eax;jb - <SymFunctionTableAccess+>;cmpl $, -(%ebp)": 1,
                "jle  <SymFunctionTableAccess+>;movl %ecx, %esi;movl $, %edi;jmp  <SymFunctionTableAccess+>;movl -(%ebp), %esi": 1,
                "movswl (%esi), %ebx;addl $, %ebx;leal (%ebx,%edi), %eax;cmpl %eax, -(%ebp);jl  <SymFunctionTableAccess+>": 1,
                "jl  <SymFunctionTableAccess+>;cmpw $, %ax;jle  <SymFunctionTableAccess+>;cmpw $, %ax;jne  <SymFunctionTableAccess+>": 1,
                "jg  <SymFunctionTableAccess+>;cmpw $, -(%ebp);jge  <SymFunctionTableAccess+>;cmpw $, -(%ebp);je  <SymFunctionTableAccess+>": 1,
                "subw $, %ax;cmpw $, %ax;ja  <SymFunctionTableAccess+>;jmp  <SymFunctionTableAccess+>;testb $-, ": 1,
                "calll - <SymFunctionTableAccess+>;movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl $, -(%ebp);movzwl -(%ebp), %edx;movl -(%ebp), %ecx;movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 2,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);cmpw $, -(%ebp)": 2,
                "addl $, %ecx;movl %ecx, -(%ebp);je  <SymFunctionTableAccess+>;cmpb $, (%esi);je  <SymFunctionTableAccess+>": 1,
                "cmpl $, -(%ebp);jle  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>;movl $, (%esp)": 1,
                "jle  <SymFunctionTableAccess+>;testb $, ;je  <SymFunctionTableAccess+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;addl $, -(%ebp);movl -(%ebp), %edi;movl $, %eax": 1,
                "ja - <SymFunctionTableAccess+>;movl -(%ebp), %eax;movl (%ebp), %ebx;movl %eax, (%ebx);cmpl $-, (%ebp)": 1,
                "cmpl $-, (%ebp);jne  <SymFunctionTableAccess+>;movl (%ebp), %ebx;movl $, (%ebx);movl $, (%ebp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl %edx, %ebx;movl %ecx, -(%ebp);calll  <SymSetSymWithAddr+>": 1,
                "movl $, %edx;movl $, %ecx;movl $, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 2,
                "movl (%ebx), %eax;calll - <SymFunctionTableAccess+>;movl $, (%esp);movl (%ebx), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %ecx;movl %ecx, (%edx);jmp  <SymFunctionTableAccess+>;movl (%ebx), %edx;movl (%eax), %ecx": 1,
                "movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx)": 2,
                "testl %eax, %eax;je  <SymFunctionTableAccess+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "subl $, %esp;movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 2,
                "movl %eax, -(%ebp);leal (%edi), %ebx;movl %ebx, %eax;calll - <SymFunctionTableAccess+>;movl %eax, -(%ebp)": 1,
                "je  <SymFunctionTableAccess+>;movl (%eax), %edx;movl %edx, -(%ebp);movl (%edi), %edx;movl %ebx, %eax": 1,
                "movl %eax, -(%ebp);movl (%edi), %edx;movl %ebx, %eax;calll - <SymFunctionTableAccess+>;cmpl $, -(%ebp)": 1,
                "calll  <SymSetSymWithAddr+>;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movzwl (%ebx), %eax": 1,
                "movl %esi, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movb $, -(%ebp);movl (%ebp), %eax": 1,
                "movl %eax, %esi;movl (%esi), %eax;movl (%eax), %ecx;leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 1,
                "calll - <SymFunctionTableAccess+>;addl $, %esi;movl (%esi), %edx;testl %edx, %edx;jne - <SymFunctionTableAccess+>": 1,
                "jne - <SymFunctionTableAccess+>;movl (%ebx), %ecx;movl $, %edx;leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 1,
                "leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movzwl (%ebx), %ecx;movl $, %edx;leal -(%ebp), %eax": 1,
                "calll - <SymFunctionTableAccess+>;movzwl (%ebx), %ecx;movl $, %edx;leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 1,
                "leal -(%ebp), %edx;leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>;testl %eax, %eax;je  <SymFunctionTableAccess+>": 5,
                "testl %eax, %eax;je  <SymFunctionTableAccess+>;leal -(%ebp), %edx;leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>": 2,
                "jmpl *(,%eax,);movl -(%ebp), %ecx;addl -(%ebp), %ecx;jmp  <SymFunctionTableAccess+>;movl -(%ebp), %ecx": 1,
                "movl %eax, (%esp);calll *;jmp  <SymFunctionTableAccess+>;movl %ecx, (%esp);movl $, (%esp)": 1,
                "jne  <SymFunctionTableAccess+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll *;jmp  <SymFunctionTableAccess+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll *;jmp  <SymFunctionTableAccess+>;movl -(%ebp), %ecx;leal -(%ebp), %edx": 1,
                "jle  <SymFunctionTableAccess+>;subl %ecx, %esi;movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;jmp  <SymFunctionTableAccess+>;movl $, %esi;movl %esi, %eax": 1,
                "movl %eax, %ecx;addl $, %eax;cmpl $, -(%eax);jne  <SymFunctionTableAccess+>;jmp  <SymFunctionTableAccess+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "movzwl (%ecx), %edx;movzwl (%ecx), %ebx;movl %ecx, %edi;addl %edx, %edi;cmpw $, (%edi)": 1,
                "movl (%eax), %eax;leal (%edx,%eax,), %eax;movl %eax, -(%ebp);movl $, ;cmpl $, ": 1,
                "leal -(%ebp), %eax;calll - <SymFunctionTableAccess+>;movl -(%ebp), %edx;movzwl (%edx), %eax;movl %edx, %edi": 1,
                "movl %edi, -(%ebp);movl %ebx, %edi;addl $, %ecx;cmpl %eax, %ecx;jne - <SymFunctionTableAccess+>": 1,
                "movl $, (%esp);movl (%edi), %eax;movl %eax, (%esp);movl $, %ecx;leal -(%ebp), %eax": 1,
                "cmpl %ebx, %eax;ja - <SymFunctionTableAccess+>;movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax)": 1,
                "movl $, (%eax);movl $, (%eax);calll - <SymFunctionTableAccess+>;movl $, %ebx;jmp  <SymFunctionTableAccess+>": 1,
                "movl $, (%eax);calll - <SymFunctionTableAccess+>;movl $, %ebx;jmp  <SymFunctionTableAccess+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %ecx;leal -(%ebp), %edx;movl (%ebp), %eax;calll - <SymFunctionTableAccess+>": 2,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;addl $, %eax;je  <SymFunctionTableAccess+>": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);leal -(%ebp), %ecx;leal -(%ebp), %edx": 1,
                "je  <SymFunctionTableAccess+>;movl $, (%esp);movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);addl $, %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "calll  <SymSetSymWithAddr+>;jmp  <SymFunctionTableAccess+>;addl $, %esi;addl $, %edi;cmpl %ebx, %esi": 1,
                "addl $, %esi;cmpl %ebx, %edi;jne - <SymFunctionTableAccess+>;movl %eax, %ebx;jmp  <SymFunctionTableAccess+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;addl $, %esi;addl $, %edi": 1,
                "movl -(%ebp), %ebx;jmp  <SymFunctionTableAccess+>;movl $, %eax;leal -(%ebp), %ecx;calll  <SymSetSymWithAddr+>": 1,
                "cmpl $, (%edx);je - <SymFunctionTableAccess+>;movl %edx, %eax;addl $, %eax;movl $, %edx": 1,
                "je  <SymFunctionTableAccess+>;movl (%ecx), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll *%edx;subl $, %esp;testl %eax, %eax;sete %al": 1,
                "subl $, %esp;movl (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp);calll *(%ebx)": 1,
                "movl %esi, (%esp);calll *(%ebx);subl $, %esp;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %esi": 1,
                "movl %esi, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <SymFunctionTableAccess+>": 2,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <SymFunctionTableAccess+>;movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "jne  <SymFunctionTableAccess+>;addl $, -(%ebp);jmp  <SymFunctionTableAccess+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal (%eax), %edx;movl %edx, -(%ebp);movl (%ebx), %edi;movl -(%ebp), %esi;cmpl %esi, %edi": 2,
                "movl %edx, -(%ebp);movl (%ebx), %edi;movl -(%ebp), %esi;cmpl %esi, %edi;jne  <SymFunctionTableAccess+>": 2,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jmp  <SymFunctionTableAccess+>": 1,
                "movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 1,
                "subl $, %esp;movl %esi, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);leal (%ebx), %eax;movl %eax, (%esp);calll *": 1,
                "movl %ebx, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;cmpl $-, %eax;jne  <FindDebugInfoFile+>": 1,
                "cmpl %eax, %ebx;ja  <FindDebugInfoFile+>;movzbl (%eax), %edx;cmpb $, %dl;je  <FindDebugInfoFile+>": 2,
                "popl %edi;popl %ebp;retl $;testb $, ;je  <FindDebugInfoFileEx+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp)": 2,
                "movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl $, %eax;retl $;pushl %ebp;movl %esp, %ebp;pushl %ebx": 1,
                "je  <FindExecutableImageExW+>;testb $, ;je  <FindExecutableImageExW+>;movl $, (%esp);movl $, (%esp)": 1,
                "addl $, %ebx;cmpb $, (%ebx);je - <MakeSureDirectoryPathExists+>;jmp  <MakeSureDirectoryPathExists+>;movl %ebx, %esi": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, %edx;jmp  <MakeSureDirectoryPathExists+>;movl $, %edx": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, %ebx;movl $, (%esp);movl (%ebp), %edx": 1,
                "leal -(%edx,%eax,), %esi;movl (%ebp), %eax;movl %eax, (%esp);calll *%ebx;movl (%ebp), %edx": 1,
                "movl %eax, (%esp);movl -(%ebp), %edx;calll *%edx;movw %ax, -(%ebp);movzwl (%esi), %eax": 1,
                "subl $, %eax;cmpl %eax, %edi;sete %al;movzbl %al, %eax;addl $, %esp": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl %edx, %edi;movl %ecx, -(%ebp);movl %edx, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 2,
                "movl %esi, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;testl %eax, %eax;jne - <SymMatchFileNameW+>": 1,
                "testl %eax, %eax;jne - <SymMatchFileNameW+>;jmp  <SymMatchFileNameW+>;movl %eax, %ebx;movl %esi, (%esp)": 1,
                "movl (%ebp), %esi;movl %esi, (%esp);calll  <SymSetSymWithAddr+>;movl (%ebp), %esi;movl %esi, (%esp)": 1,
                "movl %eax, -(%ebp);movzbl (%ebx), %eax;movb %al, -(%ebp);movsbl %al, %eax;movl %eax, (%esp)": 1,
                "cmpl %eax, -(%ebp);je  <SymMatchFileName+>;cmpb $, -(%ebp);je  <SymMatchFileName+>;cmpb $, -(%ebp)": 1,
                "jmp  <SymMatchFileName+>;movl %ebx, %eax;movl %esi, %ebx;movl %eax, %esi;cmpl $, (%ebp)": 1,
                "movl (%ebp), %eax;movl %esi, (%eax);movl (%ebp), %eax;subl $, %eax;cmpl %eax, %esi": 1,
                "movl %ebx, (%esp);calll *;movl $, (%esp);movl $, (%esp);movl $, %ecx": 1,
                "movl $, (%esp);movl $, (%esp);movl $, %ecx;movl %ebx, %edx;movl (%ebp), %eax": 1,
                "movl %ebx, %edx;movl (%ebp), %eax;calll - <SymMatchFileNameW+>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %ebx, %eax": 2,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx": 2,
                "movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 2,
                "movl $, (%esp);movl %edi, (%esp);movl , %edx;calll *%edx;movl %eax, %ebx": 2,
                "leal (%esi,%esi), %eax;movl %eax, (%esp);movl %edi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "leal (%ebx), %edi;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, %ecx": 2,
                "movl -(%ebp), %eax;calll - <SymMatchFileNameW+>;testl %eax, %eax;je  <SymFindFileInPathW+>;jmp  <SymFindFileInPathW+>": 1,
                "calll - <SymMatchFileNameW+>;testl %eax, %eax;je  <SymFindFileInPathW+>;jmp  <SymFindFileInPathW+>;movl %edi, (%esp)": 1,
                "movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <SymFindFileInPathW>;subl $, %esp": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, %esi": 1,
                "cmpw $, %dx;jne - <SymFindFileInPath+>;addl $, %eax;movl %eax, -(%ebp);movl %eax, (%esp)": 1,
                "movl %ebx, %edx;movl -(%ebp), %eax;calll - <SymMatchFileNameW+>;testl %eax, %eax;je  <SymFindFileInPath+>": 1,
                "movl %eax, (%ebx);testl %eax, %eax;jne  <SymFindFileInPath+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "calll - <SymFindFileInPath+>;testl %eax, %eax;je  <SymFindFileInPath+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %esi;movl (%ebx), %edx;testl %edx, %edx": 1,
                "cmpl %ecx, %edi;jbe  <SymFindFileInPath+>;testb $, ;je  <SymFindFileInPath+>;movl %ecx, (%esp)": 1,
                "movl (%edi), %eax;movl %eax, (%esp);movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, (%edi);imull $, (%ebx), %eax": 1,
                "addl (%esi), %eax;movl (%eax), %eax;jmp  <SymFindFileInPath+>;movl $, %eax;movl -(%ebp), %ebx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;cmpw $, (%esi)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;movb $, -(%ebp);movl (%ebp), %edx": 1,
                "movl %eax, -(%ebp);movzwl (%ebx), %edx;cmpl %eax, %edx;jg - <SymFindFileInPath+>;cmpl $, (%ebx)": 1,
                "cmpl %eax, %edx;jg - <SymFindFileInPath+>;cmpl $, (%ebx);je  <SymFindFileInPath+>;movl %ebx, %eax": 1,
                "js  <SymFindFileInPath+>;movl (%eax), %ecx;movzwl (%ecx), %ebx;movl $, %eax;cmpl %ebx, %edx": 2,
                "movzwl (%ecx), %ebx;movl $, %eax;cmpl %ebx, %edx;jge  <SymFindFileInPath+>;imull $, %edx, %edx": 2,
                "calll - <SymFindFileInPath+>;testl %eax, %eax;je  <SymFindFileInPath+>;testl %esi, %esi;je  <SymFindFileInPath+>": 1,
                "movl (%ebx), %eax;movl (%eax), %ebx;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <SymFindFileInPath+>;testl %eax, %eax;je  <SymFindFileInPath+>": 1,
                "jmp  <SymFindFileInPath+>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <WinDbgExtensionDllInit+>;movl %eax, %esi": 1,
                "movl $, %esi;jmp  <SymFindFileInPath+>;movl $, %esi;cmpl $-, %esi;je  <SymFindFileInPath+>": 1,
                "jmp  <SymFindFileInPath+>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <SymFindFileInPath+>;jmp  <SymFindFileInPath+>": 3,
                "je  <SymFindFileInPath+>;movl %ebx, -(%ebp);testl %ebx, %ebx;je  <SymFindFileInPath+>;movl $, %edx": 1,
                "testl %ebx, %ebx;jle  <SymFindFileInPath+>;movl $, -(%ebp);movl (%ebp), %ebx;addl $, %ebx": 1,
                "movl %edi, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <SymFindFileInPath+>;testb $, ;je  <SymFindFileInPath+>;movswl (%esi), %eax": 1,
                "addl (%edx), %eax;movl (%eax), %edx;movl $, %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "addl (%ecx), %eax;adcl (%ecx), %edx;testl %edx, %edx;je  <SymFindFileInPath+>;movl %eax, (%esp)": 1,
                "testl %edx, %edx;je  <SymFindFileInPath+>;movl %eax, (%esp);movl %edx, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);movl %edx, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <SymFindFileInPath+>": 1,
                "jmp  <SymFindFileInPath+>;leal -(%ebp), %ecx;movl %ecx, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx": 1,
                "jne - <SymFindFileInPath+>;movzbl (%esi), %eax;addl $, %eax;addl %eax, -(%ebp);leal (%eax,%eax,), %eax": 1,
                "addl %eax, -(%ebp);leal (%eax,%eax,), %eax;leal (%esi,%eax,), %esi;movl -(%ebp), %ebx;cmpl %ebx, -(%ebp)": 1,
                "mull %edi;movl %edx, %edi;testl %edx, %edx;je  <SymFindFileInPath+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <SymFindFileInPath+>;addl $, %ecx;movl (%edx), %eax": 1,
                "movzwl (%edx), %eax;leal (%edx,%eax), %eax;movl %eax, (%esp);movl %esi, (%esp);movl (%ebp), %ecx": 1,
                "cmpl $, (%ebx);je  <SymFindFileInPath+>;movl %esi, -(%ebp);testl %esi, %esi;je  <SymFindFileInPath+>": 1,
                "cmpl $, -(%ebp);je  <SymFindFileInPath+>;movl -(%ebp), %edi;addl (%ebx), %edi;leal (%esi,%esi,), %eax": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movzwl (%eax), %eax;movl -(%ebp), %edx": 1,
                "calll  <SymSetSymWithAddr+>;movl %eax, -(%ebp);movb $, -(%ebp);jmp  <SymFindFileInPath+>;movl -(%ebp), %edx": 1,
                "jmp  <SymFindFileInPath+>;movl -(%ebp), %edx;addl (%edi), %edx;movl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpb $, (%eax);sete %al;movzbl %al, %eax;addl %eax, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl %edx, (%esp);movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll  <SymGetUnwindInfo+>": 1,
                "movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll  <SymGetUnwindInfo+>;movl %eax, (%esp)": 1,
                "movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx)": 2,
                "movl $, (%edx);movl %ebx, %eax;calll - <SymFindFileInPath+>;movl $, %eax;movl %eax, -(%ebp)": 1,
                "movl $, %eax;movl %eax, -(%ebp);jmp  <SymFindFileInPath+>;movl $, -(%ebp);movl (%ebp), %ebx": 1,
                "movl %eax, -(%ebp);movl (%ebx), %ebx;testb $-, ;jne  <SymFindFileInPath+>;leal -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <SymFindFileInPath+>;movl %ebx, -(%ebp);movl $, (%esp)": 1,
                "testl %eax, %eax;je  <SymFindFileInPath+>;movl %ebx, -(%ebp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl %ebx, (%esp);calll  <SymRegisterFunctionEntryCallback+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;movl $, (%esp);movl (%edi), %eax;movl %eax, (%esp)": 1,
                "movl %edx, -(%ebp);movl $, (%esp);movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl %ecx, %eax;nop;jb  <SymFindFileInPath+>;movl %esi, %eax;movl -(%ebp), %edx": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll  <SymRegisterFunctionEntryCallback+>;addl $, %esi;movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);jmp  <SymFindFileInPath+>;movl $, %eax;testb $, ;jne - <SymFindFileInPath+>": 1,
                "movl %edi, -(%ebp);movw $, -(%ebp);cmpl $, (%ebp);jne  <SymFindFileInPath+>;testl %ebx, %ebx": 1,
                "movl $, (%esp);movl $, (%esp);calll *;movl $, (%esp);movl $, (%esp)": 1,
                "je  <SymFindFileInPath+>;movl $, -(%ebp);jmp  <SymFindFileInPath+>;testl %ebx, %ebx;je  <SymFindFileInPath+>": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, -(%ebp);calll  <SymSetSymWithAddr+>;movl $, (%esp)": 1,
                "je  <SymFindFileInPath+>;leal (%eax), %eax;movl %eax, -(%ebp);movl %eax, (%esi);movl %eax, %edi": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, (%esi);testl %eax, %eax;je  <SymFindFileInPath+>": 2,
                "je  <SymFindFileInPath+>;movl $, (%esi);movl $, (%esi);movl $, %edx;movl -(%ebp), %eax": 1,
                "je  <SymFindFileInPath+>;cmpw $, %ax;jne  <SymFindFileInPath+>;jmp  <SymFindFileInPath+>;movl $, (%esi)": 1,
                "cmpw $, (%eax);je  <SymFindFileInPath+>;movl $, %ebx;movl %esi, -(%ebp);imull $, %ebx, %esi": 1,
                "je  <SymFindFileInPath+>;cmpl $, (%eax);je  <SymFindFileInPath+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;je  <SymFindFileInPath+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "mull -(%ebp);addl %ecx, %eax;adcl %ebx, %edx;movl %eax, %ecx;movl %edx, %ebx": 1,
                "addl $, %ecx;adcl $, %ebx;cmpl %ebx, %edi;jb  <SymFindFileInPath+>;ja  <SymFindFileInPath+>": 1,
                "movl -(%ebp), %edi;movl %edi, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>;movl %ebx, (%esi)": 1,
                "movl $, (%esi);jmp  <SymFindFileInPath+>;movl $, (%esi);movl -(%ebp), %eax;calll - <SymFindFileInPath+>": 1,
                "movl %eax, (%esp);addl -(%ebp), %esi;movl %esi, (%esp);movl %ebx, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "movl (%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ebx, %edx;orl %esi, %edx": 1,
                "movl %edx, %esi;movl (%eax,%edx,), %edx;testl %edx, %edx;je  <ImageDirectoryEntryToDataEx+>;movl (%eax,%esi,), %ecx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <ImageDirectoryEntryToDataEx>;subl $, %esp;leave": 1,
                "movl $, %eax;retl $;testb $, ;je  <EnumerateLoadedModulesExW+>;pushl %ebp": 1,
                "je  <SymEnumProcesses+>;pushl %ebp;movl %esp, %ebp;subl $, %esp;movl $, (%esp)": 1,
                "retl $;movl $, %eax;retl $;testb $, ;je  <SymEnumSymbolsForAddrW+>": 1,
                "movl $, %eax;retl $;testb $, ;je  <SymFromTokenW+>;pushl %ebp": 1,
                "testb $, ;je  <SymGetFileLineOffsets+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "retl $;movl $, %eax;retl $;testb $, ;je  <SymGetLineNextW+>": 1,
                "movl $, %eax;retl $;testb $, ;je  <SymGetLinePrevW+>;pushl %ebp": 1,
                "testb $, ;je  <SymGetScope+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "testb $, ;je  <SymGetScopeW+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "testb $, ;je  <SymGetSourceFileFromToken+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "testb $, ;je  <SymGetSourceVarFromToken+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "retl $;movl $, %eax;retl $;testb $, ;je  <SymPrev+>": 1,
                "retl $;testb $, ;je  <SymSetScopeFromIndex+>;pushl %ebp;movl %esp, %ebp": 1,
                "testb $, ;je  <SymSetScopeFromIndex+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "retl $;movl $, %eax;retl $;testb $, ;je  <SymSrvGetFileIndexStringW+>": 1,
                "testb $, ;je  <SymSrvIsStoreW+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "movl $, %eax;retl $;testb $, ;je  <SymSrvStoreFile+>;pushl %ebp": 1,
                "movl $, %eax;retl $;testb $, ;je  <FindDebugInfoFileExW+>;pushl %ebp": 1,
                "je  <SymEnumTypesByNameW+>;pushl %ebp;movl %esp, %ebp;subl $, %esp;movl $, (%esp)": 1,
                "je  <SymGetUnwindInfo+>;pushl %ebp;movl %esp, %ebp;subl $, %esp;movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl (%edi), %eax": 1,
                "movl %ecx, %esi;subl $, %esi;movl %ebx, %edi;movl %edx, %ecx;repne  scasb %es:(%edi), %al": 1,
                "notl %edx;leal -(%edx), %edi;calll  <SymSetSymWithAddr+>;leal (%esi,%edi), %edx;movl %edx, (%esp)": 1,
                "movl $, -(%ebp);jmp  <SymGetUnwindInfo+>;movl $, -(%ebp);movl (%ebp), %esi;movl %esi, ": 1,
                "movl (%edi), %eax;movl %esi, (%esp);movl %ebx, (%esp);calll *(%eax);testl %eax, %eax": 1,
                "movl %ebx, (%esp);calll *(%eax);testl %eax, %eax;je  <SymGetUnwindInfo+>;testl %eax, %eax": 1,
                "leal (%esi), %esi;jmp  <SymGetUnwindInfo+>;movl (%esi), %esi;testl %esi, %esi;jne - <SymGetUnwindInfo+>": 1,
                "movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;movl %ecx, %esi;notl %esi": 1,
                "calll  <SymSetSymWithAddr+>;addl (%edi), %esi;movl %esi, (%edi);movl (%edi), %eax;movb $, (%eax,%esi)": 1,
                "testl %eax, %eax;jne - <SymGetUnwindInfo+>;movl (%ebp), %edi;movl (%edi), %eax;movl -(%ebp), %edx": 1,
                "movl (%edi), %edx;shll $, %eax;movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp)": 1,
                "jmp  <SymGetUnwindInfo+>;testb $, (%esi);je  <SymGetUnwindInfo+>;movl (%ecx), %edx;movl (%edx), %eax": 1,
                "testb $, (%esi);je  <SymGetUnwindInfo+>;movl (%ecx), %edx;movl (%edx), %eax;testl %eax, %eax": 1,
                "je  <SymGetUnwindInfo+>;movl (%ecx), %edx;movl (%edx), %eax;testl %eax, %eax;je  <SymGetUnwindInfo+>": 1,
                "testl %eax, %eax;je  <SymGetUnwindInfo+>;testb $, (%eax);jne  <SymGetUnwindInfo+>;jmp  <SymGetUnwindInfo+>": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;jmp  <SymGetUnwindInfo+>;movl $, -(%ebp)": 1,
                "testl %eax, %eax;jne - <SymGetUnwindInfo+>;jmp - <SymGetUnwindInfo+>;movl (%eax), %esi;testl %esi, %esi": 1,
                "movl (%edx), %esi;movl %esi, (%eax);movl %eax, (%edx);movl (%edx), %esi;andl $-, %esi": 1,
                "jmp - <SymGetUnwindInfo+>;movl (%eax), %esi;testl %esi, %esi;jne - <SymGetUnwindInfo+>;jmp  <SymGetUnwindInfo+>": 1,
                "orl %edi, %esi;movl %esi, (%eax);orl $, (%edx);movl %eax, (%ecx);movl %eax, %edx": 1,
                "nop;leal (%esi), %esi;jmp - <SymGetUnwindInfo+>;xorl $, (%edx);xorl $, (%eax)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp);movl $, %eax;cmpl $, (%ebp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, %eax;jmp  <SymEnumSourceFilesW+>": 1,
                "je  <SymEnumSourceFilesW+>;movl $, -(%ebp);movl $, %esi;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <SymEnumSourceFilesW+>": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <SymEnumSourceFilesW+>;movl %edi, -(%ebp)": 1,
                "movl %eax, %esi;testl %eax, %eax;je  <SymEnumSourceFilesW+>;movl %edi, -(%ebp);movl %edi, (%esp)": 1,
                "movl (%ebp), %edi;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl (%ebp), %eax": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, -(%ebp);calll  <SymSetSymWithAddr+>;movl -(%ebp), %edx": 3,
                "movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %ebx;testb $, ;je  <SymEnumSourceLines+>": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;testb $, ;je  <SymEnumSourceLines+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, -(%ebp)": 3,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <SymGetSourceFileToken+>;movl %esi, (%esp);movl $, (%esp)": 1,
                "jmp  <SymGetSourceFileToken+>;movl %esi, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl (%ebp), %edx": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;testb $, ;je  <SymGetSourceFileTokenW+>;movl $, (%esp)": 1,
                "movl %ebp, %esp;popl %ebp;retl $;nop;nop": 1,
                "movl %eax, (%esp);movl $, (%esp);movl , %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "movl $, (%esp);movl , %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;leave": 1,
                "movl %eax, %ebx;movl %edx, %esi;cmpl $, (%eax);jbe  <SymGetSourceFileTokenW+>;movl $, (%esp)": 1,
                "movl %edx, %esi;cmpl $, (%eax);jbe  <SymGetSourceFileTokenW+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <SymGetSourceFileTokenW+>;movl , %eax": 1,
                "testl %eax, %eax;js  <SymGetSourceFileTokenW+>;movl , %eax;addl $, %eax;movl %eax, ": 1,
                "movl , %eax;movl %ebx, (,%eax,);jmp  <SymGetSourceFileTokenW+>;movl $, %eax;addl $, %esp": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %esi;jmp  <SymGetSourceFileTokenW+>;cmpb $, %bl": 1,
                "addl $, %esi;addl $, %ecx;movl %edi, %edx;jmp  <SymGetSourceFileTokenW+>;movl %edi, %edx": 1,
                "cmpl $, %ebx;jbe - <SymGetSourceFileTokenW+>;cmpb $, (%ecx);jne  <SymGetSourceFileTokenW+>;movb $, (%ecx)": 1,
                "testl %edx, %edx;jg  <SymGetSourceFileTokenW+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll *;addl $, %esp;popl %ebx;popl %esi": 1,
                "leal (%eax), %edx;movl %edx, (%esp);movl (%eax), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;addl $, %ebx;cmpl %ebx, (%esi)": 1,
                "calll *;movl (,%esi,), %edi;shll $, %edi;addl , %edi;movl (%edi), %eax": 1,
                "addl , %edi;movl (%edi), %eax;cmpl %eax, %ebx;jl  <SymGetSourceFileTokenW+>;leal (%ebx), %edx": 1,
                "movl %eax, %esi;movl %edx, %edi;movl (%eax), %eax;movzbl (%eax), %edx;cmpb $, %dl": 1,
                "cmpb $, %dl;je  <SymGetSourceFileTokenW+>;movl $, %edx;movl %esi, %eax;calll - <SymGetSourceFileTokenW+>": 1,
                "movzbl (%eax), %ecx;movsbl %cl, %edx;subl $, %edx;cmpl $, %edx;ja  <SymGetSourceFileTokenW+>": 2,
                "adcl $-, %ebx;movl (%edi), %eax;movl (%edi), %edx;shldl $, %eax, %edx;shll $, %eax": 2,
                "movl (%edi), %eax;movl (%edi), %edx;shldl $, %eax, %edx;shll $, %eax;addl %ecx, %eax": 2,
                "movl (%esi), %eax;movl %eax, (%esp);calll *;movl %eax, (%edi);movl %edx, (%edi)": 1,
                "jmp  <SymGetSourceFileTokenW+>;movl $, %eax;jmp  <SymGetSourceFileTokenW+>;movl $, %eax;addl $, %esp": 1,
                "movl %edi, %eax;calll - <SymGetSourceFileTokenW+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movzbl (%eax), %edx;cmpb $, %dl;je  <SymGetSourceFileTokenW+>;testb %dl, %dl;je  <SymGetSourceFileTokenW+>": 2,
                "movsbl %dl, %edx;subl $, %edx;cmpl $, %edx;jbe  <SymGetSourceFileTokenW+>;addl $, %eax": 1,
                "je  <SymGetSourceFileTokenW+>;addl $, %eax;movsbl %dl, %edx;subl $, %edx;cmpl $, %edx": 1,
                "cmpl %eax, (%ebx);jne  <SymGetSourceFileTokenW+>;movl $, %edx;movl %ebx, %eax;calll - <SymGetSourceFileTokenW+>": 1,
                "movl $, %edx;movl %ebx, %eax;calll - <SymGetSourceFileTokenW+>;movl $, %eax;jmp  <SymGetSourceFileTokenW+>": 20,
                "je  <SymGetSourceFileTokenW+>;cmpb $, %dl;je  <SymGetSourceFileTokenW+>;cmpb $, %dl;jne  <SymGetSourceFileTokenW+>": 1,
                "cmpb $, %dl;je  <SymGetSourceFileTokenW+>;cmpb $, %dl;jne  <SymGetSourceFileTokenW+>;testl %eax, %eax": 1,
                "jmp  <SymGetSourceFileTokenW+>;addl $, %eax;jmp  <SymGetSourceFileTokenW+>;testl %eax, %eax;jne  <SymGetSourceFileTokenW+>": 1,
                "movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl $, -(%ebp);leal -(%ebp), %edx;movl %ebx, %eax;calll - <SymGetSourceFileTokenW+>;cmpl $-, %eax": 2,
                "calll - <SymGetSourceFileTokenW+>;jmp  <SymGetSourceFileTokenW+>;leal (%eax), %edx;movl %edx, (%ebx);cmpl $, -(%ebp)": 1,
                "movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll  <SymSetHomeDirectoryW+>;movl %eax, -(%ebp)": 9,
                "movl $, %eax;jmp  <SymGetSourceFileTokenW+>;movl %edx, (%ebx);leal -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "jmp  <SymGetSourceFileTokenW+>;movzbl (%edx), %eax;addl $, %edx;movl %edx, (%ebx);cmpb $, %al": 1,
                "calll  <SymSetHomeDirectoryW+>;movl %eax, -(%ebp);jmp  <SymGetSourceFileTokenW+>;leal -(%ebp), %ecx;movl $, %edx": 3,
                "movl $, %eax;jmp  <SymGetSourceFileTokenW+>;testl %eax, %eax;jle  <SymGetSourceFileTokenW+>;cmpl $, -(%ebp)": 1,
                "jmp  <SymGetSourceFileTokenW+>;testl %eax, %eax;jle  <SymGetSourceFileTokenW+>;cmpl $, -(%ebp);jne  <SymGetSourceFileTokenW+>": 1,
                "testl %eax, %eax;jns  <SymGetSourceFileTokenW+>;cmpl $, -(%ebp);jle  <SymGetSourceFileTokenW+>;movl -(%ebp), %eax": 1,
                "addl %edx, %eax;movl %eax, %edx;sarl $, %edx;cmpl $, %ecx;jg  <SymGetSourceFileTokenW+>": 1,
                "addl $, %esi;adcl $, %edi;movl %esi, -(%ebp);movl %edi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl -(%ebp), %eax;xorb $, %ah;orl %edi, %eax": 1,
                "movl -(%ebp), %eax;xorb $, %ah;orl %edi, %eax;je  <SymGetSourceFileTokenW+>;movl $, %eax": 1,
                "movl $, %edx;movl $, %ecx;shldl $, %eax, %edx;shll $, %eax;movl -(%ebp), %edi": 1,
                "movl $, %eax;movl $, %edx;movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "testl %eax, %eax;jne  <SymGetSourceFileTokenW+>;movl %esi, (%esp);movl $, (%esp);movl -(%ebp), %edx": 1,
                "movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl $, %eax;testb $, ;je  <SymGetSourceFileTokenW+>;movl %esi, (%esp);calll  <SymSetHomeDirectoryW+>": 1,
                "calll  <SymSetSymWithAddr+>;movl $, %eax;jmp  <SymGetSourceFileTokenW+>;movl -(%ebp), %eax;movl (%eax), %esi": 1,
                "movl (%ebx), %eax;cmpb $, (%eax);jne  <SymGetSourceFileTokenW+>;addl $, %eax;movl %eax, (%ebx)": 2,
                "calll - <SymGetSourceFileTokenW+>;movl (%ebx), %eax;movzbl (%eax), %edx;addl $, %eax;movl %eax, (%ebx)": 1,
                "calll - <SymGetSourceFileTokenW+>;jmp  <SymGetSourceFileTokenW+>;movl (%ebx), %edx;movzbl (%edx), %eax;cmpb $, %al": 1,
                "cmpb $, (%eax);jne  <SymGetSourceFileTokenW+>;addl $, %eax;movl %eax, (%ebx);movl (%ebx), %eax": 1,
                "calll *%edx;testl %eax, %eax;jne  <SymGetSourceFileTokenW+>;movl $, %edx;movl %ebx, %eax": 1,
                "cmpb $, %dl;je  <SymGetSourceFileTokenW+>;cmpb $, %dl;je  <SymGetSourceFileTokenW+>;movl $, %edx": 1,
                "calll - <SymGetSourceFileTokenW+>;jmp  <SymGetSourceFileTokenW+>;movl (%ebx), %eax;cmpb $, (%eax);jne - <SymGetSourceFileTokenW+>": 1,
                "leal (%ebx,%esi), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "jmp  <SymGetSourceFileTokenW+>;movl %esi, (%ebx);movl (%ebx), %edx;movzbl (%edx), %eax;cmpb $, %al": 1,
                "jmp  <SymGetSourceFileTokenW+>;movl $, (%esp);movl $, (%esp);leal (%ebx,%esi), %eax;movl %eax, (%esp)": 2,
                "movl %eax, -(%ebp);jmp  <SymGetSourceFileTokenW+>;addl $, %edx;movl %edx, (%ebx);leal -(%ebp), %ecx": 1,
                "movl %ebx, %eax;calll - <SymGetSourceFileTokenW+>;movl $, %eax;jmp  <SymGetSourceFileTokenW+>;movl $, %eax": 1,
                "movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll  <SymSetHomeDirectoryW+>;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;calll - <SymGetSourceFileTokenW+>;movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %edx, (%ecx)": 1,
                "movl $, %eax;testb $, ;je  <SymGetSourceFileTokenW+>;movl $, (%esp);movl -(%ebp), %edx": 1,
                "testb $, ;je  <SymGetSourceFileTokenW+>;movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, -(%ebp);jne  <SymGetSourceFileTokenW+>;jmp  <SymGetSourceFileTokenW+>;cmpb $-, -(%ebp);je  <SymGetSourceFileTokenW+>": 3,
                "movl $, (%esp);movl %ebx, (%esp);calll *;testl %eax, %eax;je  <SymGetSourceFileTokenW+>": 1,
                "movl -(%ebp), %eax;movb $, (%eax);movl %ebx, %edi;movl $, %eax;movl $, %ecx": 1,
                "movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;movl %ecx, %edx;notl %edx": 1,
                "leal -(%eax), %edi;leal -(%edi,%edx), %eax;cmpl -(%ebp), %eax;jb  <SymGetSourceFileTokenW+>;addl %eax, -(%ebp)": 1,
                "jle  <SymGetSourceFileTokenW+>;movl $, %ebx;testb $, ;je  <SymGetSourceFileTokenW+>;movl $, (%esp)": 1,
                "testb $, ;je  <SymGetSourceFileTokenW+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;jmp  <SymGetSourceFileTokenW+>;cmpb $, -(%ebp);je  <SymGetSourceFileTokenW+>;cmpb $, -(%ebp)": 1,
                "je  <SymGetSourceFileTokenW+>;cmpb $-, -(%ebp);ja  <SymGetSourceFileTokenW+>;cmpb $, -(%ebp);je  <SymGetSourceFileTokenW+>": 1,
                "ja  <SymGetSourceFileTokenW+>;cmpb $-, -(%ebp);je  <SymGetSourceFileTokenW+>;cmpb $-, -(%ebp);jne  <SymGetSourceFileTokenW+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <SymRegisterFunctionEntryCallback+>": 3,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll  <SymRegisterFunctionEntryCallback+>;movl %eax, -(%ebp);movl %eax, (%esp)": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %edx;leal -(%ebp), %eax;calll - <SymGetSourceFileTokenW+>;jmp  <SymGetSourceFileTokenW+>": 1,
                "movl $, %edx;leal -(%ebp), %eax;calll - <SymGetSourceFileTokenW+>;movb $, -(%ebp);movl , %eax": 1,
                "leal -(%ebp), %eax;calll - <SymGetSourceFileTokenW+>;movb $, -(%ebp);movl , %eax;movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);jmp  <SymGetSourceFileTokenW+>;testb $, ;je  <SymGetSourceFileTokenW+>;movl %eax, (%esp)": 1,
                "notl %ecx;cmpb $, (%ebx,%ecx);jne  <SymGetSourceFileTokenW+>;movl %ebx, %eax;calll - <SymGetSourceFileTokenW+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "jmp  <SymGetSourceFileTokenW+>;addl %eax, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);calll  <SymSetSymWithAddr+>": 2,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, -(%ebp);imull $, -(%ebp), %eax;addl -(%ebp), %eax": 3,
                "movl -(%ebp), %edx;imull $, %edx, %eax;addl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %ecx": 2,
                "movl $, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);addl $, %edx;movl %edx, -(%ebp)": 2,
                "cmpw $, (%edx);jne  <SymGetSourceFileTokenW+>;movl (%ebp), %edx;movl -(%ebp), %ecx;subl (%ecx), %edx": 1,
                "movl %eax, -(%ebp);movswl (%esi), %edx;movl %edx, -(%ebp);movl -(%ebp), %ebx;cmpl -(%ebp), %ebx": 1,
                "movl -(%ebp), %eax;imull $, -(%ebp), %edx;movl -(%ebp), %ecx;movl %ecx, (%eax,%edx);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "addl $, %edx;movl %edx, -(%ebp);jmp  <SymGetSourceFileTokenW+>;movl %ebx, %ecx;movl $, %edx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll  <SymSetHomeDirectoryW+>;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, -(%ebp);movl $, (%esp);movl %eax, %ecx;movl (%ebp), %edx;leal -(%ebp), %eax": 1,
                "je  <SymGetSourceFileTokenW+>;calll - <SymGetSourceFileTokenW+>;movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <SymGetSourceFileTokenW+>;movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <SymGetUnwindInfo+>;movl %eax, -(%ebp)": 2,
                "calll  <SymSetSymWithAddr+>;movl $, %ecx;movl -(%ebp), %edx;movl (%ebp), %eax;calll - <SymGetSourceFileTokenW+>": 1,
                "movl , %edi;cmpl , %edi;jne  <SymGetSourceFileTokenW+>;movl , %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;movl %ecx, %edi": 1,
                "movl %eax, %edx;shll $, %edx;addl , %edx;movl -(%ebp), %ecx;movl %ecx, (%edx)": 1,
                "movl $, (%edx);movl $, (%edx);leal (%eax), %edx;movl %edx, ;calll - <SymGetSourceFileTokenW+>": 1,
                "movl %edx, %esi;movl $, %ebx;cmpl (%edi), %esi;jne  <SymGetSourceFileTokenW+>;movl (%edi), %eax": 1,
                "movl $, -(%ebp);jmp  <SymGetSourceFileTokenW+>;movl $, -(%ebp);jmp  <SymGetSourceFileTokenW+>;movl -(%ebp), %esi": 1,
                "jmp  <SymGetSourceFileTokenW+>;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);calll  <SymSetSymWithAddr+>;movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl , %eax;movl (%eax,%esi), %esi": 1,
                "movzwl -(%ebp), %edx;addl %edx, %eax;movl %eax, %edx;sarl $, %edx;addl (%ebx), %eax": 1,
                "adcl (%ebx), %edx;jmp  <SymGetSourceFileTokenW+>;movzwl (%ebx), %eax;shll $, %eax;movl $, %edx": 1,
                "movl (%ebx), %eax;movl (%ebx), %edx;jmp  <SymGetSourceFileTokenW+>;movl $, %eax;movl $, %edx": 1,
                "movl (%ebx), %edx;jmp  <SymGetSourceFileTokenW+>;movl $, %eax;movl $, %edx;testb $, ": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <SymGetSourceFileTokenW+>;movl %edx, (%esp)": 1,
                "subl $, %esp;movl $, %edx;testl %eax, %eax;je  <SymGetSourceFileTokenW+>;testl %ebx, %ebx": 2,
                "je  <SymGetSourceFileTokenW+>;testl %ebx, %ebx;je  <SymGetSourceFileTokenW+>;movl -(%ebp), %eax;movl %eax, (%ebx)": 2,
                "movl %eax, (%ebx);movb $, %dl;jmp  <SymGetSourceFileTokenW+>;movl $, %edx;movl %edx, %eax": 2,
                "calll *(%eax);subl $, %esp;jmp  <SymGetSourceFileTokenW+>;leal -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl %edx, (%esp);calll *(%eax);subl $, %esp;leal -(%ebp), %esp;popl %ebx": 1,
                "testl %ecx, %ecx;je  <SymGetSourceFileTokenW+>;movl %edx, (%esp);movl (%eax), %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl (%ebp), %ecx;cmpl $, (%eax);je  <SymGetSourceFileTokenW+>": 2,
                "subl $, %esp;jmp  <SymGetSourceFileTokenW+>;movl %edx, (%esp);movl %ecx, (%esp);movl (%eax), %edx": 1,
                "movl %edx, (%esp);movl %ecx, (%esp);movl (%eax), %edx;movl %edx, (%esp);calll *(%eax)": 2,
                "testl %eax, %eax;je  <StackWalk+>;movl -(%ebp), %edx;movl %edx, (%ebx);movzwl -(%ebp), %edx": 1,
                "movl (%ebp), %edx;movl %edx, -(%ebp);movl $, -(%ebp);cmpl $, (%ebp);jne  <StackWalk+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;testb $, ;je  <SymRegisterFunctionEntryCallback+>": 1,
                "calll  <SymSetSymWithAddr+>;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl (%edx), %ecx;movl (%edx), %eax;movl %ecx, %edi;subl %eax, %edi;cmpl %edi, %esi": 2,
                "testl %eax, %eax;je  <SymRegisterFunctionEntryCallback+>;leal (%eax), %eax;addl %eax, %esi;movl %esi, (%edx)": 1,
                "movl %edx, (%ecx);movl %edx, (%ebx);jmp  <SymRegisterFunctionEntryCallback+>;movl $, %eax;leal -(%ebp), %esp": 1,
                "ja  <SymRegisterFunctionEntryCallback+>;cmpl $, %eax;jne  <SymRegisterFunctionEntryCallback+>;leal (%esi), %esi;jmp  <SymRegisterFunctionEntryCallback+>": 1,
                "ja  <SymRegisterFunctionEntryCallback+>;cmpl $, %eax;je  <SymRegisterFunctionEntryCallback+>;cmpl $, %eax;jne  <SymRegisterFunctionEntryCallback+>": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %esi;testl %esi, %esi;jne  <SymRegisterFunctionEntryCallback+>": 1,
                "calll - <SymRegisterFunctionEntryCallback+>;movl $, %edi;movl -(%ebp), %edx;cmpl (%eax), %edx;ja  <SymRegisterFunctionEntryCallback+>": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl (%eax), %edx;cmpl %edx, -(%ebp)": 1,
                "movl $, %esi;leal (,%esi,), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "shll $, %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx": 2,
                "addl $, %ebx;movl %ebx, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl %ebx, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 1,
                "calll  <SymSetSymWithAddr+>;movl $, %eax;jmp  <SymRegisterFunctionEntryCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %esi;movl (%ebp), %ecx;cmpl $, (%ecx);ja - <SymRegisterFunctionEntryCallback+>": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %esi": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl %edx, (%eax);movl $, (%eax);popl %ebp;retl;pushl %ebp": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebx), %edi;movl %edi, %edx;movl (%esi), %eax": 1,
                "jne  <SymRegisterFunctionEntryCallback+>;shll $, %edi;movl %edi, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl (%ebp), %ebx;movl (%ebp), %eax;movl %edx, (%ebx);testl %eax, %eax": 1,
                "movl (%edx), %eax;subl $, %eax;movl %eax, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ecx;movl (%ebp), %ebx": 1,
                "movl %eax, (%esp);movl (%ecx), %eax;movl %eax, (%esp);movl (%ecx), %eax;movl (%ecx), %edx": 1,
                "movzwl (%edx), %eax;leal -(%eax), %ebx;cmpw $, %bx;ja  <SymRegisterFunctionEntryCallback+>;movzwl %bx, %ebx": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "jb  <SymRegisterFunctionEntryCallback+>;ja  <SymRegisterFunctionEntryCallback+>;cmpl %ecx, %ebx;jb  <SymRegisterFunctionEntryCallback+>;cmpl %eax, %edx": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl %eax, %ebx;movl %edx, %esi;leal (%edx), %eax": 1,
                "testl %eax, %eax;je  <SymRegisterFunctionEntryCallback+>;leal (%edi,%edi), %edx;movl %edx, -(%ebp);calll  <SymSetSymWithAddr+>": 1,
                "movl $, %eax;testl %ebx, %ebx;je  <SymRegisterFunctionEntryCallback+>;movl (%edi), %eax;subl %eax, %ebx": 1,
                "je  <SymRegisterFunctionEntryCallback+>;movl (%edi), %eax;subl %eax, %ebx;movl $, (%esp);movl $, (%esp)": 1,
                "je  <SymRegisterFunctionEntryCallback+>;movl %eax, -(%ebp);cmpl , %ebx;jbe  <SymRegisterFunctionEntryCallback+>;movl , %esi": 1,
                "leal (,%ebx,), %eax;movl %eax, (%esp);movl (%edi), %edx;movl (%edi), %eax;leal (%eax,%edx,), %eax": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %ebx;movl %ebx, -(%ebp);js  <SymRegisterFunctionEntryCallback+>;movl %ebx, %eax": 1,
                "js  <SymRegisterFunctionEntryCallback+>;movl %ebx, %eax;shll $, %eax;movl %eax, -(%ebp);jmp  <SymRegisterFunctionEntryCallback+>": 1,
                "jb  <SymRegisterFunctionEntryCallback+>;ja  <SymRegisterFunctionEntryCallback+>;cmpl %edx, -(%ebp);jb  <SymRegisterFunctionEntryCallback+>;cmpl %eax, %esi": 3,
                "calll  <SymSetSymWithAddr+>;movl , %eax;movl -(%ebp), %ecx;movl (%eax,%ecx), %edx;movl (%edi), %eax": 1,
                "andl %edx, %eax;jmp  <SymRegisterFunctionEntryCallback+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jne  <SymRegisterFunctionEntryCallback+>;movzwl -(%ebp), %eax;movl %eax, (%esp);movl , %esi;calll *%esi": 1,
                "je  <SymRegisterFunctionEntryCallback+>;cmpl $, %edi;jb - <SymRegisterFunctionEntryCallback+>;cmpl $, %edi;jne - <SymRegisterFunctionEntryCallback+>": 1,
                "jb - <SymRegisterFunctionEntryCallback+>;cmpl $, %edi;jne - <SymRegisterFunctionEntryCallback+>;jmp  <SymRegisterFunctionEntryCallback+>;movl $, %edi": 1,
                "calll *%edx;movzwl %bx, %ebx;movzwl %ax, %edx;movl %ebx, %eax;subl %edx, %eax": 1,
                "calll - <SymRegisterFunctionEntryCallback+>;testl %eax, %eax;je  <SymRegisterFunctionEntryCallback+>;addl $, %esi;addl $, -(%ebp)": 1,
                "je  <SymRegisterFunctionEntryCallback+>;addl $, %esi;addl $, -(%ebp);jmp  <SymRegisterFunctionEntryCallback+>;movl $, %edi": 1,
                "subl $, %eax;movl %eax, -(%ebp);cmpl %esi, %eax;jae - <SymRegisterFunctionEntryCallback+>;movl $, %eax": 1,
                "je  <SymRegisterFunctionEntryCallback+>;movl %eax, %esi;cmpw $, (%eax);jne - <SymRegisterFunctionEntryCallback+>;jmp  <SymRegisterFunctionEntryCallback+>": 1,
                "cmpw $, (%edx);je - <SymRegisterFunctionEntryCallback+>;jmp  <SymRegisterFunctionEntryCallback+>;movl $, %eax;addl $, %esp": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;popl %ebp;retl;pushl %ebp": 4,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <SymSetHomeDirectoryW+>;testl %eax, %eax;jne  <SymRegisterFunctionEntryCallback+>": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll - <SymGetUnwindInfo+>;movl %eax, %edi;movl $, (%esp)": 1,
                "calll - <SymRegisterFunctionEntryCallback+>;movl %ebx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 2,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;testb $, ;je  <SymRegisterFunctionEntryCallback+>": 1,
                "calll  <SymSetSymWithAddr+>;movl %edi, (%esp);movl %esi, (%esp);movl %ebx, (%esp);movl (%ebp), %edx": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl (%ebp), %esi;addl $, %esi": 3,
                "movl $, (%eax);movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <SymRegisterFunctionEntryCallback+>": 3,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 3,
                "testb $, ;je  <SymRegisterFunctionEntryCallback+>;movl (%ebp), %edx;movl (%ebp), %eax;leal -(%edx,%eax), %ebx": 2,
                "calll  <SymSetSymWithAddr+>;testl %esi, %esi;je  <SymRegisterFunctionEntryCallback+>;cmpl $, (%esi);je  <SymRegisterFunctionEntryCallback+>": 1,
                "addl $, %edi;movl $, (%esp);movl %edi, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx": 7,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;testl %edi, %edi;je  <SymRegisterFunctionEntryCallback+>": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%edi), %eax": 1,
                "movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp);movl %edi, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;cmpl $, (%edi);je  <SymRegisterFunctionEntryCallback+>;movl $, (%esp)": 1,
                "subl $, %ebx;js  <SymRegisterFunctionEntryCallback+>;movl %ebx, (%esp);movl %esi, (%esp);calll - <SymRegisterFunctionEntryCallback+>": 1,
                "addl $, %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <SymRegisterFunctionEntryCallback+>;andb $-, (%eax)": 1,
                "cmpl $, %eax;je  <SymRegisterFunctionEntryCallback+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%eax);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);calll - <SymRegisterFunctionEntryCallback+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, (%ebx)": 2,
                "calll - <SymRegisterFunctionEntryCallback+>;jmp  <SymRegisterFunctionEntryCallback+>;movl (%ebp), %esi;addl $, %esi;movl $, (%esp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebp), %edi;testl %ebx, %ebx": 1,
                "je  <SymRegisterFunctionEntryCallback+>;addl (%ebx), %edi;subl (%esi), %edi;movl %edi, (%esi);movl (%esi), %eax": 1,
                "movl (%esi), %eax;cmpl $, (%eax);setne %dl;movzbl %dl, %edx;subl $, %edx": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax": 2,
                "movl %edi, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, (%ebx);movl %edi, (%esp);movl (%ebp), %eax": 1,
                "calll  <SymSetSymWithAddr+>;movl (%ebp), %edi;addl $, %edi;movl $, (%esp);movl %edi, (%esp)": 1,
                "movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl %ebx, %edx;movl (%ebp), %eax": 1,
                "jne  <SymRegisterFunctionEntryCallback+>;movl %edi, %eax;calll - <SymRegisterFunctionEntryCallback+>;testl %eax, %eax;je  <SymRegisterFunctionEntryCallback+>": 1,
                "movl %eax, %edx;addl -(%ebp), %edx;adcl -(%ebp), %ecx;movl $, %eax;cmpl %ecx, %eax": 2,
                "movl (%eax,%esi,), %eax;movl %eax, (%esp);calll  <SymSetHomeDirectoryW+>;movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "je  <SymRegisterFunctionEntryCallback+>;cmpl (%edi), %ebx;je  <SymRegisterFunctionEntryCallback+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl -(%ebp), %edx;jae  <SymRegisterFunctionEntryCallback+>;movl -(%ebp), %ebx;movl (%edi), %eax;movl (%eax,%ebx,), %eax": 1,
                "movl -(%ebp), %ebx;movl (%edi), %eax;movl (%eax,%ebx,), %eax;cmpl $, (%eax);jne  <SymRegisterFunctionEntryCallback+>": 1,
                "movl (%eax,%ebx), %edx;leal -(%ebp), %ecx;movl %edi, %eax;calll - <SymRegisterFunctionEntryCallback+>;movl -(%ebp), %eax": 1,
                "je  <SymRegisterFunctionEntryCallback+>;movl $, (%esp);leal (%esi), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "calll  <SymSetSymWithAddr+>;testb $, ;je  <SymRegisterFunctionEntryCallback+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "leal (%esi), %edi;movl $, (%esp);movl %edi, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx": 3,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl (%ebx), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx;subl $, %ebx;js  <SymRegisterFunctionEntryCallback+>;movl $, %esi": 1,
                "subl $, %ebx;js  <SymRegisterFunctionEntryCallback+>;movl $, %esi;movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "jne  <SymRegisterFunctionEntryCallback+>;testl %esi, %esi;jne  <SymRegisterFunctionEntryCallback+>;movl (%eax), %edx;movl $, %ecx": 1,
                "testb $, ;je  <SymGetSymPrev+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 2,
                "je  <SymGetLineFromAddr+>;movl $, (%esp);movl %esi, (%esp);movl %edi, (%esp);movl %eax, (%esp)": 1,
                "movl $, %edx;cmpl $, (%eax);jne  <SymGetLineFromAddr+>;movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <SymGetLineFromAddr>": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %ebx;movl $, -(%ebp)": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll - <SymGetLineFromAddr>;subl $, %esp;movl $, %edx": 1,
                "movl %ecx, (%ebx);testl %esi, %esi;jne  <SymGetLinePrev+>;jmp  <SymGetLinePrev+>;testl %esi, %esi": 1,
                "movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <SymGetLinePrev>;subl $, %esp": 1,
                "movl $, %edx;movl %edx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 2,
                "movl (%ebp), %edi;movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <SymGetLinePrev+>": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <SymGetUnwindInfo+>;movl %eax, (%esi)": 1,
                "movl %edx, (%esp);movl %esi, (%esp);movl %edi, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "jmp  <UnDecorateSymbolName+>;movl $, %eax;jmp  <UnDecorateSymbolName+>;movl $, %eax;movl -(%ebp), %ebx": 2,
                "movl %edx, %edi;movl %ecx, -(%ebp);movl (%ebp), %esi;leal (%esi), %eax;movl %eax, (%esp)": 1,
                "cmpl $, %eax;je  <UnDecorateSymbolName+>;cmpl $, %eax;ja  <UnDecorateSymbolName+>;cmpl $, %eax": 1,
                "movl %edx, -(%ebp);cmpb $, %al;jbe  <UnDecorateSymbolName+>;movl (%ebx), %edx;movl $, %eax": 1,
                "je  <UnDecorateSymbolName+>;movl (%edx), %ecx;testl %ecx, %ecx;je  <UnDecorateSymbolName+>;movl -(%ebp), %ebx": 1,
                "movl %eax, (%esi);testl %eax, %eax;jg  <UnDecorateSymbolName+>;testb $, ;je  <UnDecorateSymbolName+>": 1,
                "movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);calll  <SymSetHomeDirectoryW+>;movl $, (%esi)": 2,
                "jmp  <UnDecorateSymbolName+>;movl -(%ebp), %ecx;movswl (%ecx), %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl -(%ebp), %ecx;movzwl (%ecx), %eax;movl %eax, (%esi);movl $, (%esi);jmp  <UnDecorateSymbolName+>": 1,
                "movl %ecx, (%esi);movl $, (%esi);jmp  <UnDecorateSymbolName+>;testb $, ;je  <UnDecorateSymbolName+>": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <UnDecorateSymbolName+>;movl -(%ebp), %ecx;cmpl $, (%ecx)": 1,
                "movl $, (%esp);movl %eax, (%esp);leal (%esi), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "leal (%esi), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <UnDecorateSymbolName>;subl $, %esp": 1,
                "subl $, %esp;testl %eax, %eax;sete %al;movzbl %al, %eax;movl %eax, (%esi)": 1,
                "movl %edx, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, (%esp);movl (%esi), %eax": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "orl %edx, %ecx;je  <UnDecorateSymbolName+>;movl (%esi), %edi;movl (%edi), %ecx;movl (%edi), %ebx": 1,
                "cmpl %ecx, %edx;jae  <UnDecorateSymbolName+>;movl (%esi), %eax;movl (%esi), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);movl (%eax), %edx;movl %edx, (%esp);movl %eax, (%esp);calll *(%esi)": 1,
                "subl $, %esp;testl %eax, %eax;sete %al;movzbl %al, %eax;jmp  <UnDecorateSymbolName+>": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;testl %eax, %eax;jne  <UnDecorateSymbolName+>;leal -(%ebx), %ecx": 1,
                "jmp  <UnDecorateSymbolName+>;movl %edi, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx;testl %eax, %eax": 1,
                "testl %eax, %eax;jne - <UnDecorateSymbolName+>;movl $, %edx;jmp  <UnDecorateSymbolName+>;movl $, %edx": 1,
                "jmp  <UnDecorateSymbolName+>;movl $, %edx;movl %edx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jbe  <SymFromName+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll *": 1,
                "testl %ebx, %ebx;je  <SymFromName+>;movl (%ebp), %esi;cmpw $, (%ebx);jne  <SymFromName+>": 1,
                "movl (%ebp), %esi;cmpw $, (%ebx);jne  <SymFromName+>;movl %esi, (%esp);movl (%ebp), %ecx": 1,
                "testb $, ;je  <SymFromName+>;movl (%edi), %ebx;testl %ebx, %ebx;je  <SymFromName+>": 1,
                "jne - <SymFromName+>;movl $, %eax;jmp  <SymFromName+>;movl $, %eax;jmp  <SymFromName+>": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl $, %eax;cmpl $, (%ebx);jbe  <SymGetSymFromName+>": 2,
                "movl %eax, %edx;movl $, %eax;testl %edx, %edx;je  <SymGetSymFromName+>;movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %edx;movl (%ebx), %eax;cmpl %edx, %eax": 3,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <MiniDumpReadDumpStream+>;testl %eax, %eax;je  <SymFromAddr+>": 1,
                "movl $, %edx;leal -(%ebp), %eax;calll - <UnDecorateSymbolName+>;movl (%ebp), %eax;subl (%eax), %esi": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ecx;movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "movl %ecx, (%esp);movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <SymFromAddr>": 1,
                "movl %edx, %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);addl $, %esi": 1,
                "subl $, %esp;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 1,
                "movl $, %eax;cmpl $, (%ebx);jbe  <SymGetSymFromAddr+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <SymFromAddrW+>;movl %ebx, (%esp);movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <SymRegisterFunctionEntryCallback+>;calll  <SymSetSymWithAddr+>;movl %ebx, (%esp)": 1,
                "testb $, ;je  <SymMatchStringW+>;cmpl $, (%ebp);sbbl %ebx, %ebx;andl $-, %ebx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "cmpl $, (%ebp);je  <SymMatchStringW+>;cmpl $, (%ebp);jne  <SymMatchStringW+>;movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <SymMatchStringW>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;cmpl $, -(%ebp);je  <SymMatchStringW+>": 1,
                "movl (%edx), %eax;movl $, (%eax);movl %esi, (%esp);movl $, %ecx;movl -(%ebp), %edx": 1,
                "movl $, (%eax);movl %esi, (%esp);movl $, %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "jne  <SymMatchStringW+>;leal (%edx), %eax;testl %ebx, %ebx;jne  <SymMatchStringW+>;movl $, %ebx": 1,
                "movl $, %eax;jmp  <SymMatchStringW+>;movl $, %eax;cmpl %ebx, %esi;je  <SymMatchStringW+>": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %edi;movl $, %eax;testl %edi, %edi": 1,
                "movl %eax, (%esp);calll - <SymMatchStringW>;subl $, %esp;testl %eax, %eax;je  <SymMatchStringW+>": 2,
                "je  <SymMatchStringW+>;movl %eax, %ebx;addl $, %ebx;jne  <SymMatchStringW+>;nop": 1,
                "movl %ebx, %edx;leal -(%ebp), %eax;calll - <SymMatchStringW+>;movl $, %eax;jmp  <SymMatchStringW+>": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %ebx": 1,
                "jmp  <SymEnumSymbols+>;movl $, %ebx;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %eax": 1,
                "movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %eax;calll - <SymMatchStringW+>;movl %eax, %esi;calll  <SymSetSymWithAddr+>": 2,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);movl (%ebp), %eax;movl (%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp)": 2,
                "calll - <SymEnumSymbols>;subl $, %esp;leave;retl $;pushl %ebp": 2,
                "movl (%ebp), %edx;movl (%ebp), %ecx;movl (%ebp), %eax;calll - <SymMatchStringW+>;leave": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, %edi;jmp  <SymMatchStringA+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;testl %ebx, %ebx": 1,
                "subl $, %esp;calll  <SymSetSymWithAddr+>;movl %esi, (%esp);movl $, (%esp);movl %eax, (%esp)": 1,
                "movl (%ebp), %edi;testb $, ;je  <SymSearch+>;testl %edi, %edi;je  <SymSearch+>": 1,
                "movl %edi, -(%ebp);movl %esi, -(%ebp);leal -(%ebp), %eax;leal -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "movl %eax, (%esp);movl -(%ebp), %edx;movl %ebx, %ecx;movl (%ebp), %eax;calll - <SymMatchStringW+>": 1,
                "movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %edx;movl (%ebp), %eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %edx": 1,
                "movl %edx, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "setne %al;movzbl %al, %eax;addl $, %esp;popl %ebx;popl %ebp": 1,
                "movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <MiniDumpReadDumpStream+>;movl %eax, -(%ebp)": 1,
                "cmpb $, (%edx);jne  <SymEnumLines+>;calll  <SymSetSymWithAddr+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl %eax, %eax;je  <SymEnumLines+>;movl (%ebp), %edi;movl $, %eax;movl $, %ecx": 1,
                "movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx;leal -(%ecx,%ecx,), %eax;movl -(%ebp), %edx": 1,
                "leal -(%ecx,%ecx,), %eax;movl -(%ebp), %edx;leal (%edx,%eax,), %edi;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %edx;leal (%edx,%eax,), %edi;movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movw $, (%eax);movw $, (%eax);addl $, %eax;jmp  <SymEnumLines+>;movw $, (%eax)": 1,
                "addl $, %eax;addl $, %edi;movzwl (%edi), %edx;testw %dx, %dx;jne - <SymEnumLines+>": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <SymEnumLines+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;je  <SymEnumLines+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <SymMatchStringW>;subl $, %esp": 1,
                "subl $, %esp;testl %eax, %eax;je  <SymEnumLines+>;movl %ebx, (%esp);leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl $, -(%ebp);movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %edx": 1,
                "movl %esi, -(%ebp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 7,
                "movl $, %eax;addl $, %esp;popl %ebx;popl %ebp;retl $": 1,
                "testl %eax, %eax;je  <SymFromIndex+>;movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "jmp  <SymFromIndex+>;movl %edx, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl (%ebp), %edx": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <SymFromIndexW+>;movl %edx, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;movl $, %eax;leave;retl $;testb $, ": 1,
                "movl $, %eax;jmp  <SymSetHomeDirectoryW+>;movl $, %eax;popl %ebp;retl": 1,
                "leal -(%ebp), %edi;jmp  <SymSetHomeDirectoryW+>;testl %esi, %esi;je  <SymSetHomeDirectoryW+>;cmpl %esi, -(%ebx)": 1,
                "jne  <SymSetHomeDirectoryW+>;movl (%ebx), %eax;testl %eax, %eax;je  <SymSetHomeDirectoryW+>;movl -(%ebp), %edx": 1,
                "leal -(%ebx), %eax;jmp  <SymSetHomeDirectoryW+>;movl %edi, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx": 1,
                "jmp  <SymSetHomeDirectoryW+>;movl %edi, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx;testl %eax, %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll *(%ebx);subl $, %esp": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edx, %esi;leal (%eax), %edx": 1,
                "movl %esi, -(%ebp);movl %edx, %esi;leal (%eax), %edx;movl %edx, (%esp);addl $, %eax": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx;testl %eax, %eax": 1,
                "movl (%ebp), %edx;movl (%edx), %ebx;leal -(%ebx), %ecx;cmpl $, %ecx;ja  <SymSetHomeDirectoryW+>": 1,
                "jmp  <SymSetHomeDirectoryW+>;movl (%edx), %eax;jmp  <SymSetHomeDirectoryW+>;movl (%edx), %eax;jmp  <SymSetHomeDirectoryW+>": 7,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %eax": 3,
                "je  <SymSetHomeDirectoryW+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %eax, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;jmp  <SymSetHomeDirectoryW+>": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebx), %edx;cmpl $, %edx;ja  <SymSetHomeDirectoryW+>": 1,
                "ja  <SymSetHomeDirectoryW+>;jmpl *(,%edx,);movl (%ebx), %edx;subl $, %edx;movl $, %eax": 1,
                "movl (%ebp), %eax;cmpl %eax, (%ebx);jne  <SymSetHomeDirectoryW+>;movl (%ebp), %eax;cmpl %eax, (%ebx)": 1,
                "movl (%ebp), %eax;cmpl %eax, (%ebx);je  <SymSetHomeDirectoryW+>;movl (%ebp), %edi;addl $, %edi": 1,
                "je  <SymSetHomeDirectoryW+>;movl $, (%eax);testl %esi, %esi;je  <SymSetHomeDirectoryW+>;movl %esi, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl %ebx, %edx;movl (%ebp), %eax;calll - <SymSetHomeDirectoryW+>": 1,
                "movl %edi, -(%ebp);movl (%ebp), %esi;testb $, ;je  <SymSetHomeDirectoryW+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;leal (%esi), %edi;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;leal (%esi), %edi;movl $, (%esp);movl %edi, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);cmpl $, (%ebp);je  <SymSetHomeDirectoryW+>;movl (%ebp), %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "movl $, (%esp);movl $, (%esp);calll *;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <SymRegisterFunctionEntryCallback+>;cmpl %eax, %ebx;jb - <SymSetHomeDirectoryW+>;movl (%ebp), %esi;addl $, %esi": 1,
                "movl (%ebp), %eax;orl %edx, %eax;andl $, %eax;cmpl $, %eax;sbbl %eax, %eax": 1,
                "sbbl %eax, %eax;notl %eax;andl %eax, (%ebp);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "andl %eax, (%ebp);movl (%ebp), %eax;movl %eax, (%ebx);movl %esi, (%esp);movl (%ebp), %eax": 1,
                "testl %edi, %edi;je  <SymSetHomeDirectoryW+>;movl %edi, (%esp);movl %esi, (%esp);calll - <SymRegisterFunctionEntryCallback+>": 1,
                "movl %eax, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl %eax, %ebx;testl %eax, %eax;je  <SymSetHomeDirectoryW+>": 3,
                "movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl %ebx, %edx;movl %esi, %eax": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl (%ebp), %eax;movl %eax, (%ebx);movl %ebx, %edx": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;leal (%esi), %edi": 1,
                "movl $, %eax;jmp  <SymSetHomeDirectoryW+>;cmpl $, (%esi);je  <SymSetHomeDirectoryW+>;movl $, %edi": 1,
                "movl (%ebx), %eax;cmpl $, %eax;je  <SymSetHomeDirectoryW+>;cmpl $, %eax;jne  <SymSetHomeDirectoryW+>": 2,
                "movl $, %eax;jmp  <SymSetHomeDirectoryW+>;movl $, %eax;cmpl $, (%ebx);jne  <SymSetHomeDirectoryW+>": 7,
                "movl $, %eax;jmp  <SymSetHomeDirectoryW+>;movl (%ebx), %eax;cmpl $, %eax;je  <SymSetHomeDirectoryW+>": 1,
                "jmp  <SymSetHomeDirectoryW+>;movl $, %eax;cmpl $, (%ebx);jne  <SymSetHomeDirectoryW+>;movl (%ebx), %eax": 5,
                "movl %edx, (%esi);movl $, (%esi);movl $, %eax;jmp  <SymSetHomeDirectoryW+>;movl (%ebx), %ecx": 1,
                "movl $, %eax;jmp  <SymSetHomeDirectoryW+>;movl (%ebx), %ecx;movl %ecx, (%esi);movl $, (%esi)": 1,
                "sarl $, %edx;movl %edx, (%esi);movl $, %eax;jmp  <SymSetHomeDirectoryW+>;movl $, (%esi)": 1,
                "cmpl $, (%ebx);jne  <SymSetHomeDirectoryW+>;movl (%ebx), %edx;testl %edx, %edx;je  <SymSetHomeDirectoryW+>": 1,
                "orl -(%ebp), %edx;je  <SymSetHomeDirectoryW+>;movl (%ebx), %eax;negl %eax;movl $, %edx": 1,
                "movl $, (%esp);calll  <SymSetSymWithAddr+>;movl $, %eax;jmp  <SymSetHomeDirectoryW+>;movl (%ebx), %edx": 1,
                "ja  <SymSetHomeDirectoryW+>;movl $, (%esi);movb $, %al;jmp  <SymSetHomeDirectoryW+>;movl (%ebx), %edx": 1,
                "jne  <SymSetHomeDirectoryW+>;movl (%ebx), %edx;cmpl $, %edx;je  <SymSetHomeDirectoryW+>;cmpl $, %edx": 1,
                "movl (%ebx), %edx;cmpl $, %edx;je  <SymSetHomeDirectoryW+>;cmpl $, %edx;je  <SymSetHomeDirectoryW+>": 1,
                "movl $, %eax;testb $, ;je  <SymSetHomeDirectoryW+>;movl %edx, (%esp);movl $, (%esp)": 3,
                "jne  <SymSetHomeDirectoryW+>;movl (%ebx), %eax;cmpl $, %eax;je  <SymSetHomeDirectoryW+>;cmpl $, %eax": 1,
                "cmpb $, %al;jbe  <SymSetHomeDirectoryW+>;movl $, %eax;movl (%ebp), %ecx;movl (%ecx,%eax,), %edx": 1,
                "jne  <SymSetHomeDirectoryW+>;movl (%ebx), %eax;cmpl $-, %eax;jne  <SymSetHomeDirectoryW+>;testb $, ": 1,
                "jmp  <SymSetHomeDirectoryW+>;movl $, %eax;jmp  <SymSetHomeDirectoryW+>;movl $, %eax;movl -(%ebp), %ebx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl (%ebx), %eax": 1,
                "cmpl %eax, %ecx;jbe  <SymEnumTypes+>;movl %eax, %ebx;movl %ebx, -(%ebp);movl %ebx, (%esp)": 1,
                "movl $, -(%ebp);movb $, -(%ebp);movl (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "calll *(%ebp);subl $, %esp;testl %eax, %eax;je  <SymEnumTypes+>;addl $, -(%ebp)": 1,
                "testl %eax, %eax;je  <SymEnumTypes+>;addl $, -(%ebp);movl -(%ebp), %eax;addl $, %eax": 1,
                "movl $, (%esp);movl %esi, (%esp);movl %ebx, (%esp);movl %edx, (%esp);calll - <MiniDumpReadDumpStream+>": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;jmp  <SymGetTypeInfo+>": 1,
                "movl %eax, (%esp);calll - <SymRegisterFunctionEntryCallback+>;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <SymSetHomeDirectoryW+>": 1,
                "movl $, %edx;testl %eax, %eax;je  <SymGetTypeFromName+>;movl (%ebp), %ecx;movl -(%ebp), %eax": 1,
                "je  <SymGetTypeFromName+>;movl (%ebp), %ecx;movl -(%ebp), %eax;calll - <SymSetHomeDirectoryW+>;movl $, %edx": 1,
                "testl %eax, %eax;je  <SymGetTypeFromName+>;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "je  <SymSetSymWithAddr+>;movl $, (%esp);calll *;movl %eax, -(%ebp);movl %edi, %eax": 1,
                "cmpw $, (%esi);jne - <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>;movl %edi, %esi;subl %edi, %esi": 1,
                "cmpw $, %ax;je  <SymSetSymWithAddr+>;cmpw $, %ax;jne  <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>": 2,
                "cmpw $, %ax;jne  <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>;cmpw $, %ax;je  <SymSetSymWithAddr+>": 1,
                "movb $, (%ebx);addl $, %ebx;jmp  <SymSetSymWithAddr+>;movb $, (%ebx);movb $, (%ebx)": 4,
                "testl %esi, %esi;je  <SymSetSymWithAddr+>;movl $, (%esp);calll *;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>;cmpl $-, %eax;jne  <SymSetSymWithAddr+>": 1,
                "jne  <SymSetSymWithAddr+>;movl %esi, %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al": 1,
                "addl $, %edi;movl %edi, (%esp);calll *;movl %eax, -(%ebp);movb $, (%eax)": 1,
                "subl $, %ebx;leal (%ebx), %edx;testl %edx, %edx;jle  <SymSetSymWithAddr+>;cmpl %edi, %eax": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %eax;movl (%ebp), %esi;movl $, %ebx": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;addl $, %edx;movl %edx, (%esp)": 1,
                "movb $, (%ebx);jmp  <SymSetSymWithAddr+>;addl $, %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "calll - <SymSetSymWithAddr+>;movl %eax, %ebx;testl %eax, %eax;je  <SymSetSymWithAddr+>;movl %esi, (%esp)": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);calll  <SymSetSymWithAddr+>": 1,
                "movl %edi, -(%ebp);calll  <SymSetSymWithAddr+>;cmpl $-, ;jne  <SymSetSymWithAddr+>;movl %eax, %ebx": 1,
                "movl %eax, (%esp);calll - <SymSetSymWithAddr+>;movl %eax, -(%ebp);testl %eax, %eax;je  <SymSetSymWithAddr+>": 2,
                "je  <SymSetSymWithAddr+>;movb $, (%eax);addl $, %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "calll  <SymSetSymWithAddr+>;movl -(%ebp), %esi;addl %eax, %esi;movzbl (%esi), %eax;movb %al, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %edi, %esi;movl (,%ebx,), %edx;movl %edx, %edi;movl $, %eax": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll  <SymSetSymWithAddr+>;testl %eax, %eax;jne  <SymSetSymWithAddr+>": 2,
                "movb %al, -(%ebp);movb $, -(%ebp);jmp  <SymSetSymWithAddr+>;movl $, %eax;movl %ebx, %ecx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al": 1,
                "jne  <SymSetSymWithAddr+>;movl %ebx, %esi;shll $, %esi;movzbl -(%ebp), %eax;notl %eax": 1,
                "notl %eax;andb (%esi), %al;orb -(%ebp), %al;movb %al, (%esi);jmp  <SymSetSymWithAddr+>": 1,
                "jmp  <SymSetSymWithAddr+>;testl %eax, %eax;jns  <SymSetSymWithAddr+>;leal -(%ebx), %edi;jmp  <SymSetSymWithAddr+>": 1,
                "calll - <SymSetSymWithAddr+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <SymSetSymWithAddr+>;movl %ebx, (%esp)": 1,
                "movl %eax, (%esp);calll  <SymSetSymWithAddr+>;testl %eax, %eax;je  <SymSetSymWithAddr+>;movl %esi, %edx": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;cmpl $-, ": 1,
                "leal (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "jmp  <SymSetSymWithAddr+>;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 6,
                "movl (%ebp), %eax;movl (%eax), %esi;jmp  <SymSetSymWithAddr+>;movl (%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %eax, -(%ebp);xorl %ecx, %ecx;xorl %eax, %eax;calll *-(%ebp);negl %eax": 2,
                "je  <SymSetSymWithAddr+>;cmpl %edi, %esi;je  <SymSetSymWithAddr+>;movl (%esi), %esi;jmp - <SymSetSymWithAddr+>": 1,
                "movl (%eax), %eax;movl %ebx, -(%ebp);movl %eax, -(%ebp);xorl %ecx, %ecx;xorl %eax, %eax": 1,
                "testb $, (%ecx);jne  <SymSetSymWithAddr+>;movl (%ebx), %eax;testl %eax, %eax;je  <SymSetSymWithAddr+>": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %ebx;testl %ecx, %ecx;je  <SymSetSymWithAddr+>": 1,
                "cmpl $, %ebx;sbbl %edx, %edx;notl %edx;andl $, %edx;cmpl %edx, %edi": 1,
                "notl %edx;andl $, %edx;cmpl %edx, %edi;jne  <SymSetSymWithAddr+>;addl $, %ebx": 1,
                "cmpl $, (%ebx);jne  <SymSetSymWithAddr+>;movl (%ebx), %ecx;movl $, %eax;shll %cl, %eax": 1,
                "movl %eax, (%ebx);movl $, %eax;jmp  <SymSetSymWithAddr+>;movl (%ebx), %edx;subl %edx, %eax": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>;movl %esi, (%ebx);movl (%ebx), %eax": 1,
                "calll  <SymSetSymWithAddr+>;movl %esi, (%ebx);movl (%ebx), %eax;movl %eax, (%ebx);movl $, %eax": 1,
                "jmp  <SymSetSymWithAddr+>;movl %edi, %eax;addl (%ebx), %eax;movl %eax, (%ebx);movl (%ebx), %edx": 1,
                "testl %ecx, %ecx;je  <SymSetSymWithAddr+>;andl $, %ecx;movl %ecx, (%edx);movl $, (%eax)": 1,
                "movl (%edx), %eax;testl %eax, %eax;je  <SymSetSymWithAddr+>;movl $, (%eax);movl $, (%eax)": 1,
                "movl %eax, %edi;testl %eax, %eax;je  <SymSetSymWithAddr+>;movl %esi, (%esp);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll *(%ebx);movl $, (%ebx);jmp  <SymSetSymWithAddr+>": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %edi;movl (%edi), %ebx": 1,
                "movl -(%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);movl %edi, %eax;movl %esi, %edi": 1,
                "movl %edi, %esi;movl -(%ebp), %ebx;movl %eax, %edi;jmp  <SymSetSymWithAddr+>;cmpl $, -(%ebp)": 2,
                "movl -(%ebp), %ebx;movl %eax, %edi;jmp  <SymSetSymWithAddr+>;cmpl $, -(%ebp);ja  <SymSetSymWithAddr+>": 2,
                "testb $, %dl;je  <SymSetSymWithAddr+>;cmpl $, -(%ebp);jne  <SymSetSymWithAddr+>;movl $, (%esp)": 1,
                "movl %eax, (%ebx);movb $, -(%ebp);movb $-, -(%ebp);movl $, (%esp);leal -(%ebp), %edx": 1,
                "andl $, %ecx;movl -(%ebp), %eax;shrl $, %eax;addl %eax, %ecx;movl $, %edx": 1,
                "movl -(%ebp), %eax;andl $, %eax;cmpl $, %eax;je  <SymSetSymWithAddr+>;movl (%ebp), %ebx": 1,
                "cmpl %eax, %ecx;jbe  <SymSetSymWithAddr+>;subl $, -(%ebp);movl (%ebp), %ebx;movl $, (%ebx)": 1,
                "jbe  <SymSetSymWithAddr+>;subl $, -(%ebp);movl (%ebp), %ebx;movl $, (%ebx);movl -(%ebp), %ebx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, (%ebx);movl (%ebp), %ebx": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %ebx, (%eax);cmpb $, %bl;je  <SymSetSymWithAddr+>": 1,
                "movl %eax, (%ebx);movl -(%ebp), %ebx;movl $, (%ebx);movl $, -(%ebp);movl $, -(%ebp)": 3,
                "cmpl $, %ecx;jbe - <SymSetSymWithAddr+>;movl %eax, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %eax": 2,
                "jbe - <SymSetSymWithAddr+>;movl %eax, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %eax;testl %eax, %eax": 2,
                "movb %al, -(%ebp);movl -(%ebp), %eax;shrl $, %eax;movb %al, -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %ebx;movl $, (%ebx);testb $, (%ebx);jne  <SymSetSymWithAddr+>;movl $, -(%ebp)": 1,
                "movl $, (%ebx);movl -(%ebp), %ebx;testb $, (%ebx);je  <SymSetSymWithAddr+>;movl (%ebx), %edx": 1,
                "subl %edx, %ebx;movl %ebx, -(%ebp);movl (%eax), %edx;movl -(%ebp), %ebx;addl -(%ebp), %ebx": 1,
                "jbe  <SymSetSymWithAddr+>;movl %edx, %eax;subl -(%ebp), %eax;movl -(%ebp), %edx;addl %ecx, %edx": 1,
                "movl %eax, (%esp);movl %edi, (%esp);movl %edx, (%esp);calll  <SymSetSymWithAddr+>;movl -(%ebp), %ebx": 1,
                "subl -(%ebp), %esi;addl -(%ebp), %edi;movl -(%ebp), %eax;movl -(%ebp), %ebx;subl %eax, (%ebx)": 1,
                "movl -(%ebp), %ebx;movl $, (%ebx);movl $, (%ebx);movl -(%ebp), %ebx;testb $, (%ebx)": 2,
                "jae  <SymSetSymWithAddr+>;movb %cl, (%esi,%ebx);addl $, %ebx;movl %ebx, (%edi);testb %cl, %cl": 2,
                "addl %ebx, %edi;cmpb $, -(%ebp);je  <SymSetSymWithAddr+>;movl %esi, %eax;movl %edi, %esi": 2,
                "jbe - <SymSetSymWithAddr+>;movl %eax, -(%ebp);movl -(%ebp), %ecx;shll $, %ecx;movl -(%ebp), %eax": 1,
                "shll $, %ecx;movl -(%ebp), %eax;shrl $, %eax;addl %eax, %ecx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;andl $, %eax;shll $, %eax;addl %ecx, %eax;movl -(%ebp), %ebx": 1,
                "movl $, -(%ebp);movl -(%ebp), %ebx;cmpl $, (%ebx);jne  <SymSetSymWithAddr+>;movl %esi, %eax": 1,
                "movl -(%ebp), %ebx;movl %eax, %edi;jmp  <SymSetSymWithAddr+>;movl -(%ebp), %ecx;andl $, %ecx": 1,
                "movl %edx, %eax;andl $, %eax;cmpl $, %eax;je  <SymSetSymWithAddr+>;cmpl $, %eax": 1,
                "movl -(%ebp), %edx;cmpl %eax, %edx;jbe  <SymSetSymWithAddr+>;movl %eax, %edx;movl %edx, %ebx": 1,
                "andl $, %ecx;addl $, %ecx;movl %ecx, (%ebx);shrl $, -(%ebp);subl $, -(%ebp)": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl $, (%ebx);movl %ebx, %eax;addl $, %eax": 1,
                "leal -(%eax), %eax;movl %eax, (%esp);leal (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %ebx;movl %ebx, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>;movl %eax, -(%ebp)": 1,
                "subl $, %esi;movzbl (%edi), %eax;shll %cl, %eax;addl %eax, %edx;addl $, %edi": 4,
                "movl -(%ebp), %edi;movl -(%ebp), %eax;movw %cx, (%eax,%edi,);movl %edi, %eax;addl $, %eax": 1,
                "addl $, %eax;movl -(%ebp), %edi;movl %eax, (%edi);jmp  <SymSetSymWithAddr+>;cmpw $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);addl $, %ecx;movl %ecx, -(%ebp);cmpl %ebx, %ecx;jbe  <SymSetSymWithAddr+>": 3,
                "addl $, %edi;addl $, %ecx;cmpl %ebx, %ecx;jb - <SymSetSymWithAddr+>;movl %edi, -(%ebp)": 3,
                "subl %eax, %ebx;cmpl $, -(%ebp);jne  <SymSetSymWithAddr+>;movl -(%ebp), %edi;movl %edx, -(%ebp)": 1,
                "movl %edi, -(%ebp);cmpl %edi, -(%ebp);jb  <SymSetSymWithAddr+>;movl -(%ebp), %edi;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %edi;movl (%edi), %ecx;movl $, %eax;shll %cl, %eax;movl %eax, %ecx": 1,
                "andl %edx, %eax;movl -(%ebp), %edi;leal (%edi,%eax,), %eax;movzbl (%eax), %ecx;movzwl (%eax), %eax": 1,
                "movl %ebx, (%esp);movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movl $, (%ebx);movl -(%ebp), %ebx;movl $, (%ebx);jmp - <SymSetSymWithAddr+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx);movl $, (%edx);movl %ebx, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);movl (%edx), %eax": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx;cmpl $, (%ebx)": 1,
                "subl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;andl -(%ebp), %eax;movl -(%ebp), %ebx": 2,
                "je  <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>;movl -(%ebp), %ecx;movl %esi, %ebx;movl -(%ebp), %esi": 2,
                "movl %ecx, -(%ebp);cmpb $, -(%ebp);je  <SymSetSymWithAddr+>;testb $-, -(%ebp);jne  <SymSetSymWithAddr+>": 1,
                "movl %ecx, -(%ebp);movzbl -(%ebp), %ecx;addl -(%ebp), %ecx;movl $, %ebx;shll %cl, %ebx": 2,
                "testl %esi, %esi;je  <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>;movl -(%ebp), %ebx;movl %edx, -(%ebp)": 2,
                "movl %ebx, %ecx;shll %cl, %eax;addl %eax, -(%ebp);addl $, %edi;addl $, %ebx": 2,
                "movl -(%ebp), %ecx;leal (%ecx,%eax,), %edx;movzbl (%edx), %eax;movb %al, -(%ebp);movzbl (%edx), %eax": 2,
                "movzbl %al, %edx;addl -(%ebp), %edx;cmpl %ebx, %edx;ja - <SymSetSymWithAddr+>;movl %ebx, -(%ebp)": 2,
                "je  <SymSetSymWithAddr+>;movl -(%ebp), %ebx;movl $, (%ebx);movl $, (%ebx);jmp - <SymSetSymWithAddr+>": 1,
                "addl %eax, (%ebx);shrl %cl, -(%ebp);subl %edx, -(%ebp);addl %edx, (%ebx);movl -(%ebp), %ebx": 2,
                "shrl %cl, -(%ebp);subl %edx, -(%ebp);addl %edx, (%ebx);movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "je  <SymSetSymWithAddr+>;movl -(%ebp), %edx;subl -(%ebp), %edx;movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "addl (%ebx), %eax;movl -(%ebp), %ebx;movl (%ebx), %edx;cmpl %edx, %ecx;ja  <SymSetSymWithAddr+>": 1,
                "movl (%ebx), %eax;movl -(%ebp), %ebx;movb %al, (%ebx);addl $, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %ebx;addl %eax, (%ebx);movl -(%ebp), %ebx;addl %eax, (%ebx);testl %eax, %eax": 1,
                "movl -(%ebp), %ebx;movl %eax, (%ebx);movl (%ebp), %ebx;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl $, (%eax);jmp - <SymSetSymWithAddr+>;movl %esi, %eax;movl %edi, %esi;movl %eax, %edi": 1,
                "jmp  <SymSetSymWithAddr+>;movl %esi, %edx;movl %edi, %esi;movl %eax, -(%ebp);movl %ecx, %ebx": 15,
                "movl %edi, %esi;movl %eax, -(%ebp);movl %ecx, %ebx;movl %edx, %edi;jmp  <SymSetSymWithAddr+>": 14,
                "movl %ecx, %ebx;jmp  <SymSetSymWithAddr+>;movl %esi, %eax;movl %edi, %esi;movl %eax, %edi": 2,
                "movl %ecx, %ebx;movl %edx, %edi;jmp  <SymSetSymWithAddr+>;movl %esi, -(%ebp);movl %edi, %esi": 1,
                "movl -(%ebp), %edi;movl $, (%edi);movl $, -(%ebp);jmp  <SymSetSymWithAddr+>;movl -(%ebp), %esi": 1,
                "movl (%ebp), %edi;subl (%edi), %ebx;addl %esi, (%edi);addl %ebx, (%edi);movl -(%ebp), %edi": 1,
                "addl %ebx, (%edi);movl -(%ebp), %edi;addl %ebx, (%edi);cmpl $, (%edi);je  <SymSetSymWithAddr+>": 1,
                "jmp  <SymSetSymWithAddr+>;movl %ebx, (%esp);movl (%ebp), %edi;movl (%edi), %edi;movl %edi, %eax": 1,
                "addl (%edi), %eax;movl (%edi), %edx;cmpl $, %edx;je  <SymSetSymWithAddr+>;cmpl $, %edx": 1,
                "jmp  <SymSetSymWithAddr+>;movl $, %edx;addl %edx, %eax;movl (%ebp), %edi;movl %eax, (%edi)": 1,
                "movl (%ebp), %eax;movl (%ebp), %edi;movl (%ebp), %esi;testl %eax, %eax;je  <SymSetSymWithAddr+>": 1,
                "movl (%ebx), %eax;testl %eax, %eax;je  <SymSetSymWithAddr+>;testl %edi, %edi;je  <SymSetSymWithAddr+>": 1,
                "movl %eax, (%esp);movl %edx, (%esp);movl %edi, (%esp);calll  <SymSetSymWithAddr+>;movl (%ebx), %eax": 1,
                "movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi;testl %esi, %esi;je  <SymSetSymWithAddr+>": 1,
                "movl (%ebp), %edi;testl %esi, %esi;je  <SymSetSymWithAddr+>;movl (%esi), %ebx;testl %ebx, %ebx": 1,
                "cmpl $, (%ebx);jne  <SymSetSymWithAddr+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edi, %ecx;movl %esi, %eax;calll - <SymSetSymWithAddr+>;testl %eax, %eax;je  <SymSetSymWithAddr+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %edx;testl %eax, %eax": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;testl %eax, %eax;je  <SymSetSymWithAddr+>;movl (%eax), %eax": 1,
                "shrl $, %edx;addl $, %eax;cmpl %edi, %eax;jne - <SymSetSymWithAddr+>;addl $, %ecx": 1,
                "sete %al;movzbl %al, %eax;jmp  <SymSetSymWithAddr+>;movl $, %eax;jmp  <SymSetSymWithAddr+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll *(%esi)": 1,
                "calll *(%esi);movl $, %eax;jmp  <SymSetSymWithAddr+>;movl $, -(%ebp);movl (%esi), %eax": 1,
                "jmp  <SymSetSymWithAddr+>;movl $, -(%ebp);movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax": 1,
                "movl %eax, (%ebx);movl -(%ebp), %edi;movl -(%ebp), %esi;movl $, %eax;testl $, %edi": 1,
                "movb %al, (%edi);movl -(%ebp), %edi;addl $, %edi;movl -(%ebp), %esi;addl $, %esi": 1,
                "cmpl $, %ecx;jne  <SymSetSymWithAddr+>;movl (%edx), %eax;jmp  <SymSetSymWithAddr+>;movl $, %eax": 1,
                "jmp  <SymSetSymWithAddr+>;movl $, %eax;cmpl $, %ecx;jne  <SymSetSymWithAddr+>;movl (%edx), %eax": 1,
                "movl %esp, %ebp;testl %edx, %edx;je  <SymSetSymWithAddr+>;movl %eax, %ecx;movl $, %eax": 1,
                "je  <SymSetSymWithAddr+>;xorl (%ecx), %eax;addl $, %ecx;shrl %edx;jne - <SymSetSymWithAddr+>": 1,
                "movl %esi, %eax;calll - <SymSetSymWithAddr+>;movl %eax, (%edi,%ebx,);addl $, %ebx;cmpl $, %ebx": 1,
                "addl %edx, %edx;addl $, %eax;cmpl %ecx, %eax;jne - <SymSetSymWithAddr+>;leal -(%ebp), %edx": 1,
                "calll - <SymSetSymWithAddr+>;testb $, %bl;je  <SymSetSymWithAddr+>;movl %esi, %edx;leal -(%ebp), %eax": 2,
                "calll - <SymSetSymWithAddr+>;movl %eax, %esi;sarl %ebx;jne - <SymSetSymWithAddr+>;xorl %edi, %esi": 1,
                "addl $, %ecx;subl $, %edx;je  <SymSetSymWithAddr+>;testb $, %cl;jne - <SymSetSymWithAddr+>": 1,
                "andl $, %esi;movl %ecx, %eax;shrl $, %eax;movzbl %cl, %edi;movl (,%eax,), %eax": 1,
                "xorl (,%ecx,), %eax;xorl (,%esi,), %eax;addl $, %edx;cmpl %ebx, %edx;jne - <SymSetSymWithAddr+>": 1,
                "shrl $, %eax;xorl (,%edx,), %eax;addl $, %ecx;cmpl %ebx, %ecx;jne - <SymSetSymWithAddr+>": 1,
                "shrl $, %esi;shrl $, %ebx;addl %esi, %ebx;subl %edx, %ebx;movl $, %eax": 1,
                "imull $, %edx, %edx;movl -(%ebp), %eax;subl %edx, %eax;addl %eax, %ebx;leal (%ebx), %eax": 1,
                "je  <SymSetSymWithAddr+>;movl (%ebp), %edx;addl (%ebp), %edx;movl -(%ebp), %ecx;movl (%ebp), %eax": 1,
                "orl %edi, %eax;jmp  <SymSetSymWithAddr+>;subl $, (%ebp);movl (%ebp), %ecx;addl $, %ecx": 1,
                "jmp  <SymSetSymWithAddr+>;subl $, (%ebp);movl (%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp)": 1,
                "movzbl (%eax), %esi;addl %edi, %esi;movzbl (%eax), %ebx;addl %esi, %ebx;movzbl (%eax), %ecx": 1,
                "addl %ecx, %edx;addl %edx, -(%ebp);addl $, %eax;cmpl -(%ebp), %eax;jne - <SymSetSymWithAddr+>": 1,
                "movl %eax, -(%ebp);movzbl (%esi), %eax;addl -(%ebp), %eax;movl %eax, -(%ebp);movzbl (%esi), %ecx": 1,
                "addl -(%ebp), %ebx;addl -(%ebp), %ebx;addl -(%ebp), %ebx;addl -(%ebp), %ebx;addl %ebx, %ecx": 1,
                "movl -(%ebp), %eax;addl $, %eax;shll $, %eax;addl %eax, (%ebp);leal -(%edx), %eax": 1,
                "imull $, %eax, %eax;subl %eax, %edi;movl -(%ebp), %eax;mull %ecx;movl %edx, %eax": 1,
                "subl %eax, -(%ebp);movl -(%ebp), %eax;shll $, %eax;orl %edi, %eax;jmp  <SymSetSymWithAddr+>": 1,
                "jmp - <SymSetSymWithAddr+>;addl $, %esp;popl %ebx;popl %esi;popl %edi": 2,
                "subl $, %edx;jne - <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>;cmpw $, -(%ebp);jne  <SymSetSymWithAddr+>": 1,
                "jne  <SymSetSymWithAddr+>;movl $, %edx;movl -(%ebp), %eax;jmp  <SymSetSymWithAddr+>;cmpw $, -(%ebp,%edx,)": 1,
                "cmpl %eax, %edx;jne - <SymSetSymWithAddr+>;movl %edx, %eax;jmp  <SymSetSymWithAddr+>;movzwl -(%ebp), %edx": 1,
                "movl $, %eax;addl $, %eax;movzwl -(%ebp,%eax,), %ecx;addw -(%ebp,%eax,), %cx;movw %cx, -(%ebp,%eax,)": 1,
                "movb $, %al;movl %edx, -(%ebp);movl (%ebp), %esi;movzwl (%esi,%eax,), %edx;testw %dx, %dx": 1,
                "testw %dx, %dx;je  <SymSetSymWithAddr+>;movzwl %dx, %edx;movzwl -(%ebp,%edx,), %ebx;movl (%ebp), %ecx": 1,
                "movzwl %dx, %edx;movzwl -(%ebp,%edx,), %ebx;movl (%ebp), %ecx;movw %ax, (%ecx,%ebx,);movzwl -(%ebp,%edx,), %ecx": 1,
                "cmpl $, (%ebp);sete -(%ebp);cmpl $, %eax;jbe  <SymSetSymWithAddr+>;movl $, %eax": 1,
                "movl $, -(%ebp);movl $, %esi;movl $, -(%ebp);jmp  <SymSetSymWithAddr+>;movl %ebx, -(%ebp)": 1,
                "movzbl -(%ebp), %edx;subb -(%ebp), %dl;movb %dl, -(%ebp);movl -(%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movl %ebx, -(%ebp);movzwl (%ebx), %ebx;movzwl %bx, %eax;movl $, %edx": 1,
                "movzbl -(%ebp), %ecx;shrl %cl, %eax;addl -(%ebp), %eax;subl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "jle  <SymSetSymWithAddr+>;movl -(%ebp), %eax;leal -(%ebp,%eax,), %ecx;movl %esi, -(%ebp);movl -(%ebp), %esi": 1,
                "leal (,%ebx,), %eax;movl (%ebp), %ecx;movl (%ecx), %edx;movl %edi, %ecx;movb %cl, (%edx,%ebx,)": 1,
                "jmp  <SymSetSymWithAddr+>;movl $, %eax;jmp  <SymSetSymWithAddr+>;movl %edx, -(%ebp);movl %edx, %ebx": 1,
                "addl $, %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl $, (%eax);movl $, %eax": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jae  <SymSetSymWithAddr+>;movl %ebx, -(%ebp);movl $, %esi": 1,
                "movl %ebx, -(%ebp);movb $, -(%ebp);movl $, -(%ebp);jmp - <SymSetSymWithAddr+>;movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebx), %esi;subl $, %esi;movl %esi, -(%ebp);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, %edx;subl (%ebp), %edx;addl %esi, %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx), %edx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %eax;movl (%eax), %esi;movl (%eax), %edi;movl (%eax), %edx": 1,
                "movl %eax, %edx;shll %cl, %edx;movl %edx, %ecx;subl $, %ecx;movl %ecx, -(%ebp)": 1,
                "movzbl (%ebx), %eax;movl %edi, %ecx;shll %cl, %eax;movzbl (%ebx), %edx;leal (%edi), %ecx": 2,
                "je  <SymSetSymWithAddr+>;testb $, %al;jne  <SymSetSymWithAddr+>;testb $, %al;je  <SymSetSymWithAddr+>": 1,
                "testb $, %al;jne  <SymSetSymWithAddr+>;testb $, %al;je  <SymSetSymWithAddr+>;leal (%esi), %esi": 1,
                "jne  <SymSetSymWithAddr+>;testb $, %al;je  <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>;movzwl %dx, %edx": 1,
                "addl $, -(%ebp);movl %ecx, %edi;jmp  <SymSetSymWithAddr+>;movl -(%ebp), %eax;movzbl (%eax), %eax": 1,
                "movl $, (%eax);movl $, (%ebx);jmp  <SymSetSymWithAddr+>;cmpl $, -(%ebp);jne  <SymSetSymWithAddr+>": 1,
                "movb %bl, (%ecx);cmpl %edx, %ecx;jne - <SymSetSymWithAddr+>;movl %ecx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ebx;cmpl %ebx, -(%ebp);jae - <SymSetSymWithAddr+>;movl -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);movl %edx, %eax;subl -(%ebp), %eax;jmp - <SymSetSymWithAddr+>;movl -(%ebp), %edx": 1,
                "movb %al, (%edx);leal (%edx), %edx;movl %edx, -(%ebp);jmp  <SymSetSymWithAddr+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %esi, -(%ebp);movl %edi, -(%ebp);jmp  <SymSetSymWithAddr+>": 1,
                "testb $, %al;je  <SymSetSymWithAddr+>;movl -(%ebp), %edx;movl $, (%edx);jmp  <SymSetSymWithAddr+>": 1,
                "cmpl %edx, -(%ebp);jae  <SymSetSymWithAddr+>;movl -(%ebp), %ebx;cmpl %ebx, -(%ebp);jb - <SymSetSymWithAddr+>": 1,
                "movl %eax, (%ebx);movl -(%ebp), %esi;movl %edx, (%esi);movl %ecx, (%esi);addl $, %esp": 1,
                "popl %ecx;jmpl *%eax;nop;nop;nop": 1,
                "addl $, %edx;movl (%eax), %ebx;movl (%eax), %esi;movl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl (%eax), %esi;movl $, -(%ebp);movl %eax, -(%ebp);movl (%ecx), %edi;movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll *": 3,
                "movl %eax, (%edi);jmp  <SymSetSymWithAddr+>;cmpl $, -(%ebp);jne  <SymSetSymWithAddr+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jne  <SymSetSymWithAddr+>;calll  <SymSetSymWithAddr+>;movl %eax, -(%ebp);leal -(%ebp), %eax": 2,
                "calll *;subl $, %esp;jmp  <SymSetSymWithAddr+>;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "jmp  <SymSetSymWithAddr+>;movl %eax, (%edi);movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "jmp  <SymSetSymWithAddr+>;movl (%ebx), %edx;testl %edx, %edx;je  <SymSetSymWithAddr+>;calll *%edx": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;jne  <SymSetSymWithAddr+>": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;jne  <SymSetSymWithAddr+>;cmpl $, %ebx": 1,
                "jne  <SymSetSymWithAddr+>;calll  <SymSetSymWithAddr+>;movl %edi, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "testl %ebx, %ebx;je - <SymSetSymWithAddr+>;movl $, ;movl %esi, %eax;movl -(%ebp), %ebx": 1,
                "nop;nop;nop;pushl %ecx;pushl %eax": 1,
                "leal (%esp), %ecx;cmpl $, %eax;jl  <SymSetSymWithAddr+>;subl $, %ecx;testl %eax, (%ecx)": 1,
                "subl $, %ecx;testl %eax, (%ecx);subl $, %eax;cmpl $, %eax;jge - <SymSetSymWithAddr+>": 1,
                "subl $, %eax;cmpl $, %eax;jge - <SymSetSymWithAddr+>;subl %eax, %ecx;testl %eax, (%ecx)": 1,
                "testl %eax, (%ecx);popl %eax;popl %ecx;retl;pushl %ebp": 1,
                "movl $, ;movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, ": 1,
                "je  <SymSetSymWithAddr+>;movl $, (%esp);movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 1,
                "subl $, %esp;jmp - <SymSetSymWithAddr+>;movl $, ;movl $, ;jmp - <SymSetSymWithAddr+>": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "testl %ecx, %ecx;jle  <SymSetSymWithAddr+>;movl , %edx;movl $, %ebx;movl %edi, -(%ebp)": 1,
                "addl , %ebx;movl %ebx, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jne  <SymSetSymWithAddr+>;calll  <SymSetSymWithAddr+>;movl %eax, (%esp);movl $, (%esp);calll - <SymSetSymWithAddr+>": 1,
                "je  <SymSetSymWithAddr+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "cmpl $, %eax;jle  <SymSetSymWithAddr+>;cmpl $, %eax;jle  <SymSetSymWithAddr+>;cmpl $, ": 1,
                "jmp  <SymSetSymWithAddr+>;movl $, %ebx;cmpl $, (%ebx);jne  <SymSetSymWithAddr+>;cmpl $, (%ebx)": 1,
                "movl (%edx), %edx;addl (%ebx), %edx;movl %edx, -(%ebp);movl $, %ecx;leal -(%ebp), %edx": 1,
                "addl (%ebx), %edx;movl %edx, -(%ebp);movl $, %ecx;leal -(%ebp), %edx;calll - <SymSetSymWithAddr+>": 1,
                "je  <SymSetSymWithAddr+>;movl %eax, (%esp);movl $, (%esp);calll - <SymSetSymWithAddr+>;addl $, %ebx": 1,
                "movl %eax, (%esp);movl $, (%esp);calll - <SymSetSymWithAddr+>;addl $, %ebx;cmpl $, %ebx": 1,
                "movzbl (%ebx), %edx;cmpl $, %edx;je  <SymSetSymWithAddr+>;cmpl $, %edx;je  <SymSetSymWithAddr+>": 1,
                "movzwl %dx, %ecx;testw %dx, %dx;jns  <SymSetSymWithAddr+>;orl $, %ecx;movl %ecx, -(%ebp)": 1,
                "movl $, %ecx;leal -(%ebp), %edx;calll - <SymSetSymWithAddr+>;jmp  <SymSetSymWithAddr+>;movl $, -(%ebp)": 1,
                "jle  <SymSetSymWithAddr+>;movl $, %ebx;movl $, %esi;leal -(%ebp), %edi;movl , %eax": 1,
                "cmpl $, (%eax);je  <SymSetSymWithAddr+>;movl $, (%esp);movl %edi, (%esp);movl (%eax), %eax": 1,
                "movl %eax, %ebx;cmpl $-, %eax;jne  <SymSetSymWithAddr+>;movl $, %ebx;jmp  <SymSetSymWithAddr+>": 1,
                "movl , %eax;cmpl $, %eax;je  <SymSetSymWithAddr+>;notl %eax;movl %eax, ": 1,
                "movl %eax, ;jmp  <SymSetSymWithAddr+>;leal -(%ebp), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "calll  <SymSetSymWithAddr+>;subl $, %esp;xorl %edi, %esi;xorl -(%ebp), %esi;xorl -(%ebp), %esi": 1,
                "movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);movl $, (%esp);calll  <SymSetSymWithAddr+>": 1,
                "movl %eax, -(%ebp);movl $, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl $, (%esp)": 1,
                "testl %eax, %eax;je  <SymSetSymWithAddr+>;pushl %ebp;movl %esp, %ebp;pushl %esi": 1,
                "subl $, %esp;movl , %ebx;testl %ebx, %ebx;je  <SymSetSymWithAddr+>;movl (%ebx), %eax": 1,
                "je  <SymSetSymWithAddr+>;movl (%ebx), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, %esi": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl , %eax": 1,
                "movl %edx, %eax;jmp  <SymSetSymWithAddr+>;movl (%eax), %ecx;movl %ecx, (%edx);movl %eax, (%esp)": 1,
                "jmp  <SymSetSymWithAddr+>;calll - <SymSetSymWithAddr+>;movl , %eax;cmpl $, %eax;jne  <SymSetSymWithAddr+>": 1,
                "movl $, %edx;movl (%eax), %ecx;cmpl %ebx, %ecx;ja  <SymSetSymWithAddr+>;addl (%eax), %ecx": 1,
                "movl (%eax), %ecx;cmpl %ebx, %ecx;ja  <SymSetSymWithAddr+>;addl (%eax), %ecx;cmpl %ecx, %ebx": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;subl $, %ecx;cmpl $, %ecx;ja  <SymSetSymWithAddr+>": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll  <SymSetSymWithAddr+>;testl %eax, %eax;je  <SymSetSymWithAddr+>": 1,
                "je  <SymSetSymWithAddr+>;movl , %edx;movzwl (%edx), %eax;addl $, %edx;leal (%edx,%eax), %eax": 1,
                "movl $, %eax;testl %esi, %esi;je  <SymSetSymWithAddr+>;movl %esi, (%esp);movl $, (%esp)": 1,
                "movl %esi, %eax;addl $, %eax;je  <SymSetSymWithAddr+>;cmpl $, (%eax);jne  <SymSetSymWithAddr+>": 1,
                "cmpl $, (%eax);je  <SymSetSymWithAddr+>;testl %ebx, %ebx;jg  <SymSetSymWithAddr+>;movl (%eax), %eax": 1,
                "jne  <SymSetSymWithAddr+>;movzbl (%eax), %ecx;andl $-, %ecx;cmpb $, %cl;jne  <SymSetSymWithAddr+>": 4,
                "jmp  <SymSetSymWithAddr+>;movl $, %edx;leal (%edx), %ebx;movl %edx, (%esp);calll - <SymSetSymWithAddr+>": 1,
                "jmp  <SymSetSymWithAddr+>;movl %eax, (%esp);calll  <SymSetSymWithAddr+>;subl $, %esp;movl %eax, ": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                ".text": 1,
                "P`.data": 1,
                ".rdata": 1,
                "0@.bss": 1,
                ".edata": 1,
                "0@.idata": 1,
                ".rsrc": 1,
                ".reloc": 1,
                "0B.rossym": 1,
                "u@f;C": 1,
                "$[^_]": 6,
                "L[^_]": 2,
                "D[^_]": 3,
                ",[^_]": 8,
                "T[^_]": 2,
                "<[^_]": 6,
                ";S8v@": 1,
                ";s8v@": 1,
                "t[^_]": 4,
                "{49{0r3": 1,
                ">MDMPuS": 1,
                "4[^_]": 4,
                "=NB11t.=NB11w": 1,
                "=NB10": 1,
                "=NB09t": 1,
                "=RSDS": 1,
                ";PtsH": 1,
                "clasf": 1,
                ";QHu{": 1,
                " [^_]": 1,
                "_@;Z s": 1,
                "_@;Z(s": 1,
                "Sh;S\\rX": 1,
                "9Z\\v-": 1,
                ";K,v!": 1,
                "X[^_]": 1,
                "dbghelp_coff": 1,
                "dbghelp": 17,
                "dbghelp_dwarf": 1,
                "dbghelp_msc": 1,
                "dbghelp_stabs": 1,
                "dbghelp_symt": 2,
                "Processing COFF symbols...": 1,
                "New file %s": 1,
                "../../dll/win32/dbghelp/coff.c": 1,
                "coff_files.nfiles == 0 && coff_files.nfiles_alloc == 0": 1,
                "<none>": 1,
                "New file <none>": 1,
                "Duplicating sect from %s: %x %x %x %d %d": 1,
                "More sect %d %s %08x %d %d %d": 1,
                "New text sect from %s: %x %x %x %d %d": 1,
                "Adding static symbol %s": 1,
                "%lx%08lx": 8,
                "%d: %s %s": 1,
                "Adding global symbol %s (sect=%s)": 1,
                "Adding global data symbol %s": 1,
                "Skipping unknown entry '%s' %d %d %d": 1,
                "coff_process_info": 2,
                "Unknown register %x": 5,
                "uDon't know how to map register %d": 4,
                "arm_fetch_regname": 2,
                "arm_fetch_context_reg": 2,
                "arm_map_dwarf_register": 2,
                "arm64_fetch_regname": 2,
                "arm64_fetch_context_reg": 2,
                "arm64_map_dwarf_register": 2,
                "eflags": 2,
                "fpControl": 1,
                "fpStatus": 1,
                "fpTag": 1,
                "fpData": 1,
                "MxCSR": 1,
                "u$ebp": 1,
                "Cannot read new frame offset %p": 1,
                "32bit": 1,
                "start": 1,
                "16bit": 1,
                "Enter: PC=%s Frame=%s Return=%s Stack=%s Mode=%s Count=%s cSwitch=%p nSwitch=%p": 1,
                "Bad AddrPC.Mode / AddrFrame.Mode combination": 1,
                "Can't read TEB:WOW32Reserved": 1,
                "Bad stack frame %p": 1,
                "Bad stack frame 0x%08x": 1,
                "../../dll/win32/dbghelp/cpu_i386.c": 1,
                "curr_mode == stm_32bit": 1,
                "curr_mode == stm_16bit": 1,
                "Got a 16 bit stack switch:": 1,
                "frame32: %p": 1,
                "edx:%08x ecx:%08x ebp:%08x": 1,
                "ds:%04x es:%04x fs:%04x gs:%04x": 1,
                "call_from_ip:%08x module_cs:%04x relay=%08x": 1,
                "entry_ip:%04x entry_point:%08x": 1,
                "bp:%04x ip:%04x cs:%04x": 1,
                "new PC=%s different from Eip=%x": 1,
                "Leave: PC=%s Frame=%s Return=%s Stack=%s Mode=%s Count=%s cSwitch=%p nSwitch=%p FuncTable=%p": 1,
                "i386_fetch_regname": 2,
                "i386_fetch_context_reg": 2,
                "i386_map_dwarf_register": 2,
                "i386_stack_walk": 2,
                "fetch_next_frame32": 2,
                "not done": 1,
                "ppc_fetch_minidump_module": 2,
                "ppc_fetch_minidump_thread": 2,
                "ppc_fetch_regname": 2,
                "ppc_fetch_context_reg": 2,
                "ppc_map_dwarf_register": 2,
                "ppc_stack_walk": 2,
                "ppc_get_addr": 2,
                "xmm10": 1,
                "xmm11": 1,
                "xmm12": 1,
                "xmm13": 1,
                "xmm14": 1,
                "xmm15": 1,
                "ux86_64_fetch_regname": 1,
                "x86_64_fetch_context_reg": 2,
                "x86_64_map_dwarf_register": 2,
                "Qkkbal": 2,
                "wn>Jj": 2,
                "-%lx%08lx": 1,
                "Unsupported address %s": 1,
                "No mapping for action %u": 1,
                "(null)": 5,
                "unknown": 1,
                "flat<%s>": 1,
                "1616<%04x:%04x>": 1,
                "1632<%04x:%08x>": 1,
                "real<%04x:%04x>": 1,
                "this process has not had SymInitialize() called for it!": 1,
                "(%p %s %u)": 1,
                "the symbols for this process have already been initialized!": 1,
                "DBGHELP_NOLIVE": 1,
                "(%p): stub": 2,
                "Setting same frame {rtn=%s frm=%s stk=%s}": 1,
                "%p %u %p": 1,
                "(%p, %p, %p)": 1,
                "(%p, %p, %s)": 1,
                "validate_addr64": 2,
                "SymInitializeW": 3,
                "SymCleanup": 3,
                "SymSetParentWindow": 3,
                "SymSetContext": 3,
                "pcs_callback": 2,
                "SymRegisterCallback": 3,
                "reg_cb64to32": 2,
                "SymRegisterCallback64": 3,
                "SymRegisterCallbackW64": 3,
                "Unsupported Word Size %u": 1,
                "What the heck map reg 0x%x": 1,
                "Couldn't find ip in location list": 1,
                "unsupported reg %lx": 1,
                "reading register %lu/%u of wrong size %u": 1,
                "../../dll/win32/dbghelp/dwarf.c": 1,
                "unsupported encoding %02x": 1,
                "%lx: DW_CFA_advance_loc %lu": 1,
                "%lx: DW_CFA_offset %s, %ld": 1,
                "%lx: DW_CFA_restore %s": 1,
                "%lx: DW_CFA_set_loc %lx": 1,
                "%lx: DW_CFA_advance_loc1 %lu": 1,
                "%lx: DW_CFA_advance_loc2 %lu": 1,
                "%lx: DW_CFA_advance_loc4 %lu": 1,
                "%lx: DW_CFA_offset_extended %s, %ld": 1,
                "%lx: DW_CFA_restore_extended %s": 1,
                "%lx: DW_CFA_undefined %s": 1,
                "%lx: DW_CFA_same_value %s": 1,
                "%lx: DW_CFA_register %s == %s": 1,
                "%lx: DW_CFA_remember_state": 1,
                "%lx: DW_CFA_remember_state too many nested saves": 1,
                "%lx: DW_CFA_restore_state": 1,
                "%lx: DW_CFA_restore_state without corresponding save": 1,
                "%lx: DW_CFA_def_cfa %s, %ld": 1,
                "%lx: DW_CFA_def_cfa_register %s": 1,
                "%lx: DW_CFA_def_cfa_offset %ld": 1,
                "%lx: DW_CFA_def_cfa_expression %lx-%lx": 1,
                "%lx: DW_CFA_%sexpression %s %lx-%lx": 1,
                "%lx: DW_CFA_GNU_args_size %lu": 1,
                "%lx: unknown CFA opcode %02x": 1,
                "uctx(%p)": 1,
                "NULL != abbrev_ctx": 1,
                "%s, end at %p": 1,
                "now at %s": 1,
                "found entry_code %lu": 1,
                "NULL entry code at %s": 1,
                "NULL != abbrev_entry": 1,
                "table:(%p,#%u) entry_code(%lu) tag(0x%lx) have_child(%u) -> %p": 1,
                "found %u entries": 1,
                "debug_info(abbrev:%p,symt:%p)": 1,
                "addr<0x%lx>": 1,
                "flag<0x%lx>": 1,
                "data1<%lu>": 1,
                "data2<%lu>": 1,
                "data4<%lu>": 1,
                "data8<%s>": 1,
                "ref1<0x%lx>": 1,
                "ref2<0x%lx>": 1,
                "ref4<0x%lx>": 1,
                "Unhandled 64 bit support": 1,
                "string<%s>": 1,
                "strp<%s>": 1,
                "Unhandled attribute form %lx": 1,
                "utwo references %lx and %lx": 1,
                "Should have found the debug info entry": 1,
                "unsupported yet (base address selection)": 1,
                "no entry found": 1,
                "entry found, but low=high": 1,
                "found entry_code %lu at 0x%lx": 1,
                "NULL != abbrev_table": 1,
                "Cannot find abbrev entry for %lu at 0x%lx": 1,
                "(attr:0x%lx,form:0x%lx)": 1,
                "setting cursor for %s to next sibling <0x%lx>": 1,
                "uunknown CIE version %u at %p": 1,
                "parsing augmentation %s": 1,
                "unknown augmentation '%c'": 1,
                "uUnsupported yet 64-bit CIEs": 1,
                "wrong CIE pointer at %x from FDE %x": 1,
                "Only supporting one reg (%s/%d -> %s/%d)": 1,
                "Only supporting one breg (%s/%d -> %s/%d)": 1,
                "Only supporting one reg": 1,
                "Only supporting one regx": 1,
                "Only supporting one reg (%s/%d -> -2)": 1,
                "Not handling OP_piece (size=%d)": 1,
                "Unexpected empty stack": 1,
                "Too complex expression for deref": 1,
                "Couldn't read memory at %lx": 1,
                "Unhandled attr op: %x": 1,
                "uUnsupported yet form %lx": 1,
                "We'd expect function %s's container to exist and be a compiland": 1,
                "Searching loclist for %s": 1,
                "Couldn't compute runtime frame location": 1,
                "Unsupported frame kind %d": 1,
                "Couldn't find Custom function point, whilst location list offset is searched": 1,
                "Unsupported local kind %d": 1,
                "%s %lx %s %u": 1,
                "out of bounds offset": 1,
                "out of bounds header": 1,
                "Got include %s": 1,
                "Got file %s/%s (%u,%lu)": 1,
                "Got opcode %x": 1,
                "not handled define file %s": 1,
                "not handled discriminator %x": 1,
                "Unsupported extended opcode %x": 1,
                "Unsupported opcode %x": 1,
                "uUnknown size for deref 0x%lx": 1,
                "unhandled opcode %02x": 1,
                "uregister %lu/%u size is too wide: %u": 1,
                "Couldn't read memory at %p": 1,
                "assigning to register %lu/%u of wrong size %u": 1,
                "ctx(%p,%s)": 1,
                "%s, for %s": 1,
                "short": 1,
                "Unsupported children": 1,
                "Unhandled Tag type 0x%lx at %s, for %s": 1,
                "%s, for %lu": 1,
                "size.u.uvalue == 0": 1,
                "ref_type": 1,
                "ret_type": 1,
                "Unsupported unspecified parameters": 1,
                "Unhandled Tag type 0x%lx at %s, for %lu": 1,
                "uUnable to find back reference to type %lx": 1,
                "Unable to load forward reference for tag %lx": 1,
                "found parameter %s (kind=%d, offset=%ld, reg=%d) at %s": 1,
                "subpgm->func": 1,
                "Unsupported constant %s in function": 1,
                "Unsupported constant (parameter) %s in function": 1,
                "Unsupported form for const value %s (%lx)": 1,
                "dropping global variable %s which has been optimized away": 1,
                "uno range": 1,
                "cannot read range": 1,
                "No name for function... dropping function": 1,
                "Function %s declared as inlined (%ld)... skipping": 1,
                "cannot get range for %s": 1,
                "zz_anon_zz": 1,
                "parent": 1,
                "Found register, while not expecting it": 1,
                "found member_location at %s -> %lu": 1,
                "uCouldn't find information for %lx": 1,
                "function %lx/%lx code_align %lu data_align %ld retaddr %s": 1,
                "Cannot copy register %lu/%u => %lu/%u because of size mismatch (%u => %u)": 1,
                ".eh_frame": 1,
                "../../dll/win32/dbghelp/image_private.h": 2,
                ".debug_info": 2,
                ".zdebug_info": 1,
                "invalid compressed section %s": 1,
                "1.2.8": 2,
                "inflateInit failed with %i / %s": 1,
                "Decompression failed with %i / %s": 1,
                ".debug_abbrev": 2,
                ".zdebug_abbrev": 1,
                ".debug_str": 2,
                ".zdebug_str": 1,
                ".debug_line": 2,
                ".zdebug_line": 1,
                ".debug_ranges": 1,
                ".zdebug_ranges": 1,
                "Loading Dwarf2 information for %s": 1,
                ".debug_loc": 2,
                ".zdebug_loc": 1,
                ".debug_frame": 2,
                ".zdebug_frame": 1,
                "Compilation Unit Header found at 0x%x:": 1,
                "- length:        %lu": 1,
                "- version:       %u": 1,
                "- abbrev_offset: %lu": 1,
                "- word_size:     %u": 1,
                "%u DWARF version unsupported. Wine dbghelp only support DWARF 2.": 1,
                "Should have a compilation unit here": 1,
                "dwarf2_virtual_unwind": 2,
                "dwarf2_get_cie": 2,
                "parse_cie_details": 2,
                "dwarf2_parse_augmentation_ptr": 2,
                "dwarf2_get_addr": 2,
                "execute_cfa_instructions": 2,
                "valid_reg": 2,
                "apply_frame_state": 1,
                "get_context_reg": 2,
                "copy_context_reg": 1,
                "eval_expression": 2,
                "set_context_reg": 2,
                "dwarf2_parse": 2,
                "dwarf2_location_compute": 2,
                "loc_compute_frame": 1,
                "dwarf2_lookup_loclist": 2,
                "compute_location": 2,
                "dwarf2_map_register": 2,
                "dwarf2_init_zsection": 1,
                "dwarf2_parse_compilation_unit": 1,
                "dwarf2_parse_abbrev_set": 2,
                "dwarf2_read_one_debug_info": 2,
                "dwarf2_swallow_attribute": 1,
                "dwarf2_get_di_children": 2,
                "dwarf2_load_one_entry": 2,
                "dwarf2_parse_typedef": 1,
                "dwarf2_lookup_type": 2,
                "dwarf2_parse_base_type": 1,
                "dwarf2_parse_pointer_type": 1,
                "dwarf2_parse_udt_type": 2,
                "dwarf2_get_cpp_name": 2,
                "dwarf2_parse_udt_member": 1,
                "dwarf2_compute_location_attr": 2,
                "dwarf2_parse_array_type": 1,
                "dwarf2_parse_const_type": 1,
                "dwarf2_parse_volatile_type": 1,
                "dwarf2_parse_reference_type": 1,
                "dwarf2_parse_enumeration_type": 2,
                "dwarf2_parse_enumerator": 1,
                "dwarf2_parse_subprogram": 2,
                "dwarf2_read_range": 2,
                "dwarf2_parse_subprogram_block": 2,
                "dwarf2_parse_inlined_subroutine": 2,
                "dwarf2_parse_subprogram_label": 2,
                "dwarf2_parse_subroutine_type": 1,
                "dwarf2_parse_variable": 2,
                "dwarf2_parse_namespace": 1,
                "dwarf2_find_attribute": 2,
                "dwarf2_fill_attr": 2,
                "dwarf2_parse_line_numbers": 2,
                "dwarf2_set_line_number": 2,
                "(%p, %s, %s, 0x%08x): stub": 1,
                "MapDebugInformation": 3,
                "UnmapDebugInformation": 3,
                "Buffer overflow!!!": 1,
                "Couldn't open thread %u (%u)": 1,
                "NIY MiniDumpWithDataSegs": 1,
                "NIY MiniDumpWithFullMemory": 1,
                "NIY MiniDumpWithHandleData": 1,
                "NIY MiniDumpFilterMemory": 1,
                "NIY MiniDumpScanMemory": 1,
                "ntdll.dll": 2,
                "wine_get_build_id": 1,
                "wine_get_host_version": 1,
                "MiniDumpWriteDump": 3,
                "fetch_thread_info": 1,
                "dump_modules": 2,
                "WINELOADER": 1,
                "returning %s": 1,
                "Mach-O": 1,
                "Virtual Mach-O": 1,
                "Virtual PE": 1,
                "Virtual ELF": 1,
                "../../dll/win32/dbghelp/module.c": 1,
                "type == DMT_ELF || type == DMT_PE || type == DMT_MACHO": 1,
                "=> %s %s-%s %s": 1,
                "pair->effective->module.SymType != SymDeferred": 1,
                "(%p %p %s %s %s %08x %p %08x)": 1,
                "Unsupported load data parameter %p for %s": 1,
                "Unsupported Flags %08x for %s": 1,
                "Couldn't find container for %s": 1,
                "Couldn't locate %s": 1,
                "%s (%p)": 1,
                "This shouldn't happen": 1,
                "If this happens, bump the number in mod": 1,
                "%p %s %p": 1,
                "Wrong size %u": 1,
                "Wrong size": 1,
                "get_wine_loader_name": 2,
                "module_new": 2,
                "SymLoadModuleEx": 3,
                "SymLoadModuleExW": 3,
                "module_is_container_loaded": 1,
                "module_remove": 2,
                "EnumerateLoadedModulesW64": 3,
                "SymGetModuleInfo": 3,
                "SymGetModuleInfoW": 3,
                "SymGetModuleInfo64": 3,
                "SymGetModuleInfoW64": 3,
                "SymRefreshModuleList": 3,
                "Module of index %d isn't loaded yet (%x)": 1,
                "Returning NULL symt for type-id %x": 1,
                "Bad tag. Expected %d, but got %d": 1,
                "Unsupported numeric leaf type %04x": 1,
                "Unknown numeric leaf type %04x": 1,
                "uvoid": 1,
                "short int": 2,
                "long int": 2,
                "long long int": 2,
                "unsigned char": 2,
                "unsigned short": 1,
                "unsigned long": 1,
                "unsigned long long": 1,
                "BOOL08": 1,
                "BOOL16": 1,
                "BOOL32": 1,
                "BOOL64": 1,
                "float": 2,
                "double": 2,
                "long double": 2,
                "signed char": 2,
                "wchar_t": 2,
                "UINT2": 1,
                "UINT4": 1,
                "UINT8": 1,
                "HRESULT": 1,
                "%08x: ": 1,
                "0123456789abcdef": 1,
                "What the heck": 1,
                "Adding %x to non allowed module": 1,
                "No module index while inserting type-id assumption is wrong %x": 1,
                "Overwriting at %x": 1,
                "__unnamed": 1,
                "Unsupported type %04x in STRUCT field list": 1,
                "unknown ": 1,
                "unaligned ": 1,
                "volatile ": 1,
                "const ": 1,
                "Modifier on %x: %s%s%s%s": 1,
                "__internal_vt_shape_%x": 1,
                "Unsupported type-id leaf %x": 1,
                "Cannot locate type %x": 1,
                "Couldn't load forward type %x": 1,
                "Unsupported type %04x in ENUM field list": 1,
                "Unexpected leaf %x for signature's pmt": 1,
                "--not a func at %04x:%08x %lx tag=%d": 1,
                "/names": 1,
                "string table not found": 1,
                "unexpected value": 1,
                "set_value: out of memory": 1,
                "pop: stack empty": 1,
                "get_zvalue: no value found (%s)": 1,
                "get_val: not a literal (%s)": 1,
                "push: out of memory": 1,
                "unpadded len %u": 1,
                "nested function": 1,
                "S-Compiland-V1 %x %s": 1,
                "S-Compiland-V2 %s": 1,
                "%s => %s": 2,
                "S-Compiland-V3 %s": 1,
                "S-ObjName %s": 1,
                "S-Constant-V1 %u %s %x": 1,
                "S-Constant-V2 %u %s %x": 1,
                "S-Constant-V3 %u %s %x": 1,
                "S-Udt %s: couldn't find type 0x%x": 1,
                "Start search: seg=0x%x at offset 0x%08x": 1,
                "S-Align V1": 1,
                "Unsupported symbol id %x": 1,
                "PDB(%s): %.40s": 1,
                "-Unable to get root from .PDB in %s": 1,
                "-Unknown root block version %d": 1,
                "Found %s, but wrong PDB kind": 1,
                "Found %s, but wrong signature: %08x %08x": 1,
                "Found %s, but wrong age: %08x %08x": 1,
                "found JG for %s: age=%x timestamp=%x": 1,
                "<guid-0x%04lx>": 2,
                "{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}": 2,
                "Found %s, but wrong GUID: %s %s": 1,
                "found DS for %s: age=%x guid=%s": 1,
                "Processing PDB file %s": 1,
                "Couldn't find %s": 1,
                "Unable to open .PDB file: %s": 1,
                "-Unknown symbol info version %d %08x": 1,
                "Unknown PDB_STREAM_INDEXES size (%d)": 1,
                "-Unknown type info version %d": 1,
                "No LT2_FILES_BLOCK found": 1,
                "block from %04x:%08x #%x (%x lines)": 1,
                "Block end %x": 1,
                "Out of bounds !!!": 1,
                "Twice the entry": 1,
                "got for %s: age=%u ts=%x": 1,
                "Already allowed ??": 1,
                "<out of bounds>": 1,
                "searching %lx => %lx": 1,
                "%08x %08x %8x %8x %4x %4x %4x %08x %s": 1,
                ".raSearchStart": 1,
                ".cbLocals": 1,
                ".cbParams": 1,
                ".cbSavedRegs": 1,
                "binop: unknown op (%c)": 1,
                "deref: cannot read mem at %lx": 1,
                "assign: %s isn't a variable": 1,
                "parse: token too long (%s)": 1,
                "Couldn't evaluate %s => %s": 1,
                "uProcessing signature %.4s": 1,
                "Got RSDS type of PDB file: guid=%s age=%08x name=%s": 1,
                "Unknown CODEVIEW signature %08x in module %s": 1,
                "This guy has FPO information": 1,
                "Got a page fault while loading symbols": 1,
                "pdb_fetch_file_info": 2,
                "pdb_init": 2,
                "Microsoft C/C++ program database 2.00": 1,
                "Microsoft C/C++ MSF 7.00": 1,
                "pdb_load_stream_name_table": 2,
                "pdb_virtual_unwind": 2,
                "pdb_read_strings": 2,
                "pdb_parse_cmd_string": 1,
                "pe_load_debug_directory": 2,
                "ucodeview_process_info": 1,
                "codeview_parse_one_type": 2,
                "codeview_get_type": 2,
                "codeview_fetch_type": 2,
                "codeview_cast_symt": 2,
                "numeric_leaf": 2,
                "codeview_add_type_struct_field_list": 2,
                "codeview_add_type_enum_field_list": 1,
                "codeview_add_func_signature_args": 2,
                "codeview_add_type": 2,
                "codeview_snarf": 2,
                "leaf_as_variant": 2,
                "codeview_snarf_linetab": 2,
                "pdb_process_internal": 2,
                "map_pdb_file": 1,
                "pdb_process_types": 1,
                "codeview_snarf_linetab2": 1,
                "codeview_snarf_public": 1,
                "pdb_process_symbol_imports": 2,
                "Found %s, but wrong timestamp": 1,
                "Found %s, but wrong size": 1,
                "Found %s, but wrong checksums: %08x %08x": 1,
                "Couldn't read %s": 1,
                "What the heck??": 1,
                "u(%s %s %s %p %p): stub": 1,
                "Unsupported callback yet": 1,
                "(%s %s %p %p)": 1,
                "(%s, %s, %p)": 1,
                "(%p %s %s %p %p %p)": 1,
                "(hProcess = %p, searchPath = %s, full_path = %s, id = %p, two = 0x%08x, three = 0x%08x, flags = 0x%08x, buffer = %p, cb = %p, user = %p)": 1,
                "(pcs = %p, full_path = %s, guid = %s, dw1 = 0x%08x, dw2 = 0x%08x, buffer = %p)": 1,
                "FindDebugInfoFileEx": 3,
                "FindExecutableImageExW": 3,
                "FindExecutableImageEx": 3,
                "SymMatchFileNameW": 3,
                "SymMatchFileName": 3,
                "SearchTreeForFileW": 3,
                "EnumDirTreeW": 3,
                "SymFindFileInPathW": 3,
                "path_find_symbol_file": 2,
                "module_find_cb": 2,
                "Processing DBG file %s": 1,
                "Couldn't find .DBG file %s (%s)": 1,
                "Section %ld: virtual (0x%x) > raw (0x%x) size - not supported": 1,
                "successfully loaded": 1,
                "failed to load": 1,
                ".stab": 1,
                ".stabstr": 1,
                "Changing absolute address for %d.%s: %lx -> %s": 1,
                "%s the STABS debug info": 1,
                "%s the DWARF debug info": 1,
                "-Debug info stripped, but no .DBG file in module %s": 1,
                "EntryPoint": 1,
                "../../dll/win32/dbghelp/pe_module.c": 1,
                "Trouble ahead (no module name passed in deferred mode)": 1,
                "Bad coff table... wipping out": 1,
                "could not load the module '%s'": 1,
                "pe_map_section": 2,
                "pe_load_stabs": 1,
                "pe_locate_with_coff_symbol_table": 1,
                "pe_load_dwarf": 1,
                "pe_load_msc_debug_info": 1,
                "pe_load_dbg_file": 2,
                "pe_load_native_module": 2,
                "pe_map_file": 1,
                "%s is UNIMPLEMENTED!": 1,
                "EnumerateLoadedModulesEx": 3,
                "EnumerateLoadedModulesExW": 3,
                "DbgHelpCreateUserDump": 3,
                "DbgHelpCreateUserDumpW": 3,
                "FindFileInPath": 3,
                "FindFileInSearchPath": 3,
                "SymDeleteSymbol": 3,
                "SymDeleteSymbolW": 3,
                "SymEnumLinesW": 3,
                "SymEnumProcesses": 3,
                "SymEnumSym": 3,
                "SymEnumSymbolsForAddr": 3,
                "SymEnumSymbolsForAddrW": 3,
                "SymEnumerateSymbolsW64": 3,
                "SymEnumerateSymbolsW": 3,
                "SymFromNameW": 3,
                "SymFromToken": 3,
                "SymFromTokenW": 3,
                "SymGetFileLineOffsets64": 3,
                "SymGetHomeDirectory": 3,
                "SymGetHomeDirectoryW": 3,
                "SymGetLineNextW64": 3,
                "SymGetLinePrevW64": 3,
                "SymGetScope": 3,
                "SymGetScopeW": 3,
                "SymGetSourceFile": 3,
                "SymGetSourceFileFromToken": 3,
                "SymGetSourceFileFromTokenW": 3,
                "SymGetSourceFileW": 3,
                "SymGetSourceVarFromToken": 3,
                "SymGetSourceVarFromTokenW": 3,
                "SymGetSymbolFile": 3,
                "SymGetSymbolFileW": 3,
                "SymGetTypeFromNameW": 3,
                "SymGetTypeInfoEx": 3,
                "SymNext": 3,
                "SymNextW": 3,
                "SymPrev": 3,
                "SymPrevW": 3,
                "SymSetScopeFromIndex": 3,
                "SymSrvDeltaName": 3,
                "SymSrvDeltaNameW": 3,
                "SymSrvGetFileIndexString": 3,
                "SymSrvGetFileIndexStringW": 3,
                "SymSrvGetFileIndexes": 3,
                "SymSrvGetFileIndexesW": 3,
                "SymSrvGetSupplement": 3,
                "SymSrvGetSupplementW": 3,
                "SymSrvIsStore": 3,
                "SymSrvIsStoreW": 3,
                "SymSrvStoreFile": 3,
                "SymSrvStoreFileW": 3,
                "SymSrvStoreSupplement": 3,
                "SymSrvStoreSupplementW": 3,
                "UnDecorateSymbolNameW": 3,
                "FindDebugInfoFileExW": 3,
                "SymAddSourceStream": 3,
                "SymAddSourceStreamW": 3,
                "SymEnumSourceFileTokens": 3,
                "SymAddSourceStreamA": 3,
                "SymEnumTypesByName": 3,
                "SymEnumTypesByNameW": 3,
                "SymFindDebugInfoFile": 3,
                "SymFindDebugInfoFileW": 3,
                "SymFindExecutableImage": 3,
                "SymFindExecutableImageW": 3,
                "SymSrvGetFileIndexInfo": 3,
                "SymSrvGetFileIndexInfoW": 3,
                "SymGetOmaps": 2,
                "SymGetUnwindInfo": 3,
                "../../dll/win32/dbghelp/source.c": 1,
                "module->sources": 1,
                "Unsupported yet (should get info from current context)": 1,
                "%p %s %s %s %u %u %p %p: stub!": 1,
                "%p %s %s %p %p: stub!": 1,
                "uSymEnumSourceFilesW": 1,
                "SymEnumSourceLines": 3,
                "SymEnumSourceLinesW": 3,
                "SymGetSourceFileToken": 3,
                "SymGetSourceFileTokenW": 3,
                "../../dll/win32/dbghelp/stabs.c": 1,
                "ptd->err_idx < sizeof(ptd->errors) / sizeof(ptd->errors[0])": 1,
                "cu_include_stk_idx < MAX_INCLUDES": 1,
                "sz > 0": 1,
                "Unknown pending object tag %u": 1,
                "filenr <= cu_include_stk_idx": 1,
                "(%ld,%ld) => %p (%p)": 1,
                "unsigned short int": 1,
                "unsigned int": 1,
                "unsigned": 1,
                "unsigned long int": 1,
                "integer": 1,
                "float complex": 1,
                "double complex": 1,
                "long long unsigned": 1,
                "long double complex": 1,
                "uNot an attribute... NIY": 1,
                "!*stabs_find_ref(filenr1, subnr1)": 1,
                "Forward declaration (%p/%s) is not an aggregate (%u)": 1,
                "Forward declaration name mismatch %s <> %s": 1,
                "Unknown type '%c'": 1,
                "Adding (%ld,%ld) %s": 1,
                "uBad stabs string %p": 1,
                "Failure on %s": 1,
                "[%d]: line %d => %s": 1,
                "[0]: => %s": 1,
                "Unknown register value (%u)": 1,
                "source_idx >= 0": 1,
                "block == NULL": 1,
                "UNDF: curr_func %s": 1,
                "incl_stk < (int)(sizeof(incl) / sizeof(incl[0])) - 1": 1,
                "incl_stk >= 0": 1,
                "Excluded header not found (%s,%d)": 1,
                "Unknown stab type 0x%02x": 1,
                "0x%02x %x %s": 1,
                "ustabs_parse": 1,
                "stabs_parse_typedef": 1,
                "stabs_pts_read_type_def": 2,
                "stabs_find_ref": 2,
                "pending_flush": 2,
                "Unsupported (yet) mode (%x)": 1,
                "Failed to linearize address %04x:%s (mode %x)": 1,
                "(%d, %p, %p, %p, %p, %p, %p, %p, %p)": 1,
                "(%p %p %p): stub!": 1,
                "(%p %p %s): stub!": 1,
                "addr_to_linear": 2,
                "StackWalk": 3,
                "StackWalk64": 3,
                "SymRegisterFunctionEntryCallback": 3,
                "SymRegisterFunctionEntryCallback64": 3,
                "../../dll/win32/dbghelp/storage.c": 1,
                "v->num_elts > ncurr": 1,
                "re adding an existing key": 1,
                "sa->key2index.num_elts >= 2": 1,
                "ht->buckets": 1,
                "sparse_array_add": 2,
                "u../../dll/win32/dbghelp/symbol.c": 1,
                "Adding compiland symbol %s:%s": 1,
                "Adding global symbol %s:%s %d@%lx %p": 1,
                "Size mismatch for %s.%s between type (%s) and src (%lu)": 1,
                "Adding global function %s:%s @%lx-%lx": 1,
                "!sig_type || sig_type->tag == SymTagFunctionType": 1,
                "(%p)%s:%lx %s:%u": 1,
                "func->symt.tag == SymTagFunction": 1,
                "Adding local symbol (%s:%s): %s %p": 1,
                "dt == DataIsParam || dt == DataIsLocal": 1,
                "!parent_block || parent_block->symt.tag == SymTagBlock": 1,
                "Adding global thunk %s:%s @%lx-%lx": 1,
                "Adding constant value %s:%s": 1,
                "Adding global label value %s:%s": 1,
                "Adding public symbol %s:%s @%lx": 1,
                "(%p, %p): stub": 1,
                "%p %s %p %p": 1,
                "(%p %p)": 1,
                "(%s, %p, %d, 0x%08x)": 1,
                "__unDName": 1,
                "suspicious register value %x": 1,
                "Shouldn't happen (kind=%d), debug reader backend is broken": 1,
                "Unsupported variant type (%u)": 1,
                "Unhandled kind (%u) in sym data": 1,
                "%p => %s %u %s": 1,
                "u(%p, %s, %p)": 1,
                "name - Name < sizeof(tmp)": 1,
                "%s %s %c": 1,
                "Unknown type: %u (%x)": 1,
                "Unsupported searching with options (%x)": 1,
                "(%p %s %s %p %p)": 1,
                "(%p %s %u %u %s %s %p %p %x)": 1,
                "(%p %s %s %u)": 1,
                "(%p %s): stub": 1,
                "Unsupported yet (filtering on compiland %s)": 1,
                "(%p) (%s, %s, %d %p %p): stub": 1,
                "hProcess = %p, BaseOfDll = %s, index = %d, symbol = %p": 1,
                "(%p, %s): stub": 1,
                "symt_new_compiland": 2,
                "symt_new_public": 2,
                "symt_new_global_variable": 2,
                "symt_new_function": 2,
                "symt_add_func_line": 2,
                "symt_add_func_local": 2,
                "symt_new_thunk": 2,
                "symt_new_constant": 2,
                "symt_new_label": 2,
                "SymEnumSymbols": 3,
                "symt_enum_locals_helper": 2,
                "symt_fill_sym_info": 2,
                "SymFromName": 3,
                "SymGetSymNext64": 3,
                "SymGetSymNext": 3,
                "SymGetSymPrev64": 3,
                "SymGetSymPrev": 3,
                "SymGetLineFromAddr64": 3,
                "SymGetLinePrev64": 3,
                "SymGetLineNext64": 3,
                "UnDecorateSymbolName": 3,
                "SymMatchStringA": 3,
                "SymMatchStringW": 3,
                "SymSearch": 3,
                "doSymSearch": 2,
                "SymSearchW": 3,
                "SymAddSymbolW": 3,
                "SymSetScopeFromAddr": 3,
                "SymEnumLines": 3,
                "SymGetLineFromName": 3,
                "SymGetLineFromName64": 3,
                "SymGetLineFromNameW64": 3,
                "SymFromIndex": 3,
                "SymFromIndexW": 3,
                "SymSetHomeDirectory": 3,
                "SymSetHomeDirectoryW": 3,
                "SymTagNull": 1,
                "SymTagExe": 1,
                "SymTagCompiland": 1,
                "SymTagCompilandDetails": 1,
                "SymTagCompilandEnv": 1,
                "SymTagFunction": 1,
                "SymTagBlock": 1,
                "SymTagData": 1,
                "SymTagAnnotation": 1,
                "SymTagLabel": 1,
                "SymTagPublicSymbol": 1,
                "SymTagUDT": 1,
                "SymTagEnum": 1,
                "SymTagFunctionType": 1,
                "SymTagPointerType": 1,
                "SymTagArrayType": 1,
                "SymTagBaseType": 1,
                "SymTagTypedef,": 1,
                "SymTagBaseClass": 1,
                "SymTagFriend": 1,
                "SymTagFunctionArgType,": 1,
                "SymTagFuncDebugStart,": 1,
                "SymTagFuncDebugEnd": 1,
                "SymTagUsingNamespace,": 1,
                "SymTagVTableShape": 1,
                "SymTagVTable": 1,
                "SymTagCustom": 1,
                "SymTagThunk": 1,
                "SymTagCustomType": 1,
                "SymTagManagedType": 1,
                "SymTagDimension": 1,
                "u../../dll/win32/dbghelp/type.c": 1,
                "typename": 1,
                "module": 1,
                "Unsupported sym-tag %s": 1,
                "uUnsupported sym-tag %s for get-address": 1,
                "uAdding udt %s:%s": 1,
                "udt->symt.tag == SymTagUDT": 1,
                "Changing size for %s from %u to %u": 1,
                "udt_type->symt.tag == SymTagUDT": 1,
                "Adding %s to UDT %s": 1,
                "m->symt.tag == SymTagData": 1,
                "enum_type->symt.tag == SymTagEnum": 1,
                "sig_type->symt.tag == SymTagFunctionType": 1,
                "Unsupported sym-tag %s for find-children": 1,
                "Unsupported sym-tag %s for get-children-count": 1,
                "Unsupported sym-tag %s for get-length": 1,
                "Unsupported sym-tag %s for get-lexical-parent": 1,
                "Unknown kind (%u) for get-offset": 1,
                "Unsupported sym-tag %s for get-offset": 1,
                "Unsupported sym-tag %s for get-type": 1,
                "No support for calling convention for this signature": 1,
                "Unsupported GetInfo request (%u)": 1,
                "Unknown GetInfo request (%u)": 1,
                "u%lx%08lx": 1,
                "(%p %s %p %p)": 1,
                "Someone didn't properly set ModBase (%s)": 1,
                "symt_get_name": 2,
                "symt_get_address": 2,
                "symt_new_udt": 2,
                "symt_set_udt_size": 2,
                "symt_add_udt_element": 2,
                "SymEnumTypes": 3,
                "symt_get_info": 2,
                "SymGetTypeInfo": 3,
                "WARNING: calling stub SymGetOmapBlockBase()": 1,
                "dbghelp.dll": 2,
                "WARNING: calling stub SymSetSymWithAddr64()": 1,
                "SymGetOmapBlockBase": 3,
                "SymSetSymWithAddr64": 3,
                "#%04x": 1,
                "%s:%s:%s ": 1,
                "DEBUGCHANNEL": 1,
                "fixme": 1,
                "trace": 1,
                "u0123456789abcdef": 1,
                "incorrect header check": 1,
                "unknown compression method": 1,
                "invalid window size": 1,
                "unknown header flags set": 1,
                "header crc mismatch": 1,
                "invalid block type": 1,
                "invalid stored block lengths": 1,
                "too many length or distance symbols": 1,
                "invalid code lengths set": 1,
                "invalid bit length repeat": 1,
                "invalid code -- missing end-of-block": 1,
                "invalid literal/lengths set": 1,
                "invalid distances set": 1,
                "invalid literal/length code": 2,
                "invalid distance code": 2,
                "invalid distance too far back": 2,
                "incorrect data check": 1,
                "incorrect length check": 1,
                "need dictionary": 1,
                "stream end": 1,
                "file error": 1,
                "stream error": 1,
                "data error": 1,
                "insufficient memory": 1,
                "buffer error": 1,
                "incompatible version": 1,
                "[-&LMb#{'": 1,
                "w+OQvr": 1,
                "R1h58": 1,
                ")\\ZEo^m/": 1,
                "H*0\"ZOW": 1,
                "mj>zjZ": 1,
                "l6qnk": 1,
                "IiGM>nw": 1,
                "1A26b": 1,
                "ewh/?y": 1,
                "1wsHp": 1,
                "#bML\"": 1,
                "vQO+t": 1,
                "^oEZ_": 1,
                "OZw3(?": 1,
                "V_:X1:": 1,
                "NJ2\"v": 1,
                "O*9y]": 1,
                " inflate 1.2.8 Copyright 1995-2013 Mark Adler ": 1,
                "mingwm10.dll": 1,
                "__mingwthr_remove_key_dtor": 1,
                "__mingwthr_key_dtor": 1,
                "uMingw-w64 runtime failure:": 1,
                "Address %p has no image-section": 1,
                "  VirtualQuery failed for %d bytes at address %p": 1,
                "  VirtualProtect failed with code 0x%x": 1,
                "  Unknown pseudo relocation protocol version %d.": 1,
                "  Unknown pseudo relocation bit size %d.": 1,
                "libgcc.a.dbg": 1,
                "EnumDirTree": 2,
                "EnumerateLoadedModules": 2,
                "EnumerateLoadedModules64": 2,
                "ExtensionApiVersion": 2,
                "FindDebugInfoFile": 2,
                "FindExecutableImage": 2,
                "GetTimestampForLoadedLibrary": 2,
                "ImageDirectoryEntryToData": 2,
                "ImageDirectoryEntryToDataEx": 2,
                "ntdll.RtlImageNtHeader": 2,
                "ImageNtHeader": 1,
                "ntdll.RtlImageRvaToSection": 2,
                "ImageRvaToSection": 1,
                "ntdll.RtlImageRvaToVa": 2,
                "ImageRvaToVa": 1,
                "ImagehlpApiVersion": 2,
                "ImagehlpApiVersionEx": 2,
                "MakeSureDirectoryPathExists": 2,
                "MiniDumpReadDumpStream": 2,
                "SearchTreeForFile": 2,
                "SymAddSymbol": 2,
                "SymEnumSourceFiles": 2,
                "SymEnumSourceFilesW": 2,
                "SymEnumSymbolsW": 2,
                "SymEnumTypesW": 2,
                "SymEnumerateModules": 2,
                "SymEnumerateModules64": 2,
                "SymEnumerateModulesW64": 2,
                "SymEnumerateSymbols": 2,
                "SymEnumerateSymbols64": 2,
                "SymFindFileInPath": 2,
                "SymFromAddr": 2,
                "SymFromAddrW": 2,
                "SymFunctionTableAccess": 2,
                "SymFunctionTableAccess64": 2,
                "SymGetLineFromAddr": 2,
                "SymGetLineFromAddrW64": 2,
                "SymGetLineNext": 2,
                "SymGetLinePrev": 2,
                "SymGetModuleBase": 2,
                "SymGetModuleBase64": 2,
                "SymGetOptions": 2,
                "SymGetSearchPath": 2,
                "SymGetSearchPathW": 2,
                "SymGetSymFromAddr": 2,
                "SymGetSymFromAddr64": 2,
                "SymGetSymFromName": 2,
                "SymGetSymFromName64": 2,
                "SymGetTypeFromName": 2,
                "SymInitialize": 2,
                "SymLoadModule": 2,
                "SymLoadModule64": 2,
                "SymMatchString": 1,
                "SymSetOptions": 2,
                "SymSetSearchPath": 2,
                "SymSetSearchPathW": 2,
                "SymUnDName": 2,
                "SymUnDName64": 2,
                "SymUnloadModule": 2,
                "SymUnloadModule64": 2,
                "WinDbgExtensionDllInit": 2,
                "DbgPrint": 2,
                "NtQueryInformationThread": 2,
                "NtQuerySystemInformation": 2,
                "RtlImageDirectoryEntryToData": 2,
                "RtlImageNtHeader": 2,
                "RtlImageRvaToVa": 2,
                "vDbgPrintExWithPrefix": 2,
                "CloseHandle": 2,
                "CreateDirectoryA": 2,
                "CreateFileA": 2,
                "CreateFileMappingW": 2,
                "CreateFileW": 2,
                "DeleteCriticalSection": 2,
                "EnterCriticalSection": 2,
                "FindClose": 2,
                "FindFirstFileW": 2,
                "FindNextFileW": 2,
                "FreeLibrary": 2,
                "GetCurrentDirectoryW": 2,
                "GetCurrentProcess": 2,
                "GetCurrentProcessId": 2,
                "GetCurrentThreadId": 2,
                "GetEnvironmentVariableA": 2,
                "GetEnvironmentVariableW": 2,
                "GetFileSizeEx": 2,
                "GetLastError": 2,
                "GetModuleHandleA": 2,
                "GetProcAddress": 2,
                "GetProcessHeap": 2,
                "GetProcessId": 2,
                "GetSystemInfo": 2,
                "GetSystemTimeAsFileTime": 2,
                "GetThreadContext": 2,
                "GetThreadSelectorEntry": 2,
                "GetTickCount": 2,
                "GetVersionExW": 2,
                "HeapAlloc": 2,
                "HeapFree": 2,
                "HeapReAlloc": 2,
                "HeapValidate": 2,
                "InitializeCriticalSection": 2,
                "InterlockedCompareExchange": 2,
                "InterlockedExchange": 2,
                "InterlockedExchangeAdd": 2,
                "IsProcessorFeaturePresent": 2,
                "LeaveCriticalSection": 2,
                "LoadLibraryA": 2,
                "LoadLibraryW": 2,
                "LocalAlloc": 2,
                "LocalFree": 2,
                "LocalReAlloc": 2,
                "MapViewOfFile": 2,
                "MultiByteToWideChar": 2,
                "OpenThread": 2,
                "QueryPerformanceCounter": 2,
                "RaiseException": 2,
                "ReadProcessMemory": 2,
                "ResumeThread": 2,
                "RtlUnwind": 2,
                "SearchPathA": 2,
                "SearchPathW": 2,
                "SetFilePointer": 2,
                "SetLastError": 2,
                "SetUnhandledExceptionFilter": 2,
                "Sleep": 2,
                "SuspendThread": 2,
                "TerminateProcess": 2,
                "TlsGetValue": 2,
                "UnhandledExceptionFilter": 2,
                "UnmapViewOfFile": 2,
                "VirtualProtect": 2,
                "VirtualQuery": 2,
                "WideCharToMultiByte": 2,
                "WriteFile": 2,
                "lstrcpyW": 2,
                "lstrcpynA": 2,
                "lstrcpynW": 2,
                "lstrlenW": 2,
                "__dllonexit": 2,
                "_amsg_exit": 2,
                "_assert": 2,
                "_initterm": 2,
                "_lock": 2,
                "_onexit": 2,
                "_snprintf": 2,
                "_stricmp": 2,
                "_strtoui64": 2,
                "_unlock": 2,
                "_vsnprintf": 2,
                "_wcsicmp": 2,
                "_wcsnicmp": 2,
                "_winmajor": 1,
                "abort": 2,
                "bsearch": 2,
                "calloc": 2,
                "fwrite": 2,
                "getenv": 2,
                "malloc": 2,
                "memcmp": 2,
                "memcpy": 2,
                "memmove": 2,
                "memset": 2,
                "qsort": 2,
                "sprintf": 2,
                "strcat": 2,
                "strchr": 2,
                "strcmp": 2,
                "strcpy": 2,
                "strcspn": 2,
                "strncmp": 2,
                "strtol": 2,
                "toupper": 2,
                "towlower": 2,
                "towupper": 2,
                "vfprintf": 2,
                "wcschr": 2,
                "wcscmp": 2,
                "wcscpy": 2,
                "wcslen": 2,
                "EnumProcessModules": 2,
                "GetModuleBaseNameW": 2,
                "GetModuleFileNameExW": 2,
                "GetModuleInformation": 2,
                "GetFileVersionInfoSizeW": 2,
                "GetFileVersionInfoW": 2,
                "VerQueryValueW": 2,
                "_read": 1,
                "_lseek": 1,
                "kernel32.dll": 1,
                "msvcrt.dll": 2,
                "psapi.dll": 1,
                "version.dll": 1,
                "3/3:3B3J3": 1,
                "4l4t4|4": 1,
                "7!7)7/8o8": 1,
                "9D<I<S<]<g<q<{<": 1,
                "=+=3=;=z=": 1,
                ">#>->7>A>K>U>_>i>s>}>": 1,
                "?&?-?:?I?Q?Y?q?y?": 1,
                "1\"1,161@1J1T1^1h1r1|1": 1,
                "2 2(202H2f2": 1,
                "6.666>6": 1,
                "9]:e:m:U;d;l;t; </<7<?<": 1,
                "> >(>": 1,
                "?N?U?[?": 1,
                "2$2;2": 1,
                "3Z5p5": 1,
                "8#8)8~9": 1,
                ":B;S;[;c;": 1,
                "<\"<*<I<Z<b<j<": 1,
                "<f=k=u=": 1,
                ">)>3>=>G>Q>[>e>o>y>": 1,
                "?,?;?C?K?c?k?": 1,
                "1\"1j1{1": 1,
                "2W3i3z3": 1,
                "6(6D6`6l6s6": 1,
                "6*9G9": 1,
                ":?:G:O:r:": 1,
                ";F<n<": 1,
                "< =N=": 1,
                ">Y?s?": 1,
                "1'2P2v2": 1,
                "3;3C3K3": 1,
                "374J4T4_4j4z4 6/676?6": 1,
                "6k7v7~7": 1,
                "8 868M8U8]8": 1,
                "9N9d9l9t9": 1,
                ":+:3:;:": 1,
                ";I;Q;Y;": 1,
                "<!<)<1<Y<n<v<~<": 1,
                "=l=t=": 1,
                ">#>Y>a>": 1,
                ">X?`?|?": 1,
                "00080@0~0": 1,
                "0R1Z1": 1,
                "2K2`2h2p2": 1,
                "3,3E3O3s3{3": 1,
                "4$5:5B5J5e5t5|5": 1,
                "6<6z6": 1,
                "637M7U7]7": 1,
                "8$878?8G8k8~8": 1,
                "9=9R9c9k9s9": 1,
                ":4:G:O:W:n:}:": 1,
                ";,;?;G;O;": 1,
                "<!=,=4=<=": 1,
                ">^>m>u>}>": 1,
                "0 0(000n0u0{0": 1,
                "0\\1t1|1": 1,
                "2,242<2\"3<3D3L3": 1,
                "5'5/575": 1,
                "6/8>8F8N8": 1,
                "0]0h0": 1,
                "0(1;1C1K1u1": 1,
                "1F2[2c2k2": 1,
                "4b5u5}5": 1,
                "6$797A7I7": 1,
                "8H8W8_8g8": 1,
                "9/979?9": 1,
                ";\";*;": 1,
                "<4=R=Z=b=": 1,
                ">]>^?p?x?": 1,
                "0'0/0F0U0]0e0": 1,
                "297N7V7^7": 1,
                "8\"8*828z8": 1,
                "90989@9t9": 1,
                ":7:?:G:": 1,
                ";7<B<J<R<f<": 1,
                ")080@0H0i0": 1,
                "0-1<1D1L1": 1,
                "434V4^4f4": 1,
                "5%5-5s5": 1,
                "696@6F6": 1,
                "6O7r7z7": 1,
                "9!9)919_9s9{9": 1,
                "<4<F<N<V<u<M=c=k=s=": 1,
                ">$>,>w>": 1,
                "?.?6?>?": 1,
                "0 1F1N1V1": 1,
                "2D3k3s3{3": 1,
                "4%4-4": 1,
                ";&;.;6;h;": 1,
                ">#>i>q>y>v?": 1,
                "0)11191F2b2|2": 1,
                "2]3d3j3": 1,
                "394R4l4s4y4": 1,
                "4#5*505~5": 1,
                "6n6u6{6": 1,
                ":h:o:u:": 1,
                ":2;9;?;": 1,
                ";2<9<?<": 1,
                "<g=q=": 1,
                "=?>\\>d>l>": 1,
                ">t?{?": 1,
                ";0B0H0": 1,
                "1N1g1": 1,
                "172>2D2[2m2|2": 1,
                "3&3>3[3c3k3": 1,
                "4q4x4~4": 1,
                "5D5`5z5": 1,
                "5B6I6O6": 1,
                "7 7:7A7G7": 1,
                "8&888G8O8W8_8": 1,
                "9&9.969": 1,
                "9E:L:R:": 1,
                ": ;<;V;];c;": 1,
                "<%<+<": 1,
                ">'>/>7>?>": 1,
                "%0,020": 1,
                "161>1F1": 1,
                "2%2+2": 1,
                "2H3O3U3": 1,
                "3N4U4[4": 1,
                "6'7.747": 1,
                "8!8;8B8H8": 1,
                "9f9m9s9": 1,
                ":l:s:y:": 1,
                ";*;2;:;B;": 1,
                "<#<+<": 1,
                "<F=M=S=": 1,
                "?%?7?L?T?\\?n?": 1,
                "2A4H4N4": 1,
                "475>5D5": 1,
                ":4;?;G;O;i;t;|;": 1,
                "<#<a<": 1,
                "9=:B:H:v:": 1,
                "=&=3=": 1,
                "=&>;>\\>q>": 1,
                "2$3K5R5X5": 1,
                "747=7X7": 1,
                ";E;k;s;{;": 1,
                ";!<)<1<": 1,
                "=!>)>1>": 1,
                ";9<D<L<T<n?}?": 1,
                "0S1m1u1": 1,
                "2=2V2^2f2": 1,
                "3!3)313S3f3n3v3": 1,
                "4\"454=4E4g4z4": 1,
                "565I5Q5Y5{5": 1,
                "6N7a7i7q7": 1,
                "8/8B8J8R8s8": 1,
                "9?9R9Z9b9": 1,
                ":+:;:P:`:u:": 1,
                ";.;>;S;c;x;": 1,
                "<1<A<V<f<{<": 1,
                "=4=D=Y=i=~=": 1,
                ">!>2>?>P>]>n>{>": 1,
                "?\"?/?@?M?^?k?|?": 1,
                "000=0N0[0l0y0": 1,
                "1 1-1>1K1\\1i1z1": 1,
                "2.2;2L2Y2j2w2": 1,
                "3+3<3I3Z3": 1,
                "546?6G6O6a6o6": 1,
                "R0b0m0r0{0": 1,
                "1\"1+151C1H1Q1v1~1": 1,
                "8=8M8U8]8w9": 1,
                "9O=_=g=o=": 1,
                ".060>0": 1,
                "5?6G6[6": 1,
                "7N7e7": 1,
                "8(8=9O9W9_9": 1,
                "k0v0~0": 1,
                "0b1m1u1}1X2c2k2s2": 1,
                "7!7)717C7Q7": 1,
                "8$828x8": 1,
                ";=;E;M;": 1,
                ";V<y<": 1,
                "=\\=y=": 1,
                ">/>A>I>Q>e>w>": 1,
                "?#?H?": 1,
                "0&070?0G0": 1,
                "151=1E1": 1,
                "2\"2*222": 1,
                "2)3:3]3": 1,
                "444<4D4V4": 1,
                "5i5z5": 1,
                "5Q6f6n6v6\\7m7u7}7b9u9}9": 1,
                "50=0E0": 1,
                ";;<A<G<P<[<c<k<|<": 1,
                "=1=N?b?j?r?": 1,
                "051D1": 1,
                "3+3G3c3": 1,
                "3J4^4o4": 1,
                "5-5D5[5r5": 1,
                "5:6N6": 1,
                ";1;9;A;": 1,
                "=T>q?": 1,
                "4&4.464g4": 1,
                "5 6(606k6v6~6": 1,
                "647?7G7O7": 1,
                "9O9W9_9w9": 1,
                "<S<[<c<": 1,
                ">N?V?^?w?": 1,
                "0Z1b1j1": 1,
                "4+595x5": 1,
                "7A7R7": 1,
                "9<9D9L9": 1,
                ":$;,;4;": 1,
                "0 0o0v0|0": 1,
                "081?1E1": 1,
                "2%2+2N3": 1,
                "3X4`4l4t4|4": 1,
                "8R:f:": 1,
                ":I;P;V;": 1,
                "4#4+434V4g4o4w4": 1,
                "5:5K5S5[5c5": 1,
                "6/676?6G6j6{6": 1,
                "7#7+7N7_7g7o7w7": 1,
                "828C8K8S8[8~8": 1,
                "9'9/979?9b9s9{9": 1,
                ":#:F:W:_:g:o:": 1,
                ";*;;;C;K;S;v;": 1,
                "<'</<7<Z<k<s<{<": 1,
                "=>=O=W=_=g=": 1,
                "=\">3>;>C>K>n>": 1,
                "?'?/?R?c?k?s?{?": 1,
                "060G0O0W0_0": 1,
                "1+131;1C1f1w1": 1,
                "2'2J2[2c2k2s2": 1,
                "3.3?3G3O3W3z3": 1,
                "4#4+434;4^4o4w4": 1,
                "5B5S5[5c5k5": 1,
                "6&676?6G6O6r6": 1,
                "7#7+737V7g7o7w7": 1,
                ":)?0?6?E?": 1,
                "0%0-0": 1,
                "3.4s4": 1,
                "5M5_5": 1,
                "6$6N6V6^6": 1,
                "7@7H7_7f7l7q7x7": 1,
                "9Z9q9v9": 1,
                ";$;4;O;d;": 1,
                "<$<?<T<o<": 1,
                "=/=D=_=t=": 1,
                ">4>O>d>": 1,
                "?9?S?": 1,
                "2n4{8": 1,
                "=C>l>t>|>": 1,
                ">:?Y?a?i?": 1,
                "\"0*020": 1,
                "6[8b8g8": 1,
                "<0<8<@<}<": 1,
                "=X=c=": 1,
                ">>>N>": 1,
                "*0]0e0m0": 1,
                "101T1}1": 1,
                "4\"4*4": 1,
                "6C8Y8h8": 1,
                "9>:M:]:l:6;V;^;f;": 1,
                ";D?K?Q?": 1,
                "0A2P2X2`2": 1,
                "3v5~7": 1,
                "8<8B8H8v8": 1,
                "8p9\":m:t:z:": 1,
                ":^;o;b<": 1,
                ">%>->": 1,
                "0%0q0": 1,
                "2:2A2G2": 1,
                "2\"3*323T3[3a3y3": 1,
                "8D9p9x9": 1,
                "9\"=R=Z=b=t=)?0?6?": 1,
                "050N0V0^0": 1,
                "1R1h1z1": 1,
                "7M7U7]7o7w7": 1,
                "7g9/:>:F:N:": 1,
                ";$;,;4;P;W;];Z<l<t<|<": 1,
                ">3>;>C>": 1,
                "0!0Z0z0": 1,
                "7-8@8H8P8l8s8x8": 1,
                "9L:U;L<c<j<": 1,
                ">.>X>`>h>": 1,
                "3N3V3^3": 1,
                "5.5}5": 1,
                "788N8`8u8}8": 1,
                "? ?(?O?e?w?": 1,
                "0I0Q0Y0": 1,
                "1$1+12191@1G1N1U1\\1c1j1q1x1": 1,
                "3>3T3\\3d3]485N5V5^5E6n6v6~6@7G7M7j7": 1,
                "8W8^8d8{8": 1,
                "8,9J:Q:W:": 1,
                ";8=~=": 1,
                "?!?)?1?": 1,
                "2N3a3i3q3": 1,
                "6W7j7r7z7": 1,
                "798O8a8": 1,
                ":D;^;p;": 1,
                "<<=e=z=": 1,
                "?(?=?": 1,
                "1%1O1": 1,
                "2R3a3|3": 1,
                "5&505v5": 1,
                "6 6)646": 1,
                "7+7K7T7": 1,
                "0[1y1": 1,
                "; <[=": 1,
                "2\"2i3": 1,
                "40474C4J4e4l4x4": 1,
                "595@5J5Q5k5r5|5": 1,
                "<&<0<": 1,
                "506M6^6t6": 1,
                "7:7V7^7f7n7": 1,
                "8&8C8U8Z8d8p8w8": 1,
                "9(9:9?9R9|9": 1,
                "<!<F<X<h<": 1,
                "=!=)=.=>=D=R=h=r=": 1,
                ">]>{>": 1,
                "?R?j?": 1,
                "1&1,161H1O1U1d1j1": 1,
                "1!2I2W2c2|2": 1,
                "333q3": 1,
                "3.4<4": 1,
                "5A5T5b5": 1,
                "606;6I6l6": 1,
                "7?8W8b8v8": 1,
                "9 9/9E9P9~9": 1,
                ";\";*;2;:;B;J;R;Z;b;j;r;z;": 1,
                "<\"<*<2<:<B<J<R<Z<b<j<r<z<": 1,
                "=\"=*=2=:=B=J=R=Z=b=j=r=z=": 1,
                ",00080<0@0D0H0l0p0x0|0": 1,
                "1,1014181<1@1D1H1`1x1|1": 1,
                "2 2$2(2,2024282<2@2D2H2L2P2L3P3T3X3\\3`3d3h3l3p3t3x3|3": 1,
                "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5": 3,
                "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6": 2,
                "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7": 1,
                "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8": 2,
                "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9": 2,
                ":4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:": 1,
                "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0": 1,
                "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1": 2,
                "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2": 2,
                "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3": 1,
                "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4": 1,
                "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3": 1,
                "5l5p5t5x5|5": 1,
                "6 6$6": 1,
                ": :$:(:8<<<@<D<H<L<P<T<X<\\<": 1,
                "= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\\=`=d=h=l=p=t=x=|=": 1,
                "> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\\>`>d>h>l>p>t>x>|>": 1,
                "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?": 1,
                "0 0$0(0,0004080<0@0D0H0L0P0": 1,
                "2(4,4044484<4@4D4H4L4P4T4X4\\4`4d4d5h5l5p5t5x5|5": 1,
                "6 6$6(6,60646": 1,
                "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4": 1,
                "= =$=(=,=0=4=8=<=@=": 1,
                "<,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?": 1,
                "1,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3": 1,
                "6H:L:P:T:X:\\:`:d:h:l:": 1,
                "<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0": 1,
                "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1": 1,
                "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6": 1,
                ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:": 1,
                "terminate_string": 1,
                "enum_types_AtoW": 1,
                "pe_find_section": 1,
                "dll/win32/dbghelp/cpu_arm64.c": 1,
                "macho_fetch_file_info": 1,
                "sym_enumerate_cb": 1,
                "dwarf2_leb128_as_unsigned": 1,
                "dll/win32/dbghelp/minidump.c": 1,
                "vector_init": 1,
                "lib/sdk/crt/startup/crtdll.c": 1,
                "arm64_stack_walk": 1,
                "_encode_pointer": 1,
                "re_match_multi": 1,
                "stab_strcpy": 1,
                "refresh_module_list": 1,
                "symt_fill_func_line_info": 1,
                "x86_64_fetch_minidump_thread": 1,
                "fetch_pe_module_info_cb": 1,
                "x86_64_stack_walk": 1,
                "fetch_thread_stack": 1,
                "updatewindow": 1,
                "__DllMainCRTStartup": 1,
                "symt_find_nearest": 1,
                "enum_modW64_64": 1,
                "do_searchW": 1,
                "__mingw_GetSectionForAddress": 1,
                "copy_line_64_from_32": 1,
                "__main": 1,
                "lib/sdk/crt/startup/pesect.c": 1,
                "pe_module_remove": 1,
                "symt_add_function_signature_parameter": 1,
                "__do_global_ctors": 1,
                "pdb_read_file": 1,
                "lib/sdk/crt/startup/pseudo-reloc.c": 1,
                "crc32_combine": 1,
                "sw_xlat_addr": 1,
                "pre_c_init": 1,
                "get_crc_table": 1,
                "zcfree": 1,
                "wine_dbg_log": 1,
                "symt_enum_module": 1,
                "pe_unmap_full": 1,
                "pdb_ds_read": 1,
                "default_dbg_vlog": 1,
                "libwine_realloc": 1,
                "sym_enum": 1,
                "lib/sdk/crt/startup/gccmain.c": 1,
                "crc32_combine_": 1,
                "codeview_get_address": 1,
                "__report_gsfailure": 1,
                "coff_add_file": 1,
                "pe_unmap_section": 1,
                "module_get_debug": 1,
                "macho_enum_modules": 1,
                "module_set_module": 1,
                "arm64_fetch_minidump_module": 1,
                "_CRT_INIT": 1,
                "inflateSetDictionary": 1,
                "pe_unmap_directory": 1,
                "lib/sdk/crt/startup/atonexit.c": 1,
                "arm_fetch_minidump_module": 1,
                "pdb_process_file": 1,
                "symt_new_array": 1,
                "___w64_mingwthr_add_key_dtor": 1,
                "enum_load_modW64_32": 1,
                "dwarf2_debug_ctx": 1,
                "sffip_cb": 1,
                "pdb_read_jg_file": 1,
                "source_rb_realloc": 1,
                "sparse_array_find": 1,
                "__do_global_dtors": 1,
                "hash_table_hash": 1,
                "symt_add_type": 1,
                "append": 1,
                "dll/win32/dbghelp/stack.c": 1,
                "dll/win32/dbghelp/pe_module.c": 1,
                "symt_add_function_point": 1,
                "fetch_macho_module_info_cb": 1,
                "dll/win32/dbghelp/image.c": 1,
                "copy_symbolW": 1,
                "source_rb_compare": 1,
                "enum_source_files_W_to_A": 1,
                "release_temp_buffer": 1,
                "include/crt/mingw32/intrin_x86.h": 1,
                "symt_new_pointer": 1,
                "match_ext": 1,
                "module_get_type_by_name": 1,
                "symt_normalize_function": 1,
                "hash_table_iter_up": 1,
                "elf_enum_modules": 1,
                "_decode_pointer": 1,
                "elf_load_debug_info": 1,
                "symt_find_type_by_name": 1,
                "x86_64_get_addr": 1,
                "adler32_combine": 1,
                "_pei386_runtime_relocator": 1,
                "elf_find_section": 1,
                "sym_enumerate_cb64": 1,
                "__tlregdtor": 1,
                "__mingwthr_run_key_dtors": 1,
                "stabs_pts_read_range_value": 1,
                "zlibVersion": 1,
                "dwarf2_get_byte": 1,
                "module_reset_debug_info": 1,
                "inflateEnd": 1,
                "wine_dbgstr_wn": 1,
                "crc32": 1,
                "enum_load_modW64_64": 1,
                "symt_new_enum": 1,
                "_FindPESectionExec": 1,
                "lib/sdk/crt/startup/mingw_helpers.c": 1,
                "stabs_pts_read_number": 1,
                "stabs_parse_type": 1,
                "i386_fetch_minidump_module": 1,
                "include/reactos/wine/mscvpdb.h": 1,
                "DefaultDliNotifyHook2": 1,
                "codeview_add_type_pointer": 1,
                "__security_init_cookie": 1,
                "inflateReset": 1,
                "dwarf2_parse_u2": 1,
                "dwarf2_parse_u4": 1,
                "lib/3rdparty/zlib/inffast.c": 1,
                "arm64_fetch_minidump_thread": 1,
                "dwarf2_parse_u8": 1,
                "macho_load_module": 1,
                "source_rb_alloc": 1,
                "pe_unmap_file": 1,
                "default_dbg_vprintf": 1,
                "pdb_jg_read": 1,
                "arm_fetch_minidump_thread": 1,
                "wine_dbg_sprintf": 1,
                "zalloc": 1,
                "source_rb_free": 1,
                "inflateInit2_": 1,
                "symt_get_length": 1,
                "ReactOS/output-MinGW-i386/reactos/dll/win32/dbghelp/dbghelp_stubs.c": 1,
                "inflate_fast": 1,
                "_GetPEImageBase": 1,
                "dll/win32/dbghelp/source.c": 1,
                "vector_add": 1,
                "sparse_array_lookup": 1,
                "dll/win32/dbghelp/msc.c": 1,
                "pdb_module_remove": 1,
                "libwine__strdup": 1,
                "inflateSyncPoint": 1,
                "hash_table_add": 1,
                "dll/win32/dbghelp/cpu_i386.c": 1,
                "symt_add_module_ht": 1,
                "dll/win32/dbghelp/cpu_x86_64.c": 1,
                "module_find_by_addr": 1,
                "coff_add_symbol": 1,
                "pe_load_nt_header": 1,
                "lib/3rdparty/zlib/inflate.c": 1,
                "vector_at": 1,
                "lib/sdk/crt/startup/gs_support.c": 1,
                "codeview_new_func_signature": 1,
                "_IsNonwritableInCurrentImage": 1,
                "coff_get_name": 1,
                "libwine_malloc": 1,
                "read_mem64": 1,
                "elf_unmap_section": 1,
                "pool_init": 1,
                "adler32": 1,
                "__dyn_tls_init": 1,
                "x86_64_fetch_regname": 1,
                "codeview_parse_type_table": 1,
                "pev_pop_val": 1,
                "include/psdk/delayimp.h": 1,
                "lib/sdk/delayimp/delayimp.c": 1,
                "__write_memory": 1,
                "macho_synchronize_module_list": 1,
                "i386_fetch_minidump_thread": 1,
                "lib/sdk/crt/startup/tlssup.c": 1,
                "symt_open_func_block": 1,
                "dump_memory_info": 1,
                "lib/3rdparty/libwine/debug.c": 1,
                "arm_stack_walk": 1,
                "inflate": 1,
                "codeview_add_type_struct": 1,
                "pe_map_directory": 1,
                "_FindPESectionByName": 1,
                "sw_module_base": 1,
                "pev_push": 1,
                "source_get": 1,
                "codeview_add_type_enum": 1,
                "process_invade_cb": 1,
                "stabs_get_basic": 1,
                "DefaultDliFailureHook2": 1,
                "inflate_table": 1,
                "elf_fetch_file_info": 1,
                "symt_new_function_signature": 1,
                "minidump_add_memory_block": 1,
                "__dyn_tls_dtor": 1,
                "dwarf2_parse_byte": 1,
                "vector_length": 1,
                "mingw_onexit": 1,
                "dll/win32/dbghelp/symbol.c": 1,
                "debug_init": 1,
                "re_fetch_char": 1,
                "send_symbol": 1,
                "writeat": 1,
                "cmp_name": 1,
                "arm64_get_addr": 1,
                "__report_error": 1,
                "wine_dbgstr_an": 1,
                "symt_new_typedef": 1,
                "lib/sdk/crt/startup/tlsthrd.c": 1,
                "stabs_add_include": 1,
                "inflateResetKeep": 1,
                "inflateGetHeader": 1,
                "symt_index2ptr": 1,
                "default_dbgstr_wn": 1,
                "wine_dbg_printf": 1,
                "codeview_add_udt_element": 1,
                "stabs_reset_includes": 1,
                "stabs_parse": 1,
                "pdb_free": 1,
                "pe_get_map_rva": 1,
                "stabs_pts_read_id": 1,
                "symt_get_tag_str": 1,
                "__wine_dbg_get_channel_flags": 1,
                "process_find_by_handle": 1,
                "codeview_clear_type_table": 1,
                "dll/win32/dbghelp/rosstubs.c": 1,
                "dll/win32/dbghelp/module.c": 1,
                "__wine_dbg_set_channel_flags": 1,
                "stabs_read_type_enum": 1,
                "dll/win32/dbghelp/path.c": 1,
                "module_fill_module": 1,
                "dwarf2_parse_addr": 1,
                "___w64_mingwthr_remove_key_dtor": 1,
                "pool_strdup": 1,
                "inflateCopy": 1,
                "codeview_init_basic_types": 1,
                "dll/win32/dbghelp/stabs.c": 1,
                "include/reactos/libs/pseh/pseh3.h": 1,
                "elf_is_in_thunk_area": 1,
                "get_temp_buffer": 1,
                "pev_set_value": 1,
                "inflateGetDictionary": 1,
                "arm_get_addr": 1,
                "zfree": 1,
                "DllMainCRTStartup": 1,
                "sparse_array_init": 1,
                "dump_threads": 1,
                "macho_read_wine_loader_dbg_info": 1,
                "symt_get_nameW": 1,
                "sw_read_mem": 1,
                "dll/win32/dbghelp/image_private.h": 1,
                "calc_crc32": 1,
                "dll/win32/dbghelp/macho_module.c": 1,
                "__mingw_enum_import_library_names": 1,
                "lib/3rdparty/zlib/zutil.c": 1,
                "codeview_add_type_array": 1,
                "include/psdk/winternl.h": 1,
                "lib/3rdparty/zlib/inftrees.c": 1,
                "__wine_dbg_set_functions": 1,
                "inflateSync": 1,
                "DllMain": 1,
                "dll/win32/dbghelp/type.c": 1,
                "include/reactos/wine/list.h": 1,
                "cpu_find": 1,
                "module_is_already_loaded": 1,
                "libwine_free": 1,
                "pe_get_map_size": 1,
                "pev_get_val": 1,
                "lib/pseh/i386/pseh3.c": 1,
                "stabs_pts_push": 1,
                "fetch_elf_module_info_cb": 1,
                "inflateReset2": 1,
                "read_mem": 1,
                "module_get_containee": 1,
                "_SEH3$_except_handler": 1,
                "symt_get_func_line_next": 1,
                "dwarf2_get_leb128_as_signed": 1,
                "dwarf2_get_leb128_as_unsigned": 1,
                "i386_get_addr": 1,
                "symt_cmp_addr": 1,
                "zlibCompileFlags": 1,
                "module_get_container": 1,
                "__mingw_get_msvcrt_handle": 1,
                "dll/win32/dbghelp/cpu_arm.c": 1,
                "dwarf2_get_u2": 1,
                "sparse_array_length": 1,
                "dwarf2_get_u4": 1,
                "inflateMark": 1,
                "atexit": 1,
                "lib/sdk/crt/startup/dllentry.c": 1,
                "dwarf2_get_u8": 1,
                "include/reactos/wine/debug.h": 1,
                "elf_synchronize_module_list": 1,
                "stabs_finalize_function": 1,
                "gf2_matrix_times": 1,
                "macho_load_debug_info": 1,
                "crc32_combine64": 1,
                "sym_enumW": 1,
                "add_module": 1,
                "symt_add_enum_element": 1,
                "elf_get_map_rva": 1,
                "dll/win32/dbghelp/elf_module.c": 1,
                "sw_table_access": 1,
                "re_match_one": 1,
                "zError": 1,
                "resort_symbols": 1,
                "adler32_combine_": 1,
                "dll/win32/dbghelp/cpu_ppc.c": 1,
                "dll/win32/dbghelp/dbghelp.c": 1,
                "hash_table_init": 1,
                "copy_line_32_from_64": 1,
                "pe_load_debug_info": 1,
                "symt_ptr2index": 1,
                "pdb_get_file_size": 1,
                "pdb_free_file": 1,
                "elf_map_section": 1,
                "elf_read_wine_loader_dbg_info": 1,
                "i386_build_addr": 1,
                "inflateInit_": 1,
                "x86_64_find_runtime_function": 1,
                "default_dbgstr_an": 1,
                "dwarf2_debug_di": 1,
                "__mingw_TLScallback": 1,
                "x86_64_fetch_minidump_module": 1,
                "dll/win32/dbghelp/coff.c": 1,
                "dwarf2_debug_traverse_ctx": 1,
                "zcalloc": 1,
                "und_free": 1,
                "pe_load_builtin_module": 1,
                "dwarf2_module_remove": 1,
                "__delayLoadHelper2": 1,
                "inflatePrime": 1,
                "pe_map_full": 1,
                "_FindPESection": 1,
                "pev_free": 1,
                "hash_table_iter_init": 1,
                "adler32_combine64": 1,
                "hash_table_destroy": 1,
                "dll/win32/dbghelp/storage.c": 1,
                "DllEntryPoint": 1,
                "lib/3rdparty/zlib/crc32.c": 1,
                "__mingw_GetSectionCount": 1,
                "sym_register_cb": 1,
                "module_find_by_nameA": 1,
                "find_name": 1,
                "fetch_buffer": 1,
                "gf2_matrix_square": 1,
                "pool_alloc": 1,
                "pdb_read_ds_file": 1,
                "elf_get_map_size": 1,
                "include/reactos/wine/rbtree.h": 1,
                "und_alloc": 1,
                "wine_dbgstr_addr": 1,
                "dll/win32/dbghelp/dwarf.c": 1,
                "module_find_by_nameW": 1,
                "symt_close_func_block": 1,
                "enum_modW64_32": 1,
                "source_new": 1,
                "elf_load_module": 1,
                "dwarf2_leb128_as_signed": 1,
                "dll/win32/dbghelp/crc32.c": 1,
                "get_filename": 1,
                "pool_destroy": 1,
                "_ValidateImageBase": 1,
                "inflateUndermine": 1,
                "lib/3rdparty/zlib/adler32.c": 1,
                "lib/3rdparty/libwine/debug_ros.c": 1,
                "syncsearch": 1,
                "symt_new_basic": 1,
                "pev_pop": 1,
                "enum_dir_treeWA": 1,
                "_SEH3$_FilterFunction.33887": 1,
                "doSymEnumSymbols": 1,
                "_imp__GetProcessId": 1,
                "_imp__GetModuleInformation": 1,
                "__RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "_imp__read": 1,
                "_imp__GetThreadContext": 1,
                "_imp__getenv": 1,
                "_SEH3$_RegisterFrame": 1,
                "_imp__RaiseException": 1,
                "_imp__CloseHandle": 1,
                "_data_start__": 1,
                "_dll_win32_msvcrt_libmsvcrt_a_iname": 1,
                "__DTOR_LIST__": 1,
                "__xi_a": 1,
                "_imp__LocalFree": 1,
                "_imp__lstrcpyW": 1,
                "_imp__VirtualProtect": 1,
                "_imp___strtoui64": 1,
                "_imp___onexit": 1,
                "_imp__LocalReAlloc": 1,
                "_imp__GetLastError": 1,
                "_imp__VirtualQuery": 1,
                "_imp__RtlImageRvaToVa": 1,
                "z_errmsg": 1,
                "_imp__RtlImageNtHeader": 1,
                "__tls_start__": 1,
                "__native_startup_lock": 1,
                "_imp__CreateFileA": 1,
                "_imp___wcsnicmp": 1,
                "_imp__TlsGetValue": 1,
                "_imp__InterlockedExchange": 1,
                "_imp__InitializeCriticalSection": 1,
                "_rt_psrelocs_start": 1,
                "_imp__abort": 1,
                "_head_lib_sdk_crt_oldnames_a": 1,
                "__xl_c": 1,
                "_dll_characteristics__": 1,
                "_size_of_stack_commit__": 1,
                "_size_of_stack_reserve__": 1,
                "_major_subsystem_version__": 1,
                "__crt_xl_start__": 1,
                "_imp__WideCharToMultiByte": 1,
                "_imp__GetEnvironmentVariableA": 1,
                "__crt_xi_start__": 1,
                "_imp__towlower": 1,
                "_imp__EnumProcessModules": 1,
                "_imp___amsg_exit": 1,
                "__crt_xi_end__": 1,
                "_imp___wcsicmp": 1,
                "__xl_z": 1,
                "_imp__NtQuerySystemInformation": 1,
                "_SEH3$_RegisterTryLevel": 1,
                "_imp__QueryPerformanceCounter": 1,
                "_imp__FindNextFileW": 1,
                "mingw_initltsdrot_force": 1,
                "_imp___iob": 1,
                "_imp__WriteFile": 1,
                "_imp__strncmp": 1,
                "_head_dll_win32_msvcrt_libmsvcrt_a": 1,
                "_head_dll_win32_psapi_libpsapi_a": 1,
                "_imp__LocalAlloc": 1,
                "_imp__HeapReAlloc": 1,
                "_bss_start__": 1,
                "__RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "_dll_ntdll_libntdll_a_iname": 1,
                "_size_of_heap_commit__": 1,
                "__onexitend": 1,
                "_imp__GetCurrentProcess": 1,
                "_imp__OpenThread": 1,
                "_imp__GetProcessHeap": 1,
                "_imp__InterlockedExchangeAdd": 1,
                "_imp__GetProcAddress": 1,
                "__crt_xp_start__": 1,
                "_imp___snprintf": 1,
                "__tailMerge_dll_win32_version_libversion_delayed_a": 1,
                "_imp__IsProcessorFeaturePresent": 1,
                "_imp__GetFileVersionInfoW": 1,
                "source_rb_functions": 1,
                "_imp__lstrlenW": 1,
                "_imp__wcslen": 1,
                "_imp__wcschr": 1,
                "__mingw_gMTKeyDtor": 1,
                "__crt_xp_end__": 1,
                "_imp__vDbgPrintExWithPrefix": 1,
                "pcinit": 1,
                "_dll__": 1,
                "_imp__CreateFileW": 1,
                "_minor_os_version__": 1,
                "_imp__lseek": 1,
                "_lib_sdk_crt_oldnames_a_iname": 1,
                "_imp__GetThreadSelectorEntry": 1,
                "_image_base__": 1,
                "_section_alignment__": 1,
                "_imp__memmove": 1,
                "_imp__MapViewOfFile": 1,
                "_imp__SetFilePointer": 1,
                "__xc_a": 1,
                "_imp__FreeLibrary": 1,
                "__pfnDliNotifyHook2": 1,
                "_imp__toupper": 1,
                "S_WineLoaderW": 1,
                "_IAT_end__": 1,
                "cpu_ppc": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "_tls_start": 1,
                "inflate_copyright": 1,
                "_imp__wcscmp": 1,
                "_dll_win32_version_libversion_delayed_a_iname": 1,
                "_imp__wcscpy": 1,
                "__native_startup_state": 1,
                "_imp__qsort": 1,
                "_data_end__": 1,
                "__xl_a": 1,
                "__xl_d": 1,
                "_CTOR_LIST__": 1,
                "__onexitbegin": 1,
                "_imp__ResumeThread": 1,
                "_imp__GetModuleBaseNameW": 1,
                "_CRT_MT": 1,
                "_imp__sprintf": 1,
                "_bss_end__": 1,
                "__security_cookie_complement": 1,
                "__crt_xc_end__": 1,
                "_tls_index": 1,
                "_imp__HeapFree": 1,
                "lseek": 1,
                "_imp__GetTickCount": 1,
                "__crt_xc_start__": 1,
                "_imp__SetLastError": 1,
                "_imp__strchr": 1,
                "_imp__SuspendThread": 1,
                "_imp__SearchPathW": 1,
                "__CTOR_LIST__": 1,
                "_imp__GetCurrentProcessId": 1,
                "_imp__GetSystemInfo": 1,
                "_imp__RtlImageDirectoryEntryToData": 1,
                "mingw_app_type": 1,
                "_imp__CreateFileMappingW": 1,
                "_imp__GetVersionExW": 1,
                "_imp__TerminateProcess": 1,
                "_rt_psrelocs_size": 1,
                "_imp__DbgPrint": 1,
                "dbghelp_current_cpu": 1,
                "_head_dll_ntdll_libntdll_a": 1,
                "_imp____dllonexit": 1,
                "_imp__memcpy": 1,
                "_imp__strcmp": 1,
                "_file_alignment__": 1,
                "_imp__LoadLibraryW": 1,
                "_imp__time": 1,
                "_imp___unlock": 1,
                "_imp__lstrcpynA": 1,
                "_imp__LeaveCriticalSection": 1,
                "_imp__HeapValidate": 1,
                "_imp__malloc": 1,
                "_imp__atoi": 1,
                "_imp__memcmp": 1,
                "_major_os_version__": 1,
                "_imp__GetCurrentDirectoryW": 1,
                "_IAT_start__": 1,
                "__xc_z": 1,
                "_imp__GetModuleFileNameExW": 1,
                "_tls_end": 1,
                "_end__": 1,
                "_imp___assert": 1,
                "_imp__NtQueryInformationThread": 1,
                "_imp__GetModuleHandleA": 1,
                "dbghelp_options": 1,
                "_imp__GetFileSizeEx": 1,
                "_imp___lock": 1,
                "_DTOR_LIST__": 1,
                "_imp__memset": 1,
                "_imp___initterm": 1,
                "_size_of_heap_reserve__": 1,
                "__crt_xt_start__": 1,
                "__ImageBase": 1,
                "_subsystem__": 1,
                "_imp__RtlUnwind": 1,
                "_imp__SearchPathA": 1,
                "__mingw_gMTRemoveKeyDtor": 1,
                "_imp__strtol": 1,
                "_imp__strcpy": 1,
                "__mingw_usemthread_dll": 1,
                "_imp__calloc": 1,
                "cpu_i386": 1,
                "cpu_arm": 1,
                "_imp__MultiByteToWideChar": 1,
                "__native_vcclrit_reason": 1,
                "_imp__GetSystemTimeAsFileTime": 1,
                "__pfnDliFailureHook2": 1,
                "_dll_win32_kernel32_libkernel32_a_iname": 1,
                "_imp___winmajor": 1,
                "__native_dllmain_reason": 1,
                "_imp__towupper": 1,
                "__tls_end__": 1,
                "_DELAY_IMPORT_DESCRIPTOR_dll_win32_version_libversion_delayed_a": 1,
                "S_ElfW": 1,
                "__xi_z": 1,
                "mingw_initltssuo_force": 1,
                "_imp__free": 1,
                "_imp__SetUnhandledExceptionFilter": 1,
                "_imp__ReadProcessMemory": 1,
                "_imp__CreateDirectoryA": 1,
                "_major_image_version__": 1,
                "_loader_flags__": 1,
                "_imp__UnhandledExceptionFilter": 1,
                "_imp__FindFirstFileW": 1,
                "__chkstk_ms": 1,
                "_imp___stricmp": 1,
                "_rt_psrelocs_end": 1,
                "hMsvcrt": 1,
                "_imp__VerQueryValueW": 1,
                "_minor_subsystem_version__": 1,
                "_imp__FindClose": 1,
                "_minor_image_version__": 1,
                "_imp__Sleep": 1,
                "_imp__vfprintf": 1,
                "cpu_x86_64": 1,
                "_imp__UnmapViewOfFile": 1,
                "_imp__InterlockedCompareExchange": 1,
                "mingw_initltsdyn_force": 1,
                "_imp__HeapAlloc": 1,
                "_imp__GetCurrentThreadId": 1,
                "_head_dll_win32_kernel32_libkernel32_a": 1,
                "_imp__DeleteCriticalSection": 1,
                "__security_cookie": 1,
                "_imp__LoadLibraryA": 1,
                "_imp__GetEnvironmentVariableW": 1,
                "_imp__strcspn": 1,
                "_imp__lstrcpynW": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "S_SlashW": 1,
                "_imp__GetFileVersionInfoSizeW": 1,
                "__dyn_tls_init_callback": 1,
                "_imp__bsearch": 1,
                "_tls_used": 1,
                "__crt_xt_end__": 1,
                "_imp___vsnprintf": 1,
                "_imp__strcat": 1,
                "_imp__EnterCriticalSection": 1,
                "_imp__fwrite": 1,
                "_dll_win32_psapi_libpsapi_a_iname": 1,
                "cpu_arm64": 1,
                ".gnu_debuglink": 1,
                ".debug_aranges": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rdata": 1,
                "perm=m-r-- name=.gnu_debuglink": 1,
                "perm=m-rw- name=.bss": 1,
                "perm=m-r-- name=.edata": 1,
                "perm=m-rw- name=.idata": 1,
                "perm=m-rw- name=.CRT": 1,
                "perm=m-rw- name=.tls": 1,
                "perm=m-rw- name=.rsrc": 1,
                "perm=m-r-- name=.reloc": 1,
                "perm=m-r-- name=.rossym": 1,
                "type=program": 1,
                "type=tls": 2,
                "bind=NONE type=FUNC name=ntdll.dll_DbgPrint": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryInformationThread": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQuerySystemInformation": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlImageDirectoryEntryToData": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlImageNtHeader": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlImageRvaToVa": 3,
                "bind=NONE type=FUNC name=ntdll.dll_vDbgPrintExWithPrefix": 3,
                "bind=NONE type=FUNC name=kernel32.dll_CloseHandle": 3,
                "bind=NONE type=FUNC name=kernel32.dll_CreateDirectoryA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_CreateFileA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_CreateFileMappingW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_CreateFileW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_DeleteCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_EnterCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_FindClose": 3,
                "bind=NONE type=FUNC name=kernel32.dll_FindFirstFileW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_FindNextFileW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentDirectoryW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetEnvironmentVariableA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetEnvironmentVariableW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetFileSizeEx": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetProcessHeap": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetProcessId": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetSystemInfo": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetThreadContext": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetThreadSelectorEntry": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetVersionExW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_HeapAlloc": 3,
                "bind=NONE type=FUNC name=kernel32.dll_HeapFree": 3,
                "bind=NONE type=FUNC name=kernel32.dll_HeapReAlloc": 3,
                "bind=NONE type=FUNC name=kernel32.dll_HeapValidate": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InitializeCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InterlockedCompareExchange": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InterlockedExchange": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InterlockedExchangeAdd": 3,
                "bind=NONE type=FUNC name=kernel32.dll_IsProcessorFeaturePresent": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LeaveCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LoadLibraryA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LoadLibraryW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LocalAlloc": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LocalFree": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LocalReAlloc": 3,
                "bind=NONE type=FUNC name=kernel32.dll_MapViewOfFile": 3,
                "bind=NONE type=FUNC name=kernel32.dll_MultiByteToWideChar": 3,
                "bind=NONE type=FUNC name=kernel32.dll_OpenThread": 3,
                "bind=NONE type=FUNC name=kernel32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_RaiseException": 3,
                "bind=NONE type=FUNC name=kernel32.dll_ReadProcessMemory": 3,
                "bind=NONE type=FUNC name=kernel32.dll_ResumeThread": 3,
                "bind=NONE type=FUNC name=kernel32.dll_RtlUnwind": 3,
                "bind=NONE type=FUNC name=kernel32.dll_SearchPathA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_SearchPathW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_SetFilePointer": 3,
                "bind=NONE type=FUNC name=kernel32.dll_SetLastError": 3,
                "bind=NONE type=FUNC name=kernel32.dll_SetUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_Sleep": 3,
                "bind=NONE type=FUNC name=kernel32.dll_SuspendThread": 3,
                "bind=NONE type=FUNC name=kernel32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=kernel32.dll_TlsGetValue": 3,
                "bind=NONE type=FUNC name=kernel32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_UnmapViewOfFile": 3,
                "bind=NONE type=FUNC name=kernel32.dll_VirtualProtect": 3,
                "bind=NONE type=FUNC name=kernel32.dll_VirtualQuery": 3,
                "bind=NONE type=FUNC name=kernel32.dll_WideCharToMultiByte": 3,
                "bind=NONE type=FUNC name=kernel32.dll_WriteFile": 3,
                "bind=NONE type=FUNC name=kernel32.dll_lstrcpyW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_lstrcpynA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_lstrcpynW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_lstrlenW": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___dllonexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__amsg_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__assert": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__initterm": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__iob": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__lock": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__onexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__snprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__stricmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__strtoui64": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__unlock": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__vsnprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsnicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__winmajor": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_abort": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_atoi": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_bsearch": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_calloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_free": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fwrite": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_getenv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_malloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memcmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memcpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memmove": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memset": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_qsort": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_sprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strcat": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strchr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strcmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strcpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strcspn": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strncmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strtol": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_time": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_toupper": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_towlower": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_towupper": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_vfprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcschr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcslen": 3,
                "bind=NONE type=FUNC name=psapi.dll_EnumProcessModules": 3,
                "bind=NONE type=FUNC name=psapi.dll_GetModuleBaseNameW": 3,
                "bind=NONE type=FUNC name=psapi.dll_GetModuleFileNameExW": 3,
                "bind=NONE type=FUNC name=psapi.dll_GetModuleInformation": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__read": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__lseek": 3,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_DbgHelpCreateUserDump": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_DbgHelpCreateUserDumpW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_EnumDirTree": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_EnumDirTreeW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_EnumerateLoadedModules": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_EnumerateLoadedModules64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_EnumerateLoadedModulesEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_EnumerateLoadedModulesExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_EnumerateLoadedModulesW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_ExtensionApiVersion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_FindDebugInfoFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_FindDebugInfoFileEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_FindDebugInfoFileExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_FindExecutableImage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_FindExecutableImageEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_FindExecutableImageExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_FindFileInPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_FindFileInSearchPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_GetTimestampForLoadedLibrary": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_ImageDirectoryEntryToData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_ImageDirectoryEntryToDataEx": 1,
                "fwd=ntdll.RtlImageNtHeader  bind=GLOBAL type=FUNC name=dbghelp.dll_ImageNtHeader": 1,
                "fwd=ntdll.RtlImageRvaToSection  bind=GLOBAL type=FUNC name=dbghelp.dll_ImageRvaToSection": 1,
                "fwd=ntdll.RtlImageRvaToVa  bind=GLOBAL type=FUNC name=dbghelp.dll_ImageRvaToVa": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_ImagehlpApiVersion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_ImagehlpApiVersionEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_MakeSureDirectoryPathExists": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_MapDebugInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_MiniDumpReadDumpStream": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_MiniDumpWriteDump": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SearchTreeForFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SearchTreeForFileW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_StackWalk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_StackWalk64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymAddSourceStream": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymAddSourceStreamA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymAddSourceStreamW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymAddSymbol": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymAddSymbolW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymCleanup": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymDeleteSymbol": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymDeleteSymbolW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumLines": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumLinesW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumProcesses": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSourceFileTokens": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSourceFiles": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSourceFilesW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSourceLines": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSourceLinesW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSym": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSymbols": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSymbolsForAddr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSymbolsForAddrW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumSymbolsW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumTypes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumTypesByName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumTypesByNameW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumTypesW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumerateModules": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumerateModules64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumerateModulesW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumerateSymbols": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumerateSymbols64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumerateSymbolsW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymEnumerateSymbolsW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFindDebugInfoFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFindDebugInfoFileW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFindExecutableImage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFindExecutableImageW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFindFileInPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFindFileInPathW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFromAddr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFromAddrW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFromIndex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFromIndexW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFromName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFromNameW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFromToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFromTokenW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFunctionTableAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymFunctionTableAccess64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetFileLineOffsets64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetHomeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetHomeDirectoryW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineFromAddr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineFromAddr64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineFromAddrW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineFromName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineFromName64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineFromNameW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineNext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineNext64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLineNextW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLinePrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLinePrev64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetLinePrevW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetModuleBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetModuleBase64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetModuleInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetModuleInfo64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetModuleInfoW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetModuleInfoW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetOmapBlockBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetOptions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetScope": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetScopeW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSearchPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSearchPathW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSourceFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSourceFileFromToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSourceFileFromTokenW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSourceFileToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSourceFileTokenW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSourceFileW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSourceVarFromToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSourceVarFromTokenW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymFromAddr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymFromAddr64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymFromName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymFromName64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymNext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymNext64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymPrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymPrev64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymbolFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetSymbolFileW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetTypeFromName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetTypeFromNameW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetTypeInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetTypeInfoEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymGetUnwindInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymInitialize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymInitializeW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymLoadModule": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymLoadModule64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymLoadModuleEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymLoadModuleExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymMatchFileName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymMatchFileNameW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymMatchString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymMatchStringA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymMatchStringW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymNext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymNextW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymPrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymPrevW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymRefreshModuleList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymRegisterCallback64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymRegisterCallbackW64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymRegisterFunctionEntryCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymRegisterFunctionEntryCallback64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSearch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSearchW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetHomeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetHomeDirectoryW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetOptions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetParentWindow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetScopeFromAddr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetScopeFromIndex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetSearchPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetSearchPathW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSetSymWithAddr64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvDeltaName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvDeltaNameW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvGetFileIndexInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvGetFileIndexInfoW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvGetFileIndexString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvGetFileIndexStringW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvGetFileIndexes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvGetFileIndexesW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvGetSupplement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvGetSupplementW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvIsStore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvIsStoreW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvStoreFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvStoreFileW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvStoreSupplement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymSrvStoreSupplementW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymUnDName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymUnDName64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymUnloadModule": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_SymUnloadModule64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_UnDecorateSymbolName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_UnDecorateSymbolNameW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_UnmapDebugInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=dbghelp.dll_WinDbgExtensionDllInit": 1,
                "section=.rdata type=utf8 string=(kdz": 2,
                "section=.rdata type=utf8 string=!#\u0133V blocks=Basic Latin,Latin Extended-A": 2,
                "section=.rdata type=utf8 string=|\u04cceL blocks=Basic Latin,Cyrillic": 2,
                "section=.rdata type=utf8 string=\u04b1t9G blocks=Cyrillic,Basic Latin": 2,
                "section=.rdata type=utf8 string=+\u04c9Zz blocks=Basic Latin,Cyrillic": 2,
                "section=.rdata type=utf8 string=c\uc723ju\\n blocks=Basic Latin,Hangul Syllables": 2,
                "section=.rdata type=utf8 string=wn>Jj\u046e blocks=Basic Latin,Cyrillic": 2,
                "section=.rdata type=utf16le string=_NT_SYMBOL_PATH": 1,
                "section=.rdata type=utf16le string=_NT_ALTERNATE_SYMBOL_PATH": 1,
                "section=.rdata type=utf16le string=ine-loader>": 1,
                "section=.rdata type=utf16le string=<elf>": 1,
                "section=.rdata type=utf16le string=.acm": 1,
                "section=.rdata type=utf16le string=wine": 1,
                "section=.rdata type=utf16le string=.dylib": 1,
                "section=.rdata type=utf16le string=.pdb": 1,
                "section=.rdata type=utf16le string=.dbg": 1,
                "section=.rdata type=utf16le string=.dll": 1,
                "section=.rdata type=utf16le string=.drv": 1,
                "section=.rdata type=utf16le string=.exe": 1,
                "section=.rdata type=utf16le string=.ocx": 1,
                "section=.rdata type=utf16le string=.vxd": 1,
                "section=.rdata type=utf16le string=+-*/%\u6962\u6f6e\u3a70\u7520\u6b6e\u6f6e\u6e77\u6f20\u2070\u2528\u2963\u2500\u646c\u5e00 blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A,Superscripts and Subscripts,Box Drawing,Supplemental Arrows-B": 1,
                "section=.rdata type=utf16le string=msvcrt.dll": 1,
                "section=.rdata type=utf8 string=ZV\u01d6AO\\b blocks=Basic Latin,Latin Extended-B": 1,
                "section=.rdata type=utf8 F\u07f2\\a] blocks=Basic Latin,NKo": 1,
                "section=.rdata type=utf8 string=y\u07a9%8 blocks=Basic Latin,Thaana": 1,
                "section=.rdata type=utf8 string=\\r\u01608L blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=!\u03273` blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rdata type=utf8 string=pl@Aw": 1,
                "section=.rdata type=utf8 string=yk\u02acHp blocks=Basic Latin,IPA Extensions": 1,
                "section=.rdata type=utf8 string=ux\u0709~O blocks=Basic Latin,Syriac": 1,
                "section=.rdata type=utf8 string=uW\\t\u05b7V blocks=Basic Latin,Hebrew": 1,
                "section=.rdata type=utf8 string=\u014aO\\b}d blocks=Latin Extended-A,Basic Latin": 1,
                "section=.rdata type=utf8 string=mN\u041f5+ blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string={kHw\u00e2 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf8 string=\u02b0\\3; blocks=Spacing Modifier Letters,Basic Latin": 1,
                "section=.rdata type=utf8 string=\\bF\\rm": 1,
                "section=.rdata type=utf8 string=\u04a5fAj blocks=Cyrillic,Basic Latin": 1,
                "section=.rdata type=utf8 string=A\u06b1&S blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=lDa>": 1,
                "section=.rdata type=utf8 string=\u03e97~8A blocks=Greek and Coptic,Basic Latin": 1,
                "section=.rdata type=utf8 string=\u6e31{I\\r blocks=CJK Unified Ideographs,Basic Latin": 1,
                "section=.rdata type=utf8 string=\u06c82y\u0738 blocks=Arabic,Basic Latin,Syriac": 1,
                "section=.rdata type=utf8 x\\a\u0262 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rdata type=utf8 string=J\u07e5A=\u0615\u05e4 blocks=Basic Latin,NKo,Arabic,Hebrew": 1,
                "section=.rdata type=utf8 string=\\;:l": 1,
                "section=.rdata type=utf8 string=\\r+\u06af\\n\\eL6 blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=%o\u04a0Rh blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=&/\u017a; blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=\u00a7g&a blocks=Latin-1 Supplement,Basic Latin": 1,
                "section=.rdata type=utf8 string=IiGM>nw\u06ee blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=\u0172e]] blocks=Latin Extended-A,Basic Latin": 1,
                "section=.rdata type=utf8 string=Ge\u00adlH blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf8 string=d\\b\u0613S\\n blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=ru\u055bE~ blocks=Basic Latin,Armenian": 1,
                "section=.rdata type=utf8 string=x]`\u063a7W blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=D\\at\u0346mC blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rdata type=utf8 string=)\u0121:C blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=\u00ffZ^\u06be blocks=Latin-1 Supplement,Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 %k_\u071d blocks=Basic Latin,Syriac": 1,
                "section=.rdata type=utf8 string=\\bzG\u02602 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rdata type=utf8 string=\u03cfOZw3(? blocks=Greek and Coptic,Basic Latin": 1,
                "section=.rdata type=utf8 string=b;!l\u0687F\\t blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=>aD\u018b\u03aa~7 blocks=Basic Latin,Latin Extended-B,Greek and Coptic": 1,
                "section=.rdata type=utf8 string=\u6563\\rI{\\e blocks=CJK Unified Ideographs,Basic Latin": 1,
                "section=.rdata type=utf16le string=\\a\\b\\t\\n\\v\\r": 1,
                "section=.rdata type=utf16le string=#+3;CScs": 1,
                "section=.rdata type=utf16le string=!1Aa": 1,
                "section=.rdata type=utf16le string=@@\u6e69\u6176\u696c blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rdata type=utf16le string=svcrt.dll": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le b0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=ReactOS Development Team/Wine Team": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=Wine Image Helper": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.3264": 2,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=dbghelp.dll": 2,
                "section=.rsrc type=utf16le string=OriginalCopyright": 1,
                "section=.rsrc type=utf16le string=Copyright (c) 1993-2014 the Wine project authors (see the file AUTHORS for a complete list)": 1,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string=Copyright 1998-2014 ReactOS Team, 1993-2014 the Wine project authors": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=ReactOS Operating System": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "arch     x86": 1,
                "binsz    524288": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x00086de7": 1,
                "compiled Tue Jul 15 17:23:00 2014": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x0008bd71": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  true": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows CUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0xc": 1,
                "TimeDateStamp : 0x53c55564": 1,
                "PointerToSymbolTable : 0x7fe00": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x2102": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x2": 1,
                "MinorLinkerVersion : 0x17": 1,
                "SizeOfCode : 0x32000": 1,
                "SizeOfInitializedData : 0x43200": 1,
                "SizeOfUninitializedData : 0x8600": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x33000": 1,
                "ImageBase : 0x75d30000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x4": 1,
                "MinorOperatingSystemVersion : 0x0": 1,
                "MajorImageVersion : 0x1": 1,
                "MinorImageVersion : 0x0": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x90000": 1,
                "SizeOfHeaders : 0x600": 1,
                "CheckSum : 0x8bd71": 1,
                "Subsystem : 0x3": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x200000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x49000": 1,
                "Size : 0x159f": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x4b000": 1,
                "Size : 0xf5c": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x4e000": 1,
                "Size : 0x4c4": 1,
                "IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "VirtualAddress : 0x4f000": 1,
                "Size : 0x32dc": 1,
                "IMAGE_DIRECTORY_ENTRY_TLS": 1,
                "VirtualAddress : 0x4d004": 1,
                "Size : 0x18": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x4b2a4": 1,
                "Size : 0x22c": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "ntdll.dll": 1,
                "kernel32.dll": 1,
                "msvcrt.dll": 1,
                "psapi.dll": 1,
                "524288": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.3264": 2,
                "ProductVersion: 0.4.0.0": 1,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x2": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: ReactOS Development Team/Wine Team": 1,
                "FileDescription: Wine Image Helper": 1,
                "InternalName: dbghelp.dll": 1,
                "OriginalCopyright: Copyright (c) 1993-2014 the Wine project authors (see the file AUTHORS for a complete list)": 1,
                "LegalCopyright: Copyright 1998-2014 ReactOS Team, 1993-2014 the Wine project authors": 1,
                "OriginalFilename: dbghelp.dll": 1,
                "ProductName: ReactOS Operating System": 1,
                "ProductVersion: 5.1.2600.3264": 1
            }
        }
    ]
}