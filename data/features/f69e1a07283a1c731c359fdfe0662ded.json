{
    "filepath": "/corpus/benign/wmic.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "f69e1a07283a1c731c359fdfe0662ded"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "ja -;ja -;inl %dx, %eax;fnsave -(%edi);outsl (%esi), %dx": 1,
                "incl -(%eax);jl  <.text+>;lcalll $, $;outsb (%esi), %dx;lodsb (%esi), %al": 1,
                "jl  <.text+>;sbbb $-, %al;jl - <.text+>;pushfl;cmpb $-, (%edi,%esi,)": 1,
                "movb $-, %dl;jl - <.text+>;movsb (%esi), %es:(%edi);cmpb $-, -(%esi,%ebp);jl  <.text+>": 1,
                "addb %ch, ;orb %dh, -(%esi);jle  <.text+>;jbe  <.text+>;jg  <.text+>": 1,
                "andb %cl, (%eax);jbe  <.text+>;repne  orl %esi, (%esi);addb %al, (%eax);addb %bl, (%ebx)": 1,
                "adcb -(%edi), %dh;decl %eax;adcb (%edi), %dh;decl %esp;adcb -(%edi), %dh": 1,
                "jl  <.text+>;divb (%edi);addb %al, (%eax);addb %dh, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%eax);addb %al, (%eax);addb %bl, -(%esi);orl $, %eax": 1,
                "addb %dl, (%ebp);stosl %eax, %es:(%edi);jno - <.text+>;aas;stosl %eax, %es:(%edi)": 1,
                "salc;jbe  <.text+>;addb %al, (%eax);addb %ch, (%ebp);rorl $, (%ebp)": 1,
                "addb %ch, (%ebp);rorl $, (%ebp);retl;decl %ebp;ldsl -(%ecx,%eax,), %ebx": 1,
                "retl $;decl %esi;retl $-;popl %esp;retl $": 1,
                "ldsl -(%ebp), %ecx;salc;retl;decl %ebp;popfl": 1,
                "retl $-;outb %al, %dx;rorb $, (%ebp);ldsl (%ebp), %ecx;sahf": 1,
                "outb %al, %dx;rorb $, (%ebp);ldsl (%ebp), %ecx;sahf;retl $-": 1,
                "das;addb $, %bl;sti;adcl %eax, %ebx;decl %ebp": 1,
                "movl , %eax;addb %ah, %al;decl %ebp;pushl %ds;xchgl %ebx, %eax": 1,
                "addb %cl, (%ecx);pushl %edi;addb %ah, (%edx);addb %ch, %gs:(%ebp);incl %ebx": 28,
                "addb %ch, (%eax,%eax);xorb %al, (%eax);subb $, %al;andb %al, (%eax);subl $, %eax": 1,
                "addb %ch, ;addb %ch, ;addb %dl, (%eax,%eax);addb %ch, (%eax,%eax);addb %ah, (%edx,%edi)": 1,
                "addb %ch, ;addb %dl, (%eax,%eax);addb %ch, (%eax,%eax);addb %ah, (%edx,%edi);js  <.text+>": 1,
                "je  <.text+>;decl %edi;addb %ah, (%edx);pushl $;addb %ah, %gs:(%ebx)": 4,
                "andb %al, (%eax);decl %esi;addb %dl, (%ebp);decl %esp;addb %cl, (%eax,%eax)": 23,
                "addb %ch, ;addb %cl, (%ebp);incl %esi;pushl %esp;popl %edi": 1,
                "incl %esi;pushl %esp;popl %edi;incl %ebx;insb %dx, %es:(%edi)": 2,
                "addb %al, (%ebp);outsb (%esi), %dx;addb %dh, (%ebp);insl %dx, %es:(%edi);addb %dl, (%edi)": 2,
                "subl $, %eax;addb %ah, (%ebp);js  <.text+>;je  <.text+>;subb %al, (%eax)": 3,
                "subl $, %eax;addb %ch, ;addb %al, (%eax);addb %al, (%ebx);outsl (%esi), %dx": 1,
                "addb %dl, (%eax,%eax);addb %cl, (%esi);popl %edi;addb %dl, (%edi);decl %ecx": 4,
                "addb %ah, (%eax);addb %ah, (%eax);addb %ah, ;addb %ah, (%eax);addb %ch, ": 4,
                "addb %ah, (%edx);addb %dl, (%edi);pushl %ecx;addb %cl, (%eax,%eax);addb %ch, (%eax,%eax)": 4,
                "incl %ecx;addb %dl, (%edx);incl %esp;addb %bl, (%edi);decl %edi": 2,
                "addb %bl, (%edi);decl %edi;addb %cl, (%esi);decl %esp;addb %bl, (%ecx)": 3,
                "addb %al, (%ecx);pushl %esp;addb %al, (%ebp);decl %esp;addb %bl, (%ecx)": 2,
                "andb %al, (%eax);je  <.text+>;outsl (%esi), %dx;addb %ah, (%eax);addb %ch, (%ebp)": 1,
                "je  <.text+>;outsl (%esi), %dx;addb %ah, (%eax);addb %ch, (%ebp);jae  <.text+>": 1,
                "addb %dh, (%eax);addb %dh, %gs:(%edx);je  <.text+>;jns  <.text+>;decl %esi": 1,
                "cmpl $, %eax;addb %ah, (%edx);addb %al, (%eax,%eax);addb %dh, (%ebx);arpl %ax, (%eax)": 1,
                "addb %ah, (%edx);addb %dl, (%esi);addb %dh, %gs:(%edx);bound (%eax), %eax;jae  <.text+>": 1,
                "pushl %esi;addb %ah, (%ebp);jb  <.text+>;bound (%eax), %eax;jae  <.text+>": 1,
                "jb  <.text+>;outsb %gs:(%esi), %dx;insb %dx, %es:(%edi);jns  <.text+>;popal": 1,
                "addb %al, (%ebp);subl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "subl %eax, (%eax);addb %al, (%eax);incl %ecx;addb %dh, (%ebp);je  <.text+>": 1,
                "je  <.text+>;subb %al, (%eax);decl %esp;addb %ah, (%edx);addb %dl, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %eax;addb %ah, (%ecx);jae  <.text+>": 1,
                "addb %ah, (%edx);addb %ch, (%eax,%eax);andb %al, (%eax);xorb %al, (%eax);subb $, %al": 3,
                "addb %ah, (%ebp);jae  <.text+>;jo  <.text+>;popal;addb %ah, (%ebx)": 2,
                "addb %al, (%ecx);pushl %esp;addb %cl, (%eax);andb (%eax), %al;subb $, %al": 1,
                "pushl %ecx;addb %dh, (%ebp);addb %dh, %gs:(%edx);jns  <.text+>;decl %ecx": 1,
                "jns  <.text+>;decl %ecx;addb %ch, (%esi);je  <.text+>;addb %dh, %gs:(%edx)": 1,
                "addb %ah, (%ecx);arpl %ax, (%eax);addb %ch, %gs:(%eax);addb %cl, (%ecx);decl %ecx": 1,
                "xorb %al, (%eax);subl %eax, (%eax);addb %al, (%eax);incl %ebx;addb %ch, (%edi)": 1,
                "outsb (%esi), %dx;addb %ch, (%esi);addb %ah, %gs:(%ebx);je  <.text+>;imull $, (%eax), %eax": 1,
                "addb %cl, (%eax,%eax);addb %ah, (%eax);addb %ch, ;addb %dl, (%ebx);incl %ebp": 1,
                "pushl %eax;addb %al, (%ebp);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "subl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %ecx;addb %dh, (%ebp)": 2,
                "addb %ch, (%edi);addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dh, (%ebx);addb %al, (%eax);addb %al, (%eax);decl %esi;outsl (%esi), %dx": 1,
                "addb %al, (%eax,%eax);addb %ah, (%esi);popal;addb %dh, (%ebp);insb %dx, %es:(%edi)": 1,
                "addb %dh, (%ebp);insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %ch, (%eax,%eax);andb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ecx)": 1,
                "popal;addb %dh, (%edx);popal;addb %cl, (%ecx);addb %ah, %fs:(%edx)": 1,
                "pushl %eax;addb %ah, (%ecx);jb  <.text+>;popal;addb %cl, (%ecx)": 1,
                "incl %ebx;addb %al, (%ecx);decl %esp;addb %cl, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %al, (%ecx);decl %esp;addb %cl, (%eax,%eax);addb %al, (%eax);addb %al, (%ebx)": 1,
                "addb %cl, (%eax,%eax);addb %al, (%eax);addb %al, (%ebx);pushl %edx;addb %al, (%ebp)": 1,
                "addb %al, (%ebx);pushl %edx;addb %al, (%ebp);incl %ecx;addb %dl, (%eax,%eax)": 2,
                "addb %al, (%eax);addb %al, (%eax);pushl %edi;addb %cl, (%eax);incl %ebp": 1,
                "incl %ebp;addb %al, (%eax);addb %ch, (%ecx);xorl (%ecx), %eax;addl %eax, (%esi)": 1,
                "addb %cl, (%edi);incl %esp;addb %al, (%ebp);das;addb %bh, (%esi)": 1,
                "addb %bh, (%eax,%eax);incl %esp;addb %al, (%ebp);pushl %ebx;addb %al, (%ebx)": 3,
                "addb %dh, (%eax);addb %bh, (%eax);andl $, %eax;addb %ch, (%edi);addb %cl, (%eax)": 1,
                "addb %al, (%ebp);pushl %ebx;addb %dl, (%ebp);decl %esp;addb %dl, (%eax,%eax)": 3,
                "pushl %ebx;addb %dl, (%ebp);decl %esp;addb %dl, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %dl, (%edx);addb %al, %ds:(%eax);addb %al, (%eax);addb %bh, (%eax,%eax);incl %ebp": 1,
                "outsl (%esi), %dx;addb %ah, (%esi);je  <.text+>;popl %esp;addb %dl, (%edi)": 1,
                "bound (%eax), %eax;addb %ch, %gs:(%ebp);popl %esp;addb %al, (%ebx);decl %ecx": 1,
                "addb %ah, %gs:(%ebp);addb %ah, %fs:(%ebp);addb %ah, %fs:(%eax);addb %ah, ;addb %ah, ": 1,
                "addb %al, (%ecx);decl %ecx;addb %cl, (%eax,%eax);addb %al, (%eax,%eax);addb %ah, (%eax)": 2,
                "imull $, (%eax), %esp;jb  <.text+>;pushl %esp;andb %dh, %ds:(%ebx);bound (%ebx), %esi": 1,
                "pushl %ebx;addb %ch, (%eax,%eax);pushl %edx;addb %dl, (%eax);incl %ebx": 1,
                "addb %dl, (%ebx);cmpb (%eax), %al;addb %al, (%eax);cmpb %fs:(%eax,%edi,), %bl;jae  <.text+>": 1,
                "addb %ah, ;addb %ch, (%eax,%eax);andb %al, (%eax);subb (%eax), %al;subb $, %al": 1,
                "jb  <.text+>;addb %ah, %gs:(%ecx);je  <.text+>;addb %cl, %gs:(%ecx);outsb (%esi), %dx": 6,
                "je  <.text+>;addb %cl, %gs:(%ecx);outsb (%esi), %dx;addb %dh, (%ebx);je  <.text+>": 7,
                "outsb (%esi), %dx;addb %dh, (%ebx);je  <.text+>;popal;addb %ch, (%esi)": 8,
                "decl %esi;addb %dl, (%ebp);decl %esp;addb %cl, (%eax,%eax);addb %al, (%ebx)": 2,
                "popal;addb %ch, (%esi);arpl %ax, (%eax);addb %al, %gs:(%ebp);js  <.text+>": 1,
                "addb %ch, %gs:(%ebp);incl %ebx;addb %ch, (%edi);outsb (%esi), %dx;addb %dh, (%eax,%eax)": 2,
                "addb %ch, (%eax,%eax);addb %ah, (%ebp);jae  <.text+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);decl %ebp;addb %ah, (%ecx);js  <.text+>": 1,
                "addb %ah, (%edx);addb %ah, ;addb %ch, (%eax,%eax);andb %al, (%eax);subl $, %eax": 2,
                "addb %bl, (%ecx);pushl %ebx;addb %dl, (%eax,%eax);addb %cl, (%ebp);andb (%eax), %al": 2,
                "addb %dl, (%eax,%eax);addb %cl, (%ebp);andb (%eax), %al;andb %al, (%eax);pushl %esp": 2,
                "addb %al, (%ebp);cmpl $, %eax;addb %dh, (%eax,%eax);addb %ch, (%ecx);outsb (%esi), %dx": 2,
                "addb %al, (%ecx);decl %esp;addb %dl, (%ebp);incl %ebp;addb %bh, (%esi)": 3,
                "addb %dh, (%ebx);andb (%eax), %al;andb %al, (%eax);pushl %ebx;addb %dl, (%ebp)": 1,
                "andb %al, (%eax);subl $, %eax;addb %dl, (%edi);decl %ebp;addb %cl, (%ecx)": 1,
                "addb %cl, (%edx);incl %ebp;addb %al, (%ebx);pushl %esp;addb %bl, (%edi)": 1,
                "addb %al, (%ebx);decl %ecx;addb %cl, (%ebp);popl %edi;addb %al, (%eax,%eax)": 1,
                "js  <.text+>;arpl %ax, (%eax);insb %dx, %es:(%edi);addb %dh, (%ebp);addb %ah, %fs:(%ebp)": 2,
                "arpl %ax, (%eax);insb %dx, %es:(%edi);addb %dh, (%ebp);addb %ah, %fs:(%ebp);pushl %ebx": 2,
                "addb %dh, (%ebp);addb %ah, %fs:(%ebp);pushl %ebx;addb %bh, (%ecx);jae  <.text+>": 2,
                "incl %ebx;addb %ch, (%esi);addb %cl, (%edi);incl %edx;addb %cl, (%edx)": 1,
                "decl %eax;incl %ebp;pushl %edx;incl %ebp;andb %al, (%eax)": 1,
                "andb %al, (%eax);popl %edi;addb %bl, (%edi);incl %ebx;addb %ch, (%eax,%eax)": 1,
                "jae  <.text+>;andb %al, (%eax);cmpl $, %eax;addb %ah, (%edx);addb %al, (%eax)": 1,
                "cmpl $, %eax;addb %ah, (%edx);addb %al, (%eax);addb %al, (%eax);addb %dl, (%ebx)": 1,
                "addb %bh, %ds:(%eax,%eax);das;addb %al, (%ebp);pushl %edx;addb %dl, (%edx)": 1,
                "addb %al, %ds:(%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ecx)": 1,
                "addb %al, (%eax);addb %bh, (%eax,%eax);das;addb %al, (%ebx);decl %esp": 1,
                "addb %ah, (%eax);addb %ch, ;addb %ch, ;addb %cl, (%esi);pushl %ebp": 1,
                "addb %ch, %gs:(%eax);addb %cl, (%eax,%eax);addb %ah, ;addb %ch, (%eax,%eax);andb %al, (%eax)": 2,
                "addb %ah, (%ebp);insb %dx, %es:(%edi);addb %ah, (%ebp);je  <.text+>;addb %al, %gs:(%ebx)": 1,
                "incl %edi;addb %bl, (%edi);pushl %ebp;addb %dl, (%ebx);incl %ebp": 2,
                "jae  <.text+>;subb %al, (%eax);subl $, %eax;addb %dh, (%eax);addb %ch, (%eax,%eax)": 1,
                "decl %esp;addb %cl, (%eax,%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%esi)": 1,
                "addb %bl, (%edi);incl %esi;addb %cl, (%eax,%eax);addb %al, (%edi);popl %edi": 3,
                "addb %dl, (%eax,%eax);addb %bl, (%edi);decl %edi;addb %cl, (%esi);decl %esp": 1,
                "decl %edi;addb %cl, (%esi);decl %esp;addb %bl, (%ecx);subb $, %al": 1,
                "addb %ch, (%eax,%eax);andb %al, (%eax);subl $, %eax;addb %al, (%eax);addb %al, (%eax)": 4,
                "subl %eax, (%eax);addb %al, (%eax);andl (%eax), %eax;addb %al, (%eax);pushl %ebx": 1,
                "imull $, (%eax), %eax;insb %dx, %es:(%edi);addb %ah, (%ebp);addb %ah, (%di);jae  <.text+>": 1,
                "imull $, (%eax), %eax;addb %ch, %gs:(%esi);je  <.text+>;andb %al, (%eax);pushl $": 1,
                "addb %dh, %gs:(%edx);popal;addb %dh, (%eax,%eax);addb %ch, (%edi);outsb (%esi), %dx": 1,
                "addb %dl, (%eax,%eax);addb %cl, (%edi);pushl %edx;addb %cl, (%ecx);pushl %esp": 5,
                "imull $, (%eax), %eax;pushl $;addb %ch, (%edi);jb  <.text+>;andb %al, (%eax)": 1,
                "addb %ch, (%edi);jb  <.text+>;andb %al, (%eax);jae  <.text+>;jo  <.text+>": 1,
                "addb %al, (%eax);addb %ch, (%edi);addb %al, (%ecx);pushl %ebp;addb %dl, (%eax,%eax)": 1,
                "andb %al, (%eax);andb %al, (%eax);andb %al, (%eax);pushl %ebx;addb %dh, (%eax)": 1,
                "addb %dl, (%edx);decl %ecx;addb %dl, (%eax,%eax);addb %ah, (%eax);addb %ah, (%eax)": 2,
                "addb %ah, (%eax);addb %ah, (%eax);addb %ah, (%eax);addb %bh, (%edx);addb %ah, (%eax)": 2,
                "addb %cl, ;addb %al, (%eax);addb %cl, (%ecx);outsb (%esi), %dx;addb %dh, (%esi)": 1,
                "addb %ah, (%eax,%eax);addb %bh, (%eax,%eax);popal;addb %dh, (%ebp);je  <.text+>": 1,
                "addb %bh, %gs:(%esi);addb %ch, (%esi);addb %cl, ;addb %cl, (%ecx);outsb (%esi), %dx": 1,
                "addb %ah, (%eax,%eax);addb %al, (%ecx);jne  <.text+>;je  <.text+>;pushl $": 1,
                "addb %bh, (%eax);addb %cl, %cs:;addb %cl, ;addb %al, (%eax);addb %dh, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);decl %ecx;addb %bl, (%eax)": 2,
                "decl %ebp;addb %cl, (%esi);outsl (%esi), %dx;addb %ah, (%eax,%eax);addb %bh, (%edx)": 3,
                "addb %ah, %fs:(%ebp);cmpb (%eax), %al;cmpb (%eax), %al;jo  <.text+>;jne  <.text+>": 1,
                "cmpb (%eax), %al;cmpb (%eax), %al;addb %ah, (%di);je  <.text+>;popl %edi": 9,
                "addb %ah, (%di);je  <.text+>;popl %edi;addb %dh, (%eax,%eax);addb %bh, (%eax)": 1,
                "addb %ch, (%ecx);jae  <.text+>;je  <.text+>;cmpb (%eax), %al;cmpb (%eax), %al": 3,
                "je  <.text+>;jae  <.text+>;incl %edx;addb %bh, (%ecx);pushl %esp": 4,
                "addb %ah, (%ecx);addb %cl, (%bp);popal;addb %ch, (%ebp);addb %ch, %gs:(%eax)": 4,
                "addb %cl, (%eax,%eax);addb %dl, (%esi);incl %ecx;addb %cl, (%eax,%eax);addb %al, (%ebp)": 1,
                "subl $, %eax;addb %dl, (%esi);incl %ecx;addb %cl, (%eax,%eax);addb %al, (%ebp)": 1,
                "addb %al, (%eax);addb %cl, (%ecx);popl %eax;addb %dl, (%ebx);pushl %eax": 2,
                "addb %ch, (%ebp);addb %dh, %gs:(%eax,%eax);addb %dh, (%edx);subb %al, (%eax);decl %esp": 1,
                "addb %dh, (%ebx);orl $, %eax;addb %al, (%eax);addb %ch, (%eax);addb %al, (%eax)": 1,
                "orl $, %eax;addb %al, (%eax);addb %ch, (%eax);addb %al, (%eax);decl %ecx": 1,
                "addb %ch, (%eax);addb %al, (%eax);decl %ecx;addb %bl, (%eax);decl %ebp": 1,
                "addb %cl, (%eax,%eax);addb %al, (%ebx);pushl %esp;addb %bl, (%eax);popl %edi": 3,
                "pushl %ebx;addb %al, (%ebp);pushl %edx;addb %dl, (%esi);incl %ebp": 4,
                "addb %cl, (%ecx);incl %esp;addb %bl, (%edi);decl %ecx;addb %bl, (%eax)": 4,
                "addb %bh, (%edx);addb %ah, (%ebx);jb  <.text+>;addb %ah, %gs:(%ecx);je  <.text+>": 5,
                "addb %cl, (%ecx);popl %eax;addb %dl, (%ebx);decl %esp;addb %al, (%eax,%eax)": 2,
                "subl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ecx)": 3,
                "addb %dh, (%ebx);orl %eax, (%eax);andl $, %eax;addb %dh, (%eax);addb %dh, (%ebx)": 1,
                "decl %esi;decl %ebx;decl %esi;decl %edi;pushl %edi": 1,
                "orl %eax, (%eax);orl %eax, (%eax);addb %al, (%eax);andl $, %eax;addb %dh, (%eax,%eax)": 1,
                "addb %ah, (%ebx);outsl (%esi), %dx;addb %ch, (%ebp);insl %dx, %es:(%edi);addb %ah, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);insl %dx, %es:(%edi);addb %dh, (%ebx);popl %edi": 1,
                "addb %al, (%edx);decl %esp;addb %al, (%ebp);addb %al, (%eax);incl %ebp": 1,
                "decl %esp;addb %al, (%ebp);addb %al, (%eax);addb %al, (%eax);incl %ecx": 2,
                "incl %esp;addb %al, (%ebp);decl %esi;addb %dl, (%eax,%eax);addb %al, (%esi)": 1,
                "decl %ebx;addb %dl, (%eax,%eax);addb %dl, (%edx);decl %ecx;addb %dl, (%esi)": 1,
                "addb %dl, (%edx);decl %ecx;addb %dl, (%esi);incl %ecx;addb %al, (%ebx)": 1,
                "popl %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%ebx);decl %esp": 1,
                "addb %al, (%eax);ja  <.text+>;bound (%eax), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%edx);incl %ecx;addb %al, (%ebx);pushl %esp;addb %cl, (%ecx)": 2,
                "addb %dl, (%ebx);pushl %ebp;addb %cl, (%eax,%eax);addb %dl, (%edx);decl %edi": 1,
                "pushl %ebp;addb %cl, (%eax,%eax);addb %al, (%ebx);decl %esp;addb %al, (%ecx)": 1,
                "addb %cl, (%eax,%eax);addb %al, (%ebx);decl %esp;addb %al, (%ecx);pushl %ebx": 1,
                "je  <.text+>;andb %al, (%eax);incl %esi;addb %ch, (%edi);jne  <.text+>": 1,
                "addb %ah, (%ebp);outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %ah, (%eax,%eax);addb %cl, (%ecx)": 1,
                "addb %bh, (%eax,%eax);addb %ch, %ds:(%ebx);addb %bh, ;addb %ah, (%eax,%eax);andl (%eax), %eax": 1,
                "addb %bl, (%esi);incl %eax;addb %ah, (%ecx);addb %ah, (%edi);addb %ch, (%eax)": 1,
                "pushl %edx;addb %cl, (%ecx);pushl %esp;addb %bl, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, (%ebp);pushl %ebx;addb %al, (%ebp);pushl %edx": 1,
                "decl %esp;addb %al, (%esi);incl %ecx;addb %dl, (%ebx);pushl %esp": 2,
                "decl %ecx;addb %dl, (%esi);decl %ecx;addb %cl, (%eax,%eax);addb %al, (%edi)": 2,
                "addb %al, (%eax,%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, (%edx);decl %edi": 1,
                "addb %ch, ;addb %ch, ;addb %al, (%eax);addb %bh, (%eax,%eax);decl %esi": 1,
                "addb %al, (%ebx);decl %edi;addb %cl, (%esi);pushl %esp;addb %al, (%ebp)": 2,
                "addb %dl, (%ebx);addb %al, (%eax);andl $, %eax;addb %al, (%eax);addb %ah, ": 1,
                "addb %ch, %bh;movl $, %ebx;addb %al, (%eax);addb %al, (%eax);incl %ebx": 1,
                "je  <.text+>;addb %dh, %gs:(%eax,%eax);addb %ch, (%ebp);addb %al, %gs:(%eax);addb %al, (%eax)": 1,
                "addb %ch, (%ebp);addb %al, %gs:(%eax);addb %al, (%eax);addb %dl, (%ebp);imull $, (%eax), %eax": 1,
                "outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %dh, (%esi);addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl $;addb %ah, %gs:(%ebx);je  <.text+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, (%edx);addb %ah, %gs:(%ecx);insb %dx, %es:(%edi);addb %dh, (%esi)": 1,
                "addb %dh, (%eax,%eax);addb %al, (%eax);addb %al, (%eax);pushl %ebx;addb %ch, (%ecx)": 1,
                "addb %al, (%eax);pushl %ebx;addb %ch, (%ecx);outsb (%esi), %dx;addb %dh, (%eax,%eax)": 2,
                "addb %ah, (%ebp);popal;addb %ch, (%eax,%eax);addb %dh, (%edx);addb %al, (%eax)": 1,
                "outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax);addb %dl, (%ebx);imull $, (%eax), %eax": 1,
                "addb %bl, (%edi);pushl %eax;addb %dl, (%edx);decl %edi;addb %dl, (%eax)": 1,
                "addb %cl, (%esi);pushl %esp;addb %al, (%eax);addb %bl, (%edi);popl %edi": 1,
                "addb %cl, (%ecx);pushl %esi;addb %al, (%ecx);pushl %esp;addb %cl, (%ecx)": 2,
                "addb %al, (%eax);addb %ah, ;addb %al, (%eax);addb %ch, (%esi);addb %ch, (%esi)": 1,
                "addb %ah, ;addb %al, (%eax);addb %ch, (%esi);addb %ch, (%esi);addb %al, (%eax)": 1,
                "addb %ch, (%esi);addb %ch, (%esi);addb %al, (%eax);addb %al, (%eax);addb %ch, ": 1,
                "cmpb (%eax), %al;addb %al, (%eax);andl $, %eax;jae  <.text+>;addb %al, (%eax)": 1,
                "pushl %edi;addb %cl, (%ebp);decl %ecx;addb %al, (%ebx);andb %al, (%eax)": 1,
                "addb %ch, (%ebp);jo  <.text+>;imull $, (%eax), %eax;jae  <.text+>;andb %al, (%eax)": 1,
                "jne  <.text+>;jo  <.text+>;addb %ah, %fs:(%ecx);je  <.text+>;addb %ah, %gs:(%eax,%eax)": 1,
                "addb %cl, (%ebp);decl %edi;addb %al, (%esi);andb %al, (%eax);addb %ch, (%ecx)": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %dl, (%ebp);decl %ecx;addb %bl, (%eax,%eax)": 1,
                "decl %ecx;decl %esp;popal;outsb (%esi), %dx;jne  <.text+>": 3,
                "popal;outsb (%esi), %dx;jne  <.text+>;addb %bl, %gs:(%si);imull $, (%eax), %eax": 1,
                "addb %ah, (%ecx);jb  <.text+>;jns  <.text+>;outsl (%esi), %dx;andb %al, (%eax)": 1,
                "jne  <.text+>;insb %dx, %es:(%edi);addb %dh, (%eax,%eax);addb %ah, (%eax);addb %ah, (%eax)": 1,
                "addb %ah, ;addb %cl, (%edx);addb %al, (%eax);addb %cl, (%eax,%eax);addb %ch, (%esi)": 1,
                "addb %cl, (%edx);addb %al, (%eax);addb %cl, (%eax,%eax);addb %ch, (%esi);addb %bh, %gs:(%edx)": 1,
                "addb %dl, (%ebx);pushl %ebp;addb %al, (%ebx);incl %ebx;addb %al, (%ebp)": 1,
                "addb %al, (%esi);incl %ecx;addb %cl, (%ecx);decl %esp;addb %bh, (%edx)": 1,
                "pushl %edi;addb %ch, (%ebp);imull $, (%eax), %eax;popal;addb %dh, (%eax,%eax)": 1,
                "addb %ah, %cs:(%edx);popal;addb %dh, (%eax,%eax);addb %ch, (%ebp);outsl (%esi), %dx": 1,
                "decl %ecx;addb %dl, (%ebx);je  <.text+>;popal;addb %dh, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %ebx;addb %cl, (%edi);incl %esi": 1,
                "addb %ah, (%esi);je  <.text+>;popl %esp;addb %bl, (%eax,%eax);addb %ah, (%edx)": 1,
                "addb %bl, (%eax);decl %ecx;addb %dl, (%eax,%eax);addb %al, (%eax);addb %dl, (%ecx)": 1,
                "incl %ebp;addb %cl, (%esi);pushl %ebp;addb %cl, (%ebp);cmpl $, %eax": 1,
                "andb %al, (%eax);pushl %ebx;addb %dl, (%eax,%eax);addb %dl, (%edx);pushl %esp": 1,
                "addb %al, (%ebp);addb %ah, %ds:;addb %ch, (%edi);addb %cl, (%eax,%eax);addb %al, (%ebx)": 1,
                "addb %bh, (%esi);addb %bh, (%eax,%eax);incl %ecx;addb %dl, (%eax);pushl %eax": 1,
                "pushl %eax;addb %al, (%ebp);decl %esi;addb %al, (%eax,%eax);addb %ah, ": 1,
                "addb %al, (%edi);incl %ecx;addb %dl, (%eax,%eax);addb %bh, (%esi);addb %ah, ": 1,
                "popl %eax;addb %dl, (%eax,%eax);addb %al, (%eax);addb %bh, (%eax,%eax);das": 1,
                "decl %ebp;addb %al, (%ecx);pushl %esp;addb %bh, (%esi);addb %al, (%eax)": 1,
                "addb %dl, (%ebp);incl %ebp;addb %bh, (%esi);addb %ah, ;addb %ch, (%edi)": 1,
                "addb %al, %ds:(%eax);addb %bh, (%eax,%eax);pushl %eax;addb %al, (%ecx);pushl %edx": 1,
                "incl %ecx;addb %cl, (%ebp);incl %ebp;addb %bh, (%esi);addb %al, (%eax)": 3,
                "addb %al, (%eax);addb %bh, (%eax,%eax);decl %esi;addb %al, (%ecx);decl %ebp": 2,
                "pushl %eax;addb %al, (%ebp);pushl %edx;addb %dl, (%eax,%eax);addb %al, (%ebp)": 1,
                "decl %ecx;addb %dl, (%esi);incl %ecx;addb %dl, (%eax,%eax);addb %cl, (%edi)": 1,
                "addb %bh, (%esi);addb %al, (%eax);addb %bh, (%eax,%eax);pushl %eax;addb %dl, (%edx)": 1,
                "incl %ebp;addb %dl, (%edx);pushl %esp;addb %cl, (%ecx);incl %ebp": 1,
                "incl %ebp;addb %dl, (%ebx);addb %al, %ds:(%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "subl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %edi;addb %ch, (%ecx)": 1,
                "andb $, %al;addb %al, (%eax);addb %al, (%eax);decl %ecx;addb %bl, (%eax)": 1,
                "addb %al, (%eax,%eax);addb %cl, (%ecx);decl %esi;addb %al, (%ebp);andb (%eax), %al": 1,
                "addb %al, (%ebp);pushl %edx;addb %al, (%ebp);addb %ah, %ds:;addb %ch, (%edi)": 1,
                "addb %dl, (%edx);incl %ebp;addb %bh, (%esi);addb %al, (%eax);addb %bh, (%eax,%eax)": 1,
                "addb %cl, (%ecx);incl %ecx;addb %dl, (%ebx);pushl %esp;addb %al, (%ecx)": 1,
                "addb %bh, (%eax,%eax);pushl %esp;addb %al, (%ecx);pushl %edx;addb %al, (%edi)": 1,
                "pushl %esp;addb %bh, (%esi);addb %al, (%eax);addb %bh, (%eax,%eax);incl %esi": 1,
                "decl %edi;addb %cl, (%ebp);pushl %eax;addb %cl, (%edi);decl %esi": 1,
                "incl %ebp;addb %ah, (%edi);incl %ecx;addb %ch, (%eax,%eax);addb %ah, (%ecx)": 2,
                "addb %ch, (%eax,%eax);addb %ah, (%ecx);jae  <.text+>;addb %dh, %gs:(%ebx);addb %ch, %cs:(%ebp)": 2,
                "addb %ch, %cs:(%ebp);outsl (%esi), %dx;addb %ah, (%esi);addb %al, (%eax);addb %al, (%eax)": 1,
                "das;addb %dl, (%edx);incl %ebp;addb %dl, (%ecx);pushl %ebp": 1,
                "addb %dl, (%eax,%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, (%eax,%eax);incl %ebx": 1,
                "addb %bh, (%eax,%eax);pushl %edx;addb %al, (%ebp);pushl %ecx;addb %dl, (%ebp)": 1,
                "outsl (%esi), %dx;addb %ah, (%eax,%eax);addb %dl, (%esi);popal;addb %ch, (%eax,%eax)": 2,
                "addb %cl, %fs:(%ecx);je  <.text+>;addb %ch, %gs:(%ebp);subb %al, (%eax);decl %esp": 1,
                "je  <.text+>;addb %dh, %gs:(%ebx);subb %al, (%eax);subl $, %eax;addb %al, (%eax)": 1,
                "imull $, (%ebx), %esp;insb %dx, %es:(%edi);imull $, (%eax), %edi;arpl %si, %cs:(%eax);addb %al, (%eax)": 1,
                "addb %ch, (%eax,%eax);addb %ah, (%ebp);subb %al, (%eax);decl %esp;addb %ah, (%edx)": 1,
                "addb %al, %fs:(%ebx);pushl $;addb %ah, (%eax,%eax);addb %ch, ;addb %cl, (%esi)": 3,
                "pushl $;addb %ah, (%eax,%eax);addb %ch, ;addb %cl, (%esi);pushl %ebp": 3,
                "pushl %ebp;addb %al, (%ebp);subb $, %al;andb %al, (%eax);subl $, %eax": 1,
                "addb %cl, (%eax,%eax);addb %ch, (%eax,%eax);incl %ebx;addb %cl, (%eax,%eax);addb %al, (%ebx)": 1,
                "addb %al, (%ebp);addb %al, (%eax);decl %ecx;addb %dl, (%ebx);pushl %ebx": 1,
                "addb %dl, (%ebx);pushl %ebx;addb %dl, (%ebp);incl %ebp;addb %al, (%eax,%eax)": 1,
                "addb %ch, (%ecx);addb %al, (%eax);addb %bh, %bh;jmpl *-(%edi);lretl $": 1,
                "addb %bh, %bh;jmpl *-(%edi);lretl $;jl - <.text+>;addl (%ecx), %eax": 1,
                "nop;addb %al, %al;decl %edi;fdivr %st();incl (%ecx)": 1,
                "decl %ebx;andb $-, %al;fcoml -(%esi);movw %es, (%edx);addb %ch, -(%edx)": 1,
                "calll ;addb %al, %al;decl %edi;movb $-, %dh;andb %dh, -(%esi)": 1,
                "decl %edi;movb $-, %dh;andb %dh, -(%esi);incl %esp;cld": 1,
                "xorb -(%esi), %bl;adcl %eax, (%ebp);popl %ds;addl $-, (,%eax,);xorb $, %al": 1,
                "adcl %eax, (%ebp);popl %ds;addl $-, (,%eax,);xorb $, %al;movb (%edx), %ch": 1,
                "ljmpl *(%eax);andb %bh, -(%ebp);adcl %ebp, (%ebp);fdivr %st();incl (%esi)": 1,
                "adcl %eax, (%ebp);popl %ds;addl $, (%edx,%esi,);adcl $, %eax;adcl %ebp, (%ebp)": 1,
                "pushal;adcb (%edi), %cl;fdecstp;jae - <.text+>;rcll %cl, (%ecx)": 1,
                "fdecstp;jae - <.text+>;rcll %cl, (%ecx);movb $, %bl;addb %al, %al": 1,
                "jo  <.text+>;bound (%eax), %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "adcb %al, %dl;addl (%eax), %eax;jno - <.text+>;addl (%eax), %eax;addl %ecx, %edx": 1,
                "addl (%eax), %eax;inb %dx, %al;roll (%ebx);addb %cl, (%esi);rolb %cl, (%ebx)": 1,
                "addl (%eax), %eax;addb %dl, (%ebx);roll %cl, (%ebx);addb %ch, (%esi);aam $": 1,
                "addb %dh, -(%edi);aad $;addb %ch, -(%edi);aad $;addb %dl, (%esi,%edx,)": 1,
                "fldl (%ebx);addb %bh, -(%ebp,%ebx,);addl (%eax), %eax;fcmovu %st(), %st();addl (%eax), %eax": 1,
                "addl (%eax), %eax;jmp -;fldl (%ebx);addb %dl, (%eax);fiadds (%ebx)": 1,
                "fldl (%ebx);addb %dl, (%eax);fiadds (%ebx);addb %dh, (%edx);fiadds (%ebx)": 1,
                "addb %dl, %ch;filds (%ebx);addb %bh, %ah;filds (%ebx);addb %bl, (%esi)": 1,
                "addl (%eax), %eax;repne  loope ;addb %al, (%ecx);loop ;addb %dl, (%eax)": 1,
                "addl (%eax), %eax;adcb $-, %al;addl (%eax), %eax;jno - <.text+>;addl (%eax), %eax": 1,
                "addl (%eax), %eax;jno - <.text+>;addl (%eax), %eax;movb , %al;inl %dx, %eax": 1,
                "addl (%eax), %eax;pushl %ebp;addl (%eax), %eax;testb %dh, %cl;addl (%eax), %eax": 1,
                "addl (%eax), %eax;xchgl %ebx, %eax;addl (%eax), %eax;stosb %al, %es:(%edi);addl (%eax), %eax": 1,
                "movl $, %edi;testb $, (%ebx);pushl %edi;testb $, (%ebx);testb %dh, %bh": 1,
                "testb $, (%ebx);testb %dh, %bh;addl (%eax), %eax;jecxz - <.text+>;addl (%eax), %eax": 1,
                "jecxz - <.text+>;addl (%eax), %eax;sti;testl $, (%ebx);addb %ch, (%ecx)": 1,
                "addb %ch, (%ecx);clc;addl (%eax), %eax;decl %eax;clc": 1,
                "addl (%eax), %eax;sarl $, %eax;addb %ah, %al;clc;addl (%eax), %eax": 1,
                "addl (%eax), %eax;nop;cld;addl (%eax), %eax;cmpsl %es:(%edi), (%esi)": 1,
                "addl (%eax), %eax;hlt;std;addl (%eax), %eax;addl %esi, %edi": 1,
                "std;addl (%eax), %eax;addl %esi, %edi;addl (%eax), %eax;movl %esi, %edi": 1,
                "addl (%eax), %eax;stosb %al, %es:(%edi);incb (%ebx);addb %ch, %cl;incb (%ebx)": 1,
                "incl (%ebx);addb %cl, (%ecx);addb %al, (%eax,%eax);sbbb %al, (%eax);addb $, %al": 1,
                "addb %al, (%eax,%eax);pushl %esi;addb %al, (%eax,%eax);outsl (%esi), %dx;addb %al, (%eax,%eax)": 1,
                "addb $, %al;sti;addb %al, (%eax,%eax);andl (%ecx), %eax;addb $, %al": 1,
                "movsl (%esi), %es:(%edi);addb (%eax,%eax), %al;movl $, %esp;addb (%eax,%eax), %al;incl %edx": 1,
                "incl %edx;addl (%eax,%eax), %eax;imull $, (%ebx), %eax;addb $, %al;movl $, (%ebx)": 1,
                "xchgl %esi, %eax;popl %es;addb $, %al;popl %ds;orb %al, (%eax,%eax)": 1,
                "incl %ecx;orl %eax, (%eax,%eax);addl %ecx, (%edx);addb $, %al;popl %ebx": 1,
                "andl $, (%esi);popl %esi;retl;int;int": 5,
                "int;int;int;int;int": 1154,
                "je  <.text+>;movl (%esi), %eax;testl %eax, %eax;je  <.text+>;movl (%eax), %ecx": 3,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp)": 8,
                "movl $, (%esi);calll *;testl %eax, %eax;movl %eax, (%esi);jne  <.text+>": 1,
                "movl %esp, %ebp;pushl %ebx;movl %ecx, %ebx;movl (%ebx), %eax;testl %eax, %eax": 1,
                "jne  <.text+>;testl %edx, %edx;ja - <.text+>;cmpl %eax, (%ebp);jae  <.text+>": 1,
                "jae  <.text+>;orl $-, %eax;jmp  <.text+>;movzwl -(%edi), %edx;movzwl -(%ecx), %eax": 1,
                "setne %cl;movl %ecx, %eax;popl %esi;popl %edi;popl %ebx": 1,
                "jne  <.text+>;xorl %eax, %eax;retl;movl (%ecx), %eax;subl %edx, %eax": 4,
                "sarl $, %eax;retl;int;int;int": 2,
                "pushl %esi;movl %ecx, %esi;movl (%esi), %ecx;cmpl $, (%ecx);jne  <.text+>": 5,
                "movl (%esi), %ecx;cmpl %eax, (%ecx);je  <.text+>;movl %eax, (%esi);popl %esi": 5,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp)": 12,
                "andl $, (%ebp);pushl (%ebp);calll  <.text+>;popl %ecx;popl %ebp": 1,
                "int;movl $, %eax;calll  <.text+>;pushl %ecx;pushl %esi": 47,
                "je  <.text+>;movl (%eax), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 1,
                "pushl %eax;calll *;retl;xorl %eax, %eax;retl": 1,
                "testl %eax, %eax;jne  <.text+>;incl %eax;jmp  <.text+>;pushl %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 10,
                "movl %eax, %edi;movl %edi, -(%ebp);calll - <.text+>;leal (%eax,%edi), %esi;movl %eax, -(%ebp)": 1,
                "leal (%esi,%esi), %eax;pushl %eax;pushl $;calll *;testl %eax, %eax": 1,
                "testl %eax, %eax;movl %eax, (%ebx);jne  <.text+>;testl %esi, %esi;je  <.text+>": 1,
                "movl (%eax), %eax;jmp  <.text+>;xorl %eax, %eax;testl %eax, %eax;je  <.text+>": 2,
                "movl %eax, %esi;movl (%ebx), %eax;leal (%eax,%edi,), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "leal (%eax,%edi,), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax;pushl %esi;movl (%eax), %esi": 10,
                "movl (%ecx), %ecx;cmpl (%ecx), %edx;popl %esi;jne  <.text+>;movl %eax, (%ecx)": 10,
                "jne  <.text+>;movl %eax, (%ecx);jmp  <.text+>;movl (%edx), %ecx;cmpl (%ecx), %edx": 10,
                "movl %ecx, %esi;calll - <.text+>;testb $, (%ebp);je  <.text+>;pushl %esi": 9,
                "movl (%ebp), %edi;movl %ecx, %esi;cmpl %edi, %esi;je  <.text+>;pushl %ebx": 3,
                "movl (%edi), %ecx;pushl %eax;pushl %ecx;calll  <.text+>;jmp  <.text+>": 1,
                "pushl %edi;pushl ;movl %esi, %ecx;calll - <.text+>;movl -(%ebp), %ecx": 5,
                "jbe  <.text+>;pushl (%ebp);pushl (%ebp);calll - <.text+>;addl $, (%ebp)": 3,
                "int;int;jmp - <.text+>;int;int": 2,
                "movl %edi, %ecx;calll - <.text+>;movl (%esi), %eax;movl %eax, (%edi);movl %edi, %eax": 1,
                "calll  <.text+>;pushl %ecx;pushl %esi;movl %ecx, %esi;calll - <.text+>": 1,
                "movl %eax, (%esi);movl %esi, %eax;popl %esi;movl %ecx, %fs:;leave": 1,
                "movl %edi, -(%ebp);cmpl %edi, %ecx;je  <.text+>;pushl (%ebp);pushl %esi": 1,
                "calll - <.text+>;movl (%ebp), %ecx;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %esp, -(%ebp);movl %ecx, %edi": 29,
                "movb $, -(%ebp);pushl $;leal -(%ebp), %ecx;calll - <.text+>;movl %eax, %esi": 2,
                "cmpl %ebx, %ecx;je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %eax": 29,
                "je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %eax;cmpl %ebx, %eax": 23,
                "movb $, -(%ebp);calll  <.text+>;jmp  <.text+>;movl $, %esi;cmpl %ebx, -(%ebp)": 5,
                "je  <.text+>;movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax": 11,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;popl %ecx": 148,
                "jmp  <.text+>;xorl %eax, %eax;pushl %eax;pushl %ebx;pushl (%edi)": 27,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp  <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %eax": 20,
                "calll *(%ecx);movl %ebx, -(%ebp);incl -(%ebp);jmp - <.text+>;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);incl -(%ebp);jmp - <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %eax": 1,
                "je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);movb %bl, -(%ebp);leal -(%ebp), %ecx": 16,
                "movl -(%ebp), %ecx;movl %ecx, %fs:;popl %edi;popl %esi;popl %ebx": 138,
                "calll  <.text+>;movl %eax, %ecx;calll  <.text+>;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %esp, -(%ebp);movl %ecx, %esi;xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 8,
                "jmp  <.text+>;xorl %ecx, %ecx;movl (%esi), %eax;movl (%eax), %edx;leal -(%ebp), %edi": 5,
                "pushl -(%ebp);calll  <.text+>;movl (%ebp), %ecx;calll  <.text+>;movl %eax, %ecx": 5,
                "cmpl %ebx, -(%ebp);jge  <.text+>;pushl -(%ebp);calll  <.text+>;cmpw $, -(%ebp)": 8,
                "calll  <.text+>;cmpw $, -(%ebp);je  <.text+>;cmpw %bx, -(%ebp);je  <.text+>": 15,
                "pushl $;jmp - <.text+>;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "calll *(%ecx);movl %ebx, -(%ebp);movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>": 72,
                "movl %ebx, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp);movl %esi, %ecx": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movl %eax, %edi;movb $, -(%ebp);pushl $": 14,
                "cmpl %ebx, %ecx;je  <.text+>;movl (%ecx), %edi;jmp  <.text+>;xorl %edi, %edi": 1,
                "movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl %esi, %ecx": 1,
                "movl %ebx, -(%ebp);pushl %eax;movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx": 1,
                "calll  <.text+>;pushl %ebx;movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx": 1,
                "leave;retl $;movl -(%ebp), %esi;pushl %esi;movl -(%ebp), %ecx": 1,
                "calll - <.text+>;movl %esi, -(%ebp);movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %esi, %ecx": 31,
                "cmpl %esi, %ecx;je  <.text+>;calll - <.text+>;movl %esi, -(%ebp);movl -(%ebp), %eax": 7,
                "pushl %ebx;movb $, -(%ebp);calll  <.text+>;cmpl %esi, %ebx;jge  <.text+>": 11,
                "movl (%eax), %eax;cmpl %esi, %eax;je  <.text+>;movl (%eax), %ecx;jmp  <.text+>": 4,
                "movl -(%ebp), %eax;movl (%eax), %edx;pushl %esi;pushl %esi;leal -(%ebp), %ebx": 1,
                "pushl %esi;leal -(%ebp), %ebx;pushl %ebx;pushl %esi;pushl %ecx": 3,
                "pushl %ebx;pushl %esi;pushl %ecx;pushl %eax;calll *(%edx)": 3,
                "pushl %eax;calll  <.text+>;cmpl %esi, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "je  <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp)": 7,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl %esi, -(%ebp);movb $, -(%ebp)": 2,
                "movl $, %eax;retl;leal -(%ebp), %eax;pushl %eax;movl , %esi": 8,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl %esi, -(%ebp);movl $, %eax": 1,
                "calll *(%ecx);movl %esi, -(%ebp);movl $, %eax;movl %eax, -(%ebp);pushl %eax": 1,
                "movl %eax, %edi;movb $, -(%ebp);movl (%ebp), %ecx;calll  <.text+>;movl %eax, %ecx": 3,
                "pushl %ebx;leal -(%ebp), %edi;pushl %edi;pushl %ebx;pushl %ebx": 4,
                "calll - <.text+>;orl $-, -(%ebp);movl %esi, %ecx;calll - <.text+>;movl -(%ebp), %ecx": 9,
                "movl %esi, %ecx;calll - <.text+>;movl -(%ebp), %ecx;popl %esi;movl %ecx, %fs:": 8,
                "calll *;movl %eax, -(%ebp);movl (%ebp), %edi;movl %edi, %ecx;calll  <.text+>": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %ecx;pushl %eax": 4,
                "pushl %esi;pushl (%ebp);calll  <.text+>;movl %eax, -(%ebp);movb $, -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;movl %edi, %ecx;calll  <.text+>;jmp  <.text+>": 1,
                "pushl %ebx;pushl (%esi);calll  <.text+>;movl %eax, -(%ebp);cmpl %ebx, (%esi)": 1,
                "pushl %ebx;movl %edi, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>": 5,
                "leal -(%ebp), %esi;pushl %esi;pushl %ebx;pushl %eax;pushl %ecx": 16,
                "pushl $;pushl %esi;movb $, -(%ebp);calll  <.text+>;cmpl %ebx, %esi": 45,
                "pushl %esi;movb $, -(%ebp);calll  <.text+>;cmpl %ebx, %esi;jge  <.text+>": 45,
                "cmpl %ebx, %esi;jge  <.text+>;pushl %esi;calll  <.text+>;cmpw $, -(%ebp)": 10,
                "testl %eax, %eax;jne  <.text+>;pushl $;movl (%ebp), %ecx;calll  <.text+>": 9,
                "calll *;cmpl $, -(%ebp);je  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "cmpw $, -(%ebp);je  <.text+>;cmpw %bx, -(%ebp);je  <.text+>;pushl (%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;pushl $;calll - <.text+>": 7,
                "movl %esp, %ebp;movl (%ebp), %ecx;pushl $;calll - <.text+>;popl %ebp": 7,
                "leal -(%ebp), %eax;pushl %eax;calll *%edi;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movb $, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp);pushl $": 1,
                "pushl %eax;calll *;cmpl $, -(%ebp);je  <.text+>;movl %ebx, -(%ebp)": 1,
                "jge  <.text+>;pushl %eax;calll  <.text+>;movl -(%ebp), %eax;cmpl %ebx, %eax": 2,
                "movl %eax, %ecx;calll  <.text+>;movl $, -(%ebp);movb $, -(%ebp);movl -(%ebp), %ecx": 1,
                "movb $, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb %bl, -(%ebp);movl -(%ebp), %ecx": 1,
                "jne  <.text+>;pushl -(%ebp);movl (%ebp), %ecx;calll  <.text+>;movl %eax, %ecx": 1,
                "pushl %eax;calll *(%ecx);movl %eax, -(%ebp);cmpl %ebx, %eax;jne  <.text+>": 1,
                "leal -(%ebp), %edi;pushl %edi;pushl %ebx;pushl %eax;pushl %ecx": 8,
                "pushl (%ebp);movl %esi, %ecx;pushl %edi;pushl %eax;movl %eax, -(%ebp)": 2,
                "calll - <.text+>;movl -(%ebp), %eax;leal (%eax,%edi,), %eax;pushl %eax;pushl (%esi)": 2,
                "pushl (%ebp);pushl (%esi);pushl %ebx;calll - <.text+>;movl (%ebp), %eax": 2,
                "pushl %esi;movl %ecx, %esi;pushl (%esi);pushl (%esi);calll - <.text+>": 2,
                "movl (%edi), %ecx;movl %eax, (%ecx);movl (%edi), %ecx;movl %ecx, (%eax);cmpl (%ebx), %eax": 5,
                "movl %eax, (%esi);jmp  <.text+>;movl (%eax), %ecx;movl -(%ebp), %edx;movl %ecx, (%esi)": 5,
                "movl (%ebx), %ecx;movl %eax, (%ecx);movl -(%ebp), %ebx;movl (%ebx), %ecx;cmpl %edi, (%ecx)": 5,
                "movl (%ebx), %ecx;cmpl %edi, (%ecx);jne  <.text+>;movl %eax, (%ecx);jmp  <.text+>": 5,
                "movl %ebx, (%ecx);jmp  <.text+>;pushl %esi;calll - <.text+>;movl -(%ebp), %ecx": 5,
                "cmpl %edi, (%ecx);jne  <.text+>;movl (%eax), %ecx;movl %edi, (%ecx);andl $, (%eax)": 10,
                "movl %edi, (%ecx);andl $, (%eax);pushl %eax;movl %ebx, %ecx;calll - <.text+>": 10,
                "andl $, (%eax);pushl %eax;movl %ebx, %ecx;calll - <.text+>;movl (%esi), %eax": 10,
                "popl %ecx;movl (%ebp), %ecx;popl %edi;movl %ecx, (%eax);movl -(%ebp), %ecx": 5,
                "movl (%ebp), %edi;cmpl , %edi;movl %ecx, %ebx;movl %edi, %esi;je  <.text+>": 5,
                "calll - <.text+>;pushl %edi;calll  <.text+>;cmpl , %esi;popl %ecx": 5,
                "jne - <.text+>;popl %edi;popl %esi;popl %ebx;popl %ebp": 6,
                "cmpl (%eax), %ecx;jne  <.text+>;cmpl %eax, (%ebp);jne  <.text+>;pushl (%eax)": 5,
                "movl -(%ebp), %ecx;pushl %ebx;calll - <.text+>;cmpl %esi, (%ebp);movl %eax, %edi": 4,
                "pushl %ebx;calll - <.text+>;cmpl %esi, (%ebp);movl %eax, %edi;jne  <.text+>": 4,
                "movl -(%ebp), %ecx;pushl %edi;pushl (%esi);calll - <.text+>;movl %eax, (%edi)": 4,
                "movl $, (%eax);movl (%esi), %eax;movl (%eax), %eax;andl $, (%eax);movl (%esi), %eax": 10,
                "movl (%eax), %eax;movl $, (%eax);movl (%ebp), %eax;popl %edi;popl %esi": 5,
                "movl %ebx, (%eax);popl %ebx;popl %ebp;retl $;int": 5,
                "movl %ecx, %esi;andl $, (%esi);movl %esi, -(%ebp);andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl %esi;pushl %eax;movl %edi, %ecx;calll - <.text+>": 6,
                "pushl %ecx;pushl %ecx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 5,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;movl (%ebp), %eax;movl -(%ebp), %ecx": 5,
                "movl -(%ebp), %eax;pushl (%eax);pushl (%ebp);pushl -(%ebp);pushl %ecx": 4,
                "movl %eax, %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;cmpl %ebx, (%eax);je  <.text+>": 14,
                "movb $, -(%ebp);pushl %edi;pushl $;pushl %esi;movb $, -(%ebp)": 16,
                "movb $, -(%ebp);cmpw $, -(%ebp);je  <.text+>;cmpw %bx, -(%ebp);je  <.text+>": 1,
                "pushl -(%ebp);movl (%ebp), %ecx;addl $, %ecx;calll - <.text+>;jmp  <.text+>": 1,
                "addl $, %esi;movl %esi, %ecx;calll - <.text+>;testb %al, %al;je  <.text+>": 2,
                "leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp);pushl %eax;movl %esi, %ecx": 12,
                "jmp - <.text+>;leal -(%ebp), %eax;pushl %eax;calll *;pushl -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>": 22,
                "jmp - <.text+>;leal -(%ebp), %eax;pushl %eax;calll *;movb $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %ecx, %fs:;leave;retl $;int": 4,
                "xorl %eax, %eax;movl %esi, -(%ebp);movl %eax, (%esi);movl %eax, -(%ebp);movl %eax, (%esi)": 2,
                "je  <.text+>;movl %ebx, (%eax);movb $, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>": 1,
                "calll - <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %esi;cmpl %ebx, (%esi);jne  <.text+>": 3,
                "leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp);movb $, -(%ebp);orl $, -(%ebp)": 5,
                "movb $, -(%ebp);orl $, -(%ebp);movl (%eax), %eax;cmpl %ebx, %eax;je  <.text+>": 5,
                "movl (%eax), %eax;jmp  <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>": 1,
                "calll - <.text+>;movl %eax, -(%ebp);movl $, -(%ebp);orl $, -(%ebp);jmp - <.text+>": 1,
                "jne  <.text+>;cmpl %ebx, (%eax);je  <.text+>;pushl $;leal -(%ebp), %eax": 2,
                "xorl %eax, %eax;movb %al, -(%ebp);movl $, -(%ebp);testb $, -(%ebp);je  <.text+>": 1,
                "movb $, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 2,
                "pushl %ebx;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;jmp  <.text+>;pushl %esi": 1,
                "je  <.text+>;pushl %esi;leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp)": 3,
                "cmpl %ebx, -(%ebp);jge  <.text+>;pushl -(%ebp);calll  <.text+>;xorl %eax, %eax": 2,
                "cmpw %bx, -(%ebp);je  <.text+>;cmpl %ebx, (%ebp);jne  <.text+>;movl %ebx, -(%ebp)": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movl $, %ecx;calll  <.text+>;leal -(%ebp), %ecx": 1,
                "movl %eax, %ecx;calll  <.text+>;movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;jmp  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp)": 1,
                "pushl %eax;calll *%esi;movl %ebx, -(%ebp);pushl $;calll  <.text+>": 1,
                "jg  <.text+>;leal -(%ebp), %eax;pushl %eax;calll *;leal -(%ebp), %eax": 1,
                "jmp - <.text+>;subl $, %esp;movl %esp, %ecx;movl %esp, -(%ebp);leal -(%ebp), %eax": 2,
                "leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %esi;movl -(%ebp), %eax;cmpl %ebx, %eax": 1,
                "calll  <.text+>;movl -(%ebp), %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);cmpl %ebx, -(%ebp);je  <.text+>;movl $, %esi": 1,
                "movl $, -(%ebp);pushl $;leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;jne  <.text+>;incl %eax;jmp  <.text+>;xorl %eax, %eax": 2,
                "movl %eax, %ecx;calll  <.text+>;pushl $;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "calll - <.text+>;cmpw %bx, -(%ebp);je  <.text+>;cmpw $, -(%ebp);je  <.text+>": 1,
                "calll  <.text+>;movb $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %eax": 3,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl %ebx, -(%ebp);cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <.text+>;movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "movl (%eax), %ecx;movl %ecx, -(%ebp);pushl %eax;movl -(%ebp), %ecx;calll  <.text+>": 1,
                "jmp  <.text+>;movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, (%eax);addl $, %eax": 1,
                "movl %ecx, (%edx);jne - <.text+>;movl (%ebp), %eax;popl %ebp;retl $": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %esi": 1,
                "incl %edi;cmpl %ebx, %edi;jl - <.text+>;jmp  <.text+>;movl $, -(%ebp)": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);orl $-, -(%ebp)": 1,
                "jge  <.text+>;movl (%esi), %eax;addl -(%ebp), %eax;movl (%esi), %ecx;movw (%ecx,%eax,), %ax": 1,
                "testl %eax, %eax;je  <.text+>;movl %ebx, -(%ebp);andl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "calll  <.text+>;pushl -(%ebp);pushl -(%ebp);calll *;andl $, (%esi)": 1,
                "movl $, -(%ebp);pushl $;leal -(%ebp), %eax;jmp  <.text+>;movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal -(%edi), %ecx;cmpl %eax, %ecx;jb  <.text+>;pushl -(%edi)": 1,
                "cmpw $, (%ecx,%eax,);je  <.text+>;cmpl %ebx, (%esi);jne  <.text+>;pushl $": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl -(%edi);calll  <.text+>": 1,
                "jne  <.text+>;movl -(%ebp), %edi;movl (%esi), %eax;addl -(%ebp), %eax;movl (%esi), %ecx": 1,
                "movl (%esi), %ecx;cmpw $, -(%ecx,%eax,);jne - <.text+>;cmpl %edi, -(%ebp);jge - <.text+>": 1,
                "movl -(%ebp), %eax;pushl -(%eax);calll  <.text+>;testl %eax, %eax;je - <.text+>": 1,
                "pushl $;leal -(%ebp), %eax;jmp  <.text+>;pushl -(%ebp);pushl %edi": 1,
                "jne  <.text+>;pushl -(%ebp);calll  <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;andl $, (%esi);cmpl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);cmpl %edi, %eax;jne  <.text+>;movl $, -(%ebp);pushl $": 1,
                "movl %edi, -(%ebp);incl -(%ebp);leal -(%ebp), %eax;pushl %eax;leal (%esi), %ecx": 1,
                "andl $, -(%ebp);movl $, -(%ebp);pushl $;leal -(%ebp), %eax;jmp  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;int;int": 12,
                "je  <.text+>;cmpw $, %dx;jne  <.text+>;cmpl %ebx, %eax;jge  <.text+>": 1,
                "cmpl %ebx, %eax;jge  <.text+>;incl %eax;movl %eax, (%esi);jmp - <.text+>": 1,
                "je  <.text+>;incl %eax;cmpl %ebx, %eax;movl %eax, (%esi);jl - <.text+>": 1,
                "je - <.text+>;cmpw $, %ax;jne  <.text+>;pushl $;pushl -(%edi)": 1,
                "calll  <.text+>;testl %eax, %eax;je - <.text+>;movl (%esi), %eax;movl (%esi), %ecx": 1,
                "incl %eax;cmpl %ebx, %eax;movl %eax, (%esi);jge  <.text+>;movw (%ecx,%eax,), %dx": 2,
                "cmpl %edi, (%esi);jge  <.text+>;movl %esi, %ecx;calll - <.text+>;jmp - <.text+>": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;andl $, -(%ebp)": 3,
                "incl %edi;testl %eax, %eax;je  <.text+>;pushl %eax;calll  <.text+>": 24,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;popl %ecx;movl %eax, (%esi)": 30,
                "popl %edi;popl %esi;leave;retl;int": 2,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %eax;andl $, (%esi);testl %eax, %eax": 1,
                "testl %eax, %eax;popl %ecx;je  <.text+>;pushl (%ebp);movl %eax, %ecx": 1,
                "xorl %eax, %eax;testl %eax, %eax;movl %eax, (%esi);popl %esi;jne  <.text+>": 1,
                "movl %esp, %ebp;pushl %esi;movl %ecx, %esi;calll  <.text+>;testb $, (%ebp)": 1,
                "pushl %esi;calll *;popl %esi;retl;int": 2,
                "popl %ecx;movl %eax, -(%ebp);movl %eax, -(%ebp);cmpl %edi, %eax;je  <.text+>": 4,
                "cmpl %ebx, %eax;je  <.text+>;pushl %eax;calll *;leal (%eax,%eax), %eax": 1,
                "pushl %esi;movl , %esi;calll *%esi;popl %ecx;popl %ecx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movb $, -(%ebp);leal (%ebp), %eax;pushl %eax": 6,
                "subl $, %esp;andl $, -(%ebp);pushl %esi;movl %ecx, %esi;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%ebp);leal -(%ebp), %ecx": 1,
                "movl %ecx, %esi;calll - <.text+>;movl %esi, %eax;popl %esi;popl %ebp": 4,
                "pushl %edi;movl (%ebp), %edi;pushl %edi;movl %ecx, %esi;calll - <.text+>": 2,
                "pushl (%ebp);movl %esi, %ecx;pushl %edi;pushl %eax;movl %eax, (%ebp)": 1,
                "leal (%ebx,%eax), %edx;pushl %edx;pushl %ecx;pushl %eax;movl %esi, %ecx": 1,
                "cltd;popl %ecx;idivl %ecx;movl (%esi), %ecx;popl %edi": 1,
                "popl %ecx;idivl %ecx;movl (%esi), %ecx;popl %edi;popl %esi": 1,
                "movl (%esi), %ecx;popl %edi;popl %esi;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax": 1,
                "int;int;int;int;pushl (%ecx)": 1,
                "movb $, -(%ebp);movl $, %esi;pushl %esi;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "movl $, %esi;pushl %esi;leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp)": 1,
                "movl %edi, (%esi);movl $, (%esi);je  <.text+>;movl (%eax), %ecx;pushl %eax": 1,
                "movb %bl, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal (%esi), %ecx;calll - <.text+>;movb $, -(%ebp);movl %edi, (%esi)": 1,
                "movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi);movb $, -(%ebp);leal (%esi), %eax": 1,
                "movl $, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl %ebx, (%esi)": 1,
                "int;int;int;movl %edi, %edi;pushl %ecx": 7,
                "pushl %ecx;pushl $;pushl $;pushl $;pushl $": 1,
                "pushl $;pushl $;calll *;retl;int": 1,
                "je  <.text+>;pushl (%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 6,
                "cmpl %ebx, (%edi);jne  <.text+>;movl %edi, %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl %ebx;pushl %ebx;pushl (%ebp)": 2,
                "movl %esi, %ecx;calll - <.text+>;movl (%edi), %eax;movl (%eax), %ecx;leal -(%ebp), %edx": 1,
                "movl $, (%edi);cmpl %ebx, -(%ebp);je  <.text+>;pushl -(%ebp);calll *": 1,
                "cmpl %ebx, %ecx;je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);movl %ebx, (%edi)": 1,
                "calll *(%ecx);movl %ebx, (%edi);movb %bl, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>": 1,
                "movl $, %eax;retl;pushl $;calll  <.text+>;movl $, %eax": 20,
                "pushl (%ebp);movl %esi, %ecx;calll - <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "movl %esp, -(%ebp);movl %ecx, %ebx;xorl %esi, %esi;movl %esi, -(%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl %esi;movl (%ebp), %edi;pushl %edi": 1,
                "calll - <.text+>;cmpl %esi, (%ebx);je  <.text+>;cmpl %esi, (%ebp);je  <.text+>": 1,
                "pushl $;jmp  <.text+>;movl $, %ecx;cmpl %ecx, %edi;jg  <.text+>": 1,
                "pushl %eax;pushl $;jmp  <.text+>;subl $, %edi;je  <.text+>": 1,
                "calll  <.text+>;popl %ecx;movl %esi, (%ebx);orl $-, -(%ebp);movl -(%ebp), %ecx": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;movl -(%ebp), %eax": 5,
                "pushl %ebp;addl %eax, (%ecx);pushl %esp;addl %eax, (%ecx);pushl %ebp": 1,
                "xchgb %dl, (%ecx,%eax);xchgl %esi, %eax;pushl %esp;addl %eax, (%ecx);pushw %bp": 1,
                "pushl %ss;pushl %ebx;addl %eax, (%ecx);pushl %esi;pushl %ebp": 1,
                "addl %eax, (%ecx);addl %esi, -(%esi);pushl %ebp;addl %eax, (%ecx);salc": 1,
                "addl %eax, (%ecx);pushw %si;addl %eax, (%ecx);jbe  <.text+>;addl %eax, (%ecx)": 1,
                "notb (%esi);addl %eax, (%esi);pushl %edi;addl %eax, (%ecx);pushl %ss": 1,
                "addl %eax, (%ecx);pushl %ss;pushl %edi;addl %eax, (%ecx);pushl %edi": 1,
                "pushl %edi;addl %eax, (%ecx);outb %al, $;addl %eax, (%ecx);notb (%edi)": 1,
                "addl %eax, (%ecx);notb (%edi);addl %eax, (%esi);popl %eax;addl %eax, (%ecx)": 1,
                "pushl %esi;popl %eax;addl %eax, (%ecx);popw %ax;addl %eax, (%ecx)": 1,
                "addl %eax, (%ecx);jbe  <.text+>;addl %eax, (%ecx);xchgb %bl, (%eax);addl %edx, -(%esi)": 1,
                "pushl %eax;calll  <.text+>;andl $, (%esi);popl %ecx;movl (%esi), %esi": 1,
                "jne  <.text+>;cmpl %eax, (%esi);je  <.text+>;pushl $;calll  <.text+>": 1,
                "movl %esp, -(%ebp);movl %ecx, %ebx;xorl %esi, %esi;movl %esi, -(%ebp);movl %esi, -(%ebp)": 4,
                "calll *%edi;popl %ecx;popl %ecx;testl %eax, %eax;jne  <.text+>": 1,
                "incl %eax;shrl %eax;shll %eax;pushl %eax;calll  <.text+>": 1,
                "calll *;movl %edi, -(%ebp);pushl %edi;calll  <.text+>;popl %ecx": 1,
                "movw %si, -(%ebp,%eax,);leal -(%ebp), %eax;pushl %eax;calll *;popl %ecx": 1,
                "movl %ecx, %esi;cmpl $, (%esi);jne  <.text+>;calll - <.text+>;andl $, (%esi)": 1,
                "movl (%edi), %eax;jmp  <.text+>;xorl %eax, %eax;pushl %ebx;pushl $": 1,
                "xorl %eax, %eax;pushl %ebx;pushl $;pushl $;pushl %ebx": 2,
                "je  <.text+>;pushl $;pushl %ebx;pushl %ebx;pushl %eax": 1,
                "movb %bl, -(%ebp);cmpl %ebx, %edi;je  <.text+>;movl %edi, %ecx;calll - <.text+>": 1,
                "je  <.text+>;movl (%esi), %eax;cmpl $, %eax;jne  <.text+>;cmpl %edi, (%ebp)": 1,
                "calll - <.text+>;movl %edi, (%esi);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;movl %eax, %edi;movb $, -(%ebp);leal -(%ebp), %eax": 3,
                "calll  <.text+>;movb $, -(%ebp);pushl (%ebp);pushl (%edi);pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%edi);pushl (%ebp);pushl (%ebx);movl -(%ebp), %ecx": 1,
                "pushl (%ebx);movl -(%ebp), %ecx;pushl (%ecx);pushl (%ebp);pushl (%eax)": 1,
                "calll  <.text+>;addl $, %esp;movb $, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>": 4,
                "movl -(%ebp), %esi;movl $, -(%ebp);xorl %edi, %edi;pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;cmpl %edi, %ecx;je  <.text+>;calll - <.text+>;jmp  <.text+>": 1,
                "cmpl %edi, %eax;je  <.text+>;movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl (%esi);calll *;cmpl $, %eax;jne  <.text+>": 1,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <.text+>": 2,
                "xorl %eax, %eax;pushl %edi;pushl %ecx;pushl %eax;calll *": 1,
                "pushl $;pushl $;pushl $;calll  <.text+>;pushl %edi": 3,
                "pushl %eax;calll *;movl %edi, (%esi);cmpl %edi, %ebx;je  <.text+>": 1,
                "movl %edi, (%esi);cmpl %edi, %ebx;je  <.text+>;movl (%ebx), %eax;jmp  <.text+>": 1,
                "calll *;movl %eax, (%esi);cmpl $-, %eax;jne  <.text+>;calll *": 1,
                "movl (%esi), %esi;cmpl $-, %esi;je  <.text+>;movl -(%ebp), %eax;leal (%eax), %edx": 1,
                "movl -(%ebp), %eax;popl %esi;leave;retl $;int": 3,
                "pushl %eax;calll - <.text+>;retl;int;int": 2,
                "movl $, %edi;pushl $;pushl %esi;pushl %esi;pushl %esi": 1,
                "pushl $;pushl %eax;calll *;addl $, %esp;testl %eax, %eax": 3,
                "cmpw $, (%eax);jne  <.text+>;andw $, (%eax);jmp  <.text+>;movl $, %ecx": 2,
                "movl $, %ecx;calll  <.text+>;cmpl %esi, %eax;je  <.text+>;pushl %edi": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %edi": 1,
                "movl -(%ebp), %eax;popl %edi;popl %esi;calll  <.text+>;leave": 1,
                "calll  <.text+>;movl (%ebp), %ecx;movl %eax, %esi;calll  <.text+>;movl %eax, %ecx": 1,
                "andl $, -(%ebp);cmpl %esi, -(%ebp);jne  <.text+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "je  <.text+>;andl $, -(%ebp);movl , %esi;xorl %ebx, %ebx;cmpl %ebx, %edi": 1,
                "jmp - <.text+>;pushl $;movl -(%ebp), %ecx;calll  <.text+>;movl %eax, %ecx": 1,
                "movl -(%ebp), %ecx;calll  <.text+>;movl %eax, %ecx;calll - <.text+>;andl $, -(%ebp)": 1,
                "jmp  <.text+>;movl $, %ecx;calll  <.text+>;cmpl %ebx, %eax;je  <.text+>": 1,
                "cmpl %ebx, %eax;je  <.text+>;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl %ebx;pushl %ebx;pushl %ebx;pushl $": 2,
                "popl %esi;jne - <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "xorl %eax, %eax;leal -(%ebp), %edi;stosb %al, %es:(%edi);leal -(%ebp), %eax;pushl %eax": 4,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll *": 1,
                "pushl %eax;calll *(%ecx);andl $, (%esi);pushl $;movl %esi, %ecx": 1,
                "calll - <.text+>;movl (%esi), %eax;leal (%eax,%ecx,), %eax;popl %esi;popl %ebp": 1,
                "pushl %esi;movl (%eax), %esi;pushl %edi;movl %eax, %edi;jmp  <.text+>": 3,
                "movl %ecx, %esi;calll - <.text+>;cmpl (%esi), %eax;movl %eax, -(%ebp);je  <.text+>": 3,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;leal -(%ebp), %eax;jmp  <.text+>": 3,
                "andl $, -(%ebp);pushl %esi;pushl (%ebp);leal (%ebp), %ecx;calll - <.text+>": 1,
                "calll *(%ecx);movl %edi, (%esi);movl (%ebp), %esi;movl %esi, %ecx;calll  <.text+>": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;movl %eax, %ebx;movb $, -(%ebp)": 1,
                "movl (%ebx), %eax;cmpl %edi, %eax;je  <.text+>;movl (%eax), %eax;jmp  <.text+>": 1,
                "calll - <.text+>;movl %edi, -(%ebp);cmpl %edi, (%ebx);jne  <.text+>;cmpl %edi, (%ebx)": 1,
                "je  <.text+>;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <.text+>;movl %edi, -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll  <.text+>;movl %eax, -(%ebp);cmpl %edi, (%ebx);jne  <.text+>;cmpl %edi, (%ebx)": 1,
                "movl %eax, -(%ebp);movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>": 1,
                "calll *;movl %edi, -(%ebp);jmp  <.text+>;movl %esi, %ecx;calll  <.text+>": 1,
                "calll - <.text+>;movl (%esi), %eax;movl %eax, -(%ebp);movl $, %eax;retl": 5,
                "movb $, -(%ebp);leal (%esi), %eax;pushl %eax;pushl $;pushl $": 1,
                "calll  <.text+>;popl %ecx;popl %ecx;pushl %edi;pushl %edi": 17,
                "popl %ecx;pushl %edi;pushl %edi;pushl (%esi);pushl (%ebp)": 5,
                "calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %eax": 2,
                "leal -(%ebp), %ecx;calll  <.text+>;movl %esi, -(%ebp);calll *;movl %eax, %ebx": 1,
                "movl %esi, -(%ebp);calll *;movl %eax, %ebx;movb $, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%ebp), %ecx;calll  <.text+>;movl %eax, %ecx;calll - <.text+>;movl %eax, -(%ebp)": 3,
                "calll - <.text+>;movl %eax, -(%ebp);cmpl %esi, %eax;je  <.text+>;movl (%eax), %ecx": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl %esi;pushl %eax;calll *(%ecx)": 3,
                "pushl %eax;calll  <.text+>;movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %esi, %ecx": 2,
                "retl $;xorl %esi, %esi;cmpl %esi, -(%ebp);je  <.text+>;pushl -(%ebp)": 3,
                "je  <.text+>;pushl -(%ebp);calll *;movl %esi, -(%ebp);movl -(%ebp), %eax": 6,
                "calll *;movl %esi, -(%ebp);movl -(%ebp), %eax;pushl (%eax);calll  <.text+>": 2,
                "movl %ebx, -(%ebp);movl $, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp)": 2,
                "calll *%edi;movb $, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %edi;cmpl %ebx, %edi": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;popl %ecx": 2,
                "movl %eax, -(%ebp);pushl $;movl -(%ebp), %ecx;pushl (%ecx);pushl %eax": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 9,
                "calll *%esi;jmp  <.text+>;movl -(%ebp), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "pushl -(%ebp);movl -(%ebp), %ecx;calll  <.text+>;movl %eax, %ecx;calll - <.text+>": 4,
                "retl;xorl %ebx, %ebx;movl %ebx, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>": 2,
                "movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl , %esi;calll *%esi": 7,
                "pushl $;leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %eax;cmpl %edi, %eax": 1,
                "pushl %edi;leal -(%ebp), %esi;pushl %esi;pushl %edi;pushl %ecx": 1,
                "movl -(%ebp), %eax;cmpl %edi, %eax;jne  <.text+>;movl $, %eax;pushl %edx": 1,
                "jne  <.text+>;movl $, %eax;pushl %ecx;pushl %eax;pushl $": 1,
                "movl (%ebp), %ecx;calll - <.text+>;movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %edi, %ecx": 4,
                "calll - <.text+>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *%esi": 5,
                "movl -(%ebp), %eax;xorl %edi, %edi;cmpl %edi, %eax;je  <.text+>;movl (%eax), %ecx": 6,
                "pushl %eax;movl (%ebp), %ecx;calll - <.text+>;cmpl %esi, (%edi);jne  <.text+>": 1,
                "calll - <.text+>;cmpl %esi, (%edi);jne  <.text+>;pushl (%ebp);movl %edi, %ecx": 1,
                "pushl $;calll - <.text+>;movb $, -(%ebp);movl $, %ebx;pushl %ebx": 1,
                "calll - <.text+>;movb $, -(%ebp);movl $, %ebx;pushl %ebx;pushl $": 2,
                "je  <.text+>;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <.text+>;movl %esi, -(%ebp)": 2,
                "movl %esp, -(%ebp);pushl -(%ebp);calll - <.text+>;movb $, -(%ebp);pushl %ebx": 9,
                "calll - <.text+>;movb $, -(%ebp);pushl %ebx;pushl $;pushl -(%ebp)": 9,
                "calll  <.text+>;pushl -(%ebp);cmpl %esi, (%ebp);jne  <.text+>;leal -(%ebp), %ecx": 1,
                "testl %eax, %eax;jne  <.text+>;cmpl %esi, (%ebp);je  <.text+>;movl (%ebp), %edi": 1,
                "pushl $;movl %edi, %ecx;calll - <.text+>;jmp  <.text+>;pushl $": 3,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %esi;movl (%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %eax;negl %eax;sbbl %eax, %eax;andl $-, %eax": 1,
                "popl %ebx;leave;retl $;movl -(%ebp), %eax;xorl %esi, %esi": 2,
                "retl $;movl -(%ebp), %eax;xorl %esi, %esi;cmpl %esi, %eax;je  <.text+>": 2,
                "pushl -(%ebp);calll *;movl %esi, -(%ebp);movl $, %eax;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;movb $, -(%ebp);movl (%ebp), %esi": 1,
                "pushl %edi;pushl %eax;pushl %ecx;calll *(%edx);movl %eax, -(%ebp)": 1,
                "pushl %ecx;pushl $;pushl %eax;calll *;movl %eax, %ebx": 1,
                "pushl %eax;calll  <.text+>;movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl %edi, (%eax)": 1,
                "je  <.text+>;cmpw $, %ax;jne  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpw $, %ax;jne  <.text+>;leal -(%ebp), %eax;pushl %eax;jmp - <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;jmp - <.text+>;movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;calll *;movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %esp, -(%ebp);xorl %ebx, %ebx": 11,
                "movl (%esi), %eax;pushl %ebx;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;movl %edi, %ecx;calll  <.text+>": 1,
                "movl %ebx, -(%ebp);cmpl %ebx, -(%ebp);jne  <.text+>;pushl (%esi);calll  <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp);leal -(%ebp), %ecx;pushl %ecx": 24,
                "movl %ebx, -(%ebp);cmpl %ebx, (%ebp);je  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "stosw %ax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);movl -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp)": 2,
                "je  <.text+>;leal -(%ebp), %eax;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "cmpl %ebx, (%esi);jne  <.text+>;pushl %edi;movl %esi, %ecx;calll - <.text+>": 1,
                "cmpl %ebx, -(%ebp);jl  <.text+>;cmpl %ebx, (%esi);jne  <.text+>;pushl %ebx": 1,
                "jl  <.text+>;cmpl %ebx, (%esi);jne  <.text+>;pushl %ebx;pushl %edi": 1,
                "jl  <.text+>;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %eax": 1,
                "movl $, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl %eax, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;movl -(%ebp), %ecx;calll - <.text+>;movl %ebx, -(%ebp)": 5,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;xorl %eax, %eax;incl %eax": 2,
                "movl %eax, %ecx;calll - <.text+>;testl %eax, %eax;jne  <.text+>;movl $, -(%ebp)": 1,
                "jmp  <.text+>;xorl %eax, %eax;pushl %ebx;xorl %edi, %edi;incl %edi": 2,
                "leal -(%ebp), %eax;jne  <.text+>;movl %edi, -(%ebp);pushl %edi;pushl %eax": 1,
                "jmp  <.text+>;movl %ebx, -(%ebp);pushl %ebx;pushl %eax;calll  <.text+>": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp)": 3,
                "movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <.text+>;movl (%ecx), %ecx": 1,
                "cmpl %eax, -(%ebp);jne  <.text+>;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 2,
                "movl $, %ecx;calll  <.text+>;cmpl %edi, %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "xorl %eax, %eax;pushl %ebx;pushl $;pushl $;pushl $": 1,
                "calll  <.text+>;cmpl %ebx, -(%ebp);jl  <.text+>;cmpl $, -(%ebp);jne  <.text+>": 1,
                "movl %edi, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);xorl %esi, %esi;movl %esi, -(%ebp)": 2,
                "calll  <.text+>;movl %eax, %ecx;calll - <.text+>;movl %eax, -(%ebp);pushl $": 2,
                "cmpl %ebx, -(%ebp);jne  <.text+>;pushl %edi;movl -(%ebp), %ecx;calll - <.text+>": 1,
                "movl (%eax), %ecx;jmp  <.text+>;xorl %ecx, %ecx;movl -(%ebp), %eax;movl (%eax), %eax": 2,
                "pushl %eax;calll *(%edi);movl %eax, %ebx;movl %ebx, -(%ebp);movb $, -(%ebp)": 1,
                "calll *(%edi);movl %eax, %ebx;movl %ebx, -(%ebp);movb $, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;calll  <.text+>;movl %eax, %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "movl %eax, %ecx;calll - <.text+>;jmp  <.text+>;movl $, %eax;movl (%ebp), %ecx": 1,
                "movl %eax, %ecx;calll - <.text+>;pushl -(%ebp);movl %edi, %ecx;calll - <.text+>": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;xorl %esi, %esi;cmpl %esi, %eax;je  <.text+>": 1,
                "movl %ebx, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl %ebx, -(%ebp);calll *": 3,
                "movl %edi, %ecx;calll  <.text+>;pushl %eax;movl %edi, %ecx;calll  <.text+>": 9,
                "movb $, -(%ebp);calll  <.text+>;xorl %edi, %edi;incl %edi;cmpl %ebx, -(%ebp)": 1,
                "movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *;pushl $": 1,
                "pushl %edi;je  <.text+>;pushl $;calll  <.text+>;addl $, %esp": 1,
                "calll  <.text+>;movl (%esi), %eax;movl (%eax), %ecx;pushl %ebx;pushl %ebx": 1,
                "jne  <.text+>;cmpl %ebx, (%esi);je  <.text+>;pushl -(%ebp);pushl $": 1,
                "calll *(%ecx);movl %ebx, -(%ebp);pushl $;pushl %ebx;pushl %ebx": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %edi;movl -(%ebp), %esi;cmpl %ebx, (%esi);jne  <.text+>": 1,
                "movl $, -(%ebp);cmpl %ebx, -(%ebp);jl  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;pushl (%eax);calll  <.text+>;andl $, -(%ebp);movl $, %eax": 5,
                "pushl %ebx;pushl %edi;pushl (%ebp);pushl %esi;calll *": 1,
                "pushl %eax;calll  <.text+>;leal (%ebp), %eax;pushl %eax;calll  <.text+>": 2,
                "calll  <.text+>;leal (%ebp), %eax;pushl %eax;calll  <.text+>;pushl (%ebp)": 2,
                "orl $-, -(%ebp);movl (%ebp), %ecx;testl %ecx, %ecx;je  <.text+>;calll - <.text+>": 3,
                "calll - <.text+>;andl $, (%ebp);cmpl $, (%ebp);jne - <.text+>;pushl -(%ebp)": 1,
                "movl $, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp);leal -(%ebp), %eax": 3,
                "je  <.text+>;movl (%ebp), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %eax": 1,
                "xorl %eax, %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp)": 4,
                "calll - <.text+>;movb $, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp);movl (%eax), %eax": 2,
                "movl %esi, -(%ebp);movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx;je - <.text+>": 1,
                "movb $, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);pushl (%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);pushl (%ebp);movl %edi, %ecx": 1,
                "pushl $;calll  <.text+>;addl $, %esp;movb $, -(%ebp);movl -(%ebp), %ecx": 3,
                "je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;movl %ebx, -(%ebp)": 1,
                "pushl %ebx;pushl $;pushl %eax;calll  <.text+>;movb $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;cmpl $, %eax;jne  <.text+>": 3,
                "calll *;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %eax": 1,
                "calll  <.text+>;addl $, %esp;cmpl %ebx, -(%ebp);je  <.text+>;movl -(%ebp), %eax": 1,
                "je  <.text+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "jmp  <.text+>;xorl %eax, %eax;pushl %eax;jmp  <.text+>;pushl %ebx": 1,
                "pushl $;pushl %esi;calll *;popl %ecx;popl %ecx": 5,
                "popl %ecx;popl %ecx;testl %eax, %eax;jne  <.text+>;movb $, -(%ebp)": 2,
                "popl %ecx;testl %eax, %eax;jne  <.text+>;movb $, -(%ebp);pushl $": 2,
                "calll *;movl %ebx, -(%ebp);movl %ebx, -(%ebp);pushl $;leal -(%ebp), %eax": 3,
                "pushl %eax;pushl -(%ebp);movl %edi, %ecx;calll - <.text+>;movl -(%ebp), %eax": 2,
                "xorl %eax, %eax;movl (%ebp), %ecx;movl (%ecx), %edx;pushl %ebx;leal -(%ebp), %esi": 1,
                "calll - <.text+>;movl %ebx, -(%ebp);jmp - <.text+>;movb $, -(%ebp);leal -(%ebp), %ecx": 1,
                "pushl $;pushl $;jmp  <.text+>;pushl $;pushl (%ebp)": 1,
                "calll *(%ecx);movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *%esi": 2,
                "calll - <.text+>;movb $, -(%ebp);movl -(%ebp), %ebx;cmpl %esi, %ebx;je  <.text+>": 1,
                "pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %ebx;cmpl %esi, %ebx": 1,
                "movl (%eax), %edx;leal -(%ebp), %ebx;pushl %ebx;pushl %ecx;pushl %eax": 1,
                "pushl %ebx;calll  <.text+>;movl -(%ebp), %ebx;cmpl %esi, %ebx;je  <.text+>": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl (%eax), %eax;cmpl %esi, %eax": 3,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "movl (%eax), %eax;jmp  <.text+>;xorl %eax, %eax;movl (%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "movl -(%ebp), %edi;movl %edi, -(%ebp);movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp);movl (%eax), %eax;cmpl %ebx, %eax": 1,
                "addl $, %esi;pushl %esi;leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %esi": 2,
                "je  <.text+>;cmpl %edi, %esi;je  <.text+>;movl (%esi), %eax;cmpb %bl, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl %edi, -(%ebp);movl %ebx, -(%ebp);cmpl %edi, %esi;je  <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;movl -(%ebp), %eax": 1,
                "pushl %eax;movl (%ebp), %eax;pushl (%eax);calll *;movl $, -(%ebp)": 1,
                "calll *;movl $, -(%ebp);jmp  <.text+>;addl $, %esi;movl %esi, -(%ebp)": 1,
                "calll - <.text+>;movb $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movb %bl, -(%ebp)": 13,
                "movb %bl, -(%ebp);movl (%ebp), %ecx;cmpl %ebx, %ecx;je  <.text+>;calll - <.text+>": 1,
                "addl $, %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp)": 1,
                "addl $, %esp;pushl %ebx;pushl %ebx;pushl (%esi);movl (%ebp), %edi": 1,
                "pushl %ebx;pushl (%esi);movl (%ebp), %edi;pushl %edi;pushl -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;leal -(%ebp), %eax;pushl %eax;jne  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;jne  <.text+>;movl %ebx, -(%ebp);calll *%edi": 1,
                "pushl %eax;calll *(%ecx);movl %eax, -(%ebp);jmp - <.text+>;movl -(%ebp), %eax": 1,
                "calll *(%ecx);movl %eax, -(%ebp);jmp - <.text+>;movl -(%ebp), %eax;xorl %ebx, %ebx": 1,
                "pushl %edi;movl %esp, -(%ebp);movl %ecx, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "movb $, -(%ebp);movl %ebx, %ecx;calll  <.text+>;movb $, -(%ebp);movl %eax, %ecx": 1,
                "je - <.text+>;calll - <.text+>;movl %edi, -(%ebp);jmp - <.text+>;movb $, -(%ebp)": 1,
                "andl $, -(%ebp);movl $, %eax;retl;andl $, -(%ebp);movl $, %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl %esi, -(%ebp);calll *": 1,
                "movb $, -(%ebp);movl %esi, -(%ebp);movb $, -(%ebp);movl %edi, %ecx;calll  <.text+>": 1,
                "calll - <.text+>;movl %esi, -(%ebp);cmpb $, -(%ebp);je  <.text+>;pushl $": 1,
                "cmpb $, -(%ebp);je  <.text+>;pushl $;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movb $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);cmpl %eax, %esi;jne  <.text+>;xorl %esi, %esi": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl $;leal -(%ebp), %ecx;calll *": 2,
                "calll *;movl %eax, -(%ebp);movl , %ecx;cmpl (%ecx), %eax;jne  <.text+>": 2,
                "pushl %eax;calll *(%ecx);movl %eax, %edi;movl %edi, -(%ebp);movl -(%ebp), %ebx": 1,
                "jmp  <.text+>;xorl %eax, %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);leal -(%ebp), %ecx;calll *;movl -(%ebp), %eax;cmpl %esi, %eax": 1,
                "movl %esi, -(%ebp);pushl -(%ebp);movl %ebx, %ecx;calll - <.text+>;cmpl %edi, %eax": 1,
                "leal -(%ebp), %ecx;calll *;movl %eax, %edi;movl %edi, -(%ebp);movl , %eax": 1,
                "pushl %edi;pushl -(%ebp);pushl %eax;calll *;testl %eax, %eax": 1,
                "pushl -(%ebp);pushl -(%ebp);leal -(%ebp), %ecx;calll *;pushl (%esi)": 1,
                "xorl %esi, %esi;movl $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp)": 1,
                "calll - <.text+>;movb $, -(%ebp);leal -(%ebp), %ecx;calll *;movb $, -(%ebp)": 1,
                "je  <.text+>;calll - <.text+>;movl %esi, -(%ebp);orl $-, -(%ebp);leal -(%ebp), %ecx": 3,
                "pushl %edi;leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp);pushl %edi": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ecx": 1,
                "calll - <.text+>;movb $, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ecx;calll  <.text+>": 1,
                "movl (%ebp), %edi;movl %edi, %ecx;testl %eax, %eax;je  <.text+>;calll  <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;movl $, -(%ebp);movl (%ebp), %edi;jmp - <.text+>": 1,
                "movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %esi, %ecx;je  <.text+>;movl (%ecx), %ecx": 1,
                "jne  <.text+>;cmpl %esi, (%ebx);je  <.text+>;movl -(%ebp), %eax;cmpl %esi, %eax": 2,
                "calll  <.text+>;addl $, %esp;cmpl %esi, %edi;je  <.text+>;pushl %edi": 1,
                "cmpl $, -(%ebp);jne  <.text+>;movl %esi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "jmp - <.text+>;cmpl %esi, %eax;jge  <.text+>;pushl %eax;calll  <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movl %esi, %ecx;calll  <.text+>": 2,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl %esi;movl %edi, %ecx": 2,
                "jmp  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;pushl $;movl %esi, %ecx": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);addl $, %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "calll - <.text+>;movl $, -(%ebp);movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx": 1,
                "cmpl %ebx, (%edi);jne  <.text+>;cmpl %ebx, (%edi);je  <.text+>;movl (%ebp), %ecx": 1,
                "pushl %ebx;pushl %eax;calll *(%ecx);movl %eax, -(%ebp);cmpl %ebx, (%edi)": 2,
                "calll  <.text+>;movl %ebx, -(%ebp);cmpl $, -(%ebp);jne  <.text+>;leal -(%ebp), %eax": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);calll - <.text+>;testb %al, %al;jne - <.text+>": 1,
                "jne - <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <.text+>;movl -(%ebp), %eax": 1,
                "xorl %eax, %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 3,
                "leal -(%ebp), %ecx;calll - <.text+>;jmp - <.text+>;movl (%ebp), %ecx;calll  <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;testl %eax, %eax;je  <.text+>;movl %ebx, -(%ebp)": 1,
                "addl $, %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp)": 5,
                "jmp  <.text+>;movl -(%ebp), %eax;subl -(%ebp), %eax;sarl $, %eax;cmpl %eax, -(%ebp)": 1,
                "xorl %edi, %edi;incl %edi;movb $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;xorl %eax, %eax;jmp  <.text+>;movl -(%ebp), %ecx": 1,
                "pushl %edi;calll  <.text+>;cmpl $, -(%ebp);jne  <.text+>;movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %edi;movl %edi, %ecx": 1,
                "movb %bl, -(%ebp);calll  <.text+>;cmpl %ebx, -(%ebp);jge  <.text+>;pushl -(%ebp)": 1,
                "calll - <.text+>;movl %eax, -(%ebp);pushl $;cmpl %ebx, %eax;je  <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;pushl %edi;movl %esi, %ecx": 4,
                "int;movl $, (%ecx);jmp  <.text+>;int;int": 1,
                "pushl $;calll *;popl %ebp;retl $;int": 1,
                "pushl %esi;movl %ecx, %esi;pushl %esi;calll *;pushl (%ebp)": 1,
                "cmpl %edi, %eax;jne  <.text+>;andl $, (%esi);pushl %edi;movl %ebx, %ecx": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jge  <.text+>;pushl %eax;calll  <.text+>": 13,
                "cmpl %edi, (%esi);jne  <.text+>;movl (%ebp), %eax;movw $, (%eax);movl (%ebp), %ecx": 1,
                "movl $, %edi;xorl %eax, %eax;rep  cmpsl %es:(%edi), (%esi);je  <.text+>;movl (%ebp), %esi": 1,
                "movl $, %eax;jmp  <.text+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "jmp  <.text+>;movl (%eax), %ecx;movl (%ebp), %edx;addl $, (%ebp);movl %ecx, (%edx)": 1,
                "testl %eax, %eax;pushl %esi;pushl %edi;movl %ecx, %edi;je  <.text+>": 1,
                "je  <.text+>;movl (%eax), %esi;jmp  <.text+>;xorl %esi, %esi;pushl %esi": 1,
                "pushl %esi;calll *;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "movl %ecx, %esi;pushl %edi;leal (%esi), %ecx;movl %esi, -(%ebp);calll - <.text+>": 2,
                "movb $, -(%ebp);leal (%esi), %ecx;calll  <.text+>;movb $, -(%ebp);movl %edi, (%esi)": 1,
                "movl %ebx, (%esi);movl %ebx, (%esi);movl %ebx, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl %ebx, (%esi);movl (%esi), %eax": 2,
                "movl $, -(%ebp);pushl $;calll - <.text+>;movb $, -(%ebp);leal (%esi), %ecx": 1,
                "movl %edi, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl %eax, %ecx": 6,
                "jne  <.text+>;pushl %ebx;movl %edi, %ecx;calll  <.text+>;movl %eax, %ecx": 2,
                "jmpl *(,%ecx,);pushl $;jmp  <.text+>;pushl $;jmp  <.text+>": 1,
                "je  <.text+>;pushl (%ebp);pushl $;pushl %eax;calll *": 2,
                "pushl %eax;calll *;addl $, %esp;jmp  <.text+>;pushl $": 1,
                "jmp  <.text+>;pushl $;pushl %eax;calll *;popl %ecx": 1,
                "pushl -(%ebp);calll *;movl %ebx, -(%ebp);movl $, -(%ebp);pushl $": 1,
                "je  <.text+>;cmpl %ebx, (%esi);jne  <.text+>;movl -(%ebp), %eax;cmpl %ebx, %eax": 1,
                "pushl $;pushl %eax;calll  <.text+>;movl %edi, -(%ebp);pushl %edi": 1,
                "je  <.text+>;cmpl %ebx, (%esi);jne  <.text+>;pushl (%ebp);movl %edi, %ecx": 1,
                "cmpl %ebx, (%esi);jne  <.text+>;pushl (%ebp);movl %edi, %ecx;calll  <.text+>": 1,
                "pushl %ebx;pushl (%ebp);pushl $;pushl (%ebp);calll  <.text+>": 1,
                "movl %ecx, %esi;xorl %edi, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 2,
                "xorl %edi, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl (%esi), %eax": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "je  <.text+>;cmpl %edi, (%esi);je  <.text+>;cmpl -(%ebp), %eax;je  <.text+>": 1,
                "je  <.text+>;calll - <.text+>;movl %edi, -(%ebp);addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "xorl %eax, %eax;leal (%esi), %ebx;pushl %eax;pushl (%ebp);movl %ebx, %ecx": 1,
                "calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl %eax, (%esi);movl %edi, (%esi)": 3,
                "movl %edi, (%esi);pushl $-;calll *;movl %eax, -(%ebp);movl , %ebx": 1,
                "movl %eax, -(%ebp);movswl -(%ebp), %ecx;movl %ecx, -(%ebp);jmp  <.text+>;xorl %eax, %eax": 1,
                "calll *;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "popl %ecx;fiaddl -(%ebp);calll  <.text+>;movl %eax, -(%ebp);pushl %edi": 1,
                "pushl %edi;pushl %edi;pushl $;movl -(%ebp), %eax;pushl (%eax)": 1,
                "movl %edi, %ecx;calll - <.text+>;cmpl $, (%edi);jne  <.text+>;cmpl %esi, %ebx": 3,
                "pushl $;movl %edi, %ecx;calll - <.text+>;cmpl %esi, (%ebp);jne  <.text+>": 1,
                "cmpl %esi, %ebx;je  <.text+>;movl (%ebx), %eax;jmp  <.text+>;cmpl %esi, %ebx": 1,
                "movl %esi, (%ebp);movl -(%ebp), %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %esi;pushl $;movl $, %edi;pushl %edi;movl %ecx, %ebx": 8,
                "pushl %esi;pushl %esi;pushl $;pushl $;movl %ebx, %ecx": 171,
                "je  <.text+>;pushl %esi;pushl %esi;pushl $;pushl %edi": 19,
                "calll - <.text+>;cmpl %esi, ;je  <.text+>;pushl %esi;pushl %esi": 1,
                "pushl $;pushl %edi;movl %ebx, %ecx;calll - <.text+>;movl , %ecx": 1,
                "movl %ebx, %ecx;calll - <.text+>;movl , %ecx;movl (%ecx), %eax;cmpl %ecx, %eax": 1,
                "xorl %eax, %eax;pushl %ebx;pushl %ebx;pushl $;pushl $": 2,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;pushl %eax": 2,
                "pushl %ebx;pushl $;pushl $;pushl %eax;calll  <.text+>": 1,
                "orl $-, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <.text+>;calll - <.text+>": 8,
                "movl %eax, %ecx;calll  <.text+>;pushl %eax;xorl %edi, %edi;incl %edi": 1,
                "calll  <.text+>;testl %eax, %eax;movl %ebx, %ecx;pushl %esi;je  <.text+>": 1,
                "pushl $;jmp  <.text+>;pushl $;pushl %edi;pushl $": 1,
                "movl , %eax;cmpl (%eax), %esi;je  <.text+>;movl (%ebp), %ecx;movl %esi, %eax": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll *;leal (%esi), %ebx;movl %edi, %ecx": 1,
                "pushl $;movl %ecx, %edi;calll - <.text+>;pushl (%ebp);calll  <.text+>": 1,
                "movl %ecx, %edi;calll - <.text+>;pushl (%ebp);calll  <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;pushl (%ebp);calll  <.text+>;testl %eax, %eax;pushl %esi": 2,
                "je  <.text+>;pushl $;jmp  <.text+>;pushl $;calll - <.text+>": 10,
                "testl %eax, %eax;pushl %esi;pushl %esi;movl %ebx, %ecx;pushl $": 1,
                "movl %ebx, %ecx;calll - <.text+>;movl (%ebp), %ecx;pushl $;calll  <.text+>": 8,
                "movl %edi, %ecx;calll - <.text+>;pushl %ebx;pushl %ebx;pushl $": 5,
                "movl (%esi), %eax;jmp  <.text+>;xorl %eax, %eax;pushl %eax;calll *": 1,
                "movl %esi, %ecx;calll - <.text+>;jmp  <.text+>;pushl $;calll - <.text+>": 2,
                "movl %ebx, -(%ebp);pushl %ebx;leal (%ebp), %eax;pushl %eax;pushl %ebx": 2,
                "pushl %ecx;leal (%ebp), %eax;movl %esp, %ecx;movl %esp, -(%ebp);pushl %eax": 2,
                "pushl $;pushl %esi;movl %edi, %ecx;calll - <.text+>;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %ecx;calll  <.text+>;movl %eax, %ecx": 2,
                "movb $, -(%ebp);movb %bl, -(%ebp);movl %edi, %ecx;calll - <.text+>;pushl %ebx": 1,
                "pushl $;movl %edi, %ecx;calll - <.text+>;orl $-, -(%ebp);movl -(%ebp), %ecx": 1,
                "calll  <.text+>;movl %eax, %ecx;calll - <.text+>;pushl $;pushl %eax": 1,
                "pushl $;movl $, %edi;pushl %edi;movl %ebx, %ecx;calll - <.text+>": 2,
                "movl -(%ebp), %ecx;pushl %esi;pushl %esi;pushl $;pushl $": 2,
                "int;movl $, %eax;calll  <.text+>;subl $, %esp;movl (%ebp), %ecx": 2,
                "pushl %esi;calll  <.text+>;movl %eax, %ecx;calll - <.text+>;pushl %eax": 1,
                "movl %esi, -(%ebp);je  <.text+>;pushl %edi;movl (%esi), %eax;testl %eax, %eax": 1,
                "testl %esi, %esi;je  <.text+>;movl (%esi), %esi;jmp  <.text+>;xorl %esi, %esi": 1,
                "movl (%eax), %edx;leal -(%ebp), %esi;pushl %esi;pushl %ecx;pushl %eax": 1,
                "jne  <.text+>;cmpl %ebx, (%edi);je  <.text+>;pushl %ebx;pushl %ebx": 10,
                "pushl %edx;pushl -(%ebp);pushl %eax;calll *(%ecx);movl %eax, -(%ebp)": 4,
                "calll *;movl -(%ebp), %edi;cmpl %ebx, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "je  <.text+>;pushl -(%ebp);calll *;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl %ebx, -(%ebp);movb %bl, -(%ebp);cmpl %ebx, -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;addl $, %esi;pushl %esi": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %ecx;testl %ecx, %ecx;je  <.text+>": 1,
                "movl %edi, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *": 2,
                "movl , %eax;movl (%ebp), %edx;pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;movl %edx, -(%ebp);stosw %ax, %es:(%edi);calll  <.text+>": 1,
                "stosw %ax, %es:(%edi);calll  <.text+>;movl %eax, %ecx;calll - <.text+>;pushl %eax": 1,
                "je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %esi;cmpl -(%ebp), %esi": 1,
                "pushl %ebx;pushl $;movl $, %esi;pushl %esi;movl %eax, -(%ebp)": 1,
                "je  <.text+>;movl (%edi), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %eax": 1,
                "calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl $, %esi;xorl %edi, %edi": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;pushl %ebx;pushl %ebx": 1,
                "pushl %edi;pushl %esi;cmpl %ebx, %eax;jne  <.text+>;calll - <.text+>": 1,
                "movl %eax, -(%ebp);cmpl %eax, -(%ebp);je - <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "movl %edi, -(%ebp);cmpl %edi, -(%ebp);je  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "rep  stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "jmp  <.text+>;xorl %eax, %eax;pushl %ecx;pushl %eax;pushl $": 1,
                "pushl %eax;leal (%esi), %ecx;calll - <.text+>;leal (%edi), %eax;pushl %eax": 3,
                "movl %esi, -(%ebp);xorl %eax, %eax;incl %eax;movl %eax, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl (%ebp), %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;movl %eax, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);je  <.text+>": 1,
                "xorl %esi, %esi;pushl %esi;pushl %eax;calll *(%ecx);movl %eax, %edi": 1,
                "subl $, %esp;movl %eax, %esi;movl %esp, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 3,
                "calll - <.text+>;movl %eax, -(%ebp);testl %eax, %eax;jge  <.text+>;pushl %eax": 12,
                "pushl %eax;calll *;pushl %eax;calll - <.text+>;andl $, -(%ebp)": 1,
                "pushl $;pushl $;pushl (%ebx);pushl (%ebp);pushl -(%ebp)": 2,
                "jne  <.text+>;cmpl $, (%ebx);jne  <.text+>;andw $, -(%ebp);movl -(%ebp), %eax": 1,
                "calll *(%ecx);movl %eax, -(%ebp);xorl %edi, %edi;cmpl %edi, (%ebx);jne  <.text+>": 1,
                "pushl $;calll *;movl %eax, -(%ebp);cmpl %edi, (%ebx);jne  <.text+>": 1,
                "calll *;jmp  <.text+>;xorl %edi, %edi;movl -(%ebp), %eax;cmpl %edi, %eax": 1,
                "calll *(%ecx);movl %edi, -(%ebp);movl -(%ebp), %eax;testl %eax, %eax;je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;movl -(%ebp), %eax;testl %eax, %eax": 2,
                "incl %edi;movl %edi, -(%ebp);calll *;movl %eax, -(%ebp);movl $, %ecx": 1,
                "movl %eax, -(%ebp);movl $, %ecx;calll  <.text+>;cmpl %edi, %eax;jne  <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;testl %eax, %eax": 9,
                "jge  <.text+>;pushl %edi;calll  <.text+>;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %esi, %ecx;calll - <.text+>;movl $, -(%ebp);cmpl %ebx, (%esi);je  <.text+>": 1,
                "cmpl %ebx, (%esi);jne  <.text+>;leal -(%ebp), %ecx;calll *;pushl %eax": 1,
                "stosw %ax, %es:(%edi);movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movb $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %edi;cmpl %ebx, -(%ebp)": 1,
                "pushl $;calll - <.text+>;pushl %ebx;pushl %ebx;pushl %esi": 2,
                "addl $, %esp;pushl %ebx;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %esi;pushl $;movl -(%ebp), %ecx;calll - <.text+>": 2,
                "pushl %esi;pushl $;movl -(%ebp), %ecx;calll - <.text+>;jmp  <.text+>": 1,
                "movl -(%ebp), %esi;movl %esi, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;cmpl %esi, %eax": 1,
                "cmpl %esi, %eax;je  <.text+>;leal -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;calll  <.text+>;testl %eax, %eax": 1,
                "jne  <.text+>;pushl (%esi);cmpl %ebx, -(%ebp);jne  <.text+>;leal -(%ebp), %ecx": 1,
                "pushl %ebx;pushl %eax;pushl $;pushl $;jmp  <.text+>": 1,
                "xorl %esi, %esi;testl %eax, %eax;movl $, %edi;movl %ebx, %ecx;pushl %esi": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl (%ebp), %ecx;calll  <.text+>": 1,
                "movl %edi, %ecx;calll - <.text+>;popl %esi;popl %ebx;pushl (%ebp)": 1,
                "movl %esi, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;pushl %esi;pushl %esi;pushl $;testl %eax, %eax": 2,
                "pushl $;testl %eax, %eax;je  <.text+>;pushl $;jmp  <.text+>": 2,
                "pushl %ebx;movl -(%ebp), %ecx;calll - <.text+>;cmpl %esi, -(%ebp);jne  <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp);movl %esi, -(%ebp);movl $, %ecx": 1,
                "movl %eax, -(%ebp);cmpl %eax, %edi;je  <.text+>;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl $, -(%ebp)": 3,
                "testl %eax, %eax;jne  <.text+>;movl $, -(%ebp);pushl $;leal -(%ebp), %eax": 7,
                "jmp  <.text+>;cmpl $, -(%ebp);jne  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "pushl %eax;movl , %edi;calll *%edi;addl $, %esp;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;calll - <.text+>;movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %esi, %ecx": 1,
                "cmpl %eax, %edi;jne  <.text+>;movl -(%ebp), %eax;cmpl %esi, %eax;je  <.text+>": 1,
                "calll - <.text+>;movl %eax, %edi;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;movl -(%ebp), %ecx;calll - <.text+>;pushl %esi;pushl %esi": 1,
                "movl -(%ebp), %ecx;calll - <.text+>;cmpl %edi, -(%ebp);jne  <.text+>;pushl %esi": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movl %edi, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edi": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %ecx;movl %ecx, %fs:;movl -(%ebp), %ecx": 1,
                "pushl (%ebp);movl %edi, %ecx;calll - <.text+>;popl %edi;popl %esi": 1,
                "movl (%ebp), %esi;pushl %edi;movl %ecx, %edi;pushl $;movl %esi, %ecx": 1,
                "pushl $;pushl $;pushl $;pushl $;movl %edi, %ecx": 2,
                "je  <.text+>;pushl %esi;movl %edi, %ecx;calll - <.text+>;popl %edi": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;movl %ecx, %edi;movl %ebx, %ecx": 1,
                "movl %eax, %ecx;calll - <.text+>;movl %ebx, %ecx;movl %eax, (%edi);calll  <.text+>": 2,
                "movl %edi, %ecx;calll - <.text+>;pushl $;movl %ebx, %ecx;calll  <.text+>": 1,
                "movl %eax, (%esi);pushl $;movl %edi, %ecx;calll  <.text+>;movl %eax, %ecx": 1,
                "calll  <.text+>;movl %eax, (%esi);movl %ebx, (%esi);movl %edi, %ecx;calll  <.text+>": 1,
                "calll - <.text+>;movl %edi, %ecx;cmpl $, %eax;jne  <.text+>;calll  <.text+>": 2,
                "calll  <.text+>;movl %eax, %ecx;calll - <.text+>;pushl %eax;movl %esi, %ecx": 3,
                "pushl %eax;movl %esi, %ecx;calll - <.text+>;cmpl %ebx, (%esi);je  <.text+>": 3,
                "leal -(%ebp), %ecx;calll  <.text+>;pushl %ebx;movl %edi, %ecx;calll  <.text+>": 2,
                "calll - <.text+>;movb $, -(%ebp);pushl $;pushl $;pushl $-": 2,
                "je  <.text+>;calll  <.text+>;movl %eax, %ecx;calll - <.text+>;pushl %edi": 1,
                "movb $, -(%ebp);calll  <.text+>;cmpl %ebx, (%esi);je  <.text+>;movl $, %ecx": 1,
                "cmpl %ebx, (%esi);je  <.text+>;movl $, %ecx;calll  <.text+>;movl %eax, %esi": 1,
                "leal (%esi), %ecx;calll  <.text+>;pushl $;pushl %ebx;movl %ebx, (%esi)": 1,
                "movl %ebx, (%esi);movb %bl, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;orl $-, -(%ebp)": 1,
                "movl $, %eax;retl;pushl -(%ebp);movl , %esi;calll *%esi": 5,
                "retl;pushl -(%ebp);movl , %esi;calll *%esi;pushl -(%ebp)": 4,
                "pushl -(%ebp);calll *%esi;andl $, -(%ebp);movl $, %eax;retl": 3,
                "movl $, %edi;pushl %edi;pushl (%esi);calll  <.text+>;testl %eax, %eax": 1,
                "pushl %eax;calll *;movl %ebx, (%esi);jmp  <.text+>;andl $, -(%ebp)": 1,
                "calll  <.text+>;andl $, (%esi);popl %ecx;pushl %ebx;calll *": 1,
                "calll *;movl %edi, (%esi);movl %edi, (%esi);jmp  <.text+>;andl $, -(%ebp)": 1,
                "movl %edi, (%esi);jmp  <.text+>;andl $, -(%ebp);movl -(%ebp), %eax;popl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 3,
                "movl , %eax;pushl %ebx;pushl %esi;xorl %ebx, %ebx;pushl %edi": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %edi;pushl (%esi)": 1,
                "addl $, %esp;leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll  <.text+>": 1,
                "pushl %ecx;pushl %eax;calll *;movl %ebx, (%esi);movl %ebx, (%esi)": 1,
                "movl %ebx, (%esi);movl %ebx, (%esi);movl %ebx, (%esi);jmp  <.text+>;andl $, -(%ebp)": 1,
                "jmp  <.text+>;pushl (%esi);calll *;leal (%eax,%eax), %eax;pushl %eax": 1,
                "jmp  <.text+>;xorl %ebx, %ebx;popl %edi;popl %esi;movl %ebx, %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);movl (%ebp), %eax": 2,
                "je  <.text+>;leal (%edi), %esi;movl (%esi), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl %ecx, %esi;incl %edi;cmpl $, (%esi);jne  <.text+>;pushl $": 1,
                "pushl (%esi);calll *;addl $, %esp;incl (%esi);jmp  <.text+>": 1,
                "movl $, -(%ebp);calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %ebx;calll *": 1,
                "jne  <.text+>;pushl %ebx;calll *;leal (%eax,%eax), %eax;pushl %eax": 1,
                "pushl %eax;calll  <.text+>;andl $, (%esi);popl %ecx;pushl (%esi)": 1,
                "calll  <.text+>;andl $, (%esi);popl %ecx;pushl (%esi);movl , %edi": 1,
                "movl (%esi), %ecx;testl %ecx, %ecx;movl %eax, (%esi);je  <.text+>;movl , %ebx": 1,
                "testl %edi, %edi;popl %ecx;movl %edi, -(%ebp);je  <.text+>;pushl (%esi)": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);xorl %edi, %edi;movl %ecx, %esi": 2,
                "incl %edi;calll *;pushl %eax;leal (%ebp), %ecx;calll - <.text+>": 2,
                "movl %edi, %edi;pushl %esi;pushl %edi;movl %ecx, %esi;leal (%esi), %eax": 1,
                "movl %edi, %eax;popl %edi;popl %esi;retl;int": 2,
                "pushl %edi;movl %esp, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);cmpl %ebx, (%ecx)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);cmpl %ebx, (%ecx);je  <.text+>;pushl $": 1,
                "andl $, -(%ebp);movl (%ecx), %eax;subl $, %eax;je  <.text+>;decl %eax": 1,
                "testl %eax, %eax;je  <.text+>;pushl %eax;jmp  <.text+>;pushl $": 1,
                "jne  <.text+>;movl (%ecx), %eax;cmpl %ebx, %eax;jne  <.text+>;pushl $": 1,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;pushl (%ecx);leal -(%ebp), %ecx": 1,
                "movl %esi, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);cmpl %ebx, ;je  <.text+>": 1,
                "movl %eax, (%esi);cmpl %ebx, %eax;jne  <.text+>;movl $, -(%ebp);pushl $": 6,
                "movl $, -(%ebp);pushl $;leal -(%ebp), %eax;jmp  <.text+>;calll  <.text+>": 1,
                "leal -(%ebp), %eax;jmp  <.text+>;calll  <.text+>;movzwl %ax, %eax;pushl %eax": 1,
                "retl;xorl %ebx, %ebx;movl -(%ebp), %esi;orl $-, -(%ebp);movl %ebx, (%esi)": 1,
                "popl %ecx;movl %edi, (%ebx);leal (%esi), %ecx;movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movl %edi, (%esi);movl %edi, (%esi);movl $, (%esi);movl $, (%esi);movl %edi, (%esi)": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl %edi;leal -(%ebp), %eax": 1,
                "movl %eax, (%esi);movl %eax, (%esi);movl %edi, (%esi);movl %eax, (%esi);movl $, (%esi)": 1,
                "int;int;int;xorl %eax, %eax;movl %eax, (%ecx)": 1,
                "cmpl $, %eax;ja  <.text+>;jmpl *(,%eax,);movl (%ebp), %eax;movl %eax, (%ecx)": 1,
                "popl %ebx;cltd;addb (%ecx), %al;rcrl $, -(%eax);addl %edx, %edi": 1,
                "cltd;addb (%ecx), %al;jo - <.text+>;addb (%ecx), %al;jnp - <.text+>": 1,
                "addb (%ecx), %al;cmpsl %es:(%edi), (%esi);cltd;addb (%ecx), %al;movl $, %ebp": 1,
                "movl $, %ebp;cltd;addb (%ecx), %al;enter $, $;rcrl %cl, -(%ecx)": 1,
                "addb (%ecx), %al;enter $, $;rcrl %cl, -(%ecx);addb (%ecx), %al;jmp -": 1,
                "addb (%ecx), %al;jmp -;cltd;addb (%ecx), %al;hlt": 1,
                "addb (%ecx), %al;orb -(%edx), %bl;addb (%ecx), %al;andb %bl, -(%edx);addb (%ecx), %al": 1,
                "lcalll $, $;xchgl %edi, %eax;lcalll $, $;sbbl $, -(%edx);addb (%ecx), %al": 1,
                "xchgl %edi, %eax;lcalll $, $;sbbl $, -(%edx);addb (%ecx), %al;lodsl (%esi), %eax": 1,
                "cmpl $, %edx;ja  <.text+>;jmpl *(,%edx,);movl (%ecx), %eax;jmp  <.text+>": 1,
                "retl $;sbbl (%edx,%eax), %ebx;addl %esi, -(%ebx);wait;addb (%ecx), %al": 1,
                "wait;addb (%ecx), %al;addl (%edx,%eax), %ebx;addl %esp, (%edx);pushfl": 1,
                "incl %edx;pushfl;addb (%ecx), %al;popl %edx;pushfl": 1,
                "bound (%edx,%eax), %ebx;addl %ecx, -(%edx);addb (%ecx), %al;pushl $-;addb (%ecx), %al": 1,
                "addb (%ecx), %al;int;pushfl;addb (%ecx), %al;aam $-": 1,
                "hlt;pushfl;addb (%ecx), %al;fcompl (%edx,%eax);addl %ebp, %esp": 1,
                "cld;pushfl;addb (%ecx), %al;addb $-, %al;addb (%ecx), %al": 1,
                "movl %ecx, %esi;movl %esi, -(%ebp);calll - <.text+>;andl $, -(%ebp);leal (%esi), %ecx": 1,
                "movl %ecx, %esi;calll - <.text+>;testl %eax, %eax;je  <.text+>;leal (%esi), %ecx": 6,
                "je  <.text+>;movl %esi, %ecx;popl %esi;jmp - <.text+>;movl %esi, %ecx": 1,
                "popl %esi;jmp - <.text+>;leal (%esi), %eax;popl %esi;retl": 1,
                "calll - <.text+>;popl %esi;popl %ebp;retl $;int": 3,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;leal (%ecx), %esi;movl %esi, %ecx": 1,
                "movl %esp, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %eax;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "stosw %ax, %es:(%edi);movl $, %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "andl %ebx, -(%ebp);andl $, -(%ebp);cmpl $, -(%ebp);jne  <.text+>;pushl %edi": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);testl %edi, %edi;je  <.text+>;pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%ebx;andl $, -(%ebp);jmp - <.text+>": 1,
                "pushl %edi;pushl $;movl %eax, -(%ebp);calll - <.text+>;movl %eax, %ecx": 1,
                "popl %ecx;movl (%ebp), %ecx;jne  <.text+>;pushl $;calll - <.text+>": 2,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;movl -(%ebp), %eax;cmpl (%ebp), %eax": 1,
                "cmpl $, (%ebp);jne  <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;movl %eax, (%ebp);je  <.text+>;calll  <.text+>": 1,
                "je  <.text+>;pushl %ebx;calll  <.text+>;movl (%ebp), %ecx;pushl %eax": 1,
                "calll - <.text+>;pushl %ebx;calll *%edi;movl $, (%esp);jmp  <.text+>": 1,
                "movl $, (%esp);jmp  <.text+>;pushl $;pushl (%ebp);calll *%esi": 1,
                "movb $-, (%ebp);calll *;movl (%ebp), %ecx;addl $, %esp;pushl $": 1,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;testl %eax, %eax;movl %esi, %ecx": 1,
                "movl %eax, %ecx;calll - <.text+>;xorl %eax, %eax;popl %esi;popl %ebp": 1,
                "calll - <.text+>;xorl %eax, %eax;popl %ebp;retl $;int": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;pushl %esi;pushl %ebx": 2,
                "jne  <.text+>;movl (%ebp), %ecx;incl %eax;pushl %eax;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);calll - <.text+>;movl %eax, %ecx;calll - <.text+>;movl (%esi), %eax": 2,
                "jmp  <.text+>;movl %ebx, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;pushl $;pushl (%ebp)": 4,
                "calll  <.text+>;testl %eax, %eax;movl (%ebp), %ecx;je  <.text+>;pushl $": 1,
                "leal (%edi), %esi;movl %esi, %ecx;pushl %ebx;calll - <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;testl %eax, %eax;jge  <.text+>;movl $, (%ebp);jmp  <.text+>": 2,
                "pushl $;jmp  <.text+>;movl (%ebp), %ecx;pushl $;calll - <.text+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $": 1,
                "calll - <.text+>;xorl %esi, %esi;jmp  <.text+>;pushl $;pushl (%ebp)": 1,
                "movl %eax, %esi;popl %edi;movl %esi, %eax;popl %esi;popl %ebp": 1,
                "cmpl $, %esi;jne  <.text+>;movl (%ebx), %eax;pushl $;pushl (%eax)": 1,
                "testl %eax, %eax;je  <.text+>;movl (%ebx), %eax;pushl (%eax);calll  <.text+>": 2,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;xorl %esi, %esi;popl %edi": 2,
                "popl %edi;movl %esi, %eax;popl %esi;popl %ebx;leave": 1,
                "popl %ebx;leave;retl $;pushl $;popl %esi": 1,
                "popl %esi;jmp - <.text+>;movl (%ebx), %eax;pushl (%eax);calll  <.text+>": 1,
                "movl (%ebx), %eax;pushl (%eax);calll  <.text+>;testl %eax, %eax;pushl (%ebp)": 1,
                "movl %eax, %ecx;calll - <.text+>;pushl %esi;pushl (%ebp);movl %edi, %ecx": 1,
                "movl %edi, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;jmp - <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;jmp - <.text+>;int;int": 1,
                "movl $, %edi;pushl %edi;pushl $;pushl (%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);pushl %esi;pushl (%ebp);calll - <.text+>;cmpl $, %eax": 1,
                "movl (%ebp), %ecx;addl $, %eax;cmpl (%ecx), %eax;jae  <.text+>;pushl $": 3,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;addl $, (%esi);xorl %edi, %edi": 1,
                "pushl %edi;pushl (%ebp);pushl $;pushl %esi;pushl (%ebp)": 3,
                "cmpl $, (%ebp);jne  <.text+>;movl -(%ebp), %ecx;pushl %edi;pushl (%ebp)": 2,
                "testl %eax, %eax;je  <.text+>;movl (%esi), %eax;addl $, %eax;cmpl (%edi), %eax": 1,
                "calll - <.text+>;pushl (%ebp);jmp  <.text+>;andl $, (%ebp);pushl $": 1,
                "testl %eax, %eax;jne - <.text+>;cmpl $, (%ebp);jne  <.text+>;movl (%ebp), %ecx": 1,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;jmp  <.text+>;cmpl $, (%ebp)": 1,
                "calll - <.text+>;movl %eax, -(%ebp);jmp - <.text+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl %edi, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;testl %eax, %eax": 30,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;xorl %ebx, %ebx;movl -(%ebp), %ecx": 2,
                "jne  <.text+>;movl (%esi), %eax;pushl $;pushl (%eax);calll  <.text+>": 5,
                "movl %edi, %ecx;pushl $;calll - <.text+>;movl %eax, %ecx;calll - <.text+>": 6,
                "movl (%esi), %eax;pushl %edi;pushl $;popl %edi;pushl (%eax)": 1,
                "pushl %edi;pushl $;popl %edi;pushl (%eax);movl %ecx, -(%ebp)": 1,
                "pushl $;popl %edi;pushl (%eax);movl %ecx, -(%ebp);calll  <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %edi;pushl %ebx": 1,
                "testl %eax, %eax;movl %edi, %ecx;jne  <.text+>;calll - <.text+>;movl %eax, %ecx": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movl -(%ebp), %ecx;leal -(%ebp), %eax": 1,
                "calll - <.text+>;xorl %edi, %edi;movl %edi, %eax;popl %edi;popl %esi": 1,
                "movl %edi, %eax;popl %edi;popl %esi;leave;retl $": 1,
                "xorl %eax, %eax;jmp  <.text+>;movl (%esi), %eax;pushl $;pushl (%eax)": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $": 1,
                "movl (%ebp), %esi;pushl %edi;pushl $;pushl $;pushl $": 1,
                "pushl $;pushl (%ebp);movl %ecx, %ebx;pushl %esi;pushl (%ebp)": 1,
                "movl %ecx, %ebx;pushl %esi;pushl (%ebp);calll - <.text+>;cmpl $, %eax": 1,
                "pushl (%ebp);movl %ebx, %ecx;pushl $;pushl %esi;pushl (%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;jge  <.text+>;pushl $;popl %esi": 3,
                "pushl $;pushl (%ebp);movl %ebx, %ecx;pushl %edi;pushl (%ebp)": 2,
                "pushl %esi;jmp  <.text+>;pushl $;movl (%ebp), %ecx;calll - <.text+>": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;movl %ecx, -(%ebp)": 1,
                "je  <.text+>;pushl $;jmp  <.text+>;movl (%esi), %eax;pushl $": 2,
                "calll  <.text+>;testl %eax, %eax;movl %edi, %ecx;je  <.text+>;pushl $": 5,
                "pushl $;pushl $;calll - <.text+>;movl %eax, %ecx;calll - <.text+>": 4,
                "cmpl %ebx, %ecx;je  <.text+>;movl -(%ebp), %eax;subl %ecx, %eax;sarl $, %eax": 1,
                "je  <.text+>;movl -(%ebp), %eax;subl %ecx, %eax;sarl $, %eax;cmpl $, %eax": 1,
                "movl %esi, %ecx;calll - <.text+>;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>": 4,
                "orl $, -(%ebp);movl %eax, %edi;movl %edi, -(%ebp);movl %esi, %ecx;calll - <.text+>": 1,
                "pushl %eax;pushl %edx;pushl %ecx;movl -(%ebp), %eax;leal (%eax), %edi": 1,
                "pushl %ecx;movl -(%ebp), %eax;leal (%eax), %edi;pushl %edi;pushl (%eax)": 1,
                "jge  <.text+>;pushl -(%ebp);calll  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "movl %esi, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;jmp  <.text+>": 4,
                "calll *(%ecx);movl %eax, -(%ebp);cmpl %ebx, -(%ebp);je  <.text+>;movl $, %esi": 1,
                "movl %ebx, -(%ebp);pushl $;leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp)": 2,
                "je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;movl (%ebp), %ecx": 1,
                "pushl $;calll - <.text+>;leal -(%ebp), %eax;pushl %eax;calll *%esi": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %edi;cmpl %ebx, %edi": 1,
                "popl %ebx;leave;retl $;cmpl %ebx, (%ecx);je - <.text+>": 1,
                "cmpl %ebx, -(%ebp);je - <.text+>;movl %ebx, -(%ebp);movb $, -(%ebp);cmpl %ebx, (%ebp)": 1,
                "je  <.text+>;calll - <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;pushl %edi": 1,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "calll - <.text+>;movl %ebx, -(%ebp);jmp - <.text+>;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *%esi;movb %bl, -(%ebp)": 4,
                "movzwl -(%ebp), %ecx;movl %ecx, %eax;shrl $, %eax;movb %al, -(%ebp);movb %cl, -(%ebp)": 1,
                "movl %ecx, %eax;shrl $, %eax;movb %al, -(%ebp);movb %cl, -(%ebp);xorl %edx, %edx": 1,
                "addl $, %esp;cmpl $, (%ebp);jne  <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "jne  <.text+>;testl %eax, %eax;je  <.text+>;pushl %edi;leal -(%ebp), %eax": 1,
                "testl %eax, %eax;je  <.text+>;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %ebx;pushl $;calll *;leal -(%ebp), %eax": 1,
                "testb $, (%eax);je  <.text+>;pushl $;pushl (%ebp);calll *": 1,
                "popl %ecx;popl %ecx;testl %eax, %eax;je  <.text+>;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %esi;movl (%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 2,
                "pushl $;calll  <.text+>;popl %ecx;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;pushl $;movl -(%ebp), %ecx": 3,
                "andl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *;movl %eax, -(%ebp)": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *%ebx;cmpw $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal (%edi), %ecx;calll - <.text+>": 2,
                "pushl -(%ebp);leal (%edi), %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>": 3,
                "pushl $;calll  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll *%ebx;leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;jmp  <.text+>;movl %edi, %ecx;calll - <.text+>;movl %eax, %ecx": 3,
                "movl %eax, %ecx;calll - <.text+>;cmpl $, %eax;jne  <.text+>;pushl $": 1,
                "calll - <.text+>;cmpl $, %eax;jne  <.text+>;pushl $;pushl -(%ebp)": 1,
                "movl -(%ebp), %ecx;calll - <.text+>;movl %eax, %ebx;movl %ebx, -(%ebp);cmpl $, %ebx": 2,
                "movl %eax, %ebx;movl %ebx, -(%ebp);cmpl $, %ebx;jne  <.text+>;andl $, -(%ebp)": 1,
                "cmpl $, %ebx;jne  <.text+>;andl $, -(%ebp);andl $, -(%ebp);andl $, -(%ebp)": 1,
                "pushl -(%ebp);movl (%esi), %eax;pushl (%eax);calll *;movb $, -(%ebp)": 1,
                "orl $-, -(%ebp);movl (%esi), %eax;movl (%eax), %eax;cmpw $, (%eax);jne  <.text+>": 1,
                "jne  <.text+>;pushl %edi;pushl %esi;pushl (%ebp);movl -(%ebp), %ecx": 1,
                "pushl $;movl (%esi), %eax;pushl (%eax);pushl $;pushl $": 1,
                "movl -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl $": 2,
                "jmp  <.text+>;movl (%esi), %eax;pushl (%eax);calll  <.text+>;testl %eax, %eax": 5,
                "calll - <.text+>;movl %eax, %ebx;cmpl $, %ebx;jne  <.text+>;movl (%esi), %eax": 6,
                "cmpl $, %ebx;jne  <.text+>;pushl $;movl %edi, %ecx;calll - <.text+>": 2,
                "pushl $;jmp  <.text+>;movl (%esi), %eax;pushl (%eax);movl %edi, %ecx": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>;cmpl $, %ebx;je  <.text+>": 1,
                "calll - <.text+>;jmp  <.text+>;cmpl $, %ebx;je  <.text+>;pushl $": 1,
                "calll - <.text+>;pushl $;popl %ebx;jmp  <.text+>;pushl $": 1,
                "pushl $;popl %ebx;jmp  <.text+>;pushl $;pushl $": 1,
                "calll - <.text+>;movl %eax, %ebx;jmp  <.text+>;pushl $;movl %edi, %ecx": 2,
                "pushl %ebx;calll *%edi;popl %ecx;popl %ecx;movl %eax, %esi": 1,
                "cmpl %ebx, %esi;je  <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>": 1,
                "jne - <.text+>;jmp - <.text+>;pushl $;movl (%ebp), %ecx;calll - <.text+>": 1,
                "pushl %esi;pushl %edi;pushl $;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "calll - <.text+>;movl (%ebp), %esi;movl (%ebp), %edi;movl -(%ebp), %ecx;pushl %esi": 1,
                "jne  <.text+>;movl (%edi), %ecx;movl (%esi), %eax;cmpl %ecx, %eax;je  <.text+>": 1,
                "calll - <.text+>;andl $, -(%ebp);cmpl $, -(%ebp);jne  <.text+>;cmpl $, (%ebp)": 1,
                "cmpl $, -(%ebp);jne  <.text+>;cmpl $, (%ebp);leal -(%ebp), %eax;jne  <.text+>": 1,
                "cmpl $, (%ebp);leal -(%ebp), %eax;jne  <.text+>;pushl (%ebp);pushl %eax": 2,
                "je - <.text+>;jmp - <.text+>;cmpl $, (%ebp);leal -(%ebp), %eax;je  <.text+>": 1,
                "jmp - <.text+>;cmpl $, (%ebp);leal -(%ebp), %eax;je  <.text+>;subl $, %esp": 1,
                "testl %eax, %eax;movl (%ebp), %edi;je  <.text+>;movl -(%ebp), %ecx;pushl %esi": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;cmpl (%ecx), %eax;jae  <.text+>;pushl (%eax)": 1,
                "je  <.text+>;movl -(%ebp), %ecx;pushl $;pushl $;pushl $": 3,
                "pushl %esi;pushl (%ebp);calll - <.text+>;jmp  <.text+>;movl (%esi), %eax": 3,
                "movl (%esi), %eax;je  <.text+>;pushl $;pushl -(%eax);calll  <.text+>": 2,
                "cmpl $, %ebx;jne  <.text+>;movl -(%ebp), %ecx;pushl %esi;pushl (%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;xorl %eax, %eax;incl %eax;movl %ecx, -(%ebp)": 1,
                "jne  <.text+>;movl (%ebx), %eax;pushl (%eax);movl %edi, %ecx;calll - <.text+>": 1,
                "jne  <.text+>;movl (%ebx), %eax;pushl (%eax);calll  <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;testl %eax, %eax;jge  <.text+>;pushl %eax;calll  <.text+>": 1,
                "andl $, -(%ebp);cmpl $, -(%ebp);jne  <.text+>;movl -(%ebp), %ecx;pushl $": 1,
                "je  <.text+>;movl $, -(%ebp);movl %edi, %ecx;calll - <.text+>;movl %eax, %ecx": 2,
                "pushl -(%ebp);pushl %edi;pushl -(%ebp);pushl %ecx;movl %esp, %ecx": 3,
                "pushl %eax;calll *;popl %ecx;popl %ecx;testl %eax, %eax": 1,
                "movl %ebx, -(%ebp);movb $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);calll *;movl %ebx, -(%ebp);pushl $;calll  <.text+>": 3,
                "jge  <.text+>;movl $, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);addl $, %ecx;calll - <.text+>": 1,
                "addl $, %ecx;calll - <.text+>;movl %eax, -(%ebp);testl %eax, %eax;jge  <.text+>": 1,
                "calll - <.text+>;movl %eax, -(%ebp);pushl -(%ebp);movl (%ebp), %ecx;calll - <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;pushl %edi;pushl %esi;pushl (%ebp)": 1,
                "movl %ebx, %ecx;calll - <.text+>;testl %eax, %eax;jne - <.text+>;movl %edi, %ecx": 1,
                "pushl %edi;leal (%ebx), %ecx;calll - <.text+>;testl %eax, %eax;jge - <.text+>": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;andl $, -(%ebp);andl $, -(%ebp);movl (%esi), %eax": 1,
                "je - <.text+>;pushl $;movl (%esi), %eax;pushl (%eax);calll  <.text+>": 1,
                "jne - <.text+>;pushl $;jmp  <.text+>;movl $, -(%ebp);jmp - <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;movl (%edi), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);pushl %esi;pushl %edi": 1,
                "jge - <.text+>;movl $, -(%ebp);jmp - <.text+>;pushl %esi;movl %ebx, %ecx": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp);pushl -(%ebp);movl (%ebp), %ecx": 1,
                "je  <.text+>;pushl $;pushl $;pushl (%ebp);pushl %edi": 1,
                "pushl %eax;pushl %edi;leal (%esi), %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);calll *;movl %eax, -(%ebp);movb $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl , %ebx;movl -(%ebp), %eax;cmpl -(%ebp), %eax": 1,
                "calll *;movl %eax, %edi;movl %edi, -(%ebp);xorl %eax, %eax;cmpl %esi, %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp)": 1,
                "jmp - <.text+>;cmpl %esi, -(%ebp);je  <.text+>;pushl -(%ebp);calll *": 1,
                "subl $, %esp;movl (%ebp), %ecx;pushl %ebx;pushl %esi;movl $, -(%ebp)": 1,
                "pushl %ebx;pushl %esi;movl $, -(%ebp);calll - <.text+>;movl %eax, %ecx": 1,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;movl (%eax), %eax;movl (%eax), %eax": 1,
                "pushl %eax;calll  <.text+>;cmpl %ebx, %eax;je  <.text+>;movl -(%ebp), %eax": 1,
                "jmp  <.text+>;xorl %esi, %esi;pushl %ebx;pushl $;pushl $": 2,
                "movl %ecx, %edi;xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi;pushl %esi": 1,
                "pushl $;pushl $;pushl (%ebp);pushl %esi;pushl (%ebp)": 1,
                "je  <.text+>;pushl %ebx;pushl (%ebp);leal (%edi), %ecx;calll - <.text+>": 2,
                "testl %eax, %eax;je - <.text+>;pushl %esi;pushl (%ebp);movl %edi, %ecx": 1,
                "movl (%ebp), %ecx;pushl (%eax);calll - <.text+>;movl %eax, %ecx;calll - <.text+>": 1,
                "movl %ebx, -(%ebp);jmp  <.text+>;pushl (%esi);leal -(%ebp), %ecx;calll - <.text+>": 1,
                "calll  <.text+>;movb $, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movb %bl, -(%ebp)": 1,
                "jmp  <.text+>;pushl %edi;pushl %esi;pushl (%ebp);movl %ebx, %ecx": 2,
                "jmp  <.text+>;cmpl $, (%ebx);je  <.text+>;pushl (%ebp);movl %ebx, %ecx": 1,
                "jne  <.text+>;jmp - <.text+>;pushl $;jmp  <.text+>;movl (%esi), %eax": 1,
                "jge  <.text+>;pushl %edi;calll  <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx": 4,
                "cmpl %esi, -(%ebp);je  <.text+>;pushl %esi;pushl %esi;pushl %esi": 1,
                "jge  <.text+>;pushl %edi;calll  <.text+>;movl %ebx, %ecx;calll - <.text+>": 1,
                "pushl %edi;calll  <.text+>;movl %ebx, %ecx;calll - <.text+>;movl %eax, %ecx": 1,
                "testl %eax, %eax;jne  <.text+>;cmpl %esi, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "movl %esi, -(%ebp);jmp  <.text+>;movl %esi, -(%ebp);cmpl $, (%ebp);jne  <.text+>": 1,
                "movl %esp, %ebp;cmpl $, (%ecx);jne  <.text+>;pushl (%ebp);addl $, %ecx": 1,
                "jmp  <.text+>;movl (%edi), %eax;pushl (%eax);movl (%ebp), %ecx;calll - <.text+>": 1,
                "calll - <.text+>;movl %eax, %edx;popl %edi;popl %esi;movl %edx, %eax": 2,
                "movl %edi, %ecx;je  <.text+>;pushl $;pushl $;pushl $": 2,
                "pushl (%ebp);calll - <.text+>;jmp  <.text+>;pushl %ebx;pushl %esi": 1,
                "pushl %esi;pushl (%ebp);calll - <.text+>;movl %eax, %edx;cmpl $, %edx": 1,
                "cmpl $, %edx;jne  <.text+>;pushl %esi;pushl (%ebp);movl %edi, %ecx": 1,
                "calll  <.text+>;movl , %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "movl %edi, %ecx;calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl %esi": 2,
                "jmp  <.text+>;pushl $;pushl $;pushl %ebx;pushl %esi": 1,
                "testl %eax, %eax;je  <.text+>;pushl %ebx;pushl %esi;pushl -(%ebp)": 1,
                "je  <.text+>;pushl %ebx;pushl %esi;pushl -(%ebp);movl %edi, %ecx": 1,
                "je  <.text+>;pushl %edi;leal (%ebx), %ecx;calll - <.text+>;testl %eax, %eax": 2,
                "calll - <.text+>;testl %eax, %eax;jl  <.text+>;movl %edi, %ecx;calll - <.text+>": 1,
                "pushl $;pushl $;pushl $;pushl $;pushl (%eax)": 1,
                "movl %eax, %ecx;calll - <.text+>;andl $, (%ebp);jmp  <.text+>;pushl %esi": 1,
                "leal (%ebx), %ecx;calll - <.text+>;testl %eax, %eax;jge  <.text+>;movl $, (%ebp)": 1,
                "movl %ebx, %ecx;calll - <.text+>;jmp  <.text+>;movl (%esi), %eax;movl (%ebp), %ecx": 1,
                "movl %esi, %ecx;calll - <.text+>;jmp  <.text+>;pushl $;movl %ebx, %ecx": 1,
                "jmp  <.text+>;pushl %ebx;pushl %edi;pushl (%ebp);calll - <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %ecx": 1,
                "calll  <.text+>;movl $, %eax;retl;xorl %ebx, %ebx;movl (%ebp), %esi": 1,
                "xorl %ebx, %ebx;movl (%ebp), %esi;orl $-, -(%ebp);cmpl %ebx, %esi;je  <.text+>": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %edi;movl (%ebp), %esi;movl (%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "pushl (%eax);calll - <.text+>;movb $, -(%ebp);movb $, -(%ebp);movl -(%ebp), %ecx": 1,
                "jmp  <.text+>;movl $, -(%ebp);pushl %esi;pushl %edi;movl -(%ebp), %ecx": 1,
                "pushl %esi;pushl %edi;movl -(%ebp), %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;movb $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);andl $, -(%ebp)": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;movl %ebx, %ecx": 1,
                "testl %eax, %eax;je  <.text+>;pushl %ebx;xorl %edi, %edi;pushl %edi": 1,
                "xorl %edi, %edi;pushl %edi;calll *%esi;popl %ecx;popl %ecx": 1,
                "pushl %edi;calll *%esi;popl %ecx;popl %ecx;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);cmpl %edi, %eax;je  <.text+>;pushl %eax;movl -(%ebp), %ecx": 1,
                "je  <.text+>;pushl %eax;movl -(%ebp), %ecx;calll - <.text+>;movl %eax, %ecx": 2,
                "movl %edi, -(%ebp);cmpl %edi, -(%ebp);je  <.text+>;pushl %ebx;pushl %edi": 1,
                "pushl %ebx;pushl %edi;calll *%esi;popl %ecx;popl %ecx": 1,
                "movl %esi, -(%ebp);andl $, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %eax;pushl (%eax)": 1,
                "calll - <.text+>;pushl $;pushl $;movl (%ebp), %ecx;calll - <.text+>": 1,
                "je  <.text+>;pushl $;pushl $;pushl (%ebp);pushl %ebx": 2,
                "testl %eax, %eax;je  <.text+>;pushl $;pushl (%ebp);pushl %ebx": 1,
                "je  <.text+>;movl (%ebx), %eax;cmpl (%esi), %eax;jb  <.text+>;pushl $": 1,
                "cmpl (%esi), %eax;jb  <.text+>;pushl $;movl (%ebp), %ecx;calll - <.text+>": 1,
                "xorl %esi, %esi;jmp  <.text+>;pushl $;pushl (%eax);calll  <.text+>": 1,
                "movl $, -(%ebp);movl (%ebp), %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>": 1,
                "testl %eax, %eax;jge  <.text+>;pushl $;jmp - <.text+>;pushl (%ebp)": 1,
                "jmp - <.text+>;pushl (%ebp);pushl %ebx;pushl %esi;calll - <.text+>": 1,
                "movl %edi, %ecx;pushl (%ebp);calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;movl %esi, %eax;movl -(%ebp), %ecx;movl %ecx, %fs:": 1,
                "jne  <.text+>;movl -(%ebp), %eax;cmpl -(%ebp), %eax;jb  <.text+>;pushl $": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;jae  <.text+>;pushl %esi;leal -(%ebp), %eax": 1,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;movl %esi, %ecx;calll - <.text+>": 2,
                "testl %edx, %edx;sete %al;jmp  <.text+>;incl %eax;testb %al, %al": 1,
                "sete %al;jmp  <.text+>;incl %eax;testb %al, %al;jne  <.text+>": 1,
                "je  <.text+>;testl %ecx, %ecx;je  <.text+>;movl (%ecx), %ecx;jmp  <.text+>": 1,
                "testl %eax, %eax;jne  <.text+>;pushl $;movl %esi, %ecx;calll - <.text+>": 2,
                "testl %eax, %eax;jge  <.text+>;pushl $;popl %edi;cmpl $, %edi": 1,
                "movl %eax, %ecx;calll - <.text+>;jmp  <.text+>;pushl $;pushl %edi": 1,
                "calll - <.text+>;movl %edi, %eax;movl -(%ebp), %ecx;movl %ecx, %fs:;popl %edi": 1,
                "decl %eax;decl %eax;negl %eax;sbbl %eax, %eax;popl %edi": 1,
                "xorl %eax, %eax;cmpl (%ebp), %eax;jae  <.text+>;testl %ebx, %ebx;je  <.text+>": 1,
                "calll *%esi;movl %eax, %edi;jmp  <.text+>;xorl %edi, %edi;movl (%ebp), %ebx": 1,
                "xorl %edi, %edi;movl (%ebp), %ebx;testl %ebx, %ebx;je  <.text+>;pushl %ebx": 1,
                "je  <.text+>;movl , %edi;pushl %esi;pushl %esi;pushl %esi": 1,
                "pushl $-;pushl (%ebp);pushl %esi;pushl (%ebp);calll *%edi": 2,
                "pushl (%ebp);calll *%esi;movl %eax, %edi;leal (%edi,%edi), %eax;pushl %eax": 1,
                "calll *%esi;jmp  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;movl (%ebp), %eax": 1,
                "leal (%ebx), %edi;pushl %edi;calll  <.text+>;testl %eax, %eax;movl (%ebp), %esi": 1,
                "addl $, (%ebp);incl %edi;cmpl %ebx, %edi;popl %ecx;popl %ecx": 1,
                "je  <.text+>;pushl %esi;movl (%ebx), %esi;cmpw $, (%esi);jne  <.text+>": 1,
                "movl (%ebp), %edx;movl (%ebx), %ecx;incl (%ebp);cmpl %eax, (%ebp);leal (%ecx,%edx,), %ecx": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;cmpw $, (%esi)": 1,
                "pushl %eax;pushl $;jmp  <.text+>;andl $, -(%ebp);jmp  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl %esi;calll *": 1,
                "pushl $;stosb %al, %es:(%edi);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "movl $, %eax;cmpw (%eax), %cx;jne  <.text+>;pushl $;jmp  <.text+>": 1,
                "movl $, %eax;cmpw (%eax), %cx;jne  <.text+>;pushl $;popl %esi": 1,
                "popl %esi;pushl $;pushl $;pushl (%ebp);calll *": 1,
                "movl $, %edi;pushl %edi;pushl %esi;calll - <.text+>;testl %eax, %eax": 2,
                "je  <.text+>;movw $, %ax;jmp  <.text+>;pushl %edi;pushl %esi": 1,
                "pushl %edi;pushl (%ebp);calll *%esi;pushl (%ebp);movl %eax, %edi": 1,
                "pushl (%ebp);movl (%ebp), %ecx;pushl %edi;pushl %esi;calll *": 1,
                "leal (%ebx,%esi), %eax;pushl %eax;pushl (%ebp);movl (%ebp), %ecx;calll *": 1,
                "subl %ecx, %eax;movswl -(%ebp), %ecx;addl %ecx, %eax;movl $, %ecx;cmpl %ecx, %eax": 1,
                "cmpl $-, %ebx;rep  stosw %ax, %es:(%edi);je  <.text+>;movswl (%edx), %eax;movswl (%edx), %ecx": 1,
                "jmp  <.text+>;xorl %eax, %eax;testl %eax, %eax;jle  <.text+>;movw (%edx), %ax": 1,
                "pushl %ebx;calll *;pushl (%ebp);pushl %ebx;calll *%esi": 1,
                "pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $-": 4,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %esi": 1,
                "movl %eax, %ecx;jb  <.text+>;movl %esi, %ecx;cmpw %si, %ax;movl (%ebp), %edx": 1,
                "cmpw %si, %ax;movl (%ebp), %edx;movw %cx, (%edx);ja  <.text+>;movl %esi, %eax": 1,
                "jmp  <.text+>;pushl $;pushl $;pushl (%ebp);calll *%esi": 1,
                "pushl $;pushl $;pushl -(%ebp);calll *%esi;addl $, %esp": 1,
                "pushl %ebx;calll - <.text+>;testl %eax, %eax;jne  <.text+>;pushl %ebx": 1,
                "retl $;pushl $;leal (%ebp), %eax;pushl %eax;movl $, (%ebp)": 2,
                "xorl %esi, %esi;calll *;cmpl $-, %eax;je  <.text+>;cmpl $, %eax": 1,
                "cmpl $-, %eax;je  <.text+>;cmpl $, %eax;je  <.text+>;leal -(%ebp), %ecx": 1,
                "pushl %ecx;pushl %eax;calll *;cmpl $, %eax;movl (%ebp), %eax": 1,
                "calll *;cmpl $, %eax;movl (%ebp), %eax;jne  <.text+>;movw -(%ebp), %cx": 1,
                "calll *;pushl %eax;pushl %edi;calll *;testl %eax, %eax": 1,
                "pushl (%esi);calll *;movl %eax, %esi;testl %esi, %esi;jne  <.text+>": 1,
                "pushl $;calll  <.text+>;movl %esi, %eax;popl %esi;retl": 1,
                "je  <.text+>;pushl $;pushl (%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "popl %ecx;je  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %ebx;pushl %esi;pushl %ebx;pushl -(%ebp);calll *": 1,
                "popl %edi;popl %esi;pushl -(%ebp);calll *;jmp  <.text+>": 1,
                "movl , %esi;pushl %edi;movl (%ebp), %edi;pushl (%edi);calll *%esi": 1,
                "movl (%edi), %ecx;andw $, -(%ecx,%eax,);popl %ebx;popl %edi;popl %esi": 1,
                "pushl %esi;calll *%edi;xorl %ebx, %ebx;xorl %ecx, %ecx;cmpl %ebx, %eax": 1,
                "xorl %ebx, %ebx;xorl %ecx, %ecx;cmpl %ebx, %eax;movl %ebx, (%ebp);movl %ebx, -(%ebp)": 1,
                "cmpw $, (%esi,%ecx,);jne  <.text+>;incl -(%ebp);decl %ecx;jns - <.text+>": 1,
                "decl %ecx;jns - <.text+>;cmpl %ebx, (%ebp);jle  <.text+>;movl (%ebp), %ecx": 1,
                "subl -(%ebp), %eax;movw %bx, (%esi,%eax,);popl %ebx;popl %edi;popl %esi": 1,
                "int;int;movl (%ecx), %eax;cmpl $-, %eax;je  <.text+>": 1,
                "pushl %edi;movl %esp, -(%ebp);xorl %edi, %edi;movl %edi, -(%ebp);movl %edi, -(%ebp)": 3,
                "pushl %eax;calll  <.text+>;pushl $;movl (%ebp), %ecx;calll - <.text+>": 1,
                "pushl -(%ebp);pushl %edi;pushl (%ebp);pushl %eax;pushl %ebx": 1,
                "cmpl %edi, %ebx;je  <.text+>;cmpl $, %eax;jne  <.text+>;movl (%esi), %eax": 1,
                "pushl -(%ebp);pushl %edi;pushl (%ebp);pushl %edi;pushl %ebx": 1,
                "movl (%ebp), %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;jmp  <.text+>": 2,
                "je  <.text+>;pushl -(%ebp);calll *;orl $-, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;pushl %ebx;pushl %esi": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl %eax, (%esi);movl (%ecx), %edi": 3,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;addl $, (%esi);cmpl %edi, (%esi)": 1,
                "addl $, -(%ebp);jmp - <.text+>;movl %edi, -(%ebp);movl (%ebp), %esi;movl (%esi), %eax": 1,
                "sarl %esi;movl %esi, -(%ebp);leal (%esi,%esi), %eax;movl %eax, -(%ebp);addl $, %eax": 1,
                "calll  <.text+>;andl $, -(%ebp);andl $, -(%ebp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "testl %eax, %eax;je  <.text+>;pushl -(%ebp);calll *%esi;movl (%ebp), %ecx": 1,
                "calll *%esi;movl (%ebp), %ecx;movl %eax, (%ecx);xorl %esi, %esi;cmpl %esi, (%ebx)": 1,
                "popl %ecx;andl $, -(%ebp);orl $-, -(%ebp);xorl %eax, %eax;jmp - <.text+>": 1,
                "leal -(%ebp), %eax;jmp  <.text+>;movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "pushl %edi;movl $, %esi;movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx": 2,
                "pushl %eax;pushl (%ebp);calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %eax;calll *;addl $, %esp;jmp  <.text+>;pushl %edi": 1,
                "movl %eax, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;movl %eax, %edi": 2,
                "andl $, -(%ebp);orl $-, -(%ebp);movl -(%ebp), %ecx;movl %ecx, %fs:;popl %edi": 1,
                "calll *;popl %ecx;popl %ecx;movl (%ebp), %eax;cmpl %edi, %eax": 1,
                "pushl $;pushl %edi;pushl %esi;pushl $;calll *": 1,
                "pushl -(%ebp);calll *;movl %edi, -(%ebp);orl $-, -(%ebp);movl -(%ebp), %ecx": 1,
                "movl %edi, -(%ebp);cmpl %edi, -(%ebp);je  <.text+>;pushl -(%ebp);calll  <.text+>": 3,
                "calll  <.text+>;movl $, %eax;retl;xorl %edi, %edi;cmpl %edi, -(%ebp)": 2,
                "jle  <.text+>;pushl (%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl %eax, %esi": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>": 3,
                "pushl %eax;movl %edi, %ecx;calll  <.text+>;movb $, -(%ebp);leal -(%ebp), %ecx": 1,
                "pushl %edi;leal -(%ebp), %ecx;calll  <.text+>;movl %eax, %esi;movl %esi, -(%ebp)": 1,
                "popl %ecx;movl %eax, %esi;movl %esi, -(%ebp);movl %esi, -(%ebp);cmpl %edi, %esi": 1,
                "cmpl %edi, %esi;jne  <.text+>;movl $, %eax;jmp  <.text+>;pushl $": 1,
                "jmp  <.text+>;pushl $;popl %ecx;xorl %eax, %eax;movl %esi, %edi": 1,
                "cmpl %edi, -(%ebp);je  <.text+>;pushl -(%ebp);calll *%ebx;movl %eax, %edi": 2,
                "je  <.text+>;pushl -(%ebp);calll *%ebx;movl %eax, %edi;movl %edi, -(%ebp)": 2,
                "movl %eax, -(%ebp);movl %eax, (%esi);testl %eax, %eax;jne  <.text+>;movl $, -(%ebp)": 2,
                "calll *;popl %ecx;popl %ecx;movl %edi, (%esi);xorl %edi, %edi": 2,
                "calll *%ebx;movl %eax, %ebx;movl %ebx, -(%ebp);leal (%ebx,%ebx), %eax;pushl %eax": 1,
                "calll  <.text+>;popl %ecx;movl %eax, -(%ebp);movl %eax, (%esi);cmpl %edi, %eax": 1,
                "pushl (%ebp);pushl %eax;calll *;popl %ecx;popl %ecx": 1,
                "pushl %eax;calll *;popl %ecx;popl %ecx;movl %ebx, (%esi)": 1,
                "pushl $;pushl %ebx;calll *;addl $, %esp;testl %eax, %eax": 1,
                "movl %ebx, -(%ebp);pushl %edi;pushl %esi;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %esi;pushl (%ebp);pushl (%ebp);pushl %ebx;pushl %edi": 1,
                "pushl %ebx;pushl %edi;pushl $;pushl (%ebp);calll *": 1,
                "pushl -(%ebp);calll *;movl $, %eax;retl;int": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl $, -(%ebp);movl %ecx, %fs:;leave": 5,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %eax": 2,
                "jne  <.text+>;addl $, %eax;pushl (%ebp);pushl %eax;calll - <.text+>": 1,
                "movl (%eax), %eax;jmp  <.text+>;xorl %eax, %eax;pushl (%ebp);pushl %eax": 1,
                "movl (%ebp), %edi;movl %edi, %ecx;calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl %esi;movl (%edi), %esi": 1,
                "pushl %edi;movl %eax, -(%ebp);movl $, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "movl %edi, -(%ebp);calll *;testl %eax, %eax;je  <.text+>;cmpl %edi, -(%ebp)": 1,
                "movl (%ebp), %ecx;leal -(%ebp), %eax;pushl %eax;calll - <.text+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;popl %edi;popl %esi;calll  <.text+>;leave": 1,
                "leal -(%ebp), %edi;stosb %al, %es:(%edi);movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "movl $, %eax;calll  <.text+>;subl $, %esp;andl $, -(%ebp);pushl $": 2,
                "pushl $;pushl -(%ebp);calll *%edi;movl %eax, %esi;testl %esi, %esi": 2,
                "testl %esi, %esi;je  <.text+>;cmpl $, %esi;jbe  <.text+>;cmpl $, -(%ebp)": 2,
                "leal (%esi,%esi), %eax;pushl %eax;calll  <.text+>;testl %eax, %eax;popl %ecx": 2,
                "calll *%edi;testl %eax, %eax;je  <.text+>;pushl -(%ebp);calll *": 2,
                "popl %esi;movl %ecx, %fs:;leave;retl;calll *": 2,
                "je  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp)": 1,
                "rep  stosl %eax, %es:(%edi);movzwl (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl $": 1,
                "movl $, %esi;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);calll *;cmpl %ebx, %eax": 1,
                "pushl %ebx;calll *%eax;movl %eax, %esi;movb %bl, -(%ebp);leal -(%ebp), %eax": 1,
                "addl $, %esi;pushl %eax;movl %esi, %ecx;calll - <.text+>;movb %bl, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl (%edi), %eax;pushl %ebx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "cmpl %ebx, %eax;jl  <.text+>;testb $, -(%ebp);je  <.text+>;pushl $": 1,
                "pushl %eax;calll *;jmp  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "calll *;jmp  <.text+>;pushl $;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "calll - <.text+>;movb $, -(%ebp);pushl %eax;movl (%ebp), %ecx;addl $, %ecx": 2,
                "cmpl %ebx, -(%ebp);jl  <.text+>;cmpw $, -(%ebp);jne  <.text+>;cmpw %bx, -(%ebp)": 2,
                "pushl %eax;calll *%esi;movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll *%esi;movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "cmpb %bl, %al;je  <.text+>;pushl $;leal -(%ebp), %ecx;calll - <.text+>": 11,
                "movl , %ecx;addl $, %ecx;pushl %ecx;pushl %eax;movl , %edi": 1,
                "movl %eax, -(%ebp);pushl %eax;pushl (%ebp);pushl $;leal -(%ebp), %eax": 1,
                "retl;xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %ecx;calll - <.text+>": 1,
                "movb $, -(%ebp);pushl (%ebp);pushl (%ebp);pushl -(%ebp);pushl (%ebp)": 1,
                "jmp  <.text+>;pushl -(%ebp);calll *;pushl -(%ebp);movl (%ebp), %ecx": 1,
                "movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %edi, -(%ebp);cmpl %edi, (%ebp);je  <.text+>": 1,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);cmpl %edi, (%ebp);je  <.text+>;pushl (%ebp)": 1,
                "cmpl %edi, (%ebp);je  <.text+>;pushl (%ebp);leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movl %eax, -(%ebp);pushl %eax;movl %esi, %ecx;calll  <.text+>;cmpl %ebx, -(%ebp)": 1,
                "pushl $;pushl %edi;movl , %esi;calll *%esi;movl %eax, %edi": 1,
                "popl %eax;cmpl %eax, %ecx;jae  <.text+>;movl %ecx, %eax;cltd": 1,
                "xorl %eax, %eax;movl %eax, -(%ebp);movb %al, -(%ebp);movb $-, -(%ebp);movb %al, -(%ebp)": 1,
                "pushl %eax;pushl $;calll *%esi;movl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "pushl $;popl %eax;pushl %eax;pushl %edi;pushl -(%ebp)": 1,
                "calll  <.text+>;xorl %edi, %edi;movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %edi, %ecx": 1,
                "cmpl %esi, -(%ebp);je  <.text+>;pushl -(%ebp);calll  <.text+>;cmpl %esi, -(%ebp)": 2,
                "xorl %ebx, %ebx;movl %edi, %ecx;incl %ebx;calll - <.text+>;movl %eax, %ecx": 1,
                "movl %eax, %ecx;calll - <.text+>;pushl %eax;pushl %esi;calll - <.text+>": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi;movw (%esi), %ax;cmpw $, %ax": 1,
                "jne  <.text+>;cmpl %ebx, (%ebp);je  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi;xorl %esi, %esi": 1,
                "je  <.text+>;cmpw $, %dx;je  <.text+>;cmpw $, %dx;je  <.text+>": 7,
                "pushl %edi;movl %esp, -(%ebp);movl $, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "calll - <.text+>;movb $, -(%ebp);movl (%ebp), %esi;movl %esi, %ecx;calll - <.text+>": 1,
                "movl %esp, -(%ebp);pushl %esi;calll - <.text+>;movb $, -(%ebp);movl (%ebp), %ecx": 1,
                "pushl %esi;calll - <.text+>;movb $, -(%ebp);movl (%ebp), %ecx;calll - <.text+>": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %eax": 1,
                "xorl %esi, %esi;calll - <.text+>;andl %esi, -(%ebp);cmpl %esi, -(%ebp);je  <.text+>": 1,
                "pushl $;calll  <.text+>;xorl %esi, %esi;incl %esi;orl $-, -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl %eax;calll *": 1,
                "xorl %edi, %edi;jmp  <.text+>;pushl $;movl %esi, %ecx;calll  <.text+>": 1,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;movl %edi, %eax;popl %edi": 1,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;cmpl %ebx, %eax;je  <.text+>": 1,
                "movb %bl, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %ecx": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;movl %ebx, -(%ebp);movb $, -(%ebp);movl , %eax": 1,
                "jmp  <.text+>;calll  <.text+>;testl %eax, %eax;je  <.text+>;pushl $": 1,
                "testl %eax, %eax;je  <.text+>;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "je  <.text+>;pushl $;pushl $;calll *;popl %ecx": 1,
                "movl %edi, -(%ebp);cmpl $, -(%ebp);je  <.text+>;pushl %edi;movl %esi, %ecx": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movb $, -(%ebp);cmpl $, -(%ebp)": 1,
                "movl %eax, %ecx;calll - <.text+>;movl %eax, -(%ebp);pushl %ebx;pushl %ebx": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movb $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);cmpb $, -(%ebp);jne  <.text+>": 1,
                "movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll - <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;pushl -(%ebp);movl $, %ecx;calll *": 1,
                "pushl -(%ebp);movl $, %ecx;calll *;movb $, -(%ebp);leal -(%ebp), %eax": 1,
                "movl $, %ecx;calll *;movl %eax, -(%ebp);leal -(%eax), %edi;pushl %edi": 1,
                "calll  <.text+>;movl %eax, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;pushl %edi;pushl -(%ebp);movl %esi, %ecx;calll  <.text+>": 1,
                "cmpl %ebx, -(%ebp);jne  <.text+>;pushl %ebx;movl %esi, %ecx;calll  <.text+>": 1,
                "movl $, %ecx;calll *;pushl %eax;movl %esi, %ecx;calll  <.text+>": 1,
                "je  <.text+>;pushl %ebx;movl %esi, %ecx;calll  <.text+>;movl %eax, -(%ebp)": 1,
                "jmp - <.text+>;calll *;pushl %eax;movl $, %edi;movl %edi, %ecx": 1,
                "calll *;pushl %eax;movl $, %edi;movl %edi, %ecx;calll *": 1,
                "movl %esi, %ecx;calll  <.text+>;movl %edi, %ecx;calll *;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %esi, %ecx;calll  <.text+>;movl %eax, -(%ebp);pushl $": 1,
                "pushl %ebx;movl %esi, %ecx;calll  <.text+>;pushl %eax;movl %esi, %ecx": 1,
                "movb %bl, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>;calll *;orl $-, -(%ebp)": 1,
                "pushl $;pushl $;jmp  <.text+>;xorl %eax, %eax;movw (%ecx), %ax": 1,
                "calll *;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl %esi": 1,
                "calll *;pushl (%ebp);movl , %esi;movl %eax, %edi;pushl %edi": 1,
                "pushl %edi;calll *%esi;pushl -(%ebp);movl , %esi;calll *%esi": 1,
                "pushl %edi;calll *%esi;popl %edi;popl %esi;leave": 1,
                "calll - <.text+>;cmpl $, %eax;jne  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "pushl %esi;pushl %edi;pushl $;xorl %esi, %esi;movl %ecx, %ebx": 1,
                "movl %eax, -(%ebp);xorl %eax, %eax;movl %esi, -(%ebp);leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "leal (%ebx), %eax;pushl %eax;pushl %esi;pushl $;pushl %esi": 1,
                "pushl %esi;pushl $;pushl %esi;pushl $;pushl %esi": 2,
                "movl %eax, -(%ebp);calll *%edi;cmpl %esi, %eax;jne  <.text+>;pushl $": 1,
                "calll *;cmpl $, %eax;jne  <.text+>;pushl $;leal -(%ebp), %eax": 2,
                "movl %esp, -(%ebp);andl $, -(%ebp);cmpl $, (%ebp);je  <.text+>;pushl (%ebp)": 1,
                "addl $, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;pushl %eax": 1,
                "jne  <.text+>;pushl $;pushl (%esi);calll - <.text+>;testl %eax, %eax": 1,
                "movl %ecx, %esi;xorl %ebx, %ebx;movl %ebx, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>": 4,
                "addl $, %esi;movl %esi, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>": 4,
                "movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %edi;jmp  <.text+>": 2,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;pushl %eax;pushl %edi": 1,
                "addl $, %esi;leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx;calll - <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx": 6,
                "calll - <.text+>;leal -(%ebp), %ecx;calll - <.text+>;cmpl $, %eax;jbe  <.text+>": 1,
                "cmpl $, %eax;jbe  <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %edi": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %edi;movl %edi, -(%ebp);leal (%eax), %esi": 1,
                "movl -(%ebp), %edi;movl %edi, -(%ebp);leal (%eax), %esi;movl %esi, -(%ebp);cmpl %edi, %esi": 1,
                "addl $, %esi;jmp - <.text+>;movl %esi, %ecx;calll - <.text+>;movl %eax, %ecx": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb $, -(%ebp)": 1,
                "calll - <.text+>;movl %eax, -(%ebp);movl (%eax), %edi;movl %edi, -(%ebp);movl %esi, %ecx": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;movl %esi, -(%ebp)": 2,
                "addl $, %edi;movl %edi, -(%ebp);jmp - <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;je  <.text+>;pushl $;movl (%ebp), %edi": 1,
                "calll - <.text+>;movl %eax, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %esi, -(%ebp);jmp - <.text+>;pushl $;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "calll  <.text+>;pushl %ecx;pushl %ebx;pushl %esi;andl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %eax, (%esi);pushl $;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "pushl %edi;calll - <.text+>;movl $, %eax;cmpl %eax, (%esi);jne  <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;pushl %eax;pushl $;pushl %ebx": 1,
                "leave;retl $;movl %eax, (%esi);jmp - <.text+>;pushl $": 1,
                "movl (%ebp), %eax;pushl (%eax,%edi,);pushl (%esi);calll *;incl %edi": 2,
                "je  <.text+>;calll - <.text+>;movl %ebx, (%ebp);movl -(%ebp), %edi;cmpl %ebx, %edi": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "pushl %ebx;pushl %ebx;pushl %eax;pushl %esi;calll *(%ecx)": 2,
                "pushl %esi;calll *(%ecx);testl %eax, %eax;jl  <.text+>;pushl (%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %edx;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "movb $, -(%ebp);cmpl %ebx, %esi;je  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "pushl %eax;pushl %esi;calll *(%ecx);cmpl %ebx, %eax;jl  <.text+>": 1,
                "pushl %eax;calll *(%edx);movb %bl, -(%ebp);cmpl %ebx, %esi;je  <.text+>": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);orl $-, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);pushl $": 1,
                "movl -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp);movb $, -(%ebp);movl (%eax), %eax": 1,
                "pushl %eax;pushl -(%ebp);calll *;testl %eax, %eax;je  <.text+>": 1,
                "calll *;testl %eax, %eax;je  <.text+>;movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 4,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl (%esi,%edi,);movl -(%ebp), %eax": 1,
                "pushl (%eax);calll *;testl %eax, %eax;jne  <.text+>;cmpl $, -(%ebp)": 1,
                "shrl %eax;movw %bx, -(%ebp,%eax,);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "pushl %eax;calll *;testl %eax, %eax;je  <.text+>;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %edx;movl %eax, (%edx,%edi,);movl %ecx, (%edx,%edi,)": 1,
                "orl $-, -(%ebp);jmp  <.text+>;movl %ebx, -(%ebp);incl %edi;jmp - <.text+>": 1,
                "movl %ebx, -(%ebp);incl %edi;jmp - <.text+>;orl $-, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl %edi;movl %esp, -(%ebp);movl (%ebp), %eax;movl (%ebp), %esi;movl (%ebp), %ecx": 1,
                "calll *%edi;pushl -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movb %bl, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movb $, -(%ebp);movl %ebx, -(%ebp);pushl $": 1,
                "movl %ebx, -(%ebp);pushl $;calll  <.text+>;popl %ecx;movl %eax, %esi": 1,
                "cmpl %ebx, %eax;jne  <.text+>;movl %esi, -(%ebp);pushl %esi;calll  <.text+>": 1,
                "pushl %edi;pushl %ecx;pushl %eax;calll *(%edx);movl %eax, %edi": 2,
                "calll - <.text+>;cmpl %ebx, %edi;jge  <.text+>;pushl %edi;calll  <.text+>": 12,
                "pushl $;leal -(%ebp), %eax;jmp  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "addl $, %esp;movl $, -(%ebp);movb %bl, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;movl -(%ebp), %ecx;calll - <.text+>;movl %eax, %esi": 1,
                "calll *;movl %eax, -(%ebp);cmpl %ebx, %eax;jne  <.text+>;cmpl %edi, -(%ebp)": 1,
                "shrl %eax;movw %bx, -(%ebp,%eax,);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "jne  <.text+>;movl %edi, -(%ebp);jmp  <.text+>;pushl $;popl %esi": 1,
                "leal -(%ebp), %eax;jmp  <.text+>;pushl $-;calll *;movl %eax, -(%ebp)": 1,
                "popl %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;pushl $-;calll *;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;movl %eax, %edi;movl %edi, -(%ebp);movb $, -(%ebp);movl -(%ebp), %ecx": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;pushl %ebx;pushl $;leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl -(%ebp);calll - <.text+>;pushl %eax;leal -(%ebp), %ecx": 1,
                "calll - <.text+>;movb $, -(%ebp);movl %ebx, -(%ebp);cmpl $, -(%ebp);jae  <.text+>": 1,
                "movl %esi, %ecx;calll - <.text+>;pushl $;calll *;incl %eax": 1,
                "movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;jmp  <.text+>;movl (%esi), %eax": 1,
                "movl %eax, %ecx;calll - <.text+>;movl $, %edi;testl %eax, %eax;jne  <.text+>": 1,
                "calll - <.text+>;movl $, %edi;testl %eax, %eax;jne  <.text+>;pushl %edi": 1,
                "jne  <.text+>;pushl %edi;movl %esi, %ecx;calll - <.text+>;movl %eax, %ecx": 2,
                "movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %esi, %ecx;calll - <.text+>": 1,
                "cmpl $, %eax;jbe  <.text+>;movl %ebx, -(%ebp);movb $, -(%ebp);movl -(%ebp), %eax": 1,
                "pushl %eax;calll - <.text+>;movb $, -(%ebp);movl -(%ebp), %ecx;cmpl %ebx, %ecx": 1,
                "pushl %esi;movl -(%ebp), %ecx;addl $, %ecx;calll - <.text+>;movl %esi, %ecx": 1,
                "testl %eax, %eax;jne  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;movl %esi, %ecx": 1,
                "addl $, %ecx;calll - <.text+>;pushl %esi;movl -(%ebp), %ecx;addl $, %ecx": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %eax": 1,
                "je  <.text+>;movl (%eax), %eax;jmp  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "jmp  <.text+>;movl %esi, %ecx;calll - <.text+>;pushl %ebx;movl -(%ebp), %ecx": 1,
                "addl $, %ecx;pushl %ebx;pushl %esi;calll - <.text+>;pushl %ebx": 1,
                "pushl %ebx;leal (%esi), %ecx;calll - <.text+>;jmp  <.text+>;movl -(%ebp), %ecx": 1,
                "leal (%esi), %ecx;calll - <.text+>;jmp  <.text+>;movl -(%ebp), %ecx;addl $, %ecx": 1,
                "movl %esi, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;cmpl %edi, %eax": 2,
                "movl %eax, %ecx;calll - <.text+>;cmpl %edi, %eax;jne  <.text+>;pushl $-": 1,
                "movl %ebx, -(%ebp);incl -(%ebp);calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "jne  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;movl -(%ebp), %esi;leal (%esi), %edi": 1,
                "leal (%esi), %edi;jmp  <.text+>;cmpl $, -(%ebp);jne  <.text+>;movl -(%ebp), %esi": 1,
                "leal (%esi), %ecx;calll - <.text+>;pushl %edi;leal (%esi), %ecx;calll - <.text+>": 3,
                "jne  <.text+>;calll - <.text+>;popl %edi;leal (%esi), %ecx;popl %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;addl $, %edi;movl %edi, %ecx": 1,
                "jmp  <.text+>;movl $, %esi;cmpl %ebx, %edi;jge  <.text+>;pushl %edi": 1,
                "xorl %eax, %eax;movl -(%ebp), %ecx;movl (%ecx), %edx;leal -(%ebp), %edi;pushl %edi": 2,
                "jge  <.text+>;pushl %edi;calll  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>": 2,
                "pushl %esi;pushl %esi;pushl $;pushl %ebx;pushl %esi": 1,
                "jge  <.text+>;pushl %eax;calll  <.text+>;pushl %ebx;calll - <.text+>": 1,
                "leal (%edi), %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>;leal (%edi), %ecx": 1,
                "incl %ebx;pushl %ebx;pushl %ebx;xorl %esi, %esi;pushl %esi": 1,
                "calll - <.text+>;pushl -(%ebp);calll *;calll - <.text+>;pushl -(%ebp)": 1,
                "movl %esi, -(%ebp);cmpl %ebx, -(%ebp);jne  <.text+>;movl %edi, %ecx;calll - <.text+>": 1,
                "movl %esp, %ebp;pushl %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, (%ebp)": 1,
                "pushl %eax;calll *(%ecx);movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "negl %eax;sbbl %eax, %eax;movw %ax, (%esi);jmp  <.text+>;pushl %esi": 1,
                "pushl (%ebp);calll *;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "jmp  <.text+>;movl %eax, (%esi);movw $, (%esi);movl %esi, %eax;popl %esi": 1,
                "pushl %ebx;calll *%esi;movl $, %edi;pushl %edi;movl %eax, -(%ebp)": 1,
                "movl $, %edi;pushl %edi;movl %eax, -(%ebp);calll *%esi;pushl -(%ebp)": 1,
                "movl (%ebp), %ecx;pushl $;pushl %ebx;calll *;movl (%ebp), %ecx": 1,
                "cmpl $, -(%ebp);jne  <.text+>;movl (%ebp), %eax;movl (%eax), %eax;pushl $": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;incl -(%ebp);pushl %eax": 1,
                "pushl %edi;pushl %esi;pushl %eax;calll *;popl %edi": 1,
                "pushl $;pushl (%ebp);subl $, %esp;leal (%ebp), %esi;movl %esp, %edi": 1,
                "cmpl %esi, (%ebp);je  <.text+>;movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "movl %ecx, %ebx;xorl %esi, %esi;movl %esi, -(%ebp);movl %esi, -(%ebp);calll *": 1,
                "cmpl %esi, (%ebx);jne  <.text+>;cmpl %esi, (%ebx);je  <.text+>;leal (%ebp), %eax": 1,
                "andl $, -(%ebp);xorl %esi, %esi;movl -(%ebp), %eax;cmpl %esi, %eax;je  <.text+>": 1,
                "calll *(%ecx);andl $, -(%ebp);movl $, -(%ebp);movl $, %eax;retl": 3,
                "movl $, %eax;retl;movl -(%ebp), %edi;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "calll - <.text+>;leal -(%ebp), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 11,
                "movl (%eax), %eax;jmp  <.text+>;xorl %eax, %eax;pushl (%ebp);pushl $": 4,
                "jmp  <.text+>;xorl %eax, %eax;pushl (%ebp);pushl $;pushl %eax": 4,
                "pushl (%ebp);leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %esi;leal -(%ebp), %edi": 5,
                "pushl %edi;pushl -(%ebp);pushl %eax;calll *(%ecx);movl %eax, -(%ebp)": 2,
                "pushl -(%ebp);movb $, -(%ebp);calll - <.text+>;cmpl %edi, -(%ebp);jge  <.text+>": 6,
                "calll *%esi;pushl %eax;calll - <.text+>;orl $-, -(%ebp);movl -(%ebp), %ecx": 1,
                "pushl %edx;pushl %eax;calll *(%ecx);movl %eax, -(%ebp);cmpl %edi, (%esi)": 2,
                "calll  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp);leal -(%ebp), %eax": 1,
                "popl %ebx;leave;retl $;movl -(%ebp), %eax;xorl %edi, %edi": 1,
                "calll *;movb $, -(%ebp);leal -(%ebp), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "movl $, (%ebx);movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl , %esi": 1,
                "retl $;movl -(%ebp), %eax;testl %eax, %eax;je  <.text+>;movl (%eax), %ecx": 2,
                "pushl (%ebp);pushl %eax;subl $, %esp;leal -(%ebp), %esi;movl %esp, %edi": 1,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl %esi, -(%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl %ebx, %ecx;calll - <.text+>": 1,
                "calll - <.text+>;movl %eax, (%ebx);movl %edi, %ecx;calll - <.text+>;movl %eax, %ecx": 1,
                "movl %eax, (%ebx);movl %edi, %ecx;calll - <.text+>;movl %eax, %ecx;calll - <.text+>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <.text+>;andl %eax, -(%ebp);andl %eax, -(%ebp)": 7,
                "movl %eax, %ecx;calll - <.text+>;movl %eax, -(%ebp);xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "leal -(%ebp), %eax;jmp  <.text+>;movl (%ebp), %edi;movl %edi, %ecx;calll - <.text+>": 1,
                "leal -(%ebp), %eax;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx": 2,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;movl %eax, -(%ebp);cmpl %esi, (%ebx)": 1,
                "movl %eax, (%ebx);pushl %edi;pushl -(%ebp);pushl (%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);movl %ebx, %ecx;calll - <.text+>": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ebx), %eax;movl (%eax), %ecx;subl $, %esp": 1,
                "cmpl %edi, (%ebx);jne  <.text+>;cmpl %edi, (%ebx);je  <.text+>;pushl -(%ebp)": 1,
                "movl , %esi;calll *%esi;pushl -(%ebp);calll *%esi;pushl -(%ebp)": 3,
                "pushl -(%ebp);calll *%esi;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl $;pushl (%ebp);movl %ecx, %esi;xorl %edi, %edi": 1,
                "andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 1,
                "pushl %eax;movl (%ebp), %eax;pushl $;pushl $;pushl (%eax)": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;testl %eax, %eax;je  <.text+>": 1,
                "calll *;movl -(%ebp), %esi;xorl -(%ebp), %esi;calll *;xorl %eax, %esi": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movw %ss, -(%ebp);movw %cs, -(%ebp)": 1,
                "leal (%ebp), %eax;movl %eax, -(%ebp);leal (%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl $": 1,
                "calll *;movl %eax, %esi;incl %esi;leal (%esi,%esi), %eax;addl $, %eax": 1,
                "calll *%esi;testl %eax, %eax;jg  <.text+>;calll *%esi;jmp  <.text+>": 2,
                "testl %eax, %eax;jg  <.text+>;calll *%esi;jmp  <.text+>;calll *%esi": 2,
                "jne  <.text+>;pushl $;calll - <.text+>;pushl %ebx;pushl %ebx": 1,
                "pushl %ebx;calll *;testl %eax, %eax;jne  <.text+>;movl , %esi": 1,
                "andl $, %eax;orl $, %eax;pushl %eax;calll - <.text+>;movl %edi, %eax": 1,
                "calll - <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "cmpw $, (%eax);jne  <.text+>;movl (%eax), %ecx;addl %eax, %ecx;cmpl $, (%ecx)": 1,
                "movl (%eax), %ecx;addl %eax, %ecx;cmpl $, (%ecx);jne  <.text+>;movzwl (%ecx), %eax": 1,
                "movl %ecx, (%eax);calll *;movl , %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "pushl ;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "addl $, %esp;movl %eax, %esi;movl %esi, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>": 1,
                "movl %esi, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>;pushl %esi;calll *": 1,
                "jmpl *;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl $;pushl %edi;calll  <.text+>;testb $, (%ebp);je  <.text+>": 1,
                "testb $, (%ebp);je  <.text+>;pushl %esi;calll - <.text+>;popl %ecx": 1,
                "popl %esi;jmp  <.text+>;movl %edi, %ecx;calll  <.text+>;testb $, (%ebp)": 1,
                "pushl %edi;calll - <.text+>;popl %ecx;movl %edi, %eax;popl %edi": 1,
                "int;int;cmpl $, %eax;jae  <.text+>;negl %eax": 1,
                "testl %eax, (%eax);xchgl %esp, %eax;movl (%eax), %eax;pushl %eax;retl": 1,
                "pushl %ecx;leal (%esp), %ecx;subl $, %ecx;subl $, %eax;testl %eax, (%ecx)": 1,
                "int;xorl %eax, %eax;retl;int;int": 1,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "decl (%ebp);js  <.text+>;movl (%ebp), %ecx;subl (%ebp), %ecx;movl %ecx, (%ebp)": 1,
                "retl;movl -(%ebp), %esp;jmp - <.text+>;calll  <.text+>;int": 1,
                "movl -(%ebp), %esp;jmp - <.text+>;calll  <.text+>;int;int": 1,
                "decl (%ebp);js  <.text+>;subl %esi, (%ebp);movl (%ebp), %ecx;calll *(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "movl -(%ebp), %ecx;jmp - <.text+>;movl -(%ebp), %ecx;jmp - <.text+>;movl $, %eax": 31,
                "addl $, %ecx;jmp - <.text+>;movl -(%ebp), %ecx;addl $, %ecx;jmp - <.text+>": 46,
                "jmp - <.text+>;leal (%ebp), %ecx;jmp - <.text+>;leal -(%ebp), %ecx;jmp - <.text+>": 7,
                "leal -(%ebp), %ecx;jmpl *;leal -(%ebp), %ecx;jmp - <.text+>;movl $, %eax": 2,
                "int;leal -(%ebp), %ecx;jmpl *;leal -(%ebp), %ecx;jmp - <.text+>": 1,
                "addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);jp - <.text+>;addl (%ecx), %eax": 1,
                "addb %al, (%eax);jmp ;addb %al, (%eax);addb %dh, %cl;iretl": 1,
                "addb %ch, (%ecx);rolb (%ebx);addl %eax, (%edx);addb %al, (%eax);addb %dh, (%ecx)": 1,
                "rolb (%ebx);addl %eax, (%edx);addb %al, (%eax);addb %al, -(%ecx);addl (%ecx), %eax": 1,
                "movb , %al;fimull (%edi);addb %al, (%eax);xorb %ah, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%ebx);addb %al, (%eax);addb %al, (%edx);addb %al, (%eax)": 2,
                "addb %al, %bl;rolb (%ebx);addl %ecx, -;rolb (%ebx);addl %ecx, (%esi)": 1,
                "rolb (%ebx);addl %ecx, -;rolb (%ebx);addl %ecx, (%esi);addb %al, (%eax)": 1,
                "addl %eax, (%edi);addb %al, (%eax);addb %ah, %bl;rolb (%ebx);addl %edx, (%edx)": 1,
                "addb %al, (%eax);addb %cl, %bl;rolb (%ebx);addl %edx, (%eax,%eax);addb %al, (%eax)": 1,
                "sbbb %al, (%eax);addb %al, (%eax);sbbl %eax, (%eax);addb %al, (%eax);addb (%eax), %al": 2,
                "addb %cl, -(%edx);addl (%ecx), %eax;adcb %al, (%eax);addb %al, (%eax);pushl %edx": 1,
                "pushfl;adcb (%ecx,%eax), %al;addl %eax, (%eax);addb %al, (%eax);cmpb $, %al": 1,
                "addb %al, (%eax);addb %al, (%ebx);rolb %cl, (%ebx);addl %esp, (%eax);addl $, %eax": 1,
                "addb %al, (%eax);insb %dx, %es:(%edi);adcl (%ecx,%eax), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);cwtl;adcl (%ecx,%eax), %eax;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%edx);addb %al, (%eax);addb %ch, (%edx,%edx,);addl %eax, (%edx);addb %al, (%eax)": 1,
                "addb %ch, (%edx,%edx,);addb %al, (%eax);movb $-, %ah;addl (%ecx), %eax;addb (%eax), %al": 1,
                "das;testb $, %al;addl %eax, (%eax);addb %al, (%eax);addb %cl, (%esi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);andb %bl, %dl;addl (%ecx), %eax": 1,
                "addl %eax, ;roll %cl, (%ebx);addl %eax, (%esi);addb %al, (%eax);addb %dl, -(%edx)": 1,
                "roll %cl, (%ebx);addl %eax, (%esi);addb %al, (%eax);addb %dl, -(%edx);addl (%ecx), %eax": 1,
                "addb %al, -(%edx);addl (%ecx), %eax;orb %al, (%eax);addb %al, (%eax);popl %edx": 1,
                "addb %al, (%eax);addb %ah, -(%esi);incl (%eax);addb %al, (%eax);addb %cl, (%eax)": 1,
                "andb %al, ;addb %al, (%eax);nop;adcl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, %ch;roll %cl, (%ebx);addl %eax, (%edx);addb %al, (%eax)": 1,
                "addb %cl, (%eax);addb %al, (%eax);addb %dl, -(%eax);addb $, %al;cwtl": 1,
                "movb $, %dh;addl %eax, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %al, (%eax);orl $, %eax": 2,
                "addb %al, (%eax);addb %al, (%eax);subb $-, %al;addl (%ecx), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %esi;fildl (%ebx);addl %esp, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);decl %esi;aam $;addl %esp, (%eax)": 1,
                "jmpl *(%esi);addl $, %eax;addb %al, (%eax);lesl (%edi), %edx;addb $, %al": 1,
                "incl (%edx);addb %al, (%eax);addb %cl, (%edx);addl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, (%eax);sbbb %al, (%ecx,%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);into;aam $;addl %eax, (%edx);addb %al, (%eax)": 1,
                "addl %eax, (%edx);addb %al, (%eax);addb %ch, %cl;aam $;addl %eax, (%edx)": 1,
                "addl %eax, (%edx);addb %al, (%eax);addb %bl, ;addb %al, (%eax);addb %ah, ": 1,
                "addb %al, (%eax);addb %ah, ;addb %al, (%eax);addb %dh, (%eax);aad $": 1,
                "addb %al, (%eax);je - <.text+>;addl (%ecx), %eax;orb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);jl - <.text+>;addl (%ecx), %eax;orb $, %al;addb %al, (%eax)": 1,
                "addb %dl, (%edi);addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %ah, (%ecx,%ebx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);movl $, %esi;addl $, %eax": 1,
                "fst %st();addl (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax);calll ": 1,
                "addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);decl %esp;salc": 1,
                "jno - <.text+>;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);jl - <.text+>;addl (%ecx), %eax;addb (%eax), %al": 1,
                "addl (%ecx), %eax;pushl %es;addb %al, (%eax);addb %ah, (%edi);addb %al, (%eax)": 1,
                "pushfl;salc;addl (%ecx), %eax;orl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, %ch;salc;addl (%ecx), %eax;orl %eax, (%eax);addb %al, (%eax)": 1,
                "addl (%ecx), %eax;orl %eax, (%eax);addb %al, (%eax);jecxz - <.text+>;addl (%ecx), %eax": 1,
                "addb %al, (%eax);movl %edx, %edi;addl (%ecx), %eax;orl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);xchgl %esp, %eax;xlatb;addl (%ecx), %eax;orl %eax, (%eax)": 1,
                "xlatb;addl (%ecx), %eax;orl %eax, (%eax);addb %al, (%eax);rclb %bh": 1,
                "addl (%ecx), %eax;orl %eax, (%eax);addb %al, (%eax);rclb %bh;addl (%ecx), %eax": 1,
                "xlatb;addl (%ecx), %eax;andl $, %eax;fadds (%ebx);addl %esp, ": 1,
                "addl %esp, ;fadds (%ebx);addl %ebp, (%ebx);addb %al, (%eax);addb %bh, (%ebx)": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax)": 8,
                "movb , %al;addb %al, (%eax);xchgl %esp, %eax;loopne ;addl %eax, (%ecx)": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %ch, (%eax,%eax);addb %al, (%eax);subl $, %eax": 1,
                "addb %ah, (%edx);addb %al, (%eax);addb %ch, (%edx);addb %al, (%eax);addb %ch, (%edx)": 1,
                "addb %al, (%eax);addb %ch, (%edx);addb %al, (%eax);addb %al, (%edi);addb %al, (%eax)": 1,
                "orb $-, %al;addl (%ecx), %eax;orb %al, (%eax);addb %al, (%eax);popl %ss": 1,
                "addb %ch, -(%ecx);addl (%ecx), %eax;orb %al, (%eax);addb %al, (%eax);je - <.text+>": 1,
                "orb %al, (%eax);addb %al, (%eax);xchgl %ebp, %eax;flds (%ebx);addl %ecx, (%eax)": 1,
                "flds (%ebx);addl %edi, %edi;incl (%eax);addb %al, (%eax);addb %cl, (%eax)": 1,
                "sarb $, %dh;addl %eax, (%eax);addb %al, (%eax);addb %dh, (%eax);movb , %al": 1,
                "addb %al, (%eax);subl %eax, (%eax);addb %al, (%eax);addb (%eax), %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);outb %al, %dx;flds (%ebx);addl %eax, (%ecx)": 1,
                "addb %al, (%eax);outb %al, %dx;flds (%ebx);addl %eax, (%ecx);addb %al, (%eax)": 1,
                "addl %ecx, (%eax);addb %al, (%eax);addb %dh, (%ecx);fiaddl (%ebx);addl %ecx, (%eax)": 1,
                "addb %al, (%eax);xorb %ah, (%eax);addb %al, (%eax);das;testl $, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);fcmovu %st(), %st();addl (%ecx), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%edi);fildl (%ebx);addl %eax, (%ecx);addb %al, (%eax)": 1,
                "fildl (%ebx);addl %eax, (%ecx);addb %al, (%eax);addb %bl, (%edx);fildl (%ebx)": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %bl, (%edx);fildl (%ebx);addl %esp, (%eax)": 1,
                "addl $, %eax;addb %al, (%eax);cmpb $, %al;addb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);xorb $-, %al": 2,
                "addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);cmpb $-, %al;addl (%ecx), %eax": 2,
                "andb %al, ;addb %al, (%eax);jo  <.text+>;addb $, %al;addb %al, (%eax)": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %bh, -(%ecx);addl (%ecx), %eax;addb (%eax), %al": 1,
                "addb %al, (%eax);addb %al, (%ebx,%ebx,);addb %al, (%eax);addl %ecx, (%edx);addb %al, (%eax)": 1,
                "addl %ecx, (%eax);addb %al, (%eax);addb %ah, %bh;fildl (%ebx);addl %ecx, (%eax)": 1,
                "faddl (%ebx);addl %ebx, (%esi);addb %al, (%eax);addb %ah, %dh;faddl (%ebx)": 1,
                "addb %al, (%eax);addb %bl, ;addb %al, (%eax);addb %ch, (%eax);fldl (%ebx)": 1,
                "addb %al, (%eax);addb %ch, (%eax);fldl (%ebx);addl %ebp, (%eax);addb %al, (%eax)": 1,
                "fldl (%ebx);addl %ebp, (%eax);addb %al, (%eax);addb %dh, (%ebx);fldl (%ebx)": 1,
                "addl (%ecx), %eax;xorb %al, (%eax);addb %al, (%eax);sbbb $, %ch;addl %edi, %edi": 1,
                "insb %dx, %es:(%edi);movb , %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);andb $, %al;addb $, %al;andb %al, ": 2,
                "cwtl;andb (%ecx,%eax), %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "enter $, $;addl %eax, (%eax);addb %al, (%eax);calll ;addb %al, (%eax)": 1,
                "addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);sbbb %ah, (%ebx);addb $, %al": 1,
                "andb %al, ;addb %al, (%eax);pushfl;andl (%ecx,%eax), %eax;addl %eax, (%eax)": 1,
                "inb %dx, %al;andl (%ecx,%eax), %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "fiadds (%ebx);addl %esp, (%eax);addl $, %eax;addb %al, (%eax);adcb %ah, (%esp,%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dh, (%edx);xorl $, %eax": 1,
                "cmpb $, %al;addb $, %al;addl %eax, (%eax);addb %al, (%eax);popl %esp": 1,
                "addb %bh, (%ebx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%ecx)": 1,
                "addb %al, (%ecx);addb %al, (%eax);addb %bl, (%esp);xchgl %ebx, %eax;sbbl %eax, (%edx)": 1,
                "lodsb (%esi), %al;andb $, %al;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, ;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);movb $, %bh": 1,
                "addb %al, (%eax);addb %al, (%eax);movb $, %bh;addl %eax, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);pushl %esp;andl $, %eax;xchgl %ebx, %eax;sbbl %eax, (%edx)": 1,
                "addb %al, (%edx);addb %al, (%eax);addb %bl, %bl;fiadds (%ebx);addl %eax, (%ecx)": 1,
                "decl %esp;addb $, %al;addl %eax, (%eax);addb %al, (%eax);testb %ah, (%esi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);subl $, %eax": 3,
                "addb %al, (%eax);subl $, %eax;addb %al, (%eax);addb %al, (%edx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb $, %al;addb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "movb $, %ah;addb $, %al;addl %eax, (%eax);addb %al, (%eax);inb %dx, %al": 1,
                "addl %eax, (%eax);addb %al, (%eax);inb %dx, %al;daa;addb $, %al": 1,
                "addb %dh, (%ebp);addb %al, (%eax);addb %bh, (%ebp);addb %al, (%eax);addb %al, %ch": 1,
                "filds (%ebx);addl %eax, (%eax,%eax);addb %al, (%eax);int $;addl (%ecx), %eax": 1,
                "sbbb $, %al;addb $, %al;addl %eax, (%eax);addb %al, (%eax);je  <.text+>": 1,
                "addb %al, (%eax);addb %al, (%eax);inb $, %al;addl (%ecx), %eax;addb %al, (%eax)": 1,
                "addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);adcl %eax, %esp;addl (%ecx), %eax": 1,
                "cmpb %ch, (%ecx);addb $, %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "loopne ;addl %eax, (%edx);addb %al, (%eax);addb %ah, -(%ebp);addl (%ecx), %eax": 1,
                "addb %ah, -(%ebp);addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);jo - <.text+>": 1,
                "addl (%ecx), %eax;addb $, %al;addb %al, (%eax);jnp - <.text+>;addl (%ecx), %eax": 1,
                "addl %eax, (%esi);addb %al, (%eax);addb %dl, (%edi);addb %al, (%eax);addb %ah, (%ebp)": 1,
                "addb %al, (%eax);addb %al, (%eax);shlb %al;addl (%ecx), %eax;addb %al, (%eax)": 1,
                "loope ;addl %eax, (%esi);addb %al, (%eax);addb %ah, (%ebx);loope ": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %ch, (%ecx)": 1,
                "addb %al, (%eax);popl %esp;subb (%ecx,%eax), %al;andb %al, ;addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);insb %dx, %es:(%edi);subb (%ecx,%eax), %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);insb %dx, %es:(%edi);subb (%ecx,%eax), %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (%ebx);addb %al, (%eax);addb %ch, (%ebx);addb %al, (%eax);addb %dh, (%ebx)": 3,
                "addb %al, (%eax);decl %esp;subl (%ecx,%eax), %eax;addl %eax, (%eax);addb %al, (%eax)": 1,
                "movb , %al;incl %edx;popl %edx;addl %eax, (%ecx);addb %al, (%eax)": 1,
                "popl %edx;addl %eax, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);movl $, %esp;addl $, %eax;addb %al, (%eax);lodsb (%esi), %al": 1,
                "addb %al, (%eax);lodsb (%esi), %al;subl (%ecx,%eax), %eax;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, -(%eax);addb $, %al;movb $-, %ah;movl $, %ecx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cld": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, (%esi);loop ;addl %eax, (%ecx)": 1,
                "sahf;pushl $;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl $;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, -(%eax);decl ;addl $, %eax;addb %al, (%eax);fsubrs (%esi)": 1,
                "decl ;addl $, %eax;addb %al, (%eax);fsubrs (%esi);addb $, %al": 1,
                "addb %ch, -(%ebp);addl (%ecx), %eax;addb $, %al;addb %al, (%eax);jne - <.text+>": 1,
                "addb %al, (%eax);addb %dl, -(%eax);addb $, %al;cmpb $-, %bh;ljmpl *(%edx,%esi,)": 1,
                "lretl;jb  <.text+>;addl %eax, (%ecx);addb %al, (%eax);addb %dl, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);int": 1,
                "addb %al, (%eax);addb %dl, -(%eax);addb $, %al;loopne -;movl , %eax": 1,
                "loopne -;movl , %eax;addb %al, (%eax);addb %dh, (%eax);movb , %al": 1,
                "xorb %al, (%ecx,%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movb , %al;addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);addb (%eax), %al": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb $, %al;addb %al, (%eax);addb %al, (%eax)": 3,
                "addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);sbbb %ah, %ah;addl (%ecx), %eax": 1,
                "cmpl %esp, %esp;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);incl %ecx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %cl, (%esp)": 1,
                "addb %al, (%eax);addb %cl, (%esp);addl %eax, (%edx);addb %al, (%eax);addb %dl, -(%edi)": 1,
                "addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);andl $, %esp;addl %eax, (%edx)": 1,
                "addb %cl, (%eax);addb %al, (%eax);addb %dl, -(%eax);addb $, %al;decl %eax": 1,
                "addb %al, (%eax);addb %dh, (%eax);movb , %al;addb %al, (%eax);pushl %ecx": 1,
                "addb %cl, ;addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %bh, %al": 1,
                "addb %al, (%eax);inb %dx, %al;inb $, %al;addl %eax, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, ;addb %al, (%eax);orb $-, %al;addl (%ecx), %eax": 1,
                "orl (%eax), %eax;addb %al, (%eax);xchgl %ebp, %eax;inl $, %eax;addl %ecx, (%eax,%eax)": 1,
                "popfl;inl $, %eax;addl %ecx, -;inl $, %eax;addl %ecx, (%esi)": 1,
                "lock;xorb (%ecx,%eax), %al;addl %eax, (%eax);addb %al, (%eax);addb $, %al": 1,
                "addb %al, (%eax);jmpl *%ebp;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "jmpl *%ebp;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "outb %al, $;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "addb %al, (%eax);xorb %ah, (%eax);addb %al, (%eax);movb $-, %dh;addl %eax, (%ecx)": 1,
                "addb (%eax), %al;addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);cwtl": 1,
                "addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);cwtl;xorb $, %al": 1,
                "addb %al, (%eax);decl %ebx;outb %al, $;addl %eax, (%ecx);addb %al, (%eax)": 1,
                "addl %eax, (%eax,%eax);addb %al, (%eax);ja - <.text+>;addl (%ecx), %eax;addb $, %al": 1,
                "addl %ecx, (%esi);addb %al, (%eax);addb %ah, %ch;outb %al, $;addl %eax, (%eax,%eax)": 1,
                "addl %edx, (%edx);addb %al, (%eax);addb %dl, (%ecx);outl %eax, $;addl %edx, (%ebx)": 1,
                "addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 2,
                "addl (%ecx), %eax;addl $, %eax;outl %eax, $;addl %eax, (%esi);addb %al, (%eax)": 1,
                "addb %ch, (%eax);addb %al, (%eax);addb %dh, (%ebx);addb %al, (%eax);addb %bh, (%esi)": 2,
                "outl %eax, $;addl %eax, (%esi);addb %al, (%eax);addb %dl, %ah;outl %eax, $": 1,
                "addb %al, (%eax);outsb (%esi), %dx;calll ;addb %al, (%eax);jns - <.text+>": 1,
                "into;calll ;addb %al, (%eax);fld;addl (%ecx), %eax": 1,
                "subb %al, (%eax);addb %al, (%eax);jmp ;addb %al, (%eax);addb %dh, %ah": 1,
                "addb %dh, %ah;calll ;addb %al, (%eax);addl (%ecx), %eax;subb %al, (%eax)": 1,
                "addb %al, (%eax);adcl $, %eax;addb %al, (%eax);addb %ah, (%eax);jmp ": 1,
                "decl %ecx;jmp ;addb %al, (%eax);pushl %esp;jmp ": 1,
                "pushl %esp;jmp ;addb %al, (%eax);popl %edi;jmp ": 1,
                "addb %al, (%eax);popl %edi;jmp ;addb %al, (%eax);jmp ": 1,
                "jmp ;addb %al, (%eax);jmp ;addb %al, (%eax);ja - <.text+>": 1,
                "addb %cl, (%edx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%esi)": 1,
                "cmpl %eax, (%eax);addb %al, (%eax);cmpb (%eax), %al;addb %al, (%eax);addl %eax, (%eax)": 1,
                "addb %cl, %dl;jmp ;addb %al, (%eax);aad $-;addl (%ecx), %eax": 1,
                "addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %bh, (%eax,%edi);addl %esp, (%eax)": 1,
                "addb (%eax), %al;addb %al, (%eax);sbbb %dl, %ch;addl (%ecx), %eax;addb (%eax), %al": 1,
                "addb %al, (%eax);sbbb %dl, %ch;addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax)": 1,
                "addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);pushl %eax;ljmpl $, $": 1,
                "addb %bl, (%edx);addb %al, (%eax);addb %ah, (%edx);addb %al, (%eax);addb %ch, (%edx)": 2,
                "addb %al, (%eax);addb %ch, (%edx);addb %al, (%eax);addb %dh, (%edx);addb %al, (%eax)": 4,
                "adcl (%eax), %eax;addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);xorb $, %al": 1,
                "addl %eax, (%eax);addb %al, (%eax);incl %esp;cmpb (%ecx,%eax), %al;addb %al, (%eax)": 1,
                "andb %al, ;addb %al, (%eax);je  <.text+>;addb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);incl %eax;jmp  <.text+>;addl %eax, (%ecx)": 1,
                "addb %ch, (%ebp);addb %al, (%eax);addb %bh, (%eax);addb %al, (%eax);addb %al, %al": 1,
                "addb %bh, (%eax);addb %al, (%eax);addb %al, %al;jmp  <.text+>;addl %eax, (%esi)": 1,
                "addb %al, (%eax);addb %ah, %bl;jmp  <.text+>;addl %eax, (%ebx);addb %al, (%eax)": 1,
                "addl %ecx, (%eax,%eax);addb %al, (%eax);imulb %bl;addl (%ecx), %eax;orl $, %eax": 1,
                "addb %al, (%eax);imulb %bl;addl (%ecx), %eax;orl $, %eax;jmp  <.text+>": 1,
                "jmp  <.text+>;addl %ecx, ;inb %dx, %al;addl (%ecx), %eax;orl $, %eax": 1,
                "inb %dx, %al;addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);popal": 1,
                "addb %al, (%eax);pushl %eax;movb , %al;iretl;into": 1,
                "addb %bl, (%ecx);addb %al, (%eax);addb %ah, (%ecx);addb %al, (%eax);addb %ch, (%esp,%ebp,)": 1,
                "addb %dl, %ch;inb %dx, %al;addl (%ecx), %eax;popl %es;addb %al, (%eax)": 1,
                "addb %bl, %ch;inb %dx, %al;addl (%ecx), %eax;popl %es;addb %al, (%eax)": 1,
                "addl (%ecx), %eax;popl %es;addb %al, (%eax);addb %bh, %dh;inb %dx, %al": 1,
                "addb %cl, (%ecx);inl %dx, %eax;addl (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);cmpl %ebp, %ebp;addl (%ecx), %eax": 1,
                "pushl %es;addb %al, (%eax);addb %ah, -(%ecx);addl (%ecx), %eax;pushl %es": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);subb $, %ch;addl %eax, (%eax)": 1,
                "addb %bh, %al;cmpl $, %eax;xchgl %ebx, %eax;sbbl %eax, (%esi);addb %al, (%eax)": 1,
                "iretl;inl %dx, %eax;addl (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %al, (%esi);addb %al, (%eax);addb %al, (%edi)": 1,
                "cmpb %bh, (%esi);addb $, %al;addl %eax, (%eax);addb %al, (%eax);cwtl": 1,
                "addb %al, (%eax);addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);pushl %es": 1,
                "addb %al, (%eax);pushl %cs;outb %al, %dx;addl (%ecx), %eax;addl (%eax), %eax": 1,
                "outb %al, %dx;addl (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "enter $, $;addl %eax, (%eax);addb %al, (%eax);xorb %bh, (%edi);addb $, %al": 1,
                "outb %al, %dx;addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);pushl %esi": 1,
                "idivl %edi;ljmpl *(%ecx);jmp  <.text+>;addl %ecx, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%eax);movb , %al;addb %al, (%eax);jmp  <.text+>": 1,
                "movb , %al;addb %al, (%eax);jmp  <.text+>;addl %eax, (%edi);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, ;addb %al, (%eax);addb %dl, ;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, -(%eax);addl (%ecx), %eax;popl %es;addb %al, (%eax)": 1,
                "addb %al, (%eax);rep  addl %eax, %ss:(%ecx);addl %eax, (%eax);addb %al, (%eax);adcb (%eax), %al": 1,
                "addb %al, (%eax);cld;incl %eax;addb $, %al;andb %al, ": 1,
                "addb %al, %dl;outl %eax, %dx;addl (%ecx), %eax;orl (%eax), %eax;addb %al, (%eax)": 1,
                "pushl %cs;addb %al, (%eax);addb %ah, %dl;outl %eax, %dx;addl (%ecx), %eax": 1,
                "cli;outl %eax, %dx;addl (%ecx), %eax;adcb (%eax), %al;addb %al, (%eax)": 1,
                "orb %al, %dh;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);orb %al, (%eax)": 1,
                "addb %al, (%eax);adcl $, %eax;addb %al, (%eax);addb %bh, %ah;incl %ecx": 1,
                "addl %eax, (%eax);addb %al, (%eax);xorl %esi, %eax;addl (%ecx), %eax;addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;lcalll *-(%eax)": 1,
                "addb %bh, (%ebx);addb %al, (%eax);addb %al, %dh;lock;addl (%ecx), %eax": 1,
                "addb %al, (%eax);fdiv %st(), %st();addl (%ecx), %eax;orl (%eax), %eax;addb %al, (%eax)": 1,
                "std;lock;addl (%ecx), %eax;orl (%eax), %eax;addb %al, (%eax)": 1,
                "addl (%ecx), %eax;orl (%eax), %eax;addb %al, (%eax);orb %dh, %cl;addl (%ecx), %eax": 1,
                "addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %bl, (%eax);addl $, %eax": 1,
                "addb %dh, (%esp,%eax,);addb $, %al;andb %al, ;addb %al, (%eax);andb $, %al": 1,
                "addb %al, (%eax);andb $, %al;addb $, %al;addl %eax, (%eax);addb %al, (%eax)": 4,
                "addb $, %al;addl %eax, (%eax);addb %al, (%eax);movb %al, (%ebp);addl %eax, (%eax)": 1,
                "adcl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addl %eax, (%eax)": 1,
                "enter $, $;andb %al, ;addb %al, (%eax);movl $, %eax;addb %al, (%eax)": 1,
                "addb $, %al;addl %eax, (%eax);addb %al, (%eax);subb $, %al;addb $, %al": 3,
                "andb %al, ;addb %al, (%eax);popl %esp;incl %edi;addb $, %al": 1,
                "fcomi %st();addl (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax);jecxz - <.text+>": 1,
                "orb %al, (%eax);addb %al, (%eax);pushl %eax;movb , %al;jno  <.text+>": 1,
                "lesl (%edi), %eax;addl %esp, (%eax);addl $, %eax;addb %al, (%eax);movsb (%esi), %es:(%edi)": 1,
                "movsb (%esi), %es:(%edi);incl %edi;addb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);aam $;addb $, %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "incl %eax;rep  addl (%ecx), %eax;andb %al, ;addb %al, (%eax);nop": 1,
                "addl (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax);jle - <.text+>;addl (%ecx), %eax": 1,
                "addl %eax, (%eax);addb %al, (%eax);jle - <.text+>;addl (%ecx), %eax;addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %ah, (%eax);addb $, %al;andb %al, ;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %ebx;addl (%ecx), %eax;addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %al, (%eax)": 2,
                "addb %al, (%eax);popl %ss;hlt;addl (%ecx), %eax;addb $, %al": 1,
                "hlt;addl (%ecx), %eax;andb %al, ;addb %al, (%eax);xorb %cl, (%edx)": 1,
                "addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);jno - <.text+>;addl (%ecx), %eax": 1,
                "addb %al, (%eax);addl $, %eax;addb %al, (%eax);addb %cl, (%edx,%ecx,);xchgl %ebx, %eax": 1,
                "addb %bl, (%edx,%ecx,);addl %eax, (%ecx);addb %al, (%eax);addb %bl, (%edx,%ecx,);addb %al, (%eax)": 1,
                "addb %al, (%eax);cmpsb %es:(%edi), (%esi);hlt;addl (%ecx), %eax;addb (%eax), %al": 1,
                "addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);adcb $-, %al;addl (%ecx), %eax": 1,
                "addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);popl %ds;cmc": 1,
                "addb %al, (%eax);decl %ebx;cmc;addl (%ecx), %eax;addl (%eax), %eax": 1,
                "cmc;addl (%ecx), %eax;adcl $, %eax;cmc;addl (%ecx), %eax": 1,
                "addb %cl, %ah;decl %edx;addb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb (%eax), %al;addb %al, (%eax);sahf;cmc;addl (%ecx), %eax": 1,
                "addl (%ecx), %eax;addl $, %eax;cmc;addl (%ecx), %eax;addl %eax, (%eax)": 1,
                "addb %dh, (%eax);movb , %al;addb %al, (%eax);andb $, %al;addb (%ecx), %al": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %bh, (%esp,%ecx,);addb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addl (%eax), %eax;addb %al, (%eax);outl %eax, %dx": 1,
                "cmc;addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);cli": 1,
                "addl (%ecx), %eax;addl (%eax), %eax;addb %al, (%eax);cli;cmc": 1,
                "addl (%ecx), %eax;addl $, %eax;testb $, (%ebx);addb (%eax), %al;addb %al, (%eax)": 1,
                "das;testb $, (%ebx);addl (%eax), %eax;addb %al, (%eax);aaa": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);testb $, (%ebx)": 1,
                "addl $, %eax;testb $, (%ebx);pushl %es;addb %al, (%eax);addb %ch, (%eax)": 1,
                "addb %dl, (%esi);testl $, (%ebx);addb %ah, (%ecx);testl $, (%ebx);addb %ah, (%ecx)": 1,
                "addb %ah, (%ecx);testl $, (%ebx);addb %dl, %ah;testb $, (%ebx);adcb $, %al": 1,
                "addl (%ecx), %eax;adcl (%eax), %eax;addb %al, (%eax);aaa;testl $, (%ebx)": 1,
                "adcl (%eax), %eax;addb %al, (%eax);aaa;testl $, (%ebx);addb %al, -(%edx)": 1,
                "addb %al, (%eax);pushl %eax;movb , %al;subb $, %al;addb (%ecx), %al": 1,
                "pushl %eax;movb , %al;subb $, %al;addb (%ecx), %al;addb %al, (%eax)": 1,
                "addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);incl %eax;clc": 1,
                "pushl %eax;movb , %al;xorb $-, %al;addb (%ecx), %al;addb %al, (%eax)": 2,
                "hlt;decl %edi;addb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, (%eax,%edx,);addb %al, (%eax);lesl (%eax), %edx;addl %eax, (%eax)": 1,
                "addb %dl, -(%eax);addb $, %al;inb %dx, %al;decl -(%eax);addb (%ecx), %al": 1,
                "addl %eax, (%eax);addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);addb $, %al": 1,
                "pushl %eax;movb , %al;pushal;testl %eax, (%edx);addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %dl, (%ecx,%edx,);addb %al, (%eax);movb $, %ah;addb $, %al": 1,
                "addb %dl, -(%eax);addb $, %al;fdivr %st();incl %esp;xchgb %al, (%edx)": 1,
                "fdivr %st();incl %esp;xchgb %al, (%edx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "inb %dx, %al;calll *%eax;xchgl %eax, (%edx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl (%eax), %eax;addb %al, (%eax);xorl %edi, %ecx;addl (%ecx), %eax;addb %al, (%eax)": 1,
                "pushl $-;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);jne - <.text+>": 1,
                "addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);movb %bh, %cl;addl (%ecx), %eax": 1,
                "orl $, %eax;stc;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (%ebx);addb %al, (%eax);addb %ch, (%esi);addb %al, (%eax);addb %dh, (%esi)": 1,
                "adcl $, %eax;stc;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%edi);addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %ch, (%eax)": 1,
                "pushl $;addb %al, (%eax);addb %bh, (%eax);pushl %esp;addb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);repne  testl $, (%ebx);sbbl %eax, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orl $, %eax;addb %al, (%eax)": 2,
                "addb %al, (%eax);addb %al, (%eax);cmpb %dl, %bh;addl (%ecx), %eax;addb %al, (%eax)": 1,
                "cli;addl (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax);jge - <.text+>": 1,
                "jge - <.text+>;addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);movl %edx, %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);movl $, %edi": 1,
                "addb %al, (%eax);addb %bh, %bh;cli;addl (%ecx), %eax;addb %al, (%eax)": 1,
                "addb (%eax), %al;addb %al, (%eax);idivl %edx;addl (%ecx), %eax;addl (%eax), %eax": 1,
                "popl %es;addb %al, (%eax);addb %bl, (%edi);sti;addl (%ecx), %eax": 1,
                "orb %al, (%eax);addb %al, (%eax);daa;sti;addl (%ecx), %eax": 1,
                "sti;addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl %eax;sti;addl (%ecx), %eax;orl $, %eax;sti": 1,
                "incl (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dh, %bh": 1,
                "addb %al, (%eax);addl (%ecx), %eax;addb (%eax), %al;addb %al, (%eax);popl %es": 1,
                "pushl %edi;addb $, %al;andb %al, ;addb %al, (%eax);xorb %dl, (%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, -(%esi);addl (%ecx), %eax": 1,
                "addb %al, (%eax);outsb (%esi), %dx;cld;addl (%ecx), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, -(%ebp);incl (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %al, (%eax);addb (%eax), %al;addb %al, (%eax)": 2,
                "addb %al, (%eax);pushl %eax;movb , %al;popl %ebp;xlatb": 1,
                "std;cld;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addl $, %eax;addb %al, (%eax);addb %ch, %ch": 1,
                "addb (%eax), %al;addb %al, (%eax);testb %bh, %ch;addl (%ecx), %eax;addb (%eax), %al": 1,
                "addb %al, (%eax);addb %dl, -(%eax);addb $, %al;jo - <.text+>;outb %al, %dx": 1,
                "addb %dh, (%eax);movb , %al;addb %al, (%eax);cmpl %esp, %ebp;addb (%ecx), %al": 1,
                "addb $, %al;andb %al, ;addb %al, (%eax);movl $, %eax;addb %al, (%eax)": 2,
                "addl %eax, (%eax);addb %al, (%eax);js  <.text+>;addb $, %al;andb %al, ": 1,
                "addb %al, (%eax);pushl $;addb %al, (%eax);addb %cl, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;calll *(%edx);incb (%ebx);addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %bl, ;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "incb (%ebx);addl %eax, (%ecx);addb %al, (%eax);addb %dh, (%ebx);incb (%ebx)": 1,
                "addb %dh, (%ebx);incb (%ebx);addl %eax, (%esi);addb %al, (%eax);addb %bh, (%esi)": 1,
                "jne - <.text+>;addl (%ecx), %eax;orb %al, (%eax);addb %al, (%eax);cmpb $, %dh": 1,
                "addb %al, (%eax);movl $, %eax;addb %al, (%eax);addb %dl, (%eax);addb $, %al": 1,
                "addb %al, (%eax);addb %cl, %cl;incb (%ebx);addl %eax, (%edx);addb %al, (%eax)": 1,
                "addl %eax, (%ebx);addb %al, (%eax);addb %al, (%esi);addb %al, (%eax);addb %al, (%edi)": 1,
                "addb %al, (%ecx);addb %al, (%eax);addb %ch, %ah;popl %esp;addb $, %al": 1,
                "andb %al, ;addb %al, (%eax);lodsb (%esi), %al;popl %esp;addb $, %al": 1,
                "addl %eax, (%edi);addb %al, (%eax);addb %dh, (%ebx);incl (%ebx);addl %eax, (%edi)": 1,
                "addl %eax, (%edi);addb %al, (%eax);addb %bh, (%ebx);incl (%ebx);addl %eax, (%edi)": 1,
                "incl (%ebx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%ebx);addb %al, (%eax);addb %cl, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cmpl $, %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cmpl $, %edi;addb %al, (%eax)": 1,
                "addb %al, (%eax);xchgl %edi, %eax;incl (%ebx);addl %eax, (%ebx);addb %al, (%eax)": 1,
                "pushl %esp;orb (%ebx), %al;addl %eax, (%eax);addb %al, (%eax);addb %dh, (%eax)": 1,
                "addl %ecx, (%eax);addb %al, (%eax);addb %dl, -(%eax);addb $, %al;fdivr %st()": 1,
                "movsl (%esi), %es:(%edi);orl (%ebx), %eax;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl (%eax), %eax;addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);incl %esp": 1,
                "addb %al, (%eax);incl %esp;popl %edi;addb $, %al;andb %al, ": 1,
                "addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %dl, (%edi,%ebx,);xchgl %ebx, %eax": 1,
                "subb %al, (%ebx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movb , %al;movl %ebp, (%ecx);addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);incl %esi;addb %al, (%ecx,%eax);addl %eax, (%eax);addb %al, (%eax)": 1,
                "xchgl %ebx, %eax;subb $, %al;addl %eax, (%eax);addb %al, (%eax);addb %al, ": 1,
                "addb %al, ;addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %dh, (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%eax);addl $, %eax;addb %al, (%eax);js  <.text+>": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %ah, (%edx);addl %esp, (%eax);addl $, %eax": 1,
                "addl %eax, (%eax);addb %al, (%eax);pushl %eax;bound (%ecx,%eax), %eax;andb %al, ": 1,
                "cmpl (%ecx), %eax;addb $, %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);nop;addl %eax, (%ecx,%eax);addb %al, (%eax)": 1,
                "andb %al, ;addb %al, (%eax);fsubs (%ebx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "ljmpl *(%edi);addb %al, (%eax);addb %dh, (%edi);addb %al, (%eax);addb %bh, (%edi)": 1,
                "outb %al, $;addb $, %al;addl (%eax), %eax;addb %al, (%eax);outb %al, %dx": 1,
                "addb %al, (%eax);pushl %eax;movb , %al;incw %ax;addl (%ecx), %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);xorb %ah, (%eax);addb %al, (%eax);ja  <.text+>": 1,
                "xorb %ah, (%eax);addb %al, (%eax);ja  <.text+>;addl (%ecx), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dh, -(%edx,%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);movb %ah, -(%eax);orl $, %eax;addb %al, (%eax);addb %dh, (%eax)": 1,
                "addb %al, (%eax);addl (%eax), %eax;addb %al, (%eax);pushl %esp;addb $, %al": 1,
                "addb %al, (%eax);pushl %esp;addb $, %al;andb %al, ;addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);ljmpl $, $;addb %dh, %dl;addb (%ecx,%eax), %al": 1,
                "addl $, %eax;addl (%ecx,%eax), %eax;pushl %es;addb %al, (%eax);addb %dl, (%edx)": 1,
                "addl (%ecx,%eax), %eax;pushl %es;addb %al, (%eax);addb %dl, (%edx);addl (%ecx,%eax), %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);subb (%ebx), %al;addb $, %al;addb %al, (%eax)": 1,
                "addl (%ecx,%eax), %eax;addl %eax, (%eax);addb %al, (%eax);popal;addl (%ecx,%eax), %eax": 1,
                "addb %al, (%eax);addb %ch, -(%eax);incl (%eax);addb %al, (%eax);addb %cl, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %ah, (%eax,%ebp,);addb $, %al": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %al, (%eax,%ebp,);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);testb $, %al;addb $, %al;andb %al, ": 1,
                "cwtl;pushl $;addb %al, (%eax);movl $, %eax;addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);clc;pushl $;xchgl %ebx, %eax": 1,
                "movb %ch, (%ecx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, %ah;addb $, %al;addl %eax, (%esi);addb %al, (%eax)": 1,
                "addl $, %eax;addb %al, (%eax);incl %esi;addl $, %eax;addb %al, (%eax)": 1,
                "addb %dh, (%eax);movb , %al;addb %al, (%eax);inl %dx, %eax;pushal": 1,
                "addb %al, (%eax);insl %dx, %es:(%edi);addl $, %eax;addb %al, (%eax);jne  <.text+>": 1,
                "addb %al, (%eax);pushl %eax;movb , %al;pushl %ss;addl %gs:(%ecx), %eax": 1,
                "addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %cl, (%eax);addl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);inb %dx, %al;addl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);inb %dx, %al;addl $, %eax;addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);decl %eax;insl %dx, %es:(%edi);addb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cmpl (%esi), %eax": 1,
                "addl %eax, (%eax);addb %al, (%eax);incl %ebx;pushl %es;addb $, %al": 1,
                "incl %ebx;pushl %es;addb $, %al;addb (%eax), %al;addb %al, (%eax)": 1,
                "addb $, %al;addb (%eax), %al;addb %al, (%eax);pushl %ebx;pushl %es": 1,
                "pushl %es;addb $, %al;addb (%eax), %al;addb %al, (%eax);popl %ebx": 1,
                "addb %al, (%eax);arpl %ax, (%esi);addb $, %al;addb (%eax), %al;addb %al, (%eax)": 1,
                "addl %eax, (%edx);addb %al, (%eax);addb %dh, (%ebx);addb $, %al;addb (%eax), %al": 1,
                "addb (%eax), %al;addb %al, (%eax);addl $, (%esi);addl %eax, (%edx);addb %al, (%eax)": 1,
                "addb $, %al;testb %bh, %bh;sbbl %ebp, (%ebx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ch, %al;insl %dx, %es:(%edi);addb $, %al;andb %al, ": 1,
                "addb %al, (%eax);xorb %ah, (%eax);addb %al, (%eax);pushl %edi;insl %dx, %es:(%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%edi);addb $, %al": 1,
                "addb %al, (%eax);das;popl %es;addb $, %al;addb %al, (%eax)": 1,
                "popl %es;addb $, %al;addl (%eax), %eax;addb %al, (%eax);incl %edi": 1,
                "addl %eax, (%eax);addb %al, (%eax);jno  <.text+>;addb $, %al;addb %al, (%eax)": 1,
                "addb (%eax), %al;addb %al, (%eax);movb $, %ch;addb $, %al;addl (%eax), %eax": 1,
                "addb %al, (%eax);incl %esi;orb %al, (%ecx,%eax);addl (%eax), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%esi);addb $, %al;pushl %es;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, -(%esi);incl (%eax);addb %al, (%eax);addb %cl, (%eax)": 1,
                "testl $, (%ebx);addb %al, (%eax);adcb %al, (%eax);addb %al, (%eax);addb (%eax), %al": 1,
                "addl %esp, (%eax);addl $, %eax;addb %al, (%eax);decl %eax;jno  <.text+>": 1,
                "orl %eax, (%ecx,%eax);addb (%eax), %al;addb %al, (%eax);pushal;orl %eax, (%ecx,%eax)": 1,
                "addb $, %al;addb %al, (%eax);addb %al, (%eax);sbbl (%edx), %ecx;addb $, %al": 1,
                "orb (%ecx,%eax), %al;andb %al, ;addb %al, (%eax);nop;je  <.text+>": 1,
                "addb %ch, (%edx);addb $, %al;addl %eax, (%eax);addb %al, (%eax);jb  <.text+>": 1,
                "nop;orb (%ecx,%eax), %al;addb %al, (%eax);addb %al, (%eax);wait": 1,
                "orl $, %eax;orb (%ecx,%eax), %al;pushl %cs;addb %al, (%eax);addb %dh, %ch": 1,
                "addb %dh, %ch;orb (%ecx,%eax), %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "xorb %ah, (%eax);addb %al, (%eax);decl %ebp;cmpsb %es:(%edi), (%esi);addl (%ecx), %eax": 1,
                "addb %al, (%eax);addb (%eax), %al;addb %al, (%eax);andb %dh, (%esi);addl %esp, (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%eax);addl $, %eax;addb %al, (%eax);jo  <.text+>": 1,
                "calll *(%edi);addl $, %eax;addb %al, (%eax);addb $, %al;addb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);fisttpll (%ebx)": 1,
                "addb $, %al;addl %eax, (%eax);addb %al, (%eax);inl $, %eax;addb $, %al": 1,
                "orl (%ecx,%eax), %eax;addb $, %al;addb %al, (%eax);cmc;orl (%ecx,%eax), %eax": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %al, (%edi);addb %al, (%eax);addb %cl, (%eax)": 1,
                "ja  <.text+>;addl %esp, (%eax);addl $, %eax;addb %al, (%eax);movb , %al": 1,
                "movb $, %bl;addl %eax, (%eax);addb %al, (%eax);addb %dh, (%eax);movb , %al": 1,
                "addl %eax, (%eax,%eax);addb %al, (%eax);popl %es;addb %al, (%eax);addb %cl, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);movl (%esp,%eax), %ecx;addl %eax, (%eax);addb %al, (%eax)": 1,
                "jns  <.text+>;addl %esp, (%eax);addl $, %eax;addb %al, (%eax);sarb (%eax)": 1,
                "addb %bh, (%edx);addb %al, (%eax);addb %al, %dl;orb $, %al;addl %eax, -": 1,
                "sarb %bh;adcb (%edx), %bh;addb %al, (%eax);xorb %ah, (%eax);addb %al, (%eax)": 1,
                "pushal;jns  <.text+>;addl %eax, (%ecx);addb %al, (%eax);addb %al, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *%ecx": 1,
                "orl $, %eax;addb %al, (%eax);decl %eax;orl $, %eax;addb %al, (%eax)": 1,
                "addb %al, -(%ebp,%edi,);movl $, %eax;adcl %eax, (%eax);addb %ah, (%eax);addb $, %al": 1,
                "movb %bh, (%esp,%eax);clc;popl (%eax,%eax);subb %dl, (%eax);addb %al, (%eax)": 1,
                "adcb (%eax), %al;addb %al, (%eax);addb $, %al;movb %al, ;adcl %eax, (%eax)": 1,
                "jle  <.text+>;addb %bh, %bh;decl (%esp,%edx,);addb $, %al;jl  <.text+>": 1,
                "leal (%eax,%eax), %eax;outsb (%esi), %dx;leal (%eax,%eax), %eax;pushl %edx;leal (%eax,%eax), %eax": 1,
                "addb $, %al;outb %al, %dx;movw (%eax,%eax), %es;addb $-, %al;addb $, %al": 1,
                "addb %ah, -(%edx);movw %es, (%eax,%eax);testb %cl, (%esp,%eax);addb %ch, -(%eax);addb $, %al": 1,
                "movw %es, (%eax,%eax);addb %cl, (%esp,%eax);addb %ah, %dh;movl (%eax,%eax), %eax;fimull -(%ebx)": 1,
                "addb %cl, (%esp,%eax);addb %ah, %dh;movl (%eax,%eax), %eax;fimull -(%ebx);addb $, %al": 1,
                "addb %bl, -(%edx);testl %eax, (%eax,%eax);decl %eax;xchgb %al, (%eax,%eax);xchgl %edx, %eax": 1,
                "addb %al, -(%eax);adcl (%eax), %eax;addb %al, -(%eax);orb %al, (%eax);addb %al, -(%eax)": 1,
                "orb $, (%ebp);addb $, (%edx);addb %al, (%eax);xchgl %esi, %eax;xchgl %ebx, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);movl $, %edx;addb %al, (%eax);addb %dl, %dl": 1,
                "nop;addb $, %al;outb %al, $;addb $, %al;clc": 1,
                "addb %al, (%eax);addb %dh, (%eax,%eax);addb %al, -(%eax);jae  <.text+>;addb %al, -(%eax)": 1,
                "addb $, %al;aam $-;addb $, %al;ljmpl $, $;addb %dh, (%edx)": 1,
                "addb $, (%eax,%eax);addb $, (%eax,%eax);addb $, (%eax,%eax);addb $-, (%eax,%eax);addl $, (%eax,%eax)": 1,
                "addl $, (%eax,%eax);outb %al, $;addb $, %al;fadds -(%ecx);addb $, %al": 1,
                "pushl $;addl $, (%eax,%eax);decl %esp;addl $, (%eax,%eax);cmpb %al, -(%ecx)": 1,
                "nop;addb $, %al;xorb %dl, -(%eax);addb $, %al;pushl %es": 1,
                "popl %edx;addb %al, (%eax);pushl %edx;addb %bl, (%edi);incl %ebx": 1,
                "addb %bl, (%edi);incl %ebx;js  <.text+>;incl %esi;jb  <.text+>": 1,
                "ja  <.text+>;outsl (%esi), %dx;insb %dx, %es:(%edi);addb %ch, (%edx);addl (%edi), %esi": 1,
                "jae  <.text+>;jo  <.text+>;addb %al, (%eax);subl $, %eax;jae  <.text+>": 1,
                "outsb %gs:(%esi), %dx;addb %al, (%eax);popal;addl %ebx, (%edi);je  <.text+>": 1,
                "je  <.text+>;pushl $;popl %edi;je  <.text+>;insb %dx, %es:(%edi)": 1,
                "je  <.text+>;insb %dx, %es:(%edi);addb %dl, (%ebx);outsl (%esi), %dx;jae  <.text+>": 1,
                "addb %dl, (%ebx);outsl (%esi), %dx;jae  <.text+>;addb %al, (%eax);lodsl (%esi), %eax": 1,
                "incl %edi;addb (%edi), %bl;outsw (%esi), %dx;jo  <.text+>;outsb (%esi), %dx": 1,
                "addb %dh, (%ebx,%eax);ja  <.text+>;jae  <.text+>;je  <.text+>;addb %al, (%eax)": 1,
                "addb %al, (%eax);cmpl (%ebx), %eax;ja  <.text+>;je  <.text+>;insl %dx, %es:(%edi)": 1,
                "ja  <.text+>;je  <.text+>;insl %dx, %es:(%edi);bound (%eax), %eax;addb %dl, (%ebx)": 1,
                "arpl %si, (%eax);addb %ch, (%edx,%eax);imull $, (%esi), %ebp;addb (%esi), %ah;insb %dx, %es:(%edi)": 1,
                "imulw $, (%ebp), %bp;je  <.text+>;addb %ah, (%ebp);popl %edi;imull $, (%edx), %esp": 1,
                "addb %ah, (%ebp);popl %edi;imull $, (%edx), %esp;je  <.text+>;addb %bh, (%edx)": 1,
                "je  <.text+>;popal;imull $, (%esi), %ebp;addb %bh, (%ebx);addl %ebx, (%edi)": 1,
                "pushl $;jb  <.text+>;addb %al, (%eax);pushl $;popl %edi": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;js  <.text+>;je  <.text+>;movb $, %ah": 1,
                "incl %ebp;incl %eax;popl %eax;popl %edx;addb %al, (%eax)": 7,
                "addb %bl, (%edi);outsl (%esi), %dx;outsb (%esi), %dx;je  <.text+>;outsl (%esi), %dx": 1,
                "popl %eax;popl %eax;popl %edx;addb %bh, (%ecx);aas": 1,
                "popal;jae  <.text+>;incl %eax;jae  <.text+>;incl %eax": 2,
                "xorl %ecx, (%ecx);imull $, (%eax,%eax,), %esi;popal;jae  <.text+>;incl %eax": 1,
                "pushl %edi;imull $, (%esi), %ebp;incl %eax;incl %eax;pushl %ecx": 1,
                "aas;aas;xorb %bl, (%edi);outsl (%esi), %dx;arpl %bp, (%ebx)": 1,
                "addl %edi, (%edi);aas;xorl %ebp, (%edi);je  <.text+>;outsl (%esi), %dx": 1,
                "aas;xorl %ebp, (%edi);je  <.text+>;outsl (%esi), %dx;popw %di": 1,
                "jb  <.text+>;incl %esp;incl %eax;xorb (%eax), %al;jae  <.text+>": 2,
                "incl %esp;incl %eax;xorl %eax, (%eax);popl %edx;addb %al, (%eax)": 1,
                "pushl %eax;incl %edx;incl %edi;incl %eax;popl %edx": 7,
                "aas;aas;xorl %edi, (%edi);andb $, %al;popal": 1,
                "incl %edx;incl %edi;decl %ecx;decl %ecx;incl %eax": 2,
                "outsl (%esi), %dx;jb  <.text+>;incl %edi;incl %eax;xorl %eax, (%eax)": 2,
                "popl %edx;addb %al, %ch;addl $, %eax;incl %eax;aas": 1,
                "addb %al, %ch;addl $, %eax;incl %eax;aas;andb $, %al": 1,
                "outsb (%esi), %dx;decl %ebx;jns  <.text+>;js  <.text+>;addb %bl, (%ecx)": 1,
                "insb %dx, %es:(%edi);je  <.text+>;pushl %esi;popal;insb %dx, %es:(%edi)": 1,
                "addb %bl, (%edx,%eax);decl %ecx;outsb (%esi), %dx;je  <.text+>;jb  <.text+>": 1,
                "decl %ecx;addb %al, %fs:(%eax);movl $, %eax;jb  <.text+>;outsb %gs:(%esi), %dx": 1,
                "outsl (%esi), %dx;jae  <.text+>;decl %eax;popal;outsb (%esi), %dx": 2,
                "je  <.text+>;imull $, (%ebp), %ebp;js  <.text+>;pushl $;incl %edi": 1,
                "jb  <.text+>;popal;je  <.text+>;addb %al, (%eax);popl %esi": 1,
                "popl %esi;addl %eax, (%edi);je  <.text+>;imull $, (%ebp), %ebp;movb $, %al": 1,
                "outsb (%esi), %dx;outsw (%esi), %dx;addb %al, (%eax);movl $, %eax;pushl %ebx": 1,
                "insl %dx, %es:(%edi);jo  <.text+>;je  <.text+>;jb  <.text+>;popal": 1,
                "jns  <.text+>;addb %cl, %gs:(%esi);je  <.text+>;incl %ebx;outsl (%esi), %dx": 1,
                "je  <.text+>;incl %ebx;outsl (%esi), %dx;outsb (%esi), %dx;jae  <.text+>": 1,
                "jne  <.text+>;jae  <.text+>;jb  <.text+>;outsl (%esi), %dx;jae  <.text+>": 1,
                "addb %al, (%eax);cwtl;addl %eax, (%edi);je  <.text+>;jb  <.text+>": 1,
                "je  <.text+>;jb  <.text+>;arpl %ax, (%ecx);jb  <.text+>;jae  <.text+>": 1,
                "addb %al, (%eax);lock;addb %al, (%esi);decl %esp;imull $, (%edx), %esp": 1,
                "imull $, (%edx), %esp;incl %edi;addb (%edi,%ebp,), %cl;decl %esp;imull $, (%edx), %esp": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);addb %ch, %ch;addl %eax, (%edi);outsl (%esi), %dx": 1,
                "bound (%ecx), %esp;incl %ecx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "jb  <.text+>;addb %al, %gs:(%eax);orb (%ecx), %al;incl %edi;je  <.text+>": 1,
                "incl %edi;je  <.text+>;outsl (%esi), %dx;insl %dx, %es:(%edi);insl %dx, %es:(%edi)": 1,
                "je  <.text+>;addb %al, (%eax);addb %al, %ss:(%ebx);insl %dx, %es:(%edi);jo  <.text+>": 1,
                "outsb (%esi), %dx;arpl %sp, (%ebp);outsl (%esi), %dx;jne  <.text+>;je  <.text+>": 1,
                "outsb (%esi), %dx;insb %dx, %es:(%edi);incl %ecx;addb %al, (%eax);decl %ebx": 1,
                "insb %dx, %es:(%edi);incl %ecx;addb %al, (%eax);decl %ebx;incl %ebp": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %cl, (%edi);incl %ebp;incl %ecx": 1,
                "insb %dx, %es:(%edi);addb %al, (%eax);aaa;addb %al, (%ebx);popal": 1,
                "addb %al, (%eax);rep  addl %ecx, (%edi);outsb %gs:(%esi), %dx;incl %ebx;insb %dx, %es:(%edi)": 1,
                "incl %ebx;insb %dx, %es:(%edi);imull $, (%eax), %esi;addb %dl, (%ebp);incl %ebp": 1,
                "xorl %eax, (%ebx);pushl %ebx;je  <.text+>;imull $, (%esi), %ebp;incl %ebp": 1,
                "incl %ecx;popl %eax;pushl %eax;incl %edx;incl %edi": 1,
                "aas;xorb %al, (%ebx);pushl %ebx;je  <.text+>;imull $, (%esi), %ebp": 4,
                "incl %eax;popl %edx;addb %al, (%eax);inl $, %eax;aas": 1,
                "incl %edi;incl %eax;popl %edx;addb %al, (%eax);outb %al, $": 1,
                "popl %eax;popl %eax;popl %edx;addb %dh, (%edi);addl %edi, (%edi)": 1,
                "incl %ecx;pushl %ebp;incl %ebx;decl %eax;pushl %ebx": 1,
                "decl %esp;je  <.text+>;incl %ebx;decl %eax;pushl %ebx": 1,
                "movl $, %ecx;incl %eax;incl %ebx;decl %eax;pushl %ebx": 1,
                "incl %eax;popl %ecx;incl %edi;aas;incl %ecx": 1,
                "je  <.text+>;imull $, (%esi), %ebp;pushl %esi;xorb %al, (%eax);incl %edx": 1,
                "addb %bh, %cl;addb %bh, (%edi);incl %esi;imull $, (%esi), %ebp;je  <.text+>": 1,
                "xorb %al, (%eax);popl %edx;addb %al, (%eax);pushl %esp;addb %bh, (%edi)": 1,
                "je  <.text+>;jae  <.text+>;jb  <.text+>;popal;insl %dx, %es:(%edi)": 1,
                "insb %dx, %es:(%edi);jo  <.text+>;jo  <.text+>;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                " Rich=B": 1,
                ".text": 1,
                "`.data": 1,
                ".rsrc": 1,
                "msvcrt.dll": 2,
                "MSVCP60.dll": 2,
                "ADVAPI32.dll": 2,
                "KERNEL32.dll": 2,
                "NTDLL.DLL": 1,
                "ole32.dll": 2,
                "OLEAUT32.dll": 2,
                "USER32.dll": 2,
                "framedyn.dll": 2,
                "SHLWAPI.dll": 2,
                "WS2_32.dll": 2,
                "Secur32.dll": 2,
                "iphlpapi.dll": 2,
                "w-i|v-ij{-i": 1,
                "z-i.t-i": 1,
                "-iGx-i:": 1,
                "-ieu-i*v-i": 1,
                "-isz-ig": 1,
                "d:\\xpsp\\admin\\wmi\\wbem\\tools\\wmic\\cmdalias.cpp": 1,
                "MSFT_CliTranslateTable.Name='": 1,
                "MSFT_CliAlias.FriendlyName='": 1,
                "/Write": 1,
                "Write": 1,
                "/Read": 1,
                "Not Available": 1,
                "WMIC.LOG": 1,
                "WMIC.LO_": 1,
                "%.2d:%.2d:%.2d:%.3d": 1,
                "%.2d/%.2d/%.4d": 1,
                "invalid vector<T> subscript": 1,
                "d:\\xpsp\\admin\\wmi\\wbem\\tools\\wmic\\execengine.cpp": 1,
                " WHERE ": 1,
                "SELECT ": 1,
                " FROM ": 1,
                " meta_class ": 1,
                "SELECT * FROM ": 1,
                "d:\\xpsp\\admin\\wmi\\wbem\\tools\\wmic\\formatengine.cpp": 1,
                "[UNKNOWN]": 1,
                "[OUT]": 1,
                "[IN ]": 1,
                "d:\\xpsp\\admin\\wmi\\wbem\\tools\\wmic\\parserengine.cpp": 1,
                "SetThreadUILanguage": 1,
                "Not Found": 1,
                "array of ": 1,
                "UNKNOWN": 1,
                "<Array>": 1,
                "<Array of ": 1,
                "<Embeded Object>": 1,
                "d:\\xpsp\\admin\\wmi\\wbem\\tools\\wmic\\wmicmdln.cpp": 1,
                "d:\\xpsp\\admin\\wmi\\wbem\\tools\\wmic\\wmiclixmllog.cpp": 1,
                "<5IkQ": 3,
                "WMIC.pdb": 1,
                "1JGGAAf;": 1,
                "QSVWj": 5,
                "VSSQP": 4,
                "YYSSS": 46,
                "PSSSS": 3,
                "VPSSQ": 2,
                "SVVQP": 1,
                "WSSQP": 4,
                "WPSSQV": 1,
                "t\\h( ": 1,
                "tEf9]": 1,
                "t]hP\"": 1,
                "t<f9]": 1,
                "t f9]": 1,
                "tZhp!": 1,
                "tBh !": 1,
                "tAh@#": 1,
                "9y ts": 1,
                "t]hh%": 1,
                "t.hx$": 1,
                "t`hp'": 1,
                "tahh%": 1,
                "tahH&": 1,
                "t`hp(": 1,
                "t`hh%": 1,
                "t`hH&": 1,
                "t]hp'": 1,
                "9y8ts": 1,
                "9y(ts": 1,
                "tthH&": 1,
                "tth(*": 1,
                "tthP)": 1,
                "tLf=-": 1,
                "tFf=,": 1,
                "t@f=(": 1,
                "t:f=)": 1,
                "t4f==": 1,
                "<A(uC": 1,
                "t7h(,": 1,
                "u\"h(,": 1,
                "\"u1@;": 1,
                "'u5@;": 1,
                "QQSVW": 10,
                "t^hx,": 1,
                "t_OtOOt?Ot/Ot": 1,
                "VPSRQ": 1,
                "GWVVWh": 1,
                "VWVWP": 1,
                "VWWWh": 1,
                "t9VVV": 1,
                "t2VVP": 1,
                "YYWWW": 2,
                "SWWWP": 3,
                "RSh,6": 1,
                "tahx;": 2,
                "VSVSP": 1,
                "VVRQP": 1,
                "SSSQP": 4,
                "PWh(0": 3,
                "t[h0>": 2,
                "PWt$h": 1,
                "tahXA": 1,
                "tChP@": 1,
                "YYVVV": 3,
                "tCh(B": 1,
                "RVh,6": 2,
                "tsh0>": 1,
                "u5VWVW": 1,
                "t2SSS": 1,
                "RSj@SP": 2,
                "t@hDD": 1,
                "t0SSSW": 1,
                "9^HtS9^ttN9^|uN": 1,
                "9^HtF9^ttA9^|uA": 1,
                "^t9^|t": 1,
                "WWWh>": 1,
                "tMVVj": 1,
                "QSVW3": 3,
                "t(VVj": 1,
                "9^Lu(9^0u#": 1,
                "VVShM": 1,
                "VVShN": 1,
                "VVShO": 1,
                "VVShP": 1,
                "VVShQ": 1,
                "VVShR": 1,
                "VVShS": 1,
                "VVShT": 1,
                "VVShU": 1,
                "VVShV": 1,
                "VVShW": 1,
                "VVShv": 1,
                "VVShX": 1,
                "VVShY": 1,
                "VPWhk": 1,
                "VPWhd": 1,
                "VPWhu": 1,
                "VPWhc": 1,
                "VPWhe": 1,
                "VPWhi": 1,
                "VPWhh": 1,
                "VPWhg": 1,
                "VPWhj": 1,
                "uwVVj": 1,
                "u5VVj": 4,
                "u1VVj": 4,
                "tyVVj": 2,
                "tmVVj": 2,
                "t]VVj": 4,
                "tiVVj": 2,
                "ttVVj": 1,
                "u&hd'": 1,
                "9_0t6SSP": 1,
                "9_0t/SSP": 7,
                "9_0t2SSP": 2,
                "9s0tP": 1,
                "PWhdM": 1,
                "PWhLM": 1,
                "SSWV;": 1,
                "9s0tDh": 3,
                "9{0tZ": 1,
                "9{0tBh": 4,
                "9s0tFhxO": 1,
                "tFh@O": 1,
                "9{0tDh": 1,
                "9{0tIh": 1,
                "9^0tAh": 1,
                "9^0t1SSP": 1,
                "9^Htx9^tts9^|un": 1,
                "tnSSVh": 1,
                "RQPh4R": 1,
                "uASSVh": 1,
                "SSVh/": 1,
                "uXVVj": 1,
                "usSV3": 1,
                "uMVVj": 1,
                "u/VV3": 1,
                "t6VVj": 1,
                "9^0tIh": 1,
                "tHSSj": 1,
                "ub9^|u]9^H": 1,
                "tr9^Htm9^tth": 1,
                "t>hh(": 1,
                "tJhh(": 2,
                "tihh(": 1,
                "F(t?WP": 1,
                "VWhh(": 1,
                "<;F0t": 1,
                "9YPtAh": 1,
                "AXHt(Ht": 1,
                "tFHt<Ht2Ht(Ht": 1,
                "YYt\"S": 1,
                "YYt/Sj": 1,
                "VPSSQW": 1,
                "| f9]": 1,
                "WSSSSSSQP": 1,
                "t$hd'": 1,
                "9A<u j": 1,
                "9C<Pu^W": 1,
                "P9C<t": 1,
                "P9F<t-PW": 1,
                "QVj@VS": 1,
                "9X$u3": 1,
                "S9_<t": 1,
                "t/VVVS": 1,
                "u`hd'": 1,
                "VVVVj": 1,
                "YYtWV": 1,
                ">0u*3": 1,
                "uxh\\Z": 1,
                "uihLZ": 1,
                "uZh4Z": 1,
                "uKh,6": 1,
                "t'hHU": 1,
                "SSSSj": 1,
                "SSSVS": 1,
                "8(u>S": 1,
                "u7hh(": 1,
                " tNh,\\": 1,
                "u3f9]": 1,
                "t2h<&": 1,
                "t/h@)": 1,
                "Y9](tb": 1,
                "u(h8\\": 1,
                "QSPSh": 1,
                "Pj XPW": 1,
                "WWSWh": 1,
                "SSSWP": 2,
                "QQVW3": 1,
                "VVVVhT]": 1,
                "uhVVVVhD]": 1,
                "u<VVVVh ]": 1,
                "VRQPhh^": 1,
                "RSSSSSSPV": 2,
                "|<hxc": 1,
                "WSSSSSSSQP": 1,
                "PShT]": 1,
                "SSSWh{": 1,
                "PShD]": 1,
                "PSh ]": 1,
                "PWSh ]": 1,
                "PWShD]": 1,
                "SSWWP": 2,
                "WWSWhZ": 1,
                "SVh<q": 1,
                "9u tl": 1,
                "HPhhl": 1,
                "tAh0m": 1,
                "t?hHn": 1,
                "SSVWj": 1,
                "??3@YAXPAX@Z": 1,
                "??2@YAPAXI@Z": 1,
                "__CxxFrameHandler": 1,
                "swprintf": 1,
                "_ltow": 1,
                "_CxxThrowException": 1,
                "_wcsicmp": 1,
                "wcstok": 1,
                "_wtol": 1,
                "wcscpy": 1,
                "_wcsnicmp": 1,
                "sprintf": 1,
                "fgetws": 1,
                "??0exception@@QAE@ABV0@@Z": 1,
                "wcslen": 1,
                "_itow": 1,
                "_wtoi": 1,
                "_wsystem": 1,
                "_getch": 1,
                "_ftol": 1,
                "fclose": 1,
                "fwrite": 1,
                "_wfopen": 1,
                "wcstoul": 1,
                "wcscmp": 1,
                "fgets": 1,
                "wcsstr": 1,
                "wctomb": 1,
                "swscanf": 1,
                "towlower": 1,
                "fseek": 1,
                "fread": 1,
                "wcsncmp": 1,
                "wcsncpy": 1,
                "fwprintf": 1,
                "fflush": 1,
                "fprintf": 1,
                "fputws": 1,
                "_wremove": 1,
                "_filelength": 1,
                "_kbhit": 1,
                "_i64tow": 1,
                "_wtoi64": 1,
                "_wfreopen": 1,
                "_c_exit": 1,
                "_exit": 1,
                "_XcptFilter": 1,
                "_cexit": 1,
                "__winitenv": 1,
                "__wgetmainargs": 1,
                "_initterm": 1,
                "__setusermatherr": 1,
                "_adjust_fdiv": 1,
                "__p__commode": 1,
                "__p__fmode": 1,
                "__set_app_type": 1,
                "_except_handler3": 1,
                "__dllonexit": 1,
                "_onexit": 1,
                "??1type_info@@UAE@XZ": 1,
                "_controlfp": 1,
                "?terminate@@YAXXZ": 1,
                "??0Init@ios_base@std@@QAE@XZ": 1,
                "??0_Winit@std@@QAE@XZ": 1,
                "??1Init@ios_base@std@@QAE@XZ": 1,
                "??1_Winit@std@@QAE@XZ": 1,
                "??1_Lockit@std@@QAE@XZ": 1,
                "??0_Lockit@std@@QAE@XZ": 1,
                "??0logic_error@std@@QAE@ABV01@@Z": 1,
                "??0out_of_range@std@@QAE@ABV01@@Z": 1,
                "??1out_of_range@std@@UAE@XZ": 1,
                "??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ": 1,
                "??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z": 1,
                "??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z": 1,
                "?append@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV12@PBG@Z": 1,
                "?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHIIPBG@Z": 1,
                "?replace@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV12@IIPBG@Z": 1,
                "??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ": 1,
                "?data@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ": 1,
                "?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z": 1,
                "?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB": 1,
                "?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGII@Z": 1,
                "??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBGABV?$allocator@G@1@@Z": 1,
                "?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z": 1,
                "?end@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEPAGXZ": 1,
                "??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z": 1,
                "?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ": 1,
                "?begin@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEPAGXZ": 1,
                "??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z": 1,
                "??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV?$allocator@G@1@@Z": 1,
                "?rfind@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGII@Z": 1,
                "RegCloseKey": 1,
                "RegQueryValueExW": 1,
                "RegOpenKeyExW": 1,
                "GetTokenInformation": 1,
                "AdjustTokenPrivileges": 1,
                "OpenProcessToken": 1,
                "RegSetValueExW": 1,
                "RegCreateKeyExW": 1,
                "RegDeleteValueW": 1,
                "InterlockedIncrement": 1,
                "InterlockedDecrement": 1,
                "GetCurrentThreadId": 1,
                "lstrlenW": 1,
                "lstrcpyW": 1,
                "lstrcpynW": 1,
                "LocalFree": 1,
                "CloseHandle": 1,
                "SetLastError": 1,
                "SetFilePointer": 1,
                "CreateFileW": 1,
                "WriteFile": 1,
                "GetLastError": 1,
                "CopyFileW": 1,
                "GetFileSizeEx": 1,
                "GetLocalTime": 1,
                "lstrcatW": 1,
                "GetFileType": 1,
                "GetStdHandle": 1,
                "FormatMessageW": 1,
                "GetConsoleScreenBufferInfo": 1,
                "GetSystemDefaultUILanguage": 1,
                "GetComputerNameW": 1,
                "MultiByteToWideChar": 1,
                "CompareStringW": 1,
                "WideCharToMultiByte": 1,
                "WriteConsoleW": 1,
                "SetConsoleCursorPosition": 1,
                "ReadConsoleW": 1,
                "SetConsoleMode": 1,
                "GetConsoleMode": 1,
                "SetConsoleScreenBufferSize": 1,
                "GetCurrentProcess": 1,
                "GetSystemDirectoryW": 1,
                "GetWindowsDirectoryW": 1,
                "GetProcAddress": 1,
                "FreeLibrary": 1,
                "LoadLibraryW": 1,
                "LocalAlloc": 1,
                "GlobalUnlock": 1,
                "GlobalLock": 1,
                "GlobalAlloc": 1,
                "GlobalFree": 1,
                "GetCommandLineW": 1,
                "DeleteFileW": 1,
                "WaitForSingleObject": 1,
                "SetEvent": 1,
                "CreateThread": 1,
                "CreateEventW": 1,
                "CompareFileTime": 1,
                "GetFileTime": 1,
                "GetUserDefaultUILanguage": 1,
                "SetConsoleCtrlHandler": 1,
                "QueryPerformanceCounter": 1,
                "GetTickCount": 1,
                "GetCurrentProcessId": 1,
                "GetSystemTimeAsFileTime": 1,
                "TerminateProcess": 1,
                "UnhandledExceptionFilter": 1,
                "SetUnhandledExceptionFilter": 1,
                "lstrlenA": 1,
                "GetModuleHandleA": 1,
                "CoCreateInstance": 1,
                "CoCreateInstanceEx": 1,
                "CoSetProxyBlanket": 1,
                "CoInitializeEx": 1,
                "CoUninitialize": 1,
                "CoInitializeSecurity": 1,
                "CharUpperW": 1,
                "LoadStringW": 1,
                "wsprintfW": 1,
                "CloseClipboard": 1,
                "SetClipboardData": 1,
                "EmptyClipboard": 1,
                "OpenClipboard": 1,
                "??1CHString@@QAE@XZ": 1,
                "?Format@CHString@@QAAXPBGZZ": 1,
                "??0CHString@@QAE@XZ": 1,
                "??0CHString@@QAE@PBG@Z": 1,
                "?Right@CHString@@QBE?AV1@H@Z": 1,
                "??0CHString@@QAE@PBD@Z": 1,
                "??YCHString@@QAEABV0@PBG@Z": 1,
                "?Empty@CHString@@QAEXXZ": 1,
                "?GetData@CHString@@IBEPAUCHStringData@@XZ": 1,
                "?FindOneOf@CHString@@QBEHPBG@Z": 1,
                "?GetBuffer@CHString@@QAEPAGH@Z": 1,
                "?TrimRight@CHString@@QAEXXZ": 1,
                "?TrimLeft@CHString@@QAEXXZ": 1,
                "??4CHString@@QAEABV0@ABV0@@Z": 1,
                "?Mid@CHString@@QBE?AV1@H@Z": 1,
                "??YCHString@@QAEABV0@ABV0@@Z": 1,
                "??H@YG?AVCHString@@ABV0@PBG@Z": 1,
                "?Left@CHString@@QBE?AV1@H@Z": 1,
                "?Find@CHString@@QBEHPBG@Z": 1,
                "??0CHString@@QAE@ABV0@@Z": 1,
                "??4CHString@@QAEABV0@PBG@Z": 1,
                "StrStrIW": 1,
                "GetUserNameExW": 1,
                "IcmpCloseHandle": 1,
                "IcmpSendEcho": 1,
                "IcmpCreateFile": 1,
                ".?AVCHeap_Exception@@": 1,
                ".?AV_com_error@@": 1,
                ".?AVexception@@": 1,
                ".?AVlogic_error@std@@": 1,
                ".?AVout_of_range@std@@": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rsrc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=msvcrt.dll_?terminate@@YAXXZ": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__controlfp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_??2@YAPAXI@Z": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___CxxFrameHandler": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_swprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__ltow": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__CxxThrowException": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcstok": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_??1type_info@@UAE@XZ": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__onexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___dllonexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__except_handler3": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___set_app_type": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___p__fmode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___p__commode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__adjust_fdiv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___setusermatherr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__initterm": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___wgetmainargs": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___winitenv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__cexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__XcptFilter": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__c_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wfreopen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wtoi64": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__i64tow": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__kbhit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__filelength": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wremove": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fputws": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fflush": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fwprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsncpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsncmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fread": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fseek": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_towlower": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_swscanf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wctomb": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsstr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fgets": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcstoul": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wfopen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fwrite": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fclose": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__ftol": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__getch": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_ceil": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wsystem": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wtoi": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__itow": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcslen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_??0exception@@QAE@ABV0@@Z": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__iob": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fgetws": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_sprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsnicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wtol": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_??3@YAXPAX@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0out_of_range@std@@QAE@ABV01@@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??1out_of_range@std@@UAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?append@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV12@PBG@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHIIPBG@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?replace@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV12@IIPBG@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?data@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0logic_error@std@@QAE@ABV01@@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGII@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBGABV?$allocator@G@1@@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?end@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEPAGXZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?begin@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEPAGXZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV?$allocator@G@1@@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?rfind@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGII@Z": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0_Lockit@std@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??1_Lockit@std@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??1_Winit@std@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??1Init@ios_base@std@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0_Winit@std@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_??0Init@ios_base@std@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=MSVCP60.dll_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegCloseKey": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegOpenKeyExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_GetTokenInformation": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_AdjustTokenPrivileges": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_OpenProcessToken": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegSetValueExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegCreateKeyExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegDeleteValueW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegQueryValueExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CompareFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateEventW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetEvent": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WaitForSingleObject": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeleteFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCommandLineW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GlobalFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GlobalAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GlobalLock": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GlobalUnlock": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetWindowsDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleScreenBufferSize": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadConsoleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleCursorPosition": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteConsoleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WideCharToMultiByte": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MultiByteToWideChar": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetComputerNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemDefaultUILanguage": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleScreenBufferInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FormatMessageW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStdHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileType": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocalTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileSizeEx": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFilePointer": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CloseHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcpynW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcpyW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrlenW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InterlockedDecrement": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InterlockedIncrement": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetUserDefaultUILanguage": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleCtrlHandler": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrlenA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CompareStringW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CopyFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoUninitialize": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoInitializeEx": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoSetProxyBlanket": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoCreateInstanceEx": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoCreateInstance": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoInitializeSecurity": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantInit": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SysStringLen": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_DllRegisterServer": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantCopy": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SafeArrayPutElement": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SafeArrayGetLBound": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SafeArrayLock": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantClear": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SafeArrayGetDim": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SafeArrayCopy": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SafeArrayDestroy": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantTimeToDosDateTime": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VariantCopyInd": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SysAllocStringByteLen": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_VarR8FromUI1": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SysReAllocString": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetClipboardData": 3,
                "bind=NONE type=FUNC name=USER32.dll_EmptyClipboard": 3,
                "bind=NONE type=FUNC name=USER32.dll_OpenClipboard": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadStringW": 3,
                "bind=NONE type=FUNC name=USER32.dll_CloseClipboard": 3,
                "bind=NONE type=FUNC name=USER32.dll_wsprintfW": 3,
                "bind=NONE type=FUNC name=USER32.dll_CharUpperW": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?FindOneOf@CHString@@QBEHPBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?GetBuffer@CHString@@QAEPAGH@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?TrimRight@CHString@@QAEXXZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?TrimLeft@CHString@@QAEXXZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??0CHString@@QAE@PBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Mid@CHString@@QBE?AV1@H@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??YCHString@@QAEABV0@ABV0@@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?GetData@CHString@@IBEPAUCHStringData@@XZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Left@CHString@@QBE?AV1@H@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Find@CHString@@QBEHPBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??0CHString@@QAE@ABV0@@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??4CHString@@QAEABV0@PBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??0CHString@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??1CHString@@QAE@XZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Empty@CHString@@QAEXXZ": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??YCHString@@QAEABV0@PBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??0CHString@@QAE@PBD@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??H@YG?AVCHString@@ABV0@PBG@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Right@CHString@@QBE?AV1@H@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_??4CHString@@QAEABV0@ABV0@@Z": 3,
                "bind=NONE type=FUNC name=framedyn.dll_?Format@CHString@@QAAXPBGZZ": 3,
                "bind=NONE type=FUNC name=SHLWAPI.dll_StrStrIW": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_gethostbyname": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_WSACleanup": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_WSAStartup": 3,
                "bind=NONE type=FUNC name=WS2_32.dll_inet_addr": 3,
                "bind=NONE type=FUNC name=Secur32.dll_GetUserNameExW": 3,
                "bind=NONE type=FUNC name=iphlpapi.dll_IcmpSendEcho": 3,
                "bind=NONE type=FUNC name=iphlpapi.dll_IcmpCreateFile": 3,
                "bind=NONE type=FUNC name=iphlpapi.dll_IcmpCloseHandle": 3,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=wmi command line": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2108)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=wmic.exe": 2,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le string=\"/?\" for help, QUIT to Exit.\\n": 1,
                "section=.rsrc type=utf16le string=Incomplete Command.\\n": 1,
                "section=.rsrc type=utf16le string=RPC Server not available.\\n:Nonzero REPEAT count is invalid with zero EVERY interval.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid command.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid REPEAT switch.\\n-LIST verb is allowed only with <alias> name.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid REPEAT count.\\n9Nozero EVERY interval is invalid with zero REPEAT count.\\n-'PWhere' expression for the alias undefined.\\n": 1,
                "section=.rsrc type=utf16le string=Output file closure failed.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid TRANSLATE switch.\\n4Translate table does not exists in Alias Namespace.\\n*Method or User defined verb not executed.\\n'No verbs are available with the alias.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Namespace Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Node Name.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Impersonation Level.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Authentication Level.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Locale Value.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Namespace.\\n": 2,
                "section=.rsrc type=utf16le string=Invalid Node Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Implevel Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Role Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid AuthLevel Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Locale Syntax.\\n\\eInvalid Privileges Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Privileges.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Trace Syntax.\\n.Invalid Trace Option Value (ON|OFF expected).\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Record Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Record Path.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid User Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid UserID.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Password Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Password.\\n+Invalid Help Option (FULL|BRIEF expected).\\n!Unexpected switch at this level.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Global Switch.\\n;Invalid Privileges Option Value (ENABLE|DISABLE expected).\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Path.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Query.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Expression.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Verb.\\n5Invalid interval value specified with /EVERY switch.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid PATH Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid WHERE Syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid CLASS Syntax.\\n#Invalid XSL format (or) file name.\\nDInvalid format specified (or) format not applicable for this alias.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid GET switch.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid XML content.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid LIST expression.\\n": 1,
                "section=.rsrc type=utf16le string=%1 - Invalid class.\\nQCascading tranform failed. (Intermediate transform result is not DOM compliant).\\n^Failed to register mof file(s).\\nOnly the administrator group members can use WMIC.EXE.\\nReason:\"Write to error log failed.\\nReason:-Failed to open/create error log file.\\nReason:": 1,
                "section=.rsrc type=utf16le string=Invalid GET Expression.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid alias Command.\\n\\eFailed to allocate Memory.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid EVERY switch.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Verb Switch.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Number of Parameters.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid named parameter list.\\nHint: <named param list> ::= <named param> | <named param> <named param list> where <named param> ::= <param name>=<param value>\\n%Command interpreter cannot be found.\\nCCommand-interpreter file has invalid format and is not executable.\\n\u00b4Not enough memory is available to execute command; or available memory has been corrupted; or invalid block exists, indicating that process making call was not allocated properly.\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Method execution successful.\\n": 1,
                "section=.rsrc type=utf16le string=Method execution failed.\\n": 1,
                "section=.rsrc type=utf16le string=Property(s) update successful.\\n\\eProperty(s) update failed.\\n\\eFailed to allocate Memory.\\n0Call to obtain Windows system directory failed.\\nEThe alias target class and the object path specified does not match.\\n!ATTN: FEATURE NOT IMPLEMENTED!!!\\n": 1,
                "section=.rsrc type=utf16le string=Property(s) not changed.\\n": 1,
                "section=.rsrc type=utf16le string=No Instance(s) Available.\\n\\eClass deletion successful.\\n&Instance(s) or Class deletion failed.\\n\"Instance(s) or Class not deleted.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Role.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid LIST switch.\\n Password ignored for null user.\\n": 1,
                "section=.rsrc type=utf16le string=%1 - Invalid node (discarded).\\n4Invalid Interactive Option Value (ON|OFF expected).\\n": 1,
                "section=.rsrc type=utf16le string=%1 - Alias not found.\\n1Invalid FailFast Option Value (ON|OFF expected).\\n": 1,
                "section=.rsrc type=utf16le string=Invalid OUTPUT option.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid OUTPUT syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid APPEND option.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid APPEND syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Opening APPEND file failed.\\n": 1,
                "section=.rsrc type=utf16le string=Opening OUTPUT file failed.\\n2Invalid Aggregate Option Value (ON|OFF expected).\\n": 1,
                "section=.rsrc type=utf16le Unable to set command input. Failed to allocate Memory.\\n5Unable to set alias name. Failed to allocate Memory.\\n5Unable to set Name Space. Failed to allocate Memory.\\n/Unable to Set Role. Failed to allocate Memory.\\n1Unable to set Locale. Failed to allocate Memory.\\n/Unable to Set Node. Failed to allocate Memory.\\n/Unable to Set User. Failed to allocate Memory.\\n3Unable to set Password. Failed to allocate Memory.\\n6Unable to Set Record Path. Failed to allocate Memory.\\n5Command line utility invocation - Operation Success.\\n4Command line utility invocation - Operation Failed.\\n/Unable to set path. Failed to allocate Memory.\\n;Unable to Set Where Expression. Failed to allocate Memory.\\n6Unable to set method name. Failed to allocate Memory.\\n": 1,
                "section=.rsrc type=utf16le string=Associators of '%1':\\n": 1,
                "section=.rsrc type=utf16le string=;Unable to add to parameter Map. Failed to allocate Memory.\\nCUnable to Add to Parameter Details Map. Failed to allocate memory.\\n;Unable to Add to Property List. Failed to allocate Memory.\\n@unable to Add to method Details Map. Failed to allocate Memory.\\n6Unable to Set List Format. Failed to allocate memory.\\n<Unable to Add to Parameter list. Failed to allocate Memory.\\n<Unable to Set pwhere expression. Failed to allocate Memory.\\n?Unable to add to method details map.Failed to allocate memory.\\n5Unable to set class path. Failed to allocate Memory.\\n?Unable to obtain Alias Target Path. Failed to allocate Memory.\\n,Input value exceeds allowed maximum length.\\n>Value map does not contain the input value for this property.\\nVInvalid format.\\nHint: <assignlist> = <propertyname>=<propertyvalue> [, <assignlist>].\\n;Invalid format.\\nHint: <paramlist> = <param> [, <paramlist>]": 1,
                "section=.rsrc type=utf16le string=The operation was successful.\\n@The current user does not have permission to perform the action\\neIn a put operation, the wbemChangeFlagCreateOnly flag was specified, but the instance already exists\\n\u00c9There was an illegal attempt to specify a key qualifier on a property that cannot be a key. The keys are specified in the class definition for an object, and cannot be altered on a per-instance basis. tAn illegal attempt was made to make a class singleton, such as when the class is derived from a non-singleton class\\nHAn attempt was made to make a change that would invalidate a subclass.\\n\\nIAn attempt has been made to delete or modify a class that has instances.\\nhAn internal, critical, and unexpected error occurred. Report this error to Microsoft Technical Support.\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=The call failed.\\n": 1,
                "section=.rsrc type=utf16le string=A value of Nothing was specified for a property that may not be Nothing, such as one that is marked by a Key, Indexed, or Not_Null qualifier.\\nTThe user requested an illegal operation, such as spawning a class from an instance.\\n": 1,
                "section=.rsrc type=utf16le string=The current object is not a valid class definition. Either it is incomplete, or it has not been registered with WMI using SWbemObject.Put_.\\nLA component, such as a provider, failed to initialize for internal reasons.\\n&The CIM type specified is not valid. \\n\"The specified class is not valid.\\n&The IWbemContext object is not valid.\\n": 1,
                "section=.rsrc type=utf16le string='The requested method is not available.\\n6The parameters provided for the method are not valid.\\n,The namespace specified could not be found.\\n%The specified instance is not valid.\\nvThe requested operation is not valid. This error usually applies to invalid attempts to delete classes or properties.\\n2One of the parameters to the call is not correct.\\n4The CIM type specified for a property is not valid.\\n\u0177A provider referenced in the schema has an incorrect or incomplete registration. This error may be caused by any of the following\\n \\nA missing pragma namespace command in the MOF file used to register the provider, resulting in the provider being registered in the wrong WMI namespace. \\n\\nA corrupt repository, which may be fixed by deleting it and recompiling the MOF file. \\n\\nVThe variant value for a qualifier was provided that is not of a legal qualifier type.\\n'The query was not syntactically valid.\\n/The requested query language is not supported.\\nDOne or more network packets were corrupted during a remote session.\\n'The superclass specified is not valid.\\n blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rsrc type=utf16le string=Reserved for future use.\\n": 1,
                "section=.rsrc type=utf16le string=Reserved for future use.\\nEThe resource, typically a remote server, is not currently available.\\n": 1,
                "section=.rsrc type=utf16le string=The object could not be found.\\n+The feature or operation is not supported.\\n/There was not enough memory for the operation.\\nwIt is not possible to perform the add operation on this qualifier because the owning object does not permit overrides.\\nlThe user attempted to delete a property that was not owned. The property was inherited from a parent class.\\nnThe user attempted to delete a qualifier that was not owned. The qualifier was inherited from a parent class.\\nGThe provider has failed at some time other than during initialization.\\n\u0208COM cannot locate a provider referenced in the schema. This error may be caused by any of the following:\\n\\nThe provider is using a WMI DLL that does not match the .lib file used when the provider was built. \\n\\nThe provider's DLL or any of the DLLs on which it depends is corrupt.\\n \\nThe provider failed to export DllRegisterServer. \\n\\nAn in-process provider was not registered using the regsvr32 command. \\n\\nAn out-of-process provider that was not registered using the /regserver switch. For example, myprog.exe /regserver.\\n\\n\u00c5The provider cannot perform the requested operation. This would include a query that is too complex, retrieving an instance, creating or updating a class, deleting a class, or enumerating a class.\\nPA provider referenced in the schema does not have a corresponding registration.\\n blocks=Basic Latin,Latin Extended-B,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Reserved for future use.\\n>The property that you are attempting to modify is read-only. \\n@A networking error that prevents normal operation has occurred.\\n": 1,
                "section=.rsrc type=utf16le string=A type mismatch occurred.\\n}The client made an unexpected and illegal sequence of calls, such as calling EndEnumeration before calling BeginEnumeration.\\nSThe request was made with an out-of-range value, or is incompatible with the type.\\n": 1,
                "section=.rsrc type=utf16le string=FAn attempt was made to create an object or class that already exists.\\nJThe items (objects, classes, and so on) being compared are not identical.\\n\u00fcThis will be returned when no more objects are available, the number of objects returned is less than the number requested, or at the end of an enumeration. It is also returned when this method is called with a value of zero for the uCount parameter. \\n_No more data is available from the enumeration, and the user should terminate the enumeration.\\nGA request is still in progress, and the results are not yet available.\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=An overridden property was deleted.\\n\\nThis value is returned to signal that the original non-overridden value has been restored as a result of the deletion.\\njA call timed out.\\n\\nThis is not an error condition. Therefore, some results may have also been returned.\\n \\nAThe provider registration overlaps with the system event domain.\\n,A WITHIN clause was not used in this query.\\n>The operation was intentionally or unintentionally canceled. \\nXMore that one copy of the same object was detected in the result set of an enumeration.\\n:The user was denied access to some but not all resources.\\nvThe user did not receive all of the objects requested due to inaccessible resources (other than security violations).\\n=There was an attempt to get qualifiers on a system property.\\n4The CIM type specified for a property is not valid.\\n\u00baAn asynchronous process has been canceled internally or by the user. Note that due to the timing and nature of the asynchronous operation the operation may not have been truly canceled.\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=RThe user has requested an operation while WMI is in the process of shutting down.\\njAn attempt was made to reuse an existing method name from a superclass, and the signatures did not match.\\n": 1,
                "section=.rsrc type=utf16le string=One or more parameter values, such as a query text, is too complex or unsupported. WMI is therefore requested to retry the operation with simpler parameters.\\n.A parameter was missing from the method call.\\n0A method parameter has an invalid ID qualifier.\\nROne or more of the method parameters have ID qualifiers that are out of sequence.\\n3The return value for a method has an ID qualifier.\\n'The specified object path was invalid.\\n@There is not enough free disk space to continue the operation. \\njThe supplied buffer was too small to hold all the objects in the enumerator or to read a string property.\\n;The provider does not support the requested put operation.\\nOAn object with an incorrect type or version was encountered during marshaling.\\nNA packet with an incorrect type or version was encountered during marshaling.\\n'The packet has an unsupported version.\\n$The packet appears to be corrupted.\\nWThe variant value for a qualifier was provided that is not of a legal qualifier type. \\n9A duplicate parameter has been declared in a CIM method.\\n9A duplicate parameter has been declared in a CIM method.\\n]A call to IWbemObjectSink::Indicate has failed. The provider may choose to refire the event.\\n\"The specified flavor was invalid.\\nmAn attempt has been made to create a reference that is circular (for example, deriving a class from itself).\\n&The specified class is not supported.\\n\\An attempt was made to change a key when instances or subclasses are already using the key.\\naAn attempt was made to change an index when instances or subclasses are already using the index.\\n^An attempt was made to create more properties than the current version of the class supports.\\nEA property was redefined with a conflicting type in a derived class.\\nQAn attempt was made in a derived class to override a non-overrideable qualifier.\\nIA method was redeclared with a conflicting signature in a derived class.\\n]An attempt was made to execute a method not marked with [implemented] in any relevant class.\\n@An attempt was made to execute a": 1,
                "section=.rsrc type=utf16le string= method marked with [disabled].\\n.The refresher is busy with another operation.\\n.The filtering query is syntactically invalid.\\n": 1,
                "section=.rsrc type=utf16le string=oThe FROM clause of a filtering query references a class that is not an event class (not derived from __Event).\\nKA GROUP BY clause was used without the corresponding GROUP WITHIN clause. \\nLA GROUP BY clause was used. Aggregation on all properties is not supported.\\nDDot notation was used on a property that is not an embedded object.\\n_A GROUP BY clause references a property that is an embedded object without using dot notation.\\n": 1,
                "section=.rsrc type=utf16le string=An event provider registration query (__EventProviderRegistration) did not specify the classes for which events were provided.\\nZAn request was made to back up or restore the repository while WinMgmt.exe was using it. \\nUThe asynchronous delivery queue overflowed due to the event consumer being too slow.\\nWThe operation failed because the client did not have the necessary security privilege.\\n2The operator is not valid for this property type.\\n": 1,
                "section=.rsrc type=utf16le string=The user specified a username/password/authority on a local connection. The user must use a blank username/password and rely on default security.\\nBThe class was made abstract when its superclass is not abstract. \\n]An amended object was PUT without the WBEM_FLAG_USE_AMENDED_QUALIFIERS flag being specified.\\nJThe client was not retrieving objects quickly enough from an enumeration.\\n,A WITHIN clause was not used in this query.\\n": 1,
                "section=.rsrc type=utf16le string=Failed to allocate Memory!!!\\n": 1,
                "section=.rsrc type=utf16le Unable to set Authority. Failed to allocate Memory.\\n9<where expression> cannot be specified with CREATE verb.\\n": 1,
                "section=.rsrc type=utf16le string=Method Execution Success.\\n": 1,
                "section=.rsrc type=utf16le string=Method Execution Failed.\\n!Update property(s) of '%1' (Y/N)?": 1,
                "section=.rsrc type=utf16le string=Delete '%1' (Y/N)?": 1,
                "section=.rsrc type=utf16le string=Delete '%1' (Y/N)?$Create instance of '%1' class (Y/N)?": 1,
                "section=.rsrc type=utf16le string=Invoke '%1' (Y/N)?": 1,
                "section=.rsrc type=utf16le string=Execute (%1)->%2() (Y/N)?": 1,
                "section=.rsrc type=utf16le string=Associators of '%1'\\n": 1,
                "section=.rsrc type=utf16le string=Enter the password :C\\nParsing Mof File: %1(Phase Error - %2)\\nCompiler returned error %3\\n": 1,
                "section=.rsrc type=utf16le string=Instance not created.\\n": 1,
                "section=.rsrc type=utf16le string=Instance creation successful.\\n=<path expression> is not allowed with PATH if WHERE follows.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid ASSOC Syntax.\\n Interactive mode already reset.\\n": 1,
                "section=.rsrc type=utf16le string=Interactive mode reset.\\n!%1 - No Associator(s) Available.\\n": 1,
                "section=.rsrc type=utf16le string=FailFast mode already reset.\\n": 1,
                "section=.rsrc type=utf16le string=FailFast mode reset.\\n": 1,
                "section=.rsrc type=utf16le string=No Associator(s) Available.\\n": 1,
                "section=.rsrc type=utf16le string=E<Alias> or <PATH with class expression> should precede WHERE clause.\\n\\eInvalid PWhere expression.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Interactive Syntax \\n": 1,
                "section=.rsrc type=utf16le string=Invalid FailFast Syntax.\\nGERROR: Write to log failed. (subsequent commands would not be logged.)\\n": 1,
                "section=.rsrc type=utf16le string= - Not a input parameter.\\n(Verb Or Method has no input parameters.\\n": 1,
                "section=.rsrc type=utf16le string= - Invalid property(s).\\n": 1,
                "section=.rsrc type=utf16le string=Unknown WMIC Exception.\\n": 1,
                "section=.rsrc type=utf16le string=\\aUSAGE:\\n": 1,
                "section=.rsrc type=utf16le string=Property get operations.\\n'GET [<property list>] [<get switches>]\\n*The following GET switches are available:\\n-/VALUE                       - Return value.\\nO/ALL(default)                - Return the data and metadata for the attribute.\\nN/TRANSLATE:<table name>      - Translate output via values from <table name>.\\n": 1,
                "section=.rsrc type=utf16le string=/EVERY:<interval> [/REPEAT:<repeat count>] - Returns value every (X interval) seconds, If /REPEAT specified the command is executed <repeat count> times.\\nP/FORMAT:<format specifier>   - Keyword/XSL filename to process the XML results.\\n": 1,
                "section=.rsrc type=utf16le string=Property list operations.\\n'LIST [<list format>] [<list switches>]\\n6LIST formats are not defined for the alias specified.\\n*The following LIST formats are available:\\n+The following LIST switches are available:\\n": 1,
                "section=.rsrc type=utf16le string=Method execution operations.\\n(CALL <method name> [<actual paramlist>]\\nRNOTE: <actual paramlist> ::= <actual param> | <actual param>,  <actual paramlist>\\n": 1,
                "section=.rsrc type=utf16le string=Property set operations.\\n": 1,
                "section=.rsrc type=utf16le string=SET <assign list>\\nLNOTE: <assign list> can be more than one property name separated by commas.\\n<Each property name should be followed by '=' and its value.\\nJCreates a new instance and sets the property values for the new instance.\\n": 1,
                "section=.rsrc type=utf16le string=NNOTE: <property list> ::= <property name> | <property name>,  <property list>\\n3NOTE: Create cannot be used to create a new class.\\n": 1,
                "section=.rsrc type=utf16le string=CREATE <assign list>\\n2Deletes the current instance or set of instances.\\n,NOTE: Delete can be used to delete a class.\\n'DELETE [/INTERACTIVE | /NOINTERACTIVE]\\n<Returns the result of query: ASSOCIATORS OF {<wmi object>}.\\n.ASSOC[:<format specifier>] [<assoc switches>]\\n:NOTE: <format specifier> ::= (<xsl file name> |  KEYWORD)\\n:The following alias/es are available in the current role:\\n9For more information on a specific alias, type: alias /?\\n#Command-aliases are not available.\\nQNAMESPACE - Path for the namespace the alias is to operate against. Namespaces\\n  J          are always relative i.e. if the namespace does not begin with a\\nM            '\\\\' it will be assumed to be relative to the current namespace.\\n": 1,
                "section=.rsrc type=utf16le string=            namespace.\\n": 1,
                "section=.rsrc type=utf16le string=/NAMESPACE:<namespace>\\n": 1,
                "section=.rsrc type=utf16le string=NOTE: Applicable only with /EVERY:<interval>, If no key pressed command executes and displays result <repeat count> times and terminate.\\nNROLE - Path for the role containing the alias definitions to be available for\\n": 1,
                "section=.rsrc type=utf16le string=       the utility session.\\n": 1,
                "section=.rsrc type=utf16le string=/ROLE:<namespace>\\nLNOTE: Roles are actually namespaces and should be treated in the same way -\\nL      i.e. relative paths should behave appropriately (default namespace is\\n": 1,
                "section=.rsrc type=utf16le string=      '\\\\root\\cli').\\n=NODE - Specify which servers the alias will operate against.\\n": 1,
                "section=.rsrc type=utf16le string=/NODE:<machine id list>\\ncNOTE: <machine id list> ::= <@filename | machine id> | <@filename | machine id> <,machine id list>\\nFIMPLEVEL - Determine which level the command line should impersonate.\\n%           Default is 'Impersonate'.\\n": 1,
                "section=.rsrc type=utf16le string=/IMPLEVEL:<implevel>\\n\\n\"Various implevels are as follows:\\n": 1,
                "section=.rsrc type=utf16le string=Impersonation Level\\n": 1,
                "section=.rsrc type=utf16le string=------------------\\n\\nAnonymous\\n\\tIdentify\\n\\fImpersonate\\n\\tDelegate\\nDAUTHLEVEL - Specify the level the command line should authenticate.\\n": 1,
                "section=.rsrc type=utf16le string=            Default is 'Pkt'.\\n#Various authlevels are as follows:\\n\\nAuthlevel\\n\\n---------\\n\\bDefault\\n": 1,
                "section=.rsrc type=utf16le string=None\\n\\bConnect\\n": 1,
                "section=.rsrc type=utf16le string=Call\\n": 1,
                "section=.rsrc type=utf16le string=Pkt\\n\\rPktintegrity\\n": 1,
                "section=.rsrc type=utf16le string=\\vPktprivacy\\n": 1,
                "section=.rsrc type=utf16le string=/AUTHLEVEL:<authlevel>\\n\\n>LOCALE - Specify the language id the command line should use.\\n": 1,
                "section=.rsrc type=utf16le string=/LOCALE:<locale identifier>\\nBNOTE: The parameter to the 'LOCALE' switch is of the form MS_XXX.\\n<      Where XXX for English is 409, XXX for Finnish is 40b.\\n/PRIVILEGES - Enable or disable all privileges.\\n": 1,
                "section=.rsrc type=utf16le string=/PRIVILEGES:<option>\\nANOTE: Allowed value(s) for <option> is either ENABLE or DISABLE.\\nKTRACE - Specify whether output debug information is to be copied to stderr\\n1        during the processing of the request(s).\\n": 1,
                "section=.rsrc type=utf16le string=/TRACE:<option>\\n9NOTE: Allowed value(s) for <option> is either ON or OFF.\\nNRECORD - Logs all entered commands and WMIC's output to a file in XML format.\\n": 1,
                "section=.rsrc type=utf16le string=/RECORD:<filepath>\\n3INTERACTIVE - Sets or resets the interactive mode.\\n": 1,
                "section=.rsrc type=utf16le string=/INTERACTIVE:<option>\\n8USER - Provides the user to be used during the session.\\n": 1,
                "section=.rsrc type=utf16le string=/USER:<userid>\\n;NOTE: User should be provided in the form <domain>\\<user>.\\nLPASSWORD - Provides the password to be used in logging on  to this session.\\n": 1,
                "section=.rsrc type=utf16le string=/PASSWORD:<password>\\n6/? - Displays specification/syntax for help commands.\\n": 1,
                "section=.rsrc type=utf16le string=/?:[<helptype>]\\n?NOTE: Allowed value(s) for <helptype> is either BRIEF or FULL.\\n5The following alias verb(s)/method(s) are available:\\n/The following verb(s)/method(s) are available:\\n2User defined verb(s) or method(s) does not exist.\\nJUser defined verb(s) or method(s) not available for the target WMI class.\\n2The following writeable properties are available:\\n(The following properties are available:\\nFINFO: Writeable properties are not available for this alias or class.\\n": 1,
                "section=.rsrc type=utf16le string=,The following standard verbs are available:\\n": 1,
                "section=.rsrc type=utf16le string=[global switches] <command>\\n-The following global switches are available:\\nNFor more information on CLASS/PATH/CONTEXT, type: (CLASS | PATH | CONTEXT) /?\\n\"Escapes to full WMI object paths.\\nPPATH (<path expr> | (<class path expr> [WHERE <where clause>])) [<verb clause>]\\nNEscapes to full WMI WQL query capabilities. If an alias is involved, only the\\n1'WHERE' clause for the query should be supplied.\\n%WHERE <where clause> [<verb clause>]\\n": 1,
                "section=.rsrc type=utf16le string=Escapes to full WMI schema.\\n;CLASS <class path expr> [<standardverb> [<verb switches>]]\\nM<Alias parameters> => one or more space delimited literals that will be used\\nF                     as substitutions in the alias PWhere expression.\\nC<WMI object> ::= <parans> <alias params> <parans> | <alias params>\\n:Press any key to continue, or press the ESCAPE key to stop:": 1,
                "section=.rsrc type=utf16le string=;Translates the output using values from Table <table name>\\n": 1,
                "section=.rsrc type=utf16le string=/TRANSLATE:<table name>\\n0The following translate table(s) are available:\\n#No translate tables are available.\\nJExecutes the command and displays the output at every <interval> seconds.\\n+/EVERY:<interval> [/REPEAT:<repeat count>]\\n(NOTE: Press any key to stop the cycle. \\n-Keyword/XSL filename to process XML results.\\n\\e/FORMAT:<format specifier>\\n\u00e4NOTE: <formatspecifier> : ((<transformname>|<transformname> : <paramstring>)[,<formatspecifier>]).\\nwhere <paramstring>:((<parametername>=<value>)[,<paramstring>]).\\n\\nNOTE: <transformname> is a <key word> or an <xsl file name>.\\n  4/INTERACTIVE - verb invocation mode is interactive.\\n:/NOINTERACTIVE - verb invocation mode is non-interactive.\\nG/NAMESPACE           Path for the namespace the alias operate against.\\nI/ROLE                Path for the role containing the alias definitions.\\n=/NODE                Servers the alias will operate against.\\n1/IMPLEVEL            Client impersonation level.\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le /AUTHLEVEL           Client authentication level.\\n8/LOCALE              Language id the client should use.\\n7/PRIVILEGES          Enable or disable all privileges.\\n>/TRACE               Outputs debugging information to stderr.\\n9/RECORD              Logs all input commands and output.\\n:/INTERACTIVE         Sets or resets the interactive mode.\\n9/USER                User to be used during the session.\\n</PASSWORD            Password to be used for session login.\\n(/?[:<BRIEF|FULL>]    Usage information.\\nGFor more information on a specific global switch, type: switch-name /?\\n\"Hit any key to break the cycle....1": 1,
                "section=.rsrc type=utf16le string=INPUT": 1,
                "section=.rsrc type=utf16le string=OUTPUT/Displays the state of all the global switches.\\n)Failed to set console control handler!!!\\n": 1,
                "section=.rsrc type=utf16le string=Invalid context syntax.\\n": 1,
                "section=.rsrc type=utf16le string=Unknown WBEM Error.\\n": 1,
                "section=.rsrc type=utf16le string=\\aCONTEXT\\eNAMESPACE             : %1\\n\\eROLE                  : %1\\n\\eAUTHLEVEL             : %1\\n\\eIMPLEVEL              : %1\\n\\ePRIVILEGES            : %1\\n\\eLOCALE                : %1\\n\\eINTERACTIVE           : %1\\n\\eRECORD                : %1\\n\\eTRACE                 : %1\\n\\eUSER                  : %1\\n\\eNODE(S)               : %1\\n(CLASS     - Escapes to full WMI schema.\\n.PATH      - Escapes to full WMI object paths.\\n;CONTEXT   - Displays the state of all the global switches.\\n": 1,
                "section=.rsrc type=utf16le string=%1 ASSOC [<format specifier>]\\n": 1,
                "section=.rsrc type=utf16le string=,%1 CALL <method name> [<actual param list>]\\n": 1,
                "section=.rsrc type=utf16le string=%1 CREATE <assign list>\\n*%1 GET [<property list>] [<get switches>]\\n": 1,
                "section=.rsrc type=utf16le string=%1 SET [<assign list>]\\n\\n%1 DELETE\\n*%1 LIST [<list format>] [<list switches>]\\n": 1,
                "section=.rsrc type=utf16le string=%1 - Invalid property(s).\\n+%1 - Invalid or non-writeable property(s).\\n": 1,
                "section=.rsrc type=utf16le string=Interactive mode set.\\n": 1,
                "section=.rsrc type=utf16le string=Interactive mode already set.\\n": 1,
                "section=.rsrc type=utf16le string=QUIT/EXIT - Exits the program.\\n*Please wait while WMIC is being installed.;                                                           ,The following ASSOC switches are available:\\n": 1,
                "section=.rsrc type=utf16le string=/RESULTCLASS:<classname>    - Indicates that the returned endpoints associated with the source object must belong to or be derived from the specified class.\\n": 1,
                "section=.rsrc type=utf16le string=/RESULTROLE:<rolename>      - Indicates that the returned endpoints must play a particular role in their association with the source object.\\n\u00a2/ASSOCCLASS:<assocclass>    - Indicates that the returned endpoints must be associated with the source through the specified class or one of its derived classes.\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=The ResultClass keyword indicates that the returned endpoints associated with the source object must belong to or be derived from the specified class.\\n": 1,
                "section=.rsrc type=utf16le string=/RESULTCLASS:<classname>\\n": 1,
                "section=.rsrc type=utf16le string=The ResultRole keyword indicates that the returned endpoints must play a particular role in their association with the source object.\\n": 1,
                "section=.rsrc type=utf16le string=/RESULTROLE:<rolename>": 1,
                "section=.rsrc type=utf16le string=The AssocClass keyword indicates that the returned endpoints must be associated with the source through the specified class or one of its derived classes.\\n": 1,
                "section=.rsrc type=utf16le string=/ASSOCCLASS:<assocclass>\\n": 1,
                "section=.rsrc type=utf16le string=Invalid format specifier.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid Assoc Switch.\\n": 1,
                "section=.rsrc type=utf16le string=FailFast already set.\\n": 1,
                "section=.rsrc type=utf16le string=FailFast mode set.\\n7/FAILFAST            Sets or resets the FailFast mode.\\n-FAILFAST - Sets or resets the FailFast mode.\\n": 1,
                "section=.rsrc type=utf16le string=/FAILFAST:<option>\\n\\eFAILFAST              : %1\\nCExecutes the command and displays the output <repeat count> times.\\n/ERROR:\\nCode = %1\\nDescription = %2Facility = %3\\n": 1,
                "section=.rsrc type=utf16le string=ReturnValue = %For instance (%1), Invoke (%2) (Y/N)?": 1,
                "section=.rsrc type=utf16le string=Invoke (%1) (Y/N)?!For instance (%1), Invoking (%2)\\n": 1,
                "section=.rsrc type=utf16le string=Invoking (%1)\\n&Call\\t\\t\\t[ In/Out ]Params&type\\t\\t\\tStatus\\n&====\\t\\t\\t=====================\\t\\t\\t======\\n": 1,
                "section=.rsrc type=utf16le string=Property\\t\\t\\t\\tType\\t\\t\\tOperation\\n": 1,
                "section=.rsrc type=utf16le string=========\\t\\t\\t\\t====\\t\\t\\t=========\\n": 1,
                "section=.rsrc type=utf16le string=Executing (%1)->%2()\\n\\rDescription:\\nTNOTE: Order of /TRANSLATE and /FORMAT switches influences the appearance of output.\\ncCase1: If /TRANSLATE precedes /FORMAT, then translation of results will be followed by formatting.\\n_Case2: If /TRANSLATE succeeds /FORMAT, then translation of the formatted results will be done.\\n": 1,
                "section=.rsrc type=utf16le string=Execute (%1)->%2() (Y/N/?)?": 1,
                "section=.rsrc type=utf16le string=/REPEAT:<repeat count>\\n\\eHINT: BNF for Alias usage.\\nY(<alias> [WMIObject] | <alias> [<path where>] | [<alias>] <path where>) [<verb clause>].\\n?PATH (<path expr> | (<class path expr> [WHERE <where clause>]))": 1,
                "section=.rsrc type=utf16le string=WHERE <where clause>": 1,
                "section=.rsrc type=utf16le string=CLASS <class path expression>": 1,
                "section=.rsrc type=utf16le string=%1 <WMI Object>4OUTPUT - Specifies the mode for output redirection.\\n": 1,
                "section=.rsrc type=utf16le string=/OUTPUT:<outputspec>\\n9NOTE: <outputspec> ::= (STDOUT | CLIPBOARD | <filename>)\\n@/OUTPUT              Specifies the mode for output redirection.\\n\\eOUTPUT                : %1\\n": 1,
                "section=.rsrc type=utf16le string=Deleting instance %1\\n": 1,
                "section=.rsrc type=utf16le string=Instance deletion failed.\\n": 1,
                "section=.rsrc type=utf16le string=Instance deletion successful.\\nF/INTERACTIVE[:<property list>] - verb invocation mode is interactive.\\n": 1,
                "section=.rsrc type=utf16le string=)No methods are available with the class.\\n": 1,
                "section=.rsrc type=utf16le string=Redirection to stdout failed.\\n6File specified for OUTPUT is already open for APPEND.\\n6File specified for APPEND is already open for OUTPUT.\\n,An error occured while closing APPEND file.\\n@Invalid file name specified, Program opens file with name \"%1\".\\nIVerb derivation string is not available for the verb specified in alias.\\n": 1,
                "section=.rsrc type=utf16le string=Invalid file name.\\n": 1,
                "section=.rsrc type=utf16le string=Cannot open input file.\\n6File specified for OUTPUT is already open for RECORD.\\n6File specified for RECORD is already open for OUTPUT.\\n6File specified for RECORD is already open for APPEND.\\n": 1,
                "section=.rsrc type=utf16le string= - Invalid class method.\\n": 1,
                "section=.rsrc type=utf16le string= - Invalid alias verb.\\n;Failed to open Node-list file (Please check the filename).\\n": 1,
                "section=.rsrc type=utf16le string=Node-list file is empty.\\n": 1,
                "section=.rsrc type=utf16le APPEND - Specifies the mode for output redirection.\\n'Displays properties if '?' is pressed.\\n": 1,
                "section=.rsrc type=utf16le string=/APPEND:<outputspec>\\n9NOTE: <outputspec> ::= (STDOUT | CLIPBOARD | <filename>)\\n@/APPEND              Specifies the mode for output redirection.\\n\\eAPPEND                : %1\\n2HINT: /REPEAT should always follow /EVERY switch.\\n<      STDOUT     - Output will be redirected to the STDOUT.\\n:      CLIPBOARD  - Output will be copied on to CLIPBOARD.\\nA      <filename> - Output will be written to the specified file.\\nB      <filename> - Output will be appended to the specified file.\\n* - Not a parameter of the verb or method.\\n7AGGREGATE - Determines the mode of displaying results.\\n": 1,
                "section=.rsrc type=utf16le string=/AGGREGATE:<option>.\\n\\eAGGREGATE             : %1\\n4/AGGREGATE           Sets or resets aggregate mode.\\n$Update property(s) of '%1' (Y/N/?)?": 1,
                "section=.rsrc type=utf16le string=Delete '%1' (Y/N/?)?": 1,
                "section=.rsrc type=utf16le string=Updating property(s) of '%1'\\n": 1,
                "section=.rsrc type=utf16le string=ERROR:\\nDescription = %1": 1,
                "section=.rsrc type=utf16le string=Win32 Error: %1\\n\\nNode - %1\\nmNOTE: Enclose the switch value in  double quotes, if the value contains special  characters like '-' or '/'.\\n": 1,
                "section=.rsrc type=utf16le string=Out Parameters:": 1,
                "section=.rsrc type=utf16le string=Invalid AGGREGATE syntax.\\n": 1,
                "section=.rsrc type=utf16le NOTE: Allowed value(s) for <option> is either ON or OFF.\\n Verb/Method expected with CALL.\\n": 1,
                "section=.rsrc type=utf16le string=%1 GET [<get switches>]\\n": 1,
                "section=.rsrc type=utf16le string=GET [<get switches>]\\n": 1,
                "section=.rsrc type=utf16le string=Schema get operation.\\n": 1,
                "section=.rsrc type=utf16le string=Deletes the class specified.\\n;Returns the result of query: ASSOCIATORS OF {<wmi class>}.\\n": 1,
                "section=.rsrc type=utf16le string=<<Description not available>>": 1,
                "section=.rsrc type=utf16le No nodes are available for insertion from nodelist file.\\n6File specified for APPEND is already open for RECORD.\\n": 1,
                "arch     x86": 1,
                "binsz    358912": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x000591ba": 1,
                "compiled Sun Apr 13 19:34:49 2008": 1,
                "crypto   false": 1,
                "dbg_file WMIC.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x00058f34": 1,
                "guid     C3FF23080AB34D86856E6595F9BFE4191": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   true": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows CUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x3": 1,
                "TimeDateStamp : 0x48025249": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x10f": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0x48600": 1,
                "SizeOfInitializedData : 0xf400": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x4a000": 1,
                "ImageBase : 0x1000000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x5a000": 1,
                "SizeOfHeaders : 0x400": 1,
                "CheckSum : 0x58f34": 1,
                "Subsystem : 0x3": 1,
                "DllCharacteristics : 0x8000": 1,
                "SizeOfStackReserve : 0x40000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x47b5c": 1,
                "Size : 0x104": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x4b000": 1,
                "Size : 0xedc0": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x13b0": 1,
                "Size : 0x1c": 1,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0x7240": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT": 1,
                "VirtualAddress : 0x258": 1,
                "Size : 0x10c": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x1000": 1,
                "Size : 0x3b0": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "msvcrt.dll": 1,
                "msvcp60.dll": 1,
                "advapi32.dll": 1,
                "kernel32.dll": 1,
                "ole32.dll": 1,
                "oleaut32.dll": 1,
                "user32.dll": 1,
                "framedyn.dll": 1,
                "shlwapi.dll": 1,
                "ws2_32.dll": 1,
                "secur32.dll": 1,
                "iphlpapi.dll": 1,
                "358912": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x1": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: wmi command line": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2108)": 1,
                "InternalName: wmic.exe": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: wmic.exe": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}