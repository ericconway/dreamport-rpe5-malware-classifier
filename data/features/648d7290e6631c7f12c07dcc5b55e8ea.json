{
    "filepath": "/corpus/malware/family_2/5d8d13dfc7f95499392da7bb84aecaf6ba9aeb075a9428697f4bbf6f9c921c1f",
    "fileinfo": {
        "labels": {
            "family": "family_2",
            "software": "malware"
        },
        "md5": "648d7290e6631c7f12c07dcc5b55e8ea",
        "type": "ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, stripped",
        "clamav": "Unix.Trojan.Mirai-5932143-0"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "push ebp;mov eax, 0;mov ebp, esp;sub esp, 8;call ": 3,
                "add esp, ;mov eax, dword [];test eax, eax;je ;mov eax, 0": 3,
                "push ebx;sub esp, ;mov ebx, dword [esp + ];mov al, byte [esp + ];mov byte [esp + ], al": 3,
                "push 0;push 8;push ebx;push esi;call fcn.08049f69": 3,
                "push ebx;push esi;call fcn.08049f69;mov dword [esp + ], eax;push ": 3,
                "push esi;call fcn.0804a004;mov edi, eax;push ;push 7": 3,
                "push ;call fcn.0804ed0f;mov dword [esp], ;call fcn.0804ed0f;mov dword [esp], ": 3,
                "lea eax, [esi + ];push eax;call fcn.0804fbd7;mov byte [esi + ], ;add esp, ": 3,
                "push dword [esp + ];lea eax, [ebp + ];push eax;push ebp;mov ebp, esp": 1,
                "ja ;push ebp;mov eax, 0;mov ebp, esp;sub esp, 8": 1,
                "jle ;mov al, byte [var_3h];cmp al, byte [ebx + 4];jne ;jmp ": 1,
                "mov ecx, 0;inc ecx;cmp ecx, esi;jne ;mov eax, dword [arg_1ch]": 1,
                "push ebp;mov ebp, esp;push edi;push esi;push ebx": 13,
                "call fcn.0804f6a3;cmp eax, ;jne ;sub esp, ;push 0": 4,
                "call fcn.0804f754;mov dword [esp], 0;call fcn.080511bd;mov edx, dword [ecx + eax*4];cmp byte [edx + 4], bl": 4,
                "jmp ;inc eax;cmp eax, dword [var_10h];jne ;sub esp, ": 4,
                "pop ebp;ret;push esi;push ebx;sub esp, 4": 4,
                "inc ebx;cmp ebx, 8;jne ;add esp, 4;pop ebx": 5,
                "mov byte [var_bh], al;cmp ebx, 5;je ;mov al, byte [esi + 5];test al, al": 6,
                "add edi, 5;mov word [ecx], 2;mov dword [ecx + 4], edx;add ecx, ;cmp edi, esi": 6,
                "mov dword [var_24h], 0;cmp dword [var_2ch], 0;je ;mov bl, byte [edi];mov byte [var_1fh], bl": 6,
                "mov byte [var_1fh], bl;mov dword [var_24h], 0;test bl, bl;je ;sub esp, 8": 6,
                "mov al, byte [edi + 1];mov esi, dword [var_24h];push ebx;sub esp, 8;mov ebx, dword [arg_1ch]": 1,
                "cmp eax, ebp;jg ;add edi, 3;mov edx, dword [var_24h];mov dword [var_38h], edx": 5,
                "jg ;add edi, 3;mov edx, dword [var_24h];mov dword [var_38h], edx;mov dword [var_18h], 0": 5,
                "mov eax, 0;mov al, bl;lea edx, [eax + edi];mov ebx, dword [var_18h];mov esi, dword [var_24h]": 5,
                "push 1;lea eax, [esi + 1];push eax;call fcn.0805077c;mov edx, dword [var_48h]": 4,
                "je ;cmp byte [var_1fh], 0;je ;push esi;push ebx": 1,
                "pop ebp;ret;push edi;push esi;push ebx": 6,
                "call fcn.0804a3db;mov edx, ;mov eax, 9;call fcn.0804a3db;mov edx, ": 3,
                "mov eax, ;call fcn.0804a3db;mov eax, 1;add esp, ;ret": 2,
                "movzx esi, byte [esp + ];push 4;mov eax, 0;mov al, byte [esp + ];push eax": 2,
                "push 1;push 5;push edi;push esi;call fcn.0804a004": 2,
                "push ;push 7;push edi;push esi;call fcn.0804a004": 2,
                "push 7;push edi;push esi;call fcn.0804a004;mov dword [esp + ], eax": 2,
                "add esp, ;push 1;push 1;push edi;push esi": 2,
                "mov word [esp + ], ax;mov edx, dword [esp + ];mov word [esp + ], dx;mov ecx, ebp;mov byte [esp + ], cl": 2,
                "mov byte [ebx + 8], al;add esp, ;cmp byte [esp + ], 0;je ;mov word [ebx + 6], ": 2,
                "mov word [ecx + 2], ;mov ecx, dword [esp + ];mov word [ecx + ], 8;mov al, byte [esi];and eax, ": 2,
                "mov dword [esi + ], eax;cmp byte [esp + ], 0;je ;mov eax, dword [ebx + ];mov dword [esi + ], eax": 1,
                "je ;mov eax, dword [ebx + ];mov dword [esi + ], eax;jmp ;sub eax, ": 1,
                "mov ecx, dword [arg_ch];mov ebx, 0;cmp ecx, 1;jbe ;mov ebx, 0": 1,
                "and eax, ;add ebx, eax;add edx, 2;sub ecx, 2;cmp ecx, 1": 3,
                "mov eax, ebx;shr eax, ;movzx edx, bx;add eax, edx;mov edx, eax": 1,
                "shr eax, ;movzx edx, bx;add eax, edx;mov edx, eax;shr edx, ": 1,
                "add eax, edx;not eax;and eax, ;pop ebx;ret": 1,
                "mov esi, dword [arg_18h];mov ecx, dword [arg_24h];mov eax, dword [arg_20h];mov word [var_2h], ax;mov edx, dword [arg_1ch]": 2,
                "jle ;mov ebx, 0;mov ax, word [edx];and eax, ;add ebx, eax": 2,
                "add ebx, eax;mov eax, 0;mov al, byte [esi + 9];ror ax, 8;mov ecx, ebp": 2,
                "inc ebx;dec edx;cmp edx, ;jne ;mov eax, 0": 3,
                "and ebx, ;push ebx;call fcn.0804f25b;mov dword [esp], esi;call fcn.0804f151": 5,
                "je ;jmp ;sub esp, ;push 6;call fcn.0804ecfa": 5,
                "jmp ;mov eax, 0;lea ecx, [arg_4bh];inc eax;mov dl, byte [eax + ecx]": 5,
                "je ;cmp dl, ;jne ;test dl, dl;je ": 5,
                "jne ;mov esi, ecx;jmp ;mov dl, byte [eax + 3];inc eax": 5,
                "jne ;lea edx, [arg_224ch];sub eax, edx;lea esi, [eax + ];mov byte [esp + esi + ], 0": 5,
                "inc eax;cmp edi, 6;jg ;inc ecx;mov ebx, eax": 4,
                "mov byte [esp + edx + ], 0;lea ebx, [esp + ecx + ];sub esp, ;push ebx;call fcn.0804f151": 3,
                "cmp eax, ;jg ;sub esp, 8;push ebx;lea eax, [arg_47h]": 3,
                "add esp, ;test eax, eax;je ;sub esp, 8;push 0": 3,
                "push 6;call fcn.0804ec6e;add esp, 8;push eax;lea esi, [arg_1258h]": 2,
                "push edi;push esi;push ebx;sub esp, ;push 0": 1,
                "mov byte [eax], 0;mov dword [], 0;mov dword [esp], 6;call fcn.0804ed0f;mov dword [esp], 7": 1,
                "push eax;call fcn.0804f25b;add esp, 8;push eax;push ebx": 1,
                "add ebx, eax;add esp, 8;push 0;push 7;call fcn.0804ec6e": 1,
                "cmp eax, ;je ;sub esp, ;push eax;call fcn.0804f675": 2,
                "push esi;call fcn.0804f846;mov edx, eax;add esp, ;cmp eax, ": 1,
                "sub esp, ;push 6;call fcn.0804ed0f;add esp, 8;push 0": 1,
                "mov dword [var_8h], eax;jmp ;mov al, byte [edx + ];sub eax, ;cmp al, 9": 1,
                "cmp esi, eax;jl ;sub esp, ;push 0;call fcn.0804f936": 1,
                "sub esp, ;push 0;call fcn.0804f936;sub eax, ebx;add esp, ": 1,
                "add esp, ;cmp eax, ;jle ;mov esi, ;jmp ": 1,
                "push 7;call fcn.0804ec6e;add esp, 8;push eax;lea eax, [esi + ebx]": 1,
                "sub esp, ;push eax;call fcn.0804f675;add esp, ;mov dword [], ": 1,
                "call fcn.0804f675;add esp, ;mov dword [], ;sub esp, ;push 1": 1,
                "cmp byte [], 0;jne ;mov eax, dword [];mov word [var_14h], 2;mov dword [var_18h], eax": 2,
                "add esp, ;add esp, ;pop ebx;pop esi;ret": 7,
                "jne ;sub esp, 8;push 2;push str.dev_misc_watchdog;call fcn.0804f786": 2,
                "mov byte [var_3ah], 0;mov byte [var_3bh], 0;mov byte [var_3ch], ;mov byte [var_3dh], 0;lea edi, [var_4ach]": 2,
                "lea ecx, [var_49ch];add edx, dword [ecx + eax*4 - 4];inc eax;cmp eax, 8;jne ": 2,
                "add esi, 2;add esp, ;cmp esi, ;jne ;mov edx, edi": 2,
                "call fcn.0804f240;add esp, ;test bl, bl;je ;sub esp, ": 1,
                "push ebx;mov ebx, dword [];mov eax, ebx;shl eax, ;xor ebx, eax": 1,
                "mov eax, ebx;shr eax, 8;mov ecx, edx;shr ecx, ;xor edx, ecx": 1,
                "xor edx, ecx;xor ebx, edx;xor eax, ebx;mov dword [], eax;pop ebx": 1,
                "shl edx, 5;add edx, ecx;mov eax, esi;sub eax, edx;mov byte [ebp], al": 3,
                "sub eax, edx;mov byte [ebp], al;inc ebp;dec ebx;test ebx, ebx": 3,
                "inc ebp;dec ebx;test ebx, ebx;jg ;add esp, ": 3,
                "call fcn.0804f936;mov dword [], eax;call fcn.0804f6c9;mov ebx, eax;call fcn.0804f6ef": 4,
                "mov dword [], eax;call fcn.0804f6c9;mov ebx, eax;call fcn.0804f6ef;xor eax, ebx": 4,
                "push ebx;sub esp, 8;mov ebx, dword [arg_10h];test ebx, ebx;je ": 6,
                "push edi;push esi;push ebx;mov ebx, dword [arg_10h];mov esi, dword [arg_14h]": 7,
                "sub esp, ;push esi;call fcn.0804f151;lea ecx, [ebx + 1];inc eax": 7,
                "mov dl, byte [esi];cmp dl, ;je ;test dl, dl;jne ": 7,
                "jne ;mov edx, edi;mov byte [ebx], dl;lea edx, [ecx + 1];mov ebx, ecx": 7,
                "mov edx, edi;mov byte [ebx], dl;lea edx, [ecx + 1];mov ebx, ecx;mov edi, 0": 7,
                "add esp, 4;push dword [var_1ch];call fcn.0804f151;mov edi, dword [var_20h];add edi, eax": 8,
                "sub eax, edx;mov esi, ecx;sub esi, eax;mov word [var_28h], si;add esp, 8": 8,
                "add esp, 8;push ;lea eax, [var_b8h];push eax;call fcn.0804f240": 7,
                "je ;sub esp, ;push esi;call fcn.0804f675;add esp, ": 6,
                "push esi;call fcn.0804f675;add esp, ;sub esp, 4;push 0": 6,
                "mov esi, eax;add esp, ;cmp eax, ;jne ;sub esp, ": 6,
                "add eax, ;add esp, ;cmp ebx, eax;jb ;lea eax, [var_c8h]": 4,
                "lea ebx, [edx + eax + 5];add esp, ;mov ecx, dword [var_18h];cmp cx, word [var_bch];jne ": 3,
                "cmp cx, word [var_bch];jne ;mov ax, word [var_c2h];test ax, ax;je ": 3,
                "ror ax, 8;cmp ax, 4;jne ;push edi;push esi": 1,
                "mov ecx, dword [var_1ch];mov dword [ecx + 4], eax;mov dl, byte [ecx];push ebp;push edi": 1,
                "mov ebx, ebp;add ebx, dword [var_a8h];dec word [var_1ah];cmp word [var_1ah], ;jne ": 1,
                "add ebx, dword [var_a8h];dec word [var_1ah];cmp word [var_1ah], ;jne ;jmp ": 1,
                "sub esp, ;push edx;call fcn.0804e7e6;mov ecx, dword [arg_8h];mov eax, dword [arg_4h]": 1,
                "mov ecx, dword [arg_8h];mov eax, dword [arg_4h];lea edx, [eax*8 + ];test ecx, ecx;je ": 1,
                "sub esp, ;and eax, ;lea ecx, [eax*8 + ];mov eax, dword [];mov ebp, eax": 2,
                "mov edx, 0;mov eax, edx;add eax, dword [ecx];mov ebx, ebp;xor byte [eax], bl": 2,
                "xor byte [eax], bl;mov eax, edx;add eax, dword [ecx];mov ebx, edi;xor byte [eax], bl": 2,
                "add eax, dword [ecx];mov ebx, edi;xor byte [eax], bl;mov eax, edx;add eax, dword [ecx]": 2,
                "xor byte [eax], bl;mov eax, edx;add eax, dword [ecx];mov ebx, esi;xor byte [eax], bl": 2,
                "mov bl, byte [esp];xor byte [eax], bl;inc edx;mov eax, dword [ecx + 4];and eax, ": 2,
                "call fcn.0804ec8e;add esp, ;ret;push ebp;push edi": 4,
                "push eax;call fcn.0804f1f7;mov eax, ebp;and eax, ;mov dword [eax*8 + ], esi": 5,
                "and eax, ;mov dword [eax*8 + ], esi;mov word [eax*8 + ], bx;add esp, ;pop ebx": 5,
                "mov edx, ;mov eax, ;call fcn.0804ed24;mov ecx, ;mov edx, str.NKQVGLKLE": 5,
                "call fcn.0804ed24;mov ecx, ;mov edx, str.okpck;mov eax, ;call fcn.0804ed24": 5,
                "mov edx, str.KL___WQ__MZ;mov eax, ;call fcn.0804ed24;mov ecx, ;mov edx, str.vqMWPAG": 5,
                "mov ecx, ;mov edx, str.cAAGRV;mov eax, ;call fcn.0804ed24;mov ecx, ": 5,
                "mov eax, ;call fcn.0804ed24;mov ecx, ;mov edx, str.aMLVGLV;mov eax, ": 5,
                "push ebx;mov ebp, dword [arg_14h];mov edi, dword [arg_18h];mov esi, dword [arg_1ch];push ebp": 4,
                "jne ;mov eax, 1;jmp ;mov eax, 0;pop ebx": 5,
                "mov al, byte [edx + ecx];mov byte [edx + ebx], al;inc edx;cmp edx, esi;jne ": 4,
                "cmp edx, 9;jle ;lea eax, [edx + ];mov byte [esp + esi + ], al;mov eax, ecx": 7,
                "push eax;push edi;call fcn.0804f21c;add esp, 8;jmp ": 7,
                "add esp, 8;jmp ;mov byte [edi], ;mov byte [edi + 1], 0;jmp ": 7,
                "mov esi, ;jmp ;mov eax, edi;add esp, ;pop ebx": 7,
                "jmp ;mov eax, edi;add esp, ;pop ebx;pop esi": 7,
                "pop esi;pop edi;pop ebp;ret;push ebp": 32,
                "push esi;push ebx;mov ebp, dword [arg_14h];mov ecx, dword [arg_18h];mov edi, dword [arg_1ch]": 8,
                "mov esi, dword [arg_20h];cmp esi, ecx;jg ;test ecx, ecx;jle ": 8,
                "mov dword [var_4h], 1;jmp ;cmp dl, ;jne ;movsx ecx, byte [eax]": 8,
                "setbe al;and eax, ;mov esi, eax;push esi;push ebx": 1,
                "jmp ;test edi, edi;jns ;cmp dword [var_4h], 1;sbb ebp, ebp": 6,
                "jmp ;mov eax, ;mov ecx, dword [arg_8h];test ecx, ecx;je ": 1,
                "sub esp, ;mov esi, dword [arg_20h];mov ebp, dword [arg_24h];push ebp;push edi": 1,
                "ret;push edi;push ebx;sub esp, ;mov ecx, dword [arg_24h]": 5,
                "mov eax, ebx;add esp, ;pop ebx;pop edi;ret": 15,
                "mov edi, dword [arg_10h];push ebx;mov ebx, edi;mov eax, ;int ": 40,
                "push ebx;mov ebx, edi;mov eax, 6;int ;pop ebx": 6,
                "mov ecx, dword [arg_24h];mov edi, dword [arg_20h];test cl, ;je ;lea eax, [arg_2ch]": 11,
                "lea eax, [arg_2ch];mov dword [var_10h], eax;mov eax, dword [arg_28h];movzx edx, ax;push ebx": 11,
                "sub esp, 4;mov ecx, dword [arg_14h];mov edx, dword [arg_18h];mov esi, dword [arg_1ch];mov edi, dword [arg_20h]": 31,
                "jbe ;push edi;sub esp, ;lea eax, [arg_2ch];mov edi, dword [arg_20h]": 1,
                "mov ecx, dword [arg_14h];push edi;sub esp, 8;mov edi, dword [arg_10h];push ebx": 1,
                "sub esp, 4;mov ecx, dword [arg_14h];mov edi, dword [arg_10h];mov edx, dword [arg_18h];test ecx, ecx": 12,
                "or eax, ;jmp ;mov esi, 8;push ebx;mov ebx, edi": 12,
                "mov esi, 8;push ebx;mov ebx, edi;mov eax, ;int ": 12,
                "mov dword [ebx], esi;jmp ;sub esp, ;push ;call fcn.08050008": 9,
                "test eax, eax;jne ;sub esp, ;push ebx;call fcn.08050dcd": 8,
                "call fcn.08051976;add esp, ;test eax, eax;jg ;xor ebx, ebx": 7,
                "movzx edx, word [ebx + 8];add eax, edx;mov dword [esi + 4], eax;mov eax, dword [ebx + 4];mov dword [esi + ], eax": 7,
                "add esp, ;imul eax, eax, ;and eax, ;ret;push edi": 8,
                "cmp eax, esi;jae ;push edi;sub esp, 8;mov edi, dword [arg_10h]": 1,
                "mov eax, dword [arg_8h];pop edi;ret;sub esp, ;push edi": 1,
                "ret;sub esp, ;lea eax, [var_20h];push eax;push dword [arg_2ch]": 8,
                "mov eax, edx;add esp, ;ret;sub esp, ;mov eax, dword [arg_28h]": 9,
                "mov dword [var_20h], eax;lea eax, [var_18h];push eax;push 2;call fcn.08051867": 10,
                "mov eax, dword [arg_2ch];push edi;push esi;push ebx;xor ebx, ebx": 1,
                "push eax;push 6;call fcn.08051867;add esp, ;ret": 11,
                "push edx;push edx;push dword [arg_18h];push eax;call fcn.0804f754": 18,
                "dec eax;jns ;push edx;push edx;push ebx": 18,
                "call fcn.0804ffc2;add esp, ;test eax, eax;sub esp, ;lea eax, [var_20h]": 1,
                "push eax;call fcn.0804ffc2;add esp, ;test eax, eax;js ": 22,
                "shr ebx, 5;sub esp, ;mov eax, dword [arg_28h];mov dword [var_18h], eax;mov eax, dword [arg_2ch]": 1,
                "pop ebx;ret;mov edx, eax;push ebx;shr edx, 8": 15,
                "and ebx, 3;lea eax, [ebx + eax*4 + ];pop ebx;ret;push ebp": 15,
                "mov dword [var_14h], eax;mov ebx, dword [];test bl, 1;jne ;test ebx, ebx": 14,
                "mov dword [edx + 8], eax;mov dword [eax + ], edx;cmp edi, dword [var_14h];je ;cmp edi, ": 10,
                "jne ;cmp dword [ecx + 8], eax;je ;call fcn.08050f69;mov esi, ebx": 5,
                "test edx, edx;je ;mov eax, edi;mov esi, 1;shl eax, 8": 4,
                "mov eax, edi;mov esi, 1;shl eax, 8;lea ebx, [eax + ];jmp ": 4,
                "test edx, esi;je ;mov ecx, dword [ebx + ];cmp ecx, ebx;jne ": 4,
                "mov eax, esi;lea ebx, [ecx + 8];not eax;and edx, eax;add esi, esi": 4,
                "mov edx, dword [ecx + 4];mov eax, dword [ecx + ];and edx, ;mov esi, edx;sub esi, dword [var_14h]": 3,
                "mov ebx, dword [var_14h];or eax, 1;mov dword [ecx + 4], ebx;mov dword [edx + esi], esi;mov dword [edx + 4], eax": 2,
                "push esi;push ;push fcn.08051531;lea eax, [var_ch];push eax": 1,
                "mov eax, dword [eax - 4];test al, 2;jne ;and eax, ;lea edx, [eax - 4]": 1,
                "call fcn.08050dcd;jmp ;push edi;push ;push fcn.08051531": 2,
                "jbe ;and eax, ;mov dword [var_4h], eax;mov edi, dword [var_30h];sub edi, 8": 2,
                "lea esi, [edi + eax];cmp esi, dword [];jne ;mov eax, dword [esi + 4];mov ecx, ebx": 2,
                "mov esi, dword [var_4h];sub ecx, esi;lea eax, [edi + esi];or ecx, 1;mov dword [], eax": 2,
                "and edx, ;mov ebx, dword [var_8h];add ebx, edx;cmp ebx, dword [var_4h];jb ": 2,
                "cmp dword [edx + ], esi;jne ;cmp dword [eax + 8], esi;je ;call fcn.08050f69": 2,
                "jne ;cmp dword [eax + 8], esi;je ;call fcn.08050f69;mov dword [edx + ], eax": 2,
                "mov dword [edx + 4], eax;mov eax, dword [esi + 8];mov dword [edx + 8], eax;jbe ;mov eax, dword [esi + ]": 2,
                "mov dword [edx + ], eax;mov eax, dword [esi + ];mov dword [edx + ], eax;sub esp, ;add ebx, 8": 2,
                "lea ebx, [edi + 8];jmp ;mov ecx, dword [var_30h];mov eax, dword [];dec eax": 1,
                "sub ebx, ebp;cmp dword [var_8h], ebx;je ;push 1;push esi": 1,
                "sub edi, ebp;add eax, ebp;push eax;push edi;call fcn.08051c5a": 1,
                "lea edx, [eax + ebp];or ebx, 2;mov eax, esi;mov dword [edx + 4], ebx;sub eax, dword [var_8h]": 1,
                "jbe ;mov dword [], eax;lea ebx, [edx + 8];jmp ;mov eax, dword [esp]": 1,
                "je ;mov ecx, edi;sub ecx, eax;je ;mov eax, dword [ebp + ]": 1,
                "sub esp, ;mov edx, dword [var_30h];mov eax, dword [edx];mov edx, 1;test eax, eax": 2,
                "test ecx, ecx;je ;mov dword [eax], 0;mov edx, dword [ecx + 8];mov dword [var_14h], edx": 2,
                "mov dword [esi + ], edx;mov dword [edx + 8], esi;mov eax, dword [var_30h];mov ebp, dword [var_8h];and ebp, ": 2,
                "mov dword [edx + 8], esi;mov eax, dword [var_30h];mov ebp, dword [var_8h];and ebp, ;cmp ebx, dword [eax + ]": 2,
                "mov eax, dword [var_30h];mov ebp, dword [var_8h];and ebp, ;cmp ebx, dword [eax + ];je ": 2,
                "je ;mov eax, dword [ebx + ebp + 4];mov dword [ebx + 4], ebp;and eax, 1;test eax, eax": 2,
                "mov edx, dword [ebx + 8];mov eax, dword [ebx + ];mov esi, dword [edx + ];cmp esi, ebx;jne ": 2,
                "mov dword [eax + ], ;mov edx, dword [var_30h];sub esp, ;mov eax, dword [edx];and eax, 3": 2,
                "push ;call fcn.080513ad;mov ecx, dword [arg_40h];add esp, ;mov dword [ecx + ], eax": 2,
                "push esi;push ebx;sub esp, ;mov edi, dword [arg_30h];test edi, edi": 3,
                "je ;push esi;push ;push fcn.08051531;lea eax, [var_18h]": 3,
                "lea ecx, [edi - 8];mov eax, dword [];add esp, ;mov edx, dword [ecx + 4];mov ebx, edx": 3,
                "or eax, 3;mov dword [], eax;lea edx, [ebx*4 + ];mov eax, dword [edx - 4];mov dword [ecx + 8], eax": 3,
                "sub eax, ebp;mov edi, dword [eax + 8];mov edx, dword [eax + ];mov ecx, dword [edi + ];cmp ecx, eax": 3,
                "mov dword [eax + 8], edx;add ebx, ebp;mov eax, dword [];mov dword [ecx + ], ;mov dword [ecx + 8], eax": 2,
                "mov eax, dword [eax + 4];and eax, ;cmp eax, dword [];jb ;mov edx, ": 2,
                "mov eax, dword [];call fcn.08050b98;jmp ;mov edx, dword [edi - 8];dec dword []": 2,
                "sub esp, ;push ;call fcn.08051531;mov eax, ;add esp, ": 2,
                "push 1;call fcn.0804f8e1;add esp, ;cmp byte [], 0;jne ": 2,
                "cmp byte [], 3;jne ;sub esp, ;mov byte [], 4;push ": 2,
                "jne ;mov ebp, 1;jmp ;xor ebp, ebp;inc ebx": 5,
                "xor edx, edx;cmp eax, ;ja ;or eax, ;xor edx, edx": 4,
                "or eax, ;xor edx, edx;div esi;mov byte [var_bh], dl;xor edx, edx": 4,
                "or eax, ;mov cl, ;cmp al, ;jbe ;lea ecx, [eax - ]": 4,
                "cmp al, ;jbe ;lea ecx, [eax - ];movzx eax, cl;cmp eax, esi": 4,
                "cmp eax, esi;jge ;inc ebx;cmp edx, dword [var_4h];ja ": 4,
                "mov eax, ebp;test al, al;je ;neg edx;add esp, ": 4,
                "sub esp, ;push esi;call eax;add esp, ;push eax": 5,
                "lea esi, [esp + ];push esi;push ebx;push 0;call fcn.0804f8e1": 5,
                "push esi;push ebx;push 0;call fcn.0804f8e1;add esp, ": 5,
                "mov ebx, eax;mov esi, dword [eax];push ebp;push 0;lea eax, [esp + ]": 5,
                "lea ebp, [esp + ];lea ebx, [esp + ];jne ;push edi;push edi": 5,
                "push 2;call fcn.0804f8e1;pop edx;pop ecx;push ebx": 4,
                "lea eax, [esp + ];push eax;push eax;call fcn.08051ccb;mov edi, eax": 3,
                "mov eax, 1;jmp ;call fcn.0804fbad;mov dword [eax], ;jmp case..1": 3,
                "jmp ;mov eax, ;jmp ;or eax, ;jmp ": 3,
                "call dword [ebx*4 + ];dec ebx;cmp ebx, ;jne ;push ebp": 1,
                "cmp ebx, ;jne ;mov eax, dword [];test eax, eax;je ": 3,
                "je ;call eax;mov ecx, dword [];test ecx, ecx;je ": 3,
                "jmp ecx;pop eax;pop edx;pop ebx;ret": 3,
                "pop edx;pop ebx;ret;xor eax, eax;ret": 3,
                "push eax;call fcn.0804f5b1;add esp, ;inc eax;jne ": 6,
                "jne ;push eax;push eax;push ebx;push ": 6,
                "push eax;push eax;push ebx;push ;call fcn.0804f786": 5,
                "sub esp, ;mov eax, dword [arg_b8h];mov edi, dword [arg_a8h];mov dword [], eax;mov eax, dword [arg_b4h]": 7,
                "mov eax, dword [arg_b4h];mov dword [], eax;mov eax, dword [arg_a4h];mov ebp, dword [var_ach];lea edx, [edi + eax*4]": 7,
                "mov dword [], edx;push ecx;push ;push 0;lea eax, [var_20h]": 7,
                "lea eax, [var_20h];push eax;call fcn.0804fbfe;mov eax, dword [];add esp, ": 7,
                "push edx;push 8;push ebx;lea eax, [esp + eax*8 + ];push eax": 7,
                "push 8;push ebx;lea eax, [esp + eax*8 + ];push eax;call fcn.08051df6": 7,
                "jne ;mov ax, ;mov dword [], eax;cmp dword [var_70h], ;jne ": 7,
                "mov ax, ;mov dword [], eax;cmp dword [var_70h], ;jne ;call fcn.08051bd5": 7,
                "cmp dword [var_70h], ;jne ;call fcn.08051bd5;mov ebx, eax;call fcn.08051b44": 7,
                "cmp ebx, esi;jb ;test ebp, ebp;je ;call ebp": 7,
                "call 0;mov dword [eax], 0;push eax;push dword [];push edi": 6,
                "push eax;push dword [];push edi;push dword [var_b0h];call dword [var_b0h]": 6,
                "push dword [];push edi;push dword [var_b0h];call dword [var_b0h];mov dword [esp], eax": 6,
                "push ebx;sub esp, ;mov ebx, dword [var_134h];mov esi, dword [var_138h];test ebx, ebx": 7,
                "mov ebx, dword [var_134h];mov esi, dword [var_138h];test ebx, ebx;je ;mov eax, dword [ebx]": 7,
                "mov eax, dword [ebx];mov dword [var_98h], eax;lea eax, [ebx + 4];push edx;push ": 7,
                "or eax, ;mov dword [var_ach], eax;add esp, ;mov eax, ;test byte [ebx + ], 4": 7,
                "add esp, ;mov ebx, eax;test esi, esi;je ;test eax, eax": 7,
                "add esp, ;mov dword [esi + ], eax;mov eax, ebx;add esp, ;pop ebx": 6,
                "call fcn.0804fbad;neg ebx;mov dword [eax], ebx;push esi;push ebx": 1,
                "mov esi, dword [arg_1ch];push ebx;mov ebx, edi;mov eax, ;int ": 6,
                "call fcn.0804fbad;neg ebx;mov dword [eax], ebx;jmp ;push ebx": 5,
                "sub esp, ;mov edx, dword [arg_50h];lea ecx, [var_8h];xchg ebx, edx;mov eax, ": 7,
                "mov esi, eax;test eax, eax;jle ;lea edi, [ebx + eax];jmp ": 8,
                "mov dword [ebx + 4], eax;mov eax, dword [ebx + ];mov word [ebx + 8], ax;mov al, byte [ebx + ];mov byte [ebx + ], al": 8,
                "mov word [ebx + 8], ax;mov al, byte [ebx + ];mov byte [ebx + ], al;push eax;movzx eax, word [ebx + 8]": 8,
                "push eax;lea eax, [ebx + ];push eax;lea eax, [ebx + ];push eax": 8,
                "mov eax, ;int ;pop ebx;mov dword [var_14h], eax;cmp eax, ": 9,
                "neg dword [var_14h];mov edx, dword [var_14h];mov dword [eax], edx;jmp ;cmp dword [var_14h], ": 9,
                "mov dword [eax], edx;jmp ;cmp dword [var_14h], ;je ;mov esi, dword [arg_ch]": 8,
                "mov esi, dword [arg_ch];mov ebx, dword [var_2ch];mov dword [var_20h], ;mov dword [var_1ch], ;jmp ": 8,
                "push 0;push dword [var_1ch];push dword [var_20h];push dword [arg_8h];call fcn.08051bfb": 8,
                "mov al, byte [ebx + ];mov byte [esi + ], al;push eax;movzx eax, word [ebx + ];sub eax, ": 8,
                "push eax;call fcn.08051df6;movzx eax, word [ebx + ];mov esi, dword [var_24h];add ebx, eax": 8,
                "ret;sub esp, ;lea eax, [var_1ch];push eax;push 7": 7,
                "pop edx;pop ecx;pop ebx;ret;mov eax, dword []": 7,
                "sub esp, ;mov ebx, dword [arg_28h];mov ecx, dword [arg_24h];mov ecx, ebx;mov edi, dword [arg_2ch]": 8,
                "mov ecx, ebx;mov edi, dword [arg_2ch];mov ebx, ecx;push ebp;mov ebp, esp": 1,
                "lea esi, [var_8h];sar ebx, ;mov eax, dword [arg_20h];mov edx, dword [arg_24h];push ebx": 7,
                "sar ebx, ;mov eax, dword [arg_20h];mov edx, dword [arg_24h];push ebx;mov ebx, eax": 7,
                "call fcn.0804fbad;neg esi;mov dword [eax], esi;or esi, ;jmp ": 7,
                "cdq;jmp ;mov eax, dword [var_8h];mov edx, dword [var_ch];add esp, ": 7,
                "cmp eax, ;jbe ;call fcn.0804fbad;push ebx;sub esp, 8": 1,
                "pop edx;pop ecx;pop ebx;ret;push esi": 9,
                "jne ;mov ebx, eax;jmp ;sub esp, ;mov ebx, eax": 10,
                "or ebx, ;mov eax, ebx;pop edx;pop ebx;pop esi": 10,
                "push 0;push ebx;call fcn.0804fbfe;movzx eax, word [esi];mov dword [ebx + 4], 0": 12,
                "mov dword [ebx + ], eax;push ebx;sub esp, 8;mov eax, ;int ": 1,
                "mov eax, dword [esi + ];mov dword [ebx + ], eax;mov eax, dword [esi + ];mov dword [ebx + ], eax;mov eax, dword [esi + ]": 40,
                "mov dword [eax], esi;mov eax, 1;jmp ;xor eax, eax;pop edx": 8,
                "mov eax, 1;jmp ;xor eax, eax;pop edx;pop ebx": 8,
                "pop edi;pop ebp;ret;mov edx, dword [eax + ];mov dword [], edx": 8,
                "add byte [eax], al;add byte [eax], al;add byte [eax], al;add byte [eax], al;push esi": 1,
                "add byte [eax], al;push esi;push ebx;sub esp, 4;cmp dword [], 0": 1,
                "xor dword [], ecx;jb ;inc ecx;outsb dx, byte gs:[si];je ": 7,
                "jb ;inc ecx;outsb dx, byte gs:[si];je ;and byte [eax], al": 7,
                "push eax;dec edi;push ebx;push esp;add byte [edi], ah": 7,
                "je ;push ;das;jbe ;push edi": 1,
                "arpl word [eax + ], bp;outsd dx, dword [esi];add byte [bx + si], al;add byte [eax], al;add dword [eax], eax": 5,
                "add byte [eax], al;add byte [eax], al;add byte [eax], al;mov dword [], eax;in eax, dx": 5,
                "add al, 8;mov bh, ;add al, 8;pop ebx;aam 4": 5,
                "jo ;jb ;je ;jbe ;xor byte [ecx], dh": 4,
                "inc ebx;dec esp;inc ebp;inc edi;dec edi": 6,
                "dec ebx;push ecx;push esi;inc edi;dec esp": 3,
                "push edi;or al, ;inc edi;or eax, ;push ebx": 1,
                "dec ebx;dec edi;inc edi;and al, byte [eax];or eax, ": 1,
                "\u001b[2K": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "D$D~n@": 1,
                "D$D~G@": 1,
                "D$x+D$T)": 1,
                "D$0j@j": 1,
                "D$$j@j": 1,
                "\\$X9\\$": 1,
                "D$,j@j": 2,
                "D$ j@j": 2,
                "D$(j@j": 1,
                "\\$X9\\$(": 1,
                "D$0JR**": 1,
                "D$\\@PU": 1,
                "T$/RPS": 1,
                "T$?RPV": 1,
                "xAPPSh": 1,
                "\\$Th<0": 1,
                "\\$0PPj": 1,
                "t$$hl0": 1,
                "u%WWSS": 1,
                "POST /cdn-cgi/": 1,
                "HTTP/1.1": 1,
                "User-Agent:": 1,
                "Cookie:": 1,
                "/proc/net/tcp": 1,
                "/dev/watchdog": 1,
                "/dev/misc/watchdog": 1,
                "abcdefghijklmnopqrstuvw012345678": 1,
                "AJCLEGOG": 2,
                "PGRMPV": 1,
                "NKQVGLKLE": 1,
                "uEzAs\"": 1,
                "FGNGVGF": 1,
                "CLKOG\"": 1,
                "QVCVWQ\"": 1,
                "pgrmpv": 1,
                "jvvrdnmmf\"": 1,
                "nmnlmevdm\"": 1,
                "XMNNCPF\"": 1,
                "egvnmacnkr\"": 1,
                "QJGNN\"": 1,
                "GLC@NG\"": 1,
                "Q[QVGO\"": 1,
                "@WQ[@MZ": 3,
                "okpck\"": 1,
                "CRRNGV": 1,
                "DMWLF\"": 1,
                "LAMPPGAV\"": 1,
                "vqMWPAG": 1,
                "gLEKLG": 1,
                "sWGP[\"": 1,
                "PGQMNT": 1,
                "LCOGQGPTGP": 1,
                "aMLLGAVKML": 1,
                "CNKTG\"": 1,
                "QGVaMMIKG": 1,
                "PGDPGQJ": 1,
                "NMACVKML": 1,
                "AMMIKG": 1,
                "AMLVGLV": 1,
                "NGLEVJ": 1,
                "VPCLQDGP": 1,
                "GLAMFKLE": 1,
                "AJWLIGF\"": 1,
                "AMLLGAVKML": 1,
                "QGPTGP": 2,
                "FMQCPPGQV\"": 1,
                "ANMWFDNCPG": 1,
                "LEKLZ\"": 1,
                "cAAGRV": 2,
                "CRRNKACVKML": 3,
                "nCLEWCEG": 1,
                "aMLVGLV": 1,
                "WPNGLAMFGF\"": 1,
                "oMXKNNC": 5,
                "uKLFMUQ": 4,
                "cRRNGuG@iKV": 5,
                "aJPMOG": 4,
                "qCDCPK": 5,
                "oCAKLVMQJ": 1,
                "tGPQKML": 1,
                "/dev/null": 1,
                ".shstrtab": 1,
                ".rodata": 1,
                ".ctors": 1,
                ".dtors": 1,
                "word: xappsh": 1,
                "word: cookie": 1,
                "word: watchdog": 2,
                "word: abcdefghijklmnopqrstuvw": 1,
                "word: ajclegog": 2,
                "word: pgrmpv": 2,
                "word: nkqvglkle": 1,
                "word: fgngvgf": 1,
                "word: qvcvwq": 1,
                "word: jvvrdnmmf": 1,
                "word: nmnlmevdm": 1,
                "word: xmnncpf": 1,
                "word: egvnmacnkr": 1,
                "word: crrngv": 1,
                "word: lamppgav": 1,
                "word: vqmwpag": 1,
                "word: gleklg": 1,
                "word: pgqmnt": 1,
                "word: lcogqgptgp": 1,
                "word: amllgavkml": 2,
                "word: qgvammikg": 1,
                "word: pgdpgqj": 1,
                "word: nmacvkml": 1,
                "word: ammikg": 1,
                "word: amlvglv": 2,
                "word: nglevj": 1,
                "word: vpclqdgp": 1,
                "word: glamfkle": 1,
                "word: ajwligf": 1,
                "word: qgptgp": 2,
                "word: fmqcppgqv": 1,
                "word: anmwfdncpg": 1,
                "word: caagrv": 2,
                "word: crrnkacvkml": 3,
                "word: nclewceg": 1,
                "word: wpnglamfgf": 1,
                "word: omxknnc": 5,
                "word: uklfmuq": 4,
                "word: crrngug": 5,
                "word: ajpmog": 4,
                "word: qcdcpk": 5,
                "word: ocaklvmqj": 1,
                "word: tgpqkml": 1,
                "word: shstrtab": 1,
                "word: rodata": 1,
                "special: 1.1": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "radare2: ----": 1,
                "radare2: -r-x .init": 1,
                "radare2: -r-x .text": 1,
                "radare2: -r-x .fini": 1,
                "radare2: -r-- .rodata": 1,
                "radare2: -rw- .ctors": 1,
                "radare2: -rw- .dtors": 1,
                "radare2: -rw- .data": 1,
                "radare2: -rw- .bss": 1,
                "radare2: .shstrtab": 1,
                "radare2: -r-x LOAD0": 1,
                "radare2: -rw- LOAD1": 1,
                "radare2: -rw- GNU_STACK": 1,
                "radare2: -rw- ehdr": 1,
                "radare2: type=program": 1,
                "radare2: arch     x86": 1,
                "radare2: baddr    0x8048000": 1,
                "radare2: binsz    45196": 1,
                "radare2: bintype  elf": 1,
                "radare2: bits     32": 1,
                "radare2: canary   false": 1,
                "radare2: class    ELF32": 1,
                "radare2: crypto   false": 1,
                "radare2: endian   little": 1,
                "radare2: havecode true": 1,
                "radare2: laddr    0x0": 1,
                "radare2: lang     c": 1,
                "radare2: linenum  false": 1,
                "radare2: lsyms    false": 1,
                "radare2: machine  Intel 80386": 1,
                "radare2: maxopsz  16": 1,
                "radare2: minopsz  1": 1,
                "radare2: nx       true": 1,
                "radare2: os       linux": 1,
                "radare2: pcalign  0": 1,
                "radare2: pic      false": 1,
                "radare2: relocs   false": 1,
                "radare2: rpath    NONE": 1,
                "radare2: sanitiz  false": 1,
                "radare2: static   true": 1,
                "radare2: stripped true": 1,
                "radare2: subsys   linux": 1,
                "radare2: va       true": 1,
                "radare2: ELF MAGIC   0x464c457f": 1,
                "radare2: Type        0x0002": 1,
                "radare2: Machine     0x0003": 1,
                "radare2: Version     0x00000001": 1,
                "radare2: Entrypoint  0x08048164": 1,
                "radare2: PhOff       0x00000034": 1,
                "radare2: ShOff       0x0000b0cc": 1,
                "radare2: 45196": 1,
                "clamav: bytecode: JIT disabled": 1,
                "clamav: Cannot prepare for JIT, LLVM is not compiled or not linked": 1,
                "clamav: Bytecode: 0 bytecode prepared with JIT, 94 prepared with interpreter, 94 total": 1,
                "clamav: Recognized ELF file": 1,
                "clamav: in cli_scanelf": 1,
                "clamav: ELF: ELF class 1 (32-bit)": 2,
                "clamav: ELF: File is little-endian - conversion not required": 1,
                "clamav: ELF: File type: Executable": 1,
                "clamav: ELF: Machine type: Intel 8????": 1,
                "clamav: ELF: Number of program headers: 3": 2,
                "clamav: ELF: Program header table offset: 52": 1,
                "clamav: ELF: Segment #0": 1,
                "clamav: ELF: Segment type: 0x1": 2,
                "clamav: ELF: Segment offset: 0x0": 2,
                "clamav: ELF: Segment virtual address: 0x8??????": 2,
                "clamav: ELF: Segment real size: 0xa???": 1,
                "clamav: ELF: Segment virtual size: 0xa???": 1,
                "clamav: ELF: Segment #1": 1,
                "clamav: ELF: Segment offset: 0xb???": 1,
                "clamav: ELF: Segment real size: 0x8c": 1,
                "clamav: ELF: Segment virtual size: 0x7??": 1,
                "clamav: ELF: Segment #2": 1,
                "clamav: ELF: Segment type: 0x6???????": 1,
                "clamav: ELF: Segment virtual address: 0x0": 1,
                "clamav: ELF: Segment real size: 0x0": 1,
                "clamav: ELF: Segment virtual size: 0x0": 1,
                "clamav: ELF: Entry point address: 0x08??????": 1,
                "clamav: ELF: Entry point offset: 0x000001?? (3??)": 1,
                "clamav: ELF: Number of sections: 10": 2,
                "clamav: ELF: Section header table offset: 4????": 1,
                "clamav: ELF: Section 0": 1,
                "clamav: ELF: Section offset: 0": 1,
                "clamav: ELF: Section size: 0": 1,
                "clamav: ELF: Section type: Null (no associated section)": 1,
                "clamav: ELF: Section 1": 1,
                "clamav: ELF: Section offset: 1??": 2,
                "clamav: ELF: Section size: 28": 1,
                "clamav: ELF: Section type: Program information": 7,
                "clamav: ELF: Section occupies memory": 8,
                "clamav: ELF: Section contains executable code": 3,
                "clamav: ELF: Section 2": 1,
                "clamav: ELF: Section size: 4????": 1,
                "clamav: ELF: Section 3": 1,
                "clamav: ELF: Section offset: 4????": 7,
                "clamav: ELF: Section size: 23": 1,
                "clamav: ELF: Section 4": 1,
                "clamav: ELF: Section size: 2???": 1,
                "clamav: ELF: Section 5": 1,
                "clamav: ELF: Section size: 8": 2,
                "clamav: ELF: Section contains writable data": 4,
                "clamav: ELF: Section 6": 1,
                "clamav: ELF: Section 7": 1,
                "clamav: ELF: Section size: 1??": 1,
                "clamav: ELF: Section 8": 1,
                "clamav: ELF: Section size: 1???": 1,
                "clamav: ELF: Section type: Empty section (NOBITS)": 1,
                "clamav: ELF: Section 9": 1,
                "clamav: ELF: Section size: 62": 1,
                "clamav: ELF: Section type: String table": 1,
                "clamav: in cli_elfheader": 1,
                "clamav: FP SIGNATURE: 648d7290e6631c7f12c07dcc5b55e8ea:4????:Unix.Trojan.Mirai-5??????-0": 1,
                "clamav: Unix.Trojan.Mirai-5??????-0 found": 1,
                "clamav: cli_magic_scandesc: returning 1  at line 2???": 1,
                "clamav: Unix.Trojan.Mirai-5932143-0 FOUND": 2,
                "clamav: Scanned files: 1": 1,
                "clamav: Infected files: 1": 1
            }
        }
    ]
}