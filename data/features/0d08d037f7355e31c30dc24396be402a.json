{
    "filepath": "/corpus/benign/ntbackup.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "0d08d037f7355e31c30dc24396be402a"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "fbstp %ss:-(%edi);jae -;ja -;jns - <.text>;ja -": 1,
                "fidivs -(%edi);jns - <.text+>;ja - <.text+>;inl %dx, %eax;fnsave (%edi)": 1,
                "jns - <.text+>;ja - <.text+>;inl %dx, %eax;fnsave (%edi);jge - <.text+>": 1,
                "ja  <.text+>;xorb $-, %al;ja  <.text+>;xorl %ecx, %esp;ja  <.text+>": 1,
                "ja - <.text+>;ja  <.text+>;xlatb;fnsave -(%edi);insb %dx, %es:(%edi)": 1,
                "addb %al, (%eax);addb %dl, %bh;jp  <.text+>;ja  <.text+>;jle  <.text+>": 1,
                "ja  <.text+>;pushl %edx;ja - <.text+>;incl %eax;cmpl $, %eax": 1,
                "ja - <.text+>;xchgb %dh, %cl;ja - <.text+>;jmp -;ja  <.text+>": 1,
                "popl %ebx;ja - <.text+>;popl %edi;ja  <.text+>;jo - <.text+>": 1,
                "ja - <.text+>;popal;ja - <.text+>;xchgl %ebx, %eax;ja  <.text+>": 1,
                "cmpb $-, -(%ebp);jl - <.text+>;addl $, %eax;cmpl $, -(%ebp,%ebp,);cmpb $-, (%edi,%edx,)": 1,
                "jl - <.text+>;cltd;cmpb $-, -(%esi,%ecx);jl - <.text+>;decl %edx": 1,
                "jl  <.text+>;pushl %ds;cmpb $-, (%edx,%ebp,);jl - <.text+>;decl %ecx": 1,
                "jl  <.text+>;sbbb %al, -(%eax);jl - <.text+>;cmpl $, %es:-(%ebp);cmpb $-, -(%eax,%ecx,)": 1,
                "sbbb %al, -(%eax);jl - <.text+>;cmpl $, %es:-(%ebp);cmpb $-, -(%eax,%ecx,);jl - <.text+>": 1,
                "cmpb $-, -(%ebp,%ecx);jl - <.text+>;addb %dl, -(%ecx);jl  <.text+>;orb $-, %al": 1,
                "calll -;cmpb $-, (%esi,%edx);jl  <.text+>;movl $, %ecx;cmpb $-, (%esp,%edx,)": 1,
                "jl - <.text+>;popfl;xchgb %bh, -(%eax,%ebp,);cmpb $-, (%ebx,%esi,);jl - <.text+>": 1,
                "jl - <.text+>;jno - <.text+>;jl  <.text+>;js - <.text+>;jl  <.text+>": 1,
                "incl %ebp;pushl %es;movl %ebx, (%edi);rolb %cl, -(%ebp);popl %edi": 1,
                "popl %edi;loop ;movb %bl, (%edi);popal;sbbb $, (%edi)": 1,
                "sbbb $, (%edi);testl %ebx, -(%edi);jge - <.text+>;popl %edi;cmpb $, %al": 1,
                "testl %ebx, -(%edi);cmpl %eax, -(%ebp);popl %edi;bound -(%esi), %ebp;popl %edi": 1,
                "movb (%edi), %bl;jge - <.text+>;popl %edi;orl %eax, -(%ecx);popl %edi": 1,
                "popl %edi;orl %eax, -(%ecx);popl %edi;insl %dx, %es:(%edi);xchgl %esp, %eax": 1,
                "xchgb %bl, (%edi);pushl %ebx;xchgb %bl, -(%edi);popl %esi;testl %ebx, -(%edi)": 1,
                "xchgb %bl, (%edi);popl %edx;sbbl $, -(%edi);pushl %edi;xchgb %bl, -(%edi)": 1,
                "ldsl -(%ecx), %ecx;popl %edi;jno  <.text+>;testl %ebx, (%edi);cwtl": 1,
                "sbbb $-, -(%edi);sbbb $-, -(%edi);sbbb $-, (%edi);sbbb $-, (%edi);movb %bl, (%edi)": 1,
                "decl %esp;js - <.text+>;popl %edi;pushl $;lcalll $, $": 1,
                "lock;sbbb $, (%edi);sbbl $, -(%edi);sti;movb %bl, -(%edi)": 1,
                "sbbb $, (%edi);sbbl $, -(%edi);sti;movb %bl, -(%edi);cli": 1,
                "insb %dx, %es:(%edi);sbbb $-, -(%edi);movb %bl, (%edi);decl %esi;sbbl $, (%edi)": 1,
                "popl %edi;decl %ebx;popal;testl %ebx, -(%edi);orl $, %eax": 1,
                "wait;sbbl $, (%edi);pushl $;sbbl $, -(%edi);nop": 1,
                "popl %edi;popl %esp;popl %ebx;testl %ebx, (%edi);popl %ecx": 1,
                "subb $, %al;movl %ebx, -(%edi);incl %esi;movb %bl, (%edi);xchgl %ebx, %eax": 1,
                "roll %cl, -(%eax);popl %edi;decl %esp;fiadds -(%eax);popl %edi": 1,
                "testl %ebx, (%edi);subl -(%ebp), %eax;popl %edi;wait;roll %cl, (%edi,%ebx,)": 1,
                "testl %ebx, (%edi);fildl (%edi,%ebx,);testb %bl, -(%edi);adcb %al, -(%eax);popl %edi": 1,
                "sbbl $, (%edi);cltd;sbbl $, -(%edi);cltd;sbbl $, -(%edi)": 1,
                "cltd;sbbl $, -(%edi);sbbb -(%eax), %al;popl %edi;clts": 1,
                "sbbb $, (%edi);sbbl $, -(%edi);inb $, %al;popl %edi;jno - <.text+>": 1,
                "shll (%ebx);sbbb $, (%edi);sbbb $, (%edi);sbbb $, (%edi);sbbb $, -(%edi)": 1,
                "pushl %edx;sbbl $, -(%edi);incl %esp;sbbb $, (%edi);sbbb $, (%edi)": 1,
                "sbbb $, (%edi);movl %ebx, (%edi);popl %edx;sbbl $, -(%edi);insl %dx, %es:(%edi)": 1,
                "movl %ebx, (%edi);popl %edx;sbbl $, -(%edi);insl %dx, %es:(%edi);movb %bl, (%edi)": 1,
                "popl %edi;lodsl (%esi), %eax;pushl %esi;testl %ebx, (%edi);iretl": 1,
                "subl (%ebx), %esp;incl %esi;subb (%ebx), %ah;enter $, $;ldsl (%ecx), %ebp": 1,
                "arpl %si, %ss:(%edx);das;arpl %si, -(%edx);xorb (%ebx), %ah;arpl %si, %es:(%edx)": 1,
                "movb $-, %bh;jl  <.text+>;adcb %bl, -(%edi);jl - <.text+>;scasl %es:(%edi), %eax": 1,
                "shrl -(%ecx);incl %ecx;jle - <.text+>;sahf;incl %edx": 1,
                "jle  <.text+>;movw %es, (%ecx);cmpl $, %eax;popl (%edx);popfl": 1,
                "incl %ecx;jle  <.text+>;scasl %es:(%edi), %eax;incl %edx;jle - <.text+>": 1,
                "jle - <.text+>;lcalll $, $;fldenv -(%esi);incl %edx;jle  <.text+>": 1,
                "jle - <.text+>;calll -;incl %edx;jle - <.text+>;cwtl": 1,
                "movb , %al;incl %edx;jle - <.text+>;int $;jle  <.text+>": 1,
                "incl %edx;jle  <.text+>;movb %al, ;incl %edx;jle - <.text+>": 1,
                "movl $, %eax;rolb $, %cl;popal;jle - <.text+>;decl %ebp": 1,
                "retl;decl %ebp;mulb (%esi);rorl $, (%ebp);retl": 1,
                "daa;rorl $, -(%ebp);retl $-;into;rorb $, (%ebp)": 1,
                "outl %eax, $;retl;decl %ebp;outb %al, $;retl": 1,
                "ldsl -(%ebp), %ecx;salc;retl;decl %ebp;popfl": 1,
                "retl $-;outb %al, %dx;rorb $, -(%ebp);ldsl (%ebp), %ecx;sahf": 1,
                "arpl %di, -(%eax,%eax,);decl %ebp;je  <.text+>;retl;decl %ebp": 1,
                "retl;decl %ebp;iretl;scasb %es:(%edi), %al;retl": 1,
                "addb %dl, -(%edi);jl - <.text+>;fcoms -(%eax);jl - <.text+>;pushl %esi": 1,
                "addb %ah, (%edx,%edx,);addb (%eax), %cl;addb %al, (%eax);addb %al, (%edx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, -(%ebx);pushl %es;addl %edi, (%eax);addb %al, (%ecx)": 1,
                "addl %edi, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax);calll -": 1,
                "addl %eax, (%eax);popl %es;addl %esi, (,%ebx,);popl %es;addl %ebx, (,%ebx,)": 71,
                "popl %es;addl %ebx, -;popl %esp;popl %es;addl %esp, (%ecx,%esi,)": 1,
                "pushal;popl %es;addl %edx, (%eax);popl %ebp;popl %es": 26,
                "popl %es;addl %ebp, %esp;popl %edi;popl %es;addl %esp, %eax": 4,
                "popl %edi;popl %es;addl %edx, %esp;popl %edi;popl %es": 4,
                "loopne ;popl %es;addl %edx, %esp;popl %esp;popl %es": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, %cl;movb (%esi), %al": 13,
                "jnp  <.text+>;addl %esp, %eax;andl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addl $, (%ecx);addb %al, (%eax);addb %al, (%eax);addb (%eax), %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);movsb (%esi), %es:(%edi);addl $, (%ecx);addb %al, (%eax);addb %al, (%eax)": 1,
                "jb  <.text+>;insl %dx, %es:(%edi);addb %al, %gs:(%eax);addb %al, (%eax);loopne ": 1,
                "addb %al, %gs:(%eax);addb %al, (%eax);loopne ;addl %eax, (%ecx);subb -(%ebx), %al": 1,
                "addl %eax, (%ecx);fcompl (%ebp);addl %edx, %eax;popl %ebp;popl %es": 1,
                "addl %esp, (%eax);popl %es;addl %edx, (%ebx,%eax,);popl %es;addl %ecx, (%eax)": 1,
                "pushl %esi;movb %al, (%ecx);addl %esi, (%esi);addl (%ecx), %eax;movb $-, %ah": 1,
                "addl %ebp, %esp;popl %esp;popl %es;addl %edi, (%eax,%ecx,);addl %esp, %eax": 1,
                "popl %es;addl %edi, (%eax,%ecx,);addl %esp, %eax;popl %esp;popl %es": 1,
                "bound (%edi), %eax;addl %ebp, -(%ebx);addl %eax, (%ecx);movb $-, %ah;pushl %es": 1,
                "addl %ebp, -(%ebx);addl %eax, (%ecx);movb $-, %ah;pushl %es;addl %eax, (%eax)": 1,
                "popl %es;addl %esp, -(%eax);popl %ebp;popl %es;addl %ecx, (%ebx)": 36,
                "addl %ebx, (%ecx);popl %es;addl %ebx, (%esi);pushl %esp;addb $, %al": 1,
                "pushl %esp;addb $, %al;popl %ss;pushl %esp;addb $, %al": 70,
                "decl %edx;popl %es;addl %edx, %ecx;leal (%ecx), %eax;addl %ebp, (%esi)": 1,
                "leal (%ecx), %eax;addl %ebp, (%esi);addb %ch, (%esi);addb %ch, (%esi);addb %al, (%eax)": 1,
                "sahf;cmpsb %es:(%edi), (%esi);pushl %es;addl %edx, (%eax);subb $, %al": 1,
                "xchgl %ebp, %eax;addl %eax, (%ecx);popl %ss;pushl %esp;addb $, %al": 1,
                "addb %al, (%eax);addb %bl, (%esi);subl $, %eax;addl %eax, (%ecx);fimull (%ecx)": 1,
                "popl %es;addl %esp, (%ecx);addl %eax, (%eax);addb %al, (%eax);addl (%eax), %eax": 1,
                "addb %al, (%ebx);addb %al, (%eax);int $;addb %al, (%eax);int $": 1,
                "int $;addb %al, (%eax);orb $, %al;addb %al, (%eax);movl $, %esi": 1,
                "addb %al, %cs:(%ecx);testb $, %al;addl %eax, (%ecx);fimull (%ecx);addl %ebx, %edi": 1,
                "addl %eax, (%ecx);fimull (%ecx);addl %ebx, %edi;movb %al, ;pushl %es": 1,
                "popl %es;addl %eax, (%esi,%ebx,);addb $, %al;popl %ss;pushl %esp": 1,
                "cmpb %al, (%ecx);addl %ebx, %edx;decl %ecx;popl %es;addl %ecx, -": 1,
                "movsb (%esi), %es:(%edi);addl %eax, (%ecx);sbbl (%ecx,%eax), %esp;addl %esi, (%ebx);movsb (%esi), %es:(%edi)": 1,
                "sahf;cmpsb %es:(%edi), (%esi);pushl %es;addl %edi, (%eax);addb %al, (%ecx)": 1,
                "popl %es;addl %esi, (%ebp);pushl %esp;addb $, %al;popl %ss": 2,
                "cmpsl %es:(%edi), (%esi);addl %eax, (%ecx);adcl %eax, (%ecx);addb %al, (%eax);orl %eax, (%eax)": 1,
                "addb $, %al;addb %al, (%eax);addb $, %al;addb %al, (%eax);orb $, %al": 1,
                "addb %al, (%eax);addl %ebp, (%ecx,%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %edi, (%ebp,%ebx,);addl %esi, %eax;lodsb (%esi), %al;addl %eax, (%ecx);movl $, %ebp": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax)": 15,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %al, (%eax);andb (%eax), %dh": 1,
                "addb %al, (%eax);addb %cl, (%eax,%eax);addb %al, (%eax);andb (%eax), %dh;addb %al, (%eax)": 1,
                "addl %eax, (%ecx);adcl %eax, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);adcl $, %eax;adcb %al, (%eax)": 1,
                "addb %al, (%eax);movb %al, ;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%esi);pushl %esp": 1,
                "andb $, %al;andb $, %al;andb $, %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ch, (%edi);addl (%ecx), %eax;adcl %eax, (%ecx);addb %al, (%eax);addl %eax, (%eax)": 2,
                "addl %eax, (%eax);addb %al, (%eax);addb , %al;addb %al, (%eax);orb $, %al": 4,
                "addb %al, (%eax);orb $, %al;addb %al, (%eax);retl;movl $, %edi": 2,
                "decl %esi;popl %es;addl %edi, (%ebp,%ebx,);addl %eax, (%ebx);roll $, (%ecx)": 2,
                "addb %al, (%eax);xorl %eax, (%eax);addb %al, (%eax);adcl $, %eax;addl %eax, (%eax)": 1,
                "inl $, %eax;addl %eax, (%edi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dl, (%edi);addb %al, (%eax);addb %ch, (%ebx)": 1,
                "outl %eax, $;addl %eax, (%ebx);addb (%eax), %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%eax);addb %al, (%eax);addb %al, (%ebx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl (%ecx), %eax;movb $-, %ah;pushl %es;addl %edx, (%ebx,%edi);addl %eax, (%ecx)": 1,
                "addl (%eax), %eax;addb %al, (%eax);orb $, %al;addb %al, (%eax);addl %edx, %ebp": 1,
                "addl %ecx, (%eax);popl %ebp;popl %es;addl %edi, -(%ecx);jno  <.text+>": 1,
                "outb %al, %dx;addl %eax, ;addl %edx, (%ecx);movl $, %ebp;addb %al, (%eax)": 2,
                "addl %eax, (%ecx);decl %esp;pushal;popl %es;addl %ecx, (%ebx)": 1,
                "orl $, ;addb %al, (%eax);cmpb $, %al;addb %bh, %ds:(%edx);addb %ah, (%edx)": 1,
                "addb %al, (%eax);addb %bh, (%eax);addl %eax, (%ecx);decl %esp;pushal": 1,
                "addl %edi, -(%ebp);jno  <.text+>;addl %ebp, (%eax);pushal;popl %es": 1,
                "addb %al, (%eax,%eax);addb %dh, (%ebx);imull $, (%eax), %eax;addb %al, (%esi);imull $, (%eax), %eax": 1,
                "outsl (%esi), %dx;addb %ah, (%esi);je  <.text+>;popl %esp;addb %cl, (%esi)": 6,
                "jb  <.text+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl %esp;addb %ch, (%edi);incl %edx;addb %ah, (%ecx);arpl %ax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ah, (%ebp);js  <.text+>;jo  <.text+>": 1,
                "jb  <.text+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %ah, (%ebp);js  <.text+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, (%ecx);addl %eax, (%eax)": 4,
                "aas;andb $, %al;addl %edx, (%ecx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "incl %ebx;addb %al, (%ecx);sarb -;addb $, %al;subl $, %eax": 1,
                "sarb -;addb $, %al;subl $, %eax;cmpsb %es:(%edi), (%esi);pushl %es": 1,
                "jns  <.text+>;jae  <.text+>;je  <.text+>;addb %ch, %gs:(%ebp);popl %esp": 4,
                "decl %eax;addb %al, (%ecx);inb $, %al;addb %al, (%ecx);cld": 1,
                "orb $, (%eax);pushl %esp;decl %eax;addb %al, (%ecx);cmpb %cl, (%eax)": 1,
                "addb %al, (%ecx);incl %esp;addb %ah, (%ecx);je  <.text+>;popal": 1,
                "addb %ch, (%ebp);addb %dh, %gs:(%eax,%eax);addb %dh, (%edx);jae  <.text+>;popl %esp": 1,
                "imull $, (%eax), %eax;jae  <.text+>;andb %al, (%eax);jo  <.text+>;popal": 1,
                "popal;addb %ah, (%ebx);imull $, (%eax), %eax;addb %dh, (%eax);andb %al, (%eax)": 6,
                "addb %dh, (%ebx);addb %dl, %gs:(%eax);popal;addb %dh, (%eax,%eax);addb %al, (%eax)": 2,
                "addb %dh, (%eax,%eax);addb %ah, (%edx);popal;addb %dh, (%ebx);addb %cl, %gs:(%esi)": 1,
                "addb %ah, (%edx);popal;addb %dh, (%ebx);addb %cl, %gs:(%esi);popal": 1,
                "pushl %esp;addb %ah, (%ebp);insl %dx, %es:(%edi);addb %dh, (%eax);incl %esp": 1,
                "jae  <.text+>;je  <.text+>;addb %ch, %gs:(%ebp);incl %esp;addb %ch, (%ecx)": 1,
                "addb %al, (%edx);decl %esp;addb %ch, (%edi);addb %al, (%si);imull $, (%eax), %eax": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);jns  <.text+>;addb %al, (%eax);incl %ebx": 1,
                "outsb (%esi), %dx;addb %al, (%eax);addb %dl, (%ebx);jns  <.text+>;jae  <.text+>": 1,
                "outsl (%esi), %dx;jb  <.text+>;pushl %ebx;je  <.text+>;imull $, (%edx), %esi": 1,
                "pushl %ebx;je  <.text+>;imull $, (%edx), %esi;jns  <.text+>;addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);addb %al, (%eax);addb %cl, (%esi);incl %esi;jb  <.text+>": 1,
                "incl %ecx;jo  <.text+>;incl %esp;jae  <.text+>;jb  <.text+>": 1,
                "addb %ch, (%esi);je  <.text+>;addb %dh, (%edx);jae  <.text+>;popal": 1,
                "popal;addb %dh, (%eax);imull $, (%eax), %eax;insb %dx, %es:(%edi);addb %ch, (%eax,%eax)": 1,
                "je  <.text+>;pushl %ebx;addb %dh, (%eax,%eax);addb %ch, (%ecx);outsb (%esi), %dx": 1,
                "pushl %ebx;addb %dh, (%eax,%eax);addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%edi)": 1,
                "addb %ah, (%edi);jae  <.text+>;andb %al, (%eax);addb %ah, (%ecx);imull $, (%eax), %eax": 1,
                "andb %al, (%eax);jb  <.text+>;addb %ah, %gs:(%ecx);jae  <.text+>;outsl (%esi), %dx": 1,
                "jae  <.text+>;outsl (%esi), %dx;addb %ch, (%esi);andb %al, (%eax);andl $, %eax": 1,
                "addb %dh, (%ecx);addb %al, (%eax);addb %ch, (%edx);cmpl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, (%eax);addb %al, (%eax);addb %dl, %al;cmpl $, %eax": 1,
                "outb %al, %dx;addl %eax, ;addl %edi, (%edi);addb %bh, (%edx);addb %bl, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %bh, %ds:(%eax,%eax);addb %al, (%eax);addb %al, (%eax);incl %ebx": 1,
                "addb %bh, %ds:(%eax,%eax);addb %al, (%eax);addb %al, (%eax);incl %ebx;addb %al, (%eax)": 1,
                "addb %al, (%eax);andb %al, (%eax);andb %al, (%eax);andb %al, (%eax);andb %al, (%eax)": 2,
                "addb %ch, (%bx,%di);jae  <.text+>;je  <.text+>;jb  <.text+>;popal": 1,
                "popal;addb %dh, (%eax,%eax);addb %ah, (%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx)": 1,
                "addb %ch, (%eax,%eax);addb %ah, (%eax);addb %ah, ;addb %dh, (%ebx);andb %al, (%eax)": 1,
                "jae  <.text+>;addl %eax, (%edx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "decl %edi;addb %al, (%ecx);sarb (%esi);addl %eax, (%ecx);fcomps (%esi)": 1,
                "addb %dl, (%ecx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %dh": 1,
                "addb %al, (%eax);wait;incl (%eax);addb %dh, -(%ebx);sldtw (%eax)": 1,
                "addb %al, (%eax);addb %cl, %cl;movb (%esi), %al;addl %esp, (%eax);pushl %ecx": 1,
                "addb $, %al;ja - <.text+>;addb (%ecx), %al;inb %dx, %al;popl %esp": 1,
                "addb %ah, (%eax);addb %al, (%eax);addb %bh, %bh;incl (%eax);addb %ah, %dh": 1,
                "jo  <.text+>;outsl (%esi), %dx;arpl %ax, (%eax);addb %ch, (%eax,%eax,);addl %eax, (%ecx)": 1,
                "pushl %es;addl %edi, %esp;popl %es;addl %esi, %eax;popl %es": 1,
                "addl %ebp, %esp;pushl $;popl %es;addl %esi, (%esi,%ebx,);popl %es": 5,
                "addl %esp, -(%ebx);testl %eax, (%edx);addl %edi, (%eax,%ebp,);popl %es;addl %esp, -(%eax,%ebp,)": 1,
                "testl %eax, (%edx);addl %edi, (%eax,%ebp,);popl %es;addl %esp, -(%eax,%ebp,);addb (%ecx), %al": 1,
                "popl %es;addl %ebx, (%eax,%ebp,);addl %edx, (%eax);popl %es;addl %eax, (%eax,%ebp,)": 1,
                "xrelease;xchgl %ebp, %eax;addb (%ecx), %al;int;pushl %ebp": 1,
                "addb %al, (%ebx);movb , %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %es;addl %esp, (%eax);pushl $;incl %ebx;addb %cl, (%edi)": 1,
                "xorb %al, (%eax);aas;addb %al, (%eax);addb %al, (%eax);addb %bl, (%edi)": 1,
                "incl %esp;addb %al, (%eax,%eax);addb %al, (%eax);addb %al, (%edx);outsl (%esi), %dx": 1,
                "addb %ah, %gs:(%ecx);andb %al, (%eax);addb %ah, %fs:(%ecx);je  <.text+>;popal": 1,
                "decl %esp;addb %dl, (%eax,%eax);addb %al, (%eax);addb %ch, (%esi);addb %cl, (%eax,%eax)": 1,
                "pushl %ebx;je  <.text+>;jae  <.text+>;outsl (%esi), %dx;jb  <.text+>": 1,
                "outsl (%esi), %dx;jb  <.text+>;pushl %eax;outsl (%esi), %dx;imull $, (%esi), %ebp": 1,
                "je  <.text+>;addb %ah, %cs:(%eax,%eax);addb %ch, (%eax,%eax);addb %al, (%eax);addb %ah, (%edx)": 1,
                "addb %ch, ;addb %dh, (%ebx);addb %ah, (%eax);addb %cl, (%eax,%eax);addb %cl, (%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ah, ;addb %al, (%eax);addb %bh, %bh": 1,
                "addb %al, (%eax);addb %dh, (%eax,%eax);addb %bh, (%eax);addb %al, (%eax);addb %dh, (%eax,%eax)": 1,
                "addb %dh, (%eax,%eax);addb %bh, (%edx);xorb %al, (%eax);xorb (%eax), %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);jno  <.text+>;jne  <.text+>;popal;addb %ch, (%esi)": 1,
                "addb %ah, ;addb %ah, ;addb %ch, (%eax,%eax);andl $, %eax;addb %ah, ": 2,
                "andl $, %eax;addb %ah, ;addb %ah, ;addb %ah, ;addb %ah, ": 2,
                "popal;addb %ch, (%ecx);jb  <.text+>;popl %esp;addb %dl, (%edx)": 1,
                "jb  <.text+>;popl %esp;addb %dl, (%edx);addb %ah, %gs:(%edi);incl %edx": 1,
                "addb %ah, (%ecx);jae  <.text+>;jb  <.text+>;addb %dh, %cs:(%ebx);imull $, (%eax), %eax": 2,
                "jae  <.text+>;je  <.text+>;addb %al, (%eax);popal;addb %dh, (%ebx)": 1,
                "addb %al, (%eax);adcl %eax, (%ecx);addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);inl %dx, %eax;sldtw (%eax);inl %dx, %eax;sldtw (%eax)": 1,
                "addl %eax, (%eax,%esi,);addl (%ecx), %eax;movb $-, %ah;pushl %es;addl %eax, (%eax)": 1,
                "popl %es;addl %ebx, (%esi,%ebx,);popl %es;addl %eax, -(%esi,%ebx,);addl (%ecx), %eax": 5,
                "popl %es;addl %edi, (%ebp,%ebx,);addl %esp, -(%edi);addl (%ecx), %eax;movl $, %ebp": 1,
                "addl %edi, (%ebp,%ebx,);addl %esp, -(%edi);addl (%ecx), %eax;movl $, %ebp;jno  <.text+>": 1,
                "addl %eax, (,%ebx,);popl %es;addl %edx, -(%esi);popl %esp;popl %es": 1,
                "addb %al, (%eax);sahf;cmpsb %es:(%edi), (%esi);pushl %es;addl %esi, %eax": 1,
                "addl %eax, (%ecx);fimull (%ecx);addl %edx, -(%edi);cmpsb %es:(%edi), (%esi);pushl %es": 1,
                "addb %al, (%eax);sahf;cmpsb %es:(%edi), (%esi);pushl %es;addl %eax, %eax": 1,
                "addl %esp, %eax;incl %ebx;addl %eax, (%ecx);daa;movl $, %ebx": 1,
                "daa;movl $, %ebx;addl (%ecx), %eax;jp - <.text+>;addl (%ecx), %eax": 1,
                "addb %dh, (%eax);addb %ch, %gs:(%esi);popl %esp;addb %al, (%ebx);outsl (%esi), %dx": 1,
                "incl %esi;imull $, (%ebp), %ebp;incl %esp;insb %dx, %es:(%edi);addb %al, (%bx,%si)": 1,
                "pushl %es;addb %al, (%eax);addb %al, (%eax);jns - <.text+>;addl (%ecx), %eax": 1,
                "addb %al, (%eax);lesl %ss:(%ebx), %eax;addl %ecx, (%eax);addb %al, (%ecx);incl %ebx": 1,
                "addl %ebp, -(%eax);popl %esi;popl %es;addl %edx, -(%eax);popl %esi": 8,
                "imull $, (%edi), %eax;rcrb (%ebp);addl %edi, %esp;pushl $;addl %edi, -(%eax)": 8,
                "addl %edi, %esp;pushl $;addl %edi, -(%eax);popl %ebp;popl %es": 8,
                "popl %ebp;popl %es;addl %esp, %esp;pushl $;addl %ebx, %eax": 8,
                "popl %es;addl %ebx, -(%eax);popl %ebp;popl %es;addl %edx, (%ebx,%ebp,)": 2,
                "addl %ebx, -(%eax);popl %ebp;popl %es;addl %edx, (%ebx,%ebp,);popl %es": 2,
                "addl (%ecx), %eax;sbbb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);pushl %cs;addb %al, (%eax);addb %ah, -(%ebp);addl (%ecx), %eax": 1,
                "jb  <.text+>;pushl %esp;popal;bound (%ebx), %eax;imull $, (%esp), %ebp": 1,
                "movl %eax, ;int;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax);addb %al, (%eax);addb %bh, %dh": 2,
                "addb %cl, (%eax);addb %al, (%eax);addb %bh, %dh;pushl %es;addb $, %al": 2,
                "addb %al, (%eax);addb %bh, %dh;pushl %es;addb $, %al;addb %al, (%eax)": 2,
                "popl %esi;popl %es;addl %ebp, (%esi,%ebx,);addl %esp, (%eax);popl %es": 2,
                "retl;addl (%ecx), %eax;addb %al, (%eax);addb %al, (%eax);addl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%ebx);addb %al, (%eax);addb %ah, %ah;addb $, %al": 1,
                "addb %al, (%eax);movl %ebp, %ebp;addl (%ecx), %eax;popl %es;addb %al, (%eax)": 1,
                "addl %eax, (%ecx);sbbl %ebp, %esp;addl (%ecx), %eax;popl %esp;outb %al, %dx": 1,
                "addb %ch, %cs:(%edx);outsl (%esi), %dx;addb %ah, (%edx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);incl %esp;incl %eax": 1,
                "addb %al, (%eax);incl %esp;incl %eax;das;addb %ch, (%ebp)": 1,
                "je  <.text+>;imull $, (%eax), %eax;addb %al, (%eax);das;addb %ch, (%ebp)": 1,
                "pushl %es;addb $, %al;hlt;popl %ebp;popl %es": 1,
                "addl %ebp, (%edx,%ebp,);addl %ebx, -(%esi,%eax);orl (%ecx), %eax;pushal;pushl $": 1,
                "addb %al, (%eax);addb %bh, %dh;incl (%eax);addb %ah, (%edi);addl $, (%eax)": 1,
                "addb %bl, (%ebx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %bh": 1,
                "popl %es;addl %edi, (%edx);popl %esi;popl %es;addl %ebp, (%esi,%ebx,)": 1,
                "jg  <.text+>;addl %edx, (%esi);andb (%ecx,%eax), %al;sbbb %dl, (%eax);addb $, %al": 4,
                "addb %ah, ;addb %al, (%eax);addb %al, (%eax);addl %eax, (%ecx);subb $, %al": 1,
                "addl %esp, (%ecx);pushl %ebx;addb $, %al;xorl $, (%edi);addl %edx, (%esi)": 2,
                "pushl %ds;addb $, %al;sbbb $, %al;addl %eax, (%eax);addb %al, (%eax)": 2,
                "addb $, %al;popl %ss;pushl %esp;addb $, %al;popl %ss": 36,
                "fistpll (%edi);addl %esp, %ecx;addl %ebp, %edx;addl %edi, %esi;addl %ebx, %edi": 4,
                "addl %edx, (%esi);andb (%ecx,%eax), %al;sbbb %dl, (%eax);addb $, %al;movl $, %ebx": 3,
                "pushl %esp;addb $, %al;andb %dl, (%esp,%eax);decl %esp;adcb (%ecx,%eax), %al": 26,
                "addb $, %al;leal (%esp,%eax), %edx;lcalll $, $;addl %eax, %edx;jns  <.text+>": 1,
                "addl %ebx, %esp;jns  <.text+>;addl %edi, %ecx;jns  <.text+>;addl %esp, -(%ebp)": 4,
                "addb $, %al;subb (%ebx), %dl;addl %esi, (%ebx);addb $, %al;adcb %dl, (%edx)": 2,
                "sbbb $, %al;addl %eax, (%ecx);fcoms (%edi);addl %ecx, (%esi);addb $, %al": 1,
                "jg  <.text+>;addl %ecx, (%edi);adcb %al, (%ecx,%eax);movb $, %ch;addb $, %al": 1,
                "andb %cl, (%eax);decl %esi;addb %ah, (%ebp);imull $, (%eax), %eax;addb %al, (%eax)": 1,
                "fistpll (%edi);addl %ebx, %edi;jg  <.text+>;addl %edi, (%esi);subl $, %eax": 9,
                "jg  <.text+>;addl %edx, (%edi);pushl %esp;addb $, %al;sbbl %edx, (%esp,%eax)": 16,
                "addl %ebp, (%eax);addb $, %al;testl %esi, (%ecx);addl %ebx, -(%edi);pushl %esp": 15,
                "testl %esi, (%ecx);addl %ebx, -(%edi);pushl %esp;addb $, %al;xorb $, %al": 13,
                "lodsb (%esi), %al;testl %eax, (%edx);addl %ecx, -(%edi);adcl $, %eax;addl %eax, (%ecx)": 16,
                "addl %ecx, -(%edi);adcl $, %eax;addl %eax, (%ecx);jae  <.text+>;addl %esi, -(%edx)": 1,
                "addb $, %al;addb $, %al;pushl %ds;bound (%ecx,%eax), %eax;popl %ss": 3,
                "pushl %ebp;addb $, %al;lesl (%ebp), %eax;addb $, %al;adcb $, %al": 3,
                "je  <.text+>;addl %ebx, %edi;jg  <.text+>;addl %ecx, (%ecx);addb $, %al": 1,
                "addb $, %al;pushl %ebp;addb $, %al;pushl %cs;xchgl %ebx, %eax": 1,
                "adcb (%ecx,%eax), %al;adcb $, %al;addl %ebx, (%esi);jae  <.text+>;addl %ecx, (%eax)": 1,
                "addb $, %al;popl %ebx;popl %eax;addb $, %al;lcalll $, $": 1,
                "addl %esp, -(%ebp);pushl %esp;addb $, %al;lock;popl %ss": 1,
                "addl %ebx, %edi;jg  <.text+>;addl %ebx, %edi;jg  <.text+>;addl %edi, (%edi)": 1,
                "jg  <.text+>;addl %edi, (%edi);addb $, %al;incl %edx;adcl $, %eax": 1,
                "jg  <.text+>;addl %ebp, (%ecx);jno  <.text+>;addl %esi, (%ecx,%esi,);addb $, %al": 2,
                "addl %eax, (%ecx);cld;movw (%ecx,%eax), %es;movb $, %dl;addb $, %al": 2,
                "jne  <.text+>;addl %ebp, -(%ebx);jne  <.text+>;addl %edx, %eax;jne  <.text+>": 2,
                "jbe  <.text+>;addl %esp, (%ecx);jbe  <.text+>;addl %edi, (%edi);popl %ss": 2,
                "addl %esp, (%ecx);jbe  <.text+>;addl %edi, (%edi);popl %ss;addb $, %al": 2,
                "addb $, %al;adcb %dl, (%edx);addl %edx, %edi;addl %edx, %edi;addl %esp, (%ecx)": 1,
                "testl %eax, (%edx);addl %ecx, -(%edi);adcl $, %eax;addl %eax, (%ecx);andb (%edi), %cl": 1,
                "addl %eax, (%ecx);andb (%edi), %cl;addb $, %al;ldsl (%edi), %ecx;addb $, %al": 2,
                "andl $, %eax;lahf;addb $, %al;addl %esp, (%esi);addb $, %al": 1,
                "pushl %ebp;addb $, %al;popl %ss;movl , %eax;addb $, %al": 2,
                "addb $, %al;pushl %edi;das;addb $, %al;lodsb (%esi), %al": 1,
                "pushl %edi;das;addb $, %al;lodsb (%esi), %al;testl %eax, (%edx)": 1,
                "addb $, %al;fistpll (%edi);addl %ebx, %edi;jg  <.text+>;addl %esp, %ecx": 4,
                "addl %edi, (%esi);addb $, %al;movl (%ebx), %ebp;addb $, %al;cwtl": 1,
                "cwtl;subl (%ecx,%eax), %eax;cmpl %esp, (%edx);addb $, %al;popl %eax": 1,
                "jno  <.text+>;addb $, %al;outsl (%esi), %dx;xorb (%ecx,%eax), %al;subl %esi, (%ecx)": 1,
                "adcl $, %eax;addl %eax, (%ecx);xorb (%esp,%eax), %ah;addl %eax, %ebp;addl %ecx, %esi": 1,
                "jg  <.text+>;addl %edi, (%esi);andb (%ecx,%eax), %al;sbbb %dl, (%eax);addb $, %al": 1,
                "addb $, %al;addb $, %es:(%ecx,%eax);addb $, (%ecx,%eax);addb $-, (%ecx,%eax);pushl %esp": 1,
                "addb $-, (%ecx,%eax);pushl %esp;addb $, %al;fistpll (%edi);addl %ebp, (%ebp,%eax,)": 1,
                "adcb $, %al;addl %eax, %esp;addl $, (%ecx,%eax);pushl %esp;addb $, %al": 2,
                "movl $, %edi;adcb (%ecx,%eax), %al;adcb $, %al;addl %ebx, %edi;jg  <.text+>": 1,
                "addl %esp, %ecx;addl %ebp, %edx;addl %ebx, %edi;jg  <.text+>;addl %edx, (%edi)": 3,
                "incl %ebp;addb $, %al;jb  <.text+>;addb $, %al;subl (%ebp), %ebp": 1,
                "addl %ebx, %edi;jg  <.text+>;addl %esp, %ebp;incl %edi;addb $, %al": 1,
                "pushl %ebx;addb $, %al;pushl %edx;addl %eax, (%ecx);jbe - <.text+>": 1,
                "subb %al, (%ecx,%eax);lodsb (%esi), %al;testl %eax, (%edx);addl %ecx, %eax;pushl %edx": 1,
                "pushl %edx;addl %eax, (%ecx);retl $;addl %ebx, (%ebx,%edx,);addl %eax, (%ecx)": 1,
                "pushl %edx;addb $, %al;fistpll (%edi);addl %ecx, (%ecx);addb $, %al": 1,
                "enter $, $;pushl %ds;adcb (%ecx,%eax), %al;adcb $, %al;addl %esi, %esi": 1,
                "addl %eax, (%esp,%ecx,);addl %esp, (%ecx);pushl %ebx;addb $, %al;cmpsb %es:(%edi), (%esi)": 1,
                "orb %al, (%eax);addb %al, (%eax);orl (%eax), %eax;addb %al, (%eax);subb (%eax), %al": 1,
                "addb %ah, %cs:(%ebp);jb  <.text+>;jb  <.text+>;addb %al, (%eax);orl $, %eax": 1,
                "jb  <.text+>;addb %al, (%eax);orl $, %eax;addb %ah, ;addb %ch, (%eax)": 1,
                "jne  <.text+>;andb %al, (%eax);andl $, %eax;addb %ch, (%eax);jne  <.text+>": 1,
                "addb %al, (%eax);addb %al, (%eax);das;addb %al, (%ecx);addb %al, (%eax)": 1,
                "das;addb %dl, (%eax,%eax);addb %al, (%eax);addb %ch, (%edi);addb %dl, (%eax)": 1,
                "addb %ch, (%edi);addb %dl, (%esi);addb %al, (%eax);addb %al, (%eax);das": 1,
                "addb %dl, (%esi);cmpb (%eax), %al;decl %esi;addb %cl, (%edi);andb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);das;addb %dl, (%ebp);decl %ebp": 1,
                "addb %cl, (%edx);addb %al, (%eax);addb %al, (%eax);das;addb %cl, (%edx)": 1,
                "addb %ah, (%ebx);outsl (%esi), %dx;addb %ch, (%ebp);insl %dx, %es:(%edi);addb %ah, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ch, ;addb %al, (%eax);addb %ch, (%edi)": 1,
                "addb %ch, (%edi);addb %bh, (%edi);addb %al, (%eax);addb %al, (%eax);addb %ah, ": 1,
                "jae  <.text+>;jb  <.text+>;addb %dh, %cs:(%ebx);imull $, (%eax), %eax;ja  <.text+>": 1,
                "addb %dl, (%edx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);sbbl %eax, (%eax);addb %al, (%eax);imull $, %ecx, %esp;addl %esp, (%ebp)": 1,
                "addl %esp, (%ebp);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %esi, (%esi);addl (%ecx), %eax;movb $-, %ah;pushl %es;addl %edx, -(%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%edx);addb %al, (%eax);addb %dl, %cl": 1,
                "addl %edi, -(%eax);addb %al, (%ecx);pushal;pushl %esp;addl %eax, (%ecx)": 1,
                "addl %eax, -(%esi,%ebx,);addb $, %al;js  <.text+>;popl %es;addl %ebp, (%esi,%ebx,)": 2,
                "addl %eax, (,%ebx,);popl %es;addl %edx, -(%ecx);addb $, %al;inb %dx, %al": 2,
                "addl %esi, %eax;insl %dx, %es:(%edi);popl %es;addl %esp, %esp;insl %dx, %es:(%edi)": 8,
                "addb %al, (%eax);pushl %cs;addb %al, (%eax);addb %dh, (%edx);addl %eax, (%eax)": 1,
                "inl $, %eax;addl %edx, (%ecx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %es;addl %esp, -(%eax);outsb (%esi), %dx;popl %es;addl %ecx, (%eax)": 1,
                "imull $, (%eax), %eax;andb %al, (%eax);andb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (%eax,%eax);addb %ch, (%esi);je  <.text+>;imull $, (%eax), %eax;addb %dh, %gs:(%edx)": 1,
                "addb %ch, (%esi);je  <.text+>;imull $, (%eax), %eax;addb %dh, %gs:(%edx);addb %al, (%eax)": 1,
                "andl $, %eax;addb %ah, (%eax);addb %cl, (%ecx);addb %ah, %fs:(%eax);addb %ah, ": 1,
                "incl %ecx;addb %ch, (%eax,%eax);addb %dh, (%edx);je  <.text+>;addb %al, (%eax)": 2,
                "addb %al, (%eax);andb $, %al;addl %eax, (%ecx);movl $, %ecx;loopne ": 1,
                "addl %ecx, (%eax,%eax);popl %es;addl %edx, %esp;popl %esp;popl %es": 1,
                "addb %cl, (%ecx);addb %al, (%eax);addb %dl, %ch;addl , %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ch, (%edi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, (%edx);addl $, %eax": 1,
                "addb %al, (%eax);addb %bh, (%edx);addl $, %eax;addl %eax, (%eax);addb %al, (%eax)": 1,
                "popl %es;addl %edx, (%edi);addl %esp, (%edx);popal;addb %ah, (%ebx)": 1,
                "addb %al, (%eax);addb %ch, (%esi);je  <.text+>;bound (%eax), %eax;popal": 1,
                "insb %dx, %es:(%edi);addb %ah, (%ebp);jae  <.text+>;addb %al, (%eax);andl $, %eax": 1,
                "incl %edx;addb %dl, (%ebp);incl %edi;addb %al, (%eax);addb %dh, (%edi)": 1,
                "addb %al, (%eax);popal;addb %al, (%eax);addb %cl, (%edx);addb %ch, ": 1,
                "addb $, (%eax);orb $, %al;addb %al, (%eax);adcl $, %eax;addl %eax, (%eax)": 1,
                "popl %ds;addb $, (%eax);orb $, %al;addb %al, (%eax);lesl (%eax), %ebx": 1,
                "addb $, (%eax);orb $, %al;addb %al, (%eax);lesl (%eax), %ebx;addl $, %eax": 1,
                "addb %al, (%eax);lesl (%eax), %ebx;addl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "andl %eax, (%eax);addb %al, (%eax);inb $, %al;addl $, %eax;addb %al, (%eax)": 1,
                "addl %edx, (%edi);addl %ebp, (%eax);addb (%eax), %al;addb %bh, %bh;incl (%eax)": 1,
                "addb %cl, (%ecx);addb %al, (%eax);addb %cl, %dl;incl %ebx;addl $, %eax": 1,
                "decl %eax;addl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "cmpb %al, (%ebp);addl %edx, (%ecx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "fisttpl (%ecx);addl %edx, (%ecx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "scasl %es:(%edi), %eax;incl %esi;addl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%ecx);calll -;addb %al, (%eax)": 1,
                "addb %bh, %bh;addb $, (%eax);fldl (%eax);addb %al, (%eax);xchgl %esi, %eax": 1,
                "addb %cl, (%edx);addb %al, (%eax);addb %al, (%ebx);addb $, %al;addb %al, (%eax)": 1,
                "addb %bh, (%ecx);addb $, %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "subb , %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, -(%ebp);addb %al, (%eax);incl %ebp;loope ": 1,
                "addb %al, -(%ebp);addb %al, (%eax);incl %ebp;loope ;addb %cl, (%eax,%eax)": 1,
                "addb %cl, (%edx);addb %al, (%eax);addb %ah, (%edx);addl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dh, %ah;aas;addl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, %bh;addl $, %eax;addl %eax, (%ebx);popal": 1,
                "popl %es;addl %ebp, (%ecx);addl %esp, (%eax);popl %es;addl %ebx, %esp": 1,
                "popl %es;addl %eax, (%eax);addb %al, (%eax);addb %cl, (%edi,%edx,);popl %es": 1,
                "addl %edi, %edi;decl %edi;addl $, %eax;addl %ecx, %esi;jno  <.text+>": 1,
                "popl %es;addl %ecx, (%edx);addl $, %eax;addl %esi, (%edi,%ebx,);addl %ecx, (%ecx)": 1,
                "jo  <.text+>;outsl (%esi), %dx;addb %dh, (%edx);je  <.text+>;addb %ah, %gs:(%eax,%eax)": 1,
                "jbe  <.text+>;addb %ch, %gs:(%esi);je  <.text+>;decl %ebp;addb %ah, (%ebp)": 1,
                "jae  <.text+>;popl %esp;addb %al, (%ebp);jbe  <.text+>;addb %ch, %gs:(%esi)": 2,
                "outsl (%esi), %dx;addb %ah, (%esi);je  <.text+>;popl %esp;addb %dl, (%edi)": 3,
                "addb %ch, (%ecx);insb %dx, %es:(%edi);addb %ah, (%ebp);decl %ebp;addb %ah, (%ecx)": 1,
                "addb %dh, (%edx);addb %bl, %gs:(%eax,%eax);addb %ch, (%ecx);arpl %ax, (%eax);jb  <.text+>": 1,
                "addb %al, (%eax);pushl %edx;addb %ah, (%ebp);jae  <.text+>;je  <.text+>": 5,
                "outsl (%esi), %dx;addb %dh, (%edx);addb %ah, %gs:(%eax);addb %dh, (%ebx);jo  <.text+>": 1,
                "addb %dh, (%eax);addb %ah, %gs:(%eax);addb %al, (%ebx);popal;addb %dh, (%eax,%eax)": 1,
                "je  <.text+>;andb %al, (%eax);pushl %esp;addb %ah, (%ecx);jo  <.text+>": 2,
                "addb %dh, (%ebp);addb %ah, %fs:(%ebp);andb %al, (%eax);pushl %ebx;addb %dh, (%ebp)": 1,
                "jb  <.text+>;jbe  <.text+>;imull $, (%eax), %eax;jae  <.text+>;andb %al, (%eax)": 1,
                "addb %ah, (%ecx);je  <.text+>;popal;addb %ch, (%eax,%eax);addb %ah, (%edi)": 2,
                "arpl %ax, (%eax);imull $, (%eax), %eax;addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax)": 4,
                "pushl %ebp;addb %dh, (%ebx);addb %ah, %gs:(%eax);addb %dl, (%eax);popal": 1,
                "addb %dh, (%ebx);addb %dh, %gs:(%edx);andb %al, (%eax);decl %ecx;addb %ch, (%esi)": 1,
                "addb %ch, (%edi);addb %ah, (%bx,%si);addb %dh, (%ebx);addb %dh, %gs:(%ebx);jae  <.text+>": 1,
                "jae  <.text+>;imull $, (%eax), %eax;addb %al, (%eax);decl %esp;addb %ch, (%edi)": 1,
                "addb %al, (%eax);decl %esp;addb %ch, (%edi);addb %ah, (%bx,%si);addb %cl, (%ebp)": 1,
                "addb %ch, (%ecx);jbe  <.text+>;addb %ah, %gs:(%eax);addb %dl, (%ebx);addb %dh, %gs:(%eax,%eax)": 1,
                "addb %dh, (%edx);addb %al, %gs:(%eax);addb %al, (%eax);addb %dl, (%eax,%eax);addb %dh, (%eax)": 1,
                "addb %dh, (%eax);andb %al, (%eax);decl %esi;addb %dl, (%ebx);pushl %ebx": 1,
                "popal;addb %dh, (%ebx);andb %al, (%eax);incl %esp;addb %ch, (%edi)": 1,
                "arpl %ax, (%eax);popal;addb %ch, (%eax,%eax);addb %cl, (%ebp);outsl (%esi), %dx": 1,
                "addb %ch, (%ecx);outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jae  <.text+>;andb %al, (%eax);imull $, (%eax), %eax;popal;addb %ah, (%eax)": 1,
                "addb %al, (%eax);pushl %ebx;addb %bh, (%ecx);je  <.text+>;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;addb %dh, (%eax,%eax);addb %ah, (%eax);addb %al, (%eax,%eax);addb %ch, (%ecx)": 1,
                "addb %ah, (%eax);addb %al, (%eax,%eax);addb %ch, (%ecx);jbe  <.text+>;addb %ah, %gs:(%eax)": 1,
                "addb %dl, (%eax);jb  <.text+>;outsl (%esi), %dx;addb %ch, (%ebp);jo  <.text+>": 1,
                "andb %al, (%eax);imull $, (%eax), %eax;jae  <.text+>;addb %al, %gs:(%eax);addb %al, (%eax)": 1,
                "addb %al, %gs:(%eax);addb %al, (%eax);addb %dl, (%ebx);imull $, (%eax), %eax;addb %dh, (%eax)": 1,
                "decl %esi;addb %dh, (%ebp);insl %dx, %es:(%edi);addb %ah, (%eax);addb %dl, (%eax,%eax)": 1,
                "insl %dx, %es:(%edi);addb %ah, (%eax);addb %dl, (%eax,%eax);addb %dh, (%eax);addb %ah, %gs:(%eax)": 1,
                "jne  <.text+>;addb %ah, (%esi);addb %dh, %gs:(%edx);jae  <.text+>;addb %al, (%eax)": 1,
                "addb %ch, (%ecx);insb %dx, %es:(%edi);addb %ah, (%ebp);andb %al, (%eax);incl %esp": 1,
                "incl %esp;addb %ah, (%ebp);je  <.text+>;popal;addb %ch, (%ecx)": 1,
                "addb %dh, (%eax,%eax);addb %dh, (%ebx);andb %al, (%eax);insb %dx, %es:(%edi);addb %ch, (%ecx)": 1,
                "addb %ah, (%ecx);jb  <.text+>;addb %al, (%eax);incl %esp;addb %ch, (%ecx)": 1,
                "addb %cl, (%ebp);addb %al, (%eax);addb %al, (%eax);incl %ebx;addb %ah, (%ecx)": 1,
                "addb %ch, (%eax,%eax);addb %ah, (%edi);andb %al, (%eax);pushl %eax;addb %ah, (%ecx)": 1,
                "addb %cl, (%eax,%eax);addb %al, (%eax);nop;roll ;addb %al, (%eax)": 1,
                "addb %al, (%eax);loope ;addb %cl, (%eax,%eax);addb %al, (%eax);incl %ecx": 1,
                "andl (%ebx), %ecx;addb %al, (%eax);addl %ecx, %esp;addb %al, (%eax);addl %ecx, %esp": 1,
                "incl (%ecx);addb %al, (%eax);addb $-, %al;addb %al, (%eax);subb $, %al": 1,
                "subb $, %al;addb %al, (%eax);insl %dx, %es:(%edi);movl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);insl %dx, %es:(%edi);movl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "sbbl %eax, -(%eax);addb %al, (%eax);orb $, %al;addb %al, (%eax);jmp - <.text+>": 1,
                "andb (%eax), %al;addb %al, (%eax);lcalll $, $;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ch, (%esi);addb $, (%eax);addb $, %cs:(%eax);orb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);lodsl (%esi), %eax;outb %al, %dx;addl $, %eax;addb %al, (%eax)": 1,
                "incl %eax;loope ;addb %cl, (%eax,%eax);addb %al, (%eax);outb %al, $": 1,
                "aam $-;addb %al, (%eax);subb $, %al;addb %al, (%eax);andl (%ebx), %ecx": 1,
                "addb %al, (%eax);andl (%ebx), %ecx;addb %al, (%eax);aad $-;addb %al, (%eax)": 1,
                "aad $-;addb %al, (%eax);subb $, %al;addb %al, (%eax);andl (%ebx), %ecx": 1,
                "subb $, %al;addb %al, (%eax);andl (%ebx), %ecx;addb %al, (%eax);faddl -(%eax)": 1,
                "incl %ecx;loope ;addb %al, -(%ecx);addb %al, (%eax);subb $, %al": 1,
                "imull $, (%edi), %ecx;addb %bh, %bh;incl (%eax);loope ;addb %al, (%eax)": 1,
                "loope ;addb %ch, (%eax,%eax);addb %al, (%eax);imull $, (%edi), %ecx;addb %al, (%eax)": 1,
                "addb $, (%eax);loope -;addb %al, (%eax);orb $, %al;addb %al, (%eax)": 1,
                "loope ;addb %al, (%edx);addb %al, (%eax);addb %bh, -(%ecx);addl $, %eax": 1,
                "addb %al, (%eax);addb %bh, -(%ecx);addl $, %eax;addb %bh, %bh;calll *(%eax)": 1,
                "addb %bl, (%edi);loope ;addb %ch, (%eax,%eax);addb %al, (%eax);movb $-, %ah": 1,
                "incl -(%eax,%eax,);addb %al, (%eax);subb $, %al;addb %al, (%eax);andl (%ebx), %ecx": 1,
                "andl (%ebx), %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);outb %al, $": 1,
                "rolb $, (%ecx,%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, -(%edx);addl $, %eax;addl %ecx, (%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %al, (%eax);leal (%edx), %ebx": 1,
                "addl %esi, -(%eax);addl $, %eax;addl %eax, (%eax);das;addl (%ecx), %eax": 1,
                "addl %ecx, (%edx,%esi,);addl %eax, (%eax);popl %es;addl %esi, (%edx,%esi,);popl %es": 1,
                "addl %edx, (%ebx);pushl $;addb %ah, (%eax);addb %dl, (%ebx);je  <.text+>": 1,
                "incl %esi;addb %cl, (%edi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %ebx;addb %cl, (%edi);incl %esi": 1,
                "addb %al, (%eax);addb %al, (%eax);outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %ah, (%ebp)": 1,
                "addb %dh, %cs:(%ebx);imull $, (%eax), %eax;addb %al, (%eax);andl $, %eax;addb %ah, (%ebp)": 1,
                "addb %dh, %gs:(%edx);jae  <.text+>;jo  <.text+>;jb  <.text+>;outsl (%esi), %dx": 1,
                "addl %edi, (%ebx,%esi,);popl %es;addl %esi, %edx;cmpsb %es:(%edi), (%esi);addl $, %eax": 1,
                "addl $, %eax;addl %esp, (%ebx,%esi,);popl %es;addl %ebx, (%eax);jae  <.text+>": 1,
                "addl %esp, (%ebx,%esi,);popl %es;addl %ebx, (%eax);jae  <.text+>;addl %ecx, (%ebx,%esi,)": 1,
                "addb %al, (%eax);andl $, %eax;addb %ah, (%eax,%eax);addb %dh, (%eax,%eax);addb %al, (%eax)": 1,
                "decl %esi;addb %dl, (%eax,%eax);addb %bl, (%eax,%eax);addb %ch, (%ecx);arpl %ax, (%eax)": 1,
                "addb %bl, (%eax,%eax);addb %bh, (%edx);addb %bl, (%eax,%eax);addb %dh, (%ecx,%ebx,);addl %ebx, %eax": 1,
                "addb %bh, (%edx);addb %bl, (%eax,%eax);addb %dh, (%ecx,%ebx,);addl %ebx, %eax;popl %esi": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);je  <.text+>;andb %al, (%eax);je  <.text+>": 1,
                "je  <.text+>;andb %al, (%eax);je  <.text+>;outsl (%esi), %dx;addb %ah, (%eax)": 1,
                "addb %ah, (%eax);addb %cl, (%esi);pushl %esp;addb %ah, (%eax);addb %al, (%edx)": 1,
                "andb (%eax), %al;addb %al, (%eax);addb %al, (%eax);das;addb %dh, (%esi)": 1,
                "addb %al, (%eax);das;addb %dh, (%edx);cmpb (%eax), %al;outsb (%esi), %dx": 1,
                "addb %dh, (%edx);cmpb (%eax), %al;outsb (%esi), %dx;addb %ch, (%edi);andb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);das;addb %dh, (%edx);cmpb (%eax), %al": 2,
                "jo  <.text+>;cmpb (%eax), %al;decl %edi;addb %ah, (%esi);addb %ah, (%eax)": 1,
                "cmpb (%eax), %al;outsl (%esi), %dx;addb %ah, (%esi);addb %ah, (%eax);addb %al, (%eax)": 1,
                "outsl (%esi), %dx;addb %ah, (%esi);addb %ah, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "das;addb %ch, (%ebp);andb %al, (%eax);addb %ah, %fs:(%ecx);imull $, (%eax), %eax": 1,
                "jb  <.text+>;insl %dx, %es:(%edi);addb %ah, (%ecx);insb %dx, %es:(%edi);addb %ah, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ch, (%edi);addb %ah, (%esi);andb %al, (%eax)": 1,
                "addb %ah, (%edx);addb %al, (%eax);andl $, %eax;addb %ah, (%eax);addb %al, (%eax)": 1,
                "andl $, %eax;addb %ah, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ah, ": 1,
                "cmpb (%eax), %al;das;addb %ch, (%edi);addb %al, (%eax);addb %dl, (%ebx)": 1,
                "imull $, (%eax), %eax;addb %dh, (%eax);pushl %eax;addb %dh, (%edx);imull $, (%eax), %eax": 1,
                "addb %cl, (%esi);incl %ecx;addb %dl, (%eax);cmpb (%eax), %al;addb %al, (%eax)": 1,
                "pushl %eax;addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %dl, (%esi)": 1,
                "addb %al, (%eax);das;addb %cl, (%ebp);addb %al, (%eax);addb %al, (%eax)": 1,
                "das;addb %cl, (%ebp);addb %al, (%eax);addb %al, (%eax);das": 1,
                "addb %al, (%eax,%eax);addb %al, (%eax);addb %cl, (%esi);outsl (%esi), %dx;addb %dh, (%edx)": 1,
                "addl %esi, (%ebx,%ecx,);addl %eax, (%eax);addb %al, (%eax);addb %dl, (%edx,%ebx,);addl %eax, (%ecx)": 1,
                "daa;pushl %es;addl %esi, (%esi);addl (%ecx), %eax;movb $-, %ah": 1,
                "addl %eax, (%esi,%ebx,);pushl %es;addl %edi, (%eax);popl %es;addl %ebp, (%esi,%ebx,)": 7,
                "addb %al, (%eax);incl %ecx;pushl %es;addl %edx, (%ecx);addl %eax, (%eax)": 1,
                "addb %dh, -(%eax);sldtw (%eax);orb $, %al;addb %al, (%eax);leal (%ecx), %edi": 1,
                "addb %dh, (%ebx);addb %al, (%eax);addb %al, (%eax);andb %al, (%eax);das": 1,
                "addb %al, (%eax);jo  <.text+>;addl %eax, (%ecx);pushl $;cmpb (%esi), %al": 1,
                "popl %ebp;popl %es;addl %ebx, (%esi,%ebp,);addl %edi, (%ebp,%ebx,);addl %edx, %eax": 1,
                "addl %eax, %ebp;incl %edx;pushl %es;addl %esi, (%ebx);incl %edx": 1,
                "addb %al, (%eax);addb %ch, (%edi,%ecx);addb %al, (%eax);orb $, %al;addb %al, (%eax)": 1,
                "addb %ch, (%edi,%ecx);addb %al, (%eax);orb $, %al;addb %al, (%eax);popl %ds": 1,
                "addb %al, (%ecx);subb %bl, (%ebx);addl %ebp, (%eax);popl %es;addl %ecx, -(%ebx)": 1,
                "addl %ebx, (,%ebx,);popl %es;addl %eax, (,%ebx,);popl %es;addl %edx, (%ecx,%ecx,)": 1,
                "decl %ecx;pushl %es;addl %edx, %edx;decl %eax;pushl %es": 1,
                "pushl %es;addl %eax, (%eax);addb %al, (%eax);addb %dl, ;addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %dl, ;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, ;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %cl, %cl;movb (%esi), %al;addl %ecx, %eax;roll (%eax);addl %eax, -(%eax)": 1,
                "popl %esp;pushl %es;addl %edi, -(%ebp);jno  <.text+>;addl %edx, %esp": 1,
                "popl %esp;popl %es;addl %eax, %edx;popl %ebp;pushl %es": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, -(%eax);addb $, %al": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, (%ecx);addl $, %eax": 1,
                "addb $, %al;inb %dx, %al;popl %esp;popl %es;addl %ebx, (%esi)": 1,
                "addb %dl, (%ecx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, (%esi)": 1,
                "addb %dl, (%edi);addl $, %eax;addb %al, (%eax);orb $, %al;addb %al, (%eax)": 1,
                "addl %eax, -(%eax);addb %al, (%ecx);andb $, %al;addl %eax, (%ecx);insb %dx, %es:(%edi)": 1,
                "addl %eax, (%ecx);insb %dx, %es:(%edi);popl %es;addl %ebx, %ebp;je  <.text+>": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %cl, %ah;popl %esp;addl %eax, (%ecx)": 1,
                "popl %es;addl %ecx, (%eax);popl %ebp;popl %es;addl %esi, (%edi,%ebp,)": 1,
                "popl %es;addl %eax, (%esi);pushl %es;addl %esp, (%eax);addb %ch, ": 1,
                "addl %eax, (%esi);pushl %es;addl %esp, (%eax);addb %ch, ;addb %ah, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);xorl $, %eax;addl $, %eax": 1,
                "addl $, %eax;addb %al, (%eax);cmpl %eax, (%esi,%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %ebx, (%eax);popl %ebp;addl %eax, (%ecx);movl $, %ecx;movb %al, (%esi)": 1,
                "fisttps (%edx);popl %es;addl %edx, -(%ecx);pushl %es;addl %esp, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dl, (%ebx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%edx,%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %esp;popl %es;addl %eax, (%eax,%eax);addb %ch, (%esi);je  <.text+>": 1,
                "popl %es;addl %eax, (%eax,%eax);addb %ch, (%esi);je  <.text+>;andb %al, (%eax)": 1,
                "popl %es;addl %edx, -(%esi);cmpsb %es:(%edi), (%esi);pushl %es;addl %eax, (%eax)": 1,
                "addl $, %eax;addb %al, (%eax);orb $, %al;addb %al, (%eax);scasb %es:(%edi), %al": 1,
                "addb %al, (%eax);orb $, %al;addb %al, (%eax);scasb %es:(%edi), %al;lcalll $, $": 1,
                "addb %al, (%eax);xorl $, %eax;addl $, %eax;addb %al, (%eax);popl %edi": 1,
                "addb %al, (%eax);popl %edi;wait;pushl %es;addl %eax, (%eax)": 1,
                "popl %es;addl %ebp, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %ecx, (%ebx);decl %esi;popl %es;addl %edi, (%ebp,%ebx,);addl %esi, (%esi,%ebx,)": 4,
                "addl %esi, (%esi,%ebx,);addl %eax, (%ecx);into;jno  <.text+>;addl %ebp, (%edx,%ecx,)": 4,
                "pushl %es;addl %esi, (%esi);popl %es;addl %ecx, -(%eax);decl %edx": 2,
                "popl %es;addl %ecx, -(%eax);decl %edx;popl %es;addl %esi, (%eax)": 1,
                "lahf;pushl %es;addl %edx, (%ecx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "fbld (%edx);addl (%ecx), %eax;jbe  <.text+>;popl %es;addl %ecx, -(%eax)": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, -(%esi);loop ": 1,
                "addl %edi, (%eax);pushal;addl %eax, (%ecx);fimull (%ecx);addl %ecx, -": 1,
                "pushl %esp;addb $, %al;shlb %cl, (%esi);addl (%ecx), %eax;jbe  <.text+>": 1,
                "popl %es;addl %esp, (%eax);cmpsl %es:(%edi), (%esi);addl %eax, (%ecx);addb (%eax), %al": 1,
                "addb %al, (%eax);scasb %es:(%edi), %al;addb $, %al;addb %ch, (%esi);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);insb %dx, %es:(%edi);addl $, %eax;addb %al, (%eax)": 1,
                "orb $, %al;addb %al, (%eax);adcl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, -(%esi);outl %eax, $;addl %ebx, (%ecx);popl %es": 1,
                "popl %es;addl %ecx, -(%ebp);pushl %es;addl %edx, (%edi);pushl %esp": 1,
                "popal;addl %eax, (%ecx);fimull (%ecx);addl %ecx, -;cmpsb %es:(%edi), (%esi)": 1,
                "movb $, %dh;addl %edi, -(%ebp);jno  <.text+>;addl %ebp, (%edx,%ecx,);popl %es": 1,
                "addl %eax, (%eax);xlatb;pushl %es;addl %esi, (%esi);addl (%ecx), %eax": 2,
                "int;pushl %es;addl %edi, -(%ebp);jno  <.text+>;addl %ebp, (%edx,%ecx,)": 1,
                "addl %esi, -;cmpsb %es:(%edi), (%esi);pushl %es;addl %eax, (%eax);das": 1,
                "addl %ecx, -(%eax);decl %edx;popl %es;addl %eax, %eax;int $": 1,
                "addb %al, (%ecx);addb $, %al;addl %eax, (%ecx);fimull (%ecx);addl %eax, (%eax)": 1,
                "popl %es;addl %edi, (%esi,%edx,);pushl %es;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl %ecx, (%eax);addl %eax, %gs:(%ecx);movl $, %ecx;loop ;addl %esi, (%esi)": 1,
                "popl %es;addl %eax, -(,%ebx,);addb $, %al;outl %eax, $;pushl %es": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);adcl %eax, (%ecx)": 1,
                "insl %dx, %es:(%edi);popl %es;addl %ebp, -(%esi);pushl %es;addl %edx, (%ebx)": 1,
                "cmpb (%eax), %al;jns  <.text+>;addb %dh, %gs:(%ebx);addb %al, (%eax);addb %al, (%eax)": 2,
                "jns  <.text+>;addb %dh, %gs:(%ebx);addb %al, (%eax);addb %al, (%eax);das": 2,
                "das;addb %ah, (%ecx);addb %bh, %fs:(%edx);addb %bh, (%ecx);addb %dh, %gs:(%ebx)": 1,
                "das;addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax);das": 1,
                "addb %al, (%eax);das;addb %ch, (%eax,%eax);addb %dh, (%ebx);addb %al, (%eax)": 1,
                "addb %al, (%eax);incl %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jecxz  <.text+>;addl %ecx, %eax;clc;addb %al, (%ecx);sbbb $, %al": 1,
                "popl %ebp;popl %es;addl %ebx, (%esi,%ebp,);addl %edi, (%ebp,%ebx,);addl %eax, (%eax)": 1,
                "addl %esp, (%ecx);popl %es;addl %eax, -(%eax);insl %dx, %es:(%edi);popl %es": 1,
                "addl %ebx, %eax;insl %dx, %es:(%edi);popl %es;addl %eax, -(%edx);orl %eax, (%edi)": 1,
                "pushl %ebx;addb %dl, (%edx);incl %edx;addb %ah, (%ecx);arpl %ax, (%eax)": 1,
                "addb %al, (%eax);orl $, %eax;sbbl %eax, (%edi);addl %eax, (%edx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, %cl;movb (%esi), %al;addl %ebx, (%eax);cli": 1,
                "addb %al, (%eax);iretl;andb (%edi), %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%ebx);popl %es;addl %esi, (%esi);addl (%ecx), %eax;movb $-, %ah": 1,
                "addb %al, (%eax);addb %al, (%eax);scasb %es:(%edi), %al;fiadds (%ecx,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %al, (%eax);xorl (%ebx), %edx": 1,
                "addl %eax, (%ecx);decl %esp;pushl %eax;popl %es;addl %ebx, (%edx)": 1,
                "js  <.text+>;addl %eax, (%eax);addb %al, (%eax);addb %bh, %bh;incl (%eax)": 1,
                "incl %ebp;pushl %edx;pushl %ecx;decl %ecx;incl %ebx": 1,
                "addb %dl, (%ebx);addb %dh, %gs:(%ecx);addb %al, (%eax);incl %esi;addb %ch, (%ecx)": 1,
                "imull $, (%eax), %eax;outsb (%esi), %dx;addb %ah, (%esi);outsl (%esi), %dx;addb %al, (%eax)": 1,
                "addb %ah, (%ebp);addb %ch, %fs:(%ecx);popal;addb %cl, (%eax,%eax);addb %ah, (%edx)": 1,
                "popal;addb %cl, (%eax,%eax);addb %ah, (%edx);addb %ch, %gs:(%eax,%eax);addb %dl, (%edx)": 1,
                "addb %ah, %gs:(%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <.text+>;imull $, (%eax), %eax": 1,
                "imull $, (%eax), %eax;addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax);xorb %al, (%eax)": 1,
                "addb %al, (%eax);popal;je  <.text+>;addb %ah, (%ecx);subl (%eax), %eax": 1,
                "subl (%eax), %eax;ja  <.text+>;subl (%eax), %eax;ja  <.text+>;subl (%eax), %eax": 1,
                "insb %dx, %es:(%edi);addb %ch, (%ecx);arpl %ax, (%eax);andb %al, (%eax);incl %esi": 1,
                "addb %cl, (%ebp);pushl %ebx;addb %al, (%ebp);js  <.text+>;arpl %ax, (%eax)": 6,
                "imull $, (%eax), %eax;addb %dh, (%eax);pushl %eax;addb %dh, (%edx);addb %dh, %gs:(%eax)": 2,
                "addb %ah, (%ecx);arpl %ax, (%eax);pushl $;addb %ch, (%esi);je  <.text+>": 1,
                "subl %eax, (%eax);addb %al, (%eax);incl %edx;addb %ah, (%ecx);arpl %ax, (%eax)": 1,
                "popal;addb %ah, (%ebx);imull $, (%eax), %eax;addb %dh, (%eax);decl %edi": 2,
                "decl %edi;addb %dh, (%eax);addb %ch, %gs:(%esi);subb %al, (%eax);subl %eax, (%eax)": 1,
                "addb %ah, (%ebx);popal;addb %dh, (%eax,%eax);addb %cl, (%eax,%eax);addb %ah, (%edi)": 3,
                "subl %eax, (%eax);addb %al, (%eax);pushl %edx;addb %ah, (%ebp);jae  <.text+>": 1,
                "outsl (%esi), %dx;addb %ch, (%ebp);jo  <.text+>;insb %dx, %es:(%edi);addb %ah, (%ebp)": 2,
                "outsl (%esi), %dx;jb  <.text+>;incl %ebp;outsb (%esi), %dx;addb %al, %fs:(%eax)": 3,
                "addb %al, (%eax);decl %eax;jb  <.text+>;jae  <.text+>;outsl (%esi), %dx": 1,
                "arpl %sp, (%ecx);imull $, (%edi), %ebp;decl %eax;jb  <.text+>;jae  <.text+>": 1,
                "jb  <.text+>;outsb (%esi), %dx;arpl %sp, (%ecx);decl %esp;outsl (%esi), %dx": 4,
                "jae  <.text+>;addb %al, (%eax);decl %eax;jb  <.text+>;popal": 1,
                "addb %dh, (%ecx);addb %dh, (%edx);addb %dh, (%ebx);addb %dh, (%eax,%eax);xorl $, %eax": 2,
                "pushl %edx;jae  <.text+>;outsl (%esi), %dx;jb  <.text+>;pushl %ebx": 2,
                "imull $, (%ebx), %esi;jae  <.text+>;outsl (%esi), %dx;incl %edx;popal": 1,
                "addb %cl, (%ecx);jo  <.text+>;jb  <.text+>;pushl %esp;insb %dx, %es:(%edi)": 1,
                "incl %ebx;addb %al, (%eax);je  <.text+>;insb %dx, %es:(%edi);addb %dh, (%ebx)": 1,
                "insb %dx, %es:(%edi);addb %dh, (%ebx);xorb (%eax), %al;xorl (%eax), %eax;addb %ch, %ss:(%esi)": 1,
                "jae  <.text+>;je  <.text+>;addb %dh, %gs:(%edx);popl %esp;addb %ah, (%ebx)": 1,
                "addb %dh, %gs:(%edx);popl %edi;addb %ah, (%edx);popal;addb %ah, (%ebx)": 1,
                "addb %bh, (%edi);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ecx);decl %ebp": 1,
                "addb %al, (%eax);addb %cl, (%ecx);decl %ebp;addb %al, (%eax,%eax);addb %al, (%esi)": 1,
                "addb %ch, (%esi);arpl %ax, (%eax);addb %ah, %fs:(%ecx);addb %al, (%eax);popal": 1,
                "pushl %esp;addb %ah, (%ecx);jo  <.text+>;addb %ah, %gs:(%eax);addb %al, (%edx)": 1,
                "addb %ch, (%eax,%eax);addb %dl, (%eax);popal;addb %dh, (%eax,%eax);addb %dh, (%ebx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%eax);jb  <.text+>;incl %ebp": 5,
                "addb %ah, (%ebx);imull $, (%eax), %eax;addb %dh, (%eax);pushl %ebx;addb %ah, (%ebp)": 1,
                "addb %ah, (%ebx);imull $, (%eax), %eax;addb %dh, (%eax);decl %ecx;addb %ch, (%esi)": 1,
                "addb %ah, (%ecx);je  <.text+>;arpl %ax, (%eax);pushl $;addb %ch, (%eax,%eax)": 1,
                "incl %esi;addb %ch, (%ecx);insb %dx, %es:(%edi);addb %ah, (%ebp);subb %al, (%eax)": 2,
                "addb %cl, %gs:(%edi);jo  <.text+>;addb %ch, %gs:(%esi);subb %al, (%eax);subl %eax, (%eax)": 1,
                "je  <.text+>;outsl (%esi), %dx;addb %dh, (%edx);addb %dl, %gs:(%edx);addb %ch, %gs:(%edi)": 1,
                "outsl (%esi), %dx;addb %dh, (%edx);addb %dl, %gs:(%edx);addb %ch, %gs:(%edi);jo  <.text+>": 1,
                "jb  <.text+>;incl %ebp;addb %dl, (%ebx);incl %ebp;addb %dl, (%edx)": 3,
                "outsb (%esi), %dx;addb %ch, (%ebp);addb %ch, %gs:(%esi);je  <.text+>;subb %al, (%eax)": 2,
                "pushl %edx;jae  <.text+>;outsl (%esi), %dx;jb  <.text+>;pushl %edi": 1,
                "outsl (%esi), %dx;insl %dx, %es:(%edi);jo  <.text+>;je  <.text+>;addb %al, (%eax)": 1,
                "jae  <.text+>;outsl (%esi), %dx;jb  <.text+>;incl %esi;jb  <.text+>": 3,
                "je  <.text+>;addb %cl, (%eax);incl %ebp;pushl %ebx;incl %ebp": 1,
                "jb  <.text+>;incl %ecx;incl %esp;popal;je  <.text+>": 2,
                "je  <.text+>;jo  <.text+>;outsb (%esi), %dx;outsb %gs:(%esi), %dx;arpl %di, (%ecx)": 1,
                "je  <.text+>;jo  <.text+>;addb %al, (%eax);addb %al, (%ebp);incl %ebp": 1,
                "jo  <.text+>;addb %al, (%eax);addb %al, (%ebp);incl %ebp;incl %edx": 1,
                "incl %esi;jb  <.text+>;pushl %edx;imull $, %gs:(%bp,%di), %esi;decl %ecx": 1,
                "jb  <.text+>;decl %ecx;outsb (%esi), %dx;jae  <.text+>;popal": 1,
                "addb %ah, %gs:(%edx);arpl %ax, (%eax);insb %dx, %es:(%edi);addb %ch, (%ecx);xorb (%eax), %al": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %ebx;addb %al, (%ebx);pushl %ebx": 1,
                "pushl %ebx;addb %cl, (%ecx);andb %al, (%eax);pushl %esp;addb %ah, (%ecx)": 1,
                "addb %bh, (%eax);addb %bh, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ch, (%esi);popl %edi;addb %ah, (%edi);outsl (%esi), %dx;addb %dh, (%eax,%eax)": 1,
                "addb %bl, (%eax);orb (%eax), %al;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popal;addb %ch, (%eax,%eax);addb %bl, (%edi);je  <.text+>;jns  <.text+>": 1,
                "cmpl $, %eax;addb %ah, (%eax,%eax);addb %al, (%eax);addb %dl, (%eax,%eax);addb %dl, (%ebx)": 1,
                "addb %cl, (%edx);addb %al, (%eax);addb %al, (%esi);imull $, (%eax), %eax;addb %al, (%eax)": 1,
                "imull $, (%eax), %eax;addb %al, (%eax);addb %al, (%eax);popl %esp;addb %dl, (%edx)": 1,
                "addb %dl, (%edx);incl %ebp;addb %al, (%edi);decl %ecx;addb %dl, (%ebx)": 1,
                "incl %ebp;addb %al, (%eax);addb %ch, (%esi);addb %al, (%eax,%eax);addb %al, (%esi)": 1,
                "decl %esp;addb %dl, (%eax,%eax);addb %al, (%eax);addb %cl, (%eax,%eax);addb %dh, (%ebx)": 1,
                "jb  <.text+>;jae  <.text+>;imull $, (%eax), %eax;popl %esp;addb %dl, (%edx)": 1,
                "addb %ah, (%ebp);addb %al, (%bx,%si);addb %dl, (%ebx);decl %edi;addb %al, (%esi)": 1,
                "addb %al, (%eax,%eax);addb %ah, (%esi);popal;addb %dh, (%ebp);insb %dx, %es:(%edi)": 1,
                "addb %al, (%eax);pushl %ebx;addb %ah, (%ebp);je  <.text+>;jne  <.text+>": 1,
                "decl %ebp;addb %bl, (%eax,%eax);addb %dh, (%ebx);addb %al, (%eax);incl %edx": 1,
                "jb  <.text+>;decl %ebx;addb %ah, (%ebp);jns  <.text+>;jae  <.text+>": 1,
                "addb %dh, (%edx);outsl (%esi), %dx;addb %ah, (%eax,%eax);addb %ah, (%ebx);je  <.text+>": 1,
                "decl %esi;addb %dl, (%eax,%eax);addb %cl, (%edi);decl %esp;addb %bl, (%eax,%eax)": 1,
                "jo  <.text+>;je  <.text+>;addb %al, (%eax);addb %al, (%ebx,%esi,);jae  <.text+>": 1,
                "arpl %bp, (%ebx);jo  <.text+>;jb  <.text+>;addb %al, %gs:(%eax);addb %al, (%eax)": 1,
                "jb  <.text+>;addb %al, %gs:(%eax);addb %al, (%eax);incl %esp;jae  <.text+>": 1,
                "insl %dx, %es:(%edi);jae  <.text+>;addb %al, (%eax);addb %al, (%ebx,%esi,);popal": 1,
                "jb  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;je  <.text+>;outsl (%esi), %dx": 2,
                "popal;addb %al, %fs:(%eax);addb %al, (%ebx);jb  <.text+>;pushl %ebx": 1,
                "addb %al, (%edx,%eax,);incl %edx;addb %al, (%eax);addb %al, (%eax);incl %ebp": 1,
                "decl %edi;decl %esp;incl %edx;addb %al, (%eax);addb %al, (%eax)": 1,
                "jb  <.text+>;imull $, (%eax), %eax;addb %ch, (%eax);addb %ah, (%eax);addb %ah, ": 1,
                "pushl %ebx;pushl %ecx;decl %esp;andb %ah, (%eax);andb %al, (%eax)": 1,
                "arpl %ax, (%eax);imull $, (%eax), %eax;addb %dh, (%eax);pushl %ebx;addb %ah, (%ebp)": 1,
                "jb  <.text+>;addb %dh, %gs:(%eax,%eax);addb %dh, (%edx);outsb (%esi), %dx;addb %bh, ": 1,
                "addb %cl, (%edx);addb %al, (%eax);addb %al, (%eax);addb %al, (%ebp);incl %esi": 1,
                "jae  <.text+>;jo  <.text+>;imull $, %fs:(%esi), %ebp;orb (%eax), %al;addb %al, (%eax)": 1,
                "jo  <.text+>;imull $, %fs:(%esi), %ebp;orb (%eax), %al;addb %al, (%eax);addb %bl, (%eax,%eax)": 1,
                "addb %ah, %gs:(%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, (%eax,%eax);addb %ah, ": 1,
                "imull $, (%eax), %eax;addb %dh, %gs:(%edx);incl %ebx;addb %ch, (%edi);insl %dx, %es:(%edi)": 1,
                "andl $, %eax;addb %ah, (%eax,%eax);addb %al, (%eax);addb %al, (%eax);addb %dh, (%eax)": 1,
                "jb  <.text+>;jae  <.text+>;je  <.text+>;jne  <.text+>;jbe  <.text+>": 1,
                "addb %ch, ;addb %bl, (%eax,%eax);addb %ah, ;addb %ah, ;addb %ah, ": 1,
                "addb %ah, (%ecx);insl %dx, %es:(%edi);addb %ah, (%ebp);subb %al, (%eax);subl %eax, (%eax)": 1,
                "addb %cl, (%ebp);incl %esp;addb %al, (%edx);andb %al, (%eax);incl %esp": 1,
                "subb %al, (%eax);subl %eax, (%eax);addb %al, (%eax);incl %ebx;addb %ch, (%edi)": 1,
                "pushl %ebx;addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebp);pushl %ebx": 1,
                "addb %al, %gs:(%eax,%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax,%eax);addb %dh, (%eax,%eax)": 1,
                "addb %ch, (%esi);addb %ch, (%eax,%eax);addb %ah, (%edi);addb %al, (%eax);addb %al, (%eax)": 1,
                "arpl %ax, (%eax);addb %al, (%eax);incl %esp;addb %al, (%edx);andb %al, (%eax)": 1,
                "je  <.text+>;pushl $;addb %al, (%eax);addb %ah, ;addb %bh, (%eax)": 1,
                "addb %bh, (%ebx);addb %al, (%eax);andl $, %eax;addb %dh, (%ebx);je  <.text+>": 1,
                "popl %esp;addb %al, (%ecx);jo  <.text+>;jo  <.text+>;insb %dx, %es:(%edi)": 1,
                "addb %al, (%eax);addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%ebp);je  <.text+>": 1,
                "addb %ah, (%edx);imull $, (%eax), %eax;addb %al, (%eax);pushl %eax;addb %ah, (%ebp)": 1,
                "outsb (%esi), %dx;addb %dh, (%eax,%eax);addb %ah, (%eax,%eax);addb %al, (%eax);addb %ch, (%edi)": 1,
                "insb %dx, %es:(%edi);addb %ch, (%edi);popal;addb %ah, (%eax,%eax);addb %dh, (%edx)": 1,
                "addb %ch, (%ecx);jb  <.text+>;popl %esp;addb %al, (%edx);popal": 7,
                "addb %dh, (%eax);popl %esp;addb %al, (%edx);outsl (%esi), %dx;addb %ch, (%edi)": 3,
                "popl %esp;addb %al, (%edx);outsl (%esi), %dx;addb %ch, (%edi);je  <.text+>": 3,
                "outsl (%esi), %dx;addb %ch, (%edi);je  <.text+>;popal;addb %ah, (%edx)": 3,
                "addb %ch, (%edi);insl %dx, %es:(%edi);addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax": 1,
                "addb %dl, (%ebp);pushl %ebx;addb %al, (%eax,%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bl, (%eax,%eax);addb %bh, (%ecx);jae  <.text+>": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %bh, (%ecx);jae  <.text+>;je  <.text+>": 1,
                "decl %ebp;addb %bl, (%eax,%eax);addb %ah, (%ebp);jo  <.text+>;outsl (%esi), %dx": 1,
                "addb %dh, (%eax,%eax);addb %bl, (%eax,%eax);addb %ah, (%ebp);jb  <.text+>;insl %dx, %es:(%edi)": 1,
                "insl %dx, %es:(%edi);addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx);insb %dx, %es:(%edi)": 1,
                "popal;addb %ah, (%edi);addb %cl, %gs:(%ebp);popal;addb %ch, (%esi)": 1,
                "popl %esp;addb %ch, (%esi);je  <.text+>;insl %dx, %es:(%edi);addb %dh, (%ebx)": 1,
                "je  <.text+>;insl %dx, %es:(%edi);addb %dh, (%ebx);addb %ah, %fs:(%ecx);je  <.text+>": 1,
                "addb %bl, (%eax,%eax);addb %bh, (%eax);jo  <.text+>;outsl (%esi), %dx;addb %dh, (%edx)": 1,
                "addb %dh, (%edx);addb %ah, %gs:(%ecx);je  <.text+>;addb %al, %gs:(%esi);imull $, (%eax), %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ch, (%esi);addb %bh, (%eax);addb %dh, (%eax)": 1,
                "adcb $, %al;addb %al, (%eax);addb %al, (%eax);addb %al, %al;addb %al, (%eax)": 2,
                "aad $-;adcb $-, %al;movb %al, ;addb %ch, (%edx);andb $-, %al": 1,
                "decl %ecx;outsb (%esi), %dx;jo  <.text+>;outsl (%esi), %dx;arpl %dx, (%ebx)": 1,
                "nop;addb %al, %al;decl %edi;fdivr %st();incl (%ecx)": 1,
                "decl %ebx;andb $-, %al;fcoml -(%esi);movw %es, (%edx);addb %ch, -(%edx)": 1,
                "calll ;addb %al, %al;decl %edi;movb $-, %dh;andb %dh, -(%esi)": 1,
                "decl %edi;movb $-, %dh;andb %dh, -(%esi);incl %esp;cld": 1,
                "xorb -(%esi), %bl;adcl %eax, (%ebp);popl %ds;addl $-, (,%eax,);xorb $, %al": 1,
                "adcl %eax, (%ebp);popl %ds;addl $-, (,%eax,);xorb $, %al;movb (%edx), %ch": 1,
                "ljmpl *(%eax);andb %bh, -(%ebp);adcl %ebp, (%ebp);fdivr %st();incl (%esi)": 1,
                "adcl %eax, (%ebp);popl %ds;addl $, (%edx,%esi,);adcl $, %eax;adcl %ebp, (%ebp)": 1,
                "andb %cl, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movb $-, %al;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 3,
                "addl %edi, (%eax);addl %eax, (%ecx);pushal;xorb (%ecx), %al;addl %ecx, (%eax)": 30,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cld": 5,
                "addl %ecx, (%ebx,%esi);addl %edx, (%eax);xorb (%ecx), %al;addl %esp, (%eax);addl %eax, (%ecx)": 5,
                "addb %al, (%eax);addb %al, (%esi);addb %al, (%eax);addb %bh, (%ebx,%esi);addl %eax, (%eax)": 1,
                "addb %bh, (%ebx,%esi);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%ecx,%eax,);addl %ebx, -(%eax);rorl $, ;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %al": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %al;rorl $, ": 1,
                "addb %al, (%esi);addb %al, (%eax);addb %ch, (%esp,%esi);addl %eax, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);movb %al, %dl;orl $, %eax;addl %edi, (%edx,%eax,);addb %al, (%eax)": 1,
                "movb %al, %dl;orl $, %eax;addl %edi, (%edx,%eax,);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%esi);addb %al, (%eax);addb %cl, (,%esi);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);pushfl;xorl $, %eax;addl %eax, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%esi,%esi);addl %eax, (%ecx);inb %dx, %al": 1,
                "addl %eax, (%ecx);js  <.text+>;addl %eax, (%ecx);pushal;xorb (%ecx), %al": 54,
                "incl (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, (%esi,%esi)": 1,
                "addl %ebp, %esp;xorl $, %eax;addl %eax, (%ecx);js  <.text+>;addl %eax, (%ecx)": 11,
                "addb %al, (%eax);addb %al, (%eax);pushl %es;addb %al, (%eax);addb %dh, (%esi,%esi)": 1,
                "addb %al, (%eax);addb %bh, (%edi,%esi);addl %eax, (%ecx);nop;xorb (%ecx), %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);int": 1,
                "calll -;cmpb %al, (%ecx);addl %eax, (%esp,%eax,);orl $, %eax;addb %al, (%eax)": 1,
                "incl (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, (%ecx,%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);andb %al, %ah;orl $, %eax;addl %edi, (%eax)": 1,
                "addb %dh, (%ecx,%edi);addl %edi, (%eax);addl %eax, (%ecx);pushal;xorb (%ecx), %al": 1,
                "addb %cl, (%eax);addl %eax, (%ecx);decl %eax;xorb (%ecx), %al;addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%esp,%eax,);addl %eax, (%ecx);pushfl": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bl, %ah;cmpb (%ecx), %al;addl %ecx, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%esp,%eax,);addl %eax, (%ecx);movb $-, %al;orl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dh, (%esp,%edi);addl %eax, (%ecx)": 1,
                "addb %al, (%edi);addb %al, (%eax);addb %cl, (%esp,%edi);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%esp,%edi);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "incl (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ah, %ah": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebp,%edi);addl %eax, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, (%ebp,%edi);addl %eax, (%ecx);nop": 1,
                "pushl %es;addb %al, (%eax);addb %ah, (%ebp,%edi);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dh, (%edi,%edi);addl %eax, (%ecx);js  <.text+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb $, %al;addb %al, (%eax);decl %esp": 1,
                "cld;addl %ebx, (%eax,%ecx,);orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%ecx);insb %dx, %es:(%edi);enter $, $;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %ah;incl %eax": 1,
                "incl %eax;addl %eax, (%ecx);movb %cl, %al;orl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);xorb $-, %al": 3,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);movsb (%esi), %es:(%edi);enter $, $-": 1,
                "incl (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %al": 1,
                "subb %cl, %cl;orl $, %eax;addl %eax, (%ecx,%ecx,);addl %eax, ;addb %al, (%eax)": 1,
                "addl %eax, (%ecx,%ecx,);addl %eax, ;addb %al, (%eax);addb %bh, %bh;incl (%eax)": 1,
                "addb %al, (%eax);orb $, %dl;addl %eax, ;addb %al, (%eax);addb %bh, %bh": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, (%eax);addb %al, (%eax)": 1,
                "pushl %esp;incl %esp;addl %eax, (%ecx);cmpb $, %al;addl %eax, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);adcb %al, (%ebp);addl %ecx, (%eax);addl %eax, (%ecx)": 1,
                "addl %eax, (%ecx);cld;lretl $;addl (%eax), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);lesl (%esi), %eax;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, (%edi,%eax,);addl %eax, (%ecx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addl (%eax), %eax;addb %al, (%eax);cld": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %dl, (%ecx,%ecx,)": 1,
                "addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %dl, (%ecx,%ecx,);addb %al, (%eax)": 1,
                "orl $, %eax;addl %edi, %eax;iretl;orl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cmpb %dl, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dh, %ah;decl %edx;addl %eax, (%ecx)": 1,
                "addl %esp, (%eax);decl %ebx;addl %eax, (%ecx);lodsb (%esi), %al;rorb ": 1,
                "addl $, %eax;decl %ebx;addl %eax, (%ecx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addl (%eax), %eax;addb %al, (%eax);popl %esp": 1,
                "addb %al, (%eax);addb %al, (%eax);addb $, %al;addb %al, (%eax);testb $, %al": 1,
                "addb %al, (%eax);andb $-, %al;orl $, %eax;addl %ecx, -(%eax);orl $, %eax": 2,
                "orl $, %eax;addl %ecx, -(%eax);orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 2,
                "addb %al, (%eax);decl %eax;rorl ;addl %esp, (%ecx,%edx,);addl %eax, (%ebx)": 1,
                "addb %al, (%eax);orb $, (%ebp);rorb $, (%ecx);pushl %esp;decl %eax": 1,
                "addb %al, (%eax);addb $, %al;addb %al, (%eax);calll  <.text+>;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ch, -(%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %cl, %ah;rorl ;addl %ebp, %esp": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cmpb %dl, %dl;orl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %esp;rorb %cl, ": 1,
                "rorb %cl, ;addl %esi, (%edx,%edx,);addl %eax, (%eax,%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "adcb %dl, (%eax);addl %esi, (%eax);addl %eax, (%ecx);rorb $, (%ecx);pushl %esp": 1,
                "addl (%eax), %eax;addb %al, (%eax);jl  <.text+>;addl %eax, (%ecx);addb %al, (%eax)": 1,
                "nop;rorb %cl, ;addl %ebp, (%edx,%edx,);addb %al, (%eax);addb %al, (%eax)": 1,
                "rorb %cl, ;addl %ebp, (%edx,%edx,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);lodsb (%esi), %al;rorb %cl, ": 1,
                "addb %al, (%eax);addb %ch, %al;rorb %cl, ;addl %ebx, %esp;iretl": 1,
                "addb %cl, (%eax,%eax);addb %bh, %bh;incl (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ch, %al;rorb %cl, ;addl %eax, (%eax);addb %al, (%eax);addb %cl, (%eax,%eax)": 1,
                "addb %bl, %al;pushl %ecx;addl %eax, (%ecx);pushl %esp;decl %eax": 1,
                "addb $, %al;addb %al, (%eax);nop;pushl %edx;addl %eax, (%ecx)": 1,
                "insb %dx, %es:(%edi);rorl %cl, ;addl %eax, (%ebx,%edx,);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);testb %dl, %bl;orl $, %eax": 1,
                "incl (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, (%ebx,%edx,)": 1,
                "addb %al, (%eax);addb %al, (%eax);testb $-, %al;orl $, %eax;addl %edi, (%ebx,%edx,)": 1,
                "incl (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, (%esp,%edx,)": 1,
                "addl %edi, %eax;rorl %cl, ;addb %al, (%eax);addb %al, (%eax);addb %bh, %bh": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);sbbb %dl, %ah": 1,
                "addb %al, (%eax);addb %ah, %al;pushl %esp;addl %eax, (%ecx);decl %esp": 1,
                "addb %ah, %al;pushl %esp;addl %eax, (%ecx);decl %esp;xorl (%ecx), %eax": 1,
                "addb %al, (%eax);js - <.text+>;orl $, %eax;addl %edx, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);nop;aam $;addl %edi, -(%eax)": 1,
                "addb %al, (%eax);pushl %es;addb %al, (%eax);addb %ah, (%esi,%edx,);addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %ah, (%esi,%edx,);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (%esi,%edx,);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);aad $;addl %eax, ;addb %al, (%eax);addb %bh, %bh": 1,
                "addl %ebp, (%eax);pushl %edi;addl %eax, (%ecx);pushfl;aad $": 1,
                "addb %al, (%eax);addb %al, (%ebx);addb %al, (%eax);addb %ch, (%eax);popl %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %eax;salc": 1,
                "pushfl;salc;orl $, %eax;addl %esi, (%esi,%edx,);addb %al, (%eax)": 1,
                "movb $-, %ah;orl $, %eax;addl %ecx, %esp;salc;orl $, %eax": 1,
                "addb %al, (%eax);addb %ch, (%eax);popl %edx;addl %eax, (%ecx);sbbb $, %al": 1,
                "popl %edx;addl %eax, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %cl, (%eax);popl %esp": 1,
                "addb %bh, (%eax);popl %esp;addl %eax, (%ecx);js  <.text+>;addl %eax, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%esi);addb %al, (%eax);addb %ah, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, (%edx,%ebx,);orl $, %eax;addl %edx, %eax": 1,
                "addb %al, (%eax);addb %ah, %al;popl %esp;addl %eax, (%ecx);decl %esp": 1,
                "addb %al, (%eax);addb %ch, %al;popl %ebp;addl %eax, (%ecx);nop": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);inb %dx, %al;fisttpl ": 1,
                "addb %al, (%eax);inb %dx, %al;fisttpl ;addl %ecx, (%esp,%ebx,);orl $, %eax": 1,
                "popl %esi;addl %eax, (%ecx);inb %dx, %al;xorl $, %eax;addl %eax, (%ecx)": 1,
                "addb %bl, (%edi,%ebx,);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%edi,%ebx,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %edi;addl %eax, (%ecx);inb %dx, %al;xorl $, %eax;addl %eax, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, (%esp,%ebx,)": 1,
                "addb %al, (%eax);addb %bh, (%esp,%ebx,);addl %eax, -(%eax);fmull ;addb %al, (%eax)": 1,
                "pushl %es;addb %al, (%eax);addb %bl, (%eax);popal;addl %eax, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);lock;fmull ": 1,
                "addb %ah, (%eax);bound (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, %al;bound (%ecx), %eax;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, (%ebp,%ebx,);addl %ebx, -(%ebx);orl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);sbbb %ah, (%ecx,%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);xorb %bl, %dh;orl $, %eax;addl %ebp, (%eax)": 1,
                "addb %al, (%eax);popl %es;addb %al, (%eax);addb %ch, %ah;addl %eax, %gs:(%ecx)": 1,
                "subb $-, %al;orl $, %eax;addl %ebx, (%esp,%edi);addl %eax, (%ecx);decl %esp": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addl $, %eax;addw %ax, (%ecx)": 1,
                "addl $, %eax;addw %ax, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %es;addb %al, (%eax);addb %ch, (%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addl %ecx, (%eax);addl %eax, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);orb %al, %bl;orl $, %eax": 1,
                "addb %al, (%eax);popl %eax;pushl $;addb %al, (%eax);addb %al, (%eax)": 1,
                "movb $, %bh;addb %al, %bh;movb $, %bh;addb %bl, %bh;movb $, %bh": 1,
                "movl $, %ebp;movl $, %ebx;orb $, %al;pushl %eax;movl $, %ebx": 1,
                "retl $;movl %edx, %es;orb $, %al;movb $-, %ch;orb $, %al": 1,
                "movb $-, %ch;orb $, %al;int;retl $;outb %al, %dx": 1,
                "int;retl $;outb %al, %dx;retl $;pushl %edi": 1,
                "retl;orb $, %al;adcb %al, %ah;orb $, %al;popl %edi": 1,
                "orb $, %al;addb $-, %al;orb $, %al;andl %edi, %eax;orb $, %al": 1,
                "leave;orb $, %al;pushl %esp;leave;orb $, %al": 1,
                "orb $, %al;outsb (%esi), %dx;leave;orb $, %al;inb $, %al": 1,
                "movsl (%esi), %es:(%edi);lretl $;orb $, %al;fmulp %st();orb $, %al": 1,
                "addb %ch, -(%ecx);int $;addb %dh, %cl;int $;addb %cl, (%ecx)": 1,
                "orb $, %al;jnp - <.text+>;orb $, %al;lcalll $, $;addb %bh, (%eax)": 1,
                "ljmpl $, $;addb %al, %cl;fisttpl (%eax,%eax);incl %edx;fmull (%eax,%eax)": 1,
                "jecxz  <.text+>;addb %bh, %al;jecxz  <.text+>;addb %bl, (%edx);inb $, %al": 1,
                "addb %bl, -(%edi);ljmpl $, $;adcl %ebx, %ebp;orb $, %al;incl %ebx": 1,
                "orb $, %al;cmpb %ch, %ch;orb $, %al;pushl %ecx;inl %dx, %eax": 1,
                "orb $, %al;lretl $;addb %ch, %bh;inl %dx, %eax;orb $, %al": 1,
                "pushl %esi;outl %eax, %dx;orb $, %al;subl $, %edi;addb %ch, -(%edx)": 1,
                "outl %eax, %dx;orb $, %al;fucomi %st();orb $, %al;repne  outl %eax, %dx": 1,
                "xorl $, %ebx;addb %al, %al;rep  orb $, %al;cmpb $-, %al;orb $, %al": 1,
                "orb $, %al;pushl %ebx;hlt;orb $, %al;pushl $-": 1,
                "orb $, %al;calll -;cmpb $-, %al;orb $, %al;movl %esi, %edi": 1,
                "stc;orb $, %al;pushl $-;orb $, %al;xchgl %edi, %eax": 1,
                "ja - <.text+>;orb $, %al;nop;cld;orb $, %al": 1,
                "std;orb $, %al;incl %esi;std;orb $, %al": 1,
                "orl $, %eax;addb %dh, -(%esi);pushl %es;orl $, %eax;addb %cl, (%edi)": 1,
                "addb %bl, (%ebx);orl , %ecx;addb %cl, (%esp,%ecx);orl $, %eax;addb %ch, -(%edx)": 1,
                "pushl %ss;orl $, %eax;addb %ch, (%esi);orl $, %eax;addb %bl, -(%edi)": 1,
                "calll  <.text+>;pushl $;movl %edi, %ecx;movb $, -(%ebp);calll  <.text+>": 3,
                "calll  <.text+>;movl (%ebp), %edi;testl %edi, %edi;movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "jmp  <.text+>;leal (%edi), %eax;pushl %eax;leal (%ebp), %ecx;calll  <.text+>": 1,
                "int;int;int;int;int": 5400,
                "int;movl $, %eax;calll  <.text+>;pushl %ecx;pushl %esi": 174,
                "pushl %ecx;pushl %esi;movl %ecx, %esi;calll  <.text+>;movl (%esi), %eax": 2,
                "movl %esi, %ecx;calll  <.text+>;pushl (%esi);calll  <.text+>;movl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;pushl %esi;movl %ecx, %esi;calll  <.text+>;testb $, (%ebp)": 43,
                "calll  <.text+>;movl -(%ebp), %ecx;popl %esi;movl %ecx, %fs:;leave": 81,
                "int;calll  <.text+>;testl %eax, %eax;je  <.text+>;movl (%eax), %edx": 1,
                "decl %eax;je  <.text+>;decl %eax;jne  <.text+>;movl $, (%esi)": 4,
                "calll  <.text+>;cmpl %eax, %edi;popl %ebx;jne  <.text+>;calll  <.text+>": 1,
                "movl %edi, (%eax);calll - <.text+>;movl (%eax), %eax;movl (%eax), %ecx;calll  <.text+>": 1,
                "calll  <.text+>;pushl %ecx;pushl %esi;pushl %edi;movl %ecx, %edi": 6,
                "pushl %esi;pushl %edi;movl %ecx, %edi;leal -(%ebp), %ecx;calll  <.text+>": 8,
                "movl (%esi), %eax;movl (%eax), %eax;pushl (%esi);movl %eax, (%esi);movl (%esi), %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp)": 87,
                "jmp  <.text+>;pushl $;jmp  <.text+>;cmpw %di, (%ebp);jne  <.text+>": 1,
                "calll  <.text+>;orl $-, (%esi);pushl %ebx;leal (%esi), %ecx;calll  <.text+>": 1,
                "pushl %ebx;leal (%esi), %ecx;calll  <.text+>;movl -(%ebp), %ecx;movl %edi, (%esi)": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %esi": 12,
                "pushl %edi;movl %ecx, %esi;calll  <.text+>;movl %eax, %ebx;calll  <.text+>": 1,
                "jl  <.text+>;movl %edi, %ecx;cmpl %edx, %ecx;jle  <.text+>;cmpl %edi, %eax": 1,
                "movl %edi, %edi;pushl %esi;pushl %edi;movl $, %esi;pushl %esi": 1,
                "calll - <.text+>;pushl $;pushl $;pushl $;pushl (%eax)": 24,
                "testl %eax, %eax;je  <.text+>;movl -(%ebp), %eax;movl %eax, (%esi);orl $-, -(%ebp)": 1,
                "pushl %ebx;pushl %edi;xorl %ebx, %ebx;movl %ecx, %edi;movl %ebx, -(%ebp)": 2,
                "testl %eax, %eax;popl %ecx;jne  <.text+>;pushl $;pushl %ebx": 1,
                "pushl (%eax);calll *;testl %eax, %eax;je  <.text+>;movl (%esi), %eax": 3,
                "movl %eax, (%esi);xorl %eax, %eax;cmpl %ebx, (%edi);setne %al;movl %eax, (%esi)": 2,
                "incl %ecx;jmp  <.text+>;xorl %ecx, %ecx;movw %cx, (%eax);xorl %ecx, %ecx": 1,
                "xorl %ecx, %ecx;movw %cx, (%eax);xorl %ecx, %ecx;cmpl %ebx, (%edi);setne %cl": 1,
                "setne %cl;cmpw $, %cx;jge  <.text+>;movl %ecx, %edx;jmp  <.text+>": 1,
                "pushl $;movl %ebx, -(%ebp);calll  <.text+>;popl %ecx;movl %eax, -(%ebp)": 2,
                "movl %ebx, -(%ebp);calll  <.text+>;popl %ecx;movl %eax, -(%ebp);cmpl %ebx, %eax": 2,
                "je  <.text+>;pushl %esi;calll  <.text+>;movl %eax, %esi;jmp  <.text+>": 1,
                "leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>;pushl %esi;leal -(%ebp), %ecx": 1,
                "movl (%esi), %eax;pushl $;movl %esi, %ecx;calll *(%eax);cmpl $, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 153,
                "calll  <.text+>;xorl %ebx, %ebx;incl %ebx;testl %eax, %eax;jne  <.text+>": 1,
                "calll  <.text+>;testw %ax, %ax;je  <.text+>;pushl $;pushl $": 1,
                "calll - <.text+>;jmp  <.text+>;calll - <.text+>;calll  <.text+>;movl (%eax), %ecx": 1,
                "int;movl $, (%ecx);jmp  <.text+>;int;int": 13,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx": 6,
                "orl $, %edx;pushl %eax;movl %edx, (%eax);calll  <.text+>;popl %ebp": 1,
                "pushl %eax;movl %edx, (%eax);calll  <.text+>;popl %ebp;retl $": 1,
                "calll  <.text+>;andl $, (%esi);movl $, (%esi);movl %esi, %eax;popl %esi": 3,
                "movl %ecx, %esi;calll - <.text+>;testb $, (%ebp);je  <.text+>;pushl %esi": 89,
                "cmpl $, (%esi);pushl %edi;movl %ecx, %edi;jne  <.text+>;movl (%esi), %eax": 1,
                "calll *;testw %ax, %ax;jge  <.text+>;calll  <.text+>;movl (%eax), %ecx": 1,
                "testl %eax, %eax;je  <.text+>;cmpl $, (%eax);jne  <.text+>;pushl %ebx": 1,
                "calll  <.text+>;pushl %ecx;pushl $;calll  <.text+>;popl %ecx": 12,
                "movl %eax, -(%ebp);je  <.text+>;calll - <.text+>;movl -(%ebp), %ecx;movl %ecx, %fs:": 12,
                "movl %esi, -(%ebp);movl $, (%esi);movl (%esi), %ecx;testl %ecx, %ecx;movl $, -(%ebp)": 2,
                "leal (%esi), %ecx;movb $, -(%ebp);calll  <.text+>;leal (%esi), %ecx;movb $, -(%ebp)": 229,
                "movl %esi, %ecx;calll  <.text+>;pushl (%esi);movl %esi, %ecx;pushl $": 1,
                "movl %edi, %ecx;calll  <.text+>;pushl (%esi);movl %edi, %ecx;calll  <.text+>": 1,
                "xorl %eax, %eax;popl %edi;incl %eax;popl %esi;movl %ecx, %fs:": 6,
                "jbe  <.text+>;cmpl $, %eax;jne  <.text+>;pushl %ebx;movl %edi, %ecx": 1,
                "movl %eax, (%esi);movl %esi, %eax;popl %esi;movl %ecx, %fs:;leave": 9,
                "subl $, %esp;pushl %esi;movl %ecx, %esi;pushl %edi;leal (%esi), %edi": 1,
                "pushl %eax;movl %edi, %ecx;movl $, -(%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "popl %edi;popl %esi;leave;retl;int": 23,
                "calll  <.text+>;pushl $;movl %esi, %ecx;calll  <.text+>;xorl %eax, %eax": 8,
                "leal (%esi), %ecx;jne  <.text+>;xorl %edi, %edi;incl %edi;pushl %edi": 1,
                "calll  <.text+>;testl %eax, %eax;movl %edi, %ecx;je  <.text+>;pushl $": 1,
                "movl %ecx, %esi;pushl $;pushl $;pushl $;movl %esi, -(%ebp)": 17,
                "pushl %edi;movl %ecx, %esi;leal (%esi), %eax;pushl %eax;movl $, %edi": 2,
                "addl $, %esi;pushl %esi;pushl %edi;pushl %ebx;calll  <.text+>": 5,
                "xorl %ecx, %ecx;cmpl %ecx, (%esi);movl %eax, -(%ebp);setne %cl;xorl %edx, %edx": 1,
                "testl %eax, %eax;jle  <.text+>;cmpl %edx, %ecx;jl  <.text+>;movl %edx, %ecx": 1,
                "cmpl %edx, %ecx;jl  <.text+>;movl %edx, %ecx;jmp  <.text+>;xorl %ecx, %ecx": 1,
                "cmpl %eax, (%esi);setne %al;andl $, (%edi);movl %eax, (%edi);popl %edi": 1,
                "calll  <.text+>;movl $, %edi;pushl %edi;leal (%esi), %ecx;movb $, -(%ebp)": 9,
                "movl %ecx, %esi;calll  <.text+>;testl %eax, %eax;je  <.text+>;pushl %ebx": 1,
                "calll  <.text+>;xorl %edi, %edi;leal -(%ebp), %ecx;movl %edi, -(%ebp);calll  <.text+>": 4,
                "pushl $;calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl (%esi), %eax": 3,
                "testl %eax, %eax;je  <.text+>;pushl $;jmp  <.text+>;cmpl %edi, (%esi)": 2,
                "je  <.text+>;pushl $;jmp  <.text+>;pushl $;leal (%esi), %ecx": 5,
                "pushl %eax;calll  <.text+>;pushl %eax;leal (%esi), %ecx;movb $, -(%ebp)": 6,
                "movl -(%eax), %eax;cmpl $, %eax;movl $, %ebx;jle  <.text+>;pushl $": 1,
                "pushl %ecx;pushl %eax;calll  <.text+>;pushl -(%ebp);movl $, %ebx": 1,
                "calll  <.text+>;pushl %edi;pushl %ebx;movl %esi, %ecx;calll  <.text+>": 1,
                "xorl %eax, %eax;cmpl %eax, (%ecx);je  <.text+>;pushl $;jmp  <.text+>": 1,
                "movl (%esi), %ecx;cmpl %eax, (%ecx);jne  <.text+>;pushl $;jmp  <.text+>": 1,
                "xorl %eax, %eax;popl %edi;incl %eax;popl %ebx;jmp  <.text+>": 4,
                "pushl -(%ebp);movl %esi, %ecx;pushl -(%ebp);pushl -(%ebp);pushl %edi": 4,
                "leal (%esi), %ecx;calll  <.text+>;calll  <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %edi;pushl $;calll  <.text+>;movl (%esi), %ecx;calll  <.text+>": 2,
                "int;int;calll  <.text+>;retl $;int": 2,
                "calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl (%esi), %ecx;pushl $": 1,
                "movl (%esi), %ecx;pushl $;calll  <.text+>;xorl %ecx, %ecx;cmpl %edi, (%eax)": 1,
                "movl %ecx, (%esi);movl %esi, %ecx;je  <.text+>;pushl $;jmp  <.text+>": 1,
                "calll  <.text+>;subl $, %esp;movl , %eax;pushl %esi;pushl %edi": 3,
                "xorl %edi, %edi;movl %edi, -(%ebp);movl $, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 2,
                "calll  <.text+>;pushl (%ebp);leal (%esi), %ecx;calll  <.text+>;movl %esi, %eax": 1,
                "calll  <.text+>;subl $, %esp;pushl %ebx;pushl %esi;movl %ecx, %esi": 18,
                "calll  <.text+>;popl %edi;movl -(%ebp), %ecx;leal (%esi), %eax;popl %esi": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>": 18,
                "pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;pushl %ebx;pushl $": 5,
                "calll  <.text+>;movl %eax, %esi;pushl $;leal -(%ebp), %eax;pushl %eax": 9,
                "leal (%edi), %eax;pushl $;pushl %eax;calll  <.text+>;addl $, %esp": 1,
                "movl %ecx, %esi;calll  <.text+>;pushl $;pushl $;movl %esi, %ecx": 1,
                "movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>;xorl %eax, %eax": 3,
                "pushl %edi;movl %ebx, %ecx;movb $, -(%ebp);calll  <.text+>;pushl %edi": 12,
                "addl $, %esp;leal (%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx": 3,
                "int;int;int;xorl %eax, %eax;cmpl $, (%ecx)": 1,
                "movl %ecx, %esi;movl %esi, -(%ebp);movl $, (%esi);movl (%esi), %ecx;andl $, -(%ebp)": 3,
                "incl %edi;cmpl $, (%eax);je  <.text+>;movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl %edi, %eax": 1,
                "movl %edi, %eax;popl %edi;popl %esi;retl;int": 2,
                "decl %eax;jne  <.text+>;cmpl %edi, (%esi);je  <.text+>;pushl ": 1,
                "jne  <.text+>;cmpl %edi, (%esi);je  <.text+>;pushl ;calll  <.text+>": 1,
                "calll  <.text+>;leal (%esi), %ebx;cmpl %edi, (%ebx);movl %edi, (%esi);je  <.text+>": 1,
                "pushl $;calll  <.text+>;movl %edi, (%ebx);jmp  <.text+>;cmpl %edi, (%esi)": 1,
                "movl (%esi), %ecx;pushl %edi;pushl $;calll  <.text+>;movl (%esi), %esi": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp)": 27,
                "negl %eax;sbbl %eax, %eax;negl %eax;retl;int": 2,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx;pushl %esi;movl (%eax), %esi": 1,
                "movl %ebx, %ecx;calll  <.text+>;testl $, %eax;je  <.text+>;movl (%esi), %eax": 1,
                "calll  <.text+>;testl $, %eax;je  <.text+>;movl (%esi), %eax;movl (%edi), %ecx": 1,
                "movl (%edi), %ecx;movl %ecx, (%esi);movl %eax, (%edi);popl %edi;popl %esi": 1,
                "pushl %esi;pushl %edi;movl %ecx, %esi;calll  <.text+>;pushl $": 2,
                "pushl %ebx;xorl %ecx, %ecx;pushl %ecx;xorl %eax, %eax;pushl %eax": 1,
                "pushl $;pushl %ebx;movl %edi, %ecx;calll *(%edx);testl %eax, %eax": 1,
                "calll *(%edx);testl %eax, %eax;je  <.text+>;cmpl %ebx, %edi;jne  <.text+>": 1,
                "pushl $;movl %esi, %ecx;calll  <.text+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %eax;movl %esi, %ecx;calll - <.text+>;pushl $;leal -(%ebp), %eax": 2,
                "movl %edi, (%eax);movl (%esi), %eax;movl %edi, (%eax);calll  <.text+>;movl (%eax), %ecx": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl %edi, %eax;jmp  <.text+>": 1,
                "jne  <.text+>;movl (%esi), %ecx;pushl $;calll  <.text+>;cmpl %ebx, %eax": 1,
                "pushl $;calll  <.text+>;cmpl %ebx, %eax;je  <.text+>;movl (%eax), %edx": 1,
                "movl (%esi), %ecx;calll  <.text+>;movl (%esi), %ecx;calll  <.text+>;pushl %ebx": 1,
                "leal (%esi), %eax;pushl %eax;movl $, %edi;pushl %edi;pushl (%ebp)": 2,
                "movl $, %edi;pushl %edi;pushl (%ebp);calll  <.text+>;leal (%esi), %eax": 2,
                "pushl %edi;pushl (%ebp);calll  <.text+>;addl $, %esi;pushl %esi": 1,
                "pushl %esi;pushl $;pushl (%ebp);calll  <.text+>;popl %edi": 1,
                "testl %eax, %eax;je  <.text+>;movl (%esi), %ecx;subl $, %ecx;je  <.text+>": 2,
                "pushl %esi;movl %ecx, %esi;movl %esi, -(%ebp);movl $, (%esi);pushl (%esi)": 6,
                "movl %edi, %edi;pushl %esi;pushl %edi;movl %ecx, %edi;calll  <.text+>": 6,
                "movl (%eax), %ecx;calll  <.text+>;movl %eax, %esi;testl %esi, %esi;je  <.text+>": 1,
                "xorl %eax, %eax;incl %eax;cmpl %eax, (%edi);jne  <.text+>;movl %eax, (%esi)": 1,
                "movl %ecx, %ebx;cmpw $, (%ebx);jbe  <.text+>;pushl $;jmp  <.text+>": 2,
                "movzwl (%eax), %ecx;pushl %esi;pushl %ecx;movzwl (%eax), %ecx;pushl %ecx": 2,
                "calll  <.text+>;popl %edi;popl %esi;jmp  <.text+>;pushl $": 2,
                "calll  <.text+>;movl (%esi), %eax;popl %ecx;leal (%esi), %edi;pushl %edi": 2,
                "movl (%esi), %eax;popl %ecx;leal (%esi), %edi;pushl %edi;movw %bx, (%edi)": 2,
                "popl %ecx;leal (%esi), %edi;pushl %edi;movw %bx, (%edi);movl (%eax), %ecx": 2,
                "movl (%ecx), %edx;leal (%eax,%eax,), %eax;shll $, %eax;addl (%esi), %eax;pushl %eax": 3,
                "pushl %ebx;movl %esi, %ecx;calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 3,
                "movl (%edi), %ecx;cmpl %ebx, -(%ecx);jne  <.text+>;pushl %ebx;pushl %ebx": 1,
                "jne  <.text+>;pushl $;pushl %ebx;pushl $;pushl %ebx": 9,
                "leal -(%ebp), %ecx;calll  <.text+>;xorl %ecx, %ecx;incl %ecx;cmpl %ecx, %eax": 1,
                "movl %esi, %ecx;calll - <.text+>;leal -(%ebp), %ecx;movb %bl, -(%ebp);calll - <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %ebx;movl %esi, %ecx": 1,
                "pushl %eax;calll *(%ecx);movl (%esi), %eax;movl (%eax), %ecx;pushl %edi": 1,
                "popl %ecx;movl %eax, (%esi);je  <.text+>;movw $, (%esi);movw $, (%eax)": 2,
                "movl -(%ebp), %eax;movl (%eax), %ecx;pushl %eax;calll *(%ecx);pushl ": 1,
                "pushl ;movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl (%edi), %edi": 2,
                "pushl %ecx;pushl $;pushl %edi;calll *(%eax);testl %eax, %eax": 2,
                "cmpl $, (%esi);sete %al;andl $, (%esi);movb %al, (%esi);calll  <.text+>": 1,
                "testl %eax, %eax;movw $, (%esi);je  <.text+>;pushl $;pushl %ebx": 2,
                "pushl $;pushl %ebx;calll *%edi;jmp  <.text+>;xorl %eax, %eax": 2,
                "calll *%edi;jmp  <.text+>;xorl %eax, %eax;popl %esi;popl %edi": 2,
                "jmpl *(%eax);int;int;int;int": 16,
                "xorl %eax, %eax;cmpl %eax, (%ebp);jne  <.text+>;pushl %eax;pushl %eax": 1,
                "pushl %edi;movl %ecx, %edi;leal (%edi), %eax;pushl %eax;movl $, %esi": 1,
                "leal (%edi), %ecx;testl %ecx, %ecx;je  <.text+>;cmpl $, (%ecx);je  <.text+>": 1,
                "pushl %esi;pushl %ebx;calll  <.text+>;popl %edi;popl %esi": 2,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);pushl %esi;movl %eax, -(%ebp);movl %ecx, %esi": 2,
                "je  <.text+>;movl %ebx, (%esi);calll  <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %eax;leal (%esi), %ecx;calll  <.text+>;movl (%esi), %eax;movl %ebx, (%eax)": 2,
                "je  <.text+>;pushl %edi;pushl $;movl %esi, %ecx;calll  <.text+>": 4,
                "pushl %eax;movb $, -(%ebp);calll  <.text+>;leal (%esi), %ecx;pushl %eax": 2,
                "movl (%esi), %eax;movl %ebx, (%eax);calll  <.text+>;movl (%eax), %ecx;calll  <.text+>": 1,
                "calll  <.text+>;movl (%eax), %ecx;calll  <.text+>;leal -(%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "calll *%edi;movl %eax, -(%ebp);movl $, -(%ebp);jmp  <.text+>;calll *": 2,
                "popl %ecx;popl %ecx;pushl $;leal -(%ebp), %ecx;movw %bx, (%eax)": 3,
                "movl %esi, %ecx;calll - <.text+>;testl %eax, %eax;leal -(%ebp), %ecx;movb $, -(%ebp)": 2,
                "pushl -(%ebp);calll *;leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx": 2,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl -(%ebp), %ecx;pushl -(%ebp)": 2,
                "addl $, %ecx;calll  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>": 2,
                "calll  <.text+>;orl $-, -(%ebp);calll  <.text+>;movl (%eax), %ecx;calll  <.text+>": 8,
                "incl %edi;movl %edi, %eax;jmp  <.text+>;pushl %edi;movl %esi, %ecx": 2,
                "xorl %eax, %eax;popl %edi;movl -(%ebp), %ecx;popl %esi;movl %ecx, %fs:": 2,
                "calll *;pushl %eax;movl %esi, %ecx;calll  <.text+>;popl %esi": 6,
                "movl %esi, %ecx;calll  <.text+>;popl %esi;popl %ebp;retl $": 13,
                "pushl %eax;pushl (%ecx);calll  <.text+>;popl %ebp;retl $": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl (%ebp)": 25,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ecx)": 2,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %eax;movl -(%eax), %edx;pushl %esi": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl -(%eax), %edx;pushl %esi;pushl (%ebp)": 1,
                "movl (%ecx), %esi;pushl (%ebp);pushl %edx;pushl %eax;calll *(%esi)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 108,
                "calll  <.text+>;fldl (%eax);fstpl (%esi);movl (%eax), %eax;movl %eax, (%esi)": 2,
                "xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax;pushl (%ebp)": 3,
                "movl $, (%esi);xorl %edi, %edi;xorl %ebx, %ebx;cmpl %edi, (%esi);movl $, -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;movl (%ebp), %esi;pushl -(%ebp)": 1,
                "movl (%esi), %eax;pushl $;movl %esi, %ecx;calll *(%eax);leal -(%ebp), %ecx": 1,
                "cmpl $, (%ecx);jle  <.text+>;pushl (%ecx);calll *;xorl %eax, %eax": 1,
                "jle  <.text+>;movl (%esi), %eax;addl $, %eax;movl -(%eax), %ecx;cmpl %ecx, (%ebp)": 1,
                "addl $, %ecx;cmpl %ecx, (%ebp);jg  <.text+>;movl (%eax), %ecx;cmpl %ecx, (%ebp)": 1,
                "calll  <.text+>;pushl $;movl %eax, %edi;calll  <.text+>;testl %eax, %eax": 1,
                "leal (%esi), %ebx;calll *;movl (%ebp), %ecx;pushl %ebx;movl %eax, (%ebx)": 1,
                "calll *(%eax);movl (%esi), %eax;movl (%esi), %ecx;leal (%eax,%eax,), %eax;pushl -(%ecx,%eax,)": 1,
                "pushl $;movl %eax, -(%ebp);calll *%ebx;pushl %eax;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;movl %edi, -(%ebp);calll  <.text+>;xorl %ebx, %ebx;leal -(%ebp), %ecx": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %esi, -(%ebp);pushl $": 1,
                "movl %esi, -(%ebp);pushl $;movb $, -(%ebp);calll  <.text+>;cmpl %ebx, %eax": 1,
                "pushl %eax;movl $, (%eax);movl $, (%edi);calll - <.text+>;movl (%ebp), %ecx": 1,
                "movl (%edi), %edi;pushl $;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;cltd;idivl %edi;movl (%ecx), %ecx;imull %ecx, %eax": 1,
                "idivl %edi;movl %ecx, %edx;imull -(%ebp), %edx;movl -(%ebp), %edi;addl %edx, %eax": 1,
                "cltd;popl %ecx;idivl %ecx;movl -(%ebp), %ecx;pushl (%ebp)": 1,
                "pushl (%ebp);addl %eax, %ecx;movl (%edi), %eax;leal (%ecx,%eax), %eax;movl -(%ebp), %ecx": 1,
                "calll  <.text+>;pushl $;movl (%ebp), %ecx;movl (%ecx), %eax;calll *(%eax)": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;fldl -(%ebp);calll  <.text+>": 2,
                "leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp);movl (%ebp), %eax;pushl (%eax)": 1,
                "pushl %edi;pushl %edi;pushl %ebx;pushl %ebx;pushl -(%ebp)": 6,
                "pushl -(%ebp);calll *%esi;movl -(%ebp), %eax;movl (%eax), %eax;movl -(%ebp), %ecx": 2,
                "movl %edx, -(%ebp);movl -(%eax), %edx;pushl %edx;pushl %eax;calll *(%edi)": 1,
                "pushl %eax;calll *(%edi);pushl -(%ebp);leal -(%ebp), %ecx;calll - <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp)": 3,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl -(%ebp), %edi;incl -(%ebp)": 1,
                "calll  <.text+>;movl -(%ebp), %edi;incl -(%ebp);movl -(%ebp), %eax;addl $, -(%ebp)": 1,
                "movl $, %eax;pushl %eax;pushl $;pushl (%esi);movl %eax, -(%ebp)": 2,
                "pushl (%esi);movl %eax, -(%ebp);movl $, -(%ebp);calll *;movl %esi, %ecx": 1,
                "movl %ecx, %esi;pushl %edi;movl %esi, -(%ebp);calll  <.text+>;fldz": 1,
                "movl %esi, -(%ebp);calll  <.text+>;fldz;movl $, (%esi);fstpl (%esi)": 1,
                "fldz;movl %ebx, (%esi);leal (%esi), %edi;fstpl (%edi);leal (%esi), %eax": 1,
                "fstpl (%edi);leal (%esi), %eax;fldz;movl %ebx, (%edi);fstpl (%eax)": 1,
                "fstl (%edi);movl %eax, (%edi);fstpl (%esi);movl (%edi), %eax;movl %edi, %ecx": 1,
                "movl %edi, %ecx;movl %eax, (%esi);calll  <.text+>;orl $-, (%esi);leal -(%ebp), %ecx": 1,
                "movb %bl, (%esi);movb %bl, (%esi);movl $, (%esi);movb %bl, (%esi);calll  <.text+>": 1,
                "calll  <.text+>;pushl -(%ebp);leal (%esi), %eax;pushl %eax;calll *": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;xorl %edi, %edi;pushl $;movl %edi, -(%ebp)": 1,
                "cmpl %edi, %eax;popl %ecx;je  <.text+>;movl %edi, (%eax);movl $, (%eax)": 1,
                "movl %eax, -(%ebp);jmp  <.text+>;movl %edi, -(%ebp);movl (%esi), %eax;shll $, %eax": 1,
                "leal (%esi), %ecx;cmpl %edx, %eax;movl %eax, (%ecx);jge  <.text+>;movl %edx, (%ecx)": 1,
                "calll *(%eax);movl (%edi), %ebx;pushl $;calll *;pushl %eax": 1,
                "movb $, -(%ebp);calll  <.text+>;movl $, (%ebp);pushl %ebx;pushl -(%ebp)": 1,
                "calll *(%edx);leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;incl (%ebp)": 1,
                "calll  <.text+>;pushl $;cltd;popl %ecx;idivl %ecx": 1,
                "incl %ebx;leal (%esi), %ecx;subl %edx, %ebx;calll  <.text+>;addl %eax, %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;fstpl -(%ebp);xorl %ebx, %ebx": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;pushl %eax;leal (%esi), %ecx": 1,
                "cmpl %eax, (%esi);movl (%edi), %ebx;pushl $;jne  <.text+>;calll *": 1,
                "pushl $;calll *;movl %edi, %ecx;pushl %eax;calll *(%ebx)": 2,
                "jne  <.text+>;pushl $;leal -(%ebp), %ecx;calll  <.text+>;movl (%edi), %ebx": 1,
                "decl %ecx;decl %ecx;leal (%ebx,%eax), %ebx;movl -(%ebp), %eax;incl %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %edx, -(%ebp);movl (%edi), %edx;movl %ecx, -(%ebp)": 1,
                "calll *(%edx);subl $, %esp;movl %esp, %eax;fld;andl $, (%eax)": 1,
                "movl %edi, %ecx;calll *(%eax);movl -(%ebp), %esi;movl %esi, %ecx;calll  <.text+>": 1,
                "pushl %esi;movl %ecx, %esi;pushl %edi;movl (%esi), %edi;xorl %ebx, %ebx": 1,
                "fnstsw %ax;fstp %st();testb $, %ah;jp  <.text+>;incl %ebx": 1,
                "jne - <.text+>;fstp %st();movl (%esi), %ecx;fldl (%ebp);movl (%ebp), %edx": 1,
                "movl %eax, (%ebp);andl $, -(%ebp);testl %eax, %eax;je  <.text+>;pushl (%ebp)": 1,
                "xorl %eax, %eax;movl (%esi), %ecx;movl (%esi), %edx;leal (%ecx,%ecx,), %ecx;movl %eax, (%edx,%ecx,)": 1,
                "leal (%ecx,%ecx,), %ecx;movl %eax, (%edx,%ecx,);incl (%esi);movl (%esi), %eax;leal (%eax,%eax,), %eax": 1,
                "popl %edi;movl %eax, (%esi);popl %esi;popl %ebx;movl %ecx, %fs:": 1,
                "cmpl %ebx, %eax;movl %ebx, -(%ebp);je  <.text+>;pushl $;calll *%edi": 2,
                "jmp  <.text+>;movl %ebx, -(%ebp);orl $-, -(%ebp);pushl $;calll  <.text+>": 7,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;movl $, -(%ebp);je  <.text+>;pushl $": 5,
                "pushl $;calll  <.text+>;popl %ecx;movl %eax, -(%ebp);testl %eax, %eax": 24,
                "pushl %eax;movl (%esi), %eax;addl %ebx, %eax;pushl %eax;movl (%esi), %eax": 1,
                "addl %ebx, %eax;pushl %eax;movl (%esi), %eax;subl %ebx, %eax;pushl %eax": 1,
                "calll - <.text+>;pushl %edi;movl %esi, %ecx;calll - <.text+>;movl (%esi), %edx": 1,
                "calll  <.text+>;movl (%esi), %eax;decl %eax;pushl %eax;movl (%esi), %eax": 4,
                "calll *(%eax);pushl (%esi);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "calll *(%ebx);movl (%esi), %ebx;movl (%esi), %ecx;movl (%esi), %eax;movl (%esi), %edx": 1,
                "movl %edx, -(%ebp);pushl -(%eax);movl (%edi), %edx;pushl %eax;movl %edi, %ecx": 1,
                "pushl %eax;movl %edi, %ecx;calll  <.text+>;movl (%ebp), %eax;cmpl $, %eax": 1,
                "calll  <.text+>;movl (%ebp), %eax;cmpl $, %eax;movl %eax, (%ebp);jl - <.text+>": 2,
                "calll  <.text+>;pushl -(%ebp);movl %edi, %ecx;calll  <.text+>;pushl %ebx": 1,
                "pushl (%esi);leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx;calll  <.text+>": 1,
                "movl (%edi), %eax;pushl %ebx;movl %edi, %ecx;calll *(%eax);movl (%edi), %eax": 2,
                "cmpl %ebx, %ecx;je  <.text+>;movl (%ecx), %eax;pushl $;calll *(%eax)": 6,
                "calll *(%eax);movl -(%ebp), %ecx;popl %edi;popl %esi;cmpl %ebx, %ecx": 1,
                "popl %edi;popl %esi;cmpl %ebx, %ecx;popl %ebx;je  <.text+>": 1,
                "popl %esi;cmpl %ebx, %ecx;popl %ebx;je  <.text+>;movl (%ecx), %eax": 1,
                "pushl %ebx;pushl %esi;movl %ecx, %ebx;pushl %edi;pushl %ebx": 1,
                "movl $, %ebx;jle  <.text+>;movl %esi, %ecx;calll  <.text+>;pushl $": 1,
                "pushl %esi;pushl %edi;movl %ecx, %esi;movb $, -(%ebp);ja  <.text+>": 1,
                "jne - <.text+>;jmp  <.text+>;leal (%esi), %edi;movl %edi, %ecx;calll  <.text+>": 1,
                "leal (%esi), %eax;cmpl $, (%eax);je  <.text+>;andl $, (%eax);movl (%esi), %eax": 1,
                "pushl $;pushl (%esi);calll *;jmp  <.text+>;movl (%esi), %ecx": 1,
                "imull $, %ecx, %ecx;subl $, %esp;addl (%esi), %ecx;movl %ecx, (%ebp);fildl (%ebp)": 1,
                "je  <.text+>;decl %eax;je  <.text+>;movl %esi, %ecx;calll  <.text+>": 1,
                "subl $, %esp;movl %esp, %eax;fstpl (%eax);andl $, (%eax);leal (%esi), %ecx": 2,
                "movl %esp, %eax;fstpl (%eax);andl $, (%eax);leal (%esi), %ecx;calll - <.text+>": 3,
                "decl %ecx;cmpl %ecx, %eax;jge  <.text+>;incl %eax;movl %eax, (%esi)": 1,
                "jmp - <.text+>;fldl ;subl $, %esp;movl %esp, %eax;fstpl (%eax)": 1,
                "movl %ecx, %esi;calll  <.text+>;pushl $;pushl $;pushl (%esi)": 1,
                "popl %esi;retl $;int;int;int": 11,
                "xorl %edi, %edi;xorl %ebx, %ebx;cmpl %edi, (%esi);jle  <.text+>;movl (%esi), %eax": 1,
                "addl $, %edi;cmpl (%esi), %ebx;jl - <.text+>;orl $-, (%esi);leal (%esi), %edi": 1,
                "jl - <.text+>;orl $-, (%esi);leal (%esi), %edi;pushl $;pushl (%edi)": 1,
                "popl %ebx;jmp - <.text+>;int;int;int": 3,
                "fldl -(%ebp);pushl %ecx;pushl %ecx;movl %esi, %ecx;fstpl (%esp)": 1,
                "subl $, %esp;movl %esp, %eax;fstpl (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 1,
                "pushl %ebx;pushl (%edi);calll *;movl %edi, %ecx;calll - <.text+>": 1,
                "leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>;andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "calll  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll *": 3,
                "jbe  <.text+>;xorl %ebx, %ebx;pushl %eax;calll *;testw %bx, %bx": 1,
                "calll - <.text+>;leal (%esi), %ecx;movb $, -(%ebp);calll - <.text+>;leal (%esi), %ecx": 67,
                "calll  <.text+>;pushl -(%ebp);andl $, -(%ebp);movl %edi, %ecx;calll  <.text+>": 1,
                "movl %eax, (%esi);movl $, (%esi);movl $, (%esi);movl %esi, %eax;popl %esi": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl (%esi), %ecx;pushl %edi": 1,
                "movl (%eax), %eax;movl (%eax), %eax;andl $, (%eax);movl %esi, %ecx;popl %esi": 1,
                "calll  <.text+>;leal -(%ebp), %eax;pushl %eax;xorl %eax, %eax;pushl %eax": 1,
                "orl $-, -(%ebp);leal (%esi), %ecx;calll  <.text+>;movl -(%ebp), %ecx;popl %esi": 4,
                "pushl $;pushl %edi;calll  <.text+>;testb $, (%ebp);je  <.text+>": 2,
                "andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal (%ebx), %ecx;calll  <.text+>": 1,
                "movw $, (%eax);calll  <.text+>;movl %eax, -(%ebp);movl -(%ebp), %ecx;xorl %eax, %eax": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;xorl %eax, %eax": 4,
                "xorl %eax, %eax;movw %bx, -(%ebp);movl $, %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 3,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 25,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;movl (%esi), %eax": 1,
                "addl $, %esp;cmpl %ecx, %eax;movw %cx, -(%ebp);movl $, -(%ebp);jne  <.text+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 2,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;orl $, %edi;cmpl %ecx, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);pushl %eax;je  <.text+>;calll *": 1,
                "movl %eax, %ecx;calll  <.text+>;pushl $;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "pushl %esi;pushl %eax;calll  <.text+>;popl %ecx;popl %ecx": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;pushl %esi": 6,
                "je  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;movl $, -(%ebp);jmp  <.text+>": 2,
                "movl $, -(%ebp);movl %ebx, -(%ebp);movl $, %edi;pushl %edi;pushl $-": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl $, -(%ebp)": 1,
                "calll *;jmp  <.text+>;calll *;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl $, %edi;addl %edi, %eax;pushl %eax;calll *%ebx;addl $, %esp": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;testl %eax, %eax;je  <.text+>;pushl %esi": 1,
                "calll  <.text+>;movl %eax, %esi;testl %esi, %esi;je  <.text+>;pushl %ebx": 2,
                "jne - <.text+>;popl %ebx;calll  <.text+>;movl %edi, %ecx;calll - <.text+>": 2,
                "calll - <.text+>;movl %edi, %ecx;calll - <.text+>;cmpl $, %eax;jge  <.text+>": 2,
                "pushl $;pushl (%edi);calll *;pushl %eax;calll  <.text+>": 2,
                "movb $, -(%ebp);calll  <.text+>;movl (%eax), %ecx;calll  <.text+>;cmpl %edi, %eax": 2,
                "jmp  <.text+>;pushl %esi;pushl $;calll  <.text+>;cmpl %edi, ": 2,
                "cmpl %edi, %eax;je  <.text+>;cmpw %di, (%eax);je  <.text+>;movl , %esi": 2,
                "pushl $;movl $, %edi;pushl %edi;pushl (%ebx);calll *%esi": 2,
                "calll  <.text+>;movl %esi, (%eax);pushl $;calll  <.text+>;jmp  <.text+>": 1,
                "calll  <.text+>;movl %eax, %ecx;calll  <.text+>;pushl $;pushl (%ebx)": 3,
                "movl %edi, -(%ebp);calll  <.text+>;pushl $;movl %edi, %ecx;calll  <.text+>": 2,
                "pushl %eax;calll - <.text+>;movl -(%ebp), %ecx;pushl %esi;pushl %eax": 2,
                "pushl %eax;movl %eax, -(%ebp);calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 2,
                "cmpl $, (%eax);pushl $;je  <.text+>;pushl -(%ebp);jmp  <.text+>": 2,
                "calll  <.text+>;movl %ebx, %ecx;movw $, (%eax);calll  <.text+>;movl %edi, ": 2,
                "calll  <.text+>;leal -(%ebp), %ecx;movl %eax, %edi;calll  <.text+>;xorl %ecx, %ecx": 3,
                "leal -(%ebp), %ecx;movl %eax, %edi;calll  <.text+>;xorl %ecx, %ecx;cmpl %ecx, %edi": 2,
                "jne  <.text+>;movl (%ebp), %eax;shrl $, %eax;movzwl %ax, %eax;subl $, %eax": 3,
                "movl (%ebp), %eax;shrl $, %eax;movzwl %ax, %eax;subl $, %eax;je  <.text+>": 3,
                "calll  <.text+>;pushl -(%ebp);movl %esi, %ecx;pushl $-;calll - <.text+>": 1,
                "movl %ecx, (%esi);movl %esi, %ecx;calll *(%eax);pushl (%ebp);movl %esi, %ecx": 3,
                "cmpl %ebx, %eax;je  <.text+>;pushl %eax;movl %esi, %ecx;calll - <.text+>": 2,
                "leal (%esi), %ecx;movl %edi, -(%ebp);movl $, (%esi);calll  <.text+>;orl $-, (%esi)": 1,
                "movl $, (%esi);calll  <.text+>;orl $-, (%esi);movl -(%ebp), %ecx;movl %edi, (%esi)": 1,
                "movl %eax, -(%ebp);movl %ecx, %esi;calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl -(%ebp);calll *": 1,
                "cmpw $, (%eax);popl %ecx;movl %eax, -(%ebp);jne - <.text+>;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);jne - <.text+>;xorl %eax, %eax;movl -(%ebp), %edi;movl (%esi), %ecx": 1,
                "calll  <.text+>;movl -(%ebp), %eax;jmp  <.text+>;xorl %eax, %eax;orl $-, -(%ebp)": 1,
                "pushl %eax;pushl $;pushl -(%ebp);calll *;testl %eax, %eax": 4,
                "pushl %eax;pushl -(%ebp);calll *;testl %eax, %eax;je  <.text+>": 8,
                "testl %eax, %eax;je  <.text+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);ja  <.text+>": 1,
                "leal -(%ebp,%eax,), %eax;cmpw $, (%eax);movl %eax, -(%ebp);jne - <.text+>;leal -(%ebp), %eax": 1,
                "movb $, -(%ebp);calll  <.text+>;leal -(%ebp), %eax;shll $, %ebx;pushl %eax": 1,
                "shll $, %ebx;pushl %eax;movl (%esi), %eax;movl %ebx, %edi;leal (%eax,%edi), %ecx": 2,
                "movl (%esi), %eax;movl %ebx, %edi;leal (%eax,%edi), %ecx;calll  <.text+>;leal -(%ebp), %eax": 2,
                "movl $, (%eax,%edi);movl (%esi), %eax;leal (%eax,%edi), %eax;pushl %eax;leal (%esi), %ecx": 1,
                "cmpl $-, %edi;je  <.text+>;pushl %edi;calll - <.text+>;movl (%esi), %eax": 1,
                "je  <.text+>;pushl %edi;calll - <.text+>;movl (%esi), %eax;movl %edi, (%esi)": 1,
                "addl $, %eax;leal (%esi), %ecx;pushl %eax;calll  <.text+>;leal -(%ebp), %ecx": 2,
                "subl %eax, %edi;decl %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll  <.text+>;movl %eax, %edi;pushl %edi;pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "testl %eax, %eax;je  <.text+>;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;pushl (%esi);calll *": 2,
                "movb $, -(%ebp);calll  <.text+>;pushl (%esi);calll *;pushl %eax": 2,
                "cmpl %ebx, (%edi,%eax);je  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;movl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;movl %ebx, -(%ebp);calll  <.text+>;addl $, %eax": 1,
                "calll  <.text+>;movl (%esi), %eax;movl $, (%edi,%eax);movl (%esi), %eax;leal (%edi,%eax), %eax": 1,
                "leal -(%ebp), %ecx;movb %al, -(%ebp);calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 3,
                "pushl %eax;calll  <.text+>;pushl $;leal -(%ebp), %ecx;calll  <.text+>": 2,
                "calll - <.text+>;cmpl $-, %eax;movl %eax, -(%ebp);jne  <.text+>;pushl -(%ebp)": 2,
                "calll - <.text+>;movl %eax, -(%ebp);pushl -(%ebp);movl %esi, %ecx;calll - <.text+>": 2,
                "calll  <.text+>;movl $, (%eax);leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx": 2,
                "jle  <.text+>;pushl %esi;movl %edi, %ecx;calll - <.text+>;cmpl %eax, -(%ebp)": 2,
                "incl %esi;calll - <.text+>;cmpl %eax, %esi;jl - <.text+>;jmp  <.text+>": 2,
                "int;int;jmp - <.text+>;int;int": 12,
                "movl , %esi;pushl $;pushl $;pushl (%ebx);calll *%esi": 1,
                "calll - <.text+>;movl -(%ebp), %eax;movl %esi, (%eax);calll  <.text+>;pushl $": 1,
                "movl %esi, (%eax);calll  <.text+>;jmp  <.text+>;cmpw %di, (%eax);je  <.text+>": 1,
                "calll - <.text+>;pushl (%esi);movl %esi, %ecx;calll - <.text+>;jmp  <.text+>": 1,
                "movb $, -(%ebp);calll  <.text+>;leal -(%ebp), %eax;pushl %eax;movl (%esi), %eax": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);jne  <.text+>;calll - <.text+>;popl %ebp": 3,
                "testl %eax, %eax;jle  <.text+>;leal -(%ebp), %eax;pushl %esi;pushl %eax": 1,
                "calll *;movl -(%ebp), %ecx;popl %edi;popl %esi;calll  <.text+>": 2,
                "movl -(%ebp), %ecx;popl %edi;popl %esi;calll  <.text+>;leave": 8,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *": 15,
                "pushl (%ebp);calll *;popl %ebp;retl $;int": 9,
                "pushl %ebx;leal -(%ebp), %edx;pushl %edx;leal -(%ebp), %edx;pushl %edx": 1,
                "leal -(%ebp), %edx;pushl %edx;movl %eax, %esi;movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "pushl -(%ebp);calll *;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);pushl $-;leal -(%ebp), %ecx": 1,
                "je  <.text+>;movl (%ebp), %ecx;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %eax": 9,
                "je  <.text+>;movl , %edi;pushl %esi;pushl %esi;pushl (%ebp)": 1,
                "calll  <.text+>;pushl (%ebp);calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "calll *%ebx;addl $, %esp;cmpl $, %eax;jle  <.text+>;leal -(%ebp,%eax,), %ecx": 2,
                "pushl %esi;pushl %eax;movl %eax, ;calll *%edi;pushl $": 1,
                "movl %esi, -(%ebp);calll *%ebx;testl %eax, %eax;popl %ecx;movl $, %edi": 1,
                "popl %ecx;popl %ecx;jmp  <.text+>;movl , %esi;pushl $": 1,
                "calll *%esi;leal -(%ebp), %eax;pushl %eax;calll *%ebx;addl $, %esp": 2,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %ebx, %ebx;movl $, %edi": 1,
                "cmpl %ebx, %eax;popl %ecx;movl %eax, -(%ebp);je  <.text+>;leal (%esi), %ecx": 1,
                "movl %eax, -(%ebp);je  <.text+>;leal (%esi), %ecx;movl %ecx, -(%ebp);calll  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 40,
                "pushl $;pushl %ebx;pushl %ebx;pushl %ebx;pushl $": 6,
                "pushl %ebx;pushl %ebx;pushl %ebx;pushl $;pushl %edi": 3,
                "pushl $;pushl %eax;movl %ebx, -(%ebp);calll *;testl %eax, %eax": 1,
                "pushl %esi;movb $, -(%ebp);calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movb %bl, -(%ebp);calll  <.text+>;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;cmpl $-, %eax;je  <.text+>;pushl %eax": 3,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx": 2,
                "calll  <.text+>;movl %eax, %esi;cmpl %ebx, %esi;popl %ecx;movl %esi, -(%ebp)": 1,
                "cmpl %ebx, %eax;jne  <.text+>;cmpw %bx, (%esi);movl %esi, %edi;je  <.text+>": 1,
                "jne - <.text+>;jmp  <.text+>;pushl %edi;calll *%esi;movl $, %ebx": 1,
                "calll *%esi;movl $, %ebx;movl %ebx, %ecx;subl %eax, %ecx;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);calll *;movl $, -(%ebp);xorl %ebx, %ebx;cmpl %ebx, -(%ebp)": 1,
                "addl $, %edi;movl (%edi), %esi;jmp  <.text+>;movl %esi, %eax;addl $, %eax": 1,
                "calll  <.text+>;pushl -(%ebp);pushl (%ebp);calll *;testl %eax, %eax": 1,
                "cmpl %ebx, %esi;jne - <.text+>;jmp  <.text+>;pushl (%ebp);movl %edi, %ecx": 1,
                "xorl %esi, %esi;jmp  <.text+>;xorl %esi, %esi;incl %esi;leal -(%ebp), %ecx": 2,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;orl $-, -(%ebp);leal (%ebp), %ecx": 1,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp);je  <.text+>;movl $, -(%ebp)": 1,
                "movb $, -(%ebp);je  <.text+>;calll  <.text+>;jmp  <.text+>;pushl -(%ebp)": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;je  <.text+>;pushl %edi": 10,
                "addl $, -(%ebp);addl $, %esp;cmpl %ebx, -(%ebp);je  <.text+>;cmpl %ebx, (%ebp)": 1,
                "movl %ebx, -(%ebp);pushl %esi;calll  <.text+>;cmpl %ebx, -(%ebp);popl %ecx": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl $;pushl $;leal -(%ebp), %ecx": 5,
                "pushl %edi;calll  <.text+>;pushl $;pushl $;pushl $": 2,
                "incl %eax;incl %eax;cmpw $, (%eax);je - <.text+>;movl %eax, -(%ebp)": 1,
                "pushl %ebx;pushl $;pushl -(%ebp);pushl -(%ebp);calll  <.text+>": 1,
                "pushl $;pushl %esi;calll  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl ;calll  <.text+>;pushl %ebx;calll - <.text+>;pushl %eax": 1,
                "pushl %ebx;calll - <.text+>;pushl %eax;pushl ;calll *": 2,
                "leal -(%ebp), %eax;pushl $;pushl %eax;calll *;pushl -(%ebp)": 3,
                "pushl %eax;calll *;addl $, %esp;pushl %ebx;pushl %ebx": 3,
                "pushl %ebx;pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 3,
                "calll  <.text+>;movl -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %ecx;popl %edi": 2,
                "cmpl $, (%eax);je  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>": 1,
                "calll  <.text+>;movswl %ax, %eax;leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>": 1,
                "pushl %edi;xorl %edi, %edi;movl %ecx, (%eax);movl (%esi), %eax;incl %edi": 1,
                "movl %edi, %ecx;testl %ecx, %ecx;jle  <.text+>;cmpl %edi, %eax;jge  <.text+>": 1,
                "pushl (%esi);movl %eax, (%esi);calll *%edi;cmpl %ebx, (%esi);movl %eax, (%esi)": 1,
                "je  <.text+>;cmpl %ebx, (%esi);je  <.text+>;cmpl %ebx, %eax;je  <.text+>": 2,
                "cmpl %ebx, (%esi);jne  <.text+>;pushl (%esi);calll *;movl %ebx, (%esi)": 1,
                "subl $, %esp;movl , %eax;pushl %ebx;movl %eax, -(%ebp);movl (%ebp), %eax": 17,
                "je  <.text+>;cmpl $, %esi;je  <.text+>;movl %ebx, %ecx;calll - <.text+>": 1,
                "movl -(%ebp), %eax;shrl %eax;shll %eax;pushl %eax;movl %edi, -(%ebp)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl -(%ebp)": 1,
                "testl %eax, %eax;je - <.text+>;pushl -(%ebp);calll  <.text+>;popl %ecx": 1,
                "movl %ecx, %esi;cmpl $, (%esi);jne  <.text+>;calll - <.text+>;andl $, (%esi)": 1,
                "andl $, (%esi);popl %esi;retl;int;int": 3,
                "leal (%eax,%eax), %eax;cmpl $, %eax;jb  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "movl %esi, %ecx;calll - <.text+>;movl (%esi), %eax;leal (%eax,%edi), %ecx;movl %ecx, (%esi)": 1,
                "pushl %esi;movl %ecx, %esi;movl %esi, -(%ebp);pushl (%esi);andl $, -(%ebp)": 1,
                "popl %ecx;movl %esi, %ecx;calll - <.text+>;movl -(%ebp), %ecx;popl %esi": 1,
                "movl %esi, %ecx;calll - <.text+>;movl -(%ebp), %ecx;popl %esi;movl %ecx, %fs:": 11,
                "je  <.text+>;incl %esi;cmpl (%ebx), %esi;jb - <.text+>;movl (%ebx), %eax": 2,
                "shll $, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 2,
                "popl %edi;pushl (%ebp);movl %ebx, %ecx;calll - <.text+>;movl (%ebx), %ecx": 2,
                "leal (%esi,%esi), %eax;pushl %eax;calll  <.text+>;testl %eax, %eax;popl %ecx": 1,
                "shll $, %esi;pushl (%eax,%esi);calll *;movl (%ebx), %edx;movl (%edx,%esi), %esi": 1,
                "andw $, (%eax);movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %esi;calll *;popl %esi;retl;int": 2,
                "cmpl $, (%esi);jne  <.text+>;movl $, (%esi);xorl %eax, %eax;popl %esi": 1,
                "movl %eax, %ecx;movl %ecx, %edx;shrl $, %ecx;pushl %edi;movl %ebx, %edi": 1,
                "jne  <.text+>;cmpw $, (%ebx);je  <.text+>;cmpl $, %eax;jbe  <.text+>": 1,
                "movl (%esi), %eax;movl (%esi), %edi;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "popl %ecx;popl %ecx;jmp  <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "calll - <.text+>;cmpl %edi, %eax;leal -(%ebp), %ecx;jne  <.text+>;orl $-, -(%ebp)": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>": 6,
                "movb $, -(%ebp);calll - <.text+>;jmp  <.text+>;pushl %ebx;leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %esi;cmpw %di, (%esi);je  <.text+>;pushl %esi;leal -(%ebp), %ecx": 1,
                "calll *;popl %ecx;leal (%esi,%eax,), %esi;jmp - <.text+>;pushl %ebx": 1,
                "movl %edi, -(%ebp);jmp - <.text+>;pushl -(%ebp);calll  <.text+>;pushl -(%ebp)": 1,
                "calll  <.text+>;movl (%esi), %eax;pushl %ebx;decl %eax;pushl %eax": 1,
                "pushl $;popl %ecx;idivl %ecx;movl (%esi), %ebx;movl %edx, %ecx": 1,
                "movl %eax, -(%ebp);leal (%ebx), %eax;pushl %eax;movl %eax, (%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;movl %eax, (%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "calll  <.text+>;xorl %eax, %eax;incl %eax;movl %ebx, %ecx;shll %cl, %eax": 1,
                "cltd;movl %ebx, %ecx;idivl %ecx;movl (%esi), %ecx;imull %eax, %ecx": 1,
                "incl %edx;imull (%esi), %edx;pushl %eax;incl %edx;pushl %edx": 1,
                "incl %eax;pushl %eax;movl %edi, %ecx;calll  <.text+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);movl %edi, %ecx;calll  <.text+>;movl (%edi), %eax;pushl $": 1,
                "calll  <.text+>;movl -(%ebp), %ebx;movl %ebx, %ecx;calll  <.text+>;movl -(%ebp), %ecx": 1,
                "movl %ebx, %ecx;calll *(%eax);movl -(%ebp), %ecx;testl %ecx, %ecx;popl %edi": 1,
                "movsl (%esi), %es:(%edi);calll - <.text+>;subl $, %esp;movl %esp, %edi;leal -(%ebp), %esi": 1,
                "movl %ecx, %esi;idivl (%esi);movl %eax, %ecx;movl (%ebp), %eax;imull $, %ecx, %ecx": 1,
                "idivl (%esi);addl %eax, %ecx;cmpl $, %ecx;jge  <.text+>;xorl %eax, %eax": 1,
                "calll - <.text+>;popl %esi;popl %ebp;retl $;int": 12,
                "pushl %eax;movl %esi, %ecx;calll  <.text+>;pushl %eax;pushl -(%ebp)": 1,
                "cmpl %ebx, (%eax);je  <.text+>;movl (%edi), %eax;xorl %ecx, %ecx;cmpl $, %eax": 1,
                "testl %eax, %eax;jne  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;pushl $": 1,
                "calll  <.text+>;pushl -(%ebp);leal -(%ebp), %eax;pushl -(%ebp);pushl %eax": 7,
                "pushl %ebx;pushl -(%ebp);pushl $;calll  <.text+>;movl -(%ebp), %ecx": 1,
                "calll  <.text+>;movl -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp)": 1,
                "jmp  <.text+>;pushl %esi;leal (%edi), %ecx;calll  <.text+>;jmp  <.text+>": 1,
                "movl %edi, %ecx;calll - <.text+>;pushl (%esi);calll  <.text+>;testl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movw %bx, -(%ebp);calll  <.text+>;testl %eax, %eax": 1,
                "movl $, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx;orl $-, -(%ebp);calll  <.text+>": 2,
                "calll  <.text+>;leal -(%ebp), %ecx;orl $-, -(%ebp);calll  <.text+>;pushl %esi": 1,
                "jne  <.text+>;movl (%ebp), %eax;movl $, (%eax);jmp  <.text+>;movl (%ebp), %eax": 1,
                "pushl %esi;pushl %edi;calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 2,
                "pushl %edi;calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;andl $, -(%ebp)": 2,
                "movl (%ebp), %edi;pushl (%ebp);movl %edi, %ecx;calll  <.text+>;pushl %eax": 1,
                "calll *;testl %eax, %eax;je  <.text+>;cmpl $, (%edi);je  <.text+>": 1,
                "pushl %ecx;pushl %eax;movl %esi, %ecx;calll  <.text+>;pushl $": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;xorl %esi, %esi;incl %esi": 2,
                "jmp  <.text+>;leal (%ebp), %ecx;calll  <.text+>;leal (%ebp), %ecx;movb $, -(%ebp)": 1,
                "calll  <.text+>;leal (%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;jmp  <.text+>": 3,
                "movl %esi, (%eax);leal -(%ebp), %eax;pushl %eax;leal (%ebx), %ecx;calll  <.text+>": 2,
                "pushl $;leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl (%ebp), %esi": 1,
                "cmpl $, (%esi);je  <.text+>;calll - <.text+>;pushl %eax;pushl ": 1,
                "testb %al, %al;je  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;leal (%ebp), %ecx": 1,
                "jne  <.text+>;pushl $;leal (%ebp), %ecx;calll  <.text+>;cmpl $-, %eax": 1,
                "calll  <.text+>;popl %ecx;popl %ecx;pushl $;xorl %edi, %edi": 1,
                "pushl $;xorl %edi, %edi;pushl %edi;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;pushl -(%ebp);movb $, -(%ebp)": 5,
                "leal -(%ebp), %ecx;calll  <.text+>;pushl $;pushl %edi;pushl $": 1,
                "calll  <.text+>;movl (%ebp), %ecx;pushl %esi;calll  <.text+>;movl (%ebp), %ecx": 2,
                "calll  <.text+>;movl (%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp)": 2,
                "calll  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl (%ebp), %ebx": 3,
                "movl %eax, %esi;cmpl $-, %esi;jne  <.text+>;pushl -(%ebp);movl %edi, %ecx": 1,
                "cmpl $-, %esi;jne  <.text+>;pushl -(%ebp);movl %edi, %ecx;pushl %eax": 1,
                "movl %eax, (%ebp);movl %esi, (%ebx);calll - <.text+>;cmpl $-, (%ebp);movl %esi, (%eax)": 1,
                "movl (%ebp), %esi;pushl %esi;movl %edi, %ecx;calll - <.text+>;leal -(%ebp), %eax": 1,
                "pushl %edi;leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>;xorl %ebx, %ebx": 2,
                "calll  <.text+>;cmpl %ebx, %esi;movl , %edi;je  <.text+>;pushl (%esi)": 1,
                "je  <.text+>;addl $-, %eax;pushl %eax;calll *;andl $, (%esi)": 1,
                "calll *;andl $, (%esi);popl %ecx;popl %esi;popl %ebp": 1,
                "pushl %ebx;pushl %esi;calll - <.text+>;testl %eax, %eax;je  <.text+>": 4,
                "je  <.text+>;movl (%esi), %ecx;movl (%edi), %eax;pushl $;incl %ecx": 1,
                "pushl %ecx;pushl (%ebp);pushl $;pushl %edi;calll *(%eax)": 1,
                "calll *(%eax);movl (%esi), %eax;testl %eax, %eax;je  <.text+>;movw (%ebp), %cx": 1,
                "movl %eax, (%ebp);jne  <.text+>;testl $, (%ebp);jne  <.text+>;cmpl $, (%ebp)": 2,
                "je  <.text+>;pushl $;pushl %edi;calll *;popl %ecx": 3,
                "popl %ecx;jmp  <.text+>;pushl %ebx;pushl %esi;movl , %esi": 1,
                "pushl %edi;calll *%esi;popl %ecx;popl %ecx;pushl $": 2,
                "popl %esi;popl %ebx;popl %edi;popl %ebp;retl $": 4,
                "addl $, %esp;popl %ebx;popl %edi;popl %esi;popl %ebp": 1,
                "pushl %esi;movl (%ebp), %esi;xorl %ebx, %ebx;pushl %edi;leal -(%ebp), %ecx": 1,
                "xorl %ebx, %ebx;pushl %edi;leal -(%ebp), %ecx;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll  <.text+>": 2,
                "subl (%esi), %ecx;movl $, %esi;movl %ecx, %eax;divl %esi;pushl $": 1,
                "cmpw $, -(%ebp);movl , %esi;jle  <.text+>;movswl -(%ebp), %eax;pushl $": 1,
                "jg  <.text+>;cmpw %bx, -(%ebp);jle  <.text+>;cmpw %bx, -(%ebp);jg  <.text+>": 1,
                "pushl %ebx;pushl %ebx;jne  <.text+>;pushl $;jmp  <.text+>": 1,
                "movl (%eax), %esi;pushl %esi;leal (%ebp), %ecx;calll  <.text+>;pushl %esi": 1,
                "pushl %esi;pushl $;movb $-, ;calll  <.text+>;pushl $": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $": 19,
                "testl %esi, %esi;popl %ecx;je  <.text+>;movswl (%ebp), %eax;cmpl $, %eax": 2,
                "addb (%ecx), %al;fstl (%ebx);addl %ebp, %ebp;pushl %ebx;addb (%ecx), %al": 1,
                "std;pushl %ebx;addb (%ecx), %al;orl $, %eax;pushl %esp": 1,
                "leal (%edx,%eax), %edx;popfl;pushl %esp;addb (%ecx), %al;andb (%ebp), %dl": 1,
                "pushl %ebp;addb (%ecx), %al;lodsl (%esi), %eax;pushl %esp;addb (%ecx), %al": 1,
                "addb (%ecx), %al;outb %al, %dx;pushl %esp;addb (%ecx), %al;adcl $, %eax": 1,
                "movswl (%ebp), %eax;cmpl $, %eax;jg  <.text+>;je  <.text+>;decl %eax": 1,
                "decl %eax;je  <.text+>;pushl $;pushl %esi;pushl $": 1,
                "pushl %eax;pushl ;calll  <.text+>;testw %ax, %ax;je  <.text+>": 3,
                "je  <.text+>;pushl -(%ebp);pushl -(%ebp);calll - <.text+>;testl %eax, %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl %ebx;calll *": 2,
                "pushl %eax;pushl $;pushl %ebx;calll *;pushl %edi": 1,
                "calll  <.text+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "movw -(%ebp), %ax;popl %ebx;calll  <.text+>;leave;retl $": 1,
                "pushl %edi;calll *%esi;movswl (%ebp), %ecx;subl %eax, %ecx;andw $, (%ebx,%ecx,)": 1,
                "andw $, (%ebx,%ecx,);pushl %edi;pushl %ebx;calll *;addl $, %esp": 1,
                "je  <.text+>;jmp  <.text+>;cmpw $, (%ebx);jne  <.text+>;movw $, (%ebx)": 1,
                "idivl %ecx;movzwl (%edi), %eax;pushl %edx;pushl %eax;movzwl (%edi), %eax": 1,
                "pushl %esi;calll *%ebx;popl %ecx;leal (,%eax,), %eax;pushl %eax": 1,
                "leal (,%eax,), %eax;pushl %eax;calll *;addl $, %esp;jmp  <.text+>": 1,
                "pushl %eax;calll *;addl $, %esp;jmp  <.text+>;pushl $": 1,
                "calll *;addl (%ebp), %eax;leal (%eax,%eax), %eax;pushl %eax;calll *": 1,
                "calll *;popl %ecx;xorl %eax, %eax;popl %ecx;incl %eax": 1,
                "xorl %eax, %eax;popl %esi;retl;xorl %eax, %eax;incl %eax": 1,
                "cmpl %eax, %ecx;sbbl %eax, %eax;negl %eax;jmp  <.text+>;xorl %eax, %eax": 1,
                "pushl %eax;calll *;cmpl $, %eax;jbe  <.text+>;cmpl $, %eax": 1,
                "pushl %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 2,
                "int;int;movl $, %eax;calll  <.text+>;pushl %esi": 7,
                "pushl $;movl %esi, %ecx;calll  <.text+>;cmpl $-, %eax;movl %esi, %ecx": 1,
                "pushl %esi;calll - <.text+>;jmp  <.text+>;pushl $;calll  <.text+>": 1,
                "movl (%ebp), %eax;jmp  <.text+>;cmpb $, (%eax);je  <.text+>;movl (%eax), %eax": 3,
                "testl %eax, %eax;jne  <.text+>;pushl (%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;xorl %eax, %eax;incl %eax": 3,
                "cmpb $, (%esi);je  <.text+>;pushl %esi;calll  <.text+>;testl %eax, %eax": 1,
                "je  <.text+>;movl (%esi), %esi;testl %esi, %esi;jne - <.text+>;xorl %eax, %eax": 3,
                "movl , %eax;movl %eax, -(%ebp);movl (%ebp), %eax;pushl %ebx;xorl %edx, %edx": 1,
                "cmpl $, %ecx;jne  <.text+>;movb (%edi), %al;andb $, %al;subb $, %al": 1,
                "movb (%edi), %al;andb $, %al;subb $, %al;negb %al;sbbl %eax, %eax": 2,
                "pushl %eax;movl %ebx, -(%ebp);calll *;movl (%esi), %eax;popl %ecx": 1,
                "jne  <.text+>;pushl -(%ebp);movl (%esi), %eax;pushl %esi;calll *(%eax)": 1,
                "pushl -(%ebp);movl (%esi), %eax;pushl %esi;calll *(%eax);addl %eax, %ebx": 1,
                "jne  <.text+>;pushl -(%ebp);movl (%esi), %eax;andl $, -(%ebp);pushl %esi": 1,
                "pushl $;pushl -(%ebp);pushl -(%ebp);pushl $;pushl %esi": 1,
                "pushl -(%ebp);pushl $;pushl %esi;calll *(%eax);pushl -(%ebp)": 1,
                "pushl -(%ebp);calll *%esi;movl , %edi;movl %eax, %esi;addl $, %esp": 1,
                "pushl -(%ebp);pushl %esi;calll  <.text+>;pushl %esi;pushl $": 1,
                "decl %eax;jne  <.text+>;movl (%ebp), %eax;cmpl $, %eax;ja  <.text+>": 1,
                "movl (%ebp), %eax;popl %esi;movl %ecx, %fs:;leave;retl $": 2,
                "pushl %eax;pushl $;pushl -(%ebp);calll *;addl $, %esp": 7,
                "calll  <.text+>;addl $, %esp;popl %esi;retl;int": 1,
                "subl $, %esp;movl , %eax;andl $, -(%ebp);pushl %ebx;movl %eax, -(%ebp)": 2,
                "andl $, -(%ebp);movl %eax, -(%ebp);jmp  <.text+>;pushl $;pushl %ebx": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);jmp  <.text+>;pushl $;pushl %ebx": 1,
                "pushl $;pushl $;calll  <.text+>;movw %bx, ;addl $, %esp": 1,
                "calll  <.text+>;movw %bx, ;addl $, %esp;movw $, (%edi);jmp  <.text+>": 1,
                "movw $, (%edi);jmp  <.text+>;pushl $;pushl %ebx;pushl $": 1,
                "je  <.text+>;cmpw $, -(%ebp);je  <.text+>;movswl -(%ebp), %eax;subl $, %eax": 1,
                "je  <.text+>;decl %eax;jne  <.text+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "je  <.text+>;movl (%eax), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 2,
                "jmp  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;pushl $;leal -(%ebp), %ecx": 5,
                "movswl -(%ebp), %eax;pushl -(%ebp);pushl %eax;calll  <.text+>;testw %ax, %ax": 1,
                "popl %ecx;je  <.text+>;movw %bx, (%edi);orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "addl $, %esp;jmp  <.text+>;pushl (%ebp);calll  <.text+>;jmp  <.text+>": 1,
                "jmp - <.text+>;pushl %esi;pushl $;pushl %ebx;pushl $": 1,
                "pushl $;pushl %ebx;pushl $;pushl %esi;calll  <.text+>": 1,
                "jae  <.text+>;addb (%ecx), %al;movb %ah, (%ebx);addl %edx, (%ebp);addb (%ecx), %al": 1,
                "movl (%ebp), %ebx;movl %eax, -(%ebp);movw (%ebp), %ax;pushl %esi;movl , %esi": 1,
                "cmpl %ebx, %edi;setne %al;movl %eax, -(%ebp);jmp  <.text+>;movw %ax, (%ecx)": 1,
                "pushl %ebx;calll *;xorl %ecx, %ecx;movw %cx, (%eax);movswl (%ebp), %eax": 1,
                "calll *%esi;movswl %ax, %eax;leal (%eax,%edi), %eax;cmpl -(%ebp), %eax;popl %ecx": 2,
                "pushl (%ebp);pushl %ebx;calll *;testl %eax, %eax;popl %ecx": 2,
                "movl -(%ebp), %eax;andw $, -(%ebp,%eax,);popl %ecx;cmpw $, -(%ebp);movl , %esi": 1,
                "pushl %eax;pushl %ebx;calll *%esi;cmpw $, -(%ebp);popl %ecx": 1,
                "pushl %ebx;pushl %ebx;pushl (%ebp);leal -(%ebp), %eax;pushl $": 2,
                "pushl (%ebp);pushl (%ebp);pushl %esi;calll - <.text+>;movl (%esi), %eax": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl %edi;pushl %eax;pushl %esi": 1,
                "pushl %edi;calll *(%eax);pushl %edi;pushl %esi;calll  <.text+>": 1,
                "pushl %edi;pushl %esi;calll  <.text+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "je  <.text+>;cmpb $, %al;je  <.text+>;cmpb $, %al;je  <.text+>": 8,
                "popl %ebx;movl %ecx, %fs:;leave;retl $;pushl $": 1,
                "calll  <.text+>;jmp  <.text+>;pushl $;pushl %ebx;pushl $": 1,
                "leal (%ebp), %ecx;movl %edi, -(%ebp);calll  <.text+>;xorl %eax, %eax;jmp - <.text+>": 1,
                "jne  <.text+>;pushl $;calll - <.text+>;testl %eax, %eax;je  <.text+>": 3,
                "cmpb $, %al;je - <.text+>;movl (%esi), %esi;testl %esi, %esi;jne - <.text+>": 1,
                "pushl %esi;leal (%ebp), %eax;movl %ecx, %esi;pushl %eax;pushl (%esi)": 1,
                "movl %ecx, %esi;pushl %eax;pushl (%esi);calll *;movl (%esi), %esi": 1,
                "movzwl (%ebp), %edx;shll $, %ecx;orl %edx, %ecx;pushl %ecx;pushl %esi": 1,
                "movl %esi, -(%ebp);movl $, (%esi);cmpl $, (%esi);movl $, -(%ebp);jne  <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;cmpl $, (%esi);jne  <.text+>;pushl $": 1,
                "je  <.text+>;pushl %eax;calll *;leal (%esi), %ecx;calll - <.text+>": 1,
                "pushl $;xorl %eax, %eax;popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 5,
                "calll *%edi;testl %eax, %eax;popl %ecx;movl %eax, (%esi);je  <.text+>": 3,
                "movl (%ebp), %eax;andl $, (%esi);movl -(%ebp), %ecx;movl %eax, (%esi);popl %edi": 1,
                "pushl $;leal (%esi), %ecx;calll  <.text+>;xorl %ebx, %ebx;pushl %ebx": 1,
                "leal (%esi), %edi;pushl %edi;calll *;leal (%ebp), %ecx;calll  <.text+>": 1,
                "pushl (%eax);pushl (%eax);leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "leal (%ebp), %ecx;calll  <.text+>;pushl %edi;calll *;cmpl %ebx, (%esi)": 1,
                "je  <.text+>;cmpl %ebx, (%esi);movl %esi, %ecx;je  <.text+>;movl (%esi), %eax": 1,
                "calll  <.text+>;pushl %ebx;pushl $;movl %esi, %ecx;calll  <.text+>": 28,
                "movl %esp, %ebp;cmpl $, (%ebp);je  <.text+>;orl $, (%ecx);jmp  <.text+>": 1,
                "movb $, -(%ebp);movl %esi, %ecx;pushl %eax;calll  <.text+>;leal -(%ebp), %ecx": 1,
                "movb %bl, -(%ebp);calll  <.text+>;movl %esi, %ecx;calll  <.text+>;popl %edi": 1,
                "leal (%ebp), %ecx;movl %ebx, -(%ebp);calll  <.text+>;leal (%ebp), %ecx;calll  <.text+>": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);calll  <.text+>;testl %eax, %eax;je  <.text+>": 2,
                "pushl %esi;movl %ecx, %esi;movl (%ebp), %ecx;movl (%ecx), %eax;testl %eax, %eax": 1,
                "jmp  <.text+>;xorl %eax, %eax;popl %esi;popl %ebp;retl $": 7,
                "calll  <.text+>;subl $, %esp;pushl %esi;pushl %edi;movl %ecx, %esi": 4,
                "movl %ebx, %ecx;movb $, -(%ebp);movl %edi, (%esi);calll  <.text+>;movl %edi, (%esi)": 1,
                "movl %eax, (%esi);calll  <.text+>;movl -(%ebp), %ecx;popl %edi;movl %esi, %eax": 4,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx;movl %ebx, -(%ebp)": 1,
                "movl %esi, %ecx;movl %ebx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);calll - <.text+>": 1,
                "popl %ebx;calll  <.text+>;leave;retl $;movl %ebx, %eax": 1,
                "pushl %edi;movl %esi, %ecx;calll - <.text+>;jmp  <.text+>;pushl (%ebp)": 1,
                "pushl %edi;leal -(%ebp), %ecx;calll  <.text+>;andl $, -(%ebp);leal -(%ebp), %ecx": 5,
                "pushl %ecx;leal -(%ebp), %eax;movl %esp, %ecx;movl %esp, -(%ebp);pushl %eax": 8,
                "testl %eax, %eax;jne  <.text+>;addl $, %ebx;movl %ebx, %ecx;calll  <.text+>": 1,
                "pushl %edi;pushl $;pushl %edi;pushl $;pushl $": 18,
                "leal (%ebx), %ecx;calll  <.text+>;orl $-, -(%ebp);movl $, %esi;pushl $": 1,
                "movl %esi, -(%ebp);calll - <.text+>;cmpl $-, %eax;movl %eax, -(%ebp);je  <.text+>": 1,
                "calll - <.text+>;cmpl $-, %eax;movl %eax, -(%ebp);je  <.text+>;movl %eax, -(%ebp)": 1,
                "je  <.text+>;movl (%eax), %eax;pushl %eax;pushl (%ebp);pushl $": 2,
                "xorl %ebx, %ebx;pushl %ebx;pushl $;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "pushl $;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);leal (%edx), %edi;pushl $": 1,
                "calll  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ebx": 6,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl $": 1,
                "testl %eax, %eax;je - <.text+>;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "movl %ecx, %esi;calll  <.text+>;pushl $;leal (%esi), %ecx;calll - <.text+>": 3,
                "movl (%esi), %eax;leal -(%ebp), %ecx;pushl %ecx;leal (%eax), %ecx;movl %edi, -(%ebp)": 1,
                "pushl %ecx;leal (%eax), %ecx;movl %edi, -(%ebp);calll  <.text+>;orl $-, -(%ebp)": 1,
                "calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl (%esi), %eax": 4,
                "movl %edi, (%eax);movl (%esi), %eax;movl %ebx, (%eax);movl -(%ebp), %eax;movl (%eax), %esi": 1,
                "pushl %edi;calll  <.text+>;pushl %ebx;movl %esi, %ecx;calll  <.text+>": 1,
                "movl %ecx, %edi;calll  <.text+>;movl (%eax), %eax;movl (%eax), %esi;movl (%esi), %eax": 1,
                "leal -(%ebp), %ecx;movl %ebx, -(%ebp);calll - <.text+>;movb $, -(%ebp);calll  <.text+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>": 1,
                "calll  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>": 49,
                "pushl $;pushl %edi;leal -(%ebp), %ecx;calll  <.text+>;testl %eax, %eax": 1,
                "movl (%eax), %ecx;calll  <.text+>;movl (%esi), %ecx;cmpl %ebx, %ecx;je  <.text+>": 1,
                "calll  <.text+>;movl (%esi), %ecx;cmpl %ebx, %ecx;je  <.text+>;calll  <.text+>": 1,
                "testl %ebx, %ebx;je  <.text+>;movzbl (%edi), %eax;andl $, %eax;cmpl $, %eax": 1,
                "pushl %eax;calll *;leal -(%ebp), %eax;pushl $;pushl %eax": 25,
                "pushl $;pushl (%edi);calll *;addl $, %esp;testl %eax, %eax": 2,
                "popl %ecx;je  <.text+>;movl $, -(%ebp);pushl -(%ebp);movzbl (%edi), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;xorl %ebx, %ebx;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "je  <.text+>;movl (%esi), %esi;cmpl %ebx, %esi;je  <.text+>;movl %esi, %ecx": 1,
                "pushl %ecx;andl $, -(%ebp);pushl %ebx;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "calll  <.text+>;cmpl $, (%ebp);jne - <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "pushl %ecx;andl $, -(%ebp);pushl %ebx;pushl %esi;leal -(%ebp), %ecx": 2,
                "leal -(%ebp), %ecx;calll  <.text+>;pushl $;pushl $;leal -(%ebp), %eax": 3,
                "movb $, -(%ebp);calll - <.text+>;pushl %eax;leal -(%ebp), %ecx;movb $, -(%ebp)": 3,
                "movl (%edi), %edi;incl %eax;movl %edi, (%esi);movl %eax, (%esi);movl (%ebp), %edi": 1,
                "je  <.text+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "calll  <.text+>;pushl (%ebx);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "jmp  <.text+>;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl $, %esi": 1,
                "movl $, -(%ebp);calll  <.text+>;movl %eax, -(%ebp);movl (%ebp), %eax;orl $, %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;orl $, %eax;orl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpl %edi, -(%ebp);je  <.text+>;pushl $;movl %ebx, %ecx;calll  <.text+>": 1,
                "je  <.text+>;pushl $;movl %ebx, %ecx;calll  <.text+>;pushl %eax": 1,
                "pushl $;movl %ebx, %ecx;calll  <.text+>;pushl %eax;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;popl %edi;popl %esi;movl %ecx, %fs:;movl -(%ebp), %ecx": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %edi;movl %edi, -(%ebp)": 1,
                "leal (%edi), %ebx;jmp  <.text+>;pushl %esi;calll  <.text+>;testl %esi, %esi": 1,
                "calll  <.text+>;testl %eax, %eax;jne - <.text+>;pushl %esi;calll  <.text+>": 2,
                "jne - <.text+>;pushl %esi;calll  <.text+>;movl %eax, %esi;testl %esi, %esi": 2,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl $;movl %ecx, %esi": 1,
                "pushl $;leal -(%ebp), %ecx;movl $, (%eax);calll  <.text+>;movl (%esi), %ecx": 1,
                "leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>;movl (%esi), %eax;orl $-, -(%ebp)": 1,
                "calll  <.text+>;movl %eax, %ebx;testl %ebx, %ebx;movl %edi, %ecx;pushl %esi": 1,
                "calll  <.text+>;jmp  <.text+>;pushl (%ebp);calll  <.text+>;pushl (%ebp)": 1,
                "movl %esi, %ecx;calll - <.text+>;testl %eax, %eax;jne - <.text+>;pushl $": 1,
                "pushl $;pushl %ebx;movl %edi, %ecx;calll - <.text+>;popl %edi": 1,
                "calll  <.text+>;leal -(%ebp), %eax;leal (%ebx), %ecx;pushl %eax;movl %ecx, -(%ebp)": 1,
                "movl %edi, %ecx;calll - <.text+>;movl (%edi), %ecx;pushl %esi;calll  <.text+>": 2,
                "pushl %esi;calll  <.text+>;cmpl $-, %eax;je  <.text+>;movl (%esi), %eax": 2,
                "movl %edi, %ecx;calll  <.text+>;pushl %eax;movl %edi, %ecx;calll  <.text+>": 3,
                "pushl (%eax);movl -(%ebp), %ecx;calll  <.text+>;movl %eax, %esi;testl %esi, %esi": 1,
                "movl -(%ebp), %eax;movzwl (%eax), %ecx;pushl %ecx;pushl (%eax);calll - <.text+>": 1,
                "je  <.text+>;pushl -(%ebp);movl %eax, %ecx;calll  <.text+>;movl %eax, %ebx": 1,
                "orl $-, -(%ebp);testl %ebx, %ebx;je  <.text+>;movl -(%ebp), %ecx;pushl %ebx": 1,
                "cmpl %eax, -(%ebp);jne  <.text+>;cmpw %ax, -(%ebp);jne  <.text+>;cmpw %ax, -(%ebp)": 2,
                "je  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %ebx, %ecx;calll  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %ebx, %ecx;calll  <.text+>;testl %eax, %eax": 1,
                "movl $, -(%ebp);calll  <.text+>;pushl -(%ebp);movl -(%ebp), %ecx;calll  <.text+>": 1,
                "movl %ebx, %ecx;calll  <.text+>;cmpl $, -(%ebp);movl -(%ebp), %edi;movl %eax, -(%ebp)": 1,
                "calll  <.text+>;movl -(%ebp), %ecx;negw %ax;sbbl %eax, %eax;andl $, %eax": 1,
                "jmp  <.text+>;xorl %eax, %eax;orl $-, -(%ebp);movl %eax, %esi;jmp  <.text+>": 1,
                "xorl %eax, %eax;orl $-, -(%ebp);movl %eax, %esi;jmp  <.text+>;orl $, (%esi)": 1,
                "movl %edi, %ecx;calll  <.text+>;testl %eax, %eax;je  <.text+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl (%edi), %ebx;movl %esi, %ecx;calll *(%eax);pushl %eax": 1,
                "calll *(%eax);xorl %esi, %esi;incl %esi;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "movl %ecx, %ebx;pushl %edi;leal -(%ebp), %ecx;movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "testl %esi, %esi;je  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx": 1,
                "testl %ebx, %ebx;movl %ebx, %esi;jne - <.text+>;movl -(%ebp), %ebx;leal -(%ebp), %eax": 1,
                "testb %al, %al;je  <.text+>;cmpl $, (%esi);jne  <.text+>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll  <.text+>;movl %eax, %esi;testl %esi, %esi;jne - <.text+>": 2,
                "je  <.text+>;xorl %ebx, %ebx;incl %ebx;cmpl $, (%edi);jne  <.text+>": 1,
                "movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);testl %eax, %eax;je  <.text+>": 24,
                "pushl %edi;calll  <.text+>;movl %eax, %edi;testl %edi, %edi;jne - <.text+>": 4,
                "movl -(%ebp), %edi;leal -(%ebp), %eax;leal (%edi), %esi;pushl %eax;movl %esi, %ecx": 1,
                "pushl -(%ebp);movl %edi, %ecx;calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %esi;movl %esi, %ecx;calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl %ecx, %esi;calll  <.text+>": 1,
                "jne  <.text+>;movl (%ebp), %eax;andl $, (%eax);movl -(%ebp), %eax;jmp  <.text+>": 1,
                "calll *;addl $, %esp;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 9,
                "leal -(%ebp), %eax;pushl %eax;calll *;cmpl $-, %eax;je  <.text+>": 3,
                "je  <.text+>;pushl %edi;calll *;xorl %ecx, %ecx;incl %ecx": 1,
                "je  <.text+>;jbe  <.text+>;cmpl $, %eax;ja  <.text+>;xorl %eax, %eax": 1,
                "calll  <.text+>;cmpl $-, %eax;leal (%ebp), %ecx;je  <.text+>;pushl $": 1,
                "movl (%ebp), %esi;andl $, (%esi);xorl %edi, %edi;incl %edi;calll  <.text+>": 1,
                "incl %edi;calll  <.text+>;testl %eax, %eax;je  <.text+>;pushl %esi": 1,
                "addl $, %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;movl $, %esi": 1,
                "leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>;jmp  <.text+>;pushl %esi": 1,
                "cmpw $, (%eax);pushl $;leal -(%ebp), %eax;pushl %eax;je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;cmpl $, %eax;jne  <.text+>": 4,
                "addl %esi, %eax;pushl %eax;pushl (%ebp);calll  <.text+>;xorl %ecx, %ecx": 1,
                "pushl %eax;jmp  <.text+>;pushl $;pushl $;pushl (%ebp)": 1,
                "je  <.text+>;cmpw %si, ;jne  <.text+>;movl , %eax;cmpl , %eax": 4,
                "movl , %edi;movl $, %ebx;jne  <.text+>;cmpl , %ecx;je  <.text+>": 3,
                "movl $, %ebx;jne  <.text+>;cmpl , %ecx;je  <.text+>;pushl $": 3,
                "movl %ecx, ;pushl (%edx);calll *%edi;pushl $;calll  <.text+>": 3,
                "imull $, %ecx, %ecx;popl %esi;divl %esi;movswl %dx, %eax;addl %eax, %ecx": 3,
                "xorl %eax, %eax;incl %eax;cmpl %eax, (%esi);je  <.text+>;pushl %esi": 1,
                "calll  <.text+>;movl %eax, %edi;testl %edi, %edi;jne - <.text+>;pushl %ebx": 1,
                "testl %ebx, %ebx;jne - <.text+>;popl %edi;popl %esi;movw -(%ebp), %ax": 1,
                "movl -(%ebp), %eax;cmpl %eax, (%esi);jne  <.text+>;movswl (%esi), %eax;cmpl %edi, %eax": 1,
                "popl %edi;popl %ebx;movl -(%ebp), %ecx;calll  <.text+>;leave": 1,
                "pushl %eax;calll  <.text+>;movl %ebx, (%esi);popl %esi;popl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;movl %edx, %edi;pushl %eax": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;addl %ebx, -(%ebp);leal (%ecx,%eax,), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, %ebx;pushl %ebx;pushl %ecx;pushl %esi;calll *%edi": 2,
                "calll *;movl (%ebp), %ebx;subl -(%ebp), %ebx;cmpl %ebx, -(%ebp);jae  <.text+>": 1,
                "movl (%ebp), %ebx;subl -(%ebp), %ebx;cmpl %ebx, -(%ebp);jae  <.text+>;movl -(%ebp), %ebx": 1,
                "calll *%edi;addl $, %esp;addl %ebx, -(%ebp);leal (%esi,%ebx,), %esi;leal -(%ebp), %eax": 1,
                "addl $, %esp;addl %ebx, -(%ebp);leal (%esi,%ebx,), %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp);jne - <.text+>": 14,
                "calll *%ebx;cmpl %eax, -(%ebp);popl %ecx;jae  <.text+>;movl -(%ebp), %ebx": 1,
                "pushl %edi;movl (%ebp), %edi;pushl $;leal -(%ebp), %ecx;movl %eax, -(%ebp)": 2,
                "leal -(%ebp), %eax;pushl %eax;calll *;popl %ecx;leal (%eax,%eax), %eax": 3,
                "pushl %eax;calll *;popl %ecx;leal (%eax,%eax), %eax;pushl %eax": 4,
                "testw %si, %si;je  <.text+>;movl (%edi), %edi;testl %edi, %edi;jne - <.text+>": 1,
                "movl %ebx, -(%ebp);calll  <.text+>;movl %eax, %edi;cmpl %ebx, %edi;jne  <.text+>": 1,
                "movb $, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx;jmp  <.text+>;pushl %ebx": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;movl %eax, %esi;cmpl $, %esi": 1,
                "je  <.text+>;cmpl $, %esi;je  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>": 1,
                "movl -(%ebp), %esi;movl (%edi), %eax;decl %eax;je  <.text+>;decl %eax": 1,
                "xorl %ecx, (%eax);movl (%esi), %eax;xorl %ecx, %ecx;addl $, %eax;cmpl %ecx, (%edi)": 1,
                "addl $, %eax;shll $, %ecx;xorl (%eax), %ecx;andl $, %ecx;xorl %ecx, (%eax)": 1,
                "movl (%edi), %edx;pushl $;leal -(%ebp), %ecx;calll - <.text+>;leal -(%ebp), %eax": 1,
                "movl , %eax;pushl %ebx;pushl %esi;xorl %ebx, %ebx;pushl %edi": 4,
                "calll  <.text+>;movl %eax, -(%ebp);calll - <.text+>;movl %eax, -(%ebp);calll  <.text+>": 1,
                "calll - <.text+>;cmpl %ebx, (%eax);je  <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 2,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <.text+>": 2,
                "leal (%edi), %ecx;calll - <.text+>;pushl %ebx;calll - <.text+>;pushl ": 1,
                "pushl ;movl %ebx, ;calll *;pushl ;movl %ebx, ": 1,
                "pushl %eax;pushl %eax;pushl %eax;movl %edi, %ecx;calll  <.text+>": 1,
                "pushl %ebx;calll  <.text+>;addl $, %esp;pushl ;calll  <.text+>": 2,
                "movw $, ;jmp  <.text+>;pushl %esi;movl %edi, %ecx;calll  <.text+>": 1,
                "movl %eax, -(%ebp);pushl %ebx;je  <.text+>;pushl (%eax);jmp  <.text+>": 1,
                "pushl (%eax);jmp  <.text+>;pushl $;pushl $;calll - <.text+>": 1,
                "movl -(%ebp), %eax;movzbl (%eax), %ecx;imull $, %ecx, %ecx;pushl %ebx;pushl $": 1,
                "pushl (%eax);movl %edi, %ecx;calll  <.text+>;cmpl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "pushl -(%ebp);calll  <.text+>;testw %ax, %ax;je  <.text+>;movl $, -(%ebp)": 1,
                "cmpw %si, ;movl %ebx, ;je  <.text+>;movl %esi, %ecx;jmp  <.text+>": 1,
                "movl %eax, -(%ebp);jmp  <.text+>;movl $, -(%ebp);movl (%ebp), %eax;movzwl (%eax), %eax": 1,
                "jmp  <.text+>;movl $, -(%ebp);movl (%ebp), %eax;movzwl (%eax), %eax;shrl $, %eax": 1,
                "movl %ebx, ;calll - <.text+>;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "pushl %edi;calll  <.text+>;pushl %ebx;pushl $;pushl %edi": 1,
                "calll  <.text+>;jmp  <.text+>;pushl %ebx;pushl %ebx;pushl %ebx": 2,
                "pushl %ebx;pushl %ebx;calll  <.text+>;addl $, %esp;calll  <.text+>": 2,
                "cmpl %ebx, %edi;je  <.text+>;pushl $;pushl %edi;pushl %esi": 1,
                "pushl %ebx;pushl %ebx;calll  <.text+>;cmpl %ebx, %eax;movl %eax, -(%ebp)": 2,
                "pushl %edi;calll  <.text+>;popl %ecx;jmp  <.text+>;movl %ebx, -(%ebp)": 1,
                "movl , %eax;cmpl %ebx, %eax;je  <.text+>;pushl %eax;calll  <.text+>": 2,
                "pushl $;pushl $;pushl ;movw %si, ;calll  <.text+>": 1,
                "je  <.text+>;pushl $;calll *;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "je  <.text+>;decl %eax;jne  <.text+>;movl (%ebp), %esi;pushl %ebx": 1,
                "pushl %esi;calll *(%eax);pushl %ebx;pushl ;movl %eax, ": 1,
                "pushl (%ebp);pushl ;calll  <.text+>;xorl %eax, %eax;movw , %ax": 1,
                "pushl (%ebp);pushl $;calll - <.text+>;movl , %eax;cmpl %ebx, %eax": 1,
                "pushl (%ebp);pushl (%ebp);calll  <.text+>;testl $, %eax;je  <.text+>": 2,
                "calll  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;movl -(%ebp), %eax;movb (%eax), %al": 1,
                "pushl %esi;calll *;addl $, %esp;cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);pushl $;pushl %esi;pushl $;pushl %ebx": 2,
                "pushl $;pushl %esi;pushl $;pushl %ebx;calll  <.text+>": 5,
                "movl (%eax), %eax;movl %eax, -(%ebp);pushl $;movl %edi, %ecx;calll  <.text+>": 1,
                "movl $, %edi;pushl %edi;calll  <.text+>;cmpl %ebx, %eax;popl %ecx": 1,
                "movl %eax, -(%ebp);je  <.text+>;pushl %ebx;pushl %ebx;pushl $": 1,
                "pushl %ebx;calll  <.text+>;addl $, %esp;incl ;jmp  <.text+>": 1,
                "testl $, %eax;je  <.text+>;movl -(%ebp), %eax;movl (%eax), %eax;cmpl %ebx, %eax": 1,
                "jne  <.text+>;movl $, -(%ebp);movl (%ebp), %ecx;movb (%ecx), %al;cmpb $, %al": 1,
                "pushl %ecx;pushl (%ebp);calll *(%eax);jmp  <.text+>;cmpb $, %al": 1,
                "calll - <.text+>;pushl (%ebp);movl (%edi), %eax;pushl %edi;calll *(%eax)": 2,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl %edi;calll - <.text+>": 3,
                "cmpl %ebx, ;je  <.text+>;xorl %eax, %eax;movw , %ax;pushl %ebx": 1,
                "adcl %eax, ;jmp  <.text+>;cmpl %ebx, ;je  <.text+>;movl %ebx, ": 1,
                "movl %edx, (%eax);movl (%ecx), %ecx;movl %ecx, (%eax);pushl ;pushl %eax": 1,
                "jmp - <.text+>;pushl (%ebp);calll  <.text+>;cmpl %ebx, %eax;je  <.text+>": 1,
                "jmp  <.text+>;testb $, (%eax);je  <.text+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%ebp), %ecx;movzbl (%ecx), %ecx;subl $, %ecx;je  <.text+>;decl %ecx": 1,
                "addl -(%ebp), %eax;jmp  <.text+>;addl -(%ebp), %eax;pushl $;popl %ecx": 1,
                "adcl %ecx, %edx;pushl %edx;pushl %eax;movl %edi, %ecx;calll  <.text+>": 1,
                "testw %ax, %ax;jne - <.text+>;cmpl -(%ebp), %esi;jl - <.text+>;pushl %edi": 1,
                "je  <.text+>;movl -(%ebp), %ecx;movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl %ebx;calll  <.text+>": 1,
                "cmpl %ebx, %eax;je  <.text+>;cmpw $, (%ebp);jne  <.text+>;movb (%eax), %al": 1,
                "pushl $;calll  <.text+>;addl $, %edi;movl %edi, %ecx;calll - <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll - <.text+>;cmpw $, -(%ebp)": 1,
                "cmpw $, -(%ebp);jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl %esi;pushl %esi;pushl %ebx;calll  <.text+>;pushl %ebx": 1,
                "movl %esi, ;calll  <.text+>;cmpw $, (%ebp);jne  <.text+>;jmp - <.text+>": 1,
                "calll  <.text+>;leal (%edi), %ecx;jmp  <.text+>;pushl (%ebp);calll  <.text+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;calll - <.text+>;pushl $": 1,
                "pushl %esi;pushl $;jmp - <.text+>;calll  <.text+>;pushl (%edi)": 1,
                "pushl ;calll  <.text+>;pushl ;calll  <.text+>;movl %esi, ": 1,
                "pushl %ss;enter $, $;lretl $;testl $, %eax;movb $, (%edx)": 1,
                "pushl ;calll  <.text+>;cmpw $, ;je  <.text+>;calll  <.text+>": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jne - <.text+>;popl %edi;popl %esi": 5,
                "movl (%ebx), %eax;movl (%eax), %eax;pushl %esi;movl (%ebp), %esi;pushl %edi": 2,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);movl %eax, -(%ebp);calll - <.text+>;movl %eax, -(%ebp)": 1,
                "je  <.text+>;movl -(%ebp), %esi;cmpl $, %esi;ja  <.text+>;jmpl *(,%esi,)": 1,
                "jmp  <.text+>;pushl $;jmp  <.text+>;pushl $;calll  <.text+>": 8,
                "jne  <.text+>;calll  <.text+>;calll  <.text+>;pushl %ebx;pushl %edi": 1,
                "addl $, %esp;xorl %esi, %esi;incl %esi;pushl %esi;pushl %edi": 2,
                "testw %ax, %ax;je  <.text+>;cmpl %edi, ;je  <.text+>;pushl ": 1,
                "movzbl (%eax), %eax;jmpl *(,%eax,);calll  <.text+>;jmp  <.text+>;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;movl $, -(%ebp);calll  <.text+>;movb $, -(%ebp)": 2,
                "jmp  <.text+>;pushl ;calll  <.text+>;movw %si, ;movl $, -(%ebp)": 1,
                "jne  <.text+>;cmpw $, (%ebp);je  <.text+>;cmpl %edi, ;je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, %eax;calll - <.text+>;cmpw $, %ax": 2,
                "movl $, -(%ebp);jmp  <.text+>;pushl -(%ebp);calll - <.text+>;xorl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movw %di, (%ebx);calll  <.text+>;leal -(%ebp), %eax": 1,
                "popl %ecx;movl -(%ebp), %eax;cmpw %di, (%eax);je  <.text+>;movl -(%ebp), %ecx": 1,
                "movswl %dx, %edx;pushl %edx;pushl -(%ebp);movswl (%esi), %edx;pushl %edx": 1,
                "pushl %ecx;pushl %eax;calll  <.text+>;testw %ax, %ax;jne  <.text+>": 4,
                "pushl $-;pushl $;calll - <.text+>;jmp  <.text+>;pushl -(%ebp)": 1,
                "cmpl %edi, ;jne - <.text+>;cmpw %di, (%esi);je  <.text+>;movzwl (%esi), %ecx": 1,
                "movl %eax, -(%ebp);je  <.text+>;movl -(%ebp), %eax;cmpw $, (%eax);jne  <.text+>": 2,
                "testl %eax, %eax;pushl -(%ebp);je  <.text+>;pushl $;jmp  <.text+>": 1,
                "calll  <.text+>;popl %ecx;popl %ecx;pushl %edi;pushl %edi": 1,
                "popl %ecx;popl %ecx;pushl %edi;pushl %edi;pushl $": 1,
                "calll  <.text+>;pushl %esi;pushl %esi;jmp  <.text+>;cmpw $, (%ebp)": 1,
                "cmpl %edi, %eax;je  <.text+>;testb $, (%eax);je  <.text+>;movl -(%ebp), %eax": 1,
                "cmpw %di, (%esi);je  <.text+>;cmpw %di, (%esi);je  <.text+>;movzwl (%esi), %eax": 1,
                "movzwl (%esi), %eax;addl %esi, %eax;pushl (%esi);movswl (%esi), %edi;pushl %edi": 1,
                "movb $-, ;movw $, ;movl $, -(%ebp);jmp  <.text+>;movl -(%ebp), %edi": 1,
                "pushl $;pushl %edi;pushl $;pushl $;pushl -(%ebp)": 2,
                "movw $, ;movl $, -(%ebp);movb $, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;pushl %ebx;calll  <.text+>;xorl %edi, %edi": 1,
                "movl %eax, ;movw %di, (%eax);leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "jmp  <.text+>;movl (%esi), %eax;cmpl (%ebx), %eax;je  <.text+>;pushl %edi": 1,
                "pushl %edi;pushl %edi;pushl $;pushl %edi;pushl $": 3,
                "movl $, ;jne  <.text+>;movw $, ;movl -(%ebp), %ecx;pushl $": 1,
                "pushl $;leal -(%ebp), %ecx;movl $, -(%ebp);calll  <.text+>;cmpl $-, %eax": 1,
                "jmp  <.text+>;pushl $;calll  <.text+>;cmpw %di, ;jne  <.text+>": 1,
                "incw ;jmp  <.text+>;movl -(%ebp), %ecx;xorl %eax, %eax;movw (%ecx), %ax": 1,
                "jmp  <.text+>;movl -(%ebp), %ecx;xorl %eax, %eax;movw (%ecx), %ax;cmpw $, %ax": 1,
                "xorl %eax, %eax;movw (%ecx), %ax;cmpw $, %ax;je  <.text+>;movl %eax, -(%ebp)": 1,
                "cmpw %di, ;je  <.text+>;movswl -(%ebp), %eax;xorl %esi, %esi;incl %esi": 1,
                "je  <.text+>;movswl -(%ebp), %eax;xorl %esi, %esi;incl %esi;pushl %esi": 1,
                "incl %esi;pushl %esi;pushl %esi;pushl %eax;pushl -(%ebp)": 1,
                "movl %esi, ;calll  <.text+>;movl -(%ebp), %ecx;addl $, %ecx;calll - <.text+>": 1,
                "pushl $;calll  <.text+>;popl %ecx;pushl %edi;pushl %edi": 1,
                "jne  <.text+>;movw %di, ;movw $, %si;jmp  <.text+>;pushl ": 1,
                "jmp  <.text+>;calll  <.text+>;testl %eax, %eax;jne  <.text+>;cmpl %edi, ": 1,
                "movl %edi, ;je  <.text+>;movl %edi, ;jmp  <.text+>;pushl ": 1,
                "testw %ax, %ax;je  <.text+>;leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 3,
                "addl $, %eax;pushl %eax;calll  <.text+>;testw %ax, %ax;je  <.text+>": 2,
                "addb (%ecx), %al;popal;into;addb (%ecx), %al;xchgl %ebp, %eax": 1,
                "addb (%ecx), %al;xchgl %ebp, %eax;into;addb (%ecx), %al;pushfl": 1,
                "addb (%ecx), %al;pushfl;into;addb (%ecx), %al;movb %dl, %bl": 1,
                "movl , %eax;fiaddl (%edx);addl %esp, %edi;filds (%edx);addl %esi, %edi": 1,
                "addl %eax, (%ecx);larl (%ebx), %eax;addl (%edi), %ecx;addb $, %al;addl (%esi), %eax": 1,
                "xorl %ebx, %ebx;pushl %ebx;movl %esi, %ecx;calll  <.text+>;movl , %eax": 1,
                "movl %edi, -(%ebp);movw %bx, ;movw %bx, ;movl %ebx, ;movl %ebx, ": 1,
                "pushl (%edi);calll *;testl %eax, %eax;popl %ecx;popl %ecx": 4,
                "incl -(%ebp);movl %eax, -(%ebp);jmp - <.text+>;cmpl %ebx, %edi;je  <.text+>": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;pushl $;pushl %esi": 1,
                "movw %bx, (%eax);calll  <.text+>;calll - <.text+>;movw $, (%eax);calll  <.text+>": 3,
                "calll - <.text+>;movw $, (%eax);calll  <.text+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "incl %esi;pushl %esi;pushl %ebx;pushl $;pushl %ebx": 2,
                "xorl %eax, %eax;movw , %ax;pushl %eax;calll  <.text+>;pushl %esi": 1,
                "movl (%eax), %ecx;calll  <.text+>;movl %esi, %eax;jmp  <.text+>;movl -(%ebp), %eax": 1,
                "pushl $;calll  <.text+>;pushl $;pushl %ebx;calll  <.text+>": 3,
                "calll  <.text+>;addl $, %esp;calll - <.text+>;cmpl %ebx, %eax;je  <.text+>": 1,
                "jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;leal -(%ebp), %ecx": 1,
                "pushl %esi;pushl $;leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>": 1,
                "pushl %eax;movb $, -(%ebp);calll  <.text+>;cmpl %edi, %eax;jne  <.text+>": 1,
                "pushl %eax;calll  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;jmp  <.text+>;xorl %edi, %edi": 1,
                "movl -(%ebp), %eax;decl -(%ebp);testl %eax, %eax;jle - <.text+>;pushl -(%ebp)": 1,
                "testw %ax, %ax;je  <.text+>;pushl %edi;pushl %ebx;pushl $": 1,
                "calll  <.text+>;calll *;movl %eax, %esi;jmp  <.text+>;calll *": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp);calll  <.text+>": 2,
                "cmpl $, %eax;je  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>": 3,
                "calll  <.text+>;testl %eax, %eax;je - <.text+>;jmp - <.text+>;leal -(%ebp), %ecx": 1,
                "jmp - <.text+>;calll  <.text+>;calll  <.text+>;xorl %edi, %edi;incl %edi": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;orb $, (%esi);movl (%esi), %esi": 1,
                "xorl %eax, %eax;movw , %ax;pushl %eax;calll  <.text+>;calll - <.text+>": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;movw %di, ;calll  <.text+>": 1,
                "movw %di, ;calll  <.text+>;pushl $;pushl %edi;pushl %edi": 1,
                "calll  <.text+>;movl (%eax), %eax;movl (%eax), %eax;xorl %ecx, %ecx;movw , %cx": 1,
                "pushl %ecx;movl (%eax), %ecx;calll  <.text+>;cmpw %bx, ;je  <.text+>": 1,
                "calll  <.text+>;calll  <.text+>;calll - <.text+>;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "movl (%eax), %ecx;addl $, %ecx;calll - <.text+>;pushl $;calll - <.text+>": 1,
                "addl $, %ecx;calll - <.text+>;pushl $;calll - <.text+>;pushl $": 1,
                "je  <.text+>;cmpl %esi, ;jne  <.text+>;cmpl %esi, ;je  <.text+>": 1,
                "pushl $;popl %eax;movl %eax, ;jmp  <.text+>;cmpl %esi, (%ebp)": 1,
                "pushl ;movl $, %ecx;calll  <.text+>;movl , %eax;testl %eax, %eax": 1,
                "movl , %eax;testl %eax, %eax;je  <.text+>;pushl %eax;calll  <.text+>": 4,
                "pushl %eax;calll  <.text+>;andl $, ;xorl %eax, %eax;retl": 2,
                "pushl %ecx;pushl %ecx;pushl %esi;calll - <.text+>;pushl %eax": 1,
                "movw %si, (%eax);cmpw %si, ;pushl %edi;movl $, %edi;jne  <.text+>": 1,
                "cmpw $, %ax;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;pushl %esi": 1,
                "xorl %eax, %eax;jmp  <.text+>;pushl %esi;pushl ;pushl $-": 1,
                "movl (%eax), %ecx;cmpl %esi, -(%ecx);pushl %ebx;je  <.text+>;movl %ecx, %ebx": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;pushl $": 9,
                "pushl $;pushl $;pushl $;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl %eax, %esi;subl $, %esi;negl %esi;sbbl %esi, %esi;pushl %ebx": 1,
                "popl %ecx;popl %ebx;jmp  <.text+>;pushl %edi;pushl %edi": 1,
                "cmpl %esi, ;je  <.text+>;cmpw %si, ;jne  <.text+>;movl , %eax": 1,
                "pushl %eax;addl $, %ecx;movl %esi, -(%ebp);calll  <.text+>;orl $-, -(%ebp)": 3,
                "movl , %eax;addl $, %eax;pushl $;pushl %eax;calll  <.text+>": 1,
                "movl $, -(%ebp);movswl %ax, %eax;movl %edx, %esi;cltd;idivl %edi": 1,
                "xorl %edx, %edx;popl %esi;divl %esi;pushl $;xorl %edx, %edx": 1,
                "movl %ecx, %eax;popl %ecx;divl %ecx;testl %ebx, %ebx;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;movl %eax, %esi;cmpl %edi, %esi;jne  <.text+>;xorl %eax, %eax": 1,
                "xorl %eax, %eax;incl %eax;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 2,
                "movw $, -(%ebp);movb (%esi), %al;movw $, -(%ebp);movb %al, -(%ebp);movl (%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "xorl %eax, %eax;xorl %edi, %edi;incl %eax;movl %edi, (%esi);cmpw %di, ": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %ecx;xorl %eax, %eax;incl %eax": 1,
                "pushl %ecx;xorl %eax, %eax;incl %eax;cmpw $, ;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);jne  <.text+>;cmpl $, ;jne  <.text+>;calll  <.text+>": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);movb (%eax), %cl;testb %cl, %cl;movb %cl, (%ebx)": 1,
                "movl %eax, %esi;testl %esi, %esi;jne - <.text+>;pushl %edi;calll  <.text+>": 2,
                "pushl %esi;pushl %edi;leal (%ebx), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "pushl $;calll *;movl -(%ebp), %eax;incl -(%ebp);cmpl $, %eax": 1,
                "calll  <.text+>;movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;xorl %eax, %eax;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 5,
                "leal (%eax), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);pushl %eax;calll  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;calll  <.text+>;testb %al, %al;je  <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl %esi, ;jmp - <.text+>": 1,
                "cmpl %esi, (%eax);jne  <.text+>;cmpl %esi, (%eax);jne  <.text+>;movl $, ": 1,
                "testl %eax, %eax;jne - <.text+>;movw , %ax;incl ;pushl %eax": 1,
                "jne - <.text+>;testb $, (%ebp);jne  <.text+>;movl $, ;jmp - <.text+>": 1,
                "je  <.text+>;movl (%esi), %eax;movl (%esi), %ecx;leal -(%eax,%ecx), %eax;movl %eax, ": 2,
                "cmpl $, ;jne  <.text+>;xorl %eax, %eax;incl %eax;movl %eax, ": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, ;movl %eax, ;movl , %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl ;pushl ;pushl ": 1,
                "testb $-, -(%ebp);je  <.text+>;movl (%esi), %eax;movl (%esi), %ecx;leal -(%eax,%ecx), %eax": 1,
                "movl %eax, ;popl %esi;leave;retl $;int": 1,
                "cmpl %edi, ;je  <.text+>;cmpl %edi, ;jne  <.text+>;movl $, ": 1,
                "cmpw (%ecx), %dx;jne  <.text+>;movl (%eax), %edx;cmpl (%ecx), %edx;jne  <.text+>": 1,
                "cmpl %eax, ;jg - <.text+>;pushl $;calll *;movl $, %ebx": 1,
                "jmp  <.text+>;movl , %ecx;leal -(%ebp), %eax;pushl %eax;addl $, %ecx": 1,
                "pushl %eax;addl $, %ecx;calll  <.text+>;movl , %eax;movl (%eax), %eax": 1,
                "calll - <.text+>;cmpw %di, ;movl %eax, %ebx;movswl (%esi), %eax;movl %eax, ": 1,
                "jmp  <.text+>;movl $, %esi;pushl %esi;pushl $;pushl $": 1,
                "addl $, %esp;pushl %edi;pushl %edi;pushl $;pushl %edi": 1,
                "jmp  <.text+>;calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "pushl -(%ebp);calll *;cmpl $, %eax;jne  <.text+>;pushl %edi": 1,
                "movl %edi, ;pushl $;jmp  <.text+>;pushl $;pushl ": 1,
                "popl %ecx;popl %ecx;pushl $;pushl ;movl %edi, ": 1,
                "movl %edi, ;movl $, %ebx;calll  <.text+>;calll  <.text+>;testl %eax, %eax": 1,
                "pushl %esi;calll  <.text+>;testw %ax, %ax;je  <.text+>;cmpw , %bx": 1,
                "addl $, %esp;movl $, %ebx;cmpw $, %bx;jne  <.text+>;pushl %esi": 1,
                "pushl $;pushl $;pushl $;calll  <.text+>;pushl $": 2,
                "andl $, ;movl $, %ebx;leal -(%ebp), %esi;movl $, %edi;movsl (%esi), %es:(%edi)": 1,
                "movl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 4,
                "incb (%edx);addl %ebx, %eax;incb (%edx);addl %esi, (%ebx);addb (%ebx), %al": 1,
                "addb (%ebx), %al;addl %ebx, -(%ebx);addb (%ebx), %al;addl %eax, (%eax);addl %eax, (%edx)": 1,
                "addb $, %al;orl $, %eax;orb %cl, ;orl $, %eax;orb $, %al": 1,
                "incl %edi;cmpb $, ;movl %esi, -(%ebp);movl %ecx, -(%ebp);je  <.text+>": 1,
                "movswl -(%ebp), %eax;pushl %eax;pushl %edi;calll - <.text+>;jmp  <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;movl $, -(%ebp);calll  <.text+>": 1,
                "calll  <.text+>;movl %eax, -(%ebp);movl $, %ecx;movl %ebx, %esi;movl $, %edi": 1,
                "pushl %ebx;pushl (%ebp);calll  <.text+>;cmpl $, ;movl $, %edi": 1,
                "movl $, %eax;movswl -(%ebp), %esi;pushl %eax;pushl %esi;pushl $": 2,
                "movl -(%ebp), %eax;pushl %esi;pushl $;pushl (%eax);calll  <.text+>": 1,
                "movzwl (%ebx), %edx;addl %ebx, %edx;jmp  <.text+>;movl $, %edx;cmpw $, (%ebx)": 2,
                "jmp  <.text+>;movl $, %eax;pushl %edx;movswl -(%ebp), %edx;pushl %edx": 1,
                "pushl %ecx;pushl %eax;movl -(%ebp), %eax;pushl %edi;pushl (%eax)": 1,
                "jmp  <.text+>;movl %eax, %ecx;cmpw $, (%ebx);je  <.text+>;movzwl (%ebx), %eax": 1,
                "movzwl (%ebx), %eax;addl %ebx, %eax;pushl %edx;movswl -(%ebp), %edx;pushl %edx": 1,
                "movl $, ;pushl (%eax);pushl $;pushl (%esi);calll  <.text+>": 1,
                "pushl %eax;pushl %edx;pushl %ecx;pushl %edi;pushl $": 1,
                "movl (%ebp), %ecx;movzwl (%ecx), %ecx;addl , %eax;cmpl %eax, %ecx;je  <.text+>": 1,
                "addl , %eax;cmpl %eax, %ecx;je  <.text+>;incl ;pushl %ebx": 1,
                "calll  <.text+>;movl %esi, ;cmpw %si, ;jne  <.text+>;cmpl %esi, ": 1,
                "cmpl %esi, ;jne  <.text+>;movzwl , %eax;pushl %eax;pushl ": 1,
                "movl %esi, ;movl $, (%eax);pushl ;calll - <.text+>;jmp  <.text+>": 1,
                "movb $-, ;movl %esi, ;pushl %edi;calll  <.text+>;movl (%ebp), %eax": 1,
                "pushl (%ebp);movw %si, ;movl (%ebx), %eax;calll *(%eax);cmpl $, -(%ebp)": 1,
                "incl ;calll - <.text+>;cmpw %si, (%eax);je  <.text+>;pushl (%ebp)": 1,
                "calll - <.text+>;cmpw %si, (%eax);je  <.text+>;pushl (%ebp);movl (%ebx), %eax": 1,
                "cmpw %si, (%eax);je  <.text+>;pushl (%ebp);movl (%ebx), %eax;pushl %ebx": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl ;movl (%ebx), %eax": 2,
                "pushl %ebx;calll *(%eax);cmpl $, -(%ebp);je  <.text+>;movl -(%ebp), %eax": 1,
                "addl %eax, %eax;addl %eax, %ecx;pushl %ecx;movl , %ecx;addl %ecx, %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl $, %edi;xorl %esi, %esi;movl -(%ebp), %eax": 1,
                "pushl %edi;calll  <.text+>;pushl ;pushl $;pushl $": 1,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;je  <.text+>": 4,
                "jmp  <.text+>;cmpw %si, ;movl %edi, ;jne  <.text+>;cmpl %esi, ": 1,
                "cmpw %si, ;movl %edi, ;jne  <.text+>;cmpl %esi, ;je  <.text+>": 1,
                "calll  <.text+>;pushl (%ebp);movl (%ebp), %eax;movswl (%eax), %eax;movl (%ebp), %edi": 1,
                "calll - <.text+>;pushl %ebx;movl %esi, -(%ebp);calll  <.text+>;cmpw $, %di": 1,
                "je  <.text+>;cmpw $, %di;je  <.text+>;movw $, %ax;jmp  <.text+>": 1,
                "movw $, %ax;jmp  <.text+>;pushl $;calll  <.text+>;pushl -(%ebp)": 1,
                "jmp  <.text+>;pushl $;calll  <.text+>;pushl -(%ebp);calll - <.text+>": 1,
                "calll  <.text+>;pushl -(%ebp);calll - <.text+>;movl -(%ebp), %ecx;popl %edi": 1,
                "je  <.text+>;leal (%esi), %eax;pushl %eax;calll  <.text+>;leal (%esi), %eax": 1,
                "pushl %eax;pushl $-;pushl $-;pushl ;calll - <.text+>": 1,
                "movl -(%ebp), %esi;pushl $;pushl %ebx;movl %esi, ;calll  <.text+>": 1,
                "pushl %ebx;calll  <.text+>;addl $, %esp;pushl %ebx;pushl %ebx": 2,
                "movl %edi, -(%ebp);movswl -(%ebp), %edx;movl -(%ebp), %eax;movl (%eax), %ecx;movl %edx, -(%ebp)": 1,
                "cmpl %eax, %ecx;jge  <.text+>;pushl -(%ebp);movl (%esi), %eax;pushl %eax": 1,
                "cmpl %ebx, %eax;je  <.text+>;pushl %eax;calll  <.text+>;cmpl %ebx, %eax": 4,
                "je  <.text+>;pushl %eax;calll  <.text+>;cmpl %ebx, %eax;je  <.text+>": 4,
                "movl %ebx, ;movl %ebx, ;movl %ebx, ;movl %ebx, ;movl %ebx, ": 3,
                "movl %ebx, ;movl %ebx, ;movl %ebx, ;pushl %ebx;movl %ecx, ": 1,
                "calll  <.text+>;cmpl %ebx, %eax;je  <.text+>;leal (%eax), %esi;pushl %esi": 1,
                "movb $, -(%ebp);calll  <.text+>;pushl -(%ebp);movl -(%ebp), %ecx;pushl %edi": 1,
                "movw %di, ;movl %ebx, ;calll  <.text+>;cmpl $-, (%esi);jne  <.text+>": 1,
                "calll  <.text+>;addl $, %esp;calll  <.text+>;movl (%eax), %ecx;calll  <.text+>": 2,
                "pushl $-;pushl %eax;calll  <.text+>;testl %eax, %eax;je - <.text+>": 2,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;je - <.text+>;calll  <.text+>": 2,
                "pushl %edi;calll  <.text+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <.text+>": 4,
                "movb $, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;calll  <.text+>;calll  <.text+>;pushl %ebx": 1,
                "cmpw %bx, ;jne  <.text+>;calll - <.text+>;pushl %ebx;pushl %ebx": 1,
                "pushl $;pushl %ebx;calll  <.text+>;addl $, %esp;pushl $": 2,
                "calll  <.text+>;movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <.text+>;pushl %esi": 1,
                "cmpl %ebx, %ecx;je  <.text+>;pushl $;calll  <.text+>;movl -(%ebp), %ecx": 3,
                "pushl -(%ebp);calll - <.text+>;movl -(%ebp), %ecx;pushl %edi;movl %eax, ": 1,
                "jne  <.text+>;leal -(%ebp), %eax;pushl %eax;calll - <.text+>;testl %eax, %eax": 4,
                "testw %ax, %ax;je  <.text+>;cmpw %bx, ;jne  <.text+>;movl , %eax": 1,
                "je - <.text+>;jmp  <.text+>;pushl %ebx;movl $, %eax;pushl %eax": 1,
                "addl $, %esp;jmp - <.text+>;movl %edi, -(%ebp);jmp - <.text+>;movl %edi, ": 1,
                "xorl %esi, %esi;movl %ebx, ;movl %ebx, -(%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "pushl $;pushl $;movl %ebx, ;calll  <.text+>;jmp  <.text+>": 1,
                "movl %edi, %esi;pushl %ebx;calll  <.text+>;testw %ax, %ax;je  <.text+>": 1,
                "calll - <.text+>;cmpl %ebx, %eax;movl %eax, ;jne - <.text+>;jmp  <.text+>": 1,
                "movl %edx, (%ebx);movw (%esi), %ax;cmpw %dx, %ax;pushl %edi;movl (%ebp), %edi": 1,
                "movl %ecx, -(%ebp);movl %ebx, -(%ebp);movl %edx, -(%ebp);je  <.text+>;movw %ax, -(%ebp)": 1,
                "movw (%esi), %ax;movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $-": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $-;leal -(%ebp), %eax;pushl %eax": 7,
                "movl %ecx, %eax;cmpw $, (%ecx);jne  <.text+>;movw %di, (%ecx);incl %esi": 2,
                "calll *;popl %ecx;leal (%eax,%eax), %eax;pushl %eax;pushl -(%ebp)": 6,
                "movl -(%ebp), %eax;leal (%esi,%eax,), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *;xorl %edi, %edi": 2,
                "leal -(%ebp), %eax;pushl %eax;calll *;xorl %edi, %edi;popl %ecx": 1,
                "movl -(%ebp), %esi;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "testw %ax, %ax;je  <.text+>;movl %edi, (%esi);jmp  <.text+>;pushl $": 1,
                "pushl (%ebp);pushl %ecx;calll *;popl %ecx;leal (%eax,%eax), %eax": 1,
                "je  <.text+>;andl $, (%ebx);movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "pushl %eax;calll *%edi;leal -(%ebp), %eax;pushl %esi;pushl %eax": 3,
                "pushl $;pushl %eax;calll *;leal -(%ebp), %eax;pushl %eax": 11,
                "calll  <.text+>;leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>;movl -(%ebp), %ecx": 1,
                "pushl %edi;calll  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 7,
                "pushl %edi;calll  <.text+>;leal -(%ebp), %ecx;pushl %ecx;pushl $": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;pushl %eax": 1,
                "movl %esi, %edx;movl %eax, -(%ebp);calll - <.text+>;cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "calll  <.text+>;movb (%edi), %al;andb $, %al;cmpb $, %al;jne  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);calll - <.text+>;pushl %eax": 1,
                "calll  <.text+>;movl %eax, %esi;cmpl %ebx, %esi;je  <.text+>;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);calll  <.text+>;movl %eax, %ecx;leal -(%ebp), %edx;calll - <.text+>": 1,
                "pushl -(%ebp);pushl %esi;calll  <.text+>;calll - <.text+>;movl %eax, %edi": 1,
                "pushl %esi;calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %edi": 1,
                "pushl (%esi);pushl (%eax);calll  <.text+>;movw , %ax;cmpw %ax, %di": 1,
                "movw (%esi), %ax;testw %ax, %ax;pushl %edi;jne  <.text+>;popl %edi": 1,
                "movswl %ax, %edi;shrl %edi;subl %ebx, %edi;js  <.text+>;movl (%esi), %eax": 1,
                "jge - <.text+>;pushl (%esi);leal (%esi), %edi;pushl %edi;calll *": 1,
                "addl $, %esp;shll %eax;movw %ax, (%esi);movw %bx, (%esi);jmp  <.text+>": 1,
                "pushl %edi;calll  <.text+>;pushl %esi;pushl %edi;calll  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;movl %eax, %ebx;andl $, (%ebx)": 1,
                "pushl %ebx;movl %eax, %ebx;andl $, (%ebx);movswl (%edi), %eax;pushl %esi": 1,
                "pushl (%edi);movl %ecx, %esi;pushl %esi;calll  <.text+>;leal (%edi), %eax": 1,
                "movl %ecx, %esi;pushl %esi;calll  <.text+>;leal (%edi), %eax;pushl %eax": 1,
                "jne  <.text+>;movl (%esi), %eax;pushl (%ebp);movl (%ebp), %ecx;movl %eax, (%ebx)": 1,
                "pushl (%ebp);movl (%ebp), %ecx;movl %eax, (%ebx);movl (%esi), %eax;movw (%eax), %ax": 1,
                "pushl %edi;movw %ax, (%ecx);xorl %ebx, %ebx;calll - <.text+>;jmp  <.text+>": 1,
                "movl , %eax;pushl %ebx;movl , %ebx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl %edx, %esi;movl (%eax), %edx;movl %edx, -(%ebp);movw (%eax), %dx;pushl %edi": 1,
                "pushl %edi;movl %esi, -(%ebp);movl %ecx, -(%ebp);movw %dx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "andw $, -(%ebp);popl %ecx;popl %ecx;pushl (%ebp);jmp  <.text+>": 1,
                "popl %ecx;pushl (%ebp);jmp  <.text+>;pushl (%eax);leal -(%ebp), %eax": 1,
                "andw $, -(%ebp);popl %ecx;popl %ecx;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;leal -(%ebp), %edi;movl %esi, %ecx;calll - <.text+>;movl %eax, %edi": 2,
                "movw , %ax;cmpw %ax, %si;jl  <.text+>;cmpw $, %ax;jne  <.text+>": 2,
                "testw %ax, %ax;jne - <.text+>;jmp - <.text+>;int;int": 2,
                "pushl %eax;xorl %eax, %eax;movw , %ax;pushl %eax;pushl (%ebx)": 2,
                "movl %eax, (%ebx);xorl %eax, %eax;movw (%ebx), %ax;pushl %eax;xorl %eax, %eax": 1,
                "movl %esp, %ebp;pushl (%ebp);calll  <.text+>;cmpl $, (%eax);je  <.text+>": 1,
                "cmpl $, %eax;je  <.text+>;xorl %eax, %eax;jmp  <.text+>;xorl %eax, %eax": 3,
                "jmp  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>;movw $, %ax": 1,
                "movzwl (%eax), %edx;addl %eax, %edx;movl %edx, (%ebp);jmp  <.text+>;movl %ecx, (%ebp)": 1,
                "pushl %edi;pushl %eax;pushl %esi;pushl %edx;pushl %ecx": 1,
                "calll  <.text+>;testw %ax, %ax;popl %edi;popl %ebx;jne  <.text+>": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);xorl %esi, %esi": 2,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 2,
                "movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;cmpl $, (%ebp);jle  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;cmpw $, (%ebp);movl (%ebp), %eax;movl (%eax), %edx": 1,
                "movl (%eax), %edx;movl (%ebp), %ecx;movl %edx, (%ecx);movw (%eax), %dx;movw %dx, (%ecx)": 1,
                "incw %ax;movw %ax, (%ecx);movw $, %ax;jmp  <.text+>;movw %ax, (%ecx)": 1,
                "pushl %eax;calll *;movl %eax, %edi;cmpl %esi, %edi;popl %ecx": 1,
                "calll *%ebx;cmpw %si, (%edi);popl %ecx;leal (%eax,%eax), %ecx;movl %edi, %eax": 1,
                "jne - <.text+>;pushl $;pushl $;pushl $;pushl $": 1,
                "pushl %eax;pushl -(%ebp);pushl -(%ebp);calll *;cmpl %esi, %eax": 1,
                "movw %si, -(%ebp,%eax,);cmpl %esi, %eax;je  <.text+>;decl %eax;cmpw $, -(%ebp,%eax,)": 2,
                "movl %ecx, -(%ebp);calll *%edi;cmpl %esi, %eax;popl %ecx;popl %ecx": 1,
                "je  <.text+>;leal (%eax), %edi;pushl %edi;movl %edi, -(%ebp);calll *%ebx": 1,
                "xorl %eax, %eax;cmpw %si, (%ebp);pushl -(%ebp);setne %al;pushl -(%ebp)": 1,
                "leal -(%ebp), %ecx;incl %esi;movb %bl, -(%ebp);calll  <.text+>;orl $-, -(%ebp)": 1,
                "incl %esi;movb %bl, -(%ebp);calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "jne  <.text+>;calll *;cmpl $, %eax;jne  <.text+>;pushl %edi": 2,
                "pushl %esi;movl %esi, -(%ebp);movl %esi, -(%ebp);pushl (%eax);pushl %esi": 1,
                "movl %esi, -(%ebp);pushl (%eax);pushl %esi;movl , %esi;calll *%esi": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax;pushl %edi": 1,
                "popl %ecx;popl %ecx;je  <.text+>;subl %edi, %eax;sarl %eax": 2,
                "leal (%edi), %eax;pushl $;pushl %eax;calll *%esi;testl %eax, %eax": 2,
                "je  <.text+>;subl %edi, %eax;sarl %eax;jmp  <.text+>;pushl %edi": 1,
                "jne  <.text+>;calll - <.text+>;pushl %eax;calll  <.text+>;cmpl %edi, %eax": 3,
                "movl %esi, %eax;popl %edi;popl %esi;leave;retl $": 3,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;leal -(%ebp), %eax;pushl %eax": 6,
                "movl %eax, %edi;testl %edi, %edi;popl %ecx;je  <.text+>;testl %esi, %esi": 1,
                "calll *;testl %eax, %eax;popl %ecx;je  <.text+>;pushl $": 2,
                "cmpw $, %ax;movl %ecx, -(%ebp);je  <.text+>;cmpw $, %ax;je  <.text+>": 1,
                "addl %ebx, (%ebp);movl %ecx, -(%ebp);movl (%ebp), %eax;movw (%eax), %ax;cmpw %cx, %ax": 1,
                "jne  <.text+>;cmpl %eax, -(%ebp);jne  <.text+>;cmpl %eax, (%ebp);je  <.text+>": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl $;pushl $;pushl ": 1,
                "pushl (%ebp);pushl $;pushl $;pushl ;calll  <.text+>": 1,
                "pushl ;calll  <.text+>;negw %ax;sbbl %eax, %eax;incl %eax": 1,
                "pushl ;pushl (%ebp);calll  <.text+>;testw %ax, %ax;jne  <.text+>": 1,
                "pushl (%esi);movl %ebx, -(%ebp);calll - <.text+>;pushl %eax;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;movl (%eax), %eax": 2,
                "jne  <.text+>;movb %bl, -(%ebp);testb $, -(%ebp);je  <.text+>;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;pushl (%esi);leal -(%ebp), %eax": 1,
                "pushl $;pushl %eax;calll *;addl $, %esp;testl %eax, %eax": 3,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;jmp - <.text+>;pushl %edi": 1,
                "pushl $;calll  <.text+>;leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>": 1,
                "calll *;pushl %eax;calll  <.text+>;retl;int": 1,
                "subl %esi, %ecx;movl %ecx, %eax;andl $-, %ecx;cmpl $, %ecx;jle  <.text+>": 1,
                "sarl %eax;cltd;subl %edx, %eax;sarl %eax;leal (%edi,%eax,), %esi": 1,
                "calll - <.text+>;movl (%eax), %ecx;movl (%eax), %eax;movl %ecx, -(%ebp);leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;cmpl (%ebp), %eax;jle  <.text+>;leal (%esi), %edi;jmp  <.text+>": 1,
                "incl %esi;pushl %esi;leal -(%ebp), %ecx;calll  <.text+>;movl (%ebp), %ecx": 1,
                "pushl %esi;pushl %edi;leal -(%ebp), %ecx;calll  <.text+>;pushl (%ebp)": 1,
                "movl (%ebp), %ebx;leal -(%ebp), %eax;pushl %eax;pushl (%ebx);calll *": 1,
                "pushl %eax;movl %esi, %ecx;calll *(%edi);pushl (%ebp);leal (%ebp), %ecx": 1,
                "movl %esi, %ecx;calll *(%edi);pushl (%ebp);leal (%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);movl , %ebx;calll *%ebx;testl %eax, %eax;popl %ecx": 1,
                "cmpl %eax, %ecx;jg - <.text+>;movl (%ebp), %ebx;pushl -(%ebp);movl (%esi), %eax": 1,
                "jmp  <.text+>;pushl $;pushl $;pushl $;pushl $": 7,
                "pushl $;pushl $;calll  <.text+>;testl %eax, %eax;je  <.text+>": 3,
                "jmp  <.text+>;movswl , %eax;movl -(%ebp), %edx;cmpl %eax, %edx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %eax;jmp  <.text+>;movl %ecx, %eax;movl (%esi), %ecx;movw %ax, (%ecx)": 1,
                "cmpb $, %al;jne  <.text+>;movl %edx, (%edi);movl (%esi), %eax;andb $-, (%eax)": 1,
                "movl %edx, (%edi);movl (%esi), %eax;andb $-, (%eax);movl (%esi), %eax;andb $-, (%eax)": 1,
                "andb $, %al;cmpb $, %al;jne  <.text+>;movw , %ax;cmpw %dx, %ax": 1,
                "movw , %ax;cmpw %dx, %ax;movl %edx, -(%ebp);jg  <.text+>;movswl %ax, %edx": 1,
                "movl (%esi), %ecx;pushl $;pushl %esi;movw %ax, (%ecx);calll - <.text+>": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>;cmpl $, (%ebx);jne  <.text+>": 1,
                "popl %ecx;je  <.text+>;movl -(%ebp), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "movl -(%ebp), %eax;xorl %ebx, %ebx;cmpl %ebx, %eax;je  <.text+>;testb $, (%eax)": 1,
                "pushl $;jmp  <.text+>;pushl %ebx;pushl %esi;calll - <.text+>": 1,
                "pushl %esi;calll  <.text+>;jmp  <.text+>;pushl %ebx;pushl %esi": 1,
                "int;int;movl %edi, %edi;pushl %esi;movl $, %esi": 4,
                "testl %eax, %eax;popl %ecx;movl %eax, ;je  <.text+>;pushl %esi": 1,
                "movl %eax, ;je  <.text+>;pushl %esi;calll  <.text+>;testl %eax, %eax": 1,
                "calll  <.text+>;testl %eax, %eax;popl %ecx;movl %eax, ;jne  <.text+>": 1,
                "movl $, %esi;je  <.text+>;movl (%eax), %ecx;movw (%eax), %ax;cmpw $, %ax": 2,
                "jne  <.text+>;xorl %eax, %eax;incl %eax;pushl $;movswl %ax, %eax": 2,
                "je  <.text+>;movl %esi, ;pushl $;pushl %eax;calll *": 1,
                "pushl %eax;movw %si, -(%ebp);calll *;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;movl %eax, %esi;calll  <.text+>;movl %esi, %eax": 1,
                "pushl %eax;pushl $;calll  <.text+>;movl %eax, %edi;testl %edi, %edi": 1,
                "testl %eax, %eax;jne  <.text+>;movb (%ebx), %al;andb $, %al;cmpb $, %al": 1,
                "pushl %eax;pushl (%esi);calll  <.text+>;movl %eax, %edi;negl %edi": 1,
                "jne  <.text+>;cmpl $, %eax;jne  <.text+>;movl , %edx;pushl $": 1,
                "movl , %edx;pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl %eax;movl %edx, -(%ebp);calll - <.text+>;subw $, %ax": 1,
                "movl -(%ebp), %edi;cmpw $, (%edi);je  <.text+>;movzwl (%edi), %eax;addl %edi, %eax": 1,
                "jmp  <.text+>;movl $, %eax;leal (%edi), %ecx;pushl %ecx;pushl %eax": 2,
                "pushl %eax;calll - <.text+>;pushl -(%ebp);pushl %eax;pushl (%ebp)": 1,
                "movl %eax, %edi;movl -(%ebp), %ecx;pushl $;calll  <.text+>;movl -(%ebp), %ecx": 1,
                "jmp  <.text+>;pushl $;movl -(%ebp), %ecx;movl $, ;calll  <.text+>": 2,
                "jmp  <.text+>;movl $, ;movl $, %edi;calll  <.text+>;testl %eax, %eax": 1,
                "movl $, %edi;calll  <.text+>;testl %eax, %eax;jne  <.text+>;calll  <.text+>": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;je  <.text+>;addl $, %eax": 1,
                "pushl %edx;addl (%ecx), %eax;cwtl;decl %esi;addl (%ecx), %eax": 1,
                "jp  <.text+>;addl (%ecx), %eax;addb %al, (%ecx);addb %al, (%eax);addb (%ebx), %al": 1,
                "movl , %eax;movl %eax, -(%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "cmpl %edi, %eax;je  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax": 1,
                "movl %esi, %ecx;calll  <.text+>;pushl (%ebp);pushl (%ebp);pushl $": 1,
                "decl %eax;decl %eax;jne  <.text+>;incl ;pushl ": 1,
                "pushl $;movl $, %edi;movl %edi, %ecx;calll  <.text+>;pushl ": 1,
                "movl %edi, %ecx;calll  <.text+>;pushl ;movl %edi, %ecx;calll  <.text+>": 2,
                "movw %ax, ;pushl %ebx;pushl %eax;pushl %esi;pushl (%ebp)": 1,
                "popl %ecx;popl %ecx;pushl ;movl $, %esi;pushl %esi": 1,
                "calll *;addl $, %esp;pushl $;calll  <.text+>;pushl (%ebp)": 1,
                "addl $, %esp;movl %eax, -(%ebp);cmpl %ebx, %eax;je  <.text+>;pushl (%esi)": 1,
                "jmp  <.text+>;movl -(%ebp), %ecx;addl $, %ecx;calll - <.text+>;pushl %ebx": 1,
                "calll  <.text+>;calll - <.text+>;cmpl %ebx, ;jne  <.text+>;cmpb $-, ": 1,
                "pushl $;pushl %esi;calll - <.text+>;pushl (%ebp);calll  <.text+>": 1,
                "je  <.text+>;pushl ;pushl $;pushl %edi;pushl %edi": 2,
                "pushl %ebx;calll  <.text+>;addl $, %esp;pushl %esi;calll - <.text+>": 3,
                "movl %esi, %ecx;calll  <.text+>;movl %esi, %ecx;calll - <.text+>;movw $, ": 1,
                "movl %edi, (%esi);pushl $-;movl %esi, %ecx;calll  <.text+>;movw %bx, ": 1,
                "movl %ebx, -(%ebp);cmpb $, %al;jne  <.text+>;movl -(%ebp), %eax;xorl %ecx, %eax": 1,
                "pushl %eax;calll *;popl %ecx;movl $, %ecx;subl %eax, %ecx": 2,
                "subl %eax, %ecx;shll %ecx;cmpw %cx, -(%ebp);jl  <.text+>;leal -(%ebp), %eax": 1,
                "subl %eax, %ecx;shll %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "jne - <.text+>;movw %bx, (%eax);pushl $;pushl %ebx;calll  <.text+>": 1,
                "pushl %eax;pushl %ecx;pushl $;pushl %edi;pushl %edi": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;movb (%esi), %al": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);cmpb $, (%esi);jne  <.text+>;movl (%esi), %eax": 1,
                "cmpl %ebx, %eax;je  <.text+>;movl (%eax), %ecx;movl %ecx, -(%ebp);movb (%eax), %dl": 1,
                "jne  <.text+>;movl (%eax), %ecx;movl %ecx, -(%ebp);cmpl %ebx, %ecx;je  <.text+>": 1,
                "andb $-, (%eax);movl -(%ebp), %eax;movl (%eax), %eax;addl $, %eax;movl (%ecx), %ecx": 1,
                "movl %esi, -(%ebp);movb , %al;cmpb %bl, %al;je  <.text+>;cmpb $-, %al": 1,
                "calll  <.text+>;popl %ecx;popl %ecx;jmp - <.text+>;movl (%esi), %eax": 1,
                "popl %ecx;jmp - <.text+>;movl (%esi), %eax;movl %eax, -(%ebp);pushl %ebx": 1,
                "jmp - <.text+>;movl (%esi), %eax;movl %eax, -(%ebp);pushl %ebx;pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;movl %eax, -(%ebp);cmpw %bx, %ax": 1,
                "xorl %ebx, %ebx;xorl %edi, %edi;incl %edi;pushl $;pushl %ebx": 1,
                "calll  <.text+>;popl %ecx;popl %ecx;cmpw %bx, ;jne  <.text+>": 1,
                "andb $, %al;cmpb $, %al;je  <.text+>;pushl $;movl %esi, %ecx": 1,
                "cmpb $, %al;je  <.text+>;pushl $;movl %esi, %ecx;calll  <.text+>": 1,
                "pushl $;pushl %eax;movl , %ebx;calll *%ebx;movl $, %esi": 1,
                "pushl %edi;movl %esi, %ecx;calll  <.text+>;jmp  <.text+>;pushl $": 1,
                "pushl %ebx;calll  <.text+>;popl %ecx;popl %ecx;jmp  <.text+>": 2,
                "pushl $;pushl ;calll *;popl %ecx;popl %ecx": 3,
                "pushl %esi;calll *(%eax);movswl %ax, %eax;movl %eax, -(%ebp);pushl %eax": 1,
                "pushl %esi;calll *(%eax);cmpl $, -(%ebp);je  <.text+>;xorl %esi, %esi": 1,
                "pushl %eax;calll *;popl %ecx;popl %ecx;testl %eax, %eax": 1,
                "movb $-, ;incl ;jmp  <.text+>;incl ;jmp  <.text+>": 1,
                "jmp  <.text+>;movw %bx, ;movl (%ebp), %eax;addl %eax, ;movl (%ebp), %eax": 1,
                "movl (%ebp), %ecx;cmpb $, (%ecx);jne  <.text+>;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "andb $, %al;movl (%ebp), %esi;cmpb $, %al;jne  <.text+>;cmpl %ebx, (%ebp)": 1,
                "cmpl %ebx, %eax;jne  <.text+>;movl $, -(%ebp);movl (%ebp), %edi;movb (%edi), %al": 1,
                "cmpb $, %al;jne  <.text+>;movl (%esi), %eax;pushl %edi;pushl %esi": 3,
                "pushl %ebx;pushl ;pushl %edi;pushl %ebx;pushl %esi": 2,
                "movw %ax, ;pushl %ebx;pushl %eax;pushl %edi;pushl %esi": 1,
                "jne  <.text+>;movl , %eax;pushl -(%ebp);pushl %eax;pushl $": 1,
                "cmpl %ecx, %eax;jg  <.text+>;je  <.text+>;cmpl $, %eax;je  <.text+>": 2,
                "je  <.text+>;cmpl $, %eax;je  <.text+>;addl $-, %ecx;cmpl %ecx, %eax": 1,
                "je  <.text+>;addl $-, %ecx;cmpl %ecx, %eax;je  <.text+>;jle  <.text+>": 1,
                "cmpb $, %al;jne  <.text+>;movl (%esi), %eax;pushl (%ebp);pushl %esi": 3,
                "movl (%ebp), %eax;movb (%eax), %al;cmpb $, %al;je  <.text+>;cmpb $, %al": 1,
                "xorl %edi, %edi;incl %edi;jmp  <.text+>;xorl %edi, %edi;incl %edi": 1,
                "pushl ;pushl $;jmp  <.text+>;cmpb $, %al;jne - <.text+>": 2,
                "jmp - <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;je  <.text+>": 1,
                "cmpw $, (%ebp);je  <.text+>;cmpw $, (%ebp);je  <.text+>;pushl (%ebp)": 1,
                "calll - <.text+>;movswl , %eax;movl %eax, ;jmp - <.text+>;xorl %edi, %edi": 1,
                "pushl %ebx;calll  <.text+>;addl $, %esp;jmp  <.text+>;xorl %edi, %edi": 2,
                "cmpw $, (%ebp);jne - <.text+>;pushl $;jmp  <.text+>;xorl %eax, %eax": 1,
                "movl (%ebp), %edi;movb (%edi), %al;movl (%ebp), %esi;cmpb $, %al;jne  <.text+>": 1,
                "movl (%esi), %eax;pushl %edi;pushl %esi;calll *(%eax);jmp  <.text+>": 1,
                "jmp  <.text+>;movb (%edi), %al;cmpb $, %al;jne  <.text+>;movl (%esi), %eax": 1,
                "pushl %edi;pushl $;calll  <.text+>;subw $, %ax;negw %ax": 1,
                "movw (%eax), %ax;movw %ax, -(%ebp);movl (%edi), %eax;pushl %esi;pushl %edi": 1,
                "calll *(%eax);movzwl -(%ebp), %eax;decl %eax;je  <.text+>;decl %eax": 1,
                "jne  <.text+>;incl ;movl (%edi), %eax;pushl %esi;pushl %edi": 1,
                "pushl %eax;movl -(%ebp), %ecx;calll  <.text+>;movl (%edi), %eax;pushl %ebx": 1,
                "addl $, %esp;jmp  <.text+>;movl %ebx, -(%ebp);movl (%edi), %eax;pushl %esi": 1,
                "movsbl , %eax;pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;calll  <.text+>;movw -(%ebp), %ax;movl -(%ebp), %ecx;calll  <.text+>": 1,
                "outb %al, %dx;insb %dx, %es:(%edi);addl (%ecx), %eax;adcb $, %al;addl (%ecx), %eax": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl %ecx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movw %bx, -(%ebp);movl %ebx, -(%ebp);movb %bl, ;movl %ebx, ;movl %ecx, (%esi)": 1,
                "movl %ebx, -(%ebp);movb %bl, ;movl %ebx, ;movl %ecx, (%esi);movl -(%ebp), %eax": 1,
                "movw , %ax;cmpw $, %ax;je  <.text+>;cmpw $, -(%ebp);jne  <.text+>": 1,
                "pushl $;pushl %ebx;calll  <.text+>;addl $, %esp;popl %esi": 1,
                "calll  <.text+>;xorl %edi, %edi;movl %eax, %esi;incl %edi;pushl %edi": 1,
                "movw (%edi), %ax;pushl %eax;pushl (%edi);calll  <.text+>;cmpl %ebx, %eax": 2,
                "jne  <.text+>;xorl %eax, %eax;movw (%edi), %ax;pushl %eax;pushl $": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <.text+>;movl -(%ebp), %ecx;pushl $": 1,
                "movw $, ;calll  <.text+>;pushl %ebx;calll - <.text+>;movl %eax, %ecx": 1,
                "cmpl $, (%esi);jne  <.text+>;pushl (%esi);leal -(%ebp), %ecx;calll  <.text+>": 1,
                "calll  <.text+>;calll - <.text+>;addl $, %eax;pushl %eax;leal -(%ebp), %ecx": 2,
                "movl -(%ebp), %eax;pushl (%eax);leal -(%ebp), %eax;pushl (%edi);pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl (%edi);pushl -(%ebp);pushl %eax;calll  <.text+>": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>;movl -(%ebp), %eax;pushl $-": 1,
                "calll *;movl -(%ebp), %esi;popl %ecx;calll - <.text+>;movl (%eax), %eax": 1,
                "calll *;movl , %esi;leal -(%ebp), %eax;pushl $;pushl %eax": 7,
                "pushl %esi;calll *;popl %ecx;leal -(%ebp), %ecx;movb $, -(%ebp)": 1,
                "jmp  <.text+>;movl , %eax;addl %eax, %eax;movw %ax, ;jmp - <.text+>": 1,
                "movl , %eax;addl %eax, %eax;movw %ax, ;jmp - <.text+>;movl %ebx, -(%ebp)": 1,
                "pushl %eax;pushl $;leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %ecx;pushl $;movl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl , %eax;movl %eax, ;pushl %ebx;pushl (%eax)": 1,
                "movl , %eax;andb $, %cl;cmpb $, %cl;movl %eax, ;je  <.text+>": 1,
                "calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;movl %ebx, ;calll - <.text+>": 1,
                "decl %edx;pushl %edi;movl %edx, %ecx;movl %ecx, %ebx;shrl $, %ecx": 1,
                "movl %ebx, %ecx;andl $, %ecx;shrl %edx;pushl $;rep  movsb (%esi), %es:(%edi)": 1,
                "je  <.text+>;decl %eax;je  <.text+>;subl $, %eax;je  <.text+>": 22,
                "movw %di, (%eax);movl (%esi), %eax;movw %di, (%eax);jmp  <.text+>;pushl %esi": 1,
                "calll *;popl %edi;xorw %ax, %ax;popl %esi;leave": 1,
                "popl %edi;xorw %ax, %ax;popl %esi;leave;retl": 1,
                "je  <.text+>;movl , %eax;movl %edi, -(%ebp);movl (%eax), %edi;movl %edi, -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;pushl %eax;calll  <.text+>;movl %eax, %esi": 3,
                "movl (%ebx), %eax;testl %eax, %eax;je  <.text+>;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "cmpw $, -(%ebp);jne  <.text+>;movl $, -(%ebp);testb $, (%ebx);je  <.text+>": 1,
                "je  <.text+>;movl %eax, %ecx;movl -(%ebp), %eax;jmp  <.text+>;incl %edi": 1,
                "movl %eax, %ecx;movl -(%ebp), %eax;jmp  <.text+>;incl %edi;cmpw $, (%eax,%edi,)": 1,
                "movl %edi, -(%ebp);jle  <.text+>;leal (%edi), %eax;pushl %eax;calll *": 1,
                "popl %ecx;leal -(%ebp), %eax;pushl %eax;xorl %eax, %eax;movw (%ebx), %ax": 1,
                "xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;testw %ax, %ax;je  <.text+>;movl (%ebp), %edi;pushl %edi": 2,
                "movl (%ebp), %edi;pushl %edi;calll *;pushl -(%ebp);movl (%edi), %eax": 1,
                "pushl %edi;calll *;pushl -(%ebp);movl (%edi), %eax;pushl -(%ebp)": 1,
                "movl -(%ebp), %edx;calll - <.text+>;pushl %edi;calll *;pushl %ebx": 1,
                "jne  <.text+>;pushl %eax;calll *;testb $, (%ebx);je  <.text+>": 1,
                "cmpl $, -(%ebp);je - <.text+>;jmp  <.text+>;andl $, -(%ebp);jmp  <.text+>": 1,
                "movl $, (%esi);calll *;popl %edi;popl %esi;xorl %eax, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movw %bx, -(%ebp);movw %bx, -(%ebp);movl (%eax), %ecx;pushl %edi;movl (%ebp), %edi": 1,
                "movl (%eax), %ecx;pushl %edi;movl (%ebp), %edi;movl %eax, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movswl %ax, %eax;movl %eax, -(%ebp);movl %eax, (%ebp);movl , %eax;movl (%eax), %esi": 1,
                "pushl %ebx;xorl %ebx, %ebx;cmpl $, %eax;pushl %esi;movl %ebx, -(%ebp)": 1,
                "pushl %esi;movl %ebx, -(%ebp);jg  <.text+>;cmpl $, %eax;jge  <.text+>": 1,
                "movl $, %esi;pushl %esi;movw $, ;calll  <.text+>;jmp  <.text+>": 1,
                "cmpw %ax, ;jne  <.text+>;movl $, %esi;jmp  <.text+>;cmpb %bl, ": 1,
                "pushl $;jmp  <.text+>;pushl $;popl %eax;jmp  <.text+>": 1,
                "calll  <.text+>;jmp  <.text+>;cmpl $, %eax;je  <.text+>;jle - <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%edi;cmpw $, (%esi);popl %ecx": 1,
                "xorl %ecx, %ecx;cmpl $, %eax;sete %cl;leal (%ecx,%ecx), %ecx;movl %ecx, %esi": 1,
                "movl $, -(%ebp);calll  <.text+>;movl (%eax), %ecx;calll  <.text+>;movl (%eax), %eax": 1,
                "addl $, %esp;pushl (%ebp);calll - <.text+>;testw %ax, %ax;je  <.text+>": 1,
                "testw %ax, %ax;je  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;xorl %esi, %esi": 1,
                "je  <.text+>;cmpl $, %eax;je - <.text+>;jle - <.text+>;cmpl $, %eax": 1,
                "calll - <.text+>;addl $, %esp;jmp - <.text+>;cmpw %di, ;je  <.text+>": 1,
                "je  <.text+>;calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "jne  <.text+>;pushl $;calll - <.text+>;pushl (%eax);calll  <.text+>": 1,
                "jmp  <.text+>;cmpw $, (%esi);jne  <.text+>;movl $, -(%ebp);jmp - <.text+>": 1,
                "movl %eax, -(%ebp);jmp - <.text+>;xlatb;testb %al, (%ebx);addl %edx, -(%esi)": 1,
                "addl %edx, -(%esi);testb %al, (%ebx);addl %ebx, -(,%eax,);addl (%ecx), %eax;incl %eax": 1,
                "addl (%ecx), %eax;incl %eax;testl %eax, (%ebx);addl %eax, (%eax);addl %eax, (%ecx)": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;pushl %esi;pushl $": 2,
                "movw $, ;jmp  <.text+>;pushl %edi;leal (%esi), %eax;pushl %eax": 1,
                "pushl %edi;leal (%esi), %eax;pushl %eax;calll  <.text+>;leal (%esi), %eax": 1,
                "movw %bx, -(%ebp);movl %esi, -(%ebp);calll - <.text+>;pushl %eax;calll  <.text+>": 1,
                "calll  <.text+>;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "cmpw $, %di;movw %bx, (%eax);je  <.text+>;cmpw $, %di;jne  <.text+>": 1,
                "pushl $;pushl $;calll  <.text+>;movw %bx, ;jmp  <.text+>": 1,
                "movw %bx, ;jmp  <.text+>;pushl $;pushl $;pushl $": 1,
                "calll - <.text+>;pushl %edi;calll  <.text+>;movl %esi, ;calll  <.text+>": 1,
                "calll  <.text+>;movl %esi, ;calll  <.text+>;calll  <.text+>;pushl %esi": 1,
                "movl %esi, -(%ebp);calll  <.text+>;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %edi": 1,
                "popl %ecx;popl %ecx;pushl %esi;pushl ;movl %edi, %ecx": 1,
                "calll  <.text+>;movb (%eax), %al;andb $, %al;cmpb $, %al;jne  <.text+>": 1,
                "pushl (%ebp);movl %eax, %edi;calll  <.text+>;movb (%eax), %al;andb $, %al": 1,
                "je  <.text+>;pushl ;calll *;movswl (%edi), %ecx;addl %ecx, %eax": 1,
                "pushl ;calll *;movswl (%edi), %ecx;addl %ecx, %eax;leal (%eax,%eax), %eax": 1,
                "pushl $;calll  <.text+>;pushl %ebx;calll *;addl $, %esp": 1,
                "pushl %eax;movl %edi, %ecx;calll  <.text+>;movl $, %ebx;pushl %ebx": 2,
                "pushl %eax;movl %edi, %ecx;calll  <.text+>;movl %edi, %ecx;calll - <.text+>": 1,
                "cmpl %eax, ;jne  <.text+>;cmpl %eax, ;jne  <.text+>;cmpl %eax, ": 1,
                "movswl , %eax;pushl %eax;pushl ;calll  <.text+>;pushl (%ebp)": 1,
                "andb $, %al;xorl %ebx, %ebx;cmpb $, %al;je  <.text+>;pushl ": 1,
                "pushl %edi;pushl %edi;pushl %ebx;calll  <.text+>;movl , %eax": 2,
                "pushl %ebx;calll  <.text+>;movl , %eax;addl $, %esp;cmpl %ebx, %eax": 1,
                "movl , %ebx;movl %eax, (%ebp);je  <.text+>;pushl %edi;calll  <.text+>": 1,
                "pushl %edi;calll  <.text+>;movzbl (%eax), %esi;pushl ;imull $, %esi, %esi": 2,
                "calll  <.text+>;pushl %eax;calll *(%esi);pushl ;pushl $": 2,
                "movl $, %eax;pushl %eax;movswl (%edi), %eax;pushl %eax;movswl (%edi), %eax": 1,
                "jmp  <.text+>;pushl $;pushl %esi;calll  <.text+>;popl %ecx": 1,
                "pushl %ebx;pushl %esi;calll  <.text+>;addl $, %esp;cmpl $, ": 1,
                "calll  <.text+>;addl $, %esp;cmpl $, ;jne  <.text+>;pushl $": 1,
                "leal (%edi), %ecx;calll - <.text+>;movl (%ebp), %ebx;movzbl (%ebx), %eax;subl $, %eax": 1,
                "je  <.text+>;decl %eax;jne  <.text+>;incl ;movl (%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx;movl %esi, -(%ebp);calll  <.text+>": 1,
                "cmpl $, -(%ebp);jne  <.text+>;incl ;jmp  <.text+>;cmpl %esi, ": 1,
                "pushl %eax;pushl $;movl %eax, (%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "cmpl %esi, %ebx;jle  <.text+>;movl , %eax;shrl %eax;cmpl %eax, %edi": 1,
                "calll - <.text+>;movl , %eax;cmpl %esi, %eax;je  <.text+>;movl , %edi": 1,
                "je  <.text+>;decl %eax;jne  <.text+>;incl ;jmp  <.text+>": 1,
                "jmp  <.text+>;incl ;jmp  <.text+>;movl (%ebp), %eax;addl %eax, ": 1,
                "cmpl $, %eax;jg  <.text+>;je  <.text+>;subl $, %eax;je  <.text+>": 2,
                "movl $, %ebx;pushl %ebx;calll - <.text+>;cmpl %esi, ;je  <.text+>": 1,
                "movl (%ebp), %esi;cmpb $, (%esi);movl $, (%ebp);jne  <.text+>;movl (%ebp), %edi": 1,
                "movl (%ebp), %edi;incl ;movl (%edi), %eax;pushl %esi;pushl %edi": 1,
                "xorl %eax, %eax;movw , %ax;pushl %eax;pushl (%ebp);pushl %edi": 2,
                "movw , %ax;pushl %eax;pushl (%ebp);pushl %edi;pushl %ebx": 2,
                "calll - <.text+>;pushl ;movl , %esi;pushl ;calll *%esi": 1,
                "calll - <.text+>;pushl ;pushl ;calll *%esi;popl %ecx": 1,
                "pushl ;pushl ;calll *%esi;popl %ecx;popl %ecx": 1,
                "movw $, ;calll  <.text+>;addl $, %edi;movl %edi, %ecx;calll - <.text+>": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%esi), %edi;movl (%edi), %ebx": 1,
                "movl (%esi), %edi;movl (%edi), %ebx;movl $, -(%ebp);calll  <.text+>;movl (%eax), %eax": 1,
                "je - <.text+>;cmpw $, %ax;je - <.text+>;cmpl $-, (%esi);je  <.text+>": 1,
                "je  <.text+>;cmpw $-, (%esi);je  <.text+>;cmpl $, (%esi);je  <.text+>": 1,
                "movl (%ebp), %ebx;jne  <.text+>;cmpw %cx, (%ebx);jbe  <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl %edi;movl %esi, %eax;calll - <.text+>": 1,
                "pushl %edi;movl %esi, %eax;calll - <.text+>;jmp  <.text+>;xorl %edi, %edi": 1,
                "je  <.text+>;pushl $;calll *;decw ;movl $, -(%ebp)": 1,
                "pushl (%ebp);pushl %eax;pushl (%ebp);movl %esi, %eax;pushl (%ebp)": 1,
                "movl $, ;calll - <.text+>;movl %eax, -(%ebp);jmp  <.text+>;pushl $": 1,
                "addl (%ecx), %eax;orl $, %eax;cltd;addl (%ecx), %eax;decl %esi": 1,
                "movw $, ;movl $, ;calll  <.text+>;pushl -(%ebp);movl %esi, %ecx": 1,
                "movw %bx, ;calll *;cmpl %ebx, %eax;popl %ecx;movl %eax, ": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movswl (%ebp), %eax;pushl $": 1,
                "xorl %esi, %esi;popl %edi;incl %esi;movl %edi, ;movl %eax, ": 1,
                "movl %edi, ;movl %eax, ;movl %esi, ;calll  <.text+>;testw %ax, %ax": 1,
                "addl %eax, %eax;movw %ax, ;xorl %esi, %esi;movw %si, ;calll - <.text+>": 1,
                "movswl %bx, %eax;popl %esi;movl -(%ebp), %ecx;popl %ebx;calll  <.text+>": 1,
                "movl %eax, -(%ebp);pushl %edi;je  <.text+>;movl $, %edi;movw (%esi), %cx": 1,
                "pushl %edi;je  <.text+>;movl $, %edi;movw (%esi), %cx;xorl %edx, %edx": 1,
                "cmpw %dx, %cx;movl $, -(%ebp);jne  <.text+>;movl %edi, -(%ebp);movl (%esi), %eax": 1,
                "movl (%esi), %eax;movw (%eax), %cx;cmpw %dx, %cx;movl %ebx, -(%ebp);jne  <.text+>": 1,
                "cmpw %dx, (%eax);movl %ebx, -(%ebp);jne  <.text+>;movl %edi, -(%ebp);movl (%esi), %eax": 1,
                "je  <.text+>;cmpw $, (%esi);je  <.text+>;movl %edi, %ebx;testw %dx, %dx": 1,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);pushl $;leal -(%ebp), %eax;pushl %eax": 4,
                "leal -(%ebp), %eax;pushl %eax;pushl $;xorl %esi, %esi;calll *": 1,
                "pushl $;addl $, %ebx;pushl %ebx;calll *%edi;addl $, %esp": 1,
                "pushl $;pushl %ebx;calll *;addl $, %esp;testl %eax, %eax": 2,
                "popl %ecx;popl %ecx;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>": 2,
                "pushl $;pushl %edi;pushl %edi;pushl %eax;sbbl %esi, %esi": 1,
                "calll *;cmpl %edi, %eax;jne  <.text+>;leal -(%ebp), %eax;pushl %eax": 4,
                "jne  <.text+>;leal -(%ebp), %eax;pushl %eax;calll *;pushl %edi": 1,
                "pushl $;pushl $;calll *%edi;movl %eax, %esi;testl %esi, %esi": 1,
                "popl %ecx;je  <.text+>;cmpl $, (%ebp);movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "pushl (%ebp);pushl %eax;calll *;popl %ecx;popl %ecx": 3,
                "cmpl $, (%ebp);je  <.text+>;pushl $;pushl (%ebp);calll *%ebx": 3,
                "movl $, (%esi);popl %edi;movl %esi, %eax;popl %esi;popl %ebp": 1,
                "testl %edi, %edi;je  <.text+>;pushl %ebx;pushl %esi;movl , %esi": 1,
                "pushl (%ebp);calll *%edi;popl %ecx;leal (%eax,%eax), %eax;pushl %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp);pushl (%ebp);pushl %ebx": 1,
                "testw %ax, %ax;jne  <.text+>;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;movl (%esi), %eax": 2,
                "movl (%esi), %eax;jmp  <.text+>;orl $-, %eax;pushl $;pushl (%ebp)": 1,
                "pushl (%ebp);pushl $;calll - <.text+>;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl (%eax);calll *%edi;popl %ecx;leal (%eax,%eax), %eax;pushl %eax": 1,
                "movl (%esi), %eax;testl %eax, %eax;movl %ebx, (%ebp);je  <.text+>;pushl %eax": 1,
                "movw (%esi), %ax;pushl %eax;pushl %ebx;pushl (%esi);pushl (%ebp)": 1,
                "addl $, %eax;xorb (%eax), %cl;andl $, %ecx;xorw %cx, (%eax);pushl $": 1,
                "calll *;cmpl $-, %eax;movl %eax, -(%ebp);jne  <.text+>;movw $, %ax": 2,
                "movl %eax, -(%ebp);jne  <.text+>;movw $, %ax;jmp  <.text+>;movl , %esi": 1,
                "movw $, %ax;jmp  <.text+>;movl , %esi;cmpw %bx, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %ebx;pushl (,%eax,);pushl -(%ebp);calll *;movl $, -(%ebp)": 1,
                "pushl -(%ebp);calll *;movl $, -(%ebp);jmp  <.text+>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll *;incl -(%ebp);cmpw %bx, %ax;je  <.text+>": 1,
                "movl %ebx, -(%ebp);calll *;testw %ax, %ax;je - <.text+>;leal -(%ebp), %eax": 1,
                "cmpl %ebx, -(%ebp);jne - <.text+>;xorl %eax, %eax;pushl $;popl %edx": 1,
                "calll *%edi;cmpw %bx, -(%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ebx, %edi;je - <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl %ebx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;xorl %edi, %edi;cmpl %edi, (%eax)": 1,
                "je  <.text+>;xorl %eax, %eax;movw $, ;incl %eax;jmp  <.text+>": 1,
                "addl %eax, %ecx;cmpl $, %ecx;ja  <.text+>;pushl -(%ebp);movl , %ebx": 1,
                "pushl %eax;pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax": 3,
                "movl %eax, -(%ebp);je  <.text+>;movl $, %ebx;pushl %ebx;calll *": 1,
                "pushl -(%ebp);pushl -(%ebp);calll *;testl %eax, %eax;je  <.text+>": 3,
                "calll *%ebx;movl -(%ebp), %eax;leal (%eax), %ecx;movl -(%ebp), %eax;cltd": 1,
                "cltd;idivl %ecx;incl -(%ebp);addl $, -(%ebp);cmpl $, ": 1,
                "calll  <.text+>;leave;retl $;calll *;movl %eax, ": 1,
                "movl %eax, -(%ebp);movl $, %eax;pushl %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "cmpl $, (%ebp);movl $, %esi;je  <.text+>;pushl %edi;pushl %esi": 1,
                "pushl %esi;pushl $;pushl $;pushl -(%ebp);pushl -(%ebp)": 1,
                "movl %edi, ;movw %di, ;movl %edi, ;incl %ebx;calll *": 1,
                "movw $, ;calll  <.text+>;negl %eax;sbbl %eax, %eax;andl $, %eax": 1,
                "sbbl %eax, %eax;andl $, %eax;addl $, %eax;pushl %eax;jmp  <.text+>": 1,
                "cmpw $, ;je  <.text+>;movw $, ;jmp  <.text+>;pushl %esi": 1,
                "movswl (%ebp), %ecx;pushl %ebx;pushl %ecx;pushl $;pushl (%eax)": 1,
                "scasb %es:(%edi), %al;addl (%ecx), %eax;cmpl %ebp, -(%esi);addl (%ecx), %eax;pushfl": 1,
                "addl (%ecx), %eax;cmpl %ebp, -(%esi);addl (%ecx), %eax;pushfl;scasb %es:(%edi), %al": 1,
                "scasb %es:(%edi), %al;addl (%ecx), %eax;shrl %cl, -(%ebp);addl (%ecx), %eax;shrl %cl, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);jne  <.text+>;xorl %eax, %eax": 1,
                "calll - <.text+>;xorl %ebx, %ebx;leal (%esi), %edi;cmpl %ebx, %edi;movl %ebx, -(%ebp)": 1,
                "je  <.text+>;movl %edi, %ecx;calll - <.text+>;pushl %eax;movl %edi, %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;movl %esi, %ecx;movb $, -(%ebp)": 2,
                "je  <.text+>;pushl (%eax);jmp  <.text+>;pushl %ebx;calll  <.text+>": 1,
                "pushl %ebx;calll  <.text+>;pushl $;pushl (%esi);movl %eax, -(%ebp)": 1,
                "movl %esi, %ecx;calll  <.text+>;movb $, -(%ebp);calll  <.text+>;movl (%eax), %ecx": 1,
                "pushl $;movl %esi, %ecx;movb $, -(%ebp);calll  <.text+>;movl %eax, %ecx": 1,
                "movw %bx, (%eax);pushl %ebx;pushl $;pushl $;pushl %ebx": 1,
                "calll  <.text+>;pushl $;pushl (%esi);calll *;pushl %eax": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;leal (%esi), %edi;pushl $": 1,
                "je  <.text+>;cmpl $, (%ecx);je  <.text+>;pushl (%edi);calll  <.text+>": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;leal (%esi), %edi;movl %edi, %ecx": 1,
                "movl %edi, %ecx;calll  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %edi, %ecx;calll - <.text+>;movl %edi, %ecx;calll  <.text+>;leal (%ebp), %ecx": 1,
                "movl $, %eax;pushl %eax;pushl (%ecx);pushl (%ebp);calll *": 4,
                "pushl (%esi);movl %esi, %ecx;calll *(%eax);leal -(%ebp), %ecx;movl %eax, (%esi)": 1,
                "leal -(%ebp), %ecx;movl %eax, (%esi);movb %bl, -(%ebp);movl %edi, -(%ebp);calll - <.text+>": 1,
                "calll - <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;movl %edi, -(%ebp);calll - <.text+>": 1,
                "leal -(%ebp), %ecx;movl %esp, -(%ebp);calll  <.text+>;xorl %ebx, %ebx;leal -(%ebp), %ecx": 1,
                "pushl -(%ebp);calll *;xorl %esi, %esi;jmp  <.text+>;leal -(%ebp), %ecx": 1,
                "pushl -(%ebp);calll  <.text+>;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl (%ebp);leal -(%ebp), %ecx;movl %eax, %esi": 1,
                "movl $, %eax;retl;xorl %ebx, %ebx;movl $, -(%ebp);calll  <.text+>": 1,
                "retl;xorl %ebx, %ebx;movl $, -(%ebp);calll  <.text+>;movl , %esi": 1,
                "popl %edi;movl %esi, %eax;popl %esi;movl %ecx, %fs:;popl %ebx": 2,
                "calll  <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);movl %ebx, -(%ebp);calll  <.text+>": 1,
                "movb $, -(%ebp);je  <.text+>;pushl (%esi);pushl $;calll  <.text+>": 1,
                "pushl $;calll  <.text+>;movl %eax, %edi;jmp  <.text+>;xorl %edi, %edi": 2,
                "calll  <.text+>;movl %eax, %edi;jmp  <.text+>;xorl %edi, %edi;pushl $": 2,
                "movl %eax, %edi;jmp  <.text+>;xorl %edi, %edi;pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;xorl %ebx, %ebx;movl $, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx": 4,
                "leal -(%ebp), %ecx;movl %ebx, -(%ebp);calll  <.text+>;pushl $;movb $, -(%ebp)": 2,
                "leal (%esi), %eax;pushl %eax;movl %edi, %ecx;movb $, -(%ebp);movl %edi, -(%ebp)": 1,
                "jmp  <.text+>;movl %ebx, -(%ebp);movl -(%ebp), %ecx;pushl $;leal (%esi), %edi": 2,
                "movl %ebx, -(%ebp);movl -(%ebp), %ecx;pushl $;leal (%esi), %edi;pushl %edi": 2,
                "leal (%esi), %edi;pushl %edi;movb $, -(%ebp);movl %ecx, -(%ebp);calll  <.text+>": 2,
                "leal (%esi), %eax;leal (%esi), %edi;pushl %eax;movl %edi, %ecx;movb $, -(%ebp)": 1,
                "pushl %esi;movl %ecx, %esi;pushl %edi;leal (%esi), %ebx;movl $, %edi": 1,
                "leal (%esi), %ebx;movl $, %edi;pushl %edi;movl %ebx, %ecx;movl %esi, -(%ebp)": 1,
                "calll  <.text+>;andl $, -(%ebp);pushl %edi;leal (%esi), %ecx;calll  <.text+>": 1,
                "calll  <.text+>;leal (%esi), %ecx;pushl %edi;movb $, -(%ebp);calll  <.text+>": 1,
                "calll  <.text+>;pushl (%ebp);xorl %eax, %eax;movl %ebx, %ecx;movb $, -(%ebp)": 1,
                "pushl (%ebp);calll *;popl %ecx;popl %ecx;pushl %eax": 1,
                "calll *;popl %ecx;popl %ecx;pushl %eax;leal (%esi), %ecx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;popl %ebp;jmp - <.text+>": 10,
                "popl %ebp;jmp - <.text+>;int;int;int": 12,
                "int;int;int;int;pushl (%ecx)": 2,
                "leal (%esi), %edi;movl %edi, %ecx;movb $, -(%ebp);calll  <.text+>;leal (%esi), %ecx": 1,
                "leal (%esi), %ecx;movb $, -(%ebp);calll - <.text+>;orl $-, (%esi);pushl $": 1,
                "movb $, -(%ebp);calll - <.text+>;orl $-, (%esi);pushl $;movl %edi, %ecx": 1,
                "pushl $;leal -(%ebp), %ecx;calll  <.text+>;calll - <.text+>;movswl (%eax), %eax": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp);leal (%esi), %ecx": 2,
                "pushl %esi;pushl %edi;movl %ecx, %esi;calll  <.text+>;cmpl $, (%esi)": 2,
                "calll  <.text+>;cmpl $, (%esi);je  <.text+>;pushl (%edi);leal (%esi), %ecx": 1,
                "pushl %edi;pushl $;pushl %edi;movl %ebx, %ecx;calll  <.text+>": 1,
                "calll  <.text+>;addl $, %esi;cmpl %edi, %esi;je  <.text+>;cmpl %edi, (%esi)": 1,
                "calll  <.text+>;calll - <.text+>;pushl -(%ebp);movl (%eax), %eax;pushl %eax": 2,
                "calll - <.text+>;pushl -(%ebp);movl (%eax), %eax;pushl %eax;pushl %edi": 1,
                "calll - <.text+>;pushl %eax;movl %esi, %ecx;calll  <.text+>;popl %edi": 1,
                "pushl (%esi);calll *;movl -(%ebp), %eax;subl -(%ebp), %eax;pushl %ebx": 2,
                "pushl %edi;pushl $;leal (%esi), %eax;pushl %eax;leal -(%ebp), %eax": 15,
                "pushl (%esi);calll *;leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx": 2,
                "leal -(%ebp), %ecx;movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%esi), %eax;pushl %ecx": 2,
                "movl (%esi), %eax;pushl %ecx;pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp)": 2,
                "leal (%esi), %eax;pushl -(%ebp);pushl %edi;pushl %eax;leal -(%ebp), %eax": 2,
                "movl %eax, %esi;movl %esi, %ecx;calll - <.text+>;cmpl $-, %eax;je  <.text+>": 1,
                "pushl $;calll  <.text+>;popl %esi;retl;int": 1,
                "movl %ecx, (%eax);movl %esi, %ecx;calll  <.text+>;popl %esi;leave": 2,
                "pushl (%eax);calll *;retl;int;int": 12,
                "pushl $;calll  <.text+>;popl %esi;popl %ebp;retl $": 2,
                "je  <.text+>;decl %eax;jne  <.text+>;movl (%ebx), %ebx;pushl $": 1,
                "jne  <.text+>;movl (%ebx), %ebx;pushl $;jmp  <.text+>;movl (%ebx), %ebx": 1,
                "je  <.text+>;testl %esi, %esi;jne  <.text+>;pushl $;movl %ebx, %ecx": 1,
                "pushl (%ebp);movl %edi, %ecx;movl %esi, (%edi);calll - <.text+>;testl %esi, %esi": 1,
                "cmpl %ebx, %eax;je  <.text+>;testl %ebx, %ebx;jl  <.text+>;cmpl $, %ebx": 1,
                "pushl %ebx;movl %esi, %ecx;calll - <.text+>;popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;pushl (%eax);calll *;movl (%ebp), %ecx;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;orl $-, %edi;cmpl %edi, %ecx;je  <.text+>;movl %ecx, -(%ebp)": 1,
                "subl (%ebp), %eax;addl -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;cmpl %edi, %eax": 1,
                "jne  <.text+>;cmpl %edi, (%ebp);je  <.text+>;movl (%edx), %eax;subl -(%ebp), %eax": 1,
                "movl (%edx), %ecx;subl (%ebp), %ecx;cmpl %edi, (%ebp);movl %ecx, -(%ebp);jne  <.text+>": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %ecx;cmpl %edi, (%ebp);je  <.text+>;movl (%edx), %edi": 1,
                "jne  <.text+>;subl -(%ebp), %ebx;addl %edi, %ebx;movl %ebx, -(%ebp);jmp  <.text+>": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;movb $, -(%ebp);calll *": 1,
                "pushl %edi;pushl -(%ebp);leal -(%ebp), %ecx;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);leal -(%ebp), %ecx;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>": 5,
                "leal -(%ebp), %ecx;calll - <.text+>;cmpl $, %eax;je  <.text+>;movl (%ebp), %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 3,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 3,
                "pushl %ebx;pushl (%ebp);pushl (%ebp);pushl %esi;calll - <.text+>": 1,
                "calll  <.text+>;movl -(%ebp), %esi;movl %eax, %ecx;shrl $, %ecx;andb $, %cl": 1,
                "int;int;int;calll - <.text+>;movl (%eax), %eax": 1,
                "movl (%eax), %edi;testl %edi, %edi;je  <.text+>;movl , %eax;movl (%eax), %eax": 1,
                "calll  <.text+>;movl %eax, %ecx;calll  <.text+>;pushl %esi;pushl $": 12,
                "movl $, %ebx;pushl %ebx;pushl %edi;calll - <.text+>;pushl %edi": 1,
                "pushl $;pushl %edi;calll  <.text+>;cmpl $, (%esi);je  <.text+>": 1,
                "cmpl $, (%esi);jne  <.text+>;cmpl $, (%edi);je  <.text+>;movl (%esi), %eax": 1,
                "pushl $;movl %edi, %ecx;calll  <.text+>;movl %edi, %ecx;calll  <.text+>": 5,
                "pushl %ebx;movl %edi, %ecx;calll  <.text+>;calll - <.text+>;pushl -(%ebp)": 1,
                "pushl %esi;movl %ecx, %esi;movl %eax, -(%ebp);leal (%esi), %eax;xorl %ebx, %ebx": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll - <.text+>": 14,
                "pushl (%ebp);movl %ecx, %esi;pushl (%ebp);calll - <.text+>;cmpl $, (%ebp)": 1,
                "int;int;int;xorl %eax, %eax;movl %eax, (%ecx)": 1,
                "andl $, -(%ebp);leal (%esi), %ecx;movl $, (%esi);calll  <.text+>;leal (%esi), %ecx": 2,
                "je  <.text+>;movl (%esi), %edx;pushl %edi;pushl $;popl %ecx": 1,
                "jmp  <.text+>;pushl (%ebp);movl (%esi), %edx;xorl %ecx, %ecx;pushl %ecx": 1,
                "xorl %eax, %eax;pushl %eax;pushl $;pushl $;pushl %edi": 1,
                "xorl %eax, %eax;jmp  <.text+>;movl (%eax), %eax;pushl %eax;calll *": 1,
                "calll  <.text+>;calll *;pushl %eax;calll  <.text+>;movl (%esi), %eax": 1,
                "movl (%ebp), %eax;decl %eax;pushl $;popl %ebx;je  <.text+>": 1,
                "cmpl %ebx, (%edi);jne  <.text+>;pushl %eax;pushl %ecx;movl -(%ebp), %ecx": 1,
                "calll - <.text+>;cmpl %ebx, -(%ebp);movl %eax, %ecx;movl %ecx, -(%ebp);je  <.text+>": 1,
                "movl $, (%edi);pushl (%ebp);movl %esi, %ecx;calll - <.text+>;cmpl %ebx, -(%ebp)": 1,
                "movl %ebx, (%eax);xorl %eax, %eax;incl %eax;popl %edi;popl %esi": 1,
                "cmpl %edi, %eax;je  <.text+>;cmpl %edi, (%esi);je  <.text+>;movl %eax, %ecx": 1,
                "movl %esi, %ecx;pushl $;calll - <.text+>;movl %eax, %ecx;calll  <.text+>": 1,
                "jne  <.text+>;pushl $;calll  <.text+>;testl %eax, %eax;movl %esi, %ecx": 1,
                "testl %eax, %eax;je  <.text+>;cmpl $, (%eax);jne  <.text+>;leal -(%ebp), %eax": 1,
                "pushl %ecx;pushl %esi;movl %ecx, %esi;pushl $;movl %esi, -(%ebp)": 6,
                "pushl %edi;movl %ecx, %esi;pushl %esi;leal (%esi), %edi;pushl $": 2,
                "pushl (%esi);calll *;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "movl %esp, %ebp;pushl %esi;leal (%ecx), %esi;testl %esi, %esi;jne  <.text+>": 1,
                "je  <.text+>;calll  <.text+>;movl (%ebp), %ecx;movl (%eax), %eax;fldl (%ecx)": 1,
                "calll  <.text+>;andl $, (%esi);popl %esi;retl $;int": 1,
                "leal (%esi), %ecx;fstpl (%ecx);movl (%eax), %eax;pushl %ecx;movl %eax, (%ecx)": 1,
                "calll  <.text+>;subl $, %esp;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "pushl %eax;pushl (%edi);calll *;jmp  <.text+>;pushl %ebx": 1,
                "calll *;jmp  <.text+>;pushl %ebx;pushl $;calll  <.text+>": 1,
                "popl %ecx;movl %eax, (%ebp);testl %eax, %eax;movl $, -(%ebp);je  <.text+>": 3,
                "movl (%esi), %eax;subl $, %eax;pushl %eax;movl (%ebx), %eax;incl %eax": 1,
                "decl %eax;decl %eax;pushl %eax;movl %edi, %ecx;calll  <.text+>": 3,
                "movl %edi, %ecx;calll  <.text+>;movl (%esi), %eax;decl %eax;decl %eax": 2,
                "calll  <.text+>;movl (%esi), %eax;decl %eax;decl %eax;pushl %eax": 2,
                "decl %eax;decl %eax;pushl %eax;movl (%esi), %eax;decl %eax": 1,
                "pushl (%esi);decl %eax;decl %eax;pushl %eax;movl %edi, %ecx": 1,
                "jne  <.text+>;leal (%ebp), %ecx;calll  <.text+>;pushl $;leal (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);je  <.text+>;xorl %eax, %eax;incl %eax;xorl %edx, %edx": 1,
                "xorl %ecx, %ecx;incl %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl -(%ebp), %edx": 2,
                "movl %edi, %ecx;pushl %eax;calll *(%ebx);movl -(%ebp), %ebx;pushl $": 1,
                "movl -(%ebp), %ebx;pushl $;leal (%ebp), %eax;pushl %ebx;movl %edi, %ecx": 1,
                "movb $, -(%ebp);movl %ebx, (%eax);calll - <.text+>;leal (%esi), %ecx;movb $, -(%ebp)": 1,
                "movb $, (%esi);calll  <.text+>;pushl $;leal -(%ebp), %ecx;movb $, -(%ebp)": 1,
                "movl %edi, -(%ebp);calll - <.text+>;fstpl -(%ebp);leal -(%ebp), %ecx;movl %edi, -(%ebp)": 1,
                "movw %ax, -(%ebp);movl $, %eax;pushl %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "pushl %eax;pushl $;pushl (%esi);calll *;pushl $-": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll *%edi;movl -(%ebp), %eax": 1,
                "subl -(%ebp), %ecx;leal (%eax,%ebx), %eax;pushl %ecx;pushl %eax;pushl $": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;pushl $;leal -(%ebp), %ecx": 3,
                "pushl %ecx;movl %eax, %ecx;movl %eax, (%ebp);calll - <.text+>;pushl (%ebp)": 1,
                "movl %esi, %ecx;calll - <.text+>;movl -(%ebp), %edx;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "subl -(%ebp), %ecx;leal (%eax,%ebx), %eax;pushl %ecx;pushl %eax;movl -(%ebp), %eax": 1,
                "subl %ecx, %edx;pushl %edx;leal -(%edi), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %ecx;leal -(%eax,%edi), %eax;pushl %eax;leal (%esi), %ecx;calll  <.text+>": 1,
                "movw %si, -(%ebp);calll  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "movl %esi, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>": 1,
                "movl %esi, -(%ebp);je  <.text+>;cmpl %ebx, %eax;je  <.text+>;cmpl $, %eax": 1,
                "je  <.text+>;cmpl $, %eax;je  <.text+>;jle  <.text+>;cmpl $, %eax": 5,
                "movzwl -(%ebp), %ebx;fstl -(%ebp);fstpl -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx;movl %eax, %edi;calll  <.text+>": 1,
                "calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>;movl %eax, (%ebp);jmp  <.text+>": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;testl %eax, %eax;je  <.text+>;leal -(%ebp), %eax": 10,
                "testl %eax, %eax;jne - <.text+>;jmp  <.text+>;xorl %edi, %edi;jmp  <.text+>": 1,
                "andl -(%ebp), %eax;testw %ax, %ax;je  <.text+>;pushl (%ebp);fldl -(%ebp)": 1,
                "fstpl (%esp);calll - <.text+>;fldl -(%ebp);subl $, %esp;movl %esp, %eax": 1,
                "fstpl (%eax);movl %esp, (%ebp);movl %esi, (%eax);calll - <.text+>;leal -(%ebp), %eax": 1,
                "calll  <.text+>;testl %eax, %eax;jne - <.text+>;jmp  <.text+>;leal -(%ebp), %eax": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;leal (%ecx), %ebx;pushl %edi": 2,
                "jmp  <.text+>;decl -(%ebp);pushl -(%ebp);leal -(%ebp), %ecx;pushl %esi": 2,
                "movl (%esi), %eax;movl (%eax), %ecx;andl $, -(%ebp);leal -(%ebp), %edx;pushl %edx": 1,
                "movl $, (%esp);pushl -(%ebp);calll *;testl %eax, %eax;popl %ecx": 1,
                "movb $, -(%ebp);calll *%edi;pushl $;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "setg %cl;incl %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "calll - <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl %eax;calll *(%ecx)": 1,
                "calll *(%ecx);incl -(%ebp);movw -(%ebp), %ax;cmpw -(%ebp), %ax;jb - <.text+>": 1,
                "movl -(%ebp), %eax;pushl (%ebx,%eax);calll *%edi;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "je - <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl %eax;calll *(%ecx)": 1,
                "calll - <.text+>;jmp  <.text+>;cmpb %cl, (%esi);je  <.text+>;leal (%esi), %ecx": 1,
                "movl $, %ebx;pushl %ebx;leal (%esi), %ecx;movl (%ecx), %eax;pushl $": 1,
                "leal (%esi), %ecx;calll - <.text+>;pushl %edi;pushl $;pushl %esi": 1,
                "pushl $-;leal (%ebp), %ecx;calll  <.text+>;pushl (%ebp);leal (%esi), %ecx": 1,
                "leal -(%ebp), %ecx;movl $, -(%ebp);movb $, (%edi);calll  <.text+>;movl %esi, %ecx": 1,
                "pushl $;pushl %eax;calll  <.text+>;pushl %eax;calll *": 1,
                "calll - <.text+>;orl $-, -(%ebp);movl %esi, %ecx;calll - <.text+>;movl -(%ebp), %ecx": 3,
                "calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>;andl $, -(%ebp);pushl $": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl (%eax);calll *": 2,
                "pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;jmp  <.text+>;pushl $": 2,
                "popl %ecx;pushl -(%ebp);xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 2,
                "movb $, -(%ebp);movb $, -(%ebp);calll *;addl $, %esp;pushl -(%ebp)": 1,
                "movl (%esi), %ecx;movl (%ecx), %eax;calll *(%eax);cmpl $, %eax;je - <.text+>": 2,
                "cmpl $, %ecx;jg  <.text+>;je  <.text+>;movl %ecx, %eax;subl $, %eax": 1,
                "orl $, %eax;jmp - <.text+>;movl (%ebp), %eax;andl $, %eax;subl $, %eax": 1,
                "xorl %eax, %eax;incl %eax;jmp  <.text+>;pushl $;popl %eax": 5,
                "cmpl $, %esi;jae  <.text+>;testl %eax, %eax;ja - <.text+>;jb  <.text+>": 1,
                "pushl $;pushl %ebx;pushl %eax;pushl %ecx;leal (%ebp), %eax": 1,
                "movl $, (%esi);movl (%esi), %eax;testl $, %eax;movl $, -(%ebp);je  <.text+>": 1,
                "movl (%esi), %eax;testl $, %eax;movl $, -(%ebp);je  <.text+>;movl (%esi), %ecx": 1,
                "je  <.text+>;andl $, %eax;orl %eax, (%ecx);leal (%esi), %ecx;calll  <.text+>": 1,
                "je  <.text+>;cmpl $, (%ebp);je  <.text+>;xorl %eax, %eax;jmp  <.text+>": 1,
                "jle  <.text+>;cmpl $, %eax;jne  <.text+>;movl $, %eax;jmp  <.text+>": 1,
                "andl $, %eax;addl $, %eax;pushl %esi;movl %ecx, %esi;notl %eax": 1,
                "testb $-, (%esi);pushl %edi;je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "testb %al, %al;jne  <.text+>;movl -(%ebp), %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %ecx;leal -(%ebp), %eax;pushl %eax;calll  <.text+>;movl %eax, %esi": 1,
                "movl %eax, %esi;testl %esi, %esi;jne - <.text+>;jmp  <.text+>;pushl (%edi)": 1,
                "testl %eax, %eax;jne  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx": 1,
                "jne - <.text+>;popl %esi;leave;retl;xorl %eax, %eax": 1,
                "calll *(%edx);popl %ebp;retl $;int;int": 8,
                "calll *(%eax);xorl %esi, %esi;cmpl %esi, %eax;je  <.text+>;pushl %eax": 2,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll  <.text+>;movswl %ax, %eax": 2,
                "cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne  <.text+>;xorl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;pushl (%ebp);pushl %eax;calll - <.text+>": 1,
                "movl %edi, %ecx;calll  <.text+>;movl -(%ebp), %eax;popl %edi;popl %esi": 2,
                "movl %ecx, %edi;calll - <.text+>;jmp  <.text+>;movl (%esi), %eax;movl %esi, %ecx": 3,
                "pushl %edi;movl %ecx, %edi;movl (%edi), %eax;calll *(%eax);movl %eax, %ebx": 1,
                "calll *(%eax);cmpl $, %eax;je  <.text+>;pushl %ebx;pushl $": 1,
                "movl (%ebp), %ecx;andl $, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "jne - <.text+>;movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);testl %eax, %eax": 1,
                "jmpl *(%eax);jmpl *(%eax);xorl %eax, %eax;popl %esi;retl": 1,
                "pushl %ecx;andl $, -(%ebp);pushl %esi;movl %ecx, %esi;movl (%esi), %eax": 1,
                "movl (%ebp), %ecx;calll  <.text+>;movl (%esi), %eax;andl $, -(%ebp);pushl $": 1,
                "pushl %ecx;movl %esi, %ecx;calll *(%eax);movl -(%ebp), %eax;leal (%eax,%eax), %eax": 2,
                "cmpw $, (%edi);je  <.text+>;movl (%ebp), %ecx;pushl $;calll  <.text+>": 2,
                "movl -(%ebp), %eax;leal (%edi,%eax,), %eax;pushl %eax;calll *;xorl %edx, %edx": 1,
                "addl %ecx, %eax;leal (%edi,%eax,), %eax;cmpw $, (%eax);jne  <.text+>;movw %dx, (%eax)": 1,
                "leal (%edi,%eax,), %eax;cmpw $, (%eax);jne  <.text+>;movw %dx, (%eax);movl (%esi), %eax": 1,
                "jne  <.text+>;movw %dx, (%eax);movl (%esi), %eax;incl %ecx;cmpl -(%eax), %ecx": 1,
                "incl %ecx;cmpl -(%eax), %ecx;jl - <.text+>;jmp  <.text+>;movl -(%ebp), %eax": 1,
                "pushl %ecx;movl %esi, %ecx;movl $, -(%ebp);movl %edi, -(%ebp);calll *(%eax)": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;addl %edx, %edx;pushl %edx;pushl %ebx": 2,
                "pushl %ebx;pushl %eax;calll *(%ecx);testw %ax, %ax;jne  <.text+>": 2,
                "movl (%eax), %ecx;pushl %edi;pushl $;leal -(%ebp), %edx;pushl %edx": 5,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 6,
                "calll  <.text+>;movl %edi, %ecx;movw %ax, (%esi);calll  <.text+>;movl %edi, %ecx": 2,
                "int;movl (%ecx), %eax;calll *(%eax);testl %eax, %eax;je  <.text+>": 4,
                "movl (%ecx), %eax;calll *(%eax);testl %eax, %eax;je  <.text+>;pushl %eax": 4,
                "je  <.text+>;pushl %eax;pushl ;calll  <.text+>;jmp  <.text+>": 1,
                "leal (%ecx), %edi;movl (%edi), %eax;xorl %ebx, %ebx;cmpl %ebx, -(%eax);jne  <.text+>": 1,
                "movl %ebx, -(%ebp);calll  <.text+>;movl %eax, %esi;movl (%ebp), %eax;incl %esi": 1,
                "ja  <.text+>;leal -(%esi), %eax;pushl %eax;pushl (%edi);movl (%ebp), %edi": 1,
                "pushl (%edi);movl (%ebp), %edi;pushl %edi;movl $, -(%ebp);calll *": 1,
                "jne  <.text+>;leal (%edi), %esi;movl (%edi), %edx;pushl %ebx;pushl %eax": 1,
                "pushl %ebx;pushl $;leal (%ecx,%ecx), %ecx;pushl %ecx;pushl %eax": 1,
                "calll  <.text+>;movl %esi, %eax;popl %edi;popl %esi;popl %ebx": 3,
                "calll - <.text+>;pushl %eax;calll  <.text+>;movl %eax, %esi;jmp  <.text+>": 1,
                "movl %ebx, -(%ebp);xorl %ebx, %ebx;incl %ebx;pushl %ebx;pushl $": 1,
                "pushl %ebx;pushl $;leal -(%ebp), %ecx;pushl %ecx;movl %esi, %ecx": 1,
                "movl (%esi), %eax;pushl %ebx;pushl %edi;leal -(%ebp), %ecx;pushl %ecx": 1,
                "subl $, %esp;pushl %esi;movl %ecx, %esi;movl (%esi), %ecx;movl (%ecx), %eax": 1,
                "addl $, %esi;pushl %esi;calll  <.text+>;jmp  <.text+>;addl $, %esi": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);movl %ecx, %esi;movl (%esi), %ecx": 10,
                "pushl %edi;pushl (%ebp);movl %ecx, %esi;movl (%esi), %ecx;movl (%ecx), %eax": 9,
                "pushl (%ebp);movl %ecx, %esi;movl (%esi), %ecx;movl (%ecx), %eax;xorl %edi, %edi": 9,
                "decl %eax;jne  <.text+>;pushl %edi;pushl $;leal (%ebp), %eax": 2,
                "pushl $;leal (%ebp), %eax;pushl %eax;leal (%esi), %ecx;calll  <.text+>": 5,
                "pushl %eax;calll - <.text+>;addl $, %esi;pushl %eax;movl %esi, %ecx": 4,
                "movl %edi, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx;jmp - <.text+>;movl (%esi), %esi": 1,
                "movl (%esi), %edi;jmp  <.text+>;leal (%esi), %eax;movl (%eax), %ecx;cmpl %edi, -(%ecx)": 1,
                "decl %eax;je  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%ebp), %edi": 1,
                "cmpl %ebx, %edx;jb  <.text+>;ja  <.text+>;cmpl -(%ebp), %eax;jbe  <.text+>": 1,
                "calll *(%eax);cmpl %edi, %edx;ja - <.text+>;jb  <.text+>;cmpl %ebx, %eax": 1,
                "calll *(%eax);pushl (%eax);movl (%esi), %eax;movl %esi, %ecx;calll *(%eax)": 2,
                "calll - <.text+>;movl %eax, %edi;jmp  <.text+>;movl (%ebp), %eax;pushl (%eax)": 1,
                "movl (%esi), %edi;movl (%ebp), %eax;subl (%eax), %edi;jmp  <.text+>;movl (%ebp), %ebx": 1,
                "addl $, %esi;pushl %esi;calll  <.text+>;testl %eax, %eax;je  <.text+>": 2,
                "movl (%eax), %eax;popl %esi;retl;orl $-, %eax;popl %esi": 1,
                "orl $-, %eax;popl %esi;retl;int;int": 1,
                "pushl %ecx;pushl (%esi);movl -(%ebp), %ecx;addl %ecx, %ecx;pushl %ecx": 2,
                "pushl (%esi);movl -(%ebp), %ecx;addl %ecx, %ecx;pushl %ecx;pushl -(%ebp)": 1,
                "pushl %ecx;pushl -(%ebp);pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;pushl %eax;calll  <.text+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "pushl %eax;calll *%edi;addl $, %esp;leal (%eax,%eax), %eax;pushl %eax": 1,
                "pushl %ecx;pushl %eax;pushl -(%ebp);calll  <.text+>;movb (%esi), %al": 1,
                "calll *(%edx);movl -(%ebp), %eax;pushl $;pushl $;pushl $": 1,
                "subl $, %eax;jne  <.text+>;pushl %edi;pushl $;leal (%ebp), %eax": 2,
                "leal (%ebp), %ecx;calll  <.text+>;movl (%esi), %edi;jmp  <.text+>;movl (%esi), %esi": 1,
                "calll *(%eax);pushl %eax;pushl ;calll  <.text+>;xorl %edi, %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;pushl $;pushl %edi": 2,
                "cmpl %esi, %eax;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;pushl %esi": 2,
                "testl %eax, %eax;jne  <.text+>;orl $-, %eax;movl %eax, (%edi);movl %eax, (%edi)": 1,
                "subl %esi, %eax;je  <.text+>;decl %eax;je  <.text+>;subl $, %eax": 1,
                "decl %eax;je  <.text+>;decl %eax;jne  <.text+>;movl (%esi), %edi": 1,
                "jmp  <.text+>;movl (%esi), %edi;jmp  <.text+>;movl (%esi), %edi;movl %edi, %eax": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl %edi;leal -(%ebp), %eax": 6,
                "testl %esi, %esi;je  <.text+>;pushl %ebx;movl -(%ebp), %ebx;leal -(%ebp), %eax": 3,
                "je  <.text+>;pushl %ebx;movl -(%ebp), %ebx;leal -(%ebp), %eax;pushl %eax": 3,
                "movl -(%ebp), %esi;testl %esi, %esi;jne - <.text+>;popl %ebx;xorl %eax, %eax": 1,
                "xorl %eax, %eax;popl %edi;popl %esi;leave;retl": 1,
                "int;int;int;movl , %eax;cmpl $, -(%eax)": 1,
                "pushl %esi;movl $, %esi;jne  <.text+>;pushl $;movl %esi, %ecx": 1,
                "movl %esi, %ecx;calll  <.text+>;movl %esi, %eax;popl %esi;retl": 1,
                "cmpl $, %eax;jne  <.text+>;movl (%esi), %eax;movl %esi, %ecx;cmpl $, (%ebp)": 1,
                "jne  <.text+>;pushl %eax;pushl %eax;pushl $;pushl $": 1,
                "pushl %eax;pushl %eax;pushl $;pushl $;pushl $": 3,
                "pushl %eax;movl %ecx, %esi;xorl %ebx, %ebx;calll - <.text+>;testl %eax, %eax": 1,
                "xorl %edi, %edi;incl %edi;movl (%eax), %edx;movl %eax, %ecx;calll *(%edx)": 1,
                "incl %edi;movl (%eax), %edx;movl %eax, %ecx;calll *(%edx);subl $, %eax": 1,
                "je  <.text+>;pushl $;popl %eax;jmp  <.text+>;xorl %eax, %eax": 2,
                "xorl %edi, %edi;cmpw %di, (%ebx);movl %ecx, %esi;je  <.text+>;movzwl (%ebx), %eax": 1,
                "je  <.text+>;movswl (%ebx), %ecx;movl %ecx, (%esi);cmpw %di, (%ebx);je  <.text+>": 1,
                "movzwl (%ebx), %esi;addl %ebx, %esi;jmp  <.text+>;movl $, %esi;movl %eax, %edi": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <.text+>;movl %edi, (%esi)": 1,
                "jmp  <.text+>;movl %edi, (%esi);movl %edi, (%esi);popl %edi;popl %esi": 1,
                "pushl %esi;pushl %eax;calll  <.text+>;popl %esi;retl": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ecx), %edx;orl $-, %eax": 1,
                "decl %edx;jne - <.text+>;popl %esi;popl %ebp;retl $": 2,
                "incl %edx;testl %eax, %eax;je - <.text+>;popl %edi;popl %esi": 1,
                "xorl %ecx, %ecx;testl %esi, %esi;jle  <.text+>;movl (%edi), %eax;movl (%ebp), %edx": 1,
                "andl $, -(%ebp);pushl $;leal (%esi), %eax;pushl %eax;leal (%edi), %ecx": 1,
                "movl %ecx, %eax;movl (%eax), %eax;movl (%eax), %edx;cmpl (%ebp), %edx;movl (%ecx), %ecx": 1,
                "subl %edi, %eax;je  <.text+>;subl $, %eax;je  <.text+>;decl %eax": 1,
                "pushl $;pushl %edi;calll  <.text+>;popl %ecx;popl %ecx": 1,
                "pushl %eax;calll  <.text+>;movl %eax, %ebx;cmpl %edi, %ebx;je  <.text+>": 1,
                "calll  <.text+>;movl %eax, %ebx;cmpl %edi, %ebx;je  <.text+>;pushl (%ebx)": 1,
                "jmp  <.text+>;movw %di, -(%ebp);movl %edi, -(%ebp);leal (%esi), %edi;movl %edi, %ecx": 1,
                "calll  <.text+>;movl (%esi), %eax;cmpl $-, %eax;je  <.text+>;pushl %ebx": 1,
                "cmpl $-, %eax;je  <.text+>;pushl %ebx;pushl %eax;jmp  <.text+>": 1,
                "pushl $;movl %edi, %ecx;calll  <.text+>;pushl $;leal -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;subl %ebx, %ecx;movl $, %edi;movl %edi, %edx;shrl %cl, %edx": 1,
                "jmp  <.text+>;movl (%edx), %ecx;decl %ecx;movl $, (%eax);jmp  <.text+>": 1,
                "je  <.text+>;movl (%eax), %esi;movl (%eax), %edi;leal -(%esi,%edi), %edi;cmpl %ecx, %edi": 1,
                "movl (%edx), %ecx;movl (%eax), %ebx;movl $, %edi;subl %ebx, %ecx;movl %edi, %esi": 1,
                "subl %ebx, %ecx;movl %edi, %esi;shrl %cl, %esi;orl %esi, (%eax);movl (%edx), %edx": 1,
                "orl %esi, (%eax);movl (%edx), %edx;testb $, %dh;jne  <.text+>;testb $, %dh": 1,
                "je  <.text+>;andl $, -(%ebp);movl -(%ebp), %eax;leave;retl": 1,
                "decl %eax;jne  <.text+>;movl (%esi), %eax;subl %edi, %eax;je  <.text+>": 1,
                "movl $, %eax;jmp  <.text+>;movl $, %eax;addl $, %esi;pushl %eax": 1,
                "movl %eax, %edx;andl %ecx, %edx;cmpl $-, %edx;je  <.text+>;pushl %ecx": 1,
                "cmpl $-, %edx;je  <.text+>;pushl %ecx;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %esi, %ecx;movl $, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx;jmp - <.text+>": 1,
                "movl (%eax), %edx;movl %eax, %ecx;calll *(%edx);cmpl $, %eax;je  <.text+>": 1,
                "popl %eax;jmp - <.text+>;int;int;int": 3,
                "movl %edi, -(%ebp);calll *(%eax);cmpl %edi, %eax;je  <.text+>;pushl (%eax)": 1,
                "je  <.text+>;pushl (%eax);movl (%ebp), %ecx;calll  <.text+>;pushl $": 1,
                "andw $, (%edi,%eax,);pushl %edi;calll  <.text+>;pushl %edi;calll  <.text+>": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);jmp  <.text+>;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "pushl (%ebp);movl (%esi), %ecx;movl (%ecx), %eax;pushl %ebx;leal -(%ebp), %edx": 1,
                "pushl (%esi);leal (%ebx,%eax,), %eax;pushl %eax;calll *;popl %ecx": 1,
                "movl (%esi), %eax;movl (%eax), %eax;popl %esi;retl;int": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;xorl %eax, %eax;incl %eax": 1,
                "xorl %eax, %eax;popl %esi;leave;retl $;int": 3,
                "leal (%ecx), %esi;movl %esi, %ecx;calll  <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;pushl %eax;movl %esi, %ecx;calll  <.text+>": 4,
                "cmpl %edx, (%ebx);jne  <.text+>;cmpl $-, %edx;jne  <.text+>;movl (%ebp), %edi": 1,
                "je  <.text+>;movl -(%ebp), %ecx;leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "pushl %esi;pushl %edi;movl %esp, -(%ebp);pushl (%ebp);calll  <.text+>": 1,
                "cmpb $, (%edi);je  <.text+>;pushl %ebx;pushl %ebx;pushl $": 1,
                "negl %esi;sbbl %esi, %esi;incl %esi;je  <.text+>;pushl ": 3,
                "leal (%ebp), %ecx;calll  <.text+>;cmpl $-, %eax;je  <.text+>;incl %eax": 1,
                "int;movl %edi, %edi;pushl %esi;pushl ;xorl %esi, %esi": 1,
                "calll  <.text+>;jmp  <.text+>;movl (%esi), %eax;movw (%eax), %cx;cmpw $, %cx": 1,
                "pushl $;movl %eax, %ecx;movl $, -(%ebp);calll  <.text+>;movl %eax, %edi": 1,
                "movl $, -(%ebp);calll  <.text+>;movl %eax, %edi;cmpl $-, %edi;setne (%ebp)": 1,
                "setne (%ebp);orl $-, -(%ebp);leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>": 1,
                "pushl %eax;calll *%edi;movl %eax, %esi;incl %esi;leal (%esi,%esi), %eax": 1,
                "incl %esi;leal (%esi,%esi), %eax;pushl %eax;calll  <.text+>;movl %eax, %ebx": 1,
                "xorl %eax, %eax;jmp  <.text+>;movl (%edi), %eax;pushl %ebx;movl %edi, %ecx": 1,
                "cmpl $, %eax;jne  <.text+>;movl (%esi), %eax;movl %esi, %ecx;calll *(%eax)": 2,
                "jne - <.text+>;popl %esi;movl %ebx, %eax;popl %edi;popl %ebx": 1,
                "jne  <.text+>;movl -(%ebp), %ecx;pushl %esi;pushl -(%ebp);calll  <.text+>": 1,
                "jne - <.text+>;cmpl %esi, -(%ebp);popl %ebx;je  <.text+>;pushl -(%ebp)": 1,
                "subl %edi, %eax;je  <.text+>;decl %eax;jne  <.text+>;movl (%esi), %edi": 1,
                "calll *(%eax);testl %eax, %eax;je  <.text+>;testw $, (%edi);je  <.text+>": 1,
                "pushl %esi;movl %ebx, %ecx;calll  <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "movl %ebx, %ecx;calll  <.text+>;testl %eax, %eax;je  <.text+>;pushl %esi": 11,
                "pushl %eax;movl %ebx, %ecx;calll  <.text+>;movl -(%ebp), %esi;testl %esi, %esi": 1,
                "movl -(%ebp), %esi;testl %esi, %esi;jne - <.text+>;popl %ebx;popl %esi": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;incl %esi;cmpl %eax, %esi;ja  <.text+>": 1,
                "calll *;cmpl $, (%ebp);popl %ecx;popl %ecx;jne  <.text+>": 1,
                "jne  <.text+>;andw $, (%ecx);incl %eax;cmpl %esi, %eax;jb - <.text+>": 1,
                "pushl %esi;movl %ecx, %esi;pushl %edi;leal (%esi), %ebx;pushl %ebx": 1,
                "andl $, (%esi);calll *;pushl $;pushl (%esi);calll *": 1,
                "pushl (%esi);calll *;movl %eax, (%esi);popl %esi;retl": 2,
                "calll *;pushl $-;pushl (%esi);calll *;pushl %edi": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 3,
                "movl (%eax), %ecx;leal (%esi), %edx;pushl %edx;pushl (%esi);pushl (%esi)": 2,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx);calll *;pushl $-": 1,
                "movl %edi, %edi;pushl %esi;movl %ecx, %esi;movl (%esi), %eax;pushl (%esi)": 1,
                "pushl $;pushl $;pushl $;movl %ecx, %esi;calll  <.text+>": 2,
                "movl %esi, %ecx;calll  <.text+>;xorl %eax, %eax;pushl %eax;pushl %eax": 1,
                "calll  <.text+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 1,
                "orl $-, (%esi);cmpl $, (%ebp);je  <.text+>;orb $, (%esi);movl -(%ebp), %ecx": 2,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl %ecx, %edi": 5,
                "calll - <.text+>;andl $, -(%ebp);pushl $;leal (%esi), %ecx;movl $, (%esi)": 3,
                "cmpl $, (%ecx);jne  <.text+>;movl (%ecx), %eax;pushl $;calll *(%eax)": 2,
                "calll *(%eax);retl;xorl %eax, %eax;incl %eax;retl": 1,
                "cmpl $, (%esi);jne - <.text+>;popl %edi;xorl %eax, %eax;cmpl %eax, (%esi)": 1,
                "movl (%edi), %eax;movl %eax, (%esi);movl (%edi), %eax;movl %eax, (%esi);xorl %eax, %eax": 1,
                "pushl $;pushl %eax;movzwl -(%ebp), %eax;pushl %eax;movzwl -(%ebp), %eax": 4,
                "movl (%edi), %eax;movl -(%ebp), %ecx;movl %eax, (%esi);popl %edi;movl %esi, %eax": 3,
                "movl %esp, %ebp;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl %ecx": 1,
                "movl $, %ecx;calll - <.text+>;popl %ebp;retl $;int": 1,
                "movl %edi, %eax;popl %edi;popl %esi;leave;retl $": 6,
                "movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);movl (%eax), %edx;movl %eax, %ecx": 1,
                "movl (%edi), %ecx;pushl $;jne  <.text+>;calll - <.text+>;jmp  <.text+>": 1,
                "popl %ecx;je  <.text+>;movl (%edi), %ecx;movl (%ecx), %eax;pushl $": 1,
                "pushl $;pushl $;leal (%eax,%eax), %eax;pushl %eax;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);calll  <.text+>;popl %ebx;popl %edi;movl %esi, %eax": 1,
                "popl %ebx;popl %edi;movl %esi, %eax;popl %esi;leave": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);leal (%ebp), %eax": 1,
                "incl %esi;je  <.text+>;pushl (%ebp);pushl %edi;calll  <.text+>": 1,
                "calll - <.text+>;movl (%esi), %eax;pushl $;pushl %edi;pushl %edi": 1,
                "pushl $;pushl %edi;pushl %edi;pushl %edi;leal -(%ebp), %ecx": 1,
                "pushl $;pushl $;addl %eax, %eax;pushl %eax;pushl %ebx": 1,
                "pushl %esi;calll *(%eax);movl %eax, %edi;movzwl -(%ebp), %eax;xorl %esi, %esi": 1,
                "movl %eax, %edi;movzwl -(%ebp), %eax;xorl %esi, %esi;pushl %esi;pushl %eax": 1,
                "movzwl -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;pushl $": 2,
                "pushl (%ebp);movl %eax, %ecx;calll - <.text+>;testl %eax, %eax;je  <.text+>": 2,
                "movl %eax, %edi;movl %edi, %eax;popl %edi;popl %esi;leave": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx)": 8,
                "int;int;int;pushl $-;calll - <.text+>": 1,
                "cmpl $, %eax;jne  <.text+>;pushl %esi;movl %edi, %ecx;calll  <.text+>": 1,
                "movl %esi, %ecx;calll *(%eax);cmpl $, %eax;je  <.text+>;xorl %eax, %eax": 1,
                "pushl %esi;movl %ecx, %esi;calll - <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "pushl %esi;movl %edi, %ecx;calll - <.text+>;jmp  <.text+>;xorl %eax, %eax": 1,
                "je  <.text+>;incl %eax;cmpl %ecx, %eax;jl - <.text+>;pushl %ebx": 1,
                "incl %eax;cmpl %ecx, %eax;jl - <.text+>;pushl %ebx;movl $, %ecx": 1,
                "popl %ebp;retl $;movl %ebx, (%edx,%eax,);jmp - <.text+>;int": 1,
                "pushl %eax;calll *%edi;cmpl %ebx, %eax;je  <.text+>;pushl -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;popl %edi;popl %ebx;movl -(%ebp), %ecx": 1,
                "calll  <.text+>;popl %edi;popl %ebx;movl -(%ebp), %ecx;movl %ecx, %fs:": 1,
                "pushl %eax;calll - <.text+>;pushl %eax;movl $, %ecx;movl $, -(%ebp)": 4,
                "movl -(%ebp), %eax;subl $, %eax;je  <.text+>;decl %eax;je  <.text+>": 3,
                "pushl $;jmp  <.text+>;pushl $;jmp  <.text+>;movl %ebx, %eax": 1,
                "pushl %eax;movl $, %ecx;movl %eax, (%esi);calll - <.text+>;jmp  <.text+>": 1,
                "leal (%ebp), %eax;pushl %eax;pushl -(%ebp);movl %esi, %ecx;calll - <.text+>": 1,
                "movl %ecx, %eax;leave;retl $;int;int": 1,
                "pushl $;movl %edi, %ecx;calll  <.text+>;movl (%ebp), %eax;movl (%ebp), %esi": 1,
                "andl $, %eax;leal -(%ebp), %ecx;pushl %ecx;movl (%ebp), %ecx;incl %eax": 1,
                "incl %eax;pushl %eax;pushl %esi;calll - <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;jmp  <.text+>;pushl -(%ebp);movl %edi, %ecx;calll  <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;leal (%ebp), %eax;pushl %eax": 2,
                "testl %eax, %eax;jne  <.text+>;leal (%ebp), %eax;pushl %eax;movl %esi, %ecx": 1,
                "pushl (%ecx);pushl (%ecx);movl $, %ecx;calll - <.text+>;retl": 1,
                "movl %ecx, %esi;jne  <.text+>;cmpl %ebx, (%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl $, %edi;movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;pushl $": 1,
                "testb $, -(%ebp);je  <.text+>;testb $, -(%ebp);je  <.text+>;leal -(%ebp), %ecx": 1,
                "pushl (%ebp);movb $, -(%ebp);pushl (%esi);calll - <.text+>;cmpl %ebx, -(%ebp)": 1,
                "pushl -(%ebp);movl -(%ebp), %ecx;pushl -(%ebp);calll  <.text+>;movl $, -(%ebp)": 1,
                "pushl -(%ebp);calll  <.text+>;movl $, -(%ebp);leal -(%ebp), %ecx;movb %bl, -(%ebp)": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;jmp  <.text+>;pushl (%ebp);movl %edi, %ecx": 1,
                "jmp  <.text+>;pushl (%ebp);movl %edi, %ecx;calll - <.text+>;pushl %ebx": 1,
                "movl %edi, %ecx;calll - <.text+>;pushl %ebx;leal (%ebp), %eax;pushl %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "calll *%ebx;movl -(%ebp), %eax;andl $, (%edi);andl $, (%eax);cmpl $, -(%ebp)": 1,
                "calll  <.text+>;movl (%esi), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl $-": 1,
                "pushl $-;pushl %eax;pushl ;calll  <.text+>;testw %ax, %ax": 1,
                "movl (%esi), %eax;cmpl $, -(%eax);jne  <.text+>;pushl %esi;addl $, %ecx": 1,
                "je  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>;pushl $-": 1,
                "pushl $-;pushl (%esi);calll *;movl (%esi), %eax;cmpl $, %eax": 1,
                "testl %edi, %edi;je - <.text+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "addb $, %al;arpl %bp, (%edi);addl %ebp, (%edi,%ebp,);addl %esi, (%ebp);addb $, %al": 1,
                "movl $, (%esi);xorl %eax, %eax;incl %eax;movl %eax, -(%ebp);movl %eax, (%esi)": 1,
                "movl (%ecx), %ecx;movl (%ecx), %eax;jmpl *(%eax);int;int": 1,
                "movl (%esi), %eax;calll *(%eax);cmpl $, %eax;jne  <.text+>;movl (%esi), %eax": 1,
                "cmpl $, %eax;jne  <.text+>;movl (%esi), %eax;shrl $, %eax;notb %al": 1,
                "orl $-, (%esi);orl $-, (%esi);movl $, (%esi);movl %esi, %eax;popl %esi": 1,
                "orl $-, (%esi);movl $, (%esi);movl %esi, %eax;popl %esi;popl %ebp": 3,
                "pushl %esi;pushl $;pushl (%ebp);movl %ecx, %esi;pushl (%ebp)": 10,
                "calll  <.text+>;pushl %ecx;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "movl %ecx, %esi;movl (%esi), %eax;pushl %ebx;pushl %esi;calll *(%eax)": 1,
                "jbe  <.text+>;jmp  <.text+>;cmpw $, (%edi);je  <.text+>;decl %edi": 1,
                "movl (%esi), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %ebx;pushl $": 1,
                "movzwl -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll - <.text+>;movzwl -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx;pushl %esi": 1,
                "calll - <.text+>;jmp  <.text+>;xorl %eax, %eax;pushl -(%ebp);orl $-, -(%ebp)": 1,
                "movl %esi, -(%ebp);calll - <.text+>;movl (%ebp), %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl (%ebp);calll - <.text+>;orl $-, (%esi);orl $-, (%esi);leal (%ebp), %eax": 1,
                "movl %edi, (%ebp);calll  <.text+>;cmpl %edi, %eax;je  <.text+>;pushl %ebx": 1,
                "pushl $;pushl $;pushl (%ebp);pushl %eax;calll *": 1,
                "pushl (%ecx);pushl (%ecx);calll - <.text+>;retl;movl (%ecx), %eax": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi;xorl %esi, %esi": 4,
                "pushl %edi;movl (%ebp), %edi;xorl %esi, %esi;cmpw %si, (%edi);movl %ecx, %ebx": 1,
                "xorl %esi, %esi;cmpw %si, (%edi);movl %ecx, %ebx;movl %ebx, -(%ebp);je  <.text+>": 1,
                "testw %ax, %ax;jne  <.text+>;xorl %eax, %eax;incl %eax;movl %eax, (%ebx)": 1,
                "movl %esi, (%ebx);incl %eax;movl -(%ebp), %ecx;movl %esi, (%ebx);movl %esi, (%ebx)": 1,
                "int;xorl %eax, %eax;retl;int;int": 1,
                "movl %edi, (%ebx);calll  <.text+>;leal (%ebx), %ecx;movb $, -(%ebp);calll  <.text+>": 1,
                "cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne  <.text+>;leal (%ebx), %ecx": 1,
                "pushl %edi;pushl %eax;movzwl -(%ebp), %eax;pushl %eax;movzwl -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl %eax;leal (%ebx), %ecx;calll  <.text+>": 1,
                "pushl %eax;calll *;cmpl %edi, %eax;popl %ecx;movl %eax, (%ebx)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 15,
                "movl $, ;jne  <.text+>;movl (%esi), %eax;pushl %ebx;pushl %ebx": 1,
                "movl %esi, %ecx;movl %ebx, -(%ebp);calll *(%eax);movl -(%ebp), %eax;addl %eax, %eax": 1,
                "movl %eax, -(%ebp);je  <.text+>;movl (%esi), %edx;pushl %ebx;pushl %eax": 1,
                "movl %eax, (%edi);calll - <.text+>;movw %ax, (%edi);movl -(%ebp), %eax;addl %eax, %eax": 1,
                "jmp  <.text+>;movw (%edi), %ax;testb $, %al;je  <.text+>;pushl $": 1,
                "pushl %edi;calll  <.text+>;xorl %ebx, %ebx;testl %eax, %eax;je - <.text+>": 2,
                "calll *;popl %ecx;pushl -(%ebp);calll  <.text+>;popl %ecx": 1,
                "popl %ecx;pushl -(%ebp);calll  <.text+>;popl %ecx;xorl %eax, %eax": 1,
                "calll  <.text+>;jmp  <.text+>;xorl %edi, %edi;movl -(%ebp), %ecx;movl %edi, %eax": 1,
                "leal (%edi), %eax;pushl %eax;pushl $;movl %ecx, %esi;calll - <.text+>": 1,
                "je  <.text+>;cmpw $, (%esi);jne  <.text+>;pushl %esi;calll *": 1,
                "movl %esi, -(%ebp);movl $, (%esi);movl $, (%edi);leal (%esi), %ecx;movl $, -(%ebp)": 1,
                "movl $, (%esi);movl $, (%edi);leal (%esi), %ecx;movl $, -(%ebp);calll  <.text+>": 1,
                "pushl %edi;pushl $;movl %ecx, %esi;popl %ecx;xorl %eax, %eax": 1,
                "popl %edi;movl %esi, %eax;popl %esi;popl %ebx;leave": 3,
                "movl %eax, -(%ebp);movl (%esi), %eax;calll *(%eax);movl %eax, %ebx;cmpl %edi, %ebx": 2,
                "testl %eax, %eax;je  <.text+>;cmpl %edi, %ebx;je  <.text+>;movl (%ebx), %eax": 4,
                "movl %ebx, %ecx;calll *(%eax);xorl %ebx, %ebx;cmpl %edi, %ebx;je  <.text+>": 4,
                "testw %ax, %ax;je - <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;leal -(%ebp), %edx": 5,
                "leal -(%ebp), %edx;pushl %edx;pushl %eax;calll *(%ecx);jmp  <.text+>": 5,
                "cmpl %edi, (%esi);movl %edi, ;setne %bl;movl $, %ecx;calll  <.text+>": 8,
                "pushl %edi;pushl %esi;leal -(%ebp), %ebx;calll - <.text+>;movl %eax, %ebx": 3,
                "movl $, (%ebp);cmpl %edi, (%ebp);movl %edi, -(%ebp);je  <.text+>;movl (%esi), %eax": 1,
                "calll  <.text+>;movl , %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "testb $, (%esi);je  <.text+>;movzbl (%esi), %eax;subl $, %eax;je  <.text+>": 1,
                "jmp  <.text+>;pushl $;jmp  <.text+>;movb (%esi), %al;cmpb $, %al": 1,
                "je  <.text+>;movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "popl %edi;leal -(%edi), %eax;cmpl $, %eax;ja  <.text+>;movzbl (%eax), %eax": 1,
                "je  <.text+>;movzbl (%esi), %eax;imull $, %eax, %eax;leal -(%ebp), %ecx;pushl %ecx": 1,
                "calll  <.text+>;popl %ecx;movl %eax, -(%ebp);testl %eax, %eax;movb $, -(%ebp)": 6,
                "movzbl (%esi), %eax;imull $, %eax, %eax;pushl %esi;calll *(%eax);movl -(%ebp), %ecx": 4,
                "jmp  <.text+>;calll  <.text+>;popl %ecx;movl %eax, %ecx;movl %ecx, -(%ebp)": 3,
                "addb $, %al;xorl -(%ecx), %ebx;addb $, %al;iretl;cltd": 1,
                "adcb %al, (%edx);addb (%ebx), %al;addl (,%eax), %eax;orl %ecx, (%edx);orl -(,%ecx), %ecx": 1,
                "pushl %ebx;pushl $;movl %ecx, %esi;pushl %ebx;movl %esi, -(%ebp)": 1,
                "pushl (%ebp);pushl (%esi);calll - <.text+>;pushl (%ebp);movl %edi, %ecx": 1,
                "calll *(%eax);pushl %eax;pushl %esi;pushl -(%ebp);calll - <.text+>": 4,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;pushl %eax;leal (%esi), %ecx": 1,
                "pushl %eax;leal (%esi), %ecx;calll  <.text+>;incl %edi;testl %ebx, %ebx": 1,
                "pushl -(%ebp);movl %ebx, %ecx;calll  <.text+>;movl -(%ebp), %eax;popl %esi": 1,
                "pushl %esi;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl ": 1,
                "movl %ecx, %esi;xorl %edi, %edi;pushl %edi;movl $, %ecx;xorl %ebx, %ebx": 5,
                "movl $, %ecx;xorl %ebx, %ebx;calll  <.text+>;testl %eax, %eax;je  <.text+>": 5,
                "je  <.text+>;movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);movl %esi, %ecx": 1,
                "movl $, %ecx;calll  <.text+>;popl %edi;popl %esi;movl %ebx, %eax": 4,
                "movl %esi, %ecx;calll *(%eax);cmpl %edi, %eax;je  <.text+>;cmpl %edi, (%esi)": 1,
                "leal (%ebp), %ecx;pushl %ecx;pushl %eax;calll  <.text+>;jmp  <.text+>": 2,
                "je  <.text+>;pushl %eax;leal (%esi), %ecx;calll  <.text+>;leal (%ebp), %eax": 2,
                "pushl %eax;pushl %esi;pushl -(%ebp);calll - <.text+>;movl %eax, %ebx": 2,
                "jmp  <.text+>;cmpb $, (%ebx);jne  <.text+>;pushl $;pushl %edi": 1,
                "movl %eax, %edi;cmpl %ebx, %edi;je  <.text+>;testb $, (%edi);je  <.text+>": 1,
                "adcl %ebx, %edx;pushl %edi;movl %eax, (%esi);movl %edx, (%esi);calll *": 1,
                "movb (%esi), %al;cmpb $, %al;jne  <.text+>;pushl $;calll  <.text+>": 1,
                "xorl %ebx, %ebx;testl %eax, %eax;je - <.text+>;jmp  <.text+>;cmpb $, ": 1,
                "je  <.text+>;andb $-, (%esi);pushl %edi;calll *;popl %ecx": 1,
                "calll - <.text+>;movl %eax, %edi;jmp  <.text+>;xorl %edi, %edi;orl $-, -(%ebp)": 1,
                "calll - <.text+>;leal -(%ebp), %ecx;movb %al, %bl;calll  <.text+>;testb %bl, %bl": 3,
                "pushl -(%ebp);movl %eax, %ecx;pushl %esi;pushl $;calll - <.text+>": 3,
                "orl $-, -(%ebp);testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;movl $, (%eax)": 1,
                "movl %eax, -(%ebp);je  <.text+>;movl $, (%eax);jmp  <.text+>;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %ebx;pushl -(%ebp);xorl %eax, %eax": 1,
                "movl -(%ebp), %ecx;pushl (%eax);addl $, %ecx;movl $, -(%ebp);calll  <.text+>": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;pushl %edi;movb $, -(%ebp);calll *(%eax)": 1,
                "pushl $;calll - <.text+>;jmp  <.text+>;pushl %edi;calll - <.text+>": 1,
                "pushl %esi;pushl $;calll - <.text+>;jmp  <.text+>;calll - <.text+>": 1,
                "pushl $;calll - <.text+>;jmp  <.text+>;calll - <.text+>;pushl %eax": 1,
                "pushl %ebx;pushl %edi;pushl %esi;pushl $;movl %eax, %ecx": 1,
                "xorl %ebx, %ebx;pushl %ebx;movl $, %ecx;movl %eax, -(%ebp);calll  <.text+>": 1,
                "movl %esi, %ecx;calll *(%eax);xorl %eax, %eax;cmpl %ebx, (%esi);pushl %edi": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;jmp  <.text+>;movl -(%ebp), %ecx;pushl $": 1,
                "calll *(%eax);jmp  <.text+>;calll  <.text+>;jmp - <.text+>;pushl %edi": 1,
                "leal (%esi), %ecx;calll  <.text+>;cmpl $, -(%ebp);leal (%ebp), %eax;pushl %eax": 1,
                "calll  <.text+>;testw %ax, %ax;je - <.text+>;xorl %edi, %edi;pushl -(%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl $, %eax": 1,
                "calll - <.text+>;xorl %eax, %eax;popl %ebp;retl $;int": 2,
                "cmpl %edi, (%esi);movl $, ;setne %al;cmpl $, (%esi);movl %eax, (%ebp)": 1,
                "cmpl %edi, ;je  <.text+>;pushl $;calll  <.text+>;popl %ecx": 1,
                "pushl %edi;movl %esi, %ecx;calll *(%eax);testl %eax, %eax;jne  <.text+>": 2,
                "testl %eax, %eax;jne  <.text+>;movl %edi, %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "pushl %edi;calll  <.text+>;jmp  <.text+>;pushl (%ebx);incl -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;pushl %ebx;calll  <.text+>": 1,
                "jne  <.text+>;pushl %ebx;calll  <.text+>;movl %eax, %edi;testl %edi, %edi": 1,
                "cmpl $, (%edi);pushl $;jne  <.text+>;calll  <.text+>;popl %ecx": 1,
                "cmpl %eax, %ecx;movl %eax, -(%ebp);je  <.text+>;pushl %esi;pushl %edi": 1,
                "calll  <.text+>;movl %eax, %ebx;testl %ebx, %ebx;jne - <.text+>;pushl -(%ebp)": 1,
                "jne - <.text+>;cmpl %eax, -(%ebp);popl %edi;popl %ebx;je  <.text+>": 1,
                "calll  <.text+>;pushl %ecx;pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "movl %edi, %ecx;movb $, -(%ebp);calll - <.text+>;andl $, (%edi);leal (%ebx), %ecx": 1,
                "xorl %eax, %eax;incl %eax;andl $, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx)": 1,
                "incl %eax;movl (%ebp), %esi;andl $, (%ebx);movl %eax, (%ebx);leal (%esi), %eax": 1,
                "movl %eax, %esi;testl %esi, %esi;movl %esi, (%ebp);je  <.text+>;movl (%esi), %eax": 1,
                "movl %esi, (%ebp);je  <.text+>;movl (%esi), %eax;testl %eax, %eax;movl %eax, (%ebx)": 1,
                "pushl (%esi);leal (%ebx), %ecx;calll  <.text+>;pushl %esi;calll *": 1,
                "calll *;popl %ecx;movl %ebx, %ecx;calll - <.text+>;movl -(%ebp), %ecx": 1,
                "movl %ebx, %ecx;calll - <.text+>;movl -(%ebp), %ecx;popl %edi;popl %esi": 2,
                "leal -(%ebp), %ecx;movl %edi, -(%ebp);calll  <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "movl %edi, -(%ebp);calll  <.text+>;cmpl $, %eax;jne  <.text+>;cmpl %edi, (%esi)": 1,
                "cmpl $, %eax;jne  <.text+>;cmpl %edi, (%esi);je  <.text+>;orl %ebx, (%esi)": 1,
                "jne - <.text+>;xorl %ebx, %ebx;cmpl %edi, (%esi);movl %edi, ;setne %bl": 1,
                "cmpw $, (%esi);je  <.text+>;andw $, (%eax);pushl %ebx;pushl (%ebp)": 1,
                "cmpw %ax, (%esi);popl %ecx;sete %al;popl %ecx;movw %ax, (%esi)": 1,
                "movw %ax, (%esi);cmpw $, (%esi);je  <.text+>;pushl %ebx;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;xorl %edi, %edi;pushl %eax;incl %edi;calll  <.text+>": 1,
                "calll  <.text+>;pushl $;leal (%esi), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %eax;leal (%esi), %eax;pushl %eax;calll *;movl (%esi), %esi": 1,
                "calll  <.text+>;movl , %esi;movl $, %edi;pushl %edi;pushl -(%ebp)": 1,
                "calll *%esi;addl $, %esp;pushl $;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "calll  <.text+>;leal (%esi), %ecx;calll  <.text+>;xorl %eax, %eax;incl %eax": 1,
                "pushl %esi;pushl %edi;movl $, %esi;calll *;pushl $": 1,
                "pushl -(%ebp);calll *;movl %eax, %edi;testl %edi, %edi;je  <.text+>": 1,
                "pushl (%ebp);calll *;movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>": 1,
                "pushl $;pushl $;pushl %edi;calll *;pushl %edi": 1,
                "calll *;pushl %edi;pushl %esi;movl %eax, ;calll *": 1,
                "pushl %edi;pushl %esi;movl %eax, ;calll *;pushl %eax": 1,
                "movl , %eax;testl %eax, %eax;pushl %ebx;movl (%ebp), %ebx;je  <.text+>": 1,
                "shll %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl ": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%edi), %ecx;calll - <.text+>;pushl %esi": 1,
                "leal (%edi), %ecx;calll - <.text+>;pushl -(%ebp);calll *;pushl $": 1,
                "pushl -(%ebp);calll *;pushl $;calll *%esi;xorl %esi, %esi": 1,
                "pushl %esi;movl (%ebp), %esi;cmpl $, (%esi);jne  <.text+>;calll  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll  <.text+>;movl , %edi": 1,
                "pushl %eax;calll *;popl %ecx;popl %ecx;testb $, (%ebp)": 1,
                "pushl $;movl $, %edi;movl %edi, ;xorl %eax, %eax;popl %ecx": 1,
                "calll - <.text+>;jmp  <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl $": 1,
                "movl (%esi), %esi;testl %esi, %esi;je  <.text+>;pushl %esi;calll *%edi": 2,
                "popl %ecx;je  <.text+>;addl $, %eax;pushl $;jmp  <.text+>": 1,
                "popl %ecx;je  <.text+>;cmpl %edi, %eax;je  <.text+>;subl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;addl $, %ecx;movl %edi, -(%ebp);calll  <.text+>": 1,
                "je  <.text+>;movl -(%ebp), %eax;movw %bx, (%eax);pushl $;pushl (%ebp)": 2,
                "pushl %edi;pushl %edi;calll  <.text+>;pushl $;pushl $": 1,
                "pushl %ebx;pushl %ebx;pushl %edi;calll  <.text+>;pushl %esi": 1,
                "movl %ebx, %eax;jmp  <.text+>;pushl $;pushl (%ebp);calll *%esi": 1,
                "movl $, %esi;jmp  <.text+>;pushl $;pushl (%ebp);calll *%esi": 1,
                "pushl %edi;calll  <.text+>;movl $, %esi;pushl %esi;pushl %ebx": 1,
                "calll  <.text+>;jmp  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;pushl $": 1,
                "calll - <.text+>;pushl -(%ebp);pushl $;calll - <.text+>;calll - <.text+>": 1,
                "pushl $;movl %eax, %ecx;calll - <.text+>;cmpl %edi, ;jne  <.text+>": 1,
                "calll  <.text+>;cmpl %edi, ;je  <.text+>;movl $, -(%ebp);movl %edi, ": 1,
                "pushl $;pushl %edi;calll  <.text+>;calll  <.text+>;calll  <.text+>": 1,
                "calll *%edi;testl %eax, %eax;popl %ecx;popl %ecx;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);calll *;popl %ecx;popl %ecx;pushl $": 2,
                "pushl $;calll  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 2,
                "movl $, -(%ebp);je  <.text+>;pushl $;pushl %ebx;calll *": 1,
                "pushl $;pushl %eax;calll *;movl -(%ebp), %esi;movl (%esi), %eax": 1,
                "movl -(%ebp), %esi;movl (%esi), %eax;addl $, %esp;cmpl %edi, %eax;jne  <.text+>": 1,
                "pushl $;pushl %edi;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "calll  <.text+>;movl (%eax), %ebx;pushl %edi;pushl (%esi);calll *": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll *%edi;addl $, %esp": 7,
                "movl $, -(%ebp);pushl %ebx;calll *%esi;pushl %eax;leal -(%ebp), %eax": 2,
                "calll  <.text+>;pushl %eax;calll *%esi;testl %eax, %eax;popl %ecx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %eax;cmpl $, %eax;je  <.text+>;cmpl $, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll  <.text+>;pushl %esi": 5,
                "calll *;popl %ecx;popl %ecx;jmp - <.text+>;cmpl %edi, -(%ebp)": 1,
                "jne  <.text+>;cmpl %edi, -(%ebp);jne  <.text+>;cmpl %edi, -(%ebp);jne  <.text+>": 1,
                "pushl %edi;calll  <.text+>;movl -(%ebp), %esi;addl $, %esp;jmp  <.text+>": 1,
                "movl %esi, -(%ebp);jmp - <.text+>;movl $, %ebx;pushl %ebx;calll  <.text+>": 1,
                "movl (%esi), %eax;pushl %edi;movl %esi, %ecx;calll *(%eax);movl %esi, %ecx": 1,
                "movl %esi, %ecx;calll *(%eax);movl %esi, %ecx;calll  <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;leal -(%ebp), %ecx;movl %ebx, -(%ebp);calll  <.text+>;orl $-, -(%ebp)": 1,
                "calll  <.text+>;jmp  <.text+>;pushl $;movl (%esi), %ecx;pushl %ebx": 1,
                "cmpl %ebx, (%eax);je  <.text+>;pushl -(%ebp);movl %esi, %ecx;calll  <.text+>": 1,
                "movl -(%ebp), %eax;popl %edi;popl %esi;movl %ebx, ;popl %ebx": 1,
                "calll *%esi;movl , %ebx;pushl $;pushl -(%ebp);calll *%ebx": 1,
                "incl %esi;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "pushl %ebx;pushl %esi;movl %eax, -(%ebp);movl %ecx, %esi;xorl %eax, %eax": 1,
                "testl %ebx, %ebx;popl %ecx;popl %ecx;movl %ebx, -(%ebp);je  <.text+>": 1,
                "calll *%ebx;addl $, %esp;testl %eax, %eax;jne  <.text+>;movl %esi, %ecx": 1,
                "andl %eax, ;calll *%edi;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll  <.text+>;movl %ebx, (%eax);movl %ebx, -(%ebp);jmp  <.text+>;pushl -(%ebp)": 1,
                "popl %ecx;jmp  <.text+>;movl , %eax;testl %eax, %eax;movl %ebx, -(%ebp)": 1,
                "addl $, %eax;pushl %eax;calll *;movl -(%ebp), %eax;addl $, %esp": 1,
                "jne  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;pushl $;popl %ecx": 1,
                "jmp  <.text+>;pushl $;popl %ecx;cmpl %ecx, %eax;jne  <.text+>": 1,
                "calll - <.text+>;jmp  <.text+>;pushl %ebx;movl $, (%esi);calll - <.text+>": 1,
                "pushl -(%ebp);calll *;addl $, %esp;movl %esi, %ecx;calll - <.text+>": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;movl $, -(%ebp)": 1,
                "testl %eax, %eax;pushl -(%ebp);jge  <.text+>;pushl $;jmp  <.text+>": 1,
                "pushl -(%ebp);pushl -(%ebp);movl %esi, %ecx;calll - <.text+>;cmpw $, -(%ebp)": 1,
                "calll  <.text+>;pushl $;leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>": 1,
                "addl $, %esp;leal -(%ebp), %ecx;movl $, (%esi);movb $, -(%ebp);calll  <.text+>": 2,
                "popl %ecx;pushl %eax;pushl %ebx;calll  <.text+>;movl $, (%esi)": 1,
                "calll  <.text+>;movl $, (%esi);jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll  <.text+>;calll - <.text+>;cmpw %di, -(%ebp);movw $, (%eax)": 1,
                "cmpw %di, -(%ebp);movw $, (%eax);pushl %ebx;je  <.text+>;pushl $": 1,
                "movl $, %edi;pushl %edi;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "popl %ecx;popl %ecx;xorl %eax, %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <.text+>;movl %esi, %ecx;calll  <.text+>": 1,
                "movl %eax, %ebx;je  <.text+>;pushl (%edi);movl %esi, %ecx;calll  <.text+>": 1,
                "cmpl $-, %eax;popl %esi;jne  <.text+>;movl $, %eax;leave": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;movl %eax, %esi;calll  <.text+>;cmpl $, %esi": 4,
                "jmp  <.text+>;movl (%ebp), %edi;testl %edi, %edi;jne  <.text+>;calll *": 2,
                "jne  <.text+>;calll *;pushl %eax;calll  <.text+>;testl %eax, %eax": 2,
                "calll  <.text+>;testl %esi, %esi;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>": 1,
                "jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%esi), %eax;pushl $": 1,
                "calll *(%edi);cmpl $-, %eax;popl %edi;popl %esi;jne  <.text+>": 1,
                "calll *(%edi);movl %eax, %edi;andl $, (%ebx);calll  <.text+>;movl (%eax), %eax": 1,
                "andl $, (%esi);orl $-, (%esi);movl $, (%esi);movl %esi, %eax;popl %esi": 1,
                "movl %edi, %ecx;calll  <.text+>;movl , %ebx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl (%eax);calll *%ebx;movl $, %esi;pushl %esi": 1,
                "movl %edi, %ecx;calll - <.text+>;leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx": 2,
                "jne  <.text+>;pushl $;movl %esi, %ecx;calll  <.text+>;popl %edi": 1,
                "je  <.text+>;cmpw $, %dx;jb  <.text+>;cmpw $, %dx;jbe  <.text+>": 1,
                "pushl %ecx;calll  <.text+>;popl %ecx;jmp  <.text+>;movl (%esi), %ecx": 1,
                "orl $-, %ecx;orl $-, %edx;orl $-, %esi;calll - <.text+>;jmp  <.text+>": 1,
                "orl $-, %edx;orl $-, %esi;calll - <.text+>;jmp  <.text+>;cmpw $, (%eax)": 1,
                "jne  <.text+>;cmpl (%eax), %esi;je  <.text+>;movw $, %ax;popl %esi": 1,
                "leal (%eax,%eax), %eax;pushl %eax;calll *;movl %eax, %ebx;xorl %esi, %esi": 1,
                "jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;pushl %edi;pushl (%ebp)": 1,
                "movl %edi, (%ebx);movl (%ebp), %edi;movl %ebx, (%ebx);movl %eax, (%ebx);movl %ecx, (%ebx)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %edi;calll - <.text+>": 5,
                "je  <.text+>;cmpl %edi, %eax;jne  <.text+>;cmpl %ebx, (%esi);je  <.text+>": 1,
                "incl %edi;testl %esi, %esi;je  <.text+>;pushl $;pushl %esi": 1,
                "pushl $;pushl %esi;calll *;popl %ecx;popl %ecx": 6,
                "popl %ecx;popl %ecx;calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "je  <.text+>;xorl %eax, %eax;jmp  <.text+>;calll  <.text+>;testw %ax, %ax": 1,
                "movl %eax, %edi;jmp  <.text+>;movl (%ebp), %eax;cmpl $, (%eax);jbe  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;movswl %ax, %eax;leave": 1,
                "je  <.text+>;pushl %esi;leal (%ebp), %ecx;calll  <.text+>;movl (%ebp), %esi": 1,
                "leal (%ebp), %ecx;calll  <.text+>;movl (%ebp), %esi;addl $, %esi;pushl %esi": 1,
                "calll  <.text+>;pushl (%eax);leal (%ebp), %eax;pushl $;pushl %eax": 1,
                "calll  <.text+>;pushl %ebx;pushl %ebx;pushl $;pushl %ebx": 1,
                "je  <.text+>;pushl $;pushl $;pushl $;pushl (%eax)": 1,
                "je  <.text+>;pushl %edi;pushl $;pushl %ebx;pushl $": 1,
                "popl %esi;xorl %eax, %eax;popl %ebx;retl;int": 2,
                "pushl %ebx;pushl $;pushl (%edi);calll *%esi;movl %ebx, ": 1,
                "popl %esi;popl %edi;xorl %eax, %eax;popl %ebx;retl": 1,
                "sbbl %ecx, %ecx;negl %ecx;movw %cx, (%esi);movl %eax, %ecx;andl $, %ecx": 2,
                "movw %cx, (%esi);movl %eax, %ecx;andl $, %ecx;negl %ecx;sbbl %ecx, %ecx": 2,
                "movl %eax, %ecx;andl $, %ecx;negl %ecx;sbbl %ecx, %ecx;shrl $, %eax": 1,
                "pushl %edi;movw %cx, (%esi);movw %ax, (%esi);calll *;pushl %esi": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jne - <.text+>;popl %edi;popl %esi": 1,
                "movl %edi, %edi;pushl %esi;pushl %edi;calll - <.text+>;movl $, %edi": 1,
                "movl %eax, %edi;pushl $;pushl %edi;movl %edi, -(%ebp);calll *%ebx": 1,
                "calll - <.text+>;movl , %esi;pushl %eax;calll *%esi;addl $, %esp": 1,
                "movl , %eax;pushl (%eax);pushl %ebx;calll  <.text+>;jmp  <.text+>": 1,
                "orl $-, %edi;movl -(%ebp), %ecx;movl %edi, ;movl %edi, %eax;popl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;orl $-, %ecx;calll - <.text+>": 1,
                "calll - <.text+>;movl (%ebp), %esi;jmp  <.text+>;cmpl %esi, (%eax);je  <.text+>": 1,
                "je  <.text+>;pushl %eax;calll - <.text+>;testl %eax, %eax;jne - <.text+>": 9,
                "je  <.text+>;pushl $;pushl (%eax);calll - <.text+>;pushl %eax": 2,
                "calll *;addl $, %esp;calll - <.text+>;andw $, (%eax);movl %esi, %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi": 6,
                "pushl %esi;movl , %esi;movw %di, -(%ebp);movw %di, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl $, -(%ebp);pushl -(%ebp);movl $, -(%ebp);calll *;cmpl %edi, %eax": 3,
                "movl $, -(%ebp);calll *;cmpl %edi, %eax;movl %eax, -(%ebp);jne  <.text+>": 2,
                "movl -(%ebp), %eax;movw %di, -(%ebp,%eax,);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "popl %ecx;popl %ecx;leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "popl %ecx;popl %ecx;jne  <.text+>;movw %bx, ;movl %ebx, -(%ebp)": 1,
                "leal -(%ebp,%eax,), %eax;pushl %eax;calll  <.text+>;popl %ecx;popl %ecx": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl $;pushl %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl %eax;calll *%esi": 1,
                "je  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl -(%ebp)": 2,
                "movl , %eax;testl %eax, %eax;je  <.text+>;pushl %eax;pushl $": 1,
                "cmpl %edi, %ebx;jne  <.text+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;movw $, ;movw $, ;calll - <.text+>;incl -(%ebp)": 1,
                "xorl %ebx, %ebx;pushl %ebx;pushl %eax;pushl $;movl %eax, -(%ebp)": 4,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *%edi;addl $, %esp": 4,
                "je  <.text+>;xorl %eax, %eax;movw (%esi), %ax;pushl %eax;calll *": 4,
                "pushl %eax;calll *;testl %eax, %eax;jne  <.text+>;incl %esi": 4,
                "incl %esi;incl %esi;cmpw %bx, (%esi);jne - <.text+>;pushl %esi": 4,
                "jne - <.text+>;pushl %esi;calll  <.text+>;popl %ecx;leal -(%ebp), %ecx": 4,
                "xorl %ebx, %ebx;xorl %edi, %edi;calll - <.text+>;cmpl %ebx, ;je  <.text+>": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;je  <.text+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "movl (%eax), %eax;pushl $;leal -(%ebp), %ecx;pushl %ecx;movl %eax, %ecx": 1,
                "jmp  <.text+>;movl %ebx, ;movl %esi, %ebx;popl %esi;movl -(%ebp), %ecx": 1,
                "int;int;int;int;andl $, ": 3,
                "pushl %ecx;pushl %eax;pushl (%ebp);calll - <.text+>;incl -(%ebp)": 1,
                "calll  <.text+>;testw %ax, %ax;je  <.text+>;calll  <.text+>;calll  <.text+>": 1,
                "leal (%esi), %eax;pushl %eax;leal (%esi), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %edi;calll - <.text+>;pushl %esi;incl %ebx;calll  <.text+>": 1,
                "movl $, %esi;pushl %esi;calll  <.text+>;calll - <.text+>;calll - <.text+>": 1,
                "jne - <.text+>;pushl %esi;calll  <.text+>;calll - <.text+>;calll - <.text+>": 1,
                "pushl $;pushl -(%ebp);calll *;pushl -(%ebp);calll *": 8,
                "pushl $;movb $, -(%ebp);calll  <.text+>;popl %ecx;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);jmp  <.text+>;andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "decl %ecx;decl %ecx;movl %ecx, (%eax);pushl %eax;movl %ebx, %ecx": 1,
                "calll  <.text+>;movl (%esi), %esi;movl -(%esi), %eax;pushl %edi;leal -(%ebp), %ecx": 1,
                "movl (%esi), %esi;movl -(%esi), %eax;pushl %edi;leal -(%ebp), %ecx;pushl %ecx": 1,
                "leal (%esi), %edi;pushl $;movl %edi, %ecx;movl %eax, (%esi);movl %eax, (%esi)": 1,
                "movb %al, (%esi);movb %al, (%esi);movb %al, (%esi);movl $, (%esi);movb %al, (%esi)": 1,
                "pushl (%esi);calll *;popl %esi;popl %ebp;retl $": 2,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;testl %ecx, %ecx": 2,
                "jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%esi), %eax;pushl $-": 1,
                "orl (%ebp), %eax;pushl %eax;pushl $-;pushl %ecx;calll *": 1,
                "xorl %esi, %esi;testl %ebx, %ebx;jl  <.text+>;pushl $;pushl %esi": 1,
                "xorl %eax, %eax;jmp  <.text+>;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax": 1,
                "movl $, %edi;ja  <.text+>;je  <.text+>;cmpl $, %eax;jb  <.text+>": 1,
                "cmpl $-, %eax;jbe  <.text+>;cmpl $-, %eax;je  <.text+>;cmpl $-, %eax": 2,
                "movl %edi, %ecx;calll - <.text+>;movl %eax, %ebx;jmp  <.text+>;movl -(%ebp), %ecx": 1,
                "jne - <.text+>;cmpl $-, %eax;je  <.text+>;cmpl $-, %eax;jne - <.text+>": 1,
                "cmpl $-, %eax;je  <.text+>;cmpl $-, %eax;jne - <.text+>;movl -(%ebp), %edi": 1,
                "cmpl $-, %eax;jne - <.text+>;movl -(%ebp), %edi;pushl $;pushl %ebx": 1,
                "jne - <.text+>;movl -(%ebp), %edi;pushl $;pushl %ebx;movl %edi, %ecx": 1,
                "addl %eax, %ecx;cmpl $, -(%ebp);je  <.text+>;cmpl %eax, %esi;jne  <.text+>": 1,
                "popl %ecx;je  <.text+>;subl %esi, %eax;incl %eax;incl %eax": 1,
                "popl %edi;jmp  <.text+>;pushl $;pushl (%ebp);calll *": 1,
                "andl $, %eax;jne  <.text+>;movl -(%ebp), %ebx;addl $, %ebx;pushl $": 1,
                "je  <.text+>;pushl %esi;pushl %ebx;calll *;popl %ecx": 1,
                "popl %ebx;popl %esi;popl %edi;popl %ebp;retl $": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %edi;movl %eax, -(%ebp)": 3,
                "pushl %eax;pushl %edi;calll *;movl , %esi;pushl $": 1,
                "calll *;pushl %edi;calll - <.text+>;movw $, (%ebx);jmp  <.text+>": 1,
                "movl , %edi;je  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll *%edi;jmp  <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);cmpl %esi, -(%ebp)": 1,
                "pushl -(%ebp);calll *%ebx;testl %eax, %eax;jne  <.text+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;movl %eax, -(%ebp);jl - <.text+>;jmp  <.text+>": 1,
                "movw $, (%ebx);movw $, (%esi);xorl %ebx, %ebx;cmpw %bx, ;popl %ecx": 1,
                "cmpw %bx, (%eax);je  <.text+>;cmpl $, %esi;je  <.text+>;movl (%ebp), %ecx": 1,
                "ja  <.text+>;pushl %edi;jmpl *(,%ecx,);cmpw $, (%eax);jl  <.text+>": 1,
                "je  <.text+>;movl (%eax), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "calll *(%eax);jmp  <.text+>;movl (%eax), %ecx;pushl %ebx;leal -(%ebp), %edx": 1,
                "calll *(%ecx);pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "addl $, %esp;incw (%edi);jmp  <.text+>;cmpw $, %ax;jne  <.text+>": 1,
                "leal -(%ebp), %eax;pushl (%ebp);pushl %eax;calll - <.text+>;leal -(%ebp), %eax": 1,
                "pushl (%ebp);pushl %esi;calll - <.text+>;pushl $;pushl %esi": 1,
                "je  <.text+>;movl $, %eax;calll - <.text+>;pushl (%edi);calll *": 1,
                "movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);leal (%esi), %edi": 1,
                "negl %eax;sbbl %eax, %eax;jmp  <.text+>;cmpl $, (%ebp);jne  <.text+>": 1,
                "calll *(%eax);cmpw $, (%ebp);je  <.text+>;negl %eax;popl %ebp": 1,
                "calll  <.text+>;movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>;movl (%esi), %ecx": 1,
                "testl %eax, %eax;je  <.text+>;movl (%esi), %ecx;pushl $;pushl %ebx": 1,
                "movl %ebx, (%ebp);xorl %ebx, %ebx;cmpl %ebx, (%ebp);jne - <.text+>;movl (%edi), %ecx": 1,
                "movl (%ecx), %eax;pushl $;calll *(%eax);movl (%esi), %ecx;pushl %edi": 1,
                "pushl %ebx;movl %esi, %ecx;calll  <.text+>;xorl %eax, %eax;incl %eax": 1,
                "movl (%ebp), %ebx;pushl %esi;pushl %edi;leal -(%ebp), %eax;movl $, %esi": 1,
                "movl , %ecx;xorl %eax, %eax;cmpl %eax, (%ecx);je  <.text+>;pushl %eax": 1,
                "pushl $;calll  <.text+>;cmpl $, %eax;jne  <.text+>;pushl ": 1,
                "movl (%ecx), %eax;calll *(%eax);testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "subl $, %esp;pushl %esi;pushl %edi;movl %ecx, %esi;calll - <.text+>": 1,
                "jl - <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %ecx": 1,
                "xorl %edi, %edi;calll *(%eax);testl %eax, %eax;jle  <.text+>;addl $, %ebx": 1,
                "calll *(%eax);pushl %eax;leal (%ebp), %ecx;calll  <.text+>;movl (%esi), %eax": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp);jmp  <.text+>;andl $, -(%ebp)": 1,
                "orl $-, -(%ebp);testl %eax, %eax;leal (%ebp), %ecx;jl  <.text+>;calll  <.text+>": 1,
                "xorl %edi, %edi;calll *(%eax);testl %eax, %eax;jle  <.text+>;pushl %edi": 1,
                "calll - <.text+>;testl %eax, %eax;jne - <.text+>;popl %esi;retl": 2,
                "pushl %esi;movl %edi, %ecx;calll - <.text+>;andl %ebx, %eax;je  <.text+>": 1,
                "movl %ebx, %ecx;calll - <.text+>;movl %eax, %edi;cmpl $-, %edi;je  <.text+>": 1,
                "pushl %edi;movl %ebx, %ecx;calll - <.text+>;andl %esi, %eax;je  <.text+>": 1,
                "calll  <.text+>;calll  <.text+>;movl (%eax), %ecx;popl %edi;popl %ebx": 1,
                "movl %ecx, -(%ebp);calll - <.text+>;movl %eax, %esi;cmpl $-, %esi;movl %esi, -(%ebp)": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl %esi;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %ecx;cltd;subl %edx, %eax;sarl %eax;movl %eax, (%ebp)": 2,
                "cltd;subl %edx, %eax;sarl %eax;movl %eax, (%ebp);leal -(%ebp), %eax": 2,
                "movl %eax, (%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll *": 1,
                "cmpl %eax, (%ebp);jle  <.text+>;movl %eax, (%ebp);movl -(%ebp), %eax;cmpl %eax, (%ebp)": 2,
                "calll - <.text+>;cmpl $, %eax;ja  <.text+>;movl (%esi), %eax;movl %esi, %ecx": 1,
                "calll *(%eax);testl %eax, %eax;pushl $;jne  <.text+>;pushl $": 1,
                "movl -(%ebp), %edi;movl (%edi), %ecx;pushl %esi;calll  <.text+>;testl %eax, %eax": 1,
                "calll  <.text+>;movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>;movl (%edi), %ecx": 1,
                "je  <.text+>;movl (%edi), %ecx;leal -(%ebp), %eax;pushl %eax;movl %ebx, -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movl (%edi), %ecx;pushl $": 3,
                "pushl %esi;calll  <.text+>;movl (%edi), %ecx;pushl $;pushl %esi": 1,
                "movl -(%ebp), %ecx;calll - <.text+>;jmp  <.text+>;movl -(%ebp), %ecx;calll - <.text+>": 1,
                "calll - <.text+>;leal -(%ebp), %ecx;jmp  <.text+>;calll  <.text+>;movl (%eax), %eax": 2,
                "leal -(%ebp), %ecx;jmp  <.text+>;calll  <.text+>;movl (%eax), %eax;pushl $": 2,
                "pushl %eax;leal -(%ebp), %ecx;movl %ebx, -(%ebp);calll  <.text+>;pushl %ebx": 1,
                "calll  <.text+>;pushl %ebx;leal -(%ebp), %ecx;calll - <.text+>;movl %eax, -(%ebp)": 1,
                "calll  <.text+>;negl %eax;sbbl %eax, %eax;xorl %ecx, %ecx;incl %eax": 1,
                "jne  <.text+>;movl %ebx, (%esi);jmp  <.text+>;movl %ecx, (%esi);testb $-, -(%ebp)": 1,
                "jne  <.text+>;leal (%esi), %eax;pushl %eax;calll  <.text+>;testw %ax, %ax": 11,
                "cmpl %ebx, (%esi);je  <.text+>;cmpl $, -(%ebp);jne  <.text+>;leal (%esi), %eax": 9,
                "cmpl $, -(%ebp);je  <.text+>;movl -(%ebp), %eax;addl $, %eax;pushl %eax": 2,
                "testl %eax, %eax;jne  <.text+>;pushl -(%ebp);movl -(%ebp), %eax;addl $, %eax": 2,
                "calll - <.text+>;popl %edi;popl %ebx;movl -(%ebp), %ecx;popl %esi": 2,
                "addl %ebx, -(%ebp);popl %ds;addl $, %eax;addl %edi, (%eax);popl %ds": 1,
                "orl $-, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 2,
                "movl (%ebx), %eax;pushl (%eax);movl %esi, %ecx;calll - <.text+>;movl %eax, -(%ebp)": 1,
                "pushl (%ebp);calll - <.text+>;orl $-, -(%ebp);leal (%ebp), %ecx;calll  <.text+>": 1,
                "movl $, %eax;pushl %eax;pushl %edi;pushl (%ebp);movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;calll - <.text+>;incl %edi;jmp - <.text+>;xorl %eax, %eax": 1,
                "pushl %edi;movl %ecx, %edi;calll  <.text+>;movl (%eax), %esi;pushl $": 2,
                "leal -(%ebp), %eax;pushl %eax;movl %ebx, %ecx;calll - <.text+>;movl -(%ebp), %eax": 2,
                "movl %ebx, %ecx;calll - <.text+>;movl (%esi), %eax;cmpl $, %eax;je  <.text+>": 1,
                "calll - <.text+>;movl (%esi), %eax;cmpl $, %eax;je  <.text+>;cmpl $, %eax": 1,
                "je  <.text+>;cmpl $-, %eax;jne - <.text+>;calll  <.text+>;movl (%eax), %ecx": 2,
                "jne - <.text+>;calll  <.text+>;movl (%eax), %ecx;calll  <.text+>;pushl $": 1,
                "calll - <.text+>;jmp - <.text+>;pushl $;pushl $-;movl %ebx, %ecx": 1,
                "pushl $-;movl %ebx, %ecx;calll - <.text+>;movzwl (%esi), %ecx;cmpl $, %ecx": 1,
                "jmp - <.text+>;pushl $;pushl %eax;movl %ebx, %ecx;calll - <.text+>": 1,
                "jmp - <.text+>;cmpl $, %eax;jne - <.text+>;movl %ebx, %ecx;calll - <.text+>": 1,
                "movl (%edi), %eax;movl %edi, %ecx;calll *(%eax);cmpl $-, %eax;jne  <.text+>": 1,
                "pushl (%ebx);calll *;movl (%ebp), %eax;movl $, (%eax);jmp - <.text+>": 1,
                "movl %esi, %ecx;movl %ebx, -(%ebp);movl $, -(%ebp);calll - <.text+>;movl %eax, %edi": 1,
                "pushl (%ebp);calll - <.text+>;movl %eax, %edi;pushl $;movl %esi, %ecx": 1,
                "jne  <.text+>;calll - <.text+>;movl $, (%esi);popl %esi;popl %ebp": 2,
                "pushl %edi;leal -(%ebp), %ecx;calll  <.text+>;xorl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %esi, %ecx;calll - <.text+>;movl (%edi), %eax;movl %edi, %ecx;calll *(%eax)": 1,
                "pushl %ebx;movl %esi, %ecx;calll - <.text+>;pushl $-;pushl $-": 1,
                "movl %ecx, %esi;calll *;xorl %ecx, %ecx;cmpl %eax, (%esi);popl %esi": 1,
                "movl %esp, %ebp;xorl %eax, %eax;movl (%eax), %ecx;orl $, %ecx;cmpl %ecx, (%ebp)": 1,
                "addl $, %eax;cmpl $, %eax;jb - <.text+>;xorl %eax, %eax;popl %ebp": 1,
                "addl $, %ecx;movl (%ecx), %eax;movl %edx, (%ecx);popl %ebp;retl $": 1,
                "pushl (%esi);pushl (%esi);calll  <.text+>;pushl (%esi);movl %eax, (%esi)": 1,
                "testl %ecx, %ecx;je  <.text+>;leal (%esi), %eax;pushl %eax;calll  <.text+>": 2,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movl %esi, %ecx;calll  <.text+>": 2,
                "popl %esi;jmp  <.text+>;popl %esi;retl;int": 2,
                "movl %esp, %ebp;pushl %ecx;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %eax;pushl (%ebp);pushl (%ebp);pushl (%ecx);calll *": 1,
                "calll  <.text+>;movl (%esi), %ecx;cmpl %ebx, %ecx;je  <.text+>;pushl $": 1,
                "je  <.text+>;pushl $;calll  <.text+>;jmp  <.text+>;movl (%esi), %ecx": 1,
                "je  <.text+>;pushl $;calll  <.text+>;xorl %eax, %eax;retl $": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;pushl $": 1,
                "calll  <.text+>;testl $, %eax;movl (%esi), %ecx;je  <.text+>;pushl $": 1,
                "jmp  <.text+>;movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);pushl (%ebp)": 1,
                "testl %eax, %eax;jne  <.text+>;pushl $;movl %esi, %ecx;calll - <.text+>": 2,
                "pushl %esi;pushl %edi;pushl (%ebp);movl %ecx, %edi;calll - <.text+>": 1,
                "pushl $;movl %esi, %ecx;calll  <.text+>;movl (%esi), %eax;pushl $": 1,
                "movl %esi, %ecx;calll  <.text+>;movl (%esi), %eax;pushl $;movl %esi, %ecx": 1,
                "pushl $;movl %esi, %ecx;calll *(%eax);movl %esi, %eax;jmp  <.text+>": 1,
                "je  <.text+>;pushl $;movl %eax, %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "pushl (%ebp);movl %edi, %ecx;calll - <.text+>;popl %edi;popl %esi": 1,
                "movl (%eax), %esi;pushl $;movl %esi, %ecx;calll  <.text+>;pushl $": 1,
                "je  <.text+>;cmpl $, -(%ebp);jne  <.text+>;cmpl %eax, -(%ebp);jne  <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;movl (%eax), %eax;cmpl (%esi), %eax": 3,
                "jne  <.text+>;movl (%ebp), %eax;addl $, %eax;pushl %eax;calll  <.text+>": 1,
                "movl (%ebp), %eax;addl $, %eax;pushl %eax;calll *;testl %eax, %eax": 1,
                "calll  <.text+>;testw %ax, %ax;jne  <.text+>;cmpl %ebx, (%esi);jne  <.text+>": 1,
                "testw %ax, %ax;jne  <.text+>;cmpl %ebx, (%esi);jne  <.text+>;pushl $": 1,
                "pushl $;movl %ebx, %ecx;calll *(%eax);calll  <.text+>;movl (%eax), %ecx": 1,
                "movl %ebx, %ecx;calll *(%eax);calll  <.text+>;movl (%eax), %ecx;calll  <.text+>": 1,
                "movl (%esi), %eax;movl , %ebx;pushl %eax;calll *%ebx;testl %eax, %eax": 1,
                "movl (%eax), %eax;pushl %eax;calll *%ebx;testl %eax, %eax;je  <.text+>": 2,
                "pushl %esi;movl %ecx, %esi;leal -(%ebp), %ecx;calll  <.text+>;xorl %ebx, %ebx": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;movb $, -(%ebp);je  <.text+>;movl %esi, %ecx": 1,
                "pushl %ebx;movl %eax, %ecx;calll  <.text+>;pushl $;movl %esi, %ecx": 2,
                "pushl (%eax);calll *;cmpl %ebx, %esi;je  <.text+>;pushl $": 1,
                "jne  <.text+>;movl $, (%edi);movl (%edi), %ecx;cmpl %ebx, %ecx;jne  <.text+>": 1,
                "movl (%edi), %ecx;cmpl %ebx, %ecx;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>": 1,
                "pushl %esi;movl %ecx, %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, (%esi)": 1,
                "pushl %edi;pushl $;pushl (%esi);calll *%ebx;cmpw %di, ": 1,
                "movl %eax, %ecx;calll  <.text+>;cmpl %edi, %eax;je  <.text+>;pushl $": 1,
                "pushl $;pushl $;pushl (%esi);calll *%ebx;movl -(%ebp), %eax": 1,
                "calll - <.text+>;xorl %esi, %esi;leal (%edi), %eax;incl %esi;cmpl %ebx, (%eax)": 1,
                "cmpl (%eax), %ecx;jl  <.text+>;calll  <.text+>;movl -(%ebp), %ecx;subl -(%ebp), %ecx": 1,
                "pushl %eax;pushl %ebx;pushl $;calll *;calll  <.text+>": 1,
                "pushl %ebx;pushl $;calll *;calll  <.text+>;movl (%eax), %eax": 1,
                "cmpl %esi, %ecx;jle  <.text+>;movl -(%ebp), %edx;movl %esi, %eax;subl %edx, %eax": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %edi;testl %edi, %edi": 1,
                "testl %edi, %edi;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%edi), %eax": 2,
                "je  <.text+>;pushl (%ebp);movl %edi, %ecx;pushl %esi;calll  <.text+>": 1,
                "movl (%eax), %eax;pushl $;movl %eax, %ecx;calll  <.text+>;movl %eax, %esi": 1,
                "movl %eax, %ecx;calll  <.text+>;movl %eax, %esi;testl %esi, %esi;je  <.text+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl $;leal -(%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl $;pushl (%edi)": 1,
                "popl %esi;je  <.text+>;movl %eax, %ecx;calll  <.text+>;xorl %eax, %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl $;calll - <.text+>": 2,
                "movl $, -(%ebp);calll  <.text+>;testl %eax, %eax;movl %eax, (%esi);je  <.text+>": 1,
                "movl (%esi), %ecx;cmpl %edi, %ecx;movl %edi, (%esi);jne  <.text+>;movl (%esi), %ecx": 1,
                "cmpl %edi, %ecx;je  <.text+>;pushl $;calll  <.text+>;pushl %ebx": 1,
                "movl , %ebx;je  <.text+>;pushl %edi;pushl %edi;pushl $": 1,
                "pushl (%esi);calll *%ebx;xorl %eax, %eax;movl (%esi), %ecx;cmpl %eax, %ecx": 1,
                "movl %eax, %ecx;calll  <.text+>;jmp  <.text+>;orl $-, %eax;leal (%edi), %ecx": 1,
                "movl (%ecx), %edx;testl %edx, %edx;popl %esi;je  <.text+>;cmpl $, (%edx)": 1,
                "popl %esi;je  <.text+>;cmpl $, (%edx);je  <.text+>;movl %edx, %ecx": 1,
                "pushl (%ebp);movl %eax, %ecx;calll *(%edx);xorl %eax, %eax;incl %eax": 1,
                "movl (%ecx), %edi;movl %eax, %ecx;calll  <.text+>;pushl %eax;movl (%esi), %eax": 1,
                "movl (%eax), %eax;pushl %ebx;movl (%eax), %ebx;movl %edi, %ecx;calll  <.text+>": 1,
                "movl $, %eax;popl %edi;popl %esi;leave;retl $": 1,
                "jne  <.text+>;pushl (%edi);calll *;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %eax;pushl (%esi);calll *;movzwl (%ebp), %eax;movzwl (%ebp), %ecx": 1,
                "pushl (%esi);calll *;movzwl (%ebp), %eax;movzwl (%ebp), %ecx;shll $, %eax": 1,
                "calll - <.text+>;movl %eax, %ebx;cmpl $, %ebx;je  <.text+>;leal (%ebp), %eax": 1,
                "movl (%ebp), %esi;pushl %edi;pushl (%ebp);movl %ecx, %edi;pushl %esi": 1,
                "pushl %edi;pushl (%ebp);movl %ecx, %edi;pushl %esi;pushl (%ebp)": 1,
                "movl %eax, %ebx;jne  <.text+>;movl (%esi), %eax;cmpl $, %eax;je  <.text+>": 1,
                "pushl %esi;pushl (%edi);calll *;movl %esi, ;jmp  <.text+>": 1,
                "pushl $;movl %eax, %ecx;calll  <.text+>;calll  <.text+>;testl %eax, %eax": 1,
                "calll  <.text+>;calll  <.text+>;testl %eax, %eax;je  <.text+>;calll  <.text+>": 1,
                "je  <.text+>;calll  <.text+>;movl (%eax), %ecx;calll  <.text+>;pushl $-": 2,
                "movl (%eax), %ecx;calll  <.text+>;pushl $-;pushl $;calll  <.text+>": 1,
                "xorl %eax, %eax;movl (%ebp), %ecx;movl (%ecx), %edx;pushl %eax;calll *(%edx)": 8,
                "je  <.text+>;pushl $;movl %ebx, %ecx;calll  <.text+>;testl %eax, %eax": 1,
                "pushl $;pushl $;pushl $;pushl $;movl %edi, %ecx": 1,
                "movl %edi, %ecx;calll  <.text+>;movl $, %edi;pushl %edi;movl %ebx, %ecx": 1,
                "movl (%esi), %eax;orl $, %eax;pushl %eax;movl %ebx, %ecx;calll  <.text+>": 1,
                "xorl %eax, %eax;jmp  <.text+>;orl $-, %eax;popl %ebx;popl %edi": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <.text+>;cmpl $, (%esi);jne  <.text+>": 4,
                "movl %eax, %esi;testl %esi, %esi;je  <.text+>;pushl %ebx;pushl %edi": 2,
                "pushl %ebx;pushl %edi;pushl ;movl (%esi), %edi;calll - <.text+>": 1,
                "retl;movl (%esi), %ecx;cmpl (%eax), %ecx;jne - <.text+>;movl (%eax), %ebx": 1,
                "movl (%esi), %ecx;cmpl (%eax), %ecx;jne - <.text+>;movl (%eax), %ebx;pushl %eax": 1,
                "calll  <.text+>;movl (%esi), %eax;cmpl $-, %eax;je  <.text+>;pushl $-": 2,
                "pushl %eax;calll  <.text+>;jmp  <.text+>;pushl %edi;calll  <.text+>": 2,
                "movb $, -(%ebp);calll - <.text+>;movl %eax, %esi;testl %esi, %esi;je  <.text+>": 1,
                "movl %edi, %ecx;movb $, -(%ebp);calll - <.text+>;movl %eax, %esi;testl %esi, %esi": 1,
                "je  <.text+>;pushl %eax;calll  <.text+>;pushl %esi;movl %edi, %ecx": 1,
                "calll  <.text+>;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "pushl $;calll  <.text+>;pushl %esi;movl %ebx, %ecx;calll - <.text+>": 1,
                "calll - <.text+>;movl %eax, %esi;cmpl %edi, %esi;jne - <.text+>;calll - <.text+>": 2,
                "pushl %edi;calll  <.text+>;calll  <.text+>;movl (%eax), %ecx;calll  <.text+>": 2,
                "calll *%esi;movl %eax, %esi;movl $, %ebx;pushl %ebx;subl $, %esi": 1,
                "calll *;cmpl $, ;jne  <.text+>;cmpl $, ;jne  <.text+>": 1,
                "pushl %ebx;pushl $;pushl (%edi);calll *;popl %ebx": 1,
                "movl $, %eax;calll  <.text+>;subl $, %esp;pushl %ebx;calll  <.text+>": 1,
                "pushl -(%ebp);calll *;pushl -(%ebp);calll *;movl -(%ebp), %eax": 4,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll  <.text+>;cmpl %ebx, %eax": 1,
                "pushl %esi;leal -(%ebp), %ecx;calll  <.text+>;movzwl (%ebp), %eax;andl $, -(%ebp)": 3,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);calll  <.text+>;movl (%eax), %eax": 1,
                "popl %esi;jmp  <.text+>;calll - <.text+>;movl %eax, %ecx;pushl $": 1,
                "pushl $;calll - <.text+>;andl $, (%esi);movl $, (%esi);movl %esi, %eax": 2,
                "pushl %edi;movl %esi, %ecx;movb $, -(%ebp);movl %ebx, (%esi);movl $, (%esi)": 1,
                "movl %eax, -(%ebp);movl %ecx, %esi;calll  <.text+>;pushl $;leal (%esi), %ecx": 1,
                "leal (%esi), %ecx;calll - <.text+>;leal -(%ebp), %eax;pushl %eax;movl $, (%esi)": 1,
                "calll  <.text+>;movl -(%ebp), %ecx;movl (%ecx), %eax;cmpl $-, %eax;movb $, -(%ebp)": 1,
                "calll  <.text+>;addl $, %esp;jmp - <.text+>;pushl %ebx;pushl %edi": 1,
                "calll - <.text+>;pushl $;movl %edi, %ecx;calll  <.text+>;pushl %ebx": 1,
                "pushl %esi;movl %ecx, %esi;movl (%esi), %eax;andl $, (%esi);andl $, (%eax)": 1,
                "andl $, (%eax);pushl %edi;leal (%esi), %edi;movl %edi, %ecx;calll - <.text+>": 1,
                "pushl %edi;leal (%esi), %edi;movl %edi, %ecx;calll - <.text+>;movl %edi, %ecx": 2,
                "pushl %ecx;leal (%esi), %ecx;calll - <.text+>;pushl $;pushl $": 1,
                "je  <.text+>;calll - <.text+>;movl (%ebp), %eax;movl $, (%eax);xorl %eax, %eax": 1,
                "movl %edx, (%ecx);movl (%ebp), %ecx;pushl %eax;calll  <.text+>;movl (%ebp), %eax": 1,
                "pushl %edi;pushl $;pushl $;movl $, -(%ebp);calll *": 1,
                "pushl $;movl $, -(%ebp);calll *;testl %eax, %eax;je  <.text+>": 2,
                "pushl -(%ebp);calll *%esi;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "xorl %eax, %eax;pushl %eax;movl $, %ebx;pushl %ebx;pushl %eax": 1,
                "pushl $;pushl $;calll *%edi;testl %eax, %eax;je  <.text+>": 1,
                "pushl -(%ebp);calll *;movl %esi, %eax;movl -(%ebp), %ecx;popl %edi": 3,
                "pushl %esi;pushl %edi;pushl $;popl %ebx;pushl %ebx": 1,
                "testl %eax, %eax;jle  <.text+>;pushl %ebx;pushl %edi;pushl %esi": 9,
                "movw %bx, ;jmp  <.text+>;andw $, ;pushl $;movl $, %edi": 5,
                "movl %ebx, %eax;testl %eax, %eax;jle  <.text+>;pushl $;pushl %edi": 8,
                "pushl %ebx;movl $, %edi;pushl %edi;pushl %esi;movw %ax, (%ecx)": 1,
                "popl %eax;testl %eax, %eax;jle  <.text+>;pushl %ebx;pushl %edi": 2,
                "pushl %esi;calll - <.text+>;movzwl %ax, %eax;movl %eax, ;jmp  <.text+>": 15,
                "pushl %esi;calll - <.text+>;pushl $-;movzwl %ax, %eax;pushl $": 1,
                "je  <.text+>;leal (%esi), %eax;pushl %eax;leal (%esi), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %edi;pushl %esi;calll - <.text+>;pushl $": 3,
                "calll - <.text+>;pushl $;popl %ecx;cmpw %cx, %ax;jae  <.text+>": 3,
                "movl %eax, -(%ebp);calll - <.text+>;pushl $;pushl $;pushl %edi": 1,
                "jne  <.text+>;andw $, -(%ebp);calll  <.text+>;movl , %edi;movw %ax, -(%ebp)": 1,
                "pushl %eax;calll *%ebx;popl %ecx;leal -(%ebp,%eax,), %eax;pushl %eax": 1,
                "jmp  <.text+>;movl %ebx, %eax;xorl %ecx, %ecx;incl %ecx;cmpl %ecx, %eax": 1,
                "movl $, %esi;pushl %esi;movl $, %ebx;pushl %ebx;movl $, %edi": 1,
                "xorl %edx, %edx;jmp  <.text+>;movzwl %ax, %edx;movzwl , %ecx;cmpl %ecx, %edx": 1,
                "movzwl %ax, %eax;jmp  <.text+>;movl %ecx, %eax;movl (%edi), %ecx;pushl $": 1,
                "movl $, %esi;pushl %esi;calll - <.text+>;movl (%edi), %ecx;pushl $": 1,
                "calll - <.text+>;movl , %ecx;cmpw %cx, %ax;jae  <.text+>;pushl $": 2,
                "calll - <.text+>;jmp  <.text+>;movl %ecx, %eax;movl , %edx;cmpw %dx, %ax": 14,
                "movl %edx, %eax;movl (%edi), %ecx;pushl $;movw %ax, (%ecx);movzwl , %eax": 1,
                "pushl $;pushl $;movl $, %ebx;pushl %ebx;movw %ax, (%ecx)": 1,
                "movl , %edx;cmpw %dx, %ax;jle  <.text+>;pushl $;pushl %ebx": 5,
                "incl %ebx;pushl %ebx;pushl $;pushl %esi;movw %ax, (%ecx)": 1,
                "jmp  <.text+>;movl %edx, %eax;movl (%edi), %ecx;pushl %ebx;pushl $": 6,
                "calll - <.text+>;pushl $;pushl $;pushl %esi;calll - <.text+>": 6,
                "xorl (%ecx), %eax;andl $, %eax;xorl %eax, (%ecx);xorl %eax, %eax;pushl %eax": 1,
                "pushl %eax;pushl $;pushl $;calll *;testl %eax, %eax": 1,
                "jne  <.text+>;pushl $;pushl -(%ebp);calll *;pushl -(%ebp)": 2,
                "pushl -(%ebp);calll *;pushl %edi;calll - <.text+>;pushl $": 1,
                "popl %edi;popl %esi;popl %ebx;movswl %dx, %eax;shll $, %eax": 1,
                "pushl %esi;pushl $;pushl $;movl $, %esi;pushl %esi": 3,
                "calll - <.text+>;movzwl , %eax;pushl %eax;pushl $;pushl %esi": 1,
                "pushl $;pushl %edi;calll - <.text+>;pushl $;calll *%esi": 1,
                "calll - <.text+>;movl %eax, %edi;movl (%edi), %eax;movzwl (%eax), %eax;pushl %eax": 1,
                "calll - <.text+>;movl (%edi), %eax;movzwl (%eax), %eax;pushl %eax;pushl $": 4,
                "movl (%edi), %eax;movswl (%eax), %eax;pushl %eax;pushl $;pushl $": 1,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;movl $, -(%ebp);calll  <.text+>": 1,
                "testb %bl, %bl;je  <.text+>;pushl $;popl %esi;pushl %esi": 1,
                "je  <.text+>;pushl $;popl %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "movb $, %bl;testb $, -(%ebp);je  <.text+>;leal -(%ebp), %ecx;calll  <.text+>": 1,
                "movl %eax, %ecx;movb $, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx;movl %eax, %esi": 2,
                "addl %esi, %ebx;jmp  <.text+>;cmpw $, %ax;je  <.text+>;movl (%ebp), %ecx": 1,
                "cmpl -(%ebp), %ebx;jl - <.text+>;cmpl -(%ebp), %ebx;jl  <.text+>;xorl %esi, %esi": 1,
                "pushl (%ebp);leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;leal -(%ebp), %ecx": 1,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;pushl $": 5,
                "movb %al, %bl;calll  <.text+>;pushl $;popl %esi;leal (%ebp), %eax": 1,
                "addl %edi, %esi;pushl %esi;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "movl %esi, %eax;movl (%esi), %esi;addl $, %eax;pushl %eax;leal -(%ebp), %ecx": 2,
                "cmpw %cx, %dx;jge  <.text+>;movl %edx, %ecx;jmp  <.text+>;movl %esi, %ecx": 12,
                "movl , %ecx;movw (%ecx), %cx;movw %cx, (%eax);movl , %edx;xorl %ecx, %ecx": 1,
                "movl %edx, %ecx;jmp  <.text+>;movl %esi, %ecx;movl %ecx, (%eax);movl , %ecx": 1,
                "movl , %ecx;movl (%ecx), %ecx;movl (%eax), %edx;shrl $, %ecx;shll $, %ecx": 1,
                "jmp  <.text+>;movl %ecx, ;jmp  <.text+>;movl %ebx, ;pushl %ebx": 1,
                "jmp  <.text+>;movl %ecx, ;jmp  <.text+>;movl %ebx, ;pushl $": 2,
                "cmpl %ecx, %eax;jle  <.text+>;pushl %ebx;pushl %edi;pushl %esi": 1,
                "movl %eax, ;jmp  <.text+>;movl %ecx, ;movl $, %ebx;pushl %ebx": 1,
                "jmp  <.text+>;movl $, ;jmp  <.text+>;andl $, ;pushl $": 1,
                "movl %eax, ;movl %eax, ;movl %eax, ;pushl %ebx;pushl $": 1,
                "pushl $;calll  <.text+>;testl %eax, %eax;popl %edi;popl %esi": 1,
                "calll - <.text+>;calll - <.text+>;calll - <.text+>;jmp - <.text+>;retl": 1,
                "calll - <.text+>;pushl $;movl %esi, %ecx;calll  <.text+>;xorl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;movl %eax, %ecx;jmp - <.text+>;pushl $-": 1,
                "testl %eax, %eax;je  <.text+>;movl (%eax), %esi;testl %esi, %esi;je  <.text+>": 1,
                "decl %eax;je  <.text+>;xorl %eax, %eax;jmp  <.text+>;movl (%edx), %eax": 1,
                "pushl %ebx;movl %ebx, -(%ebp);calll *%edi;movl (%ebp), %esi;pushl %eax": 1,
                "movl (%ebp), %esi;pushl %eax;movl %esi, %ecx;movl %eax, -(%ebp);calll  <.text+>": 1,
                "je  <.text+>;movl (%esi), %eax;pushl %edi;pushl %eax;leal (%ebp), %ecx": 1,
                "pushl %edi;pushl %eax;leal (%ebp), %ecx;calll  <.text+>;leal -(%ebp), %eax": 1,
                "movw (%eax,%edi,), %ax;cmpw $, %ax;movl %esi, %ecx;leal (%ebp), %eax;jne  <.text+>": 1,
                "leal (%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>;movl $, -(%ebp);orl $-, -(%ebp)": 1,
                "popl %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;movl $, %esi": 1,
                "calll *;pushl -(%ebp);calll *;xorl %edi, %edi;movl %ebx, %ecx": 1,
                "xorl %edi, %edi;movl -(%ebp), %ecx;xorl %eax, %eax;testl %edi, %edi;popl %edi": 1,
                "movl -(%ebp), %ecx;xorl %eax, %eax;testl %edi, %edi;popl %edi;popl %esi": 1,
                "pushl -(%ebp);movl %esi, %ecx;calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 2,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;incl %eax;jmp  <.text+>": 6,
                "testl %eax, %eax;jne  <.text+>;incl %eax;jmp  <.text+>;xorl %eax, %eax": 6,
                "movl %eax, %ecx;calll - <.text+>;addl $, %esi;movl $, (%esi);calll - <.text+>": 2,
                "pushl %ecx;movl %edi, %ecx;calll *(%eax);movl %esi, %ecx;calll - <.text+>": 2,
                "int;calll - <.text+>;movl (%eax), %ecx;pushl $;calll - <.text+>": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;pushl (%ebp);leal -(%ebp), %ecx;pushl (%ebp)": 1,
                "addl $, %esp;pushl %edi;pushl (%ebp);movl %esi, %ecx;pushl %eax": 1,
                "popl %ecx;orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %ecx": 1,
                "leave;retl $;leal (%ecx), %eax;pushl %eax;calll  <.text+>": 1,
                "leal (%eax,%edi,), %ecx;jl - <.text+>;calll  <.text+>;decl %edi;jmp  <.text+>": 1,
                "pushl %eax;calll  <.text+>;movl (%esi), %eax;cmpl (%eax), %edi;jl - <.text+>": 1,
                "pushl %esi;pushl %edi;movl %ecx, %edi;movl (%edi), %eax;movl (%eax), %ecx": 2,
                "movl (%eax,%esi,), %eax;pushl (%ebp);pushl %eax;calll *;testl %eax, %eax": 1,
                "calll *;pushl (%ebp);movl %esi, %ecx;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%eax);calll *;andl $, (%esi);movl %edi, %eax;popl %edi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;calll - <.text+>;cmpl $, %eax": 2,
                "pushl %ebp;movl %esp, %ebp;calll - <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "cmpl %esi, (%ebp);pushl %esi;pushl %esi;pushl $;je  <.text+>": 1,
                "pushl $;pushl $;calll - <.text+>;decl %eax;decl %eax": 1,
                "calll  <.text+>;pushl $;movl %ebx, %ecx;calll - <.text+>;cmpl %esi, %eax": 1,
                "pushl $;pushl $;pushl $;calll - <.text+>;cmpl $, %eax": 6,
                "cmpl $, %eax;jne - <.text+>;xorl %eax, %eax;jmp - <.text+>;int": 1,
                "cmpl $, %eax;je  <.text+>;movl (%ebp), %ecx;movl (%ecx), %eax;pushl $": 1,
                "je  <.text+>;movl (%ebp), %ecx;movl (%ecx), %eax;pushl $;calll *(%eax)": 2,
                "leal -(%ebp), %eax;pushl $;pushl %eax;calll *;movl (%esi), %esi": 1,
                "pushl %eax;calll  <.text+>;movl -(%ebp), %ecx;calll  <.text+>;leave": 1,
                "pushl %ebx;movl (%ebp), %ebx;testl %ebx, %ebx;pushl %esi;movl %ecx, %esi": 1,
                "pushl %edi;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "calll *;cmpl $, %eax;jne  <.text+>;pushl %edi;pushl %edi": 1,
                "movw %si, -(%ebp);calll *;movl %eax, %ebx;cmpl $-, %ebx;je  <.text+>": 1,
                "pushl %ebx;calll *;testl %eax, %eax;je  <.text+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp,%ecx,), %ecx;cmpl %edi, %ecx;je  <.text+>;cmpl $, %ecx;je  <.text+>": 1,
                "movl (%ebp), %eax;decl %eax;decl %eax;je  <.text+>;subl $, %eax": 1,
                "pushl $;pushl $;pushl (%ebp);calll *;xorl %eax, %eax": 1,
                "movl , %edi;xorl %esi, %esi;calll *%edi;leal (%eax,%eax), %eax;pushl %eax": 1,
                "popl %ecx;movl %eax, -(%ebp);je  <.text+>;pushl (%ebp);calll *%edi": 1,
                "movw %si, (%eax);movw %si, (%eax);pushl -(%ebp);pushl %esi;pushl %eax": 1,
                "movw %si, (%eax);pushl -(%ebp);pushl %esi;pushl %eax;leal -(%ebp), %eax": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 5,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "calll  <.text+>;testl %eax, %eax;popl %ecx;popl %ecx;movl %eax, -(%ebp)": 2,
                "popl %ecx;movl %eax, -(%ebp);je  <.text+>;pushl (%ebp);calll *%ebx": 1,
                "xorl %ecx, %ecx;cmpl %ecx, %eax;movl $, %edi;je  <.text+>;pushl %ecx": 1,
                "pushl %ecx;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl ": 5,
                "calll *%ebx;popl %ecx;leal (%eax,%eax), %eax;pushl %eax;pushl %edi": 2,
                "calll  <.text+>;xorl %ecx, %ecx;cmpl %ecx, %eax;je  <.text+>;xorl %esi, %esi": 1,
                "movl (%ebp), %eax;pushl %eax;calll - <.text+>;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;pushl $;calll *": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%edi;movl $, %ecx;subl %eax, %ecx": 1,
                "calll *;addl $, %esp;pushl %ebx;pushl %ebx;movl $, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 4,
                "pushl %eax;calll - <.text+>;movl -(%ebp), %ecx;calll  <.text+>;leave": 4,
                "andw $, (%eax);leal -(%ebp), %eax;pushl %eax;calll *;movl $, %ecx": 1,
                "pushl %esi;leal -(%ebp), %ecx;movl %eax, -(%ebp);movl %esi, -(%ebp);calll  <.text+>": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl %ecx;pushl %eax;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;calll *(%eax);leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>": 1,
                "jne  <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl %esi;movl (%ebp), %esi": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl %esi": 1,
                "cmpl (%edi), %esi;je  <.text+>;movl %esi, (%edi);incl %eax;popl %edi": 1,
                "pushl $;movl %edi, (%esi);movl %edi, (%esi);movl %ebx, (%esi);calll *": 1,
                "subl $, %esp;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl %esi;xorl %ebx, %ebx;pushl %edi;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl %eax, %esi;negl %esi;sbbl %esi, %esi;andl $, %esi;movl $, %edi": 1,
                "popl %eax;pushl $;popl %edx;pushl $;popl %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;movl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "calll *;cmpl %ebx, %eax;jle  <.text+>;andl $, %eax;orl $, %eax": 1,
                "js  <.text+>;movl %ebx, -(%ebp);cmpl %ebx, -(%ebp);movl , %edi;je  <.text+>": 1,
                "je  <.text+>;cmpl %esi, -(%ebp);je  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>": 1,
                "cmpl %esi, -(%ebp);je  <.text+>;pushl -(%ebp);calll *;popl %esi": 1,
                "movl $, -(%ebp);movw $, -(%ebp);movb $, -(%ebp);calll  <.text+>;pushl $": 1,
                "pushl $;pushl $;pushl %edx;pushl %eax;calll  <.text+>": 1,
                "pushl %edx;pushl %eax;calll  <.text+>;pushl %edx;pushl %eax": 1,
                "calll  <.text+>;leal (%esi), %ecx;calll - <.text+>;leal (%esi), %ecx;movb $, -(%ebp)": 2,
                "leal (%esi), %ecx;movb $, -(%ebp);calll  <.text+>;leal (%esi), %ebx;movl %edi, (%esi)": 1,
                "movb $, -(%ebp);calll  <.text+>;leal (%esi), %ebx;movl %edi, (%esi);movl %edi, (%esi)": 1,
                "testl %eax, %eax;je  <.text+>;movl %eax, %ecx;calll  <.text+>;movl %esi, %ecx": 2,
                "testl %esi, %esi;pushl $;je  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "pushl ;movl %ecx, %edi;calll - <.text+>;calll - <.text+>;movl (%eax), %ecx": 1,
                "pushl $;pushl ;movl %ecx, %esi;calll - <.text+>;testl %eax, %eax": 2,
                "leal -(%eax,%ecx,), %eax;pushl %eax;leal (%ebp), %ecx;calll  <.text+>;pushl (%ebp)": 1,
                "jne  <.text+>;pushl $;movl , %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;movl (%eax), %eax;jmp  <.text+>;pushl $": 1,
                "leal -(%ebp), %ecx;movl %esi, -(%ebp);calll - <.text+>;movl %eax, %esi;decl %esi": 1,
                "pushl %ecx;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "testl %eax, %eax;jl  <.text+>;leal -(%ebp), %eax;pushl %eax;calll *%ebx": 1,
                "testl %eax, %eax;jne  <.text+>;calll *;cmpl $, %eax;je  <.text+>": 4,
                "xorl %ebx, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %ebx": 1,
                "movl (%esi), %eax;movl (%eax), %ecx;cmpl $, (%ecx);movl (%ebp), %ebx;jne  <.text+>": 1,
                "calll  <.text+>;xorl %esi, %esi;jmp  <.text+>;movl (%esi), %ecx;pushl $": 1,
                "movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);xorl %esi, %esi;incl %esi": 1,
                "calll *(%eax);xorl %esi, %esi;incl %esi;movl %esi, (%ebx);leal -(%ebp), %ecx": 1,
                "je  <.text+>;cmpl %ebx, (%eax);jne  <.text+>;movl (%esi), %ecx;pushl $": 1,
                "movl (%esi), %ecx;pushl $;calll - <.text+>;movl %eax, %edi;testl %edi, %edi": 1,
                "movl %edi, %ecx;movl %eax, -(%ebp);calll - <.text+>;cmpl $, -(%ebp);movl (%edi), %esi": 1,
                "movl (%edi), %esi;movl %eax, %ebx;je  <.text+>;testl %ebx, %ebx;je  <.text+>": 1,
                "movl %edi, %ecx;calll  <.text+>;movl %ebx, %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "calll  <.text+>;movl %edi, %ecx;calll  <.text+>;jmp  <.text+>;pushl ": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %ecx;andl $, -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;movw %bx, (%eax);calll  <.text+>;movl -(%ebp), %ecx;leal -(%ebp), %eax": 1,
                "movw %bx, (%eax);calll  <.text+>;movl -(%ebp), %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;cmpl %ebx, %eax;jne  <.text+>;movl (%esi), %ecx;pushl %ebx": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;jne  <.text+>;xorl %ecx, %ecx": 2,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;xorl %ecx, %ecx;jmp  <.text+>": 2,
                "pushl $;movl %esi, %ecx;movl %eax, %ebx;calll - <.text+>;movl , %esi": 1,
                "movl $, -(%ebp);movl %edx, -(%ebp);calll - <.text+>;movl -(%ebp), %ecx;testl %ecx, %ecx": 4,
                "calll - <.text+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <.text+>;movl (%ecx), %eax": 5,
                "je  <.text+>;calll - <.text+>;cmpl $, (%eax);je  <.text+>;calll - <.text+>": 1,
                "calll  <.text+>;pushl %ecx;pushl %esi;movl %ecx, %esi;calll - <.text+>": 1,
                "jne  <.text+>;pushl %ebx;pushl %edi;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "je  <.text+>;movl (%esi), %eax;movl %esi, %ecx;calll *(%eax);pushl %ebx": 1,
                "pushl %ebx;movl %edi, %ecx;calll  <.text+>;movl %edi, %ecx;calll  <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movl %eax, %ecx;jmp  <.text+>": 1,
                "calll *;pushl %eax;calll  <.text+>;pushl %eax;pushl $": 1,
                "leal -(%ebp), %eax;je  <.text+>;leal -(%ebp), %eax;leal -(%ebp), %ecx;pushl %eax": 1,
                "leal -(%ebp), %eax;leal -(%ebp), %ecx;pushl %eax;calll  <.text+>;calll - <.text+>": 1,
                "pushl -(%ebp);movl %ebx, -(%ebp);calll *%esi;jmp  <.text+>;movl -(%ebp), %eax": 5,
                "pushl -(%ebp);calll *;xorl %eax, %eax;cmpl -(%ebp), %eax;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;movl %edi, %ecx;movb $, -(%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "cmpl %ebx, %eax;jle  <.text+>;cmpl %edi, %ecx;jge  <.text+>;movl %ecx, %edi": 2,
                "calll - <.text+>;movl %edi, (%eax);movl -(%ebp), %ecx;xorl %edi, %edi;incl %edi": 1,
                "shll $, %ecx;xorl (%eax), %ecx;andl $, %ecx;xorl %ecx, (%eax);leal -(%ebp), %eax": 1,
                "calll  <.text+>;movl %eax, -(%ebp);pushl (%esi);leal -(%ebp), %ecx;movb $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movb $, -(%ebp);calll  <.text+>;pushl -(%ebp)": 2,
                "pushl %eax;calll *;testl %eax, %eax;jne  <.text+>;pushl $": 3,
                "leal -(%ebp), %ecx;calll  <.text+>;movl %eax, %esi;pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "pushl $;leal -(%ebp), %ecx;calll  <.text+>;jmp  <.text+>;pushl $": 3,
                "leal -(%ebp), %ecx;calll  <.text+>;xorl %esi, %esi;incl %esi;cmpw %si, (%edi)": 1,
                "pushl $;leal -(%ebp), %ecx;calll  <.text+>;incl %esi;pushl %esi": 1,
                "movb $, -(%ebp);calll  <.text+>;movl -(%ebp), %eax;cmpw $, (%eax);jne - <.text+>": 4,
                "calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;addl $, %ebx;pushl %ebx": 1,
                "pushl $;calll - <.text+>;pushl %ebx;pushl ;movl %esi, %ecx": 1,
                "pushl $;pushl $;leal -(%ebp), %ecx;calll  <.text+>;leal -(%ebp), %ecx": 2,
                "calll - <.text+>;jmp  <.text+>;xorl %eax, %eax;movb $, -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpl %ebx, %ecx;je  <.text+>;pushl $;calll - <.text+>;pushl %ebx": 1,
                "je  <.text+>;pushl $;calll - <.text+>;pushl %ebx;calll - <.text+>": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;cmpl $, %eax;je  <.text+>": 1,
                "je  <.text+>;calll - <.text+>;cmpl $, (%eax);je  <.text+>;xorl %edi, %edi": 1,
                "jmp  <.text+>;xorl %edi, %edi;incl %edi;pushl $;calll - <.text+>": 1,
                "movl %esi, %ecx;calll *(%eax);movl -(%ebp), %ecx;cmpl %ebx, %ecx;je  <.text+>": 1,
                "je  <.text+>;movl (%ecx), %eax;pushl $;calll *(%eax);movl %edi, %ebx": 1,
                "movl %eax, -(%ebp);calll - <.text+>;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "movl %esi, %ecx;movl %eax, -(%ebp);calll - <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "calll - <.text+>;movl %esi, %ecx;calll - <.text+>;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;cmpl %edi, %eax;movl %eax, -(%ebp);jne  <.text+>;pushl %ebx": 1,
                "movl %edi, -(%ebp);calll  <.text+>;pushl $;movb $, -(%ebp);calll  <.text+>": 1,
                "movl %edi, (%esi);calll - <.text+>;leal -(%ebp), %ecx;calll  <.text+>;cmpl $, %ebx": 1,
                "pushl ;jne  <.text+>;calll  <.text+>;jmp  <.text+>;calll - <.text+>": 2,
                "calll *(%eax);movl -(%ebp), %ecx;xorl %esi, %esi;incl %esi;cmpl %edi, %ecx": 1,
                "retl;movb $, -(%ebp);calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 2,
                "pushl $;movl %eax, %ebx;calll - <.text+>;jmp  <.text+>;movl %esi, %ecx": 1,
                "je  <.text+>;movl -(%ebp), %eax;orl -(%ebp), %eax;je  <.text+>;cmpl %esi, -(%ebp)": 1,
                "pushl $;calll - <.text+>;pushl %edi;movl %eax, -(%ebp);calll *": 1,
                "xorl %edi, %edi;incl %edi;pushl %edi;calll  <.text+>;cmpw %si, -(%ebp)": 1,
                "calll  <.text+>;movl -(%ebp), %ecx;popl %edi;movl %ecx, %fs:;movl -(%ebp), %ecx": 1,
                "calll  <.text+>;movb $, -(%ebp);calll - <.text+>;addl $, %eax;pushl %eax": 1,
                "cmpl %edi, %eax;je  <.text+>;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "calll  <.text+>;addl $, %esp;jmp  <.text+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl $;calll - <.text+>;pushl ;movl %eax, %edi;calll  <.text+>": 1,
                "pushl %eax;movl %esi, %ecx;calll  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "pushl $;calll - <.text+>;xorl %eax, %eax;jmp  <.text+>;cmpl $, (%ebp)": 1,
                "movl (%ebp), %esi;jne  <.text+>;pushl $;movl %edi, %ecx;calll - <.text+>": 1,
                "calll *(%eax);movl -(%ebp), %eax;cmpl %ebx, (%eax);jne  <.text+>;movl %edi, %ecx": 1,
                "calll  <.text+>;movl (%edi), %ecx;pushl $;calll - <.text+>;pushl -(%ebp)": 1,
                "movl (%eax), %edx;movl %eax, %ecx;calll *(%edx);pushl $;leal -(%ebp), %ecx": 2,
                "pushl %eax;pushl %ecx;calll *(%edx);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);leal -(%ebp), %ecx;movb $, -(%ebp)": 4,
                "movl (%ebp), %eax;movl (%eax), %ecx;pushl %eax;calll *(%ecx);leal -(%ebp), %ecx": 1,
                "calll *;pushl ;calll  <.text+>;movl %edi, %ecx;pushl $": 1,
                "movl %edi, %ecx;pushl $;calll - <.text+>;cmpl %ebx, (%esi);je  <.text+>": 1,
                "pushl $;calll - <.text+>;cmpl %ebx, (%esi);je  <.text+>;leal (%esi), %eax": 1,
                "leal (%esi), %eax;cmpl %ebx, (%eax);je  <.text+>;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "movl %esi, %ecx;calll - <.text+>;xorl %eax, %eax;movl %ebx, (%esi);incl %eax": 1,
                "calll - <.text+>;xorl %eax, %eax;movl %ebx, (%esi);incl %eax;popl %esi": 1,
                "movl %ecx, %esi;calll - <.text+>;xorl %edi, %edi;cmpl %edi, %eax;movl %eax, -(%ebp)": 1,
                "movl %esi, %ecx;calll - <.text+>;movl %eax, %ebx;cmpl %edi, %ebx;jne  <.text+>": 1,
                "jmp  <.text+>;movl %esi, %ecx;calll - <.text+>;cmpl $, (%ebp);pushl ": 1,
                "pushl $;movl %esi, %ecx;calll *(%eax);cmpl $, (%ebp);jne  <.text+>": 1,
                "pushl %edi;calll - <.text+>;pushl ;calll - <.text+>;pushl ": 1,
                "testl %eax, %eax;je  <.text+>;pushl %esi;pushl $;pushl $": 1,
                "pushl %edi;calll - <.text+>;movl %eax, %ebx;jmp  <.text+>;xorl %ebx, %ebx": 1,
                "calll  <.text+>;pushl %esi;leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp)": 1,
                "cmpl $, (%ebp);je  <.text+>;movl -(%ebp), %eax;movl (%eax), %ecx;pushl $": 1,
                "movl %ebx, %ecx;calll *(%eax);movl -(%ebp), %eax;cmpl $, (%eax);jne  <.text+>": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl $;pushl $;pushl -(%ebp)": 1,
                "movb $, -(%ebp);pushl %eax;calll *(%ecx);testl %eax, %eax;jne  <.text+>": 1,
                "calll  <.text+>;movl (%ebx), %ecx;pushl $;calll - <.text+>;pushl -(%ebp)": 1,
                "movl (%ebx), %ecx;pushl $;calll - <.text+>;pushl -(%ebp);movl (%eax), %edx": 1,
                "calll - <.text+>;movl -(%ebp), %eax;pushl -(%ebp);movl (%eax), %ecx;pushl %eax": 1,
                "addl %ecx, %eax;pushl %eax;pushl %edx;calll *(%ebx);movl -(%ebp), %eax": 1,
                "jne - <.text+>;movl (%ebx), %eax;pushl $;pushl $;pushl $": 1,
                "pushl %esi;pushl %edi;movl %ecx, %esi;calll - <.text+>;movl %eax, %edi": 1,
                "testl %edi, %edi;je  <.text+>;pushl %ebx;xorl %ebx, %ebx;incl %ebx": 1,
                "pushl %ebx;movl %esi, %ecx;calll - <.text+>;movl (%esi), %eax;pushl $": 1,
                "calll - <.text+>;pushl ;calll  <.text+>;movl %edi, %ecx;calll  <.text+>": 1,
                "pushl %esi;pushl %edi;xorl %esi, %esi;movl %ecx, %edi;incl %esi": 1,
                "pushl %eax;calll  <.text+>;pushl $;movl %edi, %ecx;calll - <.text+>": 1,
                "cmpl %ebx, %esi;je  <.text+>;cmpl $, %esi;jne  <.text+>;calll  <.text+>": 1,
                "decl %eax;je  <.text+>;decl %eax;jne  <.text+>;jmp  <.text+>": 2,
                "movl %ebx, (%edi);calll  <.text+>;jmp  <.text+>;movl (%edi), %eax;cmpl %ebx, (%eax)": 1,
                "movl (%edi), %eax;cmpl %ebx, (%eax);je  <.text+>;calll  <.text+>;pushl $": 1,
                "calll - <.text+>;movl %eax, %esi;testl %esi, %esi;je  <.text+>;movl (%esi), %ecx": 1,
                "int;int;int;movl %edi, %edi;pushl %ecx": 1,
                "movl %ecx, %ebx;calll - <.text+>;testw %ax, %ax;je  <.text+>;pushl $": 1,
                "je  <.text+>;calll - <.text+>;movl %eax, %edi;movl (%edi), %ecx;xorl %esi, %esi": 1,
                "cmpl %esi, %eax;movb $, -(%ebp);je  <.text+>;pushl %esi;movl %eax, %ecx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %eax;pushl $;movb $, -(%ebp);movl %eax, -(%ebp)": 1,
                "calll - <.text+>;movl %eax, -(%ebp);jmp  <.text+>;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "calll  <.text+>;movl -(%ebp), %ecx;xorl %edi, %edi;incl %edi;pushl %edi": 1,
                "pushl %edi;movl %ebx, %ecx;calll *(%eax);movl %ebx, %ecx;calll - <.text+>": 1,
                "calll *(%eax);pushl $;pushl %esi;pushl $;pushl %esi": 1,
                "pushl $;movl %esi, %ecx;calll  <.text+>;calll - <.text+>;movl (%eax), %eax": 1,
                "movl %eax, (%esi);pushl $;xorl %eax, %eax;popl %ecx;leal -(%ebp), %edi": 1,
                "movl %eax, -(%ebp);calll  <.text+>;movl (%eax), %eax;pushl $;movl %esi, %ecx": 1,
                "calll *%edi;testl %eax, %eax;popl %ecx;popl %ecx;jne  <.text+>": 30,
                "testl %eax, %eax;popl %ecx;popl %ecx;movb %bl, -(%ebp);je  <.text+>": 2,
                "negl %eax;sbbb %al, %al;incb %al;pushl %eax;movl (%esi), %eax": 1,
                "je  <.text+>;calll - <.text+>;movl %esi, %ecx;movl %eax, %edi;movl $, -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;cmpw %bx, ;jne  <.text+>": 2,
                "xorl %eax, %eax;cmpl %ebx, (%edi);setne %al;leal (%eax,%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, -(%ebp);leal (%edi), %ecx;movl (%ecx), %edx;movl %edx, -(%ebp);movl (%edi), %edx": 1,
                "movl %eax, %ecx;calll  <.text+>;movl (%esi), %eax;xorl %ecx, %ecx;incl %ecx": 1,
                "je  <.text+>;pushl %ebx;movl %edi, %ecx;calll  <.text+>;movl (%eax), %edx": 1,
                "jne  <.text+>;cmpw %bx, ;jne  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "calll - <.text+>;pushl %ebx;pushl %edi;pushl $;pushl (%eax)": 1,
                "calll *;movl (%esi), %ecx;pushl $;pushl %ebx;calll - <.text+>": 1,
                "int;int;pushl $;pushl $;calll *": 1,
                "popl %ecx;movl (%esi), %eax;movl (%eax), %eax;testl %eax, %eax;je  <.text+>": 6,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <.text+>;calll - <.text+>": 1,
                "movl %eax, -(%ebp);calll *%esi;movl -(%ebp), %ecx;leal (%ecx,%eax), %eax;pushl %eax": 1,
                "popl %ecx;popl %ecx;cmpl %edi, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "popl %ecx;pushl $;pushl -(%ebp);pushl -(%ebp);calll *%esi": 1,
                "calll  <.text+>;subl $, %esp;pushl %esi;pushl $;movl %edi, %ecx": 1,
                "movl %eax, %esi;cmpl $-, %esi;je  <.text+>;pushl %ebx;leal (%esi), %eax": 1,
                "pushl %eax;movl %edi, %ecx;calll  <.text+>;movl %eax, %ebx;andl $, -(%ebp)": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;pushl $;movl %edi, %ecx": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);pushl (%ebp);calll *": 1,
                "pushl %edi;pushl (%ebp);pushl (%ebp);calll *;movl %eax, %esi": 1,
                "popl %ecx;popl %ecx;je  <.text+>;cmpl (%ebp), %esi;movl , %edi": 1,
                "calll  <.text+>;orl $-, -(%ebp);popl %ecx;leal (%esi), %ecx;calll  <.text+>": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;popl %ecx;movl %eax, (%esi)": 1,
                "movl (%esi), %ecx;pushl %ebx;pushl %edi;movl , %edi;leal (%ecx,%eax,), %eax": 1,
                "jne  <.text+>;movl %ebx, -(%ebp);cmpl -(%ebp), %ebx;movl %ebx, %edi;jb  <.text+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;jne  <.text+>;jmp  <.text+>": 1,
                "jne - <.text+>;xorl %ecx, %ecx;cmpw %cx, (%eax);setne %cl;movl %ecx, %eax": 1,
                "setne %cl;movl %ecx, %eax;popl %ebp;retl $;int": 1,
                "jne  <.text+>;movl (%eax), %eax;testl %eax, %eax;je  <.text+>;pushl $": 1,
                "pushl %eax;pushl (%ebp);calll *;testl %eax, %eax;popl %ecx": 3,
                "retl $;cmpl $, (%eax);je  <.text+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "calll  <.text+>;testw %ax, %ax;jne  <.text+>;pushl $;pushl $": 3,
                "pushl %ebx;pushl -(%ebp);leal (%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "leal (%ebp), %eax;pushl %eax;calll  <.text+>;testw %ax, %ax;jne - <.text+>": 1,
                "pushl %eax;je  <.text+>;pushl (%ebp);calll  <.text+>;jmp  <.text+>": 1,
                "movl (%ebp), %ecx;jne  <.text+>;movl (%ecx), %eax;jmp  <.text+>;incl %eax": 1,
                "popl %ecx;movl (%ebp), %ecx;jne  <.text+>;cmpl %eax, (%ecx);jne  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %ecx;pushl %eax;calll  <.text+>;testw %ax, %ax": 1,
                "pushl $;leal (%ebp), %ecx;calll  <.text+>;andl $, -(%ebp);pushl $": 1,
                "calll  <.text+>;leal (%ebp), %ecx;pushl %ecx;pushl %eax;calll - <.text+>": 1,
                "cmpl $, %eax;ja  <.text+>;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "calll - <.text+>;jmp  <.text+>;movl $, %eax;testl %eax, %eax;jl  <.text+>": 1,
                "movl %eax, (,%esi,);incl %esi;cmpl $, %esi;jl - <.text+>;movl -(%ebp), %ecx": 2,
                "xorl %ebx, %ebx;xorl %esi, %esi;xorl %edi, %edi;cmpl %ebx, (%ebp);je  <.text+>": 1,
                "sbbl %eax, %eax;incl %eax;movl %eax, -(%ebp);je  <.text+>;testl %edi, %edi": 1,
                "pushl %ebx;pushl %esi;pushl %edi;xorl %edi, %edi;cmpw %di, ": 1,
                "je  <.text+>;incl %edi;cmpl $, %edi;jl - <.text+>;movl , %edi": 1,
                "calll *;cmpl %esi, %eax;popl %ecx;popl %ecx;je  <.text+>": 3,
                "calll  <.text+>;testw %ax, %ax;je  <.text+>;pushl $;pushl %edi": 1,
                "popl %ecx;je  <.text+>;movw %si, (%ebx);pushl %edi;pushl (%ebp)": 1,
                "pushl $;pushl $;pushl -(%ebp);calll *;popl %ecx": 1,
                "calll  <.text+>;testw %ax, %ax;jne  <.text+>;pushl -(%ebp);pushl (%ebp)": 2,
                "jne  <.text+>;pushl %esi;pushl %esi;pushl $-;pushl $": 1,
                "movl (%ebp), %eax;pushl (%eax);pushl (%ebp);calll *;addl $, %esp": 1,
                "movl %eax, (%esi);cmpl $, (%esi);jne  <.text+>;leal (%ebp), %eax;pushl %eax": 1,
                "calll  <.text+>;testw %ax, %ax;je - <.text+>;jmp  <.text+>;cmpl $, (%eax)": 1,
                "pushl %eax;calll  <.text+>;testw %ax, %ax;jne  <.text+>;movl (%ebp), %eax": 2,
                "pushl %ebx;pushl %esi;movl %ecx, %ebx;movw (%ebx), %si;cmpw $, %si": 1,
                "pushl %eax;calll *;leal -(%ebp,%esi,), %eax;addl $, %esp;andw $, (%eax)": 1,
                "addl $, %esp;andw $, (%eax);leal (%edi), %ebx;movl -(%ebp), %edi;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl %edi;calll *;testl %eax, %eax;jne - <.text+>": 3,
                "pushl %edi;calll *;xorl %eax, %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "calll *;movl -(%ebp), %edi;movl %esi, %ecx;leal -(%ebp), %esi;rep  movsw (%esi), %es:(%edi)": 1,
                "movl -(%ebp), %edi;movl %esi, %ecx;leal -(%ebp), %esi;rep  movsw (%esi), %es:(%edi);movw (%ebx), %ax": 1,
                "pushl (%ebp);movl (%eax), %esi;leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp)": 1,
                "pushl $;leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp);addl $, %esi": 1,
                "movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebp);movl %eax, -(%ebp)": 1,
                "pushl %ebx;calll *;leal (%ebx,%eax,), %ebx;xorl %eax, %eax;movl %esi, -(%ebp)": 1,
                "xorl %eax, %eax;movl %esi, -(%ebp);movw (%ebx), %ax;cmpw %si, %ax;popl %ecx": 1,
                "cmpw %si, %ax;popl %ecx;movl %esi, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "movl %esi, -(%ebp);je  <.text+>;pushl -(%ebp);pushl %eax;calll - <.text+>": 1,
                "cmpw %si, (%ebx);je  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl $, -(%ebp);jmp  <.text+>;cmpw $, %dx;jne  <.text+>;movw %dx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;calll *%ebx;popl %ecx": 1,
                "cmpl %esi, -(%ebp);je  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>;pushl -(%ebp)": 10,
                "pushl -(%ebp);calll - <.text+>;movl %eax, (%edi);jmp  <.text+>;movl $, %edi": 9,
                "pushl %esi;pushl %esi;calll - <.text+>;pushl $;jmp  <.text+>": 9,
                "pushl %esi;calll - <.text+>;pushl $;jmp  <.text+>;movl (%edi), %eax": 9,
                "cmpl $-, %eax;movl %eax, (%edi);jne  <.text+>;orl %eax, -(%ebp);pushl %esi": 1,
                "pushl %ebx;pushl %ebx;pushl %esi;calll - <.text+>;pushl $": 2,
                "pushl %esi;calll - <.text+>;pushl %edi;calll  <.text+>;jmp  <.text+>": 1,
                "movl $, -(%ebp);addl $, %esp;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "addl %ebx, -(%ecx);pushl %cs;pushl %es;addl %edi, (%esi);orb $, %al": 1,
                "pushl %cs;pushl %es;addl %edi, (%esi);orb $, %al;addl %eax, (%edi)": 1,
                "je  <.text+>;movl %edi, (%ebp);movl (%ebp), %eax;movb (%eax), %bl;andb $, %bl": 1,
                "movb (%eax), %bl;andb $, %bl;cmpb $, %bl;jne  <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);leal (%ebp), %ecx;pushl (%ebp);pushl %ecx;pushl %eax": 1,
                "leal (%ebp), %ecx;pushl (%ebp);pushl %ecx;pushl %eax;calll - <.text+>": 1,
                "calll  <.text+>;testw %ax, %ax;je - <.text+>;cmpl %edi, (%ebp);je  <.text+>": 1,
                "pushl (%ebp);calll  <.text+>;testl %eax, %eax;jne  <.text+>;calll - <.text+>": 1,
                "pushl (%ebp);calll - <.text+>;testw %ax, %ax;jne  <.text+>;xorl %edi, %edi": 1,
                "pushl %eax;pushl ;pushl ;calll - <.text+>;movl (%esi), %eax": 3,
                "calll - <.text+>;movl (%esi), %eax;cmpl %ebx, %eax;je  <.text+>;pushl %eax": 2,
                "cmpl %ebx, %eax;je  <.text+>;pushl %eax;pushl ;pushl ": 1,
                "je  <.text+>;pushl %eax;pushl ;pushl ;calll - <.text+>": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl (%esi), %eax;cmpl %ebx, %eax": 2,
                "movl (%esi), %eax;cmpl %ebx, %eax;je  <.text+>;pushl %eax;leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;pushl %eax;addl $, %ecx;movl $, -(%ebp);calll  <.text+>": 1,
                "pushl $;leal -(%ebp), %ecx;movl $, -(%ebp);calll  <.text+>;movl -(%ebp), %ecx": 1,
                "je  <.text+>;calll  <.text+>;movl %eax, %edi;cmpl %ebx, %edi;je  <.text+>": 1,
                "je  <.text+>;pushl %edi;calll  <.text+>;jmp  <.text+>;movl -(%ebp), %eax": 1,
                "popl %ecx;popl %ecx;je  <.text+>;pushl -(%ebp);calll  <.text+>": 3,
                "popl %ecx;je  <.text+>;pushl -(%ebp);calll  <.text+>;cmpl $, (%edi)": 2,
                "calll  <.text+>;cmpl $, (%edi);movl %eax, -(%ebp);je - <.text+>;jmp  <.text+>": 2,
                "movl %eax, -(%ebp);je - <.text+>;jmp  <.text+>;leal (%edi), %eax;pushl $": 2,
                "pushl %eax;calll - <.text+>;pushl %eax;calll *;addl $, %esp": 2,
                "jne  <.text+>;pushl %edi;calll  <.text+>;movl %eax, %edi;cmpl %ebx, %edi": 2,
                "cmpl %ebx, %edi;jne  <.text+>;calll  <.text+>;movl %eax, %edi;cmpl %ebx, %edi": 1,
                "je  <.text+>;pushl (%esi);movl -(%ebp), %eax;addl $, %eax;pushl %eax": 1,
                "xorl %esi, %esi;pushl $;incl %esi;pushl %esi;pushl %esi": 6,
                "je  <.text+>;pushl $;pushl (%esi);calll - <.text+>;pushl %eax": 1,
                "pushl %edi;calll - <.text+>;jmp  <.text+>;pushl %ebx;pushl %ebx": 1,
                "je  <.text+>;calll  <.text+>;pushl $;pushl (%esi);calll - <.text+>": 1,
                "calll  <.text+>;leal -(%ebp), %eax;pushl %eax;leal (%edi), %ecx;movb $, -(%ebp)": 1,
                "movl %edi, (%eax);pushl (%esi);calll - <.text+>;calll - <.text+>;cmpl %edi, %eax": 1,
                "pushl $;pushl %ebx;calll - <.text+>;orl $-, -(%ebp);addl $, %esp": 1,
                "orl $-, -(%ebp);addl $, %esp;leal -(%ebp), %ecx;calll  <.text+>;jmp  <.text+>": 1,
                "calll  <.text+>;movl (%esi), %esi;subl %ebx, %esi;je  <.text+>;decl %esi": 1,
                "movl (%esi), %esi;subl %ebx, %esi;je  <.text+>;decl %esi;je  <.text+>": 1,
                "calll  <.text+>;movl -(%ebp), %edx;movl (%ebp), %ecx;pushl %edi;pushl (%ebp)": 1,
                "incl %eax;andl %eax, -(%ebp);orl %eax, -(%ebp);movl (%ebp), %esi;leal (%ebp), %eax": 1,
                "cmpl %ebx, %esi;je  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;xorl %ecx, %ecx": 1,
                "movl %ecx, (%esi);movl -(%ebp), %eax;leal -(%ebp), %ecx;calll *(%eax);leal (%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;calll *(%eax);leal (%ebp), %ecx;movb $, -(%ebp);calll  <.text+>": 1,
                "leal -(%ebp), %ecx;movb %bl, -(%ebp);calll - <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "jmp  <.text+>;xorl %edx, %edx;movl %esi, %ecx;calll - <.text+>;movl (%ebp), %edx": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ": 1,
                "movl %eax, (%esi);je  <.text+>;pushl %eax;calll *;testl %eax, %eax": 1,
                "calll - <.text+>;addl $, %esp;retl;int;int": 1,
                "jne  <.text+>;andw %ax, -(%ebp);pushl $;pushl $;pushl $": 1,
                "pushl $;andl $-, %esi;pushl $;addl $, %esi;pushl %esi": 2,
                "movl %eax, -(%ebp);movl %esi, %eax;negl %eax;pushl %edi;sbbl %eax, %eax": 1,
                "calll - <.text+>;addl $, %esp;popl %ebp;retl $;int": 1,
                "calll - <.text+>;pushl -(%ebp);calll *;movl %eax, %edi;testl %edi, %edi": 1,
                "calll - <.text+>;movl (%ebp), %eax;cmpl -(%ebp), %eax;jne  <.text+>;movl (%ebp), %eax": 1,
                "addl $, %eax;pushl %eax;pushl %edi;calll *;movl %eax, %esi": 1,
                "xorl %eax, %eax;testl %esi, %esi;popl %edi;setne %al;popl %esi": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl %ebx": 1,
                "jmp  <.text+>;calll - <.text+>;testl %eax, %eax;jne  <.text+>;cmpl %edi, %ebx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "rep  movsb (%esi), %es:(%edi);calll - <.text+>;movl %ebx, %eax;shrl %eax;andw $, -(%ebp,%eax,)": 1,
                "popl %ecx;jne  <.text+>;movw $, %ax;jmp  <.text+>;cmpw $, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 4,
                "popl %ecx;shll %ebx;movswl %bx, %eax;shrl %eax;andw $, -(%ebp,%eax,)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl $;calll - <.text+>": 1,
                "xorw %ax, %ax;jmp  <.text+>;movl -(%ebp), %edi;pushl $;popl %ecx": 1,
                "xorl %eax, %eax;popl %ecx;rep  stosl %eax, %es:(%edi);movl -(%ebp), %eax;movw %bx, (%eax)": 1,
                "movl (%esi), %ebx;pushl %ebx;je  <.text+>;movl (%eax), %ecx;movl %ecx, (%ebp)": 1,
                "movl %esi, -(%ebp);calll - <.text+>;andl $, -(%ebp);leal (%esi), %ecx;movl $, (%esi)": 5,
                "leal (%edi), %esi;popl %ecx;cmpl %ecx, %esi;movl %esi, %eax;jl  <.text+>": 1,
                "movl %esi, %ecx;calll - <.text+>;calll - <.text+>;movzwl (%eax), %eax;decl %eax": 1,
                "decl %eax;je  <.text+>;calll - <.text+>;movw $, (%eax);pushl $": 1,
                "leal (%edi), %eax;pushl %eax;leal (%esi), %ecx;calll  <.text+>;movl (%edi), %eax": 1,
                "xorl %ebx, %ebx;pushl %edi;movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl %eax;pushl $;calll - <.text+>;leal -(%ebp), %ecx;movb %al, -(%ebp)": 1,
                "pushl %eax;leal (%ebp), %ecx;calll  <.text+>;xorl %edi, %edi;pushl %eax": 1,
                "pushl %esi;movl %ecx, %esi;leal -(%ebp), %ecx;calll  <.text+>;pushl %esi": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;pushl %esi;leal (%esi), %eax;pushl %eax": 1,
                "pushl %esi;leal (%ebp), %eax;movl %ecx, %esi;pushl %eax;pushl %esi": 1,
                "pushl %eax;pushl %esi;calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl %eax, %ebx;pushl $-;pushl %ebx;calll *;andl $-, %eax": 1,
                "je  <.text+>;pushl %edi;leal -(%ebp), %ecx;movl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "calll - <.text+>;leal -(%ebp), %eax;pushl %eax;leal (%esi), %ecx;pushl %edi": 1,
                "pushl $-;leal -(%ebp), %ecx;calll  <.text+>;movl %esi, %edi;orl $-, -(%ebp)": 1,
                "movl (%ebp), %esi;leal (%esi), %eax;pushl %eax;leal -(%ebp), %ecx;movb $, -(%ebp)": 1,
                "calll - <.text+>;movl (%ebp), %edi;movl %edi, %ecx;movb $, -(%ebp);movl $, -(%ebp)": 1,
                "movb $, -(%ebp);movl $, -(%ebp);calll - <.text+>;andl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %ecx;movl $, -(%ebp);andl $, %eax;shll $, %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, %ecx;calll - <.text+>;leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>": 1,
                "movl $, -(%ebp);calll - <.text+>;cmpl $-, %eax;movl %eax, -(%ebp);je  <.text+>": 2,
                "calll - <.text+>;pushl -(%ebp);movl %ebx, %ecx;calll - <.text+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);jne - <.text+>;popl %esi;movl -(%ebp), %ecx;popl %edi": 1,
                "je  <.text+>;movl %esi, %eax;movl (%eax), %edi;movl (%edi), %eax;movl (%esi), %esi": 1,
                "jne  <.text+>;shrl $, %eax;testb %al, %bl;je  <.text+>;pushl $": 2,
                "movl %esi, %ecx;calll - <.text+>;movl $, -(%ebp);calll - <.text+>;orl $-, -(%ebp)": 2,
                "calll - <.text+>;orl $-, -(%ebp);pushl %eax;calll - <.text+>;movl (%esi), %eax": 1,
                "leal (%ecx), %eax;pushl %eax;leal (%ecx), %eax;pushl %eax;calll - <.text+>": 8,
                "pushl %eax;calll - <.text+>;retl;int;int": 7,
                "pushl %ecx;pushl %esi;pushl $;pushl $;pushl $": 1,
                "incl %eax;popl %edi;popl %ebx;popl %esi;leave": 1,
                "pushl %ecx;leal (%ebp), %eax;movl %esp, %ecx;movl %esp, -(%ebp);pushl %eax": 1,
                "calll  <.text+>;movl -(%ebp), %ecx;calll - <.text+>;movl %eax, %edi;jmp  <.text+>": 1,
                "pushl %edi;pushl (%ebp);calll - <.text+>;incl -(%ebp);orl $-, -(%ebp)": 1,
                "jne - <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi;movl %ecx, %fs:": 1,
                "movb (%ebx), %al;movl %esi, %ecx;andl $, %eax;pushl %eax;calll - <.text+>": 1,
                "calll  <.text+>;calll - <.text+>;testl %eax, %eax;je  <.text+>;leal (%esi), %edi": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;movl %ecx, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx;calll - <.text+>;movl (%ebx), %eax": 1,
                "je  <.text+>;movl -(%ebp), %edi;pushl %edi;pushl %ecx;leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %edi;pushl %edi;pushl %ecx;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "pushl %edi;pushl %ecx;leal -(%ebp), %ecx;calll - <.text+>;andl $, -(%ebp)": 1,
                "je  <.text+>;pushl $;movl %edi, %ecx;calll  <.text+>;movl %edi, %ecx": 1,
                "setne %cl;incl %ecx;movl %ecx, (%esi);pushl $;movl %esi, %ecx": 1,
                "calll  <.text+>;calll - <.text+>;movl (%esi), %ecx;testl %ecx, %ecx;jne  <.text+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;je  <.text+>;cmpl $, %eax": 1,
                "int;int;calll - <.text+>;pushl %eax;pushl $": 1,
                "calll - <.text+>;pushl %eax;pushl $;pushl $;calll  <.text+>": 1,
                "movw $, %ax;retl $;int;int;int": 14,
                "movw %di, ;movswl %di, %eax;decl %eax;cmpl $, %eax;ja  <.text+>": 1,
                "cmpl $, %eax;ja  <.text+>;movzbl (%eax), %eax;jmpl *(,%eax,);movl %ebx, ": 1,
                "pushl ;calll  <.text+>;movl %ebx, ;pushl ;pushl %esi": 1,
                "incl %esi;pushl %es;addl %ebx, (%ecx);incl %edi;pushl %es": 1,
                "calll  <.text+>;andl $, ;calll - <.text+>;jmp  <.text+>;andw $, ": 1,
                "movl %eax, ;pushl %esi;pushl -(%ebp);calll - <.text+>;xorl %eax, %eax": 1,
                "movl $, (%esi);jmp  <.text+>;movl $, (%esi);pushl $;movl %esi, %ecx": 1,
                "calll - <.text+>;andw $, (%eax);jmp  <.text+>;calll - <.text+>;movw $, (%eax)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ecx), %eax;xorl %edx, %edx": 1,
                "je  <.text+>;incl %eax;jmp  <.text+>;decl %eax;cmpl $, (%ecx)": 1,
                "jmp  <.text+>;decl %eax;cmpl $, (%ecx);movl %eax, (%ecx);jne  <.text+>": 1,
                "decl %eax;cmpl $, (%ecx);movl %eax, (%ecx);jne  <.text+>;xorl %eax, %eax": 1,
                "pushl -(%ebp);movl %esi, %ecx;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "movl (%ebp), %eax;xorl %edx, %edx;movl $, %ecx;divl %ecx;movl $, %ecx": 1,
                "movl $, %ecx;divl %ecx;movl $, %ecx;pushl $;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl %eax, %esi;movl %edx, %eax;xorl %edx, %edx;divl %ecx": 1,
                "pushl -(%ebp);pushl (%ebp);calll  <.text+>;addl $, %esp;orl $-, -(%ebp)": 1,
                "movl (%eax), %eax;movl %eax, (%esi);movl (%esi), %eax;addl %ecx, %eax;movl (%esi), %ecx": 2,
                "pushl %esi;movl %ecx, %esi;calll  <.text+>;movl (%eax), %eax;pushl (%esi)": 1,
                "movl %esp, %ebp;leal (%ecx), %eax;movl (%ebp), %ecx;subl %ecx, (%eax);movl (%ebp), %ecx": 1,
                "pushl $;sbbl (%eax), %edx;leal (%ebp), %eax;pushl %edx;pushl %ecx": 1,
                "movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;orl (%ecx), %eax;popl %edi;pushl $-": 1,
                "movl %eax, %ecx;calll  <.text+>;movl (%esi), %eax;movl (%eax), %eax;pushl $": 2,
                "movl (%esi), %eax;movl (%eax), %eax;pushl $;pushl %edi;pushl $": 1,
                "movl (%esi), %ecx;movl (%ecx), %eax;subl (%esi), %eax;movl (%ecx), %ecx;sbbl (%esi), %ecx": 2,
                "cmpl %ebx, (%ebp);jne  <.text+>;movl %edx, (%ebp);movl (%esi), %eax;movl (%ebp), %ecx": 1,
                "decl %eax;je  <.text+>;cmpl $, %ecx;jbe  <.text+>;cmpl $, (%esi)": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %ecx, %esi;movl $, %ebx": 1,
                "pushl %ebx;leal (%esi), %ecx;movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi);calll  <.text+>;pushl $": 1,
                "subl $, %esp;pushl %esi;pushl %edi;pushl (%ebp);movl %ecx, %edi": 1,
                "pushl (%eax);calll *%esi;movl -(%ebp), %eax;subl -(%ebp), %eax;popl %edi": 1,
                "pushl %edi;movl (%eax), %edi;movl %edx, %eax;orl %edi, %eax;movl %edx, -(%ebp)": 1,
                "pushl %ebx;jne  <.text+>;movl (%esi), %eax;addl (%esi), %eax;movl (%esi), %ecx": 1,
                "leal (%esi), %ecx;movl %ebx, -(%ebp);calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl %ebx, (%esi);jne  <.text+>;pushl -(%ebp);calll *;testl %eax, %eax": 1,
                "movl (%esi), %eax;movl (%eax), %eax;cmpl $, %eax;je  <.text+>;cmpl $, %eax": 2,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "movb $, -(%ebp);calll  <.text+>;movl (%esi), %eax;movl (%eax), %eax;xorl %ecx, %ecx": 1,
                "movl %ebx, ;movl %ebx, ;xorl %edi, %edi;calll - <.text+>;leal -(%ebp), %ecx": 1,
                "cmpl %ebx, (%esi);je  <.text+>;leal -(%ebp), %ecx;calll  <.text+>;movl (%esi), %ecx": 1,
                "jmp  <.text+>;calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>": 1,
                "calll *(%eax);xorl %edi, %edi;incl %edi;movl %edi, %eax;popl %edi": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll  <.text+>;popl %esi": 1,
                "movl %eax, %ecx;popl %ebp;jmpl *(%edx);int;int": 1,
                "movl %esi, %ecx;movl %ebx, -(%ebp);calll  <.text+>;movl %eax, %ecx;calll  <.text+>": 1,
                "movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>;pushl %esi": 1,
                "movl (%esi), %eax;movl (%eax), %eax;pushl $;pushl $;pushl %ebx": 1,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl %ebx, (%esi);movl (%esi), %eax": 1,
                "movl (%esi), %ecx;pushl %eax;pushl %esi;calll *(%ecx);orl $-, -(%ebp)": 1,
                "calll  <.text+>;pushl %esi;movl %ecx, %esi;cmpl $, (%esi);je  <.text+>": 1,
                "calll  <.text+>;pushl $-;movl %esi, %ecx;calll - <.text+>;pushl $": 1,
                "movl (%eax), %eax;leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>;xorl %esi, %esi": 1,
                "je  <.text+>;pushl $;calll  <.text+>;movl $, %edi;jmp  <.text+>": 1,
                "calll  <.text+>;movl $, %edi;jmp  <.text+>;cmpw %si, (%ebp);jne  <.text+>": 1,
                "calll  <.text+>;movl $, %edi;jmp  <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "calll  <.text+>;cmpl %esi, (%ebx);je  <.text+>;pushl %edi;leal (%ebx), %ecx": 1,
                "cmpl %esi, (%ebx);movl %esi, (%ebx);movl %esi, (%ebx);movl %esi, (%ebx);je  <.text+>": 1,
                "calll  <.text+>;pushl $;movl %ebx, %ecx;calll  <.text+>;testl %eax, %eax": 1,
                "pushl %esi;pushl $;movl %ebx, %ecx;calll  <.text+>;movl %eax, %ecx": 9,
                "testl %eax, %eax;je  <.text+>;pushl $;movl %ebx, %ecx;pushl %esi": 1,
                "addl $, %edi;pushl %edi;movl %ebx, %ecx;calll - <.text+>;addl %eax, %esi": 1,
                "calll - <.text+>;leal (%ebp), %ecx;movl %eax, %esi;calll  <.text+>;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);testl %esi, %esi;je  <.text+>;cmpl $, (%esi);jne  <.text+>": 1,
                "calll *%esi;movl $, %edi;pushl %edi;movl %ebx, %ecx;calll  <.text+>": 1,
                "pushl %edi;movl %ebx, %ecx;calll  <.text+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl (%eax);calll *%esi;pushl $": 1,
                "pushl $;addl -(%ebp), %eax;movl %ebx, %ecx;pushl %eax;movl -(%ebp), %eax": 1,
                "movl %ebx, %ecx;pushl %eax;movl -(%ebp), %eax;subl -(%ebp), %eax;pushl %eax": 1,
                "pushl $;calll - <.text+>;cmpl $, %eax;jne  <.text+>;pushl $": 3,
                "movl (%ebp), %ecx;movl $, %eax;pushl %eax;movl %eax, -(%ebp);calll  <.text+>": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll *;testl %esi, %esi;jne  <.text+>;calll  <.text+>": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 4,
                "pushl $;leal (%ebp), %ecx;calll  <.text+>;pushl $;leal (%ebp), %ecx": 1,
                "movl %ecx, (%esi);movl (%eax), %ecx;addl $, %eax;movl %ecx, (%esi);pushl %eax": 2,
                "movl %edi, -(%ebp);movb $, -(%ebp);calll  <.text+>;popl %edi;jmp  <.text+>": 1,
                "calll  <.text+>;leal -(%ebp), %ecx;movl $, -(%ebp);calll  <.text+>;pushl (%ebp)": 1,
                "movl (%ebp), %edx;pushl %ebx;leal (%edx,%edx,), %ecx;shll $, %ecx;movl %ecx, %ebx": 1,
                "leal (%edx,%edx,), %ecx;shll $, %ecx;movl %ecx, %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl %ebx, %ecx;andl $, %ecx;testl %edx, %edx": 1,
                "movl %edx, %edi;movl %esi, (%ebp);andl $, -(%ebp);testl %esi, %esi;je  <.text+>": 1,
                "je  <.text+>;leal (%esi), %ecx;calll  <.text+>;orl $-, -(%ebp);addl $, %esi": 1,
                "jne  <.text+>;movl (%ebx), %eax;pushl $;cltd;popl %ecx": 1,
                "movl %esi, (%ebp);movl %esi, %eax;leal (%eax,%eax,), %eax;shll $, %eax;pushl %eax": 1,
                "movl (%ebp), %esi;movl %esi, %edx;subl %ecx, %edx;leal (%ecx,%ecx,), %ecx;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;popl %ecx;movl %eax, (%ebx)": 1,
                "jmp  <.text+>;movl (%edi), %esi;addl %esi, %eax;pushl %eax;calll - <.text+>": 1,
                "je  <.text+>;pushl (%esi);calll  <.text+>;jmp  <.text+>;calll  <.text+>": 1,
                "calll  <.text+>;jmp  <.text+>;calll  <.text+>;pushl $-;pushl %eax": 1,
                "pushl (%esi);pushl %edi;calll  <.text+>;popl %edi;popl %esi": 1,
                "notl %eax;testb $, %al;movl (%ebp), %eax;pushl %esi;pushl %edi": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;leal (%edi), %eax;pushl %eax;movl %eax, -(%ebp)": 2,
                "testl %eax, %eax;jne  <.text+>;cmpl $, -(%ebp);jne  <.text+>;leal -(%ebp), %ecx": 1,
                "jge  <.text+>;movl %eax, -(%ebp);leal -(%ebp), %ecx;movl %edi, -(%ebp);movb $, -(%ebp)": 1,
                "leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>;movl -(%ebp), %edi;cmpl -(%ebp), %edi": 2,
                "movl -(%ebp), %edi;cmpl -(%ebp), %edi;jl - <.text+>;xorl %edi, %edi;cmpl %ebx, -(%ebp)": 1,
                "subl $, %esp;leal -(%ebp), %eax;movl %esp, %ecx;movl %esp, -(%ebp);pushl %eax": 1,
                "jl - <.text+>;movl $, %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);leal (%edi), %ecx;calll - <.text+>;leal -(%ebp), %ecx;movb %bl, -(%ebp)": 1,
                "leal (%edi), %ecx;calll - <.text+>;leal -(%ebp), %ecx;movb %bl, -(%ebp);calll  <.text+>": 1,
                "xorl %eax, %eax;movl %ecx, %fs:;movl -(%ebp), %ecx;incl %eax;calll  <.text+>": 1,
                "movzwl (%ebp), %eax;pushl (%ebp);pushl %eax;pushl ;calll *": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;cmpl $, %eax;movl $, %esi;jne  <.text+>": 4,
                "pushl -(%ebp);movl %edi, %ecx;pushl %esi;calll  <.text+>;pushl %esi": 4,
                "testl %eax, %eax;je  <.text+>;leal (%esi), %eax;pushl %eax;leal (%esi), %ecx": 2,
                "xorl %eax, %eax;cmpl %eax, (%esi);movl %esi, %ecx;sete %al;pushl %eax": 4,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi;movl (%ebp), %edi": 1,
                "pushl %edi;movl (%ebp), %edi;movl %eax, -(%ebp);calll  <.text+>;movl (%eax), %ecx": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *;movl , %esi": 1,
                "movzwl -(%ebp), %eax;imull $, %eax, %eax;pushl $;pushl -(%ebp);pushl ": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl -(%ebp);pushl ": 5,
                "movl %ecx, %edi;calll  <.text+>;movl , %eax;movl (%eax), %ebx;movl %ebx, -(%ebp)": 1,
                "movl , %eax;movl (%eax), %ebx;movl %ebx, -(%ebp);leal (%edi), %esi;jmp  <.text+>": 1,
                "pushl %eax;movl %esi, %ecx;calll  <.text+>;andl $, -(%ebp);pushl %eax": 1,
                "andl $, %edx;orl %edx, %ecx;shll $, %ecx;xorl %eax, %ecx;andl $, %ecx": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movl , %eax;jmp  <.text+>": 4,
                "calll  <.text+>;movl -(%ebp), %ecx;cmpl %ecx, %eax;jne  <.text+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jne - <.text+>;movl (%ebx), %ebx;testl %ebx, %ebx": 1,
                "movl %eax, -(%ebp);jne - <.text+>;movl (%ebx), %ebx;testl %ebx, %ebx;movl %ebx, -(%ebp)": 1,
                "calll  <.text+>;cmpb $, (%esi);movl (%esi), %edi;movl $, -(%ebp);jne  <.text+>": 2,
                "jne - <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;movl (%esi), %esi": 2,
                "jne - <.text+>;cmpl %esi, -(%ebp);je  <.text+>;movl %ebx, %ecx;calll  <.text+>": 1,
                "cmpw $, (%esi);jne  <.text+>;movl $, %edi;pushl %edi;leal -(%ebp), %ecx": 1,
                "movl $, %edi;pushl %edi;leal -(%ebp), %ecx;calll  <.text+>;pushl %ebx": 1,
                "pushl %eax;leal -(%ebp), %ecx;movw $, -(%ebp);movw $, -(%ebp);calll  <.text+>": 1,
                "calll  <.text+>;movl (%eax), %eax;pushl %edi;pushl %eax;calll *": 1,
                "movb $, -(%ebp);calll  <.text+>;xorl %esi, %esi;pushl %esi;pushl -(%ebp)": 1,
                "pushl %eax;pushl $;pushl %edi;calll  <.text+>;pushl %ebx": 1,
                "calll  <.text+>;pushl -(%ebp);leal -(%ebp), %ecx;calll  <.text+>;pushl $": 2,
                "leal -(%ebp), %ecx;calll  <.text+>;cmpw %si, -(%ebp);leal -(%ebp), %ebx;je  <.text+>": 1,
                "pushl %eax;leal -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %eax;pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;pushl -(%ebp);movl (%eax), %eax;pushl %eax;calll - <.text+>": 2,
                "calll  <.text+>;pushl $;pushl $;pushl $;pushl (%edi)": 1,
                "cmpw %di, (%eax);je  <.text+>;pushl $;pushl (%eax);jmp  <.text+>": 1,
                "cmpl %edi, %eax;je  <.text+>;calll - <.text+>;movl $, (%eax);pushl (%esi)": 1,
                "movl %edi, %ecx;calll  <.text+>;pushl %esi;pushl $;movl %edi, %ecx": 1,
                "pushl $;movl %ecx, %ebx;calll  <.text+>;movl , %eax;movl (%eax), %esi": 1,
                "retl $;xorl %eax, %eax;jmp - <.text+>;int;int": 3,
                "pushl $;movl %ecx, %esi;calll  <.text+>;movl , %eax;movl (%eax), %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;movl %ebx, %ecx;calll  <.text+>;andl $, -(%ebp)": 1,
                "pushl %eax;movl %ebx, %ecx;calll  <.text+>;andl $, -(%ebp);pushl %eax": 1,
                "pushl %eax;movl %ebx, %ecx;calll  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx": 1,
                "calll  <.text+>;testl %eax, %eax;je - <.text+>;cmpb $, (%edi);movl (%edi), %eax": 1,
                "testl %eax, %eax;je  <.text+>;movl (%edi), %edi;testl %edi, %edi;jne - <.text+>": 2,
                "calll  <.text+>;leal (%esi), %edi;movl (%edi), %ecx;pushl $;calll  <.text+>": 2,
                "je  <.text+>;movl (%esi), %eax;decl %eax;je  <.text+>;decl %eax": 1,
                "pushl $;calll  <.text+>;pushl ;calll - <.text+>;movl , %eax": 2,
                "je  <.text+>;pushl $;calll  <.text+>;jmp  <.text+>;pushl (%edi)": 3,
                "calll  <.text+>;movl (%esi), %ecx;pushl %eax;calll  <.text+>;popl %esi": 2,
                "incl %eax;popl %edi;popl %esi;retl $;int": 1,
                "movl $, (%esi);movl %edi, (%esi);movl %edi, (%esi);movl $, (%esi);movl %edi, (%esi)": 1,
                "testl %eax, %eax;je  <.text+>;calll  <.text+>;movl (%eax), %ecx;calll - <.text+>": 1,
                "incl %ecx;cmpl %ecx, %esi;movl %esi, %eax;jl  <.text+>;movl %ecx, %eax": 1,
                "movl %ecx, %eax;testl %eax, %eax;jle  <.text+>;cmpl %ecx, %esi;jl  <.text+>": 1,
                "pushl %edi;movl %ecx, %esi;movl (%esi), %ecx;pushl $;calll  <.text+>": 1,
                "xorl %ebx, %ebx;incl %ebx;pushl %ebx;movl %eax, %edi;calll - <.text+>": 1,
                "je  <.text+>;calll - <.text+>;testl %eax, %eax;je  <.text+>;cmpl $, (%edi)": 1,
                "je  <.text+>;cmpl $, (%edi);je  <.text+>;movl %ebx, %ecx;jmp  <.text+>": 1,
                "xorl %ecx, %ecx;leal (%esi), %eax;movl %ecx, (%eax);movl %ecx, (%edi);cmpl $, (%eax)": 1,
                "cmpl $, (%eax);je  <.text+>;cmpl %ebx, (%edi);jne  <.text+>;movl %ebx, %eax": 1,
                "calll  <.text+>;movl %eax, %ecx;calll  <.text+>;pushl (%edi);movl %esi, %ecx": 1,
                "jne  <.text+>;calll - <.text+>;testl %eax, %eax;jne  <.text+>;pushl ": 1,
                "pushl ;calll - <.text+>;pushl %eax;jmp  <.text+>;pushl $": 1,
                "movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx;calll  <.text+>;movl %esi, %ecx": 2,
                "je  <.text+>;pushl $;pushl (%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl %edi;pushl ": 1,
                "sete %al;movl %eax, %edi;pushl %edi;pushl $;calll  <.text+>": 1,
                "calll - <.text+>;leal (%esi), %edi;movl (%edi), %ecx;pushl $;calll  <.text+>": 1,
                "movl %ecx, %esi;pushl $;pushl $;pushl $;calll - <.text+>": 1,
                "pushl %eax;pushl $;pushl (%ebp);calll  <.text+>;movl (%esi), %eax": 1,
                "pushl $;leal (%edi), %ecx;calll  <.text+>;pushl $;pushl %esi": 1,
                "pushl %ebx;pushl %edi;xorl %ebx, %ebx;incl %ebx;pushl %ebx": 1,
                "testl %eax, %eax;je  <.text+>;pushl %esi;leal (%edi), %esi;cmpl $, (%esi)": 1,
                "movl %eax, %edi;calll  <.text+>;andl $, -(%ebp);pushl $;leal -(%ebp), %ecx": 1,
                "pushl $;leal -(%ebp), %ecx;calll  <.text+>;pushl -(%ebp);movl %edi, %ecx": 3,
                "calll  <.text+>;pushl $;movl %esi, %ecx;calll  <.text+>;movl %edi, %eax": 1,
                "pushl $;pushl %ebx;movl %edi, -(%ebp);calll  <.text+>;leal (%esi), %eax": 1,
                "pushl %ebx;movl %eax, -(%ebp);calll  <.text+>;leal (%esi), %eax;pushl %eax": 1,
                "calll  <.text+>;pushl (%esi);movl -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %ecx": 1,
                "cmpl $, (%eax);je  <.text+>;movl (%edi), %eax;andl $, %eax;orl $, %eax": 1,
                "orl $, %eax;movl %eax, (%edi);movl -(%ebp), %eax;pushl (%eax);addl $, %edi": 1,
                "jne  <.text+>;pushl $;pushl %eax;pushl $;pushl %eax": 1,
                "calll  <.text+>;cmpb $, -(%ebp);je  <.text+>;pushl %edi;leal -(%ebp), %eax": 1,
                "calll  <.text+>;xorl %edi, %edi;cmpl %edi, %eax;jle  <.text+>;pushl %eax": 1,
                "xorl %eax, %eax;movw (%edi), %ax;pushl %eax;pushl $;calll *": 1,
                "movw (%edi), %ax;pushl %eax;pushl $;calll *;testl %eax, %eax": 1,
                "incl %edi;cmpw $, (%edi);jne - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpw $, (%edi);jne - <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "calll  <.text+>;leave;retl $;movl %ebx, %ecx;calll  <.text+>": 1,
                "movl %ecx, %edi;calll  <.text+>;movl %eax, %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "pushl %esi;pushl $;movl $, %esi;pushl %esi;calll  <.text+>": 1,
                "pushl $;movl $, %esi;pushl %esi;calll  <.text+>;movl %eax, %ecx": 1,
                "cmpl $-, %ecx;jne  <.text+>;cmpl $, (%eax);jne  <.text+>;movl (%esi), %ecx": 1,
                "movl (%esi), %eax;movl %eax, %edi;pushl $;pushl %eax;calll *": 1,
                "movl (%esi), %ecx;movl $, (%esi);movl (%ecx), %eax;calll *(%eax);xorl %eax, %eax": 1,
                "cmpl %eax, (%ebp);jne  <.text+>;pushl %eax;movl %esi, %ecx;calll  <.text+>": 1,
                "movl %eax, %ecx;calll - <.text+>;negl %eax;sbbl %eax, %eax;negl %eax": 1,
                "movl %ecx, %esi;pushl $;pushl $;pushl $;calll  <.text+>": 1,
                "pushl %edi;movl %ecx, %esi;incl %ebx;pushl %ebx;movl %esi, -(%ebp)": 1,
                "je  <.text+>;movl (%esi), %esi;cmpl %edi, %esi;je  <.text+>;cmpl %edi, %eax": 1,
                "pushl $;movl %esi, %ecx;calll  <.text+>;pushl %edi;jmp - <.text+>": 1,
                "pushl $;calll  <.text+>;movl (%esi), %ecx;cmpl %edi, %ecx;je  <.text+>": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl (%esi), %ecx;pushl %ebx": 1,
                "cmpl %edi, (%eax);je  <.text+>;movl (%esi), %ecx;leal (%esi), %ebx;calll - <.text+>": 1,
                "xorl %edi, %edi;movl (%esi), %ecx;calll - <.text+>;pushl %eax;leal (%esi), %ecx": 2,
                "movl %ebx, -(%ebp);calll  <.text+>;xorl %esi, %esi;cmpl %esi, (%ebp);je  <.text+>": 1,
                "movl %ebx, %ecx;calll  <.text+>;movl (%ebp), %ecx;movl %eax, (%ecx);calll - <.text+>": 1,
                "movl %ebx, %ecx;calll  <.text+>;jmp  <.text+>;calll  <.text+>;movl (%eax), %eax": 1,
                "movl %eax, (%ebp);je - <.text+>;movl (%ebx), %ebx;cmpl %esi, %ebx;je - <.text+>": 1,
                "pushl $;calll  <.text+>;movl -(%ebp), %ebx;movl %ebx, %ecx;pushl %edi": 1,
                "addl $, %ecx;pushl %ecx;movl (%ebp), %ecx;calll  <.text+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %ecx;calll  <.text+>;movl (%ebp), %eax;leave;retl $": 1,
                "leal (%esi), %ecx;movl %edi, -(%ebp);calll  <.text+>;movl (%esi), %eax;cmpl %edi, %eax": 1,
                "calll  <.text+>;movl (%esi), %ecx;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;pushl %edi;movl %esi, %ecx": 1,
                "addl $, %eax;pushl %eax;leal (%esi), %ecx;calll  <.text+>;cmpl $, (%edi)": 1,
                "pushl (%edi);calll  <.text+>;movl (%ebx), %eax;cmpl $, -(%eax);jle  <.text+>": 1,
                "movl (%esi), %eax;movl (%eax), %eax;subl %edi, %eax;je  <.text+>;decl %eax": 1,
                "pushl %edi;movl (%ebp), %edi;pushl %edi;movl %ecx, %esi;calll - <.text+>": 4,
                "pushl %eax;pushl %ebx;pushl %edi;movl %eax, (%ebp);calll  <.text+>": 1,
                "calll  <.text+>;pushl %esi;pushl -(%ebp);pushl %edi;calll  <.text+>": 1,
                "pushl %edi;calll  <.text+>;pushl %esi;pushl %ebx;pushl %edi": 1,
                "calll  <.text+>;movl , %eax;xorl %ebx, %ebx;cmpl %ebx, -(%eax);je  <.text+>": 1,
                "pushl %edi;leal (%esi), %ecx;calll  <.text+>;movl $, %edi;pushl %edi": 2,
                "pushl %eax;leal -(%ebp), %ecx;movl %ebx, -(%ebp);calll  <.text+>;pushl $": 1,
                "calll  <.text+>;leal (%esi), %ecx;calll  <.text+>;movl (%ebx), %eax;movl -(%eax), %eax": 1,
                "calll - <.text+>;pushl $;movl %esi, %ecx;calll  <.text+>;movl %eax, %ecx": 3,
                "calll *;jmp  <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);pushl -(%ebp)": 3,
                "pushl %eax;calll  <.text+>;popl %ecx;leal (%esi), %ecx;movb $, -(%ebp)": 1,
                "popl %edi;popl %esi;popl %ebx;jmp  <.text+>;int": 1,
                "pushl %edi;movl %edi, -(%ebp);movl %edi, -(%ebp);calll *;cmpl %edi, %eax": 1,
                "pushl %esi;pushl %esi;movl %esi, -(%ebp);calll *;movl %eax, %ebx": 1,
                "pushl $;pushl -(%ebp);pushl %ebx;calll *;movl %eax, %edi": 1,
                "popl %edi;leal -(%ebp), %ecx;calll  <.text+>;movl -(%ebp), %eax;popl %esi": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);leal (%ecx), %esi;movl %esi, %ecx": 2,
                "calll  <.text+>;pushl (%ebp);andl $, -(%ebp);leal (%ebp), %ecx;calll  <.text+>": 2,
                "calll  <.text+>;movl -(%ebp), %ecx;movl (%ebp), %eax;popl %edi;popl %esi": 2,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;cmpl %edi, -(%ebp);jne  <.text+>": 1,
                "pushl $;leal -(%ebp), %ecx;movl %eax, %edi;calll  <.text+>;movl %eax, -(%ebp)": 1,
                "calll  <.text+>;pushl %edi;pushl %eax;leal -(%ebp), %eax;pushl %eax": 3,
                "leal -(%ebp), %ecx;calll  <.text+>;movl %eax, %edi;pushl -(%ebp);leal -(%ebp), %ecx": 1,
                "pushl $;leal -(%ebp), %ecx;calll  <.text+>;movl %eax, %edi;leal (%ebx), %eax": 1,
                "pushl %eax;leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl , %edi": 1,
                "movl %ecx, %esi;calll - <.text+>;movl $, %edi;pushl %edi;movl %eax, %ebx": 1,
                "leal (%esi), %ecx;movb $, -(%ebp);movl %eax, -(%ebp);movw %ax, -(%ebp);movw %ax, -(%ebp)": 1,
                "calll  <.text+>;cmpl $-, %eax;jle  <.text+>;pushl %edi;pushl $": 6,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl (%esi), %eax;movl $, (%eax)": 1,
                "je  <.text+>;pushl $;addl $, %eax;pushl %eax;pushl %ebx": 1,
                "movb $, -(%ebp);movb %bl, (%esi);calll  <.text+>;pushl %edi;leal (%esi), %ecx": 1,
                "jne  <.text+>;pushl $;leal -(%ebp), %ecx;movl $, (%esi);calll  <.text+>": 1,
                "movl (%edi), %eax;movl (%esi), %ecx;movl (%eax), %edx;leal (%esi), %edi;pushl %edi": 1,
                "pushl %ecx;pushl %eax;calll *(%edx);testl %eax, %eax;movl %ebx, (%esi)": 1,
                "je  <.text+>;movl %ebx, (%ebp);movl $, (%esi);movl %ebx, (%ebp);movw (%ebp), %ax": 1,
                "pushl %eax;pushl %ecx;calll *(%edx);movl %eax, (%ebp);movl -(%ebp), %eax": 1,
                "movl %ecx, %edi;calll  <.text+>;cmpb $, (%edi);je  <.text+>;movl %edi, %ecx": 1,
                "je  <.text+>;movl %edi, %ecx;calll - <.text+>;leal -(%ebp), %edx;leal (%edi), %esi": 1,
                "movl (%eax), %edx;leal (%edi), %ebx;movl (%ebx), %ecx;pushl $;pushl %ecx": 1,
                "movl %edi, %ecx;calll - <.text+>;movl (%ebx), %ebx;movl (%edi), %eax;movl (%eax), %ecx": 1,
                "pushl %edx;pushl %eax;calll *(%ecx);movl %eax, %ebx;testl %ebx, %ebx": 1,
                "pushl %eax;calll *(%ecx);incl -(%ebp);testl %ebx, %ebx;je - <.text+>": 1,
                "pushl %edx;pushl $;pushl %eax;calll *(%ecx);cmpb %bl, (%esi)": 1,
                "popl %edi;pushl %edi;pushl %eax;calll *(%ecx);movl %ebx, -(%ebp)": 1,
                "jne  <.text+>;movl (%esi), %eax;movl (%eax), %ecx;leal (%ebp), %edx;pushl %edx": 1,
                "pushl $;leal (%esi), %ecx;movl %ebx, -(%ebp);calll - <.text+>;cmpl %ebx, (%esi)": 1,
                "calll - <.text+>;leal -(%ebp), %ecx;movb %al, -(%ebp);calll  <.text+>;cmpb %bl, -(%ebp)": 1,
                "pushl %edi;leal (%esi), %ecx;calll  <.text+>;movl (%esi), %eax;fldz": 1,
                "xorl %eax, %eax;jmp  <.text+>;movl , %eax;cmpl %ebx, -(%eax);jne  <.text+>": 1,
                "leal -(%ebp), %ecx;movl %ebx, -(%ebp);calll - <.text+>;orl $-, -(%ebp);cmpl $, %eax": 1,
                "leal -(%ebp), %ecx;calll  <.text+>;movl $, -(%ebp);calll - <.text+>;pushl %eax": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl (%edi), %edi;movl (%esi), %eax": 1,
                "pushl (%eax);calll *;xorl %eax, %eax;popl %edi;incl %eax": 1,
                "calll  <.text+>;movl (%eax), %eax;movl (%eax), %eax;addl $, %eax;leal (%esi), %ecx": 1,
                "calll  <.text+>;pushl $;leal (%esi), %ecx;movb $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movb %bl, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);movb %bl, -(%ebp);calll  <.text+>": 1,
                "movl %esi, %ecx;calll - <.text+>;movb $, -(%ebp);jmp  <.text+>;pushl $": 1,
                "calll  <.text+>;jmp  <.text+>;pushl $;calll  <.text+>;leal -(%ebp), %eax": 1,
                "leal (%esi), %eax;pushl %eax;calll *;leal (%esi), %ecx;movb $, -(%ebp)": 1,
                "addl $, %esi;pushl %eax;movl %esi, %ecx;movb $, -(%ebp);calll  <.text+>": 1,
                "pushl -(%ebp);movl %esi, %ecx;calll  <.text+>;movl $, -(%ebp);calll  <.text+>": 1,
                "movl (%ebp), %edi;pushl %edi;movl %ecx, %esi;calll  <.text+>;testl %edi, %edi": 1,
                "leal (%esi), %ecx;calll  <.text+>;popl %edi;popl %esi;popl %ebp": 1,
                "leal (%esi), %eax;pushl %eax;calll *;movl (%ebp), %ecx;xorl %eax, %eax": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);pushl $;movl %ebx, %ecx;movsl (%esi), %es:(%edi)": 1,
                "movl %eax, %ecx;calll  <.text+>;pushl %esi;pushl $;movl %ebx, %ecx": 7,
                "addl -(%ebp), %ecx;movl %ecx, -(%ebp);movl (%eax), %ecx;subl (%eax), %ecx;leal -(%ebp), %eax": 1,
                "cmpl %eax, (%esi);jne - <.text+>;pushl $;leal (%esi), %ecx;calll  <.text+>": 1,
                "pushl %ebx;movl %ecx, %ebx;leal (%ebx), %eax;pushl %eax;movl %eax, -(%ebp)": 1,
                "calll  <.text+>;pushl %eax;movl %esi, %ecx;calll - <.text+>;pushl $": 1,
                "pushl $;pushl $;movl %esi, %ecx;calll - <.text+>;leal (%edi), %esi": 1,
                "testl %eax, %eax;popl %ecx;jne - <.text+>;popl %edi;pushl (%ebx)": 1,
                "popl %ecx;popl %esi;pushl -(%ebp);calll *;popl %ebx": 1,
                "popl %esi;pushl -(%ebp);calll *;popl %ebx;leave": 1,
                "pushl %edi;pushl %eax;movl %eax, -(%ebp);calll *;andl $, -(%ebp)": 1,
                "addl $, %edi;pushl %edi;calll  <.text+>;testl %eax, %eax;popl %ecx": 1,
                "movl %eax, %edi;incl %edi;cmpl $, (%esi);popl %ecx;je  <.text+>": 1,
                "pushl (%esi);calll *%ebx;popl %ecx;addl %eax, %edi;cmpl (%esi), %edi": 1,
                "pushl (%ebx);calll  <.text+>;movl (%ebp), %eax;movl %eax, (%ebx);movl %edi, (%esi)": 1,
                "calll  <.text+>;popl %ecx;popl %ebx;calll  <.text+>;movl (%eax), %ecx": 1,
                "pushl %edi;leal (%esi), %ecx;calll  <.text+>;pushl $;pushl %esi": 1,
                "calll *;pushl (%esi);andl $, (%esi);calll *;pushl %esi": 1,
                "movl %ebx, -(%edi);addl $, %edi;decl -(%ebp);jne - <.text+>;orl $-, (%esi)": 1,
                "movl (%edx), %edi;subl %ebx, %ecx;addl %edi, %ecx;cmpl %edi, %ecx;ja  <.text+>": 1,
                "calll *;cmpl $, (%esi);jne - <.text+>;popl %edi;popl %esi": 1,
                "popl %esi;xorl %eax, %eax;popl %ebx;leave;retl": 2,
                "movl %ecx, %esi;movl %edi, -(%ebp);je  <.text+>;cmpl %edi, (%ebp);je  <.text+>": 1,
                "je  <.text+>;pushl %edi;calll *;movl (%ebx), %eax;cmpl %eax, (%ebp)": 1,
                "cmpl %eax, (%ebp);jbe  <.text+>;subl (%ebp), %eax;shll $, %esi;leal (%esi,%edi), %ecx": 1,
                "je  <.text+>;movl (%esi), %esi;pushl $;pushl $-;pushl %esi": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll *;popl %edi": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;cmpl $, %eax;jb  <.text+>": 1,
                "cmpl $-, %eax;ja  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx": 1,
                "jmp  <.text+>;movl $, %ecx;cmpl %ecx, %eax;je  <.text+>;cmpl $, %eax": 1,
                "pushl (%ebp);pushl (%ebp);calll  <.text+>;movl %eax, %edi;testl %edi, %edi": 3,
                "movl (%edi), %eax;movl %edi, %ecx;calll *(%eax);subl %eax, %ebx;jne  <.text+>": 1,
                "negw %ax;sbbl %eax, %eax;andl $-, %eax;addl $, %eax;cmpb $, (%ebp)": 1,
                "cmpb $, (%ebp);je  <.text+>;pushl $;pushl $;pushl $": 1,
                "calll - <.text+>;cmpl $, %eax;jne  <.text+>;pushl %ebx;movl (%edi), %ebx": 1,
                "cmpl $-, %ebx;jne  <.text+>;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "pushl %eax;movsl (%esi), %es:(%edi);calll  <.text+>;jmp  <.text+>;pushl ": 2,
                "popl %ebx;xorl %eax, %eax;incl %eax;jmp  <.text+>;xorl %eax, %eax": 1,
                "movl (%ebp), %esi;movl (%esi), %ebx;cmpl $-, %ebx;movl %eax, -(%ebp);pushl %edi": 1,
                "pushl $;jmp  <.text+>;decl (%ecx);pushl $;calll - <.text+>": 1,
                "subl $, %esp;movl (%ebp), %eax;andl $, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);calll - <.text+>": 1,
                "movl (%eax), %eax;pushl $;movl %eax, %ecx;calll - <.text+>;pushl $": 1,
                "pushl $;movl %esi, %ecx;calll - <.text+>;movl (%esi), %ecx;testl %ecx, %ecx": 1,
                "calll - <.text+>;pushl $;movl %esi, %ecx;calll  <.text+>;calll  <.text+>": 1,
                "andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 3,
                "testl %esi, %esi;je  <.text+>;movl (%ebp), %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;pushl %ebx;pushl -(%ebp)": 1,
                "je  <.text+>;pushl %ebx;pushl -(%ebp);movl %edi, %ecx;calll - <.text+>": 1,
                "movl %ecx, %esi;movl (%esi), %ecx;testl %ecx, %ecx;pushl %edi;je  <.text+>": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi": 3,
                "calll - <.text+>;cmpl $, -(%ebp);je  <.text+>;leal (%ebp), %eax;pushl %eax": 1,
                "pushl %eax;movl %edi, %ecx;movl $, -(%ebp);movl %ebx, -(%ebp);calll - <.text+>": 2,
                "movl %edi, %ecx;calll  <.text+>;pushl (%edi);movl %esi, %ecx;calll - <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movl (%edi), %ecx;testl %ecx, %ecx": 1,
                "calll  <.text+>;movl (%esi), %eax;testl %eax, %eax;je  <.text+>;decl %eax": 1,
                "decl %eax;movl %eax, (%esi);movl %edi, %ecx;calll  <.text+>;movl -(%ebp), %eax": 1,
                "calll  <.text+>;movl -(%ebp), %eax;popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ecx), %eax;movl %ecx, %esi;calll *(%eax);movl (%esi), %eax;movl %esi, %ecx": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 4,
                "popl %ecx;xorl %eax, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl (%ebp), %eax": 1,
                "testl %esi, %esi;pushl %edi;movl %ecx, %edi;je  <.text+>;cmpl $, %esi": 1,
                "je  <.text+>;cmpl $, %esi;movl (%ebp), %ebx;je  <.text+>;leal -(%ebp), %eax": 1,
                "pushl %esi;calll - <.text+>;movl %eax, %ebx;testl %ebx, %ebx;jne  <.text+>": 2,
                "jmp  <.text+>;xorl %ebx, %ebx;popl %edi;popl %esi;movl %ebx, %eax": 1,
                "pushl $;movl %edi, (%eax);calll  <.text+>;calll - <.text+>;addl $, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%esi), %ecx;calll  <.text+>;orl $-, -(%ebp)": 1,
                "movl %eax, %ecx;calll - <.text+>;cmpl %ebx, (%esi);movl $, %edi;je  <.text+>": 1,
                "cmpl %ebx, %ecx;movl %ebx, -(%ebp);je  <.text+>;pushl $;calll - <.text+>": 1,
                "movl %esi, %ecx;calll *(%eax);pushl (%edi);movl %esi, %ecx;movl %eax, -(%ebp)": 1,
                "movl (%edi), %ecx;cmpl %ebx, %ecx;movl %eax, -(%ebp);je  <.text+>;testb $, -(%ebp)": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl $, %eax": 1,
                "jne - <.text+>;jmp  <.text+>;testl %ebx, %ebx;je  <.text+>;leal -(%ebp), %eax": 1,
                "movl %edi, %ecx;calll - <.text+>;jmp  <.text+>;movl $, %eax;pushl $": 1,
                "jmp  <.text+>;movl (%esi), %esi;cmpl %ebx, %esi;je  <.text+>;movl (%esi), %eax": 1,
                "calll *(%eax);cmpl $, %eax;je  <.text+>;cmpl $, %eax;jbe  <.text+>": 1,
                "movl $, %eax;testl %eax, -(%ebp);je  <.text+>;movl (%ebp), %edx;testl %edx, %edx": 1,
                "testl %eax, -(%ebp);je  <.text+>;movl (%ebp), %edx;testl %edx, %edx;movl $, %esi": 1,
                "je  <.text+>;movl (%ebp), %edx;testl %edx, %edx;movl $, %esi;movl $, %ebx": 1,
                "je  <.text+>;cmpl $, %eax;movl %esi, %edx;jne  <.text+>;movl %ebx, %edx": 1,
                "jne  <.text+>;movl (%ecx), %eax;calll *(%eax);movl (%edi), %eax;testl %eax, %eax": 1,
                "movl $, %ecx;cmpl %ecx, %eax;ja  <.text+>;je  <.text+>;addl $, %eax": 1,
                "movl %ebx, %ecx;movl $, -(%ebp);calll - <.text+>;movl (%esi), %eax;movl %esi, %ecx": 1,
                "testl %eax, %eax;je  <.text+>;decl %eax;movl %eax, (%esi);jmp  <.text+>": 1,
                "calll - <.text+>;jmp  <.text+>;movl (%edi), %esi;movl (%esi), %eax;movl %esi, %ecx": 1,
                "pushl %eax;movl %ebx, %ecx;calll - <.text+>;pushl %eax;movl %ebx, %ecx": 1,
                "je  <.text+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "jne - <.text+>;movl (%edi), %edi;cmpl $-, %edi;jne  <.text+>;leal -(%ebp), %eax": 1,
                "je  <.text+>;pushl %esi;movl %ebx, %ecx;calll - <.text+>;xorl %eax, %eax": 1,
                "addl %edx, (%eax);popl %es;addl %ebx, %ebp;xorl $, %eax;popl %es": 1,
                "calll *(%eax);cmpl %edi, (%esi);je  <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "movl %eax, (%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%edi);calll *": 1,
                "calll *;cmpl %ebx, %eax;je  <.text+>;movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>;movl -(%ebp), %eax;subl %edi, %eax": 1,
                "calll  <.text+>;pushl %ebx;leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %ecx": 1,
                "pushl %ebx;leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %ecx;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;movl (%edi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;cmpl $-, %eax": 1,
                "calll *%edi;movl -(%ebp), %ecx;pushl %ebx;pushl -(%ebp);pushl (%ebp)": 1,
                "movzbl (%eax), %eax;jmpl *(,%eax,);cmpl $, -(%ebp);jne  <.text+>;pushl %esi": 1,
                "calll - <.text+>;jmp  <.text+>;movl (%esi), %ecx;cmpl (%eax), %ecx;jne - <.text+>": 1,
                "calll *(%eax);pushl %esi;movl -(%ebp), %esi;movl %esi, %ecx;calll - <.text+>": 1,
                "pushl $;pushl -(%ebp);movl %esi, %ecx;calll - <.text+>;pushl $": 2,
                "calll - <.text+>;calll - <.text+>;pushl %ebx;pushl $;pushl $": 1,
                "pushl $;popl %edi;cmpl %edi, (%eax);movl %edi, -(%ebp);jne  <.text+>": 1,
                "cmpl %edi, %eax;jl  <.text+>;movl (%esi), %esi;movl (%esi), %esi;decl %esi": 1,
                "cmpl $, %esi;jne  <.text+>;pushl %ebx;pushl $;leal -(%ebp), %ecx": 1,
                "jne  <.text+>;pushl %ebx;pushl $;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "movb $, -(%ebp);calll - <.text+>;cmpl $, %eax;jne  <.text+>;calll - <.text+>": 1,
                "popl %es;addl %ebx, %edi;popl %es;addl %ecx, (%ecx);aas": 1,
                "orb (%edx), %cl;orb (%edx), %cl;orb (%edx), %cl;orb (%edx), %cl;orl %ecx, %esp": 1,
                "pushl %esi;movl %ecx, %esi;pushl %edi;xorl %edi, %edi;xorl %ebx, %ebx": 1,
                "pushl %edi;xorl %edi, %edi;xorl %ebx, %ebx;incl %ebx;pushl $": 1,
                "calll  <.text+>;pushl %esi;leal (%ebp), %ecx;movl %eax, -(%ebp);calll  <.text+>": 1,
                "jmp  <.text+>;andw $, (%eax);addl $, %eax;pushl $;pushl %eax": 3,
                "pushl %eax;calll *%esi;popl %ecx;popl %ecx;testl %eax, %eax": 3,
                "movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;movl %ebx, (%ebp);jmp  <.text+>": 1,
                "pushl -(%ebp);leal (%ebp), %eax;pushl -(%ebp);pushl -(%ebp);pushl $": 1,
                "cmpl $, (%ebp);jne  <.text+>;cmpl $, -(%ebp);movl (%esi), %esi;jne - <.text+>": 1,
                "jmp  <.text+>;movl (%ebp), %ecx;pushl $;calll  <.text+>;xorl %eax, %eax": 2,
                "pushl $;calll  <.text+>;xorl %eax, %eax;movl -(%ebp), %ecx;popl %esi": 2,
                "calll  <.text+>;movl (%ebp), %eax;movl (%eax), %eax;xorl %esi, %esi;movl %esi, -(%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;xorl %esi, %esi;movl %esi, -(%ebp);movl $, -(%ebp)": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll  <.text+>;movl (%ebp), %ecx;leal -(%ebp), %eax": 1,
                "addl $, %esp;testl %eax, %eax;jne  <.text+>;movl (%ebp), %eax;movl (%eax), %edi": 1,
                "movl -(%ebp), %eax;leal (%edi), %esi;pushl (%esi);movl %eax, -(%ebp);calll *": 1,
                "calll  <.text+>;movl -(%ebp), %eax;cmpw $, (%eax);jne  <.text+>;pushl %ebx": 1,
                "pushl %eax;movb $, -(%ebp);calll  <.text+>;movl -(%ebp), %ecx;pushl %edi": 1,
                "pushl (%ebp);movb $, -(%ebp);calll - <.text+>;movl %eax, -(%ebp);leal -(%ebp), %ecx": 1,
                "cmpl %esi, -(%ebp);jne - <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;calll  <.text+>": 1,
                "calll *;leal (%esi), %ecx;calll  <.text+>;leal (%esi), %ecx;movb $, -(%ebp)": 1,
                "movl %esp, %ebp;pushl (%ebp);calll  <.text+>;xorl %eax, %eax;popl %ebp": 1,
                "xorl %eax, %eax;cmpl %eax, (%esi);popl %esi;setne %al;retl": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %esp, -(%ebp);je  <.text+>": 1,
                "xorl %esi, %esi;incl %esi;orl $-, -(%ebp);calll  <.text+>;movl %esi, %eax": 1,
                "incl %esi;orl $-, -(%ebp);calll  <.text+>;movl %esi, %eax;jmp  <.text+>": 1,
                "leal (%esi), %edx;pushl $;popl %ecx;xorl %eax, %eax;movl %edx, %edi": 1,
                "movl (%ebp), %ebx;movzwl %bx, %edi;pushl $;pushl %edi;calll  <.text+>": 1,
                "movl %esi, (%esi);movl $, (%esi);movl %esi, %eax;popl %esi;popl %ebx": 1,
                "movl $, %eax;calll  <.text+>;subl $, %esp;pushl %esi;leal -(%ebp), %ecx": 1,
                "pushl %edi;calll - <.text+>;movl %eax, %ebx;movl (%esi), %eax;testl %eax, %eax": 1,
                "calll - <.text+>;movl %eax, %ebx;movl (%esi), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl (%ebp), %edi;pushl %edi;pushl %ebx;pushl (%ebp);movl %ecx, %esi": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl (%esi), %eax;cmpl %eax, (%ebx)": 1,
                "je  <.text+>;pushl %eax;calll *;cmpl %eax, (%ebx);jne  <.text+>": 1,
                "negl %eax;sbbl %eax, %eax;negl %eax;decl %eax;movl %eax, (%edi)": 1,
                "calll  <.text+>;testl %eax, %eax;movl (%esi), %esi;jne  <.text+>;testl %esi, %esi": 1,
                "movl (%esi), %esi;jne  <.text+>;testl %esi, %esi;je  <.text+>;movl (%esi), %esi": 1,
                "decl %esi;popl %es;addl %edx, %edi;decl %esi;popl %es": 1,
                "calll  <.text+>;testl %eax, %eax;je  <.text+>;movl (%esi), %ecx;addl $, %ecx": 1,
                "pushl $;pushl %ecx;movl %eax, %ecx;calll - <.text+>;xorl %eax, %eax": 1,
                "pushl %ecx;movl %eax, %ecx;calll - <.text+>;xorl %eax, %eax;incl %eax": 1,
                "pushl $;pushl $;pushl $;pushl %ebx;calll *": 1,
                "incl %eax;addl $, %ecx;cmpl %edx, %eax;jl - <.text+>;orl $-, %eax": 1,
                "movl (%ecx,%eax,), %eax;movl (%ebp), %edx;leal (%eax), %ecx;movl (%ecx), %eax;movl %edx, (%ecx)": 2,
                "movl %edx, (%ecx);jmp  <.text+>;xorl %eax, %eax;popl %ebp;retl $": 1,
                "testl %eax, %eax;jle  <.text+>;movl (%esi), %ecx;leal (%ecx,%eax,), %edx;subl $, %edx": 1,
                "movl (%eax,%edi,), %ecx;movl (%ecx), %eax;calll *(%eax);incl %edi;cmpl (%esi), %edi": 1,
                "movl %ebx, %ecx;movl %edi, -(%ebp);movl $, (%esi);calll  <.text+>;leal (%esi), %ecx": 1,
                "movl %edi, (%eax);movl $, (%eax);pushl (%ebp);movl %ebx, %ecx;movb $, -(%ebp)": 1,
                "leal (%esi), %edx;movl %edi, (%esi);pushl $;xorl %eax, %eax;popl %ecx": 1,
                "movl (%eax), %eax;andl $, (%esi);movl -(%ebp), %ecx;movl %eax, (%esi);movzwl (%ebp), %eax": 1,
                "je  <.text+>;cmpl $, %eax;jne  <.text+>;pushl %esi;pushl $": 1,
                "pushl (%edi);calll *;testl %eax, %eax;je  <.text+>;xorl %eax, %eax": 1,
                "pushl %ebx;calll  <.text+>;testl %eax, %eax;jne  <.text+>;testl %edi, %edi": 1,
                "calll - <.text+>;movl %eax, %ecx;calll - <.text+>;movl %esi, %ecx;calll - <.text+>": 1,
                "jne  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>;movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "calll *;andb $-, (%esi);movl %eax, %edi;calll  <.text+>;cmpl %ebx, %edi": 1,
                "cmpl $-, %edi;jne  <.text+>;andl $-, (%esi);orl $-, (%esi);testb $, (%esi)": 1,
                "pushl %ebx;pushl %ebx;pushl %ebx;movl %esi, %ecx;calll  <.text+>": 1,
                "cmpl %ebx, -(%ebp);popl %ebx;je  <.text+>;pushl $;pushl -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ecx), %eax;testl %eax, %eax;jne  <.text+>": 1,
                "xorl %ebx, %ebx;leal -(%ebp), %ecx;movl %ebx, -(%ebp);calll  <.text+>;pushl %ebx": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;testl %eax, %eax;je  <.text+>": 1,
                "calll *;movl -(%ebp), %esi;xorl -(%ebp), %esi;calll *;xorl %eax, %esi": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movw %ss, -(%ebp);movw %cs, -(%ebp)": 1,
                "leal (%ebp), %eax;movl %eax, -(%ebp);leal (%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl $": 1,
                "cmpw $, (%eax);jne  <.text+>;movl (%eax), %ecx;addl %eax, %ecx;cmpl $, (%ecx)": 1,
                "movl (%eax), %ecx;addl %eax, %ecx;cmpl $, (%ecx);jne  <.text+>;movzwl (%ecx), %eax": 1,
                "movl %ecx, (%eax);calll *;movl , %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "pushl ;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);pushl $;pushl $;calll  <.text+>;addl $, %esp": 1,
                "movl %esi, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>;pushl %esi;calll *": 1,
                "testb $, (%ebp);je  <.text+>;pushl %esi;calll - <.text+>;popl %ecx": 1,
                "popl %esi;jmp  <.text+>;movl %edi, %ecx;calll  <.text+>;testb $, (%ebp)": 1,
                "pushl %edi;calll - <.text+>;popl %ecx;movl %edi, %eax;popl %edi": 1,
                "decl (%ebp);js  <.text+>;movl (%ebp), %ecx;subl (%ebp), %ecx;movl %ecx, (%ebp)": 1,
                "retl;movl -(%ebp), %esp;jmp - <.text+>;calll  <.text+>;int": 1,
                "movl -(%ebp), %esp;jmp - <.text+>;calll  <.text+>;int;int": 1,
                "decl (%ebp);js  <.text+>;subl %esi, (%ebp);movl (%ebp), %ecx;calll *(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "int;int;cmpl $, %eax;jae  <.text+>;negl %eax": 1,
                "testl %eax, (%eax);xchgl %esp, %eax;movl (%eax), %eax;pushl %eax;retl": 1,
                "pushl %ecx;leal (%esp), %ecx;subl $, %ecx;subl $, %eax;testl %eax, (%ecx)": 1,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "movl %eax, %ebx;movl (%esp), %ecx;movl (%esp), %edx;movl (%esp), %eax;shrl %ebx": 1,
                "rcrl %ecx;shrl %edx;rcrl %eax;orl %ebx, %ebx;jne - <.text+>": 1,
                "mull (%esp);movl %eax, %ecx;movl (%esp), %eax;mull %esi;addl %ecx, %edx": 2,
                "decl %esi;xorl %edx, %edx;movl %esi, %eax;decl %edi;jne  <.text+>": 1,
                "decl %edi;jne  <.text+>;negl %edx;negl %eax;sbbl $, %edx": 1,
                "popl %edi;retl $;int;int;int": 1,
                "pushl %esi;pushl %edi;pushl $;pushl $;pushl -(%ebp)": 1,
                "jbe  <.text+>;leal -(%ebp), %ecx;pushl %ecx;pushl %edi;pushl %eax": 1,
                "incl %eax;cmpl %eax, (%ebp);movl %eax, -(%ebp);jmp - <.text+>;notl %eax": 1,
                "je  <.text+>;cmpl $, (%ebp);jne  <.text+>;pushl -(%ebp);pushl (%ebp)": 1,
                "movl %eax, %edi;testl %edi, %edi;je  <.text+>;cmpl $, %edi;jne  <.text+>": 1,
                "pushl (%ebp);andl $-, %eax;incl %ebx;orl %ebx, %eax;pushl %eax": 1,
                "testl %eax, %eax;je  <.text+>;pushl %esi;pushl (%ebp);pushl (%ebp)": 1,
                "pushl %ebx;pushl $;pushl $;pushl %esi;pushl %edi": 4,
                "pushl %eax;movl $, %esi;pushl %ebx;movl %esi, -(%ebp);movl $, -(%ebp)": 2,
                "movl $, -(%ebp);movsl (%esi), %es:(%edi);calll  <.text+>;testl %eax, %eax;popl %edi": 2,
                "xorl %esi, %esi;cmpl %esi, %ecx;movl $, %ebx;movl %ecx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl $, %eax;calll - <.text+>;movl , %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;movl , %eax;pushl %ebx;pushl %esi;movl %eax, -(%ebp)": 1,
                "pushl %ebx;pushl $;movsl (%esi), %es:(%edi);popl %esi;pushl %esi": 1,
                "pushl %eax;pushl %ebx;pushl ;movl $, -(%ebp);movb $, -(%ebp)": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;cmpl %ebx, -(%ebp);movl $, %ecx": 2,
                "movl %esi, -(%ebp);je  <.text+>;leal -(%ebp), %ebx;decl -(%ebp);leal -(%ebp), %ecx": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl ;calll  <.text+>": 11,
                "pushl %eax;pushl %ebx;pushl ;calll  <.text+>;testl %eax, %eax": 5,
                "addl $, %esp;movb $, -(%ebp);movb -(%ebp), %al;popl %ebx;movl -(%ebp), %ecx": 1,
                "pushl $;leal -(%ebp), %esi;leal -(%ebp), %edi;leal -(%ebp), %eax;movsl (%esi), %es:(%edi)": 1,
                "calll - <.text+>;testb %al, %al;popl %edi;je  <.text+>;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;xorl %edx, %edx;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "pushl ;calll  <.text+>;testl %eax, %eax;jne  <.text+>;cmpl %eax, -(%ebp)": 2,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;cmpl %eax, -(%ebp);movl $, %ecx": 2,
                "jne  <.text+>;xorl %ebx, %ebx;incl %ebx;calll - <.text+>;cmpl $, -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;xorl %ebx, %ebx;cmpl %ebx, -(%ebp);je - <.text+>": 1,
                "je - <.text+>;movl -(%ebp), %esi;calll - <.text+>;movl -(%ebp), %ecx;popl %edi": 1,
                "movl , %eax;pushl %esi;xorl %esi, %esi;pushl %esi;pushl $": 3,
                "pushl %edi;leal -(%ebp), %edi;pushl %edi;calll - <.text+>;incl %esi": 1,
                "xorl %ecx, %ecx;testl %edx, %edx;pushl %esi;jle  <.text+>;movl , %eax": 1,
                "cmpl (%ebp), %esi;je  <.text+>;incl %ecx;cmpl %edx, %ecx;jl - <.text+>": 1,
                "xorl %eax, %eax;popl %esi;popl %ebp;retl $;movl (%ebp), %edx": 1,
                "popl %ebp;retl $;movl (%ebp), %edx;movl %eax, (%edx);movl (%ebp), %eax": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);movl (%ebp), %eax;movl %ecx, (%eax);xorl %eax, %eax": 1,
                "pushl %edi;calll *%esi;popl %edi;popl %esi;leave": 1,
                "calll - <.text+>;pushl %esi;calll - <.text+>;popl %ecx;popl %esi": 1,
                "popl %ecx;popl %esi;pushl %edi;calll *;popl %edi": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl , %edi;movl $, %esi": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;je  <.text+>;movl -(%ebp), %ecx": 1,
                "movl (%ecx), %eax;testl %eax, %eax;leal (%eax), %edx;movl %edx, (%ecx);jne  <.text+>": 1,
                "movl $, -(%ebp);pushl %esi;calll *%ebx;cmpl $, -(%ebp);jne  <.text+>": 1,
                "jne  <.text+>;pushl $;calll *;jmp - <.text+>;popl %edi": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;xorl %esi, %esi;cmpl %esi, %ebx": 5,
                "jne  <.text+>;leal -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl %esi, %eax;jne  <.text+>": 1,
                "leal -(%ebp), %ecx;movl %ecx, -(%ebp);cmpl %esi, %eax;jne  <.text+>;leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);cmpl %esi, %eax;jne  <.text+>;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "rep  stosl %eax, %es:(%edi);movl %esi, %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl %esi, %ecx": 10,
                "rep  stosl %eax, %es:(%edi);movl $, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 3,
                "cmpl %edi, %ebx;jne  <.text+>;cmpl $, -(%ebp);je  <.text+>;cmpl $, -(%ebp)": 1,
                "movl $, -(%ebp);leal -(%ebp), %edi;movl %esi, %ecx;leal -(%ebp), %esi;rep  movsl (%esi), %es:(%edi)": 3,
                "pushl -(%ebp);pushl ;calll  <.text+>;movl %eax, %ebx;cmpl %edi, %ebx": 4,
                "cmpl $, -(%ebp);jne - <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "cmpl -(%ebp), %eax;jb - <.text+>;pushl -(%ebp);calll - <.text+>;xorl %edi, %edi": 1,
                "cmpl %ebx, (%ebp);jne  <.text+>;pushl %edi;pushl %ebx;pushl $": 1,
                "sbbl %eax, %eax;incl %eax;movl %eax, (%ebp);movl %edi, (%ecx);jmp  <.text+>": 1,
                "incl %eax;movl %eax, (%ebp);movl %edi, (%ecx);jmp  <.text+>;movl (%ebp), %eax": 1,
                "jne  <.text+>;cmpl $, -(%ebp);jne  <.text+>;cmpl $, -(%ebp);jne - <.text+>": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;pushl $;calll  <.text+>;popl %ecx": 1,
                "cmpl %esi, %eax;popl %ecx;movl %eax, -(%ebp);jne  <.text+>;pushl $": 1,
                "movl %eax, -(%ebp);je  <.text+>;movl -(%ebp), %edi;testl %edi, %edi;je  <.text+>": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jne  <.text+>;cmpl $, -(%ebp);je  <.text+>": 1,
                "pushl ;calll  <.text+>;cmpl $, %eax;movl %eax, -(%ebp);jne  <.text+>": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;popl %ecx;popl %ecx": 2,
                "movl $, -(%ebp);jmp  <.text+>;pushl $;pushl $;leal -(%ebp), %ecx": 1,
                "jne  <.text+>;cmpl $, -(%ebp);jne  <.text+>;pushl (%ebp);leal -(%ebp), %eax": 3,
                "subl %eax, (%ebp);addl $, %esp;pushl -(%ebp);pushl $;pushl (%ebp)": 1,
                "pushl $;calll  <.text+>;popl %ecx;pushl %eax;pushl %edi": 1,
                "calll - <.text+>;movl -(%ebp), %eax;popl %edi;movl -(%ebp), %ecx;popl %esi": 1,
                "pushl $;popl %eax;jmp  <.text+>;cmpl %edi, %ebx;movl $, %eax": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);je  <.text+>;movl -(%ebp), %eax": 1,
                "je  <.text+>;movw %di, (%eax);leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "cmpl $, -(%ebp);jne  <.text+>;movl %esi, %ecx;leal -(%ebp), %esi;leal -(%ebp), %edi": 2,
                "cmpl $, %eax;jne  <.text+>;pushl -(%ebp);calll - <.text+>;movl -(%ebp), %eax": 1,
                "popl %ebx;jmp  <.text+>;pushl %edi;pushl $;movl $, -(%ebp)": 1,
                "xorl %eax, %eax;rep  stosl %eax, %es:(%edi);pushl %esi;movl %edx, %ecx;andl $, %ecx": 1,
                "testl %ebx, %ebx;jne  <.text+>;cmpl $, -(%ebp);jne  <.text+>;leal -(%ebp), %eax": 2,
                "pushl ;calll  <.text+>;incl %esi;addl $, %edi;cmpl -(%ebp), %esi": 1,
                "addl $, %edi;cmpl -(%ebp), %esi;movl %eax, %ebx;jb - <.text+>;jmp  <.text+>": 1,
                "movl %eax, %ebx;jb - <.text+>;jmp  <.text+>;pushl $;popl %ebx": 1,
                "movl , %eax;movl (%ebp), %edx;pushl %ebx;pushl %esi;pushl %edi": 1,
                "pushl -(%ebp);pushl %esi;pushl ;calll  <.text+>;testl %eax, %eax": 1,
                "jne  <.text+>;xorl %edi, %edi;cmpl %esi, -(%ebp);jbe  <.text+>;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movw $, %si": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movw $, %si;pushl -(%ebp)": 1,
                "je  <.text+>;cmpl $, -(%ebp);je  <.text+>;cmpl %eax, -(%ebp);je  <.text+>": 1,
                "movl -(%ebp), %ecx;calll - <.text+>;leave;retl $;int": 6,
                "subl $, %esp;pushl %edi;xorl %edi, %edi;cmpl %edi, (%ebp);je  <.text+>": 1,
                "pushl $;pushl %edi;pushl %edi;pushl $;pushl (%ebp)": 1,
                "popl %esi;movl %ebx, %eax;popl %ebx;jmp  <.text+>;pushl $": 1,
                "pushl %esi;addl $, %edx;pushl %edi;pushl $;popl %ecx": 1,
                "leal (%ebx), %edi;movl %edx, %esi;xorl %eax, %eax;rep  cmpsl %es:(%edi), (%esi);je  <.text+>": 4,
                "calll - <.text+>;movl %eax, %ebx;testl %ebx, %ebx;jne - <.text+>;jmp  <.text+>": 7,
                "movl %eax, %ebx;testl %ebx, %ebx;jne - <.text+>;jmp  <.text+>;calll - <.text+>": 1,
                "jmp  <.text+>;calll - <.text+>;movl (%ebp), %esi;pushl %esi;leal (%ebx), %eax": 1,
                "leal (%ebx), %eax;pushl %eax;calll  <.text+>;addl $, %ebx;pushl %ebx": 1,
                "pushl ;calll  <.text+>;testl %eax, %eax;je  <.text+>;cmpl $, ": 1,
                "pushl -(%ebp);movl $, -(%ebp);pushl %ebx;movl %edi, -(%ebp);calll  <.text+>": 2,
                "testl %eax, %eax;jne  <.text+>;incl %edi;addl $, %esi;cmpl -(%ebp), %edi": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <.text+>;pushl %esi": 3,
                "calll - <.text+>;cmpl %esi, %eax;je  <.text+>;pushl $;popl %ecx": 2,
                "addl $, -(%ebp);cmpl -(%ebp), %eax;jb - <.text+>;popl %edi;movl -(%ebp), %ecx": 3,
                "jb - <.text+>;popl %edi;movl -(%ebp), %ecx;popl %esi;popl %ebx": 3,
                "popl %ebx;calll - <.text+>;leave;retl;int": 12,
                "movl %eax, %ebx;testl %ebx, %ebx;jne - <.text+>;jmp  <.text+>;movl %edx, -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <.text+>;testl %ebx, %ebx;jne  <.text+>;pushl -(%ebp)": 2,
                "testl %ebx, %ebx;jne  <.text+>;pushl -(%ebp);calll - <.text+>;movl %eax, %ebx": 3,
                "jne  <.text+>;calll - <.text+>;jmp  <.text+>;testl %ebx, %ebx;jne  <.text+>": 2,
                "popl %edi;popl %esi;movl -(%ebp), %eax;popl %ebx;leave": 1,
                "movl (%ebp), %edi;movl (%ebp), %ebx;movl %eax, %edx;testl %edx, %edx;je  <.text+>": 1,
                "movl %eax, %edx;testl %edx, %edx;jne - <.text+>;testl %esi, %esi;jne  <.text+>": 1,
                "calll - <.text+>;movl %eax, %edx;testl %edx, %edx;jne - <.text+>;calll - <.text+>": 2,
                "testl %ebx, %ebx;jne  <.text+>;calll - <.text+>;jmp  <.text+>;testl %ebx, %ebx": 1,
                "cmpl $, (%ebp);je  <.text+>;pushl %ebx;calll - <.text+>;calll - <.text+>": 1,
                "popl %ecx;leal -(%ebp), %eax;pushl %eax;calll - <.text+>;calll - <.text+>": 1,
                "popl %ecx;cmpl $, (%ebx);je  <.text+>;pushl $;leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;xorw %ax, %ax;popl %ebx;calll - <.text+>;leave": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);je  <.text+>": 1,
                "calll *%edi;popl %ecx;movl -(%ebp), %ecx;cmpl (%ecx), %eax;leal -(%ebp), %eax": 1,
                "movl $, %eax;calll - <.text+>;movl , %eax;pushl %ebx;pushl %edi": 2,
                "calll - <.text+>;pushl $;calll - <.text+>;movl %eax, %edx;xorl %eax, %eax": 1,
                "jne  <.text+>;pushl %esi;leal -(%ebp), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "cmpl %eax, -(%ebp);jle  <.text+>;leal -(%ebp), %eax;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;leal -(%ebp), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "calll - <.text+>;xorl %eax, %eax;pushl %eax;pushl $-;pushl %eax": 1,
                "movl $, %esi;pushl %esi;pushl ;calll  <.text+>;movl %eax, %ecx": 2,
                "jne  <.text+>;calll - <.text+>;xorl %eax, %eax;cmpl $, -(%ebp);setne %al": 1,
                "pushl (%ebp);pushl (%ebp);pushl $;pushl (%ebp);pushl ": 1,
                "pushl ;calll  <.text+>;movl %eax, %edx;movl %edx, %eax;popl %ebp": 1,
                "cmpl %eax, -(%ebp);je  <.text+>;pushl %edi;movl $, %ecx;leal -(%ebp), %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;calll  <.text+>;movl -(%ebp), %ecx": 2,
                "movl %ebx, -(%ebp);jbe  <.text+>;leal -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %ebx": 2,
                "leal -(%ebp), %esi;movl %esi, -(%ebp);movl -(%ebp), %ebx;pushl %esi;calll - <.text+>": 3,
                "jne  <.text+>;pushl $;calll *;movl %eax, %ebx;testl %ebx, %ebx": 4,
                "pushl %eax;movsl (%esi), %es:(%edi);calll *;popl %ecx;popl %ecx": 4,
                "movsl (%esi), %es:(%edi);calll *;popl %ecx;popl %ecx;pushl $": 3,
                "movl -(%ebp), %eax;addl $, %esi;cmpl -(%ebp), %eax;movl %esi, -(%ebp);jb - <.text+>": 3,
                "cmpl -(%ebp), %eax;movl %esi, -(%ebp);jb - <.text+>;jmp  <.text+>;movl %esi, -(%ebp)": 1,
                "movl %ecx, -(%ebp);leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx": 3,
                "movl %eax, -(%ebp);pushl -(%ebp);movl -(%ebp), %ebx;calll - <.text+>;testl %eax, %eax": 1,
                "pushl %eax;pushl -(%ebp);movl $, -(%ebp);pushl %ebx;movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl (%ebp), %edi": 2,
                "pushl %ebx;pushl -(%ebp);calll  <.text+>;calll - <.text+>;movl -(%ebp), %ecx": 1,
                "pushl %edi;leal -(%ebp), %ebx;xorl %eax, %eax;movl $, %ecx;leal -(%ebp), %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl -(%ebp);movl $, -(%ebp)": 2,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);incl -(%ebp);movl -(%ebp), %eax;addl $, %ebx": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;leal -(%ebp), %eax;movl %edx, %edi;pushl %eax": 1,
                "leal -(%ebp), %esi;calll - <.text+>;cmpl $, %eax;jne  <.text+>;pushl $": 1,
                "pushl %eax;pushl -(%ebp);movl $, -(%ebp);movl $, -(%ebp);calll  <.text+>": 1,
                "movl $, -(%ebp);jne  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %eax;xorl %esi, %esi;leal -(%ebp), %eax;pushl %eax;pushl %esi": 4,
                "movl $, %eax;calll - <.text+>;subl $, %esp;movl , %eax;pushl %esi": 2,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;xorl %esi, %esi;leal -(%ebp), %eax": 3,
                "pushl %edi;pushl -(%ebp);movl %esi, -(%ebp);calll *;jmp  <.text+>": 3,
                "leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %ecx;movl %ecx, %fs:;movl -(%ebp), %ecx": 1,
                "jne  <.text+>;cmpl %esi, ;je  <.text+>;movl -(%ebp), %ecx;movl %edi, -(%ebp)": 1,
                "pushl %eax;movl %esi, -(%ebp);calll - <.text+>;cmpl %edi, %eax;jne  <.text+>": 1,
                "popl %ecx;movl %eax, %edi;movl %ebx, %esi;xorl %edx, %edx;rep  cmpsl %es:(%edi), (%esi)": 2,
                "cmpw $, %ax;jne  <.text+>;movzwl (%ebx), %eax;jmp  <.text+>;pushl $": 1,
                "movl (%esi), %eax;cmpl %ecx, %eax;ja  <.text+>;jne  <.text+>;movl (%esi), %eax": 1,
                "movl %esi, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);je  <.text+>;cmpl %ecx, %esi;je  <.text+>": 1,
                "testl %edi, %edi;popl %ecx;movl %edi, -(%ebp);je  <.text+>;movl $, -(%ebp)": 1,
                "pushl %eax;pushl ;calll  <.text+>;movl %eax, %ebx;jmp  <.text+>": 2,
                "movl -(%ebp), %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);jne  <.text+>;pushl $": 1,
                "testl %ecx, %ecx;jbe - <.text+>;movl -(%ebp), %ecx;subl %eax, %ecx;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax;addl %edi, %eax": 1,
                "popl %ebx;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %eax;andl %ecx, (%eax);jmp  <.text+>;cmpl $, %ebx": 1,
                "pushl -(%ebp);calll *;popl %ecx;movl %ebx, %eax;jmp  <.text+>": 1,
                "movl (%ebp), %eax;movl %edx, (%eax);movl (%ebp), %eax;movl %edx, (%eax);movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %edx, (%eax);movl (%ebp), %eax;movl %edx, (%eax);jmp  <.text+>": 1,
                "je  <.text+>;pushl %ebx;calll - <.text+>;movl %eax, %ebx;cmpl %edx, %ebx": 3,
                "calll - <.text+>;movl %eax, %ebx;cmpl %edx, %ebx;jne - <.text+>;jmp  <.text+>": 3,
                "jmp  <.text+>;movl (%ebp), %eax;movl %edx, (%eax);movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "movl $, (%eax);popl %edi;popl %esi;calll - <.text+>;movl %ebx, %eax": 1,
                "movl (%ebp), %edi;jmp  <.text+>;pushl %edi;pushl %esi;calll - <.text+>": 1,
                "pushl %esi;calll - <.text+>;movl (%ebp), %esi;jmp  <.text+>;pushl (%ebp)": 1,
                "leave;retl $;movl -(%ebp), %esi;pushl $;addl $, %esi": 1,
                "addl $, %eax;movl %ecx, -(%ebp);movl %eax, -(%ebp);pushl %ebx;calll - <.text+>": 1,
                "calll - <.text+>;pushl -(%ebp);calll - <.text+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "je  <.text+>;movl -(%ebp), %eax;cmpl %eax, (%ebx);je  <.text+>;pushl %ebx": 1,
                "testl %ebx, %ebx;jne - <.text+>;testl %ebx, %ebx;jne - <.text+>;calll  <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;pushl %esi": 2,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;pushl %ebx;calll - <.text+>": 2,
                "jne  <.text+>;pushl %ebx;calll - <.text+>;movl %eax, %ebx;testl %ebx, %ebx": 3,
                "popl %esi;calll - <.text+>;movl %ebx, %eax;popl %ebx;leave": 2,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;calll - <.text+>;movl , %eax": 1,
                "jmp  <.text+>;pushl %ebx;leal (%edi), %eax;pushl %eax;calll  <.text+>": 5,
                "leal (%edi), %eax;pushl %eax;calll  <.text+>;pushl %ebx;calll *%esi": 5,
                "pushl $;calll  <.text+>;pushl %edi;calll *%esi;popl %ecx": 4,
                "calll  <.text+>;pushl %edi;calll *%esi;popl %ecx;calll - <.text+>": 4,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;pushl %edx;pushl (%ebp)": 1,
                "pushl %edx;pushl (%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "pushl %esi;leal -(%ebp), %eax;pushl $;pushl %eax;calll - <.text+>": 1,
                "calll - <.text+>;pushl -(%ebp);pushl $;pushl $;calll  <.text+>": 1,
                "pushl $;pushl $;calll  <.text+>;orl $-, -(%ebp);addl $, %esp": 1,
                "jne  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "xorw %ax, %ax;movl -(%ebp), %ecx;popl %edi;movl %ecx, %fs:;movl -(%ebp), %ecx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx)": 4,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;incl -(%ebp);movl -(%ebp), %eax": 3,
                "movl %eax, -(%ebp);movl $, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);xorl %edi, %edi": 2,
                "pushl %eax;movl %edx, %esi;leal -(%ebp), %eax;pushl %eax;leal (%esi), %eax": 2,
                "movl %edx, %esi;leal -(%ebp), %eax;pushl %eax;leal (%esi), %eax;pushl %eax": 2,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movl %ebx, -(%ebp)": 3,
                "movl $, -(%ebp);calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl $": 3,
                "movsl (%esi), %es:(%edi);leal (%edx), %edi;leal -(%ebp), %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);andl %eax, (%edx);andl %eax, (%edx)": 2,
                "andl %eax, (%edx);andl %eax, (%edx);orl $-, (%edx);orl $-, (%edx);leal -(%ebp), %eax": 2,
                "calll - <.text+>;movl -(%ebp), %esi;incl -(%ebp);movl -(%ebp), %eax;addl $, -(%ebp)": 2,
                "pushl ;leal (%ebp), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "xorl %ebx, %ebx;cmpl %esi, -(%ebp);jbe  <.text+>;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "rep  cmpsl %es:(%edi), (%esi);je  <.text+>;addl $, -(%ebp);incl %ebx;cmpl -(%ebp), %ebx": 1,
                "jmp  <.text+>;movl -(%ebp), %edi;shll $, %ebx;leal -(%ebp,%ebx), %esi;movsl (%esi), %es:(%edi)": 1,
                "pushl %edi;movl $, %esi;pushl %ebx;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %ecx;cmpl -(%ebp), %ecx;jae  <.text+>;xorl %eax, %eax;movl $, %ecx": 1,
                "cmpl $, -(%ebp);jne  <.text+>;cmpl $, -(%ebp);jne  <.text+>;pushl $": 1,
                "incl -(%ebp);addl $, -(%ebp);testl %eax, %eax;je - <.text+>;incl -(%ebp)": 1,
                "addl $, -(%ebp);testl %eax, %eax;je - <.text+>;incl -(%ebp);addl $, -(%ebp)": 1,
                "movl %edi, ;xorl %esi, %esi;cmpl %edi, %ebx;je  <.text+>;leal -(%ebp), %ecx": 1,
                "movl -(%ebp), %eax;movl %ecx, %fs:;leave;retl $;int": 1,
                "pushl %ecx;leal (%ebp), %ecx;pushl %ecx;pushl %eax;calll - <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp);jne  <.text+>;movl (%ebp), %eax": 1,
                "je  <.text+>;addl $, %eax;jmp - <.text+>;movl -(%ebp), %eax;jmp  <.text+>": 1,
                "calll - <.text+>;orl $, -(%ebp);pushl %eax;leal -(%ebp), %eax;pushl %eax": 7,
                "leal -(%ebp), %ecx;calll - <.text+>;cmpb $, -(%ebp);jne  <.text+>;orl $-, -(%ebp)": 1,
                "cmpb $, -(%ebp);jne  <.text+>;orl $-, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>": 1,
                "jb - <.text+>;leal (%edi), %esi;subl $, %esp;movl %esp, %edi;movsl (%esi), %es:(%edi)": 1,
                "je  <.text+>;xorl %edi, %edi;pushl %edi;pushl $;popl %esi": 1,
                "pushl %eax;pushl -(%ebp);movl $, %edi;pushl ;movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);pushl ;movl %esi, -(%ebp);calll  <.text+>;testl %eax, %eax": 1,
                "jbe  <.text+>;leal -(%ebp), %esi;pushl $;pushl $;leal -(%ebp), %eax": 1,
                "pushl %edi;pushl %eax;calll - <.text+>;movl %eax, %esi;testl %esi, %esi": 3,
                "jne  <.text+>;calll - <.text+>;pushl %edi;pushl %eax;calll - <.text+>": 2,
                "pushl %edi;calll - <.text+>;calll - <.text+>;movl %eax, %esi;calll - <.text+>": 4,
                "jmp  <.text+>;movl , %ecx;movl %esi, %edx;calll - <.text+>;addl %eax, -(%ebp)": 2,
                "pushl %ebx;calll - <.text+>;pushl %ebx;addl $, %eax;pushl %eax": 1,
                "calll - <.text+>;leal (%ebx), %eax;pushl %eax;calll  <.text+>;calll - <.text+>": 3,
                "pushl %eax;pushl ;calll  <.text+>;pushl %ebx;movl %eax, %esi": 3,
                "calll  <.text+>;pushl %ebx;movl %eax, %esi;calll *;popl %ecx": 3,
                "pushl $;pushl (%eax);calll *;calll - <.text+>;leal -(%ebp), %ecx": 2,
                "movl %eax, %ecx;calll - <.text+>;jmp - <.text+>;int;int": 2,
                "pushl %esi;leal -(%ebp), %ecx;movl %eax, -(%ebp);calll - <.text+>;movl %esi, -(%ebp)": 1,
                "testl %ebx, %ebx;pushl %edi;jne  <.text+>;incl %eax;jmp  <.text+>": 1,
                "pushl $;pushl $;pushl (%eax);calll *;jmp - <.text+>": 2,
                "movl (%ebp), %edi;movl %eax, -(%ebp);movl %edi, -(%ebp);calll - <.text+>;pushl %edi": 1,
                "leal -(%ebp), %eax;imull $, %ebx, %ebx;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;calll *;cmpl %esi, %eax;movl %eax, ;je  <.text+>": 1,
                "movl , %eax;cmpl $-, %eax;je  <.text+>;pushl %eax;calll  <.text+>": 1,
                "pushl $;popl %esi;pushl %esi;movl $, %ecx;movl %ebx, %edi": 1,
                "pushl $;addl $, %ebx;pushl %ebx;movsl (%esi), %es:(%edi);calll *": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;movl %ecx, -(%ebp);addl $, %ecx": 1,
                "pushl $;leal -(%ebp), %ecx;movb %bl, -(%ebp);calll - <.text+>;orl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);je  <.text+>;movl -(%ebp), %esi;addl $, %esi;xorl %eax, %eax": 2,
                "cmpl %ecx, -(%ebp);jae  <.text+>;xorl %eax, %eax;movl $, %ecx;leal -(%ebp), %edi": 1,
                "cmpl $-, ;movl %eax, -(%ebp);jne  <.text+>;pushl $;popl %eax": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %eax, -(%ebp)": 1,
                "testl %ebx, %ebx;jne  <.text+>;xorl %esi, %esi;cmpl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "calll  <.text+>;movl %eax, %ebx;cmpl %esi, %ebx;jne  <.text+>;xorl %edi, %edi": 1,
                "calll  <.text+>;movl %eax, %ebx;cmpl %esi, %ebx;jne  <.text+>;leal -(%ebp), %eax": 1,
                "pushl $;leal -(%ebp), %ecx;movl %esi, -(%ebp);calll - <.text+>;orl $, -(%ebp)": 1,
                "calll - <.text+>;addl $, -(%ebp);incl %edi;cmpl -(%ebp), %edi;jb - <.text+>": 1,
                "calll - <.text+>;cmpl %esi, %eax;movl %eax, -(%ebp);jne - <.text+>;jmp  <.text+>": 1,
                "popl %esi;calll - <.text+>;calll  <.text+>;movl %ebx, %eax;popl %edi": 1,
                "popl %edi;movl -(%ebp), %ecx;movl %ecx, %fs:;movl -(%ebp), %ecx;popl %ebx": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);pushl $;stosl %eax, %es:(%edi);calll - <.text+>": 1,
                "xorl %eax, %eax;imull $, %esi, %esi;movl $, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "addl $, %eax;pushl %eax;calll - <.text+>;movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll - <.text+>;orl $-, %edi": 1,
                "cmpl %ebx, %eax;movl %eax, ;je  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>": 1,
                "calll - <.text+>;cmpl %ebx, ;jne  <.text+>;cmpl %ebx, ;jne  <.text+>": 1,
                "testl %eax, %eax;jg  <.text+>;movl $, -(%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "pushl %eax;calll  <.text+>;movl %edi, ;calll - <.text+>;cmpl %edi, ": 1,
                "movl , %eax;cmpl %edi, %eax;je  <.text+>;pushl %eax;calll  <.text+>": 1,
                "movl $, %esi;movl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "calll - <.text+>;jmp  <.text+>;calll - <.text+>;cmpl %ebx, ;movl $, %esi": 1,
                "calll  <.text+>;movl %esi, -(%ebp);cmpw %bx, -(%ebp);je  <.text+>;movl %esi, -(%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;calll - <.text+>;pushl (%ebp)": 1,
                "addl $, %ecx;pushl %ecx;calll - <.text+>;testl %esi, %esi;movl %esi, %ecx": 1,
                "calll - <.text+>;movl , %eax;movl %eax, -(%ebp);pushl %ebx;xorl %eax, %eax": 1,
                "pushl %edi;movl $, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "movl $, %ebx;pushl %ecx;movl $, -(%ebp);movl %ebx, -(%ebp);calll *": 1,
                "rep  cmpsl %es:(%edi), (%esi);je  <.text+>;cmpl $, -(%ebp);jne - <.text+>;decl -(%ebp)": 1,
                "je  <.text+>;movl %ebx, %eax;shll $, %eax;leal -(%ebp,%eax), %eax;movl %eax, %esi": 1,
                "sbbl %eax, %eax;incl %eax;movl %eax, -(%ebp);jne  <.text+>;shll $, %ebx": 1,
                "jne  <.text+>;shll $, %ebx;pushl $;leal -(%ebp,%ebx), %eax;pushl %eax": 1,
                "movl $, -(%ebp);je  <.text+>;decl %eax;je  <.text+>;decl %eax": 1,
                "leal (%esi), %eax;pushl %eax;calll - <.text+>;movl %eax, %edi;calll - <.text+>": 1,
                "pushl %esi;addl $, %edi;pushl %edi;calll  <.text+>;addl $, %esi": 1,
                "calll  <.text+>;leal -(%ebp), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 2,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp);calll - <.text+>;cmpl %ebx, %eax": 1,
                "calll - <.text+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <.text+>;movl , %edx": 1,
                "cmpl %ebx, %eax;movl %eax, -(%ebp);jne  <.text+>;movl , %edx;leal -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl , %edi": 1,
                "testl %eax, %eax;jne  <.text+>;movl , %edi;pushl $;calll *%edi": 1,
                "pushl $;calll *%edi;andl $, -(%ebp);movl $, (%esp);pushl %esi": 1,
                "calll *;popl %ecx;leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;popl %ecx;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;xorl %edi, %edi;incl %edi;xorl %ebx, %ebx": 1,
                "incl %edi;xorl %ebx, %ebx;cmpl %ebx, ;je  <.text+>;pushl %ebx": 1,
                "calll - <.text+>;movl , %ecx;pushl $;calll - <.text+>;calll - <.text+>": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;calll - <.text+>;movl -(%ebp), %esi": 1,
                "calll - <.text+>;cmpl %ebx, ;je  <.text+>;pushl %edi;pushl %ebx": 1,
                "calll - <.text+>;cmpl $, %eax;jne  <.text+>;pushl -(%ebp);calll - <.text+>": 1,
                "jne  <.text+>;pushl -(%ebp);calll - <.text+>;calll - <.text+>;testl %eax, %eax": 2,
                "calll - <.text+>;jmp  <.text+>;pushl %esi;calll - <.text+>;testl %eax, %eax": 1,
                "pushl $;popl %edi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl $;pushl %ebx;pushl %esi;pushl -(%ebp)": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %eax;addl $, %eax;pushl %eax": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;jmp  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "jmp  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;movl %ebx, -(%ebp);jmp  <.text+>": 1,
                "cmpl %ebx, %edi;movl %edi, -(%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %edi, -(%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;je  <.text+>;calll - <.text+>;leal (%esi), %eax": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "orl $-, -(%ebp);leal -(%ebp), %ecx;calll - <.text+>;jmp  <.text+>;cmpl %eax, -(%ebp)": 1,
                "cmpl %esi, -(%ebp);jne  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>;pushl -(%ebp)": 1,
                "je  <.text+>;movl -(%ebp), %eax;pushl %esi;pushl $;pushl -(%ebp)": 1,
                "movb $, -(%ebp);calll - <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>;orl $, -(%ebp);pushl %eax": 1,
                "pushl -(%ebp);calll - <.text+>;pushl %eax;calll - <.text+>;jmp  <.text+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, %fs:;movl -(%ebp), %ecx;xorl %eax, %eax;popl %ebx": 1,
                "movl , %eax;pushl %ebx;pushl %esi;pushl %edi;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;movl %eax, -(%ebp);movl $, %edi;calll - <.text+>;xorl %ebx, %ebx": 1,
                "leal -(%ebp), %ecx;calll - <.text+>;calll - <.text+>;testw %ax, %ax;je  <.text+>": 1,
                "calll *;calll - <.text+>;pushl %esi;pushl (%ebp);calll - <.text+>": 1,
                "je  <.text+>;calll - <.text+>;movl %eax, -(%ebp);calll - <.text+>;cmpl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;pushl $;addl $, %edi;addl $, %esi": 1,
                "pushl -(%ebp);calll - <.text+>;cmpl %ebx, %eax;movl %eax, -(%ebp);jne - <.text+>": 2,
                "calll - <.text+>;movl -(%ebp), %eax;addl $, %eax;pushl %eax;calll - <.text+>": 3,
                "movb %bl, -(%ebp);jne  <.text+>;calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movb $, -(%ebp);calll - <.text+>;pushl $;leal -(%ebp), %ecx;movb $, -(%ebp)": 3,
                "calll - <.text+>;pushl $;pushl $;leal -(%ebp), %ecx;calll - <.text+>": 3,
                "xorl %eax, %eax;rep  cmpsl %es:(%edi), (%esi);je  <.text+>;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "pushl $;leal -(%ebp), %ecx;calll - <.text+>;movl -(%ebp), %esi;pushl %eax": 1,
                "movl -(%ebp), %esi;pushl %eax;leal (%esi), %eax;pushl %eax;calll - <.text+>": 1,
                "movb %bl, -(%ebp);movl %ebx, ;calll - <.text+>;movl $, %esi;jmp - <.text+>": 1,
                "rep  stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl $;movl %ebx, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;jae  <.text+>;leal -(%ebp), %eax;pushl %eax": 2,
                "rep  stosl %eax, %es:(%edi);xorl %edi, %edi;cmpl %edi, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl ;calll  <.text+>;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 2,
                "pushl $;calll - <.text+>;movl %eax, -(%ebp);incl %edi;addl %ebx, %esi": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %edi;pushl %ebx": 1,
                "jne  <.text+>;cmpl %edi, -(%ebp);jne  <.text+>;leal -(%ebp), %esi;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;pushl $;calll - <.text+>;incl %edi;addl %ebx, %esi": 1,
                "je  <.text+>;pushl (%ebp);movl -(%ebp), %ecx;pushl $;calll - <.text+>": 1,
                "xorl %edi, %edi;pushl %edi;movl $, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "je  <.text+>;cmpb $, (%ebp);je  <.text+>;calll - <.text+>;orl $-, %eax": 1,
                "calll - <.text+>;calll - <.text+>;movl , %ecx;calll - <.text+>;cmpb $, (%ebp)": 1,
                "movl , %ecx;calll - <.text+>;cmpb $, (%ebp);je  <.text+>;pushl ": 1,
                "movl %eax, %esi;cmpl %edi, %esi;jne - <.text+>;calll - <.text+>;calll - <.text+>": 1,
                "calll - <.text+>;pushl $;pushl %esi;calll - <.text+>;cmpw %si, ": 1,
                "movl %ebx, %eax;pushl %esi;pushl %esi;pushl $;pushl %esi": 1,
                "calll - <.text+>;jmp  <.text+>;cmpl %esi, %ebx;je  <.text+>;movl %ebx, %eax": 1,
                "cmpl %edi, %esi;je  <.text+>;pushl %ebx;leal (%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %esi;calll  <.text+>;movl %eax, %ebx;leal (%ebp), %eax": 1,
                "cmpl %edi, %ebx;popl %ecx;popl %ecx;movl %ebx, %eax;jne  <.text+>": 1,
                "movw %di, %ax;popl %edi;popl %esi;leave;retl": 1,
                "movl %ecx, (%eax);movl (%esi), %eax;movl (%eax), %eax;movw $, (%eax);movl (%esi), %eax": 1,
                "movl (%eax), %eax;movw $, (%eax);movl (%esi), %eax;movl (%eax), %eax;andw $, (%eax)": 1,
                "movw %ax, (%ecx);movl (%esi), %eax;movswl (%eax), %ecx;imull $, %ecx, %ecx;addl $, %ecx": 1,
                "movl %eax, (%ebp);je  <.text+>;movl (%esi), %eax;andl $, (%eax);pushl (%esi)": 1,
                "je  <.text+>;movl (%esi), %eax;andl $, (%eax);pushl (%esi);calll  <.text+>": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testl %esi, %esi;jne  <.text+>": 1,
                "testl %edi, %edi;je  <.text+>;movl (%esi), %eax;pushl %esi;calll *(%eax)": 1,
                "andl $, (%esi);movl %eax, %ebx;jmp  <.text+>;movl $, %ebx;pushl %esi": 1,
                "calll  <.text+>;popl %edi;movw %bx, %ax;popl %ebx;popl %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi": 3,
                "movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 4,
                "xorl %edx, %edx;movl $, %ecx;divl %ecx;retl;int": 1,
                "pushl %esi;xorl %ebx, %ebx;pushl %edi;movl %ebx, -(%ebp);movl (%ebp), %eax": 1,
                "pushl %eax;calll - <.text+>;leal (%ebp), %ecx;movl %esi, -(%ebp);movb %bl, -(%ebp)": 1,
                "jl  <.text+>;movl %ebx, %eax;cltd;idivl %esi;addl %eax, (%ebp)": 1,
                "addl %eax, %esi;subl %edx, %edi;movl %edi, (%ebp);jmp  <.text+>;cmpl %edi, %eax": 1,
                "pushl %eax;movl %ecx, %esi;calll *;movzwl -(%ebp), %eax;pushl %eax": 2,
                "pushl %eax;movzwl -(%ebp), %eax;pushl %eax;movl %esi, %ecx;calll - <.text+>": 3,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;pushl $;cltd": 1,
                "testl %edx, %edx;jne  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>": 1,
                "calll - <.text+>;movl -(%ebp), %eax;leave;retl;int": 3,
                "popl %ecx;divl %ecx;movl (,%edx,), %eax;retl;int": 1,
                "jge  <.text+>;addl $, (%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "imull $, %ecx, %ecx;addl %esi, %ecx;shll $, %ecx;cmpl %edi, (%ebp);movl (%ecx), %eax": 1,
                "movl %eax, %edi;movl %esi, %eax;cltd;idivl %ebx;subl %eax, %edi": 1,
                "movl -(%ebp), %edx;addl %eax, %edi;movl (%ebp), %eax;decl %eax;imull $, %eax, %eax": 1,
                "decl %eax;imull $, %eax, %eax;addl %edi, %eax;movl %eax, (%edx);movl (%ecx), %ecx": 1,
                "pushl %edi;movl %ecx, %edi;leal -(%ebp), %ecx;calll - <.text+>;xorl %esi, %esi": 1,
                "calll - <.text+>;xorl %esi, %esi;pushl %edi;leal -(%ebp), %eax;incl %esi": 1,
                "pushl %esi;movl (%ebp), %esi;jmp  <.text+>;pushl %eax;calll  <.text+>": 1,
                "calll  <.text+>;movl (%esi), %eax;testl %eax, %eax;jne - <.text+>;popl %esi": 1,
                "pushl $;popl %eax;movl (%ebp), %ecx;shrl $, (%ebp);andl $, %ecx": 1,
                "pushl $;pushl $;jmp  <.text+>;pushl $;pushl %eax": 1,
                "pushl (%ebp);calll *;movl %eax, %edi;cmpl $-, %edi;je  <.text+>": 1,
                "pushl (%ebp);calll *;movl (%ebp), %eax;cmpl %eax, (%ebp);je  <.text+>": 1,
                "calll *;movl (%ebp), %eax;cmpl %eax, (%ebp);je  <.text+>;movl $, (%esi)": 1,
                "movl $, (%esi);movb $, ;popl %edi;popl %esi;movl %ebx, %eax": 1,
                "testl %edx, %edx;jne  <.text+>;movl (%eax), %edx;testl %edx, %edx;je  <.text+>": 1,
                "leal (%edx), %edi;leal -(%ebp), %esi;xorl %ebx, %ebx;rep  cmpsl %es:(%edi), (%esi);je  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl , %ecx;xorl %eax, %eax;jmp  <.text+>": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <.text+>;movl (%ecx), %ecx;testl %ecx, %ecx": 1,
                "jne - <.text+>;movl (%edx), %edx;testl %edx, %edx;jne - <.text+>;popl %edi": 1,
                "jne - <.text+>;popl %edi;popl %esi;popl %ebx;popl %ebp": 4,
                "pushl %esi;calll *;popl %ecx;popl %ecx;leal -(%ebp), %eax": 2,
                "pushl %esi;calll *;popl %ecx;movl %edi, %eax;popl %edi": 2,
                "popl %ecx;popl %ecx;je  <.text+>;pushl %esi;pushl (%ebp)": 1,
                "movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movl (%esi), %ecx;movl (%esi), %eax": 1,
                "addl %eax, %ecx;pushl %esi;movl %eax, (%esi);movl %ecx, (%esi);calll - <.text+>": 1,
                "andl %ebx, -(%ebp);andl %ebx, -(%ebp);pushl %edi;movl , %edi;testl %edi, %edi": 1,
                "andl %ebx, -(%ebp);pushl %edi;movl , %edi;testl %edi, %edi;je  <.text+>": 1,
                "testl %edi, %edi;je  <.text+>;pushl %esi;movl (%edi), %esi;jmp  <.text+>": 1,
                "movl (%edi), %edi;testl %edi, %edi;jne - <.text+>;testl %ebx, %ebx;popl %esi": 1,
                "testl %ebx, %ebx;popl %esi;je  <.text+>;pushl %ebx;calll - <.text+>": 1,
                "pushl %ebx;pushl (%ebp);xorb %bl, %bl;pushl (%ebp);pushl (%ebp)": 1,
                "je  <.text+>;movb (%eax), %bl;testb %bl, %bl;jne  <.text+>;incb %bl": 1,
                "pushl %eax;pushl %ecx;calll - <.text+>;pushl %esi;pushl %edi": 1,
                "pushl %edi;jmp  <.text+>;movl -(%ebp), %eax;movl (%eax), %ebx;jmp  <.text+>": 1,
                "testl %ebx, %ebx;jne - <.text+>;movl (%eax), %eax;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movw (%ebx), %ax;pushl %eax;pushl (%ebx);calll - <.text+>;pushl %ebx": 1,
                "pushl (%ebx);calll - <.text+>;pushl %ebx;pushl -(%ebp);calll - <.text+>": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl , %edi;jmp  <.text+>": 1,
                "incl %esi;movl %eax, (%ebp);incl %esi;pushl $;pushl %ebx": 1,
                "calll *%edi;popl %ecx;testl %eax, %eax;movl (%ebp), %eax;popl %ecx": 1,
                "jne  <.text+>;calll *;jmp  <.text+>;xorl %eax, %eax;negl %eax": 1,
                "xorl %eax, %eax;negl %eax;sbbl %eax, %eax;popl %ebp;retl": 1,
                "calll *;movl $, (%eax);jmp - <.text+>;xorl %eax, %eax;popl %ebp": 1,
                "pushl %eax;pushl (%ebp);calll *;negl %eax;sbbl %eax, %eax": 1,
                "pushl (%ebp);calll *;negl %eax;sbbl %eax, %eax;negl %eax": 1,
                "pushl $;popl %eax;pushl %edi;pushl $;pushl %eax": 1,
                "jmp  <.text+>;pushl $;pushl %eax;calll *;popl %ecx": 1,
                "movl %eax, %edi;pushl $;pushl %edi;calll *;addl $, %esp": 1,
                "pushl %eax;pushl $;pushl $;calll *;decl %eax": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi;movl %ebx, %eax": 1,
                "xorl %ecx, %ecx;testl %edx, %edx;je  <.text+>;decl %ebx;testl %ebx, %ebx": 1,
                "decl %ebx;decl %ebx;incl %esi;incl %esi;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;jne - <.text+>;popl %edi;popl %esi;movl %ecx, %eax": 1,
                "movl , %edx;addl $, %esp;cmpl %esi, %eax;movl %eax, (%edx,%ecx,);je - <.text+>": 1,
                "orl $-, (%eax);xorl %eax, %eax;jmp  <.text+>;movl , %eax;movl (%eax,%ecx,), %eax": 1,
                "movl %eax, %esi;movl , %eax;shll $, %esi;pushl (%esi,%eax);calll *": 1,
                "setne %al;popl %ebx;calll - <.text+>;leave;retl $": 1,
                "pushl %edi;pushl $;movl %edi, -(%ebp);calll *;pushl %eax": 1,
                "testl %eax, %eax;jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;leal -(%ebp), %eax": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl %edi;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edx;addl %ecx, %ecx;addl %eax, %eax;movl %ecx, -(%ebp)": 2,
                "movl %ecx, -(%ebp);leal (%eax,%ecx), %ecx;cmpl %ecx, (%edx);movl %eax, -(%ebp);jb  <.text+>": 2,
                "cmpl %edi, %eax;movl (%ebp), %edi;popl %ecx;movl %eax, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;pushl -(%ebp);pushl %ecx;calll *;movl , %esi": 2,
                "pushl -(%ebp);pushl (%edi);calll *%esi;movl -(%ebp), %eax;addl $, %esp": 2,
                "jmp  <.text+>;movl $, -(%ebp);pushl -(%ebp);movl , %esi;calll *%esi": 2,
                "movl (%ebp), %ebx;movl %eax, -(%ebp);movl (%ebp), %eax;popl %ecx;xorl %esi, %esi": 2,
                "calll *;addl $, %esp;cmpw %si, -(%ebp);leal -(%ebp), %eax;jne  <.text+>": 3,
                "pushl -(%ebp);calll *;movl -(%ebp), %ecx;calll - <.text+>;leave": 2,
                "ja  <.text+>;pushl %edi;jmpl *(,%eax,);movb $, -(%ebp);movl , %edi": 1,
                "pushl $;calll *%edi;addl $, %esp;testl %eax, %eax;movl %eax, (%ebx)": 2,
                "movl %eax, (%ebx);movl %ecx, (%eax);pushl (%ebx);calll *;testl %esi, %esi": 1,
                "popl %ecx;movl (%ebx), %ecx;leal (%ecx,%eax,), %edi;movl %esi, %ecx;movl (%ebp), %esi": 1,
                "movl (%ebx), %ecx;leal (%ecx,%eax,), %edi;movl %esi, %ecx;movl (%ebp), %esi;movl %ecx, %eax": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);pushl %ebx;calll  <.text+>": 1,
                "movl (%ebp), %edi;pushl (%ebx);movb $, (%ebx);movl %esi, (%ebx);movl (%edi), %eax": 1,
                "testl %eax, %eax;movl %eax, (%ebx);jne  <.text+>;pushl %ebx;calll *": 1,
                "pushl %eax;jmp  <.text+>;pushl (%ebp);calll  <.text+>;cmpl $, (%ebp)": 1,
                "jmp  <.text+>;pushl (%ebp);calll  <.text+>;cmpl $, (%ebp);jne  <.text+>": 1,
                "pushl (%ebp);pushl $;calll *;testl %eax, %eax;popl %ecx": 1,
                "popl %ecx;popl %ecx;movl %eax, (%ebx);je - <.text+>;movl , %eax": 1,
                "pushl (%ebx);cmpl $, %eax;setne %cl;addb $, %cl;movb %cl, (%ebx)": 1,
                "xorl %ecx, (%eax);addl %esi, -(%esi);das;orb %al, (%ecx);lretl $": 1,
                "movl , %esi;jmp  <.text+>;movl , %eax;movl (%eax,%esi,), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;je  <.text+>;decl %esi": 1,
                "jns - <.text+>;jmp  <.text+>;movl %esi, %eax;calll - <.text+>;xorl %eax, %eax": 1,
                "pushl %esi;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *": 4,
                "movl , %esi;pushl $;pushl ;calll *%esi;pushl $": 2,
                "pushl $;pushl ;movl %eax, ;calll *%esi;pushl $": 36,
                "jne - <.text+>;xorl %eax, %eax;jmp  <.text+>;xorl %eax, %eax;incl %eax": 1,
                "leal (%ebp), %eax;pushl %eax;calll - <.text+>;popl %esi;xorw %ax, %ax": 2,
                "movl $, %edi;pushl %edi;pushl $;pushl %esi;calll *%ebx": 1,
                "je  <.text+>;xorw %ax, %ax;jmp  <.text+>;movzwl (%esi), %ecx;decl %ecx": 1,
                "movw %ax, ;xorw %ax, %ax;popl %ebp;retl $;int": 1,
                "calll  <.text+>;jmp  <.text+>;pushl $;calll - <.text+>;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;decw (%eax);pushl %esi;pushl (%edi)": 1,
                "pushl (%edi);movl , %esi;calll *%esi;pushl (%edi);calll *%esi": 4,
                "movl , %esi;calll *%esi;pushl (%edi);calll *%esi;pushl (%edi)": 3,
                "pushl %ebx;pushl %esi;pushl %edi;pushl (%ebp);calll - <.text+>": 2,
                "movl (%ecx), %eax;xorl %esi, %esi;cmpw %si, (%eax);je  <.text+>;cmpl %esi, %ebx": 1,
                "movl (%edi), %ecx;testl %ecx, %ecx;je  <.text+>;movzbl (%edi), %esi;andl %eax, %esi": 1,
                "calll  <.text+>;movl %eax, %esi;movl $, %eax;testw %si, %si;jne  <.text+>": 1,
                "popl %edi;je  <.text+>;movl (%esi), %ecx;movl %ecx, (%ebx);pushl (%esi)": 1,
                "calll *;testl %eax, %eax;movl (%ebp), %ebx;popl %ecx;popl %ecx": 1,
                "testl %eax, %eax;movl (%ebp), %ebx;popl %ecx;popl %ecx;movl %eax, (%ebx)": 1,
                "movl (%ebx), %eax;movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "movl (%ebp), %ecx;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 1,
                "movl %edi, (%eax);pushl (%ebx);calll - <.text+>;pushl %edi;calll  <.text+>": 1,
                "addl $, %edi;movl %eax, %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "cmpb $, %cl;je  <.text+>;cmpb $, %cl;jbe  <.text+>;cmpb $, %cl": 2,
                "movl (%ebp), %eax;movl %eax, (%ecx);xorl %eax, %eax;popl %ebp;retl $": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;pushl %ecx;pushl %eax;calll *(%edx)": 1,
                "pushl %ecx;movl (%ebp), %ecx;movb (%ecx), %al;cmpb $, %al;movl $, -(%ebp)": 1,
                "je  <.text+>;cmpb $, %al;jbe  <.text+>;cmpb $, %al;ja  <.text+>": 2,
                "pushl %ecx;calll *(%eax);xorw %ax, %ax;leave;retl $": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);negl %eax;sbbl %eax, %eax;andl $, %eax": 2,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;movl (%eax), %eax": 1,
                "movl (%ecx), %eax;movl (%eax), %eax;movl %eax, (%ecx);negl %eax;sbbl %eax, %eax": 1,
                "movzbl (%ecx), %eax;imull $, %eax, %eax;movl (%eax), %eax;testl %eax, %eax;je  <.text+>": 2,
                "jne  <.text+>;cmpl $, (%esi);je  <.text+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl %edi;pushl (%esi);calll - <.text+>;movl (%edi), %eax": 1,
                "jne  <.text+>;cmpw $-, (%ebp);je  <.text+>;movzbw (%esi), %ax;cmpw %ax, (%ebp)": 1,
                "movl (%eax), %edx;movl (%ebp), %ecx;movl %edx, (%ecx);cmpl $, (%eax);je  <.text+>": 1,
                "movl (%ebp), %edi;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl $-;leal -(%ebp), %eax;pushl %eax;pushl %edi;calll - <.text+>": 1,
                "pushl $;pushl $;calll *;movl %eax, %esi;testl %esi, %esi": 4,
                "testl %esi, %esi;popl %ecx;popl %ecx;je  <.text+>;andl $, (%esi)": 1,
                "calll *%edi;movl %eax, (%esi);pushl ;calll *%ebx;leal (%eax,%eax), %eax": 2,
                "je  <.text+>;movw %bx, (%esi);movl $, (%esi);xorl %eax, %eax;movl (%esi), %ecx": 1,
                "calll *%edi;addl $, %esp;xorl %esi, %esi;popl %edi;popl %ebx": 1,
                "xorl %esi, %esi;popl %edi;popl %ebx;movl %esi, %eax;popl %esi": 2,
                "pushl (%edi);calll - <.text+>;pushl %esi;pushl (%edi);movl , %esi": 1,
                "pushl %edi;calll *%esi;addl $, %esp;popl %esi;xorl %eax, %eax": 1,
                "movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;pushl (%esi);pushl (%esi)": 1,
                "je  <.text+>;pushl (%esi);pushl (%esi);calll - <.text+>;leal (%ebp), %eax": 1,
                "xorl %esi, %esi;cmpl %edi, %eax;je  <.text+>;incl %esi;pushl %ebx": 1,
                "pushl %esi;movl , %esi;pushl %edi;xorl %ebx, %ebx;incl %ebx": 1,
                "jl  <.text+>;pushl %edi;calll *;addl (%ebx), %eax;leal (%eax,%eax), %eax": 1,
                "movl (%ebx), %esi;shll %ecx;movl %eax, %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "movl -(%ebp), %eax;popl %ecx;movl %eax, (%ebx);movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;movl %eax, (%ebp);jle  <.text+>;movl (%ebx), %edi": 1,
                "movl (%ebx), %edi;leal (%esi), %eax;pushl %eax;calll *;addl (%ebp), %eax": 1,
                "movl $, (%ebx);movw $, (%ebx);calll - <.text+>;xorl %ebx, %ebx;incl %ebx": 1,
                "xorl %eax, %eax;incl %eax;jmp  <.text+>;cmpw %bx, (%esi);je  <.text+>": 1,
                "pushl %ecx;pushl $;leal (%esi), %eax;pushl %eax;pushl (%esi)": 1,
                "movl (%esi), %ebx;decl %ebx;decl %ebx;testl %ebx, %ebx;jle  <.text+>": 1,
                "popl %ecx;popl %ecx;testl %ebx, %ebx;jg  <.text+>;pushl (%esi)": 1,
                "testl %ebx, %ebx;jg  <.text+>;pushl (%esi);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);orb $, (%esi);pushl (%esi);calll - <.text+>;leal -(%ebp), %eax": 2,
                "cmpl $, %eax;jne  <.text+>;movl (%esi), %eax;movl $, %ebx;andl %ebx, %eax": 1,
                "movl (%esi), %eax;testl $, %eax;je  <.text+>;andl %ebx, %eax;cmpl %eax, -(%ebp)": 1,
                "jne  <.text+>;movl (%esi), %eax;andl %ebx, %eax;cmpl %eax, -(%ebp);ja  <.text+>": 1,
                "xorl %eax, %eax;testb $-, (%esi);je  <.text+>;movw (%esi), %ax;pushl %ebx": 1,
                "pushl %ebx;pushl %edi;pushl %eax;xorl %eax, %eax;movw (%esi), %ax": 1,
                "movl %eax, (%ebp);movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, (%esi);movl %eax, (%esi);jb  <.text+>;calll  <.text+>;testl %eax, %eax": 1,
                "shrl %eax;pushl %eax;calll  <.text+>;pushl %eax;pushl (%esi)": 1,
                "jb  <.text+>;movl (%esi), %eax;addl (%esi), %eax;addl (%esi), %eax;addl (%esi), %eax": 1,
                "addl (%esi), %eax;addl (%esi), %eax;cmpl %ebx, %ecx;jne  <.text+>;addl (%esi), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi;pushl (%ebp)": 1,
                "pushl %esi;calll *;cmpl %edi, %ebx;popl %ecx;je  <.text+>": 1,
                "pushl %esi;pushl $;pushl (%ebp);calll - <.text+>;movl (%ebp), %esi": 1,
                "cmpl (%ecx), %edx;jne  <.text+>;movw (%eax), %dx;cmpw (%ecx), %dx;je  <.text+>": 1,
                "pushl $;pushl %ecx;pushl (%eax);calll - <.text+>;cmpl $, -(%ebp)": 1,
                "calll - <.text+>;cmpl $, -(%ebp);movl %eax, %edi;movl %edi, -(%ebp);je  <.text+>": 1,
                "calll - <.text+>;cmpl %esi, %eax;je  <.text+>;pushl -(%ebp);calll *": 2,
                "movl $, (%ebx);movw $, (%ebx);popl %ecx;pushl %edi;movl %ebx, %esi": 1,
                "addl -(%ebp), %esi;addl -(%ebp), %esi;pushl %esi;pushl %edi;movl %esi, -(%ebp)": 1,
                "pushl -(%ebp);movl %eax, (%ebx);movw $, (%ebx);jmp - <.text+>;movl -(%ebp), %edi": 1,
                "cmpl (%ecx), %eax;je  <.text+>;pushl -(%ebp);calll *;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);jmp - <.text+>;movl -(%ebp), %esi;pushl %esi": 1,
                "pushl (%ecx);pushl %edi;pushl (%ebx);calll - <.text+>;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;calll *;xorl %ecx, %ecx;cmpl $, (%eax)": 1,
                "pushl %edi;calll - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl %esi;pushl %esi;leal (%ebx), %ecx;pushl %esi;movw %si, (%ecx)": 1,
                "pushl %esi;movw %si, (%ecx);movw %si, (%ecx);pushl %esi;leal (%ebx), %eax": 1,
                "cmpl %esi, %eax;popl %ecx;je  <.text+>;movl %eax, (%eax);movl (%ebx), %ecx": 1,
                "pushl (%ecx);pushl %eax;calll  <.text+>;pushl (%ebx);calll *": 1,
                "pushl %edi;movl , %edi;je  <.text+>;pushl (%esi);calll - <.text+>": 1,
                "calll - <.text+>;pushl (%esi);calll *%edi;popl %ecx;popl %ecx": 3,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %esi": 1,
                "movl %edi, (%esi);movl %edi, (%esi);movw %di, (%esi);popl %ebx;jmp  <.text+>": 1,
                "orb $, (%eax);jmp  <.text+>;orb $, (%eax);movw %di, (%esi);movl %edi, (%esi)": 1,
                "cmpl %ebx, %edi;jne  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>": 1,
                "calll *%esi;leal (%ebx,%eax,), %eax;addl (%ebp), %eax;movl $, %ecx;addl (%ebp), %eax": 1,
                "cmpl %ecx, %eax;movl %eax, -(%ebp);jge  <.text+>;movl %ecx, -(%ebp);movl %ecx, %eax": 1,
                "pushl $;jmp  <.text+>;movl -(%ebp), %ecx;pushl (%ebp);movl %ecx, (%ebx)": 1,
                "movl -(%ebp), %ecx;pushl (%ebp);movl %ecx, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl %ecx, (%ebx);movl $, (%ebx);movl $, (%ebx);movw %ax, (%edi);movw %ax, (%edi)": 1,
                "movl %eax, (%ebx);calll *%esi;pushl (%ebp);leal (%eax,%eax), %eax;movzwl %ax, %eax": 4,
                "calll *%esi;leal (%eax,%eax), %eax;movzwl %ax, %ecx;movl (%ebx), %eax;movl (%ebp), %esi": 1,
                "movl %eax, (%ebx);addl %esi, %eax;movl (%ebp), %esi;movl %eax, (%ebx);addl %edx, %eax": 1,
                "movl %eax, (%ebx);leal (%ebx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);addl $, %esp;xorl %esi, %esi;movl %ecx, (%ebx)": 1,
                "je  <.text+>;orb $, (%ebx);cmpl %esi, (%ebp);je  <.text+>;orl $, (%ebx)": 1,
                "je  <.text+>;orl $, (%ebx);testb $, (%ebx);je  <.text+>;xorl %eax, %eax": 1,
                "movl (%ebx), %edi;movl (%ebp), %esi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 5,
                "movl (%ebp), %edi;decl %eax;shrl %eax;andw $, (%ecx,%eax,);xorl %esi, %esi": 2,
                "pushl %eax;pushl (%ebp);pushl (%ebx);calll *;movl (%ebx), %eax": 5,
                "leal -(%ebp), %eax;je  <.text+>;pushl $;pushl %eax;pushl $": 1,
                "pushl %edi;movw %ax, -(%ebp);calll - <.text+>;movzbl (%esi), %ecx;movl %ecx, -(%ebp)": 1,
                "testl $, %eax;je  <.text+>;movl %ecx, -(%ebp);testl $, %eax;je  <.text+>": 2,
                "movl %ecx, -(%ebp);movl %ecx, -(%ebp);cmpw %cx, %ax;jne  <.text+>;movl %ecx, -(%ebp)": 1,
                "movl $, -(%ebp);pushl %esi;pushl %edi;calll - <.text+>;testb $, %al": 3,
                "leal -(%ebp), %eax;pushl %eax;pushl %esi;pushl %edi;calll - <.text+>": 1,
                "movzwl (%esi), %eax;pushl -(%ebp);movl %eax, (%ebx);pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %edi;movl (%ebp), %edi;movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "pushl %edx;pushl %eax;calll *(%ecx);leal -(%ebp), %eax;pushl %eax": 1,
                "leal (,%eax,), %eax;pushl %eax;calll *%ebx;testl %eax, %eax;popl %ecx": 1,
                "je  <.text+>;pushl -(%ebp);calll *%esi;popl %ecx;movl -(%ebp), %ecx": 1,
                "leave;retl $;movl -(%ebp), %eax;movl $, (%eax);jmp - <.text+>": 1,
                "popl %ecx;je  <.text+>;movl (%edi), %eax;pushl %ebx;pushl %esi": 1,
                "calll  <.text+>;movl %eax, (%ebp);leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 2,
                "pushl %eax;calll  <.text+>;pushl %esi;pushl %edi;movl %eax, (%ebp)": 2,
                "movl %edx, -(%ebp);calll *(%eax);movswl %ax, %ebx;leal (%ebx,%ebx), %eax;pushl %eax": 1,
                "je  <.text+>;pushl %ebx;pushl %esi;calll - <.text+>;jmp  <.text+>": 2,
                "cmpl (%ebp), %eax;jne  <.text+>;movw (%ecx), %ax;cmpw (%ebp), %ax;jge  <.text+>": 1,
                "movl (%edi), %ebx;cmpl (%eax), %ebx;jge  <.text+>;movl %eax, %edi;movl (%eax), %eax": 1,
                "cmpl (%eax), %ebx;jge  <.text+>;movl %eax, %edi;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl %eax, %esi;testl %esi, %esi;jne - <.text+>;popl %ebx;movl %edi, %eax": 2,
                "pushl %ebx;pushl %esi;pushl %edi;calll - <.text+>;jmp  <.text+>": 1,
                "jne  <.text+>;jmp  <.text+>;movl (%ebp), %edi;pushl (%edi);xorl %ebx, %ebx": 1,
                "andl $, (%ebp);andl $, -(%ebp);testl %ebx, %ebx;je  <.text+>;movl (%ebx), %eax": 1,
                "testl %ebx, %ebx;je - <.text+>;leal (%ebx), %edi;pushl %edi;calll - <.text+>": 1,
                "calll *;movl (%ebp), %eax;xorl %edi, %edi;cmpl %edi, (%ebp);popl %ecx": 1,
                "movw (%eax), %ax;movw %ax, (%ebx);je  <.text+>;movl (%ebp), %esi;leal (%ebx), %edi": 1,
                "movl -(%ebp), %esi;xorl %edi, %edi;leal (%ebx), %eax;pushl %eax;calll  <.text+>": 1,
                "calll  <.text+>;jmp  <.text+>;pushl $;pushl (%ebp);addl $, %ebx": 1,
                "cmpl %edx, (%eax);je  <.text+>;cmpw $-, (%ebp);je  <.text+>;movl (%eax), %eax": 1,
                "jne - <.text+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebp": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;xorl %eax, %eax;stosl %eax, %es:(%edi)": 1,
                "cmpl %ecx, %eax;je  <.text+>;movl (%eax), %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "movw %cx, (%eax);popl %ebp;retl $;int;int": 4,
                "pushl $;calll *;cmpl %edi, %eax;popl %ecx;popl %ecx": 7,
                "movw -(%ebp), %ax;popl %edi;popl %ebx;leave;retl $": 3,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %eax;andl $, (%eax);popl %ebp": 2,
                "rep  movsb (%esi), %es:(%edi);movl %eax, (%ebx);movw (%ebp), %ax;movw %ax, (%ebx);xorl %eax, %eax": 4,
                "int;movl , %eax;pushl %ebx;xorl %ebx, %ebx;pushl $": 1,
                "movw %bx, ;movw %bx, ;movb %bl, ;movb %bl, ;calll  <.text+>": 1,
                "movw %ax, ;movl , %eax;addl $-, %eax;shrl $, %eax;xorl %ecx, %ecx": 1,
                "pushl $;pushl %eax;xorl %ebx, %ebx;calll *;movl , %esi": 1,
                "xorl %ebx, %ebx;calll *;movl , %esi;leal -(%ebp), %eax;pushl $": 1,
                "calll *%esi;movl , %esi;addl $, %esp;pushl $;calll *%esi": 1,
                "popl %esi;movb %bl, ;movw %bx, %ax;popl %ebx;calll - <.text+>": 1,
                "movl , %ebx;pushl %edi;movl (%ebp), %edi;pushl $;pushl %edi": 1,
                "jmp  <.text+>;pushl %esi;pushl $;pushl %edi;calll *": 1,
                "pushl %esi;pushl $;pushl %edi;calll *;movl %eax, %esi": 1,
                "andw $, (%esi);pushl %edi;calll - <.text+>;testl %eax, %eax;movw $, (%esi)": 1,
                "pushl %edi;calll - <.text+>;testl %eax, %eax;movw $, (%esi);je  <.text+>": 1,
                "xorl %eax, %eax;popl %esi;popl %edi;popl %ebx;popl %ebp": 1,
                "calll *;cmpl $, %eax;movl , %edi;movl , %ebx;popl %ecx": 2,
                "movl , %ebx;popl %ecx;jne  <.text+>;cmpw $, ;jne  <.text+>": 2,
                "pushl %eax;pushl $;pushl $;pushl %eax;pushl $": 3,
                "addl $, %esp;testl %eax, %eax;jne  <.text+>;leal -(%ebp), %eax;pushl %esi": 2,
                "pushl %eax;calll *%edi;popl %ecx;popl %ecx;xorl %esi, %esi": 1,
                "pushl %esi;calll *;testl %eax, %eax;popl %esi;je  <.text+>": 1,
                "jmp  <.text+>;movl , %eax;shrl %eax;movl %eax, ;leave": 1,
                "addl $, %esp;testl %eax, %eax;popl %esi;jne  <.text+>;xorl %edx, %edx": 1,
                "jne - <.text+>;cmpw %dx, (%eax);jmp  <.text+>;cmpw $, (%eax);je  <.text+>": 1,
                "cmpw %dx, (%eax);jmp  <.text+>;cmpw $, (%eax);je  <.text+>;incl %eax": 1,
                "testl %edi, %edi;je  <.text+>;pushl %edi;calll *;testl %eax, %eax": 2,
                "popl %ecx;popl %esi;jmp  <.text+>;pushl $;pushl $": 1,
                "andl $, ;popl %ecx;popl %ecx;xorl %eax, %eax;popl %edi": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %edi;andl $, ;pushl $": 1,
                "popl %ecx;pushl $;orl $-, %eax;movl $, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "pushl $;popl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;pushl $;pushl $;pushl -(%ebp);calll *": 1,
                "jbe  <.text+>;pushl $;popl %eax;imull $, %eax, %eax;movl %eax, ": 1,
                "int;cmpl $-, %eax;jne  <.text+>;orl %eax, %eax;retl": 1,
                "andl $, ;popl %ecx;retl;int;int": 1,
                "pushl $;movl %eax, -(%ebp);calll *;pushl (%ebp);leal -(%ebp), %eax": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp)": 1,
                "incl %eax;incl %eax;jmp  <.text+>;cmpl $, %eax;jbe  <.text+>": 1,
                "popl %ebx;je  <.text+>;andl $, (%ebp);movl (%edi), %eax;xorl %edx, %edx": 1,
                "cmpl $, ;movl %eax, ;je  <.text+>;movl , %eax;addl (%edi), %eax": 1,
                "movl %esi, (%ebp);movl %esi, (%eax);movl $, ;jmp  <.text+>;pushl (%ebp)": 1,
                "movl $, ;jmp  <.text+>;pushl (%ebp);movl (%ebp), %edi;movl (%ebp), %eax": 1,
                "movl (%ebp), %edi;movl (%ebp), %eax;pushl %edi;pushl (%ebp);pushl (%ebp)": 1,
                "je  <.text+>;subl %edx, %eax;je  <.text+>;decl %eax;je  <.text+>": 1,
                "movl , %eax;mull ;jmp  <.text+>;movl , %eax;xorl %ecx, %ecx": 1,
                "jmp  <.text+>;movl , %eax;xorl %ecx, %ecx;negl %eax;adcl %esi, %ecx": 1,
                "negl %ecx;pushl %edx;pushl %ecx;jmp  <.text+>;xorl %eax, %eax": 1,
                "pushl %esi;pushl ;calll - <.text+>;pushl %esi;pushl %edi": 1,
                "cmpl %edx, %ebx;jae  <.text+>;movl (%eax), %eax;cmpl %eax, %ebx;jbe  <.text+>": 1,
                "movl (%eax,%edi,), %eax;cmpl %eax, %ebx;jae  <.text+>;cmpl $, (%ebp);jne  <.text+>": 1,
                "pushl ;calll - <.text+>;movl (%ebp), %eax;subl %eax, (%ebp);jne - <.text+>": 1,
                "jne - <.text+>;jmp  <.text+>;movl %esi, (%ebp);pushl $;jmp  <.text+>": 1,
                "pushl %eax;calll - <.text+>;pushl $;jmp  <.text+>;pushl %edx": 1,
                "calll *;movl %eax, (%ebp);movl (%ebp), %eax;popl %esi;popl %ebp": 1,
                "movl %esi, -(%ebp);xorl %ebx, %ebx;movl %esi, -(%ebp);calll - <.text+>;subl %esi, %eax": 1,
                "cmpl %esi, %eax;je  <.text+>;movl %esi, (%eax);movl (%ebp), %edi;cmpl %esi, %edi": 1,
                "pushl %esi;pushl %esi;pushl (%ebp);calll - <.text+>;movl %eax, %edi": 1,
                "testl %eax, %eax;jne  <.text+>;calll *;movl %eax, ;jmp  <.text+>": 1,
                "decl %eax;cmpl %esi, %eax;jg - <.text+>;movl , %eax;incl ": 1,
                "movw %ax, ;popl %esi;retl;int;int": 1,
                "je  <.text+>;calll - <.text+>;pushl %esi;leal (%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;pushl %esi;leal (%ebp), %eax;pushl %eax;pushl ": 1,
                "pushl %eax;pushl ;pushl $;pushl ;calll *": 1,
                "movl , %eax;cmpl %eax, (%ebp);jne  <.text+>;xorl %edx, %edx;divl %eax": 1,
                "movl , %eax;cmpl , %eax;jbe  <.text+>;andl $, ;movl $, %eax": 1,
                "jmp  <.text+>;movl $, %eax;movl %eax, ;jmp  <.text+>;calll - <.text+>": 1,
                "movl %eax, ;jmp  <.text+>;calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "calll *;jmp  <.text+>;movl (%ebp), %eax;popl %ebp;retl $": 3,
                "xorl %ecx, %ecx;calll - <.text+>;subl %edx, %eax;je  <.text+>;decl %eax": 1,
                "movl %eax, %ecx;movl %ecx, %eax;popl %ebp;retl $;int": 1,
                "addl %edx, %eax;cmpw %di, (%eax);jne - <.text+>;jmp  <.text+>;cmpw $, %cx": 1,
                "jne - <.text+>;pushl $;pushl $;pushl %ebx;calll *": 1,
                "movl %esi, %edi;jmp  <.text+>;movl (%ebp), %edi;movl %edi, %eax;jmp  <.text+>": 1,
                "subl %ecx, %eax;je  <.text+>;decl %eax;jne  <.text+>;orl $-, (,%esi,)": 1,
                "xorl %ecx, %ecx;subl %ecx, %eax;je  <.text+>;decl %eax;jne  <.text+>": 1,
                "cmpl $, ;jne  <.text+>;movl %ecx, ;movl %ecx, ;movl $, %eax": 1,
                "testw %ax, %ax;jne  <.text+>;pushl %esi;movl , %esi;pushl %edi": 1,
                "movl $, ;jmp  <.text+>;pushl $;jmp  <.text+>;pushl $": 1,
                "jne  <.text+>;movl %ebx, ;cmpl $-, ;je  <.text+>;pushl $": 1,
                "cmpl $-, ;je  <.text+>;pushl $;pushl %esi;movl $, ": 1,
                "testl %eax, %eax;jne  <.text+>;calll *;movl %eax, -(%ebp);pushl ": 1,
                "pushl %edi;pushl $;pushl %esi;calll *;pushl %esi": 1,
                "movl %edi, ;popl %ebx;movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %edi": 1,
                "leal -(%esi), %edi;xorl %edx, %edx;testl %edi, %edi;jle  <.text+>;cmpl (%ecx,%edx,), %eax": 1,
                "cmpl (%ecx,%edx,), %eax;jae  <.text+>;cmpl (%ecx,%edx,), %eax;ja  <.text+>;incl %edx": 1,
                "xorl %eax, %eax;pushl %eax;pushl %ebx;incl %ecx;pushl %eax": 1,
                "pushl (%ebp);calll - <.text+>;movl , %ecx;cmpl $-, %ecx;movl %eax, %ebx": 1,
                "calll - <.text+>;movl , %ecx;cmpl $-, %ecx;movl %eax, %ebx;jne  <.text+>": 1,
                "movl (%ebp), %edi;pushl %edi;subl %edx, %ebx;pushl %ebx;movl (%ebp), %ebx": 1,
                "cmpl $, ;je  <.text+>;cmpl %esi, (%edi);jne  <.text+>;movl $, ": 1,
                "pushl %edx;calll - <.text+>;jmp  <.text+>;cmpl $, (%ebp);jb  <.text+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl -(%ebp), %ecx;xorl %esi, %esi;movl %eax, (%ecx);cmpl %ebx, (%ebp)": 1,
                "pushl %ebx;pushl %ebx;pushl ;movl %eax, %edi;movl %edx, -(%ebp)": 1,
                "cmpl (%eax), %edi;jne  <.text+>;cmpw %bx, %cx;jbe  <.text+>;cmpw $, %cx": 1,
                "movl %eax, ;jmp  <.text+>;cmpl %esi, -(%ebp);movl %esi, ;movl %esi, ": 1,
                "imull , %eax;movl %eax, (%ecx);movl -(%ebp), %ecx;xorl %esi, %esi;movl $, (%ecx)": 1,
                "movl , %ecx;decl %eax;movl %eax, (%ecx);movl , %eax;cmpl %edi, %eax": 1,
                "movl , %eax;incl %edi;addl $, %ecx;cmpl %eax, %edi;jbe - <.text+>": 1,
                "pushl ;pushl $;pushl (%ebp);calll - <.text+>;cmpl %ebx, ": 1,
                "pushl (%ebp);calll - <.text+>;cmpl %ebx, ;movl %eax, -(%ebp);jne  <.text+>": 1,
                "movl , %eax;cmpl %eax, ;je - <.text+>;popl %ebx;pushl $": 1,
                "pushl -(%ebp);pushl ;calll - <.text+>;jmp  <.text+>;movl %esi, ": 1,
                "movl -(%ebp), %eax;popl %esi;leave;retl $;int": 4,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl $;pushl ": 1,
                "movl %eax, -(%ebp);movzwl -(%ebp), %eax;orl $-, -(%ebp);movl %eax, -(%ebp);movzwl -(%ebp), %eax": 6,
                "movzwl -(%ebp), %eax;movl %eax, -(%ebp);movzwl -(%ebp), %eax;decl %eax;movl %eax, -(%ebp)": 6,
                "movzwl -(%ebp), %eax;subl $, %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 6,
                "pushl %eax;calll *;movl %eax, %edx;cmpl $-, %edx;popl %ecx": 2,
                "cmpl $-, %edx;popl %ecx;jne  <.text+>;xorl %edx, %edx;pushl %esi": 2,
                "addl %eax, (%ecx);andl $, (%ecx);decl %edx;movw %dx, (%ecx);leave": 1,
                "je  <.text+>;pushl %eax;calll *%ebx;popl %ecx;movl %edi, (%esi)": 1,
                "calll *%ebx;popl %ecx;movl %edi, (%esi);cmpl %edi, (%ebp);je  <.text+>": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl %edi": 1,
                "movl %eax, -(%ebp);je  <.text+>;cmpl %edi, %eax;je  <.text+>;movl , %edi": 1,
                "jmp  <.text+>;testl %ebx, %ebx;jbe  <.text+>;pushl (%esi);movl (%edi), %edi": 1,
                "je  <.text+>;pushl (%esi);calll *(%eax);pushl (%esi);movl , %edi": 1,
                "pushl %edi;leal (%esi), %edi;je  <.text+>;cmpl %eax, (%edi);je  <.text+>": 1,
                "calll *(%eax);xorl %edi, %edi;cmpl %edi, %eax;je  <.text+>;movw (%ebp), %ax": 1,
                "popl %ecx;testl %edi, %edi;jne  <.text+>;movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "calll *%edi;movl %eax, (%esi);movl , %eax;testl %eax, %eax;popl %ecx": 1,
                "testl %edi, %edi;je  <.text+>;cmpw $, (%edi);je  <.text+>;pushl $": 1,
                "pushl %eax;calll *%edi;movl (%esi), %eax;andl $, (%eax);popl %ecx": 1,
                "pushl %esi;movl , %esi;pushl $;pushl %ebx;calll *%esi": 1,
                "movl %eax, (%ecx);calll *%esi;movl , %ecx;movl %eax, (%ecx);movl , %eax": 1,
                "movl %edi, (%eax);movl , %eax;movl %edi, (%eax);movl , %eax;movl %edi, (%eax)": 6,
                "leal -(%ebp), %eax;pushl %eax;calll *%ebx;popl %ecx;popl %ecx": 1,
                "movl %eax, -(%ebp);pushl %edi;movl , %edi;leal (%ebx), %eax;pushl %eax": 1,
                "movl , %esi;leal -(%ebp), %eax;pushl %eax;calll *%esi;movl $, %ecx": 1,
                "calll - <.text+>;leal (%ebx), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "popl %ecx;movl (%esi), %eax;testl %eax, %eax;jne - <.text+>;popl %esi": 1,
                "calll *;testl %eax, %eax;movl %eax, ;je  <.text+>;pushl $": 1,
                "calll *;movl %eax, ;retl;int;int": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %esi;pushl (%ebp);movl %eax, -(%ebp)": 1,
                "movw %si, -(%ebp);calll *%edi;testl %eax, %eax;jne  <.text+>;pushl %esi": 2,
                "movl -(%ebp), %eax;pushl %eax;pushl %ebx;pushl (%ebp);pushl $": 1,
                "pushl %ecx;andl $, -(%ebp);cmpl $, (%ebp);pushl %ebx;pushl %esi": 1,
                "pushl %eax;jne  <.text+>;calll *;jmp  <.text+>;pushl (%ebp)": 1,
                "jne  <.text+>;calll *;jmp  <.text+>;pushl (%ebp);calll *": 1,
                "cmpw $, (%eax);jne  <.text+>;pushl $;pushl (%edi);calll *": 2,
                "je  <.text+>;pushl $;pushl %ecx;calll *;testl %eax, %eax": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;movl %eax, -(%ebp);pushl %esi": 1,
                "je  <.text+>;movl (%ebx), %ecx;cmpl %esi, %ecx;jge  <.text+>;movl %eax, -(%ebp)": 1,
                "cmpl %esi, %ecx;jge  <.text+>;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "jmp  <.text+>;movl -(%ebp), %edx;pushl $;xorl %eax, %eax;popl %ecx": 1,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl (%edx), %eax;movl %ebx, (%eax);leal (%edx), %esi": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);xorl %eax, %eax;xorl %esi, %esi": 1,
                "cmpl -(%ebp), %ecx;jae  <.text+>;movl (%ebx), %eax;leal -(%ebp), %edi;pushl %edi": 2,
                "je  <.text+>;pushl -(%ebp);calll *;movl %esi, -(%ebp);movl -(%ebp), %eax": 2,
                "calll *(%ecx);movl %eax, %edi;cmpl %esi, %edi;jl  <.text+>;xorl %eax, %eax": 1,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);incl -(%ebp);cmpl %esi, %edi": 2,
                "jge - <.text+>;movl -(%ebp), %eax;movl (%ebx), %edx;jmp  <.text+>;xorl %eax, %eax": 1,
                "jne  <.text+>;cmpw %si, -(%ebp);je  <.text+>;movl $, -(%ebp);movl %eax, (%ebx)": 1,
                "cmpl %esi, %edi;jl  <.text+>;movl (%eax), %ecx;leal -(%ebp), %edx;pushl %edx": 1,
                "movl %eax, -(%ebp);movl %esi, -(%ebp);jmp  <.text+>;cmpw %si, -(%ebp);je  <.text+>": 1,
                "cmpl %esi, %edx;jne - <.text+>;jmp - <.text+>;movl -(%ebp), %ecx;cmpl -(%ebp), %ecx": 1,
                "pushl %edi;pushl %ecx;movl %esi, -(%ebp);movl (%eax), %edx;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;calll - <.text+>;cmpl %esi, %eax": 1,
                "movl %eax, -(%ebp);jne  <.text+>;pushl $;movl %esi, -(%ebp);popl %edi": 1,
                "movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl (%ebx), %ebx;movl (%ebx), %eax": 1,
                "movb $-, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $-, -(%ebp)": 1,
                "decl %eax;jne  <.text+>;cmpl %edi, %ebx;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "jmp  <.text+>;cmpl %edi, (%eax);je  <.text+>;incl -(%ebp);movl (%eax), %ecx": 1,
                "movl %edi, (%ebx);movl %edi, (%ebx);calll *;cmpl %edi, %eax;popl %ecx": 1,
                "movl %eax, (%ebx);jne  <.text+>;orw $, %ax;jmp  <.text+>;movl (%ebx), %eax": 1,
                "jne - <.text+>;cmpb $, (%ebx);je  <.text+>;movl $, -(%ebp);leal (%ebx), %eax": 1,
                "calll *(%eax);pushl $;pushl %edi;pushl %edi;jmp  <.text+>": 1,
                "movl (%ebx), %eax;cmpl %edi, %eax;jge  <.text+>;movl (%ebx), %ebx;cmpl %edi, %ebx": 1,
                "pushl %edi;pushl %edi;calll - <.text+>;movw $, %ax;jmp  <.text+>": 2,
                "leal -(%ebp), %edx;pushl %edx;pushl %esi;pushl %eax;calll *(%ecx)": 1,
                "jne  <.text+>;cmpl %edi, %eax;jl  <.text+>;cmpl %edi, (%ebx);je  <.text+>": 1,
                "cmpl %edi, %eax;jl  <.text+>;cmpl %edi, (%ebx);je  <.text+>;movl (%ebx), %eax": 1,
                "cmpl %edi, (%ebx);je  <.text+>;movl (%ebx), %eax;movl (%eax), %ecx;pushl %eax": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);calll  <.text+>;andl $, (%ebx)": 1,
                "movsl (%esi), %es:(%edi);calll  <.text+>;andl $, (%ebx);xorl %edi, %edi;cmpl %edi, (%ebx)": 1,
                "leal (%edi), %esi;movl (%esi), %eax;movl %edi, -(%ebp);calll - <.text+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl %edi, -(%ebp);calll - <.text+>;movl (%esi), %eax;andw $, (%eax)": 1,
                "movl $, %esi;movl %eax, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "cmpl $, (%ebx);popl %ecx;jne - <.text+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;addl $, %esp;andl $, (%eax);jmp  <.text+>;cmpl %edi, %ebx": 1,
                "movl (%ebx), %eax;movl (%eax), %ecx;leal (%ebx), %edx;pushl %edx;pushl %eax": 1,
                "pushl %edx;movl $, (%ebx);movl (%eax), %ecx;pushl %eax;calll *(%ecx)": 1,
                "cmpl %edi, %eax;jge  <.text+>;movl %eax, (%ebx);jmp  <.text+>;cmpl %edi, %esi": 1,
                "cmpb $, %al;jne  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "testb $, (%ecx);je  <.text+>;cmpb $, %al;jne  <.text+>;cmpw %di, ": 1,
                "jne  <.text+>;cmpw %di, ;je  <.text+>;cmpw %di, ;je  <.text+>": 1,
                "calll  <.text+>;cmpl %edi, %eax;movl %eax, -(%ebp);jl  <.text+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl (%eax), %ecx;leal (%ebx), %edx;pushl %edx;pushl %eax": 1,
                "movl (%esi), %eax;cmpl %edi, %eax;movl %esi, -(%ebp);je  <.text+>;cmpl %edi, (%ebx)": 1,
                "calll *(%ecx);cmpl $, %eax;movl %eax, -(%ebp);jne  <.text+>;movw $, %ax": 1,
                "jne  <.text+>;movw $, %ax;jmp  <.text+>;cmpl %edi, -(%ebp);jl  <.text+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <.text+>;cmpl $, (%ebx)": 1,
                "leal -(%ebp), %esi;pushl %esi;pushl %ecx;subl $, %esp;movl %esp, %edi": 1,
                "movsl (%esi), %es:(%edi);pushl %eax;movsl (%esi), %es:(%edi);calll *(%edx);cmpb $, (%ebx)": 2,
                "movl (%esi), %eax;movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl -(%ebp), %eax": 1,
                "calll *(%ecx);movl -(%ebp), %eax;andl $, (%esi);movl %edi, (%ebx);movl %ebx, (%eax)": 1,
                "je - <.text+>;cmpl $, -(%ebp);jne  <.text+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl %esi, (%eax);movl (%ebx), %ecx;movl %eax, (%ecx);movl %eax, (%ebx);cmpl %edi, (%ebx)": 1,
                "movl %ecx, (%esi);movl (%esi), %esi;testl %esi, %esi;movl %esi, (%ebp);je  <.text+>": 1,
                "testl %esi, %esi;movl %esi, (%ebp);je  <.text+>;movl (%esi), %eax;pushl %esi": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi": 2,
                "pushl $;pushl $;movl %edi, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;movl -(%ebp), %esi;cmpl %edi, %esi": 1,
                "jmp - <.text+>;cmpl %edi, -(%ebp);je  <.text+>;pushl -(%ebp);calll *": 1,
                "pushl %esi;calll *;movl $, (%esp);pushl %edi;pushl -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;cmpw $, ;movl %edi, %esi;jne  <.text+>": 1,
                "incl %esi;movl , %ebx;pushl $;pushl %esi;calll *%ebx": 1,
                "testl %esi, %esi;popl %ecx;movl -(%ebp), %ecx;leal (%eax,%eax), %eax;movw %ax, (%ecx)": 1,
                "je  <.text+>;andw $, (%esi);incl %esi;incl %esi;jne - <.text+>": 1,
                "movl (%edi), %esi;xorl %ebx, %ebx;movl %eax, -(%ebp);movl %ebx, -(%ebp);calll - <.text+>": 1,
                "je  <.text+>;pushl %esi;pushl %edi;calll  <.text+>;testw %ax, %ax": 1,
                "popl %ecx;pushl %edi;calll  <.text+>;movl (%edi), %esi;cmpl %ebx, %esi": 1,
                "je  <.text+>;pushl %edi;calll  <.text+>;pushl (%esi);jmp  <.text+>": 1,
                "pushl %eax;calll *;movl (%esi), %eax;cmpl %ebx, %eax;popl %ecx": 1,
                "cmpl %ebx, %eax;popl %ecx;jne - <.text+>;jmp  <.text+>;movl (%esi), %eax": 1,
                "movl %ecx, -(%ebp);calll *;movl -(%ebp), %eax;popl %ecx;movl %eax, (%esi)": 1,
                "calll - <.text+>;movl (%edi), %eax;testb $-, (%eax);je  <.text+>;cmpw %bx, (%esi)": 1,
                "cmpl %ebx, %eax;je  <.text+>;pushl %edi;calll  <.text+>;pushl (%esi)": 1,
                "pushl %edi;calll  <.text+>;pushl (%esi);calll *;popl %ecx": 1,
                "movl %eax, -(%ebp);xorl %edx, %edx;movl (%ebp), %ebx;movl (%ebp), %esi;pushl $": 1,
                "jne  <.text+>;movl (%esi), %edx;movw (%edx), %dx;pushl $;movw %dx, -(%ebp)": 1,
                "calll *%edi;movl (%esi), %ecx;movl %eax, (%ecx);movl (%esi), %eax;addl $, %esp": 1,
                "pushl $;pushl %ebx;calll  <.text+>;pushl $;pushl $": 1,
                "movl %eax, (%ebx);je  <.text+>;andl $, -(%ebp);leal (%eax), %ecx;movl %ecx, (%eax)": 1,
                "popl %ecx;popl %ecx;je  <.text+>;movl (%esi), %eax;addl $, %eax": 1,
                "pushl (%ebx);pushl %ebx;calll  <.text+>;cmpw $, -(%ebp);jne  <.text+>": 1,
                "pushl %ebx;pushl $;pushl %ebx;pushl %ebx;pushl (%ebp)": 2,
                "pushl $;pushl %ebx;pushl %ebx;pushl (%ebp);pushl (%edi)": 2,
                "pushl %ebx;pushl %ebx;pushl (%ebp);pushl (%edi);pushl $": 2,
                "movl (%esi), %eax;pushl %ebx;pushl %ebx;pushl %ebx;pushl $": 8,
                "movl %ecx, (%esi);movl %ecx, (%esi);movl %eax, (%esi);calll *;cmpl %ebx, %eax": 1,
                "pushl %ebx;pushl (%ebp);pushl (%edi);pushl %ebx;calll *(%ecx)": 2,
                "movswl %ax, %eax;jmp  <.text+>;movl %ecx, %eax;movl -(%ebp), %ecx;movl (%ebp), %edx": 1,
                "cmpw , %cx;jle  <.text+>;cmpw %bx, %ax;jle  <.text+>;xorl %eax, %eax": 2,
                "movl %eax, (%esi);movl %ebx, (%esi);leal (%esi), %eax;movl %eax, (%esi);xorl %eax, %eax": 1,
                "leal (%esi), %ecx;setne %al;movw %ax, (%esi);movl (%ebp), %eax;movl (%eax), %edx": 1,
                "pushl %edx;pushl %ecx;pushl %eax;xorl %eax, %eax;movw (%edi), %ax": 2,
                "pushl (%esi);calll - <.text+>;cmpw %bx, -(%ebp);jne  <.text+>;movl %eax, -(%ebp)": 1,
                "jmp  <.text+>;orl $-, -(%ebp);pushl $;pushl -(%ebp);leal (%esi), %eax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx;pushl $": 3,
                "testl %esi, %esi;movl (%ebp), %eax;popl %ecx;popl %ecx;movl %eax, (%ebx)": 1,
                "pushl %eax;movl %ebx, (%ebx);calll *;movl (%ebp), %esi;movl (%ebp), %eax": 1,
                "movsl (%esi), %es:(%edi);popl %ecx;movsl (%esi), %es:(%edi);andl $, (%ebx);movl %eax, (%ebx)": 1,
                "andl $, (%ebx);movl %eax, (%ebx);movw (%ebp), %ax;popl %ecx;movw %ax, (%ebx)": 1,
                "movl %eax, %esi;addl $, %esp;testl %esi, %esi;jne  <.text+>;leal -(%ebp), %esi": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;calll - <.text+>;testl %eax, %eax": 1,
                "calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;leal (%esi), %edi": 3,
                "movl %eax, -(%ebp);je  <.text+>;leal (%esi), %edi;pushl %edi;pushl -(%ebp)": 3,
                "jne  <.text+>;leal (%esi), %ebx;pushl %ebx;calll *;testl %eax, %eax": 3,
                "jmp  <.text+>;calll - <.text+>;jmp  <.text+>;pushl -(%ebp);calll - <.text+>": 2,
                "leal -(%ebx,%eax,), %eax;popl %ecx;movl %eax, (%ebp);movl $, (%ebp);movl (%ebp), %eax": 1,
                "incl %ebx;addl %edi, %edx;decl %ecx;movw %dx, (%eax);jne - <.text+>": 1,
                "jmp  <.text+>;testl %edi, %edi;pushl %esi;movl , %esi;je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;calll - <.text+>;pushl $": 1,
                "xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);jne  <.text+>;cmpl $, -(%ebp);jne  <.text+>": 1,
                "jne  <.text+>;cmpl $, (%esi);jne  <.text+>;calll - <.text+>;testw %ax, %ax": 1,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;pushl $;calll *": 1,
                "movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);leal (%esi), %eax": 1,
                "movl (%esi), %eax;testl %eax, %eax;movl %eax, -(%ebp);jne - <.text+>;movl -(%ebp), %edi": 1,
                "calll *;popl %ecx;movl %edi, %eax;jmp  <.text+>;pushl $-": 1,
                "jne - <.text+>;pushl (%ebp);pushl $;calll  <.text+>;pushl (%ebp)": 1,
                "cmpl $-, %esi;je  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;calll - <.text+>;calll - <.text+>;xorl %eax, %eax;popl %esi": 1,
                "je  <.text+>;andl $, (%eax);movl (%esi), %eax;andl $, (%eax);pushl $": 1,
                "movw $, (%eax);movl (%esi), %eax;movl %ecx, (%eax);movl (%esi), %eax;addl $, %eax": 1,
                "pushl %edi;calll *%esi;popl %ecx;popl %ecx;popl %esi": 1,
                "pushl %ebx;movswl (%ebp), %ebx;pushl %edi;movswl (%ebp), %edi;leal (%ebx,%edi), %eax": 1,
                "calll *;testl %eax, %eax;movl (%ebp), %edx;popl %ecx;popl %ecx": 1,
                "movl (%edx), %eax;xorl %ecx, %ecx;cmpw %cx, (%ebp);setne %cl;shll $, %ecx": 1,
                "int;int;movw (%esi), %ax;testb $, %al;pushl %ebx": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;movw (%esi), %ax;testb $, %ah": 1,
                "popl %ecx;popl %ecx;jne  <.text+>;movw (%esi), %ax;andw $, %ax": 2,
                "pushl %eax;pushl (%edi);pushl (%esi);calll - <.text+>;testl %eax, %eax": 2,
                "testl %eax, %eax;je  <.text+>;movw (%esi), %ax;cmpw (%edi), %ax;jge  <.text+>": 1,
                "je  <.text+>;movw (%esi), %ax;cmpw (%edi), %ax;jge  <.text+>;testb $, (%esi)": 1,
                "movw (%esi), %ax;cmpw (%edi), %ax;jge  <.text+>;testb $, (%esi);je  <.text+>": 1,
                "testb $, (%esi);je  <.text+>;movswl %ax, %eax;pushl %eax;pushl (%edi)": 1,
                "int;int;xorl %eax, %eax;xorl %edx, %edx;incl %eax": 1,
                "int;xorl %eax, %eax;xorl %edx, %edx;incl %eax;cmpl %edx, (%ecx)": 1,
                "int;int;int;testl %ecx, %ecx;je  <.text+>": 1,
                "cmpw $, (%ecx);je  <.text+>;testl %eax, %eax;je  <.text+>;cmpw $, (%eax)": 1,
                "movl %ecx, %eax;retl;xorl %eax, %eax;incl %eax;retl": 1,
                "testw %ax, %ax;je - <.text+>;movswl (%edi), %eax;pushl %eax;pushl (%edi)": 1,
                "xorl %edi, %edi;cmpl %edi, %esi;jne  <.text+>;cmpl %edi, %ebx;je  <.text+>": 1,
                "testw %ax, %ax;jne - <.text+>;movl (%esi), %eax;movl (%ebx), %edi;xorl %ecx, %ecx": 1,
                "cmpl %ecx, %edi;je  <.text+>;cmpw %cx, (%edi);je  <.text+>;movl %eax, %esi": 1,
                "movl (%esi), %eax;movl (%ebx), %edx;orl %eax, %edx;cmpl %eax, %edx;jne  <.text+>": 1,
                "movl %eax, (%ebp);calll - <.text+>;movl (%ebp), %edi;jmp  <.text+>;testb $, (%edi)": 1,
                "movl $, %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);xorl %ecx, %ecx;incl %ecx": 1,
                "rep  stosl %eax, %es:(%edi);xorl %ecx, %ecx;incl %ecx;movw %ax, (%edx);movw %ax, (%edx)": 1,
                "movw %cx, (%edx);movw %ax, (%edx);movl %eax, (%edx);movw %ax, (%edx);movw %ax, (%edx)": 1,
                "movw %ax, (%edx);movw %ax, (%edx);movw %cx, (%edx);movw %ax, (%edx);movw %ax, (%edx)": 1,
                "movw $, (%esi);calll  <.text+>;pushl $;pushl %edi;pushl %ebx": 1,
                "int;testl %edi, %edi;je  <.text+>;pushl %ebx;movl (%edi), %ebx": 1,
                "testw %cx, %cx;jg  <.text+>;pushl %eax;pushl %ebx;calll  <.text+>": 1,
                "calll - <.text+>;movw -(%ebp), %ax;popl %edi;popl %esi;popl %ebx": 4,
                "movl (%ebp), %edx;testl %edx, %edx;jne  <.text+>;movl %ebx, %edx;calll - <.text+>": 1,
                "jne  <.text+>;movl %ebx, %edx;calll - <.text+>;jmp  <.text+>;pushl %esi": 1,
                "cmpw %si, %ax;movb $, (%edi);movw %ax, (%ebx);jne  <.text+>;xorw %ax, %ax": 1,
                "movswl %ax, %eax;je  <.text+>;shrl %eax;movw %ax, (%ebx);movswl %ax, %eax": 1,
                "movw (%ebx), %ax;popl %edi;popl %esi;popl %ebp;retl $": 1,
                "movb %cl, (%eax);movw (%ebx), %cx;movl (%ebx), %eax;movw %cx, (%eax);movw (%ebx), %cx": 2,
                "movl (%edi), %edx;movzwl %ax, %eax;addl %esi, %eax;pushl %eax;movw (%edi), %ax": 6,
                "movw %ax, (%esi);movw (%ecx), %dx;movw %dx, (%esi);movzwl (%ecx), %ecx;movl (%edi), %esi": 1,
                "shrl $, %ecx;movzwl %ax, %edi;movl -(%ebp), %eax;addl %eax, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "shrl $, %ecx;addl %eax, %edi;rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx;andl $, %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);calll *;movl -(%ebp), %esi": 1,
                "movzwl (%esi), %eax;addl %esi, %eax;pushl %eax;calll *;leal (%eax,%eax), %eax": 1,
                "popl %ecx;leal (%eax,%eax), %eax;jmp  <.text+>;movzwl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "cmpw $, (%edi);jb  <.text+>;movl (%edi), %eax;testb $, (%eax);je  <.text+>": 1,
                "movw -(%ebp), %cx;movw %cx, (%eax);movw -(%ebp), %cx;movw %cx, (%eax);movl -(%ebp), %ecx": 1,
                "orl %eax, %ecx;movl (%ebp), %eax;movw %cx, (%eax);popl %ebp;retl $": 1,
                "movl %ecx, %edx;shrl $, %edx;andl $, %ecx;andl $, %edx;shll %ecx": 1,
                "movw $, (%edx);jmp  <.text+>;pushl $;xorl %eax, %eax;movl %edx, %edi": 1,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <.text+>": 1,
                "jmp  <.text+>;movzbl %al, %eax;movw (,%eax,), %si;movw %si, (%ecx);decl %ecx": 1,
                "movw %si, (%ecx);decl %ecx;decl %ecx;decl %edx;decl %edi": 1,
                "decl %edx;decl %edi;jne - <.text+>;popl %edi;popl %esi": 1,
                "subl %edi, %ecx;movl %ecx, (%esi);jmp  <.text+>;movl (%ebp), %esi;leal -(%ecx,%esi), %ecx": 1,
                "leal -(%ecx,%esi), %ecx;movl (%ebp), %esi;xorl %eax, %eax;testl %edx, %edx;leal -(%esi,%edx), %esi": 1,
                "movb (%esi), %bl;cmpb $-, %bl;jae  <.text+>;movsbw %bl, %di;jmp  <.text+>": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %ecx;andl $, -(%ebp);pushl %ebx": 1,
                "cmpl %edx, %eax;jle  <.text+>;orl $-, -(%ebp);subl %edx, %eax;movl %eax, (%ecx)": 2,
                "je  <.text+>;movw (%ebx), %si;movl $, %eax;cmpw %ax, %si;jae  <.text+>": 1,
                "movsbl (%eax), %eax;jmp  <.text+>;andl $, (%ebp);cmpw $, %si;jb  <.text+>": 1,
                "addb $, %al;movsbl %al, %eax;jmp  <.text+>;pushl $;pushl %esi": 1,
                "incl %ebx;cmpw $, (%ebx);movl %edi, -(%ebp);jne - <.text+>;movb $, (%edi)": 1,
                "movl %edi, %eax;cltd;subl %edx, %eax;movl (%ecx), %edx;sarl %eax": 1,
                "jmp  <.text+>;andl $, (%ebp);cmpw $, %bx;jb  <.text+>;cmpw $, %bx": 1,
                "cmpw $, %bx;jb  <.text+>;cmpw $, %bx;ja  <.text+>;movb (%esi), %al": 1,
                "andl $, (%esi);calll *;testl %eax, %eax;je  <.text+>;leal -(%ebp), %eax": 1,
                "calll - <.text+>;movzwl -(%ebp), %eax;pushl %eax;movzwl -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;pushl %esi;movl %ecx, %esi;leal -(%ebp), %ecx;calll - <.text+>": 1,
                "pushl %esi;movl %ecx, %esi;leal -(%ebp), %ecx;calll - <.text+>;xorl %ebx, %ebx": 1,
                "jmp  <.text+>;pushl %edi;pushl (%ebp);leal -(%ebp), %eax;pushl (%ebp)": 1,
                "pushl (%ebp);leal (%esi), %ecx;pushl %eax;calll - <.text+>;movl %eax, %edi": 1,
                "movl %eax, %edi;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl %esi, %ecx": 1,
                "calll - <.text+>;pushl $;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;movb $, -(%ebp);calll - <.text+>": 1,
                "movb $, -(%ebp);calll - <.text+>;leal (%ebp), %ecx;movb $, -(%ebp);calll - <.text+>": 5,
                "leal -(%ebp), %ecx;movb %bl, -(%ebp);calll - <.text+>;popl %edi;movl (%ebp), %ecx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl %ecx, %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;movl $, %ebx;movl %ebx, %ecx;mull %ecx": 1,
                "movl (%edi), %eax;movl (%edi), %edi;adcl %edx, %ecx;mull %ebx;xorl %ebx, %ebx": 1,
                "addl %edi, %eax;adcl %ebx, %edx;cmpl %edx, %ecx;jb  <.text+>;ja  <.text+>": 1,
                "jmp  <.text+>;subl %esi, %eax;sbbl %ecx, %edx;movl %edx, %ecx;xorl %edx, %edx": 1,
                "movl %esi, (%eax);popl %esi;movl %ecx, (%eax);movl %edx, (%eax);popl %ebx": 1,
                "calll - <.text+>;movl -(%ebp), %eax;orl -(%ebp), %eax;pushl $;popl %eax": 2,
                "cmpl %eax, -(%ebp);je  <.text+>;incl %eax;leave;retl $": 1,
                "movl (%esi), %eax;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ecx": 5,
                "cmpw $, %ax;leal (%esi), %eax;jne  <.text+>;pushl %ebx;pushl %ebx": 1,
                "jmp  <.text+>;pushl %eax;pushl (%esi);pushl -(%ebp);pushl (%edi)": 1,
                "movw %dx, (%esi);movw (%eax), %dx;movw %dx, (%esi);movl (%eax), %edx;movl %edx, (%esi)": 1,
                "movw (%esi), %ax;pushl %ebx;pushl %eax;calll  <.text+>;pushl %ebx": 1,
                "jle  <.text+>;cmpl $, %ecx;jne  <.text+>;movl $, -(%ebp);jmp  <.text+>": 1,
                "movl $, -(%ebp);jmp  <.text+>;pushl -(%ebp);movl (%esi), %ecx;leal (%esi), %eax": 1,
                "pushl (%edi);pushl $;calll *(%ecx);addl $, %esp;movl %eax, (%ebp)": 1,
                "pushl (%esi);movl (%esi), %ecx;leal (%esi), %eax;pushl %eax;pushl (%esi)": 1,
                "pushl (%edi);pushl $;calll *(%ecx);addl $, %esp;movl (%ebp), %ecx": 1,
                "movw $, (%esi);je  <.text+>;cmpw $, %cx;je  <.text+>;cmpw %dx, %cx": 1,
                "cmpw %dx, %cx;jne  <.text+>;movl (%edi), %eax;cmpb $-, (%eax);jne  <.text+>": 1,
                "cmpb $-, (%eax);jne  <.text+>;cmpw $-, %cx;jne  <.text+>;movl (%edi), %eax": 1,
                "calll *(%ecx);addl $, %esp;cmpw %bx, (%ebp);je - <.text+>;pushl (%esi)": 1,
                "pushl (%esi);calll - <.text+>;xorl %eax, %eax;movw (%esi), %ax;pushl %eax": 1,
                "calll *(%ecx);addl $, %esp;movw (%ebp), %di;pushl -(%ebp);calll *": 1,
                "movw %di, %ax;popl %edi;popl %esi;popl %ebx;leave": 5,
                "pushl %edi;movl (%eax), %edi;movl %esi, -(%ebp);pushl (%edi);xorl %ebx, %ebx": 1,
                "pushl %edi;pushl (%esi);movl %ebx, -(%ebp);pushl $;calll *(%esi)": 1,
                "je - <.text+>;jmp  <.text+>;movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll *(%esi);addl $, %esp;pushl -(%ebp);calll - <.text+>;leal -(%ebp), %eax": 1,
                "pushl -(%ebp);calll - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "calll - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %edi": 1,
                "movw -(%ebp), %ax;addl $, %esp;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "decl (%edx);cmpl %eax, (%edx);jne  <.text+>;movl %esi, (%edx);leal (%eax), %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;pushl %esi;pushl %edi": 1,
                "movl %edi, (%eax);movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %edx;movl %eax, (%edx)": 1,
                "movl %edx, (%eax);movl (%ecx), %edx;movl %eax, (%edx);movl %eax, (%ecx);movl (%ecx), %edx": 1,
                "retl $;movl %edx, (%eax);movl (%edx), %esi;movl %esi, (%eax);movl (%edx), %esi": 1,
                "incl %ecx;movw %cx, (%eax);movl %ecx, (%eax);popl %ebp;retl $": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);popl %ebp;retl $;int": 2,
                "movl (%eax), %edx;movl %edx, (%ecx);movl (%eax), %ecx;testl %ecx, %ecx;je  <.text+>": 2,
                "je  <.text+>;movl (%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;pushl %eax": 2,
                "movl $, -(%ebp);jmp  <.text+>;cmpw %bx, (%edi);je  <.text+>;movl $, -(%ebp)": 1,
                "jne  <.text+>;cmpw %bx, (%edi);je  <.text+>;leal (%esi), %eax;pushl %eax": 1,
                "movswl %ax, %eax;movl %eax, -(%ebp);popl %ebx;movl -(%ebp), %eax;popl %esi": 1,
                "popl %ebx;movl -(%ebp), %eax;popl %esi;leave;retl $": 1,
                "testl %esi, %esi;jne  <.text+>;movl (%edi), %eax;cmpl (%ebx), %eax;jne  <.text+>": 1,
                "cmpw (%ebx), %ax;jae  <.text+>;jmp  <.text+>;cmpw (%ebx), %ax;je  <.text+>": 1,
                "popl %esi;cmpl $, %esi;jne  <.text+>;pushl $;popl %esi": 1,
                "cmpl $, %esi;jne  <.text+>;pushl $;popl %esi;cmpl $, %esi": 1,
                "testl %eax, %eax;jne  <.text+>;testb $, (%edi);je  <.text+>;movw (%edi), %ax": 1,
                "cmpl %eax, %esi;je  <.text+>;cmpw %ax, (%edi);je  <.text+>;cmpw %ax, -(%ebp)": 1,
                "pushl %eax;pushl %ebx;pushl %edi;calll  <.text+>;movswl %ax, %eax": 1,
                "pushl %edi;calll  <.text+>;movswl %ax, %eax;testl %eax, %eax;je  <.text+>": 1,
                "testw %si, %si;jl  <.text+>;movl %eax, %esi;movl -(%ebp), %eax;pushl (%eax)": 1,
                "movl %eax, %esi;movl -(%ebp), %eax;pushl (%eax);calll  <.text+>;movl -(%ebp), %eax": 1,
                "movswl %ax, %esi;testl %esi, %esi;jne  <.text+>;pushl $;popl %esi": 1,
                "movswl %ax, %esi;testl %esi, %esi;jne  <.text+>;movl $, %esi;movl -(%ebp), %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;movl , %esi;movl (%esi), %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl %ebx;calll  <.text+>;movl %eax, %esi": 1,
                "calll  <.text+>;movl %eax, %esi;cmpl $, %esi;jne  <.text+>;movl (%ebp), %eax": 1,
                "calll - <.text+>;movl %eax, %esi;cmpl $, %esi;je  <.text+>;cmpl %edi, %esi": 1,
                "calll - <.text+>;xorl %ecx, %ecx;cmpl %eax, (%ebp);sete %cl;movw %cx, %ax": 1,
                "movw %ax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;pushl $;addl $, %eax;pushl %eax;calll - <.text+>": 1,
                "popl %ecx;jne  <.text+>;movl %ebx, (%edi);movl $, %eax;jmp  <.text+>": 1,
                "cmpw %bx, %ax;je  <.text+>;pushl $;pushl %esi;calll *": 1,
                "andw $, (%eax);pushl $;pushl %esi;calll *;popl %ecx": 1,
                "je  <.text+>;movl -(%ebp), %ecx;testl %ecx, %ecx;movl $, %eax;je  <.text+>": 1,
                "je  <.text+>;movw $, (%ecx);testl %ebx, %ebx;movl %ebx, -(%ebp);jne - <.text+>": 1,
                "leal -(%ebp), %eax;movl %ecx, %edi;pushl %eax;movl %edi, -(%ebp);calll *": 1,
                "leal (%esi,%eax), %ecx;cmpl %edx, %ecx;jle  <.text+>;movl $, -(%ebp);jmp  <.text+>": 1,
                "pushl %edi;pushl %eax;calll *;movl %esi, %ecx;movl %ecx, %eax": 1,
                "popl %ecx;testl %eax, %eax;jne - <.text+>;movl -(%ebp), %ecx;movw -(%ebp), %ax": 1,
                "jle  <.text+>;movl $, -(%ebp);jmp  <.text+>;cmpw $, %cx;movl $, %edi": 1,
                "pushl %ebx;jmp  <.text+>;cmpw $, %cx;movl $, %edi;jle  <.text+>": 1,
                "jbe  <.text+>;movl %edi, -(%ebp);pushl $;pushl (%ebp);calll *": 1,
                "movl %edx, -(%ebp);movl $, -(%ebp);jne  <.text+>;movl %ecx, %eax;cmpw $, (%eax)": 1,
                "cmpw $, (%eax);je - <.text+>;movl (%ebp), %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "movzwl (%edx,%ecx,), %ecx;incl -(%ebp);cmpw $, %cx;movl %ecx, -(%ebp);jae  <.text+>": 3,
                "movw (%eax), %ax;cmpw $, %cx;movw %ax, -(%ebp);je  <.text+>;movswl -(%ebp), %eax": 1,
                "cmpw %di, -(%ebp);je  <.text+>;movswl -(%ebp), %eax;leal (%esi,%eax,), %eax;cmpw %di, -(%eax)": 1,
                "jmp  <.text+>;movl $, -(%ebp);movl %ebx, (%ebp);cmpw $, -(%ebp);jle  <.text+>": 2,
                "pushl $;popl %ebx;subl %ebx, %edi;je  <.text+>;leal -(%esi,%edi,), %eax": 2,
                "movswl -(%ebp), %ebx;incl -(%ebp);incl -(%ebp);cmpw $, %cx;movl %ecx, -(%ebp)": 1,
                "jmp  <.text+>;movswl -(%ebp), %ecx;movl (%ebp), %edx;movzwl (%edx,%ecx,), %ecx;movswl -(%ebp), %edx": 1,
                "movw (%eax), %ax;jmp - <.text+>;pushl $;popl %ecx;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;je  <.text+>;cmpl $, %eax;jle  <.text+>;cmpl $, %eax": 1,
                "xorl %edx, %edx;xorl %eax, %eax;jmp  <.text+>;cmpw $, -(%ebp);jne  <.text+>": 1,
                "xorl %eax, %eax;incl %eax;xorl %edx, %edx;cmpl %edx, %eax;movl %edx, (%ebp)": 1,
                "pushl (%ebp);pushl %esi;calll  <.text+>;movl %eax, (%ebp);jmp  <.text+>": 1,
                "cmpw $, (%ebp);jne  <.text+>;andl $, (%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "cmpl $, %eax;jne  <.text+>;movl (%ecx), %eax;cmpw $, (%eax);movl %ebx, -(%ebp)": 1,
                "cmpw $, -(%eax);jne  <.text+>;movw %dx, (%eax);jmp  <.text+>;movw %dx, -(%eax)": 1,
                "movl $, -(%ebp);cmpl $, (%ebp);je  <.text+>;movswl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "je  <.text+>;incl -(%ebp);movw %cx, (%eax);jmp  <.text+>;movl $, -(%ebp)": 1,
                "je  <.text+>;movl $, -(%ebp);movswl -(%ebp), %eax;movswl -(%ebp), %ecx;cltd": 1,
                "movl $, %ebx;jg  <.text+>;andw $, (%esi);leal (%esi), %eax;pushl %ebx": 1,
                "calll *;popl %ecx;popl %ecx;pushl $;popl %edi": 1,
                "movl (%ebp), %edx;pushl $;pushl -(%ebp);leal (%esi,%eax,), %edi;leal (%eax,%eax), %ecx": 1,
                "movl %eax, (%ebp);je  <.text+>;movl $, (%ebp);movl (%ebp), %eax;andw $, (%eax)": 1,
                "testl %eax, %eax;jne  <.text+>;movl (%ebp), %eax;movw $, (%eax);jmp  <.text+>": 2,
                "movl (%ebp), %eax;movw $, (%eax);jmp  <.text+>;movl -(%ebp), %edx;cmpw $, %dx": 1,
                "cmpw $, %dx;movl (%ebp), %edi;jg  <.text+>;pushl $;popl %edx": 1,
                "cmpw %bx, (%ecx);je  <.text+>;decl %eax;decl %ecx;decl %ecx": 1,
                "pushl %eax;calll - <.text+>;cmpw %bx, %ax;movl %eax, (%ebp);jne - <.text+>": 1,
                "leal (%edx,%edx), %eax;movw %ax, (%edi);jmp  <.text+>;cmpw $, -(%ebp);jne  <.text+>": 1,
                "movl (%ebp), %eax;andw $, (%eax);movl $, (%ebp);cmpw $, (%ebp);jne  <.text+>": 1,
                "cmpw $, -(%ebp);je  <.text+>;movl -(%ebp), %eax;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "calll - <.text+>;testw %ax, %ax;movl -(%ebp), %edi;jne  <.text+>;andl $, -(%ebp)": 1,
                "andl $, -(%ebp);xorl %esi, %esi;incl %esi;jmp - <.text+>;movl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);jmp - <.text+>;jne - <.text+>;cmpw $, (%ebp);jne  <.text+>": 1,
                "je  <.text+>;pushl -(%ebp);movb $, (%eax);jmp  <.text+>;cmpw $, -(%ebp)": 1,
                "pushl -(%ebp);movb $, (%eax);jmp  <.text+>;cmpw $, -(%ebp);pushl $": 1,
                "pushl (%ebx);pushl %edi;calll  <.text+>;jmp - <.text+>;cmpw $, -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;movl (%ebx), %ecx;pushl %esi;movl %ecx, (%eax)": 1,
                "movl -(%ebp), %ecx;pushl %esi;movl %esi, (%ebx);pushl %edi;movl %ecx, (%eax)": 1,
                "andl $, (%ebp);pushl -(%ebp);pushl %edi;calll  <.text+>;jmp  <.text+>": 1,
                "calll - <.text+>;xorl %ebx, %ebx;testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>": 1,
                "jle  <.text+>;movl %eax, %ebx;pushl %eax;calll - <.text+>;testl %eax, %eax": 1,
                "movl %eax, %ebx;pushl %eax;calll - <.text+>;testl %eax, %eax;jne - <.text+>": 1,
                "testl %eax, %eax;jne - <.text+>;pushl %esi;calll - <.text+>;movl %eax, %esi": 1,
                "movl (%ebx), %esi;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx": 3,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;popl %ecx;movl %eax, (%ebx)": 3,
                "movl (%ebp), %ebx;movl (%ebx), %eax;cmpl (%ebp), %eax;jge  <.text+>;pushl %edi": 1,
                "popl %edi;xorl %eax, %eax;popl %ebx;popl %ebp;retl $": 1,
                "movw %ax, (%ebx);jmp  <.text+>;movl (%ebp), %esi;movl %edi, %ecx;movl %eax, %edi": 1,
                "movw %di, (%esi);calll - <.text+>;pushl $;pushl %ebx;pushl %esi": 1,
                "addl $, %esp;popl %edi;xorl %eax, %eax;popl %esi;popl %ebp": 1,
                "movl %eax, -(%ebp);pushl %edi;jne  <.text+>;pushl $;popl %edi": 1,
                "movl (%eax), %eax;addl (%ebp), %eax;pushl %eax;pushl (%esi);calll - <.text+>": 1,
                "addl (%ebp), %eax;pushl %eax;pushl (%esi);calll - <.text+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl (%esi);calll - <.text+>;cmpl $, %eax;jb  <.text+>": 1,
                "cmpl %ebx, (%esi);je  <.text+>;movl (%esi), %edi;shrl %edi;jmp  <.text+>": 1,
                "movl (%esi), %ecx;decl %edi;movw %dx, (%ecx,%eax,);xorl %ebx, %ebx;cmpl %ebx, %edi": 1,
                "movw %dx, (%ecx,%eax,);xorl %ebx, %ebx;cmpl %ebx, %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;leal -(%ebp), %eax;pushl %eax;calll *;leal (%eax,%eax), %eax": 1,
                "je  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>;pushl (%esi)": 1,
                "cmpl (%esi), %ecx;jne  <.text+>;movw (%eax), %cx;movl (%esi), %edx;cmpw (%edx), %cx": 1,
                "pushl (%edi);calll - <.text+>;movl %eax, (%esi);movl %edi, (%esi);movw $, (%esi)": 1,
                "jae  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>;movl (%ebp), %eax": 1,
                "addl %eax, (%edi);pushl (%edi);pushl (%esi);calll - <.text+>;movl (%esi), %ecx": 2,
                "movl (%ecx), %eax;addl (%ecx), %eax;jmp  <.text+>;leal (%esi), %edi;addl %eax, (%edi)": 1,
                "je  <.text+>;andl $, (%esi);cmpl $, %eax;jb  <.text+>;movl (%ebx), %ecx": 1,
                "jb  <.text+>;movl (%ebx), %ecx;shll $, %ecx;sarl $, %ecx;cmpl %ecx, %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl $;pushl (%ebp);pushl (%esi)": 1,
                "je  <.text+>;movl (%ebx), %ecx;movl (%edi), %eax;movl (%ecx), %ecx;movl (%ebx), %edx": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;movl (%ebx), %edi;movl %esi, %ecx": 3,
                "xorl %edx, %edx;movl %eax, (%ebx);movl -(%ebp), %eax;orl %edx, %ecx;pushl %ebx": 1,
                "movl %eax, (%ecx);movl (%ebx), %eax;movl (%ebx), %ecx;leal (%eax), %edx;cmpl %ecx, %edx": 1,
                "movl (%ebx), %eax;movl %ecx, %edi;subl %eax, %edi;subl %ecx, %eax;addl $, %eax": 1,
                "leal (%ebx), %edx;addl %edx, %edi;cmpl %ecx, %eax;jae  <.text+>;subl %eax, %ecx": 1,
                "shrl $, %ecx;leal (%ebx), %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx": 4,
                "shll $, %ecx;sarl $, %ecx;movl %ecx, %esi;subl %edx, %esi;cmpl %esi, (%ebp)": 1,
                "subl %eax, %edx;movl (%ebx), %eax;leal -(%edx,%ecx), %edi;movl (%ebp), %ecx;cmpl %ecx, %eax": 1,
                "movl (%ebx), %eax;leal -(%edx,%ecx), %edi;movl (%ebp), %ecx;cmpl %ecx, %eax;jae  <.text+>": 1,
                "leal -(%edx,%ecx), %edi;movl (%ebp), %ecx;cmpl %ecx, %eax;jae  <.text+>;subl %eax, %ecx": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%eax), %eax;shll $, %eax": 2,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%eax), %eax;shll $, %eax;sarl $, %eax": 2,
                "pushl %ecx;pushl (%ebx);leal (%ebx), %eax;pushl %eax;pushl (%edi)": 2,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl $;xorl %edi, %edi;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl $;pushl %eax;calll *%esi;movl -(%ebp), %esi": 1,
                "movw (%eax), %cx;testw %cx, %cx;jne - <.text+>;movl -(%ebp), %eax;leal -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);calll *;movl %eax, %esi;testl %esi, %esi;popl %ecx": 1,
                "cmpw $, (%esi,%eax,);jne - <.text+>;cmpw $, (%ebx,%edi,);je  <.text+>;orl $-, -(%ebp)": 1,
                "movw (%eax), %ax;testw %ax, %ax;jne  <.text+>;pushl %ebx;calll *": 1,
                "jmp - <.text+>;pushl %eax;leal (%edi,%edi), %esi;leal (%esi,%ebx), %eax;pushl %eax": 1,
                "movl (%esi), %ecx;cmpl (%ebx), %ecx;jb  <.text+>;cmpw %ax, (%esi);je  <.text+>": 1,
                "cmpl $, %eax;jne  <.text+>;testb $, -(%ebp);movl (%ebx), %eax;je  <.text+>": 1,
                "movl (%eax), %eax;addl -(%ebp), %eax;pushl %eax;pushl (%ebx);calll - <.text+>": 2,
                "pushl $;leal (%ebx), %esi;pushl %esi;pushl (%ebx);calll - <.text+>": 2,
                "movl (%ecx), %ecx;jmp  <.text+>;movl (%eax), %eax;addl -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;andl %eax, (%ebx);andl %eax, (%ebx)": 1,
                "shrl $, %eax;testb $, %dl;movw %ax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl -(%ebp), %eax;xorl %edx, %edx;orl %edx, %eax;movl %ecx, (%ebx);movl %eax, (%ebx)": 1,
                "movw (%ecx), %di;incl %edx;incl %ecx;incl %ecx;testw %di, %di": 1,
                "popl %ecx;popl %ecx;pushl %ebx;movl %esi, (%ebx);calll - <.text+>": 1,
                "pushl %ebx;pushl %edi;movl (%eax), %edi;addl (%eax), %edi;movl (%esi), %eax": 1,
                "addl (%eax), %edi;movl (%esi), %eax;xorl %ecx, %ecx;incl %ecx;cmpl $, %eax": 1,
                "testl %ebx, %ebx;movl $, %ecx;je  <.text+>;cmpl $, %ebx;movl (%esi), %ecx": 1,
                "leal -(%ebx), %eax;movw (%ecx), %dx;incl %ecx;incl %ecx;testw %dx, %dx": 1,
                "xorl %eax, %eax;popl %edi;popl %ebx;leave;retl $": 1,
                "cmpl %ecx, %edx;leal (%eax,%ebx), %esi;ja  <.text+>;leal (%ebx), %edi;movsl (%esi), %es:(%edi)": 1,
                "leal (%ebx), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);addl $, (%ebx)": 1,
                "jmp  <.text+>;subl %eax, %ecx;movl %ecx, %eax;shrl $, %ecx;leal (%ebx), %edx": 1,
                "subl %ecx, %eax;movl (%ebx), %ecx;addl $, %eax;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "leal (%ebx), %esi;pushl (%esi);movl %eax, (%ebx);calll - <.text+>;leal -(%ebp), %ecx": 1,
                "pushl (%esi);calll - <.text+>;movl -(%ebp), %ecx;movzwl %ax, %eax;movzwl %cx, %edx": 1,
                "je  <.text+>;movl (%ebx), %ecx;xorl %edx, %edx;movw (%ebx), %dx;addw %ax, %dx": 1,
                "addw %ax, %dx;subl $, %edx;movzwl %dx, %edx;cmpl %ecx, %edx;ja  <.text+>": 1,
                "leal (%ebx), %eax;movl (%eax), %edx;xorl %esi, %esi;movw (%ebx), %si;shll $, %edx": 1,
                "jmp  <.text+>;movl (%ebx), %edx;subl %edx, %ecx;leal (%edx,%ebx), %esi;movl %ecx, %edx": 1,
                "movl (%ebx), %edx;subl %edx, %ecx;leal (%edx,%ebx), %esi;movl %ecx, %edx;shrl $, %ecx": 1,
                "addl %esi, -(%ebp);subl %ecx, %eax;movl (%ebx), %ecx;leal -(%eax,%edx), %esi;movl (%ebx), %eax": 1,
                "sarl $, %eax;subl %ecx, %eax;leal -(%eax), %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "shrl $, %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 5,
                "calll - <.text+>;movw %di, (%esi);pushl (%esi);calll *;popl %ecx": 1,
                "popl %eax;jmp  <.text+>;movl (%esi), %eax;xorl %ecx, %ecx;movw (%eax), %cx": 1,
                "movl %edi, (%ebp);je  <.text+>;movl (%ebx), %eax;movl (%eax), %eax;addl (%edi), %eax": 1,
                "movl (%eax), %eax;addl -(%ebp), %eax;movl %eax, (%ebx);jmp - <.text+>;pushl %ebx": 1,
                "pushl %edi;pushl %ebx;leal (%ebx), %esi;movl %edi, (%ebp);calll - <.text+>": 1,
                "jne  <.text+>;movl %edi, %ecx;movl (%ebx), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "pushl %ebx;calll - <.text+>;testl %eax, %eax;jne  <.text+>;pushl %ebx": 1,
                "jne  <.text+>;pushl %ebx;calll - <.text+>;xorl %eax, %eax;popl %esi": 1,
                "calll - <.text+>;testl %eax, %eax;je - <.text+>;pushl %ebx;calll - <.text+>": 1,
                "cmpl %esi, (%ebx);movl %ecx, (%ebx);jne - <.text+>;cmpw %di, (%ebx);je - <.text+>": 1,
                "movl %ecx, (%ebx);jne - <.text+>;cmpw %di, (%ebx);je - <.text+>;movl (%eax), %ecx": 1,
                "xorl %edi, %edi;cmpw %di, (%esi);je  <.text+>;pushl %esi;calll - <.text+>": 1,
                "calll - <.text+>;jmp - <.text+>;pushl %esi;calll - <.text+>;testl %eax, %eax": 1,
                "leal (%ebx), %eax;popl %ecx;movw (%eax), %cx;xorl %edi, %edi;cmpw %di, %cx": 1,
                "je  <.text+>;cmpw $, %cx;jne  <.text+>;movw %di, (%eax);cmpw %di, (%ebx)": 1,
                "pushl %ebx;calll - <.text+>;cmpl %edi, %eax;movl %eax, (%ebx);jne  <.text+>": 1,
                "movl , %esi;movl %eax, (%ebx);movw $, (%ebx);movl %edi, (%ebx);calll *%esi": 1,
                "jmp - <.text+>;movl (%ebx), %eax;movl (%eax), %ecx;addl -(%ebp), %ecx;movl %ecx, (%ebx)": 1,
                "calll - <.text+>;jmp  <.text+>;cmpw %di, -(%ebp);jne  <.text+>;pushl (%ebp)": 1,
                "jne  <.text+>;movw (%esi), %dx;cmpw (%ebx), %dx;je  <.text+>;cmpl %ecx, %eax": 1,
                "testb $, (%eax);jne  <.text+>;cmpl %edi, (%ebx);jne  <.text+>;movl %eax, (%ebx)": 1,
                "cmpl %edi, %esi;jne - <.text+>;jmp  <.text+>;pushl %esi;calll - <.text+>": 1,
                "pushl %esi;calll - <.text+>;cmpl %edi, %eax;movl %eax, (%ebx);je  <.text+>": 1,
                "movswl (%ebx), %ecx;movl (%ebx), %eax;cmpl %ecx, (%eax);jne  <.text+>;testb $, (%eax)": 1,
                "pushl %eax;calll - <.text+>;cmpl %edi, %eax;movl %eax, (%ebx);jne - <.text+>": 1,
                "calll - <.text+>;pushl (%ebx);movl %eax, (%ebx);pushl %ebx;calll - <.text+>": 1,
                "movl %eax, (%ebx);pushl %ebx;calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "popl %ebx;popl %edi;leave;retl $;movl (%ebx), %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <.text+>;pushl %esi;movl , %esi": 1,
                "movl (%ebp), %edi;testl %edi, %edi;je  <.text+>;pushl $;pushl $": 1,
                "pushl %esi;movl , %esi;leal (%edi), %eax;pushl $;pushl %eax": 1,
                "pushl $;pushl %edi;pushl (%ebp);calll  <.text+>;movl -(%ebp), %eax": 1,
                "calll - <.text+>;pushl -(%ebp);pushl (%ebp);calll  <.text+>;popl %esi": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);xorl %eax, %eax;cmpl %eax, -(%ebp);sete %al": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movswl (%ebp), %eax;subl $, %eax": 1,
                "jmp  <.text+>;pushl %esi;movl (%ebp), %esi;pushl %edi;movl , %edi": 1,
                "popl %edi;popl %esi;jmp  <.text+>;pushl (%ebp);movl (%ebp), %eax": 1,
                "testl %eax, %eax;je  <.text+>;pushl %eax;jmp  <.text+>;pushl $": 2,
                "movl (%edi), %eax;xorl %ebx, %ebx;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl %ebx, -(%ebp);movl $, -(%ebp);movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "popl %ecx;popl %ecx;je  <.text+>;pushl $;pushl (%esi)": 2,
                "addl %eax, %ecx;leal (%ecx,%ecx), %eax;pushl %eax;pushl -(%ebp);calll *": 1,
                "calll *;pushl $;pushl %ebx;movl , %ebx;calll *%ebx": 3,
                "pushl (%esi);movl (%edi), %eax;movl (%eax), %eax;pushl (%eax);pushl $": 1,
                "movl (%edi), %ecx;movl %ecx, (%eax);testb $-, (%esi);movl (%ebp), %ecx;setne %al": 1,
                "pushl (%ebx);pushl (%ebp);calll - <.text+>;testw %ax, %ax;jne  <.text+>": 1,
                "cmpw $, (%eax);jne  <.text+>;pushl $;pushl %eax;calll  <.text+>": 1,
                "andw $, (%esi);andb $-, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "andb $-, (%esi);movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi);movl (%ebx), %eax;subl $, %eax": 1,
                "subl $, %eax;je  <.text+>;decl %eax;jne  <.text+>;movb $, (%esi)": 1,
                "jne  <.text+>;xorl %ecx, %ecx;jmp  <.text+>;movl (%edi), %eax;movl (%eax), %edx": 1,
                "movl (%esi), %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl (%eax), %eax;movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %esi;pushl -(%ebp);calll - <.text+>;movl -(%ebp), %eax;cmpl %ebx, %eax": 1,
                "pushl %ebx;pushl %eax;movl %esi, (%eax);leal (%esi), %eax;pushl %eax": 1,
                "andw $, %ax;calll - <.text+>;leave;retl $;int": 2,
                "cmpl $, (%eax);jne  <.text+>;pushl %ecx;calll - <.text+>;jmp  <.text+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;testb $, (%ebp);je  <.text+>": 1,
                "movl %esp, %ebp;testb $, (%ebp);je  <.text+>;xorl %eax, %eax;pushl %eax": 1,
                "testb $, (%ebp);je  <.text+>;xorl %eax, %eax;pushl %eax;pushl %eax": 1,
                "calll *;popl %ecx;movl , %esi;testl %esi, %esi;jne - <.text+>": 1,
                "movw %bx, (%esi);movl $, (%esi);xorl %edx, %edx;movw (%eax), %dx;xorl %ecx, %ecx": 2,
                "jne  <.text+>;xorl %eax, %eax;incl %eax;movw %ax, (%esi);movl %eax, (%esi)": 1,
                "movl %ebx, (%esi);movl %ebx, (%esi);movw %ax, (%esi);movl (%edi), %eax;movl %eax, (%esi)": 1,
                "movl %ebx, -(%ebp);pushl (%esi);movl %ebx, -(%ebp);calll - <.text+>;cmpw %bx, %ax": 1,
                "pushl $;calll *(%ecx);pushl -(%ebp);movl , %edi;calll *%edi": 1,
                "pushl %edi;movl %ecx, %ebx;xorl %esi, %esi;pushl $;pushl %ebx": 1,
                "movl %ebx, -(%ebp);movl %edx, %edi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);calll *;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "popl %ecx;jbe  <.text+>;pushl %edi;calll *%esi;leal (%eax,%eax), %eax": 1,
                "testl %esi, %esi;je  <.text+>;pushl %edi;pushl %esi;calll *": 1,
                "jne  <.text+>;movl $, -(%ebp);xorl %esi, %esi;cmpw %si, (%ebx);movl %esi, -(%ebp)": 1,
                "xorl %esi, %esi;cmpw %si, (%ebx);movl %esi, -(%ebp);je  <.text+>;cmpw %si, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl -(%ebp), %edx;movswl %ax, %ecx;cmpw $, (%edx,%ecx,)": 1,
                "jmp  <.text+>;movw (%eax), %ax;jmp  <.text+>;cmpw $, %ax;jne  <.text+>": 1,
                "cmpw $, (%edi,%eax,);jne - <.text+>;movl $, -(%ebp);incl -(%ebp);movswl -(%ebp), %eax": 1,
                "jne  <.text+>;pushl %edi;calll *;popl %ecx;movl %eax, -(%ebp)": 1,
                "pushl %esi;pushl %edi;movl %ecx, %edi;xorl %ecx, %ecx;cmpw %cx, (%ebp)": 1,
                "testw %ax, %ax;jne  <.text+>;pushl %ebx;calll *%esi;movl -(%ebp), %ecx": 1,
                "leal (%ecx,%eax,), %eax;pushl %edi;movl %eax, -(%ebp);calll *%esi;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;leal (%ecx,%eax,), %eax;pushl %ebx;movl %eax, -(%ebp);calll *%esi": 1,
                "cmpw (%ebp), %di;movl %eax, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jle  <.text+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jle  <.text+>;cmpl $, (%ebp);jne  <.text+>": 1,
                "cmpw $, (%ebp);je  <.text+>;pushl (%ebp);movl (%ebp), %eax;pushl $": 2,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;movw $, %ax;jmp  <.text+>": 1,
                "jne  <.text+>;testb $, (%esi);jne  <.text+>;cmpw (%ebp), %di;jne  <.text+>": 1,
                "testb $, (%esi);je - <.text+>;movl (%ebp), %eax;pushl $;pushl %edi": 1,
                "calll - <.text+>;testw %ax, %ax;jne - <.text+>;movl (%ebp), %edx;movl (%esi), %ebx": 1,
                "testb $, (%esi);je - <.text+>;cmpl %ecx, (%esi);jne - <.text+>;movl , %esi": 1,
                "cmpw $, (%ebp);movw (%esi), %ax;je  <.text+>;testb $, %al;jmp  <.text+>": 1,
                "movw (%esi), %ax;je  <.text+>;testb $, %al;jmp  <.text+>;movb %al, %cl": 1,
                "xorl %ecx, %ecx;cmpw %cx, (%eax);jne  <.text+>;testb $, (%ebp);je  <.text+>": 1,
                "xorl %ecx, %ecx;cmpl %ecx, (%esi);jne  <.text+>;movw (%edi), %ax;testb $, %al": 1,
                "andw $, %ax;cmpw $, %ax;je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);pushl (%ebp);calll - <.text+>;testw %ax, %ax;jle  <.text+>": 1,
                "jle  <.text+>;movl %ebx, (%ebp);leal -(%ebp), %eax;pushl %eax;pushl %esi": 2,
                "cmpw $, (%ebp);jne - <.text+>;jmp - <.text+>;int;int": 1,
                "movl (%ebp), %edi;xorl %ebx, %ebx;movl %edx, (%edi);movl (%eax), %esi;incl %ebx": 1,
                "movl %edx, -(%ebp);movl %edx, -(%ebp);movl %ebx, -(%ebp);je  <.text+>;testb $-, (%esi)": 1,
                "movl %esi, %eax;pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);calll - <.text+>;testw %ax, %ax;je  <.text+>": 2,
                "je  <.text+>;testb $, (%esi);je  <.text+>;xorl %ecx, %ecx;cmpw %cx, -(%ebp)": 1,
                "cmpw %cx, (%ebp);je  <.text+>;movb (%esi), %al;andb $, %al;cmpb $, %al": 1,
                "je  <.text+>;cmpl $, (%ebp);jne  <.text+>;movb (%esi), %al;andb $, %al": 1,
                "movb (%esi), %al;andb $, %al;cmpb $, %al;jne  <.text+>;movl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movw %cx, -(%ebp);je  <.text+>;cmpb $, %al;je  <.text+>": 1,
                "ja  <.text+>;movl $, -(%ebp);jmp  <.text+>;pushl (%ebp);movl (%ebp), %esi": 1,
                "calll - <.text+>;movl %eax, -(%ebp);movl (%ebx), %eax;testl %eax, %eax;je  <.text+>": 1,
                "testb $, (%eax);je  <.text+>;cmpw $, %dx;je  <.text+>;pushl %edx": 1,
                "je  <.text+>;pushl %edx;pushl $;movl %edi, %eax;calll - <.text+>": 1,
                "je  <.text+>;movl (%ebp), %eax;testb $, (%eax);jne  <.text+>;pushl (%ebp)": 1,
                "testw %ax, %ax;jne  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl %ecx, -(%ebp)": 1,
                "xorl %esi, %esi;cmpl %esi, %eax;je  <.text+>;movl %esi, (%eax);movl %esi, (%eax)": 1,
                "je  <.text+>;movl %esi, (%eax);movl %esi, (%eax);jmp  <.text+>;leal -(%ebp), %eax": 1,
                "cmpl %esi, %edi;je  <.text+>;movzbl (%edi), %edx;andl $, %edx;decl %edx": 1,
                "je  <.text+>;movzbl (%edi), %edx;andl $, %edx;decl %edx;je  <.text+>": 1,
                "decl %edx;je  <.text+>;subl $, %edx;jne  <.text+>;movl $, (%eax)": 1,
                "popl %edx;movl %edx, (%ecx);movl %esi, (%ecx);movl %edx, (%eax);movl %esi, (%eax)": 1,
                "cmpl %ecx, %eax;pushl %edi;movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl %edx, -(%ebp)": 1,
                "addl $, %esp;leal -(%ebp), %edx;leal -(%ebp), %ecx;leal -(%ebp), %eax;calll - <.text+>": 1,
                "pushl -(%ebp);movl (%eax), %ecx;pushl %eax;calll *(%ecx);movl -(%ebp), %ecx": 1,
                "calll *(%ecx);movl -(%ebp), %ecx;movl %eax, %edi;movzbl (%ecx), %eax;subl $, %eax": 1,
                "pushl $;pushl (%esi);movl %edx, -(%ebp);pushl -(%ebp);pushl (%ebx)": 1,
                "pushl -(%ebp);pushl (%ebx);pushl $;calll *(%eax);pushl -(%ebp)": 1,
                "jne  <.text+>;movw $, %ax;jmp  <.text+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;pushl %esi;je  <.text+>;pushl %eax;calll - <.text+>": 1,
                "pushl %ecx;pushl %ecx;pushl %ebx;pushl %esi;pushl $": 1,
                "movl (%ebp), %edi;pushl %ebx;pushl %ebx;pushl %ebx;movl %edi, (%eax)": 1,
                "addl $, %esp;movw $, %di;jmp  <.text+>;movl (%esi), %ecx;leal (%esi), %eax": 1,
                "movl %ebx, -(%ebp);orl $-, (%esi);orw $-, (%esi);orw $-, (%esi);leal (%esi), %ecx": 1,
                "je  <.text+>;decl %ecx;jne  <.text+>;pushl %eax;jmp  <.text+>": 1,
                "jmp  <.text+>;pushl $;jmp  <.text+>;subl $, %ecx;je  <.text+>": 1,
                "addl $, %esp;jmp  <.text+>;movswl (%edi), %eax;pushl %eax;leal (%esi), %eax": 1,
                "andl $, (%esi);movw %ax, (%esi);movswl %ax, %eax;cmpl $, %eax;jl  <.text+>": 1,
                "cmpl $, %eax;jl  <.text+>;cmpl $, %eax;jg  <.text+>;cmpl $, (%ebp)": 1,
                "jl  <.text+>;cmpl $, %eax;jg  <.text+>;cmpl $, (%ebp);jmp  <.text+>": 1,
                "cmpl $, %edi;jne  <.text+>;leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax": 1,
                "pushl %eax;pushl $;pushl ;movl $, (%ebp);calll - <.text+>": 1,
                "movl $, %eax;cmpl %eax, %edi;ja  <.text+>;je  <.text+>;subl $, %edi": 1,
                "je  <.text+>;decl %edi;je  <.text+>;decl %edi;je - <.text+>": 1,
                "decl %edi;je  <.text+>;subl $, %edi;je  <.text+>;subl $, %edi": 1,
                "jmp  <.text+>;movw $, (%esi);jmp - <.text+>;movw $, (%esi);jmp - <.text+>": 1,
                "movw $, (%esi);orl $, (%esi);popl %edi;leave;retl $": 1,
                "decl %eax;jne  <.text+>;xorl %ebx, %ebx;xorl %edi, %edi;incl %ebx": 1,
                "je  <.text+>;movb -(%ebp), %al;movb %al, -(%ebp);movb -(%ebp), %al;movb %al, -(%ebp)": 1,
                "movb %al, -(%ebp);movb -(%ebp), %al;movb %al, -(%ebp);movb -(%ebp), %al;movb %al, -(%ebp)": 1,
                "je  <.text+>;cmpb $, -(%ebp);jne  <.text+>;jmp  <.text+>;cmpb $, -(%ebp)": 1,
                "jne  <.text+>;jmp  <.text+>;cmpb $, -(%ebp);je  <.text+>;leal -(%ebp), %eax": 1,
                "xorl %eax, %eax;incl %eax;xorl %edi, %edi;cmpw $, %di;jge  <.text+>": 1,
                "jne - <.text+>;testl %eax, %eax;jne  <.text+>;testl %esi, %esi;jne  <.text+>": 1,
                "testw %bx, %bx;je - <.text+>;jmp  <.text+>;cmpl $-, %esi;jne  <.text+>": 1,
                "incl %edi;pushl %edi;pushl ;movl $, -(%ebp);calll - <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl ;calll - <.text+>": 4,
                "cmpw $, -(%ebp);jne  <.text+>;movl , %edi;pushl $;movl $, %ebx": 1,
                "testl %eax, %eax;je  <.text+>;cmpl $-, %esi;jne  <.text+>;leal -(%ebp), %eax": 1,
                "jmp - <.text+>;pushl $;popl %ebx;xorl %eax, %eax;xorl %edi, %edi": 1,
                "pushl %eax;pushl $;pushl ;movl %ebx, -(%ebp);calll - <.text+>": 1,
                "pushl %edi;pushl $;movl %eax, -(%ebp);movl (%ebp), %eax;popl %ecx": 1,
                "movl (%ebp), %eax;popl %ecx;leal (%ebp), %esi;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "rep  movsl (%esi), %es:(%edi);movl (%eax), %ecx;movl (%ecx), %edx;movl (%ebp), %ecx;cmpl (%ecx), %edx": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax;movl (%ebp), %ecx": 1,
                "pushl %edi;xorl %eax, %eax;movl $, %edx;movl $, %ecx;movl %edx, %edi": 1,
                "movl $, %eax;movl %edi, (%ebp);leal (%eax), %ebx;movl %esi, (%eax);movl %ebx, (%eax)": 1,
                "movl , %eax;movl $, %esi;cmpl %esi, %eax;jae  <.text+>;pushl %edi": 1,
                "calll - <.text+>;testl %eax, %eax;popl %edi;jne  <.text+>;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $;pushl ": 1,
                "pushl %esi;movl %eax, -(%ebp);pushl %edi;jne  <.text+>;movl , %edi": 1,
                "movswl (%esi), %eax;addl $-, %eax;cmpl $, %eax;ja  <.text+>;jmpl *(,%eax,)": 1,
                "sbbl %eax, %eax;negl %eax;movswl %ax, %eax;pushl %eax;pushl %ebx": 1,
                "jmp  <.text+>;pushl %ebx;jmp  <.text+>;movl (%esi), %eax;movl (%esi), %edi": 1,
                "pushl %ebx;je  <.text+>;testb $, ;je  <.text+>;pushl $": 1,
                "calll - <.text+>;jmp  <.text+>;pushl %ebx;jmp - <.text+>;pushl $": 1,
                "testl $, %eax;pushl %ebx;pushl $;je  <.text+>;pushl $": 1,
                "jmp  <.text+>;movw (%esi), %ax;xorl %ecx, %ecx;movw (%esi), %cx;xorl %edx, %edx": 1,
                "movswl %cx, %eax;pushl %ebx;pushl %eax;pushl $;pushl ": 1,
                "pushl -(%ebp);pushl %eax;pushl %ebx;pushl $;pushl ": 1,
                "movl %eax, -(%ebp);jne  <.text+>;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "movswl -(%ebp), %eax;movl -(%ebp), %edi;movl %eax, -(%ebp);pushl %ebx;pushl -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <.text+>;pushl ;calll - <.text+>;cmpl $, %eax": 1,
                "je  <.text+>;cmpl $, %eax;jne  <.text+>;movl %ebx, -(%ebp);subl -(%ebp), %edi": 1,
                "jne  <.text+>;movl %ebx, -(%ebp);subl -(%ebp), %edi;cmpw %bx, %di;je  <.text+>": 1,
                "movl (%esi), %eax;pushl %ebx;pushl %ebx;decl %eax;pushl %eax": 1,
                "jne  <.text+>;pushl %ebx;pushl $;pushl ;calll - <.text+>": 1,
                "calll *%esi;testl %eax, %eax;jne - <.text+>;movl , %eax;cmpl %eax, ": 1,
                "movl , %eax;cmpl %eax, ;je  <.text+>;movl (%eax), %eax;pushl $": 1,
                "cmpl %eax, ;je  <.text+>;movl (%eax), %eax;pushl $;popl %ecx": 1,
                "cmpw %bx, -(%ebp);je  <.text+>;movl %eax, ;movl $, ;pushl %ebx": 1,
                "movl %eax, ;movl $, ;pushl %ebx;pushl ;calll *": 1,
                "addl %ebp, (%ecx);decl %esp;orl %eax, (%ecx);decl %edx;decl %edx": 1,
                "decl %esp;orl %eax, (%ecx);cld;decl %ebp;orl %eax, (%ecx)": 1,
                "pushl %eax;pushl %eax;calll *;leave;retl": 1,
                "movl -(%ebp), %eax;movl %ecx, (%esi);movw %bx, (%esi);movl $, (%esi);xorl %edx, %edx": 1,
                "pushl %eax;pushl %ebx;pushl -(%ebp);pushl (%edi);pushl %ebx": 1,
                "xorl %eax, %eax;movw (%edi), %ax;addl $, %esp;pushl %eax;leal (%esi), %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;pushl %eax;movl %eax, -(%ebp)": 1,
                "cmpw $, %ax;movl %eax, -(%ebp);je  <.text+>;movl -(%ebp), %ecx;xorl %eax, %eax": 1,
                "movw %bx, (%esi);movw %bx, (%esi);movw %ax, (%esi);xorl %eax, %eax;incl %eax": 1,
                "calll *(%ecx);addl $, %esp;cmpw %bx, -(%ebp);jne  <.text+>;cmpw %bx, -(%ebp)": 1,
                "movl (%ebp), %edx;rep  stosl %eax, %es:(%edi);movl (%esi), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "xorl %ecx, %ecx;cmpw $, (%edx);leal (%esi), %eax;sete %cl;movl %eax, -(%ebp)": 1,
                "movw %bx, -(%ebp);movw (%esi), %ax;movl -(%ebp), %edi;movw %ax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %edi;movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;calll - <.text+>;cmpw %bx, -(%ebp)": 1,
                "pushl %edi;calll - <.text+>;cmpw %bx, -(%ebp);jne  <.text+>;cmpw %bx, %ax": 1,
                "movl (%edi), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);jmp  <.text+>;pushl $": 1,
                "jle  <.text+>;cmpw %di, %ax;jle  <.text+>;movl %edi, %eax;jmp  <.text+>": 1,
                "movl -(%ebp), %edi;xorl %edx, %edx;movw %ax, (%edi);movl , %eax;incl %edx": 1,
                "xorl %eax, %eax;incl %eax;jmp  <.text+>;movl %ecx, %eax;xorl %edx, %edx": 1,
                "cmpw $-, -(%ebp);je  <.text+>;cmpw $, -(%ebp);je  <.text+>;cmpw $, -(%ebp)": 1,
                "calll  <.text+>;movl %eax, -(%ebp);jmp  <.text+>;movl $, -(%ebp);cmpw %bx, -(%ebp)": 1,
                "movl $, -(%ebp);movl (%esi), %ecx;leal (%esi), %eax;pushl %eax;pushl (%esi)": 1,
                "cmpl %ecx, %eax;je  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $-, %eax": 1,
                "calll  <.text+>;cmpw $, -(%ebp);jne  <.text+>;pushl %ebx;pushl %ebx": 1,
                "jne  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;movl (%ebp), %edi;jmp - <.text+>": 1,
                "pushl %ebx;pushl $;leal (%esi), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %ecx;movl (%ebp), %ecx;pushl %ebx;pushl (%eax);pushl (%ecx)": 1,
                "pushl $;movl %esi, -(%ebp);movw %si, -(%ebp);calll *;cmpl %esi, -(%ebp)": 1,
                "movl $, -(%ebp);calll *;pushl -(%ebp);calll *;cmpw %si, -(%ebp)": 1,
                "jne  <.text+>;leal -(%ebp), %eax;pushl %edi;pushl %eax;calll *": 1,
                "pushl %eax;calll *;pushl (%esi);leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;pushl (%ebp);pushl %esi;pushl $;pushl $": 5,
                "pushl %esi;pushl $;pushl $;pushl (%ebp);calll - <.text+>": 17,
                "movl $, %esi;pushl %esi;movl %eax, %edi;calll *;testl %edi, %edi": 2,
                "pushl %esi;pushl (%ebp);calll - <.text+>;movl %edi, %eax;popl %edi": 2,
                "pushl %esi;xorl %esi, %esi;testl %eax, %eax;je  <.text+>;pushl (%ebp)": 2,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ecx;pushl %ebx": 1,
                "pushl %edi;xorl %edi, %edi;movl %eax, -(%ebp);movl (%ebp), %eax;xorl %ebx, %ebx": 1,
                "xorl %ebx, %ebx;cmpl %edi, %eax;movl %eax, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%ecx), %ebx;cmpl %edi, %eax;movl %eax, %esi;je  <.text+>;cmpb $, (%esi)": 1,
                "movl %eax, -(%ebp);pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "jne  <.text+>;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl (%ecx), %eax;cmpl %edi, %eax;movl -(%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "cmpl %edi, %eax;movl -(%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);je  <.text+>;movl , %ebx;cmpl %edi, -(%ebp);je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movl %edi, -(%ebp);pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;jae  <.text+>;pushl -(%ebp);calll *%ebx": 1,
                "leal (%eax,%eax), %esi;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movl , %edi;leal (%esi,%eax), %esi;movl -(%ebp), %eax;movl (%ecx,%eax), %eax;movl %eax, -(%ebp)": 1,
                "addl $, %esp;jmp  <.text+>;movl -(%ebp), %edi;testl %edi, %edi;je  <.text+>": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;addl $, %esp;addl (%edi), %esi;movl %eax, -(%ebp)": 1,
                "addl $, %esp;addl (%edi), %esi;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;pushl (%eax);calll *;popl %ecx;movl -(%ebp), %ecx": 1,
                "movl %esi, -(%ebp);calll *%ebx;movl (%esi), %ecx;addl $, %esp;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movb $, (%eax);movl -(%ebp), %eax;movl %esi, (%eax);leal -(%ebp), %eax": 1,
                "pushl %eax;movl -(%ebp), %eax;pushl (%eax);calll *%edi;pushl %esi": 2,
                "movw $, (%eax);movl -(%ebp), %eax;addl $, %esp;movb $, (%eax);cmpl $, -(%ebp)": 1,
                "je  <.text+>;movl -(%ebp), %eax;pushl -(%ebp);movl (%eax), %eax;pushl %esi": 1,
                "movl -(%ebp), %eax;pushl -(%ebp);movl (%eax), %eax;pushl %esi;movl %esi, (%eax)": 1,
                "calll - <.text+>;pushl -(%ebp);pushl %edi;calll - <.text+>;movl -(%ebp), %eax": 1,
                "jne  <.text+>;addl $, -(%ebp);decl -(%ebp);je  <.text+>;movl -(%ebp), %eax": 1,
                "orl $-, -(%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "pushl (%ebp);calll - <.text+>;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "pushl %eax;calll - <.text+>;cmpl $-, -(%ebp);movl %eax, %esi;jne - <.text+>": 1,
                "cmpl %edi, ;jne  <.text+>;pushl $;calll - <.text+>;movl %eax, %esi": 1,
                "cmpl %edi, ;je  <.text+>;cmpl %edi, ;je  <.text+>;pushl %ebx": 1,
                "movl (%eax), %eax;movl %eax, ;movl (%esi), %eax;movl (%eax), %eax;movl %eax, ": 1,
                "popl %esi;xorw %ax, %ax;popl %ebx;calll - <.text+>;leave": 10,
                "movl (%ebp), %edi;pushl $;pushl %edi;calll *;xorl %ebx, %ebx": 1,
                "pushl $;pushl $;calll - <.text+>;testw %ax, %ax;jne  <.text+>": 3,
                "pushl $;calll - <.text+>;testw %ax, %ax;jne  <.text+>;cmpl %esi, ": 1,
                "calll *%edi;pushl ;movl %esi, ;calll *%edi;movl %esi, ": 1,
                "je - <.text+>;pushl ;calll *%esi;pushl %edi;calll *": 1,
                "calll *%esi;pushl %edi;calll *;andl $, ;xorl %edi, %edi": 1,
                "movl %edi, ;popl %edi;popl %esi;movl $, ;popl %ebx": 1,
                "popl %edi;popl %esi;movl $, ;popl %ebx;leave": 1,
                "andw $, ;movw -(%ebp), %ax;popl %edi;popl %esi;leave": 1,
                "movw $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movw %bx, -(%ebp)": 7,
                "movw %bx, -(%ebp);pushl $;rep  movsl (%esi), %es:(%edi);calll - <.text+>;movl , %esi": 11,
                "pushl ;calll *%esi;cmpw $, %di;jne  <.text+>;movw $, ": 15,
                "popl %ecx;movl %esp, %edi;pushl $;movl %eax, -(%ebp);leal -(%ebp), %esi": 1,
                "movw $, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);pushl $;rep  movsl (%esi), %es:(%edi)": 2,
                "pushl %esi;movl , %esi;pushl %edi;jmp  <.text+>;calll - <.text+>": 1,
                "pushl $;calll - <.text+>;xorl %esi, %esi;movl %eax, %edi;cmpw %si, %di": 1,
                "movl %eax, -(%ebp);je  <.text+>;pushl $;popl %ecx;movl %eax, %esi": 1,
                "movl %eax, ;pushl (%ebx);movswl (%ebx), %ecx;pushl %ecx;movswl (%ebx), %ecx": 1,
                "pushl $;rep  stosl %eax, %es:(%edi);pushl ;calll *;xorw %ax, %ax": 1,
                "xorl %ebx, %ebx;leal -(%esi), %eax;cmpl $, %eax;pushl %edi;movl %ebx, -(%ebp)": 1,
                "cmpw %bx, ;jne  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl (%ebp), %edi": 1,
                "calll *%esi;testl %eax, %eax;jne - <.text+>;movl , %eax;pushl %ebx": 1,
                "incl %edi;cmpw %bx, ;jne  <.text+>;pushl $;pushl %ebx": 1,
                "movl %eax, ;movw %bx, ;movl , %ebx;pushl %esi;calll *%ebx": 1,
                "subl $, %esp;movl %esp, %edi;pushl $;movw %cx, -(%ebp);leal -(%ebp), %esi": 1,
                "andl $, (%esi);movl , %eax;xorl %ebx, %ebx;incl %ebx;cmpl $-, %eax": 1,
                "xorl %ebx, %ebx;incl %ebx;cmpl $-, %eax;je  <.text+>;pushl $": 1,
                "pushl $;leal (%ebp), %ecx;pushl %ecx;pushl $;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;pushl $": 1,
                "popl %ecx;xorl %edi, %edi;movl %edi, %eax;popl %edi;popl %esi": 1,
                "xorl %eax, %eax;incl %eax;jmp  <.text+>;xorl %eax, %eax;cmpl $, -(%ebp)": 1,
                "movl $, -(%ebp);calll *;cmpl %esi, %eax;movl %eax, -(%ebp);jne  <.text+>": 1,
                "testl %eax, %eax;jne  <.text+>;movl -(%ebp), %eax;movw %si, -(%ebp,%eax,);cmpl %esi, %eax": 1,
                "pushl %ebx;movl %eax, %esi;calll *;cmpl %eax, %esi;popl %ecx": 1,
                "pushl %ebx;pushl %edi;calll *;testl %eax, %eax;popl %ecx": 2,
                "popl %ecx;popl %ecx;jne  <.text+>;andl %eax, -(%ebp);orl $-, -(%ebp)": 1,
                "popl %ecx;jne  <.text+>;andl %eax, -(%ebp);orl $-, -(%ebp);incl -(%ebp)": 1,
                "je  <.text+>;decl %ecx;jne - <.text+>;andw $, (%edi,%ecx,);pushl $": 1,
                "decl %ecx;jne - <.text+>;andw $, (%edi,%ecx,);pushl $;xorl %ecx, %ecx": 1,
                "xorl %ecx, %ecx;popl %edx;jmp  <.text+>;cmpw $, (%edi,%ecx,);je  <.text+>": 1,
                "negl %eax;addl $, %eax;testb $-, (%edi);je  <.text+>;leal -(%ebp), %ecx": 1,
                "cmpl %ebx, %eax;popl %ecx;popl %ecx;je  <.text+>;incl %eax": 1,
                "pushl (%ebp);calll  <.text+>;cmpl %ebx, %eax;jne  <.text+>;movl (%ebp), %eax": 1,
                "calll *%esi;popl %ecx;leal (%ebx,%eax,), %edi;jmp  <.text+>;decl %edi": 1,
                "calll *;pushl -(%ebp);calll *;pushl %esi;calll *": 1,
                "calll *;xorl %esi, %esi;incl %esi;pushl -(%ebp);calll *": 1,
                "pushl $;pushl %edi;pushl %edi;pushl $;pushl %esi": 1,
                "pushl %edi;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl %esi": 2,
                "calll *;pushl $;pushl %esi;calll *;popl %esi": 1,
                "popl %esi;movl -(%ebp), %ecx;popl %edi;calll - <.text+>;leave": 1,
                "xorl %edi, %edi;calll  <.text+>;movl %eax, %esi;cmpl %edi, %esi;movl %esi, (%ebp)": 1,
                "popl %ecx;popl %ecx;je  <.text+>;pushl %edi;calll *%esi": 3,
                "popl %ecx;je  <.text+>;pushl %edi;calll *%esi;popl %ecx": 1,
                "calll *%esi;popl %ecx;popl %ebx;popl %edi;popl %esi": 1,
                "cmpl $, (%esi);movl %edx, %edi;movl %esi, -(%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl %ebx;calll *;movl $, %ecx;subl %eax, %ecx;movl -(%ebp), %eax": 1,
                "leal (%ebx,%eax,), %ebx;andw $, (%ebx);movl $, %eax;addl $, %esp;subl -(%ebp), %eax": 1,
                "calll *;testl %eax, %eax;popl %ecx;popl %ecx;movl %eax, (%edi)": 2,
                "movl %edi, -(%ebp);jne - <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %edi;movl %ecx, %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;subl %eax, -(%ebp);jmp - <.text+>;movl -(%ebp), %ecx": 1,
                "pushl %edi;xorl %ebx, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "cmpl %esi, %edi;jne  <.text+>;movl -(%ebp), %eax;pushl -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;leal -(%ebp), %ecx;movw %si, -(%ebp,%eax,);calll - <.text+>;cmpl %esi, %eax": 1,
                "movw %si, -(%ebp,%eax,);calll - <.text+>;cmpl %esi, %eax;movl %eax, -(%ebp);je  <.text+>": 1,
                "calll - <.text+>;cmpl %esi, %eax;movl %eax, -(%ebp);je  <.text+>;incl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll *;popl %ecx": 1,
                "calll *;popl %ecx;popl %ecx;pushl -(%ebp);calll *": 1,
                "movl , %eax;pushl %ebx;movl %ecx, -(%ebp);movl (%ebp), %ecx;pushl %esi": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jne  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;movl -(%ebp), %ecx;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "movl %esi, %ecx;calll - <.text+>;testl %eax, %eax;jne  <.text+>;testb $-, (%esi)": 1,
                "subl $, %esp;pushl %esi;pushl %edi;movl , %edi;xorl %esi, %esi": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll *%edi;cmpl %esi, %eax": 1,
                "movl %esi, -(%ebp);calll *%edi;cmpl %esi, %eax;popl %ecx;popl %ecx": 1,
                "movl , %edi;pushl %ebx;movw %si, (%eax);incl %eax;incl %eax": 1,
                "calll *%edi;cmpl %esi, %eax;movl %eax, (%ebp);jne  <.text+>;cmpl $, -(%ebp)": 1,
                "cmpl %esi, %eax;movl %eax, -(%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %esi;pushl $;pushl %esi;pushl $;pushl %esi": 1,
                "jne  <.text+>;pushl $;pushl (%ebp);calll *;cmpl %esi, %eax": 1,
                "movl %eax, -(%ebp);calll  <.text+>;jmp  <.text+>;movl %ebx, %eax;cmpl %esi, %ebx": 1,
                "calll *%edi;cmpl %esi, %eax;jne  <.text+>;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %esi;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 5,
                "testb $, (%eax);popl %ecx;movl %esi, -(%ebp);movl %esi, -(%ebp);je  <.text+>": 1,
                "cmpl %esi, -(%ebp);jne  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "calll *;movl -(%ebp), %ecx;leal (%ecx,%eax,), %eax;pushl %eax;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "movw %si, -(%ebp,%eax,);leal -(%ebp), %eax;pushl %eax;calll *;popl %ecx": 1,
                "calll *;popl %ecx;popl %ecx;movw %si, -(%ebp,%eax,);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;cmpl -(%ebp), %eax;jae  <.text+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "cmpl %esi, -(%ebp);je - <.text+>;cmpl %esi, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "calll - <.text+>;jmp - <.text+>;pushl -(%ebp);pushl %eax;leal -(%ebp), %eax": 1,
                "je  <.text+>;pushl $;pushl $;calll *;cmpl %esi, %eax": 2,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %esi;pushl %esi": 1,
                "incl %edi;pushl %edi;pushl %edi;pushl %esi;calll - <.text+>": 1,
                "calll - <.text+>;addl $, %esp;movl %edi, ;pushl -(%ebp);calll *": 1,
                "calll *%esi;popl %ecx;popl %ecx;movl -(%ebp), %ecx;popl %edi": 1,
                "calll  <.text+>;pushl (%ebp);movl %eax, %ebx;calll  <.text+>;cmpl %esi, %ebx": 1,
                "calll *%edi;cmpl %eax, %esi;popl %ecx;ja  <.text+>;pushl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;testb $-, (%eax)": 1,
                "movl (%ebp), %eax;testb $-, (%eax);pushl %esi;movl $, -(%ebp);jne  <.text+>": 1,
                "pushl $;calll - <.text+>;movl %eax, -(%ebp);pushl %esi;calll *": 1,
                "jmp  <.text+>;andl $, (%ebp);leal (%ebp), %eax;pushl %eax;pushl $": 1,
                "testl %eax, %eax;jne  <.text+>;cmpl %eax, (%ebp);je  <.text+>;movl (%ebp), %esi": 1,
                "pushl %ebx;pushl (%ebp);calll *%esi;pushl %edi;movl %eax, %ebx": 1,
                "cmpw $, (%edi);movl , %edi;popl %ecx;popl %ecx;je  <.text+>": 1,
                "pushl $;pushl %ebx;calll *;cmpl $-, %eax;jne  <.text+>": 1,
                "cmpl $-, %eax;jne  <.text+>;calll *;cmpl $, %eax;jne  <.text+>": 1,
                "movl (%ebp), %esi;testb $-, (%esi);je  <.text+>;andl $, (%ebp);leal (%ebp), %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *%ecx;jmp  <.text+>": 2,
                "movl $, %eax;je  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "popl %ecx;popl %ecx;movl %eax, (%esi);movl (%esi), %eax;testl %eax, %eax": 1,
                "popl %ecx;popl %ecx;je  <.text+>;andw $, (%eax);popl %edi": 1,
                "jmp - <.text+>;calll *;leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl $;pushl %eax;calll *;negl %eax": 1,
                "cmpl %ebx, %eax;pushl %esi;pushl %edi;movl %ebx, -(%ebp);je  <.text+>": 2,
                "pushl %esi;calll *%eax;jmp  <.text+>;movl %ebx, -(%ebp);cmpl %ebx, ": 2,
                "movl %ebx, -(%ebp);cmpl %ebx, ;je  <.text+>;orb $, (%edi);cmpl %ebx, -(%ebp)": 2,
                "cmpl %ebx, ;je  <.text+>;orb $, (%edi);cmpl %ebx, -(%ebp);movw (%edi), %ax": 2,
                "pushl %ebx;pushl %ebx;pushl $;pushl %esi;pushl -(%ebp)": 2,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 3,
                "xorl %edi, %edi;decl %eax;je  <.text+>;movl -(%ebp), %eax;leal (%eax,%edi,), %eax": 2,
                "movl (%eax), %eax;movl (%eax), %esi;addl $, %esi;jmp  <.text+>;addl $, %eax": 2,
                "movl (%eax), %eax;movl (%eax), %esi;addl $, %esi;calll - <.text+>;movl -(%ebp), %eax": 2,
                "calll - <.text+>;cmpl %ebx, %eax;movl %edi, -(%ebp);jne  <.text+>;leal (%ebp), %eax": 1,
                "pushl ;je  <.text+>;calll - <.text+>;jmp  <.text+>;calll - <.text+>": 1,
                "pushl %esi;calll *;movl , %ebx;pushl %esi;calll *%ebx": 1,
                "movl (%ecx), %ecx;movl (%ecx), %ecx;leal (%ecx,%eax,), %eax;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "leal (%ecx,%eax,), %eax;testl %eax, %eax;movl %eax, -(%ebp);jne - <.text+>;testl %eax, %eax": 1,
                "popl %ecx;je  <.text+>;andw $, (%eax);incl %eax;incl %eax": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);xorw %ax, %ax;jmp  <.text+>;movw $, %ax": 1,
                "pushl $;pushl $;pushl %edi;calll  <.text+>;testw %ax, %ax": 1,
                "pushl (%edi);pushl %edi;calll - <.text+>;pushl (%edi);pushl %edi": 1,
                "movl (%ebp), %eax;movw $, (%eax);jmp - <.text+>;movl (%ebp), %esi;movl %edi, %ecx": 1,
                "incl %esi;decl %edi;movb %al, (%ecx);jne - <.text+>;popl %edi": 1,
                "movb (%eax), %al;movswl %dx, %edx;xorb (%edx,%edi), %al;xorb (%ecx), %al;movb %bl, (%ecx)": 1,
                "decl %esi;cmpl %eax, %esi;ja - <.text+>;popl %esi;jne  <.text+>": 1,
                "popl %esi;jne  <.text+>;addb $-, (%ecx);popl %ebp;retl $": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpw $, (%eax)": 1,
                "decl %ecx;jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl %eax": 2,
                "pushl %ebx;calll  <.text+>;movl (%ebp), %eax;movw $, (%eax);andb $-, (%ebx)": 1,
                "pushl %edi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);jne  <.text+>": 1,
                "addl %ecx, %eax;orb $, (%eax);incw ;cmpl %esi, %ebx;movl %eax, -(%ebp)": 1,
                "cmpl %esi, %ebx;movl %eax, -(%ebp);movl %ebx, (%eax);jne  <.text+>;movl $, -(%ebp)": 1,
                "je  <.text+>;movl %ecx, ;movw %cx, ;movw %cx, ;movl %edx, ": 1,
                "movw (%ecx), %di;movw %di, (%eax);movl (%edx), %edx;movl %edx, (%eax);orw $, (%ecx)": 1,
                "addl $, %ecx;cmpl %esi, (%ecx);je  <.text+>;movl (%ecx), %edx;movl %edx, (%eax)": 1,
                "je  <.text+>;movl (%ecx), %edx;movl %edx, (%eax);movl %esi, (%ecx);movl (%eax), %ecx": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);movw %si, (%edi);jmp  <.text+>;cmpl %esi, %ebx": 1,
                "leal (%ebx), %eax;movl %eax, -(%ebp);movl %eax, %edi;movswl (%edi), %eax;subl %esi, %eax": 1,
                "je  <.text+>;jmp - <.text+>;pushl $;popl %edi;leal -(%ebp), %eax": 1,
                "movl %eax, (%ebx);movswl -(%ebp), %eax;cmpl $, %eax;jg  <.text+>;cmpl $, %eax": 1,
                "movl (%edi), %eax;movl (%eax), %eax;movl %eax, (%ebx);leal (%ebx), %eax;cmpw %si, (%eax)": 1,
                "movw %cx, (%eax);movl (%edi), %eax;cmpl $, (%eax);pushl $;je  <.text+>": 1,
                "movl $, -(%ebp);movl %ecx, (%edi);jmp - <.text+>;testl %ecx, %ecx;je  <.text+>": 1,
                "testw %ax, %ax;je - <.text+>;xorl %ecx, %ecx;cmpw $, %ax;setne %cl": 1,
                "andl $, %ecx;addl $, %ecx;movl %ecx, -(%ebp);jmp - <.text+>;cmpw $, %ax": 1,
                "jne  <.text+>;movl $, -(%ebp);jmp - <.text+>;xorl %ecx, %ecx;cmpw $, %ax": 1,
                "movl $, %ecx;pushl %ebx;rep  movsl (%esi), %es:(%edi);movl $, -(%ebp);calll  <.text+>": 1,
                "andb $-, (%eax);xorl %eax, %eax;movw (%ebx), %ax;pushl %esi;pushl %eax": 1,
                "testl %eax, (%ebx);popl %edi;movl %edi, -(%ebp);je - <.text+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movw %si, (%ebx);movw $, (%eax);movl (%ecx), %eax": 1,
                "pushl %eax;calll - <.text+>;cmpw $, %ax;je - <.text+>;cmpw %si, -(%ebp)": 1,
                "movl -(%ebp), %edi;leal (%edi), %eax;pushl %eax;calll  <.text+>;cmpl %esi, %eax": 1,
                "cmpw $, %ax;je - <.text+>;movw -(%ebp), %ax;cmpw %si, %ax;movl -(%ebp), %ecx": 1,
                "je - <.text+>;movw -(%ebp), %ax;cmpw %si, %ax;movl -(%ebp), %ecx;je  <.text+>": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);jmp - <.text+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "calll - <.text+>;jmp  <.text+>;leal (%ebx), %eax;cmpw %si, (%eax);movw $, (%ebx)": 1,
                "movw %si, (%eax);calll  <.text+>;cmpw %si, %ax;jne - <.text+>;testb $, (%ebx)": 1,
                "je  <.text+>;movw %si, (%eax);movl (%ebx), %eax;cmpl -(%ebp), %eax;jne  <.text+>": 1,
                "movw %si, (%eax);movl (%ebx), %eax;cmpl -(%ebp), %eax;jne  <.text+>;xorl %eax, %eax": 1,
                "calll - <.text+>;cmpw $, %ax;jne - <.text+>;jmp - <.text+>;movl -(%ebp), %eax": 1,
                "cmpw $, (%ebp);jne  <.text+>;movl -(%ebp), %edx;cmpl %esi, %edx;je  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpw $, %ax;pushl %ebx": 1,
                "jne  <.text+>;movl (%ebp), %esi;movzwl %ax, %edx;movl (%ebp), %eax;pushl %edi": 1,
                "movl (%ebp), %esi;movzwl %ax, %edx;movl (%ebp), %eax;pushl %edi;movl (%eax), %edi": 1,
                "calll - <.text+>;movl (%ebp), %eax;addl %eax, (%esi);movl (%esi), %eax;andw $, (%eax)": 1,
                "jg  <.text+>;movzwl (%eax), %eax;addl %ecx, %eax;cmpl %edx, %eax;jg  <.text+>": 1,
                "testb $, (%eax);movl (%eax), %ecx;jne  <.text+>;andw $, (%ecx);movl (%eax), %eax": 1,
                "sete %dl;movw %dx, (%ecx);xorw %ax, %ax;popl %ebp;retl $": 1,
                "movl %eax, (%esi);jne  <.text+>;pushl %esi;calll *;jmp  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;addl $, %esi;pushl %esi;movl $, -(%ebp)": 1,
                "je  <.text+>;movw $, %ax;jmp  <.text+>;pushl %esi;calll  <.text+>": 1,
                "jmp  <.text+>;pushl %esi;calll  <.text+>;movl %eax, -(%ebp);movw -(%ebp), %ax": 1,
                "xorw %ax, %ax;popl %ebp;retl $;movw (,%ecx,), %ax;jmp - <.text+>": 1,
                "calll  <.text+>;movl -(%ebp), %eax;movw $, (%eax);jmp  <.text+>;movw (%edi), %ax": 1,
                "movl (%ebx), %esi;addl (%ebx), %esi;movzwl %ax, %eax;pushl $;popl %ecx": 1,
                "movl %eax, %ecx;movl -(%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movw (%eax), %cx": 1,
                "calll - <.text+>;cmpw $, %ax;movl -(%ebp), %ecx;movw %ax, (%ecx);jne  <.text+>": 1,
                "movl -(%ebp), %ecx;negw %ax;sbbl %eax, %eax;andl $, %eax;addl $, %eax": 1,
                "movl , %eax;movl (%ebp), %ecx;movl %ecx, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "addl (%esi), %edx;cmpb $, (%edx);movl %edx, -(%ebp);je  <.text+>;movw $, %ax": 1,
                "cmpb $, (%edx);movl %edx, -(%ebp);je  <.text+>;movw $, %ax;jmp  <.text+>": 1,
                "testb $, (%eax);je  <.text+>;movl (%eax), %ecx;movl (%edx), %esi;cmpl (%ecx), %esi": 1,
                "movl %edx, %esi;rep  movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movl (%edx), %ecx;testl $, %ecx": 1,
                "movsw (%esi), %es:(%edi);movl (%edx), %ecx;testl $, %ecx;je  <.text+>;testl $, %ecx": 1,
                "cmpw $, (%edx);je  <.text+>;movzwl (%eax), %ecx;leal (,%ecx,), %ecx;andw %si, (%ecx)": 1,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;movl -(%ebp), %esi;cmpb $, (%esi)": 1,
                "testw %ax, %ax;jne  <.text+>;movl -(%ebp), %esi;cmpb $, (%esi);jne  <.text+>": 1,
                "testw %ax, %ax;je  <.text+>;movzwl (%esi), %ecx;movzwl %ax, %eax;addl %esi, %ecx": 1,
                "movl %edi, %eax;calll - <.text+>;testw %ax, %ax;jne  <.text+>;testb $, (%esi)": 1,
                "addl %esi, %eax;pushl %eax;addl $, %ebx;pushl %ebx;calll  <.text+>": 1,
                "cmpw $, (%eax);movl -(%ebp), %esi;je  <.text+>;movl (%esi), %eax;movswl (%eax), %eax": 1,
                "cmpw %dx, (%ecx);je  <.text+>;cmpl %edx, (%eax);je  <.text+>;cmpw %dx, (%ecx)": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %ebx;leal (%ebx), %eax;cmpw $, (%eax)": 1,
                "movl %ecx, (%edi);xorl %ecx, %ecx;movb (%esi), %cl;andl $, %ecx;movw %cx, (%edi)": 1,
                "movl (%esi), %ecx;movl %ecx, (%edi);movl (%esi), %ecx;movl %ecx, (%edi);orl $-, (%eax)": 1,
                "jne  <.text+>;movw $, %ax;jmp  <.text+>;movl -(%ebp), %eax;pushl (%eax)": 1,
                "movl -(%ebp), %eax;pushl (%eax);pushl (%eax);pushl -(%ebp);calll - <.text+>": 1,
                "jne  <.text+>;movw $, %ax;movl -(%ebp), %ecx;andb $-, (%ecx);popl %edi": 1,
                "jne  <.text+>;pushl %esi;pushl %edi;pushl -(%ebp);calll - <.text+>": 1,
                "popl %eax;incl (%ebx);jmp - <.text+>;int;int": 1,
                "cmpw $, (%ebp);je  <.text+>;movl (%ebp), %eax;andw $, (%eax);xorw %ax, %ax": 1,
                "movw %di, (%eax);jne  <.text+>;pushl %ebx;pushl %edi;pushl %esi": 1,
                "pushl %edi;pushl %esi;calll  <.text+>;movl %eax, %ebx;testw %bx, %bx": 1,
                "jne  <.text+>;jmp  <.text+>;pushl $;pushl %esi;calll - <.text+>": 1,
                "pushl $;popl %edx;jmp  <.text+>;movl (%ebp), %eax;movw %bx, (%eax)": 1,
                "movl (%esi), %eax;testb $, (%eax);je  <.text+>;cmpw (%eax), %dx;jge  <.text+>": 1,
                "shrl $, %ecx;andl $, %ecx;movw %cx, (%ebx);xorl %ecx, %ecx;movb (%eax), %cl": 1,
                "pushl %edi;xorl %edi, %edi;andl $, %eax;andl $, %ecx;cmpl %edi, %esi": 1,
                "movl %esi, -(%ebp);calll *;cmpl %edi, %eax;je  <.text+>;cmpl %edi, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movsl (%esi), %es:(%edi);calll *;testl %eax, %eax": 1,
                "movw -(%ebp), %ax;movw %ax, (%ebx);movw -(%ebp), %ax;movw %ax, (%ebx);popl %edi": 1,
                "leal (%edi), %esi;xorl %edx, %edx;andl $, %eax;movw %ax, (%ecx);movb (%edi), %al": 1,
                "movl (%eax), %eax;pushl %edi;movl (%ebp), %edi;movl (%edi), %esi;addl (%edi), %esi": 1,
                "cmpw $, %ax;movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %ecx, -(%ebp);jne  <.text+>": 1,
                "jne  <.text+>;movw $, (%ebx);jmp  <.text+>;andw $, (%ebx);andl $, (%ebx)": 1,
                "calll - <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;pushl %edi": 1,
                "movw %ax, -(%ebp);movzbw (%ebx), %ax;movw %ax, -(%ebp);movzbw (%esi), %ax;movw %ax, -(%ebp)": 1,
                "negb %al;sbbl %eax, %eax;andl $, %eax;orl %eax, -(%ebp);movl (%esi), %eax": 1,
                "popl %ecx;movl %eax, (%ebx);jne  <.text+>;movw $, %ax;jmp  <.text+>": 3,
                "jne  <.text+>;movw $, %ax;jmp  <.text+>;movw $, (%ebx);movl (%ebx), %eax": 2,
                "movl -(%ebp), %edi;movw %ax, -(%ebp);jmp  <.text+>;andw $, -(%ebp);leal (%esi), %eax": 1,
                "movl (%eax), %edi;cmpl %edi, %ecx;jb  <.text+>;movl %edi, (%eax);jmp  <.text+>": 1,
                "movl %ecx, (%eax);andl $, (%eax);movw (%edx), %bx;movl -(%ebp), %edi;pushl $": 1,
                "movl -(%ebp), %edi;pushl $;calll - <.text+>;cmpl $, (%edi);je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax;pushl (%eax);pushl %edi": 1,
                "testw %ax, %ax;je  <.text+>;movw $, %ax;jmp  <.text+>;movzwl (%ebx), %eax": 1,
                "addw %cx, -(%ebp);cmpw %cx, -(%ebp);movl %eax, -(%ebp);je  <.text+>;cmpb $, %bl": 1,
                "movb $, -(%ecx,%eax);jmp  <.text+>;movw $, -(%ecx,%eax);andw $, -(%ebp);cmpw $, -(%ebp)": 1,
                "cmpw $, -(%ebp);je  <.text+>;movw (%esi), %cx;movl -(%ebp), %eax;movw %cx, (%eax)": 1,
                "je  <.text+>;movw (%esi), %cx;movl -(%ebp), %eax;movw %cx, (%eax);movl (%esi), %ecx": 1,
                "movl %ecx, (%eax);jmp  <.text+>;movl $, %eax;movl %eax, -(%ebp);movw $, -(%ebp)": 1,
                "subl $, %esp;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi": 5,
                "movl %eax, (%ebp);calll - <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %ecx;pushl %ebx;movl (%eax), %ebx": 2,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;leal -(%ebp), %edi;calll - <.text+>": 1,
                "jmp  <.text+>;movl %eax, -(%ebp);movb (%esi), %al;testb %al, %al;je  <.text+>": 1,
                "shll $, %eax;orl -(%ebp), %eax;andl $, %eax;movl %eax, -(%ebp);leal (%esi), %edi": 1,
                "pushl %ecx;pushl %ecx;pushl %eax;movzwl (%esi), %eax;addl %esi, %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;calll - <.text+>;jmp - <.text+>": 1,
                "calll - <.text+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "leal -(%ebp), %edx;pushl %edx;pushl %eax;calll *(%ecx);movl (%ebp), %edi": 1,
                "movl %ebx, %eax;calll - <.text+>;movl -(%ebp), %eax;cmpw $, (%eax);je  <.text+>": 1,
                "pushl %eax;pushl %ebx;calll  <.text+>;popl %edi;popl %esi": 2,
                "testb $, (%edx);je  <.text+>;movl (%edi), %eax;movl %eax, (%edi);xorl %eax, %eax": 1,
                "pushl $;pushl %edi;calll  <.text+>;popl %edi;movw $, %ax": 1,
                "movl (%esi), %ecx;testb $, %cl;movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "xorl %eax, %eax;movw (%esi), %ax;pushl %eax;pushl %ebx;pushl $": 5,
                "movw (%edi), %ax;pushl %eax;leal (%esi), %eax;pushl %eax;xorl %eax, %eax": 3,
                "je - <.text+>;cmpw $, -(%ebp);je  <.text+>;movl -(%ebp), %eax;movl %eax, (%esi)": 2,
                "cmpw %ax, -(%ebp);jne  <.text+>;addl $, %esi;movl (%esi), %ecx;pushl %eax": 1,
                "jmp  <.text+>;pushl $;pushl $;pushl -(%ebp);calll  <.text+>": 1,
                "cmpw $, -(%ebp);jne  <.text+>;decw (%edi);movw -(%ebp), %ax;jmp  <.text+>": 1,
                "leal (%edi,%eax), %edi;rep  movsl (%esi), %es:(%edi);movl %ebx, %ecx;movl (%ebp), %ebx;andl $, %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);andw $, (%eax);andw $, (%eax);xorl %edi, %edi": 1,
                "movw -(%esi), %di;movzwl %di, %esi;decl %esi;je  <.text+>;subl $, %esi": 1,
                "subl $, %esi;je  <.text+>;decl %esi;je  <.text+>;subl $, %esi": 1,
                "movl (%ebp), %edi;movw (%ebp), %cx;subw (%edi), %cx;movw %cx, (%eax);movl (%ebx), %esi": 1,
                "movw (%ebp), %cx;subw (%edi), %cx;movw %cx, (%eax);movl (%ebx), %esi;addl (%edi), %esi": 1,
                "jmp  <.text+>;cmpw $, -(%ebp);jne  <.text+>;movl (%ebx), %esi;movl (%edx), %edi": 1,
                "movl (%edx), %ecx;movl (%ecx), %ecx;movl %ecx, (%eax);andb $-, (%edx);cmpw $, -(%ebp)": 1,
                "subl %ecx, (%eax);sbbl %edi, (%eax);jmp  <.text+>;movw -(%ebp), %cx;movw %cx, (%eax)": 1,
                "andl $, -(%ebp);cmpw $, (%ebp);movw -(%ebp), %ax;je  <.text+>;movzwl (%ebp), %edx": 1,
                "pushl $;movw %ax, (%ebx);movl (%edi), %edi;popl %ecx;movl %ebx, %esi": 1,
                "rep  movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movl (%ebp), %edi;pushl $;pushl %edi": 1,
                "pushl %edi;calll  <.text+>;movl (%ebx), %eax;movl (%ebp), %esi;movl %eax, (%esi)": 1,
                "calll  <.text+>;movl (%ebx), %eax;movl (%ebp), %esi;movl %eax, (%esi);movl (%ebx), %eax": 1,
                "movl (%ebp), %esi;movl %eax, (%esi);movl (%ebx), %eax;movl %eax, (%esi);andl $, (%ebx)": 1,
                "movl %eax, (%esi);movl (%ebx), %eax;movl %eax, (%esi);andl $, (%ebx);addl $, (%ebx)": 1,
                "andb $-, (%edi);xorl %ecx, %ecx;movl %eax, %edx;subl (%ebx), %edx;movl %ecx, %esi": 1,
                "movzwl (%ebx), %ecx;addl (%ebx), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "jmp  <.text+>;movl (%ebx), %edi;movl (%ebp), %eax;addl (%eax), %edi;pushl $": 1,
                "negl %eax;andl $, %eax;addl %eax, (%ebx);pushl %eax;pushl %edi": 1,
                "movw %ax, (%ebx);movw %ax, (%ebx);calll  <.text+>;testw %ax, %ax;movl %eax, -(%ebp)": 1,
                "movl (%eax), %eax;movl (%esi), %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movl %ecx, (%eax)": 2,
                "xorl %edx, %edx;cmpw %dx, (%ebx);je  <.text+>;xorl %ecx, %ecx;movw $, %cx": 1,
                "movl %ebx, %esi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 1,
                "movl %ecx, (%ebx);movl %ecx, (%esi);movl (%ebx), %ecx;movl %ecx, (%esi);movl (%eax), %eax": 1,
                "addl (%eax), %edi;pushl $;popl %ecx;movl %ebx, %esi;rep  movsl (%esi), %es:(%edi)": 1,
                "pushl %eax;pushl (%ebp);pushl (%esi);calll *;addl $, %esp": 2,
                "testl %edx, %edx;je  <.text+>;leal (%edi), %ebx;cmpw $, %bx;ja  <.text+>": 1,
                "jne  <.text+>;movw $, %ax;jmp  <.text+>;movl (%esi), %eax;movw $, (%esi)": 1,
                "jmp  <.text+>;cmpw %di, -(%ebp);je  <.text+>;cmpw %di, (%ebp);jne  <.text+>": 1,
                "pushl %edi;pushl (%ebp);pushl %ebx;calll  <.text+>;movl %eax, %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl (%ebp);movl $, -(%ebp)": 1,
                "pushl %eax;pushl %edi;pushl (%ebp);movl $, -(%ebp);calll - <.text+>": 1,
                "movl (%ebp), %edi;movl (%edi), %ebx;cmpw $, (%ebx);movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "movl (%edi), %eax;pushl $;pushl %esi;movl %eax, (%edi);calll - <.text+>": 1,
                "movl %eax, (%esi);pushl (%edi);calll - <.text+>;movb %al, (%esi);xorl %ecx, %ecx": 1,
                "movl %ecx, %eax;pushl %eax;pushl %esi;pushl %edi;calll - <.text+>": 1,
                "pushl %esi;pushl %edi;calll - <.text+>;pushl (%esi);pushl (%esi)": 1,
                "movl (%ebp), %ebx;movl %eax, -(%ebp);movl (%ebx), %eax;movw (%eax), %ax;pushl %esi": 1,
                "jne  <.text+>;pushl (%ebx);pushl %esi;calll  <.text+>;testw %ax, %ax": 1,
                "cmpw %si, %ax;je  <.text+>;testb $, (%ebx);jne  <.text+>;cmpw $, %ax": 1,
                "jne  <.text+>;movl (%edi), %ecx;movl (%edi), %edx;andl $, (%edi);movl %ecx, %eax": 1,
                "cmpl (%eax), %ecx;je  <.text+>;movw $, %ax;jmp  <.text+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl (%esi), %ecx;movl %ecx, (%eax);jmp  <.text+>;movl (%esi), %ecx": 1,
                "movl (%esi), %ecx;movl (%ebx), %eax;movl %ecx, (%eax);movl (%ebx), %eax;movw (%eax), %ax": 1,
                "movw %ax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;cmpl %eax, (%edi)": 1,
                "cmpl , %ecx;jne  <.text+>;movl (%eax), %ecx;cmpl , %ecx;je  <.text+>": 1,
                "addl $, %eax;pushl %eax;movl $, -(%ebp);calll - <.text+>;movl -(%ebp), %ecx": 1,
                "testb $, (%ebx);je  <.text+>;movl (%ebx), %eax;pushl (%eax);pushl %edi": 1,
                "pushl %edi;pushl %ebx;calll - <.text+>;movl -(%ebp), %ecx;movl (%ebx), %esi": 1,
                "movl -(%ebp), %ecx;movl (%ebx), %esi;xorl %edx, %edx;movl %ecx, %eax;divl (%esi)": 1,
                "jmp  <.text+>;andl $, (%edi);jmp  <.text+>;shrl $, %ecx;subl %ecx, (%ebx)": 1,
                "je  <.text+>;cmpw $, (%eax);jne  <.text+>;pushl (%ebx);pushl %ebx": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;pushl (%edi);movl (%edi), %esi": 1,
                "movl (%edi), %eax;testb $, (%eax);je  <.text+>;orb $, (%edi);cmpw $, (%ebp)": 1,
                "pushl %edi;movl (%ebx), %edi;pushl (%esi);movl %eax, -(%ebp);pushl (%esi)": 1,
                "movl (%ebx), %edi;pushl (%esi);movl %eax, -(%ebp);pushl (%esi);xorl %eax, %eax": 1,
                "pushl %eax;calll - <.text+>;cmpw $, %ax;je - <.text+>;cmpw $, -(%ebp)": 5,
                "calll  <.text+>;movw %di, %ax;jmp - <.text+>;calll - <.text+>;leal -(%ebp), %eax": 1,
                "cmpw $, (%esi);movl %eax, -(%ebp);movw (%eax), %ax;pushl %edi;movl %esi, -(%ebp)": 1,
                "calll  <.text+>;cmpw %di, %ax;jne  <.text+>;cmpw %di, (%esi);jne  <.text+>": 1,
                "pushl %edi;pushl -(%ebp);calll - <.text+>;testw %ax, %ax;je  <.text+>": 1,
                "pushl -(%ebp);calll - <.text+>;testw %ax, %ax;je  <.text+>;movw $, %di": 1,
                "addl (%esi), %edi;pushl (%ebp);movl %eax, (%ebx);movl -(%ebp), %eax;movswl (%eax), %eax": 1,
                "pushl %ebx;calll  <.text+>;movl -(%ebp), %eax;cmpw $, (%eax);je  <.text+>": 1,
                "pushl %ebx;calll  <.text+>;testw %ax, %ax;je  <.text+>;andb $-, (%esi)": 2,
                "testw %ax, %ax;je  <.text+>;andb $-, (%esi);movl -(%ebp), %esi;movw %ax, %di": 1,
                "je  <.text+>;andb $-, (%esi);movl -(%ebp), %esi;movw %ax, %di;pushl $": 1,
                "je  <.text+>;orb $, (%edi);movl $, (%esi);movw (%esi), %ax;pushl $": 1,
                "pushl -(%ebp);calll  <.text+>;movw %di, %ax;jmp  <.text+>;calll - <.text+>": 1,
                "testw %ax, %ax;jne  <.text+>;movl (%ebx), %eax;testb $, (%eax);je  <.text+>": 1,
                "je - <.text+>;pushl $;pushl $;pushl -(%ebp);calll - <.text+>": 1,
                "pushl -(%ebp);calll - <.text+>;testw %ax, %ax;je - <.text+>;movw $, %ax": 1,
                "testw %ax, %ax;je - <.text+>;movw $, %ax;jmp - <.text+>;int": 1,
                "movw %ax, -(%ebp);movw %ax, -(%ebp);movw %ax, -(%ebp);calll *;leal -(%ebp), %eax": 1,
                "movw %ax, -(%ebp);calll *;leal -(%ebp), %eax;pushl %eax;movl %edi, %ecx": 1,
                "testl %eax, %eax;pushl %esi;jne  <.text+>;pushl (%esi);jmp  <.text+>": 1,
                "calll *%edi;popl %ecx;pushl %esi;calll *%edi;popl %ecx": 1,
                "calll  <.text+>;leal (%ebp), %eax;pushl %eax;pushl %edi;calll - <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;pushl %edi;calll *%eax;addl $, %esi": 1,
                "testl %esi, %esi;pushl %edi;movl (%ebx), %edi;je  <.text+>;cmpw $, (%edi)": 1,
                "testl %esi, %esi;jne - <.text+>;testl %esi, %esi;jne  <.text+>;pushl $": 1,
                "testl %esi, %esi;jne  <.text+>;pushl $;pushl %ebx;pushl (%ebp)": 1,
                "pushl $;pushl %ebx;pushl (%ebp);calll - <.text+>;jmp  <.text+>": 1,
                "andl $, (%eax);pushl (%esi);calll - <.text+>;movl (%esi), %eax;addl $, %eax": 1,
                "jne  <.text+>;movswl (%ebp), %eax;imull $, %eax, %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;pushl %edi;pushl (%ebp);pushl (%esi)": 1,
                "pushl (%ebp);pushl (%esi);calll *%eax;movl %eax, %ebx;incl (%ebp)": 1,
                "jmp  <.text+>;pushl %esi;movl , %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll *%edi;cmpl %ebx, %eax;popl %ecx;movl %eax, -(%ebp);je  <.text+>": 3,
                "movl %ebx, -(%ebp);calll *%esi;testl %eax, %eax;jne  <.text+>;calll *": 1,
                "je  <.text+>;pushl -(%ebp);calll *%edi;cmpl %ebx, %eax;popl %ecx": 1,
                "calll *%edi;movl (%ebp), %edi;movl %eax, (%edi);movl -(%ebp), %eax;popl %ecx": 1,
                "movl %eax, (%edi);movl -(%ebp), %eax;popl %ecx;jmp  <.text+>;movl -(%ebp), %eax": 1,
                "pushl -(%ebp);calll *;movl -(%ebp), %eax;popl %esi;popl %ebx": 1,
                "movl %esp, %ebp;pushl %ecx;pushl $;pushl $;movl $, -(%ebp)": 1,
                "pushl %esi;movl , %esi;pushl %edi;pushl ;calll *%esi": 1,
                "movl , %eax;xorl %edi, %edi;cmpl %edi, %eax;popl %ecx;movl %edi, ": 1,
                "movl %ecx, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp);movl %edx, -(%ebp);je  <.text+>": 1,
                "jmp  <.text+>;movw (%ecx), %ax;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);pushl %ebx;movsl (%esi), %es:(%edi)": 1,
                "pushl $;popl %ecx;divl %ecx;xorl %edx, %edx;cmpl %ebx, %eax": 1,
                "jb - <.text+>;jmp  <.text+>;pushl %esi;calll *%edi;orl $-, %esi": 1,
                "movl $, -(%ebp);cmpl $-, %esi;je  <.text+>;pushl %esi;calll *%edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $-;pushl -(%ebp);pushl %edi": 1,
                "addl $, %eax;pushl %eax;calll - <.text+>;movl -(%ebp), %eax;movl %edi, (%eax)": 1,
                "movl -(%ebp), %eax;movb %bl, (%eax);movl -(%ebp), %eax;andb $-, (%eax);movl -(%ebp), %eax": 2,
                "movw %bx, (%eax);movl -(%ebp), %eax;movl (%eax), %eax;movw %bx, (%eax);movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %ebx, (%eax);movl -(%ebp), %eax;movl (%eax), %eax": 5,
                "movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;movl (%eax), %eax": 4,
                "movl (%eax), %eax;cmpl %ebx, %eax;je  <.text+>;pushl -(%ebp);pushl %eax": 1,
                "je  <.text+>;movl %eax, (%ecx);movl -(%ebp), %ecx;movl (%ecx), %eax;cmpw %bx, (%eax)": 2,
                "pushl %eax;calll *%esi;popl %ecx;movl -(%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %ebx, (%eax);pushl %edi;calll *": 1,
                "pushl (%eax);calll *;addl $, %esp;cmpw %bx, -(%ebp);movl -(%ebp), %eax": 1,
                "popl %ecx;xorl %eax, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;movl , %ecx;pushl %ebx": 1,
                "movl %ecx, -(%ebp);movl , %ecx;pushl %eax;pushl $;movl %ecx, -(%ebp)": 1,
                "movw -(%ebp), %ax;cmpw -(%ebp), %ax;jne  <.text+>;movl %esi, (%ebx);jmp  <.text+>": 1,
                "jne  <.text+>;jmp - <.text+>;movw -(%ebp), %ax;movl $, %esi;leal -(%ebp), %edi": 1,
                "leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movw %ax, -(%ebp);leal -(%ebp), %eax": 1,
                "movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll - <.text+>;cmpl $, -(%ebp)": 1,
                "movl (%edx), %esi;cmpl %ecx, %esi;jae  <.text+>;testb $, (%edx);jne  <.text+>": 1,
                "pushl %eax;pushl (%esi);pushl %esi;calll  <.text+>;testw %ax, %ax": 1,
                "jne  <.text+>;pushl (%esi);leal (%edi), %eax;pushl %esi;movl %eax, (%esi)": 1,
                "movl -(%ebp), %ecx;popl %edi;movl %ecx, (%esi);popl %esi;leave": 1,
                "pushl %eax;calll - <.text+>;testw %ax, %ax;je  <.text+>;movl $, -(%ebp)": 1,
                "pushl %esi;calll - <.text+>;cmpw $, %ax;jne  <.text+>;movb (%esi), %al": 1,
                "movw %cx, (%eax);calll - <.text+>;testl %eax, %eax;jne  <.text+>;leal (%esi), %eax": 1,
                "calll - <.text+>;cmpw $, %ax;je - <.text+>;movl (%esi), %eax;movl (%eax), %ecx": 1,
                "movl (%eax), %ecx;movl -(%ebp), %edx;cmpl %ecx, %edx;jb  <.text+>;movl %ecx, (%eax)": 3,
                "jne  <.text+>;cmpw $, %dx;je  <.text+>;cmpw $, %dx;jne  <.text+>": 1,
                "je  <.text+>;cmpw $, -(%ebp);jne  <.text+>;movl (%esi), %eax;incl (%eax)": 1,
                "pushl (%esi);pushl %esi;calll - <.text+>;incl -(%ebp);movl %eax, -(%ebp)": 1,
                "testw %ax, %ax;jne  <.text+>;cmpw %ax, -(%ebp);je  <.text+>;leal (%ebp), %eax": 1,
                "jmp  <.text+>;testl %ebx, %ebx;je  <.text+>;xorl %eax, %eax;movw (%edi), %ax": 1,
                "pushl %eax;pushl %ebx;pushl $;calll *(%ebx);xorl %eax, %eax": 1,
                "calll *(%ebx);xorl %eax, %eax;incl %eax;cmpw %ax, (%ebp);jne  <.text+>": 1,
                "pushl (%ebp);pushl -(%ebp);calll - <.text+>;xorl %ebx, %ebx;incl %ebx": 1,
                "jne  <.text+>;movl -(%ebp), %eax;testl %eax, %eax;je  <.text+>;xorl %ecx, %ecx": 1,
                "xorl %ecx, %ecx;movw (%esi), %cx;pushl %ecx;pushl %eax;pushl $": 1,
                "cmpw $, %ax;jne  <.text+>;movl $, -(%ebp);cmpw $, -(%ebp);je - <.text+>": 2,
                "pushl %ebx;pushl -(%ebp);calll - <.text+>;cmpw %bx, %ax;je  <.text+>": 1,
                "calll *(%ebx);cmpw $, %ax;jne  <.text+>;movl $, -(%ebp);cmpw $, -(%ebp)": 1,
                "je  <.text+>;movl -(%ebp), %eax;pushl -(%ebp);movl %eax, (%esi);calll - <.text+>": 1,
                "testw %ax, %ax;jne  <.text+>;testw %bx, %bx;jle  <.text+>;pushl $": 1,
                "movl %ebx, (%esi);movl -(%ebp), %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "movw (%eax), %ax;movl $, %edx;cmpw (%edx), %ax;jne  <.text+>;movl (%esi), %eax": 1,
                "jne  <.text+>;leal (%ebp), %eax;pushl %eax;pushl $;pushl %esi": 1,
                "rep  cmpsl %es:(%edi), (%esi);setne %al;decl %eax;andl $, %eax;jmp  <.text+>": 1,
                "movl %eax, -(%ebp);je  <.text+>;movl (%edi), %eax;shrl $, %eax;leal (%ebp), %ecx": 1,
                "leal (%ebp), %ecx;andl $, %eax;pushl %ecx;pushl %eax;pushl %esi": 1,
                "leal (%ebp), %ecx;pushl %ecx;pushl -(%ebp);pushl %eax;pushl %esi": 1,
                "cmpl %ecx, %eax;je  <.text+>;cmpw %cx, -(%ebp);je  <.text+>;movl (%esi), %edx": 1,
                "pushl %eax;movl %ecx, (%eax);calll  <.text+>;movl %eax, %ebx;cmpw $, %bx": 1,
                "jne  <.text+>;movw -(%ebp), %si;movl -(%ebp), %eax;subw (%eax), %si;testw %si, %si": 2,
                "incl %ebx;pushl %eax;pushl %ebx;pushl %ebx;pushl (%ebp)": 1,
                "jmp - <.text+>;pushl %ecx;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "pushl $;popl %ebx;jmp - <.text+>;testw %ax, %ax;jne  <.text+>": 1,
                "sbbl %ebx, %ebx;addl $, %ebx;jmp - <.text+>;pushl (%ebp);pushl %edi": 1,
                "cmpw %cx, %si;jle  <.text+>;xorl %ebx, %ebx;incl %ebx;jmp - <.text+>": 1,
                "cmpw (%ecx), %ax;je  <.text+>;movl (%edi), %edi;orl $, (%edi);movl $, -(%ebp)": 1,
                "testl %eax, %eax;jne  <.text+>;movl $, %edi;jmp  <.text+>;pushl %eax": 1,
                "movl %edi, (%esi);movw %di, (%esi);andl $-, (%eax);movl (%esi), %eax;movw %di, (%eax)": 1,
                "cmpw $, (%esi);je  <.text+>;pushl $;pushl $;pushl -(%ebp)": 1,
                "je  <.text+>;cmpw $, (%ebp);je  <.text+>;movl (%esi), %ebx;jmp  <.text+>": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl %ebx;calll  <.text+>": 3,
                "movl %ecx, (%eax);movl -(%ebp), %eax;movl %eax, (%ebx);popl %edi;popl %esi": 1,
                "je  <.text+>;leal (%edi), %eax;pushl %eax;calll - <.text+>;cmpw $, -(%ebp)": 1,
                "calll - <.text+>;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax;movswl (%eax), %eax": 2,
                "cmpw $, %ax;je - <.text+>;movl -(%ebp), %eax;addl %eax, -(%ebp);cmpw $, -(%ebp)": 2,
                "pushl -(%ebp);pushl %esi;pushl %ebx;calll  <.text+>;movzwl (%ebx), %ecx": 1,
                "calll  <.text+>;movzwl (%ebx), %ecx;movl -(%ebp), %eax;xorl %edx, %edx;divl %ecx": 2,
                "movl -(%ebp), %eax;movl %eax, (%edi);movzwl -(%ebp), %eax;movl %eax, (%edi);movzwl -(%ebp), %eax": 1,
                "decl %eax;decl %eax;je  <.text+>;movl $, -(%ebp);jmp  <.text+>": 1,
                "andb $-, (%esi);movl $, -(%ebp);movl %ecx, (%ebx);pushl %ebx;calll - <.text+>": 1,
                "pushl -(%ebp);calll - <.text+>;pushl %ebx;calll  <.text+>;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;testw %ax, %ax;je - <.text+>;cmpw $, -(%ebp);je - <.text+>": 1,
                "movw -(%ebp), %ax;popl %edi;popl %ebx;calll - <.text+>;leave": 1,
                "cmpw $, %ax;jne  <.text+>;pushl $;pushl %esi;calll  <.text+>": 2,
                "jne  <.text+>;pushl $;pushl (%esi);pushl %esi;calll  <.text+>": 1,
                "movl (%esi), %esi;addl $, %edi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl (%ebp), %edi": 1,
                "testl %ebx, %ebx;je  <.text+>;movl (%ebx), %edi;subl (%ebx), %edi;movw (%ebx), %ax": 1,
                "je  <.text+>;jmp  <.text+>;movl (%ebp), %edi;movl (%eax), %eax;pushl $": 1,
                "movl %eax, -(%ebp);jb  <.text+>;movl %esi, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;incl (%eax);movl %eax, %edx;incl -(%ebp);movzwl -(%ebp), %eax": 1,
                "movzwl -(%ebp), %eax;cmpl (%ebx), %eax;jb - <.text+>;xorl %esi, %esi;pushl -(%ebp)": 1,
                "movl %esi, -(%ebp);jbe  <.text+>;xorl %ecx, %ecx;movl (%ebx), %edi;movl (%ebx), %esi": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);movw (%ecx), %cx;movw %cx, (%eax);incl -(%ebp)": 1,
                "movswl -(%ebp), %eax;movl (%ebx), %ecx;movl -(%ebp), %edi;movl %eax, (%ebx);movl (%ebx), %eax": 1,
                "movl -(%ebp), %edi;movl %eax, (%ebx);movl (%ebx), %eax;pushl %edi;addl %eax, %ecx": 1,
                "addl %eax, %ecx;pushl %ecx;pushl %eax;calll *;movl (%ebx), %eax": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);je  <.text+>;cmpl %edi, (%eax)": 1,
                "pushl %ebx;calll - <.text+>;movl (%ebx), %eax;cmpl %edi, %eax;je  <.text+>": 1,
                "je  <.text+>;movl (%ebx), %ecx;movl (%eax), %eax;xorl %edx, %edx;divl (%ecx)": 1,
                "calll - <.text+>;cmpw $, -(%ebp);movl (%eax), %edi;jne  <.text+>;movzwl (%ebx), %ecx": 1,
                "cmpw $, -(%ebp);movl (%eax), %edi;jne  <.text+>;movzwl (%ebx), %ecx;movl -(%ebp), %eax": 1,
                "subl %ecx, %eax;je  <.text+>;decl %eax;decl %eax;je  <.text+>": 2,
                "movl $, -(%ebp);jmp - <.text+>;orb $, (%ebx);orw $, (%esi);movl (%ebx), %eax": 1,
                "pushl -(%ebp);calll - <.text+>;movl %edi, -(%ebp);cmpw $, -(%ebp);jne  <.text+>": 1,
                "pushl %esi;calll  <.text+>;orl $, (%esi);movl -(%ebp), %eax;leal (%esi), %edi": 1,
                "cmpl , %eax;jne  <.text+>;xorl %ebx, %ebx;pushl %ebx;pushl (%ebp)": 1,
                "movl %eax, (%ecx);movl , %ecx;movl (%edi), %eax;movl %ecx, (%eax);movl , %ecx": 1,
                "calll  <.text+>;testw %ax, %ax;jne  <.text+>;movl (%edi), %ecx;cmpw $, (%ecx)": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;movl (%ebx), %edi;movl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "orb $-, (%ebx);movl (%ebp), %esi;andl $, ;andb $-, (%ebx);pushl %esi": 1,
                "jne  <.text+>;testb $, (%ebx);jne  <.text+>;leal (%ebx), %eax;pushl %eax": 1,
                "calll  <.text+>;cmpw %si, %ax;movl %eax, -(%ebp);je  <.text+>;movl %esi, -(%ebp)": 1,
                "movl %eax, (%ecx);jne  <.text+>;movl $, -(%ebp);jmp  <.text+>;andb $-, (%ebx)": 1,
                "xorl %esi, %esi;cmpl %esi, %eax;je  <.text+>;pushl %esi;movl %ebx, %edi": 1,
                "cmpl %esi, %eax;je  <.text+>;pushl %esi;movl %ebx, %edi;calll - <.text+>": 2,
                "calll  <.text+>;cmpw $, %ax;movl %eax, -(%ebp);jne  <.text+>;cmpl %esi, (%ebx)": 1,
                "xorl %esi, %esi;movl %esi, (%ebx);movl (%edx), %ecx;movl %ecx, (%ebx);movw , %cx": 1,
                "cmpl $, %edx;je  <.text+>;cmpl $, %edx;jne  <.text+>;cmpl %esi, (%ebx)": 1,
                "pushl (%ebx);pushl %ebx;calll  <.text+>;testw %ax, %ax;movl %eax, -(%ebp)": 1,
                "jne  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "pushl %eax;pushl (%ebx);pushl %ebx;calll  <.text+>;cmpw $, %ax": 1,
                "pushl (%ebp);movl %ebx, %esi;calll - <.text+>;testb $, (%ebx);movl %eax, -(%ebp)": 1,
                "pushl (%ebp);movl %ebx, %ecx;calll - <.text+>;movl %eax, -(%ebp);testb $, (%ebx)": 1,
                "movl (%eax), %edi;movl %edx, %ecx;rep  movsl (%esi), %es:(%edi);cmpw $, -(%ebp);je  <.text+>": 1,
                "retl $;movb , %al;sbbl (%edx), %ecx;addl %edx, (%ebx);popl %ss": 1,
                "sbbl (%edx), %ecx;addl %edx, (%ebx);popl %ss;orb (%ecx), %al;subl $, %eax": 1,
                "popl %ss;orb (%ecx), %al;popl %esp;popl %ss;orb (%ecx), %al": 1,
                "subl (%edx,%ecx), %ebx;addl %edi, (%eax);sbbb $, %al;addl %ebx, %ebp;sbbb %cl, (%edx)": 1,
                "addl %ebx, %ebp;sbbb %cl, (%edx);addl %ecx, %esp;int;int": 1,
                "jmp  <.text+>;orl %ecx, %eax;jne  <.text+>;pushl (%esi);pushl %esi": 1,
                "cmpl %eax, %esi;ja  <.text+>;cmpl $, (%ebp);jne  <.text+>;movl %esi, %eax": 1,
                "retl;xorw %ax, %ax;retl;int;int": 1,
                "movl %eax, %esi;testb $, (%esi);jne  <.text+>;pushl %ebx;leal (%esi), %ebx": 1,
                "popl %edi;popl %ebx;popl %esi;retl;int": 1,
                "jmp  <.text+>;movl %edx, (%eax);movw -(%ebp), %cx;movw %cx, (%eax);cmpw $, -(%ebp)": 1,
                "jmp  <.text+>;movl (%eax), %eax;pushl %esi;movl %eax, (%esi);calll - <.text+>": 2,
                "je  <.text+>;cmpw %di, (%ebp);jne  <.text+>;movw $, %ax;jmp  <.text+>": 1,
                "cmpl %edi, %eax;je  <.text+>;cmpw %di, (%eax);je  <.text+>;pushl %eax": 1,
                "pushl %eax;calll  <.text+>;leal -(%ebp), %eax;pushl %eax;movl (%esi), %eax": 1,
                "je  <.text+>;pushl %esi;calll - <.text+>;testw %di, %di;je  <.text+>": 1,
                "xorl %edi, %edi;cmpl %edi, (%esi);je  <.text+>;pushl %esi;calll - <.text+>": 1,
                "jne  <.text+>;pushl %edi;pushl $;pushl -(%ebp);calll - <.text+>": 1,
                "jne  <.text+>;leal (%esi), %eax;pushl %eax;calll  <.text+>;movl %eax, %edi": 1,
                "movw -(%ebp), %cx;pushl %eax;movw %cx, (%eax);pushl %esi;movl %eax, (%esi)": 1,
                "movw %cx, (%eax);pushl %esi;movl %eax, (%esi);movl %edi, -(%ebp);calll  <.text+>": 1,
                "movzwl -(%ebp), %eax;movl %eax, (%ebx);cmpw $, -(%ebp);je  <.text+>;cmpw $, -(%ebp)": 1,
                "pushl %ecx;pushl %ecx;pushl %eax;pushl $;calll *(%eax)": 1,
                "testb $, (%esi);jne  <.text+>;pushl $;movl %esi, %ecx;calll - <.text+>": 1,
                "movl (%esi), %ecx;movl %eax, %edx;andl %ecx, %edx;cmpl $-, %edx;je - <.text+>": 1,
                "retl $;movl (%esi), %eax;orl (%esi), %eax;je - <.text+>;pushl (%ebx)": 1,
                "pushl %esi;calll  <.text+>;testw %ax, %ax;jge  <.text+>;movl %eax, %edi": 1,
                "testw %ax, %ax;jl - <.text+>;movl (%esi), %eax;testb $, (%eax);je  <.text+>": 1,
                "je  <.text+>;pushl (%eax);movswl (%eax), %eax;pushl $;pushl %eax": 1,
                "jne  <.text+>;movl %esi, %eax;calll - <.text+>;xorl %eax, %eax;movw (%esi), %ax": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;movl (%ebx), %esi": 1,
                "xorl %eax, %eax;cmpl (%ebx), %edi;jae  <.text+>;jmp  <.text+>;pushl $": 1,
                "testw %ax, %ax;movl (%ebp), %ecx;movw %ax, (%ecx);jne  <.text+>;movl (%ebx), %esi": 1,
                "imull %ecx, %edi;pushl %edi;pushl %esi;calll  <.text+>;xorl %eax, %eax": 1,
                "je  <.text+>;movl (%esi), %eax;movl %eax, (%ebx);movw (%esi), %cx;leal (%ebx), %eax": 1,
                "movl (%esi), %eax;movl %eax, (%ebx);movw (%esi), %cx;leal (%ebx), %eax;movw %cx, (%eax)": 1,
                "testb $, (%esi);je  <.text+>;pushl (%edi);xorl %eax, %eax;movw (%esi), %ax": 1,
                "movw (%esi), %ax;pushl $;pushl %eax;calll - <.text+>;xorl %ecx, %ecx": 1,
                "cmpl %ecx, %eax;je  <.text+>;addl $, %esi;movl $, %ecx;movl %eax, %edi": 1,
                "andl $, (%edi);movw $, (%edi);jmp  <.text+>;movl %ecx, (%edi);cmpw $, -(%ebp)": 1,
                "je  <.text+>;cmpw $, (%eax);jne  <.text+>;movl %ebx, %eax;calll - <.text+>": 1,
                "cmpw $, (%edi);je  <.text+>;movl (%ebx), %eax;movw (%eax), %ax;cmpw (%edi), %ax": 1,
                "calll - <.text+>;orb $, (%ebx);pushl $;pushl %ebx;calll  <.text+>": 1,
                "pushl $;pushl (%ebx);movw %ax, (%ebx);pushl %ebx;calll  <.text+>": 1,
                "movw %ax, (%ebx);pushl %ebx;calll  <.text+>;testw %ax, %ax;movl %eax, -(%ebp)": 1,
                "movl (%ebx), %eax;movl (%eax), %eax;movl (%ebx), %ecx;movl %eax, (%ecx);movzwl (%ebx), %esi": 1,
                "addl (%ecx), %eax;movl %eax, (%ebx);testb $, (%ecx);je  <.text+>;pushl (%ecx)": 1,
                "pushl $;pushl %eax;calll - <.text+>;andb $-, (%ebx);movl $, -(%ebp)": 1,
                "je  <.text+>;leal -(%ebp), %eax;pushl %eax;movl %esi, %eax;calll - <.text+>": 1,
                "testw %ax, %ax;jne  <.text+>;cmpw %ax, -(%ebp);jne  <.text+>;andl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl %ebx, %esi;calll - <.text+>;movl (%ebx), %eax;addl $, %eax": 1,
                "addl $, %eax;testb $, (%eax);jne  <.text+>;orb $, (%eax);jmp  <.text+>": 1,
                "jmp  <.text+>;cmpw $, %ax;jne  <.text+>;movl (%ebx), %eax;orl $, (%eax)": 1,
                "jne  <.text+>;movl (%ebx), %eax;movl %eax, -(%ebp);jmp  <.text+>;cmpw $, -(%ebp)": 1,
                "je  <.text+>;movl $, -(%ebp);jmp  <.text+>;xorl %esi, %esi;movw (%edi), %ax": 1,
                "pushl %esi;pushl %esi;pushl %eax;pushl $;calll *(%eax)": 1,
                "je  <.text+>;movw $, (%edi);cmpw $, -(%ebp);jne  <.text+>;xorl %esi, %esi": 1,
                "xorl %esi, %esi;cmpw %si, (%ebx);je  <.text+>;movl (%ebx), %eax;cmpl %esi, %eax": 1,
                "movl %esi, (%edi);movl %esi, (%edi);jmp  <.text+>;testb $, %al;je  <.text+>": 1,
                "xorl %esi, %esi;leal (%ebp), %eax;movw %si, (%ebx);pushl %eax;movl %esi, (%edi)": 1,
                "movl $, -(%ebp);jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax": 1,
                "je  <.text+>;cmpl $, %eax;je - <.text+>;jmp - <.text+>;movw $, (%edi)": 1,
                "cmpw $, (%eax);je  <.text+>;movl %eax, %edi;jmp - <.text+>;cmpw $, %ax": 1,
                "jne - <.text+>;movl (%ebx), %eax;testb $, (%eax);je  <.text+>;leal (%ebx), %eax": 1,
                "je  <.text+>;pushl $;pushl (%ebp);calll *%esi;popl %ecx": 2,
                "calll *%esi;movl , %ecx;leal (%ecx,%eax,), %eax;addl $, %esp;movl %eax, ": 1,
                "pushl (%ebp);calll *%esi;movw %ax, ;movzwl %ax, %eax;incl %eax": 1,
                "incl %eax;pushl $;pushl %eax;calll *%edi;addl $, %esp": 1,
                "cmpw %bx, (%ebp);jne  <.text+>;pushl (%ebp);movswl %di, %esi;imull $, %esi, %esi": 1,
                "movswl %di, %esi;imull $, %esi, %esi;orw $, (%esi,%eax);movl , %eax;movl %ebx, (%esi,%eax)": 1,
                "orw $, (%esi,%eax);movl , %eax;movl %ebx, (%esi,%eax);movl , %eax;movl %ebx, (%esi,%eax)": 1,
                "testl %eax, %eax;jne  <.text+>;movl $, (%ebp);incl %edi;cmpw (%ebp), %di": 1,
                "jne  <.text+>;movl $, (%ebp);incl %edi;cmpw (%ebp), %di;jl - <.text+>": 1,
                "jl - <.text+>;movw (%ebp), %ax;popl %edi;popl %esi;popl %ebx": 1,
                "je - <.text+>;andb $-, (%esi);movw (%esi), %ax;cmpw %di, %ax;je  <.text+>": 1,
                "je  <.text+>;pushl %eax;leal (%esi), %eax;pushl %eax;calll  <.text+>": 1,
                "calll  <.text+>;movl , %eax;movl %esi, (%eax);xorl %eax, %eax;movb (%esi), %al": 1,
                "movl , %eax;movl %esi, (%eax);xorl %eax, %eax;movb (%esi), %al;notb %al": 1,
                "popl %ecx;movl %ebx, ;movw %bx, ;movl -(%ebp), %ecx;popl %edi": 1,
                "pushl %esi;movl (%ebx), %esi;pushl %edi;movl (%eax), %edi;jmp  <.text+>": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;pushl %esi;leal (%eax), %edx;movl $, %ecx": 1,
                "movl $, %ecx;cmpl %ecx, %edx;pushl %edi;leal (%eax,%ebx), %edi;leal (%ebx), %esi": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);addl $, (%ebx)": 1,
                "calll *;shll %eax;movl (%ebx), %edi;movl -(%edi,%esi,), %esi;movl %eax, -(%ebp)": 1,
                "movswl %ax, %ecx;movl -(%ebp), %eax;xorl %eax, %ecx;movl $, %edx;andl %edx, %ecx": 1,
                "movl -(%ebp), %eax;xorl %eax, %ecx;movl $, %edx;andl %edx, %ecx;xorl %ecx, %eax": 1,
                "andl %edx, %eax;movl (%ebp), %edx;shll $, %edx;orl %edx, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edx;shll $, %edx;orl %edx, %eax;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "calll - <.text+>;movl (%ebx), %edx;leal (%edx), %ecx;movl $, %eax;cmpl %eax, %ecx": 1,
                "leal (%edx,%ebx), %edi;ja  <.text+>;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "pushl %edi;pushl (%ebx);calll - <.text+>;movl $, %edx;cmpl %edx, %eax": 6,
                "movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl %edx, %ecx;addl %ecx, (%ebx)": 2,
                "cmpl %edx, %eax;jne  <.text+>;movl (%ebx), %eax;movl -(%ebp), %ecx;movl (%ebp), %esi": 2,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);addl %edx, (%ebx);addl $, %eax;addl %eax, (%ebx)": 4,
                "movl (%ebx), %eax;movl (%ebp), %ecx;movl (%ebp), %esi;leal -(%eax,%ecx), %ecx;subl %eax, %esi": 2,
                "shrl $, %ecx;addl %edx, %esi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax": 2,
                "andl $, %eax;shll $, %ecx;orl %ecx, %eax;testl %esi, %esi;movl %eax, -(%ebp)": 1,
                "jmp  <.text+>;movl %esi, %ecx;movl (%ebx), %esi;movl %eax, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "movl (%ebx), %esi;movl %eax, %edi;rep  movsl (%esi), %es:(%edi);pushl (%ebx);calll *": 1,
                "movl %eax, %edi;rep  movsl (%esi), %es:(%edi);pushl (%ebx);calll *;movl (%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;pushl %esi;movl (%ebp), %esi": 1,
                "je  <.text+>;movl %ecx, %ebx;shrl $, %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "orl %edi, %esi;movl (%ebp), %edi;addl %ebx, %esi;movl %esi, (%edx);movl (%eax), %edx": 1,
                "pushl -(%ebp);movl %ebx, (%eax);pushl %eax;calll - <.text+>;popl %edi": 1,
                "movl (%ebx), %esi;movl %edi, %ecx;movl -(%ebp), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "cmpl (%ebx), %eax;jle  <.text+>;movl (%ebp), %esi;leal (%esi,%esi), %esi;pushl %esi": 1,
                "calll *;popl %ecx;movl %edi, (%ebx);movl (%ebp), %ecx;movl (%ebp), %edx": 1,
                "pushl %ecx;pushl %eax;movl %eax, -(%ebp);calll *;testl %eax, %eax": 1,
                "leal -(%esi), %eax;movw (%edx), %cx;incl %edx;incl %edx;testw %cx, %cx": 1,
                "incl %edx;incl %edx;testw %cx, %cx;jne - <.text+>;decl %eax": 1,
                "calll *%esi;popl %ecx;popl %ecx;popl %edi;popl %esi": 1,
                "movl (%ebp), %esi;movl %eax, -(%ebp);je  <.text+>;cmpw %dx, (%ebx);je  <.text+>": 1,
                "je  <.text+>;cmpl %edx, (%ebx);jne  <.text+>;movl (%ebx), %eax;cmpl %edx, %eax": 1,
                "cmpl %edx, %esi;movl %ecx, -(%ebp);je  <.text+>;leal (%ecx), %eax;movb $, -(%ebp,%ecx)": 1,
                "cmpl %ecx, (%ebp);jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl (%eax)": 1,
                "popl %ecx;je  <.text+>;testb $, (%esi);je  <.text+>;cmpl $, (%ebp)": 1,
                "pushl $;popl %edi;cmpl %edi, %eax;jae  <.text+>;xorl %eax, %eax": 1,
                "movl (%ebp), %ebx;leal (%ebp), %eax;pushl %eax;pushl $;pushl %ebx": 3,
                "testb $, (%ebx);pushl (%ebx);je  <.text+>;pushl (%esi);calll - <.text+>": 1,
                "calll - <.text+>;cmpl $, %eax;jb - <.text+>;movl (%ebx), %ecx;shll $, %ecx": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebx), %eax;movzbl (%ebx), %ecx;shll $, %eax;sarl $, %eax": 1,
                "popl %ecx;jne  <.text+>;movl (%ebp), %eax;movw $, (%eax);movl $, (%eax)": 1,
                "movl %edi, (%ebx);movl %edi, (%ebx);movl %edi, (%ebx);movl $, (%ebx);cmpw %di, ": 1,
                "movl %edi, (%ebx);movl %edi, (%ebx);movl $, (%ebx);cmpw %di, ;je  <.text+>": 1,
                "incl %eax;jmp  <.text+>;cmpw %di, (%esi);movl %ebx, (%esi);movl %edi, (%esi)": 1,
                "jmp  <.text+>;cmpw %di, (%esi);movl %ebx, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movw %di, (%esi);movl %ebx, (%esi);calll - <.text+>;cmpl %edi, (%esi);movl %edi, (%ebp)": 1,
                "movl %edi, (%ebp);jle  <.text+>;jmp  <.text+>;xorl %ebx, %ebx;incl %ebx": 1,
                "incl (%esi);movl (%esi), %ecx;pushl %edi;pushl %edi;movw $, (%esi)": 1,
                "movl (%esi), %ecx;pushl %edi;pushl %edi;movw $, (%esi);movw %ax, (%esi)": 1,
                "pushl (%ebx);pushl (%ebx);pushl %esi;calll - <.text+>;jmp  <.text+>": 1,
                "jmp  <.text+>;orb $, (%ebx);cmpl %edi, (%esi);jne  <.text+>;movw $, (%esi)": 1,
                "movl %esi, -(%ebp);movl %esi, -(%ebp);jne  <.text+>;cmpl %esi, (%ebp);jne  <.text+>": 1,
                "jmp  <.text+>;movl (%ebp), %eax;leal (%eax,%eax), %esi;pushl %edi;pushl %esi": 1,
                "movl %eax, -(%ebp);jne  <.text+>;pushl -(%ebp);movl , %esi;calll *%esi": 1,
                "pushl -(%ebp);calll *%esi;pushl (%ebp);pushl %edi;calll *%esi": 1,
                "jmp  <.text+>;andl $, -(%ebp);movl (%ebp), %esi;testl %esi, %esi;je  <.text+>": 1,
                "je  <.text+>;movl (%ebp), %ecx;movl -(%ebp), %edi;movl %ecx, %eax;shrl $, %ecx": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %esi;movl -(%ebp), %edi;movl %eax, %ecx": 1,
                "testl %eax, %eax;je  <.text+>;testb $, -(%ebp);je  <.text+>;movl (%edi), %esi": 1,
                "movl (%ebp), %eax;pushl %eax;pushl (%edi);calll - <.text+>;leal -(%ebp), %eax": 1,
                "subl %eax, (%ebp);decl %esi;testl %esi, %esi;movl %esi, (%ebp);ja - <.text+>": 1,
                "leal (%eax,%eax), %eax;pushl $;pushl %eax;calll *%ebx;movl %eax, %ebx": 1,
                "movl %eax, %ecx;andl $, %ecx;cmpl $, (%ebp);rep  movsb (%esi), %es:(%edi);je  <.text+>": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;addl $, %eax;pushl %eax;movl %eax, (%ebp)": 1,
                "addl $, %eax;pushl %eax;movl %eax, (%ebp);calll *;pushl (%ebp)": 1,
                "calll *;movl (%ebx), %eax;movl (%ebx), %ecx;addl %ecx, %eax;addl $, %esp": 1,
                "xorl %ecx, %ecx;cmpl %ecx, (%eax);pushl %ecx;pushl %ebx;je  <.text+>": 1,
                "jmp  <.text+>;pushl %eax;calll - <.text+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl , %esi;calll *%esi;pushl -(%ebp);calll *%esi;pushl -(%ebp)": 1,
                "movl %eax, %edi;cmpl %esi, %edi;popl %ecx;movl %edi, (%ebp);jne  <.text+>": 1,
                "calll - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl %ebx": 1,
                "movw $, (%ebx);pushl (%ebp);movl , %esi;jmp  <.text+>;pushl (%eax)": 1,
                "pushl $;pushl (%ebx);calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;rep  movsb (%esi), %es:(%edi);calll - <.text+>;popl %edi;popl %esi": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;movzwl (%ebx), %esi;addl (%ebp), %esi": 1,
                "popl %ecx;movl %eax, (%esi);cmpl $, (%esi);jne  <.text+>;pushl %esi": 1,
                "movl %eax, (%ebp);jne  <.text+>;addl %eax, %eax;movl %eax, (%ebp);incl %edi": 1,
                "movw (%ebp), %ax;movl (%ebx), %edi;movw %ax, (%ebx);addl (%ebp), %edi;xorl %eax, %eax": 1,
                "movl (%ebx), %edi;movw %ax, (%ebx);addl (%ebp), %edi;xorl %eax, %eax;stosw %ax, %es:(%edi)": 1,
                "movw %ax, (%ebx);addl (%ebp), %edi;xorl %eax, %eax;stosw %ax, %es:(%edi);movl (%ebp), %eax": 1,
                "pushl %esi;movl (%ebx), %esi;testl %esi, %esi;je  <.text+>;pushl %edi": 1,
                "testw %ax, %ax;jne  <.text+>;pushl $;pushl %esi;addl $, %edi": 1,
                "movl (%ebp), %esi;cmpl $, (%esi);pushl %edi;je  <.text+>;leal (%eax), %edi": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ebp), %edi;movl (%edi), %esi": 1,
                "testb $, %bl;je  <.text+>;leal (%eax), %edx;cmpw $, (%edx);jne  <.text+>": 1,
                "je  <.text+>;cmpw $, %cx;jne  <.text+>;cmpw $, (%eax);je  <.text+>": 1,
                "int;int;int;int;movl (%eax), %eax": 2,
                "cmpl %ecx, (%esi);je  <.text+>;movl (%esi), %esi;testl %esi, %esi;jne - <.text+>": 1,
                "je  <.text+>;pushl %eax;calll *;pushl %esi;calll *": 1,
                "int;int;movl (%eax), %eax;movb (%eax), %al;andb $-, %al": 1,
                "jbe  <.text+>;movl $, %eax;retl;movl $, %eax;retl": 1,
                "popl %ecx;movl %edx, %esi;rep  movsl (%esi), %es:(%edi);movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "pushl %eax;movb $, (%ebx);movl %eax, -(%ebp);calll *%edi;movl %eax, %esi": 1,
                "addl %eax, %esi;leal (%esi,%esi), %eax;cmpl $, %eax;popl %ecx;popl %ecx": 1,
                "jne  <.text+>;movl (%esi), %eax;movl (%eax), %eax;cmpw $, (%eax);jne  <.text+>": 1,
                "pushl %eax;pushl %ebx;pushl %esi;calll  <.text+>;testw %ax, %ax": 1,
                "calll  <.text+>;testw %ax, %ax;movl %eax, -(%ebp);je  <.text+>;movl %ebx, %edi": 1,
                "movl %esi, %eax;calll - <.text+>;andb $-, (%ebx);cmpw $, -(%ebp);jne  <.text+>": 1,
                "addl $, %esp;leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll  <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;orb $, (%ebx);testb $, (%ebx);je  <.text+>": 1,
                "movl %ecx, (%ebx);movl %ecx, (%ebx);cmpw %cx, (%edx);jne  <.text+>;movw $, (%ebx)": 1,
                "movl (%ebp), %eax;calll - <.text+>;orl $-, (%edi);xorw %ax, %ax;popl %edi": 1,
                "movb $, (%edi);movl %eax, -(%ebp);movl (%esi), %eax;cmpb $, (%eax);jne  <.text+>": 1,
                "movb $, (%edi);pushl $;pushl (%esi);calll *;testl %eax, %eax": 1,
                "popl %ecx;popl %ecx;jne  <.text+>;orl $-, (%edi);pushl %edi": 1,
                "orl $-, (%edi);pushl %edi;pushl %esi;calll  <.text+>;jmp  <.text+>": 1,
                "pushl %esi;leal -(%ebp), %eax;calll - <.text+>;testw %ax, %ax;jne - <.text+>": 1,
                "calll - <.text+>;movl %eax, %ebx;movw %bx, %ax;popl %ebx;movl -(%ebp), %ecx": 1,
                "pushl %esi;pushl %ebx;calll  <.text+>;jmp  <.text+>;xorl %edi, %edi": 1,
                "pushl %ebx;calll  <.text+>;jmp  <.text+>;xorl %edi, %edi;pushl %edi": 1,
                "pushl %ebx;calll  <.text+>;testw %ax, %ax;je  <.text+>;orw $, %ax": 2,
                "je  <.text+>;movl %ebx, %eax;calll - <.text+>;movl %eax, -(%ebp);jmp  <.text+>": 1,
                "movl %ebx, %eax;calll - <.text+>;movl %eax, -(%ebp);movw -(%ebp), %ax;movl -(%ebp), %ecx": 1,
                "cmpw %dx, %bx;jae  <.text+>;movl %edx, %ebx;addl $, %ecx;decl %edi": 1,
                "movw (%ebp), %ax;cmpw (%esi), %ax;jb - <.text+>;pushl %esi;calll *%ebx": 1,
                "pushl %eax;calll *%esi;cmpl %eax, %edi;popl %ecx;jb - <.text+>": 1,
                "popl %edi;popl %esi;popl %ebx;movw %dx, %ax;leave": 1,
                "je  <.text+>;cmpl %edx, (%ebp);je  <.text+>;movl (%eax), %ecx;cmpl %edx, %ecx": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);leal (%ecx), %eax;jmp - <.text+>;int": 1,
                "jne  <.text+>;pushl %edi;pushl %esi;calll - <.text+>;movzwl %ax, %eax": 1,
                "pushl $;pushl -(%ebp);pushl -(%ebp);calll - <.text+>;leal -(%ebp), %esi": 1,
                "addl $, %ebx;pushl %ebx;pushl %edi;calll - <.text+>;pushl %eax": 1,
                "movw $, %ax;jmp  <.text+>;pushl %esi;pushl $;pushl %ebx": 1,
                "pushl $;pushl %ebx;calll *;popl %ecx;leal (%eax,%eax), %eax": 1,
                "pushl %eax;calll *;movzwl (%ebp), %eax;popl %ecx;leal (%edi,%eax,), %eax": 1,
                "cmpl %ebx, (%ebp);leal (%edi), %eax;jne  <.text+>;leal (%edi), %eax;movl (%eax), %esi": 1,
                "addl $, %esp;pushl (%eax);calll *%esi;movl (%edi), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;pushl (%eax);calll *%esi;addl $, %esp;popl %esi": 1,
                "pushl %eax;calll  <.text+>;cmpl %edi, %eax;movl %eax, -(%ebp);je  <.text+>": 1,
                "calll  <.text+>;cmpl %edi, %eax;movl %eax, -(%ebp);je  <.text+>;movl (%esi), %ecx": 1,
                "movl %eax, %edi;cmpl %esi, %edi;popl %ecx;popl %ecx;movl %edi, -(%ebp)": 1,
                "pushl $;pushl %esi;pushl $;calll *;cmpl $-, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, (%edi);calll *%ebx;addl $, %esp": 1,
                "calll *;cmpl $, %eax;jne  <.text+>;cmpl $, -(%ebp);movl %esi, -(%ebp)": 1,
                "movzwl (%edi), %ecx;pushl %eax;movzwl (%edi), %eax;leal (%eax,%ecx), %eax;pushl %eax": 1,
                "cmpl %esi, (%eax);movl %esi, -(%ebp);jbe  <.text+>;addl $, %eax;movl %eax, -(%ebp)": 1,
                "incl -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;addl $, -(%ebp);cmpl (%eax), %ecx": 2,
                "movl $, %edi;pushl %edi;calll *%ebx;shll %eax;subl %eax, %esi": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);cmpw $, -(%ebp)": 1,
                "calll *;pushl %esi;calll *%ebx;leal -(%esi,%eax,), %eax;addl $, %esp": 1,
                "popl %ecx;pushl -(%ebp);calll *;movl %esi, %eax;movl -(%ebp), %ecx": 1,
                "cmpw $, (%ebp);movl (%esi), %eax;popl %ecx;je  <.text+>;addl $, %eax": 1,
                "jne  <.text+>;movl (%eax), %eax;pushl (%ebp);leal (%eax), %ecx;pushl %edi": 1,
                "leal (%eax), %ecx;pushl %edi;pushl %ecx;leal (%eax), %ecx;addl $, %eax": 2,
                "je  <.text+>;pushl %esi;pushl (%ebp);calll *;testl %eax, %eax": 1,
                "pushl %esi;pushl (%ebp);calll *;testl %eax, %eax;popl %ecx": 1,
                "xorw %ax, %ax;jmp  <.text+>;movw $, %ax;popl %ebp;retl $": 2,
                "pushl $;calll - <.text+>;testw %ax, %ax;jne  <.text+>;cmpl $, (%ebp)": 1,
                "calll *;testl %eax, %eax;je  <.text+>;calll *;movw $, %ax": 1,
                "calll *(%eax);testl %eax, %eax;jne  <.text+>;pushl -(%ebp);movl , %eax": 1,
                "jne  <.text+>;movl , %esi;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "movl , %esi;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp)": 1,
                "popl %ecx;leal (%edi,%eax,), %edi;cmpl $, -(%ebp);ja - <.text+>;leal -(%ebp), %edi": 1,
                "testl %ebx, %ebx;jne  <.text+>;pushl $;pushl %edi;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl , %eax;calll *(%eax);jmp  <.text+>": 1,
                "pushl %eax;movl , %eax;calll *(%eax);jmp  <.text+>;movl $, ": 1,
                "cmpl $, (%ecx);jne  <.text+>;pushl %ecx;pushl %edx;pushl (%eax)": 1,
                "pushl %eax;pushl %esi;movl %ebx, -(%ebp);calll - <.text+>;negw %ax": 1,
                "sbbb %al, %al;orl $-, -(%ebp);incb %al;leal -(%ebp), %ecx;movb %al, -(%ebp)": 1,
                "movl %ecx, (%eax);pushl %edi;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "pushl %eax;calll - <.text+>;pushl (%eax);movl , %esi;calll *%esi": 1,
                "movl %eax, (%ecx);leal -(%ebp), %ecx;calll - <.text+>;calll - <.text+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %ecx;movl (%ecx), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "pushl -(%ebp);movl $, -(%ebp);calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;cmpl %ebx, -(%ebp);movl -(%ebp), %edi;je  <.text+>;movl (%edi), %eax": 1,
                "cmpl %ebx, (%eax);je  <.text+>;cmpw %bx, ;je  <.text+>;cmpw %bx, ": 1,
                "orb $, (%edi);movl -(%ebp), %eax;orb $, (%eax);movl -(%ebp), %eax;orb $, (%eax)": 1,
                "movl (%ebp), %esi;movl %esi, %eax;xorl %edx, %edx;divl (%ecx);movl (%ecx), %eax": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <.text+>;popl %esi;popl %ebp": 1,
                "divl %ebx;testl %edx, %edx;je - <.text+>;incl %ebx;cmpl %ecx, %ebx": 1,
                "jne - <.text+>;andl $, (%ebp);testl %ebx, %ebx;jbe  <.text+>;movl (%ebp), %edi": 1,
                "incl (%ebp);movl (%ebp), %eax;cmpl (%esi), %eax;jb - <.text+>;pushl (%esi)": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;movl (%eax), %ebx;testl %ebx, %ebx;pushl %esi": 1,
                "pushl %edi;pushl -(%ebp);calll - <.text+>;xorl %ecx, %ecx;cmpl %ecx, %eax": 1,
                "movw $, (%esi);calll *;movl , %edi;leal (%esi), %eax;pushl %eax": 1,
                "movl %eax, (%esi);movl (%ebp), %eax;addl $, %ecx;movl %eax, (%esi);leal (%esi), %eax": 1,
                "leal -(%ebp), %ecx;movl %eax, -(%ebp);movl (%esi), %eax;pushl %ecx;pushl %eax": 1,
                "movw $, (%eax);movzwl (%esi), %edx;incl %ecx;incl %eax;incl %eax": 1,
                "calll *%ebx;movl (%edi), %ecx;movl (%ecx), %ecx;addl $, %esp;cmpw $, -(%ecx,%eax,)": 2,
                "jne  <.text+>;orl $-, -(%ebp);jmp  <.text+>;andl $, -(%ebp);movl (%edi), %ecx": 1,
                "calll *;popl %ecx;popl %ecx;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "leal (%esi), %eax;pushl $;pushl %eax;pushl -(%ebp);movl $, (%eax)": 1,
                "ja  <.text+>;je  <.text+>;cmpl $, %eax;ja  <.text+>;cmpl $, %eax": 1,
                "jmp  <.text+>;movl $, %eax;jmp  <.text+>;xorl %eax, %eax;jmp  <.text+>": 1,
                "cmpl %ecx, %eax;ja  <.text+>;je  <.text+>;subl $, %eax;je  <.text+>": 1,
                "je  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;jbe  <.text+>": 3,
                "movl (%eax), %eax;testb $-, (%eax);je  <.text+>;movl $, %esi;pushl %ebx": 1,
                "calll - <.text+>;cmpl $-, (%ebp);je  <.text+>;pushl %edi;pushl -(%ebp)": 1,
                "je  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %edi": 2,
                "pushl -(%ebp);pushl (%ebp);calll *;cmpl %edi, (%ebp);jne - <.text+>": 1,
                "calll *;jmp  <.text+>;movw %ax, %di;pushl -(%ebp);calll *": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "cmpl (%eax), %ecx;jne  <.text+>;movl (%esi), %ecx;cmpl (%eax), %ecx;jne  <.text+>": 2,
                "movl (%esi), %ecx;cmpl (%eax), %ecx;jne  <.text+>;movl (%esi), %ecx;cmpl (%eax), %ecx": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl (%ebx);calll - <.text+>;movl $, -(%ebp)": 1,
                "je  <.text+>;pushl %esi;calll - <.text+>;movl (%ebx), %eax;pushl (%ebp)": 1,
                "movl (%edi), %eax;pushl $;movl %eax, (%esi);pushl (%edi);pushl %esi": 1,
                "movl %eax, (%esi);pushl (%edi);pushl %esi;pushl (%ebp);calll  <.text+>": 1,
                "je  <.text+>;pushl $;pushl %edi;calll *;movl (%esi), %eax": 1,
                "movl (%esi), %eax;pushl (%eax);pushl %edi;calll *;addl $, %esp": 1,
                "pushl %esi;movl (%ebp), %esi;movl %eax, -(%ebp);movl (%esi), %eax;cmpw $, (%eax)": 1,
                "movl (%esi), %eax;cmpw $, (%eax);je  <.text+>;testb $, (%esi);je  <.text+>": 1,
                "je  <.text+>;orl $, %eax;jmp  <.text+>;andl $-, %eax;movw %ax, (%esi)": 1,
                "popl %ecx;popl %ecx;je  <.text+>;orb $, (%esi);jmp  <.text+>": 1,
                "calll *(%ebp);popl %ebp;retl $;int;int": 1,
                "addl $, %esi;pushl %esi;pushl %ebx;calll *;addl $, %esp": 1,
                "addl $, %esp;jmp  <.text+>;pushl $;pushl $;pushl %esi": 1,
                "addl $, %esi;pushl %ebx;pushl %esi;calll *;jmp - <.text+>": 1,
                "movw $, (%eax);popl %edi;popl %esi;xorw %ax, %ax;popl %ebx": 2,
                "je  <.text+>;pushl (%esi);pushl %ebx;calll *;pushl %ebx": 1,
                "pushl (%ebp);calll  <.text+>;popl %edi;popl %esi;movl %ebx, %eax": 1,
                "jne  <.text+>;movl $, (%ebp);pushl (%ebp);calll - <.text+>;pushl (%ebp)": 1,
                "cmpl %edi, %ebx;movl %eax, (%ebp);je  <.text+>;cmpl %edi, %eax;je  <.text+>": 1,
                "pushl %edi;calll *%esi;addl $, %ebx;pushl %ebx;pushl %edi": 1,
                "je  <.text+>;cmpb $, (%esi);movl (%esi), %eax;jne  <.text+>;movl (%eax), %edx": 1,
                "jmp  <.text+>;movl (%eax), %edx;cmpl %ebx, -(%ebp);jne  <.text+>;testb $, (%esi)": 1,
                "pushl %eax;calll  <.text+>;cmpl %ebx, %eax;je  <.text+>;cmpl $, %eax": 1,
                "movl $, (%ebp);jmp  <.text+>;movl (%ebp), %eax;movw $, (%eax);cmpl %ebx, %edi": 1,
                "testl %ebx, %ebx;je  <.text+>;movzbl (%esi), %eax;decl %eax;je  <.text+>": 2,
                "je  <.text+>;movb (%eax), %cl;andb $, %cl;cmpb $, %cl;jne  <.text+>": 1,
                "movl %esp, %ebp;pushl %ecx;movw (%ebp), %ax;andl $, -(%ebp);pushl %ebx": 1,
                "leal (%edi), %esi;shrl $, %esi;incl %esi;shll $, %esi;movl %eax, (%ebp)": 1,
                "shll $, %esi;movl %eax, (%ebp);movzwl %si, %eax;pushl %eax;movl %edi, (%ebp)": 1,
                "calll *;testl %eax, %eax;popl %ecx;movl %eax, (%ebx);jne  <.text+>": 1,
                "movl (%ebp), %esi;movzwl %ax, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "pushl (%esi);calll *;popl %ecx;movl (%ebp), %ecx;leal (%ecx,%eax,), %eax": 1,
                "movl %eax, %edi;incl %edi;incl %edi;shll $, %edi;movswl %di, %eax": 1,
                "addl $, %esp;jmp  <.text+>;movzwl %cx, %eax;shrl %eax;pushl %eax": 1,
                "movzwl (%ebp), %esi;shll $, %esi;movl %esi, -(%ebp);calll  <.text+>;movzwl (%ebp), %ecx": 1,
                "jne  <.text+>;movl %esi, ;movl $, %esi;pushl %esi;movl $, %edi": 1,
                "movl %eax, ;movl %eax, ;cmpw %bx, ;movl %ebx, (%ebp);jbe  <.text+>": 1,
                "pushl %ebx;calll  <.text+>;movl %eax, %ecx;movl (%ebp), %eax;xorl %edx, %edx": 1,
                "testl %eax, %eax;je  <.text+>;incl %edi;cmpw %si, %di;jb - <.text+>": 1,
                "movw (%ebp), %ax;cmpw , %ax;jb - <.text+>;movw -(%ebp), %ax;popl %esi": 1,
                "pushl %esi;xorl %esi, %esi;cmpw %si, ;jbe  <.text+>;movl , %ecx": 1,
                "jbe  <.text+>;movl , %ecx;movzwl %si, %eax;imull $, %eax, %eax;leal (%eax,%ecx), %eax": 1,
                "pushl %edi;je  <.text+>;pushl %ebx;calll - <.text+>;movl (%ebx), %eax": 1,
                "cmpl %edx, %eax;je  <.text+>;cmpl %edx, (%eax);jne  <.text+>;movw (%eax), %cx": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);andb $-, (%ebx);popl %edi;popl %esi": 1,
                "movsl (%esi), %es:(%edi);andb $-, (%ebx);popl %edi;popl %esi;popl %ebx": 1,
                "movl (%esi), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);popl %edi;movl (%esi), %eax": 1,
                "movl %eax, (%ecx);popl %edi;movl (%esi), %eax;movl (%eax), %eax;cmpl %ebx, %eax": 1,
                "pushl %esi;movl , %esi;je  <.text+>;pushl %edi;movl (%eax), %edi": 1,
                "je  <.text+>;pushl %edi;movl (%eax), %edi;pushl %eax;calll *%esi": 1,
                "calll *%esi;andl $, (%ebx);popl %ecx;popl %esi;popl %ebx": 1,
                "testw %ax, %ax;jle  <.text+>;xorl %eax, %eax;incl %eax;jmp  <.text+>": 1,
                "xorl %eax, %eax;incl %eax;jmp  <.text+>;jge  <.text+>;orl $-, %eax": 1,
                "orl $-, %eax;jmp  <.text+>;xorl %eax, %eax;cmpw %si, %di;je  <.text+>": 1,
                "jmp  <.text+>;xorl %eax, %eax;cmpw %si, %di;je  <.text+>;cmpw %si, %di": 1,
                "movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, (%esi);movl %edi, -(%ebp)": 1,
                "retl $;cmpl %edi, (%ebp);movw (%ebp), %ax;movw %ax, (%ebx);movw (%ebp), %ax": 1,
                "movw (%ebp), %ax;movw %ax, (%ebx);movw (%ebp), %ax;movl %edi, (%ebx);movl %edi, (%ebx)": 1,
                "incl %eax;jmp  <.text+>;pushl %edi;pushl (%ebp);pushl %eax": 1,
                "pushl (%ebp);pushl %eax;calll *%ecx;movzwl %ax, %eax;movw %ax, (%ebx)": 1,
                "pushl %eax;calll *%ecx;movzwl %ax, %eax;movw %ax, (%ebx);movl (%esi), %eax": 1,
                "movl (%ebp), %ecx;jmp  <.text+>;jb  <.text+>;orl $-, %eax;cmpw $, %ax": 1,
                "movl (%ebp), %esi;jmp  <.text+>;jb  <.text+>;orl $-, %eax;testw %ax, %ax": 1,
                "je  <.text+>;cmpw $, %ax;je  <.text+>;movl (%edi), %eax;movl %edi, -(%ebp)": 1,
                "calll *;popl %ecx;jmp - <.text+>;movl %edi, (%ebx);movl (%edi), %eax": 1,
                "jmp - <.text+>;movl %edi, (%ebx);movl (%edi), %eax;movl %eax, (%ebx);movl %ebx, (%edi)": 1,
                "movl (%eax), %eax;xorl %ebx, %ebx;pushl %edi;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl (%eax), %ecx;leal (%ebp), %edx;pushl %edx;leal -(%ebp), %edx;pushl %edx": 1,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl %esi;pushl %edi;movl (%ecx), %edi;movl $, -(%ebp);xorl %eax, %eax": 1,
                "pushl (%ebp);calll - <.text+>;andl $, -(%ebp);testw %ax, %ax;jne  <.text+>": 1,
                "movswl %si, %esi;shrl %esi;testw %si, %si;jle  <.text+>;testw %ax, %ax": 1,
                "movl (%eax), %eax;movl (%esi), %ebx;movl %edi, -(%ebp);movl %eax, -(%ebp);cmpw %di, (%esi)": 1,
                "movl (%esi), %edi;xorl %eax, %eax;movl $, %ecx;rep  stosl %eax, %es:(%edi);xorl %edi, %edi": 1,
                "pushl %eax;pushl (%ebp);calll - <.text+>;cmpw %di, %ax;movl %eax, -(%ebp)": 1,
                "je  <.text+>;movw %di, (%eax);movl (%esi), %eax;movw %di, (%esi);cmpb $, (%eax)": 1,
                "jmp  <.text+>;cmpw %di, (%esi);movl (%esi), %eax;movb (%eax), %cl;jne  <.text+>": 1,
                "pushl (%esi);leal (%esi), %ecx;pushl $;pushl %ecx;pushl %ebx": 1,
                "movw $, (%esi);jmp - <.text+>;pushl $;pushl %edi;pushl %edi": 1,
                "pushl %edi;pushl %edi;pushl %edi;pushl %esi;calll - <.text+>": 1,
                "cmpw $, -(%ebp);je  <.text+>;movl (%ebx), %ecx;pushl %eax;pushl %ebx": 1,
                "jne  <.text+>;cmpw %di, %ax;jne  <.text+>;pushl %edi;pushl (%esi)": 1,
                "movl (%esi), %eax;movl %edx, (%esi);jmp - <.text+>;movw %di, (%esi);jmp - <.text+>": 1,
                "leal (%esi), %eax;pushl %eax;pushl %ebx;pushl -(%ebp);pushl -(%ebp)": 2,
                "movl (%eax), %eax;cmpl %edi, %eax;jne  <.text+>;movl %edi, -(%ebp);jmp  <.text+>": 1,
                "cmpw %di, %ax;movl %eax, -(%ebp);je  <.text+>;pushl -(%ebp);calll *": 1,
                "movl (%esi), %ecx;pushl %edi;pushl (%esi);leal (%esi), %eax;pushl %eax": 1,
                "pushl -(%ebp);pushl $;calll *(%ecx);addl $, %esp;jmp - <.text+>": 1,
                "incl -(%ebp);jmp - <.text+>;cmpw $, %bx;je - <.text+>;movl -(%ebp), %eax": 1,
                "pushl %eax;calll - <.text+>;movl %eax, %ebx;testw %bx, %bx;jne  <.text+>": 1,
                "cmpw %di, %bx;movl -(%ebp), %eax;movl %eax, (%esi);je  <.text+>;movl -(%ebp), %eax": 1,
                "pushl %edi;addl $, %esi;pushl %esi;pushl %ecx;pushl (%eax)": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;movl (%eax), %esi;jmp  <.text+>": 1,
                "jmp  <.text+>;andl $, -(%ebp);pushl $;pushl $;pushl (%esi)": 1,
                "calll - <.text+>;testl %esi, %esi;jne - <.text+>;popl %esi;leave": 1,
                "movw %di, -(%ebp);movl %edi, -(%ebp);movw %di, -(%ebp);movw %di, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, (%ebp);je  <.text+>;pushl %edi;pushl -(%ebp);calll - <.text+>": 1,
                "addl $, %esp;testw %ax, %ax;jne  <.text+>;leal (%ebp), %eax;pushl %eax": 1,
                "cmpw %di, %bx;jne  <.text+>;cmpl %edi, (%ebp);je  <.text+>;leal -(%ebp), %eax": 1,
                "pushl (%ebp);pushl %esi;calll  <.text+>;pushl (%ebp);pushl %esi": 1,
                "movl (%esi), %eax;pushl %edi;pushl %edi;pushl %edi;movswl %bx, %ecx": 4,
                "movswl %bx, %ecx;pushl %ecx;leal (%esi), %ecx;pushl %ecx;pushl (%esi)": 4,
                "je  <.text+>;cmpl %edi, %eax;jne  <.text+>;movw %bx, %ax;negw %ax": 1,
                "addl $, %esp;jmp  <.text+>;cmpw $, (%esi);jne  <.text+>;pushl $": 1,
                "incl %ecx;cmpw %dx, %cx;movl $, %eax;jb - <.text+>;jmp  <.text+>": 1,
                "pushl %eax;pushl %edi;pushl %ecx;calll  <.text+>;testw %ax, %ax": 1,
                "movl %ecx, (%ebx);movw %cx, (%ebx);movw %cx, (%ebx);movl %ecx, (%ebx);movw $, (%ebx)": 1,
                "movl %ecx, (%ebx);movw $, (%ebx);movl %ecx, (%ebx);leal (%ebx), %edi;stosl %eax, %es:(%edi)": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movl (%ebx), %eax;cmpl %ecx, %eax": 1,
                "je  <.text+>;andb $-, (%eax);movl %ecx, (%ebx);movl (%ebx), %eax;leal (%eax), %edx": 1,
                "movl %ecx, (%ebx);movl (%ebx), %eax;leal (%eax), %edx;cmpl %ecx, (%edx);je  <.text+>": 1,
                "movl %ecx, (%eax);movl (%ebx), %eax;testb $, (%eax);jne  <.text+>;cmpw %cx, (%eax)": 1,
                "je  <.text+>;andb $-, (%eax);movl %ecx, (%ebx);leal (%ebx), %eax;pushl %eax": 1,
                "movl %eax, (%ebx);movl (%ebx), %eax;andl $-, (%eax);pushl (%esi);pushl %ebx": 1,
                "je  <.text+>;cmpw $, %ax;jne  <.text+>;xorl %eax, %eax;movw (%esi), %ax": 1,
                "cmpw $, %ax;jne  <.text+>;xorl %eax, %eax;movw (%esi), %ax;pushl %eax": 1,
                "je  <.text+>;leal (%ebx), %eax;pushl %eax;pushl %esi;calll  <.text+>": 1,
                "movl %eax, -(%ebp);cmpw $, -(%ebp);je  <.text+>;cmpw $, -(%ebp);je  <.text+>": 2,
                "pushl %eax;calll  <.text+>;movl (%ebx), %eax;andw $, (%eax);orb $, (%ebx)": 1,
                "cmpw $, %ax;movswl %ax, %eax;jl  <.text+>;leal -(%eax,%eax,), %eax;pushl $": 1,
                "pushl $;cltd;popl %ecx;idivl %ecx;movw %ax, (%ebx)": 1,
                "calll *(%ecx);testw %ax, %ax;je - <.text+>;movw %si, (%ebx);movl (%ebx), %esi": 1,
                "movw %di, (%ebx);cmpb $, (%esi);movl $, %ecx;jne  <.text+>;movl (%ebx), %edi": 1,
                "pushl (%ebx);pushl %edi;pushl (%eax);calll - <.text+>;movl (%ebp), %ecx": 1,
                "pushl $;popl %edi;movw %si, (%eax);pushl %esi;pushl %esi": 1,
                "pushl %edi;pushl %eax;movl (%ebx), %eax;pushl %esi;pushl (%ebp)": 1,
                "cmpl %esi, (%ebx);jne  <.text+>;movl (%edi), %ecx;movl %ecx, (%ebx);cmpw (%ebp), %ax": 1,
                "xorl %eax, %eax;cmpw $-, (%ecx);setne %al;decl %eax;popl %edi": 1,
                "movl (%ecx), %ecx;testb $, (%ecx);jne  <.text+>;movl (%ebx), %ecx;pushl $": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;orb $, (%eax);movl (%ebx), %eax;leal -(%ebp), %ecx": 1,
                "orb $, (%eax);movl (%ebx), %eax;leal -(%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx": 1,
                "pushl $;pushl %ebx;calll *(%eax);movl -(%ebp), %ecx;popl %edi": 2,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;movl %ecx, %esi": 1,
                "movl %ecx, %esi;pushl %eax;movl %edx, %edi;pushl %esi;movl %edi, -(%ebp)": 1,
                "cmpw %si, -(%ebp);jne - <.text+>;movswl %ax, %eax;pushl %eax;movswl -(%ebp), %eax": 1,
                "pushl %esi;movl (%eax), %esi;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "pushl $;pushl %eax;calll *;movl , %ebx;movl %eax, %edi": 1,
                "movl %eax, %edi;testl %edi, %edi;popl %ecx;popl %ecx;jne  <.text+>": 2,
                "calll *;jmp - <.text+>;movl %edi, %eax;leal -(%ebp), %ecx;subl %ecx, %eax": 1,
                "subl %ecx, %eax;sarl %eax;shrl %eax;cmpw $, %ax;movl %eax, -(%ebp)": 1,
                "cmpw $, %ax;movl %eax, -(%ebp);jge  <.text+>;pushl %edi;calll *%ebx": 1,
                "calll *%ebx;leal (%eax,%eax), %eax;pushl %eax;leal (%edi), %eax;pushl %eax": 1,
                "movw %cx, -(%ebp,%eax,);movw -(%ebp), %cx;movw %cx, -(%ebp,%eax,);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %ebx;movl %eax, %ebx;movl (%ebx), %eax;movl (%eax), %eax;pushl %esi": 1,
                "movw $, (%ebx);calll - <.text+>;xorl %ecx, %ecx;cmpw %cx, %ax;movl %eax, -(%ebp)": 1,
                "leal (%ebx), %edi;pushl %edi;pushl -(%ebp);calll - <.text+>;testw %ax, %ax": 1,
                "xorl %edi, %edi;incl %edi;xorl %esi, %esi;movl (%ebx), %eax;cmpb $, (%eax)": 1,
                "je - <.text+>;jmp - <.text+>;decl %eax;jne - <.text+>;movl (%ebx), %ecx": 1,
                "cmpb $, (%ecx);jne - <.text+>;movl (%ebx), %eax;movl (%eax), %edx;movw (%eax), %ax": 1,
                "popl %ecx;popl %ecx;movl %eax, (%esi);movw %di, (%ebx);movl (%ebx), %esi": 1,
                "pushl -(%ebp);calll - <.text+>;testl %eax, %eax;jmp  <.text+>;movl (%ebx), %eax": 1,
                "movw $, (%eax);xorw %ax, %ax;jmp  <.text+>;testb %al, %al;jne  <.text+>": 1,
                "pushl (%ebp);calll - <.text+>;movl (%ebp), %edx;movl (%edx), %esi;movb (%esi), %cl": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl (%ebx), %eax;movl (%eax), %ecx;movl (%ecx), %ecx": 1,
                "pushl %ebx;calll - <.text+>;jmp  <.text+>;movl (%ebp), %eax;movl (%eax), %esi": 1,
                "movl (%ebx), %esi;movl (%ebx), %edi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl (%ebx), %edx": 1,
                "jne  <.text+>;cmpb $, (%eax);jne  <.text+>;movl (%ebx), %eax;cmpb $, (%eax)": 1,
                "cmpw %di, %ax;movl %eax, -(%ebp);jne  <.text+>;xorl %ecx, %ecx;incl %ecx": 1,
                "movl %eax, (%esi);jne  <.text+>;movl -(%ebp), %eax;testb $, (%eax);je  <.text+>": 2,
                "movl %ecx, (%ebp);movswl (%ebp), %eax;subl %edi, %eax;je  <.text+>;decl %eax": 1,
                "movw $, %ax;jmp  <.text+>;movw (%ebp), %ax;negw %ax;pushl %edi": 1,
                "testw %ax, %ax;jne  <.text+>;movw %di, %ax;popl %edi;popl %esi": 1,
                "addl $, %esp;cmpw $, (%ebp);jne  <.text+>;movl (%eax), %eax;movb $-, (%eax)": 1,
                "cmpb $, (%edx);jne  <.text+>;xorl %ecx, %ecx;movl (%ebp), %esi;movswl %cx, %edx": 1,
                "movl (%edx), %edx;pushl %esi;leal (%eax), %esi;pushl %esi;leal (%eax), %esi": 1,
                "pushl %esi;leal (%eax), %esi;pushl %esi;leal (%eax), %esi;pushl %esi": 2,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl (%eax), %ecx": 1,
                "movl (%esi), %ecx;leal (%esi), %eax;pushl %eax;movl %ecx, (%esi);movw $, (%esi)": 1,
                "calll - <.text+>;movl $, -(%ebp);movl %eax, -(%ebp);jmp  <.text+>;movw $, (%esi)": 1,
                "cmpw $, (%esi);jne  <.text+>;pushl $;pushl %esi;calll - <.text+>": 2,
                "jmp  <.text+>;movswl -(%ebp), %ecx;movl (%esi), %eax;pushl %ebx;pushl %ebx": 3,
                "movl (%ebp), %esi;pushl %edi;leal (%esi), %eax;xorl %edi, %edi;pushl %eax": 1,
                "leal (%esi), %eax;xorl %edi, %edi;pushl %eax;movw $, (%esi);movl %edi, (%esi)": 1,
                "pushl $;pushl %esi;calll - <.text+>;movl %eax, %ebx;jmp  <.text+>": 1,
                "je  <.text+>;movl (%esi), %eax;movl %eax, (%esi);leal (%esi), %eax;pushl %eax": 1,
                "jne  <.text+>;movzwl (%esi), %eax;subl $, %eax;je  <.text+>;decl %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl (%esi), %eax;movl %eax, (%esi);leal (%esi), %eax": 1,
                "movw (%eax), %cx;movw %bx, (%esi);movw %cx, (%esi);movw $, (%eax);jmp  <.text+>": 1,
                "movw %cx, (%esi);movw $, (%eax);jmp  <.text+>;cmpw $, (%esi);movw $, (%esi)": 1,
                "movl %eax, (%esi);movl (%esi), %eax;movl %eax, (%esi);movw $, (%esi);jmp  <.text+>": 1,
                "cmpw %si, ;jbe  <.text+>;pushl (%ebp);movzwl %si, %eax;imull $, %eax, %eax": 1,
                "incl %esi;cmpw , %si;jb - <.text+>;jmp  <.text+>;movl %esi, %edi": 1,
                "jb - <.text+>;jmp  <.text+>;movl %esi, %edi;movw %di, %ax;popl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %edi;movl (%ebp), %edi;movw (%edi), %ax": 1,
                "cmpl $, (%esi);je  <.text+>;movzwl %ax, %eax;imull $, %eax, %eax;movl (%eax), %eax": 1,
                "movzwl %cx, %ecx;imull $, %ecx, %ecx;movl (%ecx), %ecx;xorl %eax, %eax;testl %ecx, %ecx": 1,
                "pushl %esi;calll *%ecx;testw %ax, %ax;je  <.text+>;orw $, (%esi)": 1,
                "orw $, (%esi);popl %esi;popl %ebp;retl $;int": 1,
                "jne  <.text+>;movl (%ebp), %eax;movw %bx, (%eax);xorw %ax, %ax;jmp  <.text+>": 1,
                "movl (%ebp), %eax;movw %bx, (%eax);xorw %ax, %ax;jmp  <.text+>;pushl %edi": 1,
                "xorw %ax, %ax;jmp  <.text+>;pushl %edi;movl (%ebp), %edi;pushl %edi": 1,
                "movw $, %ax;jmp  <.text+>;movzwl %ax, %eax;movl %eax, %ecx;imull $, %ecx, %ecx": 1,
                "jmp  <.text+>;movzwl %ax, %eax;imull $, %eax, %eax;movl (%eax), %eax;testl %eax, %eax": 8,
                "cmpw $, %ax;pushl %esi;pushl %edi;je  <.text+>;movzwl %ax, %esi": 1,
                "je  <.text+>;movl (%ebp), %edi;pushl %edi;pushl (%ebp);pushl %ebx": 1,
                "andl $, -(%ebp);pushl %esi;movl (%ebp), %esi;movw (%esi), %ax;cmpw $, %ax": 1,
                "calll - <.text+>;testl %eax, %eax;jne - <.text+>;pushl (%ebp);pushl %esi": 1,
                "jne - <.text+>;pushl (%ebp);pushl %esi;calll *%ebx;movl (%ebp), %ecx": 1,
                "jmp  <.text+>;movl (%esi), %eax;orb $, (%esi);orw $, (%eax);movw (%esi), %ax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movw (%eax), %ax;cmpw $, %ax;jne  <.text+>": 1,
                "jne  <.text+>;movw $, %ax;jmp  <.text+>;movl (%ebp), %ecx;pushl (%ecx)": 1,
                "pushl %esi;calll  <.text+>;movzwl (%ebp), %eax;cmpl %edi, %eax;ja  <.text+>": 1,
                "calll  <.text+>;movzwl (%ebp), %eax;cmpl %edi, %eax;ja  <.text+>;movl %edi, %eax": 1,
                "pushl %eax;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll *%edi": 1,
                "jne  <.text+>;movw $, %ax;jmp  <.text+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl $;popl %eax;jmp  <.text+>;pushl (%ebp);pushl (%ebp)": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne  <.text+>;movl $, %eax;jmp  <.text+>": 2,
                "jmp  <.text+>;movzwl %cx, %eax;imull $, %eax, %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "testw %ax, %ax;je  <.text+>;leal (%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "movl (%esi), %ecx;testl %ecx, %ecx;je  <.text+>;movl (%ecx), %edx;xorl %ebx, %ebx": 1,
                "jne  <.text+>;movl (%esi), %esi;andl $-, (%esi);cmpw $, %ax;jne  <.text+>": 1,
                "cmpw $, %ax;jne  <.text+>;cmpw $, (%ebp);jle  <.text+>;pushl $": 1,
                "movl , %eax;movl -(%ebp), %ecx;movl %edi, (%esi,%eax);movl , %eax;movw $, (%esi,%eax)": 1,
                "jmp  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp);movw -(%ebp), %ax": 1,
                "testb $, (%esi);je  <.text+>;andb $-, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "pushl %edi;calll - <.text+>;testw %ax, %ax;je  <.text+>;movl $, %ebx": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ecx;subl (%esi), %ecx;pushl %eax;pushl $": 1,
                "pushl %eax;calll  <.text+>;movl %ebx, -(%ebp);movl (%esi), %ebx;movl %ecx, (%edi)": 1,
                "pushl $;leal (%esi), %eax;pushl %eax;xorl %eax, %eax;movw (%esi), %ax": 3,
                "xorl %eax, %eax;movw (%esi), %ax;pushl $;pushl %ebx;pushl %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);cmpw $, -(%ebp);je  <.text+>;cmpw $, -(%ebp)": 2,
                "movl (%ebp), %esi;movw (%esi), %bx;movl %eax, -(%ebp);pushl %edi;movl (%ebp), %edi": 1,
                "pushl %ecx;pushl %edi;pushl %eax;calll *(%edi);cmpw $, (%ebp)": 1,
                "movl (%esi), %edi;movl %eax, -(%ebp);movw (%edi), %ax;leal (%edi), %ebx;movw %ax, -(%ebp)": 1,
                "movl %eax, (%edi);movl $, -(%ebp);jmp  <.text+>;pushl %edi;calll - <.text+>": 1,
                "jne  <.text+>;cmpw %bx, (%ebp);je  <.text+>;pushl %esi;calll - <.text+>": 1,
                "calll - <.text+>;jmp  <.text+>;xorl %eax, %eax;movw (%esi), %ax;pushl %eax": 2,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl $, %ebx;andw $, (%esi);movw %bx, %ax": 1,
                "pushl %edi;movl %eax, -(%ebp);movl (%ebp), %eax;xorl %edi, %edi;incl %edi": 1,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %edi, -(%ebp);movw %cx, -(%ebp);je  <.text+>": 1,
                "jmp - <.text+>;cmpw $, %dx;je - <.text+>;cmpw $, %dx;je - <.text+>": 2,
                "je - <.text+>;cmpw $, %dx;je - <.text+>;movl -(%ebp), %eax;testb $, %al": 1,
                "jmp  <.text+>;testb $, -(%ebp);je  <.text+>;pushl %esi;calll - <.text+>": 1,
                "cmpw %ax, -(%ebp);jne  <.text+>;cmpw $, -(%ebp);movl -(%ebp), %eax;movw %di, (%eax)": 1,
                "pushl %eax;calll - <.text+>;cmpw %di, %ax;jne  <.text+>;movl $, -(%ebp)": 1,
                "pushl %ebx;pushl %ebx;pushl (%esi);pushl %edi;calll - <.text+>": 1,
                "pushl %ebx;jmp  <.text+>;pushl %eax;pushl -(%ebp);calll - <.text+>": 1,
                "testw %ax, %ax;jne  <.text+>;jmp  <.text+>;movl (%esi), %eax;xorl %ecx, %ecx": 1,
                "movl %eax, (%edi);xorl %eax, %eax;cmpw %ax, -(%ebp);je  <.text+>;cmpw $, -(%ebp)": 1,
                "xorl %eax, %eax;cmpw %ax, -(%ebp);je  <.text+>;cmpw $, -(%ebp);je  <.text+>": 1,
                "calll - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl $;pushl (%esi)": 1,
                "movl $, %eax;jmp  <.text+>;xorl %eax, %eax;movw (%esi), %ax;pushl %eax": 1,
                "calll  <.text+>;testl %esi, %esi;jne - <.text+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <.text+>;pushl %eax;pushl %edi": 1,
                "movl (%ebp), %esi;pushl %edi;pushl $;popl %ecx;leal -(%ebp), %edi": 2,
                "movl %eax, %ebx;rep  movsl (%esi), %es:(%edi);movl (%ebx), %edi;testl %edi, %edi;je  <.text+>": 1,
                "je  <.text+>;movl (%ebx), %eax;testl %eax, %eax;je  <.text+>;cmpl %edi, %eax": 1,
                "testl %eax, %eax;je  <.text+>;cmpl %edi, %eax;jbe  <.text+>;pushl $": 1,
                "cmpl %esi, %ecx;je  <.text+>;jae  <.text+>;xorl %edx, %edx;movl %esi, %eax": 2,
                "je  <.text+>;jmp  <.text+>;xorl %edx, %edx;movl %ecx, %eax;divl %esi": 2,
                "movl %ecx, -(%ebp);movl (%ebx), %ecx;movl -(%ebp), %esi;cmpl %esi, %ecx;je  <.text+>": 1,
                "testl %edx, %edx;jne  <.text+>;movl %ecx, -(%ebp);movl (%ebx), %eax;xorl %ecx, %ecx": 1,
                "movl %ebx, -(%ebp);cmpl %ecx, -(%ebp);je  <.text+>;movl -(%ebp), %eax;cmpl %ecx, %eax": 1,
                "incl %eax;jmp  <.text+>;movl (%ebp), %edi;pushl $;popl %ecx": 1,
                "subl $, %esp;pushl %esi;movl (%ebp), %esi;pushl %edi;pushl $": 1,
                "pushl $;popl %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl (%ebp), %esi": 1,
                "movl %esi, -(%ebp);movl (%ebp), %edi;pushl $;popl %ecx;leal -(%ebp), %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;xorl %eax, %eax;cmpl %eax, %edx;je  <.text+>": 1,
                "cmpl %eax, %edx;je  <.text+>;movl (%edx), %ecx;andb $-, (%edx);movl %ecx, (%edx)": 1,
                "movl (%edx), %edi;shrl $, %ecx;movl %eax, (%edx);movl %eax, (%edx);movl %eax, (%edx)": 1,
                "rep  stosl %eax, %es:(%edi);movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);popl %edi": 1,
                "movl (%ebp), %eax;movl %eax, ;popl %ebp;retl $;int": 1,
                "testl %eax, %eax;jne - <.text+>;jmp  <.text+>;pushl %esi;calll - <.text+>": 1,
                "cmpw %di, (%esi);jne  <.text+>;cmpw %di, (%esi);jne  <.text+>;jmp  <.text+>": 1,
                "jne - <.text+>;movzbl (%esi), %eax;imull $, %eax, %eax;pushl %esi;calll *(%eax)": 1,
                "pushl %esi;pushl %edi;movl (%eax), %edi;calll - <.text+>;movl %eax, %esi": 1,
                "movl %edi, -(%ebp);movw %bx, -(%ebp);movw %bx, -(%ebp);movl %ebx, -(%ebp);movw $, -(%ebp)": 1,
                "movw %bx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);jne  <.text+>;movl (%eax), %ecx;movl %ecx, (%esi);movl (%eax), %ecx": 1,
                "pushl %eax;calll - <.text+>;cmpw %bx, %ax;pushl %ebx;movl %eax, (%ebp)": 1,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;pushl -(%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);movl %esi, %eax;calll - <.text+>;xorl %ebx, %ebx;cmpw %bx, %di": 1,
                "movl $, (%ebp);cmpw %bx, (%ebp);je - <.text+>;jmp  <.text+>;movl $, (%ebp)": 1,
                "jne  <.text+>;movl (%esi), %eax;movl (%eax), %eax;cmpb $-, (%eax);je  <.text+>": 1,
                "movswl (%ebp), %ecx;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ecx": 1,
                "jbe  <.text+>;movl , %esi;movzwl %ax, %edx;imull $, %edx, %edx;testb $, (%edx,%esi)": 1,
                "movzwl %ax, %esi;imull $, %esi, %esi;movw %ax, (%ecx);addl , %esi;xorl %ecx, %ecx": 1,
                "movw $, (%esi);movl (%esi), %eax;cmpw %di, (%eax);je  <.text+>;movl $, %ebx": 1,
                "movw (%eax), %dx;movw %dx, (%esi);movl (%ecx), %ecx;movl %ecx, (%esi);orw $, (%eax)": 1,
                "je  <.text+>;movl (%eax), %ecx;movl %ecx, (%esi);movl %edi, (%eax);movl (%esi), %eax": 1,
                "cmpw %di, (%ecx);je  <.text+>;movw %di, (%eax);movl (%esi), %eax;cmpl %edi, %eax": 1,
                "movl (%esi), %eax;cmpl %edi, %eax;je  <.text+>;andb $-, (%eax);movl %edi, (%esi)": 2,
                "pushl $;pushl $;pushl (%esi);pushl (%esi);calll - <.text+>": 1,
                "pushl (%eax);pushl %esi;calll  <.text+>;movl %eax, %ebx;cmpw %di, %bx": 1,
                "pushl %esi;calll  <.text+>;movl %eax, %ebx;cmpw %di, %bx;jne  <.text+>": 1,
                "pushl %eax;leal (%esi), %eax;pushl %eax;calll - <.text+>;movb (%ebp), %al": 1,
                "calll - <.text+>;movb (%ebp), %al;testb $, %al;je  <.text+>;pushl $": 1,
                "movl %edi, (%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp);jne  <.text+>;pushl (%ebx)": 1,
                "pushl %eax;calll  <.text+>;pushl (%ebx);pushl %ebx;calll - <.text+>": 2,
                "pushl (%ebx);pushl %ebx;calll - <.text+>;cmpw $, (%ebx);movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);je  <.text+>;movl (%ebx), %eax;cmpl $, %eax;movl $, %esi": 1,
                "jne  <.text+>;cmpw $, (%ebp);jne  <.text+>;pushl (%ebx);movw $, (%ebx)": 1,
                "calll - <.text+>;movl %eax, (%ebp);cmpw $, (%ebp);jne  <.text+>;movl (%ebx), %eax": 1,
                "pushl -(%ebp);pushl $;calll *(%eax);movl (%ebx), %eax;addl $, %esp": 1,
                "calll *(%eax);addl $, %esp;movl $, (%ebp);cmpw $, (%ebp);jne  <.text+>": 1,
                "pushl %ebx;pushl -(%ebp);calll  <.text+>;cmpw $, %ax;movl %eax, (%ebp)": 1,
                "jne  <.text+>;movl (%ebx), %eax;andl $, (%ebp);pushl $;pushl -(%ebp)": 1,
                "cmpw $, (%ebp);jne  <.text+>;leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "xorl %eax, %eax;testl %esi, (%ecx);je  <.text+>;incl %eax;jmp  <.text+>": 1,
                "je  <.text+>;incl %eax;jmp  <.text+>;movl %ecx, %edx;movl (%edx), %edx": 1,
                "testl %edx, %edx;je  <.text+>;movl (%edx), %edx;testl %esi, (%edx);je  <.text+>": 1,
                "pushl %eax;movl %ecx, -(%ebp);movl %edi, -(%ebp);pushl %ecx;jmp  <.text+>": 1,
                "pushl -(%ebp);calll *%esi;movl -(%ebp), %ecx;subl %ecx, -(%ebp);cmpl %edi, %eax": 1,
                "calll *%esi;movl -(%ebp), %ecx;subl %ecx, -(%ebp);cmpl %edi, %eax;je  <.text+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $-;pushl $-": 2,
                "calll *;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "jne  <.text+>;movl (%eax), %ecx;cmpl %edi, %ecx;je  <.text+>;cmpb $, (%ebx)": 1,
                "je  <.text+>;cmpb $, (%ebx);jne  <.text+>;cmpw %di, (%eax);movl , %eax": 1,
                "je  <.text+>;leal -(%ebp), %edx;pushl %edx;leal (%ebx), %edi;pushl %edi": 2,
                "pushl %edx;leal (%ebx), %edi;pushl %edi;leal -(%ebp), %edx;pushl %edx": 1,
                "cmpl $, (%edi);movw $, (%ebx);jbe  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "leal (%eax,%eax), %eax;pushl %eax;pushl -(%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "incl -(%ebp);movl -(%ebp), %ecx;cmpl (%edi), %ecx;jb - <.text+>;jmp  <.text+>": 1,
                "popl %ecx;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl $": 1,
                "je  <.text+>;addl $, %eax;pushl %eax;pushl -(%ebp);calll - <.text+>": 1,
                "incl %ecx;incl %ecx;movl %ecx, %edx;shrl $, %ecx;xorl %eax, %eax": 1,
                "movzwl (%esi), %eax;movzwl (%esi), %ecx;shrl %eax;leal (%esi,%eax,), %esi;movl (%ebx), %eax": 1,
                "je  <.text+>;incw -(%ebp);cmpw $, -(%ebp);jbe - <.text+>;jmp - <.text+>": 1,
                "cmpl %edi, %ebx;je  <.text+>;decl %eax;decl %eax;movl %eax, -(%ebp)": 1,
                "jne  <.text+>;movl %edi, -(%ebp);movl $, %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %edi, -(%ebp);movl $, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "movl $, %ebx;leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %edi": 1,
                "movl %ebx, -(%ebp);pushl -(%ebp);calll *;cmpl %edi, %eax;jne  <.text+>": 1,
                "testl %ebx, %ebx;je  <.text+>;incl %ebx;incl %ebx;jmp  <.text+>": 1,
                "pushl %ecx;pushl (%ebp);incl %eax;pushl $;pushl %ebx": 1,
                "jne  <.text+>;jmp  <.text+>;pushl %eax;calll *;movl -(%ebp), %eax": 1,
                "calll *;movl -(%ebp), %eax;incl -(%ebp);cmpl $, %eax;jb - <.text+>": 1,
                "cmpw $, %ax;jne  <.text+>;movl %edx, %eax;popl %ebp;retl $": 1,
                "subl $, %esp;movl (%ebp), %ecx;movl (%ecx), %eax;pushl %ebx;xorl %ebx, %ebx": 1,
                "je  <.text+>;decl %eax;je  <.text+>;orl $-, %eax;jmp  <.text+>": 1,
                "jne  <.text+>;movl $, %esi;cmpw %bx, (%ebp);je  <.text+>;orl $, -(%ebp)": 1,
                "orl $, %eax;pushl %eax;pushl $;pushl %ebx;pushl -(%ebp)": 1,
                "movl %eax, -(%ebp);jne  <.text+>;calll *;testb $, (%ebp);movl (%ebp), %ecx": 1,
                "testb $, (%ebp);movl (%ebp), %ecx;movl %eax, (%ecx);je  <.text+>;movl (%ebp), %ecx": 1,
                "cmpw $, %ax;jne  <.text+>;pushl (%ebp);movl (%ebp), %eax;andl $, %eax": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;popl %edi;popl %esi": 1,
                "pushl %edi;movl %ecx, %esi;movl %edx, %edi;andw $, (%edi);movl %eax, -(%ebp)": 1,
                "addl $, %esp;movl %eax, %edi;pushl %edi;calll *;testl %edi, %edi": 1,
                "calll *;movl $, (%esp);pushl %ebx;calll - <.text+>;movl %eax, %edi": 1,
                "pushl $;pushl %edi;calll *;movl %eax, %esi;cmpl $-, %esi": 1,
                "movl (%ebp), %edi;xorl %ebx, %ebx;movl %eax, -(%ebp);movl (%edi), %eax;movw %bx, (%esi)": 1,
                "xorl %ebx, %ebx;movl %eax, -(%ebp);movl (%edi), %eax;movw %bx, (%esi);movl %edi, (%esi)": 1,
                "pushl (%edi);movl %edi, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "popl %ecx;jne  <.text+>;movl (%esi), %eax;orl $-, (%eax);movl (%esi), %eax": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %ebx, (%eax);movw %bx, (%esi);movl (%edi), %eax": 1,
                "calll *;incl -(%ebp);cmpl $, -(%ebp);jl - <.text+>;movl (%edi), %eax": 1,
                "cmpl $, -(%ebp);jl - <.text+>;movl (%edi), %eax;cmpw %bx, (%eax);jne  <.text+>": 1,
                "movw %bx, (%eax);calll - <.text+>;movl -(%ebp), %esi;movl (%esi), %ecx;testb $, %ch": 1,
                "decl %eax;je  <.text+>;movl -(%ebp), %edi;jmp  <.text+>;testb $, %ch": 1,
                "movl %eax, -(%ebp);movl $, %eax;cmpl %eax, -(%ebp);je  <.text+>;cmpl $-, -(%ebp)": 1,
                "pushl %eax;calll  <.text+>;testw %ax, %ax;je  <.text+>;orw $, %ax": 1,
                "movl %eax, %esi;jmp - <.text+>;movl -(%ebp), %esi;andb $-, (%esi);testb $, (%esi)": 1,
                "calll - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll *": 2,
                "cmpl -(%ebp), %ecx;jne  <.text+>;movl (%eax), %ecx;cmpl -(%ebp), %ecx;je  <.text+>": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%edi), %ecx;movl %ecx, (%eax)": 1,
                "movl (%edi), %ecx;movl %ecx, (%eax);movl %eax, (%edi);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "movl %ecx, (%eax);movl %eax, (%edi);movl -(%ebp), %eax;movl (%eax), %ecx;movl -(%ebp), %edx": 1,
                "pushl $;pushl $;pushl -(%ebp);calll *%esi;addl $, %esp": 10,
                "jmp  <.text+>;pushl $;pushl $;pushl -(%ebp);calll *%esi": 5,
                "movl , %eax;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %edx;xorl %ecx, %ecx": 1,
                "jne  <.text+>;cmpw $, (%ebp);jne  <.text+>;pushl -(%ebp);calll  <.text+>": 1,
                "calll  <.text+>;testw %ax, %ax;je  <.text+>;jmp  <.text+>;pushl $": 1,
                "andl $, -(%ebp);cmpl $-, %eax;movl %eax, -(%ebp);je  <.text+>;testb $, (%esi)": 1,
                "testw %ax, %ax;je  <.text+>;movw %ax, %si;jmp  <.text+>;movl (%ebx), %eax": 1,
                "pushl $;pushl $;pushl -(%ebp);pushl %esi;pushl %edi": 1,
                "cmpl $-, -(%ebp);jne  <.text+>;cmpw $, (%ebp);je  <.text+>;cmpw $, (%ebp)": 1,
                "movl (%edi), %eax;pushl (%eax);calll - <.text+>;testw %ax, %ax;jne  <.text+>": 1,
                "je  <.text+>;andl $, -(%ebp);jmp  <.text+>;cmpw $, -(%ebp);je  <.text+>": 1,
                "movl (%esi), %eax;testb $, %ah;je  <.text+>;testb $, %ah;je  <.text+>": 1,
                "pushl %eax;pushl %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);calll *;cmpl $-, %eax;movl %eax, -(%ebp)": 3,
                "calll  <.text+>;cmpw $, -(%ebp);je  <.text+>;cmpw $, -(%ebp);je  <.text+>": 1,
                "pushl (%eax);pushl (%ebx);pushl %ebx;calll  <.text+>;testw %ax, %ax": 1,
                "testw %ax, %ax;je  <.text+>;orw $, %ax;jmp  <.text+>;pushl $": 2,
                "pushl (%esi);pushl %ebx;calll - <.text+>;pushl (%esi);pushl (%esi)": 1,
                "movl $, (%esi);movw -(%ebp), %ax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "pushl %ebx;calll *;addl $, %esp;pushl -(%ebp);pushl -(%ebp)": 1,
                "je  <.text+>;movl (%eax), %edi;xorl %ebx, %ebx;pushl $;pushl $": 1,
                "pushl %ebx;pushl %edi;pushl (%ebp);calll  <.text+>;testw %ax, %ax": 1,
                "jne  <.text+>;pushl $;pushl -(%ebp);calll *;movl (%esi), %eax": 1,
                "leave;retl $;cmpl %ebx, %eax;jne - <.text+>;orl $-, %ebx": 1,
                "popl %ecx;movl %eax, (%ebx);jne  <.text+>;orl $-, -(%ebp);jmp  <.text+>": 1,
                "cmpl %edi, (%ebx);jne  <.text+>;orw $, %ax;jmp  <.text+>;movl (%ebx), %eax": 1,
                "jne  <.text+>;movl (%ebx), %eax;movl (%eax), %esi;movl (%ebp), %edi;movl (%edi), %edx": 1,
                "movw %cx, (%esi);movw %cx, (%esi);movw %cx, (%esi);movw $, (%esi);movw %cx, (%edx)": 1,
                "movl (%eax), %ecx;testb $, %ch;jne  <.text+>;xorl %edx, %edx;incl %edx": 1,
                "movl (%edi), %edi;testb $, (%edi);je  <.text+>;andl $, -(%ebp);movl $, %edi": 1,
                "pushl %ebx;pushl %edi;calll  <.text+>;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "popl %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi);jmp  <.text+>;movl (%ebp), %eax": 1,
                "pushl %esi;calll  <.text+>;cmpw $, (%ebp);je  <.text+>;xorl %eax, %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax;movl (%eax), %eax": 1,
                "movl (%ebp), %eax;movl $, -(%ebp);cmpl $, (%ebp);jne  <.text+>;jmp  <.text+>": 1,
                "cmpl $, (%ebp);jne  <.text+>;jmp  <.text+>;movl (%ebp), %eax;cmpb $, (%eax)": 1,
                "je  <.text+>;movl (%ebx), %eax;cmpl %eax, (%esi);jne  <.text+>;andw $, (%esi)": 1,
                "pushl %edi;pushl $;pushl $;movl %eax, %edi;calll *": 1,
                "popl %ecx;je  <.text+>;calll - <.text+>;testw %ax, %ax;pushl %esi": 1,
                "movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;movl (%ebp), %eax;pushl $-": 1,
                "subl (%esi), %ecx;subl (%esi), %ecx;andl $, (%eax);addl %ecx, (%eax);calll - <.text+>": 1,
                "addl %ecx, (%eax);calll - <.text+>;pushl %esi;calll *;popl %ecx": 1,
                "addl %eax, (%ebx);calll - <.text+>;movl (%esi), %eax;cmpl (%eax), %esi;jne  <.text+>": 1,
                "movl %eax, (%esi);jmp  <.text+>;movl $, %ebx;popl %edi;popl %esi": 1,
                "jmp  <.text+>;pushl $;pushl ;calll *;pushl ": 2,
                "pushl ;calll - <.text+>;cmpl %ebx, %eax;movl %eax, (%esi);jne  <.text+>": 2,
                "movl (%ebp), %edi;leal (%edi), %esi;cmpw $, (%esi);jne  <.text+>;movl , %ebx": 1,
                "calll *;pushl ;pushl %esi;calll *%ebx;addl $, %esp": 1,
                "je  <.text+>;leal (%edi), %esi;movl (%esi), %eax;testl %eax, %eax;je  <.text+>": 2,
                "testl %eax, %eax;je  <.text+>;pushl %eax;calll *%ebx;pushl (%esi)": 3,
                "movl %edi, %eax;xorl %edx, %edx;divl (%ecx);movl (%esi), %ebx;subl %edx, %edi": 1,
                "jb  <.text+>;movl %eax, (%esi);jmp  <.text+>;movl %ecx, (%esi);pushl $": 1,
                "movw $, %ax;jmp - <.text+>;movl (%ebx), %ebx;pushl $;pushl %esi": 1,
                "calll *;addl $, %esp;cmpl (%esi), %eax;jne  <.text+>;cmpw $, (%esi)": 1,
                "cmpw $, (%esi);je  <.text+>;andl $, (%esi);pushl %edi;pushl (%esi)": 1,
                "pushl -(%ebp);calll - <.text+>;testw %ax, %ax;jne - <.text+>;jmp  <.text+>": 15,
                "movl %eax, (%esi);jmp  <.text+>;movl %ecx, (%esi);movw %dx, (%esi);cmpl (%esi), %ebx": 1,
                "je  <.text+>;pushl $;pushl %edi;pushl -(%ebp);calll - <.text+>": 1,
                "cmpl %esi, %ecx;je  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl %ecx, %esi;shrl $, %ecx;subl %edx, -(%ebp);xorl %eax, %eax": 1,
                "je  <.text+>;cmpw $, -(%ebp);jne  <.text+>;movl (%ebx), %edi;movl %esi, %ecx": 1,
                "je - <.text+>;pushl %esi;pushl (%ebx);pushl -(%ebp);calll - <.text+>": 1,
                "movl (%ebp), %ecx;pushl %ebx;movl (%eax), %ebx;pushl %edi;movl (%ecx), %edi": 1,
                "movl (%eax), %ecx;pushl $;popl %eax;xorl %edx, %edx;divl %ecx": 1,
                "movw $, %ax;jmp - <.text+>;movl (%edi), %ecx;movb (%ecx), %cl;pushl %eax": 1,
                "cmpw $, %ax;je - <.text+>;jmp - <.text+>;movl -(%ebp), %ecx;movl (%edi), %esi": 1,
                "jmp - <.text+>;movl -(%ebp), %ecx;movl (%edi), %esi;pushl %edi;calll - <.text+>": 1,
                "cmpb $, (%ebx);jne  <.text+>;pushl -(%ebp);calll *;andw %si, -(%ebp)": 1,
                "jne  <.text+>;pushl -(%ebp);calll *;andw %si, -(%ebp);testl %eax, %eax": 1,
                "subl %esi, %eax;cmpl $, %eax;jb  <.text+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %ecx, -(%ebp);movl (%ebp), %ecx;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "movw %dx, (%esi);movw %dx, (%esi);movl %eax, (%esi);movl %edx, (%esi);je  <.text+>": 1,
                "movl %eax, (%esi);movl %edx, (%esi);je  <.text+>;movw $, (%esi);pushl $": 1,
                "movl (%ebp), %esi;movl %eax, -(%ebp);movl (%ebx), %eax;addl (%ebx), %eax;addl $-, %esi": 1,
                "cmpw $, %ax;je - <.text+>;cmpw %si, -(%ebp);je  <.text+>;cmpw $, -(%ebp)": 1,
                "je - <.text+>;subl -(%ebp), %eax;pushl $;subl -(%ebp), %eax;negl %eax": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);movl (%edi), %eax;xorl %ebx, %ebx;movw (%eax), %bx": 1,
                "je - <.text+>;cmpw $, -(%ebp);jne  <.text+>;movzwl (%edi), %eax;movl (%edi), %ecx": 1,
                "jae  <.text+>;xorl %edx, %edx;divl %ecx;jmp  <.text+>;xorl %eax, %eax": 1,
                "je - <.text+>;cmpw $, -(%ebp);jne  <.text+>;pushl $;pushl %ebx": 1,
                "jne  <.text+>;pushl $;pushl %ebx;calll - <.text+>;testw %ax, %ax": 1,
                "cmpw $, (%ebp);movw $, (%eax);jne  <.text+>;cmpw $, (%ebp);je  <.text+>": 1,
                "cmpl $, %eax;jne  <.text+>;movw (%ebx), %ax;incw %ax;movw %ax, (%edi)": 1,
                "je  <.text+>;movw $, %ax;jmp - <.text+>;movl (%edi), %eax;movl (%eax), %ecx": 1,
                "testb $, (%eax);je  <.text+>;movl $, %edi;jmp  <.text+>;xorl %edi, %edi": 1,
                "movl $, %edi;jmp  <.text+>;xorl %edi, %edi;cmpw %bx, %di;jne  <.text+>": 1,
                "cmpw %bx, %di;jne  <.text+>;movl -(%ebp), %eax;cmpw %bx, (%eax);jne  <.text+>": 1,
                "je  <.text+>;cmpw $, %ax;je - <.text+>;cmpw $, %ax;je  <.text+>": 1,
                "subl $, %esp;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%eax), %esi": 2,
                "calll - <.text+>;movw %di, (%esi);xorw %ax, %ax;jmp  <.text+>;pushl -(%ebp)": 1,
                "jb  <.text+>;leal -(%ebx), %eax;movl %eax, -(%ebp);xorl %edx, %edx;leal -(%ebx,%edi), %eax": 1,
                "imull %edi, %ecx;movl %ecx, %eax;divl %edi;subl $, %ecx;addl %eax, (%esi)": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;testb $, (%ecx);je  <.text+>;cmpw %ax, (%ebp)": 1,
                "cmpw %ax, (%esi);jne  <.text+>;pushl %eax;pushl %eax;pushl %ebx": 1,
                "jne  <.text+>;movw (%esi), %ax;addw %ax, -(%ebp);pushl $;pushl $": 1,
                "movw (%esi), %ax;addw %ax, -(%ebp);pushl $;pushl $;pushl %ebx": 1,
                "addl $, %esp;cmpl %ecx, %eax;je  <.text+>;pushl %ecx;pushl %ecx": 1,
                "pushl (%ebp);pushl %edi;calll - <.text+>;movl %eax, %ebx;testw %bx, %bx": 1,
                "testb $, (%eax);jne  <.text+>;movl -(%ebp), %ebx;pushl %edi;calll - <.text+>": 1,
                "subl %ecx, %eax;movl %eax, -(%ebp);movl (%ebx), %eax;cmpl %eax, -(%ebp);jb  <.text+>": 1,
                "testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>;movl (%ebp), %ecx;movl (%ecx), %ecx": 1,
                "movl (%ebp), %eax;pushl (%eax);calll  <.text+>;testw %ax, %ax;movl %eax, -(%ebp)": 1,
                "movl (%eax), %ecx;movw (%eax), %dx;movw %dx, (%ecx);movl (%eax), %ecx;movl (%eax), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl (%eax), %eax;xorl %edx, %edx;movl %eax, -(%ebp)": 1,
                "calll *;movl -(%ebp), %ecx;addl $, %esp;decl %eax;negl %eax": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);movb (%ecx), %dl;movb %dl, (%eax);movb (%ecx), %dl": 1,
                "pushl %edi;movl %ebx, %ecx;leal -(%ebp), %eax;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "pushl %edi;movw %ax, -(%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %edi;pushl $;pushl %eax": 11,
                "jmp  <.text+>;movl -(%ebp), %eax;cmpw $, (%eax);jne  <.text+>;cmpw $, (%eax)": 1,
                "pushl $;pushl %esi;calll - <.text+>;movw %di, (%esi);movw $, %bx": 1,
                "cmpl %ecx, %eax;je  <.text+>;pushl %edi;pushl $;pushl -(%ebp)": 1,
                "movl (%eax), %eax;pushl %ebx;movl (%ebp), %ebx;movl %eax, -(%ebp);movl (%eax), %eax": 1,
                "movw (%ebx), %cx;pushl -(%ebp);leal (%ebx), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "pushl $;pushl %esi;calll - <.text+>;movw %bx, (%esi);movl -(%ebp), %ecx": 1,
                "andw $, -(%ebp);andw $, -(%ebp);movzwl (%ebx), %edi;movl %eax, -(%ebp);movw (%ebx), %ax": 1,
                "movzwl (%ebx), %edi;movl %eax, -(%ebp);movw (%ebx), %ax;movw %ax, -(%ebp);movw $, -(%ebp)": 1,
                "pushl $;pushl %edi;calll *%ebx;movzwl -(%ebp), %ecx;addl $, %esp": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %eax;movl (%eax), %ecx": 2,
                "movl %eax, -(%ebp);movb (%ebx), %al;leal (%ebx), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "leal (%ebx), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movb %al, -(%ebp)": 1,
                "movw (%ebx), %ax;incl %esi;xorl %edi, %edi;cmpw %di, %ax;pushl $": 1,
                "je  <.text+>;movw %dx, -(%ebp);movl -(%ebp), %edx;addl $, %edx;jmp  <.text+>": 1,
                "movl -(%ebp), %edx;addl $, %edx;jmp  <.text+>;movw %di, -(%ebp);movw (%ebx), %ax": 1,
                "pushl %edi;pushl %ecx;sbbl %eax, %eax;andl %edx, %eax;movl -(%ebp), %edx": 1,
                "calll - <.text+>;movw %si, (%edi);movw %si, (%edi);jmp  <.text+>;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll *;cmpw %di, (%ebp);movl -(%ebp), %edi;popl %ecx": 1,
                "movl , %esi;pushl $;pushl %eax;calll *%esi;addl $, %esp": 1,
                "movl %eax, -(%ebp);pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "testw %ax, %ax;pushl %edi;movl %eax, -(%ebp);je  <.text+>;movl , %ebx": 1,
                "addl $, %esp;cmpl %edi, %eax;jne  <.text+>;xorl %eax, %eax;cmpw $, (%esi)": 1,
                "cmpw %ax, (%esi);jne  <.text+>;movl (%esi), %ecx;movl %ecx, -(%ebp);movw (%esi), %cx": 1,
                "movl %ecx, -(%ebp);movl (%esi), %ecx;pushl -(%ebp);movl %ecx, -(%ebp);movl (%esi), %ecx": 1,
                "pushl %esi;calll - <.text+>;movw %bx, (%esi);jmp  <.text+>;movl $, -(%ebp)": 1,
                "jmp  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp);pushl %edi": 1,
                "jmp  <.text+>;pushl %ebx;pushl -(%ebp);xorl %ebx, %ebx;incl %ebx": 1,
                "leal -(%ebp), %eax;pushl %ebx;pushl %eax;calll *;addl $, %esp": 1,
                "calll *;addl $, %esp;cmpl -(%ebp), %eax;jne  <.text+>;movzwl (%esi), %eax": 1,
                "pushl (%esi);pushl -(%ebp);calll *%edi;addl $, %esp;testl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);pushl %ebx;pushl %eax;calll *": 1,
                "calll *%esi;addl $, %esp;testl %eax, %eax;je  <.text+>;movl $, %eax": 1,
                "movl $, %eax;jmp  <.text+>;pushl %edi;pushl $;leal -(%ebp), %eax": 1,
                "andl $, %eax;movl -(%ebp), %ecx;popl %esi;calll - <.text+>;leave": 1,
                "pushl %edi;jne  <.text+>;cmpw %bx, %ax;je  <.text+>;addl $, %eax": 1,
                "addl $, %eax;movzwl %ax, %eax;xorl %edi, %edi;testl %eax, %eax;jle  <.text+>": 3,
                "cmpw $, %ax;jne  <.text+>;xorl %ebx, %ebx;jmp  <.text+>;addl $, %eax": 1,
                "incl %edi;incl %edi;cmpl %eax, %edi;jl - <.text+>;jmp  <.text+>": 1,
                "cmpw %ax, %bx;jne  <.text+>;leal (%eax), %edi;movzwl %di, %eax;shll $, %eax": 1,
                "movzwl %bx, %edi;jmp  <.text+>;movl (%esi), %ecx;andl $, (%ecx,%eax,);incl %eax": 1,
                "andl $, (%ecx,%eax,);incl %eax;cmpl %edi, %eax;jl - <.text+>;andl $, (%edx)": 1,
                "incl %eax;cmpl %edi, %eax;jl - <.text+>;andl $, (%edx);movw %bx, (%esi)": 1,
                "jne  <.text+>;andl %eax, (%edx);jmp  <.text+>;negl %eax;jmp  <.text+>": 1,
                "movw %bx, (%esi);calll *;popl %ecx;movl (%esi), %ecx;movl %eax, (%ecx,%edi,)": 1,
                "movl (%eax), %ebx;pushl %esi;movl (%ebp), %esi;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "movl %eax, -(%ebp);pushl %edi;movl %esi, %ecx;leal -(%ebp), %eax;movl %esi, -(%ebp)": 1,
                "movsb (%esi), %es:(%edi);leal (%eax), %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsb (%esi), %es:(%edi)": 3,
                "movzwl %di, %eax;pushl %eax;pushl (%ebx);calll *;testl %eax, %eax": 1,
                "calll *(%ecx);jmp  <.text+>;movzwl (%eax), %edi;addl %eax, %edi;movw (%eax), %ax": 1,
                "pushl -(%ebp);calll *;popl %ecx;movl %eax, (%ebx);movw $, (%ebx)": 1,
                "pushl $;pushl %ebx;calll - <.text+>;movw $, (%ebx);movl -(%ebp), %ecx": 1,
                "calll - <.text+>;movw $, (%ebx);movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "pushl %esi;movl (%eax), %esi;xorl %ecx, %ecx;cmpl $-, %esi;pushl %edi": 1,
                "testl %eax, %eax;jne  <.text+>;movl %esi, %ecx;movl -(%ebp), %esi;cmpl $-, %esi": 1,
                "jbe - <.text+>;pushl $;pushl $;pushl %edi;calll *": 1,
                "je  <.text+>;movw $, (%esi);movl (%esi), %eax;pushl $;pushl ": 1,
                "pushl $;pushl ;movl %eax, -(%ebp);calll *;popl %ecx": 1,
                "testl %eax, %eax;je  <.text+>;pushl -(%ebp);pushl %eax;pushl %edi": 1,
                "je - <.text+>;xorl %ebx, %ebx;pushl %ebx;pushl %ebx;pushl -(%ebp)": 1,
                "pushl %ebx;pushl %esi;calll - <.text+>;movw %di, (%esi);movl -(%ebp), %ecx": 1,
                "xorl %eax, %eax;movw (%esi), %ax;addl $-, %ecx;cmpw %cx, %ax;movl %ecx, -(%ebp)": 2,
                "movw (%esi), %ax;addl $-, %ecx;cmpw %cx, %ax;movl %ecx, -(%ebp);jae  <.text+>": 2,
                "leal (%eax), %ebx;movzwl %bx, %eax;pushl %eax;pushl (%esi);calll *": 2,
                "testl %eax, %eax;popl %ecx;popl %ecx;je - <.text+>;movl %eax, (%esi)": 1,
                "movl (%eax), %esi;movl (%esi), %ecx;movl (%esi), %edx;pushl %edi;movl %ecx, -(%ebp)": 1,
                "xorl %edi, %edi;movl %ecx, -(%ebp);movl (%esi), %ecx;incl %edi;cmpw %di, (%eax)": 1,
                "cmpw %di, (%eax);movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp);jne  <.text+>": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl %ecx, -(%ebp);jne  <.text+>;movl (%eax), %ebx": 1,
                "pushl $;pushl %esi;calll - <.text+>;movw %di, (%esi);jmp  <.text+>": 1,
                "pushl -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);calll *%ebx;addl $, %esp": 1,
                "movw %di, (%esi);jmp  <.text+>;cmpw $, (%esi);jne  <.text+>;cmpw $, (%esi)": 1,
                "addl $, %esp;cmpl %edi, %eax;jne  <.text+>;movl -(%ebp), %eax;andl $, -(%ebp)": 1,
                "pushl ;calll - <.text+>;addl $, %esp;movl -(%ebp), %ecx;popl %edi": 1,
                "jne  <.text+>;incw -(%ebp);leal -(%ebp), %ecx;movl (%ecx), %ecx;movl $, %eax": 1,
                "calll *;popl %ecx;movl %eax, (%esi);pushl -(%ebp);pushl -(%ebp)": 1,
                "cmpl %edi, %eax;je  <.text+>;testb $, (%ebx);je  <.text+>;testb $, (%ebx)": 1,
                "testb $, (%ebx);je - <.text+>;jmp - <.text+>;pushl %edi;pushl $": 1,
                "movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;pushl (%ebp);movl (%edi), %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl %ebx": 1,
                "calll - <.text+>;movb (%ebp), %al;pushl (%ebp);andl $, (%esi);andl $, (%esi)": 1,
                "movl %edx, (%eax);movw (%ebp), %di;pushl $;pushl %esi;movw %di, (%esi)": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;movl (%esi), %ecx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl (%esi), %edi;movl %ecx, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp);jne  <.text+>": 1,
                "calll - <.text+>;movswl (%edi), %ecx;xorl %edx, %edx;cmpl %edx, %ecx;movl %ecx, -(%ebp)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movw $, (%ebx)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %ecx, %ecx": 2,
                "calll - <.text+>;testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>;movw (%ebx), %ax": 2,
                "andw $, (%esi);andw $, (%ebx);jmp - <.text+>;movl -(%ebp), %eax;movw %dx, (%eax)": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;xorl %eax, %eax;rep  movsb (%esi), %es:(%edi)": 1,
                "movb %al, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movl %edi, (%ebx);movl %edi, (%ebx)": 1,
                "idivl %edi;movl %ecx, %eax;movl -(%ebp), %edi;subl %edx, %eax;cltd": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;andl $, -(%ebp);cmpw $, (%ebp)": 2,
                "movl %esp, %ebp;subl $, %esp;andl $, -(%ebp);cmpw $, (%ebp);pushl %ebx": 2,
                "addl %eax, (%ebx);movl (%edi), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp)": 3,
                "movl -(%ebp), %eax;jne  <.text+>;movl (%eax), %ecx;addl $, %eax;movl %ecx, (%esi)": 1,
                "pushl (%ebp);movl %eax, (%esi);movw $, (%esi);movl (%edi), %eax;calll *(%eax)": 1,
                "calll - <.text+>;movzwl %ax, %esi;pushl %esi;pushl (%ebp);calll - <.text+>": 1,
                "movl %eax, (%esi);movw (%edi), %ax;movw %ax, (%esi);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "calll - <.text+>;cmpw %bx, (%ebp);movb (%ebp), %al;movb %al, (%esi);movb -(%ebp), %al": 1,
                "cmpw %bx, (%ebp);movb (%ebp), %al;movb %al, (%esi);movb -(%ebp), %al;movb %al, (%esi)": 1,
                "movl (%edi), %eax;movl %eax, (%esi);jne  <.text+>;incl (%edi);cmpw %bx, (%ebp)": 1,
                "cmpw %bx, (%eax);je  <.text+>;orb $, (%esi);movl %ebx, (%esi);movl %ebx, (%esi)": 1,
                "movl %ebx, (%esi);cmpw %bx, (%eax);movl $, (%ebp);je  <.text+>;movl (%edi), %edi": 1,
                "addl (%eax), %ebx;movl (%eax), %eax;xorl %edx, %edx;divl (%ecx);pushl %edi": 1,
                "andl $, %ecx;rep  stosb %al, %es:(%edi);movl -(%ebp), %edi;pushl %edi;calll - <.text+>": 1,
                "pushl (%esi);pushl (%esi);calll - <.text+>;movb (%ebp), %al;movb %al, (%ebx)": 1,
                "movw %ax, (%ebx);andl $, (%edi);pushl $;pushl (%esi);calll - <.text+>": 1,
                "calll - <.text+>;movl $, %esi;pushl %esi;movl %edi, %ecx;calll - <.text+>": 1,
                "pushl %esi;movl %edi, %ecx;calll - <.text+>;movl -(%ebp), %ecx;popl %esi": 1,
                "je  <.text+>;cmpw %dx, (%ebp);jne  <.text+>;testb $, (%edi);je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;movzwl -(%ebp), %eax;movzwl -(%ebp), %ecx": 1,
                "calll - <.text+>;movzwl -(%ebp), %eax;movzwl -(%ebp), %ecx;shll $, %eax;orl %ecx, %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movw (%ebx), %ax;movl -(%ebp), %esi;addl %eax, -(%ebp)": 1,
                "pushl %eax;movzwl (%ebx), %eax;addl %ebx, %eax;pushl %eax;leal (%esi), %eax": 1,
                "movzwl %ax, %edi;movw %ax, (%ebx);movl , %esi;shrl $, %ecx;addl %ebx, %edi": 2,
                "rep  movsb (%esi), %es:(%edi);addw (%ebx), %ax;movl -(%ebp), %esi;movw %ax, -(%ebp);jmp  <.text+>": 1,
                "movl -(%ebp), %ecx;movsw (%esi), %es:(%edi);movw (%ecx), %dx;movw %dx, (%eax);movw (%ecx), %cx": 1,
                "leal (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi)": 3,
                "movw %cx, (%ebx);movw (%eax), %ax;leal -(%ebp), %ecx;movw %ax, (%ebx);calll - <.text+>": 1,
                "movl -(%ebp), %ecx;orl $, (%ebx);testb $, (%ecx);movl (%ebx), %eax;movl %ecx, %esi": 1,
                "subl %edx, %eax;cltd;idivl %ecx;addl %edx, -(%ebp);movw -(%ebp), %di": 1,
                "movl (%eax), %eax;movl $, %edi;cmpl %edi, %eax;jae  <.text+>;movl %edi, %eax": 1,
                "movl $, %edi;cmpl %edi, %eax;jae  <.text+>;movl %edi, %eax;pushl %eax": 1,
                "pushl (%esi);pushl %edi;pushl (%ebx);calll - <.text+>;testw %ax, %ax": 1,
                "leal (%edx), %ecx;movl (%ecx), %esi;movl %esi, (%edx);movl (%ecx), %esi;movl %esi, (%edx)": 1,
                "movl %esi, (%edx);movl (%ecx), %esi;movl %esi, (%edx);movl %edi, (%ecx);movl %edi, (%ecx)": 1,
                "cmpw %ax, (%ecx);je  <.text+>;cmpw %ax, (%ebp);je  <.text+>;movw $, %ax": 1,
                "jne  <.text+>;pushl %ebx;pushl $;pushl %edi;calll - <.text+>": 1,
                "pushl -(%ebp);calll - <.text+>;movw %di, %ax;jmp  <.text+>;movl (%ebx), %eax": 1,
                "movw (%edi), %ax;movw %ax, (%ebx);leal -(%ebp), %eax;pushl %eax;movb $, (%ebx)": 1,
                "movb $, (%ebx);calll *;movl -(%ebp), %eax;cltd;pushl $": 1,
                "movb %al, (%ebx);movw (%esi), %ax;testw %ax, %ax;movw %ax, (%ebx);je  <.text+>": 1,
                "pushl %eax;calll - <.text+>;movl (%edi), %eax;movw (%ebx), %cx;movw %cx, (%eax)": 1,
                "movw %ax, (%esi);movl (%edi), %ecx;movl -(%ebp), %eax;movw (%eax), %dx;movw %dx, (%ecx)": 1,
                "movw $, (%eax);movw $, (%esi);movl (%edi), %eax;andw $, (%eax);andw $, (%esi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movw (%eax), %ax;movl -(%ebp), %esi": 1,
                "pushl (%ebp);movl -(%ebp), %edi;pushl $;pushl -(%ebp);movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);calll - <.text+>;movl (%edi), %ecx;movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "pushl %esi;pushl -(%ebp);calll - <.text+>;cmpw $, (%ebp);jne  <.text+>": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);jmp  <.text+>;cmpw $, (%edi);jne  <.text+>": 1,
                "cmpw $, (%ebp);movl -(%ebp), %eax;jne  <.text+>;addl $, %eax;incl (%eax)": 1,
                "movl %esp, %ebp;pushl %ecx;movl , %eax;pushl %ebx;xorl %ebx, %ebx": 1,
                "pushl %eax;calll *%edi;popl %ecx;movl %ebx, ;popl %edi": 1,
                "int;int;xorl %eax, %eax;jmp  <.text+>;xorl %edx, %eax": 1,
                "movw (%ecx), %dx;testw %dx, %dx;jne - <.text+>;retl;int": 1,
                "pushl %esi;movl $, -(%ebp);xorl %ecx, %ecx;jmp  <.text+>;cmpw , %ax": 1,
                "movw (,%ecx,), %ax;incl %ecx;testw %ax, %ax;jne - <.text+>;jmp  <.text+>": 1,
                "andl $, -(%ebp);movw -(%ebp), %ax;popl %esi;popl %ebx;leave": 1,
                "pushl %ebx;pushl %esi;xorl %esi, %esi;movl %esi, -(%ebp);calll - <.text+>": 1,
                "movl %esi, -(%ebp);calll - <.text+>;movzwl , %ecx;movzwl %ax, %eax;cltd": 1,
                "pushl %edi;movl , %edi;pushl $;calll *%edi;pushl (%ebp)": 1,
                "movl %eax, (%esi);calll *%edi;pushl (%ebp);pushl (%esi);calll *%edi": 1,
                "pushl (%ebp);pushl (%esi);calll *%edi;movl -(%ebp), %eax;addl $, %esp": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl %esi, (%eax);jmp  <.text+>;movl -(%ebp), %ecx": 1,
                "calll *%esi;addl $, %esp;andl $, -(%ebp);popl %edi;popl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;incl ;pushl %esi": 1,
                "pushl %esi;movl , %esi;testl %esi, %esi;pushl %edi;movl (%ebp), %edi": 1,
                "idivl %ecx;movl (%esi,%edx,), %esi;jmp  <.text+>;pushl (%esi);pushl %edi": 1,
                "movl , %eax;movl (%ebp), %edx;pushl %ebx;pushl %esi;movl (%ebp), %esi": 2,
                "xorl %ecx, %ecx;incl %ecx;testb $, %al;movl %ecx, -(%ebp);jne  <.text+>": 1,
                "pushl %esi;calll - <.text+>;movl (%edi), %eax;movl %eax, (%esi);andl $, (%edi)": 1,
                "xorl %ecx, %ecx;movl -(%ebp), %eax;cmpl $-, (%eax);jne  <.text+>;cmpw $-, (%eax)": 1,
                "movl (%esi), %eax;cmpw %cx, (%eax);jne  <.text+>;movl $, -(%ebp);jmp  <.text+>": 1,
                "calll - <.text+>;jmp  <.text+>;pushl -(%ebp);pushl %esi;calll - <.text+>": 1,
                "movl $, -(%ebp);je  <.text+>;cmpw %di, -(%ebp);je  <.text+>;cmpw $, -(%ebp)": 1,
                "cmpw %di, -(%ebp);je  <.text+>;cmpw $, -(%ebp);jne  <.text+>;movl -(%ebp), %eax": 1,
                "cmpl %eax, (%ebx);sete %cl;movl %ecx, %edi;pushl $;pushl %esi": 1,
                "movl %ecx, %edi;pushl $;pushl %esi;calll - <.text+>;cmpw $, %ax": 2,
                "movl (%ebx), %eax;movl %eax, (%esi);movw (%ebx), %ax;movw %ax, (%esi);movw (%ebx), %ax": 1,
                "testb $, (%eax);je  <.text+>;cmpw %cx, -(%ebp);jne  <.text+>;movl $, -(%ebp)": 1,
                "xorl %edx, %edx;cmpl %eax, (%ebx);sete %dl;cmpw $, %dx;movl %edx, -(%ebp)": 1,
                "je  <.text+>;movw (%ebx), %ax;movw %ax, (%edi);movzwl (%esi), %eax;testb $, (,%eax,)": 1,
                "testb $, (,%eax,);jne  <.text+>;movl %ecx, -(%ebp);movl %ecx, (%edi);movw (%edi), %ax": 1,
                "movl %ecx, -(%ebp);movl %ecx, (%edi);movw (%edi), %ax;cmpw $, %ax;movl $, -(%ebp)": 1,
                "sete %al;cmpw $, -(%ebp);movl %eax, -(%ebp);je  <.text+>;cmpw $, -(%ebp)": 1,
                "cmpw $, -(%ebp);je  <.text+>;cmpw $, -(%ebp);jne  <.text+>;cmpw $, %ax": 1,
                "je  <.text+>;cmpw %cx, (%edi);jbe  <.text+>;movzwl (%esi), %eax;testb $, (,%eax,)": 1,
                "movl -(%ebp), %eax;movw $, (%eax);jmp  <.text+>;cmpl %eax, (%edi);jne  <.text+>": 1,
                "movw $, (%eax);jmp  <.text+>;cmpl %eax, (%edi);jne  <.text+>;cmpl %eax, (%edi)": 1,
                "jmp  <.text+>;cmpl %eax, (%edi);jne  <.text+>;cmpl %eax, (%edi);jne  <.text+>": 1,
                "je  <.text+>;movl (%esi), %eax;xorl %ecx, %ecx;cmpw %cx, (%eax);movl %eax, -(%ebp)": 1,
                "cmpw $, %ax;jne - <.text+>;pushl $;pushl %esi;calll - <.text+>": 4,
                "pushl %esi;calll - <.text+>;movzwl (%esi), %eax;testb $, (,%eax,);je  <.text+>": 1,
                "movl -(%ebp), %edx;xorl %ecx, %ecx;cmpw %ax, (%edx);sete %cl;movl %ecx, %eax": 1,
                "jne  <.text+>;movl -(%ebp), %ecx;movl (%ecx), %eax;testb $, %al;je  <.text+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, (%esi);movw (%eax), %ax;movw %ax, (%esi)": 1,
                "jge  <.text+>;movl %eax, -(%ebp);jmp - <.text+>;movl %eax, -(%ebp);jmp - <.text+>": 2,
                "movw %ax, -(%ebp);jne  <.text+>;cmpw %dx, -(%ebp);jne  <.text+>;cmpw $, -(%ebp)": 1,
                "movswl -(%ebp), %eax;xorl %edi, %edi;subl $, %eax;je  <.text+>;subl $, %eax": 1,
                "xorl %edi, %edi;subl $, %eax;je  <.text+>;subl $, %eax;je  <.text+>": 1,
                "subl $, %eax;je  <.text+>;decl %eax;je  <.text+>;cmpw %dx, -(%ebp)": 1,
                "movswl (%eax), %eax;pushl $;pushl %edi;pushl %eax;movl -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl (%esi);calll - <.text+>;testw %ax, %ax": 1,
                "cmpw %dx, -(%ebp);jne  <.text+>;cmpw $, %di;je  <.text+>;cmpw $, %di": 1,
                "je  <.text+>;movzwl %di, %eax;cmpl $, %eax;jl  <.text+>;cmpl $, %eax": 1,
                "movl %edx, -(%ebp);ja - <.text+>;jmpl *(,%eax,);cmpw %dx, -(%ebp);jne  <.text+>": 1,
                "cmpw $, %cx;jne  <.text+>;andb $-, (%esi);leal (%esi), %eax;pushl %eax": 1,
                "pushl %esi;calll - <.text+>;jmp  <.text+>;pushl $;pushl %esi": 1,
                "pushl $;pushl %esi;calll - <.text+>;testw %ax, %ax;jge  <.text+>": 1,
                "calll - <.text+>;testw %ax, %ax;jge  <.text+>;movl %eax, -(%ebp);jmp - <.text+>": 1,
                "jmp - <.text+>;testb $, %al;jne  <.text+>;pushl %esi;calll - <.text+>": 1,
                "je - <.text+>;pushl %ebx;pushl %esi;calll - <.text+>;cmpw $, %ax": 1,
                "movw %ax, (%esi);jne  <.text+>;orw $, %ax;cmpw %cx, -(%ebp);movw %ax, (%esi)": 1,
                "pushl %esi;calll - <.text+>;movl -(%ebp), %ecx;movw -(%ebp), %ax;popl %edi": 1,
                "decl %eax;orl (%ecx), %eax;cwtl;decl %ecx;orl (%ecx), %eax": 1,
                "decl %ecx;orl (%ecx), %eax;int;int;int": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebp);pushl %edi;movl (%ebx), %edi": 1,
                "pushl %edi;movl (%ebx), %edi;je  <.text+>;pushl (%ebp);calll *": 1,
                "calll *;popl %ecx;leal (%esi,%eax,), %esi;cmpw (%ebp), %si;jae  <.text+>": 1,
                "cmpl $, (%ebp);je  <.text+>;xorl %eax, %eax;cmpl %eax, %edi;movl , %edi": 1,
                "xorl %eax, %eax;cmpl %eax, %edi;movl , %edi;movl $, %ebx;je  <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;andw $, (%eax);pushl %ebx;pushl (%esi)": 1,
                "calll *%edi;popl %ecx;popl %ecx;pushl (%ebp);pushl (%esi)": 1,
                "movl (%ebp), %eax;pushl %eax;pushl (%ebp);calll - <.text+>;movl %eax, %esi": 1,
                "pushl (%ebp);calll - <.text+>;movl %eax, %esi;testl %esi, %esi;jne  <.text+>": 1,
                "pushl %ebx;calll - <.text+>;cmpb $, (%esi);jne  <.text+>;movl (%esi), %eax": 1,
                "pushl %eax;calll - <.text+>;andl $, (%esi);movl (%esi), %eax;testl %eax, %eax": 2,
                "jne  <.text+>;cmpw $, (%esi);jne  <.text+>;movl (%esi), %eax;pushl %edi": 1,
                "pushl (%esi);movl (%edi), %edi;pushl %ebx;calll - <.text+>;decl (%ebp)": 1,
                "movw (%eax), %cx;pushl %ecx;pushl $;pushl (%eax);pushl (%ebp)": 1,
                "leal (%eax,%eax), %eax;pushl %eax;pushl %ebx;movl %eax, (%ebp);calll - <.text+>": 1,
                "pushl %esi;pushl %ebx;calll - <.text+>;testw %ax, %ax;movl %eax, -(%ebp)": 1,
                "cmpw (%ebp), %di;je  <.text+>;movw %bx, (%ecx);movl %ebx, (%esi);movw (%ebp), %cx": 1,
                "popl %ecx;popl %ecx;movl %eax, (%esi);je  <.text+>;movl %edi, (%esi)": 1,
                "movl %eax, (%esi);je  <.text+>;movl %ebx, (%esi);movl -(%ebp), %edi;andl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);incl %eax;incl %eax;incl %edx;incl %edx": 1,
                "incl %edx;incl %edx;movw (%edx), %cx;testw %cx, %cx;jne - <.text+>": 1,
                "movl (%eax), %eax;movl %eax, (%esi);movl $, (%esi);movl , %ebx;pushl %ecx": 1,
                "leal (%ecx,%eax,), %edi;movl -(%ebp), %ecx;movw (%ecx), %ax;xorl %edx, %edx;cmpw %dx, %ax": 1,
                "je  <.text+>;movw $, (%edi);movw %dx, (%edi);cmpw %dx, (%ecx);jne  <.text+>": 1,
                "movw $, (%edi);movw %dx, (%edi);cmpw %dx, (%ecx);jne  <.text+>;cmpw %dx, (%ebp)": 1,
                "pushl (%esi);pushl -(%ebp);calll  <.text+>;testw %ax, %ax;jne  <.text+>": 1,
                "calll  <.text+>;testw %ax, %ax;jne  <.text+>;pushl $;leal -(%ebp), %eax": 1,
                "cmpl %edx, (%esi);jne  <.text+>;movw $, %ax;jmp  <.text+>;movl (%esi), %ecx": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %esi;xorl %ebx, %ebx;movl %ebx, (%eax)": 1,
                "xorl %eax, %eax;cmpl %ebx, (%ebp);sete %al;pushl %eax;pushl (%ebp)": 1,
                "movl %ebx, (%ebp);jmp  <.text+>;movl $, (%ebp);movl (%ebp), %ebx;jmp  <.text+>": 1,
                "movl %edx, %ebx;testw %bx, %bx;jne  <.text+>;movl , %eax;testl %eax, %eax": 1,
                "movl , %eax;testl %eax, %eax;je  <.text+>;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;je  <.text+>;addl $, %eax": 1,
                "calll *;popl %ecx;popl %ecx;movl %eax, (%esi);movl (%esi), %ecx": 2,
                "pushl -(%ebp);pushl %ecx;calll *;addl $, %esi;pushl %esi": 1,
                "pushl %ecx;calll *;addl $, %esi;pushl %esi;jmp  <.text+>": 1,
                "movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);jmp  <.text+>;movl (%ebp), %eax": 1,
                "movl (%eax), %eax;movl (%eax), %eax;addl $, %eax;pushl %eax;pushl -(%ebp)": 1,
                "movl (%eax), %eax;addl $, %eax;pushl %eax;pushl -(%ebp);calll *%ebx": 1,
                "movl (%eax), %eax;pushl (%eax);jmp - <.text+>;pushl (%eax);pushl %ecx": 1,
                "movl -(%ebp), %esi;leal (%ecx,%eax,), %eax;pushl %eax;pushl %esi;calll *%ebx": 1,
                "andw $, -(%esi,%eax,);jmp  <.text+>;movl (%ebp), %esi;cmpw $, (%esi);je  <.text+>": 1,
                "pushl -(%ebp);calll *%ebx;movl -(%ebp), %esi;popl %ecx;popl %ecx": 1,
                "pushl %esi;calll *%ebx;popl %ecx;popl %ecx;pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *%eax;movl %eax, %esi": 6,
                "popl %ecx;popl %edi;popl %esi;retl;int": 1,
                "movl (%esi), %edi;movl %ecx, -(%ebp);movl %ecx, -(%ebp);je  <.text+>;pushl %eax": 1,
                "pushl %eax;pushl (%ebx);calll *;testl %eax, %eax;jne  <.text+>": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;movl (%edi), %eax;pushl (%eax)": 2,
                "calll *;testl %eax, %eax;jne  <.text+>;movl $, -(%ebp);jmp  <.text+>": 2,
                "je  <.text+>;cmpw $, %ax;jne  <.text+>;cmpl %ecx, -(%ebp);je  <.text+>": 1,
                "jne  <.text+>;cmpl %ecx, -(%ebp);je  <.text+>;pushl %ecx;pushl $": 1,
                "je  <.text+>;pushl %ecx;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;pushl %ecx;pushl (%eax);pushl %eax;calll - <.text+>": 1,
                "pushl $;pushl -(%ebp);pushl $;pushl -(%ebp);calll - <.text+>": 1,
                "movl (%edi), %eax;testl %eax, %eax;movw %bx, (%edi);je  <.text+>;cmpl $-, %eax": 1,
                "movl (%ecx), %ecx;movl (%ecx), %ecx;movl , %edx;movl (%ecx), %ecx;jmp  <.text+>": 1,
                "movl (%ecx), %ecx;movl (%ecx), %ecx;movl , %edx;movl (%ecx), %ecx;movw %bx, (%edi)": 1,
                "movl (%esi), %edi;movl %edi, %ebx;xorl %ecx, %ecx;cmpl %ecx, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl %ecx, %ebx;jmp  <.text+>;incl %ebx;incl %ebx": 1,
                "movl %ecx, %ebx;jmp  <.text+>;incl %ebx;incl %ebx;movl %ebx, -(%ebp)": 1,
                "jmp  <.text+>;pushl (%esi);pushl (%esi);pushl %edi;pushl %ecx": 1,
                "pushl (%esi);pushl -(%ebp);pushl -(%ebp);calll - <.text+>;pushl (%esi)": 3,
                "calll *%edi;movw -(%ebp), %ax;addl $, %esp;jmp  <.text+>;movw $, %ax": 1,
                "pushl %esi;movl (%eax), %esi;movl (%esi), %ebx;pushl %edi;movl (%eax), %edi": 1,
                "jne  <.text+>;cmpw $, (%eax);jne  <.text+>;pushl $;pushl %esi": 1,
                "pushl %eax;movl (%edi), %eax;pushl (%eax);pushl (%esi);pushl %esi": 1,
                "movl %eax, %edi;calll *;testw %di, %di;je  <.text+>;pushl %esi": 1,
                "jne  <.text+>;movl , %eax;testl %eax, %eax;je  <.text+>;pushl -(%ebp)": 1,
                "cmpl %edx, (%ecx);je  <.text+>;pushl %ecx;xorl %eax, %eax;pushl %eax": 1,
                "cmpw $, (%eax);jne  <.text+>;cmpw %dx, (%esi);je  <.text+>;leal (%esi), %eax": 1,
                "testl %eax, %eax;jne  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;cmpw $, (%eax);jne  <.text+>;pushl $;pushl (%edi)": 1,
                "pushl -(%ebp);calll - <.text+>;testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>": 9,
                "movl %eax, -(%ebp);jne  <.text+>;movl -(%ebp), %eax;cmpw $, (%eax);jne  <.text+>": 1,
                "movl -(%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <.text+>;movl , %edi": 1,
                "calll *;leal (%eax,%eax), %eax;pushl %eax;calll *;testl %eax, %eax": 1,
                "pushl %eax;calll *%edi;pushl (%ebx);calll *;leal (%eax,%eax), %eax": 1,
                "calll *%edi;pushl (%ebx);calll *;leal (%eax,%eax), %eax;pushl %eax": 1,
                "calll *;leal (%eax,%eax), %eax;pushl %eax;calll *;addl $, %esp": 1,
                "pushl (%esi);calll *;popl %ecx;jmp  <.text+>;cmpw $, (%ebx)": 1,
                "jmp - <.text+>;orl $-, -(%ebp);jmp  <.text+>;cmpw $, (%ebx);jne  <.text+>": 1,
                "movl (%eax), %eax;cmpw $, (%eax);movl , %esi;pushl $;je  <.text+>": 1,
                "cmpw $, %ax;je  <.text+>;cmpw %cx, %ax;jne  <.text+>;testb $, (%esi)": 1,
                "movl (%edi), %eax;cmpw %cx, (%eax);je  <.text+>;movl (%edi), %eax;testb $, (%eax)": 1,
                "je  <.text+>;andl $-, %eax;testl %eax, %eax;jne  <.text+>;pushl $": 1,
                "pushl (%esi);pushl (%esi);pushl %edi;calll - <.text+>;movl -(%ebp), %eax": 1,
                "je  <.text+>;decl %eax;je  <.text+>;movl $, %ebx;jmp  <.text+>": 1,
                "testb $, (%ecx);jne  <.text+>;movl %edi, %eax;calll - <.text+>;jmp  <.text+>": 1,
                "jne  <.text+>;cmpw $, (%edi);jne  <.text+>;testw %bx, %bx;jne  <.text+>": 1,
                "movl (%ebp), %eax;movl $, (%eax);jmp  <.text+>;pushl $;pushl $": 3,
                "jmp  <.text+>;pushl $;pushl $;pushl (%ebp);calll *%esi": 2,
                "calll - <.text+>;movw $, %ax;jmp  <.text+>;movw %bx, %ax;popl %edi": 1,
                "movl %ebx, (%esi);movw $, (%esi);popl %esi;popl %ebx;leave": 1,
                "movw %cx, (%ebx);movl (%eax), %edi;movl (%eax), %eax;movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "cmpl %eax, %ecx;jg  <.text+>;je  <.text+>;cmpl %edx, %ecx;je  <.text+>": 1,
                "cmpl $, %ecx;jne  <.text+>;movl -(%ebp), %eax;cmpw $, (%eax);movl (%ebx), %ecx": 1,
                "movswl %ax, %eax;addl $, %esp;subl $, %eax;je  <.text+>;decl %eax": 1,
                "addl $, %esp;subl $, %eax;je  <.text+>;decl %eax;je  <.text+>": 1,
                "pushl (%ebx);movl (%ebx), %eax;pushl -(%ebp);pushl -(%ebp);pushl %esi": 2,
                "pushl (%eax);pushl $;calll *(%eax);pushl (%ebx);movl (%ebx), %eax": 1,
                "popl %ecx;idivl %ecx;testl %edx, %edx;jne  <.text+>;calll - <.text+>": 1,
                "addl %edx, %esi;movl %ecx, %edx;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx": 2,
                "movl (%edx), %edx;leal (%ebx), %esi;pushl %esi;leal (%ebx), %esi;pushl %esi": 1,
                "pushl %eax;calll *(%edx);movl %eax, -(%ebp);xorl %eax, %eax;cmpl %eax, (%ebx)": 1,
                "calll *;popl %ecx;popl %ecx;movl -(%ebp), %ecx;xorl %edx, %edx": 1,
                "pushl %eax;calll - <.text+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "calll *(%ecx);movl -(%ebp), %eax;addl %eax, -(%ebp);cmpw $, (%ebx);jne  <.text+>": 1,
                "pushl (%ebx);pushl %ecx;pushl -(%ebp);pushl (%ebx);pushl (%eax)": 3,
                "movl -(%ebp), %eax;leal (%edi), %esi;addl %eax, (%esi);jmp  <.text+>;pushl %ebx": 1,
                "movl (%ebx), %eax;movw -(%ebp), %cx;movw %cx, (%eax);pushl (%ebx);pushl -(%ebp)": 1,
                "movw $, (%ebx);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "addl $, %esp;cmpw $, %ax;jne  <.text+>;pushl -(%ebp);pushl $": 1,
                "pushl -(%ebp);pushl $;pushl %ebx;calll - <.text+>;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %esi;xorl %ecx, %ecx;pushl %ecx;pushl %esi;pushl -(%ebp)": 1,
                "je  <.text+>;pushl %esi;pushl (%ebx);leal -(%ebp), %eax;pushl %eax": 2,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl (%eax), %ecx;movb (%ecx), %cl;cmpb $-, %cl": 1,
                "pushl %eax;calll *(%ecx);movl (%ebx), %eax;pushl -(%ebp);addl %esi, %eax": 1,
                "je  <.text+>;cmpw $, %di;je  <.text+>;pushl (%ebx);movl (%ebx), %eax": 1,
                "jmp - <.text+>;pushl %ebx;calll - <.text+>;cmpw $, (%ebx);jne - <.text+>": 1,
                "cmpw $, (%ebx);jne - <.text+>;leal (%ebx), %esi;pushl (%esi);pushl $": 1,
                "jne - <.text+>;leal (%ebx), %esi;pushl (%esi);pushl $;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll - <.text+>;cmpw $, %di;pushl (%ebx);jne - <.text+>": 1,
                "jmp  <.text+>;movl (%ebx), %eax;pushl %edx;pushl %edx;pushl %edx": 1,
                "pushl %edx;pushl %edx;pushl $;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl $;calll *(%eax);movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %ecx": 2,
                "movw $, %ax;jmp  <.text+>;movl (%ebx), %ecx;subl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;addl (%eax), %ecx;xorl %edx, %edx;pushl %edx": 1,
                "leal (%ebx), %eax;subl %esi, (%eax);pushl -(%ebp);movl %ecx, -(%ebp);sbbl %edx, (%eax)": 1,
                "pushl -(%ebp);sbbl %edi, (%eax);movl (%ebx), %eax;pushl $;calll *(%eax)": 1,
                "cmpw $, -(%ebp);je  <.text+>;pushl %ebx;pushl -(%ebp);calll  <.text+>": 1,
                "testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>;pushl %ebx;calll - <.text+>": 1,
                "leal (%ebx), %ecx;pushl %ecx;pushl -(%ebp);pushl $;calll *(%eax)": 1,
                "pushl %ecx;pushl -(%ebp);pushl $;calll *(%eax);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %ecx;movl (%ecx), %ecx;pushl %eax": 1,
                "cmpw $, %ax;jne  <.text+>;movl (%ebx), %ecx;pushl %esi;pushl -(%ebp)": 1,
                "calll *(%ecx);addl $, %esp;pushl -(%ebp);movl (%ebx), %eax;pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl $;calll *(%eax);addl $, %esp;cmpw %si, (%ebx)": 1,
                "pushl %ebx;movl %eax, (%ebx);calll - <.text+>;pushl %ebx;movl %esi, (%ebx)": 1,
                "pushl %edx;pushl (%ebx);pushl (%eax);pushl (%eax);pushl $": 1,
                "calll *(%eax);addl $, %esp;jmp  <.text+>;movl (%ebx), %ecx;leal (%ebx), %eax": 1,
                "addl $, %esp;movw -(%ebp), %ax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "movl , %eax;pushl %esi;movl (%ebp), %esi;pushl $;pushl %esi": 1,
                "pushl $;pushl (%esi);calll - <.text+>;movl (%esi), %eax;movl (%ebp), %ebx": 1,
                "xorl %ecx, %ecx;cmpl %ecx, %edi;jne  <.text+>;movw $, %ax;jmp  <.text+>": 1,
                "jmp  <.text+>;movw %cx, -(%ebp);calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "movw %cx, -(%ebp);calll - <.text+>;testl %eax, %eax;je  <.text+>;calll - <.text+>": 1,
                "calll *;leal (%eax,%eax), %eax;popl %ecx;movw %ax, -(%ebp);xorl %ecx, %ecx": 1,
                "movl %eax, -(%ebp);jmp  <.text+>;movl %ecx, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "xorl %eax, %eax;movw (%ebx), %ax;shrl $, %eax;andl $, %eax;cmpw $, %ax": 1,
                "movw (%ebx), %ax;shrl $, %eax;andl $, %eax;cmpw $, %ax;je  <.text+>": 1,
                "je  <.text+>;pushl (%esi);pushl $;calll - <.text+>;orl $, %eax": 1,
                "calll - <.text+>;orl $, %eax;pushl %eax;pushl (%esi);pushl (%esi)": 1,
                "pushl $;pushl %esi;movl %eax, (%esi);calll - <.text+>;testw %ax, %ax": 1,
                "calll - <.text+>;movl (%esi), %esi;movl (%ebx), %eax;addl $, %esi;leal (%ebx), %edi": 1,
                "movl (%esi), %esi;movl (%ebx), %eax;addl $, %esi;leal (%ebx), %edi;movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movl (%eax), %eax;testb $, %al;je  <.text+>;movl (%ebp), %eax": 1,
                "popl %ecx;jne  <.text+>;orw $, %ax;jmp  <.text+>;movl (%edi), %eax": 1,
                "jne - <.text+>;addl $, %edi;pushl %ebx;movl %edi, -(%ebp);calll *": 1,
                "pushl %eax;calll *(%ecx);pushl %esi;movl %eax, %edi;calll *": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl %eax, -(%ebp);xorl %eax, %eax;movl %eax, -(%ebp)": 1,
                "pushl %edi;pushl %ecx;pushl %esi;pushl -(%ebp);pushl -(%ebp)": 1,
                "testw %dx, %dx;je  <.text+>;cmpb $, %cl;jne  <.text+>;movswl %dx, %ecx": 1,
                "cmpl $, %ecx;je  <.text+>;cmpl $, %ecx;je  <.text+>;xorl %edx, %edx": 1,
                "movl (%ebx), %ecx;pushl %edi;leal (%ebx), %eax;pushl %eax;pushl %esi": 1,
                "pushl -(%ebp);pushl $;calll *(%ecx);movl (%ebx), %eax;movl (%esi), %ecx": 1,
                "je  <.text+>;movl (%edi), %eax;pushl $;pushl %edi;calll *(%eax)": 1,
                "calll - <.text+>;testb $, %ah;je  <.text+>;movl -(%ebp), %eax;cmpw $, (%eax)": 1,
                "pushl -(%ebp);pushl $;calll *(%eax);addl $, %esp;movl %eax, -(%ebp)": 1,
                "pushl %edi;calll *(%eax);cmpw $, %ax;movl %eax, -(%ebp);jne  <.text+>": 1,
                "jne  <.text+>;pushl %esi;pushl %ebx;calll - <.text+>;movl (%edi), %eax": 1,
                "movl (%edi), %eax;pushl %esi;pushl %edi;calll *(%eax);movl %eax, -(%ebp)": 1,
                "movl (%ebx), %ecx;pushl %esi;leal (%ebx), %eax;pushl %eax;pushl %edi": 10,
                "pushl -(%ebp);pushl $;calll *(%ecx);movl (%ebx), %eax;movl (%edi), %ecx": 8,
                "je  <.text+>;pushl (%ebx);pushl %ebx;calll - <.text+>;pushl -(%ebp)": 1,
                "cmpw $, %dx;je  <.text+>;movl (%ebx), %edx;pushl $-;pushl %esi": 1,
                "pushl $-;pushl %esi;pushl (%ebx);movswl %cx, %ecx;pushl %ecx": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl $;calll *(%ecx);movl (%edi), %eax": 1,
                "calll *(%ecx);addl $, %esp;cmpw $, -(%ebp);jne  <.text+>;andl $, -(%ebp)": 1,
                "pushl %eax;calll  <.text+>;andl $, -(%ebp);cmpw $, (%ebx);jne  <.text+>": 1,
                "movl (%ebx), %eax;pushl %eax;pushl %ebx;movl %eax, -(%ebp);calll - <.text+>": 1,
                "testb $, (%eax);je  <.text+>;movl (%ebx), %eax;testl %eax, %eax;je  <.text+>": 1,
                "cmpl $, %eax;je  <.text+>;testb $, (%ebx);jne  <.text+>;movl (%ebx), %ecx": 1,
                "movl (%ebx), %ecx;pushl $;pushl (%ebx);leal (%ebx), %eax;pushl %esi": 1,
                "cmpw $, (%ebx);jne  <.text+>;testb $, (%ebx);je  <.text+>;pushl (%ebx)": 1,
                "movl %eax, -(%ebp);cmpl %eax, -(%ebp);je  <.text+>;movl -(%ebp), %ecx;subl %eax, %ecx": 1,
                "andl $, -(%ebp);andl $, -(%ebp);movw $, (%ebx);movl $, -(%ebp);jmp  <.text+>": 1,
                "movl -(%ebp), %eax;jmp - <.text+>;pushl (%ebx);pushl %esi;pushl (%ebx)": 1,
                "subl %edx, %eax;cmpl %eax, %ecx;jae  <.text+>;movl -(%ebp), %eax;movl (%eax), %edi": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl %eax, %ecx;movl -(%ebp), %eax;movl (%eax), %edi": 1,
                "jmp  <.text+>;cmpw $-, -(%ebp);je  <.text+>;pushl (%ebx);movl (%ebx), %ecx": 1,
                "leal (%ebx), %eax;pushl %eax;pushl -(%ebp);movsl (%esi), %es:(%edi);pushl -(%ebp)": 1,
                "pushl (%ebx);andl $, -(%ebp);pushl %ebx;calll - <.text+>;movl %eax, -(%ebp)": 1,
                "movl (%edi), %eax;pushl %esi;pushl %edi;calll *(%eax);movl (%ebx), %ecx": 1,
                "pushl $;pushl %esi;pushl (%ebx);pushl $;movl (%ebx), %ecx": 1,
                "calll *(%eax);addl $, %esp;movw $, (%ebx);cmpw $, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;xorl (%edx), %eax;addl $, %edx;decl %ecx;jne - <.text+>": 1,
                "movl $, (%ebx);movw %si, (%ebx);movw %si, (%ebx);movl $, (%ebx);movl %esi, (%ebx)": 1,
                "pushl $;subl %eax, %edi;pushl %ebx;movl %eax, (%ebx);movl %edi, (%ebp)": 1,
                "leal (%ebp), %esi;subl %edi, %esi;movl (%ebx), %edi;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movl -(%ebp), %ecx;movl (%ebx), %esi;leal (%ebp), %edi;subl %ecx, %edi;movl %ecx, %edx": 1,
                "movsl (%esi), %es:(%edi);movl (%ebp), %ecx;cmpl (%ebp), %ecx;popl %edi;popl %esi": 1,
                "subl $, %esp;movl , %eax;andl $, -(%ebp);pushl %edi;movl (%ebp), %edi": 1,
                "testl %edi, %edi;movl %eax, -(%ebp);jne  <.text+>;orw $, %ax;jmp  <.text+>": 1,
                "popl %ecx;je  <.text+>;andw $, (%esi);leal -(%ebp), %eax;pushl %edi": 1,
                "calll *;cmpl $-, %eax;jne  <.text+>;leal -(%ebp), %eax;pushl $": 1,
                "andw $, (%eax);leal -(%ebp), %ecx;cmpl %ecx, %eax;ja - <.text+>;leal -(%ebp), %eax": 1,
                "popl %ecx;movw $, -(%ebp,%eax,);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "je - <.text+>;movw -(%ebp), %ax;jmp  <.text+>;movw $, %ax;popl %esi": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %ecx;movl (%ebp), %eax;xorl %edx, %edx": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;xorl %edx, %edx;incl %edx;pushl %esi": 1,
                "pushl %edi;jne  <.text+>;movl , %edi;movl %edi, -(%ebp);movl (%ebp), %edi": 1,
                "movw %cx, (%esi);movl (%ebx), %ecx;movl %eax, (%ecx);movl (%ebx), %eax;leal (%eax), %ecx": 1,
                "xorl %ecx, %ecx;cmpl %ecx, %eax;movl %eax, (%esi);jne  <.text+>;orl $-, -(%ebp)": 1,
                "jne  <.text+>;movl (%ebp), %edx;movl (%edx), %edx;cmpw %cx, (%edx);je  <.text+>": 1,
                "movw %ax, (%ecx);pushl (%esi);leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);jne  <.text+>;cmpl $, %eax;jne  <.text+>;pushl (%esi)": 1,
                "pushl %eax;pushl $;pushl $;pushl %edi;pushl -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "calll - <.text+>;pushl (%esi);movl (%ebp), %eax;pushl (%eax);addl $, %eax": 1,
                "pushl %eax;calll - <.text+>;movl %eax, -(%ebp);cmpw $, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;movl (%ebx), %eax;movl (%ebp), %ecx;cmpl %eax, (%ecx);jne  <.text+>": 1,
                "pushl $;pushl %eax;calll *;testl %ebx, %ebx;popl %ecx": 1,
                "decl %edi;decl %edi;cmpl $, %eax;jl - <.text+>;cmpw $, (%edi)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;addl $, %esp;movl %eax, -(%ebp)": 1,
                "xorl %esi, %esi;cmpl -(%ebp), %esi;jge  <.text+>;movw -(%ebp,%esi,), %ax;pushl $": 1,
                "jle  <.text+>;addl $, %eax;movzbl (%eax), %edi;cmpl %esi, %edi;je  <.text+>": 1,
                "cmpl %esi, %edi;je  <.text+>;incl %edx;incl %eax;cmpl %ecx, %edx": 1,
                "popl %edi;popl %esi;popl %ebp;retl $;xorw %ax, %ax": 1,
                "pushl %esi;leal (%ebp), %eax;pushl %eax;pushl (%ebp);movl $, %esi": 1,
                "testw %ax, %ax;jne  <.text+>;movl (%ebp), %eax;movb (%eax), %cl;andb $, %cl": 1,
                "xorl %esi, %esi;cmpl %esi, %eax;movl %esi, -(%ebp);movl %esi, -(%ebp);je  <.text+>": 1,
                "pushl %eax;pushl $;pushl %esi;calll  <.text+>;testl %eax, %eax": 1,
                "cmpl %esi, %eax;pushl %edi;je  <.text+>;movl , %esi;movl (%ebx), %edi": 1,
                "calll *;popl %ecx;popl %ecx;movl $, -(%ebp);jmp  <.text+>": 1,
                "cmpl $, (%eax);movl $, -(%ebp);je  <.text+>;leal (%ebp), %ecx;pushl %ecx": 1,
                "pushl (%eax);pushl (%ebx);calll - <.text+>;testw %ax, %ax;jne  <.text+>": 1,
                "movl %eax, -(%ebp);jmp  <.text+>;pushl %edi;movl (%ebp), %edi;pushl %edi": 1,
                "incl %eax;decl (%ebp);jne - <.text+>;cmpw $, -(%ebp);je  <.text+>": 1,
                "cmpw $, (%eax);je  <.text+>;movl (%esi), %ecx;movb (%ecx), %dl;andb $, %dl": 1,
                "movl (%esi), %ecx;movzbl (%ecx), %ecx;andl $, %ecx;addl $, %eax;movzbl (%eax), %ebx": 1,
                "addl $, %eax;movzbl (%eax), %ebx;cmpl %ecx, %ebx;je  <.text+>;incl (%ebp)": 1,
                "cmpl %edx, (%ebp);jl - <.text+>;pushl %esi;calll - <.text+>;testw %ax, %ax": 1,
                "pushl %ebx;xorl %ebx, %ebx;movl %ebx, (%eax);leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl $-;pushl (%ebp);movl %ebx, -(%ebp);pushl %edi": 1,
                "testw %ax, %ax;jne  <.text+>;movl -(%ebp), %eax;cmpw %bx, (%eax);je  <.text+>": 1,
                "jne  <.text+>;movl -(%ebp), %eax;cmpw %bx, (%eax);je  <.text+>;movw $, %ax": 1,
                "pushl %eax;calll - <.text+>;pushl %esi;pushl $;pushl $": 1,
                "movl %esi, (%eax);movl (%edi), %eax;movl $, (%eax);movl (%edi), %eax;movb $, (%eax)": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;movl $, (%edx);movl %ecx, (%ebp);movl (%ecx), %ecx": 1,
                "testw %ax, %ax;movl %eax, %esi;jne  <.text+>;pushl %edi;calll - <.text+>": 1,
                "jne  <.text+>;pushl %edi;calll - <.text+>;pushl (%ebp);pushl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;xorl %eax, %eax;testb $, (%ebp);je  <.text+>": 2,
                "pushl (%eax);jmp  <.text+>;pushl (%eax);pushl %edi;calll *": 1,
                "pushl (%ebp);calll *;popl %ecx;popl %ecx;jmp  <.text+>": 5,
                "pushl (%ebp);calll *%esi;pushl $;pushl (%ebp);calll *%esi": 1,
                "pushl (%ebp);calll *%esi;pushl %edi;calll *%ebx;leal (%edi,%eax,), %edi": 1,
                "cmpl $, (%ebp);je  <.text+>;pushl (%ebp);pushl (%ebp);calll *%esi": 1,
                "movl (%ebp), %eax;cmpb $, (%eax);je  <.text+>;cmpl $, (%eax);jne  <.text+>": 1,
                "pushl (%ebp);calll - <.text+>;jmp  <.text+>;orl $-, %eax;leave": 1,
                "jmp  <.text+>;orl $-, %eax;leave;retl $;int": 1,
                "pushl %edi;pushl $;popl %ecx;xorl %eax, %eax;movl %edx, %edi": 1,
                "movl (%ecx), %ecx;xorl %eax, %eax;testl %ecx, %ecx;je  <.text+>;pushl %ecx": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;movl (%ebx), %eax;pushl $-": 1,
                "movl (%ebx), %eax;pushl $-;pushl (%eax);pushl (%esi);calll - <.text+>": 2,
                "movl (%ebx), %ecx;xorl %eax, %eax;cmpl %eax, (%ecx);pushl %edi;movl (%ebp), %edi": 1,
                "calll - <.text+>;movl %eax, -(%ebp);jmp  <.text+>;cmpl $, (%ebp);jne  <.text+>": 1,
                "popl %ecx;jmp  <.text+>;movl (%eax), %eax;testl %eax, %eax;je  <.text+>": 2,
                "je  <.text+>;pushl (%eax);jmp - <.text+>;movl (%ebp), %eax;andw $, (%eax)": 2,
                "andw $, (%eax);xorw %ax, %ax;popl %ebp;retl $;int": 5,
                "movl %esp, %ebp;cmpw $, (%ebp);jne  <.text+>;movl (%ebp), %eax;andw $, (%eax)": 1,
                "calll *;popl %ecx;leal (%eax,%eax), %eax;popl %ecx;movw %ax, (%edi)": 1,
                "xorw %ax, %ax;popl %edi;popl %ebx;popl %ebp;retl $": 1,
                "movb $, (%esi);movb $, (%esi);movl (%edi), %eax;andl $-, (%esi);movl %eax, (%esi)": 1,
                "jmp  <.text+>;movw $, %ax;popl %edi;popl %esi;leave": 1,
                "movw $, %ax;popl %edi;popl %esi;leave;retl $": 1,
                "movswl (%eax), %ecx;pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movzwl (%eax), %ecx;addl %eax, %ecx;pushl %ecx;pushl (%ebp)": 1,
                "movl (%eax), %eax;xorl %ecx, %ecx;movw (%eax), %cx;pushl %ecx;pushl (%eax)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;testb $, (%esi)": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %ebx;movl (%ebx), %eax;movb $, (%eax)": 1,
                "movl %ecx, (%eax);movb (%ebx), %cl;movl (%ebx), %eax;movb %cl, (%eax);movl (%ebx), %eax": 2,
                "movl (%eax), %eax;pushl (%eax);calll *;movl (%ebp), %eax;movl (%eax), %edi": 1,
                "addl $, %esi;addl $, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %ebx;movl (%ebx), %eax;movl (%ebx), %edx": 1,
                "movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %esi;leal (%eax), %edi;movsl (%esi), %es:(%edi)": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movl (%ebx), %esi;leal (%eax), %edi": 4,
                "movl (%ebx), %ecx;andw $, (%ecx);andl $, (%eax);jmp  <.text+>;xorl %ecx, %ecx": 1,
                "movl -(%ebp), %edx;movzbl (%ebx), %ecx;decl %ecx;je  <.text+>;subl $, %ecx": 1,
                "popl %esi;cmpb $, (%ecx);je  <.text+>;movl %edi, (%eax);incl %ecx": 1,
                "je  <.text+>;movl (%ebp), %eax;movl $, (%eax);jmp  <.text+>;movl (%ebx), %ebx": 1,
                "testw %ax, %ax;je  <.text+>;jmp  <.text+>;movl $, (%eax);xorw %ax, %ax": 1,
                "subl $, %edx;je  <.text+>;pushl $;popl %edi;subl %edi, %edx": 1,
                "cmpb $, (%ecx);jmp  <.text+>;movl (%ebx), %ebx;pushl $;movl %ebx, %ecx": 1,
                "movl %ebx, %ecx;popl %edx;cmpb $, (%ecx);je  <.text+>;movl %edi, (%eax)": 1,
                "jne  <.text+>;cmpb $, (%ebx);jne  <.text+>;cmpb $, (%ebx);jne  <.text+>": 2,
                "leave;retl $;movl (%ebx), %ebx;xorl %ecx, %ecx;movw (%ebx), %cx": 1,
                "calll - <.text+>;testw %ax, %ax;je - <.text+>;jmp - <.text+>;int": 1,
                "movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx)": 1,
                "movl (%eax), %ecx;movl %ecx, (%edx);movw $, (%edx);movzwl (%eax), %ecx;movl (%eax), %esi": 1,
                "cmpw $, -(%edx);popl %esi;popl %ebx;je  <.text+>;andw $, (%edx)": 1,
                "pushl (%edi);calll - <.text+>;pushl (%esi);calll *;andl $, (%esi)": 1,
                "testb $, (%eax);je  <.text+>;pushl (%ebx);pushl (%edi);calll - <.text+>": 1,
                "pushl %esi;leal -(%ebp), %ecx;movb $, -(%ebp);calll - <.text+>;pushl $": 1,
                "calll - <.text+>;pushl $;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %ecx": 1,
                "movb $, -(%ebp);calll - <.text+>;pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;pushl $;leal -(%ebp), %ecx;calll - <.text+>;movl %eax, %esi": 1,
                "movl (%edx), %ebx;pushl %esi;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %esi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %esi;movl (%esi), %esi;pushl %edi": 1,
                "pushl %ecx;pushl %eax;pushl (%ebx);leal -(%ebp), %eax;pushl $": 1,
                "calll *;popl %ecx;jmp  <.text+>;leal (%esi), %eax;pushl %eax": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;pushl $;pushl %eax": 2,
                "movl (%esi), %ecx;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 2,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %ecx, -(%ebp);movl -(%ebp), %ecx;movl (%ecx), %ecx": 2,
                "movl (%ebp), %edi;movl $, (%eax);cmpl $, (%edi);movl %esi, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl $, (%eax);cmpl $, (%edi);movl %esi, -(%ebp);movl %edx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%eax), %eax;testb $, %al;jne  <.text+>;movl -(%ebp), %ecx;testb $, (%ecx)": 1,
                "testb $, (%ecx);je  <.text+>;testb $, %al;je  <.text+>;testb $, %al": 1,
                "popl %ecx;popl %ecx;movl %eax, (%ebx);jmp  <.text+>;andl $-, (%ebx)": 1,
                "xorw %ax, %ax;jmp  <.text+>;movl -(%ebp), %eax;movl (%eax), %eax;pushl (%eax)": 1,
                "orl (%ebx), %ecx;jne  <.text+>;pushl $;popl %ecx;cmpl %ecx, -(%ebp)": 2,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %ecx;movl -(%ebp), %edi;andw $, -(%ebp)": 1,
                "movl (%edi), %edx;pushl %edi;leal -(%ebp), %ecx;calll - <.text+>;movl %eax, %esi": 1,
                "movl %eax, %esi;testl %esi, %esi;movl %esi, -(%ebp);jne  <.text+>;leal -(%ebp), %eax": 2,
                "pushl $-;pushl $;pushl %esi;pushl (%edi);calll - <.text+>": 1,
                "pushl %esi;pushl (%edi);calll - <.text+>;movw $, %ax;jmp  <.text+>": 1,
                "calll *;addl $, %esp;movw $, (%eax);movl %edi, %ecx;jmp  <.text+>": 1,
                "pushl $;pushl %eax;pushl %eax;pushl $;pushl %ecx": 1,
                "pushl %ecx;calll *;pushl %edi;movl %eax, (%ebx);calll *": 1,
                "jne - <.text+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je - <.text+>;movl (%ebx), %eax": 1,
                "cmpl (%ebx), %eax;jb  <.text+>;movl -(%ebp), %edi;ja  <.text+>;cmpl %edi, %ecx": 1,
                "cmpl %edi, %ecx;jbe  <.text+>;subl (%ebx), %edi;jmp  <.text+>;movl -(%ebp), %edi": 1,
                "calll - <.text+>;movl %edi, -(%ebp);jmp  <.text+>;pushl $;leal -(%ebp), %eax": 1,
                "addl %ecx, (%eax);xorl %eax, %eax;testl %eax, %eax;je - <.text+>;cmpl $, %eax": 1,
                "jmp  <.text+>;movl (%ebp), %edx;pushl %eax;pushl (%ebp);pushl %ecx": 1,
                "pushl (%ecx);pushl %eax;calll - <.text+>;andl $, (%esi);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;xorl %ecx, %ecx;xorl %ebx, %ebx": 1,
                "addl %eax, (%esi);xorl %ecx, %ecx;cmpl %ecx, (%esi);jne - <.text+>;movl %ecx, (%esi)": 1,
                "movl , %eax;pushl %ebx;movl %ecx, %ebx;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "movl %ecx, %ebx;movl %eax, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;movl (%eax), %ecx;pushl %esi;movl (%ebx), %esi": 1,
                "jne  <.text+>;movl (%esi), %edx;testl %edx, %edx;je  <.text+>;pushl %edx": 1,
                "movl (%esi), %edx;testl %edx, %edx;je  <.text+>;pushl %edx;pushl (%ecx)": 1,
                "calll - <.text+>;andl $, (%esi);movl -(%ebp), %ecx;xorl %eax, %eax;cmpl %eax, (%esi)": 1,
                "testb $, (%eax);je  <.text+>;orl $, (%esi);leal (%esi), %eax;pushl %eax": 1,
                "popl %edi;popl %esi;movl %eax, (%ebx);popl %ebx;popl %ebp": 2,
                "movl %edi, -(%ebp);je  <.text+>;movl (%ebx), %ecx;testb $, %cl;je  <.text+>": 1,
                "jmp  <.text+>;movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %edi, (%ecx)": 1,
                "leal (%eax,%esi,), %esi;movl %edx, %ecx;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "testl %eax, %eax;je  <.text+>;movl %edx, %ecx;andl $, %ecx;je  <.text+>": 1,
                "cmpl %esi, %ecx;jbe  <.text+>;subl (%eax), %esi;movl (%ebp), %ecx;movl %esi, (%ecx)": 1,
                "jne  <.text+>;xorl %ecx, %ecx;incl %ecx;jmp  <.text+>;xorl %ecx, %ecx": 3,
                "movl $, %eax;jmp  <.text+>;cmpl $, %ecx;je  <.text+>;cmpl $, %ecx": 1,
                "cmpl $, %ecx;je  <.text+>;cmpl $, %ecx;je  <.text+>;testl %ecx, %ecx": 1,
                "movw $, %ax;jmp  <.text+>;pushl %ebx;movl (%ebp), %ebx;movl (%ebx), %ecx": 1,
                "jmp  <.text+>;movl (%ebx), %eax;movl (%ebp), %edx;movl %eax, (%edx);movw $, (%ebx)": 1,
                "leal (%eax), %ecx;movl %ecx, (%eax);pushl %edi;movl (%edx), %edi;movl (%edi), %edi": 2,
                "movl %ecx, (%eax);movl (%esi), %eax;andl $-, %eax;orl $, %eax;movl %eax, (%esi)": 1,
                "andl $-, (%esi);testb $, (%edi);jne  <.text+>;movl (%ebx), %ecx;xorl %eax, %eax": 1,
                "cmpw $, -(%ebp);jne  <.text+>;leal (%esi), %eax;pushl %eax;movl (%ecx), %eax": 1,
                "jne  <.text+>;cmpl $, (%ebp);jne  <.text+>;andl $, (%edi);movl $, (%edi)": 1,
                "jne  <.text+>;movw %si, (%ebx);movl (%edx), %edi;pushl $;popl %ecx": 1,
                "movl (%edx), %edi;pushl $;popl %ecx;xorl %eax, %eax;rep  stosl %eax, %es:(%edi)": 2,
                "movl %eax, (%ebp);je  <.text+>;movl (%esi), %ecx;cmpl %eax, %ecx;je  <.text+>": 1,
                "calll  <.text+>;movl (%ebx), %eax;pushl %esi;pushl (%esi);pushl (%eax)": 1,
                "movl , %esi;pushl %edi;movl (%ebp), %edi;pushl (%edi);calll *%esi": 1,
                "leal (%eax,%eax), %eax;cmpw %ax, (%ebx);popl %ecx;jge  <.text+>;movl $, %edi": 1,
                "movw %ax, (%ebx);movw %di, %ax;popl %edi;popl %esi;popl %ebx": 1,
                "cmpl %eax, (%edi);jne  <.text+>;pushl %eax;pushl %ebx;calll  <.text+>": 1,
                "movl (%edi), %ecx;movl %ecx, (%esi);movl (%ebx), %ecx;cmpw %ax, (%ecx);jne  <.text+>": 1,
                "movl (%esi), %eax;pushl (%eax);pushl (%ebx);calll *;testl %eax, %eax": 1,
                "testl %eax, %eax;movl %eax, (%esi);jne - <.text+>;jmp  <.text+>;andl $-, (%esi)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;movl $, %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);popl %edi;xorw %ax, %ax;popl %esi;popl %ebp": 1,
                "testl %eax, %eax;movl %edi, -(%ebp);movl %eax, -(%ebp);je  <.text+>;testl %ebx, %ebx": 1,
                "pushl %eax;calll *;pushl %ebx;calll *%esi;movl -(%ebp), %ecx": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;je  <.text+>;movw $, (%esi)": 1,
                "pushl %esi;movl (%ebx), %esi;movl %edx, -(%ebp);cmpl %edx, (%esi);pushl %edi": 1,
                "andl $, (%esi);andl $-, (%esi);pushl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movl (%edi), %eax;pushl (%eax);pushl (%edi)": 2,
                "popl %ecx;popl %ecx;je  <.text+>;incl -(%ebp);addl $, -(%ebp)": 1,
                "movl (%ecx), %esi;movl (%esi,%edx), %edx;movl (%ecx), %ecx;movl (%eax), %edi;leal (%ecx,%edx,), %ecx": 1,
                "je  <.text+>;movl (%edi), %edx;xorl %ebx, %ebx;incl %ebx;cmpw $, (%edx)": 1,
                "pushl %ecx;pushl %edi;calll - <.text+>;movl (%esi), %eax;testb $, %al": 1,
                "xorl %ebx, %ebx;testl %esi, %esi;popl %ecx;je  <.text+>;movl (%esi), %eax": 1,
                "movl -(%ebp), %ebx;incl -(%ebp);popl %ecx;testl %ebx, %ebx;jne - <.text+>": 1,
                "testb $, (%eax);movl (%edi), %esi;movl (%edi), %ebx;je  <.text+>;pushl %edi": 1,
                "pushl %ecx;pushl %edi;movl (%ebp), %edi;movb (%edi), %al;testb %al, %al": 1,
                "movw , %ax;cmpw %si, %ax;popl %ecx;popl %ecx;movl %esi, %edx": 1,
                "addl $, -(%ebp);jmp - <.text+>;movl (%ebp), %eax;shll $, %edi;movl (%edi,%eax), %eax": 1,
                "pushl %ebx;calll - <.text+>;pushl (%ebp);movl %eax, %edi;pushl -(%ebp)": 1,
                "je  <.text+>;addl $, %eax;pushl %eax;pushl (%ebp);calll *%edi": 2,
                "calll - <.text+>;pushl $;pushl %edi;calll *;popl %ecx": 1,
                "pushl %esi;calll - <.text+>;popl %edi;jmp  <.text+>;pushl $": 1,
                "pushl (%esi);pushl (%ebp);calll *;popl %ecx;popl %ecx": 2,
                "movl (%eax), %eax;jne  <.text+>;movl (%eax), %eax;movl (%eax), %eax;cmpl $, %eax": 1,
                "cmpw %di, (%edx);je  <.text+>;pushl (%esi);pushl %eax;calll - <.text+>": 1,
                "pushl %eax;calll - <.text+>;movl (%esi), %esi;cmpl %edi, %esi;je  <.text+>": 1,
                "movl (%ebp), %edx;andl $, -(%ebp);pushl %esi;xorl %esi, %esi;pushl %edi": 1,
                "decl %esi;decl %edi;decl %edi;cmpl (%ebp), %edi;jne - <.text+>": 1,
                "decl %edi;decl %edi;cmpl (%ebp), %edi;jne - <.text+>;movw $, %ax": 1,
                "je  <.text+>;pushl (%ebp);calll *%edi;popl %ecx;leal (%esi,%eax,), %esi": 1,
                "popl %ecx;leal (%esi,%eax,), %esi;pushl $;pushl %esi;calll *": 1,
                "pushl %esi;calll *;movl %eax, %ebx;testl %ebx, %ebx;popl %ecx": 1,
                "testl %ebx, %ebx;popl %ecx;popl %ecx;je  <.text+>;pushl $": 1,
                "addl $, %esp;pushl (%ebp);pushl %ebx;calll *%esi;cmpl $, (%ebp)": 1,
                "je  <.text+>;leal (%edi), %ecx;cmpl (%ecx), %eax;jae  <.text+>;movl %eax, (%ecx)": 1,
                "pushl %edi;movl (%eax), %edi;movl %edi, -(%ebp);xorl %ebx, %ebx;addl $, %edi": 2,
                "je  <.text+>;cmpl %ebx, (%ebp);je  <.text+>;pushl %esi;movl , %esi": 2,
                "cmpl %ebx, (%ebp);je  <.text+>;pushl %esi;movl , %esi;movl %ebx, -(%ebp)": 2,
                "pushl %edi;pushl (%ebp);calll *;testl %eax, %eax;popl %ecx": 2,
                "calll *%ebx;pushl %edi;calll *%esi;andw $, (%edi,%eax,);movl -(%ebp), %eax": 2,
                "movl -(%ebp), %ecx;addl $, %esp;incl %eax;movl %eax, (%ecx);popl %esi": 2,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;pushl %edi;movl (%ebp), %edi": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;calll *;testl %eax, %eax": 3,
                "leal (%esi), %eax;pushl %eax;calll *;popl %ecx;movw $, (%edi)": 2,
                "movw $, (%edi);addl $, %edi;popl %ecx;addl $, %esi;jmp  <.text+>": 2,
                "addl $, %esi;pushl %edi;pushl %esi;pushl (%ebp);jmp  <.text+>": 1,
                "addl $, %edi;pushl %edi;pushl %ebx;pushl (%ebp);calll - <.text+>": 1,
                "leal (%esi), %ebx;jmp - <.text+>;movl (%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %ecx": 1,
                "jmp - <.text+>;movl (%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %ecx;addl $, %edi": 1,
                "movl (%esi), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl (%esi), %ecx;movl %eax, -(%ebp)": 1,
                "movl (%ecx), %ecx;movl %ecx, -(%ebp);movl (%esi), %ecx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movw %cx, (%ebx);je  <.text+>;cmpl $-, %eax;je  <.text+>;pushl %eax": 1,
                "orl $-, (%ebx);movl $, %ecx;cmpl %ecx, (%edi);jne  <.text+>;movw $, (%ebx)": 1,
                "movl $, %ecx;cmpl %ecx, (%edi);jne  <.text+>;movw $, (%ebx);movl (%edi), %eax": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebx), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl -(%ebp), %edi;addl $, %edi;movl %edi, %edx;calll  <.text+>;movl -(%ebp), %esi": 1,
                "andl $, %eax;cmpl $, %eax;jne  <.text+>;cmpw $, -(%ebp);je  <.text+>": 1,
                "leal (%ebx), %ecx;pushl %ecx;movl %eax, -(%ebp);calll *%esi;movl %eax, %edi": 2,
                "movl %eax, %ecx;leal (%ebx,%edi,), %edi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);jne  <.text+>": 2,
                "xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);jne  <.text+>;movw $, (%ebx);movw $, %ax": 1,
                "movl %eax, %ecx;andl $, %ecx;leal -(%ebp), %eax;rep  movsb (%esi), %es:(%edi);movl -(%ebp), %edi": 2,
                "movl -(%ebp), %eax;movl (%eax), %eax;subl %eax, -(%ebp);addl %eax, -(%ebp);cmpw %si, -(%ebp)": 1,
                "movl (%eax), %eax;subl %eax, -(%ebp);addl %eax, -(%ebp);cmpw %si, -(%ebp);popl %ecx": 1,
                "je  <.text+>;movl -(%ebp), %ecx;movl -(%ebp), %eax;addl %ecx, (%eax);jmp - <.text+>": 1,
                "je  <.text+>;pushl $;pushl %eax;pushl $;pushl (%esi)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;cmpl $, (%ecx);movl (%ebp), %eax": 1,
                "movl %edi, %ecx;shll $, %ecx;movl %ecx, -(%ebp);cmpl %esi, (%ebp);jge  <.text+>": 1,
                "xorl %edi, (%eax);incl %edx;decl %esi;jne - <.text+>;popl %edi": 1,
                "cmpl %ecx, (%edx);jae  <.text+>;movl (%ebp), %eax;movl %ecx, (%eax);movl %esi, (%edx)": 1,
                "pushl %ecx;movl (%eax), %ecx;pushl %ebx;movl (%eax), %ebx;cmpw $, (%ebx)": 1,
                "pushl %eax;calll *%edi;movl (%ebp), %ecx;leal (%ecx,%eax,), %eax;addl $, %esi": 2,
                "movl %eax, (%ebp);calll *%edi;addl $, %esp;movl (%ebp), %ecx;leal (%ecx,%eax,), %eax": 1,
                "movl (%ebx), %ebx;movl (%ebp), %ecx;cmpl %ebx, (%ecx);jae  <.text+>;movl (%ebp), %eax": 1,
                "jmp  <.text+>;movl (%eax), %eax;cmpb $, (%eax);movl , %edi;jne  <.text+>": 1,
                "jne  <.text+>;leal (%esi), %ebx;pushl %ebx;pushl (%ebp);calll *%edi": 1,
                "pushl %ecx;movl (%ebp), %ecx;movl %eax, (%ebp);addl %ecx, %eax;pushl %eax": 3,
                "movl (%ebp), %ecx;movl %eax, (%ebp);addl %ecx, %eax;pushl %eax;calll *%edi": 3,
                "movl (%esi), %eax;leal (%ecx,%eax,), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "testl %eax, %eax;jne  <.text+>;movl (%esi), %eax;negl %eax;sbbl %eax, %eax": 1,
                "andl $, %eax;addl $, %eax;movl %eax, (%edi);movl -(%ebp), %eax;cltd": 1,
                "movl %edx, -(%ebp);je  <.text+>;pushl %ecx;pushl %eax;pushl (%ebp)": 1,
                "pushl %eax;pushl %edx;movl (%ebp), %edx;movl %esi, %eax;calll - <.text+>": 1,
                "pushl %esi;calll - <.text+>;pushl %ecx;pushl %esi;calll - <.text+>": 1,
                "movl (%edx), %eax;movl %edi, (%edx);leal (%ebx), %esi;movl %eax, -(%ebp);movl %edi, (%ecx)": 1,
                "movl %ecx, (%eax);xorw %ax, %ax;jmp  <.text+>;movl (%ebp), %edi;movl %ecx, %eax": 1,
                "addl %eax, (%ebp);movl %eax, (%edx);movl (%ebx), %edi;movl -(%ebp), %ecx;movl (%ebx), %esi": 1,
                "jmp  <.text+>;pushl $;pushl %eax;pushl $;pushl (%esi)": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;pushl %edi;xorl %edi, %edi": 1,
                "jne  <.text+>;pushl (%ebp);pushl %ebx;calll *;testl %eax, %eax": 1,
                "movw %dx, (%ecx,%eax,);movl (%ebp), %ecx;shrl %ecx;incl %eax;decl %ecx": 1,
                "movl %ecx, %eax;movl (%ebp), %ecx;movl (%ecx), %ecx;movw %ax, (%ecx);movl $, -(%ebp)": 1,
                "movw %ax, (%ecx);movl $, -(%ebp);movw -(%ebp), %ax;popl %edi;popl %esi": 1,
                "calll *%edi;pushl -(%ebp);calll *%ebx;movl -(%ebp), %ecx;leal (%ecx,%eax,), %eax": 3,
                "subl $, %eax;je  <.text+>;decl %eax;je  <.text+>;movl $, -(%ebp)": 3,
                "pushl -(%ebp);calll *%ebx;movl -(%ebp), %ecx;addl $, %esp;cmpw $, -(%ecx,%eax,)": 4,
                "pushl %eax;calll *;jmp  <.text+>;pushl -(%ebp);leal (%esi), %eax": 2,
                "jmp  <.text+>;leal (%esi), %eax;pushl -(%ebp);pushl %eax;calll *%edi": 2,
                "calll *%ebx;popl %ecx;movl -(%ebp), %ecx;leal (%ecx,%eax,), %eax;movl %eax, -(%ebp)": 2,
                "jne  <.text+>;cmpw $, %ax;jne  <.text+>;leal (%esi), %eax;pushl %edi": 1,
                "leave;retl;movl , %edi;movl , %ebx;addl $, -(%ebp)": 1,
                "andl $, -(%ebp);movl (%edi), %eax;xorl %edx, %edx;pushl %ebx;movl (%esi), %ebx": 1,
                "movl (%edi), %eax;xorl %edx, %edx;pushl %ebx;movl (%esi), %ebx;movw %dx, (%edi)": 1,
                "movl (%esi), %ebx;movw %dx, (%edi);movl %edx, (%edi);movl %edx, (%edi);movl %esi, (%edi)": 1,
                "cmpl $, (%edx);movl %ecx, -(%ebp);movl $, -(%ebp);movl $, %edx;je  <.text+>": 1,
                "leal (%eax), %ebx;movl (%esi), %eax;movl (%eax), %eax;pushl %ebx;pushl -(%ebp)": 1,
                "movl (%eax), %eax;cmpl $, (%eax);jne  <.text+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "cmpw $, -(%ebp);jne - <.text+>;cmpw $, (%ebp);movl -(%ebp), %ecx;jne - <.text+>": 1,
                "cmpw $, (%ebp);movl -(%ebp), %ecx;jne - <.text+>;movl (%esi), %eax;testb $, (%eax)": 1,
                "movl (%edx), %edi;movl (%edi), %edi;xorl %eax, %eax;cmpw %bx, (%ebp);movl $, %ecx": 1,
                "cmpw %bx, (%ebp);movl $, %ecx;rep  stosl %eax, %es:(%edi);jne  <.text+>;movl (%esi), %eax": 1,
                "movl (%edx), %eax;movw %cx, (%eax);movl (%edx), %eax;movl %edi, (%eax);xorl %eax, %eax": 1,
                "cmpl $, %eax;jg  <.text+>;movl (%edx), %edi;pushl %ecx;calll - <.text+>": 1,
                "movw %cx, (%eax);jmp  <.text+>;pushl $;pushl $;pushl %esi": 1,
                "movswl (%ebp), %eax;movl %eax, (%ebx);xorw %ax, %ax;jmp  <.text+>;cmpw $, (%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;cmpl $, -(%ebp);je  <.text+>;cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <.text+>;calll - <.text+>;pushl $;calll *": 3,
                "cmpl $, -(%ebp);jl - <.text+>;pushl -(%ebp);calll *%edi;addl $, -(%ebp)": 1,
                "jmp  <.text+>;xorw %ax, %ax;jmp  <.text+>;pushl (%ebp);calll *": 1,
                "movl (%edi), %eax;xorl %ebx, %ebx;cmpw %bx, (%eax);leal (%eax), %ecx;movl %ebx, (%ecx)": 1,
                "je  <.text+>;movw $, %ax;jmp  <.text+>;movl (%esi), %eax;cmpl $, (%eax)": 1,
                "calll *%esi;calll *;subl $, %eax;negl %eax;sbbl %eax, %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %ecx;pushl %eax;movl %ebx, -(%ebp)": 1,
                "subl %eax, %ebx;leal -(%ebp), %eax;pushl %eax;calll *%esi;subl %eax, %ebx": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *;movl -(%ebp), %edi": 1,
                "pushl %eax;calll *;jmp  <.text+>;calll *;movl (%ebx), %eax": 1,
                "calll *;movl (%ebx), %eax;pushl (%eax);leal -(%ebp), %eax;pushl %eax": 1,
                "leal (%eax,%eax), %eax;pushl %eax;pushl ;jmp  <.text+>;cmpl $, %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;cmpl $, (%ecx);movl $, %ecx;je  <.text+>": 1,
                "pushl $;pushl %ebx;pushl %ecx;pushl (%eax);pushl %esi": 1,
                "cmpl $, (%esi);je  <.text+>;pushl $;pushl $;pushl %esi": 1,
                "pushl (%edi);movl , %esi;calll *%esi;pushl (%ebx);calll *%esi": 1,
                "calll *%esi;addl $, %esp;popl %edi;popl %esi;xorw %ax, %ax": 1,
                "addl $, %esp;popl %edi;popl %esi;xorw %ax, %ax;popl %ebx": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;pushl $;pushl $": 1,
                "incl %esi;cmpl $, %esi;jl - <.text+>;xorw %si, %si;pushl (%ebp)": 1,
                "pushl %eax;calll *;movl (%esi), %eax;movl (%eax), %eax;pushl (%eax)": 1,
                "calll - <.text+>;testw %ax, %ax;jne  <.text+>;movl (%edi), %esi;decl %esi": 1,
                "pushl %ebx;calll *;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "popl %esi;movl %eax, %edi;jmp  <.text+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, %edi;jmp  <.text+>;movl (%ebp), %eax;movl (%eax), %eax;pushl (%eax)": 1,
                "movw %di, %ax;popl %edi;popl %ebp;retl $;int": 1,
                "addl $, %esp;jmp  <.text+>;movw %di, (%eax);addl $, %eax;pushl $": 1,
                "movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);jmp  <.text+>;movl (%ebp), %edi": 1,
                "movl (%ebp), %ecx;leal (%ecx), %eax;cmpl $, (%eax);jne  <.text+>;cmpl $, (%ecx)": 2,
                "testb $, (%ecx);jne - <.text+>;movl , %eax;movl , %ecx;movl %ecx, %edx": 1,
                "jne  <.text+>;movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, (%eax);jmp  <.text+>": 1,
                "orl $, (%eax);jmp  <.text+>;andl $-, (%eax);jmp  <.text+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %eax;jne  <.text+>;movl (%ecx), %edx;jmp  <.text+>;cmpb $, %dl": 1,
                "jmp  <.text+>;cmpb $, %dl;jne  <.text+>;movl (%ecx), %edx;movl %edx, (%eax)": 1,
                "andb $-, (%eax);jmp  <.text+>;movl (%ebp), %eax;andl $, (%eax);jmp  <.text+>": 1,
                "movl %edi, (%eax);testb $, (%ebx);je  <.text+>;movl $, (%eax);jmp  <.text+>": 1,
                "jmp  <.text+>;cmpb $, %al;jne  <.text+>;movb $, (%edx);movb $, (%edx)": 1,
                "movl %eax, %ecx;movl (%ebp), %eax;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movw (%ebx), %cx": 1,
                "movw (%ebx), %cx;addw $, %cx;addw %cx, (%eax);jmp  <.text+>;testb %al, %al": 1,
                "jmp  <.text+>;testb %al, %al;jne  <.text+>;xorl %eax, %eax;movl %edx, %edi": 1,
                "addl $, %esp;movw %ax, (%ecx);movl %ecx, %edx;leal (%ebx), %eax;testb $, (%eax)": 1,
                "testb $, (%eax);je  <.text+>;orb $-, (%edx);movl (%ebx), %eax;movl %eax, (%edx)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movb (%ecx), %cl;cmpb $, %cl": 1,
                "incl %ecx;cmpl $, (,%ecx,);jne - <.text+>;jmp  <.text+>;movl (,%ecx,), %eax": 1,
                "movl , %eax;movl (%ebp), %ecx;movl (%ebp), %edx;andl $, -(%ebp);testl %ecx, %ecx": 1,
                "movzwl %ax, %ecx;cmpl (%esi), %ecx;jae  <.text+>;movl (%ebx), %ecx;movl (%ebx), %edx": 1,
                "movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;addl $, %esp": 1,
                "popl %ecx;jne  <.text+>;movw $, %ax;jmp  <.text+>;xorl %ebx, %ebx": 1,
                "je  <.text+>;movl (%eax), %eax;cmpl %ebx, %eax;je  <.text+>;movl %eax, %edi": 1,
                "cmpl (%eax), %ecx;jne  <.text+>;movl , %ebx;pushl $;addl $, %edi": 1,
                "popl %ecx;popl %ecx;testl %edi, %edi;je  <.text+>;movw $, (%edi)": 1,
                "jmp  <.text+>;movl (%esi), %eax;pushl (%eax);calll *%ebx;popl %ecx": 1,
                "popl %ecx;movl (%esi), %ecx;movl (%ecx), %ecx;leal (%ecx,%eax,), %edi;testl %edi, %edi": 1,
                "je  <.text+>;movl -(%ebp), %eax;cmpl $, (%eax);je  <.text+>;pushl $": 1,
                "popl %ecx;popl %ecx;movl %eax, (%esi);je  <.text+>;pushl %edi": 1,
                "je - <.text+>;movw (%edi), %dx;movl , %ebx;movw %dx, (%eax);movl (%ecx), %eax": 1,
                "movw $, %ax;jmp  <.text+>;movw $, %ax;jmp  <.text+>;cmpb $, %al": 1,
                "movl , %esi;leal -(%ebp), %eax;pushl %eax;calll *%esi;movl -(%ebp), %ecx": 1,
                "movl %eax, (%ecx);calll *;addl $, %esp;leal (%eax,%eax), %eax;movl -(%ebp), %ecx": 1,
                "movl (%ebx), %eax;movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;je  <.text+>": 1,
                "ja  <.text+>;pushl %esi;pushl (%ebp);calll *;popl %ecx": 1,
                "je  <.text+>;pushl %ecx;calll *;popl %ecx;addl $, %eax": 1,
                "pushl %ecx;calll *;popl %ecx;addl $, %eax;cmpw %ax, (%ebp)": 1,
                "jge  <.text+>;movw $, %ax;jmp  <.text+>;pushl (%esi);pushl (%ebp)": 1,
                "pushl (%ebp);calll *%edi;addl $, %esp;popl %edi;xorw %ax, %ax": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl (%esi);calll *": 2,
                "pushl %esi;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "pushl $;pushl %eax;calll *%esi;leal -(%ebp), %eax;pushl %edi": 1,
                "adcl %ecx, (%ebx);leal -(%ebp), %eax;pushl %eax;pushl %esi;calll *": 1,
                "pushl (%edi);movl , %esi;leal -(%ebp), %eax;pushl %eax;calll *%esi": 1,
                "calll *%esi;popl %ecx;pushl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax;pushl (%eax)": 1,
                "pushl (%eax);calll - <.text+>;jmp - <.text+>;xorl %eax, %eax;movl $, %ecx": 1,
                "calll - <.text+>;jmp - <.text+>;xorl %eax, %eax;movl $, %ecx;leal -(%ebp), %edi": 1,
                "pushl %eax;pushl %edi;calll *;pushl %edi;calll *%esi": 1,
                "pushl %eax;calll *%esi;addl $, %esp;pushl $;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;pushl (%eax);calll - <.text+>;xorl %eax, %eax;cmpw %ax, -(%ebp)": 1,
                "je  <.text+>;cmpl $, %ebx;je  <.text+>;cmpl $, %ebx;jne  <.text+>": 1,
                "calll - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;calll *": 1,
                "movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi)": 1,
                "jmp - <.text+>;testb $, (%edi);jne  <.text+>;movl $, (%ebx);jmp - <.text+>": 2,
                "movb $, (%esi);movb $, (%esi);movb $, (%esi);movl $, (%esi);movl %eax, -(%ebp)": 1,
                "pushl (%eax);leal (%esi), %eax;pushl (%edi);pushl %eax;calll - <.text+>": 5,
                "jmp  <.text+>;movb $, (%esi);movb $, (%esi);movb $, (%esi);movl $, (%esi)": 2,
                "movl (%eax), %eax;testl %eax, %eax;popl %ecx;popl %ecx;je  <.text+>": 1,
                "pushl %esi;pushl %edi;jmp  <.text+>;movl -(%ebp), %eax;cmpl $, (%ebx)": 1,
                "je - <.text+>;cmpl $, (%ebx);jne  <.text+>;pushl $;pushl $": 1,
                "incl %eax;incl %eax;pushl $;pushl %eax;movl $, -(%ebp)": 1,
                "testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>;movb (%esi), %al;cmpb $, %al": 1,
                "calll - <.text+>;testl %eax, %eax;je - <.text+>;jmp  <.text+>;cmpb $, %al": 1,
                "je - <.text+>;jmp  <.text+>;cmpb $, %al;jne - <.text+>;movl (%esi), %eax": 1,
                "popl %ecx;popl %ecx;movl %eax, -(%ebp);je  <.text+>;movl %eax, %edi": 1,
                "pushl %esi;pushl -(%ebp);calll - <.text+>;xorw %ax, %ax;jmp  <.text+>": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %edi": 1,
                "pushl %esi;pushl -(%ebp);calll - <.text+>;movl %eax, %edi;testw %di, %di": 1,
                "pushl %esi;pushl -(%ebp);calll - <.text+>;movw %di, %ax;jmp  <.text+>": 1,
                "pushl (%ebp);pushl -(%ebp);pushl %ebx;pushl %edi;calll - <.text+>": 2,
                "cmpb $, %al;jne  <.text+>;movl (%ebx), %eax;pushl (%eax);leal (%esi), %eax": 1,
                "jne  <.text+>;movl (%ebx), %eax;pushl (%eax);leal -(%ebp), %eax;pushl $": 1,
                "je  <.text+>;pushl $;addl $, %eax;pushl %eax;pushl (%esi)": 1,
                "movl -(%ebp), %eax;popl %ecx;popl %ecx;pushl $;addl $-, %eax": 1,
                "testw %ax, %ax;je - <.text+>;movw $, %ax;jmp  <.text+>;movl (%edi), %eax": 1,
                "je - <.text+>;movw $, %ax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "movl -(%ebp), %eax;cmpw $, (%eax);jne - <.text+>;movl (%esi), %eax;subl %ecx, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;jmp  <.text+>;pushl $": 2,
                "movl %ecx, -(%ebp);movl (%eax), %ecx;movl %eax, -(%ebp);movl (%eax), %eax;pushl %edi": 1,
                "pushl %ebx;pushl $;calll *%edi;pushl $;pushl %ebx": 2,
                "pushl (%eax);pushl %ebx;calll *;addl $, %esp;testl %eax, %eax": 1,
                "jne  <.text+>;movl -(%ebp), %eax;pushl (%eax);pushl -(%ebp);calll - <.text+>": 1,
                "addl %eax, %ecx;leal (%ecx,%ecx), %eax;cmpl $, %eax;jae  <.text+>;movl (%esi), %eax": 1,
                "jmp  <.text+>;andw $, -(%ebp);cmpw $, -(%ebp);je  <.text+>;pushl $": 1,
                "andw $, (%eax);pushl %esi;calll  <.text+>;popl %esi;popl %ebp": 1,
                "calll *%ebx;addl $, %esp;cmpl %eax, %edi;movl , %edi;je  <.text+>": 1,
                "movzwl (%eax), %eax;pushl %eax;pushl -(%ebp);calll *%edi;testl %eax, %eax": 1,
                "popl %ecx;popl %ecx;je  <.text+>;subl %esi, %eax;sarl %eax": 1,
                "andw $, (%eax);pushl %esi;calll *;cmpl $, %eax;popl %ecx": 1,
                "subl %esi, %eax;andl $-, %eax;cmpl $, %eax;jle  <.text+>;testl %ebx, %ebx": 1,
                "andl $-, %eax;cmpl $, %eax;jle  <.text+>;testl %ebx, %ebx;je  <.text+>": 1,
                "jle  <.text+>;testl %ebx, %ebx;je  <.text+>;movl %ebx, %eax;subl %esi, %eax": 1,
                "jbe  <.text+>;andw $, (%esi);jmp  <.text+>;cmpw $, (%ebp);je  <.text+>": 1,
                "andw $, -(%ebp);andw $, -(%ebp);movw %cx, -(%ebp);movw (%eax), %cx;movw %cx, -(%ebp)": 1,
                "movw %cx, (%eax);movb (%esi), %cl;movl (%esi), %eax;movb %cl, (%eax);movl (%esi), %eax": 1,
                "movb (%esi), %cl;movb %cl, (%eax);movl (%esi), %eax;movb $, (%eax);movl (%esi), %eax": 1,
                "movb %cl, (%eax);movl (%esi), %eax;movb $, (%eax);movl (%esi), %eax;movw (%esi), %cx": 1,
                "movl %edi, (%ebx);testb $, (%esi);jne  <.text+>;xorl %eax, %eax;movw (%esi), %ax": 1,
                "movl (%eax), %esi;calll - <.text+>;movl (%ebx), %eax;pushl (%eax);calll *": 1,
                "movl (%ebx), %ecx;leal (%eax,%eax), %eax;movw %ax, (%ecx);movw $, (%ebx);xorl %edi, %edi": 1,
                "movzbw (%esi), %cx;cmpw $, %cx;movzbw (%esi), %dx;movl (%esi), %eax;movw %dx, (%ebp)": 1,
                "movw %dx, (%ebp);jne  <.text+>;movb (%eax), %dl;movl (%esi), %ecx;movb %dl, (%ecx)": 1,
                "movl (%eax), %ecx;movl %ecx, (%ebx);testb $, (%eax);je  <.text+>;movw $, (%ebx)": 1,
                "movw %dx, (%eax);movw $, (%edi);jmp  <.text+>;pushl %ebx;movl , %ebx": 1,
                "cmpw %dx, %cx;jne  <.text+>;cmpw %dx, (%ebp);movw %dx, (%eax);je  <.text+>": 1,
                "movl (%ebx), %eax;movw (%ebx), %cx;movw %cx, (%eax);movl (%ebx), %edi;movw (%ebx), %ax": 1,
                "movl (%ebx), %eax;movw %si, (%eax);movw %si, (%edi);jmp  <.text+>;movw $, (%edi)": 1,
                "movl (%esi), %eax;pushl (%eax);calll - <.text+>;movl (%esi), %eax;pushl (%eax)": 1,
                "movw (%ebx), %cx;cmpw %si, %cx;je  <.text+>;movl (%ebx), %eax;movl %ecx, %edx": 1,
                "cmpw $, %cx;jne  <.text+>;movl (%ebx), %ecx;movb (%eax), %bl;movb %bl, (%ecx)": 1,
                "andb $-, (%edi);movzwl %cx, %ecx;cmpl $, %ecx;je  <.text+>;cmpl $, %ecx": 1,
                "cmpl $, %ecx;jne  <.text+>;movl (%eax), %ecx;movl %ecx, (%edi);movl (%eax), %ecx": 1,
                "movl %ecx, (%edi);movl (%eax), %ecx;leal (%eax), %esi;movl %ecx, %eax;shrl $, %ecx": 1,
                "leal (%eax,%eax), %eax;popl %ecx;cmpb $, (%esi);jne  <.text+>;addl $, %eax": 1,
                "cmpb $, %al;jne  <.text+>;movb (%esi), %cl;xorl %eax, %eax;cmpb $, %cl": 1,
                "leal (%esi), %ecx;cmpl %eax, (%ecx);je - <.text+>;movw (%ecx), %ax;addw $, %ax": 1,
                "movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;movl (%esi), %eax;pushl (%eax)": 1,
                "pushl $;pushl -(%ebp);calll *;cmpl $-, %eax;movl %eax, (%esi)": 1,
                "pushl %edi;movl %eax, %esi;movl (%esi), %eax;movl (%eax), %eax;leal -(%ebp), %ecx": 1,
                "pushl (%ebp);movl %eax, -(%ebp);calll - <.text+>;testw %ax, %ax;je  <.text+>": 2,
                "pushl (%ebp);calll - <.text+>;movw %di, %ax;popl %edi;popl %esi": 1,
                "calll - <.text+>;popl %edi;jmp  <.text+>;pushl (%ebp);calll - <.text+>": 1,
                "pushl %esi;movl (%ebp), %esi;movl %eax, -(%ebp);movzbl (%esi), %eax;decl %eax": 1,
                "movl $, %eax;jmp  <.text+>;cmpw $, (%esi);jne  <.text+>;movl (%ebx), %eax": 1,
                "andb $-, (%esi);movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi)": 1,
                "movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);movb $, (%esi)": 1,
                "popl %ecx;popl %ecx;je  <.text+>;movl -(%ebp), %ecx;cmpl $, %ecx": 1,
                "jne  <.text+>;movl (%esi), %eax;pushl $;pushl (%eax);calll *%ebx": 1,
                "movl (%edi), %eax;movl (%eax), %eax;movl (%eax), %ebx;movb $, (%esi);jmp  <.text+>": 5,
                "movb $, (%esi);jmp  <.text+>;movw $, %ax;jmp - <.text+>;movl (%edi), %eax": 1,
                "movl (%edi), %ecx;movl (%ecx), %ecx;pushl $;pushl (%ecx);leal (%esi), %eax": 1,
                "jmp  <.text+>;movl (%esi), %eax;pushl $;pushl (%eax);calll *%ebx": 2,
                "je  <.text+>;pushl %ebx;pushl %edi;calll *;testl %eax, %eax": 1,
                "orb $, (%esi);movw -(%ebp), %ax;jmp - <.text+>;movl (%edi), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %ebx;movb $, (%esi);jmp  <.text+>;movl (%edi), %eax;movl (%eax), %eax": 2,
                "pushl $;leal (%ebp), %eax;pushl %eax;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl , %edi;calll *%edi;testl %eax, %eax;jne  <.text+>;pushl %eax": 1,
                "jmp  <.text+>;pushl %edi;pushl -(%ebp);movl , %edi;calll *%edi": 1,
                "calll *;pushl -(%ebp);calll *%edi;testl %eax, %eax;jne  <.text+>": 1,
                "movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebp);movl (%edi), %eax": 1,
                "movzwl (%ebx), %ecx;cmpl %eax, %ecx;jae  <.text+>;pushl %eax;pushl (%ebx)": 1,
                "andw $, (%ebx);orl $-, -(%ebp);jmp  <.text+>;movl $, -(%ebp);movl (%ebp), %eax": 1,
                "jne  <.text+>;pushl $;pushl (%ebx);calll *%edi;cmpl $, %eax": 1,
                "addl (%eax), %esi;pushl $;subl %esi, %ecx;pushl $;movl %ecx, (%eax)": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl (%eax);pushl %eax;pushl $": 2,
                "pushl $;calll *;popl %ebp;retl $;int": 2,
                "pushl (%esi);calll *%edi;testl %eax, %eax;je  <.text+>;calll - <.text+>": 1,
                "pushl %ebx;pushl (%ebx);jne  <.text+>;calll - <.text+>;jmp  <.text+>": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %ebx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl (%ebp), %edi;movl (%edi), %ebx;movl %eax, -(%ebp);movl (%ebp), %eax;movl %edi, -(%ebp)": 1,
                "je  <.text+>;pushl (%eax);calll *;cmpl %edi, %eax;popl %ecx": 1,
                "cmpl (%ebx), %eax;jne  <.text+>;leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;addl $, %esp;pushl %edi": 1,
                "calll *;movl %eax, %esi;cmpl $-, %esi;je  <.text+>;pushl (%ebx)": 1,
                "pushl %esi;calll  <.text+>;pushl %esi;calll *;pushl (%ebx)": 1,
                "pushl (%esi);subl %ecx, %eax;movl %eax, (%esi);calll *;pushl $": 1,
                "movl (%esi), %edx;andl $, (%esi);movl %ecx, -(%ebp);movl (%ebp), %ecx;pushl %edi": 1,
                "movl %eax, -(%ebp);andl $, (%ebx);movl (%edi), %eax;andl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl (%edi), %eax;andl $, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%edi), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movzwl (%edi), %eax;pushl %eax;calll - <.text+>": 1,
                "movl %eax, (%ebx);movl -(%ebp), %ecx;movl -(%ebp), %edx;pushl -(%ebp);xorl %eax, %eax": 1,
                "pushl -(%ebp);xorl %esi, %esi;orl %edx, %eax;orl %esi, %ecx;movl -(%ebp), %esi": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movswl (%eax), %eax;pushl %eax;pushl $": 2,
                "orl %esi, %ecx;movl %eax, (%ebx);movl %ecx, (%ebx);jmp  <.text+>;movl $, %ecx": 1,
                "movl (%edi), %eax;movl %eax, -(%ebp);movl (%edi), %eax;movl %eax, (%ebx);jmp  <.text+>": 1,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "jmp  <.text+>;movl (%edx), %eax;movl (%eax), %ecx;cmpb $, (%ecx);je  <.text+>": 1,
                "orw $, %ax;jmp  <.text+>;movl -(%ebp), %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <.text+>;movl -(%ebp), %esi;leal -(%ebp), %eax;pushl %eax;pushl (%ebx)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebx);pushl (%esi);pushl -(%ebp)": 1,
                "cmpl $, %eax;jne  <.text+>;leal (%ebx), %esi;cmpl $, (%esi);jne  <.text+>": 1,
                "testl %eax, %eax;popl %ecx;movl %eax, (%esi);je  <.text+>;movl $, -(%ebp)": 1,
                "popl %ecx;je - <.text+>;leal (%ebx), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "cmpw $, (%ebx);je  <.text+>;movl (%ebx), %eax;subl (%ebx), %eax;cmpl %eax, %edx": 1,
                "jae  <.text+>;movl %edx, %eax;movl -(%ebp), %edx;movl -(%ebp), %esi;movl %eax, (%edx)": 1,
                "movl %eax, (%edx);movl (%ebx), %edi;addl (%ebx), %edi;movl %eax, %ecx;shrl $, %ecx": 1,
                "andl $, (%ebx);andw $, (%ebx);popl %ecx;calll *;pushl %eax": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%eax), %eax;addl %eax, (%ebx);movl (%ebx), %eax;adcl $, (%ebx)": 1,
                "cmpl -(%ebp), %eax;jne  <.text+>;movl (%ebx), %edi;xorl %eax, %eax;xorl %esi, %esi": 1,
                "addl %edx, %ecx;leal (%esi,%ecx), %esi;addl $, %ecx;cmpl -(%ebp), %esi;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);jl - <.text+>;movl -(%ebp), %edi;movl , %esi;xorl %ecx, %ecx": 1,
                "movl %edi, -(%ebp);movl %ecx, -(%ebp);movl (%eax), %eax;movswl (%eax), %eax;pushl %eax": 1,
                "leal (%ebx), %eax;pushl %eax;movl -(%ebp), %eax;movl (%eax), %eax;movl %ecx, -(%ebp)": 1,
                "addl $, (%eax);addl $, -(%ebp);subl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp)": 1,
                "movl (%eax), %eax;addl %eax, (%ebx);adcl %esi, (%ebx);movw -(%ebp), %ax;jmp  <.text+>": 1,
                "movl $, %ebx;jmp  <.text+>;movb (%ecx), %al;testb %al, %al;jbe  <.text+>": 1,
                "je  <.text+>;movl (%ebp), %eax;pushl %edx;pushl (%ebp);movl $, (%eax)": 1,
                "cmpb $, (%edi);movl %eax, (%ebp);jne  <.text+>;movl (%edi), %eax;movl (%eax), %ecx": 1,
                "je  <.text+>;orw $, %ax;jmp  <.text+>;movl , %edi;pushl $": 1,
                "jmp  <.text+>;movl , %edi;pushl $;pushl $;pushl (%ebp)": 1,
                "jne  <.text+>;addl $, (%ebp);pushl (%ebp);pushl $;pushl (%ebp)": 2,
                "movl (%eax), %edx;movl (%eax), %eax;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "movw %di, (%ecx);movw %di, (%ecx);movl (%edx), %edx;movswl (%edx), %edx;movl %edx, (%ecx)": 1,
                "movl (%edx), %esi;pushl %ebx;xorl %ebx, %ebx;movw (%esi), %bx;movl %edi, (%ecx)": 1,
                "cmpl -(%ebp), %esi;jb - <.text+>;movl -(%ebp), %esi;jmp  <.text+>;xorl %edx, %edx": 1,
                "movl $, (%esi);xorl %esi, %esi;cmpw %si, (%eax);je  <.text+>;movl $, (%ecx)": 1,
                "movl (%esi), %edx;xorl %eax, %eax;xorl %ebx, %ebx;orl %edx, %eax;orl %ebx, %ecx": 1,
                "movl %eax, (%edi);movl %ecx, (%edi);testb $, (%esi);je  <.text+>;movw $, (%esi)": 1,
                "cmpl $, (%esi);jbe  <.text+>;movw (%esi), %ax;addw $, %ax;movzwl %ax, %eax": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;movl %edi, -(%ebp);cmpw %di, (%ebx)": 1,
                "cmpw $, (%esi);jne  <.text+>;pushl $;pushl (%esi);calll *%edi": 1,
                "calll *%edi;cmpl %ebx, %eax;je - <.text+>;xorl %eax, %eax;cmpw %ax, (%esi)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "movl %edi, (%eax);movl $, (%ecx);movl (%ebp), %ecx;movl %edi, (%ecx);movl (%ebp), %ecx": 1,
                "movl $, (%ecx);movl (%ebp), %ecx;movl %edi, (%ecx);movl (%ebp), %ecx;movl (%ecx), %esi": 1,
                "jne  <.text+>;pushl %edi;pushl $;pushl %edi;pushl %edi": 1,
                "pushl %edi;pushl $;pushl %edi;pushl %edi;movl %eax, (%ebx)": 1,
                "jmp  <.text+>;movl (%ebp), %eax;movl $, (%eax);movw %di, (%eax);movw $, (%eax)": 1,
                "movl %edi, (%eax);movl (%ebx), %eax;movl %eax, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movl %edi, (%esi);movl %edi, (%esi);jmp  <.text+>;cmpl %edi, %edx;movl %edi, (%ebp)": 1,
                "leave;retl $;movl -(%ebp), %esi;xorl %edi, %edi;movl (%esi), %ecx": 1,
                "movl (%esi), %ecx;cmpl (%esi), %ecx;jne  <.text+>;movl (%esi), %ecx;cmpl (%esi), %ecx": 2,
                "je - <.text+>;jmp  <.text+>;movl %edi, (%ebx);movl (%ebx), %eax;movl %eax, (%esi)": 1,
                "cmpl %edx, %ecx;movl %ecx, (%eax);jbe  <.text+>;movl %edx, (%eax);movl (%eax), %ecx": 1,
                "movl %eax, -(%ebp);addl %ecx, (%esi);movl (%esi), %ecx;adcl %eax, (%esi);cmpl (%esi), %ecx": 1,
                "popl %ecx;pushl %edi;movl %edi, (%esi);cmpb $, (%eax);pushl %eax": 1,
                "calll - <.text+>;movl (%ebp), %ecx;movl (%ebp), %edx;movl %ecx, (%edx);movl %edi, (%esi)": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;andl $, -(%ebp);pushl %ebx": 1,
                "pushl %esi;movl (%ebp), %esi;movl $, (%edx);cmpl $, (%ebx);movl (%esi), %ecx": 1,
                "jne  <.text+>;movw (%ebx), %ax;addw $, %ax;movzwl %ax, %eax;cmpl %eax, %ecx": 1,
                "jl  <.text+>;movw (%ebx), %ax;addw $, %ax;movzwl %ax, %eax;addl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebp);leal (%ebx), %eax;pushl %eax;pushl $": 1,
                "movl %eax, (%ebp);leal (%ebx), %eax;pushl %eax;pushl $;xorl %edi, %edi": 1,
                "pushl %eax;pushl $;xorl %edi, %edi;pushl %edi;leal (%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl (%ebp);pushl (%ebp);pushl (%ebx)": 1,
                "movl %edi, -(%ebp);jmp  <.text+>;movl , %edi;calll *%edi;movl (%ebp), %eax": 1,
                "jmp  <.text+>;movl (%ebp), %ecx;movl (%ebp), %edi;movl %ecx, %edx;shrl $, %ecx": 1,
                "rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);movl %edx, %eax": 1,
                "movl (%edi), %esi;movl (%edi), %eax;xorl %ebx, %ebx;cmpw %bx, (%esi);jne  <.text+>": 1,
                "xorl %ebx, %ebx;cmpw %bx, (%esi);jne  <.text+>;cmpl %ebx, (%edx);jne  <.text+>": 1,
                "jmp  <.text+>;cmpw %bx, (%eax);je  <.text+>;movl %ebx, (%edx);movl $, %ebx": 1,
                "xorl %eax, %eax;incl %eax;jmp  <.text+>;movzbl (%eax), %ecx;decl %ecx": 1,
                "movl %edi, %eax;calll - <.text+>;jmp - <.text+>;movl (%edi), %eax;incl (%eax)": 1,
                "pushl (%ebp);pushl %edx;pushl (%ebp);pushl %edi;calll  <.text+>": 1,
                "jmp  <.text+>;movl $, %ebx;movswl %bx, %eax;cmpl $, %eax;jl  <.text+>": 1,
                "jmp  <.text+>;andl $, (%ebp);movl (%edi), %esi;calll *;cmpb $, (%esi)": 1,
                "xorl %ecx, %ecx;movl (%edi), %eax;pushl $;pushl $;leal (%ebp), %edx": 1,
                "pushl (%ebp);pushl $;pushl (%ebp);pushl $;pushl (%edi)": 1,
                "pushl $;pushl (%ebp);pushl $;pushl (%edi);calll - <.text+>": 1,
                "pushl (%ebp);pushl $;pushl (%edi);calll - <.text+>;pushl (%edi)": 1,
                "pushl $;pushl (%edi);calll - <.text+>;pushl (%edi);calll - <.text+>": 1,
                "pushl (%edi);calll - <.text+>;pushl (%edi);calll - <.text+>;xorl %eax, %eax": 1,
                "cmpb $, %al;ja  <.text+>;movl (%ebp), %edi;movl (%edi), %eax;movl (%esi), %edx": 1,
                "je  <.text+>;movl (%ebp), %ecx;xorl %eax, %eax;movl %ecx, (%edi);addl %ecx, (%esi)": 1,
                "movl (%ebp), %eax;andl $, (%eax);movl $, %eax;movl (%ebp), %ecx;cmpw $, (%ecx)": 1,
                "movl %ecx, %ebx;movl (%ebx), %ecx;pushl %esi;pushl %edi;movl %eax, -(%ebp)": 1,
                "pushl %esi;pushl %edi;movl %eax, -(%ebp);movl (%ebx), %eax;movl %edx, %esi": 1,
                "movl (%esi), %eax;movw %cx, (%esi);movl %ecx, (%esi);movl (%eax), %eax;pushl $": 1,
                "negl %eax;sbbl %eax, %eax;andl $, %eax;addl $, %eax;cmpl $, ": 1,
                "sbbl %eax, %eax;andl $, %eax;addl $, %eax;cmpl $, ;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;movl %eax, ;je  <.text+>;cmpl %ebx, %eax;ja  <.text+>": 1,
                "cmpl %ebx, %eax;ja  <.text+>;pushl $;pushl $;calll *%edi": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;je  <.text+>;addl $-, %eax": 1,
                "jmp  <.text+>;andl $, ;pushl $;pushl -(%ebp);calll *": 1,
                "pushl %eax;pushl $;calll *;pushl -(%ebp);leal -(%ebp), %eax": 2,
                "pushl $;pushl %eax;calll *%edi;pushl $;pushl -(%ebp)": 2,
                "testl %ecx, %ecx;je  <.text+>;testl %eax, %eax;je  <.text+>;addl $-, %eax": 1,
                "movl , %edi;je  <.text+>;orl $-, (%esi);pushl $;calll *": 1,
                "pushl %eax;calll - <.text+>;cmpl $-, (%esi);jne  <.text+>;cmpw $, %ax": 2,
                "movl %eax, %ebx;pushl %ebx;calll - <.text+>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpl $-, (%esi);je  <.text+>;movl -(%ebp), %edi;pushl %edi;pushl -(%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;pushl %ebx;xorl %ecx, %ecx;cmpw %cx, (%eax)": 1,
                "pushl %edi;movl %ecx, -(%ebp);movl %ecx, -(%ebp);movl %eax, -(%ebp);je  <.text+>": 1,
                "pushl $;pushl %ebx;calll *%esi;cmpw $, ;jne  <.text+>": 1,
                "pushl $;pushl %ebx;calll *%esi;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %eax;movw $, (%eax);cmpw $, ;jne  <.text+>;pushl %edi": 2,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);movl (%ebp), %eax;movl (%eax), %eax;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl (%eax), %eax;pushl $;pushl (%eax);calll *": 1,
                "movl %eax, %ebx;movl (%edi), %eax;movl (%eax), %eax;negl %ebx;sbbl %ebx, %ebx": 1,
                "jne  <.text+>;movl $, %esi;pushl %esi;calll *;popl %ecx": 1,
                "pushl %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;pushl -(%ebp)": 1,
                "testb $, %al;je  <.text+>;movl (%ebp), %eax;movl (%eax), %ecx;movl (%ecx), %ecx": 1,
                "movl -(%ebp), %ecx;movswl %di, %edi;addl $, %esp;leal (%ecx,%eax,), %eax;shll %edi": 1,
                "calll *;testl %eax, %eax;jne  <.text+>;calll *;andl $, -(%ebp)": 1,
                "jne  <.text+>;pushl $;pushl $;pushl (%ebp);calll - <.text+>": 1,
                "pushl $;pushl $;pushl (%ebp);calll - <.text+>;testw %ax, %ax": 2,
                "pushl $;pushl (%ebp);calll - <.text+>;testw %ax, %ax;movl %eax, -(%ebp)": 1,
                "testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "movl %eax, -(%ebp);jne  <.text+>;movl (%ebp), %eax;movl (%eax), %eax;movl (%eax), %edi": 1,
                "je  <.text+>;movl -(%ebp), %eax;movw $, (%eax);movl (%ebp), %eax;testl %ecx, (%eax)": 1,
                "movl (%ebp), %eax;testl %ecx, (%eax);je  <.text+>;testb $, (%eax);jne  <.text+>": 1,
                "jne  <.text+>;pushl -(%ebp);calll *;jmp  <.text+>;testb $, (%eax)": 1,
                "calll *;pushl (%ebp);calll - <.text+>;xorl %edi, %edi;cmpw %di, -(%ebp)": 1,
                "pushl (%ebp);calll - <.text+>;testw %ax, %ax;je  <.text+>;orw $, %ax": 1,
                "movw $, (%ebx);movl $, %ecx;testl %ecx, (%esi);je  <.text+>;cmpb $, (%esi)": 1,
                "je  <.text+>;cmpb $, (%esi);jne  <.text+>;movw $, (%ebx);jmp  <.text+>": 1,
                "movw $, (%ebx);jmp  <.text+>;cmpb $, (%esi);jne  <.text+>;andw $, (%ebx)": 1,
                "jmp  <.text+>;cmpw $, (%esi);je  <.text+>;movl (%esi), %eax;testl %eax, %eax": 1,
                "shlw $, %ax;sarw $, %ax;movw %ax, (%ebx);cmpb $, (%esi);jne  <.text+>": 1,
                "pushl $;pushl $;pushl %edi;calll - <.text+>;movl (%esi), %eax": 2,
                "pushl $;pushl %edi;calll - <.text+>;movl (%esi), %eax;pushl (%eax)": 2,
                "pushl %eax;pushl $;addl $, %ebx;pushl %ebx;calll *": 2,
                "movl %ecx, (%ebx);calll *;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl (%esi), %eax;pushl (%eax);pushl %edi;calll - <.text+>;movl (%edi), %ecx": 1,
                "jne - <.text+>;jmp  <.text+>;movl (%esi), %eax;pushl $;pushl (%eax)": 1,
                "popl %ecx;movl %eax, -(%ebp);je  <.text+>;pushl (%edi);calll *": 1,
                "movl -(%ebp), %edx;popl %ecx;movl (%esi), %ecx;subl (%ecx), %edx;sarl %edx": 1,
                "addl $, %eax;pushl %eax;addl $, %ebx;pushl %ebx;calll *": 1,
                "movl %eax, (%ebx);pushl %esi;movl (%edx), %esi;pushl %edi;movl (%eax), %edi": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%eax), %eax;movl (%eax), %eax;movswl (%eax), %eax": 1,
                "leal (%eax,%eax), %eax;movw %ax, (%ecx);popl %edi;movw $, (%ebx);xorw %ax, %ax": 2,
                "pushl %eax;pushl (%ebp);calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "jmp  <.text+>;movl (%ebx), %edx;movl %eax, (%ebx);movswl (%edx), %ecx;pushl %esi": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "jl - <.text+>;popl %ebx;andw $, (%ecx,%edx,);addl $, %edi;pushl %edi": 1,
                "movl (%esi), %ecx;cmpw %di, (%ecx);jne  <.text+>;movl $, %edi;jmp  <.text+>": 1,
                "movb $, (%esi);movb %bl, (%esi);movzbl (%esi), %eax;decl %eax;je  <.text+>": 1,
                "movl %ebx, (%esi);movl %ebx, (%esi);movl %ebx, (%esi);movl %ebx, (%esi);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movw -(%ebp), %ax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "movl %edi, (%esi);movl %edi, (%esi);movw %di, (%esi);movl %edi, (%esi);movl %edi, (%esi)": 1,
                "pushl %esi;calll *%edi;andl $, (%ebx);popl %ecx;popl %edi": 1,
                "movl (%edi), %eax;movw (%eax), %ax;xorl %ebx, %ebx;testb $, (%edi);movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);movw %ax, -(%ebp);jne  <.text+>;leal (%esi), %eax;pushl %eax": 1,
                "je  <.text+>;movl (%edi), %eax;cmpw $, (%eax);je  <.text+>;pushl %ebx": 1,
                "movw %bx, (%eax);pushl %esi;pushl (%edi);pushl %edi;calll  <.text+>": 1,
                "cmpw $, %ax;je - <.text+>;jmp - <.text+>;calll - <.text+>;leal -(%ebp), %eax": 1,
                "cmpw $, %ax;je - <.text+>;cmpw %bx, -(%ebp);je  <.text+>;movw $, %ax": 1,
                "incl %eax;andl %eax, %edx;xorl %ebx, %ebx;cmpw %bx, %dx;jne  <.text+>": 1,
                "cmpw $, (%ebp);movl (%ebp), %ecx;movw %bx, (%esi);movw %bx, (%esi);movw %bx, (%esi)": 1,
                "jmp  <.text+>;pushl $;popl %eax;cmpb %bl, (%esi);jne  <.text+>": 1,
                "jne  <.text+>;incl %eax;movw %bx, (%esi);jmp  <.text+>;andb $-, (%edi)": 1,
                "movw (%edi), %cx;testb $, %cl;movl $, -(%ebp);je  <.text+>;andw $, %cx": 1,
                "cmpb %bl, (%esi);pushl $;popl %eax;jne - <.text+>;pushl $": 1,
                "popl %eax;jne - <.text+>;pushl $;popl %eax;jmp - <.text+>": 1,
                "pushl -(%ebp);pushl %eax;pushl %edi;calll - <.text+>;cmpw $, %ax": 1,
                "movw $, (%esi);movw (%ebp), %ax;popl %edi;popl %esi;popl %ebx": 1,
                "jmp  <.text+>;pushl %edi;leal (%esi), %eax;pushl %eax;xorl %edi, %edi": 1,
                "leal (%esi), %eax;pushl %eax;xorl %edi, %edi;pushl %esi;incl %edi": 1,
                "calll  <.text+>;cmpw %bx, (%esi);movw %bx, (%esi);movw %bx, (%esi);movw %bx, (%esi)": 1,
                "movw %bx, (%esi);movl %ebx, (%esi);movl %ebx, (%esi);movw %bx, (%esi);je  <.text+>": 1,
                "incl (%eax);popl %edi;popl %ebx;movl -(%ebp), %ecx;movw -(%ebp), %ax": 1,
                "movl (%ebp), %eax;movw $, (%eax);jmp  <.text+>;cmpw %di, (%esi);je  <.text+>": 2,
                "cmpw %di, (%esi);je  <.text+>;pushl (%esi);pushl (%ebp);calll - <.text+>": 1,
                "je  <.text+>;pushl (%esi);pushl (%ebp);calll - <.text+>;movw %di, (%esi)": 1,
                "jmp  <.text+>;calll  <.text+>;movl %eax, %edi;movw %di, %ax;popl %edi": 1,
                "xorl %eax, %eax;cmpw %bx, (%ecx);je  <.text+>;leal (%esi), %eax;cmpw %bx, (%eax)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;pushl %esi": 1,
                "pushl %edi;addl %eax, %esi;leal (%ecx), %edx;movl %edx, %edi;movsl (%esi), %es:(%edi)": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;movl (%eax), %eax;pushl %esi": 1,
                "pushl %esi;calll - <.text+>;cmpw %di, %ax;je - <.text+>;cmpw $, -(%ebp)": 5,
                "je  <.text+>;movw $, %ax;jmp  <.text+>;xorl %edi, %edi;incl %edi": 1,
                "cmpw %di, %ax;je - <.text+>;cmpw $, -(%ebp);jne - <.text+>;pushl %edi": 1,
                "movl (%ebx), %eax;andl $, (%ebx);movl %eax, (%ebx);movl -(%ebp), %eax;pushl (%eax)": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;addl %eax, (%ebx);movl -(%ebp), %eax;addl %eax, (%ebx)": 1,
                "calll - <.text+>;cmpw $, %ax;je - <.text+>;jmp  <.text+>;pushl %esi": 1,
                "addl %esi, %ecx;cmpl (%ebp), %ecx;pushl %edi;movl $, %edx;jge  <.text+>": 1,
                "movl %edx, %edi;cmpl (%edi), %ebx;jne  <.text+>;addl $, %ecx;movl %ecx, (%eax)": 1,
                "popl %ecx;rep  movsl (%esi), %es:(%edi);movl (%eax), %eax;leal (%eax), %esi;movl (%esi), %eax": 1,
                "pushl $;popl %ecx;rep  movsl (%esi), %es:(%edi);movw $, (%eax);jmp  <.text+>": 1,
                "sbbl $-, %eax;xorl %edx, %edx;cmpl %edx, %eax;je  <.text+>;movl %edx, -(%ebp)": 1,
                "jne  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl -(%ebp), %eax;movw $, (%ebx)": 1,
                "pushl %eax;leal (%ebx), %edi;pushl %edi;pushl (%ebx);movl %ebx, %eax": 1,
                "movw %ax, (%ebx);leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "pushl $;pushl -(%ebp);calll - <.text+>;movl -(%ebp), %ecx;leal -(%ebp), %eax": 1,
                "movw %di, -(%ebp);movw %di, -(%ebp);movw %di, -(%ebp);movb (%ebx), %al;negb %al": 1,
                "andl $, %eax;orl %eax, -(%ebp);cmpw %di, -(%ebp);je  <.text+>;leal (%ebx), %esi": 1,
                "leal -(%ebp,%edx,), %eax;cmpw $, (%eax);jne  <.text+>;decl %edx;movw %cx, (%eax)": 1,
                "pushl %ecx;calll *;leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "movl %esi, -(%ebp);movw %di, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movw %di, -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <.text+>;pushl $;popl %ecx;leal (%ebx), %esi": 1,
                "calll *;leal -(%ebp), %eax;pushl %eax;calll *;incl %eax": 1,
                "calll  <.text+>;cmpw %di, %ax;movl %eax, -(%ebp);jne  <.text+>;leal -(%ebp), %ecx": 1,
                "jne  <.text+>;leal -(%ebp), %ecx;movl %ecx, -(%ebp);cmpw %di, %ax;jne  <.text+>": 1,
                "andl $, %edx;movl %eax, %ebx;shll %edx;andl $, %ebx;orl %ebx, %edx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %ecx;pushl %ebx;pushl %esi": 1,
                "xorl %ebx, %ebx;leal (%esi), %eax;movl %ebx, -(%ebp);cmpw %bx, (%eax);pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;pushl %esi;je  <.text+>": 1,
                "shll $, %ecx;orl %eax, %ecx;xorl %eax, %eax;shll $, %ecx;movl %ecx, -(%ebp)": 1,
                "xorl %eax, %eax;shll $, %ecx;movl %ecx, -(%ebp);cmpw %bx, (%esi);setne %al": 1,
                "je  <.text+>;movw %bx, (%eax);jmp  <.text+>;movb %bl, (%eax);movl (%esi), %eax": 1,
                "pushl %edx;movw %di, -(%ebp);movl (%eax), %ecx;pushl %eax;calll *(%ecx)": 1,
                "pushl %esi;pushl %edi;pushl $;movl $, %eax;popl %ecx": 1,
                "testw %ax, %ax;je  <.text+>;movl $, %eax;jmp - <.text+>;calll - <.text+>": 1,
                "movswl %ax, %ebx;testl %ebx, %ebx;je  <.text+>;pushl $;pushl $": 1,
                "pushl %esi;calll - <.text+>;jmp  <.text+>;pushl $;pushl $": 1,
                "movl %esi, -(%ebp);cmpw $, -(%ebp);jne  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpw $, -(%ebp);jne  <.text+>;pushl %edi;calll  <.text+>;movswl %ax, %esi": 1,
                "testl %esi, %esi;jne  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "calll  <.text+>;jmp  <.text+>;pushl %edi;calll  <.text+>;movswl %ax, %esi": 1,
                "jmp - <.text+>;pushl $;popl %esi;pushl $;pushl $": 1,
                "movl (%ebp), %ecx;pushl %ebx;pushl %ebx;pushl %ebx;pushl %ebx": 1,
                "movl (%ebp), %eax;jmp - <.text+>;xorl %eax, %eax;jmp - <.text+>;int": 1,
                "pushl %ebx;movl (%eax), %ebx;pushl %esi;pushl %edi;pushl $": 1,
                "xorl %edi, %edi;calll *;cmpl %edi, %eax;popl %ecx;popl %ecx": 1,
                "popl %ecx;je  <.text+>;pushl %edi;pushl $;pushl (%ebp)": 1,
                "cmpl $, %eax;popl %ecx;popl %ecx;je  <.text+>;cmpl $, %eax": 1,
                "je  <.text+>;cmpw (%ebp), %ax;je  <.text+>;leal (%esi), %eax;pushl %eax": 1,
                "calll - <.text+>;pushl -(%ebp);pushl (%ebp);movl (%ebp), %eax;calll - <.text+>": 1,
                "pushl (%ebp);pushl (%ebp);pushl %ebx;calll - <.text+>;pushl (%ebp)": 1,
                "movl -(%ebp), %ebx;testl %ebx, %ebx;popl %ecx;popl %ecx;je  <.text+>": 1,
                "addl $, %esp;movl %edi, %eax;jmp  <.text+>;xorl %eax, %eax;popl %edi": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx;movl (%ebx), %edx;andl $, -(%ebp)": 1,
                "movl (%ebp), %esi;movl (%esi), %ebx;movl (%ebx), %edx;andl $, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl (%esi), %edx;movl %edx, -(%ebp);pushl %edi;movl (%ebp), %edi;movl (%edi), %edx": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;andl $, (%ebx);andl $, (%ebx);movl %ecx, (%ebx)": 1,
                "jbe  <.text+>;movw (%ecx), %cx;addw $, %cx;movzwl %cx, %ecx;movl %ecx, (%eax)": 1,
                "movl %ecx, (%eax);jmp - <.text+>;movw (%ecx), %ax;addw $, %ax;movzwl %ax, %eax": 1,
                "pushl %edi;pushl $;pushl -(%ebp);calll *;cmpl $-, %eax": 1,
                "calll - <.text+>;jmp  <.text+>;cmpl $, %eax;jne  <.text+>;movl -(%ebp), %eax": 1,
                "jne  <.text+>;movl -(%ebp), %eax;movl $, (%eax);movw $, (%eax);movl %esi, %edx": 1,
                "movl -(%ebp), %edi;pushl %eax;pushl %edi;calll - <.text+>;movl %eax, %esi": 1,
                "je  <.text+>;pushl -(%ebp);calll *;popl %ecx;xorl %edi, %edi": 1,
                "popl %ecx;xorl %edi, %edi;movl -(%ebp), %eax;movl (%eax), %eax;subl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;subl %eax, -(%ebp);addl %eax, -(%ebp);cmpw %di, -(%ebp)": 1,
                "andl $, (%edi);andl $, (%edi);movl (%esi), %ecx;testl %ecx, %ecx;movl %eax, -(%ebp)": 1,
                "movl (%esi), %eax;xorl %edx, %edx;movw (%ecx,%eax,), %dx;testw %dx, %dx;movl %edx, -(%ebp)": 1,
                "xorl %edx, %edx;movw (%ecx,%eax,), %dx;testw %dx, %dx;movl %edx, -(%ebp);je  <.text+>": 1,
                "movl %edx, -(%ebp);je  <.text+>;incl %eax;movl %eax, (%esi);leal (%ecx,%eax,), %eax": 1,
                "xorl %ecx, %ecx;orl %edx, %ecx;movl %ecx, (%ebx);movl (%edi), %eax;addl $, %eax": 1,
                "orl %edx, %ecx;movl %ecx, (%ebx);movl (%edi), %eax;addl $, %eax;addl %eax, (%ebx)": 1,
                "movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi);xorw %ax, %ax;jmp  <.text+>": 1,
                "movl (%ebx), %eax;movl %eax, (%edi);xorw %ax, %ax;jmp  <.text+>;pushl %eax": 1,
                "pushl %edi;movl %esi, -(%ebp);jne  <.text+>;movl , %ecx;movl %ecx, -(%ebp)": 1,
                "movl (%ebp), %edi;subl %eax, (%ebp);movl %eax, %ecx;movl %edx, %esi;movl %ecx, %edx": 1,
                "cmpl $, %eax;jne  <.text+>;movl %esi, (%ebp);xorl %eax, %eax;cmpl %esi, %eax": 1,
                "cmpw %si, %ax;movw %ax, (%ebx);je  <.text+>;movl (%ebx), %eax;pushl (%eax)": 1,
                "calll - <.text+>;movw -(%ebp), %ax;jmp  <.text+>;movw $, %ax;popl %edi": 1,
                "movb %dl, (%ecx);andl $, (%ebx);addl $, %esi;testb %al, %al;movl %edi, -(%ebp)": 1,
                "movw $, (%ebx);movl %edi, (%edx);movl -(%ebp), %edi;movl %eax, (%edx);testb $, (%edi)": 1,
                "andb $, %al;orb (%ecx), %al;andb $, %dl;andb $-, %al;shlb $, %dl": 1,
                "movl %eax, (%edx);movw (%esi), %ax;movw %ax, (%ecx);movzwl (%esi), %eax;leal (%esi,%eax), %esi": 1,
                "testb $, (%ecx);pushl %edi;movl %ecx, %esi;je  <.text+>;orb $, %dl": 1,
                "movl %edi, (%eax);movl (%esi), %ecx;subl %edx, %ecx;je  <.text+>;xorl %ecx, %ecx": 1,
                "movl %edx, (%eax);movl %ecx, (%eax);jmp  <.text+>;movw %di, (%eax);movl %edi, (%eax)": 1,
                "jne  <.text+>;movl $, %esi;movl (%ebp), %eax;cmpl %eax, %esi;jae  <.text+>": 1,
                "movl $, (%ebp);jmp  <.text+>;pushl %esi;pushl %ecx;calll *": 1,
                "movl (%ebp), %eax;cmpl $-, %eax;pushl %esi;je  <.text+>;movl (%ebp), %ecx": 1,
                "movw %dx, -(%ebp);je  <.text+>;testl %eax, %eax;je  <.text+>;pushl %edi": 1,
                "xorl %edx, %edx;pushl $;popl %edi;divl %edi;pushl $": 1,
                "jne  <.text+>;movl %esi, %ebx;movzwl %bx, %eax;cmpl %eax, %edi;jae - <.text+>": 1,
                "movw %di, (%ecx);movw %ax, (%ecx);movw $, (%ecx);movw $, (%ecx);popl %edi": 1,
                "popl %ecx;movl (%ebp), %edi;cmpw $, (%edi);je  <.text+>;movl (%ebp), %esi": 1,
                "pushl %ecx;andl $, -(%ebp);pushl %ebx;movl , %ebx;pushl %esi": 1,
                "jne  <.text+>;andl %eax, (%esi);movl $, -(%ebp);jmp  <.text+>;movl %edi, (%esi)": 3,
                "jmp  <.text+>;movl %edi, (%esi);xorl %eax, %eax;cmpl %eax, (%esi);jne  <.text+>": 2,
                "cmpl $, %eax;jne  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl (%ebx), %ecx": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl (%ebx), %ecx;pushl %esi;movl (%ebp), %esi": 1,
                "testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>;movl (%ebx), %eax;movl (%ebx), %edx": 1,
                "movl (%ebx), %ecx;pushl %esi;pushl %edi;jle  <.text+>;leal (%ebx,%edx,), %esi": 1,
                "decl (%ebp);rep  movsb (%esi), %es:(%edi);jne - <.text+>;movl -(%ebp), %ecx;movl (%ebx,%ecx,), %eax": 1,
                "movl (%ebp), %esi;addl %edx, %eax;movl (%ebp), %edx;movl %eax, (%esi);addl $, %eax": 1,
                "movl (%ebx), %eax;decl %ecx;subl $, %eax;addl %eax, (%ebx);movl (%ebx), %eax": 1,
                "subl $, %eax;addl %eax, (%ebx);movl (%ebx), %eax;movl %ecx, (%ebx);movl (%esi), %ecx": 1,
                "cmpw $, (%ebx);je  <.text+>;leal (%ebx), %eax;movl (%eax), %ecx;movl %eax, -(%ebp)": 1,
                "leal (%ebx), %eax;movl (%eax), %ecx;movl %eax, -(%ebp);movl (%esi), %eax;movzwl (%eax), %eax": 1,
                "movl (%eax), %ecx;movl %eax, -(%ebp);movl (%esi), %eax;movzwl (%eax), %eax;cmpl $, %eax": 1,
                "movzwl (%eax), %eax;cmpl $, %eax;movl %ecx, %edi;movl %edi, (%ebp);jle  <.text+>": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl (%eax), %eax;movzwl (%eax), %eax;movl (%ebp), %ecx;shrl %eax;andw $, (%ecx,%eax,)": 1,
                "pushl %edx;calll - <.text+>;testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>": 2,
                "subl $, %esp;movl (%ebp), %eax;andl $, (%ebp);pushl %esi;movl (%eax), %esi": 1,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "je  <.text+>;movl $, -(%ebp);jmp  <.text+>;movzwl (%esi), %eax;cmpl $, %eax": 1,
                "jbe  <.text+>;pushl %eax;pushl %ecx;pushl %edx;calll - <.text+>": 1,
                "testw %ax, %ax;movl %eax, -(%ebp);jne  <.text+>;movzwl (%esi), %ecx;movl -(%ebp), %esi": 1,
                "jne  <.text+>;movzwl (%esi), %ecx;movl -(%ebp), %esi;movl (%ebp), %edi;movl %ecx, %eax": 1,
                "movl %edx, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movl (%ebp), %ecx;subl (%eax), %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;pushl %edx;andl $, %ecx;pushl %eax": 1,
                "calll - <.text+>;leave;retl $;movl (%ebp), %ecx;leal (%edi), %eax": 1,
                "movl (%edi), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "cmpl %esi, -(%ebp);movw %ax, (%ebx);jb - <.text+>;movl %esi, %ecx;movl (%ebx), %esi": 1,
                "movl (%ebx), %ecx;movl (%eax), %esi;addl (%eax), %esi;movl (%ebx), %edi;movl %ecx, %edx": 2,
                "movl (%ebx), %edi;movl (%ebx), %ecx;movl %edi, -(%ebp);movl %ecx, -(%ebp);je  <.text+>": 1,
                "calll *%esi;addl $, %esp;cmpl $, %eax;je  <.text+>;movl $, (%ebp)": 1,
                "pushl $;pushl %eax;calll *%esi;movzbl (%ebx), %ecx;addl $, %esp": 1,
                "movl -(%ebp), %edi;movl %eax, (%ebp);xorl %ecx, %ecx;cmpw %cx, (%ebp);jne  <.text+>": 1,
                "addl $, %edi;movl %eax, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp);jmp - <.text+>": 1,
                "movl %eax, -(%ebp);jne  <.text+>;cmpl %eax, (%esi);jae  <.text+>;movl (%ebp), %ecx": 1,
                "jmp - <.text+>;cmpl $, (%edi);je  <.text+>;pushl $;addl $, %edi": 1,
                "addl $, %edi;pushl %esi;movl %edi, -(%ebp);calll - <.text+>;cmpl $, (%edi)": 1,
                "retl $;subl (%esi), %edi;subl (%esi), %edi;movl -(%ebp), %eax;movl (%ebp), %edx": 1,
                "movw $, (%edx);testb $, (%eax);je  <.text+>;movw $, (%ebx);testb $, (%eax)": 1,
                "rep  movsb (%esi), %es:(%edi);pushl (%ebx);pushl %eax;calll - <.text+>;movl (%ebx), %edx": 1,
                "movl %edx, -(%ebp);je  <.text+>;addl $, %esi;cmpl %eax, %edx;movl %esi, -(%ebp)": 1,
                "subl $, %ecx;movl %esi, -(%ebp);addl $, %esi;movl %ecx, -(%ebp);movl %esi, -(%ebp)": 2,
                "incl %esi;cmpl $, %edx;movl %ecx, -(%ebp);movl %esi, -(%ebp);jne  <.text+>": 1,
                "addl (%edi), %esi;movl %eax, -(%ebp);xorl %eax, %eax;movl %esi, -(%ebp);incl %eax": 1,
                "jne  <.text+>;movl -(%ebp), %ecx;subl %edx, %ecx;je  <.text+>;decl %ecx": 1,
                "jne  <.text+>;movl -(%ebp), %ecx;addl %ecx, (%ebp);cmpw %dx, (%ebx);jne  <.text+>": 1,
                "addl %ecx, (%ebp);cmpw %dx, (%ebx);jne  <.text+>;movl (%ebp), %ecx;cmpl %ecx, (%edi)": 1,
                "jne  <.text+>;movzbl (%esi), %ecx;subl $, %ecx;movl %esi, -(%ebp);addl $, %esi": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);jmp - <.text+>;cmpw %dx, (%ebx);pushl $": 1,
                "pushl %ecx;movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;pushl %ebx": 1,
                "jmp - <.text+>;addl %ecx, %esi;movl %eax, -(%ebp);movl %esi, -(%ebp);cmpl $, -(%ebp)": 1,
                "je  <.text+>;movl (%ebp), %eax;movw $, (%eax);cmpw %dx, (%ebx);jne  <.text+>": 1,
                "pushl (%ebx);pushl %edi;calll - <.text+>;jmp - <.text+>;movw %dx, (%ebx)": 1,
                "movw $, (%esi);testb $, (%ecx);je  <.text+>;movw %ax, (%ebx);leal (%ebx), %ecx": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "subl $, %esp;movl , %eax;andl $, -(%ebp);andl $, -(%ebp);pushl %ebx": 1,
                "xorl %ebx, %ebx;movw (%eax), %bx;pushl %ebx;calll - <.text+>;testw %ax, %ax": 1,
                "xorl %ebx, %ebx;cmpw %bx, %cx;je  <.text+>;cmpw $, %cx;je  <.text+>": 1,
                "leal (%edi), %eax;pushl %eax;pushl $;pushl $;pushl %edi": 1,
                "calll - <.text+>;xorl %eax, %eax;movw (%ebx), %ax;movl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "xorl %eax, %eax;movw (%ebx), %ax;movl %eax, -(%ebp);movb (%ebx), %al;movb %al, -(%ebp)": 1,
                "movl (%esi), %ebx;addl (%esi), %ebx;calll - <.text+>;movzbl -(%ebp), %eax;movl (%ebx), %ecx": 1,
                "movzbl -(%ebp), %eax;movl (%ebx), %ecx;addl $, -(%ebp);movl %ecx, (%edi,%eax,);movzbl -(%ebp), %eax": 1,
                "testw %ax, %ax;movl %eax, -(%ebp);je  <.text+>;leal (%edi), %eax;pushl %eax": 1,
                "pushl %edi;pushl %edi;calll - <.text+>;movw -(%ebp), %ax;jmp - <.text+>": 1,
                "calll - <.text+>;addl %ebx, -(%ebp);movw -(%ebp), %ax;cmpw -(%ebp), %ax;jb - <.text+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *%ebx;addl $, %esp": 1,
                "movw (%eax), %di;orl $-, -(%ebp);orl $-, -(%ebp);orl $-, -(%ebp);xorl %eax, %eax": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movw $, (%ebx);pushl (%esi);movl %esi, -(%ebp)": 1,
                "movw %ax, -(%ebp);calll - <.text+>;testw %ax, %ax;je  <.text+>;movw $, %ax": 1,
                "pushl %edi;calll - <.text+>;cmpw $, %ax;je - <.text+>;movw -(%ebp), %cx": 1,
                "je  <.text+>;pushl (%ebx);movzwl -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "jne  <.text+>;movl -(%ebp), %eax;movl %eax, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi)": 1,
                "incl (%ebx);pushl %edi;pushl %edi;pushl (%ebx);calll *": 1,
                "calll - <.text+>;movw -(%ebp), %ax;jmp - <.text+>;int;int": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;movl (%esi), %ebx;pushl %edi;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%esi), %eax;pushl %eax;pushl $;pushl $": 1,
                "pushl -(%ebp);pushl $;pushl %edi;calll *;addl $, %esp": 2,
                "movw (%ebx), %ax;movw %ax, -(%ebp);xorl %edi, %edi;cmpb $, (%ebx);jne  <.text+>": 1,
                "incl %ecx;andl %ecx, %eax;movw %ax, -(%ebp);xorl %eax, %eax;movb (%ebx), %al": 1,
                "movw $, -(%ebp);jmp  <.text+>;movw %di, -(%ebp);movw %cx, -(%ebp);movb (%ebx), %al": 1,
                "jne  <.text+>;movw $, %di;pushl $;pushl $;pushl %esi": 1,
                "movw $, (%esi);movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %ecx;movl %ecx, -(%ebp)": 1,
                "movw (%ebx), %cx;movw %cx, -(%ebp);movl %edi, -(%ebp);movw %di, -(%ebp);movw (%ebx), %cx": 1,
                "movw %cx, -(%ebp);movw (%ebx), %cx;movw %cx, -(%ebp);movl %eax, -(%ebp);movw (%esi), %cx": 1,
                "calll - <.text+>;movw %ax, -(%ebp);movl -(%ebp), %eax;jmp  <.text+>;movw %di, -(%ebp)": 4,
                "movl -(%ebp), %eax;jmp  <.text+>;movw %di, -(%ebp);cmpb $, (%ebx);jne  <.text+>": 1,
                "movw (%ebx), %ax;movw %ax, -(%ebp);movzwl (%ebx), %eax;addl %ebx, %eax;movl %eax, -(%ebp)": 2,
                "addl %ebx, %eax;movl %eax, -(%ebp);movw (%ebx), %ax;movw %ax, -(%ebp);movl -(%ebp), %eax": 1,
                "movw %cx, -(%ebp);movzwl (%eax), %ecx;addl -(%ebp), %ecx;movl %ecx, -(%ebp);movw (%eax), %ax": 1,
                "movl -(%ebp), %ecx;movw %ax, -(%ebp);movl -(%ebp), %eax;jmp  <.text+>;movw %di, -(%ebp)": 1,
                "cmpb $, (%edi);movzwl %ax, %eax;jne  <.text+>;leal -(%eax,%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "jne  <.text+>;leal -(%eax,%ecx), %ecx;movl %ecx, -(%ebp);movb $, (%ecx);jmp  <.text+>": 1,
                "movzwl %ax, %eax;pushl %eax;pushl (%esi);pushl %ebx;calll *": 1,
                "jne  <.text+>;testb $, %bl;jne  <.text+>;movw $, %ax;jmp  <.text+>": 1,
                "movl %ecx, (%esi);xorw %ax, %ax;popl %edi;popl %esi;popl %ebx": 1,
                "movw $, (%ecx);jmp  <.text+>;movl (%ecx), %esi;movl $, %edx;cmpl (%edx), %esi": 1,
                "movl (%ebp), %edx;negl %ecx;sbbl %ecx, %ecx;andl $-, %ecx;addl $, %ecx": 1,
                "je  <.text+>;movl (%eax), %eax;movl $, %ecx;cmpl (%ecx), %eax;je  <.text+>": 1,
                "pushl %edi;calll - <.text+>;testw %ax, %ax;je - <.text+>;jmp  <.text+>": 1,
                "pushl %edi;calll - <.text+>;testw %ax, %ax;jne  <.text+>;movl (%edi), %esi": 1,
                "movzwl (%esi), %eax;addl %esi, %eax;movl %eax, (%edi);movw (%esi), %ax;subw %ax, (%edi)": 1,
                "leal (%esi), %eax;movl (%eax), %edx;movl %edx, -(%ebp);movb %cl, -(%ebp);orb $, -(%ebp)": 1,
                "orb $, -(%ebp);movzwl (%eax), %edx;addl %esi, %edx;pushl %ecx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movw (%eax), %dx;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <.text+>;movl -(%ebp), %ebx;leal (%esi), %eax;movl %eax, -(%ebp);cmpb $, %cl": 1,
                "leal -(%ebp), %eax;pushl %eax;movsb (%esi), %es:(%edi);calll - <.text+>;jmp  <.text+>": 1,
                "leal (%eax), %esi;movw %cx, -(%ebp);leal -(%ebp), %eax;movsl (%esi), %es:(%edi);pushl %eax": 1,
                "leal -(%ebp), %eax;movl %eax, %edi;pushl $;movl %ebx, %esi;pushl %eax": 1,
                "movsb (%esi), %es:(%edi);calll - <.text+>;leal -(%ebp), %eax;movl %eax, %edi;pushl $": 2,
                "calll *(%eax);xorw %ax, %ax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "movl (%ebp), %edi;movl (%edi), %esi;movl (%esi), %ebx;movl %eax, -(%ebp);xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);movw (%ebx), %ax;movw %ax, -(%ebp);xorl %eax, %eax;movb (%ebx), %al": 1,
                "movl %eax, -(%ebp);movzbw (%ebx), %ax;movw %ax, -(%ebp);cmpb $, (%esi);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;cmpb $, (%esi);pushl $;leal -(%ebp), %edi": 1,
                "subl $, %esp;movl , %ecx;testl %ecx, %ecx;movl , %eax;pushl %ebx": 1,
                "movl %eax, -(%ebp);jne  <.text+>;cmpl %ecx, ;jne  <.text+>;leal -(%ebp), %eax": 1,
                "calll - <.text+>;testl %eax, %eax;movl , %esi;je  <.text+>;leal -(%ebp), %eax": 1,
                "calll *%esi;movl %eax, %ecx;testl %ecx, %ecx;movl %ecx, ;je  <.text+>": 1,
                "jmp  <.text+>;pushl (%ebp);pushl (%ebp);pushl %ebx;pushl %edi": 1,
                "movb %cl, (%eax);movl (%esp), %ecx;movl %ecx, (%eax);xorl %eax, %eax;incl %eax": 1,
                "addl $, %ecx;jmp - <.text+>;movl -(%ebp), %ecx;addl $, %ecx;jmp - <.text+>": 366,
                "addl $, %ecx;jmp - <.text+>;leal -(%ebp), %ecx;jmp - <.text+>;leal (%ebp), %ecx": 1,
                "jmp - <.text+>;leal (%ebp), %ecx;jmp - <.text+>;leal -(%ebp), %ecx;jmp - <.text+>": 12,
                "jmp - <.text+>;leal (%ebp), %ecx;jmp - <.text+>;movl -(%ebp), %eax;andl $, %eax": 5,
                "pushl -(%ebp);calll - <.text+>;popl %ecx;retl;pushl -(%ebp)": 33,
                "movl -(%ebp), %ecx;jmp - <.text+>;movl -(%ebp), %ecx;jmp - <.text+>;movl $, %eax": 2,
                "pushl %eax;pushl %eax;pushl %eax;movl $, %ecx;calll - <.text+>": 2,
                "int;int;pushl $;movl $, %ecx;calll - <.text+>": 2,
                "jge - <.text+>;orb $, %al;andb %al, ;addb %al, (%eax);fcomps (,%ecx)": 1,
                "orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 225,
                "addb %al, (%eax);addb %al, (%eax);cli;movb $, %dh;addl %esp, (%eax)": 1,
                "xchgl %ebx, %eax;sbbl %eax, (%ebx);addb %al, (%eax);addb %ah, %al;sbbl $, %eax": 1,
                "xchgl %ebx, %eax;sbbl %eax, (%ecx);addb %al, (%eax);addb %dl, (%eax);popl %ds": 1,
                "addb %al, (%eax);addb %dl, (%eax);popl %ds;orl $, %eax;addb %al, (%eax)": 1,
                "addb (%eax), %al;addb %al, (%eax);je - <.text+>;orb $, %al;andb %al, ": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *%eax;movl $, %eax": 1,
                "addb %al, (%eax);addb %al, %al;popl %ds;orl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *%edi;movl $, %eax": 1,
                "addb %al, (%eax);daa;movl $, %ecx;addb %al, (%eax);xorl $, %eax": 1,
                "addb %al, (%eax);incl %eax;andb %cl, ;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, %ch;movl $, %ecx;addb %al, (%eax);sarl %cl, (%ecx);addb %al, (%eax)": 1,
                "popl %edx;movl $, %edx;addb %al, (%eax);pushl $;addl $, %eax": 1,
                "pushl $;addl $, %eax;addb %al, (%eax);lock;andb %cl, ": 1,
                "addb %al, (%eax);aam $-;orb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "aam $-;orb $, %al;addl %eax, (%eax);addb %al, (%eax);loop -": 1,
                "addb %al, (%eax);addb %bh, %bh;ljmpl *(%ecx);movl $, %ebx;xchgl %ebx, %eax": 1,
                "addb %bh, %bh;pushl -(%ebx);orb $, %al;andb %al, ;addb %al, (%eax)": 1,
                "orb $, %al;andb %al, ;addb %al, (%eax);jl  <.text+>;orl $, %eax": 4,
                "lesl (%ebx), %esp;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, %al;movl $, %esp;addb %al, (%eax);into;movl $, %esp": 1,
                "addb %al, (%eax);addb %ch, %al;andl , %ecx;addb %al, (%eax);addb %al, (%eax)": 1,
                "jmpl *(%ebx);movl $, %ebp;xchgl %ebx, %eax;sbbl %eax, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, (%esp);orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, (%esp);orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "movl $, %ebp;addb %al, (%eax);incl %edx;movl $, %ebp;addb %al, (%eax)": 1,
                "addb %al, (%eax);incl %edx;movl $, %ebp;addb %al, (%eax);decl %ebp": 1,
                "imull $, (%ebp), %edi;orb $, %al;andb %al, ;addb %al, (%eax);pushal": 1,
                "addb %al, (%eax);addb %bh, %bh;decl %edx;movl $, %ebp;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);orl (%esi), %edi;addb %al, (%eax);adcl (%esi), %edi": 1,
                "addb %al, (%eax);orl (%esi), %edi;addb %al, (%eax);adcl (%esi), %edi;addb %al, (%eax)": 1,
                "movl $, %esi;addb %al, (%eax);cmpl $, %eax;addb %al, (%eax);addb %cl, -(%ebx)": 1,
                "jecxz - <.text+>;orb $, %al;addb $, %al;addb %al, (%eax);outb %al, %dx": 1,
                "movl $, %edi;addb %al, (%eax);pushl %ecx;movl $, %edi;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, %ah;andl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, %ah;andl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);movsb (%esi), %es:(%edi);orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "cld;movl $, %edi;addb %al, (%eax);addb $-, %al;orb $, %al": 1,
                "orb $, %al;orb %al, (%eax);addb %al, (%eax);adcb $-, %al;orb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl (%esi);rorb $, (%ecx,%eax)": 1,
                "shlb (%edi);orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;decl -(%eax);orb $, %al": 4,
                "addb %al, (%eax);addb $, %al;orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 12,
                "popl %ds;retl $;addl $, %eax;retl $;addl $, %eax": 1,
                "retl $;popl %es;addb %al, (%eax);addb %dh, ;addb %al, (%eax)": 1,
                "addb %dh, ;addb %al, (%eax);addb %al, -(%eax);orb $, %al;orl %eax, (%eax)": 1,
                "jecxz - <.text+>;orb $, %al;andb %al, ;addb %al, (%eax);testb %ch, (%edx)": 1,
                "andb %al, ;addb %al, (%eax);testb %ch, (%edx);orl $, %eax;addb %al, (%eax)": 1,
                "jmpl *(%eax);retl;orb $, %al;subl %ebx, %eax;orb $, %al": 1,
                "addb %bh, %bh;jmpl *(%ebx,%eax,);addb %al, (%eax);lodsb (%esi), %al;retl": 1,
                "subl %fs:, %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "cwtl;subl , %ecx;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "lesl (%ecx,%eax), %ecx;addl %eax, (%eax);addb %al, (%eax);das;lesl (%ecx,%eax), %ecx": 1,
                "lesl (%ecx,%eax), %ecx;andb %al, ;addb %al, (%eax);addb %ch, (,%ecx);addb %al, (%eax)": 1,
                "fsubrl (,%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;lesl (%ecx,%eax), %ecx;andb %al, ;addb %al, (%eax);orb %ch, ": 1,
                "orb $, %al;andb %al, ;addb %al, (%eax);subb $, %al;orl $, %eax": 4,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %dh, %ah": 1,
                "addb %al, (%eax,%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addl %eax, (%eax)": 1,
                "subl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %ebx": 1,
                "addb %al, (%eax);addl %eax, (%eax);addb %al, (%eax);sbbb %ch, (%esi);orl $, %eax": 1,
                "addb %al, (%eax);subb %ch, (%esi);orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "roll %cl, %ebp;orb $, %al;addb %al, (%eax);addb %al, (%eax);fcmovnb %st(), %st()": 1,
                "addb %al, (%eax);addb %al, (%eax);adcb %dh, %al;orb $, %al;addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;incl -(%ecx)": 2,
                "addl $, %esi;addb %al, (%eax);movl %eax, %esi;orb $, %al;andb %al, ": 1,
                "addb %bh, (%esi);addb %al, (%eax);addb %cl, %cl;addl (%eax), %eax;addb %al, (%eax)": 1,
                "addb %bh, %bh;addb %al, (%eax);addb %al, (%eax);stc;andb %al, ": 1,
                "addb %bh, %bh;calll *(%ebx);addb %al, (%eax);addb %al, (%eax);sbbl %edi, %eax": 1,
                "addl $, %eax;addb %al, (%eax);inb $, %al;orl $, %eax;addb %al, (%eax)": 5,
                "addb %al, (%eax);andb $-, %al;orb $, %al;addl %eax, (%eax);addb %al, (%eax)": 2,
                "orb $, %al;addb $, %al;addb %al, (%eax);popl %ecx;enter $, $": 1,
                "addb %bh, %bh;incl (%eax,%ecx,);addb %al, (%eax);movl %cs, %eax;orb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);testl %ecx, %ecx;orb $, %al;addl %eax, (%eax)": 1,
                "addb %al, (%eax);sahf;leave;orb $, %al;addl (%eax), %eax": 1,
                "addb %al, (%eax);adcb $-, %al;orb $, %al;addl (%eax), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);andb %dl, %cl;orb $, %al;addb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;incl (%ebx,%ecx,);orb $, %al;andb %al, ": 1,
                "addb $, %al;addb %al, (%eax);lretl;orb $, %al;addl (%eax), %eax": 1,
                "addb %al, (%eax);cld;xorb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "aam $-;orb $, %al;addb $, %al;addb %al, (%eax);orb $, %al": 1,
                "addb %al, (%eax);addb %bh, %bh;incl (,%ecx,);addb %al, (%eax);orb $-, %al": 1,
                "incl (,%ecx,);addb %al, (%eax);orb $-, %al;orb $, %al;andb %al, ": 1,
                "jmpl *(%esi);int $;addl %esp, (%eax);addl $, %eax;addb %al, (%eax)": 1,
                "addl $, %eax;addb %al, (%eax);xchgl %esp, %eax;orl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;incl -(%edi);orb $, %al;addl %eax, (%eax)": 1,
                "int $;addl %esp, (%eax);addl $, %eax;addb %al, (%eax);movl $, %eax": 1,
                "movl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 5,
                "addb %bh, %bh;jmpl *(%ecx);addl $, %eax;addb %al, (%eax);cmpb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);jo - <.text+>;orb $, %al;addl %eax, (%eax)": 1,
                "popl %eax;cmpb %cl, ;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "cmpb %cl, ;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;ljmpl *(%esi);addb %al, (%eax);addb %bh, (%ecx);addl $, %eax": 1,
                "jmpl *%ebx;into;orb $, %al;addb %al, (%eax);addb %al, (%eax)": 1,
                "fcmovne %st(), %st();orb $, %al;andb %al, ;addb %al, (%eax);inb $, %al": 1,
                "orb $, %al;addb (%eax), %al;addb %al, (%eax);subb %cl, %bh;orb $, %al": 1,
                "addl $, %eax;addb %al, (%eax);xchgl %esp, %eax;cmpl %ecx, ;addb %al, (%eax)": 1,
                "popl %es;addb %al, (%eax);addb %dh, %ch;iretl;orb $, %al": 1,
                "orb %al, (%eax);addb %al, (%eax);addb %dl, %al;orb $, %al;orl %eax, %edx": 1,
                "addb (%eax), %al;addb %al, (%eax);xchgl %ebp, %eax;rorb (%ecx,%eax);movb , %al": 1,
                "addb %al, (%eax);rcll %cl, %eax;orb $, %al;fcmovnbe %st(), %st();orb $, %al": 1,
                "rcll %cl, %eax;orb $, %al;fcmovnbe %st(), %st();orb $, %al;orl (%eax), %eax": 1,
                "jecxz - <.text+>;orb $, %al;orb $, %al;addb %al, (%eax);jmp - <.text+>": 1,
                "orb $, %al;addb %al, (%eax);addb %al, (%eax);xorb $-, %al;orb $, %al": 1,
                "decl %edi;rorl (%ecx,%eax);andb %al, ;addb %al, (%eax);xorb $, %al": 1,
                "addb %al, (%eax);addb %bh, %bh;jmpl *-(%esi);orb $, %al;andb %al, ": 1,
                "orb $, %al;andb %al, ;addb %al, (%eax);js  <.text+>;orl $, %eax": 4,
                "addb %ch, (%ecx,%edx,);addb %al, (%eax);movb $-, %bh;orb $, %al;retl $": 1,
                "popl %ebp;rorb %cl, (%ecx,%eax);addb (%eax), %al;addb %al, (%eax);pushl $": 1,
                "stosb %al, %es:(%edi);rorb %cl, (%ecx,%eax);orb (%eax), %al;addb %al, (%eax);movb $-, %ch": 1,
                "addb %al, (%eax);popl %eax;cmpb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;decl %edi;rorb %cl, (%ecx,%eax);andb %al, ": 1,
                "addb %al, (%eax);addb %al, (%eax);orb $, %al;addb %al, (%eax);addb %al, (%eax)": 3,
                "lcalll *;addb %al, (%eax);addb %ch, (%eax);rorl %cl, (%ecx,%eax);andb %al, ": 1,
                "addb %al, (%eax);addb %bh, %bh;decl (%ebx);aam $;addl %esp, (%eax)": 1,
                "addl %eax, (%ecx);addb %al, (%eax);addb %dh, -(%ebx);orb $, %al;addb (%eax), %al": 1,
                "addb %al, (%eax);addb %bh, %bh;lcalll *(%esi);addb %al, (%eax);addb %ah, (%esi)": 1,
                "addb %al, (%eax);addb %bl, %cl;aam $;addl %eax, (%ecx);addb %al, (%eax)": 1,
                "aas;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "orb $, %al;addb %al, (%eax);addb %al, (%eax);aad $;addl %eax, (%ecx)": 1,
                "addb %al, %cl;aad $;addl %eax, (%ebx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);orl (%eax), %eax;addb %al, (%eax);adcb $-, %al;orb $, %al": 1,
                "orl $, %eax;addb %al, (%eax);addb %bh, (%ecx,%eax,);orl $, %eax;addb %dl, (%eax)": 1,
                "incl %ecx;orl $, %eax;sbbl %edx, ;incl %eax;orl $, %eax": 1,
                "sbbl %edx, ;incl %eax;orl $, %eax;addb %ch, (%ecx,%eax,);addl %eax, (%eax)": 1,
                "addb %al, (%eax);pushl $;addl $, %eax;addb %al, (%eax);inb %dx, %al": 1,
                "orb %dl, %bh;orb $, %al;orb (%eax), %al;addb %al, (%eax);pushl %ss": 1,
                "andb %al, ;addb %al, (%eax);subb %al, (%edx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);subb %al, (%edx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%ebp);addb %al, (%eax);addb %ch, (%ebx);addb %al, (%eax)": 2,
                "aad $-;orb $, %al;orl (%eax), %eax;addb %al, (%eax);jecxz - <.text+>": 1,
                "cmpb %al, (%ebx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "sbbl $, %eax;addl %esp, (%eax);addl $, %eax;addb %al, (%eax);rolb (%ebx)": 1,
                "orb $, %al;addb %al, (%eax);orb $, %al;andb %al, ;addb %al, (%eax)": 1,
                "addb %al, (%eax);orb $, %al;andb %al, ;addb %al, (%eax);subb %al, (%ebp,%ecx)": 1,
                "addb %al, (%eax);movl %eax, ;addb %al, (%eax);addb %dh, (%ecx);addb %al, (%eax)": 1,
                "movl %eax, ;addb %al, (%eax);addb %dh, (%ecx);addb %al, (%eax);addb %bh, (%edi)": 1,
                "addb %cl, %ch;pushl %es;addb %al, (%eax);addb %bl, %bl;popl %es": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *%ecx": 1,
                "addb %al, (%eax);lock;incl %ebp;orl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;calll *%eax;fisttpl (%ecx,%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;calll *%eax;fisttpl (%ecx,%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);cmpb %al, (%edi);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "pushl -(%eax);orb $, %al;andb %al, ;addb %al, (%eax);incl %edi": 1,
                "decl (%eax);addb %al, (%eax);addb %dl, (%eax);addl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *(%edi);addl $, %eax": 2,
                "addl %ebx, %ebp;orb $, %al;addb (%eax), %al;addb %al, (%eax);orb $-, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %ebp;fisttpll (%ecx,%eax);addb %al, (%eax)": 1,
                "movsb (%esi), %es:(%edi);decl %eax;orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);orl $, %eax;addb %al, (%eax);addb %bl, (%eax);fimuls (%ecx,%eax)": 1,
                "addb %al, (%eax);decl %ecx;orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "orb $, %al;addb %al, (%eax);addb %al, (%eax);pushl %ebx;fimuls (%ecx,%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);popl %esi;fimuls (%ecx,%eax);addb (%eax), %al": 1,
                "addl %eax, (%eax);addb %al, (%eax);decl %esp;decl %edx;orl $, %eax": 1,
                "addb %bh, %bh;fimuls (%ecx,%eax);andb %al, ;addb %al, (%eax);movl $, %eax": 1,
                "addb %al, (%eax);addb %dl, (%edi,%ecx,);orl $, %eax;addb %dl, %bl;addb $, %al": 1,
                "orl $, %eax;addb %al, (%ecx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "fmull (%ebx);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jmpl *(%edx);addb %al, (%eax);addb %ch, (%edx);addb %al, (%eax);addb %dh, (%ebp)": 1,
                "addb %ch, (%edx);addb %al, (%eax);addb %dh, (%ebp);addl $, %eax;addb %al, (%eax)": 1,
                "andb %al, ;addb %al, (%eax);decl %esp;decl %esp;orl $, %eax": 1,
                "addl %eax, (%eax);addb %al, (%eax);stc;fisttps (%ecx,%eax);andb %al, ": 1,
                "movsb (%esi), %es:(%edi);decl %esp;orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %esp, (%eax);addl $, %eax;addb %al, (%eax);hlt;decl %esp": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *-(%ebp);orb $, %al": 3,
                "orb $, %al;andb $-, %al;orb $, %al;andb %al, ;addb %al, (%eax)": 1,
                "xchgl %esp, %ecx;orb $, %al;andb %al, ;addb %al, (%eax);movb %cl, (%esi)": 1,
                "orb $, %al;andb %al, ;addb %al, (%eax);movb %cl, (%esi);addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;incl %ebx": 3,
                "loop ;addl %edi, %edi;decl -(%ecx);orb $, %al;andb %al, ": 1,
                "addb %bh, %bh;calll *(%edx);addl $, %eax;addb %al, (%eax);int": 1,
                "addb %al, (%eax);int;decl %edi;orl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;pushl %ecx;outb %al, $;addl %eax, (%eax)": 1,
                "addb %al, (%eax);adcb %bh, %ah;orb $, %al;addl (%eax), %eax;addb %al, (%eax)": 1,
                "jecxz  <.text+>;addl %eax, (%ebx);addb %al, (%eax);addb %bl, (%ecx);jecxz  <.text+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;incl %edi": 1,
                "addl $, %eax;addb %al, (%eax);pushal;pushl %ecx;orl $, %eax": 1,
                "pushl %ecx;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 3,
                "addb %al, (%eax);addb %bh, %bh;incl (%edi);inb $, %al;addl %eax, (%eax)": 1,
                "incl (%edi);inb $, %al;addl %eax, (%eax);addb %al, (%eax);addb %cl, (%edi)": 1,
                "inb $, %al;addl %esp, (%eax);addl $, %eax;addb %al, (%eax);xchgl %esp, %eax": 1,
                "addl %esp, (%eax);addl $, %eax;addb %al, (%eax);xchgl %esp, %eax;pushl %ecx": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %dh, (%ecx);inb $, %al;addl %esp, (%eax)": 1,
                "addl %esp, (%eax);addl $, %eax;addb %al, (%eax);rclb $, (%ecx);addb %al, (%eax)": 1,
                "addb %al, (%eax);pushl %esp;inb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl (%edi);addl $, %eax": 1,
                "pushl %edx;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "inb $, %al;addl %eax, (%eax);addb %al, (%eax);addb %bl, %cl;inb $, %al": 1,
                "pushl (%ebx);inl $, %eax;addl %edi, %edi;incl -(%edi);orb $, %al": 1,
                "addl %edi, %edi;incl -(%edi);orb $, %al;pushl %ecx;inl $, %eax": 1,
                "addb %al, (%eax);addb %bh, %bh;ljmpl *-(%ecx);pushl -(%ebp);movl $, %esi": 1,
                "calll *%edx;inl $, %eax;addl %edi, %edi;inl $, %eax;addl %esp, (%eax)": 1,
                "inl $, %eax;addl %edi, %edi;incl (%edx);outb %al, $;addl %eax, (%ecx)": 1,
                "pushl -(%ecx);orb $, %al;jle - <.text+>;orb $, %al;pushl %edi": 1,
                "outb %al, $;addl %ecx, (%ecx);addb %al, (%eax);addb %dh, (%edx);outb %al, $": 1,
                "addb %al, (%eax);addb %cl, -(%edx);orb $, %al;cwtl;outb %al, $": 1,
                "outb %al, $;addl %edi, %edi;jmpl *-(%ebp);pushl (%edx);addl $, %eax": 1,
                "jmpl *-(%ebp);pushl (%edx);addl $, %eax;addb %al, (%eax);xchgl %esp, %eax": 1,
                "addb %al, (%eax);xchgl %esp, %eax;pushl %ebx;orl $, %eax;addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);lesl (%ebp,%ecx), %edx;andb %al, ;addb %al, (%eax)": 1,
                "pushl %esp;orl $, %eax;addb %dl, %ah;pushl %esp;orl $, %eax": 1,
                "addl $, %eax;addb %al, (%eax);subb %dl, (%ebp);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;jmpl *-(%edx);orb $, %al;andb %al, ": 2,
                "addb %al, (%eax);addb %al, (%eax);subl $, %eax;xchgl %ebx, %eax;sbbl %eax, (%edx)": 1,
                "xchgl %ebx, %eax;sbbl %eax, (%ebx);addb %al, (%eax);addb %cl, %al;pushl %esi": 1,
                "pushl %edi;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "movb %dl, (%edi);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;incl (%ecx,%ebp,);xchgl %ebx, %eax;sbbl %eax, (%ecx);addb %al, (%eax)": 1,
                "incl %eax;jmp  <.text+>;addb %al, (%eax);enter $, $;andb %al, ": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;ljmpl *(%esi);ljmpl $, $": 1,
                "andb %al, ;addb %al, (%eax);inb %dx, %al;popl %eax;orl $, %eax": 1,
                "addb %dl, (%edi);addl $, %eax;addb %al, (%eax);adcb %bl, (%ecx);addl %eax, (%eax)": 1,
                "addb %bh, %bh;incl %ebp;ljmpl $, $;int $;orb $, %al": 1,
                "pushal;popl %ecx;orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "popl %ecx;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "ljmpl $, $;inb %dx, %al;ljmpl $, $;imull %edx;orb $, %al": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %ch, (%edx);jmp  <.text+>;addl %eax, (%ecx)": 1,
                "orb $, %al;andb %al, ;addb %al, (%eax);cld;popl %ecx": 1,
                "addl $, %eax;addb %al, (%eax);cmpb %bl, (%edx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%esp,%ebp,);orb $, %al;popl %es;addb %al, (%eax)": 1,
                "popl %es;addb %al, (%eax);addb %ah, (%esp,%ebp,);orb $, %al;popl %es": 1,
                "addb %al, (%eax);popl %edx;orl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%edx);addb %al, (%eax);addb %dh, -(%ebx);orb $, %al;addl (%eax), %eax": 1,
                "subl $, %esp;addl %eax, (%eax,%eax);addb %al, (%eax);movl %esp, %ebp;orb $, %al": 1,
                "addb %al, %bl;inb %dx, %al;orb $, %al;orl $, %eax;inb %dx, %al": 1,
                "addb %al, (%eax);shrl %cl, %esp;orb $, %al;sldtw (%eax);addb %bl, %bl": 1,
                "inl %dx, %eax;orb $, %al;andb %al, ;addb %al, (%eax);subb $, %al": 1,
                "orb $, %al;addl %eax, (%eax);addb %al, (%eax);outb %al, %dx;outb %al, %dx": 1,
                "cld;outb %al, %dx;orb $, %al;addl (%eax), %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, (%ebp,%ebp,);xchgl %ebx, %eax;sbbl %ecx, (%eax);addb %al, (%eax)": 1,
                "orb $, %al;andb %al, ;addb %al, (%eax);clc;popl %esp": 1,
                "calll *;addb %al, (%eax);addb %bl, ;addb %al, (%eax);addb %ch, (%ebx)": 1,
                "outb %al, %dx;orb $, %al;andb %al, ;addb %al, (%eax);decl %eax": 1,
                "andb %al, ;addb %al, (%eax);decl %eax;popl %ebp;orl $, %eax": 1,
                "popl %ebp;orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "addb %al, (%eax);addb %bh, %bh;lcalll *(%eax);lock;orb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *-(%edi);orb $, %al": 1,
                "orb $, %al;addl (%eax), %eax;addb %al, (%eax);cltd;lock": 1,
                "addb %al, (%eax);addb %al, %bl;lock;orb $, %al;popl %es": 1,
                "addb %al, (%eax);movl $, %eax;addb %al, (%eax);addb %al, %bl;orb $, %al": 1,
                "orb $, %al;addb (%eax), %al;addb %al, (%eax);into;orb $, %al": 1,
                "addb %al, (%eax);inb $, %al;orb $, %al;addl $, %eax;orb $, %al": 1,
                "pushl %cs;repne  orb $, %al;addl %eax, (%eax);addb %al, (%eax);sbbl %esi, %edx": 1,
                "addl (%eax), %eax;addb %al, (%eax);movb %dh, %dl;orb $, %al;addb $, %al": 1,
                "repne  orb $, %al;addl $, %eax;repne  orb $, %al;pushl %es;addb %al, (%eax)": 1,
                "repne  orb $, %al;pushl %es;addb %al, (%eax);addb %ah, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);cmpb $-, %al;orb $, %al;orl (%eax), %eax;addb %al, (%eax)": 1,
                "popl %ebp;repne  orb $, %al;pushl %cs;addb %al, (%eax);addb %ah, -(%ebp)": 1,
                "addb %al, %al;repne  orb $, %al;adcl $, %eax;repne  orb $, %al;pushl %ss": 1,
                "addb %ah, (%eax);rep  orb $, %al;andl %eax, (%eax);addb %al, (%eax);subb %dh, %bl": 1,
                "andl %eax, (%eax);addb %al, (%eax);subb %dh, %bl;orb $, %al;andb (%eax), %al": 1,
                "xorb %dh, %bl;orb $, %al;andl (%eax), %eax;addb %al, (%eax);cmpl %ebx, %esi": 1,
                "addb %dl, -(%ebx);orb $, %al;daa;addb %al, (%eax);addb %bl, -(%ebx)": 1,
                "addb %al, (%eax);jnp - <.text+>;orb $, %al;andb %al, ;addb %al, (%eax)": 1,
                "addb %dh, (%edi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dh, %ah;bound -, %ecx;sbbl %eax, (%edi);addb %al, (%eax)": 1,
                "rep  orb $, %al;addb (%eax), %al;addb %al, (%eax);std;rep  orb $, %al": 1,
                "sbbb %dh, %ah;orb $, %al;addb (%eax), %al;addb %al, (%eax);andl %esi, %esp": 1,
                "addb %al, (%eax);addb %al, (%eax);orb $, %al;andb %al, ;addb %al, (%eax)": 1,
                "hlt;orb $, %al;addl %eax, (%eax);addb %al, (%eax);stc": 1,
                "addl %eax, (%eax);addb %al, (%eax);stc;hlt;orb $, %al": 1,
                "cmc;orb $, %al;addb (%eax), %al;addb %al, (%eax);pushl %edx": 1,
                "addb %al, (%eax);pushl %edx;cmc;orb $, %al;addb (%eax), %al": 1,
                "orb $, %al;addb (%eax), %al;addb %al, (%eax);popl %ebx;cmc": 1,
                "fdiv %st();orb $, %al;addl (%eax), %eax;addb %al, (%eax);loopne -": 1,
                "orb $, %al;andb %al, ;addb %al, (%eax);aam $;orl $, %eax": 2,
                "cmc;orb $, %al;addb %al, (%eax);addb %al, (%eax);addb %dh, %dh": 1,
                "addb %al, (%eax);addb %al, (%eax);sbbl %esi, %edi;orb $, %al;addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %ch, (%edi);orl $, %eax;sbbl %eax, (%edi);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);outsb (%esi), %dx;addl %eax, (%eax);addb %al, (%eax)": 1,
                "shlb $, (%edi);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "andb %al, ;addb %al, (%eax);sbbb %ch, (%eax);addl %eax, (%eax);addb %al, (%eax)": 1,
                "orb $, %al;addb $, %al;addb %al, (%eax);decl %ecx;clc": 1,
                "orb $, %al;popal;clc;orb $, %al;orb %al, (%eax)": 1,
                "popal;clc;orb $, %al;orb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (%ebx);addb %al, (%eax);addb %ch, (%ebx);addb %al, (%eax);addb %dh, (%ebx)": 2,
                "popl %es;addb %al, (%eax);addb %bl, %bl;clc;orb $, %al": 1,
                "jmp - <.text+>;orb $, %al;orb $, %al;addb %al, (%eax);rep  clc": 1,
                "andb %al, ;addb %al, (%eax);testb %ch, (%ecx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);cmpl $, %ecx;addb %al, (%eax);orb $, %al": 1,
                "addb %al, (%eax);int;stc;orb $, %al;addl (%eax), %eax": 1,
                "pushl $;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;lcalll *(%edx,%edi,);addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%edx,%edi,);addb %al, (%eax);stosb %al, %es:(%edi);cli": 1,
                "addb %al, (%eax);loop -;orb $, %al;orb (%eax), %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;lcalll *(%ebx);sti;orb $, %al": 1,
                "addb %al, (%eax);andl %ebx, %edi;orb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);xorl %edi, %ebx;orb $, %al;addb (%eax), %al": 1,
                "popl %es;cld;orb $, %al;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;incl %esp;cld": 1,
                "xorb %ch, (%ebp);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);std;orb $, %al;andb %al, ;addb %al, (%eax)": 1,
                "addb $, %al;addb %al, (%eax);testl $, %eax;addb %al, (%eax);addb %dh, (%edi)": 1,
                "addb %al, (%eax);testl $, %eax;addb %al, (%eax);addb %dh, (%edi);addb %al, (%eax)": 1,
                "orb $, %al;popl %es;addb %al, (%eax);addb %dl, %bl;std": 1,
                "loope -;orb $, %al;orl %eax, (%eax);addb %al, (%eax);outl %eax, %dx": 1,
                "orb (%eax), %al;addb %al, (%eax);std;std;orb $, %al": 1,
                "orb $, %al;orb $, %al;addb %al, (%eax);sbbl %edi, %esi;orb $, %al": 1,
                "orb $, %al;adcb $, %al;addb %al, (%eax);movl %edi, %esi;orb $, %al": 1,
                "subb %ch, (%esi);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dl, %cl;decl (%ecx,%eax);sldtw (%eax);addb %bl, %bh": 1,
                "decl (%ecx,%eax);adcl %eax, (%eax);addb %al, (%eax);sti;decl (%ecx,%eax)": 1,
                "addb %bl, (%ebp);orl $, %eax;addb %ch, (%ebx);orl $, %eax;addb %bh, (%ecx)": 1,
                "addb %al, (%eax);addb %bh, %bh;calll *-(%esi);lcalll *(%esi);addl $, %eax": 1,
                "sbbl %eax, (%eax,%eax);addb %al, (%eax);xorb $, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);incl %ecx": 2,
                "addb %bh, %bh;addb %al, (%eax);addb %al, %cl;addl %ecx, -;sbbl %eax, (%edx)": 1,
                "addb %al, (%eax);addb %cl, (%ecx,%esi,);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ah, %ah;jno  <.text+>;addl %eax, (%eax);addb %al, (%eax)": 1,
                "sbbl %eax, (%eax,%eax);addb %al, (%eax);orb %dh, (%edx);addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %bh;ljmpl *(%ebp);addl $, %eax;addb %al, (%eax);pushfl": 1,
                "addb %al, (%eax);addb %bh, %bh;incl %esp;addb -, %cl;sbbl %eax, (%ecx)": 1,
                "addb %al, (%eax);addb %al, %al;jb  <.text+>;addl %eax, (%eax);addb %al, (%eax)": 1,
                "addb %dh, (%ebx);addl , %ecx;addb %bh, (%esi);addl -, %ecx;sbbl %ecx, (%edx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *%esi;addl -, %ecx": 1,
                "addb %al, (%eax);addb %bh, %bh;jmpl *;addb %al, (%eax);addb %ch, ": 1,
                "addb %dh, (%esi);orl $, %eax;addb %bh, (%esi);orl $, %eax;addb %al, (%esi)": 2,
                "addb %al, (%eax);addb %bh, (%ebx);addl $, %eax;addb %al, (%eax);inb $, %al": 1,
                "addb %bh, %bh;ljmpl *(%ebp);addb %al, (%eax);addb %dh, (%ebp);addl $, %eax": 1,
                "addb %al, (%eax);xlatb;addl $, %eax;addb %al, (%eax);inl $, %eax": 1,
                "sbbl %eax, (%eax,%eax);addb %al, (%eax);cwtl;jbe  <.text+>;addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;lcalll *(%edi);orl $, %eax": 1,
                "pushl %es;orl $, %eax;sbbl %eax, (%eax,%eax);addb %al, (%eax);cmpb $, %al": 1,
                "orl $, %eax;sbbl %eax, (%ecx);addb %al, (%eax);addb %bh, (%eax);orl $, %eax": 1,
                "orl $, %eax;lcalll *(%esi);orl $, %eax;sbbl %eax, (%edx);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *(%edi,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;calll *%ebp;popl %es;orl $, %eax": 1,
                "decl (%eax,%ecx);addl %eax, (%ecx);addb %al, (%eax);addb %dl, (%edi);orl $, %eax": 1,
                "addb %bh, (%eax);orl $, %eax;addb %al, (%ebx);addl $, %eax;addb %al, (%eax)": 1,
                "orl %ecx, -;sbbl %ecx, (%ecx);addb %al, (%eax);addb %bh, (%ecx,%edi,);orl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;jmpl *(%ecx,%ecx)": 1,
                "jmpl *(%ecx,%ecx);orl $, %eax;addb %ch, (%ecx,%ecx);orl $, %eax;addb %dh, (%ecx,%ecx)": 1,
                "addb %bh, %bh;ljmpl *(%ebx);orl $, %eax;addb %dh, (%ebx);orl $, %eax": 1,
                "sbbl %eax, (%esi);addb %al, (%eax);addb %cl, (%eax);orl $, %eax;addb %al, (%eax)": 1,
                "orb , %cl;addb %ah, %cl;orb , %cl;addb %ch, %ah;orb , %cl": 1,
                "addb %ah, %cl;orb , %cl;addb %ch, %ah;orb , %cl;addb %dh, %bh": 1,
                "addb %dh, (%edi);addl $, %eax;addb %al, (%eax);int;jnp  <.text+>": 1,
                "jl  <.text+>;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 4,
                "orb $, %al;addl %eax, (%eax);addb %al, (%eax);addb %ah, (%ebx);orb $, %al": 1,
                "orl $, %eax;sbbl %eax, ;jl  <.text+>;addl %eax, (%eax);addb %al, (%eax)": 1,
                "sbbl %eax, ;jl  <.text+>;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dh, %cl;orb $, %al;addl %eax, (%edx);addb %al, (%eax);addb %bh, %bh": 1,
                "addb %al, (%eax);addb %bh, %bh;incl (%esi);orl $, %eax;calll *(%ecx)": 1,
                "addb %ch, (%ecx);orl $, %eax;sbbl %eax, ;jge  <.text+>;addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %bh;lcalll *(%ecx);addb %al, (%eax);addb %ah, (%ecx)": 1,
                "orl $, %eax;addb %ch, (%ecx);pushl %cs;orl $, %eax;addb %dh, (%ecx)": 1,
                "orl $, %eax;addb %dh, (%ecx);pushl %cs;orl $, %eax;addb %bh, (%ecx)": 1,
                "addb %dh, (%ecx);pushl %cs;orl $, %eax;addb %bh, (%ecx);pushl %cs": 1,
                "addb %ah, %bl;pushl %cs;orl $, %eax;addb %ch, %bl;pushl %cs": 1,
                "addb %al, (%eax);sbbl (%edi), %ecx;orl $, %eax;addb %ah, (%ebx);prefetch (%ecx)": 1,
                "decl %esi;prefetch (%ecx);andl (%eax), %eax;addb %al, (%eax);pushl %esi": 1,
                "pushl %esi;prefetch (%ecx);andb $, %al;addb %al, (%eax);popal": 1,
                "addb %al, (%eax);addb %bh, (%edi,%ecx);addl %ebp, (%eax);addb %al, (%eax);addb %al, (%edi,%ecx)": 1,
                "addb %bh, (%edi,%ecx);addl %ebp, (%eax);addb %al, (%eax);addb %al, (%edi,%ecx);addb %al, (%eax)": 1,
                "prefetch (%ecx);andb %al, ;addb %al, (%eax);je  <.text+>;orl $, %eax": 1,
                "lretl;prefetch (%ecx);addb (%eax), %al;addb %al, (%eax);rorl %cl, (%edi)": 1,
                "prefetch (%ecx);addb (%eax), %al;addb %al, (%eax);sti;prefetch (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);adcb (%eax), %dl": 1,
                "addb %bh, (%eax,%edx);addl %esp, (%eax);addl $, %eax;addb %al, (%eax);orb $, %fs:": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;calll *(%eax);adcl %ecx, -": 1,
                "addb %al, (%eax);addb %al, (%ecx,%eax,);addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bl, (%edx);addb %al, (%eax);addb %ah, (%edx);addb %al, (%eax);addb %ch, (%edx)": 1,
                "addb %al, (%eax);addb %ch, (%edx);addb %al, (%eax);addb %dh, (%edx);addb %al, (%eax)": 1,
                "adcl %ecx, ;addb %dl, %dl;adcl %ecx, ;addb %bl, %dl;adcl %ecx, ": 1,
                "addb %dl, (%edx);orl $, %eax;addb %ah, (%eax);orl $, %eax;addb %ch, (%esi)": 1,
                "orl $, %eax;addb %bh, (%edx,%edx);addl %eax, (%edi);addb %al, (%eax);addb %cl, (%edx)": 1,
                "orl $, %eax;sbbl %eax, (%eax,%eax);addb %al, (%eax);subb %al, (%ebx);addb %al, (%eax)": 1,
                "orl $, %eax;lcalll *(%edx);addb %al, (%eax);addb %al, (%edx);addb %al, (%eax)": 1,
                "sbbl %eax, (%ecx);addb %al, (%eax);addb %ch, %al;orl $, ;addb %al, (%eax)": 1,
                "incl (%edx);addb %al, (%eax);addb %cl, (%edx);addl $, %eax;addb %al, (%eax)": 1,
                "incl %ecx;adcb $, %al;addl %esp, (%eax);addl $, %eax;addb %al, (%eax)": 1,
                "addl %esp, (%eax);addl $, %eax;addb %al, (%eax);subb $-, %al;orl $, %eax": 1,
                "addl $, %eax;addb %al, (%eax);subb $-, %al;orl $, %eax;addb %al, (%eax)": 1,
                "addb %dl, (%ebx,%ecx,);addl %eax, (%ecx);addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax)": 1,
                "addb %dh, (,%edx);xchgl %ebx, %eax;sbbl %eax, (%ebx);addb %al, (%eax);addb %dl, (%esi,%eax,)": 1,
                "addb %al, (%eax);addb %al, (%eax);decl %ebx;adcl $, %eax;addb %al, (%eax)": 1,
                "decl %ebx;adcl $, %eax;addb %al, (%eax);pushl %ebx;adcl $, %eax": 1,
                "xchgl %ecx, %eax;adcl $, %eax;xchgl %ebx, %eax;sbbl %eax, (%edx);addb %al, (%eax)": 1,
                "addb %al, (%edi,%eax,);orl $, %eax;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %esp, (%eax);addl $, %eax;addb %al, (%eax);pushl %esp;xchgl %ecx, ": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;pushl %esi;adcl $, %eax": 1,
                "sbbl %eax, (%ecx);addb %al, (%eax);addb %bl, (%edi,%eax,);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;ljmpl *(%edx);pushl %ss": 1,
                "sbbl %eax, (%ecx);addb %al, (%eax);addb %ah, %ah;xchgl %ecx, ;addb %al, (%eax)": 1,
                "sbbl %eax, (%ecx);addb %al, (%eax);addb %dh, (%eax,%ecx,);orl $, %eax;addb %al, (%eax)": 1,
                "addb %bh, (%edi,%edx);orl $, %eax;incl (%edi);orl $, %eax;addb %dl, (%edx)": 1,
                "addb %al, (%eax);addb %dl, (%edi,%edx);addb %al, (%eax);lahf;popl %ss": 1,
                "sbbb %cl, ;addb %ah, (%edx);sbbb %cl, ;addb %ch, ;addb %al, (%eax)": 1,
                "orl $, %eax;sbbl %eax, (%edx);addb %al, (%eax);addb %bl, %ah;movl %ecx, ": 1,
                "sbbl %eax, (%edx);addb %al, (%eax);addb %bl, %ah;movl %ecx, ;addb %al, (%eax)": 1,
                "addb %al, (%eax);orb %cl, (%edx);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);lretl $;addl %esp, (%eax);addl $, %eax": 1,
                "sbbl %eax, (%edx);addb %al, (%eax);addb %bl, -(%eax);orl $, %eax;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %cl, (%eax);orl $, %eax;sbbl %eax, (%edi);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);movb $, %dl;orl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %bh;sbbl %ecx, ": 1,
                "addb %al, (%ebx);sbbb , %cl;addb %cl, (%ebx);sbbb , %cl;addb %dl, (%ebx)": 1,
                "addb %bl, (%ebx);sbbb , %cl;addb %ah, (%ebx);sbbb -, %cl;sbbl %ecx, (%eax)": 1,
                "addb %bh, -(%eax);pushl (%edx);movb $, %al;addb %cl, (%eax);sbbl $, %eax": 1,
                "sbbl $, %eax;orl $, %eax;popl %ds;addb %al, (%eax);xchgl %esp, %eax": 1,
                "addb %ah, (%esp,%ebx,);orl $, %eax;movl $, %eax;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (%ecx);orl $, %eax;addb %al, (%ecx);addb %ah, -(%eax);orl $, %eax": 1,
                "addb %al, (%esi);addb %al, (%eax);addb %al, (%esi);cmpsb %es:(%edi), (%esi);orl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%esi);cmpsb %es:(%edi), (%esi);orl $, %eax;addb %dl, %dh": 1,
                "orl $, %eax;addb %dl, %ah;movsb (%esi), %es:(%edi);orl $, %eax;addb %dh, -(%esp)": 1,
                "addb %dl, (%esi);movsb (%esi), %es:(%edi);orl $, %eax;addb %dh, %al;movl %eax, ": 1,
                "addb %cl, -(%edx);testb $, %al;addb %ch, -(%edx);testb $, %al;addb %dl, %ah": 1,
                "testb $, %al;addb %ch, %dl;testb $, %al;addb %al, (%ecx,%ebp,);orl $, %eax": 1,
                "addb %ah, -(%edx);orl $, %eax;addb %dl, -(%eax);cmpsb %es:(%edi), (%esi);orl $, %eax": 1,
                "addb %bh, (%ebx,%edi,);orl $, %eax;addb %ch, -(%esi);orl $, %eax;addb %dl, -(%esi)": 1,
                "movl $, %ebx;orl $, %eax;addb %ah, %ah;movl $, %ebx;orl $, %eax": 1,
                "addb %ah, %ah;movl $, %ebx;orl $, %eax;addb %bl, (%eax);movl $, %esp": 1,
                "addb %dh, -(%esi);orl $, %eax;addb %dl, -(%esi);movl $, %ebp;orl $, %eax": 1,
                "orl $, %eax;addb %dl, -(%esi);movl $, %ebp;orl $, %eax;addb %ch, %ah": 1,
                "addb %al, -(%eax);scasb %es:(%edi), %al;addb (%eax), %al;andb $, (%edx);addb %al, -(%eax)": 1,
                "addb %al, -(%eax);popl %edi;orb $, %al;adcb $, (%ecx);addb %al, -(%eax)": 1,
                "orb $, %al;adcb $, (%ecx);addb %al, -(%eax);jns  <.text+>;addb %al, -(%eax)": 1,
                "orb $, (%ecx);addb %al, -(%eax);adcl %eax, %ds:(%eax);adcb $, (%edi);xorb $, (%ebx)": 1,
                "sbbb $, -(%ecx);addb %al, -(%eax);inl %dx, %eax;sbbb %al, (%eax);cmpb $, (%esp,%edx)": 1,
                "cmpb $, (%esp,%edx);andb $, (%edx);subb $, -(%ebp);addb %al, -(%eax);pushl $": 1,
                "addb %al, -(%eax);adcb %al, (%edi);addb %al, -(%eax);adcb %cl, (%edx);addb %al, -(%eax)": 1,
                "addb %al, -(%eax);xorb $, %al;addb %al, -(%eax);movb , %al;adcl %eax, (%eax)": 1,
                "addb %al, -(%eax);aaa;adcl %eax, (%eax);addb $, -(%ebx);addb %al, -(%eax)": 1,
                "subb (%edx), %al;addb %al, -(%eax);xchgl %edx, %eax;addl %eax, (%eax);subb $, (%edi)": 1,
                "addb %al, -(%eax);cmpl $, %eax;pushl %ss;addb %al, -(%eax);arpl %dx, (%ecx)": 1,
                "cmpl $, %eax;pushl %ss;addb %al, -(%eax);arpl %dx, (%ecx);addb %al, -(%eax)": 1,
                "pushl %ss;addb %al, -(%eax);arpl %dx, (%ecx);addb %al, -(%eax);subl $, %eax": 1,
                "sbbb $, %cl;addb %al, -(%eax);movb %al, (%edx);addb %al, -(%eax);popl %edi": 1,
                "addb %al, -(%eax);popl %edi;pushl %ss;addb %al, -(%eax);enter $, $-": 1,
                "addb %al, -(%eax);movb $, %ah;addb %al, -(%eax);movb $, %bh;addb %al, -(%eax)": 1,
                "adcb $, (%ecx);xorb $, %dl;addb %al, -(%eax);pushl %esp;orl %eax, (%eax)": 1,
                "addb %al, -(%eax);orl %eax, %gs:(%eax);andb $, %al;addb %al, -(%eax);orl $, %eax": 1,
                "incl %esi;adcl $, %eax;addb %al, -(%eax);jmp  <.text+>;addb %al, -(%eax)": 1,
                "adcb $, -(%ecx);addb %al, -(%eax);addb $, %al;addb %al, -(%eax);lcalll $, $": 1,
                "fadds (%ecx);addb %al, -(%eax);cwtl;pushl %ss;addb %al, -(%eax)": 1,
                "outb %al, %dx;orl $, %eax;addb %al, -(%eax);lock;orl $, %eax": 1,
                "addb %al, -(%eax);pushl %ecx;orb (%eax), %al;addb $, (%esi);xorb $, (%ecx)": 1,
                "addb %al, -(%eax);movl %eax, ;orb (%eax), %al;xorb $, (%ebp);sbbb $, %bh": 1,
                "addb $, %al;orb $, (%ebp);addb %al, -(%eax);decl %ebp;orb (%eax), %al": 1,
                "orb (%eax), %al;subb $, %bh;addb %al, -(%eax);cmpl (%eax), %edx;addb %al, -(%eax)": 1,
                "sbbb $, (%edx);addb %al, -(%eax);andb %al, (%ebx);addb %al, -(%eax);orb %cl, (%esi)": 1,
                "orb $, %al;subb $, (%ebx);xorb $, (%esi);addb %al, -(%eax);cltd": 1,
                "addb %al, -(%eax);decl %ecx;orl %eax, (%eax);xorb $, (%ebp);xorb $, (%ecx)": 1,
                "decl %ecx;orl %eax, (%eax);xorb $, (%ebp);xorb $, (%ecx);addb %al, -(%eax)": 1,
                "addb %al, -(%eax);jmp -;popl %ss;addb %al, -(%eax);adcb $, (%ebx)": 1,
                "orl $, %eax;addb %dh, (%eax);movb $, %ch;addb %ch, (%esi);movb $, %dh": 1,
                "addb %dh, (%eax);movb $, %ch;addb %ch, (%esi);movb $, %dh;addb %bl, (%eax)": 1,
                "addb %al, (%ebp,%esi,);addb %ah, -(%eax);orl $, %eax;addb %dl, -(%esi);movb $, %ch": 1,
                "movb $, %ch;addb %cl, (%eax);movb $, %bh;addb %bl, (%esi);movb $, %bh": 1,
                "orl $, %eax;addb %dl, -(%eax);orl $, %eax;addb %dh, %al;movb $, %cl": 1,
                "stosl %eax, %es:(%edi);orl $, %eax;addb %dh, %al;stosb %al, %es:(%edi);orl $, %eax": 1,
                "addb %dh, -(%edx);scasl %es:(%edi), %eax;orl $, %eax;addb %bh, (%edi,%ebp,);addb %ch, (%edi,%ebp,)": 1,
                "movb $, %ah;addb %al, (%eax);addb %al, (%eax);addb %al, (%ebx);addb %al, (%eax)": 1,
                "orl $, %eax;addb %bh, (%esi,%ebx,);orl $, %eax;addb %dl, -(%edx);orl $, %eax": 1,
                "addb %dh, -(%esi);orl $, %eax;addb %cl, -(%eax);movl $, %ecx;orl $, %eax": 1,
                "movb , %al;orl $, %eax;addb %bl, %al;lahf;orl $, %eax": 1,
                "addb %al, %dh;lahf;orl $, %eax;addb %ch, -(%esi);lahf": 1,
                "addb %cl, -(%esi);lahf;orl $, %eax;addb %dh, -(%edx);orl $, %eax": 1,
                "movb $, %al;addb %cl, -(%edx);orl $, %eax;addb %bl, -(%esi);movb $, %al": 1,
                "orl $, %eax;addb %bl, -(%esi);movb $, %al;addb %dh, -(%esi);orl $, %eax": 1,
                "movb $, %ah;addb %dl, (%eax);movb $, %ah;addb %bh, %dh;movb $, %bl": 1,
                "addb %bl, (%edi);incl %ebx;js  <.text+>;incl %esi;jb  <.text+>": 1,
                "arpl %bp, (%eax);addb %ch, (%edx);addl (%edi), %esi;jae  <.text+>;jo  <.text+>": 1,
                "jae  <.text+>;insl %dx, %es:(%edi);jo  <.text+>;addb %ch, (%ecx);addb (%edi), %bl": 1,
                "addb (%edi), %bl;arpl %si, (%ebx);arpl %bp, (%ebp);addb %al, (%eax);adcl (%ebx), %eax": 1,
                "addb %dh, (%ebx,%eax);ja  <.text+>;jae  <.text+>;je  <.text+>;addb %al, (%eax)": 1,
                "ja  <.text+>;addb %dl, (%edx);addl (%ebx), %esi;jo  <.text+>;imull $, (%esi), %ebp": 1,
                "ja  <.text+>;jae  <.text+>;jo  <.text+>;addb %bl, %bh;addb (%ebp), %ch": 1,
                "ja  <.text+>;jb  <.text+>;outsb (%esi), %dx;je  <.text+>;addb %al, (%eax)": 1,
                "ja  <.text+>;outsl (%esi), %dx;imull $, (%eax), %eax;popal;insb %dx, %es:(%edi)": 1,
                "addl (%ecx,%ebp,), %esi;addb %al, %gs:(%eax);stosl %eax, %es:(%edi);addb (%esi), %ah;insb %dx, %es:(%edi)": 1,
                "stosl %eax, %es:(%edi);addb (%esi), %ah;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %dl, (%ebx)": 1,
                "jbe  <.text+>;outsb (%esi), %dx;ja  <.text+>;jb  <.text+>;outsb (%esi), %dx": 1,
                "je  <.text+>;popal;imull $, (%esi), %ebp;addb %bh, (%ebx);addl %ebx, (%edi)": 1,
                "incl %ebp;incl %eax;popl %eax;popl %edx;addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);addb %al, (%eax);xorb $, %al;aas;je  <.text+>": 1,
                "incl %ecx;popl %eax;popl %eax;popl %edx;addb %ch, (%edx)": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;js  <.text+>;je  <.text+>;movb $, %ah": 1,
                "addb %bl, (%edi);outsl (%esi), %dx;outsb (%esi), %dx;je  <.text+>;outsl (%esi), %dx": 1,
                "addb %cl, %bh;addl %edx, (%edx);incl %ebx;jb  <.text+>;popal": 1,
                "js  <.text+>;addb %bh, %ah;addl %edx, (%edx);pushl %ebx;je  <.text+>": 1,
                "pushl %ebx;imull $, (%eax,%eax), %esp;arpl %bp, (%ebx);outsl (%esi), %dx;imull $, (%ebp), %esp": 1,
                "imull $, (%eax,%eax), %esp;arpl %bp, (%ebx);outsl (%esi), %dx;imull $, (%ebp), %esp;insl %dx, %es:(%edi)": 1,
                "decl %ebx;jns  <.text+>;addb %ah, (%esi);addb (%ebx), %dl;je  <.text+>": 1,
                "je  <.text+>;imull $, (%ebp), %ebp;imull $, (%ecx,%edi,), %esi;pushl %edx;incl %esp": 1,
                "insb %dx, %es:(%edi);je  <.text+>;pushl %esi;popal;insb %dx, %es:(%edi)": 1,
                "imull $, (%ecx,%edi,), %esi;imull $, (%eax), %esi;arpl %bp, (%eax,%eax);addb (%edx), %dl;jo  <.text+>": 1,
                "imull $, (%eax), %esi;arpl %bp, (%eax,%eax);addb (%edx), %dl;jo  <.text+>;jb  <.text+>": 1,
                "jo  <.text+>;jb  <.text+>;incl %ebp;jbe  <.text+>;outsb (%esi), %dx": 1,
                "je  <.text+>;jae  <.text+>;jb  <.text+>;popal;insl %dx, %es:(%edi)": 1,
                "popal;jb  <.text+>;pushl %ebx;jb  <.text+>;imull $, (%ebx), %esp": 1,
                "addl %eax, (%edi);je  <.text+>;popal;je  <.text+>;incl %esi": 1,
                "outsl (%esi), %dx;jae  <.text+>;decl %eax;popal;outsb (%esi), %dx": 1,
                "outsl (%esi), %dx;jb  <.text+>;addb %dl, (%esi);addl (%ebx), %edx;je  <.text+>": 1,
                "addl (%edi), %edx;imull $, (%ebp), %esi;je  <.text+>;pushl %eax;jb  <.text+>": 1,
                "addb %al, (%eax);lock;addb %al, (%esi);decl %esp;imull $, (%edx), %esp": 1,
                "je  <.text+>;jb  <.text+>;arpl %ax, (%ecx);jb  <.text+>;jae  <.text+>": 1,
                "je  <.text+>;imull $, (%ebp), %ebp;bound (%ebp), %esi;jae  <.text+>;addb %al, (%eax)": 2,
                "imull $, (%esi), %ebp;incl %edi;je  <.text+>;outsl (%esi), %dx;insb %dx, %es:(%edi)": 1,
                "pushl %ebx;arpl %si, %gs:(%ecx,%ebp,);outsb (%esi), %dx;addb %cl, (%ebx);pushl %esp": 1,
                "imull $, (%esi), %ebp;jb  <.text+>;popal;addb %bh, %fs:(%esi);pushl %edi": 1,
                "jb  <.text+>;popal;addb %bh, %fs:(%esi);pushl %edi;popal": 1,
                "insl %dx, %es:(%edi);jo  <.text+>;je  <.text+>;jb  <.text+>;popal": 1,
                "jo  <.text+>;aam $;incl %edi;je  <.text+>;imull $, (%ebx), %esp": 1,
                "jb  <.text+>;outsb (%esi), %dx;je  <.text+>;pushl $;addb %al, (%eax)": 1,
                "orb %al, (%ebx);pushl %ebx;je  <.text+>;imull $, (%ebp), %ebp;bound (%ebp), %esi": 1,
                "popal;jb  <.text+>;popal;bound (%ebp), %ebp;addb %cl, (%edi)": 1,
                "incl %ebx;decl %ecx;incl %esp;addb %al, (%eax);addb (%di), %cl": 1,
                "jb  <.text+>;addb %al, %gs:(%eax);addl $, %eax;jo  <.text+>;insb %dx, %es:(%edi)": 1,
                "insl %dx, %es:(%edi);je  <.text+>;jb  <.text+>;addb %dh, (%ebx);popal": 1,
                "jae  <.text+>;decl %ebp;jne  <.text+>;js  <.text+>;addb %bl, (%ebp)": 1,
                "je  <.text+>;pushl $;decl %ecx;addb %al, %fs:(%eax);filds (%ecx)": 1,
                "pushl %ebx;insl %dx, %es:(%edi);popal;jo  <.text+>;outsl (%esi), %dx": 2,
                "jo  <.text+>;outsl (%esi), %dx;jb  <.text+>;addb %al, (%eax);imull $, (%eax), %eax": 1,
                "addb %al, (%esi);outsb (%esi), %dx;decl %esi;js  <.text+>;incl %esi": 1,
                "pushl %eax;jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;addb %al, (%eax)": 1,
                "decl %esp;outsl (%esi), %dx;popal;pushl %edx;jae  <.text+>": 1,
                "arpl %sp, (%ebp);addb %dl, (%edx,%eax);jns  <.text+>;jb  <.text+>;outsl (%esi), %dx": 1,
                "outsb (%esi), %dx;arpl %sp, (%ebp);outsl (%esi), %dx;jne  <.text+>;je  <.text+>": 1,
                "bound (%ebp), %ebp;incl %ebx;addb %al, (%eax);larl (%ebx), %edx;insb %dx, %es:(%edi)": 1,
                "addb %al, (%eax);larl (%ebx), %edx;insb %dx, %es:(%edi);arpl %si, %gs:(%edi,%ecx,);pushl $": 1,
                "pushl $;arpl %si, (%eax,%eax);movw (%ecx), %es;incl %edi;je  <.text+>": 1,
                "jo  <.text+>;outsl (%esi), %dx;addb %al, %gs:(%eax);testl $, (%ecx);popal": 1,
                "outsl (%esi), %dx;addb %al, %gs:(%eax);testl $, (%ecx);popal;outsb (%esi), %dx": 1,
                "imull $, (%esi), %ebp;incl %eax;addb (%ebx), %dl;outsb (%esi), %dx;decl %ebp": 1,
                "decl %ebp;jae  <.text+>;popal;pushl %edi;addb %al, (%eax)": 2,
                "addb %al, (%eax);addb %al, (%edx);pushl %eax;outsl (%esi), %dx;jae  <.text+>": 1,
                "addb %al, (%edx);pushl %eax;outsl (%esi), %dx;jae  <.text+>;decl %ebp": 1,
                "arpl %si, (%eax,%eax);addb (%ebx), %dl;jb  <.text+>;outsb %gs:(%esi), %dx;pushl %esp": 1,
                "incl %edx;imull $, (%ebp,%ebp,), %esi;addb %al, (%edi);je  <.text+>;insb %dx, %es:(%edi)": 1,
                "jae  <.text+>;incl %esp;incl %ebx;addb %dl, (%ebx);popal": 1,
                "addb %bl, (%edx);incl %edi;je  <.text+>;jns  <.text+>;incl %ebx": 1,
                "addb %al, (%eax);incl %edx;addl %eax, (%edi);je  <.text+>;js  <.text+>": 1,
                "insl %dx, %es:(%edi);addb %bl, %cl;addb (%edi), %dh;jo  <.text+>;imull $, (%esi), %ebp": 1,
                "je  <.text+>;pushl %edi;addb %al, (%eax);stosl %eax, %es:(%edi);addl %ecx, (%ecx)": 1,
                "outsl (%esi), %dx;jb  <.text+>;jb  <.text+>;jne  <.text+>;pushl %edi": 1,
                "jb  <.text+>;jne  <.text+>;pushl %edi;imull $, (%esi), %ebp;addb %al, (%ebp)": 1,
                "decl %ecx;arpl %bp, (%edi);decl %ecx;outsb (%esi), %dx;imull $, %fs:(%edx), %esi": 1,
                "addb %ah, (%esi);pushl %ebx;je  <.text+>;popal;jb  <.text+>": 1,
                "pushl %edx;arpl %si, %gs:(%eax,%eax);movb (%ecx), %al;decl %ecx;outsb (%esi), %dx": 1,
                "pushl %edx;arpl %si, %gs:-(%eax,%eax);addl %ecx, (%edi,%ebp,);decl %ecx;arpl %bp, (%edi)": 1,
                "insl %dx, %es:(%edi);outsl (%esi), %dx;jbe  <.text+>;decl %ebp;outsb %gs:(%esi), %dx": 1,
                "je  <.text+>;outsb %gs:(%esi), %dx;jne  <.text+>;movl $, %esi;decl %ecx": 1,
                "outsb %gs:(%esi), %dx;jne  <.text+>;movl $, %esi;decl %ecx;insl %dx, %es:(%edi)": 1,
                "decl %ecx;insl %dx, %es:(%edi);popal;pushl %edi;addb %al, (%eax)": 1,
                "outsl (%esi), %dx;imull $, (%edi), %edx;outsl %fs:(%esi), %dx;ja  <.text+>;decl %eax": 1,
                "insl %dx, %es:(%edi);pushl %eax;outsl (%esi), %dx;imull $, (%esi), %ebp;pushl %edi": 1,
                "jne  <.text+>;jae  <.text+>;jb  <.text+>;outsl (%esi), %dx;jae  <.text+>": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;pushl %edi;addb %dl, (%ecx);je  <.text+>": 1,
                "addb %al, %dl;addb %al, (%ebp);popal;bound (%ebp), %ebp;outsb %gs:(%esi), %dx": 1,
                "outsb %gs:(%esi), %dx;jne  <.text+>;addb %dh, (%edx);addl %eax, (%edi);je  <.text+>": 1,
                "addb %dh, (%ebx);addl %eax, (%edi);je  <.text+>;outsb %gs:(%esi), %dx;jne  <.text+>": 1,
                "jo  <.text+>;imull $, (%esi), %ebp;outl %eax, $;incl %esi;insb %dx, %es:(%edi)": 1,
                "jae  <.text+>;insl %dx, %es:(%edi);pushl %eax;popal;jb  <.text+>": 1,
                "js  <.text+>;addl $, (%edx);je  <.text+>;imull $, (%esi), %ebp;jae  <.text+>": 1,
                "incl %edi;je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;imull $, (%edi,%ebp,), %esi": 1,
                "imull $, (%edi,%ebp,), %esi;pushl %edi;imull $, (%esi), %ebp;addb (%ebp), %dl;jb  <.text+>": 1,
                "cltd;addb %al, (%ebp);je  <.text+>;outsl (%esi), %dx;jns  <.text+>": 1,
                "imull $, (%esi), %ebp;addb (%ebx), %dl;outsl (%esi), %dx;ja  <.text+>;imull $, (%esi), %ebp": 1,
                "incl %esp;imull $, (%ecx), %esp;jb  <.text+>;insl %dx, %es:(%edi);pushl %edi": 1,
                "imull $, (%ecx), %esp;jb  <.text+>;insl %dx, %es:(%edi);pushl %edi;addb %al, (%eax)": 1,
                "pushw %di;imull $, (%esi), %ebp;outsl (%esi), %dx;arpl %dx, (%edi);addb %cl, %cl": 1,
                "popal;jo  <.text+>;jne  <.text+>;addb %al, %gs:(%eax);incb (%ecx)": 1,
                "pushl %ebp;pushl %ebx;incl %ebp;pushl %edx;xorl (%edx), %esi": 1,
                "lodsl (%esi), %eax;addb $, %al;popal;jne  <.text+>;insb %dx, %es:(%edi)": 1,
                "je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;incl %esi;imull $, (%ebp), %ebp": 2,
                "popal;decl %esp;imull $, (%ebx), %esi;decl %ecx;insl %dx, %es:(%edi)": 1,
                "jae  <.text+>;addb %bl, %fs:(%ebp);decl %ecx;outsb (%esi), %dx;imull $, (%ebx,%eax,), %esi": 1,
                "outsb (%esi), %dx;je  <.text+>;outsl (%esi), %dx;insb %dx, %es:(%edi);jae  <.text+>": 1,
                "addb %al, ;popal;je  <.text+>;pushl %eax;jb  <.text+>": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %al, (%eax);lodsl (%esi), %eax;addb %dl, (%ebx)": 1,
                "je  <.text+>;popal;insb %dx, %es:(%edi);insb %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;arpl %ax, (%eax);movl $, %ebp;je  <.text+>;popal": 1,
                "movl $, %ebp;je  <.text+>;popal;je  <.text+>;incl %esi": 1,
                "je  <.text+>;jo  <.text+>;arpl %bp, (%ecx);insb %dx, %es:(%edi);incl %esi": 1,
                "decl %eax;incl %edi;je  <.text+>;outsl (%esi), %dx;insb %dx, %es:(%edi)": 1,
                "addb %dl, (%ecx);addb %dl, (%edi);je  <.text+>;insb %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;outsb (%esi), %dx;arpl %si, %gs:(%ecx,%ebp,);outsb (%esi), %dx": 3,
                "pushl %edx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %cl, (%eax,%eax);incl %edi": 1,
                "jbe  <.text+>;incl %esi;imull $, (%ebp), %ebp;addb %al, (%eax);orb (%eax), %al": 1,
                "je  <.text+>;jb  <.text+>;jb  <.text+>;outsb (%esi), %dx;jne  <.text+>": 1,
                "je  <.text+>;imull $, (%ebx), %esi;incl %edi;je  <.text+>;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;outsw (%esi), %dx;addb %cl, (%esi);pushl %esp;incl %ecx": 1,
                "xorl (%edx), %esi;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %al, (%eax);ljmpl $, $": 1,
                "je  <.text+>;imull $, (%esi), %ebp;pushl %ebp;jne  <.text+>;incl %esi": 1,
                "popal;jae  <.text+>;decl %ebp;insl %dx, %es:(%edi);incl %esi": 1,
                "jne  <.text+>;addb %al, %fs:(%eax);outsl (%esi), %dx;insb %dx, %es:(%edi);xorl %gs:(%edx), %esi": 1,
                "jne  <.text+>;incl %edi;je  <.text+>;imull $, (%esi), %ebp;pushl %edi": 1,
                "insb %dx, %es:(%edi);addb %al, (%eax);sbbl $, %eax;pushl %eax;jb  <.text+>": 1,
                "addb %ah, ;decl %esi;je  <.text+>;jae  <.text+>;bound (%edx), %ebp": 1,
                "outsb (%esi), %dx;jne  <.text+>;jb  <.text+>;je  <.text+>;decl %esi": 1,
                "je  <.text+>;imulw $, (%ebx), %sp;outsl (%esi), %dx;outsb (%esi), %dx;addb %cl, (%eax)": 1,
                "jo  <.text+>;popal;je  <.text+>;decl %esi;je  <.text+>": 1,
                "outsl (%esi), %dx;jb  <.text+>;sbbl $, %eax;arpl %si, (%esi,%ecx,);insl %dx, %es:(%edi)": 1,
                "imull $, (%edi), %ebp;addb %cl, (%ecx);outsb %gs:(%esi), %dx;je  <.text+>;jns  <.text+>": 1,
                "je  <.text+>;addb %al, (%eax,%eax);je  <.text+>;je  <.text+>;jae  <.text+>": 1,
                "decl %ecx;decl %edi;jo  <.text+>;imull $, (%edi), %ebp;addb %al, (%edx)": 1,
                "incl %ebx;decl %esp;pushl %ebp;pushl %ebx;incl %ecx": 1,
                "je  <.text+>;insb %dx, %es:(%edi);outsl (%esi), %dx;pushl %ebx;je  <.text+>": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %al, (%eax);addb %dl, (%ebx);arpl %ax, (%edi)": 1,
                "addb %dl, (%ebx);arpl %ax, (%edi);je  <.text+>;js  <.text+>;pushl %eax": 1,
                "jb  <.text+>;incl %ebx;outsl (%esi), %dx;outsb (%esi), %dx;je  <.text+>": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;je  <.text+>;js  <.text+>;addb %al, (%eax)": 1,
                "popl %ecx;pushl %ebx;pushl %ebx;incl %ebp;pushl %esp": 1,
                "je  <.text+>;incl %eax;incl %eax;popl %ecx;incl %edi": 1,
                "addb %dl, %gs:(%eax);addb (%edi), %bl;jp  <.text+>;je  <.text+>;addb %ah, %cl": 1,
                "je  <.text+>;addb %ah, %cl;addb (%ebp), %ch;je  <.text+>;insl %dx, %es:(%edi)": 1,
                "addb %bl, (%edi);outsl %fs:(%esi), %dx;jo  <.text+>;outsb (%esi), %dx;addb %dh, (%esi)": 1,
                "ja  <.text+>;incl %ecx;arpl %sp, (%ebp);scasb %es:(%edi), %al;addb %al, (%ebp)": 1,
                "addl %edx, (%edx);incl %ebx;outsl (%esi), %dx;outsb (%esi), %dx;outsb (%esi), %dx": 1,
                "pushl %edx;decl %esp;outsl (%esi), %dx;popal;decl %ebx": 1,
                "decl %ebx;jns  <.text+>;addb %dh, %ah;addl %edx, (%edx);pushl %edx": 1,
                "jb  <.text+>;jo  <.text+>;incl %esi;imull $, (%ebp), %ebp;incl %ebp": 1,
                "outsb (%esi), %dx;arpl %si, (%edx);jo  <.text+>;incl %esi;imull $, (%ebp), %ebp": 5,
                "outsb (%esi), %dx;outsb %gs:(%esi), %dx;je  <.text+>;jb  <.text+>;imull $, (%ebx), %esp": 1,
                "addl %edx, (%edx);popal;incl %ebp;outsb (%esi), %dx;arpl %si, (%edx)": 1,
                "imull $, (%ebp), %ebp;pushl $;incl %edi;je  <.text+>;outsl (%esi), %dx": 1,
                "pushl %ebx;je  <.text+>;imull $, (%esi), %ebp;addl %eax, (%edi);je  <.text+>": 1,
                "outsb (%esi), %dx;decl %edi;incw %si;imull $, (%ebp), %ebp;je  <.text+>": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;addb %dh, (%eax,%eax);pushl %esp;popal": 1,
                "popal;jo  <.text+>;addb %bl, (%ebp);je  <.text+>;pushl %esp": 1,
                "je  <.text+>;jb  <.text+>;addb %al, (%edx,%eax);popal;jb  <.text+>": 1,
                "je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;addb %al, (%eax);incl %edi": 1,
                "arpl %bp, (%ebx);jo  <.text+>;popal;addb %al, %fs:(%eax);adcb %al, (%eax)": 1,
                "je  <.text+>;decl %eax;popal;jb  <.text+>;decl %esp": 1,
                "decl %esi;popal;insl %dx, %es:(%edi);pushl %edi;addb %cl, ": 1,
                "jo  <.text+>;jae  <.text+>;incl %esi;imull $, (%ebp), %ebp;addb %al, (%eax)": 1,
                "movb $, %dh;pushl %edx;insl %dx, %es:(%edi);outsl (%esi), %dx;jbe  <.text+>": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                ".text": 1,
                "`.data": 1,
                ".rsrc": 1,
                "MFC42u.DLL": 2,
                "msvcrt.dll": 2,
                "ADVAPI32.dll": 2,
                "KERNEL32.dll": 2,
                "NTDLL.DLL": 1,
                "GDI32.dll": 2,
                "USER32.dll": 2,
                "COMCTL32.dll": 2,
                "SHELL32.dll": 2,
                "MPR.dll": 2,
                "comdlg32.dll": 2,
                "NETAPI32.dll": 2,
                "RPCRT4.dll": 2,
                "ole32.dll": 2,
                "SETUPAPI.dll": 2,
                "USERENV.dll": 2,
                "NTMSAPI.dll": 2,
                "CLUSAPI.dll": 2,
                "query.dll": 2,
                "sfc_os.dll": 2,
                "SYSSETUP.dll": 2,
                "OLEAUT32.dll": 2,
                "VSSAPI.DLL": 2,
                "z=wV~=w~S>w": 2,
                "U>wPQ>w": 2,
                "|Mcr/Mcr[Lcr;2cr": 1,
                "+crF*cr": 1,
                ")crWBcr": 1,
                ":cr:;cr3:crT5crk6cr|Dcr": 1,
                "2crd&crn&cr": 1,
                "&cr,=cr": 1,
                "Hcrd&cr": 1,
                "A~\"xB~": 1,
                "B~nCB~": 1,
                "B~4qE~": 1,
                "B~4eF~": 1,
                "B~6xB~": 1,
                "#;v+|<v": 1,
                "CBChildFrame": 1,
                "NtFrsApiGetBackupRestoreSetPaths": 1,
                "NtFrsApiGetBackupRestoreSetDirectory": 1,
                "NtFrsApiIsBackupRestoreSetASysvol": 1,
                "NtFrsApiEnumBackupRestoreSets": 1,
                "NtFrsApiGetBackupRestoreSets": 1,
                "NtFrsApiDestroyBackupRestore": 1,
                "NtFrsApiInitializeBackupRestore": 1,
                "CBackupDoc": 1,
                "CRestoreDoc": 1,
                "CScheduleDoc": 1,
                "CUIDocument": 1,
                "CWizardDoc": 1,
                "SRSetRestorePointW": 1,
                "CFileDeviceDlg": 1,
                "CFormBackup": 1,
                "CFormMain": 1,
                "CFormRest": 1,
                "CFormTabChild": 1,
                "CFormList": 1,
                "CFormSchedule": 1,
                "CFormTree": 1,
                "CFormWizard": 1,
                "CHelpDialog": 1,
                "CMainFrame": 1,
                "CWiz97Page": 1,
                "CWiz97Sheet": 1,
                "HEADERQIC113": 1,
                "CONNER SOFTWARE - CATALOG FILE": 1,
                "HrRestoreEnd": 1,
                "HrRestoreGetDatabaseLocationsW": 1,
                "HrRestoreRegisterComplete": 1,
                "HrRestoreRegisterW": 1,
                "HrRestorePrepareW": 1,
                "BackupFree": 1,
                "HrBackupEnd": 1,
                "HrBackupTruncateLogs": 1,
                "HrBackupGetBackupLogsW": 1,
                "HrBackupOpenFileW": 1,
                "HrBackupClose": 1,
                "HrBackupRead": 1,
                "HrBackupGetDatabaseNamesW": 1,
                "HrBackupPrepareW": 1,
                "SisFreeAllocatedMemory": 1,
                "SisFreeRestoreStructure": 1,
                "SisRestoredCommonStoreFile": 1,
                "SisRestoredLink": 1,
                "SisCreateRestoreStructure": 1,
                "SisFreeBackupStructure": 1,
                "SisCSFilesToBackupForLink": 1,
                "SisCreateBackupStructure": 1,
                "ImportTlsDatabaseC": 1,
                "HrESERestoreCloseFile": 1,
                "HrESERestoreWriteFile": 1,
                "HrESERestoreOpenFile": 1,
                "HrESERestoreComplete": 1,
                "HrESERestoreSaveEnvironment": 1,
                "ESERestoreFreeEnvironment": 1,
                "HrESERestoreGetEnvironment": 1,
                "HrESERestoreAddDatabaseNS": 1,
                "HrESERestoreAddDatabase": 1,
                "HrESERestoreClose": 1,
                "HrESERestoreReopen": 1,
                "HrESERestoreOpen": 1,
                "HrESEBackupTruncateLogs": 1,
                "HrESEBackupCloseFile": 1,
                "HrESEBackupReadFile": 1,
                "HrESEBackupOpenFile": 1,
                "ESEBackupFree": 1,
                "HrESEBackupGetLogAndPatchFiles": 1,
                "HrESEBackupGetDependencyInfo": 1,
                "HrESEBackupEnd": 1,
                "HrESEBackupInstanceEnd": 1,
                "HrESEBackupSetup": 1,
                "ESEBackupRestoreFreeRegisteredInfo": 1,
                "ESEBackupFreeInstanceInfo": 1,
                "HrESEBackupPrepare": 1,
                "HrESEBackupRestoreGetRegistered": 1,
                "ESEBackupRestoreFreeNodes": 1,
                "HrESEBackupRestoreGetNodes": 1,
                "DsRestoreEnd": 1,
                "DsRestoreRegisterComplete": 1,
                "DsRestoreRegisterW": 1,
                "DsRestorePrepareW": 1,
                "DsRestoreGetDatabaseLocationsW": 1,
                "DsBackupEnd": 1,
                "DsBackupFree": 1,
                "DsBackupTruncateLogs": 1,
                "DsBackupClose": 1,
                "DsBackupRead": 1,
                "DsBackupOpenFileW": 1,
                "DsBackupGetBackupLogsW": 1,
                "DsBackupGetDatabaseNamesW": 1,
                "DsBackupPrepareW": 1,
                "DsIsNTDSOnlineW": 1,
                "HrIsNTDSOnlineW": 1,
                "CertSrvServerControlW": 1,
                "HrCertServerControlW": 1,
                "CertSrvBackupGetDynamicFileListW": 1,
                "HrBackupGetDynamicFileListW": 1,
                "CertSrvRestoreEnd": 1,
                "CertSrvRestoreRegisterComplete": 1,
                "CertSrvRestoreRegisterW": 1,
                "CertSrvRestorePrepareW": 1,
                "CertSrvRestoreGetDatabaseLocationsW": 1,
                "CertSrvBackupEnd": 1,
                "CertSrvBackupFree": 1,
                "CertSrvBackupTruncateLogs": 1,
                "CertSrvBackupClose": 1,
                "CertSrvBackupRead": 1,
                "CertSrvBackupOpenFileW": 1,
                "CertSrvBackupGetBackupLogsW": 1,
                "CertSrvBackupGetDatabaseNamesW": 1,
                "CertSrvBackupPrepareW": 1,
                "CertSrvIsServerOnlineW": 1,
                "HrIsCertServerOnlineW": 1,
                "MSSQL   ": 1,
                "RegDBRestore": 1,
                "RegDBBackup": 1,
                "This is padding!! ": 1,
                "hhctrl.ocx": 1,
                "CLSID\\{ADB880A6-D8FF-11CF-9377-00AA003B7A11}\\InprocServer32": 1,
                "<5IkQ": 3,
                "RSDSWi)z<": 1,
                "ntbackup.pdb": 1,
                "HtAHt1Ht!Ht": 1,
                "3jQ[j": 1,
                "t<Ht-Ht": 1,
                "HtSHtLHtEHt>j": 1,
                "FpPha": 1,
                "FtPhf": 1,
                "FxPhr": 1,
                "9~xt(WWj0j": 1,
                "tAf9}": 1,
                "t'h\\ ": 1,
                "SVWjPh": 1,
                "uWWSj": 1,
                "2~@j2": 1,
                "t!WWj j": 1,
                "WWj j": 1,
                "@_^[]": 3,
                "Sj2Y3": 1,
                "tM9xhuH": 1,
                "t<It-It": 2,
                "TSVW3": 2,
                "u)SSj0Sh": 1,
                "SSj0Sh": 4,
                "Sj0Sh": 8,
                "9\\8 u+": 1,
                ",SVW3": 1,
                "2Vj\\S": 2,
                "YYj.S": 3,
                "u%SSj": 2,
                "2~Uj2": 2,
                "QPRWWSS": 1,
                "~H~=S3": 1,
                "SPj7h": 1,
                "8SVWj": 1,
                "FlSHP": 1,
                "FpHPS": 1,
                "t{Ht+H": 1,
                "%tfHtEHt-Ht": 1,
                "tKHHt": 1,
                "9N@t*": 1,
                "tsHtiHt/Huw": 1,
                "K9N@t&": 1,
                "tAHt-Ht": 1,
                "#9N@t": 1,
                "QPh|A": 1,
                "J9FHtE3": 1,
                "SVWj%": 1,
                "FFVhx=": 1,
                "SSSh8B": 3,
                "(SVW3": 1,
                "tjj%W": 1,
                "SSSj@": 2,
                "YYt;F;s": 2,
                ";C u\\": 1,
                "~,Wh ": 1,
                "@SVWj": 1,
                "NHPQSS": 1,
                "FLHPS": 1,
                "FHSHP": 1,
                "FLHPj": 1,
                "A@Q@P": 2,
                "VPQBR": 1,
                "FTHHB": 1,
                "VPPBR": 1,
                "FTHHP": 1,
                "v 1FD": 2,
                "tNHtEHt8Ht(Ht": 1,
                "Ht#Ht": 1,
                "YYj.3": 1,
                "Wj0WVh": 2,
                "YKYKh": 2,
                "9^XtV": 1,
                "N\\+Nd3": 1,
                "u?VW3": 1,
                "WWj0W": 1,
                "Vt8Ht+Ht": 1,
                "tsHtcHtPHt=Ht*Ht": 1,
                "t`HtPHt@HHt/": 1,
                "uqSVW": 1,
                "jQVtPhH": 1,
                "PSSSS": 2,
                "tKHHuT": 1,
                "WPhxM": 1,
                "AAGG3": 1,
                "PSSSSSS": 2,
                "t <&t": 1,
                "QQSV3": 4,
                "QQSVW": 17,
                "C j*P": 1,
                "FTh`S": 1,
                "u<f9E": 1,
                "u6f9E": 1,
                "@nRQP": 1,
                "j<Yj<": 3,
                "@9F t": 1,
                "2~Fj2": 1,
                "Ht\"Ht": 3,
                "f9_xt": 1,
                "SSj@SPh-": 1,
                "@@WPh+": 1,
                "tbSVW": 1,
                "upSWj@j": 1,
                "SWj@Whn": 1,
                "FVWj@V": 2,
                "f9~xt": 3,
                "f9~tt": 5,
                "N8QPh": 2,
                "WWj0j": 3,
                "@(YWP": 1,
                "WWj@j": 4,
                "f9~|t": 3,
                "QWWj0j": 1,
                "YYWWj0j": 1,
                "WWj0Wh.": 1,
                "tnWWj0Wh}": 1,
                "YWWj0W": 1,
                "WWj@V": 1,
                "FVSj0ShI": 1,
                "t*SSS": 2,
                "WSj@j": 4,
                "<SShK": 1,
                "t'SSSf": 1,
                "t)95t": 1,
                "uo95x": 1,
                "ItMItJIt": 1,
                "pff95": 1,
                "t?Hu[S": 1,
                "\"WWj@j": 1,
                "t(h~N": 1,
                "t'h}N": 1,
                "t$h|N": 1,
                "QQj@QPh": 1,
                "t-VVV": 1,
                "HtMHt": 1,
                "P:f;Q:u": 1,
                "P4;Q4u": 1,
                "WWj0WVh": 1,
                "WWj@WVh&": 1,
                "t#f9Cxt": 1,
                "f9Cxt": 1,
                "RVQPWj": 1,
                "PRQWj": 1,
                "uG95|": 1,
                "Ht1Ht": 1,
                "uXSSS": 1,
                "4SSj@SVh": 1,
                "SSj@Sh": 1,
                "@L9x8f": 1,
                "t7SSS": 1,
                "HuASSj@Sh,": 1,
                "u\"SSj@Sh'": 1,
                "SSj@Sh,": 1,
                "9F@@f98": 2,
                "@nSWPVRQ": 1,
                "0@@f90u": 1,
                "7GGf97u": 1,
                "fIf9H8u\"SSj@j": 1,
                "SSj@j": 3,
                "fIf9H8u": 1,
                "SSj0j": 2,
                "Ft99}": 1,
                "VWj:S": 1,
                "t;f=\\": 1,
                "Yu'9E": 1,
                "@` tx": 1,
                "YYt:j": 1,
                "WWj0WSh": 1,
                "t2f;=": 1,
                "f9^8to": 1,
                "WSj@Wh2": 1,
                "BB@@;": 1,
                "f9Xxt": 1,
                "tJjdP": 1,
                "SPWVh,": 1,
                "u$Vh,": 4,
                "Ht}HHuy": 1,
                "t\"SSS": 1,
                "t,SSS": 1,
                "WRQWP": 1,
                "HtKHt9Ht\"": 1,
                "@xjPP": 1,
                "VVj@j": 2,
                "PPj0Ph": 1,
                ",SVj0": 1,
                "t2VVV": 1,
                "t4VVV": 1,
                "VVj0Vh": 2,
                "G:YYPj": 1,
                "tFHtC": 1,
                "u\"f9K8v": 1,
                "WWj0Wh": 1,
                "t:HHt0": 1,
                "t'HHt": 1,
                "YYtIP": 1,
                "u>WVj": 1,
                "PWVh2": 1,
                "SSj0Sf": 3,
                "PSSSSh ": 1,
                "j~j}h": 1,
                "tQ9~ tLS": 1,
                "Sj(WWj": 2,
                "Sj&WWj ": 2,
                "Sj4WW": 1,
                "Sj4WWh": 2,
                "t4Ht$Ht": 1,
                "tW9_ tR": 1,
                "WSjAj": 1,
                "Sj4WWj ": 1,
                "QPh0s": 1,
                "E tgWh": 1,
                "E _^[]": 1,
                "F$HHP": 2,
                "F(HHP": 2,
                "v HHP": 1,
                "SVj@Vjxh,N": 1,
                "tZHt)Ht": 1,
                " t?Ht-Ht": 1,
                "VVVVVj": 2,
                "F;0w@": 1,
                "twHtoHt[": 1,
                "t4HuxWj": 1,
                "u\"9~4u": 1,
                "HtXHt": 2,
                "tjHt8Ht$Ht": 1,
                "N\\SPQ": 1,
                "tNHtFHt2": 1,
                "9~`u/": 1,
                "G9~`u": 1,
                "z9~`u.": 1,
                "u0PPj": 1,
                "Ht HHu": 1,
                "C9^|u>SS": 1,
                "!Hh!Hd!Hl": 1,
                "!ph!pl^3": 1,
                "B;P`|": 1,
                "H ;NXt": 1,
                "tBHt:Ht2": 1,
                "&tISSj0h": 1,
                ",SSj0h": 1,
                "Yt#VS": 1,
                "QSVW3": 6,
                "t?9~4u": 1,
                "P,SW3": 1,
                "QQSVW3": 3,
                "t(Ht Ht": 1,
                "vSh\\ ": 1,
                "#u,jX": 1,
                "Ht8Ht)Ht": 1,
                "{xWWV": 1,
                "HHt(Ht!Ht": 1,
                ">\\u f": 1,
                "t*Ht ": 1,
                "F1Ht-Ht#Ht": 1,
                "SSSh?N": 1,
                "uPC9}": 1,
                "9~4u ": 1,
                "t@9~4u;": 1,
                "9~4uI": 1,
                "{<#u/": 1,
                "0t@jl": 1,
                "6SWVj&": 1,
                "um9=xl": 1,
                "9~Dtfj": 1,
                "Wj0Wh": 7,
                "9~DtCj": 1,
                "9~Dt-j": 1,
                "9~4u9j": 1,
                "YY_^[]": 1,
                "t\\SVW": 1,
                "j Vh! ": 1,
                "O j>j": 1,
                "H j=j": 1,
                "YYt6;": 1,
                "YYt7WWW": 1,
                "YYt4h": 1,
                "YYtIhh": 1,
                "YYt9WWW": 1,
                "N jBW": 1,
                "N jCW": 1,
                "YYj [S": 2,
                "u*h\\ ": 1,
                "pSVW3": 1,
                "tgHt@H": 1,
                "N j6S": 1,
                "N j4S": 1,
                "u,h\\ ": 1,
                "H ;N u": 2,
                "u'9^$t": 1,
                "tQh\\ ": 1,
                "SSj0S": 1,
                "tBWhL+": 1,
                "Wf9^<": 1,
                "f9X<t4h": 1,
                "YYu-h": 1,
                "YYu=f9=<": 1,
                "SVWj?": 1,
                "F(PSWWWW": 1,
                "w't>=N": 1,
                "YYt +": 1,
                " uPVj": 1,
                "F95X=": 1,
                "Y[^_]": 1,
                "f97YY": 1,
                "VVVht": 1,
                "PSVh`": 1,
                "SSj@S": 1,
                "GP;pHtN": 1,
                "t%PPj0j": 1,
                "Sj@Shn": 3,
                "w*tA=N": 1,
                "%CQMB@": 1,
                "@ ;C uZ": 1,
                "@ ;F uH": 1,
                "YYt&9": 1,
                "t,WWj0j": 2,
                "hHSLF": 1,
                "HSLFW": 1,
                "NL;H4u": 2,
                "Wj@Whn": 1,
                "hTWSM": 2,
                "hTWSMh": 1,
                "PSPVPh": 1,
                "~&SWV": 2,
                "~)SWV": 3,
                "~'SWV": 4,
                "~*SWV": 4,
                "SVWjPhx?": 1,
                "~)j<WV": 1,
                "~)Sht": 1,
                "~)ShX": 1,
                "~)Sh@": 1,
                "@bPhx": 1,
                "~\"SWV": 1,
                "jdYf;": 1,
                "~,SWV": 1,
                "FpPhK": 1,
                "HHt\\Ht": 1,
                "uNjEY": 1,
                "VVj0t>j": 1,
                "HHtW-": 1,
                "tlVVj": 1,
                "ttQQj": 1,
                "tuWWj": 1,
                "WVSSS": 1,
                "QSVWj": 3,
                "wH@_^[": 1,
                "PSSSSSSh'": 1,
                "PSSSSSSh ": 1,
                "VWjFYj": 1,
                "WjFYj": 1,
                "Ht(Ht": 1,
                "VSj0Sh": 1,
                "PPj#P": 1,
                "O hhS": 2,
                "N hhS": 2,
                "@hHt_Ht": 1,
                "@ ;C u/j": 2,
                "@ ;F uWj": 2,
                "@ ;C uSj": 2,
                "PWSh|": 1,
                "@ hhS": 1,
                "t/f9X": 1,
                "YYf9u": 1,
                "Vj0Vh": 1,
                "Vj@Vh": 2,
                "K hhS": 2,
                "VWh(Y": 1,
                "F Sh-": 1,
                "N j2S": 1,
                "t;f9>u": 1,
                "tBWWj": 1,
                "YYt<;u": 1,
                "tpj\\P": 1,
                "YYta@@t]P": 1,
                "Q1f;U": 1,
                "u#9A$u": 1,
                "t?Ht3Ht'Ht": 1,
                "j Vhs": 1,
                "t+9=$[": 1,
                "X_^[]": 1,
                "tbj\\W": 1,
                "u%VVj": 1,
                "vj\\_f;": 1,
                "AACCF3": 1,
                "YYtPP": 1,
                "t4VVj": 1,
                "G<jPP": 2,
                "u\"SSS": 1,
                "x<jPW": 1,
                "uASSS": 1,
                "tZNtHNt6Nt$Nt": 1,
                "Vu3jP": 1,
                "YYG;}": 1,
                "j@Yf;": 1,
                "f9Zxt": 1,
                "f9Ztt": 1,
                "^LSt!": 1,
                "HttHtd": 1,
                "Ht\\HtUHtNHtGj": 1,
                "tlHteHtHHu_": 1,
                "VWShAE": 1,
                "@hHt)": 1,
                "/SSj@h": 1,
                "u;hiN": 1,
                "XSVW3": 2,
                "^hSh4": 1,
                "FlPhA": 1,
                "FpPh@": 1,
                "FtPh5": 1,
                "FxPh6": 1,
                "F|Ph7": 1,
                "udWh9": 1,
                "YYu)f": 1,
                "Sj@Sh0": 1,
                "FhPh4": 1,
                "FlPh#": 1,
                "FpPhi": 1,
                "FtPh8": 1,
                "CCf93u": 1,
                "t#Wh4": 1,
                "Pj@PhMN": 1,
                "Wj@Wh": 6,
                "t?SVj": 1,
                "$SVh$": 1,
                "Sj0She": 1,
                "9\\8 u": 1,
                "Wjdje": 1,
                "C98u.": 1,
                "N099t": 1,
                "G8;^(s": 1,
                "t';X4u": 1,
                "PL_^[": 1,
                "G\\;pHt>": 1,
                "t)SSj0j": 1,
                "HHtbHHt^": 1,
                "9~`t4": 1,
                "t4Ht*-": 1,
                "u`Sh&": 1,
                "t1Ht&Ht": 1,
                "t?HuA": 1,
                "~p[_^": 1,
                "F`~+W": 1,
                "SSSSS": 3,
                "XPVWW": 1,
                "t%Vhl|": 1,
                "u'WSj@j": 1,
                "YYt`Wh": 1,
                "f;C2u": 2,
                "YYt%V": 1,
                "CC9FPv": 1,
                "FT;GTw": 1,
                "!BD!BL": 1,
                "!BH!BD": 1,
                "hSVW3": 1,
                "jWX_^[": 1,
                "tVf9]": 1,
                "u.f9]": 1,
                "tEWSj@j": 1,
                "VVj0VPh": 1,
                "8_^[]": 1,
                "Y_^[]": 4,
                "t,SVW": 1,
                "YYtCV": 1,
                "G ;F,u": 1,
                "9H u*": 1,
                "tJSVW": 1,
                "-_^[u": 1,
                "t~9=Pl": 1,
                "tv9=Ll": 1,
                "tn9=Tl": 1,
                "tf9=Dl": 1,
                "t^9=@l": 1,
                "B0RVf": 1,
                "f+p8f": 1,
                "YY^[]": 1,
                "F0f9E": 1,
                "A0HHt": 2,
                "t09^$t+9^(t&;": 1,
                "t\"9^`t": 1,
                ";FDub": 1,
                ";FLu<": 1,
                "f9^0t": 1,
                "F,SWP3": 1,
                "f;Q0t": 1,
                "9sluOf9s0tIVV": 1,
                "^ 9^$t": 1,
                "^$9^(t": 1,
                "~ 9~$t": 1,
                "~$9~(t": 1,
                "K> 9uXt": 1,
                "K= 9u\\t": 1,
                "K=@9ult": 1,
                "w0f9w,t": 1,
                "K<@f9w0u": 1,
                "@f9w0": 1,
                "F:VWf": 1,
                "Af9~J": 1,
                "u-f9y": 1,
                "9P t(f": 1,
                "/Vj\\W": 1,
                "t3HuV": 1,
                "VVWVP": 1,
                "t^Hut": 1,
                "tD95\\": 1,
                "u0VVVVV": 1,
                "t|95\\": 1,
                "ut95`": 1,
                "tRHu`": 1,
                "t8Hua9": 1,
                "PWWWWh ": 1,
                "PSAPQ": 1,
                "t297u.": 1,
                "t9Hu\\": 1,
                ";8u(f;": 1,
                "VVVVj": 1,
                "YY_[^]": 1,
                "~<t99": 1,
                "G;~Tr": 1,
                "FD@@P": 1,
                "^t#9x": 1,
                "9x u;": 1,
                "YYuZS": 1,
                "G,[t6": 1,
                "u+VVh\\ ": 1,
                "tD9{ ": 1,
                "s09>|": 1,
                "FVRWP": 1,
                "WWWh8B": 1,
                "tJf9>t8": 1,
                "tsj=V": 1,
                "YYt;j": 1,
                "0t<j\\V": 1,
                "YYt+f": 1,
                "F\\9^\\u": 1,
                "@\\9X8u": 1,
                "YYu SSh": 5,
                "YtHVW3": 1,
                "YtRVW3": 1,
                "t`SVW": 1,
                "YY^f3": 1,
                "D;,Pj": 1,
                "tCVWf": 1,
                "t0f9u": 1,
                "Pj_WR": 1,
                "t]Ht-Ht": 1,
                "1IIJOu": 1,
                "9IINJu": 1,
                "uJSSSh": 1,
                "9X<uRS": 1,
                "t-SSSP": 1,
                "u(SSSh": 1,
                "u(f9u": 1,
                "@PPSW": 1,
                "t?f9E": 1,
                "f;A:u": 1,
                "t_j/V": 1,
                "YYt,f": 1,
                "<A\\t-f": 1,
                "9H<~=S": 1,
                "YYtuSj": 1,
                "@ ;G t": 1,
                "r4f9F": 1,
                "9BAAf": 1,
                "^9s0s": 1,
                "u^f9{": 1,
                "9H u(": 1,
                "HHtT3": 1,
                "t+Ht\"Ht": 1,
                "t:SSS": 1,
                "t0f=@": 1,
                "f94Gt": 2,
                "}oj?W": 1,
                "@uKf;}": 1,
                "9N(uPf": 1,
                "f9M0t": 1,
                "u-f9E": 1,
                "QQSVh": 1,
                "f9^@t": 1,
                "PSSSj": 1,
                "Ot!Ot": 1,
                "OOubf": 1,
                "tQOt;": 1,
                "YYt0h": 1,
                "YYt\"3": 1,
                "WWWWW": 1,
                "YYulh": 1,
                "YYtlh": 1,
                "YYuHh@\\": 1,
                "YYu6h4\\": 1,
                "YYu$h$\\": 1,
                "YYtZh": 1,
                "YYumh@\\": 1,
                "YYu[h4\\": 1,
                "YYuIh$\\": 1,
                "YYu7h": 1,
                "f9^$t": 1,
                "F HSt": 1,
                "YYt)h": 1,
                "uiSSSSj": 1,
                "F$SSHPSj": 1,
                "f9^4t#": 1,
                "QPPhpA": 1,
                "t&SSS": 1,
                "f9H8t": 1,
                "9X<uX": 1,
                "Pt/f9": 1,
                "M$SVW": 1,
                "t18X1u": 1,
                "w695<": 1,
                "YYu~hX": 1,
                "YYuphL": 1,
                "YYubh<": 1,
                "YYuTh,": 1,
                "YYuFh": 1,
                "YYu8h": 1,
                "YYu*h": 1,
                "YYt!j": 2,
                "PWWh ": 1,
                "tySh\\": 1,
                "Y[_^]": 1,
                "f93tj": 1,
                "PVVh ": 1,
                "PVSVh\\ ": 1,
                "u)VVV": 1,
                "toj\\W": 1,
                "YYt f": 1,
                "@X9X$": 1,
                "@X9X,": 1,
                "PSSWSV": 1,
                "t*f9]": 1,
                "YYt$f": 1,
                "tkHtYHHt": 1,
                "f90t/Sf": 1,
                "u7VVS": 1,
                "f90t)f": 1,
                "t%9qHu": 1,
                "GT90t": 1,
                "YYtW3": 1,
                "f;F2t": 1,
                "r4;1u": 1,
                "r<f;q": 1,
                "9PHt$f9": 1,
                ">SPADu": 1,
                "HHtKHt": 1,
                "f;F2u": 3,
                "wP9_Hs": 1,
                "N0QQP": 1,
                "A$;F$u": 1,
                ";F$[u-": 1,
                "t/f9E": 1,
                "t@f9}": 1,
                "VWSuD": 1,
                "u-f9}": 1,
                "{4tWf": 1,
                "F4u%f": 1,
                "SVWjSZ": 1,
                "tJItGIt": 1,
                "It=It": 1,
                "IIuFj": 1,
                "Ox_^]": 1,
                "_t_^[": 1,
                ";:uYf": 1,
                "u%f9]": 1,
                "t/f9M": 1,
                "tRf9M": 1,
                "Ht\\Ht;H": 1,
                "f+p:f": 2,
                "f9OPt": 1,
                "f;A:t": 1,
                "taHHt": 1,
                "{D+{Hf": 1,
                "CL+{Pf": 1,
                "KP+CH": 1,
                "BP;BD": 1,
                "CHf9M": 1,
                "tTf9xXtNP": 1,
                "RQQPj": 1,
                ";{Lsh": 1,
                "HHt9H": 1,
                "QVVPj": 1,
                "P<f9u": 1,
                "9pHuY": 1,
                "f!F@^]": 1,
                "!s(!s,_^[]": 1,
                "CL_^[": 1,
                ";sd|E": 1,
                "CD_^[": 1,
                "f9<Ju": 1,
                "YY_^[": 1,
                "FDWWWW3": 1,
                "N\\WWf": 1,
                "@@f98u": 1,
                "f;Jxu": 1,
                "5wDtX": 1,
                "IItyItjII": 1,
                "|A*.t": 2,
                "|A* u": 2,
                "@@PSV": 1,
                "u=j?V": 1,
                "YYu$V": 1,
                "YY_[t": 1,
                "YYtFS": 1,
                "YY~7j": 1,
                "N\\f9y": 1,
                "PVhXJ": 1,
                "[WWWW": 1,
                "G\\9XDt69_4t19X@t,f9": 1,
                "x4NSFj": 1,
                "Y_[^]": 1,
                "tGHHt9": 1,
                " t\"HtR": 1,
                "PWSWWW": 2,
                "YYt@h": 1,
                "YYtSW": 1,
                "j\\[u\"": 1,
                "F\\9X4": 1,
                "F\\9X0": 1,
                "\"PWSV": 1,
                "9STtX": 1,
                "t'9PHu": 1,
                "tBf9]": 1,
                "t#VVVVVV": 1,
                "~jj*W": 1,
                "YYu5j?W": 1,
                "YYu&W": 1,
                "u0NNf": 1,
                "f9O@toW": 1,
                "u#WWWh": 1,
                "u)f9N": 1,
                ";WHuXf9M": 1,
                "sPf9>t": 1,
                "f94Ht": 1,
                "0VVVVVVWP": 1,
                "f98t&f": 1,
                "SSSQW": 4,
                "t.f95T": 1,
                "Ff;5T": 1,
                "YX_^[]": 1,
                "tXHt<Ht H": 1,
                "~t_^]": 1,
                "f!AXf": 1,
                "tsf9]": 1,
                "taf9M": 1,
                "F,tWf": 1,
                "t<f9}": 1,
                "t^f9E": 1,
                "f9~Nu3f9~Pu-": 1,
                "f9Q8t": 1,
                "u'SSSh": 1,
                "t19xHu": 1,
                "=CSUM": 2,
                "SPADt": 1,
                "@A@t ": 1,
                "tFf9]": 1,
                "uBj.S": 1,
                "f9X2uph": 1,
                "YYu-S": 1,
                "QPPPPh": 1,
                "u'f9M": 1,
                "QQQQh": 1,
                "VWj\\j": 1,
                "FL;F0v": 1,
                "Ff9p@t": 1,
                "f9pBt": 1,
                "YYf9]": 1,
                "YYu%S": 1,
                "VX;^H": 1,
                "SPADf": 1,
                ";sHva": 1,
                "CHPS+": 1,
                "tFf9u": 1,
                "TFDDu": 1,
                "CNf@f": 1,
                "Yu-PP": 1,
                "hTFDD": 1,
                "uYPPS": 1,
                "hTSMP": 1,
                "5j$Pf": 1,
                "t(Ht%HHt": 1,
                "C8Z\"Wu!f;": 1,
                "Gf9xp": 1,
                "F,t7f": 1,
                "G$f9E": 1,
                "C,t6f": 1,
                "F$f9}": 1,
                "C0QjLVS": 1,
                "G$f9]": 1,
                "t4f9U": 1,
                "C@tHf": 1,
                "CDtLf": 1,
                "SLtDf": 1,
                "uFf9}": 1,
                "PHf9}": 1,
                "t0f9M": 1,
                "tGf9E": 1,
                "u9f9E": 1,
                "t f9E": 1,
                "u9f9]": 1,
                "u f9U": 1,
                "f9;Y}": 1,
                ";_^[]": 1,
                "F|tuW": 1,
                "F|YYf": 1,
                "@@PVS": 1,
                "~hf;}": 1,
                ";^pY| ": 1,
                "@@BBf": 1,
                "f9X2t!3": 1,
                "f9X2t": 1,
                "f9^$s": 1,
                "X\\f9S": 1,
                "9N t;": 1,
                "WQQQQ": 1,
                "I\\f9A": 1,
                "@\\f9x": 1,
                "u!SSSh": 1,
                "t8Ht+HH": 1,
                "=XMDBt": 4,
                "=ETEDt": 3,
                "=XOLGu\\=ETED": 1,
                "u2WWWh": 1,
                "hNACL": 1,
                "Ht0Ht$Ht": 1,
                "P`f=9": 1,
                "=SPAD": 1,
                "=XOLGuV=ETED": 1,
                "=XOLG": 2,
                "=ETED": 1,
                "Qxf=@": 1,
                "t7f=?": 1,
                "CSUMf": 2,
                "CSUMt": 1,
                "?Xuy@OO": 1,
                "f9XNt": 1,
                "YYtzV": 1,
                "Wj3Y3": 1,
                "Y@Y@]": 1,
                "9A@t@f9E": 1,
                "w4u6j": 1,
                "&YYuF": 1,
                "Y_^f3": 2,
                "x0ANu": 1,
                "x0BNu": 1,
                "x0AJu": 1,
                "YYt#W": 1,
                "t%j\\P": 1,
                "=XPTHt": 1,
                "=ETEDt&f": 1,
                "C$;C,": 1,
                "C$;C,r": 2,
                "XPTHf": 2,
                "F,^f3": 1,
                "89:vH": 1,
                "C$u@f": 1,
                "C ;C(u": 1,
                "C$;C,u": 1,
                "P$;P,r": 1,
                "H ;H(u": 1,
                "H$;H,u": 1,
                "f9s8t": 1,
                "F(PQW": 1,
                "F@9F@t(": 1,
                "GGFFf": 1,
                "f9zDt": 1,
                "RWWWWQP": 1,
                "CSUMu": 1,
                "NNOO;}": 1,
                ">$u1f": 1,
                "t&h(E": 1,
                "YYj:S": 1,
                "YYtPh": 1,
                "YYu>f!": 1,
                "YYtQW": 1,
                "YYj\\W": 1,
                "XPTH9": 1,
                "=CSUMu": 1,
                "XOLGu!3": 1,
                "99>vI": 1,
                "_^[u9": 1,
                "<tHHt": 1,
                ";tNHt": 1,
                "9Z|t$": 1,
                "GABtaSS": 1,
                ">_^f3": 1,
                "BBFF;": 1,
                "YYt W": 1,
                "xXj\\V": 1,
                "YYt%S+": 1,
                "HthHtEHt,H": 1,
                "@XhPY": 4,
                "@@j\\P": 7,
                "AAj\\Q": 3,
                "YYudf": 1,
                "YY_^f": 1,
                "{zf9~,": 1,
                "u9f9U": 1,
                "f9wzf": 1,
                "~(#uV": 1,
                "f9Fxu": 1,
                "=LINK": 1,
                "uyf9C": 1,
                "tS9>u;": 1,
                "8NTED": 1,
                "=NTEDt": 1,
                "=NTED": 2,
                "=NACL": 1,
                "NTQU;": 1,
                "=OACL": 1,
                "=NTRP": 1,
                "=O2EAuW": 1,
                "=ADAT": 1,
                "@jWPj": 1,
                "=NTQUu'": 1,
                "PNAMf": 1,
                "FNAMf": 1,
                "NTQUf": 1,
                "NTEDf": 1,
                "It~It": 1,
                "f9H0t": 1,
                "uKSh8": 1,
                "w&j:h8": 1,
                "YYueS": 1,
                "pTYf3": 1,
                ":SPADu": 1,
                "SSSS+": 1,
                "YYtHh": 1,
                "YYu6f!": 1,
                "YYtNW": 1,
                "A ^_[": 1,
                "!YYtu": 1,
                "t.f;E": 1,
                "DMDBt": 1,
                "DOLGt": 1,
                "=DOLGu": 1,
                "=DMDBu": 1,
                "C$_^f": 1,
                "3PPhL": 1,
                "9FHs5": 1,
                "9FHs+": 1,
                "u$9FHs": 1,
                "+~8+~P": 1,
                "9OHs#": 3,
                "+w8+wP": 1,
                "9OHs ": 1,
                "u#9OHs": 1,
                "9FHPVs$": 1,
                "9FHPVs": 1,
                "9NHQVs": 1,
                "9~HWVs(": 1,
                "__CxxFrameHandler": 1,
                "wcslen": 1,
                "wcsrchr": 1,
                "wcscpy": 1,
                "_ftol": 1,
                "malloc": 1,
                "realloc": 1,
                "wcsncpy": 1,
                "wcscmp": 1,
                "_wcsicmp": 1,
                "swscanf": 1,
                "wcsstr": 1,
                "_wcslwr": 1,
                "swprintf": 1,
                "wcschr": 1,
                "calloc": 1,
                "wcscat": 1,
                "_wcsupr": 1,
                "memmove": 1,
                "_CxxThrowException": 1,
                "wprintf": 1,
                "wcsncat": 1,
                "_snwprintf": 1,
                "wcspbrk": 1,
                "wcsncmp": 1,
                "_except_handler3": 1,
                "_local_unwind2": 1,
                "_wcsnicmp": 1,
                "_purecall": 1,
                "_wtoi": 1,
                "isalpha": 1,
                "wcstok": 1,
                "fwrite": 1,
                "clearerr": 1,
                "ftell": 1,
                "fclose": 1,
                "isspace": 1,
                "_vsnwprintf": 1,
                "_c_exit": 1,
                "_exit": 1,
                "_XcptFilter": 1,
                "_cexit": 1,
                "_wcmdln": 1,
                "__wgetmainargs": 1,
                "_initterm": 1,
                "__setusermatherr": 1,
                "_adjust_fdiv": 1,
                "__p__commode": 1,
                "__p__fmode": 1,
                "__set_app_type": 1,
                "??1type_info@@UAE@XZ": 1,
                "?terminate@@YAXXZ": 1,
                "__dllonexit": 1,
                "_onexit": 1,
                "_controlfp": 1,
                "RegQueryValueExW": 1,
                "RegOpenKeyExW": 1,
                "RegCloseKey": 1,
                "RegEnumValueW": 1,
                "RegCreateKeyExW": 1,
                "RegSetValueExW": 1,
                "CloseServiceHandle": 1,
                "OpenSCManagerW": 1,
                "RegOpenKeyW": 1,
                "AllocateAndInitializeSid": 1,
                "FreeSid": 1,
                "CheckTokenMembership": 1,
                "RegEnumKeyExW": 1,
                "AdjustTokenPrivileges": 1,
                "LookupPrivilegeValueW": 1,
                "OpenProcessToken": 1,
                "LookupAccountSidW": 1,
                "GetTokenInformation": 1,
                "OpenThreadToken": 1,
                "RegSaveKeyW": 1,
                "SetFileSecurityW": 1,
                "RegDeleteValueW": 1,
                "SetSecurityDescriptorDacl": 1,
                "SetEntriesInAclW": 1,
                "InitializeSecurityDescriptor": 1,
                "GetSecurityDescriptorDacl": 1,
                "ReportEventW": 1,
                "RegisterEventSourceW": 1,
                "GetUserNameW": 1,
                "StartServiceW": 1,
                "OpenServiceW": 1,
                "QueryServiceStatus": 1,
                "GetTimeFormatW": 1,
                "GetDateFormatW": 1,
                "CloseHandle": 1,
                "CreateFileW": 1,
                "CreateDirectoryW": 1,
                "DeleteFileW": 1,
                "GetLastError": 1,
                "SetLastError": 1,
                "GetLocaleInfoW": 1,
                "FindClose": 1,
                "FindFirstFileW": 1,
                "CreateThread": 1,
                "GetDiskFreeSpaceExW": 1,
                "GetDriveTypeW": 1,
                "GetLogicalDriveStringsW": 1,
                "SetCurrentDirectoryW": 1,
                "GetPrivateProfileStringW": 1,
                "WritePrivateProfileStringW": 1,
                "ExpandEnvironmentStringsW": 1,
                "GetModuleFileNameW": 1,
                "FreeLibrary": 1,
                "GetProcAddress": 1,
                "LoadLibraryW": 1,
                "GetFileAttributesW": 1,
                "GetVolumeNameForVolumeMountPointW": 1,
                "GetVolumeInformationW": 1,
                "DeleteCriticalSection": 1,
                "TerminateThread": 1,
                "WaitForSingleObject": 1,
                "InitializeCriticalSection": 1,
                "LeaveCriticalSection": 1,
                "EnterCriticalSection": 1,
                "GetComputerNameW": 1,
                "Sleep": 1,
                "GetTickCount": 1,
                "GetWindowsDirectoryW": 1,
                "GetCurrentProcess": 1,
                "GetCurrentThread": 1,
                "SetFileAttributesW": 1,
                "GetFileInformationByHandle": 1,
                "GetExitCodeThread": 1,
                "GetEnvironmentVariableW": 1,
                "WriteFile": 1,
                "ReadFile": 1,
                "DeviceIoControl": 1,
                "FlushFileBuffers": 1,
                "GetVolumePathNameW": 1,
                "GetUserDefaultLCID": 1,
                "MultiByteToWideChar": 1,
                "SetEvent": 1,
                "CreateEventW": 1,
                "HeapFree": 1,
                "HeapAlloc": 1,
                "GetProcessHeap": 1,
                "SetFilePointer": 1,
                "GetSystemTime": 1,
                "GetTapeParameters": 1,
                "ReleaseMutex": 1,
                "CreateMutexW": 1,
                "GetCurrentThreadId": 1,
                "GetVersionExW": 1,
                "GetSystemDirectoryW": 1,
                "ReleaseSemaphore": 1,
                "CreateSemaphoreW": 1,
                "LocalFree": 1,
                "VerifyVersionInfoW": 1,
                "VerSetConditionMask": 1,
                "FindNextFileW": 1,
                "FormatMessageW": 1,
                "CreateProcessW": 1,
                "GlobalFree": 1,
                "LockResource": 1,
                "LoadResource": 1,
                "FindResourceW": 1,
                "QueryPerformanceCounter": 1,
                "GetCurrentProcessId": 1,
                "GetSystemTimeAsFileTime": 1,
                "TerminateProcess": 1,
                "UnhandledExceptionFilter": 1,
                "SetUnhandledExceptionFilter": 1,
                "GetModuleHandleA": 1,
                "GetStartupInfoW": 1,
                "CreateFontIndirectW": 1,
                "CreateBitmap": 1,
                "CreateCompatibleBitmap": 1,
                "CreateCompatibleDC": 1,
                "SelectObject": 1,
                "GetMapMode": 1,
                "Rectangle": 1,
                "PatBlt": 1,
                "BitBlt": 1,
                "GetTextExtentPoint32W": 1,
                "DeleteObject": 1,
                "CreateRectRgn": 1,
                "CombineRgn": 1,
                "Polygon": 1,
                "GetObjectW": 1,
                "EnableWindow": 1,
                "SendMessageW": 1,
                "PostMessageW": 1,
                "GetKeyState": 1,
                "GetWindowRect": 1,
                "ScreenToClient": 1,
                "LoadBitmapW": 1,
                "GetClientRect": 1,
                "GetDC": 1,
                "ReleaseDC": 1,
                "InvalidateRect": 1,
                "IsWindowVisible": 1,
                "SetTimer": 1,
                "KillTimer": 1,
                "LoadCursorW": 1,
                "GetSysColor": 1,
                "SetCursor": 1,
                "GetSystemMetrics": 1,
                "GetParent": 1,
                "GetWindowLongW": 1,
                "GetWindow": 1,
                "GetWindowTextW": 1,
                "GetNextDlgGroupItem": 1,
                "wsprintfW": 1,
                "SetWindowTextW": 1,
                "GetWindowTextLengthW": 1,
                "IsWindow": 1,
                "ClientToScreen": 1,
                "SetWindowLongW": 1,
                "UpdateWindow": 1,
                "LockSetForegroundWindow": 1,
                "DestroyIcon": 1,
                "CreateIconIndirect": 1,
                "GetIconInfo": 1,
                "SetParent": 1,
                "MapDialogRect": 1,
                "InvalidateRgn": 1,
                "GetActiveWindow": 1,
                "CopyRect": 1,
                "InflateRect": 1,
                "DrawFocusRect": 1,
                "LoadIconW": 1,
                "CreateIconFromResource": 1,
                "GetSubMenu": 1,
                "RemoveMenu": 1,
                "GetMenu": 1,
                "LoadImageW": 1,
                "CallNextHookEx": 1,
                "UnhookWindowsHookEx": 1,
                "SetWindowsHookExW": 1,
                "GetWindowThreadProcessId": 1,
                "LoadMenuW": 1,
                "GetFocus": 1,
                "ChildWindowFromPoint": 1,
                "WindowFromPoint": 1,
                "GetCursorPos": 1,
                "IsCharAlphaNumericW": 1,
                "IsCharAlphaW": 1,
                "SetClassLongW": 1,
                "DeleteMenu": 1,
                "EnableMenuItem": 1,
                "AppendMenuW": 1,
                "GetMenuItemCount": 1,
                "GetMenuItemID": 1,
                "IsIconic": 1,
                "GetDesktopWindow": 1,
                "FlashWindow": 1,
                "SystemParametersInfoW": 1,
                "BringWindowToTop": 1,
                "MessageBoxW": 1,
                "SendDlgItemMessageW": 1,
                "ExitWindowsEx": 1,
                "SetWindowPos": 1,
                "GetMonitorInfoW": 1,
                "MonitorFromWindow": 1,
                "UnregisterClassW": 1,
                "DestroyWindow": 1,
                "ShowWindow": 1,
                "CreateDialogParamW": 1,
                "PostQuitMessage": 1,
                "DefWindowProcW": 1,
                "LoadStringW": 1,
                "wvsprintfW": 1,
                "GetDlgItem": 1,
                "GetAsyncKeyState": 1,
                "SetActiveWindow": 1,
                "GetCapture": 1,
                "PeekMessageW": 1,
                "iswctype": 1,
                "_aulldvrm": 1,
                "towupper": 1,
                "wcscspn": 1,
                "isdigit": 1,
                "wcstoul": 1,
                "NtQueryQuotaInformationFile": 1,
                "NtSetQuotaInformationFile": 1,
                "ntdll.dll": 1,
                "PropertySheetW": 1,
                "ImageList_ReplaceIcon": 1,
                "ImageList_GetImageCount": 1,
                "ImageList_GetIcon": 1,
                "ImageList_AddMasked": 1,
                "InitCommonControlsEx": 1,
                "CreatePropertySheetPageW": 1,
                "DestroyPropertySheetPage": 1,
                "SHGetFileInfoW": 1,
                "SHGetMalloc": 1,
                "SHGetPathFromIDListW": 1,
                "SHGetDesktopFolder": 1,
                "ExtractIconExW": 1,
                "SHGetSpecialFolderLocation": 1,
                "SHGetFolderPathW": 1,
                "WNetCloseEnum": 1,
                "WNetEnumResourceW": 1,
                "WNetOpenEnumW": 1,
                "WNetGetConnectionW": 1,
                "WNetAddConnection2W": 1,
                "WNetCancelConnection2W": 1,
                "GetSaveFileNameW": 1,
                "GetOpenFileNameW": 1,
                "GetFileTitleW": 1,
                "NetApiBufferFree": 1,
                "NetApiBufferSize": 1,
                "NetShareEnum": 1,
                "NetServerEnum": 1,
                "NetShareGetInfo": 1,
                "NetWkstaGetInfo": 1,
                "UuidToStringW": 1,
                "UuidFromStringW": 1,
                "CoCreateInstance": 1,
                "CoTaskMemFree": 1,
                "CoInitializeEx": 1,
                "CoUninitialize": 1,
                "CoInitializeSecurity": 1,
                "StringFromGUID2": 1,
                "CLSIDFromString": 1,
                "CoCreateGuid": 1,
                "SetupCloseInfFile": 1,
                "SetupGetStringFieldW": 1,
                "SetupGetLineTextW": 1,
                "SetupFindNextLine": 1,
                "SetupFindFirstLineW": 1,
                "SetupGetIntField": 1,
                "SetupOpenInfFileW": 1,
                "GetProfilesDirectoryW": 1,
                "SetNtmsObjectSecurity": 1,
                "GetNtmsObjectSecurity": 1,
                "CloseNtmsSession": 1,
                "GetNtmsObjectInformationW": 1,
                "SetNtmsObjectInformationW": 1,
                "GetNtmsObjectAttributeW": 1,
                "SetNtmsObjectAttributeW": 1,
                "EnumerateNtmsObject": 1,
                "CreateNtmsMediaPoolW": 1,
                "MountNtmsMedia": 1,
                "DismountNtmsMedia": 1,
                "AllocateNtmsMedia": 1,
                "DeallocateNtmsMedia": 1,
                "DeleteNtmsMedia": 1,
                "OpenNtmsNotification": 1,
                "CloseNtmsNotification": 1,
                "WaitForNtmsNotification": 1,
                "UpdateNtmsOmidInfo": 1,
                "MoveToNtmsMediaPool": 1,
                "ImportNtmsDatabase": 1,
                "InjectNtmsMedia": 1,
                "AccessNtmsLibraryDoor": 1,
                "EjectNtmsMedia": 1,
                "DeleteNtmsMediaPool": 1,
                "EndNtmsDeviceChangeDetection": 1,
                "SetNtmsDeviceChangeDetection": 1,
                "OpenNtmsSessionW": 1,
                "IdentifyNtmsSlot": 1,
                "SetNtmsUIOptionsW": 1,
                "BeginNtmsDeviceChangeDetection": 1,
                "GetNodeClusterState": 1,
                "RestoreClusterDatabase": 1,
                "SetCatalogState": 1,
                "SfcGetNextProtectedFile": 1,
                "AsrAddSifEntryW": 1,
                "AsrCreateStateFileW": 1,
                "AsrFreeContext": 1,
                "AsrRestorePlugPlayRegistryData": 1,
                "?CreateVssBackupComponents@@YGJPAPAVIVssBackupComponents@@@Z": 1,
                "localtime": 1,
                "_tzset": 1,
                "mktime": 1,
                "_putenv": 1,
                "_errno": 1,
                "fseek": 1,
                "_fdopen": 1,
                "_open_osfhandle": 1,
                "_wcsrev": 1,
                "_wcsdup": 1,
                "fflush": 1,
                "fread": 1,
                "_filelength": 1,
                "_getpid": 1,
                "_mbscpy": 1,
                "_mbslen": 1,
                "_wfopen": 1,
                "AddAccessAllowedAce": 1,
                "DeleteAce": 1,
                "EqualSid": 1,
                "GetAce": 1,
                "InitializeAcl": 1,
                "RegConnectRegistryW": 1,
                "RegReplaceKeyW": 1,
                "RegUnLoadKeyW": 1,
                "RegFlushKey": 1,
                "RegLoadKeyW": 1,
                "RegRestoreKeyW": 1,
                "DecryptFileW": 1,
                "EncryptFileW": 1,
                "CloseEncryptedFileRaw": 1,
                "OpenEncryptedFileRawW": 1,
                "ControlService": 1,
                "EnumDependentServicesW": 1,
                "WriteEncryptedFileRaw": 1,
                "ReadEncryptedFileRaw": 1,
                "RegQueryValueExA": 1,
                "RegOpenKeyExA": 1,
                "FileTimeToSystemTime": 1,
                "FileTimeToLocalFileTime": 1,
                "GetLocalTime": 1,
                "GetCurrentDirectoryA": 1,
                "GetCurrentDirectoryW": 1,
                "CompareStringW": 1,
                "GetNumberFormatW": 1,
                "SetErrorMode": 1,
                "SetEndOfFile": 1,
                "SetTapePosition": 1,
                "GetTapePosition": 1,
                "EraseTape": 1,
                "WriteTapemark": 1,
                "GetTapeStatus": 1,
                "SetTapeParameters": 1,
                "PrepareTape": 1,
                "FindVolumeMountPointClose": 1,
                "FindNextVolumeMountPointW": 1,
                "FindFirstVolumeMountPointW": 1,
                "ExitThread": 1,
                "MoveFileExW": 1,
                "SystemTimeToTzSpecificLocalTime": 1,
                "GetTimeZoneInformation": 1,
                "SystemTimeToFileTime": 1,
                "BackupRead": 1,
                "BackupWrite": 1,
                "CreateHardLinkW": 1,
                "BackupSeek": 1,
                "GetFileSize": 1,
                "LockFile": 1,
                "SetFileShortNameW": 1,
                "SetFileTime": 1,
                "LocalFileTimeToFileTime": 1,
                "GetCompressedFileSizeW": 1,
                "RemoveDirectoryW": 1,
                "WideCharToMultiByte": 1,
                "LoadLibraryA": 1,
                ".?AVCObject@@": 1,
                ".?AVCCmdTarget@@": 1,
                ".?AVCWnd@@": 1,
                ".?AVCDialog@@": 1,
                ".?AVCMediaMissing@@": 1,
                ".?AVCComboBox@@": 1,
                ".?AVCHelpDialog@@": 1,
                ".?AVCAdvancedBackup@@": 1,
                ".?AVCAdvancedRestore@@": 1,
                ".?AVCBackupInfo@@": 1,
                ".?AVCFrameWnd@@": 1,
                ".?AVCMDIChildWnd@@": 1,
                ".?AVCBChildFrame@@": 1,
                ".?AVCBrowserDlg@@": 1,
                ".?AVCStatic@@": 1,
                ".?AVCButton@@": 1,
                ".?AVCWiz97Page@@": 1,
                ".?AVCBWizHow@@": 1,
                ".?AVCBWizFinal@@": 1,
                ".?AVCBWizQuickStart@@": 1,
                ".?AVCBWizSetInfo@@": 1,
                ".?AVCBWizSetInfo2@@": 1,
                ".?AVCBWizWelcome@@": 1,
                ".?AVCBWizWhat1@@": 1,
                ".?AVCBWizWhat2@@": 1,
                ".?AVCBWizWhat3@@": 1,
                ".?AVCBWizWhen@@": 1,
                ".?AVCEdit@@": 1,
                ".?AVCBWizWhere@@": 1,
                ".?AVCGdiObject@@": 1,
                ".?AVCBrush@@": 1,
                ".?AVCFont@@": 1,
                ".?AVCBitmap@@": 1,
                ".?AVCCalendar@@": 1,
                ".?AVCCatalogNameEntry@@": 1,
                ".?AVCTapeProgressDlg@@": 1,
                ".?AVCCatalogProgressDlg@@": 1,
                ".?AVCCbxDevice@@": 1,
                ".?AVCCbxDeviceWizard@@": 1,
                ".?AVCCbxDeviceDrivesWizard@@": 1,
                ".?AVCConnectExchangeDlg@@": 1,
                ".?AVCConfirmRestore@@": 1,
                ".?AVCDisplayEdit@@": 1,
                ".?AVCDlgEProgress@@": 1,
                ".?AVCAnimateCtrl@@": 1,
                ".?AVCListCtrl@@": 1,
                ".?AVCDlgExcludeAdd@@": 1,
                ".?AVCException@@": 1,
                ".?AVCFileException@@": 1,
                ".?AVCDocument@@": 1,
                ".?AVCUIDocument@@": 1,
                ".?AVCBackupDoc@@": 1,
                ".?AVCRestoreDoc@@": 1,
                ".?AVCScheduleDoc@@": 1,
                ".?AVCWizardDoc@@": 1,
                ".?AVCDRWizFrom@@": 1,
                ".?AVCDRWizFinal@@": 1,
                ".?AVCDRWizWhere@@": 1,
                ".?AVCDRWizStart@@": 1,
                ".?AVCDRWizWelcome@@": 1,
                ".?AVCFileAssociateData@@": 1,
                ".PAVCException@@": 1,
                ".?AVCView@@": 1,
                ".?AVCScrollView@@": 1,
                ".?AVCFormView@@": 1,
                ".?AVCFormTabChild@@": 1,
                ".?AVCFormBackup@@": 1,
                ".?AVCFormMain@@": 1,
                ".?AVCRgn@@": 1,
                ".?AVCTabCtrl@@": 1,
                ".?AVCFormRest@@": 1,
                ".?AVCFormList@@": 1,
                ".?AVCFormSchedule@@": 1,
                ".?AVCFormTree@@": 1,
                ".?AVCFormWizard@@": 1,
                ".?AVCFileSystemObject@@": 1,
                ".PAVCMemoryException@@": 1,
                ".?AVCFileSystemLeaf@@": 1,
                ".?AVCFileSystemContainer@@": 1,
                ".?AVCCatalogLeaf@@": 1,
                ".?AVCDSSSpecialObject@@": 1,
                ".?AVCDSSChildCatalogObject@@": 1,
                ".?AVCShellObject@@": 1,
                ".?AVCFileSystemStore@@": 1,
                ".?AVCCatalogDirectory@@": 1,
                ".?AVCFileSystemDirectory@@": 1,
                ".?AVCSystemStateObject@@": 1,
                ".?AVCFileSystemUnselectableStore@@": 1,
                ".?AVCComputer@@": 1,
                ".?AVCMyComputer@@": 1,
                ".?AVCEntireNetwork@@": 1,
                ".?AVCExchangePlaceholder@@": 1,
                ".?AVCExchangeEnterprise@@": 1,
                ".?AVCExchangeSite@@": 1,
                ".?AVCExchangeServer@@": 1,
                ".?AVCExchangeDirectory@@": 1,
                ".?AVCExchangeInfoStore@@": 1,
                ".?AVCFileSystemVolume@@": 1,
                ".?AVCESEStore@@": 1,
                ".?AVCESETree@@": 1,
                ".?AVCESEBranch@@": 1,
                ".?AVCESEServer@@": 1,
                ".?AVCESEAnnotation@@": 1,
                ".?AVCESEInstance@@": 1,
                ".?AVCArchiveMedia@@": 1,
                ".?AVCBackupSet@@": 1,
                ".?AVCArchiveMediaPool@@": 1,
                ".?AVCShellContainer@@": 1,
                ".?AVCShellLink@@": 1,
                ".?AVCCatalogExchangeDB@@": 1,
                ".?AVCCatalogExchangeDS@@": 1,
                ".?AVCDesktop@@": 1,
                ".?AVCDSSBackupSet@@": 1,
                ".?AVCMenu@@": 1,
                ".?AVCPropertyPage@@": 1,
                ".?AVCHelpPropertyPage@@": 1,
                ".?AVCPropertySheet@@": 1,
                ".?AVCHelpPropertySheet@@": 1,
                ".?AVCMSImportMsg@@": 1,
                ".?AVCLabel@@": 1,
                ".?AVCMyListView@@": 1,
                ".?AVCListViewFile@@": 1,
                ".?AVCMDIFrameWnd@@": 1,
                ".?AVCMainFrame@@": 1,
                ".?AVCMSMissing@@": 1,
                ".?AVCProgressCtrl@@": 1,
                ".?AVCMSWait@@": 1,
                ".?AVCNewMedia@@": 1,
                ".?AVCDocManager@@": 1,
                ".?AVCMyDocManager@@": 1,
                ".?AVCWebLink@@": 1,
                ".?AVCWinThread@@": 1,
                ".?AVCWinApp@@": 1,
                ".?AVCMainApp@@": 1,
                ".?AVCAboutDlg@@": 1,
                ".?AVCScriptFile@@": 1,
                "MSII2.6->3.0": 1,
                ".?AVCPropBkupType@@": 1,
                ".?AVCPropBkupExclude@@": 1,
                ".?AVCPropBkupLogging@@": 1,
                ".?AVCPropRestoreGen@@": 1,
                ".?AVCProgressDlg@@": 1,
                ".?AVCPropGeneral@@": 1,
                ".?AV?$CArray@Ulogdata@@U1@@@": 1,
                ".?AVCListBox@@": 1,
                ".?AVCReportSelect@@": 1,
                ".?AVCRestoreExchange@@": 1,
                ".?AVCRestoreExchangeESE@@": 1,
                ".?AVCRecoverWelcome@@": 1,
                ".?AVCRSMAccessWarning@@": 1,
                ".?AVCRWizExchangeDS@@": 1,
                ".?AVCRWizExchangeIS@@": 1,
                ".?AVCRWizFinal@@": 1,
                ".?AVCRWizHow@@": 1,
                ".?AVCRWizQuickStart@@": 1,
                ".?AVCRWizSpecial@@": 1,
                ".?AVCRWizWelcome@@": 1,
                ".?AVCRWizWhat2@@": 1,
                ".?AVCRWizWhere@@": 1,
                ".?AVCRWizExchangeESE@@": 1,
                ".?AVCSWizWelcome@@": 1,
                ".?AVCSWizWhat@@": 1,
                ".?AVCSBWizFinal@@": 1,
                ".?AVCSBWizQuickStart@@": 1,
                ".?AVCSBWizWhat1@@": 1,
                ".?AVCSDRWizWhere@@": 1,
                ".?AVCSDRWizStart@@": 1,
                ".?AVCSRWizFinal@@": 1,
                ".?AVCSRWizQuickStart@@": 1,
                ".?AVCScheduleSecurity@@": 1,
                ".?AVCSchedPropGen@@": 1,
                ".?AVCBlankPassword@@": 1,
                ".?AVCSchedPropSum@@": 1,
                ".?AVCTreeCtrl@@": 1,
                ".?AVCMyTreeView@@": 1,
                ".?AVCTreeViewDirs@@": 1,
                ".?AVCUISession@@": 1,
                ".?AVCMSWaitFreeMsg@@": 1,
                ".?AVCWiz97Sheet@@": 1,
                "%$%a%b%V%U%c%Q%W%]%\\%[%": 1,
                "%4%,%": 1,
                "%<%^%_%Z%T%i%f%`%P%l%g%h%d%e%Y%X%R%S%k%j%": 1,
                "e\"d\" #!#": 1,
                "\")\"H\"a\"d\"e\"": 1,
                "# #!#": 1,
                "%$%,%4%<%P%Q%R%S%T%U%V%W%X%Y%Z%[%\\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%": 1,
                "%:&;&<&@&B&`&c&e&f&j&k&": 1,
                "__(){}___,.;:?!(){}#&*+-<>=\\$%@": 1,
                "S`!_G}h": 1,
                "FEc%O": 1,
                "NTQUNTQUNTEDNTED": 2,
                "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>": 1,
                "<assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\">": 1,
                "<assemblyIdentity ": 1,
                "type=\"win32\" ": 1,
                "version=\"1.0.0.0\"": 1,
                "name=\"Microsoft.Windows.StorageServices.Backup\"": 1,
                "processorArchitecture=\"*\"": 1,
                "<description>Windows Backup Utility</description>": 1,
                "<dependency>": 1,
                "    <dependentAssembly>": 1,
                "        <assemblyIdentity": 1,
                "            type=\"win32\"": 1,
                "            name=\"Microsoft.Windows.Common-Controls\"": 1,
                "            version=\"6.0.0.0\"": 1,
                "            language=\"*\"": 1,
                "            processorArchitecture=\"*\"": 1,
                "            publicKeyToken=\"6595b64144ccf1df\"": 1,
                "        />": 1,
                "    </dependentAssembly>": 1,
                "</dependency>": 1,
                "</assembly>": 1,
                "ADD_ICON.H": 1,
                "ADV_REST.H": 1,
                "ADV_SEL.H": 1,
                "BKUP.H": 1,
                "CATMAINT.H": 1,
                "CATTAPE.H": 1,
                "DEL_SEL.H": 1,
                "DLGS.H": 1,
                "EMAIL.H": 1,
                "EMLLOGON.H": 1,
                "ERASE.H": 1,
                "FREPLACE.H": 1,
                "JOB_NEW.H": 1,
                "JOBSETUP.H": 1,
                "JOB_OPTS.H": 1,
                "LTAPPSWD.H": 1,
                "LOGINPW.H": 1,
                "MSGBOXID.H": 1,
                "NEXTSET.H": 1,
                "NETWORK.H": 1,
                "OMBKUP.H": 1,
                "OMRSET.H": 1,
                "RT_DLG.H": 1,
                "RSET.H": 1,
                "RSETNEW.H": 1,
                "SAVE_SEL.H": 1,
                "SCHED.H": 1,
                "SET_CAT.H": 1,
                "SET_DBUG.H": 1,
                "SET_LOG.H": 1,
                "SET_OPTS.H": 1,
                "SET_PRT.H": 1,
                "SET_REST.H": 1,
                "SETBACK.H": 1,
                "SKIPNO.H": 1,
                "SKIPOPEN.H": 1,
                "SRVLOGIN.H": 1,
                "TAPEPSWD.H": 1,
                "TENSION.H": 1,
                "TSEARCH.H": 1,
                "USE_SEL.H": 1,
                "ABORTDLG.H": 1,
                "OMEXCHNG.H": 1,
                "pwpwp": 1,
                "rw7Ot": 1,
                "z\"BbB": 1,
                "NDNDNO": 2,
                "@6Df@": 1,
                "@6D\\@": 1,
                "@6DR@": 1,
                "&@6DH@": 1,
                "0@6D>@": 1,
                "<@4D4@": 1,
                "F@4D*@": 1,
                "P@4D @": 1,
                "@4DJ@": 1,
                "@4D@@": 1,
                "@4D6@": 1,
                "\"@4D,@": 1,
                ",@6D @": 1,
                "Dd@\"D": 1,
                "@:D(@": 1,
                "&@ND0@": 1,
                "0@BD2@": 1,
                ":@<D.@": 1,
                "D@8D(@": 1,
                "N@.D(@": 1,
                "X@$D(@": 1,
                "*@(D @": 1,
                "&@*D\"@": 1,
                "$@*D$@": 2,
                "\"@*D&@": 1,
                "@ DB@": 1,
                "@,D:@": 1,
                "@6D2@": 1,
                "@:D,@": 1,
                "@Op@O": 1,
                "(D.@<": 1,
                "\"D4@<": 1,
                "@LDR@": 1,
                "@LDH@": 1,
                "@LD>@": 1,
                "$@LD4@": 1,
                ".@LD*@": 1,
                "D2@LD @": 1,
                "D2@HD": 1,
                "D2@>D": 1,
                "$D2@4D": 1,
                ".D2@*D": 1,
                "8D2@ D": 1,
                "@hD0@": 1,
                "@hD&@": 1,
                "D\"@`D": 1,
                "D,@VD": 1,
                "D4@LD": 1,
                "D>@BD": 1,
                "DF@8D": 1,
                "DP@.D": 1,
                "DZ@$D": 1,
                "@FD2@": 1,
                "@FD(@": 1,
                "DP@2D": 1,
                "DP@(D": 1,
                ".@TD\"@": 1,
                "@.D$@": 1,
                "@ D(@": 1,
                "wwwwwwwwwww": 11,
                "wwwwwwwwwwww": 3,
                "wwwwp": 4,
                "pxxpp": 1,
                "wwwww": 15,
                "oW@NIBM": 1,
                "oW@VFIIO": 1,
                "oW@WKJF\\": 1,
                "oW@UTNK": 1,
                "rjYXf": 1,
                "J'#%iH^": 1,
                "2!dL84E<": 1,
                "!'#!_f899;": 1,
                "NL[pspw\"": 1,
                "N`)Fm": 1,
                "!!!!8r;88:D?CKYX": 1,
                "!!!!&4": 1,
                "<:8?CKYg": 1,
                "!!!4Z:;><OP": 1,
                "OA?NNQ\"": 1,
                "!!+\\:;>G<HD#'2^": 1,
                "WWRO4!!#49O*": 1,
                "#+\\3;A*": 1,
                "-/\\AG": 1,
                ":;>M*": 1,
                ")9lGH": 1,
                "$Fymhj": 1,
                "33lHDRH": 1,
                "??G\\O[\\": 1,
                "l\\R[G\\": 1,
                "CCC\\\\\\": 1,
                "lkTKKkROZ": 1,
                "NYYYYYYYYYYYVlZ": 1,
                "1@iE0": 1,
                "igbffffffgg7": 1,
                "1_z{{": 1,
                "||||||": 1,
                "|||||5": 1,
                "wvwkZ": 1,
                "WGKXC": 1,
                "!+!f:;DCQ": 1,
                "D38?K)": 1,
                "!!D:;GZ": 1,
                "!4:;WQD4!+)": 1,
                "DU\\#E)": 1,
                "bXbXYbT8": 1,
                "|||||||R": 1,
                "<!M|||": 1,
                "?::q@CG": 1,
                "$$!iDDD": 1,
                "#\"!cUUU": 1,
                "#\"!bUUU": 11,
                "$#\"aUUU": 1,
                "!#!\\OOO": 1,
                " \"#S333": 1,
                "&!\"!X": 1,
                "!!!F \"#y": 1,
                "6\"!\"Z": 1,
                "2qNE3": 1,
                "8% ,9$": 1,
                "saX53": 1,
                "/37ZFMS": 1,
                "011?022e/36": 1,
                "3+(!/12S035": 1,
                "G+ $G+": 1,
                "D-!RB,#AG1&6J6,*F6.": 1,
                "@+!PeUMHF.%,F5#": 1,
                "K+ 9K--": 1,
                "33333333333330": 1,
                "{{{{{{{{{{{{{0": 1,
                "{{{{{{{{{{{{w": 1,
                "{{{{{{{{{{{{x": 2,
                "{{{{{{{{{{{{{p0": 1,
                "{{{{{{{{{{{{{": 2,
                "wwwwpp": 1,
                "wwwwww": 19,
                "pwwwwwwp": 1,
                "pwwwwww": 1,
                "wwwwwww": 5,
                "wwwwwwwwp": 2,
                "wwwwwwwwwp": 14,
                "wwwwwwwwwwwwwwp": 2,
                "wwwwwwp": 2,
                "wwwwwwwpp": 7,
                "wwwwwwwww": 7,
                "\"'wwwwwwwww": 3,
                "wwwwwwwwww": 12,
                "wwwwwwwwwwp": 1,
                "DDDDDDDDDD@": 2,
                "wwwwwwwwww@": 6,
                "pwwwwwwww": 2,
                "pwwwwwwwwp": 2,
                "r\"wwwwwwwww": 2,
                "tDDDDDDDDD": 2,
                "tDDDDDDDD": 2,
                "wwwwwwww": 10,
                "wwwwwp?": 2,
                "{{{{{": 5,
                "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwp": 1,
                "wwwwwwwwwwwww": 1,
                "ppwwwwwwp": 1,
                "wwwwwp": 10,
                "pwwwww": 2,
                "wpwwwww": 1,
                "ppwwwp": 1,
                "wpwwp": 1,
                "wwwpx": 1,
                "wwwpp": 1,
                "wwwwwwwpwwwww": 1,
                "wwwwwwwp": 1,
                "wwwwwwwwpp": 1,
                "wwwwwwwwwwwwwp": 2,
                "wwwwwwwwwwwwwwpp": 1,
                "wwwwwwwwwwwwwww": 17,
                "wwwwwwwwwwwwwwwpwwwwwwwwwwwwwwwwwwwwwww": 1,
                "33333333": 6,
                "33333330": 5,
                "wwwwwwwwwwx": 1,
                "wwwwDD": 1,
                "wwwwwDD": 2,
                "wwwwwwDD": 3,
                "wwwwwwwDD": 1,
                "{{{{{x": 6,
                "{{{{p": 1,
                "\"\"\"\"&$": 1,
                "\"\"\"\"\"\"\"&@": 1,
                ",\"\"\"\"\" ": 1,
                "\"\"\"\"(": 1,
                "wwwwwwwwwwwwp": 1,
                "ssxxx": 1,
                "x8swxw": 1,
                "3swwxp": 1,
                "@wwwww1": 1,
                "0ffff": 1,
                "n~~~s": 1,
                "7wwwwwwwwwww0": 1,
                "ffffa": 1,
                "w70fffff": 1,
                "fffff": 3,
                "f`wwwt~x": 1,
                "DDxxxtDDG": 1,
                "~~~~ww": 1,
                "AVI LIST>": 1,
                "hdrlavih8": 4,
                "strlstrh8": 4,
                "strfh": 3,
                "strn6": 1,
                "Arcada Backup for Windows 95 Backup/Compare Animation": 1,
                "LISTD?": 2,
                "movi00db": 3,
                "AVI LIST8": 1,
                "vidsDIB ": 1,
                "strn/": 1,
                "Arcada Backup for Windows 95 Compare Animation": 1,
                "wwwwwwwy": 1,
                "RIFF`": 1,
                "AVI LIST,": 1,
                "strn#": 1,
                "DIB frames starting with TAPE3.BMP": 1,
                "wwwwwwwwwwwwwwwww": 8,
                "ppwwwww": 8,
                "ppwwwwwwpw": 8,
                "pwwwwwwwp": 8,
                "wwwwwwwwwwwx": 8,
                "AVI LIST": 1,
                "LISTt": 1,
                "vidsRLE ": 1,
                "strf(": 1,
                "ServerNameCacheNumNets": 1,
                "DontLoadIfConflict1": 1,
                "Polling1": 1,
                "PortDriverSLCD32.mpd": 1,
                "ForceLoadPD": 1,
                "InfPathADAPTER.INF": 1,
                "InfSectionSonyP": 1,
                "DriverDescSony Proprietary CD-ROM Controller9": 1,
                "DevLoadermmdevldr.vxdY": 1,
                "Drivers": 1,
                "MIGRATED0": 1,
                "SubClasseswave,midi,aux,mixer": 1,
                "DevLoadermmdevldr.vxd": 1,
                "Drivermssndsys.vxd": 1,
                "movi00dc": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rsrc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDataExchange::Fail": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDataExchange::PrepareEditCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDataExchange::PrepareCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CAnimateCtrl::~CAnimateCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CAnimateCtrl::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_DDV_MaxChars": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_operator+": 9,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::Mid": 6,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::DrawItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::OnChildNotify": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::GetMessageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::~CListCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CImageList::~CImageList": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringList::~CStringList": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CImageList::CImageList": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringList::CStringList": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::SetItemState": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CImageList::FromHandle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::SetItemText": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CImageList::Create": 6,
                "bind=NONE type=FUNC name=MFC42u.DLL_CException::ReportError": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFileException::GetErrorMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFileException::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CException::CException": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::OnIdle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::GetDefaultAccelerator": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::GetDefaultMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::UpdateFrameCounts": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::DoFileSave": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::DoSave": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::PreCloseFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::CanCloseFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::ReleaseFile": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::GetFile": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::ReportSaveLoadException": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::OnChangedViewList": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::GetNextView": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::GetFirstViewPosition": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::SetPathName": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::SetTitle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::OnFinalRelease": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::OnCmdMsg": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::OnCloseDocument": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::DeleteContents": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::MDIGetActive": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFile::~CFile": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFile::Close": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFile::GetFileTitle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFile::Write": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFile::Open": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFile::CFile": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::operator+=": 9,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrList::CPtrList": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrList::~CPtrList": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::SaveModified": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::OnSaveDocument": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::OnOpenDocument": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTreeCtrl::SetItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRuntimeClassconstCDocument::classCDocument": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::CDocument": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::OnNewDocument": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCDocument::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocument::~CDocument": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::Create": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CGdiObject::FromHandle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxTryCleanup": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_EXCEPTION_LINK::AFX_EXCEPTION_LINK": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CObject::IsKindOf": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRuntimeClassconstCUserException::classCUserException": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRuntimeClassconstCFileDialog::classCFileDialog": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCCommonDialog::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnEndPrintPreview": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnEndPrinting": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnPrint": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnBeginPrinting": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnPreparePrinting": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::OnDraw": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::OnActivateFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CScrollView::OnPrepareDC": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnDragScroll": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnDropEx": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnDrop": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnDragLeave": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnDragOver": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnDragEnter": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CScrollView::OnScrollBy": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CScrollView::OnScroll": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::IsSelected": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::SetOccDialogInfo": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::PostNcDestroy": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::GetScrollBarCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CScrollView::CalcWindowRect": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::PreCreateWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnCmdMsg": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CSplitterWnd::SetColumnInfo": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CSplitterWnd::GetColumnInfo": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::ModifyStyleEx": 6,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::ModifyStyle": 6,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetStyle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRuntimeClassconstCFormView::classCFormView": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CScrollView::~CScrollView": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnUpdate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::OnActivateView": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::PreTranslateMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::Create": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTabCtrl::~CTabCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCFormView::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRgn::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTabCtrl::DrawItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTabCtrl::OnChildNotify": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTabCtrl::GetMessageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTabCtrl::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::CFormView": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::OnInitialUpdate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::SetActiveView": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnDestroy": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CView::OnMouseActivate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringArray::SetSize": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringArray::SetAtGrow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringArray::~CStringArray": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFormView::OnSetFocus": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::operator=": 9,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringArray::CStringArray": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::GetSecond": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::operator<=": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::operator>=": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CButton::Create": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CScrollView::OnSize": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFont::CreatePointFontIndirect": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDWordArray::SetAtGrow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMutex::Unlock": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CSyncObject::Lock": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrList::RemoveAt": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDWordArray::SetSize": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrList::Find": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrList::AddTail": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrList::RemoveHead": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDWordArray::~CDWordArray": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDWordArray::CDWordArray": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMutex::CMutex": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMutex::~CMutex": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CImageList::DeleteImageList": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMenu::FromHandle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::CString": 18,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRuntimeClassconstCDialog::classCDialog": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMenu::MeasureItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMenu::DrawItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMenu::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMenu::DestroyMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMenu::Attach": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetDlgCtrlID": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMenu::TrackPopupMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnWizardFinish": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnWizardNext": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnWizardBack": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnQueryCancel": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnKillActive": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnSetActive": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnReset": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetDlgItemTextW": 6,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnCancel": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnOK": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::PreTranslateMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnNotify": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::CPropertyPage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCPropertyPage::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::~CPropertyPage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::OnInitDialog": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::BuildPropPageArray": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::OnCommand": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::ContinueModal": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::OnCmdMsg": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::CPropertySheet": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCPropertySheet::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::OnSysCommand": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::DoModal": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::SetActivePage": 6,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::GetActiveIndex": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::GetPageCount": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::PreTranslateMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SelectStockObject": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SetTextColor": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SelectObject": 9,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCListCtrl::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::GetItemRect": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListCtrl::GetItemData": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnContextHelp": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnHelp": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnHelpFinder": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnSetCursor": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRuntimeClassconstCMDIFrameWnd::classCMDIFrameWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCMDIFrameWnd::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::GetWindowMenuPopup": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::CreateClient": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::DelayUpdateFrameMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::OnUpdateFrameMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::OnUpdateFrameTitle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::GetMessageBar": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::ActivateFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::GetActiveFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::LoadFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::DefWindowProcW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::PreTranslateMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::OnCommand": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::OnCmdMsg": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatusBar::~CStatusBar": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CToolBar::~CToolBar": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnEndSession": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnClose": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::PreCreateWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::OnDestroy": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetWindowPlacement": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnBarCheck": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CToolBar::LoadBitmapW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CToolBar::CToolBar": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatusBar::CStatusBar": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::CMDIFrameWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatusBar::SetPaneInfo": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::ShowControlBar": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnSysCommand": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnQueryEndSession": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatusBar::SetPaneText": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatusBar::GetPaneText": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIFrameWnd::OnCreateClient": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::CreateView": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CControlBar::SetBarStyle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::DockControlBar": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::EnableDocking": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CControlBar::EnableDocking": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatusBar::SetIndicators": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatusBar::Create": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CToolBar::SetButtons": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CToolBar::Create": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnCreate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnInitMenuPopup": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::RestoreWaitCursor": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetSafeOwner": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CProgressCtrl::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CProgressCtrl::~CProgressCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::MakeUpper": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCWinApp::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::OnFileOpen": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::OnFileNew": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::OnDDECommand": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::GetOpenDocumentCount": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::CloseAllDocuments": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::SaveAllModified": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::OpenDocumentFile": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::RegisterShellFileTypes": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::GetNextDocTemplate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::GetFirstDocTemplatePosition": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::AddDocTemplate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::~CDocManager": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDocManager::CDocManager": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::SaveAllModified": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::WriteProfileStringW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::DoMessageBox": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::OnUpdateRecentFileMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::WinHelpW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::~CListBox": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::SetWindowPos": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnSysColorChange": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::~CWinApp": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::OnDDECommand": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::DoWaitCursor": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::InitApplication": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinThread::Delete": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinThread::GetMainWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinThread::ProcessMessageFilter": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::ProcessWndProcException": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinThread::IsIdleMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::OnIdle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinThread::PumpMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinThread::PreTranslateMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::Run": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::OnFinalRelease": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::CWinApp": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::ExitInstance": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::SaveStdProfileSettings": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::OnFileNew": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTreeCtrl::GetItemData": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::OnFileOpen": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::SetWindowPlacement": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::AddDocTemplate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMultiDocTemplate::CMultiDocTemplate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxRegisterClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::LoadStdProfileSettings": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::Enable3dControls": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::SetRegistryKey": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::SetModified": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxThrowUserException": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::CharToItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::VKeyToItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::DeleteItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::CompareItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::MeasureItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::DrawItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::OnChildNotify": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CListBox::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CArchive::ReadCount": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CArchive::WriteCount": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CArchive::Read": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CArchive::Write": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::operator=": 9,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTreeCtrl::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTreeCtrl::~CTreeCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCTreeCtrl::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTreeCtrl::GetMessageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CTreeCtrl::GetItemRect": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::IsWindowEnabled": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxUnhookWindowCreate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxHookWindowCreate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxDlgProc": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialogTemplate::~CDialogTemplate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialogTemplate::Detach": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialogTemplate::SetFont": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialogTemplate::CDialogTemplate": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialogTemplate::GetFont": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxGetPropSheetFont": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrArray::SetAtGrow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRuntimeClassconstCWnd::classCWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrArray::~CPtrArray": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrArray::CPtrArray": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::PreTranslateInput": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::RunModalLoop": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWinApp::EnableModeless": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxEndDeferRegisterClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxThrowMemoryException": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPtrArray::RemoveAt": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::CenterWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::SendDlgItemMessageW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetWindowTextLengthW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringList::RemoveAt": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringList::RemoveAll": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStringList::AddTail": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CComboBox::GetLBText": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::FindOneOf": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::Find": 9,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::Replace": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::FromHandle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::TrimLeft": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::SubclassDlgItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPaintDC::CPaintDC": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SetROP2": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPaintDC::~CPaintDC": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPen::CPen": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::MoveTo": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::LineTo": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::GetDayOfWeek": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::CDC": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::operator-": 6,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTimeSpan::operator=": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SetMapMode": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SetBkColor": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::DeleteDC": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::~CDC": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::FillSolidRect": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SetBkMode": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SetTextAlign": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CBrush::CBrush": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::~CWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::operator+": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::FromHandle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::SelectGdiObject": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDC::Attach": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxFindResourceHandle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CBitmap::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CGdiObject::Attach": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFont::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CBrush::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCWnd::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CGdiObject::DeleteObject": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CGdiObject::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CObject::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::Insert": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_DDX_CBString": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::TrimRight": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::GetTickCount": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::operator<": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::GetYear": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::GetMonth": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::GetDay": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::GetHour": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::GetMinute": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::GetBuffer": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::ReleaseBuffer": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_COleDateTime::SetDateTime": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CEdit::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnDestroy": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CEdit::~CEdit": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_DDX_CBIndex": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CSplitterWnd::CreateStatic": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::ShowWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CSplitterWnd::GetPane": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::SetFocus": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetExStyle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::MoveWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CSplitterWnd::CSplitterWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CSplitterWnd::~CSplitterWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::ReverseFind": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::Right": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::Left": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::Format": 6,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::Default": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::GetBufferSetLength": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetWindowTextW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CButton::~CButton": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CButton::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CButton::OnChildNotify": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CButton::DrawItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatic::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::SetWindowTextW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CStatic::~CStatic": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::PreTranslateMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::CMDIChildWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::OnDestroy": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::ActivateFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnCreateClient": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::PreCreateWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnCmdMsg": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::DestroyWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnCommand": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::BeginModalState": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::EndModalState": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::DefWindowProcW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::PostNcDestroy": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::IsFrameWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::LoadFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::GetActiveDocument": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::GetActiveFrame": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::GetMessageString": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::RecalcLayout": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnSetPreviewMode": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::GetMessageBar": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::NegotiateBorderSpace": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::OnUpdateFrameTitle": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::OnUpdateFrameMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::GetDefaultAccelerator": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::DelayUpdateFrameMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::ExitHelpMode": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::Create": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CMDIChildWnd::OnUpdateFrameMenu": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CFrameWnd::~CFrameWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCMDIChildWnd::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CRuntimeClassconstCMDIChildWnd::classCMDIChildWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::AddPage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertySheet::~CPropertySheet": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_DDX_Radio": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_operatornew": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::BeginWaitCursor": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::EndWaitCursor": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetDlgItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::EnableWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::SetDlgItemTextW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CComboBox::~CComboBox": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::CWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CComboBox::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::OnCmdMsg": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetMessageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::PreTranslateMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CComboBox::OnChildNotify": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::CheckAutoCenter": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::SetOccDialogInfo": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CComboBox::DrawItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CComboBox::MeasureItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CComboBox::CompareItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CComboBox::DeleteItem": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_DDX_Control": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_DDX_Check": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxGetThread": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxGetModuleState": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_DDX_Text": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_operatordelete": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::EndDialog": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::OnOK": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::OnInitDialog": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::LoadStringW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::UpdateData": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AFX_MSGMAPconstCDialog::messageMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::CDialog": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::Empty": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CString::~CString": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::~CDialog": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::GetRuntimeClass": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::OnCmdMsg": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnFinalRelease": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::IsInvokeAllowed": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetDispatchIID": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetTypeInfoCount": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetTypeLibCache": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetTypeLib": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetCommandMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetDispatchMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetConnectionMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetInterfaceMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetEventSinkMap": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::OnCreateAggregates": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetInterfaceHook": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetExtraConnectionPoints": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CCmdTarget::GetConnectionHook": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::PreSubclassWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::Create": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::DestroyWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::PreCreateWindow": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::CalcWindowRect": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnToolHitTest": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetScrollBarCtrl": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::WinHelpW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::ContinueModal": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::EndModalLoop": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnCommand": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnNotify": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::GetSuperWndProcAddr": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::PreTranslateMessage": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_AfxWinMain": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnAmbientProperty": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::WindowProc": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnWndMsg": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::DefWindowProcW": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::PostNcDestroy": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::OnChildNotify": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::CheckAutoCenter": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CWnd::IsFrameWnd": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::SetOccDialogInfo": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::DoModal": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::OnSetFont": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::OnCancel": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CPropertyPage::OnApply": 3,
                "bind=NONE type=FUNC name=MFC42u.DLL_CDialog::PreInitDialog": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_realloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_malloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_free": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsncpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_swscanf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsstr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcslwr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__ftol": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcschr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_calloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscat": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsupr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memmove": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__CxxThrowException": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsncat": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__snwprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcspbrk": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsncmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__except_handler3": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__local_unwind2": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsnicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__purecall": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsrchr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcslen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___CxxFrameHandler": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_swprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wtoi": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_isalpha": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_localtime": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__tzset": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_mktime": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__putenv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__errno": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fseek": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__fdopen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__open_osfhandle": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsrev": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsdup": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fflush": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fread": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__filelength": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__getpid": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__mbscpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__mbslen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wfopen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcstok": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__controlfp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__onexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___dllonexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_?terminate@@YAXXZ": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_??1type_info@@UAE@XZ": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___set_app_type": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___p__fmode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___p__commode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__adjust_fdiv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___setusermatherr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__initterm": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___wgetmainargs": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcmdln": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__cexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__XcptFilter": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__c_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__vsnwprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_isspace": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fclose": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_ftell": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_time": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_clearerr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fwrite": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegOpenKeyExA": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_QueryServiceStatus": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_OpenServiceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_StartServiceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_GetUserNameW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegisterEventSourceW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_ReportEventW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_GetSecurityDescriptorDacl": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_InitializeSecurityDescriptor": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_SetEntriesInAclW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_SetSecurityDescriptorDacl": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegDeleteValueW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_AddAccessAllowedAce": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegQueryValueExA": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_ReadEncryptedFileRaw": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_WriteEncryptedFileRaw": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_EnumDependentServicesW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_ControlService": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_OpenEncryptedFileRawW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_CloseEncryptedFileRaw": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_EncryptFileW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_DecryptFileW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegRestoreKeyW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegLoadKeyW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegFlushKey": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegUnLoadKeyW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegReplaceKeyW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegConnectRegistryW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_InitializeAcl": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_GetAce": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_EqualSid": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_DeleteAce": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegQueryValueExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegOpenKeyExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegCloseKey": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegEnumValueW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegCreateKeyExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegSetValueExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_CloseServiceHandle": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_OpenSCManagerW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegOpenKeyW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_AllocateAndInitializeSid": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_FreeSid": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_CheckTokenMembership": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegEnumKeyExW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_AdjustTokenPrivileges": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_LookupPrivilegeValueW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_OpenProcessToken": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_LookupAccountSidW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_GetTokenInformation": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_OpenThreadToken": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegSaveKeyW": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_SetFileSecurityW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_Sleep": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetComputerNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_EnterCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LeaveCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InitializeCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WaitForSingleObject": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TerminateThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeleteCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVolumeInformationW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVolumeNameForVolumeMountPointW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileAttributesW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleFileNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExpandEnvironmentStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WritePrivateProfileStringW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetPrivateProfileStringW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetCurrentDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLogicalDriveStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDriveTypeW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDiskFreeSpaceExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindFirstFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindClose": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocaleInfoW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeleteFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDateFormatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTimeFormatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTapeParameters": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReleaseMutex": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateMutexW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVersionExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReleaseSemaphore": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateSemaphoreW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VerifyVersionInfoW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VerSetConditionMask": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindNextFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FormatMessageW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateProcessW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GlobalFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LockResource": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadResource": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindResourceW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStartupInfoW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFileAttributesW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileInformationByHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetExitCodeThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetEnvironmentVariableW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeviceIoControl": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FlushFileBuffers": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVolumePathNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetUserDefaultLCID": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MultiByteToWideChar": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetEvent": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateEventW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcessHeap": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFilePointer": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CloseHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetWindowsDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FileTimeToSystemTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FileTimeToLocalFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocalTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentDirectoryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CompareStringW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetNumberFormatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetErrorMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetEndOfFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetTapePosition": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTapePosition": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_EraseTape": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteTapemark": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTapeStatus": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetTapeParameters": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_PrepareTape": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindVolumeMountPointClose": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindNextVolumeMountPointW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindFirstVolumeMountPointW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExitThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MoveFileExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SystemTimeToTzSpecificLocalTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTimeZoneInformation": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SystemTimeToFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_BackupRead": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_BackupWrite": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateHardLinkW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_BackupSeek": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileSize": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LockFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFileShortNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalFileTimeToFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCompressedFileSizeW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_RemoveDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WideCharToMultiByte": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryA": 3,
                "bind=NONE type=FUNC name=GDI32.dll_GetObjectW": 3,
                "bind=NONE type=FUNC name=GDI32.dll_Polygon": 3,
                "bind=NONE type=FUNC name=GDI32.dll_CombineRgn": 3,
                "bind=NONE type=FUNC name=GDI32.dll_CreateRectRgn": 3,
                "bind=NONE type=FUNC name=GDI32.dll_DeleteObject": 3,
                "bind=NONE type=FUNC name=GDI32.dll_GetTextExtentPoint32W": 3,
                "bind=NONE type=FUNC name=GDI32.dll_BitBlt": 3,
                "bind=NONE type=FUNC name=GDI32.dll_PatBlt": 3,
                "bind=NONE type=FUNC name=GDI32.dll_Rectangle": 3,
                "bind=NONE type=FUNC name=GDI32.dll_GetMapMode": 3,
                "bind=NONE type=FUNC name=GDI32.dll_SelectObject": 3,
                "bind=NONE type=FUNC name=GDI32.dll_CreateCompatibleDC": 3,
                "bind=NONE type=FUNC name=GDI32.dll_CreateCompatibleBitmap": 3,
                "bind=NONE type=FUNC name=GDI32.dll_CreateBitmap": 3,
                "bind=NONE type=FUNC name=GDI32.dll_CreateFontIndirectW": 3,
                "bind=NONE type=FUNC name=USER32.dll_PeekMessageW": 3,
                "bind=NONE type=FUNC name=USER32.dll_EnableWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_SendMessageW": 3,
                "bind=NONE type=FUNC name=USER32.dll_PostMessageW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetCapture": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetActiveWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetAsyncKeyState": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetDlgItem": 3,
                "bind=NONE type=FUNC name=USER32.dll_AppendMenuW": 3,
                "bind=NONE type=FUNC name=USER32.dll_wvsprintfW": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadStringW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetKeyState": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindowRect": 3,
                "bind=NONE type=FUNC name=USER32.dll_ScreenToClient": 3,
                "bind=NONE type=FUNC name=USER32.dll_EnableMenuItem": 3,
                "bind=NONE type=FUNC name=USER32.dll_DeleteMenu": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetClassLongW": 3,
                "bind=NONE type=FUNC name=USER32.dll_IsCharAlphaW": 3,
                "bind=NONE type=FUNC name=USER32.dll_IsCharAlphaNumericW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetCursorPos": 3,
                "bind=NONE type=FUNC name=USER32.dll_WindowFromPoint": 3,
                "bind=NONE type=FUNC name=USER32.dll_ChildWindowFromPoint": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetSysColor": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadCursorW": 3,
                "bind=NONE type=FUNC name=USER32.dll_KillTimer": 3,
                "bind=NONE type=FUNC name=USER32.dll_IsWindowVisible": 3,
                "bind=NONE type=FUNC name=USER32.dll_InvalidateRect": 3,
                "bind=NONE type=FUNC name=USER32.dll_ReleaseDC": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetDC": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetClientRect": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadBitmapW": 3,
                "bind=NONE type=FUNC name=USER32.dll_DefWindowProcW": 3,
                "bind=NONE type=FUNC name=USER32.dll_PostQuitMessage": 3,
                "bind=NONE type=FUNC name=USER32.dll_CreateDialogParamW": 3,
                "bind=NONE type=FUNC name=USER32.dll_ShowWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_DestroyWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_UnregisterClassW": 3,
                "bind=NONE type=FUNC name=USER32.dll_MonitorFromWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetMonitorInfoW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetFocus": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadMenuW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindowThreadProcessId": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetWindowsHookExW": 3,
                "bind=NONE type=FUNC name=USER32.dll_UnhookWindowsHookEx": 3,
                "bind=NONE type=FUNC name=USER32.dll_CallNextHookEx": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadImageW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetMenu": 3,
                "bind=NONE type=FUNC name=USER32.dll_RemoveMenu": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetSubMenu": 3,
                "bind=NONE type=FUNC name=USER32.dll_CreateIconFromResource": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadIconW": 3,
                "bind=NONE type=FUNC name=USER32.dll_DrawFocusRect": 3,
                "bind=NONE type=FUNC name=USER32.dll_InflateRect": 3,
                "bind=NONE type=FUNC name=USER32.dll_CopyRect": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetActiveWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_InvalidateRgn": 3,
                "bind=NONE type=FUNC name=USER32.dll_MapDialogRect": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetWindowPos": 3,
                "bind=NONE type=FUNC name=USER32.dll_ExitWindowsEx": 3,
                "bind=NONE type=FUNC name=USER32.dll_SendDlgItemMessageW": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetParent": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetIconInfo": 3,
                "bind=NONE type=FUNC name=USER32.dll_CreateIconIndirect": 3,
                "bind=NONE type=FUNC name=USER32.dll_DestroyIcon": 3,
                "bind=NONE type=FUNC name=USER32.dll_LockSetForegroundWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_UpdateWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetWindowLongW": 3,
                "bind=NONE type=FUNC name=USER32.dll_ClientToScreen": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetCursor": 3,
                "bind=NONE type=FUNC name=USER32.dll_MessageBoxW": 3,
                "bind=NONE type=FUNC name=USER32.dll_BringWindowToTop": 3,
                "bind=NONE type=FUNC name=USER32.dll_SystemParametersInfoW": 3,
                "bind=NONE type=FUNC name=USER32.dll_FlashWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetDesktopWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_IsIconic": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetMenuItemID": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetTimer": 3,
                "bind=NONE type=FUNC name=USER32.dll_IsWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindowTextLengthW": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetWindowTextW": 3,
                "bind=NONE type=FUNC name=USER32.dll_wsprintfW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetNextDlgGroupItem": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindowTextW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindowLongW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetParent": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetSystemMetrics": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetMenuItemCount": 3,
                "bind=NONE type=FUNC name=ntdll.dll_iswctype": 3,
                "bind=NONE type=FUNC name=ntdll.dll__aulldvrm": 3,
                "bind=NONE type=FUNC name=ntdll.dll_towupper": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtSetQuotaInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryQuotaInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_wcstoul": 3,
                "bind=NONE type=FUNC name=ntdll.dll_wcscspn": 3,
                "bind=NONE type=FUNC name=ntdll.dll_isdigit": 3,
                "bind=NONE type=FUNC name=COMCTL32.dll_DestroyPropertySheetPage": 3,
                "bind=NONE type=FUNC name=COMCTL32.dll_CreatePropertySheetPageW": 3,
                "bind=NONE type=FUNC name=COMCTL32.dll_ImageList_AddMasked": 3,
                "bind=NONE type=FUNC name=COMCTL32.dll_ImageList_GetIcon": 3,
                "bind=NONE type=FUNC name=COMCTL32.dll_ImageList_GetImageCount": 3,
                "bind=NONE type=FUNC name=COMCTL32.dll_ImageList_ReplaceIcon": 3,
                "bind=NONE type=FUNC name=COMCTL32.dll_InitCommonControlsEx": 3,
                "bind=NONE type=FUNC name=COMCTL32.dll_PropertySheetW": 3,
                "bind=NONE type=FUNC name=SHELL32.dll_SHGetSpecialFolderLocation": 3,
                "bind=NONE type=FUNC name=SHELL32.dll_ExtractIconExW": 3,
                "bind=NONE type=FUNC name=SHELL32.dll_SHGetDesktopFolder": 3,
                "bind=NONE type=FUNC name=SHELL32.dll_SHGetPathFromIDListW": 3,
                "bind=NONE type=FUNC name=SHELL32.dll_SHGetMalloc": 3,
                "bind=NONE type=FUNC name=SHELL32.dll_SHGetFileInfoW": 3,
                "bind=NONE type=FUNC name=SHELL32.dll_SHGetFolderPathW": 3,
                "bind=NONE type=FUNC name=MPR.dll_WNetEnumResourceW": 3,
                "bind=NONE type=FUNC name=MPR.dll_WNetOpenEnumW": 3,
                "bind=NONE type=FUNC name=MPR.dll_WNetGetConnectionW": 3,
                "bind=NONE type=FUNC name=MPR.dll_WNetAddConnection2W": 3,
                "bind=NONE type=FUNC name=MPR.dll_WNetCancelConnection2W": 3,
                "bind=NONE type=FUNC name=MPR.dll_WNetCloseEnum": 3,
                "bind=NONE type=FUNC name=comdlg32.dll_GetOpenFileNameW": 3,
                "bind=NONE type=FUNC name=comdlg32.dll_GetFileTitleW": 3,
                "bind=NONE type=FUNC name=comdlg32.dll_GetSaveFileNameW": 3,
                "bind=NONE type=FUNC name=NETAPI32.dll_NetServerEnum": 3,
                "bind=NONE type=FUNC name=NETAPI32.dll_NetApiBufferSize": 3,
                "bind=NONE type=FUNC name=NETAPI32.dll_NetShareEnum": 3,
                "bind=NONE type=FUNC name=NETAPI32.dll_NetShareGetInfo": 3,
                "bind=NONE type=FUNC name=NETAPI32.dll_NetWkstaGetInfo": 3,
                "bind=NONE type=FUNC name=NETAPI32.dll_NetApiBufferFree": 3,
                "bind=NONE type=FUNC name=RPCRT4.dll_UuidToStringW": 3,
                "bind=NONE type=FUNC name=RPCRT4.dll_UuidFromStringW": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoInitializeEx": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoCreateGuid": 3,
                "bind=NONE type=FUNC name=ole32.dll_CLSIDFromString": 3,
                "bind=NONE type=FUNC name=ole32.dll_StringFromGUID2": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoCreateInstance": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoTaskMemFree": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoUninitialize": 3,
                "bind=NONE type=FUNC name=ole32.dll_CoInitializeSecurity": 3,
                "bind=NONE type=FUNC name=SETUPAPI.dll_SetupCloseInfFile": 3,
                "bind=NONE type=FUNC name=SETUPAPI.dll_SetupFindNextLine": 3,
                "bind=NONE type=FUNC name=SETUPAPI.dll_SetupFindFirstLineW": 3,
                "bind=NONE type=FUNC name=SETUPAPI.dll_SetupOpenInfFileW": 3,
                "bind=NONE type=FUNC name=SETUPAPI.dll_SetupGetLineTextW": 3,
                "bind=NONE type=FUNC name=SETUPAPI.dll_SetupGetIntField": 3,
                "bind=NONE type=FUNC name=SETUPAPI.dll_SetupGetStringFieldW": 3,
                "bind=NONE type=FUNC name=USERENV.dll_GetProfilesDirectoryW": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_CloseNtmsNotification": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_WaitForNtmsNotification": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_OpenNtmsNotification": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_MoveToNtmsMediaPool": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_CloseNtmsSession": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_DeleteNtmsMedia": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_DeallocateNtmsMedia": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_AllocateNtmsMedia": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_GetNtmsObjectSecurity": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_DismountNtmsMedia": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_SetNtmsObjectSecurity": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_UpdateNtmsOmidInfo": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_ImportNtmsDatabase": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_InjectNtmsMedia": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_AccessNtmsLibraryDoor": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_EjectNtmsMedia": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_GetNtmsObjectInformationW": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_SetNtmsObjectInformationW": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_GetNtmsObjectAttributeW": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_SetNtmsObjectAttributeW": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_EnumerateNtmsObject": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_CreateNtmsMediaPoolW": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_DeleteNtmsMediaPool": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_EndNtmsDeviceChangeDetection": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_SetNtmsDeviceChangeDetection": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_OpenNtmsSessionW": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_IdentifyNtmsSlot": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_SetNtmsUIOptionsW": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_BeginNtmsDeviceChangeDetection": 3,
                "bind=NONE type=FUNC name=NTMSAPI.dll_MountNtmsMedia": 3,
                "bind=NONE type=FUNC name=CLUSAPI.dll_RestoreClusterDatabase": 3,
                "bind=NONE type=FUNC name=CLUSAPI.dll_GetNodeClusterState": 3,
                "bind=NONE type=FUNC name=query.dll_SetCatalogState": 3,
                "bind=NONE type=FUNC name=sfc_os.dll_SfcGetNextProtectedFile": 3,
                "bind=NONE type=FUNC name=SYSSETUP.dll_AsrRestorePlugPlayRegistryData": 3,
                "bind=NONE type=FUNC name=SYSSETUP.dll_AsrAddSifEntryW": 3,
                "bind=NONE type=FUNC name=SYSSETUP.dll_AsrFreeContext": 3,
                "bind=NONE type=FUNC name=SYSSETUP.dll_AsrCreateStateFileW": 3,
                "bind=NONE type=FUNC name=OLEAUT32.dll_SysStringLen": 3,
                "bind=NONE type=FUNC name=VSSAPI.DLL_Ordinal_3": 3,
                "bind=NONE type=FUNC name=VSSAPI.DLL_Ordinal_4": 3,
                "bind=NONE type=FUNC name=VSSAPI.DLL_?CreateVssBackupComponents@@YGJPAPAVIVssBackupComponents@@@Z": 3,
                "bind=NONE type=FUNC name=VSSAPI.DLL_VssFreeSnapshotProperties": 3,
                "section=.data type=utf16le string=\\\\?\\GlobalRoot": 1,
                "section=.data type=utf16le string=acehol.der": 1,
                "section=.data type=utf16le string=Placehol.der": 1,
                "section=.data type=utf32le string=, (!##&&": 1,
                "section=.data type=utf32le string=\\b\\t\\n\\v\\f\\r": 1,
                "section=.data type=utf16le string=M\u00db\u00ec!>> blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.data type=utf16le ABCDEF\u03e4\u0101\u2188\u010e\u2388\u010e\u03d0\u0101\u03b0\u0101 blocks=Basic Latin,Greek and Coptic,Latin Extended-A,Number Forms,Miscellaneous Technical": 1,
                "section=.data type=utf16le string=NO_NAME": 1,
                "section=.data type=utf16le string=PARTITION": 1,
                "section=.data type=utf16le string=\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a": 1,
                "section=.data type=utf16le string=\\b\\b\\b\\b": 1,
                "section=.data type=utf16le string=\\r\\n\\n\\n\\n\\n\\r\\r\\r\\r": 1,
                "section=.data type=utf16le string=\\r\\r\\r\\a\\a\\a\\t\\a\\a\\a\\a\\a\\a\\a\\r\\b\\b\\f\\b\\b\\b\\b\\b\\b\\r": 1,
                "section=.data type=utf16le string=\\n\\v\u0100\\b blocks=Basic Latin,Latin Extended-A": 1,
                "section=.data type=utf8 string=\u0633>x; blocks=Arabic,Basic Latin": 1,
                "section=.data type=utf8 string=\\t\u90f8U{ blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf8 string=j\u2545\u02dbQ blocks=Basic Latin,Box Drawing,Spacing Modifier Letters": 1,
                "section=.data type=utf8 string=VP\u04de. blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf16le string=IDR_XCHG_RCVR_IS_PHASE\\nDLGINCLUDE": 1,
                "section=.rsrc type=utf16le string=IDR_XCHG_RCVR_DS_PHASE": 1,
                "section=.rsrc type=utf16le string=File": 5,
                "section=.rsrc type=utf16le string=&Select": 4,
                "section=.rsrc type=utf16le string=&Deselect": 4,
                "section=.rsrc type=utf16le string=&Version...": 2,
                "section=.rsrc type=utf16le string=&View": 7,
                "section=.rsrc type=utf16le string=&List": 3,
                "section=.rsrc type=utf16le string=&Details": 3,
                "section=.rsrc type=utf16le string=MediaTools": 1,
                "section=.rsrc type=utf16le string=Erase": 3,
                "section=.rsrc type=utf16le string=Format": 2,
                "section=.rsrc type=utf16le string=&Mark as free": 2,
                "section=.rsrc type=utf16le string=Re-tension": 2,
                "section=.rsrc type=utf16le string=Catalog": 3,
                "section=.rsrc type=utf16le string=Delete catalog": 2,
                "section=.rsrc type=utf16le string=dd to &Import media": 2,
                "section=.rsrc type=utf16le string=dd to &Backup media": 2,
                "section=.rsrc type=utf16le string=Delete catalog from &system": 2,
                "section=.rsrc type=utf16le string=E&ject from drive": 1,
                "section=.rsrc type=utf16le string=LogicalDisk": 1,
                "section=.rsrc type=utf16le string=Catalog file...": 1,
                "section=.rsrc type=utf16le string=TapeDrive": 1,
                "section=.rsrc type=utf16le string=Catalog tape...": 1,
                "section=.rsrc type=utf16le string=&ject tape": 1,
                "section=.rsrc type=utf16le string=&Job": 2,
                "section=.rsrc type=utf16le string=E&xit": 2,
                "section=.rsrc type=utf16le string=&Toolbar": 2,
                "section=.rsrc type=utf16le string=&Status Bar": 2,
                "section=.rsrc type=utf16le string=&Help": 2,
                "section=.rsrc type=utf16le string=&Help Topics": 2,
                "section=.rsrc type=utf16le string=&Using Help": 2,
                "section=.rsrc type=utf16le string=&New\\tCtrl+N": 1,
                "section=.rsrc type=utf16le string=S&tart": 1,
                "section=.rsrc type=utf16le string=&Load Selections": 1,
                "section=.rsrc type=utf16le string=&Save Selections": 1,
                "section=.rsrc type=utf16le string=Save Selections &As...": 1,
                "section=.rsrc type=utf16le string=Recent File": 1,
                "section=.rsrc type=utf16le string=&Edit": 1,
                "section=.rsrc type=utf16le string=&Select\\tSpace": 1,
                "section=.rsrc type=utf16le string=&Deselect\\tSpace": 1,
                "section=.rsrc type=utf16le string=&Move Up": 1,
                "section=.rsrc type=utf16le string=&Refresh\\tF5": 1,
                "section=.rsrc type=utf16le string=&Tools": 1,
                "section=.rsrc type=utf16le string=Switch to &Wizard Mode": 1,
                "section=.rsrc type=utf16le string=Backup Wizard": 1,
                "section=.rsrc type=utf16le string=Restore Wizard": 2,
                "section=.rsrc type=utf16le string=ASR Wizard": 1,
                "section=.rsrc type=utf16le string=emote &Store...": 1,
                "section=.rsrc type=utf16le string=a&talog a backup file...": 1,
                "section=.rsrc type=utf16le string=&MediaTools": 1,
                "section=.rsrc type=utf16le string=E&ject from library": 1,
                "section=.rsrc type=utf16le string=&eport...": 1,
                "section=.rsrc type=utf16le string=&Options...": 1,
                "section=.rsrc type=utf16le string=&About Backup Utility...": 1,
                "section=.rsrc type=utf16le string=&What's this?": 1,
                "section=.rsrc type=utf16le string=\\bMS Shell Dlg": 74,
                "section=.rsrc type=utf16le string=Backup Utility for Windows": 1,
                "section=.rsrc type=utf16le string=Copyright \u00a9 2001 Microsoft and VERITAS Software Corporation. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Microsoft and VERITAS Software Corporation": 1,
                "section=.rsrc type=utf16le string=Selection Information": 1,
                "section=.rsrc type=utf16le string=Cancel": 22,
                "section=.rsrc type=utf16le string=#\\v1\\n\u1024 blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=File estimate:": 1,
                "section=.rsrc type=utf16le string=X\\vL\\n\u1025 blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=Byte estimate:": 1,
                "section=.rsrc type=utf16le string=SysAnimate32": 2,
                "section=.rsrc type=utf16le string=\\t)\u00d4\\r\u04a9 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=SysListView32": 5,
                "section=.rsrc type=utf16le string=Exclude Files": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u00a0\\t blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Files excluded for a&ll users:": 1,
                "section=.rsrc type=utf16le string=A&dd new...": 1,
                "section=.rsrc type=utf16le string=&Edit...": 1,
                "section=.rsrc type=utf16le string=&Remove": 1,
                "section=.rsrc type=utf16le string=\\ac\u00e2\\b\u0554 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=Files excluded for &user %s:": 1,
                "section=.rsrc type=utf16le string=\\am\u00e2;\u0facSysListView32 blocks=Basic Latin,Latin-1 Supplement,Tibetan": 1,
                "section=.rsrc type=utf16le string=Add &new...": 1,
                "section=.rsrc type=utf16le string=Ed&it...": 1,
                "section=.rsrc type=utf16le string=Re&move": 1,
                "section=.rsrc type=utf16le string=Add Excluded Files": 1,
                "section=.rsrc type=utf16le string=&Registered file type:": 1,
                "section=.rsrc type=utf16le string=j8\\b\u03ea blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=&Custom file mask:": 1,
                "section=.rsrc type=utf16le string=u\u00bc\\f\u0fb2 blocks=Basic Latin,Latin-1 Supplement,Tibetan": 1,
                "section=.rsrc type=utf16le string=&Applies to path:": 1,
                "section=.rsrc type=utf16le string=&Browse...": 9,
                "section=.rsrc type=utf16le string=\\a\u00af\u00b1\\n\u0553 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=Applies to all &subfolders": 1,
                "section=.rsrc type=utf16le string=Do not back up files of these types": 1,
                "section=.rsrc type=utf16le string=SysTreeView32": 2,
                "section=.rsrc type=utf16le string=Select the options you want to use.": 1,
                "section=.rsrc type=utf16le string=&Verify data after backup": 1,
                "section=.rsrc type=utf16le string=Verification reads the backed-up data to verify its integrity. This step takes extra time, but verification helps ensure that your backup is successful.": 1,
                "section=.rsrc type=utf16le string=Use &hardware compression, if available": 1,
                "section=.rsrc type=utf16le string=Hardware compression increases the available storage space on the backup media, which reduces storage costs.": 1,
                "section=.rsrc type=utf16le string=&Disable volume shadow copy": 1,
                "section=.rsrc type=utf16le string=A volume shadow copy allows files to be backed up even though they are in the process of being written to.": 1,
                "section=.rsrc type=utf16le string=To close this wizard and proceed with the backup, click Finish.": 1,
                "section=.rsrc type=utf16le string=sK'\\t\u101c blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=What:": 2,
                "section=.rsrc type=utf16le string=sX'\\t\u101d blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=Media type:": 1,
                "section=.rsrc type=utf16le string=How:": 2,
                "section=.rsrc type=utf16le string=sr'\\t\u101f blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=When:": 3,
                "section=.rsrc type=utf16le string=All files on my local drive(s)": 5,
                "section=.rsrc type=utf16le string=s>'\\t": 1,
                "section=.rsrc type=utf16le string=Description:": 5,
                "section=.rsrc type=utf16le string=se'\\t": 1,
                "section=.rsrc type=utf16le string=Media:": 5,
                "section=.rsrc type=utf16le string=Completing the Backup Wizard": 2,
                "section=.rsrc type=utf16le string=You have successfully completed the Backup wizard. You specified the following settings:": 1,
                "section=.rsrc type=utf16le string=Completing the Backup or Restore Wizard": 5,
                "section=.rsrc type=utf16le string=s#\u00bd\\v blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=You have created the following backup settings:": 4,
                "section=.rsrc type=utf16le string=s2'\\t": 1,
                "section=.rsrc type=utf16le string=Name:": 3,
                "section=.rsrc type=utf16le string=rA(\\t": 1,
                "section=.rsrc type=utf16le string=sP'\\t\u101c blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=Contents:": 4,
                "section=.rsrc type=utf16le string=s_'\\t\u101d blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=Location:": 4,
                "section=.rsrc type=utf16le string=sn'\\t\u101f blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=Type:": 3,
                "section=.rsrc type=utf16le string=Normal": 4,
                "section=.rsrc type=utf16le string=Other:": 1,
                "section=.rsrc type=utf16le string=s\u00af\u00bd\\v\u101a blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=To close this wizard and start the backup, click Finish": 1,
                "section=.rsrc type=utf16le string=What do you want to back up?": 1,
                "section=.rsrc type=utf16le string=&My documents and settings": 1,
                "section=.rsrc type=utf16le string=&Everyone's documents and settings": 1,
                "section=.rsrc type=utf16le string=Pq\\n\u8103 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=&All information on this computer": 1,
                "section=.rsrc type=utf16le string=ur\\n\u8104 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=&Let me choose what to back up": 1,
                "section=.rsrc type=utf16le string=Includes all data on this computer, and creates a system recovery disk that can be used to restore Windows in the case of a major failure.": 1,
                "section=.rsrc type=utf16le string=Includes the My Documents folder, plus your Favorites, desktop, and cookies.": 1,
                "section=.rsrc type=utf16le string=Includes every user's My Documents folder, plus their Favorites, desktop, and cookies.": 1,
                "section=.rsrc type=utf16le string=Select what you want to back up:": 1,
                "section=.rsrc type=utf16le string=Back up &everything on this computer": 1,
                "section=.rsrc type=utf16le string=Back up selected &files, drives, or network data": 1,
                "section=.rsrc type=utf16le string=Only back up the &System State data": 1,
                "section=.rsrc type=utf16le string=Double-click an item on the left to see its contents on the right. Then select the check box next to any drive, folder, or file that you want to back up.": 1,
                "section=.rsrc type=utf16le string=\\a#\u012fe\u03e9 blocks=Basic Latin,Latin Extended-A,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=&Items to back up:": 1,
                "section=.rsrc type=utf16le string=Select the &type of backup:": 1,
                "section=.rsrc type=utf16le string=\\v\u00c8>\u0504 blocks=Basic Latin,Latin-1 Supplement,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=Description": 3,
                "section=.rsrc type=utf16le string=Specify whether to back up contents of files which have migrated to Remote Storage.": 1,
                "section=.rsrc type=utf16le string=o\u00b9\\n\u04f4 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=Backup migrated &Remote Storage data": 1,
                "section=.rsrc type=utf16le string=When do you want to run the backup?": 1,
                "section=.rsrc type=utf16le string=No&w": 1,
                "section=.rsrc type=utf16le string=&Later": 1,
                "section=.rsrc type=utf16le string=<#\\b\u051b blocks=Basic Latin,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=&Job name:": 2,
                "section=.rsrc type=utf16le string=N!\\b\u051c blocks=Basic Latin,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=Start &date:": 1,
                "section=.rsrc type=utf16le string=:\u00ba/\u1017 blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=This backup job cannot be scheduled for later execution because the Task Scheduler interface is not present or is not started.": 1,
                "section=.rsrc type=utf16le string=+\u00c8J\u1016 blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=Schedule entry": 1,
                "section=.rsrc type=utf16le string=&Set Schedule...": 1,
                "section=.rsrc type=utf16le string=\\f\u00a2\\t\u100e blocks=Basic Latin,Latin-1 Supplement,Myanmar": 2,
                "section=.rsrc type=utf16le string=&Select the backup type:": 2,
                "section=.rsrc type=utf16le \u00c8\\b\u03e9 blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Choose the &tape you want to use:": 2,
                "section=.rsrc type=utf16le string=<\u00c88\u0502 blocks=Basic Latin,Latin-1 Supplement,Cyrillic Supplement": 2,
                "section=.rsrc type=utf16le \u00c8\\b\u03eb blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Choose a &place to save your backup:": 2,
                "section=.rsrc type=utf16le string=<\u00c8\u00a2\u8105 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs": 2,
                "section=.rsrc type=utf16le string=Bro&wse...": 5,
                "section=.rsrc type=utf16le string=T&ype a name for this backup:": 2,
                "section=.rsrc type=utf16le string=T&ype a label for this tape:": 2,
                "section=.rsrc type=utf16le string=You will also need a floppy disk to store system recovery information.": 1,
                "section=.rsrc type=utf16le string=&When restoring files that already exist on your computer:": 1,
                "section=.rsrc type=utf16le string=&Leave existing files (Recommended)": 1,
                "section=.rsrc type=utf16le string=&Replace existing files if they are older than the backup files": 1,
                "section=.rsrc type=utf16le string=.\u00b1\\b\u0fae blocks=Basic Latin,Latin-1 Supplement,Tibetan": 1,
                "section=.rsrc type=utf16le string=R&eplace existing files": 1,
                "section=.rsrc type=utf16le string=Select a destination for the restored files and folders.": 1,
                "section=.rsrc type=utf16le string=&Restore files to:": 2,
                "section=.rsrc type=utf16le string=-\u00a8\\n\u0548 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=&Alternate location:": 2,
                "section=.rsrc type=utf16le string=MS Shell Dlg": 8,
                "section=.rsrc type=utf16le string=&Click to select the check box for any drive, folder or file that you want to back up.": 1,
                "section=.rsrc type=utf16le string=Backup &destination:": 1,
                "section=.rsrc type=utf16le string=Backup &media or file name:": 3,
                "section=.rsrc type=utf16le string=&Start Backup": 2,
                "section=.rsrc type=utf16le string=Backup options:": 1,
                "section=.rsrc type=utf16le string=Expand the desired media item, then &check the box for the items to restore. Right click on a media item for options:": 1,
                "section=.rsrc type=utf16le string=&Start Restore": 1,
                "section=.rsrc type=utf16le string=If files already exist:": 1,
                "section=.rsrc type=utf16le string=Restore": 1,
                "section=.rsrc type=utf16le string=&Do not replace the file on my computer (recommended).": 1,
                "section=.rsrc type=utf16le string=/\u00d4\\n\u0fac blocks=Basic Latin,Latin-1 Supplement,Tibetan": 1,
                "section=.rsrc type=utf16le string=&Replace the file on disk only if the file on disk is older.": 1,
                "section=.rsrc type=utf16le string=I\u00d4\\n\u0fae blocks=Basic Latin,Latin-1 Supplement,Tibetan": 1,
                "section=.rsrc type=utf16le string=A&lways replace the file on my computer.": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u00e2] blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=When restoring a file that is already on my computer": 1,
                "section=.rsrc type=utf16le string=Backup Type": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u00e2\" blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=This page allows you to select a default backup type. Which options you select here depend on how often you back up, how quickly you want to restore, and how much storage space you have.": 1,
                "section=.rsrc type=utf16le string=\\a5F\\b\u0551 blocks=Basic Latin,Armenian": 1,
                "section=.rsrc type=utf16le string=&Default Backup Type:": 1,
                "section=.rsrc type=utf16le string=\\a@\u00e2?\u0546 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=\\aN\u00e21 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string='  \u00e3\u00de blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=&Close": 1,
                "section=.rsrc type=utf16le string=&Report...": 1,
                "section=.rsrc type=utf16le string=\\bE*\\b\u03ea blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Label:": 1,
                "section=.rsrc type=utf16le string=*\\a( \u0446SysAnimate32 blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf16le string=msctls_progress32": 4,
                "section=.rsrc type=utf16le string=\\b5(\\b\u03e9 blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Drive:": 1,
                "section=.rsrc type=utf16le string=\\bU(\\b\u03eb blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Status:": 1,
                "section=.rsrc type=utf16le string=\\bk(\\b\u03ec blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Progress:": 1,
                "section=.rsrc type=utf16le string=Processing:": 1,
                "section=.rsrc type=utf16le string=Time:": 1,
                "section=.rsrc type=utf16le string=\\b\u00b9(\\b\u03f2 blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Files:": 1,
                "section=.rsrc type=utf16le string=\\b\u00cb(\\b\u03f3 blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Bytes:": 1,
                "section=.rsrc type=utf16le string=@zL\\b\u03ed blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Elapsed:": 1,
                "section=.rsrc type=utf16le string=zL\\b\u0450 blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf16le string=Estimated remaining:": 1,
                "section=.rsrc type=utf16le string=Estimated:": 1,
                "section=.rsrc type=utf16le string=The backup is complete.": 1,
                "section=.rsrc type=utf16le string=The restore is complete.": 1,
                "section=.rsrc type=utf16le string=To see detailed information, click Report.": 1,
                "section=.rsrc type=utf16le string=@\u00caL\\f\u03ff blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=@\u00b9L\\f\u0400 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=@\u00afL\\b\u03f1 blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Processed:": 1,
                "section=.rsrc type=utf16le string=Operation Status": 1,
                "section=.rsrc type=utf16le string=&Abort": 1,
                "section=.rsrc type=utf16le string=\\a\\f \\b": 1,
                "section=.rsrc type=utf16le string=Summary:": 1,
                "section=.rsrc type=utf16le string=\\a\\4\\b\u03f0 blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Files processed:": 1,
                "section=.rsrc type=utf16le string=AZN\\f\u047f blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf16le string=\\-\\b\u03ef blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Elapsed time:": 1,
                "section=.rsrc type=utf16le string=ZN\\f\u047e blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf16le string=\\ao9\\b\u03f1 blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Bytes processed:": 1,
                "section=.rsrc type=utf16le string=AmN\\f\u0480 blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf16le string=Processing Dir:": 1,
                "section=.rsrc type=utf16le string=&Append this backup to the existing backups": 1,
                "section=.rsrc type=utf16le string=(\u00ba\\n\u0fa6 blocks=Basic Latin,Latin-1 Supplement,Tibetan": 1,
                "section=.rsrc type=utf16le string=&Replace the existing backups": 1,
                "section=.rsrc type=utf16le string=If the medium you are using to back up your data already contains backups, choose one of the following options:": 1,
                "section=.rsrc type=utf16le string=^\u00c8\\e\u04b3 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=Allo&w only the owner and the Administrator access to the backup data and to any backups appended to this medium": 1,
                "section=.rsrc type=utf16le string=The following option is available only if you are replacing the existing backups.": 1,
                "section=.rsrc type=utf16le string=Confirm Restore": 1,
                "section=.rsrc type=utf16le string=\\t\\a\u00f9$\u04b6 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=To set advanced options for restoring your data, click Advanced.\\n\\nTo start restoring your data now, click OK.": 1,
                "section=.rsrc type=utf16le string=&Advanced...": 5,
                "section=.rsrc type=utf16le string=Remote Store": 1,
                "section=.rsrc type=utf16le string=Type the name of the server to query.": 1,
                "section=.rsrc type=utf16le string=&Server:": 1,
                "section=.rsrc type=utf16le string=Backup Log": 1,
                "section=.rsrc type=utf16le string=&Detailed": 1,
                "section=.rsrc type=utf16le string=\\f?\u00ab\\v\u04c8 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=&Summary": 1,
                "section=.rsrc type=utf16le string=\\fj\u00ab\\v\u04c9 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=&None": 1,
                "section=.rsrc type=utf16le string=Logs all information, including the names of all the files and folders.": 1,
                "section=.rsrc type=utf16le string=Logs only key operations, such as loading a tape, starting the backup, or failing to open a file.": 1,
                "section=.rsrc type=utf16le string=Do not log.": 1,
                "section=.rsrc type=utf16le string=Information": 1,
                "section=.rsrc type=utf16le string=SysTabControl32": 1,
                "section=.rsrc type=utf16le string=Backup details": 1,
                "section=.rsrc type=utf16le string=Backup set:": 1,
                "section=.rsrc type=utf16le string=Device:": 1,
                "section=.rsrc type=utf16le string=Job summary:": 1,
                "section=.rsrc type=utf16le string=Schedule data": 1,
                "section=.rsrc type=utf16le string=D&elete": 1,
                "section=.rsrc type=utf16le string=Start Date:": 1,
                "section=.rsrc type=utf16le string=&Properties...": 1,
                "section=.rsrc type=utf16le string=\\aL\u00c7$\u1017 blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=A backup job cannot be scheduled for later execution because the Task Scheduler interface is not present or is not started.": 1,
                "section=.rsrc type=utf16le string=&Last month": 1,
                "section=.rsrc type=utf16le string=T&oday": 1,
                "section=.rsrc type=utf16le string=&Next month": 1,
                "section=.rsrc type=utf16le string=sJ'\\t\u101c blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=sW'\\t\u101d blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=s~'\\t\u101e blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=sq'\\t\u101f blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=Verify off, Compression on, Append to tape": 1,
                "section=.rsrc type=utf16le string=s='\\t": 1,
                "section=.rsrc type=utf16le string=Unamed set": 3,
                "section=.rsrc type=utf16le string=sd'\\t": 1,
                "section=.rsrc type=utf16le string=To specify additional backup options, click Advanced.": 2,
                "section=.rsrc type=utf16le string=To close this wizard and start the backup, click Finish.": 3,
                "section=.rsrc type=utf16le string=sI/\\b\u101d blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=Restore from:": 5,
                "section=.rsrc type=utf16le string=Tape Drive 1": 4,
                "section=.rsrc type=utf16le string=sY/\\t": 1,
                "section=.rsrc type=utf16le string=si/\\b": 1,
                "section=.rsrc type=utf16le string=Restore to:": 4,
                "section=.rsrc type=utf16le string=Static": 6,
                "section=.rsrc type=utf16le string=sy/\\b": 1,
                "section=.rsrc type=utf16le string=Existing files:": 4,
                "section=.rsrc type=utf16le string=To specify additional options, click Advanced.": 1,
                "section=.rsrc type=utf16le string=Completing the Restore Wizard": 2,
                "section=.rsrc type=utf16le string=You have successfully completed the Restore wizard. You specified the following settings:": 1,
                "section=.rsrc type=utf16le string=To close this wizard and start the restore, click Finish.": 3,
                "section=.rsrc type=utf16le string=s8'\\t": 2,
                "section=.rsrc type=utf16le string=test": 6,
                "section=.rsrc type=utf16le string=s['\\t\u101c blocks=Basic Latin,Myanmar": 2,
                "section=.rsrc type=utf16le string=sl'\\t\u101d blocks=Basic Latin,Myanmar": 2,
                "section=.rsrc type=utf16le string=sJ'\\t": 2,
                "section=.rsrc type=utf16le string=sG/\\b\u101d blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=sW/\\t": 1,
                "section=.rsrc type=utf16le string=sg/\\b": 1,
                "section=.rsrc type=utf16le string=sw/\\b": 1,
                "section=.rsrc type=utf16le string=To specify additional restore options, click Advanced.": 1,
                "section=.rsrc type=utf16le string=You have created the following restore settings:": 2,
                "section=.rsrc type=utf16le string=sR/\\b\u101d blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=sb*\\t": 1,
                "section=.rsrc type=utf16le string=sr*\\t": 1,
                "section=.rsrc type=utf16le string=Original Locations.": 2,
                "section=.rsrc type=utf16le string=Do not replace existing files.": 2,
                "section=.rsrc type=utf16le string=To close this wizard and proceed with the restore, click Finish.": 1,
                "section=.rsrc type=utf16le string=You have successfully completed the Restore wizard.\\n\\nYou selected the following settings:": 1,
                "section=.rsrc type=utf16le string=sJ/\\b\u101d blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=sZ*\\t": 1,
                "section=.rsrc type=utf16le string=sj*\\t": 1,
                "section=.rsrc type=utf16le string=sz*\\t": 1,
                "section=.rsrc type=utf16le string=Advanced Restore Options": 2,
                "section=.rsrc type=utf16le string=Restore &security.": 1,
                "section=.rsrc type=utf16le string=R&estore junction points, and restore file and folder data under junction points to the original location.": 1,
                "section=.rsrc type=utf16le string=When restoring &replicated data sets, mark the restored data as the primary data for all replicas.": 1,
                "section=.rsrc type=utf16le string=Restore the &Cluster Registry to the quorum disk and all other nodes.": 1,
                "section=.rsrc type=utf16le string=\\a`\u00d9\\n\u056b blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=&Preserve existing volume mount points.": 1,
                "section=.rsrc type=utf16le string=General": 1,
                "section=.rsrc type=utf16le string=&Compute selection information before backup and restore operations.": 1,
                "section=.rsrc type=utf16le string=&Use the catalogs on the media to speed up building restore catalogs on disk.": 1,
                "section=.rsrc type=utf16le string=\\a9\u00e2\\n\u0519 blocks=Basic Latin,Latin-1 Supplement,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=&Verify data after the backup completes.": 1,
                "section=.rsrc type=utf16le string=\\aM\u00e2\\n\u054c blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=&Back up the contents of mounted drives.": 1,
                "section=.rsrc type=utf16le string=Show al&ert message when I start the Backup Utility and Removable Storage is not running.": 1,
                "section=.rsrc type=utf16le string=Show alert &message when I start the Backup Utility and there is recognizable media available.": 1,
                "section=.rsrc type=utf16le string=Sho&w alert message when new media is inserted.": 1,
                "section=.rsrc type=utf16le string=\\a\u00ac\u00e2\\n\u0550 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=Alwa&ys allow use of recognizable media without prompting.": 1,
                "section=.rsrc type=utf16le string=Waiting for tape": 1,
                "section=.rsrc type=utf16le \\a\u00e7\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Tape loading in process... Click Cancel to stop.": 1,
                "section=.rsrc type=utf16le string=Requested tape:\\n     %s": 1,
                "section=.rsrc type=utf16le string=Progress1": 3,
                "section=.rsrc type=utf16le string=Animate1": 1,
                "section=.rsrc type=utf16le string=Advanced Backup Options": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u00d4\\n\u04f4 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=Back up data that is in &Remote Storage.": 1,
                "section=.rsrc type=utf16le string=&Verify data after backup.": 1,
                "section=.rsrc type=utf16le string=\\a!\u00d4\\n\u04b2 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=If possible, &compress the backup data to save space.": 1,
                "section=.rsrc type=utf16le string=&Automatically backup System Protected Files with the System State.": 1,
                "section=.rsrc type=utf16le string=\\aB\u00d4\\n\u1035 blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=&Disable volume shadow copy.": 1,
                "section=.rsrc type=utf16le string=\\aP.\\b\u03e9 blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=Backup &Type:": 1,
                "section=.rsrc type=utf16le string=\\aY\u00d4>\u0504 blocks=Basic Latin,Latin-1 Supplement,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=\\ak\u00d4* blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Backup Job Information": 1,
                "section=.rsrc type=utf16le string=S&chedule...": 1,
                "section=.rsrc type=utf16le string=A&dvanced...": 1,
                "section=.rsrc type=utf16le string=\\a\\a}\\b\u03e9 blocks=Basic Latin,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=&Backup description:": 1,
                "section=.rsrc type=utf16le \u00b4\\n\u0fa5 blocks=Basic Latin,Latin-1 Supplement,Tibetan": 1,
                "section=.rsrc type=utf16le string=A&ppend this backup to the media.": 1,
                "section=.rsrc type=utf16le string=<\u00b4\\n\u0fa6 blocks=Basic Latin,Latin-1 Supplement,Tibetan": 1,
                "section=.rsrc type=utf16le string=R&eplace the data on the media with this backup.": 1,
                "section=.rsrc type=utf16le string=\\a$\u00c5' blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=If the media already contains backups": 1,
                "section=.rsrc type=utf16le string=\\aS\u00c1\\n\u03ea blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=If the media is overwritten, use this &label to identify the media:": 1,
                "section=.rsrc type=utf16le string=&Allow only the owner and the Administrator access to the backup data.": 1,
                "section=.rsrc type=utf16le string=Insert Next Media": 1,
                "section=.rsrc type=utf16le string=\\a7\u00ab\\b\u03e9 blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=&Access backup file:": 1,
                "section=.rsrc type=utf16le string=Insert the next media used for this disk backup, or specify where the file can be found.": 1,
                "section=.rsrc type=utf16le string=Select Tape Drive": 2,
                "section=.rsrc type=utf16le string=&Select a tape drive to use for restore.": 1,
                "section=.rsrc type=utf16le string=Check Backup File Location": 2,
                "section=.rsrc type=utf16le string=\\a-\u00ac  blocks=Basic Latin,Latin-1 Supplement": 2,
                "section=.rsrc type=utf16le string=The backup file could not be found or is not the file that was requested. \\r\\n\\r\\nPlease verify this is the correct location for the backup you want to catalog.": 1,
                "section=.rsrc type=utf16le string=Backup file requested:": 2,
                "section=.rsrc type=utf16le string=Open Backup File": 1,
                "section=.rsrc type=utf16le string=*\\f\u00aa\\v blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Please specify the file that you would like to catalog.": 1,
                "section=.rsrc type=utf16le string=&Open:": 1,
                "section=.rsrc type=utf16le string=&Select a tape drive to catalog.": 1,
                "section=.rsrc type=utf16le string=Double click an item on the left to see its contents. Then select the check box next to any drive, folder, or file that you want to restore.": 1,
                "section=.rsrc type=utf16le string=Ite&ms to restore:": 1,
                "section=.rsrc type=utf16le string=\\a$\u012fd\u03e9 blocks=Basic Latin,Latin Extended-A,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=B&rowse...": 3,
                "section=.rsrc type=utf16le string=Select the media type and media or file to use.": 1,
                "section=.rsrc type=utf16le string=&Restore from:": 1,
                "section=.rsrc type=utf16le \u00c88\u0502 blocks=Basic Latin,Latin-1 Supplement,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le \u00c8\\f\u1033 blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=Restore &all files on the system drive": 1,
                "section=.rsrc type=utf16le string=Restore &system files only": 1,
                "section=.rsrc type=utf16le string=Restore the system s&tate only": 1,
                "section=.rsrc type=utf16le string=Select the type of data to restore:": 1,
                "section=.rsrc type=utf16le string=sR+\\b\u101e blocks=Basic Latin,Myanmar": 1,
                "section=.rsrc type=utf16le string=WWWWWWWWWWWWWWWWWWWW": 3,
                "section=.rsrc type=utf16le string=sb&\\t": 1,
                "section=.rsrc type=utf16le string=b\u00aa\\b\u04ee blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "section=.rsrc type=utf16le string=sr&\\t": 1,
                "section=.rsrc type=utf16le string=Completing the Automated System Recovery Wizard": 1,
                "section=.rsrc type=utf16le string=s(\u00bd  blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=You have successfully completed the Automated System Recovery wizard.\\n\\nYou made the following selections:": 1,
                "section=.rsrc type=utf16le string=To close this wizard and begin restoring the data, click Finish.": 1,
                "section=.rsrc type=utf16le string=Security": 1,
                "section=.rsrc type=utf16le string=\\a\\t4\\n": 1,
                "section=.rsrc type=utf16le string=&User name:": 1,
                "section=.rsrc type=utf16le string=\\a\\e4\\n": 1,
                "section=.rsrc type=utf16le string=&Password:": 2,
                "section=.rsrc type=utf16le string=\\a-4\\n": 1,
                "section=.rsrc type=utf16le string=&Verify password:": 1,
                "section=.rsrc type=utf16le string=Backup Reports": 1,
                "section=.rsrc type=utf16le string=&Report date, time and backup job name:": 1,
                "section=.rsrc type=utf16le string=&Print": 1,
                "section=.rsrc type=utf16le string=The backup file could not be found or is not the file that was requested. \\r\\n\\r\\nPlease verify this is the correct location for the backup you want to restore.": 1,
                "section=.rsrc type=utf16le string=Removable Storage Not Running": 1,
                "section=.rsrc type=utf16le string=The Backup Utility cannot connect to the Removable Storage service.  This service is required for use of tape drives and other backup devices.": 1,
                "section=.rsrc type=utf16le string=\\aVv\\v\u0518 blocks=Basic Latin,Cyrillic Supplement": 2,
                "section=.rsrc type=utf16le string=&Do not show this message again.": 5,
                "section=.rsrc type=utf16le string=\\a'\u00be# blocks=Basic Latin,Latin-1 Supplement": 2,
                "section=.rsrc type=utf16le string=Please exit and start the Removable Storage service using the System Services function of the Management Console.": 1,
                "section=.rsrc type=utf16le string=Blank Password": 1,
                "section=.rsrc type=utf16le string=$\\a\u00d8\\e blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=No password has been entered for the user name associated with this job.  Are you sure you want to use a blank password?": 1,
                "section=.rsrc type=utf16le string=&Yes": 1,
                "section=.rsrc type=utf16le string=\"=v\\v\u0518 blocks=Basic Latin,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=Set Account Information": 1,
                "section=.rsrc type=utf16le string=R&un as:": 1,
                "section=.rsrc type=utf16le string=&Confirm password:": 1,
                "section=.rsrc type=utf16le string=Restoring Microsoft Exchange": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u00c77 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=You have selected backups from an Exchange Server for restore.\\n\\nBackups of the Information Store may be re-directed to another Exchange Server, but  backups of the Exchange Directory Service may only be restored to the original location.": 1,
                "section=.rsrc type=utf16le D-\\b\u0542 blocks=Basic Latin,Armenian": 1,
                "section=.rsrc type=utf16le string=Backup From:": 5,
                "section=.rsrc type=utf16le string=hDs\\b\u0523 blocks=Basic Latin,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=WWWWWWWWWWWWWWW*": 4,
                "section=.rsrc type=utf16le string=j'\\b\u0533 blocks=Basic Latin,Armenian": 1,
                "section=.rsrc type=utf16le string=Restore To:": 2,
                "section=.rsrc type=utf16le string=Browse...": 1,
                "section=.rsrc type=utf16le string=\"~S\\n\u0535 blocks=Basic Latin,Armenian": 1,
                "section=.rsrc type=utf16le string=Erase all existing data": 2,
                "section=.rsrc type=utf16le string=~&\\n\u0536 blocks=Basic Latin,Armenian": 1,
                "section=.rsrc type=utf16le string=Private": 1,
                "section=.rsrc type=utf16le string=~#\\n\u0537 blocks=Basic Latin,Armenian": 1,
                "section=.rsrc type=utf16le string=Public": 1,
                "section=.rsrc type=utf16le string=Start Service After Restore": 2,
                "section=.rsrc type=utf16le string=\\aX\u0103H\u053a blocks=Basic Latin,Latin Extended-A,Armenian": 1,
                "section=.rsrc type=utf16le string=Exchange Information Store": 1,
                "section=.rsrc type=utf16le \u00b9(\\b\u053d blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=d\u00b9w\\b\u053f blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=!\u00c8S\\n\u0540 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=\\a\u00a9\u01031\u0539 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A,Armenian": 1,
                "section=.rsrc type=utf16le string=Exchange Directory Service": 1,
                "section=.rsrc type=utf16le string=Choose the Exchange Server where data will be restored, and select the desired restore options.": 1,
                "section=.rsrc type=utf16le string=WWWWWWWWWWWWWWW": 2,
                "section=.rsrc type=utf16le string='\u00c8\\b\u0533 blocks=Basic Latin,Latin-1 Supplement,Armenian": 2,
                "section=.rsrc type=utf16le string=Restore &To:": 2,
                "section=.rsrc type=utf16le string=M\u00c3\\n\u0535 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=&Erase all existing Information Store data beforing restoring": 1,
                "section=.rsrc type=utf16le string=\\\u00c5\\n\u0538 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=S&tart the Information Store service after restoring data": 1,
                "section=.rsrc type=utf16le string=k\u00c5\\n\u0537 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=Restore p&ublic data": 1,
                "section=.rsrc type=utf16le string=z\u00c5\\n\u0536 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=Restore &private data": 1,
                "section=.rsrc type=utf16le string=Select the desired restore options:": 1,
                "section=.rsrc type=utf16le string=&Erase all existing Directory Service data before restoring": 1,
                "section=.rsrc type=utf16le string=.\u00f1\\n\u0541 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=S&tart the Directory Service after restoring data": 1,
                "section=.rsrc type=utf16le string=Recognizable Media Found": 2,
                "section=.rsrc type=utf16le string=The Backup Utility has found recognizable media that it has not seen before.": 1,
                "section=.rsrc type=utf16le string=Media label:": 1,
                "section=.rsrc type=utf16le \u00be\\n\u054b blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=&Allow Backup Utility to use this media.": 1,
                "section=.rsrc type=utf16le string=&Erase the contents of this media.": 1,
                "section=.rsrc type=utf16le string=&Ignore this media for now.": 1,
                "section=.rsrc type=utf16le string=\\a.\u00cf1 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Action": 1,
                "section=.rsrc type=utf16le string=\\ah\u00c8\\n\u0519 blocks=Basic Latin,Latin-1 Supplement,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=&Always allow use of recognized media without prompting.": 1,
                "section=.rsrc type=utf16le string=\\awv\\v\u0518 blocks=Basic Latin,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u00b3) blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=The Backup Utility has found one or more pieces of recognizable media that it has not seen before.": 1,
                "section=.rsrc type=utf16le string=\\a8\u00be\\n\u054d blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=&Allow Backup Utility to use all the recognized media.": 1,
                "section=.rsrc type=utf16le string=\\aGv\\v\u0518 blocks=Basic Latin,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=Tree1": 1,
                "section=.rsrc type=utf16le string=Required Media Missing": 1,
                "section=.rsrc type=utf16le string=%\\a\u00d4E\u0556 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=To close this wizard and begin the backup, click Finish.": 1,
                "section=.rsrc type=utf16le string=s\\b\u00bd# blocks=Basic Latin,Latin-1 Supplement": 2,
                "section=.rsrc type=utf16le string=Completing the Automated System Recovery Preparation Wizard": 1,
                "section=.rsrc type=utf16le string=You will use this disk and the backup to restore your system in the event of a major failure.": 1,
                "section=.rsrc type=utf16le string=You have successfully completed the Automated System Recovery Preparation wizard.": 1,
                "section=.rsrc type=utf16le string=When you click Finish, the wizard creates a backup of your system files. You will then be asked to insert a floppy disk.": 1,
                "section=.rsrc type=utf16le string=s\u00b2\u00bd\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=After the wizard creates a backup of your files, you will then be asked to insert a floppy disk. \\n\\nYou will use this disk and the backup to restore your system in the event of a major failure.": 1,
                "section=.rsrc type=utf16le string=Select a media type for your system backup, and then enter the name of the media to store the backup data.": 1,
                "section=.rsrc type=utf16le string=Backup media &type:": 1,
                "section=.rsrc type=utf16le string=\"\u00c8A\u100d blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=?\u00c88\u0502 blocks=Basic Latin,Latin-1 Supplement,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=?\u00c8\\f\u1033 blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=The wizard will also require a floppy disk to create a recovery disk. This disk will contain information necessary to recover your system.": 1,
                "section=.rsrc type=utf16le string=Welcome to the Automated System Recovery Preparation Wizard": 1,
                "section=.rsrc type=utf16le string=This wizard helps you create a backup of your system files and an ASR disk that you can use to restore your system in the event of a major system failure.": 1,
                "section=.rsrc type=utf16le string=To ensure that your data files can also be restored, use the Backup wizard to create a separate backup of your data files after completing this wizard.": 1,
                "section=.rsrc type=utf16le string=To continue, click Next.": 6,
                "section=.rsrc type=utf16le string=sh\u00bd\\b\u101b blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=Welcome to the Automated System Recovery Wizard": 1,
                "section=.rsrc type=utf16le string=This wizard guides you through the process of restoring your Windows system files, configuration, and disk partitions.": 1,
                "section=.rsrc type=utf16le string=You need to have a backup of your system that you created when your system was last operating properly.": 1,
                "section=.rsrc type=utf16le string=Seconds till auto forward:": 1,
                "section=.rsrc type=utf16le string=": 1,
                "section=.rsrc type=utf16le string=sG\u00b5\\b\u101a blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rsrc type=utf16le string=Welcome to the Restore Wizard": 1,
                "section=.rsrc type=utf16le string=This wizard helps you restore data that you previously backed up to tape or disk.": 1,
                "section=.rsrc type=utf16le string=sP\u00bd\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=This wizard helps you create a backup copy of your data. In the event of a hardware failure or accidental erasure, you can use the backup copy to restore your data.": 1,
                "section=.rsrc type=utf16le string=Welcome to the Backup Wizard": 1,
                "section=.rsrc type=utf16le string=s\\t\u00bd\\e blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Welcome to the Backup or Restore Wizard": 1,
                "section=.rsrc type=utf16le string=This wizard helps you back up or restore the files and settings on your computer.": 1,
                "section=.rsrc type=utf16le string=ysLink": 1,
                "section=.rsrc type=utf16le string=If you prefer, you can switch to <a>Advanced Mode</a> to change the settings used for backup or restore. This option is recommended for advanced users only.": 1,
                "section=.rsrc type=utf16le string=txf\\n\u4ef6 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=Always start in &wizard mode": 1,
                "section=.rsrc type=utf16le string=What do you want to do?": 1,
                "section=.rsrc type=utf16le string=(a\\n\u4ef3 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=B&ack up files and settings": 1,
                "section=.rsrc type=utf16le string=<a\\n\u4ef4 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=&Restore files and settings": 1,
                "section=.rsrc type=utf16le string=Backup &label:": 1,
                "section=.rsrc type=utf16le string=N\u00c8\\t\u03ea blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "section=.rsrc type=utf16le string=&Media label:": 1,
                "section=.rsrc type=utf16le string=Accept the default labels shown, or type a different label.": 1,
                "section=.rsrc type=utf16le string=If the media is blank, or its data is replaced, use this label instead.": 1,
                "section=.rsrc type=utf16le string=Restore &security settings": 1,
                "section=.rsrc type=utf16le string=R&estore junction points, but not the folders and file data they reference": 1,
                "section=.rsrc type=utf16le string=:\u00d9\\n\u056b blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=&Preserve existing volume mount points": 1,
                "section=.rsrc type=utf16le string=Restore the &Cluster Registry to the quorum disk and all other nodes": 1,
                "section=.rsrc type=utf16le string=When restoring &replicated data sets, mark the restored data as the primary data for all replicas": 1,
                "section=.rsrc type=utf16le string=Select the options you want to use:": 1,
                "section=.rsrc type=utf16le string=Welcome to the Backup Utility Advanced Mode": 1,
                "section=.rsrc type=utf16le string=SysLink": 1,
                "section=.rsrc type=utf16le string=If you prefer, you can switch to <a>Wizard Mode</a> to use simplified settings for backup or restore.": 1,
                "section=.rsrc type=utf16le string=&Backup Wizard (Advanced)": 1,
                "section=.rsrc type=utf16le $ \u04c7 blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf16le string=The Backup wizard helps you create a backup of your programs and files.": 1,
                "section=.rsrc type=utf16le string=&Restore Wizard (Advanced)": 1,
                "section=.rsrc type=utf16le string=d$ \u04c8 blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf16le string=The Restore wizard helps you restore your data from a backup.": 1,
                "section=.rsrc type=utf16le string=&Automated System Recovery Wizard": 1,
                "section=.rsrc type=utf16le string=The ASR Wizard. Need I say more?": 1,
                "section=.rsrc type=utf16le string=Access Denied to Tape Media": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u00be\\e blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=The current user account does not have rights to access the media managed by Removable Storage. As a result, no tape devices are available to this account.": 1,
                "section=.rsrc type=utf16le string=If desired, an administrator can grant access to this account by running the Backup Utility to create the media pools for this application, then granting this account rights to access each pool.": 1,
                "section=.rsrc type=utf16le string=Restoring Database Store": 1,
                "section=.rsrc type=utf16le string=\\a5-\\b\u0542 blocks=Basic Latin,Armenian": 1,
                "section=.rsrc type=utf16le \u00c6\\b\u0523 blocks=Basic Latin,Latin-1 Supplement,Cyrillic Supplement": 1,
                "section=.rsrc type=utf16le string=\\aF'\\b\u0533 blocks=Basic Latin,Armenian": 1,
                "section=.rsrc type=utf16le string=&Restore To:": 1,
                "section=.rsrc type=utf16le string=\\ad\u00e8\\b\u0568 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=Temporary location for &log and patch files:": 2,
                "section=.rsrc type=utf16le string=L&ast Restore Set (Log file replay will start after this restore completes.)": 2,
                "section=.rsrc type=utf16le string=&Mount Database After Restore": 2,
                "section=.rsrc type=utf16le string=\\a\\a\u00c0' blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=You have selected to restore backups from a database store.\\n\\nThis backup data may be restored to the original server, or re-directed to another database server.": 1,
                "section=.rsrc type=utf16le string=Emergency Repair Diskette": 1,
                "section=.rsrc type=utf16le string=\\e\u00d1\\e\u056f blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=Also &backup the registry to the repair directory. This backup can be used to help recover your system if the registry is damaged.": 1,
                "section=.rsrc type=utf16le string=Choose the database server where data will be restored, and select the desired restore options.": 1,
                "section=.rsrc type=utf16le string=R\u00e8\\b\u0568 blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=s\u00e6\\n\u056c blocks=Basic Latin,Latin-1 Supplement,Armenian": 1,
                "section=.rsrc type=utf16le string=Create ASR Diskette": 1,
                "section=.rsrc type=utf16le string='\\at\\b": 1,
                "section=.rsrc type=utf16le string=Copying files for ASR Diskette": 1,
                "section=.rsrc type=utf16le string=Found free media...": 1,
                "section=.rsrc type=utf16le string=\\bMS Sans Serif": 2,
                "section=.rsrc type=utf16le string=Waiting for previous media operation to finish...": 1,
                "section=.rsrc type=utf16le string=Backup Utility": 4,
                "section=.rsrc type=utf16le string=Looking for backup devices...": 1,
                "section=.rsrc type=utf16le \\r\u7b06\u7004 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf8 string=\\awp\u074f blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf8 string=\\r\u0747r{ blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf8 string=\\r\u0747rw7Ot blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf8 string=x \u074fwx blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf8 string=,x\\b\\r\u0747 blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf8 string=\\b\u043b;\\r\\b blocks=Basic Latin,Cyrillic": 1,
                "section=.rsrc type=utf8 string=\\r\u0747\\bw blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf8 string=\\b\u065d\u065d* blocks=Basic Latin,Arabic": 1,
                "section=.rsrc type=utf16le string=\\n\u00b3\ua887\u0400 blocks=Basic Latin,Latin-1 Supplement,Saurashtra,Cyrillic": 1,
                "section=.rsrc type=utf16le string=\\r\\n\u3200\uf770\u860d\u6f60\ue660 blocks=Basic Latin,Enclosed CJK Letters and Months,Private Use Area,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u0d07\u2400\u00dd blocks=Basic Latin,Malayalam,Control Pictures,Latin-1 Supplement": 1,
                "section=.rsrc type=utf8 string=\\a\u0100f` blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rsrc type=utf16le string=\\f\\b\uff04\u0400 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Cyrillic": 1,
                "section=.rsrc type=utf16le string=\\f\\b\uff04\u0800 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Samaritan": 1,
                "section=.rsrc type=utf16le string=\\f\\b\uff04\u0400\u7f70\uff0a\u0400\u8078 blocks=Basic Latin,Halfwidth and Fullwidth Forms,Cyrillic,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=\\f\\b\uff06\u7802 blocks=Basic Latin,Halfwidth and Fullwidth Forms,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf8 string=cL[\u017f blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rsrc type=utf8 string=\\e_y\u06f1 blocks=Basic Latin,Arabic": 1,
                "section=.rsrc type=utf8 string=\u5b9d(55 blocks=CJK Unified Ideographs,Basic Latin": 1,
                "section=.rsrc type=utf8 string=R3\\rh\u0728 blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf8 string=\u77c1/f=\\e blocks=CJK Unified Ideographs,Basic Latin": 1,
                "section=.rsrc type=utf8 string=wf]\u019f blocks=Basic Latin,Latin Extended-B": 1,
                "section=.rsrc type=utf8 string=LHH\ue59b blocks=Basic Latin,Private Use Area": 1,
                "section=.rsrc type=utf8 string=LED\u530e blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf8 string=SFB\u189e blocks=Basic Latin,Mongolian": 1,
                "section=.rsrc type=utf8 string=WC8\u0492ob\u06e1 blocks=Basic Latin,Cyrillic,Arabic": 1,
                "section=.rsrc type=utf8 string=\u0304lb\uc898 blocks=Combining Diacritical Marks,Basic Latin,Hangul Syllables": 1,
                "section=.rsrc type=utf8 string=uu\u07e4ll blocks=Basic Latin,NKo": 1,
                "section=.rsrc type=utf32le string=\\b( @": 1,
                "section=.rsrc type=utf8 string=wwwwwwwww\\f\\b": 2,
                "section=.rsrc type=utf8 string=tDDDDDDDDD\\f\\b@": 2,
                "section=.rsrc type=utf32le string=\\a\\a\\a\\a\\a\\a\\a\u8007\uc007\ue007 blocks=Basic Latin,CJK Unified Ideographs,Hangul Syllables,Private Use Area": 2,
                "section=.rsrc type=utf16le string=@ \u0800\\b blocks=Basic Latin,Samaritan": 1,
                "section=.rsrc type=utf16le string=\\b\u00c4\u8708\u7383\u8787\u8787\u7373\u7878x\u400c\u7380\uf7f3\u7ff7\u777f\u0807\u1703 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs,CJK Unified Ideographs Extension A,Private Use Area,Samaritan,Tagalog": 1,
                "section=.rsrc type=utf16le string=#!\u7473\u6672h blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rsrc type=utf16le string=PYREX": 1,
                "section=.rsrc type=utf16le string=ELWOOD": 1,
                "section=.rsrc type=utf16le string=MMPRODUCTS1": 1,
                "section=.rsrc type=utf16le string=SYS-WIN4-PDC": 1,
                "section=.rsrc type=utf16le string=SMADAMOT": 1,
                "section=.rsrc type=utf16le string=DWSQL2": 1,
                "section=.rsrc type=utf16le string=GUILO": 1,
                "section=.rsrc type=utf16le string=CHEECHEW": 1,
                "section=.rsrc type=utf16le string=TODDLA": 1,
                "section=.rsrc type=utf16le string=MM-MIPS2": 1,
                "section=.rsrc type=utf16le string=IAYF": 1,
                "section=.rsrc type=utf16le string=HITME": 1,
                "section=.rsrc type=utf16le string=\\n\\n\u6f50\u7472\u7244\u7669\u7265\u4c53\u4443\u3233\u6d2e\u6470 blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A,Enclosed CJK Letters and Months": 1,
                "section=.rsrc type=utf16le string=\\a\\v\u6e49\u5066\u7461\u4168\u4144\u5450\u5245\u492e\u464e blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A": 1,
                "section=.rsrc type=utf16le string=\\n\"\u7244\u7669\u7265\u6544\u6373\u6f53\u796e\u5020\u6f72\u7270\u6569\u6174\u7972\u4320\u2d44\u4f52\u204d\u6f43\u746e\u6f72\u6c6c\u72659 blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A,Tifinagh,General Punctuation": 1,
                "section=.rsrc type=utf16le string=\\t\\f\u6544\u4c76\u616f\u6564\u6d72\u646d\u7665\u646c blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A": 2,
                "section=.rsrc type=utf16le string=\\b\\a\u0807\u0707\\a blocks=Basic Latin,Samaritan,Syriac": 1,
                "section=.rsrc type=utf16le string=\\a\\a\u040c\u080f\u0707\u00ff blocks=Basic Latin,Cyrillic,Samaritan,Syriac,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=\\a\\b\u0c0c\u0c0c\u040c blocks=Basic Latin,Telugu,Cyrillic": 1,
                "section=.rsrc type=utf32le string=( @\ud800\udc01 blocks=Basic Latin,Linear B Syllabary": 2,
                "section=.rsrc type=utf32le string=\\f\\f\\f\\f\\f": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=Windows Backup Utility": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2111)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=NTBackup.Exe": 2,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le string=Begin Backup of '%1' %n%n\\r\\n%tVerify:  %2 %n\\r\\n%tMode:  %3 %n\\r\\n%tType:  %4 %n\\r\\n": 1,
                "section=.rsrc type=utf16le string=End Backup of '%1' '%2'%n%n\\r\\n%tVerify:  %3 %n\\r\\n%tMode:  %4 %n\\r\\n%tType:  %5 %n\\r\\n%nConsult the backup report for more details.%n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Begin Restore to '%1' %n%n\\r\\n%tVerify:  %2 %n\\r\\n": 1,
                "section=.rsrc type=utf16le string=End Restore to '%1' '%2'%n%n\\r\\n%tVerify:  %3 %n\\r\\n%nConsult the backup report for more detail.%n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Begin Erase\\r\\n": 1,
                "section=.rsrc type=utf16le string=End Erase '%1'\\r\\n%nConsult the backup report for more detail.%n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Begin Retension\\r\\n": 1,
                "section=.rsrc type=utf16le string=End Retension '%1'\\r\\n%nConsult the backup report for more detail.%n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Begin Verify of '%1'\\r\\n": 1,
                "section=.rsrc type=utf16le string=End Verify of '%1' '%2'\\r\\n%nConsult the backup report for more detail.%n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Microsoft Exchange services returned '%1' from a call to '%2' additional data '%3'\\r\\n": 1,
                "section=.rsrc type=utf16le string=Microsoft Exchange services returned too few databases for backup\\r\\nOnly %1 databases was retured but Backup expected %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=The '%1' returned '%2' from a call to '%3' additional data '%4'\\r\\n": 1,
                "section=.rsrc type=utf16le string=Out of space on disk while cataloging backup media\\r\\n": 1,
                "section=.rsrc type=utf16le string=Out of space on disk while cataloging the backup\\r\\n": 1,
                "section=.rsrc type=utf16le string=Out of space on disk while writing log\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTBackup information: '%1'\\r\\n": 1,
                "section=.rsrc type=utf16le string=NTBackup error: '%1'\\r\\n": 1,
                "section=.rsrc type=utf16le string=Begin Operation\\r\\n": 1,
                "section=.rsrc type=utf16le string=End Operation: %1\\r\\n%nConsult the backup report for more details.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\fNTBACKUP.EXE\\fntbackup.ini,Automated System Recovery Preparation Wizard": 1,
                "section=.rsrc type=utf16le string=Cannot find %s.)Estimating size of backup. Please wait...": 1,
                "section=.rsrc type=utf16le string=Remove the diskette, and label it as shown:\\n\\nWindows Automated System Recovery Disk for %s\\n\\nRemove the archive media, and label it as shown:\\n\\n%s\\n\\nKeep them both in a safe place in case your system needs to be restored using Windows Automated System Recovery.": 1,
                "section=.rsrc type=utf16le string=qInsert a blank, 1.44 MB, formatted diskette in drive %c:.  Recovery information will be written to this diskette.\\aasr.sif": 1,
                "section=.rsrc type=utf16le string=Version %s Rev. %s": 1,
                "section=.rsrc type=utf16le .41": 1,
                "section=.rsrc type=utf16le string=FThere is not enough space on the disk. Please insert a different disk.": 1,
                "section=.rsrc type=utf16le string=\\tCompleted": 1,
                "section=.rsrc type=utf16le The recovery diskette must be standard 1.44MB media.": 1,
                "section=.rsrc type=utf16le string=$Press Finish to schedule the backup.bBackup cannot %s files to a read-only drive or unknown device. Specify another location or device.\u00e6Turning off Selection Information computation will cause time estimates and file counts to not appear and the progress bar to not function during backup and restore operations.  Are you sure you want to skip Selection Information? blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=!Microsoft Backup Utility Recovery": 1,
                "section=.rsrc type=utf16le string=Active backup destination: %s": 1,
                "section=.rsrc type=utf16le string=RThere is no floppy drive available.  The ASR recovery diskette can not be created.": 1,
                "section=.rsrc type=utf16le string=Free Tape #%ld": 1,
                "section=.rsrc type=utf16le string=Restore and Manage Media": 1,
                "section=.rsrc type=utf16le string=E&ject media from the drive.)Switch the Backup Utility to Wizard Mode.": 1,
                "section=.rsrc type=utf16le string=The ASR recovery diskette was not created. \\n\\nYou will not be able to restore an ASR backup without the system information stored on this diskette.  \\n\\nPlease refer to the on-line help for further assistance.\u00c0Could not create or access shared backup catalog file directory:\\n \"%s\"\\n\\nVerify that you have full access to the folder and there is disk space available.\\n\\nUsing private media catalogs instead.fThe backup file name could not be used.\\n\\nPlease specify a valid location and name for the backup file. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Mounting the media...\u00e5The Backup Utility could not estimate the backup size for \"%s\".\\n\\nPlease ensure all the backup selections are valid.\\n\\nThe operation will continue, but size estimates may not be accurate and the files on this device may be skipped.$Warnings or errors were encountered.\u010fRestoring the Cluster Registry will replace the master version on the cluster disk with the copy contained in this backup.\\n\\nThis option will stop the Cluster Service on all the nodes, which will bring the entire cluster down.\\n\\nAre you certain this is what you want to do?%Creating System Restore checkpoint...\\fRemote StoreoThe NETBIOS computer name can be a maximum of 15 characters. Please verify you have correctly entered the name. blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "section=.rsrc type=utf16le string=Backup File Problem": 1,
                "section=.rsrc type=utf16le string=AThe drive is not ready, or the diskette is not inserted properly. The diskette is write-protected.EThe diskette contains an unrecognized file system, or is unformatted.": 1,
                "section=.rsrc type=utf16le string=The diskette is unusable.": 1,
                "section=.rsrc type=utf16le string=Windows Backup File": 1,
                "section=.rsrc type=utf16le string=Operating System Backup %s\\eOperating System Backup Set": 1,
                "section=.rsrc type=utf16le string=\\aOptions": 1,
                "section=.rsrc type=utf16le string=Failed": 1,
                "section=.rsrc type=utf16le string=.The %s completed, but some files were skipped.": 1,
                "section=.rsrc type=utf16le string=backup\\arestore": 1,
                "section=.rsrc type=utf16le string=Full System Backup %s": 1,
                "section=.rsrc type=utf16le string=Full System Backup Set": 1,
                "section=.rsrc type=utf16le string=The network share \"%s\" could not be reached. Please make sure the path still exists and your network connection is functioning correctly.": 1,
                "section=.rsrc type=utf16le string=Copy\\vIncremental": 1,
                "section=.rsrc type=utf16le string=Ready": 1,
                "section=.rsrc type=utf16le string=&Backing up files from your computer...": 1,
                "section=.rsrc type=utf16le string=#Restoring files to your computer...": 1,
                "section=.rsrc type=utf16le string=Verifying files...": 1,
                "section=.rsrc type=utf16le string=Retensioning the tape...": 1,
                "section=.rsrc type=utf16le string=Erasing the media...": 1,
                "section=.rsrc type=utf16le string=Cataloging the media...0Access to this device or folder has been denied.": 1,
                "section=.rsrc type=utf16le string=Ejecting the media...$Gathering file system information...!Gathering hardware information...": 1,
                "section=.rsrc type=utf16le string=Lhttp://www.microsoft.com/isapi/redir.dll?prd=Win2000&ar=partners&sba=Veritas": 1,
                "section=.rsrc type=utf16le string=Restore Database Server": 1,
                "section=.rsrc type=utf16le string=,The operation did not successfully complete.": 1,
                "section=.rsrc type=utf16le string=ASpecify how to restore the selected backup of the database store.(Preparing to backup using shadow copy...": 1,
                "section=.rsrc type=utf16le string=Backup or Restore Wizard\\eAccount Information Warning\u00acPlease make sure that the specified account can access the Backup Selection file for this job:\\n\\n\"%s\" \\n\\nYou may have to move this file or apply appropriate file permissions. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Backup or RestoreKYou can back up files and settings, or restore them from a previous backup.": 1,
                "section=.rsrc type=utf16le string=KPlease remove the tape from the ejection port.\\n\\nPress OK when you are done.sPlease remove the tape from the drive.\\n\\nIf there is a drive door, please close it, then press OK when you are done.iIf the ejection port has not closed automatically, please manually close it.\\n\\nPress OK when you are done.": 1,
                "section=.rsrc type=utf16le string=Completed with Skipped Files": 1,
                "section=.rsrc type=utf16le string=Initializing the catalogs...\"Initializing the user interface...": 1,
                "section=.rsrc type=utf16le string=Formatting the tape...\\fDifferential": 1,
                "section=.rsrc type=utf16le string=Daily": 2,
                "section=.rsrc type=utf16le string=Media\\rBackup device": 1,
                "section=.rsrc type=utf16le string=\\b/Exclude\\fMS Shell Dlg)SOFTWARE\\Microsoft\\Windows\\CurrentVersion": 1,
                "section=.rsrc type=utf16le string=ProgramFilesDir\\nWindows NT": 1,
                "section=.rsrc type=utf16le string=My documents and settings!Everyone's documents and settings All information on this computer": 1,
                "section=.rsrc type=utf16le string=Selected files and folders": 1,
                "section=.rsrc type=utf16le string=WThe requested file does not appear to be a BKF file. Do you want to overwrite the file?": 1,
                "section=.rsrc type=utf16le string=+The %s is full.  Please insert the next %s.": 1,
                "section=.rsrc type=utf16le string=Disk": 1,
                "section=.rsrc type=utf16le string=The %s is complete.": 1,
                "section=.rsrc type=utf16le string=The %s was cancelled..The %s could not be completed due to an error.": 1,
                "section=.rsrc type=utf16le string=YCannot locate the specified media or backup device. This backup operation will terminate.\u00a7The requested media is not currently on-line.  Please insert the specified media:\\n\\n    \"%s\", media #%d\\n\\nor click Cancel and restart the backup using a different media.\u00acThere is no free media available with the selected type.\\n\\nAdd unused media or click Cancel to end the operation.\\n\\nNote: It may take up to 60 seconds to recognize new media.\u00ffThere is no free media available with the selected type, but the following unrecognized media was found:\\n\\n\"%s\" in device \"%s\"\\n\\nDo you want to use this media now?\\n\\nWarning: This will erase any information that may have been recorded by another application.\u00f3There is no free media available with the selected type, but the following media was found:\\n \\n\"%s\" in device \"%s\"\\n\\nDo you want to use this media now?\\n\\nWarning: This will erase any information that may have been recorded by another application.\u00f4There is no free media available with the selected type, but the following media was found:\\n\\n\"%s\" in device \"%s\"\\n\\nDo you want to use this media now?\\n\\nWarning: The media appears to contain a valid backup. It will be erased if you use this media. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Unrecognized media has been found in location \"%s\".\\n\\nThis media may have never been used, or may contain information generated by an incompatible program. \\n\\nDo you want to prepare this media for use with Backup?\\n\\nWarning: This will erase any data currently on the media.\u00a1The next media required in the active family is not currently on-line.  Please insert the media:\\n\\n\"%s\", media #%d\\n\\nor click Cancel to stop the current operation.\u00bfThe current media is full and additional media is not currently on-line.  Please insert the specified media:\\n\\n\"%s\", media #%d\\n\\nor click Cancel and select the next media to use for the backup. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Unknown Tape #%ld": 1,
                "section=.rsrc type=utf16le string=Import Tape #%ld": 1,
                "section=.rsrc type=utf16le string=Unrecognized Tape #%ld": 1,
                "section=.rsrc type=utf16le string=the active backup device": 1,
                "section=.rsrc type=utf16le string=\\rBackup Status": 1,
                "section=.rsrc type=utf16le string=Restore Status": 1,
                "section=.rsrc type=utf16le string=\\rVerify Status": 1,
                "section=.rsrc type=utf16le string=Catalog Status": 1,
                "section=.rsrc type=utf16le string=Re-tension Status\\fErase Status": 1,
                "section=.rsrc type=utf16le string=\\rFormat Status": 1,
                "section=.rsrc type=utf16le string=\\nBACKUP.HLP": 1,
                "section=.rsrc type=utf16le string=,SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion": 1,
                "section=.rsrc type=utf16le string=You are about to restore Microsoft Exchange components.  The Microsoft Exchange services on the destination server will be stopped.lStarting Microsoft Exchange services on \\\\%s.\\n Be sure to verify that this service has started successfully.*Copying Microsoft Exchange database files.gThe Microsoft Exchange service on \\\\%s has\\nreported an error. Check the event log for more information.": 1,
                "section=.rsrc type=utf16le string=Your account is not a member of the Backup Operators group \\non either this system or \\\\%s. \\nYou cannot back up this Microsoft Exchange server.\u00c1The Microsoft Exchange services could not be stopped.  Your account must be\\na member of the Administrators group on this system and \\non\\\\%s.You cannot restore to this Microsoft Exchange server. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Backup Type: %s\\n": 1,
                "section=.rsrc type=utf16le string=Deleting existing log files.KYou have selected to restore the Public database to a Private only server.\\nKYou have selected to restore the Private database to a Public only server.\\n": 1,
                "section=.rsrc type=utf16le string=Microsoft Exchange services returned too few databases for backup.  Only %s databases was retured but the Backup Utility expected %s?The '%s' returned '%s' from a call to '%s' additional data '%s'I\\nError returned while creating the volume shadow copy:%s\\nAborting Backup.b\\nError returned while creating the volume shadow copy:%s\\nReverting to non-shadow copy backup mode.}Critical files that make up System State were not successfuly backed up.\\nRestoring this backup set will cause system failure.": 1,
                "section=.rsrc type=utf16le string=Critical files that make up System State were not successfuly restored.\\nThe system may not operate correctly after the next reboot.": 1,
                "section=.rsrc type=utf16le string=WThe %s service on \\\\%s has\\nreported an error. Check the event log for more information.": 1,
                "section=.rsrc type=utf16le string=[Unable to restore Exchange data to %s,\\ncheck the application event log for more information": 1,
                "section=.rsrc type=utf16le string=Invalid path specified\u00acDo you want to unlock the library door? \\r\\n\\r\\nThis operation will require the library to re-identify media when \\r\\nthe door is closed, which may be a time consuming operation.cThe library door is unlocked. \\r\\n\\r\\nPress OK when the media has been replaced and the door is closed. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le The selected backup file was not found, or is corrupted.": 1,
                "section=.rsrc type=utf16le string=\\bTape: %s+Let me choose a location not listed here...": 1,
                "section=.rsrc type=utf16le string=$Choose a &place to save your backup:": 1,
                "section=.rsrc type=utf16le string=LPlease do not use the following characters in the name.\\n< > : \" / \\ | ? * ..": 1,
                "section=.rsrc type=utf16le string=&Alternate location:\\rF&older name:": 1,
                "section=.rsrc type=utf16le string=\\fBackup Abort": 1,
                "section=.rsrc type=utf16le A read error occurred.  Writing recovered data to %s..The recovered data was associated with a file.0The recovered data was associated with a folder.QThe data starting at offset %d, size %d was unreadable. The file has been padded.": 1,
                "section=.rsrc type=utf16le string='Unable to append to the requested media-Unable to append to the requested backup fileBThe network disk drive has stopped responding. Backup set aborted.": 1,
                "section=.rsrc type=utf16le string=\\eMicrosoft Exchange (Legacy)": 1,
                "section=.rsrc type=utf16le string=%sGB\\rBackup Wizard": 1,
                "section=.rsrc type=utf16le string=Normal backup.": 1,
                "section=.rsrc type=utf16le string=Copy backup.": 1,
                "section=.rsrc type=utf16le string=Differential backup.": 1,
                "section=.rsrc type=utf16le string=Incremental backup.": 1,
                "section=.rsrc type=utf16le string=Daily backup.  \\vFull log.": 1,
                "section=.rsrc type=utf16le string=Summary log.  \\tNo log.": 1,
                "section=.rsrc type=utf16le string=All file types.  \\eSome file types excluded.": 1,
                "section=.rsrc type=utf16le string=Append to media.": 1,
                "section=.rsrc type=utf16le string=Please enter a valid job name.": 1,
                "section=.rsrc type=utf16le string=VERIFY\\aSKIPPED": 1,
                "section=.rsrc type=utf16le string=, ,%s Files (*.bkf)|*.bkf|All Files (*.*)|*.*||": 1,
                "section=.rsrc type=utf16le string=Multiple media.": 1,
                "section=.rsrc type=utf16le string=Select file to catalog": 1,
                "section=.rsrc type=utf16le string= Automated System Recovery Wizard": 1,
                "section=.rsrc type=utf16le string=Restore all data on media!Restore only Windows system files\"Only restore the system state data\u00c1The Task Scheduler service is not running.  You cannot schedule a backup task \\nuntil you start the Task Scheduler using System Services Management.\\n\\nDo you want to start the Task Scheduler now?\u00bdThe Task Scheduler service is not running.  You cannot edit a backup task \\nuntil you start the Task Scheduler using System Services Management.\\n\\nDo you want to start the Task Scheduler now?)The Task Scheduler service did not start. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Backup name: %s\\nDisk Number: %d": 1,
                "section=.rsrc type=utf16le string=^The Scheduling Agent is not connected or running.   This job cannot be scheduled at this time.": 1,
                "section=.rsrc type=utf16le string=Copy\\vIncremental\\fDifferential": 1,
                "section=.rsrc type=utf16le string=Media created %s at %s": 1,
                "section=.rsrc type=utf16le string=%s created %s at %s": 1,
                "section=.rsrc type=utf16le string=Media Security ViolationDThis media has been secured.  You do not have the proper privileges.": 1,
                "section=.rsrc type=utf16le string='Partial catalog of backup file complete": 1,
                "section=.rsrc type=utf16le string=Catalog Information-No un-cataloged sets were found on the media.": 1,
                "section=.rsrc type=utf16le string=+Unable to load catalog data from the media.": 1,
                "section=.rsrc type=utf16le string=Backup Utility,Current media is from a different media set.": 1,
                "section=.rsrc type=utf16le string=Error Restoring File": 1,
                "section=.rsrc type=utf16le string=The Backup Utility cannot restore %s: There is not enough space on the disk.\\n\\nDelete one or more files to increase disk space, and then try again.": 1,
                "section=.rsrc type=utf16le string=Warning: The target file system does not support some the features of the original file system.  Some data may not be restored as a result.": 1,
                "section=.rsrc type=utf16le string=mThe specified computer is not a Microsoft Exchange server or its Microsoft Exchange services are not started.": 1,
                "section=.rsrc type=utf16le string=Microsoft Exchange\\tDirectory": 1,
                "section=.rsrc type=utf16le string=Information Store:The specified computer is not a Microsoft Exchange server.'The specified computer cannot be found.JThe Microsoft Exchange %s service is not started on the selected computer.YThe selected Microsoft Exchange service is currently \\nbeing backed up by another process.": 1,
                "section=.rsrc type=utf16le string=eYour account does not have access to start the Microsoft Exchange services on the specified computer./The Microsoft Exchange service failed to start.": 1,
                "section=.rsrc type=utf16le string=DYour account does not have access to this Microsoft Exchange server.wThe specified path is not local to this computer.  It may not be accessible at recovery time.  Do you wish to continue?": 1,
                "section=.rsrc type=utf16le string=Removing a Scheduled Job)Are you sure you want to delete job \"%s\"?": 1,
                "section=.rsrc type=utf16le string=&You must enter a user domain and name.\"The password entries do not match.": 1,
                "section=.rsrc type=utf16le string=NThe specified job name is already used.  You must select a different job name.3The specified job name contains invalid characters.": 1,
                "section=.rsrc type=utf16le string=\\nMM/dd/yyyy": 1,
                "section=.rsrc type=utf16le string=You have either run out of space, or the backup file (.bkf) is too large for this disk.\\nNote: If this disk is formatted with FAT32, the maximum possible size for the backup file is limited to 4 GB.\\n\\nThe backup operation will stop.": 1,
                "section=.rsrc type=utf16le string=\\vInteractive\\bUntitled": 1,
                "section=.rsrc type=utf16le string=The device failed on a request to %s.\\nThere may a hardware or media problem.\\nPlease check the system event log for relevant failures.\u00a7The device reported an error on a request to %s.\\nError reported: %s.\\nThere may be a hardware or media problem.\\nPlease check the system event log for relevant failures. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=\\vDrive Error8Folder %s does not exist.  Do you want to create it now?": 1,
                "section=.rsrc type=utf16le string=Folder Does Not Exist": 1,
                "section=.rsrc type=utf16le string=!Timeout before function completed": 1,
                "section=.rsrc type=utf16le string=End of media early warning\\bBad data": 1,
                "section=.rsrc type=utf16le string=No media is in drive": 1,
                "section=.rsrc type=utf16le string=File mark encountered\\aNo data": 1,
                "section=.rsrc type=utf16le string=Invalid command\\tBus reset": 1,
                "section=.rsrc type=utf16le string=Write protected media": 1,
                "section=.rsrc type=utf16le string=Hardware failure\\rUnknown error!Attempt to move past end of media@Device block size differs from size with which media was written": 1,
                "section=.rsrc type=utf16le string=Media is not formatted\\ninitialize\\fclaim device\\fclose device\\rde-initialize": 1,
                "section=.rsrc type=utf16le string=read data from media": 1,
                "section=.rsrc type=utf16le string=write data to media": 1,
                "section=.rsrc type=utf16le string=write a file mark to media\\espace forward by file marks": 1,
                "section=.rsrc type=utf16le string=space backward by file marks": 1,
                "section=.rsrc type=utf16le string=space to end of data": 1,
                "section=.rsrc type=utf16le string=space forward by blocks": 1,
                "section=.rsrc type=utf16le string=space backward by blocks": 1,
                "section=.rsrc type=utf16le string=erase the media": 1,
                "section=.rsrc type=utf16le string=rewind the tape": 1,
                "section=.rsrc type=utf16le string=retension the tape": 1,
                "section=.rsrc type=utf16le string=get device status": 1,
                "section=.rsrc type=utf16le string=release device": 1,
                "section=.rsrc type=utf16le string=seek to a logical media address$report current logical media address": 1,
                "section=.rsrc type=utf16le string=mount the media": 1,
                "section=.rsrc type=utf16le string=dismount the media": 1,
                "section=.rsrc type=utf16le string=get device information": 1,
                "section=.rsrc type=utf16le string=change physical block size#enable/disable hardware compression": 1,
                "section=.rsrc type=utf16le string=eject the media": 1,
                "section=.rsrc type=utf16le string=Catalog Warning": 1,
                "section=.rsrc type=utf16le string=\\rCatalog Error6Error reading a catalog file, the file may be corrupt.9Error writing a catalog file, check available disk space.uError opening a catalog file, check available disk space, and Verify that you have full access to the working folder.": 1,
                "section=.rsrc type=utf16le string=#Error: The catalog file is corrupt.": 1,
                "section=.rsrc type=utf16le string=Insufficient memory available.": 2,
                "section=.rsrc type=utf16le string=Could not access or create backup catalog files.  Verify that you have full access to the working folder and there is disk space available.": 1,
                "section=.rsrc type=utf16le string=Unknown error.\\rLogging error\u00b8The Backup Utility ran out of disk space writing to the log file. The log file is incomplete.\\n\\nVerify that you have full access to the working folder and there is disk space available.WThis set cannot be catalogued because the media containing the catalog data is missing.{The drive \"%s\" did not respond. Please make sure there is a valid disk in the drive and the drive is functioning correctly. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=\\rErase Warning7Are you sure you want to erase the media in the drive ?": 1,
                "section=.rsrc type=utf16le string=Format Warning8Are you sure you want to format the media in the drive ?": 1,
                "section=.rsrc type=utf16le string=Re-tension Warning": 1,
                "section=.rsrc type=utf16le string=Unrecognized Media@The selected media contains unreconized data and connot be used.": 1,
                "section=.rsrc type=utf16le string=Unrecognizable MediaHThe media in the drive has an unrecognizable format or is not formatted.eThe media is mounted in a drive that does not support tensioning.\\nThis operation cannot be completed.": 1,
                "section=.rsrc type=utf16le string=Out of Sequence ErrornMedia in this set require sequential access.  Only the first media of the set can be independently identified.bThis is a compressed backup set created by another application.  It can not be viewed or restored.aThis is an encrypted backup set created by another application.  It cannot be viewed or restored.WThis set was written with a newer version of software and cannot be viewed or restored.eThe media is mounted in a drive that does not support formatting.\\nThis operation cannot be completed.": 1,
                "section=.rsrc type=utf16le string=\\This media was made with a newer version of software and cannot be read by this application.J  This operation was not performed because the media could not be mounted.dThis media was created with Microsoft(R) SQL Server(c). The data cannot be used by this application.": 1,
                "section=.rsrc type=utf16le string=-The backup file has an unrecognizable format.>The backup file contains unrecognized data and cannot be used.": 1,
                "section=.rsrc type=utf16le string=Use media name '%s'.": 1,
                "section=.rsrc type=utf16le string=PThe file you specified either doesn't exist or does not contain any backup sets.": 1,
                "section=.rsrc type=utf16le string=Do not verify.": 1,
                "section=.rsrc type=utf16le string=Verify data.  \\eUse set description '%s'.  \"Do not use hardware compression.  \\eUse hardware compression.": 1,
                "section=.rsrc type=utf16le string=Replace data on media.  3Do not restrict access to owner or administrator.  ,Restrict access to owner or administrator.   No valid selections found in %s.$Some invalid selections found in %s.\"Unable to open selections file %s.\\fRestore from": 1,
                "section=.rsrc type=utf16le string=Where to back up": 1,
                "section=.rsrc type=utf16le string=Loading set list from media.!Loading set directory from media.\\tThe media\\tthe drive": 1,
                "section=.rsrc type=utf16le string=Process Aborted": 1,
                "section=.rsrc type=utf16le string=IThe end of the media was reached.  Insert the next media for this backup.3The medium is full.  Please insert the next medium.": 1,
                "section=.rsrc type=utf16le string='Backup set #%d: %s\\nPreviously cataloged3Cataloging file detail information.  Please wait...": 1,
                "section=.rsrc type=utf16le string=Need new media for %s.3Replace the media for %s.\\n\\nDo you want to continue?": 1,
                "section=.rsrc type=utf16le string=Press any key to continue...GThe requested media is not properly inserted.\\n\\nDo you want to continue?": 1,
                "section=.rsrc type=utf16le string=WDo you want to append this backup set? This option will preserve the data on the media.oWarning: All of the data will be replaced.\\n\\nMedia:\\t%s\\n\\tMedia #%d\\nSet #%d:\\t%s\\n\\nDo you want to replace this data?": 1,
                "section=.rsrc type=utf16le string=RThe media in %s is not readable.  It may have been created by another application.": 1,
                "section=.rsrc type=utf16le string=-Searching for the backup set.  Please wait...#Rewinding the tape.  Please wait...": 1,
                "section=.rsrc type=utf16le string=Do you want to continue?": 1,
                "section=.rsrc type=utf16le string=Please insert a new %s for %s.>There is no more data on this media.\\n\\nDo you want to continue?": 1,
                "section=.rsrc type=utf16le string=&Waiting for the drive.  Please wait...\\eBackup started on %s at %s.": 1,
                "section=.rsrc type=utf16le string=Restore started on %s at %s.\\eVerify started on %s at %s.\\tFolder %s&Warning: The file %s in use - skipped.": 1,
                "section=.rsrc type=utf16le string=Backup completed on %s at %s.": 1,
                "section=.rsrc type=utf16le string=Restore completed on %s at %s.": 1,
                "section=.rsrc type=utf16le string=Verify completed on %s at %s.": 1,
                "section=.rsrc type=utf16le string=(Move up one level in tree\\nMove to parent%Display context help for this controlkAn emergency repair disk can repair your system after some kinds of failure\\nCreate an Emergency Repair Disk": 1,
                "section=.rsrc type=utf16le string=!The library door is already open.SCould not unlock the library door. You may have insufficient permission to do this.dOne or more library doors were unlocked. \\r\\n\\r\\nPlease close and lock the doors if they are still open.2One or more of the library doors are already open.\\nFree Media": 1,
                "section=.rsrc type=utf16le string=ONo files are selected. Please select some files to restore, and then try again.": 1,
                "section=.rsrc type=utf16le string=#Unexpected end of backup set in %s.9The requested media is unrecognizable and cannot be read.#Unable to read the requested media.": 1,
                "section=.rsrc type=utf16le string=Original locations": 1,
                "section=.rsrc type=utf16le string=Alternate location\\rSingle folder9Backup name: %s\\nDisk number: %d, or insert the last disk.": 1,
                "section=.rsrc type=utf16le string=Windows Active Directory": 1,
                "section=.rsrc type=utf16le string=\"%s\", media #%dFOnly Administrators and Backup Operators can restore the System State.": 1,
                "section=.rsrc type=utf16le string=Disable Shadow Copy. \\rASR backup.": 1,
                "section=.rsrc type=utf16le string=Media Location": 1,
                "section=.rsrc type=utf16le string=Removable Storage Media Name\\eBackup Identification Label\\aOffline?Cannot eject the media. Media %s already appears to be offline.": 1,
                "section=.rsrc type=utf16le string=The tape could not be ejected.": 1,
                "section=.rsrc type=utf16le string=@WARNING: Media #%d is out of sequence.\\n\\nDo you want to continue?": 1,
                "section=.rsrc type=utf16le string=}WARNING: Portions of \"%s\" cannot be read.  The backed up data is corrupt or incomplete.\\nThis file will not restore correctly.": 1,
                "section=.rsrc type=utf16le string=\\vBlank Media": 1,
                "section=.rsrc type=utf16le string=Unrecognized Media\\tBad Media": 1,
                "section=.rsrc type=utf16le string=Warning: File %s was skipped": 1,
                "section=.rsrc type=utf16le string=No media in the drive.": 1,
                "section=.rsrc type=utf16le string=The drive is busy.": 1,
                "section=.rsrc type=utf16le string=.The saved selection file \"%s\" cannot be found.": 1,
                "section=.rsrc type=utf16le string=Processed %s bytes in \\n %d hour, \\v %d hours,": 1,
                "section=.rsrc type=utf16le string=#The volume \"%s\" is not responding.\\n": 1,
                "section=.rsrc type=utf16le string=DNo files are selected. Please select some files, and then try again.vYou must save the backup selections before you can schedule a backup. Do you want to save your current selections now?uThe backup file name could not be used.\\n\\n\"%s\"\\n\\nPlease ensure it is a valid path, and that you have sufficient access.\u0128Your backup selections have changed since they were last saved or loaded. In order to schedule the current selections, they must be saved again. You should be aware that any other scheduled job using the same saved selections file will be affected. Do you wish to save the updated selections now? blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rsrc type=utf16le string=The backup file does not contain the recovery data set specified by the recovery floppy.  Please correct the file name or insert the correct media.": 1,
                "section=.rsrc type=utf16le string=The operation was ended.": 2,
                "section=.rsrc type=utf16le string=?The requested backup file is unrecognizable and cannot be read.8An inconsistency was encountered on the requested media.": 1,
                "section=.rsrc type=utf16le string=>An inconsistency was encountered in the requested backup file.": 1,
                "section=.rsrc type=utf16le string=UCommand Line Problem: A valid backup operation was not specified on the command line.": 1,
                "section=.rsrc type=utf16le string=)Error(s) were found during the operation.": 1,
                "section=.rsrc type=utf16le string=*\\nThe operation was successfully completed.": 1,
                "section=.rsrc type=utf16le string=Cataloging started on %s at %s.!Cataloging completed on %s at %s.": 1,
                "section=.rsrc type=utf16le string=Media name: \"%s\"\\n": 1,
                "section=.rsrc type=utf16le string=#The destination is write-protected.": 1,
                "section=.rsrc type=utf16le string=Error opening the log file %s.xUnable to write to the requested backup file. The disk may be read-only or you may not have permission to open the file.": 1,
                "section=.rsrc type=utf16le string=Media created DInsert the following media:\\n\\n%s\\nMedia #%d.\\n\\nDo you want to continue?": 1,
                "section=.rsrc type=utf16le string= %d minute, and": 1,
                "section=.rsrc type=utf16le string= %d minutes, and": 1,
                "section=.rsrc type=utf16le string= %d minute and": 1,
                "section=.rsrc type=utf16le string= %d minutes and \\n %d second\\v %d secondsCBackup of \"%s\"\\nBackup set #%d on media #%d\\nBackup description: \"%s\"?The requested media failed to mount. The operation was aborted.": 1,
                "section=.rsrc type=utf16le string=\\n %d days, \\t %d day, RSkipped files in \"%s\" folder. Wildcard characters are not allowed in folder names.": 1,
                "section=.rsrc type=utf16le string=AEnd of Media encountered while backing up to non-removable media.UThe files for the recovery diskette could not be created.  The operation was aborted.": 1,
                "section=.rsrc type=utf16le string=G\\nBackup of \"%s\" %s\\nBackup set #%d on media #%d\\nBackup description: \"%s\"TBackup of \"%s\", Restored to\"%s\"\\nBackup set #%d on media #%d\\nBackup description: \"%s\"": 1,
                "section=.rsrc type=utf16le string=UBackup (via shadow copy) of \"%s\"\\nBackup set #%d on media #%d\\nBackup description: \"%s\"9The database %s must be mounted in order to be backed up.": 1,
                "section=.rsrc type=utf16le string=WARNING:Part of file  '%s' is on a previous media.  Restoring this file may cause loss of data.\\n\\nDo you want to continue to restore this file?": 1,
                "section=.rsrc type=utf16le string=\\bDrive %d": 1,
                "section=.rsrc type=utf16le string=$Invalid command line parameter '%s'.": 1,
                "section=.rsrc type=utf16le string=QAn inconsistency was encountered on the media in %s. Do not append to this media.iUnable to bring the Microsoft Exchange service \\'%s\\' back on line.  Check the event log for more detailshWarning: Unable to set the compression attribute for %s.  This file may not be compressed after restore.3The recovery diskette data file \"%s\" is unreadable.": 1,
                "section=.rsrc type=utf16le string=Usage: The /v switch controls whether the Backup Utility verifies the data after the backup is complete.\\nSpecify /v:yes or /v:no.mUsage: The /r switch restricts access for this tape to the owner or administrators.\\n Specify /r:yes or /r:no.ZUsage: The /hc switch enables or disables hardware compression.\\n Specify /hc:on or /hc:offzUsage: The /snap switch enables or disables the use of a volume shadow copy during backup.\\n Specify /snap:on or /snap:off.{Usage: The /rs switch enables or disables the backup of the Removable Storage Manager database.\\n Specify /rs:on or /rs:off.": 1,
                "section=.rsrc type=utf16le string=Usage: The /l switch controls the creation of backup report files, which are either full (f), summary (s), or none (n).\\n  Specify either /l:f, /l:s, or /l:n.5Usage: Specify a job name for command line switch /j.1Usage: Specify a pool for command line switch /p.1Usage: Specify a GUID for command line switch /g.": 1,
                "section=.rsrc type=utf16le string==Usage: Specify a target tape name for command line switch /t.;Usage: Specify a new media name for command line switch /n.DUsage: Specify a target backup file name for command line switch /f.CUsage: Specify a backup set description for command line switch /d.^Usage: Specify a target Microsoft Exchange directory service file for command line switch /ds.YUsage: Specify a target Microsoft Exchange information store for command line switch /is.": 1,
                "section=.rsrc type=utf16le string=Usage: The /m switch controls the type of backup.\\nThis is either normal, copy, differential, incremental, daily, or compatible.\\n  Specify a backup type.AThe operation failed. Consult the Backup Report for more details.'Expecting more command line parameters.": 1,
                "section=.rsrc type=utf16le string=The password does not match.": 1,
                "section=.rsrc type=utf16le string=.Warning: Unable to open the file %s - skipped.": 1,
                "section=.rsrc type=utf16le string=:Warning: Insufficient privilege for the file %s - skipped.rInsufficient disk space. Verify that you have full access to the working folder and there is disk space available.": 1,
                "section=.rsrc type=utf16le string=Unable to create the file %s.": 1,
                "section=.rsrc type=utf16le string=Unable to create the folder %s.": 1,
                "section=.rsrc type=utf16le string=Error restoring the file %s. Unable to restore the folder %s.": 1,
                "section=.rsrc type=utf16le string=GWARNING: The file %s was restored from an incomplete or corrupt backup.": 1,
                "section=.rsrc type=utf16le string=\\eThe file %s did not verify.": 1,
                "section=.rsrc type=utf16le string=\\nOperation Completed.": 1,
                "section=.rsrc type=utf16le string=!Insert media #%d for this backup.": 1,
                "section=.rsrc type=utf16le string=Some of the files and settings restored require you to restart your computer to complete the restore.\\n\\nDo you want to restart your computer now?@This %s is of the same media set.  Please insert a different %s.cThe requested media is not blank.  It was created by another application.\\n\\nDo you want to continue?1Please check the Removable Storage Management MMC": 1,
                "section=.rsrc type=utf16le string=?Some files were not successfully recovered.  For details see %s": 1,
                "section=.rsrc type=utf16le string=ASR recover aborted by user.": 1,
                "section=.rsrc type=utf16le string=,Backup set #%d: %s was added to the catalog.": 1,
                "section=.rsrc type=utf16le string=D\\nVerify of \"%s\"\\nBackup set #%d on media #%d\\nBackup description: \"%s\"": 1,
                "section=.rsrc type=utf16le string=cTapes in this media set require sequential access.  Please insert the first tape in this media set.": 1,
                "section=.rsrc type=utf16le string=EBackup set #%d: %s\\nPreviously cataloged with file detail information.": 1,
                "section=.rsrc type=utf16le string==File \"%s\" was deleted because it was not completely restored.": 1,
                "section=.rsrc type=utf16le string=\\fInsert Media\\fReplace Data\\vAppend Data\\bContinue": 1,
                "section=.rsrc type=utf16le string=\\aRestore": 2,
                "section=.rsrc type=utf16le string=Backup Utility\\aWarning": 1,
                "section=.rsrc type=utf16le string=Backup\\nScheduling": 1,
                "section=.rsrc type=utf16le string=The requested Removable Storage operation is taking excessive time to complete.  You should use the Microsoft Management Console to determine if a manual \\noperation is being requested by Removable Storage.\\n\\nDo you want to continue to wait?": 1,
                "section=.rsrc type=utf16le string=Backup Device Error": 1,
                "section=.rsrc type=utf16le string=kThe backup device is not responding.  Please check to make sure the device is on, the cables are connected.": 1,
                "section=.rsrc type=utf16le string=Network Neighborhood": 1,
                "section=.rsrc type=utf16le string=Entire Network": 1,
                "section=.rsrc type=utf16le string=Name": 1,
                "section=.rsrc type=utf16le string=Size\\aComment": 1,
                "section=.rsrc type=utf16le string=Type\\bModified\\nTotal Size\\nFree Space": 1,
                "section=.rsrc type=utf16le string=No entries found.gSome files critical for ASR are missing from the REPAIR directory.  The ASR floppy could not be created": 1,
                "section=.rsrc type=utf16le string=%sKB": 1,
                "section=.rsrc type=utf16le string=Tape": 1,
                "section=.rsrc type=utf16le string=Backup": 1,
                "section=.rsrc type=utf16le string=Eject\\aRecover": 1,
                "section=.rsrc type=utf16le string=Copy\\fDifferential\\vIncremental": 1,
                "section=.rsrc type=utf16le string=Daily\\v#Compatible": 1,
                "section=.rsrc type=utf16le string=\\bNTBackup\\tASRBackup": 1,
                "section=.rsrc type=utf16le string=RegisteredOwner": 1,
                "section=.rsrc type=utf16le string=RegisteredOrganization": 1,
                "section=.rsrc type=utf16le string=.HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0\\nIdentifier\\eHARDWARE\\DESCRIPTION\\System,SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\tProductId": 1,
                "section=.rsrc type=utf16le string=Could not access portions of file %s.\\nYou may not have permission to open the file, or the file may be missing or damaged.\\nPlease contact the owner or administrator.\\n\u00b0Could not access portions of directory %s.\\nYou may not have permission to open the file, or the directory may be missing or damaged.\\nPlease contact the owner or administrator.\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Could not access portions of %s.\\nYou may not have permission to write to the file.\\nPlease see the owner or administrator to get permission.\\n": 1,
                "section=.rsrc type=utf16le string=Could not access portions of %s.\\nYou may not have permission to write to the directory.\\nPlease see the owner or administrator to get permission.\\n2Warning: Unable to write data to \"%s\". \\nReason: %s3Warning: Unable to read data from \"%s\". \\nReason: %s3Warning: Unable to open \"%s\" - skipped. \\nReason: %s5Warning: Unable to create \"%s\" - skipped. \\nReason: %s": 1,
                "section=.rsrc type=utf16le string=?Warning: Unable to set the short 8.3 name for \"%s\". \\nReason: %s2Warning: Unable to pause WMI database. \\nReason: %s3Warning: Unable to resume WMI database. \\nReason: %sTThere was an error restoring the database %s, please see the Event Log for details.\\n": 1,
                "section=.rsrc type=utf16le string=\\vApplication": 1,
                "section=.rsrc type=utf16le string=The filename \\\"%s\\\" is invalid.:You must specify a registered type or filename to exclude.,The path must include a drive or share name.": 1,
                "section=.rsrc type=utf16le string=%DS\\nBackup\\nSelection Script\\nSelection Scripts (*.bks)\\n.bks\\nBackup.Script\\nBackup Script": 1,
                "section=.rsrc type=utf16le string=\\fExclude Path4Select the folder where the exclude(s) should apply.\\tthe media": 1,
                "section=.rsrc type=utf16le string=\\b&Add Job": 1,
                "section=.rsrc type=utf16le string=HINT:  To view or edit an existing job, click on the icon corresponding to the job.  To schedule a new job, \\n          click Add Job.  Click the left and right arrows to view the previous and next months.  Click Today \\n          to return to the current month.": 1,
                "section=.rsrc type=utf16le string=For Help, press F1%Select an object on which to get Help": 1,
                "section=.rsrc type=utf16le string=&Create a new Backup Job\\nNew Backup Job+Open an existing Backup Job\\nOpen Backup Job": 1,
                "section=.rsrc type=utf16le string=#Save the active Backup Job\\nSave Job2Save the active Backup Job with a new name\\nSave As": 1,
                "section=.rsrc type=utf16le string=?Display program information, version number and copyright\\nAbout6Quit the application; prompts to save backup jobs\\nExit": 1,
                "section=.rsrc type=utf16le string=List Help topics\\nHelp Topics": 1,
                "section=.rsrc type=utf16le string=/Display instructions about how to use help\\nHelp;Display help for clicked on buttons, menus and windows\\nHelp-Display help for current task or command\\nHelp": 1,
                "section=.rsrc type=utf16le string=Open this Backup Job": 4,
                "section=.rsrc type=utf16le string='Show or hide the toolbar\\nToggle ToolBar,Show or hide the status bar\\nToggle StatusBar": 1,
                "section=.rsrc type=utf16le string=#Error loading selections file '%s'.": 1,
                "section=.rsrc type=utf16le string=\\vMy Computer": 1,
                "section=.rsrc type=utf16le string=Backup\\aCompare/Are you sure you want to cancel this operation?\\aGeneral\\rSchedule Jobs": 1,
                "section=.rsrc type=utf16le string=Display items in a list\\nList": 1,
                "section=.rsrc type=utf16le Display information about each item in the window\\nDetails": 1,
                "section=.rsrc type=utf16le string=%Arrange Icons by Date\\nArrange by Date": 1,
                "section=.rsrc type=utf16le string=%Arrange Icons by Name\\nArrange by Name": 1,
                "section=.rsrc type=utf16le string=%Arrange Icons by Type\\nArrange by Type%Arrange Icons by Size\\nArrange by Size Refresh the current view\\nRefresh/Refresh the current media display\\nRefresh Media": 1,
                "section=.rsrc type=utf16le string=<Wizards will help you create a backup or restore job\\nWizards": 1,
                "section=.rsrc type=utf16le string=Change Options\\nOptions": 1,
                "section=.rsrc type=utf16le string=Start the active job\\nStart Job": 1,
                "section=.rsrc type=utf16le string=+Select the highlighted item(s)\\nSelect items/Deselect the highlighted item(s)\\nDeselect itemsHChoose a version of a file to be Restored\\nSelect file version to Restore": 1,
                "section=.rsrc type=utf16le string=Verify": 1,
                "section=.rsrc type=utf16le string=Always replace": 1,
                "section=.rsrc type=utf16le string=Do not replace": 1,
                "section=.rsrc type=utf16le string=Replace with newer": 1,
                "section=.rsrc type=utf16le string=\\aDesktop": 1,
                "section=.rsrc type=utf16le string=Current File:\\n  %s\\n\\nDo you want to cancel the backup?\\n\\nClick Yes to end the backup now.\\nClick No to continue the backup operation.": 1,
                "section=.rsrc type=utf16le string=Current File:\\n  %s\\n\\nDo you want to cancel the restore?\\n\\nClick Yes to end the restore now.\\nClick No to continue the restore operation.": 1,
                "section=.rsrc type=utf16le string=\\t\\/:?*\"<>|KA job name cannot be blank or contain any of the following characters: \\n\\t%s": 1,
                "section=.rsrc type=utf16le string=#The path name entered is not valid.": 1,
                "section=.rsrc type=utf16le string=)An error occured saving the job \"%s\".\\n\\n%sXFiles and folders are already selected.  Would you like to clear the current selections?": 1,
                "section=.rsrc type=utf16le string=Files and folders for another media are already selected.  Only files from a single media may be selected at one time.  Would you like to clear these previous selections?": 1,
                "section=.rsrc type=utf16le string=gMarking this media as free will delete all of the information on it.\\n\\nAre you sure you want to do this?": 1,
                "section=.rsrc type=utf16le string=About Backup Utility": 1,
                "section=.rsrc type=utf16le string=Deleting this media item will remove all catalogs and information\\nin Removable Storage pertaining to this media.\\n\\nAre you sure you want to delete this media?": 1,
                "section=.rsrc type=utf16le string=Files and folders are already selected.  Would you like to start the Wizard with these selections? Click 'No' to clear these selections before starting the Wizard.": 1,
                "section=.rsrc type=utf16le string=)Insufficient memory to perform operation.": 1,
                "section=.rsrc type=utf16le string=Backup Progress": 1,
                "section=.rsrc type=utf16le string=Restore Progress": 1,
                "section=.rsrc type=utf16le string=Verify Progress": 1,
                "section=.rsrc type=utf16le string=Format\\nRe-tension": 1,
                "section=.rsrc type=utf16le string=\\a%d sec.": 1,
                "section=.rsrc type=utf16le string=%d min., %d sec.": 1,
                "section=.rsrc type=utf16le string=%d hr., %d min.": 1,
                "section=.rsrc type=utf16le string=%d day., %d hr., %d min.\\bCanceled": 1,
                "section=.rsrc type=utf16le string=Scheduled Job Options": 1,
                "section=.rsrc type=utf16le string=Backup Options": 1,
                "section=.rsrc type=utf16le string=Restore Options": 1,
                "section=.rsrc type=utf16le string=\\bFilename\\vDescription": 1,
                "section=.rsrc type=utf16le string=\\a&Format": 1,
                "section=.rsrc type=utf16le string=&Erase\\v&Re-tension": 1,
                "section=.rsrc type=utf16le string=\\r&Mark as Free": 1,
                "section=.rsrc type=utf16le string=&Delete catalog": 1,
                "section=.rsrc type=utf16le string=Move to &Import media": 1,
                "section=.rsrc type=utf16le string=Move to &Backup media\\eDelete catalog from &system\\b&Catalog": 1,
                "section=.rsrc type=utf16le string=Start Jobs Report": 1,
                "section=.rsrc type=utf16le string=End Jobs Report\\tJob Name:": 1,
                "section=.rsrc type=utf16le string=Prompt to replace data.": 1,
                "section=.rsrc type=utf16le string=Start Job Report": 1,
                "section=.rsrc type=utf16le string=End Job Report\"Overwrite media without prompting.": 1,
                "section=.rsrc type=utf16le string=Unattended Action": 1,
                "section=.rsrc type=utf16le string=Overwrite new media.": 1,
                "section=.rsrc type=utf16le string=Product Name =": 1,
                "section=.rsrc type=utf16le string=System Root =": 1,
                "section=.rsrc type=utf16le string=System Drive = \\rBoot Drive =": 1,
                "section=.rsrc type=utf16le string=Computer Name =": 1,
                "section=.rsrc type=utf16le string=\\tVolume =": 1,
                "section=.rsrc type=utf16le string=File System = \\bLabel =": 1,
                "section=.rsrc type=utf16le string=Total Size (KBytes) =": 1,
                "section=.rsrc type=utf16le string=Backup Job Started": 1,
                "section=.rsrc type=utf16le string=Backup Job Ended": 1,
                "section=.rsrc type=utf16le string=Restore Job Started": 1,
                "section=.rsrc type=utf16le string=Restore Job Ended": 1,
                "section=.rsrc type=utf16le string=Compare Job Started": 1,
                "section=.rsrc type=utf16le string=Compare Job Ended": 1,
                "section=.rsrc type=utf16le string=Total Bytes Before Compression": 1,
                "section=.rsrc type=utf16le string=Total Bytes After Compression": 1,
                "section=.rsrc type=utf16le string=Processed File Count": 1,
                "section=.rsrc type=utf16le string=Corrupt File Count": 1,
                "section=.rsrc type=utf16le string=Operation Completed\\fSkipped File": 1,
                "section=.rsrc type=utf16le string=Error\\aWarning\\rCommited File\\vUnknown FID": 1,
                "section=.rsrc type=utf16le string=\\a&Finish": 1,
                "section=.rsrc type=utf16le string=&Start": 1,
                "section=.rsrc type=utf16le string=Scheduled for later&Back up all files on my local drive(s)": 1,
                "section=.rsrc type=utf16le string=Now.Back up only certain files, folders, or drives": 1,
                "section=.rsrc type=utf16le string=\\tVerify on\\nVerify off": 1,
                "section=.rsrc type=utf16le string=Append to my media": 1,
                "section=.rsrc type=utf16le string=Use hardware compression": 1,
                "section=.rsrc type=utf16le string=Do not use hardware compression": 1,
                "section=.rsrc type=utf16le string=Volume": 1,
                "section=.rsrc type=utf16le string=Method\\aSet No.\\aCreated": 1,
                "section=.rsrc type=utf16le string=Set created %s at %s": 1,
                "section=.rsrc type=utf16le string=Original location": 1,
                "section=.rsrc type=utf16le string=Alternate location\\rSingle folder": 1,
                "section=.rsrc type=utf16le string=Target device not found.": 1,
                "section=.rsrc type=utf16le string=Invalid Restore Selection": 1,
                "section=.rsrc type=utf16le string=%sMB": 1,
                "section=.rsrc type=utf16le string=\\nBackup.bkf": 1,
                "section=.rsrc type=utf16le string=bkf0Backup Files (*.bkf)|*.bkf|All Files (*.*)|*.*||": 1,
                "section=.rsrc type=utf16le string=\\tBytes: %s\\bTime: %s\\rOperation: %s": 1,
                "section=.rsrc type=utf16le string=Directories: %d\\tFiles: %d\\vSkipped: %d\\b\\nError: \\n\\nWarning:": 1,
                "section=.rsrc type=utf16le string=$Verify Type: Cyclic Redundancy Check\\eVerify Media: Media to Disk\\nIn Use: %d\\vCorrupt: %d\\rDifferent: %d": 1,
                "section=.rsrc type=utf16le string=Files Not Found: %d": 1,
                "section=.rsrc type=utf16le string=Directories Not Found: %d": 1,
                "section=.rsrc type=utf16le string=Security Different: %d": 1,
                "section=.rsrc type=utf16le string=Operation: Backup": 1,
                "section=.rsrc type=utf16le string=Operation: Restore": 1,
                "section=.rsrc type=utf16le string=Operation: Verify After Backup": 1,
                "section=.rsrc type=utf16le string=Operation: Verify After Restore": 1,
                "section=.rsrc type=utf16le string=?Remote Store helps you connect to Exchange servers\\nRemote Store": 1,
                "section=.rsrc type=utf16le string=Eject the media": 1,
                "section=.rsrc type=utf16le string=Automated System Recovery Preparation helps you prepare for a failure of your system disk\\nAutomated System Recovery PreparationLBackup Wizard guides you through the steps to backup your data\\nBackup WizardORestore Wizard guides you through the steps to restore your data\\nRestore Wizard": 1,
                "section=.rsrc type=utf16le string=Erase the selected media": 1,
                "section=.rsrc type=utf16le string=Re-tension the selected media,Make the selected media available for re-use": 1,
                "section=.rsrc type=utf16le string=Format the selected media*Delete the catalogs for the selected media": 1,
                "section=.rsrc type=utf16le string=Re-catalog the backup set1Select a log file report to view or print\\nReportsFCatalog a known file, or add a new file to the catalogs\\nCatalog a file": 1,
                "section=.rsrc type=utf16le string=\\aUnknown\u00a7The starting time and date is set earlier than the current system \\ntime.  This job will never be started by the Task Scheduler.\\n\\nDo you want to set a later start time? blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=You must enter a job name.": 1,
                "section=.rsrc type=utf16le string=Import\\fUnrecognized": 1,
                "section=.rsrc type=utf16le string=Z  The operation was not performed because an append operation was requested for new media.S  The operation was not performed because both overwrite and append were specified.O  The operation was not performed because a non-unique tape name was specified.M  The operation was not performed because an invalid tape name was specified.S  The operation was not performed because more than one target media was specified.I  The operation was not performed because no storage media was specified.N  The operation was not performed because the specified media cannot be found.": 1,
                "section=.rsrc type=utf16le string=Z  The operation was not performed because an invalid Removable Storage GUID was specified.h  The operation was not performed because an invalid Removable Storage backup destination was specified.": 1,
                "section=.rsrc type=utf16le string=:Backs up selected files, and marks each file as backed up.<Backs up selected files, but does not mark any as backed up.}Backs up selected files only if they were created or modified since the previous backup, but does not mark them as backed up.XBacks up selected files only if they were created or modified since the previous backup.8Backs up only files that were created or modified today.\\fSchedule Job\u0120Not using the catalogs on the media may cause restore selections to take substantially longer to complete. You should only turn this option off if you need to restore data from a multi-media set where one or more media is damaged or missing.\\n\\nAre you sure you want to disable this option?\\b%s at %s;Select the folder in which your file data will be restored.#Select the desired computer system.\\fRestore Path\\rSelect System\\eTension operation started.\\n blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rsrc type=utf16le string=Format operation started.\\n": 1,
                "section=.rsrc type=utf16le string=Erase operation started.\\n": 1,
                "section=.rsrc type=utf16le string=yThe current media is full and there is no more free media.\\nPlease add media or click Cancel to stop the backup operation.\u0104The current media is full and there is no more free media.\\nThe following unrecognized media has been found:\\n\\n\"%s\" in location \"%s\"\\n\\nDo you want to use this media now?\\n\\nWarning: This will erase any information that may have been recorded by another application. blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rsrc type=utf16le string=The current media is full and there is no more free media.\\nThe following media has been found:\\n\\n\"%s\" in location \"%s\"\\n\\nDo you want to use this media now?": 2,
                "section=.rsrc type=utf16le string=Files and directories are selected for restore. The Backup Utility cannot restore both Exchange data and regular file data in the same operation\\n\\nDo you wish to clear the previous file selections?\u00bfExchange data is selected for restore. The Backup Utility cannot restore both Exchange data and regular file data in the same operation\\n\\nDo you wish to clear the previous Exchange selections? blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Back up only the system state.\\n": 1,
                "section=.rsrc type=utf16le string=One or more of the scheduled backup jobs shown on this page are triggered by a system event such as startup, log on, or a long idle period.  These jobs are represented by icons shown in the bottom, right edge grid.\\r System Event": 1,
                "section=.rsrc type=utf16le string=\\aVerdana": 1,
                "section=.rsrc type=utf16le string=Backup Destination3Where would you like the system backup to be saved?": 1,
                "section=.rsrc type=utf16le string=Data Recovery Source": 1,
                "section=.rsrc type=utf16le From what backup file do you wish to recover the system?": 1,
                "section=.rsrc type=utf16le string=What to Recover!What data do you want to recover?": 1,
                "section=.rsrc type=utf16le string=What to Back Up.You can specify the items you want to back up.": 1,
                "section=.rsrc type=utf16le string=Items to Back Up=You can back up any combination of drives, folders, or files.\"Backup Type, Destination, and NameBYour files and settings are stored in the destination you specify.": 1,
                "section=.rsrc type=utf16le string=Type of Backup7You can choose the type of backup that fits your needs.": 1,
                "section=.rsrc type=utf16le string=How to Back UpCYou can specify verification, compression, and shadow copy options.": 1,
                "section=.rsrc type=utf16le string=Backup OptionsWYou can specify whether to overwrite data, and whether to restrict access to your data.": 1,
                "section=.rsrc type=utf16le string=When to Back Up4You can run the backup now or schedule it for later.": 1,
                "section=.rsrc type=utf16le string=What to Restore=You can restore any combination of drives, folders, or files.": 1,
                "section=.rsrc type=utf16le string=Where to RestoreKThe selected files and folders are restored to the destination you specify.": 1,
                "section=.rsrc type=utf16le string=How to RestoreOYou can choose how you want to restore files that are already on your computer.": 1,
                "section=.rsrc type=utf16le string=\"Restore Exchange Directory ServiceMSpecify how to restore the selected backup of the Exchange Directory Service.\"Restore Exchange Information StoreMSpecify how to restore the selected backup of the Exchange Information Store.\\fBackup Label=You need a label for the backup and the medium you are using.": 1,
                "section=.rsrc type=utf16le string=;You can choose to restore security or special system files.\\aWelcome\u00a9The backup file is either damaged or could not be found.\\n\\nYou can attempt to catalog the contents of a damaged backup by turning off the option to use on-media catalogs.\u00c5Remove the diskette, and label it as shown:\\n\\nWindows Automated System Recovery Disk for %s\\n\\nKeep it in a safe place in case your system needs to be restored using Windows Automated System Recovery. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=Multiple schedule times": 1,
                "section=.rsrc type=utf16le string=%S3%s is not a valid drive, or you do not have access.": 1,
                "section=.rsrc type=utf16le string=Drive %s is empty.qPath specification is not allowed when creating an Automated System Recovery save set.\\n     Path specified: \"%s\"\\n": 1,
                "section=.rsrc type=utf16le string=Creating an Automated System Recovery save set requires you to specify a directory where the recovery information file will be saved.": 1,
                "section=.rsrc type=utf16le string=Automated System Recover save sets must be created using the \"normal\" backup type. Ignoring command-line specification of backup type.": 1,
                "section=.rsrc type=utf16le string=\\vSystemState": 1,
                "section=.rsrc type=utf16le string=The system state cannot be restored while the Active Directory service is running.\\n\\nYou must first re-boot and select the advanced startup option \"Directory Services Restore Mode\" before restoring the system state on this computer.": 1,
                "section=.rsrc type=utf16le string=Not all system state data will be restored when re-directed to an alternate location. This is an advanced restore option which may aid in recovering specific damaged system files.GThis program was unable to restart the system. You must do so manually.": 1,
                "section=.rsrc type=utf16le string=The ASR Preparation wizard helps you create a two-part backup of your system: a floppy disk that has your system settings, and other media that contains a backup of your local system partition.|You must be logged in using an account which has backup and restore privileges on this system in order to use this function.lRestoring System State will always overwrite current System State unless restoring to an alternate location.": 1,
                "section=.rsrc type=utf16le string=The Backup Utility ran out of disk space creating the catalog files for the media. Try deleting some files and restart the catalog operation.\u0129The Backup Utility ran out of disk space creating the catalog files for the media.\\n\\nThe backup operation will continue, and should succeed. If you need to restore data from this backup, you will first need to ensure that there's sufficient free disk space for the catalogs, then catalog the media.JUnable to create the log path. Check to make sure that it is a valid path.?The database does not exist on the server selected for restore.3The database on the restore server must be mounted. blocks=Basic Latin,Latin Extended-A": 1,
                "arch     x86": 1,
                "binsz    1200640": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x0012f5ea": 1,
                "compiled Sun Apr 13 19:34:12 2008": 1,
                "crypto   false": 1,
                "dbg_file ntbackup.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x0012a00d": 1,
                "guid     7A296957973C4FC1A8CD490ABCD893AC1": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   true": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows GUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x3": 1,
                "TimeDateStamp : 0x48025224": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x10f": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0xdb000": 1,
                "SizeOfInitializedData : 0x58e00": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0xdc000": 1,
                "ImageBase : 0x1000000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x135000": 1,
                "SizeOfHeaders : 0x600": 1,
                "CheckSum : 0x12a00d": 1,
                "Subsystem : 0x2": 1,
                "DllCharacteristics : 0x8000": 1,
                "SizeOfStackReserve : 0x40000": 1,
                "SizeOfStackCommit : 0x13880": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0xd8bd0": 1,
                "Size : 0x1e0": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0xef000": 1,
                "Size : 0x45e10": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x2020": 1,
                "Size : 0x1c": 1,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0x131d8": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT": 1,
                "VirtualAddress : 0x258": 1,
                "Size : 0x1d4": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x1000": 1,
                "Size : 0x1020": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "mfc42u.dll": 1,
                "msvcrt.dll": 1,
                "advapi32.dll": 1,
                "kernel32.dll": 1,
                "gdi32.dll": 1,
                "user32.dll": 1,
                "ntdll.dll": 1,
                "comctl32.dll": 1,
                "shell32.dll": 1,
                "mpr.dll": 1,
                "comdlg32.dll": 1,
                "netapi32.dll": 1,
                "rpcrt4.dll": 1,
                "ole32.dll": 1,
                "setupapi.dll": 1,
                "userenv.dll": 1,
                "ntmsapi.dll": 1,
                "clusapi.dll": 1,
                "query.dll": 1,
                "sfc_os.dll": 1,
                "syssetup.dll": 1,
                "oleaut32.dll": 1,
                "vssapi.dll": 1,
                "1200640": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x1": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: Windows Backup Utility": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2111)": 1,
                "InternalName: NTBackup.Exe": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: NTBackup.Exe": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}