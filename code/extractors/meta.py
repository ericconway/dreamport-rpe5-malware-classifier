import collections
import re
import subprocess

__version__ = '0.1'
__enabled__ = True


# TODO text files: line ending, encoding, indentation none/tab/space/mixed, commenting, keywords for javascript/html, base64


def run(filepath='', fileinfo=None, **kwargs):
    print("%s.run(%s, %s, %s)"%(__name__, filepath, fileinfo, kwargs))
    features = collections.Counter()
    proc = subprocess.Popen(['rabin2', '-g', filepath], stdout=subprocess.PIPE)
    for line in proc.stdout.readlines():
        line = line.decode('utf-8', errors='replace').strip()

        # skip headers
        if line.startswith('[') and line.endswith(']'):
            continue

        # skip summaries
        if re.match('^[0-9]* [a-z]*$', line):
            continue

        # skip ascii strings (those are extracted by a different plugin)
        if 'type=ascii string=' in line:
            continue

        # remove numbers (addresses and offsets are too fragile and position dependent)
        line = re.sub('[a-z]+=0x[a-f0-9]+', '', line)
        line = re.sub('[a-z]+=[0-9]+', '', line)
        line = line.strip()

        # skip redundant imports
        line = line.replace('type=FUNC name=imp.', 'type=FUNC name=')
        line = line.replace('fwd=  bind', 'bind')
        if line.startswith('type=SET_32 ') and '.dll' in line.lower():
            line = line.replace('type=SET_32 ', 'bind=NONE type=FUNC name=')

        # skip empty lines
        if not line:
            continue

        features[line] += 1

    return features
